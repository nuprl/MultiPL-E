language: sh
name: HumanEval_26_remove_duplicates
results:
- exit_code: 1
  program: "#!/bin/bash\n# From a list of integers, remove all elements that occur\
    \ more than once.\n# Keep order of elements left the same as in the input.\n#\n\
    # $1 is a space-separated list\nremove_duplicates() {\n  local input=\"$1\"\n\
    \  local output=\"\"\n  local seen=\"\"\n  for i in $input; do\n    if [[ $seen\
    \ != *\"$i\"* ]]; then\n      output=\"$output $i\"\n      seen=\"$seen $i\"\n\
    \    fi\n  done\n  echo \"$output\"\n}\n\ncandidate() {\n    remove_duplicates\
    \ \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"\") = \"\" ]]\n    [[\
    \ $(candidate \"1 2 3 4\") = \"1 2 3 4\" ]]\n    [[ $(candidate \"1 2 3 2 4 3\
    \ 5\") = \"1 4 5\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660002814
- exit_code: 1
  program: "#!/bin/bash\n# From a list of integers, remove all elements that occur\
    \ more than once.\n# Keep order of elements left the same as in the input.\n#\n\
    # $1 is a space-separated list\nremove_duplicates() {\n  local input=\"$1\"\n\
    \  local output=\"\"\n  local seen=\"\"\n  for i in $input; do\n    if [[ -z \"\
    ${seen[$i]}\" ]]; then\n      seen[$i]=1\n      output=\"$output $i\"\n    fi\n\
    \  done\n  echo \"$output\"\n}\n\ncandidate() {\n    remove_duplicates \"$@\"\n\
    }\n\nset -e\nrun_test() {\n    [[ $(candidate \"\") = \"\" ]]\n    [[ $(candidate\
    \ \"1 2 3 4\") = \"1 2 3 4\" ]]\n    [[ $(candidate \"1 2 3 2 4 3 5\") = \"1 4\
    \ 5\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660002814
- exit_code: 1
  program: "#!/bin/bash\n# From a list of integers, remove all elements that occur\
    \ more than once.\n# Keep order of elements left the same as in the input.\n#\n\
    # $1 is a space-separated list\nremove_duplicates() {\n    local list=$1\n   \
    \ local result=\"\"\n    local element=\"\"\n    for element in $list; do\n  \
    \      if ! contains \"$result\" \"$element\"; then\n            result=\"$result\
    \ $element\"\n        fi\n    done\n    echo \"$result\"\n}\n\ncandidate() {\n\
    \    remove_duplicates \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"\
    \") = \"\" ]]\n    [[ $(candidate \"1 2 3 4\") = \"1 2 3 4\" ]]\n    [[ $(candidate\
    \ \"1 2 3 2 4 3 5\") = \"1 4 5\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: '/tmp/tmpjbcpwc5n.sh: line 11: contains: command not found

    /tmp/tmpjbcpwc5n.sh: line 11: contains: command not found

    /tmp/tmpjbcpwc5n.sh: line 11: contains: command not found

    /tmp/tmpjbcpwc5n.sh: line 11: contains: command not found

    '
  stdout: ''
  timestamp: 1660002814
- exit_code: 1
  program: "#!/bin/bash\n# From a list of integers, remove all elements that occur\
    \ more than once.\n# Keep order of elements left the same as in the input.\n#\n\
    # $1 is a space-separated list\nremove_duplicates() {\n    local input=\"$1\"\n\
    \    local output=\"\"\n    local list=\"\"\n    local i=\"\"\n    for i in $input;\
    \ do\n        if ! [[ \"$list\" =~ \"$i\" ]]; then\n            list=\"$list $i\"\
    \n            output=\"$output $i\"\n        fi\n    done\n    echo \"$output\"\
    \n}\n\ncandidate() {\n    remove_duplicates \"$@\"\n}\n\nset -e\nrun_test() {\n\
    \    [[ $(candidate \"\") = \"\" ]]\n    [[ $(candidate \"1 2 3 4\") = \"1 2 3\
    \ 4\" ]]\n    [[ $(candidate \"1 2 3 2 4 3 5\") = \"1 4 5\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660002814
- exit_code: 1
  program: "#!/bin/bash\n# From a list of integers, remove all elements that occur\
    \ more than once.\n# Keep order of elements left the same as in the input.\n#\n\
    # $1 is a space-separated list\nremove_duplicates() {\n    local -a array=($1)\n\
    \    local -a unique\n    local -a duplicates\n    local i\n    for i in \"${array[@]}\"\
    ; do\n        if [[ \" ${unique[*]} \" == *\" $i \"* ]]; then\n            duplicates+=($i)\n\
    \        else\n            unique+=($i)\n        fi\n    done\n    echo \"${unique[@]}\"\
    \n}\n\ncandidate() {\n    remove_duplicates \"$@\"\n}\n\nset -e\nrun_test() {\n\
    \    [[ $(candidate \"\") = \"\" ]]\n    [[ $(candidate \"1 2 3 4\") = \"1 2 3\
    \ 4\" ]]\n    [[ $(candidate \"1 2 3 2 4 3 5\") = \"1 4 5\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660002814
- exit_code: 1
  program: "#!/bin/bash\n# From a list of integers, remove all elements that occur\
    \ more than once.\n# Keep order of elements left the same as in the input.\n#\n\
    # $1 is a space-separated list\nremove_duplicates() {\n  local list=$1\n  local\
    \ result=\"\"\n  local elem=\"\"\n  for elem in $list; do\n    if [[ $result !=\
    \ *\" $elem \"* ]]; then\n      result=\"$result $elem\"\n    fi\n  done\n  echo\
    \ \"$result\"\n}\n\ncandidate() {\n    remove_duplicates \"$@\"\n}\n\nset -e\n\
    run_test() {\n    [[ $(candidate \"\") = \"\" ]]\n    [[ $(candidate \"1 2 3 4\"\
    ) = \"1 2 3 4\" ]]\n    [[ $(candidate \"1 2 3 2 4 3 5\") = \"1 4 5\" ]]\n}\n\n\
    run_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660002814
- exit_code: 1
  program: "#!/bin/bash\n# From a list of integers, remove all elements that occur\
    \ more than once.\n# Keep order of elements left the same as in the input.\n#\n\
    # $1 is a space-separated list\nremove_duplicates() {\n  local input=\"$1\"\n\
    \  local output=\"\"\n  local seen=\"\"\n  for i in $input; do\n    if [[ \"$seen\"\
    \ == *\" $i \"* ]]; then\n      continue\n    fi\n    output=\"$output $i\"\n\
    \    seen=\"$seen $i \"\n  done\n  echo \"$output\"\n}\n\ncandidate() {\n    remove_duplicates\
    \ \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"\") = \"\" ]]\n    [[\
    \ $(candidate \"1 2 3 4\") = \"1 2 3 4\" ]]\n    [[ $(candidate \"1 2 3 2 4 3\
    \ 5\") = \"1 4 5\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660002814
- exit_code: 1
  program: "#!/bin/bash\n# From a list of integers, remove all elements that occur\
    \ more than once.\n# Keep order of elements left the same as in the input.\n#\n\
    # $1 is a space-separated list\nremove_duplicates() {\n    local input=\"$1\"\n\
    \    local output=\"\"\n    local seen=\"\"\n    for i in $input; do\n       \
    \ if [[ \"$seen\" != *\"$i\"* ]]; then\n            output=\"$output $i\"\n  \
    \          seen=\"$seen $i\"\n        fi\n    done\n    echo \"$output\"\n}\n\n\
    candidate() {\n    remove_duplicates \"$@\"\n}\n\nset -e\nrun_test() {\n    [[\
    \ $(candidate \"\") = \"\" ]]\n    [[ $(candidate \"1 2 3 4\") = \"1 2 3 4\" ]]\n\
    \    [[ $(candidate \"1 2 3 2 4 3 5\") = \"1 4 5\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660002814
- exit_code: 1
  program: "#!/bin/bash\n# From a list of integers, remove all elements that occur\
    \ more than once.\n# Keep order of elements left the same as in the input.\n#\n\
    # $1 is a space-separated list\nremove_duplicates() {\n    local list=\"$1\"\n\
    \    local -a seen=()\n    local -a result=()\n    for item in $list; do\n   \
    \     if [[ \" ${seen[*]} \" == *\" $item \"* ]]; then\n            continue\n\
    \        fi\n        seen+=($item)\n        result+=($item)\n    done\n    echo\
    \ \"${result[@]}\"\n}\n\ncandidate() {\n    remove_duplicates \"$@\"\n}\n\nset\
    \ -e\nrun_test() {\n    [[ $(candidate \"\") = \"\" ]]\n    [[ $(candidate \"\
    1 2 3 4\") = \"1 2 3 4\" ]]\n    [[ $(candidate \"1 2 3 2 4 3 5\") = \"1 4 5\"\
    \ ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660002814
- exit_code: 1
  program: "#!/bin/bash\n# From a list of integers, remove all elements that occur\
    \ more than once.\n# Keep order of elements left the same as in the input.\n#\n\
    # $1 is a space-separated list\nremove_duplicates() {\n    local input=$1\n  \
    \  local output=\"\"\n    local i\n    local j\n    local found\n    for i in\
    \ $input; do\n        found=0\n        for j in $output; do\n            if [\
    \ $i -eq $j ]; then\n                found=1\n                break\n        \
    \    fi\n        done\n        if [ $found -eq 0 ]; then\n            output=\"\
    $output $i\"\n        fi\n    done\n    echo $output\n}\n\ncandidate() {\n   \
    \ remove_duplicates \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"\"\
    ) = \"\" ]]\n    [[ $(candidate \"1 2 3 4\") = \"1 2 3 4\" ]]\n    [[ $(candidate\
    \ \"1 2 3 2 4 3 5\") = \"1 4 5\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660002814
- exit_code: 1
  program: "#!/bin/bash\n# From a list of integers, remove all elements that occur\
    \ more than once.\n# Keep order of elements left the same as in the input.\n#\n\
    # $1 is a space-separated list\nremove_duplicates() {\n  local -a arr=()\n  local\
    \ -a seen=()\n  local -a result=()\n  local i\n  local elem\n\n  # Convert input\
    \ to array\n  IFS=' ' read -r -a arr <<< \"$1\"\n\n  for i in \"${arr[@]}\"; do\n\
    \    if [[ ! \" ${seen[@]} \" =~ \" ${i} \" ]]; then\n      seen+=(\"$i\")\n \
    \     result+=(\"$i\")\n    fi\n  done\n\n  # Convert array to string\n  IFS='\
    \ ' read -r -a result <<< \"${result[*]}\"\n  echo \"${result[*]}\"\n}\n\ncandidate()\
    \ {\n    remove_duplicates \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate\
    \ \"\") = \"\" ]]\n    [[ $(candidate \"1 2 3 4\") = \"1 2 3 4\" ]]\n    [[ $(candidate\
    \ \"1 2 3 2 4 3 5\") = \"1 4 5\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660002814
- exit_code: 1
  program: "#!/bin/bash\n# From a list of integers, remove all elements that occur\
    \ more than once.\n# Keep order of elements left the same as in the input.\n#\n\
    # $1 is a space-separated list\nremove_duplicates() {\n    local input=$1\n  \
    \  local output=\"\"\n    local i=0\n    local j=0\n    local k=0\n    local n=0\n\
    \    local found=0\n    local len=0\n    local tmp=0\n    local tmp2=0\n    local\
    \ tmp3=0\n    local tmp4=0\n    local tmp5=0\n    local tmp6=0\n    local tmp7=0\n\
    \    local tmp8=0\n    local tmp9=0\n    local tmp10=0\n    local tmp11=0\n  \
    \  local tmp12=0\n    local tmp13=0\n    local tmp14=0\n    local tmp15=0\n  \
    \  local tmp16=0\n    local tmp17=0\n    local tmp18=0\n    local tmp19=0\n  \
    \  local tmp20=0\n    local tmp21=0\n    local tmp22=0\n    local tmp23=0\n  \
    \  local tmp24=0\n    local tmp25=0\n    local tmp26=0\n    local tmp27=0\n  \
    \  local tmp28=0\n    local tmp29=0\n    local tmp30=0\n    local tmp31=0\n  \
    \  local tmp32=0\n    local tmp33=0\n    local tmp34=0\n    local tmp35=0\n  \
    \  local tmp36=0\n    local tmp37=0\n    local tmp38=0\n    local tmp39=0\n  \
    \  local tmp40=0\n    local tmp41=0\n    local tmp42=0\n    local tmp43=0\n  \
    \  local tmp44=0\n    local tmp45=0\n    local tmp46=0\n    local tmp47=0\n  \
    \  local tmp48=0\n    local tmp49=0\n    local tmp50=0\n    local tmp51=0\n  \
    \  local tmp52=0\n    local tmp53=0\n    local tmp54=0\n    local tmp55=0\n  \
    \  local tmp56=0\n    local tmp57=0\n    local tmp58=0\n    local tmp59=0\n  \
    \  local tmp60=0\n    local tmp61=0\n    local tmp62=0\n    local tmp63=0\n  \
    \  local tmp64=0\n    local tmp65=0\n    local tmp66=0\n    local tmp\n}\n\ncandidate()\
    \ {\n    remove_duplicates \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate\
    \ \"\") = \"\" ]]\n    [[ $(candidate \"1 2 3 4\") = \"1 2 3 4\" ]]\n    [[ $(candidate\
    \ \"1 2 3 2 4 3 5\") = \"1 4 5\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660002814
- exit_code: 1
  program: "#!/bin/bash\n# From a list of integers, remove all elements that occur\
    \ more than once.\n# Keep order of elements left the same as in the input.\n#\n\
    # $1 is a space-separated list\nremove_duplicates() {\n  local list=\"$1\"\n \
    \ local seen=\"\"\n  local item=\"\"\n  for item in $list; do\n    if [[ \"$seen\"\
    \ != *\" $item \"* ]]; then\n      seen=\"$seen $item \"\n      echo -n \"$item\
    \ \"\n    fi\n  done\n}\n\ncandidate() {\n    remove_duplicates \"$@\"\n}\n\n\
    set -e\nrun_test() {\n    [[ $(candidate \"\") = \"\" ]]\n    [[ $(candidate \"\
    1 2 3 4\") = \"1 2 3 4\" ]]\n    [[ $(candidate \"1 2 3 2 4 3 5\") = \"1 4 5\"\
    \ ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660002814
- exit_code: 1
  program: "#!/bin/bash\n# From a list of integers, remove all elements that occur\
    \ more than once.\n# Keep order of elements left the same as in the input.\n#\n\
    # $1 is a space-separated list\nremove_duplicates() {\n  local list=\"$1\"\n \
    \ local new_list=\"\"\n  local elem\n  for elem in $list; do\n    if [[ $new_list\
    \ != *\" $elem \"* ]]; then\n      new_list=\"$new_list $elem\"\n    fi\n  done\n\
    \  echo \"$new_list\"\n}\n\ncandidate() {\n    remove_duplicates \"$@\"\n}\n\n\
    set -e\nrun_test() {\n    [[ $(candidate \"\") = \"\" ]]\n    [[ $(candidate \"\
    1 2 3 4\") = \"1 2 3 4\" ]]\n    [[ $(candidate \"1 2 3 2 4 3 5\") = \"1 4 5\"\
    \ ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660002814
- exit_code: 1
  program: "#!/bin/bash\n# From a list of integers, remove all elements that occur\
    \ more than once.\n# Keep order of elements left the same as in the input.\n#\n\
    # $1 is a space-separated list\nremove_duplicates() {\n  local list=\"$1\"\n \
    \ local seen=\"\"\n  local out=\"\"\n  local item=\"\"\n  for item in $list; do\n\
    \    if ! echo \"$seen\" | grep -q \"$item\"; then\n      seen=\"$seen $item\"\
    \n      out=\"$out $item\"\n    fi\n  done\n  echo \"$out\"\n}\n\ncandidate()\
    \ {\n    remove_duplicates \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate\
    \ \"\") = \"\" ]]\n    [[ $(candidate \"1 2 3 4\") = \"1 2 3 4\" ]]\n    [[ $(candidate\
    \ \"1 2 3 2 4 3 5\") = \"1 4 5\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660002814
- exit_code: 1
  program: "#!/bin/bash\n# From a list of integers, remove all elements that occur\
    \ more than once.\n# Keep order of elements left the same as in the input.\n#\n\
    # $1 is a space-separated list\nremove_duplicates() {\n    local -a list=($1)\n\
    \    local -a unique\n    local -a duplicates\n    local i\n    for i in \"${list[@]}\"\
    ; do\n        if [[ \" ${unique[*]} \" == *\" $i \"* ]]; then\n            duplicates+=($i)\n\
    \        else\n            unique+=($i)\n        fi\n    done\n    echo \"${unique[@]}\"\
    \n}\n\ncandidate() {\n    remove_duplicates \"$@\"\n}\n\nset -e\nrun_test() {\n\
    \    [[ $(candidate \"\") = \"\" ]]\n    [[ $(candidate \"1 2 3 4\") = \"1 2 3\
    \ 4\" ]]\n    [[ $(candidate \"1 2 3 2 4 3 5\") = \"1 4 5\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660002814
- exit_code: 1
  program: "#!/bin/bash\n# From a list of integers, remove all elements that occur\
    \ more than once.\n# Keep order of elements left the same as in the input.\n#\n\
    # $1 is a space-separated list\nremove_duplicates() {\n    local list=\"$1\"\n\
    \    local uniq=\"\"\n    local i\n    for i in $list; do\n        if [[ $uniq\
    \ != *\" $i \"* ]]; then\n            uniq=\"$uniq $i\"\n        fi\n    done\n\
    \    echo \"$uniq\"\n}\n\ncandidate() {\n    remove_duplicates \"$@\"\n}\n\nset\
    \ -e\nrun_test() {\n    [[ $(candidate \"\") = \"\" ]]\n    [[ $(candidate \"\
    1 2 3 4\") = \"1 2 3 4\" ]]\n    [[ $(candidate \"1 2 3 2 4 3 5\") = \"1 4 5\"\
    \ ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660002814
- exit_code: 1
  program: "#!/bin/bash\n# From a list of integers, remove all elements that occur\
    \ more than once.\n# Keep order of elements left the same as in the input.\n#\n\
    # $1 is a space-separated list\nremove_duplicates() {\n  local list=\"$1\"\n \
    \ local seen=\"\"\n  local item\n  for item in $list; do\n    if ! [[ $seen =~\
    \ $item ]]; then\n      seen=\"$seen $item\"\n    fi\n  done\n  echo $seen\n}\n\
    \ncandidate() {\n    remove_duplicates \"$@\"\n}\n\nset -e\nrun_test() {\n   \
    \ [[ $(candidate \"\") = \"\" ]]\n    [[ $(candidate \"1 2 3 4\") = \"1 2 3 4\"\
    \ ]]\n    [[ $(candidate \"1 2 3 2 4 3 5\") = \"1 4 5\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660002814
- exit_code: 1
  program: "#!/bin/bash\n# From a list of integers, remove all elements that occur\
    \ more than once.\n# Keep order of elements left the same as in the input.\n#\n\
    # $1 is a space-separated list\nremove_duplicates() {\n    local list=\"$1\"\n\
    \    local seen=()\n    local out=()\n    for i in $list; do\n        if [[ \"\
    ${seen[$i]}\" ]]; then\n            continue\n        fi\n        seen[$i]=1\n\
    \        out+=($i)\n    done\n    echo \"${out[@]}\"\n}\n\ncandidate() {\n   \
    \ remove_duplicates \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"\"\
    ) = \"\" ]]\n    [[ $(candidate \"1 2 3 4\") = \"1 2 3 4\" ]]\n    [[ $(candidate\
    \ \"1 2 3 2 4 3 5\") = \"1 4 5\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660002814
- exit_code: 1
  program: "#!/bin/bash\n# From a list of integers, remove all elements that occur\
    \ more than once.\n# Keep order of elements left the same as in the input.\n#\n\
    # $1 is a space-separated list\nremove_duplicates() {\n  local input=$1\n  local\
    \ output=\"\"\n  local i=0\n  local j=0\n  local k=0\n  local n=0\n  local m=0\n\
    \  local tmp=\"\"\n  local tmp2=\"\"\n  local tmp3=\"\"\n  local tmp4=\"\"\n \
    \ local tmp5=\"\"\n  local tmp6=\"\"\n  local tmp7=\"\"\n  local tmp8=\"\"\n \
    \ local tmp9=\"\"\n  local tmp10=\"\"\n  local tmp11=\"\"\n  local tmp12=\"\"\n\
    \  local tmp13=\"\"\n  local tmp14=\"\"\n  local tmp15=\"\"\n  local tmp16=\"\"\
    \n  local tmp17=\"\"\n  local tmp18=\"\"\n  local tmp19=\"\"\n  local tmp20=\"\
    \"\n  local tmp21=\"\"\n  local tmp22=\"\"\n  local tmp23=\"\"\n  local tmp24=\"\
    \"\n  local tmp25=\"\"\n  local tmp26=\"\"\n  local tmp27=\"\"\n  local tmp28=\"\
    \"\n  local tmp29=\"\"\n  local tmp30=\"\"\n  local tmp31=\"\"\n  local tmp32=\"\
    \"\n  local tmp33=\"\"\n  local tmp34=\"\"\n  local tmp35=\"\"\n  local tmp36=\"\
    \"\n  local tmp37=\"\"\n  local tmp38=\"\"\n  local tmp39=\"\"\n  local tmp40=\"\
    \"\n  local tmp41=\"\"\n  local tmp42=\"\"\n  local tmp43=\"\"\n  local tmp44=\"\
    \"\n  local tmp45=\"\"\n  local tmp46=\"\"\n  local tmp47=\"\"\n  local tmp48=\"\
    \"\n  local tmp49=\"\"\n  local tmp50=\"\"\n  local tmp51=\"\"\n  local tmp52=\"\
    \"\n  local tmp53=\"\"\n  local tmp54=\"\"\n  local tmp55=\"\"\n  local tmp56=\"\
    \"\n  local tmp57=\"\"\n  local tmp58=\"\"\n  local tmp59=\"\"\n  local tmp60=\"\
    \"\n  local tmp61=\"\"\n  local tmp62=\"\"\n  local tmp63=\"\"\n  local tmp64=\"\
    \"\n  local tmp65=\"\"\n  local tmp66=\"\"\n  local tmp67=\"\"\n  local tmp68=\"\
    \"\n  local tmp69=\"\"\n  local tmp70=\"\"\n  local tmp71=\"\"\n  local tmp72=\"\
    \"\n  local tmp73=\"\"\n  local tmp74=\"\"\n  local tmp75=\"\"\n  local tmp76=\"\
    \"\n  local tmp77=\"\"\n  local tmp78=\"\"\n  local tmp\n}\n\ncandidate() {\n\
    \    remove_duplicates \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"\
    \") = \"\" ]]\n    [[ $(candidate \"1 2 3 4\") = \"1 2 3 4\" ]]\n    [[ $(candidate\
    \ \"1 2 3 2 4 3 5\") = \"1 4 5\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660002814
- exit_code: 1
  program: "#!/bin/bash\n# From a list of integers, remove all elements that occur\
    \ more than once.\n# Keep order of elements left the same as in the input.\n#\n\
    # $1 is a space-separated list\nremove_duplicates() {\n  local input=$1\n  local\
    \ output=()\n  for i in $input; do\n    if [[ ! \" ${output[@]} \" =~ \" ${i}\
    \ \" ]]; then\n      output+=($i)\n    fi\n  done\n  echo \"${output[@]}\"\n}\n\
    \ncandidate() {\n    remove_duplicates \"$@\"\n}\n\nset -e\nrun_test() {\n   \
    \ [[ $(candidate \"\") = \"\" ]]\n    [[ $(candidate \"1 2 3 4\") = \"1 2 3 4\"\
    \ ]]\n    [[ $(candidate \"1 2 3 2 4 3 5\") = \"1 4 5\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660002814
- exit_code: 1
  program: "#!/bin/bash\n# From a list of integers, remove all elements that occur\
    \ more than once.\n# Keep order of elements left the same as in the input.\n#\n\
    # $1 is a space-separated list\nremove_duplicates() {\n  local list=$1\n  local\
    \ result=\"\"\n  local seen=\"\"\n  for i in $list; do\n    if [[ ! $seen =~ $i\
    \ ]]; then\n      result=\"$result $i\"\n      seen=\"$seen $i\"\n    fi\n  done\n\
    \  echo $result\n}\n\ncandidate() {\n    remove_duplicates \"$@\"\n}\n\nset -e\n\
    run_test() {\n    [[ $(candidate \"\") = \"\" ]]\n    [[ $(candidate \"1 2 3 4\"\
    ) = \"1 2 3 4\" ]]\n    [[ $(candidate \"1 2 3 2 4 3 5\") = \"1 4 5\" ]]\n}\n\n\
    run_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660002814
- exit_code: 1
  program: "#!/bin/bash\n# From a list of integers, remove all elements that occur\
    \ more than once.\n# Keep order of elements left the same as in the input.\n#\n\
    # $1 is a space-separated list\nremove_duplicates() {\n    local list=\"$1\"\n\
    \    local -a seen\n    local -a result\n\n    for i in $list; do\n        if\
    \ [[ ${seen[$i]} ]]; then\n            continue\n        fi\n        seen[$i]=1\n\
    \        result+=(\"$i\")\n    done\n\n    echo \"${result[@]}\"\n}\n\ncandidate()\
    \ {\n    remove_duplicates \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate\
    \ \"\") = \"\" ]]\n    [[ $(candidate \"1 2 3 4\") = \"1 2 3 4\" ]]\n    [[ $(candidate\
    \ \"1 2 3 2 4 3 5\") = \"1 4 5\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660002814
- exit_code: 1
  program: "#!/bin/bash\n# From a list of integers, remove all elements that occur\
    \ more than once.\n# Keep order of elements left the same as in the input.\n#\n\
    # $1 is a space-separated list\nremove_duplicates() {\n  local input=\"$1\"\n\
    \  local output=\"\"\n  local seen=\"\"\n  for i in $input; do\n    if [[ ! \"\
    $seen\" =~ \"$i\" ]]; then\n      output=\"$output $i\"\n      seen=\"$seen $i\"\
    \n    fi\n  done\n  echo \"$output\"\n}\n\ncandidate() {\n    remove_duplicates\
    \ \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"\") = \"\" ]]\n    [[\
    \ $(candidate \"1 2 3 4\") = \"1 2 3 4\" ]]\n    [[ $(candidate \"1 2 3 2 4 3\
    \ 5\") = \"1 4 5\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660002814
- exit_code: 1
  program: "#!/bin/bash\n# From a list of integers, remove all elements that occur\
    \ more than once.\n# Keep order of elements left the same as in the input.\n#\n\
    # $1 is a space-separated list\nremove_duplicates() {\n    local list=\"$1\"\n\
    \    local seen=()\n    local result=()\n    for i in $list; do\n        if [[\
    \ ! \" ${seen[@]} \" =~ \" ${i} \" ]]; then\n            seen+=($i)\n        \
    \    result+=($i)\n        fi\n    done\n    echo \"${result[@]}\"\n}\n\ncandidate()\
    \ {\n    remove_duplicates \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate\
    \ \"\") = \"\" ]]\n    [[ $(candidate \"1 2 3 4\") = \"1 2 3 4\" ]]\n    [[ $(candidate\
    \ \"1 2 3 2 4 3 5\") = \"1 4 5\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660002814
- exit_code: 1
  program: "#!/bin/bash\n# From a list of integers, remove all elements that occur\
    \ more than once.\n# Keep order of elements left the same as in the input.\n#\n\
    # $1 is a space-separated list\nremove_duplicates() {\n  local list=$1\n  local\
    \ new_list=\"\"\n  local i=0\n  local j=0\n  local k=0\n  local l=0\n  local m=0\n\
    \  local n=0\n  local o=0\n  local p=0\n  local q=0\n  local r=0\n  local s=0\n\
    \  local t=0\n  local u=0\n  local v=0\n  local w=0\n  local x=0\n  local y=0\n\
    \  local z=0\n  local aa=0\n  local bb=0\n  local cc=0\n  local dd=0\n  local\
    \ ee=0\n  local ff=0\n  local gg=0\n  local hh=0\n  local ii=0\n  local jj=0\n\
    \  local kk=0\n  local ll=0\n  local mm=0\n  local nn=0\n  local oo=0\n  local\
    \ pp=0\n  local qq=0\n  local rr=0\n  local ss=0\n  local tt=0\n  local uu=0\n\
    \  local vv=0\n  local ww=0\n  local xx=0\n  local yy=0\n  local zz=0\n  local\
    \ aaa=0\n  local bbb=0\n  local ccc=0\n  local ddd=0\n  local eee=0\n  local fff=0\n\
    \  local ggg=0\n  local hhh=0\n  local iii=0\n  local jjj=0\n  local kkk=0\n \
    \ local lll=0\n  local mmm=0\n  local nnn=0\n  local ooo=0\n  local ppp=0\n  local\
    \ qqq=0\n  local rrr=0\n  local sss=0\n  local ttt=0\n  local uuu=0\n  local vvv=0\n\
    \  local www=0\n  local xxx=0\n  local yyy=0\n  local zzz=0\n  local aaaa=0\n\
    \  local bbbb=0\n  local cccc=0\n  local dddd=0\n  local eeee=\n}\n\ncandidate()\
    \ {\n    remove_duplicates \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate\
    \ \"\") = \"\" ]]\n    [[ $(candidate \"1 2 3 4\") = \"1 2 3 4\" ]]\n    [[ $(candidate\
    \ \"1 2 3 2 4 3 5\") = \"1 4 5\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660002814
- exit_code: 1
  program: "#!/bin/bash\n# From a list of integers, remove all elements that occur\
    \ more than once.\n# Keep order of elements left the same as in the input.\n#\n\
    # $1 is a space-separated list\nremove_duplicates() {\n    local -a arr=()\n \
    \   local -a seen=()\n    for i in $1; do\n        if [[ ! \" ${seen[@]} \" =~\
    \ \" ${i} \" ]]; then\n            arr+=($i)\n            seen+=($i)\n       \
    \ fi\n    done\n    echo \"${arr[@]}\"\n}\n\ncandidate() {\n    remove_duplicates\
    \ \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"\") = \"\" ]]\n    [[\
    \ $(candidate \"1 2 3 4\") = \"1 2 3 4\" ]]\n    [[ $(candidate \"1 2 3 2 4 3\
    \ 5\") = \"1 4 5\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660002815
- exit_code: 1
  program: "#!/bin/bash\n# From a list of integers, remove all elements that occur\
    \ more than once.\n# Keep order of elements left the same as in the input.\n#\n\
    # $1 is a space-separated list\nremove_duplicates() {\n    local input=\"$1\"\n\
    \    local output=\"\"\n    local seen=\"\"\n    for i in $input; do\n       \
    \ if ! [[ \"$seen\" =~ \"$i\" ]]; then\n            output=\"$output $i\"\n  \
    \          seen=\"$seen $i\"\n        fi\n    done\n    echo \"$output\"\n}\n\n\
    candidate() {\n    remove_duplicates \"$@\"\n}\n\nset -e\nrun_test() {\n    [[\
    \ $(candidate \"\") = \"\" ]]\n    [[ $(candidate \"1 2 3 4\") = \"1 2 3 4\" ]]\n\
    \    [[ $(candidate \"1 2 3 2 4 3 5\") = \"1 4 5\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660002815
- exit_code: 1
  program: "#!/bin/bash\n# From a list of integers, remove all elements that occur\
    \ more than once.\n# Keep order of elements left the same as in the input.\n#\n\
    # $1 is a space-separated list\nremove_duplicates() {\n  local list=\"$1\"\n \
    \ local result=\"\"\n  local seen=\"\"\n  for item in $list; do\n    if [[ -z\
    \ \"${seen//$item}\" ]]; then\n      result=\"$result $item\"\n      seen=\"$seen\
    \ $item\"\n    fi\n  done\n  echo \"$result\"\n}\n\ncandidate() {\n    remove_duplicates\
    \ \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"\") = \"\" ]]\n    [[\
    \ $(candidate \"1 2 3 4\") = \"1 2 3 4\" ]]\n    [[ $(candidate \"1 2 3 2 4 3\
    \ 5\") = \"1 4 5\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660002814
- exit_code: 1
  program: "#!/bin/bash\n# From a list of integers, remove all elements that occur\
    \ more than once.\n# Keep order of elements left the same as in the input.\n#\n\
    # $1 is a space-separated list\nremove_duplicates() {\n    local input=$1\n  \
    \  local output=\"\"\n    local seen=\"\"\n    for i in $input; do\n        if\
    \ ! echo $seen | grep -q $i; then\n            output=\"$output $i\"\n       \
    \     seen=\"$seen $i\"\n        fi\n    done\n    echo $output\n}\n\ncandidate()\
    \ {\n    remove_duplicates \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate\
    \ \"\") = \"\" ]]\n    [[ $(candidate \"1 2 3 4\") = \"1 2 3 4\" ]]\n    [[ $(candidate\
    \ \"1 2 3 2 4 3 5\") = \"1 4 5\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660002815
- exit_code: 1
  program: "#!/bin/bash\n# From a list of integers, remove all elements that occur\
    \ more than once.\n# Keep order of elements left the same as in the input.\n#\n\
    # $1 is a space-separated list\nremove_duplicates() {\n    local input=($1)\n\
    \    local output=()\n    local seen=()\n    for i in \"${input[@]}\"; do\n  \
    \      if [[ ! \"${seen[*]}\" =~ \"$i\" ]]; then\n            output+=(\"$i\"\
    )\n            seen+=(\"$i\")\n        fi\n    done\n    echo \"${output[@]}\"\
    \n}\n\ncandidate() {\n    remove_duplicates \"$@\"\n}\n\nset -e\nrun_test() {\n\
    \    [[ $(candidate \"\") = \"\" ]]\n    [[ $(candidate \"1 2 3 4\") = \"1 2 3\
    \ 4\" ]]\n    [[ $(candidate \"1 2 3 2 4 3 5\") = \"1 4 5\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660002815
- exit_code: 1
  program: "#!/bin/bash\n# From a list of integers, remove all elements that occur\
    \ more than once.\n# Keep order of elements left the same as in the input.\n#\n\
    # $1 is a space-separated list\nremove_duplicates() {\n  local list=$1\n  local\
    \ result=\"\"\n  local element=\"\"\n  for element in $list; do\n    echo \"$result\"\
    \ | grep -q \"$element\" || result=\"$result $element\"\n  done\n  echo \"$result\"\
    \n}\n\ncandidate() {\n    remove_duplicates \"$@\"\n}\n\nset -e\nrun_test() {\n\
    \    [[ $(candidate \"\") = \"\" ]]\n    [[ $(candidate \"1 2 3 4\") = \"1 2 3\
    \ 4\" ]]\n    [[ $(candidate \"1 2 3 2 4 3 5\") = \"1 4 5\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660002815
- exit_code: 1
  program: "#!/bin/bash\n# From a list of integers, remove all elements that occur\
    \ more than once.\n# Keep order of elements left the same as in the input.\n#\n\
    # $1 is a space-separated list\nremove_duplicates() {\n  local list=\"$1\"\n \
    \ local seen=\"\"\n  local item=\"\"\n  for item in $list; do\n    if [[ ! $seen\
    \ =~ (^|[[:space:]])\"$item\"($|[[:space:]]) ]]; then\n      seen=\"$seen $item\"\
    \n    fi\n  done\n  echo \"$seen\"\n}\n\ncandidate() {\n    remove_duplicates\
    \ \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"\") = \"\" ]]\n    [[\
    \ $(candidate \"1 2 3 4\") = \"1 2 3 4\" ]]\n    [[ $(candidate \"1 2 3 2 4 3\
    \ 5\") = \"1 4 5\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660002815
- exit_code: 1
  program: "#!/bin/bash\n# From a list of integers, remove all elements that occur\
    \ more than once.\n# Keep order of elements left the same as in the input.\n#\n\
    # $1 is a space-separated list\nremove_duplicates() {\n  local input=$1\n  local\
    \ output=\"\"\n  local seen=\"\"\n  for i in $input; do\n    if [[ -z \"${seen/$i/}\"\
    \ ]]; then\n      output=\"$output $i\"\n      seen=\"$seen $i\"\n    fi\n  done\n\
    \  echo \"$output\"\n}\n\ncandidate() {\n    remove_duplicates \"$@\"\n}\n\nset\
    \ -e\nrun_test() {\n    [[ $(candidate \"\") = \"\" ]]\n    [[ $(candidate \"\
    1 2 3 4\") = \"1 2 3 4\" ]]\n    [[ $(candidate \"1 2 3 2 4 3 5\") = \"1 4 5\"\
    \ ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660002815
- exit_code: 1
  program: "#!/bin/bash\n# From a list of integers, remove all elements that occur\
    \ more than once.\n# Keep order of elements left the same as in the input.\n#\n\
    # $1 is a space-separated list\nremove_duplicates() {\n    local list=$1\n   \
    \ local unique=\"\"\n    local item\n    for item in $list; do\n        if ! echo\
    \ \"$unique\" | grep -q \"$item\"; then\n            unique=\"$unique $item\"\n\
    \        fi\n    done\n    echo \"$unique\"\n}\n\ncandidate() {\n    remove_duplicates\
    \ \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"\") = \"\" ]]\n    [[\
    \ $(candidate \"1 2 3 4\") = \"1 2 3 4\" ]]\n    [[ $(candidate \"1 2 3 2 4 3\
    \ 5\") = \"1 4 5\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660002815
- exit_code: 1
  program: "#!/bin/bash\n# From a list of integers, remove all elements that occur\
    \ more than once.\n# Keep order of elements left the same as in the input.\n#\n\
    # $1 is a space-separated list\nremove_duplicates() {\n    local input=$1\n  \
    \  local output=()\n    local seen=()\n    for i in $input; do\n        if [[\
    \ ! \" ${seen[@]} \" =~ \" ${i} \" ]]; then\n            output+=($i)\n      \
    \      seen+=($i)\n        fi\n    done\n    echo ${output[@]}\n}\n\ncandidate()\
    \ {\n    remove_duplicates \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate\
    \ \"\") = \"\" ]]\n    [[ $(candidate \"1 2 3 4\") = \"1 2 3 4\" ]]\n    [[ $(candidate\
    \ \"1 2 3 2 4 3 5\") = \"1 4 5\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660002815
- exit_code: 1
  program: "#!/bin/bash\n# From a list of integers, remove all elements that occur\
    \ more than once.\n# Keep order of elements left the same as in the input.\n#\n\
    # $1 is a space-separated list\nremove_duplicates() {\n  local list=$1\n  local\
    \ seen=()\n  local out=()\n  for i in $list; do\n    if [[ \" ${seen[*]} \" =~\
    \ \" $i \" ]]; then\n      continue\n    fi\n    seen+=($i)\n    out+=($i)\n \
    \ done\n  echo ${out[@]}\n}\n\ncandidate() {\n    remove_duplicates \"$@\"\n}\n\
    \nset -e\nrun_test() {\n    [[ $(candidate \"\") = \"\" ]]\n    [[ $(candidate\
    \ \"1 2 3 4\") = \"1 2 3 4\" ]]\n    [[ $(candidate \"1 2 3 2 4 3 5\") = \"1 4\
    \ 5\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660002815
- exit_code: 0
  program: "#!/bin/bash\n# From a list of integers, remove all elements that occur\
    \ more than once.\n# Keep order of elements left the same as in the input.\n#\n\
    # $1 is a space-separated list\nremove_duplicates() {\n  local -a array\n  local\
    \ -a result\n  local i\n  local j\n  local k\n  local n\n  local m\n  local item\n\
    \  local count\n\n  array=($1)\n  n=${#array[@]}\n  for ((i=0; i<n; i++)); do\n\
    \    item=${array[$i]}\n    count=0\n    for ((j=0; j<n; j++)); do\n      if [[\
    \ ${array[$j]} == $item ]]; then\n        ((count++))\n      fi\n    done\n  \
    \  if [[ $count -eq 1 ]]; then\n      result[${#result[@]}]=$item\n    fi\n  done\n\
    \  echo ${result[@]}\n}\n\ncandidate() {\n    remove_duplicates \"$@\"\n}\n\n\
    set -e\nrun_test() {\n    [[ $(candidate \"\") = \"\" ]]\n    [[ $(candidate \"\
    1 2 3 4\") = \"1 2 3 4\" ]]\n    [[ $(candidate \"1 2 3 2 4 3 5\") = \"1 4 5\"\
    \ ]]\n}\n\nrun_test"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660002815
- exit_code: 1
  program: "#!/bin/bash\n# From a list of integers, remove all elements that occur\
    \ more than once.\n# Keep order of elements left the same as in the input.\n#\n\
    # $1 is a space-separated list\nremove_duplicates() {\n    local input=\"$1\"\n\
    \    local output=\"\"\n    local seen=\"\"\n    for i in $input; do\n       \
    \ if [[ \"$seen\" == *\"$i\"* ]]; then\n            continue\n        fi\n   \
    \     output=\"$output $i\"\n        seen=\"$seen $i\"\n    done\n    echo \"\
    $output\"\n}\n\ncandidate() {\n    remove_duplicates \"$@\"\n}\n\nset -e\nrun_test()\
    \ {\n    [[ $(candidate \"\") = \"\" ]]\n    [[ $(candidate \"1 2 3 4\") = \"\
    1 2 3 4\" ]]\n    [[ $(candidate \"1 2 3 2 4 3 5\") = \"1 4 5\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660002815
- exit_code: 1
  program: "#!/bin/bash\n# From a list of integers, remove all elements that occur\
    \ more than once.\n# Keep order of elements left the same as in the input.\n#\n\
    # $1 is a space-separated list\nremove_duplicates() {\n    local -a array\n  \
    \  local -a new_array\n    local -a seen\n    local i\n    local item\n    local\
    \ new_item\n\n    # Convert the input string into an array.\n    IFS=' ' read\
    \ -r -a array <<< \"$1\"\n\n    # Loop through the array, and add each item to\
    \ a new array if it hasn't\n    # been seen before.\n    for item in \"${array[@]}\"\
    ; do\n        if [[ ! \" ${seen[@]} \" =~ \" ${item} \" ]]; then\n           \
    \ new_array+=(\"$item\")\n            seen+=(\"$item\")\n        fi\n    done\n\
    \n    # Convert the new array back into a string.\n    new_item=\"${new_array[0]}\"\
    \n    for ((i=1; i<${#new_array[@]}; i++)); do\n        new_item=\"$new_item ${new_array[$i]}\"\
    \n    done\n\n    echo \"$new_item\"\n}\n\ncandidate() {\n    remove_duplicates\
    \ \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"\") = \"\" ]]\n    [[\
    \ $(candidate \"1 2 3 4\") = \"1 2 3 4\" ]]\n    [[ $(candidate \"1 2 3 2 4 3\
    \ 5\") = \"1 4 5\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660002815
- exit_code: 1
  program: "#!/bin/bash\n# From a list of integers, remove all elements that occur\
    \ more than once.\n# Keep order of elements left the same as in the input.\n#\n\
    # $1 is a space-separated list\nremove_duplicates() {\n    local -a array\n  \
    \  IFS=' ' read -r -a array <<< \"$1\"\n    local -a seen\n    local -a result\n\
    \    for i in \"${array[@]}\"; do\n        if [[ ! \" ${seen[*]} \" =~ \" ${i}\
    \ \" ]]; then\n            result+=(\"$i\")\n            seen+=(\"$i\")\n    \
    \    fi\n    done\n    echo \"${result[*]}\"\n}\n\ncandidate() {\n    remove_duplicates\
    \ \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"\") = \"\" ]]\n    [[\
    \ $(candidate \"1 2 3 4\") = \"1 2 3 4\" ]]\n    [[ $(candidate \"1 2 3 2 4 3\
    \ 5\") = \"1 4 5\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660002815
- exit_code: 1
  program: "#!/bin/bash\n# From a list of integers, remove all elements that occur\
    \ more than once.\n# Keep order of elements left the same as in the input.\n#\n\
    # $1 is a space-separated list\nremove_duplicates() {\n    local input=\"$1\"\n\
    \    local output=\"\"\n    local seen=\"\"\n    for i in $input; do\n       \
    \ if [[ ! \"$seen\" =~ \"$i\" ]]; then\n            seen=\"$seen $i\"\n      \
    \      output=\"$output $i\"\n        fi\n    done\n    echo \"$output\"\n}\n\n\
    candidate() {\n    remove_duplicates \"$@\"\n}\n\nset -e\nrun_test() {\n    [[\
    \ $(candidate \"\") = \"\" ]]\n    [[ $(candidate \"1 2 3 4\") = \"1 2 3 4\" ]]\n\
    \    [[ $(candidate \"1 2 3 2 4 3 5\") = \"1 4 5\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660002815
- exit_code: 1
  program: "#!/bin/bash\n# From a list of integers, remove all elements that occur\
    \ more than once.\n# Keep order of elements left the same as in the input.\n#\n\
    # $1 is a space-separated list\nremove_duplicates() {\n  local input=($1)\n  local\
    \ output=()\n  local seen=()\n  for i in \"${input[@]}\"; do\n    if [[ ! \" ${seen[*]}\
    \ \" =~ \" ${i} \" ]]; then\n      output+=($i)\n      seen+=($i)\n    fi\n  done\n\
    \  echo \"${output[@]}\"\n}\n\ncandidate() {\n    remove_duplicates \"$@\"\n}\n\
    \nset -e\nrun_test() {\n    [[ $(candidate \"\") = \"\" ]]\n    [[ $(candidate\
    \ \"1 2 3 4\") = \"1 2 3 4\" ]]\n    [[ $(candidate \"1 2 3 2 4 3 5\") = \"1 4\
    \ 5\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660002815
- exit_code: 1
  program: "#!/bin/bash\n# From a list of integers, remove all elements that occur\
    \ more than once.\n# Keep order of elements left the same as in the input.\n#\n\
    # $1 is a space-separated list\nremove_duplicates() {\n    local list=\"$1\"\n\
    \    local seen=\"\"\n    local out=\"\"\n    for i in $list; do\n        if [[\
    \ \"$seen\" != *\"$i\"* ]]; then\n            seen=\"$seen $i\"\n            out=\"\
    $out $i\"\n        fi\n    done\n    echo \"$out\"\n}\n\ncandidate() {\n    remove_duplicates\
    \ \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"\") = \"\" ]]\n    [[\
    \ $(candidate \"1 2 3 4\") = \"1 2 3 4\" ]]\n    [[ $(candidate \"1 2 3 2 4 3\
    \ 5\") = \"1 4 5\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660002815
- exit_code: 1
  program: "#!/bin/bash\n# From a list of integers, remove all elements that occur\
    \ more than once.\n# Keep order of elements left the same as in the input.\n#\n\
    # $1 is a space-separated list\nremove_duplicates() {\n    echo \"$1\" | tr '\
    \ ' '\\n' | awk '!seen[$0]++' | tr '\\n' ' '\n}\n\ncandidate() {\n    remove_duplicates\
    \ \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"\") = \"\" ]]\n    [[\
    \ $(candidate \"1 2 3 4\") = \"1 2 3 4\" ]]\n    [[ $(candidate \"1 2 3 2 4 3\
    \ 5\") = \"1 4 5\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660002815
- exit_code: 1
  program: "#!/bin/bash\n# From a list of integers, remove all elements that occur\
    \ more than once.\n# Keep order of elements left the same as in the input.\n#\n\
    # $1 is a space-separated list\nremove_duplicates() {\n  local input=\"$1\"\n\
    \  local output=\"\"\n  local seen=\"\"\n  for i in $input; do\n    if [[ -z \"\
    ${seen[$i]}\" ]]; then\n      seen[$i]=1\n      output=\"$output $i\"\n    fi\n\
    \  done\n  echo $output\n}\n\ncandidate() {\n    remove_duplicates \"$@\"\n}\n\
    \nset -e\nrun_test() {\n    [[ $(candidate \"\") = \"\" ]]\n    [[ $(candidate\
    \ \"1 2 3 4\") = \"1 2 3 4\" ]]\n    [[ $(candidate \"1 2 3 2 4 3 5\") = \"1 4\
    \ 5\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660002815
- exit_code: 1
  program: "#!/bin/bash\n# From a list of integers, remove all elements that occur\
    \ more than once.\n# Keep order of elements left the same as in the input.\n#\n\
    # $1 is a space-separated list\nremove_duplicates() {\n    local input=($1)\n\
    \    local output=()\n    local seen=()\n    for i in \"${input[@]}\"; do\n  \
    \      if [[ ! \" ${seen[*]} \" =~ \" ${i} \" ]]; then\n            output+=($i)\n\
    \            seen+=($i)\n        fi\n    done\n    echo \"${output[@]}\"\n}\n\n\
    candidate() {\n    remove_duplicates \"$@\"\n}\n\nset -e\nrun_test() {\n    [[\
    \ $(candidate \"\") = \"\" ]]\n    [[ $(candidate \"1 2 3 4\") = \"1 2 3 4\" ]]\n\
    \    [[ $(candidate \"1 2 3 2 4 3 5\") = \"1 4 5\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660002815
- exit_code: 1
  program: "#!/bin/bash\n# From a list of integers, remove all elements that occur\
    \ more than once.\n# Keep order of elements left the same as in the input.\n#\n\
    # $1 is a space-separated list\nremove_duplicates() {\n    local -a arr=()\n \
    \   local -a seen=()\n    local -a result=()\n    local i\n    local x\n\n   \
    \ arr=($1)\n    for ((i=0; i<${#arr[@]}; i++)); do\n        x=${arr[$i]}\n   \
    \     if [[ ! \" ${seen[@]} \" =~ \" ${x} \" ]]; then\n            seen+=($x)\n\
    \            result+=($x)\n        fi\n    done\n    echo \"${result[@]}\"\n}\n\
    \ncandidate() {\n    remove_duplicates \"$@\"\n}\n\nset -e\nrun_test() {\n   \
    \ [[ $(candidate \"\") = \"\" ]]\n    [[ $(candidate \"1 2 3 4\") = \"1 2 3 4\"\
    \ ]]\n    [[ $(candidate \"1 2 3 2 4 3 5\") = \"1 4 5\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660002815
- exit_code: 1
  program: "#!/bin/bash\n# From a list of integers, remove all elements that occur\
    \ more than once.\n# Keep order of elements left the same as in the input.\n#\n\
    # $1 is a space-separated list\nremove_duplicates() {\n    local input=$1\n  \
    \  local output=\"\"\n    local i=0\n    local j=0\n    local k=0\n    local n=0\n\
    \    local m=0\n    local tmp=0\n    local tmp2=0\n    local tmp3=0\n    local\
    \ tmp4=0\n    local tmp5=0\n    local tmp6=0\n    local tmp7=0\n    local tmp8=0\n\
    \    local tmp9=0\n    local tmp10=0\n    local tmp11=0\n    local tmp12=0\n \
    \   local tmp13=0\n    local tmp14=0\n    local tmp15=0\n    local tmp16=0\n \
    \   local tmp17=0\n    local tmp18=0\n    local tmp19=0\n    local tmp20=0\n \
    \   local tmp21=0\n    local tmp22=0\n    local tmp23=0\n    local tmp24=0\n \
    \   local tmp25=0\n    local tmp26=0\n    local tmp27=0\n    local tmp28=0\n \
    \   local tmp29=0\n    local tmp30=0\n    local tmp31=0\n    local tmp32=0\n \
    \   local tmp33=0\n    local tmp34=0\n    local tmp35=0\n    local tmp36=0\n \
    \   local tmp37=0\n    local tmp38=0\n    local tmp39=0\n    local tmp40=0\n \
    \   local tmp41=0\n    local tmp42=0\n    local tmp43=0\n    local tmp44=0\n \
    \   local tmp45=0\n    local tmp46=0\n    local tmp47=0\n    local tmp48=0\n \
    \   local tmp49=0\n    local tmp50=0\n    local tmp51=0\n    local tmp52=0\n \
    \   local tmp53=0\n    local tmp54=0\n    local tmp55=0\n    local tmp56=0\n \
    \   local tmp57=0\n    local tmp58=0\n    local tmp59=0\n    local tmp60=0\n \
    \   local tmp61=0\n    local tmp62=0\n    local tmp63=0\n    local tmp64=0\n \
    \   local tmp65=0\n    local tmp66=0\n    local tmp67=0\n    local\n}\n\ncandidate()\
    \ {\n    remove_duplicates \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate\
    \ \"\") = \"\" ]]\n    [[ $(candidate \"1 2 3 4\") = \"1 2 3 4\" ]]\n    [[ $(candidate\
    \ \"1 2 3 2 4 3 5\") = \"1 4 5\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660002815
- exit_code: 1
  program: "#!/bin/bash\n# From a list of integers, remove all elements that occur\
    \ more than once.\n# Keep order of elements left the same as in the input.\n#\n\
    # $1 is a space-separated list\nremove_duplicates() {\n  local input=\"$1\"\n\
    \  local output=\"\"\n  local seen=\"\"\n  for i in $input; do\n    if [[ \"$seen\"\
    \ != *\"$i\"* ]]; then\n      output=\"$output $i\"\n      seen=\"$seen $i\"\n\
    \    fi\n  done\n  echo \"$output\"\n}\n\ncandidate() {\n    remove_duplicates\
    \ \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"\") = \"\" ]]\n    [[\
    \ $(candidate \"1 2 3 4\") = \"1 2 3 4\" ]]\n    [[ $(candidate \"1 2 3 2 4 3\
    \ 5\") = \"1 4 5\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660002815
- exit_code: 1
  program: "#!/bin/bash\n# From a list of integers, remove all elements that occur\
    \ more than once.\n# Keep order of elements left the same as in the input.\n#\n\
    # $1 is a space-separated list\nremove_duplicates() {\n  local input=$1\n  local\
    \ output=\"\"\n  local seen=\"\"\n  for i in $input; do\n    if [[ $seen != *$i*\
    \ ]]; then\n      output=\"$output $i\"\n      seen=\"$seen $i\"\n    fi\n  done\n\
    \  echo $output\n}\n\ncandidate() {\n    remove_duplicates \"$@\"\n}\n\nset -e\n\
    run_test() {\n    [[ $(candidate \"\") = \"\" ]]\n    [[ $(candidate \"1 2 3 4\"\
    ) = \"1 2 3 4\" ]]\n    [[ $(candidate \"1 2 3 2 4 3 5\") = \"1 4 5\" ]]\n}\n\n\
    run_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660002815
- exit_code: 1
  program: "#!/bin/bash\n# From a list of integers, remove all elements that occur\
    \ more than once.\n# Keep order of elements left the same as in the input.\n#\n\
    # $1 is a space-separated list\nremove_duplicates() {\n  local list=\"$1\"\n \
    \ local seen=\"\"\n  local word\n  for word in $list; do\n    if ! echo \"$seen\"\
    \ | grep -q \"$word\"; then\n      seen=\"$seen $word\"\n    fi\n  done\n  echo\
    \ \"$seen\"\n}\n\ncandidate() {\n    remove_duplicates \"$@\"\n}\n\nset -e\nrun_test()\
    \ {\n    [[ $(candidate \"\") = \"\" ]]\n    [[ $(candidate \"1 2 3 4\") = \"\
    1 2 3 4\" ]]\n    [[ $(candidate \"1 2 3 2 4 3 5\") = \"1 4 5\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660002815
- exit_code: 1
  program: "#!/bin/bash\n# From a list of integers, remove all elements that occur\
    \ more than once.\n# Keep order of elements left the same as in the input.\n#\n\
    # $1 is a space-separated list\nremove_duplicates() {\n  local input=$1\n  local\
    \ output=\"\"\n  local seen=\"\"\n  for i in $input; do\n    if [[ ! $seen =~\
    \ (^| )$i($| ) ]]; then\n      output=\"$output $i\"\n      seen=\"$seen $i\"\n\
    \    fi\n  done\n  echo $output\n}\n\ncandidate() {\n    remove_duplicates \"\
    $@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"\") = \"\" ]]\n    [[ $(candidate\
    \ \"1 2 3 4\") = \"1 2 3 4\" ]]\n    [[ $(candidate \"1 2 3 2 4 3 5\") = \"1 4\
    \ 5\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660002815
- exit_code: 1
  program: "#!/bin/bash\n# From a list of integers, remove all elements that occur\
    \ more than once.\n# Keep order of elements left the same as in the input.\n#\n\
    # $1 is a space-separated list\nremove_duplicates() {\n  local -a array\n  local\
    \ -i i\n  local -i j\n  local -i k\n  local -i len\n  local -i len_array\n  local\
    \ -i len_array_minus_1\n  local -i len_array_minus_2\n  local -i len_array_minus_3\n\
    \  local -i len_array_minus_4\n  local -i len_array_minus_5\n  local -i len_array_minus_6\n\
    \  local -i len_array_minus_7\n  local -i len_array_minus_8\n  local -i len_array_minus_9\n\
    \  local -i len_array_minus_10\n  local -i len_array_minus_11\n  local -i len_array_minus_12\n\
    \  local -i len_array_minus_13\n  local -i len_array_minus_14\n  local -i len_array_minus_15\n\
    \  local -i len_array_minus_16\n  local -i len_array_minus_17\n  local -i len_array_minus_18\n\
    \  local -i len_array_minus_19\n  local -i len_array_minus_20\n  local -i len_array_minus_21\n\
    \  local -i len_array_minus_22\n  local -i len_array_minus_23\n  local -i len_array_minus_24\n\
    \  local -i len_array_minus_25\n  local -i len_array_minus_26\n  local -i len_array_minus_27\n\
    \  local -i len_array_minus_28\n  local -i len_array_minus_29\n  local -i len_array_minus_30\n\
    \  local -i len_array_minus_31\n  local -i len_array_minus_32\n  local -i len_array_minus_33\n\
    \  local -i len_array_minus_34\n  local -i len_array_minus_35\n  local -i len_array_minus_36\n\
    \  local -i len_array_minus_37\n  local -i len_array_minus_38\n  local -i len_array_minus_39\n\
    \  local -i len\n}\n\ncandidate() {\n    remove_duplicates \"$@\"\n}\n\nset -e\n\
    run_test() {\n    [[ $(candidate \"\") = \"\" ]]\n    [[ $(candidate \"1 2 3 4\"\
    ) = \"1 2 3 4\" ]]\n    [[ $(candidate \"1 2 3 2 4 3 5\") = \"1 4 5\" ]]\n}\n\n\
    run_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660002815
- exit_code: 1
  program: "#!/bin/bash\n# From a list of integers, remove all elements that occur\
    \ more than once.\n# Keep order of elements left the same as in the input.\n#\n\
    # $1 is a space-separated list\nremove_duplicates() {\n  local list=$1\n  local\
    \ result=''\n  local item\n  for item in $list; do\n    if [[ $result != *\" $item\
    \ \"* ]]; then\n      result=\"$result $item\"\n    fi\n  done\n  echo \"$result\"\
    \n}\n\ncandidate() {\n    remove_duplicates \"$@\"\n}\n\nset -e\nrun_test() {\n\
    \    [[ $(candidate \"\") = \"\" ]]\n    [[ $(candidate \"1 2 3 4\") = \"1 2 3\
    \ 4\" ]]\n    [[ $(candidate \"1 2 3 2 4 3 5\") = \"1 4 5\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660002815
- exit_code: 1
  program: "#!/bin/bash\n# From a list of integers, remove all elements that occur\
    \ more than once.\n# Keep order of elements left the same as in the input.\n#\n\
    # $1 is a space-separated list\nremove_duplicates() {\n  local -a arr=(\"$@\"\
    )\n  local -a new_arr=()\n  local -a seen=()\n  for i in \"${arr[@]}\"; do\n \
    \   if [[ ! \" ${seen[@]} \" =~ \" ${i} \" ]]; then\n      new_arr+=(\"$i\")\n\
    \      seen+=(\"$i\")\n    fi\n  done\n  echo \"${new_arr[@]}\"\n}\n\ncandidate()\
    \ {\n    remove_duplicates \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate\
    \ \"\") = \"\" ]]\n    [[ $(candidate \"1 2 3 4\") = \"1 2 3 4\" ]]\n    [[ $(candidate\
    \ \"1 2 3 2 4 3 5\") = \"1 4 5\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660002815
- exit_code: 1
  program: "#!/bin/bash\n# From a list of integers, remove all elements that occur\
    \ more than once.\n# Keep order of elements left the same as in the input.\n#\n\
    # $1 is a space-separated list\nremove_duplicates() {\n  local input=$1\n  local\
    \ output=''\n  local i=''\n  local j=''\n  local k=''\n  local l=''\n  local m=''\n\
    \  local n=''\n  local o=''\n  local p=''\n  local q=''\n  local r=''\n  local\
    \ s=''\n  local t=''\n  local u=''\n  local v=''\n  local w=''\n  local x=''\n\
    \  local y=''\n  local z=''\n  for i in $input; do\n    j=0\n    for k in $output;\
    \ do\n      if [ $i -eq $k ]; then\n        j=1\n      fi\n    done\n    if [\
    \ $j -eq 0 ]; then\n      output=$output' '$i\n    fi\n  done\n  echo $output\n\
    }\n\ncandidate() {\n    remove_duplicates \"$@\"\n}\n\nset -e\nrun_test() {\n\
    \    [[ $(candidate \"\") = \"\" ]]\n    [[ $(candidate \"1 2 3 4\") = \"1 2 3\
    \ 4\" ]]\n    [[ $(candidate \"1 2 3 2 4 3 5\") = \"1 4 5\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660002815
- exit_code: 1
  program: "#!/bin/bash\n# From a list of integers, remove all elements that occur\
    \ more than once.\n# Keep order of elements left the same as in the input.\n#\n\
    # $1 is a space-separated list\nremove_duplicates() {\n    local input=$1\n  \
    \  local output=\"\"\n    local seen=\"\"\n    for i in $input; do\n        if\
    \ [[ $seen == *\" $i \"* ]]; then\n            continue\n        fi\n        seen=\"\
    $seen $i \"\n        output=\"$output $i\"\n    done\n    echo $output\n}\n\n\
    candidate() {\n    remove_duplicates \"$@\"\n}\n\nset -e\nrun_test() {\n    [[\
    \ $(candidate \"\") = \"\" ]]\n    [[ $(candidate \"1 2 3 4\") = \"1 2 3 4\" ]]\n\
    \    [[ $(candidate \"1 2 3 2 4 3 5\") = \"1 4 5\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660002815
- exit_code: 1
  program: "#!/bin/bash\n# From a list of integers, remove all elements that occur\
    \ more than once.\n# Keep order of elements left the same as in the input.\n#\n\
    # $1 is a space-separated list\nremove_duplicates() {\n    local input=\"$1\"\n\
    \    local output=\"\"\n    local seen=\"\"\n    for i in $input; do\n       \
    \ if [[ \"$seen\" == *\"$i\"* ]]; then\n            continue\n        fi\n   \
    \     seen=\"$seen $i\"\n        output=\"$output $i\"\n    done\n    echo \"\
    $output\"\n}\n\ncandidate() {\n    remove_duplicates \"$@\"\n}\n\nset -e\nrun_test()\
    \ {\n    [[ $(candidate \"\") = \"\" ]]\n    [[ $(candidate \"1 2 3 4\") = \"\
    1 2 3 4\" ]]\n    [[ $(candidate \"1 2 3 2 4 3 5\") = \"1 4 5\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660002815
- exit_code: 1
  program: "#!/bin/bash\n# From a list of integers, remove all elements that occur\
    \ more than once.\n# Keep order of elements left the same as in the input.\n#\n\
    # $1 is a space-separated list\nremove_duplicates() {\n  local list=$1\n  local\
    \ unique=()\n  local seen=()\n  for i in $list; do\n    if [[ ! ${seen[*]} =~\
    \ $i ]]; then\n      unique+=($i)\n      seen+=($i)\n    fi\n  done\n  echo ${unique[*]}\n\
    }\n\ncandidate() {\n    remove_duplicates \"$@\"\n}\n\nset -e\nrun_test() {\n\
    \    [[ $(candidate \"\") = \"\" ]]\n    [[ $(candidate \"1 2 3 4\") = \"1 2 3\
    \ 4\" ]]\n    [[ $(candidate \"1 2 3 2 4 3 5\") = \"1 4 5\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660002815
- exit_code: 1
  program: "#!/bin/bash\n# From a list of integers, remove all elements that occur\
    \ more than once.\n# Keep order of elements left the same as in the input.\n#\n\
    # $1 is a space-separated list\nremove_duplicates() {\n    local input=\"$1\"\n\
    \    local output=\"\"\n    local i\n    local j\n    local k\n    local found\n\
    \    for i in $input; do\n        found=0\n        for j in $output; do\n    \
    \        if [ \"$i\" == \"$j\" ]; then\n                found=1\n            \
    \    break\n            fi\n        done\n        if [ $found -eq 0 ]; then\n\
    \            output=\"$output $i\"\n        fi\n    done\n    echo $output\n}\n\
    \ncandidate() {\n    remove_duplicates \"$@\"\n}\n\nset -e\nrun_test() {\n   \
    \ [[ $(candidate \"\") = \"\" ]]\n    [[ $(candidate \"1 2 3 4\") = \"1 2 3 4\"\
    \ ]]\n    [[ $(candidate \"1 2 3 2 4 3 5\") = \"1 4 5\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660002815
- exit_code: 1
  program: "#!/bin/bash\n# From a list of integers, remove all elements that occur\
    \ more than once.\n# Keep order of elements left the same as in the input.\n#\n\
    # $1 is a space-separated list\nremove_duplicates() {\n    local -a arr=(\"$@\"\
    )\n    local -a unique=()\n    local -a duplicates=()\n    local -a result=()\n\
    \    local i=0\n    local j=0\n    local k=0\n    local n=${#arr[@]}\n    local\
    \ m=0\n    local found=0\n\n    for ((i=0; i<n; i++)); do\n        found=0\n \
    \       for ((j=0; j<m; j++)); do\n            if [[ ${arr[i]} -eq ${unique[j]}\
    \ ]]; then\n                found=1\n                break\n            fi\n \
    \       done\n        if [[ $found -eq 0 ]]; then\n            unique[m]=${arr[i]}\n\
    \            ((m++))\n        else\n            duplicates[k]=${arr[i]}\n    \
    \        ((k++))\n        fi\n    done\n\n    for ((i=0; i<n; i++)); do\n    \
    \    found=0\n        for ((j=0; j<k; j++)); do\n            if [[ ${arr[i]} -eq\
    \ ${duplicates[j]} ]]; then\n                found=1\n                break\n\
    \            fi\n        done\n        if [[ $found -eq 0 ]]; then\n         \
    \   result[i]=${arr[i]}\n        fi\n    done\n\n    echo ${result[@]}\n}\n\n\
    candidate() {\n    remove_duplicates \"$@\"\n}\n\nset -e\nrun_test() {\n    [[\
    \ $(candidate \"\") = \"\" ]]\n    [[ $(candidate \"1 2 3 4\") = \"1 2 3 4\" ]]\n\
    \    [[ $(candidate \"1 2 3 2 4 3 5\") = \"1 4 5\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660002815
- exit_code: 1
  program: "#!/bin/bash\n# From a list of integers, remove all elements that occur\
    \ more than once.\n# Keep order of elements left the same as in the input.\n#\n\
    # $1 is a space-separated list\nremove_duplicates() {\n    local -a array=()\n\
    \    local -a seen=()\n    local -a result=()\n    local item\n    IFS=' ' read\
    \ -r -a array <<< \"$1\"\n    for item in \"${array[@]}\"; do\n        if [[ !\
    \ \" ${seen[*]} \" =~ \" ${item} \" ]]; then\n            result+=(\"$item\")\n\
    \            seen+=(\"$item\")\n        fi\n    done\n    echo \"${result[*]}\"\
    \n}\n\ncandidate() {\n    remove_duplicates \"$@\"\n}\n\nset -e\nrun_test() {\n\
    \    [[ $(candidate \"\") = \"\" ]]\n    [[ $(candidate \"1 2 3 4\") = \"1 2 3\
    \ 4\" ]]\n    [[ $(candidate \"1 2 3 2 4 3 5\") = \"1 4 5\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660002815
- exit_code: 1
  program: "#!/bin/bash\n# From a list of integers, remove all elements that occur\
    \ more than once.\n# Keep order of elements left the same as in the input.\n#\n\
    # $1 is a space-separated list\nremove_duplicates() {\n  local list=\"$1\"\n \
    \ local list_sorted=\"$(echo \"$list\" | tr ' ' '\\n' | sort | tr '\\n' ' ')\"\
    \n  local list_unique=\"$(echo \"$list_sorted\" | uniq)\"\n  echo \"$list_unique\"\
    \n}\n\ncandidate() {\n    remove_duplicates \"$@\"\n}\n\nset -e\nrun_test() {\n\
    \    [[ $(candidate \"\") = \"\" ]]\n    [[ $(candidate \"1 2 3 4\") = \"1 2 3\
    \ 4\" ]]\n    [[ $(candidate \"1 2 3 2 4 3 5\") = \"1 4 5\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660002815
- exit_code: 1
  program: "#!/bin/bash\n# From a list of integers, remove all elements that occur\
    \ more than once.\n# Keep order of elements left the same as in the input.\n#\n\
    # $1 is a space-separated list\nremove_duplicates() {\n  local -a array=(\"$@\"\
    )\n  local -a unique_array=()\n  local -a duplicate_array=()\n  local -a result_array=()\n\
    \  local i=0\n  local j=0\n  local k=0\n  local n=${#array[@]}\n  local m=0\n\
    \  local p=0\n  local q=0\n  local r=0\n  local s=0\n  local t=0\n  local u=0\n\
    \  local v=0\n  local w=0\n  local x=0\n  local y=0\n  local z=0\n  local aa=0\n\
    \  local bb=0\n  local cc=0\n  local dd=0\n  local ee=0\n  local ff=0\n  local\
    \ gg=0\n  local hh=0\n  local ii=0\n  local jj=0\n  local kk=0\n  local ll=0\n\
    \  local mm=0\n  local nn=0\n  local oo=0\n  local pp=0\n  local qq=0\n  local\
    \ rr=0\n  local ss=0\n  local tt=0\n  local uu=0\n  local vv=0\n  local ww=0\n\
    \  local xx=0\n  local yy=0\n  local zz=0\n  local aaa=0\n  local bbb=0\n  local\
    \ ccc=0\n  local ddd=0\n  local eee=0\n  local fff=0\n  local ggg=0\n  local hhh=0\n\
    \  local iii=0\n  local jjj=0\n  local kkk=0\n  local lll=0\n  local mmm=0\n \
    \ local nnn=0\n  local ooo=0\n  local ppp=0\n  local qqq=0\n  local rrr=0\n  local\
    \ sss=0\n  local ttt=0\n  local uuu=0\n  local vvv=0\n  local www=0\n  local xxx=0\n\
    \  local yyy=0\n  local zzz=0\n  local aaaa=0\n  local bbbb=0\n \n}\n\ncandidate()\
    \ {\n    remove_duplicates \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate\
    \ \"\") = \"\" ]]\n    [[ $(candidate \"1 2 3 4\") = \"1 2 3 4\" ]]\n    [[ $(candidate\
    \ \"1 2 3 2 4 3 5\") = \"1 4 5\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660002815
- exit_code: 1
  program: "#!/bin/bash\n# From a list of integers, remove all elements that occur\
    \ more than once.\n# Keep order of elements left the same as in the input.\n#\n\
    # $1 is a space-separated list\nremove_duplicates() {\n    local -a arr=()\n \
    \   local -a seen=()\n    local i\n    for i in $1; do\n        if [[ \" ${seen[*]}\
    \ \" =~ \" $i \" ]]; then\n            continue\n        fi\n        arr+=($i)\n\
    \        seen+=($i)\n    done\n    echo \"${arr[@]}\"\n}\n\ncandidate() {\n  \
    \  remove_duplicates \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"\"\
    ) = \"\" ]]\n    [[ $(candidate \"1 2 3 4\") = \"1 2 3 4\" ]]\n    [[ $(candidate\
    \ \"1 2 3 2 4 3 5\") = \"1 4 5\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660002815
- exit_code: 1
  program: "#!/bin/bash\n# From a list of integers, remove all elements that occur\
    \ more than once.\n# Keep order of elements left the same as in the input.\n#\n\
    # $1 is a space-separated list\nremove_duplicates() {\n    local list=\"$1\"\n\
    \    local -a seen\n    local -a result\n    for i in $list; do\n        if [[\
    \ ! \" ${seen[*]} \" =~ \" $i \" ]]; then\n            result+=(\"$i\")\n    \
    \        seen+=(\"$i\")\n        fi\n    done\n    echo \"${result[@]}\"\n}\n\n\
    candidate() {\n    remove_duplicates \"$@\"\n}\n\nset -e\nrun_test() {\n    [[\
    \ $(candidate \"\") = \"\" ]]\n    [[ $(candidate \"1 2 3 4\") = \"1 2 3 4\" ]]\n\
    \    [[ $(candidate \"1 2 3 2 4 3 5\") = \"1 4 5\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660002815
- exit_code: 1
  program: "#!/bin/bash\n# From a list of integers, remove all elements that occur\
    \ more than once.\n# Keep order of elements left the same as in the input.\n#\n\
    # $1 is a space-separated list\nremove_duplicates() {\n  local list=$1\n  local\
    \ result=()\n  local seen=()\n  for item in $list; do\n    if [[ ! \" ${seen[@]}\
    \ \" =~ \" ${item} \" ]]; then\n      result+=(\"$item\")\n      seen+=(\"$item\"\
    )\n    fi\n  done\n  echo \"${result[@]}\"\n}\n\ncandidate() {\n    remove_duplicates\
    \ \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"\") = \"\" ]]\n    [[\
    \ $(candidate \"1 2 3 4\") = \"1 2 3 4\" ]]\n    [[ $(candidate \"1 2 3 2 4 3\
    \ 5\") = \"1 4 5\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660002815
- exit_code: 1
  program: "#!/bin/bash\n# From a list of integers, remove all elements that occur\
    \ more than once.\n# Keep order of elements left the same as in the input.\n#\n\
    # $1 is a space-separated list\nremove_duplicates() {\n  local input=\"$1\"\n\
    \  local output=\"\"\n  local seen=\"\"\n  for i in $input; do\n    if [[ ! $seen\
    \ =~ $i ]]; then\n      output=\"$output $i\"\n      seen=\"$seen $i\"\n    fi\n\
    \  done\n  echo $output\n}\n\ncandidate() {\n    remove_duplicates \"$@\"\n}\n\
    \nset -e\nrun_test() {\n    [[ $(candidate \"\") = \"\" ]]\n    [[ $(candidate\
    \ \"1 2 3 4\") = \"1 2 3 4\" ]]\n    [[ $(candidate \"1 2 3 2 4 3 5\") = \"1 4\
    \ 5\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660002815
- exit_code: 1
  program: "#!/bin/bash\n# From a list of integers, remove all elements that occur\
    \ more than once.\n# Keep order of elements left the same as in the input.\n#\n\
    # $1 is a space-separated list\nremove_duplicates() {\n  local list=\"$1\"\n \
    \ local unique=\"\"\n  local i\n  for i in $list; do\n    if ! [[ $unique =~ (^|[[:space:]])\"\
    $i\"($|[[:space:]]) ]]; then\n      unique=\"$unique $i\"\n    fi\n  done\n  echo\
    \ \"$unique\"\n}\n\ncandidate() {\n    remove_duplicates \"$@\"\n}\n\nset -e\n\
    run_test() {\n    [[ $(candidate \"\") = \"\" ]]\n    [[ $(candidate \"1 2 3 4\"\
    ) = \"1 2 3 4\" ]]\n    [[ $(candidate \"1 2 3 2 4 3 5\") = \"1 4 5\" ]]\n}\n\n\
    run_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660002815
- exit_code: 1
  program: "#!/bin/bash\n# From a list of integers, remove all elements that occur\
    \ more than once.\n# Keep order of elements left the same as in the input.\n#\n\
    # $1 is a space-separated list\nremove_duplicates() {\n    local list=$1\n   \
    \ local seen=\"\"\n    local item=\"\"\n    for item in $list; do\n        if\
    \ [[ $seen != *\" $item \"* ]]; then\n            seen+=\" $item \"\n        fi\n\
    \    done\n    echo \"$seen\"\n}\n\ncandidate() {\n    remove_duplicates \"$@\"\
    \n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"\") = \"\" ]]\n    [[ $(candidate\
    \ \"1 2 3 4\") = \"1 2 3 4\" ]]\n    [[ $(candidate \"1 2 3 2 4 3 5\") = \"1 4\
    \ 5\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660002815
- exit_code: 1
  program: "#!/bin/bash\n# From a list of integers, remove all elements that occur\
    \ more than once.\n# Keep order of elements left the same as in the input.\n#\n\
    # $1 is a space-separated list\nremove_duplicates() {\n    local -a array\n  \
    \  local -a unique\n    local -a duplicates\n    local i\n    local j\n    local\
    \ k\n    local n\n    local m\n    local p\n    local q\n    local r\n    local\
    \ s\n    local t\n    local u\n    local v\n    local w\n    local x\n    local\
    \ y\n    local z\n    local a\n    local b\n    local c\n    local d\n    local\
    \ e\n    local f\n    local g\n    local h\n    local i\n    local j\n    local\
    \ k\n    local l\n    local m\n    local n\n    local o\n    local p\n    local\
    \ q\n    local r\n    local s\n    local t\n    local u\n    local v\n    local\
    \ w\n    local x\n    local y\n    local z\n    local aa\n    local bb\n    local\
    \ cc\n    local dd\n    local ee\n    local ff\n    local gg\n    local hh\n \
    \   local ii\n    local jj\n    local kk\n    local ll\n    local mm\n    local\
    \ nn\n    local oo\n    local pp\n    local qq\n    local rr\n    local ss\n \
    \   local tt\n    local uu\n    local vv\n    local ww\n    local xx\n    local\
    \ yy\n    local zz\n    local aaa\n    local bbb\n    local ccc\n    local ddd\n\
    \    local eee\n    local fff\n    local ggg\n    local hhh\n    local iii\n \
    \   local jjj\n    local kkk\n    local lll\n    local mmm\n    local nnn\n  \
    \  local ooo\n    local ppp\n    local qqq\n    local rrr\n    local sss\n   \
    \ local ttt\n    local uuu\n    local vvv\n    local www\n    local xxx\n    local\
    \ yyy\n    local zzz\n    local aaaa\n    local bbbb\n    local cccc\n    local\
    \ dddd\n    local eeee\n    local ffff\n    local gggg\n    local hhhh\n    local\
    \ iiii\n    local jjjj\n    local kkkk\n    local llll\n    local mmmm\n    local\
    \ n\n}\n\ncandidate() {\n    remove_duplicates \"$@\"\n}\n\nset -e\nrun_test()\
    \ {\n    [[ $(candidate \"\") = \"\" ]]\n    [[ $(candidate \"1 2 3 4\") = \"\
    1 2 3 4\" ]]\n    [[ $(candidate \"1 2 3 2 4 3 5\") = \"1 4 5\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660002815
- exit_code: 1
  program: "#!/bin/bash\n# From a list of integers, remove all elements that occur\
    \ more than once.\n# Keep order of elements left the same as in the input.\n#\n\
    # $1 is a space-separated list\nremove_duplicates() {\n    local input=\"$1\"\n\
    \    local output=\"\"\n    local seen=\"\"\n    for i in $input; do\n       \
    \ if [[ ! \"$seen\" =~ \"$i\" ]]; then\n            output=\"$output $i\"\n  \
    \          seen=\"$seen $i\"\n        fi\n    done\n    echo \"$output\"\n}\n\n\
    candidate() {\n    remove_duplicates \"$@\"\n}\n\nset -e\nrun_test() {\n    [[\
    \ $(candidate \"\") = \"\" ]]\n    [[ $(candidate \"1 2 3 4\") = \"1 2 3 4\" ]]\n\
    \    [[ $(candidate \"1 2 3 2 4 3 5\") = \"1 4 5\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660002815
- exit_code: 1
  program: "#!/bin/bash\n# From a list of integers, remove all elements that occur\
    \ more than once.\n# Keep order of elements left the same as in the input.\n#\n\
    # $1 is a space-separated list\nremove_duplicates() {\n  local input=\"$1\"\n\
    \  local output=\"\"\n  local seen=\"\"\n  for i in $input; do\n    if [[ -z \"\
    ${seen[$i]}\" ]]; then\n      seen[$i]=1\n      output=\"$output $i\"\n    fi\n\
    \  done\n  echo \"$output\"\n}\n\ncandidate() {\n    remove_duplicates \"$@\"\n\
    }\n\nset -e\nrun_test() {\n    [[ $(candidate \"\") = \"\" ]]\n    [[ $(candidate\
    \ \"1 2 3 4\") = \"1 2 3 4\" ]]\n    [[ $(candidate \"1 2 3 2 4 3 5\") = \"1 4\
    \ 5\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660002814
- exit_code: 1
  program: "#!/bin/bash\n# From a list of integers, remove all elements that occur\
    \ more than once.\n# Keep order of elements left the same as in the input.\n#\n\
    # $1 is a space-separated list\nremove_duplicates() {\n  local input=\"$1\"\n\
    \  local output=\"\"\n  local i\n  for i in $input; do\n    if [[ $output != *\"\
    \ $i \"* ]]; then\n      output=\"$output $i\"\n    fi\n  done\n  echo \"$output\"\
    \n}\n\ncandidate() {\n    remove_duplicates \"$@\"\n}\n\nset -e\nrun_test() {\n\
    \    [[ $(candidate \"\") = \"\" ]]\n    [[ $(candidate \"1 2 3 4\") = \"1 2 3\
    \ 4\" ]]\n    [[ $(candidate \"1 2 3 2 4 3 5\") = \"1 4 5\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660002815
- exit_code: 1
  program: "#!/bin/bash\n# From a list of integers, remove all elements that occur\
    \ more than once.\n# Keep order of elements left the same as in the input.\n#\n\
    # $1 is a space-separated list\nremove_duplicates() {\n    # We use a hash table\
    \ to keep track of the elements we've seen.\n    # The key is the element, the\
    \ value is the number of times it has been seen.\n    declare -A seen\n    for\
    \ i in $1; do\n        if [[ -z ${seen[$i]} ]]; then\n            # We haven't\
    \ seen this element before.\n            seen[$i]=1\n        else\n          \
    \  # We've seen this element before.\n            seen[$i]=$((seen[$i] + 1))\n\
    \        fi\n    done\n\n    # Now print out all the elements that have been seen\
    \ only once.\n    for i in $1; do\n        if [[ ${seen[$i]} -eq 1 ]]; then\n\
    \            echo $i\n        fi\n    done\n}\n\ncandidate() {\n    remove_duplicates\
    \ \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"\") = \"\" ]]\n    [[\
    \ $(candidate \"1 2 3 4\") = \"1 2 3 4\" ]]\n    [[ $(candidate \"1 2 3 2 4 3\
    \ 5\") = \"1 4 5\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660002815
- exit_code: 1
  program: "#!/bin/bash\n# From a list of integers, remove all elements that occur\
    \ more than once.\n# Keep order of elements left the same as in the input.\n#\n\
    # $1 is a space-separated list\nremove_duplicates() {\n    local list=\"$1\"\n\
    \    local seen=\"\"\n    local item=\"\"\n    for item in $list; do\n       \
    \ if ! echo \"$seen\" | grep -q \"$item\"; then\n            seen=\"$seen $item\"\
    \n        fi\n    done\n    echo \"$seen\"\n}\n\ncandidate() {\n    remove_duplicates\
    \ \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"\") = \"\" ]]\n    [[\
    \ $(candidate \"1 2 3 4\") = \"1 2 3 4\" ]]\n    [[ $(candidate \"1 2 3 2 4 3\
    \ 5\") = \"1 4 5\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660002815
- exit_code: 1
  program: "#!/bin/bash\n# From a list of integers, remove all elements that occur\
    \ more than once.\n# Keep order of elements left the same as in the input.\n#\n\
    # $1 is a space-separated list\nremove_duplicates() {\n  local -a arr=(\"$@\"\
    )\n  local -a uniq=()\n  local -a dup=()\n  local -a result=()\n  for i in \"\
    ${arr[@]}\"; do\n    if [[ \" ${uniq[*]} \" == *\" $i \"* ]]; then\n      dup+=(\"\
    $i\")\n    else\n      uniq+=(\"$i\")\n    fi\n  done\n  for i in \"${arr[@]}\"\
    ; do\n    if [[ \" ${dup[*]} \" != *\" $i \"* ]]; then\n      result+=(\"$i\"\
    )\n    fi\n  done\n  echo \"${result[@]}\"\n}\n\ncandidate() {\n    remove_duplicates\
    \ \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"\") = \"\" ]]\n    [[\
    \ $(candidate \"1 2 3 4\") = \"1 2 3 4\" ]]\n    [[ $(candidate \"1 2 3 2 4 3\
    \ 5\") = \"1 4 5\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660002815
- exit_code: 1
  program: "#!/bin/bash\n# From a list of integers, remove all elements that occur\
    \ more than once.\n# Keep order of elements left the same as in the input.\n#\n\
    # $1 is a space-separated list\nremove_duplicates() {\n    local input=\"$1\"\n\
    \    local output=\"\"\n    local seen=\"\"\n    for i in $input; do\n       \
    \ if [[ \"$seen\" == *\" $i \"* ]]; then\n            continue\n        fi\n \
    \       seen=\"$seen $i \"\n        output=\"$output $i\"\n    done\n    echo\
    \ \"$output\"\n}\n\ncandidate() {\n    remove_duplicates \"$@\"\n}\n\nset -e\n\
    run_test() {\n    [[ $(candidate \"\") = \"\" ]]\n    [[ $(candidate \"1 2 3 4\"\
    ) = \"1 2 3 4\" ]]\n    [[ $(candidate \"1 2 3 2 4 3 5\") = \"1 4 5\" ]]\n}\n\n\
    run_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660002815
- exit_code: 1
  program: "#!/bin/bash\n# From a list of integers, remove all elements that occur\
    \ more than once.\n# Keep order of elements left the same as in the input.\n#\n\
    # $1 is a space-separated list\nremove_duplicates() {\n    local list=\"$1\"\n\
    \    local new_list=\"\"\n    local item\n    for item in $list; do\n        if\
    \ [[ $new_list != *\" $item \"* ]]; then\n            new_list=\"$new_list $item\"\
    \n        fi\n    done\n    echo \"$new_list\"\n}\n\ncandidate() {\n    remove_duplicates\
    \ \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"\") = \"\" ]]\n    [[\
    \ $(candidate \"1 2 3 4\") = \"1 2 3 4\" ]]\n    [[ $(candidate \"1 2 3 2 4 3\
    \ 5\") = \"1 4 5\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660002815
- exit_code: 1
  program: "#!/bin/bash\n# From a list of integers, remove all elements that occur\
    \ more than once.\n# Keep order of elements left the same as in the input.\n#\n\
    # $1 is a space-separated list\nremove_duplicates() {\n    local list=\"$1\"\n\
    \    local seen=\"\"\n    local item=\"\"\n    for item in $list; do\n       \
    \ if [[ $seen != *\" $item \"* ]]; then\n            seen=\"$seen $item \"\n \
    \           echo -n \"$item \"\n        fi\n    done\n}\n\ncandidate() {\n   \
    \ remove_duplicates \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"\"\
    ) = \"\" ]]\n    [[ $(candidate \"1 2 3 4\") = \"1 2 3 4\" ]]\n    [[ $(candidate\
    \ \"1 2 3 2 4 3 5\") = \"1 4 5\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660002815
- exit_code: 1
  program: "#!/bin/bash\n# From a list of integers, remove all elements that occur\
    \ more than once.\n# Keep order of elements left the same as in the input.\n#\n\
    # $1 is a space-separated list\nremove_duplicates() {\n  local -a arr=()\n  local\
    \ -a seen=()\n  local -a result=()\n  local i\n  local n\n  IFS=' ' read -r -a\
    \ arr <<< \"$1\"\n  for i in \"${arr[@]}\"; do\n    if [[ ! \" ${seen[*]} \" =~\
    \ \" ${i} \" ]]; then\n      result+=(\"$i\")\n      seen+=(\"$i\")\n    fi\n\
    \  done\n  echo \"${result[@]}\"\n}\n\ncandidate() {\n    remove_duplicates \"\
    $@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"\") = \"\" ]]\n    [[ $(candidate\
    \ \"1 2 3 4\") = \"1 2 3 4\" ]]\n    [[ $(candidate \"1 2 3 2 4 3 5\") = \"1 4\
    \ 5\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660002815
- exit_code: 1
  program: "#!/bin/bash\n# From a list of integers, remove all elements that occur\
    \ more than once.\n# Keep order of elements left the same as in the input.\n#\n\
    # $1 is a space-separated list\nremove_duplicates() {\n  local input=$1\n  local\
    \ output=\"\"\n  for i in $input; do\n    if [[ $output != *\" $i \"* ]]; then\n\
    \      output=\"$output $i\"\n    fi\n  done\n  echo \"$output\"\n}\n\ncandidate()\
    \ {\n    remove_duplicates \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate\
    \ \"\") = \"\" ]]\n    [[ $(candidate \"1 2 3 4\") = \"1 2 3 4\" ]]\n    [[ $(candidate\
    \ \"1 2 3 2 4 3 5\") = \"1 4 5\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660002815
- exit_code: 1
  program: "#!/bin/bash\n# From a list of integers, remove all elements that occur\
    \ more than once.\n# Keep order of elements left the same as in the input.\n#\n\
    # $1 is a space-separated list\nremove_duplicates() {\n  local list=$1\n  local\
    \ new_list=\"\"\n  local seen=\"\"\n  for item in $list; do\n    if [[ $seen !=\
    \ *\" $item \"* ]]; then\n      new_list=\"$new_list $item\"\n      seen=\"$seen\
    \ $item \"\n    fi\n  done\n  echo \"$new_list\"\n}\n\ncandidate() {\n    remove_duplicates\
    \ \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"\") = \"\" ]]\n    [[\
    \ $(candidate \"1 2 3 4\") = \"1 2 3 4\" ]]\n    [[ $(candidate \"1 2 3 2 4 3\
    \ 5\") = \"1 4 5\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660002815
- exit_code: 1
  program: "#!/bin/bash\n# From a list of integers, remove all elements that occur\
    \ more than once.\n# Keep order of elements left the same as in the input.\n#\n\
    # $1 is a space-separated list\nremove_duplicates() {\n    local list=\"$1\"\n\
    \    local new_list=\"\"\n    local elem=\"\"\n    for elem in $list; do\n   \
    \     if ! echo \"$new_list\" | grep -q \"$elem\"; then\n            new_list=\"\
    $new_list $elem\"\n        fi\n    done\n    echo \"$new_list\"\n}\n\ncandidate()\
    \ {\n    remove_duplicates \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate\
    \ \"\") = \"\" ]]\n    [[ $(candidate \"1 2 3 4\") = \"1 2 3 4\" ]]\n    [[ $(candidate\
    \ \"1 2 3 2 4 3 5\") = \"1 4 5\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660002815
- exit_code: 1
  program: "#!/bin/bash\n# From a list of integers, remove all elements that occur\
    \ more than once.\n# Keep order of elements left the same as in the input.\n#\n\
    # $1 is a space-separated list\nremove_duplicates() {\n    local list=\"$1\"\n\
    \    local result=\"\"\n    local item\n    for item in $list; do\n        if\
    \ [[ $result != *\" $item \"* ]]; then\n            result=\"$result $item\"\n\
    \        fi\n    done\n    echo \"$result\"\n}\n\ncandidate() {\n    remove_duplicates\
    \ \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"\") = \"\" ]]\n    [[\
    \ $(candidate \"1 2 3 4\") = \"1 2 3 4\" ]]\n    [[ $(candidate \"1 2 3 2 4 3\
    \ 5\") = \"1 4 5\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660002815
- exit_code: 1
  program: "#!/bin/bash\n# From a list of integers, remove all elements that occur\
    \ more than once.\n# Keep order of elements left the same as in the input.\n#\n\
    # $1 is a space-separated list\nremove_duplicates() {\n    local list=\"$1\"\n\
    \    local seen=\"\"\n    local result=\"\"\n    for item in $list; do\n     \
    \   if ! contains \"$seen\" \"$item\"; then\n            result=\"$result $item\"\
    \n            seen=\"$seen $item\"\n        fi\n    done\n    echo \"$result\"\
    \n}\n\ncandidate() {\n    remove_duplicates \"$@\"\n}\n\nset -e\nrun_test() {\n\
    \    [[ $(candidate \"\") = \"\" ]]\n    [[ $(candidate \"1 2 3 4\") = \"1 2 3\
    \ 4\" ]]\n    [[ $(candidate \"1 2 3 2 4 3 5\") = \"1 4 5\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: '/tmp/tmp_excl6no.sh: line 11: contains: command not found

    /tmp/tmp_excl6no.sh: line 11: contains: command not found

    /tmp/tmp_excl6no.sh: line 11: contains: command not found

    /tmp/tmp_excl6no.sh: line 11: contains: command not found

    '
  stdout: ''
  timestamp: 1660002815
- exit_code: 1
  program: "#!/bin/bash\n# From a list of integers, remove all elements that occur\
    \ more than once.\n# Keep order of elements left the same as in the input.\n#\n\
    # $1 is a space-separated list\nremove_duplicates() {\n    local input=$1\n  \
    \  local output=\"\"\n    local seen=\"\"\n    for i in $input; do\n        if\
    \ [[ ! $seen =~ $i ]]; then\n            output=\"$output $i\"\n            seen=\"\
    $seen $i\"\n        fi\n    done\n    echo $output\n}\n\ncandidate() {\n    remove_duplicates\
    \ \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"\") = \"\" ]]\n    [[\
    \ $(candidate \"1 2 3 4\") = \"1 2 3 4\" ]]\n    [[ $(candidate \"1 2 3 2 4 3\
    \ 5\") = \"1 4 5\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660002815
- exit_code: 1
  program: "#!/bin/bash\n# From a list of integers, remove all elements that occur\
    \ more than once.\n# Keep order of elements left the same as in the input.\n#\n\
    # $1 is a space-separated list\nremove_duplicates() {\n    local input=\"$1\"\n\
    \    local output=\"\"\n    local seen=\"\"\n    for n in $input; do\n       \
    \ if [[ ! $seen =~ $n ]]; then\n            output=\"$output $n\"\n          \
    \  seen=\"$seen $n\"\n        fi\n    done\n    echo \"$output\"\n}\n\ncandidate()\
    \ {\n    remove_duplicates \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate\
    \ \"\") = \"\" ]]\n    [[ $(candidate \"1 2 3 4\") = \"1 2 3 4\" ]]\n    [[ $(candidate\
    \ \"1 2 3 2 4 3 5\") = \"1 4 5\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660002815
- exit_code: 1
  program: "#!/bin/bash\n# From a list of integers, remove all elements that occur\
    \ more than once.\n# Keep order of elements left the same as in the input.\n#\n\
    # $1 is a space-separated list\nremove_duplicates() {\n    local input=$1\n  \
    \  local output=\"\"\n    local seen=\"\"\n    for i in $input; do\n        if\
    \ [[ $seen != *\"$i\"* ]]; then\n            seen+=\" $i\"\n            output+=\"\
    \ $i\"\n        fi\n    done\n    echo \"$output\"\n}\n\ncandidate() {\n    remove_duplicates\
    \ \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"\") = \"\" ]]\n    [[\
    \ $(candidate \"1 2 3 4\") = \"1 2 3 4\" ]]\n    [[ $(candidate \"1 2 3 2 4 3\
    \ 5\") = \"1 4 5\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660002815
- exit_code: 1
  program: "#!/bin/bash\n# From a list of integers, remove all elements that occur\
    \ more than once.\n# Keep order of elements left the same as in the input.\n#\n\
    # $1 is a space-separated list\nremove_duplicates() {\n    local input=\"$1\"\n\
    \    local output=\"\"\n    local seen=\"\"\n    for i in $input; do\n       \
    \ if [[ \"$seen\" == *\"$i\"* ]]; then\n            continue\n        fi\n   \
    \     seen=\"$seen $i\"\n        output=\"$output $i\"\n    done\n    echo \"\
    $output\"\n}\n\ncandidate() {\n    remove_duplicates \"$@\"\n}\n\nset -e\nrun_test()\
    \ {\n    [[ $(candidate \"\") = \"\" ]]\n    [[ $(candidate \"1 2 3 4\") = \"\
    1 2 3 4\" ]]\n    [[ $(candidate \"1 2 3 2 4 3 5\") = \"1 4 5\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660002815
- exit_code: 1
  program: "#!/bin/bash\n# From a list of integers, remove all elements that occur\
    \ more than once.\n# Keep order of elements left the same as in the input.\n#\n\
    # $1 is a space-separated list\nremove_duplicates() {\n  local input=\"$1\"\n\
    \  local output=\"\"\n  local seen=\"\"\n  for i in $input; do\n    if [[ ! \"\
    $seen\" =~ \"$i\" ]]; then\n      output=\"$output $i\"\n      seen=\"$seen $i\"\
    \n    fi\n  done\n  echo \"$output\"\n}\n\ncandidate() {\n    remove_duplicates\
    \ \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"\") = \"\" ]]\n    [[\
    \ $(candidate \"1 2 3 4\") = \"1 2 3 4\" ]]\n    [[ $(candidate \"1 2 3 2 4 3\
    \ 5\") = \"1 4 5\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660002814
- exit_code: 1
  program: "#!/bin/bash\n# From a list of integers, remove all elements that occur\
    \ more than once.\n# Keep order of elements left the same as in the input.\n#\n\
    # $1 is a space-separated list\nremove_duplicates() {\n    local input=\"$1\"\n\
    \    local output=\"\"\n    local seen=\"\"\n    for i in $input; do\n       \
    \ if [[ -z \"$seen\" ]]; then\n            seen=\"$i\"\n            output=\"\
    $i\"\n        elif [[ \"$seen\" != *\"$i\"* ]]; then\n            seen=\"$seen\
    \ $i\"\n            output=\"$output $i\"\n        fi\n    done\n    echo \"$output\"\
    \n}\n\ncandidate() {\n    remove_duplicates \"$@\"\n}\n\nset -e\nrun_test() {\n\
    \    [[ $(candidate \"\") = \"\" ]]\n    [[ $(candidate \"1 2 3 4\") = \"1 2 3\
    \ 4\" ]]\n    [[ $(candidate \"1 2 3 2 4 3 5\") = \"1 4 5\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660002815
- exit_code: 0
  program: "#!/bin/bash\n# From a list of integers, remove all elements that occur\
    \ more than once.\n# Keep order of elements left the same as in the input.\n#\n\
    # $1 is a space-separated list\nremove_duplicates() {\n  local list=$1\n  local\
    \ new_list=\"\"\n  local element=\"\"\n  local count=0\n  for element in $list;\
    \ do\n    count=0\n    for i in $list; do\n      if [ \"$i\" = \"$element\" ];\
    \ then\n        count=$((count + 1))\n      fi\n    done\n    if [ $count -eq\
    \ 1 ]; then\n      new_list=\"$new_list $element\"\n    fi\n  done\n  echo $new_list\n\
    }\n\ncandidate() {\n    remove_duplicates \"$@\"\n}\n\nset -e\nrun_test() {\n\
    \    [[ $(candidate \"\") = \"\" ]]\n    [[ $(candidate \"1 2 3 4\") = \"1 2 3\
    \ 4\" ]]\n    [[ $(candidate \"1 2 3 2 4 3 5\") = \"1 4 5\" ]]\n}\n\nrun_test"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660002815
- exit_code: 1
  program: "#!/bin/bash\n# From a list of integers, remove all elements that occur\
    \ more than once.\n# Keep order of elements left the same as in the input.\n#\n\
    # $1 is a space-separated list\nremove_duplicates() {\n  local -a array=(\"$@\"\
    )\n  local -a unique\n  local -a duplicates\n  local -a result\n  local i\n\n\
    \  for i in \"${array[@]}\"; do\n    if [[ \" ${unique[*]} \" == *\" $i \"* ]];\
    \ then\n      duplicates+=($i)\n    else\n      unique+=($i)\n    fi\n  done\n\
    \n  for i in \"${array[@]}\"; do\n    if [[ \" ${duplicates[*]} \" != *\" $i \"\
    * ]]; then\n      result+=($i)\n    fi\n  done\n\n  echo \"${result[@]}\"\n}\n\
    \ncandidate() {\n    remove_duplicates \"$@\"\n}\n\nset -e\nrun_test() {\n   \
    \ [[ $(candidate \"\") = \"\" ]]\n    [[ $(candidate \"1 2 3 4\") = \"1 2 3 4\"\
    \ ]]\n    [[ $(candidate \"1 2 3 2 4 3 5\") = \"1 4 5\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660002815
- exit_code: 1
  program: "#!/bin/bash\n# From a list of integers, remove all elements that occur\
    \ more than once.\n# Keep order of elements left the same as in the input.\n#\n\
    # $1 is a space-separated list\nremove_duplicates() {\n    local input=$1\n  \
    \  local output=\"\"\n    local seen=\"\"\n    for i in $input; do\n        if\
    \ [[ ! $seen =~ $i ]]; then\n            output=\"$output $i\"\n            seen=\"\
    $seen $i\"\n        fi\n    done\n    echo $output\n}\n\ncandidate() {\n    remove_duplicates\
    \ \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"\") = \"\" ]]\n    [[\
    \ $(candidate \"1 2 3 4\") = \"1 2 3 4\" ]]\n    [[ $(candidate \"1 2 3 2 4 3\
    \ 5\") = \"1 4 5\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660002815
- exit_code: 1
  program: "#!/bin/bash\n# From a list of integers, remove all elements that occur\
    \ more than once.\n# Keep order of elements left the same as in the input.\n#\n\
    # $1 is a space-separated list\nremove_duplicates() {\n    local input=\"$1\"\n\
    \    local output=\"\"\n    local i\n    for i in $input; do\n        if [[ $output\
    \ != *\"$i\"* ]]; then\n            output=\"$output $i\"\n        fi\n    done\n\
    \    echo \"$output\"\n}\n\ncandidate() {\n    remove_duplicates \"$@\"\n}\n\n\
    set -e\nrun_test() {\n    [[ $(candidate \"\") = \"\" ]]\n    [[ $(candidate \"\
    1 2 3 4\") = \"1 2 3 4\" ]]\n    [[ $(candidate \"1 2 3 2 4 3 5\") = \"1 4 5\"\
    \ ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660002815
- exit_code: 1
  program: "#!/bin/bash\n# From a list of integers, remove all elements that occur\
    \ more than once.\n# Keep order of elements left the same as in the input.\n#\n\
    # $1 is a space-separated list\nremove_duplicates() {\n    local -a arr\n    local\
    \ -i i\n    local -i j\n    local -i len\n    local -i len2\n    local -i k\n\
    \    local -i l\n    local -i m\n    local -i n\n    local -i o\n    local -i\
    \ p\n    local -i q\n    local -i r\n    local -i s\n    local -i t\n    local\
    \ -i u\n    local -i v\n    local -i w\n    local -i x\n    local -i y\n    local\
    \ -i z\n    local -i aa\n    local -i bb\n    local -i cc\n    local -i dd\n \
    \   local -i ee\n    local -i ff\n    local -i gg\n    local -i hh\n    local\
    \ -i ii\n    local -i jj\n    local -i kk\n    local -i ll\n    local -i mm\n\
    \    local -i nn\n    local -i oo\n    local -i pp\n    local -i qq\n    local\
    \ -i rr\n    local -i ss\n    local -i tt\n    local -i uu\n    local -i vv\n\
    \    local -i ww\n    local -i xx\n    local -i yy\n    local -i zz\n    local\
    \ -i aaa\n    local -i bbb\n    local -i ccc\n    local -i ddd\n    local -i eee\n\
    \    local -i fff\n    local -i ggg\n    local -i hhh\n    local -i iii\n    local\
    \ -i jjj\n    local -i kkk\n    local -i lll\n    local -i mmm\n    local -i nnn\n\
    \    local -i ooo\n    local -i ppp\n    local -i qqq\n    local -i rrr\n    local\
    \ -i sss\n    local -i ttt\n    local -i uuu\n    local -i vvv\n    local -i www\n\
    \    local -i xxx\n    local -i yyy\n    local -i zzz\n    local -i aaaa\n   \
    \ local -i bbbb\n    local -i cccc\n    local -i dddd\n\n}\n\ncandidate() {\n\
    \    remove_duplicates \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"\
    \") = \"\" ]]\n    [[ $(candidate \"1 2 3 4\") = \"1 2 3 4\" ]]\n    [[ $(candidate\
    \ \"1 2 3 2 4 3 5\") = \"1 4 5\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660002815
- exit_code: 1
  program: "#!/bin/bash\n# From a list of integers, remove all elements that occur\
    \ more than once.\n# Keep order of elements left the same as in the input.\n#\n\
    # $1 is a space-separated list\nremove_duplicates() {\n    local list=\"$1\"\n\
    \    local -a uniq\n    local -a dup\n    local -a result\n    local i\n    local\
    \ j\n    local n\n    local m\n\n    # Split list into two arrays: uniq and dup.\n\
    \    # uniq contains unique elements, dup contains duplicates.\n    for i in $list;\
    \ do\n        n=${#uniq[@]}\n        m=${#dup[@]}\n        for j in ${uniq[@]};\
    \ do\n            if [ \"$i\" = \"$j\" ]; then\n                dup[$m]=\"$i\"\
    \n                uniq[$n]=\"\"\n                break\n            fi\n     \
    \   done\n        if [ -z \"${uniq[$n]}\" ]; then\n            continue\n    \
    \    fi\n        uniq[$n]=\"$i\"\n    done\n\n    # Remove duplicates from uniq.\n\
    \    for i in ${dup[@]}; do\n        for j in ${!uniq[@]}; do\n            if\
    \ [ \"$i\" = \"${uniq[$j]}\" ]; then\n                uniq[$j]=\"\"\n        \
    \        break\n            fi\n        done\n    done\n\n    # Concatenate uniq\
    \ into a string.\n    for i in ${uniq[@]}; do\n        if [ -z \"$i\" ]; then\n\
    \            continue\n        fi\n        result[${#result[@]}]=\"$i\"\n    done\n\
    \    echo \"${result[@]}\"\n}\n\ncandidate() {\n    remove_duplicates \"$@\"\n\
    }\n\nset -e\nrun_test() {\n    [[ $(candidate \"\") = \"\" ]]\n    [[ $(candidate\
    \ \"1 2 3 4\") = \"1 2 3 4\" ]]\n    [[ $(candidate \"1 2 3 2 4 3 5\") = \"1 4\
    \ 5\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660002815
- exit_code: 1
  program: "#!/bin/bash\n# From a list of integers, remove all elements that occur\
    \ more than once.\n# Keep order of elements left the same as in the input.\n#\n\
    # $1 is a space-separated list\nremove_duplicates() {\n    local list=\"$1\"\n\
    \    local unique=\"\"\n    local item=\"\"\n    for item in $list; do\n     \
    \   if ! echo \"$unique\" | grep -q \"$item\"; then\n            unique=\"$unique\
    \ $item\"\n        fi\n    done\n    echo \"$unique\"\n}\n\ncandidate() {\n  \
    \  remove_duplicates \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"\"\
    ) = \"\" ]]\n    [[ $(candidate \"1 2 3 4\") = \"1 2 3 4\" ]]\n    [[ $(candidate\
    \ \"1 2 3 2 4 3 5\") = \"1 4 5\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660002815
- exit_code: 1
  program: "#!/bin/bash\n# From a list of integers, remove all elements that occur\
    \ more than once.\n# Keep order of elements left the same as in the input.\n#\n\
    # $1 is a space-separated list\nremove_duplicates() {\n  local list=\"$1\"\n \
    \ local list_sorted=$(echo \"$list\" | tr ' ' '\\n' | sort -n | tr '\\n' ' ')\n\
    \  local list_uniq=$(echo \"$list_sorted\" | tr ' ' '\\n' | uniq | tr '\\n' '\
    \ ')\n  echo \"$list_uniq\"\n}\n\ncandidate() {\n    remove_duplicates \"$@\"\n\
    }\n\nset -e\nrun_test() {\n    [[ $(candidate \"\") = \"\" ]]\n    [[ $(candidate\
    \ \"1 2 3 4\") = \"1 2 3 4\" ]]\n    [[ $(candidate \"1 2 3 2 4 3 5\") = \"1 4\
    \ 5\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660002815
- exit_code: 1
  program: "#!/bin/bash\n# From a list of integers, remove all elements that occur\
    \ more than once.\n# Keep order of elements left the same as in the input.\n#\n\
    # $1 is a space-separated list\nremove_duplicates() {\n    local input=$1\n  \
    \  local output=\"\"\n    local seen=\"\"\n    for i in $input; do\n        if\
    \ [[ $seen != *\"$i\"* ]]; then\n            output=\"$output $i\"\n         \
    \   seen=\"$seen $i\"\n        fi\n    done\n    echo \"$output\"\n}\n\ncandidate()\
    \ {\n    remove_duplicates \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate\
    \ \"\") = \"\" ]]\n    [[ $(candidate \"1 2 3 4\") = \"1 2 3 4\" ]]\n    [[ $(candidate\
    \ \"1 2 3 2 4 3 5\") = \"1 4 5\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660002815
- exit_code: 1
  program: "#!/bin/bash\n# From a list of integers, remove all elements that occur\
    \ more than once.\n# Keep order of elements left the same as in the input.\n#\n\
    # $1 is a space-separated list\nremove_duplicates() {\n    local input=\"$1\"\n\
    \    local output=\"\"\n    local i=0\n    local j=0\n    local k=0\n    local\
    \ len=0\n    local len2=0\n    local is_duplicate=0\n    local is_duplicate2=0\n\
    \    local is_duplicate3=0\n    local is_duplicate4=0\n    local is_duplicate5=0\n\
    \    local is_duplicate6=0\n    local is_duplicate7=0\n    local is_duplicate8=0\n\
    \    local is_duplicate9=0\n    local is_duplicate10=0\n    local is_duplicate11=0\n\
    \    local is_duplicate12=0\n    local is_duplicate13=0\n    local is_duplicate14=0\n\
    \    local is_duplicate15=0\n    local is_duplicate16=0\n    local is_duplicate17=0\n\
    \    local is_duplicate18=0\n    local is_duplicate19=0\n    local is_duplicate20=0\n\
    \    local is_duplicate21=0\n    local is_duplicate22=0\n    local is_duplicate23=0\n\
    \    local is_duplicate24=0\n    local is_duplicate25=0\n    local is_duplicate26=0\n\
    \    local is_duplicate27=0\n    local is_duplicate28=0\n    local is_duplicate29=0\n\
    \    local is_duplicate30=0\n    local is_duplicate31=0\n    local is_duplicate32=0\n\
    \    local is_duplicate33=0\n    local is_duplicate34=0\n    local is_duplicate35=0\n\
    \    local is_duplicate36=0\n    local is_duplicate37=0\n    local is_duplicate38=0\n\
    \    local is_duplicate39=0\n    local is_duplicate40=0\n    local is_duplicate41=0\n\
    \    local is_duplicate42=0\n    local is_dupl\n}\n\ncandidate() {\n    remove_duplicates\
    \ \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"\") = \"\" ]]\n    [[\
    \ $(candidate \"1 2 3 4\") = \"1 2 3 4\" ]]\n    [[ $(candidate \"1 2 3 2 4 3\
    \ 5\") = \"1 4 5\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660002815
- exit_code: 1
  program: "#!/bin/bash\n# From a list of integers, remove all elements that occur\
    \ more than once.\n# Keep order of elements left the same as in the input.\n#\n\
    # $1 is a space-separated list\nremove_duplicates() {\n    local input=$1\n  \
    \  local output=\"\"\n    local seen=\"\"\n    for i in $input; do\n        if\
    \ [[ $seen != *\"$i\"* ]]; then\n            output=\"$output $i\"\n         \
    \   seen=\"$seen $i\"\n        fi\n    done\n    echo $output\n}\n\ncandidate()\
    \ {\n    remove_duplicates \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate\
    \ \"\") = \"\" ]]\n    [[ $(candidate \"1 2 3 4\") = \"1 2 3 4\" ]]\n    [[ $(candidate\
    \ \"1 2 3 2 4 3 5\") = \"1 4 5\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660002815
- exit_code: 1
  program: "#!/bin/bash\n# From a list of integers, remove all elements that occur\
    \ more than once.\n# Keep order of elements left the same as in the input.\n#\n\
    # $1 is a space-separated list\nremove_duplicates() {\n  echo \"$1\" | tr ' '\
    \ '\\n' | awk '!x[$0]++'\n}\n\ncandidate() {\n    remove_duplicates \"$@\"\n}\n\
    \nset -e\nrun_test() {\n    [[ $(candidate \"\") = \"\" ]]\n    [[ $(candidate\
    \ \"1 2 3 4\") = \"1 2 3 4\" ]]\n    [[ $(candidate \"1 2 3 2 4 3 5\") = \"1 4\
    \ 5\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660002815
- exit_code: 1
  program: "#!/bin/bash\n# From a list of integers, remove all elements that occur\
    \ more than once.\n# Keep order of elements left the same as in the input.\n#\n\
    # $1 is a space-separated list\nremove_duplicates() {\n    local input=$1\n  \
    \  local output=\"\"\n    local i=0\n    local j=0\n    local k=0\n    local n=0\n\
    \    local m=0\n    local tmp=\"\"\n    local tmp2=\"\"\n    local found=0\n \
    \   local found2=0\n    local found3=0\n    local found4=0\n    local found5=0\n\
    \    local found6=0\n    local found7=0\n    local found8=0\n    local found9=0\n\
    \    local found10=0\n    local found11=0\n    local found12=0\n    local found13=0\n\
    \    local found14=0\n    local found15=0\n    local found16=0\n    local found17=0\n\
    \    local found18=0\n    local found19=0\n    local found20=0\n    local found21=0\n\
    \    local found22=0\n    local found23=0\n    local found24=0\n    local found25=0\n\
    \    local found26=0\n    local found27=0\n    local found28=0\n    local found29=0\n\
    \    local found30=0\n    local found31=0\n    local found32=0\n    local found33=0\n\
    \    local found34=0\n    local found35=0\n    local found36=0\n    local found37=0\n\
    \    local found38=0\n    local found39=0\n    local found40=0\n    local found41=0\n\
    \    local found42=0\n    local found43=0\n    local found44=0\n    local found45=0\n\
    \    local found46=0\n    local found47=0\n    local found48=0\n    local found49=0\n\
    \    local found50=0\n    local found51=0\n    local found52=0\n    local found53=0\n\
    \    local found54=0\n    local found55=0\n    local found56=0\n    local found57=0\n\
    \    local found58=0\n    local found59=0\n    local found60=0\n    local found61=0\n\
    \    local found62=0\n    local found63=0\n    local found64=0\n    local found65=0\n\
    \    local found66=\n}\n\ncandidate() {\n    remove_duplicates \"$@\"\n}\n\nset\
    \ -e\nrun_test() {\n    [[ $(candidate \"\") = \"\" ]]\n    [[ $(candidate \"\
    1 2 3 4\") = \"1 2 3 4\" ]]\n    [[ $(candidate \"1 2 3 2 4 3 5\") = \"1 4 5\"\
    \ ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660002815
- exit_code: 1
  program: "#!/bin/bash\n# From a list of integers, remove all elements that occur\
    \ more than once.\n# Keep order of elements left the same as in the input.\n#\n\
    # $1 is a space-separated list\nremove_duplicates() {\n    local input=$1\n  \
    \  local output=()\n    for i in $input; do\n        if [[ ! \" ${output[@]} \"\
    \ =~ \" ${i} \" ]]; then\n            output+=($i)\n        fi\n    done\n   \
    \ echo ${output[@]}\n}\n\ncandidate() {\n    remove_duplicates \"$@\"\n}\n\nset\
    \ -e\nrun_test() {\n    [[ $(candidate \"\") = \"\" ]]\n    [[ $(candidate \"\
    1 2 3 4\") = \"1 2 3 4\" ]]\n    [[ $(candidate \"1 2 3 2 4 3 5\") = \"1 4 5\"\
    \ ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660002815
- exit_code: 1
  program: "#!/bin/bash\n# From a list of integers, remove all elements that occur\
    \ more than once.\n# Keep order of elements left the same as in the input.\n#\n\
    # $1 is a space-separated list\nremove_duplicates() {\n    local -a arr=(\"$@\"\
    )\n    local -a unique\n    local -a duplicates\n    local -a result\n\n    for\
    \ i in \"${arr[@]}\"; do\n        if [[ \" ${unique[*]} \" =~ \" ${i} \" ]]; then\n\
    \            duplicates+=(\"$i\")\n        else\n            unique+=(\"$i\")\n\
    \        fi\n    done\n\n    for i in \"${arr[@]}\"; do\n        if [[ \" ${duplicates[*]}\
    \ \" =~ \" ${i} \" ]]; then\n            continue\n        else\n            result+=(\"\
    $i\")\n        fi\n    done\n\n    echo \"${result[@]}\"\n}\n\ncandidate() {\n\
    \    remove_duplicates \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"\
    \") = \"\" ]]\n    [[ $(candidate \"1 2 3 4\") = \"1 2 3 4\" ]]\n    [[ $(candidate\
    \ \"1 2 3 2 4 3 5\") = \"1 4 5\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660002815
- exit_code: 1
  program: "#!/bin/bash\n# From a list of integers, remove all elements that occur\
    \ more than once.\n# Keep order of elements left the same as in the input.\n#\n\
    # $1 is a space-separated list\nremove_duplicates() {\n    local list=\"$1\"\n\
    \    local result=\"\"\n    local item\n    for item in $list; do\n        if\
    \ [[ $result != *\" $item \"* ]]; then\n            result=\"$result $item\"\n\
    \        fi\n    done\n    echo \"$result\"\n}\n\ncandidate() {\n    remove_duplicates\
    \ \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"\") = \"\" ]]\n    [[\
    \ $(candidate \"1 2 3 4\") = \"1 2 3 4\" ]]\n    [[ $(candidate \"1 2 3 2 4 3\
    \ 5\") = \"1 4 5\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660002815
- exit_code: 1
  program: "#!/bin/bash\n# From a list of integers, remove all elements that occur\
    \ more than once.\n# Keep order of elements left the same as in the input.\n#\n\
    # $1 is a space-separated list\nremove_duplicates() {\n  local input=\"$1\"\n\
    \  local output=\"\"\n  local seen=\"\"\n  for i in $input; do\n    if [[ -z \"\
    ${seen[$i]}\" ]]; then\n      seen[$i]=1\n      output=\"$output $i\"\n    fi\n\
    \  done\n  echo \"$output\"\n}\n\ncandidate() {\n    remove_duplicates \"$@\"\n\
    }\n\nset -e\nrun_test() {\n    [[ $(candidate \"\") = \"\" ]]\n    [[ $(candidate\
    \ \"1 2 3 4\") = \"1 2 3 4\" ]]\n    [[ $(candidate \"1 2 3 2 4 3 5\") = \"1 4\
    \ 5\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660002814
- exit_code: 1
  program: "#!/bin/bash\n# From a list of integers, remove all elements that occur\
    \ more than once.\n# Keep order of elements left the same as in the input.\n#\n\
    # $1 is a space-separated list\nremove_duplicates() {\n  local input=\"$1\"\n\
    \  local output=\"\"\n  local seen=\"\"\n  for i in $input; do\n    if [[ ! $seen\
    \ =~ $i ]]; then\n      output=\"$output $i\"\n      seen=\"$seen $i\"\n    fi\n\
    \  done\n  echo \"$output\"\n}\n\ncandidate() {\n    remove_duplicates \"$@\"\n\
    }\n\nset -e\nrun_test() {\n    [[ $(candidate \"\") = \"\" ]]\n    [[ $(candidate\
    \ \"1 2 3 4\") = \"1 2 3 4\" ]]\n    [[ $(candidate \"1 2 3 2 4 3 5\") = \"1 4\
    \ 5\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660002815
- exit_code: 1
  program: "#!/bin/bash\n# From a list of integers, remove all elements that occur\
    \ more than once.\n# Keep order of elements left the same as in the input.\n#\n\
    # $1 is a space-separated list\nremove_duplicates() {\n  local input=$1\n  local\
    \ output=\"\"\n  local seen=\"\"\n  for i in $input; do\n    if [[ $seen != *\"\
    $i\"* ]]; then\n      output=\"$output $i\"\n      seen=\"$seen $i\"\n    fi\n\
    \  done\n  echo $output\n}\n\ncandidate() {\n    remove_duplicates \"$@\"\n}\n\
    \nset -e\nrun_test() {\n    [[ $(candidate \"\") = \"\" ]]\n    [[ $(candidate\
    \ \"1 2 3 4\") = \"1 2 3 4\" ]]\n    [[ $(candidate \"1 2 3 2 4 3 5\") = \"1 4\
    \ 5\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660002815
- exit_code: 1
  program: "#!/bin/bash\n# From a list of integers, remove all elements that occur\
    \ more than once.\n# Keep order of elements left the same as in the input.\n#\n\
    # $1 is a space-separated list\nremove_duplicates() {\n    local list=\"$1\"\n\
    \    local result=\"\"\n    local seen=\"\"\n    for item in $list; do\n     \
    \   if [[ \"$seen\" == *\"$item\"* ]]; then\n            continue\n        fi\n\
    \        seen=\"$seen $item\"\n        result=\"$result $item\"\n    done\n  \
    \  echo \"$result\"\n}\n\ncandidate() {\n    remove_duplicates \"$@\"\n}\n\nset\
    \ -e\nrun_test() {\n    [[ $(candidate \"\") = \"\" ]]\n    [[ $(candidate \"\
    1 2 3 4\") = \"1 2 3 4\" ]]\n    [[ $(candidate \"1 2 3 2 4 3 5\") = \"1 4 5\"\
    \ ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660002815
- exit_code: 1
  program: "#!/bin/bash\n# From a list of integers, remove all elements that occur\
    \ more than once.\n# Keep order of elements left the same as in the input.\n#\n\
    # $1 is a space-separated list\nremove_duplicates() {\n    local input=$1\n  \
    \  local output=()\n    local seen=()\n    for i in $input; do\n        if [[\
    \ ! \" ${seen[@]} \" =~ \" ${i} \" ]]; then\n            output+=($i)\n      \
    \      seen+=($i)\n        fi\n    done\n    echo ${output[@]}\n}\n\ncandidate()\
    \ {\n    remove_duplicates \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate\
    \ \"\") = \"\" ]]\n    [[ $(candidate \"1 2 3 4\") = \"1 2 3 4\" ]]\n    [[ $(candidate\
    \ \"1 2 3 2 4 3 5\") = \"1 4 5\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660002815
- exit_code: 1
  program: "#!/bin/bash\n# From a list of integers, remove all elements that occur\
    \ more than once.\n# Keep order of elements left the same as in the input.\n#\n\
    # $1 is a space-separated list\nremove_duplicates() {\n    local -a arr=(\"$@\"\
    )\n    local -a seen=()\n    local -a result=()\n    for i in \"${arr[@]}\"; do\n\
    \        if [[ \"${seen[@]}\" =~ \"$i\" ]]; then\n            continue\n     \
    \   fi\n        seen+=(\"$i\")\n        result+=(\"$i\")\n    done\n    echo \"\
    ${result[@]}\"\n}\n\ncandidate() {\n    remove_duplicates \"$@\"\n}\n\nset -e\n\
    run_test() {\n    [[ $(candidate \"\") = \"\" ]]\n    [[ $(candidate \"1 2 3 4\"\
    ) = \"1 2 3 4\" ]]\n    [[ $(candidate \"1 2 3 2 4 3 5\") = \"1 4 5\" ]]\n}\n\n\
    run_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660002815
- exit_code: 1
  program: "#!/bin/bash\n# From a list of integers, remove all elements that occur\
    \ more than once.\n# Keep order of elements left the same as in the input.\n#\n\
    # $1 is a space-separated list\nremove_duplicates() {\n    local input=$1\n  \
    \  local output=\"\"\n    for i in $input; do\n        if ! [[ $output =~ $i ]];\
    \ then\n            output=\"$output $i\"\n        fi\n    done\n    echo $output\n\
    }\n\ncandidate() {\n    remove_duplicates \"$@\"\n}\n\nset -e\nrun_test() {\n\
    \    [[ $(candidate \"\") = \"\" ]]\n    [[ $(candidate \"1 2 3 4\") = \"1 2 3\
    \ 4\" ]]\n    [[ $(candidate \"1 2 3 2 4 3 5\") = \"1 4 5\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660002815
- exit_code: 1
  program: "#!/bin/bash\n# From a list of integers, remove all elements that occur\
    \ more than once.\n# Keep order of elements left the same as in the input.\n#\n\
    # $1 is a space-separated list\nremove_duplicates() {\n    local input=($1)\n\
    \    local output=()\n    local seen=()\n    for i in \"${input[@]}\"; do\n  \
    \      if [[ ! \" ${seen[*]} \" =~ \" ${i} \" ]]; then\n            output+=($i)\n\
    \            seen+=($i)\n        fi\n    done\n    echo \"${output[@]}\"\n}\n\n\
    candidate() {\n    remove_duplicates \"$@\"\n}\n\nset -e\nrun_test() {\n    [[\
    \ $(candidate \"\") = \"\" ]]\n    [[ $(candidate \"1 2 3 4\") = \"1 2 3 4\" ]]\n\
    \    [[ $(candidate \"1 2 3 2 4 3 5\") = \"1 4 5\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660002815
- exit_code: 1
  program: "#!/bin/bash\n# From a list of integers, remove all elements that occur\
    \ more than once.\n# Keep order of elements left the same as in the input.\n#\n\
    # $1 is a space-separated list\nremove_duplicates() {\n    local list=$1\n   \
    \ local result=()\n    local seen=()\n    for i in $list; do\n        if [[ !\
    \ \" ${seen[@]} \" =~ \" ${i} \" ]]; then\n            result+=($i)\n        \
    \    seen+=($i)\n        fi\n    done\n    echo ${result[@]}\n}\n\ncandidate()\
    \ {\n    remove_duplicates \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate\
    \ \"\") = \"\" ]]\n    [[ $(candidate \"1 2 3 4\") = \"1 2 3 4\" ]]\n    [[ $(candidate\
    \ \"1 2 3 2 4 3 5\") = \"1 4 5\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660002815
- exit_code: 1
  program: "#!/bin/bash\n# From a list of integers, remove all elements that occur\
    \ more than once.\n# Keep order of elements left the same as in the input.\n#\n\
    # $1 is a space-separated list\nremove_duplicates() {\n  local -a list=($1)\n\
    \  local -a unique=()\n  local -a duplicates=()\n  local -a result=()\n  local\
    \ i\n  local j\n  local k\n  local l\n  local m\n  local n\n  local o\n  local\
    \ p\n  local q\n  local r\n  local s\n  local t\n  local u\n  local v\n  local\
    \ w\n  local x\n  local y\n  local z\n  local aa\n  local bb\n  local cc\n  local\
    \ dd\n  local ee\n  local ff\n  local gg\n  local hh\n  local ii\n  local jj\n\
    \  local kk\n  local ll\n  local mm\n  local nn\n  local oo\n  local pp\n  local\
    \ qq\n  local rr\n  local ss\n  local tt\n  local uu\n  local vv\n  local ww\n\
    \  local xx\n  local yy\n  local zz\n  local aaa\n  local bbb\n  local ccc\n \
    \ local ddd\n  local eee\n  local fff\n  local ggg\n  local hhh\n  local iii\n\
    \  local jjj\n  local kkk\n  local lll\n  local mmm\n  local nnn\n  local ooo\n\
    \  local ppp\n  local qqq\n  local rrr\n  local sss\n  local ttt\n  local uuu\n\
    \  local vvv\n  local www\n  local xxx\n  local yyy\n  local zzz\n  local aaaa\n\
    \  local bbbb\n  local cccc\n  local dddd\n  local eeee\n  local ffff\n  local\
    \ gggg\n  local hhhh\n  local iiii\n  local jjjj\n  local kkkk\n  local llll\n\
    \  local mmmm\n  local nnnn\n  local oooo\n  local pppp\n  local qqqq\n  local\
    \ rrrr\n  local ssss\n  local tttt\n  local uuuu\n  local vvvv\n  local wwww\n\
    \  local xxxx\n  local yyyy\n  local zzzz\n  local aaaaa\n  local b\n}\n\ncandidate()\
    \ {\n    remove_duplicates \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate\
    \ \"\") = \"\" ]]\n    [[ $(candidate \"1 2 3 4\") = \"1 2 3 4\" ]]\n    [[ $(candidate\
    \ \"1 2 3 2 4 3 5\") = \"1 4 5\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660002815
- exit_code: 1
  program: "#!/bin/bash\n# From a list of integers, remove all elements that occur\
    \ more than once.\n# Keep order of elements left the same as in the input.\n#\n\
    # $1 is a space-separated list\nremove_duplicates() {\n    local input=\"$1\"\n\
    \    local output=\"\"\n    local seen=\"\"\n    for i in $input; do\n       \
    \ if [[ ! $seen =~ $i ]]; then\n            output=\"$output $i\"\n          \
    \  seen=\"$seen $i\"\n        fi\n    done\n    echo \"$output\"\n}\n\ncandidate()\
    \ {\n    remove_duplicates \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate\
    \ \"\") = \"\" ]]\n    [[ $(candidate \"1 2 3 4\") = \"1 2 3 4\" ]]\n    [[ $(candidate\
    \ \"1 2 3 2 4 3 5\") = \"1 4 5\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660002815
- exit_code: 1
  program: "#!/bin/bash\n# From a list of integers, remove all elements that occur\
    \ more than once.\n# Keep order of elements left the same as in the input.\n#\n\
    # $1 is a space-separated list\nremove_duplicates() {\n  local list=\"$1\"\n \
    \ local list_arr=($list)\n  local list_len=${#list_arr[@]}\n  local i=0\n  local\
    \ j=0\n  local k=0\n  local result=\"\"\n\n  for ((i=0; i<list_len; i++)); do\n\
    \    for ((j=0; j<list_len; j++)); do\n      if [[ \"${list_arr[$i]}\" == \"${list_arr[$j]}\"\
    \ ]]; then\n        k=$((k+1))\n      fi\n    done\n    if [[ $k -eq 1 ]]; then\n\
    \      result=\"$result ${list_arr[$i]}\"\n    fi\n    k=0\n  done\n  echo \"\
    $result\"\n}\n\ncandidate() {\n    remove_duplicates \"$@\"\n}\n\nset -e\nrun_test()\
    \ {\n    [[ $(candidate \"\") = \"\" ]]\n    [[ $(candidate \"1 2 3 4\") = \"\
    1 2 3 4\" ]]\n    [[ $(candidate \"1 2 3 2 4 3 5\") = \"1 4 5\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660002815
- exit_code: 1
  program: "#!/bin/bash\n# From a list of integers, remove all elements that occur\
    \ more than once.\n# Keep order of elements left the same as in the input.\n#\n\
    # $1 is a space-separated list\nremove_duplicates() {\n    local -a arr=()\n \
    \   local -a seen=()\n    local -a result=()\n    local i\n    local x\n\n   \
    \ arr=($1)\n    for i in \"${arr[@]}\"; do\n        x=\"${i//[^0-9]/}\"\n    \
    \    if [[ ! \"${seen[*]}\" =~ \"$x\" ]]; then\n            result+=(\"$i\")\n\
    \            seen+=(\"$x\")\n        fi\n    done\n    echo \"${result[@]}\"\n\
    }\n\ncandidate() {\n    remove_duplicates \"$@\"\n}\n\nset -e\nrun_test() {\n\
    \    [[ $(candidate \"\") = \"\" ]]\n    [[ $(candidate \"1 2 3 4\") = \"1 2 3\
    \ 4\" ]]\n    [[ $(candidate \"1 2 3 2 4 3 5\") = \"1 4 5\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660002815
- exit_code: 1
  program: "#!/bin/bash\n# From a list of integers, remove all elements that occur\
    \ more than once.\n# Keep order of elements left the same as in the input.\n#\n\
    # $1 is a space-separated list\nremove_duplicates() {\n  local list=\"$1\"\n \
    \ local seen=\"\"\n  local item=\"\"\n  for item in $list; do\n    if [[ \"$seen\"\
    \ == *\" $item \"* ]]; then\n      continue\n    fi\n    seen=\"$seen $item \"\
    \n    echo -n \"$item \"\n  done\n}\n\ncandidate() {\n    remove_duplicates \"\
    $@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"\") = \"\" ]]\n    [[ $(candidate\
    \ \"1 2 3 4\") = \"1 2 3 4\" ]]\n    [[ $(candidate \"1 2 3 2 4 3 5\") = \"1 4\
    \ 5\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660002815
- exit_code: 1
  program: "#!/bin/bash\n# From a list of integers, remove all elements that occur\
    \ more than once.\n# Keep order of elements left the same as in the input.\n#\n\
    # $1 is a space-separated list\nremove_duplicates() {\n    local input=$1\n  \
    \  local -a output\n    local -a seen\n    local item\n    for item in $input;\
    \ do\n        if [[ \" ${seen[*]} \" =~ \" $item \" ]]; then\n            continue\n\
    \        fi\n        output+=($item)\n        seen+=($item)\n    done\n    echo\
    \ \"${output[@]}\"\n}\n\ncandidate() {\n    remove_duplicates \"$@\"\n}\n\nset\
    \ -e\nrun_test() {\n    [[ $(candidate \"\") = \"\" ]]\n    [[ $(candidate \"\
    1 2 3 4\") = \"1 2 3 4\" ]]\n    [[ $(candidate \"1 2 3 2 4 3 5\") = \"1 4 5\"\
    \ ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660002815
- exit_code: 1
  program: "#!/bin/bash\n# From a list of integers, remove all elements that occur\
    \ more than once.\n# Keep order of elements left the same as in the input.\n#\n\
    # $1 is a space-separated list\nremove_duplicates() {\n    local list=$1\n   \
    \ local new_list=\"\"\n    local element=\"\"\n    local count=0\n    for element\
    \ in $list; do\n        count=0\n        for i in $new_list; do\n            if\
    \ [ \"$i\" == \"$element\" ]; then\n                count=$(($count + 1))\n  \
    \          fi\n        done\n        if [ $count -eq 0 ]; then\n            new_list=\"\
    $new_list $element\"\n        fi\n    done\n    echo $new_list\n}\n\ncandidate()\
    \ {\n    remove_duplicates \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate\
    \ \"\") = \"\" ]]\n    [[ $(candidate \"1 2 3 4\") = \"1 2 3 4\" ]]\n    [[ $(candidate\
    \ \"1 2 3 2 4 3 5\") = \"1 4 5\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660002815
- exit_code: 1
  program: "#!/bin/bash\n# From a list of integers, remove all elements that occur\
    \ more than once.\n# Keep order of elements left the same as in the input.\n#\n\
    # $1 is a space-separated list\nremove_duplicates() {\n    local input=$1\n  \
    \  local output=\"\"\n    local i=0\n    local j=0\n    local k=0\n    local n=0\n\
    \    local m=0\n    local found=0\n    local temp=\"\"\n    local temp2=\"\"\n\
    \    local temp3=\"\"\n    local temp4=\"\"\n    local temp5=\"\"\n    local temp6=\"\
    \"\n    local temp7=\"\"\n    local temp8=\"\"\n    local temp9=\"\"\n    local\
    \ temp10=\"\"\n    local temp11=\"\"\n    local temp12=\"\"\n    local temp13=\"\
    \"\n    local temp14=\"\"\n    local temp15=\"\"\n    local temp16=\"\"\n    local\
    \ temp17=\"\"\n    local temp18=\"\"\n    local temp19=\"\"\n    local temp20=\"\
    \"\n    local temp21=\"\"\n    local temp22=\"\"\n    local temp23=\"\"\n    local\
    \ temp24=\"\"\n    local temp25=\"\"\n    local temp26=\"\"\n    local temp27=\"\
    \"\n    local temp28=\"\"\n    local temp29=\"\"\n    local temp30=\"\"\n    local\
    \ temp31=\"\"\n    local temp32=\"\"\n    local temp33=\"\"\n    local temp34=\"\
    \"\n    local temp35=\"\"\n    local temp36=\"\"\n    local temp37=\"\"\n    local\
    \ temp38=\"\"\n    local temp39=\"\"\n    local temp40=\"\"\n    local temp41=\"\
    \"\n    local temp42=\"\"\n    local temp43=\"\"\n    local temp44=\"\"\n    local\
    \ temp45=\"\"\n    local temp46=\"\"\n    local temp47=\"\"\n    local temp48=\"\
    \"\n    local temp49=\"\"\n    local temp50=\"\"\n    local temp51=\"\"\n    local\
    \ temp52=\"\"\n    local temp53=\"\"\n    local temp54=\"\"\n    local temp55=\"\
    \"\n    local temp56=\"\"\n    local temp57=\"\"\n    local temp58=\"\"\n    local\
    \ temp59=\"\"\n    local temp60=\"\"\n    local temp61=\"\"\n    local temp62=\"\
    \"\n    local temp63=\"\"\n    local temp64=\"\"\n    local temp65=\"\"\n    local\
    \ temp66=\"\"\n    local temp67=\"\"\n    local temp68=\"\"\n    local temp69=\"\
    \"\n    local temp70=\"\"\n    local temp71=\"\"\n    local temp72=\"\"\n    local\
    \ temp73=\"\"\n    local temp74=\"\"\n    local temp75=\"\"\n    local temp76=\"\
    \"\n    local temp77=\"\"\n    local temp\n}\n\ncandidate() {\n    remove_duplicates\
    \ \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"\") = \"\" ]]\n    [[\
    \ $(candidate \"1 2 3 4\") = \"1 2 3 4\" ]]\n    [[ $(candidate \"1 2 3 2 4 3\
    \ 5\") = \"1 4 5\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660002815
- exit_code: 1
  program: "#!/bin/bash\n# From a list of integers, remove all elements that occur\
    \ more than once.\n# Keep order of elements left the same as in the input.\n#\n\
    # $1 is a space-separated list\nremove_duplicates() {\n    local input=\"$1\"\n\
    \    local output=\"\"\n    local seen=\"\"\n    for i in $input; do\n       \
    \ if [[ $seen != *\"$i\"* ]]; then\n            output=\"$output $i\"\n      \
    \      seen=\"$seen $i\"\n        fi\n    done\n    echo \"$output\"\n}\n\ncandidate()\
    \ {\n    remove_duplicates \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate\
    \ \"\") = \"\" ]]\n    [[ $(candidate \"1 2 3 4\") = \"1 2 3 4\" ]]\n    [[ $(candidate\
    \ \"1 2 3 2 4 3 5\") = \"1 4 5\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660002815
- exit_code: 1
  program: "#!/bin/bash\n# From a list of integers, remove all elements that occur\
    \ more than once.\n# Keep order of elements left the same as in the input.\n#\n\
    # $1 is a space-separated list\nremove_duplicates() {\n    local input=$1\n  \
    \  local output=\"\"\n    for i in $input; do\n        if [[ $output != *\"$i\"\
    * ]]; then\n            output=\"$output $i\"\n        fi\n    done\n    echo\
    \ $output\n}\n\ncandidate() {\n    remove_duplicates \"$@\"\n}\n\nset -e\nrun_test()\
    \ {\n    [[ $(candidate \"\") = \"\" ]]\n    [[ $(candidate \"1 2 3 4\") = \"\
    1 2 3 4\" ]]\n    [[ $(candidate \"1 2 3 2 4 3 5\") = \"1 4 5\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660002815
- exit_code: 1
  program: "#!/bin/bash\n# From a list of integers, remove all elements that occur\
    \ more than once.\n# Keep order of elements left the same as in the input.\n#\n\
    # $1 is a space-separated list\nremove_duplicates() {\n  local list=\"$1\"\n \
    \ local seen=\"\"\n  local result=\"\"\n  for item in $list; do\n    if [[ \"\
    $seen\" == *\" $item \"* ]]; then\n      continue\n    fi\n    seen=\"$seen $item\
    \ \"\n    result=\"$result $item\"\n  done\n  echo \"$result\"\n}\n\ncandidate()\
    \ {\n    remove_duplicates \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate\
    \ \"\") = \"\" ]]\n    [[ $(candidate \"1 2 3 4\") = \"1 2 3 4\" ]]\n    [[ $(candidate\
    \ \"1 2 3 2 4 3 5\") = \"1 4 5\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660002815
- exit_code: 1
  program: "#!/bin/bash\n# From a list of integers, remove all elements that occur\
    \ more than once.\n# Keep order of elements left the same as in the input.\n#\n\
    # $1 is a space-separated list\nremove_duplicates() {\n    local input=$1\n  \
    \  local output=()\n    local seen=()\n    for i in $input; do\n        if [[\
    \ ! \" ${seen[@]} \" =~ \" ${i} \" ]]; then\n            output+=($i)\n      \
    \      seen+=($i)\n        fi\n    done\n    echo ${output[@]}\n}\n\ncandidate()\
    \ {\n    remove_duplicates \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate\
    \ \"\") = \"\" ]]\n    [[ $(candidate \"1 2 3 4\") = \"1 2 3 4\" ]]\n    [[ $(candidate\
    \ \"1 2 3 2 4 3 5\") = \"1 4 5\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660002815
- exit_code: 1
  program: "#!/bin/bash\n# From a list of integers, remove all elements that occur\
    \ more than once.\n# Keep order of elements left the same as in the input.\n#\n\
    # $1 is a space-separated list\nremove_duplicates() {\n  local -a arr=()\n  local\
    \ -a seen=()\n  local i\n  for i in $1; do\n    if [[ ! \" ${seen[@]} \" =~ \"\
    \ ${i} \" ]]; then\n      arr+=(\"$i\")\n      seen+=(\"$i\")\n    fi\n  done\n\
    \  echo \"${arr[@]}\"\n}\n\ncandidate() {\n    remove_duplicates \"$@\"\n}\n\n\
    set -e\nrun_test() {\n    [[ $(candidate \"\") = \"\" ]]\n    [[ $(candidate \"\
    1 2 3 4\") = \"1 2 3 4\" ]]\n    [[ $(candidate \"1 2 3 2 4 3 5\") = \"1 4 5\"\
    \ ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660002815
- exit_code: 1
  program: "#!/bin/bash\n# From a list of integers, remove all elements that occur\
    \ more than once.\n# Keep order of elements left the same as in the input.\n#\n\
    # $1 is a space-separated list\nremove_duplicates() {\n  local input=$1\n  local\
    \ output=\"\"\n  local seen=\"\"\n  for n in $input; do\n    if [[ ! $seen =~\
    \ $n ]]; then\n      output=\"$output $n\"\n      seen=\"$seen $n\"\n    fi\n\
    \  done\n  echo $output\n}\n\ncandidate() {\n    remove_duplicates \"$@\"\n}\n\
    \nset -e\nrun_test() {\n    [[ $(candidate \"\") = \"\" ]]\n    [[ $(candidate\
    \ \"1 2 3 4\") = \"1 2 3 4\" ]]\n    [[ $(candidate \"1 2 3 2 4 3 5\") = \"1 4\
    \ 5\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660002815
- exit_code: 1
  program: "#!/bin/bash\n# From a list of integers, remove all elements that occur\
    \ more than once.\n# Keep order of elements left the same as in the input.\n#\n\
    # $1 is a space-separated list\nremove_duplicates() {\n    local -a array\n  \
    \  local -i i\n    local -i j\n    local -i k\n    local -i n\n    local -i m\n\
    \    local -i p\n    local -i q\n    local -i r\n    local -i s\n    local -i\
    \ t\n    local -i u\n    local -i v\n    local -i w\n    local -i x\n    local\
    \ -i y\n    local -i z\n    local -i aa\n    local -i bb\n    local -i cc\n  \
    \  local -i dd\n    local -i ee\n    local -i ff\n    local -i gg\n    local -i\
    \ hh\n    local -i ii\n    local -i jj\n    local -i kk\n    local -i ll\n   \
    \ local -i mm\n    local -i nn\n    local -i oo\n    local -i pp\n    local -i\
    \ qq\n    local -i rr\n    local -i ss\n    local -i tt\n    local -i uu\n   \
    \ local -i vv\n    local -i ww\n    local -i xx\n    local -i yy\n    local -i\
    \ zz\n    local -i aaa\n    local -i bbb\n    local -i ccc\n    local -i ddd\n\
    \    local -i eee\n    local -i fff\n    local -i ggg\n    local -i hhh\n    local\
    \ -i iii\n    local -i jjj\n    local -i kkk\n    local -i lll\n    local -i mmm\n\
    \    local -i nnn\n    local -i ooo\n    local -i ppp\n    local -i qqq\n    local\
    \ -i rrr\n    local -i sss\n    local -i ttt\n    local -i uuu\n    local -i vvv\n\
    \    local -i www\n    local -i xxx\n    local -i yyy\n    local -i zzz\n    local\
    \ -i aaaa\n    local -i bbbb\n    local -i cccc\n    local -i dddd\n    local\
    \ -i eeee\n    local -i ffff\n    local -i gggg\n    local\n}\n\ncandidate() {\n\
    \    remove_duplicates \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"\
    \") = \"\" ]]\n    [[ $(candidate \"1 2 3 4\") = \"1 2 3 4\" ]]\n    [[ $(candidate\
    \ \"1 2 3 2 4 3 5\") = \"1 4 5\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660002815
- exit_code: 1
  program: "#!/bin/bash\n# From a list of integers, remove all elements that occur\
    \ more than once.\n# Keep order of elements left the same as in the input.\n#\n\
    # $1 is a space-separated list\nremove_duplicates() {\n  local input=\"$1\"\n\
    \  local output=\"\"\n  local seen=\"\"\n  for i in $input; do\n    if [[ \"$seen\"\
    \ != *\"$i\"* ]]; then\n      output=\"$output $i\"\n      seen=\"$seen $i\"\n\
    \    fi\n  done\n  echo \"$output\"\n}\n\ncandidate() {\n    remove_duplicates\
    \ \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"\") = \"\" ]]\n    [[\
    \ $(candidate \"1 2 3 4\") = \"1 2 3 4\" ]]\n    [[ $(candidate \"1 2 3 2 4 3\
    \ 5\") = \"1 4 5\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660002815
- exit_code: 1
  program: "#!/bin/bash\n# From a list of integers, remove all elements that occur\
    \ more than once.\n# Keep order of elements left the same as in the input.\n#\n\
    # $1 is a space-separated list\nremove_duplicates() {\n  local list=\"$1\"\n \
    \ local seen=\"\"\n  local item=\"\"\n  for item in $list; do\n    if [[ ! $seen\
    \ =~ $item ]]; then\n      seen=\"$seen $item\"\n    fi\n  done\n  echo \"$seen\"\
    \n}\n\ncandidate() {\n    remove_duplicates \"$@\"\n}\n\nset -e\nrun_test() {\n\
    \    [[ $(candidate \"\") = \"\" ]]\n    [[ $(candidate \"1 2 3 4\") = \"1 2 3\
    \ 4\" ]]\n    [[ $(candidate \"1 2 3 2 4 3 5\") = \"1 4 5\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660002815
- exit_code: 1
  program: "#!/bin/bash\n# From a list of integers, remove all elements that occur\
    \ more than once.\n# Keep order of elements left the same as in the input.\n#\n\
    # $1 is a space-separated list\nremove_duplicates() {\n  local list=$1\n  local\
    \ result=\"\"\n  local seen=\"\"\n  for i in $list; do\n    if [[ ! $seen =~ $i\
    \ ]]; then\n      result=\"$result $i\"\n      seen=\"$seen $i\"\n    fi\n  done\n\
    \  echo $result\n}\n\ncandidate() {\n    remove_duplicates \"$@\"\n}\n\nset -e\n\
    run_test() {\n    [[ $(candidate \"\") = \"\" ]]\n    [[ $(candidate \"1 2 3 4\"\
    ) = \"1 2 3 4\" ]]\n    [[ $(candidate \"1 2 3 2 4 3 5\") = \"1 4 5\" ]]\n}\n\n\
    run_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660002814
- exit_code: 1
  program: "#!/bin/bash\n# From a list of integers, remove all elements that occur\
    \ more than once.\n# Keep order of elements left the same as in the input.\n#\n\
    # $1 is a space-separated list\nremove_duplicates() {\n  local -a arr=(\"$@\"\
    )\n  local -a uniq=()\n  local -A seen=()\n  for i in \"${arr[@]}\"; do\n    if\
    \ [[ -z \"${seen[$i]}\" ]]; then\n      uniq+=(\"$i\")\n      seen[$i]=1\n   \
    \ fi\n  done\n  echo \"${uniq[@]}\"\n}\n\ncandidate() {\n    remove_duplicates\
    \ \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"\") = \"\" ]]\n    [[\
    \ $(candidate \"1 2 3 4\") = \"1 2 3 4\" ]]\n    [[ $(candidate \"1 2 3 2 4 3\
    \ 5\") = \"1 4 5\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: '/tmp/tmp2ccf8zul.sh: line 11: seen: bad array subscript

    /tmp/tmp2ccf8zul.sh: line 13: seen[$i]: bad array subscript

    '
  stdout: ''
  timestamp: 1660002815
- exit_code: 1
  program: "#!/bin/bash\n# From a list of integers, remove all elements that occur\
    \ more than once.\n# Keep order of elements left the same as in the input.\n#\n\
    # $1 is a space-separated list\nremove_duplicates() {\n    local input_list=$1\n\
    \    local output_list=\"\"\n    local seen=\"\"\n    for i in $input_list; do\n\
    \        if [[ $seen != *\"$i\"* ]]; then\n            output_list=\"$output_list\
    \ $i\"\n            seen=\"$seen $i\"\n        fi\n    done\n    echo $output_list\n\
    }\n\ncandidate() {\n    remove_duplicates \"$@\"\n}\n\nset -e\nrun_test() {\n\
    \    [[ $(candidate \"\") = \"\" ]]\n    [[ $(candidate \"1 2 3 4\") = \"1 2 3\
    \ 4\" ]]\n    [[ $(candidate \"1 2 3 2 4 3 5\") = \"1 4 5\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660002815
- exit_code: 1
  program: "#!/bin/bash\n# From a list of integers, remove all elements that occur\
    \ more than once.\n# Keep order of elements left the same as in the input.\n#\n\
    # $1 is a space-separated list\nremove_duplicates() {\n    local input=$1\n  \
    \  local output=\"\"\n    local i=0\n    local j=0\n    local n=0\n    local found=0\n\
    \    local tmp=\"\"\n\n    n=$(echo \"$input\" | wc -w)\n    for i in $input;\
    \ do\n        found=0\n        for j in $output; do\n            if [ \"$i\" -eq\
    \ \"$j\" ]; then\n                found=1\n                break\n           \
    \ fi\n        done\n        if [ \"$found\" -eq 0 ]; then\n            output=\"\
    $output $i\"\n        fi\n    done\n    echo \"$output\"\n}\n\ncandidate() {\n\
    \    remove_duplicates \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"\
    \") = \"\" ]]\n    [[ $(candidate \"1 2 3 4\") = \"1 2 3 4\" ]]\n    [[ $(candidate\
    \ \"1 2 3 2 4 3 5\") = \"1 4 5\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660002815
- exit_code: 1
  program: "#!/bin/bash\n# From a list of integers, remove all elements that occur\
    \ more than once.\n# Keep order of elements left the same as in the input.\n#\n\
    # $1 is a space-separated list\nremove_duplicates() {\n  local input=\"$1\"\n\
    \  local output=\"\"\n  local seen=\"\"\n  for i in $input; do\n    if [[ ! $seen\
    \ =~ (^|[[:space:]])\"$i\"($|[[:space:]]) ]]; then\n      output=\"$output $i\"\
    \n      seen=\"$seen $i\"\n    fi\n  done\n  echo \"$output\"\n}\n\ncandidate()\
    \ {\n    remove_duplicates \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate\
    \ \"\") = \"\" ]]\n    [[ $(candidate \"1 2 3 4\") = \"1 2 3 4\" ]]\n    [[ $(candidate\
    \ \"1 2 3 2 4 3 5\") = \"1 4 5\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660002815
- exit_code: 1
  program: "#!/bin/bash\n# From a list of integers, remove all elements that occur\
    \ more than once.\n# Keep order of elements left the same as in the input.\n#\n\
    # $1 is a space-separated list\nremove_duplicates() {\n  local input=\"$1\"\n\
    \  local output=\"\"\n  local i=\"\"\n  local j=\"\"\n  for i in $input; do\n\
    \    if [[ $i != $j ]]; then\n      output=\"$output $i\"\n    fi\n    j=\"$i\"\
    \n  done\n  echo \"$output\"\n}\n\ncandidate() {\n    remove_duplicates \"$@\"\
    \n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"\") = \"\" ]]\n    [[ $(candidate\
    \ \"1 2 3 4\") = \"1 2 3 4\" ]]\n    [[ $(candidate \"1 2 3 2 4 3 5\") = \"1 4\
    \ 5\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660002815
- exit_code: 1
  program: "#!/bin/bash\n# From a list of integers, remove all elements that occur\
    \ more than once.\n# Keep order of elements left the same as in the input.\n#\n\
    # $1 is a space-separated list\nremove_duplicates() {\n  local input=\"$1\"\n\
    \  local output=\"\"\n  local i\n  local j\n  local k\n  local dup\n  for i in\
    \ $input; do\n    dup=0\n    for j in $output; do\n      if [ \"$i\" = \"$j\"\
    \ ]; then\n        dup=1\n        break\n      fi\n    done\n    if [ \"$dup\"\
    \ = \"0\" ]; then\n      output=\"$output $i\"\n    fi\n  done\n  echo $output\n\
    }\n\ncandidate() {\n    remove_duplicates \"$@\"\n}\n\nset -e\nrun_test() {\n\
    \    [[ $(candidate \"\") = \"\" ]]\n    [[ $(candidate \"1 2 3 4\") = \"1 2 3\
    \ 4\" ]]\n    [[ $(candidate \"1 2 3 2 4 3 5\") = \"1 4 5\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660002815
- exit_code: 1
  program: "#!/bin/bash\n# From a list of integers, remove all elements that occur\
    \ more than once.\n# Keep order of elements left the same as in the input.\n#\n\
    # $1 is a space-separated list\nremove_duplicates() {\n    local input=$1\n  \
    \  local output=\"\"\n    local seen=\"\"\n    for i in $input; do\n        if\
    \ [[ $seen != *$i* ]]; then\n            output=\"$output $i\"\n            seen=\"\
    $seen $i\"\n        fi\n    done\n    echo $output\n}\n\ncandidate() {\n    remove_duplicates\
    \ \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"\") = \"\" ]]\n    [[\
    \ $(candidate \"1 2 3 4\") = \"1 2 3 4\" ]]\n    [[ $(candidate \"1 2 3 2 4 3\
    \ 5\") = \"1 4 5\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660002815
- exit_code: 1
  program: "#!/bin/bash\n# From a list of integers, remove all elements that occur\
    \ more than once.\n# Keep order of elements left the same as in the input.\n#\n\
    # $1 is a space-separated list\nremove_duplicates() {\n  local input=$1\n  local\
    \ output=\"\"\n  local seen=\"\"\n  for i in $input; do\n    if [[ ! $seen =~\
    \ $i ]]; then\n      output=\"$output $i\"\n      seen=\"$seen $i\"\n    fi\n\
    \  done\n  echo $output\n}\n\ncandidate() {\n    remove_duplicates \"$@\"\n}\n\
    \nset -e\nrun_test() {\n    [[ $(candidate \"\") = \"\" ]]\n    [[ $(candidate\
    \ \"1 2 3 4\") = \"1 2 3 4\" ]]\n    [[ $(candidate \"1 2 3 2 4 3 5\") = \"1 4\
    \ 5\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660002815
- exit_code: 1
  program: "#!/bin/bash\n# From a list of integers, remove all elements that occur\
    \ more than once.\n# Keep order of elements left the same as in the input.\n#\n\
    # $1 is a space-separated list\nremove_duplicates() {\n  local input=$1\n  local\
    \ output=\"\"\n  local i=0\n  local j=0\n  local k=0\n  local n=0\n  local m=0\n\
    \  local dup=0\n  local tmp=\"\"\n  local tmp2=\"\"\n  local tmp3=\"\"\n  local\
    \ tmp4=\"\"\n  local tmp5=\"\"\n  local tmp6=\"\"\n  local tmp7=\"\"\n  local\
    \ tmp8=\"\"\n  local tmp9=\"\"\n  local tmp10=\"\"\n  local tmp11=\"\"\n  local\
    \ tmp12=\"\"\n  local tmp13=\"\"\n  local tmp14=\"\"\n  local tmp15=\"\"\n  local\
    \ tmp16=\"\"\n  local tmp17=\"\"\n  local tmp18=\"\"\n  local tmp19=\"\"\n  local\
    \ tmp20=\"\"\n  local tmp21=\"\"\n  local tmp22=\"\"\n  local tmp23=\"\"\n  local\
    \ tmp24=\"\"\n  local tmp25=\"\"\n  local tmp26=\"\"\n  local tmp27=\"\"\n  local\
    \ tmp28=\"\"\n  local tmp29=\"\"\n  local tmp30=\"\"\n  local tmp31=\"\"\n  local\
    \ tmp32=\"\"\n  local tmp33=\"\"\n  local tmp34=\"\"\n  local tmp35=\"\"\n  local\
    \ tmp36=\"\"\n  local tmp37=\"\"\n  local tmp38=\"\"\n  local tmp39=\"\"\n  local\
    \ tmp40=\"\"\n  local tmp41=\"\"\n  local tmp42=\"\"\n  local tmp43=\"\"\n  local\
    \ tmp44=\"\"\n  local tmp45=\"\"\n  local tmp46=\"\"\n  local tmp47=\"\"\n  local\
    \ tmp48=\"\"\n  local tmp49=\"\"\n  local tmp50=\"\"\n  local tmp51=\"\"\n  local\
    \ tmp52=\"\"\n  local tmp53=\"\"\n  local tmp54=\"\"\n  local tmp55=\"\"\n  local\
    \ tmp56=\"\"\n  local tmp57=\"\"\n  local tmp58=\"\"\n  local tmp59=\"\"\n  local\
    \ tmp60=\"\"\n  local tmp61=\"\"\n  local tmp62=\"\"\n  local tmp63=\"\"\n  local\
    \ tmp64=\"\"\n  local tmp65=\"\"\n  local tmp66=\"\"\n  local tmp67=\"\"\n  local\
    \ tmp68=\"\"\n  local tmp69=\"\"\n  local tmp70=\"\"\n  local tmp71=\"\"\n  local\
    \ tmp72=\"\"\n  local tmp73=\"\"\n  local tmp74=\"\"\n  local tmp75=\"\"\n  local\
    \ tmp76=\"\"\n  local tmp77=\"\"\n  local tmp\n}\n\ncandidate() {\n    remove_duplicates\
    \ \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"\") = \"\" ]]\n    [[\
    \ $(candidate \"1 2 3 4\") = \"1 2 3 4\" ]]\n    [[ $(candidate \"1 2 3 2 4 3\
    \ 5\") = \"1 4 5\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660002815
- exit_code: 1
  program: "#!/bin/bash\n# From a list of integers, remove all elements that occur\
    \ more than once.\n# Keep order of elements left the same as in the input.\n#\n\
    # $1 is a space-separated list\nremove_duplicates() {\n  local list=\"$1\"\n \
    \ local new_list=\"\"\n  local element=\"\"\n  local count=0\n  for element in\
    \ $list; do\n    count=0\n    for e in $new_list; do\n      if [ \"$e\" = \"$element\"\
    \ ]; then\n        count=$((count+1))\n      fi\n    done\n    if [ $count -eq\
    \ 0 ]; then\n      new_list=\"$new_list $element\"\n    fi\n  done\n  echo \"\
    $new_list\"\n}\n\ncandidate() {\n    remove_duplicates \"$@\"\n}\n\nset -e\nrun_test()\
    \ {\n    [[ $(candidate \"\") = \"\" ]]\n    [[ $(candidate \"1 2 3 4\") = \"\
    1 2 3 4\" ]]\n    [[ $(candidate \"1 2 3 2 4 3 5\") = \"1 4 5\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660002815
- exit_code: 1
  program: "#!/bin/bash\n# From a list of integers, remove all elements that occur\
    \ more than once.\n# Keep order of elements left the same as in the input.\n#\n\
    # $1 is a space-separated list\nremove_duplicates() {\n    local input=\"$1\"\n\
    \    local output=\"\"\n    local seen=\"\"\n    for i in $input; do\n       \
    \ if [[ ! $seen =~ $i ]]; then\n            output=\"$output $i\"\n          \
    \  seen=\"$seen $i\"\n        fi\n    done\n    echo \"$output\"\n}\n\ncandidate()\
    \ {\n    remove_duplicates \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate\
    \ \"\") = \"\" ]]\n    [[ $(candidate \"1 2 3 4\") = \"1 2 3 4\" ]]\n    [[ $(candidate\
    \ \"1 2 3 2 4 3 5\") = \"1 4 5\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660002815
- exit_code: 1
  program: "#!/bin/bash\n# From a list of integers, remove all elements that occur\
    \ more than once.\n# Keep order of elements left the same as in the input.\n#\n\
    # $1 is a space-separated list\nremove_duplicates() {\n    local -a arr=()\n \
    \   local -a seen=()\n    local -a result=()\n    local i\n    local item\n  \
    \  local seen_item\n\n    # Convert space-separated list to array\n    IFS=' '\
    \ read -r -a arr <<< \"$1\"\n\n    for i in \"${!arr[@]}\"; do\n        item=\"\
    ${arr[$i]}\"\n        seen_item=\"${seen[$item]}\"\n\n        if [[ -z \"$seen_item\"\
    \ ]]; then\n            seen[$item]=1\n            result+=(\"$item\")\n     \
    \   fi\n    done\n\n    echo \"${result[@]}\"\n}\n\ncandidate() {\n    remove_duplicates\
    \ \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"\") = \"\" ]]\n    [[\
    \ $(candidate \"1 2 3 4\") = \"1 2 3 4\" ]]\n    [[ $(candidate \"1 2 3 2 4 3\
    \ 5\") = \"1 4 5\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660002815
- exit_code: 1
  program: "#!/bin/bash\n# From a list of integers, remove all elements that occur\
    \ more than once.\n# Keep order of elements left the same as in the input.\n#\n\
    # $1 is a space-separated list\nremove_duplicates() {\n    local list=$1\n   \
    \ local new_list=\"\"\n    local element=\"\"\n    for element in $list; do\n\
    \        if ! echo \"$new_list\" | grep -q \"$element\"; then\n            new_list=\"\
    $new_list $element\"\n        fi\n    done\n    echo \"$new_list\"\n}\n\ncandidate()\
    \ {\n    remove_duplicates \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate\
    \ \"\") = \"\" ]]\n    [[ $(candidate \"1 2 3 4\") = \"1 2 3 4\" ]]\n    [[ $(candidate\
    \ \"1 2 3 2 4 3 5\") = \"1 4 5\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660002815
- exit_code: 1
  program: "#!/bin/bash\n# From a list of integers, remove all elements that occur\
    \ more than once.\n# Keep order of elements left the same as in the input.\n#\n\
    # $1 is a space-separated list\nremove_duplicates() {\n  local input=$1\n  local\
    \ output=\"\"\n  local word\n  for word in $input; do\n    if ! echo \"$output\"\
    \ | grep -q \"\\b$word\\b\"; then\n      output=\"$output $word\"\n    fi\n  done\n\
    \  echo \"$output\"\n}\n\ncandidate() {\n    remove_duplicates \"$@\"\n}\n\nset\
    \ -e\nrun_test() {\n    [[ $(candidate \"\") = \"\" ]]\n    [[ $(candidate \"\
    1 2 3 4\") = \"1 2 3 4\" ]]\n    [[ $(candidate \"1 2 3 2 4 3 5\") = \"1 4 5\"\
    \ ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660002815
- exit_code: 1
  program: "#!/bin/bash\n# From a list of integers, remove all elements that occur\
    \ more than once.\n# Keep order of elements left the same as in the input.\n#\n\
    # $1 is a space-separated list\nremove_duplicates() {\n    local input=$1\n  \
    \  local output=\"\"\n    local -A seen\n    for i in $input; do\n        if [[\
    \ -z ${seen[$i]} ]]; then\n            output+=\" $i\"\n            seen[$i]=1\n\
    \        fi\n    done\n    echo $output\n}\n\ncandidate() {\n    remove_duplicates\
    \ \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"\") = \"\" ]]\n    [[\
    \ $(candidate \"1 2 3 4\") = \"1 2 3 4\" ]]\n    [[ $(candidate \"1 2 3 2 4 3\
    \ 5\") = \"1 4 5\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660002815
- exit_code: 1
  program: "#!/bin/bash\n# From a list of integers, remove all elements that occur\
    \ more than once.\n# Keep order of elements left the same as in the input.\n#\n\
    # $1 is a space-separated list\nremove_duplicates() {\n    local -a arr=(\"$@\"\
    )\n    local -a res=()\n    local -A map=()\n    for i in \"${arr[@]}\"; do\n\
    \        if [[ -z \"${map[$i]}\" ]]; then\n            res+=(\"$i\")\n       \
    \     map[$i]=1\n        fi\n    done\n    echo \"${res[@]}\"\n}\n\ncandidate()\
    \ {\n    remove_duplicates \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate\
    \ \"\") = \"\" ]]\n    [[ $(candidate \"1 2 3 4\") = \"1 2 3 4\" ]]\n    [[ $(candidate\
    \ \"1 2 3 2 4 3 5\") = \"1 4 5\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: '/tmp/tmp10e5bp08.sh: line 11: map: bad array subscript

    /tmp/tmp10e5bp08.sh: line 13: map[$i]: bad array subscript

    '
  stdout: ''
  timestamp: 1660002815
- exit_code: 1
  program: "#!/bin/bash\n# From a list of integers, remove all elements that occur\
    \ more than once.\n# Keep order of elements left the same as in the input.\n#\n\
    # $1 is a space-separated list\nremove_duplicates() {\n    local input=\"$1\"\n\
    \    local output=\"\"\n    local -A seen\n    for i in $input; do\n        if\
    \ [[ -z \"${seen[$i]}\" ]]; then\n            output=\"$output $i\"\n        \
    \    seen[$i]=1\n        fi\n    done\n    echo $output\n}\n\ncandidate() {\n\
    \    remove_duplicates \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"\
    \") = \"\" ]]\n    [[ $(candidate \"1 2 3 4\") = \"1 2 3 4\" ]]\n    [[ $(candidate\
    \ \"1 2 3 2 4 3 5\") = \"1 4 5\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660002815
- exit_code: 1
  program: "#!/bin/bash\n# From a list of integers, remove all elements that occur\
    \ more than once.\n# Keep order of elements left the same as in the input.\n#\n\
    # $1 is a space-separated list\nremove_duplicates() {\n  local -a array\n  IFS='\
    \ ' read -r -a array <<< \"$1\"\n  local -a unique\n  for i in \"${array[@]}\"\
    ; do\n    if [[ ! \" ${unique[*]} \" =~ \" ${i} \" ]]; then\n      unique+=(\"\
    $i\")\n    fi\n  done\n  echo \"${unique[@]}\"\n}\n\ncandidate() {\n    remove_duplicates\
    \ \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"\") = \"\" ]]\n    [[\
    \ $(candidate \"1 2 3 4\") = \"1 2 3 4\" ]]\n    [[ $(candidate \"1 2 3 2 4 3\
    \ 5\") = \"1 4 5\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660002815
- exit_code: 1
  program: "#!/bin/bash\n# From a list of integers, remove all elements that occur\
    \ more than once.\n# Keep order of elements left the same as in the input.\n#\n\
    # $1 is a space-separated list\nremove_duplicates() {\n    local input=\"$1\"\n\
    \    local output=\"\"\n    local seen=\"\"\n    for i in $input; do\n       \
    \ if [[ ! \"$seen\" =~ \"$i\" ]]; then\n            seen=\"$seen $i\"\n      \
    \      output=\"$output $i\"\n        fi\n    done\n    echo \"$output\"\n}\n\n\
    candidate() {\n    remove_duplicates \"$@\"\n}\n\nset -e\nrun_test() {\n    [[\
    \ $(candidate \"\") = \"\" ]]\n    [[ $(candidate \"1 2 3 4\") = \"1 2 3 4\" ]]\n\
    \    [[ $(candidate \"1 2 3 2 4 3 5\") = \"1 4 5\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660002815
- exit_code: 1
  program: "#!/bin/bash\n# From a list of integers, remove all elements that occur\
    \ more than once.\n# Keep order of elements left the same as in the input.\n#\n\
    # $1 is a space-separated list\nremove_duplicates() {\n  local input=$1\n  local\
    \ output=()\n  local seen=()\n  for i in $input; do\n    if [[ ! \" ${seen[*]}\
    \ \" =~ \" ${i} \" ]]; then\n      output+=($i)\n      seen+=($i)\n    fi\n  done\n\
    \  echo \"${output[@]}\"\n}\n\ncandidate() {\n    remove_duplicates \"$@\"\n}\n\
    \nset -e\nrun_test() {\n    [[ $(candidate \"\") = \"\" ]]\n    [[ $(candidate\
    \ \"1 2 3 4\") = \"1 2 3 4\" ]]\n    [[ $(candidate \"1 2 3 2 4 3 5\") = \"1 4\
    \ 5\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660002815
- exit_code: 1
  program: "#!/bin/bash\n# From a list of integers, remove all elements that occur\
    \ more than once.\n# Keep order of elements left the same as in the input.\n#\n\
    # $1 is a space-separated list\nremove_duplicates() {\n    local input=\"$1\"\n\
    \    local output=\"\"\n    local seen=\"\"\n    for i in $input; do\n       \
    \ if [[ $seen != *\"$i\"* ]]; then\n            seen=\"$seen $i\"\n          \
    \  output=\"$output $i\"\n        fi\n    done\n    echo \"$output\"\n}\n\ncandidate()\
    \ {\n    remove_duplicates \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate\
    \ \"\") = \"\" ]]\n    [[ $(candidate \"1 2 3 4\") = \"1 2 3 4\" ]]\n    [[ $(candidate\
    \ \"1 2 3 2 4 3 5\") = \"1 4 5\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660002815
- exit_code: 1
  program: "#!/bin/bash\n# From a list of integers, remove all elements that occur\
    \ more than once.\n# Keep order of elements left the same as in the input.\n#\n\
    # $1 is a space-separated list\nremove_duplicates() {\n    local list=\"$1\"\n\
    \    local -a array=($list)\n    local -a uniq=()\n    local -a seen=()\n    for\
    \ i in \"${array[@]}\"; do\n        if [[ ! \" ${seen[@]} \" =~ \" ${i} \" ]];\
    \ then\n            uniq+=(\"$i\")\n            seen+=(\"$i\")\n        fi\n \
    \   done\n    echo \"${uniq[@]}\"\n}\n\ncandidate() {\n    remove_duplicates \"\
    $@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"\") = \"\" ]]\n    [[ $(candidate\
    \ \"1 2 3 4\") = \"1 2 3 4\" ]]\n    [[ $(candidate \"1 2 3 2 4 3 5\") = \"1 4\
    \ 5\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660002815
- exit_code: 1
  program: "#!/bin/bash\n# From a list of integers, remove all elements that occur\
    \ more than once.\n# Keep order of elements left the same as in the input.\n#\n\
    # $1 is a space-separated list\nremove_duplicates() {\n    local input=$1\n  \
    \  local output=\"\"\n    local seen=\"\"\n    for i in $input; do\n        if\
    \ [[ ! $seen =~ $i ]]; then\n            output=\"$output $i\"\n            seen=\"\
    $seen $i\"\n        fi\n    done\n    echo $output\n}\n\ncandidate() {\n    remove_duplicates\
    \ \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"\") = \"\" ]]\n    [[\
    \ $(candidate \"1 2 3 4\") = \"1 2 3 4\" ]]\n    [[ $(candidate \"1 2 3 2 4 3\
    \ 5\") = \"1 4 5\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660002815
- exit_code: 1
  program: "#!/bin/bash\n# From a list of integers, remove all elements that occur\
    \ more than once.\n# Keep order of elements left the same as in the input.\n#\n\
    # $1 is a space-separated list\nremove_duplicates() {\n  local -a array\n  local\
    \ -a seen\n  local -a result\n  local i\n  local item\n\n  IFS=' ' read -r -a\
    \ array <<< \"$1\"\n\n  for i in \"${!array[@]}\"; do\n    item=\"${array[$i]}\"\
    \n    if [[ -z \"${seen[$item]}\" ]]; then\n      seen[$item]=1\n      result+=(\"\
    $item\")\n    fi\n  done\n\n  echo \"${result[@]}\"\n}\n\ncandidate() {\n    remove_duplicates\
    \ \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"\") = \"\" ]]\n    [[\
    \ $(candidate \"1 2 3 4\") = \"1 2 3 4\" ]]\n    [[ $(candidate \"1 2 3 2 4 3\
    \ 5\") = \"1 4 5\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660002815
- exit_code: 1
  program: "#!/bin/bash\n# From a list of integers, remove all elements that occur\
    \ more than once.\n# Keep order of elements left the same as in the input.\n#\n\
    # $1 is a space-separated list\nremove_duplicates() {\n    local input=$1\n  \
    \  local output=\"\"\n    local i=0\n    local j=0\n    local k=0\n    local n=0\n\
    \    local m=0\n    local tmp=\"\"\n    local tmp2=\"\"\n    local tmp3=\"\"\n\
    \    local tmp4=\"\"\n    local tmp5=\"\"\n    local tmp6=\"\"\n    local tmp7=\"\
    \"\n    local tmp8=\"\"\n    local tmp9=\"\"\n    local tmp10=\"\"\n    local\
    \ tmp11=\"\"\n    local tmp12=\"\"\n    local tmp13=\"\"\n    local tmp14=\"\"\
    \n    local tmp15=\"\"\n    local tmp16=\"\"\n    local tmp17=\"\"\n    local\
    \ tmp18=\"\"\n    local tmp19=\"\"\n    local tmp20=\"\"\n    local tmp21=\"\"\
    \n    local tmp22=\"\"\n    local tmp23=\"\"\n    local tmp24=\"\"\n    local\
    \ tmp25=\"\"\n    local tmp26=\"\"\n    local tmp27=\"\"\n    local tmp28=\"\"\
    \n    local tmp29=\"\"\n    local tmp30=\"\"\n    local tmp31=\"\"\n    local\
    \ tmp32=\"\"\n    local tmp33=\"\"\n    local tmp34=\"\"\n    local tmp35=\"\"\
    \n    local tmp36=\"\"\n    local tmp37=\"\"\n    local tmp38=\"\"\n    local\
    \ tmp39=\"\"\n    local tmp40=\"\"\n    local tmp41=\"\"\n    local tmp42=\"\"\
    \n    local tmp43=\"\"\n    local tmp44=\"\"\n    local tmp45=\"\"\n    local\
    \ tmp46=\"\"\n    local tmp47=\"\"\n    local tmp48=\"\"\n    local tmp49=\"\"\
    \n    local tmp50=\"\"\n    local tmp51=\"\"\n    local tmp52=\"\"\n    local\
    \ tmp53=\"\"\n    local tmp54=\"\"\n    local tmp55=\"\"\n    local tmp56=\"\"\
    \n    local tmp57=\"\"\n    local tmp58=\"\"\n    local tmp59=\"\"\n    local\
    \ tmp60=\"\"\n    local tmp61=\"\"\n    local tmp62=\"\"\n    local tmp63=\"\"\
    \n    local tmp64=\"\"\n    local tmp65=\"\"\n    local tmp66=\"\"\n    local\
    \ tmp67=\"\"\n    local tmp68=\"\"\n    local tmp69=\"\"\n    local tmp70=\"\"\
    \n    local tmp71=\"\"\n    local tmp72=\"\"\n    local tmp73=\"\"\n    local\
    \ tmp74=\"\"\n    local tmp75=\"\"\n    local tmp76=\"\"\n    local tmp77=\"\"\
    \n    local tmp78=\"\"\n    local tmp\n}\n\ncandidate() {\n    remove_duplicates\
    \ \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"\") = \"\" ]]\n    [[\
    \ $(candidate \"1 2 3 4\") = \"1 2 3 4\" ]]\n    [[ $(candidate \"1 2 3 2 4 3\
    \ 5\") = \"1 4 5\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660002815
- exit_code: 1
  program: "#!/bin/bash\n# From a list of integers, remove all elements that occur\
    \ more than once.\n# Keep order of elements left the same as in the input.\n#\n\
    # $1 is a space-separated list\nremove_duplicates() {\n    local input=($1)\n\
    \    local output=()\n    local seen=()\n    for i in \"${input[@]}\"; do\n  \
    \      if [[ ! \"${seen[*]}\" =~ \"$i\" ]]; then\n            output+=($i)\n \
    \           seen+=($i)\n        fi\n    done\n    echo \"${output[@]}\"\n}\n\n\
    candidate() {\n    remove_duplicates \"$@\"\n}\n\nset -e\nrun_test() {\n    [[\
    \ $(candidate \"\") = \"\" ]]\n    [[ $(candidate \"1 2 3 4\") = \"1 2 3 4\" ]]\n\
    \    [[ $(candidate \"1 2 3 2 4 3 5\") = \"1 4 5\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660002815
- exit_code: 1
  program: "#!/bin/bash\n# From a list of integers, remove all elements that occur\
    \ more than once.\n# Keep order of elements left the same as in the input.\n#\n\
    # $1 is a space-separated list\nremove_duplicates() {\n    echo \"$1\" | tr '\
    \ ' '\\n' | awk '!x[$0]++'\n}\n\ncandidate() {\n    remove_duplicates \"$@\"\n\
    }\n\nset -e\nrun_test() {\n    [[ $(candidate \"\") = \"\" ]]\n    [[ $(candidate\
    \ \"1 2 3 4\") = \"1 2 3 4\" ]]\n    [[ $(candidate \"1 2 3 2 4 3 5\") = \"1 4\
    \ 5\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660002815
- exit_code: 1
  program: "#!/bin/bash\n# From a list of integers, remove all elements that occur\
    \ more than once.\n# Keep order of elements left the same as in the input.\n#\n\
    # $1 is a space-separated list\nremove_duplicates() {\n    local -a array=($1)\n\
    \    local -a unique\n    local -a duplicates\n    local i\n    for i in \"${array[@]}\"\
    ; do\n        if [[ \" ${unique[*]} \" == *\" $i \"* ]]; then\n            duplicates+=($i)\n\
    \        else\n            unique+=($i)\n        fi\n    done\n    echo \"${unique[@]}\"\
    \n}\n\ncandidate() {\n    remove_duplicates \"$@\"\n}\n\nset -e\nrun_test() {\n\
    \    [[ $(candidate \"\") = \"\" ]]\n    [[ $(candidate \"1 2 3 4\") = \"1 2 3\
    \ 4\" ]]\n    [[ $(candidate \"1 2 3 2 4 3 5\") = \"1 4 5\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660002814
- exit_code: 1
  program: "#!/bin/bash\n# From a list of integers, remove all elements that occur\
    \ more than once.\n# Keep order of elements left the same as in the input.\n#\n\
    # $1 is a space-separated list\nremove_duplicates() {\n  local input=$1\n  local\
    \ output=\"\"\n  local seen=\"\"\n  for i in $input; do\n    if [[ $seen != *\"\
    $i\"* ]]; then\n      output=\"$output $i\"\n      seen=\"$seen $i\"\n    fi\n\
    \  done\n  echo $output\n}\n\ncandidate() {\n    remove_duplicates \"$@\"\n}\n\
    \nset -e\nrun_test() {\n    [[ $(candidate \"\") = \"\" ]]\n    [[ $(candidate\
    \ \"1 2 3 4\") = \"1 2 3 4\" ]]\n    [[ $(candidate \"1 2 3 2 4 3 5\") = \"1 4\
    \ 5\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660002815
- exit_code: 1
  program: "#!/bin/bash\n# From a list of integers, remove all elements that occur\
    \ more than once.\n# Keep order of elements left the same as in the input.\n#\n\
    # $1 is a space-separated list\nremove_duplicates() {\n    local list=$1\n   \
    \ local result=\"\"\n    local element=\"\"\n    for element in $list; do\n  \
    \      if [[ $result != *\" $element \"* ]]; then\n            result=\"$result\
    \ $element\"\n        fi\n    done\n    echo \"$result\"\n}\n\ncandidate() {\n\
    \    remove_duplicates \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"\
    \") = \"\" ]]\n    [[ $(candidate \"1 2 3 4\") = \"1 2 3 4\" ]]\n    [[ $(candidate\
    \ \"1 2 3 2 4 3 5\") = \"1 4 5\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660002815
- exit_code: 1
  program: "#!/bin/bash\n# From a list of integers, remove all elements that occur\
    \ more than once.\n# Keep order of elements left the same as in the input.\n#\n\
    # $1 is a space-separated list\nremove_duplicates() {\n    local input=$1\n  \
    \  local output=\"\"\n    local seen=\"\"\n    for i in $input; do\n        if\
    \ [[ ! $seen =~ $i ]]; then\n            output=\"$output $i\"\n            seen=\"\
    $seen $i\"\n        fi\n    done\n    echo $output\n}\n\ncandidate() {\n    remove_duplicates\
    \ \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"\") = \"\" ]]\n    [[\
    \ $(candidate \"1 2 3 4\") = \"1 2 3 4\" ]]\n    [[ $(candidate \"1 2 3 2 4 3\
    \ 5\") = \"1 4 5\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660002815
- exit_code: 1
  program: "#!/bin/bash\n# From a list of integers, remove all elements that occur\
    \ more than once.\n# Keep order of elements left the same as in the input.\n#\n\
    # $1 is a space-separated list\nremove_duplicates() {\n  local -a array=(\"$@\"\
    )\n  local -a unique=()\n  local -a duplicates=()\n  local -a result=()\n  local\
    \ i=0\n  local j=0\n  local k=0\n  local l=0\n  local m=0\n  local n=0\n  local\
    \ o=0\n  local p=0\n  local q=0\n  local r=0\n  local s=0\n  local t=0\n  local\
    \ u=0\n  local v=0\n  local w=0\n  local x=0\n  local y=0\n  local z=0\n  local\
    \ aa=0\n  local bb=0\n  local cc=0\n  local dd=0\n  local ee=0\n  local ff=0\n\
    \  local gg=0\n  local hh=0\n  local ii=0\n  local jj=0\n  local kk=0\n  local\
    \ ll=0\n  local mm=0\n  local nn=0\n  local oo=0\n  local pp=0\n  local qq=0\n\
    \  local rr=0\n  local ss=0\n  local tt=0\n  local uu=0\n  local vv=0\n  local\
    \ ww=0\n  local xx=0\n  local yy=0\n  local zz=0\n  local aaa=0\n  local bbb=0\n\
    \  local ccc=0\n  local ddd=0\n  local eee=0\n  local fff=0\n  local ggg=0\n \
    \ local hhh=0\n  local iii=0\n  local jjj=0\n  local kkk=0\n  local lll=0\n  local\
    \ mmm=0\n  local nnn=0\n  local ooo=0\n  local ppp=0\n  local qqq=0\n  local rrr=0\n\
    \  local sss=0\n  local ttt=0\n  local uuu=0\n  local vvv=0\n  local www=0\n \
    \ local xxx=0\n  local yyy=0\n  local zzz=0\n  local aaaa=0\n  local bbbb=0\n\
    }\n\ncandidate() {\n    remove_duplicates \"$@\"\n}\n\nset -e\nrun_test() {\n\
    \    [[ $(candidate \"\") = \"\" ]]\n    [[ $(candidate \"1 2 3 4\") = \"1 2 3\
    \ 4\" ]]\n    [[ $(candidate \"1 2 3 2 4 3 5\") = \"1 4 5\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660002815
- exit_code: 1
  program: "#!/bin/bash\n# From a list of integers, remove all elements that occur\
    \ more than once.\n# Keep order of elements left the same as in the input.\n#\n\
    # $1 is a space-separated list\nremove_duplicates() {\n    local input=$1\n  \
    \  local output=\"\"\n    local seen=\"\"\n    for i in $input; do\n        if\
    \ [ -z \"${seen##*$i*}\" ]; then\n            continue\n        fi\n        output=\"\
    $output $i\"\n        seen=\"$seen $i\"\n    done\n    echo \"$output\"\n}\n\n\
    candidate() {\n    remove_duplicates \"$@\"\n}\n\nset -e\nrun_test() {\n    [[\
    \ $(candidate \"\") = \"\" ]]\n    [[ $(candidate \"1 2 3 4\") = \"1 2 3 4\" ]]\n\
    \    [[ $(candidate \"1 2 3 2 4 3 5\") = \"1 4 5\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660002815
- exit_code: 1
  program: "#!/bin/bash\n# From a list of integers, remove all elements that occur\
    \ more than once.\n# Keep order of elements left the same as in the input.\n#\n\
    # $1 is a space-separated list\nremove_duplicates() {\n    local input=\"$1\"\n\
    \    local output=\"\"\n    local seen=\"\"\n    for i in $input; do\n       \
    \ if ! [[ \"$seen\" =~ \"$i\" ]]; then\n            output=\"$output $i\"\n  \
    \          seen=\"$seen $i\"\n        fi\n    done\n    echo \"$output\"\n}\n\n\
    candidate() {\n    remove_duplicates \"$@\"\n}\n\nset -e\nrun_test() {\n    [[\
    \ $(candidate \"\") = \"\" ]]\n    [[ $(candidate \"1 2 3 4\") = \"1 2 3 4\" ]]\n\
    \    [[ $(candidate \"1 2 3 2 4 3 5\") = \"1 4 5\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660002815
- exit_code: 1
  program: "#!/bin/bash\n# From a list of integers, remove all elements that occur\
    \ more than once.\n# Keep order of elements left the same as in the input.\n#\n\
    # $1 is a space-separated list\nremove_duplicates() {\n    local input=\"$1\"\n\
    \    local output=\"\"\n    local seen=\"\"\n    for i in $input; do\n       \
    \ if ! [[ \"$seen\" =~ \"$i\" ]]; then\n            seen=\"$seen $i\"\n      \
    \      output=\"$output $i\"\n        fi\n    done\n    echo \"$output\"\n}\n\n\
    candidate() {\n    remove_duplicates \"$@\"\n}\n\nset -e\nrun_test() {\n    [[\
    \ $(candidate \"\") = \"\" ]]\n    [[ $(candidate \"1 2 3 4\") = \"1 2 3 4\" ]]\n\
    \    [[ $(candidate \"1 2 3 2 4 3 5\") = \"1 4 5\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660002815
- exit_code: 1
  program: "#!/bin/bash\n# From a list of integers, remove all elements that occur\
    \ more than once.\n# Keep order of elements left the same as in the input.\n#\n\
    # $1 is a space-separated list\nremove_duplicates() {\n  local input=\"$1\"\n\
    \  local output=\"\"\n  local seen=\"\"\n  for i in $input; do\n    if [[ \"$seen\"\
    \ == *\" $i \"* ]]; then\n      continue\n    fi\n    seen=\"$seen $i \"\n   \
    \ output=\"$output $i\"\n  done\n  echo \"$output\"\n}\n\ncandidate() {\n    remove_duplicates\
    \ \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"\") = \"\" ]]\n    [[\
    \ $(candidate \"1 2 3 4\") = \"1 2 3 4\" ]]\n    [[ $(candidate \"1 2 3 2 4 3\
    \ 5\") = \"1 4 5\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660002815
- exit_code: 1
  program: "#!/bin/bash\n# From a list of integers, remove all elements that occur\
    \ more than once.\n# Keep order of elements left the same as in the input.\n#\n\
    # $1 is a space-separated list\nremove_duplicates() {\n  local input=$1\n  local\
    \ output=\"\"\n  local seen=\"\"\n  for i in $input; do\n    if [[ -z \"${seen//$i/}\"\
    \ ]]; then\n      output=\"$output $i\"\n      seen=\"$seen $i\"\n    fi\n  done\n\
    \  echo $output\n}\n\ncandidate() {\n    remove_duplicates \"$@\"\n}\n\nset -e\n\
    run_test() {\n    [[ $(candidate \"\") = \"\" ]]\n    [[ $(candidate \"1 2 3 4\"\
    ) = \"1 2 3 4\" ]]\n    [[ $(candidate \"1 2 3 2 4 3 5\") = \"1 4 5\" ]]\n}\n\n\
    run_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660002815
- exit_code: 1
  program: "#!/bin/bash\n# From a list of integers, remove all elements that occur\
    \ more than once.\n# Keep order of elements left the same as in the input.\n#\n\
    # $1 is a space-separated list\nremove_duplicates() {\n    local list=\"$1\"\n\
    \    local new_list=\"\"\n    local item\n    for item in $list; do\n        if\
    \ ! echo \"$new_list\" | grep -q -w \"$item\"; then\n            new_list=\"$new_list\
    \ $item\"\n        fi\n    done\n    echo \"$new_list\"\n}\n\ncandidate() {\n\
    \    remove_duplicates \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"\
    \") = \"\" ]]\n    [[ $(candidate \"1 2 3 4\") = \"1 2 3 4\" ]]\n    [[ $(candidate\
    \ \"1 2 3 2 4 3 5\") = \"1 4 5\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660002815
- exit_code: 1
  program: "#!/bin/bash\n# From a list of integers, remove all elements that occur\
    \ more than once.\n# Keep order of elements left the same as in the input.\n#\n\
    # $1 is a space-separated list\nremove_duplicates() {\n  local input=\"$1\"\n\
    \  local output=\"\"\n  local seen=\"\"\n  local word=\"\"\n  for word in $input;\
    \ do\n    if [[ ! \"$seen\" =~ \"$word\" ]]; then\n      output=\"$output $word\"\
    \n      seen=\"$seen $word\"\n    fi\n  done\n  echo \"$output\"\n}\n\ncandidate()\
    \ {\n    remove_duplicates \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate\
    \ \"\") = \"\" ]]\n    [[ $(candidate \"1 2 3 4\") = \"1 2 3 4\" ]]\n    [[ $(candidate\
    \ \"1 2 3 2 4 3 5\") = \"1 4 5\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660002815
- exit_code: 1
  program: "#!/bin/bash\n# From a list of integers, remove all elements that occur\
    \ more than once.\n# Keep order of elements left the same as in the input.\n#\n\
    # $1 is a space-separated list\nremove_duplicates() {\n    local input=\"$1\"\n\
    \    local output=\"\"\n    local seen=\"\"\n    for i in $input; do\n       \
    \ if [[ -z \"${seen[$i]}\" ]]; then\n            seen[$i]=1\n            output=\"\
    $output $i\"\n        fi\n    done\n    echo \"$output\"\n}\n\ncandidate() {\n\
    \    remove_duplicates \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"\
    \") = \"\" ]]\n    [[ $(candidate \"1 2 3 4\") = \"1 2 3 4\" ]]\n    [[ $(candidate\
    \ \"1 2 3 2 4 3 5\") = \"1 4 5\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660002815
- exit_code: 1
  program: "#!/bin/bash\n# From a list of integers, remove all elements that occur\
    \ more than once.\n# Keep order of elements left the same as in the input.\n#\n\
    # $1 is a space-separated list\nremove_duplicates() {\n    local input=$1\n  \
    \  local output=\"\"\n    local i=0\n    local j=0\n    local k=0\n    local l=0\n\
    \    local m=0\n    local n=0\n    local o=0\n    local p=0\n    local q=0\n \
    \   local r=0\n    local s=0\n    local t=0\n    local u=0\n    local v=0\n  \
    \  local w=0\n    local x=0\n    local y=0\n    local z=0\n    local aa=0\n  \
    \  local ab=0\n    local ac=0\n    local ad=0\n    local ae=0\n    local af=0\n\
    \    local ag=0\n    local ah=0\n    local ai=0\n    local aj=0\n    local ak=0\n\
    \    local al=0\n    local am=0\n    local an=0\n    local ao=0\n    local ap=0\n\
    \    local aq=0\n    local ar=0\n    local as=0\n    local at=0\n    local au=0\n\
    \    local av=0\n    local aw=0\n    local ax=0\n    local ay=0\n    local az=0\n\
    \    local ba=0\n    local bb=0\n    local bc=0\n    local bd=0\n    local be=0\n\
    \    local bf=0\n    local bg=0\n    local bh=0\n    local bi=0\n    local bj=0\n\
    \    local bk=0\n    local bl=0\n    local bm=0\n    local bn=0\n    local bo=0\n\
    \    local bp=0\n    local bq=0\n    local br=0\n    local bs=0\n    local bt=0\n\
    \    local bu=0\n    local bv=0\n    local bw=0\n    local bx=0\n    local by=0\n\
    \    local bz=0\n    local ca=0\n    local cb=0\n    local cc=0\n    local cd=0\n\
    \    local ce=0\n    local cf=0\n    local cg=0\n    local ch=0\n    local ci=0\n\
    \n}\n\ncandidate() {\n    remove_duplicates \"$@\"\n}\n\nset -e\nrun_test() {\n\
    \    [[ $(candidate \"\") = \"\" ]]\n    [[ $(candidate \"1 2 3 4\") = \"1 2 3\
    \ 4\" ]]\n    [[ $(candidate \"1 2 3 2 4 3 5\") = \"1 4 5\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660002815
- exit_code: 1
  program: "#!/bin/bash\n# From a list of integers, remove all elements that occur\
    \ more than once.\n# Keep order of elements left the same as in the input.\n#\n\
    # $1 is a space-separated list\nremove_duplicates() {\n  local list=$1\n  local\
    \ unique_list=()\n  local unique_list_length=0\n  local list_length=0\n  local\
    \ i=0\n  local j=0\n  local is_unique=0\n\n  list_length=$(echo \"$list\" | wc\
    \ -w)\n  for i in $(seq 1 $list_length); do\n    is_unique=1\n    for j in $(seq\
    \ 1 $unique_list_length); do\n      if [ \"$(echo \"$list\" | cut -d ' ' -f $i)\"\
    \ = \"$(echo \"${unique_list[@]}\" | cut -d ' ' -f $j)\" ]; then\n        is_unique=0\n\
    \        break\n      fi\n    done\n    if [ $is_unique -eq 1 ]; then\n      unique_list[$unique_list_length]=$(echo\
    \ \"$list\" | cut -d ' ' -f $i)\n      unique_list_length=$((unique_list_length\
    \ + 1))\n    fi\n  done\n\n  echo \"${unique_list[@]}\"\n}\n\ncandidate() {\n\
    \    remove_duplicates \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"\
    \") = \"\" ]]\n    [[ $(candidate \"1 2 3 4\") = \"1 2 3 4\" ]]\n    [[ $(candidate\
    \ \"1 2 3 2 4 3 5\") = \"1 4 5\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660002815
- exit_code: 1
  program: "#!/bin/bash\n# From a list of integers, remove all elements that occur\
    \ more than once.\n# Keep order of elements left the same as in the input.\n#\n\
    # $1 is a space-separated list\nremove_duplicates() {\n    local input=$1\n  \
    \  local output=\"\"\n    local seen=\"\"\n    for i in $input; do\n        if\
    \ [[ $seen == *\" $i \"* ]]; then\n            continue\n        fi\n        seen=\"\
    $seen $i \"\n        output=\"$output $i\"\n    done\n    echo $output\n}\n\n\
    candidate() {\n    remove_duplicates \"$@\"\n}\n\nset -e\nrun_test() {\n    [[\
    \ $(candidate \"\") = \"\" ]]\n    [[ $(candidate \"1 2 3 4\") = \"1 2 3 4\" ]]\n\
    \    [[ $(candidate \"1 2 3 2 4 3 5\") = \"1 4 5\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660002815
- exit_code: 1
  program: "#!/bin/bash\n# From a list of integers, remove all elements that occur\
    \ more than once.\n# Keep order of elements left the same as in the input.\n#\n\
    # $1 is a space-separated list\nremove_duplicates() {\n    local list=\"$1\"\n\
    \    local -a seen\n    local -a result\n    local item\n    for item in $list;\
    \ do\n        if ! contains \"${seen[@]}\" \"$item\"; then\n            result+=(\"\
    $item\")\n        fi\n        seen+=(\"$item\")\n    done\n    echo \"${result[@]}\"\
    \n}\n\ncandidate() {\n    remove_duplicates \"$@\"\n}\n\nset -e\nrun_test() {\n\
    \    [[ $(candidate \"\") = \"\" ]]\n    [[ $(candidate \"1 2 3 4\") = \"1 2 3\
    \ 4\" ]]\n    [[ $(candidate \"1 2 3 2 4 3 5\") = \"1 4 5\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: '/tmp/tmptxc525fi.sh: line 12: contains: command not found

    /tmp/tmptxc525fi.sh: line 12: contains: command not found

    /tmp/tmptxc525fi.sh: line 12: contains: command not found

    /tmp/tmptxc525fi.sh: line 12: contains: command not found

    /tmp/tmptxc525fi.sh: line 12: contains: command not found

    /tmp/tmptxc525fi.sh: line 12: contains: command not found

    /tmp/tmptxc525fi.sh: line 12: contains: command not found

    /tmp/tmptxc525fi.sh: line 12: contains: command not found

    /tmp/tmptxc525fi.sh: line 12: contains: command not found

    /tmp/tmptxc525fi.sh: line 12: contains: command not found

    /tmp/tmptxc525fi.sh: line 12: contains: command not found

    '
  stdout: ''
  timestamp: 1660002815
- exit_code: 0
  program: "#!/bin/bash\n# From a list of integers, remove all elements that occur\
    \ more than once.\n# Keep order of elements left the same as in the input.\n#\n\
    # $1 is a space-separated list\nremove_duplicates() {\n  local -a array=($1)\n\
    \  local -a unique_array=()\n  local -a duplicates=()\n  local -a result=()\n\
    \  local i\n  local j\n  local k\n  local found\n  local item\n\n  for i in \"\
    ${array[@]}\"; do\n    found=0\n    for j in \"${unique_array[@]}\"; do\n    \
    \  if [[ \"$i\" == \"$j\" ]]; then\n        found=1\n        break\n      fi\n\
    \    done\n    if [[ $found -eq 0 ]]; then\n      unique_array+=(\"$i\")\n   \
    \ else\n      duplicates+=(\"$i\")\n    fi\n  done\n\n  for i in \"${array[@]}\"\
    ; do\n    found=0\n    for j in \"${duplicates[@]}\"; do\n      if [[ \"$i\" ==\
    \ \"$j\" ]]; then\n        found=1\n        break\n      fi\n    done\n    if\
    \ [[ $found -eq 0 ]]; then\n      result+=(\"$i\")\n    fi\n  done\n\n  echo \"\
    ${result[@]}\"\n}\n\ncandidate() {\n    remove_duplicates \"$@\"\n}\n\nset -e\n\
    run_test() {\n    [[ $(candidate \"\") = \"\" ]]\n    [[ $(candidate \"1 2 3 4\"\
    ) = \"1 2 3 4\" ]]\n    [[ $(candidate \"1 2 3 2 4 3 5\") = \"1 4 5\" ]]\n}\n\n\
    run_test"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660002815
- exit_code: 1
  program: "#!/bin/bash\n# From a list of integers, remove all elements that occur\
    \ more than once.\n# Keep order of elements left the same as in the input.\n#\n\
    # $1 is a space-separated list\nremove_duplicates() {\n  local input=$1\n  local\
    \ output=\"\"\n  local i\n\n  for i in $input; do\n    if [[ \" $output \" =~\
    \ \" $i \" ]]; then\n      continue\n    fi\n    output=\"$output $i\"\n  done\n\
    \n  echo \"$output\"\n}\n\ncandidate() {\n    remove_duplicates \"$@\"\n}\n\n\
    set -e\nrun_test() {\n    [[ $(candidate \"\") = \"\" ]]\n    [[ $(candidate \"\
    1 2 3 4\") = \"1 2 3 4\" ]]\n    [[ $(candidate \"1 2 3 2 4 3 5\") = \"1 4 5\"\
    \ ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660002815
- exit_code: 1
  program: "#!/bin/bash\n# From a list of integers, remove all elements that occur\
    \ more than once.\n# Keep order of elements left the same as in the input.\n#\n\
    # $1 is a space-separated list\nremove_duplicates() {\n    local -a array=(\"\
    $@\")\n    local -a unique=()\n    local -a duplicates=()\n    local -a result=()\n\
    \    local i\n    local j\n    local is_duplicate\n\n    for ((i = 0; i < ${#array[@]};\
    \ i++)); do\n        is_duplicate=0\n        for ((j = 0; j < ${#unique[@]}; j++));\
    \ do\n            if [[ \"${array[i]}\" == \"${unique[j]}\" ]]; then\n       \
    \         duplicates+=(\"${array[i]}\")\n                is_duplicate=1\n    \
    \            break\n            fi\n        done\n        if [[ \"$is_duplicate\"\
    \ == \"0\" ]]; then\n            unique+=(\"${array[i]}\")\n        fi\n    done\n\
    \n    for ((i = 0; i < ${#array[@]}; i++)); do\n        is_duplicate=0\n     \
    \   for ((j = 0; j < ${#duplicates[@]}; j++)); do\n            if [[ \"${array[i]}\"\
    \ == \"${duplicates[j]}\" ]]; then\n                is_duplicate=1\n         \
    \       break\n            fi\n        done\n        if [[ \"$is_duplicate\" ==\
    \ \"0\" ]]; then\n            result+=(\"${array[i]}\")\n        fi\n    done\n\
    \n    echo \"${result[@]}\"\n}\n\ncandidate() {\n    remove_duplicates \"$@\"\n\
    }\n\nset -e\nrun_test() {\n    [[ $(candidate \"\") = \"\" ]]\n    [[ $(candidate\
    \ \"1 2 3 4\") = \"1 2 3 4\" ]]\n    [[ $(candidate \"1 2 3 2 4 3 5\") = \"1 4\
    \ 5\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660002815
- exit_code: 1
  program: "#!/bin/bash\n# From a list of integers, remove all elements that occur\
    \ more than once.\n# Keep order of elements left the same as in the input.\n#\n\
    # $1 is a space-separated list\nremove_duplicates() {\n    local list=$1\n   \
    \ local out=\"\"\n    local seen=\"\"\n    for i in $list; do\n        if [[ !\
    \ $seen =~ $i ]]; then\n            out=\"$out $i\"\n            seen=\"$seen\
    \ $i\"\n        fi\n    done\n    echo $out\n}\n\ncandidate() {\n    remove_duplicates\
    \ \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"\") = \"\" ]]\n    [[\
    \ $(candidate \"1 2 3 4\") = \"1 2 3 4\" ]]\n    [[ $(candidate \"1 2 3 2 4 3\
    \ 5\") = \"1 4 5\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660002815
- exit_code: 1
  program: "#!/bin/bash\n# From a list of integers, remove all elements that occur\
    \ more than once.\n# Keep order of elements left the same as in the input.\n#\n\
    # $1 is a space-separated list\nremove_duplicates() {\n    local list=\"$1\"\n\
    \    local unique=\"\"\n    local item\n    for item in $list; do\n        if\
    \ ! echo \"$unique\" | grep -q -w \"$item\"; then\n            unique=\"$unique\
    \ $item\"\n        fi\n    done\n    echo \"$unique\"\n}\n\ncandidate() {\n  \
    \  remove_duplicates \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"\"\
    ) = \"\" ]]\n    [[ $(candidate \"1 2 3 4\") = \"1 2 3 4\" ]]\n    [[ $(candidate\
    \ \"1 2 3 2 4 3 5\") = \"1 4 5\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660002815
- exit_code: 1
  program: "#!/bin/bash\n# From a list of integers, remove all elements that occur\
    \ more than once.\n# Keep order of elements left the same as in the input.\n#\n\
    # $1 is a space-separated list\nremove_duplicates() {\n  local input=\"$1\"\n\
    \  local output=\"\"\n  local seen=\"\"\n  for i in $input; do\n    if [[ \"$seen\"\
    \ == *\"$i\"* ]]; then\n      continue\n    fi\n    seen=\"$seen $i\"\n    output=\"\
    $output $i\"\n  done\n  echo \"$output\"\n}\n\ncandidate() {\n    remove_duplicates\
    \ \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"\") = \"\" ]]\n    [[\
    \ $(candidate \"1 2 3 4\") = \"1 2 3 4\" ]]\n    [[ $(candidate \"1 2 3 2 4 3\
    \ 5\") = \"1 4 5\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660002815
- exit_code: 1
  program: "#!/bin/bash\n# From a list of integers, remove all elements that occur\
    \ more than once.\n# Keep order of elements left the same as in the input.\n#\n\
    # $1 is a space-separated list\nremove_duplicates() {\n    local list=\"$1\"\n\
    \    local seen=\"\"\n    local out=\"\"\n    for i in $list; do\n        if !\
    \ echo \"$seen\" | grep -q \"$i\"; then\n            seen=\"$seen $i\"\n     \
    \       out=\"$out $i\"\n        fi\n    done\n    echo \"$out\"\n}\n\ncandidate()\
    \ {\n    remove_duplicates \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate\
    \ \"\") = \"\" ]]\n    [[ $(candidate \"1 2 3 4\") = \"1 2 3 4\" ]]\n    [[ $(candidate\
    \ \"1 2 3 2 4 3 5\") = \"1 4 5\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660002815
- exit_code: 1
  program: "#!/bin/bash\n# From a list of integers, remove all elements that occur\
    \ more than once.\n# Keep order of elements left the same as in the input.\n#\n\
    # $1 is a space-separated list\nremove_duplicates() {\n    local list=\"$1\"\n\
    \    local seen=\"\"\n    local out=\"\"\n    for i in $list; do\n        if !\
    \ echo \"$seen\" | grep -q \"$i\"; then\n            seen=\"$seen $i\"\n     \
    \       out=\"$out $i\"\n        fi\n    done\n    echo \"$out\"\n}\n\ncandidate()\
    \ {\n    remove_duplicates \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate\
    \ \"\") = \"\" ]]\n    [[ $(candidate \"1 2 3 4\") = \"1 2 3 4\" ]]\n    [[ $(candidate\
    \ \"1 2 3 2 4 3 5\") = \"1 4 5\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660002815
- exit_code: 1
  program: "#!/bin/bash\n# From a list of integers, remove all elements that occur\
    \ more than once.\n# Keep order of elements left the same as in the input.\n#\n\
    # $1 is a space-separated list\nremove_duplicates() {\n    local input=\"$1\"\n\
    \    local output=\"\"\n    local seen=\"\"\n    for i in $input; do\n       \
    \ if [[ ! $seen =~ $i ]]; then\n            output=\"$output $i\"\n          \
    \  seen=\"$seen $i\"\n        fi\n    done\n    echo \"$output\"\n}\n\ncandidate()\
    \ {\n    remove_duplicates \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate\
    \ \"\") = \"\" ]]\n    [[ $(candidate \"1 2 3 4\") = \"1 2 3 4\" ]]\n    [[ $(candidate\
    \ \"1 2 3 2 4 3 5\") = \"1 4 5\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660002815
- exit_code: 1
  program: "#!/bin/bash\n# From a list of integers, remove all elements that occur\
    \ more than once.\n# Keep order of elements left the same as in the input.\n#\n\
    # $1 is a space-separated list\nremove_duplicates() {\n    local input=$1\n  \
    \  local output=\"\"\n    local seen=\"\"\n    for i in $input; do\n        if\
    \ [[ ! $seen =~ $i ]]; then\n            output=\"$output $i\"\n            seen=\"\
    $seen $i\"\n        fi\n    done\n    echo $output\n}\n\ncandidate() {\n    remove_duplicates\
    \ \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"\") = \"\" ]]\n    [[\
    \ $(candidate \"1 2 3 4\") = \"1 2 3 4\" ]]\n    [[ $(candidate \"1 2 3 2 4 3\
    \ 5\") = \"1 4 5\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660002815
- exit_code: 1
  program: "#!/bin/bash\n# From a list of integers, remove all elements that occur\
    \ more than once.\n# Keep order of elements left the same as in the input.\n#\n\
    # $1 is a space-separated list\nremove_duplicates() {\n    local -a arr=(\"$@\"\
    )\n    local -a unique\n    local -a duplicates\n    local -i i\n    local -i\
    \ j\n    local -i n=${#arr[@]}\n    local -i m=0\n    local -i d=0\n\n    for\
    \ ((i=0; i<n; i++)); do\n        for ((j=i+1; j<n; j++)); do\n            if [[\
    \ ${arr[i]} == ${arr[j]} ]]; then\n                duplicates[d++]=${arr[i]}\n\
    \                break\n            fi\n        done\n    done\n\n    for ((i=0;\
    \ i<n; i++)); do\n        for ((j=0; j<d; j++)); do\n            if [[ ${arr[i]}\
    \ == ${duplicates[j]} ]]; then\n                break\n            fi\n      \
    \  done\n        if [[ $j == $d ]]; then\n            unique[m++]=${arr[i]}\n\
    \        fi\n    done\n\n    echo ${unique[@]}\n}\n\ncandidate() {\n    remove_duplicates\
    \ \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"\") = \"\" ]]\n    [[\
    \ $(candidate \"1 2 3 4\") = \"1 2 3 4\" ]]\n    [[ $(candidate \"1 2 3 2 4 3\
    \ 5\") = \"1 4 5\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660002815
- exit_code: 1
  program: "#!/bin/bash\n# From a list of integers, remove all elements that occur\
    \ more than once.\n# Keep order of elements left the same as in the input.\n#\n\
    # $1 is a space-separated list\nremove_duplicates() {\n    local -a list=($1)\n\
    \    local -a result=()\n    local -i i=0\n    local -i j=0\n    local -i n=${#list[@]}\n\
    \    local -i m=0\n    local -i k=0\n    local -i l=0\n    local -i p=0\n    local\
    \ -i q=0\n    local -i r=0\n    local -i s=0\n    local -i t=0\n    local -i u=0\n\
    \    local -i v=0\n    local -i w=0\n    local -i x=0\n    local -i y=0\n    local\
    \ -i z=0\n    local -i aa=0\n    local -i bb=0\n    local -i cc=0\n    local -i\
    \ dd=0\n    local -i ee=0\n    local -i ff=0\n    local -i gg=0\n    local -i\
    \ hh=0\n    local -i ii=0\n    local -i jj=0\n    local -i kk=0\n    local -i\
    \ ll=0\n    local -i mm=0\n    local -i nn=0\n    local -i oo=0\n    local -i\
    \ pp=0\n    local -i qq=0\n    local -i rr=0\n    local -i ss=0\n    local -i\
    \ tt=0\n    local -i uu=0\n    local -i vv=0\n    local -i ww=0\n    local -i\
    \ xx=0\n    local -i yy=0\n    local -i zz=0\n    local -i aaa=0\n    local -i\
    \ bbb=0\n    local -i ccc=0\n    local -i ddd=0\n    local -i eee=0\n    local\
    \ -i fff=0\n    local -i ggg=0\n    local -i hhh=0\n    local -i iii=0\n    local\
    \ -i jjj=0\n    local -i kkk=0\n    local -i lll=0\n    local -i mmm=0\n    local\
    \ -i nnn=0\n    local\n}\n\ncandidate() {\n    remove_duplicates \"$@\"\n}\n\n\
    set -e\nrun_test() {\n    [[ $(candidate \"\") = \"\" ]]\n    [[ $(candidate \"\
    1 2 3 4\") = \"1 2 3 4\" ]]\n    [[ $(candidate \"1 2 3 2 4 3 5\") = \"1 4 5\"\
    \ ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660002815
- exit_code: 1
  program: "#!/bin/bash\n# From a list of integers, remove all elements that occur\
    \ more than once.\n# Keep order of elements left the same as in the input.\n#\n\
    # $1 is a space-separated list\nremove_duplicates() {\n    local input=\"$1\"\n\
    \    local output=\"\"\n    local -A seen\n    for i in $input; do\n        if\
    \ [[ -z \"${seen[$i]}\" ]]; then\n            output=\"$output $i\"\n        \
    \    seen[$i]=1\n        fi\n    done\n    echo \"$output\"\n}\n\ncandidate()\
    \ {\n    remove_duplicates \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate\
    \ \"\") = \"\" ]]\n    [[ $(candidate \"1 2 3 4\") = \"1 2 3 4\" ]]\n    [[ $(candidate\
    \ \"1 2 3 2 4 3 5\") = \"1 4 5\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660002815
- exit_code: 1
  program: "#!/bin/bash\n# From a list of integers, remove all elements that occur\
    \ more than once.\n# Keep order of elements left the same as in the input.\n#\n\
    # $1 is a space-separated list\nremove_duplicates() {\n  local input=$1\n  local\
    \ output=\"\"\n  local i\n  for i in $input; do\n    if [[ $output != *\"$i\"\
    * ]]; then\n      output+=\"$i \"\n    fi\n  done\n  echo \"$output\"\n}\n\ncandidate()\
    \ {\n    remove_duplicates \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate\
    \ \"\") = \"\" ]]\n    [[ $(candidate \"1 2 3 4\") = \"1 2 3 4\" ]]\n    [[ $(candidate\
    \ \"1 2 3 2 4 3 5\") = \"1 4 5\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660002815
- exit_code: 1
  program: "#!/bin/bash\n# From a list of integers, remove all elements that occur\
    \ more than once.\n# Keep order of elements left the same as in the input.\n#\n\
    # $1 is a space-separated list\nremove_duplicates() {\n    local input=$1\n  \
    \  local output=\"\"\n    local i=0\n    local j=0\n    local k=0\n    local n=0\n\
    \    local m=0\n    local found=0\n    local tmp=\"\"\n    local tmp2=\"\"\n \
    \   local tmp3=\"\"\n    local tmp4=\"\"\n    local tmp5=\"\"\n    local tmp6=\"\
    \"\n    local tmp7=\"\"\n    local tmp8=\"\"\n    local tmp9=\"\"\n    local tmp10=\"\
    \"\n    local tmp11=\"\"\n    local tmp12=\"\"\n    local tmp13=\"\"\n    local\
    \ tmp14=\"\"\n    local tmp15=\"\"\n    local tmp16=\"\"\n    local tmp17=\"\"\
    \n    local tmp18=\"\"\n    local tmp19=\"\"\n    local tmp20=\"\"\n    local\
    \ tmp21=\"\"\n    local tmp22=\"\"\n    local tmp23=\"\"\n    local tmp24=\"\"\
    \n    local tmp25=\"\"\n    local tmp26=\"\"\n    local tmp27=\"\"\n    local\
    \ tmp28=\"\"\n    local tmp29=\"\"\n    local tmp30=\"\"\n    local tmp31=\"\"\
    \n    local tmp32=\"\"\n    local tmp33=\"\"\n    local tmp34=\"\"\n    local\
    \ tmp35=\"\"\n    local tmp36=\"\"\n    local tmp37=\"\"\n    local tmp38=\"\"\
    \n    local tmp39=\"\"\n    local tmp40=\"\"\n    local tmp41=\"\"\n    local\
    \ tmp42=\"\"\n    local tmp43=\"\"\n    local tmp44=\"\"\n    local tmp45=\"\"\
    \n    local tmp46=\"\"\n    local tmp47=\"\"\n    local tmp48=\"\"\n    local\
    \ tmp49=\"\"\n    local tmp50=\"\"\n    local tmp51=\"\"\n    local tmp52=\"\"\
    \n    local tmp53=\"\"\n    local tmp54=\"\"\n    local tmp55=\"\"\n    local\
    \ tmp56=\"\"\n    local tmp57=\"\"\n    local tmp58=\"\"\n    local tmp59=\"\"\
    \n    local tmp60=\"\"\n    local tmp61=\"\"\n    local tmp62=\"\"\n    local\
    \ tmp63=\"\"\n    local tmp64=\"\"\n    local tmp65=\"\"\n    local tmp66=\"\"\
    \n    local tmp67=\"\"\n    local tmp68=\"\"\n    local tmp69=\"\"\n    local\
    \ tmp70=\"\"\n    local tmp71=\"\"\n    local tmp72=\"\"\n    local tmp73=\"\"\
    \n    local tmp74=\"\"\n    local tmp75=\"\"\n    local tmp76=\"\"\n    local\
    \ tmp77=\"\"\n    local tmp\n}\n\ncandidate() {\n    remove_duplicates \"$@\"\n\
    }\n\nset -e\nrun_test() {\n    [[ $(candidate \"\") = \"\" ]]\n    [[ $(candidate\
    \ \"1 2 3 4\") = \"1 2 3 4\" ]]\n    [[ $(candidate \"1 2 3 2 4 3 5\") = \"1 4\
    \ 5\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660002815
- exit_code: 1
  program: "#!/bin/bash\n# From a list of integers, remove all elements that occur\
    \ more than once.\n# Keep order of elements left the same as in the input.\n#\n\
    # $1 is a space-separated list\nremove_duplicates() {\n    local -a array=($1)\n\
    \    local -a new_array=()\n    local -a seen=()\n    for i in \"${array[@]}\"\
    ; do\n        if [[ ! \" ${seen[@]} \" =~ \" ${i} \" ]]; then\n            new_array+=(\"\
    $i\")\n            seen+=(\"$i\")\n        fi\n    done\n    echo \"${new_array[@]}\"\
    \n}\n\ncandidate() {\n    remove_duplicates \"$@\"\n}\n\nset -e\nrun_test() {\n\
    \    [[ $(candidate \"\") = \"\" ]]\n    [[ $(candidate \"1 2 3 4\") = \"1 2 3\
    \ 4\" ]]\n    [[ $(candidate \"1 2 3 2 4 3 5\") = \"1 4 5\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660002815
- exit_code: 0
  program: "#!/bin/bash\n# From a list of integers, remove all elements that occur\
    \ more than once.\n# Keep order of elements left the same as in the input.\n#\n\
    # $1 is a space-separated list\nremove_duplicates() {\n    local input=$1\n  \
    \  local output=\"\"\n    local i=0\n    local j=0\n    local k=0\n    local n=0\n\
    \    local m=0\n    local is_duplicate=0\n    local is_duplicate_array=()\n  \
    \  local input_array=()\n    local output_array=()\n\n    # Split input into an\
    \ array\n    input_array=($input)\n\n    # Initialize is_duplicate_array\n   \
    \ for ((i=0; i<${#input_array[@]}; i++)); do\n        is_duplicate_array[$i]=0\n\
    \    done\n\n    # Check for duplicates\n    for ((i=0; i<${#input_array[@]};\
    \ i++)); do\n        if [[ ${is_duplicate_array[$i]} -eq 0 ]]; then\n        \
    \    for ((j=$i+1; j<${#input_array[@]}; j++)); do\n                if [[ ${input_array[$i]}\
    \ -eq ${input_array[$j]} ]]; then\n                    is_duplicate_array[$i]=1\n\
    \                    is_duplicate_array[$j]=1\n                fi\n          \
    \  done\n        fi\n    done\n\n    # Build output\n    for ((i=0; i<${#input_array[@]};\
    \ i++)); do\n        if [[ ${is_duplicate_array[$i]} -eq 0 ]]; then\n        \
    \    output_array[$k]=${input_array[$i]}\n            k=$((k+1))\n        fi\n\
    \    done\n\n    # Convert output_array to a string\n    for ((i=0; i<${#output_array[@]};\
    \ i++)); do\n        output=\"$output ${output_array[$i]}\"\n    done\n\n    echo\
    \ $output\n}\n\ncandidate() {\n    remove_duplicates \"$@\"\n}\n\nset -e\nrun_test()\
    \ {\n    [[ $(candidate \"\") = \"\" ]]\n    [[ $(candidate \"1 2 3 4\") = \"\
    1 2 3 4\" ]]\n    [[ $(candidate \"1 2 3 2 4 3 5\") = \"1 4 5\" ]]\n}\n\nrun_test"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660002815
- exit_code: 1
  program: "#!/bin/bash\n# From a list of integers, remove all elements that occur\
    \ more than once.\n# Keep order of elements left the same as in the input.\n#\n\
    # $1 is a space-separated list\nremove_duplicates() {\n  local list=\"$1\"\n \
    \ local -a seen=()\n  local -a result=()\n  for item in $list; do\n    if [[ \"\
    \ ${seen[*]} \" =~ \" $item \" ]]; then\n      continue\n    fi\n    seen+=($item)\n\
    \    result+=($item)\n  done\n  echo \"${result[@]}\"\n}\n\ncandidate() {\n  \
    \  remove_duplicates \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"\"\
    ) = \"\" ]]\n    [[ $(candidate \"1 2 3 4\") = \"1 2 3 4\" ]]\n    [[ $(candidate\
    \ \"1 2 3 2 4 3 5\") = \"1 4 5\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660002815
- exit_code: 1
  program: "#!/bin/bash\n# From a list of integers, remove all elements that occur\
    \ more than once.\n# Keep order of elements left the same as in the input.\n#\n\
    # $1 is a space-separated list\nremove_duplicates() {\n  local input=\"$1\"\n\
    \  local output=\"\"\n  local seen=\"\"\n  for i in $input; do\n    if [[ ! $seen\
    \ =~ $i ]]; then\n      output=\"$output $i\"\n      seen=\"$seen $i\"\n    fi\n\
    \  done\n  echo \"$output\"\n}\n\ncandidate() {\n    remove_duplicates \"$@\"\n\
    }\n\nset -e\nrun_test() {\n    [[ $(candidate \"\") = \"\" ]]\n    [[ $(candidate\
    \ \"1 2 3 4\") = \"1 2 3 4\" ]]\n    [[ $(candidate \"1 2 3 2 4 3 5\") = \"1 4\
    \ 5\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660002815
- exit_code: 1
  program: "#!/bin/bash\n# From a list of integers, remove all elements that occur\
    \ more than once.\n# Keep order of elements left the same as in the input.\n#\n\
    # $1 is a space-separated list\nremove_duplicates() {\n  local input=$1\n  local\
    \ output=\"\"\n  local i=0\n  local j=0\n  local n=0\n  local found=0\n  local\
    \ len=0\n  local num=0\n  local nums=()\n  local nums_len=0\n\n  # Split the input\
    \ string into an array of integers\n  IFS=' ' read -r -a nums <<< \"$input\"\n\
    \  nums_len=${#nums[@]}\n\n  # Iterate over the array of integers\n  for ((i=0;\
    \ i<nums_len; i++)); do\n    num=${nums[$i]}\n    len=${#output}\n    found=0\n\
    \n    # Iterate over the output string\n    for ((j=0; j<len; j++)); do\n    \
    \  if [ \"${output:$j:1}\" == \"$num\" ]; then\n        found=1\n        break\n\
    \      fi\n    done\n\n    # If the number was not found in the output string,\
    \ append it\n    if [ $found -eq 0 ]; then\n      output+=\"$num\"\n    fi\n \
    \ done\n\n  echo \"$output\"\n}\n\ncandidate() {\n    remove_duplicates \"$@\"\
    \n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"\") = \"\" ]]\n    [[ $(candidate\
    \ \"1 2 3 4\") = \"1 2 3 4\" ]]\n    [[ $(candidate \"1 2 3 2 4 3 5\") = \"1 4\
    \ 5\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660002815

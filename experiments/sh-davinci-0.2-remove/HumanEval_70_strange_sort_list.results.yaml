language: sh
name: HumanEval_70_strange_sort_list
results:
- exit_code: 1
  program: "#!/bin/bash\n# Given list of integers, return list in strange order.\n\
    # Strange sorting, is when you start with the minimum value,\n# then maximum of\
    \ the remaining integers, then minimum and so on.\n# Examples:\n#\n# $1 is a space-separated\
    \ list\nstrange_sort_list() {\n    local list=($1)\n    local sorted=()\n    local\
    \ min=${list[0]}\n    local max=${list[0]}\n    local min_index=0\n    local max_index=0\n\
    \    local min_max_index=0\n    local i=0\n    local j=0\n    local k=0\n    local\
    \ l=0\n    local m=0\n    local n=0\n    local o=0\n    local p=0\n    local q=0\n\
    \    local r=0\n    local s=0\n    local t=0\n    local u=0\n    local v=0\n \
    \   local w=0\n    local x=0\n    local y=0\n    local z=0\n    local aa=0\n \
    \   local bb=0\n    local cc=0\n    local dd=0\n    local ee=0\n    local ff=0\n\
    \    local gg=0\n    local hh=0\n    local ii=0\n    local jj=0\n    local kk=0\n\
    \    local ll=0\n    local mm=0\n    local nn=0\n    local oo=0\n    local pp=0\n\
    \    local qq=0\n    local rr=0\n    local ss=0\n    local tt=0\n    local uu=0\n\
    \    local vv=0\n    local ww=0\n    local xx=0\n    local yy=0\n    local zz=0\n\
    \    local aaa=0\n    local bbb=0\n    local ccc=0\n    local ddd=0\n    local\
    \ eee=0\n    local fff=0\n    local ggg=0\n    local hhh=0\n    local iii=0\n\
    \    local jjj=0\n    local kkk=0\n    local lll=0\n    local mmm=0\n    local\
    \ nnn=0\n    local ooo=0\n    local ppp=0\n    local qqq=0\n    local rrr=0\n\
    \    local sss=0\n    local ttt=0\n    local uuu=0\n    local vvv=0\n    local\
    \ www=0\n    local xxx=0\n    local yyy\n}\n\ncandidate() {\n    strange_sort_list\
    \ \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"1 2 3 4\") = \"1 4 2\
    \ 3\" ]]\n    [[ $(candidate \"5 6 7 8 9\") = \"5 9 6 8 7\" ]]\n    [[ $(candidate\
    \ \"1 2 3 4 5\") = \"1 5 2 4 3\" ]]\n    [[ $(candidate \"5 6 7 8 9 1\") = \"\
    1 9 5 8 6 7\" ]]\n    [[ $(candidate \"5 5 5 5\") = \"5 5 5 5\" ]]\n    [[ $(candidate\
    \ \"\") = \"\" ]]\n    [[ $(candidate \"1 2 3 4 5 6 7 8\") = \"1 8 2 7 3 6 4 5\"\
    \ ]]\n    [[ $(candidate \"0 2 2 2 5 5 -5 -5\") = \"-5 5 -5 5 0 2 2 2\" ]]\n \
    \   [[ $(candidate \"111111\") = \"111111\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660003083
- exit_code: 1
  program: "#!/bin/bash\n# Given list of integers, return list in strange order.\n\
    # Strange sorting, is when you start with the minimum value,\n# then maximum of\
    \ the remaining integers, then minimum and so on.\n# Examples:\n#\n# $1 is a space-separated\
    \ list\nstrange_sort_list() {\n  local list=($1)\n  local sorted=()\n  local min=${list[0]}\n\
    \  local max=${list[0]}\n  local i=0\n  local j=0\n  local k=0\n  local l=0\n\
    \  local m=0\n  local n=0\n  local o=0\n  local p=0\n  local q=0\n  local r=0\n\
    \  local s=0\n  local t=0\n  local u=0\n  local v=0\n  local w=0\n  local x=0\n\
    \  local y=0\n  local z=0\n  local aa=0\n  local bb=0\n  local cc=0\n  local dd=0\n\
    \  local ee=0\n  local ff=0\n  local gg=0\n  local hh=0\n  local ii=0\n  local\
    \ jj=0\n  local kk=0\n  local ll=0\n  local mm=0\n  local nn=0\n  local oo=0\n\
    \  local pp=0\n  local qq=0\n  local rr=0\n  local ss=0\n  local tt=0\n  local\
    \ uu=0\n  local vv=0\n  local ww=0\n  local xx=0\n  local yy=0\n  local zz=0\n\
    \  local aaa=0\n  local bbb=0\n  local ccc=0\n  local ddd=0\n  local eee=0\n \
    \ local fff=0\n  local ggg=0\n  local hhh=0\n  local iii=0\n  local jjj=0\n  local\
    \ kkk=0\n  local lll=0\n  local mmm=0\n  local nnn=0\n  local ooo=0\n  local ppp=0\n\
    \  local qqq=0\n  local rrr=0\n  local sss=0\n  local ttt=0\n  local uuu=0\n \
    \ local vvv=0\n  local www=0\n  local xxx=0\n  local yyy=0\n  local zzz=0\n  local\
    \ aaaa=0\n  local bbbb=0\n \n}\n\ncandidate() {\n    strange_sort_list \"$@\"\n\
    }\n\nset -e\nrun_test() {\n    [[ $(candidate \"1 2 3 4\") = \"1 4 2 3\" ]]\n\
    \    [[ $(candidate \"5 6 7 8 9\") = \"5 9 6 8 7\" ]]\n    [[ $(candidate \"1\
    \ 2 3 4 5\") = \"1 5 2 4 3\" ]]\n    [[ $(candidate \"5 6 7 8 9 1\") = \"1 9 5\
    \ 8 6 7\" ]]\n    [[ $(candidate \"5 5 5 5\") = \"5 5 5 5\" ]]\n    [[ $(candidate\
    \ \"\") = \"\" ]]\n    [[ $(candidate \"1 2 3 4 5 6 7 8\") = \"1 8 2 7 3 6 4 5\"\
    \ ]]\n    [[ $(candidate \"0 2 2 2 5 5 -5 -5\") = \"-5 5 -5 5 0 2 2 2\" ]]\n \
    \   [[ $(candidate \"111111\") = \"111111\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660003083
- exit_code: 1
  program: "#!/bin/bash\n# Given list of integers, return list in strange order.\n\
    # Strange sorting, is when you start with the minimum value,\n# then maximum of\
    \ the remaining integers, then minimum and so on.\n# Examples:\n#\n# $1 is a space-separated\
    \ list\nstrange_sort_list() {\n  local -a list=($1)\n  local -a result=()\n  local\
    \ min=${list[0]}\n  local max=${list[0]}\n  local i=0\n  local j=0\n  local k=0\n\
    \  local l=0\n  local m=0\n  local n=0\n  local o=0\n  local p=0\n  local q=0\n\
    \  local r=0\n  local s=0\n  local t=0\n  local u=0\n  local v=0\n  local w=0\n\
    \  local x=0\n  local y=0\n  local z=0\n  local aa=0\n  local bb=0\n  local cc=0\n\
    \  local dd=0\n  local ee=0\n  local ff=0\n  local gg=0\n  local hh=0\n  local\
    \ ii=0\n  local jj=0\n  local kk=0\n  local ll=0\n  local mm=0\n  local nn=0\n\
    \  local oo=0\n  local pp=0\n  local qq=0\n  local rr=0\n  local ss=0\n  local\
    \ tt=0\n  local uu=0\n  local vv=0\n  local ww=0\n  local xx=0\n  local yy=0\n\
    \  local zz=0\n  local aaa=0\n  local bbb=0\n  local ccc=0\n  local ddd=0\n  local\
    \ eee=0\n  local fff=0\n  local ggg=0\n  local hhh=0\n  local iii=0\n  local jjj=0\n\
    \  local kkk=0\n  local lll=0\n  local mmm=0\n  local nnn=0\n  local ooo=0\n \
    \ local ppp=0\n  local qqq=0\n  local rrr=0\n  local sss=0\n  local ttt=0\n  local\
    \ uuu=0\n  local vvv=0\n  local www=0\n  local xxx=0\n  local yyy=0\n  local zzz=0\n\
    \  local aaaa=0\n  local bbbb\n}\n\ncandidate() {\n    strange_sort_list \"$@\"\
    \n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"1 2 3 4\") = \"1 4 2 3\" ]]\n\
    \    [[ $(candidate \"5 6 7 8 9\") = \"5 9 6 8 7\" ]]\n    [[ $(candidate \"1\
    \ 2 3 4 5\") = \"1 5 2 4 3\" ]]\n    [[ $(candidate \"5 6 7 8 9 1\") = \"1 9 5\
    \ 8 6 7\" ]]\n    [[ $(candidate \"5 5 5 5\") = \"5 5 5 5\" ]]\n    [[ $(candidate\
    \ \"\") = \"\" ]]\n    [[ $(candidate \"1 2 3 4 5 6 7 8\") = \"1 8 2 7 3 6 4 5\"\
    \ ]]\n    [[ $(candidate \"0 2 2 2 5 5 -5 -5\") = \"-5 5 -5 5 0 2 2 2\" ]]\n \
    \   [[ $(candidate \"111111\") = \"111111\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660003083
- exit_code: 1
  program: "#!/bin/bash\n# Given list of integers, return list in strange order.\n\
    # Strange sorting, is when you start with the minimum value,\n# then maximum of\
    \ the remaining integers, then minimum and so on.\n# Examples:\n#\n# $1 is a space-separated\
    \ list\nstrange_sort_list() {\n    local list=($1)\n    local sorted=()\n    local\
    \ min=${list[0]}\n    local max=${list[0]}\n    local i=0\n    local j=0\n   \
    \ local k=0\n    local l=0\n    local m=0\n    local n=0\n    local o=0\n    local\
    \ p=0\n    local q=0\n    local r=0\n    local s=0\n    local t=0\n    local u=0\n\
    \    local v=0\n    local w=0\n    local x=0\n    local y=0\n    local z=0\n \
    \   local aa=0\n    local bb=0\n    local cc=0\n    local dd=0\n    local ee=0\n\
    \    local ff=0\n    local gg=0\n    local hh=0\n    local ii=0\n    local jj=0\n\
    \    local kk=0\n    local ll=0\n    local mm=0\n    local nn=0\n    local oo=0\n\
    \    local pp=0\n    local qq=0\n    local rr=0\n    local ss=0\n    local tt=0\n\
    \    local uu=0\n    local vv=0\n    local ww=0\n    local xx=0\n    local yy=0\n\
    \    local zz=0\n    local aaa=0\n    local bbb=0\n    local ccc=0\n    local\
    \ ddd=0\n    local eee=0\n    local fff=0\n    local ggg=0\n    local hhh=0\n\
    \    local iii=0\n    local jjj=0\n    local kkk=0\n    local lll=0\n    local\
    \ mmm=0\n    local nnn=0\n    local ooo=0\n    local ppp=0\n    local qqq=0\n\
    \    local rrr=0\n    local sss=0\n    local ttt=0\n    local uuu=0\n    local\
    \ vvv=0\n    local www=0\n    local xxx=0\n    local yyy=0\n    local zzz=0\n\
    \    local aaaa=0\n    local bbbb=0\n   \n}\n\ncandidate() {\n    strange_sort_list\
    \ \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"1 2 3 4\") = \"1 4 2\
    \ 3\" ]]\n    [[ $(candidate \"5 6 7 8 9\") = \"5 9 6 8 7\" ]]\n    [[ $(candidate\
    \ \"1 2 3 4 5\") = \"1 5 2 4 3\" ]]\n    [[ $(candidate \"5 6 7 8 9 1\") = \"\
    1 9 5 8 6 7\" ]]\n    [[ $(candidate \"5 5 5 5\") = \"5 5 5 5\" ]]\n    [[ $(candidate\
    \ \"\") = \"\" ]]\n    [[ $(candidate \"1 2 3 4 5 6 7 8\") = \"1 8 2 7 3 6 4 5\"\
    \ ]]\n    [[ $(candidate \"0 2 2 2 5 5 -5 -5\") = \"-5 5 -5 5 0 2 2 2\" ]]\n \
    \   [[ $(candidate \"111111\") = \"111111\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660003083
- exit_code: 1
  program: "#!/bin/bash\n# Given list of integers, return list in strange order.\n\
    # Strange sorting, is when you start with the minimum value,\n# then maximum of\
    \ the remaining integers, then minimum and so on.\n# Examples:\n#\n# $1 is a space-separated\
    \ list\nstrange_sort_list() {\n    local list=($1)\n    local result=()\n    local\
    \ i=0\n    local j=0\n    local k=0\n    local l=0\n    local m=0\n    local n=0\n\
    \    local o=0\n    local p=0\n    local q=0\n    local r=0\n    local s=0\n \
    \   local t=0\n    local u=0\n    local v=0\n    local w=0\n    local x=0\n  \
    \  local y=0\n    local z=0\n    local aa=0\n    local bb=0\n    local cc=0\n\
    \    local dd=0\n    local ee=0\n    local ff=0\n    local gg=0\n    local hh=0\n\
    \    local ii=0\n    local jj=0\n    local kk=0\n    local ll=0\n    local mm=0\n\
    \    local nn=0\n    local oo=0\n    local pp=0\n    local qq=0\n    local rr=0\n\
    \    local ss=0\n    local tt=0\n    local uu=0\n    local vv=0\n    local ww=0\n\
    \    local xx=0\n    local yy=0\n    local zz=0\n    local aaa=0\n    local bbb=0\n\
    \    local ccc=0\n    local ddd=0\n    local eee=0\n    local fff=0\n    local\
    \ ggg=0\n    local hhh=0\n    local iii=0\n    local jjj=0\n    local kkk=0\n\
    \    local lll=0\n    local mmm=0\n    local nnn=0\n    local ooo=0\n    local\
    \ ppp=0\n    local qqq=0\n    local rrr=0\n    local sss=0\n    local ttt=0\n\
    \    local uuu=0\n    local vvv=0\n    local www=0\n    local xxx=0\n    local\
    \ yyy=0\n    local zzz=0\n    local aaaa=0\n    local bbbb=0\n    local cccc=0\n\
    \    local dddd=0\n    local eeee\n}\n\ncandidate() {\n    strange_sort_list \"\
    $@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"1 2 3 4\") = \"1 4 2 3\"\
    \ ]]\n    [[ $(candidate \"5 6 7 8 9\") = \"5 9 6 8 7\" ]]\n    [[ $(candidate\
    \ \"1 2 3 4 5\") = \"1 5 2 4 3\" ]]\n    [[ $(candidate \"5 6 7 8 9 1\") = \"\
    1 9 5 8 6 7\" ]]\n    [[ $(candidate \"5 5 5 5\") = \"5 5 5 5\" ]]\n    [[ $(candidate\
    \ \"\") = \"\" ]]\n    [[ $(candidate \"1 2 3 4 5 6 7 8\") = \"1 8 2 7 3 6 4 5\"\
    \ ]]\n    [[ $(candidate \"0 2 2 2 5 5 -5 -5\") = \"-5 5 -5 5 0 2 2 2\" ]]\n \
    \   [[ $(candidate \"111111\") = \"111111\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660003083
- exit_code: 2
  program: "#!/bin/bash\n# Given list of integers, return list in strange order.\n\
    # Strange sorting, is when you start with the minimum value,\n# then maximum of\
    \ the remaining integers, then minimum and so on.\n# Examples:\n#\n# $1 is a space-separated\
    \ list\nstrange_sort_list() {\n    local list=($1)\n    local sorted=()\n    local\
    \ min=${list[0]}\n    local max=${list[0]}\n    local min_index=0\n    local max_index=0\n\
    \    local i=0\n    local j=0\n    local k=0\n    local n=${#list[@]}\n    local\
    \ tmp=0\n\n    # Find min and max\n    for ((i=0; i<n; i++)); do\n        if [[\
    \ ${list[i]} -lt $min ]]; then\n            min=${list[i]}\n            min_index=$i\n\
    \        fi\n        if [[ ${list[i]} -gt $max ]]; then\n            max=${list[i]}\n\
    \            max_index=$i\n        fi\n    done\n\n    # Remove min and max from\
    \ list\n    unset list[$min_index]\n    unset list[$max_index]\n\n    # Sort list\n\
    \    for ((i=0; i<n-2; i++)); do\n        if [[ $((i%2)) -eq 0 ]]; then\n    \
    \        # Find min\n            min=${list[0]}\n            min_index=0\n   \
    \         for ((j=0; j<${#list[@]}; j++)); do\n                if [[ ${list[j]}\
    \ -lt $min ]]; then\n                    min=${list[j]}\n                    min_index=$j\n\
    \                fi\n            done\n            sorted[$k]=$min\n         \
    \   unset list[$min_index]\n            k=$((k+1))\n        else\n           \
    \ # Find max\n            max=${list[0]}\n            max_index=0\n          \
    \  for ((j=0; j<${#list[@]}; j++)); do\n                if [[ ${list[j]} -gt $max\
    \ ]]; then\n                    max=${list[j]}\n                    max_index=$j\n\
    \                fi\n            done\n            sorted[$k]=$max\n         \
    \   unset list[$max_index]\n            k=$((k+1))\n        fi\n    done\n\n \
    \   # Add min and max to sorted list\n    if [[ $((i%2)) -eq 0 ]]; then\n    \
    \    sorted[$k]=$\n}\n\ncandidate() {\n    strange_sort_list \"$@\"\n}\n\nset\
    \ -e\nrun_test() {\n    [[ $(candidate \"1 2 3 4\") = \"1 4 2 3\" ]]\n    [[ $(candidate\
    \ \"5 6 7 8 9\") = \"5 9 6 8 7\" ]]\n    [[ $(candidate \"1 2 3 4 5\") = \"1 5\
    \ 2 4 3\" ]]\n    [[ $(candidate \"5 6 7 8 9 1\") = \"1 9 5 8 6 7\" ]]\n    [[\
    \ $(candidate \"5 5 5 5\") = \"5 5 5 5\" ]]\n    [[ $(candidate \"\") = \"\" ]]\n\
    \    [[ $(candidate \"1 2 3 4 5 6 7 8\") = \"1 8 2 7 3 6 4 5\" ]]\n    [[ $(candidate\
    \ \"0 2 2 2 5 5 -5 -5\") = \"-5 5 -5 5 0 2 2 2\" ]]\n    [[ $(candidate \"111111\"\
    ) = \"111111\" ]]\n}\n\nrun_test"
  status: SyntaxError
  stderr: '/tmp/tmp2jldzqli.sh: line 71: syntax error near unexpected token `}''

    /tmp/tmp2jldzqli.sh: line 71: `}''

    '
  stdout: ''
  timestamp: 1660003083
- exit_code: 1
  program: "#!/bin/bash\n# Given list of integers, return list in strange order.\n\
    # Strange sorting, is when you start with the minimum value,\n# then maximum of\
    \ the remaining integers, then minimum and so on.\n# Examples:\n#\n# $1 is a space-separated\
    \ list\nstrange_sort_list() {\n  local -a list=($1)\n  local -a sorted=()\n  local\
    \ min=${list[0]}\n  local max=${list[0]}\n  local min_index=0\n  local max_index=0\n\
    \  local i=0\n  local j=0\n  local k=0\n  local l=0\n  local m=0\n  local n=0\n\
    \  local o=0\n  local p=0\n  local q=0\n  local r=0\n  local s=0\n  local t=0\n\
    \  local u=0\n  local v=0\n  local w=0\n  local x=0\n  local y=0\n  local z=0\n\
    \  local aa=0\n  local bb=0\n  local cc=0\n  local dd=0\n  local ee=0\n  local\
    \ ff=0\n  local gg=0\n  local hh=0\n  local ii=0\n  local jj=0\n  local kk=0\n\
    \  local ll=0\n  local mm=0\n  local nn=0\n  local oo=0\n  local pp=0\n  local\
    \ qq=0\n  local rr=0\n  local ss=0\n  local tt=0\n  local uu=0\n  local vv=0\n\
    \  local ww=0\n  local xx=0\n  local yy=0\n  local zz=0\n  local aaa=0\n  local\
    \ bbb=0\n  local ccc=0\n  local ddd=0\n  local eee=0\n  local fff=0\n  local ggg=0\n\
    \  local hhh=0\n  local iii=0\n  local jjj=0\n  local kkk=0\n  local lll=0\n \
    \ local mmm=0\n  local nnn=0\n  local ooo=0\n  local ppp=0\n  local qqq=0\n  local\
    \ rrr=0\n  local sss=0\n  local ttt=0\n  local uuu=0\n  local vvv=0\n  local www=0\n\
    \  local xxx=0\n  local yyy=0\n  local z\n}\n\ncandidate() {\n    strange_sort_list\
    \ \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"1 2 3 4\") = \"1 4 2\
    \ 3\" ]]\n    [[ $(candidate \"5 6 7 8 9\") = \"5 9 6 8 7\" ]]\n    [[ $(candidate\
    \ \"1 2 3 4 5\") = \"1 5 2 4 3\" ]]\n    [[ $(candidate \"5 6 7 8 9 1\") = \"\
    1 9 5 8 6 7\" ]]\n    [[ $(candidate \"5 5 5 5\") = \"5 5 5 5\" ]]\n    [[ $(candidate\
    \ \"\") = \"\" ]]\n    [[ $(candidate \"1 2 3 4 5 6 7 8\") = \"1 8 2 7 3 6 4 5\"\
    \ ]]\n    [[ $(candidate \"0 2 2 2 5 5 -5 -5\") = \"-5 5 -5 5 0 2 2 2\" ]]\n \
    \   [[ $(candidate \"111111\") = \"111111\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660003083
- exit_code: 1
  program: "#!/bin/bash\n# Given list of integers, return list in strange order.\n\
    # Strange sorting, is when you start with the minimum value,\n# then maximum of\
    \ the remaining integers, then minimum and so on.\n# Examples:\n#\n# $1 is a space-separated\
    \ list\nstrange_sort_list() {\n  local -a list=($1)\n  local -a sorted=()\n  local\
    \ -i len=${#list[@]}\n  local -i i=0\n  local -i j=0\n  local -i min=0\n  local\
    \ -i max=0\n  local -i min_index=0\n  local -i max_index=0\n  local -i min_max_index=0\n\
    \  local -i max_min_index=0\n  local -i min_max_min_index=0\n  local -i max_min_max_index=0\n\
    \  local -i min_max_min_max_index=0\n  local -i max_min_max_min_index=0\n  local\
    \ -i min_max_min_max_min_index=0\n  local -i max_min_max_min_max_index=0\n  local\
    \ -i min_max_min_max_min_max_index=0\n  local -i max_min_max_min_max_min_index=0\n\
    \  local -i min_max_min_max_min_max_min_index=0\n  local -i max_min_max_min_max_min_max_index=0\n\
    \  local -i min_max_min_max_min_max_min_max_index=0\n  local -i max_min_max_min_max_min_max_min_index=0\n\
    \  local -i min_max_min_max_min_max_min_max_min_index=0\n  local -i max_min_max_min_max_min_max_min_max_index=0\n\
    \  local -i min_max_min_max_min_max_min_max_min_max_index=0\n  local -i max_min_max_min_max_min_max_min_max_min_index=0\n\
    \  local -i min_max_min_max_min_max_min_max_min_max_min_index=0\n  local -i max_min_max_min_max_min_max_min_max_min_max_index=0\n\
    \  local -i min_max_\n}\n\ncandidate() {\n    strange_sort_list \"$@\"\n}\n\n\
    set -e\nrun_test() {\n    [[ $(candidate \"1 2 3 4\") = \"1 4 2 3\" ]]\n    [[\
    \ $(candidate \"5 6 7 8 9\") = \"5 9 6 8 7\" ]]\n    [[ $(candidate \"1 2 3 4\
    \ 5\") = \"1 5 2 4 3\" ]]\n    [[ $(candidate \"5 6 7 8 9 1\") = \"1 9 5 8 6 7\"\
    \ ]]\n    [[ $(candidate \"5 5 5 5\") = \"5 5 5 5\" ]]\n    [[ $(candidate \"\"\
    ) = \"\" ]]\n    [[ $(candidate \"1 2 3 4 5 6 7 8\") = \"1 8 2 7 3 6 4 5\" ]]\n\
    \    [[ $(candidate \"0 2 2 2 5 5 -5 -5\") = \"-5 5 -5 5 0 2 2 2\" ]]\n    [[\
    \ $(candidate \"111111\") = \"111111\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660003083
- exit_code: 1
  program: "#!/bin/bash\n# Given list of integers, return list in strange order.\n\
    # Strange sorting, is when you start with the minimum value,\n# then maximum of\
    \ the remaining integers, then minimum and so on.\n# Examples:\n#\n# $1 is a space-separated\
    \ list\nstrange_sort_list() {\n    local list=($1)\n    local result=()\n    local\
    \ min=${list[0]}\n    local max=${list[0]}\n    local min_index=0\n    local max_index=0\n\
    \    local i=0\n    local j=0\n    local k=0\n    local l=0\n    local m=0\n \
    \   local n=0\n    local o=0\n    local p=0\n    local q=0\n    local r=0\n  \
    \  local s=0\n    local t=0\n    local u=0\n    local v=0\n    local w=0\n   \
    \ local x=0\n    local y=0\n    local z=0\n    local aa=0\n    local bb=0\n  \
    \  local cc=0\n    local dd=0\n    local ee=0\n    local ff=0\n    local gg=0\n\
    \    local hh=0\n    local ii=0\n    local jj=0\n    local kk=0\n    local ll=0\n\
    \    local mm=0\n    local nn=0\n    local oo=0\n    local pp=0\n    local qq=0\n\
    \    local rr=0\n    local ss=0\n    local tt=0\n    local uu=0\n    local vv=0\n\
    \    local ww=0\n    local xx=0\n    local yy=0\n    local zz=0\n    local aaa=0\n\
    \    local bbb=0\n    local ccc=0\n    local ddd=0\n    local eee=0\n    local\
    \ fff=0\n    local ggg=0\n    local hhh=0\n    local iii=0\n    local jjj=0\n\
    \    local kkk=0\n    local lll=0\n    local mmm=0\n    local nnn=0\n    local\
    \ ooo=0\n    local ppp=0\n    local qqq=0\n    local rrr=0\n    local sss=0\n\
    \    local ttt=0\n    local uuu=0\n    local vvv=0\n    local www=0\n    local\
    \ xxx=0\n    local yyy=0\n    local zzz=0\n\n}\n\ncandidate() {\n    strange_sort_list\
    \ \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"1 2 3 4\") = \"1 4 2\
    \ 3\" ]]\n    [[ $(candidate \"5 6 7 8 9\") = \"5 9 6 8 7\" ]]\n    [[ $(candidate\
    \ \"1 2 3 4 5\") = \"1 5 2 4 3\" ]]\n    [[ $(candidate \"5 6 7 8 9 1\") = \"\
    1 9 5 8 6 7\" ]]\n    [[ $(candidate \"5 5 5 5\") = \"5 5 5 5\" ]]\n    [[ $(candidate\
    \ \"\") = \"\" ]]\n    [[ $(candidate \"1 2 3 4 5 6 7 8\") = \"1 8 2 7 3 6 4 5\"\
    \ ]]\n    [[ $(candidate \"0 2 2 2 5 5 -5 -5\") = \"-5 5 -5 5 0 2 2 2\" ]]\n \
    \   [[ $(candidate \"111111\") = \"111111\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660003083
- exit_code: 1
  program: "#!/bin/bash\n# Given list of integers, return list in strange order.\n\
    # Strange sorting, is when you start with the minimum value,\n# then maximum of\
    \ the remaining integers, then minimum and so on.\n# Examples:\n#\n# $1 is a space-separated\
    \ list\nstrange_sort_list() {\n  local list=\"$1\"\n  local sorted_list=\"\"\n\
    \  local min=0\n  local max=0\n  local min_index=0\n  local max_index=0\n  local\
    \ i=0\n  local j=0\n  local k=0\n  local l=0\n  local m=0\n  local n=0\n  local\
    \ o=0\n  local p=0\n  local q=0\n  local r=0\n  local s=0\n  local t=0\n  local\
    \ u=0\n  local v=0\n  local w=0\n  local x=0\n  local y=0\n  local z=0\n  local\
    \ aa=0\n  local bb=0\n  local cc=0\n  local dd=0\n  local ee=0\n  local ff=0\n\
    \  local gg=0\n  local hh=0\n  local ii=0\n  local jj=0\n  local kk=0\n  local\
    \ ll=0\n  local mm=0\n  local nn=0\n  local oo=0\n  local pp=0\n  local qq=0\n\
    \  local rr=0\n  local ss=0\n  local tt=0\n  local uu=0\n  local vv=0\n  local\
    \ ww=0\n  local xx=0\n  local yy=0\n  local zz=0\n  local aaa=0\n  local bbb=0\n\
    \  local ccc=0\n  local ddd=0\n  local eee=0\n  local fff=0\n  local ggg=0\n \
    \ local hhh=0\n  local iii=0\n  local jjj=0\n  local kkk=0\n  local lll=0\n  local\
    \ mmm=0\n  local nnn=0\n  local ooo=0\n  local ppp=0\n  local qqq=0\n  local rrr=0\n\
    \  local sss=0\n  local ttt=0\n  local uuu=0\n  local vvv=0\n  local www=0\n \
    \ local xxx=0\n  local yyy=0\n  local zzz=0\n  local aaaa=0\n\n}\n\ncandidate()\
    \ {\n    strange_sort_list \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate\
    \ \"1 2 3 4\") = \"1 4 2 3\" ]]\n    [[ $(candidate \"5 6 7 8 9\") = \"5 9 6 8\
    \ 7\" ]]\n    [[ $(candidate \"1 2 3 4 5\") = \"1 5 2 4 3\" ]]\n    [[ $(candidate\
    \ \"5 6 7 8 9 1\") = \"1 9 5 8 6 7\" ]]\n    [[ $(candidate \"5 5 5 5\") = \"\
    5 5 5 5\" ]]\n    [[ $(candidate \"\") = \"\" ]]\n    [[ $(candidate \"1 2 3 4\
    \ 5 6 7 8\") = \"1 8 2 7 3 6 4 5\" ]]\n    [[ $(candidate \"0 2 2 2 5 5 -5 -5\"\
    ) = \"-5 5 -5 5 0 2 2 2\" ]]\n    [[ $(candidate \"111111\") = \"111111\" ]]\n\
    }\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660003083
- exit_code: 1
  program: "#!/bin/bash\n# Given list of integers, return list in strange order.\n\
    # Strange sorting, is when you start with the minimum value,\n# then maximum of\
    \ the remaining integers, then minimum and so on.\n# Examples:\n#\n# $1 is a space-separated\
    \ list\nstrange_sort_list() {\n    local list=($1)\n    local sorted=()\n    local\
    \ min=${list[0]}\n    local max=${list[0]}\n    local min_index=0\n    local max_index=0\n\
    \    local i=0\n    local j=0\n    local k=0\n    local l=0\n    local m=0\n \
    \   local n=0\n    local o=0\n    local p=0\n    local q=0\n    local r=0\n  \
    \  local s=0\n    local t=0\n    local u=0\n    local v=0\n    local w=0\n   \
    \ local x=0\n    local y=0\n    local z=0\n    local aa=0\n    local bb=0\n  \
    \  local cc=0\n    local dd=0\n    local ee=0\n    local ff=0\n    local gg=0\n\
    \    local hh=0\n    local ii=0\n    local jj=0\n    local kk=0\n    local ll=0\n\
    \    local mm=0\n    local nn=0\n    local oo=0\n    local pp=0\n    local qq=0\n\
    \    local rr=0\n    local ss=0\n    local tt=0\n    local uu=0\n    local vv=0\n\
    \    local ww=0\n    local xx=0\n    local yy=0\n    local zz=0\n    local aaa=0\n\
    \    local bbb=0\n    local ccc=0\n    local ddd=0\n    local eee=0\n    local\
    \ fff=0\n    local ggg=0\n    local hhh=0\n    local iii=0\n    local jjj=0\n\
    \    local kkk=0\n    local lll=0\n    local mmm=0\n    local nnn=0\n    local\
    \ ooo=0\n    local ppp=0\n    local qqq=0\n    local rrr=0\n    local sss=0\n\
    \    local ttt=0\n    local uuu=0\n    local vvv=0\n    local www=0\n    local\
    \ xxx=0\n    local yyy=0\n    local zzz=0\n\n}\n\ncandidate() {\n    strange_sort_list\
    \ \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"1 2 3 4\") = \"1 4 2\
    \ 3\" ]]\n    [[ $(candidate \"5 6 7 8 9\") = \"5 9 6 8 7\" ]]\n    [[ $(candidate\
    \ \"1 2 3 4 5\") = \"1 5 2 4 3\" ]]\n    [[ $(candidate \"5 6 7 8 9 1\") = \"\
    1 9 5 8 6 7\" ]]\n    [[ $(candidate \"5 5 5 5\") = \"5 5 5 5\" ]]\n    [[ $(candidate\
    \ \"\") = \"\" ]]\n    [[ $(candidate \"1 2 3 4 5 6 7 8\") = \"1 8 2 7 3 6 4 5\"\
    \ ]]\n    [[ $(candidate \"0 2 2 2 5 5 -5 -5\") = \"-5 5 -5 5 0 2 2 2\" ]]\n \
    \   [[ $(candidate \"111111\") = \"111111\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660003083
- exit_code: 1
  program: "#!/bin/bash\n# Given list of integers, return list in strange order.\n\
    # Strange sorting, is when you start with the minimum value,\n# then maximum of\
    \ the remaining integers, then minimum and so on.\n# Examples:\n#\n# $1 is a space-separated\
    \ list\nstrange_sort_list() {\n  local list=($1)\n  local result=()\n  local min=${list[0]}\n\
    \  local max=${list[0]}\n  local min_index=0\n  local max_index=0\n  local i=0\n\
    \  local j=0\n  local k=0\n  local n=${#list[@]}\n  local m=0\n  local temp=0\n\
    \  local temp_index=0\n  local temp_list=()\n  local temp_list_index=()\n  local\
    \ temp_list_index_len=0\n  local temp_list_len=0\n  local temp_list_len_half=0\n\
    \  local temp_list_len_half_floor=0\n  local temp_list_len_half_ceil=0\n  local\
    \ temp_list_len_half_floor_index=0\n  local temp_list_len_half_ceil_index=0\n\
    \  local temp_list_len_half_floor_value=0\n  local temp_list_len_half_ceil_value=0\n\
    \  local temp_list_len_half_floor_value_index=0\n  local temp_list_len_half_ceil_value_index=0\n\
    \  local temp_list_len_half_floor_value_index_temp=0\n  local temp_list_len_half_ceil_value_index_temp=0\n\
    \  local temp_list_len_half_floor_value_index_temp_temp=0\n  local temp_list_len_half_ceil_value_index_temp_temp=0\n\
    \  local temp_list_len_half_floor_value_index_temp_temp_temp=0\n  local temp_list_len_half_ceil_value_index_temp_temp_temp=0\n\
    \  local temp_list_len_half_floor_value_index_temp_temp_temp_temp=0\n  local temp_list_len_half_ceil_value_index_temp_temp_temp_temp=0\n\
    \  local temp_list_len_half_floor_value_index_temp_temp_temp_temp_temp=0\n  local\
    \ temp_list_len_half_ceil\n}\n\ncandidate() {\n    strange_sort_list \"$@\"\n\
    }\n\nset -e\nrun_test() {\n    [[ $(candidate \"1 2 3 4\") = \"1 4 2 3\" ]]\n\
    \    [[ $(candidate \"5 6 7 8 9\") = \"5 9 6 8 7\" ]]\n    [[ $(candidate \"1\
    \ 2 3 4 5\") = \"1 5 2 4 3\" ]]\n    [[ $(candidate \"5 6 7 8 9 1\") = \"1 9 5\
    \ 8 6 7\" ]]\n    [[ $(candidate \"5 5 5 5\") = \"5 5 5 5\" ]]\n    [[ $(candidate\
    \ \"\") = \"\" ]]\n    [[ $(candidate \"1 2 3 4 5 6 7 8\") = \"1 8 2 7 3 6 4 5\"\
    \ ]]\n    [[ $(candidate \"0 2 2 2 5 5 -5 -5\") = \"-5 5 -5 5 0 2 2 2\" ]]\n \
    \   [[ $(candidate \"111111\") = \"111111\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660003083
- exit_code: 1
  program: "#!/bin/bash\n# Given list of integers, return list in strange order.\n\
    # Strange sorting, is when you start with the minimum value,\n# then maximum of\
    \ the remaining integers, then minimum and so on.\n# Examples:\n#\n# $1 is a space-separated\
    \ list\nstrange_sort_list() {\n  local list=$1\n  local sorted_list=()\n  local\
    \ sorted_list_len=0\n  local list_len=0\n  local i=0\n  local j=0\n  local min=0\n\
    \  local max=0\n  local min_index=0\n  local max_index=0\n  local min_max_index=0\n\
    \  local min_max_value=0\n  local min_max_value_index=0\n  local min_max_value_index_len=0\n\
    \  local min_max_value_index_len_half=0\n  local min_max_value_index_len_half_floor=0\n\
    \  local min_max_value_index_len_half_ceil=0\n  local min_max_value_index_len_half_floor_index=0\n\
    \  local min_max_value_index_len_half_ceil_index=0\n  local min_max_value_index_len_half_floor_value=0\n\
    \  local min_max_value_index_len_half_ceil_value=0\n  local min_max_value_index_len_half_floor_value_index=0\n\
    \  local min_max_value_index_len_half_ceil_value_index=0\n  local min_max_value_index_len_half_floor_value_index_len=0\n\
    \  local min_max_value_index_len_half_ceil_value_index_len=0\n  local min_max_value_index_len_half_floor_value_index_len_half=0\n\
    \  local min_max_value_index_len_half_ceil_value_index_len_half=0\n  local min_max_value_index_len_half_floor_value_index_len_half_floor=0\n\
    \  local min_max_value_index_len_half_ceil_value_index_len_half_floor=0\n  local\
    \ min_max_value_index_len_half_floor_value_index_len_half_ceil=0\n  local min_max_value_index_len_half_ceil_value_index_len_half_\n\
    }\n\ncandidate() {\n    strange_sort_list \"$@\"\n}\n\nset -e\nrun_test() {\n\
    \    [[ $(candidate \"1 2 3 4\") = \"1 4 2 3\" ]]\n    [[ $(candidate \"5 6 7\
    \ 8 9\") = \"5 9 6 8 7\" ]]\n    [[ $(candidate \"1 2 3 4 5\") = \"1 5 2 4 3\"\
    \ ]]\n    [[ $(candidate \"5 6 7 8 9 1\") = \"1 9 5 8 6 7\" ]]\n    [[ $(candidate\
    \ \"5 5 5 5\") = \"5 5 5 5\" ]]\n    [[ $(candidate \"\") = \"\" ]]\n    [[ $(candidate\
    \ \"1 2 3 4 5 6 7 8\") = \"1 8 2 7 3 6 4 5\" ]]\n    [[ $(candidate \"0 2 2 2\
    \ 5 5 -5 -5\") = \"-5 5 -5 5 0 2 2 2\" ]]\n    [[ $(candidate \"111111\") = \"\
    111111\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660003083
- exit_code: 1
  program: "#!/bin/bash\n# Given list of integers, return list in strange order.\n\
    # Strange sorting, is when you start with the minimum value,\n# then maximum of\
    \ the remaining integers, then minimum and so on.\n# Examples:\n#\n# $1 is a space-separated\
    \ list\nstrange_sort_list() {\n    local list=($1)\n    local result=()\n    local\
    \ min=0\n    local max=0\n    local min_index=0\n    local max_index=0\n    local\
    \ i=0\n    local j=0\n    local k=0\n    local l=0\n    local m=0\n    local n=0\n\
    \    local o=0\n    local p=0\n    local q=0\n    local r=0\n    local s=0\n \
    \   local t=0\n    local u=0\n    local v=0\n    local w=0\n    local x=0\n  \
    \  local y=0\n    local z=0\n    local aa=0\n    local bb=0\n    local cc=0\n\
    \    local dd=0\n    local ee=0\n    local ff=0\n    local gg=0\n    local hh=0\n\
    \    local ii=0\n    local jj=0\n    local kk=0\n    local ll=0\n    local mm=0\n\
    \    local nn=0\n    local oo=0\n    local pp=0\n    local qq=0\n    local rr=0\n\
    \    local ss=0\n    local tt=0\n    local uu=0\n    local vv=0\n    local ww=0\n\
    \    local xx=0\n    local yy=0\n    local zz=0\n    local aaa=0\n    local bbb=0\n\
    \    local ccc=0\n    local ddd=0\n    local eee=0\n    local fff=0\n    local\
    \ ggg=0\n    local hhh=0\n    local iii=0\n    local jjj=0\n    local kkk=0\n\
    \    local lll=0\n    local mmm=0\n    local nnn=0\n    local ooo=0\n    local\
    \ ppp=0\n    local qqq=0\n    local rrr=0\n    local sss=0\n    local ttt=0\n\
    \    local uuu=0\n    local vvv=0\n    local www=0\n    local xxx=0\n    local\
    \ yyy=0\n    local zzz=0\n    local aaaa=0\n   \n}\n\ncandidate() {\n    strange_sort_list\
    \ \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"1 2 3 4\") = \"1 4 2\
    \ 3\" ]]\n    [[ $(candidate \"5 6 7 8 9\") = \"5 9 6 8 7\" ]]\n    [[ $(candidate\
    \ \"1 2 3 4 5\") = \"1 5 2 4 3\" ]]\n    [[ $(candidate \"5 6 7 8 9 1\") = \"\
    1 9 5 8 6 7\" ]]\n    [[ $(candidate \"5 5 5 5\") = \"5 5 5 5\" ]]\n    [[ $(candidate\
    \ \"\") = \"\" ]]\n    [[ $(candidate \"1 2 3 4 5 6 7 8\") = \"1 8 2 7 3 6 4 5\"\
    \ ]]\n    [[ $(candidate \"0 2 2 2 5 5 -5 -5\") = \"-5 5 -5 5 0 2 2 2\" ]]\n \
    \   [[ $(candidate \"111111\") = \"111111\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660003083
- exit_code: 1
  program: "#!/bin/bash\n# Given list of integers, return list in strange order.\n\
    # Strange sorting, is when you start with the minimum value,\n# then maximum of\
    \ the remaining integers, then minimum and so on.\n# Examples:\n#\n# $1 is a space-separated\
    \ list\nstrange_sort_list() {\n  local list=($1)\n  local sorted=()\n  local min=${list[0]}\n\
    \  local max=${list[0]}\n  local min_index=0\n  local max_index=0\n  local i=0\n\
    \  local j=0\n  local k=0\n  local l=0\n  local tmp=0\n  local tmp_index=0\n \
    \ local tmp_min=0\n  local tmp_max=0\n  local tmp_min_index=0\n  local tmp_max_index=0\n\
    \  local tmp_list=()\n  local tmp_sorted=()\n  local tmp_sorted_list=()\n  local\
    \ tmp_sorted_list_index=0\n  local tmp_sorted_list_index_list=()\n  local tmp_sorted_list_index_list_index=0\n\
    \  local tmp_sorted_list_index_list_index_list=()\n  local tmp_sorted_list_index_list_index_list_index=0\n\
    \  local tmp_sorted_list_index_list_index_list_index_list=()\n  local tmp_sorted_list_index_list_index_list_index_list_index=0\n\
    \  local tmp_sorted_list_index_list_index_list_index_list_index_list=()\n  local\
    \ tmp_sorted_list_index_list_index_list_index_list_index_list_index=0\n  local\
    \ tmp_sorted_list_index_list_index_list_index_list_index_list_index_list=()\n\
    \  local tmp_sorted_list_index_list_index_list_index_list_index_list_index_list_index=0\n\
    \  local tmp_sorted_list_index_list_index_list_index_list_index_list_index_list_index_list=()\n\
    \  local tmp_sorted_list_index_list_index_list_index_list_index_list_index_list_index_list_index=0\n\
    \  local tmp_sorted_list_index_list_index_list_index_list_index_list_index_list_index_list_index\n\
    }\n\ncandidate() {\n    strange_sort_list \"$@\"\n}\n\nset -e\nrun_test() {\n\
    \    [[ $(candidate \"1 2 3 4\") = \"1 4 2 3\" ]]\n    [[ $(candidate \"5 6 7\
    \ 8 9\") = \"5 9 6 8 7\" ]]\n    [[ $(candidate \"1 2 3 4 5\") = \"1 5 2 4 3\"\
    \ ]]\n    [[ $(candidate \"5 6 7 8 9 1\") = \"1 9 5 8 6 7\" ]]\n    [[ $(candidate\
    \ \"5 5 5 5\") = \"5 5 5 5\" ]]\n    [[ $(candidate \"\") = \"\" ]]\n    [[ $(candidate\
    \ \"1 2 3 4 5 6 7 8\") = \"1 8 2 7 3 6 4 5\" ]]\n    [[ $(candidate \"0 2 2 2\
    \ 5 5 -5 -5\") = \"-5 5 -5 5 0 2 2 2\" ]]\n    [[ $(candidate \"111111\") = \"\
    111111\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660003083
- exit_code: 1
  program: "#!/bin/bash\n# Given list of integers, return list in strange order.\n\
    # Strange sorting, is when you start with the minimum value,\n# then maximum of\
    \ the remaining integers, then minimum and so on.\n# Examples:\n#\n# $1 is a space-separated\
    \ list\nstrange_sort_list() {\n    local list=($1)\n    local sorted=()\n    local\
    \ min=${list[0]}\n    local max=${list[0]}\n    local min_index=0\n    local max_index=0\n\
    \    local i=0\n    local j=0\n    local k=0\n    local l=0\n    local m=0\n \
    \   local n=0\n    local o=0\n    local p=0\n    local q=0\n    local r=0\n  \
    \  local s=0\n    local t=0\n    local u=0\n    local v=0\n    local w=0\n   \
    \ local x=0\n    local y=0\n    local z=0\n    local aa=0\n    local bb=0\n  \
    \  local cc=0\n    local dd=0\n    local ee=0\n    local ff=0\n    local gg=0\n\
    \    local hh=0\n    local ii=0\n    local jj=0\n    local kk=0\n    local ll=0\n\
    \    local mm=0\n    local nn=0\n    local oo=0\n    local pp=0\n    local qq=0\n\
    \    local rr=0\n    local ss=0\n    local tt=0\n    local uu=0\n    local vv=0\n\
    \    local ww=0\n    local xx=0\n    local yy=0\n    local zz=0\n    local aaa=0\n\
    \    local bbb=0\n    local ccc=0\n    local ddd=0\n    local eee=0\n    local\
    \ fff=0\n    local ggg=0\n    local hhh=0\n    local iii=0\n    local jjj=0\n\
    \    local kkk=0\n    local lll=0\n    local mmm=0\n    local nnn=0\n    local\
    \ ooo=0\n    local ppp=0\n    local qqq=0\n    local rrr=0\n    local sss=0\n\
    \    local ttt=0\n    local uuu=0\n    local vvv=0\n    local www=0\n    local\
    \ xxx=0\n    local yyy=0\n    local zzz=0\n\n}\n\ncandidate() {\n    strange_sort_list\
    \ \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"1 2 3 4\") = \"1 4 2\
    \ 3\" ]]\n    [[ $(candidate \"5 6 7 8 9\") = \"5 9 6 8 7\" ]]\n    [[ $(candidate\
    \ \"1 2 3 4 5\") = \"1 5 2 4 3\" ]]\n    [[ $(candidate \"5 6 7 8 9 1\") = \"\
    1 9 5 8 6 7\" ]]\n    [[ $(candidate \"5 5 5 5\") = \"5 5 5 5\" ]]\n    [[ $(candidate\
    \ \"\") = \"\" ]]\n    [[ $(candidate \"1 2 3 4 5 6 7 8\") = \"1 8 2 7 3 6 4 5\"\
    \ ]]\n    [[ $(candidate \"0 2 2 2 5 5 -5 -5\") = \"-5 5 -5 5 0 2 2 2\" ]]\n \
    \   [[ $(candidate \"111111\") = \"111111\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660003083
- exit_code: 1
  program: "#!/bin/bash\n# Given list of integers, return list in strange order.\n\
    # Strange sorting, is when you start with the minimum value,\n# then maximum of\
    \ the remaining integers, then minimum and so on.\n# Examples:\n#\n# $1 is a space-separated\
    \ list\nstrange_sort_list() {\n    local input=$1\n    local output=\"\"\n   \
    \ local min=0\n    local max=0\n    local min_index=0\n    local max_index=0\n\
    \    local i=0\n    local j=0\n    local k=0\n    local tmp=0\n    local tmp_index=0\n\
    \    local tmp_min=0\n    local tmp_max=0\n    local tmp_min_index=0\n    local\
    \ tmp_max_index=0\n    local tmp_output=\"\"\n    local tmp_input=\"\"\n    local\
    \ tmp_i=0\n    local tmp_j=0\n    local tmp_k=0\n    local tmp_tmp=0\n    local\
    \ tmp_tmp_index=0\n    local tmp_tmp_min=0\n    local tmp_tmp_max=0\n    local\
    \ tmp_tmp_min_index=0\n    local tmp_tmp_max_index=0\n    local tmp_tmp_output=\"\
    \"\n    local tmp_tmp_input=\"\"\n    local tmp_tmp_i=0\n    local tmp_tmp_j=0\n\
    \    local tmp_tmp_k=0\n    local tmp_tmp_tmp=0\n    local tmp_tmp_tmp_index=0\n\
    \    local tmp_tmp_tmp_min=0\n    local tmp_tmp_tmp_max=0\n    local tmp_tmp_tmp_min_index=0\n\
    \    local tmp_tmp_tmp_max_index=0\n    local tmp_tmp_tmp_output=\"\"\n    local\
    \ tmp_tmp_tmp_input=\"\"\n    local tmp_tmp_tmp_i=0\n    local tmp_tmp_tmp_j=0\n\
    \    local tmp_tmp_tmp_k=0\n    local tmp_tmp_tmp_tmp=0\n    local tmp_tmp_tmp_tmp_index=0\n\
    \    local tmp_tmp_tmp_tmp_min=0\n    local tmp_tmp_tmp_tmp_max=0\n    local tmp_tmp_tmp_tmp_min_index=0\n\
    \    local tmp_tmp_tmp_tmp_max_index=0\n    local tmp_tmp_tmp_tmp_output=\"\"\n\
    \    local tmp_tmp_tmp_tmp_input=\"\"\n    local tmp_tmp_tmp_tmp_i=\n}\n\ncandidate()\
    \ {\n    strange_sort_list \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate\
    \ \"1 2 3 4\") = \"1 4 2 3\" ]]\n    [[ $(candidate \"5 6 7 8 9\") = \"5 9 6 8\
    \ 7\" ]]\n    [[ $(candidate \"1 2 3 4 5\") = \"1 5 2 4 3\" ]]\n    [[ $(candidate\
    \ \"5 6 7 8 9 1\") = \"1 9 5 8 6 7\" ]]\n    [[ $(candidate \"5 5 5 5\") = \"\
    5 5 5 5\" ]]\n    [[ $(candidate \"\") = \"\" ]]\n    [[ $(candidate \"1 2 3 4\
    \ 5 6 7 8\") = \"1 8 2 7 3 6 4 5\" ]]\n    [[ $(candidate \"0 2 2 2 5 5 -5 -5\"\
    ) = \"-5 5 -5 5 0 2 2 2\" ]]\n    [[ $(candidate \"111111\") = \"111111\" ]]\n\
    }\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660003083
- exit_code: 1
  program: "#!/bin/bash\n# Given list of integers, return list in strange order.\n\
    # Strange sorting, is when you start with the minimum value,\n# then maximum of\
    \ the remaining integers, then minimum and so on.\n# Examples:\n#\n# $1 is a space-separated\
    \ list\nstrange_sort_list() {\n    local list=($1)\n    local sorted=()\n    local\
    \ min=${list[0]}\n    local max=${list[0]}\n    local min_index=0\n    local max_index=0\n\
    \    local i=0\n    local j=0\n    local k=0\n    local l=0\n    local m=0\n \
    \   local n=0\n    local o=0\n    local p=0\n    local q=0\n    local r=0\n  \
    \  local s=0\n    local t=0\n    local u=0\n    local v=0\n    local w=0\n   \
    \ local x=0\n    local y=0\n    local z=0\n    local aa=0\n    local bb=0\n  \
    \  local cc=0\n    local dd=0\n    local ee=0\n    local ff=0\n    local gg=0\n\
    \    local hh=0\n    local ii=0\n    local jj=0\n    local kk=0\n    local ll=0\n\
    \    local mm=0\n    local nn=0\n    local oo=0\n    local pp=0\n    local qq=0\n\
    \    local rr=0\n    local ss=0\n    local tt=0\n    local uu=0\n    local vv=0\n\
    \    local ww=0\n    local xx=0\n    local yy=0\n    local zz=0\n    local aaa=0\n\
    \    local bbb=0\n    local ccc=0\n    local ddd=0\n    local eee=0\n    local\
    \ fff=0\n    local ggg=0\n    local hhh=0\n    local iii=0\n    local jjj=0\n\
    \    local kkk=0\n    local lll=0\n    local mmm=0\n    local nnn=0\n    local\
    \ ooo=0\n    local ppp=0\n    local qqq=0\n    local rrr=0\n    local sss=0\n\
    \    local ttt=0\n    local uuu=0\n    local vvv=0\n    local www=0\n    local\
    \ xxx=0\n    local yyy=0\n    local zzz=0\n\n}\n\ncandidate() {\n    strange_sort_list\
    \ \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"1 2 3 4\") = \"1 4 2\
    \ 3\" ]]\n    [[ $(candidate \"5 6 7 8 9\") = \"5 9 6 8 7\" ]]\n    [[ $(candidate\
    \ \"1 2 3 4 5\") = \"1 5 2 4 3\" ]]\n    [[ $(candidate \"5 6 7 8 9 1\") = \"\
    1 9 5 8 6 7\" ]]\n    [[ $(candidate \"5 5 5 5\") = \"5 5 5 5\" ]]\n    [[ $(candidate\
    \ \"\") = \"\" ]]\n    [[ $(candidate \"1 2 3 4 5 6 7 8\") = \"1 8 2 7 3 6 4 5\"\
    \ ]]\n    [[ $(candidate \"0 2 2 2 5 5 -5 -5\") = \"-5 5 -5 5 0 2 2 2\" ]]\n \
    \   [[ $(candidate \"111111\") = \"111111\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660003083
- exit_code: 1
  program: "#!/bin/bash\n# Given list of integers, return list in strange order.\n\
    # Strange sorting, is when you start with the minimum value,\n# then maximum of\
    \ the remaining integers, then minimum and so on.\n# Examples:\n#\n# $1 is a space-separated\
    \ list\nstrange_sort_list() {\n    local -a list=($1)\n    local -a result=()\n\
    \    local -i min=0\n    local -i max=0\n    local -i i=0\n    local -i j=0\n\
    \    local -i k=0\n    local -i n=${#list[@]}\n    local -i m=0\n    local -i\
    \ tmp=0\n\n    for ((i=0; i<n; i++)); do\n        if ((list[i] < list[min]));\
    \ then\n            min=$i\n        fi\n        if ((list[i] > list[max])); then\n\
    \            max=$i\n        fi\n    done\n\n    result[0]=${list[min]}\n    list[min]=${list[0]}\n\
    \    list[0]=${result[0]}\n\n    result[1]=${list[max]}\n    list[max]=${list[1]}\n\
    \    list[1]=${result[1]}\n\n    m=2\n    for ((i=2; i<n; i++)); do\n        min=2\n\
    \        max=2\n        for ((j=2; j<n; j++)); do\n            if ((list[j] <\
    \ list[min])); then\n                min=$j\n            fi\n            if ((list[j]\
    \ > list[max])); then\n                max=$j\n            fi\n        done\n\
    \        if ((i % 2 == 0)); then\n            result[m]=${list[min]}\n       \
    \     list[min]=${list[m]}\n            list[m]=${result[m]}\n        else\n \
    \           result[m]=${list[max]}\n            list[max]=${list[m]}\n       \
    \     list[m]=${result[m]}\n        fi\n        m=$((m+1))\n    done\n\n    echo\
    \ ${result[@]}\n}\n\ncandidate() {\n    strange_sort_list \"$@\"\n}\n\nset -e\n\
    run_test() {\n    [[ $(candidate \"1 2 3 4\") = \"1 4 2 3\" ]]\n    [[ $(candidate\
    \ \"5 6 7 8 9\") = \"5 9 6 8 7\" ]]\n    [[ $(candidate \"1 2 3 4 5\") = \"1 5\
    \ 2 4 3\" ]]\n    [[ $(candidate \"5 6 7 8 9 1\") = \"1 9 5 8 6 7\" ]]\n    [[\
    \ $(candidate \"5 5 5 5\") = \"5 5 5 5\" ]]\n    [[ $(candidate \"\") = \"\" ]]\n\
    \    [[ $(candidate \"1 2 3 4 5 6 7 8\") = \"1 8 2 7 3 6 4 5\" ]]\n    [[ $(candidate\
    \ \"0 2 2 2 5 5 -5 -5\") = \"-5 5 -5 5 0 2 2 2\" ]]\n    [[ $(candidate \"111111\"\
    ) = \"111111\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660003083
- exit_code: 1
  program: "#!/bin/bash\n# Given list of integers, return list in strange order.\n\
    # Strange sorting, is when you start with the minimum value,\n# then maximum of\
    \ the remaining integers, then minimum and so on.\n# Examples:\n#\n# $1 is a space-separated\
    \ list\nstrange_sort_list() {\n    local list=($1)\n    local sorted_list=()\n\
    \    local min=${list[0]}\n    local max=${list[0]}\n    local min_index=0\n \
    \   local max_index=0\n    local i=0\n    local j=0\n    local k=0\n    local\
    \ l=0\n    local m=0\n    local n=0\n    local o=0\n    local p=0\n    local q=0\n\
    \    local r=0\n    local s=0\n    local t=0\n    local u=0\n    local v=0\n \
    \   local w=0\n    local x=0\n    local y=0\n    local z=0\n    local aa=0\n \
    \   local bb=0\n    local cc=0\n    local dd=0\n    local ee=0\n    local ff=0\n\
    \    local gg=0\n    local hh=0\n    local ii=0\n    local jj=0\n    local kk=0\n\
    \    local ll=0\n    local mm=0\n    local nn=0\n    local oo=0\n    local pp=0\n\
    \    local qq=0\n    local rr=0\n    local ss=0\n    local tt=0\n    local uu=0\n\
    \    local vv=0\n    local ww=0\n    local xx=0\n    local yy=0\n    local zz=0\n\
    \    local aaa=0\n    local bbb=0\n    local ccc=0\n    local ddd=0\n    local\
    \ eee=0\n    local fff=0\n    local ggg=0\n    local hhh=0\n    local iii=0\n\
    \    local jjj=0\n    local kkk=0\n    local lll=0\n    local mmm=0\n    local\
    \ nnn=0\n    local ooo=0\n    local ppp=0\n    local qqq=0\n    local rrr=0\n\
    \    local sss=0\n    local ttt=0\n    local uuu=0\n    local vvv=0\n    local\
    \ www=0\n    local xxx=0\n    local yyy=0\n    local zzz=\n}\n\ncandidate() {\n\
    \    strange_sort_list \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"\
    1 2 3 4\") = \"1 4 2 3\" ]]\n    [[ $(candidate \"5 6 7 8 9\") = \"5 9 6 8 7\"\
    \ ]]\n    [[ $(candidate \"1 2 3 4 5\") = \"1 5 2 4 3\" ]]\n    [[ $(candidate\
    \ \"5 6 7 8 9 1\") = \"1 9 5 8 6 7\" ]]\n    [[ $(candidate \"5 5 5 5\") = \"\
    5 5 5 5\" ]]\n    [[ $(candidate \"\") = \"\" ]]\n    [[ $(candidate \"1 2 3 4\
    \ 5 6 7 8\") = \"1 8 2 7 3 6 4 5\" ]]\n    [[ $(candidate \"0 2 2 2 5 5 -5 -5\"\
    ) = \"-5 5 -5 5 0 2 2 2\" ]]\n    [[ $(candidate \"111111\") = \"111111\" ]]\n\
    }\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660003083
- exit_code: 1
  program: "#!/bin/bash\n# Given list of integers, return list in strange order.\n\
    # Strange sorting, is when you start with the minimum value,\n# then maximum of\
    \ the remaining integers, then minimum and so on.\n# Examples:\n#\n# $1 is a space-separated\
    \ list\nstrange_sort_list() {\n    local list=$1\n    local result=()\n    local\
    \ min=0\n    local max=0\n    local min_index=0\n    local max_index=0\n    local\
    \ i=0\n    local j=0\n    local k=0\n    local l=0\n    local m=0\n    local n=0\n\
    \    local o=0\n    local p=0\n    local q=0\n    local r=0\n    local s=0\n \
    \   local t=0\n    local u=0\n    local v=0\n    local w=0\n    local x=0\n  \
    \  local y=0\n    local z=0\n    local aa=0\n    local bb=0\n    local cc=0\n\
    \    local dd=0\n    local ee=0\n    local ff=0\n    local gg=0\n    local hh=0\n\
    \    local ii=0\n    local jj=0\n    local kk=0\n    local ll=0\n    local mm=0\n\
    \    local nn=0\n    local oo=0\n    local pp=0\n    local qq=0\n    local rr=0\n\
    \    local ss=0\n    local tt=0\n    local uu=0\n    local vv=0\n    local ww=0\n\
    \    local xx=0\n    local yy=0\n    local zz=0\n    local aaa=0\n    local bbb=0\n\
    \    local ccc=0\n    local ddd=0\n    local eee=0\n    local fff=0\n    local\
    \ ggg=0\n    local hhh=0\n    local iii=0\n    local jjj=0\n    local kkk=0\n\
    \    local lll=0\n    local mmm=0\n    local nnn=0\n    local ooo=0\n    local\
    \ ppp=0\n    local qqq=0\n    local rrr=0\n    local sss=0\n    local ttt=0\n\
    \    local uuu=0\n    local vvv=0\n    local www=0\n    local xxx=0\n    local\
    \ yyy=0\n    local zzz=0\n    local aaaa=0\n    local b\n}\n\ncandidate() {\n\
    \    strange_sort_list \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"\
    1 2 3 4\") = \"1 4 2 3\" ]]\n    [[ $(candidate \"5 6 7 8 9\") = \"5 9 6 8 7\"\
    \ ]]\n    [[ $(candidate \"1 2 3 4 5\") = \"1 5 2 4 3\" ]]\n    [[ $(candidate\
    \ \"5 6 7 8 9 1\") = \"1 9 5 8 6 7\" ]]\n    [[ $(candidate \"5 5 5 5\") = \"\
    5 5 5 5\" ]]\n    [[ $(candidate \"\") = \"\" ]]\n    [[ $(candidate \"1 2 3 4\
    \ 5 6 7 8\") = \"1 8 2 7 3 6 4 5\" ]]\n    [[ $(candidate \"0 2 2 2 5 5 -5 -5\"\
    ) = \"-5 5 -5 5 0 2 2 2\" ]]\n    [[ $(candidate \"111111\") = \"111111\" ]]\n\
    }\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660003083
- exit_code: 1
  program: "#!/bin/bash\n# Given list of integers, return list in strange order.\n\
    # Strange sorting, is when you start with the minimum value,\n# then maximum of\
    \ the remaining integers, then minimum and so on.\n# Examples:\n#\n# $1 is a space-separated\
    \ list\nstrange_sort_list() {\n    local list=($1)\n    local result=()\n    local\
    \ i=0\n    local j=0\n    local k=0\n    local min=0\n    local max=0\n    local\
    \ min_index=0\n    local max_index=0\n    local len=${#list[@]}\n    local tmp=0\n\
    \n    for ((i=0; i<len; i++)); do\n        min=${list[0]}\n        max=${list[0]}\n\
    \        min_index=0\n        max_index=0\n        for ((j=0; j<len; j++)); do\n\
    \            if [[ ${list[j]} -lt $min ]]; then\n                min=${list[j]}\n\
    \                min_index=$j\n            fi\n            if [[ ${list[j]} -gt\
    \ $max ]]; then\n                max=${list[j]}\n                max_index=$j\n\
    \            fi\n        done\n        if [[ $i -eq 0 ]]; then\n            result[k]=$min\n\
    \            list[min_index]=$((max+1))\n        else\n            result[k]=$max\n\
    \            list[max_index]=$((min-1))\n        fi\n        k=$((k+1))\n    done\n\
    \    echo ${result[@]}\n}\n\ncandidate() {\n    strange_sort_list \"$@\"\n}\n\n\
    set -e\nrun_test() {\n    [[ $(candidate \"1 2 3 4\") = \"1 4 2 3\" ]]\n    [[\
    \ $(candidate \"5 6 7 8 9\") = \"5 9 6 8 7\" ]]\n    [[ $(candidate \"1 2 3 4\
    \ 5\") = \"1 5 2 4 3\" ]]\n    [[ $(candidate \"5 6 7 8 9 1\") = \"1 9 5 8 6 7\"\
    \ ]]\n    [[ $(candidate \"5 5 5 5\") = \"5 5 5 5\" ]]\n    [[ $(candidate \"\"\
    ) = \"\" ]]\n    [[ $(candidate \"1 2 3 4 5 6 7 8\") = \"1 8 2 7 3 6 4 5\" ]]\n\
    \    [[ $(candidate \"0 2 2 2 5 5 -5 -5\") = \"-5 5 -5 5 0 2 2 2\" ]]\n    [[\
    \ $(candidate \"111111\") = \"111111\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660003083
- exit_code: 1
  program: "#!/bin/bash\n# Given list of integers, return list in strange order.\n\
    # Strange sorting, is when you start with the minimum value,\n# then maximum of\
    \ the remaining integers, then minimum and so on.\n# Examples:\n#\n# $1 is a space-separated\
    \ list\nstrange_sort_list() {\n    local list=($1)\n    local sorted_list=()\n\
    \    local min=${list[0]}\n    local max=${list[0]}\n    local i=0\n    local\
    \ j=0\n    local k=0\n    local l=0\n    local m=0\n    local n=0\n    local o=0\n\
    \    local p=0\n    local q=0\n    local r=0\n    local s=0\n    local t=0\n \
    \   local u=0\n    local v=0\n    local w=0\n    local x=0\n    local y=0\n  \
    \  local z=0\n    local aa=0\n    local bb=0\n    local cc=0\n    local dd=0\n\
    \    local ee=0\n    local ff=0\n    local gg=0\n    local hh=0\n    local ii=0\n\
    \    local jj=0\n    local kk=0\n    local ll=0\n    local mm=0\n    local nn=0\n\
    \    local oo=0\n    local pp=0\n    local qq=0\n    local rr=0\n    local ss=0\n\
    \    local tt=0\n    local uu=0\n    local vv=0\n    local ww=0\n    local xx=0\n\
    \    local yy=0\n    local zz=0\n    local aaa=0\n    local bbb=0\n    local ccc=0\n\
    \    local ddd=0\n    local eee=0\n    local fff=0\n    local ggg=0\n    local\
    \ hhh=0\n    local iii=0\n    local jjj=0\n    local kkk=0\n    local lll=0\n\
    \    local mmm=0\n    local nnn=0\n    local ooo=0\n    local ppp=0\n    local\
    \ qqq=0\n    local rrr=0\n    local sss=0\n    local ttt=0\n    local uuu=0\n\
    \    local vvv=0\n    local www=0\n    local xxx=0\n    local yyy=0\n    local\
    \ zzz=0\n    local aaaa=0\n    local bbbb=0\n}\n\ncandidate() {\n    strange_sort_list\
    \ \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"1 2 3 4\") = \"1 4 2\
    \ 3\" ]]\n    [[ $(candidate \"5 6 7 8 9\") = \"5 9 6 8 7\" ]]\n    [[ $(candidate\
    \ \"1 2 3 4 5\") = \"1 5 2 4 3\" ]]\n    [[ $(candidate \"5 6 7 8 9 1\") = \"\
    1 9 5 8 6 7\" ]]\n    [[ $(candidate \"5 5 5 5\") = \"5 5 5 5\" ]]\n    [[ $(candidate\
    \ \"\") = \"\" ]]\n    [[ $(candidate \"1 2 3 4 5 6 7 8\") = \"1 8 2 7 3 6 4 5\"\
    \ ]]\n    [[ $(candidate \"0 2 2 2 5 5 -5 -5\") = \"-5 5 -5 5 0 2 2 2\" ]]\n \
    \   [[ $(candidate \"111111\") = \"111111\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660003083
- exit_code: 1
  program: "#!/bin/bash\n# Given list of integers, return list in strange order.\n\
    # Strange sorting, is when you start with the minimum value,\n# then maximum of\
    \ the remaining integers, then minimum and so on.\n# Examples:\n#\n# $1 is a space-separated\
    \ list\nstrange_sort_list() {\n  local list=\"$1\"\n  local sorted_list=\"\"\n\
    \  local min=0\n  local max=0\n  local min_index=0\n  local max_index=0\n  local\
    \ i=0\n  local j=0\n  local k=0\n  local l=0\n  local m=0\n  local n=0\n  local\
    \ o=0\n  local p=0\n  local q=0\n  local r=0\n  local s=0\n  local t=0\n  local\
    \ u=0\n  local v=0\n  local w=0\n  local x=0\n  local y=0\n  local z=0\n  local\
    \ aa=0\n  local bb=0\n  local cc=0\n  local dd=0\n  local ee=0\n  local ff=0\n\
    \  local gg=0\n  local hh=0\n  local ii=0\n  local jj=0\n  local kk=0\n  local\
    \ ll=0\n  local mm=0\n  local nn=0\n  local oo=0\n  local pp=0\n  local qq=0\n\
    \  local rr=0\n  local ss=0\n  local tt=0\n  local uu=0\n  local vv=0\n  local\
    \ ww=0\n  local xx=0\n  local yy=0\n  local zz=0\n  local aaa=0\n  local bbb=0\n\
    \  local ccc=0\n  local ddd=0\n  local eee=0\n  local fff=0\n  local ggg=0\n \
    \ local hhh=0\n  local iii=0\n  local jjj=0\n  local kkk=0\n  local lll=0\n  local\
    \ mmm=0\n  local nnn=0\n  local ooo=0\n  local ppp=0\n  local qqq=0\n  local rrr=0\n\
    \  local sss=0\n  local ttt=0\n  local uuu=0\n  local vvv=0\n  local www=0\n \
    \ local xxx=0\n  local yyy=0\n  local zzz=0\n  local aaaa=0\n\n}\n\ncandidate()\
    \ {\n    strange_sort_list \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate\
    \ \"1 2 3 4\") = \"1 4 2 3\" ]]\n    [[ $(candidate \"5 6 7 8 9\") = \"5 9 6 8\
    \ 7\" ]]\n    [[ $(candidate \"1 2 3 4 5\") = \"1 5 2 4 3\" ]]\n    [[ $(candidate\
    \ \"5 6 7 8 9 1\") = \"1 9 5 8 6 7\" ]]\n    [[ $(candidate \"5 5 5 5\") = \"\
    5 5 5 5\" ]]\n    [[ $(candidate \"\") = \"\" ]]\n    [[ $(candidate \"1 2 3 4\
    \ 5 6 7 8\") = \"1 8 2 7 3 6 4 5\" ]]\n    [[ $(candidate \"0 2 2 2 5 5 -5 -5\"\
    ) = \"-5 5 -5 5 0 2 2 2\" ]]\n    [[ $(candidate \"111111\") = \"111111\" ]]\n\
    }\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660003083
- exit_code: 1
  program: "#!/bin/bash\n# Given list of integers, return list in strange order.\n\
    # Strange sorting, is when you start with the minimum value,\n# then maximum of\
    \ the remaining integers, then minimum and so on.\n# Examples:\n#\n# $1 is a space-separated\
    \ list\nstrange_sort_list() {\n  local list=$1\n  local sorted_list=\"\"\n  local\
    \ min_max_list=\"\"\n  local min_max=\"\"\n  local min=\"\"\n  local max=\"\"\n\
    \  local min_max_list_len=0\n  local list_len=0\n  local i=0\n\n  # Get the length\
    \ of the list\n  list_len=$(echo \"$list\" | wc -w)\n\n  # Get the minimum and\
    \ maximum values of the list\n  min_max_list=$(echo \"$list\" | sort -n)\n  min_max=$(echo\
    \ \"$min_max_list\" | head -n 1)\n  min=$(echo \"$min_max\" | cut -d \" \" -f\
    \ 1)\n  max=$(echo \"$min_max\" | cut -d \" \" -f 2)\n\n  # Get the length of\
    \ the min_max_list\n  min_max_list_len=$(echo \"$min_max_list\" | wc -w)\n\n \
    \ # Loop through the list\n  while [ $i -lt $list_len ]; do\n    # Get the minimum\
    \ value\n    min=$(echo \"$min_max_list\" | head -n 1 | cut -d \" \" -f 1)\n \
    \   # Add the minimum value to the sorted list\n    sorted_list=\"$sorted_list\
    \ $min\"\n    # Remove the minimum value from the min_max_list\n    min_max_list=$(echo\
    \ \"$min_max_list\" | sed \"s/$min//g\")\n    # Get the maximum value\n    max=$(echo\
    \ \"$min_max_list\" | tail -n 1 | cut -d \" \" -f 2)\n    # Add the maximum value\
    \ to the sorted list\n    sorted_list=\"$sorted_list $max\"\n    # Remove the\
    \ maximum value from the min_max_list\n    min_max_list=$(echo \"$min_max_list\"\
    \ | sed \"s/$max//g\")\n    # Increment the counter\n    i=$((i+2))\n  done\n\n\
    \  # Remove the leading space from the sorted list\n  sorted_list=$(echo \"$sorted_list\"\
    \ | sed \"s/^ //g\")\n\n  # Return the sorted list\n  echo \"$sorted_list\"\n\
    }\n\ncandidate() {\n    strange_sort_list \"$@\"\n}\n\nset -e\nrun_test() {\n\
    \    [[ $(candidate \"1 2 3 4\") = \"1 4 2 3\" ]]\n    [[ $(candidate \"5 6 7\
    \ 8 9\") = \"5 9 6 8 7\" ]]\n    [[ $(candidate \"1 2 3 4 5\") = \"1 5 2 4 3\"\
    \ ]]\n    [[ $(candidate \"5 6 7 8 9 1\") = \"1 9 5 8 6 7\" ]]\n    [[ $(candidate\
    \ \"5 5 5 5\") = \"5 5 5 5\" ]]\n    [[ $(candidate \"\") = \"\" ]]\n    [[ $(candidate\
    \ \"1 2 3 4 5 6 7 8\") = \"1 8 2 7 3 6 4 5\" ]]\n    [[ $(candidate \"0 2 2 2\
    \ 5 5 -5 -5\") = \"-5 5 -5 5 0 2 2 2\" ]]\n    [[ $(candidate \"111111\") = \"\
    111111\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: 'sed: -e expression #1, char 0: no previous regular expression

    sed: -e expression #1, char 0: no previous regular expression

    '
  stdout: ''
  timestamp: 1660003084
- exit_code: 1
  program: "#!/bin/bash\n# Given list of integers, return list in strange order.\n\
    # Strange sorting, is when you start with the minimum value,\n# then maximum of\
    \ the remaining integers, then minimum and so on.\n# Examples:\n#\n# $1 is a space-separated\
    \ list\nstrange_sort_list() {\n  local -a list=($1)\n  local -a sorted\n  local\
    \ -i i=0\n  local -i j=0\n  local -i k=0\n  local -i l=0\n  local -i m=0\n  local\
    \ -i n=0\n  local -i o=0\n  local -i p=0\n  local -i q=0\n  local -i r=0\n  local\
    \ -i s=0\n  local -i t=0\n  local -i u=0\n  local -i v=0\n  local -i w=0\n  local\
    \ -i x=0\n  local -i y=0\n  local -i z=0\n  local -i aa=0\n  local -i bb=0\n \
    \ local -i cc=0\n  local -i dd=0\n  local -i ee=0\n  local -i ff=0\n  local -i\
    \ gg=0\n  local -i hh=0\n  local -i ii=0\n  local -i jj=0\n  local -i kk=0\n \
    \ local -i ll=0\n  local -i mm=0\n  local -i nn=0\n  local -i oo=0\n  local -i\
    \ pp=0\n  local -i qq=0\n  local -i rr=0\n  local -i ss=0\n  local -i tt=0\n \
    \ local -i uu=0\n  local -i vv=0\n  local -i ww=0\n  local -i xx=0\n  local -i\
    \ yy=0\n  local -i zz=0\n  local -i aaa=0\n  local -i bbb=0\n  local -i ccc=0\n\
    \  local -i ddd=0\n  local -i eee=0\n  local -i fff=0\n  local -i ggg=0\n  local\
    \ -i hhh=0\n  local -i iii=0\n  local -i jjj=0\n  local -i kkk=0\n  local -i lll=0\n\
    \  local -i mmm=0\n  local -i nnn=0\n \n}\n\ncandidate() {\n    strange_sort_list\
    \ \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"1 2 3 4\") = \"1 4 2\
    \ 3\" ]]\n    [[ $(candidate \"5 6 7 8 9\") = \"5 9 6 8 7\" ]]\n    [[ $(candidate\
    \ \"1 2 3 4 5\") = \"1 5 2 4 3\" ]]\n    [[ $(candidate \"5 6 7 8 9 1\") = \"\
    1 9 5 8 6 7\" ]]\n    [[ $(candidate \"5 5 5 5\") = \"5 5 5 5\" ]]\n    [[ $(candidate\
    \ \"\") = \"\" ]]\n    [[ $(candidate \"1 2 3 4 5 6 7 8\") = \"1 8 2 7 3 6 4 5\"\
    \ ]]\n    [[ $(candidate \"0 2 2 2 5 5 -5 -5\") = \"-5 5 -5 5 0 2 2 2\" ]]\n \
    \   [[ $(candidate \"111111\") = \"111111\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660003083
- exit_code: 1
  program: "#!/bin/bash\n# Given list of integers, return list in strange order.\n\
    # Strange sorting, is when you start with the minimum value,\n# then maximum of\
    \ the remaining integers, then minimum and so on.\n# Examples:\n#\n# $1 is a space-separated\
    \ list\nstrange_sort_list() {\n    local list=($1)\n    local sorted=()\n    local\
    \ min=${list[0]}\n    local max=${list[0]}\n    local min_index=0\n    local max_index=0\n\
    \    local i=0\n    local j=0\n    local k=0\n    local l=0\n    local m=0\n \
    \   local n=0\n    local o=0\n    local p=0\n    local q=0\n    local r=0\n  \
    \  local s=0\n    local t=0\n    local u=0\n    local v=0\n    local w=0\n   \
    \ local x=0\n    local y=0\n    local z=0\n    local aa=0\n    local bb=0\n  \
    \  local cc=0\n    local dd=0\n    local ee=0\n    local ff=0\n    local gg=0\n\
    \    local hh=0\n    local ii=0\n    local jj=0\n    local kk=0\n    local ll=0\n\
    \    local mm=0\n    local nn=0\n    local oo=0\n    local pp=0\n    local qq=0\n\
    \    local rr=0\n    local ss=0\n    local tt=0\n    local uu=0\n    local vv=0\n\
    \    local ww=0\n    local xx=0\n    local yy=0\n    local zz=0\n    local aaa=0\n\
    \    local bbb=0\n    local ccc=0\n    local ddd=0\n    local eee=0\n    local\
    \ fff=0\n    local ggg=0\n    local hhh=0\n    local iii=0\n    local jjj=0\n\
    \    local kkk=0\n    local lll=0\n    local mmm=0\n    local nnn=0\n    local\
    \ ooo=0\n    local ppp=0\n    local qqq=0\n    local rrr=0\n    local sss=0\n\
    \    local ttt=0\n    local uuu=0\n    local vvv=0\n    local www=0\n    local\
    \ xxx=0\n    local yyy=0\n    local zzz=0\n\n}\n\ncandidate() {\n    strange_sort_list\
    \ \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"1 2 3 4\") = \"1 4 2\
    \ 3\" ]]\n    [[ $(candidate \"5 6 7 8 9\") = \"5 9 6 8 7\" ]]\n    [[ $(candidate\
    \ \"1 2 3 4 5\") = \"1 5 2 4 3\" ]]\n    [[ $(candidate \"5 6 7 8 9 1\") = \"\
    1 9 5 8 6 7\" ]]\n    [[ $(candidate \"5 5 5 5\") = \"5 5 5 5\" ]]\n    [[ $(candidate\
    \ \"\") = \"\" ]]\n    [[ $(candidate \"1 2 3 4 5 6 7 8\") = \"1 8 2 7 3 6 4 5\"\
    \ ]]\n    [[ $(candidate \"0 2 2 2 5 5 -5 -5\") = \"-5 5 -5 5 0 2 2 2\" ]]\n \
    \   [[ $(candidate \"111111\") = \"111111\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660003083
- exit_code: 1
  program: "#!/bin/bash\n# Given list of integers, return list in strange order.\n\
    # Strange sorting, is when you start with the minimum value,\n# then maximum of\
    \ the remaining integers, then minimum and so on.\n# Examples:\n#\n# $1 is a space-separated\
    \ list\nstrange_sort_list() {\n    local -a list=($1)\n    local -a sorted\n \
    \   local -i i=0\n    local -i j=0\n    local -i k=0\n    local -i len=${#list[@]}\n\
    \    local -i min=0\n    local -i max=0\n    local -i min_index=0\n    local -i\
    \ max_index=0\n    local -i min_found=0\n    local -i max_found=0\n    local -i\
    \ min_found_index=0\n    local -i max_found_index=0\n    local -i min_found_index_prev=0\n\
    \    local -i max_found_index_prev=0\n    local -i min_found_index_next=0\n  \
    \  local -i max_found_index_next=0\n    local -i min_found_index_prev_prev=0\n\
    \    local -i max_found_index_prev_prev=0\n    local -i min_found_index_next_next=0\n\
    \    local -i max_found_index_next_next=0\n    local -i min_found_index_prev_prev_prev=0\n\
    \    local -i max_found_index_prev_prev_prev=0\n    local -i min_found_index_next_next_next=0\n\
    \    local -i max_found_index_next_next_next=0\n    local -i min_found_index_prev_prev_prev_prev=0\n\
    \    local -i max_found_index_prev_prev_prev_prev=0\n    local -i min_found_index_next_next_next_next=0\n\
    \    local -i max_found_index_next_next_next_next=0\n    local -i min_found_index_prev_prev_prev_prev_prev=0\n\
    \    local -i max_found_index_prev_prev_prev_prev_prev=0\n    local -i min_found_index_next_next_next_next_next=0\n\
    \    local -i max_found_index_next_next_next_next_next=0\n    local -i min_found_index_prev_prev_prev_prev_\n\
    }\n\ncandidate() {\n    strange_sort_list \"$@\"\n}\n\nset -e\nrun_test() {\n\
    \    [[ $(candidate \"1 2 3 4\") = \"1 4 2 3\" ]]\n    [[ $(candidate \"5 6 7\
    \ 8 9\") = \"5 9 6 8 7\" ]]\n    [[ $(candidate \"1 2 3 4 5\") = \"1 5 2 4 3\"\
    \ ]]\n    [[ $(candidate \"5 6 7 8 9 1\") = \"1 9 5 8 6 7\" ]]\n    [[ $(candidate\
    \ \"5 5 5 5\") = \"5 5 5 5\" ]]\n    [[ $(candidate \"\") = \"\" ]]\n    [[ $(candidate\
    \ \"1 2 3 4 5 6 7 8\") = \"1 8 2 7 3 6 4 5\" ]]\n    [[ $(candidate \"0 2 2 2\
    \ 5 5 -5 -5\") = \"-5 5 -5 5 0 2 2 2\" ]]\n    [[ $(candidate \"111111\") = \"\
    111111\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660003083
- exit_code: 1
  program: "#!/bin/bash\n# Given list of integers, return list in strange order.\n\
    # Strange sorting, is when you start with the minimum value,\n# then maximum of\
    \ the remaining integers, then minimum and so on.\n# Examples:\n#\n# $1 is a space-separated\
    \ list\nstrange_sort_list() {\n  local list=($1)\n  local sorted=()\n  local min=${list[0]}\n\
    \  local max=${list[0]}\n  for i in ${list[@]}; do\n    if [ $i -lt $min ]; then\n\
    \      min=$i\n    fi\n    if [ $i -gt $max ]; then\n      max=$i\n    fi\n  done\n\
    \  sorted+=($min)\n  sorted+=($max)\n  local min_index=0\n  local max_index=0\n\
    \  for i in ${!list[@]}; do\n    if [ ${list[$i]} -eq $min ]; then\n      min_index=$i\n\
    \    fi\n    if [ ${list[$i]} -eq $max ]; then\n      max_index=$i\n    fi\n \
    \ done\n  list[$min_index]=$max\n  list[$max_index]=$min\n  local i=0\n  while\
    \ [ $i -lt ${#list[@]} ]; do\n    local min=${list[0]}\n    local max=${list[0]}\n\
    \    for j in ${list[@]}; do\n      if [ $j -lt $min ]; then\n        min=$j\n\
    \      fi\n      if [ $j -gt $max ]; then\n        max=$j\n      fi\n    done\n\
    \    sorted+=($min)\n    sorted+=($max)\n    local min_index=0\n    local max_index=0\n\
    \    for j in ${!list[@]}; do\n      if [ ${list[$j]} -eq $min ]; then\n     \
    \   min_index=$j\n      fi\n      if [ ${list[$j]} -eq $max ]; then\n        max_index=$j\n\
    \      fi\n    done\n    list[$min_index]=$max\n    list[$max_index]=$min\n  \
    \  i=$((i+2))\n  done\n  echo ${sorted[@]}\n}\n\ncandidate() {\n    strange_sort_list\
    \ \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"1 2 3 4\") = \"1 4 2\
    \ 3\" ]]\n    [[ $(candidate \"5 6 7 8 9\") = \"5 9 6 8 7\" ]]\n    [[ $(candidate\
    \ \"1 2 3 4 5\") = \"1 5 2 4 3\" ]]\n    [[ $(candidate \"5 6 7 8 9 1\") = \"\
    1 9 5 8 6 7\" ]]\n    [[ $(candidate \"5 5 5 5\") = \"5 5 5 5\" ]]\n    [[ $(candidate\
    \ \"\") = \"\" ]]\n    [[ $(candidate \"1 2 3 4 5 6 7 8\") = \"1 8 2 7 3 6 4 5\"\
    \ ]]\n    [[ $(candidate \"0 2 2 2 5 5 -5 -5\") = \"-5 5 -5 5 0 2 2 2\" ]]\n \
    \   [[ $(candidate \"111111\") = \"111111\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660003083
- exit_code: 1
  program: "#!/bin/bash\n# Given list of integers, return list in strange order.\n\
    # Strange sorting, is when you start with the minimum value,\n# then maximum of\
    \ the remaining integers, then minimum and so on.\n# Examples:\n#\n# $1 is a space-separated\
    \ list\nstrange_sort_list() {\n  local -a list=($1)\n  local -a sorted=()\n  local\
    \ min=${list[0]}\n  local max=${list[0]}\n  local min_index=0\n  local max_index=0\n\
    \  local i=0\n  local j=0\n  local k=0\n  local l=0\n  local m=0\n  local n=0\n\
    \  local o=0\n  local p=0\n  local q=0\n  local r=0\n  local s=0\n  local t=0\n\
    \  local u=0\n  local v=0\n  local w=0\n  local x=0\n  local y=0\n  local z=0\n\
    \  local aa=0\n  local bb=0\n  local cc=0\n  local dd=0\n  local ee=0\n  local\
    \ ff=0\n  local gg=0\n  local hh=0\n  local ii=0\n  local jj=0\n  local kk=0\n\
    \  local ll=0\n  local mm=0\n  local nn=0\n  local oo=0\n  local pp=0\n  local\
    \ qq=0\n  local rr=0\n  local ss=0\n  local tt=0\n  local uu=0\n  local vv=0\n\
    \  local ww=0\n  local xx=0\n  local yy=0\n  local zz=0\n  local aaa=0\n  local\
    \ bbb=0\n  local ccc=0\n  local ddd=0\n  local eee=0\n  local fff=0\n  local ggg=0\n\
    \  local hhh=0\n  local iii=0\n  local jjj=0\n  local kkk=0\n  local lll=0\n \
    \ local mmm=0\n  local nnn=0\n  local ooo=0\n  local ppp=0\n  local qqq=0\n  local\
    \ rrr=0\n  local sss=0\n  local ttt=0\n  local uuu=0\n  local vvv=0\n  local www=0\n\
    \  local xxx=0\n  local yyy=0\n  local z\n}\n\ncandidate() {\n    strange_sort_list\
    \ \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"1 2 3 4\") = \"1 4 2\
    \ 3\" ]]\n    [[ $(candidate \"5 6 7 8 9\") = \"5 9 6 8 7\" ]]\n    [[ $(candidate\
    \ \"1 2 3 4 5\") = \"1 5 2 4 3\" ]]\n    [[ $(candidate \"5 6 7 8 9 1\") = \"\
    1 9 5 8 6 7\" ]]\n    [[ $(candidate \"5 5 5 5\") = \"5 5 5 5\" ]]\n    [[ $(candidate\
    \ \"\") = \"\" ]]\n    [[ $(candidate \"1 2 3 4 5 6 7 8\") = \"1 8 2 7 3 6 4 5\"\
    \ ]]\n    [[ $(candidate \"0 2 2 2 5 5 -5 -5\") = \"-5 5 -5 5 0 2 2 2\" ]]\n \
    \   [[ $(candidate \"111111\") = \"111111\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660003083
- exit_code: 1
  program: "#!/bin/bash\n# Given list of integers, return list in strange order.\n\
    # Strange sorting, is when you start with the minimum value,\n# then maximum of\
    \ the remaining integers, then minimum and so on.\n# Examples:\n#\n# $1 is a space-separated\
    \ list\nstrange_sort_list() {\n  local list=$1\n  local sorted_list=()\n  local\
    \ min=0\n  local max=0\n  local min_index=0\n  local max_index=0\n  local i=0\n\
    \  local j=0\n  local k=0\n  local l=0\n  local m=0\n  local n=0\n  local o=0\n\
    \  local p=0\n  local q=0\n  local r=0\n  local s=0\n  local t=0\n  local u=0\n\
    \  local v=0\n  local w=0\n  local x=0\n  local y=0\n  local z=0\n  local aa=0\n\
    \  local bb=0\n  local cc=0\n  local dd=0\n  local ee=0\n  local ff=0\n  local\
    \ gg=0\n  local hh=0\n  local ii=0\n  local jj=0\n  local kk=0\n  local ll=0\n\
    \  local mm=0\n  local nn=0\n  local oo=0\n  local pp=0\n  local qq=0\n  local\
    \ rr=0\n  local ss=0\n  local tt=0\n  local uu=0\n  local vv=0\n  local ww=0\n\
    \  local xx=0\n  local yy=0\n  local zz=0\n  local aaa=0\n  local bbb=0\n  local\
    \ ccc=0\n  local ddd=0\n  local eee=0\n  local fff=0\n  local ggg=0\n  local hhh=0\n\
    \  local iii=0\n  local jjj=0\n  local kkk=0\n  local lll=0\n  local mmm=0\n \
    \ local nnn=0\n  local ooo=0\n  local ppp=0\n  local qqq=0\n  local rrr=0\n  local\
    \ sss=0\n  local ttt=0\n  local uuu=0\n  local vvv=0\n  local www=0\n  local xxx=0\n\
    \  local yyy=0\n  local zzz=0\n  local aaaa=0\n \n}\n\ncandidate() {\n    strange_sort_list\
    \ \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"1 2 3 4\") = \"1 4 2\
    \ 3\" ]]\n    [[ $(candidate \"5 6 7 8 9\") = \"5 9 6 8 7\" ]]\n    [[ $(candidate\
    \ \"1 2 3 4 5\") = \"1 5 2 4 3\" ]]\n    [[ $(candidate \"5 6 7 8 9 1\") = \"\
    1 9 5 8 6 7\" ]]\n    [[ $(candidate \"5 5 5 5\") = \"5 5 5 5\" ]]\n    [[ $(candidate\
    \ \"\") = \"\" ]]\n    [[ $(candidate \"1 2 3 4 5 6 7 8\") = \"1 8 2 7 3 6 4 5\"\
    \ ]]\n    [[ $(candidate \"0 2 2 2 5 5 -5 -5\") = \"-5 5 -5 5 0 2 2 2\" ]]\n \
    \   [[ $(candidate \"111111\") = \"111111\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660003083
- exit_code: 1
  program: "#!/bin/bash\n# Given list of integers, return list in strange order.\n\
    # Strange sorting, is when you start with the minimum value,\n# then maximum of\
    \ the remaining integers, then minimum and so on.\n# Examples:\n#\n# $1 is a space-separated\
    \ list\nstrange_sort_list() {\n  local -a list=($1)\n  local -a sorted\n  local\
    \ -i i=0\n  local -i j=0\n  local -i len=${#list[@]}\n  local -i min=0\n  local\
    \ -i max=0\n  local -i min_index=0\n  local -i max_index=0\n  local -i min_found=0\n\
    \  local -i max_found=0\n  local -i min_max_found=0\n  local -i min_max_index=0\n\
    \  local -i min_max_value=0\n  local -i min_max_index_found=0\n  local -i min_max_value_found=0\n\
    \  local -i min_max_index_value_found=0\n  local -i min_max_index_value_found_index=0\n\
    \  local -i min_max_index_value_found_index_found=0\n  local -i min_max_index_value_found_index_found_index=0\n\
    \  local -i min_max_index_value_found_index_found_index_found=0\n  local -i min_max_index_value_found_index_found_index_found_index=0\n\
    \  local -i min_max_index_value_found_index_found_index_found_index_found=0\n\
    \  local -i min_max_index_value_found_index_found_index_found_index_found_index=0\n\
    \  local -i min_max_index_value_found_index_found_index_found_index_found_index_found=0\n\
    \  local -i min_max_index_value_found_index_found_index_found_index_found_index_found_index=0\n\
    \  local -i min_max_index_value_found_index_found_index_found_index_found_index_found_index_found=0\n\
    \  local -i min_max_index_value_found_index_found_index_found_index_found_index_found_index_found_index=0\n\
    \  local -i min_max_index_value_found_index_found_index_found_\n}\n\ncandidate()\
    \ {\n    strange_sort_list \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate\
    \ \"1 2 3 4\") = \"1 4 2 3\" ]]\n    [[ $(candidate \"5 6 7 8 9\") = \"5 9 6 8\
    \ 7\" ]]\n    [[ $(candidate \"1 2 3 4 5\") = \"1 5 2 4 3\" ]]\n    [[ $(candidate\
    \ \"5 6 7 8 9 1\") = \"1 9 5 8 6 7\" ]]\n    [[ $(candidate \"5 5 5 5\") = \"\
    5 5 5 5\" ]]\n    [[ $(candidate \"\") = \"\" ]]\n    [[ $(candidate \"1 2 3 4\
    \ 5 6 7 8\") = \"1 8 2 7 3 6 4 5\" ]]\n    [[ $(candidate \"0 2 2 2 5 5 -5 -5\"\
    ) = \"-5 5 -5 5 0 2 2 2\" ]]\n    [[ $(candidate \"111111\") = \"111111\" ]]\n\
    }\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660003083
- exit_code: 1
  program: "#!/bin/bash\n# Given list of integers, return list in strange order.\n\
    # Strange sorting, is when you start with the minimum value,\n# then maximum of\
    \ the remaining integers, then minimum and so on.\n# Examples:\n#\n# $1 is a space-separated\
    \ list\nstrange_sort_list() {\n  local list=\"$1\"\n  local sorted=\"\"\n  local\
    \ min=\"\"\n  local max=\"\"\n  local min_index=\"\"\n  local max_index=\"\"\n\
    \  local i=\"\"\n  local j=\"\"\n  local k=\"\"\n  local l=\"\"\n  local m=\"\"\
    \n  local n=\"\"\n  local o=\"\"\n  local p=\"\"\n  local q=\"\"\n  local r=\"\
    \"\n  local s=\"\"\n  local t=\"\"\n  local u=\"\"\n  local v=\"\"\n  local w=\"\
    \"\n  local x=\"\"\n  local y=\"\"\n  local z=\"\"\n  local a=\"\"\n  local b=\"\
    \"\n  local c=\"\"\n  local d=\"\"\n  local e=\"\"\n  local f=\"\"\n  local g=\"\
    \"\n  local h=\"\"\n  local i=\"\"\n  local j=\"\"\n  local k=\"\"\n  local l=\"\
    \"\n  local m=\"\"\n  local n=\"\"\n  local o=\"\"\n  local p=\"\"\n  local q=\"\
    \"\n  local r=\"\"\n  local s=\"\"\n  local t=\"\"\n  local u=\"\"\n  local v=\"\
    \"\n  local w=\"\"\n  local x=\"\"\n  local y=\"\"\n  local z=\"\"\n  local a=\"\
    \"\n  local b=\"\"\n  local c=\"\"\n  local d=\"\"\n  local e=\"\"\n  local f=\"\
    \"\n  local g=\"\"\n  local h=\"\"\n  local i=\"\"\n  local j=\"\"\n  local k=\"\
    \"\n  local l=\"\"\n  local m=\"\"\n  local n=\"\"\n  local o=\"\"\n  local p=\"\
    \"\n  local q=\"\"\n  local r=\"\"\n  local s=\"\"\n  local t=\"\"\n  local u=\"\
    \"\n  local v=\"\"\n  local w=\"\"\n  local x=\"\"\n  local y=\"\"\n  local z=\"\
    \"\n  local a=\"\"\n  local b=\"\"\n  local c=\"\"\n  local d=\"\"\n  local e=\"\
    \"\n  local f=\"\"\n  local g=\"\"\n  local h=\"\"\n  local i=\"\"\n  local j=\"\
    \"\n  local k=\"\"\n  local l=\"\"\n  local m=\"\"\n  local n=\"\"\n  local o=\"\
    \"\n  local p=\"\"\n  local q=\"\"\n  local r=\"\"\n  local s=\"\"\n  local t=\"\
    \"\n  local u=\"\"\n  local v=\"\"\n  local w=\"\"\n  local x=\"\"\n  local y=\"\
    \"\n}\n\ncandidate() {\n    strange_sort_list \"$@\"\n}\n\nset -e\nrun_test()\
    \ {\n    [[ $(candidate \"1 2 3 4\") = \"1 4 2 3\" ]]\n    [[ $(candidate \"5\
    \ 6 7 8 9\") = \"5 9 6 8 7\" ]]\n    [[ $(candidate \"1 2 3 4 5\") = \"1 5 2 4\
    \ 3\" ]]\n    [[ $(candidate \"5 6 7 8 9 1\") = \"1 9 5 8 6 7\" ]]\n    [[ $(candidate\
    \ \"5 5 5 5\") = \"5 5 5 5\" ]]\n    [[ $(candidate \"\") = \"\" ]]\n    [[ $(candidate\
    \ \"1 2 3 4 5 6 7 8\") = \"1 8 2 7 3 6 4 5\" ]]\n    [[ $(candidate \"0 2 2 2\
    \ 5 5 -5 -5\") = \"-5 5 -5 5 0 2 2 2\" ]]\n    [[ $(candidate \"111111\") = \"\
    111111\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660003083
- exit_code: 1
  program: "#!/bin/bash\n# Given list of integers, return list in strange order.\n\
    # Strange sorting, is when you start with the minimum value,\n# then maximum of\
    \ the remaining integers, then minimum and so on.\n# Examples:\n#\n# $1 is a space-separated\
    \ list\nstrange_sort_list() {\n  local list=\"$1\"\n  local sorted_list=\"\"\n\
    \  local min=0\n  local max=0\n  local min_index=0\n  local max_index=0\n  local\
    \ i=0\n  local j=0\n  local temp=0\n  local temp_index=0\n  local list_length=0\n\
    \  local list_length_minus_one=0\n  local list_length_minus_two=0\n  local list_length_minus_three=0\n\
    \  local list_length_minus_four=0\n  local list_length_minus_five=0\n  local list_length_minus_six=0\n\
    \  local list_length_minus_seven=0\n  local list_length_minus_eight=0\n  local\
    \ list_length_minus_nine=0\n  local list_length_minus_ten=0\n  local list_length_minus_eleven=0\n\
    \  local list_length_minus_twelve=0\n  local list_length_minus_thirteen=0\n  local\
    \ list_length_minus_fourteen=0\n  local list_length_minus_fifteen=0\n  local list_length_minus_sixteen=0\n\
    \  local list_length_minus_seventeen=0\n  local list_length_minus_eighteen=0\n\
    \  local list_length_minus_nineteen=0\n  local list_length_minus_twenty=0\n  local\
    \ list_length_minus_twenty_one=0\n  local list_length_minus_twenty_two=0\n  local\
    \ list_length_minus_twenty_three=0\n  local list_length_minus_twenty_four=0\n\
    \  local list_length_minus_twenty_five=0\n  local list_length_minus_twenty_six=0\n\
    \  local list_length_minus_twenty_seven=0\n  local list_length_minus_twenty_eight=0\n\
    \  local list_length_minus_twenty_nine=0\n  local list_length_minus_thirty=0\n\
    \  local list_length_minus_thirty_one=0\n  local list_length_minus_thirty_two=0\n\
    \  local list_length\n}\n\ncandidate() {\n    strange_sort_list \"$@\"\n}\n\n\
    set -e\nrun_test() {\n    [[ $(candidate \"1 2 3 4\") = \"1 4 2 3\" ]]\n    [[\
    \ $(candidate \"5 6 7 8 9\") = \"5 9 6 8 7\" ]]\n    [[ $(candidate \"1 2 3 4\
    \ 5\") = \"1 5 2 4 3\" ]]\n    [[ $(candidate \"5 6 7 8 9 1\") = \"1 9 5 8 6 7\"\
    \ ]]\n    [[ $(candidate \"5 5 5 5\") = \"5 5 5 5\" ]]\n    [[ $(candidate \"\"\
    ) = \"\" ]]\n    [[ $(candidate \"1 2 3 4 5 6 7 8\") = \"1 8 2 7 3 6 4 5\" ]]\n\
    \    [[ $(candidate \"0 2 2 2 5 5 -5 -5\") = \"-5 5 -5 5 0 2 2 2\" ]]\n    [[\
    \ $(candidate \"111111\") = \"111111\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660003083
- exit_code: 1
  program: "#!/bin/bash\n# Given list of integers, return list in strange order.\n\
    # Strange sorting, is when you start with the minimum value,\n# then maximum of\
    \ the remaining integers, then minimum and so on.\n# Examples:\n#\n# $1 is a space-separated\
    \ list\nstrange_sort_list() {\n  local list=($1)\n  local sorted=()\n  local min=${list[0]}\n\
    \  local max=${list[0]}\n  local min_index=0\n  local max_index=0\n  local i=0\n\
    \  local j=0\n  local k=0\n  local l=0\n  local m=0\n  local n=0\n  local o=0\n\
    \  local p=0\n  local q=0\n  local r=0\n  local s=0\n  local t=0\n  local u=0\n\
    \  local v=0\n  local w=0\n  local x=0\n  local y=0\n  local z=0\n  local aa=0\n\
    \  local bb=0\n  local cc=0\n  local dd=0\n  local ee=0\n  local ff=0\n  local\
    \ gg=0\n  local hh=0\n  local ii=0\n  local jj=0\n  local kk=0\n  local ll=0\n\
    \  local mm=0\n  local nn=0\n  local oo=0\n  local pp=0\n  local qq=0\n  local\
    \ rr=0\n  local ss=0\n  local tt=0\n  local uu=0\n  local vv=0\n  local ww=0\n\
    \  local xx=0\n  local yy=0\n  local zz=0\n  local aaa=0\n  local bbb=0\n  local\
    \ ccc=0\n  local ddd=0\n  local eee=0\n  local fff=0\n  local ggg=0\n  local hhh=0\n\
    \  local iii=0\n  local jjj=0\n  local kkk=0\n  local lll=0\n  local mmm=0\n \
    \ local nnn=0\n  local ooo=0\n  local ppp=0\n  local qqq=0\n  local rrr=0\n  local\
    \ sss=0\n  local ttt=0\n  local uuu=0\n  local vvv=0\n  local www=0\n  local xxx=0\n\
    \  local yyy=0\n  local zzz=0\n\n}\n\ncandidate() {\n    strange_sort_list \"\
    $@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"1 2 3 4\") = \"1 4 2 3\"\
    \ ]]\n    [[ $(candidate \"5 6 7 8 9\") = \"5 9 6 8 7\" ]]\n    [[ $(candidate\
    \ \"1 2 3 4 5\") = \"1 5 2 4 3\" ]]\n    [[ $(candidate \"5 6 7 8 9 1\") = \"\
    1 9 5 8 6 7\" ]]\n    [[ $(candidate \"5 5 5 5\") = \"5 5 5 5\" ]]\n    [[ $(candidate\
    \ \"\") = \"\" ]]\n    [[ $(candidate \"1 2 3 4 5 6 7 8\") = \"1 8 2 7 3 6 4 5\"\
    \ ]]\n    [[ $(candidate \"0 2 2 2 5 5 -5 -5\") = \"-5 5 -5 5 0 2 2 2\" ]]\n \
    \   [[ $(candidate \"111111\") = \"111111\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660003084
- exit_code: 1
  program: "#!/bin/bash\n# Given list of integers, return list in strange order.\n\
    # Strange sorting, is when you start with the minimum value,\n# then maximum of\
    \ the remaining integers, then minimum and so on.\n# Examples:\n#\n# $1 is a space-separated\
    \ list\nstrange_sort_list() {\n    local list=($1)\n    local result=()\n    local\
    \ min=${list[0]}\n    local max=${list[0]}\n    local min_index=0\n    local max_index=0\n\
    \    local i=0\n    local j=0\n    local k=0\n    local l=0\n    local n=${#list[@]}\n\
    \    local m=$((n / 2))\n    for ((i = 0; i < n; i++)); do\n        if [[ ${list[i]}\
    \ -lt $min ]]; then\n            min=${list[i]}\n            min_index=$i\n  \
    \      fi\n        if [[ ${list[i]} -gt $max ]]; then\n            max=${list[i]}\n\
    \            max_index=$i\n        fi\n    done\n    result[0]=$min\n    result[1]=$max\n\
    \    list[min_index]=$max\n    list[max_index]=$min\n    for ((j = 0; j < m; j++));\
    \ do\n        min=${list[0]}\n        max=${list[0]}\n        min_index=0\n  \
    \      max_index=0\n        for ((k = 0; k < n; k++)); do\n            if [[ ${list[k]}\
    \ -lt $min ]]; then\n                min=${list[k]}\n                min_index=$k\n\
    \            fi\n            if [[ ${list[k]} -gt $max ]]; then\n            \
    \    max=${list[k]}\n                max_index=$k\n            fi\n        done\n\
    \        result[2 * j + 2]=$min\n        result[2 * j + 3]=$max\n        list[min_index]=$max\n\
    \        list[max_index]=$min\n    done\n    for ((l = 0; l < n; l++)); do\n \
    \       echo -n \"${result[l]} \"\n    done\n    echo\n}\n\ncandidate() {\n  \
    \  strange_sort_list \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"\
    1 2 3 4\") = \"1 4 2 3\" ]]\n    [[ $(candidate \"5 6 7 8 9\") = \"5 9 6 8 7\"\
    \ ]]\n    [[ $(candidate \"1 2 3 4 5\") = \"1 5 2 4 3\" ]]\n    [[ $(candidate\
    \ \"5 6 7 8 9 1\") = \"1 9 5 8 6 7\" ]]\n    [[ $(candidate \"5 5 5 5\") = \"\
    5 5 5 5\" ]]\n    [[ $(candidate \"\") = \"\" ]]\n    [[ $(candidate \"1 2 3 4\
    \ 5 6 7 8\") = \"1 8 2 7 3 6 4 5\" ]]\n    [[ $(candidate \"0 2 2 2 5 5 -5 -5\"\
    ) = \"-5 5 -5 5 0 2 2 2\" ]]\n    [[ $(candidate \"111111\") = \"111111\" ]]\n\
    }\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660003083
- exit_code: 1
  program: "#!/bin/bash\n# Given list of integers, return list in strange order.\n\
    # Strange sorting, is when you start with the minimum value,\n# then maximum of\
    \ the remaining integers, then minimum and so on.\n# Examples:\n#\n# $1 is a space-separated\
    \ list\nstrange_sort_list() {\n    local list=\"$1\"\n    local sorted=()\n  \
    \  local min=0\n    local max=0\n    local i=0\n    local j=0\n    local k=0\n\
    \    local l=0\n    local m=0\n    local n=0\n    local o=0\n    local p=0\n \
    \   local q=0\n    local r=0\n    local s=0\n    local t=0\n    local u=0\n  \
    \  local v=0\n    local w=0\n    local x=0\n    local y=0\n    local z=0\n   \
    \ local aa=0\n    local bb=0\n    local cc=0\n    local dd=0\n    local ee=0\n\
    \    local ff=0\n    local gg=0\n    local hh=0\n    local ii=0\n    local jj=0\n\
    \    local kk=0\n    local ll=0\n    local mm=0\n    local nn=0\n    local oo=0\n\
    \    local pp=0\n    local qq=0\n    local rr=0\n    local ss=0\n    local tt=0\n\
    \    local uu=0\n    local vv=0\n    local ww=0\n    local xx=0\n    local yy=0\n\
    \    local zz=0\n    local aaa=0\n    local bbb=0\n    local ccc=0\n    local\
    \ ddd=0\n    local eee=0\n    local fff=0\n    local ggg=0\n    local hhh=0\n\
    \    local iii=0\n    local jjj=0\n    local kkk=0\n    local lll=0\n    local\
    \ mmm=0\n    local nnn=0\n    local ooo=0\n    local ppp=0\n    local qqq=0\n\
    \    local rrr=0\n    local sss=0\n    local ttt=0\n    local uuu=0\n    local\
    \ vvv=0\n    local www=0\n    local xxx=0\n    local yyy=0\n    local zzz=0\n\
    \    local aaaa=0\n    local bbbb=0\n    local cccc=0\n   \n}\n\ncandidate() {\n\
    \    strange_sort_list \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"\
    1 2 3 4\") = \"1 4 2 3\" ]]\n    [[ $(candidate \"5 6 7 8 9\") = \"5 9 6 8 7\"\
    \ ]]\n    [[ $(candidate \"1 2 3 4 5\") = \"1 5 2 4 3\" ]]\n    [[ $(candidate\
    \ \"5 6 7 8 9 1\") = \"1 9 5 8 6 7\" ]]\n    [[ $(candidate \"5 5 5 5\") = \"\
    5 5 5 5\" ]]\n    [[ $(candidate \"\") = \"\" ]]\n    [[ $(candidate \"1 2 3 4\
    \ 5 6 7 8\") = \"1 8 2 7 3 6 4 5\" ]]\n    [[ $(candidate \"0 2 2 2 5 5 -5 -5\"\
    ) = \"-5 5 -5 5 0 2 2 2\" ]]\n    [[ $(candidate \"111111\") = \"111111\" ]]\n\
    }\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660003083
- exit_code: 1
  program: "#!/bin/bash\n# Given list of integers, return list in strange order.\n\
    # Strange sorting, is when you start with the minimum value,\n# then maximum of\
    \ the remaining integers, then minimum and so on.\n# Examples:\n#\n# $1 is a space-separated\
    \ list\nstrange_sort_list() {\n  local list=($1)\n  local sorted=()\n  local i=0\n\
    \  local j=0\n  local k=0\n  local l=0\n  local m=0\n  local n=0\n  local o=0\n\
    \  local p=0\n  local q=0\n  local r=0\n  local s=0\n  local t=0\n  local u=0\n\
    \  local v=0\n  local w=0\n  local x=0\n  local y=0\n  local z=0\n  local aa=0\n\
    \  local bb=0\n  local cc=0\n  local dd=0\n  local ee=0\n  local ff=0\n  local\
    \ gg=0\n  local hh=0\n  local ii=0\n  local jj=0\n  local kk=0\n  local ll=0\n\
    \  local mm=0\n  local nn=0\n  local oo=0\n  local pp=0\n  local qq=0\n  local\
    \ rr=0\n  local ss=0\n  local tt=0\n  local uu=0\n  local vv=0\n  local ww=0\n\
    \  local xx=0\n  local yy=0\n  local zz=0\n  local aaa=0\n  local bbb=0\n  local\
    \ ccc=0\n  local ddd=0\n  local eee=0\n  local fff=0\n  local ggg=0\n  local hhh=0\n\
    \  local iii=0\n  local jjj=0\n  local kkk=0\n  local lll=0\n  local mmm=0\n \
    \ local nnn=0\n  local ooo=0\n  local ppp=0\n  local qqq=0\n  local rrr=0\n  local\
    \ sss=0\n  local ttt=0\n  local uuu=0\n  local vvv=0\n  local www=0\n  local xxx=0\n\
    \  local yyy=0\n  local zzz=0\n  local aaaa=0\n  local bbbb=0\n  local cccc=0\n\
    \  local dddd=0\n  local eeee\n}\n\ncandidate() {\n    strange_sort_list \"$@\"\
    \n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"1 2 3 4\") = \"1 4 2 3\" ]]\n\
    \    [[ $(candidate \"5 6 7 8 9\") = \"5 9 6 8 7\" ]]\n    [[ $(candidate \"1\
    \ 2 3 4 5\") = \"1 5 2 4 3\" ]]\n    [[ $(candidate \"5 6 7 8 9 1\") = \"1 9 5\
    \ 8 6 7\" ]]\n    [[ $(candidate \"5 5 5 5\") = \"5 5 5 5\" ]]\n    [[ $(candidate\
    \ \"\") = \"\" ]]\n    [[ $(candidate \"1 2 3 4 5 6 7 8\") = \"1 8 2 7 3 6 4 5\"\
    \ ]]\n    [[ $(candidate \"0 2 2 2 5 5 -5 -5\") = \"-5 5 -5 5 0 2 2 2\" ]]\n \
    \   [[ $(candidate \"111111\") = \"111111\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660003083
- exit_code: 1
  program: "#!/bin/bash\n# Given list of integers, return list in strange order.\n\
    # Strange sorting, is when you start with the minimum value,\n# then maximum of\
    \ the remaining integers, then minimum and so on.\n# Examples:\n#\n# $1 is a space-separated\
    \ list\nstrange_sort_list() {\n    local list=($1)\n    local sorted_list=()\n\
    \    local min=${list[0]}\n    local max=${list[0]}\n    local min_index=0\n \
    \   local max_index=0\n    local i=0\n    local j=0\n    local k=0\n    local\
    \ temp=0\n    local temp_index=0\n    local temp_index_2=0\n    local temp_index_3=0\n\
    \    local temp_index_4=0\n    local temp_index_5=0\n    local temp_index_6=0\n\
    \    local temp_index_7=0\n    local temp_index_8=0\n    local temp_index_9=0\n\
    \    local temp_index_10=0\n    local temp_index_11=0\n    local temp_index_12=0\n\
    \    local temp_index_13=0\n    local temp_index_14=0\n    local temp_index_15=0\n\
    \    local temp_index_16=0\n    local temp_index_17=0\n    local temp_index_18=0\n\
    \    local temp_index_19=0\n    local temp_index_20=0\n    local temp_index_21=0\n\
    \    local temp_index_22=0\n    local temp_index_23=0\n    local temp_index_24=0\n\
    \    local temp_index_25=0\n    local temp_index_26=0\n    local temp_index_27=0\n\
    \    local temp_index_28=0\n    local temp_index_29=0\n    local temp_index_30=0\n\
    \    local temp_index_31=0\n    local temp_index_32=0\n    local temp_index_33=0\n\
    \    local temp_index_34=0\n    local temp_index_35=0\n    local temp_index_36=0\n\
    \    local temp_index_37=0\n    local temp_index_38=0\n    local temp_index_39=0\n\
    \    local temp_index_40=0\n    local temp_index_41=0\n    local temp_index_42=0\n\
    \    local temp_index_43=0\n    local temp_index_44\n}\n\ncandidate() {\n    strange_sort_list\
    \ \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"1 2 3 4\") = \"1 4 2\
    \ 3\" ]]\n    [[ $(candidate \"5 6 7 8 9\") = \"5 9 6 8 7\" ]]\n    [[ $(candidate\
    \ \"1 2 3 4 5\") = \"1 5 2 4 3\" ]]\n    [[ $(candidate \"5 6 7 8 9 1\") = \"\
    1 9 5 8 6 7\" ]]\n    [[ $(candidate \"5 5 5 5\") = \"5 5 5 5\" ]]\n    [[ $(candidate\
    \ \"\") = \"\" ]]\n    [[ $(candidate \"1 2 3 4 5 6 7 8\") = \"1 8 2 7 3 6 4 5\"\
    \ ]]\n    [[ $(candidate \"0 2 2 2 5 5 -5 -5\") = \"-5 5 -5 5 0 2 2 2\" ]]\n \
    \   [[ $(candidate \"111111\") = \"111111\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660003084
- exit_code: 1
  program: "#!/bin/bash\n# Given list of integers, return list in strange order.\n\
    # Strange sorting, is when you start with the minimum value,\n# then maximum of\
    \ the remaining integers, then minimum and so on.\n# Examples:\n#\n# $1 is a space-separated\
    \ list\nstrange_sort_list() {\n    local list=\"$1\"\n    local sorted_list=\"\
    \"\n    local min=0\n    local max=0\n    local min_index=0\n    local max_index=0\n\
    \    local i=0\n    local j=0\n    local k=0\n    local tmp=0\n    local tmp_index=0\n\
    \    local tmp_list=\"\"\n    local tmp_list_len=0\n    local list_len=0\n   \
    \ local list_len_half=0\n    local list_len_mod=0\n    local list_len_mod_half=0\n\
    \    local list_len_mod_half_plus_one=0\n    local list_len_mod_half_plus_one_minus_one=0\n\
    \    local list_len_mod_half_plus_one_minus_one_minus_one=0\n    local list_len_mod_half_plus_one_minus_one_minus_one_minus_one=0\n\
    \    local list_len_mod_half_plus_one_minus_one_minus_one_minus_one_minus_one=0\n\
    \    local list_len_mod_half_plus_one_minus_one_minus_one_minus_one_minus_one_minus_one=0\n\
    \    local list_len_mod_half_plus_one_minus_one_minus_one_minus_one_minus_one_minus_one_minus_one=0\n\
    \    local list_len_mod_half_plus_one_minus_one_minus_one_minus_one_minus_one_minus_one_minus_one_minus_one=0\n\
    \    local list_len_mod_half_plus_one_minus_one_minus_one_minus_one_minus_one_minus_one_minus_one_minus_one_minus_one=0\n\
    \    local list_len_mod_half_plus_one_minus_one_minus_one_minus_one_minus_one_minus_one_minus_one_minus_one_minus_one_minus_one=0\n\
    \    local list_len_mod_half_plus_one_minus_one_minus_one_minus_one_minus_one_minus_one_minus_one_minus\n\
    }\n\ncandidate() {\n    strange_sort_list \"$@\"\n}\n\nset -e\nrun_test() {\n\
    \    [[ $(candidate \"1 2 3 4\") = \"1 4 2 3\" ]]\n    [[ $(candidate \"5 6 7\
    \ 8 9\") = \"5 9 6 8 7\" ]]\n    [[ $(candidate \"1 2 3 4 5\") = \"1 5 2 4 3\"\
    \ ]]\n    [[ $(candidate \"5 6 7 8 9 1\") = \"1 9 5 8 6 7\" ]]\n    [[ $(candidate\
    \ \"5 5 5 5\") = \"5 5 5 5\" ]]\n    [[ $(candidate \"\") = \"\" ]]\n    [[ $(candidate\
    \ \"1 2 3 4 5 6 7 8\") = \"1 8 2 7 3 6 4 5\" ]]\n    [[ $(candidate \"0 2 2 2\
    \ 5 5 -5 -5\") = \"-5 5 -5 5 0 2 2 2\" ]]\n    [[ $(candidate \"111111\") = \"\
    111111\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660003083
- exit_code: 1
  program: "#!/bin/bash\n# Given list of integers, return list in strange order.\n\
    # Strange sorting, is when you start with the minimum value,\n# then maximum of\
    \ the remaining integers, then minimum and so on.\n# Examples:\n#\n# $1 is a space-separated\
    \ list\nstrange_sort_list() {\n    local list=($1)\n    local sorted=()\n    local\
    \ min=${list[0]}\n    local max=${list[0]}\n    local min_index=0\n    local max_index=0\n\
    \    local i=0\n    local j=0\n    local k=0\n    local l=0\n    local m=0\n \
    \   local n=0\n    local o=0\n    local p=0\n    local q=0\n    local r=0\n  \
    \  local s=0\n    local t=0\n    local u=0\n    local v=0\n    local w=0\n   \
    \ local x=0\n    local y=0\n    local z=0\n    local aa=0\n    local bb=0\n  \
    \  local cc=0\n    local dd=0\n    local ee=0\n    local ff=0\n    local gg=0\n\
    \    local hh=0\n    local ii=0\n    local jj=0\n    local kk=0\n    local ll=0\n\
    \    local mm=0\n    local nn=0\n    local oo=0\n    local pp=0\n    local qq=0\n\
    \    local rr=0\n    local ss=0\n    local tt=0\n    local uu=0\n    local vv=0\n\
    \    local ww=0\n    local xx=0\n    local yy=0\n    local zz=0\n    local aaa=0\n\
    \    local bbb=0\n    local ccc=0\n    local ddd=0\n    local eee=0\n    local\
    \ fff=0\n    local ggg=0\n    local hhh=0\n    local iii=0\n    local jjj=0\n\
    \    local kkk=0\n    local lll=0\n    local mmm=0\n    local nnn=0\n    local\
    \ ooo=0\n    local ppp=0\n    local qqq=0\n    local rrr=0\n    local sss=0\n\
    \    local ttt=0\n    local uuu=0\n    local vvv=0\n    local www=0\n    local\
    \ xxx=0\n    local yyy=0\n    local zzz=0\n\n}\n\ncandidate() {\n    strange_sort_list\
    \ \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"1 2 3 4\") = \"1 4 2\
    \ 3\" ]]\n    [[ $(candidate \"5 6 7 8 9\") = \"5 9 6 8 7\" ]]\n    [[ $(candidate\
    \ \"1 2 3 4 5\") = \"1 5 2 4 3\" ]]\n    [[ $(candidate \"5 6 7 8 9 1\") = \"\
    1 9 5 8 6 7\" ]]\n    [[ $(candidate \"5 5 5 5\") = \"5 5 5 5\" ]]\n    [[ $(candidate\
    \ \"\") = \"\" ]]\n    [[ $(candidate \"1 2 3 4 5 6 7 8\") = \"1 8 2 7 3 6 4 5\"\
    \ ]]\n    [[ $(candidate \"0 2 2 2 5 5 -5 -5\") = \"-5 5 -5 5 0 2 2 2\" ]]\n \
    \   [[ $(candidate \"111111\") = \"111111\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660003083
- exit_code: 1
  program: "#!/bin/bash\n# Given list of integers, return list in strange order.\n\
    # Strange sorting, is when you start with the minimum value,\n# then maximum of\
    \ the remaining integers, then minimum and so on.\n# Examples:\n#\n# $1 is a space-separated\
    \ list\nstrange_sort_list() {\n  local list=\"$1\"\n  local sorted_list=\"\"\n\
    \  local min_value=\"\"\n  local max_value=\"\"\n  local remaining_list=\"\"\n\
    \  local i=0\n  local j=0\n  local k=0\n  local l=0\n  local m=0\n  local n=0\n\
    \  local o=0\n  local p=0\n  local q=0\n  local r=0\n  local s=0\n  local t=0\n\
    \  local u=0\n  local v=0\n  local w=0\n  local x=0\n  local y=0\n  local z=0\n\
    \  local aa=0\n  local bb=0\n  local cc=0\n  local dd=0\n  local ee=0\n  local\
    \ ff=0\n  local gg=0\n  local hh=0\n  local ii=0\n  local jj=0\n  local kk=0\n\
    \  local ll=0\n  local mm=0\n  local nn=0\n  local oo=0\n  local pp=0\n  local\
    \ qq=0\n  local rr=0\n  local ss=0\n  local tt=0\n  local uu=0\n  local vv=0\n\
    \  local ww=0\n  local xx=0\n  local yy=0\n  local zz=0\n  local aaa=0\n  local\
    \ bbb=0\n  local ccc=0\n  local ddd=0\n  local eee=0\n  local fff=0\n  local ggg=0\n\
    \  local hhh=0\n  local iii=0\n  local jjj=0\n  local kkk=0\n  local lll=0\n \
    \ local mmm=0\n  local nnn=0\n  local ooo=0\n  local ppp=0\n  local qqq=0\n  local\
    \ rrr=0\n  local sss=0\n  local ttt=0\n  local uuu=0\n  local vvv=0\n  local www=0\n\
    \  local xxx=0\n  local yyy=0\n  local zzz=0\n  local aaaa=0\n  local bbbb=0\n\
    }\n\ncandidate() {\n    strange_sort_list \"$@\"\n}\n\nset -e\nrun_test() {\n\
    \    [[ $(candidate \"1 2 3 4\") = \"1 4 2 3\" ]]\n    [[ $(candidate \"5 6 7\
    \ 8 9\") = \"5 9 6 8 7\" ]]\n    [[ $(candidate \"1 2 3 4 5\") = \"1 5 2 4 3\"\
    \ ]]\n    [[ $(candidate \"5 6 7 8 9 1\") = \"1 9 5 8 6 7\" ]]\n    [[ $(candidate\
    \ \"5 5 5 5\") = \"5 5 5 5\" ]]\n    [[ $(candidate \"\") = \"\" ]]\n    [[ $(candidate\
    \ \"1 2 3 4 5 6 7 8\") = \"1 8 2 7 3 6 4 5\" ]]\n    [[ $(candidate \"0 2 2 2\
    \ 5 5 -5 -5\") = \"-5 5 -5 5 0 2 2 2\" ]]\n    [[ $(candidate \"111111\") = \"\
    111111\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660003083
- exit_code: 1
  program: "#!/bin/bash\n# Given list of integers, return list in strange order.\n\
    # Strange sorting, is when you start with the minimum value,\n# then maximum of\
    \ the remaining integers, then minimum and so on.\n# Examples:\n#\n# $1 is a space-separated\
    \ list\nstrange_sort_list() {\n  local list=$1\n  local sorted_list=()\n  local\
    \ min=0\n  local max=0\n  local min_index=0\n  local max_index=0\n  local i=0\n\
    \  local j=0\n  local k=0\n  local l=0\n  local m=0\n  local n=0\n  local o=0\n\
    \  local p=0\n  local q=0\n  local r=0\n  local s=0\n  local t=0\n  local u=0\n\
    \  local v=0\n  local w=0\n  local x=0\n  local y=0\n  local z=0\n  local aa=0\n\
    \  local bb=0\n  local cc=0\n  local dd=0\n  local ee=0\n  local ff=0\n  local\
    \ gg=0\n  local hh=0\n  local ii=0\n  local jj=0\n  local kk=0\n  local ll=0\n\
    \  local mm=0\n  local nn=0\n  local oo=0\n  local pp=0\n  local qq=0\n  local\
    \ rr=0\n  local ss=0\n  local tt=0\n  local uu=0\n  local vv=0\n  local ww=0\n\
    \  local xx=0\n  local yy=0\n  local zz=0\n  local aaa=0\n  local bbb=0\n  local\
    \ ccc=0\n  local ddd=0\n  local eee=0\n  local fff=0\n  local ggg=0\n  local hhh=0\n\
    \  local iii=0\n  local jjj=0\n  local kkk=0\n  local lll=0\n  local mmm=0\n \
    \ local nnn=0\n  local ooo=0\n  local ppp=0\n  local qqq=0\n  local rrr=0\n  local\
    \ sss=0\n  local ttt=0\n  local uuu=0\n  local vvv=0\n  local www=0\n  local xxx=0\n\
    \  local yyy=0\n  local zzz=0\n  local aaaa=0\n \n}\n\ncandidate() {\n    strange_sort_list\
    \ \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"1 2 3 4\") = \"1 4 2\
    \ 3\" ]]\n    [[ $(candidate \"5 6 7 8 9\") = \"5 9 6 8 7\" ]]\n    [[ $(candidate\
    \ \"1 2 3 4 5\") = \"1 5 2 4 3\" ]]\n    [[ $(candidate \"5 6 7 8 9 1\") = \"\
    1 9 5 8 6 7\" ]]\n    [[ $(candidate \"5 5 5 5\") = \"5 5 5 5\" ]]\n    [[ $(candidate\
    \ \"\") = \"\" ]]\n    [[ $(candidate \"1 2 3 4 5 6 7 8\") = \"1 8 2 7 3 6 4 5\"\
    \ ]]\n    [[ $(candidate \"0 2 2 2 5 5 -5 -5\") = \"-5 5 -5 5 0 2 2 2\" ]]\n \
    \   [[ $(candidate \"111111\") = \"111111\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660003083
- exit_code: 1
  program: "#!/bin/bash\n# Given list of integers, return list in strange order.\n\
    # Strange sorting, is when you start with the minimum value,\n# then maximum of\
    \ the remaining integers, then minimum and so on.\n# Examples:\n#\n# $1 is a space-separated\
    \ list\nstrange_sort_list() {\n  local list=\"$1\"\n  local result=\"\"\n  local\
    \ min=0\n  local max=0\n  local min_index=0\n  local max_index=0\n  local i=0\n\
    \  local j=0\n  local n=0\n  local tmp=0\n  local tmp_index=0\n  local tmp_list=\"\
    \"\n  local tmp_result=\"\"\n  local tmp_result_index=0\n  local tmp_result_list=\"\
    \"\n  local tmp_result_list_index=0\n  local tmp_result_list_index_list=\"\"\n\
    \  local tmp_result_list_index_list_index=0\n  local tmp_result_list_index_list_index_list=\"\
    \"\n  local tmp_result_list_index_list_index_list_index=0\n  local tmp_result_list_index_list_index_list_index_list=\"\
    \"\n  local tmp_result_list_index_list_index_list_index_list_index=0\n  local\
    \ tmp_result_list_index_list_index_list_index_list_index_list=\"\"\n  local tmp_result_list_index_list_index_list_index_list_index_list_index=0\n\
    \  local tmp_result_list_index_list_index_list_index_list_index_list_index_list=\"\
    \"\n  local tmp_result_list_index_list_index_list_index_list_index_list_index_list_index=0\n\
    \  local tmp_result_list_index_list_index_list_index_list_index_list_index_list_index_list=\"\
    \"\n  local tmp_result_list_index_list_index_list_index_list_index_list_index_list_index_list_index=0\n\
    \  local tmp_result_list_index_list_index_list_index_list_index_list_index_list_index_list_index_list=\"\
    \"\n  local tmp_result_list_index_list_index_list_index_list_index_list_index_list_index_list_index_list_index=0\n\
    \  local tmp_result_list_index_list_index_list_index_list_index_\n}\n\ncandidate()\
    \ {\n    strange_sort_list \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate\
    \ \"1 2 3 4\") = \"1 4 2 3\" ]]\n    [[ $(candidate \"5 6 7 8 9\") = \"5 9 6 8\
    \ 7\" ]]\n    [[ $(candidate \"1 2 3 4 5\") = \"1 5 2 4 3\" ]]\n    [[ $(candidate\
    \ \"5 6 7 8 9 1\") = \"1 9 5 8 6 7\" ]]\n    [[ $(candidate \"5 5 5 5\") = \"\
    5 5 5 5\" ]]\n    [[ $(candidate \"\") = \"\" ]]\n    [[ $(candidate \"1 2 3 4\
    \ 5 6 7 8\") = \"1 8 2 7 3 6 4 5\" ]]\n    [[ $(candidate \"0 2 2 2 5 5 -5 -5\"\
    ) = \"-5 5 -5 5 0 2 2 2\" ]]\n    [[ $(candidate \"111111\") = \"111111\" ]]\n\
    }\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660003084
- exit_code: 1
  program: "#!/bin/bash\n# Given list of integers, return list in strange order.\n\
    # Strange sorting, is when you start with the minimum value,\n# then maximum of\
    \ the remaining integers, then minimum and so on.\n# Examples:\n#\n# $1 is a space-separated\
    \ list\nstrange_sort_list() {\n    local list=\"$1\"\n    local sorted_list=\"\
    \"\n    local min=0\n    local max=0\n    local min_index=0\n    local max_index=0\n\
    \    local i=0\n    local j=0\n    local temp=0\n    local temp_index=0\n    local\
    \ list_length=0\n    local list_length_minus_one=0\n    local list_length_minus_two=0\n\
    \    local list_length_minus_three=0\n    local list_length_minus_four=0\n   \
    \ local list_length_minus_five=0\n    local list_length_minus_six=0\n    local\
    \ list_length_minus_seven=0\n    local list_length_minus_eight=0\n    local list_length_minus_nine=0\n\
    \    local list_length_minus_ten=0\n    local list_length_minus_eleven=0\n   \
    \ local list_length_minus_twelve=0\n    local list_length_minus_thirteen=0\n \
    \   local list_length_minus_fourteen=0\n    local list_length_minus_fifteen=0\n\
    \    local list_length_minus_sixteen=0\n    local list_length_minus_seventeen=0\n\
    \    local list_length_minus_eighteen=0\n    local list_length_minus_nineteen=0\n\
    \    local list_length_minus_twenty=0\n    local list_length_minus_twenty_one=0\n\
    \    local list_length_minus_twenty_two=0\n    local list_length_minus_twenty_three=0\n\
    \    local list_length_minus_twenty_four=0\n    local list_length_minus_twenty_five=0\n\
    \    local list_length_minus_twenty_six=0\n    local list_length_minus_twenty_seven=0\n\
    \    local list_length_minus_twenty_eight=0\n    local list_length_minus_twenty_nine=0\n\
    \    local list_length_minus_thirty=0\n    local list_length_minus_thirty_one=0\n\
    \    local list_length_minus_thirty_two=0\n    local list_length\n}\n\ncandidate()\
    \ {\n    strange_sort_list \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate\
    \ \"1 2 3 4\") = \"1 4 2 3\" ]]\n    [[ $(candidate \"5 6 7 8 9\") = \"5 9 6 8\
    \ 7\" ]]\n    [[ $(candidate \"1 2 3 4 5\") = \"1 5 2 4 3\" ]]\n    [[ $(candidate\
    \ \"5 6 7 8 9 1\") = \"1 9 5 8 6 7\" ]]\n    [[ $(candidate \"5 5 5 5\") = \"\
    5 5 5 5\" ]]\n    [[ $(candidate \"\") = \"\" ]]\n    [[ $(candidate \"1 2 3 4\
    \ 5 6 7 8\") = \"1 8 2 7 3 6 4 5\" ]]\n    [[ $(candidate \"0 2 2 2 5 5 -5 -5\"\
    ) = \"-5 5 -5 5 0 2 2 2\" ]]\n    [[ $(candidate \"111111\") = \"111111\" ]]\n\
    }\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660003083
- exit_code: 1
  program: "#!/bin/bash\n# Given list of integers, return list in strange order.\n\
    # Strange sorting, is when you start with the minimum value,\n# then maximum of\
    \ the remaining integers, then minimum and so on.\n# Examples:\n#\n# $1 is a space-separated\
    \ list\nstrange_sort_list() {\n    local -a list=($1)\n    local -a result=()\n\
    \    local -i i=0\n    local -i j=0\n    local -i k=0\n    local -i l=0\n    local\
    \ -i m=0\n    local -i n=0\n    local -i o=0\n    local -i p=0\n    local -i q=0\n\
    \    local -i r=0\n    local -i s=0\n    local -i t=0\n    local -i u=0\n    local\
    \ -i v=0\n    local -i w=0\n    local -i x=0\n    local -i y=0\n    local -i z=0\n\
    \    local -i aa=0\n    local -i bb=0\n    local -i cc=0\n    local -i dd=0\n\
    \    local -i ee=0\n    local -i ff=0\n    local -i gg=0\n    local -i hh=0\n\
    \    local -i ii=0\n    local -i jj=0\n    local -i kk=0\n    local -i ll=0\n\
    \    local -i mm=0\n    local -i nn=0\n    local -i oo=0\n    local -i pp=0\n\
    \    local -i qq=0\n    local -i rr=0\n    local -i ss=0\n    local -i tt=0\n\
    \    local -i uu=0\n    local -i vv=0\n    local -i ww=0\n    local -i xx=0\n\
    \    local -i yy=0\n    local -i zz=0\n    local -i aaa=0\n    local -i bbb=0\n\
    \    local -i ccc=0\n    local -i ddd=0\n    local -i eee=0\n    local -i fff=0\n\
    \    local -i ggg=0\n    local -i hhh=0\n    local -i iii=0\n    local -i jjj=0\n\
    \    local -i kkk=0\n    local -i lll=0\n    local -i mmm=0\n    local -i nnn=0\n\
    }\n\ncandidate() {\n    strange_sort_list \"$@\"\n}\n\nset -e\nrun_test() {\n\
    \    [[ $(candidate \"1 2 3 4\") = \"1 4 2 3\" ]]\n    [[ $(candidate \"5 6 7\
    \ 8 9\") = \"5 9 6 8 7\" ]]\n    [[ $(candidate \"1 2 3 4 5\") = \"1 5 2 4 3\"\
    \ ]]\n    [[ $(candidate \"5 6 7 8 9 1\") = \"1 9 5 8 6 7\" ]]\n    [[ $(candidate\
    \ \"5 5 5 5\") = \"5 5 5 5\" ]]\n    [[ $(candidate \"\") = \"\" ]]\n    [[ $(candidate\
    \ \"1 2 3 4 5 6 7 8\") = \"1 8 2 7 3 6 4 5\" ]]\n    [[ $(candidate \"0 2 2 2\
    \ 5 5 -5 -5\") = \"-5 5 -5 5 0 2 2 2\" ]]\n    [[ $(candidate \"111111\") = \"\
    111111\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660003084
- exit_code: 1
  program: "#!/bin/bash\n# Given list of integers, return list in strange order.\n\
    # Strange sorting, is when you start with the minimum value,\n# then maximum of\
    \ the remaining integers, then minimum and so on.\n# Examples:\n#\n# $1 is a space-separated\
    \ list\nstrange_sort_list() {\n  local -a list=($1)\n  local -a sorted=()\n  local\
    \ -i i=0\n  local -i j=0\n  local -i k=0\n  local -i l=0\n  local -i m=0\n  local\
    \ -i n=0\n  local -i o=0\n  local -i p=0\n  local -i q=0\n  local -i r=0\n  local\
    \ -i s=0\n  local -i t=0\n  local -i u=0\n  local -i v=0\n  local -i w=0\n  local\
    \ -i x=0\n  local -i y=0\n  local -i z=0\n  local -i aa=0\n  local -i bb=0\n \
    \ local -i cc=0\n  local -i dd=0\n  local -i ee=0\n  local -i ff=0\n  local -i\
    \ gg=0\n  local -i hh=0\n  local -i ii=0\n  local -i jj=0\n  local -i kk=0\n \
    \ local -i ll=0\n  local -i mm=0\n  local -i nn=0\n  local -i oo=0\n  local -i\
    \ pp=0\n  local -i qq=0\n  local -i rr=0\n  local -i ss=0\n  local -i tt=0\n \
    \ local -i uu=0\n  local -i vv=0\n  local -i ww=0\n  local -i xx=0\n  local -i\
    \ yy=0\n  local -i zz=0\n  local -i aaa=0\n  local -i bbb=0\n  local -i ccc=0\n\
    \  local -i ddd=0\n  local -i eee=0\n  local -i fff=0\n  local -i ggg=0\n  local\
    \ -i hhh=0\n  local -i iii=0\n  local -i jjj=0\n  local -i kkk=0\n  local -i lll=0\n\
    \  local -i mmm=0\n  local -i nnn=0\n}\n\ncandidate() {\n    strange_sort_list\
    \ \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"1 2 3 4\") = \"1 4 2\
    \ 3\" ]]\n    [[ $(candidate \"5 6 7 8 9\") = \"5 9 6 8 7\" ]]\n    [[ $(candidate\
    \ \"1 2 3 4 5\") = \"1 5 2 4 3\" ]]\n    [[ $(candidate \"5 6 7 8 9 1\") = \"\
    1 9 5 8 6 7\" ]]\n    [[ $(candidate \"5 5 5 5\") = \"5 5 5 5\" ]]\n    [[ $(candidate\
    \ \"\") = \"\" ]]\n    [[ $(candidate \"1 2 3 4 5 6 7 8\") = \"1 8 2 7 3 6 4 5\"\
    \ ]]\n    [[ $(candidate \"0 2 2 2 5 5 -5 -5\") = \"-5 5 -5 5 0 2 2 2\" ]]\n \
    \   [[ $(candidate \"111111\") = \"111111\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660003084
- exit_code: 1
  program: "#!/bin/bash\n# Given list of integers, return list in strange order.\n\
    # Strange sorting, is when you start with the minimum value,\n# then maximum of\
    \ the remaining integers, then minimum and so on.\n# Examples:\n#\n# $1 is a space-separated\
    \ list\nstrange_sort_list() {\n  local list=$1\n  local min=$(echo \"$list\" |\
    \ tr ' ' '\\n' | sort -n | head -n 1)\n  local max=$(echo \"$list\" | tr ' ' '\\\
    n' | sort -n | tail -n 1)\n  local min_list=$(echo \"$list\" | tr ' ' '\\n' |\
    \ sort -n | grep -v \"$max\")\n  local max_list=$(echo \"$list\" | tr ' ' '\\\
    n' | sort -n | grep -v \"$min\")\n  local result=\"\"\n  local i=0\n  while [\
    \ \"$min_list\" != \"\" ] || [ \"$max_list\" != \"\" ]; do\n    if [ $((i % 2))\
    \ -eq 0 ]; then\n      result=\"$result $min\"\n      min=$(echo \"$min_list\"\
    \ | head -n 1)\n      min_list=$(echo \"$min_list\" | tail -n +2)\n    else\n\
    \      result=\"$result $max\"\n      max=$(echo \"$max_list\" | tail -n 1)\n\
    \      max_list=$(echo \"$max_list\" | head -n -1)\n    fi\n    i=$((i + 1))\n\
    \  done\n  echo \"$result\"\n}\n\ncandidate() {\n    strange_sort_list \"$@\"\n\
    }\n\nset -e\nrun_test() {\n    [[ $(candidate \"1 2 3 4\") = \"1 4 2 3\" ]]\n\
    \    [[ $(candidate \"5 6 7 8 9\") = \"5 9 6 8 7\" ]]\n    [[ $(candidate \"1\
    \ 2 3 4 5\") = \"1 5 2 4 3\" ]]\n    [[ $(candidate \"5 6 7 8 9 1\") = \"1 9 5\
    \ 8 6 7\" ]]\n    [[ $(candidate \"5 5 5 5\") = \"5 5 5 5\" ]]\n    [[ $(candidate\
    \ \"\") = \"\" ]]\n    [[ $(candidate \"1 2 3 4 5 6 7 8\") = \"1 8 2 7 3 6 4 5\"\
    \ ]]\n    [[ $(candidate \"0 2 2 2 5 5 -5 -5\") = \"-5 5 -5 5 0 2 2 2\" ]]\n \
    \   [[ $(candidate \"111111\") = \"111111\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660003084
- exit_code: 1
  program: "#!/bin/bash\n# Given list of integers, return list in strange order.\n\
    # Strange sorting, is when you start with the minimum value,\n# then maximum of\
    \ the remaining integers, then minimum and so on.\n# Examples:\n#\n# $1 is a space-separated\
    \ list\nstrange_sort_list() {\n  local list=($1)\n  local sorted_list=()\n  local\
    \ min=${list[0]}\n  local max=${list[0]}\n  local min_index=0\n  local max_index=0\n\
    \  local i=0\n  local j=0\n  local k=0\n  local l=0\n  local m=0\n  local n=0\n\
    \  local o=0\n  local p=0\n  local q=0\n  local r=0\n  local s=0\n  local t=0\n\
    \  local u=0\n  local v=0\n  local w=0\n  local x=0\n  local y=0\n  local z=0\n\
    \  local aa=0\n  local bb=0\n  local cc=0\n  local dd=0\n  local ee=0\n  local\
    \ ff=0\n  local gg=0\n  local hh=0\n  local ii=0\n  local jj=0\n  local kk=0\n\
    \  local ll=0\n  local mm=0\n  local nn=0\n  local oo=0\n  local pp=0\n  local\
    \ qq=0\n  local rr=0\n  local ss=0\n  local tt=0\n  local uu=0\n  local vv=0\n\
    \  local ww=0\n  local xx=0\n  local yy=0\n  local zz=0\n  local aaa=0\n  local\
    \ bbb=0\n  local ccc=0\n  local ddd=0\n  local eee=0\n  local fff=0\n  local ggg=0\n\
    \  local hhh=0\n  local iii=0\n  local jjj=0\n  local kkk=0\n  local lll=0\n \
    \ local mmm=0\n  local nnn=0\n  local ooo=0\n  local ppp=0\n  local qqq=0\n  local\
    \ rrr=0\n  local sss=0\n  local ttt=0\n  local uuu=0\n  local vvv=0\n  local www=0\n\
    \  local xxx=0\n  local yyy=0\n  local zzz=\n}\n\ncandidate() {\n    strange_sort_list\
    \ \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"1 2 3 4\") = \"1 4 2\
    \ 3\" ]]\n    [[ $(candidate \"5 6 7 8 9\") = \"5 9 6 8 7\" ]]\n    [[ $(candidate\
    \ \"1 2 3 4 5\") = \"1 5 2 4 3\" ]]\n    [[ $(candidate \"5 6 7 8 9 1\") = \"\
    1 9 5 8 6 7\" ]]\n    [[ $(candidate \"5 5 5 5\") = \"5 5 5 5\" ]]\n    [[ $(candidate\
    \ \"\") = \"\" ]]\n    [[ $(candidate \"1 2 3 4 5 6 7 8\") = \"1 8 2 7 3 6 4 5\"\
    \ ]]\n    [[ $(candidate \"0 2 2 2 5 5 -5 -5\") = \"-5 5 -5 5 0 2 2 2\" ]]\n \
    \   [[ $(candidate \"111111\") = \"111111\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660003084
- exit_code: 1
  program: "#!/bin/bash\n# Given list of integers, return list in strange order.\n\
    # Strange sorting, is when you start with the minimum value,\n# then maximum of\
    \ the remaining integers, then minimum and so on.\n# Examples:\n#\n# $1 is a space-separated\
    \ list\nstrange_sort_list() {\n    local -a list=($1)\n    local -a sorted\n \
    \   local -i i=0\n    local -i j=0\n    local -i k=0\n    local -i n=${#list[@]}\n\
    \    local -i m=0\n    local -i tmp=0\n    local -i min=0\n    local -i max=0\n\
    \    local -i min_idx=0\n    local -i max_idx=0\n\n    for ((i=0; i<n; i++));\
    \ do\n        min=${list[0]}\n        max=${list[0]}\n        for ((j=0; j<n;\
    \ j++)); do\n            if [[ ${list[j]} -lt $min ]]; then\n                min=${list[j]}\n\
    \                min_idx=$j\n            fi\n            if [[ ${list[j]} -gt\
    \ $max ]]; then\n                max=${list[j]}\n                max_idx=$j\n\
    \            fi\n        done\n        if [[ $((i%2)) -eq 0 ]]; then\n       \
    \     sorted[$i]=$min\n            list[$min_idx]=$((max+1))\n        else\n \
    \           sorted[$i]=$max\n            list[$max_idx]=$((min-1))\n        fi\n\
    \    done\n    echo ${sorted[@]}\n}\n\ncandidate() {\n    strange_sort_list \"\
    $@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"1 2 3 4\") = \"1 4 2 3\"\
    \ ]]\n    [[ $(candidate \"5 6 7 8 9\") = \"5 9 6 8 7\" ]]\n    [[ $(candidate\
    \ \"1 2 3 4 5\") = \"1 5 2 4 3\" ]]\n    [[ $(candidate \"5 6 7 8 9 1\") = \"\
    1 9 5 8 6 7\" ]]\n    [[ $(candidate \"5 5 5 5\") = \"5 5 5 5\" ]]\n    [[ $(candidate\
    \ \"\") = \"\" ]]\n    [[ $(candidate \"1 2 3 4 5 6 7 8\") = \"1 8 2 7 3 6 4 5\"\
    \ ]]\n    [[ $(candidate \"0 2 2 2 5 5 -5 -5\") = \"-5 5 -5 5 0 2 2 2\" ]]\n \
    \   [[ $(candidate \"111111\") = \"111111\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660003083
- exit_code: 1
  program: "#!/bin/bash\n# Given list of integers, return list in strange order.\n\
    # Strange sorting, is when you start with the minimum value,\n# then maximum of\
    \ the remaining integers, then minimum and so on.\n# Examples:\n#\n# $1 is a space-separated\
    \ list\nstrange_sort_list() {\n    local list=\"$1\"\n    local sorted_list=\"\
    \"\n    local min_value=\"\"\n    local max_value=\"\"\n    local min_index=\"\
    \"\n    local max_index=\"\"\n    local remaining_list=\"\"\n    local i=0\n \
    \   local j=0\n    local k=0\n    local l=0\n    local m=0\n    local n=0\n  \
    \  local o=0\n    local p=0\n    local q=0\n    local r=0\n    local s=0\n   \
    \ local t=0\n    local u=0\n    local v=0\n    local w=0\n    local x=0\n    local\
    \ y=0\n    local z=0\n    local aa=0\n    local bb=0\n    local cc=0\n    local\
    \ dd=0\n    local ee=0\n    local ff=0\n    local gg=0\n    local hh=0\n    local\
    \ ii=0\n    local jj=0\n    local kk=0\n    local ll=0\n    local mm=0\n    local\
    \ nn=0\n    local oo=0\n    local pp=0\n    local qq=0\n    local rr=0\n    local\
    \ ss=0\n    local tt=0\n    local uu=0\n    local vv=0\n    local ww=0\n    local\
    \ xx=0\n    local yy=0\n    local zz=0\n    local aaa=0\n    local bbb=0\n   \
    \ local ccc=0\n    local ddd=0\n    local eee=0\n    local fff=0\n    local ggg=0\n\
    \    local hhh=0\n    local iii=0\n    local jjj=0\n    local kkk=0\n    local\
    \ lll=0\n    local mmm=0\n    local nnn=0\n    local ooo=0\n    local ppp=0\n\
    \    local qqq=0\n    local rrr=0\n    local sss=0\n    local ttt=0\n    local\
    \ uuu=0\n    local vvv=0\n    local www=0\n    local xxx=0\n    local yyy=0\n\
    \    local zzz=0\n\n}\n\ncandidate() {\n    strange_sort_list \"$@\"\n}\n\nset\
    \ -e\nrun_test() {\n    [[ $(candidate \"1 2 3 4\") = \"1 4 2 3\" ]]\n    [[ $(candidate\
    \ \"5 6 7 8 9\") = \"5 9 6 8 7\" ]]\n    [[ $(candidate \"1 2 3 4 5\") = \"1 5\
    \ 2 4 3\" ]]\n    [[ $(candidate \"5 6 7 8 9 1\") = \"1 9 5 8 6 7\" ]]\n    [[\
    \ $(candidate \"5 5 5 5\") = \"5 5 5 5\" ]]\n    [[ $(candidate \"\") = \"\" ]]\n\
    \    [[ $(candidate \"1 2 3 4 5 6 7 8\") = \"1 8 2 7 3 6 4 5\" ]]\n    [[ $(candidate\
    \ \"0 2 2 2 5 5 -5 -5\") = \"-5 5 -5 5 0 2 2 2\" ]]\n    [[ $(candidate \"111111\"\
    ) = \"111111\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660003084
- exit_code: 1
  program: "#!/bin/bash\n# Given list of integers, return list in strange order.\n\
    # Strange sorting, is when you start with the minimum value,\n# then maximum of\
    \ the remaining integers, then minimum and so on.\n# Examples:\n#\n# $1 is a space-separated\
    \ list\nstrange_sort_list() {\n    local list=($1)\n    local sorted=()\n    local\
    \ min=${list[0]}\n    local max=${list[0]}\n    local min_index=0\n    local max_index=0\n\
    \    local i=0\n    local j=0\n    local k=0\n    local l=0\n    local m=0\n \
    \   local n=0\n    local o=0\n    local p=0\n    local q=0\n    local r=0\n  \
    \  local s=0\n    local t=0\n    local u=0\n    local v=0\n    local w=0\n   \
    \ local x=0\n    local y=0\n    local z=0\n    local aa=0\n    local bb=0\n  \
    \  local cc=0\n    local dd=0\n    local ee=0\n    local ff=0\n    local gg=0\n\
    \    local hh=0\n    local ii=0\n    local jj=0\n    local kk=0\n    local ll=0\n\
    \    local mm=0\n    local nn=0\n    local oo=0\n    local pp=0\n    local qq=0\n\
    \    local rr=0\n    local ss=0\n    local tt=0\n    local uu=0\n    local vv=0\n\
    \    local ww=0\n    local xx=0\n    local yy=0\n    local zz=0\n    local aaa=0\n\
    \    local bbb=0\n    local ccc=0\n    local ddd=0\n    local eee=0\n    local\
    \ fff=0\n    local ggg=0\n    local hhh=0\n    local iii=0\n    local jjj=0\n\
    \    local kkk=0\n    local lll=0\n    local mmm=0\n    local nnn=0\n    local\
    \ ooo=0\n    local ppp=0\n    local qqq=0\n    local rrr=0\n    local sss=0\n\
    \    local ttt=0\n    local uuu=0\n    local vvv=0\n    local www=0\n    local\
    \ xxx=0\n    local yyy=0\n    local zzz=0\n\n}\n\ncandidate() {\n    strange_sort_list\
    \ \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"1 2 3 4\") = \"1 4 2\
    \ 3\" ]]\n    [[ $(candidate \"5 6 7 8 9\") = \"5 9 6 8 7\" ]]\n    [[ $(candidate\
    \ \"1 2 3 4 5\") = \"1 5 2 4 3\" ]]\n    [[ $(candidate \"5 6 7 8 9 1\") = \"\
    1 9 5 8 6 7\" ]]\n    [[ $(candidate \"5 5 5 5\") = \"5 5 5 5\" ]]\n    [[ $(candidate\
    \ \"\") = \"\" ]]\n    [[ $(candidate \"1 2 3 4 5 6 7 8\") = \"1 8 2 7 3 6 4 5\"\
    \ ]]\n    [[ $(candidate \"0 2 2 2 5 5 -5 -5\") = \"-5 5 -5 5 0 2 2 2\" ]]\n \
    \   [[ $(candidate \"111111\") = \"111111\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660003083
- exit_code: 1
  program: "#!/bin/bash\n# Given list of integers, return list in strange order.\n\
    # Strange sorting, is when you start with the minimum value,\n# then maximum of\
    \ the remaining integers, then minimum and so on.\n# Examples:\n#\n# $1 is a space-separated\
    \ list\nstrange_sort_list() {\n  local list=($1)\n  local sorted=()\n  local min=${list[0]}\n\
    \  local max=${list[0]}\n  local min_index=0\n  local max_index=0\n  local i=0\n\
    \  local j=0\n  local k=0\n  local l=0\n  local m=0\n  local n=0\n  local o=0\n\
    \  local p=0\n  local q=0\n  local r=0\n  local s=0\n  local t=0\n  local u=0\n\
    \  local v=0\n  local w=0\n  local x=0\n  local y=0\n  local z=0\n  local aa=0\n\
    \  local bb=0\n  local cc=0\n  local dd=0\n  local ee=0\n  local ff=0\n  local\
    \ gg=0\n  local hh=0\n  local ii=0\n  local jj=0\n  local kk=0\n  local ll=0\n\
    \  local mm=0\n  local nn=0\n  local oo=0\n  local pp=0\n  local qq=0\n  local\
    \ rr=0\n  local ss=0\n  local tt=0\n  local uu=0\n  local vv=0\n  local ww=0\n\
    \  local xx=0\n  local yy=0\n  local zz=0\n  local aaa=0\n  local bbb=0\n  local\
    \ ccc=0\n  local ddd=0\n  local eee=0\n  local fff=0\n  local ggg=0\n  local hhh=0\n\
    \  local iii=0\n  local jjj=0\n  local kkk=0\n  local lll=0\n  local mmm=0\n \
    \ local nnn=0\n  local ooo=0\n  local ppp=0\n  local qqq=0\n  local rrr=0\n  local\
    \ sss=0\n  local ttt=0\n  local uuu=0\n  local vvv=0\n  local www=0\n  local xxx=0\n\
    \  local yyy=0\n  local zzz=0\n\n}\n\ncandidate() {\n    strange_sort_list \"\
    $@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"1 2 3 4\") = \"1 4 2 3\"\
    \ ]]\n    [[ $(candidate \"5 6 7 8 9\") = \"5 9 6 8 7\" ]]\n    [[ $(candidate\
    \ \"1 2 3 4 5\") = \"1 5 2 4 3\" ]]\n    [[ $(candidate \"5 6 7 8 9 1\") = \"\
    1 9 5 8 6 7\" ]]\n    [[ $(candidate \"5 5 5 5\") = \"5 5 5 5\" ]]\n    [[ $(candidate\
    \ \"\") = \"\" ]]\n    [[ $(candidate \"1 2 3 4 5 6 7 8\") = \"1 8 2 7 3 6 4 5\"\
    \ ]]\n    [[ $(candidate \"0 2 2 2 5 5 -5 -5\") = \"-5 5 -5 5 0 2 2 2\" ]]\n \
    \   [[ $(candidate \"111111\") = \"111111\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660003084
- exit_code: 1
  program: "#!/bin/bash\n# Given list of integers, return list in strange order.\n\
    # Strange sorting, is when you start with the minimum value,\n# then maximum of\
    \ the remaining integers, then minimum and so on.\n# Examples:\n#\n# $1 is a space-separated\
    \ list\nstrange_sort_list() {\n  local -a list=($1)\n  local -a sorted=()\n  local\
    \ -i i=0\n  local -i j=0\n  local -i k=0\n  local -i l=0\n  local -i m=0\n  local\
    \ -i n=0\n  local -i o=0\n  local -i p=0\n  local -i q=0\n  local -i r=0\n  local\
    \ -i s=0\n  local -i t=0\n  local -i u=0\n  local -i v=0\n  local -i w=0\n  local\
    \ -i x=0\n  local -i y=0\n  local -i z=0\n  local -i aa=0\n  local -i bb=0\n \
    \ local -i cc=0\n  local -i dd=0\n  local -i ee=0\n  local -i ff=0\n  local -i\
    \ gg=0\n  local -i hh=0\n  local -i ii=0\n  local -i jj=0\n  local -i kk=0\n \
    \ local -i ll=0\n  local -i mm=0\n  local -i nn=0\n  local -i oo=0\n  local -i\
    \ pp=0\n  local -i qq=0\n  local -i rr=0\n  local -i ss=0\n  local -i tt=0\n \
    \ local -i uu=0\n  local -i vv=0\n  local -i ww=0\n  local -i xx=0\n  local -i\
    \ yy=0\n  local -i zz=0\n  local -i aaa=0\n  local -i bbb=0\n  local -i ccc=0\n\
    \  local -i ddd=0\n  local -i eee=0\n  local -i fff=0\n  local -i ggg=0\n  local\
    \ -i hhh=0\n  local -i iii=0\n  local -i jjj=0\n  local -i kkk=0\n  local -i lll=0\n\
    \  local -i mmm=0\n  local -i nnn=0\n}\n\ncandidate() {\n    strange_sort_list\
    \ \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"1 2 3 4\") = \"1 4 2\
    \ 3\" ]]\n    [[ $(candidate \"5 6 7 8 9\") = \"5 9 6 8 7\" ]]\n    [[ $(candidate\
    \ \"1 2 3 4 5\") = \"1 5 2 4 3\" ]]\n    [[ $(candidate \"5 6 7 8 9 1\") = \"\
    1 9 5 8 6 7\" ]]\n    [[ $(candidate \"5 5 5 5\") = \"5 5 5 5\" ]]\n    [[ $(candidate\
    \ \"\") = \"\" ]]\n    [[ $(candidate \"1 2 3 4 5 6 7 8\") = \"1 8 2 7 3 6 4 5\"\
    \ ]]\n    [[ $(candidate \"0 2 2 2 5 5 -5 -5\") = \"-5 5 -5 5 0 2 2 2\" ]]\n \
    \   [[ $(candidate \"111111\") = \"111111\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660003084
- exit_code: 1
  program: "#!/bin/bash\n# Given list of integers, return list in strange order.\n\
    # Strange sorting, is when you start with the minimum value,\n# then maximum of\
    \ the remaining integers, then minimum and so on.\n# Examples:\n#\n# $1 is a space-separated\
    \ list\nstrange_sort_list() {\n    local list=($1)\n    local sorted=()\n    local\
    \ min=${list[0]}\n    local max=${list[0]}\n    local min_index=0\n    local max_index=0\n\
    \    local i=0\n    local j=0\n    local k=0\n    local l=0\n    local m=0\n \
    \   local n=0\n    local o=0\n    local p=0\n    local q=0\n    local r=0\n  \
    \  local s=0\n    local t=0\n    local u=0\n    local v=0\n    local w=0\n   \
    \ local x=0\n    local y=0\n    local z=0\n    local aa=0\n    local bb=0\n  \
    \  local cc=0\n    local dd=0\n    local ee=0\n    local ff=0\n    local gg=0\n\
    \    local hh=0\n    local ii=0\n    local jj=0\n    local kk=0\n    local ll=0\n\
    \    local mm=0\n    local nn=0\n    local oo=0\n    local pp=0\n    local qq=0\n\
    \    local rr=0\n    local ss=0\n    local tt=0\n    local uu=0\n    local vv=0\n\
    \    local ww=0\n    local xx=0\n    local yy=0\n    local zz=0\n    local aaa=0\n\
    \    local bbb=0\n    local ccc=0\n    local ddd=0\n    local eee=0\n    local\
    \ fff=0\n    local ggg=0\n    local hhh=0\n    local iii=0\n    local jjj=0\n\
    \    local kkk=0\n    local lll=0\n    local mmm=0\n    local nnn=0\n    local\
    \ ooo=0\n    local ppp=0\n    local qqq=0\n    local rrr=0\n    local sss=0\n\
    \    local ttt=0\n    local uuu=0\n    local vvv=0\n    local www=0\n    local\
    \ xxx=0\n    local yyy=0\n    local zzz=0\n\n}\n\ncandidate() {\n    strange_sort_list\
    \ \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"1 2 3 4\") = \"1 4 2\
    \ 3\" ]]\n    [[ $(candidate \"5 6 7 8 9\") = \"5 9 6 8 7\" ]]\n    [[ $(candidate\
    \ \"1 2 3 4 5\") = \"1 5 2 4 3\" ]]\n    [[ $(candidate \"5 6 7 8 9 1\") = \"\
    1 9 5 8 6 7\" ]]\n    [[ $(candidate \"5 5 5 5\") = \"5 5 5 5\" ]]\n    [[ $(candidate\
    \ \"\") = \"\" ]]\n    [[ $(candidate \"1 2 3 4 5 6 7 8\") = \"1 8 2 7 3 6 4 5\"\
    \ ]]\n    [[ $(candidate \"0 2 2 2 5 5 -5 -5\") = \"-5 5 -5 5 0 2 2 2\" ]]\n \
    \   [[ $(candidate \"111111\") = \"111111\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660003083
- exit_code: 1
  program: "#!/bin/bash\n# Given list of integers, return list in strange order.\n\
    # Strange sorting, is when you start with the minimum value,\n# then maximum of\
    \ the remaining integers, then minimum and so on.\n# Examples:\n#\n# $1 is a space-separated\
    \ list\nstrange_sort_list() {\n    local list=($1)\n    local sorted=()\n    local\
    \ min=${list[0]}\n    local max=${list[0]}\n    local min_index=0\n    local max_index=0\n\
    \    local i=0\n    local j=0\n    local k=0\n    local l=0\n    local m=0\n \
    \   local n=0\n    local o=0\n    local p=0\n    local q=0\n    local r=0\n  \
    \  local s=0\n    local t=0\n    local u=0\n    local v=0\n    local w=0\n   \
    \ local x=0\n    local y=0\n    local z=0\n    local aa=0\n    local bb=0\n  \
    \  local cc=0\n    local dd=0\n    local ee=0\n    local ff=0\n    local gg=0\n\
    \    local hh=0\n    local ii=0\n    local jj=0\n    local kk=0\n    local ll=0\n\
    \    local mm=0\n    local nn=0\n    local oo=0\n    local pp=0\n    local qq=0\n\
    \    local rr=0\n    local ss=0\n    local tt=0\n    local uu=0\n    local vv=0\n\
    \    local ww=0\n    local xx=0\n    local yy=0\n    local zz=0\n    local aaa=0\n\
    \    local bbb=0\n    local ccc=0\n    local ddd=0\n    local eee=0\n    local\
    \ fff=0\n    local ggg=0\n    local hhh=0\n    local iii=0\n    local jjj=0\n\
    \    local kkk=0\n    local lll=0\n    local mmm=0\n    local nnn=0\n    local\
    \ ooo=0\n    local ppp=0\n    local qqq=0\n    local rrr=0\n    local sss=0\n\
    \    local ttt=0\n    local uuu=0\n    local vvv=0\n    local www=0\n    local\
    \ xxx=0\n    local yyy=0\n    local zzz=0\n\n}\n\ncandidate() {\n    strange_sort_list\
    \ \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"1 2 3 4\") = \"1 4 2\
    \ 3\" ]]\n    [[ $(candidate \"5 6 7 8 9\") = \"5 9 6 8 7\" ]]\n    [[ $(candidate\
    \ \"1 2 3 4 5\") = \"1 5 2 4 3\" ]]\n    [[ $(candidate \"5 6 7 8 9 1\") = \"\
    1 9 5 8 6 7\" ]]\n    [[ $(candidate \"5 5 5 5\") = \"5 5 5 5\" ]]\n    [[ $(candidate\
    \ \"\") = \"\" ]]\n    [[ $(candidate \"1 2 3 4 5 6 7 8\") = \"1 8 2 7 3 6 4 5\"\
    \ ]]\n    [[ $(candidate \"0 2 2 2 5 5 -5 -5\") = \"-5 5 -5 5 0 2 2 2\" ]]\n \
    \   [[ $(candidate \"111111\") = \"111111\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660003083
- exit_code: 1
  program: "#!/bin/bash\n# Given list of integers, return list in strange order.\n\
    # Strange sorting, is when you start with the minimum value,\n# then maximum of\
    \ the remaining integers, then minimum and so on.\n# Examples:\n#\n# $1 is a space-separated\
    \ list\nstrange_sort_list() {\n    local -a list=($1)\n    local -a result=()\n\
    \    local -i i=0\n    local -i j=0\n    local -i k=0\n    local -i l=0\n    local\
    \ -i m=0\n    local -i n=0\n    local -i o=0\n    local -i p=0\n    local -i q=0\n\
    \    local -i r=0\n    local -i s=0\n    local -i t=0\n    local -i u=0\n    local\
    \ -i v=0\n    local -i w=0\n    local -i x=0\n    local -i y=0\n    local -i z=0\n\
    \    local -i aa=0\n    local -i bb=0\n    local -i cc=0\n    local -i dd=0\n\
    \    local -i ee=0\n    local -i ff=0\n    local -i gg=0\n    local -i hh=0\n\
    \    local -i ii=0\n    local -i jj=0\n    local -i kk=0\n    local -i ll=0\n\
    \    local -i mm=0\n    local -i nn=0\n    local -i oo=0\n    local -i pp=0\n\
    \    local -i qq=0\n    local -i rr=0\n    local -i ss=0\n    local -i tt=0\n\
    \    local -i uu=0\n    local -i vv=0\n    local -i ww=0\n    local -i xx=0\n\
    \    local -i yy=0\n    local -i zz=0\n    local -i aaa=0\n    local -i bbb=0\n\
    \    local -i ccc=0\n    local -i ddd=0\n    local -i eee=0\n    local -i fff=0\n\
    \    local -i ggg=0\n    local -i hhh=0\n    local -i iii=0\n    local -i jjj=0\n\
    \    local -i kkk=0\n    local -i lll=0\n    local -i mmm=0\n    local -i nnn=0\n\
    }\n\ncandidate() {\n    strange_sort_list \"$@\"\n}\n\nset -e\nrun_test() {\n\
    \    [[ $(candidate \"1 2 3 4\") = \"1 4 2 3\" ]]\n    [[ $(candidate \"5 6 7\
    \ 8 9\") = \"5 9 6 8 7\" ]]\n    [[ $(candidate \"1 2 3 4 5\") = \"1 5 2 4 3\"\
    \ ]]\n    [[ $(candidate \"5 6 7 8 9 1\") = \"1 9 5 8 6 7\" ]]\n    [[ $(candidate\
    \ \"5 5 5 5\") = \"5 5 5 5\" ]]\n    [[ $(candidate \"\") = \"\" ]]\n    [[ $(candidate\
    \ \"1 2 3 4 5 6 7 8\") = \"1 8 2 7 3 6 4 5\" ]]\n    [[ $(candidate \"0 2 2 2\
    \ 5 5 -5 -5\") = \"-5 5 -5 5 0 2 2 2\" ]]\n    [[ $(candidate \"111111\") = \"\
    111111\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660003084
- exit_code: 1
  program: "#!/bin/bash\n# Given list of integers, return list in strange order.\n\
    # Strange sorting, is when you start with the minimum value,\n# then maximum of\
    \ the remaining integers, then minimum and so on.\n# Examples:\n#\n# $1 is a space-separated\
    \ list\nstrange_sort_list() {\n    local list=($1)\n    local result=()\n    local\
    \ i=0\n    local j=0\n    local k=0\n    local l=0\n    local m=0\n    local n=0\n\
    \    local o=0\n    local p=0\n    local q=0\n    local r=0\n    local s=0\n \
    \   local t=0\n    local u=0\n    local v=0\n    local w=0\n    local x=0\n  \
    \  local y=0\n    local z=0\n    local aa=0\n    local bb=0\n    local cc=0\n\
    \    local dd=0\n    local ee=0\n    local ff=0\n    local gg=0\n    local hh=0\n\
    \    local ii=0\n    local jj=0\n    local kk=0\n    local ll=0\n    local mm=0\n\
    \    local nn=0\n    local oo=0\n    local pp=0\n    local qq=0\n    local rr=0\n\
    \    local ss=0\n    local tt=0\n    local uu=0\n    local vv=0\n    local ww=0\n\
    \    local xx=0\n    local yy=0\n    local zz=0\n    local aaa=0\n    local bbb=0\n\
    \    local ccc=0\n    local ddd=0\n    local eee=0\n    local fff=0\n    local\
    \ ggg=0\n    local hhh=0\n    local iii=0\n    local jjj=0\n    local kkk=0\n\
    \    local lll=0\n    local mmm=0\n    local nnn=0\n    local ooo=0\n    local\
    \ ppp=0\n    local qqq=0\n    local rrr=0\n    local sss=0\n    local ttt=0\n\
    \    local uuu=0\n    local vvv=0\n    local www=0\n    local xxx=0\n    local\
    \ yyy=0\n    local zzz=0\n    local aaaa=0\n    local bbbb=0\n    local cccc=0\n\
    \    local dddd=0\n    local eeee\n}\n\ncandidate() {\n    strange_sort_list \"\
    $@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"1 2 3 4\") = \"1 4 2 3\"\
    \ ]]\n    [[ $(candidate \"5 6 7 8 9\") = \"5 9 6 8 7\" ]]\n    [[ $(candidate\
    \ \"1 2 3 4 5\") = \"1 5 2 4 3\" ]]\n    [[ $(candidate \"5 6 7 8 9 1\") = \"\
    1 9 5 8 6 7\" ]]\n    [[ $(candidate \"5 5 5 5\") = \"5 5 5 5\" ]]\n    [[ $(candidate\
    \ \"\") = \"\" ]]\n    [[ $(candidate \"1 2 3 4 5 6 7 8\") = \"1 8 2 7 3 6 4 5\"\
    \ ]]\n    [[ $(candidate \"0 2 2 2 5 5 -5 -5\") = \"-5 5 -5 5 0 2 2 2\" ]]\n \
    \   [[ $(candidate \"111111\") = \"111111\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660003083
- exit_code: 1
  program: "#!/bin/bash\n# Given list of integers, return list in strange order.\n\
    # Strange sorting, is when you start with the minimum value,\n# then maximum of\
    \ the remaining integers, then minimum and so on.\n# Examples:\n#\n# $1 is a space-separated\
    \ list\nstrange_sort_list() {\n  local list=\"$1\"\n  local sorted_list=\"\"\n\
    \  local min=\"\"\n  local max=\"\"\n  local remaining_list=\"\"\n  local i=\"\
    \"\n  local j=\"\"\n  local k=\"\"\n  local l=\"\"\n  local m=\"\"\n  local n=\"\
    \"\n  local o=\"\"\n  local p=\"\"\n  local q=\"\"\n  local r=\"\"\n  local s=\"\
    \"\n  local t=\"\"\n  local u=\"\"\n  local v=\"\"\n  local w=\"\"\n  local x=\"\
    \"\n  local y=\"\"\n  local z=\"\"\n  local a=\"\"\n  local b=\"\"\n  local c=\"\
    \"\n  local d=\"\"\n  local e=\"\"\n  local f=\"\"\n  local g=\"\"\n  local h=\"\
    \"\n  local i=\"\"\n  local j=\"\"\n  local k=\"\"\n  local l=\"\"\n  local m=\"\
    \"\n  local n=\"\"\n  local o=\"\"\n  local p=\"\"\n  local q=\"\"\n  local r=\"\
    \"\n  local s=\"\"\n  local t=\"\"\n  local u=\"\"\n  local v=\"\"\n  local w=\"\
    \"\n  local x=\"\"\n  local y=\"\"\n  local z=\"\"\n  local a=\"\"\n  local b=\"\
    \"\n  local c=\"\"\n  local d=\"\"\n  local e=\"\"\n  local f=\"\"\n  local g=\"\
    \"\n  local h=\"\"\n  local i=\"\"\n  local j=\"\"\n  local k=\"\"\n  local l=\"\
    \"\n  local m=\"\"\n  local n=\"\"\n  local o=\"\"\n  local p=\"\"\n  local q=\"\
    \"\n  local r=\"\"\n  local s=\"\"\n  local t=\"\"\n  local u=\"\"\n  local v=\"\
    \"\n  local w=\"\"\n  local x=\"\"\n  local y=\"\"\n  local z=\"\"\n  local a=\"\
    \"\n  local b=\"\"\n  local c=\"\"\n  local d=\"\"\n  local e=\"\"\n  local f=\"\
    \"\n  local g=\"\"\n  local h=\"\"\n  local i=\"\"\n  local j=\"\"\n  local k=\"\
    \"\n  local l=\"\"\n  local m=\"\"\n  local n=\"\"\n  local o=\"\"\n  local p=\"\
    \"\n  local q=\"\"\n  local r=\"\"\n  local s=\"\"\n  local t=\"\"\n  local u=\"\
    \"\n  local v=\"\"\n  local w=\"\"\n  local x=\"\"\n  local y=\"\"\n  local z=\"\
    \"\n}\n\ncandidate() {\n    strange_sort_list \"$@\"\n}\n\nset -e\nrun_test()\
    \ {\n    [[ $(candidate \"1 2 3 4\") = \"1 4 2 3\" ]]\n    [[ $(candidate \"5\
    \ 6 7 8 9\") = \"5 9 6 8 7\" ]]\n    [[ $(candidate \"1 2 3 4 5\") = \"1 5 2 4\
    \ 3\" ]]\n    [[ $(candidate \"5 6 7 8 9 1\") = \"1 9 5 8 6 7\" ]]\n    [[ $(candidate\
    \ \"5 5 5 5\") = \"5 5 5 5\" ]]\n    [[ $(candidate \"\") = \"\" ]]\n    [[ $(candidate\
    \ \"1 2 3 4 5 6 7 8\") = \"1 8 2 7 3 6 4 5\" ]]\n    [[ $(candidate \"0 2 2 2\
    \ 5 5 -5 -5\") = \"-5 5 -5 5 0 2 2 2\" ]]\n    [[ $(candidate \"111111\") = \"\
    111111\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660003084
- exit_code: 1
  program: "#!/bin/bash\n# Given list of integers, return list in strange order.\n\
    # Strange sorting, is when you start with the minimum value,\n# then maximum of\
    \ the remaining integers, then minimum and so on.\n# Examples:\n#\n# $1 is a space-separated\
    \ list\nstrange_sort_list() {\n  local list=($1)\n  local sorted_list=()\n  local\
    \ min=${list[0]}\n  local max=${list[0]}\n  local min_index=0\n  local max_index=0\n\
    \  local i=0\n  local j=0\n  local k=0\n  local l=0\n  local m=0\n  local n=0\n\
    \  local o=0\n  local p=0\n  local q=0\n  local r=0\n  local s=0\n  local t=0\n\
    \  local u=0\n  local v=0\n  local w=0\n  local x=0\n  local y=0\n  local z=0\n\
    \  local aa=0\n  local bb=0\n  local cc=0\n  local dd=0\n  local ee=0\n  local\
    \ ff=0\n  local gg=0\n  local hh=0\n  local ii=0\n  local jj=0\n  local kk=0\n\
    \  local ll=0\n  local mm=0\n  local nn=0\n  local oo=0\n  local pp=0\n  local\
    \ qq=0\n  local rr=0\n  local ss=0\n  local tt=0\n  local uu=0\n  local vv=0\n\
    \  local ww=0\n  local xx=0\n  local yy=0\n  local zz=0\n  local aaa=0\n  local\
    \ bbb=0\n  local ccc=0\n  local ddd=0\n  local eee=0\n  local fff=0\n  local ggg=0\n\
    \  local hhh=0\n  local iii=0\n  local jjj=0\n  local kkk=0\n  local lll=0\n \
    \ local mmm=0\n  local nnn=0\n  local ooo=0\n  local ppp=0\n  local qqq=0\n  local\
    \ rrr=0\n  local sss=0\n  local ttt=0\n  local uuu=0\n  local vvv=0\n  local www=0\n\
    \  local xxx=0\n  local yyy=0\n  local zzz=\n}\n\ncandidate() {\n    strange_sort_list\
    \ \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"1 2 3 4\") = \"1 4 2\
    \ 3\" ]]\n    [[ $(candidate \"5 6 7 8 9\") = \"5 9 6 8 7\" ]]\n    [[ $(candidate\
    \ \"1 2 3 4 5\") = \"1 5 2 4 3\" ]]\n    [[ $(candidate \"5 6 7 8 9 1\") = \"\
    1 9 5 8 6 7\" ]]\n    [[ $(candidate \"5 5 5 5\") = \"5 5 5 5\" ]]\n    [[ $(candidate\
    \ \"\") = \"\" ]]\n    [[ $(candidate \"1 2 3 4 5 6 7 8\") = \"1 8 2 7 3 6 4 5\"\
    \ ]]\n    [[ $(candidate \"0 2 2 2 5 5 -5 -5\") = \"-5 5 -5 5 0 2 2 2\" ]]\n \
    \   [[ $(candidate \"111111\") = \"111111\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660003084
- exit_code: 1
  program: "#!/bin/bash\n# Given list of integers, return list in strange order.\n\
    # Strange sorting, is when you start with the minimum value,\n# then maximum of\
    \ the remaining integers, then minimum and so on.\n# Examples:\n#\n# $1 is a space-separated\
    \ list\nstrange_sort_list() {\n  local -a list=($1)\n  local -a result=()\n  local\
    \ -a min=()\n  local -a max=()\n  local -a remaining=()\n  local -a tmp=()\n \
    \ local i=0\n  local j=0\n  local k=0\n  local l=0\n  local m=0\n  local n=0\n\
    \  local o=0\n  local p=0\n  local q=0\n  local r=0\n  local s=0\n  local t=0\n\
    \  local u=0\n  local v=0\n  local w=0\n  local x=0\n  local y=0\n  local z=0\n\
    \  local aa=0\n  local bb=0\n  local cc=0\n  local dd=0\n  local ee=0\n  local\
    \ ff=0\n  local gg=0\n  local hh=0\n  local ii=0\n  local jj=0\n  local kk=0\n\
    \  local ll=0\n  local mm=0\n  local nn=0\n  local oo=0\n  local pp=0\n  local\
    \ qq=0\n  local rr=0\n  local ss=0\n  local tt=0\n  local uu=0\n  local vv=0\n\
    \  local ww=0\n  local xx=0\n  local yy=0\n  local zz=0\n  local aaa=0\n  local\
    \ bbb=0\n  local ccc=0\n  local ddd=0\n  local eee=0\n  local fff=0\n  local ggg=0\n\
    \  local hhh=0\n  local iii=0\n  local jjj=0\n  local kkk=0\n  local lll=0\n \
    \ local mmm=0\n  local nnn=0\n  local ooo=0\n  local ppp=0\n  local qqq=0\n  local\
    \ rrr=0\n  local sss=0\n  local ttt=0\n  local uuu=0\n  local vvv=0\n  local www=0\n\
    \  local xxx=0\n  local yyy=0\n  local zzz=0\n\n}\n\ncandidate() {\n    strange_sort_list\
    \ \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"1 2 3 4\") = \"1 4 2\
    \ 3\" ]]\n    [[ $(candidate \"5 6 7 8 9\") = \"5 9 6 8 7\" ]]\n    [[ $(candidate\
    \ \"1 2 3 4 5\") = \"1 5 2 4 3\" ]]\n    [[ $(candidate \"5 6 7 8 9 1\") = \"\
    1 9 5 8 6 7\" ]]\n    [[ $(candidate \"5 5 5 5\") = \"5 5 5 5\" ]]\n    [[ $(candidate\
    \ \"\") = \"\" ]]\n    [[ $(candidate \"1 2 3 4 5 6 7 8\") = \"1 8 2 7 3 6 4 5\"\
    \ ]]\n    [[ $(candidate \"0 2 2 2 5 5 -5 -5\") = \"-5 5 -5 5 0 2 2 2\" ]]\n \
    \   [[ $(candidate \"111111\") = \"111111\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660003084
- exit_code: 1
  program: "#!/bin/bash\n# Given list of integers, return list in strange order.\n\
    # Strange sorting, is when you start with the minimum value,\n# then maximum of\
    \ the remaining integers, then minimum and so on.\n# Examples:\n#\n# $1 is a space-separated\
    \ list\nstrange_sort_list() {\n  local list=$1\n  local min=$(echo \"$list\" |\
    \ tr ' ' '\\n' | sort -n | head -n 1)\n  local max=$(echo \"$list\" | tr ' ' '\\\
    n' | sort -n | tail -n 1)\n  local min_list=$(echo \"$list\" | tr ' ' '\\n' |\
    \ sort -n | grep -v \"$max\")\n  local max_list=$(echo \"$list\" | tr ' ' '\\\
    n' | sort -n | grep -v \"$min\")\n  local result=\"\"\n  local i=0\n  while [\
    \ $i -lt $(echo \"$list\" | wc -w) ]; do\n    if [ $((i % 2)) -eq 0 ]; then\n\
    \      result=\"$result $min\"\n      min=$(echo \"$min_list\" | head -n 1)\n\
    \      min_list=$(echo \"$min_list\" | tail -n +2)\n    else\n      result=\"\
    $result $max\"\n      max=$(echo \"$max_list\" | tail -n 1)\n      max_list=$(echo\
    \ \"$max_list\" | head -n -1)\n    fi\n    i=$((i + 1))\n  done\n  echo \"$result\"\
    \ | tr -d ' '\n}\n\ncandidate() {\n    strange_sort_list \"$@\"\n}\n\nset -e\n\
    run_test() {\n    [[ $(candidate \"1 2 3 4\") = \"1 4 2 3\" ]]\n    [[ $(candidate\
    \ \"5 6 7 8 9\") = \"5 9 6 8 7\" ]]\n    [[ $(candidate \"1 2 3 4 5\") = \"1 5\
    \ 2 4 3\" ]]\n    [[ $(candidate \"5 6 7 8 9 1\") = \"1 9 5 8 6 7\" ]]\n    [[\
    \ $(candidate \"5 5 5 5\") = \"5 5 5 5\" ]]\n    [[ $(candidate \"\") = \"\" ]]\n\
    \    [[ $(candidate \"1 2 3 4 5 6 7 8\") = \"1 8 2 7 3 6 4 5\" ]]\n    [[ $(candidate\
    \ \"0 2 2 2 5 5 -5 -5\") = \"-5 5 -5 5 0 2 2 2\" ]]\n    [[ $(candidate \"111111\"\
    ) = \"111111\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660003084
- exit_code: 1
  program: "#!/bin/bash\n# Given list of integers, return list in strange order.\n\
    # Strange sorting, is when you start with the minimum value,\n# then maximum of\
    \ the remaining integers, then minimum and so on.\n# Examples:\n#\n# $1 is a space-separated\
    \ list\nstrange_sort_list() {\n    local list=($1)\n    local result=()\n    local\
    \ i=0\n    local j=0\n    local k=0\n    local min=0\n    local max=0\n    local\
    \ min_index=0\n    local max_index=0\n    local min_found=0\n    local max_found=0\n\
    \    local list_length=${#list[@]}\n    local list_length_half=$((list_length\
    \ / 2))\n    local list_length_half_plus_one=$((list_length_half + 1))\n    local\
    \ list_length_minus_one=$((list_length - 1))\n    local list_length_minus_two=$((list_length\
    \ - 2))\n    local list_length_minus_three=$((list_length - 3))\n    local list_length_minus_four=$((list_length\
    \ - 4))\n    local list_length_minus_five=$((list_length - 5))\n    local list_length_minus_six=$((list_length\
    \ - 6))\n    local list_length_minus_seven=$((list_length - 7))\n    local list_length_minus_eight=$((list_length\
    \ - 8))\n    local list_length_minus_nine=$((list_length - 9))\n    local list_length_minus_ten=$((list_length\
    \ - 10))\n    local list_length_minus_eleven=$((list_length - 11))\n    local\
    \ list_length_minus_twelve=$((list_length - 12))\n    local list_length_minus_thirteen=$((list_length\
    \ - 13))\n    local list_length_minus_fourteen=$((list_length - 14))\n    local\
    \ list_length_minus_fifteen=$((list_length - 15))\n    local list_length_minus_sixteen=$((list_length\
    \ - 16))\n    local list_length_minus_seventeen=$((list_length - 17))\n    local\
    \ list_length_minus_eighteen=$((list_length - 18))\n    local list_length_minus_nineteen=$((list_length\
    \ - 19))\n    local list_length_minus_twenty=$((list_length - 20))\n    local\
    \ list_length_minus_twenty_one=$\n}\n\ncandidate() {\n    strange_sort_list \"\
    $@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"1 2 3 4\") = \"1 4 2 3\"\
    \ ]]\n    [[ $(candidate \"5 6 7 8 9\") = \"5 9 6 8 7\" ]]\n    [[ $(candidate\
    \ \"1 2 3 4 5\") = \"1 5 2 4 3\" ]]\n    [[ $(candidate \"5 6 7 8 9 1\") = \"\
    1 9 5 8 6 7\" ]]\n    [[ $(candidate \"5 5 5 5\") = \"5 5 5 5\" ]]\n    [[ $(candidate\
    \ \"\") = \"\" ]]\n    [[ $(candidate \"1 2 3 4 5 6 7 8\") = \"1 8 2 7 3 6 4 5\"\
    \ ]]\n    [[ $(candidate \"0 2 2 2 5 5 -5 -5\") = \"-5 5 -5 5 0 2 2 2\" ]]\n \
    \   [[ $(candidate \"111111\") = \"111111\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660003084
- exit_code: 1
  program: "#!/bin/bash\n# Given list of integers, return list in strange order.\n\
    # Strange sorting, is when you start with the minimum value,\n# then maximum of\
    \ the remaining integers, then minimum and so on.\n# Examples:\n#\n# $1 is a space-separated\
    \ list\nstrange_sort_list() {\n    local list=($1)\n    local result=()\n    local\
    \ i=0\n    local j=0\n    local min=0\n    local max=0\n    local min_index=0\n\
    \    local max_index=0\n    local length=${#list[@]}\n    for ((i=0; i<length;\
    \ i++)); do\n        min=${list[0]}\n        max=${list[0]}\n        for ((j=0;\
    \ j<length; j++)); do\n            if [ ${list[j]} -lt $min ]; then\n        \
    \        min=${list[j]}\n                min_index=$j\n            fi\n      \
    \      if [ ${list[j]} -gt $max ]; then\n                max=${list[j]}\n    \
    \            max_index=$j\n            fi\n        done\n        if [ $((i%2))\
    \ -eq 0 ]; then\n            result[$i]=$min\n            list[$min_index]=$max\n\
    \        else\n            result[$i]=$max\n            list[$max_index]=$min\n\
    \        fi\n    done\n    echo ${result[@]}\n}\n\ncandidate() {\n    strange_sort_list\
    \ \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"1 2 3 4\") = \"1 4 2\
    \ 3\" ]]\n    [[ $(candidate \"5 6 7 8 9\") = \"5 9 6 8 7\" ]]\n    [[ $(candidate\
    \ \"1 2 3 4 5\") = \"1 5 2 4 3\" ]]\n    [[ $(candidate \"5 6 7 8 9 1\") = \"\
    1 9 5 8 6 7\" ]]\n    [[ $(candidate \"5 5 5 5\") = \"5 5 5 5\" ]]\n    [[ $(candidate\
    \ \"\") = \"\" ]]\n    [[ $(candidate \"1 2 3 4 5 6 7 8\") = \"1 8 2 7 3 6 4 5\"\
    \ ]]\n    [[ $(candidate \"0 2 2 2 5 5 -5 -5\") = \"-5 5 -5 5 0 2 2 2\" ]]\n \
    \   [[ $(candidate \"111111\") = \"111111\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660003084
- exit_code: 1
  program: "#!/bin/bash\n# Given list of integers, return list in strange order.\n\
    # Strange sorting, is when you start with the minimum value,\n# then maximum of\
    \ the remaining integers, then minimum and so on.\n# Examples:\n#\n# $1 is a space-separated\
    \ list\nstrange_sort_list() {\n    local list=($1)\n    local sorted=()\n    local\
    \ min=${list[0]}\n    local max=${list[0]}\n    local min_index=0\n    local max_index=0\n\
    \    local i=0\n    local j=0\n    local k=0\n    local l=0\n    local temp=0\n\
    \    local temp_index=0\n    local temp_list=()\n    local temp_list_index=()\n\
    \    local temp_list_index_index=0\n    local temp_list_index_index_index=0\n\
    \    local temp_list_index_index_index_index=0\n    local temp_list_index_index_index_index_index=0\n\
    \    local temp_list_index_index_index_index_index_index=0\n    local temp_list_index_index_index_index_index_index_index=0\n\
    \    local temp_list_index_index_index_index_index_index_index_index=0\n    local\
    \ temp_list_index_index_index_index_index_index_index_index_index=0\n    local\
    \ temp_list_index_index_index_index_index_index_index_index_index_index=0\n  \
    \  local temp_list_index_index_index_index_index_index_index_index_index_index_index=0\n\
    \    local temp_list_index_index_index_index_index_index_index_index_index_index_index_index=0\n\
    \    local temp_list_index_index_index_index_index_index_index_index_index_index_index_index_index=0\n\
    \    local temp_list_index_index_index_index_index_index_index_index_index_index_index_index_index_index=0\n\
    \    local temp_list_index_index_index_index_index_index_index_index_index_index_index_index_index_index_index=0\n\
    \    local temp_list_index_index_index_index_index_index_index_index_index_index_index_index_index_index_index_index=0\n\
    \    local temp_list_index_index_index_index_index\n}\n\ncandidate() {\n    strange_sort_list\
    \ \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"1 2 3 4\") = \"1 4 2\
    \ 3\" ]]\n    [[ $(candidate \"5 6 7 8 9\") = \"5 9 6 8 7\" ]]\n    [[ $(candidate\
    \ \"1 2 3 4 5\") = \"1 5 2 4 3\" ]]\n    [[ $(candidate \"5 6 7 8 9 1\") = \"\
    1 9 5 8 6 7\" ]]\n    [[ $(candidate \"5 5 5 5\") = \"5 5 5 5\" ]]\n    [[ $(candidate\
    \ \"\") = \"\" ]]\n    [[ $(candidate \"1 2 3 4 5 6 7 8\") = \"1 8 2 7 3 6 4 5\"\
    \ ]]\n    [[ $(candidate \"0 2 2 2 5 5 -5 -5\") = \"-5 5 -5 5 0 2 2 2\" ]]\n \
    \   [[ $(candidate \"111111\") = \"111111\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660003084
- exit_code: 1
  program: "#!/bin/bash\n# Given list of integers, return list in strange order.\n\
    # Strange sorting, is when you start with the minimum value,\n# then maximum of\
    \ the remaining integers, then minimum and so on.\n# Examples:\n#\n# $1 is a space-separated\
    \ list\nstrange_sort_list() {\n  local list=\"$1\"\n  local result=\"\"\n  local\
    \ min\n  local max\n  local i\n  local j\n  local k\n  local l\n  local m\n  local\
    \ n\n  local o\n  local p\n  local q\n  local r\n  local s\n  local t\n  local\
    \ u\n  local v\n  local w\n  local x\n  local y\n  local z\n  local aa\n  local\
    \ bb\n  local cc\n  local dd\n  local ee\n  local ff\n  local gg\n  local hh\n\
    \  local ii\n  local jj\n  local kk\n  local ll\n  local mm\n  local nn\n  local\
    \ oo\n  local pp\n  local qq\n  local rr\n  local ss\n  local tt\n  local uu\n\
    \  local vv\n  local ww\n  local xx\n  local yy\n  local zz\n  local aaa\n  local\
    \ bbb\n  local ccc\n  local ddd\n  local eee\n  local fff\n  local ggg\n  local\
    \ hhh\n  local iii\n  local jjj\n  local kkk\n  local lll\n  local mmm\n  local\
    \ nnn\n  local ooo\n  local ppp\n  local qqq\n  local rrr\n  local sss\n  local\
    \ ttt\n  local uuu\n  local vvv\n  local www\n  local xxx\n  local yyy\n  local\
    \ zzz\n  local aaaa\n  local bbbb\n  local cccc\n  local dddd\n  local eeee\n\
    \  local ffff\n  local gggg\n  local hhhh\n  local iiii\n  local jjjj\n  local\
    \ kkkk\n  local llll\n  local mmmm\n  local nnnn\n  local oooo\n  local pppp\n\
    \  local qqqq\n  local rrrr\n  local ssss\n  local tttt\n  local uuuu\n  local\
    \ vvvv\n  local wwww\n  local xxxx\n  local yyyy\n  local zzzz\n  local aaaaa\n\
    \  local bbbbb\n  local ccccc\n  local ddddd\n}\n\ncandidate() {\n    strange_sort_list\
    \ \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"1 2 3 4\") = \"1 4 2\
    \ 3\" ]]\n    [[ $(candidate \"5 6 7 8 9\") = \"5 9 6 8 7\" ]]\n    [[ $(candidate\
    \ \"1 2 3 4 5\") = \"1 5 2 4 3\" ]]\n    [[ $(candidate \"5 6 7 8 9 1\") = \"\
    1 9 5 8 6 7\" ]]\n    [[ $(candidate \"5 5 5 5\") = \"5 5 5 5\" ]]\n    [[ $(candidate\
    \ \"\") = \"\" ]]\n    [[ $(candidate \"1 2 3 4 5 6 7 8\") = \"1 8 2 7 3 6 4 5\"\
    \ ]]\n    [[ $(candidate \"0 2 2 2 5 5 -5 -5\") = \"-5 5 -5 5 0 2 2 2\" ]]\n \
    \   [[ $(candidate \"111111\") = \"111111\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660003084
- exit_code: 1
  program: "#!/bin/bash\n# Given list of integers, return list in strange order.\n\
    # Strange sorting, is when you start with the minimum value,\n# then maximum of\
    \ the remaining integers, then minimum and so on.\n# Examples:\n#\n# $1 is a space-separated\
    \ list\nstrange_sort_list() {\n  local list=\"$1\"\n  local sorted_list=\"\"\n\
    \  local min=0\n  local max=0\n  local min_index=0\n  local max_index=0\n  local\
    \ i=0\n  local j=0\n  local tmp=0\n  local list_length=0\n  local list_length_minus_one=0\n\
    \  local list_length_minus_two=0\n  local list_length_minus_three=0\n  local list_length_minus_four=0\n\
    \  local list_length_minus_five=0\n  local list_length_minus_six=0\n  local list_length_minus_seven=0\n\
    \  local list_length_minus_eight=0\n  local list_length_minus_nine=0\n  local\
    \ list_length_minus_ten=0\n  local list_length_minus_eleven=0\n  local list_length_minus_twelve=0\n\
    \  local list_length_minus_thirteen=0\n  local list_length_minus_fourteen=0\n\
    \  local list_length_minus_fifteen=0\n  local list_length_minus_sixteen=0\n  local\
    \ list_length_minus_seventeen=0\n  local list_length_minus_eighteen=0\n  local\
    \ list_length_minus_nineteen=0\n  local list_length_minus_twenty=0\n  local list_length_minus_twenty_one=0\n\
    \  local list_length_minus_twenty_two=0\n  local list_length_minus_twenty_three=0\n\
    \  local list_length_minus_twenty_four=0\n  local list_length_minus_twenty_five=0\n\
    \  local list_length_minus_twenty_six=0\n  local list_length_minus_twenty_seven=0\n\
    \  local list_length_minus_twenty_eight=0\n  local list_length_minus_twenty_nine=0\n\
    \  local list_length_minus_thirty=0\n  local list_length_minus_thirty_one=0\n\
    \  local list_length_minus_thirty_two=0\n  local list_length_minus_thirty_three=\n\
    }\n\ncandidate() {\n    strange_sort_list \"$@\"\n}\n\nset -e\nrun_test() {\n\
    \    [[ $(candidate \"1 2 3 4\") = \"1 4 2 3\" ]]\n    [[ $(candidate \"5 6 7\
    \ 8 9\") = \"5 9 6 8 7\" ]]\n    [[ $(candidate \"1 2 3 4 5\") = \"1 5 2 4 3\"\
    \ ]]\n    [[ $(candidate \"5 6 7 8 9 1\") = \"1 9 5 8 6 7\" ]]\n    [[ $(candidate\
    \ \"5 5 5 5\") = \"5 5 5 5\" ]]\n    [[ $(candidate \"\") = \"\" ]]\n    [[ $(candidate\
    \ \"1 2 3 4 5 6 7 8\") = \"1 8 2 7 3 6 4 5\" ]]\n    [[ $(candidate \"0 2 2 2\
    \ 5 5 -5 -5\") = \"-5 5 -5 5 0 2 2 2\" ]]\n    [[ $(candidate \"111111\") = \"\
    111111\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660003084
- exit_code: 1
  program: "#!/bin/bash\n# Given list of integers, return list in strange order.\n\
    # Strange sorting, is when you start with the minimum value,\n# then maximum of\
    \ the remaining integers, then minimum and so on.\n# Examples:\n#\n# $1 is a space-separated\
    \ list\nstrange_sort_list() {\n    local -a list=($1)\n    local -a result=()\n\
    \    local -i i=0\n    local -i j=0\n    local -i k=0\n    local -i n=${#list[@]}\n\
    \    local -i m=0\n    local -i min=0\n    local -i max=0\n    local -i min_index=0\n\
    \    local -i max_index=0\n    local -i min_found=0\n    local -i max_found=0\n\
    \    local -i min_removed=0\n    local -i max_removed=0\n    local -i min_removed_index=0\n\
    \    local -i max_removed_index=0\n    local -i min_removed_found=0\n    local\
    \ -i max_removed_found=0\n    local -i min_removed_index_found=0\n    local -i\
    \ max_removed_index_found=0\n    local -i min_removed_index_removed=0\n    local\
    \ -i max_removed_index_removed=0\n    local -i min_removed_index_removed_found=0\n\
    \    local -i max_removed_index_removed_found=0\n    local -i min_removed_index_removed_index=0\n\
    \    local -i max_removed_index_removed_index=0\n    local -i min_removed_index_removed_index_found=0\n\
    \    local -i max_removed_index_removed_index_found=0\n    local -i min_removed_index_removed_index_removed=0\n\
    \    local -i max_removed_index_removed_index_removed=0\n    local -i min_removed_index_removed_index_removed_found=0\n\
    \    local -i max_removed_index_removed_index_removed_found=0\n    local -i min_removed_index_removed_index_removed_index=0\n\
    \    local -i max_removed_index_removed_index_removed_index=0\n    local -i min_removed_index\n\
    }\n\ncandidate() {\n    strange_sort_list \"$@\"\n}\n\nset -e\nrun_test() {\n\
    \    [[ $(candidate \"1 2 3 4\") = \"1 4 2 3\" ]]\n    [[ $(candidate \"5 6 7\
    \ 8 9\") = \"5 9 6 8 7\" ]]\n    [[ $(candidate \"1 2 3 4 5\") = \"1 5 2 4 3\"\
    \ ]]\n    [[ $(candidate \"5 6 7 8 9 1\") = \"1 9 5 8 6 7\" ]]\n    [[ $(candidate\
    \ \"5 5 5 5\") = \"5 5 5 5\" ]]\n    [[ $(candidate \"\") = \"\" ]]\n    [[ $(candidate\
    \ \"1 2 3 4 5 6 7 8\") = \"1 8 2 7 3 6 4 5\" ]]\n    [[ $(candidate \"0 2 2 2\
    \ 5 5 -5 -5\") = \"-5 5 -5 5 0 2 2 2\" ]]\n    [[ $(candidate \"111111\") = \"\
    111111\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660003084
- exit_code: 1
  program: "#!/bin/bash\n# Given list of integers, return list in strange order.\n\
    # Strange sorting, is when you start with the minimum value,\n# then maximum of\
    \ the remaining integers, then minimum and so on.\n# Examples:\n#\n# $1 is a space-separated\
    \ list\nstrange_sort_list() {\n    local -a list=($1)\n    local -a sorted=()\n\
    \    local -a remaining=()\n    local min=${list[0]}\n    local max=${list[0]}\n\
    \    local i=0\n    local j=0\n    local k=0\n    local l=0\n    local m=0\n \
    \   local n=0\n    local o=0\n    local p=0\n    local q=0\n    local r=0\n  \
    \  local s=0\n    local t=0\n    local u=0\n    local v=0\n    local w=0\n   \
    \ local x=0\n    local y=0\n    local z=0\n    local aa=0\n    local bb=0\n  \
    \  local cc=0\n    local dd=0\n    local ee=0\n    local ff=0\n    local gg=0\n\
    \    local hh=0\n    local ii=0\n    local jj=0\n    local kk=0\n    local ll=0\n\
    \    local mm=0\n    local nn=0\n    local oo=0\n    local pp=0\n    local qq=0\n\
    \    local rr=0\n    local ss=0\n    local tt=0\n    local uu=0\n    local vv=0\n\
    \    local ww=0\n    local xx=0\n    local yy=0\n    local zz=0\n    local aaa=0\n\
    \    local bbb=0\n    local ccc=0\n    local ddd=0\n    local eee=0\n    local\
    \ fff=0\n    local ggg=0\n    local hhh=0\n    local iii=0\n    local jjj=0\n\
    \    local kkk=0\n    local lll=0\n    local mmm=0\n    local nnn=0\n    local\
    \ ooo=0\n    local ppp=0\n    local qqq=0\n    local rrr=0\n    local sss=0\n\
    \    local ttt=0\n    local uuu=0\n    local vvv=0\n    local www=0\n    local\
    \ xxx=0\n    local yyy=0\n    local zzz=0\n    local aaaa\n}\n\ncandidate() {\n\
    \    strange_sort_list \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"\
    1 2 3 4\") = \"1 4 2 3\" ]]\n    [[ $(candidate \"5 6 7 8 9\") = \"5 9 6 8 7\"\
    \ ]]\n    [[ $(candidate \"1 2 3 4 5\") = \"1 5 2 4 3\" ]]\n    [[ $(candidate\
    \ \"5 6 7 8 9 1\") = \"1 9 5 8 6 7\" ]]\n    [[ $(candidate \"5 5 5 5\") = \"\
    5 5 5 5\" ]]\n    [[ $(candidate \"\") = \"\" ]]\n    [[ $(candidate \"1 2 3 4\
    \ 5 6 7 8\") = \"1 8 2 7 3 6 4 5\" ]]\n    [[ $(candidate \"0 2 2 2 5 5 -5 -5\"\
    ) = \"-5 5 -5 5 0 2 2 2\" ]]\n    [[ $(candidate \"111111\") = \"111111\" ]]\n\
    }\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660003084
- exit_code: 1
  program: "#!/bin/bash\n# Given list of integers, return list in strange order.\n\
    # Strange sorting, is when you start with the minimum value,\n# then maximum of\
    \ the remaining integers, then minimum and so on.\n# Examples:\n#\n# $1 is a space-separated\
    \ list\nstrange_sort_list() {\n  local list=$1\n  local sorted_list=()\n  local\
    \ sorted_list_len=0\n  local min=0\n  local max=0\n  local min_index=0\n  local\
    \ max_index=0\n  local i=0\n  local j=0\n  local k=0\n  local tmp=0\n\n  # Find\
    \ min and max\n  min=${list[0]}\n  max=${list[0]}\n  for i in ${list[@]}; do\n\
    \    if [[ $i -lt $min ]]; then\n      min=$i\n    fi\n    if [[ $i -gt $max ]];\
    \ then\n      max=$i\n    fi\n  done\n\n  # Find min and max indexes\n  for i\
    \ in ${!list[@]}; do\n    if [[ ${list[$i]} -eq $min ]]; then\n      min_index=$i\n\
    \    fi\n    if [[ ${list[$i]} -eq $max ]]; then\n      max_index=$i\n    fi\n\
    \  done\n\n  # Remove min and max from list\n  unset list[$min_index]\n  unset\
    \ list[$max_index]\n\n  # Sort list\n  sorted_list=($min $max)\n  sorted_list_len=${#sorted_list[@]}\n\
    \  for ((i=0; i<${#list[@]}; i++)); do\n    if [[ $((i % 2)) -eq 0 ]]; then\n\
    \      sorted_list[$sorted_list_len]=${list[$i]}\n    else\n      sorted_list=(${sorted_list[@]}\
    \ ${list[$i]})\n    fi\n    sorted_list_len=${#sorted_list[@]}\n  done\n\n  #\
    \ Print sorted list\n  for i in ${sorted_list[@]}; do\n    echo $i\n  done\n}\n\
    \ncandidate() {\n    strange_sort_list \"$@\"\n}\n\nset -e\nrun_test() {\n   \
    \ [[ $(candidate \"1 2 3 4\") = \"1 4 2 3\" ]]\n    [[ $(candidate \"5 6 7 8 9\"\
    ) = \"5 9 6 8 7\" ]]\n    [[ $(candidate \"1 2 3 4 5\") = \"1 5 2 4 3\" ]]\n \
    \   [[ $(candidate \"5 6 7 8 9 1\") = \"1 9 5 8 6 7\" ]]\n    [[ $(candidate \"\
    5 5 5 5\") = \"5 5 5 5\" ]]\n    [[ $(candidate \"\") = \"\" ]]\n    [[ $(candidate\
    \ \"1 2 3 4 5 6 7 8\") = \"1 8 2 7 3 6 4 5\" ]]\n    [[ $(candidate \"0 2 2 2\
    \ 5 5 -5 -5\") = \"-5 5 -5 5 0 2 2 2\" ]]\n    [[ $(candidate \"111111\") = \"\
    111111\" ]]\n}\n\nrun_test"
  status: SyntaxError
  stderr: '/tmp/tmp9j333kah.sh: line 25: [[: 1 2 3 4: syntax error in expression (error
    token is "2 3 4")

    /tmp/tmp9j333kah.sh: line 28: [[: 1 2 3 4: syntax error in expression (error token
    is "2 3 4")

    /tmp/tmp9j333kah.sh: line 25: [[: 1 2 3 4: syntax error in expression (error token
    is "2 3 4")

    /tmp/tmp9j333kah.sh: line 28: [[: 1 2 3 4: syntax error in expression (error token
    is "2 3 4")

    /tmp/tmp9j333kah.sh: line 25: [[: 1 2 3 4: syntax error in expression (error token
    is "2 3 4")

    /tmp/tmp9j333kah.sh: line 28: [[: 1 2 3 4: syntax error in expression (error token
    is "2 3 4")

    /tmp/tmp9j333kah.sh: line 25: [[: 1 2 3 4: syntax error in expression (error token
    is "2 3 4")

    /tmp/tmp9j333kah.sh: line 28: [[: 1 2 3 4: syntax error in expression (error token
    is "2 3 4")

    /tmp/tmp9j333kah.sh: line 35: [[: 1 2 3 4: syntax error in expression (error token
    is "2 3 4")

    /tmp/tmp9j333kah.sh: line 38: [[: 1 2 3 4: syntax error in expression (error token
    is "2 3 4")

    '
  stdout: ''
  timestamp: 1660003084
- exit_code: 1
  program: "#!/bin/bash\n# Given list of integers, return list in strange order.\n\
    # Strange sorting, is when you start with the minimum value,\n# then maximum of\
    \ the remaining integers, then minimum and so on.\n# Examples:\n#\n# $1 is a space-separated\
    \ list\nstrange_sort_list() {\n  local list=($1)\n  local result=()\n  local min=${list[0]}\n\
    \  local max=${list[0]}\n  local min_index=0\n  local max_index=0\n  local i=0\n\
    \  local j=0\n  local k=0\n  local l=0\n  local m=0\n  local n=0\n  local o=0\n\
    \  local p=0\n  local q=0\n  local r=0\n  local s=0\n  local t=0\n  local u=0\n\
    \  local v=0\n  local w=0\n  local x=0\n  local y=0\n  local z=0\n  local aa=0\n\
    \  local bb=0\n  local cc=0\n  local dd=0\n  local ee=0\n  local ff=0\n  local\
    \ gg=0\n  local hh=0\n  local ii=0\n  local jj=0\n  local kk=0\n  local ll=0\n\
    \  local mm=0\n  local nn=0\n  local oo=0\n  local pp=0\n  local qq=0\n  local\
    \ rr=0\n  local ss=0\n  local tt=0\n  local uu=0\n  local vv=0\n  local ww=0\n\
    \  local xx=0\n  local yy=0\n  local zz=0\n  local aaa=0\n  local bbb=0\n  local\
    \ ccc=0\n  local ddd=0\n  local eee=0\n  local fff=0\n  local ggg=0\n  local hhh=0\n\
    \  local iii=0\n  local jjj=0\n  local kkk=0\n  local lll=0\n  local mmm=0\n \
    \ local nnn=0\n  local ooo=0\n  local ppp=0\n  local qqq=0\n  local rrr=0\n  local\
    \ sss=0\n  local ttt=0\n  local uuu=0\n  local vvv=0\n  local www=0\n  local xxx=0\n\
    \  local yyy=0\n  local zzz=0\n\n}\n\ncandidate() {\n    strange_sort_list \"\
    $@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"1 2 3 4\") = \"1 4 2 3\"\
    \ ]]\n    [[ $(candidate \"5 6 7 8 9\") = \"5 9 6 8 7\" ]]\n    [[ $(candidate\
    \ \"1 2 3 4 5\") = \"1 5 2 4 3\" ]]\n    [[ $(candidate \"5 6 7 8 9 1\") = \"\
    1 9 5 8 6 7\" ]]\n    [[ $(candidate \"5 5 5 5\") = \"5 5 5 5\" ]]\n    [[ $(candidate\
    \ \"\") = \"\" ]]\n    [[ $(candidate \"1 2 3 4 5 6 7 8\") = \"1 8 2 7 3 6 4 5\"\
    \ ]]\n    [[ $(candidate \"0 2 2 2 5 5 -5 -5\") = \"-5 5 -5 5 0 2 2 2\" ]]\n \
    \   [[ $(candidate \"111111\") = \"111111\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660003084
- exit_code: 2
  program: "#!/bin/bash\n# Given list of integers, return list in strange order.\n\
    # Strange sorting, is when you start with the minimum value,\n# then maximum of\
    \ the remaining integers, then minimum and so on.\n# Examples:\n#\n# $1 is a space-separated\
    \ list\nstrange_sort_list() {\n  local -a list=($1)\n  local -a sorted_list=()\n\
    \  local -i i=0\n  local -i j=0\n  local -i list_len=${#list[@]}\n  local -i sorted_list_len=0\n\
    \  local -i min=0\n  local -i max=0\n  local -i min_index=0\n  local -i max_index=0\n\
    \  local -i min_max_flag=0\n  local -i min_max_index=0\n  local -i min_max_value=0\n\
    \n  for ((i=0; i<list_len; i++)); do\n    if [[ ${list[i]} -lt min ]]; then\n\
    \      min=${list[i]}\n      min_index=$i\n    fi\n    if [[ ${list[i]} -gt max\
    \ ]]; then\n      max=${list[i]}\n      max_index=$i\n    fi\n  done\n\n  sorted_list[sorted_list_len]=$min\n\
    \  ((sorted_list_len++))\n  list[min_index]=$max\n  list[max_index]=$min\n\n \
    \ while [[ $sorted_list_len -lt $list_len ]]; do\n    min_max_flag=0\n    min_max_index=0\n\
    \    min_max_value=0\n    for ((i=0; i<list_len; i++)); do\n      if [[ ${list[i]}\
    \ -lt min_max_value ]]; then\n        min_max_flag=1\n        min_max_index=$i\n\
    \        min_max_value=${list[i]}\n      fi\n      if [[ ${list[i]} -gt min_max_value\
    \ ]]; then\n        min_max_flag=2\n        min_max_index=$i\n        min_max_value=${list[i]}\n\
    \      fi\n    done\n    if [[ $min_max_flag -eq 1 ]]; then\n      sorted_list[sorted_list_len]=$min_max_value\n\
    \      ((sorted_list_len++))\n      list[min_max_index]=$max\n    fi\n    if [[\
    \ $min_\n}\n\ncandidate() {\n    strange_sort_list \"$@\"\n}\n\nset -e\nrun_test()\
    \ {\n    [[ $(candidate \"1 2 3 4\") = \"1 4 2 3\" ]]\n    [[ $(candidate \"5\
    \ 6 7 8 9\") = \"5 9 6 8 7\" ]]\n    [[ $(candidate \"1 2 3 4 5\") = \"1 5 2 4\
    \ 3\" ]]\n    [[ $(candidate \"5 6 7 8 9 1\") = \"1 9 5 8 6 7\" ]]\n    [[ $(candidate\
    \ \"5 5 5 5\") = \"5 5 5 5\" ]]\n    [[ $(candidate \"\") = \"\" ]]\n    [[ $(candidate\
    \ \"1 2 3 4 5 6 7 8\") = \"1 8 2 7 3 6 4 5\" ]]\n    [[ $(candidate \"0 2 2 2\
    \ 5 5 -5 -5\") = \"-5 5 -5 5 0 2 2 2\" ]]\n    [[ $(candidate \"111111\") = \"\
    111111\" ]]\n}\n\nrun_test"
  status: SyntaxError
  stderr: '/tmp/tmpvlbylq71.sh: line 60: unexpected token `newline'', conditional
    binary operator expected

    /tmp/tmpvlbylq71.sh: line 60: syntax error near `$min_''

    /tmp/tmpvlbylq71.sh: line 60: `    if [[ $min_''

    '
  stdout: ''
  timestamp: 1660003084
- exit_code: 1
  program: "#!/bin/bash\n# Given list of integers, return list in strange order.\n\
    # Strange sorting, is when you start with the minimum value,\n# then maximum of\
    \ the remaining integers, then minimum and so on.\n# Examples:\n#\n# $1 is a space-separated\
    \ list\nstrange_sort_list() {\n  local list=($1)\n  local length=${#list[@]}\n\
    \  local sorted=()\n  local i=0\n  local j=0\n  local k=0\n  local min=0\n  local\
    \ max=0\n  local min_index=0\n  local max_index=0\n  local min_found=0\n  local\
    \ max_found=0\n  local min_found_index=0\n  local max_found_index=0\n  local min_found_index_prev=0\n\
    \  local max_found_index_prev=0\n  local min_found_prev=0\n  local max_found_prev=0\n\
    \  local min_found_prev_prev=0\n  local max_found_prev_prev=0\n  local min_found_prev_prev_prev=0\n\
    \  local max_found_prev_prev_prev=0\n  local min_found_prev_prev_prev_prev=0\n\
    \  local max_found_prev_prev_prev_prev=0\n  local min_found_prev_prev_prev_prev_prev=0\n\
    \  local max_found_prev_prev_prev_prev_prev=0\n  local min_found_prev_prev_prev_prev_prev_prev=0\n\
    \  local max_found_prev_prev_prev_prev_prev_prev=0\n  local min_found_prev_prev_prev_prev_prev_prev_prev=0\n\
    \  local max_found_prev_prev_prev_prev_prev_prev_prev=0\n  local min_found_prev_prev_prev_prev_prev_prev_prev_prev=0\n\
    \  local max_found_prev_prev_prev_prev_prev_prev_prev_prev=0\n  local min_found_prev_prev_prev_prev_prev_prev_prev_prev_prev=0\n\
    \  local max_found_prev_prev_prev_prev_prev_prev_prev_prev_prev=0\n  local min_found_prev_prev_prev_prev_prev_prev_prev_prev_prev_prev=0\n\
    \  local max_found_prev_prev_prev_prev_prev_prev_prev_prev_prev_prev=0\n\n}\n\n\
    candidate() {\n    strange_sort_list \"$@\"\n}\n\nset -e\nrun_test() {\n    [[\
    \ $(candidate \"1 2 3 4\") = \"1 4 2 3\" ]]\n    [[ $(candidate \"5 6 7 8 9\"\
    ) = \"5 9 6 8 7\" ]]\n    [[ $(candidate \"1 2 3 4 5\") = \"1 5 2 4 3\" ]]\n \
    \   [[ $(candidate \"5 6 7 8 9 1\") = \"1 9 5 8 6 7\" ]]\n    [[ $(candidate \"\
    5 5 5 5\") = \"5 5 5 5\" ]]\n    [[ $(candidate \"\") = \"\" ]]\n    [[ $(candidate\
    \ \"1 2 3 4 5 6 7 8\") = \"1 8 2 7 3 6 4 5\" ]]\n    [[ $(candidate \"0 2 2 2\
    \ 5 5 -5 -5\") = \"-5 5 -5 5 0 2 2 2\" ]]\n    [[ $(candidate \"111111\") = \"\
    111111\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660003084
- exit_code: 1
  program: "#!/bin/bash\n# Given list of integers, return list in strange order.\n\
    # Strange sorting, is when you start with the minimum value,\n# then maximum of\
    \ the remaining integers, then minimum and so on.\n# Examples:\n#\n# $1 is a space-separated\
    \ list\nstrange_sort_list() {\n    local list=$1\n    local result=()\n    local\
    \ sorted_list=($(echo \"$list\" | tr ' ' '\\n' | sort -n))\n    local len=${#sorted_list[@]}\n\
    \    local i=0\n    local j=0\n    local k=0\n    local l=0\n    local m=0\n \
    \   local n=0\n    local o=0\n    local p=0\n    local q=0\n    local r=0\n  \
    \  local s=0\n    local t=0\n    local u=0\n    local v=0\n    local w=0\n   \
    \ local x=0\n    local y=0\n    local z=0\n    local aa=0\n    local bb=0\n  \
    \  local cc=0\n    local dd=0\n    local ee=0\n    local ff=0\n    local gg=0\n\
    \    local hh=0\n    local ii=0\n    local jj=0\n    local kk=0\n    local ll=0\n\
    \    local mm=0\n    local nn=0\n    local oo=0\n    local pp=0\n    local qq=0\n\
    \    local rr=0\n    local ss=0\n    local tt=0\n    local uu=0\n    local vv=0\n\
    \    local ww=0\n    local xx=0\n    local yy=0\n    local zz=0\n    local aaa=0\n\
    \    local bbb=0\n    local ccc=0\n    local ddd=0\n    local eee=0\n    local\
    \ fff=0\n    local ggg=0\n    local hhh=0\n    local iii=0\n    local jjj=0\n\
    \    local kkk=0\n    local lll=0\n    local mmm=0\n    local nnn=0\n    local\
    \ ooo=0\n    local ppp=0\n    local qqq=0\n    local rrr=0\n    local sss=0\n\
    \    local ttt=0\n    local uuu=0\n    local vvv=0\n    local www=0\n    local\
    \ xxx=0\n    local yyy=0\n    local zzz=\n}\n\ncandidate() {\n    strange_sort_list\
    \ \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"1 2 3 4\") = \"1 4 2\
    \ 3\" ]]\n    [[ $(candidate \"5 6 7 8 9\") = \"5 9 6 8 7\" ]]\n    [[ $(candidate\
    \ \"1 2 3 4 5\") = \"1 5 2 4 3\" ]]\n    [[ $(candidate \"5 6 7 8 9 1\") = \"\
    1 9 5 8 6 7\" ]]\n    [[ $(candidate \"5 5 5 5\") = \"5 5 5 5\" ]]\n    [[ $(candidate\
    \ \"\") = \"\" ]]\n    [[ $(candidate \"1 2 3 4 5 6 7 8\") = \"1 8 2 7 3 6 4 5\"\
    \ ]]\n    [[ $(candidate \"0 2 2 2 5 5 -5 -5\") = \"-5 5 -5 5 0 2 2 2\" ]]\n \
    \   [[ $(candidate \"111111\") = \"111111\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660003084
- exit_code: 1
  program: "#!/bin/bash\n# Given list of integers, return list in strange order.\n\
    # Strange sorting, is when you start with the minimum value,\n# then maximum of\
    \ the remaining integers, then minimum and so on.\n# Examples:\n#\n# $1 is a space-separated\
    \ list\nstrange_sort_list() {\n    local list=($1)\n    local sorted=()\n    local\
    \ min=${list[0]}\n    local max=${list[0]}\n    local min_index=0\n    local max_index=0\n\
    \    local i=0\n    local j=0\n    local k=0\n    local l=0\n    local m=0\n \
    \   local n=0\n    local o=0\n    local p=0\n    local q=0\n    local r=0\n  \
    \  local s=0\n    local t=0\n    local u=0\n    local v=0\n    local w=0\n   \
    \ local x=0\n    local y=0\n    local z=0\n    local aa=0\n    local bb=0\n  \
    \  local cc=0\n    local dd=0\n    local ee=0\n    local ff=0\n    local gg=0\n\
    \    local hh=0\n    local ii=0\n    local jj=0\n    local kk=0\n    local ll=0\n\
    \    local mm=0\n    local nn=0\n    local oo=0\n    local pp=0\n    local qq=0\n\
    \    local rr=0\n    local ss=0\n    local tt=0\n    local uu=0\n    local vv=0\n\
    \    local ww=0\n    local xx=0\n    local yy=0\n    local zz=0\n    local aaa=0\n\
    \    local bbb=0\n    local ccc=0\n    local ddd=0\n    local eee=0\n    local\
    \ fff=0\n    local ggg=0\n    local hhh=0\n    local iii=0\n    local jjj=0\n\
    \    local kkk=0\n    local lll=0\n    local mmm=0\n    local nnn=0\n    local\
    \ ooo=0\n    local ppp=0\n    local qqq=0\n    local rrr=0\n    local sss=0\n\
    \    local ttt=0\n    local uuu=0\n    local vvv=0\n    local www=0\n    local\
    \ xxx=0\n    local yyy=0\n    local zzz=0\n\n}\n\ncandidate() {\n    strange_sort_list\
    \ \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"1 2 3 4\") = \"1 4 2\
    \ 3\" ]]\n    [[ $(candidate \"5 6 7 8 9\") = \"5 9 6 8 7\" ]]\n    [[ $(candidate\
    \ \"1 2 3 4 5\") = \"1 5 2 4 3\" ]]\n    [[ $(candidate \"5 6 7 8 9 1\") = \"\
    1 9 5 8 6 7\" ]]\n    [[ $(candidate \"5 5 5 5\") = \"5 5 5 5\" ]]\n    [[ $(candidate\
    \ \"\") = \"\" ]]\n    [[ $(candidate \"1 2 3 4 5 6 7 8\") = \"1 8 2 7 3 6 4 5\"\
    \ ]]\n    [[ $(candidate \"0 2 2 2 5 5 -5 -5\") = \"-5 5 -5 5 0 2 2 2\" ]]\n \
    \   [[ $(candidate \"111111\") = \"111111\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660003083
- exit_code: 1
  program: "#!/bin/bash\n# Given list of integers, return list in strange order.\n\
    # Strange sorting, is when you start with the minimum value,\n# then maximum of\
    \ the remaining integers, then minimum and so on.\n# Examples:\n#\n# $1 is a space-separated\
    \ list\nstrange_sort_list() {\n    local list=($1)\n    local sorted=()\n    local\
    \ min=${list[0]}\n    local max=${list[0]}\n    local min_index=0\n    local max_index=0\n\
    \    local i=0\n    local j=0\n    local k=0\n    local l=0\n    local m=0\n \
    \   local n=0\n    local o=0\n    local p=0\n    local q=0\n    local r=0\n  \
    \  local s=0\n    local t=0\n    local u=0\n    local v=0\n    local w=0\n   \
    \ local x=0\n    local y=0\n    local z=0\n    local aa=0\n    local bb=0\n  \
    \  local cc=0\n    local dd=0\n    local ee=0\n    local ff=0\n    local gg=0\n\
    \    local hh=0\n    local ii=0\n    local jj=0\n    local kk=0\n    local ll=0\n\
    \    local mm=0\n    local nn=0\n    local oo=0\n    local pp=0\n    local qq=0\n\
    \    local rr=0\n    local ss=0\n    local tt=0\n    local uu=0\n    local vv=0\n\
    \    local ww=0\n    local xx=0\n    local yy=0\n    local zz=0\n    local aaa=0\n\
    \    local bbb=0\n    local ccc=0\n    local ddd=0\n    local eee=0\n    local\
    \ fff=0\n    local ggg=0\n    local hhh=0\n    local iii=0\n    local jjj=0\n\
    \    local kkk=0\n    local lll=0\n    local mmm=0\n    local nnn=0\n    local\
    \ ooo=0\n    local ppp=0\n    local qqq=0\n    local rrr=0\n    local sss=0\n\
    \    local ttt=0\n    local uuu=0\n    local vvv=0\n    local www=0\n    local\
    \ xxx=0\n    local yyy=0\n    local zzz=0\n\n}\n\ncandidate() {\n    strange_sort_list\
    \ \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"1 2 3 4\") = \"1 4 2\
    \ 3\" ]]\n    [[ $(candidate \"5 6 7 8 9\") = \"5 9 6 8 7\" ]]\n    [[ $(candidate\
    \ \"1 2 3 4 5\") = \"1 5 2 4 3\" ]]\n    [[ $(candidate \"5 6 7 8 9 1\") = \"\
    1 9 5 8 6 7\" ]]\n    [[ $(candidate \"5 5 5 5\") = \"5 5 5 5\" ]]\n    [[ $(candidate\
    \ \"\") = \"\" ]]\n    [[ $(candidate \"1 2 3 4 5 6 7 8\") = \"1 8 2 7 3 6 4 5\"\
    \ ]]\n    [[ $(candidate \"0 2 2 2 5 5 -5 -5\") = \"-5 5 -5 5 0 2 2 2\" ]]\n \
    \   [[ $(candidate \"111111\") = \"111111\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660003083
- exit_code: 1
  program: "#!/bin/bash\n# Given list of integers, return list in strange order.\n\
    # Strange sorting, is when you start with the minimum value,\n# then maximum of\
    \ the remaining integers, then minimum and so on.\n# Examples:\n#\n# $1 is a space-separated\
    \ list\nstrange_sort_list() {\n    local list=$1\n    local min=$(echo \"$list\"\
    \ | tr ' ' '\\n' | sort -n | head -n 1)\n    local max=$(echo \"$list\" | tr '\
    \ ' '\\n' | sort -n | tail -n 1)\n    local new_list=$min\n    local i=1\n   \
    \ while [ $i -lt $(echo \"$list\" | wc -w) ]; do\n        if [ $((i % 2)) -eq\
    \ 0 ]; then\n            new_list=$(echo \"$list\" | tr ' ' '\\n' | sort -n |\
    \ grep -v $min | grep -v $max | head -n 1)\n        else\n            new_list=$(echo\
    \ \"$list\" | tr ' ' '\\n' | sort -n | grep -v $min | grep -v $max | tail -n 1)\n\
    \        fi\n        i=$((i + 1))\n    done\n    echo $new_list\n}\n\ncandidate()\
    \ {\n    strange_sort_list \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate\
    \ \"1 2 3 4\") = \"1 4 2 3\" ]]\n    [[ $(candidate \"5 6 7 8 9\") = \"5 9 6 8\
    \ 7\" ]]\n    [[ $(candidate \"1 2 3 4 5\") = \"1 5 2 4 3\" ]]\n    [[ $(candidate\
    \ \"5 6 7 8 9 1\") = \"1 9 5 8 6 7\" ]]\n    [[ $(candidate \"5 5 5 5\") = \"\
    5 5 5 5\" ]]\n    [[ $(candidate \"\") = \"\" ]]\n    [[ $(candidate \"1 2 3 4\
    \ 5 6 7 8\") = \"1 8 2 7 3 6 4 5\" ]]\n    [[ $(candidate \"0 2 2 2 5 5 -5 -5\"\
    ) = \"-5 5 -5 5 0 2 2 2\" ]]\n    [[ $(candidate \"111111\") = \"111111\" ]]\n\
    }\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660003084
- exit_code: 1
  program: "#!/bin/bash\n# Given list of integers, return list in strange order.\n\
    # Strange sorting, is when you start with the minimum value,\n# then maximum of\
    \ the remaining integers, then minimum and so on.\n# Examples:\n#\n# $1 is a space-separated\
    \ list\nstrange_sort_list() {\n    local list=($1)\n    local sorted=()\n    local\
    \ min=${list[0]}\n    local max=${list[0]}\n    local min_index=0\n    local max_index=0\n\
    \    local i=0\n    local j=0\n    local k=0\n    local l=0\n    local m=0\n \
    \   local n=0\n    local o=0\n    local p=0\n    local q=0\n    local r=0\n  \
    \  local s=0\n    local t=0\n    local u=0\n    local v=0\n    local w=0\n   \
    \ local x=0\n    local y=0\n    local z=0\n    local aa=0\n    local bb=0\n  \
    \  local cc=0\n    local dd=0\n    local ee=0\n    local ff=0\n    local gg=0\n\
    \    local hh=0\n    local ii=0\n    local jj=0\n    local kk=0\n    local ll=0\n\
    \    local mm=0\n    local nn=0\n    local oo=0\n    local pp=0\n    local qq=0\n\
    \    local rr=0\n    local ss=0\n    local tt=0\n    local uu=0\n    local vv=0\n\
    \    local ww=0\n    local xx=0\n    local yy=0\n    local zz=0\n    local aaa=0\n\
    \    local bbb=0\n    local ccc=0\n    local ddd=0\n    local eee=0\n    local\
    \ fff=0\n    local ggg=0\n    local hhh=0\n    local iii=0\n    local jjj=0\n\
    \    local kkk=0\n    local lll=0\n    local mmm=0\n    local nnn=0\n    local\
    \ ooo=0\n    local ppp=0\n    local qqq=0\n    local rrr=0\n    local sss=0\n\
    \    local ttt=0\n    local uuu=0\n    local vvv=0\n    local www=0\n    local\
    \ xxx=0\n    local yyy=0\n    local zzz=0\n\n}\n\ncandidate() {\n    strange_sort_list\
    \ \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"1 2 3 4\") = \"1 4 2\
    \ 3\" ]]\n    [[ $(candidate \"5 6 7 8 9\") = \"5 9 6 8 7\" ]]\n    [[ $(candidate\
    \ \"1 2 3 4 5\") = \"1 5 2 4 3\" ]]\n    [[ $(candidate \"5 6 7 8 9 1\") = \"\
    1 9 5 8 6 7\" ]]\n    [[ $(candidate \"5 5 5 5\") = \"5 5 5 5\" ]]\n    [[ $(candidate\
    \ \"\") = \"\" ]]\n    [[ $(candidate \"1 2 3 4 5 6 7 8\") = \"1 8 2 7 3 6 4 5\"\
    \ ]]\n    [[ $(candidate \"0 2 2 2 5 5 -5 -5\") = \"-5 5 -5 5 0 2 2 2\" ]]\n \
    \   [[ $(candidate \"111111\") = \"111111\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660003083
- exit_code: 1
  program: "#!/bin/bash\n# Given list of integers, return list in strange order.\n\
    # Strange sorting, is when you start with the minimum value,\n# then maximum of\
    \ the remaining integers, then minimum and so on.\n# Examples:\n#\n# $1 is a space-separated\
    \ list\nstrange_sort_list() {\n    local list=\"$1\"\n    local sorted=\"\"\n\
    \    local min=\"\"\n    local max=\"\"\n    local remaining=\"\"\n    local i=\"\
    \"\n    local j=\"\"\n    local k=\"\"\n    local l=\"\"\n    local m=\"\"\n \
    \   local n=\"\"\n    local o=\"\"\n    local p=\"\"\n    local q=\"\"\n    local\
    \ r=\"\"\n    local s=\"\"\n    local t=\"\"\n    local u=\"\"\n    local v=\"\
    \"\n    local w=\"\"\n    local x=\"\"\n    local y=\"\"\n    local z=\"\"\n \
    \   local a=\"\"\n    local b=\"\"\n    local c=\"\"\n    local d=\"\"\n    local\
    \ e=\"\"\n    local f=\"\"\n    local g=\"\"\n    local h=\"\"\n    local i=\"\
    \"\n    local j=\"\"\n    local k=\"\"\n    local l=\"\"\n    local m=\"\"\n \
    \   local n=\"\"\n    local o=\"\"\n    local p=\"\"\n    local q=\"\"\n    local\
    \ r=\"\"\n    local s=\"\"\n    local t=\"\"\n    local u=\"\"\n    local v=\"\
    \"\n    local w=\"\"\n    local x=\"\"\n    local y=\"\"\n    local z=\"\"\n \
    \   local a=\"\"\n    local b=\"\"\n    local c=\"\"\n    local d=\"\"\n    local\
    \ e=\"\"\n    local f=\"\"\n    local g=\"\"\n    local h=\"\"\n    local i=\"\
    \"\n    local j=\"\"\n    local k=\"\"\n    local l=\"\"\n    local m=\"\"\n \
    \   local n=\"\"\n    local o=\"\"\n    local p=\"\"\n    local q=\"\"\n    local\
    \ r=\"\"\n    local s=\"\"\n    local t=\"\"\n    local u=\"\"\n    local v=\"\
    \"\n    local w=\"\"\n    local x=\"\"\n    local y=\"\"\n    local z=\"\"\n \
    \   local a=\"\"\n    local b=\"\"\n    local c=\"\"\n    local d=\"\"\n    local\
    \ e=\"\"\n    local f=\"\"\n    local g=\"\"\n    local h=\"\"\n    local i=\"\
    \"\n    local j=\"\"\n    local k=\"\"\n    local l=\"\"\n    local m=\"\"\n \
    \   local n=\"\"\n    local o=\"\"\n    local p=\"\"\n    local q=\"\"\n    local\
    \ r=\"\"\n    local s=\"\"\n    local t=\"\"\n    local u=\"\"\n    local v=\"\
    \"\n    local w=\"\"\n    local x=\"\"\n    local y=\"\"\n    local z=\"\"\n \
    \   local a\n}\n\ncandidate() {\n    strange_sort_list \"$@\"\n}\n\nset -e\nrun_test()\
    \ {\n    [[ $(candidate \"1 2 3 4\") = \"1 4 2 3\" ]]\n    [[ $(candidate \"5\
    \ 6 7 8 9\") = \"5 9 6 8 7\" ]]\n    [[ $(candidate \"1 2 3 4 5\") = \"1 5 2 4\
    \ 3\" ]]\n    [[ $(candidate \"5 6 7 8 9 1\") = \"1 9 5 8 6 7\" ]]\n    [[ $(candidate\
    \ \"5 5 5 5\") = \"5 5 5 5\" ]]\n    [[ $(candidate \"\") = \"\" ]]\n    [[ $(candidate\
    \ \"1 2 3 4 5 6 7 8\") = \"1 8 2 7 3 6 4 5\" ]]\n    [[ $(candidate \"0 2 2 2\
    \ 5 5 -5 -5\") = \"-5 5 -5 5 0 2 2 2\" ]]\n    [[ $(candidate \"111111\") = \"\
    111111\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660003084
- exit_code: 1
  program: "#!/bin/bash\n# Given list of integers, return list in strange order.\n\
    # Strange sorting, is when you start with the minimum value,\n# then maximum of\
    \ the remaining integers, then minimum and so on.\n# Examples:\n#\n# $1 is a space-separated\
    \ list\nstrange_sort_list() {\n  local list=\"$1\"\n  local sorted=()\n  local\
    \ min=0\n  local max=0\n  local min_index=0\n  local max_index=0\n  local i=0\n\
    \  local j=0\n  local k=0\n  local l=0\n  local m=0\n  local n=0\n  local o=0\n\
    \  local p=0\n  local q=0\n  local r=0\n  local s=0\n  local t=0\n  local u=0\n\
    \  local v=0\n  local w=0\n  local x=0\n  local y=0\n  local z=0\n  local aa=0\n\
    \  local bb=0\n  local cc=0\n  local dd=0\n  local ee=0\n  local ff=0\n  local\
    \ gg=0\n  local hh=0\n  local ii=0\n  local jj=0\n  local kk=0\n  local ll=0\n\
    \  local mm=0\n  local nn=0\n  local oo=0\n  local pp=0\n  local qq=0\n  local\
    \ rr=0\n  local ss=0\n  local tt=0\n  local uu=0\n  local vv=0\n  local ww=0\n\
    \  local xx=0\n  local yy=0\n  local zz=0\n  local aaa=0\n  local bbb=0\n  local\
    \ ccc=0\n  local ddd=0\n  local eee=0\n  local fff=0\n  local ggg=0\n  local hhh=0\n\
    \  local iii=0\n  local jjj=0\n  local kkk=0\n  local lll=0\n  local mmm=0\n \
    \ local nnn=0\n  local ooo=0\n  local ppp=0\n  local qqq=0\n  local rrr=0\n  local\
    \ sss=0\n  local ttt=0\n  local uuu=0\n  local vvv=0\n  local www=0\n  local xxx=0\n\
    \  local yyy=0\n  local zzz=0\n  local aaaa=0\n \n}\n\ncandidate() {\n    strange_sort_list\
    \ \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"1 2 3 4\") = \"1 4 2\
    \ 3\" ]]\n    [[ $(candidate \"5 6 7 8 9\") = \"5 9 6 8 7\" ]]\n    [[ $(candidate\
    \ \"1 2 3 4 5\") = \"1 5 2 4 3\" ]]\n    [[ $(candidate \"5 6 7 8 9 1\") = \"\
    1 9 5 8 6 7\" ]]\n    [[ $(candidate \"5 5 5 5\") = \"5 5 5 5\" ]]\n    [[ $(candidate\
    \ \"\") = \"\" ]]\n    [[ $(candidate \"1 2 3 4 5 6 7 8\") = \"1 8 2 7 3 6 4 5\"\
    \ ]]\n    [[ $(candidate \"0 2 2 2 5 5 -5 -5\") = \"-5 5 -5 5 0 2 2 2\" ]]\n \
    \   [[ $(candidate \"111111\") = \"111111\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660003084
- exit_code: 1
  program: "#!/bin/bash\n# Given list of integers, return list in strange order.\n\
    # Strange sorting, is when you start with the minimum value,\n# then maximum of\
    \ the remaining integers, then minimum and so on.\n# Examples:\n#\n# $1 is a space-separated\
    \ list\nstrange_sort_list() {\n    local list=\"$1\"\n    local sorted_list=\"\
    \"\n    local sorted_list_length=0\n    local list_length=0\n    local min=0\n\
    \    local max=0\n    local min_index=0\n    local max_index=0\n    local i=0\n\
    \    local j=0\n    local k=0\n    local temp=0\n    local temp_index=0\n    local\
    \ temp_list=\"\"\n    local temp_list_length=0\n    local temp_list_length_half=0\n\
    \    local temp_list_length_half_plus_one=0\n    local temp_list_length_half_minus_one=0\n\
    \    local temp_list_length_half_minus_one_index=0\n    local temp_list_length_half_plus_one_index=0\n\
    \    local temp_list_length_half_index=0\n    local temp_list_length_half_index_plus_one=0\n\
    \    local temp_list_length_half_index_minus_one=0\n    local temp_list_length_half_index_minus_one_index=0\n\
    \    local temp_list_length_half_index_plus_one_index=0\n    local temp_list_length_half_index_index=0\n\
    \    local temp_list_length_half_index_index_plus_one=0\n    local temp_list_length_half_index_index_minus_one=0\n\
    \    local temp_list_length_half_index_index_minus_one_index=0\n    local temp_list_length_half_index_index_plus_one_index=0\n\
    \    local temp_list_length_half_index_index_index=0\n    local temp_list_length_half_index_index_index_plus_one=0\n\
    \    local temp_list_length_half_index_index_index_minus_one=0\n    local temp_list_length_half_index_index_index_minus_one_index=0\n\
    \    local temp_list_length_half_index_index_index_plus_one_index=0\n    local\
    \ temp_list_length_half_index_index_index_index=0\n   \n}\n\ncandidate() {\n \
    \   strange_sort_list \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"\
    1 2 3 4\") = \"1 4 2 3\" ]]\n    [[ $(candidate \"5 6 7 8 9\") = \"5 9 6 8 7\"\
    \ ]]\n    [[ $(candidate \"1 2 3 4 5\") = \"1 5 2 4 3\" ]]\n    [[ $(candidate\
    \ \"5 6 7 8 9 1\") = \"1 9 5 8 6 7\" ]]\n    [[ $(candidate \"5 5 5 5\") = \"\
    5 5 5 5\" ]]\n    [[ $(candidate \"\") = \"\" ]]\n    [[ $(candidate \"1 2 3 4\
    \ 5 6 7 8\") = \"1 8 2 7 3 6 4 5\" ]]\n    [[ $(candidate \"0 2 2 2 5 5 -5 -5\"\
    ) = \"-5 5 -5 5 0 2 2 2\" ]]\n    [[ $(candidate \"111111\") = \"111111\" ]]\n\
    }\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660003084
- exit_code: 1
  program: "#!/bin/bash\n# Given list of integers, return list in strange order.\n\
    # Strange sorting, is when you start with the minimum value,\n# then maximum of\
    \ the remaining integers, then minimum and so on.\n# Examples:\n#\n# $1 is a space-separated\
    \ list\nstrange_sort_list() {\n  local -a list=($1)\n  local -a sorted=()\n  local\
    \ -i i=0\n  local -i j=0\n  local -i k=0\n  local -i m=0\n  local -i n=0\n  local\
    \ -i p=0\n  local -i q=0\n  local -i r=0\n  local -i s=0\n  local -i t=0\n  local\
    \ -i u=0\n  local -i v=0\n  local -i w=0\n  local -i x=0\n  local -i y=0\n  local\
    \ -i z=0\n  local -i aa=0\n  local -i bb=0\n  local -i cc=0\n  local -i dd=0\n\
    \  local -i ee=0\n  local -i ff=0\n  local -i gg=0\n  local -i hh=0\n  local -i\
    \ ii=0\n  local -i jj=0\n  local -i kk=0\n  local -i ll=0\n  local -i mm=0\n \
    \ local -i nn=0\n  local -i oo=0\n  local -i pp=0\n  local -i qq=0\n  local -i\
    \ rr=0\n  local -i ss=0\n  local -i tt=0\n  local -i uu=0\n  local -i vv=0\n \
    \ local -i ww=0\n  local -i xx=0\n  local -i yy=0\n  local -i zz=0\n  local -i\
    \ aaa=0\n  local -i bbb=0\n  local -i ccc=0\n  local -i ddd=0\n  local -i eee=0\n\
    \  local -i fff=0\n  local -i ggg=0\n  local -i hhh=0\n  local -i iii=0\n  local\
    \ -i jjj=0\n  local -i kkk=0\n  local -i lll=0\n  local -i mmm=0\n  local -i nnn=0\n\
    \  local -i ooo=0\n  local -i ppp\n}\n\ncandidate() {\n    strange_sort_list \"\
    $@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"1 2 3 4\") = \"1 4 2 3\"\
    \ ]]\n    [[ $(candidate \"5 6 7 8 9\") = \"5 9 6 8 7\" ]]\n    [[ $(candidate\
    \ \"1 2 3 4 5\") = \"1 5 2 4 3\" ]]\n    [[ $(candidate \"5 6 7 8 9 1\") = \"\
    1 9 5 8 6 7\" ]]\n    [[ $(candidate \"5 5 5 5\") = \"5 5 5 5\" ]]\n    [[ $(candidate\
    \ \"\") = \"\" ]]\n    [[ $(candidate \"1 2 3 4 5 6 7 8\") = \"1 8 2 7 3 6 4 5\"\
    \ ]]\n    [[ $(candidate \"0 2 2 2 5 5 -5 -5\") = \"-5 5 -5 5 0 2 2 2\" ]]\n \
    \   [[ $(candidate \"111111\") = \"111111\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660003084
- exit_code: 1
  program: "#!/bin/bash\n# Given list of integers, return list in strange order.\n\
    # Strange sorting, is when you start with the minimum value,\n# then maximum of\
    \ the remaining integers, then minimum and so on.\n# Examples:\n#\n# $1 is a space-separated\
    \ list\nstrange_sort_list() {\n  local list=$1\n  local sorted_list=\"\"\n  local\
    \ min_max_list=\"\"\n  local min_max=\"\"\n  local min_max_index=0\n  local min_max_index_list=\"\
    \"\n  local min_max_index_list_sorted=\"\"\n  local min_max_index_list_sorted_rev=\"\
    \"\n  local min_max_index_list_sorted_rev_list=\"\"\n  local min_max_index_list_sorted_rev_list_sorted=\"\
    \"\n  local min_max_index_list_sorted_rev_list_sorted_rev=\"\"\n  local min_max_index_list_sorted_rev_list_sorted_rev_list=\"\
    \"\n  local min_max_index_list_sorted_rev_list_sorted_rev_list_sorted=\"\"\n \
    \ local min_max_index_list_sorted_rev_list_sorted_rev_list_sorted_rev=\"\"\n \
    \ local min_max_index_list_sorted_rev_list_sorted_rev_list_sorted_rev_list=\"\"\
    \n  local min_max_index_list_sorted_rev_list_sorted_rev_list_sorted_rev_list_sorted=\"\
    \"\n  local min_max_index_list_sorted_rev_list_sorted_rev_list_sorted_rev_list_sorted_rev=\"\
    \"\n  local min_max_index_list_sorted_rev_list_sorted_rev_list_sorted_rev_list_sorted_rev_list=\"\
    \"\n  local min_max_index_list_sorted_rev_list_sorted_rev_list_sorted_rev_list_sorted_rev_list_sorted=\"\
    \"\n  local min_max_index_list_sorted_rev_list_sorted_rev_list_sorted_rev_list_sorted_rev_list_sorted_rev=\"\
    \"\n  local min_max_index_list_sorted_rev_list_sorted_rev_list_sorted_rev_list_sorted_rev_list_sorted_rev_list=\"\
    \"\n  local min_max_index_list_s\n}\n\ncandidate() {\n    strange_sort_list \"\
    $@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"1 2 3 4\") = \"1 4 2 3\"\
    \ ]]\n    [[ $(candidate \"5 6 7 8 9\") = \"5 9 6 8 7\" ]]\n    [[ $(candidate\
    \ \"1 2 3 4 5\") = \"1 5 2 4 3\" ]]\n    [[ $(candidate \"5 6 7 8 9 1\") = \"\
    1 9 5 8 6 7\" ]]\n    [[ $(candidate \"5 5 5 5\") = \"5 5 5 5\" ]]\n    [[ $(candidate\
    \ \"\") = \"\" ]]\n    [[ $(candidate \"1 2 3 4 5 6 7 8\") = \"1 8 2 7 3 6 4 5\"\
    \ ]]\n    [[ $(candidate \"0 2 2 2 5 5 -5 -5\") = \"-5 5 -5 5 0 2 2 2\" ]]\n \
    \   [[ $(candidate \"111111\") = \"111111\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660003084
- exit_code: 1
  program: "#!/bin/bash\n# Given list of integers, return list in strange order.\n\
    # Strange sorting, is when you start with the minimum value,\n# then maximum of\
    \ the remaining integers, then minimum and so on.\n# Examples:\n#\n# $1 is a space-separated\
    \ list\nstrange_sort_list() {\n  local list=($1)\n  local result=()\n  local min=${list[0]}\n\
    \  local max=${list[0]}\n  local min_index=0\n  local max_index=0\n  local i=0\n\
    \  local j=0\n  local k=0\n  local l=0\n  local m=0\n  local n=0\n  local o=0\n\
    \  local p=0\n  local q=0\n  local r=0\n  local s=0\n  local t=0\n  local u=0\n\
    \  local v=0\n  local w=0\n  local x=0\n  local y=0\n  local z=0\n  local aa=0\n\
    \  local bb=0\n  local cc=0\n  local dd=0\n  local ee=0\n  local ff=0\n  local\
    \ gg=0\n  local hh=0\n  local ii=0\n  local jj=0\n  local kk=0\n  local ll=0\n\
    \  local mm=0\n  local nn=0\n  local oo=0\n  local pp=0\n  local qq=0\n  local\
    \ rr=0\n  local ss=0\n  local tt=0\n  local uu=0\n  local vv=0\n  local ww=0\n\
    \  local xx=0\n  local yy=0\n  local zz=0\n  local aaa=0\n  local bbb=0\n  local\
    \ ccc=0\n  local ddd=0\n  local eee=0\n  local fff=0\n  local ggg=0\n  local hhh=0\n\
    \  local iii=0\n  local jjj=0\n  local kkk=0\n  local lll=0\n  local mmm=0\n \
    \ local nnn=0\n  local ooo=0\n  local ppp=0\n  local qqq=0\n  local rrr=0\n  local\
    \ sss=0\n  local ttt=0\n  local uuu=0\n  local vvv=0\n  local www=0\n  local xxx=0\n\
    \  local yyy=0\n  local zzz=0\n\n}\n\ncandidate() {\n    strange_sort_list \"\
    $@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"1 2 3 4\") = \"1 4 2 3\"\
    \ ]]\n    [[ $(candidate \"5 6 7 8 9\") = \"5 9 6 8 7\" ]]\n    [[ $(candidate\
    \ \"1 2 3 4 5\") = \"1 5 2 4 3\" ]]\n    [[ $(candidate \"5 6 7 8 9 1\") = \"\
    1 9 5 8 6 7\" ]]\n    [[ $(candidate \"5 5 5 5\") = \"5 5 5 5\" ]]\n    [[ $(candidate\
    \ \"\") = \"\" ]]\n    [[ $(candidate \"1 2 3 4 5 6 7 8\") = \"1 8 2 7 3 6 4 5\"\
    \ ]]\n    [[ $(candidate \"0 2 2 2 5 5 -5 -5\") = \"-5 5 -5 5 0 2 2 2\" ]]\n \
    \   [[ $(candidate \"111111\") = \"111111\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660003084
- exit_code: 1
  program: "#!/bin/bash\n# Given list of integers, return list in strange order.\n\
    # Strange sorting, is when you start with the minimum value,\n# then maximum of\
    \ the remaining integers, then minimum and so on.\n# Examples:\n#\n# $1 is a space-separated\
    \ list\nstrange_sort_list() {\n    local -a list=($1)\n    local -a result=()\n\
    \    local -i i=0\n    local -i j=0\n    local -i k=0\n    local -i l=0\n    local\
    \ -i m=0\n    local -i n=0\n    local -i o=0\n    local -i p=0\n    local -i q=0\n\
    \    local -i r=0\n    local -i s=0\n    local -i t=0\n    local -i u=0\n    local\
    \ -i v=0\n    local -i w=0\n    local -i x=0\n    local -i y=0\n    local -i z=0\n\
    \    local -i aa=0\n    local -i bb=0\n    local -i cc=0\n    local -i dd=0\n\
    \    local -i ee=0\n    local -i ff=0\n    local -i gg=0\n    local -i hh=0\n\
    \    local -i ii=0\n    local -i jj=0\n    local -i kk=0\n    local -i ll=0\n\
    \    local -i mm=0\n    local -i nn=0\n    local -i oo=0\n    local -i pp=0\n\
    \    local -i qq=0\n    local -i rr=0\n    local -i ss=0\n    local -i tt=0\n\
    \    local -i uu=0\n    local -i vv=0\n    local -i ww=0\n    local -i xx=0\n\
    \    local -i yy=0\n    local -i zz=0\n    local -i aaa=0\n    local -i bbb=0\n\
    \    local -i ccc=0\n    local -i ddd=0\n    local -i eee=0\n    local -i fff=0\n\
    \    local -i ggg=0\n    local -i hhh=0\n    local -i iii=0\n    local -i jjj=0\n\
    \    local -i kkk=0\n    local -i lll=0\n    local -i mmm=0\n    local -i nnn=0\n\
    }\n\ncandidate() {\n    strange_sort_list \"$@\"\n}\n\nset -e\nrun_test() {\n\
    \    [[ $(candidate \"1 2 3 4\") = \"1 4 2 3\" ]]\n    [[ $(candidate \"5 6 7\
    \ 8 9\") = \"5 9 6 8 7\" ]]\n    [[ $(candidate \"1 2 3 4 5\") = \"1 5 2 4 3\"\
    \ ]]\n    [[ $(candidate \"5 6 7 8 9 1\") = \"1 9 5 8 6 7\" ]]\n    [[ $(candidate\
    \ \"5 5 5 5\") = \"5 5 5 5\" ]]\n    [[ $(candidate \"\") = \"\" ]]\n    [[ $(candidate\
    \ \"1 2 3 4 5 6 7 8\") = \"1 8 2 7 3 6 4 5\" ]]\n    [[ $(candidate \"0 2 2 2\
    \ 5 5 -5 -5\") = \"-5 5 -5 5 0 2 2 2\" ]]\n    [[ $(candidate \"111111\") = \"\
    111111\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660003084
- exit_code: 1
  program: "#!/bin/bash\n# Given list of integers, return list in strange order.\n\
    # Strange sorting, is when you start with the minimum value,\n# then maximum of\
    \ the remaining integers, then minimum and so on.\n# Examples:\n#\n# $1 is a space-separated\
    \ list\nstrange_sort_list() {\n  local list=($1)\n  local sorted=()\n  local min=${list[0]}\n\
    \  local max=${list[0]}\n  local min_index=0\n  local max_index=0\n  local i=0\n\
    \  local j=0\n  local k=0\n  local l=0\n  local m=0\n  local n=0\n  local o=0\n\
    \  local p=0\n  local q=0\n  local r=0\n  local s=0\n  local t=0\n  local u=0\n\
    \  local v=0\n  local w=0\n  local x=0\n  local y=0\n  local z=0\n  local aa=0\n\
    \  local bb=0\n  local cc=0\n  local dd=0\n  local ee=0\n  local ff=0\n  local\
    \ gg=0\n  local hh=0\n  local ii=0\n  local jj=0\n  local kk=0\n  local ll=0\n\
    \  local mm=0\n  local nn=0\n  local oo=0\n  local pp=0\n  local qq=0\n  local\
    \ rr=0\n  local ss=0\n  local tt=0\n  local uu=0\n  local vv=0\n  local ww=0\n\
    \  local xx=0\n  local yy=0\n  local zz=0\n  local aaa=0\n  local bbb=0\n  local\
    \ ccc=0\n  local ddd=0\n  local eee=0\n  local fff=0\n  local ggg=0\n  local hhh=0\n\
    \  local iii=0\n  local jjj=0\n  local kkk=0\n  local lll=0\n  local mmm=0\n \
    \ local nnn=0\n  local ooo=0\n  local ppp=0\n  local qqq=0\n  local rrr=0\n  local\
    \ sss=0\n  local ttt=0\n  local uuu=0\n  local vvv=0\n  local www=0\n  local xxx=0\n\
    \  local yyy=0\n  local zzz=0\n\n}\n\ncandidate() {\n    strange_sort_list \"\
    $@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"1 2 3 4\") = \"1 4 2 3\"\
    \ ]]\n    [[ $(candidate \"5 6 7 8 9\") = \"5 9 6 8 7\" ]]\n    [[ $(candidate\
    \ \"1 2 3 4 5\") = \"1 5 2 4 3\" ]]\n    [[ $(candidate \"5 6 7 8 9 1\") = \"\
    1 9 5 8 6 7\" ]]\n    [[ $(candidate \"5 5 5 5\") = \"5 5 5 5\" ]]\n    [[ $(candidate\
    \ \"\") = \"\" ]]\n    [[ $(candidate \"1 2 3 4 5 6 7 8\") = \"1 8 2 7 3 6 4 5\"\
    \ ]]\n    [[ $(candidate \"0 2 2 2 5 5 -5 -5\") = \"-5 5 -5 5 0 2 2 2\" ]]\n \
    \   [[ $(candidate \"111111\") = \"111111\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660003084
- exit_code: 1
  program: "#!/bin/bash\n# Given list of integers, return list in strange order.\n\
    # Strange sorting, is when you start with the minimum value,\n# then maximum of\
    \ the remaining integers, then minimum and so on.\n# Examples:\n#\n# $1 is a space-separated\
    \ list\nstrange_sort_list() {\n    local -a list=($1)\n    local -a sorted=()\n\
    \    local -i i=0\n    local -i j=0\n    local -i k=0\n    local -i l=0\n    local\
    \ -i m=0\n    local -i n=0\n    local -i o=0\n    local -i p=0\n    local -i q=0\n\
    \    local -i r=0\n    local -i s=0\n    local -i t=0\n    local -i u=0\n    local\
    \ -i v=0\n    local -i w=0\n    local -i x=0\n    local -i y=0\n    local -i z=0\n\
    \    local -i aa=0\n    local -i bb=0\n    local -i cc=0\n    local -i dd=0\n\
    \    local -i ee=0\n    local -i ff=0\n    local -i gg=0\n    local -i hh=0\n\
    \    local -i ii=0\n    local -i jj=0\n    local -i kk=0\n    local -i ll=0\n\
    \    local -i mm=0\n    local -i nn=0\n    local -i oo=0\n    local -i pp=0\n\
    \    local -i qq=0\n    local -i rr=0\n    local -i ss=0\n    local -i tt=0\n\
    \    local -i uu=0\n    local -i vv=0\n    local -i ww=0\n    local -i xx=0\n\
    \    local -i yy=0\n    local -i zz=0\n    local -i aaa=0\n    local -i bbb=0\n\
    \    local -i ccc=0\n    local -i ddd=0\n    local -i eee=0\n    local -i fff=0\n\
    \    local -i ggg=0\n    local -i hhh=0\n    local -i iii=0\n    local -i jjj=0\n\
    \    local -i kkk=0\n    local -i lll=0\n    local -i mmm=0\n    local -i nnn=0\n\
    }\n\ncandidate() {\n    strange_sort_list \"$@\"\n}\n\nset -e\nrun_test() {\n\
    \    [[ $(candidate \"1 2 3 4\") = \"1 4 2 3\" ]]\n    [[ $(candidate \"5 6 7\
    \ 8 9\") = \"5 9 6 8 7\" ]]\n    [[ $(candidate \"1 2 3 4 5\") = \"1 5 2 4 3\"\
    \ ]]\n    [[ $(candidate \"5 6 7 8 9 1\") = \"1 9 5 8 6 7\" ]]\n    [[ $(candidate\
    \ \"5 5 5 5\") = \"5 5 5 5\" ]]\n    [[ $(candidate \"\") = \"\" ]]\n    [[ $(candidate\
    \ \"1 2 3 4 5 6 7 8\") = \"1 8 2 7 3 6 4 5\" ]]\n    [[ $(candidate \"0 2 2 2\
    \ 5 5 -5 -5\") = \"-5 5 -5 5 0 2 2 2\" ]]\n    [[ $(candidate \"111111\") = \"\
    111111\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660003084
- exit_code: 1
  program: "#!/bin/bash\n# Given list of integers, return list in strange order.\n\
    # Strange sorting, is when you start with the minimum value,\n# then maximum of\
    \ the remaining integers, then minimum and so on.\n# Examples:\n#\n# $1 is a space-separated\
    \ list\nstrange_sort_list() {\n    local -a list=($1)\n    local -a sorted\n \
    \   local -i i=0\n    local -i j=0\n    local -i k=0\n    local -i l=0\n    local\
    \ -i m=0\n    local -i n=0\n    local -i o=0\n    local -i p=0\n    local -i q=0\n\
    \    local -i r=0\n    local -i s=0\n    local -i t=0\n    local -i u=0\n    local\
    \ -i v=0\n    local -i w=0\n    local -i x=0\n    local -i y=0\n    local -i z=0\n\
    \    local -i aa=0\n    local -i bb=0\n    local -i cc=0\n    local -i dd=0\n\
    \    local -i ee=0\n    local -i ff=0\n    local -i gg=0\n    local -i hh=0\n\
    \    local -i ii=0\n    local -i jj=0\n    local -i kk=0\n    local -i ll=0\n\
    \    local -i mm=0\n    local -i nn=0\n    local -i oo=0\n    local -i pp=0\n\
    \    local -i qq=0\n    local -i rr=0\n    local -i ss=0\n    local -i tt=0\n\
    \    local -i uu=0\n    local -i vv=0\n    local -i ww=0\n    local -i xx=0\n\
    \    local -i yy=0\n    local -i zz=0\n    local -i aaa=0\n    local -i bbb=0\n\
    \    local -i ccc=0\n    local -i ddd=0\n    local -i eee=0\n    local -i fff=0\n\
    \    local -i ggg=0\n    local -i hhh=0\n    local -i iii=0\n    local -i jjj=0\n\
    \    local -i kkk=0\n    local -i lll=0\n    local -i mmm=0\n    local -i nnn=0\n\
    \   \n}\n\ncandidate() {\n    strange_sort_list \"$@\"\n}\n\nset -e\nrun_test()\
    \ {\n    [[ $(candidate \"1 2 3 4\") = \"1 4 2 3\" ]]\n    [[ $(candidate \"5\
    \ 6 7 8 9\") = \"5 9 6 8 7\" ]]\n    [[ $(candidate \"1 2 3 4 5\") = \"1 5 2 4\
    \ 3\" ]]\n    [[ $(candidate \"5 6 7 8 9 1\") = \"1 9 5 8 6 7\" ]]\n    [[ $(candidate\
    \ \"5 5 5 5\") = \"5 5 5 5\" ]]\n    [[ $(candidate \"\") = \"\" ]]\n    [[ $(candidate\
    \ \"1 2 3 4 5 6 7 8\") = \"1 8 2 7 3 6 4 5\" ]]\n    [[ $(candidate \"0 2 2 2\
    \ 5 5 -5 -5\") = \"-5 5 -5 5 0 2 2 2\" ]]\n    [[ $(candidate \"111111\") = \"\
    111111\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660003084
- exit_code: 1
  program: "#!/bin/bash\n# Given list of integers, return list in strange order.\n\
    # Strange sorting, is when you start with the minimum value,\n# then maximum of\
    \ the remaining integers, then minimum and so on.\n# Examples:\n#\n# $1 is a space-separated\
    \ list\nstrange_sort_list() {\n    local list=($1)\n    local sorted=()\n    local\
    \ min=${list[0]}\n    local max=${list[0]}\n    local min_index=0\n    local max_index=0\n\
    \    local i=0\n    local j=0\n    local k=0\n    local n=${#list[@]}\n    local\
    \ m=0\n    local tmp=0\n    local tmp_index=0\n    local tmp_index_2=0\n    local\
    \ tmp_index_3=0\n    local tmp_index_4=0\n    local tmp_index_5=0\n    local tmp_index_6=0\n\
    \    local tmp_index_7=0\n    local tmp_index_8=0\n    local tmp_index_9=0\n \
    \   local tmp_index_10=0\n    local tmp_index_11=0\n    local tmp_index_12=0\n\
    \    local tmp_index_13=0\n    local tmp_index_14=0\n    local tmp_index_15=0\n\
    \    local tmp_index_16=0\n    local tmp_index_17=0\n    local tmp_index_18=0\n\
    \    local tmp_index_19=0\n    local tmp_index_20=0\n    local tmp_index_21=0\n\
    \    local tmp_index_22=0\n    local tmp_index_23=0\n    local tmp_index_24=0\n\
    \    local tmp_index_25=0\n    local tmp_index_26=0\n    local tmp_index_27=0\n\
    \    local tmp_index_28=0\n    local tmp_index_29=0\n    local tmp_index_30=0\n\
    \    local tmp_index_31=0\n    local tmp_index_32=0\n    local tmp_index_33=0\n\
    \    local tmp_index_34=0\n    local tmp_index_35=0\n    local tmp_index_36=0\n\
    \    local tmp_index_37=0\n    local tmp_index_38=0\n    local tmp_index_39=0\n\
    \    local tmp_index_40=0\n    local tmp_index_41=0\n    local tmp_index_42=0\n\
    \    local\n}\n\ncandidate() {\n    strange_sort_list \"$@\"\n}\n\nset -e\nrun_test()\
    \ {\n    [[ $(candidate \"1 2 3 4\") = \"1 4 2 3\" ]]\n    [[ $(candidate \"5\
    \ 6 7 8 9\") = \"5 9 6 8 7\" ]]\n    [[ $(candidate \"1 2 3 4 5\") = \"1 5 2 4\
    \ 3\" ]]\n    [[ $(candidate \"5 6 7 8 9 1\") = \"1 9 5 8 6 7\" ]]\n    [[ $(candidate\
    \ \"5 5 5 5\") = \"5 5 5 5\" ]]\n    [[ $(candidate \"\") = \"\" ]]\n    [[ $(candidate\
    \ \"1 2 3 4 5 6 7 8\") = \"1 8 2 7 3 6 4 5\" ]]\n    [[ $(candidate \"0 2 2 2\
    \ 5 5 -5 -5\") = \"-5 5 -5 5 0 2 2 2\" ]]\n    [[ $(candidate \"111111\") = \"\
    111111\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660003084
- exit_code: 1
  program: "#!/bin/bash\n# Given list of integers, return list in strange order.\n\
    # Strange sorting, is when you start with the minimum value,\n# then maximum of\
    \ the remaining integers, then minimum and so on.\n# Examples:\n#\n# $1 is a space-separated\
    \ list\nstrange_sort_list() {\n  local list=($1)\n  local sorted_list=()\n  local\
    \ min=${list[0]}\n  local max=${list[0]}\n  local min_index=0\n  local max_index=0\n\
    \  local i=0\n  local j=0\n  local k=0\n  local l=0\n  local m=0\n  local n=0\n\
    \  local o=0\n  local p=0\n  local q=0\n  local r=0\n  local s=0\n  local t=0\n\
    \  local u=0\n  local v=0\n  local w=0\n  local x=0\n  local y=0\n  local z=0\n\
    \  local aa=0\n  local bb=0\n  local cc=0\n  local dd=0\n  local ee=0\n  local\
    \ ff=0\n  local gg=0\n  local hh=0\n  local ii=0\n  local jj=0\n  local kk=0\n\
    \  local ll=0\n  local mm=0\n  local nn=0\n  local oo=0\n  local pp=0\n  local\
    \ qq=0\n  local rr=0\n  local ss=0\n  local tt=0\n  local uu=0\n  local vv=0\n\
    \  local ww=0\n  local xx=0\n  local yy=0\n  local zz=0\n  local aaa=0\n  local\
    \ bbb=0\n  local ccc=0\n  local ddd=0\n  local eee=0\n  local fff=0\n  local ggg=0\n\
    \  local hhh=0\n  local iii=0\n  local jjj=0\n  local kkk=0\n  local lll=0\n \
    \ local mmm=0\n  local nnn=0\n  local ooo=0\n  local ppp=0\n  local qqq=0\n  local\
    \ rrr=0\n  local sss=0\n  local ttt=0\n  local uuu=0\n  local vvv=0\n  local www=0\n\
    \  local xxx=0\n  local yyy=0\n  local zzz=\n}\n\ncandidate() {\n    strange_sort_list\
    \ \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"1 2 3 4\") = \"1 4 2\
    \ 3\" ]]\n    [[ $(candidate \"5 6 7 8 9\") = \"5 9 6 8 7\" ]]\n    [[ $(candidate\
    \ \"1 2 3 4 5\") = \"1 5 2 4 3\" ]]\n    [[ $(candidate \"5 6 7 8 9 1\") = \"\
    1 9 5 8 6 7\" ]]\n    [[ $(candidate \"5 5 5 5\") = \"5 5 5 5\" ]]\n    [[ $(candidate\
    \ \"\") = \"\" ]]\n    [[ $(candidate \"1 2 3 4 5 6 7 8\") = \"1 8 2 7 3 6 4 5\"\
    \ ]]\n    [[ $(candidate \"0 2 2 2 5 5 -5 -5\") = \"-5 5 -5 5 0 2 2 2\" ]]\n \
    \   [[ $(candidate \"111111\") = \"111111\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660003084
- exit_code: 1
  program: "#!/bin/bash\n# Given list of integers, return list in strange order.\n\
    # Strange sorting, is when you start with the minimum value,\n# then maximum of\
    \ the remaining integers, then minimum and so on.\n# Examples:\n#\n# $1 is a space-separated\
    \ list\nstrange_sort_list() {\n    local -a list=($1)\n    local -a sorted\n \
    \   local -i i=0\n    local -i j=0\n    local -i k=0\n    local -i l=0\n    local\
    \ -i m=0\n    local -i n=0\n    local -i o=0\n    local -i p=0\n    local -i q=0\n\
    \    local -i r=0\n    local -i s=0\n    local -i t=0\n    local -i u=0\n    local\
    \ -i v=0\n    local -i w=0\n    local -i x=0\n    local -i y=0\n    local -i z=0\n\
    \    local -i aa=0\n    local -i bb=0\n    local -i cc=0\n    local -i dd=0\n\
    \    local -i ee=0\n    local -i ff=0\n    local -i gg=0\n    local -i hh=0\n\
    \    local -i ii=0\n    local -i jj=0\n    local -i kk=0\n    local -i ll=0\n\
    \    local -i mm=0\n    local -i nn=0\n    local -i oo=0\n    local -i pp=0\n\
    \    local -i qq=0\n    local -i rr=0\n    local -i ss=0\n    local -i tt=0\n\
    \    local -i uu=0\n    local -i vv=0\n    local -i ww=0\n    local -i xx=0\n\
    \    local -i yy=0\n    local -i zz=0\n    local -i aaa=0\n    local -i bbb=0\n\
    \    local -i ccc=0\n    local -i ddd=0\n    local -i eee=0\n    local -i fff=0\n\
    \    local -i ggg=0\n    local -i hhh=0\n    local -i iii=0\n    local -i jjj=0\n\
    \    local -i kkk=0\n    local -i lll=0\n    local -i mmm=0\n    local -i nnn=0\n\
    \   \n}\n\ncandidate() {\n    strange_sort_list \"$@\"\n}\n\nset -e\nrun_test()\
    \ {\n    [[ $(candidate \"1 2 3 4\") = \"1 4 2 3\" ]]\n    [[ $(candidate \"5\
    \ 6 7 8 9\") = \"5 9 6 8 7\" ]]\n    [[ $(candidate \"1 2 3 4 5\") = \"1 5 2 4\
    \ 3\" ]]\n    [[ $(candidate \"5 6 7 8 9 1\") = \"1 9 5 8 6 7\" ]]\n    [[ $(candidate\
    \ \"5 5 5 5\") = \"5 5 5 5\" ]]\n    [[ $(candidate \"\") = \"\" ]]\n    [[ $(candidate\
    \ \"1 2 3 4 5 6 7 8\") = \"1 8 2 7 3 6 4 5\" ]]\n    [[ $(candidate \"0 2 2 2\
    \ 5 5 -5 -5\") = \"-5 5 -5 5 0 2 2 2\" ]]\n    [[ $(candidate \"111111\") = \"\
    111111\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660003084
- exit_code: 1
  program: "#!/bin/bash\n# Given list of integers, return list in strange order.\n\
    # Strange sorting, is when you start with the minimum value,\n# then maximum of\
    \ the remaining integers, then minimum and so on.\n# Examples:\n#\n# $1 is a space-separated\
    \ list\nstrange_sort_list() {\n    local list=($1)\n    local result=()\n    local\
    \ min=${list[0]}\n    local max=${list[0]}\n    local min_index=0\n    local max_index=0\n\
    \    local i=0\n    local j=0\n    local k=0\n    local l=0\n    local m=0\n \
    \   local n=0\n    local o=0\n    local p=0\n    local q=0\n    local r=0\n  \
    \  local s=0\n    local t=0\n    local u=0\n    local v=0\n    local w=0\n   \
    \ local x=0\n    local y=0\n    local z=0\n    local aa=0\n    local bb=0\n  \
    \  local cc=0\n    local dd=0\n    local ee=0\n    local ff=0\n    local gg=0\n\
    \    local hh=0\n    local ii=0\n    local jj=0\n    local kk=0\n    local ll=0\n\
    \    local mm=0\n    local nn=0\n    local oo=0\n    local pp=0\n    local qq=0\n\
    \    local rr=0\n    local ss=0\n    local tt=0\n    local uu=0\n    local vv=0\n\
    \    local ww=0\n    local xx=0\n    local yy=0\n    local zz=0\n    local aaa=0\n\
    \    local bbb=0\n    local ccc=0\n    local ddd=0\n    local eee=0\n    local\
    \ fff=0\n    local ggg=0\n    local hhh=0\n    local iii=0\n    local jjj=0\n\
    \    local kkk=0\n    local lll=0\n    local mmm=0\n    local nnn=0\n    local\
    \ ooo=0\n    local ppp=0\n    local qqq=0\n    local rrr=0\n    local sss=0\n\
    \    local ttt=0\n    local uuu=0\n    local vvv=0\n    local www=0\n    local\
    \ xxx=0\n    local yyy=0\n    local zzz=0\n\n}\n\ncandidate() {\n    strange_sort_list\
    \ \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"1 2 3 4\") = \"1 4 2\
    \ 3\" ]]\n    [[ $(candidate \"5 6 7 8 9\") = \"5 9 6 8 7\" ]]\n    [[ $(candidate\
    \ \"1 2 3 4 5\") = \"1 5 2 4 3\" ]]\n    [[ $(candidate \"5 6 7 8 9 1\") = \"\
    1 9 5 8 6 7\" ]]\n    [[ $(candidate \"5 5 5 5\") = \"5 5 5 5\" ]]\n    [[ $(candidate\
    \ \"\") = \"\" ]]\n    [[ $(candidate \"1 2 3 4 5 6 7 8\") = \"1 8 2 7 3 6 4 5\"\
    \ ]]\n    [[ $(candidate \"0 2 2 2 5 5 -5 -5\") = \"-5 5 -5 5 0 2 2 2\" ]]\n \
    \   [[ $(candidate \"111111\") = \"111111\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660003083
- exit_code: 1
  program: "#!/bin/bash\n# Given list of integers, return list in strange order.\n\
    # Strange sorting, is when you start with the minimum value,\n# then maximum of\
    \ the remaining integers, then minimum and so on.\n# Examples:\n#\n# $1 is a space-separated\
    \ list\nstrange_sort_list() {\n    local list=$1\n    local min=$(echo $list |\
    \ tr ' ' '\\n' | sort -n | head -n 1)\n    local max=$(echo $list | tr ' ' '\\\
    n' | sort -n | tail -n 1)\n    local sorted_list=$(echo $list | tr ' ' '\\n' |\
    \ sort -n | grep -v $min | grep -v $max)\n    local result=\"\"\n    local i=0\n\
    \    while [ $i -lt $(echo $sorted_list | wc -w) ]; do\n        if [ $((i % 2))\
    \ -eq 0 ]; then\n            result=\"$result $(echo $sorted_list | tr ' ' '\\\
    n' | head -n 1)\"\n            sorted_list=$(echo $sorted_list | tr ' ' '\\n'\
    \ | grep -v $(echo $sorted_list | tr ' ' '\\n' | head -n 1))\n        else\n \
    \           result=\"$result $(echo $sorted_list | tr ' ' '\\n' | tail -n 1)\"\
    \n            sorted_list=$(echo $sorted_list | tr ' ' '\\n' | grep -v $(echo\
    \ $sorted_list | tr ' ' '\\n' | tail -n 1))\n        fi\n        i=$((i + 1))\n\
    \    done\n    echo $min $result $max\n}\n\ncandidate() {\n    strange_sort_list\
    \ \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"1 2 3 4\") = \"1 4 2\
    \ 3\" ]]\n    [[ $(candidate \"5 6 7 8 9\") = \"5 9 6 8 7\" ]]\n    [[ $(candidate\
    \ \"1 2 3 4 5\") = \"1 5 2 4 3\" ]]\n    [[ $(candidate \"5 6 7 8 9 1\") = \"\
    1 9 5 8 6 7\" ]]\n    [[ $(candidate \"5 5 5 5\") = \"5 5 5 5\" ]]\n    [[ $(candidate\
    \ \"\") = \"\" ]]\n    [[ $(candidate \"1 2 3 4 5 6 7 8\") = \"1 8 2 7 3 6 4 5\"\
    \ ]]\n    [[ $(candidate \"0 2 2 2 5 5 -5 -5\") = \"-5 5 -5 5 0 2 2 2\" ]]\n \
    \   [[ $(candidate \"111111\") = \"111111\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660003084
- exit_code: 1
  program: "#!/bin/bash\n# Given list of integers, return list in strange order.\n\
    # Strange sorting, is when you start with the minimum value,\n# then maximum of\
    \ the remaining integers, then minimum and so on.\n# Examples:\n#\n# $1 is a space-separated\
    \ list\nstrange_sort_list() {\n    local list=($1)\n    local sorted=()\n    local\
    \ min=${list[0]}\n    local max=${list[0]}\n    for i in ${list[@]}; do\n    \
    \    if [[ $i -lt $min ]]; then\n            min=$i\n        fi\n        if [[\
    \ $i -gt $max ]]; then\n            max=$i\n        fi\n    done\n    local i=0\n\
    \    while [[ $i -lt ${#list[@]} ]]; do\n        if [[ $i%2 -eq 0 ]]; then\n \
    \           sorted+=($min)\n            min=$((min+1))\n        else\n       \
    \     sorted+=($max)\n            max=$((max-1))\n        fi\n        i=$((i+1))\n\
    \    done\n    echo ${sorted[@]}\n}\n\ncandidate() {\n    strange_sort_list \"\
    $@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"1 2 3 4\") = \"1 4 2 3\"\
    \ ]]\n    [[ $(candidate \"5 6 7 8 9\") = \"5 9 6 8 7\" ]]\n    [[ $(candidate\
    \ \"1 2 3 4 5\") = \"1 5 2 4 3\" ]]\n    [[ $(candidate \"5 6 7 8 9 1\") = \"\
    1 9 5 8 6 7\" ]]\n    [[ $(candidate \"5 5 5 5\") = \"5 5 5 5\" ]]\n    [[ $(candidate\
    \ \"\") = \"\" ]]\n    [[ $(candidate \"1 2 3 4 5 6 7 8\") = \"1 8 2 7 3 6 4 5\"\
    \ ]]\n    [[ $(candidate \"0 2 2 2 5 5 -5 -5\") = \"-5 5 -5 5 0 2 2 2\" ]]\n \
    \   [[ $(candidate \"111111\") = \"111111\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660003084
- exit_code: 1
  program: "#!/bin/bash\n# Given list of integers, return list in strange order.\n\
    # Strange sorting, is when you start with the minimum value,\n# then maximum of\
    \ the remaining integers, then minimum and so on.\n# Examples:\n#\n# $1 is a space-separated\
    \ list\nstrange_sort_list() {\n  local list=($1)\n  local sorted=()\n  local min=${list[0]}\n\
    \  local max=${list[0]}\n  local min_index=0\n  local max_index=0\n  local i=0\n\
    \  local j=0\n  local k=0\n  local l=0\n  local m=0\n  local n=0\n  local o=0\n\
    \  local p=0\n  local q=0\n  local r=0\n  local s=0\n  local t=0\n  local u=0\n\
    \  local v=0\n  local w=0\n  local x=0\n  local y=0\n  local z=0\n  local aa=0\n\
    \  local bb=0\n  local cc=0\n  local dd=0\n  local ee=0\n  local ff=0\n  local\
    \ gg=0\n  local hh=0\n  local ii=0\n  local jj=0\n  local kk=0\n  local ll=0\n\
    \  local mm=0\n  local nn=0\n  local oo=0\n  local pp=0\n  local qq=0\n  local\
    \ rr=0\n  local ss=0\n  local tt=0\n  local uu=0\n  local vv=0\n  local ww=0\n\
    \  local xx=0\n  local yy=0\n  local zz=0\n  local aaa=0\n  local bbb=0\n  local\
    \ ccc=0\n  local ddd=0\n  local eee=0\n  local fff=0\n  local ggg=0\n  local hhh=0\n\
    \  local iii=0\n  local jjj=0\n  local kkk=0\n  local lll=0\n  local mmm=0\n \
    \ local nnn=0\n  local ooo=0\n  local ppp=0\n  local qqq=0\n  local rrr=0\n  local\
    \ sss=0\n  local ttt=0\n  local uuu=0\n  local vvv=0\n  local www=0\n  local xxx=0\n\
    \  local yyy=0\n  local zzz=0\n\n}\n\ncandidate() {\n    strange_sort_list \"\
    $@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"1 2 3 4\") = \"1 4 2 3\"\
    \ ]]\n    [[ $(candidate \"5 6 7 8 9\") = \"5 9 6 8 7\" ]]\n    [[ $(candidate\
    \ \"1 2 3 4 5\") = \"1 5 2 4 3\" ]]\n    [[ $(candidate \"5 6 7 8 9 1\") = \"\
    1 9 5 8 6 7\" ]]\n    [[ $(candidate \"5 5 5 5\") = \"5 5 5 5\" ]]\n    [[ $(candidate\
    \ \"\") = \"\" ]]\n    [[ $(candidate \"1 2 3 4 5 6 7 8\") = \"1 8 2 7 3 6 4 5\"\
    \ ]]\n    [[ $(candidate \"0 2 2 2 5 5 -5 -5\") = \"-5 5 -5 5 0 2 2 2\" ]]\n \
    \   [[ $(candidate \"111111\") = \"111111\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660003084
- exit_code: 1
  program: "#!/bin/bash\n# Given list of integers, return list in strange order.\n\
    # Strange sorting, is when you start with the minimum value,\n# then maximum of\
    \ the remaining integers, then minimum and so on.\n# Examples:\n#\n# $1 is a space-separated\
    \ list\nstrange_sort_list() {\n    local -a list=($1)\n    local -a sorted=()\n\
    \    local -i i=0\n    local -i j=0\n    local -i k=0\n    local -i l=0\n    local\
    \ -i m=0\n    local -i n=0\n    local -i o=0\n    local -i p=0\n    local -i q=0\n\
    \    local -i r=0\n    local -i s=0\n    local -i t=0\n    local -i u=0\n    local\
    \ -i v=0\n    local -i w=0\n    local -i x=0\n    local -i y=0\n    local -i z=0\n\
    \    local -i a=0\n    local -i b=0\n    local -i c=0\n    local -i d=0\n    local\
    \ -i e=0\n    local -i f=0\n    local -i g=0\n    local -i h=0\n    local -i ii=0\n\
    \    local -i jj=0\n    local -i kk=0\n    local -i ll=0\n    local -i mm=0\n\
    \    local -i nn=0\n    local -i oo=0\n    local -i pp=0\n    local -i qq=0\n\
    \    local -i rr=0\n    local -i ss=0\n    local -i tt=0\n    local -i uu=0\n\
    \    local -i vv=0\n    local -i ww=0\n    local -i xx=0\n    local -i yy=0\n\
    \    local -i zz=0\n    local -i aa=0\n    local -i bb=0\n    local -i cc=0\n\
    \    local -i dd=0\n    local -i ee=0\n    local -i ff=0\n    local -i gg=0\n\
    \    local -i hh=0\n    local -i iii=0\n    local -i jjj=0\n    local -i kkk=0\n\
    \    local -i lll=0\n    local -i mmm=0\n    local -i nnn=0\n    local -i ooo=\n\
    }\n\ncandidate() {\n    strange_sort_list \"$@\"\n}\n\nset -e\nrun_test() {\n\
    \    [[ $(candidate \"1 2 3 4\") = \"1 4 2 3\" ]]\n    [[ $(candidate \"5 6 7\
    \ 8 9\") = \"5 9 6 8 7\" ]]\n    [[ $(candidate \"1 2 3 4 5\") = \"1 5 2 4 3\"\
    \ ]]\n    [[ $(candidate \"5 6 7 8 9 1\") = \"1 9 5 8 6 7\" ]]\n    [[ $(candidate\
    \ \"5 5 5 5\") = \"5 5 5 5\" ]]\n    [[ $(candidate \"\") = \"\" ]]\n    [[ $(candidate\
    \ \"1 2 3 4 5 6 7 8\") = \"1 8 2 7 3 6 4 5\" ]]\n    [[ $(candidate \"0 2 2 2\
    \ 5 5 -5 -5\") = \"-5 5 -5 5 0 2 2 2\" ]]\n    [[ $(candidate \"111111\") = \"\
    111111\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660003084
- exit_code: 1
  program: "#!/bin/bash\n# Given list of integers, return list in strange order.\n\
    # Strange sorting, is when you start with the minimum value,\n# then maximum of\
    \ the remaining integers, then minimum and so on.\n# Examples:\n#\n# $1 is a space-separated\
    \ list\nstrange_sort_list() {\n    local -a arr=(\"$@\")\n    local -a sorted\n\
    \    local -a min_max\n    local -i i=0\n    local -i j=0\n    local -i k=0\n\
    \    local -i l=0\n    local -i m=0\n    local -i n=0\n    local -i o=0\n    local\
    \ -i p=0\n    local -i q=0\n    local -i r=0\n    local -i s=0\n    local -i t=0\n\
    \    local -i u=0\n    local -i v=0\n    local -i w=0\n    local -i x=0\n    local\
    \ -i y=0\n    local -i z=0\n    local -i aa=0\n    local -i bb=0\n    local -i\
    \ cc=0\n    local -i dd=0\n    local -i ee=0\n    local -i ff=0\n    local -i\
    \ gg=0\n    local -i hh=0\n    local -i ii=0\n    local -i jj=0\n    local -i\
    \ kk=0\n    local -i ll=0\n    local -i mm=0\n    local -i nn=0\n    local -i\
    \ oo=0\n    local -i pp=0\n    local -i qq=0\n    local -i rr=0\n    local -i\
    \ ss=0\n    local -i tt=0\n    local -i uu=0\n    local -i vv=0\n    local -i\
    \ ww=0\n    local -i xx=0\n    local -i yy=0\n    local -i zz=0\n    local -i\
    \ aaa=0\n    local -i bbb=0\n    local -i ccc=0\n    local -i ddd=0\n    local\
    \ -i eee=0\n    local -i fff=0\n    local -i ggg=0\n    local -i hhh=0\n    local\
    \ -i iii=0\n    local -i jjj=0\n    local -i kkk=0\n    local -i lll=0\n    local\
    \ -i mmm=0\n   \n}\n\ncandidate() {\n    strange_sort_list \"$@\"\n}\n\nset -e\n\
    run_test() {\n    [[ $(candidate \"1 2 3 4\") = \"1 4 2 3\" ]]\n    [[ $(candidate\
    \ \"5 6 7 8 9\") = \"5 9 6 8 7\" ]]\n    [[ $(candidate \"1 2 3 4 5\") = \"1 5\
    \ 2 4 3\" ]]\n    [[ $(candidate \"5 6 7 8 9 1\") = \"1 9 5 8 6 7\" ]]\n    [[\
    \ $(candidate \"5 5 5 5\") = \"5 5 5 5\" ]]\n    [[ $(candidate \"\") = \"\" ]]\n\
    \    [[ $(candidate \"1 2 3 4 5 6 7 8\") = \"1 8 2 7 3 6 4 5\" ]]\n    [[ $(candidate\
    \ \"0 2 2 2 5 5 -5 -5\") = \"-5 5 -5 5 0 2 2 2\" ]]\n    [[ $(candidate \"111111\"\
    ) = \"111111\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660003084
- exit_code: 1
  program: "#!/bin/bash\n# Given list of integers, return list in strange order.\n\
    # Strange sorting, is when you start with the minimum value,\n# then maximum of\
    \ the remaining integers, then minimum and so on.\n# Examples:\n#\n# $1 is a space-separated\
    \ list\nstrange_sort_list() {\n  local list=\"$1\"\n  local min_value\n  local\
    \ max_value\n  local min_index\n  local max_index\n  local result=\"\"\n  local\
    \ i\n  local j\n  local k\n  local l\n  local m\n  local n\n  local o\n  local\
    \ p\n  local q\n  local r\n  local s\n  local t\n  local u\n  local v\n  local\
    \ w\n  local x\n  local y\n  local z\n  local aa\n  local bb\n  local cc\n  local\
    \ dd\n  local ee\n  local ff\n  local gg\n  local hh\n  local ii\n  local jj\n\
    \  local kk\n  local ll\n  local mm\n  local nn\n  local oo\n  local pp\n  local\
    \ qq\n  local rr\n  local ss\n  local tt\n  local uu\n  local vv\n  local ww\n\
    \  local xx\n  local yy\n  local zz\n  local aaa\n  local bbb\n  local ccc\n \
    \ local ddd\n  local eee\n  local fff\n  local ggg\n  local hhh\n  local iii\n\
    \  local jjj\n  local kkk\n  local lll\n  local mmm\n  local nnn\n  local ooo\n\
    \  local ppp\n  local qqq\n  local rrr\n  local sss\n  local ttt\n  local uuu\n\
    \  local vvv\n  local www\n  local xxx\n  local yyy\n  local zzz\n  local aaaa\n\
    \  local bbbb\n  local cccc\n  local dddd\n  local eeee\n  local ffff\n  local\
    \ gggg\n  local hhhh\n  local iiii\n  local jjjj\n  local kkkk\n  local llll\n\
    \  local mmmm\n  local nnnn\n  local oooo\n  local pppp\n  local qqqq\n  local\
    \ rrrr\n  local ssss\n  local tttt\n  local uuuu\n  local vvvv\n  local wwww\n\
    \  local xxxx\n  local yyyy\n  local zzzz\n  local aaaaa\n \n}\n\ncandidate()\
    \ {\n    strange_sort_list \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate\
    \ \"1 2 3 4\") = \"1 4 2 3\" ]]\n    [[ $(candidate \"5 6 7 8 9\") = \"5 9 6 8\
    \ 7\" ]]\n    [[ $(candidate \"1 2 3 4 5\") = \"1 5 2 4 3\" ]]\n    [[ $(candidate\
    \ \"5 6 7 8 9 1\") = \"1 9 5 8 6 7\" ]]\n    [[ $(candidate \"5 5 5 5\") = \"\
    5 5 5 5\" ]]\n    [[ $(candidate \"\") = \"\" ]]\n    [[ $(candidate \"1 2 3 4\
    \ 5 6 7 8\") = \"1 8 2 7 3 6 4 5\" ]]\n    [[ $(candidate \"0 2 2 2 5 5 -5 -5\"\
    ) = \"-5 5 -5 5 0 2 2 2\" ]]\n    [[ $(candidate \"111111\") = \"111111\" ]]\n\
    }\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660003084
- exit_code: 1
  program: "#!/bin/bash\n# Given list of integers, return list in strange order.\n\
    # Strange sorting, is when you start with the minimum value,\n# then maximum of\
    \ the remaining integers, then minimum and so on.\n# Examples:\n#\n# $1 is a space-separated\
    \ list\nstrange_sort_list() {\n    local list=\"$1\"\n    local sorted_list=\"\
    \"\n    local min_value=\"\"\n    local max_value=\"\"\n    local min_index=\"\
    \"\n    local max_index=\"\"\n    local i=\"\"\n    local j=\"\"\n    local k=\"\
    \"\n    local tmp=\"\"\n    local tmp_list=\"\"\n    local tmp_index=\"\"\n  \
    \  local tmp_value=\"\"\n    local tmp_value_index=\"\"\n    local tmp_value_index_list=\"\
    \"\n    local tmp_value_index_list_length=\"\"\n    local tmp_value_index_list_length_half=\"\
    \"\n    local tmp_value_index_list_length_half_plus_one=\"\"\n    local tmp_value_index_list_length_half_minus_one=\"\
    \"\n    local tmp_value_index_list_length_half_minus_one_value=\"\"\n    local\
    \ tmp_value_index_list_length_half_plus_one_value=\"\"\n    local tmp_value_index_list_length_half_minus_one_index=\"\
    \"\n    local tmp_value_index_list_length_half_plus_one_index=\"\"\n    local\
    \ tmp_value_index_list_length_half_minus_one_index_value=\"\"\n    local tmp_value_index_list_length_half_plus_one_index_value=\"\
    \"\n    local tmp_value_index_list_length_half_minus_one_index_value_index=\"\"\
    \n    local tmp_value_index_list_length_half_plus_one_index_value_index=\"\"\n\
    \    local tmp_value_index_list_length_half_minus_one_index_value_index_value=\"\
    \"\n    local tmp_value_index_list_length_half_plus_one_index_value_index_value=\"\
    \"\n    local tmp_value_index_list_length_half_minus_one_index_value_index_value_index=\"\
    \"\n    local tmp_value_index_list_length_half_plus_one_index_value_index_value_index=\"\
    \"\n    local tmp_value_index_list_length_half_minus_one_index_value_index_value_index_value=\"\
    \"\n    local tmp_value_index_list_length_half_plus_one_\n}\n\ncandidate() {\n\
    \    strange_sort_list \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"\
    1 2 3 4\") = \"1 4 2 3\" ]]\n    [[ $(candidate \"5 6 7 8 9\") = \"5 9 6 8 7\"\
    \ ]]\n    [[ $(candidate \"1 2 3 4 5\") = \"1 5 2 4 3\" ]]\n    [[ $(candidate\
    \ \"5 6 7 8 9 1\") = \"1 9 5 8 6 7\" ]]\n    [[ $(candidate \"5 5 5 5\") = \"\
    5 5 5 5\" ]]\n    [[ $(candidate \"\") = \"\" ]]\n    [[ $(candidate \"1 2 3 4\
    \ 5 6 7 8\") = \"1 8 2 7 3 6 4 5\" ]]\n    [[ $(candidate \"0 2 2 2 5 5 -5 -5\"\
    ) = \"-5 5 -5 5 0 2 2 2\" ]]\n    [[ $(candidate \"111111\") = \"111111\" ]]\n\
    }\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660003084
- exit_code: 1
  program: "#!/bin/bash\n# Given list of integers, return list in strange order.\n\
    # Strange sorting, is when you start with the minimum value,\n# then maximum of\
    \ the remaining integers, then minimum and so on.\n# Examples:\n#\n# $1 is a space-separated\
    \ list\nstrange_sort_list() {\n  local list=(\"$@\")\n  local sorted=()\n  local\
    \ min=${list[0]}\n  local max=${list[0]}\n  local min_index=0\n  local max_index=0\n\
    \  local i=0\n  local j=0\n  local k=0\n  local l=0\n  local m=0\n  local n=0\n\
    \  local o=0\n  local p=0\n  local q=0\n  local r=0\n  local s=0\n  local t=0\n\
    \  local u=0\n  local v=0\n  local w=0\n  local x=0\n  local y=0\n  local z=0\n\
    \  local aa=0\n  local bb=0\n  local cc=0\n  local dd=0\n  local ee=0\n  local\
    \ ff=0\n  local gg=0\n  local hh=0\n  local ii=0\n  local jj=0\n  local kk=0\n\
    \  local ll=0\n  local mm=0\n  local nn=0\n  local oo=0\n  local pp=0\n  local\
    \ qq=0\n  local rr=0\n  local ss=0\n  local tt=0\n  local uu=0\n  local vv=0\n\
    \  local ww=0\n  local xx=0\n  local yy=0\n  local zz=0\n  local aaa=0\n  local\
    \ bbb=0\n  local ccc=0\n  local ddd=0\n  local eee=0\n  local fff=0\n  local ggg=0\n\
    \  local hhh=0\n  local iii=0\n  local jjj=0\n  local kkk=0\n  local lll=0\n \
    \ local mmm=0\n  local nnn=0\n  local ooo=0\n  local ppp=0\n  local qqq=0\n  local\
    \ rrr=0\n  local sss=0\n  local ttt=0\n  local uuu=0\n  local vvv=0\n  local www=0\n\
    \  local xxx=0\n  local yyy=0\n  local zzz=0\n}\n\ncandidate() {\n    strange_sort_list\
    \ \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"1 2 3 4\") = \"1 4 2\
    \ 3\" ]]\n    [[ $(candidate \"5 6 7 8 9\") = \"5 9 6 8 7\" ]]\n    [[ $(candidate\
    \ \"1 2 3 4 5\") = \"1 5 2 4 3\" ]]\n    [[ $(candidate \"5 6 7 8 9 1\") = \"\
    1 9 5 8 6 7\" ]]\n    [[ $(candidate \"5 5 5 5\") = \"5 5 5 5\" ]]\n    [[ $(candidate\
    \ \"\") = \"\" ]]\n    [[ $(candidate \"1 2 3 4 5 6 7 8\") = \"1 8 2 7 3 6 4 5\"\
    \ ]]\n    [[ $(candidate \"0 2 2 2 5 5 -5 -5\") = \"-5 5 -5 5 0 2 2 2\" ]]\n \
    \   [[ $(candidate \"111111\") = \"111111\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660003084
- exit_code: 1
  program: "#!/bin/bash\n# Given list of integers, return list in strange order.\n\
    # Strange sorting, is when you start with the minimum value,\n# then maximum of\
    \ the remaining integers, then minimum and so on.\n# Examples:\n#\n# $1 is a space-separated\
    \ list\nstrange_sort_list() {\n  local list=($1)\n  local sorted=()\n  local min=${list[0]}\n\
    \  local max=${list[0]}\n  local min_index=0\n  local max_index=0\n  local i=0\n\
    \  local j=0\n  local k=0\n  local l=0\n  local m=0\n  local n=0\n  local o=0\n\
    \  local p=0\n  local q=0\n  local r=0\n  local s=0\n  local t=0\n  local u=0\n\
    \  local v=0\n  local w=0\n  local x=0\n  local y=0\n  local z=0\n  local aa=0\n\
    \  local bb=0\n  local cc=0\n  local dd=0\n  local ee=0\n  local ff=0\n  local\
    \ gg=0\n  local hh=0\n  local ii=0\n  local jj=0\n  local kk=0\n  local ll=0\n\
    \  local mm=0\n  local nn=0\n  local oo=0\n  local pp=0\n  local qq=0\n  local\
    \ rr=0\n  local ss=0\n  local tt=0\n  local uu=0\n  local vv=0\n  local ww=0\n\
    \  local xx=0\n  local yy=0\n  local zz=0\n  local aaa=0\n  local bbb=0\n  local\
    \ ccc=0\n  local ddd=0\n  local eee=0\n  local fff=0\n  local ggg=0\n  local hhh=0\n\
    \  local iii=0\n  local jjj=0\n  local kkk=0\n  local lll=0\n  local mmm=0\n \
    \ local nnn=0\n  local ooo=0\n  local ppp=0\n  local qqq=0\n  local rrr=0\n  local\
    \ sss=0\n  local ttt=0\n  local uuu=0\n  local vvv=0\n  local www=0\n  local xxx=0\n\
    \  local yyy=0\n  local zzz=0\n\n}\n\ncandidate() {\n    strange_sort_list \"\
    $@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"1 2 3 4\") = \"1 4 2 3\"\
    \ ]]\n    [[ $(candidate \"5 6 7 8 9\") = \"5 9 6 8 7\" ]]\n    [[ $(candidate\
    \ \"1 2 3 4 5\") = \"1 5 2 4 3\" ]]\n    [[ $(candidate \"5 6 7 8 9 1\") = \"\
    1 9 5 8 6 7\" ]]\n    [[ $(candidate \"5 5 5 5\") = \"5 5 5 5\" ]]\n    [[ $(candidate\
    \ \"\") = \"\" ]]\n    [[ $(candidate \"1 2 3 4 5 6 7 8\") = \"1 8 2 7 3 6 4 5\"\
    \ ]]\n    [[ $(candidate \"0 2 2 2 5 5 -5 -5\") = \"-5 5 -5 5 0 2 2 2\" ]]\n \
    \   [[ $(candidate \"111111\") = \"111111\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660003084
- exit_code: 1
  program: "#!/bin/bash\n# Given list of integers, return list in strange order.\n\
    # Strange sorting, is when you start with the minimum value,\n# then maximum of\
    \ the remaining integers, then minimum and so on.\n# Examples:\n#\n# $1 is a space-separated\
    \ list\nstrange_sort_list() {\n  local list=\"$1\"\n  local min=0\n  local max=0\n\
    \  local min_index=0\n  local max_index=0\n  local result=\"\"\n  local i=0\n\
    \  local j=0\n  local k=0\n  local len=0\n  local tmp=0\n  local tmp_index=0\n\
    \  local tmp_list=\"\"\n  local tmp_result=\"\"\n  local tmp_result_list=\"\"\n\
    \  local tmp_result_list_len=0\n  local tmp_result_list_len_half=0\n  local tmp_result_list_len_half_ceil=0\n\
    \  local tmp_result_list_len_half_floor=0\n  local tmp_result_list_len_half_ceil_index=0\n\
    \  local tmp_result_list_len_half_floor_index=0\n  local tmp_result_list_len_half_ceil_value=0\n\
    \  local tmp_result_list_len_half_floor_value=0\n  local tmp_result_list_len_half_ceil_value_index=0\n\
    \  local tmp_result_list_len_half_floor_value_index=0\n  local tmp_result_list_len_half_ceil_value_index_tmp=0\n\
    \  local tmp_result_list_len_half_floor_value_index_tmp=0\n  local tmp_result_list_len_half_ceil_value_index_tmp_list=\"\
    \"\n  local tmp_result_list_len_half_floor_value_index_tmp_list=\"\"\n  local\
    \ tmp_result_list_len_half_ceil_value_index_tmp_list_len=0\n  local tmp_result_list_len_half_floor_value_index_tmp_list_len=0\n\
    \  local tmp_result_list_len_half_ceil_value_index_tmp_list_len_half=0\n  local\
    \ tmp_result_list_len_half_floor_value_index_tmp_list_len_half=0\n  local tmp_result_list_len_half_ceil_value_index_tmp_list_len_half_ceil=0\n\
    \ \n}\n\ncandidate() {\n    strange_sort_list \"$@\"\n}\n\nset -e\nrun_test()\
    \ {\n    [[ $(candidate \"1 2 3 4\") = \"1 4 2 3\" ]]\n    [[ $(candidate \"5\
    \ 6 7 8 9\") = \"5 9 6 8 7\" ]]\n    [[ $(candidate \"1 2 3 4 5\") = \"1 5 2 4\
    \ 3\" ]]\n    [[ $(candidate \"5 6 7 8 9 1\") = \"1 9 5 8 6 7\" ]]\n    [[ $(candidate\
    \ \"5 5 5 5\") = \"5 5 5 5\" ]]\n    [[ $(candidate \"\") = \"\" ]]\n    [[ $(candidate\
    \ \"1 2 3 4 5 6 7 8\") = \"1 8 2 7 3 6 4 5\" ]]\n    [[ $(candidate \"0 2 2 2\
    \ 5 5 -5 -5\") = \"-5 5 -5 5 0 2 2 2\" ]]\n    [[ $(candidate \"111111\") = \"\
    111111\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660003084
- exit_code: 1
  program: "#!/bin/bash\n# Given list of integers, return list in strange order.\n\
    # Strange sorting, is when you start with the minimum value,\n# then maximum of\
    \ the remaining integers, then minimum and so on.\n# Examples:\n#\n# $1 is a space-separated\
    \ list\nstrange_sort_list() {\n    local -a list=($1)\n    local -a sorted_list=()\n\
    \    local -i i=0\n    local -i j=0\n    local -i k=0\n    local -i l=0\n    local\
    \ -i m=0\n    local -i n=0\n    local -i o=0\n    local -i p=0\n    local -i q=0\n\
    \    local -i r=0\n    local -i s=0\n    local -i t=0\n    local -i u=0\n    local\
    \ -i v=0\n    local -i w=0\n    local -i x=0\n    local -i y=0\n    local -i z=0\n\
    \    local -i aa=0\n    local -i bb=0\n    local -i cc=0\n    local -i dd=0\n\
    \    local -i ee=0\n    local -i ff=0\n    local -i gg=0\n    local -i hh=0\n\
    \    local -i ii=0\n    local -i jj=0\n    local -i kk=0\n    local -i ll=0\n\
    \    local -i mm=0\n    local -i nn=0\n    local -i oo=0\n    local -i pp=0\n\
    \    local -i qq=0\n    local -i rr=0\n    local -i ss=0\n    local -i tt=0\n\
    \    local -i uu=0\n    local -i vv=0\n    local -i ww=0\n    local -i xx=0\n\
    \    local -i yy=0\n    local -i zz=0\n    local -i aaa=0\n    local -i bbb=0\n\
    \    local -i ccc=0\n    local -i ddd=0\n    local -i eee=0\n    local -i fff=0\n\
    \    local -i ggg=0\n    local -i hhh=0\n    local -i iii=0\n    local -i jjj=0\n\
    \    local -i kkk=0\n    local -i lll=0\n    local -i mmm=0\n    local -i nnn\n\
    }\n\ncandidate() {\n    strange_sort_list \"$@\"\n}\n\nset -e\nrun_test() {\n\
    \    [[ $(candidate \"1 2 3 4\") = \"1 4 2 3\" ]]\n    [[ $(candidate \"5 6 7\
    \ 8 9\") = \"5 9 6 8 7\" ]]\n    [[ $(candidate \"1 2 3 4 5\") = \"1 5 2 4 3\"\
    \ ]]\n    [[ $(candidate \"5 6 7 8 9 1\") = \"1 9 5 8 6 7\" ]]\n    [[ $(candidate\
    \ \"5 5 5 5\") = \"5 5 5 5\" ]]\n    [[ $(candidate \"\") = \"\" ]]\n    [[ $(candidate\
    \ \"1 2 3 4 5 6 7 8\") = \"1 8 2 7 3 6 4 5\" ]]\n    [[ $(candidate \"0 2 2 2\
    \ 5 5 -5 -5\") = \"-5 5 -5 5 0 2 2 2\" ]]\n    [[ $(candidate \"111111\") = \"\
    111111\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660003084
- exit_code: 1
  program: "#!/bin/bash\n# Given list of integers, return list in strange order.\n\
    # Strange sorting, is when you start with the minimum value,\n# then maximum of\
    \ the remaining integers, then minimum and so on.\n# Examples:\n#\n# $1 is a space-separated\
    \ list\nstrange_sort_list() {\n  local list=$1\n  local min=0\n  local max=0\n\
    \  local result=\"\"\n  local i=0\n  local j=0\n  local k=0\n  local l=0\n  local\
    \ m=0\n  local n=0\n  local o=0\n  local p=0\n  local q=0\n  local r=0\n  local\
    \ s=0\n  local t=0\n  local u=0\n  local v=0\n  local w=0\n  local x=0\n  local\
    \ y=0\n  local z=0\n  local aa=0\n  local ab=0\n  local ac=0\n  local ad=0\n \
    \ local ae=0\n  local af=0\n  local ag=0\n  local ah=0\n  local ai=0\n  local\
    \ aj=0\n  local ak=0\n  local al=0\n  local am=0\n  local an=0\n  local ao=0\n\
    \  local ap=0\n  local aq=0\n  local ar=0\n  local as=0\n  local at=0\n  local\
    \ au=0\n  local av=0\n  local aw=0\n  local ax=0\n  local ay=0\n  local az=0\n\
    \  local ba=0\n  local bb=0\n  local bc=0\n  local bd=0\n  local be=0\n  local\
    \ bf=0\n  local bg=0\n  local bh=0\n  local bi=0\n  local bj=0\n  local bk=0\n\
    \  local bl=0\n  local bm=0\n  local bn=0\n  local bo=0\n  local bp=0\n  local\
    \ bq=0\n  local br=0\n  local bs=0\n  local bt=0\n  local bu=0\n  local bv=0\n\
    \  local bw=0\n  local bx=0\n  local by=0\n  local bz=0\n  local ca=0\n  local\
    \ cb=0\n  local cc=0\n  local cd=0\n  local ce=0\n  local cf=0\n  local cg=0\n\
    \ \n}\n\ncandidate() {\n    strange_sort_list \"$@\"\n}\n\nset -e\nrun_test()\
    \ {\n    [[ $(candidate \"1 2 3 4\") = \"1 4 2 3\" ]]\n    [[ $(candidate \"5\
    \ 6 7 8 9\") = \"5 9 6 8 7\" ]]\n    [[ $(candidate \"1 2 3 4 5\") = \"1 5 2 4\
    \ 3\" ]]\n    [[ $(candidate \"5 6 7 8 9 1\") = \"1 9 5 8 6 7\" ]]\n    [[ $(candidate\
    \ \"5 5 5 5\") = \"5 5 5 5\" ]]\n    [[ $(candidate \"\") = \"\" ]]\n    [[ $(candidate\
    \ \"1 2 3 4 5 6 7 8\") = \"1 8 2 7 3 6 4 5\" ]]\n    [[ $(candidate \"0 2 2 2\
    \ 5 5 -5 -5\") = \"-5 5 -5 5 0 2 2 2\" ]]\n    [[ $(candidate \"111111\") = \"\
    111111\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660003084
- exit_code: 1
  program: "#!/bin/bash\n# Given list of integers, return list in strange order.\n\
    # Strange sorting, is when you start with the minimum value,\n# then maximum of\
    \ the remaining integers, then minimum and so on.\n# Examples:\n#\n# $1 is a space-separated\
    \ list\nstrange_sort_list() {\n  local -a list=($1)\n  local -a result=()\n  local\
    \ -i i=0\n  local -i j=0\n  local -i k=0\n  local -i l=0\n  local -i m=0\n  local\
    \ -i n=0\n  local -i o=0\n  local -i p=0\n  local -i q=0\n  local -i r=0\n  local\
    \ -i s=0\n  local -i t=0\n  local -i u=0\n  local -i v=0\n  local -i w=0\n  local\
    \ -i x=0\n  local -i y=0\n  local -i z=0\n  local -i aa=0\n  local -i bb=0\n \
    \ local -i cc=0\n  local -i dd=0\n  local -i ee=0\n  local -i ff=0\n  local -i\
    \ gg=0\n  local -i hh=0\n  local -i ii=0\n  local -i jj=0\n  local -i kk=0\n \
    \ local -i ll=0\n  local -i mm=0\n  local -i nn=0\n  local -i oo=0\n  local -i\
    \ pp=0\n  local -i qq=0\n  local -i rr=0\n  local -i ss=0\n  local -i tt=0\n \
    \ local -i uu=0\n  local -i vv=0\n  local -i ww=0\n  local -i xx=0\n  local -i\
    \ yy=0\n  local -i zz=0\n  local -i aaa=0\n  local -i bbb=0\n  local -i ccc=0\n\
    \  local -i ddd=0\n  local -i eee=0\n  local -i fff=0\n  local -i ggg=0\n  local\
    \ -i hhh=0\n  local -i iii=0\n  local -i jjj=0\n  local -i kkk=0\n  local -i lll=0\n\
    \  local -i mmm=0\n  local -i nnn=0\n}\n\ncandidate() {\n    strange_sort_list\
    \ \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"1 2 3 4\") = \"1 4 2\
    \ 3\" ]]\n    [[ $(candidate \"5 6 7 8 9\") = \"5 9 6 8 7\" ]]\n    [[ $(candidate\
    \ \"1 2 3 4 5\") = \"1 5 2 4 3\" ]]\n    [[ $(candidate \"5 6 7 8 9 1\") = \"\
    1 9 5 8 6 7\" ]]\n    [[ $(candidate \"5 5 5 5\") = \"5 5 5 5\" ]]\n    [[ $(candidate\
    \ \"\") = \"\" ]]\n    [[ $(candidate \"1 2 3 4 5 6 7 8\") = \"1 8 2 7 3 6 4 5\"\
    \ ]]\n    [[ $(candidate \"0 2 2 2 5 5 -5 -5\") = \"-5 5 -5 5 0 2 2 2\" ]]\n \
    \   [[ $(candidate \"111111\") = \"111111\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660003084
- exit_code: 1
  program: "#!/bin/bash\n# Given list of integers, return list in strange order.\n\
    # Strange sorting, is when you start with the minimum value,\n# then maximum of\
    \ the remaining integers, then minimum and so on.\n# Examples:\n#\n# $1 is a space-separated\
    \ list\nstrange_sort_list() {\n  local -a list=($1)\n  local -a sorted=()\n  local\
    \ -i i=0\n  local -i j=0\n  local -i k=0\n  local -i l=0\n  local -i m=0\n  local\
    \ -i n=0\n  local -i o=0\n  local -i p=0\n  local -i q=0\n  local -i r=0\n  local\
    \ -i s=0\n  local -i t=0\n  local -i u=0\n  local -i v=0\n  local -i w=0\n  local\
    \ -i x=0\n  local -i y=0\n  local -i z=0\n  local -i aa=0\n  local -i bb=0\n \
    \ local -i cc=0\n  local -i dd=0\n  local -i ee=0\n  local -i ff=0\n  local -i\
    \ gg=0\n  local -i hh=0\n  local -i ii=0\n  local -i jj=0\n  local -i kk=0\n \
    \ local -i ll=0\n  local -i mm=0\n  local -i nn=0\n  local -i oo=0\n  local -i\
    \ pp=0\n  local -i qq=0\n  local -i rr=0\n  local -i ss=0\n  local -i tt=0\n \
    \ local -i uu=0\n  local -i vv=0\n  local -i ww=0\n  local -i xx=0\n  local -i\
    \ yy=0\n  local -i zz=0\n  local -i aaa=0\n  local -i bbb=0\n  local -i ccc=0\n\
    \  local -i ddd=0\n  local -i eee=0\n  local -i fff=0\n  local -i ggg=0\n  local\
    \ -i hhh=0\n  local -i iii=0\n  local -i jjj=0\n  local -i kkk=0\n  local -i lll=0\n\
    \  local -i mmm=0\n  local -i nnn=0\n}\n\ncandidate() {\n    strange_sort_list\
    \ \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"1 2 3 4\") = \"1 4 2\
    \ 3\" ]]\n    [[ $(candidate \"5 6 7 8 9\") = \"5 9 6 8 7\" ]]\n    [[ $(candidate\
    \ \"1 2 3 4 5\") = \"1 5 2 4 3\" ]]\n    [[ $(candidate \"5 6 7 8 9 1\") = \"\
    1 9 5 8 6 7\" ]]\n    [[ $(candidate \"5 5 5 5\") = \"5 5 5 5\" ]]\n    [[ $(candidate\
    \ \"\") = \"\" ]]\n    [[ $(candidate \"1 2 3 4 5 6 7 8\") = \"1 8 2 7 3 6 4 5\"\
    \ ]]\n    [[ $(candidate \"0 2 2 2 5 5 -5 -5\") = \"-5 5 -5 5 0 2 2 2\" ]]\n \
    \   [[ $(candidate \"111111\") = \"111111\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660003084
- exit_code: 1
  program: "#!/bin/bash\n# Given list of integers, return list in strange order.\n\
    # Strange sorting, is when you start with the minimum value,\n# then maximum of\
    \ the remaining integers, then minimum and so on.\n# Examples:\n#\n# $1 is a space-separated\
    \ list\nstrange_sort_list() {\n    local list=$1\n    local sorted_list=()\n \
    \   local min=0\n    local max=0\n    local i=0\n    local j=0\n    local k=0\n\
    \    local l=0\n    local m=0\n    local n=0\n    local o=0\n    local p=0\n \
    \   local q=0\n    local r=0\n    local s=0\n    local t=0\n    local u=0\n  \
    \  local v=0\n    local w=0\n    local x=0\n    local y=0\n    local z=0\n   \
    \ local aa=0\n    local bb=0\n    local cc=0\n    local dd=0\n    local ee=0\n\
    \    local ff=0\n    local gg=0\n    local hh=0\n    local ii=0\n    local jj=0\n\
    \    local kk=0\n    local ll=0\n    local mm=0\n    local nn=0\n    local oo=0\n\
    \    local pp=0\n    local qq=0\n    local rr=0\n    local ss=0\n    local tt=0\n\
    \    local uu=0\n    local vv=0\n    local ww=0\n    local xx=0\n    local yy=0\n\
    \    local zz=0\n    local aaa=0\n    local bbb=0\n    local ccc=0\n    local\
    \ ddd=0\n    local eee=0\n    local fff=0\n    local ggg=0\n    local hhh=0\n\
    \    local iii=0\n    local jjj=0\n    local kkk=0\n    local lll=0\n    local\
    \ mmm=0\n    local nnn=0\n    local ooo=0\n    local ppp=0\n    local qqq=0\n\
    \    local rrr=0\n    local sss=0\n    local ttt=0\n    local uuu=0\n    local\
    \ vvv=0\n    local www=0\n    local xxx=0\n    local yyy=0\n    local zzz=0\n\
    \    local aaaa=0\n    local bbbb=0\n    local cccc=0\n   \n}\n\ncandidate() {\n\
    \    strange_sort_list \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"\
    1 2 3 4\") = \"1 4 2 3\" ]]\n    [[ $(candidate \"5 6 7 8 9\") = \"5 9 6 8 7\"\
    \ ]]\n    [[ $(candidate \"1 2 3 4 5\") = \"1 5 2 4 3\" ]]\n    [[ $(candidate\
    \ \"5 6 7 8 9 1\") = \"1 9 5 8 6 7\" ]]\n    [[ $(candidate \"5 5 5 5\") = \"\
    5 5 5 5\" ]]\n    [[ $(candidate \"\") = \"\" ]]\n    [[ $(candidate \"1 2 3 4\
    \ 5 6 7 8\") = \"1 8 2 7 3 6 4 5\" ]]\n    [[ $(candidate \"0 2 2 2 5 5 -5 -5\"\
    ) = \"-5 5 -5 5 0 2 2 2\" ]]\n    [[ $(candidate \"111111\") = \"111111\" ]]\n\
    }\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660003084
- exit_code: 1
  program: "#!/bin/bash\n# Given list of integers, return list in strange order.\n\
    # Strange sorting, is when you start with the minimum value,\n# then maximum of\
    \ the remaining integers, then minimum and so on.\n# Examples:\n#\n# $1 is a space-separated\
    \ list\nstrange_sort_list() {\n    local list=($1)\n    local sorted=()\n    local\
    \ min=${list[0]}\n    local max=${list[0]}\n    local min_index=0\n    local max_index=0\n\
    \    local i=0\n    local j=0\n    local k=0\n    local l=0\n    local m=0\n \
    \   local n=0\n    local o=0\n    local p=0\n    local q=0\n    local r=0\n  \
    \  local s=0\n    local t=0\n    local u=0\n    local v=0\n    local w=0\n   \
    \ local x=0\n    local y=0\n    local z=0\n    local aa=0\n    local bb=0\n  \
    \  local cc=0\n    local dd=0\n    local ee=0\n    local ff=0\n    local gg=0\n\
    \    local hh=0\n    local ii=0\n    local jj=0\n    local kk=0\n    local ll=0\n\
    \    local mm=0\n    local nn=0\n    local oo=0\n    local pp=0\n    local qq=0\n\
    \    local rr=0\n    local ss=0\n    local tt=0\n    local uu=0\n    local vv=0\n\
    \    local ww=0\n    local xx=0\n    local yy=0\n    local zz=0\n    local aaa=0\n\
    \    local bbb=0\n    local ccc=0\n    local ddd=0\n    local eee=0\n    local\
    \ fff=0\n    local ggg=0\n    local hhh=0\n    local iii=0\n    local jjj=0\n\
    \    local kkk=0\n    local lll=0\n    local mmm=0\n    local nnn=0\n    local\
    \ ooo=0\n    local ppp=0\n    local qqq=0\n    local rrr=0\n    local sss=0\n\
    \    local ttt=0\n    local uuu=0\n    local vvv=0\n    local www=0\n    local\
    \ xxx=0\n    local yyy=0\n    local zzz=0\n\n}\n\ncandidate() {\n    strange_sort_list\
    \ \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"1 2 3 4\") = \"1 4 2\
    \ 3\" ]]\n    [[ $(candidate \"5 6 7 8 9\") = \"5 9 6 8 7\" ]]\n    [[ $(candidate\
    \ \"1 2 3 4 5\") = \"1 5 2 4 3\" ]]\n    [[ $(candidate \"5 6 7 8 9 1\") = \"\
    1 9 5 8 6 7\" ]]\n    [[ $(candidate \"5 5 5 5\") = \"5 5 5 5\" ]]\n    [[ $(candidate\
    \ \"\") = \"\" ]]\n    [[ $(candidate \"1 2 3 4 5 6 7 8\") = \"1 8 2 7 3 6 4 5\"\
    \ ]]\n    [[ $(candidate \"0 2 2 2 5 5 -5 -5\") = \"-5 5 -5 5 0 2 2 2\" ]]\n \
    \   [[ $(candidate \"111111\") = \"111111\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660003083
- exit_code: 1
  program: "#!/bin/bash\n# Given list of integers, return list in strange order.\n\
    # Strange sorting, is when you start with the minimum value,\n# then maximum of\
    \ the remaining integers, then minimum and so on.\n# Examples:\n#\n# $1 is a space-separated\
    \ list\nstrange_sort_list() {\n    local list=($1)\n    local sorted=()\n    local\
    \ min=${list[0]}\n    local max=${list[0]}\n    local i=0\n    local j=0\n   \
    \ local k=0\n    local l=0\n    local m=0\n    local n=0\n    local o=0\n    local\
    \ p=0\n    local q=0\n    local r=0\n    local s=0\n    local t=0\n    local u=0\n\
    \    local v=0\n    local w=0\n    local x=0\n    local y=0\n    local z=0\n \
    \   local aa=0\n    local bb=0\n    local cc=0\n    local dd=0\n    local ee=0\n\
    \    local ff=0\n    local gg=0\n    local hh=0\n    local ii=0\n    local jj=0\n\
    \    local kk=0\n    local ll=0\n    local mm=0\n    local nn=0\n    local oo=0\n\
    \    local pp=0\n    local qq=0\n    local rr=0\n    local ss=0\n    local tt=0\n\
    \    local uu=0\n    local vv=0\n    local ww=0\n    local xx=0\n    local yy=0\n\
    \    local zz=0\n    local aaa=0\n    local bbb=0\n    local ccc=0\n    local\
    \ ddd=0\n    local eee=0\n    local fff=0\n    local ggg=0\n    local hhh=0\n\
    \    local iii=0\n    local jjj=0\n    local kkk=0\n    local lll=0\n    local\
    \ mmm=0\n    local nnn=0\n    local ooo=0\n    local ppp=0\n    local qqq=0\n\
    \    local rrr=0\n    local sss=0\n    local ttt=0\n    local uuu=0\n    local\
    \ vvv=0\n    local www=0\n    local xxx=0\n    local yyy=0\n    local zzz=0\n\
    \    local aaaa=0\n    local bbbb=0\n   \n}\n\ncandidate() {\n    strange_sort_list\
    \ \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"1 2 3 4\") = \"1 4 2\
    \ 3\" ]]\n    [[ $(candidate \"5 6 7 8 9\") = \"5 9 6 8 7\" ]]\n    [[ $(candidate\
    \ \"1 2 3 4 5\") = \"1 5 2 4 3\" ]]\n    [[ $(candidate \"5 6 7 8 9 1\") = \"\
    1 9 5 8 6 7\" ]]\n    [[ $(candidate \"5 5 5 5\") = \"5 5 5 5\" ]]\n    [[ $(candidate\
    \ \"\") = \"\" ]]\n    [[ $(candidate \"1 2 3 4 5 6 7 8\") = \"1 8 2 7 3 6 4 5\"\
    \ ]]\n    [[ $(candidate \"0 2 2 2 5 5 -5 -5\") = \"-5 5 -5 5 0 2 2 2\" ]]\n \
    \   [[ $(candidate \"111111\") = \"111111\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660003083
- exit_code: 1
  program: "#!/bin/bash\n# Given list of integers, return list in strange order.\n\
    # Strange sorting, is when you start with the minimum value,\n# then maximum of\
    \ the remaining integers, then minimum and so on.\n# Examples:\n#\n# $1 is a space-separated\
    \ list\nstrange_sort_list() {\n    local list=($1)\n    local sorted=()\n    local\
    \ min=${list[0]}\n    local max=${list[0]}\n    local min_index=0\n    local max_index=0\n\
    \    local i=0\n    local j=0\n    local k=0\n    local l=0\n    local m=0\n \
    \   local n=0\n    local o=0\n    local p=0\n    local q=0\n    local r=0\n  \
    \  local s=0\n    local t=0\n    local u=0\n    local v=0\n    local w=0\n   \
    \ local x=0\n    local y=0\n    local z=0\n    local aa=0\n    local bb=0\n  \
    \  local cc=0\n    local dd=0\n    local ee=0\n    local ff=0\n    local gg=0\n\
    \    local hh=0\n    local ii=0\n    local jj=0\n    local kk=0\n    local ll=0\n\
    \    local mm=0\n    local nn=0\n    local oo=0\n    local pp=0\n    local qq=0\n\
    \    local rr=0\n    local ss=0\n    local tt=0\n    local uu=0\n    local vv=0\n\
    \    local ww=0\n    local xx=0\n    local yy=0\n    local zz=0\n    local aaa=0\n\
    \    local bbb=0\n    local ccc=0\n    local ddd=0\n    local eee=0\n    local\
    \ fff=0\n    local ggg=0\n    local hhh=0\n    local iii=0\n    local jjj=0\n\
    \    local kkk=0\n    local lll=0\n    local mmm=0\n    local nnn=0\n    local\
    \ ooo=0\n    local ppp=0\n    local qqq=0\n    local rrr=0\n    local sss=0\n\
    \    local ttt=0\n    local uuu=0\n    local vvv=0\n    local www=0\n    local\
    \ xxx=0\n    local yyy=0\n    local zzz=0\n\n}\n\ncandidate() {\n    strange_sort_list\
    \ \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"1 2 3 4\") = \"1 4 2\
    \ 3\" ]]\n    [[ $(candidate \"5 6 7 8 9\") = \"5 9 6 8 7\" ]]\n    [[ $(candidate\
    \ \"1 2 3 4 5\") = \"1 5 2 4 3\" ]]\n    [[ $(candidate \"5 6 7 8 9 1\") = \"\
    1 9 5 8 6 7\" ]]\n    [[ $(candidate \"5 5 5 5\") = \"5 5 5 5\" ]]\n    [[ $(candidate\
    \ \"\") = \"\" ]]\n    [[ $(candidate \"1 2 3 4 5 6 7 8\") = \"1 8 2 7 3 6 4 5\"\
    \ ]]\n    [[ $(candidate \"0 2 2 2 5 5 -5 -5\") = \"-5 5 -5 5 0 2 2 2\" ]]\n \
    \   [[ $(candidate \"111111\") = \"111111\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660003083
- exit_code: 1
  program: "#!/bin/bash\n# Given list of integers, return list in strange order.\n\
    # Strange sorting, is when you start with the minimum value,\n# then maximum of\
    \ the remaining integers, then minimum and so on.\n# Examples:\n#\n# $1 is a space-separated\
    \ list\nstrange_sort_list() {\n    local -a list=($1)\n    local -a sorted\n \
    \   local -i i=0\n    local -i j=0\n    local -i k=0\n    local -i l=0\n    local\
    \ -i m=0\n    local -i n=0\n    local -i o=0\n    local -i p=0\n    local -i q=0\n\
    \    local -i r=0\n    local -i s=0\n    local -i t=0\n    local -i u=0\n    local\
    \ -i v=0\n    local -i w=0\n    local -i x=0\n    local -i y=0\n    local -i z=0\n\
    \    local -i aa=0\n    local -i bb=0\n    local -i cc=0\n    local -i dd=0\n\
    \    local -i ee=0\n    local -i ff=0\n    local -i gg=0\n    local -i hh=0\n\
    \    local -i ii=0\n    local -i jj=0\n    local -i kk=0\n    local -i ll=0\n\
    \    local -i mm=0\n    local -i nn=0\n    local -i oo=0\n    local -i pp=0\n\
    \    local -i qq=0\n    local -i rr=0\n    local -i ss=0\n    local -i tt=0\n\
    \    local -i uu=0\n    local -i vv=0\n    local -i ww=0\n    local -i xx=0\n\
    \    local -i yy=0\n    local -i zz=0\n    local -i aaa=0\n    local -i bbb=0\n\
    \    local -i ccc=0\n    local -i ddd=0\n    local -i eee=0\n    local -i fff=0\n\
    \    local -i ggg=0\n    local -i hhh=0\n    local -i iii=0\n    local -i jjj=0\n\
    \    local -i kkk=0\n    local -i lll=0\n    local -i mmm=0\n    local -i nnn=0\n\
    \   \n}\n\ncandidate() {\n    strange_sort_list \"$@\"\n}\n\nset -e\nrun_test()\
    \ {\n    [[ $(candidate \"1 2 3 4\") = \"1 4 2 3\" ]]\n    [[ $(candidate \"5\
    \ 6 7 8 9\") = \"5 9 6 8 7\" ]]\n    [[ $(candidate \"1 2 3 4 5\") = \"1 5 2 4\
    \ 3\" ]]\n    [[ $(candidate \"5 6 7 8 9 1\") = \"1 9 5 8 6 7\" ]]\n    [[ $(candidate\
    \ \"5 5 5 5\") = \"5 5 5 5\" ]]\n    [[ $(candidate \"\") = \"\" ]]\n    [[ $(candidate\
    \ \"1 2 3 4 5 6 7 8\") = \"1 8 2 7 3 6 4 5\" ]]\n    [[ $(candidate \"0 2 2 2\
    \ 5 5 -5 -5\") = \"-5 5 -5 5 0 2 2 2\" ]]\n    [[ $(candidate \"111111\") = \"\
    111111\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660003084
- exit_code: 1
  program: "#!/bin/bash\n# Given list of integers, return list in strange order.\n\
    # Strange sorting, is when you start with the minimum value,\n# then maximum of\
    \ the remaining integers, then minimum and so on.\n# Examples:\n#\n# $1 is a space-separated\
    \ list\nstrange_sort_list() {\n  local list=\"$1\"\n  local sorted_list=\"\"\n\
    \  local list_size=$(echo \"$list\" | wc -w)\n  local i=0\n  while [ $i -lt $list_size\
    \ ]; do\n    local min=$(echo \"$list\" | tr ' ' '\\n' | sort -n | head -n 1)\n\
    \    local max=$(echo \"$list\" | tr ' ' '\\n' | sort -n | tail -n 1)\n    list=$(echo\
    \ \"$list\" | tr ' ' '\\n' | grep -v \"$min\" | grep -v \"$max\" | tr '\\n' '\
    \ ')\n    if [ $((i % 2)) -eq 0 ]; then\n      sorted_list=\"$sorted_list $min\"\
    \n    else\n      sorted_list=\"$sorted_list $max\"\n    fi\n    i=$((i + 1))\n\
    \  done\n  echo \"$sorted_list\"\n}\n\ncandidate() {\n    strange_sort_list \"\
    $@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"1 2 3 4\") = \"1 4 2 3\"\
    \ ]]\n    [[ $(candidate \"5 6 7 8 9\") = \"5 9 6 8 7\" ]]\n    [[ $(candidate\
    \ \"1 2 3 4 5\") = \"1 5 2 4 3\" ]]\n    [[ $(candidate \"5 6 7 8 9 1\") = \"\
    1 9 5 8 6 7\" ]]\n    [[ $(candidate \"5 5 5 5\") = \"5 5 5 5\" ]]\n    [[ $(candidate\
    \ \"\") = \"\" ]]\n    [[ $(candidate \"1 2 3 4 5 6 7 8\") = \"1 8 2 7 3 6 4 5\"\
    \ ]]\n    [[ $(candidate \"0 2 2 2 5 5 -5 -5\") = \"-5 5 -5 5 0 2 2 2\" ]]\n \
    \   [[ $(candidate \"111111\") = \"111111\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660003084
- exit_code: 1
  program: "#!/bin/bash\n# Given list of integers, return list in strange order.\n\
    # Strange sorting, is when you start with the minimum value,\n# then maximum of\
    \ the remaining integers, then minimum and so on.\n# Examples:\n#\n# $1 is a space-separated\
    \ list\nstrange_sort_list() {\n    local -a list=($1)\n    local -a sorted=()\n\
    \    local min=${list[0]}\n    local max=${list[0]}\n    local min_index=0\n \
    \   local max_index=0\n    local i=0\n    local j=0\n    local k=0\n    local\
    \ l=0\n    local m=0\n    local n=0\n    local o=0\n    local p=0\n    local q=0\n\
    \    local r=0\n    local s=0\n    local t=0\n    local u=0\n    local v=0\n \
    \   local w=0\n    local x=0\n    local y=0\n    local z=0\n    local aa=0\n \
    \   local bb=0\n    local cc=0\n    local dd=0\n    local ee=0\n    local ff=0\n\
    \    local gg=0\n    local hh=0\n    local ii=0\n    local jj=0\n    local kk=0\n\
    \    local ll=0\n    local mm=0\n    local nn=0\n    local oo=0\n    local pp=0\n\
    \    local qq=0\n    local rr=0\n    local ss=0\n    local tt=0\n    local uu=0\n\
    \    local vv=0\n    local ww=0\n    local xx=0\n    local yy=0\n    local zz=0\n\
    \    local aaa=0\n    local bbb=0\n    local ccc=0\n    local ddd=0\n    local\
    \ eee=0\n    local fff=0\n    local ggg=0\n    local hhh=0\n    local iii=0\n\
    \    local jjj=0\n    local kkk=0\n    local lll=0\n    local mmm=0\n    local\
    \ nnn=0\n    local ooo=0\n    local ppp=0\n    local qqq=0\n    local rrr=0\n\
    \    local sss=0\n    local ttt=0\n    local uuu=0\n    local vvv=0\n    local\
    \ www=0\n    local xxx=0\n    local yyy=0\n    local z\n}\n\ncandidate() {\n \
    \   strange_sort_list \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"\
    1 2 3 4\") = \"1 4 2 3\" ]]\n    [[ $(candidate \"5 6 7 8 9\") = \"5 9 6 8 7\"\
    \ ]]\n    [[ $(candidate \"1 2 3 4 5\") = \"1 5 2 4 3\" ]]\n    [[ $(candidate\
    \ \"5 6 7 8 9 1\") = \"1 9 5 8 6 7\" ]]\n    [[ $(candidate \"5 5 5 5\") = \"\
    5 5 5 5\" ]]\n    [[ $(candidate \"\") = \"\" ]]\n    [[ $(candidate \"1 2 3 4\
    \ 5 6 7 8\") = \"1 8 2 7 3 6 4 5\" ]]\n    [[ $(candidate \"0 2 2 2 5 5 -5 -5\"\
    ) = \"-5 5 -5 5 0 2 2 2\" ]]\n    [[ $(candidate \"111111\") = \"111111\" ]]\n\
    }\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660003084
- exit_code: 1
  program: "#!/bin/bash\n# Given list of integers, return list in strange order.\n\
    # Strange sorting, is when you start with the minimum value,\n# then maximum of\
    \ the remaining integers, then minimum and so on.\n# Examples:\n#\n# $1 is a space-separated\
    \ list\nstrange_sort_list() {\n  local list=($1)\n  local result=()\n  local min=${list[0]}\n\
    \  local max=${list[0]}\n  local min_index=0\n  local max_index=0\n  local i=0\n\
    \  local j=0\n  local k=0\n  local l=0\n  local m=0\n  local n=0\n  local o=0\n\
    \  local p=0\n  local q=0\n  local r=0\n  local s=0\n  local t=0\n  local u=0\n\
    \  local v=0\n  local w=0\n  local x=0\n  local y=0\n  local z=0\n  local aa=0\n\
    \  local bb=0\n  local cc=0\n  local dd=0\n  local ee=0\n  local ff=0\n  local\
    \ gg=0\n  local hh=0\n  local ii=0\n  local jj=0\n  local kk=0\n  local ll=0\n\
    \  local mm=0\n  local nn=0\n  local oo=0\n  local pp=0\n  local qq=0\n  local\
    \ rr=0\n  local ss=0\n  local tt=0\n  local uu=0\n  local vv=0\n  local ww=0\n\
    \  local xx=0\n  local yy=0\n  local zz=0\n  local aaa=0\n  local bbb=0\n  local\
    \ ccc=0\n  local ddd=0\n  local eee=0\n  local fff=0\n  local ggg=0\n  local hhh=0\n\
    \  local iii=0\n  local jjj=0\n  local kkk=0\n  local lll=0\n  local mmm=0\n \
    \ local nnn=0\n  local ooo=0\n  local ppp=0\n  local qqq=0\n  local rrr=0\n  local\
    \ sss=0\n  local ttt=0\n  local uuu=0\n  local vvv=0\n  local www=0\n  local xxx=0\n\
    \  local yyy=0\n  local zzz=0\n\n}\n\ncandidate() {\n    strange_sort_list \"\
    $@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"1 2 3 4\") = \"1 4 2 3\"\
    \ ]]\n    [[ $(candidate \"5 6 7 8 9\") = \"5 9 6 8 7\" ]]\n    [[ $(candidate\
    \ \"1 2 3 4 5\") = \"1 5 2 4 3\" ]]\n    [[ $(candidate \"5 6 7 8 9 1\") = \"\
    1 9 5 8 6 7\" ]]\n    [[ $(candidate \"5 5 5 5\") = \"5 5 5 5\" ]]\n    [[ $(candidate\
    \ \"\") = \"\" ]]\n    [[ $(candidate \"1 2 3 4 5 6 7 8\") = \"1 8 2 7 3 6 4 5\"\
    \ ]]\n    [[ $(candidate \"0 2 2 2 5 5 -5 -5\") = \"-5 5 -5 5 0 2 2 2\" ]]\n \
    \   [[ $(candidate \"111111\") = \"111111\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660003084
- exit_code: 1
  program: "#!/bin/bash\n# Given list of integers, return list in strange order.\n\
    # Strange sorting, is when you start with the minimum value,\n# then maximum of\
    \ the remaining integers, then minimum and so on.\n# Examples:\n#\n# $1 is a space-separated\
    \ list\nstrange_sort_list() {\n    local list=$1\n    local sorted=()\n    local\
    \ min=0\n    local max=0\n    local min_index=0\n    local max_index=0\n    local\
    \ i=0\n    local j=0\n    local k=0\n    local l=0\n    local m=0\n    local n=0\n\
    \    local o=0\n    local p=0\n    local q=0\n    local r=0\n    local s=0\n \
    \   local t=0\n    local u=0\n    local v=0\n    local w=0\n    local x=0\n  \
    \  local y=0\n    local z=0\n    local aa=0\n    local bb=0\n    local cc=0\n\
    \    local dd=0\n    local ee=0\n    local ff=0\n    local gg=0\n    local hh=0\n\
    \    local ii=0\n    local jj=0\n    local kk=0\n    local ll=0\n    local mm=0\n\
    \    local nn=0\n    local oo=0\n    local pp=0\n    local qq=0\n    local rr=0\n\
    \    local ss=0\n    local tt=0\n    local uu=0\n    local vv=0\n    local ww=0\n\
    \    local xx=0\n    local yy=0\n    local zz=0\n    local aaa=0\n    local bbb=0\n\
    \    local ccc=0\n    local ddd=0\n    local eee=0\n    local fff=0\n    local\
    \ ggg=0\n    local hhh=0\n    local iii=0\n    local jjj=0\n    local kkk=0\n\
    \    local lll=0\n    local mmm=0\n    local nnn=0\n    local ooo=0\n    local\
    \ ppp=0\n    local qqq=0\n    local rrr=0\n    local sss=0\n    local ttt=0\n\
    \    local uuu=0\n    local vvv=0\n    local www=0\n    local xxx=0\n    local\
    \ yyy=0\n    local zzz=0\n    local aaaa=0\n    local b\n}\n\ncandidate() {\n\
    \    strange_sort_list \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"\
    1 2 3 4\") = \"1 4 2 3\" ]]\n    [[ $(candidate \"5 6 7 8 9\") = \"5 9 6 8 7\"\
    \ ]]\n    [[ $(candidate \"1 2 3 4 5\") = \"1 5 2 4 3\" ]]\n    [[ $(candidate\
    \ \"5 6 7 8 9 1\") = \"1 9 5 8 6 7\" ]]\n    [[ $(candidate \"5 5 5 5\") = \"\
    5 5 5 5\" ]]\n    [[ $(candidate \"\") = \"\" ]]\n    [[ $(candidate \"1 2 3 4\
    \ 5 6 7 8\") = \"1 8 2 7 3 6 4 5\" ]]\n    [[ $(candidate \"0 2 2 2 5 5 -5 -5\"\
    ) = \"-5 5 -5 5 0 2 2 2\" ]]\n    [[ $(candidate \"111111\") = \"111111\" ]]\n\
    }\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660003084
- exit_code: 1
  program: "#!/bin/bash\n# Given list of integers, return list in strange order.\n\
    # Strange sorting, is when you start with the minimum value,\n# then maximum of\
    \ the remaining integers, then minimum and so on.\n# Examples:\n#\n# $1 is a space-separated\
    \ list\nstrange_sort_list() {\n    local -a list=($1)\n    local -a result=()\n\
    \    local -i i=0\n    local -i j=0\n    local -i k=0\n    local -i len=${#list[@]}\n\
    \    local -i min=0\n    local -i max=0\n    local -i min_index=0\n    local -i\
    \ max_index=0\n    local -i min_found=0\n    local -i max_found=0\n    local -i\
    \ min_found_index=0\n    local -i max_found_index=0\n    local -i min_found_index_prev=0\n\
    \    local -i max_found_index_prev=0\n    local -i min_found_index_next=0\n  \
    \  local -i max_found_index_next=0\n    local -i min_found_index_next_prev=0\n\
    \    local -i max_found_index_next_prev=0\n    local -i min_found_index_next_next=0\n\
    \    local -i max_found_index_next_next=0\n    local -i min_found_index_next_next_prev=0\n\
    \    local -i max_found_index_next_next_prev=0\n    local -i min_found_index_next_next_next=0\n\
    \    local -i max_found_index_next_next_next=0\n    local -i min_found_index_next_next_next_prev=0\n\
    \    local -i max_found_index_next_next_next_prev=0\n    local -i min_found_index_next_next_next_next=0\n\
    \    local -i max_found_index_next_next_next_next=0\n    local -i min_found_index_next_next_next_next_prev=0\n\
    \    local -i max_found_index_next_next_next_next_prev=0\n    local -i min_found_index_next_next_next_next_next=0\n\
    \    local -i max_found_index_next_next_next_next_next=0\n    local -i min_found_index_next_next_next_\n\
    }\n\ncandidate() {\n    strange_sort_list \"$@\"\n}\n\nset -e\nrun_test() {\n\
    \    [[ $(candidate \"1 2 3 4\") = \"1 4 2 3\" ]]\n    [[ $(candidate \"5 6 7\
    \ 8 9\") = \"5 9 6 8 7\" ]]\n    [[ $(candidate \"1 2 3 4 5\") = \"1 5 2 4 3\"\
    \ ]]\n    [[ $(candidate \"5 6 7 8 9 1\") = \"1 9 5 8 6 7\" ]]\n    [[ $(candidate\
    \ \"5 5 5 5\") = \"5 5 5 5\" ]]\n    [[ $(candidate \"\") = \"\" ]]\n    [[ $(candidate\
    \ \"1 2 3 4 5 6 7 8\") = \"1 8 2 7 3 6 4 5\" ]]\n    [[ $(candidate \"0 2 2 2\
    \ 5 5 -5 -5\") = \"-5 5 -5 5 0 2 2 2\" ]]\n    [[ $(candidate \"111111\") = \"\
    111111\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660003084
- exit_code: 1
  program: "#!/bin/bash\n# Given list of integers, return list in strange order.\n\
    # Strange sorting, is when you start with the minimum value,\n# then maximum of\
    \ the remaining integers, then minimum and so on.\n# Examples:\n#\n# $1 is a space-separated\
    \ list\nstrange_sort_list() {\n    local list=($1)\n    local sorted=()\n    local\
    \ min=${list[0]}\n    local max=${list[0]}\n    local i=0\n    local j=0\n   \
    \ local k=0\n    local l=0\n    local m=0\n    local n=0\n    local o=0\n    local\
    \ p=0\n    local q=0\n    local r=0\n    local s=0\n    local t=0\n    local u=0\n\
    \    local v=0\n    local w=0\n    local x=0\n    local y=0\n    local z=0\n \
    \   local aa=0\n    local bb=0\n    local cc=0\n    local dd=0\n    local ee=0\n\
    \    local ff=0\n    local gg=0\n    local hh=0\n    local ii=0\n    local jj=0\n\
    \    local kk=0\n    local ll=0\n    local mm=0\n    local nn=0\n    local oo=0\n\
    \    local pp=0\n    local qq=0\n    local rr=0\n    local ss=0\n    local tt=0\n\
    \    local uu=0\n    local vv=0\n    local ww=0\n    local xx=0\n    local yy=0\n\
    \    local zz=0\n    local aaa=0\n    local bbb=0\n    local ccc=0\n    local\
    \ ddd=0\n    local eee=0\n    local fff=0\n    local ggg=0\n    local hhh=0\n\
    \    local iii=0\n    local jjj=0\n    local kkk=0\n    local lll=0\n    local\
    \ mmm=0\n    local nnn=0\n    local ooo=0\n    local ppp=0\n    local qqq=0\n\
    \    local rrr=0\n    local sss=0\n    local ttt=0\n    local uuu=0\n    local\
    \ vvv=0\n    local www=0\n    local xxx=0\n    local yyy=0\n    local zzz=0\n\
    \    local aaaa=0\n    local bbbb=0\n   \n}\n\ncandidate() {\n    strange_sort_list\
    \ \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"1 2 3 4\") = \"1 4 2\
    \ 3\" ]]\n    [[ $(candidate \"5 6 7 8 9\") = \"5 9 6 8 7\" ]]\n    [[ $(candidate\
    \ \"1 2 3 4 5\") = \"1 5 2 4 3\" ]]\n    [[ $(candidate \"5 6 7 8 9 1\") = \"\
    1 9 5 8 6 7\" ]]\n    [[ $(candidate \"5 5 5 5\") = \"5 5 5 5\" ]]\n    [[ $(candidate\
    \ \"\") = \"\" ]]\n    [[ $(candidate \"1 2 3 4 5 6 7 8\") = \"1 8 2 7 3 6 4 5\"\
    \ ]]\n    [[ $(candidate \"0 2 2 2 5 5 -5 -5\") = \"-5 5 -5 5 0 2 2 2\" ]]\n \
    \   [[ $(candidate \"111111\") = \"111111\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660003083
- exit_code: 1
  program: "#!/bin/bash\n# Given list of integers, return list in strange order.\n\
    # Strange sorting, is when you start with the minimum value,\n# then maximum of\
    \ the remaining integers, then minimum and so on.\n# Examples:\n#\n# $1 is a space-separated\
    \ list\nstrange_sort_list() {\n  local list=\"$1\"\n  local sorted=\"\"\n  local\
    \ min=\"\"\n  local max=\"\"\n  local min_index=\"\"\n  local max_index=\"\"\n\
    \  local i=\"\"\n  local j=\"\"\n  local k=\"\"\n  local l=\"\"\n  local m=\"\"\
    \n  local n=\"\"\n  local o=\"\"\n  local p=\"\"\n  local q=\"\"\n  local r=\"\
    \"\n  local s=\"\"\n  local t=\"\"\n  local u=\"\"\n  local v=\"\"\n  local w=\"\
    \"\n  local x=\"\"\n  local y=\"\"\n  local z=\"\"\n  local a=\"\"\n  local b=\"\
    \"\n  local c=\"\"\n  local d=\"\"\n  local e=\"\"\n  local f=\"\"\n  local g=\"\
    \"\n  local h=\"\"\n  local i=\"\"\n  local j=\"\"\n  local k=\"\"\n  local l=\"\
    \"\n  local m=\"\"\n  local n=\"\"\n  local o=\"\"\n  local p=\"\"\n  local q=\"\
    \"\n  local r=\"\"\n  local s=\"\"\n  local t=\"\"\n  local u=\"\"\n  local v=\"\
    \"\n  local w=\"\"\n  local x=\"\"\n  local y=\"\"\n  local z=\"\"\n  local a=\"\
    \"\n  local b=\"\"\n  local c=\"\"\n  local d=\"\"\n  local e=\"\"\n  local f=\"\
    \"\n  local g=\"\"\n  local h=\"\"\n  local i=\"\"\n  local j=\"\"\n  local k=\"\
    \"\n  local l=\"\"\n  local m=\"\"\n  local n=\"\"\n  local o=\"\"\n  local p=\"\
    \"\n  local q=\"\"\n  local r=\"\"\n  local s=\"\"\n  local t=\"\"\n  local u=\"\
    \"\n  local v=\"\"\n  local w=\"\"\n  local x=\"\"\n  local y=\"\"\n  local z=\"\
    \"\n  local a=\"\"\n  local b=\"\"\n  local c=\"\"\n  local d=\"\"\n  local e=\"\
    \"\n  local f=\"\"\n  local g=\"\"\n  local h=\"\"\n  local i=\"\"\n  local j=\"\
    \"\n  local k=\"\"\n  local l=\"\"\n  local m=\"\"\n  local n=\"\"\n  local o=\"\
    \"\n  local p=\"\"\n  local q=\"\"\n  local r=\"\"\n  local s=\"\"\n  local t=\"\
    \"\n  local u=\"\"\n  local v=\"\"\n  local w=\"\"\n  local x=\"\"\n  local y=\"\
    \"\n}\n\ncandidate() {\n    strange_sort_list \"$@\"\n}\n\nset -e\nrun_test()\
    \ {\n    [[ $(candidate \"1 2 3 4\") = \"1 4 2 3\" ]]\n    [[ $(candidate \"5\
    \ 6 7 8 9\") = \"5 9 6 8 7\" ]]\n    [[ $(candidate \"1 2 3 4 5\") = \"1 5 2 4\
    \ 3\" ]]\n    [[ $(candidate \"5 6 7 8 9 1\") = \"1 9 5 8 6 7\" ]]\n    [[ $(candidate\
    \ \"5 5 5 5\") = \"5 5 5 5\" ]]\n    [[ $(candidate \"\") = \"\" ]]\n    [[ $(candidate\
    \ \"1 2 3 4 5 6 7 8\") = \"1 8 2 7 3 6 4 5\" ]]\n    [[ $(candidate \"0 2 2 2\
    \ 5 5 -5 -5\") = \"-5 5 -5 5 0 2 2 2\" ]]\n    [[ $(candidate \"111111\") = \"\
    111111\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660003083
- exit_code: 2
  program: "#!/bin/bash\n# Given list of integers, return list in strange order.\n\
    # Strange sorting, is when you start with the minimum value,\n# then maximum of\
    \ the remaining integers, then minimum and so on.\n# Examples:\n#\n# $1 is a space-separated\
    \ list\nstrange_sort_list() {\n  local list=($1)\n  local sorted=()\n  local min=${list[0]}\n\
    \  local max=${list[0]}\n  local min_index=0\n  local max_index=0\n  local i=0\n\
    \  local j=0\n  local k=0\n  local n=${#list[@]}\n  local temp=0\n\n  # Find min\
    \ and max\n  for ((i=0; i<n; i++)); do\n    if [[ ${list[i]} -lt $min ]]; then\n\
    \      min=${list[i]}\n      min_index=$i\n    fi\n    if [[ ${list[i]} -gt $max\
    \ ]]; then\n      max=${list[i]}\n      max_index=$i\n    fi\n  done\n\n  # Remove\
    \ min and max from the list\n  unset list[$min_index]\n  unset list[$max_index]\n\
    \n  # Reindex the list\n  list=(${list[@]})\n\n  # Add min and max to sorted list\n\
    \  sorted=($min $max)\n\n  # Add the rest of the list to sorted list\n  for ((i=0;\
    \ i<n-2; i++)); do\n    if [[ $((i%2)) -eq 0 ]]; then\n      # Add min\n     \
    \ min=${list[0]}\n      min_index=0\n      for ((j=0; j<${#list[@]}; j++)); do\n\
    \        if [[ ${list[j]} -lt $min ]]; then\n          min=${list[j]}\n      \
    \    min_index=$j\n        fi\n      done\n      sorted+=($min)\n      unset list[$min_index]\n\
    \      list=(${list[@]})\n    else\n      # Add max\n      max=${list[0]}\n  \
    \    max_index=0\n      for ((j=0; j<${#list[@]}; j++)); do\n        if [[ ${list[j]}\
    \ -gt $max ]]; then\n          max=${list[j]}\n          max_index=$j\n      \
    \  fi\n      done\n      sorted+=($max)\n      unset list[$max_index]\n      list=(${list\n\
    }\n\ncandidate() {\n    strange_sort_list \"$@\"\n}\n\nset -e\nrun_test() {\n\
    \    [[ $(candidate \"1 2 3 4\") = \"1 4 2 3\" ]]\n    [[ $(candidate \"5 6 7\
    \ 8 9\") = \"5 9 6 8 7\" ]]\n    [[ $(candidate \"1 2 3 4 5\") = \"1 5 2 4 3\"\
    \ ]]\n    [[ $(candidate \"5 6 7 8 9 1\") = \"1 9 5 8 6 7\" ]]\n    [[ $(candidate\
    \ \"5 5 5 5\") = \"5 5 5 5\" ]]\n    [[ $(candidate \"\") = \"\" ]]\n    [[ $(candidate\
    \ \"1 2 3 4 5 6 7 8\") = \"1 8 2 7 3 6 4 5\" ]]\n    [[ $(candidate \"0 2 2 2\
    \ 5 5 -5 -5\") = \"-5 5 -5 5 0 2 2 2\" ]]\n    [[ $(candidate \"111111\") = \"\
    111111\" ]]\n}\n\nrun_test"
  status: SyntaxError
  stderr: '/tmp/tmp6gtyu_as.sh: line 73: syntax error near unexpected token `(''

    /tmp/tmp6gtyu_as.sh: line 73: `candidate() {''

    /tmp/tmp6gtyu_as.sh: line 74: strange_sort_list: command not found

    /tmp/tmp6gtyu_as.sh: line 75: syntax error near unexpected token `}''

    /tmp/tmp6gtyu_as.sh: line 75: `}''

    '
  stdout: ''
  timestamp: 1660003084
- exit_code: 1
  program: "#!/bin/bash\n# Given list of integers, return list in strange order.\n\
    # Strange sorting, is when you start with the minimum value,\n# then maximum of\
    \ the remaining integers, then minimum and so on.\n# Examples:\n#\n# $1 is a space-separated\
    \ list\nstrange_sort_list() {\n    local list=$1\n    local sorted=\"\"\n    local\
    \ min=\"\"\n    local max=\"\"\n    local i=0\n    local j=0\n    local k=0\n\
    \    local l=0\n    local m=0\n    local n=0\n    local o=0\n    local p=0\n \
    \   local q=0\n    local r=0\n    local s=0\n    local t=0\n    local u=0\n  \
    \  local v=0\n    local w=0\n    local x=0\n    local y=0\n    local z=0\n   \
    \ local a=0\n    local b=0\n    local c=0\n    local d=0\n    local e=0\n    local\
    \ f=0\n    local g=0\n    local h=0\n    local i=0\n    local j=0\n    local k=0\n\
    \    local l=0\n    local m=0\n    local n=0\n    local o=0\n    local p=0\n \
    \   local q=0\n    local r=0\n    local s=0\n    local t=0\n    local u=0\n  \
    \  local v=0\n    local w=0\n    local x=0\n    local y=0\n    local z=0\n   \
    \ local a=0\n    local b=0\n    local c=0\n    local d=0\n    local e=0\n    local\
    \ f=0\n    local g=0\n    local h=0\n    local i=0\n    local j=0\n    local k=0\n\
    \    local l=0\n    local m=0\n    local n=0\n    local o=0\n    local p=0\n \
    \   local q=0\n    local r=0\n    local s=0\n    local t=0\n    local u=0\n  \
    \  local v=0\n    local w=0\n    local x=0\n    local y=0\n    local z=0\n   \
    \ local a=0\n    local b=0\n    local c=0\n    local d=0\n    local e=0\n    local\
    \ f=0\n    local g=0\n    local h=0\n    local i=0\n    local j=0\n    local k=0\n\
    \    local l=\n}\n\ncandidate() {\n    strange_sort_list \"$@\"\n}\n\nset -e\n\
    run_test() {\n    [[ $(candidate \"1 2 3 4\") = \"1 4 2 3\" ]]\n    [[ $(candidate\
    \ \"5 6 7 8 9\") = \"5 9 6 8 7\" ]]\n    [[ $(candidate \"1 2 3 4 5\") = \"1 5\
    \ 2 4 3\" ]]\n    [[ $(candidate \"5 6 7 8 9 1\") = \"1 9 5 8 6 7\" ]]\n    [[\
    \ $(candidate \"5 5 5 5\") = \"5 5 5 5\" ]]\n    [[ $(candidate \"\") = \"\" ]]\n\
    \    [[ $(candidate \"1 2 3 4 5 6 7 8\") = \"1 8 2 7 3 6 4 5\" ]]\n    [[ $(candidate\
    \ \"0 2 2 2 5 5 -5 -5\") = \"-5 5 -5 5 0 2 2 2\" ]]\n    [[ $(candidate \"111111\"\
    ) = \"111111\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660003084
- exit_code: 1
  program: "#!/bin/bash\n# Given list of integers, return list in strange order.\n\
    # Strange sorting, is when you start with the minimum value,\n# then maximum of\
    \ the remaining integers, then minimum and so on.\n# Examples:\n#\n# $1 is a space-separated\
    \ list\nstrange_sort_list() {\n  local list=($1)\n  local sorted=()\n  local min=${list[0]}\n\
    \  local max=${list[0]}\n  local min_index=0\n  local max_index=0\n  local i=0\n\
    \  local j=0\n  local k=0\n  local l=0\n  local m=0\n  local n=0\n  local o=0\n\
    \  local p=0\n  local q=0\n  local r=0\n  local s=0\n  local t=0\n  local u=0\n\
    \  local v=0\n  local w=0\n  local x=0\n  local y=0\n  local z=0\n  local aa=0\n\
    \  local bb=0\n  local cc=0\n  local dd=0\n  local ee=0\n  local ff=0\n  local\
    \ gg=0\n  local hh=0\n  local ii=0\n  local jj=0\n  local kk=0\n  local ll=0\n\
    \  local mm=0\n  local nn=0\n  local oo=0\n  local pp=0\n  local qq=0\n  local\
    \ rr=0\n  local ss=0\n  local tt=0\n  local uu=0\n  local vv=0\n  local ww=0\n\
    \  local xx=0\n  local yy=0\n  local zz=0\n  local aaa=0\n  local bbb=0\n  local\
    \ ccc=0\n  local ddd=0\n  local eee=0\n  local fff=0\n  local ggg=0\n  local hhh=0\n\
    \  local iii=0\n  local jjj=0\n  local kkk=0\n  local lll=0\n  local mmm=0\n \
    \ local nnn=0\n  local ooo=0\n  local ppp=0\n  local qqq=0\n  local rrr=0\n  local\
    \ sss=0\n  local ttt=0\n  local uuu=0\n  local vvv=0\n  local www=0\n  local xxx=0\n\
    \  local yyy=0\n  local zzz=0\n\n}\n\ncandidate() {\n    strange_sort_list \"\
    $@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"1 2 3 4\") = \"1 4 2 3\"\
    \ ]]\n    [[ $(candidate \"5 6 7 8 9\") = \"5 9 6 8 7\" ]]\n    [[ $(candidate\
    \ \"1 2 3 4 5\") = \"1 5 2 4 3\" ]]\n    [[ $(candidate \"5 6 7 8 9 1\") = \"\
    1 9 5 8 6 7\" ]]\n    [[ $(candidate \"5 5 5 5\") = \"5 5 5 5\" ]]\n    [[ $(candidate\
    \ \"\") = \"\" ]]\n    [[ $(candidate \"1 2 3 4 5 6 7 8\") = \"1 8 2 7 3 6 4 5\"\
    \ ]]\n    [[ $(candidate \"0 2 2 2 5 5 -5 -5\") = \"-5 5 -5 5 0 2 2 2\" ]]\n \
    \   [[ $(candidate \"111111\") = \"111111\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660003084
- exit_code: 1
  program: "#!/bin/bash\n# Given list of integers, return list in strange order.\n\
    # Strange sorting, is when you start with the minimum value,\n# then maximum of\
    \ the remaining integers, then minimum and so on.\n# Examples:\n#\n# $1 is a space-separated\
    \ list\nstrange_sort_list() {\n    local list=($1)\n    local sorted=()\n    local\
    \ min=0\n    local max=0\n    local min_index=0\n    local max_index=0\n    local\
    \ i=0\n    local j=0\n    local k=0\n    local l=0\n    local n=${#list[@]}\n\
    \    local m=$(($n / 2))\n    local temp=0\n    local temp_index=0\n    local\
    \ temp_list=()\n    local temp_list_index=()\n    local temp_list_index_index=0\n\
    \    local temp_list_index_index_index=0\n    local temp_list_index_index_index_index=0\n\
    \    local temp_list_index_index_index_index_index=0\n    local temp_list_index_index_index_index_index_index=0\n\
    \    local temp_list_index_index_index_index_index_index_index=0\n    local temp_list_index_index_index_index_index_index_index_index=0\n\
    \    local temp_list_index_index_index_index_index_index_index_index_index=0\n\
    \    local temp_list_index_index_index_index_index_index_index_index_index_index=0\n\
    \    local temp_list_index_index_index_index_index_index_index_index_index_index_index=0\n\
    \    local temp_list_index_index_index_index_index_index_index_index_index_index_index_index=0\n\
    \    local temp_list_index_index_index_index_index_index_index_index_index_index_index_index_index=0\n\
    \    local temp_list_index_index_index_index_index_index_index_index_index_index_index_index_index_index=0\n\
    \    local temp_list_index_index_index_index_index_index_index_index_index_index_index_index_index_index_index=0\n\
    \    local temp_list_index_index_index_index_index_index_index_index_index_index_index_index_index_index_index_index=0\n\
    \   \n}\n\ncandidate() {\n    strange_sort_list \"$@\"\n}\n\nset -e\nrun_test()\
    \ {\n    [[ $(candidate \"1 2 3 4\") = \"1 4 2 3\" ]]\n    [[ $(candidate \"5\
    \ 6 7 8 9\") = \"5 9 6 8 7\" ]]\n    [[ $(candidate \"1 2 3 4 5\") = \"1 5 2 4\
    \ 3\" ]]\n    [[ $(candidate \"5 6 7 8 9 1\") = \"1 9 5 8 6 7\" ]]\n    [[ $(candidate\
    \ \"5 5 5 5\") = \"5 5 5 5\" ]]\n    [[ $(candidate \"\") = \"\" ]]\n    [[ $(candidate\
    \ \"1 2 3 4 5 6 7 8\") = \"1 8 2 7 3 6 4 5\" ]]\n    [[ $(candidate \"0 2 2 2\
    \ 5 5 -5 -5\") = \"-5 5 -5 5 0 2 2 2\" ]]\n    [[ $(candidate \"111111\") = \"\
    111111\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660003084
- exit_code: 1
  program: "#!/bin/bash\n# Given list of integers, return list in strange order.\n\
    # Strange sorting, is when you start with the minimum value,\n# then maximum of\
    \ the remaining integers, then minimum and so on.\n# Examples:\n#\n# $1 is a space-separated\
    \ list\nstrange_sort_list() {\n  local list=($1)\n  local sorted=()\n  local min=${list[0]}\n\
    \  local max=${list[0]}\n  local min_index=0\n  local max_index=0\n  local i=0\n\
    \  local j=0\n  local k=0\n  local l=0\n  local m=0\n  local n=0\n  local o=0\n\
    \  local p=0\n  local q=0\n  local r=0\n  local s=0\n  local t=0\n  local u=0\n\
    \  local v=0\n  local w=0\n  local x=0\n  local y=0\n  local z=0\n  local aa=0\n\
    \  local bb=0\n  local cc=0\n  local dd=0\n  local ee=0\n  local ff=0\n  local\
    \ gg=0\n  local hh=0\n  local ii=0\n  local jj=0\n  local kk=0\n  local ll=0\n\
    \  local mm=0\n  local nn=0\n  local oo=0\n  local pp=0\n  local qq=0\n  local\
    \ rr=0\n  local ss=0\n  local tt=0\n  local uu=0\n  local vv=0\n  local ww=0\n\
    \  local xx=0\n  local yy=0\n  local zz=0\n  local aaa=0\n  local bbb=0\n  local\
    \ ccc=0\n  local ddd=0\n  local eee=0\n  local fff=0\n  local ggg=0\n  local hhh=0\n\
    \  local iii=0\n  local jjj=0\n  local kkk=0\n  local lll=0\n  local mmm=0\n \
    \ local nnn=0\n  local ooo=0\n  local ppp=0\n  local qqq=0\n  local rrr=0\n  local\
    \ sss=0\n  local ttt=0\n  local uuu=0\n  local vvv=0\n  local www=0\n  local xxx=0\n\
    \  local yyy=0\n  local zzz=0\n\n}\n\ncandidate() {\n    strange_sort_list \"\
    $@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"1 2 3 4\") = \"1 4 2 3\"\
    \ ]]\n    [[ $(candidate \"5 6 7 8 9\") = \"5 9 6 8 7\" ]]\n    [[ $(candidate\
    \ \"1 2 3 4 5\") = \"1 5 2 4 3\" ]]\n    [[ $(candidate \"5 6 7 8 9 1\") = \"\
    1 9 5 8 6 7\" ]]\n    [[ $(candidate \"5 5 5 5\") = \"5 5 5 5\" ]]\n    [[ $(candidate\
    \ \"\") = \"\" ]]\n    [[ $(candidate \"1 2 3 4 5 6 7 8\") = \"1 8 2 7 3 6 4 5\"\
    \ ]]\n    [[ $(candidate \"0 2 2 2 5 5 -5 -5\") = \"-5 5 -5 5 0 2 2 2\" ]]\n \
    \   [[ $(candidate \"111111\") = \"111111\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660003084
- exit_code: 1
  program: "#!/bin/bash\n# Given list of integers, return list in strange order.\n\
    # Strange sorting, is when you start with the minimum value,\n# then maximum of\
    \ the remaining integers, then minimum and so on.\n# Examples:\n#\n# $1 is a space-separated\
    \ list\nstrange_sort_list() {\n    local list=($1)\n    local sorted_list=()\n\
    \    local min=${list[0]}\n    local max=${list[0]}\n    local min_index=0\n \
    \   local max_index=0\n    local i=0\n    local j=0\n    local k=0\n    local\
    \ n=${#list[@]}\n    local m=0\n    local tmp=0\n\n    # Find min and max\n  \
    \  for ((i=0; i<n; i++)); do\n        if [[ ${list[i]} -lt $min ]]; then\n   \
    \         min=${list[i]}\n            min_index=$i\n        fi\n        if [[\
    \ ${list[i]} -gt $max ]]; then\n            max=${list[i]}\n            max_index=$i\n\
    \        fi\n    done\n\n    # Sort list\n    sorted_list[0]=$min\n    sorted_list[1]=$max\n\
    \    m=2\n    for ((i=0; i<n; i++)); do\n        if [[ $i -eq $min_index ]] ||\
    \ [[ $i -eq $max_index ]]; then\n            continue\n        fi\n        sorted_list[m]=${list[i]}\n\
    \        ((m++))\n    done\n\n    # Print list\n    for ((i=0; i<n; i++)); do\n\
    \        echo -n \"${sorted_list[i]} \"\n    done\n    echo\n}\n\ncandidate()\
    \ {\n    strange_sort_list \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate\
    \ \"1 2 3 4\") = \"1 4 2 3\" ]]\n    [[ $(candidate \"5 6 7 8 9\") = \"5 9 6 8\
    \ 7\" ]]\n    [[ $(candidate \"1 2 3 4 5\") = \"1 5 2 4 3\" ]]\n    [[ $(candidate\
    \ \"5 6 7 8 9 1\") = \"1 9 5 8 6 7\" ]]\n    [[ $(candidate \"5 5 5 5\") = \"\
    5 5 5 5\" ]]\n    [[ $(candidate \"\") = \"\" ]]\n    [[ $(candidate \"1 2 3 4\
    \ 5 6 7 8\") = \"1 8 2 7 3 6 4 5\" ]]\n    [[ $(candidate \"0 2 2 2 5 5 -5 -5\"\
    ) = \"-5 5 -5 5 0 2 2 2\" ]]\n    [[ $(candidate \"111111\") = \"111111\" ]]\n\
    }\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660003084
- exit_code: 1
  program: "#!/bin/bash\n# Given list of integers, return list in strange order.\n\
    # Strange sorting, is when you start with the minimum value,\n# then maximum of\
    \ the remaining integers, then minimum and so on.\n# Examples:\n#\n# $1 is a space-separated\
    \ list\nstrange_sort_list() {\n    local list=$1\n    local sorted_list=\"\"\n\
    \    local min_value=0\n    local max_value=0\n    local min_index=0\n    local\
    \ max_index=0\n    local index=0\n    local value=0\n    local i=0\n    local\
    \ j=0\n    local tmp_list=\"\"\n    local tmp_value=0\n    local tmp_index=0\n\
    \    local tmp_min_value=0\n    local tmp_max_value=0\n    local tmp_min_index=0\n\
    \    local tmp_max_index=0\n    local tmp_index=0\n    local tmp_value=0\n   \
    \ local tmp_i=0\n    local tmp_j=0\n    local tmp_tmp_list=\"\"\n    local tmp_tmp_value=0\n\
    \    local tmp_tmp_index=0\n    local tmp_tmp_min_value=0\n    local tmp_tmp_max_value=0\n\
    \    local tmp_tmp_min_index=0\n    local tmp_tmp_max_index=0\n    local tmp_tmp_index=0\n\
    \    local tmp_tmp_value=0\n    local tmp_tmp_i=0\n    local tmp_tmp_j=0\n   \
    \ local tmp_tmp_tmp_list=\"\"\n    local tmp_tmp_tmp_value=0\n    local tmp_tmp_tmp_index=0\n\
    \    local tmp_tmp_tmp_min_value=0\n    local tmp_tmp_tmp_max_value=0\n    local\
    \ tmp_tmp_tmp_min_index=0\n    local tmp_tmp_tmp_max_index=0\n    local tmp_tmp_tmp_index=0\n\
    \    local tmp_tmp_tmp_value=0\n    local tmp_tmp_tmp_i=0\n    local tmp_tmp_tmp_j=0\n\
    \    local tmp_tmp_tmp_tmp_list=\"\"\n    local tmp_tmp_tmp_tmp_value=0\n    local\
    \ tmp_tmp_tmp_tmp_index=0\n    local tmp_tmp_tmp_tmp_min_value=0\n    local tmp_tmp_tmp_tmp_max_value=0\n\
    \    local tmp_tmp_tmp_tmp_min_index=0\n    local\n}\n\ncandidate() {\n    strange_sort_list\
    \ \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"1 2 3 4\") = \"1 4 2\
    \ 3\" ]]\n    [[ $(candidate \"5 6 7 8 9\") = \"5 9 6 8 7\" ]]\n    [[ $(candidate\
    \ \"1 2 3 4 5\") = \"1 5 2 4 3\" ]]\n    [[ $(candidate \"5 6 7 8 9 1\") = \"\
    1 9 5 8 6 7\" ]]\n    [[ $(candidate \"5 5 5 5\") = \"5 5 5 5\" ]]\n    [[ $(candidate\
    \ \"\") = \"\" ]]\n    [[ $(candidate \"1 2 3 4 5 6 7 8\") = \"1 8 2 7 3 6 4 5\"\
    \ ]]\n    [[ $(candidate \"0 2 2 2 5 5 -5 -5\") = \"-5 5 -5 5 0 2 2 2\" ]]\n \
    \   [[ $(candidate \"111111\") = \"111111\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660003084
- exit_code: 2
  program: "#!/bin/bash\n# Given list of integers, return list in strange order.\n\
    # Strange sorting, is when you start with the minimum value,\n# then maximum of\
    \ the remaining integers, then minimum and so on.\n# Examples:\n#\n# $1 is a space-separated\
    \ list\nstrange_sort_list() {\n    local list=\"$1\"\n    local sorted_list=()\n\
    \    local sorted_list_len=0\n    local list_len=0\n    local min=0\n    local\
    \ max=0\n    local i=0\n    local j=0\n    local k=0\n    local tmp=0\n\n    #\
    \ Get length of list\n    list_len=$(echo \"$list\" | wc -w)\n\n    # Get min\
    \ and max values\n    min=$(echo \"$list\" | tr ' ' '\\n' | sort -n | head -n\
    \ 1)\n    max=$(echo \"$list\" | tr ' ' '\\n' | sort -n | tail -n 1)\n\n    #\
    \ Add min and max to sorted list\n    sorted_list[$sorted_list_len]=$min\n   \
    \ ((sorted_list_len++))\n    sorted_list[$sorted_list_len]=$max\n    ((sorted_list_len++))\n\
    \n    # Remove min and max from list\n    list=$(echo \"$list\" | tr ' ' '\\n'\
    \ | grep -v \"$min\" | grep -v \"$max\" | tr '\\n' ' ')\n\n    # Iterate through\
    \ list\n    for ((i=0; i<list_len-2; i++)); do\n        # Get min and max values\n\
    \        min=$(echo \"$list\" | tr ' ' '\\n' | sort -n | head -n 1)\n        max=$(echo\
    \ \"$list\" | tr ' ' '\\n' | sort -n | tail -n 1)\n\n        # Add min and max\
    \ to sorted list\n        sorted_list[$sorted_list_len]=$min\n        ((sorted_list_len++))\n\
    \        sorted_list[$sorted_list_len]=$max\n        ((sorted_list_len++))\n\n\
    \        # Remove min and max from list\n        list=$(echo \"$list\" | tr '\
    \ ' '\\n' | grep -v \"$min\" | grep -v \"$max\" | tr '\\n' ' ')\n    done\n\n\
    \    # Print sorted list\n    for ((i=0; i<sorted_list_len; i++)); do\n      \
    \  echo -n \"${sorted_list\n}\n\ncandidate() {\n    strange_sort_list \"$@\"\n\
    }\n\nset -e\nrun_test() {\n    [[ $(candidate \"1 2 3 4\") = \"1 4 2 3\" ]]\n\
    \    [[ $(candidate \"5 6 7 8 9\") = \"5 9 6 8 7\" ]]\n    [[ $(candidate \"1\
    \ 2 3 4 5\") = \"1 5 2 4 3\" ]]\n    [[ $(candidate \"5 6 7 8 9 1\") = \"1 9 5\
    \ 8 6 7\" ]]\n    [[ $(candidate \"5 5 5 5\") = \"5 5 5 5\" ]]\n    [[ $(candidate\
    \ \"\") = \"\" ]]\n    [[ $(candidate \"1 2 3 4 5 6 7 8\") = \"1 8 2 7 3 6 4 5\"\
    \ ]]\n    [[ $(candidate \"0 2 2 2 5 5 -5 -5\") = \"-5 5 -5 5 0 2 2 2\" ]]\n \
    \   [[ $(candidate \"111111\") = \"111111\" ]]\n}\n\nrun_test"
  status: SyntaxError
  stderr: '/tmp/tmpms6ombv1.sh: line 71: unexpected EOF while looking for matching
    `"''

    /tmp/tmpms6ombv1.sh: line 75: syntax error: unexpected end of file

    '
  stdout: ''
  timestamp: 1660003084
- exit_code: 1
  program: "#!/bin/bash\n# Given list of integers, return list in strange order.\n\
    # Strange sorting, is when you start with the minimum value,\n# then maximum of\
    \ the remaining integers, then minimum and so on.\n# Examples:\n#\n# $1 is a space-separated\
    \ list\nstrange_sort_list() {\n  local list=\"$1\"\n  local sorted_list=\"\"\n\
    \  local min_value=\"\"\n  local max_value=\"\"\n  local min_index=\"\"\n  local\
    \ max_index=\"\"\n  local index=\"\"\n  local value=\"\"\n  local i=0\n  local\
    \ j=0\n  local k=0\n  local n=0\n  local m=0\n  local tmp=\"\"\n  local tmp_list=\"\
    \"\n  local tmp_index=\"\"\n  local tmp_value=\"\"\n  local tmp_min_index=\"\"\
    \n  local tmp_max_index=\"\"\n  local tmp_min_value=\"\"\n  local tmp_max_value=\"\
    \"\n  local tmp_sorted_list=\"\"\n  local tmp_sorted_list_length=0\n  local tmp_list_length=0\n\
    \  local list_length=0\n  local list_length_half=0\n  local list_length_half_plus_one=0\n\
    \  local list_length_half_minus_one=0\n  local list_length_half_minus_two=0\n\
    \  local list_length_half_minus_three=0\n  local list_length_half_minus_four=0\n\
    \  local list_length_half_minus_five=0\n  local list_length_half_minus_six=0\n\
    \  local list_length_half_minus_seven=0\n  local list_length_half_minus_eight=0\n\
    \  local list_length_half_minus_nine=0\n  local list_length_half_minus_ten=0\n\
    \  local list_length_half_minus_eleven=0\n  local list_length_half_minus_twelve=0\n\
    \  local list_length_half_minus_thirteen=0\n  local list_length_half_minus_fourteen=0\n\
    \  local list_length_half_minus_fifteen=0\n  local list_length_half_minus_sixteen=0\n\
    \  local list_length_half_minus_seventeen=0\n  local list_length_half_minus_eighteen=0\n\
    \  local list_length_half_minus_nineteen=0\n  local list_length_half_minus_twenty=0\n\
    \  local list_length_half_minus_\n}\n\ncandidate() {\n    strange_sort_list \"\
    $@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"1 2 3 4\") = \"1 4 2 3\"\
    \ ]]\n    [[ $(candidate \"5 6 7 8 9\") = \"5 9 6 8 7\" ]]\n    [[ $(candidate\
    \ \"1 2 3 4 5\") = \"1 5 2 4 3\" ]]\n    [[ $(candidate \"5 6 7 8 9 1\") = \"\
    1 9 5 8 6 7\" ]]\n    [[ $(candidate \"5 5 5 5\") = \"5 5 5 5\" ]]\n    [[ $(candidate\
    \ \"\") = \"\" ]]\n    [[ $(candidate \"1 2 3 4 5 6 7 8\") = \"1 8 2 7 3 6 4 5\"\
    \ ]]\n    [[ $(candidate \"0 2 2 2 5 5 -5 -5\") = \"-5 5 -5 5 0 2 2 2\" ]]\n \
    \   [[ $(candidate \"111111\") = \"111111\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660003084
- exit_code: 1
  program: "#!/bin/bash\n# Given list of integers, return list in strange order.\n\
    # Strange sorting, is when you start with the minimum value,\n# then maximum of\
    \ the remaining integers, then minimum and so on.\n# Examples:\n#\n# $1 is a space-separated\
    \ list\nstrange_sort_list() {\n    local list=($1)\n    local result=()\n    local\
    \ min=${list[0]}\n    local max=${list[0]}\n    local min_index=0\n    local max_index=0\n\
    \    local i=0\n    for num in ${list[@]}; do\n        if [[ $num -lt $min ]];\
    \ then\n            min=$num\n            min_index=$i\n        fi\n        if\
    \ [[ $num -gt $max ]]; then\n            max=$num\n            max_index=$i\n\
    \        fi\n        ((i++))\n    done\n    result+=($min)\n    result+=($max)\n\
    \    list[$min_index]=$max\n    list[$max_index]=$min\n    if [[ ${#list[@]} -gt\
    \ 2 ]]; then\n        result+=($(strange_sort_list \"${list[@]:1}\"))\n    fi\n\
    \    echo ${result[@]}\n}\n\ncandidate() {\n    strange_sort_list \"$@\"\n}\n\n\
    set -e\nrun_test() {\n    [[ $(candidate \"1 2 3 4\") = \"1 4 2 3\" ]]\n    [[\
    \ $(candidate \"5 6 7 8 9\") = \"5 9 6 8 7\" ]]\n    [[ $(candidate \"1 2 3 4\
    \ 5\") = \"1 5 2 4 3\" ]]\n    [[ $(candidate \"5 6 7 8 9 1\") = \"1 9 5 8 6 7\"\
    \ ]]\n    [[ $(candidate \"5 5 5 5\") = \"5 5 5 5\" ]]\n    [[ $(candidate \"\"\
    ) = \"\" ]]\n    [[ $(candidate \"1 2 3 4 5 6 7 8\") = \"1 8 2 7 3 6 4 5\" ]]\n\
    \    [[ $(candidate \"0 2 2 2 5 5 -5 -5\") = \"-5 5 -5 5 0 2 2 2\" ]]\n    [[\
    \ $(candidate \"111111\") = \"111111\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660003084
- exit_code: 1
  program: "#!/bin/bash\n# Given list of integers, return list in strange order.\n\
    # Strange sorting, is when you start with the minimum value,\n# then maximum of\
    \ the remaining integers, then minimum and so on.\n# Examples:\n#\n# $1 is a space-separated\
    \ list\nstrange_sort_list() {\n  local list=($1)\n  local sorted=()\n  local min=${list[0]}\n\
    \  local max=${list[0]}\n  local min_index=0\n  local max_index=0\n  local i=0\n\
    \  local j=0\n  local k=0\n  local n=${#list[@]}\n  local m=$((n / 2))\n  local\
    \ l=$((n - 1))\n  local s=0\n  local t=0\n  local u=0\n  local v=0\n  local w=0\n\
    \  local x=0\n  local y=0\n  local z=0\n  local a=0\n  local b=0\n  local c=0\n\
    \  local d=0\n  local e=0\n  local f=0\n  local g=0\n  local h=0\n  local p=0\n\
    \  local q=0\n  local r=0\n  local o=0\n  local p=0\n  local q=0\n  local r=0\n\
    \  local s=0\n  local t=0\n  local u=0\n  local v=0\n  local w=0\n  local x=0\n\
    \  local y=0\n  local z=0\n  local a=0\n  local b=0\n  local c=0\n  local d=0\n\
    \  local e=0\n  local f=0\n  local g=0\n  local h=0\n  local i=0\n  local j=0\n\
    \  local k=0\n  local l=0\n  local m=0\n  local n=0\n  local o=0\n  local p=0\n\
    \  local q=0\n  local r=0\n  local s=0\n  local t=0\n  local u=0\n  local v=0\n\
    \  local w=0\n  local x=0\n  local y=0\n  local z=0\n  local a=0\n  local b=0\n\
    \  local c=0\n  local d=0\n  local e=0\n  local f=0\n  local g=0\n  local h=0\n\
    \  local i=0\n  local j=0\n  local k=0\n  local l=\n}\n\ncandidate() {\n    strange_sort_list\
    \ \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"1 2 3 4\") = \"1 4 2\
    \ 3\" ]]\n    [[ $(candidate \"5 6 7 8 9\") = \"5 9 6 8 7\" ]]\n    [[ $(candidate\
    \ \"1 2 3 4 5\") = \"1 5 2 4 3\" ]]\n    [[ $(candidate \"5 6 7 8 9 1\") = \"\
    1 9 5 8 6 7\" ]]\n    [[ $(candidate \"5 5 5 5\") = \"5 5 5 5\" ]]\n    [[ $(candidate\
    \ \"\") = \"\" ]]\n    [[ $(candidate \"1 2 3 4 5 6 7 8\") = \"1 8 2 7 3 6 4 5\"\
    \ ]]\n    [[ $(candidate \"0 2 2 2 5 5 -5 -5\") = \"-5 5 -5 5 0 2 2 2\" ]]\n \
    \   [[ $(candidate \"111111\") = \"111111\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660003084
- exit_code: 1
  program: "#!/bin/bash\n# Given list of integers, return list in strange order.\n\
    # Strange sorting, is when you start with the minimum value,\n# then maximum of\
    \ the remaining integers, then minimum and so on.\n# Examples:\n#\n# $1 is a space-separated\
    \ list\nstrange_sort_list() {\n  local list=($1)\n  local result=()\n  local min=${list[0]}\n\
    \  local max=${list[0]}\n  local min_index=0\n  local max_index=0\n  local i=0\n\
    \  local j=0\n  local k=0\n  local l=0\n  local m=0\n  local n=0\n  local o=0\n\
    \  local p=0\n  local q=0\n  local r=0\n  local s=0\n  local t=0\n  local u=0\n\
    \  local v=0\n  local w=0\n  local x=0\n  local y=0\n  local z=0\n  local aa=0\n\
    \  local bb=0\n  local cc=0\n  local dd=0\n  local ee=0\n  local ff=0\n  local\
    \ gg=0\n  local hh=0\n  local ii=0\n  local jj=0\n  local kk=0\n  local ll=0\n\
    \  local mm=0\n  local nn=0\n  local oo=0\n  local pp=0\n  local qq=0\n  local\
    \ rr=0\n  local ss=0\n  local tt=0\n  local uu=0\n  local vv=0\n  local ww=0\n\
    \  local xx=0\n  local yy=0\n  local zz=0\n  local aaa=0\n  local bbb=0\n  local\
    \ ccc=0\n  local ddd=0\n  local eee=0\n  local fff=0\n  local ggg=0\n  local hhh=0\n\
    \  local iii=0\n  local jjj=0\n  local kkk=0\n  local lll=0\n  local mmm=0\n \
    \ local nnn=0\n  local ooo=0\n  local ppp=0\n  local qqq=0\n  local rrr=0\n  local\
    \ sss=0\n  local ttt=0\n  local uuu=0\n  local vvv=0\n  local www=0\n  local xxx=0\n\
    \  local yyy=0\n  local zzz=0\n\n}\n\ncandidate() {\n    strange_sort_list \"\
    $@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"1 2 3 4\") = \"1 4 2 3\"\
    \ ]]\n    [[ $(candidate \"5 6 7 8 9\") = \"5 9 6 8 7\" ]]\n    [[ $(candidate\
    \ \"1 2 3 4 5\") = \"1 5 2 4 3\" ]]\n    [[ $(candidate \"5 6 7 8 9 1\") = \"\
    1 9 5 8 6 7\" ]]\n    [[ $(candidate \"5 5 5 5\") = \"5 5 5 5\" ]]\n    [[ $(candidate\
    \ \"\") = \"\" ]]\n    [[ $(candidate \"1 2 3 4 5 6 7 8\") = \"1 8 2 7 3 6 4 5\"\
    \ ]]\n    [[ $(candidate \"0 2 2 2 5 5 -5 -5\") = \"-5 5 -5 5 0 2 2 2\" ]]\n \
    \   [[ $(candidate \"111111\") = \"111111\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660003084
- exit_code: 1
  program: "#!/bin/bash\n# Given list of integers, return list in strange order.\n\
    # Strange sorting, is when you start with the minimum value,\n# then maximum of\
    \ the remaining integers, then minimum and so on.\n# Examples:\n#\n# $1 is a space-separated\
    \ list\nstrange_sort_list() {\n    local -a list\n    local -a sorted_list\n \
    \   local min\n    local max\n    local i\n    local j\n    local k\n    local\
    \ n\n\n    list=($1)\n    n=${#list[@]}\n    for ((i=0; i<n; i++)); do\n     \
    \   min=${list[0]}\n        max=${list[0]}\n        for ((j=0; j<${#list[@]};\
    \ j++)); do\n            if [[ ${list[j]} -lt $min ]]; then\n                min=${list[j]}\n\
    \            fi\n            if [[ ${list[j]} -gt $max ]]; then\n            \
    \    max=${list[j]}\n            fi\n        done\n        sorted_list[$i]=$min\n\
    \        unset list[$(index_of $min ${list[@]})]\n        if [[ $i -lt $((n-1))\
    \ ]]; then\n            sorted_list[$((i+1))]=$max\n            unset list[$(index_of\
    \ $max ${list[@]})]\n        fi\n    done\n    echo ${sorted_list[@]}\n}\n\ncandidate()\
    \ {\n    strange_sort_list \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate\
    \ \"1 2 3 4\") = \"1 4 2 3\" ]]\n    [[ $(candidate \"5 6 7 8 9\") = \"5 9 6 8\
    \ 7\" ]]\n    [[ $(candidate \"1 2 3 4 5\") = \"1 5 2 4 3\" ]]\n    [[ $(candidate\
    \ \"5 6 7 8 9 1\") = \"1 9 5 8 6 7\" ]]\n    [[ $(candidate \"5 5 5 5\") = \"\
    5 5 5 5\" ]]\n    [[ $(candidate \"\") = \"\" ]]\n    [[ $(candidate \"1 2 3 4\
    \ 5 6 7 8\") = \"1 8 2 7 3 6 4 5\" ]]\n    [[ $(candidate \"0 2 2 2 5 5 -5 -5\"\
    ) = \"-5 5 -5 5 0 2 2 2\" ]]\n    [[ $(candidate \"111111\") = \"111111\" ]]\n\
    }\n\nrun_test"
  status: Exception
  stderr: '/tmp/tmpcwp4dcng.sh: line 32: index_of: command not found

    /tmp/tmpcwp4dcng.sh: line 32: unset: `list[]'': not a valid identifier

    /tmp/tmpcwp4dcng.sh: line 35: index_of: command not found

    /tmp/tmpcwp4dcng.sh: line 35: unset: `list[]'': not a valid identifier

    /tmp/tmpcwp4dcng.sh: line 32: index_of: command not found

    /tmp/tmpcwp4dcng.sh: line 32: unset: `list[]'': not a valid identifier

    /tmp/tmpcwp4dcng.sh: line 35: index_of: command not found

    /tmp/tmpcwp4dcng.sh: line 35: unset: `list[]'': not a valid identifier

    /tmp/tmpcwp4dcng.sh: line 32: index_of: command not found

    /tmp/tmpcwp4dcng.sh: line 32: unset: `list[]'': not a valid identifier

    /tmp/tmpcwp4dcng.sh: line 35: index_of: command not found

    /tmp/tmpcwp4dcng.sh: line 35: unset: `list[]'': not a valid identifier

    /tmp/tmpcwp4dcng.sh: line 32: index_of: command not found

    /tmp/tmpcwp4dcng.sh: line 32: unset: `list[]'': not a valid identifier

    '
  stdout: ''
  timestamp: 1660003084
- exit_code: 1
  program: "#!/bin/bash\n# Given list of integers, return list in strange order.\n\
    # Strange sorting, is when you start with the minimum value,\n# then maximum of\
    \ the remaining integers, then minimum and so on.\n# Examples:\n#\n# $1 is a space-separated\
    \ list\nstrange_sort_list() {\n    local list=$1\n    local sorted=()\n    local\
    \ sorted_list=()\n    local min=0\n    local max=0\n    local min_index=0\n  \
    \  local max_index=0\n    local i=0\n    local j=0\n    local k=0\n    local l=0\n\
    \    local m=0\n    local n=0\n    local o=0\n    local p=0\n    local q=0\n \
    \   local r=0\n    local s=0\n    local t=0\n    local u=0\n    local v=0\n  \
    \  local w=0\n    local x=0\n    local y=0\n    local z=0\n    local aa=0\n  \
    \  local bb=0\n    local cc=0\n    local dd=0\n    local ee=0\n    local ff=0\n\
    \    local gg=0\n    local hh=0\n    local ii=0\n    local jj=0\n    local kk=0\n\
    \    local ll=0\n    local mm=0\n    local nn=0\n    local oo=0\n    local pp=0\n\
    \    local qq=0\n    local rr=0\n    local ss=0\n    local tt=0\n    local uu=0\n\
    \    local vv=0\n    local ww=0\n    local xx=0\n    local yy=0\n    local zz=0\n\
    \    local aaa=0\n    local bbb=0\n    local ccc=0\n    local ddd=0\n    local\
    \ eee=0\n    local fff=0\n    local ggg=0\n    local hhh=0\n    local iii=0\n\
    \    local jjj=0\n    local kkk=0\n    local lll=0\n    local mmm=0\n    local\
    \ nnn=0\n    local ooo=0\n    local ppp=0\n    local qqq=0\n    local rrr=0\n\
    \    local sss=0\n    local ttt=0\n    local uuu=0\n    local vvv=0\n    local\
    \ www=0\n    local xxx=0\n    local yyy=0\n    local zzz=0\n    local\n}\n\ncandidate()\
    \ {\n    strange_sort_list \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate\
    \ \"1 2 3 4\") = \"1 4 2 3\" ]]\n    [[ $(candidate \"5 6 7 8 9\") = \"5 9 6 8\
    \ 7\" ]]\n    [[ $(candidate \"1 2 3 4 5\") = \"1 5 2 4 3\" ]]\n    [[ $(candidate\
    \ \"5 6 7 8 9 1\") = \"1 9 5 8 6 7\" ]]\n    [[ $(candidate \"5 5 5 5\") = \"\
    5 5 5 5\" ]]\n    [[ $(candidate \"\") = \"\" ]]\n    [[ $(candidate \"1 2 3 4\
    \ 5 6 7 8\") = \"1 8 2 7 3 6 4 5\" ]]\n    [[ $(candidate \"0 2 2 2 5 5 -5 -5\"\
    ) = \"-5 5 -5 5 0 2 2 2\" ]]\n    [[ $(candidate \"111111\") = \"111111\" ]]\n\
    }\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660003084
- exit_code: 1
  program: "#!/bin/bash\n# Given list of integers, return list in strange order.\n\
    # Strange sorting, is when you start with the minimum value,\n# then maximum of\
    \ the remaining integers, then minimum and so on.\n# Examples:\n#\n# $1 is a space-separated\
    \ list\nstrange_sort_list() {\n    local list=($1)\n    local len=${#list[@]}\n\
    \    local sorted=()\n    local i=0\n    local j=0\n    local k=0\n    local min=0\n\
    \    local max=0\n    local min_index=0\n    local max_index=0\n    local min_found=false\n\
    \    local max_found=false\n    local min_found_index=0\n    local max_found_index=0\n\
    \    local min_found_index_tmp=0\n    local max_found_index_tmp=0\n    local min_found_tmp=0\n\
    \    local max_found_tmp=0\n    local min_found_index_tmp_2=0\n    local max_found_index_tmp_2=0\n\
    \    local min_found_tmp_2=0\n    local max_found_tmp_2=0\n    local min_found_index_tmp_3=0\n\
    \    local max_found_index_tmp_3=0\n    local min_found_tmp_3=0\n    local max_found_tmp_3=0\n\
    \    local min_found_index_tmp_4=0\n    local max_found_index_tmp_4=0\n    local\
    \ min_found_tmp_4=0\n    local max_found_tmp_4=0\n    local min_found_index_tmp_5=0\n\
    \    local max_found_index_tmp_5=0\n    local min_found_tmp_5=0\n    local max_found_tmp_5=0\n\
    \    local min_found_index_tmp_6=0\n    local max_found_index_tmp_6=0\n    local\
    \ min_found_tmp_6=0\n    local max_found_tmp_6=0\n    local min_found_index_tmp_7=0\n\
    \    local max_found_index_tmp_7=0\n    local min_found_tmp_7=0\n    local max_found_tmp_7=0\n\
    \    local min_found_index_tmp_8=0\n    local max_found_index_tmp_8=0\n    local\
    \ min_found_tmp_8=0\n    local max_found_tmp_\n}\n\ncandidate() {\n    strange_sort_list\
    \ \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"1 2 3 4\") = \"1 4 2\
    \ 3\" ]]\n    [[ $(candidate \"5 6 7 8 9\") = \"5 9 6 8 7\" ]]\n    [[ $(candidate\
    \ \"1 2 3 4 5\") = \"1 5 2 4 3\" ]]\n    [[ $(candidate \"5 6 7 8 9 1\") = \"\
    1 9 5 8 6 7\" ]]\n    [[ $(candidate \"5 5 5 5\") = \"5 5 5 5\" ]]\n    [[ $(candidate\
    \ \"\") = \"\" ]]\n    [[ $(candidate \"1 2 3 4 5 6 7 8\") = \"1 8 2 7 3 6 4 5\"\
    \ ]]\n    [[ $(candidate \"0 2 2 2 5 5 -5 -5\") = \"-5 5 -5 5 0 2 2 2\" ]]\n \
    \   [[ $(candidate \"111111\") = \"111111\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660003084
- exit_code: 1
  program: "#!/bin/bash\n# Given list of integers, return list in strange order.\n\
    # Strange sorting, is when you start with the minimum value,\n# then maximum of\
    \ the remaining integers, then minimum and so on.\n# Examples:\n#\n# $1 is a space-separated\
    \ list\nstrange_sort_list() {\n    local list=\"$1\"\n    local result=\"\"\n\
    \    local min=0\n    local max=0\n    local min_index=0\n    local max_index=0\n\
    \    local i=0\n    local j=0\n    local k=0\n    local l=0\n    local m=0\n \
    \   local n=0\n    local o=0\n    local p=0\n    local q=0\n    local r=0\n  \
    \  local s=0\n    local t=0\n    local u=0\n    local v=0\n    local w=0\n   \
    \ local x=0\n    local y=0\n    local z=0\n    local a=0\n    local b=0\n    local\
    \ c=0\n    local d=0\n    local e=0\n    local f=0\n    local g=0\n    local h=0\n\
    \    local ii=0\n    local jj=0\n    local kk=0\n    local ll=0\n    local mm=0\n\
    \    local nn=0\n    local oo=0\n    local pp=0\n    local qq=0\n    local rr=0\n\
    \    local ss=0\n    local tt=0\n    local uu=0\n    local vv=0\n    local ww=0\n\
    \    local xx=0\n    local yy=0\n    local zz=0\n    local aa=0\n    local bb=0\n\
    \    local cc=0\n    local dd=0\n    local ee=0\n    local ff=0\n    local gg=0\n\
    \    local hh=0\n    local iii=0\n    local jjj=0\n    local kkk=0\n    local\
    \ lll=0\n    local mmm=0\n    local nnn=0\n    local ooo=0\n    local ppp=0\n\
    \    local qqq=0\n    local rrr=0\n    local sss=0\n    local ttt=0\n    local\
    \ uuu=0\n    local vvv=0\n    local www=0\n    local xxx=0\n    local yyy=0\n\
    \    local zzz=0\n    local aaaa=0\n    local bbbb=0\n    local\n}\n\ncandidate()\
    \ {\n    strange_sort_list \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate\
    \ \"1 2 3 4\") = \"1 4 2 3\" ]]\n    [[ $(candidate \"5 6 7 8 9\") = \"5 9 6 8\
    \ 7\" ]]\n    [[ $(candidate \"1 2 3 4 5\") = \"1 5 2 4 3\" ]]\n    [[ $(candidate\
    \ \"5 6 7 8 9 1\") = \"1 9 5 8 6 7\" ]]\n    [[ $(candidate \"5 5 5 5\") = \"\
    5 5 5 5\" ]]\n    [[ $(candidate \"\") = \"\" ]]\n    [[ $(candidate \"1 2 3 4\
    \ 5 6 7 8\") = \"1 8 2 7 3 6 4 5\" ]]\n    [[ $(candidate \"0 2 2 2 5 5 -5 -5\"\
    ) = \"-5 5 -5 5 0 2 2 2\" ]]\n    [[ $(candidate \"111111\") = \"111111\" ]]\n\
    }\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660003084
- exit_code: 1
  program: "#!/bin/bash\n# Given list of integers, return list in strange order.\n\
    # Strange sorting, is when you start with the minimum value,\n# then maximum of\
    \ the remaining integers, then minimum and so on.\n# Examples:\n#\n# $1 is a space-separated\
    \ list\nstrange_sort_list() {\n  local list=\"$1\"\n  local sorted_list=\"\"\n\
    \  local min_val=\"\"\n  local max_val=\"\"\n  local remaining_list=\"\"\n  local\
    \ remaining_list_len=\"\"\n  local i=\"\"\n  local j=\"\"\n  local k=\"\"\n  local\
    \ l=\"\"\n  local m=\"\"\n  local n=\"\"\n  local o=\"\"\n  local p=\"\"\n  local\
    \ q=\"\"\n  local r=\"\"\n  local s=\"\"\n  local t=\"\"\n  local u=\"\"\n  local\
    \ v=\"\"\n  local w=\"\"\n  local x=\"\"\n  local y=\"\"\n  local z=\"\"\n  local\
    \ aa=\"\"\n  local bb=\"\"\n  local cc=\"\"\n  local dd=\"\"\n  local ee=\"\"\n\
    \  local ff=\"\"\n  local gg=\"\"\n  local hh=\"\"\n  local ii=\"\"\n  local jj=\"\
    \"\n  local kk=\"\"\n  local ll=\"\"\n  local mm=\"\"\n  local nn=\"\"\n  local\
    \ oo=\"\"\n  local pp=\"\"\n  local qq=\"\"\n  local rr=\"\"\n  local ss=\"\"\n\
    \  local tt=\"\"\n  local uu=\"\"\n  local vv=\"\"\n  local ww=\"\"\n  local xx=\"\
    \"\n  local yy=\"\"\n  local zz=\"\"\n  local aaa=\"\"\n  local bbb=\"\"\n  local\
    \ ccc=\"\"\n  local ddd=\"\"\n  local eee=\"\"\n  local fff=\"\"\n  local ggg=\"\
    \"\n  local hhh=\"\"\n  local iii=\"\"\n  local jjj=\"\"\n  local kkk=\"\"\n \
    \ local lll=\"\"\n  local mmm=\"\"\n  local nnn=\"\"\n  local ooo=\"\"\n  local\
    \ ppp=\"\"\n  local qqq=\"\"\n  local rrr=\"\"\n  local sss=\"\"\n  local ttt=\"\
    \"\n  local uuu=\"\"\n  local vvv=\"\"\n  local www=\"\"\n  local xxx=\"\"\n \
    \ local yyy=\"\"\n  local zzz=\"\"\n  local aaaa=\"\"\n  local bbbb=\"\"\n  local\
    \ cccc=\"\"\n  local dddd=\"\"\n  local eeee=\"\"\n  local ffff=\"\"\n  local\
    \ gggg=\"\"\n  local hhhh=\"\"\n  local iiii=\"\"\n  local jjjj=\"\"\n  local\
    \ kkkk=\"\"\n  local\n}\n\ncandidate() {\n    strange_sort_list \"$@\"\n}\n\n\
    set -e\nrun_test() {\n    [[ $(candidate \"1 2 3 4\") = \"1 4 2 3\" ]]\n    [[\
    \ $(candidate \"5 6 7 8 9\") = \"5 9 6 8 7\" ]]\n    [[ $(candidate \"1 2 3 4\
    \ 5\") = \"1 5 2 4 3\" ]]\n    [[ $(candidate \"5 6 7 8 9 1\") = \"1 9 5 8 6 7\"\
    \ ]]\n    [[ $(candidate \"5 5 5 5\") = \"5 5 5 5\" ]]\n    [[ $(candidate \"\"\
    ) = \"\" ]]\n    [[ $(candidate \"1 2 3 4 5 6 7 8\") = \"1 8 2 7 3 6 4 5\" ]]\n\
    \    [[ $(candidate \"0 2 2 2 5 5 -5 -5\") = \"-5 5 -5 5 0 2 2 2\" ]]\n    [[\
    \ $(candidate \"111111\") = \"111111\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660003084
- exit_code: 1
  program: "#!/bin/bash\n# Given list of integers, return list in strange order.\n\
    # Strange sorting, is when you start with the minimum value,\n# then maximum of\
    \ the remaining integers, then minimum and so on.\n# Examples:\n#\n# $1 is a space-separated\
    \ list\nstrange_sort_list() {\n  local list=\"$1\"\n  local sorted_list=\"\"\n\
    \  local min_value=\"\"\n  local max_value=\"\"\n  local remaining_list=\"\"\n\
    \  local remaining_list_size=\"\"\n  local i=0\n  local j=0\n  local k=0\n  local\
    \ l=0\n  local m=0\n  local n=0\n  local o=0\n  local p=0\n  local q=0\n  local\
    \ r=0\n  local s=0\n  local t=0\n  local u=0\n  local v=0\n  local w=0\n  local\
    \ x=0\n  local y=0\n  local z=0\n  local aa=0\n  local bb=0\n  local cc=0\n  local\
    \ dd=0\n  local ee=0\n  local ff=0\n  local gg=0\n  local hh=0\n  local ii=0\n\
    \  local jj=0\n  local kk=0\n  local ll=0\n  local mm=0\n  local nn=0\n  local\
    \ oo=0\n  local pp=0\n  local qq=0\n  local rr=0\n  local ss=0\n  local tt=0\n\
    \  local uu=0\n  local vv=0\n  local ww=0\n  local xx=0\n  local yy=0\n  local\
    \ zz=0\n  local aaa=0\n  local bbb=0\n  local ccc=0\n  local ddd=0\n  local eee=0\n\
    \  local fff=0\n  local ggg=0\n  local hhh=0\n  local iii=0\n  local jjj=0\n \
    \ local kkk=0\n  local lll=0\n  local mmm=0\n  local nnn=0\n  local ooo=0\n  local\
    \ ppp=0\n  local qqq=0\n  local rrr=0\n  local sss=0\n  local ttt=0\n  local uuu=0\n\
    \  local vvv=0\n  local www=0\n  local xxx=0\n  local yyy=0\n  local zzz=0\n \
    \ local aaaa=\n}\n\ncandidate() {\n    strange_sort_list \"$@\"\n}\n\nset -e\n\
    run_test() {\n    [[ $(candidate \"1 2 3 4\") = \"1 4 2 3\" ]]\n    [[ $(candidate\
    \ \"5 6 7 8 9\") = \"5 9 6 8 7\" ]]\n    [[ $(candidate \"1 2 3 4 5\") = \"1 5\
    \ 2 4 3\" ]]\n    [[ $(candidate \"5 6 7 8 9 1\") = \"1 9 5 8 6 7\" ]]\n    [[\
    \ $(candidate \"5 5 5 5\") = \"5 5 5 5\" ]]\n    [[ $(candidate \"\") = \"\" ]]\n\
    \    [[ $(candidate \"1 2 3 4 5 6 7 8\") = \"1 8 2 7 3 6 4 5\" ]]\n    [[ $(candidate\
    \ \"0 2 2 2 5 5 -5 -5\") = \"-5 5 -5 5 0 2 2 2\" ]]\n    [[ $(candidate \"111111\"\
    ) = \"111111\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660003084
- exit_code: 1
  program: "#!/bin/bash\n# Given list of integers, return list in strange order.\n\
    # Strange sorting, is when you start with the minimum value,\n# then maximum of\
    \ the remaining integers, then minimum and so on.\n# Examples:\n#\n# $1 is a space-separated\
    \ list\nstrange_sort_list() {\n    local -a list=($1)\n    local -a sorted\n \
    \   local -i i=0\n    local -i j=${#list[@]}\n    local -i k=0\n    local -i l=0\n\
    \    local -i m=0\n    local -i n=0\n    local -i o=0\n    local -i p=0\n    local\
    \ -i q=0\n    local -i r=0\n    local -i s=0\n    local -i t=0\n    local -i u=0\n\
    \    local -i v=0\n    local -i w=0\n    local -i x=0\n    local -i y=0\n    local\
    \ -i z=0\n    local -i aa=0\n    local -i bb=0\n    local -i cc=0\n    local -i\
    \ dd=0\n    local -i ee=0\n    local -i ff=0\n    local -i gg=0\n    local -i\
    \ hh=0\n    local -i ii=0\n    local -i jj=0\n    local -i kk=0\n    local -i\
    \ ll=0\n    local -i mm=0\n    local -i nn=0\n    local -i oo=0\n    local -i\
    \ pp=0\n    local -i qq=0\n    local -i rr=0\n    local -i ss=0\n    local -i\
    \ tt=0\n    local -i uu=0\n    local -i vv=0\n    local -i ww=0\n    local -i\
    \ xx=0\n    local -i yy=0\n    local -i zz=0\n    local -i aaa=0\n    local -i\
    \ bbb=0\n    local -i ccc=0\n    local -i ddd=0\n    local -i eee=0\n    local\
    \ -i fff=0\n    local -i ggg=0\n    local -i hhh=0\n    local -i iii=0\n    local\
    \ -i jjj=0\n    local -i kkk=0\n    local -i lll=0\n    local -i mmm=0\n    local\
    \ -i n\n}\n\ncandidate() {\n    strange_sort_list \"$@\"\n}\n\nset -e\nrun_test()\
    \ {\n    [[ $(candidate \"1 2 3 4\") = \"1 4 2 3\" ]]\n    [[ $(candidate \"5\
    \ 6 7 8 9\") = \"5 9 6 8 7\" ]]\n    [[ $(candidate \"1 2 3 4 5\") = \"1 5 2 4\
    \ 3\" ]]\n    [[ $(candidate \"5 6 7 8 9 1\") = \"1 9 5 8 6 7\" ]]\n    [[ $(candidate\
    \ \"5 5 5 5\") = \"5 5 5 5\" ]]\n    [[ $(candidate \"\") = \"\" ]]\n    [[ $(candidate\
    \ \"1 2 3 4 5 6 7 8\") = \"1 8 2 7 3 6 4 5\" ]]\n    [[ $(candidate \"0 2 2 2\
    \ 5 5 -5 -5\") = \"-5 5 -5 5 0 2 2 2\" ]]\n    [[ $(candidate \"111111\") = \"\
    111111\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660003084
- exit_code: 2
  program: "#!/bin/bash\n# Given list of integers, return list in strange order.\n\
    # Strange sorting, is when you start with the minimum value,\n# then maximum of\
    \ the remaining integers, then minimum and so on.\n# Examples:\n#\n# $1 is a space-separated\
    \ list\nstrange_sort_list() {\n    local list=($1)\n    local sorted_list=()\n\
    \    local min=${list[0]}\n    local max=${list[0]}\n    local min_index=0\n \
    \   local max_index=0\n    local i=0\n    local j=0\n    local list_length=${#list[@]}\n\
    \    local sorted_list_length=0\n    local is_min=0\n    local is_max=0\n\n  \
    \  # Find min and max\n    for i in ${list[@]}; do\n        if [ $i -lt $min ];\
    \ then\n            min=$i\n            min_index=$j\n        fi\n        if [\
    \ $i -gt $max ]; then\n            max=$i\n            max_index=$j\n        fi\n\
    \        j=$((j+1))\n    done\n\n    # Add min to sorted list\n    sorted_list[0]=$min\n\
    \    sorted_list_length=1\n\n    # Add max to sorted list\n    if [ $min_index\
    \ -lt $max_index ]; then\n        sorted_list[1]=$max\n        sorted_list_length=2\n\
    \    else\n        sorted_list[$list_length]=$max\n        sorted_list_length=$((list_length+1))\n\
    \    fi\n\n    # Add remaining elements to sorted list\n    for i in ${list[@]};\
    \ do\n        is_min=0\n        is_max=0\n        for j in ${sorted_list[@]};\
    \ do\n            if [ $i -eq $j ]; then\n                if [ $i -eq $min ];\
    \ then\n                    is_min=1\n                fi\n                if [\
    \ $i -eq $max ]; then\n                    is_max=1\n                fi\n    \
    \        fi\n        done\n        if [ $is_min -eq 0 ] && [ $is_max -eq 0 ];\
    \ then\n            if [ $sorted_list_length -lt $list_length ]; then\n      \
    \          sorted_list[$sorted_list_length]=$i\n                sorted_list_length=$((sorted_list_length+1))\n\
    \            else\n                sorted_list[$list_length]=$i\n            \
    \    sorted_list_length=$((list_length+1))\n\n}\n\ncandidate() {\n    strange_sort_list\
    \ \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"1 2 3 4\") = \"1 4 2\
    \ 3\" ]]\n    [[ $(candidate \"5 6 7 8 9\") = \"5 9 6 8 7\" ]]\n    [[ $(candidate\
    \ \"1 2 3 4 5\") = \"1 5 2 4 3\" ]]\n    [[ $(candidate \"5 6 7 8 9 1\") = \"\
    1 9 5 8 6 7\" ]]\n    [[ $(candidate \"5 5 5 5\") = \"5 5 5 5\" ]]\n    [[ $(candidate\
    \ \"\") = \"\" ]]\n    [[ $(candidate \"1 2 3 4 5 6 7 8\") = \"1 8 2 7 3 6 4 5\"\
    \ ]]\n    [[ $(candidate \"0 2 2 2 5 5 -5 -5\") = \"-5 5 -5 5 0 2 2 2\" ]]\n \
    \   [[ $(candidate \"111111\") = \"111111\" ]]\n}\n\nrun_test"
  status: SyntaxError
  stderr: '/tmp/tmppoo89fxj.sh: line 70: syntax error near unexpected token `}''

    /tmp/tmppoo89fxj.sh: line 70: `}''

    '
  stdout: ''
  timestamp: 1660003084
- exit_code: 1
  program: "#!/bin/bash\n# Given list of integers, return list in strange order.\n\
    # Strange sorting, is when you start with the minimum value,\n# then maximum of\
    \ the remaining integers, then minimum and so on.\n# Examples:\n#\n# $1 is a space-separated\
    \ list\nstrange_sort_list() {\n  local -a list=($1)\n  local -a sorted=()\n  local\
    \ -a remaining=()\n  local min=${list[0]}\n  local max=${list[0]}\n  local i=0\n\
    \  local j=0\n  local k=0\n  local l=0\n  local n=${#list[@]}\n  local m=0\n \
    \ local tmp=0\n  local tmp2=0\n  local tmp3=0\n  local tmp4=0\n  local tmp5=0\n\
    \  local tmp6=0\n  local tmp7=0\n  local tmp8=0\n  local tmp9=0\n  local tmp10=0\n\
    \  local tmp11=0\n  local tmp12=0\n  local tmp13=0\n  local tmp14=0\n  local tmp15=0\n\
    \  local tmp16=0\n  local tmp17=0\n  local tmp18=0\n  local tmp19=0\n  local tmp20=0\n\
    \  local tmp21=0\n  local tmp22=0\n  local tmp23=0\n  local tmp24=0\n  local tmp25=0\n\
    \  local tmp26=0\n  local tmp27=0\n  local tmp28=0\n  local tmp29=0\n  local tmp30=0\n\
    \  local tmp31=0\n  local tmp32=0\n  local tmp33=0\n  local tmp34=0\n  local tmp35=0\n\
    \  local tmp36=0\n  local tmp37=0\n  local tmp38=0\n  local tmp39=0\n  local tmp40=0\n\
    \  local tmp41=0\n  local tmp42=0\n  local tmp43=0\n  local tmp44=0\n  local tmp45=0\n\
    \  local tmp46=0\n  local tmp47=0\n  local tmp48=0\n  local tmp49=0\n  local tmp50=0\n\
    \  local tmp51=0\n  local tmp52=0\n  local tmp53=0\n  local tmp54=0\n  local tmp55=0\n\
    \  local tmp56=0\n  local tmp57=0\n  local tmp58=0\n  local tmp59=0\n  local tmp60=0\n\
    \  local tmp61=\n}\n\ncandidate() {\n    strange_sort_list \"$@\"\n}\n\nset -e\n\
    run_test() {\n    [[ $(candidate \"1 2 3 4\") = \"1 4 2 3\" ]]\n    [[ $(candidate\
    \ \"5 6 7 8 9\") = \"5 9 6 8 7\" ]]\n    [[ $(candidate \"1 2 3 4 5\") = \"1 5\
    \ 2 4 3\" ]]\n    [[ $(candidate \"5 6 7 8 9 1\") = \"1 9 5 8 6 7\" ]]\n    [[\
    \ $(candidate \"5 5 5 5\") = \"5 5 5 5\" ]]\n    [[ $(candidate \"\") = \"\" ]]\n\
    \    [[ $(candidate \"1 2 3 4 5 6 7 8\") = \"1 8 2 7 3 6 4 5\" ]]\n    [[ $(candidate\
    \ \"0 2 2 2 5 5 -5 -5\") = \"-5 5 -5 5 0 2 2 2\" ]]\n    [[ $(candidate \"111111\"\
    ) = \"111111\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660003084
- exit_code: 1
  program: "#!/bin/bash\n# Given list of integers, return list in strange order.\n\
    # Strange sorting, is when you start with the minimum value,\n# then maximum of\
    \ the remaining integers, then minimum and so on.\n# Examples:\n#\n# $1 is a space-separated\
    \ list\nstrange_sort_list() {\n  local list=($1)\n  local result=()\n  local i=0\n\
    \  local j=0\n  local min=0\n  local max=0\n  local min_index=0\n  local max_index=0\n\
    \  local size=${#list[@]}\n  local tmp=0\n\n  for ((i=0; i<size; i++)); do\n \
    \   min=${list[0]}\n    max=${list[0]}\n    min_index=0\n    max_index=0\n   \
    \ for ((j=0; j<size; j++)); do\n      if [[ ${list[j]} -lt $min ]]; then\n   \
    \     min=${list[j]}\n        min_index=$j\n      fi\n      if [[ ${list[j]} -gt\
    \ $max ]]; then\n        max=${list[j]}\n        max_index=$j\n      fi\n    done\n\
    \    if [[ $((i%2)) -eq 0 ]]; then\n      result+=($min)\n      list[$min_index]=$((max+1))\n\
    \    else\n      result+=($max)\n      list[$max_index]=$((min-1))\n    fi\n \
    \ done\n  echo ${result[@]}\n}\n\ncandidate() {\n    strange_sort_list \"$@\"\n\
    }\n\nset -e\nrun_test() {\n    [[ $(candidate \"1 2 3 4\") = \"1 4 2 3\" ]]\n\
    \    [[ $(candidate \"5 6 7 8 9\") = \"5 9 6 8 7\" ]]\n    [[ $(candidate \"1\
    \ 2 3 4 5\") = \"1 5 2 4 3\" ]]\n    [[ $(candidate \"5 6 7 8 9 1\") = \"1 9 5\
    \ 8 6 7\" ]]\n    [[ $(candidate \"5 5 5 5\") = \"5 5 5 5\" ]]\n    [[ $(candidate\
    \ \"\") = \"\" ]]\n    [[ $(candidate \"1 2 3 4 5 6 7 8\") = \"1 8 2 7 3 6 4 5\"\
    \ ]]\n    [[ $(candidate \"0 2 2 2 5 5 -5 -5\") = \"-5 5 -5 5 0 2 2 2\" ]]\n \
    \   [[ $(candidate \"111111\") = \"111111\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660003084
- exit_code: 1
  program: "#!/bin/bash\n# Given list of integers, return list in strange order.\n\
    # Strange sorting, is when you start with the minimum value,\n# then maximum of\
    \ the remaining integers, then minimum and so on.\n# Examples:\n#\n# $1 is a space-separated\
    \ list\nstrange_sort_list() {\n    local list=($1)\n    local sorted=()\n    local\
    \ min=${list[0]}\n    local max=${list[0]}\n    local min_index=0\n    local max_index=0\n\
    \    local i=0\n    local j=0\n    local k=0\n    local n=${#list[@]}\n    local\
    \ m=0\n    local tmp=0\n    local tmp_index=0\n    local tmp_list=()\n    local\
    \ tmp_list_index=()\n    local tmp_list_index_min=0\n    local tmp_list_index_max=0\n\
    \    local tmp_list_index_min_index=0\n    local tmp_list_index_max_index=0\n\
    \    local tmp_list_index_min_value=0\n    local tmp_list_index_max_value=0\n\
    \    local tmp_list_index_min_value_index=0\n    local tmp_list_index_max_value_index=0\n\
    \    local tmp_list_index_min_value_index_value=0\n    local tmp_list_index_max_value_index_value=0\n\
    \    local tmp_list_index_min_value_index_value_index=0\n    local tmp_list_index_max_value_index_value_index=0\n\
    \    local tmp_list_index_min_value_index_value_index_value=0\n    local tmp_list_index_max_value_index_value_index_value=0\n\
    \    local tmp_list_index_min_value_index_value_index_value_index=0\n    local\
    \ tmp_list_index_max_value_index_value_index_value_index=0\n    local tmp_list_index_min_value_index_value_index_value_index_value=0\n\
    \    local tmp_list_index_max_value_index_value_index_value_index_value=0\n  \
    \  local tmp_list_index_min_value_index_value_index_value_index_value_index=0\n\
    \    local tmp_list_index_max_value_index_value_index_value_index_value_index=0\n\
    \    local tmp_list_\n}\n\ncandidate() {\n    strange_sort_list \"$@\"\n}\n\n\
    set -e\nrun_test() {\n    [[ $(candidate \"1 2 3 4\") = \"1 4 2 3\" ]]\n    [[\
    \ $(candidate \"5 6 7 8 9\") = \"5 9 6 8 7\" ]]\n    [[ $(candidate \"1 2 3 4\
    \ 5\") = \"1 5 2 4 3\" ]]\n    [[ $(candidate \"5 6 7 8 9 1\") = \"1 9 5 8 6 7\"\
    \ ]]\n    [[ $(candidate \"5 5 5 5\") = \"5 5 5 5\" ]]\n    [[ $(candidate \"\"\
    ) = \"\" ]]\n    [[ $(candidate \"1 2 3 4 5 6 7 8\") = \"1 8 2 7 3 6 4 5\" ]]\n\
    \    [[ $(candidate \"0 2 2 2 5 5 -5 -5\") = \"-5 5 -5 5 0 2 2 2\" ]]\n    [[\
    \ $(candidate \"111111\") = \"111111\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660003084
- exit_code: 1
  program: "#!/bin/bash\n# Given list of integers, return list in strange order.\n\
    # Strange sorting, is when you start with the minimum value,\n# then maximum of\
    \ the remaining integers, then minimum and so on.\n# Examples:\n#\n# $1 is a space-separated\
    \ list\nstrange_sort_list() {\n  local -a list=($1)\n  local -a sorted=()\n  local\
    \ -i i=0\n  local -i j=0\n  local -i k=0\n  local -i l=0\n  local -i m=0\n  local\
    \ -i n=0\n  local -i o=0\n  local -i p=0\n  local -i q=0\n  local -i r=0\n  local\
    \ -i s=0\n  local -i t=0\n  local -i u=0\n  local -i v=0\n  local -i w=0\n  local\
    \ -i x=0\n  local -i y=0\n  local -i z=0\n  local -i aa=0\n  local -i bb=0\n \
    \ local -i cc=0\n  local -i dd=0\n  local -i ee=0\n  local -i ff=0\n  local -i\
    \ gg=0\n  local -i hh=0\n  local -i ii=0\n  local -i jj=0\n  local -i kk=0\n \
    \ local -i ll=0\n  local -i mm=0\n  local -i nn=0\n  local -i oo=0\n  local -i\
    \ pp=0\n  local -i qq=0\n  local -i rr=0\n  local -i ss=0\n  local -i tt=0\n \
    \ local -i uu=0\n  local -i vv=0\n  local -i ww=0\n  local -i xx=0\n  local -i\
    \ yy=0\n  local -i zz=0\n  local -i aaa=0\n  local -i bbb=0\n  local -i ccc=0\n\
    \  local -i ddd=0\n  local -i eee=0\n  local -i fff=0\n  local -i ggg=0\n  local\
    \ -i hhh=0\n  local -i iii=0\n  local -i jjj=0\n  local -i kkk=0\n  local -i lll=0\n\
    \  local -i mmm=0\n  local -i nnn=0\n}\n\ncandidate() {\n    strange_sort_list\
    \ \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"1 2 3 4\") = \"1 4 2\
    \ 3\" ]]\n    [[ $(candidate \"5 6 7 8 9\") = \"5 9 6 8 7\" ]]\n    [[ $(candidate\
    \ \"1 2 3 4 5\") = \"1 5 2 4 3\" ]]\n    [[ $(candidate \"5 6 7 8 9 1\") = \"\
    1 9 5 8 6 7\" ]]\n    [[ $(candidate \"5 5 5 5\") = \"5 5 5 5\" ]]\n    [[ $(candidate\
    \ \"\") = \"\" ]]\n    [[ $(candidate \"1 2 3 4 5 6 7 8\") = \"1 8 2 7 3 6 4 5\"\
    \ ]]\n    [[ $(candidate \"0 2 2 2 5 5 -5 -5\") = \"-5 5 -5 5 0 2 2 2\" ]]\n \
    \   [[ $(candidate \"111111\") = \"111111\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660003084
- exit_code: 1
  program: "#!/bin/bash\n# Given list of integers, return list in strange order.\n\
    # Strange sorting, is when you start with the minimum value,\n# then maximum of\
    \ the remaining integers, then minimum and so on.\n# Examples:\n#\n# $1 is a space-separated\
    \ list\nstrange_sort_list() {\n  local list=($1)\n  local sorted=()\n  local min=${list[0]}\n\
    \  local max=${list[0]}\n  local min_index=0\n  local max_index=0\n  local i=0\n\
    \  local j=0\n  local k=0\n  local l=0\n  local m=0\n  local n=0\n  local o=0\n\
    \  local p=0\n  local q=0\n  local r=0\n  local s=0\n  local t=0\n  local u=0\n\
    \  local v=0\n  local w=0\n  local x=0\n  local y=0\n  local z=0\n  local aa=0\n\
    \  local bb=0\n  local cc=0\n  local dd=0\n  local ee=0\n  local ff=0\n  local\
    \ gg=0\n  local hh=0\n  local ii=0\n  local jj=0\n  local kk=0\n  local ll=0\n\
    \  local mm=0\n  local nn=0\n  local oo=0\n  local pp=0\n  local qq=0\n  local\
    \ rr=0\n  local ss=0\n  local tt=0\n  local uu=0\n  local vv=0\n  local ww=0\n\
    \  local xx=0\n  local yy=0\n  local zz=0\n  local aaa=0\n  local bbb=0\n  local\
    \ ccc=0\n  local ddd=0\n  local eee=0\n  local fff=0\n  local ggg=0\n  local hhh=0\n\
    \  local iii=0\n  local jjj=0\n  local kkk=0\n  local lll=0\n  local mmm=0\n \
    \ local nnn=0\n  local ooo=0\n  local ppp=0\n  local qqq=0\n  local rrr=0\n  local\
    \ sss=0\n  local ttt=0\n  local uuu=0\n  local vvv=0\n  local www=0\n  local xxx=0\n\
    \  local yyy=0\n  local zzz=0\n\n}\n\ncandidate() {\n    strange_sort_list \"\
    $@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"1 2 3 4\") = \"1 4 2 3\"\
    \ ]]\n    [[ $(candidate \"5 6 7 8 9\") = \"5 9 6 8 7\" ]]\n    [[ $(candidate\
    \ \"1 2 3 4 5\") = \"1 5 2 4 3\" ]]\n    [[ $(candidate \"5 6 7 8 9 1\") = \"\
    1 9 5 8 6 7\" ]]\n    [[ $(candidate \"5 5 5 5\") = \"5 5 5 5\" ]]\n    [[ $(candidate\
    \ \"\") = \"\" ]]\n    [[ $(candidate \"1 2 3 4 5 6 7 8\") = \"1 8 2 7 3 6 4 5\"\
    \ ]]\n    [[ $(candidate \"0 2 2 2 5 5 -5 -5\") = \"-5 5 -5 5 0 2 2 2\" ]]\n \
    \   [[ $(candidate \"111111\") = \"111111\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660003084
- exit_code: 1
  program: "#!/bin/bash\n# Given list of integers, return list in strange order.\n\
    # Strange sorting, is when you start with the minimum value,\n# then maximum of\
    \ the remaining integers, then minimum and so on.\n# Examples:\n#\n# $1 is a space-separated\
    \ list\nstrange_sort_list() {\n    local list=($1)\n    local sorted=()\n    local\
    \ i=0\n    local j=0\n    local k=0\n    local l=0\n    local m=0\n    local n=0\n\
    \    local o=0\n    local p=0\n    local q=0\n    local r=0\n    local s=0\n \
    \   local t=0\n    local u=0\n    local v=0\n    local w=0\n    local x=0\n  \
    \  local y=0\n    local z=0\n    local aa=0\n    local bb=0\n    local cc=0\n\
    \    local dd=0\n    local ee=0\n    local ff=0\n    local gg=0\n    local hh=0\n\
    \    local ii=0\n    local jj=0\n    local kk=0\n    local ll=0\n    local mm=0\n\
    \    local nn=0\n    local oo=0\n    local pp=0\n    local qq=0\n    local rr=0\n\
    \    local ss=0\n    local tt=0\n    local uu=0\n    local vv=0\n    local ww=0\n\
    \    local xx=0\n    local yy=0\n    local zz=0\n    local aaa=0\n    local bbb=0\n\
    \    local ccc=0\n    local ddd=0\n    local eee=0\n    local fff=0\n    local\
    \ ggg=0\n    local hhh=0\n    local iii=0\n    local jjj=0\n    local kkk=0\n\
    \    local lll=0\n    local mmm=0\n    local nnn=0\n    local ooo=0\n    local\
    \ ppp=0\n    local qqq=0\n    local rrr=0\n    local sss=0\n    local ttt=0\n\
    \    local uuu=0\n    local vvv=0\n    local www=0\n    local xxx=0\n    local\
    \ yyy=0\n    local zzz=0\n    local aaaa=0\n    local bbbb=0\n    local cccc=0\n\
    \    local dddd=0\n    local eeee\n}\n\ncandidate() {\n    strange_sort_list \"\
    $@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"1 2 3 4\") = \"1 4 2 3\"\
    \ ]]\n    [[ $(candidate \"5 6 7 8 9\") = \"5 9 6 8 7\" ]]\n    [[ $(candidate\
    \ \"1 2 3 4 5\") = \"1 5 2 4 3\" ]]\n    [[ $(candidate \"5 6 7 8 9 1\") = \"\
    1 9 5 8 6 7\" ]]\n    [[ $(candidate \"5 5 5 5\") = \"5 5 5 5\" ]]\n    [[ $(candidate\
    \ \"\") = \"\" ]]\n    [[ $(candidate \"1 2 3 4 5 6 7 8\") = \"1 8 2 7 3 6 4 5\"\
    \ ]]\n    [[ $(candidate \"0 2 2 2 5 5 -5 -5\") = \"-5 5 -5 5 0 2 2 2\" ]]\n \
    \   [[ $(candidate \"111111\") = \"111111\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660003084
- exit_code: 1
  program: "#!/bin/bash\n# Given list of integers, return list in strange order.\n\
    # Strange sorting, is when you start with the minimum value,\n# then maximum of\
    \ the remaining integers, then minimum and so on.\n# Examples:\n#\n# $1 is a space-separated\
    \ list\nstrange_sort_list() {\n    local -a list=($1)\n    local -a result=()\n\
    \    local -i i=0\n    local -i j=0\n    local -i k=0\n    local -i l=0\n    local\
    \ -i m=0\n    local -i n=0\n    local -i o=0\n    local -i p=0\n    local -i q=0\n\
    \    local -i r=0\n    local -i s=0\n    local -i t=0\n    local -i u=0\n    local\
    \ -i v=0\n    local -i w=0\n    local -i x=0\n    local -i y=0\n    local -i z=0\n\
    \    local -i aa=0\n    local -i bb=0\n    local -i cc=0\n    local -i dd=0\n\
    \    local -i ee=0\n    local -i ff=0\n    local -i gg=0\n    local -i hh=0\n\
    \    local -i ii=0\n    local -i jj=0\n    local -i kk=0\n    local -i ll=0\n\
    \    local -i mm=0\n    local -i nn=0\n    local -i oo=0\n    local -i pp=0\n\
    \    local -i qq=0\n    local -i rr=0\n    local -i ss=0\n    local -i tt=0\n\
    \    local -i uu=0\n    local -i vv=0\n    local -i ww=0\n    local -i xx=0\n\
    \    local -i yy=0\n    local -i zz=0\n    local -i aaa=0\n    local -i bbb=0\n\
    \    local -i ccc=0\n    local -i ddd=0\n    local -i eee=0\n    local -i fff=0\n\
    \    local -i ggg=0\n    local -i hhh=0\n    local -i iii=0\n    local -i jjj=0\n\
    \    local -i kkk=0\n    local -i lll=0\n    local -i mmm=0\n    local -i nnn=0\n\
    }\n\ncandidate() {\n    strange_sort_list \"$@\"\n}\n\nset -e\nrun_test() {\n\
    \    [[ $(candidate \"1 2 3 4\") = \"1 4 2 3\" ]]\n    [[ $(candidate \"5 6 7\
    \ 8 9\") = \"5 9 6 8 7\" ]]\n    [[ $(candidate \"1 2 3 4 5\") = \"1 5 2 4 3\"\
    \ ]]\n    [[ $(candidate \"5 6 7 8 9 1\") = \"1 9 5 8 6 7\" ]]\n    [[ $(candidate\
    \ \"5 5 5 5\") = \"5 5 5 5\" ]]\n    [[ $(candidate \"\") = \"\" ]]\n    [[ $(candidate\
    \ \"1 2 3 4 5 6 7 8\") = \"1 8 2 7 3 6 4 5\" ]]\n    [[ $(candidate \"0 2 2 2\
    \ 5 5 -5 -5\") = \"-5 5 -5 5 0 2 2 2\" ]]\n    [[ $(candidate \"111111\") = \"\
    111111\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660003084
- exit_code: 1
  program: "#!/bin/bash\n# Given list of integers, return list in strange order.\n\
    # Strange sorting, is when you start with the minimum value,\n# then maximum of\
    \ the remaining integers, then minimum and so on.\n# Examples:\n#\n# $1 is a space-separated\
    \ list\nstrange_sort_list() {\n    local list=($1)\n    local result=()\n    local\
    \ min=${list[0]}\n    local max=${list[0]}\n    local min_index=0\n    local max_index=0\n\
    \    local i=0\n    local j=0\n    local k=0\n    local n=${#list[@]}\n    local\
    \ temp=0\n    local temp_index=0\n    local temp_min=0\n    local temp_max=0\n\
    \    local temp_min_index=0\n    local temp_max_index=0\n    local temp_i=0\n\
    \    local temp_j=0\n    local temp_k=0\n    local temp_n=0\n    local temp_result=()\n\
    \    local temp_list=()\n    local temp_result_str=\"\"\n    local temp_list_str=\"\
    \"\n    local temp_result_str_len=0\n    local temp_list_str_len=0\n    local\
    \ temp_result_str_len_max=0\n    local temp_list_str_len_max=0\n    local temp_result_str_len_max_index=0\n\
    \    local temp_list_str_len_max_index=0\n    local temp_result_str_len_max_index_str=\"\
    \"\n    local temp_list_str_len_max_index_str=\"\"\n    local temp_result_str_len_max_index_str_len=0\n\
    \    local temp_list_str_len_max_index_str_len=0\n    local temp_result_str_len_max_index_str_len_max=0\n\
    \    local temp_list_str_len_max_index_str_len_max=0\n    local temp_result_str_len_max_index_str_len_max_index=0\n\
    \    local temp_list_str_len_max_index_str_len_max_index=0\n    local temp_result_str_len_max_index_str_len_max_index_str=\"\
    \"\n    local temp_list_str_len_max_index_str_len_max_index_str=\"\"\n    local\
    \ temp_result_str_len_max_index_str_\n}\n\ncandidate() {\n    strange_sort_list\
    \ \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"1 2 3 4\") = \"1 4 2\
    \ 3\" ]]\n    [[ $(candidate \"5 6 7 8 9\") = \"5 9 6 8 7\" ]]\n    [[ $(candidate\
    \ \"1 2 3 4 5\") = \"1 5 2 4 3\" ]]\n    [[ $(candidate \"5 6 7 8 9 1\") = \"\
    1 9 5 8 6 7\" ]]\n    [[ $(candidate \"5 5 5 5\") = \"5 5 5 5\" ]]\n    [[ $(candidate\
    \ \"\") = \"\" ]]\n    [[ $(candidate \"1 2 3 4 5 6 7 8\") = \"1 8 2 7 3 6 4 5\"\
    \ ]]\n    [[ $(candidate \"0 2 2 2 5 5 -5 -5\") = \"-5 5 -5 5 0 2 2 2\" ]]\n \
    \   [[ $(candidate \"111111\") = \"111111\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660003084
- exit_code: 1
  program: "#!/bin/bash\n# Given list of integers, return list in strange order.\n\
    # Strange sorting, is when you start with the minimum value,\n# then maximum of\
    \ the remaining integers, then minimum and so on.\n# Examples:\n#\n# $1 is a space-separated\
    \ list\nstrange_sort_list() {\n    local list=($1)\n    local sorted_list=()\n\
    \    local min=${list[0]}\n    local max=${list[0]}\n    local min_index=0\n \
    \   local max_index=0\n    local i=0\n    local j=0\n    local k=0\n    local\
    \ l=0\n    local m=0\n    local n=0\n    local o=0\n    local p=0\n    local q=0\n\
    \    local r=0\n    local s=0\n    local t=0\n    local u=0\n    local v=0\n \
    \   local w=0\n    local x=0\n    local y=0\n    local z=0\n    local aa=0\n \
    \   local bb=0\n    local cc=0\n    local dd=0\n    local ee=0\n    local ff=0\n\
    \    local gg=0\n    local hh=0\n    local ii=0\n    local jj=0\n    local kk=0\n\
    \    local ll=0\n    local mm=0\n    local nn=0\n    local oo=0\n    local pp=0\n\
    \    local qq=0\n    local rr=0\n    local ss=0\n    local tt=0\n    local uu=0\n\
    \    local vv=0\n    local ww=0\n    local xx=0\n    local yy=0\n    local zz=0\n\
    \    local aaa=0\n    local bbb=0\n    local ccc=0\n    local ddd=0\n    local\
    \ eee=0\n    local fff=0\n    local ggg=0\n    local hhh=0\n    local iii=0\n\
    \    local jjj=0\n    local kkk=0\n    local lll=0\n    local mmm=0\n    local\
    \ nnn=0\n    local ooo=0\n    local ppp=0\n    local qqq=0\n    local rrr=0\n\
    \    local sss=0\n    local ttt=0\n    local uuu=0\n    local vvv=0\n    local\
    \ www=0\n    local xxx=0\n    local yyy=0\n    local zzz=\n}\n\ncandidate() {\n\
    \    strange_sort_list \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"\
    1 2 3 4\") = \"1 4 2 3\" ]]\n    [[ $(candidate \"5 6 7 8 9\") = \"5 9 6 8 7\"\
    \ ]]\n    [[ $(candidate \"1 2 3 4 5\") = \"1 5 2 4 3\" ]]\n    [[ $(candidate\
    \ \"5 6 7 8 9 1\") = \"1 9 5 8 6 7\" ]]\n    [[ $(candidate \"5 5 5 5\") = \"\
    5 5 5 5\" ]]\n    [[ $(candidate \"\") = \"\" ]]\n    [[ $(candidate \"1 2 3 4\
    \ 5 6 7 8\") = \"1 8 2 7 3 6 4 5\" ]]\n    [[ $(candidate \"0 2 2 2 5 5 -5 -5\"\
    ) = \"-5 5 -5 5 0 2 2 2\" ]]\n    [[ $(candidate \"111111\") = \"111111\" ]]\n\
    }\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660003083
- exit_code: 1
  program: "#!/bin/bash\n# Given list of integers, return list in strange order.\n\
    # Strange sorting, is when you start with the minimum value,\n# then maximum of\
    \ the remaining integers, then minimum and so on.\n# Examples:\n#\n# $1 is a space-separated\
    \ list\nstrange_sort_list() {\n  local list=($1)\n  local sorted=()\n  local min=${list[0]}\n\
    \  local max=${list[0]}\n  local min_index=0\n  local max_index=0\n  local i=0\n\
    \  local j=0\n  local k=0\n  local l=0\n  local m=0\n  local n=0\n  local o=0\n\
    \  local p=0\n  local q=0\n  local r=0\n  local s=0\n  local t=0\n  local u=0\n\
    \  local v=0\n  local w=0\n  local x=0\n  local y=0\n  local z=0\n  local aa=0\n\
    \  local bb=0\n  local cc=0\n  local dd=0\n  local ee=0\n  local ff=0\n  local\
    \ gg=0\n  local hh=0\n  local ii=0\n  local jj=0\n  local kk=0\n  local ll=0\n\
    \  local mm=0\n  local nn=0\n  local oo=0\n  local pp=0\n  local qq=0\n  local\
    \ rr=0\n  local ss=0\n  local tt=0\n  local uu=0\n  local vv=0\n  local ww=0\n\
    \  local xx=0\n  local yy=0\n  local zz=0\n  local aaa=0\n  local bbb=0\n  local\
    \ ccc=0\n  local ddd=0\n  local eee=0\n  local fff=0\n  local ggg=0\n  local hhh=0\n\
    \  local iii=0\n  local jjj=0\n  local kkk=0\n  local lll=0\n  local mmm=0\n \
    \ local nnn=0\n  local ooo=0\n  local ppp=0\n  local qqq=0\n  local rrr=0\n  local\
    \ sss=0\n  local ttt=0\n  local uuu=0\n  local vvv=0\n  local www=0\n  local xxx=0\n\
    \  local yyy=0\n  local zzz=0\n\n}\n\ncandidate() {\n    strange_sort_list \"\
    $@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"1 2 3 4\") = \"1 4 2 3\"\
    \ ]]\n    [[ $(candidate \"5 6 7 8 9\") = \"5 9 6 8 7\" ]]\n    [[ $(candidate\
    \ \"1 2 3 4 5\") = \"1 5 2 4 3\" ]]\n    [[ $(candidate \"5 6 7 8 9 1\") = \"\
    1 9 5 8 6 7\" ]]\n    [[ $(candidate \"5 5 5 5\") = \"5 5 5 5\" ]]\n    [[ $(candidate\
    \ \"\") = \"\" ]]\n    [[ $(candidate \"1 2 3 4 5 6 7 8\") = \"1 8 2 7 3 6 4 5\"\
    \ ]]\n    [[ $(candidate \"0 2 2 2 5 5 -5 -5\") = \"-5 5 -5 5 0 2 2 2\" ]]\n \
    \   [[ $(candidate \"111111\") = \"111111\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660003084
- exit_code: 1
  program: "#!/bin/bash\n# Given list of integers, return list in strange order.\n\
    # Strange sorting, is when you start with the minimum value,\n# then maximum of\
    \ the remaining integers, then minimum and so on.\n# Examples:\n#\n# $1 is a space-separated\
    \ list\nstrange_sort_list() {\n  local list=($1)\n  local result=()\n  local min=${list[0]}\n\
    \  local max=${list[0]}\n  local min_index=0\n  local max_index=0\n  local i=0\n\
    \  local j=0\n  local k=0\n  local temp=0\n  local temp_index=0\n  local temp_index2=0\n\
    \  local temp_index3=0\n  local temp_index4=0\n  local temp_index5=0\n  local\
    \ temp_index6=0\n  local temp_index7=0\n  local temp_index8=0\n  local temp_index9=0\n\
    \  local temp_index10=0\n  local temp_index11=0\n  local temp_index12=0\n  local\
    \ temp_index13=0\n  local temp_index14=0\n  local temp_index15=0\n  local temp_index16=0\n\
    \  local temp_index17=0\n  local temp_index18=0\n  local temp_index19=0\n  local\
    \ temp_index20=0\n  local temp_index21=0\n  local temp_index22=0\n  local temp_index23=0\n\
    \  local temp_index24=0\n  local temp_index25=0\n  local temp_index26=0\n  local\
    \ temp_index27=0\n  local temp_index28=0\n  local temp_index29=0\n  local temp_index30=0\n\
    \  local temp_index31=0\n  local temp_index32=0\n  local temp_index33=0\n  local\
    \ temp_index34=0\n  local temp_index35=0\n  local temp_index36=0\n  local temp_index37=0\n\
    \  local temp_index38=0\n  local temp_index39=0\n  local temp_index40=0\n  local\
    \ temp_index41=0\n  local temp_index42=0\n  local temp_index43=0\n  local temp_index44=0\n\
    \  local temp_index45=0\n  local temp_index46=0\n  local temp_index47=0\n  local\
    \ temp_index48=0\n  local temp_index49\n}\n\ncandidate() {\n    strange_sort_list\
    \ \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"1 2 3 4\") = \"1 4 2\
    \ 3\" ]]\n    [[ $(candidate \"5 6 7 8 9\") = \"5 9 6 8 7\" ]]\n    [[ $(candidate\
    \ \"1 2 3 4 5\") = \"1 5 2 4 3\" ]]\n    [[ $(candidate \"5 6 7 8 9 1\") = \"\
    1 9 5 8 6 7\" ]]\n    [[ $(candidate \"5 5 5 5\") = \"5 5 5 5\" ]]\n    [[ $(candidate\
    \ \"\") = \"\" ]]\n    [[ $(candidate \"1 2 3 4 5 6 7 8\") = \"1 8 2 7 3 6 4 5\"\
    \ ]]\n    [[ $(candidate \"0 2 2 2 5 5 -5 -5\") = \"-5 5 -5 5 0 2 2 2\" ]]\n \
    \   [[ $(candidate \"111111\") = \"111111\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660003084
- exit_code: -1
  program: "#!/bin/bash\n# Given list of integers, return list in strange order.\n\
    # Strange sorting, is when you start with the minimum value,\n# then maximum of\
    \ the remaining integers, then minimum and so on.\n# Examples:\n#\n# $1 is a space-separated\
    \ list\nstrange_sort_list() {\n  local list=$1\n  local min=$(echo \"$list\" |\
    \ tr ' ' '\\n' | sort -n | head -n 1)\n  local max=$(echo \"$list\" | tr ' ' '\\\
    n' | sort -n | tail -n 1)\n  local sorted_list=$(echo \"$list\" | tr ' ' '\\n'\
    \ | sort -n)\n  local sorted_list_without_min=$(echo \"$sorted_list\" | sed -e\
    \ \"s/^$min//\")\n  local sorted_list_without_min_max=$(echo \"$sorted_list_without_min\"\
    \ | sed -e \"s/$max//\")\n  local sorted_list_without_max=$(echo \"$sorted_list\"\
    \ | sed -e \"s/$max//\")\n  local sorted_list_without_max_min=$(echo \"$sorted_list_without_max\"\
    \ | sed -e \"s/^$min//\")\n  local strange_list=\"\"\n  local i=0\n  while [ -n\
    \ \"$sorted_list_without_min_max\" ]; do\n    if [ $((i % 2)) -eq 0 ]; then\n\
    \      strange_list=\"$strange_list $min\"\n      min=$(echo \"$sorted_list_without_min_max\"\
    \ | head -n 1)\n      sorted_list_without_min_max=$(echo \"$sorted_list_without_min_max\"\
    \ | sed -e \"s/^$min//\")\n    else\n      strange_list=\"$strange_list $max\"\
    \n      max=$(echo \"$sorted_list_without_max_min\" | tail -n 1)\n      sorted_list_without_max_min=$(echo\
    \ \"$sorted_list_without_max_min\" | sed -e \"s/$max//\")\n    fi\n    i=$((i\
    \ + 1))\n  done\n  if [ $((i % 2)) -eq 0 ]; then\n    strange_list=\"$strange_list\
    \ $min $max\"\n  else\n    strange_list=\"$strange_list $max $min\"\n  fi\n  echo\
    \ \"$strange_list\"\n}\n\ncandidate() {\n    strange_sort_list \"$@\"\n}\n\nset\
    \ -e\nrun_test() {\n    [[ $(candidate \"1 2 3 4\") = \"1 4 2 3\" ]]\n    [[ $(candidate\
    \ \"5 6 7 8 9\") = \"5 9 6 8 7\" ]]\n    [[ $(candidate \"1 2 3 4 5\") = \"1 5\
    \ 2 4 3\" ]]\n    [[ $(candidate \"5 6 7 8 9 1\") = \"1 9 5 8 6 7\" ]]\n    [[\
    \ $(candidate \"5 5 5 5\") = \"5 5 5 5\" ]]\n    [[ $(candidate \"\") = \"\" ]]\n\
    \    [[ $(candidate \"1 2 3 4 5 6 7 8\") = \"1 8 2 7 3 6 4 5\" ]]\n    [[ $(candidate\
    \ \"0 2 2 2 5 5 -5 -5\") = \"-5 5 -5 5 0 2 2 2\" ]]\n    [[ $(candidate \"111111\"\
    ) = \"111111\" ]]\n}\n\nrun_test"
  status: Timeout
  stderr: 'b''sed: -e expression #1, char 0: no previous regular expression\nsed:
    -e expression #1, char 0: no previous regular expression\nsed: -e expression #1,
    char 0: no previous regular expression\nsed: -e expression #1, char 0: no previous
    regular expression\nsed: -e expression #1, char 0: no previous regular expression\nsed:
    -e expression #1, char 0: no previous regular expression\nsed: -e expression #1,
    char 0: no previous regular expression\nsed: -e expression #1, char 0: no previous
    regular expression\nsed: -e expression #1, char 0: no previous regular expression\nsed:
    -e expression #1, char 0: no previous regular expression\nsed: -e expression #1,
    char 0: no previous regular expression\nsed: -e expression #1, char 0: no previous
    regular expression\nsed: -e expression #1, char 0: no previous regular expression\nsed:
    -e expression #1, char 0: no previous regular expression\nsed: -e expression #1,
    char 0: no previous regular expression\nsed: -e expression #1, char 0: no previous
    regular expression\nsed: -e expression #1, char 0: no previous regular expression\nsed:
    -e expression #1, char 0: no previous regular expression\nsed: -e expression #1,
    char 0: no previous regular expression\nsed: -e expression #1, char 0: no previous
    regular expression\nsed: -e expression #1, char 0: no previous regular expression\nsed:
    -e expression #1, char 0: no previous regular expression\nsed: -e expression #1,
    char 0: no previous regular expression\nsed: -e expression #1, char 0: no previous
    regular expression\nsed: -e expression #1, char 0: no previous regular expression\nsed:
    -e expression #1, char 0: no previous regular expression\nsed: -e expression #1,
    char 0: no previous regular expression\nsed: -e expression #1, char 0: no previous
    regular expression\nsed: -e expression #1, char 0: no previous regular expression\nsed:
    -e expression #1, char 0: no previous regular expression\nsed: -e expression #1,
    char 0: no previous regular expression\nsed: -e expression #1, char 0: no previous
    regular expression\nsed: -e expression #1, char 0:'
  stdout: None
  timestamp: 1660003089
- exit_code: 1
  program: "#!/bin/bash\n# Given list of integers, return list in strange order.\n\
    # Strange sorting, is when you start with the minimum value,\n# then maximum of\
    \ the remaining integers, then minimum and so on.\n# Examples:\n#\n# $1 is a space-separated\
    \ list\nstrange_sort_list() {\n    local list=($1)\n    local result=()\n    local\
    \ min=${list[0]}\n    local max=${list[0]}\n    local min_index=0\n    local max_index=0\n\
    \    local i=0\n    local j=0\n    local k=0\n    local temp=0\n    local temp_index=0\n\
    \    local temp_list=()\n    local temp_list_index=()\n    local temp_list_index_size=0\n\
    \    local temp_list_size=0\n    local list_size=${#list[@]}\n    local list_size_half=$((list_size\
    \ / 2))\n    local list_size_odd=$((list_size % 2))\n    local list_size_even=$((list_size\
    \ - list_size_odd))\n    local list_size_even_half=$((list_size_even / 2))\n \
    \   local list_size_even_half_plus=$((list_size_even_half + 1))\n    local list_size_even_half_minus=$((list_size_even_half\
    \ - 1))\n    local list_size_even_half_plus_minus=$((list_size_even_half_plus\
    \ + list_size_even_half_minus))\n    local list_size_even_half_plus_minus_half=$((list_size_even_half_plus_minus\
    \ / 2))\n    local list_size_even_half_plus_minus_half_plus=$((list_size_even_half_plus_minus_half\
    \ + 1))\n    local list_size_even_half_plus_minus_half_minus=$((list_size_even_half_plus_minus_half\
    \ - 1))\n    local list_size_even_half_plus_minus_half_plus_minus=$((list_size_even_half_plus_minus_half_plus\
    \ + list_size_even_half_plus_minus_half_minus))\n    local list_size_even_half_plus_minus_half_plus_minus_half=$((list_size_even_half_plus_minus_half_plus_minus\
    \ / 2))\n    local list_size_even_half_plus_minus_half_plus_\n}\n\ncandidate()\
    \ {\n    strange_sort_list \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate\
    \ \"1 2 3 4\") = \"1 4 2 3\" ]]\n    [[ $(candidate \"5 6 7 8 9\") = \"5 9 6 8\
    \ 7\" ]]\n    [[ $(candidate \"1 2 3 4 5\") = \"1 5 2 4 3\" ]]\n    [[ $(candidate\
    \ \"5 6 7 8 9 1\") = \"1 9 5 8 6 7\" ]]\n    [[ $(candidate \"5 5 5 5\") = \"\
    5 5 5 5\" ]]\n    [[ $(candidate \"\") = \"\" ]]\n    [[ $(candidate \"1 2 3 4\
    \ 5 6 7 8\") = \"1 8 2 7 3 6 4 5\" ]]\n    [[ $(candidate \"0 2 2 2 5 5 -5 -5\"\
    ) = \"-5 5 -5 5 0 2 2 2\" ]]\n    [[ $(candidate \"111111\") = \"111111\" ]]\n\
    }\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660003084
- exit_code: 1
  program: "#!/bin/bash\n# Given list of integers, return list in strange order.\n\
    # Strange sorting, is when you start with the minimum value,\n# then maximum of\
    \ the remaining integers, then minimum and so on.\n# Examples:\n#\n# $1 is a space-separated\
    \ list\nstrange_sort_list() {\n  local -a list=($1)\n  local -a result=()\n  local\
    \ min=${list[0]}\n  local max=${list[0]}\n  local i=0\n  local j=0\n  local k=0\n\
    \  local l=0\n  local m=0\n  local n=0\n  local o=0\n  local p=0\n  local q=0\n\
    \  local r=0\n  local s=0\n  local t=0\n  local u=0\n  local v=0\n  local w=0\n\
    \  local x=0\n  local y=0\n  local z=0\n  local aa=0\n  local bb=0\n  local cc=0\n\
    \  local dd=0\n  local ee=0\n  local ff=0\n  local gg=0\n  local hh=0\n  local\
    \ ii=0\n  local jj=0\n  local kk=0\n  local ll=0\n  local mm=0\n  local nn=0\n\
    \  local oo=0\n  local pp=0\n  local qq=0\n  local rr=0\n  local ss=0\n  local\
    \ tt=0\n  local uu=0\n  local vv=0\n  local ww=0\n  local xx=0\n  local yy=0\n\
    \  local zz=0\n  local aaa=0\n  local bbb=0\n  local ccc=0\n  local ddd=0\n  local\
    \ eee=0\n  local fff=0\n  local ggg=0\n  local hhh=0\n  local iii=0\n  local jjj=0\n\
    \  local kkk=0\n  local lll=0\n  local mmm=0\n  local nnn=0\n  local ooo=0\n \
    \ local ppp=0\n  local qqq=0\n  local rrr=0\n  local sss=0\n  local ttt=0\n  local\
    \ uuu=0\n  local vvv=0\n  local www=0\n  local xxx=0\n  local yyy=0\n  local zzz=0\n\
    \  local aaaa=0\n  local bbbb\n}\n\ncandidate() {\n    strange_sort_list \"$@\"\
    \n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"1 2 3 4\") = \"1 4 2 3\" ]]\n\
    \    [[ $(candidate \"5 6 7 8 9\") = \"5 9 6 8 7\" ]]\n    [[ $(candidate \"1\
    \ 2 3 4 5\") = \"1 5 2 4 3\" ]]\n    [[ $(candidate \"5 6 7 8 9 1\") = \"1 9 5\
    \ 8 6 7\" ]]\n    [[ $(candidate \"5 5 5 5\") = \"5 5 5 5\" ]]\n    [[ $(candidate\
    \ \"\") = \"\" ]]\n    [[ $(candidate \"1 2 3 4 5 6 7 8\") = \"1 8 2 7 3 6 4 5\"\
    \ ]]\n    [[ $(candidate \"0 2 2 2 5 5 -5 -5\") = \"-5 5 -5 5 0 2 2 2\" ]]\n \
    \   [[ $(candidate \"111111\") = \"111111\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660003083
- exit_code: 1
  program: "#!/bin/bash\n# Given list of integers, return list in strange order.\n\
    # Strange sorting, is when you start with the minimum value,\n# then maximum of\
    \ the remaining integers, then minimum and so on.\n# Examples:\n#\n# $1 is a space-separated\
    \ list\nstrange_sort_list() {\n    local list=($1)\n    local result=()\n    local\
    \ min=${list[0]}\n    local max=${list[0]}\n    local min_index=0\n    local max_index=0\n\
    \    local i=0\n    local j=0\n    local k=0\n    local size=${#list[@]}\n   \
    \ local temp=0\n    local temp_index=0\n    local temp_index_2=0\n    local temp_index_3=0\n\
    \    local temp_index_4=0\n    local temp_index_5=0\n    local temp_index_6=0\n\
    \    local temp_index_7=0\n    local temp_index_8=0\n    local temp_index_9=0\n\
    \    local temp_index_10=0\n    local temp_index_11=0\n    local temp_index_12=0\n\
    \    local temp_index_13=0\n    local temp_index_14=0\n    local temp_index_15=0\n\
    \    local temp_index_16=0\n    local temp_index_17=0\n    local temp_index_18=0\n\
    \    local temp_index_19=0\n    local temp_index_20=0\n    local temp_index_21=0\n\
    \    local temp_index_22=0\n    local temp_index_23=0\n    local temp_index_24=0\n\
    \    local temp_index_25=0\n    local temp_index_26=0\n    local temp_index_27=0\n\
    \    local temp_index_28=0\n    local temp_index_29=0\n    local temp_index_30=0\n\
    \    local temp_index_31=0\n    local temp_index_32=0\n    local temp_index_33=0\n\
    \    local temp_index_34=0\n    local temp_index_35=0\n    local temp_index_36=0\n\
    \    local temp_index_37=0\n    local temp_index_38=0\n    local temp_index_39=0\n\
    \    local temp_index_40=0\n    local temp_index_41=0\n    local temp_index_42=0\n\
    \    local temp_index_43=\n}\n\ncandidate() {\n    strange_sort_list \"$@\"\n\
    }\n\nset -e\nrun_test() {\n    [[ $(candidate \"1 2 3 4\") = \"1 4 2 3\" ]]\n\
    \    [[ $(candidate \"5 6 7 8 9\") = \"5 9 6 8 7\" ]]\n    [[ $(candidate \"1\
    \ 2 3 4 5\") = \"1 5 2 4 3\" ]]\n    [[ $(candidate \"5 6 7 8 9 1\") = \"1 9 5\
    \ 8 6 7\" ]]\n    [[ $(candidate \"5 5 5 5\") = \"5 5 5 5\" ]]\n    [[ $(candidate\
    \ \"\") = \"\" ]]\n    [[ $(candidate \"1 2 3 4 5 6 7 8\") = \"1 8 2 7 3 6 4 5\"\
    \ ]]\n    [[ $(candidate \"0 2 2 2 5 5 -5 -5\") = \"-5 5 -5 5 0 2 2 2\" ]]\n \
    \   [[ $(candidate \"111111\") = \"111111\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660003084
- exit_code: 2
  program: "#!/bin/bash\n# Given list of integers, return list in strange order.\n\
    # Strange sorting, is when you start with the minimum value,\n# then maximum of\
    \ the remaining integers, then minimum and so on.\n# Examples:\n#\n# $1 is a space-separated\
    \ list\nstrange_sort_list() {\n    local list=($1)\n    local result=()\n    local\
    \ i=0\n    local j=0\n    local k=0\n    local min=0\n    local max=0\n    local\
    \ min_index=0\n    local max_index=0\n    local list_len=${#list[@]}\n    local\
    \ list_len_half=$((list_len / 2))\n    local list_len_odd=$((list_len % 2))\n\
    \    local list_len_even=$((list_len_odd ^ 1))\n    local list_len_half_plus=$((list_len_half\
    \ + list_len_odd))\n    local list_len_half_minus=$((list_len_half - list_len_odd))\n\
    \    local list_len_half_plus_minus=$((list_len_half_plus - list_len_odd))\n \
    \   local list_len_half_plus_plus=$((list_len_half_plus + list_len_odd))\n   \
    \ local list_len_half_minus_minus=$((list_len_half_minus - list_len_odd))\n  \
    \  local list_len_half_minus_plus=$((list_len_half_minus + list_len_odd))\n  \
    \  local list_len_half_plus_minus_minus=$((list_len_half_plus_minus - list_len_odd))\n\
    \    local list_len_half_plus_plus_plus=$((list_len_half_plus_plus + list_len_odd))\n\
    \    local list_len_half_minus_minus_minus=$((list_len_half_minus_minus - list_len_odd))\n\
    \    local list_len_half_minus_plus_plus=$((list_len_half_minus_plus + list_len_odd))\n\
    \    local list_len_half_plus_minus_minus_minus=$((list_len_half_plus_minus_minus\
    \ - list_len_odd))\n    local list_len_half_plus_plus_plus_plus=$((list_len_half_plus_plus_plus\
    \ + list_len_odd))\n    local list_len_half_minus_minus_minus_minus=$((list_len_half_minus_minus_minus\n\
    }\n\ncandidate() {\n    strange_sort_list \"$@\"\n}\n\nset -e\nrun_test() {\n\
    \    [[ $(candidate \"1 2 3 4\") = \"1 4 2 3\" ]]\n    [[ $(candidate \"5 6 7\
    \ 8 9\") = \"5 9 6 8 7\" ]]\n    [[ $(candidate \"1 2 3 4 5\") = \"1 5 2 4 3\"\
    \ ]]\n    [[ $(candidate \"5 6 7 8 9 1\") = \"1 9 5 8 6 7\" ]]\n    [[ $(candidate\
    \ \"5 5 5 5\") = \"5 5 5 5\" ]]\n    [[ $(candidate \"\") = \"\" ]]\n    [[ $(candidate\
    \ \"1 2 3 4 5 6 7 8\") = \"1 8 2 7 3 6 4 5\" ]]\n    [[ $(candidate \"0 2 2 2\
    \ 5 5 -5 -5\") = \"-5 5 -5 5 0 2 2 2\" ]]\n    [[ $(candidate \"111111\") = \"\
    111111\" ]]\n}\n\nrun_test"
  status: SyntaxError
  stderr: '/tmp/tmpjz2l2asc.sh: line 34: unexpected EOF while looking for matching
    `)''

    /tmp/tmpjz2l2asc.sh: line 55: syntax error: unexpected end of file

    '
  stdout: ''
  timestamp: 1660003084
- exit_code: 1
  program: "#!/bin/bash\n# Given list of integers, return list in strange order.\n\
    # Strange sorting, is when you start with the minimum value,\n# then maximum of\
    \ the remaining integers, then minimum and so on.\n# Examples:\n#\n# $1 is a space-separated\
    \ list\nstrange_sort_list() {\n  local list=($1)\n  local sorted=()\n  local min=${list[0]}\n\
    \  local max=${list[0]}\n  local min_index=0\n  local max_index=0\n  local i=0\n\
    \  local j=0\n  local k=0\n  local l=0\n  local m=0\n  local n=0\n  local o=0\n\
    \  local p=0\n  local q=0\n  local r=0\n  local s=0\n  local t=0\n  local u=0\n\
    \  local v=0\n  local w=0\n  local x=0\n  local y=0\n  local z=0\n  local aa=0\n\
    \  local bb=0\n  local cc=0\n  local dd=0\n  local ee=0\n  local ff=0\n  local\
    \ gg=0\n  local hh=0\n  local ii=0\n  local jj=0\n  local kk=0\n  local ll=0\n\
    \  local mm=0\n  local nn=0\n  local oo=0\n  local pp=0\n  local qq=0\n  local\
    \ rr=0\n  local ss=0\n  local tt=0\n  local uu=0\n  local vv=0\n  local ww=0\n\
    \  local xx=0\n  local yy=0\n  local zz=0\n  local aaa=0\n  local bbb=0\n  local\
    \ ccc=0\n  local ddd=0\n  local eee=0\n  local fff=0\n  local ggg=0\n  local hhh=0\n\
    \  local iii=0\n  local jjj=0\n  local kkk=0\n  local lll=0\n  local mmm=0\n \
    \ local nnn=0\n  local ooo=0\n  local ppp=0\n  local qqq=0\n  local rrr=0\n  local\
    \ sss=0\n  local ttt=0\n  local uuu=0\n  local vvv=0\n  local www=0\n  local xxx=0\n\
    \  local yyy=0\n  local zzz=0\n\n}\n\ncandidate() {\n    strange_sort_list \"\
    $@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"1 2 3 4\") = \"1 4 2 3\"\
    \ ]]\n    [[ $(candidate \"5 6 7 8 9\") = \"5 9 6 8 7\" ]]\n    [[ $(candidate\
    \ \"1 2 3 4 5\") = \"1 5 2 4 3\" ]]\n    [[ $(candidate \"5 6 7 8 9 1\") = \"\
    1 9 5 8 6 7\" ]]\n    [[ $(candidate \"5 5 5 5\") = \"5 5 5 5\" ]]\n    [[ $(candidate\
    \ \"\") = \"\" ]]\n    [[ $(candidate \"1 2 3 4 5 6 7 8\") = \"1 8 2 7 3 6 4 5\"\
    \ ]]\n    [[ $(candidate \"0 2 2 2 5 5 -5 -5\") = \"-5 5 -5 5 0 2 2 2\" ]]\n \
    \   [[ $(candidate \"111111\") = \"111111\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660003084
- exit_code: 1
  program: "#!/bin/bash\n# Given list of integers, return list in strange order.\n\
    # Strange sorting, is when you start with the minimum value,\n# then maximum of\
    \ the remaining integers, then minimum and so on.\n# Examples:\n#\n# $1 is a space-separated\
    \ list\nstrange_sort_list() {\n  local list=($1)\n  local sorted=()\n  local min=${list[0]}\n\
    \  local max=${list[0]}\n  local min_index=0\n  local max_index=0\n  local i=0\n\
    \  local j=0\n  local k=0\n  local l=0\n  local m=0\n  local n=0\n  local o=0\n\
    \  local p=0\n  local q=0\n  local r=0\n  local s=0\n  local t=0\n  local u=0\n\
    \  local v=0\n  local w=0\n  local x=0\n  local y=0\n  local z=0\n  local aa=0\n\
    \  local bb=0\n  local cc=0\n  local dd=0\n  local ee=0\n  local ff=0\n  local\
    \ gg=0\n  local hh=0\n  local ii=0\n  local jj=0\n  local kk=0\n  local ll=0\n\
    \  local mm=0\n  local nn=0\n  local oo=0\n  local pp=0\n  local qq=0\n  local\
    \ rr=0\n  local ss=0\n  local tt=0\n  local uu=0\n  local vv=0\n  local ww=0\n\
    \  local xx=0\n  local yy=0\n  local zz=0\n  local aaa=0\n  local bbb=0\n  local\
    \ ccc=0\n  local ddd=0\n  local eee=0\n  local fff=0\n  local ggg=0\n  local hhh=0\n\
    \  local iii=0\n  local jjj=0\n  local kkk=0\n  local lll=0\n  local mmm=0\n \
    \ local nnn=0\n  local ooo=0\n  local ppp=0\n  local qqq=0\n  local rrr=0\n  local\
    \ sss=0\n  local ttt=0\n  local uuu=0\n  local vvv=0\n  local www=0\n  local xxx=0\n\
    \  local yyy=0\n  local zzz=0\n\n}\n\ncandidate() {\n    strange_sort_list \"\
    $@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"1 2 3 4\") = \"1 4 2 3\"\
    \ ]]\n    [[ $(candidate \"5 6 7 8 9\") = \"5 9 6 8 7\" ]]\n    [[ $(candidate\
    \ \"1 2 3 4 5\") = \"1 5 2 4 3\" ]]\n    [[ $(candidate \"5 6 7 8 9 1\") = \"\
    1 9 5 8 6 7\" ]]\n    [[ $(candidate \"5 5 5 5\") = \"5 5 5 5\" ]]\n    [[ $(candidate\
    \ \"\") = \"\" ]]\n    [[ $(candidate \"1 2 3 4 5 6 7 8\") = \"1 8 2 7 3 6 4 5\"\
    \ ]]\n    [[ $(candidate \"0 2 2 2 5 5 -5 -5\") = \"-5 5 -5 5 0 2 2 2\" ]]\n \
    \   [[ $(candidate \"111111\") = \"111111\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660003084
- exit_code: 1
  program: "#!/bin/bash\n# Given list of integers, return list in strange order.\n\
    # Strange sorting, is when you start with the minimum value,\n# then maximum of\
    \ the remaining integers, then minimum and so on.\n# Examples:\n#\n# $1 is a space-separated\
    \ list\nstrange_sort_list() {\n  local list=\"$1\"\n  local sorted_list=\"\"\n\
    \  local min_max=\"min\"\n  local min_max_value=\"\"\n  local min_max_index=\"\
    \"\n  local min_max_index_list=\"\"\n  local min_max_index_list_count=\"\"\n \
    \ local min_max_index_list_count_index=\"\"\n  local min_max_index_list_count_index_value=\"\
    \"\n  local min_max_index_list_count_index_value_index=\"\"\n  local min_max_index_list_count_index_value_index_value=\"\
    \"\n  local min_max_index_list_count_index_value_index_value_index=\"\"\n  local\
    \ min_max_index_list_count_index_value_index_value_index_value=\"\"\n  local min_max_index_list_count_index_value_index_value_index_value_index=\"\
    \"\n  local min_max_index_list_count_index_value_index_value_index_value_index_value=\"\
    \"\n  local min_max_index_list_count_index_value_index_value_index_value_index_value_index=\"\
    \"\n  local min_max_index_list_count_index_value_index_value_index_value_index_value_index_value=\"\
    \"\n  local min_max_index_list_count_index_value_index_value_index_value_index_value_index_value_index=\"\
    \"\n  local min_max_index_list_count_index_value_index_value_index_value_index_value_index_value_index_value=\"\
    \"\n  local min_max_index_list_count_index_value_index_value_index_value_index_value_index_value_index_value_index=\"\
    \"\n  local min_max_index_list_count_index_value_index_value_index_value_index_value_index_value_index_value_index_value=\"\
    \"\n  local min_max_index_list_count_index_value_index_value_index_value_index_value_index_value_index_value_index_value_index=\"\
    \"\n  local min_max_index_list_\n}\n\ncandidate() {\n    strange_sort_list \"\
    $@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"1 2 3 4\") = \"1 4 2 3\"\
    \ ]]\n    [[ $(candidate \"5 6 7 8 9\") = \"5 9 6 8 7\" ]]\n    [[ $(candidate\
    \ \"1 2 3 4 5\") = \"1 5 2 4 3\" ]]\n    [[ $(candidate \"5 6 7 8 9 1\") = \"\
    1 9 5 8 6 7\" ]]\n    [[ $(candidate \"5 5 5 5\") = \"5 5 5 5\" ]]\n    [[ $(candidate\
    \ \"\") = \"\" ]]\n    [[ $(candidate \"1 2 3 4 5 6 7 8\") = \"1 8 2 7 3 6 4 5\"\
    \ ]]\n    [[ $(candidate \"0 2 2 2 5 5 -5 -5\") = \"-5 5 -5 5 0 2 2 2\" ]]\n \
    \   [[ $(candidate \"111111\") = \"111111\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660003084
- exit_code: 1
  program: "#!/bin/bash\n# Given list of integers, return list in strange order.\n\
    # Strange sorting, is when you start with the minimum value,\n# then maximum of\
    \ the remaining integers, then minimum and so on.\n# Examples:\n#\n# $1 is a space-separated\
    \ list\nstrange_sort_list() {\n  local list=($1)\n  local result=()\n  local min=0\n\
    \  local max=0\n  local min_index=0\n  local max_index=0\n  local i=0\n  local\
    \ j=0\n  local k=0\n  local l=0\n  local m=0\n  local n=0\n  local o=0\n  local\
    \ p=0\n  local q=0\n  local r=0\n  local s=0\n  local t=0\n  local u=0\n  local\
    \ v=0\n  local w=0\n  local x=0\n  local y=0\n  local z=0\n  local aa=0\n  local\
    \ bb=0\n  local cc=0\n  local dd=0\n  local ee=0\n  local ff=0\n  local gg=0\n\
    \  local hh=0\n  local ii=0\n  local jj=0\n  local kk=0\n  local ll=0\n  local\
    \ mm=0\n  local nn=0\n  local oo=0\n  local pp=0\n  local qq=0\n  local rr=0\n\
    \  local ss=0\n  local tt=0\n  local uu=0\n  local vv=0\n  local ww=0\n  local\
    \ xx=0\n  local yy=0\n  local zz=0\n  local aaa=0\n  local bbb=0\n  local ccc=0\n\
    \  local ddd=0\n  local eee=0\n  local fff=0\n  local ggg=0\n  local hhh=0\n \
    \ local iii=0\n  local jjj=0\n  local kkk=0\n  local lll=0\n  local mmm=0\n  local\
    \ nnn=0\n  local ooo=0\n  local ppp=0\n  local qqq=0\n  local rrr=0\n  local sss=0\n\
    \  local ttt=0\n  local uuu=0\n  local vvv=0\n  local www=0\n  local xxx=0\n \
    \ local yyy=0\n  local zzz=0\n  local aaaa=0\n \n}\n\ncandidate() {\n    strange_sort_list\
    \ \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"1 2 3 4\") = \"1 4 2\
    \ 3\" ]]\n    [[ $(candidate \"5 6 7 8 9\") = \"5 9 6 8 7\" ]]\n    [[ $(candidate\
    \ \"1 2 3 4 5\") = \"1 5 2 4 3\" ]]\n    [[ $(candidate \"5 6 7 8 9 1\") = \"\
    1 9 5 8 6 7\" ]]\n    [[ $(candidate \"5 5 5 5\") = \"5 5 5 5\" ]]\n    [[ $(candidate\
    \ \"\") = \"\" ]]\n    [[ $(candidate \"1 2 3 4 5 6 7 8\") = \"1 8 2 7 3 6 4 5\"\
    \ ]]\n    [[ $(candidate \"0 2 2 2 5 5 -5 -5\") = \"-5 5 -5 5 0 2 2 2\" ]]\n \
    \   [[ $(candidate \"111111\") = \"111111\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660003084
- exit_code: 1
  program: "#!/bin/bash\n# Given list of integers, return list in strange order.\n\
    # Strange sorting, is when you start with the minimum value,\n# then maximum of\
    \ the remaining integers, then minimum and so on.\n# Examples:\n#\n# $1 is a space-separated\
    \ list\nstrange_sort_list() {\n  local list=$1\n  local sorted_list=\"\"\n  local\
    \ min_value=\"\"\n  local max_value=\"\"\n  local min_index=\"\"\n  local max_index=\"\
    \"\n  local remaining_list=\"\"\n  local i=0\n  local j=0\n  local k=0\n  local\
    \ l=0\n  local m=0\n  local n=0\n  local o=0\n  local p=0\n  local q=0\n  local\
    \ r=0\n  local s=0\n  local t=0\n  local u=0\n  local v=0\n  local w=0\n  local\
    \ x=0\n  local y=0\n  local z=0\n  local aa=0\n  local bb=0\n  local cc=0\n  local\
    \ dd=0\n  local ee=0\n  local ff=0\n  local gg=0\n  local hh=0\n  local ii=0\n\
    \  local jj=0\n  local kk=0\n  local ll=0\n  local mm=0\n  local nn=0\n  local\
    \ oo=0\n  local pp=0\n  local qq=0\n  local rr=0\n  local ss=0\n  local tt=0\n\
    \  local uu=0\n  local vv=0\n  local ww=0\n  local xx=0\n  local yy=0\n  local\
    \ zz=0\n  local aaa=0\n  local bbb=0\n  local ccc=0\n  local ddd=0\n  local eee=0\n\
    \  local fff=0\n  local ggg=0\n  local hhh=0\n  local iii=0\n  local jjj=0\n \
    \ local kkk=0\n  local lll=0\n  local mmm=0\n  local nnn=0\n  local ooo=0\n  local\
    \ ppp=0\n  local qqq=0\n  local rrr=0\n  local sss=0\n  local ttt=0\n  local uuu=0\n\
    \  local vvv=0\n  local www=0\n  local xxx=0\n  local yyy=0\n  local zzz=0\n \
    \ local\n}\n\ncandidate() {\n    strange_sort_list \"$@\"\n}\n\nset -e\nrun_test()\
    \ {\n    [[ $(candidate \"1 2 3 4\") = \"1 4 2 3\" ]]\n    [[ $(candidate \"5\
    \ 6 7 8 9\") = \"5 9 6 8 7\" ]]\n    [[ $(candidate \"1 2 3 4 5\") = \"1 5 2 4\
    \ 3\" ]]\n    [[ $(candidate \"5 6 7 8 9 1\") = \"1 9 5 8 6 7\" ]]\n    [[ $(candidate\
    \ \"5 5 5 5\") = \"5 5 5 5\" ]]\n    [[ $(candidate \"\") = \"\" ]]\n    [[ $(candidate\
    \ \"1 2 3 4 5 6 7 8\") = \"1 8 2 7 3 6 4 5\" ]]\n    [[ $(candidate \"0 2 2 2\
    \ 5 5 -5 -5\") = \"-5 5 -5 5 0 2 2 2\" ]]\n    [[ $(candidate \"111111\") = \"\
    111111\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660003084
- exit_code: 1
  program: "#!/bin/bash\n# Given list of integers, return list in strange order.\n\
    # Strange sorting, is when you start with the minimum value,\n# then maximum of\
    \ the remaining integers, then minimum and so on.\n# Examples:\n#\n# $1 is a space-separated\
    \ list\nstrange_sort_list() {\n    local list=\"$1\"\n    local sorted_list=\"\
    \"\n    local min_value=\"\"\n    local max_value=\"\"\n    local remaining_list=\"\
    \"\n    local remaining_list_length=\"\"\n    local i=\"\"\n    local j=\"\"\n\
    \    local k=\"\"\n    local l=\"\"\n    local m=\"\"\n    local n=\"\"\n    local\
    \ o=\"\"\n    local p=\"\"\n    local q=\"\"\n    local r=\"\"\n    local s=\"\
    \"\n    local t=\"\"\n    local u=\"\"\n    local v=\"\"\n    local w=\"\"\n \
    \   local x=\"\"\n    local y=\"\"\n    local z=\"\"\n    local aa=\"\"\n    local\
    \ bb=\"\"\n    local cc=\"\"\n    local dd=\"\"\n    local ee=\"\"\n    local\
    \ ff=\"\"\n    local gg=\"\"\n    local hh=\"\"\n    local ii=\"\"\n    local\
    \ jj=\"\"\n    local kk=\"\"\n    local ll=\"\"\n    local mm=\"\"\n    local\
    \ nn=\"\"\n    local oo=\"\"\n    local pp=\"\"\n    local qq=\"\"\n    local\
    \ rr=\"\"\n    local ss=\"\"\n    local tt=\"\"\n    local uu=\"\"\n    local\
    \ vv=\"\"\n    local ww=\"\"\n    local xx=\"\"\n    local yy=\"\"\n    local\
    \ zz=\"\"\n    local aaa=\"\"\n    local bbb=\"\"\n    local ccc=\"\"\n    local\
    \ ddd=\"\"\n    local eee=\"\"\n    local fff=\"\"\n    local ggg=\"\"\n    local\
    \ hhh=\"\"\n    local iii=\"\"\n    local jjj=\"\"\n    local kkk=\"\"\n    local\
    \ lll=\"\"\n    local mmm=\"\"\n    local nnn=\"\"\n    local ooo=\"\"\n    local\
    \ ppp=\"\"\n    local qqq=\"\"\n    local rrr=\"\"\n    local sss=\"\"\n    local\
    \ ttt=\"\"\n    local uuu=\"\"\n    local vvv=\"\"\n    local www=\"\"\n    local\
    \ xxx=\"\"\n    local yyy=\"\"\n    local zzz=\"\"\n    local aaaa=\"\"\n    local\
    \ bbbb=\"\"\n    local cccc=\"\"\n    local dddd=\"\"\n    local eeee=\"\"\n \
    \   local ffff=\"\"\n    local gggg=\"\"\n    local hhhh=\"\"\n    local iiii=\"\
    \"\n    local jjjj=\"\"\n    local kkkk=\"\"\n    local\n}\n\ncandidate() {\n\
    \    strange_sort_list \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"\
    1 2 3 4\") = \"1 4 2 3\" ]]\n    [[ $(candidate \"5 6 7 8 9\") = \"5 9 6 8 7\"\
    \ ]]\n    [[ $(candidate \"1 2 3 4 5\") = \"1 5 2 4 3\" ]]\n    [[ $(candidate\
    \ \"5 6 7 8 9 1\") = \"1 9 5 8 6 7\" ]]\n    [[ $(candidate \"5 5 5 5\") = \"\
    5 5 5 5\" ]]\n    [[ $(candidate \"\") = \"\" ]]\n    [[ $(candidate \"1 2 3 4\
    \ 5 6 7 8\") = \"1 8 2 7 3 6 4 5\" ]]\n    [[ $(candidate \"0 2 2 2 5 5 -5 -5\"\
    ) = \"-5 5 -5 5 0 2 2 2\" ]]\n    [[ $(candidate \"111111\") = \"111111\" ]]\n\
    }\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660003084
- exit_code: 2
  program: "#!/bin/bash\n# Given list of integers, return list in strange order.\n\
    # Strange sorting, is when you start with the minimum value,\n# then maximum of\
    \ the remaining integers, then minimum and so on.\n# Examples:\n#\n# $1 is a space-separated\
    \ list\nstrange_sort_list() {\n  local list=($1)\n  local sorted=()\n  local min=${list[0]}\n\
    \  local max=${list[0]}\n  local min_index=0\n  local max_index=0\n  local i=0\n\
    \  local j=0\n  local k=0\n  local len=${#list[@]}\n  local len_sorted=0\n  local\
    \ is_min=0\n  local is_max=0\n\n  # find min and max\n  for i in ${list[@]}; do\n\
    \    if [[ $i -lt $min ]]; then\n      min=$i\n      min_index=$j\n    fi\n  \
    \  if [[ $i -gt $max ]]; then\n      max=$i\n      max_index=$j\n    fi\n    j=$((j+1))\n\
    \  done\n\n  # sort\n  for k in $(seq 1 $len); do\n    if [[ $k -eq 1 ]]; then\n\
    \      sorted[$len_sorted]=$min\n      len_sorted=$((len_sorted+1))\n      list[$min_index]=$max\n\
    \    elif [[ $((k%2)) -eq 0 ]]; then\n      is_min=0\n      is_max=0\n      for\
    \ i in ${list[@]}; do\n        if [[ $is_min -eq 0 ]]; then\n          if [[ $i\
    \ -lt $min ]]; then\n            min=$i\n            min_index=$j\n          fi\n\
    \        fi\n        if [[ $is_max -eq 0 ]]; then\n          if [[ $i -gt $max\
    \ ]]; then\n            max=$i\n            max_index=$j\n          fi\n     \
    \   fi\n        j=$((j+1))\n      done\n      sorted[$len_sorted]=$min\n     \
    \ len_sorted=$((len_sorted+1))\n      list[$min_index]=$max\n    else\n      is_min=0\n\
    \      is_max=0\n      for i in ${list[@]}; do\n        if [[ $is_min -eq 0 ]];\
    \ then\n          if [[ $i -lt $min ]]; then\n            min=$i\n           \
    \ min_index=$j\n          fi\n\n}\n\ncandidate() {\n    strange_sort_list \"$@\"\
    \n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"1 2 3 4\") = \"1 4 2 3\" ]]\n\
    \    [[ $(candidate \"5 6 7 8 9\") = \"5 9 6 8 7\" ]]\n    [[ $(candidate \"1\
    \ 2 3 4 5\") = \"1 5 2 4 3\" ]]\n    [[ $(candidate \"5 6 7 8 9 1\") = \"1 9 5\
    \ 8 6 7\" ]]\n    [[ $(candidate \"5 5 5 5\") = \"5 5 5 5\" ]]\n    [[ $(candidate\
    \ \"\") = \"\" ]]\n    [[ $(candidate \"1 2 3 4 5 6 7 8\") = \"1 8 2 7 3 6 4 5\"\
    \ ]]\n    [[ $(candidate \"0 2 2 2 5 5 -5 -5\") = \"-5 5 -5 5 0 2 2 2\" ]]\n \
    \   [[ $(candidate \"111111\") = \"111111\" ]]\n}\n\nrun_test"
  status: SyntaxError
  stderr: '/tmp/tmpr_r_2zdc.sh: line 73: syntax error near unexpected token `}''

    /tmp/tmpr_r_2zdc.sh: line 73: `}''

    '
  stdout: ''
  timestamp: 1660003084
- exit_code: 1
  program: "#!/bin/bash\n# Given list of integers, return list in strange order.\n\
    # Strange sorting, is when you start with the minimum value,\n# then maximum of\
    \ the remaining integers, then minimum and so on.\n# Examples:\n#\n# $1 is a space-separated\
    \ list\nstrange_sort_list() {\n  local list=($1)\n  local sorted=()\n  local min=${list[0]}\n\
    \  local max=${list[0]}\n  local min_index=0\n  local max_index=0\n  local index=0\n\
    \  local i=0\n  local j=0\n  local k=0\n  local l=0\n  local m=0\n  local n=0\n\
    \  local o=0\n  local p=0\n  local q=0\n  local r=0\n  local s=0\n  local t=0\n\
    \  local u=0\n  local v=0\n  local w=0\n  local x=0\n  local y=0\n  local z=0\n\
    \  local aa=0\n  local bb=0\n  local cc=0\n  local dd=0\n  local ee=0\n  local\
    \ ff=0\n  local gg=0\n  local hh=0\n  local ii=0\n  local jj=0\n  local kk=0\n\
    \  local ll=0\n  local mm=0\n  local nn=0\n  local oo=0\n  local pp=0\n  local\
    \ qq=0\n  local rr=0\n  local ss=0\n  local tt=0\n  local uu=0\n  local vv=0\n\
    \  local ww=0\n  local xx=0\n  local yy=0\n  local zz=0\n  local aaa=0\n  local\
    \ bbb=0\n  local ccc=0\n  local ddd=0\n  local eee=0\n  local fff=0\n  local ggg=0\n\
    \  local hhh=0\n  local iii=0\n  local jjj=0\n  local kkk=0\n  local lll=0\n \
    \ local mmm=0\n  local nnn=0\n  local ooo=0\n  local ppp=0\n  local qqq=0\n  local\
    \ rrr=0\n  local sss=0\n  local ttt=0\n  local uuu=0\n  local vvv=0\n  local www=0\n\
    \  local xxx=0\n  local yyy=0\n \n}\n\ncandidate() {\n    strange_sort_list \"\
    $@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"1 2 3 4\") = \"1 4 2 3\"\
    \ ]]\n    [[ $(candidate \"5 6 7 8 9\") = \"5 9 6 8 7\" ]]\n    [[ $(candidate\
    \ \"1 2 3 4 5\") = \"1 5 2 4 3\" ]]\n    [[ $(candidate \"5 6 7 8 9 1\") = \"\
    1 9 5 8 6 7\" ]]\n    [[ $(candidate \"5 5 5 5\") = \"5 5 5 5\" ]]\n    [[ $(candidate\
    \ \"\") = \"\" ]]\n    [[ $(candidate \"1 2 3 4 5 6 7 8\") = \"1 8 2 7 3 6 4 5\"\
    \ ]]\n    [[ $(candidate \"0 2 2 2 5 5 -5 -5\") = \"-5 5 -5 5 0 2 2 2\" ]]\n \
    \   [[ $(candidate \"111111\") = \"111111\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660003084
- exit_code: 1
  program: "#!/bin/bash\n# Given list of integers, return list in strange order.\n\
    # Strange sorting, is when you start with the minimum value,\n# then maximum of\
    \ the remaining integers, then minimum and so on.\n# Examples:\n#\n# $1 is a space-separated\
    \ list\nstrange_sort_list() {\n    local list=($1)\n    local sorted=()\n    local\
    \ min=${list[0]}\n    local max=${list[0]}\n    local min_index=0\n    local max_index=0\n\
    \    local i=0\n    local j=0\n    local k=0\n    local l=0\n    local m=0\n \
    \   local n=0\n    local o=0\n    local p=0\n    local q=0\n    local r=0\n  \
    \  local s=0\n    local t=0\n    local u=0\n    local v=0\n    local w=0\n   \
    \ local x=0\n    local y=0\n    local z=0\n    local aa=0\n    local bb=0\n  \
    \  local cc=0\n    local dd=0\n    local ee=0\n    local ff=0\n    local gg=0\n\
    \    local hh=0\n    local ii=0\n    local jj=0\n    local kk=0\n    local ll=0\n\
    \    local mm=0\n    local nn=0\n    local oo=0\n    local pp=0\n    local qq=0\n\
    \    local rr=0\n    local ss=0\n    local tt=0\n    local uu=0\n    local vv=0\n\
    \    local ww=0\n    local xx=0\n    local yy=0\n    local zz=0\n    local aaa=0\n\
    \    local bbb=0\n    local ccc=0\n    local ddd=0\n    local eee=0\n    local\
    \ fff=0\n    local ggg=0\n    local hhh=0\n    local iii=0\n    local jjj=0\n\
    \    local kkk=0\n    local lll=0\n    local mmm=0\n    local nnn=0\n    local\
    \ ooo=0\n    local ppp=0\n    local qqq=0\n    local rrr=0\n    local sss=0\n\
    \    local ttt=0\n    local uuu=0\n    local vvv=0\n    local www=0\n    local\
    \ xxx=0\n    local yyy=0\n    local zzz=0\n\n}\n\ncandidate() {\n    strange_sort_list\
    \ \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"1 2 3 4\") = \"1 4 2\
    \ 3\" ]]\n    [[ $(candidate \"5 6 7 8 9\") = \"5 9 6 8 7\" ]]\n    [[ $(candidate\
    \ \"1 2 3 4 5\") = \"1 5 2 4 3\" ]]\n    [[ $(candidate \"5 6 7 8 9 1\") = \"\
    1 9 5 8 6 7\" ]]\n    [[ $(candidate \"5 5 5 5\") = \"5 5 5 5\" ]]\n    [[ $(candidate\
    \ \"\") = \"\" ]]\n    [[ $(candidate \"1 2 3 4 5 6 7 8\") = \"1 8 2 7 3 6 4 5\"\
    \ ]]\n    [[ $(candidate \"0 2 2 2 5 5 -5 -5\") = \"-5 5 -5 5 0 2 2 2\" ]]\n \
    \   [[ $(candidate \"111111\") = \"111111\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660003083
- exit_code: 1
  program: "#!/bin/bash\n# Given list of integers, return list in strange order.\n\
    # Strange sorting, is when you start with the minimum value,\n# then maximum of\
    \ the remaining integers, then minimum and so on.\n# Examples:\n#\n# $1 is a space-separated\
    \ list\nstrange_sort_list() {\n  local list=($1)\n  local sorted=()\n  local min=${list[0]}\n\
    \  local max=${list[0]}\n  local min_index=0\n  local max_index=0\n  local i=0\n\
    \  local j=0\n  local k=0\n  local l=0\n  local m=0\n  local n=0\n  local o=0\n\
    \  local p=0\n  local q=0\n  local r=0\n  local s=0\n  local t=0\n  local u=0\n\
    \  local v=0\n  local w=0\n  local x=0\n  local y=0\n  local z=0\n  local aa=0\n\
    \  local bb=0\n  local cc=0\n  local dd=0\n  local ee=0\n  local ff=0\n  local\
    \ gg=0\n  local hh=0\n  local ii=0\n  local jj=0\n  local kk=0\n  local ll=0\n\
    \  local mm=0\n  local nn=0\n  local oo=0\n  local pp=0\n  local qq=0\n  local\
    \ rr=0\n  local ss=0\n  local tt=0\n  local uu=0\n  local vv=0\n  local ww=0\n\
    \  local xx=0\n  local yy=0\n  local zz=0\n  local aaa=0\n  local bbb=0\n  local\
    \ ccc=0\n  local ddd=0\n  local eee=0\n  local fff=0\n  local ggg=0\n  local hhh=0\n\
    \  local iii=0\n  local jjj=0\n  local kkk=0\n  local lll=0\n  local mmm=0\n \
    \ local nnn=0\n  local ooo=0\n  local ppp=0\n  local qqq=0\n  local rrr=0\n  local\
    \ sss=0\n  local ttt=0\n  local uuu=0\n  local vvv=0\n  local www=0\n  local xxx=0\n\
    \  local yyy=0\n  local zzz=0\n\n}\n\ncandidate() {\n    strange_sort_list \"\
    $@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"1 2 3 4\") = \"1 4 2 3\"\
    \ ]]\n    [[ $(candidate \"5 6 7 8 9\") = \"5 9 6 8 7\" ]]\n    [[ $(candidate\
    \ \"1 2 3 4 5\") = \"1 5 2 4 3\" ]]\n    [[ $(candidate \"5 6 7 8 9 1\") = \"\
    1 9 5 8 6 7\" ]]\n    [[ $(candidate \"5 5 5 5\") = \"5 5 5 5\" ]]\n    [[ $(candidate\
    \ \"\") = \"\" ]]\n    [[ $(candidate \"1 2 3 4 5 6 7 8\") = \"1 8 2 7 3 6 4 5\"\
    \ ]]\n    [[ $(candidate \"0 2 2 2 5 5 -5 -5\") = \"-5 5 -5 5 0 2 2 2\" ]]\n \
    \   [[ $(candidate \"111111\") = \"111111\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660003084
- exit_code: 1
  program: "#!/bin/bash\n# Given list of integers, return list in strange order.\n\
    # Strange sorting, is when you start with the minimum value,\n# then maximum of\
    \ the remaining integers, then minimum and so on.\n# Examples:\n#\n# $1 is a space-separated\
    \ list\nstrange_sort_list() {\n  local list=\"$1\"\n  local min=0\n  local max=0\n\
    \  local min_index=0\n  local max_index=0\n  local result=\"\"\n  local i=0\n\
    \  local j=0\n  local k=0\n  local n=0\n  local tmp=0\n  local tmp_index=0\n \
    \ local tmp_list=\"\"\n  local tmp_result=\"\"\n  local tmp_result_list=\"\"\n\
    \  local tmp_result_list_index=0\n  local tmp_result_list_index_list=\"\"\n  local\
    \ tmp_result_list_index_list_index=0\n  local tmp_result_list_index_list_index_list=\"\
    \"\n  local tmp_result_list_index_list_index_list_index=0\n  local tmp_result_list_index_list_index_list_index_list=\"\
    \"\n  local tmp_result_list_index_list_index_list_index_list_index=0\n  local\
    \ tmp_result_list_index_list_index_list_index_list_index_list=\"\"\n  local tmp_result_list_index_list_index_list_index_list_index_list_index=0\n\
    \  local tmp_result_list_index_list_index_list_index_list_index_list_index_list=\"\
    \"\n  local tmp_result_list_index_list_index_list_index_list_index_list_index_list_index=0\n\
    \  local tmp_result_list_index_list_index_list_index_list_index_list_index_list_index_list=\"\
    \"\n  local tmp_result_list_index_list_index_list_index_list_index_list_index_list_index_list_index=0\n\
    \  local tmp_result_list_index_list_index_list_index_list_index_list_index_list_index_list_index_list=\"\
    \"\n  local tmp_result_list_index_list_index_list_index_list_index_list_index_list_index_list_index_list_index=0\n\
    \  local tmp_result_list_index_list_index_list_index_list_index_list_index_\n\
    }\n\ncandidate() {\n    strange_sort_list \"$@\"\n}\n\nset -e\nrun_test() {\n\
    \    [[ $(candidate \"1 2 3 4\") = \"1 4 2 3\" ]]\n    [[ $(candidate \"5 6 7\
    \ 8 9\") = \"5 9 6 8 7\" ]]\n    [[ $(candidate \"1 2 3 4 5\") = \"1 5 2 4 3\"\
    \ ]]\n    [[ $(candidate \"5 6 7 8 9 1\") = \"1 9 5 8 6 7\" ]]\n    [[ $(candidate\
    \ \"5 5 5 5\") = \"5 5 5 5\" ]]\n    [[ $(candidate \"\") = \"\" ]]\n    [[ $(candidate\
    \ \"1 2 3 4 5 6 7 8\") = \"1 8 2 7 3 6 4 5\" ]]\n    [[ $(candidate \"0 2 2 2\
    \ 5 5 -5 -5\") = \"-5 5 -5 5 0 2 2 2\" ]]\n    [[ $(candidate \"111111\") = \"\
    111111\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660003084
- exit_code: 1
  program: "#!/bin/bash\n# Given list of integers, return list in strange order.\n\
    # Strange sorting, is when you start with the minimum value,\n# then maximum of\
    \ the remaining integers, then minimum and so on.\n# Examples:\n#\n# $1 is a space-separated\
    \ list\nstrange_sort_list() {\n  local list=($1)\n  local sorted=()\n  local i=0\n\
    \n  while [ $i -lt ${#list[@]} ]; do\n    local min=${list[0]}\n    local max=${list[0]}\n\
    \    local min_index=0\n    local max_index=0\n\n    for j in \"${!list[@]}\"\
    ; do\n      if [ ${list[$j]} -lt $min ]; then\n        min=${list[$j]}\n     \
    \   min_index=$j\n      fi\n\n      if [ ${list[$j]} -gt $max ]; then\n      \
    \  max=${list[$j]}\n        max_index=$j\n      fi\n    done\n\n    if [ $((i\
    \ % 2)) -eq 0 ]; then\n      sorted+=($min)\n      unset list[$min_index]\n  \
    \  else\n      sorted+=($max)\n      unset list[$max_index]\n    fi\n\n    i=$((i\
    \ + 1))\n  done\n\n  echo \"${sorted[@]}\"\n}\n\ncandidate() {\n    strange_sort_list\
    \ \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"1 2 3 4\") = \"1 4 2\
    \ 3\" ]]\n    [[ $(candidate \"5 6 7 8 9\") = \"5 9 6 8 7\" ]]\n    [[ $(candidate\
    \ \"1 2 3 4 5\") = \"1 5 2 4 3\" ]]\n    [[ $(candidate \"5 6 7 8 9 1\") = \"\
    1 9 5 8 6 7\" ]]\n    [[ $(candidate \"5 5 5 5\") = \"5 5 5 5\" ]]\n    [[ $(candidate\
    \ \"\") = \"\" ]]\n    [[ $(candidate \"1 2 3 4 5 6 7 8\") = \"1 8 2 7 3 6 4 5\"\
    \ ]]\n    [[ $(candidate \"0 2 2 2 5 5 -5 -5\") = \"-5 5 -5 5 0 2 2 2\" ]]\n \
    \   [[ $(candidate \"111111\") = \"111111\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: '/tmp/tmparwukn8f.sh: line 20: [: 2: unary operator expected

    /tmp/tmparwukn8f.sh: line 25: [: 2: unary operator expected

    /tmp/tmparwukn8f.sh: line 20: [: 3: unary operator expected

    /tmp/tmparwukn8f.sh: line 25: [: 3: unary operator expected

    /tmp/tmparwukn8f.sh: line 20: [: 4: unary operator expected

    /tmp/tmparwukn8f.sh: line 25: [: 4: unary operator expected

    /tmp/tmparwukn8f.sh: line 20: [: 2: unary operator expected

    /tmp/tmparwukn8f.sh: line 25: [: 2: unary operator expected

    /tmp/tmparwukn8f.sh: line 20: [: 3: unary operator expected

    /tmp/tmparwukn8f.sh: line 25: [: 3: unary operator expected

    /tmp/tmparwukn8f.sh: line 20: [: 4: unary operator expected

    /tmp/tmparwukn8f.sh: line 25: [: 4: unary operator expected

    '
  stdout: ''
  timestamp: 1660003084
- exit_code: 1
  program: "#!/bin/bash\n# Given list of integers, return list in strange order.\n\
    # Strange sorting, is when you start with the minimum value,\n# then maximum of\
    \ the remaining integers, then minimum and so on.\n# Examples:\n#\n# $1 is a space-separated\
    \ list\nstrange_sort_list() {\n    local list=$1\n    local sorted_list=\"\"\n\
    \    local min=0\n    local max=0\n    local min_index=0\n    local max_index=0\n\
    \    local i=0\n    local j=0\n    local k=0\n    local temp=0\n    local temp_index=0\n\
    \    local temp_list=\"\"\n    local temp_list_length=0\n    local temp_list_length_half=0\n\
    \    local temp_list_length_half_plus_one=0\n    local temp_list_length_half_minus_one=0\n\
    \    local temp_list_length_half_minus_one_plus_one=0\n    local temp_list_length_half_minus_one_plus_one_plus_one=0\n\
    \    local temp_list_length_half_minus_one_plus_one_plus_one_plus_one=0\n    local\
    \ temp_list_length_half_minus_one_plus_one_plus_one_plus_one_plus_one=0\n    local\
    \ temp_list_length_half_minus_one_plus_one_plus_one_plus_one_plus_one_plus_one=0\n\
    \    local temp_list_length_half_minus_one_plus_one_plus_one_plus_one_plus_one_plus_one_plus_one=0\n\
    \    local temp_list_length_half_minus_one_plus_one_plus_one_plus_one_plus_one_plus_one_plus_one_plus_one=0\n\
    \    local temp_list_length_half_minus_one_plus_one_plus_one_plus_one_plus_one_plus_one_plus_one_plus_one_plus_one=0\n\
    \    local temp_list_length_half_minus_one_plus_one_plus_one_plus_one_plus_one_plus_one_plus_one_plus_one_plus_one_plus_one=0\n\
    \    local temp_list_length_half_minus_one_plus_one_plus_one_plus_one_plus_one_plus_one_plus_one_plus_one_plus_one_plus_one_plus_one\n\
    }\n\ncandidate() {\n    strange_sort_list \"$@\"\n}\n\nset -e\nrun_test() {\n\
    \    [[ $(candidate \"1 2 3 4\") = \"1 4 2 3\" ]]\n    [[ $(candidate \"5 6 7\
    \ 8 9\") = \"5 9 6 8 7\" ]]\n    [[ $(candidate \"1 2 3 4 5\") = \"1 5 2 4 3\"\
    \ ]]\n    [[ $(candidate \"5 6 7 8 9 1\") = \"1 9 5 8 6 7\" ]]\n    [[ $(candidate\
    \ \"5 5 5 5\") = \"5 5 5 5\" ]]\n    [[ $(candidate \"\") = \"\" ]]\n    [[ $(candidate\
    \ \"1 2 3 4 5 6 7 8\") = \"1 8 2 7 3 6 4 5\" ]]\n    [[ $(candidate \"0 2 2 2\
    \ 5 5 -5 -5\") = \"-5 5 -5 5 0 2 2 2\" ]]\n    [[ $(candidate \"111111\") = \"\
    111111\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660003084
- exit_code: 1
  program: "#!/bin/bash\n# Given list of integers, return list in strange order.\n\
    # Strange sorting, is when you start with the minimum value,\n# then maximum of\
    \ the remaining integers, then minimum and so on.\n# Examples:\n#\n# $1 is a space-separated\
    \ list\nstrange_sort_list() {\n  local list=$1\n  local sorted_list=()\n  local\
    \ min=0\n  local max=0\n  local min_index=0\n  local max_index=0\n  local i=0\n\
    \  local j=0\n  local k=0\n  local l=0\n  local m=0\n  local n=0\n  local o=0\n\
    \  local p=0\n  local q=0\n  local r=0\n  local s=0\n  local t=0\n  local u=0\n\
    \  local v=0\n  local w=0\n  local x=0\n  local y=0\n  local z=0\n  local a=0\n\
    \  local b=0\n  local c=0\n  local d=0\n  local e=0\n  local f=0\n  local g=0\n\
    \  local h=0\n  local i=0\n  local j=0\n  local k=0\n  local l=0\n  local m=0\n\
    \  local n=0\n  local o=0\n  local p=0\n  local q=0\n  local r=0\n  local s=0\n\
    \  local t=0\n  local u=0\n  local v=0\n  local w=0\n  local x=0\n  local y=0\n\
    \  local z=0\n  local a=0\n  local b=0\n  local c=0\n  local d=0\n  local e=0\n\
    \  local f=0\n  local g=0\n  local h=0\n  local i=0\n  local j=0\n  local k=0\n\
    \  local l=0\n  local m=0\n  local n=0\n  local o=0\n  local p=0\n  local q=0\n\
    \  local r=0\n  local s=0\n  local t=0\n  local u=0\n  local v=0\n  local w=0\n\
    \  local x=0\n  local y=0\n  local z=0\n  local a=0\n  local b=0\n  local c=0\n\
    \  local d=0\n  local e=0\n  local f=0\n  local g=0\n  local h=0\n \n}\n\ncandidate()\
    \ {\n    strange_sort_list \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate\
    \ \"1 2 3 4\") = \"1 4 2 3\" ]]\n    [[ $(candidate \"5 6 7 8 9\") = \"5 9 6 8\
    \ 7\" ]]\n    [[ $(candidate \"1 2 3 4 5\") = \"1 5 2 4 3\" ]]\n    [[ $(candidate\
    \ \"5 6 7 8 9 1\") = \"1 9 5 8 6 7\" ]]\n    [[ $(candidate \"5 5 5 5\") = \"\
    5 5 5 5\" ]]\n    [[ $(candidate \"\") = \"\" ]]\n    [[ $(candidate \"1 2 3 4\
    \ 5 6 7 8\") = \"1 8 2 7 3 6 4 5\" ]]\n    [[ $(candidate \"0 2 2 2 5 5 -5 -5\"\
    ) = \"-5 5 -5 5 0 2 2 2\" ]]\n    [[ $(candidate \"111111\") = \"111111\" ]]\n\
    }\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660003084
- exit_code: 1
  program: "#!/bin/bash\n# Given list of integers, return list in strange order.\n\
    # Strange sorting, is when you start with the minimum value,\n# then maximum of\
    \ the remaining integers, then minimum and so on.\n# Examples:\n#\n# $1 is a space-separated\
    \ list\nstrange_sort_list() {\n  local list=\"$1\"\n  local result=\"\"\n  local\
    \ min=0\n  local max=0\n  local tmp=0\n  local i=0\n  local j=0\n  local k=0\n\
    \  local n=0\n  local m=0\n  local l=0\n  local p=0\n  local q=0\n  local r=0\n\
    \  local s=0\n  local t=0\n  local u=0\n  local v=0\n  local w=0\n  local x=0\n\
    \  local y=0\n  local z=0\n  local a=0\n  local b=0\n  local c=0\n  local d=0\n\
    \  local e=0\n  local f=0\n  local g=0\n  local h=0\n  local ii=0\n  local jj=0\n\
    \  local kk=0\n  local ll=0\n  local mm=0\n  local nn=0\n  local oo=0\n  local\
    \ pp=0\n  local qq=0\n  local rr=0\n  local ss=0\n  local tt=0\n  local uu=0\n\
    \  local vv=0\n  local ww=0\n  local xx=0\n  local yy=0\n  local zz=0\n  local\
    \ aa=0\n  local bb=0\n  local cc=0\n  local dd=0\n  local ee=0\n  local ff=0\n\
    \  local gg=0\n  local hh=0\n  local iii=0\n  local jjj=0\n  local kkk=0\n  local\
    \ lll=0\n  local mmm=0\n  local nnn=0\n  local ooo=0\n  local ppp=0\n  local qqq=0\n\
    \  local rrr=0\n  local sss=0\n  local ttt=0\n  local uuu=0\n  local vvv=0\n \
    \ local www=0\n  local xxx=0\n  local yyy=0\n  local zzz=0\n  local aaaa=0\n \
    \ local bbbb=0\n  local cccc=0\n  local dddd=0\n  local\n}\n\ncandidate() {\n\
    \    strange_sort_list \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"\
    1 2 3 4\") = \"1 4 2 3\" ]]\n    [[ $(candidate \"5 6 7 8 9\") = \"5 9 6 8 7\"\
    \ ]]\n    [[ $(candidate \"1 2 3 4 5\") = \"1 5 2 4 3\" ]]\n    [[ $(candidate\
    \ \"5 6 7 8 9 1\") = \"1 9 5 8 6 7\" ]]\n    [[ $(candidate \"5 5 5 5\") = \"\
    5 5 5 5\" ]]\n    [[ $(candidate \"\") = \"\" ]]\n    [[ $(candidate \"1 2 3 4\
    \ 5 6 7 8\") = \"1 8 2 7 3 6 4 5\" ]]\n    [[ $(candidate \"0 2 2 2 5 5 -5 -5\"\
    ) = \"-5 5 -5 5 0 2 2 2\" ]]\n    [[ $(candidate \"111111\") = \"111111\" ]]\n\
    }\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660003084
- exit_code: 1
  program: "#!/bin/bash\n# Given list of integers, return list in strange order.\n\
    # Strange sorting, is when you start with the minimum value,\n# then maximum of\
    \ the remaining integers, then minimum and so on.\n# Examples:\n#\n# $1 is a space-separated\
    \ list\nstrange_sort_list() {\n    local list=($1)\n    local result=()\n    local\
    \ min=${list[0]}\n    local max=${list[0]}\n    local min_index=0\n    local max_index=0\n\
    \    local i=0\n    local j=0\n    local k=0\n    local m=0\n    local n=0\n \
    \   local temp=0\n    local temp_index=0\n    local temp_list=()\n    local temp_list_index=()\n\
    \    local temp_list_index_index=0\n    local temp_list_index_index_index=0\n\
    \    local temp_list_index_index_index_index=0\n    local temp_list_index_index_index_index_index=0\n\
    \    local temp_list_index_index_index_index_index_index=0\n    local temp_list_index_index_index_index_index_index_index=0\n\
    \    local temp_list_index_index_index_index_index_index_index_index=0\n    local\
    \ temp_list_index_index_index_index_index_index_index_index_index=0\n    local\
    \ temp_list_index_index_index_index_index_index_index_index_index_index=0\n  \
    \  local temp_list_index_index_index_index_index_index_index_index_index_index_index=0\n\
    \    local temp_list_index_index_index_index_index_index_index_index_index_index_index_index=0\n\
    \    local temp_list_index_index_index_index_index_index_index_index_index_index_index_index_index=0\n\
    \    local temp_list_index_index_index_index_index_index_index_index_index_index_index_index_index_index=0\n\
    \    local temp_list_index_index_index_index_index_index_index_index_index_index_index_index_index_index_index=0\n\
    \    local temp_list_index_index_index_index_index_index_index_index_index_index_index_index_index_index_index_index=0\n\
    \    local temp_list_index_index\n}\n\ncandidate() {\n    strange_sort_list \"\
    $@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"1 2 3 4\") = \"1 4 2 3\"\
    \ ]]\n    [[ $(candidate \"5 6 7 8 9\") = \"5 9 6 8 7\" ]]\n    [[ $(candidate\
    \ \"1 2 3 4 5\") = \"1 5 2 4 3\" ]]\n    [[ $(candidate \"5 6 7 8 9 1\") = \"\
    1 9 5 8 6 7\" ]]\n    [[ $(candidate \"5 5 5 5\") = \"5 5 5 5\" ]]\n    [[ $(candidate\
    \ \"\") = \"\" ]]\n    [[ $(candidate \"1 2 3 4 5 6 7 8\") = \"1 8 2 7 3 6 4 5\"\
    \ ]]\n    [[ $(candidate \"0 2 2 2 5 5 -5 -5\") = \"-5 5 -5 5 0 2 2 2\" ]]\n \
    \   [[ $(candidate \"111111\") = \"111111\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660003084
- exit_code: 1
  program: "#!/bin/bash\n# Given list of integers, return list in strange order.\n\
    # Strange sorting, is when you start with the minimum value,\n# then maximum of\
    \ the remaining integers, then minimum and so on.\n# Examples:\n#\n# $1 is a space-separated\
    \ list\nstrange_sort_list() {\n    local list=($1)\n    local result=()\n    local\
    \ min=${list[0]}\n    local max=${list[0]}\n    local min_index=0\n    local max_index=0\n\
    \    local i=0\n    local j=0\n    local k=0\n    local l=0\n    local m=0\n \
    \   local n=0\n    local o=0\n    local p=0\n    local q=0\n    local r=0\n  \
    \  local s=0\n    local t=0\n    local u=0\n    local v=0\n    local w=0\n   \
    \ local x=0\n    local y=0\n    local z=0\n    local aa=0\n    local bb=0\n  \
    \  local cc=0\n    local dd=0\n    local ee=0\n    local ff=0\n    local gg=0\n\
    \    local hh=0\n    local ii=0\n    local jj=0\n    local kk=0\n    local ll=0\n\
    \    local mm=0\n    local nn=0\n    local oo=0\n    local pp=0\n    local qq=0\n\
    \    local rr=0\n    local ss=0\n    local tt=0\n    local uu=0\n    local vv=0\n\
    \    local ww=0\n    local xx=0\n    local yy=0\n    local zz=0\n    local aaa=0\n\
    \    local bbb=0\n    local ccc=0\n    local ddd=0\n    local eee=0\n    local\
    \ fff=0\n    local ggg=0\n    local hhh=0\n    local iii=0\n    local jjj=0\n\
    \    local kkk=0\n    local lll=0\n    local mmm=0\n    local nnn=0\n    local\
    \ ooo=0\n    local ppp=0\n    local qqq=0\n    local rrr=0\n    local sss=0\n\
    \    local ttt=0\n    local uuu=0\n    local vvv=0\n    local www=0\n    local\
    \ xxx=0\n    local yyy=0\n    local zzz=0\n\n}\n\ncandidate() {\n    strange_sort_list\
    \ \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"1 2 3 4\") = \"1 4 2\
    \ 3\" ]]\n    [[ $(candidate \"5 6 7 8 9\") = \"5 9 6 8 7\" ]]\n    [[ $(candidate\
    \ \"1 2 3 4 5\") = \"1 5 2 4 3\" ]]\n    [[ $(candidate \"5 6 7 8 9 1\") = \"\
    1 9 5 8 6 7\" ]]\n    [[ $(candidate \"5 5 5 5\") = \"5 5 5 5\" ]]\n    [[ $(candidate\
    \ \"\") = \"\" ]]\n    [[ $(candidate \"1 2 3 4 5 6 7 8\") = \"1 8 2 7 3 6 4 5\"\
    \ ]]\n    [[ $(candidate \"0 2 2 2 5 5 -5 -5\") = \"-5 5 -5 5 0 2 2 2\" ]]\n \
    \   [[ $(candidate \"111111\") = \"111111\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660003083
- exit_code: 1
  program: "#!/bin/bash\n# Given list of integers, return list in strange order.\n\
    # Strange sorting, is when you start with the minimum value,\n# then maximum of\
    \ the remaining integers, then minimum and so on.\n# Examples:\n#\n# $1 is a space-separated\
    \ list\nstrange_sort_list() {\n  local list=($1)\n  local result=()\n  local min=${list[0]}\n\
    \  local max=${list[0]}\n  local min_index=0\n  local max_index=0\n  local i=0\n\
    \  local j=0\n  local k=0\n  local length=${#list[@]}\n  local temp=0\n  local\
    \ temp_index=0\n  local temp_min=0\n  local temp_max=0\n  local temp_min_index=0\n\
    \  local temp_max_index=0\n  local temp_list=()\n  local temp_result=()\n  local\
    \ temp_length=0\n  local temp_i=0\n  local temp_j=0\n  local temp_k=0\n  local\
    \ temp_temp=0\n  local temp_temp_index=0\n  local temp_temp_min=0\n  local temp_temp_max=0\n\
    \  local temp_temp_min_index=0\n  local temp_temp_max_index=0\n  local temp_temp_list=()\n\
    \  local temp_temp_result=()\n  local temp_temp_length=0\n  local temp_temp_i=0\n\
    \  local temp_temp_j=0\n  local temp_temp_k=0\n  local temp_temp_temp=0\n  local\
    \ temp_temp_temp_index=0\n  local temp_temp_temp_min=0\n  local temp_temp_temp_max=0\n\
    \  local temp_temp_temp_min_index=0\n  local temp_temp_temp_max_index=0\n  local\
    \ temp_temp_temp_list=()\n  local temp_temp_temp_result=()\n  local temp_temp_temp_length=0\n\
    \  local temp_temp_temp_i=0\n  local temp_temp_temp_j=0\n  local temp_temp_temp_k=0\n\
    \  local temp_temp_temp_temp=0\n  local temp_temp_temp_temp_index=0\n  local temp_temp_temp_temp_min=0\n\
    \  local temp_temp_temp_temp_max=0\n  local temp_temp_temp_temp_min_\n}\n\ncandidate()\
    \ {\n    strange_sort_list \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate\
    \ \"1 2 3 4\") = \"1 4 2 3\" ]]\n    [[ $(candidate \"5 6 7 8 9\") = \"5 9 6 8\
    \ 7\" ]]\n    [[ $(candidate \"1 2 3 4 5\") = \"1 5 2 4 3\" ]]\n    [[ $(candidate\
    \ \"5 6 7 8 9 1\") = \"1 9 5 8 6 7\" ]]\n    [[ $(candidate \"5 5 5 5\") = \"\
    5 5 5 5\" ]]\n    [[ $(candidate \"\") = \"\" ]]\n    [[ $(candidate \"1 2 3 4\
    \ 5 6 7 8\") = \"1 8 2 7 3 6 4 5\" ]]\n    [[ $(candidate \"0 2 2 2 5 5 -5 -5\"\
    ) = \"-5 5 -5 5 0 2 2 2\" ]]\n    [[ $(candidate \"111111\") = \"111111\" ]]\n\
    }\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660003084
- exit_code: 1
  program: "#!/bin/bash\n# Given list of integers, return list in strange order.\n\
    # Strange sorting, is when you start with the minimum value,\n# then maximum of\
    \ the remaining integers, then minimum and so on.\n# Examples:\n#\n# $1 is a space-separated\
    \ list\nstrange_sort_list() {\n  local list=$1\n  local min=0\n  local max=0\n\
    \  local min_index=0\n  local max_index=0\n  local sorted_list=\"\"\n  local i=0\n\
    \  local j=0\n  local k=0\n  local list_length=0\n  local list_array=()\n  local\
    \ list_array_length=0\n  local sorted_list_array=()\n  local sorted_list_array_length=0\n\
    \  local sorted_list_array_index=0\n  local sorted_list_array_index_max=0\n  local\
    \ sorted_list_array_index_min=0\n  local sorted_list_array_index_min_max=0\n \
    \ local sorted_list_array_index_max_min=0\n  local sorted_list_array_index_min_max_max=0\n\
    \  local sorted_list_array_index_max_min_max=0\n  local sorted_list_array_index_min_max_max_min=0\n\
    \  local sorted_list_array_index_max_min_max_min=0\n  local sorted_list_array_index_min_max_max_min_max=0\n\
    \  local sorted_list_array_index_max_min_max_min_max=0\n  local sorted_list_array_index_min_max_max_min_max_min=0\n\
    \  local sorted_list_array_index_max_min_max_min_max_min=0\n  local sorted_list_array_index_min_max_max_min_max_min_max=0\n\
    \  local sorted_list_array_index_max_min_max_min_max_min_max=0\n  local sorted_list_array_index_min_max_max_min_max_min_max_min=0\n\
    \  local sorted_list_array_index_max_min_max_min_max_min_max_min=0\n  local sorted_list_array_index_min_max_max_min_max_min_max_min_max=0\n\
    \  local sorted_list_array_index_max_min_max_min_max_min_max_min_\n}\n\ncandidate()\
    \ {\n    strange_sort_list \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate\
    \ \"1 2 3 4\") = \"1 4 2 3\" ]]\n    [[ $(candidate \"5 6 7 8 9\") = \"5 9 6 8\
    \ 7\" ]]\n    [[ $(candidate \"1 2 3 4 5\") = \"1 5 2 4 3\" ]]\n    [[ $(candidate\
    \ \"5 6 7 8 9 1\") = \"1 9 5 8 6 7\" ]]\n    [[ $(candidate \"5 5 5 5\") = \"\
    5 5 5 5\" ]]\n    [[ $(candidate \"\") = \"\" ]]\n    [[ $(candidate \"1 2 3 4\
    \ 5 6 7 8\") = \"1 8 2 7 3 6 4 5\" ]]\n    [[ $(candidate \"0 2 2 2 5 5 -5 -5\"\
    ) = \"-5 5 -5 5 0 2 2 2\" ]]\n    [[ $(candidate \"111111\") = \"111111\" ]]\n\
    }\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660003084
- exit_code: 1
  program: "#!/bin/bash\n# Given list of integers, return list in strange order.\n\
    # Strange sorting, is when you start with the minimum value,\n# then maximum of\
    \ the remaining integers, then minimum and so on.\n# Examples:\n#\n# $1 is a space-separated\
    \ list\nstrange_sort_list() {\n    local list=($1)\n    local sorted=()\n    local\
    \ min=${list[0]}\n    local max=${list[0]}\n    local i=0\n    local j=0\n   \
    \ local k=0\n    local l=0\n    local m=0\n    local n=0\n    local o=0\n    local\
    \ p=0\n    local q=0\n    local r=0\n    local s=0\n    local t=0\n    local u=0\n\
    \    local v=0\n    local w=0\n    local x=0\n    local y=0\n    local z=0\n \
    \   local aa=0\n    local bb=0\n    local cc=0\n    local dd=0\n    local ee=0\n\
    \    local ff=0\n    local gg=0\n    local hh=0\n    local ii=0\n    local jj=0\n\
    \    local kk=0\n    local ll=0\n    local mm=0\n    local nn=0\n    local oo=0\n\
    \    local pp=0\n    local qq=0\n    local rr=0\n    local ss=0\n    local tt=0\n\
    \    local uu=0\n    local vv=0\n    local ww=0\n    local xx=0\n    local yy=0\n\
    \    local zz=0\n    local aaa=0\n    local bbb=0\n    local ccc=0\n    local\
    \ ddd=0\n    local eee=0\n    local fff=0\n    local ggg=0\n    local hhh=0\n\
    \    local iii=0\n    local jjj=0\n    local kkk=0\n    local lll=0\n    local\
    \ mmm=0\n    local nnn=0\n    local ooo=0\n    local ppp=0\n    local qqq=0\n\
    \    local rrr=0\n    local sss=0\n    local ttt=0\n    local uuu=0\n    local\
    \ vvv=0\n    local www=0\n    local xxx=0\n    local yyy=0\n    local zzz=0\n\
    \    local aaaa=0\n    local bbbb=0\n   \n}\n\ncandidate() {\n    strange_sort_list\
    \ \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"1 2 3 4\") = \"1 4 2\
    \ 3\" ]]\n    [[ $(candidate \"5 6 7 8 9\") = \"5 9 6 8 7\" ]]\n    [[ $(candidate\
    \ \"1 2 3 4 5\") = \"1 5 2 4 3\" ]]\n    [[ $(candidate \"5 6 7 8 9 1\") = \"\
    1 9 5 8 6 7\" ]]\n    [[ $(candidate \"5 5 5 5\") = \"5 5 5 5\" ]]\n    [[ $(candidate\
    \ \"\") = \"\" ]]\n    [[ $(candidate \"1 2 3 4 5 6 7 8\") = \"1 8 2 7 3 6 4 5\"\
    \ ]]\n    [[ $(candidate \"0 2 2 2 5 5 -5 -5\") = \"-5 5 -5 5 0 2 2 2\" ]]\n \
    \   [[ $(candidate \"111111\") = \"111111\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660003083
- exit_code: 1
  program: "#!/bin/bash\n# Given list of integers, return list in strange order.\n\
    # Strange sorting, is when you start with the minimum value,\n# then maximum of\
    \ the remaining integers, then minimum and so on.\n# Examples:\n#\n# $1 is a space-separated\
    \ list\nstrange_sort_list() {\n    local list=\"$1\"\n    local sorted=\"\"\n\
    \    local min=\"\"\n    local max=\"\"\n    local min_index=\"\"\n    local max_index=\"\
    \"\n    local i=\"\"\n    local j=\"\"\n    local k=\"\"\n    local l=\"\"\n \
    \   local m=\"\"\n    local n=\"\"\n    local o=\"\"\n    local p=\"\"\n    local\
    \ q=\"\"\n    local r=\"\"\n    local s=\"\"\n    local t=\"\"\n    local u=\"\
    \"\n    local v=\"\"\n    local w=\"\"\n    local x=\"\"\n    local y=\"\"\n \
    \   local z=\"\"\n    local a=\"\"\n    local b=\"\"\n    local c=\"\"\n    local\
    \ d=\"\"\n    local e=\"\"\n    local f=\"\"\n    local g=\"\"\n    local h=\"\
    \"\n    local i=\"\"\n    local j=\"\"\n    local k=\"\"\n    local l=\"\"\n \
    \   local m=\"\"\n    local n=\"\"\n    local o=\"\"\n    local p=\"\"\n    local\
    \ q=\"\"\n    local r=\"\"\n    local s=\"\"\n    local t=\"\"\n    local u=\"\
    \"\n    local v=\"\"\n    local w=\"\"\n    local x=\"\"\n    local y=\"\"\n \
    \   local z=\"\"\n    local a=\"\"\n    local b=\"\"\n    local c=\"\"\n    local\
    \ d=\"\"\n    local e=\"\"\n    local f=\"\"\n    local g=\"\"\n    local h=\"\
    \"\n    local i=\"\"\n    local j=\"\"\n    local k=\"\"\n    local l=\"\"\n \
    \   local m=\"\"\n    local n=\"\"\n    local o=\"\"\n    local p=\"\"\n    local\
    \ q=\"\"\n    local r=\"\"\n    local s=\"\"\n    local t=\"\"\n    local u=\"\
    \"\n    local v=\"\"\n    local w=\"\"\n    local x=\"\"\n    local y=\"\"\n \
    \   local z=\"\"\n    local a=\"\"\n    local b=\"\"\n    local c=\"\"\n    local\
    \ d=\"\"\n    local e=\"\"\n    local f=\"\"\n    local g=\"\"\n    local h=\"\
    \"\n    local i=\"\"\n    local j=\"\"\n    local k=\"\"\n    local l=\"\"\n \
    \   local m=\"\"\n    local n=\"\"\n    local o=\"\"\n    local p=\"\"\n    local\
    \ q=\"\"\n    local r=\"\"\n    local s=\"\"\n    local t=\"\"\n    local u=\"\
    \"\n    local v=\"\"\n    local w=\"\"\n    local x=\"\"\n    local y=\"\"\n}\n\
    \ncandidate() {\n    strange_sort_list \"$@\"\n}\n\nset -e\nrun_test() {\n   \
    \ [[ $(candidate \"1 2 3 4\") = \"1 4 2 3\" ]]\n    [[ $(candidate \"5 6 7 8 9\"\
    ) = \"5 9 6 8 7\" ]]\n    [[ $(candidate \"1 2 3 4 5\") = \"1 5 2 4 3\" ]]\n \
    \   [[ $(candidate \"5 6 7 8 9 1\") = \"1 9 5 8 6 7\" ]]\n    [[ $(candidate \"\
    5 5 5 5\") = \"5 5 5 5\" ]]\n    [[ $(candidate \"\") = \"\" ]]\n    [[ $(candidate\
    \ \"1 2 3 4 5 6 7 8\") = \"1 8 2 7 3 6 4 5\" ]]\n    [[ $(candidate \"0 2 2 2\
    \ 5 5 -5 -5\") = \"-5 5 -5 5 0 2 2 2\" ]]\n    [[ $(candidate \"111111\") = \"\
    111111\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660003084
- exit_code: 1
  program: "#!/bin/bash\n# Given list of integers, return list in strange order.\n\
    # Strange sorting, is when you start with the minimum value,\n# then maximum of\
    \ the remaining integers, then minimum and so on.\n# Examples:\n#\n# $1 is a space-separated\
    \ list\nstrange_sort_list() {\n  local list=$1\n  local min=$(echo \"$list\" |\
    \ tr ' ' '\\n' | sort -n | head -n 1)\n  local max=$(echo \"$list\" | tr ' ' '\\\
    n' | sort -n | tail -n 1)\n  local sorted_list=$(echo \"$list\" | tr ' ' '\\n'\
    \ | sort -n)\n  local result=\"\"\n  local i=0\n  while [ $i -lt $(( ${#list}\
    \ / 2 )) ]; do\n    result=\"$result $min\"\n    result=\"$result $max\"\n   \
    \ min=$(echo \"$sorted_list\" | grep -v \"^$min$\" | head -n 1)\n    max=$(echo\
    \ \"$sorted_list\" | grep -v \"^$max$\" | tail -n 1)\n    i=$(( i + 1 ))\n  done\n\
    \  echo \"$result\" | tr -d ' '\n}\n\ncandidate() {\n    strange_sort_list \"\
    $@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"1 2 3 4\") = \"1 4 2 3\"\
    \ ]]\n    [[ $(candidate \"5 6 7 8 9\") = \"5 9 6 8 7\" ]]\n    [[ $(candidate\
    \ \"1 2 3 4 5\") = \"1 5 2 4 3\" ]]\n    [[ $(candidate \"5 6 7 8 9 1\") = \"\
    1 9 5 8 6 7\" ]]\n    [[ $(candidate \"5 5 5 5\") = \"5 5 5 5\" ]]\n    [[ $(candidate\
    \ \"\") = \"\" ]]\n    [[ $(candidate \"1 2 3 4 5 6 7 8\") = \"1 8 2 7 3 6 4 5\"\
    \ ]]\n    [[ $(candidate \"0 2 2 2 5 5 -5 -5\") = \"-5 5 -5 5 0 2 2 2\" ]]\n \
    \   [[ $(candidate \"111111\") = \"111111\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660003084
- exit_code: 1
  program: "#!/bin/bash\n# Given list of integers, return list in strange order.\n\
    # Strange sorting, is when you start with the minimum value,\n# then maximum of\
    \ the remaining integers, then minimum and so on.\n# Examples:\n#\n# $1 is a space-separated\
    \ list\nstrange_sort_list() {\n    local -a list=($1)\n    local -a sorted=()\n\
    \    local min=${list[0]}\n    local max=${list[0]}\n    local i=0\n    local\
    \ j=0\n    local k=0\n    local l=0\n    local m=0\n    local n=0\n    local o=0\n\
    \    local p=0\n    local q=0\n    local r=0\n    local s=0\n    local t=0\n \
    \   local u=0\n    local v=0\n    local w=0\n    local x=0\n    local y=0\n  \
    \  local z=0\n    local aa=0\n    local bb=0\n    local cc=0\n    local dd=0\n\
    \    local ee=0\n    local ff=0\n    local gg=0\n    local hh=0\n    local ii=0\n\
    \    local jj=0\n    local kk=0\n    local ll=0\n    local mm=0\n    local nn=0\n\
    \    local oo=0\n    local pp=0\n    local qq=0\n    local rr=0\n    local ss=0\n\
    \    local tt=0\n    local uu=0\n    local vv=0\n    local ww=0\n    local xx=0\n\
    \    local yy=0\n    local zz=0\n    local aaa=0\n    local bbb=0\n    local ccc=0\n\
    \    local ddd=0\n    local eee=0\n    local fff=0\n    local ggg=0\n    local\
    \ hhh=0\n    local iii=0\n    local jjj=0\n    local kkk=0\n    local lll=0\n\
    \    local mmm=0\n    local nnn=0\n    local ooo=0\n    local ppp=0\n    local\
    \ qqq=0\n    local rrr=0\n    local sss=0\n    local ttt=0\n    local uuu=0\n\
    \    local vvv=0\n    local www=0\n    local xxx=0\n    local yyy=0\n    local\
    \ zzz=0\n    local aaaa=0\n    local bbbb\n}\n\ncandidate() {\n    strange_sort_list\
    \ \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"1 2 3 4\") = \"1 4 2\
    \ 3\" ]]\n    [[ $(candidate \"5 6 7 8 9\") = \"5 9 6 8 7\" ]]\n    [[ $(candidate\
    \ \"1 2 3 4 5\") = \"1 5 2 4 3\" ]]\n    [[ $(candidate \"5 6 7 8 9 1\") = \"\
    1 9 5 8 6 7\" ]]\n    [[ $(candidate \"5 5 5 5\") = \"5 5 5 5\" ]]\n    [[ $(candidate\
    \ \"\") = \"\" ]]\n    [[ $(candidate \"1 2 3 4 5 6 7 8\") = \"1 8 2 7 3 6 4 5\"\
    \ ]]\n    [[ $(candidate \"0 2 2 2 5 5 -5 -5\") = \"-5 5 -5 5 0 2 2 2\" ]]\n \
    \   [[ $(candidate \"111111\") = \"111111\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660003084
- exit_code: 1
  program: "#!/bin/bash\n# Given list of integers, return list in strange order.\n\
    # Strange sorting, is when you start with the minimum value,\n# then maximum of\
    \ the remaining integers, then minimum and so on.\n# Examples:\n#\n# $1 is a space-separated\
    \ list\nstrange_sort_list() {\n    local list=($1)\n    local result=()\n    local\
    \ min=${list[0]}\n    local max=${list[0]}\n    local min_index=0\n    local max_index=0\n\
    \    local i=0\n    local j=0\n    local k=0\n    local l=0\n    local m=0\n \
    \   local n=0\n    local o=0\n    local p=0\n    local q=0\n    local r=0\n  \
    \  local s=0\n    local t=0\n    local u=0\n    local v=0\n    local w=0\n   \
    \ local x=0\n    local y=0\n    local z=0\n    local aa=0\n    local bb=0\n  \
    \  local cc=0\n    local dd=0\n    local ee=0\n    local ff=0\n    local gg=0\n\
    \    local hh=0\n    local ii=0\n    local jj=0\n    local kk=0\n    local ll=0\n\
    \    local mm=0\n    local nn=0\n    local oo=0\n    local pp=0\n    local qq=0\n\
    \    local rr=0\n    local ss=0\n    local tt=0\n    local uu=0\n    local vv=0\n\
    \    local ww=0\n    local xx=0\n    local yy=0\n    local zz=0\n    local aaa=0\n\
    \    local bbb=0\n    local ccc=0\n    local ddd=0\n    local eee=0\n    local\
    \ fff=0\n    local ggg=0\n    local hhh=0\n    local iii=0\n    local jjj=0\n\
    \    local kkk=0\n    local lll=0\n    local mmm=0\n    local nnn=0\n    local\
    \ ooo=0\n    local ppp=0\n    local qqq=0\n    local rrr=0\n    local sss=0\n\
    \    local ttt=0\n    local uuu=0\n    local vvv=0\n    local www=0\n    local\
    \ xxx=0\n    local yyy=0\n    local zzz=0\n\n}\n\ncandidate() {\n    strange_sort_list\
    \ \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"1 2 3 4\") = \"1 4 2\
    \ 3\" ]]\n    [[ $(candidate \"5 6 7 8 9\") = \"5 9 6 8 7\" ]]\n    [[ $(candidate\
    \ \"1 2 3 4 5\") = \"1 5 2 4 3\" ]]\n    [[ $(candidate \"5 6 7 8 9 1\") = \"\
    1 9 5 8 6 7\" ]]\n    [[ $(candidate \"5 5 5 5\") = \"5 5 5 5\" ]]\n    [[ $(candidate\
    \ \"\") = \"\" ]]\n    [[ $(candidate \"1 2 3 4 5 6 7 8\") = \"1 8 2 7 3 6 4 5\"\
    \ ]]\n    [[ $(candidate \"0 2 2 2 5 5 -5 -5\") = \"-5 5 -5 5 0 2 2 2\" ]]\n \
    \   [[ $(candidate \"111111\") = \"111111\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660003083
- exit_code: 1
  program: "#!/bin/bash\n# Given list of integers, return list in strange order.\n\
    # Strange sorting, is when you start with the minimum value,\n# then maximum of\
    \ the remaining integers, then minimum and so on.\n# Examples:\n#\n# $1 is a space-separated\
    \ list\nstrange_sort_list() {\n    local list=$1\n    local sorted=()\n    local\
    \ min=0\n    local max=0\n    local min_index=0\n    local max_index=0\n    local\
    \ i=0\n    local j=0\n    local k=0\n    local n=0\n    local tmp=0\n    local\
    \ tmp_index=0\n    local tmp_list=()\n    local tmp_list_size=0\n    local tmp_list_size_half=0\n\
    \    local tmp_list_size_half_plus_one=0\n    local tmp_list_size_half_minus_one=0\n\
    \    local tmp_list_size_half_minus_one_index=0\n    local tmp_list_size_half_plus_one_index=0\n\
    \    local tmp_list_size_half_index=0\n    local tmp_list_size_half_index_plus_one=0\n\
    \    local tmp_list_size_half_index_minus_one=0\n    local tmp_list_size_half_index_minus_one_index=0\n\
    \    local tmp_list_size_half_index_plus_one_index=0\n    local tmp_list_size_half_index_index=0\n\
    \    local tmp_list_size_half_index_index_plus_one=0\n    local tmp_list_size_half_index_index_minus_one=0\n\
    \    local tmp_list_size_half_index_index_minus_one_index=0\n    local tmp_list_size_half_index_index_plus_one_index=0\n\
    \    local tmp_list_size_half_index_index_index=0\n    local tmp_list_size_half_index_index_index_plus_one=0\n\
    \    local tmp_list_size_half_index_index_index_minus_one=0\n    local tmp_list_size_half_index_index_index_minus_one_index=0\n\
    \    local tmp_list_size_half_index_index_index_plus_one_index=0\n    local tmp_list_size_half_index_index_index_index=0\n\
    \    local tmp_list_size_half_index_index_index\n}\n\ncandidate() {\n    strange_sort_list\
    \ \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"1 2 3 4\") = \"1 4 2\
    \ 3\" ]]\n    [[ $(candidate \"5 6 7 8 9\") = \"5 9 6 8 7\" ]]\n    [[ $(candidate\
    \ \"1 2 3 4 5\") = \"1 5 2 4 3\" ]]\n    [[ $(candidate \"5 6 7 8 9 1\") = \"\
    1 9 5 8 6 7\" ]]\n    [[ $(candidate \"5 5 5 5\") = \"5 5 5 5\" ]]\n    [[ $(candidate\
    \ \"\") = \"\" ]]\n    [[ $(candidate \"1 2 3 4 5 6 7 8\") = \"1 8 2 7 3 6 4 5\"\
    \ ]]\n    [[ $(candidate \"0 2 2 2 5 5 -5 -5\") = \"-5 5 -5 5 0 2 2 2\" ]]\n \
    \   [[ $(candidate \"111111\") = \"111111\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660003084
- exit_code: 1
  program: "#!/bin/bash\n# Given list of integers, return list in strange order.\n\
    # Strange sorting, is when you start with the minimum value,\n# then maximum of\
    \ the remaining integers, then minimum and so on.\n# Examples:\n#\n# $1 is a space-separated\
    \ list\nstrange_sort_list() {\n    local -a list=($1)\n    local -a result=()\n\
    \    local -i i=0\n    local -i j=0\n    local -i k=0\n    local -i l=0\n    local\
    \ -i m=0\n    local -i n=0\n    local -i o=0\n    local -i p=0\n    local -i q=0\n\
    \    local -i r=0\n    local -i s=0\n    local -i t=0\n    local -i u=0\n    local\
    \ -i v=0\n    local -i w=0\n    local -i x=0\n    local -i y=0\n    local -i z=0\n\
    \    local -i aa=0\n    local -i bb=0\n    local -i cc=0\n    local -i dd=0\n\
    \    local -i ee=0\n    local -i ff=0\n    local -i gg=0\n    local -i hh=0\n\
    \    local -i ii=0\n    local -i jj=0\n    local -i kk=0\n    local -i ll=0\n\
    \    local -i mm=0\n    local -i nn=0\n    local -i oo=0\n    local -i pp=0\n\
    \    local -i qq=0\n    local -i rr=0\n    local -i ss=0\n    local -i tt=0\n\
    \    local -i uu=0\n    local -i vv=0\n    local -i ww=0\n    local -i xx=0\n\
    \    local -i yy=0\n    local -i zz=0\n    local -i aaa=0\n    local -i bbb=0\n\
    \    local -i ccc=0\n    local -i ddd=0\n    local -i eee=0\n    local -i fff=0\n\
    \    local -i ggg=0\n    local -i hhh=0\n    local -i iii=0\n    local -i jjj=0\n\
    \    local -i kkk=0\n    local -i lll=0\n    local -i mmm=0\n    local -i nnn=0\n\
    }\n\ncandidate() {\n    strange_sort_list \"$@\"\n}\n\nset -e\nrun_test() {\n\
    \    [[ $(candidate \"1 2 3 4\") = \"1 4 2 3\" ]]\n    [[ $(candidate \"5 6 7\
    \ 8 9\") = \"5 9 6 8 7\" ]]\n    [[ $(candidate \"1 2 3 4 5\") = \"1 5 2 4 3\"\
    \ ]]\n    [[ $(candidate \"5 6 7 8 9 1\") = \"1 9 5 8 6 7\" ]]\n    [[ $(candidate\
    \ \"5 5 5 5\") = \"5 5 5 5\" ]]\n    [[ $(candidate \"\") = \"\" ]]\n    [[ $(candidate\
    \ \"1 2 3 4 5 6 7 8\") = \"1 8 2 7 3 6 4 5\" ]]\n    [[ $(candidate \"0 2 2 2\
    \ 5 5 -5 -5\") = \"-5 5 -5 5 0 2 2 2\" ]]\n    [[ $(candidate \"111111\") = \"\
    111111\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660003084
- exit_code: 1
  program: "#!/bin/bash\n# Given list of integers, return list in strange order.\n\
    # Strange sorting, is when you start with the minimum value,\n# then maximum of\
    \ the remaining integers, then minimum and so on.\n# Examples:\n#\n# $1 is a space-separated\
    \ list\nstrange_sort_list() {\n    local list=($1)\n    local sorted=()\n    local\
    \ min=${list[0]}\n    local max=${list[0]}\n    local min_index=0\n    local max_index=0\n\
    \    local i=0\n    local j=0\n    local k=0\n    local l=0\n    local m=0\n \
    \   local n=0\n    local o=0\n    local p=0\n    local q=0\n    local r=0\n  \
    \  local s=0\n    local t=0\n    local u=0\n    local v=0\n    local w=0\n   \
    \ local x=0\n    local y=0\n    local z=0\n    local aa=0\n    local bb=0\n  \
    \  local cc=0\n    local dd=0\n    local ee=0\n    local ff=0\n    local gg=0\n\
    \    local hh=0\n    local ii=0\n    local jj=0\n    local kk=0\n    local ll=0\n\
    \    local mm=0\n    local nn=0\n    local oo=0\n    local pp=0\n    local qq=0\n\
    \    local rr=0\n    local ss=0\n    local tt=0\n    local uu=0\n    local vv=0\n\
    \    local ww=0\n    local xx=0\n    local yy=0\n    local zz=0\n    local aaa=0\n\
    \    local bbb=0\n    local ccc=0\n    local ddd=0\n    local eee=0\n    local\
    \ fff=0\n    local ggg=0\n    local hhh=0\n    local iii=0\n    local jjj=0\n\
    \    local kkk=0\n    local lll=0\n    local mmm=0\n    local nnn=0\n    local\
    \ ooo=0\n    local ppp=0\n    local qqq=0\n    local rrr=0\n    local sss=0\n\
    \    local ttt=0\n    local uuu=0\n    local vvv=0\n    local www=0\n    local\
    \ xxx=0\n    local yyy=0\n    local zzz=0\n\n}\n\ncandidate() {\n    strange_sort_list\
    \ \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"1 2 3 4\") = \"1 4 2\
    \ 3\" ]]\n    [[ $(candidate \"5 6 7 8 9\") = \"5 9 6 8 7\" ]]\n    [[ $(candidate\
    \ \"1 2 3 4 5\") = \"1 5 2 4 3\" ]]\n    [[ $(candidate \"5 6 7 8 9 1\") = \"\
    1 9 5 8 6 7\" ]]\n    [[ $(candidate \"5 5 5 5\") = \"5 5 5 5\" ]]\n    [[ $(candidate\
    \ \"\") = \"\" ]]\n    [[ $(candidate \"1 2 3 4 5 6 7 8\") = \"1 8 2 7 3 6 4 5\"\
    \ ]]\n    [[ $(candidate \"0 2 2 2 5 5 -5 -5\") = \"-5 5 -5 5 0 2 2 2\" ]]\n \
    \   [[ $(candidate \"111111\") = \"111111\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660003083
- exit_code: 1
  program: "#!/bin/bash\n# Given list of integers, return list in strange order.\n\
    # Strange sorting, is when you start with the minimum value,\n# then maximum of\
    \ the remaining integers, then minimum and so on.\n# Examples:\n#\n# $1 is a space-separated\
    \ list\nstrange_sort_list() {\n  local list=($1)\n  local result=()\n  local min=${list[0]}\n\
    \  local max=${list[0]}\n  local min_index=0\n  local max_index=0\n  local i=0\n\
    \  local j=0\n  local k=0\n  local l=0\n  local m=0\n  local n=0\n  local o=0\n\
    \  local p=0\n  local q=0\n  local r=0\n  local s=0\n  local t=0\n  local u=0\n\
    \  local v=0\n  local w=0\n  local x=0\n  local y=0\n  local z=0\n  local aa=0\n\
    \  local bb=0\n  local cc=0\n  local dd=0\n  local ee=0\n  local ff=0\n  local\
    \ gg=0\n  local hh=0\n  local ii=0\n  local jj=0\n  local kk=0\n  local ll=0\n\
    \  local mm=0\n  local nn=0\n  local oo=0\n  local pp=0\n  local qq=0\n  local\
    \ rr=0\n  local ss=0\n  local tt=0\n  local uu=0\n  local vv=0\n  local ww=0\n\
    \  local xx=0\n  local yy=0\n  local zz=0\n  local aaa=0\n  local bbb=0\n  local\
    \ ccc=0\n  local ddd=0\n  local eee=0\n  local fff=0\n  local ggg=0\n  local hhh=0\n\
    \  local iii=0\n  local jjj=0\n  local kkk=0\n  local lll=0\n  local mmm=0\n \
    \ local nnn=0\n  local ooo=0\n  local ppp=0\n  local qqq=0\n  local rrr=0\n  local\
    \ sss=0\n  local ttt=0\n  local uuu=0\n  local vvv=0\n  local www=0\n  local xxx=0\n\
    \  local yyy=0\n  local zzz=0\n\n}\n\ncandidate() {\n    strange_sort_list \"\
    $@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"1 2 3 4\") = \"1 4 2 3\"\
    \ ]]\n    [[ $(candidate \"5 6 7 8 9\") = \"5 9 6 8 7\" ]]\n    [[ $(candidate\
    \ \"1 2 3 4 5\") = \"1 5 2 4 3\" ]]\n    [[ $(candidate \"5 6 7 8 9 1\") = \"\
    1 9 5 8 6 7\" ]]\n    [[ $(candidate \"5 5 5 5\") = \"5 5 5 5\" ]]\n    [[ $(candidate\
    \ \"\") = \"\" ]]\n    [[ $(candidate \"1 2 3 4 5 6 7 8\") = \"1 8 2 7 3 6 4 5\"\
    \ ]]\n    [[ $(candidate \"0 2 2 2 5 5 -5 -5\") = \"-5 5 -5 5 0 2 2 2\" ]]\n \
    \   [[ $(candidate \"111111\") = \"111111\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660003084
- exit_code: 1
  program: "#!/bin/bash\n# Given list of integers, return list in strange order.\n\
    # Strange sorting, is when you start with the minimum value,\n# then maximum of\
    \ the remaining integers, then minimum and so on.\n# Examples:\n#\n# $1 is a space-separated\
    \ list\nstrange_sort_list() {\n    local -a list=($1)\n    local -a result=()\n\
    \    local -i i=0\n    local -i j=0\n    local -i k=0\n    local -i l=0\n    local\
    \ -i m=0\n    local -i n=0\n    local -i o=0\n    local -i p=0\n    local -i q=0\n\
    \    local -i r=0\n    local -i s=0\n    local -i t=0\n    local -i u=0\n    local\
    \ -i v=0\n    local -i w=0\n    local -i x=0\n    local -i y=0\n    local -i z=0\n\
    \    local -i aa=0\n    local -i bb=0\n    local -i cc=0\n    local -i dd=0\n\
    \    local -i ee=0\n    local -i ff=0\n    local -i gg=0\n    local -i hh=0\n\
    \    local -i ii=0\n    local -i jj=0\n    local -i kk=0\n    local -i ll=0\n\
    \    local -i mm=0\n    local -i nn=0\n    local -i oo=0\n    local -i pp=0\n\
    \    local -i qq=0\n    local -i rr=0\n    local -i ss=0\n    local -i tt=0\n\
    \    local -i uu=0\n    local -i vv=0\n    local -i ww=0\n    local -i xx=0\n\
    \    local -i yy=0\n    local -i zz=0\n    local -i aaa=0\n    local -i bbb=0\n\
    \    local -i ccc=0\n    local -i ddd=0\n    local -i eee=0\n    local -i fff=0\n\
    \    local -i ggg=0\n    local -i hhh=0\n    local -i iii=0\n    local -i jjj=0\n\
    \    local -i kkk=0\n    local -i lll=0\n    local -i mmm=0\n    local -i nnn=0\n\
    }\n\ncandidate() {\n    strange_sort_list \"$@\"\n}\n\nset -e\nrun_test() {\n\
    \    [[ $(candidate \"1 2 3 4\") = \"1 4 2 3\" ]]\n    [[ $(candidate \"5 6 7\
    \ 8 9\") = \"5 9 6 8 7\" ]]\n    [[ $(candidate \"1 2 3 4 5\") = \"1 5 2 4 3\"\
    \ ]]\n    [[ $(candidate \"5 6 7 8 9 1\") = \"1 9 5 8 6 7\" ]]\n    [[ $(candidate\
    \ \"5 5 5 5\") = \"5 5 5 5\" ]]\n    [[ $(candidate \"\") = \"\" ]]\n    [[ $(candidate\
    \ \"1 2 3 4 5 6 7 8\") = \"1 8 2 7 3 6 4 5\" ]]\n    [[ $(candidate \"0 2 2 2\
    \ 5 5 -5 -5\") = \"-5 5 -5 5 0 2 2 2\" ]]\n    [[ $(candidate \"111111\") = \"\
    111111\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660003084
- exit_code: 1
  program: "#!/bin/bash\n# Given list of integers, return list in strange order.\n\
    # Strange sorting, is when you start with the minimum value,\n# then maximum of\
    \ the remaining integers, then minimum and so on.\n# Examples:\n#\n# $1 is a space-separated\
    \ list\nstrange_sort_list() {\n    local list=($1)\n    local sorted=()\n    local\
    \ min=0\n    local max=0\n    local min_index=0\n    local max_index=0\n    local\
    \ i=0\n    local j=0\n    local k=0\n    local l=0\n    local m=0\n    local n=0\n\
    \    local o=0\n    local p=0\n    local q=0\n    local r=0\n    local s=0\n \
    \   local t=0\n    local u=0\n    local v=0\n    local w=0\n    local x=0\n  \
    \  local y=0\n    local z=0\n    local aa=0\n    local bb=0\n    local cc=0\n\
    \    local dd=0\n    local ee=0\n    local ff=0\n    local gg=0\n    local hh=0\n\
    \    local ii=0\n    local jj=0\n    local kk=0\n    local ll=0\n    local mm=0\n\
    \    local nn=0\n    local oo=0\n    local pp=0\n    local qq=0\n    local rr=0\n\
    \    local ss=0\n    local tt=0\n    local uu=0\n    local vv=0\n    local ww=0\n\
    \    local xx=0\n    local yy=0\n    local zz=0\n    local aaa=0\n    local bbb=0\n\
    \    local ccc=0\n    local ddd=0\n    local eee=0\n    local fff=0\n    local\
    \ ggg=0\n    local hhh=0\n    local iii=0\n    local jjj=0\n    local kkk=0\n\
    \    local lll=0\n    local mmm=0\n    local nnn=0\n    local ooo=0\n    local\
    \ ppp=0\n    local qqq=0\n    local rrr=0\n    local sss=0\n    local ttt=0\n\
    \    local uuu=0\n    local vvv=0\n    local www=0\n    local xxx=0\n    local\
    \ yyy=0\n    local zzz=0\n    local aaaa=0\n   \n}\n\ncandidate() {\n    strange_sort_list\
    \ \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"1 2 3 4\") = \"1 4 2\
    \ 3\" ]]\n    [[ $(candidate \"5 6 7 8 9\") = \"5 9 6 8 7\" ]]\n    [[ $(candidate\
    \ \"1 2 3 4 5\") = \"1 5 2 4 3\" ]]\n    [[ $(candidate \"5 6 7 8 9 1\") = \"\
    1 9 5 8 6 7\" ]]\n    [[ $(candidate \"5 5 5 5\") = \"5 5 5 5\" ]]\n    [[ $(candidate\
    \ \"\") = \"\" ]]\n    [[ $(candidate \"1 2 3 4 5 6 7 8\") = \"1 8 2 7 3 6 4 5\"\
    \ ]]\n    [[ $(candidate \"0 2 2 2 5 5 -5 -5\") = \"-5 5 -5 5 0 2 2 2\" ]]\n \
    \   [[ $(candidate \"111111\") = \"111111\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660003084
- exit_code: 1
  program: "#!/bin/bash\n# Given list of integers, return list in strange order.\n\
    # Strange sorting, is when you start with the minimum value,\n# then maximum of\
    \ the remaining integers, then minimum and so on.\n# Examples:\n#\n# $1 is a space-separated\
    \ list\nstrange_sort_list() {\n    local -a list=($1)\n    local -a sorted\n \
    \   local -i i=0\n    local -i j=0\n    local -i k=0\n    local -i l=0\n    local\
    \ -i m=0\n    local -i n=0\n    local -i o=0\n    local -i p=0\n    local -i q=0\n\
    \    local -i r=0\n    local -i s=0\n    local -i t=0\n    local -i u=0\n    local\
    \ -i v=0\n    local -i w=0\n    local -i x=0\n    local -i y=0\n    local -i z=0\n\
    \    local -i aa=0\n    local -i bb=0\n    local -i cc=0\n    local -i dd=0\n\
    \    local -i ee=0\n    local -i ff=0\n    local -i gg=0\n    local -i hh=0\n\
    \    local -i ii=0\n    local -i jj=0\n    local -i kk=0\n    local -i ll=0\n\
    \    local -i mm=0\n    local -i nn=0\n    local -i oo=0\n    local -i pp=0\n\
    \    local -i qq=0\n    local -i rr=0\n    local -i ss=0\n    local -i tt=0\n\
    \    local -i uu=0\n    local -i vv=0\n    local -i ww=0\n    local -i xx=0\n\
    \    local -i yy=0\n    local -i zz=0\n    local -i aaa=0\n    local -i bbb=0\n\
    \    local -i ccc=0\n    local -i ddd=0\n    local -i eee=0\n    local -i fff=0\n\
    \    local -i ggg=0\n    local -i hhh=0\n    local -i iii=0\n    local -i jjj=0\n\
    \    local -i kkk=0\n    local -i lll=0\n    local -i mmm=0\n    local -i nnn=0\n\
    \   \n}\n\ncandidate() {\n    strange_sort_list \"$@\"\n}\n\nset -e\nrun_test()\
    \ {\n    [[ $(candidate \"1 2 3 4\") = \"1 4 2 3\" ]]\n    [[ $(candidate \"5\
    \ 6 7 8 9\") = \"5 9 6 8 7\" ]]\n    [[ $(candidate \"1 2 3 4 5\") = \"1 5 2 4\
    \ 3\" ]]\n    [[ $(candidate \"5 6 7 8 9 1\") = \"1 9 5 8 6 7\" ]]\n    [[ $(candidate\
    \ \"5 5 5 5\") = \"5 5 5 5\" ]]\n    [[ $(candidate \"\") = \"\" ]]\n    [[ $(candidate\
    \ \"1 2 3 4 5 6 7 8\") = \"1 8 2 7 3 6 4 5\" ]]\n    [[ $(candidate \"0 2 2 2\
    \ 5 5 -5 -5\") = \"-5 5 -5 5 0 2 2 2\" ]]\n    [[ $(candidate \"111111\") = \"\
    111111\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660003084
- exit_code: 1
  program: "#!/bin/bash\n# Given list of integers, return list in strange order.\n\
    # Strange sorting, is when you start with the minimum value,\n# then maximum of\
    \ the remaining integers, then minimum and so on.\n# Examples:\n#\n# $1 is a space-separated\
    \ list\nstrange_sort_list() {\n  local list=$1\n  local sorted=()\n  local min=0\n\
    \  local max=0\n  local min_index=0\n  local max_index=0\n  local i=0\n  local\
    \ j=0\n  local k=0\n  local l=0\n  local m=0\n  local n=0\n  local o=0\n  local\
    \ p=0\n  local q=0\n  local r=0\n  local s=0\n  local t=0\n  local u=0\n  local\
    \ v=0\n  local w=0\n  local x=0\n  local y=0\n  local z=0\n  local aa=0\n  local\
    \ bb=0\n  local cc=0\n  local dd=0\n  local ee=0\n  local ff=0\n  local gg=0\n\
    \  local hh=0\n  local ii=0\n  local jj=0\n  local kk=0\n  local ll=0\n  local\
    \ mm=0\n  local nn=0\n  local oo=0\n  local pp=0\n  local qq=0\n  local rr=0\n\
    \  local ss=0\n  local tt=0\n  local uu=0\n  local vv=0\n  local ww=0\n  local\
    \ xx=0\n  local yy=0\n  local zz=0\n  local aaa=0\n  local bbb=0\n  local ccc=0\n\
    \  local ddd=0\n  local eee=0\n  local fff=0\n  local ggg=0\n  local hhh=0\n \
    \ local iii=0\n  local jjj=0\n  local kkk=0\n  local lll=0\n  local mmm=0\n  local\
    \ nnn=0\n  local ooo=0\n  local ppp=0\n  local qqq=0\n  local rrr=0\n  local sss=0\n\
    \  local ttt=0\n  local uuu=0\n  local vvv=0\n  local www=0\n  local xxx=0\n \
    \ local yyy=0\n  local zzz=0\n  local aaaa=0\n  local b\n}\n\ncandidate() {\n\
    \    strange_sort_list \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"\
    1 2 3 4\") = \"1 4 2 3\" ]]\n    [[ $(candidate \"5 6 7 8 9\") = \"5 9 6 8 7\"\
    \ ]]\n    [[ $(candidate \"1 2 3 4 5\") = \"1 5 2 4 3\" ]]\n    [[ $(candidate\
    \ \"5 6 7 8 9 1\") = \"1 9 5 8 6 7\" ]]\n    [[ $(candidate \"5 5 5 5\") = \"\
    5 5 5 5\" ]]\n    [[ $(candidate \"\") = \"\" ]]\n    [[ $(candidate \"1 2 3 4\
    \ 5 6 7 8\") = \"1 8 2 7 3 6 4 5\" ]]\n    [[ $(candidate \"0 2 2 2 5 5 -5 -5\"\
    ) = \"-5 5 -5 5 0 2 2 2\" ]]\n    [[ $(candidate \"111111\") = \"111111\" ]]\n\
    }\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660003084
- exit_code: 2
  program: "#!/bin/bash\n# Given list of integers, return list in strange order.\n\
    # Strange sorting, is when you start with the minimum value,\n# then maximum of\
    \ the remaining integers, then minimum and so on.\n# Examples:\n#\n# $1 is a space-separated\
    \ list\nstrange_sort_list() {\n    local list=$1\n    local min=$(echo \"$list\"\
    \ | tr ' ' '\\n' | sort -n | head -n 1)\n    local max=$(echo \"$list\" | tr '\
    \ ' '\\n' | sort -n | tail -n 1)\n    local min_list=$(echo \"$list\" | tr ' '\
    \ '\\n' | sort -n | grep -v \"$max\")\n    local max_list=$(echo \"$list\" | tr\
    \ ' ' '\\n' | sort -n | grep -v \"$min\")\n    local min_list_len=$(echo \"$min_list\"\
    \ | wc -l)\n    local max_list_len=$(echo \"$max_list\" | wc -l)\n    local min_list_max=$(echo\
    \ \"$min_list\" | tail -n 1)\n    local max_list_min=$(echo \"$max_list\" | head\
    \ -n 1)\n    local min_list_max_list=$(echo \"$min_list\" | grep -v \"$min_list_max\"\
    )\n    local max_list_min_list=$(echo \"$max_list\" | grep -v \"$max_list_min\"\
    )\n    local min_list_max_list_len=$(echo \"$min_list_max_list\" | wc -l)\n  \
    \  local max_list_min_list_len=$(echo \"$max_list_min_list\" | wc -l)\n    local\
    \ result=$min\n    local i=0\n    local j=0\n    local k=0\n    local l=0\n  \
    \  local m=0\n    local n=0\n    while [ $i -lt $min_list_len ]; do\n        result=\"\
    $result $(echo \"$min_list\" | head -n $((i+1)) | tail -n 1)\"\n        i=$((i+1))\n\
    \        if [ $j -lt $max_list_len ]; then\n            result=\"$result $(echo\
    \ \"$max_list\" | head -n $((j+1)) | tail -n 1)\"\n            j=$((j+1))\n  \
    \      fi\n    done\n    while [ $k -lt $min_list_max_list_len ]; do\n       \
    \ result=\"$result\n}\n\ncandidate() {\n    strange_sort_list \"$@\"\n}\n\nset\
    \ -e\nrun_test() {\n    [[ $(candidate \"1 2 3 4\") = \"1 4 2 3\" ]]\n    [[ $(candidate\
    \ \"5 6 7 8 9\") = \"5 9 6 8 7\" ]]\n    [[ $(candidate \"1 2 3 4 5\") = \"1 5\
    \ 2 4 3\" ]]\n    [[ $(candidate \"5 6 7 8 9 1\") = \"1 9 5 8 6 7\" ]]\n    [[\
    \ $(candidate \"5 5 5 5\") = \"5 5 5 5\" ]]\n    [[ $(candidate \"\") = \"\" ]]\n\
    \    [[ $(candidate \"1 2 3 4 5 6 7 8\") = \"1 8 2 7 3 6 4 5\" ]]\n    [[ $(candidate\
    \ \"0 2 2 2 5 5 -5 -5\") = \"-5 5 -5 5 0 2 2 2\" ]]\n    [[ $(candidate \"111111\"\
    ) = \"111111\" ]]\n}\n\nrun_test"
  status: SyntaxError
  stderr: '/tmp/tmpej0utbu6.sh: line 55: unexpected EOF while looking for matching
    `"''

    /tmp/tmpej0utbu6.sh: line 59: syntax error: unexpected end of file

    '
  stdout: ''
  timestamp: 1660003084
- exit_code: 1
  program: "#!/bin/bash\n# Given list of integers, return list in strange order.\n\
    # Strange sorting, is when you start with the minimum value,\n# then maximum of\
    \ the remaining integers, then minimum and so on.\n# Examples:\n#\n# $1 is a space-separated\
    \ list\nstrange_sort_list() {\n    local list=($1)\n    local sorted=()\n    local\
    \ min=${list[0]}\n    local max=${list[0]}\n    local min_index=0\n    local max_index=0\n\
    \    local i=0\n    local j=0\n    local k=0\n    local l=0\n    local m=0\n \
    \   local n=0\n    local o=0\n    local p=0\n    local q=0\n    local r=0\n  \
    \  local s=0\n    local t=0\n    local u=0\n    local v=0\n    local w=0\n   \
    \ local x=0\n    local y=0\n    local z=0\n    local aa=0\n    local bb=0\n  \
    \  local cc=0\n    local dd=0\n    local ee=0\n    local ff=0\n    local gg=0\n\
    \    local hh=0\n    local ii=0\n    local jj=0\n    local kk=0\n    local ll=0\n\
    \    local mm=0\n    local nn=0\n    local oo=0\n    local pp=0\n    local qq=0\n\
    \    local rr=0\n    local ss=0\n    local tt=0\n    local uu=0\n    local vv=0\n\
    \    local ww=0\n    local xx=0\n    local yy=0\n    local zz=0\n    local aaa=0\n\
    \    local bbb=0\n    local ccc=0\n    local ddd=0\n    local eee=0\n    local\
    \ fff=0\n    local ggg=0\n    local hhh=0\n    local iii=0\n    local jjj=0\n\
    \    local kkk=0\n    local lll=0\n    local mmm=0\n    local nnn=0\n    local\
    \ ooo=0\n    local ppp=0\n    local qqq=0\n    local rrr=0\n    local sss=0\n\
    \    local ttt=0\n    local uuu=0\n    local vvv=0\n    local www=0\n    local\
    \ xxx=0\n    local yyy=0\n    local zzz=0\n\n}\n\ncandidate() {\n    strange_sort_list\
    \ \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"1 2 3 4\") = \"1 4 2\
    \ 3\" ]]\n    [[ $(candidate \"5 6 7 8 9\") = \"5 9 6 8 7\" ]]\n    [[ $(candidate\
    \ \"1 2 3 4 5\") = \"1 5 2 4 3\" ]]\n    [[ $(candidate \"5 6 7 8 9 1\") = \"\
    1 9 5 8 6 7\" ]]\n    [[ $(candidate \"5 5 5 5\") = \"5 5 5 5\" ]]\n    [[ $(candidate\
    \ \"\") = \"\" ]]\n    [[ $(candidate \"1 2 3 4 5 6 7 8\") = \"1 8 2 7 3 6 4 5\"\
    \ ]]\n    [[ $(candidate \"0 2 2 2 5 5 -5 -5\") = \"-5 5 -5 5 0 2 2 2\" ]]\n \
    \   [[ $(candidate \"111111\") = \"111111\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660003083
- exit_code: 1
  program: "#!/bin/bash\n# Given list of integers, return list in strange order.\n\
    # Strange sorting, is when you start with the minimum value,\n# then maximum of\
    \ the remaining integers, then minimum and so on.\n# Examples:\n#\n# $1 is a space-separated\
    \ list\nstrange_sort_list() {\n  local list=$1\n  local sorted_list=()\n  local\
    \ min_max_list=()\n  local min_max_list_len=0\n  local min_max_list_index=0\n\
    \  local min_max_list_index_max=0\n  local min_max_list_index_min=0\n  local min_max_list_index_min_max=0\n\
    \  local min_max_list_index_max_min=0\n  local min_max_list_index_min_max_min=0\n\
    \  local min_max_list_index_max_min_max=0\n  local min_max_list_index_min_max_min_max=0\n\
    \  local min_max_list_index_max_min_max_min=0\n  local min_max_list_index_min_max_min_max_min=0\n\
    \  local min_max_list_index_max_min_max_min_max=0\n  local min_max_list_index_min_max_min_max_min_max=0\n\
    \  local min_max_list_index_max_min_max_min_max_min=0\n  local min_max_list_index_min_max_min_max_min_max_min=0\n\
    \  local min_max_list_index_max_min_max_min_max_min_max=0\n  local min_max_list_index_min_max_min_max_min_max_min_max=0\n\
    \  local min_max_list_index_max_min_max_min_max_min_max_min=0\n  local min_max_list_index_min_max_min_max_min_max_min_max_min=0\n\
    \  local min_max_list_index_max_min_max_min_max_min_max_min_max=0\n  local min_max_list_index_min_max_min_max_min_max_min_max_min_max=0\n\
    \  local min_max_list_index_max_min_max_min_max_min_max_min_max_min=0\n  local\
    \ min\n}\n\ncandidate() {\n    strange_sort_list \"$@\"\n}\n\nset -e\nrun_test()\
    \ {\n    [[ $(candidate \"1 2 3 4\") = \"1 4 2 3\" ]]\n    [[ $(candidate \"5\
    \ 6 7 8 9\") = \"5 9 6 8 7\" ]]\n    [[ $(candidate \"1 2 3 4 5\") = \"1 5 2 4\
    \ 3\" ]]\n    [[ $(candidate \"5 6 7 8 9 1\") = \"1 9 5 8 6 7\" ]]\n    [[ $(candidate\
    \ \"5 5 5 5\") = \"5 5 5 5\" ]]\n    [[ $(candidate \"\") = \"\" ]]\n    [[ $(candidate\
    \ \"1 2 3 4 5 6 7 8\") = \"1 8 2 7 3 6 4 5\" ]]\n    [[ $(candidate \"0 2 2 2\
    \ 5 5 -5 -5\") = \"-5 5 -5 5 0 2 2 2\" ]]\n    [[ $(candidate \"111111\") = \"\
    111111\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660003084
- exit_code: 1
  program: "#!/bin/bash\n# Given list of integers, return list in strange order.\n\
    # Strange sorting, is when you start with the minimum value,\n# then maximum of\
    \ the remaining integers, then minimum and so on.\n# Examples:\n#\n# $1 is a space-separated\
    \ list\nstrange_sort_list() {\n    local list=($1)\n    local sorted=()\n    local\
    \ min=${list[0]}\n    local max=${list[0]}\n    local min_index=0\n    local max_index=0\n\
    \    local i=0\n    local j=0\n    local k=0\n    local l=0\n    local m=0\n \
    \   local n=0\n    local o=0\n    local p=0\n    local q=0\n    local r=0\n  \
    \  local s=0\n    local t=0\n    local u=0\n    local v=0\n    local w=0\n   \
    \ local x=0\n    local y=0\n    local z=0\n    local aa=0\n    local bb=0\n  \
    \  local cc=0\n    local dd=0\n    local ee=0\n    local ff=0\n    local gg=0\n\
    \    local hh=0\n    local ii=0\n    local jj=0\n    local kk=0\n    local ll=0\n\
    \    local mm=0\n    local nn=0\n    local oo=0\n    local pp=0\n    local qq=0\n\
    \    local rr=0\n    local ss=0\n    local tt=0\n    local uu=0\n    local vv=0\n\
    \    local ww=0\n    local xx=0\n    local yy=0\n    local zz=0\n    local aaa=0\n\
    \    local bbb=0\n    local ccc=0\n    local ddd=0\n    local eee=0\n    local\
    \ fff=0\n    local ggg=0\n    local hhh=0\n    local iii=0\n    local jjj=0\n\
    \    local kkk=0\n    local lll=0\n    local mmm=0\n    local nnn=0\n    local\
    \ ooo=0\n    local ppp=0\n    local qqq=0\n    local rrr=0\n    local sss=0\n\
    \    local ttt=0\n    local uuu=0\n    local vvv=0\n    local www=0\n    local\
    \ xxx=0\n    local yyy=0\n    local zzz=0\n\n}\n\ncandidate() {\n    strange_sort_list\
    \ \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"1 2 3 4\") = \"1 4 2\
    \ 3\" ]]\n    [[ $(candidate \"5 6 7 8 9\") = \"5 9 6 8 7\" ]]\n    [[ $(candidate\
    \ \"1 2 3 4 5\") = \"1 5 2 4 3\" ]]\n    [[ $(candidate \"5 6 7 8 9 1\") = \"\
    1 9 5 8 6 7\" ]]\n    [[ $(candidate \"5 5 5 5\") = \"5 5 5 5\" ]]\n    [[ $(candidate\
    \ \"\") = \"\" ]]\n    [[ $(candidate \"1 2 3 4 5 6 7 8\") = \"1 8 2 7 3 6 4 5\"\
    \ ]]\n    [[ $(candidate \"0 2 2 2 5 5 -5 -5\") = \"-5 5 -5 5 0 2 2 2\" ]]\n \
    \   [[ $(candidate \"111111\") = \"111111\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660003083
- exit_code: 1
  program: "#!/bin/bash\n# Given list of integers, return list in strange order.\n\
    # Strange sorting, is when you start with the minimum value,\n# then maximum of\
    \ the remaining integers, then minimum and so on.\n# Examples:\n#\n# $1 is a space-separated\
    \ list\nstrange_sort_list() {\n    local -a list=($1)\n    local -a sorted_list=()\n\
    \    local -i i=0\n    local -i j=0\n    local -i k=0\n    local -i l=0\n    local\
    \ -i m=0\n    local -i n=0\n    local -i o=0\n    local -i p=0\n    local -i q=0\n\
    \    local -i r=0\n    local -i s=0\n    local -i t=0\n    local -i u=0\n    local\
    \ -i v=0\n    local -i w=0\n    local -i x=0\n    local -i y=0\n    local -i z=0\n\
    \    local -i aa=0\n    local -i bb=0\n    local -i cc=0\n    local -i dd=0\n\
    \    local -i ee=0\n    local -i ff=0\n    local -i gg=0\n    local -i hh=0\n\
    \    local -i ii=0\n    local -i jj=0\n    local -i kk=0\n    local -i ll=0\n\
    \    local -i mm=0\n    local -i nn=0\n    local -i oo=0\n    local -i pp=0\n\
    \    local -i qq=0\n    local -i rr=0\n    local -i ss=0\n    local -i tt=0\n\
    \    local -i uu=0\n    local -i vv=0\n    local -i ww=0\n    local -i xx=0\n\
    \    local -i yy=0\n    local -i zz=0\n    local -i aaa=0\n    local -i bbb=0\n\
    \    local -i ccc=0\n    local -i ddd=0\n    local -i eee=0\n    local -i fff=0\n\
    \    local -i ggg=0\n    local -i hhh=0\n    local -i iii=0\n    local -i jjj=0\n\
    \    local -i kkk=0\n    local -i lll=0\n    local -i mmm=0\n    local -i nnn\n\
    }\n\ncandidate() {\n    strange_sort_list \"$@\"\n}\n\nset -e\nrun_test() {\n\
    \    [[ $(candidate \"1 2 3 4\") = \"1 4 2 3\" ]]\n    [[ $(candidate \"5 6 7\
    \ 8 9\") = \"5 9 6 8 7\" ]]\n    [[ $(candidate \"1 2 3 4 5\") = \"1 5 2 4 3\"\
    \ ]]\n    [[ $(candidate \"5 6 7 8 9 1\") = \"1 9 5 8 6 7\" ]]\n    [[ $(candidate\
    \ \"5 5 5 5\") = \"5 5 5 5\" ]]\n    [[ $(candidate \"\") = \"\" ]]\n    [[ $(candidate\
    \ \"1 2 3 4 5 6 7 8\") = \"1 8 2 7 3 6 4 5\" ]]\n    [[ $(candidate \"0 2 2 2\
    \ 5 5 -5 -5\") = \"-5 5 -5 5 0 2 2 2\" ]]\n    [[ $(candidate \"111111\") = \"\
    111111\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660003084
- exit_code: 1
  program: "#!/bin/bash\n# Given list of integers, return list in strange order.\n\
    # Strange sorting, is when you start with the minimum value,\n# then maximum of\
    \ the remaining integers, then minimum and so on.\n# Examples:\n#\n# $1 is a space-separated\
    \ list\nstrange_sort_list() {\n  local list=($1)\n  local sorted_list=()\n  local\
    \ min=${list[0]}\n  local max=${list[0]}\n  local min_index=0\n  local max_index=0\n\
    \  local i=0\n  local j=0\n  local k=0\n  local l=0\n  local m=0\n  local n=0\n\
    \  local o=0\n  local p=0\n  local q=0\n  local r=0\n  local s=0\n  local t=0\n\
    \  local u=0\n  local v=0\n  local w=0\n  local x=0\n  local y=0\n  local z=0\n\
    \  local aa=0\n  local bb=0\n  local cc=0\n  local dd=0\n  local ee=0\n  local\
    \ ff=0\n  local gg=0\n  local hh=0\n  local ii=0\n  local jj=0\n  local kk=0\n\
    \  local ll=0\n  local mm=0\n  local nn=0\n  local oo=0\n  local pp=0\n  local\
    \ qq=0\n  local rr=0\n  local ss=0\n  local tt=0\n  local uu=0\n  local vv=0\n\
    \  local ww=0\n  local xx=0\n  local yy=0\n  local zz=0\n  local aaa=0\n  local\
    \ bbb=0\n  local ccc=0\n  local ddd=0\n  local eee=0\n  local fff=0\n  local ggg=0\n\
    \  local hhh=0\n  local iii=0\n  local jjj=0\n  local kkk=0\n  local lll=0\n \
    \ local mmm=0\n  local nnn=0\n  local ooo=0\n  local ppp=0\n  local qqq=0\n  local\
    \ rrr=0\n  local sss=0\n  local ttt=0\n  local uuu=0\n  local vvv=0\n  local www=0\n\
    \  local xxx=0\n  local yyy=0\n  local zzz=\n}\n\ncandidate() {\n    strange_sort_list\
    \ \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"1 2 3 4\") = \"1 4 2\
    \ 3\" ]]\n    [[ $(candidate \"5 6 7 8 9\") = \"5 9 6 8 7\" ]]\n    [[ $(candidate\
    \ \"1 2 3 4 5\") = \"1 5 2 4 3\" ]]\n    [[ $(candidate \"5 6 7 8 9 1\") = \"\
    1 9 5 8 6 7\" ]]\n    [[ $(candidate \"5 5 5 5\") = \"5 5 5 5\" ]]\n    [[ $(candidate\
    \ \"\") = \"\" ]]\n    [[ $(candidate \"1 2 3 4 5 6 7 8\") = \"1 8 2 7 3 6 4 5\"\
    \ ]]\n    [[ $(candidate \"0 2 2 2 5 5 -5 -5\") = \"-5 5 -5 5 0 2 2 2\" ]]\n \
    \   [[ $(candidate \"111111\") = \"111111\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660003084
- exit_code: 1
  program: "#!/bin/bash\n# Given list of integers, return list in strange order.\n\
    # Strange sorting, is when you start with the minimum value,\n# then maximum of\
    \ the remaining integers, then minimum and so on.\n# Examples:\n#\n# $1 is a space-separated\
    \ list\nstrange_sort_list() {\n    local list=($1)\n    local result=()\n    local\
    \ i=0\n    local j=0\n    local k=0\n    local l=0\n    local m=0\n    local n=0\n\
    \    local o=0\n    local p=0\n    local q=0\n    local r=0\n    local s=0\n \
    \   local t=0\n    local u=0\n    local v=0\n    local w=0\n    local x=0\n  \
    \  local y=0\n    local z=0\n    local aa=0\n    local bb=0\n    local cc=0\n\
    \    local dd=0\n    local ee=0\n    local ff=0\n    local gg=0\n    local hh=0\n\
    \    local ii=0\n    local jj=0\n    local kk=0\n    local ll=0\n    local mm=0\n\
    \    local nn=0\n    local oo=0\n    local pp=0\n    local qq=0\n    local rr=0\n\
    \    local ss=0\n    local tt=0\n    local uu=0\n    local vv=0\n    local ww=0\n\
    \    local xx=0\n    local yy=0\n    local zz=0\n    local aaa=0\n    local bbb=0\n\
    \    local ccc=0\n    local ddd=0\n    local eee=0\n    local fff=0\n    local\
    \ ggg=0\n    local hhh=0\n    local iii=0\n    local jjj=0\n    local kkk=0\n\
    \    local lll=0\n    local mmm=0\n    local nnn=0\n    local ooo=0\n    local\
    \ ppp=0\n    local qqq=0\n    local rrr=0\n    local sss=0\n    local ttt=0\n\
    \    local uuu=0\n    local vvv=0\n    local www=0\n    local xxx=0\n    local\
    \ yyy=0\n    local zzz=0\n    local aaaa=0\n    local bbbb=0\n    local cccc=0\n\
    \    local dddd=0\n    local eeee\n}\n\ncandidate() {\n    strange_sort_list \"\
    $@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"1 2 3 4\") = \"1 4 2 3\"\
    \ ]]\n    [[ $(candidate \"5 6 7 8 9\") = \"5 9 6 8 7\" ]]\n    [[ $(candidate\
    \ \"1 2 3 4 5\") = \"1 5 2 4 3\" ]]\n    [[ $(candidate \"5 6 7 8 9 1\") = \"\
    1 9 5 8 6 7\" ]]\n    [[ $(candidate \"5 5 5 5\") = \"5 5 5 5\" ]]\n    [[ $(candidate\
    \ \"\") = \"\" ]]\n    [[ $(candidate \"1 2 3 4 5 6 7 8\") = \"1 8 2 7 3 6 4 5\"\
    \ ]]\n    [[ $(candidate \"0 2 2 2 5 5 -5 -5\") = \"-5 5 -5 5 0 2 2 2\" ]]\n \
    \   [[ $(candidate \"111111\") = \"111111\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660003083
- exit_code: 1
  program: "#!/bin/bash\n# Given list of integers, return list in strange order.\n\
    # Strange sorting, is when you start with the minimum value,\n# then maximum of\
    \ the remaining integers, then minimum and so on.\n# Examples:\n#\n# $1 is a space-separated\
    \ list\nstrange_sort_list() {\n  local list=\"$1\"\n  local result=\"\"\n  local\
    \ min=0\n  local max=0\n  local min_index=0\n  local max_index=0\n  local i=0\n\
    \  local j=0\n  local k=0\n  local temp=\"\"\n  local temp_index=0\n  local temp_list=\"\
    \"\n  local temp_result=\"\"\n  local temp_min=0\n  local temp_max=0\n  local\
    \ temp_min_index=0\n  local temp_max_index=0\n  local temp_i=0\n  local temp_j=0\n\
    \  local temp_k=0\n  local temp_temp=\"\"\n  local temp_temp_index=0\n  local\
    \ temp_temp_list=\"\"\n  local temp_temp_result=\"\"\n  local temp_temp_min=0\n\
    \  local temp_temp_max=0\n  local temp_temp_min_index=0\n  local temp_temp_max_index=0\n\
    \  local temp_temp_i=0\n  local temp_temp_j=0\n  local temp_temp_k=0\n  local\
    \ temp_temp_temp=\"\"\n  local temp_temp_temp_index=0\n  local temp_temp_temp_list=\"\
    \"\n  local temp_temp_temp_result=\"\"\n  local temp_temp_temp_min=0\n  local\
    \ temp_temp_temp_max=0\n  local temp_temp_temp_min_index=0\n  local temp_temp_temp_max_index=0\n\
    \  local temp_temp_temp_i=0\n  local temp_temp_temp_j=0\n  local temp_temp_temp_k=0\n\
    \  local temp_temp_temp_temp=\"\"\n  local temp_temp_temp_temp_index=0\n  local\
    \ temp_temp_temp_temp_list=\"\"\n  local temp_temp_temp_temp_result=\"\"\n  local\
    \ temp_temp_temp_temp_min=0\n  local temp_temp_temp_temp_max=0\n  local temp_temp_temp_temp_min_index=0\n\
    \  local temp_temp_temp_temp_max_index=0\n  local temp_temp_temp_temp_i=0\n\n\
    }\n\ncandidate() {\n    strange_sort_list \"$@\"\n}\n\nset -e\nrun_test() {\n\
    \    [[ $(candidate \"1 2 3 4\") = \"1 4 2 3\" ]]\n    [[ $(candidate \"5 6 7\
    \ 8 9\") = \"5 9 6 8 7\" ]]\n    [[ $(candidate \"1 2 3 4 5\") = \"1 5 2 4 3\"\
    \ ]]\n    [[ $(candidate \"5 6 7 8 9 1\") = \"1 9 5 8 6 7\" ]]\n    [[ $(candidate\
    \ \"5 5 5 5\") = \"5 5 5 5\" ]]\n    [[ $(candidate \"\") = \"\" ]]\n    [[ $(candidate\
    \ \"1 2 3 4 5 6 7 8\") = \"1 8 2 7 3 6 4 5\" ]]\n    [[ $(candidate \"0 2 2 2\
    \ 5 5 -5 -5\") = \"-5 5 -5 5 0 2 2 2\" ]]\n    [[ $(candidate \"111111\") = \"\
    111111\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660003084
- exit_code: 1
  program: "#!/bin/bash\n# Given list of integers, return list in strange order.\n\
    # Strange sorting, is when you start with the minimum value,\n# then maximum of\
    \ the remaining integers, then minimum and so on.\n# Examples:\n#\n# $1 is a space-separated\
    \ list\nstrange_sort_list() {\n    local list=($1)\n    local result=()\n    local\
    \ min=${list[0]}\n    local max=${list[0]}\n    local min_index=0\n    local max_index=0\n\
    \    local i=0\n    local j=0\n    local k=0\n    local l=0\n    local m=0\n \
    \   local n=0\n    local o=0\n    local p=0\n    local q=0\n    local r=0\n  \
    \  local s=0\n    local t=0\n    local u=0\n    local v=0\n    local w=0\n   \
    \ local x=0\n    local y=0\n    local z=0\n    local aa=0\n    local bb=0\n  \
    \  local cc=0\n    local dd=0\n    local ee=0\n    local ff=0\n    local gg=0\n\
    \    local hh=0\n    local ii=0\n    local jj=0\n    local kk=0\n    local ll=0\n\
    \    local mm=0\n    local nn=0\n    local oo=0\n    local pp=0\n    local qq=0\n\
    \    local rr=0\n    local ss=0\n    local tt=0\n    local uu=0\n    local vv=0\n\
    \    local ww=0\n    local xx=0\n    local yy=0\n    local zz=0\n    local aaa=0\n\
    \    local bbb=0\n    local ccc=0\n    local ddd=0\n    local eee=0\n    local\
    \ fff=0\n    local ggg=0\n    local hhh=0\n    local iii=0\n    local jjj=0\n\
    \    local kkk=0\n    local lll=0\n    local mmm=0\n    local nnn=0\n    local\
    \ ooo=0\n    local ppp=0\n    local qqq=0\n    local rrr=0\n    local sss=0\n\
    \    local ttt=0\n    local uuu=0\n    local vvv=0\n    local www=0\n    local\
    \ xxx=0\n    local yyy=0\n    local zzz=0\n\n}\n\ncandidate() {\n    strange_sort_list\
    \ \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"1 2 3 4\") = \"1 4 2\
    \ 3\" ]]\n    [[ $(candidate \"5 6 7 8 9\") = \"5 9 6 8 7\" ]]\n    [[ $(candidate\
    \ \"1 2 3 4 5\") = \"1 5 2 4 3\" ]]\n    [[ $(candidate \"5 6 7 8 9 1\") = \"\
    1 9 5 8 6 7\" ]]\n    [[ $(candidate \"5 5 5 5\") = \"5 5 5 5\" ]]\n    [[ $(candidate\
    \ \"\") = \"\" ]]\n    [[ $(candidate \"1 2 3 4 5 6 7 8\") = \"1 8 2 7 3 6 4 5\"\
    \ ]]\n    [[ $(candidate \"0 2 2 2 5 5 -5 -5\") = \"-5 5 -5 5 0 2 2 2\" ]]\n \
    \   [[ $(candidate \"111111\") = \"111111\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660003083
- exit_code: 1
  program: "#!/bin/bash\n# Given list of integers, return list in strange order.\n\
    # Strange sorting, is when you start with the minimum value,\n# then maximum of\
    \ the remaining integers, then minimum and so on.\n# Examples:\n#\n# $1 is a space-separated\
    \ list\nstrange_sort_list() {\n  local list=($1)\n  local sorted=()\n  local min=${list[0]}\n\
    \  local max=${list[0]}\n  local min_index=0\n  local max_index=0\n  local i=0\n\
    \  local j=0\n  local k=0\n  local l=0\n  local m=0\n  local n=0\n  local o=0\n\
    \  local p=0\n  local q=0\n  local r=0\n  local s=0\n  local t=0\n  local u=0\n\
    \  local v=0\n  local w=0\n  local x=0\n  local y=0\n  local z=0\n  local aa=0\n\
    \  local bb=0\n  local cc=0\n  local dd=0\n  local ee=0\n  local ff=0\n  local\
    \ gg=0\n  local hh=0\n  local ii=0\n  local jj=0\n  local kk=0\n  local ll=0\n\
    \  local mm=0\n  local nn=0\n  local oo=0\n  local pp=0\n  local qq=0\n  local\
    \ rr=0\n  local ss=0\n  local tt=0\n  local uu=0\n  local vv=0\n  local ww=0\n\
    \  local xx=0\n  local yy=0\n  local zz=0\n  local aaa=0\n  local bbb=0\n  local\
    \ ccc=0\n  local ddd=0\n  local eee=0\n  local fff=0\n  local ggg=0\n  local hhh=0\n\
    \  local iii=0\n  local jjj=0\n  local kkk=0\n  local lll=0\n  local mmm=0\n \
    \ local nnn=0\n  local ooo=0\n  local ppp=0\n  local qqq=0\n  local rrr=0\n  local\
    \ sss=0\n  local ttt=0\n  local uuu=0\n  local vvv=0\n  local www=0\n  local xxx=0\n\
    \  local yyy=0\n  local zzz=0\n\n}\n\ncandidate() {\n    strange_sort_list \"\
    $@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"1 2 3 4\") = \"1 4 2 3\"\
    \ ]]\n    [[ $(candidate \"5 6 7 8 9\") = \"5 9 6 8 7\" ]]\n    [[ $(candidate\
    \ \"1 2 3 4 5\") = \"1 5 2 4 3\" ]]\n    [[ $(candidate \"5 6 7 8 9 1\") = \"\
    1 9 5 8 6 7\" ]]\n    [[ $(candidate \"5 5 5 5\") = \"5 5 5 5\" ]]\n    [[ $(candidate\
    \ \"\") = \"\" ]]\n    [[ $(candidate \"1 2 3 4 5 6 7 8\") = \"1 8 2 7 3 6 4 5\"\
    \ ]]\n    [[ $(candidate \"0 2 2 2 5 5 -5 -5\") = \"-5 5 -5 5 0 2 2 2\" ]]\n \
    \   [[ $(candidate \"111111\") = \"111111\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660003084
- exit_code: 1
  program: "#!/bin/bash\n# Given list of integers, return list in strange order.\n\
    # Strange sorting, is when you start with the minimum value,\n# then maximum of\
    \ the remaining integers, then minimum and so on.\n# Examples:\n#\n# $1 is a space-separated\
    \ list\nstrange_sort_list() {\n  local list=($1)\n  local sorted_list=()\n  local\
    \ min=${list[0]}\n  local max=${list[0]}\n  local min_index=0\n  local max_index=0\n\
    \  local i=0\n  local j=0\n  local k=0\n  local l=0\n  local m=0\n  local n=0\n\
    \  local o=0\n  local p=0\n  local q=0\n  local r=0\n  local s=0\n  local t=0\n\
    \  local u=0\n  local v=0\n  local w=0\n  local x=0\n  local y=0\n  local z=0\n\
    \  local aa=0\n  local bb=0\n  local cc=0\n  local dd=0\n  local ee=0\n  local\
    \ ff=0\n  local gg=0\n  local hh=0\n  local ii=0\n  local jj=0\n  local kk=0\n\
    \  local ll=0\n  local mm=0\n  local nn=0\n  local oo=0\n  local pp=0\n  local\
    \ qq=0\n  local rr=0\n  local ss=0\n  local tt=0\n  local uu=0\n  local vv=0\n\
    \  local ww=0\n  local xx=0\n  local yy=0\n  local zz=0\n  local aaa=0\n  local\
    \ bbb=0\n  local ccc=0\n  local ddd=0\n  local eee=0\n  local fff=0\n  local ggg=0\n\
    \  local hhh=0\n  local iii=0\n  local jjj=0\n  local kkk=0\n  local lll=0\n \
    \ local mmm=0\n  local nnn=0\n  local ooo=0\n  local ppp=0\n  local qqq=0\n  local\
    \ rrr=0\n  local sss=0\n  local ttt=0\n  local uuu=0\n  local vvv=0\n  local www=0\n\
    \  local xxx=0\n  local yyy=0\n  local zzz=\n}\n\ncandidate() {\n    strange_sort_list\
    \ \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"1 2 3 4\") = \"1 4 2\
    \ 3\" ]]\n    [[ $(candidate \"5 6 7 8 9\") = \"5 9 6 8 7\" ]]\n    [[ $(candidate\
    \ \"1 2 3 4 5\") = \"1 5 2 4 3\" ]]\n    [[ $(candidate \"5 6 7 8 9 1\") = \"\
    1 9 5 8 6 7\" ]]\n    [[ $(candidate \"5 5 5 5\") = \"5 5 5 5\" ]]\n    [[ $(candidate\
    \ \"\") = \"\" ]]\n    [[ $(candidate \"1 2 3 4 5 6 7 8\") = \"1 8 2 7 3 6 4 5\"\
    \ ]]\n    [[ $(candidate \"0 2 2 2 5 5 -5 -5\") = \"-5 5 -5 5 0 2 2 2\" ]]\n \
    \   [[ $(candidate \"111111\") = \"111111\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660003084
- exit_code: 1
  program: "#!/bin/bash\n# Given list of integers, return list in strange order.\n\
    # Strange sorting, is when you start with the minimum value,\n# then maximum of\
    \ the remaining integers, then minimum and so on.\n# Examples:\n#\n# $1 is a space-separated\
    \ list\nstrange_sort_list() {\n    local list=$1\n    local sorted_list=()\n \
    \   local min=0\n    local max=0\n    local min_index=0\n    local max_index=0\n\
    \    local i=0\n    local j=0\n    local k=0\n    local l=0\n    local n=0\n \
    \   local m=0\n    local temp=0\n    local temp_index=0\n    local temp_list=()\n\
    \    local temp_list_index=()\n    local temp_list_index_2=()\n    local temp_list_index_3=()\n\
    \    local temp_list_index_4=()\n    local temp_list_index_5=()\n    local temp_list_index_6=()\n\
    \    local temp_list_index_7=()\n    local temp_list_index_8=()\n    local temp_list_index_9=()\n\
    \    local temp_list_index_10=()\n    local temp_list_index_11=()\n    local temp_list_index_12=()\n\
    \    local temp_list_index_13=()\n    local temp_list_index_14=()\n    local temp_list_index_15=()\n\
    \    local temp_list_index_16=()\n    local temp_list_index_17=()\n    local temp_list_index_18=()\n\
    \    local temp_list_index_19=()\n    local temp_list_index_20=()\n    local temp_list_index_21=()\n\
    \    local temp_list_index_22=()\n    local temp_list_index_23=()\n    local temp_list_index_24=()\n\
    \    local temp_list_index_25=()\n    local temp_list_index_26=()\n    local temp_list_index_27=()\n\
    \    local temp_list_index_28=()\n    local temp_list_index_29=()\n    local temp_list_index_30=()\n\
    \    local temp_list_index_31=()\n    local temp_list_index_32=()\n    local temp_list_index_33=()\n\
    \    local temp_list_index_34=()\n    local temp_list\n}\n\ncandidate() {\n  \
    \  strange_sort_list \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"\
    1 2 3 4\") = \"1 4 2 3\" ]]\n    [[ $(candidate \"5 6 7 8 9\") = \"5 9 6 8 7\"\
    \ ]]\n    [[ $(candidate \"1 2 3 4 5\") = \"1 5 2 4 3\" ]]\n    [[ $(candidate\
    \ \"5 6 7 8 9 1\") = \"1 9 5 8 6 7\" ]]\n    [[ $(candidate \"5 5 5 5\") = \"\
    5 5 5 5\" ]]\n    [[ $(candidate \"\") = \"\" ]]\n    [[ $(candidate \"1 2 3 4\
    \ 5 6 7 8\") = \"1 8 2 7 3 6 4 5\" ]]\n    [[ $(candidate \"0 2 2 2 5 5 -5 -5\"\
    ) = \"-5 5 -5 5 0 2 2 2\" ]]\n    [[ $(candidate \"111111\") = \"111111\" ]]\n\
    }\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660003084
- exit_code: 2
  program: "#!/bin/bash\n# Given list of integers, return list in strange order.\n\
    # Strange sorting, is when you start with the minimum value,\n# then maximum of\
    \ the remaining integers, then minimum and so on.\n# Examples:\n#\n# $1 is a space-separated\
    \ list\nstrange_sort_list() {\n    local -a list=($1)\n    local -a sorted_list=()\n\
    \    local -a remaining_list=()\n    local min=${list[0]}\n    local max=${list[0]}\n\
    \    local min_index=0\n    local max_index=0\n    local i=0\n    local j=0\n\
    \    local k=0\n    local len=${#list[@]}\n    local len_remaining=0\n    local\
    \ len_sorted=0\n    local is_even=0\n    local is_odd=0\n    local is_even_remaining=0\n\
    \    local is_odd_remaining=0\n    local is_even_sorted=0\n    local is_odd_sorted=0\n\
    \n    for ((i=0; i<len; i++)); do\n        if [[ ${list[i]} -lt $min ]]; then\n\
    \            min=${list[i]}\n            min_index=$i\n        fi\n        if\
    \ [[ ${list[i]} -gt $max ]]; then\n            max=${list[i]}\n            max_index=$i\n\
    \        fi\n    done\n\n    sorted_list[0]=$min\n    sorted_list[1]=$max\n\n\
    \    for ((i=0; i<len; i++)); do\n        if [[ $i -ne $min_index ]] && [[ $i\
    \ -ne $max_index ]]; then\n            remaining_list[j]=${list[i]}\n        \
    \    j=$((j+1))\n        fi\n    done\n\n    len_remaining=${#remaining_list[@]}\n\
    \    len_sorted=${#sorted_list[@]}\n\n    while [[ $len_remaining -gt 0 ]]; do\n\
    \        min=${remaining_list[0]}\n        max=${remaining_list[0]}\n        min_index=0\n\
    \        max_index=0\n\n        for ((i=0; i<len_remaining; i++)); do\n      \
    \      if [[ ${remaining_list[i]} -lt $min ]]; then\n                min=${remaining_list[i]}\n\
    \                min_index=$i\n            fi\n            if [[ ${remaining_list[i]}\
    \ -gt\n}\n\ncandidate() {\n    strange_sort_list \"$@\"\n}\n\nset -e\nrun_test()\
    \ {\n    [[ $(candidate \"1 2 3 4\") = \"1 4 2 3\" ]]\n    [[ $(candidate \"5\
    \ 6 7 8 9\") = \"5 9 6 8 7\" ]]\n    [[ $(candidate \"1 2 3 4 5\") = \"1 5 2 4\
    \ 3\" ]]\n    [[ $(candidate \"5 6 7 8 9 1\") = \"1 9 5 8 6 7\" ]]\n    [[ $(candidate\
    \ \"5 5 5 5\") = \"5 5 5 5\" ]]\n    [[ $(candidate \"\") = \"\" ]]\n    [[ $(candidate\
    \ \"1 2 3 4 5 6 7 8\") = \"1 8 2 7 3 6 4 5\" ]]\n    [[ $(candidate \"0 2 2 2\
    \ 5 5 -5 -5\") = \"-5 5 -5 5 0 2 2 2\" ]]\n    [[ $(candidate \"111111\") = \"\
    111111\" ]]\n}\n\nrun_test"
  status: SyntaxError
  stderr: '/tmp/tmpamz84ixi.sh: line 64: unexpected argument `newline'' to conditional
    binary operator

    /tmp/tmpamz84ixi.sh: line 64: syntax error near `-gt''

    /tmp/tmpamz84ixi.sh: line 64: `            if [[ ${remaining_list[i]} -gt''

    '
  stdout: ''
  timestamp: 1660003084
- exit_code: 1
  program: "#!/bin/bash\n# Given list of integers, return list in strange order.\n\
    # Strange sorting, is when you start with the minimum value,\n# then maximum of\
    \ the remaining integers, then minimum and so on.\n# Examples:\n#\n# $1 is a space-separated\
    \ list\nstrange_sort_list() {\n  local list=$1\n  local min=$(echo \"$list\" |\
    \ tr ' ' '\\n' | sort -n | head -n 1)\n  local max=$(echo \"$list\" | tr ' ' '\\\
    n' | sort -n | tail -n 1)\n  local sorted_list=$(echo \"$list\" | tr ' ' '\\n'\
    \ | sort -n)\n  local result=\"\"\n  local i=0\n  local j=0\n  local k=0\n  local\
    \ l=0\n  local m=0\n  local n=0\n  local o=0\n  local p=0\n  local q=0\n  local\
    \ r=0\n  local s=0\n  local t=0\n  local u=0\n  local v=0\n  local w=0\n  local\
    \ x=0\n  local y=0\n  local z=0\n  local aa=0\n  local bb=0\n  local cc=0\n  local\
    \ dd=0\n  local ee=0\n  local ff=0\n  local gg=0\n  local hh=0\n  local ii=0\n\
    \  local jj=0\n  local kk=0\n  local ll=0\n  local mm=0\n  local nn=0\n  local\
    \ oo=0\n  local pp=0\n  local qq=0\n  local rr=0\n  local ss=0\n  local tt=0\n\
    \  local uu=0\n  local vv=0\n  local ww=0\n  local xx=0\n  local yy=0\n  local\
    \ zz=0\n  local aaa=0\n  local bbb=0\n  local ccc=0\n  local ddd=0\n  local eee=0\n\
    \  local fff=0\n  local ggg=0\n  local hhh=0\n  local iii=0\n  local jjj=0\n \
    \ local kkk=0\n  local lll=0\n  local mmm=0\n  local nnn=0\n  local ooo=0\n  local\
    \ ppp=0\n  local qqq=0\n  local rrr=0\n  local sss=0\n  local ttt=0\n}\n\ncandidate()\
    \ {\n    strange_sort_list \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate\
    \ \"1 2 3 4\") = \"1 4 2 3\" ]]\n    [[ $(candidate \"5 6 7 8 9\") = \"5 9 6 8\
    \ 7\" ]]\n    [[ $(candidate \"1 2 3 4 5\") = \"1 5 2 4 3\" ]]\n    [[ $(candidate\
    \ \"5 6 7 8 9 1\") = \"1 9 5 8 6 7\" ]]\n    [[ $(candidate \"5 5 5 5\") = \"\
    5 5 5 5\" ]]\n    [[ $(candidate \"\") = \"\" ]]\n    [[ $(candidate \"1 2 3 4\
    \ 5 6 7 8\") = \"1 8 2 7 3 6 4 5\" ]]\n    [[ $(candidate \"0 2 2 2 5 5 -5 -5\"\
    ) = \"-5 5 -5 5 0 2 2 2\" ]]\n    [[ $(candidate \"111111\") = \"111111\" ]]\n\
    }\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660003084

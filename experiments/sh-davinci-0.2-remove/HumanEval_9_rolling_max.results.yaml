language: sh
name: HumanEval_9_rolling_max
results:
- exit_code: 1
  program: "#!/bin/bash\n# From a given list of integers, generate a list of rolling\
    \ maximum element found until given moment\n# in the sequence.\n#\n# $1 is a space-separated\
    \ list\nrolling_max() {\n    local max=0\n    for i in $1; do\n        if [[ $i\
    \ -gt $max ]]; then\n            max=$i\n        fi\n        echo $max\n    done\n\
    }\n\ncandidate() {\n    rolling_max \"$@\"\n}\n\nset -e\nrun_test() {\n    [[\
    \ $(candidate \"\") = \"\" ]]\n    [[ $(candidate \"1 2 3 4\") = \"1 2 3 4\" ]]\n\
    \    [[ $(candidate \"4 3 2 1\") = \"4 4 4 4\" ]]\n    [[ $(candidate \"3 2 3\
    \ 100 3\") = \"3 3 3 100 100\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660002184
- exit_code: 1
  program: "#!/bin/bash\n# From a given list of integers, generate a list of rolling\
    \ maximum element found until given moment\n# in the sequence.\n#\n# $1 is a space-separated\
    \ list\nrolling_max() {\n    local -a list=($1)\n    local max=0\n    for i in\
    \ ${list[@]}; do\n        if (( i > max )); then\n            max=$i\n       \
    \ fi\n        echo $max\n    done\n}\n\ncandidate() {\n    rolling_max \"$@\"\n\
    }\n\nset -e\nrun_test() {\n    [[ $(candidate \"\") = \"\" ]]\n    [[ $(candidate\
    \ \"1 2 3 4\") = \"1 2 3 4\" ]]\n    [[ $(candidate \"4 3 2 1\") = \"4 4 4 4\"\
    \ ]]\n    [[ $(candidate \"3 2 3 100 3\") = \"3 3 3 100 100\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660002184
- exit_code: 1
  program: "#!/bin/bash\n# From a given list of integers, generate a list of rolling\
    \ maximum element found until given moment\n# in the sequence.\n#\n# $1 is a space-separated\
    \ list\nrolling_max() {\n    local max=0\n    for i in $1; do\n        if [ $i\
    \ -gt $max ]; then\n            max=$i\n        fi\n        echo $max\n    done\n\
    }\n\ncandidate() {\n    rolling_max \"$@\"\n}\n\nset -e\nrun_test() {\n    [[\
    \ $(candidate \"\") = \"\" ]]\n    [[ $(candidate \"1 2 3 4\") = \"1 2 3 4\" ]]\n\
    \    [[ $(candidate \"4 3 2 1\") = \"4 4 4 4\" ]]\n    [[ $(candidate \"3 2 3\
    \ 100 3\") = \"3 3 3 100 100\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660002184
- exit_code: 1
  program: "#!/bin/bash\n# From a given list of integers, generate a list of rolling\
    \ maximum element found until given moment\n# in the sequence.\n#\n# $1 is a space-separated\
    \ list\nrolling_max() {\n  local max=0\n  for i in $1; do\n    if [ $i -gt $max\
    \ ]; then\n      max=$i\n    fi\n    echo $max\n  done\n}\n\ncandidate() {\n \
    \   rolling_max \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"\") =\
    \ \"\" ]]\n    [[ $(candidate \"1 2 3 4\") = \"1 2 3 4\" ]]\n    [[ $(candidate\
    \ \"4 3 2 1\") = \"4 4 4 4\" ]]\n    [[ $(candidate \"3 2 3 100 3\") = \"3 3 3\
    \ 100 100\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660002184
- exit_code: 1
  program: "#!/bin/bash\n# From a given list of integers, generate a list of rolling\
    \ maximum element found until given moment\n# in the sequence.\n#\n# $1 is a space-separated\
    \ list\nrolling_max() {\n  local -a arr=(\"$@\")\n  local max=${arr[0]}\n  local\
    \ -a res=()\n  for i in \"${arr[@]}\"; do\n    if (( i > max )); then\n      max=$i\n\
    \    fi\n    res+=(\"$max\")\n  done\n  echo \"${res[@]}\"\n}\n\ncandidate() {\n\
    \    rolling_max \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"\") =\
    \ \"\" ]]\n    [[ $(candidate \"1 2 3 4\") = \"1 2 3 4\" ]]\n    [[ $(candidate\
    \ \"4 3 2 1\") = \"4 4 4 4\" ]]\n    [[ $(candidate \"3 2 3 100 3\") = \"3 3 3\
    \ 100 100\" ]]\n}\n\nrun_test"
  status: SyntaxError
  stderr: '/tmp/tmpm7jb0gqe.sh: line 11: ((: 1 2 3 4: syntax error in expression (error
    token is "2 3 4")

    /tmp/tmpm7jb0gqe.sh: line 11: ((: 4 3 2 1: syntax error in expression (error token
    is "3 2 1")

    '
  stdout: ''
  timestamp: 1660002184
- exit_code: 1
  program: "#!/bin/bash\n# From a given list of integers, generate a list of rolling\
    \ maximum element found until given moment\n# in the sequence.\n#\n# $1 is a space-separated\
    \ list\nrolling_max() {\n    local -a arr=($1)\n    local max=${arr[0]}\n    echo\
    \ $max\n    for ((i=1; i<${#arr[@]}; i++)); do\n        if [[ ${arr[$i]} -gt $max\
    \ ]]; then\n            max=${arr[$i]}\n        fi\n        echo $max\n    done\n\
    }\n\ncandidate() {\n    rolling_max \"$@\"\n}\n\nset -e\nrun_test() {\n    [[\
    \ $(candidate \"\") = \"\" ]]\n    [[ $(candidate \"1 2 3 4\") = \"1 2 3 4\" ]]\n\
    \    [[ $(candidate \"4 3 2 1\") = \"4 4 4 4\" ]]\n    [[ $(candidate \"3 2 3\
    \ 100 3\") = \"3 3 3 100 100\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660002184
- exit_code: 1
  program: "#!/bin/bash\n# From a given list of integers, generate a list of rolling\
    \ maximum element found until given moment\n# in the sequence.\n#\n# $1 is a space-separated\
    \ list\nrolling_max() {\n    local -a list=($1)\n    local max=${list[0]}\n  \
    \  echo $max\n    for i in ${list[@]:1}; do\n        if (( i > max )); then\n\
    \            max=$i\n        fi\n        echo $max\n    done\n}\n\ncandidate()\
    \ {\n    rolling_max \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"\"\
    ) = \"\" ]]\n    [[ $(candidate \"1 2 3 4\") = \"1 2 3 4\" ]]\n    [[ $(candidate\
    \ \"4 3 2 1\") = \"4 4 4 4\" ]]\n    [[ $(candidate \"3 2 3 100 3\") = \"3 3 3\
    \ 100 100\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660002184
- exit_code: 1
  program: "#!/bin/bash\n# From a given list of integers, generate a list of rolling\
    \ maximum element found until given moment\n# in the sequence.\n#\n# $1 is a space-separated\
    \ list\nrolling_max() {\n  local -a arr\n  IFS=' ' read -r -a arr <<< \"$1\"\n\
    \  local max=${arr[0]}\n  echo \"$max\"\n  for i in \"${arr[@]:1}\"; do\n    if\
    \ (( i > max )); then\n      max=$i\n    fi\n    echo \"$max\"\n  done\n}\n\n\
    candidate() {\n    rolling_max \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate\
    \ \"\") = \"\" ]]\n    [[ $(candidate \"1 2 3 4\") = \"1 2 3 4\" ]]\n    [[ $(candidate\
    \ \"4 3 2 1\") = \"4 4 4 4\" ]]\n    [[ $(candidate \"3 2 3 100 3\") = \"3 3 3\
    \ 100 100\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660002184
- exit_code: 1
  program: "#!/bin/bash\n# From a given list of integers, generate a list of rolling\
    \ maximum element found until given moment\n# in the sequence.\n#\n# $1 is a space-separated\
    \ list\nrolling_max() {\n    local -a list=($1)\n    local max=${list[0]}\n  \
    \  echo $max\n    for i in \"${list[@]:1}\"; do\n        if (( i > max )); then\n\
    \            max=$i\n        fi\n        echo $max\n    done\n}\n\ncandidate()\
    \ {\n    rolling_max \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"\"\
    ) = \"\" ]]\n    [[ $(candidate \"1 2 3 4\") = \"1 2 3 4\" ]]\n    [[ $(candidate\
    \ \"4 3 2 1\") = \"4 4 4 4\" ]]\n    [[ $(candidate \"3 2 3 100 3\") = \"3 3 3\
    \ 100 100\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660002184
- exit_code: 0
  program: "#!/bin/bash\n# From a given list of integers, generate a list of rolling\
    \ maximum element found until given moment\n# in the sequence.\n#\n# $1 is a space-separated\
    \ list\nrolling_max() {\n    local -a arr=($1)\n    local max=${arr[0]}\n    local\
    \ -a res=()\n    res+=($max)\n    for i in ${arr[@]:1}; do\n        if [[ $i -gt\
    \ $max ]]; then\n            max=$i\n        fi\n        res+=($max)\n    done\n\
    \    echo ${res[@]}\n}\n\ncandidate() {\n    rolling_max \"$@\"\n}\n\nset -e\n\
    run_test() {\n    [[ $(candidate \"\") = \"\" ]]\n    [[ $(candidate \"1 2 3 4\"\
    ) = \"1 2 3 4\" ]]\n    [[ $(candidate \"4 3 2 1\") = \"4 4 4 4\" ]]\n    [[ $(candidate\
    \ \"3 2 3 100 3\") = \"3 3 3 100 100\" ]]\n}\n\nrun_test"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660002184
- exit_code: 1
  program: "#!/bin/bash\n# From a given list of integers, generate a list of rolling\
    \ maximum element found until given moment\n# in the sequence.\n#\n# $1 is a space-separated\
    \ list\nrolling_max() {\n  local -a list=($1)\n  local max=${list[0]}\n  echo\
    \ $max\n  for i in ${list[@]:1}; do\n    if (( i > max )); then\n      max=$i\n\
    \    fi\n    echo $max\n  done\n}\n\ncandidate() {\n    rolling_max \"$@\"\n}\n\
    \nset -e\nrun_test() {\n    [[ $(candidate \"\") = \"\" ]]\n    [[ $(candidate\
    \ \"1 2 3 4\") = \"1 2 3 4\" ]]\n    [[ $(candidate \"4 3 2 1\") = \"4 4 4 4\"\
    \ ]]\n    [[ $(candidate \"3 2 3 100 3\") = \"3 3 3 100 100\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660002184
- exit_code: 1
  program: "#!/bin/bash\n# From a given list of integers, generate a list of rolling\
    \ maximum element found until given moment\n# in the sequence.\n#\n# $1 is a space-separated\
    \ list\nrolling_max() {\n  local -a arr\n  local i\n  local max\n  arr=($1)\n\
    \  max=${arr[0]}\n  echo $max\n  for ((i=1; i<${#arr[@]}; i++)); do\n    if [[\
    \ ${arr[$i]} -gt $max ]]; then\n      max=${arr[$i]}\n    fi\n    echo $max\n\
    \  done\n}\n\ncandidate() {\n    rolling_max \"$@\"\n}\n\nset -e\nrun_test() {\n\
    \    [[ $(candidate \"\") = \"\" ]]\n    [[ $(candidate \"1 2 3 4\") = \"1 2 3\
    \ 4\" ]]\n    [[ $(candidate \"4 3 2 1\") = \"4 4 4 4\" ]]\n    [[ $(candidate\
    \ \"3 2 3 100 3\") = \"3 3 3 100 100\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660002184
- exit_code: 1
  program: "#!/bin/bash\n# From a given list of integers, generate a list of rolling\
    \ maximum element found until given moment\n# in the sequence.\n#\n# $1 is a space-separated\
    \ list\nrolling_max() {\n    local max=0\n    for i in $1; do\n        if [[ $i\
    \ -gt $max ]]; then\n            max=$i\n        fi\n        echo $max\n    done\n\
    }\n\ncandidate() {\n    rolling_max \"$@\"\n}\n\nset -e\nrun_test() {\n    [[\
    \ $(candidate \"\") = \"\" ]]\n    [[ $(candidate \"1 2 3 4\") = \"1 2 3 4\" ]]\n\
    \    [[ $(candidate \"4 3 2 1\") = \"4 4 4 4\" ]]\n    [[ $(candidate \"3 2 3\
    \ 100 3\") = \"3 3 3 100 100\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660002184
- exit_code: 1
  program: "#!/bin/bash\n# From a given list of integers, generate a list of rolling\
    \ maximum element found until given moment\n# in the sequence.\n#\n# $1 is a space-separated\
    \ list\nrolling_max() {\n    local -a list=($1)\n    local max=${list[0]}\n  \
    \  echo $max\n    for i in ${list[@]:1}; do\n        if [[ $i -gt $max ]]; then\n\
    \            max=$i\n        fi\n        echo $max\n    done\n}\n\ncandidate()\
    \ {\n    rolling_max \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"\"\
    ) = \"\" ]]\n    [[ $(candidate \"1 2 3 4\") = \"1 2 3 4\" ]]\n    [[ $(candidate\
    \ \"4 3 2 1\") = \"4 4 4 4\" ]]\n    [[ $(candidate \"3 2 3 100 3\") = \"3 3 3\
    \ 100 100\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660002184
- exit_code: 0
  program: "#!/bin/bash\n# From a given list of integers, generate a list of rolling\
    \ maximum element found until given moment\n# in the sequence.\n#\n# $1 is a space-separated\
    \ list\nrolling_max() {\n    local -a list=($1)\n    local -a result\n    local\
    \ max=${list[0]}\n    result+=($max)\n    for i in \"${list[@]:1}\"; do\n    \
    \    if [[ $i -gt $max ]]; then\n            max=$i\n        fi\n        result+=($max)\n\
    \    done\n    echo \"${result[@]}\"\n}\n\ncandidate() {\n    rolling_max \"$@\"\
    \n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"\") = \"\" ]]\n    [[ $(candidate\
    \ \"1 2 3 4\") = \"1 2 3 4\" ]]\n    [[ $(candidate \"4 3 2 1\") = \"4 4 4 4\"\
    \ ]]\n    [[ $(candidate \"3 2 3 100 3\") = \"3 3 3 100 100\" ]]\n}\n\nrun_test"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660002184
- exit_code: 1
  program: "#!/bin/bash\n# From a given list of integers, generate a list of rolling\
    \ maximum element found until given moment\n# in the sequence.\n#\n# $1 is a space-separated\
    \ list\nrolling_max() {\n  local -a arr=($1)\n  local max=${arr[0]}\n  echo $max\n\
    \  for i in ${arr[@]:1}; do\n    if [[ $i -gt $max ]]; then\n      max=$i\n  \
    \  fi\n    echo $max\n  done\n}\n\ncandidate() {\n    rolling_max \"$@\"\n}\n\n\
    set -e\nrun_test() {\n    [[ $(candidate \"\") = \"\" ]]\n    [[ $(candidate \"\
    1 2 3 4\") = \"1 2 3 4\" ]]\n    [[ $(candidate \"4 3 2 1\") = \"4 4 4 4\" ]]\n\
    \    [[ $(candidate \"3 2 3 100 3\") = \"3 3 3 100 100\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660002184
- exit_code: 1
  program: "#!/bin/bash\n# From a given list of integers, generate a list of rolling\
    \ maximum element found until given moment\n# in the sequence.\n#\n# $1 is a space-separated\
    \ list\nrolling_max() {\n    local max=0\n    for i in $1; do\n        if [[ $i\
    \ -gt $max ]]; then\n            max=$i\n        fi\n        echo $max\n    done\n\
    }\n\ncandidate() {\n    rolling_max \"$@\"\n}\n\nset -e\nrun_test() {\n    [[\
    \ $(candidate \"\") = \"\" ]]\n    [[ $(candidate \"1 2 3 4\") = \"1 2 3 4\" ]]\n\
    \    [[ $(candidate \"4 3 2 1\") = \"4 4 4 4\" ]]\n    [[ $(candidate \"3 2 3\
    \ 100 3\") = \"3 3 3 100 100\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660002184
- exit_code: 1
  program: "#!/bin/bash\n# From a given list of integers, generate a list of rolling\
    \ maximum element found until given moment\n# in the sequence.\n#\n# $1 is a space-separated\
    \ list\nrolling_max() {\n    local -a arr\n    local -i i\n    local -i max\n\
    \    IFS=' ' read -r -a arr <<< \"$1\"\n    max=${arr[0]}\n    for ((i=0; i<${#arr[@]};\
    \ i++)); do\n        if (( arr[i] > max )); then\n            max=${arr[i]}\n\
    \        fi\n        echo -n \"$max \"\n    done\n    echo\n}\n\ncandidate() {\n\
    \    rolling_max \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"\") =\
    \ \"\" ]]\n    [[ $(candidate \"1 2 3 4\") = \"1 2 3 4\" ]]\n    [[ $(candidate\
    \ \"4 3 2 1\") = \"4 4 4 4\" ]]\n    [[ $(candidate \"3 2 3 100 3\") = \"3 3 3\
    \ 100 100\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660002184
- exit_code: 1
  program: "#!/bin/bash\n# From a given list of integers, generate a list of rolling\
    \ maximum element found until given moment\n# in the sequence.\n#\n# $1 is a space-separated\
    \ list\nrolling_max() {\n  local max=0\n  for i in $1; do\n    if [[ $i -gt $max\
    \ ]]; then\n      max=$i\n    fi\n    echo $max\n  done\n}\n\ncandidate() {\n\
    \    rolling_max \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"\") =\
    \ \"\" ]]\n    [[ $(candidate \"1 2 3 4\") = \"1 2 3 4\" ]]\n    [[ $(candidate\
    \ \"4 3 2 1\") = \"4 4 4 4\" ]]\n    [[ $(candidate \"3 2 3 100 3\") = \"3 3 3\
    \ 100 100\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660002184
- exit_code: 1
  program: "#!/bin/bash\n# From a given list of integers, generate a list of rolling\
    \ maximum element found until given moment\n# in the sequence.\n#\n# $1 is a space-separated\
    \ list\nrolling_max() {\n    local -a arr=($1)\n    local max=${arr[0]}\n    echo\
    \ $max\n    for i in ${arr[@]:1}; do\n        if [[ $i -gt $max ]]; then\n   \
    \         max=$i\n        fi\n        echo $max\n    done\n}\n\ncandidate() {\n\
    \    rolling_max \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"\") =\
    \ \"\" ]]\n    [[ $(candidate \"1 2 3 4\") = \"1 2 3 4\" ]]\n    [[ $(candidate\
    \ \"4 3 2 1\") = \"4 4 4 4\" ]]\n    [[ $(candidate \"3 2 3 100 3\") = \"3 3 3\
    \ 100 100\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660002184
- exit_code: 1
  program: "#!/bin/bash\n# From a given list of integers, generate a list of rolling\
    \ maximum element found until given moment\n# in the sequence.\n#\n# $1 is a space-separated\
    \ list\nrolling_max() {\n    local max=0\n    for n in $1; do\n        if [[ $n\
    \ -gt $max ]]; then\n            max=$n\n        fi\n        echo $max\n    done\n\
    }\n\ncandidate() {\n    rolling_max \"$@\"\n}\n\nset -e\nrun_test() {\n    [[\
    \ $(candidate \"\") = \"\" ]]\n    [[ $(candidate \"1 2 3 4\") = \"1 2 3 4\" ]]\n\
    \    [[ $(candidate \"4 3 2 1\") = \"4 4 4 4\" ]]\n    [[ $(candidate \"3 2 3\
    \ 100 3\") = \"3 3 3 100 100\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660002184
- exit_code: 0
  program: "#!/bin/bash\n# From a given list of integers, generate a list of rolling\
    \ maximum element found until given moment\n# in the sequence.\n#\n# $1 is a space-separated\
    \ list\nrolling_max() {\n    local -a arr=($1)\n    local max=${arr[0]}\n    local\
    \ -a res=()\n    res+=(\"$max\")\n    for i in \"${arr[@]:1}\"; do\n        if\
    \ (( i > max )); then\n            max=$i\n        fi\n        res+=(\"$max\"\
    )\n    done\n    echo \"${res[@]}\"\n}\n\ncandidate() {\n    rolling_max \"$@\"\
    \n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"\") = \"\" ]]\n    [[ $(candidate\
    \ \"1 2 3 4\") = \"1 2 3 4\" ]]\n    [[ $(candidate \"4 3 2 1\") = \"4 4 4 4\"\
    \ ]]\n    [[ $(candidate \"3 2 3 100 3\") = \"3 3 3 100 100\" ]]\n}\n\nrun_test"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660002184
- exit_code: 1
  program: "#!/bin/bash\n# From a given list of integers, generate a list of rolling\
    \ maximum element found until given moment\n# in the sequence.\n#\n# $1 is a space-separated\
    \ list\nrolling_max() {\n    local -a arr=($1)\n    local max=${arr[0]}\n    echo\
    \ $max\n    for i in ${arr[@]:1}; do\n        if [[ $i -gt $max ]]; then\n   \
    \         max=$i\n        fi\n        echo $max\n    done\n}\n\ncandidate() {\n\
    \    rolling_max \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"\") =\
    \ \"\" ]]\n    [[ $(candidate \"1 2 3 4\") = \"1 2 3 4\" ]]\n    [[ $(candidate\
    \ \"4 3 2 1\") = \"4 4 4 4\" ]]\n    [[ $(candidate \"3 2 3 100 3\") = \"3 3 3\
    \ 100 100\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660002184
- exit_code: 1
  program: "#!/bin/bash\n# From a given list of integers, generate a list of rolling\
    \ maximum element found until given moment\n# in the sequence.\n#\n# $1 is a space-separated\
    \ list\nrolling_max() {\n    local -a arr=($1)\n    local max=${arr[0]}\n    echo\
    \ $max\n    for i in ${arr[@]:1}; do\n        if (( i > max )); then\n       \
    \     max=$i\n        fi\n        echo $max\n    done\n}\n\ncandidate() {\n  \
    \  rolling_max \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"\") = \"\
    \" ]]\n    [[ $(candidate \"1 2 3 4\") = \"1 2 3 4\" ]]\n    [[ $(candidate \"\
    4 3 2 1\") = \"4 4 4 4\" ]]\n    [[ $(candidate \"3 2 3 100 3\") = \"3 3 3 100\
    \ 100\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660002184
- exit_code: 1
  program: "#!/bin/bash\n# From a given list of integers, generate a list of rolling\
    \ maximum element found until given moment\n# in the sequence.\n#\n# $1 is a space-separated\
    \ list\nrolling_max() {\n    local -a list\n    local -i i\n    local -i max\n\
    \n    list=($1)\n    max=${list[0]}\n    echo $max\n    for ((i=1; i<${#list[@]};\
    \ i++)); do\n        if ((list[i] > max)); then\n            max=${list[i]}\n\
    \        fi\n        echo $max\n    done\n}\n\ncandidate() {\n    rolling_max\
    \ \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"\") = \"\" ]]\n    [[\
    \ $(candidate \"1 2 3 4\") = \"1 2 3 4\" ]]\n    [[ $(candidate \"4 3 2 1\") =\
    \ \"4 4 4 4\" ]]\n    [[ $(candidate \"3 2 3 100 3\") = \"3 3 3 100 100\" ]]\n\
    }\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660002184
- exit_code: 1
  program: "#!/bin/bash\n# From a given list of integers, generate a list of rolling\
    \ maximum element found until given moment\n# in the sequence.\n#\n# $1 is a space-separated\
    \ list\nrolling_max() {\n    local max=0\n    for i in $1; do\n        if [ $i\
    \ -gt $max ]; then\n            max=$i\n        fi\n        echo $max\n    done\n\
    }\n\ncandidate() {\n    rolling_max \"$@\"\n}\n\nset -e\nrun_test() {\n    [[\
    \ $(candidate \"\") = \"\" ]]\n    [[ $(candidate \"1 2 3 4\") = \"1 2 3 4\" ]]\n\
    \    [[ $(candidate \"4 3 2 1\") = \"4 4 4 4\" ]]\n    [[ $(candidate \"3 2 3\
    \ 100 3\") = \"3 3 3 100 100\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660002184
- exit_code: 1
  program: "#!/bin/bash\n# From a given list of integers, generate a list of rolling\
    \ maximum element found until given moment\n# in the sequence.\n#\n# $1 is a space-separated\
    \ list\nrolling_max() {\n    local -a arr=($1)\n    local max=${arr[0]}\n    echo\
    \ $max\n    for i in ${arr[@]:1}; do\n        if [[ $i -gt $max ]]; then\n   \
    \         max=$i\n        fi\n        echo $max\n    done\n}\n\ncandidate() {\n\
    \    rolling_max \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"\") =\
    \ \"\" ]]\n    [[ $(candidate \"1 2 3 4\") = \"1 2 3 4\" ]]\n    [[ $(candidate\
    \ \"4 3 2 1\") = \"4 4 4 4\" ]]\n    [[ $(candidate \"3 2 3 100 3\") = \"3 3 3\
    \ 100 100\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660002184
- exit_code: 0
  program: "#!/bin/bash\n# From a given list of integers, generate a list of rolling\
    \ maximum element found until given moment\n# in the sequence.\n#\n# $1 is a space-separated\
    \ list\nrolling_max() {\n    local -a arr=($1)\n    local max=${arr[0]}\n    local\
    \ -a res=()\n    for (( i=0; i<${#arr[@]}; i++ )); do\n        if (( ${arr[$i]}\
    \ > $max )); then\n            max=${arr[$i]}\n        fi\n        res[$i]=$max\n\
    \    done\n    echo ${res[@]}\n}\n\ncandidate() {\n    rolling_max \"$@\"\n}\n\
    \nset -e\nrun_test() {\n    [[ $(candidate \"\") = \"\" ]]\n    [[ $(candidate\
    \ \"1 2 3 4\") = \"1 2 3 4\" ]]\n    [[ $(candidate \"4 3 2 1\") = \"4 4 4 4\"\
    \ ]]\n    [[ $(candidate \"3 2 3 100 3\") = \"3 3 3 100 100\" ]]\n}\n\nrun_test"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660002184
- exit_code: 1
  program: "#!/bin/bash\n# From a given list of integers, generate a list of rolling\
    \ maximum element found until given moment\n# in the sequence.\n#\n# $1 is a space-separated\
    \ list\nrolling_max() {\n    local -a arr\n    local i\n    local max\n    arr=($1)\n\
    \    max=${arr[0]}\n    for ((i=0; i<${#arr[@]}; i++)); do\n        if [[ ${arr[$i]}\
    \ -gt $max ]]; then\n            max=${arr[$i]}\n        fi\n        echo $max\n\
    \    done\n}\n\ncandidate() {\n    rolling_max \"$@\"\n}\n\nset -e\nrun_test()\
    \ {\n    [[ $(candidate \"\") = \"\" ]]\n    [[ $(candidate \"1 2 3 4\") = \"\
    1 2 3 4\" ]]\n    [[ $(candidate \"4 3 2 1\") = \"4 4 4 4\" ]]\n    [[ $(candidate\
    \ \"3 2 3 100 3\") = \"3 3 3 100 100\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660002184
- exit_code: 1
  program: "#!/bin/bash\n# From a given list of integers, generate a list of rolling\
    \ maximum element found until given moment\n# in the sequence.\n#\n# $1 is a space-separated\
    \ list\nrolling_max() {\n    local -a arr=($1)\n    local max=${arr[0]}\n    local\
    \ i\n    echo $max\n    for ((i=1; i<${#arr[@]}; i++)); do\n        if (( ${arr[$i]}\
    \ > $max )); then\n            max=${arr[$i]}\n        fi\n        echo $max\n\
    \    done\n}\n\ncandidate() {\n    rolling_max \"$@\"\n}\n\nset -e\nrun_test()\
    \ {\n    [[ $(candidate \"\") = \"\" ]]\n    [[ $(candidate \"1 2 3 4\") = \"\
    1 2 3 4\" ]]\n    [[ $(candidate \"4 3 2 1\") = \"4 4 4 4\" ]]\n    [[ $(candidate\
    \ \"3 2 3 100 3\") = \"3 3 3 100 100\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660002184
- exit_code: 1
  program: "#!/bin/bash\n# From a given list of integers, generate a list of rolling\
    \ maximum element found until given moment\n# in the sequence.\n#\n# $1 is a space-separated\
    \ list\nrolling_max() {\n  local max=0\n  for i in $1; do\n    if [[ $i -gt $max\
    \ ]]; then\n      max=$i\n    fi\n    echo $max\n  done\n}\n\ncandidate() {\n\
    \    rolling_max \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"\") =\
    \ \"\" ]]\n    [[ $(candidate \"1 2 3 4\") = \"1 2 3 4\" ]]\n    [[ $(candidate\
    \ \"4 3 2 1\") = \"4 4 4 4\" ]]\n    [[ $(candidate \"3 2 3 100 3\") = \"3 3 3\
    \ 100 100\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660002184
- exit_code: 1
  program: "#!/bin/bash\n# From a given list of integers, generate a list of rolling\
    \ maximum element found until given moment\n# in the sequence.\n#\n# $1 is a space-separated\
    \ list\nrolling_max() {\n    local -a list=($1)\n    local max=${list[0]}\n  \
    \  echo $max\n    for i in ${list[@]:1}; do\n        if (( $i > $max )); then\n\
    \            max=$i\n        fi\n        echo $max\n    done\n}\n\ncandidate()\
    \ {\n    rolling_max \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"\"\
    ) = \"\" ]]\n    [[ $(candidate \"1 2 3 4\") = \"1 2 3 4\" ]]\n    [[ $(candidate\
    \ \"4 3 2 1\") = \"4 4 4 4\" ]]\n    [[ $(candidate \"3 2 3 100 3\") = \"3 3 3\
    \ 100 100\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660002184
- exit_code: 1
  program: "#!/bin/bash\n# From a given list of integers, generate a list of rolling\
    \ maximum element found until given moment\n# in the sequence.\n#\n# $1 is a space-separated\
    \ list\nrolling_max() {\n  local -a arr=($1)\n  local max=${arr[0]}\n  echo $max\n\
    \  for i in \"${arr[@]:1}\"; do\n    if (( $i > $max )); then\n      max=$i\n\
    \    fi\n    echo $max\n  done\n}\n\ncandidate() {\n    rolling_max \"$@\"\n}\n\
    \nset -e\nrun_test() {\n    [[ $(candidate \"\") = \"\" ]]\n    [[ $(candidate\
    \ \"1 2 3 4\") = \"1 2 3 4\" ]]\n    [[ $(candidate \"4 3 2 1\") = \"4 4 4 4\"\
    \ ]]\n    [[ $(candidate \"3 2 3 100 3\") = \"3 3 3 100 100\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660002184
- exit_code: 1
  program: "#!/bin/bash\n# From a given list of integers, generate a list of rolling\
    \ maximum element found until given moment\n# in the sequence.\n#\n# $1 is a space-separated\
    \ list\nrolling_max() {\n    local max=0\n    for i in $1; do\n        if [ $i\
    \ -gt $max ]; then\n            max=$i\n        fi\n        echo $max\n    done\n\
    }\n\ncandidate() {\n    rolling_max \"$@\"\n}\n\nset -e\nrun_test() {\n    [[\
    \ $(candidate \"\") = \"\" ]]\n    [[ $(candidate \"1 2 3 4\") = \"1 2 3 4\" ]]\n\
    \    [[ $(candidate \"4 3 2 1\") = \"4 4 4 4\" ]]\n    [[ $(candidate \"3 2 3\
    \ 100 3\") = \"3 3 3 100 100\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660002184
- exit_code: 1
  program: "#!/bin/bash\n# From a given list of integers, generate a list of rolling\
    \ maximum element found until given moment\n# in the sequence.\n#\n# $1 is a space-separated\
    \ list\nrolling_max() {\n    local -a arr\n    local i\n    arr=($1)\n    for\
    \ ((i=0; i<${#arr[@]}; i++)); do\n        if ((i == 0)); then\n            echo\
    \ ${arr[i]}\n        else\n            echo $((arr[i] > arr[i-1] ? arr[i] : arr[i-1]))\n\
    \        fi\n    done\n}\n\ncandidate() {\n    rolling_max \"$@\"\n}\n\nset -e\n\
    run_test() {\n    [[ $(candidate \"\") = \"\" ]]\n    [[ $(candidate \"1 2 3 4\"\
    ) = \"1 2 3 4\" ]]\n    [[ $(candidate \"4 3 2 1\") = \"4 4 4 4\" ]]\n    [[ $(candidate\
    \ \"3 2 3 100 3\") = \"3 3 3 100 100\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660002184
- exit_code: 1
  program: "#!/bin/bash\n# From a given list of integers, generate a list of rolling\
    \ maximum element found until given moment\n# in the sequence.\n#\n# $1 is a space-separated\
    \ list\nrolling_max() {\n    local max=0\n    for i in $1; do\n        if [[ $i\
    \ -gt $max ]]; then\n            max=$i\n        fi\n        echo $max\n    done\n\
    }\n\ncandidate() {\n    rolling_max \"$@\"\n}\n\nset -e\nrun_test() {\n    [[\
    \ $(candidate \"\") = \"\" ]]\n    [[ $(candidate \"1 2 3 4\") = \"1 2 3 4\" ]]\n\
    \    [[ $(candidate \"4 3 2 1\") = \"4 4 4 4\" ]]\n    [[ $(candidate \"3 2 3\
    \ 100 3\") = \"3 3 3 100 100\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660002184
- exit_code: 1
  program: "#!/bin/bash\n# From a given list of integers, generate a list of rolling\
    \ maximum element found until given moment\n# in the sequence.\n#\n# $1 is a space-separated\
    \ list\nrolling_max() {\n    local -a arr=($1)\n    local max=${arr[0]}\n    echo\
    \ $max\n    for i in ${arr[@]:1}; do\n        if (( i > max )); then\n       \
    \     max=$i\n        fi\n        echo $max\n    done\n}\n\ncandidate() {\n  \
    \  rolling_max \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"\") = \"\
    \" ]]\n    [[ $(candidate \"1 2 3 4\") = \"1 2 3 4\" ]]\n    [[ $(candidate \"\
    4 3 2 1\") = \"4 4 4 4\" ]]\n    [[ $(candidate \"3 2 3 100 3\") = \"3 3 3 100\
    \ 100\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660002184
- exit_code: 0
  program: "#!/bin/bash\n# From a given list of integers, generate a list of rolling\
    \ maximum element found until given moment\n# in the sequence.\n#\n# $1 is a space-separated\
    \ list\nrolling_max() {\n  local -a list=($1)\n  local max=${list[0]}\n  local\
    \ -a result=($max)\n  for i in ${list[@]:1}; do\n    if (( i > max )); then\n\
    \      max=$i\n    fi\n    result+=($max)\n  done\n  echo ${result[@]}\n}\n\n\
    candidate() {\n    rolling_max \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate\
    \ \"\") = \"\" ]]\n    [[ $(candidate \"1 2 3 4\") = \"1 2 3 4\" ]]\n    [[ $(candidate\
    \ \"4 3 2 1\") = \"4 4 4 4\" ]]\n    [[ $(candidate \"3 2 3 100 3\") = \"3 3 3\
    \ 100 100\" ]]\n}\n\nrun_test"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660002184
- exit_code: 1
  program: "#!/bin/bash\n# From a given list of integers, generate a list of rolling\
    \ maximum element found until given moment\n# in the sequence.\n#\n# $1 is a space-separated\
    \ list\nrolling_max() {\n    local -a arr=($1)\n    local max=${arr[0]}\n    echo\
    \ $max\n    for i in \"${arr[@]:1}\"; do\n        if [[ $i -gt $max ]]; then\n\
    \            max=$i\n        fi\n        echo $max\n    done\n}\n\ncandidate()\
    \ {\n    rolling_max \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"\"\
    ) = \"\" ]]\n    [[ $(candidate \"1 2 3 4\") = \"1 2 3 4\" ]]\n    [[ $(candidate\
    \ \"4 3 2 1\") = \"4 4 4 4\" ]]\n    [[ $(candidate \"3 2 3 100 3\") = \"3 3 3\
    \ 100 100\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660002184
- exit_code: 0
  program: "#!/bin/bash\n# From a given list of integers, generate a list of rolling\
    \ maximum element found until given moment\n# in the sequence.\n#\n# $1 is a space-separated\
    \ list\nrolling_max() {\n    local -a list=($1)\n    local max=${list[0]}\n  \
    \  local -a result=()\n    for i in ${list[@]}; do\n        if [[ $i -gt $max\
    \ ]]; then\n            max=$i\n        fi\n        result+=($max)\n    done\n\
    \    echo ${result[@]}\n}\n\ncandidate() {\n    rolling_max \"$@\"\n}\n\nset -e\n\
    run_test() {\n    [[ $(candidate \"\") = \"\" ]]\n    [[ $(candidate \"1 2 3 4\"\
    ) = \"1 2 3 4\" ]]\n    [[ $(candidate \"4 3 2 1\") = \"4 4 4 4\" ]]\n    [[ $(candidate\
    \ \"3 2 3 100 3\") = \"3 3 3 100 100\" ]]\n}\n\nrun_test"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660002184
- exit_code: 1
  program: "#!/bin/bash\n# From a given list of integers, generate a list of rolling\
    \ maximum element found until given moment\n# in the sequence.\n#\n# $1 is a space-separated\
    \ list\nrolling_max() {\n    local -a arr\n    local i\n    local max\n\n    arr=($1)\n\
    \    max=${arr[0]}\n    echo $max\n    for ((i=1; i<${#arr[@]}; i++)); do\n  \
    \      if [[ ${arr[$i]} -gt $max ]]; then\n            max=${arr[$i]}\n      \
    \  fi\n        echo $max\n    done\n}\n\ncandidate() {\n    rolling_max \"$@\"\
    \n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"\") = \"\" ]]\n    [[ $(candidate\
    \ \"1 2 3 4\") = \"1 2 3 4\" ]]\n    [[ $(candidate \"4 3 2 1\") = \"4 4 4 4\"\
    \ ]]\n    [[ $(candidate \"3 2 3 100 3\") = \"3 3 3 100 100\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660002184
- exit_code: 1
  program: "#!/bin/bash\n# From a given list of integers, generate a list of rolling\
    \ maximum element found until given moment\n# in the sequence.\n#\n# $1 is a space-separated\
    \ list\nrolling_max() {\n    local -a arr\n    local -i i\n    local -i max\n\
    \    IFS=' ' read -r -a arr <<< \"$1\"\n    max=${arr[0]}\n    for ((i=0; i<${#arr[@]};\
    \ i++)); do\n        if ((arr[i] > max)); then\n            max=${arr[i]}\n  \
    \      fi\n        echo -n \"$max \"\n    done\n    echo\n}\n\ncandidate() {\n\
    \    rolling_max \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"\") =\
    \ \"\" ]]\n    [[ $(candidate \"1 2 3 4\") = \"1 2 3 4\" ]]\n    [[ $(candidate\
    \ \"4 3 2 1\") = \"4 4 4 4\" ]]\n    [[ $(candidate \"3 2 3 100 3\") = \"3 3 3\
    \ 100 100\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660002184
- exit_code: 0
  program: "#!/bin/bash\n# From a given list of integers, generate a list of rolling\
    \ maximum element found until given moment\n# in the sequence.\n#\n# $1 is a space-separated\
    \ list\nrolling_max() {\n    local -a arr=($1)\n    local max=${arr[0]}\n    local\
    \ -a res=()\n    for i in \"${arr[@]}\"; do\n        if [[ $i -gt $max ]]; then\n\
    \            max=$i\n        fi\n        res+=($max)\n    done\n    echo \"${res[@]}\"\
    \n}\n\ncandidate() {\n    rolling_max \"$@\"\n}\n\nset -e\nrun_test() {\n    [[\
    \ $(candidate \"\") = \"\" ]]\n    [[ $(candidate \"1 2 3 4\") = \"1 2 3 4\" ]]\n\
    \    [[ $(candidate \"4 3 2 1\") = \"4 4 4 4\" ]]\n    [[ $(candidate \"3 2 3\
    \ 100 3\") = \"3 3 3 100 100\" ]]\n}\n\nrun_test"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660002184
- exit_code: 0
  program: "#!/bin/bash\n# From a given list of integers, generate a list of rolling\
    \ maximum element found until given moment\n# in the sequence.\n#\n# $1 is a space-separated\
    \ list\nrolling_max() {\n    local -a numbers=($1)\n    local -a maxes=()\n  \
    \  local max=${numbers[0]}\n    maxes+=($max)\n    for ((i=1; i<${#numbers[@]};\
    \ i++)); do\n        if (( ${numbers[i]} > max )); then\n            max=${numbers[i]}\n\
    \        fi\n        maxes+=($max)\n    done\n    echo ${maxes[@]}\n}\n\ncandidate()\
    \ {\n    rolling_max \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"\"\
    ) = \"\" ]]\n    [[ $(candidate \"1 2 3 4\") = \"1 2 3 4\" ]]\n    [[ $(candidate\
    \ \"4 3 2 1\") = \"4 4 4 4\" ]]\n    [[ $(candidate \"3 2 3 100 3\") = \"3 3 3\
    \ 100 100\" ]]\n}\n\nrun_test"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660002184
- exit_code: 1
  program: "#!/bin/bash\n# From a given list of integers, generate a list of rolling\
    \ maximum element found until given moment\n# in the sequence.\n#\n# $1 is a space-separated\
    \ list\nrolling_max() {\n  local max=0\n  for i in $1; do\n    if [[ $i -gt $max\
    \ ]]; then\n      max=$i\n    fi\n    echo $max\n  done\n}\n\ncandidate() {\n\
    \    rolling_max \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"\") =\
    \ \"\" ]]\n    [[ $(candidate \"1 2 3 4\") = \"1 2 3 4\" ]]\n    [[ $(candidate\
    \ \"4 3 2 1\") = \"4 4 4 4\" ]]\n    [[ $(candidate \"3 2 3 100 3\") = \"3 3 3\
    \ 100 100\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660002184
- exit_code: 0
  program: "#!/bin/bash\n# From a given list of integers, generate a list of rolling\
    \ maximum element found until given moment\n# in the sequence.\n#\n# $1 is a space-separated\
    \ list\nrolling_max() {\n    local -a input=($1)\n    local -a output=()\n   \
    \ local max=${input[0]}\n    output+=($max)\n    for i in ${input[@]:1}; do\n\
    \        if (( i > max )); then\n            max=$i\n        fi\n        output+=($max)\n\
    \    done\n    echo ${output[@]}\n}\n\ncandidate() {\n    rolling_max \"$@\"\n\
    }\n\nset -e\nrun_test() {\n    [[ $(candidate \"\") = \"\" ]]\n    [[ $(candidate\
    \ \"1 2 3 4\") = \"1 2 3 4\" ]]\n    [[ $(candidate \"4 3 2 1\") = \"4 4 4 4\"\
    \ ]]\n    [[ $(candidate \"3 2 3 100 3\") = \"3 3 3 100 100\" ]]\n}\n\nrun_test"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660002184
- exit_code: 1
  program: "#!/bin/bash\n# From a given list of integers, generate a list of rolling\
    \ maximum element found until given moment\n# in the sequence.\n#\n# $1 is a space-separated\
    \ list\nrolling_max() {\n  local max=0\n  for i in $1; do\n    if [ $i -gt $max\
    \ ]; then\n      max=$i\n    fi\n    echo $max\n  done\n}\n\ncandidate() {\n \
    \   rolling_max \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"\") =\
    \ \"\" ]]\n    [[ $(candidate \"1 2 3 4\") = \"1 2 3 4\" ]]\n    [[ $(candidate\
    \ \"4 3 2 1\") = \"4 4 4 4\" ]]\n    [[ $(candidate \"3 2 3 100 3\") = \"3 3 3\
    \ 100 100\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660002184
- exit_code: 1
  program: "#!/bin/bash\n# From a given list of integers, generate a list of rolling\
    \ maximum element found until given moment\n# in the sequence.\n#\n# $1 is a space-separated\
    \ list\nrolling_max() {\n    local -a arr=($1)\n    local max=${arr[0]}\n    echo\
    \ $max\n    for i in \"${arr[@]:1}\"; do\n        if [[ $i -gt $max ]]; then\n\
    \            max=$i\n        fi\n        echo $max\n    done\n}\n\ncandidate()\
    \ {\n    rolling_max \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"\"\
    ) = \"\" ]]\n    [[ $(candidate \"1 2 3 4\") = \"1 2 3 4\" ]]\n    [[ $(candidate\
    \ \"4 3 2 1\") = \"4 4 4 4\" ]]\n    [[ $(candidate \"3 2 3 100 3\") = \"3 3 3\
    \ 100 100\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660002184
- exit_code: 1
  program: "#!/bin/bash\n# From a given list of integers, generate a list of rolling\
    \ maximum element found until given moment\n# in the sequence.\n#\n# $1 is a space-separated\
    \ list\nrolling_max() {\n    local -a arr=()\n    local max=0\n    for i in $1;\
    \ do\n        arr+=(\"$i\")\n        if [[ $i -gt $max ]]; then\n            max=$i\n\
    \        fi\n        echo \"$max\"\n    done\n}\n\ncandidate() {\n    rolling_max\
    \ \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"\") = \"\" ]]\n    [[\
    \ $(candidate \"1 2 3 4\") = \"1 2 3 4\" ]]\n    [[ $(candidate \"4 3 2 1\") =\
    \ \"4 4 4 4\" ]]\n    [[ $(candidate \"3 2 3 100 3\") = \"3 3 3 100 100\" ]]\n\
    }\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660002184
- exit_code: 1
  program: "#!/bin/bash\n# From a given list of integers, generate a list of rolling\
    \ maximum element found until given moment\n# in the sequence.\n#\n# $1 is a space-separated\
    \ list\nrolling_max() {\n    local -a arr\n    local i\n    local max\n    arr=($1)\n\
    \    max=${arr[0]}\n    for ((i=0; i<${#arr[@]}; i++)); do\n        if [[ ${arr[$i]}\
    \ -gt $max ]]; then\n            max=${arr[$i]}\n        fi\n        echo $max\n\
    \    done\n}\n\ncandidate() {\n    rolling_max \"$@\"\n}\n\nset -e\nrun_test()\
    \ {\n    [[ $(candidate \"\") = \"\" ]]\n    [[ $(candidate \"1 2 3 4\") = \"\
    1 2 3 4\" ]]\n    [[ $(candidate \"4 3 2 1\") = \"4 4 4 4\" ]]\n    [[ $(candidate\
    \ \"3 2 3 100 3\") = \"3 3 3 100 100\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660002184
- exit_code: 1
  program: "#!/bin/bash\n# From a given list of integers, generate a list of rolling\
    \ maximum element found until given moment\n# in the sequence.\n#\n# $1 is a space-separated\
    \ list\nrolling_max() {\n    local -a arr=($1)\n    local max=${arr[0]}\n    echo\
    \ $max\n    for i in \"${arr[@]:1}\"; do\n        if [[ $i -gt $max ]]; then\n\
    \            max=$i\n        fi\n        echo $max\n    done\n}\n\ncandidate()\
    \ {\n    rolling_max \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"\"\
    ) = \"\" ]]\n    [[ $(candidate \"1 2 3 4\") = \"1 2 3 4\" ]]\n    [[ $(candidate\
    \ \"4 3 2 1\") = \"4 4 4 4\" ]]\n    [[ $(candidate \"3 2 3 100 3\") = \"3 3 3\
    \ 100 100\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660002184
- exit_code: 1
  program: "#!/bin/bash\n# From a given list of integers, generate a list of rolling\
    \ maximum element found until given moment\n# in the sequence.\n#\n# $1 is a space-separated\
    \ list\nrolling_max() {\n  local -a arr\n  local i\n  local max\n  IFS=' ' read\
    \ -r -a arr <<< \"$1\"\n  max=${arr[0]}\n  for ((i=0; i<${#arr[@]}; i++)); do\n\
    \    if ((arr[i] > max)); then\n      max=${arr[i]}\n    fi\n    echo -n \"$max\
    \ \"\n  done\n  echo\n}\n\ncandidate() {\n    rolling_max \"$@\"\n}\n\nset -e\n\
    run_test() {\n    [[ $(candidate \"\") = \"\" ]]\n    [[ $(candidate \"1 2 3 4\"\
    ) = \"1 2 3 4\" ]]\n    [[ $(candidate \"4 3 2 1\") = \"4 4 4 4\" ]]\n    [[ $(candidate\
    \ \"3 2 3 100 3\") = \"3 3 3 100 100\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660002184
- exit_code: 0
  program: "#!/bin/bash\n# From a given list of integers, generate a list of rolling\
    \ maximum element found until given moment\n# in the sequence.\n#\n# $1 is a space-separated\
    \ list\nrolling_max() {\n    local -a arr=($1)\n    local max=${arr[0]}\n    local\
    \ -a result=()\n    for i in ${arr[@]}; do\n        if (( i > max )); then\n \
    \           max=$i\n        fi\n        result+=($max)\n    done\n    echo ${result[@]}\n\
    }\n\ncandidate() {\n    rolling_max \"$@\"\n}\n\nset -e\nrun_test() {\n    [[\
    \ $(candidate \"\") = \"\" ]]\n    [[ $(candidate \"1 2 3 4\") = \"1 2 3 4\" ]]\n\
    \    [[ $(candidate \"4 3 2 1\") = \"4 4 4 4\" ]]\n    [[ $(candidate \"3 2 3\
    \ 100 3\") = \"3 3 3 100 100\" ]]\n}\n\nrun_test"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660002184
- exit_code: 0
  program: "#!/bin/bash\n# From a given list of integers, generate a list of rolling\
    \ maximum element found until given moment\n# in the sequence.\n#\n# $1 is a space-separated\
    \ list\nrolling_max() {\n    local -a list=($1)\n    local max=${list[0]}\n  \
    \  local -a result=()\n    result+=($max)\n    for i in ${list[@]:1}; do\n   \
    \     if (( i > max )); then\n            max=$i\n        fi\n        result+=($max)\n\
    \    done\n    echo ${result[@]}\n}\n\ncandidate() {\n    rolling_max \"$@\"\n\
    }\n\nset -e\nrun_test() {\n    [[ $(candidate \"\") = \"\" ]]\n    [[ $(candidate\
    \ \"1 2 3 4\") = \"1 2 3 4\" ]]\n    [[ $(candidate \"4 3 2 1\") = \"4 4 4 4\"\
    \ ]]\n    [[ $(candidate \"3 2 3 100 3\") = \"3 3 3 100 100\" ]]\n}\n\nrun_test"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660002184
- exit_code: 1
  program: "#!/bin/bash\n# From a given list of integers, generate a list of rolling\
    \ maximum element found until given moment\n# in the sequence.\n#\n# $1 is a space-separated\
    \ list\nrolling_max() {\n    local list=($1)\n    local max=${list[0]}\n    echo\
    \ $max\n    for i in ${list[@]:1}; do\n        if [[ $i -gt $max ]]; then\n  \
    \          max=$i\n        fi\n        echo $max\n    done\n}\n\ncandidate() {\n\
    \    rolling_max \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"\") =\
    \ \"\" ]]\n    [[ $(candidate \"1 2 3 4\") = \"1 2 3 4\" ]]\n    [[ $(candidate\
    \ \"4 3 2 1\") = \"4 4 4 4\" ]]\n    [[ $(candidate \"3 2 3 100 3\") = \"3 3 3\
    \ 100 100\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660002184
- exit_code: 1
  program: "#!/bin/bash\n# From a given list of integers, generate a list of rolling\
    \ maximum element found until given moment\n# in the sequence.\n#\n# $1 is a space-separated\
    \ list\nrolling_max() {\n  local list=\"$1\"\n  local max=0\n  for i in $list;\
    \ do\n    if [[ $i -gt $max ]]; then\n      max=$i\n    fi\n    echo $max\n  done\n\
    }\n\ncandidate() {\n    rolling_max \"$@\"\n}\n\nset -e\nrun_test() {\n    [[\
    \ $(candidate \"\") = \"\" ]]\n    [[ $(candidate \"1 2 3 4\") = \"1 2 3 4\" ]]\n\
    \    [[ $(candidate \"4 3 2 1\") = \"4 4 4 4\" ]]\n    [[ $(candidate \"3 2 3\
    \ 100 3\") = \"3 3 3 100 100\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660002184
- exit_code: 1
  program: "#!/bin/bash\n# From a given list of integers, generate a list of rolling\
    \ maximum element found until given moment\n# in the sequence.\n#\n# $1 is a space-separated\
    \ list\nrolling_max() {\n    local -a arr\n    local -i i\n    local -i max\n\
    \    local -i n\n    arr=($1)\n    max=0\n    for ((i=0; i<${#arr[@]}; i++));\
    \ do\n        n=${arr[i]}\n        if ((n > max)); then\n            max=$n\n\
    \        fi\n        echo -n \"$max \"\n    done\n    echo\n}\n\ncandidate() {\n\
    \    rolling_max \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"\") =\
    \ \"\" ]]\n    [[ $(candidate \"1 2 3 4\") = \"1 2 3 4\" ]]\n    [[ $(candidate\
    \ \"4 3 2 1\") = \"4 4 4 4\" ]]\n    [[ $(candidate \"3 2 3 100 3\") = \"3 3 3\
    \ 100 100\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660002184
- exit_code: 1
  program: "#!/bin/bash\n# From a given list of integers, generate a list of rolling\
    \ maximum element found until given moment\n# in the sequence.\n#\n# $1 is a space-separated\
    \ list\nrolling_max() {\n    local -a arr=($1)\n    local max=${arr[0]}\n    echo\
    \ $max\n    for i in ${arr[@]:1}; do\n        if (( i > max )); then\n       \
    \     max=$i\n        fi\n        echo $max\n    done\n}\n\ncandidate() {\n  \
    \  rolling_max \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"\") = \"\
    \" ]]\n    [[ $(candidate \"1 2 3 4\") = \"1 2 3 4\" ]]\n    [[ $(candidate \"\
    4 3 2 1\") = \"4 4 4 4\" ]]\n    [[ $(candidate \"3 2 3 100 3\") = \"3 3 3 100\
    \ 100\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660002184
- exit_code: 1
  program: "#!/bin/bash\n# From a given list of integers, generate a list of rolling\
    \ maximum element found until given moment\n# in the sequence.\n#\n# $1 is a space-separated\
    \ list\nrolling_max() {\n    local -a arr=(\"$@\")\n    local max=${arr[0]}\n\
    \    echo $max\n    for i in \"${arr[@]:1}\"; do\n        if (( i > max )); then\n\
    \            max=$i\n        fi\n        echo $max\n    done\n}\n\ncandidate()\
    \ {\n    rolling_max \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"\"\
    ) = \"\" ]]\n    [[ $(candidate \"1 2 3 4\") = \"1 2 3 4\" ]]\n    [[ $(candidate\
    \ \"4 3 2 1\") = \"4 4 4 4\" ]]\n    [[ $(candidate \"3 2 3 100 3\") = \"3 3 3\
    \ 100 100\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660002184
- exit_code: 1
  program: "#!/bin/bash\n# From a given list of integers, generate a list of rolling\
    \ maximum element found until given moment\n# in the sequence.\n#\n# $1 is a space-separated\
    \ list\nrolling_max() {\n    local -a arr\n    local -i i\n    local -i max\n\
    \    local -i cur\n    local -i len\n\n    arr=($1)\n    len=${#arr[@]}\n    max=${arr[0]}\n\
    \    echo $max\n    for ((i=1; i<len; i++)); do\n        cur=${arr[i]}\n     \
    \   if ((cur > max)); then\n            max=$cur\n        fi\n        echo $max\n\
    \    done\n}\n\ncandidate() {\n    rolling_max \"$@\"\n}\n\nset -e\nrun_test()\
    \ {\n    [[ $(candidate \"\") = \"\" ]]\n    [[ $(candidate \"1 2 3 4\") = \"\
    1 2 3 4\" ]]\n    [[ $(candidate \"4 3 2 1\") = \"4 4 4 4\" ]]\n    [[ $(candidate\
    \ \"3 2 3 100 3\") = \"3 3 3 100 100\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660002184
- exit_code: 1
  program: "#!/bin/bash\n# From a given list of integers, generate a list of rolling\
    \ maximum element found until given moment\n# in the sequence.\n#\n# $1 is a space-separated\
    \ list\nrolling_max() {\n    local -a arr\n    local i\n    local max\n    IFS='\
    \ ' read -r -a arr <<< \"$1\"\n    max=${arr[0]}\n    for ((i=0; i<${#arr[@]};\
    \ i++)); do\n        if (( ${arr[i]} > max )); then\n            max=${arr[i]}\n\
    \        fi\n        echo $max\n    done\n}\n\ncandidate() {\n    rolling_max\
    \ \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"\") = \"\" ]]\n    [[\
    \ $(candidate \"1 2 3 4\") = \"1 2 3 4\" ]]\n    [[ $(candidate \"4 3 2 1\") =\
    \ \"4 4 4 4\" ]]\n    [[ $(candidate \"3 2 3 100 3\") = \"3 3 3 100 100\" ]]\n\
    }\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660002184
- exit_code: 1
  program: "#!/bin/bash\n# From a given list of integers, generate a list of rolling\
    \ maximum element found until given moment\n# in the sequence.\n#\n# $1 is a space-separated\
    \ list\nrolling_max() {\n  local max=0\n  for i in $1; do\n    if [[ $i -gt $max\
    \ ]]; then\n      max=$i\n    fi\n    echo $max\n  done\n}\n\ncandidate() {\n\
    \    rolling_max \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"\") =\
    \ \"\" ]]\n    [[ $(candidate \"1 2 3 4\") = \"1 2 3 4\" ]]\n    [[ $(candidate\
    \ \"4 3 2 1\") = \"4 4 4 4\" ]]\n    [[ $(candidate \"3 2 3 100 3\") = \"3 3 3\
    \ 100 100\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660002184
- exit_code: 1
  program: "#!/bin/bash\n# From a given list of integers, generate a list of rolling\
    \ maximum element found until given moment\n# in the sequence.\n#\n# $1 is a space-separated\
    \ list\nrolling_max() {\n  local max=0\n  for i in $1; do\n    if [ $i -gt $max\
    \ ]; then\n      max=$i\n    fi\n    echo $max\n  done\n}\n\ncandidate() {\n \
    \   rolling_max \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"\") =\
    \ \"\" ]]\n    [[ $(candidate \"1 2 3 4\") = \"1 2 3 4\" ]]\n    [[ $(candidate\
    \ \"4 3 2 1\") = \"4 4 4 4\" ]]\n    [[ $(candidate \"3 2 3 100 3\") = \"3 3 3\
    \ 100 100\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660002184
- exit_code: 1
  program: "#!/bin/bash\n# From a given list of integers, generate a list of rolling\
    \ maximum element found until given moment\n# in the sequence.\n#\n# $1 is a space-separated\
    \ list\nrolling_max() {\n    local max=0\n    for i in $1; do\n        if [ $i\
    \ -gt $max ]; then\n            max=$i\n        fi\n        echo $max\n    done\n\
    }\n\ncandidate() {\n    rolling_max \"$@\"\n}\n\nset -e\nrun_test() {\n    [[\
    \ $(candidate \"\") = \"\" ]]\n    [[ $(candidate \"1 2 3 4\") = \"1 2 3 4\" ]]\n\
    \    [[ $(candidate \"4 3 2 1\") = \"4 4 4 4\" ]]\n    [[ $(candidate \"3 2 3\
    \ 100 3\") = \"3 3 3 100 100\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660002184
- exit_code: 1
  program: "#!/bin/bash\n# From a given list of integers, generate a list of rolling\
    \ maximum element found until given moment\n# in the sequence.\n#\n# $1 is a space-separated\
    \ list\nrolling_max() {\n    local -a arr=($1)\n    local max=${arr[0]}\n    echo\
    \ $max\n    for i in \"${arr[@]:1}\"; do\n        if [[ $i -gt $max ]]; then\n\
    \            max=$i\n        fi\n        echo $max\n    done\n}\n\ncandidate()\
    \ {\n    rolling_max \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"\"\
    ) = \"\" ]]\n    [[ $(candidate \"1 2 3 4\") = \"1 2 3 4\" ]]\n    [[ $(candidate\
    \ \"4 3 2 1\") = \"4 4 4 4\" ]]\n    [[ $(candidate \"3 2 3 100 3\") = \"3 3 3\
    \ 100 100\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660002184
- exit_code: 0
  program: "#!/bin/bash\n# From a given list of integers, generate a list of rolling\
    \ maximum element found until given moment\n# in the sequence.\n#\n# $1 is a space-separated\
    \ list\nrolling_max() {\n    local -a list=($1)\n    local max=${list[0]}\n  \
    \  local -a result=($max)\n    for i in ${list[@]:1}; do\n        if [[ $i -gt\
    \ $max ]]; then\n            max=$i\n        fi\n        result+=($max)\n    done\n\
    \    echo ${result[@]}\n}\n\ncandidate() {\n    rolling_max \"$@\"\n}\n\nset -e\n\
    run_test() {\n    [[ $(candidate \"\") = \"\" ]]\n    [[ $(candidate \"1 2 3 4\"\
    ) = \"1 2 3 4\" ]]\n    [[ $(candidate \"4 3 2 1\") = \"4 4 4 4\" ]]\n    [[ $(candidate\
    \ \"3 2 3 100 3\") = \"3 3 3 100 100\" ]]\n}\n\nrun_test"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660002184
- exit_code: 0
  program: "#!/bin/bash\n# From a given list of integers, generate a list of rolling\
    \ maximum element found until given moment\n# in the sequence.\n#\n# $1 is a space-separated\
    \ list\nrolling_max() {\n    local -a arr=($1)\n    local max=${arr[0]}\n    local\
    \ -a res=()\n    res+=($max)\n    for i in \"${arr[@]:1}\"; do\n        if ((\
    \ i > max )); then\n            max=$i\n        fi\n        res+=($max)\n    done\n\
    \    echo \"${res[@]}\"\n}\n\ncandidate() {\n    rolling_max \"$@\"\n}\n\nset\
    \ -e\nrun_test() {\n    [[ $(candidate \"\") = \"\" ]]\n    [[ $(candidate \"\
    1 2 3 4\") = \"1 2 3 4\" ]]\n    [[ $(candidate \"4 3 2 1\") = \"4 4 4 4\" ]]\n\
    \    [[ $(candidate \"3 2 3 100 3\") = \"3 3 3 100 100\" ]]\n}\n\nrun_test"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660002184
- exit_code: 1
  program: "#!/bin/bash\n# From a given list of integers, generate a list of rolling\
    \ maximum element found until given moment\n# in the sequence.\n#\n# $1 is a space-separated\
    \ list\nrolling_max() {\n    local -a arr=($1)\n    local max=${arr[0]}\n    echo\
    \ -n \"$max \"\n    for i in ${arr[@]:1}; do\n        if [[ $i -gt $max ]]; then\n\
    \            max=$i\n        fi\n        echo -n \"$max \"\n    done\n    echo\n\
    }\n\ncandidate() {\n    rolling_max \"$@\"\n}\n\nset -e\nrun_test() {\n    [[\
    \ $(candidate \"\") = \"\" ]]\n    [[ $(candidate \"1 2 3 4\") = \"1 2 3 4\" ]]\n\
    \    [[ $(candidate \"4 3 2 1\") = \"4 4 4 4\" ]]\n    [[ $(candidate \"3 2 3\
    \ 100 3\") = \"3 3 3 100 100\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660002184
- exit_code: 1
  program: "#!/bin/bash\n# From a given list of integers, generate a list of rolling\
    \ maximum element found until given moment\n# in the sequence.\n#\n# $1 is a space-separated\
    \ list\nrolling_max() {\n    local max=0\n    for i in $1; do\n        if [[ $i\
    \ -gt $max ]]; then\n            max=$i\n        fi\n        echo $max\n    done\n\
    }\n\ncandidate() {\n    rolling_max \"$@\"\n}\n\nset -e\nrun_test() {\n    [[\
    \ $(candidate \"\") = \"\" ]]\n    [[ $(candidate \"1 2 3 4\") = \"1 2 3 4\" ]]\n\
    \    [[ $(candidate \"4 3 2 1\") = \"4 4 4 4\" ]]\n    [[ $(candidate \"3 2 3\
    \ 100 3\") = \"3 3 3 100 100\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660002184
- exit_code: 1
  program: "#!/bin/bash\n# From a given list of integers, generate a list of rolling\
    \ maximum element found until given moment\n# in the sequence.\n#\n# $1 is a space-separated\
    \ list\nrolling_max() {\n    local -a arr\n    local i\n    local max\n    arr=($1)\n\
    \    max=${arr[0]}\n    for ((i=0; i<${#arr[@]}; i++)); do\n        if [[ ${arr[$i]}\
    \ -gt $max ]]; then\n            max=${arr[$i]}\n        fi\n        echo $max\n\
    \    done\n}\n\ncandidate() {\n    rolling_max \"$@\"\n}\n\nset -e\nrun_test()\
    \ {\n    [[ $(candidate \"\") = \"\" ]]\n    [[ $(candidate \"1 2 3 4\") = \"\
    1 2 3 4\" ]]\n    [[ $(candidate \"4 3 2 1\") = \"4 4 4 4\" ]]\n    [[ $(candidate\
    \ \"3 2 3 100 3\") = \"3 3 3 100 100\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660002184
- exit_code: 1
  program: "#!/bin/bash\n# From a given list of integers, generate a list of rolling\
    \ maximum element found until given moment\n# in the sequence.\n#\n# $1 is a space-separated\
    \ list\nrolling_max() {\n  local list=\"$1\"\n  local max=0\n  for i in $list;\
    \ do\n    if [ $i -gt $max ]; then\n      max=$i\n    fi\n    echo $max\n  done\n\
    }\n\ncandidate() {\n    rolling_max \"$@\"\n}\n\nset -e\nrun_test() {\n    [[\
    \ $(candidate \"\") = \"\" ]]\n    [[ $(candidate \"1 2 3 4\") = \"1 2 3 4\" ]]\n\
    \    [[ $(candidate \"4 3 2 1\") = \"4 4 4 4\" ]]\n    [[ $(candidate \"3 2 3\
    \ 100 3\") = \"3 3 3 100 100\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660002184
- exit_code: 1
  program: "#!/bin/bash\n# From a given list of integers, generate a list of rolling\
    \ maximum element found until given moment\n# in the sequence.\n#\n# $1 is a space-separated\
    \ list\nrolling_max() {\n  local list=\"$1\"\n  local max=0\n  local element\n\
    \  for element in $list; do\n    if [[ $element -gt $max ]]; then\n      max=$element\n\
    \    fi\n    echo $max\n  done\n}\n\ncandidate() {\n    rolling_max \"$@\"\n}\n\
    \nset -e\nrun_test() {\n    [[ $(candidate \"\") = \"\" ]]\n    [[ $(candidate\
    \ \"1 2 3 4\") = \"1 2 3 4\" ]]\n    [[ $(candidate \"4 3 2 1\") = \"4 4 4 4\"\
    \ ]]\n    [[ $(candidate \"3 2 3 100 3\") = \"3 3 3 100 100\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660002184
- exit_code: 1
  program: "#!/bin/bash\n# From a given list of integers, generate a list of rolling\
    \ maximum element found until given moment\n# in the sequence.\n#\n# $1 is a space-separated\
    \ list\nrolling_max() {\n    local -a arr\n    local -i i\n    local -i max\n\n\
    \    arr=($1)\n    max=${arr[0]}\n    echo $max\n    for ((i=1; i<${#arr[@]};\
    \ i++)); do\n        if ((arr[i] > max)); then\n            max=${arr[i]}\n  \
    \      fi\n        echo $max\n    done\n}\n\ncandidate() {\n    rolling_max \"\
    $@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"\") = \"\" ]]\n    [[ $(candidate\
    \ \"1 2 3 4\") = \"1 2 3 4\" ]]\n    [[ $(candidate \"4 3 2 1\") = \"4 4 4 4\"\
    \ ]]\n    [[ $(candidate \"3 2 3 100 3\") = \"3 3 3 100 100\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660002184
- exit_code: 1
  program: "#!/bin/bash\n# From a given list of integers, generate a list of rolling\
    \ maximum element found until given moment\n# in the sequence.\n#\n# $1 is a space-separated\
    \ list\nrolling_max() {\n    local -a arr=($1)\n    local max=${arr[0]}\n    echo\
    \ $max\n    for i in \"${arr[@]:1}\"; do\n        if (( $i > $max )); then\n \
    \           max=$i\n        fi\n        echo $max\n    done\n}\n\ncandidate()\
    \ {\n    rolling_max \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"\"\
    ) = \"\" ]]\n    [[ $(candidate \"1 2 3 4\") = \"1 2 3 4\" ]]\n    [[ $(candidate\
    \ \"4 3 2 1\") = \"4 4 4 4\" ]]\n    [[ $(candidate \"3 2 3 100 3\") = \"3 3 3\
    \ 100 100\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660002184
- exit_code: 1
  program: "#!/bin/bash\n# From a given list of integers, generate a list of rolling\
    \ maximum element found until given moment\n# in the sequence.\n#\n# $1 is a space-separated\
    \ list\nrolling_max() {\n    local -a arr=($1)\n    local max=${arr[0]}\n    echo\
    \ $max\n    for i in \"${arr[@]:1}\"; do\n        if (( i > max )); then\n   \
    \         max=$i\n        fi\n        echo $max\n    done\n}\n\ncandidate() {\n\
    \    rolling_max \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"\") =\
    \ \"\" ]]\n    [[ $(candidate \"1 2 3 4\") = \"1 2 3 4\" ]]\n    [[ $(candidate\
    \ \"4 3 2 1\") = \"4 4 4 4\" ]]\n    [[ $(candidate \"3 2 3 100 3\") = \"3 3 3\
    \ 100 100\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660002184
- exit_code: 1
  program: "#!/bin/bash\n# From a given list of integers, generate a list of rolling\
    \ maximum element found until given moment\n# in the sequence.\n#\n# $1 is a space-separated\
    \ list\nrolling_max() {\n    local -a list=($1)\n    local max=${list[0]}\n  \
    \  echo $max\n    for ((i=1; i<${#list[@]}; i++)); do\n        if [[ ${list[$i]}\
    \ -gt $max ]]; then\n            max=${list[$i]}\n        fi\n        echo $max\n\
    \    done\n}\n\ncandidate() {\n    rolling_max \"$@\"\n}\n\nset -e\nrun_test()\
    \ {\n    [[ $(candidate \"\") = \"\" ]]\n    [[ $(candidate \"1 2 3 4\") = \"\
    1 2 3 4\" ]]\n    [[ $(candidate \"4 3 2 1\") = \"4 4 4 4\" ]]\n    [[ $(candidate\
    \ \"3 2 3 100 3\") = \"3 3 3 100 100\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660002184
- exit_code: 1
  program: "#!/bin/bash\n# From a given list of integers, generate a list of rolling\
    \ maximum element found until given moment\n# in the sequence.\n#\n# $1 is a space-separated\
    \ list\nrolling_max() {\n  local -a list=($1)\n  local max=${list[0]}\n  echo\
    \ $max\n  for i in ${list[@]:1}; do\n    if [[ $i -gt $max ]]; then\n      max=$i\n\
    \    fi\n    echo $max\n  done\n}\n\ncandidate() {\n    rolling_max \"$@\"\n}\n\
    \nset -e\nrun_test() {\n    [[ $(candidate \"\") = \"\" ]]\n    [[ $(candidate\
    \ \"1 2 3 4\") = \"1 2 3 4\" ]]\n    [[ $(candidate \"4 3 2 1\") = \"4 4 4 4\"\
    \ ]]\n    [[ $(candidate \"3 2 3 100 3\") = \"3 3 3 100 100\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660002184
- exit_code: 1
  program: "#!/bin/bash\n# From a given list of integers, generate a list of rolling\
    \ maximum element found until given moment\n# in the sequence.\n#\n# $1 is a space-separated\
    \ list\nrolling_max() {\n  local max=0\n  for i in $1; do\n    if [ $i -gt $max\
    \ ]; then\n      max=$i\n    fi\n    echo $max\n  done\n}\n\ncandidate() {\n \
    \   rolling_max \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"\") =\
    \ \"\" ]]\n    [[ $(candidate \"1 2 3 4\") = \"1 2 3 4\" ]]\n    [[ $(candidate\
    \ \"4 3 2 1\") = \"4 4 4 4\" ]]\n    [[ $(candidate \"3 2 3 100 3\") = \"3 3 3\
    \ 100 100\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660002184
- exit_code: 1
  program: "#!/bin/bash\n# From a given list of integers, generate a list of rolling\
    \ maximum element found until given moment\n# in the sequence.\n#\n# $1 is a space-separated\
    \ list\nrolling_max() {\n    local max=0\n    for i in $1; do\n        if [ $i\
    \ -gt $max ]; then\n            max=$i\n        fi\n        echo $max\n    done\n\
    }\n\ncandidate() {\n    rolling_max \"$@\"\n}\n\nset -e\nrun_test() {\n    [[\
    \ $(candidate \"\") = \"\" ]]\n    [[ $(candidate \"1 2 3 4\") = \"1 2 3 4\" ]]\n\
    \    [[ $(candidate \"4 3 2 1\") = \"4 4 4 4\" ]]\n    [[ $(candidate \"3 2 3\
    \ 100 3\") = \"3 3 3 100 100\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660002184
- exit_code: 0
  program: "#!/bin/bash\n# From a given list of integers, generate a list of rolling\
    \ maximum element found until given moment\n# in the sequence.\n#\n# $1 is a space-separated\
    \ list\nrolling_max() {\n    local -a arr=($1)\n    local -a maxes\n    local\
    \ max=${arr[0]}\n    maxes=($max)\n    for ((i=1; i<${#arr[@]}; i++)); do\n  \
    \      if [[ ${arr[$i]} -gt $max ]]; then\n            max=${arr[$i]}\n      \
    \  fi\n        maxes[$i]=$max\n    done\n    echo ${maxes[@]}\n}\n\ncandidate()\
    \ {\n    rolling_max \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"\"\
    ) = \"\" ]]\n    [[ $(candidate \"1 2 3 4\") = \"1 2 3 4\" ]]\n    [[ $(candidate\
    \ \"4 3 2 1\") = \"4 4 4 4\" ]]\n    [[ $(candidate \"3 2 3 100 3\") = \"3 3 3\
    \ 100 100\" ]]\n}\n\nrun_test"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660002184
- exit_code: 1
  program: "#!/bin/bash\n# From a given list of integers, generate a list of rolling\
    \ maximum element found until given moment\n# in the sequence.\n#\n# $1 is a space-separated\
    \ list\nrolling_max() {\n    local max=0\n    local i=0\n    for i in $1; do\n\
    \        if [ $i -gt $max ]; then\n            max=$i\n        fi\n        echo\
    \ $max\n    done\n}\n\ncandidate() {\n    rolling_max \"$@\"\n}\n\nset -e\nrun_test()\
    \ {\n    [[ $(candidate \"\") = \"\" ]]\n    [[ $(candidate \"1 2 3 4\") = \"\
    1 2 3 4\" ]]\n    [[ $(candidate \"4 3 2 1\") = \"4 4 4 4\" ]]\n    [[ $(candidate\
    \ \"3 2 3 100 3\") = \"3 3 3 100 100\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660002184
- exit_code: 0
  program: "#!/bin/bash\n# From a given list of integers, generate a list of rolling\
    \ maximum element found until given moment\n# in the sequence.\n#\n# $1 is a space-separated\
    \ list\nrolling_max() {\n    local -a list=($1)\n    local max=${list[0]}\n  \
    \  local -a result=($max)\n    for ((i=1; i<${#list[@]}; i++)); do\n        if\
    \ [[ ${list[$i]} -gt $max ]]; then\n            max=${list[$i]}\n        fi\n\
    \        result+=($max)\n    done\n    echo \"${result[@]}\"\n}\n\ncandidate()\
    \ {\n    rolling_max \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"\"\
    ) = \"\" ]]\n    [[ $(candidate \"1 2 3 4\") = \"1 2 3 4\" ]]\n    [[ $(candidate\
    \ \"4 3 2 1\") = \"4 4 4 4\" ]]\n    [[ $(candidate \"3 2 3 100 3\") = \"3 3 3\
    \ 100 100\" ]]\n}\n\nrun_test"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660002184
- exit_code: 1
  program: "#!/bin/bash\n# From a given list of integers, generate a list of rolling\
    \ maximum element found until given moment\n# in the sequence.\n#\n# $1 is a space-separated\
    \ list\nrolling_max() {\n    local -a list=($1)\n    local max=${list[0]}\n  \
    \  echo $max\n    for i in ${list[@]:1}; do\n        if (( i > max )); then\n\
    \            max=$i\n        fi\n        echo $max\n    done\n}\n\ncandidate()\
    \ {\n    rolling_max \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"\"\
    ) = \"\" ]]\n    [[ $(candidate \"1 2 3 4\") = \"1 2 3 4\" ]]\n    [[ $(candidate\
    \ \"4 3 2 1\") = \"4 4 4 4\" ]]\n    [[ $(candidate \"3 2 3 100 3\") = \"3 3 3\
    \ 100 100\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660002184
- exit_code: 1
  program: "#!/bin/bash\n# From a given list of integers, generate a list of rolling\
    \ maximum element found until given moment\n# in the sequence.\n#\n# $1 is a space-separated\
    \ list\nrolling_max() {\n    local -a list=($1)\n    local max=${list[0]}\n  \
    \  echo $max\n    for i in ${list[@]:1}; do\n        if (( i > max )); then\n\
    \            max=$i\n        fi\n        echo $max\n    done\n}\n\ncandidate()\
    \ {\n    rolling_max \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"\"\
    ) = \"\" ]]\n    [[ $(candidate \"1 2 3 4\") = \"1 2 3 4\" ]]\n    [[ $(candidate\
    \ \"4 3 2 1\") = \"4 4 4 4\" ]]\n    [[ $(candidate \"3 2 3 100 3\") = \"3 3 3\
    \ 100 100\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660002184
- exit_code: 1
  program: "#!/bin/bash\n# From a given list of integers, generate a list of rolling\
    \ maximum element found until given moment\n# in the sequence.\n#\n# $1 is a space-separated\
    \ list\nrolling_max() {\n    local list=\"$1\"\n    local max=0\n    for i in\
    \ $list; do\n        if [ $i -gt $max ]; then\n            max=$i\n        fi\n\
    \        echo $max\n    done\n}\n\ncandidate() {\n    rolling_max \"$@\"\n}\n\n\
    set -e\nrun_test() {\n    [[ $(candidate \"\") = \"\" ]]\n    [[ $(candidate \"\
    1 2 3 4\") = \"1 2 3 4\" ]]\n    [[ $(candidate \"4 3 2 1\") = \"4 4 4 4\" ]]\n\
    \    [[ $(candidate \"3 2 3 100 3\") = \"3 3 3 100 100\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660002184
- exit_code: 1
  program: "#!/bin/bash\n# From a given list of integers, generate a list of rolling\
    \ maximum element found until given moment\n# in the sequence.\n#\n# $1 is a space-separated\
    \ list\nrolling_max() {\n    local max=0\n    for i in $1; do\n        if [[ $i\
    \ -gt $max ]]; then\n            max=$i\n        fi\n        echo $max\n    done\n\
    }\n\ncandidate() {\n    rolling_max \"$@\"\n}\n\nset -e\nrun_test() {\n    [[\
    \ $(candidate \"\") = \"\" ]]\n    [[ $(candidate \"1 2 3 4\") = \"1 2 3 4\" ]]\n\
    \    [[ $(candidate \"4 3 2 1\") = \"4 4 4 4\" ]]\n    [[ $(candidate \"3 2 3\
    \ 100 3\") = \"3 3 3 100 100\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660002184
- exit_code: 1
  program: "#!/bin/bash\n# From a given list of integers, generate a list of rolling\
    \ maximum element found until given moment\n# in the sequence.\n#\n# $1 is a space-separated\
    \ list\nrolling_max() {\n    local max=0\n    for i in $1; do\n        if [[ $i\
    \ -gt $max ]]; then\n            max=$i\n        fi\n        echo $max\n    done\n\
    }\n\ncandidate() {\n    rolling_max \"$@\"\n}\n\nset -e\nrun_test() {\n    [[\
    \ $(candidate \"\") = \"\" ]]\n    [[ $(candidate \"1 2 3 4\") = \"1 2 3 4\" ]]\n\
    \    [[ $(candidate \"4 3 2 1\") = \"4 4 4 4\" ]]\n    [[ $(candidate \"3 2 3\
    \ 100 3\") = \"3 3 3 100 100\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660002184
- exit_code: 0
  program: "#!/bin/bash\n# From a given list of integers, generate a list of rolling\
    \ maximum element found until given moment\n# in the sequence.\n#\n# $1 is a space-separated\
    \ list\nrolling_max() {\n    local -a list=($1)\n    local max=${list[0]}\n  \
    \  local -a result=($max)\n    for i in \"${list[@]:1}\"; do\n        if (( i\
    \ > max )); then\n            max=$i\n        fi\n        result+=($max)\n   \
    \ done\n    echo \"${result[@]}\"\n}\n\ncandidate() {\n    rolling_max \"$@\"\n\
    }\n\nset -e\nrun_test() {\n    [[ $(candidate \"\") = \"\" ]]\n    [[ $(candidate\
    \ \"1 2 3 4\") = \"1 2 3 4\" ]]\n    [[ $(candidate \"4 3 2 1\") = \"4 4 4 4\"\
    \ ]]\n    [[ $(candidate \"3 2 3 100 3\") = \"3 3 3 100 100\" ]]\n}\n\nrun_test"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660002184
- exit_code: 1
  program: "#!/bin/bash\n# From a given list of integers, generate a list of rolling\
    \ maximum element found until given moment\n# in the sequence.\n#\n# $1 is a space-separated\
    \ list\nrolling_max() {\n    local -a list=($1)\n    local max=${list[0]}\n  \
    \  echo $max\n    for i in \"${list[@]:1}\"; do\n        if (( i > max )); then\n\
    \            max=$i\n        fi\n        echo $max\n    done\n}\n\ncandidate()\
    \ {\n    rolling_max \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"\"\
    ) = \"\" ]]\n    [[ $(candidate \"1 2 3 4\") = \"1 2 3 4\" ]]\n    [[ $(candidate\
    \ \"4 3 2 1\") = \"4 4 4 4\" ]]\n    [[ $(candidate \"3 2 3 100 3\") = \"3 3 3\
    \ 100 100\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660002184
- exit_code: 0
  program: "#!/bin/bash\n# From a given list of integers, generate a list of rolling\
    \ maximum element found until given moment\n# in the sequence.\n#\n# $1 is a space-separated\
    \ list\nrolling_max() {\n    local -a arr=($1)\n    local -a max_arr\n    local\
    \ max=${arr[0]}\n    max_arr+=($max)\n    for ((i=1; i<${#arr[@]}; i++)); do\n\
    \        if [[ ${arr[$i]} -gt $max ]]; then\n            max=${arr[$i]}\n    \
    \    fi\n        max_arr+=($max)\n    done\n    echo ${max_arr[@]}\n}\n\ncandidate()\
    \ {\n    rolling_max \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"\"\
    ) = \"\" ]]\n    [[ $(candidate \"1 2 3 4\") = \"1 2 3 4\" ]]\n    [[ $(candidate\
    \ \"4 3 2 1\") = \"4 4 4 4\" ]]\n    [[ $(candidate \"3 2 3 100 3\") = \"3 3 3\
    \ 100 100\" ]]\n}\n\nrun_test"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660002184
- exit_code: 1
  program: "#!/bin/bash\n# From a given list of integers, generate a list of rolling\
    \ maximum element found until given moment\n# in the sequence.\n#\n# $1 is a space-separated\
    \ list\nrolling_max() {\n    local -a list=($1)\n    local max=${list[0]}\n  \
    \  for i in \"${list[@]}\"; do\n        if [[ $i -gt $max ]]; then\n         \
    \   max=$i\n        fi\n        echo $max\n    done\n}\n\ncandidate() {\n    rolling_max\
    \ \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"\") = \"\" ]]\n    [[\
    \ $(candidate \"1 2 3 4\") = \"1 2 3 4\" ]]\n    [[ $(candidate \"4 3 2 1\") =\
    \ \"4 4 4 4\" ]]\n    [[ $(candidate \"3 2 3 100 3\") = \"3 3 3 100 100\" ]]\n\
    }\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660002184
- exit_code: 0
  program: "#!/bin/bash\n# From a given list of integers, generate a list of rolling\
    \ maximum element found until given moment\n# in the sequence.\n#\n# $1 is a space-separated\
    \ list\nrolling_max() {\n    local -a arr=($1)\n    local max=${arr[0]}\n    local\
    \ -a res=()\n    for i in \"${arr[@]}\"; do\n        if (( i > max )); then\n\
    \            max=$i\n        fi\n        res+=($max)\n    done\n    echo \"${res[@]}\"\
    \n}\n\ncandidate() {\n    rolling_max \"$@\"\n}\n\nset -e\nrun_test() {\n    [[\
    \ $(candidate \"\") = \"\" ]]\n    [[ $(candidate \"1 2 3 4\") = \"1 2 3 4\" ]]\n\
    \    [[ $(candidate \"4 3 2 1\") = \"4 4 4 4\" ]]\n    [[ $(candidate \"3 2 3\
    \ 100 3\") = \"3 3 3 100 100\" ]]\n}\n\nrun_test"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660002184
- exit_code: 1
  program: "#!/bin/bash\n# From a given list of integers, generate a list of rolling\
    \ maximum element found until given moment\n# in the sequence.\n#\n# $1 is a space-separated\
    \ list\nrolling_max() {\n    local -a arr=($1)\n    local max=${arr[0]}\n    echo\
    \ $max\n    for i in ${arr[@]:1}; do\n        if [[ $i -gt $max ]]; then\n   \
    \         max=$i\n        fi\n        echo $max\n    done\n}\n\ncandidate() {\n\
    \    rolling_max \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"\") =\
    \ \"\" ]]\n    [[ $(candidate \"1 2 3 4\") = \"1 2 3 4\" ]]\n    [[ $(candidate\
    \ \"4 3 2 1\") = \"4 4 4 4\" ]]\n    [[ $(candidate \"3 2 3 100 3\") = \"3 3 3\
    \ 100 100\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660002184
- exit_code: 0
  program: "#!/bin/bash\n# From a given list of integers, generate a list of rolling\
    \ maximum element found until given moment\n# in the sequence.\n#\n# $1 is a space-separated\
    \ list\nrolling_max() {\n    local -a arr=($1)\n    local max=${arr[0]}\n    local\
    \ -a res=()\n    res+=($max)\n    for i in ${arr[@]:1}; do\n        if (( i >\
    \ max )); then\n            max=$i\n        fi\n        res+=($max)\n    done\n\
    \    echo ${res[@]}\n}\n\ncandidate() {\n    rolling_max \"$@\"\n}\n\nset -e\n\
    run_test() {\n    [[ $(candidate \"\") = \"\" ]]\n    [[ $(candidate \"1 2 3 4\"\
    ) = \"1 2 3 4\" ]]\n    [[ $(candidate \"4 3 2 1\") = \"4 4 4 4\" ]]\n    [[ $(candidate\
    \ \"3 2 3 100 3\") = \"3 3 3 100 100\" ]]\n}\n\nrun_test"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660002184
- exit_code: 1
  program: "#!/bin/bash\n# From a given list of integers, generate a list of rolling\
    \ maximum element found until given moment\n# in the sequence.\n#\n# $1 is a space-separated\
    \ list\nrolling_max() {\n  local max=0\n  for i in $1; do\n    if [[ $i -gt $max\
    \ ]]; then\n      max=$i\n    fi\n    echo $max\n  done\n}\n\ncandidate() {\n\
    \    rolling_max \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"\") =\
    \ \"\" ]]\n    [[ $(candidate \"1 2 3 4\") = \"1 2 3 4\" ]]\n    [[ $(candidate\
    \ \"4 3 2 1\") = \"4 4 4 4\" ]]\n    [[ $(candidate \"3 2 3 100 3\") = \"3 3 3\
    \ 100 100\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660002184
- exit_code: 1
  program: "#!/bin/bash\n# From a given list of integers, generate a list of rolling\
    \ maximum element found until given moment\n# in the sequence.\n#\n# $1 is a space-separated\
    \ list\nrolling_max() {\n    local -a arr=($1)\n    local max=${arr[0]}\n    echo\
    \ -n \"$max \"\n    for i in ${arr[@]:1}; do\n        if (( i > max )); then\n\
    \            max=$i\n        fi\n        echo -n \"$max \"\n    done\n    echo\n\
    }\n\ncandidate() {\n    rolling_max \"$@\"\n}\n\nset -e\nrun_test() {\n    [[\
    \ $(candidate \"\") = \"\" ]]\n    [[ $(candidate \"1 2 3 4\") = \"1 2 3 4\" ]]\n\
    \    [[ $(candidate \"4 3 2 1\") = \"4 4 4 4\" ]]\n    [[ $(candidate \"3 2 3\
    \ 100 3\") = \"3 3 3 100 100\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660002184
- exit_code: 0
  program: "#!/bin/bash\n# From a given list of integers, generate a list of rolling\
    \ maximum element found until given moment\n# in the sequence.\n#\n# $1 is a space-separated\
    \ list\nrolling_max() {\n    local -a arr=($1)\n    local max=${arr[0]}\n    local\
    \ -a max_list=($max)\n    for i in \"${arr[@]:1}\"; do\n        if [[ $i -gt $max\
    \ ]]; then\n            max=$i\n        fi\n        max_list+=($max)\n    done\n\
    \    echo \"${max_list[@]}\"\n}\n\ncandidate() {\n    rolling_max \"$@\"\n}\n\n\
    set -e\nrun_test() {\n    [[ $(candidate \"\") = \"\" ]]\n    [[ $(candidate \"\
    1 2 3 4\") = \"1 2 3 4\" ]]\n    [[ $(candidate \"4 3 2 1\") = \"4 4 4 4\" ]]\n\
    \    [[ $(candidate \"3 2 3 100 3\") = \"3 3 3 100 100\" ]]\n}\n\nrun_test"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660002184
- exit_code: 0
  program: "#!/bin/bash\n# From a given list of integers, generate a list of rolling\
    \ maximum element found until given moment\n# in the sequence.\n#\n# $1 is a space-separated\
    \ list\nrolling_max() {\n    local -a arr=()\n    local -a max=()\n    local -i\
    \ i=0\n    local -i max_i=0\n    local -i max_v=0\n    local -i v=0\n\n    arr=($1)\n\
    \    max_v=${arr[0]}\n    max_i=0\n    for ((i=0; i<${#arr[@]}; i++)); do\n  \
    \      v=${arr[$i]}\n        if ((v > max_v)); then\n            max_v=$v\n  \
    \          max_i=$i\n        fi\n        max[$i]=$max_v\n    done\n    echo ${max[@]}\n\
    }\n\ncandidate() {\n    rolling_max \"$@\"\n}\n\nset -e\nrun_test() {\n    [[\
    \ $(candidate \"\") = \"\" ]]\n    [[ $(candidate \"1 2 3 4\") = \"1 2 3 4\" ]]\n\
    \    [[ $(candidate \"4 3 2 1\") = \"4 4 4 4\" ]]\n    [[ $(candidate \"3 2 3\
    \ 100 3\") = \"3 3 3 100 100\" ]]\n}\n\nrun_test"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660002184
- exit_code: 1
  program: "#!/bin/bash\n# From a given list of integers, generate a list of rolling\
    \ maximum element found until given moment\n# in the sequence.\n#\n# $1 is a space-separated\
    \ list\nrolling_max() {\n    local -a arr=($1)\n    local max=${arr[0]}\n    echo\
    \ $max\n    for i in ${arr[@]:1}; do\n        if [[ $i -gt $max ]]; then\n   \
    \         max=$i\n        fi\n        echo $max\n    done\n}\n\ncandidate() {\n\
    \    rolling_max \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"\") =\
    \ \"\" ]]\n    [[ $(candidate \"1 2 3 4\") = \"1 2 3 4\" ]]\n    [[ $(candidate\
    \ \"4 3 2 1\") = \"4 4 4 4\" ]]\n    [[ $(candidate \"3 2 3 100 3\") = \"3 3 3\
    \ 100 100\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660002184
- exit_code: 1
  program: "#!/bin/bash\n# From a given list of integers, generate a list of rolling\
    \ maximum element found until given moment\n# in the sequence.\n#\n# $1 is a space-separated\
    \ list\nrolling_max() {\n    local max=0\n    for i in $1; do\n        if [[ $i\
    \ -gt $max ]]; then\n            max=$i\n        fi\n        echo $max\n    done\n\
    }\n\ncandidate() {\n    rolling_max \"$@\"\n}\n\nset -e\nrun_test() {\n    [[\
    \ $(candidate \"\") = \"\" ]]\n    [[ $(candidate \"1 2 3 4\") = \"1 2 3 4\" ]]\n\
    \    [[ $(candidate \"4 3 2 1\") = \"4 4 4 4\" ]]\n    [[ $(candidate \"3 2 3\
    \ 100 3\") = \"3 3 3 100 100\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660002184
- exit_code: 0
  program: "#!/bin/bash\n# From a given list of integers, generate a list of rolling\
    \ maximum element found until given moment\n# in the sequence.\n#\n# $1 is a space-separated\
    \ list\nrolling_max() {\n    local -a arr=($1)\n    local max=${arr[0]}\n    local\
    \ -a res=()\n    res+=($max)\n    for i in \"${arr[@]:1}\"; do\n        if [[\
    \ $i -gt $max ]]; then\n            max=$i\n        fi\n        res+=($max)\n\
    \    done\n    echo \"${res[@]}\"\n}\n\ncandidate() {\n    rolling_max \"$@\"\n\
    }\n\nset -e\nrun_test() {\n    [[ $(candidate \"\") = \"\" ]]\n    [[ $(candidate\
    \ \"1 2 3 4\") = \"1 2 3 4\" ]]\n    [[ $(candidate \"4 3 2 1\") = \"4 4 4 4\"\
    \ ]]\n    [[ $(candidate \"3 2 3 100 3\") = \"3 3 3 100 100\" ]]\n}\n\nrun_test"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660002184
- exit_code: 1
  program: "#!/bin/bash\n# From a given list of integers, generate a list of rolling\
    \ maximum element found until given moment\n# in the sequence.\n#\n# $1 is a space-separated\
    \ list\nrolling_max() {\n    local -a arr\n    local -i i=0\n    local -i max=0\n\
    \    local -i cur=0\n    local -i len=0\n    local -i max_idx=0\n    local -i\
    \ cur_idx=0\n    local -i len_idx=0\n    local -i max_len=0\n    local -i cur_len=0\n\
    \    local -i len_len=0\n    local -i max_len_idx=0\n    local -i cur_len_idx=0\n\
    \    local -i len_len_idx=0\n    local -i max_len_len=0\n    local -i cur_len_len=0\n\
    \    local -i len_len_len=0\n    local -i max_len_len_idx=0\n    local -i cur_len_len_idx=0\n\
    \    local -i len_len_len_idx=0\n    local -i max_len_len_len=0\n    local -i\
    \ cur_len_len_len=0\n    local -i len_len_len_len=0\n    local -i max_len_len_len_idx=0\n\
    \    local -i cur_len_len_len_idx=0\n    local -i len_len_len_len_idx=0\n    local\
    \ -i max_len_len_len_len=0\n    local -i cur_len_len_len_len=0\n    local -i len_len_len_len_len=0\n\
    \    local -i max_len_len_len_len_idx=0\n    local -i cur_len_len_len_len_idx=0\n\
    \    local -i len_len_len_len_len_idx=0\n    local -i max_len_len_len_len_len=0\n\
    \    local -i cur_len_len_len_len_len=0\n    local -i len_len_len_len_len_len=0\n\
    \    local -i max_len_len_len_len_len_idx=0\n    local -i cur_len_len_len_len_len_id\n\
    }\n\ncandidate() {\n    rolling_max \"$@\"\n}\n\nset -e\nrun_test() {\n    [[\
    \ $(candidate \"\") = \"\" ]]\n    [[ $(candidate \"1 2 3 4\") = \"1 2 3 4\" ]]\n\
    \    [[ $(candidate \"4 3 2 1\") = \"4 4 4 4\" ]]\n    [[ $(candidate \"3 2 3\
    \ 100 3\") = \"3 3 3 100 100\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660002184
- exit_code: 1
  program: "#!/bin/bash\n# From a given list of integers, generate a list of rolling\
    \ maximum element found until given moment\n# in the sequence.\n#\n# $1 is a space-separated\
    \ list\nrolling_max() {\n  local max=0\n  for i in $1; do\n    if [[ $i -gt $max\
    \ ]]; then\n      max=$i\n    fi\n    echo $max\n  done\n}\n\ncandidate() {\n\
    \    rolling_max \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"\") =\
    \ \"\" ]]\n    [[ $(candidate \"1 2 3 4\") = \"1 2 3 4\" ]]\n    [[ $(candidate\
    \ \"4 3 2 1\") = \"4 4 4 4\" ]]\n    [[ $(candidate \"3 2 3 100 3\") = \"3 3 3\
    \ 100 100\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660002184
- exit_code: 1
  program: "#!/bin/bash\n# From a given list of integers, generate a list of rolling\
    \ maximum element found until given moment\n# in the sequence.\n#\n# $1 is a space-separated\
    \ list\nrolling_max() {\n  local -a list=($1)\n  local max=${list[0]}\n  echo\
    \ $max\n  for i in \"${list[@]:1}\"; do\n    if [[ $i -gt $max ]]; then\n    \
    \  max=$i\n    fi\n    echo $max\n  done\n}\n\ncandidate() {\n    rolling_max\
    \ \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"\") = \"\" ]]\n    [[\
    \ $(candidate \"1 2 3 4\") = \"1 2 3 4\" ]]\n    [[ $(candidate \"4 3 2 1\") =\
    \ \"4 4 4 4\" ]]\n    [[ $(candidate \"3 2 3 100 3\") = \"3 3 3 100 100\" ]]\n\
    }\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660002184
- exit_code: 1
  program: "#!/bin/bash\n# From a given list of integers, generate a list of rolling\
    \ maximum element found until given moment\n# in the sequence.\n#\n# $1 is a space-separated\
    \ list\nrolling_max() {\n    local max=0\n    for i in $1; do\n        if [ $i\
    \ -gt $max ]; then\n            max=$i\n        fi\n        echo $max\n    done\n\
    }\n\ncandidate() {\n    rolling_max \"$@\"\n}\n\nset -e\nrun_test() {\n    [[\
    \ $(candidate \"\") = \"\" ]]\n    [[ $(candidate \"1 2 3 4\") = \"1 2 3 4\" ]]\n\
    \    [[ $(candidate \"4 3 2 1\") = \"4 4 4 4\" ]]\n    [[ $(candidate \"3 2 3\
    \ 100 3\") = \"3 3 3 100 100\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660002184
- exit_code: 1
  program: "#!/bin/bash\n# From a given list of integers, generate a list of rolling\
    \ maximum element found until given moment\n# in the sequence.\n#\n# $1 is a space-separated\
    \ list\nrolling_max() {\n    local -a arr\n    local -i i\n    local -i max\n\
    \    arr=($1)\n    max=${arr[0]}\n    for ((i=0; i<${#arr[@]}; i++)); do\n   \
    \     if ((max < arr[i])); then\n            max=${arr[i]}\n        fi\n     \
    \   echo -n \"$max \"\n    done\n    echo\n}\n\ncandidate() {\n    rolling_max\
    \ \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"\") = \"\" ]]\n    [[\
    \ $(candidate \"1 2 3 4\") = \"1 2 3 4\" ]]\n    [[ $(candidate \"4 3 2 1\") =\
    \ \"4 4 4 4\" ]]\n    [[ $(candidate \"3 2 3 100 3\") = \"3 3 3 100 100\" ]]\n\
    }\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660002184
- exit_code: 0
  program: "#!/bin/bash\n# From a given list of integers, generate a list of rolling\
    \ maximum element found until given moment\n# in the sequence.\n#\n# $1 is a space-separated\
    \ list\nrolling_max() {\n    local -a arr=($1)\n    local max=${arr[0]}\n    local\
    \ -a result=()\n    for i in \"${arr[@]}\"; do\n        if (( i > max )); then\n\
    \            max=$i\n        fi\n        result+=($max)\n    done\n    echo \"\
    ${result[@]}\"\n}\n\ncandidate() {\n    rolling_max \"$@\"\n}\n\nset -e\nrun_test()\
    \ {\n    [[ $(candidate \"\") = \"\" ]]\n    [[ $(candidate \"1 2 3 4\") = \"\
    1 2 3 4\" ]]\n    [[ $(candidate \"4 3 2 1\") = \"4 4 4 4\" ]]\n    [[ $(candidate\
    \ \"3 2 3 100 3\") = \"3 3 3 100 100\" ]]\n}\n\nrun_test"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660002184
- exit_code: 1
  program: "#!/bin/bash\n# From a given list of integers, generate a list of rolling\
    \ maximum element found until given moment\n# in the sequence.\n#\n# $1 is a space-separated\
    \ list\nrolling_max() {\n    local max=0\n    for i in $1; do\n        if [[ $i\
    \ -gt $max ]]; then\n            max=$i\n        fi\n        echo $max\n    done\n\
    }\n\ncandidate() {\n    rolling_max \"$@\"\n}\n\nset -e\nrun_test() {\n    [[\
    \ $(candidate \"\") = \"\" ]]\n    [[ $(candidate \"1 2 3 4\") = \"1 2 3 4\" ]]\n\
    \    [[ $(candidate \"4 3 2 1\") = \"4 4 4 4\" ]]\n    [[ $(candidate \"3 2 3\
    \ 100 3\") = \"3 3 3 100 100\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660002184
- exit_code: 1
  program: "#!/bin/bash\n# From a given list of integers, generate a list of rolling\
    \ maximum element found until given moment\n# in the sequence.\n#\n# $1 is a space-separated\
    \ list\nrolling_max() {\n    local -a arr\n    local i\n    arr=($1)\n    for\
    \ ((i=0; i<${#arr[@]}; i++)); do\n        echo -n \"${arr[i]} \"\n        if ((i\
    \ > 0)); then\n            if ((arr[i] > arr[i-1])); then\n                echo\
    \ -n \"${arr[i]} \"\n            else\n                echo -n \"${arr[i-1]} \"\
    \n            fi\n        fi\n    done\n    echo\n}\n\ncandidate() {\n    rolling_max\
    \ \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"\") = \"\" ]]\n    [[\
    \ $(candidate \"1 2 3 4\") = \"1 2 3 4\" ]]\n    [[ $(candidate \"4 3 2 1\") =\
    \ \"4 4 4 4\" ]]\n    [[ $(candidate \"3 2 3 100 3\") = \"3 3 3 100 100\" ]]\n\
    }\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660002184
- exit_code: 1
  program: "#!/bin/bash\n# From a given list of integers, generate a list of rolling\
    \ maximum element found until given moment\n# in the sequence.\n#\n# $1 is a space-separated\
    \ list\nrolling_max() {\n    local -a list=($1)\n    local max=${list[0]}\n  \
    \  echo $max\n    for i in ${list[@]:1}; do\n        if (( $i > $max )); then\n\
    \            max=$i\n        fi\n        echo $max\n    done\n}\n\ncandidate()\
    \ {\n    rolling_max \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"\"\
    ) = \"\" ]]\n    [[ $(candidate \"1 2 3 4\") = \"1 2 3 4\" ]]\n    [[ $(candidate\
    \ \"4 3 2 1\") = \"4 4 4 4\" ]]\n    [[ $(candidate \"3 2 3 100 3\") = \"3 3 3\
    \ 100 100\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660002184
- exit_code: 1
  program: "#!/bin/bash\n# From a given list of integers, generate a list of rolling\
    \ maximum element found until given moment\n# in the sequence.\n#\n# $1 is a space-separated\
    \ list\nrolling_max() {\n    local -a list=($1)\n    local max=${list[0]}\n  \
    \  echo $max\n    for i in ${list[@]:1}; do\n        if (( i > max )); then\n\
    \            max=$i\n        fi\n        echo $max\n    done\n}\n\ncandidate()\
    \ {\n    rolling_max \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"\"\
    ) = \"\" ]]\n    [[ $(candidate \"1 2 3 4\") = \"1 2 3 4\" ]]\n    [[ $(candidate\
    \ \"4 3 2 1\") = \"4 4 4 4\" ]]\n    [[ $(candidate \"3 2 3 100 3\") = \"3 3 3\
    \ 100 100\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660002184
- exit_code: 0
  program: "#!/bin/bash\n# From a given list of integers, generate a list of rolling\
    \ maximum element found until given moment\n# in the sequence.\n#\n# $1 is a space-separated\
    \ list\nrolling_max() {\n  local -a arr=($1)\n  local max=${arr[0]}\n  local -a\
    \ result=()\n  for i in ${arr[@]}; do\n    if (( i > max )); then\n      max=$i\n\
    \    fi\n    result+=($max)\n  done\n  echo ${result[@]}\n}\n\ncandidate() {\n\
    \    rolling_max \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"\") =\
    \ \"\" ]]\n    [[ $(candidate \"1 2 3 4\") = \"1 2 3 4\" ]]\n    [[ $(candidate\
    \ \"4 3 2 1\") = \"4 4 4 4\" ]]\n    [[ $(candidate \"3 2 3 100 3\") = \"3 3 3\
    \ 100 100\" ]]\n}\n\nrun_test"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660002184
- exit_code: 1
  program: "#!/bin/bash\n# From a given list of integers, generate a list of rolling\
    \ maximum element found until given moment\n# in the sequence.\n#\n# $1 is a space-separated\
    \ list\nrolling_max() {\n  local max=0\n  for i in $1; do\n    if [[ $i -gt $max\
    \ ]]; then\n      max=$i\n    fi\n    echo $max\n  done\n}\n\ncandidate() {\n\
    \    rolling_max \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"\") =\
    \ \"\" ]]\n    [[ $(candidate \"1 2 3 4\") = \"1 2 3 4\" ]]\n    [[ $(candidate\
    \ \"4 3 2 1\") = \"4 4 4 4\" ]]\n    [[ $(candidate \"3 2 3 100 3\") = \"3 3 3\
    \ 100 100\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660002184
- exit_code: 1
  program: "#!/bin/bash\n# From a given list of integers, generate a list of rolling\
    \ maximum element found until given moment\n# in the sequence.\n#\n# $1 is a space-separated\
    \ list\nrolling_max() {\n  local -a list=($1)\n  local max=${list[0]}\n  echo\
    \ $max\n  for i in ${list[@]:1}; do\n    if [[ $i -gt $max ]]; then\n      max=$i\n\
    \    fi\n    echo $max\n  done\n}\n\ncandidate() {\n    rolling_max \"$@\"\n}\n\
    \nset -e\nrun_test() {\n    [[ $(candidate \"\") = \"\" ]]\n    [[ $(candidate\
    \ \"1 2 3 4\") = \"1 2 3 4\" ]]\n    [[ $(candidate \"4 3 2 1\") = \"4 4 4 4\"\
    \ ]]\n    [[ $(candidate \"3 2 3 100 3\") = \"3 3 3 100 100\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660002184
- exit_code: 1
  program: "#!/bin/bash\n# From a given list of integers, generate a list of rolling\
    \ maximum element found until given moment\n# in the sequence.\n#\n# $1 is a space-separated\
    \ list\nrolling_max() {\n    local -a arr=($1)\n    local max=${arr[0]}\n    echo\
    \ $max\n    for i in \"${arr[@]:1}\"; do\n        if (( i > max )); then\n   \
    \         max=$i\n        fi\n        echo $max\n    done\n}\n\ncandidate() {\n\
    \    rolling_max \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"\") =\
    \ \"\" ]]\n    [[ $(candidate \"1 2 3 4\") = \"1 2 3 4\" ]]\n    [[ $(candidate\
    \ \"4 3 2 1\") = \"4 4 4 4\" ]]\n    [[ $(candidate \"3 2 3 100 3\") = \"3 3 3\
    \ 100 100\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660002184
- exit_code: 1
  program: "#!/bin/bash\n# From a given list of integers, generate a list of rolling\
    \ maximum element found until given moment\n# in the sequence.\n#\n# $1 is a space-separated\
    \ list\nrolling_max() {\n  local max=0\n  for i in $1; do\n    if [[ $i -gt $max\
    \ ]]; then\n      max=$i\n    fi\n    echo $max\n  done\n}\n\ncandidate() {\n\
    \    rolling_max \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"\") =\
    \ \"\" ]]\n    [[ $(candidate \"1 2 3 4\") = \"1 2 3 4\" ]]\n    [[ $(candidate\
    \ \"4 3 2 1\") = \"4 4 4 4\" ]]\n    [[ $(candidate \"3 2 3 100 3\") = \"3 3 3\
    \ 100 100\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660002184
- exit_code: 1
  program: "#!/bin/bash\n# From a given list of integers, generate a list of rolling\
    \ maximum element found until given moment\n# in the sequence.\n#\n# $1 is a space-separated\
    \ list\nrolling_max() {\n    local -a arr=(\"$@\")\n    local max=${arr[0]}\n\
    \    local -a result=()\n    result+=($max)\n    for i in \"${arr[@]:1}\"; do\n\
    \        if (( i > max )); then\n            max=$i\n        fi\n        result+=($max)\n\
    \    done\n    echo \"${result[@]}\"\n}\n\ncandidate() {\n    rolling_max \"$@\"\
    \n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"\") = \"\" ]]\n    [[ $(candidate\
    \ \"1 2 3 4\") = \"1 2 3 4\" ]]\n    [[ $(candidate \"4 3 2 1\") = \"4 4 4 4\"\
    \ ]]\n    [[ $(candidate \"3 2 3 100 3\") = \"3 3 3 100 100\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660002184
- exit_code: 1
  program: "#!/bin/bash\n# From a given list of integers, generate a list of rolling\
    \ maximum element found until given moment\n# in the sequence.\n#\n# $1 is a space-separated\
    \ list\nrolling_max() {\n    local max=0\n    for i in $1; do\n        if [[ $i\
    \ -gt $max ]]; then\n            max=$i\n        fi\n        echo $max\n    done\n\
    }\n\ncandidate() {\n    rolling_max \"$@\"\n}\n\nset -e\nrun_test() {\n    [[\
    \ $(candidate \"\") = \"\" ]]\n    [[ $(candidate \"1 2 3 4\") = \"1 2 3 4\" ]]\n\
    \    [[ $(candidate \"4 3 2 1\") = \"4 4 4 4\" ]]\n    [[ $(candidate \"3 2 3\
    \ 100 3\") = \"3 3 3 100 100\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660002184
- exit_code: 1
  program: "#!/bin/bash\n# From a given list of integers, generate a list of rolling\
    \ maximum element found until given moment\n# in the sequence.\n#\n# $1 is a space-separated\
    \ list\nrolling_max() {\n    local list=\"$1\"\n    local max=0\n    local i=0\n\
    \    for i in $list; do\n        if [ $i -gt $max ]; then\n            max=$i\n\
    \        fi\n        echo $max\n    done\n}\n\ncandidate() {\n    rolling_max\
    \ \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"\") = \"\" ]]\n    [[\
    \ $(candidate \"1 2 3 4\") = \"1 2 3 4\" ]]\n    [[ $(candidate \"4 3 2 1\") =\
    \ \"4 4 4 4\" ]]\n    [[ $(candidate \"3 2 3 100 3\") = \"3 3 3 100 100\" ]]\n\
    }\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660002184
- exit_code: 1
  program: "#!/bin/bash\n# From a given list of integers, generate a list of rolling\
    \ maximum element found until given moment\n# in the sequence.\n#\n# $1 is a space-separated\
    \ list\nrolling_max() {\n    local -a list=($1)\n    local max=${list[0]}\n  \
    \  echo $max\n    for i in \"${list[@]:1}\"; do\n        if (( i > max )); then\n\
    \            max=$i\n        fi\n        echo $max\n    done\n}\n\ncandidate()\
    \ {\n    rolling_max \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"\"\
    ) = \"\" ]]\n    [[ $(candidate \"1 2 3 4\") = \"1 2 3 4\" ]]\n    [[ $(candidate\
    \ \"4 3 2 1\") = \"4 4 4 4\" ]]\n    [[ $(candidate \"3 2 3 100 3\") = \"3 3 3\
    \ 100 100\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660002184
- exit_code: 1
  program: "#!/bin/bash\n# From a given list of integers, generate a list of rolling\
    \ maximum element found until given moment\n# in the sequence.\n#\n# $1 is a space-separated\
    \ list\nrolling_max() {\n  local -a arr\n  local i\n  local max\n  IFS=' ' read\
    \ -r -a arr <<< \"$1\"\n  max=${arr[0]}\n  for ((i=0; i<${#arr[@]}; i++)); do\n\
    \    if (( arr[i] > max )); then\n      max=${arr[i]}\n    fi\n    echo -n \"\
    $max \"\n  done\n  echo\n}\n\ncandidate() {\n    rolling_max \"$@\"\n}\n\nset\
    \ -e\nrun_test() {\n    [[ $(candidate \"\") = \"\" ]]\n    [[ $(candidate \"\
    1 2 3 4\") = \"1 2 3 4\" ]]\n    [[ $(candidate \"4 3 2 1\") = \"4 4 4 4\" ]]\n\
    \    [[ $(candidate \"3 2 3 100 3\") = \"3 3 3 100 100\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660002184
- exit_code: 1
  program: "#!/bin/bash\n# From a given list of integers, generate a list of rolling\
    \ maximum element found until given moment\n# in the sequence.\n#\n# $1 is a space-separated\
    \ list\nrolling_max() {\n    local -a arr=($1)\n    local max=${arr[0]}\n    echo\
    \ $max\n    for i in ${arr[@]:1}; do\n        if (( i > max )); then\n       \
    \     max=$i\n        fi\n        echo $max\n    done\n}\n\ncandidate() {\n  \
    \  rolling_max \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"\") = \"\
    \" ]]\n    [[ $(candidate \"1 2 3 4\") = \"1 2 3 4\" ]]\n    [[ $(candidate \"\
    4 3 2 1\") = \"4 4 4 4\" ]]\n    [[ $(candidate \"3 2 3 100 3\") = \"3 3 3 100\
    \ 100\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660002184
- exit_code: 1
  program: "#!/bin/bash\n# From a given list of integers, generate a list of rolling\
    \ maximum element found until given moment\n# in the sequence.\n#\n# $1 is a space-separated\
    \ list\nrolling_max() {\n    local -a list=($1)\n    local max=${list[0]}\n  \
    \  echo $max\n    for i in ${list[@]:1}; do\n        if [[ $i -gt $max ]]; then\n\
    \            max=$i\n        fi\n        echo $max\n    done\n}\n\ncandidate()\
    \ {\n    rolling_max \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"\"\
    ) = \"\" ]]\n    [[ $(candidate \"1 2 3 4\") = \"1 2 3 4\" ]]\n    [[ $(candidate\
    \ \"4 3 2 1\") = \"4 4 4 4\" ]]\n    [[ $(candidate \"3 2 3 100 3\") = \"3 3 3\
    \ 100 100\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660002184
- exit_code: 1
  program: "#!/bin/bash\n# From a given list of integers, generate a list of rolling\
    \ maximum element found until given moment\n# in the sequence.\n#\n# $1 is a space-separated\
    \ list\nrolling_max() {\n    local max=0\n    for i in $1; do\n        if [ $i\
    \ -gt $max ]; then\n            max=$i\n        fi\n        echo $max\n    done\n\
    }\n\ncandidate() {\n    rolling_max \"$@\"\n}\n\nset -e\nrun_test() {\n    [[\
    \ $(candidate \"\") = \"\" ]]\n    [[ $(candidate \"1 2 3 4\") = \"1 2 3 4\" ]]\n\
    \    [[ $(candidate \"4 3 2 1\") = \"4 4 4 4\" ]]\n    [[ $(candidate \"3 2 3\
    \ 100 3\") = \"3 3 3 100 100\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660002184
- exit_code: 0
  program: "#!/bin/bash\n# From a given list of integers, generate a list of rolling\
    \ maximum element found until given moment\n# in the sequence.\n#\n# $1 is a space-separated\
    \ list\nrolling_max() {\n    local -a arr=($1)\n    local -a max_arr\n    max_arr[0]=${arr[0]}\n\
    \    for ((i=1; i<${#arr[@]}; i++)); do\n        if [[ ${arr[$i]} -gt ${max_arr[$i-1]}\
    \ ]]; then\n            max_arr[$i]=${arr[$i]}\n        else\n            max_arr[$i]=${max_arr[$i-1]}\n\
    \        fi\n    done\n    echo ${max_arr[@]}\n}\n\ncandidate() {\n    rolling_max\
    \ \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"\") = \"\" ]]\n    [[\
    \ $(candidate \"1 2 3 4\") = \"1 2 3 4\" ]]\n    [[ $(candidate \"4 3 2 1\") =\
    \ \"4 4 4 4\" ]]\n    [[ $(candidate \"3 2 3 100 3\") = \"3 3 3 100 100\" ]]\n\
    }\n\nrun_test"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660002184
- exit_code: 1
  program: "#!/bin/bash\n# From a given list of integers, generate a list of rolling\
    \ maximum element found until given moment\n# in the sequence.\n#\n# $1 is a space-separated\
    \ list\nrolling_max() {\n    local max=0\n    for i in $1; do\n        if [[ $i\
    \ -gt $max ]]; then\n            max=$i\n        fi\n        echo $max\n    done\n\
    }\n\ncandidate() {\n    rolling_max \"$@\"\n}\n\nset -e\nrun_test() {\n    [[\
    \ $(candidate \"\") = \"\" ]]\n    [[ $(candidate \"1 2 3 4\") = \"1 2 3 4\" ]]\n\
    \    [[ $(candidate \"4 3 2 1\") = \"4 4 4 4\" ]]\n    [[ $(candidate \"3 2 3\
    \ 100 3\") = \"3 3 3 100 100\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660002184
- exit_code: 1
  program: "#!/bin/bash\n# From a given list of integers, generate a list of rolling\
    \ maximum element found until given moment\n# in the sequence.\n#\n# $1 is a space-separated\
    \ list\nrolling_max() {\n  local -a list=($1)\n  local max=${list[0]}\n  for i\
    \ in ${list[@]}; do\n    if [[ $i -gt $max ]]; then\n      max=$i\n    fi\n  \
    \  echo $max\n  done\n}\n\ncandidate() {\n    rolling_max \"$@\"\n}\n\nset -e\n\
    run_test() {\n    [[ $(candidate \"\") = \"\" ]]\n    [[ $(candidate \"1 2 3 4\"\
    ) = \"1 2 3 4\" ]]\n    [[ $(candidate \"4 3 2 1\") = \"4 4 4 4\" ]]\n    [[ $(candidate\
    \ \"3 2 3 100 3\") = \"3 3 3 100 100\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660002184
- exit_code: 1
  program: "#!/bin/bash\n# From a given list of integers, generate a list of rolling\
    \ maximum element found until given moment\n# in the sequence.\n#\n# $1 is a space-separated\
    \ list\nrolling_max() {\n    local list=\"$1\"\n    local max=0\n    for i in\
    \ $list; do\n        if [ $i -gt $max ]; then\n            max=$i\n        fi\n\
    \        echo $max\n    done\n}\n\ncandidate() {\n    rolling_max \"$@\"\n}\n\n\
    set -e\nrun_test() {\n    [[ $(candidate \"\") = \"\" ]]\n    [[ $(candidate \"\
    1 2 3 4\") = \"1 2 3 4\" ]]\n    [[ $(candidate \"4 3 2 1\") = \"4 4 4 4\" ]]\n\
    \    [[ $(candidate \"3 2 3 100 3\") = \"3 3 3 100 100\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660002184
- exit_code: 1
  program: "#!/bin/bash\n# From a given list of integers, generate a list of rolling\
    \ maximum element found until given moment\n# in the sequence.\n#\n# $1 is a space-separated\
    \ list\nrolling_max() {\n    local -a list=($1)\n    local max=${list[0]}\n  \
    \  echo $max\n    for i in ${list[@]:1}; do\n        if (( i > max )); then\n\
    \            max=$i\n        fi\n        echo $max\n    done\n}\n\ncandidate()\
    \ {\n    rolling_max \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"\"\
    ) = \"\" ]]\n    [[ $(candidate \"1 2 3 4\") = \"1 2 3 4\" ]]\n    [[ $(candidate\
    \ \"4 3 2 1\") = \"4 4 4 4\" ]]\n    [[ $(candidate \"3 2 3 100 3\") = \"3 3 3\
    \ 100 100\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660002184
- exit_code: 1
  program: "#!/bin/bash\n# From a given list of integers, generate a list of rolling\
    \ maximum element found until given moment\n# in the sequence.\n#\n# $1 is a space-separated\
    \ list\nrolling_max() {\n    local max=0\n    for i in $1; do\n        if [[ $i\
    \ -gt $max ]]; then\n            max=$i\n        fi\n        echo $max\n    done\n\
    }\n\ncandidate() {\n    rolling_max \"$@\"\n}\n\nset -e\nrun_test() {\n    [[\
    \ $(candidate \"\") = \"\" ]]\n    [[ $(candidate \"1 2 3 4\") = \"1 2 3 4\" ]]\n\
    \    [[ $(candidate \"4 3 2 1\") = \"4 4 4 4\" ]]\n    [[ $(candidate \"3 2 3\
    \ 100 3\") = \"3 3 3 100 100\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660002184
- exit_code: 1
  program: "#!/bin/bash\n# From a given list of integers, generate a list of rolling\
    \ maximum element found until given moment\n# in the sequence.\n#\n# $1 is a space-separated\
    \ list\nrolling_max() {\n    local max=0\n    for i in $1; do\n        if [[ $i\
    \ -gt $max ]]; then\n            max=$i\n        fi\n        echo $max\n    done\n\
    }\n\ncandidate() {\n    rolling_max \"$@\"\n}\n\nset -e\nrun_test() {\n    [[\
    \ $(candidate \"\") = \"\" ]]\n    [[ $(candidate \"1 2 3 4\") = \"1 2 3 4\" ]]\n\
    \    [[ $(candidate \"4 3 2 1\") = \"4 4 4 4\" ]]\n    [[ $(candidate \"3 2 3\
    \ 100 3\") = \"3 3 3 100 100\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660002184
- exit_code: 1
  program: "#!/bin/bash\n# From a given list of integers, generate a list of rolling\
    \ maximum element found until given moment\n# in the sequence.\n#\n# $1 is a space-separated\
    \ list\nrolling_max() {\n    local -a arr=($1)\n    local max=${arr[0]}\n    echo\
    \ $max\n    for i in ${arr[@]:1}; do\n        if [[ $i -gt $max ]]; then\n   \
    \         max=$i\n        fi\n        echo $max\n    done\n}\n\ncandidate() {\n\
    \    rolling_max \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"\") =\
    \ \"\" ]]\n    [[ $(candidate \"1 2 3 4\") = \"1 2 3 4\" ]]\n    [[ $(candidate\
    \ \"4 3 2 1\") = \"4 4 4 4\" ]]\n    [[ $(candidate \"3 2 3 100 3\") = \"3 3 3\
    \ 100 100\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660002184
- exit_code: 1
  program: "#!/bin/bash\n# From a given list of integers, generate a list of rolling\
    \ maximum element found until given moment\n# in the sequence.\n#\n# $1 is a space-separated\
    \ list\nrolling_max() {\n    local -a a=($1)\n    local -i m=0\n    for ((i=0;\
    \ i<${#a[@]}; i++)); do\n        if ((a[i] > m)); then\n            m=${a[i]}\n\
    \        fi\n        echo $m\n    done\n}\n\ncandidate() {\n    rolling_max \"\
    $@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"\") = \"\" ]]\n    [[ $(candidate\
    \ \"1 2 3 4\") = \"1 2 3 4\" ]]\n    [[ $(candidate \"4 3 2 1\") = \"4 4 4 4\"\
    \ ]]\n    [[ $(candidate \"3 2 3 100 3\") = \"3 3 3 100 100\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660002184
- exit_code: 1
  program: "#!/bin/bash\n# From a given list of integers, generate a list of rolling\
    \ maximum element found until given moment\n# in the sequence.\n#\n# $1 is a space-separated\
    \ list\nrolling_max() {\n    local -a arr\n    local -i i\n    local -i max\n\
    \    local -i curr\n    local -i len\n\n    arr=($1)\n    len=${#arr[@]}\n   \
    \ max=${arr[0]}\n    echo -n \"$max \"\n    for ((i=1; i<len; i++)); do\n    \
    \    curr=${arr[i]}\n        if ((curr > max)); then\n            max=$curr\n\
    \        fi\n        echo -n \"$max \"\n    done\n    echo\n}\n\ncandidate() {\n\
    \    rolling_max \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"\") =\
    \ \"\" ]]\n    [[ $(candidate \"1 2 3 4\") = \"1 2 3 4\" ]]\n    [[ $(candidate\
    \ \"4 3 2 1\") = \"4 4 4 4\" ]]\n    [[ $(candidate \"3 2 3 100 3\") = \"3 3 3\
    \ 100 100\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660002184
- exit_code: 1
  program: "#!/bin/bash\n# From a given list of integers, generate a list of rolling\
    \ maximum element found until given moment\n# in the sequence.\n#\n# $1 is a space-separated\
    \ list\nrolling_max() {\n    local -a arr=()\n    local max=0\n    for i in $1;\
    \ do\n        arr+=($i)\n        if (( $i > $max )); then\n            max=$i\n\
    \        fi\n        echo $max\n    done\n}\n\ncandidate() {\n    rolling_max\
    \ \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"\") = \"\" ]]\n    [[\
    \ $(candidate \"1 2 3 4\") = \"1 2 3 4\" ]]\n    [[ $(candidate \"4 3 2 1\") =\
    \ \"4 4 4 4\" ]]\n    [[ $(candidate \"3 2 3 100 3\") = \"3 3 3 100 100\" ]]\n\
    }\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660002184
- exit_code: 0
  program: "#!/bin/bash\n# From a given list of integers, generate a list of rolling\
    \ maximum element found until given moment\n# in the sequence.\n#\n# $1 is a space-separated\
    \ list\nrolling_max() {\n    local -a list=($1)\n    local max=${list[0]}\n  \
    \  local -a result=()\n    result+=($max)\n    for i in \"${list[@]:1}\"; do\n\
    \        if (( i > max )); then\n            max=$i\n        fi\n        result+=($max)\n\
    \    done\n    echo \"${result[@]}\"\n}\n\ncandidate() {\n    rolling_max \"$@\"\
    \n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"\") = \"\" ]]\n    [[ $(candidate\
    \ \"1 2 3 4\") = \"1 2 3 4\" ]]\n    [[ $(candidate \"4 3 2 1\") = \"4 4 4 4\"\
    \ ]]\n    [[ $(candidate \"3 2 3 100 3\") = \"3 3 3 100 100\" ]]\n}\n\nrun_test"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660002184
- exit_code: 1
  program: "#!/bin/bash\n# From a given list of integers, generate a list of rolling\
    \ maximum element found until given moment\n# in the sequence.\n#\n# $1 is a space-separated\
    \ list\nrolling_max() {\n    local -a list=($1)\n    local max=${list[0]}\n  \
    \  echo $max\n    for i in \"${list[@]:1}\"; do\n        if (( i > max )); then\n\
    \            max=$i\n        fi\n        echo $max\n    done\n}\n\ncandidate()\
    \ {\n    rolling_max \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"\"\
    ) = \"\" ]]\n    [[ $(candidate \"1 2 3 4\") = \"1 2 3 4\" ]]\n    [[ $(candidate\
    \ \"4 3 2 1\") = \"4 4 4 4\" ]]\n    [[ $(candidate \"3 2 3 100 3\") = \"3 3 3\
    \ 100 100\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660002184
- exit_code: 1
  program: "#!/bin/bash\n# From a given list of integers, generate a list of rolling\
    \ maximum element found until given moment\n# in the sequence.\n#\n# $1 is a space-separated\
    \ list\nrolling_max() {\n  local -a arr\n  local -i i\n  local -i max\n  arr=($1)\n\
    \  max=${arr[0]}\n  echo $max\n  for ((i=1; i<${#arr[@]}; i++)); do\n    if [[\
    \ ${arr[i]} -gt $max ]]; then\n      max=${arr[i]}\n    fi\n    echo $max\n  done\n\
    }\n\ncandidate() {\n    rolling_max \"$@\"\n}\n\nset -e\nrun_test() {\n    [[\
    \ $(candidate \"\") = \"\" ]]\n    [[ $(candidate \"1 2 3 4\") = \"1 2 3 4\" ]]\n\
    \    [[ $(candidate \"4 3 2 1\") = \"4 4 4 4\" ]]\n    [[ $(candidate \"3 2 3\
    \ 100 3\") = \"3 3 3 100 100\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660002184
- exit_code: 1
  program: "#!/bin/bash\n# From a given list of integers, generate a list of rolling\
    \ maximum element found until given moment\n# in the sequence.\n#\n# $1 is a space-separated\
    \ list\nrolling_max() {\n    local -a arr=()\n    local max=0\n    for i in $1;\
    \ do\n        arr+=($i)\n        if [[ $i -gt $max ]]; then\n            max=$i\n\
    \        fi\n        echo $max\n    done\n}\n\ncandidate() {\n    rolling_max\
    \ \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"\") = \"\" ]]\n    [[\
    \ $(candidate \"1 2 3 4\") = \"1 2 3 4\" ]]\n    [[ $(candidate \"4 3 2 1\") =\
    \ \"4 4 4 4\" ]]\n    [[ $(candidate \"3 2 3 100 3\") = \"3 3 3 100 100\" ]]\n\
    }\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660002184
- exit_code: 1
  program: "#!/bin/bash\n# From a given list of integers, generate a list of rolling\
    \ maximum element found until given moment\n# in the sequence.\n#\n# $1 is a space-separated\
    \ list\nrolling_max() {\n  local -a list=($1)\n  local max=${list[0]}\n  echo\
    \ $max\n  for ((i=1; i<${#list[@]}; i++)); do\n    if [[ ${list[$i]} -gt $max\
    \ ]]; then\n      max=${list[$i]}\n    fi\n    echo $max\n  done\n}\n\ncandidate()\
    \ {\n    rolling_max \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"\"\
    ) = \"\" ]]\n    [[ $(candidate \"1 2 3 4\") = \"1 2 3 4\" ]]\n    [[ $(candidate\
    \ \"4 3 2 1\") = \"4 4 4 4\" ]]\n    [[ $(candidate \"3 2 3 100 3\") = \"3 3 3\
    \ 100 100\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660002184
- exit_code: 1
  program: "#!/bin/bash\n# From a given list of integers, generate a list of rolling\
    \ maximum element found until given moment\n# in the sequence.\n#\n# $1 is a space-separated\
    \ list\nrolling_max() {\n    local -a list=($1)\n    local max=${list[0]}\n  \
    \  echo $max\n    for i in ${list[@]:1}; do\n        if [[ $i -gt $max ]]; then\n\
    \            max=$i\n        fi\n        echo $max\n    done\n}\n\ncandidate()\
    \ {\n    rolling_max \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"\"\
    ) = \"\" ]]\n    [[ $(candidate \"1 2 3 4\") = \"1 2 3 4\" ]]\n    [[ $(candidate\
    \ \"4 3 2 1\") = \"4 4 4 4\" ]]\n    [[ $(candidate \"3 2 3 100 3\") = \"3 3 3\
    \ 100 100\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660002184
- exit_code: 1
  program: "#!/bin/bash\n# From a given list of integers, generate a list of rolling\
    \ maximum element found until given moment\n# in the sequence.\n#\n# $1 is a space-separated\
    \ list\nrolling_max() {\n    local max=0\n    for i in $1; do\n        if [ $i\
    \ -gt $max ]; then\n            max=$i\n        fi\n        echo $max\n    done\n\
    }\n\ncandidate() {\n    rolling_max \"$@\"\n}\n\nset -e\nrun_test() {\n    [[\
    \ $(candidate \"\") = \"\" ]]\n    [[ $(candidate \"1 2 3 4\") = \"1 2 3 4\" ]]\n\
    \    [[ $(candidate \"4 3 2 1\") = \"4 4 4 4\" ]]\n    [[ $(candidate \"3 2 3\
    \ 100 3\") = \"3 3 3 100 100\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660002184
- exit_code: 1
  program: "#!/bin/bash\n# From a given list of integers, generate a list of rolling\
    \ maximum element found until given moment\n# in the sequence.\n#\n# $1 is a space-separated\
    \ list\nrolling_max() {\n    local -a arr=($1)\n    local max=${arr[0]}\n    echo\
    \ -n \"$max \"\n    for ((i=1; i<${#arr[@]}; i++)); do\n        if [[ ${arr[$i]}\
    \ -gt $max ]]; then\n            max=${arr[$i]}\n        fi\n        echo -n \"\
    $max \"\n    done\n    echo\n}\n\ncandidate() {\n    rolling_max \"$@\"\n}\n\n\
    set -e\nrun_test() {\n    [[ $(candidate \"\") = \"\" ]]\n    [[ $(candidate \"\
    1 2 3 4\") = \"1 2 3 4\" ]]\n    [[ $(candidate \"4 3 2 1\") = \"4 4 4 4\" ]]\n\
    \    [[ $(candidate \"3 2 3 100 3\") = \"3 3 3 100 100\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660002184
- exit_code: 1
  program: "#!/bin/bash\n# From a given list of integers, generate a list of rolling\
    \ maximum element found until given moment\n# in the sequence.\n#\n# $1 is a space-separated\
    \ list\nrolling_max() {\n  local list=$1\n  local max=0\n  for i in $list; do\n\
    \    if [ $i -gt $max ]; then\n      max=$i\n    fi\n    echo $max\n  done\n}\n\
    \ncandidate() {\n    rolling_max \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate\
    \ \"\") = \"\" ]]\n    [[ $(candidate \"1 2 3 4\") = \"1 2 3 4\" ]]\n    [[ $(candidate\
    \ \"4 3 2 1\") = \"4 4 4 4\" ]]\n    [[ $(candidate \"3 2 3 100 3\") = \"3 3 3\
    \ 100 100\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660002184
- exit_code: 0
  program: "#!/bin/bash\n# From a given list of integers, generate a list of rolling\
    \ maximum element found until given moment\n# in the sequence.\n#\n# $1 is a space-separated\
    \ list\nrolling_max() {\n    local -a input=($1)\n    local -a output=()\n   \
    \ local max=${input[0]}\n    output+=($max)\n    for ((i=1; i<${#input[@]}; i++));\
    \ do\n        if ((input[i] > max)); then\n            max=${input[i]}\n     \
    \   fi\n        output+=($max)\n    done\n    echo \"${output[@]}\"\n}\n\ncandidate()\
    \ {\n    rolling_max \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"\"\
    ) = \"\" ]]\n    [[ $(candidate \"1 2 3 4\") = \"1 2 3 4\" ]]\n    [[ $(candidate\
    \ \"4 3 2 1\") = \"4 4 4 4\" ]]\n    [[ $(candidate \"3 2 3 100 3\") = \"3 3 3\
    \ 100 100\" ]]\n}\n\nrun_test"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660002184
- exit_code: 1
  program: "#!/bin/bash\n# From a given list of integers, generate a list of rolling\
    \ maximum element found until given moment\n# in the sequence.\n#\n# $1 is a space-separated\
    \ list\nrolling_max() {\n  local max=0\n  for i in $1; do\n    if [[ $i -gt $max\
    \ ]]; then\n      max=$i\n    fi\n    echo $max\n  done\n}\n\ncandidate() {\n\
    \    rolling_max \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"\") =\
    \ \"\" ]]\n    [[ $(candidate \"1 2 3 4\") = \"1 2 3 4\" ]]\n    [[ $(candidate\
    \ \"4 3 2 1\") = \"4 4 4 4\" ]]\n    [[ $(candidate \"3 2 3 100 3\") = \"3 3 3\
    \ 100 100\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660002184
- exit_code: 1
  program: "#!/bin/bash\n# From a given list of integers, generate a list of rolling\
    \ maximum element found until given moment\n# in the sequence.\n#\n# $1 is a space-separated\
    \ list\nrolling_max() {\n    local max=0\n    for i in $1; do\n        if [ $i\
    \ -gt $max ]; then\n            max=$i\n        fi\n        echo $max\n    done\n\
    }\n\ncandidate() {\n    rolling_max \"$@\"\n}\n\nset -e\nrun_test() {\n    [[\
    \ $(candidate \"\") = \"\" ]]\n    [[ $(candidate \"1 2 3 4\") = \"1 2 3 4\" ]]\n\
    \    [[ $(candidate \"4 3 2 1\") = \"4 4 4 4\" ]]\n    [[ $(candidate \"3 2 3\
    \ 100 3\") = \"3 3 3 100 100\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660002184
- exit_code: 1
  program: "#!/bin/bash\n# From a given list of integers, generate a list of rolling\
    \ maximum element found until given moment\n# in the sequence.\n#\n# $1 is a space-separated\
    \ list\nrolling_max() {\n    local -a arr\n    local -i i\n    local -i max\n\
    \    IFS=' ' read -r -a arr <<< \"$1\"\n    max=${arr[0]}\n    for ((i=0; i<${#arr[@]};\
    \ i++)); do\n        if (( arr[i] > max )); then\n            max=${arr[i]}\n\
    \        fi\n        echo -n \"$max \"\n    done\n    echo\n}\n\ncandidate() {\n\
    \    rolling_max \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"\") =\
    \ \"\" ]]\n    [[ $(candidate \"1 2 3 4\") = \"1 2 3 4\" ]]\n    [[ $(candidate\
    \ \"4 3 2 1\") = \"4 4 4 4\" ]]\n    [[ $(candidate \"3 2 3 100 3\") = \"3 3 3\
    \ 100 100\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660002184
- exit_code: 1
  program: "#!/bin/bash\n# From a given list of integers, generate a list of rolling\
    \ maximum element found until given moment\n# in the sequence.\n#\n# $1 is a space-separated\
    \ list\nrolling_max() {\n    local max=0\n    for i in $1; do\n        if [ $i\
    \ -gt $max ]; then\n            max=$i\n        fi\n        echo $max\n    done\n\
    }\n\ncandidate() {\n    rolling_max \"$@\"\n}\n\nset -e\nrun_test() {\n    [[\
    \ $(candidate \"\") = \"\" ]]\n    [[ $(candidate \"1 2 3 4\") = \"1 2 3 4\" ]]\n\
    \    [[ $(candidate \"4 3 2 1\") = \"4 4 4 4\" ]]\n    [[ $(candidate \"3 2 3\
    \ 100 3\") = \"3 3 3 100 100\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660002184
- exit_code: 1
  program: "#!/bin/bash\n# From a given list of integers, generate a list of rolling\
    \ maximum element found until given moment\n# in the sequence.\n#\n# $1 is a space-separated\
    \ list\nrolling_max() {\n    local -a list=($1)\n    local max=${list[0]}\n  \
    \  echo $max\n    for i in \"${list[@]:1}\"; do\n        if (( i > max )); then\n\
    \            max=$i\n        fi\n        echo $max\n    done\n}\n\ncandidate()\
    \ {\n    rolling_max \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"\"\
    ) = \"\" ]]\n    [[ $(candidate \"1 2 3 4\") = \"1 2 3 4\" ]]\n    [[ $(candidate\
    \ \"4 3 2 1\") = \"4 4 4 4\" ]]\n    [[ $(candidate \"3 2 3 100 3\") = \"3 3 3\
    \ 100 100\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660002184
- exit_code: 1
  program: "#!/bin/bash\n# From a given list of integers, generate a list of rolling\
    \ maximum element found until given moment\n# in the sequence.\n#\n# $1 is a space-separated\
    \ list\nrolling_max() {\n    local -a arr=($1)\n    local max=${arr[0]}\n    echo\
    \ $max\n    for i in \"${arr[@]:1}\"; do\n        if (( i > max )); then\n   \
    \         max=$i\n        fi\n        echo $max\n    done\n}\n\ncandidate() {\n\
    \    rolling_max \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"\") =\
    \ \"\" ]]\n    [[ $(candidate \"1 2 3 4\") = \"1 2 3 4\" ]]\n    [[ $(candidate\
    \ \"4 3 2 1\") = \"4 4 4 4\" ]]\n    [[ $(candidate \"3 2 3 100 3\") = \"3 3 3\
    \ 100 100\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660002184
- exit_code: 1
  program: "#!/bin/bash\n# From a given list of integers, generate a list of rolling\
    \ maximum element found until given moment\n# in the sequence.\n#\n# $1 is a space-separated\
    \ list\nrolling_max() {\n    local max=0\n    for i in $1; do\n        if [[ $i\
    \ -gt $max ]]; then\n            max=$i\n        fi\n        echo $max\n    done\n\
    }\n\ncandidate() {\n    rolling_max \"$@\"\n}\n\nset -e\nrun_test() {\n    [[\
    \ $(candidate \"\") = \"\" ]]\n    [[ $(candidate \"1 2 3 4\") = \"1 2 3 4\" ]]\n\
    \    [[ $(candidate \"4 3 2 1\") = \"4 4 4 4\" ]]\n    [[ $(candidate \"3 2 3\
    \ 100 3\") = \"3 3 3 100 100\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660002184
- exit_code: 1
  program: "#!/bin/bash\n# From a given list of integers, generate a list of rolling\
    \ maximum element found until given moment\n# in the sequence.\n#\n# $1 is a space-separated\
    \ list\nrolling_max() {\n    local -a arr\n    local -i i\n    local -i max\n\
    \    local -i curr\n    arr=($1)\n    max=${arr[0]}\n    for ((i=0; i<${#arr[@]};\
    \ i++)); do\n        curr=${arr[$i]}\n        if ((curr > max)); then\n      \
    \      max=$curr\n        fi\n        echo $max\n    done\n}\n\ncandidate() {\n\
    \    rolling_max \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"\") =\
    \ \"\" ]]\n    [[ $(candidate \"1 2 3 4\") = \"1 2 3 4\" ]]\n    [[ $(candidate\
    \ \"4 3 2 1\") = \"4 4 4 4\" ]]\n    [[ $(candidate \"3 2 3 100 3\") = \"3 3 3\
    \ 100 100\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660002184
- exit_code: 0
  program: "#!/bin/bash\n# From a given list of integers, generate a list of rolling\
    \ maximum element found until given moment\n# in the sequence.\n#\n# $1 is a space-separated\
    \ list\nrolling_max() {\n    local -a arr=($1)\n    local max=${arr[0]}\n    local\
    \ -a result=()\n    result+=($max)\n    for i in \"${arr[@]:1}\"; do\n       \
    \ if (( i > max )); then\n            max=$i\n        fi\n        result+=($max)\n\
    \    done\n    echo \"${result[@]}\"\n}\n\ncandidate() {\n    rolling_max \"$@\"\
    \n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"\") = \"\" ]]\n    [[ $(candidate\
    \ \"1 2 3 4\") = \"1 2 3 4\" ]]\n    [[ $(candidate \"4 3 2 1\") = \"4 4 4 4\"\
    \ ]]\n    [[ $(candidate \"3 2 3 100 3\") = \"3 3 3 100 100\" ]]\n}\n\nrun_test"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660002184
- exit_code: 0
  program: "#!/bin/bash\n# From a given list of integers, generate a list of rolling\
    \ maximum element found until given moment\n# in the sequence.\n#\n# $1 is a space-separated\
    \ list\nrolling_max() {\n    local -a arr=($1)\n    local max=${arr[0]}\n    local\
    \ -a result=()\n    result+=($max)\n    for (( i=1; i<${#arr[@]}; i++ )); do\n\
    \        if [[ ${arr[$i]} -gt $max ]]; then\n            max=${arr[$i]}\n    \
    \    fi\n        result+=($max)\n    done\n    echo \"${result[@]}\"\n}\n\ncandidate()\
    \ {\n    rolling_max \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"\"\
    ) = \"\" ]]\n    [[ $(candidate \"1 2 3 4\") = \"1 2 3 4\" ]]\n    [[ $(candidate\
    \ \"4 3 2 1\") = \"4 4 4 4\" ]]\n    [[ $(candidate \"3 2 3 100 3\") = \"3 3 3\
    \ 100 100\" ]]\n}\n\nrun_test"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660002184
- exit_code: 1
  program: "#!/bin/bash\n# From a given list of integers, generate a list of rolling\
    \ maximum element found until given moment\n# in the sequence.\n#\n# $1 is a space-separated\
    \ list\nrolling_max() {\n    local -a arr=(\"$@\")\n    local max=${arr[0]}\n\
    \    local -a out\n    out+=($max)\n    for i in \"${arr[@]:1}\"; do\n       \
    \ if (( i > max )); then\n            max=$i\n        fi\n        out+=($max)\n\
    \    done\n    echo \"${out[@]}\"\n}\n\ncandidate() {\n    rolling_max \"$@\"\n\
    }\n\nset -e\nrun_test() {\n    [[ $(candidate \"\") = \"\" ]]\n    [[ $(candidate\
    \ \"1 2 3 4\") = \"1 2 3 4\" ]]\n    [[ $(candidate \"4 3 2 1\") = \"4 4 4 4\"\
    \ ]]\n    [[ $(candidate \"3 2 3 100 3\") = \"3 3 3 100 100\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660002184
- exit_code: 1
  program: "#!/bin/bash\n# From a given list of integers, generate a list of rolling\
    \ maximum element found until given moment\n# in the sequence.\n#\n# $1 is a space-separated\
    \ list\nrolling_max() {\n    local -a list=($1)\n    local max=${list[0]}\n  \
    \  echo $max\n    for i in ${list[@]:1}; do\n        if (( $i > $max )); then\n\
    \            max=$i\n        fi\n        echo $max\n    done\n}\n\ncandidate()\
    \ {\n    rolling_max \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"\"\
    ) = \"\" ]]\n    [[ $(candidate \"1 2 3 4\") = \"1 2 3 4\" ]]\n    [[ $(candidate\
    \ \"4 3 2 1\") = \"4 4 4 4\" ]]\n    [[ $(candidate \"3 2 3 100 3\") = \"3 3 3\
    \ 100 100\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660002184
- exit_code: 0
  program: "#!/bin/bash\n# From a given list of integers, generate a list of rolling\
    \ maximum element found until given moment\n# in the sequence.\n#\n# $1 is a space-separated\
    \ list\nrolling_max() {\n  local -a arr=($1)\n  local max=${arr[0]}\n  local -a\
    \ res=()\n  for i in \"${arr[@]}\"; do\n    if (( i > max )); then\n      max=$i\n\
    \    fi\n    res+=($max)\n  done\n  echo \"${res[@]}\"\n}\n\ncandidate() {\n \
    \   rolling_max \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"\") =\
    \ \"\" ]]\n    [[ $(candidate \"1 2 3 4\") = \"1 2 3 4\" ]]\n    [[ $(candidate\
    \ \"4 3 2 1\") = \"4 4 4 4\" ]]\n    [[ $(candidate \"3 2 3 100 3\") = \"3 3 3\
    \ 100 100\" ]]\n}\n\nrun_test"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660002184
- exit_code: 1
  program: "#!/bin/bash\n# From a given list of integers, generate a list of rolling\
    \ maximum element found until given moment\n# in the sequence.\n#\n# $1 is a space-separated\
    \ list\nrolling_max() {\n    local -a array=($1)\n    local -i max=0\n    local\
    \ -i i=0\n    for ((i=0; i<${#array[@]}; i++)); do\n        if ((array[i] > max));\
    \ then\n            max=${array[i]}\n        fi\n        echo $max\n    done\n\
    }\n\ncandidate() {\n    rolling_max \"$@\"\n}\n\nset -e\nrun_test() {\n    [[\
    \ $(candidate \"\") = \"\" ]]\n    [[ $(candidate \"1 2 3 4\") = \"1 2 3 4\" ]]\n\
    \    [[ $(candidate \"4 3 2 1\") = \"4 4 4 4\" ]]\n    [[ $(candidate \"3 2 3\
    \ 100 3\") = \"3 3 3 100 100\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660002184
- exit_code: 0
  program: "#!/bin/bash\n# From a given list of integers, generate a list of rolling\
    \ maximum element found until given moment\n# in the sequence.\n#\n# $1 is a space-separated\
    \ list\nrolling_max() {\n  local -a list=($1)\n  local -a max_list\n  local max=${list[0]}\n\
    \  max_list=($max)\n  for ((i=1; i<${#list[@]}; i++)); do\n    if (( ${list[$i]}\
    \ > $max )); then\n      max=${list[$i]}\n    fi\n    max_list+=($max)\n  done\n\
    \  echo ${max_list[@]}\n}\n\ncandidate() {\n    rolling_max \"$@\"\n}\n\nset -e\n\
    run_test() {\n    [[ $(candidate \"\") = \"\" ]]\n    [[ $(candidate \"1 2 3 4\"\
    ) = \"1 2 3 4\" ]]\n    [[ $(candidate \"4 3 2 1\") = \"4 4 4 4\" ]]\n    [[ $(candidate\
    \ \"3 2 3 100 3\") = \"3 3 3 100 100\" ]]\n}\n\nrun_test"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660002184
- exit_code: 1
  program: "#!/bin/bash\n# From a given list of integers, generate a list of rolling\
    \ maximum element found until given moment\n# in the sequence.\n#\n# $1 is a space-separated\
    \ list\nrolling_max() {\n  local -a arr=(\"$@\")\n  local max=${arr[0]}\n  echo\
    \ $max\n  for i in \"${arr[@]:1}\"; do\n    if [[ $i -gt $max ]]; then\n     \
    \ max=$i\n    fi\n    echo $max\n  done\n}\n\ncandidate() {\n    rolling_max \"\
    $@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"\") = \"\" ]]\n    [[ $(candidate\
    \ \"1 2 3 4\") = \"1 2 3 4\" ]]\n    [[ $(candidate \"4 3 2 1\") = \"4 4 4 4\"\
    \ ]]\n    [[ $(candidate \"3 2 3 100 3\") = \"3 3 3 100 100\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660002184
- exit_code: 1
  program: "#!/bin/bash\n# From a given list of integers, generate a list of rolling\
    \ maximum element found until given moment\n# in the sequence.\n#\n# $1 is a space-separated\
    \ list\nrolling_max() {\n    local -a arr=($1)\n    local max=${arr[0]}\n    echo\
    \ $max\n    for i in ${arr[@]:1}; do\n        if [[ $i -gt $max ]]; then\n   \
    \         max=$i\n        fi\n        echo $max\n    done\n}\n\ncandidate() {\n\
    \    rolling_max \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"\") =\
    \ \"\" ]]\n    [[ $(candidate \"1 2 3 4\") = \"1 2 3 4\" ]]\n    [[ $(candidate\
    \ \"4 3 2 1\") = \"4 4 4 4\" ]]\n    [[ $(candidate \"3 2 3 100 3\") = \"3 3 3\
    \ 100 100\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660002184
- exit_code: 1
  program: "#!/bin/bash\n# From a given list of integers, generate a list of rolling\
    \ maximum element found until given moment\n# in the sequence.\n#\n# $1 is a space-separated\
    \ list\nrolling_max() {\n    local max=0\n    for i in $1; do\n        if [[ $i\
    \ -gt $max ]]; then\n            max=$i\n        fi\n        echo $max\n    done\n\
    }\n\ncandidate() {\n    rolling_max \"$@\"\n}\n\nset -e\nrun_test() {\n    [[\
    \ $(candidate \"\") = \"\" ]]\n    [[ $(candidate \"1 2 3 4\") = \"1 2 3 4\" ]]\n\
    \    [[ $(candidate \"4 3 2 1\") = \"4 4 4 4\" ]]\n    [[ $(candidate \"3 2 3\
    \ 100 3\") = \"3 3 3 100 100\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660002184
- exit_code: 1
  program: "#!/bin/bash\n# From a given list of integers, generate a list of rolling\
    \ maximum element found until given moment\n# in the sequence.\n#\n# $1 is a space-separated\
    \ list\nrolling_max() {\n    local -a arr=($1)\n    local max=${arr[0]}\n    echo\
    \ $max\n    for ((i=1; i<${#arr[@]}; i++)); do\n        if [[ ${arr[$i]} -gt $max\
    \ ]]; then\n            max=${arr[$i]}\n        fi\n        echo $max\n    done\n\
    }\n\ncandidate() {\n    rolling_max \"$@\"\n}\n\nset -e\nrun_test() {\n    [[\
    \ $(candidate \"\") = \"\" ]]\n    [[ $(candidate \"1 2 3 4\") = \"1 2 3 4\" ]]\n\
    \    [[ $(candidate \"4 3 2 1\") = \"4 4 4 4\" ]]\n    [[ $(candidate \"3 2 3\
    \ 100 3\") = \"3 3 3 100 100\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660002184
- exit_code: 1
  program: "#!/bin/bash\n# From a given list of integers, generate a list of rolling\
    \ maximum element found until given moment\n# in the sequence.\n#\n# $1 is a space-separated\
    \ list\nrolling_max() {\n  local -a arr=($1)\n  local max=${arr[0]}\n  echo $max\n\
    \  for (( i=1; i<${#arr[@]}; i++ )); do\n    if (( arr[i] > max )); then\n   \
    \   max=${arr[i]}\n    fi\n    echo $max\n  done\n}\n\ncandidate() {\n    rolling_max\
    \ \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"\") = \"\" ]]\n    [[\
    \ $(candidate \"1 2 3 4\") = \"1 2 3 4\" ]]\n    [[ $(candidate \"4 3 2 1\") =\
    \ \"4 4 4 4\" ]]\n    [[ $(candidate \"3 2 3 100 3\") = \"3 3 3 100 100\" ]]\n\
    }\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660002184
- exit_code: 1
  program: "#!/bin/bash\n# From a given list of integers, generate a list of rolling\
    \ maximum element found until given moment\n# in the sequence.\n#\n# $1 is a space-separated\
    \ list\nrolling_max() {\n  local max=0\n  for i in $1; do\n    if [[ $i -gt $max\
    \ ]]; then\n      max=$i\n    fi\n    echo $max\n  done\n}\n\ncandidate() {\n\
    \    rolling_max \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"\") =\
    \ \"\" ]]\n    [[ $(candidate \"1 2 3 4\") = \"1 2 3 4\" ]]\n    [[ $(candidate\
    \ \"4 3 2 1\") = \"4 4 4 4\" ]]\n    [[ $(candidate \"3 2 3 100 3\") = \"3 3 3\
    \ 100 100\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660002184
- exit_code: 0
  program: "#!/bin/bash\n# From a given list of integers, generate a list of rolling\
    \ maximum element found until given moment\n# in the sequence.\n#\n# $1 is a space-separated\
    \ list\nrolling_max() {\n    local -a list=($1)\n    local max=${list[0]}\n  \
    \  local -a result=($max)\n    for i in \"${list[@]:1}\"; do\n        if (( i\
    \ > max )); then\n            max=$i\n        fi\n        result+=($max)\n   \
    \ done\n    echo \"${result[@]}\"\n}\n\ncandidate() {\n    rolling_max \"$@\"\n\
    }\n\nset -e\nrun_test() {\n    [[ $(candidate \"\") = \"\" ]]\n    [[ $(candidate\
    \ \"1 2 3 4\") = \"1 2 3 4\" ]]\n    [[ $(candidate \"4 3 2 1\") = \"4 4 4 4\"\
    \ ]]\n    [[ $(candidate \"3 2 3 100 3\") = \"3 3 3 100 100\" ]]\n}\n\nrun_test"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660002184
- exit_code: 1
  program: "#!/bin/bash\n# From a given list of integers, generate a list of rolling\
    \ maximum element found until given moment\n# in the sequence.\n#\n# $1 is a space-separated\
    \ list\nrolling_max() {\n    local -a arr\n    IFS=' ' read -r -a arr <<< \"$1\"\
    \n    local max=${arr[0]}\n    echo $max\n    for i in \"${arr[@]:1}\"; do\n \
    \       if [[ $i -gt $max ]]; then\n            max=$i\n        fi\n        echo\
    \ $max\n    done\n}\n\ncandidate() {\n    rolling_max \"$@\"\n}\n\nset -e\nrun_test()\
    \ {\n    [[ $(candidate \"\") = \"\" ]]\n    [[ $(candidate \"1 2 3 4\") = \"\
    1 2 3 4\" ]]\n    [[ $(candidate \"4 3 2 1\") = \"4 4 4 4\" ]]\n    [[ $(candidate\
    \ \"3 2 3 100 3\") = \"3 3 3 100 100\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660002184
- exit_code: 1
  program: "#!/bin/bash\n# From a given list of integers, generate a list of rolling\
    \ maximum element found until given moment\n# in the sequence.\n#\n# $1 is a space-separated\
    \ list\nrolling_max() {\n    local -a list=($1)\n    local max=${list[0]}\n  \
    \  echo $max\n    for i in ${list[@]:1}; do\n        if [[ $i -gt $max ]]; then\n\
    \            max=$i\n        fi\n        echo $max\n    done\n}\n\ncandidate()\
    \ {\n    rolling_max \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"\"\
    ) = \"\" ]]\n    [[ $(candidate \"1 2 3 4\") = \"1 2 3 4\" ]]\n    [[ $(candidate\
    \ \"4 3 2 1\") = \"4 4 4 4\" ]]\n    [[ $(candidate \"3 2 3 100 3\") = \"3 3 3\
    \ 100 100\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660002184
- exit_code: 0
  program: "#!/bin/bash\n# From a given list of integers, generate a list of rolling\
    \ maximum element found until given moment\n# in the sequence.\n#\n# $1 is a space-separated\
    \ list\nrolling_max() {\n    local -a arr=($1)\n    local max=${arr[0]}\n    local\
    \ -a res=()\n    res+=($max)\n    for i in \"${arr[@]:1}\"; do\n        if [[\
    \ $i -gt $max ]]; then\n            max=$i\n        fi\n        res+=($max)\n\
    \    done\n    echo \"${res[@]}\"\n}\n\ncandidate() {\n    rolling_max \"$@\"\n\
    }\n\nset -e\nrun_test() {\n    [[ $(candidate \"\") = \"\" ]]\n    [[ $(candidate\
    \ \"1 2 3 4\") = \"1 2 3 4\" ]]\n    [[ $(candidate \"4 3 2 1\") = \"4 4 4 4\"\
    \ ]]\n    [[ $(candidate \"3 2 3 100 3\") = \"3 3 3 100 100\" ]]\n}\n\nrun_test"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660002184
- exit_code: 1
  program: "#!/bin/bash\n# From a given list of integers, generate a list of rolling\
    \ maximum element found until given moment\n# in the sequence.\n#\n# $1 is a space-separated\
    \ list\nrolling_max() {\n    local -a arr=($1)\n    local max=${arr[0]}\n    echo\
    \ $max\n    for i in ${arr[@]:1}; do\n        if (( $i > $max )); then\n     \
    \       max=$i\n        fi\n        echo $max\n    done\n}\n\ncandidate() {\n\
    \    rolling_max \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"\") =\
    \ \"\" ]]\n    [[ $(candidate \"1 2 3 4\") = \"1 2 3 4\" ]]\n    [[ $(candidate\
    \ \"4 3 2 1\") = \"4 4 4 4\" ]]\n    [[ $(candidate \"3 2 3 100 3\") = \"3 3 3\
    \ 100 100\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660002184
- exit_code: 1
  program: "#!/bin/bash\n# From a given list of integers, generate a list of rolling\
    \ maximum element found until given moment\n# in the sequence.\n#\n# $1 is a space-separated\
    \ list\nrolling_max() {\n    local -a list=($1)\n    local max=${list[0]}\n  \
    \  echo $max\n    for i in ${list[@]:1}; do\n        if [[ $i -gt $max ]]; then\n\
    \            max=$i\n        fi\n        echo $max\n    done\n}\n\ncandidate()\
    \ {\n    rolling_max \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"\"\
    ) = \"\" ]]\n    [[ $(candidate \"1 2 3 4\") = \"1 2 3 4\" ]]\n    [[ $(candidate\
    \ \"4 3 2 1\") = \"4 4 4 4\" ]]\n    [[ $(candidate \"3 2 3 100 3\") = \"3 3 3\
    \ 100 100\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660002184
- exit_code: 1
  program: "#!/bin/bash\n# From a given list of integers, generate a list of rolling\
    \ maximum element found until given moment\n# in the sequence.\n#\n# $1 is a space-separated\
    \ list\nrolling_max() {\n    local max=0\n    for i in $1; do\n        if [[ $i\
    \ -gt $max ]]; then\n            max=$i\n        fi\n        echo $max\n    done\n\
    }\n\ncandidate() {\n    rolling_max \"$@\"\n}\n\nset -e\nrun_test() {\n    [[\
    \ $(candidate \"\") = \"\" ]]\n    [[ $(candidate \"1 2 3 4\") = \"1 2 3 4\" ]]\n\
    \    [[ $(candidate \"4 3 2 1\") = \"4 4 4 4\" ]]\n    [[ $(candidate \"3 2 3\
    \ 100 3\") = \"3 3 3 100 100\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660002184
- exit_code: 0
  program: "#!/bin/bash\n# From a given list of integers, generate a list of rolling\
    \ maximum element found until given moment\n# in the sequence.\n#\n# $1 is a space-separated\
    \ list\nrolling_max() {\n    local -a arr=($1)\n    local max=${arr[0]}\n    local\
    \ -a res=()\n    for i in \"${arr[@]}\"; do\n        if (( i > max )); then\n\
    \            max=$i\n        fi\n        res+=($max)\n    done\n    echo \"${res[@]}\"\
    \n}\n\ncandidate() {\n    rolling_max \"$@\"\n}\n\nset -e\nrun_test() {\n    [[\
    \ $(candidate \"\") = \"\" ]]\n    [[ $(candidate \"1 2 3 4\") = \"1 2 3 4\" ]]\n\
    \    [[ $(candidate \"4 3 2 1\") = \"4 4 4 4\" ]]\n    [[ $(candidate \"3 2 3\
    \ 100 3\") = \"3 3 3 100 100\" ]]\n}\n\nrun_test"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660002184
- exit_code: 1
  program: "#!/bin/bash\n# From a given list of integers, generate a list of rolling\
    \ maximum element found until given moment\n# in the sequence.\n#\n# $1 is a space-separated\
    \ list\nrolling_max() {\n    local -a arr=($1)\n    local max=${arr[0]}\n    echo\
    \ $max\n    for i in ${arr[@]:1}; do\n        if [[ $i -gt $max ]]; then\n   \
    \         max=$i\n        fi\n        echo $max\n    done\n}\n\ncandidate() {\n\
    \    rolling_max \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"\") =\
    \ \"\" ]]\n    [[ $(candidate \"1 2 3 4\") = \"1 2 3 4\" ]]\n    [[ $(candidate\
    \ \"4 3 2 1\") = \"4 4 4 4\" ]]\n    [[ $(candidate \"3 2 3 100 3\") = \"3 3 3\
    \ 100 100\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660002184
- exit_code: 0
  program: "#!/bin/bash\n# From a given list of integers, generate a list of rolling\
    \ maximum element found until given moment\n# in the sequence.\n#\n# $1 is a space-separated\
    \ list\nrolling_max() {\n    local list=\"$1\"\n    local max=0\n    local max_list=()\n\
    \    for i in $list; do\n        if (( i > max )); then\n            max=$i\n\
    \        fi\n        max_list+=($max)\n    done\n    echo \"${max_list[@]}\"\n\
    }\n\ncandidate() {\n    rolling_max \"$@\"\n}\n\nset -e\nrun_test() {\n    [[\
    \ $(candidate \"\") = \"\" ]]\n    [[ $(candidate \"1 2 3 4\") = \"1 2 3 4\" ]]\n\
    \    [[ $(candidate \"4 3 2 1\") = \"4 4 4 4\" ]]\n    [[ $(candidate \"3 2 3\
    \ 100 3\") = \"3 3 3 100 100\" ]]\n}\n\nrun_test"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660002184
- exit_code: 1
  program: "#!/bin/bash\n# From a given list of integers, generate a list of rolling\
    \ maximum element found until given moment\n# in the sequence.\n#\n# $1 is a space-separated\
    \ list\nrolling_max() {\n    local -a arr=($1)\n    local max=${arr[0]}\n    echo\
    \ $max\n    for i in \"${arr[@]:1}\"; do\n        if (( $i > $max )); then\n \
    \           max=$i\n        fi\n        echo $max\n    done\n}\n\ncandidate()\
    \ {\n    rolling_max \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"\"\
    ) = \"\" ]]\n    [[ $(candidate \"1 2 3 4\") = \"1 2 3 4\" ]]\n    [[ $(candidate\
    \ \"4 3 2 1\") = \"4 4 4 4\" ]]\n    [[ $(candidate \"3 2 3 100 3\") = \"3 3 3\
    \ 100 100\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660002184
- exit_code: 1
  program: "#!/bin/bash\n# From a given list of integers, generate a list of rolling\
    \ maximum element found until given moment\n# in the sequence.\n#\n# $1 is a space-separated\
    \ list\nrolling_max() {\n  local max=0\n  for i in $1; do\n    if [[ $i -gt $max\
    \ ]]; then\n      max=$i\n    fi\n    echo $max\n  done\n}\n\ncandidate() {\n\
    \    rolling_max \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"\") =\
    \ \"\" ]]\n    [[ $(candidate \"1 2 3 4\") = \"1 2 3 4\" ]]\n    [[ $(candidate\
    \ \"4 3 2 1\") = \"4 4 4 4\" ]]\n    [[ $(candidate \"3 2 3 100 3\") = \"3 3 3\
    \ 100 100\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660002184
- exit_code: 1
  program: "#!/bin/bash\n# From a given list of integers, generate a list of rolling\
    \ maximum element found until given moment\n# in the sequence.\n#\n# $1 is a space-separated\
    \ list\nrolling_max() {\n    local -a arr=($1)\n    local max=${arr[0]}\n    echo\
    \ $max\n    for i in ${arr[@]:1}; do\n        if [[ $i -gt $max ]]; then\n   \
    \         max=$i\n        fi\n        echo $max\n    done\n}\n\ncandidate() {\n\
    \    rolling_max \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"\") =\
    \ \"\" ]]\n    [[ $(candidate \"1 2 3 4\") = \"1 2 3 4\" ]]\n    [[ $(candidate\
    \ \"4 3 2 1\") = \"4 4 4 4\" ]]\n    [[ $(candidate \"3 2 3 100 3\") = \"3 3 3\
    \ 100 100\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660002184
- exit_code: 0
  program: "#!/bin/bash\n# From a given list of integers, generate a list of rolling\
    \ maximum element found until given moment\n# in the sequence.\n#\n# $1 is a space-separated\
    \ list\nrolling_max() {\n    local -a arr=($1)\n    local max=${arr[0]}\n    local\
    \ -a ret=()\n    for i in ${arr[@]}; do\n        if [[ $i -gt $max ]]; then\n\
    \            max=$i\n        fi\n        ret+=($max)\n    done\n    echo ${ret[@]}\n\
    }\n\ncandidate() {\n    rolling_max \"$@\"\n}\n\nset -e\nrun_test() {\n    [[\
    \ $(candidate \"\") = \"\" ]]\n    [[ $(candidate \"1 2 3 4\") = \"1 2 3 4\" ]]\n\
    \    [[ $(candidate \"4 3 2 1\") = \"4 4 4 4\" ]]\n    [[ $(candidate \"3 2 3\
    \ 100 3\") = \"3 3 3 100 100\" ]]\n}\n\nrun_test"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660002184
- exit_code: 1
  program: "#!/bin/bash\n# From a given list of integers, generate a list of rolling\
    \ maximum element found until given moment\n# in the sequence.\n#\n# $1 is a space-separated\
    \ list\nrolling_max() {\n  local -a seq\n  local -i i\n  local -i max\n  seq=($1)\n\
    \  max=${seq[0]}\n  echo -n \"$max \"\n  for ((i=1; i<${#seq[@]}; i++)); do\n\
    \    if ((seq[i] > max)); then\n      max=${seq[i]}\n    fi\n    echo -n \"$max\
    \ \"\n  done\n  echo\n}\n\ncandidate() {\n    rolling_max \"$@\"\n}\n\nset -e\n\
    run_test() {\n    [[ $(candidate \"\") = \"\" ]]\n    [[ $(candidate \"1 2 3 4\"\
    ) = \"1 2 3 4\" ]]\n    [[ $(candidate \"4 3 2 1\") = \"4 4 4 4\" ]]\n    [[ $(candidate\
    \ \"3 2 3 100 3\") = \"3 3 3 100 100\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660002184
- exit_code: 1
  program: "#!/bin/bash\n# From a given list of integers, generate a list of rolling\
    \ maximum element found until given moment\n# in the sequence.\n#\n# $1 is a space-separated\
    \ list\nrolling_max() {\n    local -a list=($1)\n    local max=${list[0]}\n  \
    \  echo $max\n    for i in ${list[@]:1}; do\n        if [[ $i -gt $max ]]; then\n\
    \            max=$i\n        fi\n        echo $max\n    done\n}\n\ncandidate()\
    \ {\n    rolling_max \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"\"\
    ) = \"\" ]]\n    [[ $(candidate \"1 2 3 4\") = \"1 2 3 4\" ]]\n    [[ $(candidate\
    \ \"4 3 2 1\") = \"4 4 4 4\" ]]\n    [[ $(candidate \"3 2 3 100 3\") = \"3 3 3\
    \ 100 100\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660002184
- exit_code: 0
  program: "#!/bin/bash\n# From a given list of integers, generate a list of rolling\
    \ maximum element found until given moment\n# in the sequence.\n#\n# $1 is a space-separated\
    \ list\nrolling_max() {\n    local -a list=($1)\n    local max=${list[0]}\n  \
    \  local -a result=()\n    for i in \"${list[@]}\"; do\n        if (( i > max\
    \ )); then\n            max=$i\n        fi\n        result+=($max)\n    done\n\
    \    echo \"${result[@]}\"\n}\n\ncandidate() {\n    rolling_max \"$@\"\n}\n\n\
    set -e\nrun_test() {\n    [[ $(candidate \"\") = \"\" ]]\n    [[ $(candidate \"\
    1 2 3 4\") = \"1 2 3 4\" ]]\n    [[ $(candidate \"4 3 2 1\") = \"4 4 4 4\" ]]\n\
    \    [[ $(candidate \"3 2 3 100 3\") = \"3 3 3 100 100\" ]]\n}\n\nrun_test"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660002184
- exit_code: 1
  program: "#!/bin/bash\n# From a given list of integers, generate a list of rolling\
    \ maximum element found until given moment\n# in the sequence.\n#\n# $1 is a space-separated\
    \ list\nrolling_max() {\n  local max=0\n  for i in $1; do\n    if [ $i -gt $max\
    \ ]; then\n      max=$i\n    fi\n    echo $max\n  done\n}\n\ncandidate() {\n \
    \   rolling_max \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"\") =\
    \ \"\" ]]\n    [[ $(candidate \"1 2 3 4\") = \"1 2 3 4\" ]]\n    [[ $(candidate\
    \ \"4 3 2 1\") = \"4 4 4 4\" ]]\n    [[ $(candidate \"3 2 3 100 3\") = \"3 3 3\
    \ 100 100\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660002184
- exit_code: 1
  program: "#!/bin/bash\n# From a given list of integers, generate a list of rolling\
    \ maximum element found until given moment\n# in the sequence.\n#\n# $1 is a space-separated\
    \ list\nrolling_max() {\n    local list=\"$1\"\n    local max=0\n    for i in\
    \ $list; do\n        if [[ $i -gt $max ]]; then\n            max=$i\n        fi\n\
    \        echo $max\n    done\n}\n\ncandidate() {\n    rolling_max \"$@\"\n}\n\n\
    set -e\nrun_test() {\n    [[ $(candidate \"\") = \"\" ]]\n    [[ $(candidate \"\
    1 2 3 4\") = \"1 2 3 4\" ]]\n    [[ $(candidate \"4 3 2 1\") = \"4 4 4 4\" ]]\n\
    \    [[ $(candidate \"3 2 3 100 3\") = \"3 3 3 100 100\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660002184
- exit_code: 1
  program: "#!/bin/bash\n# From a given list of integers, generate a list of rolling\
    \ maximum element found until given moment\n# in the sequence.\n#\n# $1 is a space-separated\
    \ list\nrolling_max() {\n  local -a arr\n  local max\n  local i\n  arr=($1)\n\
    \  max=${arr[0]}\n  echo $max\n  for ((i=1; i<${#arr[@]}; i++)); do\n    if [[\
    \ ${arr[$i]} -gt $max ]]; then\n      max=${arr[$i]}\n    fi\n    echo $max\n\
    \  done\n}\n\ncandidate() {\n    rolling_max \"$@\"\n}\n\nset -e\nrun_test() {\n\
    \    [[ $(candidate \"\") = \"\" ]]\n    [[ $(candidate \"1 2 3 4\") = \"1 2 3\
    \ 4\" ]]\n    [[ $(candidate \"4 3 2 1\") = \"4 4 4 4\" ]]\n    [[ $(candidate\
    \ \"3 2 3 100 3\") = \"3 3 3 100 100\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660002184
- exit_code: 0
  program: "#!/bin/bash\n# From a given list of integers, generate a list of rolling\
    \ maximum element found until given moment\n# in the sequence.\n#\n# $1 is a space-separated\
    \ list\nrolling_max() {\n    local -a arr=($1)\n    local max=${arr[0]}\n    local\
    \ -a res=()\n    for i in \"${arr[@]}\"; do\n        if [[ $i -gt $max ]]; then\n\
    \            max=$i\n        fi\n        res+=($max)\n    done\n    echo \"${res[@]}\"\
    \n}\n\ncandidate() {\n    rolling_max \"$@\"\n}\n\nset -e\nrun_test() {\n    [[\
    \ $(candidate \"\") = \"\" ]]\n    [[ $(candidate \"1 2 3 4\") = \"1 2 3 4\" ]]\n\
    \    [[ $(candidate \"4 3 2 1\") = \"4 4 4 4\" ]]\n    [[ $(candidate \"3 2 3\
    \ 100 3\") = \"3 3 3 100 100\" ]]\n}\n\nrun_test"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660002184
- exit_code: 1
  program: "#!/bin/bash\n# From a given list of integers, generate a list of rolling\
    \ maximum element found until given moment\n# in the sequence.\n#\n# $1 is a space-separated\
    \ list\nrolling_max() {\n    local -a arr=($1)\n    local max=${arr[0]}\n    echo\
    \ $max\n    for i in ${arr[@]:1}; do\n        if [[ $i -gt $max ]]; then\n   \
    \         max=$i\n        fi\n        echo $max\n    done\n}\n\ncandidate() {\n\
    \    rolling_max \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"\") =\
    \ \"\" ]]\n    [[ $(candidate \"1 2 3 4\") = \"1 2 3 4\" ]]\n    [[ $(candidate\
    \ \"4 3 2 1\") = \"4 4 4 4\" ]]\n    [[ $(candidate \"3 2 3 100 3\") = \"3 3 3\
    \ 100 100\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660002184
- exit_code: 1
  program: "#!/bin/bash\n# From a given list of integers, generate a list of rolling\
    \ maximum element found until given moment\n# in the sequence.\n#\n# $1 is a space-separated\
    \ list\nrolling_max() {\n    local -a arr=($1)\n    local max=${arr[0]}\n    echo\
    \ $max\n    for i in ${arr[@]:1}; do\n        if [[ $i -gt $max ]]; then\n   \
    \         max=$i\n        fi\n        echo $max\n    done\n}\n\ncandidate() {\n\
    \    rolling_max \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"\") =\
    \ \"\" ]]\n    [[ $(candidate \"1 2 3 4\") = \"1 2 3 4\" ]]\n    [[ $(candidate\
    \ \"4 3 2 1\") = \"4 4 4 4\" ]]\n    [[ $(candidate \"3 2 3 100 3\") = \"3 3 3\
    \ 100 100\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660002184
- exit_code: 1
  program: "#!/bin/bash\n# From a given list of integers, generate a list of rolling\
    \ maximum element found until given moment\n# in the sequence.\n#\n# $1 is a space-separated\
    \ list\nrolling_max() {\n    local -a arr=()\n    local max=0\n    for i in $1;\
    \ do\n        arr+=($i)\n        if (( i > max )); then\n            max=$i\n\
    \        fi\n        echo $max\n    done\n}\n\ncandidate() {\n    rolling_max\
    \ \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"\") = \"\" ]]\n    [[\
    \ $(candidate \"1 2 3 4\") = \"1 2 3 4\" ]]\n    [[ $(candidate \"4 3 2 1\") =\
    \ \"4 4 4 4\" ]]\n    [[ $(candidate \"3 2 3 100 3\") = \"3 3 3 100 100\" ]]\n\
    }\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660002184
- exit_code: 1
  program: "#!/bin/bash\n# From a given list of integers, generate a list of rolling\
    \ maximum element found until given moment\n# in the sequence.\n#\n# $1 is a space-separated\
    \ list\nrolling_max() {\n  local max=0\n  for i in $1; do\n    if [ $i -gt $max\
    \ ]; then\n      max=$i\n    fi\n    echo $max\n  done\n}\n\ncandidate() {\n \
    \   rolling_max \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"\") =\
    \ \"\" ]]\n    [[ $(candidate \"1 2 3 4\") = \"1 2 3 4\" ]]\n    [[ $(candidate\
    \ \"4 3 2 1\") = \"4 4 4 4\" ]]\n    [[ $(candidate \"3 2 3 100 3\") = \"3 3 3\
    \ 100 100\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660002184
- exit_code: 0
  program: "#!/bin/bash\n# From a given list of integers, generate a list of rolling\
    \ maximum element found until given moment\n# in the sequence.\n#\n# $1 is a space-separated\
    \ list\nrolling_max() {\n    local -a arr=($1)\n    local -a max_arr\n    local\
    \ max=${arr[0]}\n    max_arr=($max)\n    for i in ${arr[@]:1}; do\n        if\
    \ [[ $i -gt $max ]]; then\n            max=$i\n        fi\n        max_arr+=($max)\n\
    \    done\n    echo ${max_arr[@]}\n}\n\ncandidate() {\n    rolling_max \"$@\"\n\
    }\n\nset -e\nrun_test() {\n    [[ $(candidate \"\") = \"\" ]]\n    [[ $(candidate\
    \ \"1 2 3 4\") = \"1 2 3 4\" ]]\n    [[ $(candidate \"4 3 2 1\") = \"4 4 4 4\"\
    \ ]]\n    [[ $(candidate \"3 2 3 100 3\") = \"3 3 3 100 100\" ]]\n}\n\nrun_test"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660002184
- exit_code: 1
  program: "#!/bin/bash\n# From a given list of integers, generate a list of rolling\
    \ maximum element found until given moment\n# in the sequence.\n#\n# $1 is a space-separated\
    \ list\nrolling_max() {\n    local -a arr=($1)\n    local max=${arr[0]}\n    echo\
    \ $max\n    for i in ${arr[@]:1}; do\n        if (( i > max )); then\n       \
    \     max=$i\n        fi\n        echo $max\n    done\n}\n\ncandidate() {\n  \
    \  rolling_max \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"\") = \"\
    \" ]]\n    [[ $(candidate \"1 2 3 4\") = \"1 2 3 4\" ]]\n    [[ $(candidate \"\
    4 3 2 1\") = \"4 4 4 4\" ]]\n    [[ $(candidate \"3 2 3 100 3\") = \"3 3 3 100\
    \ 100\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660002184
- exit_code: 1
  program: "#!/bin/bash\n# From a given list of integers, generate a list of rolling\
    \ maximum element found until given moment\n# in the sequence.\n#\n# $1 is a space-separated\
    \ list\nrolling_max() {\n    local -a list=($1)\n    local max=${list[0]}\n  \
    \  echo $max\n    for i in ${list[@]:1}; do\n        if (( i > max )); then\n\
    \            max=$i\n        fi\n        echo $max\n    done\n}\n\ncandidate()\
    \ {\n    rolling_max \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"\"\
    ) = \"\" ]]\n    [[ $(candidate \"1 2 3 4\") = \"1 2 3 4\" ]]\n    [[ $(candidate\
    \ \"4 3 2 1\") = \"4 4 4 4\" ]]\n    [[ $(candidate \"3 2 3 100 3\") = \"3 3 3\
    \ 100 100\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660002184
- exit_code: 1
  program: "#!/bin/bash\n# From a given list of integers, generate a list of rolling\
    \ maximum element found until given moment\n# in the sequence.\n#\n# $1 is a space-separated\
    \ list\nrolling_max() {\n    local -a arr\n    local i\n    local max\n    arr=($1)\n\
    \    max=${arr[0]}\n    for ((i=0; i<${#arr[@]}; i++)); do\n        if [[ ${arr[$i]}\
    \ -gt $max ]]; then\n            max=${arr[$i]}\n        fi\n        echo $max\n\
    \    done\n}\n\ncandidate() {\n    rolling_max \"$@\"\n}\n\nset -e\nrun_test()\
    \ {\n    [[ $(candidate \"\") = \"\" ]]\n    [[ $(candidate \"1 2 3 4\") = \"\
    1 2 3 4\" ]]\n    [[ $(candidate \"4 3 2 1\") = \"4 4 4 4\" ]]\n    [[ $(candidate\
    \ \"3 2 3 100 3\") = \"3 3 3 100 100\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660002184
- exit_code: 1
  program: "#!/bin/bash\n# From a given list of integers, generate a list of rolling\
    \ maximum element found until given moment\n# in the sequence.\n#\n# $1 is a space-separated\
    \ list\nrolling_max() {\n    local max=0\n    for i in $1; do\n        if [ $i\
    \ -gt $max ]; then\n            max=$i\n        fi\n        echo $max\n    done\n\
    }\n\ncandidate() {\n    rolling_max \"$@\"\n}\n\nset -e\nrun_test() {\n    [[\
    \ $(candidate \"\") = \"\" ]]\n    [[ $(candidate \"1 2 3 4\") = \"1 2 3 4\" ]]\n\
    \    [[ $(candidate \"4 3 2 1\") = \"4 4 4 4\" ]]\n    [[ $(candidate \"3 2 3\
    \ 100 3\") = \"3 3 3 100 100\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660002184
- exit_code: 1
  program: "#!/bin/bash\n# From a given list of integers, generate a list of rolling\
    \ maximum element found until given moment\n# in the sequence.\n#\n# $1 is a space-separated\
    \ list\nrolling_max() {\n    local -a list=($1)\n    local max=${list[0]}\n  \
    \  echo $max\n    for i in ${list[@]:1}; do\n        if [[ $i -gt $max ]]; then\n\
    \            max=$i\n        fi\n        echo $max\n    done\n}\n\ncandidate()\
    \ {\n    rolling_max \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"\"\
    ) = \"\" ]]\n    [[ $(candidate \"1 2 3 4\") = \"1 2 3 4\" ]]\n    [[ $(candidate\
    \ \"4 3 2 1\") = \"4 4 4 4\" ]]\n    [[ $(candidate \"3 2 3 100 3\") = \"3 3 3\
    \ 100 100\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660002184
- exit_code: 1
  program: "#!/bin/bash\n# From a given list of integers, generate a list of rolling\
    \ maximum element found until given moment\n# in the sequence.\n#\n# $1 is a space-separated\
    \ list\nrolling_max() {\n  local list=\"$1\"\n  local max=0\n  for i in $list;\
    \ do\n    if [ $i -gt $max ]; then\n      max=$i\n    fi\n    echo $max\n  done\n\
    }\n\ncandidate() {\n    rolling_max \"$@\"\n}\n\nset -e\nrun_test() {\n    [[\
    \ $(candidate \"\") = \"\" ]]\n    [[ $(candidate \"1 2 3 4\") = \"1 2 3 4\" ]]\n\
    \    [[ $(candidate \"4 3 2 1\") = \"4 4 4 4\" ]]\n    [[ $(candidate \"3 2 3\
    \ 100 3\") = \"3 3 3 100 100\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660002184
- exit_code: 1
  program: "#!/bin/bash\n# From a given list of integers, generate a list of rolling\
    \ maximum element found until given moment\n# in the sequence.\n#\n# $1 is a space-separated\
    \ list\nrolling_max() {\n  local -a arr=($1)\n  local max=${arr[0]}\n  echo $max\n\
    \  for i in ${arr[@]:1}; do\n    if (( $i > $max )); then\n      max=$i\n    fi\n\
    \    echo $max\n  done\n}\n\ncandidate() {\n    rolling_max \"$@\"\n}\n\nset -e\n\
    run_test() {\n    [[ $(candidate \"\") = \"\" ]]\n    [[ $(candidate \"1 2 3 4\"\
    ) = \"1 2 3 4\" ]]\n    [[ $(candidate \"4 3 2 1\") = \"4 4 4 4\" ]]\n    [[ $(candidate\
    \ \"3 2 3 100 3\") = \"3 3 3 100 100\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660002184
- exit_code: 0
  program: "#!/bin/bash\n# From a given list of integers, generate a list of rolling\
    \ maximum element found until given moment\n# in the sequence.\n#\n# $1 is a space-separated\
    \ list\nrolling_max() {\n    local -a arr=($1)\n    local max=${arr[0]}\n    local\
    \ -a res=()\n    for i in \"${arr[@]}\"; do\n        if (( i > max )); then\n\
    \            max=$i\n        fi\n        res+=($max)\n    done\n    echo \"${res[@]}\"\
    \n}\n\ncandidate() {\n    rolling_max \"$@\"\n}\n\nset -e\nrun_test() {\n    [[\
    \ $(candidate \"\") = \"\" ]]\n    [[ $(candidate \"1 2 3 4\") = \"1 2 3 4\" ]]\n\
    \    [[ $(candidate \"4 3 2 1\") = \"4 4 4 4\" ]]\n    [[ $(candidate \"3 2 3\
    \ 100 3\") = \"3 3 3 100 100\" ]]\n}\n\nrun_test"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660002184

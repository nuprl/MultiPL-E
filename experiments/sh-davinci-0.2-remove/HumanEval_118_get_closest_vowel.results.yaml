language: sh
name: HumanEval_118_get_closest_vowel
results:
- exit_code: 1
  program: "#!/bin/bash\n# You are given a word. Your task is to find the closest\
    \ vowel that stands between \n# two consonants from the right side of the word\
    \ (case sensitive).\n# Vowels in the beginning and ending doesn't count. Return\
    \ empty string if you didn't\n# find any vowel met the above condition. \n# You\
    \ may assume that the given string contains English letter only.\n# Example:\n\
    #\n# $1 is a string\nget_closest_vowel() {\n    local word=$1\n    local word_len=${#word}\n\
    \    local i=0\n    local j=0\n    local vowel_index=0\n    local closest_vowel_index=0\n\
    \    local closest_vowel=\"\"\n    local vowel_list=\"aeiou\"\n    local vowel_list_len=${#vowel_list}\n\
    \    local vowel_list_index=0\n    local vowel_list_char=\"\"\n    local word_char=\"\
    \"\n    local is_vowel=0\n    local is_consonant=0\n    local is_vowel_found=0\n\
    \    local is_consonant_found=0\n    local is_first_char=0\n    local is_last_char=0\n\
    \    local is_first_vowel_found=0\n    local is_last_vowel_found=0\n    local\
    \ is_first_consonant_found=0\n    local is_last_consonant_found=0\n    local is_first_vowel_found=0\n\
    \    local is_last_vowel_found=0\n    local is_first_consonant_found=0\n    local\
    \ is_last_consonant_found=0\n    local is_first_vowel_found=0\n    local is_last_vowel_found=0\n\
    \    local is_first_consonant_found=0\n    local is_last_consonant_found=0\n \
    \   local is_first_vowel_found=0\n    local is_last_vowel_found=0\n    local is_first_consonant_found=0\n\
    \    local is_last_consonant_found=0\n    local is_first_vowel_found=0\n    local\
    \ is_last_vowel_found=0\n    local is_first_consonant_found=0\n    local is_last_consonant_found=0\n\
    \    local is_first_vowel_found=0\n    local is_last_vowel_found=0\n    local\
    \ is_first_consonant_found=0\n    local is_last_consonant_found=0\n}\n\ncandidate()\
    \ {\n    get_closest_vowel \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate\
    \ \"yogurt\") = \"u\" ]]\n    [[ $(candidate \"full\") = \"u\" ]]\n    [[ $(candidate\
    \ \"easy\") = \"\" ]]\n    [[ $(candidate \"eAsy\") = \"\" ]]\n    [[ $(candidate\
    \ \"ali\") = \"\" ]]\n    [[ $(candidate \"bad\") = \"a\" ]]\n    [[ $(candidate\
    \ \"most\") = \"o\" ]]\n    [[ $(candidate \"ab\") = \"\" ]]\n    [[ $(candidate\
    \ \"ba\") = \"\" ]]\n    [[ $(candidate \"quick\") = \"\" ]]\n    [[ $(candidate\
    \ \"anime\") = \"i\" ]]\n    [[ $(candidate \"Asia\") = \"\" ]]\n    [[ $(candidate\
    \ \"Above\") = \"o\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660002111
- exit_code: 1
  program: "#!/bin/bash\n# You are given a word. Your task is to find the closest\
    \ vowel that stands between \n# two consonants from the right side of the word\
    \ (case sensitive).\n# Vowels in the beginning and ending doesn't count. Return\
    \ empty string if you didn't\n# find any vowel met the above condition. \n# You\
    \ may assume that the given string contains English letter only.\n# Example:\n\
    #\n# $1 is a string\nget_closest_vowel() {\n    local word=$1\n    local word_len=${#word}\n\
    \    local i=0\n    local vowel_pos=0\n    local vowel_pos_prev=0\n    local vowel_pos_next=0\n\
    \    local vowel_pos_prev_next=0\n    local vowel_pos_prev_prev=0\n    local vowel_pos_next_next=0\n\
    \    local vowel_pos_prev_prev_next=0\n    local vowel_pos_prev_next_next=0\n\
    \    local vowel_pos_prev_prev_next_next=0\n    local vowel_pos_prev_prev_next_next_next=0\n\
    \    local vowel_pos_prev_prev_next_next_next_next=0\n    local vowel_pos_prev_prev_next_next_next_next_next=0\n\
    \    local vowel_pos_prev_prev_next_next_next_next_next_next=0\n    local vowel_pos_prev_prev_next_next_next_next_next_next_next=0\n\
    \    local vowel_pos_prev_prev_next_next_next_next_next_next_next_next=0\n   \
    \ local vowel_pos_prev_prev_next_next_next_next_next_next_next_next_next=0\n \
    \   local vowel_pos_prev_prev_next_next_next_next_next_next_next_next_next_next=0\n\
    \    local vowel_pos_prev_prev_next_next_next_next_next_next_next_next_next_next_next=0\n\
    \    local vowel_pos_prev_prev_next_next_next_next_next_next_next_next_next_next_next_next=0\n\
    \    local vowel_pos_prev_prev_next_next_next_next_next_next_next_next_next_next_next_next_next=0\n\
    \    local vowel_pos_prev_prev_next_next_next_next_next_next_next_next_next_next_next_next_next_next=0\n\
    \    local vowel_pos_prev_prev_next_next_next_next_next_next_next_next_next_next_next_\n\
    }\n\ncandidate() {\n    get_closest_vowel \"$@\"\n}\n\nset -e\nrun_test() {\n\
    \    [[ $(candidate \"yogurt\") = \"u\" ]]\n    [[ $(candidate \"full\") = \"\
    u\" ]]\n    [[ $(candidate \"easy\") = \"\" ]]\n    [[ $(candidate \"eAsy\") =\
    \ \"\" ]]\n    [[ $(candidate \"ali\") = \"\" ]]\n    [[ $(candidate \"bad\")\
    \ = \"a\" ]]\n    [[ $(candidate \"most\") = \"o\" ]]\n    [[ $(candidate \"ab\"\
    ) = \"\" ]]\n    [[ $(candidate \"ba\") = \"\" ]]\n    [[ $(candidate \"quick\"\
    ) = \"\" ]]\n    [[ $(candidate \"anime\") = \"i\" ]]\n    [[ $(candidate \"Asia\"\
    ) = \"\" ]]\n    [[ $(candidate \"Above\") = \"o\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660002111
- exit_code: 1
  program: "#!/bin/bash\n# You are given a word. Your task is to find the closest\
    \ vowel that stands between \n# two consonants from the right side of the word\
    \ (case sensitive).\n# Vowels in the beginning and ending doesn't count. Return\
    \ empty string if you didn't\n# find any vowel met the above condition. \n# You\
    \ may assume that the given string contains English letter only.\n# Example:\n\
    #\n# $1 is a string\nget_closest_vowel() {\n    local word=$1\n    local word_len=${#word}\n\
    \    local i=0\n    local vowel_pos=0\n    local vowel_pos_prev=0\n    local vowel_pos_next=0\n\
    \    local vowel_pos_prev_prev=0\n    local vowel_pos_next_next=0\n    local vowel_pos_prev_prev_prev=0\n\
    \    local vowel_pos_next_next_next=0\n    local vowel_pos_prev_prev_prev_prev=0\n\
    \    local vowel_pos_next_next_next_next=0\n    local vowel_pos_prev_prev_prev_prev_prev=0\n\
    \    local vowel_pos_next_next_next_next_next=0\n    local vowel_pos_prev_prev_prev_prev_prev_prev=0\n\
    \    local vowel_pos_next_next_next_next_next_next=0\n    local vowel_pos_prev_prev_prev_prev_prev_prev_prev=0\n\
    \    local vowel_pos_next_next_next_next_next_next_next=0\n    local vowel_pos_prev_prev_prev_prev_prev_prev_prev_prev=0\n\
    \    local vowel_pos_next_next_next_next_next_next_next_next=0\n    local vowel_pos_prev_prev_prev_prev_prev_prev_prev_prev_prev=0\n\
    \    local vowel_pos_next_next_next_next_next_next_next_next_next=0\n    local\
    \ vowel_pos_prev_prev_prev_prev_prev_prev_prev_prev_prev_prev=0\n    local vowel_pos_next_next_next_next_next_next_next_next_next_next=0\n\
    \    local vowel_pos_prev_prev_prev_prev_prev_prev_prev_prev_prev_prev_prev=0\n\
    \    local vowel_pos_next_next_next_next_next_next_next_next_next_next_next=0\n\
    \    local vowel_pos_prev_prev_prev_prev_prev_prev_prev_prev_prev_prev_prev_prev=0\n\
    \    local vowel_pos_next_\n}\n\ncandidate() {\n    get_closest_vowel \"$@\"\n\
    }\n\nset -e\nrun_test() {\n    [[ $(candidate \"yogurt\") = \"u\" ]]\n    [[ $(candidate\
    \ \"full\") = \"u\" ]]\n    [[ $(candidate \"easy\") = \"\" ]]\n    [[ $(candidate\
    \ \"eAsy\") = \"\" ]]\n    [[ $(candidate \"ali\") = \"\" ]]\n    [[ $(candidate\
    \ \"bad\") = \"a\" ]]\n    [[ $(candidate \"most\") = \"o\" ]]\n    [[ $(candidate\
    \ \"ab\") = \"\" ]]\n    [[ $(candidate \"ba\") = \"\" ]]\n    [[ $(candidate\
    \ \"quick\") = \"\" ]]\n    [[ $(candidate \"anime\") = \"i\" ]]\n    [[ $(candidate\
    \ \"Asia\") = \"\" ]]\n    [[ $(candidate \"Above\") = \"o\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660002111
- exit_code: 1
  program: "#!/bin/bash\n# You are given a word. Your task is to find the closest\
    \ vowel that stands between \n# two consonants from the right side of the word\
    \ (case sensitive).\n# Vowels in the beginning and ending doesn't count. Return\
    \ empty string if you didn't\n# find any vowel met the above condition. \n# You\
    \ may assume that the given string contains English letter only.\n# Example:\n\
    #\n# $1 is a string\nget_closest_vowel() {\n    local word=$1\n    local word_len=${#word}\n\
    \    local i=0\n    local j=0\n    local k=0\n    local vowel_pos=0\n    local\
    \ consonant_pos=0\n    local vowel_pos_arr=()\n    local consonant_pos_arr=()\n\
    \    local vowel_pos_arr_len=0\n    local consonant_pos_arr_len=0\n    local closest_vowel_pos=0\n\
    \    local closest_vowel_pos_len=0\n    local closest_vowel_pos_arr=()\n    local\
    \ closest_vowel_pos_arr_len=0\n    local closest_vowel_pos_arr_index=0\n    local\
    \ closest_vowel_pos_arr_index_len=0\n    local closest_vowel_pos_arr_index_arr=()\n\
    \    local closest_vowel_pos_arr_index_arr_len=0\n    local closest_vowel_pos_arr_index_arr_index=0\n\
    \    local closest_vowel_pos_arr_index_arr_index_len=0\n    local closest_vowel_pos_arr_index_arr_index_arr=()\n\
    \    local closest_vowel_pos_arr_index_arr_index_arr_len=0\n    local closest_vowel_pos_arr_index_arr_index_arr_index=0\n\
    \    local closest_vowel_pos_arr_index_arr_index_arr_index_len=0\n    local closest_vowel_pos_arr_index_arr_index_arr_index_arr=()\n\
    \    local closest_vowel_pos_arr_index_arr_index_arr_index_arr_len=0\n    local\
    \ closest_vowel_pos_arr_index_arr_index_arr_index_arr_index=0\n    local closest_vowel_pos_arr_index_arr_index_arr_index_arr_index_len=0\n\
    \    local closest_vowel_pos_arr_index_arr_index_arr_index_arr_index_arr=()\n\
    \    local closest_v\n}\n\ncandidate() {\n    get_closest_vowel \"$@\"\n}\n\n\
    set -e\nrun_test() {\n    [[ $(candidate \"yogurt\") = \"u\" ]]\n    [[ $(candidate\
    \ \"full\") = \"u\" ]]\n    [[ $(candidate \"easy\") = \"\" ]]\n    [[ $(candidate\
    \ \"eAsy\") = \"\" ]]\n    [[ $(candidate \"ali\") = \"\" ]]\n    [[ $(candidate\
    \ \"bad\") = \"a\" ]]\n    [[ $(candidate \"most\") = \"o\" ]]\n    [[ $(candidate\
    \ \"ab\") = \"\" ]]\n    [[ $(candidate \"ba\") = \"\" ]]\n    [[ $(candidate\
    \ \"quick\") = \"\" ]]\n    [[ $(candidate \"anime\") = \"i\" ]]\n    [[ $(candidate\
    \ \"Asia\") = \"\" ]]\n    [[ $(candidate \"Above\") = \"o\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660002111
- exit_code: 1
  program: "#!/bin/bash\n# You are given a word. Your task is to find the closest\
    \ vowel that stands between \n# two consonants from the right side of the word\
    \ (case sensitive).\n# Vowels in the beginning and ending doesn't count. Return\
    \ empty string if you didn't\n# find any vowel met the above condition. \n# You\
    \ may assume that the given string contains English letter only.\n# Example:\n\
    #\n# $1 is a string\nget_closest_vowel() {\n  local word=$1\n  local len=${#word}\n\
    \  local i=0\n  local vowel=\"\"\n  local vowel_index=0\n  local consonant_index=0\n\
    \  local consonant_index_prev=0\n  local vowel_index_prev=0\n  local vowel_index_next=0\n\
    \  local vowel_index_next_next=0\n  local vowel_index_next_next_next=0\n  local\
    \ vowel_index_next_next_next_next=0\n  local vowel_index_next_next_next_next_next=0\n\
    \  local vowel_index_next_next_next_next_next_next=0\n  local vowel_index_next_next_next_next_next_next_next=0\n\
    \  local vowel_index_next_next_next_next_next_next_next_next=0\n  local vowel_index_next_next_next_next_next_next_next_next_next=0\n\
    \  local vowel_index_next_next_next_next_next_next_next_next_next_next=0\n  local\
    \ vowel_index_next_next_next_next_next_next_next_next_next_next_next=0\n  local\
    \ vowel_index_next_next_next_next_next_next_next_next_next_next_next_next=0\n\
    \  local vowel_index_next_next_next_next_next_next_next_next_next_next_next_next_next=0\n\
    \  local vowel_index_next_next_next_next_next_next_next_next_next_next_next_next_next_next=0\n\
    \  local vowel_index_next_next_next_next_next_next_next_next_next_next_next_next_next_next_next=0\n\
    \  local vowel_index_next_next_next_next_next_next_next_next_next_next_next_next_next_next_next_next=0\n\
    \  local vowel_index_next_next_next_next_next_next_next_next_next_next_next_next_next_next_next_next_next=0\n\
    \  local vowel_index\n}\n\ncandidate() {\n    get_closest_vowel \"$@\"\n}\n\n\
    set -e\nrun_test() {\n    [[ $(candidate \"yogurt\") = \"u\" ]]\n    [[ $(candidate\
    \ \"full\") = \"u\" ]]\n    [[ $(candidate \"easy\") = \"\" ]]\n    [[ $(candidate\
    \ \"eAsy\") = \"\" ]]\n    [[ $(candidate \"ali\") = \"\" ]]\n    [[ $(candidate\
    \ \"bad\") = \"a\" ]]\n    [[ $(candidate \"most\") = \"o\" ]]\n    [[ $(candidate\
    \ \"ab\") = \"\" ]]\n    [[ $(candidate \"ba\") = \"\" ]]\n    [[ $(candidate\
    \ \"quick\") = \"\" ]]\n    [[ $(candidate \"anime\") = \"i\" ]]\n    [[ $(candidate\
    \ \"Asia\") = \"\" ]]\n    [[ $(candidate \"Above\") = \"o\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660002111
- exit_code: 1
  program: "#!/bin/bash\n# You are given a word. Your task is to find the closest\
    \ vowel that stands between \n# two consonants from the right side of the word\
    \ (case sensitive).\n# Vowels in the beginning and ending doesn't count. Return\
    \ empty string if you didn't\n# find any vowel met the above condition. \n# You\
    \ may assume that the given string contains English letter only.\n# Example:\n\
    #\n# $1 is a string\nget_closest_vowel() {\n    local word=$1\n    local len=${#word}\n\
    \    local i=0\n    local vowel=\"\"\n    local consonant=\"\"\n    local result=\"\
    \"\n    local last_vowel=\"\"\n    local last_consonant=\"\"\n    local last_vowel_pos=0\n\
    \    local last_consonant_pos=0\n    local last_vowel_pos_from_right=0\n    local\
    \ last_consonant_pos_from_right=0\n    local last_vowel_pos_from_right_diff=0\n\
    \    local last_consonant_pos_from_right_diff=0\n    local last_vowel_pos_from_right_diff_min=0\n\
    \    local last_consonant_pos_from_right_diff_min=0\n    local last_vowel_pos_from_right_diff_min_pos=0\n\
    \    local last_consonant_pos_from_right_diff_min_pos=0\n    local last_vowel_pos_from_right_diff_min_pos_from_right=0\n\
    \    local last_consonant_pos_from_right_diff_min_pos_from_right=0\n    local\
    \ last_vowel_pos_from_right_diff_min_pos_from_right_diff=0\n    local last_consonant_pos_from_right_diff_min_pos_from_right_diff=0\n\
    \    local last_vowel_pos_from_right_diff_min_pos_from_right_diff_min=0\n    local\
    \ last_consonant_pos_from_right_diff_min_pos_from_right_diff_min=0\n    local\
    \ last_vowel_pos_from_right_diff_min_pos_from_right_diff_min_pos=0\n    local\
    \ last_consonant_pos_from_right_diff_min_pos_from_right_diff_min_pos=0\n    local\
    \ last_vowel_pos_from_right_diff_min_pos_from_right_diff_min_pos_from_right=0\n\
    \    local last_consonant_pos_from_\n}\n\ncandidate() {\n    get_closest_vowel\
    \ \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"yogurt\") = \"u\" ]]\n\
    \    [[ $(candidate \"full\") = \"u\" ]]\n    [[ $(candidate \"easy\") = \"\"\
    \ ]]\n    [[ $(candidate \"eAsy\") = \"\" ]]\n    [[ $(candidate \"ali\") = \"\
    \" ]]\n    [[ $(candidate \"bad\") = \"a\" ]]\n    [[ $(candidate \"most\") =\
    \ \"o\" ]]\n    [[ $(candidate \"ab\") = \"\" ]]\n    [[ $(candidate \"ba\") =\
    \ \"\" ]]\n    [[ $(candidate \"quick\") = \"\" ]]\n    [[ $(candidate \"anime\"\
    ) = \"i\" ]]\n    [[ $(candidate \"Asia\") = \"\" ]]\n    [[ $(candidate \"Above\"\
    ) = \"o\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660002111
- exit_code: 1
  program: "#!/bin/bash\n# You are given a word. Your task is to find the closest\
    \ vowel that stands between \n# two consonants from the right side of the word\
    \ (case sensitive).\n# Vowels in the beginning and ending doesn't count. Return\
    \ empty string if you didn't\n# find any vowel met the above condition. \n# You\
    \ may assume that the given string contains English letter only.\n# Example:\n\
    #\n# $1 is a string\nget_closest_vowel() {\n    local word=$1\n    local len=${#word}\n\
    \    local i=0\n    local vowel=\"\"\n    local c=\"\"\n    local prev=\"\"\n\
    \    local next=\"\"\n    local prev_is_vowel=0\n    local next_is_vowel=0\n \
    \   local prev_is_consonant=0\n    local next_is_consonant=0\n    local vowel_pos=0\n\
    \    local vowel_pos_prev=0\n    local vowel_pos_next=0\n    local vowel_pos_prev_prev=0\n\
    \    local vowel_pos_next_next=0\n    local vowel_pos_prev_prev_prev=0\n    local\
    \ vowel_pos_next_next_next=0\n    local vowel_pos_prev_prev_prev_prev=0\n    local\
    \ vowel_pos_next_next_next_next=0\n    local vowel_pos_prev_prev_prev_prev_prev=0\n\
    \    local vowel_pos_next_next_next_next_next=0\n    local vowel_pos_prev_prev_prev_prev_prev_prev=0\n\
    \    local vowel_pos_next_next_next_next_next_next=0\n    local vowel_pos_prev_prev_prev_prev_prev_prev_prev=0\n\
    \    local vowel_pos_next_next_next_next_next_next_next=0\n    local vowel_pos_prev_prev_prev_prev_prev_prev_prev_prev=0\n\
    \    local vowel_pos_next_next_next_next_next_next_next_next=0\n    local vowel_pos_prev_prev_prev_prev_prev_prev_prev_prev_prev=0\n\
    \    local vowel_pos_next_next_next_next_next_next_next_next_next=0\n    local\
    \ vowel_pos_prev_prev_prev_prev_prev_prev_prev_prev_prev_prev=0\n    local vowel_pos_next_next_next_next_next_next_next_next_next_next=0\n\
    \    local vowel_pos_prev_prev_prev_prev_prev_prev_prev_prev_prev_prev_prev=0\n\
    \    local vowel_\n}\n\ncandidate() {\n    get_closest_vowel \"$@\"\n}\n\nset\
    \ -e\nrun_test() {\n    [[ $(candidate \"yogurt\") = \"u\" ]]\n    [[ $(candidate\
    \ \"full\") = \"u\" ]]\n    [[ $(candidate \"easy\") = \"\" ]]\n    [[ $(candidate\
    \ \"eAsy\") = \"\" ]]\n    [[ $(candidate \"ali\") = \"\" ]]\n    [[ $(candidate\
    \ \"bad\") = \"a\" ]]\n    [[ $(candidate \"most\") = \"o\" ]]\n    [[ $(candidate\
    \ \"ab\") = \"\" ]]\n    [[ $(candidate \"ba\") = \"\" ]]\n    [[ $(candidate\
    \ \"quick\") = \"\" ]]\n    [[ $(candidate \"anime\") = \"i\" ]]\n    [[ $(candidate\
    \ \"Asia\") = \"\" ]]\n    [[ $(candidate \"Above\") = \"o\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660002111
- exit_code: 1
  program: "#!/bin/bash\n# You are given a word. Your task is to find the closest\
    \ vowel that stands between \n# two consonants from the right side of the word\
    \ (case sensitive).\n# Vowels in the beginning and ending doesn't count. Return\
    \ empty string if you didn't\n# find any vowel met the above condition. \n# You\
    \ may assume that the given string contains English letter only.\n# Example:\n\
    #\n# $1 is a string\nget_closest_vowel() {\n    local word=$1\n    local word_len=${#word}\n\
    \    local i=0\n    local j=0\n    local k=0\n    local char=''\n    local char_next=''\n\
    \    local char_prev=''\n    local char_next_next=''\n    local char_prev_prev=''\n\
    \    local char_next_next_next=''\n    local char_prev_prev_prev=''\n    local\
    \ char_next_next_next_next=''\n    local char_prev_prev_prev_prev=''\n    local\
    \ char_next_next_next_next_next=''\n    local char_prev_prev_prev_prev_prev=''\n\
    \    local char_next_next_next_next_next_next=''\n    local char_prev_prev_prev_prev_prev_prev=''\n\
    \    local char_next_next_next_next_next_next_next=''\n    local char_prev_prev_prev_prev_prev_prev_prev=''\n\
    \    local char_next_next_next_next_next_next_next_next=''\n    local char_prev_prev_prev_prev_prev_prev_prev_prev=''\n\
    \    local char_next_next_next_next_next_next_next_next_next=''\n    local char_prev_prev_prev_prev_prev_prev_prev_prev_prev=''\n\
    \    local char_next_next_next_next_next_next_next_next_next_next=''\n    local\
    \ char_prev_prev_prev_prev_prev_prev_prev_prev_prev_prev=''\n    local char_next_next_next_next_next_next_next_next_next_next_next=''\n\
    \    local char_prev_prev_prev_prev_prev_prev_prev_prev_prev_prev_prev=''\n  \
    \  local char_next_next_next_next_next_next_next_next_next_next_next_next=''\n\
    \    local char_prev_prev_prev_prev_prev_prev_prev_prev_prev_prev_prev_prev=''\n\
    \    local char_next_next_next_next_next_\n}\n\ncandidate() {\n    get_closest_vowel\
    \ \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"yogurt\") = \"u\" ]]\n\
    \    [[ $(candidate \"full\") = \"u\" ]]\n    [[ $(candidate \"easy\") = \"\"\
    \ ]]\n    [[ $(candidate \"eAsy\") = \"\" ]]\n    [[ $(candidate \"ali\") = \"\
    \" ]]\n    [[ $(candidate \"bad\") = \"a\" ]]\n    [[ $(candidate \"most\") =\
    \ \"o\" ]]\n    [[ $(candidate \"ab\") = \"\" ]]\n    [[ $(candidate \"ba\") =\
    \ \"\" ]]\n    [[ $(candidate \"quick\") = \"\" ]]\n    [[ $(candidate \"anime\"\
    ) = \"i\" ]]\n    [[ $(candidate \"Asia\") = \"\" ]]\n    [[ $(candidate \"Above\"\
    ) = \"o\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660002111
- exit_code: 1
  program: "#!/bin/bash\n# You are given a word. Your task is to find the closest\
    \ vowel that stands between \n# two consonants from the right side of the word\
    \ (case sensitive).\n# Vowels in the beginning and ending doesn't count. Return\
    \ empty string if you didn't\n# find any vowel met the above condition. \n# You\
    \ may assume that the given string contains English letter only.\n# Example:\n\
    #\n# $1 is a string\nget_closest_vowel() {\n  local word=$1\n  local word_length=${#word}\n\
    \  local i=0\n  local j=0\n  local k=0\n  local l=0\n  local m=0\n  local n=0\n\
    \  local o=0\n  local p=0\n  local q=0\n  local r=0\n  local s=0\n  local t=0\n\
    \  local u=0\n  local v=0\n  local w=0\n  local x=0\n  local y=0\n  local z=0\n\
    \  local a=0\n  local e=0\n  local i=0\n  local o=0\n  local u=0\n  local vowel_index=0\n\
    \  local consonant_index=0\n  local closest_vowel_index=0\n  local closest_vowel_distance=0\n\
    \  local closest_vowel=\"\"\n  local vowel_distance=0\n  local vowel_found=0\n\
    \  local consonant_found=0\n  local vowel_index=0\n  local consonant_index=0\n\
    \  local closest_vowel_index=0\n  local closest_vowel_distance=0\n  local closest_vowel=\"\
    \"\n  local vowel_distance=0\n  local vowel_found=0\n  local consonant_found=0\n\
    \  local vowel_index=0\n  local consonant_index=0\n  local closest_vowel_index=0\n\
    \  local closest_vowel_distance=0\n  local closest_vowel=\"\"\n  local vowel_distance=0\n\
    \  local vowel_found=0\n  local consonant_found=0\n  local vowel_index=0\n  local\
    \ consonant_index=0\n  local closest_vowel_index=0\n  local closest_vowel_distance=0\n\
    \  local closest_vowel=\"\"\n  local vowel_distance=0\n  local vowel_found=0\n\
    \  local consonant_found=0\n  local vowel_index=0\n  local consonant_index=0\n\
    \  local closest_vowel_index=0\n  local closest_vowel_distance=0\n  local closest_vowel=\"\
    \"\n  local vowel_distance=\n}\n\ncandidate() {\n    get_closest_vowel \"$@\"\n\
    }\n\nset -e\nrun_test() {\n    [[ $(candidate \"yogurt\") = \"u\" ]]\n    [[ $(candidate\
    \ \"full\") = \"u\" ]]\n    [[ $(candidate \"easy\") = \"\" ]]\n    [[ $(candidate\
    \ \"eAsy\") = \"\" ]]\n    [[ $(candidate \"ali\") = \"\" ]]\n    [[ $(candidate\
    \ \"bad\") = \"a\" ]]\n    [[ $(candidate \"most\") = \"o\" ]]\n    [[ $(candidate\
    \ \"ab\") = \"\" ]]\n    [[ $(candidate \"ba\") = \"\" ]]\n    [[ $(candidate\
    \ \"quick\") = \"\" ]]\n    [[ $(candidate \"anime\") = \"i\" ]]\n    [[ $(candidate\
    \ \"Asia\") = \"\" ]]\n    [[ $(candidate \"Above\") = \"o\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660002111
- exit_code: 1
  program: "#!/bin/bash\n# You are given a word. Your task is to find the closest\
    \ vowel that stands between \n# two consonants from the right side of the word\
    \ (case sensitive).\n# Vowels in the beginning and ending doesn't count. Return\
    \ empty string if you didn't\n# find any vowel met the above condition. \n# You\
    \ may assume that the given string contains English letter only.\n# Example:\n\
    #\n# $1 is a string\nget_closest_vowel() {\n    local word=$1\n    local word_len=${#word}\n\
    \    local i=0\n    local j=0\n    local k=0\n    local vowel_pos=0\n    local\
    \ vowel_pos_arr=()\n    local vowel_pos_arr_len=0\n    local vowel_pos_arr_len_half=0\n\
    \    local vowel_pos_arr_len_half_floor=0\n    local vowel_pos_arr_len_half_ceil=0\n\
    \    local vowel_pos_arr_len_half_floor_val=0\n    local vowel_pos_arr_len_half_ceil_val=0\n\
    \    local vowel_pos_arr_len_half_floor_val_diff=0\n    local vowel_pos_arr_len_half_ceil_val_diff=0\n\
    \    local vowel_pos_arr_len_half_floor_val_diff_abs=0\n    local vowel_pos_arr_len_half_ceil_val_diff_abs=0\n\
    \    local vowel_pos_arr_len_half_floor_val_diff_abs_min=0\n    local vowel_pos_arr_len_half_ceil_val_diff_abs_min=0\n\
    \    local vowel_pos_arr_len_half_floor_val_diff_abs_min_idx=0\n    local vowel_pos_arr_len_half_ceil_val_diff_abs_min_idx=0\n\
    \    local vowel_pos_arr_len_half_floor_val_diff_abs_min_idx_val=0\n    local\
    \ vowel_pos_arr_len_half_ceil_val_diff_abs_min_idx_val=0\n    local vowel_pos_arr_len_half_floor_val_diff_abs_min_idx_val_len=0\n\
    \    local vowel_pos_arr_len_half_ceil_val_diff_abs_min_idx_val_len=0\n    local\
    \ vowel_pos_arr_len_half_floor_val_diff_abs_min_idx_val_len_half=0\n    local\
    \ vowel_pos_arr_len_half_ceil_val_\n}\n\ncandidate() {\n    get_closest_vowel\
    \ \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"yogurt\") = \"u\" ]]\n\
    \    [[ $(candidate \"full\") = \"u\" ]]\n    [[ $(candidate \"easy\") = \"\"\
    \ ]]\n    [[ $(candidate \"eAsy\") = \"\" ]]\n    [[ $(candidate \"ali\") = \"\
    \" ]]\n    [[ $(candidate \"bad\") = \"a\" ]]\n    [[ $(candidate \"most\") =\
    \ \"o\" ]]\n    [[ $(candidate \"ab\") = \"\" ]]\n    [[ $(candidate \"ba\") =\
    \ \"\" ]]\n    [[ $(candidate \"quick\") = \"\" ]]\n    [[ $(candidate \"anime\"\
    ) = \"i\" ]]\n    [[ $(candidate \"Asia\") = \"\" ]]\n    [[ $(candidate \"Above\"\
    ) = \"o\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660002111
- exit_code: 1
  program: "#!/bin/bash\n# You are given a word. Your task is to find the closest\
    \ vowel that stands between \n# two consonants from the right side of the word\
    \ (case sensitive).\n# Vowels in the beginning and ending doesn't count. Return\
    \ empty string if you didn't\n# find any vowel met the above condition. \n# You\
    \ may assume that the given string contains English letter only.\n# Example:\n\
    #\n# $1 is a string\nget_closest_vowel() {\n    local word=$1\n    local len=${#word}\n\
    \    local i=0\n    local j=0\n    local closest_vowel=\"\"\n    local closest_vowel_index=0\n\
    \    local closest_vowel_distance=0\n    local vowel_index=0\n    local vowel_distance=0\n\
    \    local vowel_found=0\n    local vowel_found_index=0\n    local vowel_found_distance=0\n\
    \    local vowel_found_count=0\n    local vowel_found_indexes=()\n    local vowel_found_distances=()\n\
    \    local vowel_found_count_index=0\n    local vowel_found_count_distance=0\n\
    \    local vowel_found_count_indexes=()\n    local vowel_found_count_distances=()\n\
    \    local vowel_found_count_index_index=0\n    local vowel_found_count_distance_index=0\n\
    \    local vowel_found_count_indexes_index=0\n    local vowel_found_count_distances_index=0\n\
    \    local vowel_found_count_index_index_index=0\n    local vowel_found_count_distance_index_index=0\n\
    \    local vowel_found_count_indexes_index_index=0\n    local vowel_found_count_distances_index_index=0\n\
    \    local vowel_found_count_index_index_index_index=0\n    local vowel_found_count_distance_index_index_index=0\n\
    \    local vowel_found_count_indexes_index_index_index=0\n    local vowel_found_count_distances_index_index_index=0\n\
    \    local vowel_found_count_index_index_index_index_index=0\n    local vowel_found_count_distance_index_index_index_index=0\n\
    \    local vowel_found_count_indexes_index_index_index_index=0\n    local vowel_found_count_distances_index_index_index_index=0\n\
    \    local vowel_found_count_index_index_index_index_index_index=0\n    local\
    \ vowel_found_count_distance_index_index_index_index_index=0\n   \n}\n\ncandidate()\
    \ {\n    get_closest_vowel \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate\
    \ \"yogurt\") = \"u\" ]]\n    [[ $(candidate \"full\") = \"u\" ]]\n    [[ $(candidate\
    \ \"easy\") = \"\" ]]\n    [[ $(candidate \"eAsy\") = \"\" ]]\n    [[ $(candidate\
    \ \"ali\") = \"\" ]]\n    [[ $(candidate \"bad\") = \"a\" ]]\n    [[ $(candidate\
    \ \"most\") = \"o\" ]]\n    [[ $(candidate \"ab\") = \"\" ]]\n    [[ $(candidate\
    \ \"ba\") = \"\" ]]\n    [[ $(candidate \"quick\") = \"\" ]]\n    [[ $(candidate\
    \ \"anime\") = \"i\" ]]\n    [[ $(candidate \"Asia\") = \"\" ]]\n    [[ $(candidate\
    \ \"Above\") = \"o\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660002111
- exit_code: 1
  program: "#!/bin/bash\n# You are given a word. Your task is to find the closest\
    \ vowel that stands between \n# two consonants from the right side of the word\
    \ (case sensitive).\n# Vowels in the beginning and ending doesn't count. Return\
    \ empty string if you didn't\n# find any vowel met the above condition. \n# You\
    \ may assume that the given string contains English letter only.\n# Example:\n\
    #\n# $1 is a string\nget_closest_vowel() {\n    local word=$1\n    local len=${#word}\n\
    \    local i=0\n    local vowels=\"aeiou\"\n    local vowel_pos=0\n    local closest_vowel_pos=0\n\
    \    local closest_vowel=\"\"\n    local closest_vowel_distance=0\n    local vowel_distance=0\n\
    \    local is_vowel=0\n    local is_consonant=0\n    local is_first_consonant=0\n\
    \    local is_second_consonant=0\n    local is_first_vowel=0\n    local is_second_vowel=0\n\
    \    local is_first_char=0\n    local is_last_char=0\n    local is_first_vowel_found=0\n\
    \    local is_second_vowel_found=0\n    local is_first_consonant_found=0\n   \
    \ local is_second_consonant_found=0\n    local is_first_vowel_found=0\n    local\
    \ is_second_vowel_found=0\n    local is_first_consonant_found=0\n    local is_second_consonant_found=0\n\
    \    local is_first_vowel_found=0\n    local is_second_vowel_found=0\n    local\
    \ is_first_consonant_found=0\n    local is_second_consonant_found=0\n    local\
    \ is_first_vowel_found=0\n    local is_second_vowel_found=0\n    local is_first_consonant_found=0\n\
    \    local is_second_consonant_found=0\n    local is_first_vowel_found=0\n   \
    \ local is_second_vowel_found=0\n    local is_first_consonant_found=0\n    local\
    \ is_second_consonant_found=0\n    local is_first_vowel_found=0\n    local is_second_vowel_found=0\n\
    \    local is_first_consonant_found=0\n    local is_second_consonant_found=0\n\
    \    local is_first_v\n}\n\ncandidate() {\n    get_closest_vowel \"$@\"\n}\n\n\
    set -e\nrun_test() {\n    [[ $(candidate \"yogurt\") = \"u\" ]]\n    [[ $(candidate\
    \ \"full\") = \"u\" ]]\n    [[ $(candidate \"easy\") = \"\" ]]\n    [[ $(candidate\
    \ \"eAsy\") = \"\" ]]\n    [[ $(candidate \"ali\") = \"\" ]]\n    [[ $(candidate\
    \ \"bad\") = \"a\" ]]\n    [[ $(candidate \"most\") = \"o\" ]]\n    [[ $(candidate\
    \ \"ab\") = \"\" ]]\n    [[ $(candidate \"ba\") = \"\" ]]\n    [[ $(candidate\
    \ \"quick\") = \"\" ]]\n    [[ $(candidate \"anime\") = \"i\" ]]\n    [[ $(candidate\
    \ \"Asia\") = \"\" ]]\n    [[ $(candidate \"Above\") = \"o\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660002111
- exit_code: 1
  program: "#!/bin/bash\n# You are given a word. Your task is to find the closest\
    \ vowel that stands between \n# two consonants from the right side of the word\
    \ (case sensitive).\n# Vowels in the beginning and ending doesn't count. Return\
    \ empty string if you didn't\n# find any vowel met the above condition. \n# You\
    \ may assume that the given string contains English letter only.\n# Example:\n\
    #\n# $1 is a string\nget_closest_vowel() {\n    local word=$1\n    local len=${#word}\n\
    \    local i=0\n    local vowel=\"\"\n    local consonant=\"\"\n    local result=\"\
    \"\n    local vowels=\"aeiou\"\n    local consonants=\"bcdfghjklmnpqrstvwxyz\"\
    \n    local vowel_index=0\n    local consonant_index=0\n    local vowel_distance=0\n\
    \    local consonant_distance=0\n    local distance=0\n    local min_distance=0\n\
    \    local min_vowel=\"\"\n    local min_consonant=\"\"\n    local min_vowel_index=0\n\
    \    local min_consonant_index=0\n    local min_vowel_distance=0\n    local min_consonant_distance=0\n\
    \    local min_distance=0\n    local min_distance_index=0\n    local min_distance_vowel=\"\
    \"\n    local min_distance_consonant=\"\"\n    local min_distance_vowel_index=0\n\
    \    local min_distance_consonant_index=0\n    local min_distance_vowel_distance=0\n\
    \    local min_distance_consonant_distance=0\n    local min_distance_distance=0\n\
    \    local min_distance_distance_index=0\n    local min_distance_distance_vowel=\"\
    \"\n    local min_distance_distance_consonant=\"\"\n    local min_distance_distance_vowel_index=0\n\
    \    local min_distance_distance_consonant_index=0\n    local min_distance_distance_vowel_distance=0\n\
    \    local min_distance_distance_consonant_distance=0\n    local min_distance_distance_distance=0\n\
    \    local min_distance_distance_distance_index=0\n    local min_distance_distance_distance_vowel=\"\
    \"\n    local min_distance_distance_distance_consonant=\"\"\n    local min_distance_distance_distance_vowel_index=0\n\
    \    local min_distance_distance_distance_consonant_index=0\n    local min_distance_distance_distance_vowel_distance=0\n\
    \    local min_distance_distance_distance_cons\n}\n\ncandidate() {\n    get_closest_vowel\
    \ \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"yogurt\") = \"u\" ]]\n\
    \    [[ $(candidate \"full\") = \"u\" ]]\n    [[ $(candidate \"easy\") = \"\"\
    \ ]]\n    [[ $(candidate \"eAsy\") = \"\" ]]\n    [[ $(candidate \"ali\") = \"\
    \" ]]\n    [[ $(candidate \"bad\") = \"a\" ]]\n    [[ $(candidate \"most\") =\
    \ \"o\" ]]\n    [[ $(candidate \"ab\") = \"\" ]]\n    [[ $(candidate \"ba\") =\
    \ \"\" ]]\n    [[ $(candidate \"quick\") = \"\" ]]\n    [[ $(candidate \"anime\"\
    ) = \"i\" ]]\n    [[ $(candidate \"Asia\") = \"\" ]]\n    [[ $(candidate \"Above\"\
    ) = \"o\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660002111
- exit_code: 1
  program: "#!/bin/bash\n# You are given a word. Your task is to find the closest\
    \ vowel that stands between \n# two consonants from the right side of the word\
    \ (case sensitive).\n# Vowels in the beginning and ending doesn't count. Return\
    \ empty string if you didn't\n# find any vowel met the above condition. \n# You\
    \ may assume that the given string contains English letter only.\n# Example:\n\
    #\n# $1 is a string\nget_closest_vowel() {\n    local word=$1\n    local len=${#word}\n\
    \    local i=0\n    local vowel=\"\"\n    local consonant=\"\"\n    local result=\"\
    \"\n    local index=0\n    local min_index=0\n    local min_distance=0\n    local\
    \ distance=0\n    local vowels=\"aeiou\"\n    local consonants=\"bcdfghjklmnpqrstvwxyz\"\
    \n    local found=0\n    local found_vowel=0\n    local found_consonant=0\n  \
    \  local found_vowel_index=0\n    local found_consonant_index=0\n    local found_vowel_distance=0\n\
    \    local found_consonant_distance=0\n    local found_vowel_char=\"\"\n    local\
    \ found_consonant_char=\"\"\n    local found_vowel_index=0\n    local found_consonant_index=0\n\
    \    local found_vowel_distance=0\n    local found_consonant_distance=0\n    local\
    \ found_vowel_char=\"\"\n    local found_consonant_char=\"\"\n    local found_vowel_index=0\n\
    \    local found_consonant_index=0\n    local found_vowel_distance=0\n    local\
    \ found_consonant_distance=0\n    local found_vowel_char=\"\"\n    local found_consonant_char=\"\
    \"\n    local found_vowel_index=0\n    local found_consonant_index=0\n    local\
    \ found_vowel_distance=0\n    local found_consonant_distance=0\n    local found_vowel_char=\"\
    \"\n    local found_consonant_char=\"\"\n    local found_vowel_index=0\n    local\
    \ found_consonant_index=0\n    local found_vowel_distance=0\n    local found_consonant_distance=0\n\
    \    local found_vowel_char=\"\"\n    local found_consonant_char=\"\"\n    local\
    \ found_vowel_index=0\n    local found_consonant_index=0\n    local found_vowel_distance=0\n\
    \    local found\n}\n\ncandidate() {\n    get_closest_vowel \"$@\"\n}\n\nset -e\n\
    run_test() {\n    [[ $(candidate \"yogurt\") = \"u\" ]]\n    [[ $(candidate \"\
    full\") = \"u\" ]]\n    [[ $(candidate \"easy\") = \"\" ]]\n    [[ $(candidate\
    \ \"eAsy\") = \"\" ]]\n    [[ $(candidate \"ali\") = \"\" ]]\n    [[ $(candidate\
    \ \"bad\") = \"a\" ]]\n    [[ $(candidate \"most\") = \"o\" ]]\n    [[ $(candidate\
    \ \"ab\") = \"\" ]]\n    [[ $(candidate \"ba\") = \"\" ]]\n    [[ $(candidate\
    \ \"quick\") = \"\" ]]\n    [[ $(candidate \"anime\") = \"i\" ]]\n    [[ $(candidate\
    \ \"Asia\") = \"\" ]]\n    [[ $(candidate \"Above\") = \"o\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660002111
- exit_code: 1
  program: "#!/bin/bash\n# You are given a word. Your task is to find the closest\
    \ vowel that stands between \n# two consonants from the right side of the word\
    \ (case sensitive).\n# Vowels in the beginning and ending doesn't count. Return\
    \ empty string if you didn't\n# find any vowel met the above condition. \n# You\
    \ may assume that the given string contains English letter only.\n# Example:\n\
    #\n# $1 is a string\nget_closest_vowel() {\n    local word=$1\n    local word_len=${#word}\n\
    \    local i=0\n    local j=0\n    local k=0\n    local l=0\n    local m=0\n \
    \   local n=0\n    local o=0\n    local p=0\n    local q=0\n    local r=0\n  \
    \  local s=0\n    local t=0\n    local u=0\n    local v=0\n    local w=0\n   \
    \ local x=0\n    local y=0\n    local z=0\n    local a=0\n    local e=0\n    local\
    \ i=0\n    local o=0\n    local u=0\n    local closest_vowel=''\n    local closest_vowel_index=0\n\
    \    local closest_vowel_distance=0\n    local current_vowel_index=0\n    local\
    \ current_vowel_distance=0\n    local current_char=''\n    local current_char_index=0\n\
    \    local current_char_distance=0\n    local current_char_is_vowel=0\n    local\
    \ current_char_is_consonant=0\n    local current_char_is_vowel_or_consonant=0\n\
    \    local current_char_is_vowel_and_consonant=0\n    local current_char_is_vowel_or_consonant_and_not_a_vowel=0\n\
    \    local current_char_is_vowel_or_consonant_and_not_a_consonant=0\n    local\
    \ current_char_is_vowel_and_consonant_and_not_a_vowel=0\n    local current_char_is_vowel_and_consonant_and_not_a_consonant=0\n\
    \    local current_char_is_vowel_or_consonant_and_not_a_vowel_and_not_a_consonant=0\n\
    \    local current_char_is_vowel_and_consonant_and_not_a_vowel_and_not_a_consonant=0\n\
    \    local\n}\n\ncandidate() {\n    get_closest_vowel \"$@\"\n}\n\nset -e\nrun_test()\
    \ {\n    [[ $(candidate \"yogurt\") = \"u\" ]]\n    [[ $(candidate \"full\") =\
    \ \"u\" ]]\n    [[ $(candidate \"easy\") = \"\" ]]\n    [[ $(candidate \"eAsy\"\
    ) = \"\" ]]\n    [[ $(candidate \"ali\") = \"\" ]]\n    [[ $(candidate \"bad\"\
    ) = \"a\" ]]\n    [[ $(candidate \"most\") = \"o\" ]]\n    [[ $(candidate \"ab\"\
    ) = \"\" ]]\n    [[ $(candidate \"ba\") = \"\" ]]\n    [[ $(candidate \"quick\"\
    ) = \"\" ]]\n    [[ $(candidate \"anime\") = \"i\" ]]\n    [[ $(candidate \"Asia\"\
    ) = \"\" ]]\n    [[ $(candidate \"Above\") = \"o\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660002111
- exit_code: 1
  program: "#!/bin/bash\n# You are given a word. Your task is to find the closest\
    \ vowel that stands between \n# two consonants from the right side of the word\
    \ (case sensitive).\n# Vowels in the beginning and ending doesn't count. Return\
    \ empty string if you didn't\n# find any vowel met the above condition. \n# You\
    \ may assume that the given string contains English letter only.\n# Example:\n\
    #\n# $1 is a string\nget_closest_vowel() {\n  local str=$1\n  local len=${#str}\n\
    \  local i=0\n  local j=0\n  local k=0\n  local vowel=\"\"\n  local cons=\"\"\n\
    \  local cons_len=0\n  local vowel_len=0\n  local result=\"\"\n  local cons_arr=()\n\
    \  local vowel_arr=()\n  local cons_arr_len=0\n  local vowel_arr_len=0\n  local\
    \ vowel_index=0\n  local cons_index=0\n  local cons_index_len=0\n  local vowel_index_len=0\n\
    \  local min_index=0\n  local min_index_len=0\n  local min_index_len_arr=()\n\
    \  local min_index_len_arr_len=0\n  local min_index_len_arr_len_index=0\n  local\
    \ min_index_len_arr_len_index_len=0\n  local min_index_len_arr_len_index_len_arr=()\n\
    \  local min_index_len_arr_len_index_len_arr_len=0\n  local min_index_len_arr_len_index_len_arr_len_index=0\n\
    \  local min_index_len_arr_len_index_len_arr_len_index_len=0\n  local min_index_len_arr_len_index_len_arr_len_index_len_arr=()\n\
    \  local min_index_len_arr_len_index_len_arr_len_index_len_arr_len=0\n  local\
    \ min_index_len_arr_len_index_len_arr_len_index_len_arr_len_index=0\n  local min_index_len_arr_len_index_len_arr_len_index_len_arr_len_index_len=0\n\
    \  local min_index_len_arr_len_index_len_arr_len_index_len_arr_len_index_len_arr=()\n\
    \  local min_index_len_arr_len_index_len_arr_len_index_len_arr_len_index_len_arr_len=0\n\
    \  local min_index_len\n}\n\ncandidate() {\n    get_closest_vowel \"$@\"\n}\n\n\
    set -e\nrun_test() {\n    [[ $(candidate \"yogurt\") = \"u\" ]]\n    [[ $(candidate\
    \ \"full\") = \"u\" ]]\n    [[ $(candidate \"easy\") = \"\" ]]\n    [[ $(candidate\
    \ \"eAsy\") = \"\" ]]\n    [[ $(candidate \"ali\") = \"\" ]]\n    [[ $(candidate\
    \ \"bad\") = \"a\" ]]\n    [[ $(candidate \"most\") = \"o\" ]]\n    [[ $(candidate\
    \ \"ab\") = \"\" ]]\n    [[ $(candidate \"ba\") = \"\" ]]\n    [[ $(candidate\
    \ \"quick\") = \"\" ]]\n    [[ $(candidate \"anime\") = \"i\" ]]\n    [[ $(candidate\
    \ \"Asia\") = \"\" ]]\n    [[ $(candidate \"Above\") = \"o\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660002111
- exit_code: 1
  program: "#!/bin/bash\n# You are given a word. Your task is to find the closest\
    \ vowel that stands between \n# two consonants from the right side of the word\
    \ (case sensitive).\n# Vowels in the beginning and ending doesn't count. Return\
    \ empty string if you didn't\n# find any vowel met the above condition. \n# You\
    \ may assume that the given string contains English letter only.\n# Example:\n\
    #\n# $1 is a string\nget_closest_vowel() {\n    local word=$1\n    local vowel_pos=0\n\
    \    local vowel_pos_tmp=0\n    local vowel_pos_min=0\n    local vowel_pos_min_tmp=0\n\
    \    local vowel_pos_min_tmp_prev=0\n    local vowel_pos_min_tmp_prev_prev=0\n\
    \    local vowel_pos_min_tmp_prev_prev_prev=0\n    local vowel_pos_min_tmp_prev_prev_prev_prev=0\n\
    \    local vowel_pos_min_tmp_prev_prev_prev_prev_prev=0\n    local vowel_pos_min_tmp_prev_prev_prev_prev_prev_prev=0\n\
    \    local vowel_pos_min_tmp_prev_prev_prev_prev_prev_prev_prev=0\n    local vowel_pos_min_tmp_prev_prev_prev_prev_prev_prev_prev_prev=0\n\
    \    local vowel_pos_min_tmp_prev_prev_prev_prev_prev_prev_prev_prev_prev=0\n\
    \    local vowel_pos_min_tmp_prev_prev_prev_prev_prev_prev_prev_prev_prev_prev=0\n\
    \    local vowel_pos_min_tmp_prev_prev_prev_prev_prev_prev_prev_prev_prev_prev_prev=0\n\
    \    local vowel_pos_min_tmp_prev_prev_prev_prev_prev_prev_prev_prev_prev_prev_prev_prev=0\n\
    \    local vowel_pos_min_tmp_prev_prev_prev_prev_prev_prev_prev_prev_prev_prev_prev_prev_prev=0\n\
    \    local vowel_pos_min_tmp_prev_prev_prev_prev_prev_prev_prev_prev_prev_prev_prev_prev_prev_prev=0\n\
    \    local vowel_pos_min_tmp_prev_prev_prev_prev_prev_prev_prev_prev_prev_prev_prev_prev_prev_prev_prev=0\n\
    \    local vowel_pos_min_tmp_prev_prev_prev_prev_prev_prev_prev_prev_prev_prev_prev_prev_prev_prev_prev_prev=0\n\
    \   \n}\n\ncandidate() {\n    get_closest_vowel \"$@\"\n}\n\nset -e\nrun_test()\
    \ {\n    [[ $(candidate \"yogurt\") = \"u\" ]]\n    [[ $(candidate \"full\") =\
    \ \"u\" ]]\n    [[ $(candidate \"easy\") = \"\" ]]\n    [[ $(candidate \"eAsy\"\
    ) = \"\" ]]\n    [[ $(candidate \"ali\") = \"\" ]]\n    [[ $(candidate \"bad\"\
    ) = \"a\" ]]\n    [[ $(candidate \"most\") = \"o\" ]]\n    [[ $(candidate \"ab\"\
    ) = \"\" ]]\n    [[ $(candidate \"ba\") = \"\" ]]\n    [[ $(candidate \"quick\"\
    ) = \"\" ]]\n    [[ $(candidate \"anime\") = \"i\" ]]\n    [[ $(candidate \"Asia\"\
    ) = \"\" ]]\n    [[ $(candidate \"Above\") = \"o\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660002111
- exit_code: 1
  program: "#!/bin/bash\n# You are given a word. Your task is to find the closest\
    \ vowel that stands between \n# two consonants from the right side of the word\
    \ (case sensitive).\n# Vowels in the beginning and ending doesn't count. Return\
    \ empty string if you didn't\n# find any vowel met the above condition. \n# You\
    \ may assume that the given string contains English letter only.\n# Example:\n\
    #\n# $1 is a string\nget_closest_vowel() {\n    local word=$1\n    local word_len=${#word}\n\
    \    local i=0\n    local vowel_pos=0\n    local vowel_pos_prev=0\n    local vowel_pos_next=0\n\
    \    local vowel_pos_prev_len=0\n    local vowel_pos_next_len=0\n    local vowel_pos_prev_len_prev=0\n\
    \    local vowel_pos_next_len_next=0\n    local vowel_pos_prev_len_prev_len=0\n\
    \    local vowel_pos_next_len_next_len=0\n    local vowel_pos_prev_len_prev_len_prev=0\n\
    \    local vowel_pos_next_len_next_len_next=0\n    local vowel_pos_prev_len_prev_len_prev_len=0\n\
    \    local vowel_pos_next_len_next_len_next_len=0\n    local vowel_pos_prev_len_prev_len_prev_len_prev=0\n\
    \    local vowel_pos_next_len_next_len_next_len_next=0\n    local vowel_pos_prev_len_prev_len_prev_len_prev_len=0\n\
    \    local vowel_pos_next_len_next_len_next_len_next_len=0\n    local vowel_pos_prev_len_prev_len_prev_len_prev_len_prev=0\n\
    \    local vowel_pos_next_len_next_len_next_len_next_len_next=0\n    local vowel_pos_prev_len_prev_len_prev_len_prev_len_prev_len=0\n\
    \    local vowel_pos_next_len_next_len_next_len_next_len_next_len=0\n    local\
    \ vowel_pos_prev_len_prev_len_prev_len_prev_len_prev_len_prev=0\n    local vowel_pos_next_len_next_len_next_len_next_len_next_len_next=0\n\
    \    local vowel_pos_prev_len_prev_len_prev_len_prev_len_prev_len_prev_len=0\n\
    \    local vowel_pos_next_\n}\n\ncandidate() {\n    get_closest_vowel \"$@\"\n\
    }\n\nset -e\nrun_test() {\n    [[ $(candidate \"yogurt\") = \"u\" ]]\n    [[ $(candidate\
    \ \"full\") = \"u\" ]]\n    [[ $(candidate \"easy\") = \"\" ]]\n    [[ $(candidate\
    \ \"eAsy\") = \"\" ]]\n    [[ $(candidate \"ali\") = \"\" ]]\n    [[ $(candidate\
    \ \"bad\") = \"a\" ]]\n    [[ $(candidate \"most\") = \"o\" ]]\n    [[ $(candidate\
    \ \"ab\") = \"\" ]]\n    [[ $(candidate \"ba\") = \"\" ]]\n    [[ $(candidate\
    \ \"quick\") = \"\" ]]\n    [[ $(candidate \"anime\") = \"i\" ]]\n    [[ $(candidate\
    \ \"Asia\") = \"\" ]]\n    [[ $(candidate \"Above\") = \"o\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660002111
- exit_code: 1
  program: "#!/bin/bash\n# You are given a word. Your task is to find the closest\
    \ vowel that stands between \n# two consonants from the right side of the word\
    \ (case sensitive).\n# Vowels in the beginning and ending doesn't count. Return\
    \ empty string if you didn't\n# find any vowel met the above condition. \n# You\
    \ may assume that the given string contains English letter only.\n# Example:\n\
    #\n# $1 is a string\nget_closest_vowel() {\n    local word=$1\n    local last_char=${word:\
    \ -1}\n    local next_char=${word: -2:1}\n    local vowel=\"\"\n    local index=0\n\
    \    local index_vowel=0\n    local index_next_char=0\n    local index_last_char=0\n\
    \    local vowels=\"aeiou\"\n    local consonants=\"bcdfghjklmnpqrstvwxyz\"\n\
    \    local consonants_upper=\"BCDFGHJKLMNPQRSTVWXYZ\"\n    local vowels_upper=\"\
    AEIOU\"\n    local is_vowel=0\n    local is_consonant=0\n    local is_consonant_upper=0\n\
    \    local is_vowel_upper=0\n    local is_last_char_vowel=0\n    local is_last_char_consonant=0\n\
    \    local is_last_char_consonant_upper=0\n    local is_last_char_vowel_upper=0\n\
    \    local is_next_char_vowel=0\n    local is_next_char_consonant=0\n    local\
    \ is_next_char_consonant_upper=0\n    local is_next_char_vowel_upper=0\n    local\
    \ is_next_char_vowel_upper=0\n    local is_next_char_vowel_upper=0\n    local\
    \ is_next_char_vowel_upper=0\n    local is_next_char_vowel_upper=0\n    local\
    \ is_next_char_vowel_upper=0\n    local is_next_char_vowel_upper=0\n    local\
    \ is_next_char_vowel_upper=0\n    local is_next_char_vowel_upper=0\n    local\
    \ is_next_char_vowel_upper=0\n    local is_next_char_vowel_upper=0\n    local\
    \ is_next_char_vowel_upper=0\n    local is_next_char_vowel_upper=0\n    local\
    \ is_next_char_vowel_upper=0\n}\n\ncandidate() {\n    get_closest_vowel \"$@\"\
    \n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"yogurt\") = \"u\" ]]\n    [[\
    \ $(candidate \"full\") = \"u\" ]]\n    [[ $(candidate \"easy\") = \"\" ]]\n \
    \   [[ $(candidate \"eAsy\") = \"\" ]]\n    [[ $(candidate \"ali\") = \"\" ]]\n\
    \    [[ $(candidate \"bad\") = \"a\" ]]\n    [[ $(candidate \"most\") = \"o\"\
    \ ]]\n    [[ $(candidate \"ab\") = \"\" ]]\n    [[ $(candidate \"ba\") = \"\"\
    \ ]]\n    [[ $(candidate \"quick\") = \"\" ]]\n    [[ $(candidate \"anime\") =\
    \ \"i\" ]]\n    [[ $(candidate \"Asia\") = \"\" ]]\n    [[ $(candidate \"Above\"\
    ) = \"o\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660002111
- exit_code: 1
  program: "#!/bin/bash\n# You are given a word. Your task is to find the closest\
    \ vowel that stands between \n# two consonants from the right side of the word\
    \ (case sensitive).\n# Vowels in the beginning and ending doesn't count. Return\
    \ empty string if you didn't\n# find any vowel met the above condition. \n# You\
    \ may assume that the given string contains English letter only.\n# Example:\n\
    #\n# $1 is a string\nget_closest_vowel() {\n    local word=\"$1\"\n    local word_len=${#word}\n\
    \    local i=0\n    local j=0\n    local k=0\n    local vowel_pos=0\n    local\
    \ vowel_pos_arr=()\n    local closest_vowel=\"\"\n    local closest_vowel_pos=0\n\
    \    local closest_vowel_pos_arr=()\n    local closest_vowel_pos_arr_len=0\n \
    \   local closest_vowel_pos_arr_len_half=0\n    local closest_vowel_pos_arr_len_half_floor=0\n\
    \    local closest_vowel_pos_arr_len_half_ceil=0\n    local closest_vowel_pos_arr_len_half_floor_diff=0\n\
    \    local closest_vowel_pos_arr_len_half_ceil_diff=0\n    local closest_vowel_pos_arr_len_half_floor_diff_abs=0\n\
    \    local closest_vowel_pos_arr_len_half_ceil_diff_abs=0\n    local closest_vowel_pos_arr_len_half_floor_diff_abs_min=0\n\
    \    local closest_vowel_pos_arr_len_half_ceil_diff_abs_min=0\n    local closest_vowel_pos_arr_len_half_floor_diff_abs_min_pos=0\n\
    \    local closest_vowel_pos_arr_len_half_ceil_diff_abs_min_pos=0\n    local closest_vowel_pos_arr_len_half_floor_diff_abs_min_pos_arr=()\n\
    \    local closest_vowel_pos_arr_len_half_ceil_diff_abs_min_pos_arr=()\n    local\
    \ closest_vowel_pos_arr_len_half_floor_diff_abs_min_pos_arr_len=0\n    local closest_vowel_pos_arr_len_half_ceil_diff_abs_min_pos_arr_len=0\n\
    \    local closest_vowel_pos_arr_len_half_\n}\n\ncandidate() {\n    get_closest_vowel\
    \ \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"yogurt\") = \"u\" ]]\n\
    \    [[ $(candidate \"full\") = \"u\" ]]\n    [[ $(candidate \"easy\") = \"\"\
    \ ]]\n    [[ $(candidate \"eAsy\") = \"\" ]]\n    [[ $(candidate \"ali\") = \"\
    \" ]]\n    [[ $(candidate \"bad\") = \"a\" ]]\n    [[ $(candidate \"most\") =\
    \ \"o\" ]]\n    [[ $(candidate \"ab\") = \"\" ]]\n    [[ $(candidate \"ba\") =\
    \ \"\" ]]\n    [[ $(candidate \"quick\") = \"\" ]]\n    [[ $(candidate \"anime\"\
    ) = \"i\" ]]\n    [[ $(candidate \"Asia\") = \"\" ]]\n    [[ $(candidate \"Above\"\
    ) = \"o\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660002111
- exit_code: 1
  program: "#!/bin/bash\n# You are given a word. Your task is to find the closest\
    \ vowel that stands between \n# two consonants from the right side of the word\
    \ (case sensitive).\n# Vowels in the beginning and ending doesn't count. Return\
    \ empty string if you didn't\n# find any vowel met the above condition. \n# You\
    \ may assume that the given string contains English letter only.\n# Example:\n\
    #\n# $1 is a string\nget_closest_vowel() {\n    local word=$1\n    local len=${#word}\n\
    \    local i=0\n    local vowel_pos=0\n    local vowel_pos_prev=0\n    local vowel_pos_next=0\n\
    \    local vowel_pos_prev_prev=0\n    local vowel_pos_next_next=0\n    local vowel_pos_prev_prev_prev=0\n\
    \    local vowel_pos_next_next_next=0\n    local vowel_pos_prev_prev_prev_prev=0\n\
    \    local vowel_pos_next_next_next_next=0\n    local vowel_pos_prev_prev_prev_prev_prev=0\n\
    \    local vowel_pos_next_next_next_next_next=0\n    local vowel_pos_prev_prev_prev_prev_prev_prev=0\n\
    \    local vowel_pos_next_next_next_next_next_next=0\n    local vowel_pos_prev_prev_prev_prev_prev_prev_prev=0\n\
    \    local vowel_pos_next_next_next_next_next_next_next=0\n    local vowel_pos_prev_prev_prev_prev_prev_prev_prev_prev=0\n\
    \    local vowel_pos_next_next_next_next_next_next_next_next=0\n    local vowel_pos_prev_prev_prev_prev_prev_prev_prev_prev_prev=0\n\
    \    local vowel_pos_next_next_next_next_next_next_next_next_next=0\n    local\
    \ vowel_pos_prev_prev_prev_prev_prev_prev_prev_prev_prev_prev=0\n    local vowel_pos_next_next_next_next_next_next_next_next_next_next=0\n\
    \    local vowel_pos_prev_prev_prev_prev_prev_prev_prev_prev_prev_prev_prev=0\n\
    \    local vowel_pos_next_next_next_next_next_next_next_next_next_next_next=0\n\
    \    local vowel_pos_prev_prev_prev_prev_prev_prev_prev_prev_prev_prev_prev_prev=0\n\
    \    local vowel_pos_next_next_\n}\n\ncandidate() {\n    get_closest_vowel \"\
    $@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"yogurt\") = \"u\" ]]\n \
    \   [[ $(candidate \"full\") = \"u\" ]]\n    [[ $(candidate \"easy\") = \"\" ]]\n\
    \    [[ $(candidate \"eAsy\") = \"\" ]]\n    [[ $(candidate \"ali\") = \"\" ]]\n\
    \    [[ $(candidate \"bad\") = \"a\" ]]\n    [[ $(candidate \"most\") = \"o\"\
    \ ]]\n    [[ $(candidate \"ab\") = \"\" ]]\n    [[ $(candidate \"ba\") = \"\"\
    \ ]]\n    [[ $(candidate \"quick\") = \"\" ]]\n    [[ $(candidate \"anime\") =\
    \ \"i\" ]]\n    [[ $(candidate \"Asia\") = \"\" ]]\n    [[ $(candidate \"Above\"\
    ) = \"o\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660002111
- exit_code: 1
  program: "#!/bin/bash\n# You are given a word. Your task is to find the closest\
    \ vowel that stands between \n# two consonants from the right side of the word\
    \ (case sensitive).\n# Vowels in the beginning and ending doesn't count. Return\
    \ empty string if you didn't\n# find any vowel met the above condition. \n# You\
    \ may assume that the given string contains English letter only.\n# Example:\n\
    #\n# $1 is a string\nget_closest_vowel() {\n    local word=$1\n    local len=${#word}\n\
    \    local i=0\n    local j=0\n    local k=0\n    local l=0\n    local m=0\n \
    \   local n=0\n    local o=0\n    local p=0\n    local q=0\n    local r=0\n  \
    \  local s=0\n    local t=0\n    local u=0\n    local v=0\n    local w=0\n   \
    \ local x=0\n    local y=0\n    local z=0\n    local a=0\n    local e=0\n    local\
    \ i=0\n    local o=0\n    local u=0\n    local vowel=0\n    local consonant=0\n\
    \    local result=\"\"\n    local temp=\"\"\n    local temp_len=0\n    local temp_result=\"\
    \"\n    local temp_result_len=0\n    local temp_result_len_max=0\n    local temp_result_len_min=0\n\
    \    local temp_result_len_min_index=0\n    local temp_result_len_max_index=0\n\
    \    local temp_result_len_min_index_vowel=0\n    local temp_result_len_max_index_vowel=0\n\
    \    local temp_result_len_min_index_consonant=0\n    local temp_result_len_max_index_consonant=0\n\
    \    local temp_result_len_min_index_vowel_len=0\n    local temp_result_len_max_index_vowel_len=0\n\
    \    local temp_result_len_min_index_consonant_len=0\n    local temp_result_len_max_index_consonant_len=0\n\
    \    local temp_result_len_min_index_vowel_len_max=0\n    local temp_result_len_max_index_vowel_len_max=0\n\
    \    local temp_result_len_min_index_consonant_len_max=0\n    local temp_result_len_max_index_consonant_len_max=0\n\
    \    local temp_result_len_min_index_vowel_len_\n}\n\ncandidate() {\n    get_closest_vowel\
    \ \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"yogurt\") = \"u\" ]]\n\
    \    [[ $(candidate \"full\") = \"u\" ]]\n    [[ $(candidate \"easy\") = \"\"\
    \ ]]\n    [[ $(candidate \"eAsy\") = \"\" ]]\n    [[ $(candidate \"ali\") = \"\
    \" ]]\n    [[ $(candidate \"bad\") = \"a\" ]]\n    [[ $(candidate \"most\") =\
    \ \"o\" ]]\n    [[ $(candidate \"ab\") = \"\" ]]\n    [[ $(candidate \"ba\") =\
    \ \"\" ]]\n    [[ $(candidate \"quick\") = \"\" ]]\n    [[ $(candidate \"anime\"\
    ) = \"i\" ]]\n    [[ $(candidate \"Asia\") = \"\" ]]\n    [[ $(candidate \"Above\"\
    ) = \"o\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660002111
- exit_code: 1
  program: "#!/bin/bash\n# You are given a word. Your task is to find the closest\
    \ vowel that stands between \n# two consonants from the right side of the word\
    \ (case sensitive).\n# Vowels in the beginning and ending doesn't count. Return\
    \ empty string if you didn't\n# find any vowel met the above condition. \n# You\
    \ may assume that the given string contains English letter only.\n# Example:\n\
    #\n# $1 is a string\nget_closest_vowel() {\n    local word=$1\n    local word_len=${#word}\n\
    \    local i=0\n    local j=0\n    local k=0\n    local closest_vowel=\"\"\n \
    \   local closest_vowel_index=0\n    local closest_vowel_distance=0\n    local\
    \ closest_consonant_index=0\n    local closest_consonant_distance=0\n    local\
    \ vowel_index=0\n    local consonant_index=0\n    local vowel_distance=0\n   \
    \ local consonant_distance=0\n    local vowel_found=0\n    local consonant_found=0\n\
    \    local vowel_list=\"aeiou\"\n    local consonant_list=\"bcdfghjklmnpqrstvwxyz\"\
    \n    local vowel_list_len=${#vowel_list}\n    local consonant_list_len=${#consonant_list}\n\
    \    local char=\"\"\n    local char_index=0\n    local char_list=\"\"\n    local\
    \ char_list_len=0\n    local char_found=0\n    local char_distance=0\n    local\
    \ char_index=0\n    local char_distance=0\n    local char_found=0\n    local char_list_len=0\n\
    \    local char_index=0\n    local char_distance=0\n    local char_found=0\n \
    \   local char_list_len=0\n    local char_index=0\n    local char_distance=0\n\
    \    local char_found=0\n    local char_list_len=0\n    local char_index=0\n \
    \   local char_distance=0\n    local char_found=0\n    local char_list_len=0\n\
    \    local char_index=0\n    local char_distance=0\n    local char_found=0\n \
    \   local char_list_len=0\n    local char_index=0\n    local char_distance=0\n\
    \    local char_found=0\n    local char_list_len=0\n    local char_index=0\n \
    \   local char_distance=0\n    local char_found=0\n    local char_list_len=0\n\
    \    local char_index=0\n    local char_distance=0\n}\n\ncandidate() {\n    get_closest_vowel\
    \ \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"yogurt\") = \"u\" ]]\n\
    \    [[ $(candidate \"full\") = \"u\" ]]\n    [[ $(candidate \"easy\") = \"\"\
    \ ]]\n    [[ $(candidate \"eAsy\") = \"\" ]]\n    [[ $(candidate \"ali\") = \"\
    \" ]]\n    [[ $(candidate \"bad\") = \"a\" ]]\n    [[ $(candidate \"most\") =\
    \ \"o\" ]]\n    [[ $(candidate \"ab\") = \"\" ]]\n    [[ $(candidate \"ba\") =\
    \ \"\" ]]\n    [[ $(candidate \"quick\") = \"\" ]]\n    [[ $(candidate \"anime\"\
    ) = \"i\" ]]\n    [[ $(candidate \"Asia\") = \"\" ]]\n    [[ $(candidate \"Above\"\
    ) = \"o\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660002111
- exit_code: 1
  program: "#!/bin/bash\n# You are given a word. Your task is to find the closest\
    \ vowel that stands between \n# two consonants from the right side of the word\
    \ (case sensitive).\n# Vowels in the beginning and ending doesn't count. Return\
    \ empty string if you didn't\n# find any vowel met the above condition. \n# You\
    \ may assume that the given string contains English letter only.\n# Example:\n\
    #\n# $1 is a string\nget_closest_vowel() {\n    local word=$1\n    local word_len=${#word}\n\
    \    local i=0\n    local j=0\n    local vowel_pos=0\n    local vowel_pos_arr=()\n\
    \    local vowel_pos_arr_len=0\n    local closest_vowel_pos=0\n    local closest_vowel_pos_arr=()\n\
    \    local closest_vowel_pos_arr_len=0\n    local closest_vowel_pos_arr_last_index=0\n\
    \    local closest_vowel_pos_arr_last_index_value=0\n    local closest_vowel_pos_arr_last_index_value_len=0\n\
    \    local closest_vowel_pos_arr_last_index_value_len_half=0\n    local closest_vowel_pos_arr_last_index_value_len_half_index=0\n\
    \    local closest_vowel_pos_arr_last_index_value_len_half_index_value=0\n   \
    \ local closest_vowel_pos_arr_last_index_value_len_half_index_value_len=0\n  \
    \  local closest_vowel_pos_arr_last_index_value_len_half_index_value_len_half=0\n\
    \    local closest_vowel_pos_arr_last_index_value_len_half_index_value_len_half_index=0\n\
    \    local closest_vowel_pos_arr_last_index_value_len_half_index_value_len_half_index_value=0\n\
    \    local closest_vowel_pos_arr_last_index_value_len_half_index_value_len_half_index_value_len=0\n\
    \    local closest_vowel_pos_arr_last_index_value_len_half_index_value_len_half_index_value_len_half=0\n\
    \    local closest_vowel_pos_arr_last_index_value_len_half_index_value_len_half_index_value_len_half_index=0\n\
    \    local closest_vowel_pos_arr_last_index_value_len_\n}\n\ncandidate() {\n \
    \   get_closest_vowel \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"\
    yogurt\") = \"u\" ]]\n    [[ $(candidate \"full\") = \"u\" ]]\n    [[ $(candidate\
    \ \"easy\") = \"\" ]]\n    [[ $(candidate \"eAsy\") = \"\" ]]\n    [[ $(candidate\
    \ \"ali\") = \"\" ]]\n    [[ $(candidate \"bad\") = \"a\" ]]\n    [[ $(candidate\
    \ \"most\") = \"o\" ]]\n    [[ $(candidate \"ab\") = \"\" ]]\n    [[ $(candidate\
    \ \"ba\") = \"\" ]]\n    [[ $(candidate \"quick\") = \"\" ]]\n    [[ $(candidate\
    \ \"anime\") = \"i\" ]]\n    [[ $(candidate \"Asia\") = \"\" ]]\n    [[ $(candidate\
    \ \"Above\") = \"o\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660002111
- exit_code: 1
  program: "#!/bin/bash\n# You are given a word. Your task is to find the closest\
    \ vowel that stands between \n# two consonants from the right side of the word\
    \ (case sensitive).\n# Vowels in the beginning and ending doesn't count. Return\
    \ empty string if you didn't\n# find any vowel met the above condition. \n# You\
    \ may assume that the given string contains English letter only.\n# Example:\n\
    #\n# $1 is a string\nget_closest_vowel() {\n    local word=$1\n    local word_len=${#word}\n\
    \    local closest_vowel=\"\"\n    local closest_vowel_index=0\n    local closest_vowel_distance=0\n\
    \    local vowel_index=0\n    local vowel_distance=0\n    local i=0\n    local\
    \ j=0\n    local k=0\n    local l=0\n    local m=0\n    local n=0\n    local o=0\n\
    \    local p=0\n    local q=0\n    local r=0\n    local s=0\n    local t=0\n \
    \   local u=0\n    local v=0\n    local w=0\n    local x=0\n    local y=0\n  \
    \  local z=0\n    local a=0\n    local e=0\n    local i=0\n    local o=0\n   \
    \ local u=0\n    local vowel_list=\"\"\n    local vowel_list_len=0\n    local\
    \ vowel_list_index=0\n    local vowel_list_index_list=\"\"\n    local vowel_list_index_list_len=0\n\
    \    local vowel_list_index_list_index=0\n    local vowel_list_index_list_index_list=\"\
    \"\n    local vowel_list_index_list_index_list_len=0\n    local vowel_list_index_list_index_list_index=0\n\
    \    local vowel_list_index_list_index_list_index_list=\"\"\n    local vowel_list_index_list_index_list_index_list_len=0\n\
    \    local vowel_list_index_list_index_list_index_list_index=0\n    local vowel_list_index_list_index_list_index_list_index_list=\"\
    \"\n    local vowel_list_index_list_index_list_index_list_index_list_len=0\n \
    \   local vowel_list_index_list_index_list_index_list_index_list_index=0\n   \
    \ local vowel_list_index_list_index_list_index_list_index_list_index_list=\"\"\
    \n    local vowel_list_index_list_index_list_index_list_index_list_index_list\n\
    }\n\ncandidate() {\n    get_closest_vowel \"$@\"\n}\n\nset -e\nrun_test() {\n\
    \    [[ $(candidate \"yogurt\") = \"u\" ]]\n    [[ $(candidate \"full\") = \"\
    u\" ]]\n    [[ $(candidate \"easy\") = \"\" ]]\n    [[ $(candidate \"eAsy\") =\
    \ \"\" ]]\n    [[ $(candidate \"ali\") = \"\" ]]\n    [[ $(candidate \"bad\")\
    \ = \"a\" ]]\n    [[ $(candidate \"most\") = \"o\" ]]\n    [[ $(candidate \"ab\"\
    ) = \"\" ]]\n    [[ $(candidate \"ba\") = \"\" ]]\n    [[ $(candidate \"quick\"\
    ) = \"\" ]]\n    [[ $(candidate \"anime\") = \"i\" ]]\n    [[ $(candidate \"Asia\"\
    ) = \"\" ]]\n    [[ $(candidate \"Above\") = \"o\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660002111
- exit_code: 1
  program: "#!/bin/bash\n# You are given a word. Your task is to find the closest\
    \ vowel that stands between \n# two consonants from the right side of the word\
    \ (case sensitive).\n# Vowels in the beginning and ending doesn't count. Return\
    \ empty string if you didn't\n# find any vowel met the above condition. \n# You\
    \ may assume that the given string contains English letter only.\n# Example:\n\
    #\n# $1 is a string\nget_closest_vowel() {\n    local word=$1\n    local word_len=${#word}\n\
    \    local i=0\n    local j=0\n    local vowel=''\n    local vowel_pos=0\n   \
    \ local vowel_len=0\n    local vowel_pos_list=()\n    local vowel_len_list=()\n\
    \    local vowel_list=()\n    local vowel_list_len=0\n    local vowel_list_len_list=()\n\
    \    local vowel_list_pos_list=()\n    local vowel_list_len_list_len=0\n    local\
    \ vowel_list_pos_list_len=0\n    local vowel_list_len_list_len_list=()\n    local\
    \ vowel_list_pos_list_len_list=()\n    local vowel_list_len_list_len_list_len=0\n\
    \    local vowel_list_pos_list_len_list_len=0\n    local vowel_list_len_list_len_list_len_list=()\n\
    \    local vowel_list_pos_list_len_list_len_list=()\n    local vowel_list_len_list_len_list_len_list_len=0\n\
    \    local vowel_list_pos_list_len_list_len_list_len=0\n    local vowel_list_len_list_len_list_len_list_len_list=()\n\
    \    local vowel_list_pos_list_len_list_len_list_len_list=()\n    local vowel_list_len_list_len_list_len_list_len_list_len=0\n\
    \    local vowel_list_pos_list_len_list_len_list_len_list_len=0\n    local vowel_list_len_list_len_list_len_list_len_list_len_list=()\n\
    \    local vowel_list_pos_list_len_list_len_list_len_list_len_list=()\n    local\
    \ vowel_list_len_list_len_list_len_list_len_list_len_list_len=0\n    local vowel_list_pos_list_len_list_len_list_len_list_len_list_len=0\n\
    \    local\n}\n\ncandidate() {\n    get_closest_vowel \"$@\"\n}\n\nset -e\nrun_test()\
    \ {\n    [[ $(candidate \"yogurt\") = \"u\" ]]\n    [[ $(candidate \"full\") =\
    \ \"u\" ]]\n    [[ $(candidate \"easy\") = \"\" ]]\n    [[ $(candidate \"eAsy\"\
    ) = \"\" ]]\n    [[ $(candidate \"ali\") = \"\" ]]\n    [[ $(candidate \"bad\"\
    ) = \"a\" ]]\n    [[ $(candidate \"most\") = \"o\" ]]\n    [[ $(candidate \"ab\"\
    ) = \"\" ]]\n    [[ $(candidate \"ba\") = \"\" ]]\n    [[ $(candidate \"quick\"\
    ) = \"\" ]]\n    [[ $(candidate \"anime\") = \"i\" ]]\n    [[ $(candidate \"Asia\"\
    ) = \"\" ]]\n    [[ $(candidate \"Above\") = \"o\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660002111
- exit_code: 1
  program: "#!/bin/bash\n# You are given a word. Your task is to find the closest\
    \ vowel that stands between \n# two consonants from the right side of the word\
    \ (case sensitive).\n# Vowels in the beginning and ending doesn't count. Return\
    \ empty string if you didn't\n# find any vowel met the above condition. \n# You\
    \ may assume that the given string contains English letter only.\n# Example:\n\
    #\n# $1 is a string\nget_closest_vowel() {\n  local word=$1\n  local vowels=\"\
    aeiou\"\n  local last_char=${word: -1}\n  local result=\"\"\n  local i=0\n  local\
    \ j=0\n  local k=0\n  local l=0\n  local m=0\n  local n=0\n  local o=0\n  local\
    \ p=0\n  local q=0\n  local r=0\n  local s=0\n  local t=0\n  local u=0\n  local\
    \ v=0\n  local w=0\n  local x=0\n  local y=0\n  local z=0\n  local a=0\n  local\
    \ b=0\n  local c=0\n  local d=0\n  local e=0\n  local f=0\n  local g=0\n  local\
    \ h=0\n  local i=0\n  local j=0\n  local k=0\n  local l=0\n  local m=0\n  local\
    \ n=0\n  local o=0\n  local p=0\n  local q=0\n  local r=0\n  local s=0\n  local\
    \ t=0\n  local u=0\n  local v=0\n  local w=0\n  local x=0\n  local y=0\n  local\
    \ z=0\n  local a=0\n  local b=0\n  local c=0\n  local d=0\n  local e=0\n  local\
    \ f=0\n  local g=0\n  local h=0\n  local i=0\n  local j=0\n  local k=0\n  local\
    \ l=0\n  local m=0\n  local n=0\n  local o=0\n  local p=0\n  local q=0\n  local\
    \ r=0\n  local s=0\n  local t=0\n  local u=0\n  local v=0\n  local w=0\n  local\
    \ x=0\n  local y=0\n  local z=0\n  local a=0\n  local b=0\n  local c=0\n  local\
    \ d=0\n  local e=0\n  local f=0\n  local g=0\n  local h=0\n  local i=0\n  local\
    \ j\n}\n\ncandidate() {\n    get_closest_vowel \"$@\"\n}\n\nset -e\nrun_test()\
    \ {\n    [[ $(candidate \"yogurt\") = \"u\" ]]\n    [[ $(candidate \"full\") =\
    \ \"u\" ]]\n    [[ $(candidate \"easy\") = \"\" ]]\n    [[ $(candidate \"eAsy\"\
    ) = \"\" ]]\n    [[ $(candidate \"ali\") = \"\" ]]\n    [[ $(candidate \"bad\"\
    ) = \"a\" ]]\n    [[ $(candidate \"most\") = \"o\" ]]\n    [[ $(candidate \"ab\"\
    ) = \"\" ]]\n    [[ $(candidate \"ba\") = \"\" ]]\n    [[ $(candidate \"quick\"\
    ) = \"\" ]]\n    [[ $(candidate \"anime\") = \"i\" ]]\n    [[ $(candidate \"Asia\"\
    ) = \"\" ]]\n    [[ $(candidate \"Above\") = \"o\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660002111
- exit_code: 1
  program: "#!/bin/bash\n# You are given a word. Your task is to find the closest\
    \ vowel that stands between \n# two consonants from the right side of the word\
    \ (case sensitive).\n# Vowels in the beginning and ending doesn't count. Return\
    \ empty string if you didn't\n# find any vowel met the above condition. \n# You\
    \ may assume that the given string contains English letter only.\n# Example:\n\
    #\n# $1 is a string\nget_closest_vowel() {\n    local word=$1\n    local result=\"\
    \"\n    local i=0\n    local j=0\n    local k=0\n    local len=${#word}\n    local\
    \ vowels=\"aeiou\"\n    local consonants=\"bcdfghjklmnpqrstvwxyz\"\n    local\
    \ found=0\n    local found_vowel=\"\"\n    local found_consonant=\"\"\n    local\
    \ found_index=0\n    local found_vowel_index=0\n    local found_consonant_index=0\n\
    \    local found_vowel_len=0\n    local found_consonant_len=0\n    local found_vowel_len_min=0\n\
    \    local found_consonant_len_min=0\n    local found_vowel_len_max=0\n    local\
    \ found_consonant_len_max=0\n    local found_vowel_len_min_index=0\n    local\
    \ found_consonant_len_min_index=0\n    local found_vowel_len_max_index=0\n   \
    \ local found_consonant_len_max_index=0\n    local found_vowel_len_min_index_min=0\n\
    \    local found_consonant_len_min_index_min=0\n    local found_vowel_len_max_index_min=0\n\
    \    local found_consonant_len_max_index_min=0\n    local found_vowel_len_min_index_max=0\n\
    \    local found_consonant_len_min_index_max=0\n    local found_vowel_len_max_index_max=0\n\
    \    local found_consonant_len_max_index_max=0\n    local found_vowel_len_min_index_min_index=0\n\
    \    local found_consonant_len_min_index_min_index=0\n    local found_vowel_len_max_index_min_index=0\n\
    \    local found_consonant_len_max_index_min_index=0\n    local found_vowel_len_min_index_max_index=\n\
    }\n\ncandidate() {\n    get_closest_vowel \"$@\"\n}\n\nset -e\nrun_test() {\n\
    \    [[ $(candidate \"yogurt\") = \"u\" ]]\n    [[ $(candidate \"full\") = \"\
    u\" ]]\n    [[ $(candidate \"easy\") = \"\" ]]\n    [[ $(candidate \"eAsy\") =\
    \ \"\" ]]\n    [[ $(candidate \"ali\") = \"\" ]]\n    [[ $(candidate \"bad\")\
    \ = \"a\" ]]\n    [[ $(candidate \"most\") = \"o\" ]]\n    [[ $(candidate \"ab\"\
    ) = \"\" ]]\n    [[ $(candidate \"ba\") = \"\" ]]\n    [[ $(candidate \"quick\"\
    ) = \"\" ]]\n    [[ $(candidate \"anime\") = \"i\" ]]\n    [[ $(candidate \"Asia\"\
    ) = \"\" ]]\n    [[ $(candidate \"Above\") = \"o\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660002111
- exit_code: 1
  program: "#!/bin/bash\n# You are given a word. Your task is to find the closest\
    \ vowel that stands between \n# two consonants from the right side of the word\
    \ (case sensitive).\n# Vowels in the beginning and ending doesn't count. Return\
    \ empty string if you didn't\n# find any vowel met the above condition. \n# You\
    \ may assume that the given string contains English letter only.\n# Example:\n\
    #\n# $1 is a string\nget_closest_vowel() {\n    local str=\"$1\"\n    local i=${#str}\n\
    \    local last_char=${str:$i-1:1}\n    local last_vowel=\"\"\n    local last_consonant=\"\
    \"\n    local found_vowel=0\n    local found_consonant=0\n    local result=\"\"\
    \n    local vowels=\"aeiou\"\n    local consonants=\"bcdfghjklmnpqrstvwxyz\"\n\
    \    local char=\"\"\n    local char_lower=\"\"\n    local char_upper=\"\"\n \
    \   local char_lower_index=0\n    local char_upper_index=0\n    local char_lower_index_vowel=0\n\
    \    local char_upper_index_vowel=0\n    local char_lower_index_consonant=0\n\
    \    local char_upper_index_consonant=0\n    local char_lower_index_vowel_last=0\n\
    \    local char_upper_index_vowel_last=0\n    local char_lower_index_consonant_last=0\n\
    \    local char_upper_index_consonant_last=0\n    local char_lower_index_vowel_last_diff=0\n\
    \    local char_upper_index_vowel_last_diff=0\n    local char_lower_index_consonant_last_diff=0\n\
    \    local char_upper_index_consonant_last_diff=0\n    local char_lower_index_vowel_diff=0\n\
    \    local char_upper_index_vowel_diff=0\n    local char_lower_index_consonant_diff=0\n\
    \    local char_upper_index_consonant_diff=0\n    local char_lower_index_vowel_diff_last=0\n\
    \    local char_upper_index_vowel_diff_last=0\n    local char_lower_index_consonant_diff_last=0\n\
    \    local char_upper_index_consonant_diff_last=0\n    local char_lower_index_vowel_diff_last_diff=0\n\
    \    local char_upper_index_vowel_diff_last_\n}\n\ncandidate() {\n    get_closest_vowel\
    \ \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"yogurt\") = \"u\" ]]\n\
    \    [[ $(candidate \"full\") = \"u\" ]]\n    [[ $(candidate \"easy\") = \"\"\
    \ ]]\n    [[ $(candidate \"eAsy\") = \"\" ]]\n    [[ $(candidate \"ali\") = \"\
    \" ]]\n    [[ $(candidate \"bad\") = \"a\" ]]\n    [[ $(candidate \"most\") =\
    \ \"o\" ]]\n    [[ $(candidate \"ab\") = \"\" ]]\n    [[ $(candidate \"ba\") =\
    \ \"\" ]]\n    [[ $(candidate \"quick\") = \"\" ]]\n    [[ $(candidate \"anime\"\
    ) = \"i\" ]]\n    [[ $(candidate \"Asia\") = \"\" ]]\n    [[ $(candidate \"Above\"\
    ) = \"o\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660002111
- exit_code: 1
  program: "#!/bin/bash\n# You are given a word. Your task is to find the closest\
    \ vowel that stands between \n# two consonants from the right side of the word\
    \ (case sensitive).\n# Vowels in the beginning and ending doesn't count. Return\
    \ empty string if you didn't\n# find any vowel met the above condition. \n# You\
    \ may assume that the given string contains English letter only.\n# Example:\n\
    #\n# $1 is a string\nget_closest_vowel() {\n    local word=$1\n    local len=${#word}\n\
    \    local i=0\n    local vowel=''\n    local c1=''\n    local c2=''\n    local\
    \ c3=''\n    local c4=''\n    local c5=''\n    local c6=''\n    local c7=''\n\
    \    local c8=''\n    local c9=''\n    local c10=''\n    local c11=''\n    local\
    \ c12=''\n    local c13=''\n    local c14=''\n    local c15=''\n    local c16=''\n\
    \    local c17=''\n    local c18=''\n    local c19=''\n    local c20=''\n    local\
    \ c21=''\n    local c22=''\n    local c23=''\n    local c24=''\n    local c25=''\n\
    \    local c26=''\n    local c27=''\n    local c28=''\n    local c29=''\n    local\
    \ c30=''\n    local c31=''\n    local c32=''\n    local c33=''\n    local c34=''\n\
    \    local c35=''\n    local c36=''\n    local c37=''\n    local c38=''\n    local\
    \ c39=''\n    local c40=''\n    local c41=''\n    local c42=''\n    local c43=''\n\
    \    local c44=''\n    local c45=''\n    local c46=''\n    local c47=''\n    local\
    \ c48=''\n    local c49=''\n    local c50=''\n    local c51=''\n    local c52=''\n\
    \    local c53=''\n    local c54=''\n    local c55=''\n    local c56=''\n    local\
    \ c57=''\n    local c58=''\n    local c59=''\n    local c60=''\n    local c61=''\n\
    \    local c62=''\n    local c63=''\n    local c64=''\n    local c65=''\n    local\
    \ c66=''\n    local c67=''\n    local c68=''\n    local c69=''\n   \n}\n\ncandidate()\
    \ {\n    get_closest_vowel \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate\
    \ \"yogurt\") = \"u\" ]]\n    [[ $(candidate \"full\") = \"u\" ]]\n    [[ $(candidate\
    \ \"easy\") = \"\" ]]\n    [[ $(candidate \"eAsy\") = \"\" ]]\n    [[ $(candidate\
    \ \"ali\") = \"\" ]]\n    [[ $(candidate \"bad\") = \"a\" ]]\n    [[ $(candidate\
    \ \"most\") = \"o\" ]]\n    [[ $(candidate \"ab\") = \"\" ]]\n    [[ $(candidate\
    \ \"ba\") = \"\" ]]\n    [[ $(candidate \"quick\") = \"\" ]]\n    [[ $(candidate\
    \ \"anime\") = \"i\" ]]\n    [[ $(candidate \"Asia\") = \"\" ]]\n    [[ $(candidate\
    \ \"Above\") = \"o\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660002111
- exit_code: 1
  program: "#!/bin/bash\n# You are given a word. Your task is to find the closest\
    \ vowel that stands between \n# two consonants from the right side of the word\
    \ (case sensitive).\n# Vowels in the beginning and ending doesn't count. Return\
    \ empty string if you didn't\n# find any vowel met the above condition. \n# You\
    \ may assume that the given string contains English letter only.\n# Example:\n\
    #\n# $1 is a string\nget_closest_vowel() {\n    local word=$1\n    local len=${#word}\n\
    \    local i=0\n    local j=0\n    local k=0\n    local l=0\n    local m=0\n \
    \   local n=0\n    local o=0\n    local p=0\n    local q=0\n    local r=0\n  \
    \  local s=0\n    local t=0\n    local u=0\n    local v=0\n    local w=0\n   \
    \ local x=0\n    local y=0\n    local z=0\n    local a=0\n    local e=0\n    local\
    \ i=0\n    local o=0\n    local u=0\n    local vowel=0\n    local vowel_index=0\n\
    \    local consonant=0\n    local consonant_index=0\n    local closest_vowel=''\n\
    \    local closest_vowel_index=0\n    local closest_consonant=''\n    local closest_consonant_index=0\n\
    \    local closest_vowel_distance=0\n    local closest_consonant_distance=0\n\
    \    local distance=0\n    local distance_index=0\n    local distance_vowel=''\n\
    \    local distance_consonant=''\n    local distance_vowel_index=0\n    local\
    \ distance_consonant_index=0\n    local distance_vowel_distance=0\n    local distance_consonant_distance=0\n\
    \    local closest_vowel_distance=0\n    local closest_consonant_distance=0\n\
    \    local distance_vowel_distance=0\n    local distance_consonant_distance=0\n\
    \    local closest_vowel_distance=0\n    local closest_consonant_distance=0\n\
    \    local distance_vowel_distance=0\n    local distance_consonant_distance=0\n\
    \    local closest_vowel_distance=0\n    local closest_consonant_distance=0\n\
    \    local distance_vowel_distance=0\n    local distance_consonant_distance=0\n\
    \    local closest_vowel_distance=0\n    local closest_consonant_distance=0\n\
    \    local distance_vowel_distance=\n}\n\ncandidate() {\n    get_closest_vowel\
    \ \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"yogurt\") = \"u\" ]]\n\
    \    [[ $(candidate \"full\") = \"u\" ]]\n    [[ $(candidate \"easy\") = \"\"\
    \ ]]\n    [[ $(candidate \"eAsy\") = \"\" ]]\n    [[ $(candidate \"ali\") = \"\
    \" ]]\n    [[ $(candidate \"bad\") = \"a\" ]]\n    [[ $(candidate \"most\") =\
    \ \"o\" ]]\n    [[ $(candidate \"ab\") = \"\" ]]\n    [[ $(candidate \"ba\") =\
    \ \"\" ]]\n    [[ $(candidate \"quick\") = \"\" ]]\n    [[ $(candidate \"anime\"\
    ) = \"i\" ]]\n    [[ $(candidate \"Asia\") = \"\" ]]\n    [[ $(candidate \"Above\"\
    ) = \"o\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660002111
- exit_code: 2
  program: "#!/bin/bash\n# You are given a word. Your task is to find the closest\
    \ vowel that stands between \n# two consonants from the right side of the word\
    \ (case sensitive).\n# Vowels in the beginning and ending doesn't count. Return\
    \ empty string if you didn't\n# find any vowel met the above condition. \n# You\
    \ may assume that the given string contains English letter only.\n# Example:\n\
    #\n# $1 is a string\nget_closest_vowel() {\n    local word=$1\n    local len=${#word}\n\
    \    local i=0\n    local j=0\n    local vowels=aeiou\n    local result=\"\"\n\
    \    local found=0\n    local found_index=0\n    local found_char=\"\"\n    local\
    \ found_distance=0\n    local distance=0\n    local char=\"\"\n    local char_index=0\n\
    \    local char_distance=0\n    local char_found=0\n    local char_found_index=0\n\
    \    local char_found_char=\"\"\n    local char_found_distance=0\n    local char_result=\"\
    \"\n    local char_result_index=0\n    local char_result_char=\"\"\n    local\
    \ char_result_distance=0\n    for (( i=0; i<len; i++ )); do\n        char=${word:$i:1}\n\
    \        char_index=$i\n        char_distance=$((len-i))\n        char_found=0\n\
    \        char_found_index=0\n        char_found_char=\"\"\n        char_found_distance=0\n\
    \        char_result=\"\"\n        char_result_index=0\n        char_result_char=\"\
    \"\n        char_result_distance=0\n        for (( j=0; j<${#vowels}; j++ ));\
    \ do\n            if [[ $char == ${vowels:$j:1} ]]; then\n                char_found=1\n\
    \                char_found_index=$char_index\n                char_found_char=$char\n\
    \                char_found_distance=$char_distance\n                if [[ $char_result_distance\
    \ -eq 0 ]]; then\n                    char_result_index=$char_found_index\n  \
    \                  char_result_char=$char_found_char\n                    char_result_distance=$char_found_distance\n\
    \                elif [[ $char_found_distance -lt $char_result_distance ]]; then\n\
    \                    char_result_index=$char_found_index\n                   \
    \ char_result_char=$char_found_char\n                    char_result_distance=$char_found_distance\n\
    \                fi\n            fi\n        done\n        if [[ $char_found -eq\
    \ 1 ]]; then\n            if [[ $found -eq 0 ]]; then\n               \n}\n\n\
    candidate() {\n    get_closest_vowel \"$@\"\n}\n\nset -e\nrun_test() {\n    [[\
    \ $(candidate \"yogurt\") = \"u\" ]]\n    [[ $(candidate \"full\") = \"u\" ]]\n\
    \    [[ $(candidate \"easy\") = \"\" ]]\n    [[ $(candidate \"eAsy\") = \"\" ]]\n\
    \    [[ $(candidate \"ali\") = \"\" ]]\n    [[ $(candidate \"bad\") = \"a\" ]]\n\
    \    [[ $(candidate \"most\") = \"o\" ]]\n    [[ $(candidate \"ab\") = \"\" ]]\n\
    \    [[ $(candidate \"ba\") = \"\" ]]\n    [[ $(candidate \"quick\") = \"\" ]]\n\
    \    [[ $(candidate \"anime\") = \"i\" ]]\n    [[ $(candidate \"Asia\") = \"\"\
    \ ]]\n    [[ $(candidate \"Above\") = \"o\" ]]\n}\n\nrun_test"
  status: SyntaxError
  stderr: '/tmp/tmpbddtxs_7.sh: line 65: syntax error near unexpected token `}''

    /tmp/tmpbddtxs_7.sh: line 65: `}''

    '
  stdout: ''
  timestamp: 1660002111
- exit_code: 1
  program: "#!/bin/bash\n# You are given a word. Your task is to find the closest\
    \ vowel that stands between \n# two consonants from the right side of the word\
    \ (case sensitive).\n# Vowels in the beginning and ending doesn't count. Return\
    \ empty string if you didn't\n# find any vowel met the above condition. \n# You\
    \ may assume that the given string contains English letter only.\n# Example:\n\
    #\n# $1 is a string\nget_closest_vowel() {\n    local word=$1\n    local word_len=${#word}\n\
    \    local i=0\n    local j=0\n    local vowel_pos=0\n    local vowel_pos_arr=()\n\
    \    local vowel_pos_arr_len=0\n    local vowel_pos_arr_idx=0\n    local vowel_pos_arr_idx_min=0\n\
    \    local vowel_pos_arr_idx_max=0\n    local vowel_pos_arr_idx_min_diff=0\n \
    \   local vowel_pos_arr_idx_max_diff=0\n    local vowel_pos_arr_idx_min_diff_tmp=0\n\
    \    local vowel_pos_arr_idx_max_diff_tmp=0\n    local vowel_pos_arr_idx_min_diff_tmp_1=0\n\
    \    local vowel_pos_arr_idx_max_diff_tmp_1=0\n    local vowel_pos_arr_idx_min_diff_tmp_2=0\n\
    \    local vowel_pos_arr_idx_max_diff_tmp_2=0\n    local vowel_pos_arr_idx_min_diff_tmp_3=0\n\
    \    local vowel_pos_arr_idx_max_diff_tmp_3=0\n    local vowel_pos_arr_idx_min_diff_tmp_4=0\n\
    \    local vowel_pos_arr_idx_max_diff_tmp_4=0\n    local vowel_pos_arr_idx_min_diff_tmp_5=0\n\
    \    local vowel_pos_arr_idx_max_diff_tmp_5=0\n    local vowel_pos_arr_idx_min_diff_tmp_6=0\n\
    \    local vowel_pos_arr_idx_max_diff_tmp_6=0\n    local vowel_pos_arr_idx_min_diff_tmp_7=0\n\
    \    local vowel_pos_arr_idx_max_diff_tmp_7=0\n    local vowel_pos_arr_idx_min_diff_tmp_8=0\n\
    \    local vowel_pos_arr_idx_max_diff_tmp_8=0\n   \n}\n\ncandidate() {\n    get_closest_vowel\
    \ \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"yogurt\") = \"u\" ]]\n\
    \    [[ $(candidate \"full\") = \"u\" ]]\n    [[ $(candidate \"easy\") = \"\"\
    \ ]]\n    [[ $(candidate \"eAsy\") = \"\" ]]\n    [[ $(candidate \"ali\") = \"\
    \" ]]\n    [[ $(candidate \"bad\") = \"a\" ]]\n    [[ $(candidate \"most\") =\
    \ \"o\" ]]\n    [[ $(candidate \"ab\") = \"\" ]]\n    [[ $(candidate \"ba\") =\
    \ \"\" ]]\n    [[ $(candidate \"quick\") = \"\" ]]\n    [[ $(candidate \"anime\"\
    ) = \"i\" ]]\n    [[ $(candidate \"Asia\") = \"\" ]]\n    [[ $(candidate \"Above\"\
    ) = \"o\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660002111
- exit_code: 1
  program: "#!/bin/bash\n# You are given a word. Your task is to find the closest\
    \ vowel that stands between \n# two consonants from the right side of the word\
    \ (case sensitive).\n# Vowels in the beginning and ending doesn't count. Return\
    \ empty string if you didn't\n# find any vowel met the above condition. \n# You\
    \ may assume that the given string contains English letter only.\n# Example:\n\
    #\n# $1 is a string\nget_closest_vowel() {\n    local word=$1\n    local len=${#word}\n\
    \    local i=0\n    local vowel=\"\"\n    local prev_char=\"\"\n    local curr_char=\"\
    \"\n    local next_char=\"\"\n    local result=\"\"\n    local vowels=\"aeiou\"\
    \n    local consonants=\"bcdfghjklmnpqrstvwxyz\"\n    local is_vowel=0\n    local\
    \ is_consonant=0\n    local is_prev_consonant=0\n    local is_next_consonant=0\n\
    \    local is_prev_vowel=0\n    local is_next_vowel=0\n    local is_prev_empty=0\n\
    \    local is_next_empty=0\n    local is_prev_char_found=0\n    local is_next_char_found=0\n\
    \    local is_vowel_found=0\n    local is_consonant_found=0\n    local is_prev_consonant_found=0\n\
    \    local is_next_consonant_found=0\n    local is_prev_vowel_found=0\n    local\
    \ is_next_vowel_found=0\n    local is_prev_empty_found=0\n    local is_next_empty_found=0\n\
    \    local is_prev_char_found=0\n    local is_next_char_found=0\n    local is_vowel_found=0\n\
    \    local is_consonant_found=0\n    local is_prev_consonant_found=0\n    local\
    \ is_next_consonant_found=0\n    local is_prev_vowel_found=0\n    local is_next_vowel_found=0\n\
    \    local is_prev_empty_found=0\n    local is_next_empty_found=0\n    local is_prev_char_found=0\n\
    \    local is_next_char_found=0\n    local is_vowel_found=0\n    local is_consonant_found=0\n\
    \    local is_prev_consonant_found=0\n    local is_next_consonant_found=0\n  \
    \  local is_prev_v\n}\n\ncandidate() {\n    get_closest_vowel \"$@\"\n}\n\nset\
    \ -e\nrun_test() {\n    [[ $(candidate \"yogurt\") = \"u\" ]]\n    [[ $(candidate\
    \ \"full\") = \"u\" ]]\n    [[ $(candidate \"easy\") = \"\" ]]\n    [[ $(candidate\
    \ \"eAsy\") = \"\" ]]\n    [[ $(candidate \"ali\") = \"\" ]]\n    [[ $(candidate\
    \ \"bad\") = \"a\" ]]\n    [[ $(candidate \"most\") = \"o\" ]]\n    [[ $(candidate\
    \ \"ab\") = \"\" ]]\n    [[ $(candidate \"ba\") = \"\" ]]\n    [[ $(candidate\
    \ \"quick\") = \"\" ]]\n    [[ $(candidate \"anime\") = \"i\" ]]\n    [[ $(candidate\
    \ \"Asia\") = \"\" ]]\n    [[ $(candidate \"Above\") = \"o\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660002111
- exit_code: 1
  program: "#!/bin/bash\n# You are given a word. Your task is to find the closest\
    \ vowel that stands between \n# two consonants from the right side of the word\
    \ (case sensitive).\n# Vowels in the beginning and ending doesn't count. Return\
    \ empty string if you didn't\n# find any vowel met the above condition. \n# You\
    \ may assume that the given string contains English letter only.\n# Example:\n\
    #\n# $1 is a string\nget_closest_vowel() {\n  local word=\"$1\"\n  local vowels=\"\
    aeiou\"\n  local consonants=\"bcdfghjklmnpqrstvwxyz\"\n  local closest_vowel=\"\
    \"\n  local closest_vowel_index=0\n  local closest_consonant_index=0\n  local\
    \ closest_consonant=\"\"\n  local index=0\n  local char=\"\"\n  local char_index=0\n\
    \  local char_index_after_vowel=0\n  local char_index_before_vowel=0\n  local\
    \ char_index_after_consonant=0\n  local char_index_before_consonant=0\n  local\
    \ char_index_after_vowel_before_consonant=0\n  local char_index_before_vowel_after_consonant=0\n\
    \  local char_index_after_vowel_after_consonant=0\n  local char_index_before_vowel_before_consonant=0\n\
    \  local char_index_after_vowel_before_consonant_after_consonant=0\n  local char_index_before_vowel_after_consonant_before_consonant=0\n\
    \  local char_index_after_vowel_after_consonant_after_consonant=0\n  local char_index_before_vowel_before_consonant_before_consonant=0\n\
    \  local char_index_after_vowel_before_consonant_after_consonant_after_consonant=0\n\
    \  local char_index_before_vowel_after_consonant_before_consonant_before_consonant=0\n\
    \  local char_index_after_vowel_after_consonant_after_consonant_after_consonant=0\n\
    \  local char_index_before_vowel_before_consonant_before_consonant_before_consonant=0\n\
    \  local char_index_after_vowel_before_consonant_after_consonant_after_consonant_after_consonant=0\n\
    \  local char_index\n}\n\ncandidate() {\n    get_closest_vowel \"$@\"\n}\n\nset\
    \ -e\nrun_test() {\n    [[ $(candidate \"yogurt\") = \"u\" ]]\n    [[ $(candidate\
    \ \"full\") = \"u\" ]]\n    [[ $(candidate \"easy\") = \"\" ]]\n    [[ $(candidate\
    \ \"eAsy\") = \"\" ]]\n    [[ $(candidate \"ali\") = \"\" ]]\n    [[ $(candidate\
    \ \"bad\") = \"a\" ]]\n    [[ $(candidate \"most\") = \"o\" ]]\n    [[ $(candidate\
    \ \"ab\") = \"\" ]]\n    [[ $(candidate \"ba\") = \"\" ]]\n    [[ $(candidate\
    \ \"quick\") = \"\" ]]\n    [[ $(candidate \"anime\") = \"i\" ]]\n    [[ $(candidate\
    \ \"Asia\") = \"\" ]]\n    [[ $(candidate \"Above\") = \"o\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660002111
- exit_code: 1
  program: "#!/bin/bash\n# You are given a word. Your task is to find the closest\
    \ vowel that stands between \n# two consonants from the right side of the word\
    \ (case sensitive).\n# Vowels in the beginning and ending doesn't count. Return\
    \ empty string if you didn't\n# find any vowel met the above condition. \n# You\
    \ may assume that the given string contains English letter only.\n# Example:\n\
    #\n# $1 is a string\nget_closest_vowel() {\n    local word=$1\n    local word_len=${#word}\n\
    \    local result=\"\"\n    local i=0\n    local j=0\n    local k=0\n    local\
    \ l=0\n    local m=0\n    local n=0\n    local o=0\n    local p=0\n    local q=0\n\
    \    local r=0\n    local s=0\n    local t=0\n    local u=0\n    local v=0\n \
    \   local w=0\n    local x=0\n    local y=0\n    local z=0\n    local a=0\n  \
    \  local e=0\n    local i=0\n    local o=0\n    local u=0\n    local vowel_count=0\n\
    \    local vowel_index=0\n    local vowel_index_list=()\n    local vowel_index_list_len=0\n\
    \    local vowel_index_list_last_index=0\n    local vowel_index_list_last_index_value=0\n\
    \    local vowel_index_list_last_index_value_plus_one=0\n    local vowel_index_list_last_index_value_plus_one_char=\"\
    \"\n    local vowel_index_list_last_index_value_plus_one_char_is_vowel=0\n   \
    \ local vowel_index_list_last_index_value_plus_one_char_is_consonant=0\n    local\
    \ vowel_index_list_last_index_value_minus_one=0\n    local vowel_index_list_last_index_value_minus_one_char=\"\
    \"\n    local vowel_index_list_last_index_value_minus_one_char_is_vowel=0\n  \
    \  local vowel_index_list_last_index_value_minus_one_char_is_consonant=0\n   \
    \ local vowel_index_list_last_index_value_plus_one_is_vowel=0\n    local vowel_index_list_last_index_value_plus_one_is_consonant=0\n\
    \    local vowel_index_list_last_index_value_minus_one_is_vowel=0\n    local vowel_index_list_last_index\n\
    }\n\ncandidate() {\n    get_closest_vowel \"$@\"\n}\n\nset -e\nrun_test() {\n\
    \    [[ $(candidate \"yogurt\") = \"u\" ]]\n    [[ $(candidate \"full\") = \"\
    u\" ]]\n    [[ $(candidate \"easy\") = \"\" ]]\n    [[ $(candidate \"eAsy\") =\
    \ \"\" ]]\n    [[ $(candidate \"ali\") = \"\" ]]\n    [[ $(candidate \"bad\")\
    \ = \"a\" ]]\n    [[ $(candidate \"most\") = \"o\" ]]\n    [[ $(candidate \"ab\"\
    ) = \"\" ]]\n    [[ $(candidate \"ba\") = \"\" ]]\n    [[ $(candidate \"quick\"\
    ) = \"\" ]]\n    [[ $(candidate \"anime\") = \"i\" ]]\n    [[ $(candidate \"Asia\"\
    ) = \"\" ]]\n    [[ $(candidate \"Above\") = \"o\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660002111
- exit_code: 1
  program: "#!/bin/bash\n# You are given a word. Your task is to find the closest\
    \ vowel that stands between \n# two consonants from the right side of the word\
    \ (case sensitive).\n# Vowels in the beginning and ending doesn't count. Return\
    \ empty string if you didn't\n# find any vowel met the above condition. \n# You\
    \ may assume that the given string contains English letter only.\n# Example:\n\
    #\n# $1 is a string\nget_closest_vowel() {\n    local word=$1\n    local word_len=${#word}\n\
    \    local i=0\n    local vowel_pos=0\n    local vowel_pos_len=0\n    local vowel_pos_len_min=${word_len}\n\
    \    local vowel_pos_min=0\n    local vowel_pos_min_len=0\n    local vowel_pos_min_len_min=${word_len}\n\
    \    local vowel_pos_min_min=0\n    local vowel_pos_min_min_len=0\n    local vowel_pos_min_min_len_min=${word_len}\n\
    \    local vowel_pos_min_min_min=0\n    local vowel_pos_min_min_min_len=0\n  \
    \  local vowel_pos_min_min_min_len_min=${word_len}\n    local vowel_pos_min_min_min_min=0\n\
    \    local vowel_pos_min_min_min_min_len=0\n    local vowel_pos_min_min_min_min_len_min=${word_len}\n\
    \    local vowel_pos_min_min_min_min_min=0\n    local vowel_pos_min_min_min_min_min_len=0\n\
    \    local vowel_pos_min_min_min_min_min_len_min=${word_len}\n    local vowel_pos_min_min_min_min_min_min=0\n\
    \    local vowel_pos_min_min_min_min_min_min_len=0\n    local vowel_pos_min_min_min_min_min_min_len_min=${word_len}\n\
    \    local vowel_pos_min_min_min_min_min_min_min=0\n    local vowel_pos_min_min_min_min_min_min_min_len=0\n\
    \    local vowel_pos_min_min_min_min_min_min_min_len_min=${word_len}\n    local\
    \ vowel_pos_min_min_min_min_min_min_min_min=0\n    local vowel_pos_min_min_min_min_min_min_min_min_len=\n\
    }\n\ncandidate() {\n    get_closest_vowel \"$@\"\n}\n\nset -e\nrun_test() {\n\
    \    [[ $(candidate \"yogurt\") = \"u\" ]]\n    [[ $(candidate \"full\") = \"\
    u\" ]]\n    [[ $(candidate \"easy\") = \"\" ]]\n    [[ $(candidate \"eAsy\") =\
    \ \"\" ]]\n    [[ $(candidate \"ali\") = \"\" ]]\n    [[ $(candidate \"bad\")\
    \ = \"a\" ]]\n    [[ $(candidate \"most\") = \"o\" ]]\n    [[ $(candidate \"ab\"\
    ) = \"\" ]]\n    [[ $(candidate \"ba\") = \"\" ]]\n    [[ $(candidate \"quick\"\
    ) = \"\" ]]\n    [[ $(candidate \"anime\") = \"i\" ]]\n    [[ $(candidate \"Asia\"\
    ) = \"\" ]]\n    [[ $(candidate \"Above\") = \"o\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660002111
- exit_code: 1
  program: "#!/bin/bash\n# You are given a word. Your task is to find the closest\
    \ vowel that stands between \n# two consonants from the right side of the word\
    \ (case sensitive).\n# Vowels in the beginning and ending doesn't count. Return\
    \ empty string if you didn't\n# find any vowel met the above condition. \n# You\
    \ may assume that the given string contains English letter only.\n# Example:\n\
    #\n# $1 is a string\nget_closest_vowel() {\n  local word=$1\n  local len=${#word}\n\
    \  local i=0\n  local vowel=\"\"\n  local vowels=\"aeiou\"\n  local consonants=\"\
    bcdfghjklmnpqrstvwxyz\"\n  local c1=\"\"\n  local c2=\"\"\n  local c3=\"\"\n \
    \ local c4=\"\"\n  local c5=\"\"\n  local c6=\"\"\n  local c7=\"\"\n  local c8=\"\
    \"\n  local c9=\"\"\n  local c10=\"\"\n  local c11=\"\"\n  local c12=\"\"\n  local\
    \ c13=\"\"\n  local c14=\"\"\n  local c15=\"\"\n  local c16=\"\"\n  local c17=\"\
    \"\n  local c18=\"\"\n  local c19=\"\"\n  local c20=\"\"\n  local c21=\"\"\n \
    \ local c22=\"\"\n  local c23=\"\"\n  local c24=\"\"\n  local c25=\"\"\n  local\
    \ c26=\"\"\n  local c27=\"\"\n  local c28=\"\"\n  local c29=\"\"\n  local c30=\"\
    \"\n  local c31=\"\"\n  local c32=\"\"\n  local c33=\"\"\n  local c34=\"\"\n \
    \ local c35=\"\"\n  local c36=\"\"\n  local c37=\"\"\n  local c38=\"\"\n  local\
    \ c39=\"\"\n  local c40=\"\"\n  local c41=\"\"\n  local c42=\"\"\n  local c43=\"\
    \"\n  local c44=\"\"\n  local c45=\"\"\n  local c46=\"\"\n  local c47=\"\"\n \
    \ local c48=\"\"\n  local c49=\"\"\n  local c50=\"\"\n  local c51=\"\"\n  local\
    \ c52=\"\"\n  local c53=\"\"\n  local c54=\"\"\n  local c55=\"\"\n  local c56=\"\
    \"\n  local c57=\"\"\n  local c58=\"\"\n  local c59=\"\"\n  local c60=\"\"\n \
    \ local c61=\"\"\n  local c62=\"\"\n  local c63=\"\"\n  local c64=\"\"\n  local\
    \ c65=\"\"\n  local c66=\"\"\n  local c67=\"\"\n  local c68=\"\"\n  local c69=\"\
    \"\n  local c70=\"\"\n  local c71=\"\"\n  local c72=\"\"\n  local c73=\"\"\n \
    \ local c74=\"\"\n  local c75=\"\"\n  local c76\n}\n\ncandidate() {\n    get_closest_vowel\
    \ \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"yogurt\") = \"u\" ]]\n\
    \    [[ $(candidate \"full\") = \"u\" ]]\n    [[ $(candidate \"easy\") = \"\"\
    \ ]]\n    [[ $(candidate \"eAsy\") = \"\" ]]\n    [[ $(candidate \"ali\") = \"\
    \" ]]\n    [[ $(candidate \"bad\") = \"a\" ]]\n    [[ $(candidate \"most\") =\
    \ \"o\" ]]\n    [[ $(candidate \"ab\") = \"\" ]]\n    [[ $(candidate \"ba\") =\
    \ \"\" ]]\n    [[ $(candidate \"quick\") = \"\" ]]\n    [[ $(candidate \"anime\"\
    ) = \"i\" ]]\n    [[ $(candidate \"Asia\") = \"\" ]]\n    [[ $(candidate \"Above\"\
    ) = \"o\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660002111
- exit_code: 1
  program: "#!/bin/bash\n# You are given a word. Your task is to find the closest\
    \ vowel that stands between \n# two consonants from the right side of the word\
    \ (case sensitive).\n# Vowels in the beginning and ending doesn't count. Return\
    \ empty string if you didn't\n# find any vowel met the above condition. \n# You\
    \ may assume that the given string contains English letter only.\n# Example:\n\
    #\n# $1 is a string\nget_closest_vowel() {\n    local word=$1\n    local len=${#word}\n\
    \    local i=0\n    local j=0\n    local k=0\n    local l=0\n    local m=0\n \
    \   local n=0\n    local o=0\n    local p=0\n    local q=0\n    local r=0\n  \
    \  local s=0\n    local t=0\n    local u=0\n    local v=0\n    local w=0\n   \
    \ local x=0\n    local y=0\n    local z=0\n    local a=0\n    local e=0\n    local\
    \ i=0\n    local o=0\n    local u=0\n    local vowel=0\n    local consonant=0\n\
    \    local closest_vowel=''\n    local closest_vowel_index=0\n    local closest_vowel_distance=0\n\
    \    local closest_vowel_distance_tmp=0\n    local closest_vowel_index_tmp=0\n\
    \    local closest_vowel_distance_tmp=0\n    local closest_vowel_index_tmp=0\n\
    \    local closest_vowel_distance_tmp=0\n    local closest_vowel_index_tmp=0\n\
    \    local closest_vowel_distance_tmp=0\n    local closest_vowel_index_tmp=0\n\
    \    local closest_vowel_distance_tmp=0\n    local closest_vowel_index_tmp=0\n\
    \    local closest_vowel_distance_tmp=0\n    local closest_vowel_index_tmp=0\n\
    \    local closest_vowel_distance_tmp=0\n    local closest_vowel_index_tmp=0\n\
    \    local closest_vowel_distance_tmp=0\n    local closest_vowel_index_tmp=0\n\
    \    local closest_vowel_distance_tmp=0\n    local closest_vowel_index_tmp=0\n\
    \    local closest_vowel_distance_tmp=0\n    local closest_vowel_index_tmp=0\n\
    \    local closest_vowel_distance_tmp=0\n    local closest_vowel_index_tmp=0\n\
    \    local closest\n}\n\ncandidate() {\n    get_closest_vowel \"$@\"\n}\n\nset\
    \ -e\nrun_test() {\n    [[ $(candidate \"yogurt\") = \"u\" ]]\n    [[ $(candidate\
    \ \"full\") = \"u\" ]]\n    [[ $(candidate \"easy\") = \"\" ]]\n    [[ $(candidate\
    \ \"eAsy\") = \"\" ]]\n    [[ $(candidate \"ali\") = \"\" ]]\n    [[ $(candidate\
    \ \"bad\") = \"a\" ]]\n    [[ $(candidate \"most\") = \"o\" ]]\n    [[ $(candidate\
    \ \"ab\") = \"\" ]]\n    [[ $(candidate \"ba\") = \"\" ]]\n    [[ $(candidate\
    \ \"quick\") = \"\" ]]\n    [[ $(candidate \"anime\") = \"i\" ]]\n    [[ $(candidate\
    \ \"Asia\") = \"\" ]]\n    [[ $(candidate \"Above\") = \"o\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660002111
- exit_code: 1
  program: "#!/bin/bash\n# You are given a word. Your task is to find the closest\
    \ vowel that stands between \n# two consonants from the right side of the word\
    \ (case sensitive).\n# Vowels in the beginning and ending doesn't count. Return\
    \ empty string if you didn't\n# find any vowel met the above condition. \n# You\
    \ may assume that the given string contains English letter only.\n# Example:\n\
    #\n# $1 is a string\nget_closest_vowel() {\n    local word=$1\n    local word_len=${#word}\n\
    \    local word_rev=$(echo $word | rev)\n    local i=0\n    local vowel_pos=0\n\
    \    local vowel_pos_rev=0\n    local vowel_pos_rev_prev=0\n    local vowel_pos_prev=0\n\
    \    local vowel_pos_prev_prev=0\n    local vowel_pos_prev_prev_prev=0\n    local\
    \ vowel_pos_prev_prev_prev_prev=0\n    local vowel_pos_prev_prev_prev_prev_prev=0\n\
    \    local vowel_pos_prev_prev_prev_prev_prev_prev=0\n    local vowel_pos_prev_prev_prev_prev_prev_prev_prev=0\n\
    \    local vowel_pos_prev_prev_prev_prev_prev_prev_prev_prev=0\n    local vowel_pos_prev_prev_prev_prev_prev_prev_prev_prev_prev=0\n\
    \    local vowel_pos_prev_prev_prev_prev_prev_prev_prev_prev_prev_prev=0\n   \
    \ local vowel_pos_prev_prev_prev_prev_prev_prev_prev_prev_prev_prev_prev=0\n \
    \   local vowel_pos_prev_prev_prev_prev_prev_prev_prev_prev_prev_prev_prev_prev=0\n\
    \    local vowel_pos_prev_prev_prev_prev_prev_prev_prev_prev_prev_prev_prev_prev_prev=0\n\
    \    local vowel_pos_prev_prev_prev_prev_prev_prev_prev_prev_prev_prev_prev_prev_prev_prev=0\n\
    \    local vowel_pos_prev_prev_prev_prev_prev_prev_prev_prev_prev_prev_prev_prev_prev_prev_prev=0\n\
    \    local vowel_pos_prev_prev_prev_prev_prev_prev_prev_prev_prev_prev_prev_prev_prev_prev_prev_prev=0\n\
    \    local vowel_pos_prev_prev_prev_prev_prev_prev_prev_prev_prev_prev_prev_prev_prev_prev_prev_prev_prev=0\n\
    \    local\n}\n\ncandidate() {\n    get_closest_vowel \"$@\"\n}\n\nset -e\nrun_test()\
    \ {\n    [[ $(candidate \"yogurt\") = \"u\" ]]\n    [[ $(candidate \"full\") =\
    \ \"u\" ]]\n    [[ $(candidate \"easy\") = \"\" ]]\n    [[ $(candidate \"eAsy\"\
    ) = \"\" ]]\n    [[ $(candidate \"ali\") = \"\" ]]\n    [[ $(candidate \"bad\"\
    ) = \"a\" ]]\n    [[ $(candidate \"most\") = \"o\" ]]\n    [[ $(candidate \"ab\"\
    ) = \"\" ]]\n    [[ $(candidate \"ba\") = \"\" ]]\n    [[ $(candidate \"quick\"\
    ) = \"\" ]]\n    [[ $(candidate \"anime\") = \"i\" ]]\n    [[ $(candidate \"Asia\"\
    ) = \"\" ]]\n    [[ $(candidate \"Above\") = \"o\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660002111
- exit_code: 1
  program: "#!/bin/bash\n# You are given a word. Your task is to find the closest\
    \ vowel that stands between \n# two consonants from the right side of the word\
    \ (case sensitive).\n# Vowels in the beginning and ending doesn't count. Return\
    \ empty string if you didn't\n# find any vowel met the above condition. \n# You\
    \ may assume that the given string contains English letter only.\n# Example:\n\
    #\n# $1 is a string\nget_closest_vowel() {\n    local word=$1\n    local word_len=${#word}\n\
    \    local i=0\n    local j=0\n    local k=0\n    local vowel_index=0\n    local\
    \ vowel_index_arr=()\n    local vowel_index_arr_len=0\n    local closest_vowel_index=0\n\
    \    local closest_vowel=\"\"\n    local vowels=\"aeiou\"\n    local vowels_len=${#vowels}\n\
    \    local is_vowel=0\n    local is_consonant=0\n    local is_first_char=0\n \
    \   local is_last_char=0\n    local is_first_vowel=0\n    local is_last_vowel=0\n\
    \    local is_first_consonant=0\n    local is_last_consonant=0\n    local is_first_vowel_found=0\n\
    \    local is_last_vowel_found=0\n    local is_first_consonant_found=0\n    local\
    \ is_last_consonant_found=0\n    local is_first_vowel_found_index=0\n    local\
    \ is_last_vowel_found_index=0\n    local is_first_consonant_found_index=0\n  \
    \  local is_last_consonant_found_index=0\n    local is_first_vowel_found_char=\"\
    \"\n    local is_last_vowel_found_char=\"\"\n    local is_first_consonant_found_char=\"\
    \"\n    local is_last_consonant_found_char=\"\"\n    local is_first_vowel_found_char_index=0\n\
    \    local is_last_vowel_found_char_index=0\n    local is_first_consonant_found_char_index=0\n\
    \    local is_last_consonant_found_char_index=0\n    local is_first_vowel_found_char_index_diff=0\n\
    \    local is_last_vowel_found_char_index_diff=0\n    local is_first_consonant_found_char_index_diff=0\n\
    \   \n}\n\ncandidate() {\n    get_closest_vowel \"$@\"\n}\n\nset -e\nrun_test()\
    \ {\n    [[ $(candidate \"yogurt\") = \"u\" ]]\n    [[ $(candidate \"full\") =\
    \ \"u\" ]]\n    [[ $(candidate \"easy\") = \"\" ]]\n    [[ $(candidate \"eAsy\"\
    ) = \"\" ]]\n    [[ $(candidate \"ali\") = \"\" ]]\n    [[ $(candidate \"bad\"\
    ) = \"a\" ]]\n    [[ $(candidate \"most\") = \"o\" ]]\n    [[ $(candidate \"ab\"\
    ) = \"\" ]]\n    [[ $(candidate \"ba\") = \"\" ]]\n    [[ $(candidate \"quick\"\
    ) = \"\" ]]\n    [[ $(candidate \"anime\") = \"i\" ]]\n    [[ $(candidate \"Asia\"\
    ) = \"\" ]]\n    [[ $(candidate \"Above\") = \"o\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660002111
- exit_code: 1
  program: "#!/bin/bash\n# You are given a word. Your task is to find the closest\
    \ vowel that stands between \n# two consonants from the right side of the word\
    \ (case sensitive).\n# Vowels in the beginning and ending doesn't count. Return\
    \ empty string if you didn't\n# find any vowel met the above condition. \n# You\
    \ may assume that the given string contains English letter only.\n# Example:\n\
    #\n# $1 is a string\nget_closest_vowel() {\n    local word=$1\n    local word_len=${#word}\n\
    \    local i=0\n    local j=0\n    local k=0\n    local vowels=\"aeiou\"\n   \
    \ local consonants=\"bcdfghjklmnpqrstvwxyz\"\n    local vowel_pos=0\n    local\
    \ consonant_pos=0\n    local closest_vowel=\"\"\n    local closest_vowel_pos=0\n\
    \    local closest_consonant_pos=0\n    local closest_vowel_dist=0\n    local\
    \ closest_consonant_dist=0\n    local vowel_dist=0\n    local consonant_dist=0\n\
    \    local vowel=\"\"\n    local consonant=\"\"\n    local vowel_found=0\n   \
    \ local consonant_found=0\n    local vowel_pos_found=0\n    local consonant_pos_found=0\n\
    \    local vowel_dist_found=0\n    local consonant_dist_found=0\n    local closest_vowel_found=0\n\
    \    local closest_consonant_found=0\n    local closest_vowel_pos_found=0\n  \
    \  local closest_consonant_pos_found=0\n    local closest_vowel_dist_found=0\n\
    \    local closest_consonant_dist_found=0\n    local closest_vowel_dist_found=0\n\
    \    local closest_consonant_dist_found=0\n    local closest_vowel_dist_found=0\n\
    \    local closest_consonant_dist_found=0\n    local closest_vowel_dist_found=0\n\
    \    local closest_consonant_dist_found=0\n    local closest_vowel_dist_found=0\n\
    \    local closest_consonant_dist_found=0\n    local closest_vowel_dist_found=0\n\
    \    local closest_consonant_dist_found=0\n    local closest_vowel_dist_found=0\n\
    \    local closest_consonant_dist_found=0\n    local closest_vowel_dist_found=0\n\
    \    local closest_consonant_dist_found=0\n    local closest_vowel_\n}\n\ncandidate()\
    \ {\n    get_closest_vowel \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate\
    \ \"yogurt\") = \"u\" ]]\n    [[ $(candidate \"full\") = \"u\" ]]\n    [[ $(candidate\
    \ \"easy\") = \"\" ]]\n    [[ $(candidate \"eAsy\") = \"\" ]]\n    [[ $(candidate\
    \ \"ali\") = \"\" ]]\n    [[ $(candidate \"bad\") = \"a\" ]]\n    [[ $(candidate\
    \ \"most\") = \"o\" ]]\n    [[ $(candidate \"ab\") = \"\" ]]\n    [[ $(candidate\
    \ \"ba\") = \"\" ]]\n    [[ $(candidate \"quick\") = \"\" ]]\n    [[ $(candidate\
    \ \"anime\") = \"i\" ]]\n    [[ $(candidate \"Asia\") = \"\" ]]\n    [[ $(candidate\
    \ \"Above\") = \"o\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660002111
- exit_code: 1
  program: "#!/bin/bash\n# You are given a word. Your task is to find the closest\
    \ vowel that stands between \n# two consonants from the right side of the word\
    \ (case sensitive).\n# Vowels in the beginning and ending doesn't count. Return\
    \ empty string if you didn't\n# find any vowel met the above condition. \n# You\
    \ may assume that the given string contains English letter only.\n# Example:\n\
    #\n# $1 is a string\nget_closest_vowel() {\n    local word=$1\n    local len=${#word}\n\
    \    local i=0\n    local vowel=\"\"\n    local cons=\"\"\n    local cons_len=0\n\
    \    local vowel_len=0\n    local vowel_idx=0\n    local cons_idx=0\n    local\
    \ vowel_idx_list=()\n    local cons_idx_list=()\n    local vowel_len_list=()\n\
    \    local cons_len_list=()\n    local min_len=0\n    local min_idx=0\n    local\
    \ min_idx_list=()\n    local min_len_list=()\n    local min_len_idx=0\n    local\
    \ min_len_idx_list=()\n    local min_len_idx_len=0\n    local min_len_idx_len_list=()\n\
    \    local min_len_idx_len_idx=0\n    local min_len_idx_len_idx_list=()\n    local\
    \ min_len_idx_len_idx_len=0\n    local min_len_idx_len_idx_len_list=()\n    local\
    \ min_len_idx_len_idx_len_idx=0\n    local min_len_idx_len_idx_len_idx_list=()\n\
    \    local min_len_idx_len_idx_len_idx_len=0\n    local min_len_idx_len_idx_len_idx_len_list=()\n\
    \    local min_len_idx_len_idx_len_idx_len_idx=0\n    local min_len_idx_len_idx_len_idx_len_idx_list=()\n\
    \    local min_len_idx_len_idx_len_idx_len_idx_len=0\n    local min_len_idx_len_idx_len_idx_len_idx_len_list=()\n\
    \    local min_len_idx_len_idx_len_idx_len_idx_len_idx=0\n    local min_len_id\n\
    }\n\ncandidate() {\n    get_closest_vowel \"$@\"\n}\n\nset -e\nrun_test() {\n\
    \    [[ $(candidate \"yogurt\") = \"u\" ]]\n    [[ $(candidate \"full\") = \"\
    u\" ]]\n    [[ $(candidate \"easy\") = \"\" ]]\n    [[ $(candidate \"eAsy\") =\
    \ \"\" ]]\n    [[ $(candidate \"ali\") = \"\" ]]\n    [[ $(candidate \"bad\")\
    \ = \"a\" ]]\n    [[ $(candidate \"most\") = \"o\" ]]\n    [[ $(candidate \"ab\"\
    ) = \"\" ]]\n    [[ $(candidate \"ba\") = \"\" ]]\n    [[ $(candidate \"quick\"\
    ) = \"\" ]]\n    [[ $(candidate \"anime\") = \"i\" ]]\n    [[ $(candidate \"Asia\"\
    ) = \"\" ]]\n    [[ $(candidate \"Above\") = \"o\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660002111
- exit_code: 2
  program: "#!/bin/bash\n# You are given a word. Your task is to find the closest\
    \ vowel that stands between \n# two consonants from the right side of the word\
    \ (case sensitive).\n# Vowels in the beginning and ending doesn't count. Return\
    \ empty string if you didn't\n# find any vowel met the above condition. \n# You\
    \ may assume that the given string contains English letter only.\n# Example:\n\
    #\n# $1 is a string\nget_closest_vowel() {\n    local word=$1\n    local vowels=\"\
    aeiou\"\n    local consonants=\"bcdfghjklmnpqrstvwxyz\"\n    local closest_vowel=\"\
    \"\n    local closest_vowel_index=0\n    local closest_vowel_distance=0\n    local\
    \ current_vowel_index=0\n    local current_vowel_distance=0\n    local current_vowel=\"\
    \"\n    local current_consonant=\"\"\n    local current_consonant_index=0\n  \
    \  local current_consonant_distance=0\n    local current_consonant_found=false\n\
    \    local current_vowel_found=false\n    local current_vowel_found_first=false\n\
    \    local current_consonant_found_first=false\n    local i=0\n    local j=0\n\
    \    local word_length=${#word}\n    local word_length_minus_one=$((word_length-1))\n\
    \    local word_length_minus_two=$((word_length-2))\n    for ((i=word_length_minus_one;\
    \ i>=0; i--)); do\n        current_vowel=${word:i:1}\n        current_vowel_found=false\n\
    \        for ((j=0; j<${#vowels}; j++)); do\n            if [[ \"$current_vowel\"\
    \ == \"${vowels:j:1}\" ]]; then\n                current_vowel_found=true\n  \
    \              break\n            fi\n        done\n        if [[ \"$current_vowel_found\"\
    \ == true ]]; then\n            if [[ \"$current_vowel_found_first\" == false\
    \ ]]; then\n                current_vowel_found_first=true\n                current_vowel_index=$i\n\
    \                current_vowel_distance=$((word_length_minus_one-i))\n       \
    \         closest_vowel=$current_vowel\n                closest_vowel_index=$current_vowel_index\n\
    \                closest_vowel_distance=$current_vowel_distance\n            else\n\
    \                current_consonant_found=false\n                for ((j=0\n}\n\
    \ncandidate() {\n    get_closest_vowel \"$@\"\n}\n\nset -e\nrun_test() {\n   \
    \ [[ $(candidate \"yogurt\") = \"u\" ]]\n    [[ $(candidate \"full\") = \"u\"\
    \ ]]\n    [[ $(candidate \"easy\") = \"\" ]]\n    [[ $(candidate \"eAsy\") = \"\
    \" ]]\n    [[ $(candidate \"ali\") = \"\" ]]\n    [[ $(candidate \"bad\") = \"\
    a\" ]]\n    [[ $(candidate \"most\") = \"o\" ]]\n    [[ $(candidate \"ab\") =\
    \ \"\" ]]\n    [[ $(candidate \"ba\") = \"\" ]]\n    [[ $(candidate \"quick\"\
    ) = \"\" ]]\n    [[ $(candidate \"anime\") = \"i\" ]]\n    [[ $(candidate \"Asia\"\
    ) = \"\" ]]\n    [[ $(candidate \"Above\") = \"o\" ]]\n}\n\nrun_test"
  status: SyntaxError
  stderr: '/tmp/tmpq90pemd9.sh: line 51: unexpected EOF while looking for matching
    `)''

    /tmp/tmpq90pemd9.sh: line 76: syntax error: unexpected end of file

    '
  stdout: ''
  timestamp: 1660002111
- exit_code: 1
  program: "#!/bin/bash\n# You are given a word. Your task is to find the closest\
    \ vowel that stands between \n# two consonants from the right side of the word\
    \ (case sensitive).\n# Vowels in the beginning and ending doesn't count. Return\
    \ empty string if you didn't\n# find any vowel met the above condition. \n# You\
    \ may assume that the given string contains English letter only.\n# Example:\n\
    #\n# $1 is a string\nget_closest_vowel() {\n    local word=$1\n    local word_len=${#word}\n\
    \    local closest_vowel=\"\"\n    local closest_vowel_index=0\n    local closest_vowel_distance=0\n\
    \    local vowel_index=0\n    local vowel_distance=0\n    local i=0\n    local\
    \ j=0\n    local char=\"\"\n    local char_code=0\n    local char_is_vowel=0\n\
    \    local char_is_consonant=0\n    local char_is_previous_consonant=0\n    local\
    \ char_is_next_consonant=0\n    local char_is_previous_vowel=0\n    local char_is_next_vowel=0\n\
    \    local char_is_previous_letter=0\n    local char_is_next_letter=0\n    local\
    \ previous_char=\"\"\n    local next_char=\"\"\n    local previous_char_code=0\n\
    \    local next_char_code=0\n    local previous_char_is_vowel=0\n    local next_char_is_vowel=0\n\
    \    local previous_char_is_consonant=0\n    local next_char_is_consonant=0\n\
    \    local previous_char_is_letter=0\n    local next_char_is_letter=0\n    local\
    \ is_first_letter=0\n    local is_last_letter=0\n    local is_first_vowel=0\n\
    \    local is_last_vowel=0\n    local is_first_consonant=0\n    local is_last_consonant=0\n\
    \    local is_first_letter_vowel=0\n    local is_last_letter_vowel=0\n    local\
    \ is_first_letter_consonant=0\n    local is_last_letter_consonant=0\n    local\
    \ is_first_letter_consonant_next_vowel=0\n    local is_last_letter_consonant_previous_vowel=0\n\
    \    local is_first_letter_vowel_next_consonant=0\n    local is_last_letter_vowel_previous\n\
    }\n\ncandidate() {\n    get_closest_vowel \"$@\"\n}\n\nset -e\nrun_test() {\n\
    \    [[ $(candidate \"yogurt\") = \"u\" ]]\n    [[ $(candidate \"full\") = \"\
    u\" ]]\n    [[ $(candidate \"easy\") = \"\" ]]\n    [[ $(candidate \"eAsy\") =\
    \ \"\" ]]\n    [[ $(candidate \"ali\") = \"\" ]]\n    [[ $(candidate \"bad\")\
    \ = \"a\" ]]\n    [[ $(candidate \"most\") = \"o\" ]]\n    [[ $(candidate \"ab\"\
    ) = \"\" ]]\n    [[ $(candidate \"ba\") = \"\" ]]\n    [[ $(candidate \"quick\"\
    ) = \"\" ]]\n    [[ $(candidate \"anime\") = \"i\" ]]\n    [[ $(candidate \"Asia\"\
    ) = \"\" ]]\n    [[ $(candidate \"Above\") = \"o\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660002111
- exit_code: 1
  program: "#!/bin/bash\n# You are given a word. Your task is to find the closest\
    \ vowel that stands between \n# two consonants from the right side of the word\
    \ (case sensitive).\n# Vowels in the beginning and ending doesn't count. Return\
    \ empty string if you didn't\n# find any vowel met the above condition. \n# You\
    \ may assume that the given string contains English letter only.\n# Example:\n\
    #\n# $1 is a string\nget_closest_vowel() {\n    local word=$1\n    local vowels=\"\
    aeiou\"\n    local consonants=\"bcdfghjklmnpqrstvwxyz\"\n    local closest_vowel=\"\
    \"\n    local closest_vowel_index=0\n    local closest_consonant_index=0\n   \
    \ local closest_consonant=\"\"\n    local closest_consonant_index=0\n    local\
    \ closest_consonant=\"\"\n    local closest_consonant_index=0\n    local closest_consonant=\"\
    \"\n    local closest_consonant_index=0\n    local closest_consonant=\"\"\n  \
    \  local closest_consonant_index=0\n    local closest_consonant=\"\"\n    local\
    \ closest_consonant_index=0\n    local closest_consonant=\"\"\n    local closest_consonant_index=0\n\
    \    local closest_consonant=\"\"\n    local closest_consonant_index=0\n    local\
    \ closest_consonant=\"\"\n    local closest_consonant_index=0\n    local closest_consonant=\"\
    \"\n    local closest_consonant_index=0\n    local closest_consonant=\"\"\n  \
    \  local closest_consonant_index=0\n    local closest_consonant=\"\"\n    local\
    \ closest_consonant_index=0\n    local closest_consonant=\"\"\n    local closest_consonant_index=0\n\
    \    local closest_consonant=\"\"\n    local closest_consonant_index=0\n    local\
    \ closest_consonant=\"\"\n    local closest_consonant_index=0\n    local closest_consonant=\"\
    \"\n    local closest_consonant_index=0\n    local closest_consonant=\"\"\n  \
    \  local closest_consonant_index=0\n    local closest_consonant=\"\"\n    local\
    \ closest_consonant_index=0\n    local closest_consonant=\"\"\n    local closest_consonant_index=0\n\
    \    local closest_consonant=\"\"\n    local closest_consonant_index=0\n    local\
    \ closest_consonant=\"\"\n    local closest_consonant_index=0\n    local closest_consonant=\"\
    \"\n    local closest_consonant_index=0\n\n}\n\ncandidate() {\n    get_closest_vowel\
    \ \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"yogurt\") = \"u\" ]]\n\
    \    [[ $(candidate \"full\") = \"u\" ]]\n    [[ $(candidate \"easy\") = \"\"\
    \ ]]\n    [[ $(candidate \"eAsy\") = \"\" ]]\n    [[ $(candidate \"ali\") = \"\
    \" ]]\n    [[ $(candidate \"bad\") = \"a\" ]]\n    [[ $(candidate \"most\") =\
    \ \"o\" ]]\n    [[ $(candidate \"ab\") = \"\" ]]\n    [[ $(candidate \"ba\") =\
    \ \"\" ]]\n    [[ $(candidate \"quick\") = \"\" ]]\n    [[ $(candidate \"anime\"\
    ) = \"i\" ]]\n    [[ $(candidate \"Asia\") = \"\" ]]\n    [[ $(candidate \"Above\"\
    ) = \"o\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660002111
- exit_code: 1
  program: "#!/bin/bash\n# You are given a word. Your task is to find the closest\
    \ vowel that stands between \n# two consonants from the right side of the word\
    \ (case sensitive).\n# Vowels in the beginning and ending doesn't count. Return\
    \ empty string if you didn't\n# find any vowel met the above condition. \n# You\
    \ may assume that the given string contains English letter only.\n# Example:\n\
    #\n# $1 is a string\nget_closest_vowel() {\n    local word=$1\n    local word_len=${#word}\n\
    \    local i=0\n    local j=0\n    local k=0\n    local vowels=aeiou\n    local\
    \ vowel_len=${#vowels}\n    local vowel_index=0\n    local vowel_found=0\n   \
    \ local vowel_char=''\n    local word_char=''\n    local word_char_prev=''\n \
    \   local word_char_next=''\n    local word_char_prev_is_vowel=0\n    local word_char_next_is_vowel=0\n\
    \    local word_char_prev_is_consonant=0\n    local word_char_next_is_consonant=0\n\
    \    local word_char_prev_is_vowel_index=0\n    local word_char_next_is_vowel_index=0\n\
    \    local word_char_prev_is_consonant_index=0\n    local word_char_next_is_consonant_index=0\n\
    \    local word_char_prev_is_vowel_char=''\n    local word_char_next_is_vowel_char=''\n\
    \    local word_char_prev_is_consonant_char=''\n    local word_char_next_is_consonant_char=''\n\
    \    local word_char_prev_is_vowel_distance=0\n    local word_char_next_is_vowel_distance=0\n\
    \    local word_char_prev_is_consonant_distance=0\n    local word_char_next_is_consonant_distance=0\n\
    \    local word_char_prev_is_vowel_distance_min=0\n    local word_char_next_is_vowel_distance_min=0\n\
    \    local word_char_prev_is_consonant_distance_min=0\n    local word_char_next_is_consonant_distance_min=0\n\
    \    local word_char_prev_is_vowel_distance_min_index=0\n    local word_char_next_is_vowel_distance_min_index=\n\
    }\n\ncandidate() {\n    get_closest_vowel \"$@\"\n}\n\nset -e\nrun_test() {\n\
    \    [[ $(candidate \"yogurt\") = \"u\" ]]\n    [[ $(candidate \"full\") = \"\
    u\" ]]\n    [[ $(candidate \"easy\") = \"\" ]]\n    [[ $(candidate \"eAsy\") =\
    \ \"\" ]]\n    [[ $(candidate \"ali\") = \"\" ]]\n    [[ $(candidate \"bad\")\
    \ = \"a\" ]]\n    [[ $(candidate \"most\") = \"o\" ]]\n    [[ $(candidate \"ab\"\
    ) = \"\" ]]\n    [[ $(candidate \"ba\") = \"\" ]]\n    [[ $(candidate \"quick\"\
    ) = \"\" ]]\n    [[ $(candidate \"anime\") = \"i\" ]]\n    [[ $(candidate \"Asia\"\
    ) = \"\" ]]\n    [[ $(candidate \"Above\") = \"o\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660002111
- exit_code: 1
  program: "#!/bin/bash\n# You are given a word. Your task is to find the closest\
    \ vowel that stands between \n# two consonants from the right side of the word\
    \ (case sensitive).\n# Vowels in the beginning and ending doesn't count. Return\
    \ empty string if you didn't\n# find any vowel met the above condition. \n# You\
    \ may assume that the given string contains English letter only.\n# Example:\n\
    #\n# $1 is a string\nget_closest_vowel() {\n    local word=$1\n    local len=${#word}\n\
    \    local i=0\n    local vowel_pos=0\n    local vowel_pos_prev=0\n    local vowel_pos_next=0\n\
    \    local vowel_pos_prev_prev=0\n    local vowel_pos_next_next=0\n    local vowel_pos_prev_prev_prev=0\n\
    \    local vowel_pos_next_next_next=0\n    local vowel_pos_prev_prev_prev_prev=0\n\
    \    local vowel_pos_next_next_next_next=0\n    local vowel_pos_prev_prev_prev_prev_prev=0\n\
    \    local vowel_pos_next_next_next_next_next=0\n    local vowel_pos_prev_prev_prev_prev_prev_prev=0\n\
    \    local vowel_pos_next_next_next_next_next_next=0\n    local vowel_pos_prev_prev_prev_prev_prev_prev_prev=0\n\
    \    local vowel_pos_next_next_next_next_next_next_next=0\n    local vowel_pos_prev_prev_prev_prev_prev_prev_prev_prev=0\n\
    \    local vowel_pos_next_next_next_next_next_next_next_next=0\n    local vowel_pos_prev_prev_prev_prev_prev_prev_prev_prev_prev=0\n\
    \    local vowel_pos_next_next_next_next_next_next_next_next_next=0\n    local\
    \ vowel_pos_prev_prev_prev_prev_prev_prev_prev_prev_prev_prev=0\n    local vowel_pos_next_next_next_next_next_next_next_next_next_next=0\n\
    \    local vowel_pos_prev_prev_prev_prev_prev_prev_prev_prev_prev_prev_prev=0\n\
    \    local vowel_pos_next_next_next_next_next_next_next_next_next_next_next=0\n\
    \    local vowel_pos_prev_prev_prev_prev_prev_prev_prev_prev_prev_prev_prev_prev=0\n\
    \    local vowel_pos_next_next_\n}\n\ncandidate() {\n    get_closest_vowel \"\
    $@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"yogurt\") = \"u\" ]]\n \
    \   [[ $(candidate \"full\") = \"u\" ]]\n    [[ $(candidate \"easy\") = \"\" ]]\n\
    \    [[ $(candidate \"eAsy\") = \"\" ]]\n    [[ $(candidate \"ali\") = \"\" ]]\n\
    \    [[ $(candidate \"bad\") = \"a\" ]]\n    [[ $(candidate \"most\") = \"o\"\
    \ ]]\n    [[ $(candidate \"ab\") = \"\" ]]\n    [[ $(candidate \"ba\") = \"\"\
    \ ]]\n    [[ $(candidate \"quick\") = \"\" ]]\n    [[ $(candidate \"anime\") =\
    \ \"i\" ]]\n    [[ $(candidate \"Asia\") = \"\" ]]\n    [[ $(candidate \"Above\"\
    ) = \"o\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660002111
- exit_code: 1
  program: "#!/bin/bash\n# You are given a word. Your task is to find the closest\
    \ vowel that stands between \n# two consonants from the right side of the word\
    \ (case sensitive).\n# Vowels in the beginning and ending doesn't count. Return\
    \ empty string if you didn't\n# find any vowel met the above condition. \n# You\
    \ may assume that the given string contains English letter only.\n# Example:\n\
    #\n# $1 is a string\nget_closest_vowel() {\n  local word=$1\n  local word_len=${#word}\n\
    \  local i=0\n  local vowel_pos=0\n  local vowel_pos_prev=0\n  local vowel_pos_next=0\n\
    \  local vowel_pos_prev_prev=0\n  local vowel_pos_next_next=0\n  local vowel_pos_prev_prev_prev=0\n\
    \  local vowel_pos_next_next_next=0\n  local vowel_pos_prev_prev_prev_prev=0\n\
    \  local vowel_pos_next_next_next_next=0\n  local vowel_pos_prev_prev_prev_prev_prev=0\n\
    \  local vowel_pos_next_next_next_next_next=0\n  local vowel_pos_prev_prev_prev_prev_prev_prev=0\n\
    \  local vowel_pos_next_next_next_next_next_next=0\n  local vowel_pos_prev_prev_prev_prev_prev_prev_prev=0\n\
    \  local vowel_pos_next_next_next_next_next_next_next=0\n  local vowel_pos_prev_prev_prev_prev_prev_prev_prev_prev=0\n\
    \  local vowel_pos_next_next_next_next_next_next_next_next=0\n  local vowel_pos_prev_prev_prev_prev_prev_prev_prev_prev_prev=0\n\
    \  local vowel_pos_next_next_next_next_next_next_next_next_next=0\n  local vowel_pos_prev_prev_prev_prev_prev_prev_prev_prev_prev_prev=0\n\
    \  local vowel_pos_next_next_next_next_next_next_next_next_next_next=0\n  local\
    \ vowel_pos_prev_prev_prev_prev_prev_prev_prev_prev_prev_prev_prev=0\n  local\
    \ vowel_pos_next_next_next_next_next_next_next_next_next_next_next=0\n  local\
    \ vowel_pos_prev_prev_prev_prev_prev_prev_prev_prev_prev_prev_prev_prev=0\n  local\
    \ vowel_pos_next_\n}\n\ncandidate() {\n    get_closest_vowel \"$@\"\n}\n\nset\
    \ -e\nrun_test() {\n    [[ $(candidate \"yogurt\") = \"u\" ]]\n    [[ $(candidate\
    \ \"full\") = \"u\" ]]\n    [[ $(candidate \"easy\") = \"\" ]]\n    [[ $(candidate\
    \ \"eAsy\") = \"\" ]]\n    [[ $(candidate \"ali\") = \"\" ]]\n    [[ $(candidate\
    \ \"bad\") = \"a\" ]]\n    [[ $(candidate \"most\") = \"o\" ]]\n    [[ $(candidate\
    \ \"ab\") = \"\" ]]\n    [[ $(candidate \"ba\") = \"\" ]]\n    [[ $(candidate\
    \ \"quick\") = \"\" ]]\n    [[ $(candidate \"anime\") = \"i\" ]]\n    [[ $(candidate\
    \ \"Asia\") = \"\" ]]\n    [[ $(candidate \"Above\") = \"o\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660002111
- exit_code: 1
  program: "#!/bin/bash\n# You are given a word. Your task is to find the closest\
    \ vowel that stands between \n# two consonants from the right side of the word\
    \ (case sensitive).\n# Vowels in the beginning and ending doesn't count. Return\
    \ empty string if you didn't\n# find any vowel met the above condition. \n# You\
    \ may assume that the given string contains English letter only.\n# Example:\n\
    #\n# $1 is a string\nget_closest_vowel() {\n    local word=$1\n    local word_len=${#word}\n\
    \    local i=0\n    local j=0\n    local k=0\n    local vowel_pos=0\n    local\
    \ vowel_pos_arr=()\n    local vowel_pos_arr_len=0\n    local vowel_pos_arr_index=0\n\
    \    local vowel_pos_arr_index_max=0\n    local vowel_pos_arr_index_min=0\n  \
    \  local vowel_pos_arr_index_min_val=0\n    local vowel_pos_arr_index_max_val=0\n\
    \    local vowel_pos_arr_index_min_val_tmp=0\n    local vowel_pos_arr_index_max_val_tmp=0\n\
    \    local vowel_pos_arr_index_min_val_tmp_len=0\n    local vowel_pos_arr_index_max_val_tmp_len=0\n\
    \    local vowel_pos_arr_index_min_val_tmp_len_max=0\n    local vowel_pos_arr_index_max_val_tmp_len_max=0\n\
    \    local vowel_pos_arr_index_min_val_tmp_len_max_val=0\n    local vowel_pos_arr_index_max_val_tmp_len_max_val=0\n\
    \    local vowel_pos_arr_index_min_val_tmp_len_max_val_len=0\n    local vowel_pos_arr_index_max_val_tmp_len_max_val_len=0\n\
    \    local vowel_pos_arr_index_min_val_tmp_len_max_val_len_max=0\n    local vowel_pos_arr_index_max_val_tmp_len_max_val_len_max=0\n\
    \    local vowel_pos_arr_index_min_val_tmp_len_max_val_len_max_val=0\n    local\
    \ vowel_pos_arr_index_max_val_tmp_len_max_val_len_max_val=0\n    local vowel_pos_arr_index_min_val_tmp_len_max_val_len_max_val_len=0\n\
    \    local vowel_pos_\n}\n\ncandidate() {\n    get_closest_vowel \"$@\"\n}\n\n\
    set -e\nrun_test() {\n    [[ $(candidate \"yogurt\") = \"u\" ]]\n    [[ $(candidate\
    \ \"full\") = \"u\" ]]\n    [[ $(candidate \"easy\") = \"\" ]]\n    [[ $(candidate\
    \ \"eAsy\") = \"\" ]]\n    [[ $(candidate \"ali\") = \"\" ]]\n    [[ $(candidate\
    \ \"bad\") = \"a\" ]]\n    [[ $(candidate \"most\") = \"o\" ]]\n    [[ $(candidate\
    \ \"ab\") = \"\" ]]\n    [[ $(candidate \"ba\") = \"\" ]]\n    [[ $(candidate\
    \ \"quick\") = \"\" ]]\n    [[ $(candidate \"anime\") = \"i\" ]]\n    [[ $(candidate\
    \ \"Asia\") = \"\" ]]\n    [[ $(candidate \"Above\") = \"o\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660002111
- exit_code: 1
  program: "#!/bin/bash\n# You are given a word. Your task is to find the closest\
    \ vowel that stands between \n# two consonants from the right side of the word\
    \ (case sensitive).\n# Vowels in the beginning and ending doesn't count. Return\
    \ empty string if you didn't\n# find any vowel met the above condition. \n# You\
    \ may assume that the given string contains English letter only.\n# Example:\n\
    #\n# $1 is a string\nget_closest_vowel() {\n  local word=\"$1\"\n  local word_len=${#word}\n\
    \  local i=0\n  local vowel_pos=0\n  local vowel_pos_tmp=0\n  local vowel_pos_min=0\n\
    \  local vowel_pos_min_tmp=0\n  local vowel_pos_min_tmp_prev=0\n  local vowel_pos_min_tmp_prev_prev=0\n\
    \  local vowel_pos_min_tmp_prev_prev_prev=0\n  local vowel_pos_min_tmp_prev_prev_prev_prev=0\n\
    \  local vowel_pos_min_tmp_prev_prev_prev_prev_prev=0\n  local vowel_pos_min_tmp_prev_prev_prev_prev_prev_prev=0\n\
    \  local vowel_pos_min_tmp_prev_prev_prev_prev_prev_prev_prev=0\n  local vowel_pos_min_tmp_prev_prev_prev_prev_prev_prev_prev_prev=0\n\
    \  local vowel_pos_min_tmp_prev_prev_prev_prev_prev_prev_prev_prev_prev=0\n  local\
    \ vowel_pos_min_tmp_prev_prev_prev_prev_prev_prev_prev_prev_prev_prev=0\n  local\
    \ vowel_pos_min_tmp_prev_prev_prev_prev_prev_prev_prev_prev_prev_prev_prev=0\n\
    \  local vowel_pos_min_tmp_prev_prev_prev_prev_prev_prev_prev_prev_prev_prev_prev_prev=0\n\
    \  local vowel_pos_min_tmp_prev_prev_prev_prev_prev_prev_prev_prev_prev_prev_prev_prev_prev=0\n\
    \  local vowel_pos_min_tmp_prev_prev_prev_prev_prev_prev_prev_prev_prev_prev_prev_prev_prev_prev=0\n\
    \  local vowel_pos_min_tmp_prev_prev_prev_prev_prev_prev_prev_prev_prev_prev_prev_prev_prev_prev_prev=0\n\
    \  local vowel_pos_min_tmp_prev_prev_prev_prev_prev_prev_prev_prev_\n}\n\ncandidate()\
    \ {\n    get_closest_vowel \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate\
    \ \"yogurt\") = \"u\" ]]\n    [[ $(candidate \"full\") = \"u\" ]]\n    [[ $(candidate\
    \ \"easy\") = \"\" ]]\n    [[ $(candidate \"eAsy\") = \"\" ]]\n    [[ $(candidate\
    \ \"ali\") = \"\" ]]\n    [[ $(candidate \"bad\") = \"a\" ]]\n    [[ $(candidate\
    \ \"most\") = \"o\" ]]\n    [[ $(candidate \"ab\") = \"\" ]]\n    [[ $(candidate\
    \ \"ba\") = \"\" ]]\n    [[ $(candidate \"quick\") = \"\" ]]\n    [[ $(candidate\
    \ \"anime\") = \"i\" ]]\n    [[ $(candidate \"Asia\") = \"\" ]]\n    [[ $(candidate\
    \ \"Above\") = \"o\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660002111
- exit_code: 1
  program: "#!/bin/bash\n# You are given a word. Your task is to find the closest\
    \ vowel that stands between \n# two consonants from the right side of the word\
    \ (case sensitive).\n# Vowels in the beginning and ending doesn't count. Return\
    \ empty string if you didn't\n# find any vowel met the above condition. \n# You\
    \ may assume that the given string contains English letter only.\n# Example:\n\
    #\n# $1 is a string\nget_closest_vowel() {\n    local word=$1\n    local len=${#word}\n\
    \    local i=0\n    local vowel_pos=0\n    local vowel_pos_prev=0\n    local vowel_pos_next=0\n\
    \    local vowel_pos_prev_prev=0\n    local vowel_pos_next_next=0\n    local vowel_pos_prev_prev_prev=0\n\
    \    local vowel_pos_next_next_next=0\n    local vowel_pos_prev_prev_prev_prev=0\n\
    \    local vowel_pos_next_next_next_next=0\n    local vowel_pos_prev_prev_prev_prev_prev=0\n\
    \    local vowel_pos_next_next_next_next_next=0\n    local vowel_pos_prev_prev_prev_prev_prev_prev=0\n\
    \    local vowel_pos_next_next_next_next_next_next=0\n    local vowel_pos_prev_prev_prev_prev_prev_prev_prev=0\n\
    \    local vowel_pos_next_next_next_next_next_next_next=0\n    local vowel_pos_prev_prev_prev_prev_prev_prev_prev_prev=0\n\
    \    local vowel_pos_next_next_next_next_next_next_next_next=0\n    local vowel_pos_prev_prev_prev_prev_prev_prev_prev_prev_prev=0\n\
    \    local vowel_pos_next_next_next_next_next_next_next_next_next=0\n    local\
    \ vowel_pos_prev_prev_prev_prev_prev_prev_prev_prev_prev_prev=0\n    local vowel_pos_next_next_next_next_next_next_next_next_next_next=0\n\
    \    local vowel_pos_prev_prev_prev_prev_prev_prev_prev_prev_prev_prev_prev=0\n\
    \    local vowel_pos_next_next_next_next_next_next_next_next_next_next_next=0\n\
    \    local vowel_pos_prev_prev_prev_prev_prev_prev_prev_prev_prev_prev_prev_prev=0\n\
    \    local vowel_pos_next_next_\n}\n\ncandidate() {\n    get_closest_vowel \"\
    $@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"yogurt\") = \"u\" ]]\n \
    \   [[ $(candidate \"full\") = \"u\" ]]\n    [[ $(candidate \"easy\") = \"\" ]]\n\
    \    [[ $(candidate \"eAsy\") = \"\" ]]\n    [[ $(candidate \"ali\") = \"\" ]]\n\
    \    [[ $(candidate \"bad\") = \"a\" ]]\n    [[ $(candidate \"most\") = \"o\"\
    \ ]]\n    [[ $(candidate \"ab\") = \"\" ]]\n    [[ $(candidate \"ba\") = \"\"\
    \ ]]\n    [[ $(candidate \"quick\") = \"\" ]]\n    [[ $(candidate \"anime\") =\
    \ \"i\" ]]\n    [[ $(candidate \"Asia\") = \"\" ]]\n    [[ $(candidate \"Above\"\
    ) = \"o\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660002111
- exit_code: 1
  program: "#!/bin/bash\n# You are given a word. Your task is to find the closest\
    \ vowel that stands between \n# two consonants from the right side of the word\
    \ (case sensitive).\n# Vowels in the beginning and ending doesn't count. Return\
    \ empty string if you didn't\n# find any vowel met the above condition. \n# You\
    \ may assume that the given string contains English letter only.\n# Example:\n\
    #\n# $1 is a string\nget_closest_vowel() {\n    local word=$1\n    local word_len=${#word}\n\
    \    local i=0\n    local vowels=\"aeiou\"\n    local vowel_len=${#vowels}\n \
    \   local vowel_pos=0\n    local vowel_pos_list=()\n    local vowel_pos_list_len=0\n\
    \    local vowel_pos_list_idx=0\n    local vowel_pos_list_idx_prev=0\n    local\
    \ vowel_pos_list_idx_next=0\n    local vowel_pos_list_idx_prev_diff=0\n    local\
    \ vowel_pos_list_idx_next_diff=0\n    local vowel_pos_list_idx_diff=0\n    local\
    \ vowel_pos_list_idx_min_diff=0\n    local vowel_pos_list_idx_min_diff_idx=0\n\
    \    local vowel_pos_list_idx_min_diff_idx_prev=0\n    local vowel_pos_list_idx_min_diff_idx_next=0\n\
    \    local vowel_pos_list_idx_min_diff_idx_prev_diff=0\n    local vowel_pos_list_idx_min_diff_idx_next_diff=0\n\
    \    local vowel_pos_list_idx_min_diff_idx_diff=0\n    local vowel_pos_list_idx_min_diff_idx_min_diff=0\n\
    \    local vowel_pos_list_idx_min_diff_idx_min_diff_idx=0\n    local vowel_pos_list_idx_min_diff_idx_min_diff_idx_prev=0\n\
    \    local vowel_pos_list_idx_min_diff_idx_min_diff_idx_next=0\n    local vowel_pos_list_idx_min_diff_idx_min_diff_idx_prev_diff=0\n\
    \    local vowel_pos_list_idx_min_diff_idx_min_diff_idx_next_diff=0\n    local\
    \ vowel_pos_list_idx_min_diff_idx_min_diff\n}\n\ncandidate() {\n    get_closest_vowel\
    \ \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"yogurt\") = \"u\" ]]\n\
    \    [[ $(candidate \"full\") = \"u\" ]]\n    [[ $(candidate \"easy\") = \"\"\
    \ ]]\n    [[ $(candidate \"eAsy\") = \"\" ]]\n    [[ $(candidate \"ali\") = \"\
    \" ]]\n    [[ $(candidate \"bad\") = \"a\" ]]\n    [[ $(candidate \"most\") =\
    \ \"o\" ]]\n    [[ $(candidate \"ab\") = \"\" ]]\n    [[ $(candidate \"ba\") =\
    \ \"\" ]]\n    [[ $(candidate \"quick\") = \"\" ]]\n    [[ $(candidate \"anime\"\
    ) = \"i\" ]]\n    [[ $(candidate \"Asia\") = \"\" ]]\n    [[ $(candidate \"Above\"\
    ) = \"o\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660002111
- exit_code: 1
  program: "#!/bin/bash\n# You are given a word. Your task is to find the closest\
    \ vowel that stands between \n# two consonants from the right side of the word\
    \ (case sensitive).\n# Vowels in the beginning and ending doesn't count. Return\
    \ empty string if you didn't\n# find any vowel met the above condition. \n# You\
    \ may assume that the given string contains English letter only.\n# Example:\n\
    #\n# $1 is a string\nget_closest_vowel() {\n    local word=$1\n    local len=${#word}\n\
    \    local i=0\n    local j=0\n    local k=0\n    local vowel_pos=0\n    local\
    \ vowel_pos_arr=()\n    local vowel_arr=()\n    local vowel_arr_len=0\n    local\
    \ consonant_arr=()\n    local consonant_arr_len=0\n    local consonant_pos=0\n\
    \    local consonant_pos_arr=()\n    local closest_vowel_pos=0\n    local closest_vowel=''\n\
    \    local closest_vowel_distance=0\n    local closest_vowel_distance_tmp=0\n\
    \    local closest_vowel_distance_arr=()\n    local closest_vowel_distance_arr_len=0\n\
    \    local closest_vowel_distance_arr_min=0\n    local closest_vowel_distance_arr_min_pos=0\n\
    \    local closest_vowel_distance_arr_min_pos_arr=()\n    local closest_vowel_distance_arr_min_pos_arr_len=0\n\
    \    local closest_vowel_distance_arr_min_pos_arr_min=0\n    local closest_vowel_distance_arr_min_pos_arr_min_pos=0\n\
    \    local closest_vowel_distance_arr_min_pos_arr_min_pos_arr=()\n    local closest_vowel_distance_arr_min_pos_arr_min_pos_arr_len=0\n\
    \    local closest_vowel_distance_arr_min_pos_arr_min_pos_arr_min=0\n    local\
    \ closest_vowel_distance_arr_min_pos_arr_min_pos_arr_min_pos=0\n    local closest_vowel_distance_arr_min_pos_arr_min_pos_arr_min_pos_arr=()\n\
    \    local closest_vowel_distance_arr_min_pos_arr_min_pos_arr_min_pos_arr_len=0\n\
    \    local closest_vowel_distance_arr_min_pos_arr_min_pos_arr_\n}\n\ncandidate()\
    \ {\n    get_closest_vowel \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate\
    \ \"yogurt\") = \"u\" ]]\n    [[ $(candidate \"full\") = \"u\" ]]\n    [[ $(candidate\
    \ \"easy\") = \"\" ]]\n    [[ $(candidate \"eAsy\") = \"\" ]]\n    [[ $(candidate\
    \ \"ali\") = \"\" ]]\n    [[ $(candidate \"bad\") = \"a\" ]]\n    [[ $(candidate\
    \ \"most\") = \"o\" ]]\n    [[ $(candidate \"ab\") = \"\" ]]\n    [[ $(candidate\
    \ \"ba\") = \"\" ]]\n    [[ $(candidate \"quick\") = \"\" ]]\n    [[ $(candidate\
    \ \"anime\") = \"i\" ]]\n    [[ $(candidate \"Asia\") = \"\" ]]\n    [[ $(candidate\
    \ \"Above\") = \"o\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660002111
- exit_code: 2
  program: "#!/bin/bash\n# You are given a word. Your task is to find the closest\
    \ vowel that stands between \n# two consonants from the right side of the word\
    \ (case sensitive).\n# Vowels in the beginning and ending doesn't count. Return\
    \ empty string if you didn't\n# find any vowel met the above condition. \n# You\
    \ may assume that the given string contains English letter only.\n# Example:\n\
    #\n# $1 is a string\nget_closest_vowel() {\n    local word=$1\n    local vowels=\"\
    aeiou\"\n    local last_char=${word: -1}\n    local last_char_is_vowel=false\n\
    \    local last_char_is_consonant=false\n    local closest_vowel=\"\"\n    local\
    \ closest_vowel_index=0\n    local closest_vowel_distance=0\n    local current_vowel_index=0\n\
    \    local current_vowel_distance=0\n    local current_vowel=\"\"\n    local current_char=\"\
    \"\n    local current_char_is_vowel=false\n    local current_char_is_consonant=false\n\
    \    local i=0\n    local j=0\n    local word_length=${#word}\n    local word_length_minus_one=$((word_length\
    \ - 1))\n    local word_length_minus_two=$((word_length - 2))\n    local word_length_minus_three=$((word_length\
    \ - 3))\n    local word_length_minus_four=$((word_length - 4))\n    local word_length_minus_five=$((word_length\
    \ - 5))\n    local word_length_minus_six=$((word_length - 6))\n    local word_length_minus_seven=$((word_length\
    \ - 7))\n    local word_length_minus_eight=$((word_length - 8))\n    local word_length_minus_nine=$((word_length\
    \ - 9))\n    local word_length_minus_ten=$((word_length - 10))\n    local word_length_minus_eleven=$((word_length\
    \ - 11))\n    local word_length_minus_twelve=$((word_length - 12))\n    local\
    \ word_length_minus_thirteen=$((word_length - 13))\n    local word_length_minus_fourteen=$((word_length\
    \ - 14))\n    local word_length_minus_fifteen=$((word_length - 15))\n    local\
    \ word_length_minus_sixteen=$((word_length - 16))\n    local word_length_minus_seventeen=$((word_length\
    \ - 17))\n    local word_length_minus_eighteen=$((word_length -\n}\n\ncandidate()\
    \ {\n    get_closest_vowel \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate\
    \ \"yogurt\") = \"u\" ]]\n    [[ $(candidate \"full\") = \"u\" ]]\n    [[ $(candidate\
    \ \"easy\") = \"\" ]]\n    [[ $(candidate \"eAsy\") = \"\" ]]\n    [[ $(candidate\
    \ \"ali\") = \"\" ]]\n    [[ $(candidate \"bad\") = \"a\" ]]\n    [[ $(candidate\
    \ \"most\") = \"o\" ]]\n    [[ $(candidate \"ab\") = \"\" ]]\n    [[ $(candidate\
    \ \"ba\") = \"\" ]]\n    [[ $(candidate \"quick\") = \"\" ]]\n    [[ $(candidate\
    \ \"anime\") = \"i\" ]]\n    [[ $(candidate \"Asia\") = \"\" ]]\n    [[ $(candidate\
    \ \"Above\") = \"o\" ]]\n}\n\nrun_test"
  status: SyntaxError
  stderr: '/tmp/tmp8dc9840z.sh: line 45: unexpected EOF while looking for matching
    `)''

    /tmp/tmp8dc9840z.sh: line 70: syntax error: unexpected end of file

    '
  stdout: ''
  timestamp: 1660002111
- exit_code: 1
  program: "#!/bin/bash\n# You are given a word. Your task is to find the closest\
    \ vowel that stands between \n# two consonants from the right side of the word\
    \ (case sensitive).\n# Vowels in the beginning and ending doesn't count. Return\
    \ empty string if you didn't\n# find any vowel met the above condition. \n# You\
    \ may assume that the given string contains English letter only.\n# Example:\n\
    #\n# $1 is a string\nget_closest_vowel() {\n    local word=$1\n    local word_len=${#word}\n\
    \    local i=0\n    local j=0\n    local k=0\n    local closest_vowel=\"\"\n \
    \   local closest_vowel_index=0\n    local closest_vowel_distance=0\n    local\
    \ vowel_index=0\n    local vowel_distance=0\n    local vowel_found=0\n    local\
    \ vowels=\"aeiou\"\n    local consonants=\"bcdfghjklmnpqrstvwxyz\"\n    local\
    \ vowel=\"\"\n    local consonant=\"\"\n    local char=\"\"\n    local char_index=0\n\
    \    local char_distance=0\n    local char_found=0\n    local char_type=\"\"\n\
    \    local char_type_index=0\n    local char_type_distance=0\n    local char_type_found=0\n\
    \    local char_type_closest=\"\"\n    local char_type_closest_index=0\n    local\
    \ char_type_closest_distance=0\n    local char_type_closest_found=0\n    local\
    \ char_type_closest_type=\"\"\n    local char_type_closest_type_index=0\n    local\
    \ char_type_closest_type_distance=0\n    local char_type_closest_type_found=0\n\
    \    local char_type_closest_type_closest=\"\"\n    local char_type_closest_type_closest_index=0\n\
    \    local char_type_closest_type_closest_distance=0\n    local char_type_closest_type_closest_found=0\n\
    \    local char_type_closest_type_closest_type=\"\"\n    local char_type_closest_type_closest_type_index=0\n\
    \    local char_type_closest_type_closest_type_distance=0\n    local char_type_closest_type_closest_type_found=0\n\
    \    local char_type_closest_type_closest_type_closest=\"\"\n    local char_type_closest_type_\n\
    }\n\ncandidate() {\n    get_closest_vowel \"$@\"\n}\n\nset -e\nrun_test() {\n\
    \    [[ $(candidate \"yogurt\") = \"u\" ]]\n    [[ $(candidate \"full\") = \"\
    u\" ]]\n    [[ $(candidate \"easy\") = \"\" ]]\n    [[ $(candidate \"eAsy\") =\
    \ \"\" ]]\n    [[ $(candidate \"ali\") = \"\" ]]\n    [[ $(candidate \"bad\")\
    \ = \"a\" ]]\n    [[ $(candidate \"most\") = \"o\" ]]\n    [[ $(candidate \"ab\"\
    ) = \"\" ]]\n    [[ $(candidate \"ba\") = \"\" ]]\n    [[ $(candidate \"quick\"\
    ) = \"\" ]]\n    [[ $(candidate \"anime\") = \"i\" ]]\n    [[ $(candidate \"Asia\"\
    ) = \"\" ]]\n    [[ $(candidate \"Above\") = \"o\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660002111
- exit_code: 2
  program: "#!/bin/bash\n# You are given a word. Your task is to find the closest\
    \ vowel that stands between \n# two consonants from the right side of the word\
    \ (case sensitive).\n# Vowels in the beginning and ending doesn't count. Return\
    \ empty string if you didn't\n# find any vowel met the above condition. \n# You\
    \ may assume that the given string contains English letter only.\n# Example:\n\
    #\n# $1 is a string\nget_closest_vowel() {\n    local word=$1\n    local len=${#word}\n\
    \    local i=0\n    local j=0\n    local k=0\n    local vowel=''\n    local consonant=''\n\
    \    local closest_vowel=''\n    local closest_vowel_index=0\n    local closest_vowel_distance=0\n\
    \    local vowel_index=0\n    local vowel_distance=0\n    local vowels=('a' 'e'\
    \ 'i' 'o' 'u')\n    local consonants=('b' 'c' 'd' 'f' 'g' 'h' 'j' 'k' 'l' 'm'\
    \ 'n' 'p' 'q' 'r' 's' 't' 'v' 'w' 'x' 'y' 'z')\n    for ((i=0; i<len; i++)); do\n\
    \        vowel=${word:i:1}\n        for ((j=0; j<${#vowels[@]}; j++)); do\n  \
    \          if [[ $vowel == ${vowels[j]} ]]; then\n                vowel_index=$i\n\
    \                break\n            fi\n        done\n        if [[ $vowel_index\
    \ -gt 0 ]]; then\n            for ((k=0; k<${#consonants[@]}; k++)); do\n    \
    \            consonant=${word:$((vowel_index-1)):1}\n                if [[ $consonant\
    \ == ${consonants[k]} ]]; then\n                    vowel_distance=$((vowel_index-i))\n\
    \                    if [[ $vowel_distance -gt 0 ]]; then\n                  \
    \      if [[ $closest_vowel_distance -eq 0 ]]; then\n                        \
    \    closest_vowel_distance=$vowel_distance\n                            closest_vowel_index=$i\n\
    \                            closest_vowel=$vowel\n                        elif\
    \ [[ $vowel_distance -lt $closest_vowel_distance ]]; then\n                  \
    \          closest_vowel_distance=$vowel_distance\n                          \
    \  closest_vowel_index=$i\n                            closest_vowel=$vowel\n\
    \                        fi\n                   \n}\n\ncandidate() {\n    get_closest_vowel\
    \ \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"yogurt\") = \"u\" ]]\n\
    \    [[ $(candidate \"full\") = \"u\" ]]\n    [[ $(candidate \"easy\") = \"\"\
    \ ]]\n    [[ $(candidate \"eAsy\") = \"\" ]]\n    [[ $(candidate \"ali\") = \"\
    \" ]]\n    [[ $(candidate \"bad\") = \"a\" ]]\n    [[ $(candidate \"most\") =\
    \ \"o\" ]]\n    [[ $(candidate \"ab\") = \"\" ]]\n    [[ $(candidate \"ba\") =\
    \ \"\" ]]\n    [[ $(candidate \"quick\") = \"\" ]]\n    [[ $(candidate \"anime\"\
    ) = \"i\" ]]\n    [[ $(candidate \"Asia\") = \"\" ]]\n    [[ $(candidate \"Above\"\
    ) = \"o\" ]]\n}\n\nrun_test"
  status: SyntaxError
  stderr: '/tmp/tmp29ouzos0.sh: line 49: syntax error near unexpected token `}''

    /tmp/tmp29ouzos0.sh: line 49: `}''

    '
  stdout: ''
  timestamp: 1660002111
- exit_code: 1
  program: "#!/bin/bash\n# You are given a word. Your task is to find the closest\
    \ vowel that stands between \n# two consonants from the right side of the word\
    \ (case sensitive).\n# Vowels in the beginning and ending doesn't count. Return\
    \ empty string if you didn't\n# find any vowel met the above condition. \n# You\
    \ may assume that the given string contains English letter only.\n# Example:\n\
    #\n# $1 is a string\nget_closest_vowel() {\n  local word=$1\n  local len=${#word}\n\
    \  local i=0\n  local j=0\n  local vowel=''\n  local closest_vowel=''\n  local\
    \ closest_vowel_index=0\n  local closest_vowel_len=0\n  local vowel_index=0\n\
    \  local vowel_len=0\n  local vowels='aeiou'\n  local consonants='bcdfghjklmnpqrstvwxyz'\n\
    \  local is_consonant=0\n  local is_vowel=0\n  local is_closest_vowel=0\n  local\
    \ is_closest_vowel_found=0\n  local is_vowel_found=0\n  local is_consonant_found=0\n\
    \  local is_vowel_found_first=0\n  local is_consonant_found_first=0\n  local is_vowel_found_second=0\n\
    \  local is_consonant_found_second=0\n  local is_vowel_found_third=0\n  local\
    \ is_consonant_found_third=0\n  local is_vowel_found_fourth=0\n  local is_consonant_found_fourth=0\n\
    \  local is_vowel_found_fifth=0\n  local is_consonant_found_fifth=0\n  local is_vowel_found_sixth=0\n\
    \  local is_consonant_found_sixth=0\n  local is_vowel_found_seventh=0\n  local\
    \ is_consonant_found_seventh=0\n  local is_vowel_found_eighth=0\n  local is_consonant_found_eighth=0\n\
    \  local is_vowel_found_ninth=0\n  local is_consonant_found_ninth=0\n  local is_vowel_found_tenth=0\n\
    \  local is_consonant_found_tenth=0\n  local is_vowel_found_eleventh=0\n  local\
    \ is_consonant_found_eleventh=0\n  local is\n}\n\ncandidate() {\n    get_closest_vowel\
    \ \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"yogurt\") = \"u\" ]]\n\
    \    [[ $(candidate \"full\") = \"u\" ]]\n    [[ $(candidate \"easy\") = \"\"\
    \ ]]\n    [[ $(candidate \"eAsy\") = \"\" ]]\n    [[ $(candidate \"ali\") = \"\
    \" ]]\n    [[ $(candidate \"bad\") = \"a\" ]]\n    [[ $(candidate \"most\") =\
    \ \"o\" ]]\n    [[ $(candidate \"ab\") = \"\" ]]\n    [[ $(candidate \"ba\") =\
    \ \"\" ]]\n    [[ $(candidate \"quick\") = \"\" ]]\n    [[ $(candidate \"anime\"\
    ) = \"i\" ]]\n    [[ $(candidate \"Asia\") = \"\" ]]\n    [[ $(candidate \"Above\"\
    ) = \"o\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660002111
- exit_code: 1
  program: "#!/bin/bash\n# You are given a word. Your task is to find the closest\
    \ vowel that stands between \n# two consonants from the right side of the word\
    \ (case sensitive).\n# Vowels in the beginning and ending doesn't count. Return\
    \ empty string if you didn't\n# find any vowel met the above condition. \n# You\
    \ may assume that the given string contains English letter only.\n# Example:\n\
    #\n# $1 is a string\nget_closest_vowel() {\n    local word=$1\n    local word_len=${#word}\n\
    \    local i=0\n    local vowel_pos=0\n    local vowel_pos_prev=0\n    local vowel_pos_next=0\n\
    \    local vowel_pos_prev_diff=0\n    local vowel_pos_next_diff=0\n    local vowel_pos_diff=0\n\
    \    local vowel_pos_diff_prev=0\n    local vowel_pos_diff_next=0\n    local vowel_pos_diff_prev_prev=0\n\
    \    local vowel_pos_diff_next_next=0\n    local vowel_pos_diff_prev_prev_prev=0\n\
    \    local vowel_pos_diff_next_next_next=0\n    local vowel_pos_diff_prev_prev_prev_prev=0\n\
    \    local vowel_pos_diff_next_next_next_next=0\n    local vowel_pos_diff_prev_prev_prev_prev_prev=0\n\
    \    local vowel_pos_diff_next_next_next_next_next=0\n    local vowel_pos_diff_prev_prev_prev_prev_prev_prev=0\n\
    \    local vowel_pos_diff_next_next_next_next_next_next=0\n    local vowel_pos_diff_prev_prev_prev_prev_prev_prev_prev=0\n\
    \    local vowel_pos_diff_next_next_next_next_next_next_next=0\n    local vowel_pos_diff_prev_prev_prev_prev_prev_prev_prev_prev=0\n\
    \    local vowel_pos_diff_next_next_next_next_next_next_next_next=0\n    local\
    \ vowel_pos_diff_prev_prev_prev_prev_prev_prev_prev_prev_prev=0\n    local vowel_pos_diff_next_next_next_next_next_next_next_next_next=0\n\
    \    local vowel_pos_diff_prev_prev_prev_prev_prev_prev_prev_prev_prev_prev=0\n\
    \    local vowel_pos_diff_next_next_next_next_next_next_next_next_next_next=0\n\
    \    local vowel_pos_\n}\n\ncandidate() {\n    get_closest_vowel \"$@\"\n}\n\n\
    set -e\nrun_test() {\n    [[ $(candidate \"yogurt\") = \"u\" ]]\n    [[ $(candidate\
    \ \"full\") = \"u\" ]]\n    [[ $(candidate \"easy\") = \"\" ]]\n    [[ $(candidate\
    \ \"eAsy\") = \"\" ]]\n    [[ $(candidate \"ali\") = \"\" ]]\n    [[ $(candidate\
    \ \"bad\") = \"a\" ]]\n    [[ $(candidate \"most\") = \"o\" ]]\n    [[ $(candidate\
    \ \"ab\") = \"\" ]]\n    [[ $(candidate \"ba\") = \"\" ]]\n    [[ $(candidate\
    \ \"quick\") = \"\" ]]\n    [[ $(candidate \"anime\") = \"i\" ]]\n    [[ $(candidate\
    \ \"Asia\") = \"\" ]]\n    [[ $(candidate \"Above\") = \"o\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660002111
- exit_code: 1
  program: "#!/bin/bash\n# You are given a word. Your task is to find the closest\
    \ vowel that stands between \n# two consonants from the right side of the word\
    \ (case sensitive).\n# Vowels in the beginning and ending doesn't count. Return\
    \ empty string if you didn't\n# find any vowel met the above condition. \n# You\
    \ may assume that the given string contains English letter only.\n# Example:\n\
    #\n# $1 is a string\nget_closest_vowel() {\n  local word=$1\n  local word_length=${#word}\n\
    \  local closest_vowel=\"\"\n  local closest_vowel_index=0\n  local i=0\n  local\
    \ j=0\n  local k=0\n  local is_vowel=0\n  local is_consonant=0\n  local is_previous_consonant=0\n\
    \  local is_next_consonant=0\n  local vowels=\"aeiou\"\n  local consonants=\"\
    bcdfghjklmnpqrstvwxyz\"\n  local current_char=\"\"\n  local previous_char=\"\"\
    \n  local next_char=\"\"\n  local current_char_index=0\n  local previous_char_index=0\n\
    \  local next_char_index=0\n  local current_char_is_vowel=0\n  local previous_char_is_consonant=0\n\
    \  local next_char_is_consonant=0\n  local current_char_is_consonant=0\n  local\
    \ previous_char_is_vowel=0\n  local next_char_is_vowel=0\n  local current_char_is_vowel_index=0\n\
    \  local previous_char_is_consonant_index=0\n  local next_char_is_consonant_index=0\n\
    \  local current_char_is_consonant_index=0\n  local previous_char_is_vowel_index=0\n\
    \  local next_char_is_vowel_index=0\n  local current_char_is_vowel_index_length=0\n\
    \  local previous_char_is_consonant_index_length=0\n  local next_char_is_consonant_index_length=0\n\
    \  local current_char_is_consonant_index_length=0\n  local previous_char_is_vowel_index_length=0\n\
    \  local next_char_is_vowel_index_length=0\n  local current_char_is_vowel_index_length_min=0\n\
    \  local previous_char_is_consonant_index_length_min=0\n\n}\n\ncandidate() {\n\
    \    get_closest_vowel \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"\
    yogurt\") = \"u\" ]]\n    [[ $(candidate \"full\") = \"u\" ]]\n    [[ $(candidate\
    \ \"easy\") = \"\" ]]\n    [[ $(candidate \"eAsy\") = \"\" ]]\n    [[ $(candidate\
    \ \"ali\") = \"\" ]]\n    [[ $(candidate \"bad\") = \"a\" ]]\n    [[ $(candidate\
    \ \"most\") = \"o\" ]]\n    [[ $(candidate \"ab\") = \"\" ]]\n    [[ $(candidate\
    \ \"ba\") = \"\" ]]\n    [[ $(candidate \"quick\") = \"\" ]]\n    [[ $(candidate\
    \ \"anime\") = \"i\" ]]\n    [[ $(candidate \"Asia\") = \"\" ]]\n    [[ $(candidate\
    \ \"Above\") = \"o\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660002111
- exit_code: 1
  program: "#!/bin/bash\n# You are given a word. Your task is to find the closest\
    \ vowel that stands between \n# two consonants from the right side of the word\
    \ (case sensitive).\n# Vowels in the beginning and ending doesn't count. Return\
    \ empty string if you didn't\n# find any vowel met the above condition. \n# You\
    \ may assume that the given string contains English letter only.\n# Example:\n\
    #\n# $1 is a string\nget_closest_vowel() {\n    local word=$1\n    local word_len=${#word}\n\
    \    local i=0\n    local j=0\n    local k=0\n    local vowel_index=0\n    local\
    \ vowel_index_arr=()\n    local vowel_index_arr_len=0\n    local closest_vowel_index=0\n\
    \    local closest_vowel_index_arr=()\n    local closest_vowel_index_arr_len=0\n\
    \    local closest_vowel=\"\"\n    local closest_vowel_arr=()\n    local closest_vowel_arr_len=0\n\
    \    local closest_vowel_arr_index=0\n    local closest_vowel_arr_index_arr=()\n\
    \    local closest_vowel_arr_index_arr_len=0\n    local closest_vowel_arr_index_arr_index=0\n\
    \    local closest_vowel_arr_index_arr_index_arr=()\n    local closest_vowel_arr_index_arr_index_arr_len=0\n\
    \    local closest_vowel_arr_index_arr_index_arr_index=0\n    local closest_vowel_arr_index_arr_index_arr_index_arr=()\n\
    \    local closest_vowel_arr_index_arr_index_arr_index_arr_len=0\n    local closest_vowel_arr_index_arr_index_arr_index_arr_index=0\n\
    \    local closest_vowel_arr_index_arr_index_arr_index_arr_index_arr=()\n    local\
    \ closest_vowel_arr_index_arr_index_arr_index_arr_index_arr_len=0\n    local closest_vowel_arr_index_arr_index_arr_index_arr_index_arr_index=0\n\
    \    local closest_vowel_arr_index_arr_index_arr_index_arr_index_arr_index_arr=()\n\
    \    local closest_vowel_arr_index_arr_index_arr_index_arr_index_arr_index_arr_len=0\n\
    \    local closest_vowel_arr\n}\n\ncandidate() {\n    get_closest_vowel \"$@\"\
    \n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"yogurt\") = \"u\" ]]\n    [[\
    \ $(candidate \"full\") = \"u\" ]]\n    [[ $(candidate \"easy\") = \"\" ]]\n \
    \   [[ $(candidate \"eAsy\") = \"\" ]]\n    [[ $(candidate \"ali\") = \"\" ]]\n\
    \    [[ $(candidate \"bad\") = \"a\" ]]\n    [[ $(candidate \"most\") = \"o\"\
    \ ]]\n    [[ $(candidate \"ab\") = \"\" ]]\n    [[ $(candidate \"ba\") = \"\"\
    \ ]]\n    [[ $(candidate \"quick\") = \"\" ]]\n    [[ $(candidate \"anime\") =\
    \ \"i\" ]]\n    [[ $(candidate \"Asia\") = \"\" ]]\n    [[ $(candidate \"Above\"\
    ) = \"o\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660002111
- exit_code: 1
  program: "#!/bin/bash\n# You are given a word. Your task is to find the closest\
    \ vowel that stands between \n# two consonants from the right side of the word\
    \ (case sensitive).\n# Vowels in the beginning and ending doesn't count. Return\
    \ empty string if you didn't\n# find any vowel met the above condition. \n# You\
    \ may assume that the given string contains English letter only.\n# Example:\n\
    #\n# $1 is a string\nget_closest_vowel() {\n  local word=$1\n  local word_len=${#word}\n\
    \  local i=0\n  local j=0\n  local k=0\n  local vowels=('a' 'e' 'i' 'o' 'u')\n\
    \  local vowel_len=${#vowels[@]}\n  local consonants=('b' 'c' 'd' 'f' 'g' 'h'\
    \ 'j' 'k' 'l' 'm' 'n' 'p' 'q' 'r' 's' 't' 'v' 'w' 'x' 'y' 'z')\n  local consonant_len=${#consonants[@]}\n\
    \  local found_vowel=''\n  local found_consonant=''\n  local found_consonant_index=0\n\
    \  local found_vowel_index=0\n  local found_vowel_index_from_right=0\n  local\
    \ found_consonant_index_from_right=0\n  local found_vowel_index_from_left=0\n\
    \  local found_consonant_index_from_left=0\n  local found_vowel_index_from_left_from_right=0\n\
    \  local found_consonant_index_from_left_from_right=0\n  local found_vowel_index_from_right_from_left=0\n\
    \  local found_consonant_index_from_right_from_left=0\n  local found_vowel_index_from_right_from_left_from_right=0\n\
    \  local found_consonant_index_from_right_from_left_from_right=0\n  local found_vowel_index_from_left_from_right_from_left=0\n\
    \  local found_consonant_index_from_left_from_right_from_left=0\n  local found_vowel_index_from_left_from_right_from_left_from_right=0\n\
    \  local found_consonant_index_from_left_from_right_from_left_from_right=0\n \
    \ local found_vowel_index_from_right_from\n}\n\ncandidate() {\n    get_closest_vowel\
    \ \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"yogurt\") = \"u\" ]]\n\
    \    [[ $(candidate \"full\") = \"u\" ]]\n    [[ $(candidate \"easy\") = \"\"\
    \ ]]\n    [[ $(candidate \"eAsy\") = \"\" ]]\n    [[ $(candidate \"ali\") = \"\
    \" ]]\n    [[ $(candidate \"bad\") = \"a\" ]]\n    [[ $(candidate \"most\") =\
    \ \"o\" ]]\n    [[ $(candidate \"ab\") = \"\" ]]\n    [[ $(candidate \"ba\") =\
    \ \"\" ]]\n    [[ $(candidate \"quick\") = \"\" ]]\n    [[ $(candidate \"anime\"\
    ) = \"i\" ]]\n    [[ $(candidate \"Asia\") = \"\" ]]\n    [[ $(candidate \"Above\"\
    ) = \"o\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660002111
- exit_code: 1
  program: "#!/bin/bash\n# You are given a word. Your task is to find the closest\
    \ vowel that stands between \n# two consonants from the right side of the word\
    \ (case sensitive).\n# Vowels in the beginning and ending doesn't count. Return\
    \ empty string if you didn't\n# find any vowel met the above condition. \n# You\
    \ may assume that the given string contains English letter only.\n# Example:\n\
    #\n# $1 is a string\nget_closest_vowel() {\n    local word=$1\n    local len=${#word}\n\
    \    local i=0\n    local vowel=''\n    local closest_vowel=''\n    local closest_vowel_index=0\n\
    \    local closest_vowel_distance=0\n    local vowel_index=0\n    local vowel_distance=0\n\
    \    local is_vowel=0\n    local is_consonant=0\n    local is_first_vowel=0\n\
    \    local is_first_consonant=0\n    local is_second_vowel=0\n    local is_second_consonant=0\n\
    \    local is_third_vowel=0\n    local is_third_consonant=0\n    local is_fourth_vowel=0\n\
    \    local is_fourth_consonant=0\n    local is_fifth_vowel=0\n    local is_fifth_consonant=0\n\
    \    local is_sixth_vowel=0\n    local is_sixth_consonant=0\n    local is_seventh_vowel=0\n\
    \    local is_seventh_consonant=0\n    local is_eighth_vowel=0\n    local is_eighth_consonant=0\n\
    \    local is_ninth_vowel=0\n    local is_ninth_consonant=0\n    local is_tenth_vowel=0\n\
    \    local is_tenth_consonant=0\n    local is_eleventh_vowel=0\n    local is_eleventh_consonant=0\n\
    \    local is_twelfth_vowel=0\n    local is_twelfth_consonant=0\n    local is_thirteenth_vowel=0\n\
    \    local is_thirteenth_consonant=0\n    local is_fourteenth_vowel=0\n    local\
    \ is_fourteenth_consonant=0\n    local is_fifteenth_vowel=0\n    local is_fifteenth_consonant=0\n\
    \    local is_sixteenth_vowel=0\n    local is_sixteenth_consonant=0\n    local\
    \ is_sevent\n}\n\ncandidate() {\n    get_closest_vowel \"$@\"\n}\n\nset -e\nrun_test()\
    \ {\n    [[ $(candidate \"yogurt\") = \"u\" ]]\n    [[ $(candidate \"full\") =\
    \ \"u\" ]]\n    [[ $(candidate \"easy\") = \"\" ]]\n    [[ $(candidate \"eAsy\"\
    ) = \"\" ]]\n    [[ $(candidate \"ali\") = \"\" ]]\n    [[ $(candidate \"bad\"\
    ) = \"a\" ]]\n    [[ $(candidate \"most\") = \"o\" ]]\n    [[ $(candidate \"ab\"\
    ) = \"\" ]]\n    [[ $(candidate \"ba\") = \"\" ]]\n    [[ $(candidate \"quick\"\
    ) = \"\" ]]\n    [[ $(candidate \"anime\") = \"i\" ]]\n    [[ $(candidate \"Asia\"\
    ) = \"\" ]]\n    [[ $(candidate \"Above\") = \"o\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660002111
- exit_code: 1
  program: "#!/bin/bash\n# You are given a word. Your task is to find the closest\
    \ vowel that stands between \n# two consonants from the right side of the word\
    \ (case sensitive).\n# Vowels in the beginning and ending doesn't count. Return\
    \ empty string if you didn't\n# find any vowel met the above condition. \n# You\
    \ may assume that the given string contains English letter only.\n# Example:\n\
    #\n# $1 is a string\nget_closest_vowel() {\n    local word=$1\n    local word_length=${#word}\n\
    \    local i=0\n    local j=0\n    local vowel_index=0\n    local vowel_index_list=()\n\
    \    local vowel_list=()\n    local vowel_list_length=0\n    local consonant_index=0\n\
    \    local consonant_index_list=()\n    local consonant_list=()\n    local consonant_list_length=0\n\
    \    local closest_vowel_index=0\n    local closest_vowel_distance=0\n    local\
    \ closest_vowel_distance_list=()\n    local closest_vowel_distance_list_length=0\n\
    \    local closest_vowel_index_list=()\n    local closest_vowel_index_list_length=0\n\
    \    local closest_vowel_index_list_length_min=0\n    local closest_vowel_index_list_length_max=0\n\
    \    local closest_vowel_index_list_length_min_index=0\n    local closest_vowel_index_list_length_max_index=0\n\
    \    local closest_vowel_index_list_length_min_index_list=()\n    local closest_vowel_index_list_length_min_index_list_length=0\n\
    \    local closest_vowel_index_list_length_max_index_list=()\n    local closest_vowel_index_list_length_max_index_list_length=0\n\
    \    local closest_vowel_index_list_length_min_index_list_length_min=0\n    local\
    \ closest_vowel_index_list_length_min_index_list_length_max=0\n    local closest_vowel_index_list_length_min_index_list_length_min_index=0\n\
    \    local closest_vowel_index_list_length_min_index_list_length_max_index=0\n\
    \    local closest_vowel_index_list_length_min_index_list_length_min_index_list=()\n\
    \    local closest_vowel_index_list_length_min_\n}\n\ncandidate() {\n    get_closest_vowel\
    \ \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"yogurt\") = \"u\" ]]\n\
    \    [[ $(candidate \"full\") = \"u\" ]]\n    [[ $(candidate \"easy\") = \"\"\
    \ ]]\n    [[ $(candidate \"eAsy\") = \"\" ]]\n    [[ $(candidate \"ali\") = \"\
    \" ]]\n    [[ $(candidate \"bad\") = \"a\" ]]\n    [[ $(candidate \"most\") =\
    \ \"o\" ]]\n    [[ $(candidate \"ab\") = \"\" ]]\n    [[ $(candidate \"ba\") =\
    \ \"\" ]]\n    [[ $(candidate \"quick\") = \"\" ]]\n    [[ $(candidate \"anime\"\
    ) = \"i\" ]]\n    [[ $(candidate \"Asia\") = \"\" ]]\n    [[ $(candidate \"Above\"\
    ) = \"o\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660002111
- exit_code: 1
  program: "#!/bin/bash\n# You are given a word. Your task is to find the closest\
    \ vowel that stands between \n# two consonants from the right side of the word\
    \ (case sensitive).\n# Vowels in the beginning and ending doesn't count. Return\
    \ empty string if you didn't\n# find any vowel met the above condition. \n# You\
    \ may assume that the given string contains English letter only.\n# Example:\n\
    #\n# $1 is a string\nget_closest_vowel() {\n    local word=\"$1\"\n    local len=${#word}\n\
    \    local i=0\n    local j=0\n    local k=0\n    local vowel=\"\"\n    local\
    \ consonant=\"\"\n    local result=\"\"\n    local char=\"\"\n    local char_next=\"\
    \"\n    local char_prev=\"\"\n    local char_next_next=\"\"\n    local char_prev_prev=\"\
    \"\n    local char_next_next_next=\"\"\n    local char_prev_prev_prev=\"\"\n \
    \   local char_next_next_next_next=\"\"\n    local char_prev_prev_prev_prev=\"\
    \"\n    local char_next_next_next_next_next=\"\"\n    local char_prev_prev_prev_prev_prev=\"\
    \"\n    local char_next_next_next_next_next_next=\"\"\n    local char_prev_prev_prev_prev_prev_prev=\"\
    \"\n    local char_next_next_next_next_next_next_next=\"\"\n    local char_prev_prev_prev_prev_prev_prev_prev=\"\
    \"\n    local char_next_next_next_next_next_next_next_next=\"\"\n    local char_prev_prev_prev_prev_prev_prev_prev_prev=\"\
    \"\n    local char_next_next_next_next_next_next_next_next_next=\"\"\n    local\
    \ char_prev_prev_prev_prev_prev_prev_prev_prev_prev=\"\"\n    local char_next_next_next_next_next_next_next_next_next_next=\"\
    \"\n    local char_prev_prev_prev_prev_prev_prev_prev_prev_prev_prev=\"\"\n  \
    \  local char_next_next_next_next_next_next_next_next_next_next_next=\"\"\n  \
    \  local char_prev_prev_prev_prev_prev_prev_prev_prev_prev_prev_prev=\"\"\n  \
    \  local char_next_next_next_next_next_next_next_next_next_next_next_next=\"\"\
    \n    local char_prev_prev_prev_prev_prev_prev_prev_prev_prev_prev_prev_prev=\"\
    \"\n    local char_next_next_next_next_next_next_next_next_next_next\n}\n\ncandidate()\
    \ {\n    get_closest_vowel \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate\
    \ \"yogurt\") = \"u\" ]]\n    [[ $(candidate \"full\") = \"u\" ]]\n    [[ $(candidate\
    \ \"easy\") = \"\" ]]\n    [[ $(candidate \"eAsy\") = \"\" ]]\n    [[ $(candidate\
    \ \"ali\") = \"\" ]]\n    [[ $(candidate \"bad\") = \"a\" ]]\n    [[ $(candidate\
    \ \"most\") = \"o\" ]]\n    [[ $(candidate \"ab\") = \"\" ]]\n    [[ $(candidate\
    \ \"ba\") = \"\" ]]\n    [[ $(candidate \"quick\") = \"\" ]]\n    [[ $(candidate\
    \ \"anime\") = \"i\" ]]\n    [[ $(candidate \"Asia\") = \"\" ]]\n    [[ $(candidate\
    \ \"Above\") = \"o\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660002111
- exit_code: 2
  program: "#!/bin/bash\n# You are given a word. Your task is to find the closest\
    \ vowel that stands between \n# two consonants from the right side of the word\
    \ (case sensitive).\n# Vowels in the beginning and ending doesn't count. Return\
    \ empty string if you didn't\n# find any vowel met the above condition. \n# You\
    \ may assume that the given string contains English letter only.\n# Example:\n\
    #\n# $1 is a string\nget_closest_vowel() {\n  local word=$1\n  local len=${#word}\n\
    \  local i=0\n  local j=0\n  local k=0\n  local vowel=''\n  local consonant=''\n\
    \  local closest_vowel=''\n  local closest_distance=0\n  local distance=0\n  local\
    \ vowels=('a' 'e' 'i' 'o' 'u')\n  local consonants=('b' 'c' 'd' 'f' 'g' 'h' 'j'\
    \ 'k' 'l' 'm' 'n' 'p' 'q' 'r' 's' 't' 'v' 'w' 'x' 'y' 'z')\n  for (( i=0; i<len;\
    \ i++ )); do\n    for (( j=0; j<${#vowels[@]}; j++ )); do\n      if [[ ${word:$i:1}\
    \ == ${vowels[$j]} ]]; then\n        vowel=${vowels[$j]}\n        break\n    \
    \  fi\n    done\n    if [[ -z $vowel ]]; then\n      continue\n    fi\n    for\
    \ (( k=0; k<${#consonants[@]}; k++ )); do\n      if [[ ${word:$((i-1)):1} == ${consonants[$k]}\
    \ ]]; then\n        consonant=${consonants[$k]}\n        break\n      fi\n   \
    \ done\n    if [[ -z $consonant ]]; then\n      continue\n    fi\n    for (( k=0;\
    \ k<${#consonants[@]}; k++ )); do\n      if [[ ${word:$((i+1)):1} == ${consonants[$k]}\
    \ ]]; then\n        consonant=${consonants[$k]}\n        break\n      fi\n   \
    \ done\n    if [[ -z $consonant ]]; then\n      continue\n    fi\n    distance=$((i+1))\n\
    \    if [[ -z $closest_vowel ]]; then\n      closest_vowel=$vowel\n      closest_distance=$distance\n\
    \    elif [[ $distance -lt $closest_distance ]]; then\n      closest\n}\n\ncandidate()\
    \ {\n    get_closest_vowel \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate\
    \ \"yogurt\") = \"u\" ]]\n    [[ $(candidate \"full\") = \"u\" ]]\n    [[ $(candidate\
    \ \"easy\") = \"\" ]]\n    [[ $(candidate \"eAsy\") = \"\" ]]\n    [[ $(candidate\
    \ \"ali\") = \"\" ]]\n    [[ $(candidate \"bad\") = \"a\" ]]\n    [[ $(candidate\
    \ \"most\") = \"o\" ]]\n    [[ $(candidate \"ab\") = \"\" ]]\n    [[ $(candidate\
    \ \"ba\") = \"\" ]]\n    [[ $(candidate \"quick\") = \"\" ]]\n    [[ $(candidate\
    \ \"anime\") = \"i\" ]]\n    [[ $(candidate \"Asia\") = \"\" ]]\n    [[ $(candidate\
    \ \"Above\") = \"o\" ]]\n}\n\nrun_test"
  status: SyntaxError
  stderr: '/tmp/tmpuy85f0dj.sh: line 57: syntax error near unexpected token `}''

    /tmp/tmpuy85f0dj.sh: line 57: `}''

    '
  stdout: ''
  timestamp: 1660002112
- exit_code: 1
  program: "#!/bin/bash\n# You are given a word. Your task is to find the closest\
    \ vowel that stands between \n# two consonants from the right side of the word\
    \ (case sensitive).\n# Vowels in the beginning and ending doesn't count. Return\
    \ empty string if you didn't\n# find any vowel met the above condition. \n# You\
    \ may assume that the given string contains English letter only.\n# Example:\n\
    #\n# $1 is a string\nget_closest_vowel() {\n    local word=$1\n    local len=${#word}\n\
    \    local i=0\n    local vowel=\"\"\n    local vowel_pos=0\n    local vowel_len=0\n\
    \    local consonant_pos=0\n    local consonant_len=0\n    local consonant=\"\"\
    \n    local closest_vowel=\"\"\n    local closest_vowel_pos=0\n    local closest_vowel_len=0\n\
    \    local closest_consonant=\"\"\n    local closest_consonant_pos=0\n    local\
    \ closest_consonant_len=0\n    local closest_distance=0\n    local distance=0\n\
    \    local distance_min=0\n    local distance_max=0\n    local distance_min_pos=0\n\
    \    local distance_max_pos=0\n    local distance_min_len=0\n    local distance_max_len=0\n\
    \    local distance_min_vowel=\"\"\n    local distance_max_vowel=\"\"\n    local\
    \ distance_min_consonant=\"\"\n    local distance_max_consonant=\"\"\n    local\
    \ distance_min_consonant_pos=0\n    local distance_max_consonant_pos=0\n    local\
    \ distance_min_consonant_len=0\n    local distance_max_consonant_len=0\n    local\
    \ distance_min_vowel_pos=0\n    local distance_max_vowel_pos=0\n    local distance_min_vowel_len=0\n\
    \    local distance_max_vowel_len=0\n    local vowel_list=\"a e i o u\"\n    local\
    \ consonant_list=\"b c d f g h j k l m n p q r s t v w x y z\"\n    local vowel_list_len=0\n\
    \    local consonant_list_len=0\n    local vowel_list_arr=()\n    local consonant_list_arr=()\n\
    \    local vowel_list_arr_len=0\n    local consonant_list_arr_len=0\n    local\
    \ vowel_list_arr_i=0\n    local consonant_list_arr_i=0\n    local vowel_list_arr_j=0\n\
    \    local consonant_list\n}\n\ncandidate() {\n    get_closest_vowel \"$@\"\n\
    }\n\nset -e\nrun_test() {\n    [[ $(candidate \"yogurt\") = \"u\" ]]\n    [[ $(candidate\
    \ \"full\") = \"u\" ]]\n    [[ $(candidate \"easy\") = \"\" ]]\n    [[ $(candidate\
    \ \"eAsy\") = \"\" ]]\n    [[ $(candidate \"ali\") = \"\" ]]\n    [[ $(candidate\
    \ \"bad\") = \"a\" ]]\n    [[ $(candidate \"most\") = \"o\" ]]\n    [[ $(candidate\
    \ \"ab\") = \"\" ]]\n    [[ $(candidate \"ba\") = \"\" ]]\n    [[ $(candidate\
    \ \"quick\") = \"\" ]]\n    [[ $(candidate \"anime\") = \"i\" ]]\n    [[ $(candidate\
    \ \"Asia\") = \"\" ]]\n    [[ $(candidate \"Above\") = \"o\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660002112
- exit_code: 1
  program: "#!/bin/bash\n# You are given a word. Your task is to find the closest\
    \ vowel that stands between \n# two consonants from the right side of the word\
    \ (case sensitive).\n# Vowels in the beginning and ending doesn't count. Return\
    \ empty string if you didn't\n# find any vowel met the above condition. \n# You\
    \ may assume that the given string contains English letter only.\n# Example:\n\
    #\n# $1 is a string\nget_closest_vowel() {\n    local word=$1\n    local len=${#word}\n\
    \    local i=0\n    local vowel=\"\"\n    local closest_vowel=\"\"\n    local\
    \ closest_vowel_index=0\n    local closest_vowel_distance=0\n    local vowel_index=0\n\
    \    local vowel_distance=0\n    local is_vowel=0\n    local is_consonant=0\n\
    \    local is_first_vowel=0\n    local is_last_vowel=0\n    local is_first_consonant=0\n\
    \    local is_last_consonant=0\n    local is_first_char=0\n    local is_last_char=0\n\
    \    local is_first_vowel_found=0\n    local is_last_vowel_found=0\n    local\
    \ is_first_consonant_found=0\n    local is_last_consonant_found=0\n    local is_first_char_found=0\n\
    \    local is_last_char_found=0\n    local is_first_char_vowel=0\n    local is_last_char_vowel=0\n\
    \    local is_first_char_consonant=0\n    local is_last_char_consonant=0\n   \
    \ local is_first_char_vowel_found=0\n    local is_last_char_vowel_found=0\n  \
    \  local is_first_char_consonant_found=0\n    local is_last_char_consonant_found=0\n\
    \    local is_first_char_found=0\n    local is_last_char_found=0\n    local is_first_char_vowel_found=0\n\
    \    local is_last_char_vowel_found=0\n    local is_first_char_consonant_found=0\n\
    \    local is_last_char_consonant_found=0\n    local is_first_char_found=0\n \
    \   local is_last_char_found=0\n    local is_first_char_vowel_found=0\n    local\
    \ is_last_char_vowel_found=0\n    local is_\n}\n\ncandidate() {\n    get_closest_vowel\
    \ \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"yogurt\") = \"u\" ]]\n\
    \    [[ $(candidate \"full\") = \"u\" ]]\n    [[ $(candidate \"easy\") = \"\"\
    \ ]]\n    [[ $(candidate \"eAsy\") = \"\" ]]\n    [[ $(candidate \"ali\") = \"\
    \" ]]\n    [[ $(candidate \"bad\") = \"a\" ]]\n    [[ $(candidate \"most\") =\
    \ \"o\" ]]\n    [[ $(candidate \"ab\") = \"\" ]]\n    [[ $(candidate \"ba\") =\
    \ \"\" ]]\n    [[ $(candidate \"quick\") = \"\" ]]\n    [[ $(candidate \"anime\"\
    ) = \"i\" ]]\n    [[ $(candidate \"Asia\") = \"\" ]]\n    [[ $(candidate \"Above\"\
    ) = \"o\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660002112
- exit_code: 1
  program: "#!/bin/bash\n# You are given a word. Your task is to find the closest\
    \ vowel that stands between \n# two consonants from the right side of the word\
    \ (case sensitive).\n# Vowels in the beginning and ending doesn't count. Return\
    \ empty string if you didn't\n# find any vowel met the above condition. \n# You\
    \ may assume that the given string contains English letter only.\n# Example:\n\
    #\n# $1 is a string\nget_closest_vowel() {\n  local word=$1\n  local word_len=${#word}\n\
    \  local i=0\n  local j=0\n  local vowel_index=0\n  local vowel_index_list=()\n\
    \  local vowel_index_list_len=0\n  local closest_vowel_index=0\n  local closest_vowel_index_len=0\n\
    \  local closest_vowel_index_list=()\n  local closest_vowel_index_list_len=0\n\
    \  local closest_vowel_index_list_len_tmp=0\n  local closest_vowel_index_list_len_tmp_list=()\n\
    \  local closest_vowel_index_list_len_tmp_list_len=0\n  local closest_vowel_index_list_len_tmp_list_len_tmp=0\n\
    \  local closest_vowel_index_list_len_tmp_list_len_tmp_list=()\n  local closest_vowel_index_list_len_tmp_list_len_tmp_list_len=0\n\
    \  local closest_vowel_index_list_len_tmp_list_len_tmp_list_len_tmp=0\n  local\
    \ closest_vowel_index_list_len_tmp_list_len_tmp_list_len_tmp_list=()\n  local\
    \ closest_vowel_index_list_len_tmp_list_len_tmp_list_len_tmp_list_len=0\n  local\
    \ closest_vowel_index_list_len_tmp_list_len_tmp_list_len_tmp_list_len_tmp=0\n\
    \  local closest_vowel_index_list_len_tmp_list_len_tmp_list_len_tmp_list_len_tmp_list=()\n\
    \  local closest_vowel_index_list_len_tmp_list_len_tmp_list_len_tmp_list_len_tmp_list_len=0\n\
    \  local closest_vowel_index_list_len_tmp_list_len_tmp_list_len_tmp_list_len_tmp_list_len_tmp=0\n\
    \  local closest_vow\n}\n\ncandidate() {\n    get_closest_vowel \"$@\"\n}\n\n\
    set -e\nrun_test() {\n    [[ $(candidate \"yogurt\") = \"u\" ]]\n    [[ $(candidate\
    \ \"full\") = \"u\" ]]\n    [[ $(candidate \"easy\") = \"\" ]]\n    [[ $(candidate\
    \ \"eAsy\") = \"\" ]]\n    [[ $(candidate \"ali\") = \"\" ]]\n    [[ $(candidate\
    \ \"bad\") = \"a\" ]]\n    [[ $(candidate \"most\") = \"o\" ]]\n    [[ $(candidate\
    \ \"ab\") = \"\" ]]\n    [[ $(candidate \"ba\") = \"\" ]]\n    [[ $(candidate\
    \ \"quick\") = \"\" ]]\n    [[ $(candidate \"anime\") = \"i\" ]]\n    [[ $(candidate\
    \ \"Asia\") = \"\" ]]\n    [[ $(candidate \"Above\") = \"o\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660002111
- exit_code: 1
  program: "#!/bin/bash\n# You are given a word. Your task is to find the closest\
    \ vowel that stands between \n# two consonants from the right side of the word\
    \ (case sensitive).\n# Vowels in the beginning and ending doesn't count. Return\
    \ empty string if you didn't\n# find any vowel met the above condition. \n# You\
    \ may assume that the given string contains English letter only.\n# Example:\n\
    #\n# $1 is a string\nget_closest_vowel() {\n    local word=$1\n    local result=\"\
    \"\n    local length=${#word}\n    local i=0\n    local j=0\n    local k=0\n \
    \   local vowel_index=0\n    local vowel_count=0\n    local vowel_array=()\n \
    \   local vowel_array_index=0\n    local consonant_count=0\n    local consonant_array=()\n\
    \    local consonant_array_index=0\n    local consonant_index=0\n    local consonant_index_array=()\n\
    \    local consonant_index_array_index=0\n    local consonant_index_array_length=0\n\
    \    local consonant_index_array_length_index=0\n    local consonant_index_array_length_index_index=0\n\
    \    local consonant_index_array_length_index_index_index=0\n    local consonant_index_array_length_index_index_index_index=0\n\
    \    local consonant_index_array_length_index_index_index_index_index=0\n    local\
    \ consonant_index_array_length_index_index_index_index_index_index=0\n    local\
    \ consonant_index_array_length_index_index_index_index_index_index_index=0\n \
    \   local consonant_index_array_length_index_index_index_index_index_index_index_index=0\n\
    \    local consonant_index_array_length_index_index_index_index_index_index_index_index_index=0\n\
    \    local consonant_index_array_length_index_index_index_index_index_index_index_index_index_index=0\n\
    \    local consonant_index_array_length_index_index_index_index_index_index_index_index_index_index_index=0\n\
    \    local consonant_index_array_length_index_index_index_index_index_index_index_index_index_index_index_index=0\n\
    \    local consonant_index_array_length_index_index_index_index_index_index_index_index_index_index_index_index_index=0\n\
    \    local consonant_index_array_length_index_\n}\n\ncandidate() {\n    get_closest_vowel\
    \ \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"yogurt\") = \"u\" ]]\n\
    \    [[ $(candidate \"full\") = \"u\" ]]\n    [[ $(candidate \"easy\") = \"\"\
    \ ]]\n    [[ $(candidate \"eAsy\") = \"\" ]]\n    [[ $(candidate \"ali\") = \"\
    \" ]]\n    [[ $(candidate \"bad\") = \"a\" ]]\n    [[ $(candidate \"most\") =\
    \ \"o\" ]]\n    [[ $(candidate \"ab\") = \"\" ]]\n    [[ $(candidate \"ba\") =\
    \ \"\" ]]\n    [[ $(candidate \"quick\") = \"\" ]]\n    [[ $(candidate \"anime\"\
    ) = \"i\" ]]\n    [[ $(candidate \"Asia\") = \"\" ]]\n    [[ $(candidate \"Above\"\
    ) = \"o\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660002112
- exit_code: 1
  program: "#!/bin/bash\n# You are given a word. Your task is to find the closest\
    \ vowel that stands between \n# two consonants from the right side of the word\
    \ (case sensitive).\n# Vowels in the beginning and ending doesn't count. Return\
    \ empty string if you didn't\n# find any vowel met the above condition. \n# You\
    \ may assume that the given string contains English letter only.\n# Example:\n\
    #\n# $1 is a string\nget_closest_vowel() {\n  local word=$1\n  local result=''\n\
    \  local vowel=''\n  local consonant=''\n  local i=0\n  local j=0\n  local len=${#word}\n\
    \  local found_vowel=0\n  local found_consonant=0\n  local found_vowel_index=0\n\
    \  local found_consonant_index=0\n  local found_vowel_char=''\n  local found_consonant_char=''\n\
    \  local vowels=('a' 'e' 'i' 'o' 'u')\n  local consonants=('b' 'c' 'd' 'f' 'g'\
    \ 'h' 'j' 'k' 'l' 'm' 'n' 'p' 'q' 'r' 's' 't' 'v' 'w' 'x' 'y' 'z')\n  local current_char=''\n\
    \  local current_char_index=0\n  local current_char_type=''\n  local current_char_type_index=0\n\
    \  local current_char_type_char=''\n  local current_char_type_index_char=''\n\
    \  local current_char_type_index_char_index=0\n  local current_char_type_index_char_index_char=''\n\
    \  local current_char_type_index_char_index_char_index=0\n  local current_char_type_index_char_index_char_index_char=''\n\
    \  local current_char_type_index_char_index_char_index_char_index=0\n  local current_char_type_index_char_index_char_index_char_index_char=''\n\
    \  local current_char_type_index_char_index_char_index_char_index_char_index=0\n\
    \  local current_char_type_index_char_index_char_index_char_index_char_index_char=''\n\
    \  local current_char_type_index_char_index_char_index_char_index_char_index_char_index=0\n\
    \  local current_char_type_index_char_index_char_index_char_index_char_index\n\
    }\n\ncandidate() {\n    get_closest_vowel \"$@\"\n}\n\nset -e\nrun_test() {\n\
    \    [[ $(candidate \"yogurt\") = \"u\" ]]\n    [[ $(candidate \"full\") = \"\
    u\" ]]\n    [[ $(candidate \"easy\") = \"\" ]]\n    [[ $(candidate \"eAsy\") =\
    \ \"\" ]]\n    [[ $(candidate \"ali\") = \"\" ]]\n    [[ $(candidate \"bad\")\
    \ = \"a\" ]]\n    [[ $(candidate \"most\") = \"o\" ]]\n    [[ $(candidate \"ab\"\
    ) = \"\" ]]\n    [[ $(candidate \"ba\") = \"\" ]]\n    [[ $(candidate \"quick\"\
    ) = \"\" ]]\n    [[ $(candidate \"anime\") = \"i\" ]]\n    [[ $(candidate \"Asia\"\
    ) = \"\" ]]\n    [[ $(candidate \"Above\") = \"o\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660002111
- exit_code: 1
  program: "#!/bin/bash\n# You are given a word. Your task is to find the closest\
    \ vowel that stands between \n# two consonants from the right side of the word\
    \ (case sensitive).\n# Vowels in the beginning and ending doesn't count. Return\
    \ empty string if you didn't\n# find any vowel met the above condition. \n# You\
    \ may assume that the given string contains English letter only.\n# Example:\n\
    #\n# $1 is a string\nget_closest_vowel() {\n    local word=$1\n    local word_len=${#word}\n\
    \    local i=0\n    local j=0\n    local k=0\n    local is_vowel=0\n    local\
    \ is_consonant=0\n    local vowel_index=0\n    local consonant_index=0\n    local\
    \ closest_vowel=''\n    local closest_vowel_index=0\n    local closest_vowel_distance=0\n\
    \    local vowels=('a' 'e' 'i' 'o' 'u')\n    local consonants=('b' 'c' 'd' 'f'\
    \ 'g' 'h' 'j' 'k' 'l' 'm' 'n' 'p' 'q' 'r' 's' 't' 'v' 'w' 'x' 'y' 'z')\n    local\
    \ word_array=()\n    local word_array_len=0\n    local word_array_index=0\n  \
    \  local word_array_index_vowel=0\n    local word_array_index_consonant=0\n  \
    \  local word_array_index_vowel_distance=0\n    local word_array_index_consonant_distance=0\n\
    \    local word_array_index_vowel_distance_min=0\n    local word_array_index_consonant_distance_min=0\n\
    \    local word_array_index_vowel_distance_min_index=0\n    local word_array_index_consonant_distance_min_index=0\n\
    \    local word_array_index_vowel_distance_min_index_vowel=0\n    local word_array_index_consonant_distance_min_index_consonant=0\n\
    \    local word_array_index_vowel_distance_min_index_vowel_distance=0\n    local\
    \ word_array_index_consonant_distance_min_index_consonant_distance=0\n    local\
    \ word_array_index_vowel_distance_min_index_vowel_distance_min=0\n    local word_array_index_consonant_distance_min_index_consonant_distance\n\
    }\n\ncandidate() {\n    get_closest_vowel \"$@\"\n}\n\nset -e\nrun_test() {\n\
    \    [[ $(candidate \"yogurt\") = \"u\" ]]\n    [[ $(candidate \"full\") = \"\
    u\" ]]\n    [[ $(candidate \"easy\") = \"\" ]]\n    [[ $(candidate \"eAsy\") =\
    \ \"\" ]]\n    [[ $(candidate \"ali\") = \"\" ]]\n    [[ $(candidate \"bad\")\
    \ = \"a\" ]]\n    [[ $(candidate \"most\") = \"o\" ]]\n    [[ $(candidate \"ab\"\
    ) = \"\" ]]\n    [[ $(candidate \"ba\") = \"\" ]]\n    [[ $(candidate \"quick\"\
    ) = \"\" ]]\n    [[ $(candidate \"anime\") = \"i\" ]]\n    [[ $(candidate \"Asia\"\
    ) = \"\" ]]\n    [[ $(candidate \"Above\") = \"o\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660002111
- exit_code: 1
  program: "#!/bin/bash\n# You are given a word. Your task is to find the closest\
    \ vowel that stands between \n# two consonants from the right side of the word\
    \ (case sensitive).\n# Vowels in the beginning and ending doesn't count. Return\
    \ empty string if you didn't\n# find any vowel met the above condition. \n# You\
    \ may assume that the given string contains English letter only.\n# Example:\n\
    #\n# $1 is a string\nget_closest_vowel() {\n    local word=$1\n    local len=${#word}\n\
    \    local i=0\n    local j=0\n    local k=0\n    local vowel=\"\"\n    local\
    \ consonant=\"\"\n    local result=\"\"\n    local vowels=\"aeiou\"\n    local\
    \ consonants=\"bcdfghjklmnpqrstvwxyz\"\n    local found=0\n    local found_vowel=\"\
    \"\n    local found_consonant=\"\"\n    local found_index=0\n    local found_vowel_index=0\n\
    \    local found_consonant_index=0\n    local found_vowel_len=0\n    local found_consonant_len=0\n\
    \    local found_vowel_len_index=0\n    local found_consonant_len_index=0\n  \
    \  local found_vowel_len_index_diff=0\n    local found_consonant_len_index_diff=0\n\
    \    local found_vowel_len_index_diff_min=0\n    local found_consonant_len_index_diff_min=0\n\
    \    local found_vowel_len_index_diff_min_index=0\n    local found_consonant_len_index_diff_min_index=0\n\
    \    local found_vowel_len_index_diff_min_index_diff=0\n    local found_consonant_len_index_diff_min_index_diff=0\n\
    \    local found_vowel_len_index_diff_min_index_diff_min=0\n    local found_consonant_len_index_diff_min_index_diff_min=0\n\
    \    local found_vowel_len_index_diff_min_index_diff_min_index=0\n    local found_consonant_len_index_diff_min_index_diff_min_index=0\n\
    \    local found_vowel_len_index_diff_min_index_diff_min_index_diff=0\n    local\
    \ found_consonant_len_index_diff_min_index_diff_min_index_diff=0\n    local found_vowel_len_index_diff_min\n\
    }\n\ncandidate() {\n    get_closest_vowel \"$@\"\n}\n\nset -e\nrun_test() {\n\
    \    [[ $(candidate \"yogurt\") = \"u\" ]]\n    [[ $(candidate \"full\") = \"\
    u\" ]]\n    [[ $(candidate \"easy\") = \"\" ]]\n    [[ $(candidate \"eAsy\") =\
    \ \"\" ]]\n    [[ $(candidate \"ali\") = \"\" ]]\n    [[ $(candidate \"bad\")\
    \ = \"a\" ]]\n    [[ $(candidate \"most\") = \"o\" ]]\n    [[ $(candidate \"ab\"\
    ) = \"\" ]]\n    [[ $(candidate \"ba\") = \"\" ]]\n    [[ $(candidate \"quick\"\
    ) = \"\" ]]\n    [[ $(candidate \"anime\") = \"i\" ]]\n    [[ $(candidate \"Asia\"\
    ) = \"\" ]]\n    [[ $(candidate \"Above\") = \"o\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660002112
- exit_code: 1
  program: "#!/bin/bash\n# You are given a word. Your task is to find the closest\
    \ vowel that stands between \n# two consonants from the right side of the word\
    \ (case sensitive).\n# Vowels in the beginning and ending doesn't count. Return\
    \ empty string if you didn't\n# find any vowel met the above condition. \n# You\
    \ may assume that the given string contains English letter only.\n# Example:\n\
    #\n# $1 is a string\nget_closest_vowel() {\n    local word=\"$1\"\n    local word_len=${#word}\n\
    \    local i=0\n    local vowel_pos=0\n    local vowel_pos_prev=0\n    local vowel_pos_next=0\n\
    \    local vowel_pos_prev_next=0\n    local vowel_pos_prev_prev=0\n    local vowel_pos_next_next=0\n\
    \    local vowel_pos_prev_prev_next=0\n    local vowel_pos_prev_next_next=0\n\
    \    local vowel_pos_prev_prev_next_next=0\n    local vowel_pos_prev_prev_next_next_next=0\n\
    \    local vowel_pos_prev_prev_next_next_next_next=0\n    local vowel_pos_prev_prev_next_next_next_next_next=0\n\
    \    local vowel_pos_prev_prev_next_next_next_next_next_next=0\n    local vowel_pos_prev_prev_next_next_next_next_next_next_next=0\n\
    \    local vowel_pos_prev_prev_next_next_next_next_next_next_next_next=0\n   \
    \ local vowel_pos_prev_prev_next_next_next_next_next_next_next_next_next=0\n \
    \   local vowel_pos_prev_prev_next_next_next_next_next_next_next_next_next_next=0\n\
    \    local vowel_pos_prev_prev_next_next_next_next_next_next_next_next_next_next_next=0\n\
    \    local vowel_pos_prev_prev_next_next_next_next_next_next_next_next_next_next_next_next=0\n\
    \    local vowel_pos_prev_prev_next_next_next_next_next_next_next_next_next_next_next_next_next=0\n\
    \    local vowel_pos_prev_prev_next_next_next_next_next_next_next_next_next_next_next_next_next_next=0\n\
    \    local vowel_pos_prev_prev_next_next_next_next_next_next_next_next_next_next_\n\
    }\n\ncandidate() {\n    get_closest_vowel \"$@\"\n}\n\nset -e\nrun_test() {\n\
    \    [[ $(candidate \"yogurt\") = \"u\" ]]\n    [[ $(candidate \"full\") = \"\
    u\" ]]\n    [[ $(candidate \"easy\") = \"\" ]]\n    [[ $(candidate \"eAsy\") =\
    \ \"\" ]]\n    [[ $(candidate \"ali\") = \"\" ]]\n    [[ $(candidate \"bad\")\
    \ = \"a\" ]]\n    [[ $(candidate \"most\") = \"o\" ]]\n    [[ $(candidate \"ab\"\
    ) = \"\" ]]\n    [[ $(candidate \"ba\") = \"\" ]]\n    [[ $(candidate \"quick\"\
    ) = \"\" ]]\n    [[ $(candidate \"anime\") = \"i\" ]]\n    [[ $(candidate \"Asia\"\
    ) = \"\" ]]\n    [[ $(candidate \"Above\") = \"o\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660002112
- exit_code: 1
  program: "#!/bin/bash\n# You are given a word. Your task is to find the closest\
    \ vowel that stands between \n# two consonants from the right side of the word\
    \ (case sensitive).\n# Vowels in the beginning and ending doesn't count. Return\
    \ empty string if you didn't\n# find any vowel met the above condition. \n# You\
    \ may assume that the given string contains English letter only.\n# Example:\n\
    #\n# $1 is a string\nget_closest_vowel() {\n  local word=$1\n  local word_len=${#word}\n\
    \  local vowel_pos=0\n  local vowel_pos_min=0\n  local vowel_pos_max=0\n  local\
    \ vowel_pos_min_diff=0\n  local vowel_pos_max_diff=0\n  local vowel_pos_diff=0\n\
    \  local vowel_pos_diff_min=0\n  local vowel_pos_diff_max=0\n  local vowel_pos_diff_min_idx=0\n\
    \  local vowel_pos_diff_max_idx=0\n  local vowel_pos_diff_min_idx_tmp=0\n  local\
    \ vowel_pos_diff_max_idx_tmp=0\n  local vowel_pos_diff_min_tmp=0\n  local vowel_pos_diff_max_tmp=0\n\
    \  local vowel_pos_diff_min_idx_tmp=0\n  local vowel_pos_diff_max_idx_tmp=0\n\
    \  local vowel_pos_diff_min_tmp=0\n  local vowel_pos_diff_max_tmp=0\n  local vowel_pos_diff_min_idx_tmp=0\n\
    \  local vowel_pos_diff_max_idx_tmp=0\n  local vowel_pos_diff_min_tmp=0\n  local\
    \ vowel_pos_diff_max_tmp=0\n  local vowel_pos_diff_min_idx_tmp=0\n  local vowel_pos_diff_max_idx_tmp=0\n\
    \  local vowel_pos_diff_min_tmp=0\n  local vowel_pos_diff_max_tmp=0\n  local vowel_pos_diff_min_idx_tmp=0\n\
    \  local vowel_pos_diff_max_idx_tmp=0\n  local vowel_pos_diff_min_tmp=0\n  local\
    \ vowel_pos_diff_max_tmp=0\n  local vowel_pos_diff_min_idx_tmp=0\n  local vowel_pos_diff_max_idx_tmp=0\n\
    \  local vowel_pos_diff_min_tmp=0\n  local vowel_pos_diff_max_tmp=0\n  local vowel_pos_\n\
    }\n\ncandidate() {\n    get_closest_vowel \"$@\"\n}\n\nset -e\nrun_test() {\n\
    \    [[ $(candidate \"yogurt\") = \"u\" ]]\n    [[ $(candidate \"full\") = \"\
    u\" ]]\n    [[ $(candidate \"easy\") = \"\" ]]\n    [[ $(candidate \"eAsy\") =\
    \ \"\" ]]\n    [[ $(candidate \"ali\") = \"\" ]]\n    [[ $(candidate \"bad\")\
    \ = \"a\" ]]\n    [[ $(candidate \"most\") = \"o\" ]]\n    [[ $(candidate \"ab\"\
    ) = \"\" ]]\n    [[ $(candidate \"ba\") = \"\" ]]\n    [[ $(candidate \"quick\"\
    ) = \"\" ]]\n    [[ $(candidate \"anime\") = \"i\" ]]\n    [[ $(candidate \"Asia\"\
    ) = \"\" ]]\n    [[ $(candidate \"Above\") = \"o\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660002112
- exit_code: 1
  program: "#!/bin/bash\n# You are given a word. Your task is to find the closest\
    \ vowel that stands between \n# two consonants from the right side of the word\
    \ (case sensitive).\n# Vowels in the beginning and ending doesn't count. Return\
    \ empty string if you didn't\n# find any vowel met the above condition. \n# You\
    \ may assume that the given string contains English letter only.\n# Example:\n\
    #\n# $1 is a string\nget_closest_vowel() {\n    local word=$1\n    local word_len=${#word}\n\
    \    local i=0\n    local j=0\n    local vowel_pos=0\n    local vowel_pos_arr=()\n\
    \    local vowel_pos_arr_len=0\n    local vowel_pos_arr_last_idx=0\n    local\
    \ vowel_pos_arr_last_idx_minus_1=0\n    local vowel_pos_arr_last_idx_minus_2=0\n\
    \    local vowel_pos_arr_last_idx_minus_3=0\n    local vowel_pos_arr_last_idx_minus_4=0\n\
    \    local vowel_pos_arr_last_idx_minus_5=0\n    local vowel_pos_arr_last_idx_minus_6=0\n\
    \    local vowel_pos_arr_last_idx_minus_7=0\n    local vowel_pos_arr_last_idx_minus_8=0\n\
    \    local vowel_pos_arr_last_idx_minus_9=0\n    local vowel_pos_arr_last_idx_minus_10=0\n\
    \    local vowel_pos_arr_last_idx_minus_11=0\n    local vowel_pos_arr_last_idx_minus_12=0\n\
    \    local vowel_pos_arr_last_idx_minus_13=0\n    local vowel_pos_arr_last_idx_minus_14=0\n\
    \    local vowel_pos_arr_last_idx_minus_15=0\n    local vowel_pos_arr_last_idx_minus_16=0\n\
    \    local vowel_pos_arr_last_idx_minus_17=0\n    local vowel_pos_arr_last_idx_minus_18=0\n\
    \    local vowel_pos_arr_last_idx_minus_19=0\n    local vowel_pos_arr_last_idx_minus_20=0\n\
    \    local vowel_pos_arr_last_idx_minus_21=0\n    local vowel_pos_arr_last_idx_minus_22=0\n\
    \    local vowel_pos_arr_last_idx_minus_23=0\n\n}\n\ncandidate() {\n    get_closest_vowel\
    \ \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"yogurt\") = \"u\" ]]\n\
    \    [[ $(candidate \"full\") = \"u\" ]]\n    [[ $(candidate \"easy\") = \"\"\
    \ ]]\n    [[ $(candidate \"eAsy\") = \"\" ]]\n    [[ $(candidate \"ali\") = \"\
    \" ]]\n    [[ $(candidate \"bad\") = \"a\" ]]\n    [[ $(candidate \"most\") =\
    \ \"o\" ]]\n    [[ $(candidate \"ab\") = \"\" ]]\n    [[ $(candidate \"ba\") =\
    \ \"\" ]]\n    [[ $(candidate \"quick\") = \"\" ]]\n    [[ $(candidate \"anime\"\
    ) = \"i\" ]]\n    [[ $(candidate \"Asia\") = \"\" ]]\n    [[ $(candidate \"Above\"\
    ) = \"o\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660002111
- exit_code: 1
  program: "#!/bin/bash\n# You are given a word. Your task is to find the closest\
    \ vowel that stands between \n# two consonants from the right side of the word\
    \ (case sensitive).\n# Vowels in the beginning and ending doesn't count. Return\
    \ empty string if you didn't\n# find any vowel met the above condition. \n# You\
    \ may assume that the given string contains English letter only.\n# Example:\n\
    #\n# $1 is a string\nget_closest_vowel() {\n    local word=$1\n    local word_len=${#word}\n\
    \    local i=0\n    local vowel_pos=0\n    local vowel_pos_prev=0\n    local vowel_pos_next=0\n\
    \    local vowel_pos_prev_prev=0\n    local vowel_pos_next_next=0\n    local vowel_pos_prev_prev_prev=0\n\
    \    local vowel_pos_next_next_next=0\n    local vowel_pos_prev_prev_prev_prev=0\n\
    \    local vowel_pos_next_next_next_next=0\n    local vowel_pos_prev_prev_prev_prev_prev=0\n\
    \    local vowel_pos_next_next_next_next_next=0\n    local vowel_pos_prev_prev_prev_prev_prev_prev=0\n\
    \    local vowel_pos_next_next_next_next_next_next=0\n    local vowel_pos_prev_prev_prev_prev_prev_prev_prev=0\n\
    \    local vowel_pos_next_next_next_next_next_next_next=0\n    local vowel_pos_prev_prev_prev_prev_prev_prev_prev_prev=0\n\
    \    local vowel_pos_next_next_next_next_next_next_next_next=0\n    local vowel_pos_prev_prev_prev_prev_prev_prev_prev_prev_prev=0\n\
    \    local vowel_pos_next_next_next_next_next_next_next_next_next=0\n    local\
    \ vowel_pos_prev_prev_prev_prev_prev_prev_prev_prev_prev_prev=0\n    local vowel_pos_next_next_next_next_next_next_next_next_next_next=0\n\
    \    local vowel_pos_prev_prev_prev_prev_prev_prev_prev_prev_prev_prev_prev=0\n\
    \    local vowel_pos_next_next_next_next_next_next_next_next_next_next_next=0\n\
    \    local vowel_pos_prev_prev_prev_prev_prev_prev_prev_prev_prev_prev_prev_prev=0\n\
    \    local vowel_pos_next_\n}\n\ncandidate() {\n    get_closest_vowel \"$@\"\n\
    }\n\nset -e\nrun_test() {\n    [[ $(candidate \"yogurt\") = \"u\" ]]\n    [[ $(candidate\
    \ \"full\") = \"u\" ]]\n    [[ $(candidate \"easy\") = \"\" ]]\n    [[ $(candidate\
    \ \"eAsy\") = \"\" ]]\n    [[ $(candidate \"ali\") = \"\" ]]\n    [[ $(candidate\
    \ \"bad\") = \"a\" ]]\n    [[ $(candidate \"most\") = \"o\" ]]\n    [[ $(candidate\
    \ \"ab\") = \"\" ]]\n    [[ $(candidate \"ba\") = \"\" ]]\n    [[ $(candidate\
    \ \"quick\") = \"\" ]]\n    [[ $(candidate \"anime\") = \"i\" ]]\n    [[ $(candidate\
    \ \"Asia\") = \"\" ]]\n    [[ $(candidate \"Above\") = \"o\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660002111
- exit_code: 1
  program: "#!/bin/bash\n# You are given a word. Your task is to find the closest\
    \ vowel that stands between \n# two consonants from the right side of the word\
    \ (case sensitive).\n# Vowels in the beginning and ending doesn't count. Return\
    \ empty string if you didn't\n# find any vowel met the above condition. \n# You\
    \ may assume that the given string contains English letter only.\n# Example:\n\
    #\n# $1 is a string\nget_closest_vowel() {\n    local word=$1\n    local word_len=${#word}\n\
    \    local i=0\n    local vowel_pos=0\n    local vowel_pos_prev=0\n    local vowel_pos_next=0\n\
    \    local vowel_pos_prev_next=0\n    local vowel_pos_prev_prev=0\n    local vowel_pos_next_next=0\n\
    \    local vowel_pos_prev_prev_next=0\n    local vowel_pos_prev_next_next=0\n\
    \    local vowel_pos_prev_prev_next_next=0\n    local vowel_pos_prev_prev_next_next_next=0\n\
    \    local vowel_pos_prev_prev_next_next_next_next=0\n    local vowel_pos_prev_prev_next_next_next_next_next=0\n\
    \    local vowel_pos_prev_prev_next_next_next_next_next_next=0\n    local vowel_pos_prev_prev_next_next_next_next_next_next_next=0\n\
    \    local vowel_pos_prev_prev_next_next_next_next_next_next_next_next=0\n   \
    \ local vowel_pos_prev_prev_next_next_next_next_next_next_next_next_next=0\n \
    \   local vowel_pos_prev_prev_next_next_next_next_next_next_next_next_next_next=0\n\
    \    local vowel_pos_prev_prev_next_next_next_next_next_next_next_next_next_next_next=0\n\
    \    local vowel_pos_prev_prev_next_next_next_next_next_next_next_next_next_next_next_next=0\n\
    \    local vowel_pos_prev_prev_next_next_next_next_next_next_next_next_next_next_next_next_next=0\n\
    \    local vowel_pos_prev_prev_next_next_next_next_next_next_next_next_next_next_next_next_next_next=0\n\
    \    local vowel_pos_prev_prev_next_next_next_next_next_next_next_next_next_next_next_\n\
    }\n\ncandidate() {\n    get_closest_vowel \"$@\"\n}\n\nset -e\nrun_test() {\n\
    \    [[ $(candidate \"yogurt\") = \"u\" ]]\n    [[ $(candidate \"full\") = \"\
    u\" ]]\n    [[ $(candidate \"easy\") = \"\" ]]\n    [[ $(candidate \"eAsy\") =\
    \ \"\" ]]\n    [[ $(candidate \"ali\") = \"\" ]]\n    [[ $(candidate \"bad\")\
    \ = \"a\" ]]\n    [[ $(candidate \"most\") = \"o\" ]]\n    [[ $(candidate \"ab\"\
    ) = \"\" ]]\n    [[ $(candidate \"ba\") = \"\" ]]\n    [[ $(candidate \"quick\"\
    ) = \"\" ]]\n    [[ $(candidate \"anime\") = \"i\" ]]\n    [[ $(candidate \"Asia\"\
    ) = \"\" ]]\n    [[ $(candidate \"Above\") = \"o\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660002111
- exit_code: 1
  program: "#!/bin/bash\n# You are given a word. Your task is to find the closest\
    \ vowel that stands between \n# two consonants from the right side of the word\
    \ (case sensitive).\n# Vowels in the beginning and ending doesn't count. Return\
    \ empty string if you didn't\n# find any vowel met the above condition. \n# You\
    \ may assume that the given string contains English letter only.\n# Example:\n\
    #\n# $1 is a string\nget_closest_vowel() {\n    local word=$1\n    local len=${#word}\n\
    \    local i=0\n    local vowel=\"\"\n    local closest_vowel=\"\"\n    local\
    \ closest_vowel_index=0\n    local closest_vowel_distance=0\n    local distance=0\n\
    \    local prev_char=\"\"\n    local curr_char=\"\"\n    local next_char=\"\"\n\
    \    local is_vowel=0\n    local is_prev_consonant=0\n    local is_next_consonant=0\n\
    \    local is_prev_vowel=0\n    local is_next_vowel=0\n    local is_prev_empty=0\n\
    \    local is_next_empty=0\n    local is_prev_consonant_found=0\n    local is_next_consonant_found=0\n\
    \    local is_closest_vowel_found=0\n    local is_closest_vowel_found_prev=0\n\
    \    local is_closest_vowel_found_next=0\n    local is_closest_vowel_found_prev_next=0\n\
    \    local is_closest_vowel_found_prev_next_prev=0\n    local is_closest_vowel_found_prev_next_next=0\n\
    \    local is_closest_vowel_found_prev_next_prev_next=0\n    local is_closest_vowel_found_prev_next_prev_next_prev=0\n\
    \    local is_closest_vowel_found_prev_next_prev_next_next=0\n    local is_closest_vowel_found_prev_next_prev_next_prev_next=0\n\
    \    local is_closest_vowel_found_prev_next_prev_next_prev_next_prev=0\n    local\
    \ is_closest_vowel_found_prev_next_prev_next_prev_next_next=0\n    local is_closest_vowel_found_prev_next_prev_next_prev_next_prev_next=0\n\
    \    local is_clos\n}\n\ncandidate() {\n    get_closest_vowel \"$@\"\n}\n\nset\
    \ -e\nrun_test() {\n    [[ $(candidate \"yogurt\") = \"u\" ]]\n    [[ $(candidate\
    \ \"full\") = \"u\" ]]\n    [[ $(candidate \"easy\") = \"\" ]]\n    [[ $(candidate\
    \ \"eAsy\") = \"\" ]]\n    [[ $(candidate \"ali\") = \"\" ]]\n    [[ $(candidate\
    \ \"bad\") = \"a\" ]]\n    [[ $(candidate \"most\") = \"o\" ]]\n    [[ $(candidate\
    \ \"ab\") = \"\" ]]\n    [[ $(candidate \"ba\") = \"\" ]]\n    [[ $(candidate\
    \ \"quick\") = \"\" ]]\n    [[ $(candidate \"anime\") = \"i\" ]]\n    [[ $(candidate\
    \ \"Asia\") = \"\" ]]\n    [[ $(candidate \"Above\") = \"o\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660002112
- exit_code: 1
  program: "#!/bin/bash\n# You are given a word. Your task is to find the closest\
    \ vowel that stands between \n# two consonants from the right side of the word\
    \ (case sensitive).\n# Vowels in the beginning and ending doesn't count. Return\
    \ empty string if you didn't\n# find any vowel met the above condition. \n# You\
    \ may assume that the given string contains English letter only.\n# Example:\n\
    #\n# $1 is a string\nget_closest_vowel() {\n    local word=$1\n    local word_len=${#word}\n\
    \    local i=0\n    local vowel_pos=0\n    local vowel_pos_prev=0\n    local vowel_pos_next=0\n\
    \    local vowel_pos_prev_next=0\n    local vowel_pos_prev_prev=0\n    local vowel_pos_next_next=0\n\
    \    local vowel_pos_prev_prev_next=0\n    local vowel_pos_prev_next_next=0\n\
    \    local vowel_pos_prev_prev_next_next=0\n    local vowel_pos_prev_prev_next_next_next=0\n\
    \    local vowel_pos_prev_prev_next_next_next_next=0\n    local vowel_pos_prev_prev_next_next_next_next_next=0\n\
    \    local vowel_pos_prev_prev_next_next_next_next_next_next=0\n    local vowel_pos_prev_prev_next_next_next_next_next_next_next=0\n\
    \    local vowel_pos_prev_prev_next_next_next_next_next_next_next_next=0\n   \
    \ local vowel_pos_prev_prev_next_next_next_next_next_next_next_next_next=0\n \
    \   local vowel_pos_prev_prev_next_next_next_next_next_next_next_next_next_next=0\n\
    \    local vowel_pos_prev_prev_next_next_next_next_next_next_next_next_next_next_next=0\n\
    \    local vowel_pos_prev_prev_next_next_next_next_next_next_next_next_next_next_next_next=0\n\
    \    local vowel_pos_prev_prev_next_next_next_next_next_next_next_next_next_next_next_next_next=0\n\
    \    local vowel_pos_prev_prev_next_next_next_next_next_next_next_next_next_next_next_next_next_next=0\n\
    \    local vowel_pos_prev_prev_next_next_next_next_next_next_next_next_next_next_next_\n\
    }\n\ncandidate() {\n    get_closest_vowel \"$@\"\n}\n\nset -e\nrun_test() {\n\
    \    [[ $(candidate \"yogurt\") = \"u\" ]]\n    [[ $(candidate \"full\") = \"\
    u\" ]]\n    [[ $(candidate \"easy\") = \"\" ]]\n    [[ $(candidate \"eAsy\") =\
    \ \"\" ]]\n    [[ $(candidate \"ali\") = \"\" ]]\n    [[ $(candidate \"bad\")\
    \ = \"a\" ]]\n    [[ $(candidate \"most\") = \"o\" ]]\n    [[ $(candidate \"ab\"\
    ) = \"\" ]]\n    [[ $(candidate \"ba\") = \"\" ]]\n    [[ $(candidate \"quick\"\
    ) = \"\" ]]\n    [[ $(candidate \"anime\") = \"i\" ]]\n    [[ $(candidate \"Asia\"\
    ) = \"\" ]]\n    [[ $(candidate \"Above\") = \"o\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660002111
- exit_code: 1
  program: "#!/bin/bash\n# You are given a word. Your task is to find the closest\
    \ vowel that stands between \n# two consonants from the right side of the word\
    \ (case sensitive).\n# Vowels in the beginning and ending doesn't count. Return\
    \ empty string if you didn't\n# find any vowel met the above condition. \n# You\
    \ may assume that the given string contains English letter only.\n# Example:\n\
    #\n# $1 is a string\nget_closest_vowel() {\n    local word=\"$1\"\n    local last_char=\"\
    ${word: -1}\"\n    local first_char=\"${word:0:1}\"\n    local vowel_pattern=\"\
    [aeiou]\"\n    local consonant_pattern=\"[^aeiou]\"\n    local result=\"\"\n \
    \   local i=0\n    local j=0\n    local k=0\n    local l=0\n    local m=0\n  \
    \  local n=0\n    local o=0\n    local p=0\n    local q=0\n    local r=0\n   \
    \ local s=0\n    local t=0\n    local u=0\n    local v=0\n    local w=0\n    local\
    \ x=0\n    local y=0\n    local z=0\n    local a=0\n    local b=0\n    local c=0\n\
    \    local d=0\n    local e=0\n    local f=0\n    local g=0\n    local h=0\n \
    \   local i=0\n    local j=0\n    local k=0\n    local l=0\n    local m=0\n  \
    \  local n=0\n    local o=0\n    local p=0\n    local q=0\n    local r=0\n   \
    \ local s=0\n    local t=0\n    local u=0\n    local v=0\n    local w=0\n    local\
    \ x=0\n    local y=0\n    local z=0\n    local a=0\n    local b=0\n    local c=0\n\
    \    local d=0\n    local e=0\n    local f=0\n    local g=0\n    local h=0\n \
    \   local i=0\n    local j=0\n    local k=0\n    local l=0\n    local m=0\n  \
    \  local n=0\n    local o=0\n    local p=0\n    local q=0\n    local r=0\n   \
    \ local s=0\n    local t=0\n    local u=0\n    local v=0\n    local w=0\n    local\
    \ x=0\n    local y=0\n    local z=0\n    local a=0\n    local b=0\n    local c=0\n\
    \    local d=0\n   \n}\n\ncandidate() {\n    get_closest_vowel \"$@\"\n}\n\nset\
    \ -e\nrun_test() {\n    [[ $(candidate \"yogurt\") = \"u\" ]]\n    [[ $(candidate\
    \ \"full\") = \"u\" ]]\n    [[ $(candidate \"easy\") = \"\" ]]\n    [[ $(candidate\
    \ \"eAsy\") = \"\" ]]\n    [[ $(candidate \"ali\") = \"\" ]]\n    [[ $(candidate\
    \ \"bad\") = \"a\" ]]\n    [[ $(candidate \"most\") = \"o\" ]]\n    [[ $(candidate\
    \ \"ab\") = \"\" ]]\n    [[ $(candidate \"ba\") = \"\" ]]\n    [[ $(candidate\
    \ \"quick\") = \"\" ]]\n    [[ $(candidate \"anime\") = \"i\" ]]\n    [[ $(candidate\
    \ \"Asia\") = \"\" ]]\n    [[ $(candidate \"Above\") = \"o\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660002112
- exit_code: 1
  program: "#!/bin/bash\n# You are given a word. Your task is to find the closest\
    \ vowel that stands between \n# two consonants from the right side of the word\
    \ (case sensitive).\n# Vowels in the beginning and ending doesn't count. Return\
    \ empty string if you didn't\n# find any vowel met the above condition. \n# You\
    \ may assume that the given string contains English letter only.\n# Example:\n\
    #\n# $1 is a string\nget_closest_vowel() {\n    local word=$1\n    local len=${#word}\n\
    \    local i=0\n    local vowel=''\n    local prev=''\n    local next=''\n   \
    \ local vowels='aeiou'\n    local consonants='bcdfghjklmnpqrstvwxyz'\n    local\
    \ found=0\n    local found_vowel=''\n    local found_index=0\n    local found_prev=''\n\
    \    local found_next=''\n    for ((i=0; i<len; i++)); do\n        vowel=${word:$i:1}\n\
    \        if [[ $vowels =~ $vowel ]]; then\n            prev=${word:$((i-1)):1}\n\
    \            next=${word:$((i+1)):1}\n            if [[ $consonants =~ $prev &&\
    \ $consonants =~ $next ]]; then\n                if [[ $found -eq 0 ]]; then\n\
    \                    found=1\n                    found_vowel=$vowel\n       \
    \             found_index=$i\n                    found_prev=$prev\n         \
    \           found_next=$next\n                elif [[ $((i-found_index)) -lt $((found_index-i))\
    \ ]]; then\n                    found_vowel=$vowel\n                    found_index=$i\n\
    \                    found_prev=$prev\n                    found_next=$next\n\
    \                fi\n            fi\n        fi\n    done\n    if [[ $found -eq\
    \ 1 ]]; then\n        echo $found_vowel\n    else\n        echo ''\n    fi\n}\n\
    \ncandidate() {\n    get_closest_vowel \"$@\"\n}\n\nset -e\nrun_test() {\n   \
    \ [[ $(candidate \"yogurt\") = \"u\" ]]\n    [[ $(candidate \"full\") = \"u\"\
    \ ]]\n    [[ $(candidate \"easy\") = \"\" ]]\n    [[ $(candidate \"eAsy\") = \"\
    \" ]]\n    [[ $(candidate \"ali\") = \"\" ]]\n    [[ $(candidate \"bad\") = \"\
    a\" ]]\n    [[ $(candidate \"most\") = \"o\" ]]\n    [[ $(candidate \"ab\") =\
    \ \"\" ]]\n    [[ $(candidate \"ba\") = \"\" ]]\n    [[ $(candidate \"quick\"\
    ) = \"\" ]]\n    [[ $(candidate \"anime\") = \"i\" ]]\n    [[ $(candidate \"Asia\"\
    ) = \"\" ]]\n    [[ $(candidate \"Above\") = \"o\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660002111
- exit_code: 1
  program: "#!/bin/bash\n# You are given a word. Your task is to find the closest\
    \ vowel that stands between \n# two consonants from the right side of the word\
    \ (case sensitive).\n# Vowels in the beginning and ending doesn't count. Return\
    \ empty string if you didn't\n# find any vowel met the above condition. \n# You\
    \ may assume that the given string contains English letter only.\n# Example:\n\
    #\n# $1 is a string\nget_closest_vowel() {\n    local word=$1\n    local word_len=${#word}\n\
    \    local i=0\n    local j=0\n    local k=0\n    local vowel_pos=0\n    local\
    \ vowel_pos_arr=()\n    local vowel_pos_arr_len=0\n    local consonant_pos=0\n\
    \    local consonant_pos_arr=()\n    local consonant_pos_arr_len=0\n    local\
    \ closest_vowel_pos=0\n    local closest_vowel_pos_arr=()\n    local closest_vowel_pos_arr_len=0\n\
    \    local closest_vowel_pos_arr_len_min=0\n    local closest_vowel_pos_arr_len_min_index=0\n\
    \    local closest_vowel_pos_arr_len_min_index_arr=()\n    local closest_vowel_pos_arr_len_min_index_arr_len=0\n\
    \    local closest_vowel_pos_arr_len_min_index_arr_len_min=0\n    local closest_vowel_pos_arr_len_min_index_arr_len_min_index=0\n\
    \    local closest_vowel_pos_arr_len_min_index_arr_len_min_index_arr=()\n    local\
    \ closest_vowel_pos_arr_len_min_index_arr_len_min_index_arr_len=0\n    local closest_vowel_pos_arr_len_min_index_arr_len_min_index_arr_len_min=0\n\
    \    local closest_vowel_pos_arr_len_min_index_arr_len_min_index_arr_len_min_index=0\n\
    \    local closest_vowel_pos_arr_len_min_index_arr_len_min_index_arr_len_min_index_arr=()\n\
    \    local closest_vowel_pos_arr_len_min_index_arr_len_min_index_arr_len_min_index_arr_len=0\n\
    \    local closest_vowel_pos_arr_len_min_index_arr_len_min\n}\n\ncandidate() {\n\
    \    get_closest_vowel \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"\
    yogurt\") = \"u\" ]]\n    [[ $(candidate \"full\") = \"u\" ]]\n    [[ $(candidate\
    \ \"easy\") = \"\" ]]\n    [[ $(candidate \"eAsy\") = \"\" ]]\n    [[ $(candidate\
    \ \"ali\") = \"\" ]]\n    [[ $(candidate \"bad\") = \"a\" ]]\n    [[ $(candidate\
    \ \"most\") = \"o\" ]]\n    [[ $(candidate \"ab\") = \"\" ]]\n    [[ $(candidate\
    \ \"ba\") = \"\" ]]\n    [[ $(candidate \"quick\") = \"\" ]]\n    [[ $(candidate\
    \ \"anime\") = \"i\" ]]\n    [[ $(candidate \"Asia\") = \"\" ]]\n    [[ $(candidate\
    \ \"Above\") = \"o\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660002112
- exit_code: 1
  program: "#!/bin/bash\n# You are given a word. Your task is to find the closest\
    \ vowel that stands between \n# two consonants from the right side of the word\
    \ (case sensitive).\n# Vowels in the beginning and ending doesn't count. Return\
    \ empty string if you didn't\n# find any vowel met the above condition. \n# You\
    \ may assume that the given string contains English letter only.\n# Example:\n\
    #\n# $1 is a string\nget_closest_vowel() {\n    local word=$1\n    local length=${#word}\n\
    \    local i=0\n    local j=0\n    local k=0\n    local vowel_pos=0\n    local\
    \ vowel_pos_arr=()\n    local vowel_pos_arr_len=0\n    local vowel_pos_arr_len_half=0\n\
    \    local vowel_pos_arr_len_half_floor=0\n    local vowel_pos_arr_len_half_ceil=0\n\
    \    local vowel_pos_arr_len_half_floor_diff=0\n    local vowel_pos_arr_len_half_ceil_diff=0\n\
    \    local vowel_pos_arr_len_half_floor_diff_abs=0\n    local vowel_pos_arr_len_half_ceil_diff_abs=0\n\
    \    local vowel_pos_arr_len_half_floor_diff_abs_min=0\n    local vowel_pos_arr_len_half_ceil_diff_abs_min=0\n\
    \    local vowel_pos_arr_len_half_floor_diff_abs_min_pos=0\n    local vowel_pos_arr_len_half_ceil_diff_abs_min_pos=0\n\
    \    local vowel_pos_arr_len_half_floor_diff_abs_min_pos_arr=()\n    local vowel_pos_arr_len_half_ceil_diff_abs_min_pos_arr=()\n\
    \    local vowel_pos_arr_len_half_floor_diff_abs_min_pos_arr_len=0\n    local\
    \ vowel_pos_arr_len_half_ceil_diff_abs_min_pos_arr_len=0\n    local vowel_pos_arr_len_half_floor_diff_abs_min_pos_arr_len_half=0\n\
    \    local vowel_pos_arr_len_half_ceil_diff_abs_min_pos_arr_len_half=0\n    local\
    \ vowel_pos_arr_len_half_floor_diff_abs_min_pos_arr_len_half_floor=0\n    local\
    \ vowel_pos_arr_len_half_ceil_diff_abs_min_pos_arr_len\n}\n\ncandidate() {\n \
    \   get_closest_vowel \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"\
    yogurt\") = \"u\" ]]\n    [[ $(candidate \"full\") = \"u\" ]]\n    [[ $(candidate\
    \ \"easy\") = \"\" ]]\n    [[ $(candidate \"eAsy\") = \"\" ]]\n    [[ $(candidate\
    \ \"ali\") = \"\" ]]\n    [[ $(candidate \"bad\") = \"a\" ]]\n    [[ $(candidate\
    \ \"most\") = \"o\" ]]\n    [[ $(candidate \"ab\") = \"\" ]]\n    [[ $(candidate\
    \ \"ba\") = \"\" ]]\n    [[ $(candidate \"quick\") = \"\" ]]\n    [[ $(candidate\
    \ \"anime\") = \"i\" ]]\n    [[ $(candidate \"Asia\") = \"\" ]]\n    [[ $(candidate\
    \ \"Above\") = \"o\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660002111
- exit_code: 1
  program: "#!/bin/bash\n# You are given a word. Your task is to find the closest\
    \ vowel that stands between \n# two consonants from the right side of the word\
    \ (case sensitive).\n# Vowels in the beginning and ending doesn't count. Return\
    \ empty string if you didn't\n# find any vowel met the above condition. \n# You\
    \ may assume that the given string contains English letter only.\n# Example:\n\
    #\n# $1 is a string\nget_closest_vowel() {\n    local word=$1\n    local length=${#word}\n\
    \    local i=0\n    local j=0\n    local k=0\n    local vowel=\"\"\n    local\
    \ consonant=\"\"\n    local result=\"\"\n    local vowels=\"aeiou\"\n    local\
    \ consonants=\"bcdfghjklmnpqrstvwxyz\"\n    for (( i=0; i<length; i++ )); do\n\
    \        for (( j=0; j<${#vowels}; j++ )); do\n            if [[ ${word:$i:1}\
    \ == ${vowels:$j:1} ]]; then\n                vowel=${word:$i:1}\n           \
    \     for (( k=0; k<${#consonants}; k++ )); do\n                    if [[ ${word:$((i-1)):1}\
    \ == ${consonants:$k:1} ]]; then\n                        consonant=${word:$((i-1)):1}\n\
    \                        result=${vowel}\n                        break\n    \
    \                fi\n                done\n            fi\n        done\n    done\n\
    \    echo $result\n}\n\ncandidate() {\n    get_closest_vowel \"$@\"\n}\n\nset\
    \ -e\nrun_test() {\n    [[ $(candidate \"yogurt\") = \"u\" ]]\n    [[ $(candidate\
    \ \"full\") = \"u\" ]]\n    [[ $(candidate \"easy\") = \"\" ]]\n    [[ $(candidate\
    \ \"eAsy\") = \"\" ]]\n    [[ $(candidate \"ali\") = \"\" ]]\n    [[ $(candidate\
    \ \"bad\") = \"a\" ]]\n    [[ $(candidate \"most\") = \"o\" ]]\n    [[ $(candidate\
    \ \"ab\") = \"\" ]]\n    [[ $(candidate \"ba\") = \"\" ]]\n    [[ $(candidate\
    \ \"quick\") = \"\" ]]\n    [[ $(candidate \"anime\") = \"i\" ]]\n    [[ $(candidate\
    \ \"Asia\") = \"\" ]]\n    [[ $(candidate \"Above\") = \"o\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660002112
- exit_code: 1
  program: "#!/bin/bash\n# You are given a word. Your task is to find the closest\
    \ vowel that stands between \n# two consonants from the right side of the word\
    \ (case sensitive).\n# Vowels in the beginning and ending doesn't count. Return\
    \ empty string if you didn't\n# find any vowel met the above condition. \n# You\
    \ may assume that the given string contains English letter only.\n# Example:\n\
    #\n# $1 is a string\nget_closest_vowel() {\n    local word=$1\n    local word_len=${#word}\n\
    \    local i=0\n    local j=0\n    local vowel_index=0\n    local vowel_index_array=()\n\
    \    local vowel_index_array_len=0\n    local vowel_index_array_last_index=0\n\
    \    local vowel_index_array_last_index_value=0\n    local vowel_index_array_last_index_value_prev=0\n\
    \    local vowel_index_array_last_index_value_prev_prev=0\n    local vowel_index_array_last_index_value_prev_prev_prev=0\n\
    \    local vowel_index_array_last_index_value_prev_prev_prev_prev=0\n    local\
    \ vowel_index_array_last_index_value_prev_prev_prev_prev_prev=0\n    local vowel_index_array_last_index_value_prev_prev_prev_prev_prev_prev=0\n\
    \    local vowel_index_array_last_index_value_prev_prev_prev_prev_prev_prev_prev=0\n\
    \    local vowel_index_array_last_index_value_prev_prev_prev_prev_prev_prev_prev_prev=0\n\
    \    local vowel_index_array_last_index_value_prev_prev_prev_prev_prev_prev_prev_prev_prev=0\n\
    \    local vowel_index_array_last_index_value_prev_prev_prev_prev_prev_prev_prev_prev_prev_prev=0\n\
    \    local vowel_index_array_last_index_value_prev_prev_prev_prev_prev_prev_prev_prev_prev_prev_prev=0\n\
    \    local vowel_index_array_last_index_value_prev_prev_prev_prev_prev_prev_prev_prev_prev_prev_prev_prev=0\n\
    \    local vowel_index_array_last_index_value_prev_prev_prev_prev_prev_prev_prev_prev_prev_prev_prev_prev_prev=0\n\
    \    local vowel_index_array_last_index_value_prev_prev_prev_prev_prev_prev_prev_prev_prev_\n\
    }\n\ncandidate() {\n    get_closest_vowel \"$@\"\n}\n\nset -e\nrun_test() {\n\
    \    [[ $(candidate \"yogurt\") = \"u\" ]]\n    [[ $(candidate \"full\") = \"\
    u\" ]]\n    [[ $(candidate \"easy\") = \"\" ]]\n    [[ $(candidate \"eAsy\") =\
    \ \"\" ]]\n    [[ $(candidate \"ali\") = \"\" ]]\n    [[ $(candidate \"bad\")\
    \ = \"a\" ]]\n    [[ $(candidate \"most\") = \"o\" ]]\n    [[ $(candidate \"ab\"\
    ) = \"\" ]]\n    [[ $(candidate \"ba\") = \"\" ]]\n    [[ $(candidate \"quick\"\
    ) = \"\" ]]\n    [[ $(candidate \"anime\") = \"i\" ]]\n    [[ $(candidate \"Asia\"\
    ) = \"\" ]]\n    [[ $(candidate \"Above\") = \"o\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660002112
- exit_code: 1
  program: "#!/bin/bash\n# You are given a word. Your task is to find the closest\
    \ vowel that stands between \n# two consonants from the right side of the word\
    \ (case sensitive).\n# Vowels in the beginning and ending doesn't count. Return\
    \ empty string if you didn't\n# find any vowel met the above condition. \n# You\
    \ may assume that the given string contains English letter only.\n# Example:\n\
    #\n# $1 is a string\nget_closest_vowel() {\n    local word=$1\n    local result=\"\
    \"\n    local index=0\n    local vowels=\"aeiou\"\n    local consonants=\"bcdfghjklmnpqrstvwxyz\"\
    \n    local last_consonant_index=0\n    local last_vowel_index=0\n    local last_vowel=\"\
    \"\n    local last_consonant=\"\"\n    local current_char=\"\"\n    local current_index=0\n\
    \    local is_vowel=0\n    local is_consonant=0\n    local is_vowel_found=0\n\
    \    local is_consonant_found=0\n    local is_first_char=0\n    local is_last_char=0\n\
    \    local is_first_vowel=0\n    local is_first_consonant=0\n    local is_last_vowel=0\n\
    \    local is_last_consonant=0\n    local is_first_vowel_found=0\n    local is_first_consonant_found=0\n\
    \    local is_last_vowel_found=0\n    local is_last_consonant_found=0\n    local\
    \ is_first_vowel_found=0\n    local is_first_consonant_found=0\n    local is_last_vowel_found=0\n\
    \    local is_last_consonant_found=0\n    local is_first_vowel_found=0\n    local\
    \ is_first_consonant_found=0\n    local is_last_vowel_found=0\n    local is_last_consonant_found=0\n\
    \    local is_first_vowel_found=0\n    local is_first_consonant_found=0\n    local\
    \ is_last_vowel_found=0\n    local is_last_consonant_found=0\n    local is_first_vowel_found=0\n\
    \    local is_first_consonant_found=0\n    local is_last_vowel_found=0\n    local\
    \ is_last_consonant_found=0\n    local is_first_vowel_found=0\n\n}\n\ncandidate()\
    \ {\n    get_closest_vowel \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate\
    \ \"yogurt\") = \"u\" ]]\n    [[ $(candidate \"full\") = \"u\" ]]\n    [[ $(candidate\
    \ \"easy\") = \"\" ]]\n    [[ $(candidate \"eAsy\") = \"\" ]]\n    [[ $(candidate\
    \ \"ali\") = \"\" ]]\n    [[ $(candidate \"bad\") = \"a\" ]]\n    [[ $(candidate\
    \ \"most\") = \"o\" ]]\n    [[ $(candidate \"ab\") = \"\" ]]\n    [[ $(candidate\
    \ \"ba\") = \"\" ]]\n    [[ $(candidate \"quick\") = \"\" ]]\n    [[ $(candidate\
    \ \"anime\") = \"i\" ]]\n    [[ $(candidate \"Asia\") = \"\" ]]\n    [[ $(candidate\
    \ \"Above\") = \"o\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660002112
- exit_code: 1
  program: "#!/bin/bash\n# You are given a word. Your task is to find the closest\
    \ vowel that stands between \n# two consonants from the right side of the word\
    \ (case sensitive).\n# Vowels in the beginning and ending doesn't count. Return\
    \ empty string if you didn't\n# find any vowel met the above condition. \n# You\
    \ may assume that the given string contains English letter only.\n# Example:\n\
    #\n# $1 is a string\nget_closest_vowel() {\n    local word=$1\n    local word_len=${#word}\n\
    \    local vowel_pos=0\n    local vowel_pos_list=()\n    local vowel_pos_list_len=0\n\
    \    local vowel_pos_list_index=0\n    local vowel_pos_list_index_prev=0\n   \
    \ local vowel_pos_list_index_next=0\n    local vowel_pos_list_index_prev_diff=0\n\
    \    local vowel_pos_list_index_next_diff=0\n    local vowel_pos_list_index_diff=0\n\
    \    local vowel_pos_list_index_diff_min=0\n    local vowel_pos_list_index_diff_min_index=0\n\
    \    local vowel_pos_list_index_diff_min_index_prev=0\n    local vowel_pos_list_index_diff_min_index_next=0\n\
    \    local vowel_pos_list_index_diff_min_index_prev_diff=0\n    local vowel_pos_list_index_diff_min_index_next_diff=0\n\
    \    local vowel_pos_list_index_diff_min_index_diff=0\n    local vowel_pos_list_index_diff_min_index_diff_min=0\n\
    \    local vowel_pos_list_index_diff_min_index_diff_min_index=0\n    local vowel_pos_list_index_diff_min_index_diff_min_index_prev=0\n\
    \    local vowel_pos_list_index_diff_min_index_diff_min_index_next=0\n    local\
    \ vowel_pos_list_index_diff_min_index_diff_min_index_prev_diff=0\n    local vowel_pos_list_index_diff_min_index_diff_min_index_next_diff=0\n\
    \    local vowel_pos_list_index_diff_min_index_diff_min_index_diff=0\n    local\
    \ vowel_pos_list_index_diff_min_index_diff_min_index_diff_min=0\n    local vowel_pos_list_index_diff_min_index_diff_min_index_diff_min_index=0\n\
    \    local\n}\n\ncandidate() {\n    get_closest_vowel \"$@\"\n}\n\nset -e\nrun_test()\
    \ {\n    [[ $(candidate \"yogurt\") = \"u\" ]]\n    [[ $(candidate \"full\") =\
    \ \"u\" ]]\n    [[ $(candidate \"easy\") = \"\" ]]\n    [[ $(candidate \"eAsy\"\
    ) = \"\" ]]\n    [[ $(candidate \"ali\") = \"\" ]]\n    [[ $(candidate \"bad\"\
    ) = \"a\" ]]\n    [[ $(candidate \"most\") = \"o\" ]]\n    [[ $(candidate \"ab\"\
    ) = \"\" ]]\n    [[ $(candidate \"ba\") = \"\" ]]\n    [[ $(candidate \"quick\"\
    ) = \"\" ]]\n    [[ $(candidate \"anime\") = \"i\" ]]\n    [[ $(candidate \"Asia\"\
    ) = \"\" ]]\n    [[ $(candidate \"Above\") = \"o\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660002112
- exit_code: 1
  program: "#!/bin/bash\n# You are given a word. Your task is to find the closest\
    \ vowel that stands between \n# two consonants from the right side of the word\
    \ (case sensitive).\n# Vowels in the beginning and ending doesn't count. Return\
    \ empty string if you didn't\n# find any vowel met the above condition. \n# You\
    \ may assume that the given string contains English letter only.\n# Example:\n\
    #\n# $1 is a string\nget_closest_vowel() {\n    local word=\"$1\"\n    local last_char=${word:\
    \ -1}\n    local first_char=${word:0:1}\n    local vowels=\"aeiou\"\n    local\
    \ result=\"\"\n    local char_index=0\n    local char_count=${#word}\n    local\
    \ char=''\n    local char_before=''\n    local char_after=''\n    local char_before_is_vowel=0\n\
    \    local char_after_is_vowel=0\n    local char_is_vowel=0\n    local char_is_consonant=0\n\
    \    local char_before_is_consonant=0\n    local char_after_is_consonant=0\n \
    \   local char_before_is_vowel_or_consonant=0\n    local char_after_is_vowel_or_consonant=0\n\
    \    local char_is_vowel_or_consonant=0\n    local char_before_is_vowel_and_consonant=0\n\
    \    local char_after_is_vowel_and_consonant=0\n    local char_is_vowel_and_consonant=0\n\
    \    local char_before_is_vowel_or_consonant_and_consonant=0\n    local char_after_is_vowel_or_consonant_and_consonant=0\n\
    \    local char_is_vowel_or_consonant_and_consonant=0\n    local char_before_is_vowel_and_consonant_or_consonant=0\n\
    \    local char_after_is_vowel_and_consonant_or_consonant=0\n    local char_is_vowel_and_consonant_or_consonant=0\n\
    \    local char_before_is_vowel_or_consonant_and_consonant_or_consonant=0\n  \
    \  local char_after_is_vowel_or_consonant_and_consonant_or_consonant=0\n    local\
    \ char_is_vow\n}\n\ncandidate() {\n    get_closest_vowel \"$@\"\n}\n\nset -e\n\
    run_test() {\n    [[ $(candidate \"yogurt\") = \"u\" ]]\n    [[ $(candidate \"\
    full\") = \"u\" ]]\n    [[ $(candidate \"easy\") = \"\" ]]\n    [[ $(candidate\
    \ \"eAsy\") = \"\" ]]\n    [[ $(candidate \"ali\") = \"\" ]]\n    [[ $(candidate\
    \ \"bad\") = \"a\" ]]\n    [[ $(candidate \"most\") = \"o\" ]]\n    [[ $(candidate\
    \ \"ab\") = \"\" ]]\n    [[ $(candidate \"ba\") = \"\" ]]\n    [[ $(candidate\
    \ \"quick\") = \"\" ]]\n    [[ $(candidate \"anime\") = \"i\" ]]\n    [[ $(candidate\
    \ \"Asia\") = \"\" ]]\n    [[ $(candidate \"Above\") = \"o\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660002112
- exit_code: 1
  program: "#!/bin/bash\n# You are given a word. Your task is to find the closest\
    \ vowel that stands between \n# two consonants from the right side of the word\
    \ (case sensitive).\n# Vowels in the beginning and ending doesn't count. Return\
    \ empty string if you didn't\n# find any vowel met the above condition. \n# You\
    \ may assume that the given string contains English letter only.\n# Example:\n\
    #\n# $1 is a string\nget_closest_vowel() {\n    local word=$1\n    local word_len=${#word}\n\
    \    local i=0\n    local j=0\n    local found=0\n    local closest_vowel=\"\"\
    \n    local closest_vowel_index=0\n    local closest_vowel_distance=0\n    local\
    \ vowels=\"aeiou\"\n    local consonants=\"bcdfghjklmnpqrstvwxyz\"\n    local\
    \ cur_char=\"\"\n    local cur_char_index=0\n    local cur_char_distance=0\n \
    \   local cur_char_is_vowel=0\n    local cur_char_is_consonant=0\n    local cur_char_is_vowel_or_consonant=0\n\
    \    local cur_char_is_vowel_or_consonant_prev=0\n    local cur_char_is_vowel_or_consonant_next=0\n\
    \    local cur_char_is_vowel_or_consonant_prev_next=0\n    local cur_char_is_vowel_or_consonant_prev_prev=0\n\
    \    local cur_char_is_vowel_or_consonant_next_next=0\n    local cur_char_is_vowel_or_consonant_prev_prev_next=0\n\
    \    local cur_char_is_vowel_or_consonant_prev_next_next=0\n    local cur_char_is_vowel_or_consonant_prev_prev_next_next=0\n\
    \    local cur_char_is_vowel_or_consonant_prev_prev_next_next_next=0\n    local\
    \ cur_char_is_vowel_or_consonant_prev_prev_next_next_next_next=0\n    local cur_char_is_vowel_or_consonant_prev_prev_next_next_next_next_next=0\n\
    \    local cur_char_is_vowel_or_consonant_prev_prev_next_next_next_next_next_next=0\n\
    \    local cur_char_is_v\n}\n\ncandidate() {\n    get_closest_vowel \"$@\"\n}\n\
    \nset -e\nrun_test() {\n    [[ $(candidate \"yogurt\") = \"u\" ]]\n    [[ $(candidate\
    \ \"full\") = \"u\" ]]\n    [[ $(candidate \"easy\") = \"\" ]]\n    [[ $(candidate\
    \ \"eAsy\") = \"\" ]]\n    [[ $(candidate \"ali\") = \"\" ]]\n    [[ $(candidate\
    \ \"bad\") = \"a\" ]]\n    [[ $(candidate \"most\") = \"o\" ]]\n    [[ $(candidate\
    \ \"ab\") = \"\" ]]\n    [[ $(candidate \"ba\") = \"\" ]]\n    [[ $(candidate\
    \ \"quick\") = \"\" ]]\n    [[ $(candidate \"anime\") = \"i\" ]]\n    [[ $(candidate\
    \ \"Asia\") = \"\" ]]\n    [[ $(candidate \"Above\") = \"o\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660002112
- exit_code: 2
  program: "#!/bin/bash\n# You are given a word. Your task is to find the closest\
    \ vowel that stands between \n# two consonants from the right side of the word\
    \ (case sensitive).\n# Vowels in the beginning and ending doesn't count. Return\
    \ empty string if you didn't\n# find any vowel met the above condition. \n# You\
    \ may assume that the given string contains English letter only.\n# Example:\n\
    #\n# $1 is a string\nget_closest_vowel() {\n    local word=$1\n    local word_len=${#word}\n\
    \    local i\n    local j\n    local k\n    local vowels=\"aeiou\"\n    local\
    \ consonants=\"bcdfghjklmnpqrstvwxyz\"\n    local closest_vowel=\"\"\n    local\
    \ closest_vowel_index=0\n    local closest_vowel_distance=0\n    local current_vowel_index=0\n\
    \    local current_vowel_distance=0\n    local current_consonant_index=0\n   \
    \ local current_consonant_distance=0\n    local current_char\n    local current_char_index\n\
    \    local current_char_distance\n\n    for ((i=0; i<word_len; i++)); do\n   \
    \     current_char=${word:$i:1}\n        current_char_index=$i\n        current_char_distance=$((word_len\
    \ - i))\n        if [[ $vowels =~ $current_char ]]; then\n            current_vowel_index=$current_char_index\n\
    \            current_vowel_distance=$current_char_distance\n            for ((j=i+1;\
    \ j<word_len; j++)); do\n                current_char=${word:$j:1}\n         \
    \       current_char_index=$j\n                current_char_distance=$((word_len\
    \ - j))\n                if [[ $consonants =~ $current_char ]]; then\n       \
    \             current_consonant_index=$current_char_index\n                  \
    \  current_consonant_distance=$current_char_distance\n                    for\
    \ ((k=j+1; k<word_len; k++)); do\n                        current_char=${word:$k:1}\n\
    \                        current_char_index=$k\n                        current_char_distance=$((word_len\
    \ - k))\n                        if [[ $vowels =~ $current_char ]]; then\n   \
    \                         if [[ $current_vowel_distance -gt $current_char_distance\
    \ ]]; then\n                                current_vowel_index=$current_char_index\n\
    \                                current_vowel_distance=$current_char_distance\n\
    \                            fi\n                        fi\n                \
    \    done\n}\n\ncandidate() {\n    get_closest_vowel \"$@\"\n}\n\nset -e\nrun_test()\
    \ {\n    [[ $(candidate \"yogurt\") = \"u\" ]]\n    [[ $(candidate \"full\") =\
    \ \"u\" ]]\n    [[ $(candidate \"easy\") = \"\" ]]\n    [[ $(candidate \"eAsy\"\
    ) = \"\" ]]\n    [[ $(candidate \"ali\") = \"\" ]]\n    [[ $(candidate \"bad\"\
    ) = \"a\" ]]\n    [[ $(candidate \"most\") = \"o\" ]]\n    [[ $(candidate \"ab\"\
    ) = \"\" ]]\n    [[ $(candidate \"ba\") = \"\" ]]\n    [[ $(candidate \"quick\"\
    ) = \"\" ]]\n    [[ $(candidate \"anime\") = \"i\" ]]\n    [[ $(candidate \"Asia\"\
    ) = \"\" ]]\n    [[ $(candidate \"Above\") = \"o\" ]]\n}\n\nrun_test"
  status: SyntaxError
  stderr: '/tmp/tmprogkfubv.sh: line 54: syntax error near unexpected token `}''

    /tmp/tmprogkfubv.sh: line 54: `}''

    '
  stdout: ''
  timestamp: 1660002112
- exit_code: 1
  program: "#!/bin/bash\n# You are given a word. Your task is to find the closest\
    \ vowel that stands between \n# two consonants from the right side of the word\
    \ (case sensitive).\n# Vowels in the beginning and ending doesn't count. Return\
    \ empty string if you didn't\n# find any vowel met the above condition. \n# You\
    \ may assume that the given string contains English letter only.\n# Example:\n\
    #\n# $1 is a string\nget_closest_vowel() {\n    local word=\"$1\"\n    local vowels=\"\
    a e i o u\"\n    local result=\"\"\n    local i=0\n    local j=0\n    local k=0\n\
    \    local l=0\n    local m=0\n    local n=0\n    local o=0\n    local p=0\n \
    \   local q=0\n    local r=0\n    local s=0\n    local t=0\n    local u=0\n  \
    \  local v=0\n    local w=0\n    local x=0\n    local y=0\n    local z=0\n   \
    \ local a=0\n    local e=0\n    local i=0\n    local o=0\n    local u=0\n    local\
    \ length=${#word}\n    local last_char=${word:length-1:1}\n    local first_char=${word:0:1}\n\
    \    local second_char=${word:1:1}\n    local third_char=${word:2:1}\n    local\
    \ fourth_char=${word:3:1}\n    local fifth_char=${word:4:1}\n    local sixth_char=${word:5:1}\n\
    \    local seventh_char=${word:6:1}\n    local eighth_char=${word:7:1}\n    local\
    \ ninth_char=${word:8:1}\n    local tenth_char=${word:9:1}\n    local eleventh_char=${word:10:1}\n\
    \    local twelfth_char=${word:11:1}\n    local thirteenth_char=${word:12:1}\n\
    \    local fourteenth_char=${word:13:1}\n    local fifteenth_char=${word:14:1}\n\
    \    local sixteenth_char=${word:15:1}\n    local seventeenth_char=${word:16:1}\n\
    \    local eighteenth_char=${word:17:1}\n    local nineteenth_char=${word:18:1}\n\
    \    local twentieth_char=${word:19:1}\n    local twentyfirst_char=${word:20:1}\n\
    \    local twentysecond_char=${word:21:1}\n    local twentythird_\n}\n\ncandidate()\
    \ {\n    get_closest_vowel \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate\
    \ \"yogurt\") = \"u\" ]]\n    [[ $(candidate \"full\") = \"u\" ]]\n    [[ $(candidate\
    \ \"easy\") = \"\" ]]\n    [[ $(candidate \"eAsy\") = \"\" ]]\n    [[ $(candidate\
    \ \"ali\") = \"\" ]]\n    [[ $(candidate \"bad\") = \"a\" ]]\n    [[ $(candidate\
    \ \"most\") = \"o\" ]]\n    [[ $(candidate \"ab\") = \"\" ]]\n    [[ $(candidate\
    \ \"ba\") = \"\" ]]\n    [[ $(candidate \"quick\") = \"\" ]]\n    [[ $(candidate\
    \ \"anime\") = \"i\" ]]\n    [[ $(candidate \"Asia\") = \"\" ]]\n    [[ $(candidate\
    \ \"Above\") = \"o\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660002112
- exit_code: 2
  program: "#!/bin/bash\n# You are given a word. Your task is to find the closest\
    \ vowel that stands between \n# two consonants from the right side of the word\
    \ (case sensitive).\n# Vowels in the beginning and ending doesn't count. Return\
    \ empty string if you didn't\n# find any vowel met the above condition. \n# You\
    \ may assume that the given string contains English letter only.\n# Example:\n\
    #\n# $1 is a string\nget_closest_vowel() {\n    local word=$1\n    local word_len=${#word}\n\
    \    local i=0\n    local result=\"\"\n    local char=\"\"\n    local last_char=\"\
    \"\n    local last_vowel=\"\"\n    local last_vowel_index=0\n    local last_consonant=\"\
    \"\n    local last_consonant_index=0\n    local vowel_index=0\n    local consonant_index=0\n\
    \    local vowel_found=0\n    local consonant_found=0\n    local vowel_list=\"\
    aeiou\"\n    local consonant_list=\"bcdfghjklmnpqrstvwxyz\"\n    local vowel_list_len=${#vowel_list}\n\
    \    local consonant_list_len=${#consonant_list}\n    local vowel_index=0\n  \
    \  local consonant_index=0\n    local vowel_found=0\n    local consonant_found=0\n\
    \    local vowel_char=\"\"\n    local consonant_char=\"\"\n    local vowel_char_index=0\n\
    \    local consonant_char_index=0\n    local vowel_char_found=0\n    local consonant_char_found=0\n\
    \    local vowel_char_list=\"aeiou\"\n    local consonant_char_list=\"bcdfghjklmnpqrstvwxyz\"\
    \n    local vowel_char_list_len=${#vowel_char_list}\n    local consonant_char_list_len=${#consonant_char_list}\n\
    \    local vowel_char_index=0\n    local consonant_char_index=0\n    local vowel_char_found=0\n\
    \    local consonant_char_found=0\n    local vowel_char=\"\"\n    local consonant_char=\"\
    \"\n    local vowel_char_index=0\n    local consonant_char_index=0\n    local\
    \ vowel_char_found=0\n    local consonant_char_found=0\n    local vowel_char_list=\"\
    aeiou\"\n    local consonant_char_list=\"bcdfghjklmnpqrstvwxyz\"\n    local vowel_char_list_len=${#vowel_char\n\
    }\n\ncandidate() {\n    get_closest_vowel \"$@\"\n}\n\nset -e\nrun_test() {\n\
    \    [[ $(candidate \"yogurt\") = \"u\" ]]\n    [[ $(candidate \"full\") = \"\
    u\" ]]\n    [[ $(candidate \"easy\") = \"\" ]]\n    [[ $(candidate \"eAsy\") =\
    \ \"\" ]]\n    [[ $(candidate \"ali\") = \"\" ]]\n    [[ $(candidate \"bad\")\
    \ = \"a\" ]]\n    [[ $(candidate \"most\") = \"o\" ]]\n    [[ $(candidate \"ab\"\
    ) = \"\" ]]\n    [[ $(candidate \"ba\") = \"\" ]]\n    [[ $(candidate \"quick\"\
    ) = \"\" ]]\n    [[ $(candidate \"anime\") = \"i\" ]]\n    [[ $(candidate \"Asia\"\
    ) = \"\" ]]\n    [[ $(candidate \"Above\") = \"o\" ]]\n}\n\nrun_test"
  status: SyntaxError
  stderr: '/tmp/tmpngis39bh.sh: line 80: syntax error: unexpected end of file

    '
  stdout: ''
  timestamp: 1660002112
- exit_code: 1
  program: "#!/bin/bash\n# You are given a word. Your task is to find the closest\
    \ vowel that stands between \n# two consonants from the right side of the word\
    \ (case sensitive).\n# Vowels in the beginning and ending doesn't count. Return\
    \ empty string if you didn't\n# find any vowel met the above condition. \n# You\
    \ may assume that the given string contains English letter only.\n# Example:\n\
    #\n# $1 is a string\nget_closest_vowel() {\n    local word=$1\n    local length=${#word}\n\
    \    local i=0\n    local vowel_index=0\n    local vowel_char=''\n    local vowel_char_prev=''\n\
    \    local vowel_char_next=''\n    local vowel_char_prev_index=0\n    local vowel_char_next_index=0\n\
    \    local vowel_char_prev_distance=0\n    local vowel_char_next_distance=0\n\
    \    local vowel_char_distance=0\n    local vowel_char_closest=''\n    local vowel_char_closest_index=0\n\
    \    local vowel_char_closest_distance=0\n    local vowel_char_closest_prev=''\n\
    \    local vowel_char_closest_next=''\n    local vowel_char_closest_prev_index=0\n\
    \    local vowel_char_closest_next_index=0\n    local vowel_char_closest_prev_distance=0\n\
    \    local vowel_char_closest_next_distance=0\n    local vowel_char_closest_distance=0\n\
    \    local vowel_char_closest_distance_prev=0\n    local vowel_char_closest_distance_next=0\n\
    \    local vowel_char_closest_distance_prev_index=0\n    local vowel_char_closest_distance_next_index=0\n\
    \    local vowel_char_closest_distance_prev_distance=0\n    local vowel_char_closest_distance_next_distance=0\n\
    \    local vowel_char_closest_distance_prev_distance_index=0\n    local vowel_char_closest_distance_next_distance_index=0\n\
    \    local vowel_char_closest_distance_prev_distance_distance=0\n    local vowel_char_closest_distance_next_distance_distance=0\n\
    \    local vowel_char_closest_distance_prev_distance_distance_index=0\n    local\
    \ vowel_char_closest_distance_next_distance_distance_index=0\n    local vowel_char_closest_distance_prev_distance_distance_distance=0\n\
    \n}\n\ncandidate() {\n    get_closest_vowel \"$@\"\n}\n\nset -e\nrun_test() {\n\
    \    [[ $(candidate \"yogurt\") = \"u\" ]]\n    [[ $(candidate \"full\") = \"\
    u\" ]]\n    [[ $(candidate \"easy\") = \"\" ]]\n    [[ $(candidate \"eAsy\") =\
    \ \"\" ]]\n    [[ $(candidate \"ali\") = \"\" ]]\n    [[ $(candidate \"bad\")\
    \ = \"a\" ]]\n    [[ $(candidate \"most\") = \"o\" ]]\n    [[ $(candidate \"ab\"\
    ) = \"\" ]]\n    [[ $(candidate \"ba\") = \"\" ]]\n    [[ $(candidate \"quick\"\
    ) = \"\" ]]\n    [[ $(candidate \"anime\") = \"i\" ]]\n    [[ $(candidate \"Asia\"\
    ) = \"\" ]]\n    [[ $(candidate \"Above\") = \"o\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660002112
- exit_code: 1
  program: "#!/bin/bash\n# You are given a word. Your task is to find the closest\
    \ vowel that stands between \n# two consonants from the right side of the word\
    \ (case sensitive).\n# Vowels in the beginning and ending doesn't count. Return\
    \ empty string if you didn't\n# find any vowel met the above condition. \n# You\
    \ may assume that the given string contains English letter only.\n# Example:\n\
    #\n# $1 is a string\nget_closest_vowel() {\n  local word=$1\n  local word_len=${#word}\n\
    \  local i\n  local j\n  local k\n  local vowel\n  local consonant\n  local found_vowel\n\
    \  local found_consonant\n  local found_vowel_index\n  local found_consonant_index\n\
    \  local closest_vowel\n  local closest_vowel_index\n  local closest_vowel_distance\n\
    \n  for ((i=0; i<word_len; i++)); do\n    vowel=${word:i:1}\n    if [[ $vowel\
    \ =~ [aeiou] ]]; then\n      found_vowel=$vowel\n      found_vowel_index=$i\n\
    \      break\n    fi\n  done\n\n  if [[ -z $found_vowel ]]; then\n    echo \"\"\
    \n    return\n  fi\n\n  for ((j=word_len-1; j>=0; j--)); do\n    consonant=${word:j:1}\n\
    \    if [[ ! $consonant =~ [aeiou] ]]; then\n      found_consonant=$consonant\n\
    \      found_consonant_index=$j\n      break\n    fi\n  done\n\n  if [[ -z $found_consonant\
    \ ]]; then\n    echo \"\"\n    return\n  fi\n\n  closest_vowel=$found_vowel\n\
    \  closest_vowel_index=$found_vowel_index\n  closest_vowel_distance=$((found_consonant_index-found_vowel_index))\n\
    \n  for ((k=found_vowel_index+1; k<found_consonant_index; k++)); do\n    vowel=${word:k:1}\n\
    \    if [[ $vowel =~ [aeiou] ]]; then\n      if [[ $((found_consonant_index-k))\
    \ -lt $closest_vowel_distance ]]; then\n        closest_vowel=$vowel\n       \
    \ closest_vowel_index=$k\n        closest_vowel_distance=$((found_consonant_index-k))\n\
    \      fi\n    fi\n  done\n}\n\ncandidate() {\n    get_closest_vowel \"$@\"\n\
    }\n\nset -e\nrun_test() {\n    [[ $(candidate \"yogurt\") = \"u\" ]]\n    [[ $(candidate\
    \ \"full\") = \"u\" ]]\n    [[ $(candidate \"easy\") = \"\" ]]\n    [[ $(candidate\
    \ \"eAsy\") = \"\" ]]\n    [[ $(candidate \"ali\") = \"\" ]]\n    [[ $(candidate\
    \ \"bad\") = \"a\" ]]\n    [[ $(candidate \"most\") = \"o\" ]]\n    [[ $(candidate\
    \ \"ab\") = \"\" ]]\n    [[ $(candidate \"ba\") = \"\" ]]\n    [[ $(candidate\
    \ \"quick\") = \"\" ]]\n    [[ $(candidate \"anime\") = \"i\" ]]\n    [[ $(candidate\
    \ \"Asia\") = \"\" ]]\n    [[ $(candidate \"Above\") = \"o\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660002112
- exit_code: 1
  program: "#!/bin/bash\n# You are given a word. Your task is to find the closest\
    \ vowel that stands between \n# two consonants from the right side of the word\
    \ (case sensitive).\n# Vowels in the beginning and ending doesn't count. Return\
    \ empty string if you didn't\n# find any vowel met the above condition. \n# You\
    \ may assume that the given string contains English letter only.\n# Example:\n\
    #\n# $1 is a string\nget_closest_vowel() {\n    local word=$1\n    local len=${#word}\n\
    \    local i=0\n    local j=0\n    local k=0\n    local l=0\n    local m=0\n \
    \   local n=0\n    local o=0\n    local p=0\n    local q=0\n    local r=0\n  \
    \  local s=0\n    local t=0\n    local u=0\n    local v=0\n    local w=0\n   \
    \ local x=0\n    local y=0\n    local z=0\n    local a=0\n    local e=0\n    local\
    \ i=0\n    local o=0\n    local u=0\n    local vowel=0\n    local consonant=0\n\
    \    local result=\"\"\n    local vowels=\"aeiou\"\n    local consonants=\"bcdfghjklmnpqrstvwxyz\"\
    \n    local vowel_index=0\n    local consonant_index=0\n    local vowel_count=0\n\
    \    local consonant_count=0\n    local vowel_pos=0\n    local consonant_pos=0\n\
    \    local vowel_pos_array=()\n    local consonant_pos_array=()\n    local vowel_pos_count=0\n\
    \    local consonant_pos_count=0\n    local vowel_pos_index=0\n    local consonant_pos_index=0\n\
    \    local vowel_pos_array_count=0\n    local consonant_pos_array_count=0\n  \
    \  local vowel_pos_array_index=0\n    local consonant_pos_array_index=0\n    local\
    \ vowel_pos_array_index_count=0\n    local consonant_pos_array_index_count=0\n\
    \    local vowel_pos_array_index_index=0\n    local consonant_pos_array_index_index=0\n\
    \    local vowel_pos_array_index_index_count=0\n    local consonant_pos_array_index_index_count=0\n\
    \    local vowel_pos_array_index_index_index=0\n    local consonant_pos_array_index_index_index=0\n\
    \    local vowel_pos_array_index_index_index_count=0\n    local conson\n}\n\n\
    candidate() {\n    get_closest_vowel \"$@\"\n}\n\nset -e\nrun_test() {\n    [[\
    \ $(candidate \"yogurt\") = \"u\" ]]\n    [[ $(candidate \"full\") = \"u\" ]]\n\
    \    [[ $(candidate \"easy\") = \"\" ]]\n    [[ $(candidate \"eAsy\") = \"\" ]]\n\
    \    [[ $(candidate \"ali\") = \"\" ]]\n    [[ $(candidate \"bad\") = \"a\" ]]\n\
    \    [[ $(candidate \"most\") = \"o\" ]]\n    [[ $(candidate \"ab\") = \"\" ]]\n\
    \    [[ $(candidate \"ba\") = \"\" ]]\n    [[ $(candidate \"quick\") = \"\" ]]\n\
    \    [[ $(candidate \"anime\") = \"i\" ]]\n    [[ $(candidate \"Asia\") = \"\"\
    \ ]]\n    [[ $(candidate \"Above\") = \"o\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660002112
- exit_code: 1
  program: "#!/bin/bash\n# You are given a word. Your task is to find the closest\
    \ vowel that stands between \n# two consonants from the right side of the word\
    \ (case sensitive).\n# Vowels in the beginning and ending doesn't count. Return\
    \ empty string if you didn't\n# find any vowel met the above condition. \n# You\
    \ may assume that the given string contains English letter only.\n# Example:\n\
    #\n# $1 is a string\nget_closest_vowel() {\n    local word=$1\n    local len=${#word}\n\
    \    local i=0\n    local vowel=''\n    local closest_vowel=''\n    local closest_vowel_index=0\n\
    \    local closest_vowel_distance=0\n    local vowel_index=0\n    local vowel_distance=0\n\
    \    local is_vowel=0\n    local is_consonant=0\n    local is_closest_vowel_found=0\n\
    \    local is_vowel_found=0\n    local is_consonant_found=0\n    local is_first_char_vowel=0\n\
    \    local is_last_char_vowel=0\n    local is_first_char_consonant=0\n    local\
    \ is_last_char_consonant=0\n    local is_first_char_vowel_found=0\n    local is_last_char_vowel_found=0\n\
    \    local is_first_char_consonant_found=0\n    local is_last_char_consonant_found=0\n\
    \    local is_first_char_vowel_found=0\n    local is_last_char_vowel_found=0\n\
    \    local is_first_char_consonant_found=0\n    local is_last_char_consonant_found=0\n\
    \    local is_first_char_vowel_found=0\n    local is_last_char_vowel_found=0\n\
    \    local is_first_char_consonant_found=0\n    local is_last_char_consonant_found=0\n\
    \    local is_first_char_vowel_found=0\n    local is_last_char_vowel_found=0\n\
    \    local is_first_char_consonant_found=0\n    local is_last_char_consonant_found=0\n\
    \    local is_first_char_vowel_found=0\n    local is_last_char_vowel_found=0\n\
    \    local is_first_char_consonant_found=0\n    local is_last_char_consonant_found=\n\
    }\n\ncandidate() {\n    get_closest_vowel \"$@\"\n}\n\nset -e\nrun_test() {\n\
    \    [[ $(candidate \"yogurt\") = \"u\" ]]\n    [[ $(candidate \"full\") = \"\
    u\" ]]\n    [[ $(candidate \"easy\") = \"\" ]]\n    [[ $(candidate \"eAsy\") =\
    \ \"\" ]]\n    [[ $(candidate \"ali\") = \"\" ]]\n    [[ $(candidate \"bad\")\
    \ = \"a\" ]]\n    [[ $(candidate \"most\") = \"o\" ]]\n    [[ $(candidate \"ab\"\
    ) = \"\" ]]\n    [[ $(candidate \"ba\") = \"\" ]]\n    [[ $(candidate \"quick\"\
    ) = \"\" ]]\n    [[ $(candidate \"anime\") = \"i\" ]]\n    [[ $(candidate \"Asia\"\
    ) = \"\" ]]\n    [[ $(candidate \"Above\") = \"o\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660002112
- exit_code: 1
  program: "#!/bin/bash\n# You are given a word. Your task is to find the closest\
    \ vowel that stands between \n# two consonants from the right side of the word\
    \ (case sensitive).\n# Vowels in the beginning and ending doesn't count. Return\
    \ empty string if you didn't\n# find any vowel met the above condition. \n# You\
    \ may assume that the given string contains English letter only.\n# Example:\n\
    #\n# $1 is a string\nget_closest_vowel() {\n  local word=$1\n  local word_len=${#word}\n\
    \  local i=0\n  local last_consonant_index=0\n  local last_vowel_index=0\n  local\
    \ closest_vowel_index=0\n  local closest_vowel=''\n  local is_vowel=0\n  local\
    \ is_consonant=0\n  local is_last_vowel=0\n  local is_last_consonant=0\n  local\
    \ is_closest_vowel=0\n  local is_closest_consonant=0\n  local is_closest_vowel_found=0\n\
    \  local is_last_vowel_found=0\n  local is_last_consonant_found=0\n  local is_closest_consonant_found=0\n\
    \  local is_closest_vowel_found=0\n  local is_closest_vowel_found=0\n  local is_closest_vowel_found=0\n\
    \  local is_closest_vowel_found=0\n  local is_closest_vowel_found=0\n  local is_closest_vowel_found=0\n\
    \  local is_closest_vowel_found=0\n  local is_closest_vowel_found=0\n  local is_closest_vowel_found=0\n\
    \  local is_closest_vowel_found=0\n  local is_closest_vowel_found=0\n  local is_closest_vowel_found=0\n\
    \  local is_closest_vowel_found=0\n  local is_closest_vowel_found=0\n  local is_closest_vowel_found=0\n\
    \  local is_closest_vowel_found=0\n  local is_closest_vowel_found=0\n  local is_closest_vowel_found=0\n\
    \  local is_closest_vowel_found=0\n  local is_clos\n}\n\ncandidate() {\n    get_closest_vowel\
    \ \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"yogurt\") = \"u\" ]]\n\
    \    [[ $(candidate \"full\") = \"u\" ]]\n    [[ $(candidate \"easy\") = \"\"\
    \ ]]\n    [[ $(candidate \"eAsy\") = \"\" ]]\n    [[ $(candidate \"ali\") = \"\
    \" ]]\n    [[ $(candidate \"bad\") = \"a\" ]]\n    [[ $(candidate \"most\") =\
    \ \"o\" ]]\n    [[ $(candidate \"ab\") = \"\" ]]\n    [[ $(candidate \"ba\") =\
    \ \"\" ]]\n    [[ $(candidate \"quick\") = \"\" ]]\n    [[ $(candidate \"anime\"\
    ) = \"i\" ]]\n    [[ $(candidate \"Asia\") = \"\" ]]\n    [[ $(candidate \"Above\"\
    ) = \"o\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660002112
- exit_code: 1
  program: "#!/bin/bash\n# You are given a word. Your task is to find the closest\
    \ vowel that stands between \n# two consonants from the right side of the word\
    \ (case sensitive).\n# Vowels in the beginning and ending doesn't count. Return\
    \ empty string if you didn't\n# find any vowel met the above condition. \n# You\
    \ may assume that the given string contains English letter only.\n# Example:\n\
    #\n# $1 is a string\nget_closest_vowel() {\n    local word=$1\n    local word_len=${#word}\n\
    \    local i=0\n    local j=0\n    local k=0\n    local vowel_pos=0\n    local\
    \ vowel_pos_arr=()\n    local vowel_pos_len=0\n    local vowel_pos_arr_len=0\n\
    \    local closest_vowel_pos=0\n    local closest_vowel=''\n    local is_vowel=0\n\
    \    local is_consonant=0\n    local is_vowel_found=0\n    local is_consonant_found=0\n\
    \    local is_vowel_found_before_consonant=0\n    local is_consonant_found_before_vowel=0\n\
    \    local is_vowel_found_after_consonant=0\n    local is_consonant_found_after_vowel=0\n\
    \    local is_vowel_found_before_consonant_after_vowel=0\n    local is_consonant_found_before_vowel_after_consonant=0\n\
    \    local is_vowel_found_after_consonant_before_vowel=0\n    local is_consonant_found_after_vowel_before_consonant=0\n\
    \    local is_vowel_found_before_consonant_after_vowel_before_consonant=0\n  \
    \  local is_consonant_found_before_vowel_after_consonant_before_vowel=0\n    local\
    \ is_vowel_found_after_consonant_before_vowel_after_consonant=0\n    local is_consonant_found_after_vowel_before_consonant_after_vowel=0\n\
    \    local is_vowel_found_before_consonant_after_vowel_before_consonant_after_vowel=0\n\
    \    local is_consonant_found_before_vowel_after_consonant_before_vowel_after_consonant=0\n\
    \    local is_vowel_found_\n}\n\ncandidate() {\n    get_closest_vowel \"$@\"\n\
    }\n\nset -e\nrun_test() {\n    [[ $(candidate \"yogurt\") = \"u\" ]]\n    [[ $(candidate\
    \ \"full\") = \"u\" ]]\n    [[ $(candidate \"easy\") = \"\" ]]\n    [[ $(candidate\
    \ \"eAsy\") = \"\" ]]\n    [[ $(candidate \"ali\") = \"\" ]]\n    [[ $(candidate\
    \ \"bad\") = \"a\" ]]\n    [[ $(candidate \"most\") = \"o\" ]]\n    [[ $(candidate\
    \ \"ab\") = \"\" ]]\n    [[ $(candidate \"ba\") = \"\" ]]\n    [[ $(candidate\
    \ \"quick\") = \"\" ]]\n    [[ $(candidate \"anime\") = \"i\" ]]\n    [[ $(candidate\
    \ \"Asia\") = \"\" ]]\n    [[ $(candidate \"Above\") = \"o\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660002112
- exit_code: 1
  program: "#!/bin/bash\n# You are given a word. Your task is to find the closest\
    \ vowel that stands between \n# two consonants from the right side of the word\
    \ (case sensitive).\n# Vowels in the beginning and ending doesn't count. Return\
    \ empty string if you didn't\n# find any vowel met the above condition. \n# You\
    \ may assume that the given string contains English letter only.\n# Example:\n\
    #\n# $1 is a string\nget_closest_vowel() {\n    local word=$1\n    local word_len=${#word}\n\
    \    local last_char=${word:word_len-1:1}\n    local first_char=${word:0:1}\n\
    \    local result=\"\"\n    local i=0\n    local j=0\n    local k=0\n    local\
    \ l=0\n    local m=0\n    local n=0\n    local o=0\n    local p=0\n    local q=0\n\
    \    local r=0\n    local s=0\n    local t=0\n    local u=0\n    local v=0\n \
    \   local w=0\n    local x=0\n    local y=0\n    local z=0\n    local a=0\n  \
    \  local e=0\n    local i=0\n    local o=0\n    local u=0\n    local vowel_index=0\n\
    \    local consonant_index=0\n    local vowel_index_arr=()\n    local consonant_index_arr=()\n\
    \    local vowel_index_arr_len=0\n    local consonant_index_arr_len=0\n    local\
    \ vowel_index_arr_last_index=0\n    local consonant_index_arr_last_index=0\n \
    \   local vowel_index_arr_last_index_value=0\n    local consonant_index_arr_last_index_value=0\n\
    \    local vowel_index_arr_last_index_value_plus_one=0\n    local consonant_index_arr_last_index_value_plus_one=0\n\
    \    local vowel_index_arr_last_index_value_plus_one_char=0\n    local consonant_index_arr_last_index_value_plus_one_char=0\n\
    \    local vowel_index_arr_last_index_value_plus_one_char_is_vowel=0\n    local\
    \ consonant_index_arr_last_index_value_plus_one_char_is_vowel=0\n    local vowel_index_arr_last_index_value_plus_one_char_is_consonant=0\n\
    \    local consonant_index_arr_last_index_value_plus_one_char_is_\n}\n\ncandidate()\
    \ {\n    get_closest_vowel \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate\
    \ \"yogurt\") = \"u\" ]]\n    [[ $(candidate \"full\") = \"u\" ]]\n    [[ $(candidate\
    \ \"easy\") = \"\" ]]\n    [[ $(candidate \"eAsy\") = \"\" ]]\n    [[ $(candidate\
    \ \"ali\") = \"\" ]]\n    [[ $(candidate \"bad\") = \"a\" ]]\n    [[ $(candidate\
    \ \"most\") = \"o\" ]]\n    [[ $(candidate \"ab\") = \"\" ]]\n    [[ $(candidate\
    \ \"ba\") = \"\" ]]\n    [[ $(candidate \"quick\") = \"\" ]]\n    [[ $(candidate\
    \ \"anime\") = \"i\" ]]\n    [[ $(candidate \"Asia\") = \"\" ]]\n    [[ $(candidate\
    \ \"Above\") = \"o\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660002112
- exit_code: 1
  program: "#!/bin/bash\n# You are given a word. Your task is to find the closest\
    \ vowel that stands between \n# two consonants from the right side of the word\
    \ (case sensitive).\n# Vowels in the beginning and ending doesn't count. Return\
    \ empty string if you didn't\n# find any vowel met the above condition. \n# You\
    \ may assume that the given string contains English letter only.\n# Example:\n\
    #\n# $1 is a string\nget_closest_vowel() {\n    local word=$1\n    local len=${#word}\n\
    \    local i=0\n    local j=0\n    local k=0\n    local vowel=0\n    local consonant=0\n\
    \    local result=''\n    local vowels=('a' 'e' 'i' 'o' 'u')\n    local consonants=('b'\
    \ 'c' 'd' 'f' 'g' 'h' 'j' 'k' 'l' 'm' 'n' 'p' 'q' 'r' 's' 't' 'v' 'w' 'x' 'y'\
    \ 'z')\n    for ((i=0; i<len; i++)); do\n        for ((j=0; j<${#vowels[@]}; j++));\
    \ do\n            if [[ ${word:$i:1} == ${vowels[$j]} ]]; then\n             \
    \   vowel=$i\n                break\n            fi\n        done\n        for\
    \ ((k=0; k<${#consonants[@]}; k++)); do\n            if [[ ${word:$i:1} == ${consonants[$k]}\
    \ ]]; then\n                consonant=$i\n                break\n            fi\n\
    \        done\n        if [[ $vowel -gt 0 && $consonant -gt 0 ]]; then\n     \
    \       result=${word:$vowel:1}\n            break\n        fi\n    done\n   \
    \ echo $result\n}\n\ncandidate() {\n    get_closest_vowel \"$@\"\n}\n\nset -e\n\
    run_test() {\n    [[ $(candidate \"yogurt\") = \"u\" ]]\n    [[ $(candidate \"\
    full\") = \"u\" ]]\n    [[ $(candidate \"easy\") = \"\" ]]\n    [[ $(candidate\
    \ \"eAsy\") = \"\" ]]\n    [[ $(candidate \"ali\") = \"\" ]]\n    [[ $(candidate\
    \ \"bad\") = \"a\" ]]\n    [[ $(candidate \"most\") = \"o\" ]]\n    [[ $(candidate\
    \ \"ab\") = \"\" ]]\n    [[ $(candidate \"ba\") = \"\" ]]\n    [[ $(candidate\
    \ \"quick\") = \"\" ]]\n    [[ $(candidate \"anime\") = \"i\" ]]\n    [[ $(candidate\
    \ \"Asia\") = \"\" ]]\n    [[ $(candidate \"Above\") = \"o\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660002112
- exit_code: 1
  program: "#!/bin/bash\n# You are given a word. Your task is to find the closest\
    \ vowel that stands between \n# two consonants from the right side of the word\
    \ (case sensitive).\n# Vowels in the beginning and ending doesn't count. Return\
    \ empty string if you didn't\n# find any vowel met the above condition. \n# You\
    \ may assume that the given string contains English letter only.\n# Example:\n\
    #\n# $1 is a string\nget_closest_vowel() {\n    local word=$1\n    local word_len=${#word}\n\
    \    local i=0\n    local j=0\n    local vowel_pos=0\n    local vowel_pos_arr=()\n\
    \    local vowel_pos_arr_len=0\n    local closest_vowel_pos=0\n    local closest_vowel_pos_len=0\n\
    \    local closest_vowel_pos_arr=()\n    local closest_vowel_pos_arr_len=0\n \
    \   local closest_vowel_pos_arr_last_idx=0\n    local closest_vowel_pos_arr_last_idx_len=0\n\
    \    local closest_vowel_pos_arr_last_idx_len_arr=()\n    local closest_vowel_pos_arr_last_idx_len_arr_len=0\n\
    \    local closest_vowel_pos_arr_last_idx_len_arr_last_idx=0\n    local closest_vowel_pos_arr_last_idx_len_arr_last_idx_len=0\n\
    \    local closest_vowel_pos_arr_last_idx_len_arr_last_idx_len_arr=()\n    local\
    \ closest_vowel_pos_arr_last_idx_len_arr_last_idx_len_arr_len=0\n    local closest_vowel_pos_arr_last_idx_len_arr_last_idx_len_arr_last_idx=0\n\
    \    local closest_vowel_pos_arr_last_idx_len_arr_last_idx_len_arr_last_idx_len=0\n\
    \    local closest_vowel_pos_arr_last_idx_len_arr_last_idx_len_arr_last_idx_len_arr=()\n\
    \    local closest_vowel_pos_arr_last_idx_len_arr_last_idx_len_arr_last_idx_len_arr_len=0\n\
    \    local closest_vowel_pos_arr_last_idx_len_arr_last_id\n}\n\ncandidate() {\n\
    \    get_closest_vowel \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"\
    yogurt\") = \"u\" ]]\n    [[ $(candidate \"full\") = \"u\" ]]\n    [[ $(candidate\
    \ \"easy\") = \"\" ]]\n    [[ $(candidate \"eAsy\") = \"\" ]]\n    [[ $(candidate\
    \ \"ali\") = \"\" ]]\n    [[ $(candidate \"bad\") = \"a\" ]]\n    [[ $(candidate\
    \ \"most\") = \"o\" ]]\n    [[ $(candidate \"ab\") = \"\" ]]\n    [[ $(candidate\
    \ \"ba\") = \"\" ]]\n    [[ $(candidate \"quick\") = \"\" ]]\n    [[ $(candidate\
    \ \"anime\") = \"i\" ]]\n    [[ $(candidate \"Asia\") = \"\" ]]\n    [[ $(candidate\
    \ \"Above\") = \"o\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660002112
- exit_code: 1
  program: "#!/bin/bash\n# You are given a word. Your task is to find the closest\
    \ vowel that stands between \n# two consonants from the right side of the word\
    \ (case sensitive).\n# Vowels in the beginning and ending doesn't count. Return\
    \ empty string if you didn't\n# find any vowel met the above condition. \n# You\
    \ may assume that the given string contains English letter only.\n# Example:\n\
    #\n# $1 is a string\nget_closest_vowel() {\n    local word=$1\n    local word_len=${#word}\n\
    \    local i=0\n    local j=0\n    local k=0\n    local vowels=\"aeiou\"\n   \
    \ local cons=\"bcdfghjklmnpqrstvwxyz\"\n    local result=\"\"\n    local found=0\n\
    \    local found_vowel=\"\"\n    local found_cons=\"\"\n    local found_vowel_pos=0\n\
    \    local found_cons_pos=0\n    local found_vowel_pos_prev=0\n    local found_cons_pos_prev=0\n\
    \    local found_vowel_pos_next=0\n    local found_cons_pos_next=0\n    local\
    \ found_vowel_pos_prev_diff=0\n    local found_vowel_pos_next_diff=0\n    local\
    \ found_vowel_pos_diff=0\n    local found_vowel_pos_diff_prev=0\n    local found_vowel_pos_diff_next=0\n\
    \    local found_vowel_pos_diff_prev_min=0\n    local found_vowel_pos_diff_next_min=0\n\
    \    local found_vowel_pos_diff_min=0\n    local found_vowel_pos_diff_min_prev=0\n\
    \    local found_vowel_pos_diff_min_next=0\n    local found_vowel_pos_diff_min_prev_pos=0\n\
    \    local found_vowel_pos_diff_min_next_pos=0\n    local found_vowel_pos_diff_min_pos=0\n\
    \    local found_vowel_pos_diff_min_prev_pos_prev=0\n    local found_vowel_pos_diff_min_next_pos_next=0\n\
    \    local found_vowel_pos_diff_min_pos_prev=0\n    local found_vowel_pos_diff_min_pos_next=0\n\
    \    local found_vowel_pos_diff_min_pos_prev_pos=0\n    local found_vowel_pos_diff_min_pos\n\
    }\n\ncandidate() {\n    get_closest_vowel \"$@\"\n}\n\nset -e\nrun_test() {\n\
    \    [[ $(candidate \"yogurt\") = \"u\" ]]\n    [[ $(candidate \"full\") = \"\
    u\" ]]\n    [[ $(candidate \"easy\") = \"\" ]]\n    [[ $(candidate \"eAsy\") =\
    \ \"\" ]]\n    [[ $(candidate \"ali\") = \"\" ]]\n    [[ $(candidate \"bad\")\
    \ = \"a\" ]]\n    [[ $(candidate \"most\") = \"o\" ]]\n    [[ $(candidate \"ab\"\
    ) = \"\" ]]\n    [[ $(candidate \"ba\") = \"\" ]]\n    [[ $(candidate \"quick\"\
    ) = \"\" ]]\n    [[ $(candidate \"anime\") = \"i\" ]]\n    [[ $(candidate \"Asia\"\
    ) = \"\" ]]\n    [[ $(candidate \"Above\") = \"o\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660002112
- exit_code: 1
  program: "#!/bin/bash\n# You are given a word. Your task is to find the closest\
    \ vowel that stands between \n# two consonants from the right side of the word\
    \ (case sensitive).\n# Vowels in the beginning and ending doesn't count. Return\
    \ empty string if you didn't\n# find any vowel met the above condition. \n# You\
    \ may assume that the given string contains English letter only.\n# Example:\n\
    #\n# $1 is a string\nget_closest_vowel() {\n    local word=$1\n    local word_len=${#word}\n\
    \    local i=0\n    local j=0\n    local vowel_pos=0\n    local vowel_pos_arr=()\n\
    \    local vowel_pos_arr_len=0\n    local closest_vowel_pos=0\n    local closest_vowel_pos_len=0\n\
    \    local closest_vowel_pos_arr=()\n    local closest_vowel_pos_arr_len=0\n \
    \   local closest_vowel=\"\"\n    local vowel_list=\"aeiou\"\n    local vowel_list_len=${#vowel_list}\n\
    \    local vowel=\"\"\n    local is_vowel=0\n    local is_consonant=0\n    local\
    \ is_first_char=0\n    local is_last_char=0\n    local is_first_char_consonant=0\n\
    \    local is_last_char_consonant=0\n    local is_first_char_vowel=0\n    local\
    \ is_last_char_vowel=0\n    local is_first_char_vowel_or_consonant=0\n    local\
    \ is_last_char_vowel_or_consonant=0\n    local is_first_char_vowel_and_consonant=0\n\
    \    local is_last_char_vowel_and_consonant=0\n    local is_first_char_vowel_or_consonant_and_consonant=0\n\
    \    local is_last_char_vowel_or_consonant_and_consonant=0\n    local is_first_char_vowel_and_consonant_and_consonant=0\n\
    \    local is_last_char_vowel_and_consonant_and_consonant=0\n    local is_first_char_vowel_or_consonant_and_vowel=0\n\
    \    local is_last_char_vowel_or_consonant_and_vowel=0\n    local is_first_char_vowel_and_consonant_and_vow\n\
    }\n\ncandidate() {\n    get_closest_vowel \"$@\"\n}\n\nset -e\nrun_test() {\n\
    \    [[ $(candidate \"yogurt\") = \"u\" ]]\n    [[ $(candidate \"full\") = \"\
    u\" ]]\n    [[ $(candidate \"easy\") = \"\" ]]\n    [[ $(candidate \"eAsy\") =\
    \ \"\" ]]\n    [[ $(candidate \"ali\") = \"\" ]]\n    [[ $(candidate \"bad\")\
    \ = \"a\" ]]\n    [[ $(candidate \"most\") = \"o\" ]]\n    [[ $(candidate \"ab\"\
    ) = \"\" ]]\n    [[ $(candidate \"ba\") = \"\" ]]\n    [[ $(candidate \"quick\"\
    ) = \"\" ]]\n    [[ $(candidate \"anime\") = \"i\" ]]\n    [[ $(candidate \"Asia\"\
    ) = \"\" ]]\n    [[ $(candidate \"Above\") = \"o\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660002112
- exit_code: 1
  program: "#!/bin/bash\n# You are given a word. Your task is to find the closest\
    \ vowel that stands between \n# two consonants from the right side of the word\
    \ (case sensitive).\n# Vowels in the beginning and ending doesn't count. Return\
    \ empty string if you didn't\n# find any vowel met the above condition. \n# You\
    \ may assume that the given string contains English letter only.\n# Example:\n\
    #\n# $1 is a string\nget_closest_vowel() {\n    local word=$1\n    local len=${#word}\n\
    \    local i=0\n    local vowel=\"\"\n    local last_consonant=\"\"\n    local\
    \ last_vowel=\"\"\n    local last_vowel_index=0\n    local last_consonant_index=0\n\
    \    local last_vowel_index=0\n    local last_consonant_index=0\n    local last_vowel_index=0\n\
    \    local last_consonant_index=0\n    local last_vowel_index=0\n    local last_consonant_index=0\n\
    \    local last_vowel_index=0\n    local last_consonant_index=0\n    local last_vowel_index=0\n\
    \    local last_consonant_index=0\n    local last_vowel_index=0\n    local last_consonant_index=0\n\
    \    local last_vowel_index=0\n    local last_consonant_index=0\n    local last_vowel_index=0\n\
    \    local last_consonant_index=0\n    local last_vowel_index=0\n    local last_consonant_index=0\n\
    \    local last_vowel_index=0\n    local last_consonant_index=0\n    local last_vowel_index=0\n\
    \    local last_consonant_index=0\n    local last_vowel_index=0\n    local last_consonant_index=0\n\
    \    local last_vowel_index=0\n    local last_consonant_index=0\n    local last_vowel_index=0\n\
    \    local last_consonant_index=0\n    local last_vowel_index=0\n    local last_consonant_index=0\n\
    \    local last_vowel_index=0\n    local last_consonant_index=0\n    local last_vowel_index=0\n\
    \    local last_consonant_index=0\n    local last_vowel_index=0\n    local last_consonant_index=0\n\
    \    local last_vowel_index=0\n}\n\ncandidate() {\n    get_closest_vowel \"$@\"\
    \n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"yogurt\") = \"u\" ]]\n    [[\
    \ $(candidate \"full\") = \"u\" ]]\n    [[ $(candidate \"easy\") = \"\" ]]\n \
    \   [[ $(candidate \"eAsy\") = \"\" ]]\n    [[ $(candidate \"ali\") = \"\" ]]\n\
    \    [[ $(candidate \"bad\") = \"a\" ]]\n    [[ $(candidate \"most\") = \"o\"\
    \ ]]\n    [[ $(candidate \"ab\") = \"\" ]]\n    [[ $(candidate \"ba\") = \"\"\
    \ ]]\n    [[ $(candidate \"quick\") = \"\" ]]\n    [[ $(candidate \"anime\") =\
    \ \"i\" ]]\n    [[ $(candidate \"Asia\") = \"\" ]]\n    [[ $(candidate \"Above\"\
    ) = \"o\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660002112
- exit_code: 1
  program: "#!/bin/bash\n# You are given a word. Your task is to find the closest\
    \ vowel that stands between \n# two consonants from the right side of the word\
    \ (case sensitive).\n# Vowels in the beginning and ending doesn't count. Return\
    \ empty string if you didn't\n# find any vowel met the above condition. \n# You\
    \ may assume that the given string contains English letter only.\n# Example:\n\
    #\n# $1 is a string\nget_closest_vowel() {\n    local word=$1\n    local word_len=${#word}\n\
    \    local i=0\n    local last_consonant_index=0\n    local last_vowel_index=0\n\
    \    local closest_vowel_index=0\n    local closest_vowel_distance=0\n    local\
    \ vowel_distance=0\n    local vowel_index=0\n    local char=''\n    local char_code=0\n\
    \    local vowel_char_code=0\n    local vowel_char=''\n    local closest_vowel_char=''\n\
    \    local closest_vowel_char_code=0\n    local vowel_char_codes=(97 101 105 111\
    \ 117)\n    local vowel_chars=('a' 'e' 'i' 'o' 'u')\n    local vowel_chars_len=${#vowel_chars[@]}\n\
    \    local vowel_char_codes_len=${#vowel_char_codes[@]}\n    local vowel_index=0\n\
    \    local vowel_char_index=0\n    local vowel_char_code_index=0\n    local is_vowel=0\n\
    \    local is_consonant=0\n    local is_last_char_vowel=0\n    local is_last_char_consonant=0\n\
    \    local is_last_char_vowel_index=0\n    local is_last_char_consonant_index=0\n\
    \    local is_last_char_vowel_char=''\n    local is_last_char_consonant_char=''\n\
    \    local is_last_char_vowel_char_code=0\n    local is_last_char_consonant_char_code=0\n\
    \    local is_last_char_vowel_char_index=0\n    local is_last_char_consonant_char_index=0\n\
    \    local is_last_char_vowel_char_code_index=0\n    local is_last_char_consonant_char_code_index=0\n\
    \    local is_last_char_vowel_distance=0\n    local is_last_char_consonant_distance=\n\
    }\n\ncandidate() {\n    get_closest_vowel \"$@\"\n}\n\nset -e\nrun_test() {\n\
    \    [[ $(candidate \"yogurt\") = \"u\" ]]\n    [[ $(candidate \"full\") = \"\
    u\" ]]\n    [[ $(candidate \"easy\") = \"\" ]]\n    [[ $(candidate \"eAsy\") =\
    \ \"\" ]]\n    [[ $(candidate \"ali\") = \"\" ]]\n    [[ $(candidate \"bad\")\
    \ = \"a\" ]]\n    [[ $(candidate \"most\") = \"o\" ]]\n    [[ $(candidate \"ab\"\
    ) = \"\" ]]\n    [[ $(candidate \"ba\") = \"\" ]]\n    [[ $(candidate \"quick\"\
    ) = \"\" ]]\n    [[ $(candidate \"anime\") = \"i\" ]]\n    [[ $(candidate \"Asia\"\
    ) = \"\" ]]\n    [[ $(candidate \"Above\") = \"o\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660002112
- exit_code: 1
  program: "#!/bin/bash\n# You are given a word. Your task is to find the closest\
    \ vowel that stands between \n# two consonants from the right side of the word\
    \ (case sensitive).\n# Vowels in the beginning and ending doesn't count. Return\
    \ empty string if you didn't\n# find any vowel met the above condition. \n# You\
    \ may assume that the given string contains English letter only.\n# Example:\n\
    #\n# $1 is a string\nget_closest_vowel() {\n    local word=$1\n    local word_len=${#word}\n\
    \    local i=0\n    local vowel_pos=0\n    local vowel_pos_prev=0\n    local vowel_pos_next=0\n\
    \    local vowel_pos_prev_next=0\n    local vowel_pos_prev_prev=0\n    local vowel_pos_next_next=0\n\
    \    local vowel_pos_prev_prev_next=0\n    local vowel_pos_prev_next_next=0\n\
    \    local vowel_pos_prev_prev_next_next=0\n    local vowel_pos_prev_prev_next_next_next=0\n\
    \    local vowel_pos_prev_prev_next_next_next_next=0\n    local vowel_pos_prev_prev_next_next_next_next_next=0\n\
    \    local vowel_pos_prev_prev_next_next_next_next_next_next=0\n    local vowel_pos_prev_prev_next_next_next_next_next_next_next=0\n\
    \    local vowel_pos_prev_prev_next_next_next_next_next_next_next_next=0\n   \
    \ local vowel_pos_prev_prev_next_next_next_next_next_next_next_next_next=0\n \
    \   local vowel_pos_prev_prev_next_next_next_next_next_next_next_next_next_next=0\n\
    \    local vowel_pos_prev_prev_next_next_next_next_next_next_next_next_next_next_next=0\n\
    \    local vowel_pos_prev_prev_next_next_next_next_next_next_next_next_next_next_next_next=0\n\
    \    local vowel_pos_prev_prev_next_next_next_next_next_next_next_next_next_next_next_next_next=0\n\
    \    local vowel_pos_prev_prev_next_next_next_next_next_next_next_next_next_next_next_next_next_next=0\n\
    \    local vowel_pos_prev_prev_next_next_next_next_next_next_next_next_next_next_next_\n\
    }\n\ncandidate() {\n    get_closest_vowel \"$@\"\n}\n\nset -e\nrun_test() {\n\
    \    [[ $(candidate \"yogurt\") = \"u\" ]]\n    [[ $(candidate \"full\") = \"\
    u\" ]]\n    [[ $(candidate \"easy\") = \"\" ]]\n    [[ $(candidate \"eAsy\") =\
    \ \"\" ]]\n    [[ $(candidate \"ali\") = \"\" ]]\n    [[ $(candidate \"bad\")\
    \ = \"a\" ]]\n    [[ $(candidate \"most\") = \"o\" ]]\n    [[ $(candidate \"ab\"\
    ) = \"\" ]]\n    [[ $(candidate \"ba\") = \"\" ]]\n    [[ $(candidate \"quick\"\
    ) = \"\" ]]\n    [[ $(candidate \"anime\") = \"i\" ]]\n    [[ $(candidate \"Asia\"\
    ) = \"\" ]]\n    [[ $(candidate \"Above\") = \"o\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660002111
- exit_code: 1
  program: "#!/bin/bash\n# You are given a word. Your task is to find the closest\
    \ vowel that stands between \n# two consonants from the right side of the word\
    \ (case sensitive).\n# Vowels in the beginning and ending doesn't count. Return\
    \ empty string if you didn't\n# find any vowel met the above condition. \n# You\
    \ may assume that the given string contains English letter only.\n# Example:\n\
    #\n# $1 is a string\nget_closest_vowel() {\n    local word=$1\n    local word_len=${#word}\n\
    \    local i=0\n    local j=0\n    local vowels=\"aeiou\"\n    local consonants=\"\
    bcdfghjklmnpqrstvwxyz\"\n    local vowel_pos=0\n    local consonant_pos=0\n  \
    \  local closest_vowel=\"\"\n    local closest_vowel_pos=0\n    local closest_consonant_pos=0\n\
    \    local closest_vowel_distance=0\n    local closest_consonant_distance=0\n\
    \    local vowel_distance=0\n    local consonant_distance=0\n    local vowel_found=0\n\
    \    local consonant_found=0\n    local vowel_pos_found=0\n    local consonant_pos_found=0\n\
    \    local vowel_pos_distance=0\n    local consonant_pos_distance=0\n    local\
    \ vowel_pos_distance_found=0\n    local consonant_pos_distance_found=0\n    local\
    \ vowel_pos_distance_min=0\n    local consonant_pos_distance_min=0\n    local\
    \ vowel_pos_distance_min_found=0\n    local consonant_pos_distance_min_found=0\n\
    \    local vowel_pos_distance_min_pos=0\n    local consonant_pos_distance_min_pos=0\n\
    \    local vowel_pos_distance_min_pos_found=0\n    local consonant_pos_distance_min_pos_found=0\n\
    \    local vowel_pos_distance_min_pos_distance=0\n    local consonant_pos_distance_min_pos_distance=0\n\
    \    local vowel_pos_distance_min_pos_distance_found=0\n    local consonant_pos_distance_min_pos_distance_found=0\n\
    \    local vowel_pos_distance_min_pos_distance_min=0\n    local consonant_pos_distance_min_pos_distance_min=0\n\
    \    local vowel_pos_distance_min_pos_distance_min_found=0\n    local consonant_pos_distance_min_pos_distance_min_found=0\n\
    \    local vowel_pos_distance_min_pos_\n}\n\ncandidate() {\n    get_closest_vowel\
    \ \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"yogurt\") = \"u\" ]]\n\
    \    [[ $(candidate \"full\") = \"u\" ]]\n    [[ $(candidate \"easy\") = \"\"\
    \ ]]\n    [[ $(candidate \"eAsy\") = \"\" ]]\n    [[ $(candidate \"ali\") = \"\
    \" ]]\n    [[ $(candidate \"bad\") = \"a\" ]]\n    [[ $(candidate \"most\") =\
    \ \"o\" ]]\n    [[ $(candidate \"ab\") = \"\" ]]\n    [[ $(candidate \"ba\") =\
    \ \"\" ]]\n    [[ $(candidate \"quick\") = \"\" ]]\n    [[ $(candidate \"anime\"\
    ) = \"i\" ]]\n    [[ $(candidate \"Asia\") = \"\" ]]\n    [[ $(candidate \"Above\"\
    ) = \"o\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660002112
- exit_code: 1
  program: "#!/bin/bash\n# You are given a word. Your task is to find the closest\
    \ vowel that stands between \n# two consonants from the right side of the word\
    \ (case sensitive).\n# Vowels in the beginning and ending doesn't count. Return\
    \ empty string if you didn't\n# find any vowel met the above condition. \n# You\
    \ may assume that the given string contains English letter only.\n# Example:\n\
    #\n# $1 is a string\nget_closest_vowel() {\n    local word=\"$1\"\n    local word_len=${#word}\n\
    \    local i=0\n    local vowel_pos=0\n    local vowel_pos_prev=0\n    local vowel_pos_next=0\n\
    \    local vowel_pos_prev_prev=0\n    local vowel_pos_next_next=0\n    local vowel_pos_prev_prev_prev=0\n\
    \    local vowel_pos_next_next_next=0\n    local vowel_pos_prev_prev_prev_prev=0\n\
    \    local vowel_pos_next_next_next_next=0\n    local vowel_pos_prev_prev_prev_prev_prev=0\n\
    \    local vowel_pos_next_next_next_next_next=0\n    local vowel_pos_prev_prev_prev_prev_prev_prev=0\n\
    \    local vowel_pos_next_next_next_next_next_next=0\n    local vowel_pos_prev_prev_prev_prev_prev_prev_prev=0\n\
    \    local vowel_pos_next_next_next_next_next_next_next=0\n    local vowel_pos_prev_prev_prev_prev_prev_prev_prev_prev=0\n\
    \    local vowel_pos_next_next_next_next_next_next_next_next=0\n    local vowel_pos_prev_prev_prev_prev_prev_prev_prev_prev_prev=0\n\
    \    local vowel_pos_next_next_next_next_next_next_next_next_next=0\n    local\
    \ vowel_pos_prev_prev_prev_prev_prev_prev_prev_prev_prev_prev=0\n    local vowel_pos_next_next_next_next_next_next_next_next_next_next=0\n\
    \    local vowel_pos_prev_prev_prev_prev_prev_prev_prev_prev_prev_prev_prev=0\n\
    \    local vowel_pos_next_next_next_next_next_next_next_next_next_next_next=0\n\
    \    local vowel_pos_prev_prev_prev_prev_prev_prev_prev_prev_prev_prev_prev_prev=0\n\
    \    local vowel_pos_\n}\n\ncandidate() {\n    get_closest_vowel \"$@\"\n}\n\n\
    set -e\nrun_test() {\n    [[ $(candidate \"yogurt\") = \"u\" ]]\n    [[ $(candidate\
    \ \"full\") = \"u\" ]]\n    [[ $(candidate \"easy\") = \"\" ]]\n    [[ $(candidate\
    \ \"eAsy\") = \"\" ]]\n    [[ $(candidate \"ali\") = \"\" ]]\n    [[ $(candidate\
    \ \"bad\") = \"a\" ]]\n    [[ $(candidate \"most\") = \"o\" ]]\n    [[ $(candidate\
    \ \"ab\") = \"\" ]]\n    [[ $(candidate \"ba\") = \"\" ]]\n    [[ $(candidate\
    \ \"quick\") = \"\" ]]\n    [[ $(candidate \"anime\") = \"i\" ]]\n    [[ $(candidate\
    \ \"Asia\") = \"\" ]]\n    [[ $(candidate \"Above\") = \"o\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660002112
- exit_code: 1
  program: "#!/bin/bash\n# You are given a word. Your task is to find the closest\
    \ vowel that stands between \n# two consonants from the right side of the word\
    \ (case sensitive).\n# Vowels in the beginning and ending doesn't count. Return\
    \ empty string if you didn't\n# find any vowel met the above condition. \n# You\
    \ may assume that the given string contains English letter only.\n# Example:\n\
    #\n# $1 is a string\nget_closest_vowel() {\n    local word=$1\n    local word_length=${#word}\n\
    \    local i=0\n    local j=0\n    local k=0\n    local vowel=''\n    local vowel_index=0\n\
    \    local closest_vowel=''\n    local closest_vowel_index=0\n    local closest_vowel_distance=0\n\
    \    local vowel_distance=0\n    local vowels=('a' 'e' 'i' 'o' 'u')\n    local\
    \ vowels_length=${#vowels[@]}\n    local consonants=('b' 'c' 'd' 'f' 'g' 'h' 'j'\
    \ 'k' 'l' 'm' 'n' 'p' 'q' 'r' 's' 't' 'v' 'w' 'x' 'y' 'z')\n    local consonants_length=${#consonants[@]}\n\
    \    local is_consonant=0\n    local is_vowel=0\n    local is_closest_vowel=0\n\
    \    local is_first_vowel=0\n    local is_last_vowel=0\n    local is_first_consonant=0\n\
    \    local is_last_consonant=0\n    local is_first_letter=0\n    local is_last_letter=0\n\
    \    local is_first_vowel_found=0\n    local is_last_vowel_found=0\n    local\
    \ is_first_consonant_found=0\n    local is_last_consonant_found=0\n    local is_first_letter_found=0\n\
    \    local is_last_letter_found=0\n    local is_first_vowel_found_before_first_consonant=0\n\
    \    local is_last_vowel_found_after_last_consonant=0\n    local is_first_consonant_found_before_first_vowel=0\n\
    \    local is_last_consonant_found_after_last_vowel=0\n    local is_first_letter_found_before_first_vowel=0\n\
    \    local is_last_letter_\n}\n\ncandidate() {\n    get_closest_vowel \"$@\"\n\
    }\n\nset -e\nrun_test() {\n    [[ $(candidate \"yogurt\") = \"u\" ]]\n    [[ $(candidate\
    \ \"full\") = \"u\" ]]\n    [[ $(candidate \"easy\") = \"\" ]]\n    [[ $(candidate\
    \ \"eAsy\") = \"\" ]]\n    [[ $(candidate \"ali\") = \"\" ]]\n    [[ $(candidate\
    \ \"bad\") = \"a\" ]]\n    [[ $(candidate \"most\") = \"o\" ]]\n    [[ $(candidate\
    \ \"ab\") = \"\" ]]\n    [[ $(candidate \"ba\") = \"\" ]]\n    [[ $(candidate\
    \ \"quick\") = \"\" ]]\n    [[ $(candidate \"anime\") = \"i\" ]]\n    [[ $(candidate\
    \ \"Asia\") = \"\" ]]\n    [[ $(candidate \"Above\") = \"o\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660002112
- exit_code: 1
  program: "#!/bin/bash\n# You are given a word. Your task is to find the closest\
    \ vowel that stands between \n# two consonants from the right side of the word\
    \ (case sensitive).\n# Vowels in the beginning and ending doesn't count. Return\
    \ empty string if you didn't\n# find any vowel met the above condition. \n# You\
    \ may assume that the given string contains English letter only.\n# Example:\n\
    #\n# $1 is a string\nget_closest_vowel() {\n    local word=$1\n    local word_len=${#word}\n\
    \    local i=0\n    local j=0\n    local k=0\n    local vowel=\"\"\n    local\
    \ consonant=\"\"\n    local closest_vowel=\"\"\n    local closest_vowel_index=0\n\
    \    local closest_vowel_distance=0\n    local vowel_index=0\n    local vowel_distance=0\n\
    \    local vowels=\"aeiou\"\n    local consonants=\"bcdfghjklmnpqrstvwxyz\"\n\
    \    local vowel_found=0\n    local consonant_found=0\n    local vowel_index_found=0\n\
    \    local consonant_index_found=0\n    local vowel_distance_found=0\n    local\
    \ consonant_distance_found=0\n    local closest_vowel_distance_found=0\n    local\
    \ closest_vowel_index_found=0\n    local closest_vowel_found=0\n    local closest_vowel_index_found=0\n\
    \    local closest_vowel_distance_found=0\n    local closest_vowel_found=0\n \
    \   local closest_vowel_index_found=0\n    local closest_vowel_distance_found=0\n\
    \    local closest_vowel_found=0\n    local closest_vowel_index_found=0\n    local\
    \ closest_vowel_distance_found=0\n    local closest_vowel_found=0\n    local closest_vowel_index_found=0\n\
    \    local closest_vowel_distance_found=0\n    local closest_vowel_found=0\n \
    \   local closest_vowel_index_found=0\n    local closest_vowel_distance_found=0\n\
    \    local closest_vowel_found=0\n    local closest_vowel_index_found=0\n    local\
    \ closest_vowel_distance_found=0\n    local closest_vowel_found=0\n    local closest_vowel_index_found=0\n\
    \    local closest_vowel_distance_found=0\n    local closest_vowel_found=0\n \
    \   local closest_vow\n}\n\ncandidate() {\n    get_closest_vowel \"$@\"\n}\n\n\
    set -e\nrun_test() {\n    [[ $(candidate \"yogurt\") = \"u\" ]]\n    [[ $(candidate\
    \ \"full\") = \"u\" ]]\n    [[ $(candidate \"easy\") = \"\" ]]\n    [[ $(candidate\
    \ \"eAsy\") = \"\" ]]\n    [[ $(candidate \"ali\") = \"\" ]]\n    [[ $(candidate\
    \ \"bad\") = \"a\" ]]\n    [[ $(candidate \"most\") = \"o\" ]]\n    [[ $(candidate\
    \ \"ab\") = \"\" ]]\n    [[ $(candidate \"ba\") = \"\" ]]\n    [[ $(candidate\
    \ \"quick\") = \"\" ]]\n    [[ $(candidate \"anime\") = \"i\" ]]\n    [[ $(candidate\
    \ \"Asia\") = \"\" ]]\n    [[ $(candidate \"Above\") = \"o\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660002112
- exit_code: 1
  program: "#!/bin/bash\n# You are given a word. Your task is to find the closest\
    \ vowel that stands between \n# two consonants from the right side of the word\
    \ (case sensitive).\n# Vowels in the beginning and ending doesn't count. Return\
    \ empty string if you didn't\n# find any vowel met the above condition. \n# You\
    \ may assume that the given string contains English letter only.\n# Example:\n\
    #\n# $1 is a string\nget_closest_vowel() {\n  local word=$1\n  local vowels=\"\
    aeiou\"\n  local last_char=${word: -1}\n  local second_last_char=${word: -2:1}\n\
    \  local last_vowel_index=0\n  local last_consonant_index=0\n  local closest_vowel=\"\
    \"\n  local closest_vowel_index=0\n  local closest_vowel_distance=0\n  local current_vowel_index=0\n\
    \  local current_vowel_distance=0\n  local current_vowel=\"\"\n  local current_vowel_index=0\n\
    \  local current_vowel_distance=0\n  local current_vowel=\"\"\n  local current_vowel_index=0\n\
    \  local current_vowel_distance=0\n  local current_vowel=\"\"\n  local current_vowel_index=0\n\
    \  local current_vowel_distance=0\n  local current_vowel=\"\"\n  local current_vowel_index=0\n\
    \  local current_vowel_distance=0\n  local current_vowel=\"\"\n  local current_vowel_index=0\n\
    \  local current_vowel_distance=0\n  local current_vowel=\"\"\n  local current_vowel_index=0\n\
    \  local current_vowel_distance=0\n  local current_vowel=\"\"\n  local current_vowel_index=0\n\
    \  local current_vowel_distance=0\n  local current_vowel=\"\"\n  local current_vowel_index=0\n\
    \  local current_vowel_distance=0\n  local current_vowel=\"\"\n  local current_vowel_index=0\n\
    \  local current_vowel_distance=0\n  local current_vowel=\"\"\n  local current_vowel_index=0\n\
    \  local current_vowel_distance=0\n  local current_vowel=\"\"\n  local current_vowel_index=0\n\
    \  local current_vowel_distance=0\n  local current_vowel=\"\"\n  local current_vowel_index=0\n\
    \n}\n\ncandidate() {\n    get_closest_vowel \"$@\"\n}\n\nset -e\nrun_test() {\n\
    \    [[ $(candidate \"yogurt\") = \"u\" ]]\n    [[ $(candidate \"full\") = \"\
    u\" ]]\n    [[ $(candidate \"easy\") = \"\" ]]\n    [[ $(candidate \"eAsy\") =\
    \ \"\" ]]\n    [[ $(candidate \"ali\") = \"\" ]]\n    [[ $(candidate \"bad\")\
    \ = \"a\" ]]\n    [[ $(candidate \"most\") = \"o\" ]]\n    [[ $(candidate \"ab\"\
    ) = \"\" ]]\n    [[ $(candidate \"ba\") = \"\" ]]\n    [[ $(candidate \"quick\"\
    ) = \"\" ]]\n    [[ $(candidate \"anime\") = \"i\" ]]\n    [[ $(candidate \"Asia\"\
    ) = \"\" ]]\n    [[ $(candidate \"Above\") = \"o\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660002112
- exit_code: 1
  program: "#!/bin/bash\n# You are given a word. Your task is to find the closest\
    \ vowel that stands between \n# two consonants from the right side of the word\
    \ (case sensitive).\n# Vowels in the beginning and ending doesn't count. Return\
    \ empty string if you didn't\n# find any vowel met the above condition. \n# You\
    \ may assume that the given string contains English letter only.\n# Example:\n\
    #\n# $1 is a string\nget_closest_vowel() {\n    local word=\"$1\"\n    local len=${#word}\n\
    \    local i=0\n    local j=0\n    local k=0\n    local result=\"\"\n    local\
    \ vowels=\"aeiou\"\n    local consonants=\"bcdfghjklmnpqrstvwxyz\"\n    local\
    \ vowel_found=0\n    local consonant_found=0\n    local vowel_index=0\n    local\
    \ consonant_index=0\n    local vowel_distance=0\n    local consonant_distance=0\n\
    \    local min_distance=0\n    local min_index=0\n    local min_vowel=\"\"\n \
    \   local min_consonant=\"\"\n    local min_vowel_index=0\n    local min_consonant_index=0\n\
    \    local min_vowel_distance=0\n    local min_consonant_distance=0\n    local\
    \ min_vowel_found=0\n    local min_consonant_found=0\n    local min_vowel_index=0\n\
    \    local min_consonant_index=0\n    local min_vowel_distance=0\n    local min_consonant_distance=0\n\
    \    local min_vowel=\"\"\n    local min_consonant=\"\"\n    local min_vowel_index=0\n\
    \    local min_consonant_index=0\n    local min_vowel_distance=0\n    local min_consonant_distance=0\n\
    \    local min_vowel_found=0\n    local min_consonant_found=0\n    local min_vowel_index=0\n\
    \    local min_consonant_index=0\n    local min_vowel_distance=0\n    local min_consonant_distance=0\n\
    \    local min_vowel=\"\"\n    local min_consonant=\"\"\n    local min_vowel_index=0\n\
    \    local min_consonant_index=0\n    local min_vowel_distance=0\n    local min_consonant_distance=0\n\
    \    local min_vowel_found=0\n    local min_consonant_found=0\n    local min_vowel\n\
    }\n\ncandidate() {\n    get_closest_vowel \"$@\"\n}\n\nset -e\nrun_test() {\n\
    \    [[ $(candidate \"yogurt\") = \"u\" ]]\n    [[ $(candidate \"full\") = \"\
    u\" ]]\n    [[ $(candidate \"easy\") = \"\" ]]\n    [[ $(candidate \"eAsy\") =\
    \ \"\" ]]\n    [[ $(candidate \"ali\") = \"\" ]]\n    [[ $(candidate \"bad\")\
    \ = \"a\" ]]\n    [[ $(candidate \"most\") = \"o\" ]]\n    [[ $(candidate \"ab\"\
    ) = \"\" ]]\n    [[ $(candidate \"ba\") = \"\" ]]\n    [[ $(candidate \"quick\"\
    ) = \"\" ]]\n    [[ $(candidate \"anime\") = \"i\" ]]\n    [[ $(candidate \"Asia\"\
    ) = \"\" ]]\n    [[ $(candidate \"Above\") = \"o\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660002112
- exit_code: 1
  program: "#!/bin/bash\n# You are given a word. Your task is to find the closest\
    \ vowel that stands between \n# two consonants from the right side of the word\
    \ (case sensitive).\n# Vowels in the beginning and ending doesn't count. Return\
    \ empty string if you didn't\n# find any vowel met the above condition. \n# You\
    \ may assume that the given string contains English letter only.\n# Example:\n\
    #\n# $1 is a string\nget_closest_vowel() {\n\tlocal word=$1\n\tlocal vowels=\"\
    aeiou\"\n\tlocal closest_vowel=\"\"\n\tlocal closest_vowel_index=0\n\tlocal word_length=${#word}\n\
    \tlocal word_index=0\n\tlocal word_char=\"\"\n\tlocal vowel_index=0\n\tlocal vowel_char=\"\
    \"\n\tlocal vowel_found=0\n\tlocal vowel_found_index=0\n\tlocal vowel_found_char=\"\
    \"\n\tlocal vowel_found_distance=0\n\tlocal vowel_found_distance_new=0\n\tlocal\
    \ vowel_found_distance_min=0\n\tlocal vowel_found_distance_min_index=0\n\tlocal\
    \ vowel_found_distance_min_char=\"\"\n\tlocal vowel_found_distance_min_found=0\n\
    \tlocal vowel_found_distance_min_found_index=0\n\tlocal vowel_found_distance_min_found_char=\"\
    \"\n\tlocal vowel_found_distance_min_found_distance=0\n\tlocal vowel_found_distance_min_found_distance_new=0\n\
    \tlocal vowel_found_distance_min_found_distance_min=0\n\tlocal vowel_found_distance_min_found_distance_min_index=0\n\
    \tlocal vowel_found_distance_min_found_distance_min_char=\"\"\n\tlocal vowel_found_distance_min_found_distance_min_found=0\n\
    \tlocal vowel_found_distance_min_found_distance_min_found_index=0\n\tlocal vowel_found_distance_min_found_distance_min_found_char=\"\
    \"\n\tlocal vowel_found_distance_min_found_distance_min_found_distance=0\n\tlocal\
    \ vowel_found_distance_min_found_distance_min_found_distance_new=0\n\tlocal vowel_found_distance_min_found_distance_min_found_distance_min=0\n\
    \tlocal vowel_found_distance_min_found_distance_min_found_distance_min_index=0\n\
    \tlocal vowel_found_distance_min_found_distance_min_found_distance_min_char=\"\
    \"\n\tlocal vowel_found_distance_min_found_distance_min_found_distance_min_found=0\n\
    }\n\ncandidate() {\n    get_closest_vowel \"$@\"\n}\n\nset -e\nrun_test() {\n\
    \    [[ $(candidate \"yogurt\") = \"u\" ]]\n    [[ $(candidate \"full\") = \"\
    u\" ]]\n    [[ $(candidate \"easy\") = \"\" ]]\n    [[ $(candidate \"eAsy\") =\
    \ \"\" ]]\n    [[ $(candidate \"ali\") = \"\" ]]\n    [[ $(candidate \"bad\")\
    \ = \"a\" ]]\n    [[ $(candidate \"most\") = \"o\" ]]\n    [[ $(candidate \"ab\"\
    ) = \"\" ]]\n    [[ $(candidate \"ba\") = \"\" ]]\n    [[ $(candidate \"quick\"\
    ) = \"\" ]]\n    [[ $(candidate \"anime\") = \"i\" ]]\n    [[ $(candidate \"Asia\"\
    ) = \"\" ]]\n    [[ $(candidate \"Above\") = \"o\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660002112
- exit_code: 1
  program: "#!/bin/bash\n# You are given a word. Your task is to find the closest\
    \ vowel that stands between \n# two consonants from the right side of the word\
    \ (case sensitive).\n# Vowels in the beginning and ending doesn't count. Return\
    \ empty string if you didn't\n# find any vowel met the above condition. \n# You\
    \ may assume that the given string contains English letter only.\n# Example:\n\
    #\n# $1 is a string\nget_closest_vowel() {\n    local word=$1\n    local len=${#word}\n\
    \    local i=0\n    local j=0\n    local k=0\n    local vowel=''\n    local result=''\n\
    \    local vowels=('a' 'e' 'i' 'o' 'u')\n    local consonants=('b' 'c' 'd' 'f'\
    \ 'g' 'h' 'j' 'k' 'l' 'm' 'n' 'p' 'q' 'r' 's' 't' 'v' 'w' 'x' 'y' 'z')\n    local\
    \ is_vowel=0\n    local is_consonant=0\n    local is_first_consonant=0\n    local\
    \ is_second_consonant=0\n    local is_first_vowel=0\n    local is_second_vowel=0\n\
    \    local is_first_letter=0\n    local is_last_letter=0\n    local first_letter=''\n\
    \    local last_letter=''\n    local first_vowel=''\n    local second_vowel=''\n\
    \    local first_consonant=''\n    local second_consonant=''\n    local first_vowel_index=0\n\
    \    local second_vowel_index=0\n    local first_consonant_index=0\n    local\
    \ second_consonant_index=0\n    local first_vowel_distance=0\n    local second_vowel_distance=0\n\
    \    local first_consonant_distance=0\n    local second_consonant_distance=0\n\
    \    local distance=0\n    local min_distance=0\n    local min_vowel=''\n    local\
    \ min_vowel_index=0\n    local min_vowel_distance=0\n    local min_consonant=''\n\
    \    local min_consonant_index=0\n    local min_consonant_distance=0\n    local\
    \ min_letter=''\n    local min_letter_index=0\n    local min_letter_distance=0\n\
    \    local min_letter_type=''\n    local min_letter_type_index=0\n    local min_\n\
    }\n\ncandidate() {\n    get_closest_vowel \"$@\"\n}\n\nset -e\nrun_test() {\n\
    \    [[ $(candidate \"yogurt\") = \"u\" ]]\n    [[ $(candidate \"full\") = \"\
    u\" ]]\n    [[ $(candidate \"easy\") = \"\" ]]\n    [[ $(candidate \"eAsy\") =\
    \ \"\" ]]\n    [[ $(candidate \"ali\") = \"\" ]]\n    [[ $(candidate \"bad\")\
    \ = \"a\" ]]\n    [[ $(candidate \"most\") = \"o\" ]]\n    [[ $(candidate \"ab\"\
    ) = \"\" ]]\n    [[ $(candidate \"ba\") = \"\" ]]\n    [[ $(candidate \"quick\"\
    ) = \"\" ]]\n    [[ $(candidate \"anime\") = \"i\" ]]\n    [[ $(candidate \"Asia\"\
    ) = \"\" ]]\n    [[ $(candidate \"Above\") = \"o\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660002112
- exit_code: 1
  program: "#!/bin/bash\n# You are given a word. Your task is to find the closest\
    \ vowel that stands between \n# two consonants from the right side of the word\
    \ (case sensitive).\n# Vowels in the beginning and ending doesn't count. Return\
    \ empty string if you didn't\n# find any vowel met the above condition. \n# You\
    \ may assume that the given string contains English letter only.\n# Example:\n\
    #\n# $1 is a string\nget_closest_vowel() {\n  local word=\"$1\"\n  local vowels=\"\
    aeiou\"\n  local consonants=\"bcdfghjklmnpqrstvwxyz\"\n  local closest_vowel=\"\
    \"\n  local closest_vowel_index=0\n  local closest_vowel_distance=0\n  local current_vowel=\"\
    \"\n  local current_vowel_index=0\n  local current_vowel_distance=0\n  local current_consonant=\"\
    \"\n  local current_consonant_index=0\n  local current_consonant_distance=0\n\
    \  local i=0\n  local j=0\n  local k=0\n  local word_length=${#word}\n  local\
    \ word_length_minus_one=$((word_length - 1))\n  local word_length_minus_two=$((word_length\
    \ - 2))\n  local word_length_minus_three=$((word_length - 3))\n  local word_length_minus_four=$((word_length\
    \ - 4))\n  local word_length_minus_five=$((word_length - 5))\n  local word_length_minus_six=$((word_length\
    \ - 6))\n  local word_length_minus_seven=$((word_length - 7))\n  local word_length_minus_eight=$((word_length\
    \ - 8))\n  local word_length_minus_nine=$((word_length - 9))\n  local word_length_minus_ten=$((word_length\
    \ - 10))\n  local word_length_minus_eleven=$((word_length - 11))\n  local word_length_minus_twelve=$((word_length\
    \ - 12))\n  local word_length_minus_thirteen=$((word_length - 13))\n  local word_length_minus_fourteen=$((word_length\
    \ - 14))\n  local word_length_minus_fifteen=$((word_length - 15))\n  local word_length_minus_sixteen=$((word_length\
    \ - 16))\n  local word_length_minus_seventeen=$((word_length - 17))\n  local word_length_minus_eighteen=$((word_length\
    \ - 18))\n  local word_length_minus_nineteen=$\n}\n\ncandidate() {\n    get_closest_vowel\
    \ \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"yogurt\") = \"u\" ]]\n\
    \    [[ $(candidate \"full\") = \"u\" ]]\n    [[ $(candidate \"easy\") = \"\"\
    \ ]]\n    [[ $(candidate \"eAsy\") = \"\" ]]\n    [[ $(candidate \"ali\") = \"\
    \" ]]\n    [[ $(candidate \"bad\") = \"a\" ]]\n    [[ $(candidate \"most\") =\
    \ \"o\" ]]\n    [[ $(candidate \"ab\") = \"\" ]]\n    [[ $(candidate \"ba\") =\
    \ \"\" ]]\n    [[ $(candidate \"quick\") = \"\" ]]\n    [[ $(candidate \"anime\"\
    ) = \"i\" ]]\n    [[ $(candidate \"Asia\") = \"\" ]]\n    [[ $(candidate \"Above\"\
    ) = \"o\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660002112
- exit_code: 1
  program: "#!/bin/bash\n# You are given a word. Your task is to find the closest\
    \ vowel that stands between \n# two consonants from the right side of the word\
    \ (case sensitive).\n# Vowels in the beginning and ending doesn't count. Return\
    \ empty string if you didn't\n# find any vowel met the above condition. \n# You\
    \ may assume that the given string contains English letter only.\n# Example:\n\
    #\n# $1 is a string\nget_closest_vowel() {\n    local word=$1\n    local len=${#word}\n\
    \    local i=0\n    local j=0\n    local vowel_index=0\n    local vowel_index_tmp=0\n\
    \    local vowel_index_min=0\n    local vowel_index_min_tmp=0\n    local vowel_index_min_tmp_prev=0\n\
    \    local consonant_index=0\n    local consonant_index_tmp=0\n    local consonant_index_min=0\n\
    \    local consonant_index_min_tmp=0\n    local consonant_index_min_tmp_prev=0\n\
    \    local vowel_char=''\n    local consonant_char=''\n    local vowel_char_tmp=''\n\
    \    local consonant_char_tmp=''\n    local vowel_char_min=''\n    local consonant_char_min=''\n\
    \    local vowel_char_min_tmp=''\n    local consonant_char_min_tmp=''\n    local\
    \ vowel_char_min_tmp_prev=''\n    local consonant_char_min_tmp_prev=''\n    local\
    \ vowel_char_min_prev=''\n    local consonant_char_min_prev=''\n    local vowel_char_min_prev_prev=''\n\
    \    local consonant_char_min_prev_prev=''\n    local vowel_char_min_prev_prev_prev=''\n\
    \    local consonant_char_min_prev_prev_prev=''\n    local vowel_char_min_prev_prev_prev_prev=''\n\
    \    local consonant_char_min_prev_prev_prev_prev=''\n    local vowel_char_min_prev_prev_prev_prev_prev=''\n\
    \    local consonant_char_min_prev_prev_prev_prev_prev=''\n    local vowel_char_min_prev_prev_prev_prev_prev_prev=''\n\
    \    local consonant_char_min_prev_prev_prev_prev_prev_prev=''\n    local vowel_char_min_prev_prev_prev_prev_prev_prev_prev=''\n\
    \    local consonant_char_min_prev_prev_prev_prev_prev_prev_prev=''\n}\n\ncandidate()\
    \ {\n    get_closest_vowel \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate\
    \ \"yogurt\") = \"u\" ]]\n    [[ $(candidate \"full\") = \"u\" ]]\n    [[ $(candidate\
    \ \"easy\") = \"\" ]]\n    [[ $(candidate \"eAsy\") = \"\" ]]\n    [[ $(candidate\
    \ \"ali\") = \"\" ]]\n    [[ $(candidate \"bad\") = \"a\" ]]\n    [[ $(candidate\
    \ \"most\") = \"o\" ]]\n    [[ $(candidate \"ab\") = \"\" ]]\n    [[ $(candidate\
    \ \"ba\") = \"\" ]]\n    [[ $(candidate \"quick\") = \"\" ]]\n    [[ $(candidate\
    \ \"anime\") = \"i\" ]]\n    [[ $(candidate \"Asia\") = \"\" ]]\n    [[ $(candidate\
    \ \"Above\") = \"o\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660002112
- exit_code: 1
  program: "#!/bin/bash\n# You are given a word. Your task is to find the closest\
    \ vowel that stands between \n# two consonants from the right side of the word\
    \ (case sensitive).\n# Vowels in the beginning and ending doesn't count. Return\
    \ empty string if you didn't\n# find any vowel met the above condition. \n# You\
    \ may assume that the given string contains English letter only.\n# Example:\n\
    #\n# $1 is a string\nget_closest_vowel() {\n    local word=$1\n    local len=${#word}\n\
    \    local i=0\n    local vowels=\"aeiou\"\n    local vowel=\"\"\n    local cons=\"\
    \"\n    local cons_len=0\n    local vowel_len=0\n    local vowel_idx=0\n    local\
    \ cons_idx=0\n    local vowel_pos=0\n    local cons_pos=0\n    local min_dist=0\n\
    \    local dist=0\n    local min_vowel=\"\"\n    local min_vowel_pos=0\n    local\
    \ min_cons=\"\"\n    local min_cons_pos=0\n    local min_vowel_len=0\n    local\
    \ min_cons_len=0\n    local min_vowel_idx=0\n    local min_cons_idx=0\n    local\
    \ min_vowel_pos=0\n    local min_cons_pos=0\n    local min_dist=0\n    local dist=0\n\
    \    local min_vowel=\"\"\n    local min_vowel_pos=0\n    local min_cons=\"\"\n\
    \    local min_cons_pos=0\n    local min_vowel_len=0\n    local min_cons_len=0\n\
    \    local min_vowel_idx=0\n    local min_cons_idx=0\n    local min_vowel_pos=0\n\
    \    local min_cons_pos=0\n    local min_dist=0\n    local dist=0\n    local min_vowel=\"\
    \"\n    local min_vowel_pos=0\n    local min_cons=\"\"\n    local min_cons_pos=0\n\
    \    local min_vowel_len=0\n    local min_cons_len=0\n    local min_vowel_idx=0\n\
    \    local min_cons_idx=0\n    local min_vowel_pos=0\n    local min_cons_pos=0\n\
    \    local min_dist=0\n    local dist=0\n    local min_vowel=\"\"\n    local min_vowel_pos=0\n\
    \    local min_cons=\"\"\n    local min_cons_pos=0\n    local min_vowel_\n}\n\n\
    candidate() {\n    get_closest_vowel \"$@\"\n}\n\nset -e\nrun_test() {\n    [[\
    \ $(candidate \"yogurt\") = \"u\" ]]\n    [[ $(candidate \"full\") = \"u\" ]]\n\
    \    [[ $(candidate \"easy\") = \"\" ]]\n    [[ $(candidate \"eAsy\") = \"\" ]]\n\
    \    [[ $(candidate \"ali\") = \"\" ]]\n    [[ $(candidate \"bad\") = \"a\" ]]\n\
    \    [[ $(candidate \"most\") = \"o\" ]]\n    [[ $(candidate \"ab\") = \"\" ]]\n\
    \    [[ $(candidate \"ba\") = \"\" ]]\n    [[ $(candidate \"quick\") = \"\" ]]\n\
    \    [[ $(candidate \"anime\") = \"i\" ]]\n    [[ $(candidate \"Asia\") = \"\"\
    \ ]]\n    [[ $(candidate \"Above\") = \"o\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660002112
- exit_code: 1
  program: "#!/bin/bash\n# You are given a word. Your task is to find the closest\
    \ vowel that stands between \n# two consonants from the right side of the word\
    \ (case sensitive).\n# Vowels in the beginning and ending doesn't count. Return\
    \ empty string if you didn't\n# find any vowel met the above condition. \n# You\
    \ may assume that the given string contains English letter only.\n# Example:\n\
    #\n# $1 is a string\nget_closest_vowel() {\n    local word=\"$1\"\n    local word_len=${#word}\n\
    \    local i=0\n    local j=0\n    local vowel_pos=0\n    local vowel_pos_arr=()\n\
    \    local vowel_pos_arr_len=0\n    local vowel_pos_arr_idx=0\n    local closest_vowel_pos=0\n\
    \    local closest_vowel_pos_idx=0\n    local closest_vowel=''\n    local vowel_arr=('a'\
    \ 'e' 'i' 'o' 'u')\n    local vowel_arr_len=${#vowel_arr[@]}\n    local vowel_arr_idx=0\n\
    \    local vowel=''\n    local consonant=''\n    local consonant_arr=('b' 'c'\
    \ 'd' 'f' 'g' 'h' 'j' 'k' 'l' 'm' 'n' 'p' 'q' 'r' 's' 't' 'v' 'w' 'x' 'y' 'z')\n\
    \    local consonant_arr_len=${#consonant_arr[@]}\n    local consonant_arr_idx=0\n\
    \    local consonant_pos=0\n    local consonant_pos_arr=()\n    local consonant_pos_arr_len=0\n\
    \    local consonant_pos_arr_idx=0\n    local closest_consonant_pos=0\n    local\
    \ closest_consonant_pos_idx=0\n    local closest_consonant=''\n    local closest_consonant_idx=0\n\
    \    local closest_consonant_arr=()\n    local closest_consonant_arr_len=0\n \
    \   local closest_consonant_arr_idx=0\n    local closest_consonant_pos_arr=()\n\
    \    local closest_consonant_pos_arr_len=0\n    local closest_consonant_pos_arr_idx=0\n\
    \    local closest_vowel_pos_arr=()\n    local closest_vowel_pos_arr_len=0\n \
    \   local closest_vowel_pos_arr_idx=0\n\n}\n\ncandidate() {\n    get_closest_vowel\
    \ \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"yogurt\") = \"u\" ]]\n\
    \    [[ $(candidate \"full\") = \"u\" ]]\n    [[ $(candidate \"easy\") = \"\"\
    \ ]]\n    [[ $(candidate \"eAsy\") = \"\" ]]\n    [[ $(candidate \"ali\") = \"\
    \" ]]\n    [[ $(candidate \"bad\") = \"a\" ]]\n    [[ $(candidate \"most\") =\
    \ \"o\" ]]\n    [[ $(candidate \"ab\") = \"\" ]]\n    [[ $(candidate \"ba\") =\
    \ \"\" ]]\n    [[ $(candidate \"quick\") = \"\" ]]\n    [[ $(candidate \"anime\"\
    ) = \"i\" ]]\n    [[ $(candidate \"Asia\") = \"\" ]]\n    [[ $(candidate \"Above\"\
    ) = \"o\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660002112
- exit_code: 1
  program: "#!/bin/bash\n# You are given a word. Your task is to find the closest\
    \ vowel that stands between \n# two consonants from the right side of the word\
    \ (case sensitive).\n# Vowels in the beginning and ending doesn't count. Return\
    \ empty string if you didn't\n# find any vowel met the above condition. \n# You\
    \ may assume that the given string contains English letter only.\n# Example:\n\
    #\n# $1 is a string\nget_closest_vowel() {\n    local word=$1\n    local length=${#word}\n\
    \    local i=0\n    local j=0\n    local k=0\n    local vowel=\"\"\n    local\
    \ closest_vowel=\"\"\n    local closest_vowel_index=0\n    local closest_vowel_distance=0\n\
    \    local vowel_index=0\n    local vowel_distance=0\n    local vowels=\"aeiou\"\
    \n    local consonants=\"bcdfghjklmnpqrstvwxyz\"\n    local is_consonant=0\n \
    \   local is_vowel=0\n    local is_closest_vowel=0\n    local is_closest_vowel_found=0\n\
    \    local is_vowel_found=0\n    local is_consonant_found=0\n    local is_vowel_found_before_consonant=0\n\
    \    local is_consonant_found_before_vowel=0\n    local is_vowel_found_after_consonant=0\n\
    \    local is_consonant_found_after_vowel=0\n    local is_vowel_found_before_closest_vowel=0\n\
    \    local is_consonant_found_before_closest_vowel=0\n    local is_vowel_found_after_closest_vowel=0\n\
    \    local is_consonant_found_after_closest_vowel=0\n    local is_closest_vowel_found_before_vowel=0\n\
    \    local is_closest_vowel_found_after_vowel=0\n    local is_closest_vowel_found_before_consonant=0\n\
    \    local is_closest_vowel_found_after_consonant=0\n    local is_closest_vowel_found_before_closest_vowel=0\n\
    \    local is_closest_vowel_found_after_closest_vowel=0\n    local is_closest_vowel_found_before_closest\n\
    }\n\ncandidate() {\n    get_closest_vowel \"$@\"\n}\n\nset -e\nrun_test() {\n\
    \    [[ $(candidate \"yogurt\") = \"u\" ]]\n    [[ $(candidate \"full\") = \"\
    u\" ]]\n    [[ $(candidate \"easy\") = \"\" ]]\n    [[ $(candidate \"eAsy\") =\
    \ \"\" ]]\n    [[ $(candidate \"ali\") = \"\" ]]\n    [[ $(candidate \"bad\")\
    \ = \"a\" ]]\n    [[ $(candidate \"most\") = \"o\" ]]\n    [[ $(candidate \"ab\"\
    ) = \"\" ]]\n    [[ $(candidate \"ba\") = \"\" ]]\n    [[ $(candidate \"quick\"\
    ) = \"\" ]]\n    [[ $(candidate \"anime\") = \"i\" ]]\n    [[ $(candidate \"Asia\"\
    ) = \"\" ]]\n    [[ $(candidate \"Above\") = \"o\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660002112
- exit_code: 1
  program: "#!/bin/bash\n# You are given a word. Your task is to find the closest\
    \ vowel that stands between \n# two consonants from the right side of the word\
    \ (case sensitive).\n# Vowels in the beginning and ending doesn't count. Return\
    \ empty string if you didn't\n# find any vowel met the above condition. \n# You\
    \ may assume that the given string contains English letter only.\n# Example:\n\
    #\n# $1 is a string\nget_closest_vowel() {\n    local word=$1\n    local len=${#word}\n\
    \    local i=0\n    local j=0\n    local k=0\n    local vowel=''\n    local vowels=('a'\
    \ 'e' 'i' 'o' 'u')\n    local consonants=('b' 'c' 'd' 'f' 'g' 'h' 'j' 'k' 'l'\
    \ 'm' 'n' 'p' 'q' 'r' 's' 't' 'v' 'w' 'x' 'y' 'z')\n    local is_vowel=0\n   \
    \ local is_consonant=0\n    local is_found=0\n    local result=''\n    local tmp=''\n\
    \    local tmp_len=0\n    local tmp_i=0\n    local tmp_j=0\n    local tmp_k=0\n\
    \    local tmp_vowel=''\n    local tmp_is_vowel=0\n    local tmp_is_consonant=0\n\
    \    local tmp_is_found=0\n    local tmp_result=''\n    local tmp_tmp=''\n   \
    \ local tmp_tmp_len=0\n    local tmp_tmp_i=0\n    local tmp_tmp_j=0\n    local\
    \ tmp_tmp_k=0\n    local tmp_tmp_vowel=''\n    local tmp_tmp_is_vowel=0\n    local\
    \ tmp_tmp_is_consonant=0\n    local tmp_tmp_is_found=0\n    local tmp_tmp_result=''\n\
    \    local tmp_tmp_tmp=''\n    local tmp_tmp_tmp_len=0\n    local tmp_tmp_tmp_i=0\n\
    \    local tmp_tmp_tmp_j=0\n    local tmp_tmp_tmp_k=0\n    local tmp_tmp_tmp_vowel=''\n\
    \    local tmp_tmp_tmp_is_vowel=0\n    local tmp_tmp_tmp_is_consonant=0\n    local\
    \ tmp_tmp_tmp_is_found=0\n    local tmp_tmp_tmp_result=''\n    local tmp_tmp_tmp_tmp=''\n\
    \    local tmp_tmp_\n}\n\ncandidate() {\n    get_closest_vowel \"$@\"\n}\n\nset\
    \ -e\nrun_test() {\n    [[ $(candidate \"yogurt\") = \"u\" ]]\n    [[ $(candidate\
    \ \"full\") = \"u\" ]]\n    [[ $(candidate \"easy\") = \"\" ]]\n    [[ $(candidate\
    \ \"eAsy\") = \"\" ]]\n    [[ $(candidate \"ali\") = \"\" ]]\n    [[ $(candidate\
    \ \"bad\") = \"a\" ]]\n    [[ $(candidate \"most\") = \"o\" ]]\n    [[ $(candidate\
    \ \"ab\") = \"\" ]]\n    [[ $(candidate \"ba\") = \"\" ]]\n    [[ $(candidate\
    \ \"quick\") = \"\" ]]\n    [[ $(candidate \"anime\") = \"i\" ]]\n    [[ $(candidate\
    \ \"Asia\") = \"\" ]]\n    [[ $(candidate \"Above\") = \"o\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660002112
- exit_code: 1
  program: "#!/bin/bash\n# You are given a word. Your task is to find the closest\
    \ vowel that stands between \n# two consonants from the right side of the word\
    \ (case sensitive).\n# Vowels in the beginning and ending doesn't count. Return\
    \ empty string if you didn't\n# find any vowel met the above condition. \n# You\
    \ may assume that the given string contains English letter only.\n# Example:\n\
    #\n# $1 is a string\nget_closest_vowel() {\n    local word=$1\n    local len=${#word}\n\
    \    local i=0\n    local j=0\n    local k=0\n    local vowels=\"aeiou\"\n   \
    \ local consonants=\"bcdfghjklmnpqrstvwxyz\"\n    local result=\"\"\n    local\
    \ found=0\n    local found_i=0\n    local found_j=0\n    local found_k=0\n   \
    \ local found_len=0\n    local found_vowel=\"\"\n    local found_consonant=\"\"\
    \n    local found_consonant_left=\"\"\n    local found_consonant_right=\"\"\n\
    \    local found_vowel_left=\"\"\n    local found_vowel_right=\"\"\n    local\
    \ found_vowel_left_len=0\n    local found_vowel_right_len=0\n    local found_consonant_left_len=0\n\
    \    local found_consonant_right_len=0\n    local found_vowel_left_len_min=0\n\
    \    local found_vowel_right_len_min=0\n    local found_consonant_left_len_min=0\n\
    \    local found_consonant_right_len_min=0\n    local found_vowel_left_len_max=0\n\
    \    local found_vowel_right_len_max=0\n    local found_consonant_left_len_max=0\n\
    \    local found_consonant_right_len_max=0\n    local found_vowel_left_len_min_i=0\n\
    \    local found_vowel_right_len_min_i=0\n    local found_consonant_left_len_min_i=0\n\
    \    local found_consonant_right_len_min_i=0\n    local found_vowel_left_len_max_i=0\n\
    \    local found_vowel_right_len_max_i=0\n    local found_consonant_left_len_max_i=0\n\
    \    local found_consonant_right_len_max_i=0\n    local found_vowel_left_len_min_\n\
    }\n\ncandidate() {\n    get_closest_vowel \"$@\"\n}\n\nset -e\nrun_test() {\n\
    \    [[ $(candidate \"yogurt\") = \"u\" ]]\n    [[ $(candidate \"full\") = \"\
    u\" ]]\n    [[ $(candidate \"easy\") = \"\" ]]\n    [[ $(candidate \"eAsy\") =\
    \ \"\" ]]\n    [[ $(candidate \"ali\") = \"\" ]]\n    [[ $(candidate \"bad\")\
    \ = \"a\" ]]\n    [[ $(candidate \"most\") = \"o\" ]]\n    [[ $(candidate \"ab\"\
    ) = \"\" ]]\n    [[ $(candidate \"ba\") = \"\" ]]\n    [[ $(candidate \"quick\"\
    ) = \"\" ]]\n    [[ $(candidate \"anime\") = \"i\" ]]\n    [[ $(candidate \"Asia\"\
    ) = \"\" ]]\n    [[ $(candidate \"Above\") = \"o\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660002112
- exit_code: 1
  program: "#!/bin/bash\n# You are given a word. Your task is to find the closest\
    \ vowel that stands between \n# two consonants from the right side of the word\
    \ (case sensitive).\n# Vowels in the beginning and ending doesn't count. Return\
    \ empty string if you didn't\n# find any vowel met the above condition. \n# You\
    \ may assume that the given string contains English letter only.\n# Example:\n\
    #\n# $1 is a string\nget_closest_vowel() {\n    local word=\"$1\"\n    local vowels=\"\
    aeiou\"\n    local consonants=\"bcdfghjklmnpqrstvwxyz\"\n    local result=\"\"\
    \n    local i=0\n    local j=0\n    local k=0\n    local l=0\n    local m=0\n\
    \    local n=0\n    local o=0\n    local p=0\n    local q=0\n    local r=0\n \
    \   local s=0\n    local t=0\n    local u=0\n    local v=0\n    local w=0\n  \
    \  local x=0\n    local y=0\n    local z=0\n    local a=0\n    local b=0\n   \
    \ local c=0\n    local d=0\n    local e=0\n    local f=0\n    local g=0\n    local\
    \ h=0\n    local i=0\n    local j=0\n    local k=0\n    local l=0\n    local m=0\n\
    \    local n=0\n    local o=0\n    local p=0\n    local q=0\n    local r=0\n \
    \   local s=0\n    local t=0\n    local u=0\n    local v=0\n    local w=0\n  \
    \  local x=0\n    local y=0\n    local z=0\n    local a=0\n    local b=0\n   \
    \ local c=0\n    local d=0\n    local e=0\n    local f=0\n    local g=0\n    local\
    \ h=0\n    local i=0\n    local j=0\n    local k=0\n    local l=0\n    local m=0\n\
    \    local n=0\n    local o=0\n    local p=0\n    local q=0\n    local r=0\n \
    \   local s=0\n    local t=0\n    local u=0\n    local v=0\n    local w=0\n  \
    \  local x=0\n    local y=0\n    local z=0\n    local a=0\n    local b=0\n   \
    \ local c=0\n    local d=0\n    local e=0\n    local f=0\n    local g=0\n    local\
    \ h=0\n}\n\ncandidate() {\n    get_closest_vowel \"$@\"\n}\n\nset -e\nrun_test()\
    \ {\n    [[ $(candidate \"yogurt\") = \"u\" ]]\n    [[ $(candidate \"full\") =\
    \ \"u\" ]]\n    [[ $(candidate \"easy\") = \"\" ]]\n    [[ $(candidate \"eAsy\"\
    ) = \"\" ]]\n    [[ $(candidate \"ali\") = \"\" ]]\n    [[ $(candidate \"bad\"\
    ) = \"a\" ]]\n    [[ $(candidate \"most\") = \"o\" ]]\n    [[ $(candidate \"ab\"\
    ) = \"\" ]]\n    [[ $(candidate \"ba\") = \"\" ]]\n    [[ $(candidate \"quick\"\
    ) = \"\" ]]\n    [[ $(candidate \"anime\") = \"i\" ]]\n    [[ $(candidate \"Asia\"\
    ) = \"\" ]]\n    [[ $(candidate \"Above\") = \"o\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660002112
- exit_code: 1
  program: "#!/bin/bash\n# You are given a word. Your task is to find the closest\
    \ vowel that stands between \n# two consonants from the right side of the word\
    \ (case sensitive).\n# Vowels in the beginning and ending doesn't count. Return\
    \ empty string if you didn't\n# find any vowel met the above condition. \n# You\
    \ may assume that the given string contains English letter only.\n# Example:\n\
    #\n# $1 is a string\nget_closest_vowel() {\n    local word=$1\n    local i=${#word}\n\
    \    local last_vowel=\n    local last_consonant=\n    local last_vowel_pos=\n\
    \    local last_consonant_pos=\n    local closest_vowel=\n    local closest_vowel_pos=\n\
    \    local closest_vowel_dist=\n    local vowel_dist=\n    local vowel_pos=\n\
    \    local vowel=\n    local consonant=\n    local consonant_pos=\n    local consonant_dist=\n\
    \    local closest_consonant=\n    local closest_consonant_pos=\n    local closest_consonant_dist=\n\
    \    local closest_vowel_dist=\n    local closest_vowel_pos=\n    local closest_vowel=\n\
    \    local closest_consonant_dist=\n    local closest_consonant_pos=\n    local\
    \ closest_consonant=\n    local closest_vowel_dist=\n    local closest_vowel_pos=\n\
    \    local closest_vowel=\n    local closest_consonant_dist=\n    local closest_consonant_pos=\n\
    \    local closest_consonant=\n    local closest_vowel_dist=\n    local closest_vowel_pos=\n\
    \    local closest_vowel=\n    local closest_consonant_dist=\n    local closest_consonant_pos=\n\
    \    local closest_consonant=\n    local closest_vowel_dist=\n    local closest_vowel_pos=\n\
    \    local closest_vowel=\n    local closest_consonant_dist=\n    local closest_consonant_pos=\n\
    \    local closest_consonant=\n    local closest_vowel_dist=\n    local closest_vowel_pos=\n\
    \    local closest_vowel=\n    local closest_consonant_dist=\n    local closest_consonant_pos=\n\
    \    local closest_consonant=\n    local closest_vowel_dist=\n    local closest_vowel_pos=\n\
    \    local closest_vowel=\n    local closest_consonant_dist=\n   \n}\n\ncandidate()\
    \ {\n    get_closest_vowel \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate\
    \ \"yogurt\") = \"u\" ]]\n    [[ $(candidate \"full\") = \"u\" ]]\n    [[ $(candidate\
    \ \"easy\") = \"\" ]]\n    [[ $(candidate \"eAsy\") = \"\" ]]\n    [[ $(candidate\
    \ \"ali\") = \"\" ]]\n    [[ $(candidate \"bad\") = \"a\" ]]\n    [[ $(candidate\
    \ \"most\") = \"o\" ]]\n    [[ $(candidate \"ab\") = \"\" ]]\n    [[ $(candidate\
    \ \"ba\") = \"\" ]]\n    [[ $(candidate \"quick\") = \"\" ]]\n    [[ $(candidate\
    \ \"anime\") = \"i\" ]]\n    [[ $(candidate \"Asia\") = \"\" ]]\n    [[ $(candidate\
    \ \"Above\") = \"o\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660002112
- exit_code: 1
  program: "#!/bin/bash\n# You are given a word. Your task is to find the closest\
    \ vowel that stands between \n# two consonants from the right side of the word\
    \ (case sensitive).\n# Vowels in the beginning and ending doesn't count. Return\
    \ empty string if you didn't\n# find any vowel met the above condition. \n# You\
    \ may assume that the given string contains English letter only.\n# Example:\n\
    #\n# $1 is a string\nget_closest_vowel() {\n  local word=$1\n  local len=${#word}\n\
    \  local i=0\n  local vowel_pos=0\n  local vowel_pos_prev=0\n  local vowel_pos_next=0\n\
    \  local vowel_pos_prev_prev=0\n  local vowel_pos_next_next=0\n  local vowel_pos_prev_prev_prev=0\n\
    \  local vowel_pos_next_next_next=0\n  local vowel_pos_prev_prev_prev_prev=0\n\
    \  local vowel_pos_next_next_next_next=0\n  local vowel_pos_prev_prev_prev_prev_prev=0\n\
    \  local vowel_pos_next_next_next_next_next=0\n  local vowel_pos_prev_prev_prev_prev_prev_prev=0\n\
    \  local vowel_pos_next_next_next_next_next_next=0\n  local vowel_pos_prev_prev_prev_prev_prev_prev_prev=0\n\
    \  local vowel_pos_next_next_next_next_next_next_next=0\n  local vowel_pos_prev_prev_prev_prev_prev_prev_prev_prev=0\n\
    \  local vowel_pos_next_next_next_next_next_next_next_next=0\n  local vowel_pos_prev_prev_prev_prev_prev_prev_prev_prev_prev=0\n\
    \  local vowel_pos_next_next_next_next_next_next_next_next_next=0\n  local vowel_pos_prev_prev_prev_prev_prev_prev_prev_prev_prev_prev=0\n\
    \  local vowel_pos_next_next_next_next_next_next_next_next_next_next=0\n  local\
    \ vowel_pos_prev_prev_prev_prev_prev_prev_prev_prev_prev_prev_prev=0\n  local\
    \ vowel_pos_next_next_next_next_next_next_next_next_next_next_next=0\n  local\
    \ vowel_pos_prev_prev_prev_prev_prev_prev_prev_prev_prev_prev_prev_prev=0\n  local\
    \ vowel_pos_next_next_\n}\n\ncandidate() {\n    get_closest_vowel \"$@\"\n}\n\n\
    set -e\nrun_test() {\n    [[ $(candidate \"yogurt\") = \"u\" ]]\n    [[ $(candidate\
    \ \"full\") = \"u\" ]]\n    [[ $(candidate \"easy\") = \"\" ]]\n    [[ $(candidate\
    \ \"eAsy\") = \"\" ]]\n    [[ $(candidate \"ali\") = \"\" ]]\n    [[ $(candidate\
    \ \"bad\") = \"a\" ]]\n    [[ $(candidate \"most\") = \"o\" ]]\n    [[ $(candidate\
    \ \"ab\") = \"\" ]]\n    [[ $(candidate \"ba\") = \"\" ]]\n    [[ $(candidate\
    \ \"quick\") = \"\" ]]\n    [[ $(candidate \"anime\") = \"i\" ]]\n    [[ $(candidate\
    \ \"Asia\") = \"\" ]]\n    [[ $(candidate \"Above\") = \"o\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660002112
- exit_code: 1
  program: "#!/bin/bash\n# You are given a word. Your task is to find the closest\
    \ vowel that stands between \n# two consonants from the right side of the word\
    \ (case sensitive).\n# Vowels in the beginning and ending doesn't count. Return\
    \ empty string if you didn't\n# find any vowel met the above condition. \n# You\
    \ may assume that the given string contains English letter only.\n# Example:\n\
    #\n# $1 is a string\nget_closest_vowel() {\n    local word=$1\n    local len=${#word}\n\
    \    local i=0\n    local vowel=\"\"\n    local prev=\"\"\n    local next=\"\"\
    \n    local result=\"\"\n    local vowels=\"aeiou\"\n    local consonants=\"bcdfghjklmnpqrstvwxyz\"\
    \n    local is_vowel=0\n    local is_consonant=0\n    local is_prev_consonant=0\n\
    \    local is_next_consonant=0\n    local is_prev_vowel=0\n    local is_next_vowel=0\n\
    \    local is_prev_empty=0\n    local is_next_empty=0\n    local is_prev_consonant_or_empty=0\n\
    \    local is_next_consonant_or_empty=0\n    local is_prev_vowel_or_empty=0\n\
    \    local is_next_vowel_or_empty=0\n    local is_prev_consonant_and_next_consonant=0\n\
    \    local is_prev_vowel_and_next_vowel=0\n    local is_prev_consonant_and_next_vowel=0\n\
    \    local is_prev_vowel_and_next_consonant=0\n    local is_prev_consonant_and_next_consonant_or_empty=0\n\
    \    local is_prev_vowel_and_next_vowel_or_empty=0\n    local is_prev_consonant_and_next_vowel_or_empty=0\n\
    \    local is_prev_vowel_and_next_consonant_or_empty=0\n    local is_prev_consonant_or_empty_and_next_consonant=0\n\
    \    local is_prev_vowel_or_empty_and_next_vowel=0\n    local is_prev_consonant_or_empty_and_next_vowel=0\n\
    \    local is_prev_vowel_or_empty_and_next_consonant=0\n    local is_prev_consonant_or_empty_and\n\
    }\n\ncandidate() {\n    get_closest_vowel \"$@\"\n}\n\nset -e\nrun_test() {\n\
    \    [[ $(candidate \"yogurt\") = \"u\" ]]\n    [[ $(candidate \"full\") = \"\
    u\" ]]\n    [[ $(candidate \"easy\") = \"\" ]]\n    [[ $(candidate \"eAsy\") =\
    \ \"\" ]]\n    [[ $(candidate \"ali\") = \"\" ]]\n    [[ $(candidate \"bad\")\
    \ = \"a\" ]]\n    [[ $(candidate \"most\") = \"o\" ]]\n    [[ $(candidate \"ab\"\
    ) = \"\" ]]\n    [[ $(candidate \"ba\") = \"\" ]]\n    [[ $(candidate \"quick\"\
    ) = \"\" ]]\n    [[ $(candidate \"anime\") = \"i\" ]]\n    [[ $(candidate \"Asia\"\
    ) = \"\" ]]\n    [[ $(candidate \"Above\") = \"o\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660002112
- exit_code: 1
  program: "#!/bin/bash\n# You are given a word. Your task is to find the closest\
    \ vowel that stands between \n# two consonants from the right side of the word\
    \ (case sensitive).\n# Vowels in the beginning and ending doesn't count. Return\
    \ empty string if you didn't\n# find any vowel met the above condition. \n# You\
    \ may assume that the given string contains English letter only.\n# Example:\n\
    #\n# $1 is a string\nget_closest_vowel() {\n    local word=$1\n    local len=${#word}\n\
    \    local i=0\n    local j=0\n    local vowel=''\n    local vowel_index=0\n \
    \   local vowel_len=0\n    local vowel_len_min=0\n    local vowel_index_min=0\n\
    \    local vowel_min=''\n    local vowel_min_index=0\n    local vowel_min_len=0\n\
    \    local vowel_min_len_min=0\n    local vowel_min_index_min=0\n    local vowel_min_min=''\n\
    \    local vowel_min_min_index=0\n    local vowel_min_min_len=0\n    local vowel_min_min_len_min=0\n\
    \    local vowel_min_min_index_min=0\n    local vowel_min_min_min=''\n    local\
    \ vowel_min_min_min_index=0\n    local vowel_min_min_min_len=0\n    local vowel_min_min_min_len_min=0\n\
    \    local vowel_min_min_min_index_min=0\n    local vowel_min_min_min_min=''\n\
    \    local vowel_min_min_min_min_index=0\n    local vowel_min_min_min_min_len=0\n\
    \    local vowel_min_min_min_min_len_min=0\n    local vowel_min_min_min_min_index_min=0\n\
    \    local vowel_min_min_min_min_min=''\n    local vowel_min_min_min_min_min_index=0\n\
    \    local vowel_min_min_min_min_min_len=0\n    local vowel_min_min_min_min_min_len_min=0\n\
    \    local vowel_min_min_min_min_min_index_min=0\n    local vowel_min_min_min_min_min_min=''\n\
    \    local vowel_min_min_min_min_min_min_index=0\n    local vowel_min_min_min_min_min_min_len=0\n\
    \    local vowel_min_min_min_min_min_min_len_min=0\n    local\n}\n\ncandidate()\
    \ {\n    get_closest_vowel \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate\
    \ \"yogurt\") = \"u\" ]]\n    [[ $(candidate \"full\") = \"u\" ]]\n    [[ $(candidate\
    \ \"easy\") = \"\" ]]\n    [[ $(candidate \"eAsy\") = \"\" ]]\n    [[ $(candidate\
    \ \"ali\") = \"\" ]]\n    [[ $(candidate \"bad\") = \"a\" ]]\n    [[ $(candidate\
    \ \"most\") = \"o\" ]]\n    [[ $(candidate \"ab\") = \"\" ]]\n    [[ $(candidate\
    \ \"ba\") = \"\" ]]\n    [[ $(candidate \"quick\") = \"\" ]]\n    [[ $(candidate\
    \ \"anime\") = \"i\" ]]\n    [[ $(candidate \"Asia\") = \"\" ]]\n    [[ $(candidate\
    \ \"Above\") = \"o\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660002112
- exit_code: 1
  program: "#!/bin/bash\n# You are given a word. Your task is to find the closest\
    \ vowel that stands between \n# two consonants from the right side of the word\
    \ (case sensitive).\n# Vowels in the beginning and ending doesn't count. Return\
    \ empty string if you didn't\n# find any vowel met the above condition. \n# You\
    \ may assume that the given string contains English letter only.\n# Example:\n\
    #\n# $1 is a string\nget_closest_vowel() {\n    local word=\"$1\"\n    local word_len=${#word}\n\
    \    local i=0\n    local j=0\n    local vowel_index=0\n    local vowel_index_arr=()\n\
    \    local vowel_index_arr_len=0\n    local vowel_index_arr_last_index=0\n   \
    \ local closest_vowel_index=0\n    local closest_vowel_index_arr=()\n    local\
    \ closest_vowel_index_arr_len=0\n    local closest_vowel_index_arr_last_index=0\n\
    \    local closest_vowel_index_arr_last_index_value=0\n    local closest_vowel_index_arr_last_index_value_len=0\n\
    \    local closest_vowel_index_arr_last_index_value_len_half=0\n    local closest_vowel_index_arr_last_index_value_len_half_1=0\n\
    \    local closest_vowel_index_arr_last_index_value_len_half_2=0\n    local closest_vowel_index_arr_last_index_value_len_half_1_value=0\n\
    \    local closest_vowel_index_arr_last_index_value_len_half_2_value=0\n    local\
    \ closest_vowel_index_arr_last_index_value_len_half_1_value_len=0\n    local closest_vowel_index_arr_last_index_value_len_half_2_value_len=0\n\
    \    local closest_vowel_index_arr_last_index_value_len_half_1_value_len_half=0\n\
    \    local closest_vowel_index_arr_last_index_value_len_half_2_value_len_half=0\n\
    \    local closest_vowel_index_arr_last_index_value_len_half_1_value_len_half_1=0\n\
    \    local closest_vowel_index_arr_last_index_value_len_half_2_value_len_half_1=0\n\
    \    local closest_vowel_index_\n}\n\ncandidate() {\n    get_closest_vowel \"\
    $@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"yogurt\") = \"u\" ]]\n \
    \   [[ $(candidate \"full\") = \"u\" ]]\n    [[ $(candidate \"easy\") = \"\" ]]\n\
    \    [[ $(candidate \"eAsy\") = \"\" ]]\n    [[ $(candidate \"ali\") = \"\" ]]\n\
    \    [[ $(candidate \"bad\") = \"a\" ]]\n    [[ $(candidate \"most\") = \"o\"\
    \ ]]\n    [[ $(candidate \"ab\") = \"\" ]]\n    [[ $(candidate \"ba\") = \"\"\
    \ ]]\n    [[ $(candidate \"quick\") = \"\" ]]\n    [[ $(candidate \"anime\") =\
    \ \"i\" ]]\n    [[ $(candidate \"Asia\") = \"\" ]]\n    [[ $(candidate \"Above\"\
    ) = \"o\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660002112
- exit_code: 1
  program: "#!/bin/bash\n# You are given a word. Your task is to find the closest\
    \ vowel that stands between \n# two consonants from the right side of the word\
    \ (case sensitive).\n# Vowels in the beginning and ending doesn't count. Return\
    \ empty string if you didn't\n# find any vowel met the above condition. \n# You\
    \ may assume that the given string contains English letter only.\n# Example:\n\
    #\n# $1 is a string\nget_closest_vowel() {\n    local word=\"$1\"\n    local len=${#word}\n\
    \    local i=$len\n    local last_vowel_index=0\n    local last_consonant_index=0\n\
    \    local last_vowel=''\n    local last_consonant=''\n    local closest_vowel=''\n\
    \    local closest_vowel_index=0\n    local closest_vowel_distance=0\n    local\
    \ current_vowel_distance=0\n    local current_vowel=''\n    local current_vowel_index=0\n\
    \    local current_consonant=''\n    local current_consonant_index=0\n    local\
    \ current_char=''\n    local current_char_index=0\n    local is_vowel=0\n    local\
    \ is_consonant=0\n    local is_first_vowel=0\n    local is_first_consonant=0\n\
    \    local is_last_vowel=0\n    local is_last_consonant=0\n    local is_closest_vowel=0\n\
    \    local is_closest_consonant=0\n    local is_current_vowel=0\n    local is_current_consonant=0\n\
    \    local is_current_char=0\n    local is_current_char_vowel=0\n    local is_current_char_consonant=0\n\
    \    local is_current_char_first=0\n    local is_current_char_last=0\n    local\
    \ is_current_char_closest=0\n    local is_current_char_current=0\n    local is_current_char_closest_vowel=0\n\
    \    local is_current_char_closest_consonant=0\n    local is_current_char_current_vowel=0\n\
    \    local is_current_char_current_consonant=0\n    local is_current_char_first_vowel=0\n\
    \    local is_current_char_first_consonant=0\n    local is_current_char_last_vowel=0\n\
    \    local is_current_char_last_conson\n}\n\ncandidate() {\n    get_closest_vowel\
    \ \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"yogurt\") = \"u\" ]]\n\
    \    [[ $(candidate \"full\") = \"u\" ]]\n    [[ $(candidate \"easy\") = \"\"\
    \ ]]\n    [[ $(candidate \"eAsy\") = \"\" ]]\n    [[ $(candidate \"ali\") = \"\
    \" ]]\n    [[ $(candidate \"bad\") = \"a\" ]]\n    [[ $(candidate \"most\") =\
    \ \"o\" ]]\n    [[ $(candidate \"ab\") = \"\" ]]\n    [[ $(candidate \"ba\") =\
    \ \"\" ]]\n    [[ $(candidate \"quick\") = \"\" ]]\n    [[ $(candidate \"anime\"\
    ) = \"i\" ]]\n    [[ $(candidate \"Asia\") = \"\" ]]\n    [[ $(candidate \"Above\"\
    ) = \"o\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660002112
- exit_code: 1
  program: "#!/bin/bash\n# You are given a word. Your task is to find the closest\
    \ vowel that stands between \n# two consonants from the right side of the word\
    \ (case sensitive).\n# Vowels in the beginning and ending doesn't count. Return\
    \ empty string if you didn't\n# find any vowel met the above condition. \n# You\
    \ may assume that the given string contains English letter only.\n# Example:\n\
    #\n# $1 is a string\nget_closest_vowel() {\n    local word=$1\n    local len=${#word}\n\
    \    local i=0\n    local j=0\n    local k=0\n    local vowel=''\n    local consonant=''\n\
    \    local closest_vowel=''\n    local closest_vowel_index=0\n    local closest_consonant_index=0\n\
    \    local closest_consonant=''\n    local closest_consonant_index=0\n    local\
    \ closest_consonant=''\n    local closest_consonant_index=0\n    local closest_consonant=''\n\
    \    local closest_consonant_index=0\n    local closest_consonant=''\n    local\
    \ closest_consonant_index=0\n    local closest_consonant=''\n    local closest_consonant_index=0\n\
    \    local closest_consonant=''\n    local closest_consonant_index=0\n    local\
    \ closest_consonant=''\n    local closest_consonant_index=0\n    local closest_consonant=''\n\
    \    local closest_consonant_index=0\n    local closest_consonant=''\n    local\
    \ closest_consonant_index=0\n    local closest_consonant=''\n    local closest_consonant_index=0\n\
    \    local closest_consonant=''\n    local closest_consonant_index=0\n    local\
    \ closest_consonant=''\n    local closest_consonant_index=0\n    local closest_consonant=''\n\
    \    local closest_consonant_index=0\n    local closest_consonant=''\n    local\
    \ closest_consonant_index=0\n    local closest_consonant=''\n    local closest_consonant_index=0\n\
    \    local closest_consonant=''\n    local closest_consonant_index=0\n    local\
    \ closest_consonant=''\n    local closest_consonant_index=0\n    local closest_consonant=''\n\
    \    local closest_consonant_index=0\n    local closest_consonant=''\n    local\
    \ closest_consonant_index=0\n    local closest_consonant=''\n    local closest\n\
    }\n\ncandidate() {\n    get_closest_vowel \"$@\"\n}\n\nset -e\nrun_test() {\n\
    \    [[ $(candidate \"yogurt\") = \"u\" ]]\n    [[ $(candidate \"full\") = \"\
    u\" ]]\n    [[ $(candidate \"easy\") = \"\" ]]\n    [[ $(candidate \"eAsy\") =\
    \ \"\" ]]\n    [[ $(candidate \"ali\") = \"\" ]]\n    [[ $(candidate \"bad\")\
    \ = \"a\" ]]\n    [[ $(candidate \"most\") = \"o\" ]]\n    [[ $(candidate \"ab\"\
    ) = \"\" ]]\n    [[ $(candidate \"ba\") = \"\" ]]\n    [[ $(candidate \"quick\"\
    ) = \"\" ]]\n    [[ $(candidate \"anime\") = \"i\" ]]\n    [[ $(candidate \"Asia\"\
    ) = \"\" ]]\n    [[ $(candidate \"Above\") = \"o\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660002112
- exit_code: 1
  program: "#!/bin/bash\n# You are given a word. Your task is to find the closest\
    \ vowel that stands between \n# two consonants from the right side of the word\
    \ (case sensitive).\n# Vowels in the beginning and ending doesn't count. Return\
    \ empty string if you didn't\n# find any vowel met the above condition. \n# You\
    \ may assume that the given string contains English letter only.\n# Example:\n\
    #\n# $1 is a string\nget_closest_vowel() {\n    local word=$1\n    local last_char=${word:\
    \ -1}\n    local second_last_char=${word: -2:1}\n    local vowels=\"aeiou\"\n\
    \    local result=\"\"\n    local i=0\n    local j=0\n    local k=0\n    local\
    \ l=0\n    local m=0\n    local n=0\n    local o=0\n    local p=0\n    local q=0\n\
    \    local r=0\n    local s=0\n    local t=0\n    local u=0\n    local v=0\n \
    \   local w=0\n    local x=0\n    local y=0\n    local z=0\n    local a=0\n  \
    \  local b=0\n    local c=0\n    local d=0\n    local e=0\n    local f=0\n   \
    \ local g=0\n    local h=0\n    local i=0\n    local j=0\n    local k=0\n    local\
    \ l=0\n    local m=0\n    local n=0\n    local o=0\n    local p=0\n    local q=0\n\
    \    local r=0\n    local s=0\n    local t=0\n    local u=0\n    local v=0\n \
    \   local w=0\n    local x=0\n    local y=0\n    local z=0\n    local a=0\n  \
    \  local b=0\n    local c=0\n    local d=0\n    local e=0\n    local f=0\n   \
    \ local g=0\n    local h=0\n    local i=0\n    local j=0\n    local k=0\n    local\
    \ l=0\n    local m=0\n    local n=0\n    local o=0\n    local p=0\n    local q=0\n\
    \    local r=0\n    local s=0\n    local t=0\n    local u=0\n    local v=0\n \
    \   local w=0\n    local x=0\n    local y=0\n    local z=0\n    local a=0\n  \
    \  local b=0\n    local c=0\n    local d=0\n    local e=0\n    local f=0\n   \
    \ local g=\n}\n\ncandidate() {\n    get_closest_vowel \"$@\"\n}\n\nset -e\nrun_test()\
    \ {\n    [[ $(candidate \"yogurt\") = \"u\" ]]\n    [[ $(candidate \"full\") =\
    \ \"u\" ]]\n    [[ $(candidate \"easy\") = \"\" ]]\n    [[ $(candidate \"eAsy\"\
    ) = \"\" ]]\n    [[ $(candidate \"ali\") = \"\" ]]\n    [[ $(candidate \"bad\"\
    ) = \"a\" ]]\n    [[ $(candidate \"most\") = \"o\" ]]\n    [[ $(candidate \"ab\"\
    ) = \"\" ]]\n    [[ $(candidate \"ba\") = \"\" ]]\n    [[ $(candidate \"quick\"\
    ) = \"\" ]]\n    [[ $(candidate \"anime\") = \"i\" ]]\n    [[ $(candidate \"Asia\"\
    ) = \"\" ]]\n    [[ $(candidate \"Above\") = \"o\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660002112
- exit_code: 1
  program: "#!/bin/bash\n# You are given a word. Your task is to find the closest\
    \ vowel that stands between \n# two consonants from the right side of the word\
    \ (case sensitive).\n# Vowels in the beginning and ending doesn't count. Return\
    \ empty string if you didn't\n# find any vowel met the above condition. \n# You\
    \ may assume that the given string contains English letter only.\n# Example:\n\
    #\n# $1 is a string\nget_closest_vowel() {\n    local word=$1\n    local len=${#word}\n\
    \    local i=0\n    local j=0\n    local vowel_pos=0\n    local vowel_pos_list=()\n\
    \    local vowel_list=()\n    local vowel_list_len=0\n    local consonant_pos=0\n\
    \    local consonant_pos_list=()\n    local consonant_list=()\n    local consonant_list_len=0\n\
    \    local closest_vowel_pos=0\n    local closest_vowel_pos_list=()\n    local\
    \ closest_vowel_list=()\n    local closest_vowel_list_len=0\n    local closest_vowel=''\n\
    \    local closest_vowel_len=0\n    local closest_vowel_index=0\n    local closest_vowel_index_list=()\n\
    \    local closest_vowel_index_list_len=0\n    local closest_vowel_index_list_index=0\n\
    \    local closest_vowel_index_list_index_len=0\n    local closest_vowel_index_list_index_len_index=0\n\
    \    local closest_vowel_index_list_index_len_index_len=0\n    local closest_vowel_index_list_index_len_index_len_index=0\n\
    \    local closest_vowel_index_list_index_len_index_len_index_len=0\n    local\
    \ closest_vowel_index_list_index_len_index_len_index_len_index=0\n    local closest_vowel_index_list_index_len_index_len_index_len_index_len=0\n\
    \    local closest_vowel_index_list_index_len_index_len_index_len_index_len_index=0\n\
    \    local closest_vowel_index_list_index_len_index_len_index_len_index_len_index_len=0\n\
    \    local closest_vowel_index_list_index_len_index_len_index_len_index_len_index_len_index=0\n\
    \    local closest_vow\n}\n\ncandidate() {\n    get_closest_vowel \"$@\"\n}\n\n\
    set -e\nrun_test() {\n    [[ $(candidate \"yogurt\") = \"u\" ]]\n    [[ $(candidate\
    \ \"full\") = \"u\" ]]\n    [[ $(candidate \"easy\") = \"\" ]]\n    [[ $(candidate\
    \ \"eAsy\") = \"\" ]]\n    [[ $(candidate \"ali\") = \"\" ]]\n    [[ $(candidate\
    \ \"bad\") = \"a\" ]]\n    [[ $(candidate \"most\") = \"o\" ]]\n    [[ $(candidate\
    \ \"ab\") = \"\" ]]\n    [[ $(candidate \"ba\") = \"\" ]]\n    [[ $(candidate\
    \ \"quick\") = \"\" ]]\n    [[ $(candidate \"anime\") = \"i\" ]]\n    [[ $(candidate\
    \ \"Asia\") = \"\" ]]\n    [[ $(candidate \"Above\") = \"o\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660002112
- exit_code: 2
  program: "#!/bin/bash\n# You are given a word. Your task is to find the closest\
    \ vowel that stands between \n# two consonants from the right side of the word\
    \ (case sensitive).\n# Vowels in the beginning and ending doesn't count. Return\
    \ empty string if you didn't\n# find any vowel met the above condition. \n# You\
    \ may assume that the given string contains English letter only.\n# Example:\n\
    #\n# $1 is a string\nget_closest_vowel() {\n\tlocal word=$1\n\tlocal len=${#word}\n\
    \tlocal i=0\n\tlocal j=0\n\tlocal vowels=\"aeiou\"\n\tlocal cons=\"bcdfghjklmnpqrstvwxyz\"\
    \n\tlocal vowel=\"\"\n\tlocal cons1=\"\"\n\tlocal cons2=\"\"\n\tlocal cons1_pos=0\n\
    \tlocal cons2_pos=0\n\tlocal vowel_pos=0\n\tlocal min_dist=0\n\tlocal dist=0\n\
    \tlocal min_vowel=\"\"\n\tlocal min_vowel_pos=0\n\tlocal min_cons1=\"\"\n\tlocal\
    \ min_cons1_pos=0\n\tlocal min_cons2=\"\"\n\tlocal min_cons2_pos=0\n\t\n\tfor\
    \ ((i=0; i<len; i++)); do\n\t\tvowel=${word:$i:1}\n\t\tif [[ $vowels =~ $vowel\
    \ ]]; then\n\t\t\tvowel_pos=$i\n\t\t\tfor ((j=0; j<len; j++)); do\n\t\t\t\tcons1=${word:$j:1}\n\
    \t\t\t\tif [[ $cons =~ $cons1 ]]; then\n\t\t\t\t\tcons1_pos=$j\n\t\t\t\t\tfor\
    \ ((k=0; k<len; k++)); do\n\t\t\t\t\t\tcons2=${word:$k:1}\n\t\t\t\t\t\tif [[ $cons\
    \ =~ $cons2 ]]; then\n\t\t\t\t\t\t\tcons2_pos=$k\n\t\t\t\t\t\t\tif [[ $cons1_pos\
    \ -lt $vowel_pos && $vowel_pos -lt $cons2_pos ]]; then\n\t\t\t\t\t\t\t\tdist=$((cons2_pos\
    \ - cons1_pos))\n\t\t\t\t\t\t\t\tif [[ $min_dist -eq 0 || $dist -lt $min_dist\
    \ ]]; then\n\t\t\t\t\t\t\t\t\tmin_dist=$dist\n\t\t\t\t\t\t\t\t\tmin_vowel=$vowel\n\
    \t\t\t\t\t\t\t\t\tmin_vowel_pos\n}\n\ncandidate() {\n    get_closest_vowel \"\
    $@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"yogurt\") = \"u\" ]]\n \
    \   [[ $(candidate \"full\") = \"u\" ]]\n    [[ $(candidate \"easy\") = \"\" ]]\n\
    \    [[ $(candidate \"eAsy\") = \"\" ]]\n    [[ $(candidate \"ali\") = \"\" ]]\n\
    \    [[ $(candidate \"bad\") = \"a\" ]]\n    [[ $(candidate \"most\") = \"o\"\
    \ ]]\n    [[ $(candidate \"ab\") = \"\" ]]\n    [[ $(candidate \"ba\") = \"\"\
    \ ]]\n    [[ $(candidate \"quick\") = \"\" ]]\n    [[ $(candidate \"anime\") =\
    \ \"i\" ]]\n    [[ $(candidate \"Asia\") = \"\" ]]\n    [[ $(candidate \"Above\"\
    ) = \"o\" ]]\n}\n\nrun_test"
  status: SyntaxError
  stderr: '/tmp/tmp5olp_34q.sh: line 50: syntax error near unexpected token `}''

    /tmp/tmp5olp_34q.sh: line 50: `}''

    '
  stdout: ''
  timestamp: 1660002112
- exit_code: 2
  program: "#!/bin/bash\n# You are given a word. Your task is to find the closest\
    \ vowel that stands between \n# two consonants from the right side of the word\
    \ (case sensitive).\n# Vowels in the beginning and ending doesn't count. Return\
    \ empty string if you didn't\n# find any vowel met the above condition. \n# You\
    \ may assume that the given string contains English letter only.\n# Example:\n\
    #\n# $1 is a string\nget_closest_vowel() {\n    local word=$1\n    local vowels=\"\
    aeiou\"\n    local consonants=\"bcdfghjklmnpqrstvwxyz\"\n    local closest_vowel=\"\
    \"\n    local closest_vowel_index=0\n    local closest_vowel_distance=0\n    local\
    \ current_vowel=\"\"\n    local current_vowel_index=0\n    local current_vowel_distance=0\n\
    \    local current_consonant=\"\"\n    local current_consonant_index=0\n    local\
    \ current_consonant_distance=0\n    local i=0\n    local j=0\n    local k=0\n\
    \    local word_length=${#word}\n    local word_length_minus_one=$((word_length\
    \ - 1))\n    local word_length_minus_two=$((word_length - 2))\n    local word_length_minus_three=$((word_length\
    \ - 3))\n    local word_length_minus_four=$((word_length - 4))\n    local word_length_minus_five=$((word_length\
    \ - 5))\n    local word_length_minus_six=$((word_length - 6))\n    local word_length_minus_seven=$((word_length\
    \ - 7))\n    local word_length_minus_eight=$((word_length - 8))\n    local word_length_minus_nine=$((word_length\
    \ - 9))\n    local word_length_minus_ten=$((word_length - 10))\n    local word_length_minus_eleven=$((word_length\
    \ - 11))\n    local word_length_minus_twelve=$((word_length - 12))\n    local\
    \ word_length_minus_thirteen=$((word_length - 13))\n    local word_length_minus_fourteen=$((word_length\
    \ - 14))\n    local word_length_minus_fifteen=$((word_length - 15))\n    local\
    \ word_length_minus_sixteen=$((word_length - 16))\n    local word_length_minus_seventeen=$((word_length\
    \ - 17))\n    local word_length_minus_eighteen=$((word_length - 18))\n    local\
    \ word_length_minus_nineteen=$((word\n}\n\ncandidate() {\n    get_closest_vowel\
    \ \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"yogurt\") = \"u\" ]]\n\
    \    [[ $(candidate \"full\") = \"u\" ]]\n    [[ $(candidate \"easy\") = \"\"\
    \ ]]\n    [[ $(candidate \"eAsy\") = \"\" ]]\n    [[ $(candidate \"ali\") = \"\
    \" ]]\n    [[ $(candidate \"bad\") = \"a\" ]]\n    [[ $(candidate \"most\") =\
    \ \"o\" ]]\n    [[ $(candidate \"ab\") = \"\" ]]\n    [[ $(candidate \"ba\") =\
    \ \"\" ]]\n    [[ $(candidate \"quick\") = \"\" ]]\n    [[ $(candidate \"anime\"\
    ) = \"i\" ]]\n    [[ $(candidate \"Asia\") = \"\" ]]\n    [[ $(candidate \"Above\"\
    ) = \"o\" ]]\n}\n\nrun_test"
  status: SyntaxError
  stderr: '/tmp/tmpgcsdgpqh.sh: line 45: unexpected EOF while looking for matching
    `)''

    /tmp/tmpgcsdgpqh.sh: line 70: syntax error: unexpected end of file

    '
  stdout: ''
  timestamp: 1660002112
- exit_code: 1
  program: "#!/bin/bash\n# You are given a word. Your task is to find the closest\
    \ vowel that stands between \n# two consonants from the right side of the word\
    \ (case sensitive).\n# Vowels in the beginning and ending doesn't count. Return\
    \ empty string if you didn't\n# find any vowel met the above condition. \n# You\
    \ may assume that the given string contains English letter only.\n# Example:\n\
    #\n# $1 is a string\nget_closest_vowel() {\n  local word=\"$1\"\n  local word_len=${#word}\n\
    \  local i=0\n  local j=0\n  local k=0\n  local vowel_pos=0\n  local vowel_pos_arr=()\n\
    \  local vowel_pos_arr_len=0\n  local closest_vowel_pos=0\n  local closest_vowel_pos_len=0\n\
    \  local closest_vowel=\"\"\n  local vowel_arr=(\"a\" \"e\" \"i\" \"o\" \"u\"\
    )\n  local vowel_arr_len=${#vowel_arr[@]}\n  local vowel_arr_len_minus_one=$((vowel_arr_len\
    \ - 1))\n  local vowel_arr_len_minus_two=$((vowel_arr_len - 2))\n  local vowel_arr_len_minus_three=$((vowel_arr_len\
    \ - 3))\n  local vowel_arr_len_minus_four=$((vowel_arr_len - 4))\n  local vowel_arr_len_minus_five=$((vowel_arr_len\
    \ - 5))\n  local vowel_arr_len_minus_six=$((vowel_arr_len - 6))\n  local vowel_arr_len_minus_seven=$((vowel_arr_len\
    \ - 7))\n  local vowel_arr_len_minus_eight=$((vowel_arr_len - 8))\n  local vowel_arr_len_minus_nine=$((vowel_arr_len\
    \ - 9))\n  local vowel_arr_len_minus_ten=$((vowel_arr_len - 10))\n  local vowel_arr_len_minus_eleven=$((vowel_arr_len\
    \ - 11))\n  local vowel_arr_len_minus_twelve=$((vowel_arr_len - 12))\n  local\
    \ vowel_arr_len_minus_thirteen=$((vowel_arr_len - 13))\n  local vowel_arr_len_minus_fourteen=$((vowel_arr_len\
    \ - 14))\n  local vowel_arr_len_minus_fifteen=$((vowel_arr_len - 15))\n  local\
    \ vowel\n}\n\ncandidate() {\n    get_closest_vowel \"$@\"\n}\n\nset -e\nrun_test()\
    \ {\n    [[ $(candidate \"yogurt\") = \"u\" ]]\n    [[ $(candidate \"full\") =\
    \ \"u\" ]]\n    [[ $(candidate \"easy\") = \"\" ]]\n    [[ $(candidate \"eAsy\"\
    ) = \"\" ]]\n    [[ $(candidate \"ali\") = \"\" ]]\n    [[ $(candidate \"bad\"\
    ) = \"a\" ]]\n    [[ $(candidate \"most\") = \"o\" ]]\n    [[ $(candidate \"ab\"\
    ) = \"\" ]]\n    [[ $(candidate \"ba\") = \"\" ]]\n    [[ $(candidate \"quick\"\
    ) = \"\" ]]\n    [[ $(candidate \"anime\") = \"i\" ]]\n    [[ $(candidate \"Asia\"\
    ) = \"\" ]]\n    [[ $(candidate \"Above\") = \"o\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660002112
- exit_code: 1
  program: "#!/bin/bash\n# You are given a word. Your task is to find the closest\
    \ vowel that stands between \n# two consonants from the right side of the word\
    \ (case sensitive).\n# Vowels in the beginning and ending doesn't count. Return\
    \ empty string if you didn't\n# find any vowel met the above condition. \n# You\
    \ may assume that the given string contains English letter only.\n# Example:\n\
    #\n# $1 is a string\nget_closest_vowel() {\n  local word=$1\n  local word_len=${#word}\n\
    \  local i=0\n  local last_consonant_index=0\n  local last_vowel_index=0\n  local\
    \ closest_vowel_index=0\n  local closest_vowel=''\n  local vowels='aeiou'\n  local\
    \ consonants='bcdfghjklmnpqrstvwxyz'\n  local current_char=''\n  local current_char_is_vowel=false\n\
    \  local current_char_is_consonant=false\n  local current_char_is_vowel_or_consonant=false\n\
    \  local current_char_is_vowel_and_consonant=false\n  local current_char_is_vowel_or_consonant_and_consonant=false\n\
    \  local current_char_is_vowel_and_consonant_or_consonant=false\n  local current_char_is_vowel_or_consonant_and_vowel=false\n\
    \  local current_char_is_vowel_and_consonant_or_vowel=false\n  local current_char_is_vowel_or_consonant_and_vowel_or_consonant=false\n\
    \  local current_char_is_vowel_and_consonant_or_vowel_or_consonant=false\n  local\
    \ current_char_is_vowel_or_consonant_and_vowel_and_consonant=false\n  local current_char_is_vowel_and_consonant_or_vowel_and_consonant=false\n\
    \  local current_char_is_vowel_or_consonant_and_vowel_or_consonant_and_consonant=false\n\
    \  local current_char_is_vowel_and_consonant_or_vowel_or_consonant_and_consonant=false\n\
    \  local current_char_is_vowel_or_consonant_and_vowel_and_cons\n}\n\ncandidate()\
    \ {\n    get_closest_vowel \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate\
    \ \"yogurt\") = \"u\" ]]\n    [[ $(candidate \"full\") = \"u\" ]]\n    [[ $(candidate\
    \ \"easy\") = \"\" ]]\n    [[ $(candidate \"eAsy\") = \"\" ]]\n    [[ $(candidate\
    \ \"ali\") = \"\" ]]\n    [[ $(candidate \"bad\") = \"a\" ]]\n    [[ $(candidate\
    \ \"most\") = \"o\" ]]\n    [[ $(candidate \"ab\") = \"\" ]]\n    [[ $(candidate\
    \ \"ba\") = \"\" ]]\n    [[ $(candidate \"quick\") = \"\" ]]\n    [[ $(candidate\
    \ \"anime\") = \"i\" ]]\n    [[ $(candidate \"Asia\") = \"\" ]]\n    [[ $(candidate\
    \ \"Above\") = \"o\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660002112
- exit_code: 1
  program: "#!/bin/bash\n# You are given a word. Your task is to find the closest\
    \ vowel that stands between \n# two consonants from the right side of the word\
    \ (case sensitive).\n# Vowels in the beginning and ending doesn't count. Return\
    \ empty string if you didn't\n# find any vowel met the above condition. \n# You\
    \ may assume that the given string contains English letter only.\n# Example:\n\
    #\n# $1 is a string\nget_closest_vowel() {\n    local word=$1\n    local word_len=${#word}\n\
    \    local i=0\n    local j=0\n    local k=0\n    local closest_vowel=\"\"\n \
    \   local closest_vowel_index=0\n    local closest_vowel_distance=0\n    local\
    \ vowel_index=0\n    local vowel_distance=0\n    local vowel_found=0\n    local\
    \ vowel_list=\"a e i o u\"\n    local vowel=\"\"\n    local consonant=\"\"\n \
    \   local consonant_found=0\n    local consonant_index=0\n    local consonant_distance=0\n\
    \    local consonant_list=\"b c d f g h j k l m n p q r s t v w x y z\"\n    local\
    \ consonant_list_len=${#consonant_list}\n    local vowel_list_len=${#vowel_list}\n\
    \    local word_len=${#word}\n    local word_index=0\n    local word_char=\"\"\
    \n    local word_char_index=0\n    local word_char_distance=0\n    local word_char_found=0\n\
    \    local word_char_list=\"\"\n    local word_char_list_len=0\n    local word_char_list_index=0\n\
    \    local word_char_list_distance=0\n    local word_char_list_found=0\n    local\
    \ word_char_list_char=\"\"\n    local word_char_list_char_index=0\n    local word_char_list_char_distance=0\n\
    \    local word_char_list_char_found=0\n    local word_char_list_char_list=\"\"\
    \n    local word_char_list_char_list_len=0\n    local word_char_list_char_list_index=0\n\
    \    local word_char_list_char_list_distance=0\n    local word_char_list_char_list_found=0\n\
    \    local word_char_list_char_list_char=\"\"\n    local word_char_list_char_list_char_index=0\n\
    \    local word_char_list_char_list_char_distance=0\n    local word_char_list_char\n\
    }\n\ncandidate() {\n    get_closest_vowel \"$@\"\n}\n\nset -e\nrun_test() {\n\
    \    [[ $(candidate \"yogurt\") = \"u\" ]]\n    [[ $(candidate \"full\") = \"\
    u\" ]]\n    [[ $(candidate \"easy\") = \"\" ]]\n    [[ $(candidate \"eAsy\") =\
    \ \"\" ]]\n    [[ $(candidate \"ali\") = \"\" ]]\n    [[ $(candidate \"bad\")\
    \ = \"a\" ]]\n    [[ $(candidate \"most\") = \"o\" ]]\n    [[ $(candidate \"ab\"\
    ) = \"\" ]]\n    [[ $(candidate \"ba\") = \"\" ]]\n    [[ $(candidate \"quick\"\
    ) = \"\" ]]\n    [[ $(candidate \"anime\") = \"i\" ]]\n    [[ $(candidate \"Asia\"\
    ) = \"\" ]]\n    [[ $(candidate \"Above\") = \"o\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660002112
- exit_code: 1
  program: "#!/bin/bash\n# You are given a word. Your task is to find the closest\
    \ vowel that stands between \n# two consonants from the right side of the word\
    \ (case sensitive).\n# Vowels in the beginning and ending doesn't count. Return\
    \ empty string if you didn't\n# find any vowel met the above condition. \n# You\
    \ may assume that the given string contains English letter only.\n# Example:\n\
    #\n# $1 is a string\nget_closest_vowel() {\n    local word=\"$1\"\n    local word_len=${#word}\n\
    \    local i=0\n    local j=0\n    local vowel_arr=()\n    local vowel_arr_len=0\n\
    \    local vowel_index=0\n    local vowel_char=\"\"\n    local closest_vowel=\"\
    \"\n    local closest_vowel_index=0\n    local closest_vowel_char=\"\"\n    local\
    \ closest_vowel_distance=0\n    local vowel_distance=0\n    local vowel_distance_tmp=0\n\
    \    local vowel_distance_min=0\n    local vowel_distance_min_tmp=0\n    local\
    \ vowel_distance_min_index=0\n    local vowel_distance_min_char=\"\"\n    local\
    \ vowel_distance_min_flag=0\n    local vowel_distance_min_flag_tmp=0\n    local\
    \ vowel_distance_min_flag_index=0\n    local vowel_distance_min_flag_char=\"\"\
    \n    local vowel_distance_min_flag_distance=0\n    local vowel_distance_min_flag_distance_tmp=0\n\
    \    local vowel_distance_min_flag_distance_min=0\n    local vowel_distance_min_flag_distance_min_tmp=0\n\
    \    local vowel_distance_min_flag_distance_min_index=0\n    local vowel_distance_min_flag_distance_min_char=\"\
    \"\n    local vowel_distance_min_flag_distance_min_flag=0\n    local vowel_distance_min_flag_distance_min_flag_tmp=0\n\
    \    local vowel_distance_min_flag_distance_min_flag_index=0\n    local vowel_distance_min_flag_distance_min_flag_char=\"\
    \"\n    local vowel_distance_min_flag_distance_min_flag_distance=0\n    local\
    \ vowel_distance_min_flag_distance_min_flag_distance_tmp=0\n    local vowel_distance_min_flag_distance_min_flag_distance_min=0\n\
    \    local vowel_distance_min_flag_distance_min_flag_distance_min_tmp=0\n    local\
    \ vowel_distance_min_flag_distance_min_flag_distance_min_index=0\n}\n\ncandidate()\
    \ {\n    get_closest_vowel \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate\
    \ \"yogurt\") = \"u\" ]]\n    [[ $(candidate \"full\") = \"u\" ]]\n    [[ $(candidate\
    \ \"easy\") = \"\" ]]\n    [[ $(candidate \"eAsy\") = \"\" ]]\n    [[ $(candidate\
    \ \"ali\") = \"\" ]]\n    [[ $(candidate \"bad\") = \"a\" ]]\n    [[ $(candidate\
    \ \"most\") = \"o\" ]]\n    [[ $(candidate \"ab\") = \"\" ]]\n    [[ $(candidate\
    \ \"ba\") = \"\" ]]\n    [[ $(candidate \"quick\") = \"\" ]]\n    [[ $(candidate\
    \ \"anime\") = \"i\" ]]\n    [[ $(candidate \"Asia\") = \"\" ]]\n    [[ $(candidate\
    \ \"Above\") = \"o\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660002112
- exit_code: 1
  program: "#!/bin/bash\n# You are given a word. Your task is to find the closest\
    \ vowel that stands between \n# two consonants from the right side of the word\
    \ (case sensitive).\n# Vowels in the beginning and ending doesn't count. Return\
    \ empty string if you didn't\n# find any vowel met the above condition. \n# You\
    \ may assume that the given string contains English letter only.\n# Example:\n\
    #\n# $1 is a string\nget_closest_vowel() {\n    local word=$1\n    local len=${#word}\n\
    \    local i=0\n    local j=0\n    local k=0\n    local vowel=''\n    local consonant=''\n\
    \    local closest_vowel=''\n    local closest_vowel_index=0\n    local closest_vowel_distance=0\n\
    \    local vowels=('a' 'e' 'i' 'o' 'u')\n    local consonants=('b' 'c' 'd' 'f'\
    \ 'g' 'h' 'j' 'k' 'l' 'm' 'n' 'p' 'q' 'r' 's' 't' 'v' 'w' 'x' 'y' 'z')\n    local\
    \ is_vowel=0\n    local is_consonant=0\n    local is_closest_vowel=0\n    local\
    \ is_closest_vowel_distance=0\n    local is_closest_vowel_index=0\n    local is_closest_vowel_found=0\n\
    \    local is_closest_vowel_not_found=0\n    local is_closest_vowel_found_and_not_found=0\n\
    \    local is_closest_vowel_not_found_and_not_found=0\n    local is_closest_vowel_found_and_found=0\n\
    \    local is_closest_vowel_not_found_and_found=0\n    local is_closest_vowel_found_and_found_and_found=0\n\
    \    local is_closest_vowel_not_found_and_found_and_found=0\n    local is_closest_vowel_found_and_found_and_not_found=0\n\
    \    local is_closest_vowel_not_found_and_found_and_not_found=0\n    local is_closest_vowel_found_and_not_found_and_not_found=0\n\
    \    local is_closest_vowel_not_found_and_not_found\n}\n\ncandidate() {\n    get_closest_vowel\
    \ \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"yogurt\") = \"u\" ]]\n\
    \    [[ $(candidate \"full\") = \"u\" ]]\n    [[ $(candidate \"easy\") = \"\"\
    \ ]]\n    [[ $(candidate \"eAsy\") = \"\" ]]\n    [[ $(candidate \"ali\") = \"\
    \" ]]\n    [[ $(candidate \"bad\") = \"a\" ]]\n    [[ $(candidate \"most\") =\
    \ \"o\" ]]\n    [[ $(candidate \"ab\") = \"\" ]]\n    [[ $(candidate \"ba\") =\
    \ \"\" ]]\n    [[ $(candidate \"quick\") = \"\" ]]\n    [[ $(candidate \"anime\"\
    ) = \"i\" ]]\n    [[ $(candidate \"Asia\") = \"\" ]]\n    [[ $(candidate \"Above\"\
    ) = \"o\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660002112
- exit_code: 1
  program: "#!/bin/bash\n# You are given a word. Your task is to find the closest\
    \ vowel that stands between \n# two consonants from the right side of the word\
    \ (case sensitive).\n# Vowels in the beginning and ending doesn't count. Return\
    \ empty string if you didn't\n# find any vowel met the above condition. \n# You\
    \ may assume that the given string contains English letter only.\n# Example:\n\
    #\n# $1 is a string\nget_closest_vowel() {\n    local word=$1\n    local len=${#word}\n\
    \    local i=0\n    local j=0\n    local k=0\n    local vowel=''\n    local consonant=''\n\
    \    local result=''\n    local vowels='aeiou'\n    local consonants='bcdfghjklmnpqrstvwxyz'\n\
    \    local char=''\n    local char_left=''\n    local char_right=''\n    local\
    \ char_left_is_vowel=0\n    local char_right_is_vowel=0\n    local char_left_is_consonant=0\n\
    \    local char_right_is_consonant=0\n    local char_left_is_vowel_or_consonant=0\n\
    \    local char_right_is_vowel_or_consonant=0\n    local char_left_is_vowel_or_consonant_and_char_right_is_vowel_or_consonant=0\n\
    \    local char_left_is_vowel_or_consonant_and_char_right_is_vowel_or_consonant_and_char_is_vowel=0\n\
    \    local char_left_is_vowel_or_consonant_and_char_right_is_vowel_or_consonant_and_char_is_vowel_and_char_is_closest_vowel=0\n\
    \    local char_left_is_vowel_or_consonant_and_char_right_is_vowel_or_consonant_and_char_is_vowel_and_char_is_closest_vowel_and_result_is_empty=0\n\
    \    local char_left_is_vowel_or_consonant_and_char_right_is_vowel_or_consonant_and_char_is_vowel_and_char_is_closest_vowel_and_result_is_not_empty=0\n\
    \    local char_left_is_vowel_or_consonant_and_\n}\n\ncandidate() {\n    get_closest_vowel\
    \ \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"yogurt\") = \"u\" ]]\n\
    \    [[ $(candidate \"full\") = \"u\" ]]\n    [[ $(candidate \"easy\") = \"\"\
    \ ]]\n    [[ $(candidate \"eAsy\") = \"\" ]]\n    [[ $(candidate \"ali\") = \"\
    \" ]]\n    [[ $(candidate \"bad\") = \"a\" ]]\n    [[ $(candidate \"most\") =\
    \ \"o\" ]]\n    [[ $(candidate \"ab\") = \"\" ]]\n    [[ $(candidate \"ba\") =\
    \ \"\" ]]\n    [[ $(candidate \"quick\") = \"\" ]]\n    [[ $(candidate \"anime\"\
    ) = \"i\" ]]\n    [[ $(candidate \"Asia\") = \"\" ]]\n    [[ $(candidate \"Above\"\
    ) = \"o\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660002112
- exit_code: 1
  program: "#!/bin/bash\n# You are given a word. Your task is to find the closest\
    \ vowel that stands between \n# two consonants from the right side of the word\
    \ (case sensitive).\n# Vowels in the beginning and ending doesn't count. Return\
    \ empty string if you didn't\n# find any vowel met the above condition. \n# You\
    \ may assume that the given string contains English letter only.\n# Example:\n\
    #\n# $1 is a string\nget_closest_vowel() {\n    local word=$1\n    local len=${#word}\n\
    \    local i=0\n    local j=0\n    local k=0\n    local vowels=aeiou\n    local\
    \ vowel_index=0\n    local vowel_index_arr=()\n    local vowel_index_arr_len=0\n\
    \    local closest_vowel_index=0\n    local closest_vowel_index_len=0\n    local\
    \ closest_vowel_index_arr=()\n    local closest_vowel_index_arr_len=0\n    local\
    \ closest_vowel_index_arr_len_max=0\n    local closest_vowel_index_arr_len_max_index=0\n\
    \    local closest_vowel_index_arr_len_max_index_arr=()\n    local closest_vowel_index_arr_len_max_index_arr_len=0\n\
    \    local closest_vowel_index_arr_len_max_index_arr_len_max=0\n    local closest_vowel_index_arr_len_max_index_arr_len_max_index=0\n\
    \    local closest_vowel_index_arr_len_max_index_arr_len_max_index_arr=()\n  \
    \  local closest_vowel_index_arr_len_max_index_arr_len_max_index_arr_len=0\n \
    \   local closest_vowel_index_arr_len_max_index_arr_len_max_index_arr_len_max=0\n\
    \    local closest_vowel_index_arr_len_max_index_arr_len_max_index_arr_len_max_index=0\n\
    \    local closest_vowel_index_arr_len_max_index_arr_len_max_index_arr_len_max_index_arr=()\n\
    \    local closest_vowel_index_arr_len_max_index_arr_len_max_index_arr_len_max_index_arr_len=0\n\
    \    local closest_vowel_index_arr_len_max_index_arr_len_max_index_arr_len_max_index_arr\n\
    }\n\ncandidate() {\n    get_closest_vowel \"$@\"\n}\n\nset -e\nrun_test() {\n\
    \    [[ $(candidate \"yogurt\") = \"u\" ]]\n    [[ $(candidate \"full\") = \"\
    u\" ]]\n    [[ $(candidate \"easy\") = \"\" ]]\n    [[ $(candidate \"eAsy\") =\
    \ \"\" ]]\n    [[ $(candidate \"ali\") = \"\" ]]\n    [[ $(candidate \"bad\")\
    \ = \"a\" ]]\n    [[ $(candidate \"most\") = \"o\" ]]\n    [[ $(candidate \"ab\"\
    ) = \"\" ]]\n    [[ $(candidate \"ba\") = \"\" ]]\n    [[ $(candidate \"quick\"\
    ) = \"\" ]]\n    [[ $(candidate \"anime\") = \"i\" ]]\n    [[ $(candidate \"Asia\"\
    ) = \"\" ]]\n    [[ $(candidate \"Above\") = \"o\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660002112
- exit_code: 1
  program: "#!/bin/bash\n# You are given a word. Your task is to find the closest\
    \ vowel that stands between \n# two consonants from the right side of the word\
    \ (case sensitive).\n# Vowels in the beginning and ending doesn't count. Return\
    \ empty string if you didn't\n# find any vowel met the above condition. \n# You\
    \ may assume that the given string contains English letter only.\n# Example:\n\
    #\n# $1 is a string\nget_closest_vowel() {\n    local word=$1\n    local word_len=${#word}\n\
    \    local i=0\n    local vowel_index=0\n    local vowel_index_prev=0\n    local\
    \ vowel_index_next=0\n    local vowel_index_prev_len=0\n    local vowel_index_next_len=0\n\
    \    local vowel_index_len=0\n    local vowel_index_prev_len_prev=0\n    local\
    \ vowel_index_next_len_next=0\n    local vowel_index_len_prev=0\n    local vowel_index_len_next=0\n\
    \    local vowel_index_len_prev_prev=0\n    local vowel_index_len_next_next=0\n\
    \    local vowel_index_len_prev_prev_prev=0\n    local vowel_index_len_next_next_next=0\n\
    \    local vowel_index_len_prev_prev_prev_prev=0\n    local vowel_index_len_next_next_next_next=0\n\
    \    local vowel_index_len_prev_prev_prev_prev_prev=0\n    local vowel_index_len_next_next_next_next_next=0\n\
    \    local vowel_index_len_prev_prev_prev_prev_prev_prev=0\n    local vowel_index_len_next_next_next_next_next_next=0\n\
    \    local vowel_index_len_prev_prev_prev_prev_prev_prev_prev=0\n    local vowel_index_len_next_next_next_next_next_next_next=0\n\
    \    local vowel_index_len_prev_prev_prev_prev_prev_prev_prev_prev=0\n    local\
    \ vowel_index_len_next_next_next_next_next_next_next_next=0\n    local vowel_index_len_prev_prev_prev_prev_prev_prev_prev_prev_prev=0\n\
    \    local vowel_index_len_next_next_next_next_next_next_next_next_next=0\n  \
    \  local vowel_index_len_prev_prev_prev_prev_prev_prev_prev_prev_prev_prev=0\n\
    \    local vowel_index_len_\n}\n\ncandidate() {\n    get_closest_vowel \"$@\"\n\
    }\n\nset -e\nrun_test() {\n    [[ $(candidate \"yogurt\") = \"u\" ]]\n    [[ $(candidate\
    \ \"full\") = \"u\" ]]\n    [[ $(candidate \"easy\") = \"\" ]]\n    [[ $(candidate\
    \ \"eAsy\") = \"\" ]]\n    [[ $(candidate \"ali\") = \"\" ]]\n    [[ $(candidate\
    \ \"bad\") = \"a\" ]]\n    [[ $(candidate \"most\") = \"o\" ]]\n    [[ $(candidate\
    \ \"ab\") = \"\" ]]\n    [[ $(candidate \"ba\") = \"\" ]]\n    [[ $(candidate\
    \ \"quick\") = \"\" ]]\n    [[ $(candidate \"anime\") = \"i\" ]]\n    [[ $(candidate\
    \ \"Asia\") = \"\" ]]\n    [[ $(candidate \"Above\") = \"o\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660002112
- exit_code: 2
  program: "#!/bin/bash\n# You are given a word. Your task is to find the closest\
    \ vowel that stands between \n# two consonants from the right side of the word\
    \ (case sensitive).\n# Vowels in the beginning and ending doesn't count. Return\
    \ empty string if you didn't\n# find any vowel met the above condition. \n# You\
    \ may assume that the given string contains English letter only.\n# Example:\n\
    #\n# $1 is a string\nget_closest_vowel() {\n    local word=$1\n    local len=${#word}\n\
    \    local i\n    local j\n    local k\n    local l\n    local vowels=\"aeiou\"\
    \n    local consonants=\"bcdfghjklmnpqrstvwxyz\"\n    local result=\"\"\n    local\
    \ found=0\n    local min_distance=${len}\n    local distance=0\n    local char\n\
    \    local char_lower\n    local char_upper\n    local char_lower_index\n    local\
    \ char_upper_index\n    local char_index\n\n    for ((i=0; i<len; i++)); do\n\
    \        char=${word:$i:1}\n        char_lower=${char,,}\n        char_upper=${char^^}\n\
    \        char_lower_index=${consonants%${char_lower}*}\n        char_upper_index=${consonants%${char_upper}*}\n\
    \        if [[ -z ${char_lower_index} ]]; then\n            char_index=${char_upper_index}\n\
    \        else\n            char_index=${char_lower_index}\n        fi\n      \
    \  if [[ -z ${char_index} ]]; then\n            continue\n        fi\n       \
    \ for ((j=0; j<len; j++)); do\n            if [[ $j -eq $i ]]; then\n        \
    \        continue\n            fi\n            char=${word:$j:1}\n           \
    \ char_lower=${char,,}\n            char_upper=${char^^}\n            char_lower_index=${vowels%${char_lower}*}\n\
    \            char_upper_index=${vowels%${char_upper}*}\n            if [[ -z ${char_lower_index}\
    \ ]]; then\n                char_index=${char_upper_index}\n            else\n\
    \                char_index=${char_lower_index}\n            fi\n            if\
    \ [[ -z ${char_index} ]]; then\n                continue\n            fi\n   \
    \         for ((k=i+1; k<len; k++)); do\n                if [[ $k -eq $j ]]; then\n\
    \                    continue\n                fi\n                char=${word:$k:1}\n\
    \                char_lower\n}\n\ncandidate() {\n    get_closest_vowel \"$@\"\n\
    }\n\nset -e\nrun_test() {\n    [[ $(candidate \"yogurt\") = \"u\" ]]\n    [[ $(candidate\
    \ \"full\") = \"u\" ]]\n    [[ $(candidate \"easy\") = \"\" ]]\n    [[ $(candidate\
    \ \"eAsy\") = \"\" ]]\n    [[ $(candidate \"ali\") = \"\" ]]\n    [[ $(candidate\
    \ \"bad\") = \"a\" ]]\n    [[ $(candidate \"most\") = \"o\" ]]\n    [[ $(candidate\
    \ \"ab\") = \"\" ]]\n    [[ $(candidate \"ba\") = \"\" ]]\n    [[ $(candidate\
    \ \"quick\") = \"\" ]]\n    [[ $(candidate \"anime\") = \"i\" ]]\n    [[ $(candidate\
    \ \"Asia\") = \"\" ]]\n    [[ $(candidate \"Above\") = \"o\" ]]\n}\n\nrun_test"
  status: SyntaxError
  stderr: '/tmp/tmpgg6fa5_t.sh: line 67: syntax error near unexpected token `}''

    /tmp/tmpgg6fa5_t.sh: line 67: `}''

    '
  stdout: ''
  timestamp: 1660002112
- exit_code: 1
  program: "#!/bin/bash\n# You are given a word. Your task is to find the closest\
    \ vowel that stands between \n# two consonants from the right side of the word\
    \ (case sensitive).\n# Vowels in the beginning and ending doesn't count. Return\
    \ empty string if you didn't\n# find any vowel met the above condition. \n# You\
    \ may assume that the given string contains English letter only.\n# Example:\n\
    #\n# $1 is a string\nget_closest_vowel() {\n    local word=$1\n    local len=${#word}\n\
    \    local i=0\n    local j=0\n    local k=0\n    local vowels=aeiou\n    local\
    \ vowel_index=0\n    local vowel_index_min=0\n    local vowel_index_max=0\n  \
    \  local vowel_index_min_diff=0\n    local vowel_index_max_diff=0\n    local vowel_index_diff=0\n\
    \    local vowel_index_min_diff_index=0\n    local vowel_index_max_diff_index=0\n\
    \    local vowel_index_min_diff_char=''\n    local vowel_index_max_diff_char=''\n\
    \    local vowel_index_min_diff_char_index=0\n    local vowel_index_max_diff_char_index=0\n\
    \    local vowel_index_min_diff_char_index_diff=0\n    local vowel_index_max_diff_char_index_diff=0\n\
    \    local vowel_index_min_diff_char_index_diff_index=0\n    local vowel_index_max_diff_char_index_diff_index=0\n\
    \    local vowel_index_min_diff_char_index_diff_char=''\n    local vowel_index_max_diff_char_index_diff_char=''\n\
    \    local vowel_index_min_diff_char_index_diff_char_index=0\n    local vowel_index_max_diff_char_index_diff_char_index=0\n\
    \    local vowel_index_min_diff_char_index_diff_char_index_diff=0\n    local vowel_index_max_diff_char_index_diff_char_index_diff=0\n\
    \    local vowel_index_min_diff_char_index_diff_char_index_diff_index=0\n    local\
    \ vowel_index_max_diff_char_index_diff_char_index_diff_index=0\n    local vowel_index_min_diff_char_index_diff_char_index_diff_char=''\n\
    \    local vowel_index_max_diff_char_index_diff_char_index_diff_char=''\n    local\
    \ vowel_index_min\n}\n\ncandidate() {\n    get_closest_vowel \"$@\"\n}\n\nset\
    \ -e\nrun_test() {\n    [[ $(candidate \"yogurt\") = \"u\" ]]\n    [[ $(candidate\
    \ \"full\") = \"u\" ]]\n    [[ $(candidate \"easy\") = \"\" ]]\n    [[ $(candidate\
    \ \"eAsy\") = \"\" ]]\n    [[ $(candidate \"ali\") = \"\" ]]\n    [[ $(candidate\
    \ \"bad\") = \"a\" ]]\n    [[ $(candidate \"most\") = \"o\" ]]\n    [[ $(candidate\
    \ \"ab\") = \"\" ]]\n    [[ $(candidate \"ba\") = \"\" ]]\n    [[ $(candidate\
    \ \"quick\") = \"\" ]]\n    [[ $(candidate \"anime\") = \"i\" ]]\n    [[ $(candidate\
    \ \"Asia\") = \"\" ]]\n    [[ $(candidate \"Above\") = \"o\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660002112
- exit_code: 1
  program: "#!/bin/bash\n# You are given a word. Your task is to find the closest\
    \ vowel that stands between \n# two consonants from the right side of the word\
    \ (case sensitive).\n# Vowels in the beginning and ending doesn't count. Return\
    \ empty string if you didn't\n# find any vowel met the above condition. \n# You\
    \ may assume that the given string contains English letter only.\n# Example:\n\
    #\n# $1 is a string\nget_closest_vowel() {\n    local word=$1\n    local len=${#word}\n\
    \    local i=0\n    local j=0\n    local vowel=''\n    local closest_vowel=''\n\
    \    local closest_vowel_index=0\n    local closest_vowel_distance=0\n    local\
    \ vowel_index=0\n    local vowel_distance=0\n    local consonant_count=0\n   \
    \ local consonant_index=0\n    local consonant_distance=0\n    local consonant_distance_prev=0\n\
    \    local consonant_distance_next=0\n    local consonant_index_prev=0\n    local\
    \ consonant_index_next=0\n    local consonant_prev=''\n    local consonant_next=''\n\
    \    local consonant=''\n    local vowels='aeiou'\n    local consonants='bcdfghjklmnpqrstvwxyz'\n\
    \    local vowel_found=0\n    local consonant_found=0\n    local consonant_found_prev=0\n\
    \    local consonant_found_next=0\n    local vowel_found_prev=0\n    local vowel_found_next=0\n\
    \    local vowel_index_prev=0\n    local vowel_index_next=0\n    local vowel_prev=''\n\
    \    local vowel_next=''\n    local vowel_distance_prev=0\n    local vowel_distance_next=0\n\
    \    local vowel_distance_prev_prev=0\n    local vowel_distance_next_next=0\n\
    \    local vowel_index_prev_prev=0\n    local vowel_index_next_next=0\n    local\
    \ vowel_prev_prev=''\n    local vowel_next_next=''\n    local vowel_found_prev_prev=0\n\
    \    local vowel_found_next_next=0\n    local vowel_distance_prev_prev_prev=0\n\
    \    local vowel_distance_next_next_next=0\n    local vowel_index_prev_prev_prev=0\n\
    \    local vowel_index_next_next_next=0\n    local vowel_prev_prev_prev=''\n \
    \   local vowel_next_next_next=''\n    local vowel_found_prev_prev_prev=0\n\n\
    }\n\ncandidate() {\n    get_closest_vowel \"$@\"\n}\n\nset -e\nrun_test() {\n\
    \    [[ $(candidate \"yogurt\") = \"u\" ]]\n    [[ $(candidate \"full\") = \"\
    u\" ]]\n    [[ $(candidate \"easy\") = \"\" ]]\n    [[ $(candidate \"eAsy\") =\
    \ \"\" ]]\n    [[ $(candidate \"ali\") = \"\" ]]\n    [[ $(candidate \"bad\")\
    \ = \"a\" ]]\n    [[ $(candidate \"most\") = \"o\" ]]\n    [[ $(candidate \"ab\"\
    ) = \"\" ]]\n    [[ $(candidate \"ba\") = \"\" ]]\n    [[ $(candidate \"quick\"\
    ) = \"\" ]]\n    [[ $(candidate \"anime\") = \"i\" ]]\n    [[ $(candidate \"Asia\"\
    ) = \"\" ]]\n    [[ $(candidate \"Above\") = \"o\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660002112
- exit_code: 1
  program: "#!/bin/bash\n# You are given a word. Your task is to find the closest\
    \ vowel that stands between \n# two consonants from the right side of the word\
    \ (case sensitive).\n# Vowels in the beginning and ending doesn't count. Return\
    \ empty string if you didn't\n# find any vowel met the above condition. \n# You\
    \ may assume that the given string contains English letter only.\n# Example:\n\
    #\n# $1 is a string\nget_closest_vowel() {\n    local word=$1\n    local word_len=${#word}\n\
    \    local i\n    local j\n    local vowels=\"aeiou\"\n    local vowel_len=${#vowels}\n\
    \    local vowel_index\n    local vowel_char\n    local closest_vowel\n    local\
    \ closest_vowel_index\n    local closest_vowel_distance\n    local distance\n\
    \    local is_vowel\n    local is_consonant\n    local is_first_char\n    local\
    \ is_last_char\n    local is_first_vowel\n    local is_last_vowel\n    local is_first_consonant\n\
    \    local is_last_consonant\n    local is_first_char_vowel\n    local is_last_char_vowel\n\
    \    local is_first_char_consonant\n    local is_last_char_consonant\n    local\
    \ is_first_char_vowel_or_consonant\n    local is_last_char_vowel_or_consonant\n\
    \    local is_first_char_vowel_and_consonant\n    local is_last_char_vowel_and_consonant\n\
    \    local is_first_char_vowel_or_consonant_and_last_char_vowel_or_consonant\n\
    \    local is_first_char_vowel_and_consonant_and_last_char_vowel_and_consonant\n\
    \    local is_first_char_vowel_or_consonant_and_last_char_vowel_and_consonant\n\
    \    local is_first_char_vowel_and_consonant_and_last_char_vowel_or_consonant\n\
    \    local is_first_char_vowel_or_consonant_and_last_char_vowel_or_consonant_and_first_char_vowel_and_consonant\n\
    \    local is_first_char_vowel_or_consonant_and_last_char_vowel_or_consonant_and_last_char_v\n\
    }\n\ncandidate() {\n    get_closest_vowel \"$@\"\n}\n\nset -e\nrun_test() {\n\
    \    [[ $(candidate \"yogurt\") = \"u\" ]]\n    [[ $(candidate \"full\") = \"\
    u\" ]]\n    [[ $(candidate \"easy\") = \"\" ]]\n    [[ $(candidate \"eAsy\") =\
    \ \"\" ]]\n    [[ $(candidate \"ali\") = \"\" ]]\n    [[ $(candidate \"bad\")\
    \ = \"a\" ]]\n    [[ $(candidate \"most\") = \"o\" ]]\n    [[ $(candidate \"ab\"\
    ) = \"\" ]]\n    [[ $(candidate \"ba\") = \"\" ]]\n    [[ $(candidate \"quick\"\
    ) = \"\" ]]\n    [[ $(candidate \"anime\") = \"i\" ]]\n    [[ $(candidate \"Asia\"\
    ) = \"\" ]]\n    [[ $(candidate \"Above\") = \"o\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660002112
- exit_code: 1
  program: "#!/bin/bash\n# You are given a word. Your task is to find the closest\
    \ vowel that stands between \n# two consonants from the right side of the word\
    \ (case sensitive).\n# Vowels in the beginning and ending doesn't count. Return\
    \ empty string if you didn't\n# find any vowel met the above condition. \n# You\
    \ may assume that the given string contains English letter only.\n# Example:\n\
    #\n# $1 is a string\nget_closest_vowel() {\n    local word=$1\n    local len=${#word}\n\
    \    local i=0\n    local vowel=''\n    local vowel_pos=0\n    local vowel_pos_prev=0\n\
    \    local vowel_pos_next=0\n    local vowel_pos_prev_diff=0\n    local vowel_pos_next_diff=0\n\
    \    local vowel_pos_diff=0\n    local vowel_pos_diff_prev=0\n    local vowel_pos_diff_next=0\n\
    \    local vowel_pos_diff_prev_prev=0\n    local vowel_pos_diff_next_next=0\n\
    \    local vowel_pos_diff_prev_prev_prev=0\n    local vowel_pos_diff_next_next_next=0\n\
    \    local vowel_pos_diff_prev_prev_prev_prev=0\n    local vowel_pos_diff_next_next_next_next=0\n\
    \    local vowel_pos_diff_prev_prev_prev_prev_prev=0\n    local vowel_pos_diff_next_next_next_next_next=0\n\
    \    local vowel_pos_diff_prev_prev_prev_prev_prev_prev=0\n    local vowel_pos_diff_next_next_next_next_next_next=0\n\
    \    local vowel_pos_diff_prev_prev_prev_prev_prev_prev_prev=0\n    local vowel_pos_diff_next_next_next_next_next_next_next=0\n\
    \    local vowel_pos_diff_prev_prev_prev_prev_prev_prev_prev_prev=0\n    local\
    \ vowel_pos_diff_next_next_next_next_next_next_next_next=0\n    local vowel_pos_diff_prev_prev_prev_prev_prev_prev_prev_prev_prev=0\n\
    \    local vowel_pos_diff_next_next_next_next_next_next_next_next_next=0\n   \
    \ local vowel_pos_diff_prev_prev_prev_prev_prev_prev_prev_prev_prev_prev=0\n \
    \   local vowel_pos_diff_next_next_next_next_next_next_next_next_next_next=0\n\
    \    local\n}\n\ncandidate() {\n    get_closest_vowel \"$@\"\n}\n\nset -e\nrun_test()\
    \ {\n    [[ $(candidate \"yogurt\") = \"u\" ]]\n    [[ $(candidate \"full\") =\
    \ \"u\" ]]\n    [[ $(candidate \"easy\") = \"\" ]]\n    [[ $(candidate \"eAsy\"\
    ) = \"\" ]]\n    [[ $(candidate \"ali\") = \"\" ]]\n    [[ $(candidate \"bad\"\
    ) = \"a\" ]]\n    [[ $(candidate \"most\") = \"o\" ]]\n    [[ $(candidate \"ab\"\
    ) = \"\" ]]\n    [[ $(candidate \"ba\") = \"\" ]]\n    [[ $(candidate \"quick\"\
    ) = \"\" ]]\n    [[ $(candidate \"anime\") = \"i\" ]]\n    [[ $(candidate \"Asia\"\
    ) = \"\" ]]\n    [[ $(candidate \"Above\") = \"o\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660002112
- exit_code: 1
  program: "#!/bin/bash\n# You are given a word. Your task is to find the closest\
    \ vowel that stands between \n# two consonants from the right side of the word\
    \ (case sensitive).\n# Vowels in the beginning and ending doesn't count. Return\
    \ empty string if you didn't\n# find any vowel met the above condition. \n# You\
    \ may assume that the given string contains English letter only.\n# Example:\n\
    #\n# $1 is a string\nget_closest_vowel() {\n  local word=$1\n  local word_len=${#word}\n\
    \  local i=0\n  local j=0\n  local k=0\n  local char=''\n  local char_next=''\n\
    \  local char_prev=''\n  local vowels=('a' 'e' 'i' 'o' 'u')\n  local vowel_len=${#vowels[@]}\n\
    \  local vowel_index=0\n  local vowel_index_prev=0\n  local vowel_index_next=0\n\
    \  local vowel_index_min=0\n  local vowel_index_max=0\n  local vowel_index_min_prev=0\n\
    \  local vowel_index_max_prev=0\n  local vowel_index_min_next=0\n  local vowel_index_max_next=0\n\
    \  local vowel_index_min_prev_next=0\n  local vowel_index_max_prev_next=0\n  local\
    \ vowel_index_min_prev_next_prev=0\n  local vowel_index_max_prev_next_prev=0\n\
    \  local vowel_index_min_prev_next_next=0\n  local vowel_index_max_prev_next_next=0\n\
    \  local vowel_index_min_prev_next_prev_next=0\n  local vowel_index_max_prev_next_prev_next=0\n\
    \  local vowel_index_min_prev_next_prev_next_prev=0\n  local vowel_index_max_prev_next_prev_next_prev=0\n\
    \  local vowel_index_min_prev_next_prev_next_next=0\n  local vowel_index_max_prev_next_prev_next_next=0\n\
    \  local vowel_index_min_prev_next_prev_next_prev_next=0\n  local vowel_index_max_prev_next_prev_next_prev_next=0\n\
    \  local vowel_index_min_prev_next_prev_next_prev_next_prev=0\n  local vowel_index_max_prev_next_prev_next_prev_next_prev=0\n\
    \  local vowel_index_min_prev_next_prev_next_prev_next_next=\n}\n\ncandidate()\
    \ {\n    get_closest_vowel \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate\
    \ \"yogurt\") = \"u\" ]]\n    [[ $(candidate \"full\") = \"u\" ]]\n    [[ $(candidate\
    \ \"easy\") = \"\" ]]\n    [[ $(candidate \"eAsy\") = \"\" ]]\n    [[ $(candidate\
    \ \"ali\") = \"\" ]]\n    [[ $(candidate \"bad\") = \"a\" ]]\n    [[ $(candidate\
    \ \"most\") = \"o\" ]]\n    [[ $(candidate \"ab\") = \"\" ]]\n    [[ $(candidate\
    \ \"ba\") = \"\" ]]\n    [[ $(candidate \"quick\") = \"\" ]]\n    [[ $(candidate\
    \ \"anime\") = \"i\" ]]\n    [[ $(candidate \"Asia\") = \"\" ]]\n    [[ $(candidate\
    \ \"Above\") = \"o\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660002112
- exit_code: 1
  program: "#!/bin/bash\n# You are given a word. Your task is to find the closest\
    \ vowel that stands between \n# two consonants from the right side of the word\
    \ (case sensitive).\n# Vowels in the beginning and ending doesn't count. Return\
    \ empty string if you didn't\n# find any vowel met the above condition. \n# You\
    \ may assume that the given string contains English letter only.\n# Example:\n\
    #\n# $1 is a string\nget_closest_vowel() {\n    local word=$1\n    local word_len=${#word}\n\
    \    local i=0\n    local j=0\n    local vowel_pos=0\n    local vowel_pos_arr=()\n\
    \    local vowel_pos_arr_len=0\n    local vowel_pos_arr_idx=0\n    local vowel_pos_arr_idx_prev=0\n\
    \    local vowel_pos_arr_idx_next=0\n    local vowel_pos_arr_idx_prev_prev=0\n\
    \    local vowel_pos_arr_idx_next_next=0\n    local vowel_pos_arr_idx_prev_prev_prev=0\n\
    \    local vowel_pos_arr_idx_next_next_next=0\n    local vowel_pos_arr_idx_prev_prev_prev_prev=0\n\
    \    local vowel_pos_arr_idx_next_next_next_next=0\n    local vowel_pos_arr_idx_prev_prev_prev_prev_prev=0\n\
    \    local vowel_pos_arr_idx_next_next_next_next_next=0\n    local vowel_pos_arr_idx_prev_prev_prev_prev_prev_prev=0\n\
    \    local vowel_pos_arr_idx_next_next_next_next_next_next=0\n    local vowel_pos_arr_idx_prev_prev_prev_prev_prev_prev_prev=0\n\
    \    local vowel_pos_arr_idx_next_next_next_next_next_next_next=0\n    local vowel_pos_arr_idx_prev_prev_prev_prev_prev_prev_prev_prev=0\n\
    \    local vowel_pos_arr_idx_next_next_next_next_next_next_next_next=0\n    local\
    \ vowel_pos_arr_idx_prev_prev_prev_prev_prev_prev_prev_prev_prev=0\n    local\
    \ vowel_pos_arr_idx_next_next_next_next_next_next_next_next_next=0\n    local\
    \ vowel_pos_arr_idx_prev_prev_prev_prev_prev_prev_prev_\n}\n\ncandidate() {\n\
    \    get_closest_vowel \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"\
    yogurt\") = \"u\" ]]\n    [[ $(candidate \"full\") = \"u\" ]]\n    [[ $(candidate\
    \ \"easy\") = \"\" ]]\n    [[ $(candidate \"eAsy\") = \"\" ]]\n    [[ $(candidate\
    \ \"ali\") = \"\" ]]\n    [[ $(candidate \"bad\") = \"a\" ]]\n    [[ $(candidate\
    \ \"most\") = \"o\" ]]\n    [[ $(candidate \"ab\") = \"\" ]]\n    [[ $(candidate\
    \ \"ba\") = \"\" ]]\n    [[ $(candidate \"quick\") = \"\" ]]\n    [[ $(candidate\
    \ \"anime\") = \"i\" ]]\n    [[ $(candidate \"Asia\") = \"\" ]]\n    [[ $(candidate\
    \ \"Above\") = \"o\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660002112
- exit_code: 1
  program: "#!/bin/bash\n# You are given a word. Your task is to find the closest\
    \ vowel that stands between \n# two consonants from the right side of the word\
    \ (case sensitive).\n# Vowels in the beginning and ending doesn't count. Return\
    \ empty string if you didn't\n# find any vowel met the above condition. \n# You\
    \ may assume that the given string contains English letter only.\n# Example:\n\
    #\n# $1 is a string\nget_closest_vowel() {\n    local word=$1\n    local vowels=\"\
    aeiou\"\n    local consonants=\"bcdfghjklmnpqrstvwxyz\"\n    local closest_vowel=\"\
    \"\n    local closest_vowel_index=0\n    local closest_consonant_index=0\n   \
    \ local closest_consonant=\"\"\n    local word_length=${#word}\n    local i=0\n\
    \    local j=0\n    local k=0\n    local l=0\n    local m=0\n    local n=0\n \
    \   local o=0\n    local p=0\n    local q=0\n    local r=0\n    local s=0\n  \
    \  local t=0\n    local u=0\n    local v=0\n    local w=0\n    local x=0\n   \
    \ local y=0\n    local z=0\n    local a=0\n    local b=0\n    local c=0\n    local\
    \ d=0\n    local e=0\n    local f=0\n    local g=0\n    local h=0\n    local i=0\n\
    \    local j=0\n    local k=0\n    local l=0\n    local m=0\n    local n=0\n \
    \   local o=0\n    local p=0\n    local q=0\n    local r=0\n    local s=0\n  \
    \  local t=0\n    local u=0\n    local v=0\n    local w=0\n    local x=0\n   \
    \ local y=0\n    local z=0\n    local a=0\n    local b=0\n    local c=0\n    local\
    \ d=0\n    local e=0\n    local f=0\n    local g=0\n    local h=0\n    local i=0\n\
    \    local j=0\n    local k=0\n    local l=0\n    local m=0\n    local n=0\n \
    \   local o=0\n    local p=0\n    local q=0\n    local r=0\n    local s=0\n  \
    \  local t=0\n    local u=0\n    local v=0\n    local w=0\n    local x=0\n   \
    \ local y=0\n    local z=0\n   \n}\n\ncandidate() {\n    get_closest_vowel \"\
    $@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"yogurt\") = \"u\" ]]\n \
    \   [[ $(candidate \"full\") = \"u\" ]]\n    [[ $(candidate \"easy\") = \"\" ]]\n\
    \    [[ $(candidate \"eAsy\") = \"\" ]]\n    [[ $(candidate \"ali\") = \"\" ]]\n\
    \    [[ $(candidate \"bad\") = \"a\" ]]\n    [[ $(candidate \"most\") = \"o\"\
    \ ]]\n    [[ $(candidate \"ab\") = \"\" ]]\n    [[ $(candidate \"ba\") = \"\"\
    \ ]]\n    [[ $(candidate \"quick\") = \"\" ]]\n    [[ $(candidate \"anime\") =\
    \ \"i\" ]]\n    [[ $(candidate \"Asia\") = \"\" ]]\n    [[ $(candidate \"Above\"\
    ) = \"o\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660002112
- exit_code: 1
  program: "#!/bin/bash\n# You are given a word. Your task is to find the closest\
    \ vowel that stands between \n# two consonants from the right side of the word\
    \ (case sensitive).\n# Vowels in the beginning and ending doesn't count. Return\
    \ empty string if you didn't\n# find any vowel met the above condition. \n# You\
    \ may assume that the given string contains English letter only.\n# Example:\n\
    #\n# $1 is a string\nget_closest_vowel() {\n    local word=$1\n    local word_len=${#word}\n\
    \    local last_char=${word:$word_len-1:1}\n    local last_char_is_vowel=false\n\
    \    local last_char_is_consonant=false\n    local vowel_index=0\n    local vowel_index_found=false\n\
    \    local vowel_index_found_at=0\n    local vowel_index_found_at_char=''\n  \
    \  local vowel_index_found_at_char_is_vowel=false\n    local vowel_index_found_at_char_is_consonant=false\n\
    \    local vowel_index_found_at_char_is_vowel_or_consonant=false\n    local vowel_index_found_at_char_is_vowel_or_consonant_is_vowel=false\n\
    \    local vowel_index_found_at_char_is_vowel_or_consonant_is_consonant=false\n\
    \    local vowel_index_found_at_char_is_vowel_or_consonant_is_vowel_or_consonant=false\n\
    \    local vowel_index_found_at_char_is_vowel_or_consonant_is_vowel_or_consonant_is_vowel=false\n\
    \    local vowel_index_found_at_char_is_vowel_or_consonant_is_vowel_or_consonant_is_consonant=false\n\
    \    local vowel_index_found_at_char_is_vowel_or_consonant_is_vowel_or_consonant_is_vowel_or_consonant=false\n\
    \    local vowel_index_found_at_char_is_vowel_or_consonant_is_vowel_or_consonant_is_vowel_or_consonant_is_vowel=false\n\
    \    local vowel_index_found_at_char_is_vowel_or_consonant_is_vowel_or_consonant_is_vowel\n\
    }\n\ncandidate() {\n    get_closest_vowel \"$@\"\n}\n\nset -e\nrun_test() {\n\
    \    [[ $(candidate \"yogurt\") = \"u\" ]]\n    [[ $(candidate \"full\") = \"\
    u\" ]]\n    [[ $(candidate \"easy\") = \"\" ]]\n    [[ $(candidate \"eAsy\") =\
    \ \"\" ]]\n    [[ $(candidate \"ali\") = \"\" ]]\n    [[ $(candidate \"bad\")\
    \ = \"a\" ]]\n    [[ $(candidate \"most\") = \"o\" ]]\n    [[ $(candidate \"ab\"\
    ) = \"\" ]]\n    [[ $(candidate \"ba\") = \"\" ]]\n    [[ $(candidate \"quick\"\
    ) = \"\" ]]\n    [[ $(candidate \"anime\") = \"i\" ]]\n    [[ $(candidate \"Asia\"\
    ) = \"\" ]]\n    [[ $(candidate \"Above\") = \"o\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660002112
- exit_code: 1
  program: "#!/bin/bash\n# You are given a word. Your task is to find the closest\
    \ vowel that stands between \n# two consonants from the right side of the word\
    \ (case sensitive).\n# Vowels in the beginning and ending doesn't count. Return\
    \ empty string if you didn't\n# find any vowel met the above condition. \n# You\
    \ may assume that the given string contains English letter only.\n# Example:\n\
    #\n# $1 is a string\nget_closest_vowel() {\n    local word=$1\n    local len=${#word}\n\
    \    local i=0\n    local j=0\n    local k=0\n    local l=0\n    local m=0\n \
    \   local n=0\n    local o=0\n    local p=0\n    local q=0\n    local r=0\n  \
    \  local s=0\n    local t=0\n    local u=0\n    local v=0\n    local w=0\n   \
    \ local x=0\n    local y=0\n    local z=0\n    local a=0\n    local e=0\n    local\
    \ i=0\n    local o=0\n    local u=0\n    local vowel=0\n    local consonant=0\n\
    \    local result=''\n    local closest_vowel=''\n    local closest_vowel_index=0\n\
    \    local closest_vowel_distance=0\n    local vowel_index=0\n    local vowel_distance=0\n\
    \    local vowel_count=0\n    local consonant_count=0\n    local vowel_index_array=()\n\
    \    local vowel_distance_array=()\n    local vowel_count_array=()\n    local\
    \ consonant_count_array=()\n    local vowel_index_array_index=0\n    local vowel_distance_array_index=0\n\
    \    local vowel_count_array_index=0\n    local consonant_count_array_index=0\n\
    \    local vowel_index_array_len=0\n    local vowel_distance_array_len=0\n   \
    \ local vowel_count_array_len=0\n    local consonant_count_array_len=0\n    local\
    \ vowel_index_array_last_index=0\n    local vowel_distance_array_last_index=0\n\
    \    local vowel_count_array_last_index=0\n    local consonant_count_array_last_index=0\n\
    \    local vowel_index_array_last_value=0\n    local vowel_distance_array_last_value=0\n\
    \    local vowel_count_array_last_value=0\n    local consonant_count_array_last_value=0\n\
    \    local vowel_index_array_last_value_index=0\n    local vowel\n}\n\ncandidate()\
    \ {\n    get_closest_vowel \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate\
    \ \"yogurt\") = \"u\" ]]\n    [[ $(candidate \"full\") = \"u\" ]]\n    [[ $(candidate\
    \ \"easy\") = \"\" ]]\n    [[ $(candidate \"eAsy\") = \"\" ]]\n    [[ $(candidate\
    \ \"ali\") = \"\" ]]\n    [[ $(candidate \"bad\") = \"a\" ]]\n    [[ $(candidate\
    \ \"most\") = \"o\" ]]\n    [[ $(candidate \"ab\") = \"\" ]]\n    [[ $(candidate\
    \ \"ba\") = \"\" ]]\n    [[ $(candidate \"quick\") = \"\" ]]\n    [[ $(candidate\
    \ \"anime\") = \"i\" ]]\n    [[ $(candidate \"Asia\") = \"\" ]]\n    [[ $(candidate\
    \ \"Above\") = \"o\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660002112
- exit_code: 1
  program: "#!/bin/bash\n# You are given a word. Your task is to find the closest\
    \ vowel that stands between \n# two consonants from the right side of the word\
    \ (case sensitive).\n# Vowels in the beginning and ending doesn't count. Return\
    \ empty string if you didn't\n# find any vowel met the above condition. \n# You\
    \ may assume that the given string contains English letter only.\n# Example:\n\
    #\n# $1 is a string\nget_closest_vowel() {\n    local word=$1\n    local word_len=${#word}\n\
    \    local i=0\n    local j=0\n    local vowel_pos=0\n    local vowel_pos_arr=()\n\
    \    local vowel_pos_arr_len=0\n    local vowel_pos_arr_last_idx=0\n    local\
    \ closest_vowel_pos=0\n    local closest_vowel_pos_len=0\n    local closest_vowel_pos_arr=()\n\
    \    local closest_vowel_pos_arr_len=0\n    local closest_vowel_pos_arr_last_idx=0\n\
    \    local closest_vowel_pos_arr_last_idx_len=0\n    local closest_vowel_pos_arr_last_idx_len_arr=()\n\
    \    local closest_vowel_pos_arr_last_idx_len_arr_len=0\n    local closest_vowel_pos_arr_last_idx_len_arr_last_idx=0\n\
    \    local closest_vowel_pos_arr_last_idx_len_arr_last_idx_len=0\n    local closest_vowel_pos_arr_last_idx_len_arr_last_idx_len_arr=()\n\
    \    local closest_vowel_pos_arr_last_idx_len_arr_last_idx_len_arr_len=0\n   \
    \ local closest_vowel_pos_arr_last_idx_len_arr_last_idx_len_arr_last_idx=0\n \
    \   local closest_vowel_pos_arr_last_idx_len_arr_last_idx_len_arr_last_idx_len=0\n\
    \    local closest_vowel_pos_arr_last_idx_len_arr_last_idx_len_arr_last_idx_len_arr=()\n\
    \    local closest_vowel_pos_arr_last_idx_len_arr_last_idx_len_arr_last_idx_len_arr_len=0\n\
    \    local closest_vowel_pos\n}\n\ncandidate() {\n    get_closest_vowel \"$@\"\
    \n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"yogurt\") = \"u\" ]]\n    [[\
    \ $(candidate \"full\") = \"u\" ]]\n    [[ $(candidate \"easy\") = \"\" ]]\n \
    \   [[ $(candidate \"eAsy\") = \"\" ]]\n    [[ $(candidate \"ali\") = \"\" ]]\n\
    \    [[ $(candidate \"bad\") = \"a\" ]]\n    [[ $(candidate \"most\") = \"o\"\
    \ ]]\n    [[ $(candidate \"ab\") = \"\" ]]\n    [[ $(candidate \"ba\") = \"\"\
    \ ]]\n    [[ $(candidate \"quick\") = \"\" ]]\n    [[ $(candidate \"anime\") =\
    \ \"i\" ]]\n    [[ $(candidate \"Asia\") = \"\" ]]\n    [[ $(candidate \"Above\"\
    ) = \"o\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660002112
- exit_code: 1
  program: "#!/bin/bash\n# You are given a word. Your task is to find the closest\
    \ vowel that stands between \n# two consonants from the right side of the word\
    \ (case sensitive).\n# Vowels in the beginning and ending doesn't count. Return\
    \ empty string if you didn't\n# find any vowel met the above condition. \n# You\
    \ may assume that the given string contains English letter only.\n# Example:\n\
    #\n# $1 is a string\nget_closest_vowel() {\n    local word=$1\n    local len=${#word}\n\
    \    local i=0\n    local vowels=\"aeiou\"\n    local vowel_pos=0\n    local vowel_pos_prev=0\n\
    \    local vowel_pos_next=0\n    local vowel_pos_prev_prev=0\n    local vowel_pos_next_next=0\n\
    \    local vowel_pos_prev_prev_prev=0\n    local vowel_pos_next_next_next=0\n\
    \    local vowel_pos_prev_prev_prev_prev=0\n    local vowel_pos_next_next_next_next=0\n\
    \    local vowel_pos_prev_prev_prev_prev_prev=0\n    local vowel_pos_next_next_next_next_next=0\n\
    \    local vowel_pos_prev_prev_prev_prev_prev_prev=0\n    local vowel_pos_next_next_next_next_next_next=0\n\
    \    local vowel_pos_prev_prev_prev_prev_prev_prev_prev=0\n    local vowel_pos_next_next_next_next_next_next_next=0\n\
    \    local vowel_pos_prev_prev_prev_prev_prev_prev_prev_prev=0\n    local vowel_pos_next_next_next_next_next_next_next_next=0\n\
    \    local vowel_pos_prev_prev_prev_prev_prev_prev_prev_prev_prev=0\n    local\
    \ vowel_pos_next_next_next_next_next_next_next_next_next=0\n    local vowel_pos_prev_prev_prev_prev_prev_prev_prev_prev_prev_prev=0\n\
    \    local vowel_pos_next_next_next_next_next_next_next_next_next_next=0\n   \
    \ local vowel_pos_prev_prev_prev_prev_prev_prev_prev_prev_prev_prev_prev=0\n \
    \   local vowel_pos_next_next_next_next_next_next_next_next_next_next_next=0\n\
    \    local vowel_pos_prev_prev_prev_prev_prev_prev_prev_prev_prev_prev_prev_prev=0\n\
    \n}\n\ncandidate() {\n    get_closest_vowel \"$@\"\n}\n\nset -e\nrun_test() {\n\
    \    [[ $(candidate \"yogurt\") = \"u\" ]]\n    [[ $(candidate \"full\") = \"\
    u\" ]]\n    [[ $(candidate \"easy\") = \"\" ]]\n    [[ $(candidate \"eAsy\") =\
    \ \"\" ]]\n    [[ $(candidate \"ali\") = \"\" ]]\n    [[ $(candidate \"bad\")\
    \ = \"a\" ]]\n    [[ $(candidate \"most\") = \"o\" ]]\n    [[ $(candidate \"ab\"\
    ) = \"\" ]]\n    [[ $(candidate \"ba\") = \"\" ]]\n    [[ $(candidate \"quick\"\
    ) = \"\" ]]\n    [[ $(candidate \"anime\") = \"i\" ]]\n    [[ $(candidate \"Asia\"\
    ) = \"\" ]]\n    [[ $(candidate \"Above\") = \"o\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660002112
- exit_code: 1
  program: "#!/bin/bash\n# You are given a word. Your task is to find the closest\
    \ vowel that stands between \n# two consonants from the right side of the word\
    \ (case sensitive).\n# Vowels in the beginning and ending doesn't count. Return\
    \ empty string if you didn't\n# find any vowel met the above condition. \n# You\
    \ may assume that the given string contains English letter only.\n# Example:\n\
    #\n# $1 is a string\nget_closest_vowel() {\n    local word=\"$1\"\n    local vowels=\"\
    aeiou\"\n    local consonants=\"bcdfghjklmnpqrstvwxyz\"\n    local closest_vowel=\"\
    \"\n    local closest_vowel_index=0\n    local closest_consonant_index=0\n   \
    \ local closest_consonant=\"\"\n    local closest_consonant_index=0\n    local\
    \ index=0\n    local char=\"\"\n    local found_vowel=0\n    local found_consonant=0\n\
    \    local found_vowel_index=0\n    local found_consonant_index=0\n    local found_vowel_index_2=0\n\
    \    local found_consonant_index_2=0\n    local found_vowel_2=0\n    local found_consonant_2=0\n\
    \    local found_vowel_index_3=0\n    local found_consonant_index_3=0\n    local\
    \ found_vowel_3=0\n    local found_consonant_3=0\n    local found_vowel_index_4=0\n\
    \    local found_consonant_index_4=0\n    local found_vowel_4=0\n    local found_consonant_4=0\n\
    \    local found_vowel_index_5=0\n    local found_consonant_index_5=0\n    local\
    \ found_vowel_5=0\n    local found_consonant_5=0\n    local found_vowel_index_6=0\n\
    \    local found_consonant_index_6=0\n    local found_vowel_6=0\n    local found_consonant_6=0\n\
    \    local found_vowel_index_7=0\n    local found_consonant_index_7=0\n    local\
    \ found_vowel_7=0\n    local found_consonant_7=0\n    local found_vowel_index_8=0\n\
    \    local found_consonant_index_8=0\n    local found_vowel_8=0\n    local found_consonant_8=0\n\
    }\n\ncandidate() {\n    get_closest_vowel \"$@\"\n}\n\nset -e\nrun_test() {\n\
    \    [[ $(candidate \"yogurt\") = \"u\" ]]\n    [[ $(candidate \"full\") = \"\
    u\" ]]\n    [[ $(candidate \"easy\") = \"\" ]]\n    [[ $(candidate \"eAsy\") =\
    \ \"\" ]]\n    [[ $(candidate \"ali\") = \"\" ]]\n    [[ $(candidate \"bad\")\
    \ = \"a\" ]]\n    [[ $(candidate \"most\") = \"o\" ]]\n    [[ $(candidate \"ab\"\
    ) = \"\" ]]\n    [[ $(candidate \"ba\") = \"\" ]]\n    [[ $(candidate \"quick\"\
    ) = \"\" ]]\n    [[ $(candidate \"anime\") = \"i\" ]]\n    [[ $(candidate \"Asia\"\
    ) = \"\" ]]\n    [[ $(candidate \"Above\") = \"o\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660002112
- exit_code: 1
  program: "#!/bin/bash\n# You are given a word. Your task is to find the closest\
    \ vowel that stands between \n# two consonants from the right side of the word\
    \ (case sensitive).\n# Vowels in the beginning and ending doesn't count. Return\
    \ empty string if you didn't\n# find any vowel met the above condition. \n# You\
    \ may assume that the given string contains English letter only.\n# Example:\n\
    #\n# $1 is a string\nget_closest_vowel() {\n    local word=$1\n    local len=${#word}\n\
    \    local i=0\n    local j=0\n    local k=0\n    local vowel=\"\"\n    local\
    \ closest_vowel=\"\"\n    local closest_vowel_index=0\n    local closest_vowel_distance=0\n\
    \    local vowel_index=0\n    local vowel_distance=0\n    local vowels=\"aeiou\"\
    \n    local consonants=\"bcdfghjklmnpqrstvwxyz\"\n    local consonant=\"\"\n \
    \   local consonant_index=0\n    local consonant_distance=0\n    local closest_consonant=\"\
    \"\n    local closest_consonant_index=0\n    local closest_consonant_distance=0\n\
    \    local closest_consonant_index_from_left=0\n    local closest_consonant_index_from_right=0\n\
    \    local closest_consonant_distance_from_left=0\n    local closest_consonant_distance_from_right=0\n\
    \    local closest_vowel_index_from_left=0\n    local closest_vowel_index_from_right=0\n\
    \    local closest_vowel_distance_from_left=0\n    local closest_vowel_distance_from_right=0\n\
    \    local closest_vowel_from_left=\"\"\n    local closest_vowel_from_right=\"\
    \"\n    local closest_consonant_from_left=\"\"\n    local closest_consonant_from_right=\"\
    \"\n    local closest_vowel_from_left_index=0\n    local closest_vowel_from_right_index=0\n\
    \    local closest_consonant_from_left_index=0\n    local closest_consonant_from_right_index=0\n\
    \    local closest_vowel_from_left_distance=0\n    local closest_vowel_from_right_distance=0\n\
    \    local closest_consonant_from_left_distance=0\n    local closest_consonant_from_right_distance=0\n\
    \    local closest_vowel_from_left_index_from_right=0\n    local closest_vowel_\n\
    }\n\ncandidate() {\n    get_closest_vowel \"$@\"\n}\n\nset -e\nrun_test() {\n\
    \    [[ $(candidate \"yogurt\") = \"u\" ]]\n    [[ $(candidate \"full\") = \"\
    u\" ]]\n    [[ $(candidate \"easy\") = \"\" ]]\n    [[ $(candidate \"eAsy\") =\
    \ \"\" ]]\n    [[ $(candidate \"ali\") = \"\" ]]\n    [[ $(candidate \"bad\")\
    \ = \"a\" ]]\n    [[ $(candidate \"most\") = \"o\" ]]\n    [[ $(candidate \"ab\"\
    ) = \"\" ]]\n    [[ $(candidate \"ba\") = \"\" ]]\n    [[ $(candidate \"quick\"\
    ) = \"\" ]]\n    [[ $(candidate \"anime\") = \"i\" ]]\n    [[ $(candidate \"Asia\"\
    ) = \"\" ]]\n    [[ $(candidate \"Above\") = \"o\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660002112
- exit_code: 1
  program: "#!/bin/bash\n# You are given a word. Your task is to find the closest\
    \ vowel that stands between \n# two consonants from the right side of the word\
    \ (case sensitive).\n# Vowels in the beginning and ending doesn't count. Return\
    \ empty string if you didn't\n# find any vowel met the above condition. \n# You\
    \ may assume that the given string contains English letter only.\n# Example:\n\
    #\n# $1 is a string\nget_closest_vowel() {\n    local word=$1\n    local word_len=${#word}\n\
    \    local i=0\n    local j=0\n    local k=0\n    local vowel_pos=0\n    local\
    \ vowel_pos_arr=()\n    local vowel_pos_arr_len=0\n    local vowel_pos_arr_len_half=0\n\
    \    local vowel_pos_arr_len_half_floor=0\n    local vowel_pos_arr_len_half_ceil=0\n\
    \    local vowel_pos_arr_len_half_floor_diff=0\n    local vowel_pos_arr_len_half_ceil_diff=0\n\
    \    local vowel_pos_arr_len_half_floor_diff_abs=0\n    local vowel_pos_arr_len_half_ceil_diff_abs=0\n\
    \    local vowel_pos_arr_len_half_floor_diff_abs_min=0\n    local vowel_pos_arr_len_half_ceil_diff_abs_min=0\n\
    \    local vowel_pos_arr_len_half_floor_diff_abs_min_pos=0\n    local vowel_pos_arr_len_half_ceil_diff_abs_min_pos=0\n\
    \    local vowel_pos_arr_len_half_floor_diff_abs_min_pos_final=0\n    local vowel_pos_arr_len_half_ceil_diff_abs_min_pos_final=0\n\
    \    local vowel_pos_arr_len_half_floor_diff_abs_min_pos_final_char=''\n    local\
    \ vowel_pos_arr_len_half_ceil_diff_abs_min_pos_final_char=''\n    local vowel_pos_arr_len_half_floor_diff_abs_min_pos_final_char_final=''\n\
    \    local vowel_pos_arr_len_half_ceil_diff_abs_min_pos_final_char_final=''\n\
    \    local vowel_pos_arr_len_half_floor_diff_abs_min_pos_final_char_final_final=''\n\
    \    local vowel_pos_arr_len_half_ceil_diff_abs_min_pos_final\n}\n\ncandidate()\
    \ {\n    get_closest_vowel \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate\
    \ \"yogurt\") = \"u\" ]]\n    [[ $(candidate \"full\") = \"u\" ]]\n    [[ $(candidate\
    \ \"easy\") = \"\" ]]\n    [[ $(candidate \"eAsy\") = \"\" ]]\n    [[ $(candidate\
    \ \"ali\") = \"\" ]]\n    [[ $(candidate \"bad\") = \"a\" ]]\n    [[ $(candidate\
    \ \"most\") = \"o\" ]]\n    [[ $(candidate \"ab\") = \"\" ]]\n    [[ $(candidate\
    \ \"ba\") = \"\" ]]\n    [[ $(candidate \"quick\") = \"\" ]]\n    [[ $(candidate\
    \ \"anime\") = \"i\" ]]\n    [[ $(candidate \"Asia\") = \"\" ]]\n    [[ $(candidate\
    \ \"Above\") = \"o\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660002112
- exit_code: 1
  program: "#!/bin/bash\n# You are given a word. Your task is to find the closest\
    \ vowel that stands between \n# two consonants from the right side of the word\
    \ (case sensitive).\n# Vowels in the beginning and ending doesn't count. Return\
    \ empty string if you didn't\n# find any vowel met the above condition. \n# You\
    \ may assume that the given string contains English letter only.\n# Example:\n\
    #\n# $1 is a string\nget_closest_vowel() {\n    local word=$1\n    local word_len=${#word}\n\
    \    local i=0\n    local j=0\n    local k=0\n    local vowel_pos=0\n    local\
    \ vowel_pos_arr=()\n    local vowel_pos_arr_len=0\n    local vowel_pos_arr_idx=0\n\
    \    local vowel_pos_arr_idx_prev=0\n    local vowel_pos_arr_idx_next=0\n    local\
    \ vowel_pos_arr_idx_prev_diff=0\n    local vowel_pos_arr_idx_next_diff=0\n   \
    \ local vowel_pos_arr_idx_prev_diff_min=0\n    local vowel_pos_arr_idx_next_diff_min=0\n\
    \    local vowel_pos_arr_idx_prev_diff_min_idx=0\n    local vowel_pos_arr_idx_next_diff_min_idx=0\n\
    \    local vowel_pos_arr_idx_prev_diff_min_idx_vowel=0\n    local vowel_pos_arr_idx_next_diff_min_idx_vowel=0\n\
    \    local vowel_pos_arr_idx_prev_diff_min_idx_vowel_len=0\n    local vowel_pos_arr_idx_next_diff_min_idx_vowel_len=0\n\
    \    local vowel_pos_arr_idx_prev_diff_min_idx_vowel_len_min=0\n    local vowel_pos_arr_idx_next_diff_min_idx_vowel_len_min=0\n\
    \    local vowel_pos_arr_idx_prev_diff_min_idx_vowel_len_min_idx=0\n    local\
    \ vowel_pos_arr_idx_next_diff_min_idx_vowel_len_min_idx=0\n    local vowel_pos_arr_idx_prev_diff_min_idx_vowel_len_min_idx_vowel=0\n\
    \    local vowel_pos_arr_idx_next_diff_min\n}\n\ncandidate() {\n    get_closest_vowel\
    \ \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"yogurt\") = \"u\" ]]\n\
    \    [[ $(candidate \"full\") = \"u\" ]]\n    [[ $(candidate \"easy\") = \"\"\
    \ ]]\n    [[ $(candidate \"eAsy\") = \"\" ]]\n    [[ $(candidate \"ali\") = \"\
    \" ]]\n    [[ $(candidate \"bad\") = \"a\" ]]\n    [[ $(candidate \"most\") =\
    \ \"o\" ]]\n    [[ $(candidate \"ab\") = \"\" ]]\n    [[ $(candidate \"ba\") =\
    \ \"\" ]]\n    [[ $(candidate \"quick\") = \"\" ]]\n    [[ $(candidate \"anime\"\
    ) = \"i\" ]]\n    [[ $(candidate \"Asia\") = \"\" ]]\n    [[ $(candidate \"Above\"\
    ) = \"o\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660002112
- exit_code: 1
  program: "#!/bin/bash\n# You are given a word. Your task is to find the closest\
    \ vowel that stands between \n# two consonants from the right side of the word\
    \ (case sensitive).\n# Vowels in the beginning and ending doesn't count. Return\
    \ empty string if you didn't\n# find any vowel met the above condition. \n# You\
    \ may assume that the given string contains English letter only.\n# Example:\n\
    #\n# $1 is a string\nget_closest_vowel() {\n    local word=$1\n    local word_len=${#word}\n\
    \    local i=0\n    local vowel_pos=0\n    local vowel_len=0\n    local vowel_str=\"\
    \"\n    local vowel_arr=()\n    local vowel_arr_len=0\n    local vowel_arr_idx=0\n\
    \    local vowel_arr_idx_max=0\n    local vowel_arr_idx_min=0\n    local vowel_arr_idx_mid=0\n\
    \    local vowel_arr_idx_mid_prev=0\n    local vowel_arr_idx_mid_next=0\n    local\
    \ vowel_arr_idx_mid_prev_diff=0\n    local vowel_arr_idx_mid_next_diff=0\n   \
    \ local vowel_arr_idx_mid_diff=0\n    local vowel_arr_idx_mid_diff_prev=0\n  \
    \  local vowel_arr_idx_mid_diff_next=0\n    local vowel_arr_idx_mid_diff_prev_diff=0\n\
    \    local vowel_arr_idx_mid_diff_next_diff=0\n    local vowel_arr_idx_mid_diff_prev_diff_prev=0\n\
    \    local vowel_arr_idx_mid_diff_next_diff_next=0\n    local vowel_arr_idx_mid_diff_prev_diff_prev_diff=0\n\
    \    local vowel_arr_idx_mid_diff_next_diff_next_diff=0\n    local vowel_arr_idx_mid_diff_prev_diff_prev_diff_prev=0\n\
    \    local vowel_arr_idx_mid_diff_next_diff_next_diff_next=0\n    local vowel_arr_idx_mid_diff_prev_diff_prev_diff_prev_diff=0\n\
    \    local vowel_arr_idx_mid_diff_next_diff_next_diff_next_diff=0\n    local vowel_arr_idx_mid_diff_prev_diff_prev_diff_prev_diff_prev=0\n\
    \    local vowel_arr_idx_mid_diff_next_diff_next_diff_next_diff_\n}\n\ncandidate()\
    \ {\n    get_closest_vowel \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate\
    \ \"yogurt\") = \"u\" ]]\n    [[ $(candidate \"full\") = \"u\" ]]\n    [[ $(candidate\
    \ \"easy\") = \"\" ]]\n    [[ $(candidate \"eAsy\") = \"\" ]]\n    [[ $(candidate\
    \ \"ali\") = \"\" ]]\n    [[ $(candidate \"bad\") = \"a\" ]]\n    [[ $(candidate\
    \ \"most\") = \"o\" ]]\n    [[ $(candidate \"ab\") = \"\" ]]\n    [[ $(candidate\
    \ \"ba\") = \"\" ]]\n    [[ $(candidate \"quick\") = \"\" ]]\n    [[ $(candidate\
    \ \"anime\") = \"i\" ]]\n    [[ $(candidate \"Asia\") = \"\" ]]\n    [[ $(candidate\
    \ \"Above\") = \"o\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660002112
- exit_code: 2
  program: "#!/bin/bash\n# You are given a word. Your task is to find the closest\
    \ vowel that stands between \n# two consonants from the right side of the word\
    \ (case sensitive).\n# Vowels in the beginning and ending doesn't count. Return\
    \ empty string if you didn't\n# find any vowel met the above condition. \n# You\
    \ may assume that the given string contains English letter only.\n# Example:\n\
    #\n# $1 is a string\nget_closest_vowel() {\n    local word=$1\n    local len=${#word}\n\
    \    local i=0\n    local j=0\n    local vowel=''\n    local closest_vowel=''\n\
    \    local closest_vowel_index=0\n    local closest_vowel_distance=0\n    local\
    \ vowel_index=0\n    local vowel_distance=0\n    local vowel_list='aeiou'\n  \
    \  local vowel_list_len=${#vowel_list}\n    local vowel_list_index=0\n    local\
    \ vowel_list_char=''\n    local word_char=''\n    local word_char_index=0\n  \
    \  local word_char_distance=0\n    local word_char_is_vowel=0\n    local word_char_is_consonant=0\n\
    \    local word_char_is_vowel_list=0\n    local word_char_is_consonant_list=0\n\
    \    local consonant_list='bcdfghjklmnpqrstvwxyz'\n    local consonant_list_len=${#consonant_list}\n\
    \    local consonant_list_index=0\n    local consonant_list_char=''\n    local\
    \ word_char_is_consonant_list=0\n    local word_char_is_consonant=0\n    local\
    \ word_char_is_vowel=0\n    local word_char_is_vowel_list=0\n    local word_char_is_consonant_list=0\n\
    \    local consonant_list='bcdfghjklmnpqrstvwxyz'\n    local consonant_list_len=${#consonant_list}\n\
    \    local consonant_list_index=0\n    local consonant_list_char=''\n    local\
    \ word_char_is_consonant_list=0\n    local word_char_is_consonant=0\n    local\
    \ word_char_is_vowel=0\n    local word_char_is_vowel_list=0\n    local word_char_is_consonant_list=0\n\
    \    local consonant_list='bcdfghjklmnp\n}\n\ncandidate() {\n    get_closest_vowel\
    \ \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"yogurt\") = \"u\" ]]\n\
    \    [[ $(candidate \"full\") = \"u\" ]]\n    [[ $(candidate \"easy\") = \"\"\
    \ ]]\n    [[ $(candidate \"eAsy\") = \"\" ]]\n    [[ $(candidate \"ali\") = \"\
    \" ]]\n    [[ $(candidate \"bad\") = \"a\" ]]\n    [[ $(candidate \"most\") =\
    \ \"o\" ]]\n    [[ $(candidate \"ab\") = \"\" ]]\n    [[ $(candidate \"ba\") =\
    \ \"\" ]]\n    [[ $(candidate \"quick\") = \"\" ]]\n    [[ $(candidate \"anime\"\
    ) = \"i\" ]]\n    [[ $(candidate \"Asia\") = \"\" ]]\n    [[ $(candidate \"Above\"\
    ) = \"o\" ]]\n}\n\nrun_test"
  status: SyntaxError
  stderr: '/tmp/tmp83e0473b.sh: line 50: unexpected EOF while looking for matching
    `''''

    /tmp/tmp83e0473b.sh: line 75: syntax error: unexpected end of file

    '
  stdout: ''
  timestamp: 1660002112
- exit_code: 1
  program: "#!/bin/bash\n# You are given a word. Your task is to find the closest\
    \ vowel that stands between \n# two consonants from the right side of the word\
    \ (case sensitive).\n# Vowels in the beginning and ending doesn't count. Return\
    \ empty string if you didn't\n# find any vowel met the above condition. \n# You\
    \ may assume that the given string contains English letter only.\n# Example:\n\
    #\n# $1 is a string\nget_closest_vowel() {\n    local word=$1\n    local len=${#word}\n\
    \    local i=0\n    local vowels=\"aeiou\"\n    local vowel_pos=0\n    local closest_vowel_pos=0\n\
    \    local closest_vowel=\"\"\n    local found_vowel=0\n    local found_consonant=0\n\
    \    local vowel_pos_arr=()\n    local vowel_pos_arr_len=0\n    local vowel_pos_arr_idx=0\n\
    \    local vowel_pos_arr_last_idx=0\n    local vowel_pos_arr_last_idx_val=0\n\
    \    local vowel_pos_arr_last_idx_val_plus_one=0\n    local vowel_pos_arr_last_idx_val_minus_one=0\n\
    \    local vowel_pos_arr_last_idx_val_plus_two=0\n    local vowel_pos_arr_last_idx_val_minus_two=0\n\
    \    local vowel_pos_arr_last_idx_val_plus_three=0\n    local vowel_pos_arr_last_idx_val_minus_three=0\n\
    \    local vowel_pos_arr_last_idx_val_plus_four=0\n    local vowel_pos_arr_last_idx_val_minus_four=0\n\
    \    local vowel_pos_arr_last_idx_val_plus_five=0\n    local vowel_pos_arr_last_idx_val_minus_five=0\n\
    \    local vowel_pos_arr_last_idx_val_plus_six=0\n    local vowel_pos_arr_last_idx_val_minus_six=0\n\
    \    local vowel_pos_arr_last_idx_val_plus_seven=0\n    local vowel_pos_arr_last_idx_val_minus_seven=0\n\
    \    local vowel_pos_arr_last_idx_val_plus_eight=0\n    local vowel_pos_arr_last_idx_val_minus_eight=0\n\
    \    local vowel_pos_arr_last_idx_val_plus_nine=0\n    local vowel_pos_arr\n}\n\
    \ncandidate() {\n    get_closest_vowel \"$@\"\n}\n\nset -e\nrun_test() {\n   \
    \ [[ $(candidate \"yogurt\") = \"u\" ]]\n    [[ $(candidate \"full\") = \"u\"\
    \ ]]\n    [[ $(candidate \"easy\") = \"\" ]]\n    [[ $(candidate \"eAsy\") = \"\
    \" ]]\n    [[ $(candidate \"ali\") = \"\" ]]\n    [[ $(candidate \"bad\") = \"\
    a\" ]]\n    [[ $(candidate \"most\") = \"o\" ]]\n    [[ $(candidate \"ab\") =\
    \ \"\" ]]\n    [[ $(candidate \"ba\") = \"\" ]]\n    [[ $(candidate \"quick\"\
    ) = \"\" ]]\n    [[ $(candidate \"anime\") = \"i\" ]]\n    [[ $(candidate \"Asia\"\
    ) = \"\" ]]\n    [[ $(candidate \"Above\") = \"o\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660002112
- exit_code: 1
  program: "#!/bin/bash\n# You are given a word. Your task is to find the closest\
    \ vowel that stands between \n# two consonants from the right side of the word\
    \ (case sensitive).\n# Vowels in the beginning and ending doesn't count. Return\
    \ empty string if you didn't\n# find any vowel met the above condition. \n# You\
    \ may assume that the given string contains English letter only.\n# Example:\n\
    #\n# $1 is a string\nget_closest_vowel() {\n    local word=$1\n    local word_len=${#word}\n\
    \    local i=0\n    local vowel_pos=0\n    local vowel_pos_prev=0\n    local vowel_pos_next=0\n\
    \    local vowel_pos_prev_next=0\n    local vowel_pos_prev_prev=0\n    local vowel_pos_next_next=0\n\
    \    local vowel_pos_prev_prev_next=0\n    local vowel_pos_prev_next_next=0\n\
    \    local vowel_pos_prev_prev_next_next=0\n    local vowel_pos_prev_prev_next_next_next=0\n\
    \    local vowel_pos_prev_prev_next_next_next_next=0\n    local vowel_pos_prev_prev_next_next_next_next_next=0\n\
    \    local vowel_pos_prev_prev_next_next_next_next_next_next=0\n    local vowel_pos_prev_prev_next_next_next_next_next_next_next=0\n\
    \    local vowel_pos_prev_prev_next_next_next_next_next_next_next_next=0\n   \
    \ local vowel_pos_prev_prev_next_next_next_next_next_next_next_next_next=0\n \
    \   local vowel_pos_prev_prev_next_next_next_next_next_next_next_next_next_next=0\n\
    \    local vowel_pos_prev_prev_next_next_next_next_next_next_next_next_next_next_next=0\n\
    \    local vowel_pos_prev_prev_next_next_next_next_next_next_next_next_next_next_next_next=0\n\
    \    local vowel_pos_prev_prev_next_next_next_next_next_next_next_next_next_next_next_next_next=0\n\
    \    local vowel_pos_prev_prev_next_next_next_next_next_next_next_next_next_next_next_next_next_next=0\n\
    \    local vowel_pos_prev_prev_next_next_next_next_next_next_next_next_next_next_next_\n\
    }\n\ncandidate() {\n    get_closest_vowel \"$@\"\n}\n\nset -e\nrun_test() {\n\
    \    [[ $(candidate \"yogurt\") = \"u\" ]]\n    [[ $(candidate \"full\") = \"\
    u\" ]]\n    [[ $(candidate \"easy\") = \"\" ]]\n    [[ $(candidate \"eAsy\") =\
    \ \"\" ]]\n    [[ $(candidate \"ali\") = \"\" ]]\n    [[ $(candidate \"bad\")\
    \ = \"a\" ]]\n    [[ $(candidate \"most\") = \"o\" ]]\n    [[ $(candidate \"ab\"\
    ) = \"\" ]]\n    [[ $(candidate \"ba\") = \"\" ]]\n    [[ $(candidate \"quick\"\
    ) = \"\" ]]\n    [[ $(candidate \"anime\") = \"i\" ]]\n    [[ $(candidate \"Asia\"\
    ) = \"\" ]]\n    [[ $(candidate \"Above\") = \"o\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660002111
- exit_code: 1
  program: "#!/bin/bash\n# You are given a word. Your task is to find the closest\
    \ vowel that stands between \n# two consonants from the right side of the word\
    \ (case sensitive).\n# Vowels in the beginning and ending doesn't count. Return\
    \ empty string if you didn't\n# find any vowel met the above condition. \n# You\
    \ may assume that the given string contains English letter only.\n# Example:\n\
    #\n# $1 is a string\nget_closest_vowel() {\n    local word=\"$1\"\n    local len=${#word}\n\
    \    local i=1\n    local vowel=\"\"\n    local vowel_pos=0\n    local vowel_len=0\n\
    \    local consonant_pos=0\n    local consonant_len=0\n    local closest_vowel=\"\
    \"\n    local closest_vowel_pos=0\n    local closest_vowel_len=0\n    local closest_consonant_pos=0\n\
    \    local closest_consonant_len=0\n    local closest_distance=0\n    local distance=0\n\
    \    local closest_vowel_index=0\n    local closest_consonant_index=0\n    local\
    \ closest_vowel_index_len=0\n    local closest_consonant_index_len=0\n    local\
    \ closest_vowel_index_pos=0\n    local closest_consonant_index_pos=0\n    local\
    \ closest_vowel_index_distance=0\n    local closest_consonant_index_distance=0\n\
    \    local closest_vowel_index_distance_len=0\n    local closest_consonant_index_distance_len=0\n\
    \    local closest_vowel_index_distance_pos=0\n    local closest_consonant_index_distance_pos=0\n\
    \    local closest_vowel_index_distance_len_pos=0\n    local closest_consonant_index_distance_len_pos=0\n\
    \    local closest_vowel_index_distance_pos_len=0\n    local closest_consonant_index_distance_pos_len=0\n\
    \    local closest_vowel_index_distance_pos_len_pos=0\n    local closest_consonant_index_distance_pos_len_pos=0\n\
    \    local closest_vowel_index_distance_len_pos_pos=0\n    local closest_consonant_index_distance_len_pos_pos=0\n\
    \    local closest_vowel_index_distance_pos_pos_len=0\n    local closest_consonant_index_distance_pos_pos_len=0\n\
    \    local closest_vowel_index_distance_pos_\n}\n\ncandidate() {\n    get_closest_vowel\
    \ \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"yogurt\") = \"u\" ]]\n\
    \    [[ $(candidate \"full\") = \"u\" ]]\n    [[ $(candidate \"easy\") = \"\"\
    \ ]]\n    [[ $(candidate \"eAsy\") = \"\" ]]\n    [[ $(candidate \"ali\") = \"\
    \" ]]\n    [[ $(candidate \"bad\") = \"a\" ]]\n    [[ $(candidate \"most\") =\
    \ \"o\" ]]\n    [[ $(candidate \"ab\") = \"\" ]]\n    [[ $(candidate \"ba\") =\
    \ \"\" ]]\n    [[ $(candidate \"quick\") = \"\" ]]\n    [[ $(candidate \"anime\"\
    ) = \"i\" ]]\n    [[ $(candidate \"Asia\") = \"\" ]]\n    [[ $(candidate \"Above\"\
    ) = \"o\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660002112
- exit_code: 1
  program: "#!/bin/bash\n# You are given a word. Your task is to find the closest\
    \ vowel that stands between \n# two consonants from the right side of the word\
    \ (case sensitive).\n# Vowels in the beginning and ending doesn't count. Return\
    \ empty string if you didn't\n# find any vowel met the above condition. \n# You\
    \ may assume that the given string contains English letter only.\n# Example:\n\
    #\n# $1 is a string\nget_closest_vowel() {\n    local word=$1\n    local vowels=\"\
    aeiou\"\n    local last_char=${word: -1}\n    local first_char=${word:0:1}\n \
    \   local result=\"\"\n    local i=0\n    local j=0\n    local k=0\n    local\
    \ l=0\n    local m=0\n    local n=0\n    local o=0\n    local p=0\n    local q=0\n\
    \    local r=0\n    local s=0\n    local t=0\n    local u=0\n    local v=0\n \
    \   local w=0\n    local x=0\n    local y=0\n    local z=0\n    local a=0\n  \
    \  local b=0\n    local c=0\n    local d=0\n    local e=0\n    local f=0\n   \
    \ local g=0\n    local h=0\n    local i=0\n    local j=0\n    local k=0\n    local\
    \ l=0\n    local m=0\n    local n=0\n    local o=0\n    local p=0\n    local q=0\n\
    \    local r=0\n    local s=0\n    local t=0\n    local u=0\n    local v=0\n \
    \   local w=0\n    local x=0\n    local y=0\n    local z=0\n    local a=0\n  \
    \  local b=0\n    local c=0\n    local d=0\n    local e=0\n    local f=0\n   \
    \ local g=0\n    local h=0\n    local i=0\n    local j=0\n    local k=0\n    local\
    \ l=0\n    local m=0\n    local n=0\n    local o=0\n    local p=0\n    local q=0\n\
    \    local r=0\n    local s=0\n    local t=0\n    local u=0\n    local v=0\n \
    \   local w=0\n    local x=0\n    local y=0\n    local z=0\n    local a=0\n  \
    \  local b=0\n    local c=0\n    local d=0\n    local e=0\n    local f=0\n   \
    \ local g=0\n   \n}\n\ncandidate() {\n    get_closest_vowel \"$@\"\n}\n\nset -e\n\
    run_test() {\n    [[ $(candidate \"yogurt\") = \"u\" ]]\n    [[ $(candidate \"\
    full\") = \"u\" ]]\n    [[ $(candidate \"easy\") = \"\" ]]\n    [[ $(candidate\
    \ \"eAsy\") = \"\" ]]\n    [[ $(candidate \"ali\") = \"\" ]]\n    [[ $(candidate\
    \ \"bad\") = \"a\" ]]\n    [[ $(candidate \"most\") = \"o\" ]]\n    [[ $(candidate\
    \ \"ab\") = \"\" ]]\n    [[ $(candidate \"ba\") = \"\" ]]\n    [[ $(candidate\
    \ \"quick\") = \"\" ]]\n    [[ $(candidate \"anime\") = \"i\" ]]\n    [[ $(candidate\
    \ \"Asia\") = \"\" ]]\n    [[ $(candidate \"Above\") = \"o\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660002112
- exit_code: 1
  program: "#!/bin/bash\n# You are given a word. Your task is to find the closest\
    \ vowel that stands between \n# two consonants from the right side of the word\
    \ (case sensitive).\n# Vowels in the beginning and ending doesn't count. Return\
    \ empty string if you didn't\n# find any vowel met the above condition. \n# You\
    \ may assume that the given string contains English letter only.\n# Example:\n\
    #\n# $1 is a string\nget_closest_vowel() {\n    local word=$1\n    local word_len=${#word}\n\
    \    local i=0\n    local vowel_pos=0\n    local vowel_pos_prev=0\n    local vowel_pos_next=0\n\
    \    local vowel_pos_prev_prev=0\n    local vowel_pos_next_next=0\n    local vowel_pos_prev_prev_prev=0\n\
    \    local vowel_pos_next_next_next=0\n    local vowel_pos_prev_prev_prev_prev=0\n\
    \    local vowel_pos_next_next_next_next=0\n    local vowel_pos_prev_prev_prev_prev_prev=0\n\
    \    local vowel_pos_next_next_next_next_next=0\n    local vowel_pos_prev_prev_prev_prev_prev_prev=0\n\
    \    local vowel_pos_next_next_next_next_next_next=0\n    local vowel_pos_prev_prev_prev_prev_prev_prev_prev=0\n\
    \    local vowel_pos_next_next_next_next_next_next_next=0\n    local vowel_pos_prev_prev_prev_prev_prev_prev_prev_prev=0\n\
    \    local vowel_pos_next_next_next_next_next_next_next_next=0\n    local vowel_pos_prev_prev_prev_prev_prev_prev_prev_prev_prev=0\n\
    \    local vowel_pos_next_next_next_next_next_next_next_next_next=0\n    local\
    \ vowel_pos_prev_prev_prev_prev_prev_prev_prev_prev_prev_prev=0\n    local vowel_pos_next_next_next_next_next_next_next_next_next_next=0\n\
    \    local vowel_pos_prev_prev_prev_prev_prev_prev_prev_prev_prev_prev_prev=0\n\
    \    local vowel_pos_next_next_next_next_next_next_next_next_next_next_next=0\n\
    \    local vowel_pos_prev_prev_prev_prev_prev_prev_prev_prev_prev_prev_prev_prev=0\n\
    \    local vowel_pos_next_\n}\n\ncandidate() {\n    get_closest_vowel \"$@\"\n\
    }\n\nset -e\nrun_test() {\n    [[ $(candidate \"yogurt\") = \"u\" ]]\n    [[ $(candidate\
    \ \"full\") = \"u\" ]]\n    [[ $(candidate \"easy\") = \"\" ]]\n    [[ $(candidate\
    \ \"eAsy\") = \"\" ]]\n    [[ $(candidate \"ali\") = \"\" ]]\n    [[ $(candidate\
    \ \"bad\") = \"a\" ]]\n    [[ $(candidate \"most\") = \"o\" ]]\n    [[ $(candidate\
    \ \"ab\") = \"\" ]]\n    [[ $(candidate \"ba\") = \"\" ]]\n    [[ $(candidate\
    \ \"quick\") = \"\" ]]\n    [[ $(candidate \"anime\") = \"i\" ]]\n    [[ $(candidate\
    \ \"Asia\") = \"\" ]]\n    [[ $(candidate \"Above\") = \"o\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660002111
- exit_code: 1
  program: "#!/bin/bash\n# You are given a word. Your task is to find the closest\
    \ vowel that stands between \n# two consonants from the right side of the word\
    \ (case sensitive).\n# Vowels in the beginning and ending doesn't count. Return\
    \ empty string if you didn't\n# find any vowel met the above condition. \n# You\
    \ may assume that the given string contains English letter only.\n# Example:\n\
    #\n# $1 is a string\nget_closest_vowel() {\n    local word=$1\n    local len=${#word}\n\
    \    local i=0\n    local j=0\n    local k=0\n    local vowel=''\n    local vowels='aeiou'\n\
    \    local consonants='bcdfghjklmnpqrstvwxyz'\n    local found=0\n    local found_vowel=''\n\
    \    local found_consonant=''\n    local found_index=0\n    local found_index_vowel=0\n\
    \    local found_index_consonant=0\n    local found_index_vowel_tmp=0\n    local\
    \ found_index_consonant_tmp=0\n    local found_index_vowel_tmp_2=0\n    local\
    \ found_index_consonant_tmp_2=0\n    local found_index_vowel_tmp_3=0\n    local\
    \ found_index_consonant_tmp_3=0\n    local found_index_vowel_tmp_4=0\n    local\
    \ found_index_consonant_tmp_4=0\n    local found_index_vowel_tmp_5=0\n    local\
    \ found_index_consonant_tmp_5=0\n    local found_index_vowel_tmp_6=0\n    local\
    \ found_index_consonant_tmp_6=0\n    local found_index_vowel_tmp_7=0\n    local\
    \ found_index_consonant_tmp_7=0\n    local found_index_vowel_tmp_8=0\n    local\
    \ found_index_consonant_tmp_8=0\n    local found_index_vowel_tmp_9=0\n    local\
    \ found_index_consonant_tmp_9=0\n    local found_index_vowel_tmp_10=0\n    local\
    \ found_index_consonant_tmp_10=0\n    local found_index_vowel_tmp_11=0\n    local\
    \ found_index_consonant_tmp_11=0\n    local found_index_vowel_tmp_12=0\n    local\
    \ found_index_consonant_tmp_12=0\n    local found\n}\n\ncandidate() {\n    get_closest_vowel\
    \ \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"yogurt\") = \"u\" ]]\n\
    \    [[ $(candidate \"full\") = \"u\" ]]\n    [[ $(candidate \"easy\") = \"\"\
    \ ]]\n    [[ $(candidate \"eAsy\") = \"\" ]]\n    [[ $(candidate \"ali\") = \"\
    \" ]]\n    [[ $(candidate \"bad\") = \"a\" ]]\n    [[ $(candidate \"most\") =\
    \ \"o\" ]]\n    [[ $(candidate \"ab\") = \"\" ]]\n    [[ $(candidate \"ba\") =\
    \ \"\" ]]\n    [[ $(candidate \"quick\") = \"\" ]]\n    [[ $(candidate \"anime\"\
    ) = \"i\" ]]\n    [[ $(candidate \"Asia\") = \"\" ]]\n    [[ $(candidate \"Above\"\
    ) = \"o\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660002112
- exit_code: 1
  program: "#!/bin/bash\n# You are given a word. Your task is to find the closest\
    \ vowel that stands between \n# two consonants from the right side of the word\
    \ (case sensitive).\n# Vowels in the beginning and ending doesn't count. Return\
    \ empty string if you didn't\n# find any vowel met the above condition. \n# You\
    \ may assume that the given string contains English letter only.\n# Example:\n\
    #\n# $1 is a string\nget_closest_vowel() {\n  local word=$1\n  local word_len=${#word}\n\
    \  local i=0\n  local last_consonant_index=0\n  local first_vowel_index=0\n  local\
    \ closest_vowel_index=0\n  local closest_vowel=\"\"\n  local vowels=\"aeiou\"\n\
    \  local consonants=\"bcdfghjklmnpqrstvwxyz\"\n  local current_char=\"\"\n  local\
    \ current_char_index=0\n  local current_char_is_vowel=0\n  local current_char_is_consonant=0\n\
    \  local current_char_is_vowel_or_consonant=0\n  local current_char_is_vowel_or_consonant_index=0\n\
    \  local current_char_is_vowel_or_consonant_index_diff=0\n  local current_char_is_vowel_or_consonant_index_diff_min=0\n\
    \  local current_char_is_vowel_or_consonant_index_diff_min_index=0\n  local current_char_is_vowel_or_consonant_index_diff_min_index_diff=0\n\
    \  local current_char_is_vowel_or_consonant_index_diff_min_index_diff_min=0\n\
    \  local current_char_is_vowel_or_consonant_index_diff_min_index_diff_min_index=0\n\
    \  local current_char_is_vowel_or_consonant_index_diff_min_index_diff_min_index_diff=0\n\
    \  local current_char_is_vowel_or_consonant_index_diff_min_index_diff_min_index_diff_min=0\n\
    \  local current_char_is_vowel_or_consonant_index_diff_min_index_diff_min_index_diff_min_index=0\n\
    \  local current_char_is_vowel_or_consonant_index_diff_min_index_diff_min_index_diff_min_index\n\
    }\n\ncandidate() {\n    get_closest_vowel \"$@\"\n}\n\nset -e\nrun_test() {\n\
    \    [[ $(candidate \"yogurt\") = \"u\" ]]\n    [[ $(candidate \"full\") = \"\
    u\" ]]\n    [[ $(candidate \"easy\") = \"\" ]]\n    [[ $(candidate \"eAsy\") =\
    \ \"\" ]]\n    [[ $(candidate \"ali\") = \"\" ]]\n    [[ $(candidate \"bad\")\
    \ = \"a\" ]]\n    [[ $(candidate \"most\") = \"o\" ]]\n    [[ $(candidate \"ab\"\
    ) = \"\" ]]\n    [[ $(candidate \"ba\") = \"\" ]]\n    [[ $(candidate \"quick\"\
    ) = \"\" ]]\n    [[ $(candidate \"anime\") = \"i\" ]]\n    [[ $(candidate \"Asia\"\
    ) = \"\" ]]\n    [[ $(candidate \"Above\") = \"o\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660002112
- exit_code: 2
  program: "#!/bin/bash\n# You are given a word. Your task is to find the closest\
    \ vowel that stands between \n# two consonants from the right side of the word\
    \ (case sensitive).\n# Vowels in the beginning and ending doesn't count. Return\
    \ empty string if you didn't\n# find any vowel met the above condition. \n# You\
    \ may assume that the given string contains English letter only.\n# Example:\n\
    #\n# $1 is a string\nget_closest_vowel() {\n    local word=$1\n    local word_len=${#word}\n\
    \    local i=0\n    local last_consonant_index=0\n    local closest_vowel_index=0\n\
    \    local closest_vowel_distance=0\n    local vowel_distance=0\n    local vowels=('a'\
    \ 'e' 'i' 'o' 'u')\n    local consonants=('b' 'c' 'd' 'f' 'g' 'h' 'j' 'k' 'l'\
    \ 'm' 'n' 'p' 'q' 'r' 's' 't' 'v' 'w' 'x' 'y' 'z')\n    local is_vowel=0\n   \
    \ local is_consonant=0\n    local closest_vowel=''\n\n    for (( i=0; i<word_len;\
    \ i++ )); do\n        is_vowel=0\n        is_consonant=0\n        for vowel in\
    \ ${vowels[@]}; do\n            if [[ ${word:$i:1} == $vowel ]]; then\n      \
    \          is_vowel=1\n                break\n            fi\n        done\n \
    \       for consonant in ${consonants[@]}; do\n            if [[ ${word:$i:1}\
    \ == $consonant ]]; then\n                is_consonant=1\n                break\n\
    \            fi\n        done\n        if [[ $is_vowel == 1 ]]; then\n       \
    \     vowel_distance=$(( i - last_consonant_index ))\n            if [[ $vowel_distance\
    \ -gt 1 ]]; then\n                if [[ $closest_vowel_distance -eq 0 ]]; then\n\
    \                    closest_vowel_distance=$vowel_distance\n                \
    \    closest_vowel_index=$i\n                elif [[ $vowel_distance -lt $closest_vowel_distance\
    \ ]]; then\n                    closest_vowel_distance=$vowel_distance\n     \
    \               closest_vowel_index=$i\n                fi\n            fi\n \
    \       elif [[ $is_consonant == 1 ]]; then\n            last_consonant_index=$i\n\
    \        fi\n   \n}\n\ncandidate() {\n    get_closest_vowel \"$@\"\n}\n\nset -e\n\
    run_test() {\n    [[ $(candidate \"yogurt\") = \"u\" ]]\n    [[ $(candidate \"\
    full\") = \"u\" ]]\n    [[ $(candidate \"easy\") = \"\" ]]\n    [[ $(candidate\
    \ \"eAsy\") = \"\" ]]\n    [[ $(candidate \"ali\") = \"\" ]]\n    [[ $(candidate\
    \ \"bad\") = \"a\" ]]\n    [[ $(candidate \"most\") = \"o\" ]]\n    [[ $(candidate\
    \ \"ab\") = \"\" ]]\n    [[ $(candidate \"ba\") = \"\" ]]\n    [[ $(candidate\
    \ \"quick\") = \"\" ]]\n    [[ $(candidate \"anime\") = \"i\" ]]\n    [[ $(candidate\
    \ \"Asia\") = \"\" ]]\n    [[ $(candidate \"Above\") = \"o\" ]]\n}\n\nrun_test"
  status: SyntaxError
  stderr: '/tmp/tmptm9_1lka.sh: line 54: syntax error near unexpected token `}''

    /tmp/tmptm9_1lka.sh: line 54: `}''

    '
  stdout: ''
  timestamp: 1660002112
- exit_code: 1
  program: "#!/bin/bash\n# You are given a word. Your task is to find the closest\
    \ vowel that stands between \n# two consonants from the right side of the word\
    \ (case sensitive).\n# Vowels in the beginning and ending doesn't count. Return\
    \ empty string if you didn't\n# find any vowel met the above condition. \n# You\
    \ may assume that the given string contains English letter only.\n# Example:\n\
    #\n# $1 is a string\nget_closest_vowel() {\n  local word=$1\n  local word_len=${#word}\n\
    \  local i=0\n  local j=0\n  local k=0\n  local closest_vowel=\"\"\n  local closest_vowel_index=0\n\
    \  local closest_vowel_distance=0\n  local vowel_index=0\n  local vowel_distance=0\n\
    \  local vowel_list=\"a e i o u\"\n  local vowel=\"\"\n  local is_vowel=0\n  local\
    \ is_consonant=0\n  local is_first_char=0\n  local is_last_char=0\n  local is_first_vowel=0\n\
    \  local is_last_vowel=0\n  local is_first_consonant=0\n  local is_last_consonant=0\n\
    \  local is_first_vowel_found=0\n  local is_last_vowel_found=0\n  local is_first_consonant_found=0\n\
    \  local is_last_consonant_found=0\n  local is_first_vowel_found_index=0\n  local\
    \ is_last_vowel_found_index=0\n  local is_first_consonant_found_index=0\n  local\
    \ is_last_consonant_found_index=0\n  local is_first_vowel_found_distance=0\n \
    \ local is_last_vowel_found_distance=0\n  local is_first_consonant_found_distance=0\n\
    \  local is_last_consonant_found_distance=0\n  local is_first_vowel_found_distance_index=0\n\
    \  local is_last_vowel_found_distance_index=0\n  local is_first_consonant_found_distance_index=0\n\
    \  local is_last_consonant_found_distance_index=0\n  local is_first_vowel_found_distance_index_distance=0\n\
    \  local is_last_vowel_found_distance_index_distance=0\n  local is_first_consonant_found_distance_index_distance=0\n\
    \  local is_last\n}\n\ncandidate() {\n    get_closest_vowel \"$@\"\n}\n\nset -e\n\
    run_test() {\n    [[ $(candidate \"yogurt\") = \"u\" ]]\n    [[ $(candidate \"\
    full\") = \"u\" ]]\n    [[ $(candidate \"easy\") = \"\" ]]\n    [[ $(candidate\
    \ \"eAsy\") = \"\" ]]\n    [[ $(candidate \"ali\") = \"\" ]]\n    [[ $(candidate\
    \ \"bad\") = \"a\" ]]\n    [[ $(candidate \"most\") = \"o\" ]]\n    [[ $(candidate\
    \ \"ab\") = \"\" ]]\n    [[ $(candidate \"ba\") = \"\" ]]\n    [[ $(candidate\
    \ \"quick\") = \"\" ]]\n    [[ $(candidate \"anime\") = \"i\" ]]\n    [[ $(candidate\
    \ \"Asia\") = \"\" ]]\n    [[ $(candidate \"Above\") = \"o\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660002112
- exit_code: 1
  program: "#!/bin/bash\n# You are given a word. Your task is to find the closest\
    \ vowel that stands between \n# two consonants from the right side of the word\
    \ (case sensitive).\n# Vowels in the beginning and ending doesn't count. Return\
    \ empty string if you didn't\n# find any vowel met the above condition. \n# You\
    \ may assume that the given string contains English letter only.\n# Example:\n\
    #\n# $1 is a string\nget_closest_vowel() {\n    local word=$1\n    local len=${#word}\n\
    \    local i=0\n    local j=0\n    local k=0\n    local vowels=('a' 'e' 'i' 'o'\
    \ 'u')\n    local consonants=('b' 'c' 'd' 'f' 'g' 'h' 'j' 'k' 'l' 'm' 'n' 'p'\
    \ 'q' 'r' 's' 't' 'v' 'w' 'x' 'y' 'z')\n    local vowel=''\n    local consonant=''\n\
    \    local result=''\n    local found=0\n    local found_vowel=0\n    local found_consonant=0\n\
    \    local found_vowel_index=0\n    local found_consonant_index=0\n    local found_vowel_index_prev=0\n\
    \    local found_consonant_index_prev=0\n    local found_vowel_index_next=0\n\
    \    local found_consonant_index_next=0\n    local found_vowel_index_prev_prev=0\n\
    \    local found_consonant_index_prev_prev=0\n    local found_vowel_index_next_next=0\n\
    \    local found_consonant_index_next_next=0\n    local found_vowel_index_prev_prev_prev=0\n\
    \    local found_consonant_index_prev_prev_prev=0\n    local found_vowel_index_next_next_next=0\n\
    \    local found_consonant_index_next_next_next=0\n    local found_vowel_index_prev_prev_prev_prev=0\n\
    \    local found_consonant_index_prev_prev_prev_prev=0\n    local found_vowel_index_next_next_next_next=0\n\
    \    local found_consonant_index_next_next_next_next=0\n    local found_vowel_index_prev_prev_prev_prev_prev=0\n\
    \    local found_consonant_index_prev_prev_prev_prev_prev=0\n    local found\n\
    }\n\ncandidate() {\n    get_closest_vowel \"$@\"\n}\n\nset -e\nrun_test() {\n\
    \    [[ $(candidate \"yogurt\") = \"u\" ]]\n    [[ $(candidate \"full\") = \"\
    u\" ]]\n    [[ $(candidate \"easy\") = \"\" ]]\n    [[ $(candidate \"eAsy\") =\
    \ \"\" ]]\n    [[ $(candidate \"ali\") = \"\" ]]\n    [[ $(candidate \"bad\")\
    \ = \"a\" ]]\n    [[ $(candidate \"most\") = \"o\" ]]\n    [[ $(candidate \"ab\"\
    ) = \"\" ]]\n    [[ $(candidate \"ba\") = \"\" ]]\n    [[ $(candidate \"quick\"\
    ) = \"\" ]]\n    [[ $(candidate \"anime\") = \"i\" ]]\n    [[ $(candidate \"Asia\"\
    ) = \"\" ]]\n    [[ $(candidate \"Above\") = \"o\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660002112
- exit_code: 1
  program: "#!/bin/bash\n# You are given a word. Your task is to find the closest\
    \ vowel that stands between \n# two consonants from the right side of the word\
    \ (case sensitive).\n# Vowels in the beginning and ending doesn't count. Return\
    \ empty string if you didn't\n# find any vowel met the above condition. \n# You\
    \ may assume that the given string contains English letter only.\n# Example:\n\
    #\n# $1 is a string\nget_closest_vowel() {\n    local word=$1\n    local word_len=${#word}\n\
    \    local i=0\n    local j=0\n    local vowel_index=0\n    local vowel_index_arr=()\n\
    \    local vowel_index_arr_len=0\n    local closest_vowel_index=0\n    local closest_vowel_index_len=0\n\
    \    local closest_vowel_index_arr=()\n    local closest_vowel_index_arr_len=0\n\
    \    local closest_vowel_index_arr_last_index=0\n    local closest_vowel_index_arr_last_index_len=0\n\
    \    local closest_vowel_index_arr_last_index_arr=()\n    local closest_vowel_index_arr_last_index_arr_len=0\n\
    \    local closest_vowel_index_arr_last_index_arr_last_index=0\n    local closest_vowel_index_arr_last_index_arr_last_index_len=0\n\
    \    local closest_vowel_index_arr_last_index_arr_last_index_arr=()\n    local\
    \ closest_vowel_index_arr_last_index_arr_last_index_arr_len=0\n    local closest_vowel_index_arr_last_index_arr_last_index_arr_last_index=0\n\
    \    local closest_vowel_index_arr_last_index_arr_last_index_arr_last_index_len=0\n\
    \    local closest_vowel_index_arr_last_index_arr_last_index_arr_last_index_arr=()\n\
    \    local closest_vowel_index_arr_last_index_arr_last_index_arr_last_index_arr_len=0\n\
    \    local closest_vowel_index_arr_last_index_arr_last_index_arr_last_index_arr_last_index=0\n\
    \    local closest_vowel_index_arr_last_index_arr_last_index_arr_last_index_arr_last_index_len=0\n\
    \    local closest_vowel_index_\n}\n\ncandidate() {\n    get_closest_vowel \"\
    $@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"yogurt\") = \"u\" ]]\n \
    \   [[ $(candidate \"full\") = \"u\" ]]\n    [[ $(candidate \"easy\") = \"\" ]]\n\
    \    [[ $(candidate \"eAsy\") = \"\" ]]\n    [[ $(candidate \"ali\") = \"\" ]]\n\
    \    [[ $(candidate \"bad\") = \"a\" ]]\n    [[ $(candidate \"most\") = \"o\"\
    \ ]]\n    [[ $(candidate \"ab\") = \"\" ]]\n    [[ $(candidate \"ba\") = \"\"\
    \ ]]\n    [[ $(candidate \"quick\") = \"\" ]]\n    [[ $(candidate \"anime\") =\
    \ \"i\" ]]\n    [[ $(candidate \"Asia\") = \"\" ]]\n    [[ $(candidate \"Above\"\
    ) = \"o\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660002112
- exit_code: 1
  program: "#!/bin/bash\n# You are given a word. Your task is to find the closest\
    \ vowel that stands between \n# two consonants from the right side of the word\
    \ (case sensitive).\n# Vowels in the beginning and ending doesn't count. Return\
    \ empty string if you didn't\n# find any vowel met the above condition. \n# You\
    \ may assume that the given string contains English letter only.\n# Example:\n\
    #\n# $1 is a string\nget_closest_vowel() {\n    local word=$1\n    local word_len=${#word}\n\
    \    local i=0\n    local j=0\n    local vowel_pos=0\n    local vowel_pos_len=0\n\
    \    local vowel_pos_arr=()\n    local vowel_pos_arr_len=0\n    local vowel_pos_arr_idx=0\n\
    \    local vowel_pos_arr_idx_len=0\n    local vowel_pos_arr_idx_len_max=0\n  \
    \  local vowel_pos_arr_idx_len_max_idx=0\n    local vowel_pos_arr_idx_len_max_idx_val=0\n\
    \    local vowel_pos_arr_idx_len_max_idx_val_len=0\n    local vowel_pos_arr_idx_len_max_idx_val_len_max=0\n\
    \    local vowel_pos_arr_idx_len_max_idx_val_len_max_idx=0\n    local vowel_pos_arr_idx_len_max_idx_val_len_max_idx_val=0\n\
    \    local vowel_pos_arr_idx_len_max_idx_val_len_max_idx_val_len=0\n    local\
    \ vowel_pos_arr_idx_len_max_idx_val_len_max_idx_val_len_max=0\n    local vowel_pos_arr_idx_len_max_idx_val_len_max_idx_val_len_max_idx=0\n\
    \    local vowel_pos_arr_idx_len_max_idx_val_len_max_idx_val_len_max_idx_val=0\n\
    \    local vowel_pos_arr_idx_len_max_idx_val_len_max_idx_val_len_max_idx_val_len=0\n\
    \    local vowel_pos_arr_idx_len_max_idx_val_len_max_idx_val_len_max_idx_val_len_max=0\n\
    \    local vowel_pos_arr_idx_len_\n}\n\ncandidate() {\n    get_closest_vowel \"\
    $@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"yogurt\") = \"u\" ]]\n \
    \   [[ $(candidate \"full\") = \"u\" ]]\n    [[ $(candidate \"easy\") = \"\" ]]\n\
    \    [[ $(candidate \"eAsy\") = \"\" ]]\n    [[ $(candidate \"ali\") = \"\" ]]\n\
    \    [[ $(candidate \"bad\") = \"a\" ]]\n    [[ $(candidate \"most\") = \"o\"\
    \ ]]\n    [[ $(candidate \"ab\") = \"\" ]]\n    [[ $(candidate \"ba\") = \"\"\
    \ ]]\n    [[ $(candidate \"quick\") = \"\" ]]\n    [[ $(candidate \"anime\") =\
    \ \"i\" ]]\n    [[ $(candidate \"Asia\") = \"\" ]]\n    [[ $(candidate \"Above\"\
    ) = \"o\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660002112
- exit_code: 1
  program: "#!/bin/bash\n# You are given a word. Your task is to find the closest\
    \ vowel that stands between \n# two consonants from the right side of the word\
    \ (case sensitive).\n# Vowels in the beginning and ending doesn't count. Return\
    \ empty string if you didn't\n# find any vowel met the above condition. \n# You\
    \ may assume that the given string contains English letter only.\n# Example:\n\
    #\n# $1 is a string\nget_closest_vowel() {\n    local word=$1\n    local word_len=${#word}\n\
    \    local vowel_pos=0\n    local vowel_pos_prev=0\n    local vowel_pos_next=0\n\
    \    local vowel_pos_min=0\n    local vowel_pos_min_prev=0\n    local vowel_pos_min_next=0\n\
    \    local vowel_pos_min_prev_len=0\n    local vowel_pos_min_next_len=0\n    local\
    \ vowel_pos_min_len=0\n    local vowel_pos_min_len_prev=0\n    local vowel_pos_min_len_next=0\n\
    \    local vowel_pos_min_len_prev_len=0\n    local vowel_pos_min_len_next_len=0\n\
    \    local vowel_pos_min_len_prev_len_next=0\n    local vowel_pos_min_len_prev_len_next_len=0\n\
    \    local vowel_pos_min_len_prev_len_next_len_prev=0\n    local vowel_pos_min_len_prev_len_next_len_next=0\n\
    \    local vowel_pos_min_len_prev_len_next_len_prev_len=0\n    local vowel_pos_min_len_prev_len_next_len_next_len=0\n\
    \    local vowel_pos_min_len_prev_len_next_len_prev_len_next=0\n    local vowel_pos_min_len_prev_len_next_len_prev_len_next_len=0\n\
    \    local vowel_pos_min_len_prev_len_next_len_prev_len_next_len_prev=0\n    local\
    \ vowel_pos_min_len_prev_len_next_len_prev_len_next_len_next=0\n    local vowel_pos_min_len_prev_len_next_len_prev_len_next_len_prev_len=0\n\
    \    local vowel_pos_min_len_prev_len_next_len_prev_len_next_len_next_len=0\n\
    \    local vowel_pos_min_len_prev_len_next_len_prev_len_next_\n}\n\ncandidate()\
    \ {\n    get_closest_vowel \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate\
    \ \"yogurt\") = \"u\" ]]\n    [[ $(candidate \"full\") = \"u\" ]]\n    [[ $(candidate\
    \ \"easy\") = \"\" ]]\n    [[ $(candidate \"eAsy\") = \"\" ]]\n    [[ $(candidate\
    \ \"ali\") = \"\" ]]\n    [[ $(candidate \"bad\") = \"a\" ]]\n    [[ $(candidate\
    \ \"most\") = \"o\" ]]\n    [[ $(candidate \"ab\") = \"\" ]]\n    [[ $(candidate\
    \ \"ba\") = \"\" ]]\n    [[ $(candidate \"quick\") = \"\" ]]\n    [[ $(candidate\
    \ \"anime\") = \"i\" ]]\n    [[ $(candidate \"Asia\") = \"\" ]]\n    [[ $(candidate\
    \ \"Above\") = \"o\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660002112
- exit_code: 1
  program: "#!/bin/bash\n# You are given a word. Your task is to find the closest\
    \ vowel that stands between \n# two consonants from the right side of the word\
    \ (case sensitive).\n# Vowels in the beginning and ending doesn't count. Return\
    \ empty string if you didn't\n# find any vowel met the above condition. \n# You\
    \ may assume that the given string contains English letter only.\n# Example:\n\
    #\n# $1 is a string\nget_closest_vowel() {\n  local word=$1\n  local vowels=\"\
    aeiou\"\n  local last_char=${word: -1}\n  local first_char=${word:0:1}\n  local\
    \ result=\"\"\n  local i=0\n  local j=0\n  local k=0\n  local l=0\n  local m=0\n\
    \  local n=0\n  local o=0\n  local p=0\n  local q=0\n  local r=0\n  local s=0\n\
    \  local t=0\n  local u=0\n  local v=0\n  local w=0\n  local x=0\n  local y=0\n\
    \  local z=0\n  local a=0\n  local b=0\n  local c=0\n  local d=0\n  local e=0\n\
    \  local f=0\n  local g=0\n  local h=0\n  local i=0\n  local j=0\n  local k=0\n\
    \  local l=0\n  local m=0\n  local n=0\n  local o=0\n  local p=0\n  local q=0\n\
    \  local r=0\n  local s=0\n  local t=0\n  local u=0\n  local v=0\n  local w=0\n\
    \  local x=0\n  local y=0\n  local z=0\n  local a=0\n  local b=0\n  local c=0\n\
    \  local d=0\n  local e=0\n  local f=0\n  local g=0\n  local h=0\n  local i=0\n\
    \  local j=0\n  local k=0\n  local l=0\n  local m=0\n  local n=0\n  local o=0\n\
    \  local p=0\n  local q=0\n  local r=0\n  local s=0\n  local t=0\n  local u=0\n\
    \  local v=0\n  local w=0\n  local x=0\n  local y=0\n  local z=0\n  local a=0\n\
    \  local b=0\n  local c=0\n  local d=0\n  local e=0\n  local f=0\n  local g=0\n\
    \ \n}\n\ncandidate() {\n    get_closest_vowel \"$@\"\n}\n\nset -e\nrun_test()\
    \ {\n    [[ $(candidate \"yogurt\") = \"u\" ]]\n    [[ $(candidate \"full\") =\
    \ \"u\" ]]\n    [[ $(candidate \"easy\") = \"\" ]]\n    [[ $(candidate \"eAsy\"\
    ) = \"\" ]]\n    [[ $(candidate \"ali\") = \"\" ]]\n    [[ $(candidate \"bad\"\
    ) = \"a\" ]]\n    [[ $(candidate \"most\") = \"o\" ]]\n    [[ $(candidate \"ab\"\
    ) = \"\" ]]\n    [[ $(candidate \"ba\") = \"\" ]]\n    [[ $(candidate \"quick\"\
    ) = \"\" ]]\n    [[ $(candidate \"anime\") = \"i\" ]]\n    [[ $(candidate \"Asia\"\
    ) = \"\" ]]\n    [[ $(candidate \"Above\") = \"o\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660002112
- exit_code: 1
  program: "#!/bin/bash\n# You are given a word. Your task is to find the closest\
    \ vowel that stands between \n# two consonants from the right side of the word\
    \ (case sensitive).\n# Vowels in the beginning and ending doesn't count. Return\
    \ empty string if you didn't\n# find any vowel met the above condition. \n# You\
    \ may assume that the given string contains English letter only.\n# Example:\n\
    #\n# $1 is a string\nget_closest_vowel() {\n    local word=$1\n    local word_len=${#word}\n\
    \    local i=0\n    local j=0\n    local vowel_pos=0\n    local vowel_pos_arr=()\n\
    \    local vowel_pos_arr_len=0\n    local closest_vowel_pos=0\n    local closest_vowel_pos_len=0\n\
    \    local closest_vowel=\"\"\n    local vowel_arr=(\"a\" \"e\" \"i\" \"o\" \"\
    u\")\n    local vowel_arr_len=${#vowel_arr[@]}\n    local vowel_arr_len_minus_one=$((vowel_arr_len\
    \ - 1))\n    local vowel_arr_len_minus_two=$((vowel_arr_len - 2))\n    local vowel_arr_len_minus_three=$((vowel_arr_len\
    \ - 3))\n    local vowel_arr_len_minus_four=$((vowel_arr_len - 4))\n    local\
    \ vowel_arr_len_minus_five=$((vowel_arr_len - 5))\n    local vowel_arr_len_minus_six=$((vowel_arr_len\
    \ - 6))\n    local vowel_arr_len_minus_seven=$((vowel_arr_len - 7))\n    local\
    \ vowel_arr_len_minus_eight=$((vowel_arr_len - 8))\n    local vowel_arr_len_minus_nine=$((vowel_arr_len\
    \ - 9))\n    local vowel_arr_len_minus_ten=$((vowel_arr_len - 10))\n    local\
    \ vowel_arr_len_minus_eleven=$((vowel_arr_len - 11))\n    local vowel_arr_len_minus_twelve=$((vowel_arr_len\
    \ - 12))\n    local vowel_arr_len_minus_thirteen=$((vowel_arr_len - 13))\n   \
    \ local vowel_arr_len_minus_fourteen=$((vowel_arr_len - 14))\n    local vowel_arr_len_minus_fifteen=$((vowel_arr_len\
    \ - 15))\n    local vowel_arr_len_minus_six\n}\n\ncandidate() {\n    get_closest_vowel\
    \ \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"yogurt\") = \"u\" ]]\n\
    \    [[ $(candidate \"full\") = \"u\" ]]\n    [[ $(candidate \"easy\") = \"\"\
    \ ]]\n    [[ $(candidate \"eAsy\") = \"\" ]]\n    [[ $(candidate \"ali\") = \"\
    \" ]]\n    [[ $(candidate \"bad\") = \"a\" ]]\n    [[ $(candidate \"most\") =\
    \ \"o\" ]]\n    [[ $(candidate \"ab\") = \"\" ]]\n    [[ $(candidate \"ba\") =\
    \ \"\" ]]\n    [[ $(candidate \"quick\") = \"\" ]]\n    [[ $(candidate \"anime\"\
    ) = \"i\" ]]\n    [[ $(candidate \"Asia\") = \"\" ]]\n    [[ $(candidate \"Above\"\
    ) = \"o\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660002112
- exit_code: 1
  program: "#!/bin/bash\n# You are given a word. Your task is to find the closest\
    \ vowel that stands between \n# two consonants from the right side of the word\
    \ (case sensitive).\n# Vowels in the beginning and ending doesn't count. Return\
    \ empty string if you didn't\n# find any vowel met the above condition. \n# You\
    \ may assume that the given string contains English letter only.\n# Example:\n\
    #\n# $1 is a string\nget_closest_vowel() {\n  local word=$1\n  local word_len=${#word}\n\
    \  local i=0\n  local vowels=\"aeiou\"\n  local result=\"\"\n  local prev_char=\"\
    \"\n  local curr_char=\"\"\n  local next_char=\"\"\n  local curr_char_is_vowel=0\n\
    \  local prev_char_is_vowel=0\n  local next_char_is_vowel=0\n  local curr_char_is_consonant=0\n\
    \  local prev_char_is_consonant=0\n  local next_char_is_consonant=0\n  local curr_char_is_vowel_or_consonant=0\n\
    \  local prev_char_is_vowel_or_consonant=0\n  local next_char_is_vowel_or_consonant=0\n\
    \  local curr_char_is_vowel_and_consonant=0\n  local prev_char_is_vowel_and_consonant=0\n\
    \  local next_char_is_vowel_and_consonant=0\n  local curr_char_is_vowel_or_consonant_and_consonant=0\n\
    \  local prev_char_is_vowel_or_consonant_and_consonant=0\n  local next_char_is_vowel_or_consonant_and_consonant=0\n\
    \  local curr_char_is_vowel_and_consonant_and_consonant=0\n  local prev_char_is_vowel_and_consonant_and_consonant=0\n\
    \  local next_char_is_vowel_and_consonant_and_consonant=0\n  local curr_char_is_vowel_or_consonant_and_vowel=0\n\
    \  local prev_char_is_vowel_or_consonant_and_vowel=0\n  local next_char_is_vowel_or_consonant_and_vowel=0\n\
    \  local curr_char\n}\n\ncandidate() {\n    get_closest_vowel \"$@\"\n}\n\nset\
    \ -e\nrun_test() {\n    [[ $(candidate \"yogurt\") = \"u\" ]]\n    [[ $(candidate\
    \ \"full\") = \"u\" ]]\n    [[ $(candidate \"easy\") = \"\" ]]\n    [[ $(candidate\
    \ \"eAsy\") = \"\" ]]\n    [[ $(candidate \"ali\") = \"\" ]]\n    [[ $(candidate\
    \ \"bad\") = \"a\" ]]\n    [[ $(candidate \"most\") = \"o\" ]]\n    [[ $(candidate\
    \ \"ab\") = \"\" ]]\n    [[ $(candidate \"ba\") = \"\" ]]\n    [[ $(candidate\
    \ \"quick\") = \"\" ]]\n    [[ $(candidate \"anime\") = \"i\" ]]\n    [[ $(candidate\
    \ \"Asia\") = \"\" ]]\n    [[ $(candidate \"Above\") = \"o\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660002112
- exit_code: 1
  program: "#!/bin/bash\n# You are given a word. Your task is to find the closest\
    \ vowel that stands between \n# two consonants from the right side of the word\
    \ (case sensitive).\n# Vowels in the beginning and ending doesn't count. Return\
    \ empty string if you didn't\n# find any vowel met the above condition. \n# You\
    \ may assume that the given string contains English letter only.\n# Example:\n\
    #\n# $1 is a string\nget_closest_vowel() {\n    local word=$1\n    local word_len=${#word}\n\
    \    local i=0\n    local vowel_pos=0\n    local vowel_pos_prev=0\n    local vowel_pos_next=0\n\
    \    local vowel_pos_prev_len=0\n    local vowel_pos_next_len=0\n    local vowel_pos_prev_len_min=0\n\
    \    local vowel_pos_next_len_min=0\n    local vowel_pos_prev_len_min_pos=0\n\
    \    local vowel_pos_next_len_min_pos=0\n    local vowel_pos_prev_len_min_pos_prev=0\n\
    \    local vowel_pos_next_len_min_pos_next=0\n    local vowel_pos_prev_len_min_pos_prev_len=0\n\
    \    local vowel_pos_next_len_min_pos_next_len=0\n    local vowel_pos_prev_len_min_pos_prev_len_min=0\n\
    \    local vowel_pos_next_len_min_pos_next_len_min=0\n    local vowel_pos_prev_len_min_pos_prev_len_min_pos=0\n\
    \    local vowel_pos_next_len_min_pos_next_len_min_pos=0\n    local vowel_pos_prev_len_min_pos_prev_len_min_pos_prev=0\n\
    \    local vowel_pos_next_len_min_pos_next_len_min_pos_next=0\n    local vowel_pos_prev_len_min_pos_prev_len_min_pos_prev_len=0\n\
    \    local vowel_pos_next_len_min_pos_next_len_min_pos_next_len=0\n    local vowel_pos_prev_len_min_pos_prev_len_min_pos_prev_len_min=0\n\
    \    local vowel_pos_next_len_min_pos_next_len_min_pos_next_len_min=0\n    local\
    \ vowel_pos_prev_len_min_pos_prev_len_min_pos_prev_len_min_pos=0\n    local vowel_pos_next_\n\
    }\n\ncandidate() {\n    get_closest_vowel \"$@\"\n}\n\nset -e\nrun_test() {\n\
    \    [[ $(candidate \"yogurt\") = \"u\" ]]\n    [[ $(candidate \"full\") = \"\
    u\" ]]\n    [[ $(candidate \"easy\") = \"\" ]]\n    [[ $(candidate \"eAsy\") =\
    \ \"\" ]]\n    [[ $(candidate \"ali\") = \"\" ]]\n    [[ $(candidate \"bad\")\
    \ = \"a\" ]]\n    [[ $(candidate \"most\") = \"o\" ]]\n    [[ $(candidate \"ab\"\
    ) = \"\" ]]\n    [[ $(candidate \"ba\") = \"\" ]]\n    [[ $(candidate \"quick\"\
    ) = \"\" ]]\n    [[ $(candidate \"anime\") = \"i\" ]]\n    [[ $(candidate \"Asia\"\
    ) = \"\" ]]\n    [[ $(candidate \"Above\") = \"o\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660002112
- exit_code: 1
  program: "#!/bin/bash\n# You are given a word. Your task is to find the closest\
    \ vowel that stands between \n# two consonants from the right side of the word\
    \ (case sensitive).\n# Vowels in the beginning and ending doesn't count. Return\
    \ empty string if you didn't\n# find any vowel met the above condition. \n# You\
    \ may assume that the given string contains English letter only.\n# Example:\n\
    #\n# $1 is a string\nget_closest_vowel() {\n    local word=$1\n    local word_len=${#word}\n\
    \    local i=0\n    local j=0\n    local vowel_pos=0\n    local vowel_pos_arr=()\n\
    \    local vowel_pos_arr_len=0\n    local vowel_pos_arr_idx=0\n    local vowel_pos_arr_idx_prev=0\n\
    \    local vowel_pos_arr_idx_next=0\n    local vowel_pos_arr_idx_prev_len=0\n\
    \    local vowel_pos_arr_idx_next_len=0\n    local vowel_pos_arr_idx_prev_len_min=0\n\
    \    local vowel_pos_arr_idx_next_len_min=0\n    local vowel_pos_arr_idx_prev_len_min_idx=0\n\
    \    local vowel_pos_arr_idx_next_len_min_idx=0\n    local vowel_pos_arr_idx_prev_len_min_idx_len=0\n\
    \    local vowel_pos_arr_idx_next_len_min_idx_len=0\n    local vowel_pos_arr_idx_prev_len_min_idx_len_min=0\n\
    \    local vowel_pos_arr_idx_next_len_min_idx_len_min=0\n    local vowel_pos_arr_idx_prev_len_min_idx_len_min_idx=0\n\
    \    local vowel_pos_arr_idx_next_len_min_idx_len_min_idx=0\n    local vowel_pos_arr_idx_prev_len_min_idx_len_min_idx_len=0\n\
    \    local vowel_pos_arr_idx_next_len_min_idx_len_min_idx_len=0\n    local vowel_pos_arr_idx_prev_len_min_idx_len_min_idx_len_min=0\n\
    \    local vowel_pos_arr_idx_next_len_min_idx_len_min_idx_len_min=0\n    local\
    \ vowel_pos_arr\n}\n\ncandidate() {\n    get_closest_vowel \"$@\"\n}\n\nset -e\n\
    run_test() {\n    [[ $(candidate \"yogurt\") = \"u\" ]]\n    [[ $(candidate \"\
    full\") = \"u\" ]]\n    [[ $(candidate \"easy\") = \"\" ]]\n    [[ $(candidate\
    \ \"eAsy\") = \"\" ]]\n    [[ $(candidate \"ali\") = \"\" ]]\n    [[ $(candidate\
    \ \"bad\") = \"a\" ]]\n    [[ $(candidate \"most\") = \"o\" ]]\n    [[ $(candidate\
    \ \"ab\") = \"\" ]]\n    [[ $(candidate \"ba\") = \"\" ]]\n    [[ $(candidate\
    \ \"quick\") = \"\" ]]\n    [[ $(candidate \"anime\") = \"i\" ]]\n    [[ $(candidate\
    \ \"Asia\") = \"\" ]]\n    [[ $(candidate \"Above\") = \"o\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660002112
- exit_code: 1
  program: "#!/bin/bash\n# You are given a word. Your task is to find the closest\
    \ vowel that stands between \n# two consonants from the right side of the word\
    \ (case sensitive).\n# Vowels in the beginning and ending doesn't count. Return\
    \ empty string if you didn't\n# find any vowel met the above condition. \n# You\
    \ may assume that the given string contains English letter only.\n# Example:\n\
    #\n# $1 is a string\nget_closest_vowel() {\n    local word=$1\n    local len=${#word}\n\
    \    local i=0\n    local vowel=''\n    local consonant=''\n    local closest_vowel=''\n\
    \    local closest_vowel_index=0\n    local closest_consonant_index=0\n    local\
    \ closest_consonant=''\n    local closest_consonant_index=0\n    local closest_consonant=''\n\
    \    local closest_consonant_index=0\n    local closest_consonant=''\n    local\
    \ closest_consonant_index=0\n    local closest_consonant=''\n    local closest_consonant_index=0\n\
    \    local closest_consonant=''\n    local closest_consonant_index=0\n    local\
    \ closest_consonant=''\n    local closest_consonant_index=0\n    local closest_consonant=''\n\
    \    local closest_consonant_index=0\n    local closest_consonant=''\n    local\
    \ closest_consonant_index=0\n    local closest_consonant=''\n    local closest_consonant_index=0\n\
    \    local closest_consonant=''\n    local closest_consonant_index=0\n    local\
    \ closest_consonant=''\n    local closest_consonant_index=0\n    local closest_consonant=''\n\
    \    local closest_consonant_index=0\n    local closest_consonant=''\n    local\
    \ closest_consonant_index=0\n    local closest_consonant=''\n    local closest_consonant_index=0\n\
    \    local closest_consonant=''\n    local closest_consonant_index=0\n    local\
    \ closest_consonant=''\n    local closest_consonant_index=0\n    local closest_consonant=''\n\
    \    local closest_consonant_index=0\n    local closest_consonant=''\n    local\
    \ closest_consonant_index=0\n    local closest_consonant=''\n    local closest_consonant_index=0\n\
    \    local closest_consonant=''\n    local closest_consonant_index=0\n    local\
    \ closest\n}\n\ncandidate() {\n    get_closest_vowel \"$@\"\n}\n\nset -e\nrun_test()\
    \ {\n    [[ $(candidate \"yogurt\") = \"u\" ]]\n    [[ $(candidate \"full\") =\
    \ \"u\" ]]\n    [[ $(candidate \"easy\") = \"\" ]]\n    [[ $(candidate \"eAsy\"\
    ) = \"\" ]]\n    [[ $(candidate \"ali\") = \"\" ]]\n    [[ $(candidate \"bad\"\
    ) = \"a\" ]]\n    [[ $(candidate \"most\") = \"o\" ]]\n    [[ $(candidate \"ab\"\
    ) = \"\" ]]\n    [[ $(candidate \"ba\") = \"\" ]]\n    [[ $(candidate \"quick\"\
    ) = \"\" ]]\n    [[ $(candidate \"anime\") = \"i\" ]]\n    [[ $(candidate \"Asia\"\
    ) = \"\" ]]\n    [[ $(candidate \"Above\") = \"o\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660002112
- exit_code: 1
  program: "#!/bin/bash\n# You are given a word. Your task is to find the closest\
    \ vowel that stands between \n# two consonants from the right side of the word\
    \ (case sensitive).\n# Vowels in the beginning and ending doesn't count. Return\
    \ empty string if you didn't\n# find any vowel met the above condition. \n# You\
    \ may assume that the given string contains English letter only.\n# Example:\n\
    #\n# $1 is a string\nget_closest_vowel() {\n  local word=$1\n  local word_len=${#word}\n\
    \  local i=0\n  local j=0\n  local vowel_pos=0\n  local vowel_pos_arr=()\n  local\
    \ vowel_pos_arr_len=0\n  local vowel_pos_arr_idx=0\n  local vowel_pos_arr_idx_prev=0\n\
    \  local vowel_pos_arr_idx_next=0\n  local vowel_pos_arr_idx_prev_diff=0\n  local\
    \ vowel_pos_arr_idx_next_diff=0\n  local vowel_pos_arr_idx_diff=0\n  local vowel_pos_arr_idx_diff_min=0\n\
    \  local vowel_pos_arr_idx_diff_min_idx=0\n  local vowel_pos_arr_idx_diff_min_idx_prev=0\n\
    \  local vowel_pos_arr_idx_diff_min_idx_next=0\n  local vowel_pos_arr_idx_diff_min_idx_prev_diff=0\n\
    \  local vowel_pos_arr_idx_diff_min_idx_next_diff=0\n  local vowel_pos_arr_idx_diff_min_idx_diff=0\n\
    \  local vowel_pos_arr_idx_diff_min_idx_diff_min=0\n  local vowel_pos_arr_idx_diff_min_idx_diff_min_idx=0\n\
    \  local vowel_pos_arr_idx_diff_min_idx_diff_min_idx_prev=0\n  local vowel_pos_arr_idx_diff_min_idx_diff_min_idx_next=0\n\
    \  local vowel_pos_arr_idx_diff_min_idx_diff_min_idx_prev_diff=0\n  local vowel_pos_arr_idx_diff_min_idx_diff_min_idx_next_diff=0\n\
    \  local vowel_pos_arr_idx_diff_min_idx_diff_min_idx_diff=0\n  local vowel_pos_arr_id\n\
    }\n\ncandidate() {\n    get_closest_vowel \"$@\"\n}\n\nset -e\nrun_test() {\n\
    \    [[ $(candidate \"yogurt\") = \"u\" ]]\n    [[ $(candidate \"full\") = \"\
    u\" ]]\n    [[ $(candidate \"easy\") = \"\" ]]\n    [[ $(candidate \"eAsy\") =\
    \ \"\" ]]\n    [[ $(candidate \"ali\") = \"\" ]]\n    [[ $(candidate \"bad\")\
    \ = \"a\" ]]\n    [[ $(candidate \"most\") = \"o\" ]]\n    [[ $(candidate \"ab\"\
    ) = \"\" ]]\n    [[ $(candidate \"ba\") = \"\" ]]\n    [[ $(candidate \"quick\"\
    ) = \"\" ]]\n    [[ $(candidate \"anime\") = \"i\" ]]\n    [[ $(candidate \"Asia\"\
    ) = \"\" ]]\n    [[ $(candidate \"Above\") = \"o\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660002112
- exit_code: 1
  program: "#!/bin/bash\n# You are given a word. Your task is to find the closest\
    \ vowel that stands between \n# two consonants from the right side of the word\
    \ (case sensitive).\n# Vowels in the beginning and ending doesn't count. Return\
    \ empty string if you didn't\n# find any vowel met the above condition. \n# You\
    \ may assume that the given string contains English letter only.\n# Example:\n\
    #\n# $1 is a string\nget_closest_vowel() {\n    local word=$1\n    local word_len=${#word}\n\
    \    local i=0\n    local j=0\n    local vowel_index=0\n    local vowel_index_array=()\n\
    \    local vowel_index_array_len=0\n    local closest_vowel_index=0\n    local\
    \ closest_vowel_index_len=0\n    local closest_vowel=\"\"\n    local vowel_array=(\"\
    a\" \"e\" \"i\" \"o\" \"u\")\n    local vowel_array_len=${#vowel_array[@]}\n \
    \   local vowel_array_index=0\n    local vowel_array_index_len=0\n    local vowel=\"\
    \"\n    local vowel_found=0\n    local consonant_found=0\n    local consonant_found_index=0\n\
    \    local consonant_found_index_len=0\n    local consonant_found_array=()\n \
    \   local consonant_found_array_len=0\n    local consonant_found_index_array=()\n\
    \    local consonant_found_index_array_len=0\n    local consonant_found_index_array_index=0\n\
    \    local consonant_found_index_array_index_len=0\n    local consonant_found_index_array_index_value=0\n\
    \    local consonant_found_index_array_index_value_len=0\n    local consonant_found_index_array_index_value_index=0\n\
    \    local consonant_found_index_array_index_value_index_len=0\n    local consonant_found_index_array_index_value_index_value=0\n\
    \    local consonant_found_index_array_index_value_index_value_len=0\n    local\
    \ consonant_found_index_array_index_value_index_value_index=0\n    local consonant_found_index_array_index_value_index_value_index_len=0\n\
    \    local consonant_found_index_array_index_value_index_value_index_value=0\n\
    \    local consonant_found_index_array_index_value_index_value_index_value_len=0\n\
    \    local consonant\n}\n\ncandidate() {\n    get_closest_vowel \"$@\"\n}\n\n\
    set -e\nrun_test() {\n    [[ $(candidate \"yogurt\") = \"u\" ]]\n    [[ $(candidate\
    \ \"full\") = \"u\" ]]\n    [[ $(candidate \"easy\") = \"\" ]]\n    [[ $(candidate\
    \ \"eAsy\") = \"\" ]]\n    [[ $(candidate \"ali\") = \"\" ]]\n    [[ $(candidate\
    \ \"bad\") = \"a\" ]]\n    [[ $(candidate \"most\") = \"o\" ]]\n    [[ $(candidate\
    \ \"ab\") = \"\" ]]\n    [[ $(candidate \"ba\") = \"\" ]]\n    [[ $(candidate\
    \ \"quick\") = \"\" ]]\n    [[ $(candidate \"anime\") = \"i\" ]]\n    [[ $(candidate\
    \ \"Asia\") = \"\" ]]\n    [[ $(candidate \"Above\") = \"o\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660002112
- exit_code: 1
  program: "#!/bin/bash\n# You are given a word. Your task is to find the closest\
    \ vowel that stands between \n# two consonants from the right side of the word\
    \ (case sensitive).\n# Vowels in the beginning and ending doesn't count. Return\
    \ empty string if you didn't\n# find any vowel met the above condition. \n# You\
    \ may assume that the given string contains English letter only.\n# Example:\n\
    #\n# $1 is a string\nget_closest_vowel() {\n    local word=$1\n    local len=${#word}\n\
    \    local i=0\n    local j=0\n    local k=0\n    local vowel=''\n    local consonant=''\n\
    \    local closest_vowel=''\n    local closest_vowel_index=0\n    local closest_consonant_index=0\n\
    \    local closest_consonant=''\n    local closest_distance=0\n    local distance=0\n\
    \    local vowels='aeiou'\n    local consonants='bcdfghjklmnpqrstvwxyz'\n    for\
    \ ((i=0; i<len; i++)); do\n        vowel=${word:i:1}\n        if [[ $vowels =~\
    \ $vowel ]]; then\n            for ((j=i+1; j<len; j++)); do\n               \
    \ consonant=${word:j:1}\n                if [[ $consonants =~ $consonant ]]; then\n\
    \                    distance=$((j-i))\n                    if [[ $closest_distance\
    \ -eq 0 || $distance -lt $closest_distance ]]; then\n                        closest_vowel=$vowel\n\
    \                        closest_vowel_index=$i\n                        closest_consonant=$consonant\n\
    \                        closest_consonant_index=$j\n                        closest_distance=$distance\n\
    \                    fi\n                fi\n            done\n        fi\n  \
    \  done\n    if [[ $closest_distance -gt 0 ]]; then\n        echo $closest_vowel\n\
    \    else\n        echo ''\n    fi\n}\n\ncandidate() {\n    get_closest_vowel\
    \ \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"yogurt\") = \"u\" ]]\n\
    \    [[ $(candidate \"full\") = \"u\" ]]\n    [[ $(candidate \"easy\") = \"\"\
    \ ]]\n    [[ $(candidate \"eAsy\") = \"\" ]]\n    [[ $(candidate \"ali\") = \"\
    \" ]]\n    [[ $(candidate \"bad\") = \"a\" ]]\n    [[ $(candidate \"most\") =\
    \ \"o\" ]]\n    [[ $(candidate \"ab\") = \"\" ]]\n    [[ $(candidate \"ba\") =\
    \ \"\" ]]\n    [[ $(candidate \"quick\") = \"\" ]]\n    [[ $(candidate \"anime\"\
    ) = \"i\" ]]\n    [[ $(candidate \"Asia\") = \"\" ]]\n    [[ $(candidate \"Above\"\
    ) = \"o\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660002112
- exit_code: 1
  program: "#!/bin/bash\n# You are given a word. Your task is to find the closest\
    \ vowel that stands between \n# two consonants from the right side of the word\
    \ (case sensitive).\n# Vowels in the beginning and ending doesn't count. Return\
    \ empty string if you didn't\n# find any vowel met the above condition. \n# You\
    \ may assume that the given string contains English letter only.\n# Example:\n\
    #\n# $1 is a string\nget_closest_vowel() {\n  local word=$1\n  local len=${#word}\n\
    \  local i=0\n  local vowel=\"\"\n  local vowel_pos=0\n  local consonant_pos=0\n\
    \  local consonant_pos_prev=0\n  local vowel_pos_prev=0\n  local vowel_pos_prev_prev=0\n\
    \  local consonant_pos_prev_prev=0\n  local vowel_pos_prev_prev_prev=0\n  local\
    \ consonant_pos_prev_prev_prev=0\n  local vowel_pos_prev_prev_prev_prev=0\n  local\
    \ consonant_pos_prev_prev_prev_prev=0\n  local vowel_pos_prev_prev_prev_prev_prev=0\n\
    \  local consonant_pos_prev_prev_prev_prev_prev=0\n  local vowel_pos_prev_prev_prev_prev_prev_prev=0\n\
    \  local consonant_pos_prev_prev_prev_prev_prev_prev=0\n  local vowel_pos_prev_prev_prev_prev_prev_prev_prev=0\n\
    \  local consonant_pos_prev_prev_prev_prev_prev_prev_prev=0\n  local vowel_pos_prev_prev_prev_prev_prev_prev_prev_prev=0\n\
    \  local consonant_pos_prev_prev_prev_prev_prev_prev_prev_prev=0\n  local vowel_pos_prev_prev_prev_prev_prev_prev_prev_prev_prev=0\n\
    \  local consonant_pos_prev_prev_prev_prev_prev_prev_prev_prev_prev=0\n  local\
    \ vowel_pos_prev_prev_prev_prev_prev_prev_prev_prev_prev_prev=0\n  local consonant_pos_prev_prev_prev_prev_prev_prev_prev_prev_prev_prev=0\n\
    \  local vowel_pos_prev_prev_prev_prev_prev_prev_prev_prev_prev_prev_prev=0\n\
    \  local consonant_pos_prev_prev_prev_prev_prev_prev_prev_prev_prev_prev_prev=0\n\
    \  local vowel_pos_prev_prev_prev_prev_prev_prev\n}\n\ncandidate() {\n    get_closest_vowel\
    \ \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"yogurt\") = \"u\" ]]\n\
    \    [[ $(candidate \"full\") = \"u\" ]]\n    [[ $(candidate \"easy\") = \"\"\
    \ ]]\n    [[ $(candidate \"eAsy\") = \"\" ]]\n    [[ $(candidate \"ali\") = \"\
    \" ]]\n    [[ $(candidate \"bad\") = \"a\" ]]\n    [[ $(candidate \"most\") =\
    \ \"o\" ]]\n    [[ $(candidate \"ab\") = \"\" ]]\n    [[ $(candidate \"ba\") =\
    \ \"\" ]]\n    [[ $(candidate \"quick\") = \"\" ]]\n    [[ $(candidate \"anime\"\
    ) = \"i\" ]]\n    [[ $(candidate \"Asia\") = \"\" ]]\n    [[ $(candidate \"Above\"\
    ) = \"o\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660002112
- exit_code: 1
  program: "#!/bin/bash\n# You are given a word. Your task is to find the closest\
    \ vowel that stands between \n# two consonants from the right side of the word\
    \ (case sensitive).\n# Vowels in the beginning and ending doesn't count. Return\
    \ empty string if you didn't\n# find any vowel met the above condition. \n# You\
    \ may assume that the given string contains English letter only.\n# Example:\n\
    #\n# $1 is a string\nget_closest_vowel() {\n    local word=$1\n    local word_len=${#word}\n\
    \    local i=0\n    local j=0\n    local k=0\n    local vowel_idx=0\n    local\
    \ vowel_idx_arr=()\n    local vowel_idx_len=0\n    local closest_vowel_idx=0\n\
    \    local closest_vowel_idx_len=0\n    local closest_vowel_idx_arr=()\n    local\
    \ closest_vowel_idx_arr_len=0\n    local closest_vowel_idx_arr_len_min=0\n   \
    \ local closest_vowel_idx_arr_len_max=0\n    local closest_vowel_idx_arr_len_min_idx=0\n\
    \    local closest_vowel_idx_arr_len_max_idx=0\n    local closest_vowel_idx_arr_len_min_idx_arr=()\n\
    \    local closest_vowel_idx_arr_len_max_idx_arr=()\n    local closest_vowel_idx_arr_len_min_idx_arr_len=0\n\
    \    local closest_vowel_idx_arr_len_max_idx_arr_len=0\n    local closest_vowel_idx_arr_len_min_idx_arr_len_min=0\n\
    \    local closest_vowel_idx_arr_len_max_idx_arr_len_max=0\n    local closest_vowel_idx_arr_len_min_idx_arr_len_min_idx=0\n\
    \    local closest_vowel_idx_arr_len_max_idx_arr_len_max_idx=0\n    local closest_vowel_idx_arr_len_min_idx_arr_len_min_idx_arr=()\n\
    \    local closest_vowel_idx_arr_len_max_idx_arr_len_max_idx_arr=()\n    local\
    \ closest_vowel_idx_arr_len_min_idx\n}\n\ncandidate() {\n    get_closest_vowel\
    \ \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"yogurt\") = \"u\" ]]\n\
    \    [[ $(candidate \"full\") = \"u\" ]]\n    [[ $(candidate \"easy\") = \"\"\
    \ ]]\n    [[ $(candidate \"eAsy\") = \"\" ]]\n    [[ $(candidate \"ali\") = \"\
    \" ]]\n    [[ $(candidate \"bad\") = \"a\" ]]\n    [[ $(candidate \"most\") =\
    \ \"o\" ]]\n    [[ $(candidate \"ab\") = \"\" ]]\n    [[ $(candidate \"ba\") =\
    \ \"\" ]]\n    [[ $(candidate \"quick\") = \"\" ]]\n    [[ $(candidate \"anime\"\
    ) = \"i\" ]]\n    [[ $(candidate \"Asia\") = \"\" ]]\n    [[ $(candidate \"Above\"\
    ) = \"o\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660002112
- exit_code: 1
  program: "#!/bin/bash\n# You are given a word. Your task is to find the closest\
    \ vowel that stands between \n# two consonants from the right side of the word\
    \ (case sensitive).\n# Vowels in the beginning and ending doesn't count. Return\
    \ empty string if you didn't\n# find any vowel met the above condition. \n# You\
    \ may assume that the given string contains English letter only.\n# Example:\n\
    #\n# $1 is a string\nget_closest_vowel() {\n    local word=$1\n    local len=${#word}\n\
    \    local i=0\n    local j=0\n    local k=0\n    local vowels=\"aeiou\"\n   \
    \ local cons=\"bcdfghjklmnpqrstvwxyz\"\n    local result=\"\"\n    local is_vowel=0\n\
    \    local is_cons=0\n    local is_first_cons=0\n    local is_second_cons=0\n\
    \    local is_first_vowel=0\n    local is_second_vowel=0\n    local is_first_char=0\n\
    \    local is_last_char=0\n    local is_first_cons_found=0\n    local is_second_cons_found=0\n\
    \    local is_first_vowel_found=0\n    local is_second_vowel_found=0\n    local\
    \ is_first_char_found=0\n    local is_last_char_found=0\n    local is_first_cons_found=0\n\
    \    local is_second_cons_found=0\n    local is_first_vowel_found=0\n    local\
    \ is_second_vowel_found=0\n    local is_first_char_found=0\n    local is_last_char_found=0\n\
    \    local is_first_cons_found=0\n    local is_second_cons_found=0\n    local\
    \ is_first_vowel_found=0\n    local is_second_vowel_found=0\n    local is_first_char_found=0\n\
    \    local is_last_char_found=0\n    local is_first_cons_found=0\n    local is_second_cons_found=0\n\
    \    local is_first_vowel_found=0\n    local is_second_vowel_found=0\n    local\
    \ is_first_char_found=0\n    local is_last_char_found=0\n    local is_first_cons_found=0\n\
    \    local is_second_cons_found=0\n    local is_first_vowel_found=0\n    local\
    \ is_second_vowel_found=0\n    local is_first\n}\n\ncandidate() {\n    get_closest_vowel\
    \ \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"yogurt\") = \"u\" ]]\n\
    \    [[ $(candidate \"full\") = \"u\" ]]\n    [[ $(candidate \"easy\") = \"\"\
    \ ]]\n    [[ $(candidate \"eAsy\") = \"\" ]]\n    [[ $(candidate \"ali\") = \"\
    \" ]]\n    [[ $(candidate \"bad\") = \"a\" ]]\n    [[ $(candidate \"most\") =\
    \ \"o\" ]]\n    [[ $(candidate \"ab\") = \"\" ]]\n    [[ $(candidate \"ba\") =\
    \ \"\" ]]\n    [[ $(candidate \"quick\") = \"\" ]]\n    [[ $(candidate \"anime\"\
    ) = \"i\" ]]\n    [[ $(candidate \"Asia\") = \"\" ]]\n    [[ $(candidate \"Above\"\
    ) = \"o\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660002112
- exit_code: 1
  program: "#!/bin/bash\n# You are given a word. Your task is to find the closest\
    \ vowel that stands between \n# two consonants from the right side of the word\
    \ (case sensitive).\n# Vowels in the beginning and ending doesn't count. Return\
    \ empty string if you didn't\n# find any vowel met the above condition. \n# You\
    \ may assume that the given string contains English letter only.\n# Example:\n\
    #\n# $1 is a string\nget_closest_vowel() {\n    local word=$1\n    local len=${#word}\n\
    \    local i=0\n    local j=0\n    local k=0\n    local vowel=\"\"\n    local\
    \ closest_vowel=\"\"\n    local closest_vowel_index=0\n    local closest_vowel_distance=0\n\
    \    local vowel_index=0\n    local vowel_distance=0\n    local vowels=\"aeiou\"\
    \n    local consonants=\"bcdfghjklmnpqrstvwxyz\"\n    local c=\"\"\n    local\
    \ v=\"\"\n    local found=0\n    local found_vowel=0\n    local found_consonant=0\n\
    \    local found_vowel_index=0\n    local found_consonant_index=0\n    local found_vowel_distance=0\n\
    \    local found_consonant_distance=0\n    local found_vowel_index_distance=0\n\
    \    local found_consonant_index_distance=0\n    local found_vowel_index_distance_min=0\n\
    \    local found_consonant_index_distance_min=0\n    local found_vowel_index_distance_max=0\n\
    \    local found_consonant_index_distance_max=0\n    local found_vowel_index_distance_min_index=0\n\
    \    local found_consonant_index_distance_min_index=0\n    local found_vowel_index_distance_max_index=0\n\
    \    local found_consonant_index_distance_max_index=0\n    local found_vowel_index_distance_min_distance=0\n\
    \    local found_consonant_index_distance_min_distance=0\n    local found_vowel_index_distance_max_distance=0\n\
    \    local found_consonant_index_distance_max_distance=0\n    local found_vowel_index_distance_min_index_distance=0\n\
    \    local found_consonant_index_distance_min_index_distance=0\n    local found_vowel_index_distance_max_index_distance=0\n\
    \    local found_consonant_index_distance_max\n}\n\ncandidate() {\n    get_closest_vowel\
    \ \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"yogurt\") = \"u\" ]]\n\
    \    [[ $(candidate \"full\") = \"u\" ]]\n    [[ $(candidate \"easy\") = \"\"\
    \ ]]\n    [[ $(candidate \"eAsy\") = \"\" ]]\n    [[ $(candidate \"ali\") = \"\
    \" ]]\n    [[ $(candidate \"bad\") = \"a\" ]]\n    [[ $(candidate \"most\") =\
    \ \"o\" ]]\n    [[ $(candidate \"ab\") = \"\" ]]\n    [[ $(candidate \"ba\") =\
    \ \"\" ]]\n    [[ $(candidate \"quick\") = \"\" ]]\n    [[ $(candidate \"anime\"\
    ) = \"i\" ]]\n    [[ $(candidate \"Asia\") = \"\" ]]\n    [[ $(candidate \"Above\"\
    ) = \"o\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660002112
- exit_code: 1
  program: "#!/bin/bash\n# You are given a word. Your task is to find the closest\
    \ vowel that stands between \n# two consonants from the right side of the word\
    \ (case sensitive).\n# Vowels in the beginning and ending doesn't count. Return\
    \ empty string if you didn't\n# find any vowel met the above condition. \n# You\
    \ may assume that the given string contains English letter only.\n# Example:\n\
    #\n# $1 is a string\nget_closest_vowel() {\n    local word=$1\n    local word_len=${#word}\n\
    \    local i=0\n    local j=0\n    local k=0\n    local vowel=\"\"\n    local\
    \ vowel_index=0\n    local vowel_index_list=()\n    local consonant_index_list=()\n\
    \    local vowel_list=(\"a\" \"e\" \"i\" \"o\" \"u\")\n    local consonant_list=(\"\
    b\" \"c\" \"d\" \"f\" \"g\" \"h\" \"j\" \"k\" \"l\" \"m\" \"n\" \"p\" \"q\" \"\
    r\" \"s\" \"t\" \"v\" \"w\" \"x\" \"y\" \"z\")\n    local closest_vowel=\"\"\n\
    \    local closest_vowel_index=0\n    local closest_vowel_index_list=()\n    local\
    \ closest_vowel_index_list_len=0\n    local closest_vowel_index_list_len_half=0\n\
    \    local closest_vowel_index_list_len_half_rounded=0\n    local closest_vowel_index_list_len_half_rounded_index=0\n\
    \    local closest_vowel_index_list_len_half_rounded_index_value=0\n    local\
    \ closest_vowel_index_list_len_half_rounded_index_value_abs=0\n    local closest_vowel_index_list_len_half_rounded_index_value_abs_min=0\n\
    \    local closest_vowel_index_list_len_half_rounded_index_value_abs_min_index=0\n\
    \    local closest_vowel_index_list_len_half_rounded_index_value_abs_min_index_value=0\n\
    \    local closest_vowel_index_list_len_half_rounded_index_value_abs_min_index_value_abs=0\n\
    \    local closest_vowel_index_list_len_half_rounded_index_value_abs_min_index_value_abs_min=0\n\
    \    local closest_vowel_index_list_len_half_rounded_index_value_abs_min_index_\n\
    }\n\ncandidate() {\n    get_closest_vowel \"$@\"\n}\n\nset -e\nrun_test() {\n\
    \    [[ $(candidate \"yogurt\") = \"u\" ]]\n    [[ $(candidate \"full\") = \"\
    u\" ]]\n    [[ $(candidate \"easy\") = \"\" ]]\n    [[ $(candidate \"eAsy\") =\
    \ \"\" ]]\n    [[ $(candidate \"ali\") = \"\" ]]\n    [[ $(candidate \"bad\")\
    \ = \"a\" ]]\n    [[ $(candidate \"most\") = \"o\" ]]\n    [[ $(candidate \"ab\"\
    ) = \"\" ]]\n    [[ $(candidate \"ba\") = \"\" ]]\n    [[ $(candidate \"quick\"\
    ) = \"\" ]]\n    [[ $(candidate \"anime\") = \"i\" ]]\n    [[ $(candidate \"Asia\"\
    ) = \"\" ]]\n    [[ $(candidate \"Above\") = \"o\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660002112
- exit_code: 1
  program: "#!/bin/bash\n# You are given a word. Your task is to find the closest\
    \ vowel that stands between \n# two consonants from the right side of the word\
    \ (case sensitive).\n# Vowels in the beginning and ending doesn't count. Return\
    \ empty string if you didn't\n# find any vowel met the above condition. \n# You\
    \ may assume that the given string contains English letter only.\n# Example:\n\
    #\n# $1 is a string\nget_closest_vowel() {\n    local word=$1\n    local len=${#word}\n\
    \    local i=0\n    local j=0\n    local vowel=\"\"\n    local closest_vowel=\"\
    \"\n    local closest_vowel_idx=0\n    local closest_vowel_distance=0\n    local\
    \ vowel_distance=0\n    local vowel_idx=0\n    local vowel_found=0\n    local\
    \ vowel_list=\"a e i o u\"\n    local consonant_list=\"b c d f g h j k l m n p\
    \ q r s t v w x y z\"\n    local consonant=\"\"\n    local consonant_found=0\n\
    \    local consonant_idx=0\n    local consonant_distance=0\n    local closest_consonant=\"\
    \"\n    local closest_consonant_idx=0\n    local closest_consonant_distance=0\n\
    \    local vowel_found_idx=0\n    local consonant_found_idx=0\n    local vowel_found_distance=0\n\
    \    local consonant_found_distance=0\n    local vowel_found_count=0\n    local\
    \ consonant_found_count=0\n    local vowel_found_list=\"\"\n    local consonant_found_list=\"\
    \"\n    local vowel_found_list_len=0\n    local consonant_found_list_len=0\n \
    \   local vowel_found_list_idx=0\n    local consonant_found_list_idx=0\n    local\
    \ vowel_found_list_distance=0\n    local consonant_found_list_distance=0\n   \
    \ local vowel_found_list_idx_distance=0\n    local consonant_found_list_idx_distance=0\n\
    \    local vowel_found_list_idx_idx=0\n    local consonant_found_list_idx_idx=0\n\
    \    local vowel_found_list_idx_idx_distance=0\n    local consonant_found_list_idx_idx_distance=0\n\
    \    local vowel_found_list_idx_idx_idx=0\n    local consonant_found_list_idx_idx_idx=0\n\
    \    local vowel_found_list_\n}\n\ncandidate() {\n    get_closest_vowel \"$@\"\
    \n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"yogurt\") = \"u\" ]]\n    [[\
    \ $(candidate \"full\") = \"u\" ]]\n    [[ $(candidate \"easy\") = \"\" ]]\n \
    \   [[ $(candidate \"eAsy\") = \"\" ]]\n    [[ $(candidate \"ali\") = \"\" ]]\n\
    \    [[ $(candidate \"bad\") = \"a\" ]]\n    [[ $(candidate \"most\") = \"o\"\
    \ ]]\n    [[ $(candidate \"ab\") = \"\" ]]\n    [[ $(candidate \"ba\") = \"\"\
    \ ]]\n    [[ $(candidate \"quick\") = \"\" ]]\n    [[ $(candidate \"anime\") =\
    \ \"i\" ]]\n    [[ $(candidate \"Asia\") = \"\" ]]\n    [[ $(candidate \"Above\"\
    ) = \"o\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660002112
- exit_code: 1
  program: "#!/bin/bash\n# You are given a word. Your task is to find the closest\
    \ vowel that stands between \n# two consonants from the right side of the word\
    \ (case sensitive).\n# Vowels in the beginning and ending doesn't count. Return\
    \ empty string if you didn't\n# find any vowel met the above condition. \n# You\
    \ may assume that the given string contains English letter only.\n# Example:\n\
    #\n# $1 is a string\nget_closest_vowel() {\n    local word=$1\n    local word_len=${#word}\n\
    \    local i=0\n    local vowels=\"aeiou\"\n    local vowel_len=${#vowels}\n \
    \   local vowel_index=0\n    local vowel_index_min=0\n    local vowel_index_max=0\n\
    \    local vowel_index_min_found=0\n    local vowel_index_max_found=0\n    local\
    \ vowel_index_min_found_pos=0\n    local vowel_index_max_found_pos=0\n    local\
    \ vowel_index_min_found_pos_prev=0\n    local vowel_index_max_found_pos_prev=0\n\
    \    local vowel_index_min_found_pos_prev_prev=0\n    local vowel_index_max_found_pos_prev_prev=0\n\
    \    local vowel_index_min_found_pos_prev_prev_prev=0\n    local vowel_index_max_found_pos_prev_prev_prev=0\n\
    \    local vowel_index_min_found_pos_prev_prev_prev_prev=0\n    local vowel_index_max_found_pos_prev_prev_prev_prev=0\n\
    \    local vowel_index_min_found_pos_prev_prev_prev_prev_prev=0\n    local vowel_index_max_found_pos_prev_prev_prev_prev_prev=0\n\
    \    local vowel_index_min_found_pos_prev_prev_prev_prev_prev_prev=0\n    local\
    \ vowel_index_max_found_pos_prev_prev_prev_prev_prev_prev=0\n    local vowel_index_min_found_pos_prev_prev_prev_prev_prev_prev_prev=0\n\
    \    local vowel_index_max_found_pos_prev_prev_prev_prev_prev_prev_prev=0\n  \
    \  local vowel_index_min_found_pos_prev_prev_prev_prev_prev_prev_prev_prev=0\n\
    \    local vowel_index_max_found_pos_prev_prev_prev_prev_prev_prev_prev_prev=0\n\
    \    local vowel_index_min_found_pos_prev_prev_prev\n}\n\ncandidate() {\n    get_closest_vowel\
    \ \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"yogurt\") = \"u\" ]]\n\
    \    [[ $(candidate \"full\") = \"u\" ]]\n    [[ $(candidate \"easy\") = \"\"\
    \ ]]\n    [[ $(candidate \"eAsy\") = \"\" ]]\n    [[ $(candidate \"ali\") = \"\
    \" ]]\n    [[ $(candidate \"bad\") = \"a\" ]]\n    [[ $(candidate \"most\") =\
    \ \"o\" ]]\n    [[ $(candidate \"ab\") = \"\" ]]\n    [[ $(candidate \"ba\") =\
    \ \"\" ]]\n    [[ $(candidate \"quick\") = \"\" ]]\n    [[ $(candidate \"anime\"\
    ) = \"i\" ]]\n    [[ $(candidate \"Asia\") = \"\" ]]\n    [[ $(candidate \"Above\"\
    ) = \"o\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660002112
- exit_code: 1
  program: "#!/bin/bash\n# You are given a word. Your task is to find the closest\
    \ vowel that stands between \n# two consonants from the right side of the word\
    \ (case sensitive).\n# Vowels in the beginning and ending doesn't count. Return\
    \ empty string if you didn't\n# find any vowel met the above condition. \n# You\
    \ may assume that the given string contains English letter only.\n# Example:\n\
    #\n# $1 is a string\nget_closest_vowel() {\n  local word=$1\n  local word_len=${#word}\n\
    \  local i=0\n  local j=0\n  local k=0\n  local vowel_pos=0\n  local vowel_pos_arr=()\n\
    \  local vowel_pos_arr_len=0\n  local vowel_pos_arr_idx=0\n  local closest_vowel_pos=0\n\
    \  local closest_vowel_pos_arr=()\n  local closest_vowel_pos_arr_len=0\n  local\
    \ closest_vowel_pos_arr_idx=0\n  local closest_vowel_pos_arr_idx_last=0\n  local\
    \ closest_vowel_pos_arr_idx_last_2=0\n  local closest_vowel_pos_arr_idx_last_3=0\n\
    \  local closest_vowel_pos_arr_idx_last_4=0\n  local closest_vowel_pos_arr_idx_last_5=0\n\
    \  local closest_vowel_pos_arr_idx_last_6=0\n  local closest_vowel_pos_arr_idx_last_7=0\n\
    \  local closest_vowel_pos_arr_idx_last_8=0\n  local closest_vowel_pos_arr_idx_last_9=0\n\
    \  local closest_vowel_pos_arr_idx_last_10=0\n  local closest_vowel_pos_arr_idx_last_11=0\n\
    \  local closest_vowel_pos_arr_idx_last_12=0\n  local closest_vowel_pos_arr_idx_last_13=0\n\
    \  local closest_vowel_pos_arr_idx_last_14=0\n  local closest_vowel_pos_arr_idx_last_15=0\n\
    \  local closest_vowel_pos_arr_idx_last_16=0\n  local closest_vowel_pos_arr_idx_last_17=0\n\
    \  local closest_vowel_pos_arr_idx_last_18=\n}\n\ncandidate() {\n    get_closest_vowel\
    \ \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"yogurt\") = \"u\" ]]\n\
    \    [[ $(candidate \"full\") = \"u\" ]]\n    [[ $(candidate \"easy\") = \"\"\
    \ ]]\n    [[ $(candidate \"eAsy\") = \"\" ]]\n    [[ $(candidate \"ali\") = \"\
    \" ]]\n    [[ $(candidate \"bad\") = \"a\" ]]\n    [[ $(candidate \"most\") =\
    \ \"o\" ]]\n    [[ $(candidate \"ab\") = \"\" ]]\n    [[ $(candidate \"ba\") =\
    \ \"\" ]]\n    [[ $(candidate \"quick\") = \"\" ]]\n    [[ $(candidate \"anime\"\
    ) = \"i\" ]]\n    [[ $(candidate \"Asia\") = \"\" ]]\n    [[ $(candidate \"Above\"\
    ) = \"o\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660002112
- exit_code: 1
  program: "#!/bin/bash\n# You are given a word. Your task is to find the closest\
    \ vowel that stands between \n# two consonants from the right side of the word\
    \ (case sensitive).\n# Vowels in the beginning and ending doesn't count. Return\
    \ empty string if you didn't\n# find any vowel met the above condition. \n# You\
    \ may assume that the given string contains English letter only.\n# Example:\n\
    #\n# $1 is a string\nget_closest_vowel() {\n    local word=$1\n    local len=${#word}\n\
    \    local i=0\n    local j=0\n    local k=0\n    local l=0\n    local m=0\n \
    \   local n=0\n    local o=0\n    local p=0\n    local q=0\n    local r=0\n  \
    \  local s=0\n    local t=0\n    local u=0\n    local v=0\n    local w=0\n   \
    \ local x=0\n    local y=0\n    local z=0\n    local a=0\n    local e=0\n    local\
    \ i=0\n    local o=0\n    local u=0\n    local vowel=0\n    local consonant=0\n\
    \    local closest_vowel=''\n    local closest_vowel_pos=0\n    local closest_consonant_pos=0\n\
    \    local closest_consonant=''\n    local closest_consonant_pos=0\n    local\
    \ closest_consonant=''\n    local closest_consonant_pos=0\n    local closest_consonant=''\n\
    \    local closest_consonant_pos=0\n    local closest_consonant=''\n    local\
    \ closest_consonant_pos=0\n    local closest_consonant=''\n    local closest_consonant_pos=0\n\
    \    local closest_consonant=''\n    local closest_consonant_pos=0\n    local\
    \ closest_consonant=''\n    local closest_consonant_pos=0\n    local closest_consonant=''\n\
    \    local closest_consonant_pos=0\n    local closest_consonant=''\n    local\
    \ closest_consonant_pos=0\n    local closest_consonant=''\n    local closest_consonant_pos=0\n\
    \    local closest_consonant=''\n    local closest_consonant_pos=0\n    local\
    \ closest_consonant=''\n    local closest_consonant_pos=0\n    local closest_consonant=''\n\
    \    local closest_consonant_pos=0\n    local closest_consonant=''\n    local\
    \ closest_consonant_pos=0\n    local closest\n}\n\ncandidate() {\n    get_closest_vowel\
    \ \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"yogurt\") = \"u\" ]]\n\
    \    [[ $(candidate \"full\") = \"u\" ]]\n    [[ $(candidate \"easy\") = \"\"\
    \ ]]\n    [[ $(candidate \"eAsy\") = \"\" ]]\n    [[ $(candidate \"ali\") = \"\
    \" ]]\n    [[ $(candidate \"bad\") = \"a\" ]]\n    [[ $(candidate \"most\") =\
    \ \"o\" ]]\n    [[ $(candidate \"ab\") = \"\" ]]\n    [[ $(candidate \"ba\") =\
    \ \"\" ]]\n    [[ $(candidate \"quick\") = \"\" ]]\n    [[ $(candidate \"anime\"\
    ) = \"i\" ]]\n    [[ $(candidate \"Asia\") = \"\" ]]\n    [[ $(candidate \"Above\"\
    ) = \"o\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660002112
- exit_code: 1
  program: "#!/bin/bash\n# You are given a word. Your task is to find the closest\
    \ vowel that stands between \n# two consonants from the right side of the word\
    \ (case sensitive).\n# Vowels in the beginning and ending doesn't count. Return\
    \ empty string if you didn't\n# find any vowel met the above condition. \n# You\
    \ may assume that the given string contains English letter only.\n# Example:\n\
    #\n# $1 is a string\nget_closest_vowel() {\n    local word=$1\n    local len=${#word}\n\
    \    local i=0\n    local j=0\n    local k=0\n    local found=0\n    local vowels=aeiouAEIOU\n\
    \    local vowel=''\n    local consonant=''\n    local closest_vowel=''\n    local\
    \ closest_vowel_index=0\n    local closest_vowel_distance=0\n    local closest_consonant_index=0\n\
    \    local closest_consonant_distance=0\n    local closest_consonant=''\n    local\
    \ vowel_index=0\n    local consonant_index=0\n    local vowel_distance=0\n   \
    \ local consonant_distance=0\n    local vowel_found=0\n    local consonant_found=0\n\
    \    local vowel_found_index=0\n    local consonant_found_index=0\n    local vowel_found_distance=0\n\
    \    local consonant_found_distance=0\n    local vowel_found_count=0\n    local\
    \ consonant_found_count=0\n    local vowel_found_index_array=()\n    local consonant_found_index_array=()\n\
    \    local vowel_found_distance_array=()\n    local consonant_found_distance_array=()\n\
    \    local vowel_found_count_array=()\n    local consonant_found_count_array=()\n\
    \    local vowel_found_index_array_index=0\n    local consonant_found_index_array_index=0\n\
    \    local vowel_found_distance_array_index=0\n    local consonant_found_distance_array_index=0\n\
    \    local vowel_found_count_array_index=0\n    local consonant_found_count_array_index=0\n\
    \    local vowel_found_index_array_len=0\n    local consonant_found_index_array_len=0\n\
    \    local vowel_found_distance_array_len=0\n    local consonant_found_distance_array_len=0\n\
    \    local vowel_found_count_array_len=0\n    local consonant_found_count_array_len=0\n\
    \    local vowel_found_index_array_index_len=0\n\n}\n\ncandidate() {\n    get_closest_vowel\
    \ \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"yogurt\") = \"u\" ]]\n\
    \    [[ $(candidate \"full\") = \"u\" ]]\n    [[ $(candidate \"easy\") = \"\"\
    \ ]]\n    [[ $(candidate \"eAsy\") = \"\" ]]\n    [[ $(candidate \"ali\") = \"\
    \" ]]\n    [[ $(candidate \"bad\") = \"a\" ]]\n    [[ $(candidate \"most\") =\
    \ \"o\" ]]\n    [[ $(candidate \"ab\") = \"\" ]]\n    [[ $(candidate \"ba\") =\
    \ \"\" ]]\n    [[ $(candidate \"quick\") = \"\" ]]\n    [[ $(candidate \"anime\"\
    ) = \"i\" ]]\n    [[ $(candidate \"Asia\") = \"\" ]]\n    [[ $(candidate \"Above\"\
    ) = \"o\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660002112
- exit_code: 1
  program: "#!/bin/bash\n# You are given a word. Your task is to find the closest\
    \ vowel that stands between \n# two consonants from the right side of the word\
    \ (case sensitive).\n# Vowels in the beginning and ending doesn't count. Return\
    \ empty string if you didn't\n# find any vowel met the above condition. \n# You\
    \ may assume that the given string contains English letter only.\n# Example:\n\
    #\n# $1 is a string\nget_closest_vowel() {\n    local word=$1\n    local word_len=${#word}\n\
    \    local i=0\n    local j=0\n    local vowels=aeiou\n    local vowel_len=${#vowels}\n\
    \    local vowel_index=0\n    local vowel_pos=0\n    local vowel_char=''\n   \
    \ local vowel_dist=0\n    local closest_vowel_dist=0\n    local closest_vowel_char=''\n\
    \    local closest_vowel_pos=0\n    local closest_vowel_index=0\n    local is_vowel=0\n\
    \    local is_consonant=0\n    local is_first_char=0\n    local is_last_char=0\n\
    \    local is_first_vowel=0\n    local is_last_vowel=0\n    local is_first_consonant=0\n\
    \    local is_last_consonant=0\n    local is_first_vowel_found=0\n    local is_last_vowel_found=0\n\
    \    local is_first_consonant_found=0\n    local is_last_consonant_found=0\n \
    \   local is_closest_vowel_found=0\n    local is_closest_vowel_found_first_time=0\n\
    \    local is_closest_vowel_found_last_time=0\n    local is_closest_vowel_found_first_time_last_time=0\n\
    \    local is_closest_vowel_found_first_time_last_time_last_time=0\n    local\
    \ is_closest_vowel_found_first_time_last_time_last_time_last_time=0\n    local\
    \ is_closest_vowel_found_first_time_last_time_last_time_last_time_last_time=0\n\
    \    local is_closest_vowel_found_first_time_last_time_last_time_last_time_last_time_last_time=0\n\
    \    local is_closest_vowel_found_first_time_last_\n}\n\ncandidate() {\n    get_closest_vowel\
    \ \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"yogurt\") = \"u\" ]]\n\
    \    [[ $(candidate \"full\") = \"u\" ]]\n    [[ $(candidate \"easy\") = \"\"\
    \ ]]\n    [[ $(candidate \"eAsy\") = \"\" ]]\n    [[ $(candidate \"ali\") = \"\
    \" ]]\n    [[ $(candidate \"bad\") = \"a\" ]]\n    [[ $(candidate \"most\") =\
    \ \"o\" ]]\n    [[ $(candidate \"ab\") = \"\" ]]\n    [[ $(candidate \"ba\") =\
    \ \"\" ]]\n    [[ $(candidate \"quick\") = \"\" ]]\n    [[ $(candidate \"anime\"\
    ) = \"i\" ]]\n    [[ $(candidate \"Asia\") = \"\" ]]\n    [[ $(candidate \"Above\"\
    ) = \"o\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660002112
- exit_code: 1
  program: "#!/bin/bash\n# You are given a word. Your task is to find the closest\
    \ vowel that stands between \n# two consonants from the right side of the word\
    \ (case sensitive).\n# Vowels in the beginning and ending doesn't count. Return\
    \ empty string if you didn't\n# find any vowel met the above condition. \n# You\
    \ may assume that the given string contains English letter only.\n# Example:\n\
    #\n# $1 is a string\nget_closest_vowel() {\n  local word=$1\n  local len=${#word}\n\
    \  local i=0\n  local j=0\n  local k=0\n  local vowel=\"\"\n  local consonant=\"\
    \"\n  local result=\"\"\n  local vowels=\"aeiou\"\n  local consonants=\"bcdfghjklmnpqrstvwxyz\"\
    \n  local found=0\n  for ((i=len-1; i>=0; i--)); do\n    for ((j=0; j<${#consonants};\
    \ j++)); do\n      if [[ ${word:$i:1} == ${consonants:$j:1} ]]; then\n       \
    \ consonant=${word:$i:1}\n        for ((k=i-1; k>=0; k--)); do\n          for\
    \ ((l=0; l<${#vowels}; l++)); do\n            if [[ ${word:$k:1} == ${vowels:$l:1}\
    \ ]]; then\n              vowel=${word:$k:1}\n              found=1\n        \
    \      break\n            fi\n          done\n          if [[ $found -eq 1 ]];\
    \ then\n            break\n          fi\n        done\n        if [[ $found -eq\
    \ 1 ]]; then\n          break\n        fi\n      fi\n    done\n    if [[ $found\
    \ -eq 1 ]]; then\n      break\n    fi\n  done\n  if [[ $found -eq 1 ]]; then\n\
    \    result=$vowel\n  fi\n  echo $result\n}\n\ncandidate() {\n    get_closest_vowel\
    \ \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"yogurt\") = \"u\" ]]\n\
    \    [[ $(candidate \"full\") = \"u\" ]]\n    [[ $(candidate \"easy\") = \"\"\
    \ ]]\n    [[ $(candidate \"eAsy\") = \"\" ]]\n    [[ $(candidate \"ali\") = \"\
    \" ]]\n    [[ $(candidate \"bad\") = \"a\" ]]\n    [[ $(candidate \"most\") =\
    \ \"o\" ]]\n    [[ $(candidate \"ab\") = \"\" ]]\n    [[ $(candidate \"ba\") =\
    \ \"\" ]]\n    [[ $(candidate \"quick\") = \"\" ]]\n    [[ $(candidate \"anime\"\
    ) = \"i\" ]]\n    [[ $(candidate \"Asia\") = \"\" ]]\n    [[ $(candidate \"Above\"\
    ) = \"o\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660002112
- exit_code: 1
  program: "#!/bin/bash\n# You are given a word. Your task is to find the closest\
    \ vowel that stands between \n# two consonants from the right side of the word\
    \ (case sensitive).\n# Vowels in the beginning and ending doesn't count. Return\
    \ empty string if you didn't\n# find any vowel met the above condition. \n# You\
    \ may assume that the given string contains English letter only.\n# Example:\n\
    #\n# $1 is a string\nget_closest_vowel() {\n    local word=$1\n    local word_len=${#word}\n\
    \    local i=0\n    local vowel_pos=0\n    local vowel_pos_prev=0\n    local vowel_pos_next=0\n\
    \    local vowel_pos_prev_prev=0\n    local vowel_pos_next_next=0\n    local vowel_pos_prev_prev_prev=0\n\
    \    local vowel_pos_next_next_next=0\n    local vowel_pos_prev_prev_prev_prev=0\n\
    \    local vowel_pos_next_next_next_next=0\n    local vowel_pos_prev_prev_prev_prev_prev=0\n\
    \    local vowel_pos_next_next_next_next_next=0\n    local vowel_pos_prev_prev_prev_prev_prev_prev=0\n\
    \    local vowel_pos_next_next_next_next_next_next=0\n    local vowel_pos_prev_prev_prev_prev_prev_prev_prev=0\n\
    \    local vowel_pos_next_next_next_next_next_next_next=0\n    local vowel_pos_prev_prev_prev_prev_prev_prev_prev_prev=0\n\
    \    local vowel_pos_next_next_next_next_next_next_next_next=0\n    local vowel_pos_prev_prev_prev_prev_prev_prev_prev_prev_prev=0\n\
    \    local vowel_pos_next_next_next_next_next_next_next_next_next=0\n    local\
    \ vowel_pos_prev_prev_prev_prev_prev_prev_prev_prev_prev_prev=0\n    local vowel_pos_next_next_next_next_next_next_next_next_next_next=0\n\
    \    local vowel_pos_prev_prev_prev_prev_prev_prev_prev_prev_prev_prev_prev=0\n\
    \    local vowel_pos_next_next_next_next_next_next_next_next_next_next_next=0\n\
    \    local vowel_pos_prev_prev_prev_prev_prev_prev_prev_prev_prev_prev_prev_prev=0\n\
    \    local vowel_pos_next_\n}\n\ncandidate() {\n    get_closest_vowel \"$@\"\n\
    }\n\nset -e\nrun_test() {\n    [[ $(candidate \"yogurt\") = \"u\" ]]\n    [[ $(candidate\
    \ \"full\") = \"u\" ]]\n    [[ $(candidate \"easy\") = \"\" ]]\n    [[ $(candidate\
    \ \"eAsy\") = \"\" ]]\n    [[ $(candidate \"ali\") = \"\" ]]\n    [[ $(candidate\
    \ \"bad\") = \"a\" ]]\n    [[ $(candidate \"most\") = \"o\" ]]\n    [[ $(candidate\
    \ \"ab\") = \"\" ]]\n    [[ $(candidate \"ba\") = \"\" ]]\n    [[ $(candidate\
    \ \"quick\") = \"\" ]]\n    [[ $(candidate \"anime\") = \"i\" ]]\n    [[ $(candidate\
    \ \"Asia\") = \"\" ]]\n    [[ $(candidate \"Above\") = \"o\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660002111
- exit_code: 1
  program: "#!/bin/bash\n# You are given a word. Your task is to find the closest\
    \ vowel that stands between \n# two consonants from the right side of the word\
    \ (case sensitive).\n# Vowels in the beginning and ending doesn't count. Return\
    \ empty string if you didn't\n# find any vowel met the above condition. \n# You\
    \ may assume that the given string contains English letter only.\n# Example:\n\
    #\n# $1 is a string\nget_closest_vowel() {\n    local word=$1\n    local len=${#word}\n\
    \    local i=0\n    local vowel=\"\"\n    local vowel_pos=0\n    local vowel_len=0\n\
    \    local vowel_dist=0\n    local closest_vowel=\"\"\n    local closest_vowel_pos=0\n\
    \    local closest_vowel_len=0\n    local closest_vowel_dist=0\n    local vowels=\"\
    aeiou\"\n    local consonants=\"bcdfghjklmnpqrstvwxyz\"\n    local c1=\"\"\n \
    \   local c2=\"\"\n    local c1_pos=0\n    local c2_pos=0\n    local c1_len=0\n\
    \    local c2_len=0\n    local c1_dist=0\n    local c2_dist=0\n    local closest_c1=\"\
    \"\n    local closest_c1_pos=0\n    local closest_c1_len=0\n    local closest_c1_dist=0\n\
    \    local closest_c2=\"\"\n    local closest_c2_pos=0\n    local closest_c2_len=0\n\
    \    local closest_c2_dist=0\n    local closest_dist=0\n    local is_vowel=0\n\
    \    local is_consonant=0\n    local is_closest_vowel=0\n    local is_closest_c1=0\n\
    \    local is_closest_c2=0\n    local is_closest_dist=0\n    local is_closest_vowel_dist=0\n\
    \    local is_closest_c1_dist=0\n    local is_closest_c2_dist=0\n    local is_closest_vowel_pos=0\n\
    \    local is_closest_c1_pos=0\n    local is_closest_c2_pos=0\n    local is_closest_vowel_len=0\n\
    \    local is_closest_c1_len=0\n    local is_closest_c2_len=0\n    local is_closest_vowel_found=0\n\
    \    local is\n}\n\ncandidate() {\n    get_closest_vowel \"$@\"\n}\n\nset -e\n\
    run_test() {\n    [[ $(candidate \"yogurt\") = \"u\" ]]\n    [[ $(candidate \"\
    full\") = \"u\" ]]\n    [[ $(candidate \"easy\") = \"\" ]]\n    [[ $(candidate\
    \ \"eAsy\") = \"\" ]]\n    [[ $(candidate \"ali\") = \"\" ]]\n    [[ $(candidate\
    \ \"bad\") = \"a\" ]]\n    [[ $(candidate \"most\") = \"o\" ]]\n    [[ $(candidate\
    \ \"ab\") = \"\" ]]\n    [[ $(candidate \"ba\") = \"\" ]]\n    [[ $(candidate\
    \ \"quick\") = \"\" ]]\n    [[ $(candidate \"anime\") = \"i\" ]]\n    [[ $(candidate\
    \ \"Asia\") = \"\" ]]\n    [[ $(candidate \"Above\") = \"o\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660002112
- exit_code: 1
  program: "#!/bin/bash\n# You are given a word. Your task is to find the closest\
    \ vowel that stands between \n# two consonants from the right side of the word\
    \ (case sensitive).\n# Vowels in the beginning and ending doesn't count. Return\
    \ empty string if you didn't\n# find any vowel met the above condition. \n# You\
    \ may assume that the given string contains English letter only.\n# Example:\n\
    #\n# $1 is a string\nget_closest_vowel() {\n    local word=$1\n    local len=${#word}\n\
    \    local i=0\n    local vowel_pos=0\n    local vowel_found=0\n    local vowel_count=0\n\
    \    local vowel_pos_arr=()\n    local vowel_arr=()\n    local vowel_arr_count=0\n\
    \    local vowel_arr_pos=0\n    local vowel_arr_pos_count=0\n    local vowel_arr_pos_arr=()\n\
    \    local vowel_arr_pos_arr_count=0\n    local vowel_arr_pos_arr_pos=0\n    local\
    \ vowel_arr_pos_arr_pos_count=0\n    local vowel_arr_pos_arr_pos_arr=()\n    local\
    \ vowel_arr_pos_arr_pos_arr_count=0\n    local vowel_arr_pos_arr_pos_arr_pos=0\n\
    \    local vowel_arr_pos_arr_pos_arr_pos_count=0\n    local vowel_arr_pos_arr_pos_arr_pos_arr=()\n\
    \    local vowel_arr_pos_arr_pos_arr_pos_arr_count=0\n    local vowel_arr_pos_arr_pos_arr_pos_arr_pos=0\n\
    \    local vowel_arr_pos_arr_pos_arr_pos_arr_pos_count=0\n    local vowel_arr_pos_arr_pos_arr_pos_arr_pos_arr=()\n\
    \    local vowel_arr_pos_arr_pos_arr_pos_arr_pos_arr_count=0\n    local vowel_arr_pos_arr_pos_arr_pos_arr_pos_arr_pos=0\n\
    \    local vowel_arr_pos_arr_pos_arr_pos_arr_pos_arr_pos_count=0\n    local vowel_arr_pos_arr_pos_arr_pos_arr_pos_arr_pos_arr=()\n\
    \    local vowel_arr_pos_arr_pos_arr_pos_arr_pos_arr_pos_arr_count=0\n    local\
    \ vowel_arr_pos_arr_pos_arr_pos_arr_pos_arr_pos_arr_pos=0\n    local vowel_arr_pos_\n\
    }\n\ncandidate() {\n    get_closest_vowel \"$@\"\n}\n\nset -e\nrun_test() {\n\
    \    [[ $(candidate \"yogurt\") = \"u\" ]]\n    [[ $(candidate \"full\") = \"\
    u\" ]]\n    [[ $(candidate \"easy\") = \"\" ]]\n    [[ $(candidate \"eAsy\") =\
    \ \"\" ]]\n    [[ $(candidate \"ali\") = \"\" ]]\n    [[ $(candidate \"bad\")\
    \ = \"a\" ]]\n    [[ $(candidate \"most\") = \"o\" ]]\n    [[ $(candidate \"ab\"\
    ) = \"\" ]]\n    [[ $(candidate \"ba\") = \"\" ]]\n    [[ $(candidate \"quick\"\
    ) = \"\" ]]\n    [[ $(candidate \"anime\") = \"i\" ]]\n    [[ $(candidate \"Asia\"\
    ) = \"\" ]]\n    [[ $(candidate \"Above\") = \"o\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660002112
- exit_code: 1
  program: "#!/bin/bash\n# You are given a word. Your task is to find the closest\
    \ vowel that stands between \n# two consonants from the right side of the word\
    \ (case sensitive).\n# Vowels in the beginning and ending doesn't count. Return\
    \ empty string if you didn't\n# find any vowel met the above condition. \n# You\
    \ may assume that the given string contains English letter only.\n# Example:\n\
    #\n# $1 is a string\nget_closest_vowel() {\n    local word=$1\n    local word_len=${#word}\n\
    \    local closest_vowel=\"\"\n    local closest_vowel_index=0\n    local closest_vowel_distance=0\n\
    \    local i=0\n    local j=0\n    local vowel_index=0\n    local vowel_distance=0\n\
    \    local is_vowel=0\n    local is_consonant=0\n    local is_first_char=0\n \
    \   local is_last_char=0\n    local is_first_vowel=0\n    local is_last_vowel=0\n\
    \    local is_first_consonant=0\n    local is_last_consonant=0\n    local is_first_vowel_found=0\n\
    \    local is_last_vowel_found=0\n    local is_first_consonant_found=0\n    local\
    \ is_last_consonant_found=0\n    local is_first_vowel_found_index=0\n    local\
    \ is_last_vowel_found_index=0\n    local is_first_consonant_found_index=0\n  \
    \  local is_last_consonant_found_index=0\n    local is_first_vowel_found_distance=0\n\
    \    local is_last_vowel_found_distance=0\n    local is_first_consonant_found_distance=0\n\
    \    local is_last_consonant_found_distance=0\n    local is_first_vowel_found_distance_index=0\n\
    \    local is_last_vowel_found_distance_index=0\n    local is_first_consonant_found_distance_index=0\n\
    \    local is_last_consonant_found_distance_index=0\n    local is_first_vowel_found_distance_index_distance=0\n\
    \    local is_last_vowel_found_distance_index_distance=0\n    local is_first_consonant_found_distance_index_distance=0\n\
    \    local is_last_consonant_found_distance_index_distance=0\n    local is_first_vowel\n\
    }\n\ncandidate() {\n    get_closest_vowel \"$@\"\n}\n\nset -e\nrun_test() {\n\
    \    [[ $(candidate \"yogurt\") = \"u\" ]]\n    [[ $(candidate \"full\") = \"\
    u\" ]]\n    [[ $(candidate \"easy\") = \"\" ]]\n    [[ $(candidate \"eAsy\") =\
    \ \"\" ]]\n    [[ $(candidate \"ali\") = \"\" ]]\n    [[ $(candidate \"bad\")\
    \ = \"a\" ]]\n    [[ $(candidate \"most\") = \"o\" ]]\n    [[ $(candidate \"ab\"\
    ) = \"\" ]]\n    [[ $(candidate \"ba\") = \"\" ]]\n    [[ $(candidate \"quick\"\
    ) = \"\" ]]\n    [[ $(candidate \"anime\") = \"i\" ]]\n    [[ $(candidate \"Asia\"\
    ) = \"\" ]]\n    [[ $(candidate \"Above\") = \"o\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660002112
- exit_code: 1
  program: "#!/bin/bash\n# You are given a word. Your task is to find the closest\
    \ vowel that stands between \n# two consonants from the right side of the word\
    \ (case sensitive).\n# Vowels in the beginning and ending doesn't count. Return\
    \ empty string if you didn't\n# find any vowel met the above condition. \n# You\
    \ may assume that the given string contains English letter only.\n# Example:\n\
    #\n# $1 is a string\nget_closest_vowel() {\n    local word=\"$1\"\n    local vowels=\"\
    aeiou\"\n    local consonants=\"bcdfghjklmnpqrstvwxyz\"\n    local result=\"\"\
    \n    local i=0\n    local j=0\n    local k=0\n    local l=0\n    local m=0\n\
    \    local n=0\n    local o=0\n    local p=0\n    local q=0\n    local r=0\n \
    \   local s=0\n    local t=0\n    local u=0\n    local v=0\n    local w=0\n  \
    \  local x=0\n    local y=0\n    local z=0\n    local a=0\n    local b=0\n   \
    \ local c=0\n    local d=0\n    local e=0\n    local f=0\n    local g=0\n    local\
    \ h=0\n    local i=0\n    local j=0\n    local k=0\n    local l=0\n    local m=0\n\
    \    local n=0\n    local o=0\n    local p=0\n    local q=0\n    local r=0\n \
    \   local s=0\n    local t=0\n    local u=0\n    local v=0\n    local w=0\n  \
    \  local x=0\n    local y=0\n    local z=0\n    local a=0\n    local b=0\n   \
    \ local c=0\n    local d=0\n    local e=0\n    local f=0\n    local g=0\n    local\
    \ h=0\n    local i=0\n    local j=0\n    local k=0\n    local l=0\n    local m=0\n\
    \    local n=0\n    local o=0\n    local p=0\n    local q=0\n    local r=0\n \
    \   local s=0\n    local t=0\n    local u=0\n    local v=0\n    local w=0\n  \
    \  local x=0\n    local y=0\n    local z=0\n    local a=0\n    local b=0\n   \
    \ local c=0\n    local d=0\n    local e=0\n    local f=0\n    local g=0\n    local\
    \ h=0\n}\n\ncandidate() {\n    get_closest_vowel \"$@\"\n}\n\nset -e\nrun_test()\
    \ {\n    [[ $(candidate \"yogurt\") = \"u\" ]]\n    [[ $(candidate \"full\") =\
    \ \"u\" ]]\n    [[ $(candidate \"easy\") = \"\" ]]\n    [[ $(candidate \"eAsy\"\
    ) = \"\" ]]\n    [[ $(candidate \"ali\") = \"\" ]]\n    [[ $(candidate \"bad\"\
    ) = \"a\" ]]\n    [[ $(candidate \"most\") = \"o\" ]]\n    [[ $(candidate \"ab\"\
    ) = \"\" ]]\n    [[ $(candidate \"ba\") = \"\" ]]\n    [[ $(candidate \"quick\"\
    ) = \"\" ]]\n    [[ $(candidate \"anime\") = \"i\" ]]\n    [[ $(candidate \"Asia\"\
    ) = \"\" ]]\n    [[ $(candidate \"Above\") = \"o\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660002112
- exit_code: 1
  program: "#!/bin/bash\n# You are given a word. Your task is to find the closest\
    \ vowel that stands between \n# two consonants from the right side of the word\
    \ (case sensitive).\n# Vowels in the beginning and ending doesn't count. Return\
    \ empty string if you didn't\n# find any vowel met the above condition. \n# You\
    \ may assume that the given string contains English letter only.\n# Example:\n\
    #\n# $1 is a string\nget_closest_vowel() {\n    local word=$1\n    local len=${#word}\n\
    \    local i=0\n    local vowel=\"\"\n    local vowels=\"aeiou\"\n    local consonants=\"\
    bcdfghjklmnpqrstvwxyz\"\n    local last_char=\"\"\n    local last_char_is_consonant=0\n\
    \    local char=\"\"\n    local char_is_consonant=0\n    local char_is_vowel=0\n\
    \    local found_vowel=0\n    local found_consonant=0\n    local found_vowel_index=0\n\
    \    local found_consonant_index=0\n    local found_vowel_char=\"\"\n    local\
    \ found_consonant_char=\"\"\n    local found_vowel_distance=0\n    local found_consonant_distance=0\n\
    \    local found_vowel_distance_min=0\n    local found_consonant_distance_min=0\n\
    \    local found_vowel_distance_min_index=0\n    local found_consonant_distance_min_index=0\n\
    \    local found_vowel_distance_min_char=\"\"\n    local found_consonant_distance_min_char=\"\
    \"\n    local found_vowel_distance_min_is_consonant=0\n    local found_consonant_distance_min_is_consonant=0\n\
    \    local found_vowel_distance_min_is_vowel=0\n    local found_consonant_distance_min_is_vowel=0\n\
    \    local found_vowel_distance_min_is_consonant_index=0\n    local found_consonant_distance_min_is_consonant_index=0\n\
    \    local found_vowel_distance_min_is_vowel_index=0\n    local found_consonant_distance_min_is_vowel_index=0\n\
    \    local found_vowel_distance_min_is_consonant_char=\"\"\n    local found_consonant_distance_min_is_consonant_char=\"\
    \"\n    local found_vowel_distance_min_is_\n}\n\ncandidate() {\n    get_closest_vowel\
    \ \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"yogurt\") = \"u\" ]]\n\
    \    [[ $(candidate \"full\") = \"u\" ]]\n    [[ $(candidate \"easy\") = \"\"\
    \ ]]\n    [[ $(candidate \"eAsy\") = \"\" ]]\n    [[ $(candidate \"ali\") = \"\
    \" ]]\n    [[ $(candidate \"bad\") = \"a\" ]]\n    [[ $(candidate \"most\") =\
    \ \"o\" ]]\n    [[ $(candidate \"ab\") = \"\" ]]\n    [[ $(candidate \"ba\") =\
    \ \"\" ]]\n    [[ $(candidate \"quick\") = \"\" ]]\n    [[ $(candidate \"anime\"\
    ) = \"i\" ]]\n    [[ $(candidate \"Asia\") = \"\" ]]\n    [[ $(candidate \"Above\"\
    ) = \"o\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660002112

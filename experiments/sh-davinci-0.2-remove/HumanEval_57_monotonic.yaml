name: HumanEval_57_monotonic
language: sh
prompt: "#!/bin/bash\n# Return True is list elements are monotonically increasing\
  \ or decreasing.\n#\n# $1 is a space-separated list\nmonotonic() {\n"
tests: "}\n\ncandidate() {\n    monotonic \"$@\"\n}\n\nset -e\nrun_test() {\n    [[\
  \ $(candidate \"1 2 4 10\") = \"true\" ]]\n    [[ $(candidate \"1 2 4 20\") = \"\
  true\" ]]\n    [[ $(candidate \"1 20 4 10\") = \"false\" ]]\n    [[ $(candidate\
  \ \"4 1 0 -10\") = \"true\" ]]\n    [[ $(candidate \"4 1 1 0\") = \"true\" ]]\n\
  \    [[ $(candidate \"1 2 3 2 5 60\") = \"false\" ]]\n    [[ $(candidate \"1 2 3\
  \ 4 5 60\") = \"true\" ]]\n    [[ $(candidate \"9 9 9 9\") = \"true\" ]]\n}\n\n\
  run_test"
completions: ["    local -a list=($1)\n    local -a diffs\n    local i\n    for ((i=0;\
    \ i<${#list[@]}-1; i++)); do\n        diffs[i]=$((list[i+1]-list[i]))\n    done\n\
    \    local -a uniq=($(echo \"${diffs[@]}\" | tr ' ' '\\n' | sort -u))\n    if\
    \ [[ ${#uniq[@]} -eq 1 ]]; then\n        return 0\n    elif [[ ${#uniq[@]} -eq\
    \ 2 ]]; then\n        if [[ ${uniq[0]} -eq 0 || ${uniq[1]} -eq 0 ]]; then\n  \
    \          return 0\n        fi\n    fi\n    return 1", "  local list=\"$1\"\n\
    \  local direction=\"$2\"\n  local prev=\n  local curr=\n  local i=0\n  for curr\
    \ in $list; do\n    if [ $i -gt 0 ]; then\n      if [ \"$direction\" = \"increasing\"\
    \ ]; then\n        if [ $curr -lt $prev ]; then\n          return 1\n        fi\n\
    \      else\n        if [ $curr -gt $prev ]; then\n          return 1\n      \
    \  fi\n      fi\n    fi\n    prev=$curr\n    i=$((i+1))\n  done\n  return 0",
  "    local list=\"$1\"\n    local direction=\"$2\"\n    local prev=\n    local curr=\n\
    \    for curr in $list; do\n        if [ -n \"$prev\" ]; then\n            if\
    \ [ \"$direction\" = \"increasing\" ]; then\n                if [ \"$curr\" -lt\
    \ \"$prev\" ]; then\n                    return 1\n                fi\n      \
    \      else\n                if [ \"$curr\" -gt \"$prev\" ]; then\n          \
    \          return 1\n                fi\n            fi\n        fi\n        prev=\"\
    $curr\"\n    done\n    return 0", "    local list=\"$1\"\n    local -a a=($list)\n\
    \    local -a b=($list)\n    local -a c=($list)\n    local -a d=($list)\n    local\
    \ -a e=($list)\n    local -a f=($list)\n    local -a g=($list)\n    local -a h=($list)\n\
    \    local -a i=($list)\n    local -a j=($list)\n    local -a k=($list)\n    local\
    \ -a l=($list)\n    local -a m=($list)\n    local -a n=($list)\n    local -a o=($list)\n\
    \    local -a p=($list)\n    local -a q=($list)\n    local -a r=($list)\n    local\
    \ -a s=($list)\n    local -a t=($list)\n    local -a u=($list)\n    local -a v=($list)\n\
    \    local -a w=($list)\n    local -a x=($list)\n    local -a y=($list)\n    local\
    \ -a z=($list)\n    local -a A=($list)\n    local -a B=($list)\n    local -a C=($list)\n\
    \    local -a D=($list)\n    local -a E=($list)\n    local -a F=($list)\n    local\
    \ -a G=($list)\n    local -a H=($list)\n    local -a I=($list)\n    local -a J=($list)\n\
    \    local -a K=($list)\n    local -a L=($list)\n    local -a M=($list)\n    local\
    \ -a N=($list)\n    local -a O=($list)\n    local -a P=($list)\n    local -a Q=($list)\n\
    \    local -a R=($list)\n    local -a S=($list)\n    local -a T=($list)\n    local\
    \ -a U=($list)\n    local -a V=($list)\n    local -a W=($list)\n    local -a X=($list)\n\
    \    local -", "    local -a list=($1)\n    local -i i=0\n    local -i len=${#list[@]}\n\
    \    local -i increasing=0\n    local -i decreasing=0\n    local -i diff=0\n \
    \   local -i prev_diff=0\n\n    if [ $len -lt 2 ]; then\n        return 0\n  \
    \  fi\n\n    for ((i=1; i<len; i++)); do\n        diff=${list[$i]}-${list[$i-1]}\n\
    \        if [ $diff -gt 0 ]; then\n            increasing=1\n        elif [ $diff\
    \ -lt 0 ]; then\n            decreasing=1\n        fi\n        if [ $i -gt 1 ]\
    \ && [ $prev_diff -gt 0 ] && [ $diff -lt 0 ]; then\n            return 1\n   \
    \     elif [ $i -gt 1 ] && [ $prev_diff -lt 0 ] && [ $diff -gt 0 ]; then\n   \
    \         return 1\n        fi\n        prev_diff=$diff\n    done\n\n    if [\
    \ $increasing -eq 1 ] && [ $decreasing -eq 1 ]; then\n        return 1\n    fi\n\
    \n    return 0", "    local -a list=($1)\n    local -i i=0\n    local -i len=${#list[@]}\n\
    \    local -i increasing=0\n    local -i decreasing=0\n    local -i prev=${list[0]}\n\
    \    local -i curr=0\n\n    for ((i=1; i<len; i++)); do\n        curr=${list[i]}\n\
    \        if ((curr > prev)); then\n            increasing=1\n        elif ((curr\
    \ < prev)); then\n            decreasing=1\n        fi\n        prev=$curr\n \
    \   done\n\n    if ((increasing && decreasing)); then\n        return 1\n    else\n\
    \        return 0\n    fi", "    local list=\"$1\"\n    local increasing=1\n \
    \   local decreasing=1\n    local prev=0\n    local curr=0\n    for i in $list;\
    \ do\n        curr=$i\n        if [ $prev -gt $curr ]; then\n            increasing=0\n\
    \        elif [ $prev -lt $curr ]; then\n            decreasing=0\n        fi\n\
    \        prev=$curr\n    done\n    [ $increasing -eq 1 ] || [ $decreasing -eq\
    \ 1 ]", "    local list=\"$1\"\n    local inc=0\n    local dec=0\n    local prev=0\n\
    \    local curr=0\n    for i in $list; do\n        curr=$i\n        if [ $curr\
    \ -gt $prev ]; then\n            inc=1\n        elif [ $curr -lt $prev ]; then\n\
    \            dec=1\n        fi\n        if [ $inc -eq 1 -a $dec -eq 1 ]; then\n\
    \            return 1\n        fi\n        prev=$curr\n    done\n    return 0",
  "    local list=\"$1\"\n    local inc=0\n    local dec=0\n    local prev=\n    for\
    \ i in $list; do\n        if [[ -z $prev ]]; then\n            prev=$i\n     \
    \       continue\n        fi\n        if [[ $i -gt $prev ]]; then\n          \
    \  inc=1\n        elif [[ $i -lt $prev ]]; then\n            dec=1\n        fi\n\
    \        if [[ $inc -eq 1 && $dec -eq 1 ]]; then\n            return 1\n     \
    \   fi\n        prev=$i\n    done\n    return 0", "    local -a list=($1)\n  \
    \  local -i i=0\n    local -i len=${#list[@]}\n    local -i increasing=1\n   \
    \ local -i decreasing=1\n    local -i prev=${list[0]}\n    for ((i=1; i<len; i++));\
    \ do\n        if ((prev > ${list[i]})); then\n            increasing=0\n     \
    \   elif ((prev < ${list[i]})); then\n            decreasing=0\n        fi\n \
    \       prev=${list[i]}\n    done\n    ((increasing || decreasing))", "    local\
    \ list=\"$1\"\n    local direction=\"$2\"\n    local prev=0\n    local curr=0\n\
    \    local i=0\n    local result=0\n    for i in $list; do\n        curr=$i\n\
    \        if [ $i -eq 0 ]; then\n            prev=$i\n            continue\n  \
    \      fi\n        if [ \"$direction\" == \"increasing\" ]; then\n           \
    \ if [ $curr -lt $prev ]; then\n                result=1\n                break\n\
    \            fi\n        else\n            if [ $curr -gt $prev ]; then\n    \
    \            result=1\n                break\n            fi\n        fi\n   \
    \     prev=$curr\n    done\n    return $result", "    local list=$1\n    local\
    \ direction=${2:-increasing}\n    local prev=\n    local curr=\n    for curr in\
    \ $list; do\n        if [[ -n $prev ]]; then\n            if [[ $direction ==\
    \ \"increasing\" ]]; then\n                if (( $curr < $prev )); then\n    \
    \                return 1\n                fi\n            else\n            \
    \    if (( $curr > $prev )); then\n                    return 1\n            \
    \    fi\n            fi\n        fi\n        prev=$curr\n    done\n    return\
    \ 0", "    local list=\"$1\"\n    local direction=\"$2\"\n    local prev=\n  \
    \  local curr=\n    for curr in $list; do\n        if [ -n \"$prev\" ]; then\n\
    \            if [ \"$direction\" = \"increasing\" ]; then\n                if\
    \ [ \"$curr\" -lt \"$prev\" ]; then\n                    return 1\n          \
    \      fi\n            else\n                if [ \"$curr\" -gt \"$prev\" ]; then\n\
    \                    return 1\n                fi\n            fi\n        fi\n\
    \        prev=\"$curr\"\n    done\n    return 0", "    local list=\"$1\"\n   \
    \ local direction=\"$2\"\n    local prev=0\n    local curr=0\n    local is_monotonic=1\n\
    \    for i in $list; do\n        curr=$i\n        if [ $prev -ne 0 ]; then\n \
    \           if [ $direction = \"increasing\" ]; then\n                if [ $curr\
    \ -lt $prev ]; then\n                    is_monotonic=0\n                    break\n\
    \                fi\n            else\n                if [ $curr -gt $prev ];\
    \ then\n                    is_monotonic=0\n                    break\n      \
    \          fi\n            fi\n        fi\n        prev=$curr\n    done\n    echo\
    \ $is_monotonic", "    local list=\"$1\"\n    local increasing=1\n    local decreasing=1\n\
    \    local prev=0\n    local curr=0\n    for i in $list; do\n        curr=$i\n\
    \        if [ $curr -lt $prev ]; then\n            increasing=0\n        elif\
    \ [ $curr -gt $prev ]; then\n            decreasing=0\n        fi\n        prev=$curr\n\
    \    done\n    [ $increasing -eq 1 ] || [ $decreasing -eq 1 ]", "    local list=\"\
    $1\"\n    local incr=0\n    local prev=0\n    local curr=0\n    local i=0\n  \
    \  for i in $list; do\n        curr=$i\n        if [ $i -eq 0 ]; then\n      \
    \      prev=$i\n            continue\n        fi\n        if [ $prev -gt $curr\
    \ ]; then\n            if [ $incr -eq 1 ]; then\n                return 1\n  \
    \          fi\n            incr=-1\n        elif [ $prev -lt $curr ]; then\n \
    \           if [ $incr -eq -1 ]; then\n                return 1\n            fi\n\
    \            incr=1\n        fi\n        prev=$curr\n    done\n    return 0",
  "    local list=\"$1\"\n    local direction=\"$2\"\n    local prev=\n    local curr=\n\
    \    for curr in $list; do\n        if [[ -n \"$prev\" ]]; then\n            if\
    \ [[ \"$direction\" == \"inc\" ]]; then\n                if (( curr < prev ));\
    \ then\n                    return 1\n                fi\n            else\n \
    \               if (( curr > prev )); then\n                    return 1\n   \
    \             fi\n            fi\n        fi\n        prev=\"$curr\"\n    done\n\
    \    return 0", "    local list=\"$1\"\n    local prev=\n    for i in $list; do\n\
    \        if [[ -n \"$prev\" ]]; then\n            if (( i < prev )); then\n  \
    \              return 1\n            fi\n        fi\n        prev=$i\n    done\n\
    \    return 0", "    local list=$1\n    local direction=0\n    local prev=0\n\
    \    for i in $list; do\n        if [[ $direction == 0 ]]; then\n            if\
    \ [[ $i -gt $prev ]]; then\n                direction=1\n            elif [[ $i\
    \ -lt $prev ]]; then\n                direction=-1\n            fi\n        elif\
    \ [[ $direction == 1 ]]; then\n            if [[ $i -lt $prev ]]; then\n     \
    \           return 1\n            fi\n        elif [[ $direction == -1 ]]; then\n\
    \            if [[ $i -gt $prev ]]; then\n                return 1\n         \
    \   fi\n        fi\n        prev=$i\n    done\n    return 0", "  local -a list=($1)\n\
    \  local -i i=0\n  local -i n=${#list[@]}\n  local -i inc=0\n  local -i dec=0\n\
    \  local -i eq=0\n  local -i ret=0\n  local -i prev=${list[0]}\n  for ((i=1; i<n;\
    \ i++)); do\n    if [[ ${list[i]} -gt $prev ]]; then\n      inc=1\n    elif [[\
    \ ${list[i]} -lt $prev ]]; then\n      dec=1\n    else\n      eq=1\n    fi\n \
    \   prev=${list[i]}\n  done\n  if [[ $inc -eq 1 && $dec -eq 0 && $eq -eq 0 ]];\
    \ then\n    ret=1\n  elif [[ $inc -eq 0 && $dec -eq 1 && $eq -eq 0 ]]; then\n\
    \    ret=1\n  fi\n  return $ret", "    local list=\"$1\"\n    local prev=0\n \
    \   local curr=0\n    local inc=0\n    local dec=0\n    for i in $list; do\n \
    \       curr=$i\n        if [ $curr -gt $prev ]; then\n            inc=1\n   \
    \     elif [ $curr -lt $prev ]; then\n            dec=1\n        fi\n        if\
    \ [ $inc -eq 1 -a $dec -eq 1 ]; then\n            return 1\n        fi\n     \
    \   prev=$curr\n    done\n    return 0", "    local list=\"$1\"\n    local increasing=true\n\
    \    local decreasing=true\n    local prev=\n    for i in $list; do\n        if\
    \ [ -n \"$prev\" ]; then\n            if [ \"$prev\" -lt \"$i\" ]; then\n    \
    \            decreasing=false\n            elif [ \"$prev\" -gt \"$i\" ]; then\n\
    \                increasing=false\n            fi\n        fi\n        prev=\"\
    $i\"\n    done\n    if $increasing || $decreasing; then\n        return 0\n  \
    \  else\n        return 1\n    fi", "    local list=\"$1\"\n    local direction=\"\
    $2\"\n    local prev=0\n    local curr=0\n    local result=1\n    for i in $list;\
    \ do\n        curr=$i\n        if [[ $prev -ne 0 ]]; then\n            if [[ $direction\
    \ == \"increasing\" ]]; then\n                if [[ $curr -lt $prev ]]; then\n\
    \                    result=0\n                    break\n                fi\n\
    \            else\n                if [[ $curr -gt $prev ]]; then\n          \
    \          result=0\n                    break\n                fi\n         \
    \   fi\n        fi\n        prev=$curr\n    done\n    echo $result", "  local\
    \ list=\"$1\"\n  local i=0\n  local prev=0\n  local curr=0\n  local incr=0\n \
    \ local decr=0\n  for i in $list; do\n    curr=$i\n    if [ $curr -gt $prev ];\
    \ then\n      incr=1\n    elif [ $curr -lt $prev ]; then\n      decr=1\n    fi\n\
    \    prev=$curr\n  done\n  if [ $incr -eq 1 -a $decr -eq 1 ]; then\n    return\
    \ 1\n  else\n    return 0\n  fi", "    local -a list=($1)\n    local -i i\n  \
    \  local -i n=${#list[@]}\n    local -i increasing=1\n    local -i decreasing=1\n\
    \    for ((i=1; i<n; i++)); do\n        if ((list[i] < list[i-1])); then\n   \
    \         increasing=0\n        fi\n        if ((list[i] > list[i-1])); then\n\
    \            decreasing=0\n        fi\n    done\n    if ((increasing || decreasing));\
    \ then\n        return 0\n    else\n        return 1\n    fi", "    local list=\"\
    $1\"\n    local increasing=${2:-1}\n    local prev=\n    local curr=\n    for\
    \ x in $list; do\n        if [[ -n $prev ]]; then\n            if (( increasing\
    \ )); then\n                (( x < prev )) && return 1\n            else\n   \
    \             (( x > prev )) && return 1\n            fi\n        fi\n       \
    \ prev=$x\n    done\n    return 0", "    local list=\"$1\"\n    local direction=\"\
    $2\"\n    local prev=0\n    local curr=0\n    local result=0\n    for curr in\
    \ $list; do\n        if [ $prev -ne 0 ]; then\n            if [ $direction = \"\
    inc\" ]; then\n                if [ $curr -lt $prev ]; then\n                \
    \    result=1\n                    break\n                fi\n            else\n\
    \                if [ $curr -gt $prev ]; then\n                    result=1\n\
    \                    break\n                fi\n            fi\n        fi\n \
    \       prev=$curr\n    done\n    return $result", "    local list=\"$1\"\n  \
    \  local last=$(echo \"$list\" | head -n 1)\n    local increasing=true\n    local\
    \ decreasing=true\n    for i in $list; do\n        if (( $i > $last )); then\n\
    \            decreasing=false\n        elif (( $i < $last )); then\n         \
    \   increasing=false\n        fi\n        last=$i\n    done\n    if $increasing\
    \ || $decreasing; then\n        return 0\n    else\n        return 1\n    fi",
  "  local list=\"$1\"\n  local prev=$(echo \"$list\" | cut -d' ' -f1)\n  local curr\n\
    \  for curr in $list; do\n    if [ \"$curr\" -gt \"$prev\" ]; then\n      local\
    \ increasing=1\n    elif [ \"$curr\" -lt \"$prev\" ]; then\n      local decreasing=1\n\
    \    fi\n    prev=$curr\n  done\n  if [ \"$increasing\" ] && [ \"$decreasing\"\
    \ ]; then\n    return 1\n  else\n    return 0\n  fi", "    local list=\"$1\"\n\
    \    local direction=\"$2\"\n    local previous=0\n    local current=0\n    local\
    \ result=0\n    for i in $list; do\n        current=$i\n        if [ $current\
    \ -eq $previous ]; then\n            continue\n        fi\n        if [ $direction\
    \ == \"increasing\" ]; then\n            if [ $current -lt $previous ]; then\n\
    \                result=1\n                break\n            fi\n        else\n\
    \            if [ $current -gt $previous ]; then\n                result=1\n \
    \               break\n            fi\n        fi\n        previous=$current\n\
    \    done\n    return $result", "    local list=\"$1\"\n    local increasing=1\n\
    \    local decreasing=1\n    local prev=\n    for i in $list; do\n        if [\
    \ -n \"$prev\" ]; then\n            if [ \"$i\" -lt \"$prev\" ]; then\n      \
    \          increasing=0\n            elif [ \"$i\" -gt \"$prev\" ]; then\n   \
    \             decreasing=0\n            fi\n        fi\n        prev=\"$i\"\n\
    \    done\n    [ \"$increasing\" -eq 1 ] || [ \"$decreasing\" -eq 1 ]", "    local\
    \ list=$1\n    local direction=0\n    local last=0\n    local current=0\n    for\
    \ i in $list; do\n        current=$i\n        if [ $last -ne 0 ]; then\n     \
    \       if [ $direction -eq 0 ]; then\n                if [ $current -lt $last\
    \ ]; then\n                    direction=-1\n                elif [ $current -gt\
    \ $last ]; then\n                    direction=1\n                fi\n       \
    \     else\n                if [ $current -lt $last -a $direction -eq 1 ]; then\n\
    \                    return 1\n                elif [ $current -gt $last -a $direction\
    \ -eq -1 ]; then\n                    return 1\n                fi\n         \
    \   fi\n        fi\n        last=$current\n    done\n    return 0", "    local\
    \ list=\"$1\"\n    local prev=\n    local curr=\n    local incr=\n    for curr\
    \ in $list; do\n        if [ -n \"$prev\" ]; then\n            if [ -z \"$incr\"\
    \ ]; then\n                if [ \"$prev\" -lt \"$curr\" ]; then\n            \
    \        incr=1\n                elif [ \"$prev\" -gt \"$curr\" ]; then\n    \
    \                incr=0\n                fi\n            elif [ \"$incr\" -eq\
    \ 1 -a \"$prev\" -gt \"$curr\" ]; then\n                return 1\n           \
    \ elif [ \"$incr\" -eq 0 -a \"$prev\" -lt \"$curr\" ]; then\n                return\
    \ 1\n            fi\n        fi\n        prev=\"$curr\"\n    done\n    return\
    \ 0", "    local list=\"$1\"\n    local prev=\n    local curr=\n    local increasing=\n\
    \    local decreasing=\n    for curr in $list; do\n        if [ -n \"$prev\" ];\
    \ then\n            if [ \"$prev\" -lt \"$curr\" ]; then\n                increasing=1\n\
    \            elif [ \"$prev\" -gt \"$curr\" ]; then\n                decreasing=1\n\
    \            fi\n        fi\n        prev=$curr\n    done\n    if [ -n \"$increasing\"\
    \ -a -n \"$decreasing\" ]; then\n        return 1\n    fi\n    return 0", "  \
    \  local -a list=($1)\n    local -a diffs\n    local i\n    local diff\n\n   \
    \ for ((i=0; i<${#list[@]}-1; i++)); do\n        diff=$((${list[$i+1]} - ${list[$i]}))\n\
    \        diffs[$i]=$diff\n    done\n\n    if [[ ${diffs[*]} =~ ^([+-]?[0-9]+ )*[+-]?[0-9]+$\
    \ ]]; then\n        return 0\n    else\n        return 1\n    fi", "    local\
    \ list=$1\n    local direction=$2\n    local prev=\n    for i in $list; do\n \
    \       if [ -n \"$prev\" ]; then\n            if [ \"$direction\" = \"increasing\"\
    \ ]; then\n                if [ \"$i\" -lt \"$prev\" ]; then\n               \
    \     return 1\n                fi\n            else\n                if [ \"\
    $i\" -gt \"$prev\" ]; then\n                    return 1\n                fi\n\
    \            fi\n        fi\n        prev=$i\n    done\n    return 0", "  local\
    \ list=\"$1\"\n  local direction=\"$2\"\n  local prev=\n  local curr=\n  for curr\
    \ in $list; do\n    if [ -n \"$prev\" ]; then\n      if [ \"$direction\" = \"\
    increasing\" ]; then\n        if [ \"$curr\" -lt \"$prev\" ]; then\n         \
    \ return 1\n        fi\n      else\n        if [ \"$curr\" -gt \"$prev\" ]; then\n\
    \          return 1\n        fi\n      fi\n    fi\n    prev=\"$curr\"\n  done\n\
    \  return 0", "  local list=$1\n  local direction=0\n  local prev=0\n  for i in\
    \ $list; do\n    if [[ $direction == 0 ]]; then\n      if [[ $i -gt $prev ]];\
    \ then\n        direction=1\n      elif [[ $i -lt $prev ]]; then\n        direction=-1\n\
    \      fi\n    elif [[ $direction == 1 ]]; then\n      if [[ $i -lt $prev ]];\
    \ then\n        return 1\n      fi\n    elif [[ $direction == -1 ]]; then\n  \
    \    if [[ $i -gt $prev ]]; then\n        return 1\n      fi\n    fi\n    prev=$i\n\
    \  done\n  return 0", "    local list=\"$1\"\n    local n=0\n    local i=0\n \
    \   local prev=0\n    local curr=0\n    local incr=0\n    local decr=0\n    local\
    \ ret=0\n\n    n=$(echo \"$list\" | wc -w)\n    if [ $n -lt 2 ]; then\n      \
    \  return 0\n    fi\n\n    prev=$(echo \"$list\" | cut -d ' ' -f 1)\n    for i\
    \ in $(seq 2 $n); do\n        curr=$(echo \"$list\" | cut -d ' ' -f $i)\n    \
    \    if [ $curr -gt $prev ]; then\n            incr=1\n        elif [ $curr -lt\
    \ $prev ]; then\n            decr=1\n        fi\n        if [ $incr -eq 1 -a $decr\
    \ -eq 1 ]; then\n            ret=1\n            break\n        fi\n        prev=$curr\n\
    \    done\n\n    return $ret", "    local list=\"$1\"\n    local direction=\"\
    $2\"\n    local prev=0\n    local curr=0\n    local result=0\n    for i in $list;\
    \ do\n        curr=$i\n        if [ $prev -ne 0 ]; then\n            if [ $direction\
    \ = \"increasing\" ]; then\n                if [ $curr -lt $prev ]; then\n   \
    \                 result=1\n                    break\n                fi\n  \
    \          else\n                if [ $curr -gt $prev ]; then\n              \
    \      result=1\n                    break\n                fi\n            fi\n\
    \        fi\n        prev=$curr\n    done\n    return $result", "    local list=\"\
    $1\"\n    local n=0\n    local prev=\n    for i in $list; do\n        if [ -z\
    \ \"$prev\" ]; then\n            prev=$i\n        else\n            if [ $prev\
    \ -gt $i ]; then\n                n=$((n+1))\n            fi\n            prev=$i\n\
    \        fi\n    done\n    if [ $n -eq 0 ]; then\n        return 0\n    else\n\
    \        return 1\n    fi", "    local list=\"$1\"\n    local increasing=1\n \
    \   local decreasing=1\n    local last=\n    for i in $list; do\n        if [\
    \ -n \"$last\" ]; then\n            if [ \"$i\" -lt \"$last\" ]; then\n      \
    \          increasing=0\n            elif [ \"$i\" -gt \"$last\" ]; then\n   \
    \             decreasing=0\n            fi\n        fi\n        last=\"$i\"\n\
    \    done\n    [ \"$increasing\" -eq 1 ] || [ \"$decreasing\" -eq 1 ]", "    local\
    \ list=$1\n    local direction=0\n    local prev=0\n    local curr=0\n    for\
    \ curr in $list; do\n        if [[ $prev -ne 0 ]]; then\n            if [[ $curr\
    \ -gt $prev ]]; then\n                if [[ $direction -eq -1 ]]; then\n     \
    \               return 1\n                fi\n                direction=1\n  \
    \          elif [[ $curr -lt $prev ]]; then\n                if [[ $direction\
    \ -eq 1 ]]; then\n                    return 1\n                fi\n         \
    \       direction=-1\n            fi\n        fi\n        prev=$curr\n    done\n\
    \    return 0", "    local list=\"$1\"\n    local increasing=1\n    local decreasing=1\n\
    \    local prev=0\n    local curr=0\n    for i in $list; do\n        curr=$i\n\
    \        if [ $curr -lt $prev ]; then\n            increasing=0\n        fi\n\
    \        if [ $curr -gt $prev ]; then\n            decreasing=0\n        fi\n\
    \        prev=$curr\n    done\n    if [ $increasing -eq 1 ] || [ $decreasing -eq\
    \ 1 ]; then\n        return 0\n    else\n        return 1\n    fi", "    local\
    \ list=\"$1\"\n    local i\n    local prev\n    local curr\n    local increasing=1\n\
    \    local decreasing=1\n    for i in $list; do\n        curr=$i\n        if [\
    \ -n \"$prev\" ]; then\n            if [ $curr -gt $prev ]; then\n           \
    \     decreasing=0\n            elif [ $curr -lt $prev ]; then\n             \
    \   increasing=0\n            fi\n        fi\n        prev=$curr\n    done\n \
    \   if [ $increasing -eq 1 -o $decreasing -eq 1 ]; then\n        return 0\n  \
    \  else\n        return 1\n    fi", "    local -a list\n    local -i i\n    local\
    \ -i n\n    local -i prev\n    local -i curr\n    local -i increasing\n    local\
    \ -i decreasing\n    local -i monotonic\n\n    list=($1)\n    n=${#list[@]}\n\
    \    if (( n < 2 )); then\n        return 0\n    fi\n\n    increasing=1\n    decreasing=1\n\
    \    prev=${list[0]}\n    for (( i=1; i<n; i++ )); do\n        curr=${list[i]}\n\
    \        if (( curr < prev )); then\n            increasing=0\n        elif ((\
    \ curr > prev )); then\n            decreasing=0\n        fi\n        prev=$curr\n\
    \    done\n\n    monotonic=$(( increasing || decreasing ))\n    return $monotonic",
  "    local list=\"$1\"\n    local direction=\"$2\"\n    local prev=$(echo \"$list\"\
    \ | head -n 1)\n    local curr\n    for curr in $list; do\n        if [ \"$direction\"\
    \ == \"increasing\" ]; then\n            if [ \"$curr\" -lt \"$prev\" ]; then\n\
    \                return 1\n            fi\n        else\n            if [ \"$curr\"\
    \ -gt \"$prev\" ]; then\n                return 1\n            fi\n        fi\n\
    \        prev=$curr\n    done\n    return 0", "    local list=\"$1\"\n    local\
    \ increasing=1\n    local decreasing=1\n    local prev=\n    for x in $list; do\n\
    \        if [ -n \"$prev\" ]; then\n            if [ \"$x\" -lt \"$prev\" ]; then\n\
    \                increasing=0\n            elif [ \"$x\" -gt \"$prev\" ]; then\n\
    \                decreasing=0\n            fi\n        fi\n        prev=\"$x\"\
    \n    done\n    [ \"$increasing\" -eq 1 ] || [ \"$decreasing\" -eq 1 ]", "   \
    \ local list=$1\n    local last\n    local current\n    local increasing=1\n \
    \   local decreasing=1\n    for i in $list; do\n        current=$i\n        if\
    \ [ -n \"$last\" ]; then\n            if [ $current -gt $last ]; then\n      \
    \          decreasing=0\n            elif [ $current -lt $last ]; then\n     \
    \           increasing=0\n            fi\n        fi\n        last=$current\n\
    \    done\n    if [ $increasing -eq 1 ] || [ $decreasing -eq 1 ]; then\n     \
    \   return 0\n    else\n        return 1\n    fi", "    local list=\"$1\"\n  \
    \  local direction=\"$2\"\n    local -a array=($list)\n    local -i i=0\n    local\
    \ -i len=${#array[@]}\n    local -i result=1\n    if [[ \"$direction\" == \"increasing\"\
    \ ]]; then\n        for ((i=0; i<len-1; i++)); do\n            if [[ ${array[i]}\
    \ -gt ${array[i+1]} ]]; then\n                result=0\n                break\n\
    \            fi\n        done\n    elif [[ \"$direction\" == \"decreasing\" ]];\
    \ then\n        for ((i=0; i<len-1; i++)); do\n            if [[ ${array[i]} -lt\
    \ ${array[i+1]} ]]; then\n                result=0\n                break\n  \
    \          fi\n        done\n    else\n        echo \"ERROR: monotonic() called\
    \ with invalid direction: $direction\"\n        exit 1\n    fi\n    return $result",
  "    local list=\"$1\"\n    local direction=\"$2\"\n    local prev=0\n    local\
    \ curr=0\n    local result=0\n    for i in $list; do\n        curr=$i\n      \
    \  if [ $prev -ne 0 ]; then\n            if [ $direction == \"increasing\" ];\
    \ then\n                if [ $curr -lt $prev ]; then\n                    result=1\n\
    \                    break\n                fi\n            else\n           \
    \     if [ $curr -gt $prev ]; then\n                    result=1\n           \
    \         break\n                fi\n            fi\n        fi\n        prev=$curr\n\
    \    done\n    return $result", "    local list=\"$1\"\n    local prev=\n    local\
    \ curr=\n    local increasing=\n    local decreasing=\n    for curr in $list;\
    \ do\n        if [ -n \"$prev\" ]; then\n            if [ $prev -lt $curr ]; then\n\
    \                increasing=1\n            elif [ $prev -gt $curr ]; then\n  \
    \              decreasing=1\n            fi\n        fi\n        prev=$curr\n\
    \    done\n    [ -n \"$increasing\" -a -n \"$decreasing\" ] && return 1\n    return\
    \ 0", "  local list=\"$1\"\n  local direction=\"$2\"\n  local prev=\n  local curr=\n\
    \  for i in $list; do\n    if [[ -n \"$prev\" ]]; then\n      if [[ \"$direction\"\
    \ == \"increasing\" ]]; then\n        if [[ \"$prev\" -gt \"$i\" ]]; then\n  \
    \        return 1\n        fi\n      else\n        if [[ \"$prev\" -lt \"$i\"\
    \ ]]; then\n          return 1\n        fi\n      fi\n    fi\n    prev=\"$i\"\n\
    \  done\n  return 0", "    local list=\"$1\"\n    local -a arr=($list)\n    local\
    \ -a diffs\n    local i\n    for ((i=0; i<${#arr[@]}-1; i++)); do\n        diffs[i]=$((arr[i+1]\
    \ - arr[i]))\n    done\n    local first_diff=${diffs[0]}\n    for ((i=1; i<${#diffs[@]};\
    \ i++)); do\n        if [[ ${diffs[i]} -ne $first_diff ]]; then\n            return\
    \ 1\n        fi\n    done\n    return 0", "  local list=\"$1\"\n  local prev=$(echo\
    \ \"$list\" | head -n 1)\n  local increasing=true\n  local decreasing=true\n \
    \ for i in $list; do\n    if [[ $i -lt $prev ]]; then\n      increasing=false\n\
    \    fi\n    if [[ $i -gt $prev ]]; then\n      decreasing=false\n    fi\n   \
    \ prev=$i\n  done\n  if $increasing || $decreasing; then\n    return 0\n  else\n\
    \    return 1\n  fi", "    local list=\"$1\"\n    local increasing=true\n    local\
    \ decreasing=true\n    local prev=0\n    local curr=0\n    for i in $list; do\n\
    \        curr=$i\n        if [ $prev -gt $curr ]; then\n            increasing=false\n\
    \        elif [ $prev -lt $curr ]; then\n            decreasing=false\n      \
    \  fi\n        prev=$curr\n    done\n    if $increasing || $decreasing; then\n\
    \        return 0\n    else\n        return 1\n    fi", "    local list=\"$1\"\
    \n    local i\n    local prev=0\n    local curr=0\n    local increasing=0\n  \
    \  local decreasing=0\n    for i in $list; do\n        if [ $i -lt $prev ]; then\n\
    \            decreasing=1\n        elif [ $i -gt $prev ]; then\n            increasing=1\n\
    \        fi\n        if [ $increasing -eq 1 -a $decreasing -eq 1 ]; then\n   \
    \         return 1\n        fi\n        prev=$i\n    done\n    return 0", "  \
    \  local list=\"$1\"\n    local direction=\"$2\"\n    local prev=\n    local curr=\n\
    \    for curr in $list; do\n        if [ -n \"$prev\" ]; then\n            if\
    \ [ \"$direction\" = \"increasing\" ]; then\n                if [ \"$curr\" -lt\
    \ \"$prev\" ]; then\n                    return 1\n                fi\n      \
    \      else\n                if [ \"$curr\" -gt \"$prev\" ]; then\n          \
    \          return 1\n                fi\n            fi\n        fi\n        prev=\"\
    $curr\"\n    done\n    return 0", "    local list=$1\n    local direction=${2:-increasing}\n\
    \    local last=0\n    local current=0\n    local result=0\n    for i in $list;\
    \ do\n        current=$i\n        if [ $current -lt $last ]; then\n          \
    \  if [ \"$direction\" == \"increasing\" ]; then\n                result=1\n \
    \               break\n            fi\n        elif [ $current -gt $last ]; then\n\
    \            if [ \"$direction\" == \"decreasing\" ]; then\n                result=1\n\
    \                break\n            fi\n        fi\n        last=$current\n  \
    \  done\n    return $result", "    local list=\"$1\"\n    local increasing=1\n\
    \    local decreasing=1\n    local prev=0\n    local curr=0\n    for i in $list;\
    \ do\n        curr=$i\n        if [ $curr -lt $prev ]; then\n            increasing=0\n\
    \        fi\n        if [ $curr -gt $prev ]; then\n            decreasing=0\n\
    \        fi\n        prev=$curr\n    done\n    if [ $increasing -eq 1 ] || [ $decreasing\
    \ -eq 1 ]; then\n        return 0\n    else\n        return 1\n    fi", "    local\
    \ list=\"$1\"\n    local increasing=true\n    local decreasing=true\n    local\
    \ prev=0\n    local curr=0\n    for i in $list; do\n        curr=$i\n        if\
    \ [ $curr -lt $prev ]; then\n            increasing=false\n        fi\n      \
    \  if [ $curr -gt $prev ]; then\n            decreasing=false\n        fi\n  \
    \      prev=$curr\n    done\n    if $increasing || $decreasing; then\n       \
    \ return 0\n    else\n        return 1\n    fi", "    local list=\"$1\"\n    local\
    \ direction=\"$2\"\n    local prev=0\n    local curr=0\n    local i=0\n    for\
    \ i in $list; do\n        curr=$i\n        if [ $i -eq 0 ]; then\n           \
    \ prev=$i\n            continue\n        fi\n        if [ \"$direction\" == \"\
    increasing\" ]; then\n            if [ $curr -lt $prev ]; then\n             \
    \   return 1\n            fi\n        elif [ \"$direction\" == \"decreasing\"\
    \ ]; then\n            if [ $curr -gt $prev ]; then\n                return 1\n\
    \            fi\n        else\n            echo \"Invalid direction: $direction\"\
    \n            return 1\n        fi\n        prev=$curr\n    done\n    return 0",
  "    local -a list=($1)\n    local i\n    local -i len=${#list[@]}\n    local -i\
    \ incr=1\n    local -i decr=1\n    local -i prev=${list[0]}\n    for ((i=1; i<len;\
    \ i++)); do\n        if ((prev < ${list[i]})); then\n            ((decr = 0))\n\
    \        elif ((prev > ${list[i]})); then\n            ((incr = 0))\n        fi\n\
    \        ((prev = ${list[i]}))\n    done\n    ((incr || decr))", "    local list=\"\
    $1\"\n    local direction=\"$2\"\n    local prev=\n    local curr=\n    for curr\
    \ in $list; do\n        if [ -n \"$prev\" ]; then\n            if [ \"$direction\"\
    \ = \"increasing\" ]; then\n                if [ \"$curr\" -lt \"$prev\" ]; then\n\
    \                    return 1\n                fi\n            else\n        \
    \        if [ \"$curr\" -gt \"$prev\" ]; then\n                    return 1\n\
    \                fi\n            fi\n        fi\n        prev=\"$curr\"\n    done\n\
    \    return 0", "    local list=\"$1\"\n    local increasing=true\n    local decreasing=true\n\
    \    local prev=0\n    local curr=0\n    for x in $list; do\n        curr=$x\n\
    \        if [ $curr -lt $prev ]; then\n            increasing=false\n        elif\
    \ [ $curr -gt $prev ]; then\n            decreasing=false\n        fi\n      \
    \  prev=$curr\n    done\n    if $increasing || $decreasing; then\n        echo\
    \ true\n    else\n        echo false\n    fi", "    local list=\"$1\"\n    local\
    \ last=\"$(echo \"$list\" | head -n 1)\"\n    local increasing=true\n    local\
    \ decreasing=true\n    for i in $list; do\n        if [[ $i -lt $last ]]; then\n\
    \            increasing=false\n        elif [[ $i -gt $last ]]; then\n       \
    \     decreasing=false\n        fi\n        last=$i\n    done\n    [[ $increasing\
    \ = true || $decreasing = true ]]", "    local -a list=($1)\n    local -i i=0\n\
    \    local -i n=${#list[@]}\n    local -i increasing=1\n    local -i decreasing=1\n\
    \    local -i equal=1\n    local -i last=${list[0]}\n    for ((i=1; i<n; i++));\
    \ do\n        if [[ ${list[i]} -gt $last ]]; then\n            decreasing=0\n\
    \        elif [[ ${list[i]} -lt $last ]]; then\n            increasing=0\n   \
    \     else\n            equal=0\n        fi\n        last=${list[i]}\n    done\n\
    \    if [[ $increasing -eq 1 || $decreasing -eq 1 || $equal -eq 1 ]]; then\n \
    \       return 0\n    else\n        return 1\n    fi", "    local list=\"$1\"\n\
    \    local n=0\n    local prev=\n    local curr=\n    local incr=\n    local decr=\n\
    \    for i in $list; do\n        if [ -z \"$prev\" ]; then\n            prev=$i\n\
    \            continue\n        fi\n        curr=$i\n        if [ $prev -lt $curr\
    \ ]; then\n            incr=1\n        elif [ $prev -gt $curr ]; then\n      \
    \      decr=1\n        fi\n        prev=$curr\n        n=$((n+1))\n    done\n\
    \    if [ $n -gt 1 -a -n \"$incr\" -a -n \"$decr\" ]; then\n        return 1\n\
    \    fi\n    return 0", "    local list=\"$1\"\n    local direction=\"$2\"\n \
    \   local prev=\n    local curr=\n    local result=0\n    for curr in $list; do\n\
    \        if [ -n \"$prev\" ]; then\n            if [ \"$direction\" = \"increasing\"\
    \ ]; then\n                if [ \"$curr\" -lt \"$prev\" ]; then\n            \
    \        result=1\n                    break\n                fi\n           \
    \ else\n                if [ \"$curr\" -gt \"$prev\" ]; then\n               \
    \     result=1\n                    break\n                fi\n            fi\n\
    \        fi\n        prev=\"$curr\"\n    done\n    return $result", "    local\
    \ list=$1\n    local direction=0\n    local last=0\n    local current=0\n    for\
    \ i in $list; do\n        current=$i\n        if [ $last -eq 0 ]; then\n     \
    \       last=$current\n            continue\n        fi\n        if [ $direction\
    \ -eq 0 ]; then\n            if [ $last -lt $current ]; then\n               \
    \ direction=1\n            elif [ $last -gt $current ]; then\n               \
    \ direction=-1\n            fi\n        elif [ $direction -eq 1 -a $last -gt $current\
    \ ]; then\n            return 1\n        elif [ $direction -eq -1 -a $last -lt\
    \ $current ]; then\n            return 1\n        fi\n        last=$current\n\
    \    done\n    return 0", "  local list=\"$1\"\n  local inc=0\n  local dec=0\n\
    \  local prev=0\n  local curr=0\n  for i in $list; do\n    curr=$i\n    if [[\
    \ $curr -gt $prev ]]; then\n      inc=1\n    elif [[ $curr -lt $prev ]]; then\n\
    \      dec=1\n    fi\n    if [[ $inc -eq 1 && $dec -eq 1 ]]; then\n      return\
    \ 1\n    fi\n    prev=$curr\n  done\n  return 0", "    local list=\"$1\"\n   \
    \ local direction=\"$2\"\n    local prev=0\n    local curr=0\n    local i=0\n\
    \    local len=0\n    local is_monotonic=1\n\n    len=$(echo \"$list\" | wc -w)\n\
    \    for i in $(seq 1 $len); do\n        curr=$(echo \"$list\" | cut -d ' ' -f\
    \ $i)\n        if [ $i -gt 1 ]; then\n            if [ \"$direction\" == \"increasing\"\
    \ ]; then\n                if [ $curr -lt $prev ]; then\n                    is_monotonic=0\n\
    \                    break\n                fi\n            elif [ \"$direction\"\
    \ == \"decreasing\" ]; then\n                if [ $curr -gt $prev ]; then\n  \
    \                  is_monotonic=0\n                    break\n               \
    \ fi\n            else\n                echo \"Invalid direction: $direction\"\
    \n                exit 1\n            fi\n        fi\n        prev=$curr\n   \
    \ done\n\n    echo $is_monotonic", "  local -a list=($1)\n  local -a diffs\n \
    \ local i\n  for ((i=0; i<${#list[@]}-1; i++)); do\n    diffs[i]=$((list[i+1]-list[i]))\n\
    \  done\n  local -a uniq_diffs=($(echo \"${diffs[@]}\" | tr ' ' '\\n' | sort -u\
    \ | tr '\\n' ' '))\n  if [[ ${#uniq_diffs[@]} -eq 1 ]]; then\n    if [[ ${uniq_diffs[0]}\
    \ -eq 0 ]]; then\n      return 0\n    else\n      return 1\n    fi\n  elif [[\
    \ ${#uniq_diffs[@]} -eq 2 ]]; then\n    if [[ ${uniq_diffs[0]} -eq ${uniq_diffs[1]}*-1\
    \ ]]; then\n      return 0\n    else\n      return 1\n    fi\n  else\n    return\
    \ 1\n  fi", "  local list=\"$1\"\n  local prev=\n  local curr=\n  local increasing=\n\
    \  for curr in $list; do\n    if [[ -n \"$prev\" ]]; then\n      if [[ $curr -eq\
    \ $prev ]]; then\n        continue\n      fi\n      if [[ -z \"$increasing\" ]];\
    \ then\n        increasing=$(echo \"$curr > $prev\" | bc)\n      fi\n      if\
    \ [[ $increasing -eq 1 ]]; then\n        if [[ $curr -lt $prev ]]; then\n    \
    \      return 1\n        fi\n      else\n        if [[ $curr -gt $prev ]]; then\n\
    \          return 1\n        fi\n      fi\n    fi\n    prev=$curr\n  done\n  return\
    \ 0", "    local list=\"$1\"\n    local increasing=1\n    local decreasing=1\n\
    \    local prev=0\n    local curr=0\n    for i in $list; do\n        curr=$i\n\
    \        if [ $curr -lt $prev ]; then\n            increasing=0\n        fi\n\
    \        if [ $curr -gt $prev ]; then\n            decreasing=0\n        fi\n\
    \        prev=$curr\n    done\n    if [ $increasing -eq 1 ] || [ $decreasing -eq\
    \ 1 ]; then\n        return 0\n    else\n        return 1\n    fi", "    local\
    \ list=\"$1\"\n    local first=1\n    local last=0\n    local direction=0\n  \
    \  local i=0\n    for i in $list; do\n        if [ $first -eq 1 ]; then\n    \
    \        first=0\n            last=$i\n            continue\n        fi\n    \
    \    if [ $direction -eq 0 ]; then\n            if [ $i -gt $last ]; then\n  \
    \              direction=1\n            elif [ $i -lt $last ]; then\n        \
    \        direction=-1\n            fi\n        elif [ $direction -eq 1 ]; then\n\
    \            if [ $i -lt $last ]; then\n                return 1\n           \
    \ fi\n        elif [ $direction -eq -1 ]; then\n            if [ $i -gt $last\
    \ ]; then\n                return 1\n            fi\n        fi\n        last=$i\n\
    \    done\n    return 0", "  local list=\"$1\"\n  local direction=\"$2\"\n  local\
    \ last_value\n  local value\n  local result=0\n  for value in $list; do\n    if\
    \ [[ -n \"$last_value\" ]]; then\n      if [[ \"$direction\" == \"increasing\"\
    \ ]]; then\n        if [[ \"$value\" -lt \"$last_value\" ]]; then\n          result=1\n\
    \          break\n        fi\n      else\n        if [[ \"$value\" -gt \"$last_value\"\
    \ ]]; then\n          result=1\n          break\n        fi\n      fi\n    fi\n\
    \    last_value=\"$value\"\n  done\n  return $result", "    local list=$1\n  \
    \  local direction=0\n    local last=0\n    local current=0\n    for i in $list;\
    \ do\n        current=$i\n        if [ $last -ne 0 ]; then\n            if [ $direction\
    \ -eq 0 ]; then\n                if [ $current -lt $last ]; then\n           \
    \         direction=-1\n                elif [ $current -gt $last ]; then\n  \
    \                  direction=1\n                fi\n            elif [ $direction\
    \ -eq -1 ]; then\n                if [ $current -gt $last ]; then\n          \
    \          return 1\n                fi\n            elif [ $direction -eq 1 ];\
    \ then\n                if [ $current -lt $last ]; then\n                    return\
    \ 1\n                fi\n            fi\n        fi\n        last=$current\n \
    \   done\n    return 0", "    local list=$1\n    local direction=${2:-increasing}\n\
    \    local last_value=\n    local value\n    for value in $list; do\n        if\
    \ [[ -n $last_value ]]; then\n            if [[ $direction == increasing ]]; then\n\
    \                if [[ $value -lt $last_value ]]; then\n                    return\
    \ 1\n                fi\n            else\n                if [[ $value -gt $last_value\
    \ ]]; then\n                    return 1\n                fi\n            fi\n\
    \        fi\n        last_value=$value\n    done\n    return 0", "    local list=($1)\n\
    \    local i\n    local direction\n    local last=${list[0]}\n    for i in ${list[@]:1};\
    \ do\n        if [[ $i -lt $last ]]; then\n            if [[ $direction == \"\
    increasing\" ]]; then\n                return 1\n            fi\n            direction=\"\
    decreasing\"\n        elif [[ $i -gt $last ]]; then\n            if [[ $direction\
    \ == \"decreasing\" ]]; then\n                return 1\n            fi\n     \
    \       direction=\"increasing\"\n        fi\n        last=$i\n    done\n    return\
    \ 0", "    local list=\"$1\"\n    local incr=0\n    local decr=0\n    local prev=0\n\
    \    local curr=0\n    for i in $list; do\n        curr=$i\n        if [ $prev\
    \ -gt $curr ]; then\n            decr=1\n        elif [ $prev -lt $curr ]; then\n\
    \            incr=1\n        fi\n        if [ $incr -eq 1 -a $decr -eq 1 ]; then\n\
    \            return 1\n        fi\n        prev=$curr\n    done\n    return 0",
  "  local list=\"$1\"\n  local last=\n  local curr=\n  local increasing=\n  local\
    \ decreasing=\n  for curr in $list; do\n    if [[ -n \"$last\" ]]; then\n    \
    \  if [[ $curr -gt $last ]]; then\n        increasing=1\n      elif [[ $curr -lt\
    \ $last ]]; then\n        decreasing=1\n      fi\n    fi\n    last=$curr\n  done\n\
    \  [[ -n \"$increasing\" && -n \"$decreasing\" ]] && return 1\n  return 0", " \
    \   local list=\"$1\"\n    local i\n    local prev=0\n    local curr=0\n    local\
    \ incr=0\n    for i in $list; do\n        curr=$i\n        if [ $prev -ne 0 ];\
    \ then\n            if [ $incr -eq 0 ]; then\n                if [ $prev -gt $curr\
    \ ]; then\n                    incr=-1\n                elif [ $prev -lt $curr\
    \ ]; then\n                    incr=1\n                fi\n            elif [\
    \ $incr -eq 1 ]; then\n                if [ $prev -gt $curr ]; then\n        \
    \            return 1\n                fi\n            elif [ $incr -eq -1 ];\
    \ then\n                if [ $prev -lt $curr ]; then\n                    return\
    \ 1\n                fi\n            fi\n        fi\n        prev=$curr\n    done\n\
    \    return 0", "\tlocal list=\"$1\"\n\tlocal direction=\"$2\"\n\tlocal last=\"\
    \"\n\tlocal current=\"\"\n\tlocal result=0\n\tfor current in $list; do\n\t\tif\
    \ [[ -n \"$last\" ]]; then\n\t\t\tif [[ \"$direction\" == \"increasing\" ]]; then\n\
    \t\t\t\tif [[ \"$current\" -lt \"$last\" ]]; then\n\t\t\t\t\tresult=1\n\t\t\t\t\
    \tbreak\n\t\t\t\tfi\n\t\t\telif [[ \"$direction\" == \"decreasing\" ]]; then\n\
    \t\t\t\tif [[ \"$current\" -gt \"$last\" ]]; then\n\t\t\t\t\tresult=1\n\t\t\t\t\
    \tbreak\n\t\t\t\tfi\n\t\t\tfi\n\t\tfi\n\t\tlast=\"$current\"\n\tdone\n\treturn\
    \ $result", "\tlocal -a list=($1)\n\tlocal -i i=0\n\tlocal -i len=${#list[@]}\n\
    \tlocal -i incr=0\n\tlocal -i decr=0\n\tlocal -i prev=${list[0]}\n\tlocal -i curr=0\n\
    \n\tfor ((i=1; i<len; i++)); do\n\t\tcurr=${list[i]}\n\t\tif ((curr > prev));\
    \ then\n\t\t\tincr=1\n\t\telif ((curr < prev)); then\n\t\t\tdecr=1\n\t\tfi\n\t\
    \tprev=$curr\n\tdone\n\n\t((incr + decr == 1))", "    local list=\"$1\"\n    local\
    \ direction=\"$2\"\n    local prev=$(echo \"$list\" | head -n 1)\n    local curr\n\
    \    for curr in $list; do\n        if [[ $direction == \"increasing\" ]]; then\n\
    \            if [[ $curr -lt $prev ]]; then\n                return 1\n      \
    \      fi\n        else\n            if [[ $curr -gt $prev ]]; then\n        \
    \        return 1\n            fi\n        fi\n        prev=$curr\n    done\n\
    \    return 0", "    local list=\"$1\"\n    local direction=\"$2\"\n    local\
    \ last_value=\"$(echo \"$list\" | head -n 1)\"\n    local current_value\n    local\
    \ result=0\n    for current_value in $list; do\n        if [[ \"$direction\" ==\
    \ \"increasing\" ]]; then\n            if [[ \"$current_value\" -lt \"$last_value\"\
    \ ]]; then\n                result=1\n                break\n            fi\n\
    \        else\n            if [[ \"$current_value\" -gt \"$last_value\" ]]; then\n\
    \                result=1\n                break\n            fi\n        fi\n\
    \        last_value=\"$current_value\"\n    done\n    return $result", "    local\
    \ list=\"$1\"\n    local decreasing=0\n    local increasing=0\n    local prev=0\n\
    \    local curr=0\n    for i in $list; do\n        curr=$i\n        if [ $curr\
    \ -lt $prev ]; then\n            decreasing=1\n        elif [ $curr -gt $prev\
    \ ]; then\n            increasing=1\n        fi\n        if [ $decreasing -eq\
    \ 1 -a $increasing -eq 1 ]; then\n            return 1\n        fi\n        prev=$curr\n\
    \    done\n    return 0", "    local -a list=($1)\n    local -i i=0\n    local\
    \ -i n=${#list[@]}\n    local -i increasing=0\n    local -i decreasing=0\n   \
    \ local -i equal=0\n    local -i result=0\n    local -i last=0\n    local -i current=0\n\
    \n    if [ $n -le 1 ]; then\n        return 0\n    fi\n\n    last=${list[0]}\n\
    \    for ((i=1; i<n; i++)); do\n        current=${list[i]}\n        if [ $current\
    \ -gt $last ]; then\n            increasing=1\n        elif [ $current -lt $last\
    \ ]; then\n            decreasing=1\n        else\n            equal=1\n     \
    \   fi\n        last=$current\n    done\n\n    if [ $increasing -eq 1 ] && [ $decreasing\
    \ -eq 0 ] && [ $equal -eq 0 ]; then\n        result=1\n    elif [ $increasing\
    \ -eq 0 ] && [ $decreasing -eq 1 ] && [ $equal -eq 0 ]; then\n        result=1\n\
    \    fi\n\n    return $result", "\tlocal list=\"$1\"\n\tlocal direction=\"$2\"\
    \n\tlocal prev=\n\tlocal curr=\n\tlocal result=0\n\tfor curr in $list; do\n\t\t\
    if [ -n \"$prev\" ]; then\n\t\t\tif [ \"$direction\" = \"increasing\" ]; then\n\
    \t\t\t\tif [ \"$curr\" -lt \"$prev\" ]; then\n\t\t\t\t\tresult=1\n\t\t\t\t\tbreak\n\
    \t\t\t\tfi\n\t\t\telse\n\t\t\t\tif [ \"$curr\" -gt \"$prev\" ]; then\n\t\t\t\t\
    \tresult=1\n\t\t\t\t\tbreak\n\t\t\t\tfi\n\t\t\tfi\n\t\tfi\n\t\tprev=\"$curr\"\n\
    \tdone\n\treturn $result", "    local list=\"$1\"\n    local direction=\"$2\"\n\
    \    local prev=\n    local curr=\n    local result=1\n    for curr in $list;\
    \ do\n        if [ -n \"$prev\" ]; then\n            if [ \"$direction\" = \"\
    increasing\" ]; then\n                if [ \"$curr\" -lt \"$prev\" ]; then\n \
    \                   result=0\n                    break\n                fi\n\
    \            else\n                if [ \"$curr\" -gt \"$prev\" ]; then\n    \
    \                result=0\n                    break\n                fi\n   \
    \         fi\n        fi\n        prev=\"$curr\"\n    done\n    return $result",
  "    local list=\"$1\"\n    local direction=\"$2\"\n    local prev=\n    local curr=\n\
    \    local result=0\n    for curr in $list; do\n        if [ -n \"$prev\" ]; then\n\
    \            if [ \"$direction\" = \"up\" ]; then\n                if [ \"$curr\"\
    \ -lt \"$prev\" ]; then\n                    result=1\n                    break\n\
    \                fi\n            else\n                if [ \"$curr\" -gt \"$prev\"\
    \ ]; then\n                    result=1\n                    break\n         \
    \       fi\n            fi\n        fi\n        prev=\"$curr\"\n    done\n   \
    \ return $result", "    local list=\"$1\"\n    local prev=\n    local curr=\n\
    \    local increasing=\n    for i in $list; do\n        if [ -z \"$prev\" ]; then\n\
    \            prev=$i\n            continue\n        fi\n        curr=$i\n    \
    \    if [ -z \"$increasing\" ]; then\n            if [ $prev -lt $curr ]; then\n\
    \                increasing=1\n            elif [ $prev -gt $curr ]; then\n  \
    \              increasing=0\n            fi\n        fi\n        if [ $increasing\
    \ -eq 1 ]; then\n            if [ $prev -gt $curr ]; then\n                return\
    \ 1\n            fi\n        else\n            if [ $prev -lt $curr ]; then\n\
    \                return 1\n            fi\n        fi\n        prev=$curr\n  \
    \  done\n    return 0", "    local -a list=($1)\n    local -a diffs\n    local\
    \ i\n    for ((i=0; i<${#list[@]}-1; i++)); do\n        diffs[i]=$((list[i+1]-list[i]))\n\
    \    done\n    local -a uniq_diffs=($(echo \"${diffs[@]}\" | tr ' ' '\\n' | sort\
    \ -u | tr '\\n' ' '))\n    if [[ ${#uniq_diffs[@]} -eq 1 ]]; then\n        return\
    \ 0\n    else\n        return 1\n    fi", "    local list=\"$1\"\n    local direction=\"\
    $2\"\n    local prev=0\n    local curr=0\n    local ret=0\n    for curr in $list;\
    \ do\n        if [ $prev -ne 0 ]; then\n            if [ $direction = \"increasing\"\
    \ ]; then\n                if [ $curr -lt $prev ]; then\n                    ret=1\n\
    \                    break\n                fi\n            else\n           \
    \     if [ $curr -gt $prev ]; then\n                    ret=1\n              \
    \      break\n                fi\n            fi\n        fi\n        prev=$curr\n\
    \    done\n    return $ret", "  local list=\"$1\"\n  local direction=\"$2\"\n\n\
    \  local prev_value=\n  local value=\n  for value in $list; do\n    if [[ -n \"\
    $prev_value\" ]]; then\n      if [[ \"$direction\" == \"increasing\" ]]; then\n\
    \        if [[ \"$value\" -lt \"$prev_value\" ]]; then\n          return 1\n \
    \       fi\n      else\n        if [[ \"$value\" -gt \"$prev_value\" ]]; then\n\
    \          return 1\n        fi\n      fi\n    fi\n    prev_value=\"$value\"\n\
    \  done\n  return 0", "    local list=\"$1\"\n    local direction=\"$2\"\n   \
    \ local prev=\n    local curr=\n    local result=1\n    for curr in $list; do\n\
    \        if [ -n \"$prev\" ]; then\n            if [ \"$direction\" = \"increasing\"\
    \ ]; then\n                if [ \"$curr\" -lt \"$prev\" ]; then\n            \
    \        result=0\n                    break\n                fi\n           \
    \ else\n                if [ \"$curr\" -gt \"$prev\" ]; then\n               \
    \     result=0\n                    break\n                fi\n            fi\n\
    \        fi\n        prev=\"$curr\"\n    done\n    echo $result", "  local list=\"\
    $1\"\n  local direction=\"$2\"\n  local prev=\n  local curr=\n  local result=0\n\
    \  for curr in $list; do\n    if [[ -n \"$prev\" ]]; then\n      if [[ \"$direction\"\
    \ == \"increasing\" ]]; then\n        if [[ \"$curr\" -lt \"$prev\" ]]; then\n\
    \          result=1\n          break\n        fi\n      else\n        if [[ \"\
    $curr\" -gt \"$prev\" ]]; then\n          result=1\n          break\n        fi\n\
    \      fi\n    fi\n    prev=\"$curr\"\n  done\n  return $result", "    local list=\"\
    $1\"\n    local direction=\"$2\"\n    local i\n    local prev=0\n    local curr=0\n\
    \    local result=0\n    local -a array\n    array=($list)\n    for ((i=0; i<${#array[@]};\
    \ i++)); do\n        curr=${array[$i]}\n        if [ $i -gt 0 ]; then\n      \
    \      if [ $direction == \"increasing\" ]; then\n                if [ $curr -lt\
    \ $prev ]; then\n                    result=1\n                    break\n   \
    \             fi\n            elif [ $direction == \"decreasing\" ]; then\n  \
    \              if [ $curr -gt $prev ]; then\n                    result=1\n  \
    \                  break\n                fi\n            fi\n        fi\n   \
    \     prev=$curr\n    done\n    return $result", "    local list=\"$1\"\n    local\
    \ first=\n    local last=\n    local increasing=\n    local decreasing=\n    local\
    \ i=\n    local n=\n    local -a a=()\n\n    # split list into array\n    IFS=\"\
    \ \" read -r -a a <<< \"$list\"\n\n    # get number of elements\n    n=${#a[@]}\n\
    \n    # check if list is empty\n    if [ $n -eq 0 ]; then\n        return 0\n\
    \    fi\n\n    # get first element\n    first=${a[0]}\n\n    # get last element\n\
    \    last=${a[$((n-1))]}\n\n    # check if list is monotonically increasing\n\
    \    increasing=1\n    for ((i=1; i<n; i++)); do\n        if [ ${a[$i]} -lt ${a[$((i-1))]}\
    \ ]; then\n            increasing=0\n            break\n        fi\n    done\n\
    \n    # check if list is monotonically decreasing\n    decreasing=1\n    for ((i=1;\
    \ i<n; i++)); do\n        if [ ${a[$i]} -gt ${a[$((i-1))]} ]; then\n         \
    \   decreasing=0\n            break\n        fi\n    done\n\n    # return True\
    \ if list is monotonically increasing or decreasing\n    if [ $increasing -eq\
    \ 1 ] || [ $decreasing -eq 1 ]; then\n        return 0\n    else\n        return\
    \ 1\n    fi", "    local list=\"$1\"\n    local increasing=1\n    local decreasing=1\n\
    \    local prev=\n    local curr=\n    for curr in $list; do\n        if [ -n\
    \ \"$prev\" ]; then\n            if [ \"$curr\" -gt \"$prev\" ]; then\n      \
    \          decreasing=0\n            elif [ \"$curr\" -lt \"$prev\" ]; then\n\
    \                increasing=0\n            fi\n        fi\n        prev=\"$curr\"\
    \n    done\n    [ \"$increasing\" -eq 1 ] || [ \"$decreasing\" -eq 1 ]", "   \
    \ local list=\"$1\"\n    local increasing=1\n    local decreasing=1\n    local\
    \ prev=0\n    local curr=0\n    for i in $list; do\n        curr=$i\n        if\
    \ [ $curr -lt $prev ]; then\n            increasing=0\n        fi\n        if\
    \ [ $curr -gt $prev ]; then\n            decreasing=0\n        fi\n        prev=$curr\n\
    \    done\n    [ $increasing -eq 1 ] || [ $decreasing -eq 1 ]", "    local list=\"\
    $1\"\n    local -i i\n    local -i n=$(echo \"$list\" | wc -w)\n    local -i increasing=1\n\
    \    local -i decreasing=1\n    local -i prev\n    local -i curr\n\n    for ((i=1;\
    \ i<=n; i++)); do\n        curr=$(echo \"$list\" | cut -d' ' -f$i)\n        if\
    \ ((i > 1)); then\n            if ((curr > prev)); then\n                decreasing=0\n\
    \            elif ((curr < prev)); then\n                increasing=0\n      \
    \      fi\n        fi\n        prev=$curr\n    done\n\n    ((increasing || decreasing))",
  "    local list=\"$1\"\n    local inc=0\n    local dec=0\n    local prev=0\n   \
    \ local curr=0\n    for i in $list; do\n        curr=$i\n        if [ $prev -gt\
    \ $curr ]; then\n            dec=1\n        elif [ $prev -lt $curr ]; then\n \
    \           inc=1\n        fi\n        if [ $inc -eq 1 -a $dec -eq 1 ]; then\n\
    \            return 1\n        fi\n        prev=$curr\n    done\n    return 0",
  "    local list=\"$1\"\n    local i\n    local -a arr\n    local -a diffs\n    local\
    \ -a absdiffs\n    local -a absdiff_sums\n    local -a absdiff_sums_sorted\n \
    \   local -a absdiff_sums_sorted_uniq\n    local -a absdiff_sums_sorted_uniq_counts\n\
    \    local -a absdiff_sums_sorted_uniq_counts_sorted\n    local -a absdiff_sums_sorted_uniq_counts_sorted_uniq\n\
    \    local -a absdiff_sums_sorted_uniq_counts_sorted_uniq_counts\n    local -a\
    \ absdiff_sums_sorted_uniq_counts_sorted_uniq_counts_sorted\n    local -a absdiff_sums_sorted_uniq_counts_sorted_uniq_counts_sorted_uniq\n\
    \    local -a absdiff_sums_sorted_uniq_counts_sorted_uniq_counts_sorted_uniq_counts\n\
    \    local -a absdiff_sums_sorted_uniq_counts_sorted_uniq_counts_sorted_uniq_counts_sorted\n\
    \    local -a absdiff_sums_sorted_uniq_counts_sorted_uniq_counts_sorted_uniq_counts_sorted_uniq\n\
    \    local -a absdiff_sums_sorted_uniq_counts_sorted_uniq_counts_sorted_uniq_counts_sorted_uniq_counts\n\
    \    local -a absdiff_sums_sorted_uniq_counts_sorted_uniq_counts_sorted_uniq_counts_sorted_uniq_counts_sorted\n\
    \    local -a absdiff_sums_sorted_uniq_counts_sorted_uniq_counts_sorted_uniq_counts_sorted_uniq_counts_sorted_uniq\n\
    \    local -a absdiff_sums_sorted_", "    local -a a=($1)\n    local -a b=($1)\n\
    \    local -a c=($1)\n    local -a d=($1)\n    local -a e=($1)\n    local -a f=($1)\n\
    \    local -a g=($1)\n    local -a h=($1)\n    local -a i=($1)\n    local -a j=($1)\n\
    \    local -a k=($1)\n    local -a l=($1)\n    local -a m=($1)\n    local -a n=($1)\n\
    \    local -a o=($1)\n    local -a p=($1)\n    local -a q=($1)\n    local -a r=($1)\n\
    \    local -a s=($1)\n    local -a t=($1)\n    local -a u=($1)\n    local -a v=($1)\n\
    \    local -a w=($1)\n    local -a x=($1)\n    local -a y=($1)\n    local -a z=($1)\n\
    \    local -a aa=($1)\n    local -a bb=($1)\n    local -a cc=($1)\n    local -a\
    \ dd=($1)\n    local -a ee=($1)\n    local -a ff=($1)\n    local -a gg=($1)\n\
    \    local -a hh=($1)\n    local -a ii=($1)\n    local -a jj=($1)\n    local -a\
    \ kk=($1)\n    local -a ll=($1)\n    local -a mm=($1)\n    local -a nn=($1)\n\
    \    local -a oo=($1)\n    local -a pp=($1)\n    local -a qq=($1)\n    local -a\
    \ rr=($1)\n    local -a ss=($1)\n    local -a tt=($1)\n    local -a uu=($1)\n\
    \    local -a vv=($1)\n    local -a ww=($1)\n    local -a xx=(", "    local list=\"\
    $1\"\n    local direction=\"$2\"\n    local prev=0\n    local curr=0\n    local\
    \ result=1\n    for i in $list; do\n        curr=$i\n        if [[ $curr -eq $prev\
    \ ]]; then\n            continue\n        fi\n        if [[ $direction == \"increasing\"\
    \ ]]; then\n            if [[ $curr -lt $prev ]]; then\n                result=0\n\
    \                break\n            fi\n        elif [[ $direction == \"decreasing\"\
    \ ]]; then\n            if [[ $curr -gt $prev ]]; then\n                result=0\n\
    \                break\n            fi\n        else\n            echo \"ERROR:\
    \ unknown direction $direction\"\n            exit 1\n        fi\n        prev=$curr\n\
    \    done\n    return $result", "  local list=\"$1\"\n  local prev=\n  local curr=\n\
    \  local increasing=\n  local decreasing=\n  for curr in $list; do\n    if [[\
    \ -n \"$prev\" ]]; then\n      if [[ $curr -gt $prev ]]; then\n        increasing=1\n\
    \      elif [[ $curr -lt $prev ]]; then\n        decreasing=1\n      fi\n    fi\n\
    \    prev=$curr\n  done\n  [[ -n \"$increasing\" && -n \"$decreasing\" ]] && return\
    \ 1\n  return 0", "  local -a list=($1)\n  local -i i=0\n  local -i len=${#list[@]}\n\
    \  local -i increasing=0\n  local -i decreasing=0\n  local -i equal=0\n  local\
    \ -i first=0\n  local -i second=0\n  local -i third=0\n  local -i fourth=0\n \
    \ local -i fifth=0\n  local -i sixth=0\n  local -i seventh=0\n  local -i eighth=0\n\
    \  local -i ninth=0\n  local -i tenth=0\n  local -i eleventh=0\n  local -i twelfth=0\n\
    \  local -i thirteenth=0\n  local -i fourteenth=0\n  local -i fifteenth=0\n  local\
    \ -i sixteenth=0\n  local -i seventeenth=0\n  local -i eighteenth=0\n  local -i\
    \ nineteenth=0\n  local -i twentieth=0\n  local -i twentyfirst=0\n  local -i twentysecond=0\n\
    \  local -i twentythird=0\n  local -i twentyfourth=0\n  local -i twentyfifth=0\n\
    \  local -i twentysixth=0\n  local -i twentyseventh=0\n  local -i twentyeighth=0\n\
    \  local -i twentyninth=0\n  local -i thirtieth=0\n  local -i thirtyfirst=0\n\
    \  local -i thirtysecond=0\n  local -i thirtythird=0\n  local -i thirtyfourth=0\n\
    \  local -i thirtyfifth=0\n  local -i thirtysixth=0\n  local -i thirtyseventh=0\n\
    \  local -i thirtyeighth=0\n  local -i thirtyninth=0\n  local -i fortieth=0\n\
    \  local -i fortyfirst=0\n  local -i fortysecond=0\n  local -i fortythird=0\n\
    \  local -i fortyfourth=0\n  local -i fortyfifth=0\n  local -i fortysixth=0\n\
    \  local -i fortyseventh=0\n  local -i fortyeighth=0\n  local -i fortyninth=0\n\
    \  local -i fiftieth=0\n  local -", "    local list=\"$1\"\n    local last=\n\
    \    local first=\n    local direction=\n    local i=\n    for i in $list; do\n\
    \        if [ -z \"$first\" ]; then\n            first=$i\n            last=$i\n\
    \            continue\n        fi\n        if [ -z \"$direction\" ]; then\n  \
    \          if [ $i -gt $last ]; then\n                direction=\"ascending\"\n\
    \            elif [ $i -lt $last ]; then\n                direction=\"descending\"\
    \n            fi\n        fi\n        if [ \"$direction\" = \"ascending\" ]; then\n\
    \            if [ $i -lt $last ]; then\n                return 1\n           \
    \ fi\n        elif [ \"$direction\" = \"descending\" ]; then\n            if [\
    \ $i -gt $last ]; then\n                return 1\n            fi\n        fi\n\
    \        last=$i\n    done\n    return 0", "    local list=\"$1\"\n    local direction=\"\
    $2\"\n    local last=\n    local current=\n    for current in $list; do\n    \
    \    if [[ -n \"$last\" ]]; then\n            if [[ \"$direction\" == \"inc\"\
    \ ]]; then\n                if (( current < last )); then\n                  \
    \  return 1\n                fi\n            else\n                if (( current\
    \ > last )); then\n                    return 1\n                fi\n        \
    \    fi\n        fi\n        last=\"$current\"\n    done\n    return 0", "   \
    \ local list=\"$1\"\n    local prev=\n    local curr=\n    local increasing=\n\
    \    local decreasing=\n    for curr in $list; do\n        if [[ -n \"$prev\"\
    \ ]]; then\n            if [[ \"$curr\" -gt \"$prev\" ]]; then\n             \
    \   increasing=1\n            elif [[ \"$curr\" -lt \"$prev\" ]]; then\n     \
    \           decreasing=1\n            fi\n        fi\n        prev=\"$curr\"\n\
    \    done\n    if [[ -n \"$increasing\" && -n \"$decreasing\" ]]; then\n     \
    \   return 1\n    fi\n    return 0", "    local -a list=($1)\n    local -i len=${#list[@]}\n\
    \    local -i i\n\n    if (( len < 2 )); then\n        return 0\n    fi\n\n  \
    \  if (( list[1] > list[0] )); then\n        for (( i=1; i < len; i++ )); do\n\
    \            if (( list[i] < list[i-1] )); then\n                return 1\n  \
    \          fi\n        done\n    else\n        for (( i=1; i < len; i++ )); do\n\
    \            if (( list[i] > list[i-1] )); then\n                return 1\n  \
    \          fi\n        done\n    fi\n\n    return 0", "    local -a list=($1)\n\
    \    local -a diffs\n    local i\n    local diff\n    local prev_diff\n    local\
    \ result=true\n\n    # Compute differences between elements\n    for ((i=1; i<${#list[@]};\
    \ i++)); do\n        diffs[i-1]=$((list[i] - list[i-1]))\n    done\n\n    # Check\
    \ that all differences are the same\n    prev_diff=${diffs[0]}\n    for diff in\
    \ ${diffs[@]}; do\n        if [[ $diff -ne $prev_diff ]]; then\n            result=false\n\
    \            break\n        fi\n        prev_diff=$diff\n    done\n\n    echo\
    \ $result", "    local list=\"$1\"\n    local increasing=1\n    local decreasing=1\n\
    \    local prev=0\n    local curr=0\n    for i in $list; do\n        if [ $prev\
    \ -eq 0 ]; then\n            prev=$i\n            continue\n        fi\n     \
    \   curr=$i\n        if [ $prev -gt $curr ]; then\n            increasing=0\n\
    \        fi\n        if [ $prev -lt $curr ]; then\n            decreasing=0\n\
    \        fi\n        prev=$curr\n    done\n    if [ $increasing -eq 1 ] || [ $decreasing\
    \ -eq 1 ]; then\n        return 0\n    else\n        return 1\n    fi", "    local\
    \ list=\"$1\"\n    local direction=\"$2\"\n    local prev=\n    local curr=\n\
    \    for curr in $list; do\n        if [[ -n \"$prev\" ]]; then\n            if\
    \ [[ \"$direction\" == \"increasing\" ]]; then\n                if [[ \"$curr\"\
    \ -lt \"$prev\" ]]; then\n                    return 1\n                fi\n \
    \           else\n                if [[ \"$curr\" -gt \"$prev\" ]]; then\n   \
    \                 return 1\n                fi\n            fi\n        fi\n \
    \       prev=\"$curr\"\n    done\n    return 0", "    local list=\"$1\"\n    local\
    \ direction=\"$2\"\n    local prev=0\n    local curr=0\n    local ret=0\n    for\
    \ i in $list; do\n        curr=$i\n        if [ $prev -ne 0 ]; then\n        \
    \    if [ $direction = \"inc\" ]; then\n                if [ $curr -lt $prev ];\
    \ then\n                    ret=1\n                    break\n               \
    \ fi\n            else\n                if [ $curr -gt $prev ]; then\n       \
    \             ret=1\n                    break\n                fi\n         \
    \   fi\n        fi\n        prev=$curr\n    done\n    return $ret", "    local\
    \ -a arr=(\"$@\")\n    local -i i=0\n    local -i len=${#arr[@]}\n    local -i\
    \ inc=0\n    local -i dec=0\n    local -i ret=0\n\n    if [ $len -lt 2 ]; then\n\
    \        return 0\n    fi\n\n    for ((i=0; i<len-1; i++)); do\n        if [ ${arr[$i]}\
    \ -lt ${arr[$i+1]} ]; then\n            inc=1\n        elif [ ${arr[$i]} -gt ${arr[$i+1]}\
    \ ]; then\n            dec=1\n        fi\n    done\n\n    if [ $inc -eq 1 -a $dec\
    \ -eq 1 ]; then\n        ret=1\n    fi\n\n    return $ret", "  local list=\"$1\"\
    \n  local increasing=1\n  local decreasing=1\n  local last=\n  for i in $list;\
    \ do\n    if [[ -n \"$last\" ]]; then\n      if (( i > last )); then\n       \
    \ decreasing=0\n      elif (( i < last )); then\n        increasing=0\n      fi\n\
    \    fi\n    last=$i\n  done\n  (( increasing || decreasing ))", "    local list=\"\
    $1\"\n    local i=0\n    local prev=0\n    local increasing=0\n    local decreasing=0\n\
    \    for i in $list; do\n        if [ $i -gt $prev ]; then\n            increasing=1\n\
    \        elif [ $i -lt $prev ]; then\n            decreasing=1\n        fi\n \
    \       if [ $increasing -eq 1 -a $decreasing -eq 1 ]; then\n            return\
    \ 1\n        fi\n        prev=$i\n    done\n    return 0", "    local list=\"\
    $1\"\n    local direction=\"$2\"\n    local prev=0\n    local curr=0\n    local\
    \ result=0\n    for curr in $list; do\n        if [ $curr -eq $prev ]; then\n\
    \            continue\n        fi\n        if [ $curr -lt $prev ]; then\n    \
    \        if [ \"$direction\" == \"increasing\" ]; then\n                result=1\n\
    \                break\n            fi\n        else\n            if [ \"$direction\"\
    \ == \"decreasing\" ]; then\n                result=1\n                break\n\
    \            fi\n        fi\n        prev=$curr\n    done\n    return $result",
  "    local list=\"$1\"\n    local increasing=0\n    local decreasing=0\n    local\
    \ prev=0\n    local curr=0\n    for i in $list; do\n        curr=$i\n        if\
    \ [ $curr -gt $prev ]; then\n            increasing=1\n        elif [ $curr -lt\
    \ $prev ]; then\n            decreasing=1\n        fi\n        if [ $increasing\
    \ -eq 1 -a $decreasing -eq 1 ]; then\n            return 1\n        fi\n     \
    \   prev=$curr\n    done\n    return 0", "    local list=\"$1\"\n    local direction=\"\
    $2\"\n    local prev=$(echo \"$list\" | head -n 1)\n    local curr\n    for curr\
    \ in $list; do\n        if [[ \"$direction\" == \"increasing\" ]]; then\n    \
    \        if [[ \"$curr\" -lt \"$prev\" ]]; then\n                return 1\n  \
    \          fi\n        else\n            if [[ \"$curr\" -gt \"$prev\" ]]; then\n\
    \                return 1\n            fi\n        fi\n        prev=$curr\n  \
    \  done\n    return 0", "    local list=\"$1\"\n    local i=0\n    local prev=0\n\
    \    local increasing=0\n    local decreasing=0\n    for i in $list; do\n    \
    \    if [ $i -gt $prev ]; then\n            increasing=1\n        elif [ $i -lt\
    \ $prev ]; then\n            decreasing=1\n        fi\n        if [ $increasing\
    \ -eq 1 -a $decreasing -eq 1 ]; then\n            return 1\n        fi\n     \
    \   prev=$i\n    done\n    return 0", "    local list=\"$1\"\n    local direction=\"\
    $2\"\n    local prev=0\n    local curr=0\n    local result=0\n    for curr in\
    \ $list; do\n        if [[ $prev -ne 0 ]]; then\n            if [[ $direction\
    \ == \"increasing\" ]]; then\n                if [[ $curr -lt $prev ]]; then\n\
    \                    result=1\n                    break\n                fi\n\
    \            else\n                if [[ $curr -gt $prev ]]; then\n          \
    \          result=1\n                    break\n                fi\n         \
    \   fi\n        fi\n        prev=$curr\n    done\n    return $result", "    local\
    \ list=\"$1\"\n    local direction=0\n    local last=0\n    local current=0\n\
    \    for i in $list; do\n        current=$i\n        if [ $direction -eq 0 ];\
    \ then\n            if [ $current -gt $last ]; then\n                direction=1\n\
    \            elif [ $current -lt $last ]; then\n                direction=-1\n\
    \            fi\n        elif [ $direction -eq 1 ]; then\n            if [ $current\
    \ -lt $last ]; then\n                return 1\n            fi\n        elif [\
    \ $direction -eq -1 ]; then\n            if [ $current -gt $last ]; then\n   \
    \             return 1\n            fi\n        fi\n        last=$current\n  \
    \  done\n    return 0", "    local list=$1\n    local -i i\n    local -i n=0\n\
    \    local -i inc=0\n    local -i dec=0\n    local -i prev=0\n    local -i curr=0\n\
    \    local -i first=1\n    for i in $list; do\n        ((n++))\n        if ((first));\
    \ then\n            ((first=0))\n            ((prev=i))\n            continue\n\
    \        fi\n        ((curr=i))\n        if ((curr > prev)); then\n          \
    \  ((inc++))\n        elif ((curr < prev)); then\n            ((dec++))\n    \
    \    fi\n        ((prev=curr))\n    done\n    ((inc==n-1 || dec==n-1))", "   \
    \ local list=\"$1\"\n    local direction=\"$2\"\n    local prev=\"$(echo \"$list\"\
    \ | head -n 1)\"\n    local curr=\"\"\n    local result=0\n    for curr in $list;\
    \ do\n        if [[ \"$direction\" == \"increasing\" ]]; then\n            if\
    \ [[ \"$curr\" -lt \"$prev\" ]]; then\n                result=1\n            \
    \    break\n            fi\n        elif [[ \"$direction\" == \"decreasing\" ]];\
    \ then\n            if [[ \"$curr\" -gt \"$prev\" ]]; then\n                result=1\n\
    \                break\n            fi\n        else\n            echo \"monotonic:\
    \ unknown direction '$direction'\" >&2\n            exit 1\n        fi\n     \
    \   prev=\"$curr\"\n    done\n    return $result", "    local list=\"$1\"\n  \
    \  local prev=\n    local curr=\n    local increasing=\n    for curr in $list;\
    \ do\n        if [ -n \"$prev\" ]; then\n            if [ \"$prev\" -eq \"$curr\"\
    \ ]; then\n                continue\n            fi\n            if [ -z \"$increasing\"\
    \ ]; then\n                if [ \"$prev\" -lt \"$curr\" ]; then\n            \
    \        increasing=true\n                else\n                    increasing=false\n\
    \                fi\n            fi\n            if [ \"$increasing\" = true ];\
    \ then\n                if [ \"$prev\" -gt \"$curr\" ]; then\n               \
    \     return 1\n                fi\n            else\n                if [ \"\
    $prev\" -lt \"$curr\" ]; then\n                    return 1\n                fi\n\
    \            fi\n        fi\n        prev=\"$curr\"\n    done\n    return 0",
  "    local list=\"$1\"\n    local direction=\"$2\"\n    local -a array=($list)\n\
    \    local -i i=0\n    local -i len=${#array[@]}\n    local -i result=1\n    if\
    \ [ \"$direction\" = \"decreasing\" ]; then\n        for ((i=0; i<len-1; i++));\
    \ do\n            if [ ${array[$i]} -lt ${array[$((i+1))]} ]; then\n         \
    \       result=0\n                break\n            fi\n        done\n    else\n\
    \        for ((i=0; i<len-1; i++)); do\n            if [ ${array[$i]} -gt ${array[$((i+1))]}\
    \ ]; then\n                result=0\n                break\n            fi\n \
    \       done\n    fi\n    return $result", "    local list=\"$1\"\n    local direction=\"\
    $2\"\n    local prev=\"$(echo \"$list\" | head -n 1)\"\n    local curr\n    for\
    \ curr in $list; do\n        if [[ \"$direction\" == \"increasing\" ]]; then\n\
    \            if (( prev > curr )); then\n                return 1\n          \
    \  fi\n        else\n            if (( prev < curr )); then\n                return\
    \ 1\n            fi\n        fi\n        prev=\"$curr\"\n    done\n    return\
    \ 0", "    local list=\"$1\"\n    local direction=\"$2\"\n    local prev=\n  \
    \  local curr=\n    local result=1\n    for curr in $list; do\n        if [ -n\
    \ \"$prev\" ]; then\n            if [ \"$direction\" = \"increasing\" ]; then\n\
    \                if [ \"$curr\" -lt \"$prev\" ]; then\n                    result=0\n\
    \                    break\n                fi\n            else\n           \
    \     if [ \"$curr\" -gt \"$prev\" ]; then\n                    result=0\n   \
    \                 break\n                fi\n            fi\n        fi\n    \
    \    prev=\"$curr\"\n    done\n    return $result", "    local list=\"$1\"\n \
    \   local direction=\"$2\"\n    local prev=0\n    local curr=0\n    local result=0\n\
    \    for i in $list; do\n        curr=$i\n        if [ $curr -gt $prev ]; then\n\
    \            if [ $direction -eq 0 ]; then\n                direction=1\n    \
    \        elif [ $direction -ne 1 ]; then\n                result=1\n         \
    \       break\n            fi\n        elif [ $curr -lt $prev ]; then\n      \
    \      if [ $direction -eq 0 ]; then\n                direction=-1\n         \
    \   elif [ $direction -ne -1 ]; then\n                result=1\n             \
    \   break\n            fi\n        fi\n        prev=$curr\n    done\n    return\
    \ $result", "    local list=\"$1\"\n    local increasing=true\n    local decreasing=true\n\
    \    local prev=\n    local curr=\n    for curr in $list; do\n        if [ -n\
    \ \"$prev\" ]; then\n            if [ \"$prev\" -lt \"$curr\" ]; then\n      \
    \          decreasing=false\n            elif [ \"$prev\" -gt \"$curr\" ]; then\n\
    \                increasing=false\n            fi\n        fi\n        prev=\"\
    $curr\"\n    done\n    [ \"$increasing\" = true ] || [ \"$decreasing\" = true\
    \ ]", "    local list=\"$1\"\n    local prev=0\n    local curr=0\n    local increasing=1\n\
    \    local decreasing=1\n    for i in $list; do\n        if [ $i -lt $prev ];\
    \ then\n            increasing=0\n        fi\n        if [ $i -gt $prev ]; then\n\
    \            decreasing=0\n        fi\n        prev=$i\n    done\n    if [ $increasing\
    \ -eq 1 ] || [ $decreasing -eq 1 ]; then\n        return 0\n    else\n       \
    \ return 1\n    fi", "    local list=\"$1\"\n    local increasing=true\n    local\
    \ decreasing=true\n    local prev=0\n    local curr=0\n    for i in $list; do\n\
    \        curr=$i\n        if [ $curr -lt $prev ]; then\n            increasing=false\n\
    \        fi\n        if [ $curr -gt $prev ]; then\n            decreasing=false\n\
    \        fi\n        prev=$curr\n    done\n    if [ $increasing = true ] || [\
    \ $decreasing = true ]; then\n        echo true\n    else\n        echo false\n\
    \    fi", "    local list=\"$1\"\n    local direction=\"$2\"\n    local last=\"\
    $(echo \"$list\" | head -n 1)\"\n    local current\n    for current in $list;\
    \ do\n        if [[ \"$direction\" == \"increasing\" ]]; then\n            if\
    \ [[ \"$current\" -lt \"$last\" ]]; then\n                return 1\n         \
    \   fi\n        else\n            if [[ \"$current\" -gt \"$last\" ]]; then\n\
    \                return 1\n            fi\n        fi\n        last=\"$current\"\
    \n    done\n    return 0", "    local list=($1)\n    local i=0\n    local inc=0\n\
    \    local dec=0\n    local len=${#list[@]}\n    local prev=${list[0]}\n    for\
    \ ((i=1; i<len; i++)); do\n        if [[ ${list[i]} -gt $prev ]]; then\n     \
    \       inc=1\n        elif [[ ${list[i]} -lt $prev ]]; then\n            dec=1\n\
    \        fi\n        prev=${list[i]}\n    done\n    [[ $inc -eq 1 && $dec -eq\
    \ 0 ]] || [[ $inc -eq 0 && $dec -eq 1 ]]", "    local list=\"$1\"\n    local inc=0\n\
    \    local dec=0\n    local prev=0\n    local curr=0\n    for i in $list; do\n\
    \        if [ $i -gt $prev ]; then\n            inc=1\n        elif [ $i -lt $prev\
    \ ]; then\n            dec=1\n        fi\n        prev=$i\n    done\n    if [\
    \ $inc -eq 1 -a $dec -eq 1 ]; then\n        return 1\n    else\n        return\
    \ 0\n    fi", "    local -a list=($1)\n    local -i i\n    local -i len=${#list[@]}\n\
    \    local -i prev=${list[0]}\n    local -i curr\n    local -i increasing=1\n\
    \    local -i decreasing=1\n    for ((i=1; i<len; i++)); do\n        curr=${list[i]}\n\
    \        if ((prev > curr)); then\n            increasing=0\n        elif ((prev\
    \ < curr)); then\n            decreasing=0\n        fi\n        prev=$curr\n \
    \   done\n    ((increasing || decreasing))", "    local list=$1\n    local increasing=1\n\
    \    local decreasing=1\n    local prev=\n    for x in $list; do\n        if [[\
    \ -n $prev ]]; then\n            if (( x > prev )); then\n                decreasing=0\n\
    \            elif (( x < prev )); then\n                increasing=0\n       \
    \     fi\n        fi\n        prev=$x\n    done\n    (( increasing || decreasing\
    \ ))", "    local list=\"$1\"\n    local increasing=1\n    local decreasing=1\n\
    \    local prev=\n    for i in $list; do\n        if [[ -n \"$prev\" ]]; then\n\
    \            if (( i > prev )); then\n                decreasing=0\n         \
    \   elif (( i < prev )); then\n                increasing=0\n            fi\n\
    \        fi\n        prev=$i\n    done\n    (( increasing || decreasing ))", " \
    \   local list=\"$1\"\n    local direction=\"$2\"\n    local prev=\n    local\
    \ curr=\n    local result=1\n    for curr in $list; do\n        if [ -n \"$prev\"\
    \ ]; then\n            if [ \"$direction\" = \"increasing\" ]; then\n        \
    \        if [ \"$curr\" -lt \"$prev\" ]; then\n                    result=0\n\
    \                    break\n                fi\n            else\n           \
    \     if [ \"$curr\" -gt \"$prev\" ]; then\n                    result=0\n   \
    \                 break\n                fi\n            fi\n        fi\n    \
    \    prev=\"$curr\"\n    done\n    return $result", "    local list=\"$1\"\n \
    \   local -a array\n    local -i i\n    local -i n\n    local -i incr\n    local\
    \ -i prev\n    local -i curr\n\n    # Convert list to array\n    array=( $list\
    \ )\n\n    # Determine if list is increasing or decreasing\n    incr=0\n    prev=${array[0]}\n\
    \    for (( i=1; i<${#array[@]}; i++ )); do\n        curr=${array[i]}\n      \
    \  if (( curr > prev )); then\n            incr=1\n            break\n       \
    \ elif (( curr < prev )); then\n            incr=0\n            break\n      \
    \  fi\n    done\n\n    # Check if list is monotonic\n    prev=${array[0]}\n  \
    \  for (( i=1; i<${#array[@]}; i++ )); do\n        curr=${array[i]}\n        if\
    \ (( incr && curr < prev )) || (( !incr && curr > prev )); then\n            return\
    \ 1\n        fi\n        prev=$curr\n    done\n\n    return 0", "  local -a list=($1)\n\
    \  local -i i\n  local -i n=${#list[@]}\n  local -i inc=0\n  local -i dec=0\n\
    \  local -i eq=0\n  local -i ret=0\n  for ((i=0; i<n-1; i++)); do\n    if (( list[i]\
    \ < list[i+1] )); then\n      (( inc++ ))\n    elif (( list[i] > list[i+1] ));\
    \ then\n      (( dec++ ))\n    else\n      (( eq++ ))\n    fi\n  done\n  if ((\
    \ inc == n-1 || dec == n-1 )); then\n    ret=1\n  fi\n  return $ret", "    local\
    \ list=\"$1\"\n    local increasing=1\n    local decreasing=1\n    local prev=\n\
    \    for i in $list; do\n        if [ -n \"$prev\" ]; then\n            if [ \"\
    $i\" -lt \"$prev\" ]; then\n                increasing=0\n            elif [ \"\
    $i\" -gt \"$prev\" ]; then\n                decreasing=0\n            fi\n   \
    \     fi\n        prev=\"$i\"\n    done\n    [ \"$increasing\" -eq 1 ] || [ \"\
    $decreasing\" -eq 1 ]", "    local list=\"$1\"\n    local direction=\"$2\"\n \
    \   local -a array\n    local i\n    local -i n=0\n\n    # Split the list into\
    \ an array\n    IFS=' ' read -r -a array <<< \"$list\"\n\n    # Check if the array\
    \ is monotonically increasing or decreasing\n    for ((i=1; i<${#array[@]}; i++));\
    \ do\n        if [[ \"$direction\" == \"increasing\" ]]; then\n            ((\
    \ array[i-1] <= array[i] )) || return 1\n        else\n            (( array[i-1]\
    \ >= array[i] )) || return 1\n        fi\n    done\n\n    return 0", "    local\
    \ list=\"$1\"\n    local inc=0\n    local dec=0\n    local prev=0\n    local curr=0\n\
    \    for i in $list; do\n        curr=$i\n        if [ $prev -gt $curr ]; then\n\
    \            dec=1\n        elif [ $prev -lt $curr ]; then\n            inc=1\n\
    \        fi\n        if [ $inc -eq 1 -a $dec -eq 1 ]; then\n            return\
    \ 1\n        fi\n        prev=$curr\n    done\n    return 0", "    local -a list=($1)\n\
    \    local -a diffs\n    local i\n    for ((i=0; i<${#list[@]}-1; i++)); do\n\
    \        diffs[i]=$((list[i+1]-list[i]))\n    done\n    [[ ${diffs[@]} =~ ^([+-]?[0-9]+\
    \ )*[+-]?[0-9]+$ ]]", "    local list=\"$1\"\n    local direction=\"$2\"\n   \
    \ local prev=\n    local curr=\n    local result=0\n\n    for curr in $list; do\n\
    \        if [ -n \"$prev\" ]; then\n            if [ \"$direction\" = \"increasing\"\
    \ ]; then\n                if [ \"$curr\" -lt \"$prev\" ]; then\n            \
    \        result=1\n                    break\n                fi\n           \
    \ else\n                if [ \"$curr\" -gt \"$prev\" ]; then\n               \
    \     result=1\n                    break\n                fi\n            fi\n\
    \        fi\n        prev=\"$curr\"\n    done\n    return $result", "    local\
    \ list=\"$1\"\n    local list_len=$(echo \"$list\" | wc -w)\n    local list_len_minus_one=$((list_len\
    \ - 1))\n    local i=0\n    local prev=0\n    local curr=0\n    local increasing=0\n\
    \    local decreasing=0\n    for i in $(seq 1 $list_len_minus_one); do\n     \
    \   prev=$(echo \"$list\" | cut -d ' ' -f $i)\n        curr=$(echo \"$list\" |\
    \ cut -d ' ' -f $((i + 1)))\n        if [ $prev -lt $curr ]; then\n          \
    \  increasing=1\n        elif [ $prev -gt $curr ]; then\n            decreasing=1\n\
    \        fi\n    done\n    if [ $increasing -eq 1 ] && [ $decreasing -eq 0 ];\
    \ then\n        echo \"True\"\n    elif [ $increasing -eq 0 ] && [ $decreasing\
    \ -eq 1 ]; then\n        echo \"True\"\n    else\n        echo \"False\"\n   \
    \ fi", "    local list=\"$1\"\n    local i=0\n    local prev=0\n    local curr=0\n\
    \    local incr=0\n    local decr=0\n    local monotonic=0\n    for i in $list;\
    \ do\n        if [ $i -eq $prev ]; then\n            continue\n        elif [\
    \ $i -gt $prev ]; then\n            incr=1\n            if [ $decr -eq 1 ]; then\n\
    \                monotonic=1\n                break\n            fi\n        elif\
    \ [ $i -lt $prev ]; then\n            decr=1\n            if [ $incr -eq 1 ];\
    \ then\n                monotonic=1\n                break\n            fi\n \
    \       fi\n        prev=$i\n    done\n    return $monotonic", "    local list=\"\
    $1\"\n    local inc=0\n    local dec=0\n    local prev=\n    local curr=\n   \
    \ for curr in $list; do\n        if [[ -n \"$prev\" ]]; then\n            (( inc\
    \ += curr > prev ))\n            (( dec += curr < prev ))\n        fi\n      \
    \  prev=$curr\n    done\n    (( inc > 0 && dec == 0 )) || (( inc == 0 && dec >\
    \ 0 ))", "    local list=\"$1\"\n    local direction=\"$2\"\n    local prev=\n\
    \    local cur=\n    local -i ret=0\n    for cur in $list; do\n        if [[ -n\
    \ \"$prev\" ]]; then\n            if [[ \"$direction\" == \"increasing\" ]]; then\n\
    \                (( $cur < $prev )) && ret=1 && break\n            else\n    \
    \            (( $cur > $prev )) && ret=1 && break\n            fi\n        fi\n\
    \        prev=$cur\n    done\n    return $ret", "    local list=\"$1\"\n    local\
    \ direction=\"$2\"\n    local prev=0\n    local current=0\n    local result=0\n\
    \    for i in $list; do\n        current=$i\n        if [ $prev -ne 0 ]; then\n\
    \            if [ $direction = \"increasing\" ]; then\n                if [ $current\
    \ -lt $prev ]; then\n                    result=1\n                    break\n\
    \                fi\n            else\n                if [ $current -gt $prev\
    \ ]; then\n                    result=1\n                    break\n         \
    \       fi\n            fi\n        fi\n        prev=$current\n    done\n    return\
    \ $result", "    local -a list=($1)\n    local -a diffs\n    local -i i\n    local\
    \ -i len=${#list[@]}\n    local -i increasing=1\n    local -i decreasing=1\n \
    \   local -i diff\n    for ((i=1; i<len; i++)); do\n        diff=${list[i]}-${list[i-1]}\n\
    \        diffs[i]=$diff\n        if ((diff < 0)); then\n            increasing=0\n\
    \        elif ((diff > 0)); then\n            decreasing=0\n        fi\n    done\n\
    \    if ((increasing || decreasing)); then\n        echo \"True\"\n    else\n\
    \        echo \"False\"\n    fi", "    local list=\"$1\"\n    local direction=\"\
    $2\"\n    local prev=$(echo \"$list\" | awk '{print $1}')\n    local curr\n  \
    \  for curr in $list; do\n        if [ \"$direction\" == \"increasing\" ]; then\n\
    \            if [ \"$curr\" -lt \"$prev\" ]; then\n                return 1\n\
    \            fi\n        else\n            if [ \"$curr\" -gt \"$prev\" ]; then\n\
    \                return 1\n            fi\n        fi\n        prev=$curr\n  \
    \  done\n    return 0", "    local list=\"$1\"\n    local increasing=1\n    local\
    \ decreasing=1\n    local prev=\n    for i in $list; do\n        if [ -n \"$prev\"\
    \ ]; then\n            if [ $i -lt $prev ]; then\n                increasing=0\n\
    \            elif [ $i -gt $prev ]; then\n                decreasing=0\n     \
    \       fi\n        fi\n        prev=$i\n    done\n    [ $increasing -eq 1 -o\
    \ $decreasing -eq 1 ]", "    local list=\"$1\"\n    local direction=\"$2\"\n \
    \   local prev=\n    local curr=\n    local result=0\n    for curr in $list; do\n\
    \        if [ -n \"$prev\" ]; then\n            if [ \"$direction\" = \"inc\"\
    \ ]; then\n                if [ \"$curr\" -lt \"$prev\" ]; then\n            \
    \        result=1\n                    break\n                fi\n           \
    \ else\n                if [ \"$curr\" -gt \"$prev\" ]; then\n               \
    \     result=1\n                    break\n                fi\n            fi\n\
    \        fi\n        prev=\"$curr\"\n    done\n    return $result", "    local\
    \ list=$1\n    local direction=$2\n    local last_value=\n    for value in $list;\
    \ do\n        if [[ -n $last_value ]]; then\n            if [[ $direction == \"\
    increasing\" ]]; then\n                if [[ $value -lt $last_value ]]; then\n\
    \                    return 1\n                fi\n            else\n        \
    \        if [[ $value -gt $last_value ]]; then\n                    return 1\n\
    \                fi\n            fi\n        fi\n        last_value=$value\n \
    \   done\n    return 0", "    local list=$1\n    local increasing=1\n    local\
    \ decreasing=1\n    local prev=0\n    local curr=0\n    for x in $list; do\n \
    \       curr=$x\n        if [ $curr -lt $prev ]; then\n            increasing=0\n\
    \        fi\n        if [ $curr -gt $prev ]; then\n            decreasing=0\n\
    \        fi\n        prev=$curr\n    done\n    [ $increasing -eq 1 -o $decreasing\
    \ -eq 1 ]", "  local list=$1\n  local direction=$2\n  local prev=$(echo \"$list\"\
    \ | head -n 1)\n  local curr\n  for curr in $list; do\n    if [[ $direction ==\
    \ \"increasing\" ]]; then\n      if [[ $curr -lt $prev ]]; then\n        return\
    \ 1\n      fi\n    else\n      if [[ $curr -gt $prev ]]; then\n        return\
    \ 1\n      fi\n    fi\n    prev=$curr\n  done\n  return 0", "    local list=\"\
    $1\"\n    local inc=0\n    local dec=0\n    local prev=0\n    for i in $list;\
    \ do\n        if [ $i -gt $prev ]; then\n            inc=1\n        elif [ $i\
    \ -lt $prev ]; then\n            dec=1\n        fi\n        if [ $inc -eq 1 -a\
    \ $dec -eq 1 ]; then\n            return 1\n        fi\n        prev=$i\n    done\n\
    \    return 0", "    local list=\"$1\"\n    local prev=0\n    local curr=0\n \
    \   local increasing=0\n    local decreasing=0\n    for i in $list; do\n     \
    \   curr=$i\n        if [ $prev -eq 0 ]; then\n            prev=$curr\n      \
    \      continue\n        fi\n        if [ $prev -lt $curr ]; then\n          \
    \  increasing=1\n        elif [ $prev -gt $curr ]; then\n            decreasing=1\n\
    \        fi\n        if [ $increasing -eq 1 -a $decreasing -eq 1 ]; then\n   \
    \         return 1\n        fi\n        prev=$curr\n    done\n    return 0", " \
    \   local list=\"$1\"\n    local prev=\n    local curr=\n    local increasing=\n\
    \    for curr in $list; do\n        if [ -n \"$prev\" ]; then\n            if\
    \ [ \"$prev\" -gt \"$curr\" ]; then\n                if [ -n \"$increasing\" ];\
    \ then\n                    return 1\n                fi\n                increasing=false\n\
    \            elif [ \"$prev\" -lt \"$curr\" ]; then\n                if [ -z \"\
    $increasing\" ]; then\n                    return 1\n                fi\n    \
    \            increasing=true\n            fi\n        fi\n        prev=\"$curr\"\
    \n    done\n    return 0", "    local list=\"$1\"\n    local inc=0\n    local\
    \ dec=0\n    local prev=0\n    local curr=0\n    for i in $list; do\n        curr=$i\n\
    \        if [ $curr -gt $prev ]; then\n            inc=1\n        elif [ $curr\
    \ -lt $prev ]; then\n            dec=1\n        fi\n        prev=$curr\n    done\n\
    \    if [ $inc -eq 1 -a $dec -eq 1 ]; then\n        return 1\n    else\n     \
    \   return 0\n    fi", "    local list=\"$1\"\n    local prev=\n    local curr=\n\
    \    local increasing=\n    local decreasing=\n    for curr in $list; do\n   \
    \     if [ -n \"$prev\" ]; then\n            if [ \"$prev\" -lt \"$curr\" ]; then\n\
    \                increasing=1\n            elif [ \"$prev\" -gt \"$curr\" ]; then\n\
    \                decreasing=1\n            fi\n        fi\n        prev=\"$curr\"\
    \n    done\n    if [ -n \"$increasing\" -a -n \"$decreasing\" ]; then\n      \
    \  return 1\n    fi\n    return 0", "    local list=($1)\n    local i\n    local\
    \ direction=0\n    local last=${list[0]}\n    for i in \"${list[@]:1}\"; do\n\
    \        if [[ $i -gt $last ]]; then\n            if [[ $direction -eq -1 ]];\
    \ then\n                return 1\n            fi\n            direction=1\n  \
    \      elif [[ $i -lt $last ]]; then\n            if [[ $direction -eq 1 ]]; then\n\
    \                return 1\n            fi\n            direction=-1\n        fi\n\
    \        last=$i\n    done\n    return 0", "    local list=\"$1\"\n    local increasing=1\n\
    \    local decreasing=1\n    local prev=0\n    local curr=0\n    for i in $list;\
    \ do\n        curr=$i\n        if [ $prev -gt $curr ]; then\n            increasing=0\n\
    \        fi\n        if [ $prev -lt $curr ]; then\n            decreasing=0\n\
    \        fi\n        prev=$curr\n    done\n    if [ $increasing -eq 1 ] || [ $decreasing\
    \ -eq 1 ]; then\n        return 0\n    else\n        return 1\n    fi", "    local\
    \ list=\"$1\"\n    local direction=\"$2\"\n    local prev=0\n    local curr=0\n\
    \    local result=0\n    for curr in $list; do\n        if [ $prev -eq 0 ]; then\n\
    \            prev=$curr\n            continue\n        fi\n        if [ $direction\
    \ == \"increasing\" ]; then\n            if [ $curr -lt $prev ]; then\n      \
    \          result=1\n                break\n            fi\n        else\n   \
    \         if [ $curr -gt $prev ]; then\n                result=1\n           \
    \     break\n            fi\n        fi\n        prev=$curr\n    done\n    return\
    \ $result", "    local list=\"$1\"\n    local direction=\"$2\"\n    local prev=0\n\
    \    local curr=0\n    local result=0\n    local -i i=0\n    local -i len=0\n\
    \    local -i ret=0\n\n    len=${#list}\n    if [ $len -le 1 ]; then\n       \
    \ return 0\n    fi\n\n    for i in $(seq 1 $len); do\n        curr=$(echo $list\
    \ | cut -d' ' -f$i)\n        if [ $i -eq 1 ]; then\n            prev=$curr\n \
    \           continue\n        fi\n\n        if [ \"$direction\" == \"increasing\"\
    \ ]; then\n            if [ $curr -lt $prev ]; then\n                ret=1\n \
    \               break\n            fi\n        else\n            if [ $curr -gt\
    \ $prev ]; then\n                ret=1\n                break\n            fi\n\
    \        fi\n        prev=$curr\n    done\n\n    return $ret", "    local list=\"\
    $1\"\n    local direction=\"$2\"\n    local prev=\n    local curr=\n    for curr\
    \ in $list; do\n        if [ -n \"$prev\" ]; then\n            if [ \"$direction\"\
    \ = \"increasing\" ]; then\n                if [ \"$curr\" -lt \"$prev\" ]; then\n\
    \                    return 1\n                fi\n            else\n        \
    \        if [ \"$curr\" -gt \"$prev\" ]; then\n                    return 1\n\
    \                fi\n            fi\n        fi\n        prev=\"$curr\"\n    done\n\
    \    return 0", "  local list=\"$1\"\n  local -i i=0\n  local -i len=${#list}\n\
    \  local -i increasing=1\n  local -i decreasing=1\n  local -i prev=0\n  local\
    \ -i curr=0\n  for i in $list; do\n    if (( i < prev )); then\n      increasing=0\n\
    \    elif (( i > prev )); then\n      decreasing=0\n    fi\n    prev=$i\n  done\n\
    \  (( increasing || decreasing ))", "  local list=\"$1\"\n  local direction=\"\
    $2\"\n  local prev=\n  local curr=\n  local result=1\n  for curr in $list; do\n\
    \    if [[ -n \"$prev\" ]]; then\n      if [[ \"$direction\" == \"up\" ]]; then\n\
    \        if [[ \"$curr\" -lt \"$prev\" ]]; then\n          result=0\n        \
    \  break\n        fi\n      else\n        if [[ \"$curr\" -gt \"$prev\" ]]; then\n\
    \          result=0\n          break\n        fi\n      fi\n    fi\n    prev=\"\
    $curr\"\n  done\n  return $result", "    local list=\"$1\"\n    local direction=0\n\
    \    local last=0\n    for i in $list; do\n        if [ $direction -eq 0 ]; then\n\
    \            if [ $i -gt $last ]; then\n                direction=1\n        \
    \    elif [ $i -lt $last ]; then\n                direction=-1\n            fi\n\
    \        elif [ $direction -eq 1 ]; then\n            if [ $i -lt $last ]; then\n\
    \                return 1\n            fi\n        elif [ $direction -eq -1 ];\
    \ then\n            if [ $i -gt $last ]; then\n                return 1\n    \
    \        fi\n        fi\n        last=$i\n    done\n    return 0", "    local\
    \ list=$1\n    local direction=$2\n    local prev=0\n    local curr=0\n    local\
    \ result=0\n    for x in $list; do\n        curr=$x\n        if [ $curr -eq $prev\
    \ ]; then\n            continue\n        fi\n        if [ $direction = \"increasing\"\
    \ ]; then\n            if [ $curr -lt $prev ]; then\n                result=1\n\
    \                break\n            fi\n        else\n            if [ $curr -gt\
    \ $prev ]; then\n                result=1\n                break\n           \
    \ fi\n        fi\n        prev=$curr\n    done\n    return $result", "    local\
    \ list=\"$1\"\n    local -a a=($list)\n    local -a b=($list)\n    local -a c=($list)\n\
    \    local -a d=($list)\n    local -a e=($list)\n    local -a f=($list)\n    local\
    \ -a g=($list)\n    local -a h=($list)\n    local -a i=($list)\n    local -a j=($list)\n\
    \    local -a k=($list)\n    local -a l=($list)\n    local -a m=($list)\n    local\
    \ -a n=($list)\n    local -a o=($list)\n    local -a p=($list)\n    local -a q=($list)\n\
    \    local -a r=($list)\n    local -a s=($list)\n    local -a t=($list)\n    local\
    \ -a u=($list)\n    local -a v=($list)\n    local -a w=($list)\n    local -a x=($list)\n\
    \    local -a y=($list)\n    local -a z=($list)\n    local -a aa=($list)\n   \
    \ local -a ab=($list)\n    local -a ac=($list)\n    local -a ad=($list)\n    local\
    \ -a ae=($list)\n    local -a af=($list)\n    local -a ag=($list)\n    local -a\
    \ ah=($list)\n    local -a ai=($list)\n    local -a aj=($list)\n    local -a ak=($list)\n\
    \    local -a al=($list)\n    local -a am=($list)\n    local -a an=($list)\n \
    \   local -a ao=($list)\n    local -a ap=($list)\n    local -a aq=($list)\n  \
    \  local -a ar=($list)\n    local -a as=($list)\n    local -a at=($list)\n   \
    \ local -a au=($list)\n    local -a av=($list)\n    local -a aw=($list)\n    local\
    \ -a ax=($", "    local list=\"$1\"\n    local inc=0\n    local dec=0\n    local\
    \ prev=0\n    local curr=0\n    for i in $list; do\n        curr=$i\n        if\
    \ [ $curr -lt $prev ]; then\n            dec=1\n        elif [ $curr -gt $prev\
    \ ]; then\n            inc=1\n        fi\n        if [ $dec -eq 1 -a $inc -eq\
    \ 1 ]; then\n            return 1\n        fi\n        prev=$curr\n    done\n\
    \    return 0", "  local list=\"$1\"\n  local direction=\"$2\"\n  local prev=0\n\
    \  local curr=0\n  for i in $list; do\n    if [[ $i =~ ^[0-9]+$ ]]; then\n   \
    \   curr=$i\n      if [[ $curr -eq $prev ]]; then\n        continue\n      fi\n\
    \      if [[ $direction == \"increasing\" ]]; then\n        if [[ $curr -lt $prev\
    \ ]]; then\n          return 1\n        fi\n      else\n        if [[ $curr -gt\
    \ $prev ]]; then\n          return 1\n        fi\n      fi\n      prev=$curr\n\
    \    fi\n  done\n  return 0", "    local list=\"$1\"\n    local prev=$(echo \"\
    $list\" | head -n 1)\n    local increasing=true\n    local decreasing=true\n \
    \   for i in $list; do\n        if [ \"$i\" -lt \"$prev\" ]; then\n          \
    \  increasing=false\n        fi\n        if [ \"$i\" -gt \"$prev\" ]; then\n \
    \           decreasing=false\n        fi\n        prev=$i\n    done\n    if $increasing\
    \ || $decreasing; then\n        return 0\n    else\n        return 1\n    fi",
  "  local list=($1)\n  local n=${#list[@]}\n  local i\n  local prev=${list[0]}\n\
    \  local increasing=0\n  local decreasing=0\n  for ((i=1; i<n; i++)); do\n   \
    \ if ((prev < ${list[i]})); then\n      increasing=1\n    elif ((prev > ${list[i]}));\
    \ then\n      decreasing=1\n    fi\n    if ((increasing && decreasing)); then\n\
    \      return 1\n    fi\n    prev=${list[i]}\n  done\n  return 0", "  local list=\"\
    $1\"\n  local inc=0\n  local dec=0\n  local prev=0\n  local curr=0\n  for i in\
    \ $list; do\n    curr=$i\n    if [ $prev -gt $curr ]; then\n      dec=1\n    fi\n\
    \    if [ $prev -lt $curr ]; then\n      inc=1\n    fi\n    prev=$curr\n  done\n\
    \  if [ $inc -eq 1 -a $dec -eq 1 ]; then\n    return 1\n  else\n    return 0\n\
    \  fi", "    local list=\"$1\"\n    local direction=\"$2\"\n    local prev=0\n\
    \    local curr=0\n    local -i i=0\n    local -i n=0\n    local -i ret=0\n  \
    \  local -i cmp=0\n\n    n=$(echo \"$list\" | wc -w)\n    for i in $(seq 1 $n);\
    \ do\n        curr=$(echo \"$list\" | cut -d' ' -f$i)\n        if [ $i -gt 1 ];\
    \ then\n            if [ \"$direction\" == \"increasing\" ]; then\n          \
    \      cmp=$(echo \"$prev < $curr\" | bc)\n            else\n                cmp=$(echo\
    \ \"$prev > $curr\" | bc)\n            fi\n            if [ $cmp -eq 0 ]; then\n\
    \                ret=1\n                break\n            fi\n        fi\n  \
    \      prev=$curr\n    done\n    return $ret", "    local list=\"$1\"\n    local\
    \ direction=\"$2\"\n    local prev=$(echo \"$list\" | head -n 1)\n    local curr\n\
    \    for curr in $list; do\n        if [[ \"$direction\" == \"increasing\" ]];\
    \ then\n            if [[ \"$curr\" -lt \"$prev\" ]]; then\n                return\
    \ 1\n            fi\n        else\n            if [[ \"$curr\" -gt \"$prev\" ]];\
    \ then\n                return 1\n            fi\n        fi\n        prev=$curr\n\
    \    done\n    return 0", "    local list=\"$1\"\n    local direction=\"$2\"\n\
    \    local prev=\n    for i in $list; do\n        if [[ -n \"$prev\" ]]; then\n\
    \            if [[ \"$direction\" == \"increasing\" ]]; then\n               \
    \ if (( i < prev )); then\n                    return 1\n                fi\n\
    \            else\n                if (( i > prev )); then\n                 \
    \   return 1\n                fi\n            fi\n        fi\n        prev=$i\n\
    \    done\n    return 0", "    local list=\"$1\"\n    local direction=\"$2\"\n\
    \    local prev=0\n    local curr=0\n    local result=0\n    for curr in $list;\
    \ do\n        if [ $prev -ne 0 ]; then\n            if [ $direction == \"increasing\"\
    \ ]; then\n                if [ $curr -lt $prev ]; then\n                    result=1\n\
    \                    break\n                fi\n            else\n           \
    \     if [ $curr -gt $prev ]; then\n                    result=1\n           \
    \         break\n                fi\n            fi\n        fi\n        prev=$curr\n\
    \    done\n    return $result", "    local list=\"$1\"\n    local increasing=1\n\
    \    local decreasing=1\n    local prev=0\n    local curr=0\n    for i in $list;\
    \ do\n        curr=$i\n        if [ $curr -lt $prev ]; then\n            increasing=0\n\
    \        elif [ $curr -gt $prev ]; then\n            decreasing=0\n        fi\n\
    \        prev=$curr\n    done\n    if [ $increasing -eq 1 ] || [ $decreasing -eq\
    \ 1 ]; then\n        return 0\n    else\n        return 1\n    fi", "    local\
    \ list=\"$1\"\n    local prev=0\n    local curr=0\n    local increasing=0\n  \
    \  local decreasing=0\n    for i in $list; do\n        if [ $i -gt $prev ]; then\n\
    \            increasing=1\n        elif [ $i -lt $prev ]; then\n            decreasing=1\n\
    \        fi\n        if [ $increasing -eq 1 -a $decreasing -eq 1 ]; then\n   \
    \         return 1\n        fi\n        prev=$i\n    done\n    return 0", "  \
    \  local list=$1\n    local increasing=1\n    local decreasing=1\n    local prev=\n\
    \    for i in $list; do\n        if [[ -n $prev ]]; then\n            if (( $i\
    \ > $prev )); then\n                decreasing=0\n            elif (( $i < $prev\
    \ )); then\n                increasing=0\n            fi\n        fi\n       \
    \ prev=$i\n    done\n    (( $increasing || $decreasing ))", "    local list=\"\
    $1\"\n    local direction=\"$2\"\n    local prev=\n    local curr=\n    local\
    \ result=1\n    for curr in $list; do\n        if [ -n \"$prev\" ]; then\n   \
    \         if [ \"$direction\" = \"increasing\" ]; then\n                if [ \"\
    $curr\" -lt \"$prev\" ]; then\n                    result=0\n                \
    \    break\n                fi\n            else\n                if [ \"$curr\"\
    \ -gt \"$prev\" ]; then\n                    result=0\n                    break\n\
    \                fi\n            fi\n        fi\n        prev=\"$curr\"\n    done\n\
    \    echo $result", "    local list=\"$1\"\n    local increasing=\"$2\"\n    local\
    \ decreasing=\"$3\"\n    local prev=\n    local curr=\n    local i=0\n    for\
    \ curr in $list; do\n        if [ -n \"$prev\" ]; then\n            if [ \"$increasing\"\
    \ = \"true\" ]; then\n                if [ \"$prev\" -gt \"$curr\" ]; then\n \
    \                   return 1\n                fi\n            elif [ \"$decreasing\"\
    \ = \"true\" ]; then\n                if [ \"$prev\" -lt \"$curr\" ]; then\n \
    \                   return 1\n                fi\n            fi\n        fi\n\
    \        prev=\"$curr\"\n        i=$((i+1))\n    done\n    return 0", "    local\
    \ list=$1\n    local direction=0\n    local prev=0\n    local curr=0\n    for\
    \ i in $list; do\n        curr=$i\n        if [ $prev -ne 0 ]; then\n        \
    \    if [ $direction -eq 0 ]; then\n                if [ $prev -gt $curr ]; then\n\
    \                    direction=-1\n                elif [ $prev -lt $curr ]; then\n\
    \                    direction=1\n                fi\n            else\n     \
    \           if [ $direction -eq 1 -a $prev -gt $curr ]; then\n               \
    \     return 1\n                elif [ $direction -eq -1 -a $prev -lt $curr ];\
    \ then\n                    return 1\n                fi\n            fi\n   \
    \     fi\n        prev=$curr\n    done\n    return 0", "    local list=\"$1\"\n\
    \    local inc=0\n    local dec=0\n    local prev=0\n    local curr=0\n    for\
    \ x in $list; do\n        if [ $prev -eq 0 ]; then\n            prev=$x\n    \
    \        continue\n        fi\n        curr=$x\n        if [ $prev -lt $curr ];\
    \ then\n            inc=1\n        elif [ $prev -gt $curr ]; then\n          \
    \  dec=1\n        fi\n        if [ $inc -eq 1 -a $dec -eq 1 ]; then\n        \
    \    return 1\n        fi\n        prev=$curr\n    done\n    return 0", "  local\
    \ list=\"$1\"\n  local direction=\"$2\"\n  local prev\n  local curr\n  local -i\
    \ i=0\n  local -i len=${#list}\n  for curr in $list; do\n    if (( i > 0 )); then\n\
    \      if [[ \"$direction\" == \"increasing\" ]]; then\n        if (( curr < prev\
    \ )); then\n          return 1\n        fi\n      else\n        if (( curr > prev\
    \ )); then\n          return 1\n        fi\n      fi\n    fi\n    prev=$curr\n\
    \    (( i++ ))\n  done\n  return 0", "  local list=\"$1\"\n  local prev=$(echo\
    \ \"$list\" | head -n 1)\n  local curr\n  for curr in $list; do\n    if [[ $prev\
    \ -gt $curr ]]; then\n      return 1\n    fi\n    prev=$curr\n  done\n  return\
    \ 0", "    local list=\"$1\"\n    local direction=\"$2\"\n    local prev=\n  \
    \  for i in $list; do\n        if [ -n \"$prev\" ]; then\n            if [ \"\
    $direction\" = \"up\" ]; then\n                [ \"$i\" -lt \"$prev\" ] && return\
    \ 1\n            else\n                [ \"$i\" -gt \"$prev\" ] && return 1\n\
    \            fi\n        fi\n        prev=\"$i\"\n    done\n    return 0", " \
    \   local list=\"$1\"\n    local direction=\"$2\"\n    local prev=\n    local\
    \ curr=\n    for curr in $list; do\n        if [[ -n \"$prev\" ]]; then\n    \
    \        if [[ \"$direction\" == \"increasing\" ]]; then\n                if ((\
    \ curr < prev )); then\n                    return 1\n                fi\n   \
    \         else\n                if (( curr > prev )); then\n                 \
    \   return 1\n                fi\n            fi\n        fi\n        prev=\"\
    $curr\"\n    done\n    return 0", "  local list=($1)\n  local direction=0\n  local\
    \ last=${list[0]}\n  for i in ${list[@]:1}; do\n    if [[ $i -lt $last ]]; then\n\
    \      if [[ $direction -eq 1 ]]; then\n        return 1\n      fi\n      direction=-1\n\
    \    elif [[ $i -gt $last ]]; then\n      if [[ $direction -eq -1 ]]; then\n \
    \       return 1\n      fi\n      direction=1\n    fi\n    last=$i\n  done\n \
    \ return 0", "    local list=\"$1\"\n    local inc=0\n    local dec=0\n    local\
    \ prev=0\n    for i in $list; do\n        if [ $i -gt $prev ]; then\n        \
    \    inc=1\n        elif [ $i -lt $prev ]; then\n            dec=1\n        fi\n\
    \        if [ $inc -eq 1 -a $dec -eq 1 ]; then\n            return 1\n       \
    \ fi\n        prev=$i\n    done\n    return 0", "    local list=\"$1\"\n    local\
    \ increasing=1\n    local decreasing=1\n    local prev=0\n    local curr=0\n \
    \   for i in $list; do\n        curr=$i\n        if [ $curr -lt $prev ]; then\n\
    \            increasing=0\n        fi\n        if [ $curr -gt $prev ]; then\n\
    \            decreasing=0\n        fi\n        prev=$curr\n    done\n    if [\
    \ $increasing -eq 1 ] || [ $decreasing -eq 1 ]; then\n        return 0\n    else\n\
    \        return 1\n    fi"]
stop_tokens:
- "\n}"

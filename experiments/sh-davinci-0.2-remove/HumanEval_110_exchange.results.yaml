language: sh
name: HumanEval_110_exchange
results:
- exit_code: 0
  program: "#!/bin/bash\n# In this problem, you will implement a function that takes\
    \ two lists of numbers,\n# and determines whether it is possible to perform an\
    \ exchange of elements\n# between them to make lst1 a list of only even numbers.\n\
    # There is no limit on the number of exchanged elements between lst1 and lst2.\n\
    # If it is possible to exchange elements between the lst1 and lst2 to make\n#\
    \ all the elements of lst1 to be even, return \"YES\".\n# Otherwise, return \"\
    NO\".\n# For example:\n# It is assumed that the input lists will be non-empty.\n\
    #\n# $1 is a space-separated list\n# $2 is a space-separated list\nexchange()\
    \ {\n    local lst1=\"$1\"\n    local lst2=\"$2\"\n    local lst1_even=0\n   \
    \ local lst2_even=0\n    local lst1_odd=0\n    local lst2_odd=0\n    local lst1_count=0\n\
    \    local lst2_count=0\n    for i in $lst1; do\n        ((lst1_count++))\n  \
    \      if ((i % 2 == 0)); then\n            ((lst1_even++))\n        else\n  \
    \          ((lst1_odd++))\n        fi\n    done\n    for i in $lst2; do\n    \
    \    ((lst2_count++))\n        if ((i % 2 == 0)); then\n            ((lst2_even++))\n\
    \        else\n            ((lst2_odd++))\n        fi\n    done\n    if ((lst1_even\
    \ == lst1_count)); then\n        echo \"YES\"\n    elif ((lst2_even == lst2_count));\
    \ then\n        echo \"YES\"\n    elif ((lst1_odd == lst1_count)); then\n    \
    \    echo \"NO\"\n    elif ((lst2_odd == lst2_count)); then\n        echo \"NO\"\
    \n    elif ((lst1_even + lst2_odd == lst1_count)); then\n        echo \"YES\"\n\
    \    elif ((lst2_even + lst1_odd == lst2_count)); then\n        echo \"YES\"\n\
    \    else\n        echo \"NO\"\n    fi\n}\n\ncandidate() {\n    exchange \"$@\"\
    \n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"1 2 3 4\" \"1 2 3 4\") = \"\
    YES\" ]]\n    [[ $(candidate \"1 2 3 4\" \"1 5 3 4\") = \"NO\" ]]\n    [[ $(candidate\
    \ \"1 2 3 4\" \"2 1 4 3\") = \"YES\" ]]\n    [[ $(candidate \"5 7 3\" \"2 6 4\"\
    ) = \"YES\" ]]\n    [[ $(candidate \"5 7 3\" \"2 6 3\") = \"NO\" ]]\n    [[ $(candidate\
    \ \"3 2 6 1 8 9\" \"3 5 5 1 1 1\") = \"NO\" ]]\n    [[ $(candidate \"100 200\"\
    \ \"200 200\") = \"YES\" ]]\n}\n\nrun_test"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660002369
- exit_code: 1
  program: "#!/bin/bash\n# In this problem, you will implement a function that takes\
    \ two lists of numbers,\n# and determines whether it is possible to perform an\
    \ exchange of elements\n# between them to make lst1 a list of only even numbers.\n\
    # There is no limit on the number of exchanged elements between lst1 and lst2.\n\
    # If it is possible to exchange elements between the lst1 and lst2 to make\n#\
    \ all the elements of lst1 to be even, return \"YES\".\n# Otherwise, return \"\
    NO\".\n# For example:\n# It is assumed that the input lists will be non-empty.\n\
    #\n# $1 is a space-separated list\n# $2 is a space-separated list\nexchange()\
    \ {\n    local lst1=($1)\n    local lst2=($2)\n    local lst1_odd=()\n    local\
    \ lst2_even=()\n    local lst1_even=()\n    local lst2_odd=()\n    local lst1_even_count=0\n\
    \    local lst2_even_count=0\n    local lst1_odd_count=0\n    local lst2_odd_count=0\n\
    \    local lst1_count=0\n    local lst2_count=0\n    local lst1_even_index=0\n\
    \    local lst2_even_index=0\n    local lst1_odd_index=0\n    local lst2_odd_index=0\n\
    \    local lst1_index=0\n    local lst2_index=0\n    local lst1_even_index=0\n\
    \    local lst2_even_index=0\n    local lst1_odd_index=0\n    local lst2_odd_index=0\n\
    \    local lst1_index=0\n    local lst2_index=0\n    local lst1_even_index=0\n\
    \    local lst2_even_index=0\n    local lst1_odd_index=0\n    local lst2_odd_index=0\n\
    \    local lst1_index=0\n    local lst2_index=0\n    local lst1_even_index=0\n\
    \    local lst2_even_index=0\n    local lst1_odd_index=0\n    local lst2_odd_index=0\n\
    \    local lst1_index=0\n    local lst2_index=0\n    local lst1_even_index=0\n\
    \    local lst2_even_index=0\n    local lst1_odd_index=0\n    local lst2_odd_index=0\n\
    \    local lst1_index=0\n    local lst2_index=0\n    local lst1_even_index=0\n\
    \    local lst2_even_index=0\n    local lst1_odd_index=0\n    local lst2_odd\n\
    }\n\ncandidate() {\n    exchange \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate\
    \ \"1 2 3 4\" \"1 2 3 4\") = \"YES\" ]]\n    [[ $(candidate \"1 2 3 4\" \"1 5\
    \ 3 4\") = \"NO\" ]]\n    [[ $(candidate \"1 2 3 4\" \"2 1 4 3\") = \"YES\" ]]\n\
    \    [[ $(candidate \"5 7 3\" \"2 6 4\") = \"YES\" ]]\n    [[ $(candidate \"5\
    \ 7 3\" \"2 6 3\") = \"NO\" ]]\n    [[ $(candidate \"3 2 6 1 8 9\" \"3 5 5 1 1\
    \ 1\") = \"NO\" ]]\n    [[ $(candidate \"100 200\" \"200 200\") = \"YES\" ]]\n\
    }\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660002369
- exit_code: 1
  program: "#!/bin/bash\n# In this problem, you will implement a function that takes\
    \ two lists of numbers,\n# and determines whether it is possible to perform an\
    \ exchange of elements\n# between them to make lst1 a list of only even numbers.\n\
    # There is no limit on the number of exchanged elements between lst1 and lst2.\n\
    # If it is possible to exchange elements between the lst1 and lst2 to make\n#\
    \ all the elements of lst1 to be even, return \"YES\".\n# Otherwise, return \"\
    NO\".\n# For example:\n# It is assumed that the input lists will be non-empty.\n\
    #\n# $1 is a space-separated list\n# $2 is a space-separated list\nexchange()\
    \ {\n  local lst1=($1)\n  local lst2=($2)\n  local lst1_odd=()\n  local lst2_even=()\n\
    \  local i\n  for ((i=0; i<${#lst1[@]}; i++)); do\n    if [[ ${lst1[$i]}%2 -ne\
    \ 0 ]]; then\n      lst1_odd+=(${lst1[$i]})\n    fi\n  done\n  for ((i=0; i<${#lst2[@]};\
    \ i++)); do\n    if [[ ${lst2[$i]}%2 -eq 0 ]]; then\n      lst2_even+=(${lst2[$i]})\n\
    \    fi\n  done\n  if [[ ${#lst1_odd[@]} -eq ${#lst2_even[@]} ]]; then\n    echo\
    \ \"YES\"\n  else\n    echo \"NO\"\n  fi\n}\n\ncandidate() {\n    exchange \"\
    $@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"1 2 3 4\" \"1 2 3 4\") =\
    \ \"YES\" ]]\n    [[ $(candidate \"1 2 3 4\" \"1 5 3 4\") = \"NO\" ]]\n    [[\
    \ $(candidate \"1 2 3 4\" \"2 1 4 3\") = \"YES\" ]]\n    [[ $(candidate \"5 7\
    \ 3\" \"2 6 4\") = \"YES\" ]]\n    [[ $(candidate \"5 7 3\" \"2 6 3\") = \"NO\"\
    \ ]]\n    [[ $(candidate \"3 2 6 1 8 9\" \"3 5 5 1 1 1\") = \"NO\" ]]\n    [[\
    \ $(candidate \"100 200\" \"200 200\") = \"YES\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660002369
- exit_code: 1
  program: "#!/bin/bash\n# In this problem, you will implement a function that takes\
    \ two lists of numbers,\n# and determines whether it is possible to perform an\
    \ exchange of elements\n# between them to make lst1 a list of only even numbers.\n\
    # There is no limit on the number of exchanged elements between lst1 and lst2.\n\
    # If it is possible to exchange elements between the lst1 and lst2 to make\n#\
    \ all the elements of lst1 to be even, return \"YES\".\n# Otherwise, return \"\
    NO\".\n# For example:\n# It is assumed that the input lists will be non-empty.\n\
    #\n# $1 is a space-separated list\n# $2 is a space-separated list\nexchange()\
    \ {\n    local lst1=($1)\n    local lst2=($2)\n    local lst1_odd=()\n    local\
    \ lst2_even=()\n    local lst1_even=()\n    local lst2_odd=()\n    local lst1_even_count=0\n\
    \    local lst2_even_count=0\n    local lst1_odd_count=0\n    local lst2_odd_count=0\n\
    \    local i=0\n    local j=0\n    local k=0\n    local l=0\n    local m=0\n \
    \   local n=0\n    local o=0\n    local p=0\n    local q=0\n    local r=0\n  \
    \  local s=0\n    local t=0\n    local u=0\n    local v=0\n    local w=0\n   \
    \ local x=0\n    local y=0\n    local z=0\n    local aa=0\n    local bb=0\n  \
    \  local cc=0\n    local dd=0\n    local ee=0\n    local ff=0\n    local gg=0\n\
    \    local hh=0\n    local ii=0\n    local jj=0\n    local kk=0\n    local ll=0\n\
    \    local mm=0\n    local nn=0\n    local oo=0\n    local pp=0\n    local qq=0\n\
    \    local rr=0\n    local ss=0\n    local tt=0\n    local uu=0\n    local vv=0\n\
    \    local ww=0\n    local xx=0\n    local yy=0\n    local zz=0\n    local aaa=0\n\
    \    local bbb=0\n    local ccc=0\n    local ddd=0\n    local eee=0\n    local\
    \ fff=0\n    local ggg=0\n    local hhh=0\n    local iii=0\n    local jjj=0\n\
    \    local kkk=0\n    local lll=0\n    local mmm=0\n    local nnn=0\n    local\
    \ ooo=0\n    local ppp=0\n    local qqq=0\n    local rrr\n}\n\ncandidate() {\n\
    \    exchange \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"1 2 3 4\"\
    \ \"1 2 3 4\") = \"YES\" ]]\n    [[ $(candidate \"1 2 3 4\" \"1 5 3 4\") = \"\
    NO\" ]]\n    [[ $(candidate \"1 2 3 4\" \"2 1 4 3\") = \"YES\" ]]\n    [[ $(candidate\
    \ \"5 7 3\" \"2 6 4\") = \"YES\" ]]\n    [[ $(candidate \"5 7 3\" \"2 6 3\") =\
    \ \"NO\" ]]\n    [[ $(candidate \"3 2 6 1 8 9\" \"3 5 5 1 1 1\") = \"NO\" ]]\n\
    \    [[ $(candidate \"100 200\" \"200 200\") = \"YES\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660002369
- exit_code: 1
  program: "#!/bin/bash\n# In this problem, you will implement a function that takes\
    \ two lists of numbers,\n# and determines whether it is possible to perform an\
    \ exchange of elements\n# between them to make lst1 a list of only even numbers.\n\
    # There is no limit on the number of exchanged elements between lst1 and lst2.\n\
    # If it is possible to exchange elements between the lst1 and lst2 to make\n#\
    \ all the elements of lst1 to be even, return \"YES\".\n# Otherwise, return \"\
    NO\".\n# For example:\n# It is assumed that the input lists will be non-empty.\n\
    #\n# $1 is a space-separated list\n# $2 is a space-separated list\nexchange()\
    \ {\n    local lst1=($1)\n    local lst2=($2)\n    local lst1_even=()\n    local\
    \ lst1_odd=()\n    local lst2_even=()\n    local lst2_odd=()\n    local lst1_even_count=0\n\
    \    local lst1_odd_count=0\n    local lst2_even_count=0\n    local lst2_odd_count=0\n\
    \    local i=0\n    local j=0\n    local k=0\n    local l=0\n    local m=0\n \
    \   local n=0\n    local o=0\n    local p=0\n    local q=0\n    local r=0\n  \
    \  local s=0\n    local t=0\n    local u=0\n    local v=0\n    local w=0\n   \
    \ local x=0\n    local y=0\n    local z=0\n    local aa=0\n    local bb=0\n  \
    \  local cc=0\n    local dd=0\n    local ee=0\n    local ff=0\n    local gg=0\n\
    \    local hh=0\n    local ii=0\n    local jj=0\n    local kk=0\n    local ll=0\n\
    \    local mm=0\n    local nn=0\n    local oo=0\n    local pp=0\n    local qq=0\n\
    \    local rr=0\n    local ss=0\n    local tt=0\n    local uu=0\n    local vv=0\n\
    \    local ww=0\n    local xx=0\n    local yy=0\n    local zz=0\n    local aaa=0\n\
    \    local bbb=0\n    local ccc=0\n    local ddd=0\n    local eee=0\n    local\
    \ fff=0\n    local ggg=0\n    local hhh=0\n    local iii=0\n    local jjj=0\n\
    \    local kkk=0\n    local lll=0\n    local mmm=0\n    local nnn=0\n    local\
    \ ooo=0\n    local ppp=0\n    local qqq=0\n    local rrr\n}\n\ncandidate() {\n\
    \    exchange \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"1 2 3 4\"\
    \ \"1 2 3 4\") = \"YES\" ]]\n    [[ $(candidate \"1 2 3 4\" \"1 5 3 4\") = \"\
    NO\" ]]\n    [[ $(candidate \"1 2 3 4\" \"2 1 4 3\") = \"YES\" ]]\n    [[ $(candidate\
    \ \"5 7 3\" \"2 6 4\") = \"YES\" ]]\n    [[ $(candidate \"5 7 3\" \"2 6 3\") =\
    \ \"NO\" ]]\n    [[ $(candidate \"3 2 6 1 8 9\" \"3 5 5 1 1 1\") = \"NO\" ]]\n\
    \    [[ $(candidate \"100 200\" \"200 200\") = \"YES\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660002369
- exit_code: 1
  program: "#!/bin/bash\n# In this problem, you will implement a function that takes\
    \ two lists of numbers,\n# and determines whether it is possible to perform an\
    \ exchange of elements\n# between them to make lst1 a list of only even numbers.\n\
    # There is no limit on the number of exchanged elements between lst1 and lst2.\n\
    # If it is possible to exchange elements between the lst1 and lst2 to make\n#\
    \ all the elements of lst1 to be even, return \"YES\".\n# Otherwise, return \"\
    NO\".\n# For example:\n# It is assumed that the input lists will be non-empty.\n\
    #\n# $1 is a space-separated list\n# $2 is a space-separated list\nexchange()\
    \ {\n    local lst1=($1)\n    local lst2=($2)\n    local lst1_even=()\n    local\
    \ lst1_odd=()\n    local lst2_even=()\n    local lst2_odd=()\n    local i=0\n\
    \    local j=0\n    local k=0\n    local l=0\n    local m=0\n    local n=0\n \
    \   local len1=${#lst1[@]}\n    local len2=${#lst2[@]}\n    local result=\"NO\"\
    \n    for ((i=0; i<len1; i++)); do\n        if [[ $((${lst1[$i]} % 2)) -eq 0 ]];\
    \ then\n            lst1_even[$j]=${lst1[$i]}\n            ((j++))\n        else\n\
    \            lst1_odd[$k]=${lst1[$i]}\n            ((k++))\n        fi\n    done\n\
    \    for ((i=0; i<len2; i++)); do\n        if [[ $((${lst2[$i]} % 2)) -eq 0 ]];\
    \ then\n            lst2_even[$l]=${lst2[$i]}\n            ((l++))\n        else\n\
    \            lst2_odd[$m]=${lst2[$i]}\n            ((m++))\n        fi\n    done\n\
    \    if [[ ${#lst1_even[@]} -eq 0 ]]; then\n        if [[ ${#lst2_even[@]} -eq\
    \ 0 ]]; then\n            result=\"NO\"\n        else\n            result=\"YES\"\
    \n        fi\n    else\n        if [[ ${#lst2_odd[@]} -eq 0 ]]; then\n       \
    \     result=\"NO\"\n        else\n            result=\"YES\"\n        fi\n  \
    \  fi\n    echo $result\n}\n\ncandidate() {\n    exchange \"$@\"\n}\n\nset -e\n\
    run_test() {\n    [[ $(candidate \"1 2 3 4\" \"1 2 3 4\") = \"YES\" ]]\n    [[\
    \ $(candidate \"1 2 3 4\" \"1 5 3 4\") = \"NO\" ]]\n    [[ $(candidate \"1 2 3\
    \ 4\" \"2 1 4 3\") = \"YES\" ]]\n    [[ $(candidate \"5 7 3\" \"2 6 4\") = \"\
    YES\" ]]\n    [[ $(candidate \"5 7 3\" \"2 6 3\") = \"NO\" ]]\n    [[ $(candidate\
    \ \"3 2 6 1 8 9\" \"3 5 5 1 1 1\") = \"NO\" ]]\n    [[ $(candidate \"100 200\"\
    \ \"200 200\") = \"YES\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660002369
- exit_code: 1
  program: "#!/bin/bash\n# In this problem, you will implement a function that takes\
    \ two lists of numbers,\n# and determines whether it is possible to perform an\
    \ exchange of elements\n# between them to make lst1 a list of only even numbers.\n\
    # There is no limit on the number of exchanged elements between lst1 and lst2.\n\
    # If it is possible to exchange elements between the lst1 and lst2 to make\n#\
    \ all the elements of lst1 to be even, return \"YES\".\n# Otherwise, return \"\
    NO\".\n# For example:\n# It is assumed that the input lists will be non-empty.\n\
    #\n# $1 is a space-separated list\n# $2 is a space-separated list\nexchange()\
    \ {\n  local lst1=($1)\n  local lst2=($2)\n  local lst1_odd=()\n  local lst2_even=()\n\
    \  local lst1_even=()\n  local lst2_odd=()\n  local lst1_even_count=0\n  local\
    \ lst2_even_count=0\n  local lst1_odd_count=0\n  local lst2_odd_count=0\n  local\
    \ lst1_even_index=0\n  local lst2_even_index=0\n  local lst1_odd_index=0\n  local\
    \ lst2_odd_index=0\n  local lst1_even_index_count=0\n  local lst2_even_index_count=0\n\
    \  local lst1_odd_index_count=0\n  local lst2_odd_index_count=0\n  local lst1_even_index_count_index=0\n\
    \  local lst2_even_index_count_index=0\n  local lst1_odd_index_count_index=0\n\
    \  local lst2_odd_index_count_index=0\n  local lst1_even_index_count_index_count=0\n\
    \  local lst2_even_index_count_index_count=0\n  local lst1_odd_index_count_index_count=0\n\
    \  local lst2_odd_index_count_index_count=0\n  local lst1_even_index_count_index_count_index=0\n\
    \  local lst2_even_index_count_index_count_index=0\n  local lst1_odd_index_count_index_count_index=0\n\
    \  local lst2_odd_index_count_index_count_index=0\n  local lst1_even_index_count_index_count_index_count=0\n\
    \  local lst2_even_index_count_index_count_index_count=0\n  local lst1_odd_index_count_index_count_index_count=0\n\
    \  local lst2_odd_index_count_index_count_index\n}\n\ncandidate() {\n    exchange\
    \ \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"1 2 3 4\" \"1 2 3 4\"\
    ) = \"YES\" ]]\n    [[ $(candidate \"1 2 3 4\" \"1 5 3 4\") = \"NO\" ]]\n    [[\
    \ $(candidate \"1 2 3 4\" \"2 1 4 3\") = \"YES\" ]]\n    [[ $(candidate \"5 7\
    \ 3\" \"2 6 4\") = \"YES\" ]]\n    [[ $(candidate \"5 7 3\" \"2 6 3\") = \"NO\"\
    \ ]]\n    [[ $(candidate \"3 2 6 1 8 9\" \"3 5 5 1 1 1\") = \"NO\" ]]\n    [[\
    \ $(candidate \"100 200\" \"200 200\") = \"YES\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660002369
- exit_code: 1
  program: "#!/bin/bash\n# In this problem, you will implement a function that takes\
    \ two lists of numbers,\n# and determines whether it is possible to perform an\
    \ exchange of elements\n# between them to make lst1 a list of only even numbers.\n\
    # There is no limit on the number of exchanged elements between lst1 and lst2.\n\
    # If it is possible to exchange elements between the lst1 and lst2 to make\n#\
    \ all the elements of lst1 to be even, return \"YES\".\n# Otherwise, return \"\
    NO\".\n# For example:\n# It is assumed that the input lists will be non-empty.\n\
    #\n# $1 is a space-separated list\n# $2 is a space-separated list\nexchange()\
    \ {\n    local lst1=($1)\n    local lst2=($2)\n    local i=0\n    local j=0\n\
    \    local tmp=0\n    local res=\"NO\"\n    local len1=${#lst1[@]}\n    local\
    \ len2=${#lst2[@]}\n    local len=0\n    if [ $len1 -gt $len2 ]; then\n      \
    \  len=$len1\n    else\n        len=$len2\n    fi\n    for ((i=0; i<len; i++));\
    \ do\n        for ((j=0; j<len; j++)); do\n            tmp=${lst1[$i]}\n     \
    \       lst1[$i]=${lst2[$j]}\n            lst2[$j]=$tmp\n            if [ $(is_even\
    \ ${lst1[*]}) == \"YES\" ]; then\n                res=\"YES\"\n              \
    \  break\n            fi\n        done\n        if [ $res == \"YES\" ]; then\n\
    \            break\n        fi\n    done\n    echo $res\n}\n\ncandidate() {\n\
    \    exchange \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"1 2 3 4\"\
    \ \"1 2 3 4\") = \"YES\" ]]\n    [[ $(candidate \"1 2 3 4\" \"1 5 3 4\") = \"\
    NO\" ]]\n    [[ $(candidate \"1 2 3 4\" \"2 1 4 3\") = \"YES\" ]]\n    [[ $(candidate\
    \ \"5 7 3\" \"2 6 4\") = \"YES\" ]]\n    [[ $(candidate \"5 7 3\" \"2 6 3\") =\
    \ \"NO\" ]]\n    [[ $(candidate \"3 2 6 1 8 9\" \"3 5 5 1 1 1\") = \"NO\" ]]\n\
    \    [[ $(candidate \"100 200\" \"200 200\") = \"YES\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: '/tmp/tmpt_b24aan.sh: line 34: is_even: command not found

    /tmp/tmpt_b24aan.sh: line 34: [: ==: unary operator expected

    /tmp/tmpt_b24aan.sh: line 34: is_even: command not found

    /tmp/tmpt_b24aan.sh: line 34: [: ==: unary operator expected

    /tmp/tmpt_b24aan.sh: line 34: is_even: command not found

    /tmp/tmpt_b24aan.sh: line 34: [: ==: unary operator expected

    /tmp/tmpt_b24aan.sh: line 34: is_even: command not found

    /tmp/tmpt_b24aan.sh: line 34: [: ==: unary operator expected

    /tmp/tmpt_b24aan.sh: line 34: is_even: command not found

    /tmp/tmpt_b24aan.sh: line 34: [: ==: unary operator expected

    /tmp/tmpt_b24aan.sh: line 34: is_even: command not found

    /tmp/tmpt_b24aan.sh: line 34: [: ==: unary operator expected

    /tmp/tmpt_b24aan.sh: line 34: is_even: command not found

    /tmp/tmpt_b24aan.sh: line 34: [: ==: unary operator expected

    /tmp/tmpt_b24aan.sh: line 34: is_even: command not found

    /tmp/tmpt_b24aan.sh: line 34: [: ==: unary operator expected

    /tmp/tmpt_b24aan.sh: line 34: is_even: command not found

    /tmp/tmpt_b24aan.sh: line 34: [: ==: unary operator expected

    /tmp/tmpt_b24aan.sh: line 34: is_even: command not found

    /tmp/tmpt_b24aan.sh: line 34: [: ==: unary operator expected

    /tmp/tmpt_b24aan.sh: line 34: is_even: command not found

    /tmp/tmpt_b24aan.sh: line 34: [: ==: unary operator expected

    /tmp/tmpt_b24aan.sh: line 34: is_even: command not found

    /tmp/tmpt_b24aan.sh: line 34: [: ==: unary operator expected

    /tmp/tmpt_b24aan.sh: line 34: is_even: command not found

    /tmp/tmpt_b24aan.sh: line 34: [: ==: unary operator expected

    /tmp/tmpt_b24aan.sh: line 34: is_even: command not found

    /tmp/tmpt_b24aan.sh: line 34: [: ==: unary operator expected

    /tmp/tmpt_b24aan.sh: line 34: is_even: command not found

    /tmp/tmpt_b24aan.sh: line 34: [: ==: unary operator expected

    /tmp/tmpt_b24aan.sh: line 34: is_even: command not found

    /tmp/tmpt_b24aan.sh: line 34: [: ==: unary operator expected

    '
  stdout: ''
  timestamp: 1660002369
- exit_code: 1
  program: "#!/bin/bash\n# In this problem, you will implement a function that takes\
    \ two lists of numbers,\n# and determines whether it is possible to perform an\
    \ exchange of elements\n# between them to make lst1 a list of only even numbers.\n\
    # There is no limit on the number of exchanged elements between lst1 and lst2.\n\
    # If it is possible to exchange elements between the lst1 and lst2 to make\n#\
    \ all the elements of lst1 to be even, return \"YES\".\n# Otherwise, return \"\
    NO\".\n# For example:\n# It is assumed that the input lists will be non-empty.\n\
    #\n# $1 is a space-separated list\n# $2 is a space-separated list\nexchange()\
    \ {\n  local lst1=($1)\n  local lst2=($2)\n  local lst1_odds=()\n  local lst2_evens=()\n\
    \  local lst1_evens=()\n  local lst2_odds=()\n  local lst1_evens_count=0\n  local\
    \ lst2_evens_count=0\n  local lst1_odds_count=0\n  local lst2_odds_count=0\n \
    \ local lst1_odds_index=0\n  local lst2_evens_index=0\n  local lst1_evens_index=0\n\
    \  local lst2_odds_index=0\n  local lst1_odds_index_max=0\n  local lst2_evens_index_max=0\n\
    \  local lst1_evens_index_max=0\n  local lst2_odds_index_max=0\n  local lst1_odds_index_min=0\n\
    \  local lst2_evens_index_min=0\n  local lst1_evens_index_min=0\n  local lst2_odds_index_min=0\n\
    \  local lst1_odds_index_min_max=0\n  local lst2_evens_index_min_max=0\n  local\
    \ lst1_evens_index_min_max=0\n  local lst2_odds_index_min_max=0\n  local lst1_odds_index_min_max_count=0\n\
    \  local lst2_evens_index_min_max_count=0\n  local lst1_evens_index_min_max_count=0\n\
    \  local lst2_odds_index_min_max_count=0\n  local lst1_odds_index_min_max_count_max=0\n\
    \  local lst2_evens_index_min_max_count_max=0\n  local lst1_evens_index_min_max_count_max=0\n\
    \  local lst2_odds_index_min_max_count\n}\n\ncandidate() {\n    exchange \"$@\"\
    \n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"1 2 3 4\" \"1 2 3 4\") = \"\
    YES\" ]]\n    [[ $(candidate \"1 2 3 4\" \"1 5 3 4\") = \"NO\" ]]\n    [[ $(candidate\
    \ \"1 2 3 4\" \"2 1 4 3\") = \"YES\" ]]\n    [[ $(candidate \"5 7 3\" \"2 6 4\"\
    ) = \"YES\" ]]\n    [[ $(candidate \"5 7 3\" \"2 6 3\") = \"NO\" ]]\n    [[ $(candidate\
    \ \"3 2 6 1 8 9\" \"3 5 5 1 1 1\") = \"NO\" ]]\n    [[ $(candidate \"100 200\"\
    \ \"200 200\") = \"YES\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660002369
- exit_code: 1
  program: "#!/bin/bash\n# In this problem, you will implement a function that takes\
    \ two lists of numbers,\n# and determines whether it is possible to perform an\
    \ exchange of elements\n# between them to make lst1 a list of only even numbers.\n\
    # There is no limit on the number of exchanged elements between lst1 and lst2.\n\
    # If it is possible to exchange elements between the lst1 and lst2 to make\n#\
    \ all the elements of lst1 to be even, return \"YES\".\n# Otherwise, return \"\
    NO\".\n# For example:\n# It is assumed that the input lists will be non-empty.\n\
    #\n# $1 is a space-separated list\n# $2 is a space-separated list\nexchange()\
    \ {\n  local lst1=$1\n  local lst2=$2\n  local lst1_odd=()\n  local lst2_even=()\n\
    \  local lst1_even=()\n  local lst2_odd=()\n  local lst1_even_count=0\n  local\
    \ lst2_even_count=0\n  local lst1_odd_count=0\n  local lst2_odd_count=0\n  local\
    \ lst1_count=0\n  local lst2_count=0\n  local lst1_even_odd_count=0\n  local lst2_even_odd_count=0\n\
    \  local lst1_odd_even_count=0\n  local lst2_odd_even_count=0\n  local lst1_even_odd_count_diff=0\n\
    \  local lst2_even_odd_count_diff=0\n  local lst1_odd_even_count_diff=0\n  local\
    \ lst2_odd_even_count_diff=0\n  local lst1_even_odd_count_diff_sum=0\n  local\
    \ lst2_even_odd_count_diff_sum=0\n  local lst1_odd_even_count_diff_sum=0\n  local\
    \ lst2_odd_even_count_diff_sum=0\n  local lst1_even_odd_count_diff_sum_diff=0\n\
    \  local lst2_even_odd_count_diff_sum_diff=0\n  local lst1_odd_even_count_diff_sum_diff=0\n\
    \  local lst2_odd_even_count_diff_sum_diff=0\n  local lst1_even_odd_count_diff_sum_diff_sum=0\n\
    \  local lst2_even_odd_count_diff_sum_diff_sum=0\n  local lst1_odd_even_count_diff_sum_diff_sum=0\n\
    \  local lst2_odd_even_count_diff_sum_diff_sum=0\n  local lst1_even_odd_count_diff_sum_diff_sum_diff=0\n\
    \  local l\n}\n\ncandidate() {\n    exchange \"$@\"\n}\n\nset -e\nrun_test() {\n\
    \    [[ $(candidate \"1 2 3 4\" \"1 2 3 4\") = \"YES\" ]]\n    [[ $(candidate\
    \ \"1 2 3 4\" \"1 5 3 4\") = \"NO\" ]]\n    [[ $(candidate \"1 2 3 4\" \"2 1 4\
    \ 3\") = \"YES\" ]]\n    [[ $(candidate \"5 7 3\" \"2 6 4\") = \"YES\" ]]\n  \
    \  [[ $(candidate \"5 7 3\" \"2 6 3\") = \"NO\" ]]\n    [[ $(candidate \"3 2 6\
    \ 1 8 9\" \"3 5 5 1 1 1\") = \"NO\" ]]\n    [[ $(candidate \"100 200\" \"200 200\"\
    ) = \"YES\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660002369
- exit_code: 1
  program: "#!/bin/bash\n# In this problem, you will implement a function that takes\
    \ two lists of numbers,\n# and determines whether it is possible to perform an\
    \ exchange of elements\n# between them to make lst1 a list of only even numbers.\n\
    # There is no limit on the number of exchanged elements between lst1 and lst2.\n\
    # If it is possible to exchange elements between the lst1 and lst2 to make\n#\
    \ all the elements of lst1 to be even, return \"YES\".\n# Otherwise, return \"\
    NO\".\n# For example:\n# It is assumed that the input lists will be non-empty.\n\
    #\n# $1 is a space-separated list\n# $2 is a space-separated list\nexchange()\
    \ {\n  local lst1=($1)\n  local lst2=($2)\n  local lst1_odd=()\n  local lst2_even=()\n\
    \  local lst1_even=()\n  local lst2_odd=()\n  local lst1_even_count=0\n  local\
    \ lst2_even_count=0\n  local lst1_odd_count=0\n  local lst2_odd_count=0\n  local\
    \ lst1_even_odd_diff=0\n  local lst2_even_odd_diff=0\n  local lst1_even_odd_diff_abs=0\n\
    \  local lst2_even_odd_diff_abs=0\n  local lst1_even_odd_diff_abs_sum=0\n  local\
    \ lst2_even_odd_diff_abs_sum=0\n  local lst1_even_odd_diff_abs_sum_diff=0\n  local\
    \ lst2_even_odd_diff_abs_sum_diff=0\n  local lst1_even_odd_diff_abs_sum_diff_abs=0\n\
    \  local lst2_even_odd_diff_abs_sum_diff_abs=0\n  local lst1_even_odd_diff_abs_sum_diff_abs_sum=0\n\
    \  local lst2_even_odd_diff_abs_sum_diff_abs_sum=0\n  local lst1_even_odd_diff_abs_sum_diff_abs_sum_diff=0\n\
    \  local lst2_even_odd_diff_abs_sum_diff_abs_sum_diff=0\n  local lst1_even_odd_diff_abs_sum_diff_abs_sum_diff_abs=0\n\
    \  local lst2_even_odd_diff_abs_sum_diff_abs_sum_diff_abs=0\n  local lst1_even_odd_diff_abs_sum_diff_abs_sum_diff_abs_sum=0\n\
    \  local lst2_even_odd_diff_abs_sum_diff_abs_sum_diff_abs_sum=0\n  local lst1_even\n\
    }\n\ncandidate() {\n    exchange \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate\
    \ \"1 2 3 4\" \"1 2 3 4\") = \"YES\" ]]\n    [[ $(candidate \"1 2 3 4\" \"1 5\
    \ 3 4\") = \"NO\" ]]\n    [[ $(candidate \"1 2 3 4\" \"2 1 4 3\") = \"YES\" ]]\n\
    \    [[ $(candidate \"5 7 3\" \"2 6 4\") = \"YES\" ]]\n    [[ $(candidate \"5\
    \ 7 3\" \"2 6 3\") = \"NO\" ]]\n    [[ $(candidate \"3 2 6 1 8 9\" \"3 5 5 1 1\
    \ 1\") = \"NO\" ]]\n    [[ $(candidate \"100 200\" \"200 200\") = \"YES\" ]]\n\
    }\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660002369
- exit_code: 1
  program: "#!/bin/bash\n# In this problem, you will implement a function that takes\
    \ two lists of numbers,\n# and determines whether it is possible to perform an\
    \ exchange of elements\n# between them to make lst1 a list of only even numbers.\n\
    # There is no limit on the number of exchanged elements between lst1 and lst2.\n\
    # If it is possible to exchange elements between the lst1 and lst2 to make\n#\
    \ all the elements of lst1 to be even, return \"YES\".\n# Otherwise, return \"\
    NO\".\n# For example:\n# It is assumed that the input lists will be non-empty.\n\
    #\n# $1 is a space-separated list\n# $2 is a space-separated list\nexchange()\
    \ {\n  local lst1=($1)\n  local lst2=($2)\n  local lst1_even=()\n  local lst1_odd=()\n\
    \  local lst2_even=()\n  local lst2_odd=()\n  local lst1_even_count=0\n  local\
    \ lst1_odd_count=0\n  local lst2_even_count=0\n  local lst2_odd_count=0\n  local\
    \ i=0\n  local j=0\n  local k=0\n  local l=0\n  local m=0\n  local n=0\n  local\
    \ o=0\n  local p=0\n  local q=0\n  local r=0\n  local s=0\n  local t=0\n  local\
    \ u=0\n  local v=0\n  local w=0\n  local x=0\n  local y=0\n  local z=0\n  local\
    \ aa=0\n  local bb=0\n  local cc=0\n  local dd=0\n  local ee=0\n  local ff=0\n\
    \  local gg=0\n  local hh=0\n  local ii=0\n  local jj=0\n  local kk=0\n  local\
    \ ll=0\n  local mm=0\n  local nn=0\n  local oo=0\n  local pp=0\n  local qq=0\n\
    \  local rr=0\n  local ss=0\n  local tt=0\n  local uu=0\n  local vv=0\n  local\
    \ ww=0\n  local xx=0\n  local yy=0\n  local zz=0\n  local aaa=0\n  local bbb=0\n\
    \  local ccc=0\n  local ddd=0\n  local eee=0\n  local fff=0\n  local ggg=0\n \
    \ local hhh=0\n  local iii=0\n  local jjj=0\n  local kkk=0\n  local lll=0\n  local\
    \ mmm=0\n  local nnn=0\n  local ooo=0\n  local ppp=0\n  local qqq=0\n  local rrr\n\
    }\n\ncandidate() {\n    exchange \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate\
    \ \"1 2 3 4\" \"1 2 3 4\") = \"YES\" ]]\n    [[ $(candidate \"1 2 3 4\" \"1 5\
    \ 3 4\") = \"NO\" ]]\n    [[ $(candidate \"1 2 3 4\" \"2 1 4 3\") = \"YES\" ]]\n\
    \    [[ $(candidate \"5 7 3\" \"2 6 4\") = \"YES\" ]]\n    [[ $(candidate \"5\
    \ 7 3\" \"2 6 3\") = \"NO\" ]]\n    [[ $(candidate \"3 2 6 1 8 9\" \"3 5 5 1 1\
    \ 1\") = \"NO\" ]]\n    [[ $(candidate \"100 200\" \"200 200\") = \"YES\" ]]\n\
    }\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660002369
- exit_code: 1
  program: "#!/bin/bash\n# In this problem, you will implement a function that takes\
    \ two lists of numbers,\n# and determines whether it is possible to perform an\
    \ exchange of elements\n# between them to make lst1 a list of only even numbers.\n\
    # There is no limit on the number of exchanged elements between lst1 and lst2.\n\
    # If it is possible to exchange elements between the lst1 and lst2 to make\n#\
    \ all the elements of lst1 to be even, return \"YES\".\n# Otherwise, return \"\
    NO\".\n# For example:\n# It is assumed that the input lists will be non-empty.\n\
    #\n# $1 is a space-separated list\n# $2 is a space-separated list\nexchange()\
    \ {\n  local lst1=\"$1\"\n  local lst2=\"$2\"\n  local lst1_even=0\n  local lst2_even=0\n\
    \  local lst1_odd=0\n  local lst2_odd=0\n  for i in $lst1; do\n    if [ $((i %\
    \ 2)) -eq 0 ]; then\n      ((lst1_even++))\n    else\n      ((lst1_odd++))\n \
    \   fi\n  done\n  for i in $lst2; do\n    if [ $((i % 2)) -eq 0 ]; then\n    \
    \  ((lst2_even++))\n    else\n      ((lst2_odd++))\n    fi\n  done\n  if [ $lst1_even\
    \ -eq 0 ]; then\n    echo \"NO\"\n  elif [ $lst2_odd -eq 0 ]; then\n    echo \"\
    NO\"\n  elif [ $lst1_even -gt $lst2_odd ]; then\n    echo \"NO\"\n  else\n   \
    \ echo \"YES\"\n  fi\n}\n\ncandidate() {\n    exchange \"$@\"\n}\n\nset -e\nrun_test()\
    \ {\n    [[ $(candidate \"1 2 3 4\" \"1 2 3 4\") = \"YES\" ]]\n    [[ $(candidate\
    \ \"1 2 3 4\" \"1 5 3 4\") = \"NO\" ]]\n    [[ $(candidate \"1 2 3 4\" \"2 1 4\
    \ 3\") = \"YES\" ]]\n    [[ $(candidate \"5 7 3\" \"2 6 4\") = \"YES\" ]]\n  \
    \  [[ $(candidate \"5 7 3\" \"2 6 3\") = \"NO\" ]]\n    [[ $(candidate \"3 2 6\
    \ 1 8 9\" \"3 5 5 1 1 1\") = \"NO\" ]]\n    [[ $(candidate \"100 200\" \"200 200\"\
    ) = \"YES\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660002369
- exit_code: 1
  program: "#!/bin/bash\n# In this problem, you will implement a function that takes\
    \ two lists of numbers,\n# and determines whether it is possible to perform an\
    \ exchange of elements\n# between them to make lst1 a list of only even numbers.\n\
    # There is no limit on the number of exchanged elements between lst1 and lst2.\n\
    # If it is possible to exchange elements between the lst1 and lst2 to make\n#\
    \ all the elements of lst1 to be even, return \"YES\".\n# Otherwise, return \"\
    NO\".\n# For example:\n# It is assumed that the input lists will be non-empty.\n\
    #\n# $1 is a space-separated list\n# $2 is a space-separated list\nexchange()\
    \ {\n  local lst1=$1\n  local lst2=$2\n  local lst1_even=0\n  local lst2_even=0\n\
    \  local lst1_odd=0\n  local lst2_odd=0\n  for i in $lst1; do\n    if [[ $((i\
    \ % 2)) -eq 0 ]]; then\n      lst1_even=$((lst1_even + 1))\n    else\n      lst1_odd=$((lst1_odd\
    \ + 1))\n    fi\n  done\n  for i in $lst2; do\n    if [[ $((i % 2)) -eq 0 ]];\
    \ then\n      lst2_even=$((lst2_even + 1))\n    else\n      lst2_odd=$((lst2_odd\
    \ + 1))\n    fi\n  done\n  if [[ $lst1_even -eq 0 ]]; then\n    echo \"NO\"\n\
    \  elif [[ $lst2_odd -eq 0 ]]; then\n    echo \"NO\"\n  elif [[ $lst1_even -eq\
    \ $lst2_odd ]]; then\n    echo \"YES\"\n  elif [[ $lst1_even -gt $lst2_odd ]];\
    \ then\n    echo \"YES\"\n  elif [[ $lst1_even -lt $lst2_odd ]]; then\n    echo\
    \ \"YES\"\n  fi\n}\n\ncandidate() {\n    exchange \"$@\"\n}\n\nset -e\nrun_test()\
    \ {\n    [[ $(candidate \"1 2 3 4\" \"1 2 3 4\") = \"YES\" ]]\n    [[ $(candidate\
    \ \"1 2 3 4\" \"1 5 3 4\") = \"NO\" ]]\n    [[ $(candidate \"1 2 3 4\" \"2 1 4\
    \ 3\") = \"YES\" ]]\n    [[ $(candidate \"5 7 3\" \"2 6 4\") = \"YES\" ]]\n  \
    \  [[ $(candidate \"5 7 3\" \"2 6 3\") = \"NO\" ]]\n    [[ $(candidate \"3 2 6\
    \ 1 8 9\" \"3 5 5 1 1 1\") = \"NO\" ]]\n    [[ $(candidate \"100 200\" \"200 200\"\
    ) = \"YES\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660002369
- exit_code: 1
  program: "#!/bin/bash\n# In this problem, you will implement a function that takes\
    \ two lists of numbers,\n# and determines whether it is possible to perform an\
    \ exchange of elements\n# between them to make lst1 a list of only even numbers.\n\
    # There is no limit on the number of exchanged elements between lst1 and lst2.\n\
    # If it is possible to exchange elements between the lst1 and lst2 to make\n#\
    \ all the elements of lst1 to be even, return \"YES\".\n# Otherwise, return \"\
    NO\".\n# For example:\n# It is assumed that the input lists will be non-empty.\n\
    #\n# $1 is a space-separated list\n# $2 is a space-separated list\nexchange()\
    \ {\n    local -a lst1=($1)\n    local -a lst2=($2)\n    local -a evens=()\n \
    \   local -a odds=()\n    local -a result=()\n    local -i i=0\n    local -i j=0\n\
    \    local -i k=0\n    local -i l=0\n    local -i m=0\n    local -i n=0\n    local\
    \ -i o=0\n    local -i p=0\n    local -i q=0\n    local -i r=0\n    local -i s=0\n\
    \    local -i t=0\n    local -i u=0\n    local -i v=0\n    local -i w=0\n    local\
    \ -i x=0\n    local -i y=0\n    local -i z=0\n    local -i aa=0\n    local -i\
    \ bb=0\n    local -i cc=0\n    local -i dd=0\n    local -i ee=0\n    local -i\
    \ ff=0\n    local -i gg=0\n    local -i hh=0\n    local -i ii=0\n    local -i\
    \ jj=0\n    local -i kk=0\n    local -i ll=0\n    local -i mm=0\n    local -i\
    \ nn=0\n    local -i oo=0\n    local -i pp=0\n    local -i qq=0\n    local -i\
    \ rr=0\n    local -i ss=0\n    local -i tt=0\n    local -i uu=0\n    local -i\
    \ vv=0\n    local -i ww=0\n    local -i xx=0\n    local -i yy=0\n    local -i\
    \ zz=0\n    local -i aaa=0\n    local -i bbb=0\n    local -i ccc=0\n    local\
    \ -i ddd=0\n    local -i eee=0\n    local -i fff=0\n    local -i ggg=0\n    local\
    \ -i hhh=0\n    local -i iii=0\n    local -i jjj=0\n    local -i\n}\n\ncandidate()\
    \ {\n    exchange \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"1 2\
    \ 3 4\" \"1 2 3 4\") = \"YES\" ]]\n    [[ $(candidate \"1 2 3 4\" \"1 5 3 4\"\
    ) = \"NO\" ]]\n    [[ $(candidate \"1 2 3 4\" \"2 1 4 3\") = \"YES\" ]]\n    [[\
    \ $(candidate \"5 7 3\" \"2 6 4\") = \"YES\" ]]\n    [[ $(candidate \"5 7 3\"\
    \ \"2 6 3\") = \"NO\" ]]\n    [[ $(candidate \"3 2 6 1 8 9\" \"3 5 5 1 1 1\")\
    \ = \"NO\" ]]\n    [[ $(candidate \"100 200\" \"200 200\") = \"YES\" ]]\n}\n\n\
    run_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660002369
- exit_code: 1
  program: "#!/bin/bash\n# In this problem, you will implement a function that takes\
    \ two lists of numbers,\n# and determines whether it is possible to perform an\
    \ exchange of elements\n# between them to make lst1 a list of only even numbers.\n\
    # There is no limit on the number of exchanged elements between lst1 and lst2.\n\
    # If it is possible to exchange elements between the lst1 and lst2 to make\n#\
    \ all the elements of lst1 to be even, return \"YES\".\n# Otherwise, return \"\
    NO\".\n# For example:\n# It is assumed that the input lists will be non-empty.\n\
    #\n# $1 is a space-separated list\n# $2 is a space-separated list\nexchange()\
    \ {\n    local lst1=($1)\n    local lst2=($2)\n    local lst1_odd=()\n    local\
    \ lst2_even=()\n    local lst1_even=()\n    local lst2_odd=()\n    local lst1_even_count=0\n\
    \    local lst2_even_count=0\n    local lst1_odd_count=0\n    local lst2_odd_count=0\n\
    \    local i=0\n    local j=0\n    local k=0\n    local l=0\n    local m=0\n \
    \   local n=0\n    local o=0\n    local p=0\n    local q=0\n    local r=0\n  \
    \  local s=0\n    local t=0\n    local u=0\n    local v=0\n    local w=0\n   \
    \ local x=0\n    local y=0\n    local z=0\n    local aa=0\n    local bb=0\n  \
    \  local cc=0\n    local dd=0\n    local ee=0\n    local ff=0\n    local gg=0\n\
    \    local hh=0\n    local ii=0\n    local jj=0\n    local kk=0\n    local ll=0\n\
    \    local mm=0\n    local nn=0\n    local oo=0\n    local pp=0\n    local qq=0\n\
    \    local rr=0\n    local ss=0\n    local tt=0\n    local uu=0\n    local vv=0\n\
    \    local ww=0\n    local xx=0\n    local yy=0\n    local zz=0\n    local aaa=0\n\
    \    local bbb=0\n    local ccc=0\n    local ddd=0\n    local eee=0\n    local\
    \ fff=0\n    local ggg=0\n    local hhh=0\n    local iii=0\n    local jjj=0\n\
    \    local kkk=0\n    local lll=0\n    local mmm=0\n    local nnn=0\n    local\
    \ ooo=0\n    local ppp=0\n    local qqq=0\n    local rrr\n}\n\ncandidate() {\n\
    \    exchange \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"1 2 3 4\"\
    \ \"1 2 3 4\") = \"YES\" ]]\n    [[ $(candidate \"1 2 3 4\" \"1 5 3 4\") = \"\
    NO\" ]]\n    [[ $(candidate \"1 2 3 4\" \"2 1 4 3\") = \"YES\" ]]\n    [[ $(candidate\
    \ \"5 7 3\" \"2 6 4\") = \"YES\" ]]\n    [[ $(candidate \"5 7 3\" \"2 6 3\") =\
    \ \"NO\" ]]\n    [[ $(candidate \"3 2 6 1 8 9\" \"3 5 5 1 1 1\") = \"NO\" ]]\n\
    \    [[ $(candidate \"100 200\" \"200 200\") = \"YES\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660002369
- exit_code: 2
  program: "#!/bin/bash\n# In this problem, you will implement a function that takes\
    \ two lists of numbers,\n# and determines whether it is possible to perform an\
    \ exchange of elements\n# between them to make lst1 a list of only even numbers.\n\
    # There is no limit on the number of exchanged elements between lst1 and lst2.\n\
    # If it is possible to exchange elements between the lst1 and lst2 to make\n#\
    \ all the elements of lst1 to be even, return \"YES\".\n# Otherwise, return \"\
    NO\".\n# For example:\n# It is assumed that the input lists will be non-empty.\n\
    #\n# $1 is a space-separated list\n# $2 is a space-separated list\nexchange()\
    \ {\n  local lst1=($1)\n  local lst2=($2)\n  local lst1_even_count=0\n  local\
    \ lst2_odd_count=0\n  local lst1_odd_count=0\n  local lst2_even_count=0\n  local\
    \ lst1_odd_index=()\n  local lst2_even_index=()\n  local lst1_even_index=()\n\
    \  local lst2_odd_index=()\n  local i=0\n  local j=0\n  local k=0\n  local l=0\n\
    \  for ((i=0; i<${#lst1[@]}; i++)); do\n    if [[ $((${lst1[$i]} % 2)) -eq 0 ]];\
    \ then\n      lst1_even_count=$(($lst1_even_count + 1))\n      lst1_even_index[$j]=$i\n\
    \      j=$(($j + 1))\n    else\n      lst1_odd_count=$(($lst1_odd_count + 1))\n\
    \      lst1_odd_index[$k]=$i\n      k=$(($k + 1))\n    fi\n  done\n  for ((i=0;\
    \ i<${#lst2[@]}; i++)); do\n    if [[ $((${lst2[$i]} % 2)) -eq 0 ]]; then\n  \
    \    lst2_even_count=$(($lst2_even_count + 1))\n      lst2_even_index[$j]=$i\n\
    \      j=$(($j + 1))\n    else\n      lst2_odd_count=$(($lst2_odd_count + 1))\n\
    \      lst2_odd_index[$l]=$i\n      l=$(($l + 1))\n    fi\n  done\n  if [[ $lst1_even_count\
    \ -eq ${#lst1[@]} ]]; then\n    echo \"YES\"\n  elif [[ $lst2_odd_count -eq ${#lst2[@]}\
    \ ]]; then\n    echo \"YES\"\n  elif [[ $lst1_even\n}\n\ncandidate() {\n    exchange\
    \ \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"1 2 3 4\" \"1 2 3 4\"\
    ) = \"YES\" ]]\n    [[ $(candidate \"1 2 3 4\" \"1 5 3 4\") = \"NO\" ]]\n    [[\
    \ $(candidate \"1 2 3 4\" \"2 1 4 3\") = \"YES\" ]]\n    [[ $(candidate \"5 7\
    \ 3\" \"2 6 4\") = \"YES\" ]]\n    [[ $(candidate \"5 7 3\" \"2 6 3\") = \"NO\"\
    \ ]]\n    [[ $(candidate \"3 2 6 1 8 9\" \"3 5 5 1 1 1\") = \"NO\" ]]\n    [[\
    \ $(candidate \"100 200\" \"200 200\") = \"YES\" ]]\n}\n\nrun_test"
  status: SyntaxError
  stderr: '/tmp/tmpgnffy4fe.sh: line 55: unexpected token `newline'', conditional
    binary operator expected

    /tmp/tmpgnffy4fe.sh: line 55: syntax error near `$lst1_even''

    /tmp/tmpgnffy4fe.sh: line 55: `  elif [[ $lst1_even''

    '
  stdout: ''
  timestamp: 1660002369
- exit_code: 1
  program: "#!/bin/bash\n# In this problem, you will implement a function that takes\
    \ two lists of numbers,\n# and determines whether it is possible to perform an\
    \ exchange of elements\n# between them to make lst1 a list of only even numbers.\n\
    # There is no limit on the number of exchanged elements between lst1 and lst2.\n\
    # If it is possible to exchange elements between the lst1 and lst2 to make\n#\
    \ all the elements of lst1 to be even, return \"YES\".\n# Otherwise, return \"\
    NO\".\n# For example:\n# It is assumed that the input lists will be non-empty.\n\
    #\n# $1 is a space-separated list\n# $2 is a space-separated list\nexchange()\
    \ {\n    local lst1=\"$1\"\n    local lst2=\"$2\"\n    local lst1_odd=()\n   \
    \ local lst2_even=()\n    local lst1_even=()\n    local lst2_odd=()\n    for i\
    \ in $lst1; do\n        if [[ $((i % 2)) -eq 0 ]]; then\n            lst1_even+=($i)\n\
    \        else\n            lst1_odd+=($i)\n        fi\n    done\n    for i in\
    \ $lst2; do\n        if [[ $((i % 2)) -eq 0 ]]; then\n            lst2_even+=($i)\n\
    \        else\n            lst2_odd+=($i)\n        fi\n    done\n    if [[ ${#lst1_odd[@]}\
    \ -eq 0 ]]; then\n        echo \"YES\"\n    elif [[ ${#lst2_even[@]} -eq 0 ]];\
    \ then\n        echo \"NO\"\n    else\n        echo \"YES\"\n    fi\n}\n\ncandidate()\
    \ {\n    exchange \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"1 2\
    \ 3 4\" \"1 2 3 4\") = \"YES\" ]]\n    [[ $(candidate \"1 2 3 4\" \"1 5 3 4\"\
    ) = \"NO\" ]]\n    [[ $(candidate \"1 2 3 4\" \"2 1 4 3\") = \"YES\" ]]\n    [[\
    \ $(candidate \"5 7 3\" \"2 6 4\") = \"YES\" ]]\n    [[ $(candidate \"5 7 3\"\
    \ \"2 6 3\") = \"NO\" ]]\n    [[ $(candidate \"3 2 6 1 8 9\" \"3 5 5 1 1 1\")\
    \ = \"NO\" ]]\n    [[ $(candidate \"100 200\" \"200 200\") = \"YES\" ]]\n}\n\n\
    run_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660002369
- exit_code: 1
  program: "#!/bin/bash\n# In this problem, you will implement a function that takes\
    \ two lists of numbers,\n# and determines whether it is possible to perform an\
    \ exchange of elements\n# between them to make lst1 a list of only even numbers.\n\
    # There is no limit on the number of exchanged elements between lst1 and lst2.\n\
    # If it is possible to exchange elements between the lst1 and lst2 to make\n#\
    \ all the elements of lst1 to be even, return \"YES\".\n# Otherwise, return \"\
    NO\".\n# For example:\n# It is assumed that the input lists will be non-empty.\n\
    #\n# $1 is a space-separated list\n# $2 is a space-separated list\nexchange()\
    \ {\n  local lst1=($1)\n  local lst2=($2)\n  local lst1_even=()\n  local lst1_odd=()\n\
    \  local lst2_even=()\n  local lst2_odd=()\n  local lst1_even_count=0\n  local\
    \ lst1_odd_count=0\n  local lst2_even_count=0\n  local lst2_odd_count=0\n  local\
    \ i=0\n  local j=0\n  local k=0\n  local l=0\n  local m=0\n  local n=0\n  local\
    \ o=0\n  local p=0\n  local q=0\n  local r=0\n  local s=0\n  local t=0\n  local\
    \ u=0\n  local v=0\n  local w=0\n  local x=0\n  local y=0\n  local z=0\n  local\
    \ aa=0\n  local bb=0\n  local cc=0\n  local dd=0\n  local ee=0\n  local ff=0\n\
    \  local gg=0\n  local hh=0\n  local ii=0\n  local jj=0\n  local kk=0\n  local\
    \ ll=0\n  local mm=0\n  local nn=0\n  local oo=0\n  local pp=0\n  local qq=0\n\
    \  local rr=0\n  local ss=0\n  local tt=0\n  local uu=0\n  local vv=0\n  local\
    \ ww=0\n  local xx=0\n  local yy=0\n  local zz=0\n  local aaa=0\n  local bbb=0\n\
    \  local ccc=0\n  local ddd=0\n  local eee=0\n  local fff=0\n  local ggg=0\n \
    \ local hhh=0\n  local iii=0\n  local jjj=0\n  local kkk=0\n  local lll=0\n  local\
    \ mmm=0\n  local nnn=0\n  local ooo=0\n  local ppp=0\n  local qqq=0\n  local rrr\n\
    }\n\ncandidate() {\n    exchange \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate\
    \ \"1 2 3 4\" \"1 2 3 4\") = \"YES\" ]]\n    [[ $(candidate \"1 2 3 4\" \"1 5\
    \ 3 4\") = \"NO\" ]]\n    [[ $(candidate \"1 2 3 4\" \"2 1 4 3\") = \"YES\" ]]\n\
    \    [[ $(candidate \"5 7 3\" \"2 6 4\") = \"YES\" ]]\n    [[ $(candidate \"5\
    \ 7 3\" \"2 6 3\") = \"NO\" ]]\n    [[ $(candidate \"3 2 6 1 8 9\" \"3 5 5 1 1\
    \ 1\") = \"NO\" ]]\n    [[ $(candidate \"100 200\" \"200 200\") = \"YES\" ]]\n\
    }\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660002369
- exit_code: 1
  program: "#!/bin/bash\n# In this problem, you will implement a function that takes\
    \ two lists of numbers,\n# and determines whether it is possible to perform an\
    \ exchange of elements\n# between them to make lst1 a list of only even numbers.\n\
    # There is no limit on the number of exchanged elements between lst1 and lst2.\n\
    # If it is possible to exchange elements between the lst1 and lst2 to make\n#\
    \ all the elements of lst1 to be even, return \"YES\".\n# Otherwise, return \"\
    NO\".\n# For example:\n# It is assumed that the input lists will be non-empty.\n\
    #\n# $1 is a space-separated list\n# $2 is a space-separated list\nexchange()\
    \ {\n  local lst1=($1)\n  local lst2=($2)\n  local lst1_odd=()\n  local lst2_even=()\n\
    \  local lst1_even=()\n  local lst2_odd=()\n  local lst1_even_count=0\n  local\
    \ lst2_even_count=0\n  local lst1_odd_count=0\n  local lst2_odd_count=0\n  local\
    \ lst1_even_odd_diff=0\n  local lst2_even_odd_diff=0\n  local lst1_even_odd_diff_abs=0\n\
    \  local lst2_even_odd_diff_abs=0\n  local lst1_even_odd_diff_sum=0\n  local lst2_even_odd_diff_sum=0\n\
    \  local lst1_even_odd_diff_sum_abs=0\n  local lst2_even_odd_diff_sum_abs=0\n\
    \  local lst1_even_odd_diff_sum_abs_diff=0\n  local lst2_even_odd_diff_sum_abs_diff=0\n\
    \  local lst1_even_odd_diff_sum_abs_diff_abs=0\n  local lst2_even_odd_diff_sum_abs_diff_abs=0\n\
    \  local lst1_even_odd_diff_sum_abs_diff_abs_diff=0\n  local lst2_even_odd_diff_sum_abs_diff_abs_diff=0\n\
    \  local lst1_even_odd_diff_sum_abs_diff_abs_diff_abs=0\n  local lst2_even_odd_diff_sum_abs_diff_abs_diff_abs=0\n\
    \  local lst1_even_odd_diff_sum_abs_diff_abs_diff_abs_diff=0\n  local lst2_even_odd_diff_sum_abs_diff_abs_diff_abs_diff=0\n\
    \  local lst1_even_odd_diff_sum_abs_diff_abs_diff_abs_diff_abs=0\n  local lst2\n\
    }\n\ncandidate() {\n    exchange \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate\
    \ \"1 2 3 4\" \"1 2 3 4\") = \"YES\" ]]\n    [[ $(candidate \"1 2 3 4\" \"1 5\
    \ 3 4\") = \"NO\" ]]\n    [[ $(candidate \"1 2 3 4\" \"2 1 4 3\") = \"YES\" ]]\n\
    \    [[ $(candidate \"5 7 3\" \"2 6 4\") = \"YES\" ]]\n    [[ $(candidate \"5\
    \ 7 3\" \"2 6 3\") = \"NO\" ]]\n    [[ $(candidate \"3 2 6 1 8 9\" \"3 5 5 1 1\
    \ 1\") = \"NO\" ]]\n    [[ $(candidate \"100 200\" \"200 200\") = \"YES\" ]]\n\
    }\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660002369
- exit_code: 1
  program: "#!/bin/bash\n# In this problem, you will implement a function that takes\
    \ two lists of numbers,\n# and determines whether it is possible to perform an\
    \ exchange of elements\n# between them to make lst1 a list of only even numbers.\n\
    # There is no limit on the number of exchanged elements between lst1 and lst2.\n\
    # If it is possible to exchange elements between the lst1 and lst2 to make\n#\
    \ all the elements of lst1 to be even, return \"YES\".\n# Otherwise, return \"\
    NO\".\n# For example:\n# It is assumed that the input lists will be non-empty.\n\
    #\n# $1 is a space-separated list\n# $2 is a space-separated list\nexchange()\
    \ {\n  local lst1=($1)\n  local lst2=($2)\n  local lst1_even=()\n  local lst1_odd=()\n\
    \  local lst2_even=()\n  local lst2_odd=()\n  for i in ${lst1[@]}; do\n    if\
    \ (( i % 2 == 0 )); then\n      lst1_even+=($i)\n    else\n      lst1_odd+=($i)\n\
    \    fi\n  done\n  for i in ${lst2[@]}; do\n    if (( i % 2 == 0 )); then\n  \
    \    lst2_even+=($i)\n    else\n      lst2_odd+=($i)\n    fi\n  done\n  if ((\
    \ ${#lst1_even[@]} == ${#lst1[@]} )); then\n    echo \"YES\"\n  elif (( ${#lst1_even[@]}\
    \ + ${#lst2_odd[@]} >= ${#lst1[@]} )); then\n    echo \"YES\"\n  else\n    echo\
    \ \"NO\"\n  fi\n}\n\ncandidate() {\n    exchange \"$@\"\n}\n\nset -e\nrun_test()\
    \ {\n    [[ $(candidate \"1 2 3 4\" \"1 2 3 4\") = \"YES\" ]]\n    [[ $(candidate\
    \ \"1 2 3 4\" \"1 5 3 4\") = \"NO\" ]]\n    [[ $(candidate \"1 2 3 4\" \"2 1 4\
    \ 3\") = \"YES\" ]]\n    [[ $(candidate \"5 7 3\" \"2 6 4\") = \"YES\" ]]\n  \
    \  [[ $(candidate \"5 7 3\" \"2 6 3\") = \"NO\" ]]\n    [[ $(candidate \"3 2 6\
    \ 1 8 9\" \"3 5 5 1 1 1\") = \"NO\" ]]\n    [[ $(candidate \"100 200\" \"200 200\"\
    ) = \"YES\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660002369
- exit_code: 1
  program: "#!/bin/bash\n# In this problem, you will implement a function that takes\
    \ two lists of numbers,\n# and determines whether it is possible to perform an\
    \ exchange of elements\n# between them to make lst1 a list of only even numbers.\n\
    # There is no limit on the number of exchanged elements between lst1 and lst2.\n\
    # If it is possible to exchange elements between the lst1 and lst2 to make\n#\
    \ all the elements of lst1 to be even, return \"YES\".\n# Otherwise, return \"\
    NO\".\n# For example:\n# It is assumed that the input lists will be non-empty.\n\
    #\n# $1 is a space-separated list\n# $2 is a space-separated list\nexchange()\
    \ {\n  local lst1=\"$1\"\n  local lst2=\"$2\"\n  local lst1_even=0\n  local lst2_even=0\n\
    \  local lst1_odd=0\n  local lst2_odd=0\n  local lst1_len=0\n  local lst2_len=0\n\
    \  local lst1_even_len=0\n  local lst2_even_len=0\n  local lst1_odd_len=0\n  local\
    \ lst2_odd_len=0\n  local lst1_even_odd_diff=0\n  local lst2_even_odd_diff=0\n\
    \  local lst1_even_odd_diff_abs=0\n  local lst2_even_odd_diff_abs=0\n  local lst1_even_odd_diff_abs_min=0\n\
    \  local lst2_even_odd_diff_abs_min=0\n  local lst1_even_odd_diff_abs_min_index=0\n\
    \  local lst2_even_odd_diff_abs_min_index=0\n  local lst1_even_odd_diff_abs_min_value=0\n\
    \  local lst2_even_odd_diff_abs_min_value=0\n  local lst1_even_odd_diff_abs_min_value_even=0\n\
    \  local lst2_even_odd_diff_abs_min_value_even=0\n  local lst1_even_odd_diff_abs_min_value_odd=0\n\
    \  local lst2_even_odd_diff_abs_min_value_odd=0\n  local lst1_even_odd_diff_abs_min_value_even_odd_diff=0\n\
    \  local lst2_even_odd_diff_abs_min_value_even_odd_diff=0\n  local lst1_even_odd_diff_abs_min_value_even_odd_diff_abs=0\n\
    \  local lst2_even_odd_diff_abs_min_value_even_odd_diff_abs=0\n  local lst1_even_odd_diff\n\
    }\n\ncandidate() {\n    exchange \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate\
    \ \"1 2 3 4\" \"1 2 3 4\") = \"YES\" ]]\n    [[ $(candidate \"1 2 3 4\" \"1 5\
    \ 3 4\") = \"NO\" ]]\n    [[ $(candidate \"1 2 3 4\" \"2 1 4 3\") = \"YES\" ]]\n\
    \    [[ $(candidate \"5 7 3\" \"2 6 4\") = \"YES\" ]]\n    [[ $(candidate \"5\
    \ 7 3\" \"2 6 3\") = \"NO\" ]]\n    [[ $(candidate \"3 2 6 1 8 9\" \"3 5 5 1 1\
    \ 1\") = \"NO\" ]]\n    [[ $(candidate \"100 200\" \"200 200\") = \"YES\" ]]\n\
    }\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660002369
- exit_code: 1
  program: "#!/bin/bash\n# In this problem, you will implement a function that takes\
    \ two lists of numbers,\n# and determines whether it is possible to perform an\
    \ exchange of elements\n# between them to make lst1 a list of only even numbers.\n\
    # There is no limit on the number of exchanged elements between lst1 and lst2.\n\
    # If it is possible to exchange elements between the lst1 and lst2 to make\n#\
    \ all the elements of lst1 to be even, return \"YES\".\n# Otherwise, return \"\
    NO\".\n# For example:\n# It is assumed that the input lists will be non-empty.\n\
    #\n# $1 is a space-separated list\n# $2 is a space-separated list\nexchange()\
    \ {\n  local lst1=($1)\n  local lst2=($2)\n  local lst1_odds=()\n  local lst2_evens=()\n\
    \  for i in ${lst1[@]}; do\n    if [[ $((i % 2)) -ne 0 ]]; then\n      lst1_odds+=($i)\n\
    \    fi\n  done\n  for i in ${lst2[@]}; do\n    if [[ $((i % 2)) -eq 0 ]]; then\n\
    \      lst2_evens+=($i)\n    fi\n  done\n  if [[ ${#lst1_odds[@]} -eq ${#lst2_evens[@]}\
    \ ]]; then\n    echo \"YES\"\n  else\n    echo \"NO\"\n  fi\n}\n\ncandidate()\
    \ {\n    exchange \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"1 2\
    \ 3 4\" \"1 2 3 4\") = \"YES\" ]]\n    [[ $(candidate \"1 2 3 4\" \"1 5 3 4\"\
    ) = \"NO\" ]]\n    [[ $(candidate \"1 2 3 4\" \"2 1 4 3\") = \"YES\" ]]\n    [[\
    \ $(candidate \"5 7 3\" \"2 6 4\") = \"YES\" ]]\n    [[ $(candidate \"5 7 3\"\
    \ \"2 6 3\") = \"NO\" ]]\n    [[ $(candidate \"3 2 6 1 8 9\" \"3 5 5 1 1 1\")\
    \ = \"NO\" ]]\n    [[ $(candidate \"100 200\" \"200 200\") = \"YES\" ]]\n}\n\n\
    run_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660002369
- exit_code: 1
  program: "#!/bin/bash\n# In this problem, you will implement a function that takes\
    \ two lists of numbers,\n# and determines whether it is possible to perform an\
    \ exchange of elements\n# between them to make lst1 a list of only even numbers.\n\
    # There is no limit on the number of exchanged elements between lst1 and lst2.\n\
    # If it is possible to exchange elements between the lst1 and lst2 to make\n#\
    \ all the elements of lst1 to be even, return \"YES\".\n# Otherwise, return \"\
    NO\".\n# For example:\n# It is assumed that the input lists will be non-empty.\n\
    #\n# $1 is a space-separated list\n# $2 is a space-separated list\nexchange()\
    \ {\n  local lst1=($1)\n  local lst2=($2)\n  local lst1_odds=()\n  local lst2_evens=()\n\
    \  local lst1_evens=()\n  local lst2_odds=()\n  local i=0\n  local j=0\n  local\
    \ k=0\n  local l=0\n  local len1=${#lst1[@]}\n  local len2=${#lst2[@]}\n  local\
    \ len1_odds=0\n  local len2_evens=0\n  local len1_evens=0\n  local len2_odds=0\n\
    \  local exchange_possible=0\n  local exchange_possible_1=0\n  local exchange_possible_2=0\n\
    \  local exchange_possible_3=0\n  local exchange_possible_4=0\n  local exchange_possible_5=0\n\
    \  local exchange_possible_6=0\n  local exchange_possible_7=0\n  local exchange_possible_8=0\n\
    \  local exchange_possible_9=0\n  local exchange_possible_10=0\n  local exchange_possible_11=0\n\
    \  local exchange_possible_12=0\n  local exchange_possible_13=0\n  local exchange_possible_14=0\n\
    \  local exchange_possible_15=0\n  local exchange_possible_16=0\n  local exchange_possible_17=0\n\
    \  local exchange_possible_18=0\n  local exchange_possible_19=0\n  local exchange_possible_20=0\n\
    \  local exchange_possible_21=0\n  local exchange_possible_22=0\n  local exchange_possible_23=0\n\
    \  local exchange_possible_24=0\n  local exchange_possible_25=0\n  local exchange_possible_26=0\n\
    \  local exchange_possible_27=0\n  local exchange_possible_28=0\n  local exchange_possible_29=0\n\
    \  local exchange_possible_30=0\n  local exchange_possible_31=0\n  local exchange_p\n\
    }\n\ncandidate() {\n    exchange \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate\
    \ \"1 2 3 4\" \"1 2 3 4\") = \"YES\" ]]\n    [[ $(candidate \"1 2 3 4\" \"1 5\
    \ 3 4\") = \"NO\" ]]\n    [[ $(candidate \"1 2 3 4\" \"2 1 4 3\") = \"YES\" ]]\n\
    \    [[ $(candidate \"5 7 3\" \"2 6 4\") = \"YES\" ]]\n    [[ $(candidate \"5\
    \ 7 3\" \"2 6 3\") = \"NO\" ]]\n    [[ $(candidate \"3 2 6 1 8 9\" \"3 5 5 1 1\
    \ 1\") = \"NO\" ]]\n    [[ $(candidate \"100 200\" \"200 200\") = \"YES\" ]]\n\
    }\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660002369
- exit_code: 2
  program: "#!/bin/bash\n# In this problem, you will implement a function that takes\
    \ two lists of numbers,\n# and determines whether it is possible to perform an\
    \ exchange of elements\n# between them to make lst1 a list of only even numbers.\n\
    # There is no limit on the number of exchanged elements between lst1 and lst2.\n\
    # If it is possible to exchange elements between the lst1 and lst2 to make\n#\
    \ all the elements of lst1 to be even, return \"YES\".\n# Otherwise, return \"\
    NO\".\n# For example:\n# It is assumed that the input lists will be non-empty.\n\
    #\n# $1 is a space-separated list\n# $2 is a space-separated list\nexchange()\
    \ {\n  local lst1=($1)\n  local lst2=($2)\n  local even_count=0\n  local odd_count=0\n\
    \  local even_index=0\n  local odd_index=0\n  local i=0\n  local j=0\n  local\
    \ temp=0\n  local result=\"NO\"\n\n  for ((i=0; i<${#lst1[@]}; i++)); do\n   \
    \ if [[ $((${lst1[$i]} % 2)) -eq 0 ]]; then\n      even_count=$((even_count +\
    \ 1))\n    else\n      odd_count=$((odd_count + 1))\n    fi\n  done\n\n  for ((i=0;\
    \ i<${#lst2[@]}; i++)); do\n    if [[ $((${lst2[$i]} % 2)) -eq 0 ]]; then\n  \
    \    even_count=$((even_count + 1))\n    else\n      odd_count=$((odd_count +\
    \ 1))\n    fi\n  done\n\n  if [[ $even_count -eq ${#lst1[@]} ]]; then\n    result=\"\
    YES\"\n  else\n    for ((i=0; i<${#lst1[@]}; i++)); do\n      if [[ $((${lst1[$i]}\
    \ % 2)) -eq 0 ]]; then\n        even_index=$i\n      else\n        odd_index=$i\n\
    \      fi\n    done\n\n    for ((i=0; i<${#lst2[@]}; i++)); do\n      if [[ $((${lst2[$i]}\
    \ % 2)) -eq 0 ]]; then\n        even_index=$i\n      else\n        odd_index=$i\n\
    \      fi\n    done\n\n    temp=${lst1[$even_index]}\n    lst1[$even_index]=${lst1[$odd_index]}\n\
    \    lst1[$odd_index]=$temp\n\n    for ((i=0; i<${#lst1[@]}; i++)); do\n     \
    \ if [[ $((${lst1[$i]} % 2)) -eq 0 ]]; then\n        even_count=$((even_count\
    \ +\n}\n\ncandidate() {\n    exchange \"$@\"\n}\n\nset -e\nrun_test() {\n    [[\
    \ $(candidate \"1 2 3 4\" \"1 2 3 4\") = \"YES\" ]]\n    [[ $(candidate \"1 2\
    \ 3 4\" \"1 5 3 4\") = \"NO\" ]]\n    [[ $(candidate \"1 2 3 4\" \"2 1 4 3\")\
    \ = \"YES\" ]]\n    [[ $(candidate \"5 7 3\" \"2 6 4\") = \"YES\" ]]\n    [[ $(candidate\
    \ \"5 7 3\" \"2 6 3\") = \"NO\" ]]\n    [[ $(candidate \"3 2 6 1 8 9\" \"3 5 5\
    \ 1 1 1\") = \"NO\" ]]\n    [[ $(candidate \"100 200\" \"200 200\") = \"YES\"\
    \ ]]\n}\n\nrun_test"
  status: SyntaxError
  stderr: '/tmp/tmpgdx8q4j2.sh: line 67: unexpected EOF while looking for matching
    `)''

    /tmp/tmpgdx8q4j2.sh: line 86: syntax error: unexpected end of file

    '
  stdout: ''
  timestamp: 1660002369
- exit_code: 1
  program: "#!/bin/bash\n# In this problem, you will implement a function that takes\
    \ two lists of numbers,\n# and determines whether it is possible to perform an\
    \ exchange of elements\n# between them to make lst1 a list of only even numbers.\n\
    # There is no limit on the number of exchanged elements between lst1 and lst2.\n\
    # If it is possible to exchange elements between the lst1 and lst2 to make\n#\
    \ all the elements of lst1 to be even, return \"YES\".\n# Otherwise, return \"\
    NO\".\n# For example:\n# It is assumed that the input lists will be non-empty.\n\
    #\n# $1 is a space-separated list\n# $2 is a space-separated list\nexchange()\
    \ {\n  local lst1=\"$1\"\n  local lst2=\"$2\"\n  local lst1_even=0\n  local lst2_even=0\n\
    \  local lst1_odd=0\n  local lst2_odd=0\n  for i in $lst1; do\n    if [ $((i %\
    \ 2)) -eq 0 ]; then\n      lst1_even=$((lst1_even + 1))\n    else\n      lst1_odd=$((lst1_odd\
    \ + 1))\n    fi\n  done\n  for i in $lst2; do\n    if [ $((i % 2)) -eq 0 ]; then\n\
    \      lst2_even=$((lst2_even + 1))\n    else\n      lst2_odd=$((lst2_odd + 1))\n\
    \    fi\n  done\n  if [ $lst1_even -eq 0 ]; then\n    echo \"NO\"\n  elif [ $lst2_odd\
    \ -eq 0 ]; then\n    echo \"NO\"\n  elif [ $lst1_even -eq $lst2_odd ]; then\n\
    \    echo \"YES\"\n  elif [ $lst1_even -gt $lst2_odd ]; then\n    echo \"YES\"\
    \n  elif [ $lst1_even -lt $lst2_odd ]; then\n    echo \"YES\"\n  fi\n}\n\ncandidate()\
    \ {\n    exchange \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"1 2\
    \ 3 4\" \"1 2 3 4\") = \"YES\" ]]\n    [[ $(candidate \"1 2 3 4\" \"1 5 3 4\"\
    ) = \"NO\" ]]\n    [[ $(candidate \"1 2 3 4\" \"2 1 4 3\") = \"YES\" ]]\n    [[\
    \ $(candidate \"5 7 3\" \"2 6 4\") = \"YES\" ]]\n    [[ $(candidate \"5 7 3\"\
    \ \"2 6 3\") = \"NO\" ]]\n    [[ $(candidate \"3 2 6 1 8 9\" \"3 5 5 1 1 1\")\
    \ = \"NO\" ]]\n    [[ $(candidate \"100 200\" \"200 200\") = \"YES\" ]]\n}\n\n\
    run_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660002369
- exit_code: 1
  program: "#!/bin/bash\n# In this problem, you will implement a function that takes\
    \ two lists of numbers,\n# and determines whether it is possible to perform an\
    \ exchange of elements\n# between them to make lst1 a list of only even numbers.\n\
    # There is no limit on the number of exchanged elements between lst1 and lst2.\n\
    # If it is possible to exchange elements between the lst1 and lst2 to make\n#\
    \ all the elements of lst1 to be even, return \"YES\".\n# Otherwise, return \"\
    NO\".\n# For example:\n# It is assumed that the input lists will be non-empty.\n\
    #\n# $1 is a space-separated list\n# $2 is a space-separated list\nexchange()\
    \ {\n  local lst1=$1\n  local lst2=$2\n  local lst1_even=0\n  local lst2_even=0\n\
    \  local lst1_odd=0\n  local lst2_odd=0\n  local lst1_len=0\n  local lst2_len=0\n\
    \  local i=0\n  local j=0\n  local tmp=0\n  local tmp_lst1=()\n  local tmp_lst2=()\n\
    \  local tmp_lst1_len=0\n  local tmp_lst2_len=0\n  local tmp_lst1_even=0\n  local\
    \ tmp_lst2_even=0\n  local tmp_lst1_odd=0\n  local tmp_lst2_odd=0\n  local tmp_lst1_odd_idx=0\n\
    \  local tmp_lst2_even_idx=0\n  local tmp_lst1_even_idx=0\n  local tmp_lst2_odd_idx=0\n\
    \  local tmp_lst1_odd_len=0\n  local tmp_lst2_even_len=0\n  local tmp_lst1_even_len=0\n\
    \  local tmp_lst2_odd_len=0\n  local tmp_lst1_odd_idx_list=()\n  local tmp_lst2_even_idx_list=()\n\
    \  local tmp_lst1_even_idx_list=()\n  local tmp_lst2_odd_idx_list=()\n  local\
    \ tmp_lst1_odd_len_list=()\n  local tmp_lst2_even_len_list=()\n  local tmp_lst1_even_len_list=()\n\
    \  local tmp_lst2_odd_len_list=()\n  local tmp_lst1_odd_idx_list_len=0\n  local\
    \ tmp_lst2_even_idx_list_len=0\n  local tmp_lst1_even_idx_list_len=0\n  local\
    \ tmp_lst2_odd_idx_list_len=0\n \n}\n\ncandidate() {\n    exchange \"$@\"\n}\n\
    \nset -e\nrun_test() {\n    [[ $(candidate \"1 2 3 4\" \"1 2 3 4\") = \"YES\"\
    \ ]]\n    [[ $(candidate \"1 2 3 4\" \"1 5 3 4\") = \"NO\" ]]\n    [[ $(candidate\
    \ \"1 2 3 4\" \"2 1 4 3\") = \"YES\" ]]\n    [[ $(candidate \"5 7 3\" \"2 6 4\"\
    ) = \"YES\" ]]\n    [[ $(candidate \"5 7 3\" \"2 6 3\") = \"NO\" ]]\n    [[ $(candidate\
    \ \"3 2 6 1 8 9\" \"3 5 5 1 1 1\") = \"NO\" ]]\n    [[ $(candidate \"100 200\"\
    \ \"200 200\") = \"YES\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660002369
- exit_code: 2
  program: "#!/bin/bash\n# In this problem, you will implement a function that takes\
    \ two lists of numbers,\n# and determines whether it is possible to perform an\
    \ exchange of elements\n# between them to make lst1 a list of only even numbers.\n\
    # There is no limit on the number of exchanged elements between lst1 and lst2.\n\
    # If it is possible to exchange elements between the lst1 and lst2 to make\n#\
    \ all the elements of lst1 to be even, return \"YES\".\n# Otherwise, return \"\
    NO\".\n# For example:\n# It is assumed that the input lists will be non-empty.\n\
    #\n# $1 is a space-separated list\n# $2 is a space-separated list\nexchange()\
    \ {\n  local lst1=$1\n  local lst2=$2\n  local lst1_even=0\n  local lst2_even=0\n\
    \  local lst1_odd=0\n  local lst2_odd=0\n  local lst1_even_odd=0\n  local lst2_even_odd=0\n\
    \  local lst1_odd_even=0\n  local lst2_odd_even=0\n  for i in $lst1; do\n    if\
    \ [ $((i % 2)) -eq 0 ]; then\n      ((lst1_even++))\n    else\n      ((lst1_odd++))\n\
    \    fi\n  done\n  for i in $lst2; do\n    if [ $((i % 2)) -eq 0 ]; then\n   \
    \   ((lst2_even++))\n    else\n      ((lst2_odd++))\n    fi\n  done\n  if [ $lst1_even\
    \ -eq 0 ]; then\n    echo \"NO\"\n    return\n  fi\n  if [ $lst2_even -eq 0 ];\
    \ then\n    echo \"NO\"\n    return\n  fi\n  if [ $lst1_odd -eq 0 ]; then\n  \
    \  echo \"YES\"\n    return\n  fi\n  if [ $lst2_odd -eq 0 ]; then\n    echo \"\
    YES\"\n    return\n  fi\n  for i in $lst1; do\n    if [ $((i % 2)) -eq 0 ]; then\n\
    \      ((lst1_even_odd++))\n    else\n      ((lst1_odd_even++))\n    fi\n  done\n\
    \  for i in $lst2; do\n    if [ $((i % 2)) -eq 0 ]; then\n      ((lst2_even_odd++))\n\
    \    else\n      ((lst2_odd_even++))\n    fi\n  done\n  if [ $lst1_even_odd -eq\
    \ 0 ]; then\n    echo \"NO\"\n    return\n  fi\n  if [ $lst2_even_odd -eq 0 ];\
    \ then\n    echo \"NO\"\n    return\n  fi\n  if [ $lst1_odd_even -eq\n}\n\ncandidate()\
    \ {\n    exchange \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"1 2\
    \ 3 4\" \"1 2 3 4\") = \"YES\" ]]\n    [[ $(candidate \"1 2 3 4\" \"1 5 3 4\"\
    ) = \"NO\" ]]\n    [[ $(candidate \"1 2 3 4\" \"2 1 4 3\") = \"YES\" ]]\n    [[\
    \ $(candidate \"5 7 3\" \"2 6 4\") = \"YES\" ]]\n    [[ $(candidate \"5 7 3\"\
    \ \"2 6 3\") = \"NO\" ]]\n    [[ $(candidate \"3 2 6 1 8 9\" \"3 5 5 1 1 1\")\
    \ = \"NO\" ]]\n    [[ $(candidate \"100 200\" \"200 200\") = \"YES\" ]]\n}\n\n\
    run_test"
  status: SyntaxError
  stderr: '/tmp/tmp535t_yn5.sh: line 78: syntax error near unexpected token `}''

    /tmp/tmp535t_yn5.sh: line 78: `}''

    '
  stdout: ''
  timestamp: 1660002369
- exit_code: 1
  program: "#!/bin/bash\n# In this problem, you will implement a function that takes\
    \ two lists of numbers,\n# and determines whether it is possible to perform an\
    \ exchange of elements\n# between them to make lst1 a list of only even numbers.\n\
    # There is no limit on the number of exchanged elements between lst1 and lst2.\n\
    # If it is possible to exchange elements between the lst1 and lst2 to make\n#\
    \ all the elements of lst1 to be even, return \"YES\".\n# Otherwise, return \"\
    NO\".\n# For example:\n# It is assumed that the input lists will be non-empty.\n\
    #\n# $1 is a space-separated list\n# $2 is a space-separated list\nexchange()\
    \ {\n  local lst1=($1)\n  local lst2=($2)\n  local lst1_even=()\n  local lst1_odd=()\n\
    \  local lst2_even=()\n  local lst2_odd=()\n  local lst1_even_count=0\n  local\
    \ lst1_odd_count=0\n  local lst2_even_count=0\n  local lst2_odd_count=0\n  for\
    \ i in ${lst1[@]}; do\n    if [ $(($i % 2)) -eq 0 ]; then\n      lst1_even[$lst1_even_count]=$i\n\
    \      lst1_even_count=$(($lst1_even_count + 1))\n    else\n      lst1_odd[$lst1_odd_count]=$i\n\
    \      lst1_odd_count=$(($lst1_odd_count + 1))\n    fi\n  done\n  for i in ${lst2[@]};\
    \ do\n    if [ $(($i % 2)) -eq 0 ]; then\n      lst2_even[$lst2_even_count]=$i\n\
    \      lst2_even_count=$(($lst2_even_count + 1))\n    else\n      lst2_odd[$lst2_odd_count]=$i\n\
    \      lst2_odd_count=$(($lst2_odd_count + 1))\n    fi\n  done\n  if [ $lst1_even_count\
    \ -eq ${#lst1[@]} ]; then\n    echo \"YES\"\n  elif [ $lst1_even_count -eq 0 ];\
    \ then\n    echo \"NO\"\n  elif [ $lst1_odd_count -eq 0 ]; then\n    echo \"NO\"\
    \n  elif [ $lst2_even_count -eq 0 ]; then\n    echo \"NO\"\n  elif [ $lst2_odd_count\
    \ -eq 0 ]; then\n    echo \"NO\"\n  else\n    echo \"YES\"\n  fi\n}\n\ncandidate()\
    \ {\n    exchange \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"1 2\
    \ 3 4\" \"1 2 3 4\") = \"YES\" ]]\n    [[ $(candidate \"1 2 3 4\" \"1 5 3 4\"\
    ) = \"NO\" ]]\n    [[ $(candidate \"1 2 3 4\" \"2 1 4 3\") = \"YES\" ]]\n    [[\
    \ $(candidate \"5 7 3\" \"2 6 4\") = \"YES\" ]]\n    [[ $(candidate \"5 7 3\"\
    \ \"2 6 3\") = \"NO\" ]]\n    [[ $(candidate \"3 2 6 1 8 9\" \"3 5 5 1 1 1\")\
    \ = \"NO\" ]]\n    [[ $(candidate \"100 200\" \"200 200\") = \"YES\" ]]\n}\n\n\
    run_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660002369
- exit_code: 1
  program: "#!/bin/bash\n# In this problem, you will implement a function that takes\
    \ two lists of numbers,\n# and determines whether it is possible to perform an\
    \ exchange of elements\n# between them to make lst1 a list of only even numbers.\n\
    # There is no limit on the number of exchanged elements between lst1 and lst2.\n\
    # If it is possible to exchange elements between the lst1 and lst2 to make\n#\
    \ all the elements of lst1 to be even, return \"YES\".\n# Otherwise, return \"\
    NO\".\n# For example:\n# It is assumed that the input lists will be non-empty.\n\
    #\n# $1 is a space-separated list\n# $2 is a space-separated list\nexchange()\
    \ {\n  local lst1=($1)\n  local lst2=($2)\n  local lst1_even=0\n  local lst2_even=0\n\
    \  local lst1_odd=0\n  local lst2_odd=0\n  local i=0\n  local j=0\n  local lst1_len=${#lst1[@]}\n\
    \  local lst2_len=${#lst2[@]}\n  for ((i=0; i<lst1_len; i++)); do\n    if [[ ${lst1[$i]}%2\
    \ -eq 0 ]]; then\n      ((lst1_even++))\n    else\n      ((lst1_odd++))\n    fi\n\
    \  done\n  for ((j=0; j<lst2_len; j++)); do\n    if [[ ${lst2[$j]}%2 -eq 0 ]];\
    \ then\n      ((lst2_even++))\n    else\n      ((lst2_odd++))\n    fi\n  done\n\
    \  if [[ $lst1_even -eq $lst1_len ]]; then\n    echo \"YES\"\n  elif [[ $lst1_even\
    \ -eq 0 ]]; then\n    echo \"NO\"\n  elif [[ $lst1_even -lt $lst1_len ]]; then\n\
    \    if [[ $lst1_even -lt $lst2_odd ]]; then\n      echo \"YES\"\n    else\n \
    \     echo \"NO\"\n    fi\n  fi\n}\n\ncandidate() {\n    exchange \"$@\"\n}\n\n\
    set -e\nrun_test() {\n    [[ $(candidate \"1 2 3 4\" \"1 2 3 4\") = \"YES\" ]]\n\
    \    [[ $(candidate \"1 2 3 4\" \"1 5 3 4\") = \"NO\" ]]\n    [[ $(candidate \"\
    1 2 3 4\" \"2 1 4 3\") = \"YES\" ]]\n    [[ $(candidate \"5 7 3\" \"2 6 4\") =\
    \ \"YES\" ]]\n    [[ $(candidate \"5 7 3\" \"2 6 3\") = \"NO\" ]]\n    [[ $(candidate\
    \ \"3 2 6 1 8 9\" \"3 5 5 1 1 1\") = \"NO\" ]]\n    [[ $(candidate \"100 200\"\
    \ \"200 200\") = \"YES\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660002369
- exit_code: 1
  program: "#!/bin/bash\n# In this problem, you will implement a function that takes\
    \ two lists of numbers,\n# and determines whether it is possible to perform an\
    \ exchange of elements\n# between them to make lst1 a list of only even numbers.\n\
    # There is no limit on the number of exchanged elements between lst1 and lst2.\n\
    # If it is possible to exchange elements between the lst1 and lst2 to make\n#\
    \ all the elements of lst1 to be even, return \"YES\".\n# Otherwise, return \"\
    NO\".\n# For example:\n# It is assumed that the input lists will be non-empty.\n\
    #\n# $1 is a space-separated list\n# $2 is a space-separated list\nexchange()\
    \ {\n  local -a lst1=($1)\n  local -a lst2=($2)\n  local -a lst1_even=()\n  local\
    \ -a lst1_odd=()\n  local -a lst2_even=()\n  local -a lst2_odd=()\n  local -a\
    \ lst1_even_odd=()\n  local -a lst2_even_odd=()\n  local -a lst1_odd_even=()\n\
    \  local -a lst2_odd_even=()\n  local -a lst1_even_even=()\n  local -a lst2_even_even=()\n\
    \  local -a lst1_odd_odd=()\n  local -a lst2_odd_odd=()\n  local -a lst1_even_even_odd=()\n\
    \  local -a lst2_even_even_odd=()\n  local -a lst1_odd_odd_even=()\n  local -a\
    \ lst2_odd_odd_even=()\n  local -a lst1_even_odd_even=()\n  local -a lst2_even_odd_even=()\n\
    \  local -a lst1_odd_even_odd=()\n  local -a lst2_odd_even_odd=()\n  local -a\
    \ lst1_even_even_even=()\n  local -a lst2_even_even_even=()\n  local -a lst1_odd_odd_odd=()\n\
    \  local -a lst2_odd_odd_odd=()\n  local -a lst1_even_odd_odd=()\n  local -a lst2_even_odd_odd=()\n\
    \  local -a lst1_odd_even_even=()\n  local -a lst2_odd_even_even=()\n  local -a\
    \ lst1_odd_odd_odd_even=()\n  local -a lst2_odd_odd_odd_even=()\n  local -a lst1_even_even_even_odd=()\n\
    \  local -a lst2_even_even_even_odd=()\n}\n\ncandidate() {\n    exchange \"$@\"\
    \n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"1 2 3 4\" \"1 2 3 4\") = \"\
    YES\" ]]\n    [[ $(candidate \"1 2 3 4\" \"1 5 3 4\") = \"NO\" ]]\n    [[ $(candidate\
    \ \"1 2 3 4\" \"2 1 4 3\") = \"YES\" ]]\n    [[ $(candidate \"5 7 3\" \"2 6 4\"\
    ) = \"YES\" ]]\n    [[ $(candidate \"5 7 3\" \"2 6 3\") = \"NO\" ]]\n    [[ $(candidate\
    \ \"3 2 6 1 8 9\" \"3 5 5 1 1 1\") = \"NO\" ]]\n    [[ $(candidate \"100 200\"\
    \ \"200 200\") = \"YES\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660002369
- exit_code: 1
  program: "#!/bin/bash\n# In this problem, you will implement a function that takes\
    \ two lists of numbers,\n# and determines whether it is possible to perform an\
    \ exchange of elements\n# between them to make lst1 a list of only even numbers.\n\
    # There is no limit on the number of exchanged elements between lst1 and lst2.\n\
    # If it is possible to exchange elements between the lst1 and lst2 to make\n#\
    \ all the elements of lst1 to be even, return \"YES\".\n# Otherwise, return \"\
    NO\".\n# For example:\n# It is assumed that the input lists will be non-empty.\n\
    #\n# $1 is a space-separated list\n# $2 is a space-separated list\nexchange()\
    \ {\n  local lst1=($1)\n  local lst2=($2)\n  local lst1_even=0\n  local lst2_even=0\n\
    \  local lst1_odd=0\n  local lst2_odd=0\n  local i=0\n  local j=0\n  local lst1_len=${#lst1[@]}\n\
    \  local lst2_len=${#lst2[@]}\n  local lst1_even_odd_diff=0\n  local lst2_even_odd_diff=0\n\
    \  local lst1_even_odd_diff_abs=0\n  local lst2_even_odd_diff_abs=0\n  local lst1_even_odd_diff_abs_sum=0\n\
    \  local lst2_even_odd_diff_abs_sum=0\n  local lst1_even_odd_diff_abs_sum_diff=0\n\
    \  local lst2_even_odd_diff_abs_sum_diff=0\n  local lst1_even_odd_diff_abs_sum_diff_abs=0\n\
    \  local lst2_even_odd_diff_abs_sum_diff_abs=0\n  local lst1_even_odd_diff_abs_sum_diff_abs_sum=0\n\
    \  local lst2_even_odd_diff_abs_sum_diff_abs_sum=0\n  local lst1_even_odd_diff_abs_sum_diff_abs_sum_diff=0\n\
    \  local lst2_even_odd_diff_abs_sum_diff_abs_sum_diff=0\n  local lst1_even_odd_diff_abs_sum_diff_abs_sum_diff_abs=0\n\
    \  local lst2_even_odd_diff_abs_sum_diff_abs_sum_diff_abs=0\n  local lst1_even_odd_diff_abs_sum_diff_abs_sum_diff_abs_sum=0\n\
    \  local lst2_even_odd_diff_abs_sum_diff_abs_sum_diff_abs_sum=0\n  local lst1_even_odd\n\
    }\n\ncandidate() {\n    exchange \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate\
    \ \"1 2 3 4\" \"1 2 3 4\") = \"YES\" ]]\n    [[ $(candidate \"1 2 3 4\" \"1 5\
    \ 3 4\") = \"NO\" ]]\n    [[ $(candidate \"1 2 3 4\" \"2 1 4 3\") = \"YES\" ]]\n\
    \    [[ $(candidate \"5 7 3\" \"2 6 4\") = \"YES\" ]]\n    [[ $(candidate \"5\
    \ 7 3\" \"2 6 3\") = \"NO\" ]]\n    [[ $(candidate \"3 2 6 1 8 9\" \"3 5 5 1 1\
    \ 1\") = \"NO\" ]]\n    [[ $(candidate \"100 200\" \"200 200\") = \"YES\" ]]\n\
    }\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660002369
- exit_code: 1
  program: "#!/bin/bash\n# In this problem, you will implement a function that takes\
    \ two lists of numbers,\n# and determines whether it is possible to perform an\
    \ exchange of elements\n# between them to make lst1 a list of only even numbers.\n\
    # There is no limit on the number of exchanged elements between lst1 and lst2.\n\
    # If it is possible to exchange elements between the lst1 and lst2 to make\n#\
    \ all the elements of lst1 to be even, return \"YES\".\n# Otherwise, return \"\
    NO\".\n# For example:\n# It is assumed that the input lists will be non-empty.\n\
    #\n# $1 is a space-separated list\n# $2 is a space-separated list\nexchange()\
    \ {\n    local -a lst1=($1)\n    local -a lst2=($2)\n    local -a evens=()\n \
    \   local -a odds=()\n    local -a result=()\n    local i=0\n    local j=0\n \
    \   local k=0\n    local l=0\n    local m=0\n    local n=0\n    local o=0\n  \
    \  local p=0\n    local q=0\n    local r=0\n    local s=0\n    local t=0\n   \
    \ local u=0\n    local v=0\n    local w=0\n    local x=0\n    local y=0\n    local\
    \ z=0\n    local aa=0\n    local bb=0\n    local cc=0\n    local dd=0\n    local\
    \ ee=0\n    local ff=0\n    local gg=0\n    local hh=0\n    local ii=0\n    local\
    \ jj=0\n    local kk=0\n    local ll=0\n    local mm=0\n    local nn=0\n    local\
    \ oo=0\n    local pp=0\n    local qq=0\n    local rr=0\n    local ss=0\n    local\
    \ tt=0\n    local uu=0\n    local vv=0\n    local ww=0\n    local xx=0\n    local\
    \ yy=0\n    local zz=0\n    local aaa=0\n    local bbb=0\n    local ccc=0\n  \
    \  local ddd=0\n    local eee=0\n    local fff=0\n    local ggg=0\n    local hhh=0\n\
    \    local iii=0\n    local jjj=0\n    local kkk=0\n    local lll=0\n    local\
    \ mmm=0\n    local nnn=0\n    local ooo=0\n    local ppp=0\n    local qqq=0\n\
    \    local rrr=0\n    local sss=0\n    local ttt=0\n    local uuu=0\n    local\
    \ vvv=0\n    local www=0\n    local xxx=0\n    local yyy=0\n    local zzz=0\n\
    \   \n}\n\ncandidate() {\n    exchange \"$@\"\n}\n\nset -e\nrun_test() {\n   \
    \ [[ $(candidate \"1 2 3 4\" \"1 2 3 4\") = \"YES\" ]]\n    [[ $(candidate \"\
    1 2 3 4\" \"1 5 3 4\") = \"NO\" ]]\n    [[ $(candidate \"1 2 3 4\" \"2 1 4 3\"\
    ) = \"YES\" ]]\n    [[ $(candidate \"5 7 3\" \"2 6 4\") = \"YES\" ]]\n    [[ $(candidate\
    \ \"5 7 3\" \"2 6 3\") = \"NO\" ]]\n    [[ $(candidate \"3 2 6 1 8 9\" \"3 5 5\
    \ 1 1 1\") = \"NO\" ]]\n    [[ $(candidate \"100 200\" \"200 200\") = \"YES\"\
    \ ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660002369
- exit_code: 1
  program: "#!/bin/bash\n# In this problem, you will implement a function that takes\
    \ two lists of numbers,\n# and determines whether it is possible to perform an\
    \ exchange of elements\n# between them to make lst1 a list of only even numbers.\n\
    # There is no limit on the number of exchanged elements between lst1 and lst2.\n\
    # If it is possible to exchange elements between the lst1 and lst2 to make\n#\
    \ all the elements of lst1 to be even, return \"YES\".\n# Otherwise, return \"\
    NO\".\n# For example:\n# It is assumed that the input lists will be non-empty.\n\
    #\n# $1 is a space-separated list\n# $2 is a space-separated list\nexchange()\
    \ {\n  local lst1=$1\n  local lst2=$2\n  local lst1_odd=()\n  local lst2_even=()\n\
    \  local lst1_even=()\n  local lst2_odd=()\n  local lst1_len=0\n  local lst2_len=0\n\
    \  local lst1_even_len=0\n  local lst2_even_len=0\n  local lst1_odd_len=0\n  local\
    \ lst2_odd_len=0\n  local i=0\n  local j=0\n  local k=0\n  local l=0\n  local\
    \ m=0\n  local n=0\n  local o=0\n  local p=0\n  local q=0\n  local r=0\n  local\
    \ s=0\n  local t=0\n  local u=0\n  local v=0\n  local w=0\n  local x=0\n  local\
    \ y=0\n  local z=0\n  local aa=0\n  local bb=0\n  local cc=0\n  local dd=0\n \
    \ local ee=0\n  local ff=0\n  local gg=0\n  local hh=0\n  local ii=0\n  local\
    \ jj=0\n  local kk=0\n  local ll=0\n  local mm=0\n  local nn=0\n  local oo=0\n\
    \  local pp=0\n  local qq=0\n  local rr=0\n  local ss=0\n  local tt=0\n  local\
    \ uu=0\n  local vv=0\n  local ww=0\n  local xx=0\n  local yy=0\n  local zz=0\n\
    \  local aaa=0\n  local bbb=0\n  local ccc=0\n  local ddd=0\n  local eee=0\n \
    \ local fff=0\n  local ggg=0\n  local hhh=0\n  local iii=0\n  local jjj=0\n  local\
    \ kkk=0\n  local lll=0\n  local mmm=0\n  local nnn=0\n  local ooo=0\n  local\n\
    }\n\ncandidate() {\n    exchange \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate\
    \ \"1 2 3 4\" \"1 2 3 4\") = \"YES\" ]]\n    [[ $(candidate \"1 2 3 4\" \"1 5\
    \ 3 4\") = \"NO\" ]]\n    [[ $(candidate \"1 2 3 4\" \"2 1 4 3\") = \"YES\" ]]\n\
    \    [[ $(candidate \"5 7 3\" \"2 6 4\") = \"YES\" ]]\n    [[ $(candidate \"5\
    \ 7 3\" \"2 6 3\") = \"NO\" ]]\n    [[ $(candidate \"3 2 6 1 8 9\" \"3 5 5 1 1\
    \ 1\") = \"NO\" ]]\n    [[ $(candidate \"100 200\" \"200 200\") = \"YES\" ]]\n\
    }\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660002369
- exit_code: 1
  program: "#!/bin/bash\n# In this problem, you will implement a function that takes\
    \ two lists of numbers,\n# and determines whether it is possible to perform an\
    \ exchange of elements\n# between them to make lst1 a list of only even numbers.\n\
    # There is no limit on the number of exchanged elements between lst1 and lst2.\n\
    # If it is possible to exchange elements between the lst1 and lst2 to make\n#\
    \ all the elements of lst1 to be even, return \"YES\".\n# Otherwise, return \"\
    NO\".\n# For example:\n# It is assumed that the input lists will be non-empty.\n\
    #\n# $1 is a space-separated list\n# $2 is a space-separated list\nexchange()\
    \ {\n  local lst1=($1)\n  local lst2=($2)\n  local i\n  local j\n  local tmp\n\
    \  local flag=0\n  for ((i=0; i<${#lst1[@]}; i++)); do\n    if [[ ${lst1[$i]}%2\
    \ -ne 0 ]]; then\n      for ((j=0; j<${#lst2[@]}; j++)); do\n        if [[ ${lst2[$j]}%2\
    \ -eq 0 ]]; then\n          tmp=${lst1[$i]}\n          lst1[$i]=${lst2[$j]}\n\
    \          lst2[$j]=$tmp\n          flag=1\n          break\n        fi\n    \
    \  done\n    fi\n    if [[ $flag -eq 0 ]]; then\n      echo \"NO\"\n      return\n\
    \    fi\n  done\n  echo \"YES\"\n}\n\ncandidate() {\n    exchange \"$@\"\n}\n\n\
    set -e\nrun_test() {\n    [[ $(candidate \"1 2 3 4\" \"1 2 3 4\") = \"YES\" ]]\n\
    \    [[ $(candidate \"1 2 3 4\" \"1 5 3 4\") = \"NO\" ]]\n    [[ $(candidate \"\
    1 2 3 4\" \"2 1 4 3\") = \"YES\" ]]\n    [[ $(candidate \"5 7 3\" \"2 6 4\") =\
    \ \"YES\" ]]\n    [[ $(candidate \"5 7 3\" \"2 6 3\") = \"NO\" ]]\n    [[ $(candidate\
    \ \"3 2 6 1 8 9\" \"3 5 5 1 1 1\") = \"NO\" ]]\n    [[ $(candidate \"100 200\"\
    \ \"200 200\") = \"YES\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660002369
- exit_code: 1
  program: "#!/bin/bash\n# In this problem, you will implement a function that takes\
    \ two lists of numbers,\n# and determines whether it is possible to perform an\
    \ exchange of elements\n# between them to make lst1 a list of only even numbers.\n\
    # There is no limit on the number of exchanged elements between lst1 and lst2.\n\
    # If it is possible to exchange elements between the lst1 and lst2 to make\n#\
    \ all the elements of lst1 to be even, return \"YES\".\n# Otherwise, return \"\
    NO\".\n# For example:\n# It is assumed that the input lists will be non-empty.\n\
    #\n# $1 is a space-separated list\n# $2 is a space-separated list\nexchange()\
    \ {\n    local lst1=\"$1\"\n    local lst2=\"$2\"\n    local lst1_even=0\n   \
    \ local lst2_even=0\n    local lst1_odd=0\n    local lst2_odd=0\n    local lst1_even_odd=0\n\
    \    local lst2_even_odd=0\n    local lst1_odd_even=0\n    local lst2_odd_even=0\n\
    \    local lst1_odd_odd=0\n    local lst2_odd_odd=0\n    local lst1_even_even=0\n\
    \    local lst2_even_even=0\n    local lst1_even_odd_even=0\n    local lst2_even_odd_even=0\n\
    \    local lst1_odd_even_odd=0\n    local lst2_odd_even_odd=0\n    local lst1_odd_odd_even=0\n\
    \    local lst2_odd_odd_even=0\n    local lst1_even_even_odd=0\n    local lst2_even_even_odd=0\n\
    \    local lst1_even_odd_odd=0\n    local lst2_even_odd_odd=0\n    local lst1_odd_even_even=0\n\
    \    local lst2_odd_even_even=0\n    local lst1_odd_odd_odd=0\n    local lst2_odd_odd_odd=0\n\
    \    local lst1_even_even_even=0\n    local lst2_even_even_even=0\n    local lst1_odd_odd_odd_even=0\n\
    \    local lst2_odd_odd_odd_even=0\n    local lst1_even_even_even_odd=0\n    local\
    \ lst2_even_even_even_odd=0\n    local lst1_odd_odd_odd_odd=0\n    local lst2_odd_odd_odd_odd=0\n\
    \    local lst1_even_even_even_even=0\n    local lst2_even_even_even_even=0\n\
    \    local l\n}\n\ncandidate() {\n    exchange \"$@\"\n}\n\nset -e\nrun_test()\
    \ {\n    [[ $(candidate \"1 2 3 4\" \"1 2 3 4\") = \"YES\" ]]\n    [[ $(candidate\
    \ \"1 2 3 4\" \"1 5 3 4\") = \"NO\" ]]\n    [[ $(candidate \"1 2 3 4\" \"2 1 4\
    \ 3\") = \"YES\" ]]\n    [[ $(candidate \"5 7 3\" \"2 6 4\") = \"YES\" ]]\n  \
    \  [[ $(candidate \"5 7 3\" \"2 6 3\") = \"NO\" ]]\n    [[ $(candidate \"3 2 6\
    \ 1 8 9\" \"3 5 5 1 1 1\") = \"NO\" ]]\n    [[ $(candidate \"100 200\" \"200 200\"\
    ) = \"YES\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660002369
- exit_code: 1
  program: "#!/bin/bash\n# In this problem, you will implement a function that takes\
    \ two lists of numbers,\n# and determines whether it is possible to perform an\
    \ exchange of elements\n# between them to make lst1 a list of only even numbers.\n\
    # There is no limit on the number of exchanged elements between lst1 and lst2.\n\
    # If it is possible to exchange elements between the lst1 and lst2 to make\n#\
    \ all the elements of lst1 to be even, return \"YES\".\n# Otherwise, return \"\
    NO\".\n# For example:\n# It is assumed that the input lists will be non-empty.\n\
    #\n# $1 is a space-separated list\n# $2 is a space-separated list\nexchange()\
    \ {\n  local lst1=$1\n  local lst2=$2\n  local lst1_even=0\n  local lst2_even=0\n\
    \  local lst1_odd=0\n  local lst2_odd=0\n  for i in $lst1; do\n    if (( i % 2\
    \ == 0 )); then\n      (( lst1_even++ ))\n    else\n      (( lst1_odd++ ))\n \
    \   fi\n  done\n  for i in $lst2; do\n    if (( i % 2 == 0 )); then\n      ((\
    \ lst2_even++ ))\n    else\n      (( lst2_odd++ ))\n    fi\n  done\n  if (( lst1_even\
    \ == 0 )); then\n    echo \"NO\"\n  elif (( lst1_odd == 0 )); then\n    echo \"\
    YES\"\n  elif (( lst2_even == 0 )); then\n    echo \"NO\"\n  elif (( lst2_odd\
    \ == 0 )); then\n    echo \"YES\"\n  elif (( lst1_even >= lst2_odd )); then\n\
    \    echo \"YES\"\n  elif (( lst2_even >= lst1_odd )); then\n    echo \"YES\"\n\
    \  else\n    echo \"NO\"\n  fi\n}\n\ncandidate() {\n    exchange \"$@\"\n}\n\n\
    set -e\nrun_test() {\n    [[ $(candidate \"1 2 3 4\" \"1 2 3 4\") = \"YES\" ]]\n\
    \    [[ $(candidate \"1 2 3 4\" \"1 5 3 4\") = \"NO\" ]]\n    [[ $(candidate \"\
    1 2 3 4\" \"2 1 4 3\") = \"YES\" ]]\n    [[ $(candidate \"5 7 3\" \"2 6 4\") =\
    \ \"YES\" ]]\n    [[ $(candidate \"5 7 3\" \"2 6 3\") = \"NO\" ]]\n    [[ $(candidate\
    \ \"3 2 6 1 8 9\" \"3 5 5 1 1 1\") = \"NO\" ]]\n    [[ $(candidate \"100 200\"\
    \ \"200 200\") = \"YES\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660002369
- exit_code: 1
  program: "#!/bin/bash\n# In this problem, you will implement a function that takes\
    \ two lists of numbers,\n# and determines whether it is possible to perform an\
    \ exchange of elements\n# between them to make lst1 a list of only even numbers.\n\
    # There is no limit on the number of exchanged elements between lst1 and lst2.\n\
    # If it is possible to exchange elements between the lst1 and lst2 to make\n#\
    \ all the elements of lst1 to be even, return \"YES\".\n# Otherwise, return \"\
    NO\".\n# For example:\n# It is assumed that the input lists will be non-empty.\n\
    #\n# $1 is a space-separated list\n# $2 is a space-separated list\nexchange()\
    \ {\n    local lst1=$1\n    local lst2=$2\n    local lst1_even=0\n    local lst2_even=0\n\
    \    local lst1_odd=0\n    local lst2_odd=0\n    for i in $lst1; do\n        if\
    \ [ $((i % 2)) -eq 0 ]; then\n            ((lst1_even++))\n        else\n    \
    \        ((lst1_odd++))\n        fi\n    done\n    for i in $lst2; do\n      \
    \  if [ $((i % 2)) -eq 0 ]; then\n            ((lst2_even++))\n        else\n\
    \            ((lst2_odd++))\n        fi\n    done\n    if [ $lst1_even -eq 0 ];\
    \ then\n        echo \"NO\"\n    elif [ $lst2_odd -eq 0 ]; then\n        echo\
    \ \"NO\"\n    elif [ $lst1_even -gt $lst2_odd ]; then\n        echo \"NO\"\n \
    \   else\n        echo \"YES\"\n    fi\n}\n\ncandidate() {\n    exchange \"$@\"\
    \n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"1 2 3 4\" \"1 2 3 4\") = \"\
    YES\" ]]\n    [[ $(candidate \"1 2 3 4\" \"1 5 3 4\") = \"NO\" ]]\n    [[ $(candidate\
    \ \"1 2 3 4\" \"2 1 4 3\") = \"YES\" ]]\n    [[ $(candidate \"5 7 3\" \"2 6 4\"\
    ) = \"YES\" ]]\n    [[ $(candidate \"5 7 3\" \"2 6 3\") = \"NO\" ]]\n    [[ $(candidate\
    \ \"3 2 6 1 8 9\" \"3 5 5 1 1 1\") = \"NO\" ]]\n    [[ $(candidate \"100 200\"\
    \ \"200 200\") = \"YES\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660002369
- exit_code: 1
  program: "#!/bin/bash\n# In this problem, you will implement a function that takes\
    \ two lists of numbers,\n# and determines whether it is possible to perform an\
    \ exchange of elements\n# between them to make lst1 a list of only even numbers.\n\
    # There is no limit on the number of exchanged elements between lst1 and lst2.\n\
    # If it is possible to exchange elements between the lst1 and lst2 to make\n#\
    \ all the elements of lst1 to be even, return \"YES\".\n# Otherwise, return \"\
    NO\".\n# For example:\n# It is assumed that the input lists will be non-empty.\n\
    #\n# $1 is a space-separated list\n# $2 is a space-separated list\nexchange()\
    \ {\n  local lst1=$1\n  local lst2=$2\n  local lst1_even=0\n  local lst2_even=0\n\
    \  local lst1_odd=0\n  local lst2_odd=0\n  for i in $lst1; do\n    if (( i % 2\
    \ == 0 )); then\n      (( lst1_even++ ))\n    else\n      (( lst1_odd++ ))\n \
    \   fi\n  done\n  for i in $lst2; do\n    if (( i % 2 == 0 )); then\n      ((\
    \ lst2_even++ ))\n    else\n      (( lst2_odd++ ))\n    fi\n  done\n  if (( lst1_even\
    \ == 0 )); then\n    echo \"NO\"\n  elif (( lst1_odd == 0 )); then\n    echo \"\
    YES\"\n  elif (( lst2_even == 0 )); then\n    echo \"NO\"\n  elif (( lst2_odd\
    \ == 0 )); then\n    echo \"YES\"\n  elif (( lst1_even >= lst2_odd )); then\n\
    \    echo \"YES\"\n  elif (( lst2_even >= lst1_odd )); then\n    echo \"YES\"\n\
    \  else\n    echo \"NO\"\n  fi\n}\n\ncandidate() {\n    exchange \"$@\"\n}\n\n\
    set -e\nrun_test() {\n    [[ $(candidate \"1 2 3 4\" \"1 2 3 4\") = \"YES\" ]]\n\
    \    [[ $(candidate \"1 2 3 4\" \"1 5 3 4\") = \"NO\" ]]\n    [[ $(candidate \"\
    1 2 3 4\" \"2 1 4 3\") = \"YES\" ]]\n    [[ $(candidate \"5 7 3\" \"2 6 4\") =\
    \ \"YES\" ]]\n    [[ $(candidate \"5 7 3\" \"2 6 3\") = \"NO\" ]]\n    [[ $(candidate\
    \ \"3 2 6 1 8 9\" \"3 5 5 1 1 1\") = \"NO\" ]]\n    [[ $(candidate \"100 200\"\
    \ \"200 200\") = \"YES\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660002369
- exit_code: 1
  program: "#!/bin/bash\n# In this problem, you will implement a function that takes\
    \ two lists of numbers,\n# and determines whether it is possible to perform an\
    \ exchange of elements\n# between them to make lst1 a list of only even numbers.\n\
    # There is no limit on the number of exchanged elements between lst1 and lst2.\n\
    # If it is possible to exchange elements between the lst1 and lst2 to make\n#\
    \ all the elements of lst1 to be even, return \"YES\".\n# Otherwise, return \"\
    NO\".\n# For example:\n# It is assumed that the input lists will be non-empty.\n\
    #\n# $1 is a space-separated list\n# $2 is a space-separated list\nexchange()\
    \ {\n  local lst1=$1\n  local lst2=$2\n  local lst1_even=$(echo $lst1 | tr ' '\
    \ '\\n' | grep -c '^[02468]$')\n  local lst2_even=$(echo $lst2 | tr ' ' '\\n'\
    \ | grep -c '^[02468]$')\n  local lst1_odd=$(echo $lst1 | tr ' ' '\\n' | grep\
    \ -c '^[13579]$')\n  local lst2_odd=$(echo $lst2 | tr ' ' '\\n' | grep -c '^[13579]$')\n\
    \  local lst1_even_odd=$(echo $lst1 | tr ' ' '\\n' | grep -c '^[02468]$' | grep\
    \ -c '^[13579]$')\n  local lst2_even_odd=$(echo $lst2 | tr ' ' '\\n' | grep -c\
    \ '^[02468]$' | grep -c '^[13579]$')\n  if [ $lst1_even -eq 0 ] && [ $lst2_even\
    \ -eq 0 ]; then\n    echo \"NO\"\n  elif [ $lst1_odd -eq 0 ] && [ $lst2_odd -eq\
    \ 0 ]; then\n    echo \"NO\"\n  elif [ $lst1_even_odd -eq 0 ] && [ $lst2_even_odd\
    \ -eq 0 ]; then\n    echo \"NO\"\n  else\n    echo \"YES\"\n  fi\n}\n\ncandidate()\
    \ {\n    exchange \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"1 2\
    \ 3 4\" \"1 2 3 4\") = \"YES\" ]]\n    [[ $(candidate \"1 2 3 4\" \"1 5 3 4\"\
    ) = \"NO\" ]]\n    [[ $(candidate \"1 2 3 4\" \"2 1 4 3\") = \"YES\" ]]\n    [[\
    \ $(candidate \"5 7 3\" \"2 6 4\") = \"YES\" ]]\n    [[ $(candidate \"5 7 3\"\
    \ \"2 6 3\") = \"NO\" ]]\n    [[ $(candidate \"3 2 6 1 8 9\" \"3 5 5 1 1 1\")\
    \ = \"NO\" ]]\n    [[ $(candidate \"100 200\" \"200 200\") = \"YES\" ]]\n}\n\n\
    run_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660002369
- exit_code: 1
  program: "#!/bin/bash\n# In this problem, you will implement a function that takes\
    \ two lists of numbers,\n# and determines whether it is possible to perform an\
    \ exchange of elements\n# between them to make lst1 a list of only even numbers.\n\
    # There is no limit on the number of exchanged elements between lst1 and lst2.\n\
    # If it is possible to exchange elements between the lst1 and lst2 to make\n#\
    \ all the elements of lst1 to be even, return \"YES\".\n# Otherwise, return \"\
    NO\".\n# For example:\n# It is assumed that the input lists will be non-empty.\n\
    #\n# $1 is a space-separated list\n# $2 is a space-separated list\nexchange()\
    \ {\n  local lst1=($1)\n  local lst2=($2)\n  local lst1_even=0\n  local lst2_even=0\n\
    \  local lst1_odd=0\n  local lst2_odd=0\n  for i in ${lst1[@]}; do\n    if ((\
    \ i % 2 == 0 )); then\n      (( lst1_even++ ))\n    else\n      (( lst1_odd++\
    \ ))\n    fi\n  done\n  for i in ${lst2[@]}; do\n    if (( i % 2 == 0 )); then\n\
    \      (( lst2_even++ ))\n    else\n      (( lst2_odd++ ))\n    fi\n  done\n \
    \ if (( lst1_even > lst2_odd )); then\n    echo \"YES\"\n  else\n    echo \"NO\"\
    \n  fi\n}\n\ncandidate() {\n    exchange \"$@\"\n}\n\nset -e\nrun_test() {\n \
    \   [[ $(candidate \"1 2 3 4\" \"1 2 3 4\") = \"YES\" ]]\n    [[ $(candidate \"\
    1 2 3 4\" \"1 5 3 4\") = \"NO\" ]]\n    [[ $(candidate \"1 2 3 4\" \"2 1 4 3\"\
    ) = \"YES\" ]]\n    [[ $(candidate \"5 7 3\" \"2 6 4\") = \"YES\" ]]\n    [[ $(candidate\
    \ \"5 7 3\" \"2 6 3\") = \"NO\" ]]\n    [[ $(candidate \"3 2 6 1 8 9\" \"3 5 5\
    \ 1 1 1\") = \"NO\" ]]\n    [[ $(candidate \"100 200\" \"200 200\") = \"YES\"\
    \ ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660002369
- exit_code: 1
  program: "#!/bin/bash\n# In this problem, you will implement a function that takes\
    \ two lists of numbers,\n# and determines whether it is possible to perform an\
    \ exchange of elements\n# between them to make lst1 a list of only even numbers.\n\
    # There is no limit on the number of exchanged elements between lst1 and lst2.\n\
    # If it is possible to exchange elements between the lst1 and lst2 to make\n#\
    \ all the elements of lst1 to be even, return \"YES\".\n# Otherwise, return \"\
    NO\".\n# For example:\n# It is assumed that the input lists will be non-empty.\n\
    #\n# $1 is a space-separated list\n# $2 is a space-separated list\nexchange()\
    \ {\n  local lst1=($1)\n  local lst2=($2)\n  local lst1_odd=()\n  local lst2_even=()\n\
    \  local lst1_even=()\n  local lst2_odd=()\n  local lst1_even_count=0\n  local\
    \ lst2_even_count=0\n  local lst1_odd_count=0\n  local lst2_odd_count=0\n  local\
    \ i=0\n  local j=0\n  local k=0\n  local l=0\n  local m=0\n  local n=0\n  local\
    \ o=0\n  local p=0\n  local q=0\n  local r=0\n  local s=0\n  local t=0\n  local\
    \ u=0\n  local v=0\n  local w=0\n  local x=0\n  local y=0\n  local z=0\n  local\
    \ aa=0\n  local bb=0\n  local cc=0\n  local dd=0\n  local ee=0\n  local ff=0\n\
    \  local gg=0\n  local hh=0\n  local ii=0\n  local jj=0\n  local kk=0\n  local\
    \ ll=0\n  local mm=0\n  local nn=0\n  local oo=0\n  local pp=0\n  local qq=0\n\
    \  local rr=0\n  local ss=0\n  local tt=0\n  local uu=0\n  local vv=0\n  local\
    \ ww=0\n  local xx=0\n  local yy=0\n  local zz=0\n  local aaa=0\n  local bbb=0\n\
    \  local ccc=0\n  local ddd=0\n  local eee=0\n  local fff=0\n  local ggg=0\n \
    \ local hhh=0\n  local iii=0\n  local jjj=0\n  local kkk=0\n  local lll=0\n  local\
    \ mmm=0\n  local nnn=0\n  local ooo=0\n  local ppp=0\n  local qqq=0\n  local rrr\n\
    }\n\ncandidate() {\n    exchange \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate\
    \ \"1 2 3 4\" \"1 2 3 4\") = \"YES\" ]]\n    [[ $(candidate \"1 2 3 4\" \"1 5\
    \ 3 4\") = \"NO\" ]]\n    [[ $(candidate \"1 2 3 4\" \"2 1 4 3\") = \"YES\" ]]\n\
    \    [[ $(candidate \"5 7 3\" \"2 6 4\") = \"YES\" ]]\n    [[ $(candidate \"5\
    \ 7 3\" \"2 6 3\") = \"NO\" ]]\n    [[ $(candidate \"3 2 6 1 8 9\" \"3 5 5 1 1\
    \ 1\") = \"NO\" ]]\n    [[ $(candidate \"100 200\" \"200 200\") = \"YES\" ]]\n\
    }\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660002369
- exit_code: 1
  program: "#!/bin/bash\n# In this problem, you will implement a function that takes\
    \ two lists of numbers,\n# and determines whether it is possible to perform an\
    \ exchange of elements\n# between them to make lst1 a list of only even numbers.\n\
    # There is no limit on the number of exchanged elements between lst1 and lst2.\n\
    # If it is possible to exchange elements between the lst1 and lst2 to make\n#\
    \ all the elements of lst1 to be even, return \"YES\".\n# Otherwise, return \"\
    NO\".\n# For example:\n# It is assumed that the input lists will be non-empty.\n\
    #\n# $1 is a space-separated list\n# $2 is a space-separated list\nexchange()\
    \ {\n  local lst1=\"$1\"\n  local lst2=\"$2\"\n  local lst1_even=0\n  local lst2_even=0\n\
    \  local lst1_odd=0\n  local lst2_odd=0\n  for i in $lst1; do\n    if [ $((i %\
    \ 2)) -eq 0 ]; then\n      lst1_even=$((lst1_even + 1))\n    else\n      lst1_odd=$((lst1_odd\
    \ + 1))\n    fi\n  done\n  for i in $lst2; do\n    if [ $((i % 2)) -eq 0 ]; then\n\
    \      lst2_even=$((lst2_even + 1))\n    else\n      lst2_odd=$((lst2_odd + 1))\n\
    \    fi\n  done\n  if [ $lst1_even -eq 0 ]; then\n    echo \"NO\"\n  elif [ $lst2_odd\
    \ -eq 0 ]; then\n    echo \"NO\"\n  elif [ $lst1_even -eq $lst2_odd ]; then\n\
    \    echo \"YES\"\n  elif [ $lst1_even -gt $lst2_odd ]; then\n    echo \"YES\"\
    \n  elif [ $lst1_even -lt $lst2_odd ]; then\n    echo \"YES\"\n  fi\n}\n\ncandidate()\
    \ {\n    exchange \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"1 2\
    \ 3 4\" \"1 2 3 4\") = \"YES\" ]]\n    [[ $(candidate \"1 2 3 4\" \"1 5 3 4\"\
    ) = \"NO\" ]]\n    [[ $(candidate \"1 2 3 4\" \"2 1 4 3\") = \"YES\" ]]\n    [[\
    \ $(candidate \"5 7 3\" \"2 6 4\") = \"YES\" ]]\n    [[ $(candidate \"5 7 3\"\
    \ \"2 6 3\") = \"NO\" ]]\n    [[ $(candidate \"3 2 6 1 8 9\" \"3 5 5 1 1 1\")\
    \ = \"NO\" ]]\n    [[ $(candidate \"100 200\" \"200 200\") = \"YES\" ]]\n}\n\n\
    run_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660002369
- exit_code: 1
  program: "#!/bin/bash\n# In this problem, you will implement a function that takes\
    \ two lists of numbers,\n# and determines whether it is possible to perform an\
    \ exchange of elements\n# between them to make lst1 a list of only even numbers.\n\
    # There is no limit on the number of exchanged elements between lst1 and lst2.\n\
    # If it is possible to exchange elements between the lst1 and lst2 to make\n#\
    \ all the elements of lst1 to be even, return \"YES\".\n# Otherwise, return \"\
    NO\".\n# For example:\n# It is assumed that the input lists will be non-empty.\n\
    #\n# $1 is a space-separated list\n# $2 is a space-separated list\nexchange()\
    \ {\n  local lst1=($1)\n  local lst2=($2)\n  local evens=()\n  local odds=()\n\
    \  local evens_count=0\n  local odds_count=0\n  local i=0\n  local j=0\n  local\
    \ k=0\n  local l=0\n  local m=0\n  local n=0\n  local o=0\n  local p=0\n  local\
    \ q=0\n  local r=0\n  local s=0\n  local t=0\n  local u=0\n  local v=0\n  local\
    \ w=0\n  local x=0\n  local y=0\n  local z=0\n  local a=0\n  local b=0\n  local\
    \ c=0\n  local d=0\n  local e=0\n  local f=0\n  local g=0\n  local h=0\n  local\
    \ i=0\n  local j=0\n  local k=0\n  local l=0\n  local m=0\n  local n=0\n  local\
    \ o=0\n  local p=0\n  local q=0\n  local r=0\n  local s=0\n  local t=0\n  local\
    \ u=0\n  local v=0\n  local w=0\n  local x=0\n  local y=0\n  local z=0\n  local\
    \ a=0\n  local b=0\n  local c=0\n  local d=0\n  local e=0\n  local f=0\n  local\
    \ g=0\n  local h=0\n  local i=0\n  local j=0\n  local k=0\n  local l=0\n  local\
    \ m=0\n  local n=0\n  local o=0\n  local p=0\n  local q=0\n  local r=0\n  local\
    \ s=0\n  local t=0\n  local u=0\n  local v=0\n  local w=0\n  local x=0\n  local\
    \ y=0\n  local z=0\n  local a=0\n  local b=0\n  local c=0\n  local d=0\n  local\
    \ e=0\n  local f=0\n  local g=0\n}\n\ncandidate() {\n    exchange \"$@\"\n}\n\n\
    set -e\nrun_test() {\n    [[ $(candidate \"1 2 3 4\" \"1 2 3 4\") = \"YES\" ]]\n\
    \    [[ $(candidate \"1 2 3 4\" \"1 5 3 4\") = \"NO\" ]]\n    [[ $(candidate \"\
    1 2 3 4\" \"2 1 4 3\") = \"YES\" ]]\n    [[ $(candidate \"5 7 3\" \"2 6 4\") =\
    \ \"YES\" ]]\n    [[ $(candidate \"5 7 3\" \"2 6 3\") = \"NO\" ]]\n    [[ $(candidate\
    \ \"3 2 6 1 8 9\" \"3 5 5 1 1 1\") = \"NO\" ]]\n    [[ $(candidate \"100 200\"\
    \ \"200 200\") = \"YES\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660002369
- exit_code: 1
  program: "#!/bin/bash\n# In this problem, you will implement a function that takes\
    \ two lists of numbers,\n# and determines whether it is possible to perform an\
    \ exchange of elements\n# between them to make lst1 a list of only even numbers.\n\
    # There is no limit on the number of exchanged elements between lst1 and lst2.\n\
    # If it is possible to exchange elements between the lst1 and lst2 to make\n#\
    \ all the elements of lst1 to be even, return \"YES\".\n# Otherwise, return \"\
    NO\".\n# For example:\n# It is assumed that the input lists will be non-empty.\n\
    #\n# $1 is a space-separated list\n# $2 is a space-separated list\nexchange()\
    \ {\n  local lst1=\"$1\"\n  local lst2=\"$2\"\n  local lst1_even_count=0\n  local\
    \ lst2_odd_count=0\n  for i in $lst1; do\n    if [ $((i % 2)) -eq 0 ]; then\n\
    \      lst1_even_count=$((lst1_even_count + 1))\n    fi\n  done\n  for i in $lst2;\
    \ do\n    if [ $((i % 2)) -ne 0 ]; then\n      lst2_odd_count=$((lst2_odd_count\
    \ + 1))\n    fi\n  done\n  if [ $lst1_even_count -le $lst2_odd_count ]; then\n\
    \    echo \"YES\"\n  else\n    echo \"NO\"\n  fi\n}\n\ncandidate() {\n    exchange\
    \ \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"1 2 3 4\" \"1 2 3 4\"\
    ) = \"YES\" ]]\n    [[ $(candidate \"1 2 3 4\" \"1 5 3 4\") = \"NO\" ]]\n    [[\
    \ $(candidate \"1 2 3 4\" \"2 1 4 3\") = \"YES\" ]]\n    [[ $(candidate \"5 7\
    \ 3\" \"2 6 4\") = \"YES\" ]]\n    [[ $(candidate \"5 7 3\" \"2 6 3\") = \"NO\"\
    \ ]]\n    [[ $(candidate \"3 2 6 1 8 9\" \"3 5 5 1 1 1\") = \"NO\" ]]\n    [[\
    \ $(candidate \"100 200\" \"200 200\") = \"YES\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660002369
- exit_code: 1
  program: "#!/bin/bash\n# In this problem, you will implement a function that takes\
    \ two lists of numbers,\n# and determines whether it is possible to perform an\
    \ exchange of elements\n# between them to make lst1 a list of only even numbers.\n\
    # There is no limit on the number of exchanged elements between lst1 and lst2.\n\
    # If it is possible to exchange elements between the lst1 and lst2 to make\n#\
    \ all the elements of lst1 to be even, return \"YES\".\n# Otherwise, return \"\
    NO\".\n# For example:\n# It is assumed that the input lists will be non-empty.\n\
    #\n# $1 is a space-separated list\n# $2 is a space-separated list\nexchange()\
    \ {\n  local lst1=($1)\n  local lst2=($2)\n  local lst1_even=()\n  local lst1_odd=()\n\
    \  local lst2_even=()\n  local lst2_odd=()\n  local lst1_even_count=0\n  local\
    \ lst1_odd_count=0\n  local lst2_even_count=0\n  local lst2_odd_count=0\n  local\
    \ lst1_even_index=0\n  local lst1_odd_index=0\n  local lst2_even_index=0\n  local\
    \ lst2_odd_index=0\n  local lst1_even_index_max=0\n  local lst1_odd_index_max=0\n\
    \  local lst2_even_index_max=0\n  local lst2_odd_index_max=0\n  local lst1_even_index_min=0\n\
    \  local lst1_odd_index_min=0\n  local lst2_even_index_min=0\n  local lst2_odd_index_min=0\n\
    \  local lst1_even_index_min_value=0\n  local lst1_odd_index_min_value=0\n  local\
    \ lst2_even_index_min_value=0\n  local lst2_odd_index_min_value=0\n  local lst1_even_index_max_value=0\n\
    \  local lst1_odd_index_max_value=0\n  local lst2_even_index_max_value=0\n  local\
    \ lst2_odd_index_max_value=0\n  local lst1_even_index_min_value_index=0\n  local\
    \ lst1_odd_index_min_value_index=0\n  local lst2_even_index_min_value_index=0\n\
    \  local lst2_odd_index_min_value_index=0\n  local lst1_even_index_max_value_index=0\n\
    \  local lst1_odd_index_max_value_index=0\n  local lst2_even\n}\n\ncandidate()\
    \ {\n    exchange \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"1 2\
    \ 3 4\" \"1 2 3 4\") = \"YES\" ]]\n    [[ $(candidate \"1 2 3 4\" \"1 5 3 4\"\
    ) = \"NO\" ]]\n    [[ $(candidate \"1 2 3 4\" \"2 1 4 3\") = \"YES\" ]]\n    [[\
    \ $(candidate \"5 7 3\" \"2 6 4\") = \"YES\" ]]\n    [[ $(candidate \"5 7 3\"\
    \ \"2 6 3\") = \"NO\" ]]\n    [[ $(candidate \"3 2 6 1 8 9\" \"3 5 5 1 1 1\")\
    \ = \"NO\" ]]\n    [[ $(candidate \"100 200\" \"200 200\") = \"YES\" ]]\n}\n\n\
    run_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660002369
- exit_code: 1
  program: "#!/bin/bash\n# In this problem, you will implement a function that takes\
    \ two lists of numbers,\n# and determines whether it is possible to perform an\
    \ exchange of elements\n# between them to make lst1 a list of only even numbers.\n\
    # There is no limit on the number of exchanged elements between lst1 and lst2.\n\
    # If it is possible to exchange elements between the lst1 and lst2 to make\n#\
    \ all the elements of lst1 to be even, return \"YES\".\n# Otherwise, return \"\
    NO\".\n# For example:\n# It is assumed that the input lists will be non-empty.\n\
    #\n# $1 is a space-separated list\n# $2 is a space-separated list\nexchange()\
    \ {\n  local lst1=($1)\n  local lst2=($2)\n  local i\n  local j\n  local temp\n\
    \  local flag=0\n  for ((i=0; i<${#lst1[@]}; i++)); do\n    if [[ ${lst1[$i]}\
    \ -eq 0 ]]; then\n      continue\n    elif [[ ${lst1[$i]} -gt 0 ]]; then\n   \
    \   if [[ $((${lst1[$i]} % 2)) -eq 0 ]]; then\n        continue\n      else\n\
    \        for ((j=0; j<${#lst2[@]}; j++)); do\n          if [[ $((${lst2[$j]} %\
    \ 2)) -eq 0 ]]; then\n            temp=${lst1[$i]}\n            lst1[$i]=${lst2[$j]}\n\
    \            lst2[$j]=$temp\n            flag=1\n            break\n         \
    \ fi\n        done\n      fi\n    else\n      if [[ $((${lst1[$i]} % 2)) -eq 0\
    \ ]]; then\n        continue\n      else\n        for ((j=0; j<${#lst2[@]}; j++));\
    \ do\n          if [[ $((${lst2[$j]} % 2)) -eq 0 ]]; then\n            temp=${lst1[$i]}\n\
    \            lst1[$i]=${lst2[$j]}\n            lst2[$j]=$temp\n            flag=1\n\
    \            break\n          fi\n        done\n      fi\n    fi\n  done\n  if\
    \ [[ $flag -eq 1 ]]; then\n    echo \"YES\"\n  else\n    echo \"NO\"\n  fi\n}\n\
    \ncandidate() {\n    exchange \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate\
    \ \"1 2 3 4\" \"1 2 3 4\") = \"YES\" ]]\n    [[ $(candidate \"1 2 3 4\" \"1 5\
    \ 3 4\") = \"NO\" ]]\n    [[ $(candidate \"1 2 3 4\" \"2 1 4 3\") = \"YES\" ]]\n\
    \    [[ $(candidate \"5 7 3\" \"2 6 4\") = \"YES\" ]]\n    [[ $(candidate \"5\
    \ 7 3\" \"2 6 3\") = \"NO\" ]]\n    [[ $(candidate \"3 2 6 1 8 9\" \"3 5 5 1 1\
    \ 1\") = \"NO\" ]]\n    [[ $(candidate \"100 200\" \"200 200\") = \"YES\" ]]\n\
    }\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660002369
- exit_code: 1
  program: "#!/bin/bash\n# In this problem, you will implement a function that takes\
    \ two lists of numbers,\n# and determines whether it is possible to perform an\
    \ exchange of elements\n# between them to make lst1 a list of only even numbers.\n\
    # There is no limit on the number of exchanged elements between lst1 and lst2.\n\
    # If it is possible to exchange elements between the lst1 and lst2 to make\n#\
    \ all the elements of lst1 to be even, return \"YES\".\n# Otherwise, return \"\
    NO\".\n# For example:\n# It is assumed that the input lists will be non-empty.\n\
    #\n# $1 is a space-separated list\n# $2 is a space-separated list\nexchange()\
    \ {\n  local lst1=($1)\n  local lst2=($2)\n  local evens=()\n  local odds=()\n\
    \  local i=0\n  local j=0\n  local k=0\n  local l=0\n  local m=0\n  local n=0\n\
    \  local o=0\n  local p=0\n  local q=0\n  local r=0\n  local s=0\n  local t=0\n\
    \  local u=0\n  local v=0\n  local w=0\n  local x=0\n  local y=0\n  local z=0\n\
    \  local aa=0\n  local bb=0\n  local cc=0\n  local dd=0\n  local ee=0\n  local\
    \ ff=0\n  local gg=0\n  local hh=0\n  local ii=0\n  local jj=0\n  local kk=0\n\
    \  local ll=0\n  local mm=0\n  local nn=0\n  local oo=0\n  local pp=0\n  local\
    \ qq=0\n  local rr=0\n  local ss=0\n  local tt=0\n  local uu=0\n  local vv=0\n\
    \  local ww=0\n  local xx=0\n  local yy=0\n  local zz=0\n  local aaa=0\n  local\
    \ bbb=0\n  local ccc=0\n  local ddd=0\n  local eee=0\n  local fff=0\n  local ggg=0\n\
    \  local hhh=0\n  local iii=0\n  local jjj=0\n  local kkk=0\n  local lll=0\n \
    \ local mmm=0\n  local nnn=0\n  local ooo=0\n  local ppp=0\n  local qqq=0\n  local\
    \ rrr=0\n  local sss=0\n  local ttt=0\n  local uuu=0\n  local vvv=0\n  local www=0\n\
    \  local xxx=0\n  local yyy=0\n  local zzz=0\n  local aaaa=0\n  local bbbb=0\n\
    \  local\n}\n\ncandidate() {\n    exchange \"$@\"\n}\n\nset -e\nrun_test() {\n\
    \    [[ $(candidate \"1 2 3 4\" \"1 2 3 4\") = \"YES\" ]]\n    [[ $(candidate\
    \ \"1 2 3 4\" \"1 5 3 4\") = \"NO\" ]]\n    [[ $(candidate \"1 2 3 4\" \"2 1 4\
    \ 3\") = \"YES\" ]]\n    [[ $(candidate \"5 7 3\" \"2 6 4\") = \"YES\" ]]\n  \
    \  [[ $(candidate \"5 7 3\" \"2 6 3\") = \"NO\" ]]\n    [[ $(candidate \"3 2 6\
    \ 1 8 9\" \"3 5 5 1 1 1\") = \"NO\" ]]\n    [[ $(candidate \"100 200\" \"200 200\"\
    ) = \"YES\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660002369
- exit_code: 1
  program: "#!/bin/bash\n# In this problem, you will implement a function that takes\
    \ two lists of numbers,\n# and determines whether it is possible to perform an\
    \ exchange of elements\n# between them to make lst1 a list of only even numbers.\n\
    # There is no limit on the number of exchanged elements between lst1 and lst2.\n\
    # If it is possible to exchange elements between the lst1 and lst2 to make\n#\
    \ all the elements of lst1 to be even, return \"YES\".\n# Otherwise, return \"\
    NO\".\n# For example:\n# It is assumed that the input lists will be non-empty.\n\
    #\n# $1 is a space-separated list\n# $2 is a space-separated list\nexchange()\
    \ {\n  local lst1=($1)\n  local lst2=($2)\n  local even_count=0\n  local odd_count=0\n\
    \  local i=0\n  local j=0\n  local lst1_len=${#lst1[@]}\n  local lst2_len=${#lst2[@]}\n\
    \  for ((i=0; i<lst1_len; i++)); do\n    if [[ $((${lst1[$i]} % 2)) -eq 0 ]];\
    \ then\n      even_count=$(($even_count + 1))\n    else\n      odd_count=$(($odd_count\
    \ + 1))\n    fi\n  done\n  if [[ $even_count -eq $lst1_len ]]; then\n    echo\
    \ \"YES\"\n    return\n  fi\n  if [[ $odd_count -eq $lst1_len ]]; then\n    echo\
    \ \"NO\"\n    return\n  fi\n  for ((i=0; i<lst1_len; i++)); do\n    if [[ $((${lst1[$i]}\
    \ % 2)) -eq 0 ]]; then\n      continue\n    fi\n    for ((j=0; j<lst2_len; j++));\
    \ do\n      if [[ $((${lst2[$j]} % 2)) -eq 0 ]]; then\n        lst1[$i]=${lst2[$j]}\n\
    \        lst2[$j]=${lst1[$i]}\n        break\n      fi\n    done\n  done\n  even_count=0\n\
    \  for ((i=0; i<lst1_len; i++)); do\n    if [[ $((${lst1[$i]} % 2)) -eq 0 ]];\
    \ then\n      even_count=$(($even_count + 1))\n    fi\n  done\n  if [[ $even_count\
    \ -eq $lst1_len ]]; then\n    echo \"YES\"\n  else\n    echo \"NO\"\n  fi\n}\n\
    \ncandidate() {\n    exchange \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate\
    \ \"1 2 3 4\" \"1 2 3 4\") = \"YES\" ]]\n    [[ $(candidate \"1 2 3 4\" \"1 5\
    \ 3 4\") = \"NO\" ]]\n    [[ $(candidate \"1 2 3 4\" \"2 1 4 3\") = \"YES\" ]]\n\
    \    [[ $(candidate \"5 7 3\" \"2 6 4\") = \"YES\" ]]\n    [[ $(candidate \"5\
    \ 7 3\" \"2 6 3\") = \"NO\" ]]\n    [[ $(candidate \"3 2 6 1 8 9\" \"3 5 5 1 1\
    \ 1\") = \"NO\" ]]\n    [[ $(candidate \"100 200\" \"200 200\") = \"YES\" ]]\n\
    }\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660002369
- exit_code: 1
  program: "#!/bin/bash\n# In this problem, you will implement a function that takes\
    \ two lists of numbers,\n# and determines whether it is possible to perform an\
    \ exchange of elements\n# between them to make lst1 a list of only even numbers.\n\
    # There is no limit on the number of exchanged elements between lst1 and lst2.\n\
    # If it is possible to exchange elements between the lst1 and lst2 to make\n#\
    \ all the elements of lst1 to be even, return \"YES\".\n# Otherwise, return \"\
    NO\".\n# For example:\n# It is assumed that the input lists will be non-empty.\n\
    #\n# $1 is a space-separated list\n# $2 is a space-separated list\nexchange()\
    \ {\n  local lst1=($1)\n  local lst2=($2)\n  local lst1_odds=()\n  local lst2_evens=()\n\
    \  local lst1_evens=()\n  local lst2_odds=()\n  local i\n  local j\n  local k\n\
    \  local l\n  local m\n  local n\n  local o\n  local p\n  local q\n  local r\n\
    \  local s\n  local t\n  local u\n  local v\n  local w\n  local x\n  local y\n\
    \  local z\n  local aa\n  local bb\n  local cc\n  local dd\n  local ee\n  local\
    \ ff\n  local gg\n  local hh\n  local ii\n  local jj\n  local kk\n  local ll\n\
    \  local mm\n  local nn\n  local oo\n  local pp\n  local qq\n  local rr\n  local\
    \ ss\n  local tt\n  local uu\n  local vv\n  local ww\n  local xx\n  local yy\n\
    \  local zz\n  local aaa\n  local bbb\n  local ccc\n  local ddd\n  local eee\n\
    \  local fff\n  local ggg\n  local hhh\n  local iii\n  local jjj\n  local kkk\n\
    \  local lll\n  local mmm\n  local nnn\n  local ooo\n  local ppp\n  local qqq\n\
    \  local rrr\n  local sss\n  local ttt\n  local uuu\n  local vvv\n  local www\n\
    \  local xxx\n  local yyy\n  local zzz\n  local aaaa\n  local bbbb\n  local cccc\n\
    \  local dddd\n  local eeee\n  local ffff\n  local gggg\n  local hhhh\n  local\
    \ iiii\n  local jjjj\n  local kkkk\n  local llll\n  local mmmm\n  local nnnn\n\
    \  local oooo\n  local pppp\n  local qqqq\n  local rrrr\n  local ssss\n  local\
    \ tttt\n  local uuuu\n  local vvvv\n \n}\n\ncandidate() {\n    exchange \"$@\"\
    \n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"1 2 3 4\" \"1 2 3 4\") = \"\
    YES\" ]]\n    [[ $(candidate \"1 2 3 4\" \"1 5 3 4\") = \"NO\" ]]\n    [[ $(candidate\
    \ \"1 2 3 4\" \"2 1 4 3\") = \"YES\" ]]\n    [[ $(candidate \"5 7 3\" \"2 6 4\"\
    ) = \"YES\" ]]\n    [[ $(candidate \"5 7 3\" \"2 6 3\") = \"NO\" ]]\n    [[ $(candidate\
    \ \"3 2 6 1 8 9\" \"3 5 5 1 1 1\") = \"NO\" ]]\n    [[ $(candidate \"100 200\"\
    \ \"200 200\") = \"YES\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660002369
- exit_code: 1
  program: "#!/bin/bash\n# In this problem, you will implement a function that takes\
    \ two lists of numbers,\n# and determines whether it is possible to perform an\
    \ exchange of elements\n# between them to make lst1 a list of only even numbers.\n\
    # There is no limit on the number of exchanged elements between lst1 and lst2.\n\
    # If it is possible to exchange elements between the lst1 and lst2 to make\n#\
    \ all the elements of lst1 to be even, return \"YES\".\n# Otherwise, return \"\
    NO\".\n# For example:\n# It is assumed that the input lists will be non-empty.\n\
    #\n# $1 is a space-separated list\n# $2 is a space-separated list\nexchange()\
    \ {\n  local lst1=($1)\n  local lst2=($2)\n  local lst1_even=0\n  local lst2_even=0\n\
    \  local lst1_odd=0\n  local lst2_odd=0\n  local i=0\n  local j=0\n  local k=0\n\
    \  local l=0\n  local m=0\n  local n=0\n  local o=0\n  local p=0\n  local q=0\n\
    \  local r=0\n  local s=0\n  local t=0\n  local u=0\n  local v=0\n  local w=0\n\
    \  local x=0\n  local y=0\n  local z=0\n  local aa=0\n  local bb=0\n  local cc=0\n\
    \  local dd=0\n  local ee=0\n  local ff=0\n  local gg=0\n  local hh=0\n  local\
    \ ii=0\n  local jj=0\n  local kk=0\n  local ll=0\n  local mm=0\n  local nn=0\n\
    \  local oo=0\n  local pp=0\n  local qq=0\n  local rr=0\n  local ss=0\n  local\
    \ tt=0\n  local uu=0\n  local vv=0\n  local ww=0\n  local xx=0\n  local yy=0\n\
    \  local zz=0\n  local aaa=0\n  local bbb=0\n  local ccc=0\n  local ddd=0\n  local\
    \ eee=0\n  local fff=0\n  local ggg=0\n  local hhh=0\n  local iii=0\n  local jjj=0\n\
    \  local kkk=0\n  local lll=0\n  local mmm=0\n  local nnn=0\n  local ooo=0\n \
    \ local ppp=0\n  local qqq=0\n  local rrr=0\n  local sss=0\n  local ttt=0\n  local\
    \ uuu=0\n  local vvv=0\n  local www=0\n  local xxx=0\n  local yyy\n}\n\ncandidate()\
    \ {\n    exchange \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"1 2\
    \ 3 4\" \"1 2 3 4\") = \"YES\" ]]\n    [[ $(candidate \"1 2 3 4\" \"1 5 3 4\"\
    ) = \"NO\" ]]\n    [[ $(candidate \"1 2 3 4\" \"2 1 4 3\") = \"YES\" ]]\n    [[\
    \ $(candidate \"5 7 3\" \"2 6 4\") = \"YES\" ]]\n    [[ $(candidate \"5 7 3\"\
    \ \"2 6 3\") = \"NO\" ]]\n    [[ $(candidate \"3 2 6 1 8 9\" \"3 5 5 1 1 1\")\
    \ = \"NO\" ]]\n    [[ $(candidate \"100 200\" \"200 200\") = \"YES\" ]]\n}\n\n\
    run_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660002369
- exit_code: 1
  program: "#!/bin/bash\n# In this problem, you will implement a function that takes\
    \ two lists of numbers,\n# and determines whether it is possible to perform an\
    \ exchange of elements\n# between them to make lst1 a list of only even numbers.\n\
    # There is no limit on the number of exchanged elements between lst1 and lst2.\n\
    # If it is possible to exchange elements between the lst1 and lst2 to make\n#\
    \ all the elements of lst1 to be even, return \"YES\".\n# Otherwise, return \"\
    NO\".\n# For example:\n# It is assumed that the input lists will be non-empty.\n\
    #\n# $1 is a space-separated list\n# $2 is a space-separated list\nexchange()\
    \ {\n  local lst1=($1)\n  local lst2=($2)\n  local lst1_even=0\n  local lst2_even=0\n\
    \  local lst1_odd=0\n  local lst2_odd=0\n  local i=0\n  local j=0\n  local k=0\n\
    \  local l=0\n  local m=0\n  local n=0\n  local o=0\n  local p=0\n  local q=0\n\
    \  local r=0\n  local s=0\n  local t=0\n  local u=0\n  local v=0\n  local w=0\n\
    \  local x=0\n  local y=0\n  local z=0\n  local aa=0\n  local bb=0\n  local cc=0\n\
    \  local dd=0\n  local ee=0\n  local ff=0\n  local gg=0\n  local hh=0\n  local\
    \ ii=0\n  local jj=0\n  local kk=0\n  local ll=0\n  local mm=0\n  local nn=0\n\
    \  local oo=0\n  local pp=0\n  local qq=0\n  local rr=0\n  local ss=0\n  local\
    \ tt=0\n  local uu=0\n  local vv=0\n  local ww=0\n  local xx=0\n  local yy=0\n\
    \  local zz=0\n  local aaa=0\n  local bbb=0\n  local ccc=0\n  local ddd=0\n  local\
    \ eee=0\n  local fff=0\n  local ggg=0\n  local hhh=0\n  local iii=0\n  local jjj=0\n\
    \  local kkk=0\n  local lll=0\n  local mmm=0\n  local nnn=0\n  local ooo=0\n \
    \ local ppp=0\n  local qqq=0\n  local rrr=0\n  local sss=0\n  local ttt=0\n  local\
    \ uuu=0\n  local vvv=0\n  local www=0\n  local xxx=0\n  local yyy\n}\n\ncandidate()\
    \ {\n    exchange \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"1 2\
    \ 3 4\" \"1 2 3 4\") = \"YES\" ]]\n    [[ $(candidate \"1 2 3 4\" \"1 5 3 4\"\
    ) = \"NO\" ]]\n    [[ $(candidate \"1 2 3 4\" \"2 1 4 3\") = \"YES\" ]]\n    [[\
    \ $(candidate \"5 7 3\" \"2 6 4\") = \"YES\" ]]\n    [[ $(candidate \"5 7 3\"\
    \ \"2 6 3\") = \"NO\" ]]\n    [[ $(candidate \"3 2 6 1 8 9\" \"3 5 5 1 1 1\")\
    \ = \"NO\" ]]\n    [[ $(candidate \"100 200\" \"200 200\") = \"YES\" ]]\n}\n\n\
    run_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660002369
- exit_code: 1
  program: "#!/bin/bash\n# In this problem, you will implement a function that takes\
    \ two lists of numbers,\n# and determines whether it is possible to perform an\
    \ exchange of elements\n# between them to make lst1 a list of only even numbers.\n\
    # There is no limit on the number of exchanged elements between lst1 and lst2.\n\
    # If it is possible to exchange elements between the lst1 and lst2 to make\n#\
    \ all the elements of lst1 to be even, return \"YES\".\n# Otherwise, return \"\
    NO\".\n# For example:\n# It is assumed that the input lists will be non-empty.\n\
    #\n# $1 is a space-separated list\n# $2 is a space-separated list\nexchange()\
    \ {\n  local lst1=($1)\n  local lst2=($2)\n  local lst1_even=0\n  local lst2_even=0\n\
    \  local lst1_odd=0\n  local lst2_odd=0\n  for i in ${lst1[@]}; do\n    if [[\
    \ $((i % 2)) -eq 0 ]]; then\n      ((lst1_even++))\n    else\n      ((lst1_odd++))\n\
    \    fi\n  done\n  for i in ${lst2[@]}; do\n    if [[ $((i % 2)) -eq 0 ]]; then\n\
    \      ((lst2_even++))\n    else\n      ((lst2_odd++))\n    fi\n  done\n  if [[\
    \ $lst1_even -eq 0 ]]; then\n    echo \"NO\"\n  elif [[ $lst2_even -eq 0 ]]; then\n\
    \    echo \"NO\"\n  elif [[ $lst1_odd -eq 0 ]]; then\n    echo \"YES\"\n  elif\
    \ [[ $lst2_odd -eq 0 ]]; then\n    echo \"YES\"\n  elif [[ $lst1_even -eq $lst2_even\
    \ ]]; then\n    echo \"YES\"\n  elif [[ $lst1_odd -eq $lst2_odd ]]; then\n   \
    \ echo \"YES\"\n  else\n    echo \"NO\"\n  fi\n}\n\ncandidate() {\n    exchange\
    \ \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"1 2 3 4\" \"1 2 3 4\"\
    ) = \"YES\" ]]\n    [[ $(candidate \"1 2 3 4\" \"1 5 3 4\") = \"NO\" ]]\n    [[\
    \ $(candidate \"1 2 3 4\" \"2 1 4 3\") = \"YES\" ]]\n    [[ $(candidate \"5 7\
    \ 3\" \"2 6 4\") = \"YES\" ]]\n    [[ $(candidate \"5 7 3\" \"2 6 3\") = \"NO\"\
    \ ]]\n    [[ $(candidate \"3 2 6 1 8 9\" \"3 5 5 1 1 1\") = \"NO\" ]]\n    [[\
    \ $(candidate \"100 200\" \"200 200\") = \"YES\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660002369
- exit_code: 1
  program: "#!/bin/bash\n# In this problem, you will implement a function that takes\
    \ two lists of numbers,\n# and determines whether it is possible to perform an\
    \ exchange of elements\n# between them to make lst1 a list of only even numbers.\n\
    # There is no limit on the number of exchanged elements between lst1 and lst2.\n\
    # If it is possible to exchange elements between the lst1 and lst2 to make\n#\
    \ all the elements of lst1 to be even, return \"YES\".\n# Otherwise, return \"\
    NO\".\n# For example:\n# It is assumed that the input lists will be non-empty.\n\
    #\n# $1 is a space-separated list\n# $2 is a space-separated list\nexchange()\
    \ {\n  local lst1=($1)\n  local lst2=($2)\n  local result=\"NO\"\n  for ((i=0;\
    \ i<${#lst1[@]}; i++)); do\n    if [[ ${lst1[$i]}%2 -ne 0 ]]; then\n      for\
    \ ((j=0; j<${#lst2[@]}; j++)); do\n        if [[ ${lst2[$j]}%2 -eq 0 ]]; then\n\
    \          lst1[$i]=${lst2[$j]}\n          lst2[$j]=${lst1[$i]}\n          result=\"\
    YES\"\n          break\n        fi\n      done\n    fi\n  done\n  echo $result\n\
    }\n\ncandidate() {\n    exchange \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate\
    \ \"1 2 3 4\" \"1 2 3 4\") = \"YES\" ]]\n    [[ $(candidate \"1 2 3 4\" \"1 5\
    \ 3 4\") = \"NO\" ]]\n    [[ $(candidate \"1 2 3 4\" \"2 1 4 3\") = \"YES\" ]]\n\
    \    [[ $(candidate \"5 7 3\" \"2 6 4\") = \"YES\" ]]\n    [[ $(candidate \"5\
    \ 7 3\" \"2 6 3\") = \"NO\" ]]\n    [[ $(candidate \"3 2 6 1 8 9\" \"3 5 5 1 1\
    \ 1\") = \"NO\" ]]\n    [[ $(candidate \"100 200\" \"200 200\") = \"YES\" ]]\n\
    }\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660002369
- exit_code: 1
  program: "#!/bin/bash\n# In this problem, you will implement a function that takes\
    \ two lists of numbers,\n# and determines whether it is possible to perform an\
    \ exchange of elements\n# between them to make lst1 a list of only even numbers.\n\
    # There is no limit on the number of exchanged elements between lst1 and lst2.\n\
    # If it is possible to exchange elements between the lst1 and lst2 to make\n#\
    \ all the elements of lst1 to be even, return \"YES\".\n# Otherwise, return \"\
    NO\".\n# For example:\n# It is assumed that the input lists will be non-empty.\n\
    #\n# $1 is a space-separated list\n# $2 is a space-separated list\nexchange()\
    \ {\n  local lst1=($1)\n  local lst2=($2)\n  local lst1_even=0\n  local lst2_even=0\n\
    \  local lst1_odd=0\n  local lst2_odd=0\n  local i=0\n  local j=0\n  local k=0\n\
    \  local l=0\n  local lst1_even_idx=()\n  local lst2_even_idx=()\n  local lst1_odd_idx=()\n\
    \  local lst2_odd_idx=()\n  local lst1_even_idx_len=0\n  local lst2_even_idx_len=0\n\
    \  local lst1_odd_idx_len=0\n  local lst2_odd_idx_len=0\n  local lst1_even_idx_len_even=0\n\
    \  local lst2_even_idx_len_even=0\n  local lst1_odd_idx_len_even=0\n  local lst2_odd_idx_len_even=0\n\
    \  local lst1_even_idx_len_odd=0\n  local lst2_even_idx_len_odd=0\n  local lst1_odd_idx_len_odd=0\n\
    \  local lst2_odd_idx_len_odd=0\n  local lst1_even_idx_len_even_idx=()\n  local\
    \ lst2_even_idx_len_even_idx=()\n  local lst1_odd_idx_len_even_idx=()\n  local\
    \ lst2_odd_idx_len_even_idx=()\n  local lst1_even_idx_len_odd_idx=()\n  local\
    \ lst2_even_idx_len_odd_idx=()\n  local lst1_odd_idx_len_odd_idx=()\n  local lst2_odd_idx_len_odd_idx=()\n\
    \  local lst1_even_idx_len_even_idx_len\n}\n\ncandidate() {\n    exchange \"$@\"\
    \n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"1 2 3 4\" \"1 2 3 4\") = \"\
    YES\" ]]\n    [[ $(candidate \"1 2 3 4\" \"1 5 3 4\") = \"NO\" ]]\n    [[ $(candidate\
    \ \"1 2 3 4\" \"2 1 4 3\") = \"YES\" ]]\n    [[ $(candidate \"5 7 3\" \"2 6 4\"\
    ) = \"YES\" ]]\n    [[ $(candidate \"5 7 3\" \"2 6 3\") = \"NO\" ]]\n    [[ $(candidate\
    \ \"3 2 6 1 8 9\" \"3 5 5 1 1 1\") = \"NO\" ]]\n    [[ $(candidate \"100 200\"\
    \ \"200 200\") = \"YES\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660002369
- exit_code: 1
  program: "#!/bin/bash\n# In this problem, you will implement a function that takes\
    \ two lists of numbers,\n# and determines whether it is possible to perform an\
    \ exchange of elements\n# between them to make lst1 a list of only even numbers.\n\
    # There is no limit on the number of exchanged elements between lst1 and lst2.\n\
    # If it is possible to exchange elements between the lst1 and lst2 to make\n#\
    \ all the elements of lst1 to be even, return \"YES\".\n# Otherwise, return \"\
    NO\".\n# For example:\n# It is assumed that the input lists will be non-empty.\n\
    #\n# $1 is a space-separated list\n# $2 is a space-separated list\nexchange()\
    \ {\n    lst1=($1)\n    lst2=($2)\n    for ((i=0; i<${#lst1[@]}; i++)); do\n \
    \       if [[ $((${lst1[$i]} % 2)) -ne 0 ]]; then\n            for ((j=0; j<${#lst2[@]};\
    \ j++)); do\n                if [[ $((${lst2[$j]} % 2)) -eq 0 ]]; then\n     \
    \               lst1[$i]=${lst2[$j]}\n                    lst2[$j]=${lst1[$i]}\n\
    \                    break\n                fi\n            done\n        fi\n\
    \    done\n    for ((i=0; i<${#lst1[@]}; i++)); do\n        if [[ $((${lst1[$i]}\
    \ % 2)) -ne 0 ]]; then\n            echo \"NO\"\n            return\n        fi\n\
    \    done\n    echo \"YES\"\n}\n\ncandidate() {\n    exchange \"$@\"\n}\n\nset\
    \ -e\nrun_test() {\n    [[ $(candidate \"1 2 3 4\" \"1 2 3 4\") = \"YES\" ]]\n\
    \    [[ $(candidate \"1 2 3 4\" \"1 5 3 4\") = \"NO\" ]]\n    [[ $(candidate \"\
    1 2 3 4\" \"2 1 4 3\") = \"YES\" ]]\n    [[ $(candidate \"5 7 3\" \"2 6 4\") =\
    \ \"YES\" ]]\n    [[ $(candidate \"5 7 3\" \"2 6 3\") = \"NO\" ]]\n    [[ $(candidate\
    \ \"3 2 6 1 8 9\" \"3 5 5 1 1 1\") = \"NO\" ]]\n    [[ $(candidate \"100 200\"\
    \ \"200 200\") = \"YES\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660002369
- exit_code: 1
  program: "#!/bin/bash\n# In this problem, you will implement a function that takes\
    \ two lists of numbers,\n# and determines whether it is possible to perform an\
    \ exchange of elements\n# between them to make lst1 a list of only even numbers.\n\
    # There is no limit on the number of exchanged elements between lst1 and lst2.\n\
    # If it is possible to exchange elements between the lst1 and lst2 to make\n#\
    \ all the elements of lst1 to be even, return \"YES\".\n# Otherwise, return \"\
    NO\".\n# For example:\n# It is assumed that the input lists will be non-empty.\n\
    #\n# $1 is a space-separated list\n# $2 is a space-separated list\nexchange()\
    \ {\n    local lst1=($1)\n    local lst2=($2)\n    local lst1_odd=()\n    local\
    \ lst2_even=()\n    local lst1_even=()\n    local lst2_odd=()\n    local lst1_even_count=0\n\
    \    local lst2_even_count=0\n    local lst1_odd_count=0\n    local lst2_odd_count=0\n\
    \    local lst1_count=0\n    local lst2_count=0\n    local i=0\n    local j=0\n\
    \    local k=0\n    local l=0\n    local m=0\n    local n=0\n    local o=0\n \
    \   local p=0\n    local q=0\n    local r=0\n    local s=0\n    local t=0\n  \
    \  local u=0\n    local v=0\n    local w=0\n    local x=0\n    local y=0\n   \
    \ local z=0\n    local aa=0\n    local bb=0\n    local cc=0\n    local dd=0\n\
    \    local ee=0\n    local ff=0\n    local gg=0\n    local hh=0\n    local ii=0\n\
    \    local jj=0\n    local kk=0\n    local ll=0\n    local mm=0\n    local nn=0\n\
    \    local oo=0\n    local pp=0\n    local qq=0\n    local rr=0\n    local ss=0\n\
    \    local tt=0\n    local uu=0\n    local vv=0\n    local ww=0\n    local xx=0\n\
    \    local yy=0\n    local zz=0\n    local aaa=0\n    local bbb=0\n    local ccc=0\n\
    \    local ddd=0\n    local eee=0\n    local fff=0\n    local ggg=0\n    local\
    \ hhh=0\n    local iii=0\n    local jjj=0\n    local kkk=0\n    local lll=0\n\
    \    local mmm=0\n    local nnn=0\n    local ooo=\n}\n\ncandidate() {\n    exchange\
    \ \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"1 2 3 4\" \"1 2 3 4\"\
    ) = \"YES\" ]]\n    [[ $(candidate \"1 2 3 4\" \"1 5 3 4\") = \"NO\" ]]\n    [[\
    \ $(candidate \"1 2 3 4\" \"2 1 4 3\") = \"YES\" ]]\n    [[ $(candidate \"5 7\
    \ 3\" \"2 6 4\") = \"YES\" ]]\n    [[ $(candidate \"5 7 3\" \"2 6 3\") = \"NO\"\
    \ ]]\n    [[ $(candidate \"3 2 6 1 8 9\" \"3 5 5 1 1 1\") = \"NO\" ]]\n    [[\
    \ $(candidate \"100 200\" \"200 200\") = \"YES\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660002369
- exit_code: 1
  program: "#!/bin/bash\n# In this problem, you will implement a function that takes\
    \ two lists of numbers,\n# and determines whether it is possible to perform an\
    \ exchange of elements\n# between them to make lst1 a list of only even numbers.\n\
    # There is no limit on the number of exchanged elements between lst1 and lst2.\n\
    # If it is possible to exchange elements between the lst1 and lst2 to make\n#\
    \ all the elements of lst1 to be even, return \"YES\".\n# Otherwise, return \"\
    NO\".\n# For example:\n# It is assumed that the input lists will be non-empty.\n\
    #\n# $1 is a space-separated list\n# $2 is a space-separated list\nexchange()\
    \ {\n  local lst1=($1)\n  local lst2=($2)\n  local lst1_even=()\n  local lst1_odd=()\n\
    \  local lst2_even=()\n  local lst2_odd=()\n  local lst1_even_count=0\n  local\
    \ lst1_odd_count=0\n  local lst2_even_count=0\n  local lst2_odd_count=0\n  local\
    \ i=0\n  local j=0\n  local k=0\n  local l=0\n  local m=0\n  local n=0\n  local\
    \ o=0\n  local p=0\n  local q=0\n  local r=0\n  local s=0\n  local t=0\n  local\
    \ u=0\n  local v=0\n  local w=0\n  local x=0\n  local y=0\n  local z=0\n  local\
    \ aa=0\n  local bb=0\n  local cc=0\n  local dd=0\n  local ee=0\n  local ff=0\n\
    \  local gg=0\n  local hh=0\n  local ii=0\n  local jj=0\n  local kk=0\n  local\
    \ ll=0\n  local mm=0\n  local nn=0\n  local oo=0\n  local pp=0\n  local qq=0\n\
    \  local rr=0\n  local ss=0\n  local tt=0\n  local uu=0\n  local vv=0\n  local\
    \ ww=0\n  local xx=0\n  local yy=0\n  local zz=0\n  local aaa=0\n  local bbb=0\n\
    \  local ccc=0\n  local ddd=0\n  local eee=0\n  local fff=0\n  local ggg=0\n \
    \ local hhh=0\n  local iii=0\n  local jjj=0\n  local kkk=0\n  local lll=0\n  local\
    \ mmm=0\n  local nnn=0\n  local ooo=0\n  local ppp=0\n  local qqq=0\n  local rrr\n\
    }\n\ncandidate() {\n    exchange \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate\
    \ \"1 2 3 4\" \"1 2 3 4\") = \"YES\" ]]\n    [[ $(candidate \"1 2 3 4\" \"1 5\
    \ 3 4\") = \"NO\" ]]\n    [[ $(candidate \"1 2 3 4\" \"2 1 4 3\") = \"YES\" ]]\n\
    \    [[ $(candidate \"5 7 3\" \"2 6 4\") = \"YES\" ]]\n    [[ $(candidate \"5\
    \ 7 3\" \"2 6 3\") = \"NO\" ]]\n    [[ $(candidate \"3 2 6 1 8 9\" \"3 5 5 1 1\
    \ 1\") = \"NO\" ]]\n    [[ $(candidate \"100 200\" \"200 200\") = \"YES\" ]]\n\
    }\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660002369
- exit_code: 1
  program: "#!/bin/bash\n# In this problem, you will implement a function that takes\
    \ two lists of numbers,\n# and determines whether it is possible to perform an\
    \ exchange of elements\n# between them to make lst1 a list of only even numbers.\n\
    # There is no limit on the number of exchanged elements between lst1 and lst2.\n\
    # If it is possible to exchange elements between the lst1 and lst2 to make\n#\
    \ all the elements of lst1 to be even, return \"YES\".\n# Otherwise, return \"\
    NO\".\n# For example:\n# It is assumed that the input lists will be non-empty.\n\
    #\n# $1 is a space-separated list\n# $2 is a space-separated list\nexchange()\
    \ {\n  local lst1=($1)\n  local lst2=($2)\n  local lst1_odds=()\n  local lst2_evens=()\n\
    \  local lst1_evens=()\n  local lst2_odds=()\n  local lst1_evens_count=0\n  local\
    \ lst2_evens_count=0\n  local lst1_odds_count=0\n  local lst2_odds_count=0\n \
    \ local i=0\n  local j=0\n  local k=0\n  local l=0\n  local m=0\n  local n=0\n\
    \  local o=0\n  local p=0\n  local q=0\n  local r=0\n  local s=0\n  local t=0\n\
    \  local u=0\n  local v=0\n  local w=0\n  local x=0\n  local y=0\n  local z=0\n\
    \  local aa=0\n  local bb=0\n  local cc=0\n  local dd=0\n  local ee=0\n  local\
    \ ff=0\n  local gg=0\n  local hh=0\n  local ii=0\n  local jj=0\n  local kk=0\n\
    \  local ll=0\n  local mm=0\n  local nn=0\n  local oo=0\n  local pp=0\n  local\
    \ qq=0\n  local rr=0\n  local ss=0\n  local tt=0\n  local uu=0\n  local vv=0\n\
    \  local ww=0\n  local xx=0\n  local yy=0\n  local zz=0\n  local aaa=0\n  local\
    \ bbb=0\n  local ccc=0\n  local ddd=0\n  local eee=0\n  local fff=0\n  local ggg=0\n\
    \  local hhh=0\n  local iii=0\n  local jjj=0\n  local kkk=0\n  local lll=0\n \
    \ local mmm=0\n  local nnn=0\n  local ooo=0\n  local ppp=0\n  local q\n}\n\ncandidate()\
    \ {\n    exchange \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"1 2\
    \ 3 4\" \"1 2 3 4\") = \"YES\" ]]\n    [[ $(candidate \"1 2 3 4\" \"1 5 3 4\"\
    ) = \"NO\" ]]\n    [[ $(candidate \"1 2 3 4\" \"2 1 4 3\") = \"YES\" ]]\n    [[\
    \ $(candidate \"5 7 3\" \"2 6 4\") = \"YES\" ]]\n    [[ $(candidate \"5 7 3\"\
    \ \"2 6 3\") = \"NO\" ]]\n    [[ $(candidate \"3 2 6 1 8 9\" \"3 5 5 1 1 1\")\
    \ = \"NO\" ]]\n    [[ $(candidate \"100 200\" \"200 200\") = \"YES\" ]]\n}\n\n\
    run_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660002369
- exit_code: 1
  program: "#!/bin/bash\n# In this problem, you will implement a function that takes\
    \ two lists of numbers,\n# and determines whether it is possible to perform an\
    \ exchange of elements\n# between them to make lst1 a list of only even numbers.\n\
    # There is no limit on the number of exchanged elements between lst1 and lst2.\n\
    # If it is possible to exchange elements between the lst1 and lst2 to make\n#\
    \ all the elements of lst1 to be even, return \"YES\".\n# Otherwise, return \"\
    NO\".\n# For example:\n# It is assumed that the input lists will be non-empty.\n\
    #\n# $1 is a space-separated list\n# $2 is a space-separated list\nexchange()\
    \ {\n  local lst1=($1)\n  local lst2=($2)\n  local lst1_odd=()\n  local lst2_even=()\n\
    \  local lst1_even=()\n  local lst2_odd=()\n  local lst1_even_count=0\n  local\
    \ lst2_even_count=0\n  local lst1_odd_count=0\n  local lst2_odd_count=0\n  local\
    \ i=0\n  local j=0\n  local k=0\n  local l=0\n  local m=0\n  local n=0\n  local\
    \ o=0\n  local p=0\n  local q=0\n  local r=0\n  local s=0\n  local t=0\n  local\
    \ u=0\n  local v=0\n  local w=0\n  local x=0\n  local y=0\n  local z=0\n  local\
    \ aa=0\n  local bb=0\n  local cc=0\n  local dd=0\n  local ee=0\n  local ff=0\n\
    \  local gg=0\n  local hh=0\n  local ii=0\n  local jj=0\n  local kk=0\n  local\
    \ ll=0\n  local mm=0\n  local nn=0\n  local oo=0\n  local pp=0\n  local qq=0\n\
    \  local rr=0\n  local ss=0\n  local tt=0\n  local uu=0\n  local vv=0\n  local\
    \ ww=0\n  local xx=0\n  local yy=0\n  local zz=0\n  local aaa=0\n  local bbb=0\n\
    \  local ccc=0\n  local ddd=0\n  local eee=0\n  local fff=0\n  local ggg=0\n \
    \ local hhh=0\n  local iii=0\n  local jjj=0\n  local kkk=0\n  local lll=0\n  local\
    \ mmm=0\n  local nnn=0\n  local ooo=0\n  local ppp=0\n  local qqq=0\n  local rrr\n\
    }\n\ncandidate() {\n    exchange \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate\
    \ \"1 2 3 4\" \"1 2 3 4\") = \"YES\" ]]\n    [[ $(candidate \"1 2 3 4\" \"1 5\
    \ 3 4\") = \"NO\" ]]\n    [[ $(candidate \"1 2 3 4\" \"2 1 4 3\") = \"YES\" ]]\n\
    \    [[ $(candidate \"5 7 3\" \"2 6 4\") = \"YES\" ]]\n    [[ $(candidate \"5\
    \ 7 3\" \"2 6 3\") = \"NO\" ]]\n    [[ $(candidate \"3 2 6 1 8 9\" \"3 5 5 1 1\
    \ 1\") = \"NO\" ]]\n    [[ $(candidate \"100 200\" \"200 200\") = \"YES\" ]]\n\
    }\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660002369
- exit_code: 1
  program: "#!/bin/bash\n# In this problem, you will implement a function that takes\
    \ two lists of numbers,\n# and determines whether it is possible to perform an\
    \ exchange of elements\n# between them to make lst1 a list of only even numbers.\n\
    # There is no limit on the number of exchanged elements between lst1 and lst2.\n\
    # If it is possible to exchange elements between the lst1 and lst2 to make\n#\
    \ all the elements of lst1 to be even, return \"YES\".\n# Otherwise, return \"\
    NO\".\n# For example:\n# It is assumed that the input lists will be non-empty.\n\
    #\n# $1 is a space-separated list\n# $2 is a space-separated list\nexchange()\
    \ {\n  local lst1=($1)\n  local lst2=($2)\n  local lst1_odds=()\n  local lst2_evens=()\n\
    \  for i in ${lst1[@]}; do\n    if [[ $((i % 2)) -ne 0 ]]; then\n      lst1_odds+=($i)\n\
    \    fi\n  done\n  for i in ${lst2[@]}; do\n    if [[ $((i % 2)) -eq 0 ]]; then\n\
    \      lst2_evens+=($i)\n    fi\n  done\n  if [[ ${#lst1_odds[@]} -eq ${#lst2_evens[@]}\
    \ ]]; then\n    echo \"YES\"\n  else\n    echo \"NO\"\n  fi\n}\n\ncandidate()\
    \ {\n    exchange \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"1 2\
    \ 3 4\" \"1 2 3 4\") = \"YES\" ]]\n    [[ $(candidate \"1 2 3 4\" \"1 5 3 4\"\
    ) = \"NO\" ]]\n    [[ $(candidate \"1 2 3 4\" \"2 1 4 3\") = \"YES\" ]]\n    [[\
    \ $(candidate \"5 7 3\" \"2 6 4\") = \"YES\" ]]\n    [[ $(candidate \"5 7 3\"\
    \ \"2 6 3\") = \"NO\" ]]\n    [[ $(candidate \"3 2 6 1 8 9\" \"3 5 5 1 1 1\")\
    \ = \"NO\" ]]\n    [[ $(candidate \"100 200\" \"200 200\") = \"YES\" ]]\n}\n\n\
    run_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660002369
- exit_code: 1
  program: "#!/bin/bash\n# In this problem, you will implement a function that takes\
    \ two lists of numbers,\n# and determines whether it is possible to perform an\
    \ exchange of elements\n# between them to make lst1 a list of only even numbers.\n\
    # There is no limit on the number of exchanged elements between lst1 and lst2.\n\
    # If it is possible to exchange elements between the lst1 and lst2 to make\n#\
    \ all the elements of lst1 to be even, return \"YES\".\n# Otherwise, return \"\
    NO\".\n# For example:\n# It is assumed that the input lists will be non-empty.\n\
    #\n# $1 is a space-separated list\n# $2 is a space-separated list\nexchange()\
    \ {\n  local lst1=\"$1\"\n  local lst2=\"$2\"\n  local lst1_even=0\n  local lst2_even=0\n\
    \  local lst1_odd=0\n  local lst2_odd=0\n  for i in $lst1; do\n    if [ $(($i\
    \ % 2)) -eq 0 ]; then\n      lst1_even=$(($lst1_even + 1))\n    else\n      lst1_odd=$(($lst1_odd\
    \ + 1))\n    fi\n  done\n  for i in $lst2; do\n    if [ $(($i % 2)) -eq 0 ]; then\n\
    \      lst2_even=$(($lst2_even + 1))\n    else\n      lst2_odd=$(($lst2_odd +\
    \ 1))\n    fi\n  done\n  if [ $lst1_even -eq 0 ]; then\n    echo \"NO\"\n  elif\
    \ [ $lst2_odd -eq 0 ]; then\n    echo \"NO\"\n  elif [ $lst1_even -eq $lst2_odd\
    \ ]; then\n    echo \"YES\"\n  elif [ $lst1_even -gt $lst2_odd ]; then\n    echo\
    \ \"NO\"\n  else\n    echo \"YES\"\n  fi\n}\n\ncandidate() {\n    exchange \"\
    $@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"1 2 3 4\" \"1 2 3 4\") =\
    \ \"YES\" ]]\n    [[ $(candidate \"1 2 3 4\" \"1 5 3 4\") = \"NO\" ]]\n    [[\
    \ $(candidate \"1 2 3 4\" \"2 1 4 3\") = \"YES\" ]]\n    [[ $(candidate \"5 7\
    \ 3\" \"2 6 4\") = \"YES\" ]]\n    [[ $(candidate \"5 7 3\" \"2 6 3\") = \"NO\"\
    \ ]]\n    [[ $(candidate \"3 2 6 1 8 9\" \"3 5 5 1 1 1\") = \"NO\" ]]\n    [[\
    \ $(candidate \"100 200\" \"200 200\") = \"YES\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660002369
- exit_code: 1
  program: "#!/bin/bash\n# In this problem, you will implement a function that takes\
    \ two lists of numbers,\n# and determines whether it is possible to perform an\
    \ exchange of elements\n# between them to make lst1 a list of only even numbers.\n\
    # There is no limit on the number of exchanged elements between lst1 and lst2.\n\
    # If it is possible to exchange elements between the lst1 and lst2 to make\n#\
    \ all the elements of lst1 to be even, return \"YES\".\n# Otherwise, return \"\
    NO\".\n# For example:\n# It is assumed that the input lists will be non-empty.\n\
    #\n# $1 is a space-separated list\n# $2 is a space-separated list\nexchange()\
    \ {\n  local lst1=\"$1\"\n  local lst2=\"$2\"\n  local lst1_even=0\n  local lst2_even=0\n\
    \  local lst1_odd=0\n  local lst2_odd=0\n  for i in $lst1; do\n    if [ $((i %\
    \ 2)) -eq 0 ]; then\n      ((lst1_even++))\n    else\n      ((lst1_odd++))\n \
    \   fi\n  done\n  for i in $lst2; do\n    if [ $((i % 2)) -eq 0 ]; then\n    \
    \  ((lst2_even++))\n    else\n      ((lst2_odd++))\n    fi\n  done\n  if [ $lst1_even\
    \ -eq 0 ]; then\n    echo \"NO\"\n  elif [ $lst2_odd -eq 0 ]; then\n    echo \"\
    NO\"\n  elif [ $lst1_even -eq $lst2_odd ]; then\n    echo \"YES\"\n  elif [ $lst1_even\
    \ -gt $lst2_odd ]; then\n    echo \"YES\"\n  elif [ $lst1_even -lt $lst2_odd ];\
    \ then\n    echo \"YES\"\n  fi\n}\n\ncandidate() {\n    exchange \"$@\"\n}\n\n\
    set -e\nrun_test() {\n    [[ $(candidate \"1 2 3 4\" \"1 2 3 4\") = \"YES\" ]]\n\
    \    [[ $(candidate \"1 2 3 4\" \"1 5 3 4\") = \"NO\" ]]\n    [[ $(candidate \"\
    1 2 3 4\" \"2 1 4 3\") = \"YES\" ]]\n    [[ $(candidate \"5 7 3\" \"2 6 4\") =\
    \ \"YES\" ]]\n    [[ $(candidate \"5 7 3\" \"2 6 3\") = \"NO\" ]]\n    [[ $(candidate\
    \ \"3 2 6 1 8 9\" \"3 5 5 1 1 1\") = \"NO\" ]]\n    [[ $(candidate \"100 200\"\
    \ \"200 200\") = \"YES\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660002369
- exit_code: 1
  program: "#!/bin/bash\n# In this problem, you will implement a function that takes\
    \ two lists of numbers,\n# and determines whether it is possible to perform an\
    \ exchange of elements\n# between them to make lst1 a list of only even numbers.\n\
    # There is no limit on the number of exchanged elements between lst1 and lst2.\n\
    # If it is possible to exchange elements between the lst1 and lst2 to make\n#\
    \ all the elements of lst1 to be even, return \"YES\".\n# Otherwise, return \"\
    NO\".\n# For example:\n# It is assumed that the input lists will be non-empty.\n\
    #\n# $1 is a space-separated list\n# $2 is a space-separated list\nexchange()\
    \ {\n  local lst1=\"$1\"\n  local lst2=\"$2\"\n  local lst1_even=0\n  local lst2_even=0\n\
    \  local lst1_odd=0\n  local lst2_odd=0\n  local lst1_even_odd=0\n  local lst2_even_odd=0\n\
    \  local lst1_odd_even=0\n  local lst2_odd_even=0\n  local lst1_odd_odd=0\n  local\
    \ lst2_odd_odd=0\n  local lst1_even_even=0\n  local lst2_even_even=0\n  local\
    \ lst1_even_odd_even=0\n  local lst2_even_odd_even=0\n  local lst1_odd_even_odd=0\n\
    \  local lst2_odd_even_odd=0\n  local lst1_odd_odd_even=0\n  local lst2_odd_odd_even=0\n\
    \  local lst1_even_even_odd=0\n  local lst2_even_even_odd=0\n  local lst1_even_odd_odd=0\n\
    \  local lst2_even_odd_odd=0\n  local lst1_odd_even_even=0\n  local lst2_odd_even_even=0\n\
    \  local lst1_odd_odd_odd=0\n  local lst2_odd_odd_odd=0\n  local lst1_even_even_even=0\n\
    \  local lst2_even_even_even=0\n  local lst1_even_odd_even_odd=0\n  local lst2_even_odd_even_odd=0\n\
    \  local lst1_odd_even_odd_even=0\n  local lst2_odd_even_odd_even=0\n  local lst1_odd_odd_even_odd=0\n\
    \  local lst2_odd_odd_even_odd=0\n  local lst1_even_even_odd_even=0\n  local lst2_even_even_odd_even=0\n\
    \  local l\n}\n\ncandidate() {\n    exchange \"$@\"\n}\n\nset -e\nrun_test() {\n\
    \    [[ $(candidate \"1 2 3 4\" \"1 2 3 4\") = \"YES\" ]]\n    [[ $(candidate\
    \ \"1 2 3 4\" \"1 5 3 4\") = \"NO\" ]]\n    [[ $(candidate \"1 2 3 4\" \"2 1 4\
    \ 3\") = \"YES\" ]]\n    [[ $(candidate \"5 7 3\" \"2 6 4\") = \"YES\" ]]\n  \
    \  [[ $(candidate \"5 7 3\" \"2 6 3\") = \"NO\" ]]\n    [[ $(candidate \"3 2 6\
    \ 1 8 9\" \"3 5 5 1 1 1\") = \"NO\" ]]\n    [[ $(candidate \"100 200\" \"200 200\"\
    ) = \"YES\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660002369
- exit_code: 1
  program: "#!/bin/bash\n# In this problem, you will implement a function that takes\
    \ two lists of numbers,\n# and determines whether it is possible to perform an\
    \ exchange of elements\n# between them to make lst1 a list of only even numbers.\n\
    # There is no limit on the number of exchanged elements between lst1 and lst2.\n\
    # If it is possible to exchange elements between the lst1 and lst2 to make\n#\
    \ all the elements of lst1 to be even, return \"YES\".\n# Otherwise, return \"\
    NO\".\n# For example:\n# It is assumed that the input lists will be non-empty.\n\
    #\n# $1 is a space-separated list\n# $2 is a space-separated list\nexchange()\
    \ {\n  local lst1=\"$1\"\n  local lst2=\"$2\"\n  local lst1_even=0\n  local lst2_even=0\n\
    \  local lst1_odd=0\n  local lst2_odd=0\n  local lst1_even_odd=0\n  local lst2_even_odd=0\n\
    \  local lst1_odd_even=0\n  local lst2_odd_even=0\n  local lst1_odd_odd=0\n  local\
    \ lst2_odd_odd=0\n  local lst1_even_even=0\n  local lst2_even_even=0\n  local\
    \ lst1_even_odd_even=0\n  local lst2_even_odd_even=0\n  local lst1_odd_even_odd=0\n\
    \  local lst2_odd_even_odd=0\n  local lst1_odd_odd_even=0\n  local lst2_odd_odd_even=0\n\
    \  local lst1_even_even_odd=0\n  local lst2_even_even_odd=0\n  local lst1_even_odd_odd=0\n\
    \  local lst2_even_odd_odd=0\n  local lst1_odd_even_even=0\n  local lst2_odd_even_even=0\n\
    \  local lst1_odd_odd_odd=0\n  local lst2_odd_odd_odd=0\n  local lst1_even_even_even=0\n\
    \  local lst2_even_even_even=0\n  local lst1_odd_odd_odd_even=0\n  local lst2_odd_odd_odd_even=0\n\
    \  local lst1_even_even_even_odd=0\n  local lst2_even_even_even_odd=0\n  local\
    \ lst1_odd_odd_odd_odd=0\n  local lst2_odd_odd_odd_odd=0\n  local lst1_even_even_even_even=0\n\
    \  local lst2_even_even_even_even=0\n  local l\n}\n\ncandidate() {\n    exchange\
    \ \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"1 2 3 4\" \"1 2 3 4\"\
    ) = \"YES\" ]]\n    [[ $(candidate \"1 2 3 4\" \"1 5 3 4\") = \"NO\" ]]\n    [[\
    \ $(candidate \"1 2 3 4\" \"2 1 4 3\") = \"YES\" ]]\n    [[ $(candidate \"5 7\
    \ 3\" \"2 6 4\") = \"YES\" ]]\n    [[ $(candidate \"5 7 3\" \"2 6 3\") = \"NO\"\
    \ ]]\n    [[ $(candidate \"3 2 6 1 8 9\" \"3 5 5 1 1 1\") = \"NO\" ]]\n    [[\
    \ $(candidate \"100 200\" \"200 200\") = \"YES\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660002369
- exit_code: 1
  program: "#!/bin/bash\n# In this problem, you will implement a function that takes\
    \ two lists of numbers,\n# and determines whether it is possible to perform an\
    \ exchange of elements\n# between them to make lst1 a list of only even numbers.\n\
    # There is no limit on the number of exchanged elements between lst1 and lst2.\n\
    # If it is possible to exchange elements between the lst1 and lst2 to make\n#\
    \ all the elements of lst1 to be even, return \"YES\".\n# Otherwise, return \"\
    NO\".\n# For example:\n# It is assumed that the input lists will be non-empty.\n\
    #\n# $1 is a space-separated list\n# $2 is a space-separated list\nexchange()\
    \ {\n  local lst1=($1)\n  local lst2=($2)\n  local lst1_even=0\n  local lst2_even=0\n\
    \  local lst1_odd=0\n  local lst2_odd=0\n  local i=0\n  local j=0\n  local lst1_len=${#lst1[@]}\n\
    \  local lst2_len=${#lst2[@]}\n  for ((i=0; i<lst1_len; i++)); do\n    if [[ ${lst1[$i]}%2\
    \ -eq 0 ]]; then\n      ((lst1_even++))\n    else\n      ((lst1_odd++))\n    fi\n\
    \  done\n  for ((j=0; j<lst2_len; j++)); do\n    if [[ ${lst2[$j]}%2 -eq 0 ]];\
    \ then\n      ((lst2_even++))\n    else\n      ((lst2_odd++))\n    fi\n  done\n\
    \  if [[ $lst1_even -eq 0 ]]; then\n    echo \"NO\"\n  elif [[ $lst2_odd -eq 0\
    \ ]]; then\n    echo \"NO\"\n  elif [[ $lst1_even -gt $lst2_odd ]]; then\n   \
    \ echo \"NO\"\n  else\n    echo \"YES\"\n  fi\n}\n\ncandidate() {\n    exchange\
    \ \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"1 2 3 4\" \"1 2 3 4\"\
    ) = \"YES\" ]]\n    [[ $(candidate \"1 2 3 4\" \"1 5 3 4\") = \"NO\" ]]\n    [[\
    \ $(candidate \"1 2 3 4\" \"2 1 4 3\") = \"YES\" ]]\n    [[ $(candidate \"5 7\
    \ 3\" \"2 6 4\") = \"YES\" ]]\n    [[ $(candidate \"5 7 3\" \"2 6 3\") = \"NO\"\
    \ ]]\n    [[ $(candidate \"3 2 6 1 8 9\" \"3 5 5 1 1 1\") = \"NO\" ]]\n    [[\
    \ $(candidate \"100 200\" \"200 200\") = \"YES\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660002369
- exit_code: 1
  program: "#!/bin/bash\n# In this problem, you will implement a function that takes\
    \ two lists of numbers,\n# and determines whether it is possible to perform an\
    \ exchange of elements\n# between them to make lst1 a list of only even numbers.\n\
    # There is no limit on the number of exchanged elements between lst1 and lst2.\n\
    # If it is possible to exchange elements between the lst1 and lst2 to make\n#\
    \ all the elements of lst1 to be even, return \"YES\".\n# Otherwise, return \"\
    NO\".\n# For example:\n# It is assumed that the input lists will be non-empty.\n\
    #\n# $1 is a space-separated list\n# $2 is a space-separated list\nexchange()\
    \ {\n  local lst1=($1)\n  local lst2=($2)\n  local lst1_odd_count=0\n  local lst2_odd_count=0\n\
    \  for i in ${lst1[@]}; do\n    if [ $(($i % 2)) -ne 0 ]; then\n      lst1_odd_count=$(($lst1_odd_count\
    \ + 1))\n    fi\n  done\n  for i in ${lst2[@]}; do\n    if [ $(($i % 2)) -ne 0\
    \ ]; then\n      lst2_odd_count=$(($lst2_odd_count + 1))\n    fi\n  done\n  if\
    \ [ $lst1_odd_count -eq $lst2_odd_count ]; then\n    echo \"YES\"\n  else\n  \
    \  echo \"NO\"\n  fi\n}\n\ncandidate() {\n    exchange \"$@\"\n}\n\nset -e\nrun_test()\
    \ {\n    [[ $(candidate \"1 2 3 4\" \"1 2 3 4\") = \"YES\" ]]\n    [[ $(candidate\
    \ \"1 2 3 4\" \"1 5 3 4\") = \"NO\" ]]\n    [[ $(candidate \"1 2 3 4\" \"2 1 4\
    \ 3\") = \"YES\" ]]\n    [[ $(candidate \"5 7 3\" \"2 6 4\") = \"YES\" ]]\n  \
    \  [[ $(candidate \"5 7 3\" \"2 6 3\") = \"NO\" ]]\n    [[ $(candidate \"3 2 6\
    \ 1 8 9\" \"3 5 5 1 1 1\") = \"NO\" ]]\n    [[ $(candidate \"100 200\" \"200 200\"\
    ) = \"YES\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660002369
- exit_code: 1
  program: "#!/bin/bash\n# In this problem, you will implement a function that takes\
    \ two lists of numbers,\n# and determines whether it is possible to perform an\
    \ exchange of elements\n# between them to make lst1 a list of only even numbers.\n\
    # There is no limit on the number of exchanged elements between lst1 and lst2.\n\
    # If it is possible to exchange elements between the lst1 and lst2 to make\n#\
    \ all the elements of lst1 to be even, return \"YES\".\n# Otherwise, return \"\
    NO\".\n# For example:\n# It is assumed that the input lists will be non-empty.\n\
    #\n# $1 is a space-separated list\n# $2 is a space-separated list\nexchange()\
    \ {\n    local lst1=($1)\n    local lst2=($2)\n    local lst1_odd=()\n    local\
    \ lst2_even=()\n    local lst1_even=()\n    local lst2_odd=()\n    local lst1_even_count=0\n\
    \    local lst2_even_count=0\n    local lst1_odd_count=0\n    local lst2_odd_count=0\n\
    \    local lst1_count=0\n    local lst2_count=0\n    local lst1_odd_count=0\n\
    \    local lst2_odd_count=0\n    local lst1_even_count=0\n    local lst2_even_count=0\n\
    \    local lst1_odd_count=0\n    local lst2_odd_count=0\n    local lst1_even_count=0\n\
    \    local lst2_even_count=0\n    local lst1_odd_count=0\n    local lst2_odd_count=0\n\
    \    local lst1_even_count=0\n    local lst2_even_count=0\n    local lst1_odd_count=0\n\
    \    local lst2_odd_count=0\n    local lst1_even_count=0\n    local lst2_even_count=0\n\
    \    local lst1_odd_count=0\n    local lst2_odd_count=0\n    local lst1_even_count=0\n\
    \    local lst2_even_count=0\n    local lst1_odd_count=0\n    local lst2_odd_count=0\n\
    \    local lst1_even_count=0\n    local lst2_even_count=0\n    local lst1_odd_count=0\n\
    \    local lst2_odd_count=0\n    local lst1_even_count=0\n    local lst2_even_count=0\n\
    \    local lst1_odd_count=0\n    local lst2_odd_count=0\n    local lst1_even_count=0\n\
    \    local lst2_even_count=0\n}\n\ncandidate() {\n    exchange \"$@\"\n}\n\nset\
    \ -e\nrun_test() {\n    [[ $(candidate \"1 2 3 4\" \"1 2 3 4\") = \"YES\" ]]\n\
    \    [[ $(candidate \"1 2 3 4\" \"1 5 3 4\") = \"NO\" ]]\n    [[ $(candidate \"\
    1 2 3 4\" \"2 1 4 3\") = \"YES\" ]]\n    [[ $(candidate \"5 7 3\" \"2 6 4\") =\
    \ \"YES\" ]]\n    [[ $(candidate \"5 7 3\" \"2 6 3\") = \"NO\" ]]\n    [[ $(candidate\
    \ \"3 2 6 1 8 9\" \"3 5 5 1 1 1\") = \"NO\" ]]\n    [[ $(candidate \"100 200\"\
    \ \"200 200\") = \"YES\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660002369
- exit_code: 1
  program: "#!/bin/bash\n# In this problem, you will implement a function that takes\
    \ two lists of numbers,\n# and determines whether it is possible to perform an\
    \ exchange of elements\n# between them to make lst1 a list of only even numbers.\n\
    # There is no limit on the number of exchanged elements between lst1 and lst2.\n\
    # If it is possible to exchange elements between the lst1 and lst2 to make\n#\
    \ all the elements of lst1 to be even, return \"YES\".\n# Otherwise, return \"\
    NO\".\n# For example:\n# It is assumed that the input lists will be non-empty.\n\
    #\n# $1 is a space-separated list\n# $2 is a space-separated list\nexchange()\
    \ {\n  local lst1=($1)\n  local lst2=($2)\n  local lst1_even=0\n  local lst2_even=0\n\
    \  local lst1_odd=0\n  local lst2_odd=0\n  for i in ${lst1[@]}; do\n    if [[\
    \ $((i % 2)) -eq 0 ]]; then\n      ((lst1_even++))\n    else\n      ((lst1_odd++))\n\
    \    fi\n  done\n  for i in ${lst2[@]}; do\n    if [[ $((i % 2)) -eq 0 ]]; then\n\
    \      ((lst2_even++))\n    else\n      ((lst2_odd++))\n    fi\n  done\n  if [[\
    \ $lst1_even -eq 0 ]]; then\n    echo \"NO\"\n  elif [[ $lst2_odd -eq 0 ]]; then\n\
    \    echo \"NO\"\n  elif [[ $lst1_even -gt $lst2_odd ]]; then\n    echo \"NO\"\
    \n  else\n    echo \"YES\"\n  fi\n}\n\ncandidate() {\n    exchange \"$@\"\n}\n\
    \nset -e\nrun_test() {\n    [[ $(candidate \"1 2 3 4\" \"1 2 3 4\") = \"YES\"\
    \ ]]\n    [[ $(candidate \"1 2 3 4\" \"1 5 3 4\") = \"NO\" ]]\n    [[ $(candidate\
    \ \"1 2 3 4\" \"2 1 4 3\") = \"YES\" ]]\n    [[ $(candidate \"5 7 3\" \"2 6 4\"\
    ) = \"YES\" ]]\n    [[ $(candidate \"5 7 3\" \"2 6 3\") = \"NO\" ]]\n    [[ $(candidate\
    \ \"3 2 6 1 8 9\" \"3 5 5 1 1 1\") = \"NO\" ]]\n    [[ $(candidate \"100 200\"\
    \ \"200 200\") = \"YES\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660002369
- exit_code: 2
  program: "#!/bin/bash\n# In this problem, you will implement a function that takes\
    \ two lists of numbers,\n# and determines whether it is possible to perform an\
    \ exchange of elements\n# between them to make lst1 a list of only even numbers.\n\
    # There is no limit on the number of exchanged elements between lst1 and lst2.\n\
    # If it is possible to exchange elements between the lst1 and lst2 to make\n#\
    \ all the elements of lst1 to be even, return \"YES\".\n# Otherwise, return \"\
    NO\".\n# For example:\n# It is assumed that the input lists will be non-empty.\n\
    #\n# $1 is a space-separated list\n# $2 is a space-separated list\nexchange()\
    \ {\n  local lst1=\"$1\"\n  local lst2=\"$2\"\n  local lst1_even=0\n  local lst2_even=0\n\
    \  local lst1_odd=0\n  local lst2_odd=0\n  local lst1_even_odd=0\n  local lst2_even_odd=0\n\
    \  local lst1_odd_even=0\n  local lst2_odd_even=0\n  local lst1_odd_odd=0\n  local\
    \ lst2_odd_odd=0\n  local lst1_even_even=0\n  local lst2_even_even=0\n  for i\
    \ in $lst1; do\n    if [ $((i % 2)) -eq 0 ]; then\n      lst1_even=$((lst1_even\
    \ + 1))\n    else\n      lst1_odd=$((lst1_odd + 1))\n    fi\n  done\n  for i in\
    \ $lst2; do\n    if [ $((i % 2)) -eq 0 ]; then\n      lst2_even=$((lst2_even +\
    \ 1))\n    else\n      lst2_odd=$((lst2_odd + 1))\n    fi\n  done\n  lst1_even_odd=$((lst1_even\
    \ * lst2_odd))\n  lst2_even_odd=$((lst2_even * lst1_odd))\n  lst1_odd_even=$((lst1_odd\
    \ * lst2_even))\n  lst2_odd_even=$((lst2_odd * lst1_even))\n  lst1_odd_odd=$((lst1_odd\
    \ * lst2_odd))\n  lst2_odd_odd=$((lst2_odd * lst1_odd))\n  lst1_even_even=$((lst1_even\
    \ * lst2_even))\n  lst2_even_even=$((lst2_even * lst1_even))\n  if [ $lst1_even_odd\
    \ -gt 0 ] || [ $lst2_even_odd -gt 0 ] ||\n     [\n}\n\ncandidate() {\n    exchange\
    \ \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"1 2 3 4\" \"1 2 3 4\"\
    ) = \"YES\" ]]\n    [[ $(candidate \"1 2 3 4\" \"1 5 3 4\") = \"NO\" ]]\n    [[\
    \ $(candidate \"1 2 3 4\" \"2 1 4 3\") = \"YES\" ]]\n    [[ $(candidate \"5 7\
    \ 3\" \"2 6 4\") = \"YES\" ]]\n    [[ $(candidate \"5 7 3\" \"2 6 3\") = \"NO\"\
    \ ]]\n    [[ $(candidate \"3 2 6 1 8 9\" \"3 5 5 1 1 1\") = \"NO\" ]]\n    [[\
    \ $(candidate \"100 200\" \"200 200\") = \"YES\" ]]\n}\n\nrun_test"
  status: SyntaxError
  stderr: '/tmp/tmpdghlgwxk.sh: line 53: syntax error near unexpected token `}''

    /tmp/tmpdghlgwxk.sh: line 53: `}''

    '
  stdout: ''
  timestamp: 1660002369
- exit_code: 1
  program: "#!/bin/bash\n# In this problem, you will implement a function that takes\
    \ two lists of numbers,\n# and determines whether it is possible to perform an\
    \ exchange of elements\n# between them to make lst1 a list of only even numbers.\n\
    # There is no limit on the number of exchanged elements between lst1 and lst2.\n\
    # If it is possible to exchange elements between the lst1 and lst2 to make\n#\
    \ all the elements of lst1 to be even, return \"YES\".\n# Otherwise, return \"\
    NO\".\n# For example:\n# It is assumed that the input lists will be non-empty.\n\
    #\n# $1 is a space-separated list\n# $2 is a space-separated list\nexchange()\
    \ {\n    local lst1=($1)\n    local lst2=($2)\n    local lst1_odd=()\n    local\
    \ lst2_even=()\n    local lst1_even=()\n    local lst2_odd=()\n    local lst1_odd_count=0\n\
    \    local lst2_even_count=0\n    local lst1_even_count=0\n    local lst2_odd_count=0\n\
    \    for i in ${lst1[@]}; do\n        if [ $(($i % 2)) -eq 0 ]; then\n       \
    \     lst1_even[$lst1_even_count]=$i\n            lst1_even_count=$(($lst1_even_count\
    \ + 1))\n        else\n            lst1_odd[$lst1_odd_count]=$i\n            lst1_odd_count=$(($lst1_odd_count\
    \ + 1))\n        fi\n    done\n    for i in ${lst2[@]}; do\n        if [ $(($i\
    \ % 2)) -eq 0 ]; then\n            lst2_even[$lst2_even_count]=$i\n          \
    \  lst2_even_count=$(($lst2_even_count + 1))\n        else\n            lst2_odd[$lst2_odd_count]=$i\n\
    \            lst2_odd_count=$(($lst2_odd_count + 1))\n        fi\n    done\n \
    \   if [ $lst1_odd_count -eq $lst2_even_count ]; then\n        echo \"YES\"\n\
    \    else\n        echo \"NO\"\n    fi\n}\n\ncandidate() {\n    exchange \"$@\"\
    \n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"1 2 3 4\" \"1 2 3 4\") = \"\
    YES\" ]]\n    [[ $(candidate \"1 2 3 4\" \"1 5 3 4\") = \"NO\" ]]\n    [[ $(candidate\
    \ \"1 2 3 4\" \"2 1 4 3\") = \"YES\" ]]\n    [[ $(candidate \"5 7 3\" \"2 6 4\"\
    ) = \"YES\" ]]\n    [[ $(candidate \"5 7 3\" \"2 6 3\") = \"NO\" ]]\n    [[ $(candidate\
    \ \"3 2 6 1 8 9\" \"3 5 5 1 1 1\") = \"NO\" ]]\n    [[ $(candidate \"100 200\"\
    \ \"200 200\") = \"YES\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660002369
- exit_code: 1
  program: "#!/bin/bash\n# In this problem, you will implement a function that takes\
    \ two lists of numbers,\n# and determines whether it is possible to perform an\
    \ exchange of elements\n# between them to make lst1 a list of only even numbers.\n\
    # There is no limit on the number of exchanged elements between lst1 and lst2.\n\
    # If it is possible to exchange elements between the lst1 and lst2 to make\n#\
    \ all the elements of lst1 to be even, return \"YES\".\n# Otherwise, return \"\
    NO\".\n# For example:\n# It is assumed that the input lists will be non-empty.\n\
    #\n# $1 is a space-separated list\n# $2 is a space-separated list\nexchange()\
    \ {\n  local lst1=($1)\n  local lst2=($2)\n  local lst1_even=()\n  local lst1_odd=()\n\
    \  local lst2_even=()\n  local lst2_odd=()\n  local lst1_even_count=0\n  local\
    \ lst1_odd_count=0\n  local lst2_even_count=0\n  local lst2_odd_count=0\n  local\
    \ i=0\n  local j=0\n  local k=0\n  local l=0\n  local m=0\n  local n=0\n  local\
    \ o=0\n  local p=0\n  local q=0\n  local r=0\n  local s=0\n  local t=0\n  local\
    \ u=0\n  local v=0\n  local w=0\n  local x=0\n  local y=0\n  local z=0\n  local\
    \ aa=0\n  local bb=0\n  local cc=0\n  local dd=0\n  local ee=0\n  local ff=0\n\
    \  local gg=0\n  local hh=0\n  local ii=0\n  local jj=0\n  local kk=0\n  local\
    \ ll=0\n  local mm=0\n  local nn=0\n  local oo=0\n  local pp=0\n  local qq=0\n\
    \  local rr=0\n  local ss=0\n  local tt=0\n  local uu=0\n  local vv=0\n  local\
    \ ww=0\n  local xx=0\n  local yy=0\n  local zz=0\n  local aaa=0\n  local bbb=0\n\
    \  local ccc=0\n  local ddd=0\n  local eee=0\n  local fff=0\n  local ggg=0\n \
    \ local hhh=0\n  local iii=0\n  local jjj=0\n  local kkk=0\n  local lll=0\n  local\
    \ mmm=0\n  local nnn=0\n  local ooo=0\n  local ppp=0\n  local qqq=0\n  local rrr\n\
    }\n\ncandidate() {\n    exchange \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate\
    \ \"1 2 3 4\" \"1 2 3 4\") = \"YES\" ]]\n    [[ $(candidate \"1 2 3 4\" \"1 5\
    \ 3 4\") = \"NO\" ]]\n    [[ $(candidate \"1 2 3 4\" \"2 1 4 3\") = \"YES\" ]]\n\
    \    [[ $(candidate \"5 7 3\" \"2 6 4\") = \"YES\" ]]\n    [[ $(candidate \"5\
    \ 7 3\" \"2 6 3\") = \"NO\" ]]\n    [[ $(candidate \"3 2 6 1 8 9\" \"3 5 5 1 1\
    \ 1\") = \"NO\" ]]\n    [[ $(candidate \"100 200\" \"200 200\") = \"YES\" ]]\n\
    }\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660002369
- exit_code: 1
  program: "#!/bin/bash\n# In this problem, you will implement a function that takes\
    \ two lists of numbers,\n# and determines whether it is possible to perform an\
    \ exchange of elements\n# between them to make lst1 a list of only even numbers.\n\
    # There is no limit on the number of exchanged elements between lst1 and lst2.\n\
    # If it is possible to exchange elements between the lst1 and lst2 to make\n#\
    \ all the elements of lst1 to be even, return \"YES\".\n# Otherwise, return \"\
    NO\".\n# For example:\n# It is assumed that the input lists will be non-empty.\n\
    #\n# $1 is a space-separated list\n# $2 is a space-separated list\nexchange()\
    \ {\n    local lst1=($1)\n    local lst2=($2)\n    local lst1_len=${#lst1[@]}\n\
    \    local lst2_len=${#lst2[@]}\n    local lst1_odd_count=0\n    local lst2_odd_count=0\n\
    \    local i=0\n    local j=0\n    for ((i=0; i<lst1_len; i++)); do\n        if\
    \ [[ $((${lst1[$i]}%2)) -ne 0 ]]; then\n            lst1_odd_count=$(($lst1_odd_count+1))\n\
    \        fi\n    done\n    for ((j=0; j<lst2_len; j++)); do\n        if [[ $((${lst2[$j]}%2))\
    \ -ne 0 ]]; then\n            lst2_odd_count=$(($lst2_odd_count+1))\n        fi\n\
    \    done\n    if [[ $lst1_odd_count -eq $lst2_odd_count ]]; then\n        echo\
    \ \"YES\"\n    else\n        echo \"NO\"\n    fi\n}\n\ncandidate() {\n    exchange\
    \ \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"1 2 3 4\" \"1 2 3 4\"\
    ) = \"YES\" ]]\n    [[ $(candidate \"1 2 3 4\" \"1 5 3 4\") = \"NO\" ]]\n    [[\
    \ $(candidate \"1 2 3 4\" \"2 1 4 3\") = \"YES\" ]]\n    [[ $(candidate \"5 7\
    \ 3\" \"2 6 4\") = \"YES\" ]]\n    [[ $(candidate \"5 7 3\" \"2 6 3\") = \"NO\"\
    \ ]]\n    [[ $(candidate \"3 2 6 1 8 9\" \"3 5 5 1 1 1\") = \"NO\" ]]\n    [[\
    \ $(candidate \"100 200\" \"200 200\") = \"YES\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660002369
- exit_code: 1
  program: "#!/bin/bash\n# In this problem, you will implement a function that takes\
    \ two lists of numbers,\n# and determines whether it is possible to perform an\
    \ exchange of elements\n# between them to make lst1 a list of only even numbers.\n\
    # There is no limit on the number of exchanged elements between lst1 and lst2.\n\
    # If it is possible to exchange elements between the lst1 and lst2 to make\n#\
    \ all the elements of lst1 to be even, return \"YES\".\n# Otherwise, return \"\
    NO\".\n# For example:\n# It is assumed that the input lists will be non-empty.\n\
    #\n# $1 is a space-separated list\n# $2 is a space-separated list\nexchange()\
    \ {\n  local lst1=($1)\n  local lst2=($2)\n  local lst1_even=()\n  local lst1_odd=()\n\
    \  local lst2_even=()\n  local lst2_odd=()\n  local i=0\n  for n in ${lst1[@]};\
    \ do\n    if (( n % 2 == 0 )); then\n      lst1_even[$i]=$n\n    else\n      lst1_odd[$i]=$n\n\
    \    fi\n    (( i++ ))\n  done\n  i=0\n  for n in ${lst2[@]}; do\n    if (( n\
    \ % 2 == 0 )); then\n      lst2_even[$i]=$n\n    else\n      lst2_odd[$i]=$n\n\
    \    fi\n    (( i++ ))\n  done\n  if (( ${#lst1_even[@]} == 0 )); then\n    echo\
    \ \"NO\"\n    return\n  fi\n  if (( ${#lst2_odd[@]} == 0 )); then\n    echo \"\
    NO\"\n    return\n  fi\n  echo \"YES\"\n}\n\ncandidate() {\n    exchange \"$@\"\
    \n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"1 2 3 4\" \"1 2 3 4\") = \"\
    YES\" ]]\n    [[ $(candidate \"1 2 3 4\" \"1 5 3 4\") = \"NO\" ]]\n    [[ $(candidate\
    \ \"1 2 3 4\" \"2 1 4 3\") = \"YES\" ]]\n    [[ $(candidate \"5 7 3\" \"2 6 4\"\
    ) = \"YES\" ]]\n    [[ $(candidate \"5 7 3\" \"2 6 3\") = \"NO\" ]]\n    [[ $(candidate\
    \ \"3 2 6 1 8 9\" \"3 5 5 1 1 1\") = \"NO\" ]]\n    [[ $(candidate \"100 200\"\
    \ \"200 200\") = \"YES\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660002369
- exit_code: 1
  program: "#!/bin/bash\n# In this problem, you will implement a function that takes\
    \ two lists of numbers,\n# and determines whether it is possible to perform an\
    \ exchange of elements\n# between them to make lst1 a list of only even numbers.\n\
    # There is no limit on the number of exchanged elements between lst1 and lst2.\n\
    # If it is possible to exchange elements between the lst1 and lst2 to make\n#\
    \ all the elements of lst1 to be even, return \"YES\".\n# Otherwise, return \"\
    NO\".\n# For example:\n# It is assumed that the input lists will be non-empty.\n\
    #\n# $1 is a space-separated list\n# $2 is a space-separated list\nexchange()\
    \ {\n  local lst1=($1)\n  local lst2=($2)\n  local lst1_odd=()\n  local lst2_even=()\n\
    \  local lst1_even=()\n  local lst2_odd=()\n  local lst1_even_count=0\n  local\
    \ lst2_even_count=0\n  local lst1_odd_count=0\n  local lst2_odd_count=0\n  local\
    \ lst1_even_index=0\n  local lst2_even_index=0\n  local lst1_odd_index=0\n  local\
    \ lst2_odd_index=0\n  local lst1_index=0\n  local lst2_index=0\n  local lst1_length=${#lst1[@]}\n\
    \  local lst2_length=${#lst2[@]}\n  local lst1_odd_length=0\n  local lst2_even_length=0\n\
    \  local lst1_even_length=0\n  local lst2_odd_length=0\n  local lst1_odd_index=0\n\
    \  local lst2_even_index=0\n  local lst1_even_index=0\n  local lst2_odd_index=0\n\
    \  local lst1_odd_count=0\n  local lst2_even_count=0\n  local lst1_even_count=0\n\
    \  local lst2_odd_count=0\n  local lst1_odd_length=0\n  local lst2_even_length=0\n\
    \  local lst1_even_length=0\n  local lst2_odd_length=0\n  local lst1_odd_index=0\n\
    \  local lst2_even_index=0\n  local lst1_even_index=0\n  local lst2_odd_index=0\n\
    \  local lst1_odd_count=0\n  local lst2_even_count=0\n  local lst1_even_count=0\n\
    \  local lst2_odd_count=0\n  local lst1_odd_length=0\n \n}\n\ncandidate() {\n\
    \    exchange \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"1 2 3 4\"\
    \ \"1 2 3 4\") = \"YES\" ]]\n    [[ $(candidate \"1 2 3 4\" \"1 5 3 4\") = \"\
    NO\" ]]\n    [[ $(candidate \"1 2 3 4\" \"2 1 4 3\") = \"YES\" ]]\n    [[ $(candidate\
    \ \"5 7 3\" \"2 6 4\") = \"YES\" ]]\n    [[ $(candidate \"5 7 3\" \"2 6 3\") =\
    \ \"NO\" ]]\n    [[ $(candidate \"3 2 6 1 8 9\" \"3 5 5 1 1 1\") = \"NO\" ]]\n\
    \    [[ $(candidate \"100 200\" \"200 200\") = \"YES\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660002369
- exit_code: 1
  program: "#!/bin/bash\n# In this problem, you will implement a function that takes\
    \ two lists of numbers,\n# and determines whether it is possible to perform an\
    \ exchange of elements\n# between them to make lst1 a list of only even numbers.\n\
    # There is no limit on the number of exchanged elements between lst1 and lst2.\n\
    # If it is possible to exchange elements between the lst1 and lst2 to make\n#\
    \ all the elements of lst1 to be even, return \"YES\".\n# Otherwise, return \"\
    NO\".\n# For example:\n# It is assumed that the input lists will be non-empty.\n\
    #\n# $1 is a space-separated list\n# $2 is a space-separated list\nexchange()\
    \ {\n  local lst1=$1\n  local lst2=$2\n  local lst1_even=0\n  local lst2_even=0\n\
    \  local lst1_odd=0\n  local lst2_odd=0\n  local lst1_even_odd=0\n  local lst2_even_odd=0\n\
    \  local lst1_odd_even=0\n  local lst2_odd_even=0\n  local lst1_odd_odd=0\n  local\
    \ lst2_odd_odd=0\n  local lst1_even_even=0\n  local lst2_even_even=0\n  local\
    \ lst1_even_odd_even=0\n  local lst2_even_odd_even=0\n  local lst1_odd_even_odd=0\n\
    \  local lst2_odd_even_odd=0\n  local lst1_odd_odd_even=0\n  local lst2_odd_odd_even=0\n\
    \  local lst1_even_even_odd=0\n  local lst2_even_even_odd=0\n  local lst1_even_odd_odd=0\n\
    \  local lst2_even_odd_odd=0\n  local lst1_odd_even_even=0\n  local lst2_odd_even_even=0\n\
    \  local lst1_odd_odd_odd=0\n  local lst2_odd_odd_odd=0\n  local lst1_even_even_even=0\n\
    \  local lst2_even_even_even=0\n  local lst1_even_odd_even_odd=0\n  local lst2_even_odd_even_odd=0\n\
    \  local lst1_odd_even_odd_even=0\n  local lst2_odd_even_odd_even=0\n  local lst1_odd_odd_even_odd=0\n\
    \  local lst2_odd_odd_even_odd=0\n  local lst1_even_even_odd_even=0\n  local lst2_even_even_odd_even=0\n\
    \  local lst1_even\n}\n\ncandidate() {\n    exchange \"$@\"\n}\n\nset -e\nrun_test()\
    \ {\n    [[ $(candidate \"1 2 3 4\" \"1 2 3 4\") = \"YES\" ]]\n    [[ $(candidate\
    \ \"1 2 3 4\" \"1 5 3 4\") = \"NO\" ]]\n    [[ $(candidate \"1 2 3 4\" \"2 1 4\
    \ 3\") = \"YES\" ]]\n    [[ $(candidate \"5 7 3\" \"2 6 4\") = \"YES\" ]]\n  \
    \  [[ $(candidate \"5 7 3\" \"2 6 3\") = \"NO\" ]]\n    [[ $(candidate \"3 2 6\
    \ 1 8 9\" \"3 5 5 1 1 1\") = \"NO\" ]]\n    [[ $(candidate \"100 200\" \"200 200\"\
    ) = \"YES\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660002369
- exit_code: 1
  program: "#!/bin/bash\n# In this problem, you will implement a function that takes\
    \ two lists of numbers,\n# and determines whether it is possible to perform an\
    \ exchange of elements\n# between them to make lst1 a list of only even numbers.\n\
    # There is no limit on the number of exchanged elements between lst1 and lst2.\n\
    # If it is possible to exchange elements between the lst1 and lst2 to make\n#\
    \ all the elements of lst1 to be even, return \"YES\".\n# Otherwise, return \"\
    NO\".\n# For example:\n# It is assumed that the input lists will be non-empty.\n\
    #\n# $1 is a space-separated list\n# $2 is a space-separated list\nexchange()\
    \ {\n    local lst1=($1)\n    local lst2=($2)\n    local lst1_even=()\n    local\
    \ lst1_odd=()\n    local lst2_even=()\n    local lst2_odd=()\n    local lst1_even_count=0\n\
    \    local lst1_odd_count=0\n    local lst2_even_count=0\n    local lst2_odd_count=0\n\
    \    local i=0\n    local j=0\n    local k=0\n    local l=0\n    local m=0\n \
    \   local n=0\n    local o=0\n    local p=0\n    local q=0\n    local r=0\n  \
    \  local s=0\n    local t=0\n    local u=0\n    local v=0\n    local w=0\n   \
    \ local x=0\n    local y=0\n    local z=0\n    local aa=0\n    local bb=0\n  \
    \  local cc=0\n    local dd=0\n    local ee=0\n    local ff=0\n    local gg=0\n\
    \    local hh=0\n    local ii=0\n    local jj=0\n    local kk=0\n    local ll=0\n\
    \    local mm=0\n    local nn=0\n    local oo=0\n    local pp=0\n    local qq=0\n\
    \    local rr=0\n    local ss=0\n    local tt=0\n    local uu=0\n    local vv=0\n\
    \    local ww=0\n    local xx=0\n    local yy=0\n    local zz=0\n    local aaa=0\n\
    \    local bbb=0\n    local ccc=0\n    local ddd=0\n    local eee=0\n    local\
    \ fff=0\n    local ggg=0\n    local hhh=0\n    local iii=0\n    local jjj=0\n\
    \    local kkk=0\n    local lll=0\n    local mmm=0\n    local nnn=0\n    local\
    \ ooo=0\n    local ppp=0\n    local qqq=0\n    local rrr\n}\n\ncandidate() {\n\
    \    exchange \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"1 2 3 4\"\
    \ \"1 2 3 4\") = \"YES\" ]]\n    [[ $(candidate \"1 2 3 4\" \"1 5 3 4\") = \"\
    NO\" ]]\n    [[ $(candidate \"1 2 3 4\" \"2 1 4 3\") = \"YES\" ]]\n    [[ $(candidate\
    \ \"5 7 3\" \"2 6 4\") = \"YES\" ]]\n    [[ $(candidate \"5 7 3\" \"2 6 3\") =\
    \ \"NO\" ]]\n    [[ $(candidate \"3 2 6 1 8 9\" \"3 5 5 1 1 1\") = \"NO\" ]]\n\
    \    [[ $(candidate \"100 200\" \"200 200\") = \"YES\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660002369
- exit_code: 1
  program: "#!/bin/bash\n# In this problem, you will implement a function that takes\
    \ two lists of numbers,\n# and determines whether it is possible to perform an\
    \ exchange of elements\n# between them to make lst1 a list of only even numbers.\n\
    # There is no limit on the number of exchanged elements between lst1 and lst2.\n\
    # If it is possible to exchange elements between the lst1 and lst2 to make\n#\
    \ all the elements of lst1 to be even, return \"YES\".\n# Otherwise, return \"\
    NO\".\n# For example:\n# It is assumed that the input lists will be non-empty.\n\
    #\n# $1 is a space-separated list\n# $2 is a space-separated list\nexchange()\
    \ {\n  local lst1=($1)\n  local lst2=($2)\n  local lst1_even=()\n  local lst1_odd=()\n\
    \  local lst2_even=()\n  local lst2_odd=()\n  local lst1_even_count=0\n  local\
    \ lst1_odd_count=0\n  local lst2_even_count=0\n  local lst2_odd_count=0\n  local\
    \ i=0\n  local j=0\n  local k=0\n  local l=0\n  local m=0\n  local n=0\n  local\
    \ o=0\n  local p=0\n  local q=0\n  local r=0\n  local s=0\n  local t=0\n  local\
    \ u=0\n  local v=0\n  local w=0\n  local x=0\n  local y=0\n  local z=0\n  local\
    \ aa=0\n  local bb=0\n  local cc=0\n  local dd=0\n  local ee=0\n  local ff=0\n\
    \  local gg=0\n  local hh=0\n  local ii=0\n  local jj=0\n  local kk=0\n  local\
    \ ll=0\n  local mm=0\n  local nn=0\n  local oo=0\n  local pp=0\n  local qq=0\n\
    \  local rr=0\n  local ss=0\n  local tt=0\n  local uu=0\n  local vv=0\n  local\
    \ ww=0\n  local xx=0\n  local yy=0\n  local zz=0\n  local aaa=0\n  local bbb=0\n\
    \  local ccc=0\n  local ddd=0\n  local eee=0\n  local fff=0\n  local ggg=0\n \
    \ local hhh=0\n  local iii=0\n  local jjj=0\n  local kkk=0\n  local lll=0\n  local\
    \ mmm=0\n  local nnn=0\n  local ooo=0\n  local ppp=0\n  local qqq=0\n  local rrr\n\
    }\n\ncandidate() {\n    exchange \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate\
    \ \"1 2 3 4\" \"1 2 3 4\") = \"YES\" ]]\n    [[ $(candidate \"1 2 3 4\" \"1 5\
    \ 3 4\") = \"NO\" ]]\n    [[ $(candidate \"1 2 3 4\" \"2 1 4 3\") = \"YES\" ]]\n\
    \    [[ $(candidate \"5 7 3\" \"2 6 4\") = \"YES\" ]]\n    [[ $(candidate \"5\
    \ 7 3\" \"2 6 3\") = \"NO\" ]]\n    [[ $(candidate \"3 2 6 1 8 9\" \"3 5 5 1 1\
    \ 1\") = \"NO\" ]]\n    [[ $(candidate \"100 200\" \"200 200\") = \"YES\" ]]\n\
    }\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660002369
- exit_code: 1
  program: "#!/bin/bash\n# In this problem, you will implement a function that takes\
    \ two lists of numbers,\n# and determines whether it is possible to perform an\
    \ exchange of elements\n# between them to make lst1 a list of only even numbers.\n\
    # There is no limit on the number of exchanged elements between lst1 and lst2.\n\
    # If it is possible to exchange elements between the lst1 and lst2 to make\n#\
    \ all the elements of lst1 to be even, return \"YES\".\n# Otherwise, return \"\
    NO\".\n# For example:\n# It is assumed that the input lists will be non-empty.\n\
    #\n# $1 is a space-separated list\n# $2 is a space-separated list\nexchange()\
    \ {\n  local lst1=($1)\n  local lst2=($2)\n  local lst1_odd=()\n  local lst2_even=()\n\
    \  local i=0\n  local j=0\n  local k=0\n  local l=0\n  local m=0\n  local n=0\n\
    \  local o=0\n  local p=0\n  local q=0\n  local r=0\n  local s=0\n  local t=0\n\
    \  local u=0\n  local v=0\n  local w=0\n  local x=0\n  local y=0\n  local z=0\n\
    \  local aa=0\n  local bb=0\n  local cc=0\n  local dd=0\n  local ee=0\n  local\
    \ ff=0\n  local gg=0\n  local hh=0\n  local ii=0\n  local jj=0\n  local kk=0\n\
    \  local ll=0\n  local mm=0\n  local nn=0\n  local oo=0\n  local pp=0\n  local\
    \ qq=0\n  local rr=0\n  local ss=0\n  local tt=0\n  local uu=0\n  local vv=0\n\
    \  local ww=0\n  local xx=0\n  local yy=0\n  local zz=0\n  local aaa=0\n  local\
    \ bbb=0\n  local ccc=0\n  local ddd=0\n  local eee=0\n  local fff=0\n  local ggg=0\n\
    \  local hhh=0\n  local iii=0\n  local jjj=0\n  local kkk=0\n  local lll=0\n \
    \ local mmm=0\n  local nnn=0\n  local ooo=0\n  local ppp=0\n  local qqq=0\n  local\
    \ rrr=0\n  local sss=0\n  local ttt=0\n  local uuu=0\n  local vvv=0\n  local www=0\n\
    \  local xxx=0\n  local yyy=0\n  local zzz=0\n  local aaaa=0\n  local b\n}\n\n\
    candidate() {\n    exchange \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate\
    \ \"1 2 3 4\" \"1 2 3 4\") = \"YES\" ]]\n    [[ $(candidate \"1 2 3 4\" \"1 5\
    \ 3 4\") = \"NO\" ]]\n    [[ $(candidate \"1 2 3 4\" \"2 1 4 3\") = \"YES\" ]]\n\
    \    [[ $(candidate \"5 7 3\" \"2 6 4\") = \"YES\" ]]\n    [[ $(candidate \"5\
    \ 7 3\" \"2 6 3\") = \"NO\" ]]\n    [[ $(candidate \"3 2 6 1 8 9\" \"3 5 5 1 1\
    \ 1\") = \"NO\" ]]\n    [[ $(candidate \"100 200\" \"200 200\") = \"YES\" ]]\n\
    }\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660002369
- exit_code: 1
  program: "#!/bin/bash\n# In this problem, you will implement a function that takes\
    \ two lists of numbers,\n# and determines whether it is possible to perform an\
    \ exchange of elements\n# between them to make lst1 a list of only even numbers.\n\
    # There is no limit on the number of exchanged elements between lst1 and lst2.\n\
    # If it is possible to exchange elements between the lst1 and lst2 to make\n#\
    \ all the elements of lst1 to be even, return \"YES\".\n# Otherwise, return \"\
    NO\".\n# For example:\n# It is assumed that the input lists will be non-empty.\n\
    #\n# $1 is a space-separated list\n# $2 is a space-separated list\nexchange()\
    \ {\n  local lst1=($1)\n  local lst2=($2)\n  local lst1_odd_count=0\n  local lst2_odd_count=0\n\
    \  local lst1_odd_index=0\n  local lst2_odd_index=0\n  local lst1_odd_indexes=()\n\
    \  local lst2_odd_indexes=()\n  local i=0\n  local j=0\n  local k=0\n  local l=0\n\
    \  local m=0\n  local n=0\n  local o=0\n  local p=0\n  local q=0\n  local r=0\n\
    \  local s=0\n  local t=0\n  local u=0\n  local v=0\n  local w=0\n  local x=0\n\
    \  local y=0\n  local z=0\n  local aa=0\n  local ab=0\n  local ac=0\n  local ad=0\n\
    \  local ae=0\n  local af=0\n  local ag=0\n  local ah=0\n  local ai=0\n  local\
    \ aj=0\n  local ak=0\n  local al=0\n  local am=0\n  local an=0\n  local ao=0\n\
    \  local ap=0\n  local aq=0\n  local ar=0\n  local as=0\n  local at=0\n  local\
    \ au=0\n  local av=0\n  local aw=0\n  local ax=0\n  local ay=0\n  local az=0\n\
    \  local ba=0\n  local bb=0\n  local bc=0\n  local bd=0\n  local be=0\n  local\
    \ bf=0\n  local bg=0\n  local bh=0\n  local bi=0\n  local bj=0\n  local bk=0\n\
    \  local bl=0\n  local bm=0\n  local bn=0\n  local bo=0\n  local bp=0\n  local\
    \ bq=0\n  local br=0\n  local bs=0\n  local bt=0\n  local bu=0\n  local bv=0\n\
    \ \n}\n\ncandidate() {\n    exchange \"$@\"\n}\n\nset -e\nrun_test() {\n    [[\
    \ $(candidate \"1 2 3 4\" \"1 2 3 4\") = \"YES\" ]]\n    [[ $(candidate \"1 2\
    \ 3 4\" \"1 5 3 4\") = \"NO\" ]]\n    [[ $(candidate \"1 2 3 4\" \"2 1 4 3\")\
    \ = \"YES\" ]]\n    [[ $(candidate \"5 7 3\" \"2 6 4\") = \"YES\" ]]\n    [[ $(candidate\
    \ \"5 7 3\" \"2 6 3\") = \"NO\" ]]\n    [[ $(candidate \"3 2 6 1 8 9\" \"3 5 5\
    \ 1 1 1\") = \"NO\" ]]\n    [[ $(candidate \"100 200\" \"200 200\") = \"YES\"\
    \ ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660002369
- exit_code: 1
  program: "#!/bin/bash\n# In this problem, you will implement a function that takes\
    \ two lists of numbers,\n# and determines whether it is possible to perform an\
    \ exchange of elements\n# between them to make lst1 a list of only even numbers.\n\
    # There is no limit on the number of exchanged elements between lst1 and lst2.\n\
    # If it is possible to exchange elements between the lst1 and lst2 to make\n#\
    \ all the elements of lst1 to be even, return \"YES\".\n# Otherwise, return \"\
    NO\".\n# For example:\n# It is assumed that the input lists will be non-empty.\n\
    #\n# $1 is a space-separated list\n# $2 is a space-separated list\nexchange()\
    \ {\n  local lst1=\"$1\"\n  local lst2=\"$2\"\n  local lst1_even=0\n  local lst2_even=0\n\
    \  local lst1_odd=0\n  local lst2_odd=0\n  for i in $lst1; do\n    if [ $((i %\
    \ 2)) -eq 0 ]; then\n      ((lst1_even++))\n    else\n      ((lst1_odd++))\n \
    \   fi\n  done\n  for i in $lst2; do\n    if [ $((i % 2)) -eq 0 ]; then\n    \
    \  ((lst2_even++))\n    else\n      ((lst2_odd++))\n    fi\n  done\n  if [ $lst1_even\
    \ -eq 0 ]; then\n    echo \"NO\"\n  elif [ $lst2_odd -eq 0 ]; then\n    echo \"\
    NO\"\n  elif [ $lst1_even -eq $lst2_odd ]; then\n    echo \"YES\"\n  elif [ $lst1_even\
    \ -gt $lst2_odd ]; then\n    echo \"YES\"\n  elif [ $lst1_even -lt $lst2_odd ];\
    \ then\n    echo \"YES\"\n  fi\n}\n\ncandidate() {\n    exchange \"$@\"\n}\n\n\
    set -e\nrun_test() {\n    [[ $(candidate \"1 2 3 4\" \"1 2 3 4\") = \"YES\" ]]\n\
    \    [[ $(candidate \"1 2 3 4\" \"1 5 3 4\") = \"NO\" ]]\n    [[ $(candidate \"\
    1 2 3 4\" \"2 1 4 3\") = \"YES\" ]]\n    [[ $(candidate \"5 7 3\" \"2 6 4\") =\
    \ \"YES\" ]]\n    [[ $(candidate \"5 7 3\" \"2 6 3\") = \"NO\" ]]\n    [[ $(candidate\
    \ \"3 2 6 1 8 9\" \"3 5 5 1 1 1\") = \"NO\" ]]\n    [[ $(candidate \"100 200\"\
    \ \"200 200\") = \"YES\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660002369
- exit_code: 1
  program: "#!/bin/bash\n# In this problem, you will implement a function that takes\
    \ two lists of numbers,\n# and determines whether it is possible to perform an\
    \ exchange of elements\n# between them to make lst1 a list of only even numbers.\n\
    # There is no limit on the number of exchanged elements between lst1 and lst2.\n\
    # If it is possible to exchange elements between the lst1 and lst2 to make\n#\
    \ all the elements of lst1 to be even, return \"YES\".\n# Otherwise, return \"\
    NO\".\n# For example:\n# It is assumed that the input lists will be non-empty.\n\
    #\n# $1 is a space-separated list\n# $2 is a space-separated list\nexchange()\
    \ {\n    local lst1=($1)\n    local lst2=($2)\n    local lst1_even=0\n    local\
    \ lst2_even=0\n    local lst1_odd=0\n    local lst2_odd=0\n    local i=0\n   \
    \ local j=0\n    local k=0\n    local l=0\n    local m=0\n    local n=0\n    local\
    \ o=0\n    local p=0\n    local q=0\n    local r=0\n    local s=0\n    local t=0\n\
    \    local u=0\n    local v=0\n    local w=0\n    local x=0\n    local y=0\n \
    \   local z=0\n    local aa=0\n    local bb=0\n    local cc=0\n    local dd=0\n\
    \    local ee=0\n    local ff=0\n    local gg=0\n    local hh=0\n    local ii=0\n\
    \    local jj=0\n    local kk=0\n    local ll=0\n    local mm=0\n    local nn=0\n\
    \    local oo=0\n    local pp=0\n    local qq=0\n    local rr=0\n    local ss=0\n\
    \    local tt=0\n    local uu=0\n    local vv=0\n    local ww=0\n    local xx=0\n\
    \    local yy=0\n    local zz=0\n    local aaa=0\n    local bbb=0\n    local ccc=0\n\
    \    local ddd=0\n    local eee=0\n    local fff=0\n    local ggg=0\n    local\
    \ hhh=0\n    local iii=0\n    local jjj=0\n    local kkk=0\n    local lll=0\n\
    \    local mmm=0\n    local nnn=0\n    local ooo=0\n    local ppp=0\n    local\
    \ qqq=0\n    local rrr=0\n    local sss=0\n    local ttt=0\n    local uuu=0\n\
    \    local vvv=0\n    local www=0\n    local xxx=0\n    local yyy\n}\n\ncandidate()\
    \ {\n    exchange \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"1 2\
    \ 3 4\" \"1 2 3 4\") = \"YES\" ]]\n    [[ $(candidate \"1 2 3 4\" \"1 5 3 4\"\
    ) = \"NO\" ]]\n    [[ $(candidate \"1 2 3 4\" \"2 1 4 3\") = \"YES\" ]]\n    [[\
    \ $(candidate \"5 7 3\" \"2 6 4\") = \"YES\" ]]\n    [[ $(candidate \"5 7 3\"\
    \ \"2 6 3\") = \"NO\" ]]\n    [[ $(candidate \"3 2 6 1 8 9\" \"3 5 5 1 1 1\")\
    \ = \"NO\" ]]\n    [[ $(candidate \"100 200\" \"200 200\") = \"YES\" ]]\n}\n\n\
    run_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660002369
- exit_code: 1
  program: "#!/bin/bash\n# In this problem, you will implement a function that takes\
    \ two lists of numbers,\n# and determines whether it is possible to perform an\
    \ exchange of elements\n# between them to make lst1 a list of only even numbers.\n\
    # There is no limit on the number of exchanged elements between lst1 and lst2.\n\
    # If it is possible to exchange elements between the lst1 and lst2 to make\n#\
    \ all the elements of lst1 to be even, return \"YES\".\n# Otherwise, return \"\
    NO\".\n# For example:\n# It is assumed that the input lists will be non-empty.\n\
    #\n# $1 is a space-separated list\n# $2 is a space-separated list\nexchange()\
    \ {\n  local lst1=($1)\n  local lst2=($2)\n  local lst1_even=()\n  local lst1_odd=()\n\
    \  local lst2_even=()\n  local lst2_odd=()\n  local lst1_odd_count=0\n  local\
    \ lst2_odd_count=0\n  local lst1_even_count=0\n  local lst2_even_count=0\n  local\
    \ i=0\n  local j=0\n  local k=0\n  local l=0\n  local m=0\n  local n=0\n  local\
    \ o=0\n  local p=0\n  local q=0\n  local r=0\n  local s=0\n  local t=0\n  local\
    \ u=0\n  local v=0\n  local w=0\n  local x=0\n  local y=0\n  local z=0\n  local\
    \ aa=0\n  local bb=0\n  local cc=0\n  local dd=0\n  local ee=0\n  local ff=0\n\
    \  local gg=0\n  local hh=0\n  local ii=0\n  local jj=0\n  local kk=0\n  local\
    \ ll=0\n  local mm=0\n  local nn=0\n  local oo=0\n  local pp=0\n  local qq=0\n\
    \  local rr=0\n  local ss=0\n  local tt=0\n  local uu=0\n  local vv=0\n  local\
    \ ww=0\n  local xx=0\n  local yy=0\n  local zz=0\n  local aaa=0\n  local bbb=0\n\
    \  local ccc=0\n  local ddd=0\n  local eee=0\n  local fff=0\n  local ggg=0\n \
    \ local hhh=0\n  local iii=0\n  local jjj=0\n  local kkk=0\n  local lll=0\n  local\
    \ mmm=0\n  local nnn=0\n  local ooo=0\n  local ppp=0\n  local qqq=0\n  local rrr\n\
    }\n\ncandidate() {\n    exchange \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate\
    \ \"1 2 3 4\" \"1 2 3 4\") = \"YES\" ]]\n    [[ $(candidate \"1 2 3 4\" \"1 5\
    \ 3 4\") = \"NO\" ]]\n    [[ $(candidate \"1 2 3 4\" \"2 1 4 3\") = \"YES\" ]]\n\
    \    [[ $(candidate \"5 7 3\" \"2 6 4\") = \"YES\" ]]\n    [[ $(candidate \"5\
    \ 7 3\" \"2 6 3\") = \"NO\" ]]\n    [[ $(candidate \"3 2 6 1 8 9\" \"3 5 5 1 1\
    \ 1\") = \"NO\" ]]\n    [[ $(candidate \"100 200\" \"200 200\") = \"YES\" ]]\n\
    }\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660002369
- exit_code: 1
  program: "#!/bin/bash\n# In this problem, you will implement a function that takes\
    \ two lists of numbers,\n# and determines whether it is possible to perform an\
    \ exchange of elements\n# between them to make lst1 a list of only even numbers.\n\
    # There is no limit on the number of exchanged elements between lst1 and lst2.\n\
    # If it is possible to exchange elements between the lst1 and lst2 to make\n#\
    \ all the elements of lst1 to be even, return \"YES\".\n# Otherwise, return \"\
    NO\".\n# For example:\n# It is assumed that the input lists will be non-empty.\n\
    #\n# $1 is a space-separated list\n# $2 is a space-separated list\nexchange()\
    \ {\n    local lst1=$1\n    local lst2=$2\n    local lst1_even=0\n    local lst2_even=0\n\
    \    local lst1_odd=0\n    local lst2_odd=0\n    for i in $lst1; do\n        if\
    \ [ $((i % 2)) -eq 0 ]; then\n            lst1_even=$((lst1_even + 1))\n     \
    \   else\n            lst1_odd=$((lst1_odd + 1))\n        fi\n    done\n    for\
    \ i in $lst2; do\n        if [ $((i % 2)) -eq 0 ]; then\n            lst2_even=$((lst2_even\
    \ + 1))\n        else\n            lst2_odd=$((lst2_odd + 1))\n        fi\n  \
    \  done\n    if [ $lst1_even -eq 0 ]; then\n        echo \"NO\"\n    elif [ $lst2_odd\
    \ -eq 0 ]; then\n        echo \"NO\"\n    elif [ $lst1_even -eq $lst2_odd ]; then\n\
    \        echo \"YES\"\n    elif [ $lst1_even -gt $lst2_odd ]; then\n        echo\
    \ \"YES\"\n    elif [ $lst1_even -lt $lst2_odd ]; then\n        echo \"YES\"\n\
    \    fi\n}\n\ncandidate() {\n    exchange \"$@\"\n}\n\nset -e\nrun_test() {\n\
    \    [[ $(candidate \"1 2 3 4\" \"1 2 3 4\") = \"YES\" ]]\n    [[ $(candidate\
    \ \"1 2 3 4\" \"1 5 3 4\") = \"NO\" ]]\n    [[ $(candidate \"1 2 3 4\" \"2 1 4\
    \ 3\") = \"YES\" ]]\n    [[ $(candidate \"5 7 3\" \"2 6 4\") = \"YES\" ]]\n  \
    \  [[ $(candidate \"5 7 3\" \"2 6 3\") = \"NO\" ]]\n    [[ $(candidate \"3 2 6\
    \ 1 8 9\" \"3 5 5 1 1 1\") = \"NO\" ]]\n    [[ $(candidate \"100 200\" \"200 200\"\
    ) = \"YES\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660002369
- exit_code: 1
  program: "#!/bin/bash\n# In this problem, you will implement a function that takes\
    \ two lists of numbers,\n# and determines whether it is possible to perform an\
    \ exchange of elements\n# between them to make lst1 a list of only even numbers.\n\
    # There is no limit on the number of exchanged elements between lst1 and lst2.\n\
    # If it is possible to exchange elements between the lst1 and lst2 to make\n#\
    \ all the elements of lst1 to be even, return \"YES\".\n# Otherwise, return \"\
    NO\".\n# For example:\n# It is assumed that the input lists will be non-empty.\n\
    #\n# $1 is a space-separated list\n# $2 is a space-separated list\nexchange()\
    \ {\n  local -a lst1=($1)\n  local -a lst2=($2)\n  local -a evens=()\n  local\
    \ -a odds=()\n  local -a lst1_odds=()\n  local -a lst2_evens=()\n  local -a lst1_evens=()\n\
    \  local -a lst2_odds=()\n  local -a lst1_evens_odds=()\n  local -a lst2_evens_odds=()\n\
    \  local -a lst1_odds_evens=()\n  local -a lst2_odds_evens=()\n  local -a lst1_odds_evens_odds=()\n\
    \  local -a lst2_odds_evens_odds=()\n  local -a lst1_evens_odds_evens=()\n  local\
    \ -a lst2_evens_odds_evens=()\n  local -a lst1_odds_evens_odds_evens=()\n  local\
    \ -a lst2_odds_evens_odds_evens=()\n  local -a lst1_evens_odds_evens_odds=()\n\
    \  local -a lst2_evens_odds_evens_odds=()\n  local -a lst1_odds_evens_odds_evens_odds=()\n\
    \  local -a lst2_odds_evens_odds_evens_odds=()\n  local -a lst1_evens_odds_evens_odds_evens=()\n\
    \  local -a lst2_evens_odds_evens_odds_evens=()\n  local -a lst1_odds_evens_odds_evens_odds_evens=()\n\
    \  local -a lst2_odds_evens_odds_evens_odds_evens=()\n  local -a lst1_evens_odds_evens_odds_evens_odds=()\n\
    \  local -a lst\n}\n\ncandidate() {\n    exchange \"$@\"\n}\n\nset -e\nrun_test()\
    \ {\n    [[ $(candidate \"1 2 3 4\" \"1 2 3 4\") = \"YES\" ]]\n    [[ $(candidate\
    \ \"1 2 3 4\" \"1 5 3 4\") = \"NO\" ]]\n    [[ $(candidate \"1 2 3 4\" \"2 1 4\
    \ 3\") = \"YES\" ]]\n    [[ $(candidate \"5 7 3\" \"2 6 4\") = \"YES\" ]]\n  \
    \  [[ $(candidate \"5 7 3\" \"2 6 3\") = \"NO\" ]]\n    [[ $(candidate \"3 2 6\
    \ 1 8 9\" \"3 5 5 1 1 1\") = \"NO\" ]]\n    [[ $(candidate \"100 200\" \"200 200\"\
    ) = \"YES\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660002369
- exit_code: 1
  program: "#!/bin/bash\n# In this problem, you will implement a function that takes\
    \ two lists of numbers,\n# and determines whether it is possible to perform an\
    \ exchange of elements\n# between them to make lst1 a list of only even numbers.\n\
    # There is no limit on the number of exchanged elements between lst1 and lst2.\n\
    # If it is possible to exchange elements between the lst1 and lst2 to make\n#\
    \ all the elements of lst1 to be even, return \"YES\".\n# Otherwise, return \"\
    NO\".\n# For example:\n# It is assumed that the input lists will be non-empty.\n\
    #\n# $1 is a space-separated list\n# $2 is a space-separated list\nexchange()\
    \ {\n  local lst1=($1)\n  local lst2=($2)\n  local lst1_even=0\n  local lst2_even=0\n\
    \  local lst1_odd=0\n  local lst2_odd=0\n  for i in ${lst1[@]}; do\n    if [[\
    \ $((i % 2)) -eq 0 ]]; then\n      lst1_even=$((lst1_even + 1))\n    else\n  \
    \    lst1_odd=$((lst1_odd + 1))\n    fi\n  done\n  for i in ${lst2[@]}; do\n \
    \   if [[ $((i % 2)) -eq 0 ]]; then\n      lst2_even=$((lst2_even + 1))\n    else\n\
    \      lst2_odd=$((lst2_odd + 1))\n    fi\n  done\n  if [[ $lst1_even -eq 0 ]];\
    \ then\n    echo \"NO\"\n  elif [[ $lst2_odd -eq 0 ]]; then\n    echo \"NO\"\n\
    \  elif [[ $lst1_even -gt $lst2_odd ]]; then\n    echo \"NO\"\n  else\n    echo\
    \ \"YES\"\n  fi\n}\n\ncandidate() {\n    exchange \"$@\"\n}\n\nset -e\nrun_test()\
    \ {\n    [[ $(candidate \"1 2 3 4\" \"1 2 3 4\") = \"YES\" ]]\n    [[ $(candidate\
    \ \"1 2 3 4\" \"1 5 3 4\") = \"NO\" ]]\n    [[ $(candidate \"1 2 3 4\" \"2 1 4\
    \ 3\") = \"YES\" ]]\n    [[ $(candidate \"5 7 3\" \"2 6 4\") = \"YES\" ]]\n  \
    \  [[ $(candidate \"5 7 3\" \"2 6 3\") = \"NO\" ]]\n    [[ $(candidate \"3 2 6\
    \ 1 8 9\" \"3 5 5 1 1 1\") = \"NO\" ]]\n    [[ $(candidate \"100 200\" \"200 200\"\
    ) = \"YES\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660002369
- exit_code: 1
  program: "#!/bin/bash\n# In this problem, you will implement a function that takes\
    \ two lists of numbers,\n# and determines whether it is possible to perform an\
    \ exchange of elements\n# between them to make lst1 a list of only even numbers.\n\
    # There is no limit on the number of exchanged elements between lst1 and lst2.\n\
    # If it is possible to exchange elements between the lst1 and lst2 to make\n#\
    \ all the elements of lst1 to be even, return \"YES\".\n# Otherwise, return \"\
    NO\".\n# For example:\n# It is assumed that the input lists will be non-empty.\n\
    #\n# $1 is a space-separated list\n# $2 is a space-separated list\nexchange()\
    \ {\n  local lst1=($1)\n  local lst2=($2)\n  local lst1_odd=()\n  local lst2_even=()\n\
    \  local lst1_even=()\n  local lst2_odd=()\n  local lst1_even_count=0\n  local\
    \ lst2_even_count=0\n  local lst1_odd_count=0\n  local lst2_odd_count=0\n  local\
    \ lst1_even_odd_diff=0\n  local lst2_even_odd_diff=0\n  local lst1_even_odd_diff_abs=0\n\
    \  local lst2_even_odd_diff_abs=0\n  local lst1_even_odd_diff_abs_sum=0\n  local\
    \ lst2_even_odd_diff_abs_sum=0\n  local lst1_even_odd_diff_abs_sum_diff=0\n  local\
    \ lst2_even_odd_diff_abs_sum_diff=0\n  local lst1_even_odd_diff_abs_sum_diff_abs=0\n\
    \  local lst2_even_odd_diff_abs_sum_diff_abs=0\n  local lst1_even_odd_diff_abs_sum_diff_abs_sum=0\n\
    \  local lst2_even_odd_diff_abs_sum_diff_abs_sum=0\n  local lst1_even_odd_diff_abs_sum_diff_abs_sum_diff=0\n\
    \  local lst2_even_odd_diff_abs_sum_diff_abs_sum_diff=0\n  local lst1_even_odd_diff_abs_sum_diff_abs_sum_diff_abs=0\n\
    \  local lst2_even_odd_diff_abs_sum_diff_abs_sum_diff_abs=0\n  local lst1_even_odd_diff_abs_sum_diff_abs_sum_diff_abs_sum=0\n\
    \  local lst2_even_odd_diff_abs_sum_diff_abs_sum_diff_abs_sum=0\n  local lst1_even\n\
    }\n\ncandidate() {\n    exchange \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate\
    \ \"1 2 3 4\" \"1 2 3 4\") = \"YES\" ]]\n    [[ $(candidate \"1 2 3 4\" \"1 5\
    \ 3 4\") = \"NO\" ]]\n    [[ $(candidate \"1 2 3 4\" \"2 1 4 3\") = \"YES\" ]]\n\
    \    [[ $(candidate \"5 7 3\" \"2 6 4\") = \"YES\" ]]\n    [[ $(candidate \"5\
    \ 7 3\" \"2 6 3\") = \"NO\" ]]\n    [[ $(candidate \"3 2 6 1 8 9\" \"3 5 5 1 1\
    \ 1\") = \"NO\" ]]\n    [[ $(candidate \"100 200\" \"200 200\") = \"YES\" ]]\n\
    }\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660002369
- exit_code: 1
  program: "#!/bin/bash\n# In this problem, you will implement a function that takes\
    \ two lists of numbers,\n# and determines whether it is possible to perform an\
    \ exchange of elements\n# between them to make lst1 a list of only even numbers.\n\
    # There is no limit on the number of exchanged elements between lst1 and lst2.\n\
    # If it is possible to exchange elements between the lst1 and lst2 to make\n#\
    \ all the elements of lst1 to be even, return \"YES\".\n# Otherwise, return \"\
    NO\".\n# For example:\n# It is assumed that the input lists will be non-empty.\n\
    #\n# $1 is a space-separated list\n# $2 is a space-separated list\nexchange()\
    \ {\n  local lst1=\"$1\"\n  local lst2=\"$2\"\n  local lst1_evens=0\n  local lst2_odds=0\n\
    \  local lst1_odds=0\n  local lst2_evens=0\n  for i in $lst1; do\n    if [ $((i\
    \ % 2)) -eq 0 ]; then\n      lst1_evens=$((lst1_evens + 1))\n    else\n      lst1_odds=$((lst1_odds\
    \ + 1))\n    fi\n  done\n  for i in $lst2; do\n    if [ $((i % 2)) -eq 0 ]; then\n\
    \      lst2_evens=$((lst2_evens + 1))\n    else\n      lst2_odds=$((lst2_odds\
    \ + 1))\n    fi\n  done\n  if [ $lst1_evens -eq 0 ]; then\n    echo \"NO\"\n \
    \ elif [ $lst2_odds -eq 0 ]; then\n    echo \"NO\"\n  elif [ $lst1_odds -eq 0\
    \ ]; then\n    echo \"YES\"\n  elif [ $lst2_evens -eq 0 ]; then\n    echo \"YES\"\
    \n  elif [ $lst1_evens -eq $lst2_odds ]; then\n    echo \"YES\"\n  elif [ $lst1_odds\
    \ -eq $lst2_evens ]; then\n    echo \"YES\"\n  else\n    echo \"NO\"\n  fi\n}\n\
    \ncandidate() {\n    exchange \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate\
    \ \"1 2 3 4\" \"1 2 3 4\") = \"YES\" ]]\n    [[ $(candidate \"1 2 3 4\" \"1 5\
    \ 3 4\") = \"NO\" ]]\n    [[ $(candidate \"1 2 3 4\" \"2 1 4 3\") = \"YES\" ]]\n\
    \    [[ $(candidate \"5 7 3\" \"2 6 4\") = \"YES\" ]]\n    [[ $(candidate \"5\
    \ 7 3\" \"2 6 3\") = \"NO\" ]]\n    [[ $(candidate \"3 2 6 1 8 9\" \"3 5 5 1 1\
    \ 1\") = \"NO\" ]]\n    [[ $(candidate \"100 200\" \"200 200\") = \"YES\" ]]\n\
    }\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660002369
- exit_code: 1
  program: "#!/bin/bash\n# In this problem, you will implement a function that takes\
    \ two lists of numbers,\n# and determines whether it is possible to perform an\
    \ exchange of elements\n# between them to make lst1 a list of only even numbers.\n\
    # There is no limit on the number of exchanged elements between lst1 and lst2.\n\
    # If it is possible to exchange elements between the lst1 and lst2 to make\n#\
    \ all the elements of lst1 to be even, return \"YES\".\n# Otherwise, return \"\
    NO\".\n# For example:\n# It is assumed that the input lists will be non-empty.\n\
    #\n# $1 is a space-separated list\n# $2 is a space-separated list\nexchange()\
    \ {\n  local lst1=\"$1\"\n  local lst2=\"$2\"\n  local lst1_odds=()\n  local lst2_evens=()\n\
    \  local lst1_evens=()\n  local lst2_odds=()\n  local lst1_evens_count=0\n  local\
    \ lst2_evens_count=0\n  local lst1_odds_count=0\n  local lst2_odds_count=0\n \
    \ local lst1_odds_index=0\n  local lst2_evens_index=0\n  local lst1_evens_index=0\n\
    \  local lst2_odds_index=0\n  local lst1_odds_index_max=0\n  local lst2_evens_index_max=0\n\
    \  local lst1_evens_index_max=0\n  local lst2_odds_index_max=0\n  local lst1_odds_index_min=0\n\
    \  local lst2_evens_index_min=0\n  local lst1_evens_index_min=0\n  local lst2_odds_index_min=0\n\
    \  local lst1_odds_index_min_value=0\n  local lst2_evens_index_min_value=0\n \
    \ local lst1_evens_index_min_value=0\n  local lst2_odds_index_min_value=0\n  local\
    \ lst1_odds_index_max_value=0\n  local lst2_evens_index_max_value=0\n  local lst1_evens_index_max_value=0\n\
    \  local lst2_odds_index_max_value=0\n  local lst1_odds_index_min_value_index=0\n\
    \  local lst2_evens_index_min_value_index=0\n  local lst1_evens_index_min_value_index=0\n\
    \  local lst2_odds_index_min_value_index=0\n  local lst1_odds_index_\n}\n\ncandidate()\
    \ {\n    exchange \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"1 2\
    \ 3 4\" \"1 2 3 4\") = \"YES\" ]]\n    [[ $(candidate \"1 2 3 4\" \"1 5 3 4\"\
    ) = \"NO\" ]]\n    [[ $(candidate \"1 2 3 4\" \"2 1 4 3\") = \"YES\" ]]\n    [[\
    \ $(candidate \"5 7 3\" \"2 6 4\") = \"YES\" ]]\n    [[ $(candidate \"5 7 3\"\
    \ \"2 6 3\") = \"NO\" ]]\n    [[ $(candidate \"3 2 6 1 8 9\" \"3 5 5 1 1 1\")\
    \ = \"NO\" ]]\n    [[ $(candidate \"100 200\" \"200 200\") = \"YES\" ]]\n}\n\n\
    run_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660002369
- exit_code: 1
  program: "#!/bin/bash\n# In this problem, you will implement a function that takes\
    \ two lists of numbers,\n# and determines whether it is possible to perform an\
    \ exchange of elements\n# between them to make lst1 a list of only even numbers.\n\
    # There is no limit on the number of exchanged elements between lst1 and lst2.\n\
    # If it is possible to exchange elements between the lst1 and lst2 to make\n#\
    \ all the elements of lst1 to be even, return \"YES\".\n# Otherwise, return \"\
    NO\".\n# For example:\n# It is assumed that the input lists will be non-empty.\n\
    #\n# $1 is a space-separated list\n# $2 is a space-separated list\nexchange()\
    \ {\n  local lst1=($1)\n  local lst2=($2)\n  local lst1_odd=()\n  local lst2_even=()\n\
    \  local lst1_even=()\n  local lst2_odd=()\n  local lst1_odd_count=0\n  local\
    \ lst2_even_count=0\n  local lst1_even_count=0\n  local lst2_odd_count=0\n  local\
    \ i=0\n  local j=0\n  local k=0\n  local l=0\n  local m=0\n  local n=0\n  local\
    \ o=0\n  local p=0\n  local q=0\n  local r=0\n  local s=0\n  local t=0\n  local\
    \ u=0\n  local v=0\n  local w=0\n  local x=0\n  local y=0\n  local z=0\n  local\
    \ aa=0\n  local bb=0\n  local cc=0\n  local dd=0\n  local ee=0\n  local ff=0\n\
    \  local gg=0\n  local hh=0\n  local ii=0\n  local jj=0\n  local kk=0\n  local\
    \ ll=0\n  local mm=0\n  local nn=0\n  local oo=0\n  local pp=0\n  local qq=0\n\
    \  local rr=0\n  local ss=0\n  local tt=0\n  local uu=0\n  local vv=0\n  local\
    \ ww=0\n  local xx=0\n  local yy=0\n  local zz=0\n  local aaa=0\n  local bbb=0\n\
    \  local ccc=0\n  local ddd=0\n  local eee=0\n  local fff=0\n  local ggg=0\n \
    \ local hhh=0\n  local iii=0\n  local jjj=0\n  local kkk=0\n  local lll=0\n  local\
    \ mmm=0\n  local nnn=0\n  local ooo=0\n  local ppp=0\n  local qqq=0\n  local rrr\n\
    }\n\ncandidate() {\n    exchange \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate\
    \ \"1 2 3 4\" \"1 2 3 4\") = \"YES\" ]]\n    [[ $(candidate \"1 2 3 4\" \"1 5\
    \ 3 4\") = \"NO\" ]]\n    [[ $(candidate \"1 2 3 4\" \"2 1 4 3\") = \"YES\" ]]\n\
    \    [[ $(candidate \"5 7 3\" \"2 6 4\") = \"YES\" ]]\n    [[ $(candidate \"5\
    \ 7 3\" \"2 6 3\") = \"NO\" ]]\n    [[ $(candidate \"3 2 6 1 8 9\" \"3 5 5 1 1\
    \ 1\") = \"NO\" ]]\n    [[ $(candidate \"100 200\" \"200 200\") = \"YES\" ]]\n\
    }\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660002369
- exit_code: 1
  program: "#!/bin/bash\n# In this problem, you will implement a function that takes\
    \ two lists of numbers,\n# and determines whether it is possible to perform an\
    \ exchange of elements\n# between them to make lst1 a list of only even numbers.\n\
    # There is no limit on the number of exchanged elements between lst1 and lst2.\n\
    # If it is possible to exchange elements between the lst1 and lst2 to make\n#\
    \ all the elements of lst1 to be even, return \"YES\".\n# Otherwise, return \"\
    NO\".\n# For example:\n# It is assumed that the input lists will be non-empty.\n\
    #\n# $1 is a space-separated list\n# $2 is a space-separated list\nexchange()\
    \ {\n    local lst1=($1)\n    local lst2=($2)\n    local lst1_odds=()\n    local\
    \ lst2_evens=()\n    local lst1_evens=()\n    local lst2_odds=()\n    local i=0\n\
    \    local j=0\n    local k=0\n    local l=0\n    local m=0\n    local n=0\n \
    \   local result=\"NO\"\n    for i in ${lst1[@]}; do\n        if [ $(($i % 2))\
    \ -ne 0 ]; then\n            lst1_odds[$j]=$i\n            ((j++))\n        else\n\
    \            lst1_evens[$k]=$i\n            ((k++))\n        fi\n    done\n  \
    \  for i in ${lst2[@]}; do\n        if [ $(($i % 2)) -ne 0 ]; then\n         \
    \   lst2_odds[$l]=$i\n            ((l++))\n        else\n            lst2_evens[$m]=$i\n\
    \            ((m++))\n        fi\n    done\n    if [ ${#lst1_odds[@]} -eq ${#lst2_evens[@]}\
    \ ]; then\n        result=\"YES\"\n    elif [ ${#lst1_odds[@]} -lt ${#lst2_evens[@]}\
    \ ]; then\n        for i in ${lst1_odds[@]}; do\n            for j in ${lst2_evens[@]};\
    \ do\n                if [ $i -eq $j ]; then\n                    result=\"YES\"\
    \n                    break\n                fi\n            done\n        done\n\
    \    else\n        for i in ${lst2_odds[@]}; do\n            for j in ${lst1_evens[@]};\
    \ do\n                if [ $i -eq $j ]; then\n                    result=\"YES\"\
    \n                    break\n                fi\n            done\n        done\n\
    \    fi\n    echo $result\n}\n\ncandidate() {\n    exchange \"$@\"\n}\n\nset -e\n\
    run_test() {\n    [[ $(candidate \"1 2 3 4\" \"1 2 3 4\") = \"YES\" ]]\n    [[\
    \ $(candidate \"1 2 3 4\" \"1 5 3 4\") = \"NO\" ]]\n    [[ $(candidate \"1 2 3\
    \ 4\" \"2 1 4 3\") = \"YES\" ]]\n    [[ $(candidate \"5 7 3\" \"2 6 4\") = \"\
    YES\" ]]\n    [[ $(candidate \"5 7 3\" \"2 6 3\") = \"NO\" ]]\n    [[ $(candidate\
    \ \"3 2 6 1 8 9\" \"3 5 5 1 1 1\") = \"NO\" ]]\n    [[ $(candidate \"100 200\"\
    \ \"200 200\") = \"YES\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660002369
- exit_code: 1
  program: "#!/bin/bash\n# In this problem, you will implement a function that takes\
    \ two lists of numbers,\n# and determines whether it is possible to perform an\
    \ exchange of elements\n# between them to make lst1 a list of only even numbers.\n\
    # There is no limit on the number of exchanged elements between lst1 and lst2.\n\
    # If it is possible to exchange elements between the lst1 and lst2 to make\n#\
    \ all the elements of lst1 to be even, return \"YES\".\n# Otherwise, return \"\
    NO\".\n# For example:\n# It is assumed that the input lists will be non-empty.\n\
    #\n# $1 is a space-separated list\n# $2 is a space-separated list\nexchange()\
    \ {\n  local lst1=$1\n  local lst2=$2\n  local lst1_even=$(echo $lst1 | tr ' '\
    \ '\\n' | grep -c '^[02468]$')\n  local lst2_even=$(echo $lst2 | tr ' ' '\\n'\
    \ | grep -c '^[02468]$')\n  local lst1_odd=$(echo $lst1 | tr ' ' '\\n' | grep\
    \ -c '^[13579]$')\n  local lst2_odd=$(echo $lst2 | tr ' ' '\\n' | grep -c '^[13579]$')\n\
    \  if [ $lst1_even -eq 0 ] && [ $lst2_even -eq 0 ]; then\n    echo \"NO\"\n  elif\
    \ [ $lst1_odd -eq 0 ] && [ $lst2_odd -eq 0 ]; then\n    echo \"YES\"\n  elif [\
    \ $lst1_even -eq 0 ] && [ $lst2_odd -eq 0 ]; then\n    echo \"NO\"\n  elif [ $lst1_odd\
    \ -eq 0 ] && [ $lst2_even -eq 0 ]; then\n    echo \"NO\"\n  else\n    echo \"\
    YES\"\n  fi\n}\n\ncandidate() {\n    exchange \"$@\"\n}\n\nset -e\nrun_test()\
    \ {\n    [[ $(candidate \"1 2 3 4\" \"1 2 3 4\") = \"YES\" ]]\n    [[ $(candidate\
    \ \"1 2 3 4\" \"1 5 3 4\") = \"NO\" ]]\n    [[ $(candidate \"1 2 3 4\" \"2 1 4\
    \ 3\") = \"YES\" ]]\n    [[ $(candidate \"5 7 3\" \"2 6 4\") = \"YES\" ]]\n  \
    \  [[ $(candidate \"5 7 3\" \"2 6 3\") = \"NO\" ]]\n    [[ $(candidate \"3 2 6\
    \ 1 8 9\" \"3 5 5 1 1 1\") = \"NO\" ]]\n    [[ $(candidate \"100 200\" \"200 200\"\
    ) = \"YES\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660002369
- exit_code: 0
  program: "#!/bin/bash\n# In this problem, you will implement a function that takes\
    \ two lists of numbers,\n# and determines whether it is possible to perform an\
    \ exchange of elements\n# between them to make lst1 a list of only even numbers.\n\
    # There is no limit on the number of exchanged elements between lst1 and lst2.\n\
    # If it is possible to exchange elements between the lst1 and lst2 to make\n#\
    \ all the elements of lst1 to be even, return \"YES\".\n# Otherwise, return \"\
    NO\".\n# For example:\n# It is assumed that the input lists will be non-empty.\n\
    #\n# $1 is a space-separated list\n# $2 is a space-separated list\nexchange()\
    \ {\n  local lst1=\"$1\"\n  local lst2=\"$2\"\n  local lst1_odds=0\n  local lst2_evens=0\n\
    \  for i in $lst1; do\n    if [ $((i % 2)) -ne 0 ]; then\n      lst1_odds=$((lst1_odds\
    \ + 1))\n    fi\n  done\n  for i in $lst2; do\n    if [ $((i % 2)) -eq 0 ]; then\n\
    \      lst2_evens=$((lst2_evens + 1))\n    fi\n  done\n  if [ $lst1_odds -le $lst2_evens\
    \ ]; then\n    echo \"YES\"\n  else\n    echo \"NO\"\n  fi\n}\n\ncandidate() {\n\
    \    exchange \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"1 2 3 4\"\
    \ \"1 2 3 4\") = \"YES\" ]]\n    [[ $(candidate \"1 2 3 4\" \"1 5 3 4\") = \"\
    NO\" ]]\n    [[ $(candidate \"1 2 3 4\" \"2 1 4 3\") = \"YES\" ]]\n    [[ $(candidate\
    \ \"5 7 3\" \"2 6 4\") = \"YES\" ]]\n    [[ $(candidate \"5 7 3\" \"2 6 3\") =\
    \ \"NO\" ]]\n    [[ $(candidate \"3 2 6 1 8 9\" \"3 5 5 1 1 1\") = \"NO\" ]]\n\
    \    [[ $(candidate \"100 200\" \"200 200\") = \"YES\" ]]\n}\n\nrun_test"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660002369
- exit_code: 1
  program: "#!/bin/bash\n# In this problem, you will implement a function that takes\
    \ two lists of numbers,\n# and determines whether it is possible to perform an\
    \ exchange of elements\n# between them to make lst1 a list of only even numbers.\n\
    # There is no limit on the number of exchanged elements between lst1 and lst2.\n\
    # If it is possible to exchange elements between the lst1 and lst2 to make\n#\
    \ all the elements of lst1 to be even, return \"YES\".\n# Otherwise, return \"\
    NO\".\n# For example:\n# It is assumed that the input lists will be non-empty.\n\
    #\n# $1 is a space-separated list\n# $2 is a space-separated list\nexchange()\
    \ {\n    local lst1=($1)\n    local lst2=($2)\n    local lst1_odd=()\n    local\
    \ lst2_even=()\n    local lst1_even=()\n    local lst2_odd=()\n    local i=0\n\
    \    local j=0\n    local k=0\n    local l=0\n    local m=0\n    local n=0\n \
    \   local o=0\n    local p=0\n    local q=0\n    local r=0\n    local s=0\n  \
    \  local t=0\n    local u=0\n    local v=0\n    local w=0\n    local x=0\n   \
    \ local y=0\n    local z=0\n    local aa=0\n    local bb=0\n    local cc=0\n \
    \   local dd=0\n    local ee=0\n    local ff=0\n    local gg=0\n    local hh=0\n\
    \    local ii=0\n    local jj=0\n    local kk=0\n    local ll=0\n    local mm=0\n\
    \    local nn=0\n    local oo=0\n    local pp=0\n    local qq=0\n    local rr=0\n\
    \    local ss=0\n    local tt=0\n    local uu=0\n    local vv=0\n    local ww=0\n\
    \    local xx=0\n    local yy=0\n    local zz=0\n    local aaa=0\n    local bbb=0\n\
    \    local ccc=0\n    local ddd=0\n    local eee=0\n    local fff=0\n    local\
    \ ggg=0\n    local hhh=0\n    local iii=0\n    local jjj=0\n    local kkk=0\n\
    \    local lll=0\n    local mmm=0\n    local nnn=0\n    local ooo=0\n    local\
    \ ppp=0\n    local qqq=0\n    local rrr=0\n    local sss=0\n    local ttt=0\n\
    \    local uuu=0\n    local vvv=0\n    local www=0\n    local xxx=0\n    local\
    \ yyy\n}\n\ncandidate() {\n    exchange \"$@\"\n}\n\nset -e\nrun_test() {\n  \
    \  [[ $(candidate \"1 2 3 4\" \"1 2 3 4\") = \"YES\" ]]\n    [[ $(candidate \"\
    1 2 3 4\" \"1 5 3 4\") = \"NO\" ]]\n    [[ $(candidate \"1 2 3 4\" \"2 1 4 3\"\
    ) = \"YES\" ]]\n    [[ $(candidate \"5 7 3\" \"2 6 4\") = \"YES\" ]]\n    [[ $(candidate\
    \ \"5 7 3\" \"2 6 3\") = \"NO\" ]]\n    [[ $(candidate \"3 2 6 1 8 9\" \"3 5 5\
    \ 1 1 1\") = \"NO\" ]]\n    [[ $(candidate \"100 200\" \"200 200\") = \"YES\"\
    \ ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660002369
- exit_code: 1
  program: "#!/bin/bash\n# In this problem, you will implement a function that takes\
    \ two lists of numbers,\n# and determines whether it is possible to perform an\
    \ exchange of elements\n# between them to make lst1 a list of only even numbers.\n\
    # There is no limit on the number of exchanged elements between lst1 and lst2.\n\
    # If it is possible to exchange elements between the lst1 and lst2 to make\n#\
    \ all the elements of lst1 to be even, return \"YES\".\n# Otherwise, return \"\
    NO\".\n# For example:\n# It is assumed that the input lists will be non-empty.\n\
    #\n# $1 is a space-separated list\n# $2 is a space-separated list\nexchange()\
    \ {\n    local lst1=($1)\n    local lst2=($2)\n    local lst1_odd=()\n    local\
    \ lst2_even=()\n    local lst1_even=()\n    local lst2_odd=()\n    local lst1_even_count=0\n\
    \    local lst2_even_count=0\n    local lst1_odd_count=0\n    local lst2_odd_count=0\n\
    \    local i=0\n    local j=0\n    local k=0\n    local l=0\n    local m=0\n \
    \   local n=0\n    local o=0\n    local p=0\n    local q=0\n    local r=0\n  \
    \  local s=0\n    local t=0\n    local u=0\n    local v=0\n    local w=0\n   \
    \ local x=0\n    local y=0\n    local z=0\n    local aa=0\n    local bb=0\n  \
    \  local cc=0\n    local dd=0\n    local ee=0\n    local ff=0\n    local gg=0\n\
    \    local hh=0\n    local ii=0\n    local jj=0\n    local kk=0\n    local ll=0\n\
    \    local mm=0\n    local nn=0\n    local oo=0\n    local pp=0\n    local qq=0\n\
    \    local rr=0\n    local ss=0\n    local tt=0\n    local uu=0\n    local vv=0\n\
    \    local ww=0\n    local xx=0\n    local yy=0\n    local zz=0\n    local aaa=0\n\
    \    local bbb=0\n    local ccc=0\n    local ddd=0\n    local eee=0\n    local\
    \ fff=0\n    local ggg=0\n    local hhh=0\n    local iii=0\n    local jjj=0\n\
    \    local kkk=0\n    local lll=0\n    local mmm=0\n    local nnn=0\n    local\
    \ ooo=0\n    local ppp=0\n    local qqq=0\n    local rrr\n}\n\ncandidate() {\n\
    \    exchange \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"1 2 3 4\"\
    \ \"1 2 3 4\") = \"YES\" ]]\n    [[ $(candidate \"1 2 3 4\" \"1 5 3 4\") = \"\
    NO\" ]]\n    [[ $(candidate \"1 2 3 4\" \"2 1 4 3\") = \"YES\" ]]\n    [[ $(candidate\
    \ \"5 7 3\" \"2 6 4\") = \"YES\" ]]\n    [[ $(candidate \"5 7 3\" \"2 6 3\") =\
    \ \"NO\" ]]\n    [[ $(candidate \"3 2 6 1 8 9\" \"3 5 5 1 1 1\") = \"NO\" ]]\n\
    \    [[ $(candidate \"100 200\" \"200 200\") = \"YES\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660002369
- exit_code: 1
  program: "#!/bin/bash\n# In this problem, you will implement a function that takes\
    \ two lists of numbers,\n# and determines whether it is possible to perform an\
    \ exchange of elements\n# between them to make lst1 a list of only even numbers.\n\
    # There is no limit on the number of exchanged elements between lst1 and lst2.\n\
    # If it is possible to exchange elements between the lst1 and lst2 to make\n#\
    \ all the elements of lst1 to be even, return \"YES\".\n# Otherwise, return \"\
    NO\".\n# For example:\n# It is assumed that the input lists will be non-empty.\n\
    #\n# $1 is a space-separated list\n# $2 is a space-separated list\nexchange()\
    \ {\n    local lst1=( $1 )\n    local lst2=( $2 )\n    local lst1_even=()\n  \
    \  local lst1_odd=()\n    local lst2_even=()\n    local lst2_odd=()\n    local\
    \ lst1_odd_count=0\n    local lst2_odd_count=0\n    local lst1_even_count=0\n\
    \    local lst2_even_count=0\n    local i=0\n    local j=0\n    local k=0\n  \
    \  local l=0\n    local m=0\n    local n=0\n    local o=0\n    local p=0\n   \
    \ local q=0\n    local r=0\n    local s=0\n    local t=0\n    local u=0\n    local\
    \ v=0\n    local w=0\n    local x=0\n    local y=0\n    local z=0\n    local aa=0\n\
    \    local bb=0\n    local cc=0\n    local dd=0\n    local ee=0\n    local ff=0\n\
    \    local gg=0\n    local hh=0\n    local ii=0\n    local jj=0\n    local kk=0\n\
    \    local ll=0\n    local mm=0\n    local nn=0\n    local oo=0\n    local pp=0\n\
    \    local qq=0\n    local rr=0\n    local ss=0\n    local tt=0\n    local uu=0\n\
    \    local vv=0\n    local ww=0\n    local xx=0\n    local yy=0\n    local zz=0\n\
    \    local aaa=0\n    local bbb=0\n    local ccc=0\n    local ddd=0\n    local\
    \ eee=0\n    local fff=0\n    local ggg=0\n    local hhh=0\n    local iii=0\n\
    \    local jjj=0\n    local kkk=0\n    local lll=0\n    local mmm=0\n    local\
    \ nnn=0\n    local ooo=0\n    local ppp=0\n    local qqq=0\n    local rrr\n}\n\
    \ncandidate() {\n    exchange \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate\
    \ \"1 2 3 4\" \"1 2 3 4\") = \"YES\" ]]\n    [[ $(candidate \"1 2 3 4\" \"1 5\
    \ 3 4\") = \"NO\" ]]\n    [[ $(candidate \"1 2 3 4\" \"2 1 4 3\") = \"YES\" ]]\n\
    \    [[ $(candidate \"5 7 3\" \"2 6 4\") = \"YES\" ]]\n    [[ $(candidate \"5\
    \ 7 3\" \"2 6 3\") = \"NO\" ]]\n    [[ $(candidate \"3 2 6 1 8 9\" \"3 5 5 1 1\
    \ 1\") = \"NO\" ]]\n    [[ $(candidate \"100 200\" \"200 200\") = \"YES\" ]]\n\
    }\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660002369
- exit_code: 1
  program: "#!/bin/bash\n# In this problem, you will implement a function that takes\
    \ two lists of numbers,\n# and determines whether it is possible to perform an\
    \ exchange of elements\n# between them to make lst1 a list of only even numbers.\n\
    # There is no limit on the number of exchanged elements between lst1 and lst2.\n\
    # If it is possible to exchange elements between the lst1 and lst2 to make\n#\
    \ all the elements of lst1 to be even, return \"YES\".\n# Otherwise, return \"\
    NO\".\n# For example:\n# It is assumed that the input lists will be non-empty.\n\
    #\n# $1 is a space-separated list\n# $2 is a space-separated list\nexchange()\
    \ {\n  local lst1=($1)\n  local lst2=($2)\n  local lst1_odd_count=0\n  local lst2_odd_count=0\n\
    \  local lst1_odd_index=0\n  local lst2_odd_index=0\n  local i=0\n  local j=0\n\
    \  local k=0\n  local l=0\n  local m=0\n  local n=0\n  local o=0\n  local p=0\n\
    \  local q=0\n  local r=0\n  local s=0\n  local t=0\n  local u=0\n  local v=0\n\
    \  local w=0\n  local x=0\n  local y=0\n  local z=0\n  local aa=0\n  local bb=0\n\
    \  local cc=0\n  local dd=0\n  local ee=0\n  local ff=0\n  local gg=0\n  local\
    \ hh=0\n  local ii=0\n  local jj=0\n  local kk=0\n  local ll=0\n  local mm=0\n\
    \  local nn=0\n  local oo=0\n  local pp=0\n  local qq=0\n  local rr=0\n  local\
    \ ss=0\n  local tt=0\n  local uu=0\n  local vv=0\n  local ww=0\n  local xx=0\n\
    \  local yy=0\n  local zz=0\n  local aaa=0\n  local bbb=0\n  local ccc=0\n  local\
    \ ddd=0\n  local eee=0\n  local fff=0\n  local ggg=0\n  local hhh=0\n  local iii=0\n\
    \  local jjj=0\n  local kkk=0\n  local lll=0\n  local mmm=0\n  local nnn=0\n \
    \ local ooo=0\n  local ppp=0\n  local qqq=0\n  local rrr=0\n  local sss=0\n  local\
    \ ttt=0\n  local uuu=0\n  local vvv=0\n  local www=0\n  local x\n}\n\ncandidate()\
    \ {\n    exchange \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"1 2\
    \ 3 4\" \"1 2 3 4\") = \"YES\" ]]\n    [[ $(candidate \"1 2 3 4\" \"1 5 3 4\"\
    ) = \"NO\" ]]\n    [[ $(candidate \"1 2 3 4\" \"2 1 4 3\") = \"YES\" ]]\n    [[\
    \ $(candidate \"5 7 3\" \"2 6 4\") = \"YES\" ]]\n    [[ $(candidate \"5 7 3\"\
    \ \"2 6 3\") = \"NO\" ]]\n    [[ $(candidate \"3 2 6 1 8 9\" \"3 5 5 1 1 1\")\
    \ = \"NO\" ]]\n    [[ $(candidate \"100 200\" \"200 200\") = \"YES\" ]]\n}\n\n\
    run_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660002369
- exit_code: 1
  program: "#!/bin/bash\n# In this problem, you will implement a function that takes\
    \ two lists of numbers,\n# and determines whether it is possible to perform an\
    \ exchange of elements\n# between them to make lst1 a list of only even numbers.\n\
    # There is no limit on the number of exchanged elements between lst1 and lst2.\n\
    # If it is possible to exchange elements between the lst1 and lst2 to make\n#\
    \ all the elements of lst1 to be even, return \"YES\".\n# Otherwise, return \"\
    NO\".\n# For example:\n# It is assumed that the input lists will be non-empty.\n\
    #\n# $1 is a space-separated list\n# $2 is a space-separated list\nexchange()\
    \ {\n  local lst1=($1)\n  local lst2=($2)\n  local lst1_even=0\n  local lst2_even=0\n\
    \  local lst1_odd=0\n  local lst2_odd=0\n  local i=0\n  local j=0\n  local lst1_len=${#lst1[@]}\n\
    \  local lst2_len=${#lst2[@]}\n  for ((i=0; i<lst1_len; i++)); do\n    if [[ $((lst1[i]\
    \ % 2)) -eq 0 ]]; then\n      ((lst1_even++))\n    else\n      ((lst1_odd++))\n\
    \    fi\n  done\n  for ((j=0; j<lst2_len; j++)); do\n    if [[ $((lst2[j] % 2))\
    \ -eq 0 ]]; then\n      ((lst2_even++))\n    else\n      ((lst2_odd++))\n    fi\n\
    \  done\n  if [[ $lst1_even -eq 0 ]]; then\n    echo \"NO\"\n  elif [[ $lst2_odd\
    \ -eq 0 ]]; then\n    echo \"NO\"\n  elif [[ $lst1_even -eq $lst2_odd ]]; then\n\
    \    echo \"YES\"\n  else\n    echo \"NO\"\n  fi\n}\n\ncandidate() {\n    exchange\
    \ \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"1 2 3 4\" \"1 2 3 4\"\
    ) = \"YES\" ]]\n    [[ $(candidate \"1 2 3 4\" \"1 5 3 4\") = \"NO\" ]]\n    [[\
    \ $(candidate \"1 2 3 4\" \"2 1 4 3\") = \"YES\" ]]\n    [[ $(candidate \"5 7\
    \ 3\" \"2 6 4\") = \"YES\" ]]\n    [[ $(candidate \"5 7 3\" \"2 6 3\") = \"NO\"\
    \ ]]\n    [[ $(candidate \"3 2 6 1 8 9\" \"3 5 5 1 1 1\") = \"NO\" ]]\n    [[\
    \ $(candidate \"100 200\" \"200 200\") = \"YES\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660002370
- exit_code: 1
  program: "#!/bin/bash\n# In this problem, you will implement a function that takes\
    \ two lists of numbers,\n# and determines whether it is possible to perform an\
    \ exchange of elements\n# between them to make lst1 a list of only even numbers.\n\
    # There is no limit on the number of exchanged elements between lst1 and lst2.\n\
    # If it is possible to exchange elements between the lst1 and lst2 to make\n#\
    \ all the elements of lst1 to be even, return \"YES\".\n# Otherwise, return \"\
    NO\".\n# For example:\n# It is assumed that the input lists will be non-empty.\n\
    #\n# $1 is a space-separated list\n# $2 is a space-separated list\nexchange()\
    \ {\n    local -a lst1=($1)\n    local -a lst2=($2)\n    local -a evens=()\n \
    \   local -a odds=()\n    local -a lst1_odds=()\n    local -a lst2_evens=()\n\
    \    local -a lst1_evens=()\n    local -a lst2_odds=()\n    local -a lst1_evens_indices=()\n\
    \    local -a lst2_odds_indices=()\n    local -a lst1_odds_indices=()\n    local\
    \ -a lst2_evens_indices=()\n    local -a lst1_evens_indices_sorted=()\n    local\
    \ -a lst2_odds_indices_sorted=()\n    local -a lst1_odds_indices_sorted=()\n \
    \   local -a lst2_evens_indices_sorted=()\n    local -a lst1_evens_indices_sorted_rev=()\n\
    \    local -a lst2_odds_indices_sorted_rev=()\n    local -a lst1_odds_indices_sorted_rev=()\n\
    \    local -a lst2_evens_indices_sorted_rev=()\n    local -a lst1_evens_indices_sorted_rev_sorted=()\n\
    \    local -a lst2_odds_indices_sorted_rev_sorted=()\n    local -a lst1_odds_indices_sorted_rev_sorted=()\n\
    \    local -a lst2_evens_indices_sorted_rev_sorted=()\n    local -a lst1_evens_indices_sorted_rev_sorted_rev=()\n\
    \    local -a lst2_odds_indices_sorted_rev_sorted_rev=()\n    local -a lst1_odds_indices_sorted_rev_sorted_rev=()\n\
    \    local -a lst2_evens_indices_sorted_rev_s\n}\n\ncandidate() {\n    exchange\
    \ \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"1 2 3 4\" \"1 2 3 4\"\
    ) = \"YES\" ]]\n    [[ $(candidate \"1 2 3 4\" \"1 5 3 4\") = \"NO\" ]]\n    [[\
    \ $(candidate \"1 2 3 4\" \"2 1 4 3\") = \"YES\" ]]\n    [[ $(candidate \"5 7\
    \ 3\" \"2 6 4\") = \"YES\" ]]\n    [[ $(candidate \"5 7 3\" \"2 6 3\") = \"NO\"\
    \ ]]\n    [[ $(candidate \"3 2 6 1 8 9\" \"3 5 5 1 1 1\") = \"NO\" ]]\n    [[\
    \ $(candidate \"100 200\" \"200 200\") = \"YES\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660002369
- exit_code: 1
  program: "#!/bin/bash\n# In this problem, you will implement a function that takes\
    \ two lists of numbers,\n# and determines whether it is possible to perform an\
    \ exchange of elements\n# between them to make lst1 a list of only even numbers.\n\
    # There is no limit on the number of exchanged elements between lst1 and lst2.\n\
    # If it is possible to exchange elements between the lst1 and lst2 to make\n#\
    \ all the elements of lst1 to be even, return \"YES\".\n# Otherwise, return \"\
    NO\".\n# For example:\n# It is assumed that the input lists will be non-empty.\n\
    #\n# $1 is a space-separated list\n# $2 is a space-separated list\nexchange()\
    \ {\n  local lst1=($1)\n  local lst2=($2)\n  local lst1_odd=()\n  local lst2_even=()\n\
    \  local lst1_even=()\n  local lst2_odd=()\n  local lst1_even_count=0\n  local\
    \ lst2_even_count=0\n  local lst1_odd_count=0\n  local lst2_odd_count=0\n  local\
    \ lst1_even_odd_diff=0\n  local lst2_even_odd_diff=0\n  local lst1_even_odd_diff_abs=0\n\
    \  local lst2_even_odd_diff_abs=0\n  local lst1_even_odd_diff_abs_sum=0\n  local\
    \ lst2_even_odd_diff_abs_sum=0\n  local lst1_even_odd_diff_abs_sum_diff=0\n  local\
    \ lst2_even_odd_diff_abs_sum_diff=0\n  local lst1_even_odd_diff_abs_sum_diff_abs=0\n\
    \  local lst2_even_odd_diff_abs_sum_diff_abs=0\n  local lst1_even_odd_diff_abs_sum_diff_abs_sum=0\n\
    \  local lst2_even_odd_diff_abs_sum_diff_abs_sum=0\n  local lst1_even_odd_diff_abs_sum_diff_abs_sum_diff=0\n\
    \  local lst2_even_odd_diff_abs_sum_diff_abs_sum_diff=0\n  local lst1_even_odd_diff_abs_sum_diff_abs_sum_diff_abs=0\n\
    \  local lst2_even_odd_diff_abs_sum_diff_abs_sum_diff_abs=0\n  local lst1_even_odd_diff_abs_sum_diff_abs_sum_diff_abs_sum=0\n\
    \  local lst2_even_odd_diff_abs_sum_diff_abs_sum_diff_abs_sum=0\n  local lst1_even\n\
    }\n\ncandidate() {\n    exchange \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate\
    \ \"1 2 3 4\" \"1 2 3 4\") = \"YES\" ]]\n    [[ $(candidate \"1 2 3 4\" \"1 5\
    \ 3 4\") = \"NO\" ]]\n    [[ $(candidate \"1 2 3 4\" \"2 1 4 3\") = \"YES\" ]]\n\
    \    [[ $(candidate \"5 7 3\" \"2 6 4\") = \"YES\" ]]\n    [[ $(candidate \"5\
    \ 7 3\" \"2 6 3\") = \"NO\" ]]\n    [[ $(candidate \"3 2 6 1 8 9\" \"3 5 5 1 1\
    \ 1\") = \"NO\" ]]\n    [[ $(candidate \"100 200\" \"200 200\") = \"YES\" ]]\n\
    }\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660002369
- exit_code: 1
  program: "#!/bin/bash\n# In this problem, you will implement a function that takes\
    \ two lists of numbers,\n# and determines whether it is possible to perform an\
    \ exchange of elements\n# between them to make lst1 a list of only even numbers.\n\
    # There is no limit on the number of exchanged elements between lst1 and lst2.\n\
    # If it is possible to exchange elements between the lst1 and lst2 to make\n#\
    \ all the elements of lst1 to be even, return \"YES\".\n# Otherwise, return \"\
    NO\".\n# For example:\n# It is assumed that the input lists will be non-empty.\n\
    #\n# $1 is a space-separated list\n# $2 is a space-separated list\nexchange()\
    \ {\n  local lst1=($1)\n  local lst2=($2)\n  local lst1_odd=()\n  local lst2_even=()\n\
    \  local lst1_even=()\n  local lst2_odd=()\n  local lst1_even_count=0\n  local\
    \ lst2_even_count=0\n  local lst1_odd_count=0\n  local lst2_odd_count=0\n  local\
    \ i=0\n  local j=0\n  local k=0\n  local l=0\n  local m=0\n  local n=0\n  local\
    \ o=0\n  local p=0\n  local q=0\n  local r=0\n  local s=0\n  local t=0\n  local\
    \ u=0\n  local v=0\n  local w=0\n  local x=0\n  local y=0\n  local z=0\n  local\
    \ aa=0\n  local bb=0\n  local cc=0\n  local dd=0\n  local ee=0\n  local ff=0\n\
    \  local gg=0\n  local hh=0\n  local ii=0\n  local jj=0\n  local kk=0\n  local\
    \ ll=0\n  local mm=0\n  local nn=0\n  local oo=0\n  local pp=0\n  local qq=0\n\
    \  local rr=0\n  local ss=0\n  local tt=0\n  local uu=0\n  local vv=0\n  local\
    \ ww=0\n  local xx=0\n  local yy=0\n  local zz=0\n  local aaa=0\n  local bbb=0\n\
    \  local ccc=0\n  local ddd=0\n  local eee=0\n  local fff=0\n  local ggg=0\n \
    \ local hhh=0\n  local iii=0\n  local jjj=0\n  local kkk=0\n  local lll=0\n  local\
    \ mmm=0\n  local nnn=0\n  local ooo=0\n  local ppp=0\n  local qqq=0\n  local rrr\n\
    }\n\ncandidate() {\n    exchange \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate\
    \ \"1 2 3 4\" \"1 2 3 4\") = \"YES\" ]]\n    [[ $(candidate \"1 2 3 4\" \"1 5\
    \ 3 4\") = \"NO\" ]]\n    [[ $(candidate \"1 2 3 4\" \"2 1 4 3\") = \"YES\" ]]\n\
    \    [[ $(candidate \"5 7 3\" \"2 6 4\") = \"YES\" ]]\n    [[ $(candidate \"5\
    \ 7 3\" \"2 6 3\") = \"NO\" ]]\n    [[ $(candidate \"3 2 6 1 8 9\" \"3 5 5 1 1\
    \ 1\") = \"NO\" ]]\n    [[ $(candidate \"100 200\" \"200 200\") = \"YES\" ]]\n\
    }\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660002369
- exit_code: 1
  program: "#!/bin/bash\n# In this problem, you will implement a function that takes\
    \ two lists of numbers,\n# and determines whether it is possible to perform an\
    \ exchange of elements\n# between them to make lst1 a list of only even numbers.\n\
    # There is no limit on the number of exchanged elements between lst1 and lst2.\n\
    # If it is possible to exchange elements between the lst1 and lst2 to make\n#\
    \ all the elements of lst1 to be even, return \"YES\".\n# Otherwise, return \"\
    NO\".\n# For example:\n# It is assumed that the input lists will be non-empty.\n\
    #\n# $1 is a space-separated list\n# $2 is a space-separated list\nexchange()\
    \ {\n  local lst1=($1)\n  local lst2=($2)\n  local lst1_even=0\n  local lst2_even=0\n\
    \  local lst1_odd=0\n  local lst2_odd=0\n  for i in ${lst1[@]}; do\n    if [ $((i\
    \ % 2)) -eq 0 ]; then\n      ((lst1_even++))\n    else\n      ((lst1_odd++))\n\
    \    fi\n  done\n  for i in ${lst2[@]}; do\n    if [ $((i % 2)) -eq 0 ]; then\n\
    \      ((lst2_even++))\n    else\n      ((lst2_odd++))\n    fi\n  done\n  if [\
    \ $lst1_even -eq 0 ]; then\n    echo \"NO\"\n  elif [ $lst2_odd -eq 0 ]; then\n\
    \    echo \"NO\"\n  elif [ $lst1_even -gt $lst2_odd ]; then\n    echo \"NO\"\n\
    \  else\n    echo \"YES\"\n  fi\n}\n\ncandidate() {\n    exchange \"$@\"\n}\n\n\
    set -e\nrun_test() {\n    [[ $(candidate \"1 2 3 4\" \"1 2 3 4\") = \"YES\" ]]\n\
    \    [[ $(candidate \"1 2 3 4\" \"1 5 3 4\") = \"NO\" ]]\n    [[ $(candidate \"\
    1 2 3 4\" \"2 1 4 3\") = \"YES\" ]]\n    [[ $(candidate \"5 7 3\" \"2 6 4\") =\
    \ \"YES\" ]]\n    [[ $(candidate \"5 7 3\" \"2 6 3\") = \"NO\" ]]\n    [[ $(candidate\
    \ \"3 2 6 1 8 9\" \"3 5 5 1 1 1\") = \"NO\" ]]\n    [[ $(candidate \"100 200\"\
    \ \"200 200\") = \"YES\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660002369
- exit_code: 1
  program: "#!/bin/bash\n# In this problem, you will implement a function that takes\
    \ two lists of numbers,\n# and determines whether it is possible to perform an\
    \ exchange of elements\n# between them to make lst1 a list of only even numbers.\n\
    # There is no limit on the number of exchanged elements between lst1 and lst2.\n\
    # If it is possible to exchange elements between the lst1 and lst2 to make\n#\
    \ all the elements of lst1 to be even, return \"YES\".\n# Otherwise, return \"\
    NO\".\n# For example:\n# It is assumed that the input lists will be non-empty.\n\
    #\n# $1 is a space-separated list\n# $2 is a space-separated list\nexchange()\
    \ {\n    local lst1=($1)\n    local lst2=($2)\n    local lst1_odd=()\n    local\
    \ lst2_even=()\n    local lst1_even=()\n    local lst2_odd=()\n    local i=0\n\
    \    local j=0\n    local k=0\n    local l=0\n    local m=0\n    local n=0\n \
    \   local o=0\n    local p=0\n    local q=0\n    local r=0\n    local s=0\n  \
    \  local t=0\n    local u=0\n    local v=0\n    local w=0\n    local x=0\n   \
    \ local y=0\n    local z=0\n    local aa=0\n    local bb=0\n    local cc=0\n \
    \   local dd=0\n    local ee=0\n    local ff=0\n    local gg=0\n    local hh=0\n\
    \    local ii=0\n    local jj=0\n    local kk=0\n    local ll=0\n    local mm=0\n\
    \    local nn=0\n    local oo=0\n    local pp=0\n    local qq=0\n    local rr=0\n\
    \    local ss=0\n    local tt=0\n    local uu=0\n    local vv=0\n    local ww=0\n\
    \    local xx=0\n    local yy=0\n    local zz=0\n    local aaa=0\n    local bbb=0\n\
    \    local ccc=0\n    local ddd=0\n    local eee=0\n    local fff=0\n    local\
    \ ggg=0\n    local hhh=0\n    local iii=0\n    local jjj=0\n    local kkk=0\n\
    \    local lll=0\n    local mmm=0\n    local nnn=0\n    local ooo=0\n    local\
    \ ppp=0\n    local qqq=0\n    local rrr=0\n    local sss=0\n    local ttt=0\n\
    \    local uuu=0\n    local vvv=0\n    local www=0\n    local xxx=0\n    local\
    \ yyy\n}\n\ncandidate() {\n    exchange \"$@\"\n}\n\nset -e\nrun_test() {\n  \
    \  [[ $(candidate \"1 2 3 4\" \"1 2 3 4\") = \"YES\" ]]\n    [[ $(candidate \"\
    1 2 3 4\" \"1 5 3 4\") = \"NO\" ]]\n    [[ $(candidate \"1 2 3 4\" \"2 1 4 3\"\
    ) = \"YES\" ]]\n    [[ $(candidate \"5 7 3\" \"2 6 4\") = \"YES\" ]]\n    [[ $(candidate\
    \ \"5 7 3\" \"2 6 3\") = \"NO\" ]]\n    [[ $(candidate \"3 2 6 1 8 9\" \"3 5 5\
    \ 1 1 1\") = \"NO\" ]]\n    [[ $(candidate \"100 200\" \"200 200\") = \"YES\"\
    \ ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660002369
- exit_code: 0
  program: "#!/bin/bash\n# In this problem, you will implement a function that takes\
    \ two lists of numbers,\n# and determines whether it is possible to perform an\
    \ exchange of elements\n# between them to make lst1 a list of only even numbers.\n\
    # There is no limit on the number of exchanged elements between lst1 and lst2.\n\
    # If it is possible to exchange elements between the lst1 and lst2 to make\n#\
    \ all the elements of lst1 to be even, return \"YES\".\n# Otherwise, return \"\
    NO\".\n# For example:\n# It is assumed that the input lists will be non-empty.\n\
    #\n# $1 is a space-separated list\n# $2 is a space-separated list\nexchange()\
    \ {\n  local lst1=($1)\n  local lst2=($2)\n  local lst1_even=0\n  local lst2_even=0\n\
    \  local lst1_odd=0\n  local lst2_odd=0\n  for i in ${lst1[@]}; do\n    if [ $((i\
    \ % 2)) -eq 0 ]; then\n      lst1_even=$((lst1_even + 1))\n    else\n      lst1_odd=$((lst1_odd\
    \ + 1))\n    fi\n  done\n  for i in ${lst2[@]}; do\n    if [ $((i % 2)) -eq 0\
    \ ]; then\n      lst2_even=$((lst2_even + 1))\n    else\n      lst2_odd=$((lst2_odd\
    \ + 1))\n    fi\n  done\n  if [ $lst1_even -eq ${#lst1[@]} ]; then\n    echo \"\
    YES\"\n  elif [ $lst2_even -eq ${#lst2[@]} ]; then\n    echo \"YES\"\n  elif [\
    \ $lst1_even -eq 0 ]; then\n    echo \"NO\"\n  elif [ $lst2_even -eq 0 ]; then\n\
    \    echo \"NO\"\n  elif [ $lst1_odd -eq 0 ]; then\n    echo \"YES\"\n  elif [\
    \ $lst2_odd -eq 0 ]; then\n    echo \"YES\"\n  elif [ $lst1_even -eq $lst2_odd\
    \ ]; then\n    echo \"YES\"\n  elif [ $lst2_even -eq $lst1_odd ]; then\n    echo\
    \ \"YES\"\n  else\n    echo \"NO\"\n  fi\n}\n\ncandidate() {\n    exchange \"\
    $@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"1 2 3 4\" \"1 2 3 4\") =\
    \ \"YES\" ]]\n    [[ $(candidate \"1 2 3 4\" \"1 5 3 4\") = \"NO\" ]]\n    [[\
    \ $(candidate \"1 2 3 4\" \"2 1 4 3\") = \"YES\" ]]\n    [[ $(candidate \"5 7\
    \ 3\" \"2 6 4\") = \"YES\" ]]\n    [[ $(candidate \"5 7 3\" \"2 6 3\") = \"NO\"\
    \ ]]\n    [[ $(candidate \"3 2 6 1 8 9\" \"3 5 5 1 1 1\") = \"NO\" ]]\n    [[\
    \ $(candidate \"100 200\" \"200 200\") = \"YES\" ]]\n}\n\nrun_test"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660002369
- exit_code: 1
  program: "#!/bin/bash\n# In this problem, you will implement a function that takes\
    \ two lists of numbers,\n# and determines whether it is possible to perform an\
    \ exchange of elements\n# between them to make lst1 a list of only even numbers.\n\
    # There is no limit on the number of exchanged elements between lst1 and lst2.\n\
    # If it is possible to exchange elements between the lst1 and lst2 to make\n#\
    \ all the elements of lst1 to be even, return \"YES\".\n# Otherwise, return \"\
    NO\".\n# For example:\n# It is assumed that the input lists will be non-empty.\n\
    #\n# $1 is a space-separated list\n# $2 is a space-separated list\nexchange()\
    \ {\n    local lst1=($1)\n    local lst2=($2)\n    local result=\"NO\"\n    local\
    \ i\n    local j\n    for ((i=0; i<${#lst1[@]}; i++)); do\n        if [[ $((${lst1[$i]}\
    \ % 2)) -eq 0 ]]; then\n            continue\n        fi\n        for ((j=0; j<${#lst2[@]};\
    \ j++)); do\n            if [[ $((${lst2[$j]} % 2)) -eq 0 ]]; then\n         \
    \       lst1[$i]=${lst2[$j]}\n                lst2[$j]=${lst1[$i]}\n         \
    \       result=\"YES\"\n                break\n            fi\n        done\n\
    \    done\n    echo $result\n}\n\ncandidate() {\n    exchange \"$@\"\n}\n\nset\
    \ -e\nrun_test() {\n    [[ $(candidate \"1 2 3 4\" \"1 2 3 4\") = \"YES\" ]]\n\
    \    [[ $(candidate \"1 2 3 4\" \"1 5 3 4\") = \"NO\" ]]\n    [[ $(candidate \"\
    1 2 3 4\" \"2 1 4 3\") = \"YES\" ]]\n    [[ $(candidate \"5 7 3\" \"2 6 4\") =\
    \ \"YES\" ]]\n    [[ $(candidate \"5 7 3\" \"2 6 3\") = \"NO\" ]]\n    [[ $(candidate\
    \ \"3 2 6 1 8 9\" \"3 5 5 1 1 1\") = \"NO\" ]]\n    [[ $(candidate \"100 200\"\
    \ \"200 200\") = \"YES\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660002369
- exit_code: 0
  program: "#!/bin/bash\n# In this problem, you will implement a function that takes\
    \ two lists of numbers,\n# and determines whether it is possible to perform an\
    \ exchange of elements\n# between them to make lst1 a list of only even numbers.\n\
    # There is no limit on the number of exchanged elements between lst1 and lst2.\n\
    # If it is possible to exchange elements between the lst1 and lst2 to make\n#\
    \ all the elements of lst1 to be even, return \"YES\".\n# Otherwise, return \"\
    NO\".\n# For example:\n# It is assumed that the input lists will be non-empty.\n\
    #\n# $1 is a space-separated list\n# $2 is a space-separated list\nexchange()\
    \ {\n  local lst1=($1)\n  local lst2=($2)\n  local lst1_odd=()\n  local lst2_even=()\n\
    \  for i in ${lst1[@]}; do\n    if [ $((i % 2)) -ne 0 ]; then\n      lst1_odd+=($i)\n\
    \    fi\n  done\n  for i in ${lst2[@]}; do\n    if [ $((i % 2)) -eq 0 ]; then\n\
    \      lst2_even+=($i)\n    fi\n  done\n  if [ ${#lst1_odd[@]} -le ${#lst2_even[@]}\
    \ ]; then\n    echo \"YES\"\n  else\n    echo \"NO\"\n  fi\n}\n\ncandidate() {\n\
    \    exchange \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"1 2 3 4\"\
    \ \"1 2 3 4\") = \"YES\" ]]\n    [[ $(candidate \"1 2 3 4\" \"1 5 3 4\") = \"\
    NO\" ]]\n    [[ $(candidate \"1 2 3 4\" \"2 1 4 3\") = \"YES\" ]]\n    [[ $(candidate\
    \ \"5 7 3\" \"2 6 4\") = \"YES\" ]]\n    [[ $(candidate \"5 7 3\" \"2 6 3\") =\
    \ \"NO\" ]]\n    [[ $(candidate \"3 2 6 1 8 9\" \"3 5 5 1 1 1\") = \"NO\" ]]\n\
    \    [[ $(candidate \"100 200\" \"200 200\") = \"YES\" ]]\n}\n\nrun_test"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660002369
- exit_code: 1
  program: "#!/bin/bash\n# In this problem, you will implement a function that takes\
    \ two lists of numbers,\n# and determines whether it is possible to perform an\
    \ exchange of elements\n# between them to make lst1 a list of only even numbers.\n\
    # There is no limit on the number of exchanged elements between lst1 and lst2.\n\
    # If it is possible to exchange elements between the lst1 and lst2 to make\n#\
    \ all the elements of lst1 to be even, return \"YES\".\n# Otherwise, return \"\
    NO\".\n# For example:\n# It is assumed that the input lists will be non-empty.\n\
    #\n# $1 is a space-separated list\n# $2 is a space-separated list\nexchange()\
    \ {\n  local lst1=($1)\n  local lst2=($2)\n  local evens=()\n  local odds=()\n\
    \  local i=0\n  local j=0\n  local k=0\n  local l=0\n  local m=0\n  local n=0\n\
    \  local o=0\n  local p=0\n  local q=0\n  local r=0\n  local s=0\n  local t=0\n\
    \  local u=0\n  local v=0\n  local w=0\n  local x=0\n  local y=0\n  local z=0\n\
    \  local aa=0\n  local bb=0\n  local cc=0\n  local dd=0\n  local ee=0\n  local\
    \ ff=0\n  local gg=0\n  local hh=0\n  local ii=0\n  local jj=0\n  local kk=0\n\
    \  local ll=0\n  local mm=0\n  local nn=0\n  local oo=0\n  local pp=0\n  local\
    \ qq=0\n  local rr=0\n  local ss=0\n  local tt=0\n  local uu=0\n  local vv=0\n\
    \  local ww=0\n  local xx=0\n  local yy=0\n  local zz=0\n  local aaa=0\n  local\
    \ bbb=0\n  local ccc=0\n  local ddd=0\n  local eee=0\n  local fff=0\n  local ggg=0\n\
    \  local hhh=0\n  local iii=0\n  local jjj=0\n  local kkk=0\n  local lll=0\n \
    \ local mmm=0\n  local nnn=0\n  local ooo=0\n  local ppp=0\n  local qqq=0\n  local\
    \ rrr=0\n  local sss=0\n  local ttt=0\n  local uuu=0\n  local vvv=0\n  local www=0\n\
    \  local xxx=0\n  local yyy=0\n  local zzz=0\n  local aaaa=0\n  local bbbb=0\n\
    \  local\n}\n\ncandidate() {\n    exchange \"$@\"\n}\n\nset -e\nrun_test() {\n\
    \    [[ $(candidate \"1 2 3 4\" \"1 2 3 4\") = \"YES\" ]]\n    [[ $(candidate\
    \ \"1 2 3 4\" \"1 5 3 4\") = \"NO\" ]]\n    [[ $(candidate \"1 2 3 4\" \"2 1 4\
    \ 3\") = \"YES\" ]]\n    [[ $(candidate \"5 7 3\" \"2 6 4\") = \"YES\" ]]\n  \
    \  [[ $(candidate \"5 7 3\" \"2 6 3\") = \"NO\" ]]\n    [[ $(candidate \"3 2 6\
    \ 1 8 9\" \"3 5 5 1 1 1\") = \"NO\" ]]\n    [[ $(candidate \"100 200\" \"200 200\"\
    ) = \"YES\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660002369
- exit_code: 1
  program: "#!/bin/bash\n# In this problem, you will implement a function that takes\
    \ two lists of numbers,\n# and determines whether it is possible to perform an\
    \ exchange of elements\n# between them to make lst1 a list of only even numbers.\n\
    # There is no limit on the number of exchanged elements between lst1 and lst2.\n\
    # If it is possible to exchange elements between the lst1 and lst2 to make\n#\
    \ all the elements of lst1 to be even, return \"YES\".\n# Otherwise, return \"\
    NO\".\n# For example:\n# It is assumed that the input lists will be non-empty.\n\
    #\n# $1 is a space-separated list\n# $2 is a space-separated list\nexchange()\
    \ {\n  local lst1=\"$1\"\n  local lst2=\"$2\"\n  local lst1_even=0\n  local lst2_even=0\n\
    \  local lst1_odd=0\n  local lst2_odd=0\n  local lst1_even_odd=0\n  local lst2_even_odd=0\n\
    \  local lst1_odd_even=0\n  local lst2_odd_even=0\n  local lst1_even_even=0\n\
    \  local lst2_even_even=0\n  local lst1_odd_odd=0\n  local lst2_odd_odd=0\n  local\
    \ lst1_even_odd_even=0\n  local lst2_even_odd_even=0\n  local lst1_odd_even_odd=0\n\
    \  local lst2_odd_even_odd=0\n  local lst1_even_even_even=0\n  local lst2_even_even_even=0\n\
    \  local lst1_odd_odd_odd=0\n  local lst2_odd_odd_odd=0\n  local lst1_even_odd_even_even=0\n\
    \  local lst2_even_odd_even_even=0\n  local lst1_odd_even_odd_odd=0\n  local lst2_odd_even_odd_odd=0\n\
    \  local lst1_even_even_even_even=0\n  local lst2_even_even_even_even=0\n  local\
    \ lst1_odd_odd_odd_odd=0\n  local lst2_odd_odd_odd_odd=0\n  local lst1_even_odd_even_even_even=0\n\
    \  local lst2_even_odd_even_even_even=0\n  local lst1_odd_even_odd_odd_odd=0\n\
    \  local lst2_odd_even_odd_odd_odd=0\n  local lst1_even_even_even_even_even=0\n\
    \  local lst2_even_even_even_even_even=0\n  local lst1_odd\n}\n\ncandidate() {\n\
    \    exchange \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"1 2 3 4\"\
    \ \"1 2 3 4\") = \"YES\" ]]\n    [[ $(candidate \"1 2 3 4\" \"1 5 3 4\") = \"\
    NO\" ]]\n    [[ $(candidate \"1 2 3 4\" \"2 1 4 3\") = \"YES\" ]]\n    [[ $(candidate\
    \ \"5 7 3\" \"2 6 4\") = \"YES\" ]]\n    [[ $(candidate \"5 7 3\" \"2 6 3\") =\
    \ \"NO\" ]]\n    [[ $(candidate \"3 2 6 1 8 9\" \"3 5 5 1 1 1\") = \"NO\" ]]\n\
    \    [[ $(candidate \"100 200\" \"200 200\") = \"YES\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660002369
- exit_code: 1
  program: "#!/bin/bash\n# In this problem, you will implement a function that takes\
    \ two lists of numbers,\n# and determines whether it is possible to perform an\
    \ exchange of elements\n# between them to make lst1 a list of only even numbers.\n\
    # There is no limit on the number of exchanged elements between lst1 and lst2.\n\
    # If it is possible to exchange elements between the lst1 and lst2 to make\n#\
    \ all the elements of lst1 to be even, return \"YES\".\n# Otherwise, return \"\
    NO\".\n# For example:\n# It is assumed that the input lists will be non-empty.\n\
    #\n# $1 is a space-separated list\n# $2 is a space-separated list\nexchange()\
    \ {\n  local lst1=($1)\n  local lst2=($2)\n  local lst1_even=()\n  local lst1_odd=()\n\
    \  local lst2_even=()\n  local lst2_odd=()\n  local lst1_even_count=0\n  local\
    \ lst1_odd_count=0\n  local lst2_even_count=0\n  local lst2_odd_count=0\n  local\
    \ lst1_even_count_after_exchange=0\n  local lst1_odd_count_after_exchange=0\n\
    \  local lst2_even_count_after_exchange=0\n  local lst2_odd_count_after_exchange=0\n\
    \  local lst1_even_count_after_exchange_even=0\n  local lst1_odd_count_after_exchange_even=0\n\
    \  local lst2_even_count_after_exchange_even=0\n  local lst2_odd_count_after_exchange_even=0\n\
    \  local lst1_even_count_after_exchange_odd=0\n  local lst1_odd_count_after_exchange_odd=0\n\
    \  local lst2_even_count_after_exchange_odd=0\n  local lst2_odd_count_after_exchange_odd=0\n\
    \  local lst1_even_count_after_exchange_even_odd=0\n  local lst1_odd_count_after_exchange_even_odd=0\n\
    \  local lst2_even_count_after_exchange_even_odd=0\n  local lst2_odd_count_after_exchange_even_odd=0\n\
    \  local lst1_even_count_after_exchange_odd_even=0\n  local lst1_odd_count_after_exchange_odd_even=0\n\
    \  local lst2_even_count_after_exchange_odd_even=0\n  local lst2_odd_count_after_exchange_odd_even=0\n\
    \  local lst1_even_count_after_exchange_\n}\n\ncandidate() {\n    exchange \"\
    $@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"1 2 3 4\" \"1 2 3 4\") =\
    \ \"YES\" ]]\n    [[ $(candidate \"1 2 3 4\" \"1 5 3 4\") = \"NO\" ]]\n    [[\
    \ $(candidate \"1 2 3 4\" \"2 1 4 3\") = \"YES\" ]]\n    [[ $(candidate \"5 7\
    \ 3\" \"2 6 4\") = \"YES\" ]]\n    [[ $(candidate \"5 7 3\" \"2 6 3\") = \"NO\"\
    \ ]]\n    [[ $(candidate \"3 2 6 1 8 9\" \"3 5 5 1 1 1\") = \"NO\" ]]\n    [[\
    \ $(candidate \"100 200\" \"200 200\") = \"YES\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660002370
- exit_code: 1
  program: "#!/bin/bash\n# In this problem, you will implement a function that takes\
    \ two lists of numbers,\n# and determines whether it is possible to perform an\
    \ exchange of elements\n# between them to make lst1 a list of only even numbers.\n\
    # There is no limit on the number of exchanged elements between lst1 and lst2.\n\
    # If it is possible to exchange elements between the lst1 and lst2 to make\n#\
    \ all the elements of lst1 to be even, return \"YES\".\n# Otherwise, return \"\
    NO\".\n# For example:\n# It is assumed that the input lists will be non-empty.\n\
    #\n# $1 is a space-separated list\n# $2 is a space-separated list\nexchange()\
    \ {\n  local lst1=($1)\n  local lst2=($2)\n  local lst1_odd=()\n  local lst2_even=()\n\
    \  local lst1_even=()\n  local lst2_odd=()\n  local i=0\n  local j=0\n  local\
    \ k=0\n  local l=0\n  local m=0\n  local n=0\n  local o=0\n  local p=0\n  local\
    \ q=0\n  local r=0\n  local s=0\n  local t=0\n  local u=0\n  local v=0\n  local\
    \ w=0\n  local x=0\n  local y=0\n  local z=0\n  local a=0\n  local b=0\n  local\
    \ c=0\n  local d=0\n  local e=0\n  local f=0\n  local g=0\n  local h=0\n  local\
    \ i=0\n  local j=0\n  local k=0\n  local l=0\n  local m=0\n  local n=0\n  local\
    \ o=0\n  local p=0\n  local q=0\n  local r=0\n  local s=0\n  local t=0\n  local\
    \ u=0\n  local v=0\n  local w=0\n  local x=0\n  local y=0\n  local z=0\n  local\
    \ a=0\n  local b=0\n  local c=0\n  local d=0\n  local e=0\n  local f=0\n  local\
    \ g=0\n  local h=0\n  local i=0\n  local j=0\n  local k=0\n  local l=0\n  local\
    \ m=0\n  local n=0\n  local o=0\n  local p=0\n  local q=0\n  local r=0\n  local\
    \ s=0\n  local t=0\n  local u=0\n  local v=0\n  local w=0\n  local x=0\n  local\
    \ y=0\n  local z=0\n  local a=0\n  local b=0\n  local c=0\n  local d=0\n  local\
    \ e=0\n \n}\n\ncandidate() {\n    exchange \"$@\"\n}\n\nset -e\nrun_test() {\n\
    \    [[ $(candidate \"1 2 3 4\" \"1 2 3 4\") = \"YES\" ]]\n    [[ $(candidate\
    \ \"1 2 3 4\" \"1 5 3 4\") = \"NO\" ]]\n    [[ $(candidate \"1 2 3 4\" \"2 1 4\
    \ 3\") = \"YES\" ]]\n    [[ $(candidate \"5 7 3\" \"2 6 4\") = \"YES\" ]]\n  \
    \  [[ $(candidate \"5 7 3\" \"2 6 3\") = \"NO\" ]]\n    [[ $(candidate \"3 2 6\
    \ 1 8 9\" \"3 5 5 1 1 1\") = \"NO\" ]]\n    [[ $(candidate \"100 200\" \"200 200\"\
    ) = \"YES\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660002370
- exit_code: 0
  program: "#!/bin/bash\n# In this problem, you will implement a function that takes\
    \ two lists of numbers,\n# and determines whether it is possible to perform an\
    \ exchange of elements\n# between them to make lst1 a list of only even numbers.\n\
    # There is no limit on the number of exchanged elements between lst1 and lst2.\n\
    # If it is possible to exchange elements between the lst1 and lst2 to make\n#\
    \ all the elements of lst1 to be even, return \"YES\".\n# Otherwise, return \"\
    NO\".\n# For example:\n# It is assumed that the input lists will be non-empty.\n\
    #\n# $1 is a space-separated list\n# $2 is a space-separated list\nexchange()\
    \ {\n  local lst1=($1)\n  local lst2=($2)\n  local lst1_even=()\n  local lst1_odd=()\n\
    \  local lst2_even=()\n  local lst2_odd=()\n  local i\n  for i in ${lst1[@]};\
    \ do\n    if [[ $((i % 2)) -eq 0 ]]; then\n      lst1_even+=($i)\n    else\n \
    \     lst1_odd+=($i)\n    fi\n  done\n  for i in ${lst2[@]}; do\n    if [[ $((i\
    \ % 2)) -eq 0 ]]; then\n      lst2_even+=($i)\n    else\n      lst2_odd+=($i)\n\
    \    fi\n  done\n  if [[ ${#lst1_even[@]} -ge ${#lst2_odd[@]} ]]; then\n    echo\
    \ \"YES\"\n  else\n    echo \"NO\"\n  fi\n}\n\ncandidate() {\n    exchange \"\
    $@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"1 2 3 4\" \"1 2 3 4\") =\
    \ \"YES\" ]]\n    [[ $(candidate \"1 2 3 4\" \"1 5 3 4\") = \"NO\" ]]\n    [[\
    \ $(candidate \"1 2 3 4\" \"2 1 4 3\") = \"YES\" ]]\n    [[ $(candidate \"5 7\
    \ 3\" \"2 6 4\") = \"YES\" ]]\n    [[ $(candidate \"5 7 3\" \"2 6 3\") = \"NO\"\
    \ ]]\n    [[ $(candidate \"3 2 6 1 8 9\" \"3 5 5 1 1 1\") = \"NO\" ]]\n    [[\
    \ $(candidate \"100 200\" \"200 200\") = \"YES\" ]]\n}\n\nrun_test"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660002370
- exit_code: 1
  program: "#!/bin/bash\n# In this problem, you will implement a function that takes\
    \ two lists of numbers,\n# and determines whether it is possible to perform an\
    \ exchange of elements\n# between them to make lst1 a list of only even numbers.\n\
    # There is no limit on the number of exchanged elements between lst1 and lst2.\n\
    # If it is possible to exchange elements between the lst1 and lst2 to make\n#\
    \ all the elements of lst1 to be even, return \"YES\".\n# Otherwise, return \"\
    NO\".\n# For example:\n# It is assumed that the input lists will be non-empty.\n\
    #\n# $1 is a space-separated list\n# $2 is a space-separated list\nexchange()\
    \ {\n  local lst1=\"$1\"\n  local lst2=\"$2\"\n  local lst1_odds=()\n  local lst2_evens=()\n\
    \  local lst1_evens=()\n  local lst2_odds=()\n  local lst1_odds_count=0\n  local\
    \ lst2_evens_count=0\n  local lst1_evens_count=0\n  local lst2_odds_count=0\n\
    \  local i=0\n  local j=0\n  local k=0\n  local l=0\n  local m=0\n  local n=0\n\
    \  local o=0\n  local p=0\n  local q=0\n  local r=0\n  local s=0\n  local t=0\n\
    \  local u=0\n  local v=0\n  local w=0\n  local x=0\n  local y=0\n  local z=0\n\
    \  local aa=0\n  local bb=0\n  local cc=0\n  local dd=0\n  local ee=0\n  local\
    \ ff=0\n  local gg=0\n  local hh=0\n  local ii=0\n  local jj=0\n  local kk=0\n\
    \  local ll=0\n  local mm=0\n  local nn=0\n  local oo=0\n  local pp=0\n  local\
    \ qq=0\n  local rr=0\n  local ss=0\n  local tt=0\n  local uu=0\n  local vv=0\n\
    \  local ww=0\n  local xx=0\n  local yy=0\n  local zz=0\n  local aaa=0\n  local\
    \ bbb=0\n  local ccc=0\n  local ddd=0\n  local eee=0\n  local fff=0\n  local ggg=0\n\
    \  local hhh=0\n  local iii=0\n  local jjj=0\n  local kkk=0\n  local lll=0\n \
    \ local mmm=0\n  local nnn=0\n  local ooo=0\n  local ppp=0\n  local q\n}\n\ncandidate()\
    \ {\n    exchange \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"1 2\
    \ 3 4\" \"1 2 3 4\") = \"YES\" ]]\n    [[ $(candidate \"1 2 3 4\" \"1 5 3 4\"\
    ) = \"NO\" ]]\n    [[ $(candidate \"1 2 3 4\" \"2 1 4 3\") = \"YES\" ]]\n    [[\
    \ $(candidate \"5 7 3\" \"2 6 4\") = \"YES\" ]]\n    [[ $(candidate \"5 7 3\"\
    \ \"2 6 3\") = \"NO\" ]]\n    [[ $(candidate \"3 2 6 1 8 9\" \"3 5 5 1 1 1\")\
    \ = \"NO\" ]]\n    [[ $(candidate \"100 200\" \"200 200\") = \"YES\" ]]\n}\n\n\
    run_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660002370
- exit_code: 1
  program: "#!/bin/bash\n# In this problem, you will implement a function that takes\
    \ two lists of numbers,\n# and determines whether it is possible to perform an\
    \ exchange of elements\n# between them to make lst1 a list of only even numbers.\n\
    # There is no limit on the number of exchanged elements between lst1 and lst2.\n\
    # If it is possible to exchange elements between the lst1 and lst2 to make\n#\
    \ all the elements of lst1 to be even, return \"YES\".\n# Otherwise, return \"\
    NO\".\n# For example:\n# It is assumed that the input lists will be non-empty.\n\
    #\n# $1 is a space-separated list\n# $2 is a space-separated list\nexchange()\
    \ {\n  # Write your code here\n  local lst1=($1)\n  local lst2=($2)\n  local lst1_even=()\n\
    \  local lst1_odd=()\n  local lst2_even=()\n  local lst2_odd=()\n  for i in ${lst1[@]};\
    \ do\n    if [ $((i % 2)) -eq 0 ]; then\n      lst1_even+=($i)\n    else\n   \
    \   lst1_odd+=($i)\n    fi\n  done\n  for i in ${lst2[@]}; do\n    if [ $((i %\
    \ 2)) -eq 0 ]; then\n      lst2_even+=($i)\n    else\n      lst2_odd+=($i)\n \
    \   fi\n  done\n  if [ ${#lst1_even[@]} -eq ${#lst1[@]} ]; then\n    echo \"YES\"\
    \n  elif [ ${#lst1_even[@]} -eq 0 ]; then\n    echo \"NO\"\n  elif [ ${#lst2_odd[@]}\
    \ -eq 0 ]; then\n    echo \"NO\"\n  else\n    echo \"YES\"\n  fi\n}\n\ncandidate()\
    \ {\n    exchange \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"1 2\
    \ 3 4\" \"1 2 3 4\") = \"YES\" ]]\n    [[ $(candidate \"1 2 3 4\" \"1 5 3 4\"\
    ) = \"NO\" ]]\n    [[ $(candidate \"1 2 3 4\" \"2 1 4 3\") = \"YES\" ]]\n    [[\
    \ $(candidate \"5 7 3\" \"2 6 4\") = \"YES\" ]]\n    [[ $(candidate \"5 7 3\"\
    \ \"2 6 3\") = \"NO\" ]]\n    [[ $(candidate \"3 2 6 1 8 9\" \"3 5 5 1 1 1\")\
    \ = \"NO\" ]]\n    [[ $(candidate \"100 200\" \"200 200\") = \"YES\" ]]\n}\n\n\
    run_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660002370
- exit_code: 1
  program: "#!/bin/bash\n# In this problem, you will implement a function that takes\
    \ two lists of numbers,\n# and determines whether it is possible to perform an\
    \ exchange of elements\n# between them to make lst1 a list of only even numbers.\n\
    # There is no limit on the number of exchanged elements between lst1 and lst2.\n\
    # If it is possible to exchange elements between the lst1 and lst2 to make\n#\
    \ all the elements of lst1 to be even, return \"YES\".\n# Otherwise, return \"\
    NO\".\n# For example:\n# It is assumed that the input lists will be non-empty.\n\
    #\n# $1 is a space-separated list\n# $2 is a space-separated list\nexchange()\
    \ {\n    local lst1=($1)\n    local lst2=($2)\n    local lst1_even=()\n    local\
    \ lst1_odd=()\n    local lst2_even=()\n    local lst2_odd=()\n    local i\n  \
    \  for ((i=0; i<${#lst1[@]}; i++)); do\n        if ((lst1[i] % 2 == 0)); then\n\
    \            lst1_even+=(${lst1[i]})\n        else\n            lst1_odd+=(${lst1[i]})\n\
    \        fi\n    done\n    for ((i=0; i<${#lst2[@]}; i++)); do\n        if ((lst2[i]\
    \ % 2 == 0)); then\n            lst2_even+=(${lst2[i]})\n        else\n      \
    \      lst2_odd+=(${lst2[i]})\n        fi\n    done\n    if ((${#lst1_even[@]}\
    \ == ${#lst1[@]})); then\n        echo \"YES\"\n    elif ((${#lst1_even[@]} ==\
    \ ${#lst1[@]} - 1)); then\n        if ((${#lst2_odd[@]} > 0)); then\n        \
    \    echo \"YES\"\n        else\n            echo \"NO\"\n        fi\n    else\n\
    \        echo \"NO\"\n    fi\n}\n\ncandidate() {\n    exchange \"$@\"\n}\n\nset\
    \ -e\nrun_test() {\n    [[ $(candidate \"1 2 3 4\" \"1 2 3 4\") = \"YES\" ]]\n\
    \    [[ $(candidate \"1 2 3 4\" \"1 5 3 4\") = \"NO\" ]]\n    [[ $(candidate \"\
    1 2 3 4\" \"2 1 4 3\") = \"YES\" ]]\n    [[ $(candidate \"5 7 3\" \"2 6 4\") =\
    \ \"YES\" ]]\n    [[ $(candidate \"5 7 3\" \"2 6 3\") = \"NO\" ]]\n    [[ $(candidate\
    \ \"3 2 6 1 8 9\" \"3 5 5 1 1 1\") = \"NO\" ]]\n    [[ $(candidate \"100 200\"\
    \ \"200 200\") = \"YES\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660002370
- exit_code: 1
  program: "#!/bin/bash\n# In this problem, you will implement a function that takes\
    \ two lists of numbers,\n# and determines whether it is possible to perform an\
    \ exchange of elements\n# between them to make lst1 a list of only even numbers.\n\
    # There is no limit on the number of exchanged elements between lst1 and lst2.\n\
    # If it is possible to exchange elements between the lst1 and lst2 to make\n#\
    \ all the elements of lst1 to be even, return \"YES\".\n# Otherwise, return \"\
    NO\".\n# For example:\n# It is assumed that the input lists will be non-empty.\n\
    #\n# $1 is a space-separated list\n# $2 is a space-separated list\nexchange()\
    \ {\n  local lst1=$1\n  local lst2=$2\n  local lst1_odds=()\n  local lst2_evens=()\n\
    \  for i in $lst1; do\n    if [[ $((i % 2)) -ne 0 ]]; then\n      lst1_odds+=($i)\n\
    \    fi\n  done\n  for i in $lst2; do\n    if [[ $((i % 2)) -eq 0 ]]; then\n \
    \     lst2_evens+=($i)\n    fi\n  done\n  if [[ ${#lst1_odds[@]} -eq ${#lst2_evens[@]}\
    \ ]]; then\n    echo \"YES\"\n  else\n    echo \"NO\"\n  fi\n}\n\ncandidate()\
    \ {\n    exchange \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"1 2\
    \ 3 4\" \"1 2 3 4\") = \"YES\" ]]\n    [[ $(candidate \"1 2 3 4\" \"1 5 3 4\"\
    ) = \"NO\" ]]\n    [[ $(candidate \"1 2 3 4\" \"2 1 4 3\") = \"YES\" ]]\n    [[\
    \ $(candidate \"5 7 3\" \"2 6 4\") = \"YES\" ]]\n    [[ $(candidate \"5 7 3\"\
    \ \"2 6 3\") = \"NO\" ]]\n    [[ $(candidate \"3 2 6 1 8 9\" \"3 5 5 1 1 1\")\
    \ = \"NO\" ]]\n    [[ $(candidate \"100 200\" \"200 200\") = \"YES\" ]]\n}\n\n\
    run_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660002369
- exit_code: 1
  program: "#!/bin/bash\n# In this problem, you will implement a function that takes\
    \ two lists of numbers,\n# and determines whether it is possible to perform an\
    \ exchange of elements\n# between them to make lst1 a list of only even numbers.\n\
    # There is no limit on the number of exchanged elements between lst1 and lst2.\n\
    # If it is possible to exchange elements between the lst1 and lst2 to make\n#\
    \ all the elements of lst1 to be even, return \"YES\".\n# Otherwise, return \"\
    NO\".\n# For example:\n# It is assumed that the input lists will be non-empty.\n\
    #\n# $1 is a space-separated list\n# $2 is a space-separated list\nexchange()\
    \ {\n  local lst1=($1)\n  local lst2=($2)\n  local evens=()\n  local odds=()\n\
    \  local i=0\n  local j=0\n  local k=0\n  local l=0\n  local m=0\n  local n=0\n\
    \  local o=0\n  local p=0\n  local q=0\n  local r=0\n  local s=0\n  local t=0\n\
    \  local u=0\n  local v=0\n  local w=0\n  local x=0\n  local y=0\n  local z=0\n\
    \  local aa=0\n  local bb=0\n  local cc=0\n  local dd=0\n  local ee=0\n  local\
    \ ff=0\n  local gg=0\n  local hh=0\n  local ii=0\n  local jj=0\n  local kk=0\n\
    \  local ll=0\n  local mm=0\n  local nn=0\n  local oo=0\n  local pp=0\n  local\
    \ qq=0\n  local rr=0\n  local ss=0\n  local tt=0\n  local uu=0\n  local vv=0\n\
    \  local ww=0\n  local xx=0\n  local yy=0\n  local zz=0\n  local aaa=0\n  local\
    \ bbb=0\n  local ccc=0\n  local ddd=0\n  local eee=0\n  local fff=0\n  local ggg=0\n\
    \  local hhh=0\n  local iii=0\n  local jjj=0\n  local kkk=0\n  local lll=0\n \
    \ local mmm=0\n  local nnn=0\n  local ooo=0\n  local ppp=0\n  local qqq=0\n  local\
    \ rrr=0\n  local sss=0\n  local ttt=0\n  local uuu=0\n  local vvv=0\n  local www=0\n\
    \  local xxx=0\n  local yyy=0\n  local zzz=0\n  local aaaa=0\n  local bbbb=0\n\
    \  local\n}\n\ncandidate() {\n    exchange \"$@\"\n}\n\nset -e\nrun_test() {\n\
    \    [[ $(candidate \"1 2 3 4\" \"1 2 3 4\") = \"YES\" ]]\n    [[ $(candidate\
    \ \"1 2 3 4\" \"1 5 3 4\") = \"NO\" ]]\n    [[ $(candidate \"1 2 3 4\" \"2 1 4\
    \ 3\") = \"YES\" ]]\n    [[ $(candidate \"5 7 3\" \"2 6 4\") = \"YES\" ]]\n  \
    \  [[ $(candidate \"5 7 3\" \"2 6 3\") = \"NO\" ]]\n    [[ $(candidate \"3 2 6\
    \ 1 8 9\" \"3 5 5 1 1 1\") = \"NO\" ]]\n    [[ $(candidate \"100 200\" \"200 200\"\
    ) = \"YES\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660002369
- exit_code: 1
  program: "#!/bin/bash\n# In this problem, you will implement a function that takes\
    \ two lists of numbers,\n# and determines whether it is possible to perform an\
    \ exchange of elements\n# between them to make lst1 a list of only even numbers.\n\
    # There is no limit on the number of exchanged elements between lst1 and lst2.\n\
    # If it is possible to exchange elements between the lst1 and lst2 to make\n#\
    \ all the elements of lst1 to be even, return \"YES\".\n# Otherwise, return \"\
    NO\".\n# For example:\n# It is assumed that the input lists will be non-empty.\n\
    #\n# $1 is a space-separated list\n# $2 is a space-separated list\nexchange()\
    \ {\n  local lst1=($1)\n  local lst2=($2)\n  local lst1_odd=()\n  local lst2_even=()\n\
    \  local lst1_even=()\n  local lst2_odd=()\n  local lst1_even_count=0\n  local\
    \ lst2_even_count=0\n  local lst1_odd_count=0\n  local lst2_odd_count=0\n  local\
    \ i=0\n  local j=0\n  local k=0\n  local l=0\n  local m=0\n  local n=0\n  local\
    \ o=0\n  local p=0\n  local q=0\n  local r=0\n  local s=0\n  local t=0\n  local\
    \ u=0\n  local v=0\n  local w=0\n  local x=0\n  local y=0\n  local z=0\n  local\
    \ aa=0\n  local bb=0\n  local cc=0\n  local dd=0\n  local ee=0\n  local ff=0\n\
    \  local gg=0\n  local hh=0\n  local ii=0\n  local jj=0\n  local kk=0\n  local\
    \ ll=0\n  local mm=0\n  local nn=0\n  local oo=0\n  local pp=0\n  local qq=0\n\
    \  local rr=0\n  local ss=0\n  local tt=0\n  local uu=0\n  local vv=0\n  local\
    \ ww=0\n  local xx=0\n  local yy=0\n  local zz=0\n  local aaa=0\n  local bbb=0\n\
    \  local ccc=0\n  local ddd=0\n  local eee=0\n  local fff=0\n  local ggg=0\n \
    \ local hhh=0\n  local iii=0\n  local jjj=0\n  local kkk=0\n  local lll=0\n  local\
    \ mmm=0\n  local nnn=0\n  local ooo=0\n  local ppp=0\n  local qqq=0\n  local rrr\n\
    }\n\ncandidate() {\n    exchange \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate\
    \ \"1 2 3 4\" \"1 2 3 4\") = \"YES\" ]]\n    [[ $(candidate \"1 2 3 4\" \"1 5\
    \ 3 4\") = \"NO\" ]]\n    [[ $(candidate \"1 2 3 4\" \"2 1 4 3\") = \"YES\" ]]\n\
    \    [[ $(candidate \"5 7 3\" \"2 6 4\") = \"YES\" ]]\n    [[ $(candidate \"5\
    \ 7 3\" \"2 6 3\") = \"NO\" ]]\n    [[ $(candidate \"3 2 6 1 8 9\" \"3 5 5 1 1\
    \ 1\") = \"NO\" ]]\n    [[ $(candidate \"100 200\" \"200 200\") = \"YES\" ]]\n\
    }\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660002369
- exit_code: 1
  program: "#!/bin/bash\n# In this problem, you will implement a function that takes\
    \ two lists of numbers,\n# and determines whether it is possible to perform an\
    \ exchange of elements\n# between them to make lst1 a list of only even numbers.\n\
    # There is no limit on the number of exchanged elements between lst1 and lst2.\n\
    # If it is possible to exchange elements between the lst1 and lst2 to make\n#\
    \ all the elements of lst1 to be even, return \"YES\".\n# Otherwise, return \"\
    NO\".\n# For example:\n# It is assumed that the input lists will be non-empty.\n\
    #\n# $1 is a space-separated list\n# $2 is a space-separated list\nexchange()\
    \ {\n  local lst1=($1)\n  local lst2=($2)\n  local lst1_odd=()\n  local lst2_even=()\n\
    \  local lst1_even=()\n  local lst2_odd=()\n  local lst1_even_count=0\n  local\
    \ lst2_even_count=0\n  local lst1_odd_count=0\n  local lst2_odd_count=0\n  local\
    \ lst1_count=0\n  local lst2_count=0\n  local lst1_even_count=0\n  local lst2_even_count=0\n\
    \  local lst1_odd_count=0\n  local lst2_odd_count=0\n  local lst1_count=0\n  local\
    \ lst2_count=0\n  local lst1_even_count=0\n  local lst2_even_count=0\n  local\
    \ lst1_odd_count=0\n  local lst2_odd_count=0\n  local lst1_count=0\n  local lst2_count=0\n\
    \  local lst1_even_count=0\n  local lst2_even_count=0\n  local lst1_odd_count=0\n\
    \  local lst2_odd_count=0\n  local lst1_count=0\n  local lst2_count=0\n  local\
    \ lst1_even_count=0\n  local lst2_even_count=0\n  local lst1_odd_count=0\n  local\
    \ lst2_odd_count=0\n  local lst1_count=0\n  local lst2_count=0\n  local lst1_even_count=0\n\
    \  local lst2_even_count=0\n  local lst1_odd_count=0\n  local lst2_odd_count=0\n\
    \  local lst1_count=0\n  local lst2_count=0\n  local lst1_even_count=0\n  local\
    \ lst2_even_count=0\n  local lst1_odd_count=0\n  local lst2_odd\n}\n\ncandidate()\
    \ {\n    exchange \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"1 2\
    \ 3 4\" \"1 2 3 4\") = \"YES\" ]]\n    [[ $(candidate \"1 2 3 4\" \"1 5 3 4\"\
    ) = \"NO\" ]]\n    [[ $(candidate \"1 2 3 4\" \"2 1 4 3\") = \"YES\" ]]\n    [[\
    \ $(candidate \"5 7 3\" \"2 6 4\") = \"YES\" ]]\n    [[ $(candidate \"5 7 3\"\
    \ \"2 6 3\") = \"NO\" ]]\n    [[ $(candidate \"3 2 6 1 8 9\" \"3 5 5 1 1 1\")\
    \ = \"NO\" ]]\n    [[ $(candidate \"100 200\" \"200 200\") = \"YES\" ]]\n}\n\n\
    run_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660002370
- exit_code: 1
  program: "#!/bin/bash\n# In this problem, you will implement a function that takes\
    \ two lists of numbers,\n# and determines whether it is possible to perform an\
    \ exchange of elements\n# between them to make lst1 a list of only even numbers.\n\
    # There is no limit on the number of exchanged elements between lst1 and lst2.\n\
    # If it is possible to exchange elements between the lst1 and lst2 to make\n#\
    \ all the elements of lst1 to be even, return \"YES\".\n# Otherwise, return \"\
    NO\".\n# For example:\n# It is assumed that the input lists will be non-empty.\n\
    #\n# $1 is a space-separated list\n# $2 is a space-separated list\nexchange()\
    \ {\n  local lst1=\"$1\"\n  local lst2=\"$2\"\n  local lst1_even=0\n  local lst2_even=0\n\
    \  local lst1_odd=0\n  local lst2_odd=0\n  local lst1_odd_even=0\n  local lst2_odd_even=0\n\
    \  local lst1_even_odd=0\n  local lst2_even_odd=0\n  local lst1_odd_odd=0\n  local\
    \ lst2_odd_odd=0\n  local lst1_even_even=0\n  local lst2_even_even=0\n  local\
    \ lst1_odd_odd_even=0\n  local lst2_odd_odd_even=0\n  local lst1_odd_even_odd=0\n\
    \  local lst2_odd_even_odd=0\n  local lst1_even_odd_odd=0\n  local lst2_even_odd_odd=0\n\
    \  local lst1_even_even_odd=0\n  local lst2_even_even_odd=0\n  local lst1_odd_even_even=0\n\
    \  local lst2_odd_even_even=0\n  local lst1_even_odd_even=0\n  local lst2_even_odd_even=0\n\
    \  local lst1_even_even_even=0\n  local lst2_even_even_even=0\n  local lst1_odd_odd_odd=0\n\
    \  local lst2_odd_odd_odd=0\n  local lst1_odd_odd_odd_even=0\n  local lst2_odd_odd_odd_even=0\n\
    \  local lst1_odd_odd_even_odd=0\n  local lst2_odd_odd_even_odd=0\n  local lst1_odd_even_odd_odd=0\n\
    \  local lst2_odd_even_odd_odd=0\n  local lst1_even_odd_odd_odd=0\n  local lst2_even_odd_odd_odd=0\n\
    \  local l\n}\n\ncandidate() {\n    exchange \"$@\"\n}\n\nset -e\nrun_test() {\n\
    \    [[ $(candidate \"1 2 3 4\" \"1 2 3 4\") = \"YES\" ]]\n    [[ $(candidate\
    \ \"1 2 3 4\" \"1 5 3 4\") = \"NO\" ]]\n    [[ $(candidate \"1 2 3 4\" \"2 1 4\
    \ 3\") = \"YES\" ]]\n    [[ $(candidate \"5 7 3\" \"2 6 4\") = \"YES\" ]]\n  \
    \  [[ $(candidate \"5 7 3\" \"2 6 3\") = \"NO\" ]]\n    [[ $(candidate \"3 2 6\
    \ 1 8 9\" \"3 5 5 1 1 1\") = \"NO\" ]]\n    [[ $(candidate \"100 200\" \"200 200\"\
    ) = \"YES\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660002370
- exit_code: 1
  program: "#!/bin/bash\n# In this problem, you will implement a function that takes\
    \ two lists of numbers,\n# and determines whether it is possible to perform an\
    \ exchange of elements\n# between them to make lst1 a list of only even numbers.\n\
    # There is no limit on the number of exchanged elements between lst1 and lst2.\n\
    # If it is possible to exchange elements between the lst1 and lst2 to make\n#\
    \ all the elements of lst1 to be even, return \"YES\".\n# Otherwise, return \"\
    NO\".\n# For example:\n# It is assumed that the input lists will be non-empty.\n\
    #\n# $1 is a space-separated list\n# $2 is a space-separated list\nexchange()\
    \ {\n  local lst1=\"$1\"\n  local lst2=\"$2\"\n  local lst1_even=0\n  local lst2_even=0\n\
    \  local lst1_odd=0\n  local lst2_odd=0\n  for i in $lst1; do\n    if (( i % 2\
    \ == 0 )); then\n      (( lst1_even++ ))\n    else\n      (( lst1_odd++ ))\n \
    \   fi\n  done\n  for i in $lst2; do\n    if (( i % 2 == 0 )); then\n      ((\
    \ lst2_even++ ))\n    else\n      (( lst2_odd++ ))\n    fi\n  done\n  if (( lst1_even\
    \ == 0 )); then\n    echo \"NO\"\n  elif (( lst1_odd == 0 )); then\n    echo \"\
    YES\"\n  elif (( lst2_even == 0 )); then\n    echo \"NO\"\n  elif (( lst2_odd\
    \ == 0 )); then\n    echo \"YES\"\n  elif (( lst1_even >= lst2_odd )); then\n\
    \    echo \"YES\"\n  elif (( lst2_even >= lst1_odd )); then\n    echo \"YES\"\n\
    \  else\n    echo \"NO\"\n  fi\n}\n\ncandidate() {\n    exchange \"$@\"\n}\n\n\
    set -e\nrun_test() {\n    [[ $(candidate \"1 2 3 4\" \"1 2 3 4\") = \"YES\" ]]\n\
    \    [[ $(candidate \"1 2 3 4\" \"1 5 3 4\") = \"NO\" ]]\n    [[ $(candidate \"\
    1 2 3 4\" \"2 1 4 3\") = \"YES\" ]]\n    [[ $(candidate \"5 7 3\" \"2 6 4\") =\
    \ \"YES\" ]]\n    [[ $(candidate \"5 7 3\" \"2 6 3\") = \"NO\" ]]\n    [[ $(candidate\
    \ \"3 2 6 1 8 9\" \"3 5 5 1 1 1\") = \"NO\" ]]\n    [[ $(candidate \"100 200\"\
    \ \"200 200\") = \"YES\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660002370
- exit_code: 1
  program: "#!/bin/bash\n# In this problem, you will implement a function that takes\
    \ two lists of numbers,\n# and determines whether it is possible to perform an\
    \ exchange of elements\n# between them to make lst1 a list of only even numbers.\n\
    # There is no limit on the number of exchanged elements between lst1 and lst2.\n\
    # If it is possible to exchange elements between the lst1 and lst2 to make\n#\
    \ all the elements of lst1 to be even, return \"YES\".\n# Otherwise, return \"\
    NO\".\n# For example:\n# It is assumed that the input lists will be non-empty.\n\
    #\n# $1 is a space-separated list\n# $2 is a space-separated list\nexchange()\
    \ {\n  local lst1=\"$1\"\n  local lst2=\"$2\"\n  local lst1_even=0\n  local lst2_even=0\n\
    \  local lst1_odd=0\n  local lst2_odd=0\n  local lst1_even_odd=0\n  local lst2_even_odd=0\n\
    \  local lst1_odd_even=0\n  local lst2_odd_even=0\n  local lst1_odd_odd=0\n  local\
    \ lst2_odd_odd=0\n  local lst1_even_even=0\n  local lst2_even_even=0\n  local\
    \ lst1_even_odd_odd=0\n  local lst2_even_odd_odd=0\n  local lst1_odd_even_odd=0\n\
    \  local lst2_odd_even_odd=0\n  local lst1_odd_odd_even=0\n  local lst2_odd_odd_even=0\n\
    \  local lst1_odd_odd_odd=0\n  local lst2_odd_odd_odd=0\n  local lst1_even_even_even=0\n\
    \  local lst2_even_even_even=0\n  local lst1_even_even_odd=0\n  local lst2_even_even_odd=0\n\
    \  local lst1_even_odd_even=0\n  local lst2_even_odd_even=0\n  local lst1_odd_even_even=0\n\
    \  local lst2_odd_even_even=0\n  local lst1_odd_odd_odd_even=0\n  local lst2_odd_odd_odd_even=0\n\
    \  local lst1_odd_odd_even_odd=0\n  local lst2_odd_odd_even_odd=0\n  local lst1_odd_even_odd_odd=0\n\
    \  local lst2_odd_even_odd_odd=0\n  local lst1_even_odd_odd_odd=0\n  local lst2_even_odd_odd_odd=0\n\
    \  local l\n}\n\ncandidate() {\n    exchange \"$@\"\n}\n\nset -e\nrun_test() {\n\
    \    [[ $(candidate \"1 2 3 4\" \"1 2 3 4\") = \"YES\" ]]\n    [[ $(candidate\
    \ \"1 2 3 4\" \"1 5 3 4\") = \"NO\" ]]\n    [[ $(candidate \"1 2 3 4\" \"2 1 4\
    \ 3\") = \"YES\" ]]\n    [[ $(candidate \"5 7 3\" \"2 6 4\") = \"YES\" ]]\n  \
    \  [[ $(candidate \"5 7 3\" \"2 6 3\") = \"NO\" ]]\n    [[ $(candidate \"3 2 6\
    \ 1 8 9\" \"3 5 5 1 1 1\") = \"NO\" ]]\n    [[ $(candidate \"100 200\" \"200 200\"\
    ) = \"YES\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660002370
- exit_code: 1
  program: "#!/bin/bash\n# In this problem, you will implement a function that takes\
    \ two lists of numbers,\n# and determines whether it is possible to perform an\
    \ exchange of elements\n# between them to make lst1 a list of only even numbers.\n\
    # There is no limit on the number of exchanged elements between lst1 and lst2.\n\
    # If it is possible to exchange elements between the lst1 and lst2 to make\n#\
    \ all the elements of lst1 to be even, return \"YES\".\n# Otherwise, return \"\
    NO\".\n# For example:\n# It is assumed that the input lists will be non-empty.\n\
    #\n# $1 is a space-separated list\n# $2 is a space-separated list\nexchange()\
    \ {\n  local lst1=\"$1\"\n  local lst2=\"$2\"\n  local lst1_even=0\n  local lst2_even=0\n\
    \  local lst1_odd=0\n  local lst2_odd=0\n  for i in $lst1; do\n    if [ $((i %\
    \ 2)) -eq 0 ]; then\n      lst1_even=$((lst1_even + 1))\n    else\n      lst1_odd=$((lst1_odd\
    \ + 1))\n    fi\n  done\n  for i in $lst2; do\n    if [ $((i % 2)) -eq 0 ]; then\n\
    \      lst2_even=$((lst2_even + 1))\n    else\n      lst2_odd=$((lst2_odd + 1))\n\
    \    fi\n  done\n  if [ $lst1_even -eq 0 ]; then\n    echo \"NO\"\n  elif [ $lst2_odd\
    \ -eq 0 ]; then\n    echo \"NO\"\n  elif [ $lst1_even -eq $lst2_odd ]; then\n\
    \    echo \"YES\"\n  elif [ $lst1_even -gt $lst2_odd ]; then\n    echo \"YES\"\
    \n  elif [ $lst1_even -lt $lst2_odd ]; then\n    echo \"YES\"\n  fi\n}\n\ncandidate()\
    \ {\n    exchange \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"1 2\
    \ 3 4\" \"1 2 3 4\") = \"YES\" ]]\n    [[ $(candidate \"1 2 3 4\" \"1 5 3 4\"\
    ) = \"NO\" ]]\n    [[ $(candidate \"1 2 3 4\" \"2 1 4 3\") = \"YES\" ]]\n    [[\
    \ $(candidate \"5 7 3\" \"2 6 4\") = \"YES\" ]]\n    [[ $(candidate \"5 7 3\"\
    \ \"2 6 3\") = \"NO\" ]]\n    [[ $(candidate \"3 2 6 1 8 9\" \"3 5 5 1 1 1\")\
    \ = \"NO\" ]]\n    [[ $(candidate \"100 200\" \"200 200\") = \"YES\" ]]\n}\n\n\
    run_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660002369
- exit_code: 1
  program: "#!/bin/bash\n# In this problem, you will implement a function that takes\
    \ two lists of numbers,\n# and determines whether it is possible to perform an\
    \ exchange of elements\n# between them to make lst1 a list of only even numbers.\n\
    # There is no limit on the number of exchanged elements between lst1 and lst2.\n\
    # If it is possible to exchange elements between the lst1 and lst2 to make\n#\
    \ all the elements of lst1 to be even, return \"YES\".\n# Otherwise, return \"\
    NO\".\n# For example:\n# It is assumed that the input lists will be non-empty.\n\
    #\n# $1 is a space-separated list\n# $2 is a space-separated list\nexchange()\
    \ {\n  local lst1=($1)\n  local lst2=($2)\n  local len1=${#lst1[@]}\n  local len2=${#lst2[@]}\n\
    \  local i\n  local j\n  local flag=0\n  for ((i=0; i<len1; i++)); do\n    if\
    \ [[ ${lst1[$i]}%2 -ne 0 ]]; then\n      for ((j=0; j<len2; j++)); do\n      \
    \  if [[ ${lst2[$j]}%2 -eq 0 ]]; then\n          lst1[$i]=${lst2[$j]}\n      \
    \    lst2[$j]=${lst1[$i]}\n          flag=1\n          break\n        fi\n   \
    \   done\n    fi\n  done\n  if [[ $flag -eq 1 ]]; then\n    echo \"YES\"\n  else\n\
    \    echo \"NO\"\n  fi\n}\n\ncandidate() {\n    exchange \"$@\"\n}\n\nset -e\n\
    run_test() {\n    [[ $(candidate \"1 2 3 4\" \"1 2 3 4\") = \"YES\" ]]\n    [[\
    \ $(candidate \"1 2 3 4\" \"1 5 3 4\") = \"NO\" ]]\n    [[ $(candidate \"1 2 3\
    \ 4\" \"2 1 4 3\") = \"YES\" ]]\n    [[ $(candidate \"5 7 3\" \"2 6 4\") = \"\
    YES\" ]]\n    [[ $(candidate \"5 7 3\" \"2 6 3\") = \"NO\" ]]\n    [[ $(candidate\
    \ \"3 2 6 1 8 9\" \"3 5 5 1 1 1\") = \"NO\" ]]\n    [[ $(candidate \"100 200\"\
    \ \"200 200\") = \"YES\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660002370
- exit_code: 1
  program: "#!/bin/bash\n# In this problem, you will implement a function that takes\
    \ two lists of numbers,\n# and determines whether it is possible to perform an\
    \ exchange of elements\n# between them to make lst1 a list of only even numbers.\n\
    # There is no limit on the number of exchanged elements between lst1 and lst2.\n\
    # If it is possible to exchange elements between the lst1 and lst2 to make\n#\
    \ all the elements of lst1 to be even, return \"YES\".\n# Otherwise, return \"\
    NO\".\n# For example:\n# It is assumed that the input lists will be non-empty.\n\
    #\n# $1 is a space-separated list\n# $2 is a space-separated list\nexchange()\
    \ {\n  local lst1=($1)\n  local lst2=($2)\n  local lst1_odd=()\n  local lst2_even=()\n\
    \  local lst1_even=()\n  local lst2_odd=()\n  local lst1_even_count=0\n  local\
    \ lst2_even_count=0\n  local lst1_odd_count=0\n  local lst2_odd_count=0\n  local\
    \ i=0\n  local j=0\n  local k=0\n  local l=0\n  local m=0\n  local n=0\n  local\
    \ o=0\n  local p=0\n  local q=0\n  local r=0\n  local s=0\n  local t=0\n  local\
    \ u=0\n  local v=0\n  local w=0\n  local x=0\n  local y=0\n  local z=0\n  local\
    \ aa=0\n  local bb=0\n  local cc=0\n  local dd=0\n  local ee=0\n  local ff=0\n\
    \  local gg=0\n  local hh=0\n  local ii=0\n  local jj=0\n  local kk=0\n  local\
    \ ll=0\n  local mm=0\n  local nn=0\n  local oo=0\n  local pp=0\n  local qq=0\n\
    \  local rr=0\n  local ss=0\n  local tt=0\n  local uu=0\n  local vv=0\n  local\
    \ ww=0\n  local xx=0\n  local yy=0\n  local zz=0\n  local aaa=0\n  local bbb=0\n\
    \  local ccc=0\n  local ddd=0\n  local eee=0\n  local fff=0\n  local ggg=0\n \
    \ local hhh=0\n  local iii=0\n  local jjj=0\n  local kkk=0\n  local lll=0\n  local\
    \ mmm=0\n  local nnn=0\n  local ooo=0\n  local ppp=0\n  local qqq=0\n  local rrr\n\
    }\n\ncandidate() {\n    exchange \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate\
    \ \"1 2 3 4\" \"1 2 3 4\") = \"YES\" ]]\n    [[ $(candidate \"1 2 3 4\" \"1 5\
    \ 3 4\") = \"NO\" ]]\n    [[ $(candidate \"1 2 3 4\" \"2 1 4 3\") = \"YES\" ]]\n\
    \    [[ $(candidate \"5 7 3\" \"2 6 4\") = \"YES\" ]]\n    [[ $(candidate \"5\
    \ 7 3\" \"2 6 3\") = \"NO\" ]]\n    [[ $(candidate \"3 2 6 1 8 9\" \"3 5 5 1 1\
    \ 1\") = \"NO\" ]]\n    [[ $(candidate \"100 200\" \"200 200\") = \"YES\" ]]\n\
    }\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660002369
- exit_code: 1
  program: "#!/bin/bash\n# In this problem, you will implement a function that takes\
    \ two lists of numbers,\n# and determines whether it is possible to perform an\
    \ exchange of elements\n# between them to make lst1 a list of only even numbers.\n\
    # There is no limit on the number of exchanged elements between lst1 and lst2.\n\
    # If it is possible to exchange elements between the lst1 and lst2 to make\n#\
    \ all the elements of lst1 to be even, return \"YES\".\n# Otherwise, return \"\
    NO\".\n# For example:\n# It is assumed that the input lists will be non-empty.\n\
    #\n# $1 is a space-separated list\n# $2 is a space-separated list\nexchange()\
    \ {\n    local lst1=$1\n    local lst2=$2\n    local lst1_even=0\n    local lst2_even=0\n\
    \    local lst1_odd=0\n    local lst2_odd=0\n    local lst1_total=0\n    local\
    \ lst2_total=0\n    local lst1_even_total=0\n    local lst2_even_total=0\n   \
    \ local lst1_odd_total=0\n    local lst2_odd_total=0\n    local lst1_even_odd_total=0\n\
    \    local lst2_even_odd_total=0\n    local lst1_odd_even_total=0\n    local lst2_odd_even_total=0\n\
    \    local lst1_odd_odd_total=0\n    local lst2_odd_odd_total=0\n    local lst1_even_even_total=0\n\
    \    local lst2_even_even_total=0\n    local lst1_even_odd_total=0\n    local\
    \ lst2_even_odd_total=0\n    local lst1_odd_even_total=0\n    local lst2_odd_even_total=0\n\
    \    local lst1_odd_odd_total=0\n    local lst2_odd_odd_total=0\n    local lst1_even_even_total=0\n\
    \    local lst2_even_even_total=0\n    local lst1_even_odd_total=0\n    local\
    \ lst2_even_odd_total=0\n    local lst1_odd_even_total=0\n    local lst2_odd_even_total=0\n\
    \    local lst1_odd_odd_total=0\n    local lst2_odd_odd_total=0\n    local lst1_even_even_total=0\n\
    \    local lst2_even_even_total=0\n    local lst1_even_odd_total=0\n    local\
    \ lst2_even_odd_total=0\n    local lst1_odd_even_total=0\n    local lst2_odd_even\n\
    }\n\ncandidate() {\n    exchange \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate\
    \ \"1 2 3 4\" \"1 2 3 4\") = \"YES\" ]]\n    [[ $(candidate \"1 2 3 4\" \"1 5\
    \ 3 4\") = \"NO\" ]]\n    [[ $(candidate \"1 2 3 4\" \"2 1 4 3\") = \"YES\" ]]\n\
    \    [[ $(candidate \"5 7 3\" \"2 6 4\") = \"YES\" ]]\n    [[ $(candidate \"5\
    \ 7 3\" \"2 6 3\") = \"NO\" ]]\n    [[ $(candidate \"3 2 6 1 8 9\" \"3 5 5 1 1\
    \ 1\") = \"NO\" ]]\n    [[ $(candidate \"100 200\" \"200 200\") = \"YES\" ]]\n\
    }\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660002370
- exit_code: 1
  program: "#!/bin/bash\n# In this problem, you will implement a function that takes\
    \ two lists of numbers,\n# and determines whether it is possible to perform an\
    \ exchange of elements\n# between them to make lst1 a list of only even numbers.\n\
    # There is no limit on the number of exchanged elements between lst1 and lst2.\n\
    # If it is possible to exchange elements between the lst1 and lst2 to make\n#\
    \ all the elements of lst1 to be even, return \"YES\".\n# Otherwise, return \"\
    NO\".\n# For example:\n# It is assumed that the input lists will be non-empty.\n\
    #\n# $1 is a space-separated list\n# $2 is a space-separated list\nexchange()\
    \ {\n  local lst1=($1)\n  local lst2=($2)\n  local lst1_even=()\n  local lst1_odd=()\n\
    \  local lst2_even=()\n  local lst2_odd=()\n  local lst1_even_count=0\n  local\
    \ lst1_odd_count=0\n  local lst2_even_count=0\n  local lst2_odd_count=0\n  local\
    \ i=0\n  local j=0\n  local k=0\n  local l=0\n  local m=0\n  local n=0\n  local\
    \ o=0\n  local p=0\n  local q=0\n  local r=0\n  local s=0\n  local t=0\n  local\
    \ u=0\n  local v=0\n  local w=0\n  local x=0\n  local y=0\n  local z=0\n  local\
    \ aa=0\n  local bb=0\n  local cc=0\n  local dd=0\n  local ee=0\n  local ff=0\n\
    \  local gg=0\n  local hh=0\n  local ii=0\n  local jj=0\n  local kk=0\n  local\
    \ ll=0\n  local mm=0\n  local nn=0\n  local oo=0\n  local pp=0\n  local qq=0\n\
    \  local rr=0\n  local ss=0\n  local tt=0\n  local uu=0\n  local vv=0\n  local\
    \ ww=0\n  local xx=0\n  local yy=0\n  local zz=0\n  local aaa=0\n  local bbb=0\n\
    \  local ccc=0\n  local ddd=0\n  local eee=0\n  local fff=0\n  local ggg=0\n \
    \ local hhh=0\n  local iii=0\n  local jjj=0\n  local kkk=0\n  local lll=0\n  local\
    \ mmm=0\n  local nnn=0\n  local ooo=0\n  local ppp=0\n  local qqq=0\n  local rrr\n\
    }\n\ncandidate() {\n    exchange \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate\
    \ \"1 2 3 4\" \"1 2 3 4\") = \"YES\" ]]\n    [[ $(candidate \"1 2 3 4\" \"1 5\
    \ 3 4\") = \"NO\" ]]\n    [[ $(candidate \"1 2 3 4\" \"2 1 4 3\") = \"YES\" ]]\n\
    \    [[ $(candidate \"5 7 3\" \"2 6 4\") = \"YES\" ]]\n    [[ $(candidate \"5\
    \ 7 3\" \"2 6 3\") = \"NO\" ]]\n    [[ $(candidate \"3 2 6 1 8 9\" \"3 5 5 1 1\
    \ 1\") = \"NO\" ]]\n    [[ $(candidate \"100 200\" \"200 200\") = \"YES\" ]]\n\
    }\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660002369
- exit_code: 2
  program: "#!/bin/bash\n# In this problem, you will implement a function that takes\
    \ two lists of numbers,\n# and determines whether it is possible to perform an\
    \ exchange of elements\n# between them to make lst1 a list of only even numbers.\n\
    # There is no limit on the number of exchanged elements between lst1 and lst2.\n\
    # If it is possible to exchange elements between the lst1 and lst2 to make\n#\
    \ all the elements of lst1 to be even, return \"YES\".\n# Otherwise, return \"\
    NO\".\n# For example:\n# It is assumed that the input lists will be non-empty.\n\
    #\n# $1 is a space-separated list\n# $2 is a space-separated list\nexchange()\
    \ {\n  local lst1=($1)\n  local lst2=($2)\n  local lst1_len=${#lst1[@]}\n  local\
    \ lst2_len=${#lst2[@]}\n  local i j\n  local even_count=0\n  local odd_count=0\n\
    \  local even_index=0\n  local odd_index=0\n  local even_lst1=()\n  local odd_lst1=()\n\
    \  local even_lst2=()\n  local odd_lst2=()\n  for ((i=0; i<lst1_len; i++)); do\n\
    \    if [[ ${lst1[$i]}%2 -eq 0 ]]; then\n      even_lst1[$even_index]=${lst1[$i]}\n\
    \      even_index=$((even_index+1))\n      even_count=$((even_count+1))\n    else\n\
    \      odd_lst1[$odd_index]=${lst1[$i]}\n      odd_index=$((odd_index+1))\n  \
    \    odd_count=$((odd_count+1))\n    fi\n  done\n  even_index=0\n  odd_index=0\n\
    \  for ((i=0; i<lst2_len; i++)); do\n    if [[ ${lst2[$i]}%2 -eq 0 ]]; then\n\
    \      even_lst2[$even_index]=${lst2[$i]}\n      even_index=$((even_index+1))\n\
    \    else\n      odd_lst2[$odd_index]=${lst2[$i]}\n      odd_index=$((odd_index+1))\n\
    \    fi\n  done\n  if [[ $even_count -eq $lst1_len ]]; then\n    echo \"YES\"\n\
    \  elif [[ $odd_count -eq $lst1_len ]]; then\n    echo \"NO\"\n  else\n    local\
    \ even_lst2_len=${#even_lst2[@]}\n    local odd_lst2_len=${#odd_lst2[@]}\n   \
    \ if [[ $even_lst2_\n}\n\ncandidate() {\n    exchange \"$@\"\n}\n\nset -e\nrun_test()\
    \ {\n    [[ $(candidate \"1 2 3 4\" \"1 2 3 4\") = \"YES\" ]]\n    [[ $(candidate\
    \ \"1 2 3 4\" \"1 5 3 4\") = \"NO\" ]]\n    [[ $(candidate \"1 2 3 4\" \"2 1 4\
    \ 3\") = \"YES\" ]]\n    [[ $(candidate \"5 7 3\" \"2 6 4\") = \"YES\" ]]\n  \
    \  [[ $(candidate \"5 7 3\" \"2 6 3\") = \"NO\" ]]\n    [[ $(candidate \"3 2 6\
    \ 1 8 9\" \"3 5 5 1 1 1\") = \"NO\" ]]\n    [[ $(candidate \"100 200\" \"200 200\"\
    ) = \"YES\" ]]\n}\n\nrun_test"
  status: SyntaxError
  stderr: '/tmp/tmpne85xcri.sh: line 57: unexpected token `newline'', conditional
    binary operator expected

    /tmp/tmpne85xcri.sh: line 57: syntax error near `$even_lst2_''

    /tmp/tmpne85xcri.sh: line 57: `    if [[ $even_lst2_''

    '
  stdout: ''
  timestamp: 1660002370
- exit_code: 1
  program: "#!/bin/bash\n# In this problem, you will implement a function that takes\
    \ two lists of numbers,\n# and determines whether it is possible to perform an\
    \ exchange of elements\n# between them to make lst1 a list of only even numbers.\n\
    # There is no limit on the number of exchanged elements between lst1 and lst2.\n\
    # If it is possible to exchange elements between the lst1 and lst2 to make\n#\
    \ all the elements of lst1 to be even, return \"YES\".\n# Otherwise, return \"\
    NO\".\n# For example:\n# It is assumed that the input lists will be non-empty.\n\
    #\n# $1 is a space-separated list\n# $2 is a space-separated list\nexchange()\
    \ {\n    local lst1=($1)\n    local lst2=($2)\n    local lst1_odd=()\n    local\
    \ lst2_even=()\n    local lst1_even=()\n    local lst2_odd=()\n    local i=0\n\
    \    local j=0\n    local k=0\n    local l=0\n    local m=0\n    local n=0\n \
    \   local o=0\n    local p=0\n    local q=0\n    local r=0\n    local s=0\n  \
    \  local t=0\n    local u=0\n    local v=0\n    local w=0\n    local x=0\n   \
    \ local y=0\n    local z=0\n    local aa=0\n    local bb=0\n    local cc=0\n \
    \   local dd=0\n    local ee=0\n    local ff=0\n    local gg=0\n    local hh=0\n\
    \    local ii=0\n    local jj=0\n    local kk=0\n    local ll=0\n    local mm=0\n\
    \    local nn=0\n    local oo=0\n    local pp=0\n    local qq=0\n    local rr=0\n\
    \    local ss=0\n    local tt=0\n    local uu=0\n    local vv=0\n    local ww=0\n\
    \    local xx=0\n    local yy=0\n    local zz=0\n    local aaa=0\n    local bbb=0\n\
    \    local ccc=0\n    local ddd=0\n    local eee=0\n    local fff=0\n    local\
    \ ggg=0\n    local hhh=0\n    local iii=0\n    local jjj=0\n    local kkk=0\n\
    \    local lll=0\n    local mmm=0\n    local nnn=0\n    local ooo=0\n    local\
    \ ppp=0\n    local qqq=0\n    local rrr=0\n    local sss=0\n    local ttt=0\n\
    \    local uuu=0\n    local vvv=0\n    local www=0\n    local xxx=0\n    local\
    \ yyy\n}\n\ncandidate() {\n    exchange \"$@\"\n}\n\nset -e\nrun_test() {\n  \
    \  [[ $(candidate \"1 2 3 4\" \"1 2 3 4\") = \"YES\" ]]\n    [[ $(candidate \"\
    1 2 3 4\" \"1 5 3 4\") = \"NO\" ]]\n    [[ $(candidate \"1 2 3 4\" \"2 1 4 3\"\
    ) = \"YES\" ]]\n    [[ $(candidate \"5 7 3\" \"2 6 4\") = \"YES\" ]]\n    [[ $(candidate\
    \ \"5 7 3\" \"2 6 3\") = \"NO\" ]]\n    [[ $(candidate \"3 2 6 1 8 9\" \"3 5 5\
    \ 1 1 1\") = \"NO\" ]]\n    [[ $(candidate \"100 200\" \"200 200\") = \"YES\"\
    \ ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660002369
- exit_code: 1
  program: "#!/bin/bash\n# In this problem, you will implement a function that takes\
    \ two lists of numbers,\n# and determines whether it is possible to perform an\
    \ exchange of elements\n# between them to make lst1 a list of only even numbers.\n\
    # There is no limit on the number of exchanged elements between lst1 and lst2.\n\
    # If it is possible to exchange elements between the lst1 and lst2 to make\n#\
    \ all the elements of lst1 to be even, return \"YES\".\n# Otherwise, return \"\
    NO\".\n# For example:\n# It is assumed that the input lists will be non-empty.\n\
    #\n# $1 is a space-separated list\n# $2 is a space-separated list\nexchange()\
    \ {\n    local lst1=($1)\n    local lst2=($2)\n    local lst1_even=0\n    local\
    \ lst2_even=0\n    local lst1_odd=0\n    local lst2_odd=0\n    for i in ${lst1[@]};\
    \ do\n        if [ $((i % 2)) -eq 0 ]; then\n            lst1_even=$((lst1_even\
    \ + 1))\n        else\n            lst1_odd=$((lst1_odd + 1))\n        fi\n  \
    \  done\n    for i in ${lst2[@]}; do\n        if [ $((i % 2)) -eq 0 ]; then\n\
    \            lst2_even=$((lst2_even + 1))\n        else\n            lst2_odd=$((lst2_odd\
    \ + 1))\n        fi\n    done\n    if [ $lst1_even -eq ${#lst1[@]} ]; then\n \
    \       echo \"YES\"\n    elif [ $lst2_even -eq ${#lst2[@]} ]; then\n        echo\
    \ \"YES\"\n    elif [ $lst1_even -eq 0 ]; then\n        if [ $lst2_even -gt 0\
    \ ]; then\n            echo \"YES\"\n        else\n            echo \"NO\"\n \
    \       fi\n    elif [ $lst2_even -eq 0 ]; then\n        if [ $lst1_even -gt 0\
    \ ]; then\n            echo \"YES\"\n        else\n            echo \"NO\"\n \
    \       fi\n    elif [ $lst1_odd -eq 0 ]; then\n        if [ $lst2_odd -gt 0 ];\
    \ then\n            echo \"YES\"\n        else\n            echo \"NO\"\n    \
    \    fi\n    elif [ $lst2_odd -eq 0 ]; then\n        if [ $lst1_odd -gt 0 ]; then\n\
    \            echo \"YES\"\n        else\n            echo \"NO\"\n        fi\n\
    \    else\n        echo \"NO\"\n    fi\n}\n\ncandidate() {\n    exchange \"$@\"\
    \n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"1 2 3 4\" \"1 2 3 4\") = \"\
    YES\" ]]\n    [[ $(candidate \"1 2 3 4\" \"1 5 3 4\") = \"NO\" ]]\n    [[ $(candidate\
    \ \"1 2 3 4\" \"2 1 4 3\") = \"YES\" ]]\n    [[ $(candidate \"5 7 3\" \"2 6 4\"\
    ) = \"YES\" ]]\n    [[ $(candidate \"5 7 3\" \"2 6 3\") = \"NO\" ]]\n    [[ $(candidate\
    \ \"3 2 6 1 8 9\" \"3 5 5 1 1 1\") = \"NO\" ]]\n    [[ $(candidate \"100 200\"\
    \ \"200 200\") = \"YES\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660002370
- exit_code: 1
  program: "#!/bin/bash\n# In this problem, you will implement a function that takes\
    \ two lists of numbers,\n# and determines whether it is possible to perform an\
    \ exchange of elements\n# between them to make lst1 a list of only even numbers.\n\
    # There is no limit on the number of exchanged elements between lst1 and lst2.\n\
    # If it is possible to exchange elements between the lst1 and lst2 to make\n#\
    \ all the elements of lst1 to be even, return \"YES\".\n# Otherwise, return \"\
    NO\".\n# For example:\n# It is assumed that the input lists will be non-empty.\n\
    #\n# $1 is a space-separated list\n# $2 is a space-separated list\nexchange()\
    \ {\n    local -a lst1=($1)\n    local -a lst2=($2)\n    local -a evens=()\n \
    \   local -a odds=()\n    local -a result=()\n    local i=0\n    local j=0\n \
    \   local k=0\n    local l=0\n    local m=0\n    local n=0\n    local o=0\n  \
    \  local p=0\n    local q=0\n    local r=0\n    local s=0\n    local t=0\n   \
    \ local u=0\n    local v=0\n    local w=0\n    local x=0\n    local y=0\n    local\
    \ z=0\n    local a=0\n    local b=0\n    local c=0\n    local d=0\n    local e=0\n\
    \    local f=0\n    local g=0\n    local h=0\n    local ii=0\n    local jj=0\n\
    \    local kk=0\n    local ll=0\n    local mm=0\n    local nn=0\n    local oo=0\n\
    \    local pp=0\n    local qq=0\n    local rr=0\n    local ss=0\n    local tt=0\n\
    \    local uu=0\n    local vv=0\n    local ww=0\n    local xx=0\n    local yy=0\n\
    \    local zz=0\n    local aa=0\n    local bb=0\n    local cc=0\n    local dd=0\n\
    \    local ee=0\n    local ff=0\n    local gg=0\n    local hh=0\n    local iii=0\n\
    \    local jjj=0\n    local kkk=0\n    local lll=0\n    local mmm=0\n    local\
    \ nnn=0\n    local ooo=0\n    local ppp=0\n    local qqq=0\n    local rrr=0\n\
    \    local sss=0\n    local ttt=0\n    local uuu=0\n    local vvv=0\n    local\
    \ www=0\n    local xxx=0\n    local yyy=0\n    local zzz=0\n    local aaaa=0\n\
    \    local\n}\n\ncandidate() {\n    exchange \"$@\"\n}\n\nset -e\nrun_test() {\n\
    \    [[ $(candidate \"1 2 3 4\" \"1 2 3 4\") = \"YES\" ]]\n    [[ $(candidate\
    \ \"1 2 3 4\" \"1 5 3 4\") = \"NO\" ]]\n    [[ $(candidate \"1 2 3 4\" \"2 1 4\
    \ 3\") = \"YES\" ]]\n    [[ $(candidate \"5 7 3\" \"2 6 4\") = \"YES\" ]]\n  \
    \  [[ $(candidate \"5 7 3\" \"2 6 3\") = \"NO\" ]]\n    [[ $(candidate \"3 2 6\
    \ 1 8 9\" \"3 5 5 1 1 1\") = \"NO\" ]]\n    [[ $(candidate \"100 200\" \"200 200\"\
    ) = \"YES\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660002370
- exit_code: 1
  program: "#!/bin/bash\n# In this problem, you will implement a function that takes\
    \ two lists of numbers,\n# and determines whether it is possible to perform an\
    \ exchange of elements\n# between them to make lst1 a list of only even numbers.\n\
    # There is no limit on the number of exchanged elements between lst1 and lst2.\n\
    # If it is possible to exchange elements between the lst1 and lst2 to make\n#\
    \ all the elements of lst1 to be even, return \"YES\".\n# Otherwise, return \"\
    NO\".\n# For example:\n# It is assumed that the input lists will be non-empty.\n\
    #\n# $1 is a space-separated list\n# $2 is a space-separated list\nexchange()\
    \ {\n    local lst1=\"$1\"\n    local lst2=\"$2\"\n    local lst1_even=0\n   \
    \ local lst2_even=0\n    local lst1_odd=0\n    local lst2_odd=0\n    local lst1_even_odd=0\n\
    \    local lst2_even_odd=0\n    local lst1_odd_even=0\n    local lst2_odd_even=0\n\
    \    local lst1_odd_odd=0\n    local lst2_odd_odd=0\n    local lst1_even_even=0\n\
    \    local lst2_even_even=0\n    local lst1_even_odd_even=0\n    local lst2_even_odd_even=0\n\
    \    local lst1_odd_even_odd=0\n    local lst2_odd_even_odd=0\n    local lst1_odd_odd_even=0\n\
    \    local lst2_odd_odd_even=0\n    local lst1_even_even_odd=0\n    local lst2_even_even_odd=0\n\
    \    local lst1_even_odd_odd=0\n    local lst2_even_odd_odd=0\n    local lst1_odd_even_even=0\n\
    \    local lst2_odd_even_even=0\n    local lst1_odd_odd_odd=0\n    local lst2_odd_odd_odd=0\n\
    \    local lst1_even_even_even=0\n    local lst2_even_even_even=0\n    local lst1_odd_odd_odd_even=0\n\
    \    local lst2_odd_odd_odd_even=0\n    local lst1_even_even_even_odd=0\n    local\
    \ lst2_even_even_even_odd=0\n    local lst1_odd_odd_odd_odd=0\n    local lst2_odd_odd_odd_odd=0\n\
    \    local lst1_even_even_even_even=0\n    local lst2_even_even_even_even=0\n\
    \    local l\n}\n\ncandidate() {\n    exchange \"$@\"\n}\n\nset -e\nrun_test()\
    \ {\n    [[ $(candidate \"1 2 3 4\" \"1 2 3 4\") = \"YES\" ]]\n    [[ $(candidate\
    \ \"1 2 3 4\" \"1 5 3 4\") = \"NO\" ]]\n    [[ $(candidate \"1 2 3 4\" \"2 1 4\
    \ 3\") = \"YES\" ]]\n    [[ $(candidate \"5 7 3\" \"2 6 4\") = \"YES\" ]]\n  \
    \  [[ $(candidate \"5 7 3\" \"2 6 3\") = \"NO\" ]]\n    [[ $(candidate \"3 2 6\
    \ 1 8 9\" \"3 5 5 1 1 1\") = \"NO\" ]]\n    [[ $(candidate \"100 200\" \"200 200\"\
    ) = \"YES\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660002369
- exit_code: 1
  program: "#!/bin/bash\n# In this problem, you will implement a function that takes\
    \ two lists of numbers,\n# and determines whether it is possible to perform an\
    \ exchange of elements\n# between them to make lst1 a list of only even numbers.\n\
    # There is no limit on the number of exchanged elements between lst1 and lst2.\n\
    # If it is possible to exchange elements between the lst1 and lst2 to make\n#\
    \ all the elements of lst1 to be even, return \"YES\".\n# Otherwise, return \"\
    NO\".\n# For example:\n# It is assumed that the input lists will be non-empty.\n\
    #\n# $1 is a space-separated list\n# $2 is a space-separated list\nexchange()\
    \ {\n  local lst1=($1)\n  local lst2=($2)\n  local lst1_odd=()\n  local lst2_even=()\n\
    \  local lst1_even=()\n  local lst2_odd=()\n  local lst1_even_count=0\n  local\
    \ lst2_even_count=0\n  local lst1_odd_count=0\n  local lst2_odd_count=0\n  local\
    \ i=0\n  local j=0\n  local k=0\n  local l=0\n  local m=0\n  local n=0\n  local\
    \ o=0\n  local p=0\n  local q=0\n  local r=0\n  local s=0\n  local t=0\n  local\
    \ u=0\n  local v=0\n  local w=0\n  local x=0\n  local y=0\n  local z=0\n  local\
    \ aa=0\n  local bb=0\n  local cc=0\n  local dd=0\n  local ee=0\n  local ff=0\n\
    \  local gg=0\n  local hh=0\n  local ii=0\n  local jj=0\n  local kk=0\n  local\
    \ ll=0\n  local mm=0\n  local nn=0\n  local oo=0\n  local pp=0\n  local qq=0\n\
    \  local rr=0\n  local ss=0\n  local tt=0\n  local uu=0\n  local vv=0\n  local\
    \ ww=0\n  local xx=0\n  local yy=0\n  local zz=0\n  local aaa=0\n  local bbb=0\n\
    \  local ccc=0\n  local ddd=0\n  local eee=0\n  local fff=0\n  local ggg=0\n \
    \ local hhh=0\n  local iii=0\n  local jjj=0\n  local kkk=0\n  local lll=0\n  local\
    \ mmm=0\n  local nnn=0\n  local ooo=0\n  local ppp=0\n  local qqq=0\n  local rrr\n\
    }\n\ncandidate() {\n    exchange \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate\
    \ \"1 2 3 4\" \"1 2 3 4\") = \"YES\" ]]\n    [[ $(candidate \"1 2 3 4\" \"1 5\
    \ 3 4\") = \"NO\" ]]\n    [[ $(candidate \"1 2 3 4\" \"2 1 4 3\") = \"YES\" ]]\n\
    \    [[ $(candidate \"5 7 3\" \"2 6 4\") = \"YES\" ]]\n    [[ $(candidate \"5\
    \ 7 3\" \"2 6 3\") = \"NO\" ]]\n    [[ $(candidate \"3 2 6 1 8 9\" \"3 5 5 1 1\
    \ 1\") = \"NO\" ]]\n    [[ $(candidate \"100 200\" \"200 200\") = \"YES\" ]]\n\
    }\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660002369
- exit_code: 0
  program: "#!/bin/bash\n# In this problem, you will implement a function that takes\
    \ two lists of numbers,\n# and determines whether it is possible to perform an\
    \ exchange of elements\n# between them to make lst1 a list of only even numbers.\n\
    # There is no limit on the number of exchanged elements between lst1 and lst2.\n\
    # If it is possible to exchange elements between the lst1 and lst2 to make\n#\
    \ all the elements of lst1 to be even, return \"YES\".\n# Otherwise, return \"\
    NO\".\n# For example:\n# It is assumed that the input lists will be non-empty.\n\
    #\n# $1 is a space-separated list\n# $2 is a space-separated list\nexchange()\
    \ {\n  local lst1=$1\n  local lst2=$2\n  local lst1_even=0\n  local lst2_even=0\n\
    \  local lst1_odd=0\n  local lst2_odd=0\n  for num in $lst1; do\n    if ((num\
    \ % 2 == 0)); then\n      ((lst1_even++))\n    else\n      ((lst1_odd++))\n  \
    \  fi\n  done\n  for num in $lst2; do\n    if ((num % 2 == 0)); then\n      ((lst2_even++))\n\
    \    else\n      ((lst2_odd++))\n    fi\n  done\n  if ((lst1_even >= lst2_odd\
    \ && lst2_even >= lst1_odd)); then\n    echo \"YES\"\n  else\n    echo \"NO\"\n\
    \  fi\n}\n\ncandidate() {\n    exchange \"$@\"\n}\n\nset -e\nrun_test() {\n  \
    \  [[ $(candidate \"1 2 3 4\" \"1 2 3 4\") = \"YES\" ]]\n    [[ $(candidate \"\
    1 2 3 4\" \"1 5 3 4\") = \"NO\" ]]\n    [[ $(candidate \"1 2 3 4\" \"2 1 4 3\"\
    ) = \"YES\" ]]\n    [[ $(candidate \"5 7 3\" \"2 6 4\") = \"YES\" ]]\n    [[ $(candidate\
    \ \"5 7 3\" \"2 6 3\") = \"NO\" ]]\n    [[ $(candidate \"3 2 6 1 8 9\" \"3 5 5\
    \ 1 1 1\") = \"NO\" ]]\n    [[ $(candidate \"100 200\" \"200 200\") = \"YES\"\
    \ ]]\n}\n\nrun_test"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660002370
- exit_code: 1
  program: "#!/bin/bash\n# In this problem, you will implement a function that takes\
    \ two lists of numbers,\n# and determines whether it is possible to perform an\
    \ exchange of elements\n# between them to make lst1 a list of only even numbers.\n\
    # There is no limit on the number of exchanged elements between lst1 and lst2.\n\
    # If it is possible to exchange elements between the lst1 and lst2 to make\n#\
    \ all the elements of lst1 to be even, return \"YES\".\n# Otherwise, return \"\
    NO\".\n# For example:\n# It is assumed that the input lists will be non-empty.\n\
    #\n# $1 is a space-separated list\n# $2 is a space-separated list\nexchange()\
    \ {\n  local lst1=\"$1\"\n  local lst2=\"$2\"\n  local even_count=0\n  local odd_count=0\n\
    \  local lst1_even_count=0\n  local lst2_even_count=0\n  local lst1_odd_count=0\n\
    \  local lst2_odd_count=0\n  local lst1_even_odd_count=0\n  local lst2_even_odd_count=0\n\
    \  local lst1_odd_even_count=0\n  local lst2_odd_even_count=0\n  local lst1_even_odd_count=0\n\
    \  local lst2_even_odd_count=0\n  local lst1_odd_even_count=0\n  local lst2_odd_even_count=0\n\
    \  local lst1_even_even_count=0\n  local lst2_even_even_count=0\n  local lst1_odd_odd_count=0\n\
    \  local lst2_odd_odd_count=0\n  local lst1_even_odd_count=0\n  local lst2_even_odd_count=0\n\
    \  local lst1_odd_even_count=0\n  local lst2_odd_even_count=0\n  local lst1_even_even_count=0\n\
    \  local lst2_even_even_count=0\n  local lst1_odd_odd_count=0\n  local lst2_odd_odd_count=0\n\
    \  local lst1_even_odd_count=0\n  local lst2_even_odd_count=0\n  local lst1_odd_even_count=0\n\
    \  local lst2_odd_even_count=0\n  local lst1_even_even_count=0\n  local lst2_even_even_count=0\n\
    \  local lst1_odd_odd_count=0\n  local lst2_odd_odd_count=0\n  local lst1_even_odd_count=0\n\
    \  local lst2_even_odd_count=0\n  local lst1_odd\n}\n\ncandidate() {\n    exchange\
    \ \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"1 2 3 4\" \"1 2 3 4\"\
    ) = \"YES\" ]]\n    [[ $(candidate \"1 2 3 4\" \"1 5 3 4\") = \"NO\" ]]\n    [[\
    \ $(candidate \"1 2 3 4\" \"2 1 4 3\") = \"YES\" ]]\n    [[ $(candidate \"5 7\
    \ 3\" \"2 6 4\") = \"YES\" ]]\n    [[ $(candidate \"5 7 3\" \"2 6 3\") = \"NO\"\
    \ ]]\n    [[ $(candidate \"3 2 6 1 8 9\" \"3 5 5 1 1 1\") = \"NO\" ]]\n    [[\
    \ $(candidate \"100 200\" \"200 200\") = \"YES\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660002370
- exit_code: 1
  program: "#!/bin/bash\n# In this problem, you will implement a function that takes\
    \ two lists of numbers,\n# and determines whether it is possible to perform an\
    \ exchange of elements\n# between them to make lst1 a list of only even numbers.\n\
    # There is no limit on the number of exchanged elements between lst1 and lst2.\n\
    # If it is possible to exchange elements between the lst1 and lst2 to make\n#\
    \ all the elements of lst1 to be even, return \"YES\".\n# Otherwise, return \"\
    NO\".\n# For example:\n# It is assumed that the input lists will be non-empty.\n\
    #\n# $1 is a space-separated list\n# $2 is a space-separated list\nexchange()\
    \ {\n    local lst1=\"$1\"\n    local lst2=\"$2\"\n    local lst1_even=0\n   \
    \ local lst2_even=0\n    local lst1_odd=0\n    local lst2_odd=0\n    local lst1_even_odd=0\n\
    \    local lst2_even_odd=0\n    local lst1_odd_even=0\n    local lst2_odd_even=0\n\
    \    local lst1_odd_odd=0\n    local lst2_odd_odd=0\n    local lst1_even_even=0\n\
    \    local lst2_even_even=0\n    local lst1_even_odd_even=0\n    local lst2_even_odd_even=0\n\
    \    local lst1_odd_even_odd=0\n    local lst2_odd_even_odd=0\n    local lst1_odd_odd_even=0\n\
    \    local lst2_odd_odd_even=0\n    local lst1_even_even_odd=0\n    local lst2_even_even_odd=0\n\
    \    local lst1_even_odd_odd=0\n    local lst2_even_odd_odd=0\n    local lst1_odd_even_even=0\n\
    \    local lst2_odd_even_even=0\n    local lst1_odd_odd_odd=0\n    local lst2_odd_odd_odd=0\n\
    \    local lst1_even_even_even=0\n    local lst2_even_even_even=0\n    local lst1_odd_odd_odd_even=0\n\
    \    local lst2_odd_odd_odd_even=0\n    local lst1_even_even_even_odd=0\n    local\
    \ lst2_even_even_even_odd=0\n    local lst1_odd_odd_odd_odd=0\n    local lst2_odd_odd_odd_odd=0\n\
    \    local lst1_even_even_even_even=0\n    local lst2_even_even_even_even=0\n\
    \    local l\n}\n\ncandidate() {\n    exchange \"$@\"\n}\n\nset -e\nrun_test()\
    \ {\n    [[ $(candidate \"1 2 3 4\" \"1 2 3 4\") = \"YES\" ]]\n    [[ $(candidate\
    \ \"1 2 3 4\" \"1 5 3 4\") = \"NO\" ]]\n    [[ $(candidate \"1 2 3 4\" \"2 1 4\
    \ 3\") = \"YES\" ]]\n    [[ $(candidate \"5 7 3\" \"2 6 4\") = \"YES\" ]]\n  \
    \  [[ $(candidate \"5 7 3\" \"2 6 3\") = \"NO\" ]]\n    [[ $(candidate \"3 2 6\
    \ 1 8 9\" \"3 5 5 1 1 1\") = \"NO\" ]]\n    [[ $(candidate \"100 200\" \"200 200\"\
    ) = \"YES\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660002369
- exit_code: 1
  program: "#!/bin/bash\n# In this problem, you will implement a function that takes\
    \ two lists of numbers,\n# and determines whether it is possible to perform an\
    \ exchange of elements\n# between them to make lst1 a list of only even numbers.\n\
    # There is no limit on the number of exchanged elements between lst1 and lst2.\n\
    # If it is possible to exchange elements between the lst1 and lst2 to make\n#\
    \ all the elements of lst1 to be even, return \"YES\".\n# Otherwise, return \"\
    NO\".\n# For example:\n# It is assumed that the input lists will be non-empty.\n\
    #\n# $1 is a space-separated list\n# $2 is a space-separated list\nexchange()\
    \ {\n  local lst1=\"$1\"\n  local lst2=\"$2\"\n  local lst1_even=0\n  local lst2_even=0\n\
    \  local lst1_odd=0\n  local lst2_odd=0\n  for i in $lst1; do\n    if [ $((i %\
    \ 2)) -eq 0 ]; then\n      lst1_even=$((lst1_even + 1))\n    else\n      lst1_odd=$((lst1_odd\
    \ + 1))\n    fi\n  done\n  for i in $lst2; do\n    if [ $((i % 2)) -eq 0 ]; then\n\
    \      lst2_even=$((lst2_even + 1))\n    else\n      lst2_odd=$((lst2_odd + 1))\n\
    \    fi\n  done\n  if [ $lst1_even -eq 0 ]; then\n    if [ $lst2_even -eq 0 ];\
    \ then\n      echo \"NO\"\n    else\n      echo \"YES\"\n    fi\n  else\n    if\
    \ [ $lst2_odd -eq 0 ]; then\n      echo \"NO\"\n    else\n      echo \"YES\"\n\
    \    fi\n  fi\n}\n\ncandidate() {\n    exchange \"$@\"\n}\n\nset -e\nrun_test()\
    \ {\n    [[ $(candidate \"1 2 3 4\" \"1 2 3 4\") = \"YES\" ]]\n    [[ $(candidate\
    \ \"1 2 3 4\" \"1 5 3 4\") = \"NO\" ]]\n    [[ $(candidate \"1 2 3 4\" \"2 1 4\
    \ 3\") = \"YES\" ]]\n    [[ $(candidate \"5 7 3\" \"2 6 4\") = \"YES\" ]]\n  \
    \  [[ $(candidate \"5 7 3\" \"2 6 3\") = \"NO\" ]]\n    [[ $(candidate \"3 2 6\
    \ 1 8 9\" \"3 5 5 1 1 1\") = \"NO\" ]]\n    [[ $(candidate \"100 200\" \"200 200\"\
    ) = \"YES\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660002370
- exit_code: 0
  program: "#!/bin/bash\n# In this problem, you will implement a function that takes\
    \ two lists of numbers,\n# and determines whether it is possible to perform an\
    \ exchange of elements\n# between them to make lst1 a list of only even numbers.\n\
    # There is no limit on the number of exchanged elements between lst1 and lst2.\n\
    # If it is possible to exchange elements between the lst1 and lst2 to make\n#\
    \ all the elements of lst1 to be even, return \"YES\".\n# Otherwise, return \"\
    NO\".\n# For example:\n# It is assumed that the input lists will be non-empty.\n\
    #\n# $1 is a space-separated list\n# $2 is a space-separated list\nexchange()\
    \ {\n  local lst1=\"$1\"\n  local lst2=\"$2\"\n  local lst1_odd_count=0\n  local\
    \ lst2_even_count=0\n  for i in $lst1; do\n    if [ $((i % 2)) -ne 0 ]; then\n\
    \      lst1_odd_count=$((lst1_odd_count + 1))\n    fi\n  done\n  for i in $lst2;\
    \ do\n    if [ $((i % 2)) -eq 0 ]; then\n      lst2_even_count=$((lst2_even_count\
    \ + 1))\n    fi\n  done\n  if [ $lst1_odd_count -le $lst2_even_count ]; then\n\
    \    echo \"YES\"\n  else\n    echo \"NO\"\n  fi\n}\n\ncandidate() {\n    exchange\
    \ \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"1 2 3 4\" \"1 2 3 4\"\
    ) = \"YES\" ]]\n    [[ $(candidate \"1 2 3 4\" \"1 5 3 4\") = \"NO\" ]]\n    [[\
    \ $(candidate \"1 2 3 4\" \"2 1 4 3\") = \"YES\" ]]\n    [[ $(candidate \"5 7\
    \ 3\" \"2 6 4\") = \"YES\" ]]\n    [[ $(candidate \"5 7 3\" \"2 6 3\") = \"NO\"\
    \ ]]\n    [[ $(candidate \"3 2 6 1 8 9\" \"3 5 5 1 1 1\") = \"NO\" ]]\n    [[\
    \ $(candidate \"100 200\" \"200 200\") = \"YES\" ]]\n}\n\nrun_test"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660002370
- exit_code: 1
  program: "#!/bin/bash\n# In this problem, you will implement a function that takes\
    \ two lists of numbers,\n# and determines whether it is possible to perform an\
    \ exchange of elements\n# between them to make lst1 a list of only even numbers.\n\
    # There is no limit on the number of exchanged elements between lst1 and lst2.\n\
    # If it is possible to exchange elements between the lst1 and lst2 to make\n#\
    \ all the elements of lst1 to be even, return \"YES\".\n# Otherwise, return \"\
    NO\".\n# For example:\n# It is assumed that the input lists will be non-empty.\n\
    #\n# $1 is a space-separated list\n# $2 is a space-separated list\nexchange()\
    \ {\n  local lst1=($1)\n  local lst2=($2)\n  local lst1_even=()\n  local lst1_odd=()\n\
    \  local lst2_even=()\n  local lst2_odd=()\n  local lst1_even_count=0\n  local\
    \ lst1_odd_count=0\n  local lst2_even_count=0\n  local lst2_odd_count=0\n  local\
    \ i=0\n  local j=0\n  local k=0\n  local l=0\n  local m=0\n  local n=0\n  local\
    \ o=0\n  local p=0\n  local q=0\n  local r=0\n  local s=0\n  local t=0\n  local\
    \ u=0\n  local v=0\n  local w=0\n  local x=0\n  local y=0\n  local z=0\n  local\
    \ aa=0\n  local bb=0\n  local cc=0\n  local dd=0\n  local ee=0\n  local ff=0\n\
    \  local gg=0\n  local hh=0\n  local ii=0\n  local jj=0\n  local kk=0\n  local\
    \ ll=0\n  local mm=0\n  local nn=0\n  local oo=0\n  local pp=0\n  local qq=0\n\
    \  local rr=0\n  local ss=0\n  local tt=0\n  local uu=0\n  local vv=0\n  local\
    \ ww=0\n  local xx=0\n  local yy=0\n  local zz=0\n  local aaa=0\n  local bbb=0\n\
    \  local ccc=0\n  local ddd=0\n  local eee=0\n  local fff=0\n  local ggg=0\n \
    \ local hhh=0\n  local iii=0\n  local jjj=0\n  local kkk=0\n  local lll=0\n  local\
    \ mmm=0\n  local nnn=0\n  local ooo=0\n  local ppp=0\n  local qqq=0\n  local rrr\n\
    }\n\ncandidate() {\n    exchange \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate\
    \ \"1 2 3 4\" \"1 2 3 4\") = \"YES\" ]]\n    [[ $(candidate \"1 2 3 4\" \"1 5\
    \ 3 4\") = \"NO\" ]]\n    [[ $(candidate \"1 2 3 4\" \"2 1 4 3\") = \"YES\" ]]\n\
    \    [[ $(candidate \"5 7 3\" \"2 6 4\") = \"YES\" ]]\n    [[ $(candidate \"5\
    \ 7 3\" \"2 6 3\") = \"NO\" ]]\n    [[ $(candidate \"3 2 6 1 8 9\" \"3 5 5 1 1\
    \ 1\") = \"NO\" ]]\n    [[ $(candidate \"100 200\" \"200 200\") = \"YES\" ]]\n\
    }\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660002369
- exit_code: 1
  program: "#!/bin/bash\n# In this problem, you will implement a function that takes\
    \ two lists of numbers,\n# and determines whether it is possible to perform an\
    \ exchange of elements\n# between them to make lst1 a list of only even numbers.\n\
    # There is no limit on the number of exchanged elements between lst1 and lst2.\n\
    # If it is possible to exchange elements between the lst1 and lst2 to make\n#\
    \ all the elements of lst1 to be even, return \"YES\".\n# Otherwise, return \"\
    NO\".\n# For example:\n# It is assumed that the input lists will be non-empty.\n\
    #\n# $1 is a space-separated list\n# $2 is a space-separated list\nexchange()\
    \ {\n  local lst1=($1)\n  local lst2=($2)\n  local lst1_odd=()\n  local lst2_even=()\n\
    \  local lst1_even=()\n  local lst2_odd=()\n  local i=0\n  local j=0\n  local\
    \ k=0\n  local l=0\n  local lst1_len=${#lst1[@]}\n  local lst2_len=${#lst2[@]}\n\
    \  local lst1_odd_len=0\n  local lst2_even_len=0\n  local lst1_even_len=0\n  local\
    \ lst2_odd_len=0\n  local lst1_odd_even_len=0\n  local lst2_even_odd_len=0\n \
    \ local lst1_even_odd_len=0\n  local lst2_odd_even_len=0\n  local lst1_odd_even=()\n\
    \  local lst2_even_odd=()\n  local lst1_even_odd=()\n  local lst2_odd_even=()\n\
    \  local lst1_odd_even_len=0\n  local lst2_even_odd_len=0\n  local lst1_even_odd_len=0\n\
    \  local lst2_odd_even_len=0\n  local lst1_odd_even_len=0\n  local lst2_even_odd_len=0\n\
    \  local lst1_even_odd_len=0\n  local lst2_odd_even_len=0\n  local lst1_odd_even_len=0\n\
    \  local lst2_even_odd_len=0\n  local lst1_even_odd_len=0\n  local lst2_odd_even_len=0\n\
    \  local lst1_odd_even_len=0\n  local lst2_even_odd_len=0\n  local lst1_even_odd_len=0\n\
    \  local lst2_odd_even_len=0\n  local lst1_odd_even_len=0\n  local l\n}\n\ncandidate()\
    \ {\n    exchange \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"1 2\
    \ 3 4\" \"1 2 3 4\") = \"YES\" ]]\n    [[ $(candidate \"1 2 3 4\" \"1 5 3 4\"\
    ) = \"NO\" ]]\n    [[ $(candidate \"1 2 3 4\" \"2 1 4 3\") = \"YES\" ]]\n    [[\
    \ $(candidate \"5 7 3\" \"2 6 4\") = \"YES\" ]]\n    [[ $(candidate \"5 7 3\"\
    \ \"2 6 3\") = \"NO\" ]]\n    [[ $(candidate \"3 2 6 1 8 9\" \"3 5 5 1 1 1\")\
    \ = \"NO\" ]]\n    [[ $(candidate \"100 200\" \"200 200\") = \"YES\" ]]\n}\n\n\
    run_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660002370
- exit_code: 1
  program: "#!/bin/bash\n# In this problem, you will implement a function that takes\
    \ two lists of numbers,\n# and determines whether it is possible to perform an\
    \ exchange of elements\n# between them to make lst1 a list of only even numbers.\n\
    # There is no limit on the number of exchanged elements between lst1 and lst2.\n\
    # If it is possible to exchange elements between the lst1 and lst2 to make\n#\
    \ all the elements of lst1 to be even, return \"YES\".\n# Otherwise, return \"\
    NO\".\n# For example:\n# It is assumed that the input lists will be non-empty.\n\
    #\n# $1 is a space-separated list\n# $2 is a space-separated list\nexchange()\
    \ {\n  local lst1=($1)\n  local lst2=($2)\n  local lst1_odd=()\n  local lst2_even=()\n\
    \  local lst1_even=()\n  local lst2_odd=()\n  local lst1_odd_count=0\n  local\
    \ lst2_even_count=0\n  local lst1_even_count=0\n  local lst2_odd_count=0\n  for\
    \ i in ${lst1[@]}; do\n    if [[ $((i % 2)) -eq 0 ]]; then\n      lst1_even[$lst1_even_count]=$i\n\
    \      ((lst1_even_count++))\n    else\n      lst1_odd[$lst1_odd_count]=$i\n \
    \     ((lst1_odd_count++))\n    fi\n  done\n  for i in ${lst2[@]}; do\n    if\
    \ [[ $((i % 2)) -eq 0 ]]; then\n      lst2_even[$lst2_even_count]=$i\n      ((lst2_even_count++))\n\
    \    else\n      lst2_odd[$lst2_odd_count]=$i\n      ((lst2_odd_count++))\n  \
    \  fi\n  done\n  if [[ $lst1_odd_count -eq 0 || $lst2_even_count -eq 0 ]]; then\n\
    \    echo \"NO\"\n  else\n    echo \"YES\"\n  fi\n}\n\ncandidate() {\n    exchange\
    \ \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"1 2 3 4\" \"1 2 3 4\"\
    ) = \"YES\" ]]\n    [[ $(candidate \"1 2 3 4\" \"1 5 3 4\") = \"NO\" ]]\n    [[\
    \ $(candidate \"1 2 3 4\" \"2 1 4 3\") = \"YES\" ]]\n    [[ $(candidate \"5 7\
    \ 3\" \"2 6 4\") = \"YES\" ]]\n    [[ $(candidate \"5 7 3\" \"2 6 3\") = \"NO\"\
    \ ]]\n    [[ $(candidate \"3 2 6 1 8 9\" \"3 5 5 1 1 1\") = \"NO\" ]]\n    [[\
    \ $(candidate \"100 200\" \"200 200\") = \"YES\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660002370
- exit_code: 1
  program: "#!/bin/bash\n# In this problem, you will implement a function that takes\
    \ two lists of numbers,\n# and determines whether it is possible to perform an\
    \ exchange of elements\n# between them to make lst1 a list of only even numbers.\n\
    # There is no limit on the number of exchanged elements between lst1 and lst2.\n\
    # If it is possible to exchange elements between the lst1 and lst2 to make\n#\
    \ all the elements of lst1 to be even, return \"YES\".\n# Otherwise, return \"\
    NO\".\n# For example:\n# It is assumed that the input lists will be non-empty.\n\
    #\n# $1 is a space-separated list\n# $2 is a space-separated list\nexchange()\
    \ {\n    local lst1=$1\n    local lst2=$2\n    local lst1_even=0\n    local lst2_even=0\n\
    \    local lst1_odd=0\n    local lst2_odd=0\n    for n in $lst1; do\n        if\
    \ (( n % 2 == 0 )); then\n            (( lst1_even++ ))\n        else\n      \
    \      (( lst1_odd++ ))\n        fi\n    done\n    for n in $lst2; do\n      \
    \  if (( n % 2 == 0 )); then\n            (( lst2_even++ ))\n        else\n  \
    \          (( lst2_odd++ ))\n        fi\n    done\n    if (( lst1_even > lst2_odd\
    \ )); then\n        echo \"YES\"\n    else\n        echo \"NO\"\n    fi\n}\n\n\
    candidate() {\n    exchange \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate\
    \ \"1 2 3 4\" \"1 2 3 4\") = \"YES\" ]]\n    [[ $(candidate \"1 2 3 4\" \"1 5\
    \ 3 4\") = \"NO\" ]]\n    [[ $(candidate \"1 2 3 4\" \"2 1 4 3\") = \"YES\" ]]\n\
    \    [[ $(candidate \"5 7 3\" \"2 6 4\") = \"YES\" ]]\n    [[ $(candidate \"5\
    \ 7 3\" \"2 6 3\") = \"NO\" ]]\n    [[ $(candidate \"3 2 6 1 8 9\" \"3 5 5 1 1\
    \ 1\") = \"NO\" ]]\n    [[ $(candidate \"100 200\" \"200 200\") = \"YES\" ]]\n\
    }\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660002370
- exit_code: 1
  program: "#!/bin/bash\n# In this problem, you will implement a function that takes\
    \ two lists of numbers,\n# and determines whether it is possible to perform an\
    \ exchange of elements\n# between them to make lst1 a list of only even numbers.\n\
    # There is no limit on the number of exchanged elements between lst1 and lst2.\n\
    # If it is possible to exchange elements between the lst1 and lst2 to make\n#\
    \ all the elements of lst1 to be even, return \"YES\".\n# Otherwise, return \"\
    NO\".\n# For example:\n# It is assumed that the input lists will be non-empty.\n\
    #\n# $1 is a space-separated list\n# $2 is a space-separated list\nexchange()\
    \ {\n  local lst1=$1\n  local lst2=$2\n  local lst1_even=0\n  local lst2_even=0\n\
    \  local lst1_odd=0\n  local lst2_odd=0\n  local lst1_even_odd=0\n  local lst2_even_odd=0\n\
    \  local lst1_odd_even=0\n  local lst2_odd_even=0\n  local lst1_even_even=0\n\
    \  local lst2_even_even=0\n  local lst1_odd_odd=0\n  local lst2_odd_odd=0\n  local\
    \ lst1_even_even_odd=0\n  local lst2_even_even_odd=0\n  local lst1_odd_odd_even=0\n\
    \  local lst2_odd_odd_even=0\n  local lst1_even_odd_even=0\n  local lst2_even_odd_even=0\n\
    \  local lst1_odd_even_odd=0\n  local lst2_odd_even_odd=0\n  local lst1_even_odd_odd=0\n\
    \  local lst2_even_odd_odd=0\n  local lst1_odd_even_even=0\n  local lst2_odd_even_even=0\n\
    \  local lst1_odd_odd_odd=0\n  local lst2_odd_odd_odd=0\n  local lst1_even_even_even=0\n\
    \  local lst2_even_even_even=0\n  local lst1_even_odd_even_odd=0\n  local lst2_even_odd_even_odd=0\n\
    \  local lst1_odd_even_odd_even=0\n  local lst2_odd_even_odd_even=0\n  local lst1_even_odd_odd_even=0\n\
    \  local lst2_even_odd_odd_even=0\n  local lst1_odd_even_even_odd=0\n  local lst2_odd_even_even_odd=0\n\
    \  local lst1_odd\n}\n\ncandidate() {\n    exchange \"$@\"\n}\n\nset -e\nrun_test()\
    \ {\n    [[ $(candidate \"1 2 3 4\" \"1 2 3 4\") = \"YES\" ]]\n    [[ $(candidate\
    \ \"1 2 3 4\" \"1 5 3 4\") = \"NO\" ]]\n    [[ $(candidate \"1 2 3 4\" \"2 1 4\
    \ 3\") = \"YES\" ]]\n    [[ $(candidate \"5 7 3\" \"2 6 4\") = \"YES\" ]]\n  \
    \  [[ $(candidate \"5 7 3\" \"2 6 3\") = \"NO\" ]]\n    [[ $(candidate \"3 2 6\
    \ 1 8 9\" \"3 5 5 1 1 1\") = \"NO\" ]]\n    [[ $(candidate \"100 200\" \"200 200\"\
    ) = \"YES\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660002370
- exit_code: 1
  program: "#!/bin/bash\n# In this problem, you will implement a function that takes\
    \ two lists of numbers,\n# and determines whether it is possible to perform an\
    \ exchange of elements\n# between them to make lst1 a list of only even numbers.\n\
    # There is no limit on the number of exchanged elements between lst1 and lst2.\n\
    # If it is possible to exchange elements between the lst1 and lst2 to make\n#\
    \ all the elements of lst1 to be even, return \"YES\".\n# Otherwise, return \"\
    NO\".\n# For example:\n# It is assumed that the input lists will be non-empty.\n\
    #\n# $1 is a space-separated list\n# $2 is a space-separated list\nexchange()\
    \ {\n    local lst1=($1)\n    local lst2=($2)\n    local lst1_even=()\n    local\
    \ lst1_odd=()\n    local lst2_even=()\n    local lst2_odd=()\n    local lst1_even_count=0\n\
    \    local lst1_odd_count=0\n    local lst2_even_count=0\n    local lst2_odd_count=0\n\
    \    local i=0\n    local j=0\n    local k=0\n    local l=0\n    local m=0\n \
    \   local n=0\n    local o=0\n    local p=0\n    local q=0\n    local r=0\n  \
    \  local s=0\n    local t=0\n    local u=0\n    local v=0\n    local w=0\n   \
    \ local x=0\n    local y=0\n    local z=0\n    local aa=0\n    local bb=0\n  \
    \  local cc=0\n    local dd=0\n    local ee=0\n    local ff=0\n    local gg=0\n\
    \    local hh=0\n    local ii=0\n    local jj=0\n    local kk=0\n    local ll=0\n\
    \    local mm=0\n    local nn=0\n    local oo=0\n    local pp=0\n    local qq=0\n\
    \    local rr=0\n    local ss=0\n    local tt=0\n    local uu=0\n    local vv=0\n\
    \    local ww=0\n    local xx=0\n    local yy=0\n    local zz=0\n    local aaa=0\n\
    \    local bbb=0\n    local ccc=0\n    local ddd=0\n    local eee=0\n    local\
    \ fff=0\n    local ggg=0\n    local hhh=0\n    local iii=0\n    local jjj=0\n\
    \    local kkk=0\n    local lll=0\n    local mmm=0\n    local nnn=0\n    local\
    \ ooo=0\n    local ppp=0\n    local qqq=0\n    local rrr\n}\n\ncandidate() {\n\
    \    exchange \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"1 2 3 4\"\
    \ \"1 2 3 4\") = \"YES\" ]]\n    [[ $(candidate \"1 2 3 4\" \"1 5 3 4\") = \"\
    NO\" ]]\n    [[ $(candidate \"1 2 3 4\" \"2 1 4 3\") = \"YES\" ]]\n    [[ $(candidate\
    \ \"5 7 3\" \"2 6 4\") = \"YES\" ]]\n    [[ $(candidate \"5 7 3\" \"2 6 3\") =\
    \ \"NO\" ]]\n    [[ $(candidate \"3 2 6 1 8 9\" \"3 5 5 1 1 1\") = \"NO\" ]]\n\
    \    [[ $(candidate \"100 200\" \"200 200\") = \"YES\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660002369
- exit_code: 1
  program: "#!/bin/bash\n# In this problem, you will implement a function that takes\
    \ two lists of numbers,\n# and determines whether it is possible to perform an\
    \ exchange of elements\n# between them to make lst1 a list of only even numbers.\n\
    # There is no limit on the number of exchanged elements between lst1 and lst2.\n\
    # If it is possible to exchange elements between the lst1 and lst2 to make\n#\
    \ all the elements of lst1 to be even, return \"YES\".\n# Otherwise, return \"\
    NO\".\n# For example:\n# It is assumed that the input lists will be non-empty.\n\
    #\n# $1 is a space-separated list\n# $2 is a space-separated list\nexchange()\
    \ {\n  local lst1=($1)\n  local lst2=($2)\n  local lst1_even=0\n  local lst2_even=0\n\
    \  local lst1_odd=0\n  local lst2_odd=0\n  for i in ${lst1[@]}; do\n    if [ $((i\
    \ % 2)) -eq 0 ]; then\n      ((lst1_even++))\n    else\n      ((lst1_odd++))\n\
    \    fi\n  done\n  for i in ${lst2[@]}; do\n    if [ $((i % 2)) -eq 0 ]; then\n\
    \      ((lst2_even++))\n    else\n      ((lst2_odd++))\n    fi\n  done\n  if [\
    \ $lst1_even -eq 0 ]; then\n    echo \"NO\"\n  elif [ $lst2_odd -eq 0 ]; then\n\
    \    echo \"NO\"\n  elif [ $lst1_even -eq ${#lst1[@]} ]; then\n    echo \"YES\"\
    \n  elif [ $lst2_odd -eq ${#lst2[@]} ]; then\n    echo \"YES\"\n  elif [ $lst1_even\
    \ -gt $lst2_odd ]; then\n    echo \"YES\"\n  elif [ $lst1_even -lt $lst2_odd ];\
    \ then\n    echo \"YES\"\n  else\n    echo \"NO\"\n  fi\n}\n\ncandidate() {\n\
    \    exchange \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"1 2 3 4\"\
    \ \"1 2 3 4\") = \"YES\" ]]\n    [[ $(candidate \"1 2 3 4\" \"1 5 3 4\") = \"\
    NO\" ]]\n    [[ $(candidate \"1 2 3 4\" \"2 1 4 3\") = \"YES\" ]]\n    [[ $(candidate\
    \ \"5 7 3\" \"2 6 4\") = \"YES\" ]]\n    [[ $(candidate \"5 7 3\" \"2 6 3\") =\
    \ \"NO\" ]]\n    [[ $(candidate \"3 2 6 1 8 9\" \"3 5 5 1 1 1\") = \"NO\" ]]\n\
    \    [[ $(candidate \"100 200\" \"200 200\") = \"YES\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660002370
- exit_code: 1
  program: "#!/bin/bash\n# In this problem, you will implement a function that takes\
    \ two lists of numbers,\n# and determines whether it is possible to perform an\
    \ exchange of elements\n# between them to make lst1 a list of only even numbers.\n\
    # There is no limit on the number of exchanged elements between lst1 and lst2.\n\
    # If it is possible to exchange elements between the lst1 and lst2 to make\n#\
    \ all the elements of lst1 to be even, return \"YES\".\n# Otherwise, return \"\
    NO\".\n# For example:\n# It is assumed that the input lists will be non-empty.\n\
    #\n# $1 is a space-separated list\n# $2 is a space-separated list\nexchange()\
    \ {\n  local lst1=\"$1\"\n  local lst2=\"$2\"\n  local lst1_even=0\n  local lst2_even=0\n\
    \  local lst1_odd=0\n  local lst2_odd=0\n  for i in $lst1; do\n    if [ $((i %\
    \ 2)) -eq 0 ]; then\n      lst1_even=$((lst1_even + 1))\n    else\n      lst1_odd=$((lst1_odd\
    \ + 1))\n    fi\n  done\n  for i in $lst2; do\n    if [ $((i % 2)) -eq 0 ]; then\n\
    \      lst2_even=$((lst2_even + 1))\n    else\n      lst2_odd=$((lst2_odd + 1))\n\
    \    fi\n  done\n  if [ $lst1_even -eq 0 ]; then\n    echo \"NO\"\n  elif [ $lst2_odd\
    \ -eq 0 ]; then\n    echo \"NO\"\n  elif [ $lst1_even -eq $lst2_odd ]; then\n\
    \    echo \"YES\"\n  elif [ $lst1_even -lt $lst2_odd ]; then\n    echo \"YES\"\
    \n  elif [ $lst1_even -gt $lst2_odd ]; then\n    echo \"NO\"\n  fi\n}\n\ncandidate()\
    \ {\n    exchange \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"1 2\
    \ 3 4\" \"1 2 3 4\") = \"YES\" ]]\n    [[ $(candidate \"1 2 3 4\" \"1 5 3 4\"\
    ) = \"NO\" ]]\n    [[ $(candidate \"1 2 3 4\" \"2 1 4 3\") = \"YES\" ]]\n    [[\
    \ $(candidate \"5 7 3\" \"2 6 4\") = \"YES\" ]]\n    [[ $(candidate \"5 7 3\"\
    \ \"2 6 3\") = \"NO\" ]]\n    [[ $(candidate \"3 2 6 1 8 9\" \"3 5 5 1 1 1\")\
    \ = \"NO\" ]]\n    [[ $(candidate \"100 200\" \"200 200\") = \"YES\" ]]\n}\n\n\
    run_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660002370
- exit_code: 1
  program: "#!/bin/bash\n# In this problem, you will implement a function that takes\
    \ two lists of numbers,\n# and determines whether it is possible to perform an\
    \ exchange of elements\n# between them to make lst1 a list of only even numbers.\n\
    # There is no limit on the number of exchanged elements between lst1 and lst2.\n\
    # If it is possible to exchange elements between the lst1 and lst2 to make\n#\
    \ all the elements of lst1 to be even, return \"YES\".\n# Otherwise, return \"\
    NO\".\n# For example:\n# It is assumed that the input lists will be non-empty.\n\
    #\n# $1 is a space-separated list\n# $2 is a space-separated list\nexchange()\
    \ {\n  local lst1=($1)\n  local lst2=($2)\n  local evens=()\n  local odds=()\n\
    \  for i in ${lst1[@]}; do\n    if [ $((i % 2)) -eq 0 ]; then\n      evens+=($i)\n\
    \    else\n      odds+=($i)\n    fi\n  done\n  for i in ${lst2[@]}; do\n    if\
    \ [ $((i % 2)) -eq 0 ]; then\n      evens+=($i)\n    else\n      odds+=($i)\n\
    \    fi\n  done\n  if [ ${#odds[@]} -eq 0 ]; then\n    echo \"YES\"\n  else\n\
    \    echo \"NO\"\n  fi\n}\n\ncandidate() {\n    exchange \"$@\"\n}\n\nset -e\n\
    run_test() {\n    [[ $(candidate \"1 2 3 4\" \"1 2 3 4\") = \"YES\" ]]\n    [[\
    \ $(candidate \"1 2 3 4\" \"1 5 3 4\") = \"NO\" ]]\n    [[ $(candidate \"1 2 3\
    \ 4\" \"2 1 4 3\") = \"YES\" ]]\n    [[ $(candidate \"5 7 3\" \"2 6 4\") = \"\
    YES\" ]]\n    [[ $(candidate \"5 7 3\" \"2 6 3\") = \"NO\" ]]\n    [[ $(candidate\
    \ \"3 2 6 1 8 9\" \"3 5 5 1 1 1\") = \"NO\" ]]\n    [[ $(candidate \"100 200\"\
    \ \"200 200\") = \"YES\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660002370
- exit_code: 1
  program: "#!/bin/bash\n# In this problem, you will implement a function that takes\
    \ two lists of numbers,\n# and determines whether it is possible to perform an\
    \ exchange of elements\n# between them to make lst1 a list of only even numbers.\n\
    # There is no limit on the number of exchanged elements between lst1 and lst2.\n\
    # If it is possible to exchange elements between the lst1 and lst2 to make\n#\
    \ all the elements of lst1 to be even, return \"YES\".\n# Otherwise, return \"\
    NO\".\n# For example:\n# It is assumed that the input lists will be non-empty.\n\
    #\n# $1 is a space-separated list\n# $2 is a space-separated list\nexchange()\
    \ {\n  local lst1=($1)\n  local lst2=($2)\n  local lst1_even=0\n  local lst2_even=0\n\
    \  local lst1_odd=0\n  local lst2_odd=0\n  for i in ${lst1[@]}; do\n    if [[\
    \ $((i % 2)) -eq 0 ]]; then\n      ((lst1_even++))\n    else\n      ((lst1_odd++))\n\
    \    fi\n  done\n  for i in ${lst2[@]}; do\n    if [[ $((i % 2)) -eq 0 ]]; then\n\
    \      ((lst2_even++))\n    else\n      ((lst2_odd++))\n    fi\n  done\n  if [[\
    \ $lst1_even -eq 0 ]]; then\n    echo \"NO\"\n  elif [[ $lst2_even -eq 0 ]]; then\n\
    \    echo \"NO\"\n  elif [[ $lst1_odd -eq 0 ]]; then\n    echo \"YES\"\n  elif\
    \ [[ $lst2_odd -eq 0 ]]; then\n    echo \"YES\"\n  elif [[ $lst1_even -ge $lst2_odd\
    \ ]]; then\n    echo \"YES\"\n  elif [[ $lst2_even -ge $lst1_odd ]]; then\n  \
    \  echo \"YES\"\n  else\n    echo \"NO\"\n  fi\n}\n\ncandidate() {\n    exchange\
    \ \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"1 2 3 4\" \"1 2 3 4\"\
    ) = \"YES\" ]]\n    [[ $(candidate \"1 2 3 4\" \"1 5 3 4\") = \"NO\" ]]\n    [[\
    \ $(candidate \"1 2 3 4\" \"2 1 4 3\") = \"YES\" ]]\n    [[ $(candidate \"5 7\
    \ 3\" \"2 6 4\") = \"YES\" ]]\n    [[ $(candidate \"5 7 3\" \"2 6 3\") = \"NO\"\
    \ ]]\n    [[ $(candidate \"3 2 6 1 8 9\" \"3 5 5 1 1 1\") = \"NO\" ]]\n    [[\
    \ $(candidate \"100 200\" \"200 200\") = \"YES\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660002370
- exit_code: 1
  program: "#!/bin/bash\n# In this problem, you will implement a function that takes\
    \ two lists of numbers,\n# and determines whether it is possible to perform an\
    \ exchange of elements\n# between them to make lst1 a list of only even numbers.\n\
    # There is no limit on the number of exchanged elements between lst1 and lst2.\n\
    # If it is possible to exchange elements between the lst1 and lst2 to make\n#\
    \ all the elements of lst1 to be even, return \"YES\".\n# Otherwise, return \"\
    NO\".\n# For example:\n# It is assumed that the input lists will be non-empty.\n\
    #\n# $1 is a space-separated list\n# $2 is a space-separated list\nexchange()\
    \ {\n  local lst1=($1)\n  local lst2=($2)\n  local lst1_odd=()\n  local lst2_even=()\n\
    \  local lst1_even=()\n  local lst2_odd=()\n  local lst1_even_count=0\n  local\
    \ lst2_even_count=0\n  local lst1_odd_count=0\n  local lst2_odd_count=0\n  local\
    \ lst1_even_odd_diff=0\n  local lst2_even_odd_diff=0\n  local lst1_even_odd_diff_abs=0\n\
    \  local lst2_even_odd_diff_abs=0\n  local lst1_even_odd_diff_abs_sum=0\n  local\
    \ lst2_even_odd_diff_abs_sum=0\n  local i=0\n  local j=0\n  local k=0\n  local\
    \ l=0\n  local m=0\n  local n=0\n  local o=0\n  local p=0\n  local q=0\n  local\
    \ r=0\n  local s=0\n  local t=0\n  local u=0\n  local v=0\n  local w=0\n  local\
    \ x=0\n  local y=0\n  local z=0\n  local aa=0\n  local bb=0\n  local cc=0\n  local\
    \ dd=0\n  local ee=0\n  local ff=0\n  local gg=0\n  local hh=0\n  local ii=0\n\
    \  local jj=0\n  local kk=0\n  local ll=0\n  local mm=0\n  local nn=0\n  local\
    \ oo=0\n  local pp=0\n  local qq=0\n  local rr=0\n  local ss=0\n  local tt=0\n\
    \  local uu=0\n  local vv=0\n  local ww=0\n  local xx=0\n  local yy=0\n  local\
    \ zz=0\n  local aaa=0\n  local bbb=0\n  local ccc=0\n  local ddd=\n}\n\ncandidate()\
    \ {\n    exchange \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"1 2\
    \ 3 4\" \"1 2 3 4\") = \"YES\" ]]\n    [[ $(candidate \"1 2 3 4\" \"1 5 3 4\"\
    ) = \"NO\" ]]\n    [[ $(candidate \"1 2 3 4\" \"2 1 4 3\") = \"YES\" ]]\n    [[\
    \ $(candidate \"5 7 3\" \"2 6 4\") = \"YES\" ]]\n    [[ $(candidate \"5 7 3\"\
    \ \"2 6 3\") = \"NO\" ]]\n    [[ $(candidate \"3 2 6 1 8 9\" \"3 5 5 1 1 1\")\
    \ = \"NO\" ]]\n    [[ $(candidate \"100 200\" \"200 200\") = \"YES\" ]]\n}\n\n\
    run_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660002370
- exit_code: 0
  program: "#!/bin/bash\n# In this problem, you will implement a function that takes\
    \ two lists of numbers,\n# and determines whether it is possible to perform an\
    \ exchange of elements\n# between them to make lst1 a list of only even numbers.\n\
    # There is no limit on the number of exchanged elements between lst1 and lst2.\n\
    # If it is possible to exchange elements between the lst1 and lst2 to make\n#\
    \ all the elements of lst1 to be even, return \"YES\".\n# Otherwise, return \"\
    NO\".\n# For example:\n# It is assumed that the input lists will be non-empty.\n\
    #\n# $1 is a space-separated list\n# $2 is a space-separated list\nexchange()\
    \ {\n  local lst1=$1\n  local lst2=$2\n  local lst1_odd=0\n  local lst2_even=0\n\
    \  for i in $lst1; do\n    if [[ $((i % 2)) -ne 0 ]]; then\n      lst1_odd=$((lst1_odd\
    \ + 1))\n    fi\n  done\n  for i in $lst2; do\n    if [[ $((i % 2)) -eq 0 ]];\
    \ then\n      lst2_even=$((lst2_even + 1))\n    fi\n  done\n  if [[ $lst1_odd\
    \ -le $lst2_even ]]; then\n    echo \"YES\"\n  else\n    echo \"NO\"\n  fi\n}\n\
    \ncandidate() {\n    exchange \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate\
    \ \"1 2 3 4\" \"1 2 3 4\") = \"YES\" ]]\n    [[ $(candidate \"1 2 3 4\" \"1 5\
    \ 3 4\") = \"NO\" ]]\n    [[ $(candidate \"1 2 3 4\" \"2 1 4 3\") = \"YES\" ]]\n\
    \    [[ $(candidate \"5 7 3\" \"2 6 4\") = \"YES\" ]]\n    [[ $(candidate \"5\
    \ 7 3\" \"2 6 3\") = \"NO\" ]]\n    [[ $(candidate \"3 2 6 1 8 9\" \"3 5 5 1 1\
    \ 1\") = \"NO\" ]]\n    [[ $(candidate \"100 200\" \"200 200\") = \"YES\" ]]\n\
    }\n\nrun_test"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660002370
- exit_code: 1
  program: "#!/bin/bash\n# In this problem, you will implement a function that takes\
    \ two lists of numbers,\n# and determines whether it is possible to perform an\
    \ exchange of elements\n# between them to make lst1 a list of only even numbers.\n\
    # There is no limit on the number of exchanged elements between lst1 and lst2.\n\
    # If it is possible to exchange elements between the lst1 and lst2 to make\n#\
    \ all the elements of lst1 to be even, return \"YES\".\n# Otherwise, return \"\
    NO\".\n# For example:\n# It is assumed that the input lists will be non-empty.\n\
    #\n# $1 is a space-separated list\n# $2 is a space-separated list\nexchange()\
    \ {\n  local lst1=\"$1\"\n  local lst2=\"$2\"\n  local lst1_even=0\n  local lst2_even=0\n\
    \  local lst1_odd=0\n  local lst2_odd=0\n  local lst1_len=0\n  local lst2_len=0\n\
    \  local i=0\n  local j=0\n  local lst1_arr=()\n  local lst2_arr=()\n  local lst1_even_arr=()\n\
    \  local lst2_even_arr=()\n  local lst1_odd_arr=()\n  local lst2_odd_arr=()\n\
    \  local lst1_even_len=0\n  local lst2_even_len=0\n  local lst1_odd_len=0\n  local\
    \ lst2_odd_len=0\n  local lst1_even_odd_diff=0\n  local lst2_even_odd_diff=0\n\
    \  local lst1_even_odd_diff_abs=0\n  local lst2_even_odd_diff_abs=0\n  local lst1_even_odd_diff_abs_sum=0\n\
    \  local lst2_even_odd_diff_abs_sum=0\n  local lst1_even_odd_diff_abs_sum_abs=0\n\
    \  local lst2_even_odd_diff_abs_sum_abs=0\n  local lst1_even_odd_diff_abs_sum_abs_diff=0\n\
    \  local lst2_even_odd_diff_abs_sum_abs_diff=0\n  local lst1_even_odd_diff_abs_sum_abs_diff_abs=0\n\
    \  local lst2_even_odd_diff_abs_sum_abs_diff_abs=0\n  local lst1_even_odd_diff_abs_sum_abs_diff_abs_diff=0\n\
    \  local lst2_even_odd_diff_abs_sum_abs_diff_abs_diff=0\n  local lst1_even_odd_diff_abs_sum_abs_diff_abs_diff\n\
    }\n\ncandidate() {\n    exchange \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate\
    \ \"1 2 3 4\" \"1 2 3 4\") = \"YES\" ]]\n    [[ $(candidate \"1 2 3 4\" \"1 5\
    \ 3 4\") = \"NO\" ]]\n    [[ $(candidate \"1 2 3 4\" \"2 1 4 3\") = \"YES\" ]]\n\
    \    [[ $(candidate \"5 7 3\" \"2 6 4\") = \"YES\" ]]\n    [[ $(candidate \"5\
    \ 7 3\" \"2 6 3\") = \"NO\" ]]\n    [[ $(candidate \"3 2 6 1 8 9\" \"3 5 5 1 1\
    \ 1\") = \"NO\" ]]\n    [[ $(candidate \"100 200\" \"200 200\") = \"YES\" ]]\n\
    }\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660002370
- exit_code: 1
  program: "#!/bin/bash\n# In this problem, you will implement a function that takes\
    \ two lists of numbers,\n# and determines whether it is possible to perform an\
    \ exchange of elements\n# between them to make lst1 a list of only even numbers.\n\
    # There is no limit on the number of exchanged elements between lst1 and lst2.\n\
    # If it is possible to exchange elements between the lst1 and lst2 to make\n#\
    \ all the elements of lst1 to be even, return \"YES\".\n# Otherwise, return \"\
    NO\".\n# For example:\n# It is assumed that the input lists will be non-empty.\n\
    #\n# $1 is a space-separated list\n# $2 is a space-separated list\nexchange()\
    \ {\n  local lst1=$1\n  local lst2=$2\n  local lst1_even=0\n  local lst2_even=0\n\
    \  local lst1_odd=0\n  local lst2_odd=0\n  local lst1_len=0\n  local lst2_len=0\n\
    \  local i=0\n  local j=0\n  local k=0\n  local l=0\n  local m=0\n  local n=0\n\
    \  local o=0\n  local p=0\n  local q=0\n  local r=0\n  local s=0\n  local t=0\n\
    \  local u=0\n  local v=0\n  local w=0\n  local x=0\n  local y=0\n  local z=0\n\
    \  local aa=0\n  local bb=0\n  local cc=0\n  local dd=0\n  local ee=0\n  local\
    \ ff=0\n  local gg=0\n  local hh=0\n  local ii=0\n  local jj=0\n  local kk=0\n\
    \  local ll=0\n  local mm=0\n  local nn=0\n  local oo=0\n  local pp=0\n  local\
    \ qq=0\n  local rr=0\n  local ss=0\n  local tt=0\n  local uu=0\n  local vv=0\n\
    \  local ww=0\n  local xx=0\n  local yy=0\n  local zz=0\n  local aaa=0\n  local\
    \ bbb=0\n  local ccc=0\n  local ddd=0\n  local eee=0\n  local fff=0\n  local ggg=0\n\
    \  local hhh=0\n  local iii=0\n  local jjj=0\n  local kkk=0\n  local lll=0\n \
    \ local mmm=0\n  local nnn=0\n  local ooo=0\n  local ppp=0\n  local qqq=0\n  local\
    \ rrr=0\n  local sss=0\n  local ttt=0\n  local uuu=0\n  local vvv=0\n \n}\n\n\
    candidate() {\n    exchange \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate\
    \ \"1 2 3 4\" \"1 2 3 4\") = \"YES\" ]]\n    [[ $(candidate \"1 2 3 4\" \"1 5\
    \ 3 4\") = \"NO\" ]]\n    [[ $(candidate \"1 2 3 4\" \"2 1 4 3\") = \"YES\" ]]\n\
    \    [[ $(candidate \"5 7 3\" \"2 6 4\") = \"YES\" ]]\n    [[ $(candidate \"5\
    \ 7 3\" \"2 6 3\") = \"NO\" ]]\n    [[ $(candidate \"3 2 6 1 8 9\" \"3 5 5 1 1\
    \ 1\") = \"NO\" ]]\n    [[ $(candidate \"100 200\" \"200 200\") = \"YES\" ]]\n\
    }\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660002370
- exit_code: 1
  program: "#!/bin/bash\n# In this problem, you will implement a function that takes\
    \ two lists of numbers,\n# and determines whether it is possible to perform an\
    \ exchange of elements\n# between them to make lst1 a list of only even numbers.\n\
    # There is no limit on the number of exchanged elements between lst1 and lst2.\n\
    # If it is possible to exchange elements between the lst1 and lst2 to make\n#\
    \ all the elements of lst1 to be even, return \"YES\".\n# Otherwise, return \"\
    NO\".\n# For example:\n# It is assumed that the input lists will be non-empty.\n\
    #\n# $1 is a space-separated list\n# $2 is a space-separated list\nexchange()\
    \ {\n  local lst1=\"$1\"\n  local lst2=\"$2\"\n  local lst1_even=0\n  local lst2_even=0\n\
    \  local lst1_odd=0\n  local lst2_odd=0\n  for i in $lst1; do\n    if [ $((i %\
    \ 2)) -eq 0 ]; then\n      lst1_even=$((lst1_even + 1))\n    else\n      lst1_odd=$((lst1_odd\
    \ + 1))\n    fi\n  done\n  for i in $lst2; do\n    if [ $((i % 2)) -eq 0 ]; then\n\
    \      lst2_even=$((lst2_even + 1))\n    else\n      lst2_odd=$((lst2_odd + 1))\n\
    \    fi\n  done\n  if [ $lst1_even -eq 0 ]; then\n    echo \"NO\"\n  elif [ $lst2_odd\
    \ -eq 0 ]; then\n    echo \"NO\"\n  elif [ $lst1_even -eq $lst2_odd ]; then\n\
    \    echo \"YES\"\n  elif [ $lst1_even -gt $lst2_odd ]; then\n    echo \"YES\"\
    \n  elif [ $lst1_even -lt $lst2_odd ]; then\n    echo \"YES\"\n  fi\n}\n\ncandidate()\
    \ {\n    exchange \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"1 2\
    \ 3 4\" \"1 2 3 4\") = \"YES\" ]]\n    [[ $(candidate \"1 2 3 4\" \"1 5 3 4\"\
    ) = \"NO\" ]]\n    [[ $(candidate \"1 2 3 4\" \"2 1 4 3\") = \"YES\" ]]\n    [[\
    \ $(candidate \"5 7 3\" \"2 6 4\") = \"YES\" ]]\n    [[ $(candidate \"5 7 3\"\
    \ \"2 6 3\") = \"NO\" ]]\n    [[ $(candidate \"3 2 6 1 8 9\" \"3 5 5 1 1 1\")\
    \ = \"NO\" ]]\n    [[ $(candidate \"100 200\" \"200 200\") = \"YES\" ]]\n}\n\n\
    run_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660002369
- exit_code: 1
  program: "#!/bin/bash\n# In this problem, you will implement a function that takes\
    \ two lists of numbers,\n# and determines whether it is possible to perform an\
    \ exchange of elements\n# between them to make lst1 a list of only even numbers.\n\
    # There is no limit on the number of exchanged elements between lst1 and lst2.\n\
    # If it is possible to exchange elements between the lst1 and lst2 to make\n#\
    \ all the elements of lst1 to be even, return \"YES\".\n# Otherwise, return \"\
    NO\".\n# For example:\n# It is assumed that the input lists will be non-empty.\n\
    #\n# $1 is a space-separated list\n# $2 is a space-separated list\nexchange()\
    \ {\n    local lst1=$1\n    local lst2=$2\n    local lst1_even=0\n    local lst2_even=0\n\
    \    local lst1_odd=0\n    local lst2_odd=0\n    local lst1_all=0\n    local lst2_all=0\n\
    \    local lst1_all_even=0\n    local lst2_all_even=0\n    local lst1_all_odd=0\n\
    \    local lst2_all_odd=0\n    local lst1_all_even_odd=0\n    local lst2_all_even_odd=0\n\
    \    local lst1_all_odd_even=0\n    local lst2_all_odd_even=0\n    local lst1_all_odd_odd=0\n\
    \    local lst2_all_odd_odd=0\n    local lst1_all_even_even=0\n    local lst2_all_even_even=0\n\
    \    local lst1_all_even_odd_even=0\n    local lst2_all_even_odd_even=0\n    local\
    \ lst1_all_even_odd_odd=0\n    local lst2_all_even_odd_odd=0\n    local lst1_all_odd_even_even=0\n\
    \    local lst2_all_odd_even_even=0\n    local lst1_all_odd_even_odd=0\n    local\
    \ lst2_all_odd_even_odd=0\n    local lst1_all_odd_odd_even=0\n    local lst2_all_odd_odd_even=0\n\
    \    local lst1_all_odd_odd_odd=0\n    local lst2_all_odd_odd_odd=0\n    local\
    \ lst1_all_even_even_even=0\n    local lst2_all_even_even_even=0\n    local lst1_all_even_even_odd=0\n\
    \    local lst2_all_even_even_odd=0\n    local lst1_all_even_odd_even_even=0\n\
    \   \n}\n\ncandidate() {\n    exchange \"$@\"\n}\n\nset -e\nrun_test() {\n   \
    \ [[ $(candidate \"1 2 3 4\" \"1 2 3 4\") = \"YES\" ]]\n    [[ $(candidate \"\
    1 2 3 4\" \"1 5 3 4\") = \"NO\" ]]\n    [[ $(candidate \"1 2 3 4\" \"2 1 4 3\"\
    ) = \"YES\" ]]\n    [[ $(candidate \"5 7 3\" \"2 6 4\") = \"YES\" ]]\n    [[ $(candidate\
    \ \"5 7 3\" \"2 6 3\") = \"NO\" ]]\n    [[ $(candidate \"3 2 6 1 8 9\" \"3 5 5\
    \ 1 1 1\") = \"NO\" ]]\n    [[ $(candidate \"100 200\" \"200 200\") = \"YES\"\
    \ ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660002370
- exit_code: 1
  program: "#!/bin/bash\n# In this problem, you will implement a function that takes\
    \ two lists of numbers,\n# and determines whether it is possible to perform an\
    \ exchange of elements\n# between them to make lst1 a list of only even numbers.\n\
    # There is no limit on the number of exchanged elements between lst1 and lst2.\n\
    # If it is possible to exchange elements between the lst1 and lst2 to make\n#\
    \ all the elements of lst1 to be even, return \"YES\".\n# Otherwise, return \"\
    NO\".\n# For example:\n# It is assumed that the input lists will be non-empty.\n\
    #\n# $1 is a space-separated list\n# $2 is a space-separated list\nexchange()\
    \ {\n  local -a lst1=($1)\n  local -a lst2=($2)\n  local -a evens=()\n  local\
    \ -a odds=()\n  local -a evens_in_lst2=()\n  local -a odds_in_lst1=()\n  local\
    \ -a odds_in_lst2=()\n  local -a evens_in_lst1=()\n  local -a odds_in_lst2_and_evens_in_lst1=()\n\
    \  local -a odds_in_lst1_and_evens_in_lst2=()\n  local -a odds_in_lst2_and_evens_in_lst1_and_odds_in_lst1_and_evens_in_lst2=()\n\
    \  local -a odds_in_lst1_and_evens_in_lst2_and_odds_in_lst2_and_evens_in_lst1=()\n\
    \  local -a odds_in_lst1_and_evens_in_lst2_and_odds_in_lst2_and_evens_in_lst1_and_odds_in_lst2_and_evens_in_lst1=()\n\
    \  local -a odds_in_lst1_and_evens_in_lst2_and_odds_in_lst2_and_evens_in_lst1_and_odds_in_lst1_and_evens_in_lst2=()\n\
    \  local -a odds_in_lst1_and_evens_in_lst2_and_odds_in_lst2_and_evens_in_lst1_and_odds_in_lst1_and_evens_in_lst2_and_odds_in_lst2_and_evens_in_lst1=()\n\
    \  local -a odds_in_lst1_and_evens_in_lst2_and_odds_in_lst2_and_evens_\n}\n\n\
    candidate() {\n    exchange \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate\
    \ \"1 2 3 4\" \"1 2 3 4\") = \"YES\" ]]\n    [[ $(candidate \"1 2 3 4\" \"1 5\
    \ 3 4\") = \"NO\" ]]\n    [[ $(candidate \"1 2 3 4\" \"2 1 4 3\") = \"YES\" ]]\n\
    \    [[ $(candidate \"5 7 3\" \"2 6 4\") = \"YES\" ]]\n    [[ $(candidate \"5\
    \ 7 3\" \"2 6 3\") = \"NO\" ]]\n    [[ $(candidate \"3 2 6 1 8 9\" \"3 5 5 1 1\
    \ 1\") = \"NO\" ]]\n    [[ $(candidate \"100 200\" \"200 200\") = \"YES\" ]]\n\
    }\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660002370
- exit_code: 1
  program: "#!/bin/bash\n# In this problem, you will implement a function that takes\
    \ two lists of numbers,\n# and determines whether it is possible to perform an\
    \ exchange of elements\n# between them to make lst1 a list of only even numbers.\n\
    # There is no limit on the number of exchanged elements between lst1 and lst2.\n\
    # If it is possible to exchange elements between the lst1 and lst2 to make\n#\
    \ all the elements of lst1 to be even, return \"YES\".\n# Otherwise, return \"\
    NO\".\n# For example:\n# It is assumed that the input lists will be non-empty.\n\
    #\n# $1 is a space-separated list\n# $2 is a space-separated list\nexchange()\
    \ {\n    local -a lst1=($1)\n    local -a lst2=($2)\n    local -a evens=()\n \
    \   local -a odds=()\n    local -a result=()\n    local i=0\n    local j=0\n \
    \   local k=0\n    local n=0\n    local m=0\n    local l=0\n    local -i even_count=0\n\
    \    local -i odd_count=0\n    local -i lst1_count=0\n    local -i lst2_count=0\n\
    \    local -i lst1_even_count=0\n    local -i lst2_even_count=0\n    local -i\
    \ lst1_odd_count=0\n    local -i lst2_odd_count=0\n    local -i lst1_even_odd_count=0\n\
    \    local -i lst2_even_odd_count=0\n    local -i lst1_odd_even_count=0\n    local\
    \ -i lst2_odd_even_count=0\n    local -i lst1_even_even_count=0\n    local -i\
    \ lst2_even_even_count=0\n    local -i lst1_odd_odd_count=0\n    local -i lst2_odd_odd_count=0\n\
    \    local -i lst1_even_odd_even_count=0\n    local -i lst2_even_odd_even_count=0\n\
    \    local -i lst1_odd_even_odd_count=0\n    local -i lst2_odd_even_odd_count=0\n\
    \    local -i lst1_even_even_even_count=0\n    local -i lst2_even_even_even_count=0\n\
    \    local -i lst1_odd_odd_odd_count=0\n    local -i lst2_odd_odd_odd_count=0\n\
    \    local -i lst1_even_odd_odd_count=0\n    local -i lst2_even_odd_odd_count=0\n\
    \    local -i lst1_odd_even_even_count=0\n\n}\n\ncandidate() {\n    exchange \"\
    $@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"1 2 3 4\" \"1 2 3 4\") =\
    \ \"YES\" ]]\n    [[ $(candidate \"1 2 3 4\" \"1 5 3 4\") = \"NO\" ]]\n    [[\
    \ $(candidate \"1 2 3 4\" \"2 1 4 3\") = \"YES\" ]]\n    [[ $(candidate \"5 7\
    \ 3\" \"2 6 4\") = \"YES\" ]]\n    [[ $(candidate \"5 7 3\" \"2 6 3\") = \"NO\"\
    \ ]]\n    [[ $(candidate \"3 2 6 1 8 9\" \"3 5 5 1 1 1\") = \"NO\" ]]\n    [[\
    \ $(candidate \"100 200\" \"200 200\") = \"YES\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660002370
- exit_code: 1
  program: "#!/bin/bash\n# In this problem, you will implement a function that takes\
    \ two lists of numbers,\n# and determines whether it is possible to perform an\
    \ exchange of elements\n# between them to make lst1 a list of only even numbers.\n\
    # There is no limit on the number of exchanged elements between lst1 and lst2.\n\
    # If it is possible to exchange elements between the lst1 and lst2 to make\n#\
    \ all the elements of lst1 to be even, return \"YES\".\n# Otherwise, return \"\
    NO\".\n# For example:\n# It is assumed that the input lists will be non-empty.\n\
    #\n# $1 is a space-separated list\n# $2 is a space-separated list\nexchange()\
    \ {\n  local lst1=\"$1\"\n  local lst2=\"$2\"\n  local lst1_even=0\n  local lst2_even=0\n\
    \  local lst1_odd=0\n  local lst2_odd=0\n  for i in $lst1; do\n    if (( i % 2\
    \ == 0 )); then\n      (( lst1_even++ ))\n    else\n      (( lst1_odd++ ))\n \
    \   fi\n  done\n  for i in $lst2; do\n    if (( i % 2 == 0 )); then\n      ((\
    \ lst2_even++ ))\n    else\n      (( lst2_odd++ ))\n    fi\n  done\n  if (( lst1_even\
    \ == 0 )); then\n    echo \"NO\"\n  elif (( lst1_odd == 0 )); then\n    echo \"\
    YES\"\n  elif (( lst2_even == 0 )); then\n    echo \"NO\"\n  elif (( lst2_odd\
    \ == 0 )); then\n    echo \"YES\"\n  elif (( lst1_even >= lst2_odd )); then\n\
    \    echo \"YES\"\n  elif (( lst2_even >= lst1_odd )); then\n    echo \"YES\"\n\
    \  else\n    echo \"NO\"\n  fi\n}\n\ncandidate() {\n    exchange \"$@\"\n}\n\n\
    set -e\nrun_test() {\n    [[ $(candidate \"1 2 3 4\" \"1 2 3 4\") = \"YES\" ]]\n\
    \    [[ $(candidate \"1 2 3 4\" \"1 5 3 4\") = \"NO\" ]]\n    [[ $(candidate \"\
    1 2 3 4\" \"2 1 4 3\") = \"YES\" ]]\n    [[ $(candidate \"5 7 3\" \"2 6 4\") =\
    \ \"YES\" ]]\n    [[ $(candidate \"5 7 3\" \"2 6 3\") = \"NO\" ]]\n    [[ $(candidate\
    \ \"3 2 6 1 8 9\" \"3 5 5 1 1 1\") = \"NO\" ]]\n    [[ $(candidate \"100 200\"\
    \ \"200 200\") = \"YES\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660002370
- exit_code: 2
  program: "#!/bin/bash\n# In this problem, you will implement a function that takes\
    \ two lists of numbers,\n# and determines whether it is possible to perform an\
    \ exchange of elements\n# between them to make lst1 a list of only even numbers.\n\
    # There is no limit on the number of exchanged elements between lst1 and lst2.\n\
    # If it is possible to exchange elements between the lst1 and lst2 to make\n#\
    \ all the elements of lst1 to be even, return \"YES\".\n# Otherwise, return \"\
    NO\".\n# For example:\n# It is assumed that the input lists will be non-empty.\n\
    #\n# $1 is a space-separated list\n# $2 is a space-separated list\nexchange()\
    \ {\n    local lst1=($1)\n    local lst2=($2)\n    local evens=()\n    local odds=()\n\
    \    local i=0\n    local j=0\n    local k=0\n    local l=0\n    local m=0\n \
    \   local n=0\n    local o=0\n    local p=0\n    local q=0\n    local r=0\n  \
    \  local s=0\n    local t=0\n    local u=0\n    local v=0\n    local w=0\n   \
    \ local x=0\n    local y=0\n    local z=0\n    for i in ${lst1[@]}; do\n     \
    \   if [ $((i % 2)) -eq 0 ]; then\n            evens[$j]=$i\n            ((j++))\n\
    \        else\n            odds[$k]=$i\n            ((k++))\n        fi\n    done\n\
    \    for l in ${lst2[@]}; do\n        if [ $((l % 2)) -eq 0 ]; then\n        \
    \    evens[$m]=$l\n            ((m++))\n        else\n            odds[$n]=$l\n\
    \            ((n++))\n        fi\n    done\n    for o in ${evens[@]}; do\n   \
    \     if [ $((o % 2)) -ne 0 ]; then\n            return 1\n        fi\n    done\n\
    \    for p in ${odds[@]}; do\n        if [ $((p % 2)) -eq 0 ]; then\n        \
    \    return 1\n        fi\n    done\n    for q in ${lst1[@]}; do\n        for\
    \ r in ${evens[@]}; do\n            if [ $q -eq $r ]; then\n                for\
    \ s in ${lst2[@]}; do\n                    for t in ${evens[@]}; do\n        \
    \                if [ $s -eq $t ]; then\n                            return 1\n\
    \                        fi\n                    done\n                done\n\
    \            fi\n        done\n    done\n    for u in ${lst2[@]}; do\n       \
    \ for v in ${evens[@]}; do\n            if [ $u -eq $v ]; then\n             \
    \   for w in ${lst1[@]}; do\n                    for\n}\n\ncandidate() {\n   \
    \ exchange \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"1 2 3 4\" \"\
    1 2 3 4\") = \"YES\" ]]\n    [[ $(candidate \"1 2 3 4\" \"1 5 3 4\") = \"NO\"\
    \ ]]\n    [[ $(candidate \"1 2 3 4\" \"2 1 4 3\") = \"YES\" ]]\n    [[ $(candidate\
    \ \"5 7 3\" \"2 6 4\") = \"YES\" ]]\n    [[ $(candidate \"5 7 3\" \"2 6 3\") =\
    \ \"NO\" ]]\n    [[ $(candidate \"3 2 6 1 8 9\" \"3 5 5 1 1 1\") = \"NO\" ]]\n\
    \    [[ $(candidate \"100 200\" \"200 200\") = \"YES\" ]]\n}\n\nrun_test"
  status: SyntaxError
  stderr: '/tmp/tmp8kef62b0.sh: line 82: syntax error near unexpected token `newline''

    /tmp/tmp8kef62b0.sh: line 82: `                    for''

    '
  stdout: ''
  timestamp: 1660002370
- exit_code: 1
  program: "#!/bin/bash\n# In this problem, you will implement a function that takes\
    \ two lists of numbers,\n# and determines whether it is possible to perform an\
    \ exchange of elements\n# between them to make lst1 a list of only even numbers.\n\
    # There is no limit on the number of exchanged elements between lst1 and lst2.\n\
    # If it is possible to exchange elements between the lst1 and lst2 to make\n#\
    \ all the elements of lst1 to be even, return \"YES\".\n# Otherwise, return \"\
    NO\".\n# For example:\n# It is assumed that the input lists will be non-empty.\n\
    #\n# $1 is a space-separated list\n# $2 is a space-separated list\nexchange()\
    \ {\n  local lst1=($1)\n  local lst2=($2)\n  local lst1_odd=()\n  local lst2_even=()\n\
    \  local lst1_even=()\n  local lst2_odd=()\n  local i=0\n  local j=0\n  local\
    \ k=0\n  local l=0\n  local m=0\n  local n=0\n  local o=0\n  local p=0\n  local\
    \ q=0\n  local r=0\n  local s=0\n  local t=0\n  local u=0\n  local v=0\n  local\
    \ w=0\n  local x=0\n  local y=0\n  local z=0\n  local aa=0\n  local bb=0\n  local\
    \ cc=0\n  local dd=0\n  local ee=0\n  local ff=0\n  local gg=0\n  local hh=0\n\
    \  local ii=0\n  local jj=0\n  local kk=0\n  local ll=0\n  local mm=0\n  local\
    \ nn=0\n  local oo=0\n  local pp=0\n  local qq=0\n  local rr=0\n  local ss=0\n\
    \  local tt=0\n  local uu=0\n  local vv=0\n  local ww=0\n  local xx=0\n  local\
    \ yy=0\n  local zz=0\n  local aaa=0\n  local bbb=0\n  local ccc=0\n  local ddd=0\n\
    \  local eee=0\n  local fff=0\n  local ggg=0\n  local hhh=0\n  local iii=0\n \
    \ local jjj=0\n  local kkk=0\n  local lll=0\n  local mmm=0\n  local nnn=0\n  local\
    \ ooo=0\n  local ppp=0\n  local qqq=0\n  local rrr=0\n  local sss=0\n  local ttt=0\n\
    \  local uuu=0\n  local vvv=0\n  local www=0\n  local xxx=0\n  local yyy\n}\n\n\
    candidate() {\n    exchange \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate\
    \ \"1 2 3 4\" \"1 2 3 4\") = \"YES\" ]]\n    [[ $(candidate \"1 2 3 4\" \"1 5\
    \ 3 4\") = \"NO\" ]]\n    [[ $(candidate \"1 2 3 4\" \"2 1 4 3\") = \"YES\" ]]\n\
    \    [[ $(candidate \"5 7 3\" \"2 6 4\") = \"YES\" ]]\n    [[ $(candidate \"5\
    \ 7 3\" \"2 6 3\") = \"NO\" ]]\n    [[ $(candidate \"3 2 6 1 8 9\" \"3 5 5 1 1\
    \ 1\") = \"NO\" ]]\n    [[ $(candidate \"100 200\" \"200 200\") = \"YES\" ]]\n\
    }\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660002370
- exit_code: 1
  program: "#!/bin/bash\n# In this problem, you will implement a function that takes\
    \ two lists of numbers,\n# and determines whether it is possible to perform an\
    \ exchange of elements\n# between them to make lst1 a list of only even numbers.\n\
    # There is no limit on the number of exchanged elements between lst1 and lst2.\n\
    # If it is possible to exchange elements between the lst1 and lst2 to make\n#\
    \ all the elements of lst1 to be even, return \"YES\".\n# Otherwise, return \"\
    NO\".\n# For example:\n# It is assumed that the input lists will be non-empty.\n\
    #\n# $1 is a space-separated list\n# $2 is a space-separated list\nexchange()\
    \ {\n  local lst1=($1)\n  local lst2=($2)\n  local lst1_odd=()\n  local lst2_even=()\n\
    \  local lst1_even=()\n  local lst2_odd=()\n  local lst1_even_count=0\n  local\
    \ lst2_even_count=0\n  local lst1_odd_count=0\n  local lst2_odd_count=0\n  local\
    \ lst1_even_odd_diff=0\n  local lst2_even_odd_diff=0\n  local lst1_even_odd_diff_abs=0\n\
    \  local lst2_even_odd_diff_abs=0\n  local lst1_even_odd_diff_abs_sum=0\n  local\
    \ lst2_even_odd_diff_abs_sum=0\n  local lst1_even_odd_diff_abs_sum_diff=0\n  local\
    \ lst2_even_odd_diff_abs_sum_diff=0\n  local lst1_even_odd_diff_abs_sum_diff_abs=0\n\
    \  local lst2_even_odd_diff_abs_sum_diff_abs=0\n  local lst1_even_odd_diff_abs_sum_diff_abs_sum=0\n\
    \  local lst2_even_odd_diff_abs_sum_diff_abs_sum=0\n  local lst1_even_odd_diff_abs_sum_diff_abs_sum_diff=0\n\
    \  local lst2_even_odd_diff_abs_sum_diff_abs_sum_diff=0\n  local lst1_even_odd_diff_abs_sum_diff_abs_sum_diff_abs=0\n\
    \  local lst2_even_odd_diff_abs_sum_diff_abs_sum_diff_abs=0\n  local lst1_even_odd_diff_abs_sum_diff_abs_sum_diff_abs_sum=0\n\
    \  local lst2_even_odd_diff_abs_sum_diff_abs_sum_diff_abs_sum=0\n  local lst1_even\n\
    }\n\ncandidate() {\n    exchange \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate\
    \ \"1 2 3 4\" \"1 2 3 4\") = \"YES\" ]]\n    [[ $(candidate \"1 2 3 4\" \"1 5\
    \ 3 4\") = \"NO\" ]]\n    [[ $(candidate \"1 2 3 4\" \"2 1 4 3\") = \"YES\" ]]\n\
    \    [[ $(candidate \"5 7 3\" \"2 6 4\") = \"YES\" ]]\n    [[ $(candidate \"5\
    \ 7 3\" \"2 6 3\") = \"NO\" ]]\n    [[ $(candidate \"3 2 6 1 8 9\" \"3 5 5 1 1\
    \ 1\") = \"NO\" ]]\n    [[ $(candidate \"100 200\" \"200 200\") = \"YES\" ]]\n\
    }\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660002369
- exit_code: 1
  program: "#!/bin/bash\n# In this problem, you will implement a function that takes\
    \ two lists of numbers,\n# and determines whether it is possible to perform an\
    \ exchange of elements\n# between them to make lst1 a list of only even numbers.\n\
    # There is no limit on the number of exchanged elements between lst1 and lst2.\n\
    # If it is possible to exchange elements between the lst1 and lst2 to make\n#\
    \ all the elements of lst1 to be even, return \"YES\".\n# Otherwise, return \"\
    NO\".\n# For example:\n# It is assumed that the input lists will be non-empty.\n\
    #\n# $1 is a space-separated list\n# $2 is a space-separated list\nexchange()\
    \ {\n  local lst1=($1)\n  local lst2=($2)\n  local lst1_odd=()\n  local lst2_even=()\n\
    \  local lst1_even=()\n  local lst2_odd=()\n  local i=0\n  local j=0\n  local\
    \ k=0\n  local l=0\n  local m=0\n  local n=0\n  local o=0\n  local p=0\n  local\
    \ q=0\n  local r=0\n  local s=0\n  local t=0\n  local u=0\n  local v=0\n  local\
    \ w=0\n  local x=0\n  local y=0\n  local z=0\n  local aa=0\n  local bb=0\n  local\
    \ cc=0\n  local dd=0\n  local ee=0\n  local ff=0\n  local gg=0\n  local hh=0\n\
    \  local ii=0\n  local jj=0\n  local kk=0\n  local ll=0\n  local mm=0\n  local\
    \ nn=0\n  local oo=0\n  local pp=0\n  local qq=0\n  local rr=0\n  local ss=0\n\
    \  local tt=0\n  local uu=0\n  local vv=0\n  local ww=0\n  local xx=0\n  local\
    \ yy=0\n  local zz=0\n  local aaa=0\n  local bbb=0\n  local ccc=0\n  local ddd=0\n\
    \  local eee=0\n  local fff=0\n  local ggg=0\n  local hhh=0\n  local iii=0\n \
    \ local jjj=0\n  local kkk=0\n  local lll=0\n  local mmm=0\n  local nnn=0\n  local\
    \ ooo=0\n  local ppp=0\n  local qqq=0\n  local rrr=0\n  local sss=0\n  local ttt=0\n\
    \  local uuu=0\n  local vvv=0\n  local www=0\n  local xxx=0\n  local yyy\n}\n\n\
    candidate() {\n    exchange \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate\
    \ \"1 2 3 4\" \"1 2 3 4\") = \"YES\" ]]\n    [[ $(candidate \"1 2 3 4\" \"1 5\
    \ 3 4\") = \"NO\" ]]\n    [[ $(candidate \"1 2 3 4\" \"2 1 4 3\") = \"YES\" ]]\n\
    \    [[ $(candidate \"5 7 3\" \"2 6 4\") = \"YES\" ]]\n    [[ $(candidate \"5\
    \ 7 3\" \"2 6 3\") = \"NO\" ]]\n    [[ $(candidate \"3 2 6 1 8 9\" \"3 5 5 1 1\
    \ 1\") = \"NO\" ]]\n    [[ $(candidate \"100 200\" \"200 200\") = \"YES\" ]]\n\
    }\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660002370
- exit_code: 1
  program: "#!/bin/bash\n# In this problem, you will implement a function that takes\
    \ two lists of numbers,\n# and determines whether it is possible to perform an\
    \ exchange of elements\n# between them to make lst1 a list of only even numbers.\n\
    # There is no limit on the number of exchanged elements between lst1 and lst2.\n\
    # If it is possible to exchange elements between the lst1 and lst2 to make\n#\
    \ all the elements of lst1 to be even, return \"YES\".\n# Otherwise, return \"\
    NO\".\n# For example:\n# It is assumed that the input lists will be non-empty.\n\
    #\n# $1 is a space-separated list\n# $2 is a space-separated list\nexchange()\
    \ {\n  local lst1=($1)\n  local lst2=($2)\n  local lst1_even=()\n  local lst1_odd=()\n\
    \  local lst2_even=()\n  local lst2_odd=()\n  local lst1_even_count=0\n  local\
    \ lst1_odd_count=0\n  local lst2_even_count=0\n  local lst2_odd_count=0\n  local\
    \ i=0\n  local j=0\n  local k=0\n  local l=0\n  local m=0\n  local n=0\n  local\
    \ o=0\n  local p=0\n  local q=0\n  local r=0\n  local s=0\n  local t=0\n  local\
    \ u=0\n  local v=0\n  local w=0\n  local x=0\n  local y=0\n  local z=0\n  local\
    \ aa=0\n  local bb=0\n  local cc=0\n  local dd=0\n  local ee=0\n  local ff=0\n\
    \  local gg=0\n  local hh=0\n  local ii=0\n  local jj=0\n  local kk=0\n  local\
    \ ll=0\n  local mm=0\n  local nn=0\n  local oo=0\n  local pp=0\n  local qq=0\n\
    \  local rr=0\n  local ss=0\n  local tt=0\n  local uu=0\n  local vv=0\n  local\
    \ ww=0\n  local xx=0\n  local yy=0\n  local zz=0\n  local aaa=0\n  local bbb=0\n\
    \  local ccc=0\n  local ddd=0\n  local eee=0\n  local fff=0\n  local ggg=0\n \
    \ local hhh=0\n  local iii=0\n  local jjj=0\n  local kkk=0\n  local lll=0\n  local\
    \ mmm=0\n  local nnn=0\n  local ooo=0\n  local ppp=0\n  local qqq=0\n  local rrr\n\
    }\n\ncandidate() {\n    exchange \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate\
    \ \"1 2 3 4\" \"1 2 3 4\") = \"YES\" ]]\n    [[ $(candidate \"1 2 3 4\" \"1 5\
    \ 3 4\") = \"NO\" ]]\n    [[ $(candidate \"1 2 3 4\" \"2 1 4 3\") = \"YES\" ]]\n\
    \    [[ $(candidate \"5 7 3\" \"2 6 4\") = \"YES\" ]]\n    [[ $(candidate \"5\
    \ 7 3\" \"2 6 3\") = \"NO\" ]]\n    [[ $(candidate \"3 2 6 1 8 9\" \"3 5 5 1 1\
    \ 1\") = \"NO\" ]]\n    [[ $(candidate \"100 200\" \"200 200\") = \"YES\" ]]\n\
    }\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660002369
- exit_code: 2
  program: "#!/bin/bash\n# In this problem, you will implement a function that takes\
    \ two lists of numbers,\n# and determines whether it is possible to perform an\
    \ exchange of elements\n# between them to make lst1 a list of only even numbers.\n\
    # There is no limit on the number of exchanged elements between lst1 and lst2.\n\
    # If it is possible to exchange elements between the lst1 and lst2 to make\n#\
    \ all the elements of lst1 to be even, return \"YES\".\n# Otherwise, return \"\
    NO\".\n# For example:\n# It is assumed that the input lists will be non-empty.\n\
    #\n# $1 is a space-separated list\n# $2 is a space-separated list\nexchange()\
    \ {\n    # Write your code here\n    #\n    #\n    #\n    #\n    #\n    #\n  \
    \  #\n    #\n    #\n    #\n    #\n    #\n    #\n    #\n    #\n    #\n    #\n \
    \   #\n    #\n    #\n    #\n    #\n    #\n    #\n    #\n    #\n    #\n    #\n\
    \    #\n    #\n    #\n    #\n    #\n    #\n    #\n    #\n    #\n    #\n    #\n\
    \    #\n    #\n    #\n    #\n    #\n    #\n    #\n    #\n    #\n    #\n    #\n\
    \    #\n    #\n    #\n    #\n    #\n    #\n    #\n    #\n    #\n    #\n    #\n\
    \    #\n    #\n    #\n    #\n    #\n    #\n    #\n    #\n    #\n    #\n    #\n\
    \    #\n    #\n    #\n    #\n    #\n    #\n    #\n    #\n    #\n    #\n    #\n\
    \    #\n    #\n    #\n    #\n    #\n    #\n    #\n    #\n    #\n    #\n    #\n\
    \    #\n    #\n    #\n    #\n    #\n    #\n    #\n    #\n    #\n    #\n    #\n\
    \    #\n    #\n    #\n    #\n    #\n    #\n    #\n    #\n    #\n    #\n    #\n\
    \    #\n    #\n    #\n    #\n    #\n    #\n    #\n    #\n    #\n    #\n    #\n\
    \    #\n    #\n    #\n    #\n    #\n    #\n    #\n    #\n    #\n    #\n    #\n\
    \    #\n    #\n    #\n    #\n    #\n    #\n    #\n    #\n    #\n    #\n    #\n\
    \    #\n    #\n    #\n    #\n    #\n    #\n    #\n    #\n    #\n    #\n    #\n\
    \    #\n    #\n    #\n    #\n    #\n    #\n    #\n    #\n\n}\n\ncandidate() {\n\
    \    exchange \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"1 2 3 4\"\
    \ \"1 2 3 4\") = \"YES\" ]]\n    [[ $(candidate \"1 2 3 4\" \"1 5 3 4\") = \"\
    NO\" ]]\n    [[ $(candidate \"1 2 3 4\" \"2 1 4 3\") = \"YES\" ]]\n    [[ $(candidate\
    \ \"5 7 3\" \"2 6 4\") = \"YES\" ]]\n    [[ $(candidate \"5 7 3\" \"2 6 3\") =\
    \ \"NO\" ]]\n    [[ $(candidate \"3 2 6 1 8 9\" \"3 5 5 1 1 1\") = \"NO\" ]]\n\
    \    [[ $(candidate \"100 200\" \"200 200\") = \"YES\" ]]\n}\n\nrun_test"
  status: SyntaxError
  stderr: '/tmp/tmpvy67lhz7.sh: line 185: syntax error near unexpected token `}''

    /tmp/tmpvy67lhz7.sh: line 185: `}''

    '
  stdout: ''
  timestamp: 1660002370
- exit_code: 1
  program: "#!/bin/bash\n# In this problem, you will implement a function that takes\
    \ two lists of numbers,\n# and determines whether it is possible to perform an\
    \ exchange of elements\n# between them to make lst1 a list of only even numbers.\n\
    # There is no limit on the number of exchanged elements between lst1 and lst2.\n\
    # If it is possible to exchange elements between the lst1 and lst2 to make\n#\
    \ all the elements of lst1 to be even, return \"YES\".\n# Otherwise, return \"\
    NO\".\n# For example:\n# It is assumed that the input lists will be non-empty.\n\
    #\n# $1 is a space-separated list\n# $2 is a space-separated list\nexchange()\
    \ {\n  local lst1=\"$1\"\n  local lst2=\"$2\"\n  local lst1_even=0\n  local lst2_even=0\n\
    \  local lst1_odd=0\n  local lst2_odd=0\n  for i in $lst1; do\n    if [ $((i %\
    \ 2)) -eq 0 ]; then\n      ((lst1_even++))\n    else\n      ((lst1_odd++))\n \
    \   fi\n  done\n  for i in $lst2; do\n    if [ $((i % 2)) -eq 0 ]; then\n    \
    \  ((lst2_even++))\n    else\n      ((lst2_odd++))\n    fi\n  done\n  if [ $lst1_even\
    \ -eq 0 ]; then\n    echo \"NO\"\n  elif [ $lst2_odd -eq 0 ]; then\n    echo \"\
    NO\"\n  elif [ $lst1_even -gt $lst2_odd ]; then\n    echo \"NO\"\n  else\n   \
    \ echo \"YES\"\n  fi\n}\n\ncandidate() {\n    exchange \"$@\"\n}\n\nset -e\nrun_test()\
    \ {\n    [[ $(candidate \"1 2 3 4\" \"1 2 3 4\") = \"YES\" ]]\n    [[ $(candidate\
    \ \"1 2 3 4\" \"1 5 3 4\") = \"NO\" ]]\n    [[ $(candidate \"1 2 3 4\" \"2 1 4\
    \ 3\") = \"YES\" ]]\n    [[ $(candidate \"5 7 3\" \"2 6 4\") = \"YES\" ]]\n  \
    \  [[ $(candidate \"5 7 3\" \"2 6 3\") = \"NO\" ]]\n    [[ $(candidate \"3 2 6\
    \ 1 8 9\" \"3 5 5 1 1 1\") = \"NO\" ]]\n    [[ $(candidate \"100 200\" \"200 200\"\
    ) = \"YES\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660002369
- exit_code: 1
  program: "#!/bin/bash\n# In this problem, you will implement a function that takes\
    \ two lists of numbers,\n# and determines whether it is possible to perform an\
    \ exchange of elements\n# between them to make lst1 a list of only even numbers.\n\
    # There is no limit on the number of exchanged elements between lst1 and lst2.\n\
    # If it is possible to exchange elements between the lst1 and lst2 to make\n#\
    \ all the elements of lst1 to be even, return \"YES\".\n# Otherwise, return \"\
    NO\".\n# For example:\n# It is assumed that the input lists will be non-empty.\n\
    #\n# $1 is a space-separated list\n# $2 is a space-separated list\nexchange()\
    \ {\n    local -a lst1=($1)\n    local -a lst2=($2)\n    local -a evens=()\n \
    \   local -a odds=()\n    local -a result=()\n    local -i i=0\n    local -i j=0\n\
    \    local -i k=0\n    local -i l=0\n    local -i m=0\n    local -i n=0\n    local\
    \ -i o=0\n    local -i p=0\n    local -i q=0\n    local -i r=0\n    local -i s=0\n\
    \    local -i t=0\n    local -i u=0\n    local -i v=0\n    local -i w=0\n    local\
    \ -i x=0\n    local -i y=0\n    local -i z=0\n    local -i aa=0\n    local -i\
    \ bb=0\n    local -i cc=0\n    local -i dd=0\n    local -i ee=0\n    local -i\
    \ ff=0\n    local -i gg=0\n    local -i hh=0\n    local -i ii=0\n    local -i\
    \ jj=0\n    local -i kk=0\n    local -i ll=0\n    local -i mm=0\n    local -i\
    \ nn=0\n    local -i oo=0\n    local -i pp=0\n    local -i qq=0\n    local -i\
    \ rr=0\n    local -i ss=0\n    local -i tt=0\n    local -i uu=0\n    local -i\
    \ vv=0\n    local -i ww=0\n    local -i xx=0\n    local -i yy=0\n    local -i\
    \ zz=0\n    local -i aaa=0\n    local -i bbb=0\n    local -i ccc=0\n    local\
    \ -i ddd=0\n    local -i eee=0\n    local -i fff=0\n    local -i ggg=0\n    local\
    \ -i hhh=0\n    local -i iii=0\n    local -i jjj=0\n    local -i\n}\n\ncandidate()\
    \ {\n    exchange \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"1 2\
    \ 3 4\" \"1 2 3 4\") = \"YES\" ]]\n    [[ $(candidate \"1 2 3 4\" \"1 5 3 4\"\
    ) = \"NO\" ]]\n    [[ $(candidate \"1 2 3 4\" \"2 1 4 3\") = \"YES\" ]]\n    [[\
    \ $(candidate \"5 7 3\" \"2 6 4\") = \"YES\" ]]\n    [[ $(candidate \"5 7 3\"\
    \ \"2 6 3\") = \"NO\" ]]\n    [[ $(candidate \"3 2 6 1 8 9\" \"3 5 5 1 1 1\")\
    \ = \"NO\" ]]\n    [[ $(candidate \"100 200\" \"200 200\") = \"YES\" ]]\n}\n\n\
    run_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660002369
- exit_code: 1
  program: "#!/bin/bash\n# In this problem, you will implement a function that takes\
    \ two lists of numbers,\n# and determines whether it is possible to perform an\
    \ exchange of elements\n# between them to make lst1 a list of only even numbers.\n\
    # There is no limit on the number of exchanged elements between lst1 and lst2.\n\
    # If it is possible to exchange elements between the lst1 and lst2 to make\n#\
    \ all the elements of lst1 to be even, return \"YES\".\n# Otherwise, return \"\
    NO\".\n# For example:\n# It is assumed that the input lists will be non-empty.\n\
    #\n# $1 is a space-separated list\n# $2 is a space-separated list\nexchange()\
    \ {\n    local lst1=($1)\n    local lst2=($2)\n    local lst1_even=()\n    local\
    \ lst1_odd=()\n    local lst2_even=()\n    local lst2_odd=()\n    local lst1_odd_count=0\n\
    \    local lst2_odd_count=0\n    for i in ${lst1[@]}; do\n        if (( i % 2\
    \ == 0 )); then\n            lst1_even+=($i)\n        else\n            lst1_odd+=($i)\n\
    \            (( lst1_odd_count++ ))\n        fi\n    done\n    for i in ${lst2[@]};\
    \ do\n        if (( i % 2 == 0 )); then\n            lst2_even+=($i)\n       \
    \ else\n            lst2_odd+=($i)\n            (( lst2_odd_count++ ))\n     \
    \   fi\n    done\n    if (( lst1_odd_count == 0 )); then\n        echo \"YES\"\
    \n    elif (( lst2_odd_count == 0 )); then\n        echo \"NO\"\n    elif (( lst1_odd_count\
    \ == lst2_odd_count )); then\n        echo \"YES\"\n    elif (( lst1_odd_count\
    \ > lst2_odd_count )); then\n        echo \"NO\"\n    else\n        echo \"YES\"\
    \n    fi\n}\n\ncandidate() {\n    exchange \"$@\"\n}\n\nset -e\nrun_test() {\n\
    \    [[ $(candidate \"1 2 3 4\" \"1 2 3 4\") = \"YES\" ]]\n    [[ $(candidate\
    \ \"1 2 3 4\" \"1 5 3 4\") = \"NO\" ]]\n    [[ $(candidate \"1 2 3 4\" \"2 1 4\
    \ 3\") = \"YES\" ]]\n    [[ $(candidate \"5 7 3\" \"2 6 4\") = \"YES\" ]]\n  \
    \  [[ $(candidate \"5 7 3\" \"2 6 3\") = \"NO\" ]]\n    [[ $(candidate \"3 2 6\
    \ 1 8 9\" \"3 5 5 1 1 1\") = \"NO\" ]]\n    [[ $(candidate \"100 200\" \"200 200\"\
    ) = \"YES\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660002370
- exit_code: 1
  program: "#!/bin/bash\n# In this problem, you will implement a function that takes\
    \ two lists of numbers,\n# and determines whether it is possible to perform an\
    \ exchange of elements\n# between them to make lst1 a list of only even numbers.\n\
    # There is no limit on the number of exchanged elements between lst1 and lst2.\n\
    # If it is possible to exchange elements between the lst1 and lst2 to make\n#\
    \ all the elements of lst1 to be even, return \"YES\".\n# Otherwise, return \"\
    NO\".\n# For example:\n# It is assumed that the input lists will be non-empty.\n\
    #\n# $1 is a space-separated list\n# $2 is a space-separated list\nexchange()\
    \ {\n  local -a lst1=($1)\n  local -a lst2=($2)\n  local -a evens=()\n  local\
    \ -a odds=()\n  local -a result=()\n  local -i i=0\n  local -i j=0\n  local -i\
    \ k=0\n  local -i l=0\n  local -i m=0\n  local -i n=0\n  local -i o=0\n  local\
    \ -i p=0\n  local -i q=0\n  local -i r=0\n  local -i s=0\n  local -i t=0\n  local\
    \ -i u=0\n  local -i v=0\n  local -i w=0\n  local -i x=0\n  local -i y=0\n  local\
    \ -i z=0\n  local -i aa=0\n  local -i bb=0\n  local -i cc=0\n  local -i dd=0\n\
    \  local -i ee=0\n  local -i ff=0\n  local -i gg=0\n  local -i hh=0\n  local -i\
    \ ii=0\n  local -i jj=0\n  local -i kk=0\n  local -i ll=0\n  local -i mm=0\n \
    \ local -i nn=0\n  local -i oo=0\n  local -i pp=0\n  local -i qq=0\n  local -i\
    \ rr=0\n  local -i ss=0\n  local -i tt=0\n  local -i uu=0\n  local -i vv=0\n \
    \ local -i ww=0\n  local -i xx=0\n  local -i yy=0\n  local -i zz=0\n  local -i\
    \ aaa=0\n  local -i bbb=0\n  local -i ccc=0\n  local -i ddd=0\n  local -i eee=0\n\
    \  local -i fff=0\n  local -i ggg=0\n  local -i hhh=0\n  local -i iii=0\n  local\
    \ -i jjj=0\n  local -i\n}\n\ncandidate() {\n    exchange \"$@\"\n}\n\nset -e\n\
    run_test() {\n    [[ $(candidate \"1 2 3 4\" \"1 2 3 4\") = \"YES\" ]]\n    [[\
    \ $(candidate \"1 2 3 4\" \"1 5 3 4\") = \"NO\" ]]\n    [[ $(candidate \"1 2 3\
    \ 4\" \"2 1 4 3\") = \"YES\" ]]\n    [[ $(candidate \"5 7 3\" \"2 6 4\") = \"\
    YES\" ]]\n    [[ $(candidate \"5 7 3\" \"2 6 3\") = \"NO\" ]]\n    [[ $(candidate\
    \ \"3 2 6 1 8 9\" \"3 5 5 1 1 1\") = \"NO\" ]]\n    [[ $(candidate \"100 200\"\
    \ \"200 200\") = \"YES\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660002370
- exit_code: 1
  program: "#!/bin/bash\n# In this problem, you will implement a function that takes\
    \ two lists of numbers,\n# and determines whether it is possible to perform an\
    \ exchange of elements\n# between them to make lst1 a list of only even numbers.\n\
    # There is no limit on the number of exchanged elements between lst1 and lst2.\n\
    # If it is possible to exchange elements between the lst1 and lst2 to make\n#\
    \ all the elements of lst1 to be even, return \"YES\".\n# Otherwise, return \"\
    NO\".\n# For example:\n# It is assumed that the input lists will be non-empty.\n\
    #\n# $1 is a space-separated list\n# $2 is a space-separated list\nexchange()\
    \ {\n  local lst1=($1)\n  local lst2=($2)\n  local lst1_even=()\n  local lst1_odd=()\n\
    \  local lst2_even=()\n  local lst2_odd=()\n  local lst1_even_len=0\n  local lst1_odd_len=0\n\
    \  local lst2_even_len=0\n  local lst2_odd_len=0\n  local i=0\n  local j=0\n \
    \ local k=0\n  local l=0\n  local m=0\n  local n=0\n  local o=0\n  local p=0\n\
    \  local q=0\n  local r=0\n  local s=0\n  local t=0\n  local u=0\n  local v=0\n\
    \  local w=0\n  local x=0\n  local y=0\n  local z=0\n  local aa=0\n  local bb=0\n\
    \  local cc=0\n  local dd=0\n  local ee=0\n  local ff=0\n  local gg=0\n  local\
    \ hh=0\n  local ii=0\n  local jj=0\n  local kk=0\n  local ll=0\n  local mm=0\n\
    \  local nn=0\n  local oo=0\n  local pp=0\n  local qq=0\n  local rr=0\n  local\
    \ ss=0\n  local tt=0\n  local uu=0\n  local vv=0\n  local ww=0\n  local xx=0\n\
    \  local yy=0\n  local zz=0\n  local aaa=0\n  local bbb=0\n  local ccc=0\n  local\
    \ ddd=0\n  local eee=0\n  local fff=0\n  local ggg=0\n  local hhh=0\n  local iii=0\n\
    \  local jjj=0\n  local kkk=0\n  local lll=0\n  local mmm=0\n  local nnn=0\n \
    \ local ooo=0\n  local ppp=0\n  local qqq=0\n  local rrr\n}\n\ncandidate() {\n\
    \    exchange \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"1 2 3 4\"\
    \ \"1 2 3 4\") = \"YES\" ]]\n    [[ $(candidate \"1 2 3 4\" \"1 5 3 4\") = \"\
    NO\" ]]\n    [[ $(candidate \"1 2 3 4\" \"2 1 4 3\") = \"YES\" ]]\n    [[ $(candidate\
    \ \"5 7 3\" \"2 6 4\") = \"YES\" ]]\n    [[ $(candidate \"5 7 3\" \"2 6 3\") =\
    \ \"NO\" ]]\n    [[ $(candidate \"3 2 6 1 8 9\" \"3 5 5 1 1 1\") = \"NO\" ]]\n\
    \    [[ $(candidate \"100 200\" \"200 200\") = \"YES\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660002370
- exit_code: 1
  program: "#!/bin/bash\n# In this problem, you will implement a function that takes\
    \ two lists of numbers,\n# and determines whether it is possible to perform an\
    \ exchange of elements\n# between them to make lst1 a list of only even numbers.\n\
    # There is no limit on the number of exchanged elements between lst1 and lst2.\n\
    # If it is possible to exchange elements between the lst1 and lst2 to make\n#\
    \ all the elements of lst1 to be even, return \"YES\".\n# Otherwise, return \"\
    NO\".\n# For example:\n# It is assumed that the input lists will be non-empty.\n\
    #\n# $1 is a space-separated list\n# $2 is a space-separated list\nexchange()\
    \ {\n  local lst1=($1)\n  local lst2=($2)\n  local lst1_len=${#lst1[@]}\n  local\
    \ lst2_len=${#lst2[@]}\n  local lst1_odd=0\n  local lst2_odd=0\n  local i=0\n\
    \  local j=0\n  local k=0\n  local lst1_odd_idx=()\n  local lst2_odd_idx=()\n\
    \  local lst1_odd_num=()\n  local lst2_odd_num=()\n  local lst1_even_num=()\n\
    \  local lst2_even_num=()\n  local lst1_even_idx=()\n  local lst2_even_idx=()\n\
    \  local lst1_even_num_len=0\n  local lst2_even_num_len=0\n  local lst1_odd_num_len=0\n\
    \  local lst2_odd_num_len=0\n  local lst1_even_idx_len=0\n  local lst2_even_idx_len=0\n\
    \  local lst1_odd_idx_len=0\n  local lst2_odd_idx_len=0\n  local lst1_even_num_idx=0\n\
    \  local lst2_even_num_idx=0\n  local lst1_odd_num_idx=0\n  local lst2_odd_num_idx=0\n\
    \  local lst1_even_idx_idx=0\n  local lst2_even_idx_idx=0\n  local lst1_odd_idx_idx=0\n\
    \  local lst2_odd_idx_idx=0\n  local lst1_even_num_idx_len=0\n  local lst2_even_num_idx_len=0\n\
    \  local lst1_odd_num_idx_len=0\n  local lst2_odd_num_idx_len=0\n  local lst1_even_idx_\n\
    }\n\ncandidate() {\n    exchange \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate\
    \ \"1 2 3 4\" \"1 2 3 4\") = \"YES\" ]]\n    [[ $(candidate \"1 2 3 4\" \"1 5\
    \ 3 4\") = \"NO\" ]]\n    [[ $(candidate \"1 2 3 4\" \"2 1 4 3\") = \"YES\" ]]\n\
    \    [[ $(candidate \"5 7 3\" \"2 6 4\") = \"YES\" ]]\n    [[ $(candidate \"5\
    \ 7 3\" \"2 6 3\") = \"NO\" ]]\n    [[ $(candidate \"3 2 6 1 8 9\" \"3 5 5 1 1\
    \ 1\") = \"NO\" ]]\n    [[ $(candidate \"100 200\" \"200 200\") = \"YES\" ]]\n\
    }\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660002370
- exit_code: 1
  program: "#!/bin/bash\n# In this problem, you will implement a function that takes\
    \ two lists of numbers,\n# and determines whether it is possible to perform an\
    \ exchange of elements\n# between them to make lst1 a list of only even numbers.\n\
    # There is no limit on the number of exchanged elements between lst1 and lst2.\n\
    # If it is possible to exchange elements between the lst1 and lst2 to make\n#\
    \ all the elements of lst1 to be even, return \"YES\".\n# Otherwise, return \"\
    NO\".\n# For example:\n# It is assumed that the input lists will be non-empty.\n\
    #\n# $1 is a space-separated list\n# $2 is a space-separated list\nexchange()\
    \ {\n  local lst1=($1)\n  local lst2=($2)\n  local lst1_even=()\n  local lst1_odd=()\n\
    \  local lst2_even=()\n  local lst2_odd=()\n  local lst1_even_count=0\n  local\
    \ lst1_odd_count=0\n  local lst2_even_count=0\n  local lst2_odd_count=0\n  local\
    \ lst1_even_odd_diff=0\n  local lst2_even_odd_diff=0\n  local lst1_even_odd_diff_abs=0\n\
    \  local lst2_even_odd_diff_abs=0\n  local lst1_even_odd_diff_sum=0\n  local lst2_even_odd_diff_sum=0\n\
    \  local lst1_even_odd_diff_sum_abs=0\n  local lst2_even_odd_diff_sum_abs=0\n\
    \  local lst1_even_odd_diff_sum_abs_diff=0\n  local lst2_even_odd_diff_sum_abs_diff=0\n\
    \  local lst1_even_odd_diff_sum_abs_diff_abs=0\n  local lst2_even_odd_diff_sum_abs_diff_abs=0\n\
    \  local lst1_even_odd_diff_sum_abs_diff_abs_diff=0\n  local lst2_even_odd_diff_sum_abs_diff_abs_diff=0\n\
    \  local lst1_even_odd_diff_sum_abs_diff_abs_diff_abs=0\n  local lst2_even_odd_diff_sum_abs_diff_abs_diff_abs=0\n\
    \  local lst1_even_odd_diff_sum_abs_diff_abs_diff_abs_diff=0\n  local lst2_even_odd_diff_sum_abs_diff_abs_diff_abs_diff=0\n\
    \  local lst1_even_odd_diff_sum_abs_diff_abs_diff_abs_diff_abs=0\n  local lst2\n\
    }\n\ncandidate() {\n    exchange \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate\
    \ \"1 2 3 4\" \"1 2 3 4\") = \"YES\" ]]\n    [[ $(candidate \"1 2 3 4\" \"1 5\
    \ 3 4\") = \"NO\" ]]\n    [[ $(candidate \"1 2 3 4\" \"2 1 4 3\") = \"YES\" ]]\n\
    \    [[ $(candidate \"5 7 3\" \"2 6 4\") = \"YES\" ]]\n    [[ $(candidate \"5\
    \ 7 3\" \"2 6 3\") = \"NO\" ]]\n    [[ $(candidate \"3 2 6 1 8 9\" \"3 5 5 1 1\
    \ 1\") = \"NO\" ]]\n    [[ $(candidate \"100 200\" \"200 200\") = \"YES\" ]]\n\
    }\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660002370
- exit_code: 1
  program: "#!/bin/bash\n# In this problem, you will implement a function that takes\
    \ two lists of numbers,\n# and determines whether it is possible to perform an\
    \ exchange of elements\n# between them to make lst1 a list of only even numbers.\n\
    # There is no limit on the number of exchanged elements between lst1 and lst2.\n\
    # If it is possible to exchange elements between the lst1 and lst2 to make\n#\
    \ all the elements of lst1 to be even, return \"YES\".\n# Otherwise, return \"\
    NO\".\n# For example:\n# It is assumed that the input lists will be non-empty.\n\
    #\n# $1 is a space-separated list\n# $2 is a space-separated list\nexchange()\
    \ {\n  local lst1=\"$1\"\n  local lst2=\"$2\"\n  local lst1_odds=()\n  local lst2_evens=()\n\
    \  local lst1_evens=()\n  local lst2_odds=()\n  local lst1_odds_count=0\n  local\
    \ lst2_evens_count=0\n  local lst1_evens_count=0\n  local lst2_odds_count=0\n\
    \  local i=0\n  local j=0\n  local k=0\n  local l=0\n  local m=0\n  local n=0\n\
    \  local o=0\n  local p=0\n  local q=0\n  local r=0\n  local s=0\n  local t=0\n\
    \  local u=0\n  local v=0\n  local w=0\n  local x=0\n  local y=0\n  local z=0\n\
    \  local aa=0\n  local bb=0\n  local cc=0\n  local dd=0\n  local ee=0\n  local\
    \ ff=0\n  local gg=0\n  local hh=0\n  local ii=0\n  local jj=0\n  local kk=0\n\
    \  local ll=0\n  local mm=0\n  local nn=0\n  local oo=0\n  local pp=0\n  local\
    \ qq=0\n  local rr=0\n  local ss=0\n  local tt=0\n  local uu=0\n  local vv=0\n\
    \  local ww=0\n  local xx=0\n  local yy=0\n  local zz=0\n  local aaa=0\n  local\
    \ bbb=0\n  local ccc=0\n  local ddd=0\n  local eee=0\n  local fff=0\n  local ggg=0\n\
    \  local hhh=0\n  local iii=0\n  local jjj=0\n  local kkk=0\n  local lll=0\n \
    \ local mmm=0\n  local nnn=0\n  local ooo=0\n  local ppp=0\n  local q\n}\n\ncandidate()\
    \ {\n    exchange \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"1 2\
    \ 3 4\" \"1 2 3 4\") = \"YES\" ]]\n    [[ $(candidate \"1 2 3 4\" \"1 5 3 4\"\
    ) = \"NO\" ]]\n    [[ $(candidate \"1 2 3 4\" \"2 1 4 3\") = \"YES\" ]]\n    [[\
    \ $(candidate \"5 7 3\" \"2 6 4\") = \"YES\" ]]\n    [[ $(candidate \"5 7 3\"\
    \ \"2 6 3\") = \"NO\" ]]\n    [[ $(candidate \"3 2 6 1 8 9\" \"3 5 5 1 1 1\")\
    \ = \"NO\" ]]\n    [[ $(candidate \"100 200\" \"200 200\") = \"YES\" ]]\n}\n\n\
    run_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660002370
- exit_code: 1
  program: "#!/bin/bash\n# In this problem, you will implement a function that takes\
    \ two lists of numbers,\n# and determines whether it is possible to perform an\
    \ exchange of elements\n# between them to make lst1 a list of only even numbers.\n\
    # There is no limit on the number of exchanged elements between lst1 and lst2.\n\
    # If it is possible to exchange elements between the lst1 and lst2 to make\n#\
    \ all the elements of lst1 to be even, return \"YES\".\n# Otherwise, return \"\
    NO\".\n# For example:\n# It is assumed that the input lists will be non-empty.\n\
    #\n# $1 is a space-separated list\n# $2 is a space-separated list\nexchange()\
    \ {\n    local lst1=$1\n    local lst2=$2\n    local lst1_even=0\n    local lst2_even=0\n\
    \    local lst1_odd=0\n    local lst2_odd=0\n    local lst1_len=0\n    local lst2_len=0\n\
    \    local lst1_even_len=0\n    local lst2_even_len=0\n    local lst1_odd_len=0\n\
    \    local lst2_odd_len=0\n    local lst1_even_odd_diff=0\n    local lst2_even_odd_diff=0\n\
    \    local lst1_even_odd_diff_abs=0\n    local lst2_even_odd_diff_abs=0\n    local\
    \ lst1_even_odd_diff_abs_sum=0\n    local lst2_even_odd_diff_abs_sum=0\n    local\
    \ lst1_even_odd_diff_abs_sum_abs=0\n    local lst2_even_odd_diff_abs_sum_abs=0\n\
    \    local lst1_even_odd_diff_abs_sum_abs_diff=0\n    local lst2_even_odd_diff_abs_sum_abs_diff=0\n\
    \    local lst1_even_odd_diff_abs_sum_abs_diff_abs=0\n    local lst2_even_odd_diff_abs_sum_abs_diff_abs=0\n\
    \    local lst1_even_odd_diff_abs_sum_abs_diff_abs_sum=0\n    local lst2_even_odd_diff_abs_sum_abs_diff_abs_sum=0\n\
    \    local lst1_even_odd_diff_abs_sum_abs_diff_abs_sum_abs=0\n    local lst2_even_odd_diff_abs_sum_abs_diff_abs_sum_abs=0\n\
    \    local lst1_even_odd_diff_abs_sum_abs_diff_abs_sum_abs_diff=0\n    local lst2_even_odd_diff_abs_sum_abs_diff_abs\n\
    }\n\ncandidate() {\n    exchange \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate\
    \ \"1 2 3 4\" \"1 2 3 4\") = \"YES\" ]]\n    [[ $(candidate \"1 2 3 4\" \"1 5\
    \ 3 4\") = \"NO\" ]]\n    [[ $(candidate \"1 2 3 4\" \"2 1 4 3\") = \"YES\" ]]\n\
    \    [[ $(candidate \"5 7 3\" \"2 6 4\") = \"YES\" ]]\n    [[ $(candidate \"5\
    \ 7 3\" \"2 6 3\") = \"NO\" ]]\n    [[ $(candidate \"3 2 6 1 8 9\" \"3 5 5 1 1\
    \ 1\") = \"NO\" ]]\n    [[ $(candidate \"100 200\" \"200 200\") = \"YES\" ]]\n\
    }\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660002370
- exit_code: 1
  program: "#!/bin/bash\n# In this problem, you will implement a function that takes\
    \ two lists of numbers,\n# and determines whether it is possible to perform an\
    \ exchange of elements\n# between them to make lst1 a list of only even numbers.\n\
    # There is no limit on the number of exchanged elements between lst1 and lst2.\n\
    # If it is possible to exchange elements between the lst1 and lst2 to make\n#\
    \ all the elements of lst1 to be even, return \"YES\".\n# Otherwise, return \"\
    NO\".\n# For example:\n# It is assumed that the input lists will be non-empty.\n\
    #\n# $1 is a space-separated list\n# $2 is a space-separated list\nexchange()\
    \ {\n  local lst1=($1)\n  local lst2=($2)\n  local i\n  local j\n  local k\n \
    \ local l\n  local m\n  local n\n  local o\n  local p\n  local q\n  local r\n\
    \  local s\n  local t\n  local u\n  local v\n  local w\n  local x\n  local y\n\
    \  local z\n  local aa\n  local bb\n  local cc\n  local dd\n  local ee\n  local\
    \ ff\n  local gg\n  local hh\n  local ii\n  local jj\n  local kk\n  local ll\n\
    \  local mm\n  local nn\n  local oo\n  local pp\n  local qq\n  local rr\n  local\
    \ ss\n  local tt\n  local uu\n  local vv\n  local ww\n  local xx\n  local yy\n\
    \  local zz\n  local aaa\n  local bbb\n  local ccc\n  local ddd\n  local eee\n\
    \  local fff\n  local ggg\n  local hhh\n  local iii\n  local jjj\n  local kkk\n\
    \  local lll\n  local mmm\n  local nnn\n  local ooo\n  local ppp\n  local qqq\n\
    \  local rrr\n  local sss\n  local ttt\n  local uuu\n  local vvv\n  local www\n\
    \  local xxx\n  local yyy\n  local zzz\n  local aaaa\n  local bbbb\n  local cccc\n\
    \  local dddd\n  local eeee\n  local ffff\n  local gggg\n  local hhhh\n  local\
    \ iiii\n  local jjjj\n  local kkkk\n  local llll\n  local mmmm\n  local nnnn\n\
    \  local oooo\n  local pppp\n  local qqqq\n  local rrrr\n  local ssss\n  local\
    \ tttt\n  local uuuu\n  local vvvv\n  local wwww\n  local xxxx\n  local yyyy\n\
    \  local zzzz\n  local aaaaa\n  local bbbbb\n  local ccccc\n  local ddddd\n\n\
    }\n\ncandidate() {\n    exchange \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate\
    \ \"1 2 3 4\" \"1 2 3 4\") = \"YES\" ]]\n    [[ $(candidate \"1 2 3 4\" \"1 5\
    \ 3 4\") = \"NO\" ]]\n    [[ $(candidate \"1 2 3 4\" \"2 1 4 3\") = \"YES\" ]]\n\
    \    [[ $(candidate \"5 7 3\" \"2 6 4\") = \"YES\" ]]\n    [[ $(candidate \"5\
    \ 7 3\" \"2 6 3\") = \"NO\" ]]\n    [[ $(candidate \"3 2 6 1 8 9\" \"3 5 5 1 1\
    \ 1\") = \"NO\" ]]\n    [[ $(candidate \"100 200\" \"200 200\") = \"YES\" ]]\n\
    }\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660002370
- exit_code: 1
  program: "#!/bin/bash\n# In this problem, you will implement a function that takes\
    \ two lists of numbers,\n# and determines whether it is possible to perform an\
    \ exchange of elements\n# between them to make lst1 a list of only even numbers.\n\
    # There is no limit on the number of exchanged elements between lst1 and lst2.\n\
    # If it is possible to exchange elements between the lst1 and lst2 to make\n#\
    \ all the elements of lst1 to be even, return \"YES\".\n# Otherwise, return \"\
    NO\".\n# For example:\n# It is assumed that the input lists will be non-empty.\n\
    #\n# $1 is a space-separated list\n# $2 is a space-separated list\nexchange()\
    \ {\n  local lst1=($1)\n  local lst2=($2)\n  local lst1_even=()\n  local lst1_odd=()\n\
    \  local lst2_even=()\n  local lst2_odd=()\n  local lst1_even_count=0\n  local\
    \ lst1_odd_count=0\n  local lst2_even_count=0\n  local lst2_odd_count=0\n  local\
    \ lst1_even_odd_diff=0\n  local lst2_even_odd_diff=0\n  local lst1_even_odd_diff_abs=0\n\
    \  local lst2_even_odd_diff_abs=0\n  local lst1_even_odd_diff_abs_sum=0\n  local\
    \ lst2_even_odd_diff_abs_sum=0\n  local lst1_even_odd_diff_abs_sum_diff=0\n  local\
    \ lst2_even_odd_diff_abs_sum_diff=0\n  local lst1_even_odd_diff_abs_sum_diff_abs=0\n\
    \  local lst2_even_odd_diff_abs_sum_diff_abs=0\n  local lst1_even_odd_diff_abs_sum_diff_abs_sum=0\n\
    \  local lst2_even_odd_diff_abs_sum_diff_abs_sum=0\n  local lst1_even_odd_diff_abs_sum_diff_abs_sum_diff=0\n\
    \  local lst2_even_odd_diff_abs_sum_diff_abs_sum_diff=0\n  local lst1_even_odd_diff_abs_sum_diff_abs_sum_diff_abs=0\n\
    \  local lst2_even_odd_diff_abs_sum_diff_abs_sum_diff_abs=0\n  local lst1_even_odd_diff_abs_sum_diff_abs_sum_diff_abs_sum=0\n\
    \  local lst2_even_odd_diff_abs_sum_diff_abs_sum_diff_abs_sum=0\n  local lst1_even\n\
    }\n\ncandidate() {\n    exchange \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate\
    \ \"1 2 3 4\" \"1 2 3 4\") = \"YES\" ]]\n    [[ $(candidate \"1 2 3 4\" \"1 5\
    \ 3 4\") = \"NO\" ]]\n    [[ $(candidate \"1 2 3 4\" \"2 1 4 3\") = \"YES\" ]]\n\
    \    [[ $(candidate \"5 7 3\" \"2 6 4\") = \"YES\" ]]\n    [[ $(candidate \"5\
    \ 7 3\" \"2 6 3\") = \"NO\" ]]\n    [[ $(candidate \"3 2 6 1 8 9\" \"3 5 5 1 1\
    \ 1\") = \"NO\" ]]\n    [[ $(candidate \"100 200\" \"200 200\") = \"YES\" ]]\n\
    }\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660002370
- exit_code: 1
  program: "#!/bin/bash\n# In this problem, you will implement a function that takes\
    \ two lists of numbers,\n# and determines whether it is possible to perform an\
    \ exchange of elements\n# between them to make lst1 a list of only even numbers.\n\
    # There is no limit on the number of exchanged elements between lst1 and lst2.\n\
    # If it is possible to exchange elements between the lst1 and lst2 to make\n#\
    \ all the elements of lst1 to be even, return \"YES\".\n# Otherwise, return \"\
    NO\".\n# For example:\n# It is assumed that the input lists will be non-empty.\n\
    #\n# $1 is a space-separated list\n# $2 is a space-separated list\nexchange()\
    \ {\n  local lst1=\"$1\"\n  local lst2=\"$2\"\n  local lst1_even=0\n  local lst2_even=0\n\
    \  local lst1_odd=0\n  local lst2_odd=0\n  local lst1_even_odd=0\n  local lst2_even_odd=0\n\
    \  local lst1_odd_even=0\n  local lst2_odd_even=0\n  local lst1_odd_odd=0\n  local\
    \ lst2_odd_odd=0\n  local lst1_even_even=0\n  local lst2_even_even=0\n  local\
    \ lst1_odd_even_even=0\n  local lst2_odd_even_even=0\n  local lst1_even_odd_odd=0\n\
    \  local lst2_even_odd_odd=0\n  local lst1_odd_odd_even=0\n  local lst2_odd_odd_even=0\n\
    \  local lst1_even_even_odd=0\n  local lst2_even_even_odd=0\n  local lst1_odd_even_odd=0\n\
    \  local lst2_odd_even_odd=0\n  local lst1_even_odd_even=0\n  local lst2_even_odd_even=0\n\
    \  local lst1_odd_odd_odd=0\n  local lst2_odd_odd_odd=0\n  local lst1_even_even_even=0\n\
    \  local lst2_even_even_even=0\n  local lst1_odd_even_even_even=0\n  local lst2_odd_even_even_even=0\n\
    \  local lst1_even_odd_odd_odd=0\n  local lst2_even_odd_odd_odd=0\n  local lst1_odd_odd_even_even=0\n\
    \  local lst2_odd_odd_even_even=0\n  local lst1_even_even_odd_odd=0\n  local lst2_even_even_odd_odd=0\n\
    \  local l\n}\n\ncandidate() {\n    exchange \"$@\"\n}\n\nset -e\nrun_test() {\n\
    \    [[ $(candidate \"1 2 3 4\" \"1 2 3 4\") = \"YES\" ]]\n    [[ $(candidate\
    \ \"1 2 3 4\" \"1 5 3 4\") = \"NO\" ]]\n    [[ $(candidate \"1 2 3 4\" \"2 1 4\
    \ 3\") = \"YES\" ]]\n    [[ $(candidate \"5 7 3\" \"2 6 4\") = \"YES\" ]]\n  \
    \  [[ $(candidate \"5 7 3\" \"2 6 3\") = \"NO\" ]]\n    [[ $(candidate \"3 2 6\
    \ 1 8 9\" \"3 5 5 1 1 1\") = \"NO\" ]]\n    [[ $(candidate \"100 200\" \"200 200\"\
    ) = \"YES\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660002370
- exit_code: 1
  program: "#!/bin/bash\n# In this problem, you will implement a function that takes\
    \ two lists of numbers,\n# and determines whether it is possible to perform an\
    \ exchange of elements\n# between them to make lst1 a list of only even numbers.\n\
    # There is no limit on the number of exchanged elements between lst1 and lst2.\n\
    # If it is possible to exchange elements between the lst1 and lst2 to make\n#\
    \ all the elements of lst1 to be even, return \"YES\".\n# Otherwise, return \"\
    NO\".\n# For example:\n# It is assumed that the input lists will be non-empty.\n\
    #\n# $1 is a space-separated list\n# $2 is a space-separated list\nexchange()\
    \ {\n  local lst1=($1)\n  local lst2=($2)\n  local lst1_even=()\n  local lst1_odd=()\n\
    \  local lst2_even=()\n  local lst2_odd=()\n  local lst1_even_count=0\n  local\
    \ lst1_odd_count=0\n  local lst2_even_count=0\n  local lst2_odd_count=0\n  local\
    \ lst1_even_odd_diff=0\n  local lst2_even_odd_diff=0\n  local lst1_even_odd_diff_abs=0\n\
    \  local lst2_even_odd_diff_abs=0\n  local lst1_even_odd_diff_abs_sum=0\n  local\
    \ lst2_even_odd_diff_abs_sum=0\n  local lst1_even_odd_diff_abs_sum_diff=0\n  local\
    \ lst2_even_odd_diff_abs_sum_diff=0\n  local lst1_even_odd_diff_abs_sum_diff_abs=0\n\
    \  local lst2_even_odd_diff_abs_sum_diff_abs=0\n  local lst1_even_odd_diff_abs_sum_diff_abs_sum=0\n\
    \  local lst2_even_odd_diff_abs_sum_diff_abs_sum=0\n  local lst1_even_odd_diff_abs_sum_diff_abs_sum_diff=0\n\
    \  local lst2_even_odd_diff_abs_sum_diff_abs_sum_diff=0\n  local lst1_even_odd_diff_abs_sum_diff_abs_sum_diff_abs=0\n\
    \  local lst2_even_odd_diff_abs_sum_diff_abs_sum_diff_abs=0\n  local lst1_even_odd_diff_abs_sum_diff_abs_sum_diff_abs_sum=0\n\
    \  local lst2_even_odd_diff_abs_sum_diff_abs_sum_diff_abs_sum=0\n  local lst1_even\n\
    }\n\ncandidate() {\n    exchange \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate\
    \ \"1 2 3 4\" \"1 2 3 4\") = \"YES\" ]]\n    [[ $(candidate \"1 2 3 4\" \"1 5\
    \ 3 4\") = \"NO\" ]]\n    [[ $(candidate \"1 2 3 4\" \"2 1 4 3\") = \"YES\" ]]\n\
    \    [[ $(candidate \"5 7 3\" \"2 6 4\") = \"YES\" ]]\n    [[ $(candidate \"5\
    \ 7 3\" \"2 6 3\") = \"NO\" ]]\n    [[ $(candidate \"3 2 6 1 8 9\" \"3 5 5 1 1\
    \ 1\") = \"NO\" ]]\n    [[ $(candidate \"100 200\" \"200 200\") = \"YES\" ]]\n\
    }\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660002370
- exit_code: 1
  program: "#!/bin/bash\n# In this problem, you will implement a function that takes\
    \ two lists of numbers,\n# and determines whether it is possible to perform an\
    \ exchange of elements\n# between them to make lst1 a list of only even numbers.\n\
    # There is no limit on the number of exchanged elements between lst1 and lst2.\n\
    # If it is possible to exchange elements between the lst1 and lst2 to make\n#\
    \ all the elements of lst1 to be even, return \"YES\".\n# Otherwise, return \"\
    NO\".\n# For example:\n# It is assumed that the input lists will be non-empty.\n\
    #\n# $1 is a space-separated list\n# $2 is a space-separated list\nexchange()\
    \ {\n  local lst1=($1)\n  local lst2=($2)\n  local lst1_even=()\n  local lst1_odd=()\n\
    \  local lst2_even=()\n  local lst2_odd=()\n  local lst1_even_count=0\n  local\
    \ lst1_odd_count=0\n  local lst2_even_count=0\n  local lst2_odd_count=0\n  local\
    \ lst1_even_odd_diff=0\n  local lst2_even_odd_diff=0\n  local lst1_even_odd_diff_abs=0\n\
    \  local lst2_even_odd_diff_abs=0\n  local lst1_even_odd_diff_abs_sum=0\n  local\
    \ lst2_even_odd_diff_abs_sum=0\n  local lst1_even_odd_diff_abs_sum_diff=0\n  local\
    \ lst2_even_odd_diff_abs_sum_diff=0\n  local lst1_even_odd_diff_abs_sum_diff_abs=0\n\
    \  local lst2_even_odd_diff_abs_sum_diff_abs=0\n  local lst1_even_odd_diff_abs_sum_diff_abs_sum=0\n\
    \  local lst2_even_odd_diff_abs_sum_diff_abs_sum=0\n  local lst1_even_odd_diff_abs_sum_diff_abs_sum_diff=0\n\
    \  local lst2_even_odd_diff_abs_sum_diff_abs_sum_diff=0\n  local lst1_even_odd_diff_abs_sum_diff_abs_sum_diff_abs=0\n\
    \  local lst2_even_odd_diff_abs_sum_diff_abs_sum_diff_abs=0\n  local lst1_even_odd_diff_abs_sum_diff_abs_sum_diff_abs_sum=0\n\
    \  local lst2_even_odd_diff_abs_sum_diff_abs_sum_diff_abs_sum=0\n  local lst1_even\n\
    }\n\ncandidate() {\n    exchange \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate\
    \ \"1 2 3 4\" \"1 2 3 4\") = \"YES\" ]]\n    [[ $(candidate \"1 2 3 4\" \"1 5\
    \ 3 4\") = \"NO\" ]]\n    [[ $(candidate \"1 2 3 4\" \"2 1 4 3\") = \"YES\" ]]\n\
    \    [[ $(candidate \"5 7 3\" \"2 6 4\") = \"YES\" ]]\n    [[ $(candidate \"5\
    \ 7 3\" \"2 6 3\") = \"NO\" ]]\n    [[ $(candidate \"3 2 6 1 8 9\" \"3 5 5 1 1\
    \ 1\") = \"NO\" ]]\n    [[ $(candidate \"100 200\" \"200 200\") = \"YES\" ]]\n\
    }\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660002370
- exit_code: 1
  program: "#!/bin/bash\n# In this problem, you will implement a function that takes\
    \ two lists of numbers,\n# and determines whether it is possible to perform an\
    \ exchange of elements\n# between them to make lst1 a list of only even numbers.\n\
    # There is no limit on the number of exchanged elements between lst1 and lst2.\n\
    # If it is possible to exchange elements between the lst1 and lst2 to make\n#\
    \ all the elements of lst1 to be even, return \"YES\".\n# Otherwise, return \"\
    NO\".\n# For example:\n# It is assumed that the input lists will be non-empty.\n\
    #\n# $1 is a space-separated list\n# $2 is a space-separated list\nexchange()\
    \ {\n  local lst1=$1\n  local lst2=$2\n  local lst1_even=0\n  local lst2_even=0\n\
    \  for i in $lst1; do\n    if [ $(($i % 2)) -eq 0 ]; then\n      lst1_even=$(($lst1_even\
    \ + 1))\n    fi\n  done\n  for i in $lst2; do\n    if [ $(($i % 2)) -eq 0 ]; then\n\
    \      lst2_even=$(($lst2_even + 1))\n    fi\n  done\n  if [ $lst1_even -eq 0\
    \ ]; then\n    echo \"NO\"\n  elif [ $lst2_even -eq 0 ]; then\n    echo \"NO\"\
    \n  elif [ $lst1_even -eq $(($(echo $lst1 | wc -w) - $lst2_even)) ]; then\n  \
    \  echo \"YES\"\n  else\n    echo \"NO\"\n  fi\n}\n\ncandidate() {\n    exchange\
    \ \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"1 2 3 4\" \"1 2 3 4\"\
    ) = \"YES\" ]]\n    [[ $(candidate \"1 2 3 4\" \"1 5 3 4\") = \"NO\" ]]\n    [[\
    \ $(candidate \"1 2 3 4\" \"2 1 4 3\") = \"YES\" ]]\n    [[ $(candidate \"5 7\
    \ 3\" \"2 6 4\") = \"YES\" ]]\n    [[ $(candidate \"5 7 3\" \"2 6 3\") = \"NO\"\
    \ ]]\n    [[ $(candidate \"3 2 6 1 8 9\" \"3 5 5 1 1 1\") = \"NO\" ]]\n    [[\
    \ $(candidate \"100 200\" \"200 200\") = \"YES\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660002370
- exit_code: 1
  program: "#!/bin/bash\n# In this problem, you will implement a function that takes\
    \ two lists of numbers,\n# and determines whether it is possible to perform an\
    \ exchange of elements\n# between them to make lst1 a list of only even numbers.\n\
    # There is no limit on the number of exchanged elements between lst1 and lst2.\n\
    # If it is possible to exchange elements between the lst1 and lst2 to make\n#\
    \ all the elements of lst1 to be even, return \"YES\".\n# Otherwise, return \"\
    NO\".\n# For example:\n# It is assumed that the input lists will be non-empty.\n\
    #\n# $1 is a space-separated list\n# $2 is a space-separated list\nexchange()\
    \ {\n  local lst1=\"$1\"\n  local lst2=\"$2\"\n  local lst1_even=0\n  local lst2_even=0\n\
    \  local lst1_odd=0\n  local lst2_odd=0\n  local lst1_even_odd=0\n  local lst2_even_odd=0\n\
    \  local lst1_odd_even=0\n  local lst2_odd_even=0\n  local lst1_odd_odd=0\n  local\
    \ lst2_odd_odd=0\n  local lst1_even_even=0\n  local lst2_even_even=0\n  local\
    \ lst1_even_odd_even=0\n  local lst2_even_odd_even=0\n  local lst1_odd_even_odd=0\n\
    \  local lst2_odd_even_odd=0\n  local lst1_odd_odd_even=0\n  local lst2_odd_odd_even=0\n\
    \  local lst1_even_even_odd=0\n  local lst2_even_even_odd=0\n  local lst1_even_odd_odd=0\n\
    \  local lst2_even_odd_odd=0\n  local lst1_odd_even_even=0\n  local lst2_odd_even_even=0\n\
    \  local lst1_odd_odd_odd=0\n  local lst2_odd_odd_odd=0\n  local lst1_even_even_even=0\n\
    \  local lst2_even_even_even=0\n  local lst1_odd_odd_odd_even=0\n  local lst2_odd_odd_odd_even=0\n\
    \  local lst1_even_even_even_odd=0\n  local lst2_even_even_even_odd=0\n  local\
    \ lst1_odd_odd_odd_odd=0\n  local lst2_odd_odd_odd_odd=0\n  local lst1_even_even_even_even=0\n\
    \  local lst2_even_even_even_even=0\n  local l\n}\n\ncandidate() {\n    exchange\
    \ \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"1 2 3 4\" \"1 2 3 4\"\
    ) = \"YES\" ]]\n    [[ $(candidate \"1 2 3 4\" \"1 5 3 4\") = \"NO\" ]]\n    [[\
    \ $(candidate \"1 2 3 4\" \"2 1 4 3\") = \"YES\" ]]\n    [[ $(candidate \"5 7\
    \ 3\" \"2 6 4\") = \"YES\" ]]\n    [[ $(candidate \"5 7 3\" \"2 6 3\") = \"NO\"\
    \ ]]\n    [[ $(candidate \"3 2 6 1 8 9\" \"3 5 5 1 1 1\") = \"NO\" ]]\n    [[\
    \ $(candidate \"100 200\" \"200 200\") = \"YES\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660002369
- exit_code: 2
  program: "#!/bin/bash\n# In this problem, you will implement a function that takes\
    \ two lists of numbers,\n# and determines whether it is possible to perform an\
    \ exchange of elements\n# between them to make lst1 a list of only even numbers.\n\
    # There is no limit on the number of exchanged elements between lst1 and lst2.\n\
    # If it is possible to exchange elements between the lst1 and lst2 to make\n#\
    \ all the elements of lst1 to be even, return \"YES\".\n# Otherwise, return \"\
    NO\".\n# For example:\n# It is assumed that the input lists will be non-empty.\n\
    #\n# $1 is a space-separated list\n# $2 is a space-separated list\nexchange()\
    \ {\n  local lst1=\"$1\"\n  local lst2=\"$2\"\n  local lst1_even=0\n  local lst2_even=0\n\
    \  local lst1_odd=0\n  local lst2_odd=0\n  local lst1_even_odd=0\n  local lst2_even_odd=0\n\
    \  local lst1_odd_even=0\n  local lst2_odd_even=0\n  local lst1_odd_odd=0\n  local\
    \ lst2_odd_odd=0\n  local lst1_even_even=0\n  local lst2_even_even=0\n  for i\
    \ in $lst1; do\n    if [ $((i % 2)) -eq 0 ]; then\n      ((lst1_even++))\n   \
    \ else\n      ((lst1_odd++))\n    fi\n  done\n  for i in $lst2; do\n    if [ $((i\
    \ % 2)) -eq 0 ]; then\n      ((lst2_even++))\n    else\n      ((lst2_odd++))\n\
    \    fi\n  done\n  ((lst1_even_odd = lst1_even * lst2_odd))\n  ((lst2_even_odd\
    \ = lst2_even * lst1_odd))\n  ((lst1_odd_even = lst1_odd * lst2_even))\n  ((lst2_odd_even\
    \ = lst2_odd * lst1_even))\n  ((lst1_odd_odd = lst1_odd * lst2_odd))\n  ((lst2_odd_odd\
    \ = lst2_odd * lst1_odd))\n  ((lst1_even_even = lst1_even * lst2_even))\n  ((lst2_even_even\
    \ = lst2_even * lst1_even))\n  if [ $lst1_even -eq 0 ]; then\n    if [ $lst2_even\
    \ -eq 0 ]; then\n      echo \"NO\"\n    else\n      echo \"YES\"\n    fi\n  else\n\
    \    if [ $lst2_even -\n}\n\ncandidate() {\n    exchange \"$@\"\n}\n\nset -e\n\
    run_test() {\n    [[ $(candidate \"1 2 3 4\" \"1 2 3 4\") = \"YES\" ]]\n    [[\
    \ $(candidate \"1 2 3 4\" \"1 5 3 4\") = \"NO\" ]]\n    [[ $(candidate \"1 2 3\
    \ 4\" \"2 1 4 3\") = \"YES\" ]]\n    [[ $(candidate \"5 7 3\" \"2 6 4\") = \"\
    YES\" ]]\n    [[ $(candidate \"5 7 3\" \"2 6 3\") = \"NO\" ]]\n    [[ $(candidate\
    \ \"3 2 6 1 8 9\" \"3 5 5 1 1 1\") = \"NO\" ]]\n    [[ $(candidate \"100 200\"\
    \ \"200 200\") = \"YES\" ]]\n}\n\nrun_test"
  status: SyntaxError
  stderr: '/tmp/tmpjd219066.sh: line 59: syntax error near unexpected token `}''

    /tmp/tmpjd219066.sh: line 59: `}''

    '
  stdout: ''
  timestamp: 1660002370
- exit_code: 1
  program: "#!/bin/bash\n# In this problem, you will implement a function that takes\
    \ two lists of numbers,\n# and determines whether it is possible to perform an\
    \ exchange of elements\n# between them to make lst1 a list of only even numbers.\n\
    # There is no limit on the number of exchanged elements between lst1 and lst2.\n\
    # If it is possible to exchange elements between the lst1 and lst2 to make\n#\
    \ all the elements of lst1 to be even, return \"YES\".\n# Otherwise, return \"\
    NO\".\n# For example:\n# It is assumed that the input lists will be non-empty.\n\
    #\n# $1 is a space-separated list\n# $2 is a space-separated list\nexchange()\
    \ {\n  local lst1=\"$1\"\n  local lst2=\"$2\"\n  local lst1_even=0\n  local lst2_even=0\n\
    \  local lst1_odd=0\n  local lst2_odd=0\n  local lst1_even_odd=0\n  local lst2_even_odd=0\n\
    \  local lst1_odd_even=0\n  local lst2_odd_even=0\n  local lst1_odd_odd=0\n  local\
    \ lst2_odd_odd=0\n  local lst1_even_even=0\n  local lst2_even_even=0\n  local\
    \ lst1_even_odd_even=0\n  local lst2_even_odd_even=0\n  local lst1_odd_even_odd=0\n\
    \  local lst2_odd_even_odd=0\n  local lst1_odd_odd_even=0\n  local lst2_odd_odd_even=0\n\
    \  local lst1_even_even_odd=0\n  local lst2_even_even_odd=0\n  local lst1_even_odd_odd=0\n\
    \  local lst2_even_odd_odd=0\n  local lst1_odd_even_even=0\n  local lst2_odd_even_even=0\n\
    \  local lst1_odd_odd_odd=0\n  local lst2_odd_odd_odd=0\n  local lst1_even_even_even=0\n\
    \  local lst2_even_even_even=0\n  local lst1_even_odd_even_odd=0\n  local lst2_even_odd_even_odd=0\n\
    \  local lst1_odd_even_odd_even=0\n  local lst2_odd_even_odd_even=0\n  local lst1_odd_odd_even_odd=0\n\
    \  local lst2_odd_odd_even_odd=0\n  local lst1_even_even_odd_even=0\n  local lst2_even_even_odd_even=0\n\
    \  local l\n}\n\ncandidate() {\n    exchange \"$@\"\n}\n\nset -e\nrun_test() {\n\
    \    [[ $(candidate \"1 2 3 4\" \"1 2 3 4\") = \"YES\" ]]\n    [[ $(candidate\
    \ \"1 2 3 4\" \"1 5 3 4\") = \"NO\" ]]\n    [[ $(candidate \"1 2 3 4\" \"2 1 4\
    \ 3\") = \"YES\" ]]\n    [[ $(candidate \"5 7 3\" \"2 6 4\") = \"YES\" ]]\n  \
    \  [[ $(candidate \"5 7 3\" \"2 6 3\") = \"NO\" ]]\n    [[ $(candidate \"3 2 6\
    \ 1 8 9\" \"3 5 5 1 1 1\") = \"NO\" ]]\n    [[ $(candidate \"100 200\" \"200 200\"\
    ) = \"YES\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660002369
- exit_code: 1
  program: "#!/bin/bash\n# In this problem, you will implement a function that takes\
    \ two lists of numbers,\n# and determines whether it is possible to perform an\
    \ exchange of elements\n# between them to make lst1 a list of only even numbers.\n\
    # There is no limit on the number of exchanged elements between lst1 and lst2.\n\
    # If it is possible to exchange elements between the lst1 and lst2 to make\n#\
    \ all the elements of lst1 to be even, return \"YES\".\n# Otherwise, return \"\
    NO\".\n# For example:\n# It is assumed that the input lists will be non-empty.\n\
    #\n# $1 is a space-separated list\n# $2 is a space-separated list\nexchange()\
    \ {\n  local -a lst1=($1)\n  local -a lst2=($2)\n  local -a lst3=()\n  local -a\
    \ lst4=()\n  local -a lst5=()\n  local -a lst6=()\n  local -a lst7=()\n  local\
    \ -a lst8=()\n  local -a lst9=()\n  local -a lst10=()\n  local -a lst11=()\n \
    \ local -a lst12=()\n  local -a lst13=()\n  local -a lst14=()\n  local -a lst15=()\n\
    \  local -a lst16=()\n  local -a lst17=()\n  local -a lst18=()\n  local -a lst19=()\n\
    \  local -a lst20=()\n  local -a lst21=()\n  local -a lst22=()\n  local -a lst23=()\n\
    \  local -a lst24=()\n  local -a lst25=()\n  local -a lst26=()\n  local -a lst27=()\n\
    \  local -a lst28=()\n  local -a lst29=()\n  local -a lst30=()\n  local -a lst31=()\n\
    \  local -a lst32=()\n  local -a lst33=()\n  local -a lst34=()\n  local -a lst35=()\n\
    \  local -a lst36=()\n  local -a lst37=()\n  local -a lst38=()\n  local -a lst39=()\n\
    \  local -a lst40=()\n  local -a lst41=()\n  local -a lst42=()\n  local -a lst43=()\n\
    \  local -a lst44=()\n  local -a lst45=()\n  local -a lst46=()\n  local -a lst47=()\n\
    \  local -a lst48=()\n  local -a lst49=()\n  local -a lst50=()\n  local -a lst51\n\
    }\n\ncandidate() {\n    exchange \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate\
    \ \"1 2 3 4\" \"1 2 3 4\") = \"YES\" ]]\n    [[ $(candidate \"1 2 3 4\" \"1 5\
    \ 3 4\") = \"NO\" ]]\n    [[ $(candidate \"1 2 3 4\" \"2 1 4 3\") = \"YES\" ]]\n\
    \    [[ $(candidate \"5 7 3\" \"2 6 4\") = \"YES\" ]]\n    [[ $(candidate \"5\
    \ 7 3\" \"2 6 3\") = \"NO\" ]]\n    [[ $(candidate \"3 2 6 1 8 9\" \"3 5 5 1 1\
    \ 1\") = \"NO\" ]]\n    [[ $(candidate \"100 200\" \"200 200\") = \"YES\" ]]\n\
    }\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660002370
- exit_code: 1
  program: "#!/bin/bash\n# In this problem, you will implement a function that takes\
    \ two lists of numbers,\n# and determines whether it is possible to perform an\
    \ exchange of elements\n# between them to make lst1 a list of only even numbers.\n\
    # There is no limit on the number of exchanged elements between lst1 and lst2.\n\
    # If it is possible to exchange elements between the lst1 and lst2 to make\n#\
    \ all the elements of lst1 to be even, return \"YES\".\n# Otherwise, return \"\
    NO\".\n# For example:\n# It is assumed that the input lists will be non-empty.\n\
    #\n# $1 is a space-separated list\n# $2 is a space-separated list\nexchange()\
    \ {\n  local lst1=\"$1\"\n  local lst2=\"$2\"\n  local lst1_even=0\n  local lst2_even=0\n\
    \  local lst1_odd=0\n  local lst2_odd=0\n  local lst1_even_odd=0\n  local lst2_even_odd=0\n\
    \  local lst1_odd_even=0\n  local lst2_odd_even=0\n  local lst1_odd_odd=0\n  local\
    \ lst2_odd_odd=0\n  local lst1_even_even=0\n  local lst2_even_even=0\n  local\
    \ lst1_even_odd_even=0\n  local lst2_even_odd_even=0\n  local lst1_odd_even_odd=0\n\
    \  local lst2_odd_even_odd=0\n  local lst1_odd_odd_even=0\n  local lst2_odd_odd_even=0\n\
    \  local lst1_even_even_odd=0\n  local lst2_even_even_odd=0\n  local lst1_even_odd_odd=0\n\
    \  local lst2_even_odd_odd=0\n  local lst1_odd_even_even=0\n  local lst2_odd_even_even=0\n\
    \  local lst1_odd_odd_odd=0\n  local lst2_odd_odd_odd=0\n  local lst1_even_even_even=0\n\
    \  local lst2_even_even_even=0\n  local lst1_odd_odd_odd_even=0\n  local lst2_odd_odd_odd_even=0\n\
    \  local lst1_even_even_even_odd=0\n  local lst2_even_even_even_odd=0\n  local\
    \ lst1_odd_odd_odd_odd=0\n  local lst2_odd_odd_odd_odd=0\n  local lst1_even_even_even_even=0\n\
    \  local lst2_even_even_even_even=0\n  local l\n}\n\ncandidate() {\n    exchange\
    \ \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"1 2 3 4\" \"1 2 3 4\"\
    ) = \"YES\" ]]\n    [[ $(candidate \"1 2 3 4\" \"1 5 3 4\") = \"NO\" ]]\n    [[\
    \ $(candidate \"1 2 3 4\" \"2 1 4 3\") = \"YES\" ]]\n    [[ $(candidate \"5 7\
    \ 3\" \"2 6 4\") = \"YES\" ]]\n    [[ $(candidate \"5 7 3\" \"2 6 3\") = \"NO\"\
    \ ]]\n    [[ $(candidate \"3 2 6 1 8 9\" \"3 5 5 1 1 1\") = \"NO\" ]]\n    [[\
    \ $(candidate \"100 200\" \"200 200\") = \"YES\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660002369
- exit_code: 1
  program: "#!/bin/bash\n# In this problem, you will implement a function that takes\
    \ two lists of numbers,\n# and determines whether it is possible to perform an\
    \ exchange of elements\n# between them to make lst1 a list of only even numbers.\n\
    # There is no limit on the number of exchanged elements between lst1 and lst2.\n\
    # If it is possible to exchange elements between the lst1 and lst2 to make\n#\
    \ all the elements of lst1 to be even, return \"YES\".\n# Otherwise, return \"\
    NO\".\n# For example:\n# It is assumed that the input lists will be non-empty.\n\
    #\n# $1 is a space-separated list\n# $2 is a space-separated list\nexchange()\
    \ {\n  local lst1=($1)\n  local lst2=($2)\n  local lst1_even=()\n  local lst1_odd=()\n\
    \  local lst2_even=()\n  local lst2_odd=()\n  local lst1_even_count=0\n  local\
    \ lst1_odd_count=0\n  local lst2_even_count=0\n  local lst2_odd_count=0\n  local\
    \ i\n  local j\n  local k\n  local l\n  local m\n  local n\n  local o\n  local\
    \ p\n  local q\n  local r\n  local s\n  local t\n  local u\n  local v\n  local\
    \ w\n  local x\n  local y\n  local z\n  local aa\n  local bb\n  local cc\n  local\
    \ dd\n  local ee\n  local ff\n  local gg\n  local hh\n  local ii\n  local jj\n\
    \  local kk\n  local ll\n  local mm\n  local nn\n  local oo\n  local pp\n  local\
    \ qq\n  local rr\n  local ss\n  local tt\n  local uu\n  local vv\n  local ww\n\
    \  local xx\n  local yy\n  local zz\n  local aaa\n  local bbb\n  local ccc\n \
    \ local ddd\n  local eee\n  local fff\n  local ggg\n  local hhh\n  local iii\n\
    \  local jjj\n  local kkk\n  local lll\n  local mmm\n  local nnn\n  local ooo\n\
    \  local ppp\n  local qqq\n  local rrr\n  local sss\n  local ttt\n  local uuu\n\
    \  local vvv\n  local www\n  local xxx\n  local yyy\n  local zzz\n  local aaaa\n\
    \  local bbbb\n  local cccc\n  local dddd\n  local eeee\n  local ffff\n  local\
    \ gggg\n  local hhhh\n  local iiii\n  local jjjj\n  local kkkk\n  local llll\n\
    \  local mmmm\n  local nnnn\n  local oooo\n}\n\ncandidate() {\n    exchange \"\
    $@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"1 2 3 4\" \"1 2 3 4\") =\
    \ \"YES\" ]]\n    [[ $(candidate \"1 2 3 4\" \"1 5 3 4\") = \"NO\" ]]\n    [[\
    \ $(candidate \"1 2 3 4\" \"2 1 4 3\") = \"YES\" ]]\n    [[ $(candidate \"5 7\
    \ 3\" \"2 6 4\") = \"YES\" ]]\n    [[ $(candidate \"5 7 3\" \"2 6 3\") = \"NO\"\
    \ ]]\n    [[ $(candidate \"3 2 6 1 8 9\" \"3 5 5 1 1 1\") = \"NO\" ]]\n    [[\
    \ $(candidate \"100 200\" \"200 200\") = \"YES\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660002370
- exit_code: 1
  program: "#!/bin/bash\n# In this problem, you will implement a function that takes\
    \ two lists of numbers,\n# and determines whether it is possible to perform an\
    \ exchange of elements\n# between them to make lst1 a list of only even numbers.\n\
    # There is no limit on the number of exchanged elements between lst1 and lst2.\n\
    # If it is possible to exchange elements between the lst1 and lst2 to make\n#\
    \ all the elements of lst1 to be even, return \"YES\".\n# Otherwise, return \"\
    NO\".\n# For example:\n# It is assumed that the input lists will be non-empty.\n\
    #\n# $1 is a space-separated list\n# $2 is a space-separated list\nexchange()\
    \ {\n  local lst1=($1)\n  local lst2=($2)\n  local lst1_len=${#lst1[@]}\n  local\
    \ lst2_len=${#lst2[@]}\n  local lst1_odd_count=0\n  local lst2_odd_count=0\n \
    \ local i=0\n  local j=0\n  local lst1_odd_index=0\n  local lst2_odd_index=0\n\
    \  local lst1_odd_value=0\n  local lst2_odd_value=0\n  local lst1_even_count=0\n\
    \  local lst2_even_count=0\n  local lst1_even_index=0\n  local lst2_even_index=0\n\
    \  local lst1_even_value=0\n  local lst2_even_value=0\n  local lst1_even_index_list=()\n\
    \  local lst2_even_index_list=()\n  local lst1_odd_index_list=()\n  local lst2_odd_index_list=()\n\
    \  local lst1_even_value_list=()\n  local lst2_even_value_list=()\n  local lst1_odd_value_list=()\n\
    \  local lst2_odd_value_list=()\n  local lst1_even_index_list_len=0\n  local lst2_even_index_list_len=0\n\
    \  local lst1_odd_index_list_len=0\n  local lst2_odd_index_list_len=0\n  local\
    \ lst1_even_value_list_len=0\n  local lst2_even_value_list_len=0\n  local lst1_odd_value_list_len=0\n\
    \  local lst2_odd_value_list_len=0\n  local lst1_even_index_list_index=0\n  local\
    \ lst2_even_index_list_index=0\n  local lst1_odd_index_list_index=0\n  local lst2_odd_index_list_index\n\
    }\n\ncandidate() {\n    exchange \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate\
    \ \"1 2 3 4\" \"1 2 3 4\") = \"YES\" ]]\n    [[ $(candidate \"1 2 3 4\" \"1 5\
    \ 3 4\") = \"NO\" ]]\n    [[ $(candidate \"1 2 3 4\" \"2 1 4 3\") = \"YES\" ]]\n\
    \    [[ $(candidate \"5 7 3\" \"2 6 4\") = \"YES\" ]]\n    [[ $(candidate \"5\
    \ 7 3\" \"2 6 3\") = \"NO\" ]]\n    [[ $(candidate \"3 2 6 1 8 9\" \"3 5 5 1 1\
    \ 1\") = \"NO\" ]]\n    [[ $(candidate \"100 200\" \"200 200\") = \"YES\" ]]\n\
    }\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660002370
- exit_code: 1
  program: "#!/bin/bash\n# In this problem, you will implement a function that takes\
    \ two lists of numbers,\n# and determines whether it is possible to perform an\
    \ exchange of elements\n# between them to make lst1 a list of only even numbers.\n\
    # There is no limit on the number of exchanged elements between lst1 and lst2.\n\
    # If it is possible to exchange elements between the lst1 and lst2 to make\n#\
    \ all the elements of lst1 to be even, return \"YES\".\n# Otherwise, return \"\
    NO\".\n# For example:\n# It is assumed that the input lists will be non-empty.\n\
    #\n# $1 is a space-separated list\n# $2 is a space-separated list\nexchange()\
    \ {\n  local lst1=\"$1\"\n  local lst2=\"$2\"\n  local lst1_even=0\n  local lst2_even=0\n\
    \  local lst1_odd=0\n  local lst2_odd=0\n  local lst1_total=0\n  local lst2_total=0\n\
    \  local lst1_even_odd=0\n  local lst2_even_odd=0\n  local lst1_odd_even=0\n \
    \ local lst2_odd_even=0\n  local lst1_even_even=0\n  local lst2_even_even=0\n\
    \  local lst1_odd_odd=0\n  local lst2_odd_odd=0\n  local lst1_even_odd_even=0\n\
    \  local lst2_even_odd_even=0\n  local lst1_odd_even_odd=0\n  local lst2_odd_even_odd=0\n\
    \  local lst1_even_even_even=0\n  local lst2_even_even_even=0\n  local lst1_odd_odd_odd=0\n\
    \  local lst2_odd_odd_odd=0\n  local lst1_even_odd_even_even=0\n  local lst2_even_odd_even_even=0\n\
    \  local lst1_odd_even_odd_odd=0\n  local lst2_odd_even_odd_odd=0\n  local lst1_even_even_even_even=0\n\
    \  local lst2_even_even_even_even=0\n  local lst1_odd_odd_odd_odd=0\n  local lst2_odd_odd_odd_odd=0\n\
    \  local lst1_even_odd_even_even_even=0\n  local lst2_even_odd_even_even_even=0\n\
    \  local lst1_odd_even_odd_odd_odd=0\n  local lst2_odd_even_odd_odd_odd=0\n  local\
    \ lst1_even_even_even_even_even=0\n  local lst2\n}\n\ncandidate() {\n    exchange\
    \ \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"1 2 3 4\" \"1 2 3 4\"\
    ) = \"YES\" ]]\n    [[ $(candidate \"1 2 3 4\" \"1 5 3 4\") = \"NO\" ]]\n    [[\
    \ $(candidate \"1 2 3 4\" \"2 1 4 3\") = \"YES\" ]]\n    [[ $(candidate \"5 7\
    \ 3\" \"2 6 4\") = \"YES\" ]]\n    [[ $(candidate \"5 7 3\" \"2 6 3\") = \"NO\"\
    \ ]]\n    [[ $(candidate \"3 2 6 1 8 9\" \"3 5 5 1 1 1\") = \"NO\" ]]\n    [[\
    \ $(candidate \"100 200\" \"200 200\") = \"YES\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660002370
- exit_code: 0
  program: "#!/bin/bash\n# In this problem, you will implement a function that takes\
    \ two lists of numbers,\n# and determines whether it is possible to perform an\
    \ exchange of elements\n# between them to make lst1 a list of only even numbers.\n\
    # There is no limit on the number of exchanged elements between lst1 and lst2.\n\
    # If it is possible to exchange elements between the lst1 and lst2 to make\n#\
    \ all the elements of lst1 to be even, return \"YES\".\n# Otherwise, return \"\
    NO\".\n# For example:\n# It is assumed that the input lists will be non-empty.\n\
    #\n# $1 is a space-separated list\n# $2 is a space-separated list\nexchange()\
    \ {\n  local lst1=($1)\n  local lst2=($2)\n  local lst1_even=0\n  local lst2_even=0\n\
    \  local lst1_odd=0\n  local lst2_odd=0\n  for i in ${lst1[@]}; do\n    if [ $((i\
    \ % 2)) -eq 0 ]; then\n      lst1_even=$((lst1_even + 1))\n    else\n      lst1_odd=$((lst1_odd\
    \ + 1))\n    fi\n  done\n  for i in ${lst2[@]}; do\n    if [ $((i % 2)) -eq 0\
    \ ]; then\n      lst2_even=$((lst2_even + 1))\n    else\n      lst2_odd=$((lst2_odd\
    \ + 1))\n    fi\n  done\n  if [ $lst1_even -eq ${#lst1[@]} ]; then\n    echo \"\
    YES\"\n  elif [ $lst2_even -eq ${#lst2[@]} ]; then\n    echo \"YES\"\n  elif [\
    \ $lst1_even -eq 0 ]; then\n    echo \"NO\"\n  elif [ $lst2_even -eq 0 ]; then\n\
    \    echo \"NO\"\n  elif [ $lst1_odd -eq 0 ]; then\n    echo \"YES\"\n  elif [\
    \ $lst2_odd -eq 0 ]; then\n    echo \"YES\"\n  elif [ $lst1_even -eq $lst2_odd\
    \ ]; then\n    echo \"YES\"\n  elif [ $lst2_even -eq $lst1_odd ]; then\n    echo\
    \ \"YES\"\n  else\n    echo \"NO\"\n  fi\n}\n\ncandidate() {\n    exchange \"\
    $@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"1 2 3 4\" \"1 2 3 4\") =\
    \ \"YES\" ]]\n    [[ $(candidate \"1 2 3 4\" \"1 5 3 4\") = \"NO\" ]]\n    [[\
    \ $(candidate \"1 2 3 4\" \"2 1 4 3\") = \"YES\" ]]\n    [[ $(candidate \"5 7\
    \ 3\" \"2 6 4\") = \"YES\" ]]\n    [[ $(candidate \"5 7 3\" \"2 6 3\") = \"NO\"\
    \ ]]\n    [[ $(candidate \"3 2 6 1 8 9\" \"3 5 5 1 1 1\") = \"NO\" ]]\n    [[\
    \ $(candidate \"100 200\" \"200 200\") = \"YES\" ]]\n}\n\nrun_test"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660002369
- exit_code: 1
  program: "#!/bin/bash\n# In this problem, you will implement a function that takes\
    \ two lists of numbers,\n# and determines whether it is possible to perform an\
    \ exchange of elements\n# between them to make lst1 a list of only even numbers.\n\
    # There is no limit on the number of exchanged elements between lst1 and lst2.\n\
    # If it is possible to exchange elements between the lst1 and lst2 to make\n#\
    \ all the elements of lst1 to be even, return \"YES\".\n# Otherwise, return \"\
    NO\".\n# For example:\n# It is assumed that the input lists will be non-empty.\n\
    #\n# $1 is a space-separated list\n# $2 is a space-separated list\nexchange()\
    \ {\n  local lst1=($1)\n  local lst2=($2)\n  local lst1_odds=()\n  local lst2_evens=()\n\
    \  local lst1_evens=()\n  local lst2_odds=()\n  local i=0\n  local j=0\n  local\
    \ k=0\n  local l=0\n  local m=0\n  local n=0\n  local o=0\n  local p=0\n  local\
    \ q=0\n  local r=0\n  local s=0\n  local t=0\n  local u=0\n  local v=0\n  local\
    \ w=0\n  local x=0\n  local y=0\n  local z=0\n  local aa=0\n  local bb=0\n  local\
    \ cc=0\n  local dd=0\n  local ee=0\n  local ff=0\n  local gg=0\n  local hh=0\n\
    \  local ii=0\n  local jj=0\n  local kk=0\n  local ll=0\n  local mm=0\n  local\
    \ nn=0\n  local oo=0\n  local pp=0\n  local qq=0\n  local rr=0\n  local ss=0\n\
    \  local tt=0\n  local uu=0\n  local vv=0\n  local ww=0\n  local xx=0\n  local\
    \ yy=0\n  local zz=0\n  local aaa=0\n  local bbb=0\n  local ccc=0\n  local ddd=0\n\
    \  local eee=0\n  local fff=0\n  local ggg=0\n  local hhh=0\n  local iii=0\n \
    \ local jjj=0\n  local kkk=0\n  local lll=0\n  local mmm=0\n  local nnn=0\n  local\
    \ ooo=0\n  local ppp=0\n  local qqq=0\n  local rrr=0\n  local sss=0\n  local ttt=0\n\
    \  local uuu=0\n  local vvv=0\n  local www=0\n  local xxx=0\n\n}\n\ncandidate()\
    \ {\n    exchange \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"1 2\
    \ 3 4\" \"1 2 3 4\") = \"YES\" ]]\n    [[ $(candidate \"1 2 3 4\" \"1 5 3 4\"\
    ) = \"NO\" ]]\n    [[ $(candidate \"1 2 3 4\" \"2 1 4 3\") = \"YES\" ]]\n    [[\
    \ $(candidate \"5 7 3\" \"2 6 4\") = \"YES\" ]]\n    [[ $(candidate \"5 7 3\"\
    \ \"2 6 3\") = \"NO\" ]]\n    [[ $(candidate \"3 2 6 1 8 9\" \"3 5 5 1 1 1\")\
    \ = \"NO\" ]]\n    [[ $(candidate \"100 200\" \"200 200\") = \"YES\" ]]\n}\n\n\
    run_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660002370
- exit_code: 1
  program: "#!/bin/bash\n# In this problem, you will implement a function that takes\
    \ two lists of numbers,\n# and determines whether it is possible to perform an\
    \ exchange of elements\n# between them to make lst1 a list of only even numbers.\n\
    # There is no limit on the number of exchanged elements between lst1 and lst2.\n\
    # If it is possible to exchange elements between the lst1 and lst2 to make\n#\
    \ all the elements of lst1 to be even, return \"YES\".\n# Otherwise, return \"\
    NO\".\n# For example:\n# It is assumed that the input lists will be non-empty.\n\
    #\n# $1 is a space-separated list\n# $2 is a space-separated list\nexchange()\
    \ {\n  local lst1=($1)\n  local lst2=($2)\n  local lst1_even=0\n  local lst2_even=0\n\
    \  local lst1_odd=0\n  local lst2_odd=0\n  local i=0\n  local j=0\n  local lst1_len=${#lst1[@]}\n\
    \  local lst2_len=${#lst2[@]}\n  for ((i=0; i<lst1_len; i++)); do\n    if [[ $((${lst1[$i]}\
    \ % 2)) -eq 0 ]]; then\n      lst1_even=$(($lst1_even + 1))\n    else\n      lst1_odd=$(($lst1_odd\
    \ + 1))\n    fi\n  done\n  for ((j=0; j<lst2_len; j++)); do\n    if [[ $((${lst2[$j]}\
    \ % 2)) -eq 0 ]]; then\n      lst2_even=$(($lst2_even + 1))\n    else\n      lst2_odd=$(($lst2_odd\
    \ + 1))\n    fi\n  done\n  if [[ $lst1_even -eq $lst1_len ]]; then\n    echo \"\
    YES\"\n  elif [[ $lst1_even -eq 0 ]]; then\n    echo \"NO\"\n  elif [[ $lst1_even\
    \ -eq $lst2_even ]]; then\n    echo \"YES\"\n  elif [[ $lst1_even -eq $lst2_odd\
    \ ]]; then\n    echo \"YES\"\n  else\n    echo \"NO\"\n  fi\n}\n\ncandidate()\
    \ {\n    exchange \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"1 2\
    \ 3 4\" \"1 2 3 4\") = \"YES\" ]]\n    [[ $(candidate \"1 2 3 4\" \"1 5 3 4\"\
    ) = \"NO\" ]]\n    [[ $(candidate \"1 2 3 4\" \"2 1 4 3\") = \"YES\" ]]\n    [[\
    \ $(candidate \"5 7 3\" \"2 6 4\") = \"YES\" ]]\n    [[ $(candidate \"5 7 3\"\
    \ \"2 6 3\") = \"NO\" ]]\n    [[ $(candidate \"3 2 6 1 8 9\" \"3 5 5 1 1 1\")\
    \ = \"NO\" ]]\n    [[ $(candidate \"100 200\" \"200 200\") = \"YES\" ]]\n}\n\n\
    run_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660002370
- exit_code: 1
  program: "#!/bin/bash\n# In this problem, you will implement a function that takes\
    \ two lists of numbers,\n# and determines whether it is possible to perform an\
    \ exchange of elements\n# between them to make lst1 a list of only even numbers.\n\
    # There is no limit on the number of exchanged elements between lst1 and lst2.\n\
    # If it is possible to exchange elements between the lst1 and lst2 to make\n#\
    \ all the elements of lst1 to be even, return \"YES\".\n# Otherwise, return \"\
    NO\".\n# For example:\n# It is assumed that the input lists will be non-empty.\n\
    #\n# $1 is a space-separated list\n# $2 is a space-separated list\nexchange()\
    \ {\n  local lst1=($1)\n  local lst2=($2)\n  local lst1_even=()\n  local lst1_odd=()\n\
    \  local lst2_even=()\n  local lst2_odd=()\n  local lst1_even_count=0\n  local\
    \ lst1_odd_count=0\n  local lst2_even_count=0\n  local lst2_odd_count=0\n  local\
    \ lst1_even_odd_diff=0\n  local lst2_even_odd_diff=0\n  local lst1_even_odd_diff_abs=0\n\
    \  local lst2_even_odd_diff_abs=0\n  local lst1_even_odd_diff_abs_sum=0\n  local\
    \ lst2_even_odd_diff_abs_sum=0\n  local lst1_even_odd_diff_abs_sum_diff=0\n  local\
    \ lst2_even_odd_diff_abs_sum_diff=0\n  local lst1_even_odd_diff_abs_sum_diff_abs=0\n\
    \  local lst2_even_odd_diff_abs_sum_diff_abs=0\n  local lst1_even_odd_diff_abs_sum_diff_abs_sum=0\n\
    \  local lst2_even_odd_diff_abs_sum_diff_abs_sum=0\n  local lst1_even_odd_diff_abs_sum_diff_abs_sum_diff=0\n\
    \  local lst2_even_odd_diff_abs_sum_diff_abs_sum_diff=0\n  local lst1_even_odd_diff_abs_sum_diff_abs_sum_diff_abs=0\n\
    \  local lst2_even_odd_diff_abs_sum_diff_abs_sum_diff_abs=0\n  local lst1_even_odd_diff_abs_sum_diff_abs_sum_diff_abs_sum=0\n\
    \  local lst2_even_odd_diff_abs_sum_diff_abs_sum_diff_abs_sum=0\n  local lst1_even\n\
    }\n\ncandidate() {\n    exchange \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate\
    \ \"1 2 3 4\" \"1 2 3 4\") = \"YES\" ]]\n    [[ $(candidate \"1 2 3 4\" \"1 5\
    \ 3 4\") = \"NO\" ]]\n    [[ $(candidate \"1 2 3 4\" \"2 1 4 3\") = \"YES\" ]]\n\
    \    [[ $(candidate \"5 7 3\" \"2 6 4\") = \"YES\" ]]\n    [[ $(candidate \"5\
    \ 7 3\" \"2 6 3\") = \"NO\" ]]\n    [[ $(candidate \"3 2 6 1 8 9\" \"3 5 5 1 1\
    \ 1\") = \"NO\" ]]\n    [[ $(candidate \"100 200\" \"200 200\") = \"YES\" ]]\n\
    }\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660002370
- exit_code: 1
  program: "#!/bin/bash\n# In this problem, you will implement a function that takes\
    \ two lists of numbers,\n# and determines whether it is possible to perform an\
    \ exchange of elements\n# between them to make lst1 a list of only even numbers.\n\
    # There is no limit on the number of exchanged elements between lst1 and lst2.\n\
    # If it is possible to exchange elements between the lst1 and lst2 to make\n#\
    \ all the elements of lst1 to be even, return \"YES\".\n# Otherwise, return \"\
    NO\".\n# For example:\n# It is assumed that the input lists will be non-empty.\n\
    #\n# $1 is a space-separated list\n# $2 is a space-separated list\nexchange()\
    \ {\n  local lst1=($1)\n  local lst2=($2)\n  local lst1_even=()\n  local lst1_odd=()\n\
    \  local lst2_even=()\n  local lst2_odd=()\n  local i=0\n  local j=0\n  local\
    \ k=0\n  local l=0\n  local even_count=0\n  local odd_count=0\n  local even_count_lst2=0\n\
    \  local odd_count_lst2=0\n  local exchange_count=0\n  local exchange_count_lst2=0\n\
    \  local exchange_count_lst1=0\n  local exchange_count_lst2=0\n  local exchange_count_lst1_lst2=0\n\
    \  local exchange_count_lst2_lst1=0\n  local exchange_count_lst1_lst2_lst1=0\n\
    \  local exchange_count_lst2_lst1_lst2=0\n  local exchange_count_lst1_lst2_lst1_lst2=0\n\
    \  local exchange_count_lst2_lst1_lst2_lst1=0\n  local exchange_count_lst1_lst2_lst1_lst2_lst1=0\n\
    \  local exchange_count_lst2_lst1_lst2_lst1_lst2=0\n  local exchange_count_lst1_lst2_lst1_lst2_lst1_lst2=0\n\
    \  local exchange_count_lst2_lst1_lst2_lst1_lst2_lst1=0\n  local exchange_count_lst1_lst2_lst1_lst2_lst1_lst2_lst1=0\n\
    \  local exchange_count_lst2_lst1_lst2_lst1_lst2_lst1_lst2=0\n  local exchange_count_lst1_lst2_lst1_lst2_lst1_lst2_l\n\
    }\n\ncandidate() {\n    exchange \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate\
    \ \"1 2 3 4\" \"1 2 3 4\") = \"YES\" ]]\n    [[ $(candidate \"1 2 3 4\" \"1 5\
    \ 3 4\") = \"NO\" ]]\n    [[ $(candidate \"1 2 3 4\" \"2 1 4 3\") = \"YES\" ]]\n\
    \    [[ $(candidate \"5 7 3\" \"2 6 4\") = \"YES\" ]]\n    [[ $(candidate \"5\
    \ 7 3\" \"2 6 3\") = \"NO\" ]]\n    [[ $(candidate \"3 2 6 1 8 9\" \"3 5 5 1 1\
    \ 1\") = \"NO\" ]]\n    [[ $(candidate \"100 200\" \"200 200\") = \"YES\" ]]\n\
    }\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660002370
- exit_code: 1
  program: "#!/bin/bash\n# In this problem, you will implement a function that takes\
    \ two lists of numbers,\n# and determines whether it is possible to perform an\
    \ exchange of elements\n# between them to make lst1 a list of only even numbers.\n\
    # There is no limit on the number of exchanged elements between lst1 and lst2.\n\
    # If it is possible to exchange elements between the lst1 and lst2 to make\n#\
    \ all the elements of lst1 to be even, return \"YES\".\n# Otherwise, return \"\
    NO\".\n# For example:\n# It is assumed that the input lists will be non-empty.\n\
    #\n# $1 is a space-separated list\n# $2 is a space-separated list\nexchange()\
    \ {\n    local lst1=($1)\n    local lst2=($2)\n    local lst1_odd=()\n    local\
    \ lst2_even=()\n    local lst1_even=()\n    local lst2_odd=()\n    local lst1_even_count=0\n\
    \    local lst2_even_count=0\n    local lst1_odd_count=0\n    local lst2_odd_count=0\n\
    \    local i=0\n    local j=0\n    local k=0\n    local l=0\n    local m=0\n \
    \   local n=0\n    local o=0\n    local p=0\n    local q=0\n    local r=0\n  \
    \  local s=0\n    local t=0\n    local u=0\n    local v=0\n    local w=0\n   \
    \ local x=0\n    local y=0\n    local z=0\n    local aa=0\n    local bb=0\n  \
    \  local cc=0\n    local dd=0\n    local ee=0\n    local ff=0\n    local gg=0\n\
    \    local hh=0\n    local ii=0\n    local jj=0\n    local kk=0\n    local ll=0\n\
    \    local mm=0\n    local nn=0\n    local oo=0\n    local pp=0\n    local qq=0\n\
    \    local rr=0\n    local ss=0\n    local tt=0\n    local uu=0\n    local vv=0\n\
    \    local ww=0\n    local xx=0\n    local yy=0\n    local zz=0\n    local aaa=0\n\
    \    local bbb=0\n    local ccc=0\n    local ddd=0\n    local eee=0\n    local\
    \ fff=0\n    local ggg=0\n    local hhh=0\n    local iii=0\n    local jjj=0\n\
    \    local kkk=0\n    local lll=0\n    local mmm=0\n    local nnn=0\n    local\
    \ ooo=0\n    local ppp=0\n    local qqq=0\n    local rrr\n}\n\ncandidate() {\n\
    \    exchange \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"1 2 3 4\"\
    \ \"1 2 3 4\") = \"YES\" ]]\n    [[ $(candidate \"1 2 3 4\" \"1 5 3 4\") = \"\
    NO\" ]]\n    [[ $(candidate \"1 2 3 4\" \"2 1 4 3\") = \"YES\" ]]\n    [[ $(candidate\
    \ \"5 7 3\" \"2 6 4\") = \"YES\" ]]\n    [[ $(candidate \"5 7 3\" \"2 6 3\") =\
    \ \"NO\" ]]\n    [[ $(candidate \"3 2 6 1 8 9\" \"3 5 5 1 1 1\") = \"NO\" ]]\n\
    \    [[ $(candidate \"100 200\" \"200 200\") = \"YES\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660002369
- exit_code: 1
  program: "#!/bin/bash\n# In this problem, you will implement a function that takes\
    \ two lists of numbers,\n# and determines whether it is possible to perform an\
    \ exchange of elements\n# between them to make lst1 a list of only even numbers.\n\
    # There is no limit on the number of exchanged elements between lst1 and lst2.\n\
    # If it is possible to exchange elements between the lst1 and lst2 to make\n#\
    \ all the elements of lst1 to be even, return \"YES\".\n# Otherwise, return \"\
    NO\".\n# For example:\n# It is assumed that the input lists will be non-empty.\n\
    #\n# $1 is a space-separated list\n# $2 is a space-separated list\nexchange()\
    \ {\n    local lst1=($1)\n    local lst2=($2)\n    local lst1_odd=()\n    local\
    \ lst2_even=()\n    local lst1_even=()\n    local lst2_odd=()\n    local i=0\n\
    \    local j=0\n    local k=0\n    local l=0\n    local m=0\n    local n=0\n \
    \   local o=0\n    local p=0\n    local q=0\n    local r=0\n    local s=0\n  \
    \  local t=0\n    local u=0\n    local v=0\n    local w=0\n    local x=0\n   \
    \ local y=0\n    local z=0\n    local aa=0\n    local bb=0\n    local cc=0\n \
    \   local dd=0\n    local ee=0\n    local ff=0\n    local gg=0\n    local hh=0\n\
    \    local ii=0\n    local jj=0\n    local kk=0\n    local ll=0\n    local mm=0\n\
    \    local nn=0\n    local oo=0\n    local pp=0\n    local qq=0\n    local rr=0\n\
    \    local ss=0\n    local tt=0\n    local uu=0\n    local vv=0\n    local ww=0\n\
    \    local xx=0\n    local yy=0\n    local zz=0\n    local aaa=0\n    local bbb=0\n\
    \    local ccc=0\n    local ddd=0\n    local eee=0\n    local fff=0\n    local\
    \ ggg=0\n    local hhh=0\n    local iii=0\n    local jjj=0\n    local kkk=0\n\
    \    local lll=0\n    local mmm=0\n    local nnn=0\n    local ooo=0\n    local\
    \ ppp=0\n    local qqq=0\n    local rrr=0\n    local sss=0\n    local ttt=0\n\
    \    local uuu=0\n    local vvv=0\n    local www=0\n    local xxx=0\n    local\
    \ yyy\n}\n\ncandidate() {\n    exchange \"$@\"\n}\n\nset -e\nrun_test() {\n  \
    \  [[ $(candidate \"1 2 3 4\" \"1 2 3 4\") = \"YES\" ]]\n    [[ $(candidate \"\
    1 2 3 4\" \"1 5 3 4\") = \"NO\" ]]\n    [[ $(candidate \"1 2 3 4\" \"2 1 4 3\"\
    ) = \"YES\" ]]\n    [[ $(candidate \"5 7 3\" \"2 6 4\") = \"YES\" ]]\n    [[ $(candidate\
    \ \"5 7 3\" \"2 6 3\") = \"NO\" ]]\n    [[ $(candidate \"3 2 6 1 8 9\" \"3 5 5\
    \ 1 1 1\") = \"NO\" ]]\n    [[ $(candidate \"100 200\" \"200 200\") = \"YES\"\
    \ ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660002369
- exit_code: 1
  program: "#!/bin/bash\n# In this problem, you will implement a function that takes\
    \ two lists of numbers,\n# and determines whether it is possible to perform an\
    \ exchange of elements\n# between them to make lst1 a list of only even numbers.\n\
    # There is no limit on the number of exchanged elements between lst1 and lst2.\n\
    # If it is possible to exchange elements between the lst1 and lst2 to make\n#\
    \ all the elements of lst1 to be even, return \"YES\".\n# Otherwise, return \"\
    NO\".\n# For example:\n# It is assumed that the input lists will be non-empty.\n\
    #\n# $1 is a space-separated list\n# $2 is a space-separated list\nexchange()\
    \ {\n  local lst1=($1)\n  local lst2=($2)\n  local lst1_even=()\n  local lst1_odd=()\n\
    \  local lst2_even=()\n  local lst2_odd=()\n  local lst1_even_count=0\n  local\
    \ lst1_odd_count=0\n  local lst2_even_count=0\n  local lst2_odd_count=0\n  local\
    \ lst1_even_odd_count=0\n  local lst2_even_odd_count=0\n  local lst1_odd_even_count=0\n\
    \  local lst2_odd_even_count=0\n  local lst1_odd_odd_count=0\n  local lst2_odd_odd_count=0\n\
    \  local lst1_even_even_count=0\n  local lst2_even_even_count=0\n  local lst1_even_odd_count=0\n\
    \  local lst2_even_odd_count=0\n  local lst1_odd_even_count=0\n  local lst2_odd_even_count=0\n\
    \  local lst1_odd_odd_count=0\n  local lst2_odd_odd_count=0\n  local lst1_even_even_count=0\n\
    \  local lst2_even_even_count=0\n  local lst1_even_odd_count=0\n  local lst2_even_odd_count=0\n\
    \  local lst1_odd_even_count=0\n  local lst2_odd_even_count=0\n  local lst1_odd_odd_count=0\n\
    \  local lst2_odd_odd_count=0\n  local lst1_even_even_count=0\n  local lst2_even_even_count=0\n\
    \  local lst1_even_odd_count=0\n  local lst2_even_odd_count=0\n  local lst1_odd_even_count=0\n\
    \  local lst2_odd_even_count=0\n  local lst1_odd_odd_count\n}\n\ncandidate() {\n\
    \    exchange \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"1 2 3 4\"\
    \ \"1 2 3 4\") = \"YES\" ]]\n    [[ $(candidate \"1 2 3 4\" \"1 5 3 4\") = \"\
    NO\" ]]\n    [[ $(candidate \"1 2 3 4\" \"2 1 4 3\") = \"YES\" ]]\n    [[ $(candidate\
    \ \"5 7 3\" \"2 6 4\") = \"YES\" ]]\n    [[ $(candidate \"5 7 3\" \"2 6 3\") =\
    \ \"NO\" ]]\n    [[ $(candidate \"3 2 6 1 8 9\" \"3 5 5 1 1 1\") = \"NO\" ]]\n\
    \    [[ $(candidate \"100 200\" \"200 200\") = \"YES\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660002370
- exit_code: 1
  program: "#!/bin/bash\n# In this problem, you will implement a function that takes\
    \ two lists of numbers,\n# and determines whether it is possible to perform an\
    \ exchange of elements\n# between them to make lst1 a list of only even numbers.\n\
    # There is no limit on the number of exchanged elements between lst1 and lst2.\n\
    # If it is possible to exchange elements between the lst1 and lst2 to make\n#\
    \ all the elements of lst1 to be even, return \"YES\".\n# Otherwise, return \"\
    NO\".\n# For example:\n# It is assumed that the input lists will be non-empty.\n\
    #\n# $1 is a space-separated list\n# $2 is a space-separated list\nexchange()\
    \ {\n  local lst1=($1)\n  local lst2=($2)\n  local lst1_even=()\n  local lst1_odd=()\n\
    \  local lst2_even=()\n  local lst2_odd=()\n  local i=0\n  local j=0\n  local\
    \ k=0\n  local l=0\n  local m=0\n  local n=0\n  local o=0\n  local p=0\n  local\
    \ q=0\n  local r=0\n  local s=0\n  local t=0\n  local u=0\n  local v=0\n  local\
    \ w=0\n  local x=0\n  local y=0\n  local z=0\n  local aa=0\n  local bb=0\n  local\
    \ cc=0\n  local dd=0\n  local ee=0\n  local ff=0\n  local gg=0\n  local hh=0\n\
    \  local ii=0\n  local jj=0\n  local kk=0\n  local ll=0\n  local mm=0\n  local\
    \ nn=0\n  local oo=0\n  local pp=0\n  local qq=0\n  local rr=0\n  local ss=0\n\
    \  local tt=0\n  local uu=0\n  local vv=0\n  local ww=0\n  local xx=0\n  local\
    \ yy=0\n  local zz=0\n  local aaa=0\n  local bbb=0\n  local ccc=0\n  local ddd=0\n\
    \  local eee=0\n  local fff=0\n  local ggg=0\n  local hhh=0\n  local iii=0\n \
    \ local jjj=0\n  local kkk=0\n  local lll=0\n  local mmm=0\n  local nnn=0\n  local\
    \ ooo=0\n  local ppp=0\n  local qqq=0\n  local rrr=0\n  local sss=0\n  local ttt=0\n\
    \  local uuu=0\n  local vvv=0\n  local www=0\n  local xxx=0\n  local yyy\n}\n\n\
    candidate() {\n    exchange \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate\
    \ \"1 2 3 4\" \"1 2 3 4\") = \"YES\" ]]\n    [[ $(candidate \"1 2 3 4\" \"1 5\
    \ 3 4\") = \"NO\" ]]\n    [[ $(candidate \"1 2 3 4\" \"2 1 4 3\") = \"YES\" ]]\n\
    \    [[ $(candidate \"5 7 3\" \"2 6 4\") = \"YES\" ]]\n    [[ $(candidate \"5\
    \ 7 3\" \"2 6 3\") = \"NO\" ]]\n    [[ $(candidate \"3 2 6 1 8 9\" \"3 5 5 1 1\
    \ 1\") = \"NO\" ]]\n    [[ $(candidate \"100 200\" \"200 200\") = \"YES\" ]]\n\
    }\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660002370
- exit_code: 1
  program: "#!/bin/bash\n# In this problem, you will implement a function that takes\
    \ two lists of numbers,\n# and determines whether it is possible to perform an\
    \ exchange of elements\n# between them to make lst1 a list of only even numbers.\n\
    # There is no limit on the number of exchanged elements between lst1 and lst2.\n\
    # If it is possible to exchange elements between the lst1 and lst2 to make\n#\
    \ all the elements of lst1 to be even, return \"YES\".\n# Otherwise, return \"\
    NO\".\n# For example:\n# It is assumed that the input lists will be non-empty.\n\
    #\n# $1 is a space-separated list\n# $2 is a space-separated list\nexchange()\
    \ {\n    local -a lst1=($1)\n    local -a lst2=($2)\n    local -a evens=()\n \
    \   local -a odds=()\n    local -a result=()\n    local -i i=0\n    local -i j=0\n\
    \    local -i k=0\n    local -i l=0\n    local -i m=0\n    local -i n=0\n    local\
    \ -i o=0\n    local -i p=0\n    local -i q=0\n    local -i r=0\n    local -i s=0\n\
    \    local -i t=0\n    local -i u=0\n    local -i v=0\n    local -i w=0\n    local\
    \ -i x=0\n    local -i y=0\n    local -i z=0\n    local -i aa=0\n    local -i\
    \ bb=0\n    local -i cc=0\n    local -i dd=0\n    local -i ee=0\n    local -i\
    \ ff=0\n    local -i gg=0\n    local -i hh=0\n    local -i ii=0\n    local -i\
    \ jj=0\n    local -i kk=0\n    local -i ll=0\n    local -i mm=0\n    local -i\
    \ nn=0\n    local -i oo=0\n    local -i pp=0\n    local -i qq=0\n    local -i\
    \ rr=0\n    local -i ss=0\n    local -i tt=0\n    local -i uu=0\n    local -i\
    \ vv=0\n    local -i ww=0\n    local -i xx=0\n    local -i yy=0\n    local -i\
    \ zz=0\n    local -i aaa=0\n    local -i bbb=0\n    local -i ccc=0\n    local\
    \ -i ddd=0\n    local -i eee=0\n    local -i fff=0\n    local -i ggg=0\n    local\
    \ -i hhh=0\n    local -i iii=0\n    local -i jjj=0\n    local -i\n}\n\ncandidate()\
    \ {\n    exchange \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"1 2\
    \ 3 4\" \"1 2 3 4\") = \"YES\" ]]\n    [[ $(candidate \"1 2 3 4\" \"1 5 3 4\"\
    ) = \"NO\" ]]\n    [[ $(candidate \"1 2 3 4\" \"2 1 4 3\") = \"YES\" ]]\n    [[\
    \ $(candidate \"5 7 3\" \"2 6 4\") = \"YES\" ]]\n    [[ $(candidate \"5 7 3\"\
    \ \"2 6 3\") = \"NO\" ]]\n    [[ $(candidate \"3 2 6 1 8 9\" \"3 5 5 1 1 1\")\
    \ = \"NO\" ]]\n    [[ $(candidate \"100 200\" \"200 200\") = \"YES\" ]]\n}\n\n\
    run_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660002369
- exit_code: 1
  program: "#!/bin/bash\n# In this problem, you will implement a function that takes\
    \ two lists of numbers,\n# and determines whether it is possible to perform an\
    \ exchange of elements\n# between them to make lst1 a list of only even numbers.\n\
    # There is no limit on the number of exchanged elements between lst1 and lst2.\n\
    # If it is possible to exchange elements between the lst1 and lst2 to make\n#\
    \ all the elements of lst1 to be even, return \"YES\".\n# Otherwise, return \"\
    NO\".\n# For example:\n# It is assumed that the input lists will be non-empty.\n\
    #\n# $1 is a space-separated list\n# $2 is a space-separated list\nexchange()\
    \ {\n    local -a lst1=($1)\n    local -a lst2=($2)\n    local -a evens=()\n \
    \   local -a odds=()\n    local -a result=()\n    local -i i=0\n    local -i j=0\n\
    \    local -i k=0\n    local -i l=0\n    local -i m=0\n    local -i n=0\n    local\
    \ -i o=0\n    local -i p=0\n    local -i q=0\n    local -i r=0\n    local -i s=0\n\
    \    local -i t=0\n    local -i u=0\n    local -i v=0\n    local -i w=0\n    local\
    \ -i x=0\n    local -i y=0\n    local -i z=0\n    local -i aa=0\n    local -i\
    \ bb=0\n    local -i cc=0\n    local -i dd=0\n    local -i ee=0\n    local -i\
    \ ff=0\n    local -i gg=0\n    local -i hh=0\n    local -i ii=0\n    local -i\
    \ jj=0\n    local -i kk=0\n    local -i ll=0\n    local -i mm=0\n    local -i\
    \ nn=0\n    local -i oo=0\n    local -i pp=0\n    local -i qq=0\n    local -i\
    \ rr=0\n    local -i ss=0\n    local -i tt=0\n    local -i uu=0\n    local -i\
    \ vv=0\n    local -i ww=0\n    local -i xx=0\n    local -i yy=0\n    local -i\
    \ zz=0\n    local -i aaa=0\n    local -i bbb=0\n    local -i ccc=0\n    local\
    \ -i ddd=0\n    local -i eee=0\n    local -i fff=0\n    local -i ggg=0\n    local\
    \ -i hhh=0\n    local -i iii=0\n    local -i jjj=0\n    local -i\n}\n\ncandidate()\
    \ {\n    exchange \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"1 2\
    \ 3 4\" \"1 2 3 4\") = \"YES\" ]]\n    [[ $(candidate \"1 2 3 4\" \"1 5 3 4\"\
    ) = \"NO\" ]]\n    [[ $(candidate \"1 2 3 4\" \"2 1 4 3\") = \"YES\" ]]\n    [[\
    \ $(candidate \"5 7 3\" \"2 6 4\") = \"YES\" ]]\n    [[ $(candidate \"5 7 3\"\
    \ \"2 6 3\") = \"NO\" ]]\n    [[ $(candidate \"3 2 6 1 8 9\" \"3 5 5 1 1 1\")\
    \ = \"NO\" ]]\n    [[ $(candidate \"100 200\" \"200 200\") = \"YES\" ]]\n}\n\n\
    run_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660002369
- exit_code: 1
  program: "#!/bin/bash\n# In this problem, you will implement a function that takes\
    \ two lists of numbers,\n# and determines whether it is possible to perform an\
    \ exchange of elements\n# between them to make lst1 a list of only even numbers.\n\
    # There is no limit on the number of exchanged elements between lst1 and lst2.\n\
    # If it is possible to exchange elements between the lst1 and lst2 to make\n#\
    \ all the elements of lst1 to be even, return \"YES\".\n# Otherwise, return \"\
    NO\".\n# For example:\n# It is assumed that the input lists will be non-empty.\n\
    #\n# $1 is a space-separated list\n# $2 is a space-separated list\nexchange()\
    \ {\n  local lst1=$1\n  local lst2=$2\n  local lst1_even=0\n  local lst2_even=0\n\
    \  local lst1_odd=0\n  local lst2_odd=0\n  for i in $lst1; do\n    if [ $(($i\
    \ % 2)) -eq 0 ]; then\n      lst1_even=$(($lst1_even + 1))\n    else\n      lst1_odd=$(($lst1_odd\
    \ + 1))\n    fi\n  done\n  for i in $lst2; do\n    if [ $(($i % 2)) -eq 0 ]; then\n\
    \      lst2_even=$(($lst2_even + 1))\n    else\n      lst2_odd=$(($lst2_odd +\
    \ 1))\n    fi\n  done\n  if [ $lst1_even -eq 0 ]; then\n    echo \"NO\"\n  elif\
    \ [ $lst2_odd -eq 0 ]; then\n    echo \"NO\"\n  elif [ $lst1_even -eq $lst2_odd\
    \ ]; then\n    echo \"YES\"\n  else\n    echo \"NO\"\n  fi\n}\n\ncandidate() {\n\
    \    exchange \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"1 2 3 4\"\
    \ \"1 2 3 4\") = \"YES\" ]]\n    [[ $(candidate \"1 2 3 4\" \"1 5 3 4\") = \"\
    NO\" ]]\n    [[ $(candidate \"1 2 3 4\" \"2 1 4 3\") = \"YES\" ]]\n    [[ $(candidate\
    \ \"5 7 3\" \"2 6 4\") = \"YES\" ]]\n    [[ $(candidate \"5 7 3\" \"2 6 3\") =\
    \ \"NO\" ]]\n    [[ $(candidate \"3 2 6 1 8 9\" \"3 5 5 1 1 1\") = \"NO\" ]]\n\
    \    [[ $(candidate \"100 200\" \"200 200\") = \"YES\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660002370
- exit_code: 1
  program: "#!/bin/bash\n# In this problem, you will implement a function that takes\
    \ two lists of numbers,\n# and determines whether it is possible to perform an\
    \ exchange of elements\n# between them to make lst1 a list of only even numbers.\n\
    # There is no limit on the number of exchanged elements between lst1 and lst2.\n\
    # If it is possible to exchange elements between the lst1 and lst2 to make\n#\
    \ all the elements of lst1 to be even, return \"YES\".\n# Otherwise, return \"\
    NO\".\n# For example:\n# It is assumed that the input lists will be non-empty.\n\
    #\n# $1 is a space-separated list\n# $2 is a space-separated list\nexchange()\
    \ {\n    local lst1=\"$1\"\n    local lst2=\"$2\"\n    local lst1_even=0\n   \
    \ local lst2_even=0\n    local lst1_odd=0\n    local lst2_odd=0\n    for i in\
    \ $lst1; do\n        if [ $((i % 2)) -eq 0 ]; then\n            ((lst1_even++))\n\
    \        else\n            ((lst1_odd++))\n        fi\n    done\n    for i in\
    \ $lst2; do\n        if [ $((i % 2)) -eq 0 ]; then\n            ((lst2_even++))\n\
    \        else\n            ((lst2_odd++))\n        fi\n    done\n    if [ $lst1_even\
    \ -eq 0 ]; then\n        echo \"NO\"\n    elif [ $lst2_odd -eq 0 ]; then\n   \
    \     echo \"NO\"\n    elif [ $lst1_even -gt $lst2_odd ]; then\n        echo \"\
    NO\"\n    else\n        echo \"YES\"\n    fi\n}\n\ncandidate() {\n    exchange\
    \ \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"1 2 3 4\" \"1 2 3 4\"\
    ) = \"YES\" ]]\n    [[ $(candidate \"1 2 3 4\" \"1 5 3 4\") = \"NO\" ]]\n    [[\
    \ $(candidate \"1 2 3 4\" \"2 1 4 3\") = \"YES\" ]]\n    [[ $(candidate \"5 7\
    \ 3\" \"2 6 4\") = \"YES\" ]]\n    [[ $(candidate \"5 7 3\" \"2 6 3\") = \"NO\"\
    \ ]]\n    [[ $(candidate \"3 2 6 1 8 9\" \"3 5 5 1 1 1\") = \"NO\" ]]\n    [[\
    \ $(candidate \"100 200\" \"200 200\") = \"YES\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660002370
- exit_code: 1
  program: "#!/bin/bash\n# In this problem, you will implement a function that takes\
    \ two lists of numbers,\n# and determines whether it is possible to perform an\
    \ exchange of elements\n# between them to make lst1 a list of only even numbers.\n\
    # There is no limit on the number of exchanged elements between lst1 and lst2.\n\
    # If it is possible to exchange elements between the lst1 and lst2 to make\n#\
    \ all the elements of lst1 to be even, return \"YES\".\n# Otherwise, return \"\
    NO\".\n# For example:\n# It is assumed that the input lists will be non-empty.\n\
    #\n# $1 is a space-separated list\n# $2 is a space-separated list\nexchange()\
    \ {\n  local lst1=$1\n  local lst2=$2\n  local lst1_even=0\n  local lst2_even=0\n\
    \  local lst1_odd=0\n  local lst2_odd=0\n  local lst1_even_odd=0\n  local lst2_even_odd=0\n\
    \  local lst1_odd_even=0\n  local lst2_odd_even=0\n  local lst1_odd_odd=0\n  local\
    \ lst2_odd_odd=0\n  local lst1_even_even=0\n  local lst2_even_even=0\n  local\
    \ lst1_even_odd_even=0\n  local lst2_even_odd_even=0\n  local lst1_odd_even_odd=0\n\
    \  local lst2_odd_even_odd=0\n  local lst1_odd_odd_even=0\n  local lst2_odd_odd_even=0\n\
    \  local lst1_even_even_odd=0\n  local lst2_even_even_odd=0\n  local lst1_even_odd_odd=0\n\
    \  local lst2_even_odd_odd=0\n  local lst1_odd_even_even=0\n  local lst2_odd_even_even=0\n\
    \  local lst1_odd_odd_odd=0\n  local lst2_odd_odd_odd=0\n  local lst1_even_even_even=0\n\
    \  local lst2_even_even_even=0\n  local lst1_even_odd_even_odd=0\n  local lst2_even_odd_even_odd=0\n\
    \  local lst1_odd_even_odd_even=0\n  local lst2_odd_even_odd_even=0\n  local lst1_odd_odd_even_odd=0\n\
    \  local lst2_odd_odd_even_odd=0\n  local lst1_even_even_odd_even=0\n  local lst2_even_even_odd_even=0\n\
    \  local lst1_even\n}\n\ncandidate() {\n    exchange \"$@\"\n}\n\nset -e\nrun_test()\
    \ {\n    [[ $(candidate \"1 2 3 4\" \"1 2 3 4\") = \"YES\" ]]\n    [[ $(candidate\
    \ \"1 2 3 4\" \"1 5 3 4\") = \"NO\" ]]\n    [[ $(candidate \"1 2 3 4\" \"2 1 4\
    \ 3\") = \"YES\" ]]\n    [[ $(candidate \"5 7 3\" \"2 6 4\") = \"YES\" ]]\n  \
    \  [[ $(candidate \"5 7 3\" \"2 6 3\") = \"NO\" ]]\n    [[ $(candidate \"3 2 6\
    \ 1 8 9\" \"3 5 5 1 1 1\") = \"NO\" ]]\n    [[ $(candidate \"100 200\" \"200 200\"\
    ) = \"YES\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660002369
- exit_code: 1
  program: "#!/bin/bash\n# In this problem, you will implement a function that takes\
    \ two lists of numbers,\n# and determines whether it is possible to perform an\
    \ exchange of elements\n# between them to make lst1 a list of only even numbers.\n\
    # There is no limit on the number of exchanged elements between lst1 and lst2.\n\
    # If it is possible to exchange elements between the lst1 and lst2 to make\n#\
    \ all the elements of lst1 to be even, return \"YES\".\n# Otherwise, return \"\
    NO\".\n# For example:\n# It is assumed that the input lists will be non-empty.\n\
    #\n# $1 is a space-separated list\n# $2 is a space-separated list\nexchange()\
    \ {\n  local lst1=($1)\n  local lst2=($2)\n  local evens=()\n  local odds=()\n\
    \  local result=\"NO\"\n  for i in ${lst1[@]}; do\n    if [ $((i % 2)) -eq 0 ];\
    \ then\n      evens+=($i)\n    else\n      odds+=($i)\n    fi\n  done\n  for i\
    \ in ${lst2[@]}; do\n    if [ $((i % 2)) -eq 0 ]; then\n      evens+=($i)\n  \
    \  else\n      odds+=($i)\n    fi\n  done\n  if [ ${#odds[@]} -eq 0 ]; then\n\
    \    result=\"YES\"\n  fi\n  echo $result\n}\n\ncandidate() {\n    exchange \"\
    $@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"1 2 3 4\" \"1 2 3 4\") =\
    \ \"YES\" ]]\n    [[ $(candidate \"1 2 3 4\" \"1 5 3 4\") = \"NO\" ]]\n    [[\
    \ $(candidate \"1 2 3 4\" \"2 1 4 3\") = \"YES\" ]]\n    [[ $(candidate \"5 7\
    \ 3\" \"2 6 4\") = \"YES\" ]]\n    [[ $(candidate \"5 7 3\" \"2 6 3\") = \"NO\"\
    \ ]]\n    [[ $(candidate \"3 2 6 1 8 9\" \"3 5 5 1 1 1\") = \"NO\" ]]\n    [[\
    \ $(candidate \"100 200\" \"200 200\") = \"YES\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660002370

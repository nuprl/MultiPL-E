language: sh
name: HumanEval_121_solution
results:
- exit_code: 1
  program: "#!/bin/bash\n# Given a non-empty list of integers, return the sum of all\
    \ of the odd elements that are in even positions.\n# Examples\n#\n# $1 is a space-separated\
    \ list\nsolution() {\n  local -n arr=$1\n  local sum=0\n  for ((i=0; i<${#arr[@]};\
    \ i++)); do\n    if ((i % 2 == 0 && arr[i] % 2 != 0)); then\n      ((sum += arr[i]))\n\
    \    fi\n  done\n  echo $sum\n}\n\ncandidate() {\n    solution \"$@\"\n}\n\nset\
    \ -e\nrun_test() {\n    [[ $(candidate \"5 8 7 1\") = \"12\" ]]\n    [[ $(candidate\
    \ \"3 3 3 3 3\") = \"9\" ]]\n    [[ $(candidate \"30 13 24 321\") = \"0\" ]]\n\
    \    [[ $(candidate \"5 9\") = \"5\" ]]\n    [[ $(candidate \"2 4 8\") = \"0\"\
    \ ]]\n    [[ $(candidate \"30 13 23 32\") = \"23\" ]]\n    [[ $(candidate \"3\
    \ 13 2 9\") = \"3\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: '/tmp/tmp4cem3cgs.sh: line 7: local: `5 8 7 1'': invalid variable name for
    name reference

    '
  stdout: ''
  timestamp: 1659999723
- exit_code: 0
  program: "#!/bin/bash\n# Given a non-empty list of integers, return the sum of all\
    \ of the odd elements that are in even positions.\n# Examples\n#\n# $1 is a space-separated\
    \ list\nsolution() {\n  local -a arr=($1)\n  local sum=0\n  for ((i=0; i<${#arr[@]};\
    \ i++)); do\n    if ((i % 2 == 0 && arr[i] % 2 != 0)); then\n      sum=$((sum\
    \ + arr[i]))\n    fi\n  done\n  echo $sum\n}\n\ncandidate() {\n    solution \"\
    $@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"5 8 7 1\") = \"12\" ]]\n\
    \    [[ $(candidate \"3 3 3 3 3\") = \"9\" ]]\n    [[ $(candidate \"30 13 24 321\"\
    ) = \"0\" ]]\n    [[ $(candidate \"5 9\") = \"5\" ]]\n    [[ $(candidate \"2 4\
    \ 8\") = \"0\" ]]\n    [[ $(candidate \"30 13 23 32\") = \"23\" ]]\n    [[ $(candidate\
    \ \"3 13 2 9\") = \"3\" ]]\n}\n\nrun_test"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659999723
- exit_code: 1
  program: "#!/bin/bash\n# Given a non-empty list of integers, return the sum of all\
    \ of the odd elements that are in even positions.\n# Examples\n#\n# $1 is a space-separated\
    \ list\nsolution() {\n  local -a arr=(\"$@\")\n  local sum=0\n  for ((i=0; i<${#arr[@]};\
    \ i++)); do\n    if ((i % 2 == 0 && arr[i] % 2 != 0)); then\n      sum=$((sum\
    \ + arr[i]))\n    fi\n  done\n  echo $sum\n}\n\ncandidate() {\n    solution \"\
    $@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"5 8 7 1\") = \"12\" ]]\n\
    \    [[ $(candidate \"3 3 3 3 3\") = \"9\" ]]\n    [[ $(candidate \"30 13 24 321\"\
    ) = \"0\" ]]\n    [[ $(candidate \"5 9\") = \"5\" ]]\n    [[ $(candidate \"2 4\
    \ 8\") = \"0\" ]]\n    [[ $(candidate \"30 13 23 32\") = \"23\" ]]\n    [[ $(candidate\
    \ \"3 13 2 9\") = \"3\" ]]\n}\n\nrun_test"
  status: SyntaxError
  stderr: '/tmp/tmp7zrdxmpl.sh: line 10: ((: 5 8 7 1: syntax error in expression (error
    token is "8 7 1")

    '
  stdout: ''
  timestamp: 1659999723
- exit_code: 1
  program: "#!/bin/bash\n# Given a non-empty list of integers, return the sum of all\
    \ of the odd elements that are in even positions.\n# Examples\n#\n# $1 is a space-separated\
    \ list\nsolution() {\n  local -a arr=(\"$@\")\n  local sum=0\n  for ((i=0; i<${#arr[@]};\
    \ i+=2)); do\n    if ((arr[i] % 2 == 1)); then\n      ((sum += arr[i]))\n    fi\n\
    \  done\n  echo $sum\n}\n\ncandidate() {\n    solution \"$@\"\n}\n\nset -e\nrun_test()\
    \ {\n    [[ $(candidate \"5 8 7 1\") = \"12\" ]]\n    [[ $(candidate \"3 3 3 3\
    \ 3\") = \"9\" ]]\n    [[ $(candidate \"30 13 24 321\") = \"0\" ]]\n    [[ $(candidate\
    \ \"5 9\") = \"5\" ]]\n    [[ $(candidate \"2 4 8\") = \"0\" ]]\n    [[ $(candidate\
    \ \"30 13 23 32\") = \"23\" ]]\n    [[ $(candidate \"3 13 2 9\") = \"3\" ]]\n\
    }\n\nrun_test"
  status: SyntaxError
  stderr: '/tmp/tmppp_ih_td.sh: line 10: ((: 5 8 7 1: syntax error in expression (error
    token is "8 7 1")

    '
  stdout: ''
  timestamp: 1659999723
- exit_code: 1
  program: "#!/bin/bash\n# Given a non-empty list of integers, return the sum of all\
    \ of the odd elements that are in even positions.\n# Examples\n#\n# $1 is a space-separated\
    \ list\nsolution() {\n  local -n arr=$1\n  local sum=0\n  for ((i=0; i<${#arr[@]};\
    \ i+=2)); do\n    if [[ ${arr[i]}%2 -ne 0 ]]; then\n      ((sum+=arr[i]))\n  \
    \  fi\n  done\n  echo $sum\n}\n\ncandidate() {\n    solution \"$@\"\n}\n\nset\
    \ -e\nrun_test() {\n    [[ $(candidate \"5 8 7 1\") = \"12\" ]]\n    [[ $(candidate\
    \ \"3 3 3 3 3\") = \"9\" ]]\n    [[ $(candidate \"30 13 24 321\") = \"0\" ]]\n\
    \    [[ $(candidate \"5 9\") = \"5\" ]]\n    [[ $(candidate \"2 4 8\") = \"0\"\
    \ ]]\n    [[ $(candidate \"30 13 23 32\") = \"23\" ]]\n    [[ $(candidate \"3\
    \ 13 2 9\") = \"3\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: '/tmp/tmpm_ozg33a.sh: line 7: local: `5 8 7 1'': invalid variable name for
    name reference

    '
  stdout: ''
  timestamp: 1659999723
- exit_code: 1
  program: "#!/bin/bash\n# Given a non-empty list of integers, return the sum of all\
    \ of the odd elements that are in even positions.\n# Examples\n#\n# $1 is a space-separated\
    \ list\nsolution() {\n  local -a arr=(\"$@\")\n  local sum=0\n  for ((i=0; i<${#arr[@]};\
    \ i+=2)); do\n    if ((arr[i] % 2 == 1)); then\n      ((sum += arr[i]))\n    fi\n\
    \  done\n  echo $sum\n}\n\ncandidate() {\n    solution \"$@\"\n}\n\nset -e\nrun_test()\
    \ {\n    [[ $(candidate \"5 8 7 1\") = \"12\" ]]\n    [[ $(candidate \"3 3 3 3\
    \ 3\") = \"9\" ]]\n    [[ $(candidate \"30 13 24 321\") = \"0\" ]]\n    [[ $(candidate\
    \ \"5 9\") = \"5\" ]]\n    [[ $(candidate \"2 4 8\") = \"0\" ]]\n    [[ $(candidate\
    \ \"30 13 23 32\") = \"23\" ]]\n    [[ $(candidate \"3 13 2 9\") = \"3\" ]]\n\
    }\n\nrun_test"
  status: SyntaxError
  stderr: '/tmp/tmppp_ih_td.sh: line 10: ((: 5 8 7 1: syntax error in expression (error
    token is "8 7 1")

    '
  stdout: ''
  timestamp: 1659999723
- exit_code: 0
  program: "#!/bin/bash\n# Given a non-empty list of integers, return the sum of all\
    \ of the odd elements that are in even positions.\n# Examples\n#\n# $1 is a space-separated\
    \ list\nsolution() {\n  local -a arr=($1)\n  local sum=0\n  for ((i=0; i<${#arr[@]};\
    \ i++)); do\n    if ((i % 2 == 0 && arr[i] % 2 != 0)); then\n      sum=$((sum\
    \ + arr[i]))\n    fi\n  done\n  echo $sum\n}\n\ncandidate() {\n    solution \"\
    $@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"5 8 7 1\") = \"12\" ]]\n\
    \    [[ $(candidate \"3 3 3 3 3\") = \"9\" ]]\n    [[ $(candidate \"30 13 24 321\"\
    ) = \"0\" ]]\n    [[ $(candidate \"5 9\") = \"5\" ]]\n    [[ $(candidate \"2 4\
    \ 8\") = \"0\" ]]\n    [[ $(candidate \"30 13 23 32\") = \"23\" ]]\n    [[ $(candidate\
    \ \"3 13 2 9\") = \"3\" ]]\n}\n\nrun_test"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659999723
- exit_code: 0
  program: "#!/bin/bash\n# Given a non-empty list of integers, return the sum of all\
    \ of the odd elements that are in even positions.\n# Examples\n#\n# $1 is a space-separated\
    \ list\nsolution() {\n  local -a a=($1)\n  local sum=0\n  for ((i=0; i<${#a[@]};\
    \ i++)); do\n    ((i%2==0)) && ((a[i]%2==1)) && ((sum+=a[i]))\n  done\n  echo\
    \ $sum\n}\n\ncandidate() {\n    solution \"$@\"\n}\n\nset -e\nrun_test() {\n \
    \   [[ $(candidate \"5 8 7 1\") = \"12\" ]]\n    [[ $(candidate \"3 3 3 3 3\"\
    ) = \"9\" ]]\n    [[ $(candidate \"30 13 24 321\") = \"0\" ]]\n    [[ $(candidate\
    \ \"5 9\") = \"5\" ]]\n    [[ $(candidate \"2 4 8\") = \"0\" ]]\n    [[ $(candidate\
    \ \"30 13 23 32\") = \"23\" ]]\n    [[ $(candidate \"3 13 2 9\") = \"3\" ]]\n\
    }\n\nrun_test"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659999723
- exit_code: 1
  program: "#!/bin/bash\n# Given a non-empty list of integers, return the sum of all\
    \ of the odd elements that are in even positions.\n# Examples\n#\n# $1 is a space-separated\
    \ list\nsolution() {\n  local -a arr=(\"$@\")\n  local sum=0\n  for ((i=0; i<${#arr[@]};\
    \ i++)); do\n    if ((i % 2 == 0 && arr[i] % 2 != 0)); then\n      sum=$((sum\
    \ + arr[i]))\n    fi\n  done\n  echo $sum\n}\n\ncandidate() {\n    solution \"\
    $@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"5 8 7 1\") = \"12\" ]]\n\
    \    [[ $(candidate \"3 3 3 3 3\") = \"9\" ]]\n    [[ $(candidate \"30 13 24 321\"\
    ) = \"0\" ]]\n    [[ $(candidate \"5 9\") = \"5\" ]]\n    [[ $(candidate \"2 4\
    \ 8\") = \"0\" ]]\n    [[ $(candidate \"30 13 23 32\") = \"23\" ]]\n    [[ $(candidate\
    \ \"3 13 2 9\") = \"3\" ]]\n}\n\nrun_test"
  status: SyntaxError
  stderr: '/tmp/tmp7zrdxmpl.sh: line 10: ((: 5 8 7 1: syntax error in expression (error
    token is "8 7 1")

    '
  stdout: ''
  timestamp: 1659999723
- exit_code: 0
  program: "#!/bin/bash\n# Given a non-empty list of integers, return the sum of all\
    \ of the odd elements that are in even positions.\n# Examples\n#\n# $1 is a space-separated\
    \ list\nsolution() {\n  local -a a\n  local -i i\n  local -i sum=0\n  IFS=' '\
    \ read -r -a a <<< \"$1\"\n  for ((i=0; i<${#a[@]}; i+=2)); do\n    if ((a[i]%2));\
    \ then\n      ((sum+=a[i]))\n    fi\n  done\n  echo \"$sum\"\n}\n\ncandidate()\
    \ {\n    solution \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"5 8\
    \ 7 1\") = \"12\" ]]\n    [[ $(candidate \"3 3 3 3 3\") = \"9\" ]]\n    [[ $(candidate\
    \ \"30 13 24 321\") = \"0\" ]]\n    [[ $(candidate \"5 9\") = \"5\" ]]\n    [[\
    \ $(candidate \"2 4 8\") = \"0\" ]]\n    [[ $(candidate \"30 13 23 32\") = \"\
    23\" ]]\n    [[ $(candidate \"3 13 2 9\") = \"3\" ]]\n}\n\nrun_test"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659999723
- exit_code: 1
  program: "#!/bin/bash\n# Given a non-empty list of integers, return the sum of all\
    \ of the odd elements that are in even positions.\n# Examples\n#\n# $1 is a space-separated\
    \ list\nsolution() {\n  local -n arr=$1\n  local sum=0\n  for ((i=0; i<${#arr[@]};\
    \ i++)); do\n    if ((i % 2 == 0 && arr[i] % 2 != 0)); then\n      sum=$((sum\
    \ + arr[i]))\n    fi\n  done\n  echo $sum\n}\n\ncandidate() {\n    solution \"\
    $@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"5 8 7 1\") = \"12\" ]]\n\
    \    [[ $(candidate \"3 3 3 3 3\") = \"9\" ]]\n    [[ $(candidate \"30 13 24 321\"\
    ) = \"0\" ]]\n    [[ $(candidate \"5 9\") = \"5\" ]]\n    [[ $(candidate \"2 4\
    \ 8\") = \"0\" ]]\n    [[ $(candidate \"30 13 23 32\") = \"23\" ]]\n    [[ $(candidate\
    \ \"3 13 2 9\") = \"3\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: '/tmp/tmpmgddp7td.sh: line 7: local: `5 8 7 1'': invalid variable name for
    name reference

    '
  stdout: ''
  timestamp: 1659999723
- exit_code: 1
  program: "#!/bin/bash\n# Given a non-empty list of integers, return the sum of all\
    \ of the odd elements that are in even positions.\n# Examples\n#\n# $1 is a space-separated\
    \ list\nsolution() {\n  local -a arr=(\"$@\")\n  local sum=0\n  for ((i=0; i<${#arr[@]};\
    \ i++)); do\n    if ((i % 2 == 0 && arr[i] % 2 != 0)); then\n      sum=$((sum\
    \ + arr[i]))\n    fi\n  done\n  echo $sum\n}\n\ncandidate() {\n    solution \"\
    $@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"5 8 7 1\") = \"12\" ]]\n\
    \    [[ $(candidate \"3 3 3 3 3\") = \"9\" ]]\n    [[ $(candidate \"30 13 24 321\"\
    ) = \"0\" ]]\n    [[ $(candidate \"5 9\") = \"5\" ]]\n    [[ $(candidate \"2 4\
    \ 8\") = \"0\" ]]\n    [[ $(candidate \"30 13 23 32\") = \"23\" ]]\n    [[ $(candidate\
    \ \"3 13 2 9\") = \"3\" ]]\n}\n\nrun_test"
  status: SyntaxError
  stderr: '/tmp/tmp7zrdxmpl.sh: line 10: ((: 5 8 7 1: syntax error in expression (error
    token is "8 7 1")

    '
  stdout: ''
  timestamp: 1659999723
- exit_code: 1
  program: "#!/bin/bash\n# Given a non-empty list of integers, return the sum of all\
    \ of the odd elements that are in even positions.\n# Examples\n#\n# $1 is a space-separated\
    \ list\nsolution() {\n  local -a arr=(\"$@\")\n  local sum=0\n  for ((i=0; i<${#arr[@]};\
    \ i++)); do\n    if ((i % 2 == 0)); then\n      if ((arr[i] % 2 != 0)); then\n\
    \        sum=$((sum + arr[i]))\n      fi\n    fi\n  done\n  echo $sum\n}\n\ncandidate()\
    \ {\n    solution \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"5 8\
    \ 7 1\") = \"12\" ]]\n    [[ $(candidate \"3 3 3 3 3\") = \"9\" ]]\n    [[ $(candidate\
    \ \"30 13 24 321\") = \"0\" ]]\n    [[ $(candidate \"5 9\") = \"5\" ]]\n    [[\
    \ $(candidate \"2 4 8\") = \"0\" ]]\n    [[ $(candidate \"30 13 23 32\") = \"\
    23\" ]]\n    [[ $(candidate \"3 13 2 9\") = \"3\" ]]\n}\n\nrun_test"
  status: SyntaxError
  stderr: '/tmp/tmp0vaclnnm.sh: line 11: ((: 5 8 7 1: syntax error in expression (error
    token is "8 7 1")

    '
  stdout: ''
  timestamp: 1659999723
- exit_code: 1
  program: "#!/bin/bash\n# Given a non-empty list of integers, return the sum of all\
    \ of the odd elements that are in even positions.\n# Examples\n#\n# $1 is a space-separated\
    \ list\nsolution() {\n  local -a arr=(\"$@\")\n  local sum=0\n  for ((i=0; i<${#arr[@]};\
    \ i+=2)); do\n    (( arr[i] % 2 == 0 )) && (( sum += arr[i] ))\n  done\n  echo\
    \ $sum\n}\n\ncandidate() {\n    solution \"$@\"\n}\n\nset -e\nrun_test() {\n \
    \   [[ $(candidate \"5 8 7 1\") = \"12\" ]]\n    [[ $(candidate \"3 3 3 3 3\"\
    ) = \"9\" ]]\n    [[ $(candidate \"30 13 24 321\") = \"0\" ]]\n    [[ $(candidate\
    \ \"5 9\") = \"5\" ]]\n    [[ $(candidate \"2 4 8\") = \"0\" ]]\n    [[ $(candidate\
    \ \"30 13 23 32\") = \"23\" ]]\n    [[ $(candidate \"3 13 2 9\") = \"3\" ]]\n\
    }\n\nrun_test"
  status: SyntaxError
  stderr: '/tmp/tmpb2qdq_w2.sh: line 10: ((: 5 8 7 1: syntax error in expression (error
    token is "8 7 1")

    '
  stdout: ''
  timestamp: 1659999723
- exit_code: 1
  program: "#!/bin/bash\n# Given a non-empty list of integers, return the sum of all\
    \ of the odd elements that are in even positions.\n# Examples\n#\n# $1 is a space-separated\
    \ list\nsolution() {\n  local -a arr=(\"$@\")\n  local sum=0\n  for ((i=0; i<${#arr[@]};\
    \ i++)); do\n    if [[ $((i%2)) -eq 0 && $((arr[i]%2)) -eq 1 ]]; then\n      sum=$((sum+arr[i]))\n\
    \    fi\n  done\n  echo $sum\n}\n\ncandidate() {\n    solution \"$@\"\n}\n\nset\
    \ -e\nrun_test() {\n    [[ $(candidate \"5 8 7 1\") = \"12\" ]]\n    [[ $(candidate\
    \ \"3 3 3 3 3\") = \"9\" ]]\n    [[ $(candidate \"30 13 24 321\") = \"0\" ]]\n\
    \    [[ $(candidate \"5 9\") = \"5\" ]]\n    [[ $(candidate \"2 4 8\") = \"0\"\
    \ ]]\n    [[ $(candidate \"30 13 23 32\") = \"23\" ]]\n    [[ $(candidate \"3\
    \ 13 2 9\") = \"3\" ]]\n}\n\nrun_test"
  status: SyntaxError
  stderr: '/tmp/tmpwy2fdzag.sh: line 10: 5 8 7 1: syntax error in expression (error
    token is "8 7 1")

    '
  stdout: ''
  timestamp: 1659999723
- exit_code: 1
  program: "#!/bin/bash\n# Given a non-empty list of integers, return the sum of all\
    \ of the odd elements that are in even positions.\n# Examples\n#\n# $1 is a space-separated\
    \ list\nsolution() {\n  local -a arr=($1)\n  local -i sum=0\n  for ((i=0; i<${#arr[@]};\
    \ i+=2)); do\n    (( arr[i] % 2 == 0 )) && (( sum += arr[i] ))\n  done\n  echo\
    \ $sum\n}\n\ncandidate() {\n    solution \"$@\"\n}\n\nset -e\nrun_test() {\n \
    \   [[ $(candidate \"5 8 7 1\") = \"12\" ]]\n    [[ $(candidate \"3 3 3 3 3\"\
    ) = \"9\" ]]\n    [[ $(candidate \"30 13 24 321\") = \"0\" ]]\n    [[ $(candidate\
    \ \"5 9\") = \"5\" ]]\n    [[ $(candidate \"2 4 8\") = \"0\" ]]\n    [[ $(candidate\
    \ \"30 13 23 32\") = \"23\" ]]\n    [[ $(candidate \"3 13 2 9\") = \"3\" ]]\n\
    }\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1659999723
- exit_code: 0
  program: "#!/bin/bash\n# Given a non-empty list of integers, return the sum of all\
    \ of the odd elements that are in even positions.\n# Examples\n#\n# $1 is a space-separated\
    \ list\nsolution() {\n  local -a arr=($1)\n  local sum=0\n  for ((i=0; i<${#arr[@]};\
    \ i++)); do\n    if ((i%2==0 && arr[i]%2==1)); then\n      sum=$((sum+arr[i]))\n\
    \    fi\n  done\n  echo $sum\n}\n\ncandidate() {\n    solution \"$@\"\n}\n\nset\
    \ -e\nrun_test() {\n    [[ $(candidate \"5 8 7 1\") = \"12\" ]]\n    [[ $(candidate\
    \ \"3 3 3 3 3\") = \"9\" ]]\n    [[ $(candidate \"30 13 24 321\") = \"0\" ]]\n\
    \    [[ $(candidate \"5 9\") = \"5\" ]]\n    [[ $(candidate \"2 4 8\") = \"0\"\
    \ ]]\n    [[ $(candidate \"30 13 23 32\") = \"23\" ]]\n    [[ $(candidate \"3\
    \ 13 2 9\") = \"3\" ]]\n}\n\nrun_test"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659999723
- exit_code: 1
  program: "#!/bin/bash\n# Given a non-empty list of integers, return the sum of all\
    \ of the odd elements that are in even positions.\n# Examples\n#\n# $1 is a space-separated\
    \ list\nsolution() {\n  local -a arr=(\"$@\")\n  local sum=0\n  for ((i=0; i<${#arr[@]};\
    \ i++)); do\n    if ((i % 2 == 0 && arr[i] % 2 != 0)); then\n      sum=$((sum\
    \ + arr[i]))\n    fi\n  done\n  echo $sum\n}\n\ncandidate() {\n    solution \"\
    $@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"5 8 7 1\") = \"12\" ]]\n\
    \    [[ $(candidate \"3 3 3 3 3\") = \"9\" ]]\n    [[ $(candidate \"30 13 24 321\"\
    ) = \"0\" ]]\n    [[ $(candidate \"5 9\") = \"5\" ]]\n    [[ $(candidate \"2 4\
    \ 8\") = \"0\" ]]\n    [[ $(candidate \"30 13 23 32\") = \"23\" ]]\n    [[ $(candidate\
    \ \"3 13 2 9\") = \"3\" ]]\n}\n\nrun_test"
  status: SyntaxError
  stderr: '/tmp/tmp7zrdxmpl.sh: line 10: ((: 5 8 7 1: syntax error in expression (error
    token is "8 7 1")

    '
  stdout: ''
  timestamp: 1659999723
- exit_code: 1
  program: "#!/bin/bash\n# Given a non-empty list of integers, return the sum of all\
    \ of the odd elements that are in even positions.\n# Examples\n#\n# $1 is a space-separated\
    \ list\nsolution() {\n  local -a arr=(\"$@\")\n  local sum=0\n  for ((i=0; i<${#arr[@]};\
    \ i++)); do\n    if ((i % 2 == 0 && arr[i] % 2 != 0)); then\n      sum=$((sum\
    \ + arr[i]))\n    fi\n  done\n  echo $sum\n}\n\ncandidate() {\n    solution \"\
    $@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"5 8 7 1\") = \"12\" ]]\n\
    \    [[ $(candidate \"3 3 3 3 3\") = \"9\" ]]\n    [[ $(candidate \"30 13 24 321\"\
    ) = \"0\" ]]\n    [[ $(candidate \"5 9\") = \"5\" ]]\n    [[ $(candidate \"2 4\
    \ 8\") = \"0\" ]]\n    [[ $(candidate \"30 13 23 32\") = \"23\" ]]\n    [[ $(candidate\
    \ \"3 13 2 9\") = \"3\" ]]\n}\n\nrun_test"
  status: SyntaxError
  stderr: '/tmp/tmp7zrdxmpl.sh: line 10: ((: 5 8 7 1: syntax error in expression (error
    token is "8 7 1")

    '
  stdout: ''
  timestamp: 1659999723
- exit_code: 0
  program: "#!/bin/bash\n# Given a non-empty list of integers, return the sum of all\
    \ of the odd elements that are in even positions.\n# Examples\n#\n# $1 is a space-separated\
    \ list\nsolution() {\n  local -a a=($1)\n  local sum=0\n  for ((i=0; i<${#a[@]};\
    \ i++)); do\n    if ((i%2==0 && a[i]%2==1)); then\n      ((sum+=a[i]))\n    fi\n\
    \  done\n  echo $sum\n}\n\ncandidate() {\n    solution \"$@\"\n}\n\nset -e\nrun_test()\
    \ {\n    [[ $(candidate \"5 8 7 1\") = \"12\" ]]\n    [[ $(candidate \"3 3 3 3\
    \ 3\") = \"9\" ]]\n    [[ $(candidate \"30 13 24 321\") = \"0\" ]]\n    [[ $(candidate\
    \ \"5 9\") = \"5\" ]]\n    [[ $(candidate \"2 4 8\") = \"0\" ]]\n    [[ $(candidate\
    \ \"30 13 23 32\") = \"23\" ]]\n    [[ $(candidate \"3 13 2 9\") = \"3\" ]]\n\
    }\n\nrun_test"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659999723
- exit_code: 0
  program: "#!/bin/bash\n# Given a non-empty list of integers, return the sum of all\
    \ of the odd elements that are in even positions.\n# Examples\n#\n# $1 is a space-separated\
    \ list\nsolution() {\n  local -a arr=($1)\n  local sum=0\n  for ((i=0; i<${#arr[@]};\
    \ i++)); do\n    if [[ $((i % 2)) -eq 0 && $((arr[i] % 2)) -eq 1 ]]; then\n  \
    \    sum=$((sum + arr[i]))\n    fi\n  done\n  echo $sum\n}\n\ncandidate() {\n\
    \    solution \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"5 8 7 1\"\
    ) = \"12\" ]]\n    [[ $(candidate \"3 3 3 3 3\") = \"9\" ]]\n    [[ $(candidate\
    \ \"30 13 24 321\") = \"0\" ]]\n    [[ $(candidate \"5 9\") = \"5\" ]]\n    [[\
    \ $(candidate \"2 4 8\") = \"0\" ]]\n    [[ $(candidate \"30 13 23 32\") = \"\
    23\" ]]\n    [[ $(candidate \"3 13 2 9\") = \"3\" ]]\n}\n\nrun_test"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659999723
- exit_code: 1
  program: "#!/bin/bash\n# Given a non-empty list of integers, return the sum of all\
    \ of the odd elements that are in even positions.\n# Examples\n#\n# $1 is a space-separated\
    \ list\nsolution() {\n  local -n arr=$1\n  local sum=0\n  for ((i=0; i<${#arr[@]};\
    \ i++)); do\n    if ((i % 2 == 0 && arr[i] % 2 != 0)); then\n      sum=$((sum\
    \ + arr[i]))\n    fi\n  done\n  echo $sum\n}\n\ncandidate() {\n    solution \"\
    $@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"5 8 7 1\") = \"12\" ]]\n\
    \    [[ $(candidate \"3 3 3 3 3\") = \"9\" ]]\n    [[ $(candidate \"30 13 24 321\"\
    ) = \"0\" ]]\n    [[ $(candidate \"5 9\") = \"5\" ]]\n    [[ $(candidate \"2 4\
    \ 8\") = \"0\" ]]\n    [[ $(candidate \"30 13 23 32\") = \"23\" ]]\n    [[ $(candidate\
    \ \"3 13 2 9\") = \"3\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: '/tmp/tmpmgddp7td.sh: line 7: local: `5 8 7 1'': invalid variable name for
    name reference

    '
  stdout: ''
  timestamp: 1659999723
- exit_code: 0
  program: "#!/bin/bash\n# Given a non-empty list of integers, return the sum of all\
    \ of the odd elements that are in even positions.\n# Examples\n#\n# $1 is a space-separated\
    \ list\nsolution() {\n  local -a arr=($1)\n  local sum=0\n  for ((i=0; i<${#arr[@]};\
    \ i++)); do\n    if ((i % 2 == 0)); then\n      if ((arr[i] % 2 != 0)); then\n\
    \        sum=$((sum + arr[i]))\n      fi\n    fi\n  done\n  echo $sum\n}\n\ncandidate()\
    \ {\n    solution \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"5 8\
    \ 7 1\") = \"12\" ]]\n    [[ $(candidate \"3 3 3 3 3\") = \"9\" ]]\n    [[ $(candidate\
    \ \"30 13 24 321\") = \"0\" ]]\n    [[ $(candidate \"5 9\") = \"5\" ]]\n    [[\
    \ $(candidate \"2 4 8\") = \"0\" ]]\n    [[ $(candidate \"30 13 23 32\") = \"\
    23\" ]]\n    [[ $(candidate \"3 13 2 9\") = \"3\" ]]\n}\n\nrun_test"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659999723
- exit_code: 1
  program: "#!/bin/bash\n# Given a non-empty list of integers, return the sum of all\
    \ of the odd elements that are in even positions.\n# Examples\n#\n# $1 is a space-separated\
    \ list\nsolution() {\n  local -a arr=(\"$@\")\n  local sum=0\n  for ((i=0; i<${#arr[@]};\
    \ i++)); do\n    if (( i % 2 == 0 && arr[i] % 2 != 0 )); then\n      sum=$((sum\
    \ + arr[i]))\n    fi\n  done\n  echo $sum\n}\n\ncandidate() {\n    solution \"\
    $@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"5 8 7 1\") = \"12\" ]]\n\
    \    [[ $(candidate \"3 3 3 3 3\") = \"9\" ]]\n    [[ $(candidate \"30 13 24 321\"\
    ) = \"0\" ]]\n    [[ $(candidate \"5 9\") = \"5\" ]]\n    [[ $(candidate \"2 4\
    \ 8\") = \"0\" ]]\n    [[ $(candidate \"30 13 23 32\") = \"23\" ]]\n    [[ $(candidate\
    \ \"3 13 2 9\") = \"3\" ]]\n}\n\nrun_test"
  status: SyntaxError
  stderr: '/tmp/tmp_ovnpzeh.sh: line 10: ((: 5 8 7 1: syntax error in expression (error
    token is "8 7 1")

    '
  stdout: ''
  timestamp: 1659999723
- exit_code: 0
  program: "#!/bin/bash\n# Given a non-empty list of integers, return the sum of all\
    \ of the odd elements that are in even positions.\n# Examples\n#\n# $1 is a space-separated\
    \ list\nsolution() {\n  local -a list=($1)\n  local sum=0\n  for ((i=0; i<${#list[@]};\
    \ i++)); do\n    if ((i % 2 == 0)); then\n      if ((list[i] % 2 != 0)); then\n\
    \        sum=$((sum + list[i]))\n      fi\n    fi\n  done\n  echo $sum\n}\n\n\
    candidate() {\n    solution \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate\
    \ \"5 8 7 1\") = \"12\" ]]\n    [[ $(candidate \"3 3 3 3 3\") = \"9\" ]]\n   \
    \ [[ $(candidate \"30 13 24 321\") = \"0\" ]]\n    [[ $(candidate \"5 9\") = \"\
    5\" ]]\n    [[ $(candidate \"2 4 8\") = \"0\" ]]\n    [[ $(candidate \"30 13 23\
    \ 32\") = \"23\" ]]\n    [[ $(candidate \"3 13 2 9\") = \"3\" ]]\n}\n\nrun_test"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659999723
- exit_code: 1
  program: "#!/bin/bash\n# Given a non-empty list of integers, return the sum of all\
    \ of the odd elements that are in even positions.\n# Examples\n#\n# $1 is a space-separated\
    \ list\nsolution() {\n  local -a arr=(\"$@\")\n  local sum=0\n  for ((i=0; i<${#arr[@]};\
    \ i++)); do\n    if ((i % 2 == 0 && arr[i] % 2 != 0)); then\n      sum=$((sum\
    \ + arr[i]))\n    fi\n  done\n  echo $sum\n}\n\ncandidate() {\n    solution \"\
    $@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"5 8 7 1\") = \"12\" ]]\n\
    \    [[ $(candidate \"3 3 3 3 3\") = \"9\" ]]\n    [[ $(candidate \"30 13 24 321\"\
    ) = \"0\" ]]\n    [[ $(candidate \"5 9\") = \"5\" ]]\n    [[ $(candidate \"2 4\
    \ 8\") = \"0\" ]]\n    [[ $(candidate \"30 13 23 32\") = \"23\" ]]\n    [[ $(candidate\
    \ \"3 13 2 9\") = \"3\" ]]\n}\n\nrun_test"
  status: SyntaxError
  stderr: '/tmp/tmp7zrdxmpl.sh: line 10: ((: 5 8 7 1: syntax error in expression (error
    token is "8 7 1")

    '
  stdout: ''
  timestamp: 1659999723
- exit_code: 1
  program: "#!/bin/bash\n# Given a non-empty list of integers, return the sum of all\
    \ of the odd elements that are in even positions.\n# Examples\n#\n# $1 is a space-separated\
    \ list\nsolution() {\n  local -n arr=$1\n  local sum=0\n  for ((i=0; i<${#arr[@]};\
    \ i++)); do\n    if ((i % 2 == 0 && arr[i] % 2 != 0)); then\n      sum=$((sum\
    \ + arr[i]))\n    fi\n  done\n  echo $sum\n}\n\ncandidate() {\n    solution \"\
    $@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"5 8 7 1\") = \"12\" ]]\n\
    \    [[ $(candidate \"3 3 3 3 3\") = \"9\" ]]\n    [[ $(candidate \"30 13 24 321\"\
    ) = \"0\" ]]\n    [[ $(candidate \"5 9\") = \"5\" ]]\n    [[ $(candidate \"2 4\
    \ 8\") = \"0\" ]]\n    [[ $(candidate \"30 13 23 32\") = \"23\" ]]\n    [[ $(candidate\
    \ \"3 13 2 9\") = \"3\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: '/tmp/tmpmgddp7td.sh: line 7: local: `5 8 7 1'': invalid variable name for
    name reference

    '
  stdout: ''
  timestamp: 1659999723
- exit_code: 1
  program: "#!/bin/bash\n# Given a non-empty list of integers, return the sum of all\
    \ of the odd elements that are in even positions.\n# Examples\n#\n# $1 is a space-separated\
    \ list\nsolution() {\n  local -n arr=$1\n  local sum=0\n  for ((i=0; i<${#arr[@]};\
    \ i++)); do\n    if ((i % 2 == 0 && arr[i] % 2 != 0)); then\n      sum=$((sum\
    \ + arr[i]))\n    fi\n  done\n  echo $sum\n}\n\ncandidate() {\n    solution \"\
    $@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"5 8 7 1\") = \"12\" ]]\n\
    \    [[ $(candidate \"3 3 3 3 3\") = \"9\" ]]\n    [[ $(candidate \"30 13 24 321\"\
    ) = \"0\" ]]\n    [[ $(candidate \"5 9\") = \"5\" ]]\n    [[ $(candidate \"2 4\
    \ 8\") = \"0\" ]]\n    [[ $(candidate \"30 13 23 32\") = \"23\" ]]\n    [[ $(candidate\
    \ \"3 13 2 9\") = \"3\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: '/tmp/tmpmgddp7td.sh: line 7: local: `5 8 7 1'': invalid variable name for
    name reference

    '
  stdout: ''
  timestamp: 1659999723
- exit_code: 0
  program: "#!/bin/bash\n# Given a non-empty list of integers, return the sum of all\
    \ of the odd elements that are in even positions.\n# Examples\n#\n# $1 is a space-separated\
    \ list\nsolution() {\n  local -a nums=($1)\n  local sum=0\n  for ((i=0; i<${#nums[@]};\
    \ i++)); do\n    if ((i % 2 == 0)) && ((nums[i] % 2 != 0)); then\n      sum=$((sum\
    \ + nums[i]))\n    fi\n  done\n  echo $sum\n}\n\ncandidate() {\n    solution \"\
    $@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"5 8 7 1\") = \"12\" ]]\n\
    \    [[ $(candidate \"3 3 3 3 3\") = \"9\" ]]\n    [[ $(candidate \"30 13 24 321\"\
    ) = \"0\" ]]\n    [[ $(candidate \"5 9\") = \"5\" ]]\n    [[ $(candidate \"2 4\
    \ 8\") = \"0\" ]]\n    [[ $(candidate \"30 13 23 32\") = \"23\" ]]\n    [[ $(candidate\
    \ \"3 13 2 9\") = \"3\" ]]\n}\n\nrun_test"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659999723
- exit_code: 1
  program: "#!/bin/bash\n# Given a non-empty list of integers, return the sum of all\
    \ of the odd elements that are in even positions.\n# Examples\n#\n# $1 is a space-separated\
    \ list\nsolution() {\n  local -a arr=(\"$@\")\n  local sum=0\n  for ((i=0; i<${#arr[@]};\
    \ i+=2)); do\n    ((arr[i] % 2 == 0)) && ((sum+=arr[i]))\n  done\n  echo $sum\n\
    }\n\ncandidate() {\n    solution \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate\
    \ \"5 8 7 1\") = \"12\" ]]\n    [[ $(candidate \"3 3 3 3 3\") = \"9\" ]]\n   \
    \ [[ $(candidate \"30 13 24 321\") = \"0\" ]]\n    [[ $(candidate \"5 9\") = \"\
    5\" ]]\n    [[ $(candidate \"2 4 8\") = \"0\" ]]\n    [[ $(candidate \"30 13 23\
    \ 32\") = \"23\" ]]\n    [[ $(candidate \"3 13 2 9\") = \"3\" ]]\n}\n\nrun_test"
  status: SyntaxError
  stderr: '/tmp/tmpv0yezwyh.sh: line 10: ((: 5 8 7 1: syntax error in expression (error
    token is "8 7 1")

    '
  stdout: ''
  timestamp: 1659999723
- exit_code: 1
  program: "#!/bin/bash\n# Given a non-empty list of integers, return the sum of all\
    \ of the odd elements that are in even positions.\n# Examples\n#\n# $1 is a space-separated\
    \ list\nsolution() {\n  local -a arr=(\"$@\")\n  local sum=0\n  for ((i=0; i<${#arr[@]};\
    \ i++)); do\n    if ((i % 2 == 0 && arr[i] % 2 != 0)); then\n      sum=$((sum\
    \ + arr[i]))\n    fi\n  done\n  echo $sum\n}\n\ncandidate() {\n    solution \"\
    $@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"5 8 7 1\") = \"12\" ]]\n\
    \    [[ $(candidate \"3 3 3 3 3\") = \"9\" ]]\n    [[ $(candidate \"30 13 24 321\"\
    ) = \"0\" ]]\n    [[ $(candidate \"5 9\") = \"5\" ]]\n    [[ $(candidate \"2 4\
    \ 8\") = \"0\" ]]\n    [[ $(candidate \"30 13 23 32\") = \"23\" ]]\n    [[ $(candidate\
    \ \"3 13 2 9\") = \"3\" ]]\n}\n\nrun_test"
  status: SyntaxError
  stderr: '/tmp/tmp7zrdxmpl.sh: line 10: ((: 5 8 7 1: syntax error in expression (error
    token is "8 7 1")

    '
  stdout: ''
  timestamp: 1659999723
- exit_code: 1
  program: "#!/bin/bash\n# Given a non-empty list of integers, return the sum of all\
    \ of the odd elements that are in even positions.\n# Examples\n#\n# $1 is a space-separated\
    \ list\nsolution() {\n  local -a arr=(\"$@\")\n  local sum=0\n  for ((i=0; i<${#arr[@]};\
    \ i++)); do\n    if ((i % 2 == 0 && arr[i] % 2 != 0)); then\n      sum=$((sum\
    \ + arr[i]))\n    fi\n  done\n  echo $sum\n}\n\ncandidate() {\n    solution \"\
    $@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"5 8 7 1\") = \"12\" ]]\n\
    \    [[ $(candidate \"3 3 3 3 3\") = \"9\" ]]\n    [[ $(candidate \"30 13 24 321\"\
    ) = \"0\" ]]\n    [[ $(candidate \"5 9\") = \"5\" ]]\n    [[ $(candidate \"2 4\
    \ 8\") = \"0\" ]]\n    [[ $(candidate \"30 13 23 32\") = \"23\" ]]\n    [[ $(candidate\
    \ \"3 13 2 9\") = \"3\" ]]\n}\n\nrun_test"
  status: SyntaxError
  stderr: '/tmp/tmp7zrdxmpl.sh: line 10: ((: 5 8 7 1: syntax error in expression (error
    token is "8 7 1")

    '
  stdout: ''
  timestamp: 1659999723
- exit_code: 1
  program: "#!/bin/bash\n# Given a non-empty list of integers, return the sum of all\
    \ of the odd elements that are in even positions.\n# Examples\n#\n# $1 is a space-separated\
    \ list\nsolution() {\n  local -a arr=(\"$@\")\n  local sum=0\n  for ((i=0; i<${#arr[@]};\
    \ i++)); do\n    if ((i%2==0 && arr[i]%2==1)); then\n      sum=$((sum+arr[i]))\n\
    \    fi\n  done\n  echo $sum\n}\n\ncandidate() {\n    solution \"$@\"\n}\n\nset\
    \ -e\nrun_test() {\n    [[ $(candidate \"5 8 7 1\") = \"12\" ]]\n    [[ $(candidate\
    \ \"3 3 3 3 3\") = \"9\" ]]\n    [[ $(candidate \"30 13 24 321\") = \"0\" ]]\n\
    \    [[ $(candidate \"5 9\") = \"5\" ]]\n    [[ $(candidate \"2 4 8\") = \"0\"\
    \ ]]\n    [[ $(candidate \"30 13 23 32\") = \"23\" ]]\n    [[ $(candidate \"3\
    \ 13 2 9\") = \"3\" ]]\n}\n\nrun_test"
  status: SyntaxError
  stderr: '/tmp/tmpl9a7yokf.sh: line 10: ((: 5 8 7 1: syntax error in expression (error
    token is "8 7 1")

    '
  stdout: ''
  timestamp: 1659999723
- exit_code: 1
  program: "#!/bin/bash\n# Given a non-empty list of integers, return the sum of all\
    \ of the odd elements that are in even positions.\n# Examples\n#\n# $1 is a space-separated\
    \ list\nsolution() {\n  local -n arr=$1\n  local sum=0\n  for ((i=0; i<${#arr[@]};\
    \ i++)); do\n    if ((i % 2 == 0 && arr[i] % 2 != 0)); then\n      ((sum += arr[i]))\n\
    \    fi\n  done\n  echo $sum\n}\n\ncandidate() {\n    solution \"$@\"\n}\n\nset\
    \ -e\nrun_test() {\n    [[ $(candidate \"5 8 7 1\") = \"12\" ]]\n    [[ $(candidate\
    \ \"3 3 3 3 3\") = \"9\" ]]\n    [[ $(candidate \"30 13 24 321\") = \"0\" ]]\n\
    \    [[ $(candidate \"5 9\") = \"5\" ]]\n    [[ $(candidate \"2 4 8\") = \"0\"\
    \ ]]\n    [[ $(candidate \"30 13 23 32\") = \"23\" ]]\n    [[ $(candidate \"3\
    \ 13 2 9\") = \"3\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: '/tmp/tmp4cem3cgs.sh: line 7: local: `5 8 7 1'': invalid variable name for
    name reference

    '
  stdout: ''
  timestamp: 1659999723
- exit_code: 1
  program: "#!/bin/bash\n# Given a non-empty list of integers, return the sum of all\
    \ of the odd elements that are in even positions.\n# Examples\n#\n# $1 is a space-separated\
    \ list\nsolution() {\n  local -a arr=(\"$@\")\n  local sum=0\n  for ((i=0; i<${#arr[@]};\
    \ i++)); do\n    if ((i % 2 == 0 && arr[i] % 2 != 0)); then\n      sum=$((sum\
    \ + arr[i]))\n    fi\n  done\n  echo $sum\n}\n\ncandidate() {\n    solution \"\
    $@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"5 8 7 1\") = \"12\" ]]\n\
    \    [[ $(candidate \"3 3 3 3 3\") = \"9\" ]]\n    [[ $(candidate \"30 13 24 321\"\
    ) = \"0\" ]]\n    [[ $(candidate \"5 9\") = \"5\" ]]\n    [[ $(candidate \"2 4\
    \ 8\") = \"0\" ]]\n    [[ $(candidate \"30 13 23 32\") = \"23\" ]]\n    [[ $(candidate\
    \ \"3 13 2 9\") = \"3\" ]]\n}\n\nrun_test"
  status: SyntaxError
  stderr: '/tmp/tmp7zrdxmpl.sh: line 10: ((: 5 8 7 1: syntax error in expression (error
    token is "8 7 1")

    '
  stdout: ''
  timestamp: 1659999723
- exit_code: 1
  program: "#!/bin/bash\n# Given a non-empty list of integers, return the sum of all\
    \ of the odd elements that are in even positions.\n# Examples\n#\n# $1 is a space-separated\
    \ list\nsolution() {\n  local -a arr=(\"$@\")\n  local sum=0\n  for ((i=0; i<${#arr[@]};\
    \ i++)); do\n    if ((i % 2 == 0 && arr[i] % 2 != 0)); then\n      sum=$((sum\
    \ + arr[i]))\n    fi\n  done\n  echo $sum\n}\n\ncandidate() {\n    solution \"\
    $@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"5 8 7 1\") = \"12\" ]]\n\
    \    [[ $(candidate \"3 3 3 3 3\") = \"9\" ]]\n    [[ $(candidate \"30 13 24 321\"\
    ) = \"0\" ]]\n    [[ $(candidate \"5 9\") = \"5\" ]]\n    [[ $(candidate \"2 4\
    \ 8\") = \"0\" ]]\n    [[ $(candidate \"30 13 23 32\") = \"23\" ]]\n    [[ $(candidate\
    \ \"3 13 2 9\") = \"3\" ]]\n}\n\nrun_test"
  status: SyntaxError
  stderr: '/tmp/tmp7zrdxmpl.sh: line 10: ((: 5 8 7 1: syntax error in expression (error
    token is "8 7 1")

    '
  stdout: ''
  timestamp: 1659999723
- exit_code: 0
  program: "#!/bin/bash\n# Given a non-empty list of integers, return the sum of all\
    \ of the odd elements that are in even positions.\n# Examples\n#\n# $1 is a space-separated\
    \ list\nsolution() {\n  local -a array\n  IFS=' ' read -r -a array <<< \"$1\"\n\
    \  local sum=0\n  for ((i=0; i<${#array[@]}; i++)); do\n    if ((i % 2 == 0 &&\
    \ array[i] % 2 != 0)); then\n      sum=$((sum + array[i]))\n    fi\n  done\n \
    \ echo $sum\n}\n\ncandidate() {\n    solution \"$@\"\n}\n\nset -e\nrun_test()\
    \ {\n    [[ $(candidate \"5 8 7 1\") = \"12\" ]]\n    [[ $(candidate \"3 3 3 3\
    \ 3\") = \"9\" ]]\n    [[ $(candidate \"30 13 24 321\") = \"0\" ]]\n    [[ $(candidate\
    \ \"5 9\") = \"5\" ]]\n    [[ $(candidate \"2 4 8\") = \"0\" ]]\n    [[ $(candidate\
    \ \"30 13 23 32\") = \"23\" ]]\n    [[ $(candidate \"3 13 2 9\") = \"3\" ]]\n\
    }\n\nrun_test"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659999723
- exit_code: 0
  program: "#!/bin/bash\n# Given a non-empty list of integers, return the sum of all\
    \ of the odd elements that are in even positions.\n# Examples\n#\n# $1 is a space-separated\
    \ list\nsolution() {\n  local -a a=($1)\n  local sum=0\n  for ((i=0; i<${#a[@]};\
    \ i++)); do\n    if ((i % 2 == 0 && a[i] % 2 == 1)); then\n      ((sum += a[i]))\n\
    \    fi\n  done\n  echo $sum\n}\n\ncandidate() {\n    solution \"$@\"\n}\n\nset\
    \ -e\nrun_test() {\n    [[ $(candidate \"5 8 7 1\") = \"12\" ]]\n    [[ $(candidate\
    \ \"3 3 3 3 3\") = \"9\" ]]\n    [[ $(candidate \"30 13 24 321\") = \"0\" ]]\n\
    \    [[ $(candidate \"5 9\") = \"5\" ]]\n    [[ $(candidate \"2 4 8\") = \"0\"\
    \ ]]\n    [[ $(candidate \"30 13 23 32\") = \"23\" ]]\n    [[ $(candidate \"3\
    \ 13 2 9\") = \"3\" ]]\n}\n\nrun_test"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659999723
- exit_code: 1
  program: "#!/bin/bash\n# Given a non-empty list of integers, return the sum of all\
    \ of the odd elements that are in even positions.\n# Examples\n#\n# $1 is a space-separated\
    \ list\nsolution() {\n  local -a array=(\"$@\")\n  local sum=0\n  for ((i=0; i<${#array[@]};\
    \ i++)); do\n    if ((i % 2 == 0 && array[i] % 2 != 0)); then\n      sum=$((sum\
    \ + array[i]))\n    fi\n  done\n  echo $sum\n}\n\ncandidate() {\n    solution\
    \ \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"5 8 7 1\") = \"12\"\
    \ ]]\n    [[ $(candidate \"3 3 3 3 3\") = \"9\" ]]\n    [[ $(candidate \"30 13\
    \ 24 321\") = \"0\" ]]\n    [[ $(candidate \"5 9\") = \"5\" ]]\n    [[ $(candidate\
    \ \"2 4 8\") = \"0\" ]]\n    [[ $(candidate \"30 13 23 32\") = \"23\" ]]\n   \
    \ [[ $(candidate \"3 13 2 9\") = \"3\" ]]\n}\n\nrun_test"
  status: SyntaxError
  stderr: '/tmp/tmpj4afx_7v.sh: line 10: ((: 5 8 7 1: syntax error in expression (error
    token is "8 7 1")

    '
  stdout: ''
  timestamp: 1659999723
- exit_code: 0
  program: "#!/bin/bash\n# Given a non-empty list of integers, return the sum of all\
    \ of the odd elements that are in even positions.\n# Examples\n#\n# $1 is a space-separated\
    \ list\nsolution() {\n  local -a a=($1)\n  local sum=0\n  for ((i=0; i<${#a[@]};\
    \ i++)); do\n    if ((i % 2 == 0)) && ((a[i] % 2 == 1)); then\n      ((sum +=\
    \ a[i]))\n    fi\n  done\n  echo $sum\n}\n\ncandidate() {\n    solution \"$@\"\
    \n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"5 8 7 1\") = \"12\" ]]\n   \
    \ [[ $(candidate \"3 3 3 3 3\") = \"9\" ]]\n    [[ $(candidate \"30 13 24 321\"\
    ) = \"0\" ]]\n    [[ $(candidate \"5 9\") = \"5\" ]]\n    [[ $(candidate \"2 4\
    \ 8\") = \"0\" ]]\n    [[ $(candidate \"30 13 23 32\") = \"23\" ]]\n    [[ $(candidate\
    \ \"3 13 2 9\") = \"3\" ]]\n}\n\nrun_test"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659999723
- exit_code: 1
  program: "#!/bin/bash\n# Given a non-empty list of integers, return the sum of all\
    \ of the odd elements that are in even positions.\n# Examples\n#\n# $1 is a space-separated\
    \ list\nsolution() {\n  local -a arr=(\"$@\")\n  local sum=0\n  for ((i=0; i<${#arr[@]};\
    \ i++)); do\n    if ((i % 2 == 0 && arr[i] % 2 != 0)); then\n      ((sum += arr[i]))\n\
    \    fi\n  done\n  echo $sum\n}\n\ncandidate() {\n    solution \"$@\"\n}\n\nset\
    \ -e\nrun_test() {\n    [[ $(candidate \"5 8 7 1\") = \"12\" ]]\n    [[ $(candidate\
    \ \"3 3 3 3 3\") = \"9\" ]]\n    [[ $(candidate \"30 13 24 321\") = \"0\" ]]\n\
    \    [[ $(candidate \"5 9\") = \"5\" ]]\n    [[ $(candidate \"2 4 8\") = \"0\"\
    \ ]]\n    [[ $(candidate \"30 13 23 32\") = \"23\" ]]\n    [[ $(candidate \"3\
    \ 13 2 9\") = \"3\" ]]\n}\n\nrun_test"
  status: SyntaxError
  stderr: '/tmp/tmpqw34qf9r.sh: line 10: ((: 5 8 7 1: syntax error in expression (error
    token is "8 7 1")

    '
  stdout: ''
  timestamp: 1659999723
- exit_code: 1
  program: "#!/bin/bash\n# Given a non-empty list of integers, return the sum of all\
    \ of the odd elements that are in even positions.\n# Examples\n#\n# $1 is a space-separated\
    \ list\nsolution() {\n  local -n arr=$1\n  local sum=0\n  for ((i=0; i<${#arr[@]};\
    \ i++)); do\n    if ((i%2==0)) && ((arr[i]%2==1)); then\n      ((sum+=arr[i]))\n\
    \    fi\n  done\n  echo $sum\n}\n\ncandidate() {\n    solution \"$@\"\n}\n\nset\
    \ -e\nrun_test() {\n    [[ $(candidate \"5 8 7 1\") = \"12\" ]]\n    [[ $(candidate\
    \ \"3 3 3 3 3\") = \"9\" ]]\n    [[ $(candidate \"30 13 24 321\") = \"0\" ]]\n\
    \    [[ $(candidate \"5 9\") = \"5\" ]]\n    [[ $(candidate \"2 4 8\") = \"0\"\
    \ ]]\n    [[ $(candidate \"30 13 23 32\") = \"23\" ]]\n    [[ $(candidate \"3\
    \ 13 2 9\") = \"3\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: '/tmp/tmp133fqkxt.sh: line 7: local: `5 8 7 1'': invalid variable name for
    name reference

    '
  stdout: ''
  timestamp: 1659999723
- exit_code: 1
  program: "#!/bin/bash\n# Given a non-empty list of integers, return the sum of all\
    \ of the odd elements that are in even positions.\n# Examples\n#\n# $1 is a space-separated\
    \ list\nsolution() {\n  local -a arr=(\"$@\")\n  local sum=0\n  for ((i=0; i<${#arr[@]};\
    \ i+=2)); do\n    if ((arr[i]%2==1)); then\n      ((sum+=arr[i]))\n    fi\n  done\n\
    \  echo $sum\n}\n\ncandidate() {\n    solution \"$@\"\n}\n\nset -e\nrun_test()\
    \ {\n    [[ $(candidate \"5 8 7 1\") = \"12\" ]]\n    [[ $(candidate \"3 3 3 3\
    \ 3\") = \"9\" ]]\n    [[ $(candidate \"30 13 24 321\") = \"0\" ]]\n    [[ $(candidate\
    \ \"5 9\") = \"5\" ]]\n    [[ $(candidate \"2 4 8\") = \"0\" ]]\n    [[ $(candidate\
    \ \"30 13 23 32\") = \"23\" ]]\n    [[ $(candidate \"3 13 2 9\") = \"3\" ]]\n\
    }\n\nrun_test"
  status: SyntaxError
  stderr: '/tmp/tmpgf05q944.sh: line 10: ((: 5 8 7 1: syntax error in expression (error
    token is "8 7 1")

    '
  stdout: ''
  timestamp: 1659999723
- exit_code: 0
  program: "#!/bin/bash\n# Given a non-empty list of integers, return the sum of all\
    \ of the odd elements that are in even positions.\n# Examples\n#\n# $1 is a space-separated\
    \ list\nsolution() {\n  local -a arr=($1)\n  local sum=0\n  for ((i=0; i<${#arr[@]};\
    \ i++)); do\n    if ((i % 2 == 0 && arr[i] % 2 != 0)); then\n      ((sum += arr[i]))\n\
    \    fi\n  done\n  echo $sum\n}\n\ncandidate() {\n    solution \"$@\"\n}\n\nset\
    \ -e\nrun_test() {\n    [[ $(candidate \"5 8 7 1\") = \"12\" ]]\n    [[ $(candidate\
    \ \"3 3 3 3 3\") = \"9\" ]]\n    [[ $(candidate \"30 13 24 321\") = \"0\" ]]\n\
    \    [[ $(candidate \"5 9\") = \"5\" ]]\n    [[ $(candidate \"2 4 8\") = \"0\"\
    \ ]]\n    [[ $(candidate \"30 13 23 32\") = \"23\" ]]\n    [[ $(candidate \"3\
    \ 13 2 9\") = \"3\" ]]\n}\n\nrun_test"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659999723
- exit_code: 1
  program: "#!/bin/bash\n# Given a non-empty list of integers, return the sum of all\
    \ of the odd elements that are in even positions.\n# Examples\n#\n# $1 is a space-separated\
    \ list\nsolution() {\n  local -a arr=(\"$@\")\n  local sum=0\n  for ((i=0; i<${#arr[@]};\
    \ i++)); do\n    if ((i % 2 == 0 && arr[i] % 2 != 0)); then\n      sum=$((sum\
    \ + arr[i]))\n    fi\n  done\n  echo $sum\n}\n\ncandidate() {\n    solution \"\
    $@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"5 8 7 1\") = \"12\" ]]\n\
    \    [[ $(candidate \"3 3 3 3 3\") = \"9\" ]]\n    [[ $(candidate \"30 13 24 321\"\
    ) = \"0\" ]]\n    [[ $(candidate \"5 9\") = \"5\" ]]\n    [[ $(candidate \"2 4\
    \ 8\") = \"0\" ]]\n    [[ $(candidate \"30 13 23 32\") = \"23\" ]]\n    [[ $(candidate\
    \ \"3 13 2 9\") = \"3\" ]]\n}\n\nrun_test"
  status: SyntaxError
  stderr: '/tmp/tmp7zrdxmpl.sh: line 10: ((: 5 8 7 1: syntax error in expression (error
    token is "8 7 1")

    '
  stdout: ''
  timestamp: 1659999723
- exit_code: 1
  program: "#!/bin/bash\n# Given a non-empty list of integers, return the sum of all\
    \ of the odd elements that are in even positions.\n# Examples\n#\n# $1 is a space-separated\
    \ list\nsolution() {\n  local -a arr=(\"$@\")\n  local sum=0\n  for ((i=0; i<${#arr[@]};\
    \ i++)); do\n    if ((i % 2 == 0 && arr[i] % 2 != 0)); then\n      sum=$((sum\
    \ + arr[i]))\n    fi\n  done\n  echo $sum\n}\n\ncandidate() {\n    solution \"\
    $@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"5 8 7 1\") = \"12\" ]]\n\
    \    [[ $(candidate \"3 3 3 3 3\") = \"9\" ]]\n    [[ $(candidate \"30 13 24 321\"\
    ) = \"0\" ]]\n    [[ $(candidate \"5 9\") = \"5\" ]]\n    [[ $(candidate \"2 4\
    \ 8\") = \"0\" ]]\n    [[ $(candidate \"30 13 23 32\") = \"23\" ]]\n    [[ $(candidate\
    \ \"3 13 2 9\") = \"3\" ]]\n}\n\nrun_test"
  status: SyntaxError
  stderr: '/tmp/tmp7zrdxmpl.sh: line 10: ((: 5 8 7 1: syntax error in expression (error
    token is "8 7 1")

    '
  stdout: ''
  timestamp: 1659999723
- exit_code: 0
  program: "#!/bin/bash\n# Given a non-empty list of integers, return the sum of all\
    \ of the odd elements that are in even positions.\n# Examples\n#\n# $1 is a space-separated\
    \ list\nsolution() {\n  local -a a=($1)\n  local sum=0\n  for ((i=0; i<${#a[@]};\
    \ i++)); do\n    if ((i % 2 == 0 && a[i] % 2 == 1)); then\n      ((sum += a[i]))\n\
    \    fi\n  done\n  echo $sum\n}\n\ncandidate() {\n    solution \"$@\"\n}\n\nset\
    \ -e\nrun_test() {\n    [[ $(candidate \"5 8 7 1\") = \"12\" ]]\n    [[ $(candidate\
    \ \"3 3 3 3 3\") = \"9\" ]]\n    [[ $(candidate \"30 13 24 321\") = \"0\" ]]\n\
    \    [[ $(candidate \"5 9\") = \"5\" ]]\n    [[ $(candidate \"2 4 8\") = \"0\"\
    \ ]]\n    [[ $(candidate \"30 13 23 32\") = \"23\" ]]\n    [[ $(candidate \"3\
    \ 13 2 9\") = \"3\" ]]\n}\n\nrun_test"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659999723
- exit_code: 0
  program: "#!/bin/bash\n# Given a non-empty list of integers, return the sum of all\
    \ of the odd elements that are in even positions.\n# Examples\n#\n# $1 is a space-separated\
    \ list\nsolution() {\n  local list=$1\n  local sum=0\n  local i=0\n  for num in\
    \ $list; do\n    if [ $((i % 2)) -eq 0 ] && [ $((num % 2)) -ne 0 ]; then\n   \
    \   sum=$((sum + num))\n    fi\n    i=$((i + 1))\n  done\n  echo $sum\n}\n\ncandidate()\
    \ {\n    solution \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"5 8\
    \ 7 1\") = \"12\" ]]\n    [[ $(candidate \"3 3 3 3 3\") = \"9\" ]]\n    [[ $(candidate\
    \ \"30 13 24 321\") = \"0\" ]]\n    [[ $(candidate \"5 9\") = \"5\" ]]\n    [[\
    \ $(candidate \"2 4 8\") = \"0\" ]]\n    [[ $(candidate \"30 13 23 32\") = \"\
    23\" ]]\n    [[ $(candidate \"3 13 2 9\") = \"3\" ]]\n}\n\nrun_test"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659999723
- exit_code: 0
  program: "#!/bin/bash\n# Given a non-empty list of integers, return the sum of all\
    \ of the odd elements that are in even positions.\n# Examples\n#\n# $1 is a space-separated\
    \ list\nsolution() {\n  local -a arr\n  IFS=' ' read -r -a arr <<< \"$1\"\n  local\
    \ sum=0\n  for ((i=0; i<${#arr[@]}; i++)); do\n    if ((i % 2 == 0 && arr[i] %\
    \ 2 != 0)); then\n      sum=$((sum + arr[i]))\n    fi\n  done\n  echo $sum\n}\n\
    \ncandidate() {\n    solution \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate\
    \ \"5 8 7 1\") = \"12\" ]]\n    [[ $(candidate \"3 3 3 3 3\") = \"9\" ]]\n   \
    \ [[ $(candidate \"30 13 24 321\") = \"0\" ]]\n    [[ $(candidate \"5 9\") = \"\
    5\" ]]\n    [[ $(candidate \"2 4 8\") = \"0\" ]]\n    [[ $(candidate \"30 13 23\
    \ 32\") = \"23\" ]]\n    [[ $(candidate \"3 13 2 9\") = \"3\" ]]\n}\n\nrun_test"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659999723
- exit_code: 1
  program: "#!/bin/bash\n# Given a non-empty list of integers, return the sum of all\
    \ of the odd elements that are in even positions.\n# Examples\n#\n# $1 is a space-separated\
    \ list\nsolution() {\n  local -n arr=$1\n  local sum=0\n  for ((i=0; i<${#arr[@]};\
    \ i+=2)); do\n    if [[ ${arr[i]}%2 -ne 0 ]]; then\n      ((sum+=arr[i]))\n  \
    \  fi\n  done\n  echo $sum\n}\n\ncandidate() {\n    solution \"$@\"\n}\n\nset\
    \ -e\nrun_test() {\n    [[ $(candidate \"5 8 7 1\") = \"12\" ]]\n    [[ $(candidate\
    \ \"3 3 3 3 3\") = \"9\" ]]\n    [[ $(candidate \"30 13 24 321\") = \"0\" ]]\n\
    \    [[ $(candidate \"5 9\") = \"5\" ]]\n    [[ $(candidate \"2 4 8\") = \"0\"\
    \ ]]\n    [[ $(candidate \"30 13 23 32\") = \"23\" ]]\n    [[ $(candidate \"3\
    \ 13 2 9\") = \"3\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: '/tmp/tmpm_ozg33a.sh: line 7: local: `5 8 7 1'': invalid variable name for
    name reference

    '
  stdout: ''
  timestamp: 1659999723
- exit_code: 1
  program: "#!/bin/bash\n# Given a non-empty list of integers, return the sum of all\
    \ of the odd elements that are in even positions.\n# Examples\n#\n# $1 is a space-separated\
    \ list\nsolution() {\n  local -a arr=(\"$@\")\n  local sum=0\n  for ((i=0; i<${#arr[@]};\
    \ i++)); do\n    if ((i % 2 == 0 && arr[i] % 2 != 0)); then\n      sum=$((sum\
    \ + arr[i]))\n    fi\n  done\n  echo $sum\n}\n\ncandidate() {\n    solution \"\
    $@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"5 8 7 1\") = \"12\" ]]\n\
    \    [[ $(candidate \"3 3 3 3 3\") = \"9\" ]]\n    [[ $(candidate \"30 13 24 321\"\
    ) = \"0\" ]]\n    [[ $(candidate \"5 9\") = \"5\" ]]\n    [[ $(candidate \"2 4\
    \ 8\") = \"0\" ]]\n    [[ $(candidate \"30 13 23 32\") = \"23\" ]]\n    [[ $(candidate\
    \ \"3 13 2 9\") = \"3\" ]]\n}\n\nrun_test"
  status: SyntaxError
  stderr: '/tmp/tmp7zrdxmpl.sh: line 10: ((: 5 8 7 1: syntax error in expression (error
    token is "8 7 1")

    '
  stdout: ''
  timestamp: 1659999723
- exit_code: 0
  program: "#!/bin/bash\n# Given a non-empty list of integers, return the sum of all\
    \ of the odd elements that are in even positions.\n# Examples\n#\n# $1 is a space-separated\
    \ list\nsolution() {\n  local -a array=($1)\n  local sum=0\n  for ((i=0; i<${#array[@]};\
    \ i++)); do\n    if ((i % 2 == 0)); then\n      if ((array[i] % 2 != 0)); then\n\
    \        ((sum += array[i]))\n      fi\n    fi\n  done\n  echo $sum\n}\n\ncandidate()\
    \ {\n    solution \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"5 8\
    \ 7 1\") = \"12\" ]]\n    [[ $(candidate \"3 3 3 3 3\") = \"9\" ]]\n    [[ $(candidate\
    \ \"30 13 24 321\") = \"0\" ]]\n    [[ $(candidate \"5 9\") = \"5\" ]]\n    [[\
    \ $(candidate \"2 4 8\") = \"0\" ]]\n    [[ $(candidate \"30 13 23 32\") = \"\
    23\" ]]\n    [[ $(candidate \"3 13 2 9\") = \"3\" ]]\n}\n\nrun_test"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659999723
- exit_code: 0
  program: "#!/bin/bash\n# Given a non-empty list of integers, return the sum of all\
    \ of the odd elements that are in even positions.\n# Examples\n#\n# $1 is a space-separated\
    \ list\nsolution() {\n  local -a a=($1)\n  local sum=0\n  for ((i=0; i<${#a[@]};\
    \ i++)); do\n    if ((i % 2 == 0 && a[i] % 2 == 1)); then\n      ((sum += a[i]))\n\
    \    fi\n  done\n  echo $sum\n}\n\ncandidate() {\n    solution \"$@\"\n}\n\nset\
    \ -e\nrun_test() {\n    [[ $(candidate \"5 8 7 1\") = \"12\" ]]\n    [[ $(candidate\
    \ \"3 3 3 3 3\") = \"9\" ]]\n    [[ $(candidate \"30 13 24 321\") = \"0\" ]]\n\
    \    [[ $(candidate \"5 9\") = \"5\" ]]\n    [[ $(candidate \"2 4 8\") = \"0\"\
    \ ]]\n    [[ $(candidate \"30 13 23 32\") = \"23\" ]]\n    [[ $(candidate \"3\
    \ 13 2 9\") = \"3\" ]]\n}\n\nrun_test"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659999723
- exit_code: 1
  program: "#!/bin/bash\n# Given a non-empty list of integers, return the sum of all\
    \ of the odd elements that are in even positions.\n# Examples\n#\n# $1 is a space-separated\
    \ list\nsolution() {\n  local -a arr=(\"$@\")\n  local sum=0\n  for ((i=0; i<${#arr[@]};\
    \ i++)); do\n    if ((i % 2 == 0 && arr[i] % 2 != 0)); then\n      ((sum += arr[i]))\n\
    \    fi\n  done\n  echo $sum\n}\n\ncandidate() {\n    solution \"$@\"\n}\n\nset\
    \ -e\nrun_test() {\n    [[ $(candidate \"5 8 7 1\") = \"12\" ]]\n    [[ $(candidate\
    \ \"3 3 3 3 3\") = \"9\" ]]\n    [[ $(candidate \"30 13 24 321\") = \"0\" ]]\n\
    \    [[ $(candidate \"5 9\") = \"5\" ]]\n    [[ $(candidate \"2 4 8\") = \"0\"\
    \ ]]\n    [[ $(candidate \"30 13 23 32\") = \"23\" ]]\n    [[ $(candidate \"3\
    \ 13 2 9\") = \"3\" ]]\n}\n\nrun_test"
  status: SyntaxError
  stderr: '/tmp/tmpqw34qf9r.sh: line 10: ((: 5 8 7 1: syntax error in expression (error
    token is "8 7 1")

    '
  stdout: ''
  timestamp: 1659999723
- exit_code: 1
  program: "#!/bin/bash\n# Given a non-empty list of integers, return the sum of all\
    \ of the odd elements that are in even positions.\n# Examples\n#\n# $1 is a space-separated\
    \ list\nsolution() {\n  local -a arr=(\"$@\")\n  local sum=0\n  for ((i=0; i<${#arr[@]};\
    \ i++)); do\n    if ((i % 2 == 0 && arr[i] % 2 != 0)); then\n      sum=$((sum\
    \ + arr[i]))\n    fi\n  done\n  echo $sum\n}\n\ncandidate() {\n    solution \"\
    $@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"5 8 7 1\") = \"12\" ]]\n\
    \    [[ $(candidate \"3 3 3 3 3\") = \"9\" ]]\n    [[ $(candidate \"30 13 24 321\"\
    ) = \"0\" ]]\n    [[ $(candidate \"5 9\") = \"5\" ]]\n    [[ $(candidate \"2 4\
    \ 8\") = \"0\" ]]\n    [[ $(candidate \"30 13 23 32\") = \"23\" ]]\n    [[ $(candidate\
    \ \"3 13 2 9\") = \"3\" ]]\n}\n\nrun_test"
  status: SyntaxError
  stderr: '/tmp/tmp7zrdxmpl.sh: line 10: ((: 5 8 7 1: syntax error in expression (error
    token is "8 7 1")

    '
  stdout: ''
  timestamp: 1659999723
- exit_code: 0
  program: "#!/bin/bash\n# Given a non-empty list of integers, return the sum of all\
    \ of the odd elements that are in even positions.\n# Examples\n#\n# $1 is a space-separated\
    \ list\nsolution() {\n  local -a a=($1)\n  local sum=0\n  for ((i=0; i<${#a[@]};\
    \ i++)); do\n    if ((i % 2 == 0 && a[i] % 2 == 1)); then\n      sum=$((sum +\
    \ a[i]))\n    fi\n  done\n  echo $sum\n}\n\ncandidate() {\n    solution \"$@\"\
    \n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"5 8 7 1\") = \"12\" ]]\n   \
    \ [[ $(candidate \"3 3 3 3 3\") = \"9\" ]]\n    [[ $(candidate \"30 13 24 321\"\
    ) = \"0\" ]]\n    [[ $(candidate \"5 9\") = \"5\" ]]\n    [[ $(candidate \"2 4\
    \ 8\") = \"0\" ]]\n    [[ $(candidate \"30 13 23 32\") = \"23\" ]]\n    [[ $(candidate\
    \ \"3 13 2 9\") = \"3\" ]]\n}\n\nrun_test"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659999723
- exit_code: 0
  program: "#!/bin/bash\n# Given a non-empty list of integers, return the sum of all\
    \ of the odd elements that are in even positions.\n# Examples\n#\n# $1 is a space-separated\
    \ list\nsolution() {\n  local -a arr=($1)\n  local sum=0\n  for ((i=0; i<${#arr[@]};\
    \ i++)); do\n    if ((i%2==0 && arr[i]%2==1)); then\n      sum=$((sum+arr[i]))\n\
    \    fi\n  done\n  echo $sum\n}\n\ncandidate() {\n    solution \"$@\"\n}\n\nset\
    \ -e\nrun_test() {\n    [[ $(candidate \"5 8 7 1\") = \"12\" ]]\n    [[ $(candidate\
    \ \"3 3 3 3 3\") = \"9\" ]]\n    [[ $(candidate \"30 13 24 321\") = \"0\" ]]\n\
    \    [[ $(candidate \"5 9\") = \"5\" ]]\n    [[ $(candidate \"2 4 8\") = \"0\"\
    \ ]]\n    [[ $(candidate \"30 13 23 32\") = \"23\" ]]\n    [[ $(candidate \"3\
    \ 13 2 9\") = \"3\" ]]\n}\n\nrun_test"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659999723
- exit_code: 0
  program: "#!/bin/bash\n# Given a non-empty list of integers, return the sum of all\
    \ of the odd elements that are in even positions.\n# Examples\n#\n# $1 is a space-separated\
    \ list\nsolution() {\n  local -a a=($1)\n  local sum=0\n  for ((i=0; i<${#a[@]};\
    \ i+=2)); do\n    if ((a[i] % 2)); then\n      ((sum+=a[i]))\n    fi\n  done\n\
    \  echo $sum\n}\n\ncandidate() {\n    solution \"$@\"\n}\n\nset -e\nrun_test()\
    \ {\n    [[ $(candidate \"5 8 7 1\") = \"12\" ]]\n    [[ $(candidate \"3 3 3 3\
    \ 3\") = \"9\" ]]\n    [[ $(candidate \"30 13 24 321\") = \"0\" ]]\n    [[ $(candidate\
    \ \"5 9\") = \"5\" ]]\n    [[ $(candidate \"2 4 8\") = \"0\" ]]\n    [[ $(candidate\
    \ \"30 13 23 32\") = \"23\" ]]\n    [[ $(candidate \"3 13 2 9\") = \"3\" ]]\n\
    }\n\nrun_test"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659999723
- exit_code: 0
  program: "#!/bin/bash\n# Given a non-empty list of integers, return the sum of all\
    \ of the odd elements that are in even positions.\n# Examples\n#\n# $1 is a space-separated\
    \ list\nsolution() {\n  local -a array=($1)\n  local sum=0\n  for ((i=0; i<${#array[@]};\
    \ i++)); do\n    if ((i % 2 == 0 && array[i] % 2 != 0)); then\n      sum=$((sum\
    \ + array[i]))\n    fi\n  done\n  echo $sum\n}\n\ncandidate() {\n    solution\
    \ \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"5 8 7 1\") = \"12\"\
    \ ]]\n    [[ $(candidate \"3 3 3 3 3\") = \"9\" ]]\n    [[ $(candidate \"30 13\
    \ 24 321\") = \"0\" ]]\n    [[ $(candidate \"5 9\") = \"5\" ]]\n    [[ $(candidate\
    \ \"2 4 8\") = \"0\" ]]\n    [[ $(candidate \"30 13 23 32\") = \"23\" ]]\n   \
    \ [[ $(candidate \"3 13 2 9\") = \"3\" ]]\n}\n\nrun_test"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659999723
- exit_code: 0
  program: "#!/bin/bash\n# Given a non-empty list of integers, return the sum of all\
    \ of the odd elements that are in even positions.\n# Examples\n#\n# $1 is a space-separated\
    \ list\nsolution() {\n  local input=$1\n  local sum=0\n  local index=0\n  for\
    \ i in $input; do\n    if [ $((index % 2)) -eq 0 ] && [ $((i % 2)) -ne 0 ]; then\n\
    \      sum=$((sum + i))\n    fi\n    index=$((index + 1))\n  done\n  echo $sum\n\
    }\n\ncandidate() {\n    solution \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate\
    \ \"5 8 7 1\") = \"12\" ]]\n    [[ $(candidate \"3 3 3 3 3\") = \"9\" ]]\n   \
    \ [[ $(candidate \"30 13 24 321\") = \"0\" ]]\n    [[ $(candidate \"5 9\") = \"\
    5\" ]]\n    [[ $(candidate \"2 4 8\") = \"0\" ]]\n    [[ $(candidate \"30 13 23\
    \ 32\") = \"23\" ]]\n    [[ $(candidate \"3 13 2 9\") = \"3\" ]]\n}\n\nrun_test"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659999723
- exit_code: 1
  program: "#!/bin/bash\n# Given a non-empty list of integers, return the sum of all\
    \ of the odd elements that are in even positions.\n# Examples\n#\n# $1 is a space-separated\
    \ list\nsolution() {\n  local -a a=($1)\n  local -i sum=0\n  for ((i=0; i<${#a[@]};\
    \ i+=2)); do\n    ((a[i] % 2 == 0)) && ((sum += a[i]))\n  done\n  echo $sum\n\
    }\n\ncandidate() {\n    solution \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate\
    \ \"5 8 7 1\") = \"12\" ]]\n    [[ $(candidate \"3 3 3 3 3\") = \"9\" ]]\n   \
    \ [[ $(candidate \"30 13 24 321\") = \"0\" ]]\n    [[ $(candidate \"5 9\") = \"\
    5\" ]]\n    [[ $(candidate \"2 4 8\") = \"0\" ]]\n    [[ $(candidate \"30 13 23\
    \ 32\") = \"23\" ]]\n    [[ $(candidate \"3 13 2 9\") = \"3\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1659999723
- exit_code: 1
  program: "#!/bin/bash\n# Given a non-empty list of integers, return the sum of all\
    \ of the odd elements that are in even positions.\n# Examples\n#\n# $1 is a space-separated\
    \ list\nsolution() {\n  local -a arr=(\"$@\")\n  local sum=0\n  for ((i=0; i<${#arr[@]};\
    \ i+=2)); do\n    if ((arr[i] % 2 != 0)); then\n      sum=$((sum + arr[i]))\n\
    \    fi\n  done\n  echo $sum\n}\n\ncandidate() {\n    solution \"$@\"\n}\n\nset\
    \ -e\nrun_test() {\n    [[ $(candidate \"5 8 7 1\") = \"12\" ]]\n    [[ $(candidate\
    \ \"3 3 3 3 3\") = \"9\" ]]\n    [[ $(candidate \"30 13 24 321\") = \"0\" ]]\n\
    \    [[ $(candidate \"5 9\") = \"5\" ]]\n    [[ $(candidate \"2 4 8\") = \"0\"\
    \ ]]\n    [[ $(candidate \"30 13 23 32\") = \"23\" ]]\n    [[ $(candidate \"3\
    \ 13 2 9\") = \"3\" ]]\n}\n\nrun_test"
  status: SyntaxError
  stderr: '/tmp/tmpydu01itf.sh: line 10: ((: 5 8 7 1: syntax error in expression (error
    token is "8 7 1")

    '
  stdout: ''
  timestamp: 1659999723
- exit_code: 1
  program: "#!/bin/bash\n# Given a non-empty list of integers, return the sum of all\
    \ of the odd elements that are in even positions.\n# Examples\n#\n# $1 is a space-separated\
    \ list\nsolution() {\n  local -a arr=(\"$@\")\n  local sum=0\n  for ((i=0; i<${#arr[@]};\
    \ i++)); do\n    if ((i%2==0 && arr[i]%2==1)); then\n      sum=$((sum+arr[i]))\n\
    \    fi\n  done\n  echo $sum\n}\n\ncandidate() {\n    solution \"$@\"\n}\n\nset\
    \ -e\nrun_test() {\n    [[ $(candidate \"5 8 7 1\") = \"12\" ]]\n    [[ $(candidate\
    \ \"3 3 3 3 3\") = \"9\" ]]\n    [[ $(candidate \"30 13 24 321\") = \"0\" ]]\n\
    \    [[ $(candidate \"5 9\") = \"5\" ]]\n    [[ $(candidate \"2 4 8\") = \"0\"\
    \ ]]\n    [[ $(candidate \"30 13 23 32\") = \"23\" ]]\n    [[ $(candidate \"3\
    \ 13 2 9\") = \"3\" ]]\n}\n\nrun_test"
  status: SyntaxError
  stderr: '/tmp/tmpl9a7yokf.sh: line 10: ((: 5 8 7 1: syntax error in expression (error
    token is "8 7 1")

    '
  stdout: ''
  timestamp: 1659999723
- exit_code: 0
  program: "#!/bin/bash\n# Given a non-empty list of integers, return the sum of all\
    \ of the odd elements that are in even positions.\n# Examples\n#\n# $1 is a space-separated\
    \ list\nsolution() {\n  local sum=0\n  local i=0\n  for n in $1; do\n    if [\
    \ $((i % 2)) -eq 0 ] && [ $((n % 2)) -ne 0 ]; then\n      sum=$((sum + n))\n \
    \   fi\n    i=$((i + 1))\n  done\n  echo $sum\n}\n\ncandidate() {\n    solution\
    \ \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"5 8 7 1\") = \"12\"\
    \ ]]\n    [[ $(candidate \"3 3 3 3 3\") = \"9\" ]]\n    [[ $(candidate \"30 13\
    \ 24 321\") = \"0\" ]]\n    [[ $(candidate \"5 9\") = \"5\" ]]\n    [[ $(candidate\
    \ \"2 4 8\") = \"0\" ]]\n    [[ $(candidate \"30 13 23 32\") = \"23\" ]]\n   \
    \ [[ $(candidate \"3 13 2 9\") = \"3\" ]]\n}\n\nrun_test"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659999723
- exit_code: 1
  program: "#!/bin/bash\n# Given a non-empty list of integers, return the sum of all\
    \ of the odd elements that are in even positions.\n# Examples\n#\n# $1 is a space-separated\
    \ list\nsolution() {\n  local -a arr=(\"$@\")\n  local sum=0\n  for ((i=0; i<${#arr[@]};\
    \ i+=2)); do\n    if ((arr[i] % 2 == 1)); then\n      ((sum += arr[i]))\n    fi\n\
    \  done\n  echo $sum\n}\n\ncandidate() {\n    solution \"$@\"\n}\n\nset -e\nrun_test()\
    \ {\n    [[ $(candidate \"5 8 7 1\") = \"12\" ]]\n    [[ $(candidate \"3 3 3 3\
    \ 3\") = \"9\" ]]\n    [[ $(candidate \"30 13 24 321\") = \"0\" ]]\n    [[ $(candidate\
    \ \"5 9\") = \"5\" ]]\n    [[ $(candidate \"2 4 8\") = \"0\" ]]\n    [[ $(candidate\
    \ \"30 13 23 32\") = \"23\" ]]\n    [[ $(candidate \"3 13 2 9\") = \"3\" ]]\n\
    }\n\nrun_test"
  status: SyntaxError
  stderr: '/tmp/tmppp_ih_td.sh: line 10: ((: 5 8 7 1: syntax error in expression (error
    token is "8 7 1")

    '
  stdout: ''
  timestamp: 1659999723
- exit_code: 1
  program: "#!/bin/bash\n# Given a non-empty list of integers, return the sum of all\
    \ of the odd elements that are in even positions.\n# Examples\n#\n# $1 is a space-separated\
    \ list\nsolution() {\n  local -a arr=(\"$@\")\n  local sum=0\n  for ((i=0; i<${#arr[@]};\
    \ i++)); do\n    if ((i % 2 == 0 && arr[i] % 2 != 0)); then\n      ((sum += arr[i]))\n\
    \    fi\n  done\n  echo $sum\n}\n\ncandidate() {\n    solution \"$@\"\n}\n\nset\
    \ -e\nrun_test() {\n    [[ $(candidate \"5 8 7 1\") = \"12\" ]]\n    [[ $(candidate\
    \ \"3 3 3 3 3\") = \"9\" ]]\n    [[ $(candidate \"30 13 24 321\") = \"0\" ]]\n\
    \    [[ $(candidate \"5 9\") = \"5\" ]]\n    [[ $(candidate \"2 4 8\") = \"0\"\
    \ ]]\n    [[ $(candidate \"30 13 23 32\") = \"23\" ]]\n    [[ $(candidate \"3\
    \ 13 2 9\") = \"3\" ]]\n}\n\nrun_test"
  status: SyntaxError
  stderr: '/tmp/tmpqw34qf9r.sh: line 10: ((: 5 8 7 1: syntax error in expression (error
    token is "8 7 1")

    '
  stdout: ''
  timestamp: 1659999723
- exit_code: 0
  program: "#!/bin/bash\n# Given a non-empty list of integers, return the sum of all\
    \ of the odd elements that are in even positions.\n# Examples\n#\n# $1 is a space-separated\
    \ list\nsolution() {\n  local -a arr=($1)\n  local sum=0\n  for ((i=0; i<${#arr[@]};\
    \ i++)); do\n    ((i%2==0)) && ((arr[i]%2==1)) && ((sum+=arr[i]))\n  done\n  echo\
    \ $sum\n}\n\ncandidate() {\n    solution \"$@\"\n}\n\nset -e\nrun_test() {\n \
    \   [[ $(candidate \"5 8 7 1\") = \"12\" ]]\n    [[ $(candidate \"3 3 3 3 3\"\
    ) = \"9\" ]]\n    [[ $(candidate \"30 13 24 321\") = \"0\" ]]\n    [[ $(candidate\
    \ \"5 9\") = \"5\" ]]\n    [[ $(candidate \"2 4 8\") = \"0\" ]]\n    [[ $(candidate\
    \ \"30 13 23 32\") = \"23\" ]]\n    [[ $(candidate \"3 13 2 9\") = \"3\" ]]\n\
    }\n\nrun_test"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659999723
- exit_code: 1
  program: "#!/bin/bash\n# Given a non-empty list of integers, return the sum of all\
    \ of the odd elements that are in even positions.\n# Examples\n#\n# $1 is a space-separated\
    \ list\nsolution() {\n  local -n arr=$1\n  local sum=0\n  for ((i=0; i<${#arr[@]};\
    \ i+=2)); do\n    if ((arr[i] % 2 != 0)); then\n      ((sum+=arr[i]))\n    fi\n\
    \  done\n  echo $sum\n}\n\ncandidate() {\n    solution \"$@\"\n}\n\nset -e\nrun_test()\
    \ {\n    [[ $(candidate \"5 8 7 1\") = \"12\" ]]\n    [[ $(candidate \"3 3 3 3\
    \ 3\") = \"9\" ]]\n    [[ $(candidate \"30 13 24 321\") = \"0\" ]]\n    [[ $(candidate\
    \ \"5 9\") = \"5\" ]]\n    [[ $(candidate \"2 4 8\") = \"0\" ]]\n    [[ $(candidate\
    \ \"30 13 23 32\") = \"23\" ]]\n    [[ $(candidate \"3 13 2 9\") = \"3\" ]]\n\
    }\n\nrun_test"
  status: Exception
  stderr: '/tmp/tmpgc6cehqa.sh: line 7: local: `5 8 7 1'': invalid variable name for
    name reference

    '
  stdout: ''
  timestamp: 1659999723
- exit_code: 1
  program: "#!/bin/bash\n# Given a non-empty list of integers, return the sum of all\
    \ of the odd elements that are in even positions.\n# Examples\n#\n# $1 is a space-separated\
    \ list\nsolution() {\n  local -n arr=$1\n  local sum=0\n  for ((i=0; i<${#arr[@]};\
    \ i+=2)); do\n    if [[ ${arr[i]}%2 -ne 0 ]]; then\n      ((sum+=arr[i]))\n  \
    \  fi\n  done\n  echo $sum\n}\n\ncandidate() {\n    solution \"$@\"\n}\n\nset\
    \ -e\nrun_test() {\n    [[ $(candidate \"5 8 7 1\") = \"12\" ]]\n    [[ $(candidate\
    \ \"3 3 3 3 3\") = \"9\" ]]\n    [[ $(candidate \"30 13 24 321\") = \"0\" ]]\n\
    \    [[ $(candidate \"5 9\") = \"5\" ]]\n    [[ $(candidate \"2 4 8\") = \"0\"\
    \ ]]\n    [[ $(candidate \"30 13 23 32\") = \"23\" ]]\n    [[ $(candidate \"3\
    \ 13 2 9\") = \"3\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: '/tmp/tmpm_ozg33a.sh: line 7: local: `5 8 7 1'': invalid variable name for
    name reference

    '
  stdout: ''
  timestamp: 1659999723
- exit_code: 0
  program: "#!/bin/bash\n# Given a non-empty list of integers, return the sum of all\
    \ of the odd elements that are in even positions.\n# Examples\n#\n# $1 is a space-separated\
    \ list\nsolution() {\n  local -a arr=($1)\n  local sum=0\n  for ((i=0; i<${#arr[@]};\
    \ i++)); do\n    if ((i % 2 == 0 && arr[i] % 2 != 0)); then\n      sum=$((sum\
    \ + arr[i]))\n    fi\n  done\n  echo $sum\n}\n\ncandidate() {\n    solution \"\
    $@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"5 8 7 1\") = \"12\" ]]\n\
    \    [[ $(candidate \"3 3 3 3 3\") = \"9\" ]]\n    [[ $(candidate \"30 13 24 321\"\
    ) = \"0\" ]]\n    [[ $(candidate \"5 9\") = \"5\" ]]\n    [[ $(candidate \"2 4\
    \ 8\") = \"0\" ]]\n    [[ $(candidate \"30 13 23 32\") = \"23\" ]]\n    [[ $(candidate\
    \ \"3 13 2 9\") = \"3\" ]]\n}\n\nrun_test"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659999723
- exit_code: 0
  program: "#!/bin/bash\n# Given a non-empty list of integers, return the sum of all\
    \ of the odd elements that are in even positions.\n# Examples\n#\n# $1 is a space-separated\
    \ list\nsolution() {\n  local -a arr\n  local -i sum=0\n  IFS=' ' read -r -a arr\
    \ <<< \"$1\"\n  for ((i=0; i<${#arr[@]}; i+=2)); do\n    [[ ${arr[i]}%2 -eq 1\
    \ ]] && ((sum+=arr[i]))\n  done\n  echo $sum\n}\n\ncandidate() {\n    solution\
    \ \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"5 8 7 1\") = \"12\"\
    \ ]]\n    [[ $(candidate \"3 3 3 3 3\") = \"9\" ]]\n    [[ $(candidate \"30 13\
    \ 24 321\") = \"0\" ]]\n    [[ $(candidate \"5 9\") = \"5\" ]]\n    [[ $(candidate\
    \ \"2 4 8\") = \"0\" ]]\n    [[ $(candidate \"30 13 23 32\") = \"23\" ]]\n   \
    \ [[ $(candidate \"3 13 2 9\") = \"3\" ]]\n}\n\nrun_test"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659999723
- exit_code: 1
  program: "#!/bin/bash\n# Given a non-empty list of integers, return the sum of all\
    \ of the odd elements that are in even positions.\n# Examples\n#\n# $1 is a space-separated\
    \ list\nsolution() {\n  local -a arr=(\"$@\")\n  local sum=0\n  for ((i=0; i<${#arr[@]};\
    \ i+=2)); do\n    if ((arr[i] % 2 == 1)); then\n      ((sum += arr[i]))\n    fi\n\
    \  done\n  echo $sum\n}\n\ncandidate() {\n    solution \"$@\"\n}\n\nset -e\nrun_test()\
    \ {\n    [[ $(candidate \"5 8 7 1\") = \"12\" ]]\n    [[ $(candidate \"3 3 3 3\
    \ 3\") = \"9\" ]]\n    [[ $(candidate \"30 13 24 321\") = \"0\" ]]\n    [[ $(candidate\
    \ \"5 9\") = \"5\" ]]\n    [[ $(candidate \"2 4 8\") = \"0\" ]]\n    [[ $(candidate\
    \ \"30 13 23 32\") = \"23\" ]]\n    [[ $(candidate \"3 13 2 9\") = \"3\" ]]\n\
    }\n\nrun_test"
  status: SyntaxError
  stderr: '/tmp/tmppp_ih_td.sh: line 10: ((: 5 8 7 1: syntax error in expression (error
    token is "8 7 1")

    '
  stdout: ''
  timestamp: 1659999723
- exit_code: 0
  program: "#!/bin/bash\n# Given a non-empty list of integers, return the sum of all\
    \ of the odd elements that are in even positions.\n# Examples\n#\n# $1 is a space-separated\
    \ list\nsolution() {\n  local -a arr=($1)\n  local sum=0\n  for ((i=0; i<${#arr[@]};\
    \ i++)); do\n    if ((i % 2 == 0 && arr[i] % 2 != 0)); then\n      sum=$((sum\
    \ + arr[i]))\n    fi\n  done\n  echo $sum\n}\n\ncandidate() {\n    solution \"\
    $@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"5 8 7 1\") = \"12\" ]]\n\
    \    [[ $(candidate \"3 3 3 3 3\") = \"9\" ]]\n    [[ $(candidate \"30 13 24 321\"\
    ) = \"0\" ]]\n    [[ $(candidate \"5 9\") = \"5\" ]]\n    [[ $(candidate \"2 4\
    \ 8\") = \"0\" ]]\n    [[ $(candidate \"30 13 23 32\") = \"23\" ]]\n    [[ $(candidate\
    \ \"3 13 2 9\") = \"3\" ]]\n}\n\nrun_test"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659999723
- exit_code: 0
  program: "#!/bin/bash\n# Given a non-empty list of integers, return the sum of all\
    \ of the odd elements that are in even positions.\n# Examples\n#\n# $1 is a space-separated\
    \ list\nsolution() {\n  local -a arr=($1)\n  local sum=0\n  for ((i=0; i<${#arr[@]};\
    \ i++)); do\n    if ((i % 2 == 0 && arr[i] % 2 != 0)); then\n      sum=$((sum\
    \ + arr[i]))\n    fi\n  done\n  echo $sum\n}\n\ncandidate() {\n    solution \"\
    $@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"5 8 7 1\") = \"12\" ]]\n\
    \    [[ $(candidate \"3 3 3 3 3\") = \"9\" ]]\n    [[ $(candidate \"30 13 24 321\"\
    ) = \"0\" ]]\n    [[ $(candidate \"5 9\") = \"5\" ]]\n    [[ $(candidate \"2 4\
    \ 8\") = \"0\" ]]\n    [[ $(candidate \"30 13 23 32\") = \"23\" ]]\n    [[ $(candidate\
    \ \"3 13 2 9\") = \"3\" ]]\n}\n\nrun_test"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659999723
- exit_code: 1
  program: "#!/bin/bash\n# Given a non-empty list of integers, return the sum of all\
    \ of the odd elements that are in even positions.\n# Examples\n#\n# $1 is a space-separated\
    \ list\nsolution() {\n  local -n arr=$1\n  local sum=0\n  for ((i=0; i<${#arr[@]};\
    \ i+=2)); do\n    if ((arr[i] % 2 == 1)); then\n      ((sum+=arr[i]))\n    fi\n\
    \  done\n  echo $sum\n}\n\ncandidate() {\n    solution \"$@\"\n}\n\nset -e\nrun_test()\
    \ {\n    [[ $(candidate \"5 8 7 1\") = \"12\" ]]\n    [[ $(candidate \"3 3 3 3\
    \ 3\") = \"9\" ]]\n    [[ $(candidate \"30 13 24 321\") = \"0\" ]]\n    [[ $(candidate\
    \ \"5 9\") = \"5\" ]]\n    [[ $(candidate \"2 4 8\") = \"0\" ]]\n    [[ $(candidate\
    \ \"30 13 23 32\") = \"23\" ]]\n    [[ $(candidate \"3 13 2 9\") = \"3\" ]]\n\
    }\n\nrun_test"
  status: Exception
  stderr: '/tmp/tmpvgv1ko4t.sh: line 7: local: `5 8 7 1'': invalid variable name for
    name reference

    '
  stdout: ''
  timestamp: 1659999723
- exit_code: 1
  program: "#!/bin/bash\n# Given a non-empty list of integers, return the sum of all\
    \ of the odd elements that are in even positions.\n# Examples\n#\n# $1 is a space-separated\
    \ list\nsolution() {\n  local -n arr=$1\n  local sum=0\n  for ((i=0; i<${#arr[@]};\
    \ i+=2)); do\n    if ((arr[i] % 2 == 1)); then\n      ((sum+=arr[i]))\n    fi\n\
    \  done\n  echo $sum\n}\n\ncandidate() {\n    solution \"$@\"\n}\n\nset -e\nrun_test()\
    \ {\n    [[ $(candidate \"5 8 7 1\") = \"12\" ]]\n    [[ $(candidate \"3 3 3 3\
    \ 3\") = \"9\" ]]\n    [[ $(candidate \"30 13 24 321\") = \"0\" ]]\n    [[ $(candidate\
    \ \"5 9\") = \"5\" ]]\n    [[ $(candidate \"2 4 8\") = \"0\" ]]\n    [[ $(candidate\
    \ \"30 13 23 32\") = \"23\" ]]\n    [[ $(candidate \"3 13 2 9\") = \"3\" ]]\n\
    }\n\nrun_test"
  status: Exception
  stderr: '/tmp/tmpvgv1ko4t.sh: line 7: local: `5 8 7 1'': invalid variable name for
    name reference

    '
  stdout: ''
  timestamp: 1659999723
- exit_code: 1
  program: "#!/bin/bash\n# Given a non-empty list of integers, return the sum of all\
    \ of the odd elements that are in even positions.\n# Examples\n#\n# $1 is a space-separated\
    \ list\nsolution() {\n  local -a arr=(\"$@\")\n  local sum=0\n  for ((i=0; i<${#arr[@]};\
    \ i++)); do\n    if ((i % 2 == 0 && arr[i] % 2 != 0)); then\n      sum=$((sum\
    \ + arr[i]))\n    fi\n  done\n  echo $sum\n}\n\ncandidate() {\n    solution \"\
    $@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"5 8 7 1\") = \"12\" ]]\n\
    \    [[ $(candidate \"3 3 3 3 3\") = \"9\" ]]\n    [[ $(candidate \"30 13 24 321\"\
    ) = \"0\" ]]\n    [[ $(candidate \"5 9\") = \"5\" ]]\n    [[ $(candidate \"2 4\
    \ 8\") = \"0\" ]]\n    [[ $(candidate \"30 13 23 32\") = \"23\" ]]\n    [[ $(candidate\
    \ \"3 13 2 9\") = \"3\" ]]\n}\n\nrun_test"
  status: SyntaxError
  stderr: '/tmp/tmp7zrdxmpl.sh: line 10: ((: 5 8 7 1: syntax error in expression (error
    token is "8 7 1")

    '
  stdout: ''
  timestamp: 1659999723
- exit_code: 1
  program: "#!/bin/bash\n# Given a non-empty list of integers, return the sum of all\
    \ of the odd elements that are in even positions.\n# Examples\n#\n# $1 is a space-separated\
    \ list\nsolution() {\n  local -a arr=(\"$@\")\n  local sum=0\n  for ((i=0; i<${#arr[@]};\
    \ i++)); do\n    if ((i % 2 == 0 && arr[i] % 2 != 0)); then\n      sum=$((sum\
    \ + arr[i]))\n    fi\n  done\n  echo $sum\n}\n\ncandidate() {\n    solution \"\
    $@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"5 8 7 1\") = \"12\" ]]\n\
    \    [[ $(candidate \"3 3 3 3 3\") = \"9\" ]]\n    [[ $(candidate \"30 13 24 321\"\
    ) = \"0\" ]]\n    [[ $(candidate \"5 9\") = \"5\" ]]\n    [[ $(candidate \"2 4\
    \ 8\") = \"0\" ]]\n    [[ $(candidate \"30 13 23 32\") = \"23\" ]]\n    [[ $(candidate\
    \ \"3 13 2 9\") = \"3\" ]]\n}\n\nrun_test"
  status: SyntaxError
  stderr: '/tmp/tmp7zrdxmpl.sh: line 10: ((: 5 8 7 1: syntax error in expression (error
    token is "8 7 1")

    '
  stdout: ''
  timestamp: 1659999723
- exit_code: 1
  program: "#!/bin/bash\n# Given a non-empty list of integers, return the sum of all\
    \ of the odd elements that are in even positions.\n# Examples\n#\n# $1 is a space-separated\
    \ list\nsolution() {\n  local -a arr=(\"$@\")\n  local sum=0\n  for ((i=0; i<${#arr[@]};\
    \ i+=2)); do\n    if [[ ${arr[i]}%2 -ne 0 ]]; then\n      sum=$((sum+arr[i]))\n\
    \    fi\n  done\n  echo $sum\n}\n\ncandidate() {\n    solution \"$@\"\n}\n\nset\
    \ -e\nrun_test() {\n    [[ $(candidate \"5 8 7 1\") = \"12\" ]]\n    [[ $(candidate\
    \ \"3 3 3 3 3\") = \"9\" ]]\n    [[ $(candidate \"30 13 24 321\") = \"0\" ]]\n\
    \    [[ $(candidate \"5 9\") = \"5\" ]]\n    [[ $(candidate \"2 4 8\") = \"0\"\
    \ ]]\n    [[ $(candidate \"30 13 23 32\") = \"23\" ]]\n    [[ $(candidate \"3\
    \ 13 2 9\") = \"3\" ]]\n}\n\nrun_test"
  status: SyntaxError
  stderr: '/tmp/tmppr04s0x_.sh: line 10: [[: 5 8 7 1%2: syntax error in expression
    (error token is "8 7 1%2")

    '
  stdout: ''
  timestamp: 1659999723
- exit_code: 1
  program: "#!/bin/bash\n# Given a non-empty list of integers, return the sum of all\
    \ of the odd elements that are in even positions.\n# Examples\n#\n# $1 is a space-separated\
    \ list\nsolution() {\n  local -a arr=(\"$@\")\n  local sum=0\n  for ((i=0; i<${#arr[@]};\
    \ i++)); do\n    if ((i % 2 == 0)) && ((arr[i] % 2 == 1)); then\n      ((sum +=\
    \ arr[i]))\n    fi\n  done\n  echo $sum\n}\n\ncandidate() {\n    solution \"$@\"\
    \n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"5 8 7 1\") = \"12\" ]]\n   \
    \ [[ $(candidate \"3 3 3 3 3\") = \"9\" ]]\n    [[ $(candidate \"30 13 24 321\"\
    ) = \"0\" ]]\n    [[ $(candidate \"5 9\") = \"5\" ]]\n    [[ $(candidate \"2 4\
    \ 8\") = \"0\" ]]\n    [[ $(candidate \"30 13 23 32\") = \"23\" ]]\n    [[ $(candidate\
    \ \"3 13 2 9\") = \"3\" ]]\n}\n\nrun_test"
  status: SyntaxError
  stderr: '/tmp/tmph3ubli3r.sh: line 10: ((: 5 8 7 1: syntax error in expression (error
    token is "8 7 1")

    '
  stdout: ''
  timestamp: 1659999723
- exit_code: 0
  program: "#!/bin/bash\n# Given a non-empty list of integers, return the sum of all\
    \ of the odd elements that are in even positions.\n# Examples\n#\n# $1 is a space-separated\
    \ list\nsolution() {\n  local -a arr=($1)\n  local sum=0\n  for ((i=0; i<${#arr[@]};\
    \ i++)); do\n    if ((i % 2 == 0 && arr[i] % 2 != 0)); then\n      sum=$((sum\
    \ + arr[i]))\n    fi\n  done\n  echo $sum\n}\n\ncandidate() {\n    solution \"\
    $@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"5 8 7 1\") = \"12\" ]]\n\
    \    [[ $(candidate \"3 3 3 3 3\") = \"9\" ]]\n    [[ $(candidate \"30 13 24 321\"\
    ) = \"0\" ]]\n    [[ $(candidate \"5 9\") = \"5\" ]]\n    [[ $(candidate \"2 4\
    \ 8\") = \"0\" ]]\n    [[ $(candidate \"30 13 23 32\") = \"23\" ]]\n    [[ $(candidate\
    \ \"3 13 2 9\") = \"3\" ]]\n}\n\nrun_test"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659999723
- exit_code: 1
  program: "#!/bin/bash\n# Given a non-empty list of integers, return the sum of all\
    \ of the odd elements that are in even positions.\n# Examples\n#\n# $1 is a space-separated\
    \ list\nsolution() {\n  local -a array=(\"$@\")\n  local sum=0\n  for (( i=0;\
    \ i<${#array[@]}; i+=2 )); do\n    if [[ $(( array[i] % 2 )) -eq 1 ]]; then\n\
    \      sum=$(( sum + array[i] ))\n    fi\n  done\n  echo $sum\n}\n\ncandidate()\
    \ {\n    solution \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"5 8\
    \ 7 1\") = \"12\" ]]\n    [[ $(candidate \"3 3 3 3 3\") = \"9\" ]]\n    [[ $(candidate\
    \ \"30 13 24 321\") = \"0\" ]]\n    [[ $(candidate \"5 9\") = \"5\" ]]\n    [[\
    \ $(candidate \"2 4 8\") = \"0\" ]]\n    [[ $(candidate \"30 13 23 32\") = \"\
    23\" ]]\n    [[ $(candidate \"3 13 2 9\") = \"3\" ]]\n}\n\nrun_test"
  status: SyntaxError
  stderr: '/tmp/tmpc1d0a3o2.sh: line 10: 5 8 7 1: syntax error in expression (error
    token is "8 7 1")

    '
  stdout: ''
  timestamp: 1659999723
- exit_code: 1
  program: "#!/bin/bash\n# Given a non-empty list of integers, return the sum of all\
    \ of the odd elements that are in even positions.\n# Examples\n#\n# $1 is a space-separated\
    \ list\nsolution() {\n  local -a arr=(\"$@\")\n  local sum=0\n  for ((i=0; i<${#arr[@]};\
    \ i++)); do\n    if ((i % 2 == 0 && arr[i] % 2 != 0)); then\n      sum=$((sum\
    \ + arr[i]))\n    fi\n  done\n  echo $sum\n}\n\ncandidate() {\n    solution \"\
    $@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"5 8 7 1\") = \"12\" ]]\n\
    \    [[ $(candidate \"3 3 3 3 3\") = \"9\" ]]\n    [[ $(candidate \"30 13 24 321\"\
    ) = \"0\" ]]\n    [[ $(candidate \"5 9\") = \"5\" ]]\n    [[ $(candidate \"2 4\
    \ 8\") = \"0\" ]]\n    [[ $(candidate \"30 13 23 32\") = \"23\" ]]\n    [[ $(candidate\
    \ \"3 13 2 9\") = \"3\" ]]\n}\n\nrun_test"
  status: SyntaxError
  stderr: '/tmp/tmp7zrdxmpl.sh: line 10: ((: 5 8 7 1: syntax error in expression (error
    token is "8 7 1")

    '
  stdout: ''
  timestamp: 1659999723
- exit_code: 0
  program: "#!/bin/bash\n# Given a non-empty list of integers, return the sum of all\
    \ of the odd elements that are in even positions.\n# Examples\n#\n# $1 is a space-separated\
    \ list\nsolution() {\n  local -a array=($1)\n  local sum=0\n  for ((i=0; i<${#array[@]};\
    \ i++)); do\n    if ((i % 2 == 0)); then\n      if ((array[i] % 2 != 0)); then\n\
    \        sum=$((sum + array[i]))\n      fi\n    fi\n  done\n  echo $sum\n}\n\n\
    candidate() {\n    solution \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate\
    \ \"5 8 7 1\") = \"12\" ]]\n    [[ $(candidate \"3 3 3 3 3\") = \"9\" ]]\n   \
    \ [[ $(candidate \"30 13 24 321\") = \"0\" ]]\n    [[ $(candidate \"5 9\") = \"\
    5\" ]]\n    [[ $(candidate \"2 4 8\") = \"0\" ]]\n    [[ $(candidate \"30 13 23\
    \ 32\") = \"23\" ]]\n    [[ $(candidate \"3 13 2 9\") = \"3\" ]]\n}\n\nrun_test"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659999723
- exit_code: 0
  program: "#!/bin/bash\n# Given a non-empty list of integers, return the sum of all\
    \ of the odd elements that are in even positions.\n# Examples\n#\n# $1 is a space-separated\
    \ list\nsolution() {\n  local -a arr=($1)\n  local sum=0\n  for ((i=0; i<${#arr[@]};\
    \ i++)); do\n    if ((i % 2 == 0 && arr[i] % 2 != 0)); then\n      sum=$((sum\
    \ + arr[i]))\n    fi\n  done\n  echo $sum\n}\n\ncandidate() {\n    solution \"\
    $@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"5 8 7 1\") = \"12\" ]]\n\
    \    [[ $(candidate \"3 3 3 3 3\") = \"9\" ]]\n    [[ $(candidate \"30 13 24 321\"\
    ) = \"0\" ]]\n    [[ $(candidate \"5 9\") = \"5\" ]]\n    [[ $(candidate \"2 4\
    \ 8\") = \"0\" ]]\n    [[ $(candidate \"30 13 23 32\") = \"23\" ]]\n    [[ $(candidate\
    \ \"3 13 2 9\") = \"3\" ]]\n}\n\nrun_test"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659999723
- exit_code: 0
  program: "#!/bin/bash\n# Given a non-empty list of integers, return the sum of all\
    \ of the odd elements that are in even positions.\n# Examples\n#\n# $1 is a space-separated\
    \ list\nsolution() {\n  local -a array=($1)\n  local sum=0\n  for ((i=0; i<${#array[@]};\
    \ i++)); do\n    if ((i % 2 == 0 && array[i] % 2 != 0)); then\n      sum=$((sum\
    \ + array[i]))\n    fi\n  done\n  echo $sum\n}\n\ncandidate() {\n    solution\
    \ \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"5 8 7 1\") = \"12\"\
    \ ]]\n    [[ $(candidate \"3 3 3 3 3\") = \"9\" ]]\n    [[ $(candidate \"30 13\
    \ 24 321\") = \"0\" ]]\n    [[ $(candidate \"5 9\") = \"5\" ]]\n    [[ $(candidate\
    \ \"2 4 8\") = \"0\" ]]\n    [[ $(candidate \"30 13 23 32\") = \"23\" ]]\n   \
    \ [[ $(candidate \"3 13 2 9\") = \"3\" ]]\n}\n\nrun_test"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659999723
- exit_code: 0
  program: "#!/bin/bash\n# Given a non-empty list of integers, return the sum of all\
    \ of the odd elements that are in even positions.\n# Examples\n#\n# $1 is a space-separated\
    \ list\nsolution() {\n  local -a list=($1)\n  local sum=0\n  for ((i=0; i<${#list[@]};\
    \ i++)); do\n    if ((i % 2 == 0 && list[i] % 2 != 0)); then\n      sum=$((sum\
    \ + list[i]))\n    fi\n  done\n  echo $sum\n}\n\ncandidate() {\n    solution \"\
    $@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"5 8 7 1\") = \"12\" ]]\n\
    \    [[ $(candidate \"3 3 3 3 3\") = \"9\" ]]\n    [[ $(candidate \"30 13 24 321\"\
    ) = \"0\" ]]\n    [[ $(candidate \"5 9\") = \"5\" ]]\n    [[ $(candidate \"2 4\
    \ 8\") = \"0\" ]]\n    [[ $(candidate \"30 13 23 32\") = \"23\" ]]\n    [[ $(candidate\
    \ \"3 13 2 9\") = \"3\" ]]\n}\n\nrun_test"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659999723
- exit_code: 0
  program: "#!/bin/bash\n# Given a non-empty list of integers, return the sum of all\
    \ of the odd elements that are in even positions.\n# Examples\n#\n# $1 is a space-separated\
    \ list\nsolution() {\n  local -a arr=($1)\n  local sum=0\n  for ((i=0; i<${#arr[@]};\
    \ i++)); do\n    if ((i % 2 == 0 && arr[i] % 2 != 0)); then\n      ((sum += arr[i]))\n\
    \    fi\n  done\n  echo $sum\n}\n\ncandidate() {\n    solution \"$@\"\n}\n\nset\
    \ -e\nrun_test() {\n    [[ $(candidate \"5 8 7 1\") = \"12\" ]]\n    [[ $(candidate\
    \ \"3 3 3 3 3\") = \"9\" ]]\n    [[ $(candidate \"30 13 24 321\") = \"0\" ]]\n\
    \    [[ $(candidate \"5 9\") = \"5\" ]]\n    [[ $(candidate \"2 4 8\") = \"0\"\
    \ ]]\n    [[ $(candidate \"30 13 23 32\") = \"23\" ]]\n    [[ $(candidate \"3\
    \ 13 2 9\") = \"3\" ]]\n}\n\nrun_test"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659999723
- exit_code: 1
  program: "#!/bin/bash\n# Given a non-empty list of integers, return the sum of all\
    \ of the odd elements that are in even positions.\n# Examples\n#\n# $1 is a space-separated\
    \ list\nsolution() {\n  local -a arr=(\"$@\")\n  local sum=0\n  for ((i=0; i<${#arr[@]};\
    \ i++)); do\n    if ((i % 2 == 0 && arr[i] % 2 != 0)); then\n      ((sum += arr[i]))\n\
    \    fi\n  done\n  echo $sum\n}\n\ncandidate() {\n    solution \"$@\"\n}\n\nset\
    \ -e\nrun_test() {\n    [[ $(candidate \"5 8 7 1\") = \"12\" ]]\n    [[ $(candidate\
    \ \"3 3 3 3 3\") = \"9\" ]]\n    [[ $(candidate \"30 13 24 321\") = \"0\" ]]\n\
    \    [[ $(candidate \"5 9\") = \"5\" ]]\n    [[ $(candidate \"2 4 8\") = \"0\"\
    \ ]]\n    [[ $(candidate \"30 13 23 32\") = \"23\" ]]\n    [[ $(candidate \"3\
    \ 13 2 9\") = \"3\" ]]\n}\n\nrun_test"
  status: SyntaxError
  stderr: '/tmp/tmpqw34qf9r.sh: line 10: ((: 5 8 7 1: syntax error in expression (error
    token is "8 7 1")

    '
  stdout: ''
  timestamp: 1659999723
- exit_code: 1
  program: "#!/bin/bash\n# Given a non-empty list of integers, return the sum of all\
    \ of the odd elements that are in even positions.\n# Examples\n#\n# $1 is a space-separated\
    \ list\nsolution() {\n  local -a arr=(\"$@\")\n  local sum=0\n  for ((i=0; i<${#arr[@]};\
    \ i++)); do\n    if [[ $((i%2)) -eq 0 && $((arr[i]%2)) -eq 1 ]]; then\n      sum=$((sum+arr[i]))\n\
    \    fi\n  done\n  echo $sum\n}\n\ncandidate() {\n    solution \"$@\"\n}\n\nset\
    \ -e\nrun_test() {\n    [[ $(candidate \"5 8 7 1\") = \"12\" ]]\n    [[ $(candidate\
    \ \"3 3 3 3 3\") = \"9\" ]]\n    [[ $(candidate \"30 13 24 321\") = \"0\" ]]\n\
    \    [[ $(candidate \"5 9\") = \"5\" ]]\n    [[ $(candidate \"2 4 8\") = \"0\"\
    \ ]]\n    [[ $(candidate \"30 13 23 32\") = \"23\" ]]\n    [[ $(candidate \"3\
    \ 13 2 9\") = \"3\" ]]\n}\n\nrun_test"
  status: SyntaxError
  stderr: '/tmp/tmpwy2fdzag.sh: line 10: 5 8 7 1: syntax error in expression (error
    token is "8 7 1")

    '
  stdout: ''
  timestamp: 1659999723
- exit_code: 0
  program: "#!/bin/bash\n# Given a non-empty list of integers, return the sum of all\
    \ of the odd elements that are in even positions.\n# Examples\n#\n# $1 is a space-separated\
    \ list\nsolution() {\n  local -a arr=($1)\n  local sum=0\n  for ((i=0; i<${#arr[@]};\
    \ i++)); do\n    if ((i % 2 == 0 && arr[i] % 2 != 0)); then\n      sum=$((sum\
    \ + arr[i]))\n    fi\n  done\n  echo $sum\n}\n\ncandidate() {\n    solution \"\
    $@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"5 8 7 1\") = \"12\" ]]\n\
    \    [[ $(candidate \"3 3 3 3 3\") = \"9\" ]]\n    [[ $(candidate \"30 13 24 321\"\
    ) = \"0\" ]]\n    [[ $(candidate \"5 9\") = \"5\" ]]\n    [[ $(candidate \"2 4\
    \ 8\") = \"0\" ]]\n    [[ $(candidate \"30 13 23 32\") = \"23\" ]]\n    [[ $(candidate\
    \ \"3 13 2 9\") = \"3\" ]]\n}\n\nrun_test"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659999723
- exit_code: 1
  program: "#!/bin/bash\n# Given a non-empty list of integers, return the sum of all\
    \ of the odd elements that are in even positions.\n# Examples\n#\n# $1 is a space-separated\
    \ list\nsolution() {\n  local -a arr=(\"$@\")\n  local sum=0\n  for ((i=0; i<${#arr[@]};\
    \ i++)); do\n    if ((i % 2 == 0 && arr[i] % 2 != 0)); then\n      sum=$((sum\
    \ + arr[i]))\n    fi\n  done\n  echo $sum\n}\n\ncandidate() {\n    solution \"\
    $@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"5 8 7 1\") = \"12\" ]]\n\
    \    [[ $(candidate \"3 3 3 3 3\") = \"9\" ]]\n    [[ $(candidate \"30 13 24 321\"\
    ) = \"0\" ]]\n    [[ $(candidate \"5 9\") = \"5\" ]]\n    [[ $(candidate \"2 4\
    \ 8\") = \"0\" ]]\n    [[ $(candidate \"30 13 23 32\") = \"23\" ]]\n    [[ $(candidate\
    \ \"3 13 2 9\") = \"3\" ]]\n}\n\nrun_test"
  status: SyntaxError
  stderr: '/tmp/tmp7zrdxmpl.sh: line 10: ((: 5 8 7 1: syntax error in expression (error
    token is "8 7 1")

    '
  stdout: ''
  timestamp: 1659999723
- exit_code: 0
  program: "#!/bin/bash\n# Given a non-empty list of integers, return the sum of all\
    \ of the odd elements that are in even positions.\n# Examples\n#\n# $1 is a space-separated\
    \ list\nsolution() {\n  local -a nums=($1)\n  local sum=0\n  for ((i=0; i<${#nums[@]};\
    \ i++)); do\n    if ((i % 2 == 0 && nums[i] % 2 == 1)); then\n      ((sum += nums[i]))\n\
    \    fi\n  done\n  echo $sum\n}\n\ncandidate() {\n    solution \"$@\"\n}\n\nset\
    \ -e\nrun_test() {\n    [[ $(candidate \"5 8 7 1\") = \"12\" ]]\n    [[ $(candidate\
    \ \"3 3 3 3 3\") = \"9\" ]]\n    [[ $(candidate \"30 13 24 321\") = \"0\" ]]\n\
    \    [[ $(candidate \"5 9\") = \"5\" ]]\n    [[ $(candidate \"2 4 8\") = \"0\"\
    \ ]]\n    [[ $(candidate \"30 13 23 32\") = \"23\" ]]\n    [[ $(candidate \"3\
    \ 13 2 9\") = \"3\" ]]\n}\n\nrun_test"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659999723
- exit_code: 1
  program: "#!/bin/bash\n# Given a non-empty list of integers, return the sum of all\
    \ of the odd elements that are in even positions.\n# Examples\n#\n# $1 is a space-separated\
    \ list\nsolution() {\n  local -n arr=$1\n  local sum=0\n  for ((i=0; i<${#arr[@]};\
    \ i++)); do\n    if ((i%2==0 && arr[i]%2==1)); then\n      sum=$((sum+arr[i]))\n\
    \    fi\n  done\n  echo $sum\n}\n\ncandidate() {\n    solution \"$@\"\n}\n\nset\
    \ -e\nrun_test() {\n    [[ $(candidate \"5 8 7 1\") = \"12\" ]]\n    [[ $(candidate\
    \ \"3 3 3 3 3\") = \"9\" ]]\n    [[ $(candidate \"30 13 24 321\") = \"0\" ]]\n\
    \    [[ $(candidate \"5 9\") = \"5\" ]]\n    [[ $(candidate \"2 4 8\") = \"0\"\
    \ ]]\n    [[ $(candidate \"30 13 23 32\") = \"23\" ]]\n    [[ $(candidate \"3\
    \ 13 2 9\") = \"3\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: '/tmp/tmpwr9w55q1.sh: line 7: local: `5 8 7 1'': invalid variable name for
    name reference

    '
  stdout: ''
  timestamp: 1659999723
- exit_code: 1
  program: "#!/bin/bash\n# Given a non-empty list of integers, return the sum of all\
    \ of the odd elements that are in even positions.\n# Examples\n#\n# $1 is a space-separated\
    \ list\nsolution() {\n  local -a arr=(\"$@\")\n  local sum=0\n  for ((i=0; i<${#arr[@]};\
    \ i++)); do\n    if ((i % 2 == 0 && arr[i] % 2 != 0)); then\n      sum=$((sum\
    \ + arr[i]))\n    fi\n  done\n  echo $sum\n}\n\ncandidate() {\n    solution \"\
    $@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"5 8 7 1\") = \"12\" ]]\n\
    \    [[ $(candidate \"3 3 3 3 3\") = \"9\" ]]\n    [[ $(candidate \"30 13 24 321\"\
    ) = \"0\" ]]\n    [[ $(candidate \"5 9\") = \"5\" ]]\n    [[ $(candidate \"2 4\
    \ 8\") = \"0\" ]]\n    [[ $(candidate \"30 13 23 32\") = \"23\" ]]\n    [[ $(candidate\
    \ \"3 13 2 9\") = \"3\" ]]\n}\n\nrun_test"
  status: SyntaxError
  stderr: '/tmp/tmp7zrdxmpl.sh: line 10: ((: 5 8 7 1: syntax error in expression (error
    token is "8 7 1")

    '
  stdout: ''
  timestamp: 1659999723
- exit_code: 1
  program: "#!/bin/bash\n# Given a non-empty list of integers, return the sum of all\
    \ of the odd elements that are in even positions.\n# Examples\n#\n# $1 is a space-separated\
    \ list\nsolution() {\n  local -n arr=$1\n  local sum=0\n  for ((i=0; i<${#arr[@]};\
    \ i++)); do\n    if ((i % 2 == 0 && arr[i] % 2 != 0)); then\n      sum=$((sum\
    \ + arr[i]))\n    fi\n  done\n  echo $sum\n}\n\ncandidate() {\n    solution \"\
    $@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"5 8 7 1\") = \"12\" ]]\n\
    \    [[ $(candidate \"3 3 3 3 3\") = \"9\" ]]\n    [[ $(candidate \"30 13 24 321\"\
    ) = \"0\" ]]\n    [[ $(candidate \"5 9\") = \"5\" ]]\n    [[ $(candidate \"2 4\
    \ 8\") = \"0\" ]]\n    [[ $(candidate \"30 13 23 32\") = \"23\" ]]\n    [[ $(candidate\
    \ \"3 13 2 9\") = \"3\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: '/tmp/tmpmgddp7td.sh: line 7: local: `5 8 7 1'': invalid variable name for
    name reference

    '
  stdout: ''
  timestamp: 1659999723
- exit_code: 1
  program: "#!/bin/bash\n# Given a non-empty list of integers, return the sum of all\
    \ of the odd elements that are in even positions.\n# Examples\n#\n# $1 is a space-separated\
    \ list\nsolution() {\n  local -a a\n  local -i i=0 j=0\n  local -i sum=0\n  IFS='\
    \ ' read -r -a a <<< \"$1\"\n  for ((i=0; i<${#a[@]}; i++)); do\n    if ((i %\
    \ 2 == 0)); then\n      ((sum += a[i]))\n    fi\n  done\n  echo $sum\n}\n\ncandidate()\
    \ {\n    solution \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"5 8\
    \ 7 1\") = \"12\" ]]\n    [[ $(candidate \"3 3 3 3 3\") = \"9\" ]]\n    [[ $(candidate\
    \ \"30 13 24 321\") = \"0\" ]]\n    [[ $(candidate \"5 9\") = \"5\" ]]\n    [[\
    \ $(candidate \"2 4 8\") = \"0\" ]]\n    [[ $(candidate \"30 13 23 32\") = \"\
    23\" ]]\n    [[ $(candidate \"3 13 2 9\") = \"3\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1659999723
- exit_code: 0
  program: "#!/bin/bash\n# Given a non-empty list of integers, return the sum of all\
    \ of the odd elements that are in even positions.\n# Examples\n#\n# $1 is a space-separated\
    \ list\nsolution() {\n  local -a arr\n  IFS=' ' read -r -a arr <<< \"$1\"\n  local\
    \ sum=0\n  for ((i=0; i<${#arr[@]}; i++)); do\n    if ((i % 2 == 0 && arr[i] %\
    \ 2 != 0)); then\n      ((sum += arr[i]))\n    fi\n  done\n  echo \"$sum\"\n}\n\
    \ncandidate() {\n    solution \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate\
    \ \"5 8 7 1\") = \"12\" ]]\n    [[ $(candidate \"3 3 3 3 3\") = \"9\" ]]\n   \
    \ [[ $(candidate \"30 13 24 321\") = \"0\" ]]\n    [[ $(candidate \"5 9\") = \"\
    5\" ]]\n    [[ $(candidate \"2 4 8\") = \"0\" ]]\n    [[ $(candidate \"30 13 23\
    \ 32\") = \"23\" ]]\n    [[ $(candidate \"3 13 2 9\") = \"3\" ]]\n}\n\nrun_test"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659999723
- exit_code: 1
  program: "#!/bin/bash\n# Given a non-empty list of integers, return the sum of all\
    \ of the odd elements that are in even positions.\n# Examples\n#\n# $1 is a space-separated\
    \ list\nsolution() {\n  local -a array=(\"$@\")\n  local sum=0\n  for ((i=0; i<${#array[@]};\
    \ i+=2)); do\n    if ((array[i] % 2 == 1)); then\n      ((sum += array[i]))\n\
    \    fi\n  done\n  echo $sum\n}\n\ncandidate() {\n    solution \"$@\"\n}\n\nset\
    \ -e\nrun_test() {\n    [[ $(candidate \"5 8 7 1\") = \"12\" ]]\n    [[ $(candidate\
    \ \"3 3 3 3 3\") = \"9\" ]]\n    [[ $(candidate \"30 13 24 321\") = \"0\" ]]\n\
    \    [[ $(candidate \"5 9\") = \"5\" ]]\n    [[ $(candidate \"2 4 8\") = \"0\"\
    \ ]]\n    [[ $(candidate \"30 13 23 32\") = \"23\" ]]\n    [[ $(candidate \"3\
    \ 13 2 9\") = \"3\" ]]\n}\n\nrun_test"
  status: SyntaxError
  stderr: '/tmp/tmputgi3riw.sh: line 10: ((: 5 8 7 1: syntax error in expression (error
    token is "8 7 1")

    '
  stdout: ''
  timestamp: 1659999723
- exit_code: 1
  program: "#!/bin/bash\n# Given a non-empty list of integers, return the sum of all\
    \ of the odd elements that are in even positions.\n# Examples\n#\n# $1 is a space-separated\
    \ list\nsolution() {\n  local -a arr=(\"$@\")\n  local sum=0\n  for ((i=0; i<${#arr[@]};\
    \ i++)); do\n    if ((i % 2 == 0)) && ((arr[i] % 2 != 0)); then\n      ((sum+=arr[i]))\n\
    \    fi\n  done\n  echo $sum\n}\n\ncandidate() {\n    solution \"$@\"\n}\n\nset\
    \ -e\nrun_test() {\n    [[ $(candidate \"5 8 7 1\") = \"12\" ]]\n    [[ $(candidate\
    \ \"3 3 3 3 3\") = \"9\" ]]\n    [[ $(candidate \"30 13 24 321\") = \"0\" ]]\n\
    \    [[ $(candidate \"5 9\") = \"5\" ]]\n    [[ $(candidate \"2 4 8\") = \"0\"\
    \ ]]\n    [[ $(candidate \"30 13 23 32\") = \"23\" ]]\n    [[ $(candidate \"3\
    \ 13 2 9\") = \"3\" ]]\n}\n\nrun_test"
  status: SyntaxError
  stderr: '/tmp/tmpsd5j6bdm.sh: line 10: ((: 5 8 7 1: syntax error in expression (error
    token is "8 7 1")

    '
  stdout: ''
  timestamp: 1659999723
- exit_code: 0
  program: "#!/bin/bash\n# Given a non-empty list of integers, return the sum of all\
    \ of the odd elements that are in even positions.\n# Examples\n#\n# $1 is a space-separated\
    \ list\nsolution() {\n  local input=$1\n  local sum=0\n  local i=0\n  for number\
    \ in $input; do\n    if [ $((i % 2)) -eq 0 ] && [ $((number % 2)) -ne 0 ]; then\n\
    \      sum=$((sum + number))\n    fi\n    i=$((i + 1))\n  done\n  echo $sum\n\
    }\n\ncandidate() {\n    solution \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate\
    \ \"5 8 7 1\") = \"12\" ]]\n    [[ $(candidate \"3 3 3 3 3\") = \"9\" ]]\n   \
    \ [[ $(candidate \"30 13 24 321\") = \"0\" ]]\n    [[ $(candidate \"5 9\") = \"\
    5\" ]]\n    [[ $(candidate \"2 4 8\") = \"0\" ]]\n    [[ $(candidate \"30 13 23\
    \ 32\") = \"23\" ]]\n    [[ $(candidate \"3 13 2 9\") = \"3\" ]]\n}\n\nrun_test"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659999723
- exit_code: 1
  program: "#!/bin/bash\n# Given a non-empty list of integers, return the sum of all\
    \ of the odd elements that are in even positions.\n# Examples\n#\n# $1 is a space-separated\
    \ list\nsolution() {\n  local -a arr=(\"$@\")\n  local sum=0\n  for ((i=0; i<${#arr[@]};\
    \ i++)); do\n    if ((i % 2 == 0 && arr[i] % 2 != 0)); then\n      sum=$((sum\
    \ + arr[i]))\n    fi\n  done\n  echo $sum\n}\n\ncandidate() {\n    solution \"\
    $@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"5 8 7 1\") = \"12\" ]]\n\
    \    [[ $(candidate \"3 3 3 3 3\") = \"9\" ]]\n    [[ $(candidate \"30 13 24 321\"\
    ) = \"0\" ]]\n    [[ $(candidate \"5 9\") = \"5\" ]]\n    [[ $(candidate \"2 4\
    \ 8\") = \"0\" ]]\n    [[ $(candidate \"30 13 23 32\") = \"23\" ]]\n    [[ $(candidate\
    \ \"3 13 2 9\") = \"3\" ]]\n}\n\nrun_test"
  status: SyntaxError
  stderr: '/tmp/tmp7zrdxmpl.sh: line 10: ((: 5 8 7 1: syntax error in expression (error
    token is "8 7 1")

    '
  stdout: ''
  timestamp: 1659999723
- exit_code: 1
  program: "#!/bin/bash\n# Given a non-empty list of integers, return the sum of all\
    \ of the odd elements that are in even positions.\n# Examples\n#\n# $1 is a space-separated\
    \ list\nsolution() {\n  local -n arr=$1\n  local sum=0\n  for ((i=0; i<${#arr[@]};\
    \ i+=2)); do\n    ((arr[i] % 2 == 1)) && ((sum+=arr[i]))\n  done\n  echo $sum\n\
    }\n\ncandidate() {\n    solution \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate\
    \ \"5 8 7 1\") = \"12\" ]]\n    [[ $(candidate \"3 3 3 3 3\") = \"9\" ]]\n   \
    \ [[ $(candidate \"30 13 24 321\") = \"0\" ]]\n    [[ $(candidate \"5 9\") = \"\
    5\" ]]\n    [[ $(candidate \"2 4 8\") = \"0\" ]]\n    [[ $(candidate \"30 13 23\
    \ 32\") = \"23\" ]]\n    [[ $(candidate \"3 13 2 9\") = \"3\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: '/tmp/tmp7f5ao963.sh: line 7: local: `5 8 7 1'': invalid variable name for
    name reference

    '
  stdout: ''
  timestamp: 1659999723
- exit_code: 1
  program: "#!/bin/bash\n# Given a non-empty list of integers, return the sum of all\
    \ of the odd elements that are in even positions.\n# Examples\n#\n# $1 is a space-separated\
    \ list\nsolution() {\n  local -a arr=(\"$@\")\n  local sum=0\n  for ((i=0; i<${#arr[@]};\
    \ i++)); do\n    if ((i % 2 == 0 && arr[i] % 2 != 0)); then\n      sum=$((sum\
    \ + arr[i]))\n    fi\n  done\n  echo $sum\n}\n\ncandidate() {\n    solution \"\
    $@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"5 8 7 1\") = \"12\" ]]\n\
    \    [[ $(candidate \"3 3 3 3 3\") = \"9\" ]]\n    [[ $(candidate \"30 13 24 321\"\
    ) = \"0\" ]]\n    [[ $(candidate \"5 9\") = \"5\" ]]\n    [[ $(candidate \"2 4\
    \ 8\") = \"0\" ]]\n    [[ $(candidate \"30 13 23 32\") = \"23\" ]]\n    [[ $(candidate\
    \ \"3 13 2 9\") = \"3\" ]]\n}\n\nrun_test"
  status: SyntaxError
  stderr: '/tmp/tmp7zrdxmpl.sh: line 10: ((: 5 8 7 1: syntax error in expression (error
    token is "8 7 1")

    '
  stdout: ''
  timestamp: 1659999723
- exit_code: 1
  program: "#!/bin/bash\n# Given a non-empty list of integers, return the sum of all\
    \ of the odd elements that are in even positions.\n# Examples\n#\n# $1 is a space-separated\
    \ list\nsolution() {\n  echo $1 | tr ' ' '\\n' | awk 'NR%2==0' | awk '$1%2==1'\
    \ | paste -sd+ | bc\n}\n\ncandidate() {\n    solution \"$@\"\n}\n\nset -e\nrun_test()\
    \ {\n    [[ $(candidate \"5 8 7 1\") = \"12\" ]]\n    [[ $(candidate \"3 3 3 3\
    \ 3\") = \"9\" ]]\n    [[ $(candidate \"30 13 24 321\") = \"0\" ]]\n    [[ $(candidate\
    \ \"5 9\") = \"5\" ]]\n    [[ $(candidate \"2 4 8\") = \"0\" ]]\n    [[ $(candidate\
    \ \"30 13 23 32\") = \"23\" ]]\n    [[ $(candidate \"3 13 2 9\") = \"3\" ]]\n\
    }\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1659999723
- exit_code: 1
  program: "#!/bin/bash\n# Given a non-empty list of integers, return the sum of all\
    \ of the odd elements that are in even positions.\n# Examples\n#\n# $1 is a space-separated\
    \ list\nsolution() {\n  local -n arr=$1\n  local sum=0\n  for ((i=0; i<${#arr[@]};\
    \ i++)); do\n    if ((i % 2 == 0 && arr[i] % 2 != 0)); then\n      sum=$((sum\
    \ + arr[i]))\n    fi\n  done\n  echo $sum\n}\n\ncandidate() {\n    solution \"\
    $@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"5 8 7 1\") = \"12\" ]]\n\
    \    [[ $(candidate \"3 3 3 3 3\") = \"9\" ]]\n    [[ $(candidate \"30 13 24 321\"\
    ) = \"0\" ]]\n    [[ $(candidate \"5 9\") = \"5\" ]]\n    [[ $(candidate \"2 4\
    \ 8\") = \"0\" ]]\n    [[ $(candidate \"30 13 23 32\") = \"23\" ]]\n    [[ $(candidate\
    \ \"3 13 2 9\") = \"3\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: '/tmp/tmpmgddp7td.sh: line 7: local: `5 8 7 1'': invalid variable name for
    name reference

    '
  stdout: ''
  timestamp: 1659999723
- exit_code: 1
  program: "#!/bin/bash\n# Given a non-empty list of integers, return the sum of all\
    \ of the odd elements that are in even positions.\n# Examples\n#\n# $1 is a space-separated\
    \ list\nsolution() {\n  local -a arr=(\"$@\")\n  local sum=0\n  for ((i=0; i<${#arr[@]};\
    \ i++)); do\n    if (( i % 2 == 0 && arr[i] % 2 != 0 )); then\n      sum=$((sum\
    \ + arr[i]))\n    fi\n  done\n  echo $sum\n}\n\ncandidate() {\n    solution \"\
    $@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"5 8 7 1\") = \"12\" ]]\n\
    \    [[ $(candidate \"3 3 3 3 3\") = \"9\" ]]\n    [[ $(candidate \"30 13 24 321\"\
    ) = \"0\" ]]\n    [[ $(candidate \"5 9\") = \"5\" ]]\n    [[ $(candidate \"2 4\
    \ 8\") = \"0\" ]]\n    [[ $(candidate \"30 13 23 32\") = \"23\" ]]\n    [[ $(candidate\
    \ \"3 13 2 9\") = \"3\" ]]\n}\n\nrun_test"
  status: SyntaxError
  stderr: '/tmp/tmp_ovnpzeh.sh: line 10: ((: 5 8 7 1: syntax error in expression (error
    token is "8 7 1")

    '
  stdout: ''
  timestamp: 1659999723
- exit_code: 0
  program: "#!/bin/bash\n# Given a non-empty list of integers, return the sum of all\
    \ of the odd elements that are in even positions.\n# Examples\n#\n# $1 is a space-separated\
    \ list\nsolution() {\n  local -a list=($1)\n  local sum=0\n  for ((i=0; i<${#list[@]};\
    \ i++)); do\n    if ((i % 2 == 0)); then\n      if ((list[i] % 2 != 0)); then\n\
    \        sum=$((sum + list[i]))\n      fi\n    fi\n  done\n  echo $sum\n}\n\n\
    candidate() {\n    solution \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate\
    \ \"5 8 7 1\") = \"12\" ]]\n    [[ $(candidate \"3 3 3 3 3\") = \"9\" ]]\n   \
    \ [[ $(candidate \"30 13 24 321\") = \"0\" ]]\n    [[ $(candidate \"5 9\") = \"\
    5\" ]]\n    [[ $(candidate \"2 4 8\") = \"0\" ]]\n    [[ $(candidate \"30 13 23\
    \ 32\") = \"23\" ]]\n    [[ $(candidate \"3 13 2 9\") = \"3\" ]]\n}\n\nrun_test"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659999723
- exit_code: 1
  program: "#!/bin/bash\n# Given a non-empty list of integers, return the sum of all\
    \ of the odd elements that are in even positions.\n# Examples\n#\n# $1 is a space-separated\
    \ list\nsolution() {\n  local -a arr=(\"$@\")\n  local sum=0\n  for ((i=0; i<${#arr[@]};\
    \ i++)); do\n    if ((i % 2 == 0 && arr[i] % 2 != 0)); then\n      sum=$((sum\
    \ + arr[i]))\n    fi\n  done\n  echo $sum\n}\n\ncandidate() {\n    solution \"\
    $@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"5 8 7 1\") = \"12\" ]]\n\
    \    [[ $(candidate \"3 3 3 3 3\") = \"9\" ]]\n    [[ $(candidate \"30 13 24 321\"\
    ) = \"0\" ]]\n    [[ $(candidate \"5 9\") = \"5\" ]]\n    [[ $(candidate \"2 4\
    \ 8\") = \"0\" ]]\n    [[ $(candidate \"30 13 23 32\") = \"23\" ]]\n    [[ $(candidate\
    \ \"3 13 2 9\") = \"3\" ]]\n}\n\nrun_test"
  status: SyntaxError
  stderr: '/tmp/tmp7zrdxmpl.sh: line 10: ((: 5 8 7 1: syntax error in expression (error
    token is "8 7 1")

    '
  stdout: ''
  timestamp: 1659999723
- exit_code: 0
  program: "#!/bin/bash\n# Given a non-empty list of integers, return the sum of all\
    \ of the odd elements that are in even positions.\n# Examples\n#\n# $1 is a space-separated\
    \ list\nsolution() {\n  local -a nums=($1)\n  local sum=0\n  for ((i=0; i<${#nums[@]};\
    \ i++)); do\n    if ((i % 2 == 0 && nums[i] % 2 == 1)); then\n      sum=$((sum\
    \ + nums[i]))\n    fi\n  done\n  echo $sum\n}\n\ncandidate() {\n    solution \"\
    $@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"5 8 7 1\") = \"12\" ]]\n\
    \    [[ $(candidate \"3 3 3 3 3\") = \"9\" ]]\n    [[ $(candidate \"30 13 24 321\"\
    ) = \"0\" ]]\n    [[ $(candidate \"5 9\") = \"5\" ]]\n    [[ $(candidate \"2 4\
    \ 8\") = \"0\" ]]\n    [[ $(candidate \"30 13 23 32\") = \"23\" ]]\n    [[ $(candidate\
    \ \"3 13 2 9\") = \"3\" ]]\n}\n\nrun_test"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659999723
- exit_code: 0
  program: "#!/bin/bash\n# Given a non-empty list of integers, return the sum of all\
    \ of the odd elements that are in even positions.\n# Examples\n#\n# $1 is a space-separated\
    \ list\nsolution() {\n  local -a a=($1)\n  local sum=0\n  for ((i=0; i<${#a[@]};\
    \ i++)); do\n    if ((i % 2 == 0 && a[i] % 2 == 1)); then\n      ((sum += a[i]))\n\
    \    fi\n  done\n  echo $sum\n}\n\ncandidate() {\n    solution \"$@\"\n}\n\nset\
    \ -e\nrun_test() {\n    [[ $(candidate \"5 8 7 1\") = \"12\" ]]\n    [[ $(candidate\
    \ \"3 3 3 3 3\") = \"9\" ]]\n    [[ $(candidate \"30 13 24 321\") = \"0\" ]]\n\
    \    [[ $(candidate \"5 9\") = \"5\" ]]\n    [[ $(candidate \"2 4 8\") = \"0\"\
    \ ]]\n    [[ $(candidate \"30 13 23 32\") = \"23\" ]]\n    [[ $(candidate \"3\
    \ 13 2 9\") = \"3\" ]]\n}\n\nrun_test"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659999723
- exit_code: 1
  program: "#!/bin/bash\n# Given a non-empty list of integers, return the sum of all\
    \ of the odd elements that are in even positions.\n# Examples\n#\n# $1 is a space-separated\
    \ list\nsolution() {\n  local -a a\n  local -i i\n  IFS=' ' read -r -a a <<< \"\
    $1\"\n  for ((i=0; i<${#a[@]}; i+=2)); do\n    ((a[i]%2)) && ((sum+=a[i]))\n \
    \ done\n  echo $sum\n}\n\ncandidate() {\n    solution \"$@\"\n}\n\nset -e\nrun_test()\
    \ {\n    [[ $(candidate \"5 8 7 1\") = \"12\" ]]\n    [[ $(candidate \"3 3 3 3\
    \ 3\") = \"9\" ]]\n    [[ $(candidate \"30 13 24 321\") = \"0\" ]]\n    [[ $(candidate\
    \ \"5 9\") = \"5\" ]]\n    [[ $(candidate \"2 4 8\") = \"0\" ]]\n    [[ $(candidate\
    \ \"30 13 23 32\") = \"23\" ]]\n    [[ $(candidate \"3 13 2 9\") = \"3\" ]]\n\
    }\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1659999723
- exit_code: 1
  program: "#!/bin/bash\n# Given a non-empty list of integers, return the sum of all\
    \ of the odd elements that are in even positions.\n# Examples\n#\n# $1 is a space-separated\
    \ list\nsolution() {\n  local -n arr=$1\n  local sum=0\n  for ((i=0; i<${#arr[@]};\
    \ i++)); do\n    if ((i % 2 == 0 && arr[i] % 2 != 0)); then\n      ((sum += arr[i]))\n\
    \    fi\n  done\n  echo $sum\n}\n\ncandidate() {\n    solution \"$@\"\n}\n\nset\
    \ -e\nrun_test() {\n    [[ $(candidate \"5 8 7 1\") = \"12\" ]]\n    [[ $(candidate\
    \ \"3 3 3 3 3\") = \"9\" ]]\n    [[ $(candidate \"30 13 24 321\") = \"0\" ]]\n\
    \    [[ $(candidate \"5 9\") = \"5\" ]]\n    [[ $(candidate \"2 4 8\") = \"0\"\
    \ ]]\n    [[ $(candidate \"30 13 23 32\") = \"23\" ]]\n    [[ $(candidate \"3\
    \ 13 2 9\") = \"3\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: '/tmp/tmp4cem3cgs.sh: line 7: local: `5 8 7 1'': invalid variable name for
    name reference

    '
  stdout: ''
  timestamp: 1659999723
- exit_code: 0
  program: "#!/bin/bash\n# Given a non-empty list of integers, return the sum of all\
    \ of the odd elements that are in even positions.\n# Examples\n#\n# $1 is a space-separated\
    \ list\nsolution() {\n  local -a a=($1)\n  local sum=0\n  for ((i=0; i<${#a[@]};\
    \ i++)); do\n    if ((i % 2 == 0 && a[i] % 2 == 1)); then\n      ((sum += a[i]))\n\
    \    fi\n  done\n  echo $sum\n}\n\ncandidate() {\n    solution \"$@\"\n}\n\nset\
    \ -e\nrun_test() {\n    [[ $(candidate \"5 8 7 1\") = \"12\" ]]\n    [[ $(candidate\
    \ \"3 3 3 3 3\") = \"9\" ]]\n    [[ $(candidate \"30 13 24 321\") = \"0\" ]]\n\
    \    [[ $(candidate \"5 9\") = \"5\" ]]\n    [[ $(candidate \"2 4 8\") = \"0\"\
    \ ]]\n    [[ $(candidate \"30 13 23 32\") = \"23\" ]]\n    [[ $(candidate \"3\
    \ 13 2 9\") = \"3\" ]]\n}\n\nrun_test"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659999723
- exit_code: 1
  program: "#!/bin/bash\n# Given a non-empty list of integers, return the sum of all\
    \ of the odd elements that are in even positions.\n# Examples\n#\n# $1 is a space-separated\
    \ list\nsolution() {\n  local -a arr=(\"$@\")\n  local sum=0\n  for ((i=0; i<${#arr[@]};\
    \ i++)); do\n    if ((i%2==0 && arr[i]%2==1)); then\n      ((sum+=arr[i]))\n \
    \   fi\n  done\n  echo $sum\n}\n\ncandidate() {\n    solution \"$@\"\n}\n\nset\
    \ -e\nrun_test() {\n    [[ $(candidate \"5 8 7 1\") = \"12\" ]]\n    [[ $(candidate\
    \ \"3 3 3 3 3\") = \"9\" ]]\n    [[ $(candidate \"30 13 24 321\") = \"0\" ]]\n\
    \    [[ $(candidate \"5 9\") = \"5\" ]]\n    [[ $(candidate \"2 4 8\") = \"0\"\
    \ ]]\n    [[ $(candidate \"30 13 23 32\") = \"23\" ]]\n    [[ $(candidate \"3\
    \ 13 2 9\") = \"3\" ]]\n}\n\nrun_test"
  status: SyntaxError
  stderr: '/tmp/tmp1qa_yz97.sh: line 10: ((: 5 8 7 1: syntax error in expression (error
    token is "8 7 1")

    '
  stdout: ''
  timestamp: 1659999723
- exit_code: 1
  program: "#!/bin/bash\n# Given a non-empty list of integers, return the sum of all\
    \ of the odd elements that are in even positions.\n# Examples\n#\n# $1 is a space-separated\
    \ list\nsolution() {\n  local -a arr=(\"$@\")\n  local sum=0\n  for ((i=0; i<${#arr[@]};\
    \ i++)); do\n    if ((i % 2 == 0 && arr[i] % 2 != 0)); then\n      sum=$((sum\
    \ + arr[i]))\n    fi\n  done\n  echo $sum\n}\n\ncandidate() {\n    solution \"\
    $@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"5 8 7 1\") = \"12\" ]]\n\
    \    [[ $(candidate \"3 3 3 3 3\") = \"9\" ]]\n    [[ $(candidate \"30 13 24 321\"\
    ) = \"0\" ]]\n    [[ $(candidate \"5 9\") = \"5\" ]]\n    [[ $(candidate \"2 4\
    \ 8\") = \"0\" ]]\n    [[ $(candidate \"30 13 23 32\") = \"23\" ]]\n    [[ $(candidate\
    \ \"3 13 2 9\") = \"3\" ]]\n}\n\nrun_test"
  status: SyntaxError
  stderr: '/tmp/tmp7zrdxmpl.sh: line 10: ((: 5 8 7 1: syntax error in expression (error
    token is "8 7 1")

    '
  stdout: ''
  timestamp: 1659999723
- exit_code: 1
  program: "#!/bin/bash\n# Given a non-empty list of integers, return the sum of all\
    \ of the odd elements that are in even positions.\n# Examples\n#\n# $1 is a space-separated\
    \ list\nsolution() {\n  local -a arr=(\"$@\")\n  local sum=0\n  for ((i=0; i<${#arr[@]};\
    \ i++)); do\n    if ((i % 2 == 0 && arr[i] % 2 != 0)); then\n      sum=$((sum\
    \ + arr[i]))\n    fi\n  done\n  echo $sum\n}\n\ncandidate() {\n    solution \"\
    $@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"5 8 7 1\") = \"12\" ]]\n\
    \    [[ $(candidate \"3 3 3 3 3\") = \"9\" ]]\n    [[ $(candidate \"30 13 24 321\"\
    ) = \"0\" ]]\n    [[ $(candidate \"5 9\") = \"5\" ]]\n    [[ $(candidate \"2 4\
    \ 8\") = \"0\" ]]\n    [[ $(candidate \"30 13 23 32\") = \"23\" ]]\n    [[ $(candidate\
    \ \"3 13 2 9\") = \"3\" ]]\n}\n\nrun_test"
  status: SyntaxError
  stderr: '/tmp/tmp7zrdxmpl.sh: line 10: ((: 5 8 7 1: syntax error in expression (error
    token is "8 7 1")

    '
  stdout: ''
  timestamp: 1659999723
- exit_code: 0
  program: "#!/bin/bash\n# Given a non-empty list of integers, return the sum of all\
    \ of the odd elements that are in even positions.\n# Examples\n#\n# $1 is a space-separated\
    \ list\nsolution() {\n  local -a nums=($1)\n  local sum=0\n  for ((i=0; i<${#nums[@]};\
    \ i++)); do\n    if ((i % 2 == 0 && nums[i] % 2 == 1)); then\n      sum=$((sum\
    \ + nums[i]))\n    fi\n  done\n  echo $sum\n}\n\ncandidate() {\n    solution \"\
    $@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"5 8 7 1\") = \"12\" ]]\n\
    \    [[ $(candidate \"3 3 3 3 3\") = \"9\" ]]\n    [[ $(candidate \"30 13 24 321\"\
    ) = \"0\" ]]\n    [[ $(candidate \"5 9\") = \"5\" ]]\n    [[ $(candidate \"2 4\
    \ 8\") = \"0\" ]]\n    [[ $(candidate \"30 13 23 32\") = \"23\" ]]\n    [[ $(candidate\
    \ \"3 13 2 9\") = \"3\" ]]\n}\n\nrun_test"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659999723
- exit_code: 1
  program: "#!/bin/bash\n# Given a non-empty list of integers, return the sum of all\
    \ of the odd elements that are in even positions.\n# Examples\n#\n# $1 is a space-separated\
    \ list\nsolution() {\n  local -a arr=(\"$@\")\n  local sum=0\n  for ((i=0; i<${#arr[@]};\
    \ i+=2)); do\n    if ((arr[i] % 2 == 1)); then\n      ((sum += arr[i]))\n    fi\n\
    \  done\n  echo $sum\n}\n\ncandidate() {\n    solution \"$@\"\n}\n\nset -e\nrun_test()\
    \ {\n    [[ $(candidate \"5 8 7 1\") = \"12\" ]]\n    [[ $(candidate \"3 3 3 3\
    \ 3\") = \"9\" ]]\n    [[ $(candidate \"30 13 24 321\") = \"0\" ]]\n    [[ $(candidate\
    \ \"5 9\") = \"5\" ]]\n    [[ $(candidate \"2 4 8\") = \"0\" ]]\n    [[ $(candidate\
    \ \"30 13 23 32\") = \"23\" ]]\n    [[ $(candidate \"3 13 2 9\") = \"3\" ]]\n\
    }\n\nrun_test"
  status: SyntaxError
  stderr: '/tmp/tmppp_ih_td.sh: line 10: ((: 5 8 7 1: syntax error in expression (error
    token is "8 7 1")

    '
  stdout: ''
  timestamp: 1659999723
- exit_code: 1
  program: "#!/bin/bash\n# Given a non-empty list of integers, return the sum of all\
    \ of the odd elements that are in even positions.\n# Examples\n#\n# $1 is a space-separated\
    \ list\nsolution() {\n  local -a arr=(\"$@\")\n  local sum=0\n  for ((i=0; i<${#arr[@]};\
    \ i+=2)); do\n    if ((arr[i] % 2 == 1)); then\n      sum=$((sum + arr[i]))\n\
    \    fi\n  done\n  echo $sum\n}\n\ncandidate() {\n    solution \"$@\"\n}\n\nset\
    \ -e\nrun_test() {\n    [[ $(candidate \"5 8 7 1\") = \"12\" ]]\n    [[ $(candidate\
    \ \"3 3 3 3 3\") = \"9\" ]]\n    [[ $(candidate \"30 13 24 321\") = \"0\" ]]\n\
    \    [[ $(candidate \"5 9\") = \"5\" ]]\n    [[ $(candidate \"2 4 8\") = \"0\"\
    \ ]]\n    [[ $(candidate \"30 13 23 32\") = \"23\" ]]\n    [[ $(candidate \"3\
    \ 13 2 9\") = \"3\" ]]\n}\n\nrun_test"
  status: SyntaxError
  stderr: '/tmp/tmptqtovnal.sh: line 10: ((: 5 8 7 1: syntax error in expression (error
    token is "8 7 1")

    '
  stdout: ''
  timestamp: 1659999723
- exit_code: 1
  program: "#!/bin/bash\n# Given a non-empty list of integers, return the sum of all\
    \ of the odd elements that are in even positions.\n# Examples\n#\n# $1 is a space-separated\
    \ list\nsolution() {\n  local -a arr=(\"$@\")\n  local sum=0\n  for ((i=0; i<${#arr[@]};\
    \ i++)); do\n    if ((i % 2 == 0 && arr[i] % 2 != 0)); then\n      ((sum += arr[i]))\n\
    \    fi\n  done\n  echo $sum\n}\n\ncandidate() {\n    solution \"$@\"\n}\n\nset\
    \ -e\nrun_test() {\n    [[ $(candidate \"5 8 7 1\") = \"12\" ]]\n    [[ $(candidate\
    \ \"3 3 3 3 3\") = \"9\" ]]\n    [[ $(candidate \"30 13 24 321\") = \"0\" ]]\n\
    \    [[ $(candidate \"5 9\") = \"5\" ]]\n    [[ $(candidate \"2 4 8\") = \"0\"\
    \ ]]\n    [[ $(candidate \"30 13 23 32\") = \"23\" ]]\n    [[ $(candidate \"3\
    \ 13 2 9\") = \"3\" ]]\n}\n\nrun_test"
  status: SyntaxError
  stderr: '/tmp/tmpqw34qf9r.sh: line 10: ((: 5 8 7 1: syntax error in expression (error
    token is "8 7 1")

    '
  stdout: ''
  timestamp: 1659999723
- exit_code: 1
  program: "#!/bin/bash\n# Given a non-empty list of integers, return the sum of all\
    \ of the odd elements that are in even positions.\n# Examples\n#\n# $1 is a space-separated\
    \ list\nsolution() {\n  local -a arr=(\"$@\")\n  local sum=0\n  for ((i=0; i<${#arr[@]};\
    \ i++)); do\n    if ((i % 2 == 0 && arr[i] % 2 != 0)); then\n      sum=$((sum\
    \ + arr[i]))\n    fi\n  done\n  echo $sum\n}\n\ncandidate() {\n    solution \"\
    $@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"5 8 7 1\") = \"12\" ]]\n\
    \    [[ $(candidate \"3 3 3 3 3\") = \"9\" ]]\n    [[ $(candidate \"30 13 24 321\"\
    ) = \"0\" ]]\n    [[ $(candidate \"5 9\") = \"5\" ]]\n    [[ $(candidate \"2 4\
    \ 8\") = \"0\" ]]\n    [[ $(candidate \"30 13 23 32\") = \"23\" ]]\n    [[ $(candidate\
    \ \"3 13 2 9\") = \"3\" ]]\n}\n\nrun_test"
  status: SyntaxError
  stderr: '/tmp/tmp7zrdxmpl.sh: line 10: ((: 5 8 7 1: syntax error in expression (error
    token is "8 7 1")

    '
  stdout: ''
  timestamp: 1659999723
- exit_code: 1
  program: "#!/bin/bash\n# Given a non-empty list of integers, return the sum of all\
    \ of the odd elements that are in even positions.\n# Examples\n#\n# $1 is a space-separated\
    \ list\nsolution() {\n  local -a arr=(\"$@\")\n  local sum=0\n  for ((i=0; i<${#arr[@]};\
    \ i++)); do\n    if ((i % 2 == 0 && arr[i] % 2 != 0)); then\n      ((sum += arr[i]))\n\
    \    fi\n  done\n  echo $sum\n}\n\ncandidate() {\n    solution \"$@\"\n}\n\nset\
    \ -e\nrun_test() {\n    [[ $(candidate \"5 8 7 1\") = \"12\" ]]\n    [[ $(candidate\
    \ \"3 3 3 3 3\") = \"9\" ]]\n    [[ $(candidate \"30 13 24 321\") = \"0\" ]]\n\
    \    [[ $(candidate \"5 9\") = \"5\" ]]\n    [[ $(candidate \"2 4 8\") = \"0\"\
    \ ]]\n    [[ $(candidate \"30 13 23 32\") = \"23\" ]]\n    [[ $(candidate \"3\
    \ 13 2 9\") = \"3\" ]]\n}\n\nrun_test"
  status: SyntaxError
  stderr: '/tmp/tmpqw34qf9r.sh: line 10: ((: 5 8 7 1: syntax error in expression (error
    token is "8 7 1")

    '
  stdout: ''
  timestamp: 1659999723
- exit_code: 0
  program: "#!/bin/bash\n# Given a non-empty list of integers, return the sum of all\
    \ of the odd elements that are in even positions.\n# Examples\n#\n# $1 is a space-separated\
    \ list\nsolution() {\n  local -a a=($1)\n  local sum=0\n  for ((i=0; i<${#a[@]};\
    \ i++)); do\n    if ((i % 2 == 0 && a[i] % 2 != 0)); then\n      sum=$((sum +\
    \ a[i]))\n    fi\n  done\n  echo $sum\n}\n\ncandidate() {\n    solution \"$@\"\
    \n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"5 8 7 1\") = \"12\" ]]\n   \
    \ [[ $(candidate \"3 3 3 3 3\") = \"9\" ]]\n    [[ $(candidate \"30 13 24 321\"\
    ) = \"0\" ]]\n    [[ $(candidate \"5 9\") = \"5\" ]]\n    [[ $(candidate \"2 4\
    \ 8\") = \"0\" ]]\n    [[ $(candidate \"30 13 23 32\") = \"23\" ]]\n    [[ $(candidate\
    \ \"3 13 2 9\") = \"3\" ]]\n}\n\nrun_test"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659999723
- exit_code: 0
  program: "#!/bin/bash\n# Given a non-empty list of integers, return the sum of all\
    \ of the odd elements that are in even positions.\n# Examples\n#\n# $1 is a space-separated\
    \ list\nsolution() {\n  local -a list=($1)\n  local sum=0\n  for ((i=0; i<${#list[@]};\
    \ i++)); do\n    if ((i % 2 == 0 && list[i] % 2 != 0)); then\n      sum=$((sum\
    \ + list[i]))\n    fi\n  done\n  echo $sum\n}\n\ncandidate() {\n    solution \"\
    $@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"5 8 7 1\") = \"12\" ]]\n\
    \    [[ $(candidate \"3 3 3 3 3\") = \"9\" ]]\n    [[ $(candidate \"30 13 24 321\"\
    ) = \"0\" ]]\n    [[ $(candidate \"5 9\") = \"5\" ]]\n    [[ $(candidate \"2 4\
    \ 8\") = \"0\" ]]\n    [[ $(candidate \"30 13 23 32\") = \"23\" ]]\n    [[ $(candidate\
    \ \"3 13 2 9\") = \"3\" ]]\n}\n\nrun_test"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659999723
- exit_code: 0
  program: "#!/bin/bash\n# Given a non-empty list of integers, return the sum of all\
    \ of the odd elements that are in even positions.\n# Examples\n#\n# $1 is a space-separated\
    \ list\nsolution() {\n  local -a a=($1)\n  local sum=0\n  for ((i=0; i<${#a[@]};\
    \ i++)); do\n    if ((i%2==0 && a[i]%2!=0)); then\n      sum=$((sum+a[i]))\n \
    \   fi\n  done\n  echo $sum\n}\n\ncandidate() {\n    solution \"$@\"\n}\n\nset\
    \ -e\nrun_test() {\n    [[ $(candidate \"5 8 7 1\") = \"12\" ]]\n    [[ $(candidate\
    \ \"3 3 3 3 3\") = \"9\" ]]\n    [[ $(candidate \"30 13 24 321\") = \"0\" ]]\n\
    \    [[ $(candidate \"5 9\") = \"5\" ]]\n    [[ $(candidate \"2 4 8\") = \"0\"\
    \ ]]\n    [[ $(candidate \"30 13 23 32\") = \"23\" ]]\n    [[ $(candidate \"3\
    \ 13 2 9\") = \"3\" ]]\n}\n\nrun_test"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659999723
- exit_code: 0
  program: "#!/bin/bash\n# Given a non-empty list of integers, return the sum of all\
    \ of the odd elements that are in even positions.\n# Examples\n#\n# $1 is a space-separated\
    \ list\nsolution() {\n  local -a arr=($1)\n  local sum=0\n  for ((i=0; i<${#arr[@]};\
    \ i++)); do\n    if ((i % 2 == 0 && arr[i] % 2 != 0)); then\n      sum=$((sum\
    \ + arr[i]))\n    fi\n  done\n  echo $sum\n}\n\ncandidate() {\n    solution \"\
    $@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"5 8 7 1\") = \"12\" ]]\n\
    \    [[ $(candidate \"3 3 3 3 3\") = \"9\" ]]\n    [[ $(candidate \"30 13 24 321\"\
    ) = \"0\" ]]\n    [[ $(candidate \"5 9\") = \"5\" ]]\n    [[ $(candidate \"2 4\
    \ 8\") = \"0\" ]]\n    [[ $(candidate \"30 13 23 32\") = \"23\" ]]\n    [[ $(candidate\
    \ \"3 13 2 9\") = \"3\" ]]\n}\n\nrun_test"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659999723
- exit_code: 0
  program: "#!/bin/bash\n# Given a non-empty list of integers, return the sum of all\
    \ of the odd elements that are in even positions.\n# Examples\n#\n# $1 is a space-separated\
    \ list\nsolution() {\n  local -a a\n  a=($1)\n  local sum=0\n  for ((i=0; i<${#a[@]};\
    \ i++)); do\n    if ((i%2==0 && a[i]%2==1)); then\n      ((sum+=a[i]))\n    fi\n\
    \  done\n  echo $sum\n}\n\ncandidate() {\n    solution \"$@\"\n}\n\nset -e\nrun_test()\
    \ {\n    [[ $(candidate \"5 8 7 1\") = \"12\" ]]\n    [[ $(candidate \"3 3 3 3\
    \ 3\") = \"9\" ]]\n    [[ $(candidate \"30 13 24 321\") = \"0\" ]]\n    [[ $(candidate\
    \ \"5 9\") = \"5\" ]]\n    [[ $(candidate \"2 4 8\") = \"0\" ]]\n    [[ $(candidate\
    \ \"30 13 23 32\") = \"23\" ]]\n    [[ $(candidate \"3 13 2 9\") = \"3\" ]]\n\
    }\n\nrun_test"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659999723
- exit_code: 1
  program: "#!/bin/bash\n# Given a non-empty list of integers, return the sum of all\
    \ of the odd elements that are in even positions.\n# Examples\n#\n# $1 is a space-separated\
    \ list\nsolution() {\n  local -a arr=(\"$@\")\n  local sum=0\n  for ((i=0; i<${#arr[@]};\
    \ i++)); do\n    if ((i % 2 == 0 && arr[i] % 2 != 0)); then\n      sum=$((sum\
    \ + arr[i]))\n    fi\n  done\n  echo $sum\n}\n\ncandidate() {\n    solution \"\
    $@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"5 8 7 1\") = \"12\" ]]\n\
    \    [[ $(candidate \"3 3 3 3 3\") = \"9\" ]]\n    [[ $(candidate \"30 13 24 321\"\
    ) = \"0\" ]]\n    [[ $(candidate \"5 9\") = \"5\" ]]\n    [[ $(candidate \"2 4\
    \ 8\") = \"0\" ]]\n    [[ $(candidate \"30 13 23 32\") = \"23\" ]]\n    [[ $(candidate\
    \ \"3 13 2 9\") = \"3\" ]]\n}\n\nrun_test"
  status: SyntaxError
  stderr: '/tmp/tmp7zrdxmpl.sh: line 10: ((: 5 8 7 1: syntax error in expression (error
    token is "8 7 1")

    '
  stdout: ''
  timestamp: 1659999723
- exit_code: 0
  program: "#!/bin/bash\n# Given a non-empty list of integers, return the sum of all\
    \ of the odd elements that are in even positions.\n# Examples\n#\n# $1 is a space-separated\
    \ list\nsolution() {\n  local -a array=($1)\n  local sum=0\n  for ((i=0; i<${#array[@]};\
    \ i++)); do\n    if ((i % 2 == 0 && array[i] % 2 != 0)); then\n      sum=$((sum\
    \ + array[i]))\n    fi\n  done\n  echo $sum\n}\n\ncandidate() {\n    solution\
    \ \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"5 8 7 1\") = \"12\"\
    \ ]]\n    [[ $(candidate \"3 3 3 3 3\") = \"9\" ]]\n    [[ $(candidate \"30 13\
    \ 24 321\") = \"0\" ]]\n    [[ $(candidate \"5 9\") = \"5\" ]]\n    [[ $(candidate\
    \ \"2 4 8\") = \"0\" ]]\n    [[ $(candidate \"30 13 23 32\") = \"23\" ]]\n   \
    \ [[ $(candidate \"3 13 2 9\") = \"3\" ]]\n}\n\nrun_test"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659999723
- exit_code: 1
  program: "#!/bin/bash\n# Given a non-empty list of integers, return the sum of all\
    \ of the odd elements that are in even positions.\n# Examples\n#\n# $1 is a space-separated\
    \ list\nsolution() {\n  local -a arr=(\"$@\")\n  local sum=0\n  for ((i=0; i<${#arr[@]};\
    \ i+=2)); do\n    if ((arr[i] % 2 == 1)); then\n      ((sum += arr[i]))\n    fi\n\
    \  done\n  echo $sum\n}\n\ncandidate() {\n    solution \"$@\"\n}\n\nset -e\nrun_test()\
    \ {\n    [[ $(candidate \"5 8 7 1\") = \"12\" ]]\n    [[ $(candidate \"3 3 3 3\
    \ 3\") = \"9\" ]]\n    [[ $(candidate \"30 13 24 321\") = \"0\" ]]\n    [[ $(candidate\
    \ \"5 9\") = \"5\" ]]\n    [[ $(candidate \"2 4 8\") = \"0\" ]]\n    [[ $(candidate\
    \ \"30 13 23 32\") = \"23\" ]]\n    [[ $(candidate \"3 13 2 9\") = \"3\" ]]\n\
    }\n\nrun_test"
  status: SyntaxError
  stderr: '/tmp/tmppp_ih_td.sh: line 10: ((: 5 8 7 1: syntax error in expression (error
    token is "8 7 1")

    '
  stdout: ''
  timestamp: 1659999723
- exit_code: 1
  program: "#!/bin/bash\n# Given a non-empty list of integers, return the sum of all\
    \ of the odd elements that are in even positions.\n# Examples\n#\n# $1 is a space-separated\
    \ list\nsolution() {\n  local -a arr=(\"$@\")\n  local sum=0\n  for ((i=0; i<${#arr[@]};\
    \ i+=2)); do\n    if ((arr[i] % 2 == 1)); then\n      sum=$((sum + arr[i]))\n\
    \    fi\n  done\n  echo $sum\n}\n\ncandidate() {\n    solution \"$@\"\n}\n\nset\
    \ -e\nrun_test() {\n    [[ $(candidate \"5 8 7 1\") = \"12\" ]]\n    [[ $(candidate\
    \ \"3 3 3 3 3\") = \"9\" ]]\n    [[ $(candidate \"30 13 24 321\") = \"0\" ]]\n\
    \    [[ $(candidate \"5 9\") = \"5\" ]]\n    [[ $(candidate \"2 4 8\") = \"0\"\
    \ ]]\n    [[ $(candidate \"30 13 23 32\") = \"23\" ]]\n    [[ $(candidate \"3\
    \ 13 2 9\") = \"3\" ]]\n}\n\nrun_test"
  status: SyntaxError
  stderr: '/tmp/tmptqtovnal.sh: line 10: ((: 5 8 7 1: syntax error in expression (error
    token is "8 7 1")

    '
  stdout: ''
  timestamp: 1659999723
- exit_code: 1
  program: "#!/bin/bash\n# Given a non-empty list of integers, return the sum of all\
    \ of the odd elements that are in even positions.\n# Examples\n#\n# $1 is a space-separated\
    \ list\nsolution() {\n  local -n arr=$1\n  local sum=0\n  for ((i=0; i<${#arr[@]};\
    \ i++)); do\n    if ((i % 2 == 0 && arr[i] % 2 != 0)); then\n      sum=$((sum\
    \ + arr[i]))\n    fi\n  done\n  echo $sum\n}\n\ncandidate() {\n    solution \"\
    $@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"5 8 7 1\") = \"12\" ]]\n\
    \    [[ $(candidate \"3 3 3 3 3\") = \"9\" ]]\n    [[ $(candidate \"30 13 24 321\"\
    ) = \"0\" ]]\n    [[ $(candidate \"5 9\") = \"5\" ]]\n    [[ $(candidate \"2 4\
    \ 8\") = \"0\" ]]\n    [[ $(candidate \"30 13 23 32\") = \"23\" ]]\n    [[ $(candidate\
    \ \"3 13 2 9\") = \"3\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: '/tmp/tmpmgddp7td.sh: line 7: local: `5 8 7 1'': invalid variable name for
    name reference

    '
  stdout: ''
  timestamp: 1659999723
- exit_code: 0
  program: "#!/bin/bash\n# Given a non-empty list of integers, return the sum of all\
    \ of the odd elements that are in even positions.\n# Examples\n#\n# $1 is a space-separated\
    \ list\nsolution() {\n  local -a list=($1)\n  local sum=0\n  for ((i=0; i<${#list[@]};\
    \ i++)); do\n    if ((i%2==0)) && ((list[i]%2==1)); then\n      sum=$((sum+list[i]))\n\
    \    fi\n  done\n  echo $sum\n}\n\ncandidate() {\n    solution \"$@\"\n}\n\nset\
    \ -e\nrun_test() {\n    [[ $(candidate \"5 8 7 1\") = \"12\" ]]\n    [[ $(candidate\
    \ \"3 3 3 3 3\") = \"9\" ]]\n    [[ $(candidate \"30 13 24 321\") = \"0\" ]]\n\
    \    [[ $(candidate \"5 9\") = \"5\" ]]\n    [[ $(candidate \"2 4 8\") = \"0\"\
    \ ]]\n    [[ $(candidate \"30 13 23 32\") = \"23\" ]]\n    [[ $(candidate \"3\
    \ 13 2 9\") = \"3\" ]]\n}\n\nrun_test"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659999723
- exit_code: 1
  program: "#!/bin/bash\n# Given a non-empty list of integers, return the sum of all\
    \ of the odd elements that are in even positions.\n# Examples\n#\n# $1 is a space-separated\
    \ list\nsolution() {\n  local -a arr=(\"$@\")\n  local sum=0\n  for ((i=0; i<${#arr[@]};\
    \ i++)); do\n    if ((i % 2 == 0 && arr[i] % 2 != 0)); then\n      sum=$((sum\
    \ + arr[i]))\n    fi\n  done\n  echo $sum\n}\n\ncandidate() {\n    solution \"\
    $@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"5 8 7 1\") = \"12\" ]]\n\
    \    [[ $(candidate \"3 3 3 3 3\") = \"9\" ]]\n    [[ $(candidate \"30 13 24 321\"\
    ) = \"0\" ]]\n    [[ $(candidate \"5 9\") = \"5\" ]]\n    [[ $(candidate \"2 4\
    \ 8\") = \"0\" ]]\n    [[ $(candidate \"30 13 23 32\") = \"23\" ]]\n    [[ $(candidate\
    \ \"3 13 2 9\") = \"3\" ]]\n}\n\nrun_test"
  status: SyntaxError
  stderr: '/tmp/tmp7zrdxmpl.sh: line 10: ((: 5 8 7 1: syntax error in expression (error
    token is "8 7 1")

    '
  stdout: ''
  timestamp: 1659999723
- exit_code: 0
  program: "#!/bin/bash\n# Given a non-empty list of integers, return the sum of all\
    \ of the odd elements that are in even positions.\n# Examples\n#\n# $1 is a space-separated\
    \ list\nsolution() {\n  local -a array=($1)\n  local sum=0\n  for (( i=0; i<${#array[@]};\
    \ i++ )); do\n    if (( $((i % 2)) == 0 && $((array[i] % 2)) == 1 )); then\n \
    \     (( sum += array[i] ))\n    fi\n  done\n  echo $sum\n}\n\ncandidate() {\n\
    \    solution \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"5 8 7 1\"\
    ) = \"12\" ]]\n    [[ $(candidate \"3 3 3 3 3\") = \"9\" ]]\n    [[ $(candidate\
    \ \"30 13 24 321\") = \"0\" ]]\n    [[ $(candidate \"5 9\") = \"5\" ]]\n    [[\
    \ $(candidate \"2 4 8\") = \"0\" ]]\n    [[ $(candidate \"30 13 23 32\") = \"\
    23\" ]]\n    [[ $(candidate \"3 13 2 9\") = \"3\" ]]\n}\n\nrun_test"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659999723
- exit_code: 1
  program: "#!/bin/bash\n# Given a non-empty list of integers, return the sum of all\
    \ of the odd elements that are in even positions.\n# Examples\n#\n# $1 is a space-separated\
    \ list\nsolution() {\n  local -a arr=(\"$@\")\n  local sum=0\n  for ((i=0; i<${#arr[@]};\
    \ i++)); do\n    if ((i%2==0 && arr[i]%2==1)); then\n      sum=$((sum+arr[i]))\n\
    \    fi\n  done\n  echo $sum\n}\n\ncandidate() {\n    solution \"$@\"\n}\n\nset\
    \ -e\nrun_test() {\n    [[ $(candidate \"5 8 7 1\") = \"12\" ]]\n    [[ $(candidate\
    \ \"3 3 3 3 3\") = \"9\" ]]\n    [[ $(candidate \"30 13 24 321\") = \"0\" ]]\n\
    \    [[ $(candidate \"5 9\") = \"5\" ]]\n    [[ $(candidate \"2 4 8\") = \"0\"\
    \ ]]\n    [[ $(candidate \"30 13 23 32\") = \"23\" ]]\n    [[ $(candidate \"3\
    \ 13 2 9\") = \"3\" ]]\n}\n\nrun_test"
  status: SyntaxError
  stderr: '/tmp/tmpl9a7yokf.sh: line 10: ((: 5 8 7 1: syntax error in expression (error
    token is "8 7 1")

    '
  stdout: ''
  timestamp: 1659999723
- exit_code: 0
  program: "#!/bin/bash\n# Given a non-empty list of integers, return the sum of all\
    \ of the odd elements that are in even positions.\n# Examples\n#\n# $1 is a space-separated\
    \ list\nsolution() {\n  local -a a\n  IFS=' ' read -r -a a <<< \"$1\"\n  local\
    \ sum=0\n  for ((i=0; i<${#a[@]}; i++)); do\n    ((i%2==0)) && ((a[i]%2==1)) &&\
    \ ((sum+=a[i]))\n  done\n  echo $sum\n}\n\ncandidate() {\n    solution \"$@\"\n\
    }\n\nset -e\nrun_test() {\n    [[ $(candidate \"5 8 7 1\") = \"12\" ]]\n    [[\
    \ $(candidate \"3 3 3 3 3\") = \"9\" ]]\n    [[ $(candidate \"30 13 24 321\")\
    \ = \"0\" ]]\n    [[ $(candidate \"5 9\") = \"5\" ]]\n    [[ $(candidate \"2 4\
    \ 8\") = \"0\" ]]\n    [[ $(candidate \"30 13 23 32\") = \"23\" ]]\n    [[ $(candidate\
    \ \"3 13 2 9\") = \"3\" ]]\n}\n\nrun_test"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659999723
- exit_code: 1
  program: "#!/bin/bash\n# Given a non-empty list of integers, return the sum of all\
    \ of the odd elements that are in even positions.\n# Examples\n#\n# $1 is a space-separated\
    \ list\nsolution() {\n  local -a arr=(\"$@\")\n  local sum=0\n  for ((i=0; i<${#arr[@]};\
    \ i+=2)); do\n    if ((arr[i] % 2 != 0)); then\n      ((sum+=arr[i]))\n    fi\n\
    \  done\n  echo $sum\n}\n\ncandidate() {\n    solution \"$@\"\n}\n\nset -e\nrun_test()\
    \ {\n    [[ $(candidate \"5 8 7 1\") = \"12\" ]]\n    [[ $(candidate \"3 3 3 3\
    \ 3\") = \"9\" ]]\n    [[ $(candidate \"30 13 24 321\") = \"0\" ]]\n    [[ $(candidate\
    \ \"5 9\") = \"5\" ]]\n    [[ $(candidate \"2 4 8\") = \"0\" ]]\n    [[ $(candidate\
    \ \"30 13 23 32\") = \"23\" ]]\n    [[ $(candidate \"3 13 2 9\") = \"3\" ]]\n\
    }\n\nrun_test"
  status: SyntaxError
  stderr: '/tmp/tmpntjssz_0.sh: line 10: ((: 5 8 7 1: syntax error in expression (error
    token is "8 7 1")

    '
  stdout: ''
  timestamp: 1659999723
- exit_code: 1
  program: "#!/bin/bash\n# Given a non-empty list of integers, return the sum of all\
    \ of the odd elements that are in even positions.\n# Examples\n#\n# $1 is a space-separated\
    \ list\nsolution() {\n  local -a arr=(\"$@\")\n  local sum=0\n  for ((i=0; i<${#arr[@]};\
    \ i++)); do\n    if ((i % 2 == 0 && arr[i] % 2 != 0)); then\n      ((sum += arr[i]))\n\
    \    fi\n  done\n  echo $sum\n}\n\ncandidate() {\n    solution \"$@\"\n}\n\nset\
    \ -e\nrun_test() {\n    [[ $(candidate \"5 8 7 1\") = \"12\" ]]\n    [[ $(candidate\
    \ \"3 3 3 3 3\") = \"9\" ]]\n    [[ $(candidate \"30 13 24 321\") = \"0\" ]]\n\
    \    [[ $(candidate \"5 9\") = \"5\" ]]\n    [[ $(candidate \"2 4 8\") = \"0\"\
    \ ]]\n    [[ $(candidate \"30 13 23 32\") = \"23\" ]]\n    [[ $(candidate \"3\
    \ 13 2 9\") = \"3\" ]]\n}\n\nrun_test"
  status: SyntaxError
  stderr: '/tmp/tmpqw34qf9r.sh: line 10: ((: 5 8 7 1: syntax error in expression (error
    token is "8 7 1")

    '
  stdout: ''
  timestamp: 1659999723
- exit_code: 1
  program: "#!/bin/bash\n# Given a non-empty list of integers, return the sum of all\
    \ of the odd elements that are in even positions.\n# Examples\n#\n# $1 is a space-separated\
    \ list\nsolution() {\n  local -n arr=$1\n  local sum=0\n  for ((i=0; i<${#arr[@]};\
    \ i++)); do\n    if ((i % 2 == 0 && arr[i] % 2 != 0)); then\n      sum=$((sum\
    \ + arr[i]))\n    fi\n  done\n  echo $sum\n}\n\ncandidate() {\n    solution \"\
    $@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"5 8 7 1\") = \"12\" ]]\n\
    \    [[ $(candidate \"3 3 3 3 3\") = \"9\" ]]\n    [[ $(candidate \"30 13 24 321\"\
    ) = \"0\" ]]\n    [[ $(candidate \"5 9\") = \"5\" ]]\n    [[ $(candidate \"2 4\
    \ 8\") = \"0\" ]]\n    [[ $(candidate \"30 13 23 32\") = \"23\" ]]\n    [[ $(candidate\
    \ \"3 13 2 9\") = \"3\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: '/tmp/tmpmgddp7td.sh: line 7: local: `5 8 7 1'': invalid variable name for
    name reference

    '
  stdout: ''
  timestamp: 1659999723
- exit_code: 1
  program: "#!/bin/bash\n# Given a non-empty list of integers, return the sum of all\
    \ of the odd elements that are in even positions.\n# Examples\n#\n# $1 is a space-separated\
    \ list\nsolution() {\n  local -a a=($1)\n  local sum=0\n  for ((i=0; i<${#a[@]};\
    \ i+=2)); do\n    ((a[i] % 2 == 0)) && ((sum+=a[i]))\n  done\n  echo $sum\n}\n\
    \ncandidate() {\n    solution \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate\
    \ \"5 8 7 1\") = \"12\" ]]\n    [[ $(candidate \"3 3 3 3 3\") = \"9\" ]]\n   \
    \ [[ $(candidate \"30 13 24 321\") = \"0\" ]]\n    [[ $(candidate \"5 9\") = \"\
    5\" ]]\n    [[ $(candidate \"2 4 8\") = \"0\" ]]\n    [[ $(candidate \"30 13 23\
    \ 32\") = \"23\" ]]\n    [[ $(candidate \"3 13 2 9\") = \"3\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1659999723
- exit_code: 0
  program: "#!/bin/bash\n# Given a non-empty list of integers, return the sum of all\
    \ of the odd elements that are in even positions.\n# Examples\n#\n# $1 is a space-separated\
    \ list\nsolution() {\n  local -a a=($1)\n  local sum=0\n  for ((i=0; i<${#a[@]};\
    \ i++)); do\n    if ((i % 2 == 0 && a[i] % 2 == 1)); then\n      ((sum += a[i]))\n\
    \    fi\n  done\n  echo $sum\n}\n\ncandidate() {\n    solution \"$@\"\n}\n\nset\
    \ -e\nrun_test() {\n    [[ $(candidate \"5 8 7 1\") = \"12\" ]]\n    [[ $(candidate\
    \ \"3 3 3 3 3\") = \"9\" ]]\n    [[ $(candidate \"30 13 24 321\") = \"0\" ]]\n\
    \    [[ $(candidate \"5 9\") = \"5\" ]]\n    [[ $(candidate \"2 4 8\") = \"0\"\
    \ ]]\n    [[ $(candidate \"30 13 23 32\") = \"23\" ]]\n    [[ $(candidate \"3\
    \ 13 2 9\") = \"3\" ]]\n}\n\nrun_test"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659999723
- exit_code: 1
  program: "#!/bin/bash\n# Given a non-empty list of integers, return the sum of all\
    \ of the odd elements that are in even positions.\n# Examples\n#\n# $1 is a space-separated\
    \ list\nsolution() {\n  local -a arr=(\"$@\")\n  local sum=0\n  for ((i=0; i<${#arr[@]};\
    \ i++)); do\n    if ((i % 2 == 0 && arr[i] % 2 != 0)); then\n      sum=$((sum\
    \ + arr[i]))\n    fi\n  done\n  echo $sum\n}\n\ncandidate() {\n    solution \"\
    $@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"5 8 7 1\") = \"12\" ]]\n\
    \    [[ $(candidate \"3 3 3 3 3\") = \"9\" ]]\n    [[ $(candidate \"30 13 24 321\"\
    ) = \"0\" ]]\n    [[ $(candidate \"5 9\") = \"5\" ]]\n    [[ $(candidate \"2 4\
    \ 8\") = \"0\" ]]\n    [[ $(candidate \"30 13 23 32\") = \"23\" ]]\n    [[ $(candidate\
    \ \"3 13 2 9\") = \"3\" ]]\n}\n\nrun_test"
  status: SyntaxError
  stderr: '/tmp/tmp7zrdxmpl.sh: line 10: ((: 5 8 7 1: syntax error in expression (error
    token is "8 7 1")

    '
  stdout: ''
  timestamp: 1659999723
- exit_code: 0
  program: "#!/bin/bash\n# Given a non-empty list of integers, return the sum of all\
    \ of the odd elements that are in even positions.\n# Examples\n#\n# $1 is a space-separated\
    \ list\nsolution() {\n  local -a arr\n  IFS=' ' read -r -a arr <<< \"$1\"\n  local\
    \ sum=0\n  for ((i=0; i<${#arr[@]}; i++)); do\n    if ((i % 2 == 0 && arr[i] %\
    \ 2 != 0)); then\n      sum=$((sum + arr[i]))\n    fi\n  done\n  echo $sum\n}\n\
    \ncandidate() {\n    solution \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate\
    \ \"5 8 7 1\") = \"12\" ]]\n    [[ $(candidate \"3 3 3 3 3\") = \"9\" ]]\n   \
    \ [[ $(candidate \"30 13 24 321\") = \"0\" ]]\n    [[ $(candidate \"5 9\") = \"\
    5\" ]]\n    [[ $(candidate \"2 4 8\") = \"0\" ]]\n    [[ $(candidate \"30 13 23\
    \ 32\") = \"23\" ]]\n    [[ $(candidate \"3 13 2 9\") = \"3\" ]]\n}\n\nrun_test"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659999723
- exit_code: 1
  program: "#!/bin/bash\n# Given a non-empty list of integers, return the sum of all\
    \ of the odd elements that are in even positions.\n# Examples\n#\n# $1 is a space-separated\
    \ list\nsolution() {\n  local -n arr=$1\n  local sum=0\n  for ((i=0; i<${#arr[@]};\
    \ i++)); do\n    if ((i % 2 == 0 && arr[i] % 2 != 0)); then\n      ((sum+=arr[i]))\n\
    \    fi\n  done\n  echo $sum\n}\n\ncandidate() {\n    solution \"$@\"\n}\n\nset\
    \ -e\nrun_test() {\n    [[ $(candidate \"5 8 7 1\") = \"12\" ]]\n    [[ $(candidate\
    \ \"3 3 3 3 3\") = \"9\" ]]\n    [[ $(candidate \"30 13 24 321\") = \"0\" ]]\n\
    \    [[ $(candidate \"5 9\") = \"5\" ]]\n    [[ $(candidate \"2 4 8\") = \"0\"\
    \ ]]\n    [[ $(candidate \"30 13 23 32\") = \"23\" ]]\n    [[ $(candidate \"3\
    \ 13 2 9\") = \"3\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: '/tmp/tmpmxxe9u9n.sh: line 7: local: `5 8 7 1'': invalid variable name for
    name reference

    '
  stdout: ''
  timestamp: 1659999723
- exit_code: 0
  program: "#!/bin/bash\n# Given a non-empty list of integers, return the sum of all\
    \ of the odd elements that are in even positions.\n# Examples\n#\n# $1 is a space-separated\
    \ list\nsolution() {\n  local -a arr=($1)\n  local sum=0\n  for ((i=0; i<${#arr[@]};\
    \ i++)); do\n    if ((i % 2 == 0 && arr[i] % 2 != 0)); then\n      ((sum += arr[i]))\n\
    \    fi\n  done\n  echo $sum\n}\n\ncandidate() {\n    solution \"$@\"\n}\n\nset\
    \ -e\nrun_test() {\n    [[ $(candidate \"5 8 7 1\") = \"12\" ]]\n    [[ $(candidate\
    \ \"3 3 3 3 3\") = \"9\" ]]\n    [[ $(candidate \"30 13 24 321\") = \"0\" ]]\n\
    \    [[ $(candidate \"5 9\") = \"5\" ]]\n    [[ $(candidate \"2 4 8\") = \"0\"\
    \ ]]\n    [[ $(candidate \"30 13 23 32\") = \"23\" ]]\n    [[ $(candidate \"3\
    \ 13 2 9\") = \"3\" ]]\n}\n\nrun_test"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659999723
- exit_code: 0
  program: "#!/bin/bash\n# Given a non-empty list of integers, return the sum of all\
    \ of the odd elements that are in even positions.\n# Examples\n#\n# $1 is a space-separated\
    \ list\nsolution() {\n  local -a list=($1)\n  local -i sum=0\n  for ((i=0; i<${#list[@]};\
    \ i+=2)); do\n    (( list[i] % 2 == 1 )) && (( sum += list[i] ))\n  done\n  echo\
    \ $sum\n}\n\ncandidate() {\n    solution \"$@\"\n}\n\nset -e\nrun_test() {\n \
    \   [[ $(candidate \"5 8 7 1\") = \"12\" ]]\n    [[ $(candidate \"3 3 3 3 3\"\
    ) = \"9\" ]]\n    [[ $(candidate \"30 13 24 321\") = \"0\" ]]\n    [[ $(candidate\
    \ \"5 9\") = \"5\" ]]\n    [[ $(candidate \"2 4 8\") = \"0\" ]]\n    [[ $(candidate\
    \ \"30 13 23 32\") = \"23\" ]]\n    [[ $(candidate \"3 13 2 9\") = \"3\" ]]\n\
    }\n\nrun_test"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659999723
- exit_code: 1
  program: "#!/bin/bash\n# Given a non-empty list of integers, return the sum of all\
    \ of the odd elements that are in even positions.\n# Examples\n#\n# $1 is a space-separated\
    \ list\nsolution() {\n  local -a arr=(\"$@\")\n  local sum=0\n  for ((i=0; i<${#arr[@]};\
    \ i++)); do\n    if ((i % 2 == 0 && arr[i] % 2 != 0)); then\n      sum=$((sum\
    \ + arr[i]))\n    fi\n  done\n  echo $sum\n}\n\ncandidate() {\n    solution \"\
    $@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"5 8 7 1\") = \"12\" ]]\n\
    \    [[ $(candidate \"3 3 3 3 3\") = \"9\" ]]\n    [[ $(candidate \"30 13 24 321\"\
    ) = \"0\" ]]\n    [[ $(candidate \"5 9\") = \"5\" ]]\n    [[ $(candidate \"2 4\
    \ 8\") = \"0\" ]]\n    [[ $(candidate \"30 13 23 32\") = \"23\" ]]\n    [[ $(candidate\
    \ \"3 13 2 9\") = \"3\" ]]\n}\n\nrun_test"
  status: SyntaxError
  stderr: '/tmp/tmp7zrdxmpl.sh: line 10: ((: 5 8 7 1: syntax error in expression (error
    token is "8 7 1")

    '
  stdout: ''
  timestamp: 1659999723
- exit_code: 1
  program: "#!/bin/bash\n# Given a non-empty list of integers, return the sum of all\
    \ of the odd elements that are in even positions.\n# Examples\n#\n# $1 is a space-separated\
    \ list\nsolution() {\n  local -a arr=(\"$@\")\n  local sum=0\n  for ((i=0; i<${#arr[@]};\
    \ i++)); do\n    if ((i%2==0 && arr[i]%2==1)); then\n      ((sum+=arr[i]))\n \
    \   fi\n  done\n  echo $sum\n}\n\ncandidate() {\n    solution \"$@\"\n}\n\nset\
    \ -e\nrun_test() {\n    [[ $(candidate \"5 8 7 1\") = \"12\" ]]\n    [[ $(candidate\
    \ \"3 3 3 3 3\") = \"9\" ]]\n    [[ $(candidate \"30 13 24 321\") = \"0\" ]]\n\
    \    [[ $(candidate \"5 9\") = \"5\" ]]\n    [[ $(candidate \"2 4 8\") = \"0\"\
    \ ]]\n    [[ $(candidate \"30 13 23 32\") = \"23\" ]]\n    [[ $(candidate \"3\
    \ 13 2 9\") = \"3\" ]]\n}\n\nrun_test"
  status: SyntaxError
  stderr: '/tmp/tmp1qa_yz97.sh: line 10: ((: 5 8 7 1: syntax error in expression (error
    token is "8 7 1")

    '
  stdout: ''
  timestamp: 1659999723
- exit_code: 0
  program: "#!/bin/bash\n# Given a non-empty list of integers, return the sum of all\
    \ of the odd elements that are in even positions.\n# Examples\n#\n# $1 is a space-separated\
    \ list\nsolution() {\n  local -a array=($1)\n  local sum=0\n  for ((i=0; i<${#array[@]};\
    \ i++)); do\n    if ((i % 2 == 0 && array[i] % 2 != 0)); then\n      ((sum +=\
    \ array[i]))\n    fi\n  done\n  echo $sum\n}\n\ncandidate() {\n    solution \"\
    $@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"5 8 7 1\") = \"12\" ]]\n\
    \    [[ $(candidate \"3 3 3 3 3\") = \"9\" ]]\n    [[ $(candidate \"30 13 24 321\"\
    ) = \"0\" ]]\n    [[ $(candidate \"5 9\") = \"5\" ]]\n    [[ $(candidate \"2 4\
    \ 8\") = \"0\" ]]\n    [[ $(candidate \"30 13 23 32\") = \"23\" ]]\n    [[ $(candidate\
    \ \"3 13 2 9\") = \"3\" ]]\n}\n\nrun_test"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659999723
- exit_code: 0
  program: "#!/bin/bash\n# Given a non-empty list of integers, return the sum of all\
    \ of the odd elements that are in even positions.\n# Examples\n#\n# $1 is a space-separated\
    \ list\nsolution() {\n  local -a a=($1)\n  local sum=0\n  for ((i=0; i<${#a[@]};\
    \ i++)); do\n    if ((i % 2 == 0 && a[i] % 2 == 1)); then\n      sum=$((sum +\
    \ a[i]))\n    fi\n  done\n  echo $sum\n}\n\ncandidate() {\n    solution \"$@\"\
    \n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"5 8 7 1\") = \"12\" ]]\n   \
    \ [[ $(candidate \"3 3 3 3 3\") = \"9\" ]]\n    [[ $(candidate \"30 13 24 321\"\
    ) = \"0\" ]]\n    [[ $(candidate \"5 9\") = \"5\" ]]\n    [[ $(candidate \"2 4\
    \ 8\") = \"0\" ]]\n    [[ $(candidate \"30 13 23 32\") = \"23\" ]]\n    [[ $(candidate\
    \ \"3 13 2 9\") = \"3\" ]]\n}\n\nrun_test"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659999723
- exit_code: 1
  program: "#!/bin/bash\n# Given a non-empty list of integers, return the sum of all\
    \ of the odd elements that are in even positions.\n# Examples\n#\n# $1 is a space-separated\
    \ list\nsolution() {\n  local -n arr=$1\n  local sum=0\n  for ((i=0; i<${#arr[@]};\
    \ i++)); do\n    if ((i % 2 == 0 && arr[i] % 2 != 0)); then\n      sum=$((sum\
    \ + arr[i]))\n    fi\n  done\n  echo $sum\n}\n\ncandidate() {\n    solution \"\
    $@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"5 8 7 1\") = \"12\" ]]\n\
    \    [[ $(candidate \"3 3 3 3 3\") = \"9\" ]]\n    [[ $(candidate \"30 13 24 321\"\
    ) = \"0\" ]]\n    [[ $(candidate \"5 9\") = \"5\" ]]\n    [[ $(candidate \"2 4\
    \ 8\") = \"0\" ]]\n    [[ $(candidate \"30 13 23 32\") = \"23\" ]]\n    [[ $(candidate\
    \ \"3 13 2 9\") = \"3\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: '/tmp/tmpmgddp7td.sh: line 7: local: `5 8 7 1'': invalid variable name for
    name reference

    '
  stdout: ''
  timestamp: 1659999723
- exit_code: 0
  program: "#!/bin/bash\n# Given a non-empty list of integers, return the sum of all\
    \ of the odd elements that are in even positions.\n# Examples\n#\n# $1 is a space-separated\
    \ list\nsolution() {\n  local -a arr=($1)\n  local sum=0\n  for ((i=0; i<${#arr[@]};\
    \ i++)); do\n    if ((i % 2 == 0 && arr[i] % 2 != 0)); then\n      sum=$((sum\
    \ + arr[i]))\n    fi\n  done\n  echo $sum\n}\n\ncandidate() {\n    solution \"\
    $@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"5 8 7 1\") = \"12\" ]]\n\
    \    [[ $(candidate \"3 3 3 3 3\") = \"9\" ]]\n    [[ $(candidate \"30 13 24 321\"\
    ) = \"0\" ]]\n    [[ $(candidate \"5 9\") = \"5\" ]]\n    [[ $(candidate \"2 4\
    \ 8\") = \"0\" ]]\n    [[ $(candidate \"30 13 23 32\") = \"23\" ]]\n    [[ $(candidate\
    \ \"3 13 2 9\") = \"3\" ]]\n}\n\nrun_test"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659999723
- exit_code: 0
  program: "#!/bin/bash\n# Given a non-empty list of integers, return the sum of all\
    \ of the odd elements that are in even positions.\n# Examples\n#\n# $1 is a space-separated\
    \ list\nsolution() {\n  local -a arr=($1)\n  local -i sum=0\n  for ((i=0; i<${#arr[@]};\
    \ i+=2)); do\n    if ((arr[i] % 2 == 1)); then\n      ((sum+=arr[i]))\n    fi\n\
    \  done\n  echo $sum\n}\n\ncandidate() {\n    solution \"$@\"\n}\n\nset -e\nrun_test()\
    \ {\n    [[ $(candidate \"5 8 7 1\") = \"12\" ]]\n    [[ $(candidate \"3 3 3 3\
    \ 3\") = \"9\" ]]\n    [[ $(candidate \"30 13 24 321\") = \"0\" ]]\n    [[ $(candidate\
    \ \"5 9\") = \"5\" ]]\n    [[ $(candidate \"2 4 8\") = \"0\" ]]\n    [[ $(candidate\
    \ \"30 13 23 32\") = \"23\" ]]\n    [[ $(candidate \"3 13 2 9\") = \"3\" ]]\n\
    }\n\nrun_test"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659999723
- exit_code: 0
  program: "#!/bin/bash\n# Given a non-empty list of integers, return the sum of all\
    \ of the odd elements that are in even positions.\n# Examples\n#\n# $1 is a space-separated\
    \ list\nsolution() {\n  local -a arr=($1)\n  local sum=0\n  for ((i=0; i<${#arr[@]};\
    \ i++)); do\n    if ((i % 2 == 0 && arr[i] % 2 != 0)); then\n      sum=$((sum\
    \ + arr[i]))\n    fi\n  done\n  echo $sum\n}\n\ncandidate() {\n    solution \"\
    $@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"5 8 7 1\") = \"12\" ]]\n\
    \    [[ $(candidate \"3 3 3 3 3\") = \"9\" ]]\n    [[ $(candidate \"30 13 24 321\"\
    ) = \"0\" ]]\n    [[ $(candidate \"5 9\") = \"5\" ]]\n    [[ $(candidate \"2 4\
    \ 8\") = \"0\" ]]\n    [[ $(candidate \"30 13 23 32\") = \"23\" ]]\n    [[ $(candidate\
    \ \"3 13 2 9\") = \"3\" ]]\n}\n\nrun_test"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659999723
- exit_code: 0
  program: "#!/bin/bash\n# Given a non-empty list of integers, return the sum of all\
    \ of the odd elements that are in even positions.\n# Examples\n#\n# $1 is a space-separated\
    \ list\nsolution() {\n  local -a list=($1)\n  local sum=0\n  for ((i=0; i<${#list[@]};\
    \ i++)); do\n    if (( i % 2 == 0 && list[i] % 2 != 0 )); then\n      (( sum +=\
    \ list[i] ))\n    fi\n  done\n  echo $sum\n}\n\ncandidate() {\n    solution \"\
    $@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"5 8 7 1\") = \"12\" ]]\n\
    \    [[ $(candidate \"3 3 3 3 3\") = \"9\" ]]\n    [[ $(candidate \"30 13 24 321\"\
    ) = \"0\" ]]\n    [[ $(candidate \"5 9\") = \"5\" ]]\n    [[ $(candidate \"2 4\
    \ 8\") = \"0\" ]]\n    [[ $(candidate \"30 13 23 32\") = \"23\" ]]\n    [[ $(candidate\
    \ \"3 13 2 9\") = \"3\" ]]\n}\n\nrun_test"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659999723
- exit_code: 1
  program: "#!/bin/bash\n# Given a non-empty list of integers, return the sum of all\
    \ of the odd elements that are in even positions.\n# Examples\n#\n# $1 is a space-separated\
    \ list\nsolution() {\n  local -n arr=$1\n  local sum=0\n  for ((i=0; i<${#arr[@]};\
    \ i++)); do\n    if ((i % 2 == 0 && arr[i] % 2 != 0)); then\n      ((sum += arr[i]))\n\
    \    fi\n  done\n  echo $sum\n}\n\ncandidate() {\n    solution \"$@\"\n}\n\nset\
    \ -e\nrun_test() {\n    [[ $(candidate \"5 8 7 1\") = \"12\" ]]\n    [[ $(candidate\
    \ \"3 3 3 3 3\") = \"9\" ]]\n    [[ $(candidate \"30 13 24 321\") = \"0\" ]]\n\
    \    [[ $(candidate \"5 9\") = \"5\" ]]\n    [[ $(candidate \"2 4 8\") = \"0\"\
    \ ]]\n    [[ $(candidate \"30 13 23 32\") = \"23\" ]]\n    [[ $(candidate \"3\
    \ 13 2 9\") = \"3\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: '/tmp/tmp4cem3cgs.sh: line 7: local: `5 8 7 1'': invalid variable name for
    name reference

    '
  stdout: ''
  timestamp: 1659999723
- exit_code: 0
  program: "#!/bin/bash\n# Given a non-empty list of integers, return the sum of all\
    \ of the odd elements that are in even positions.\n# Examples\n#\n# $1 is a space-separated\
    \ list\nsolution() {\n  local -a a=($1)\n  local -i i=0\n  local -i sum=0\n  for\
    \ ((i=0; i<${#a[@]}; i++)); do\n    ((i%2==0)) && ((a[i]%2==1)) && ((sum+=a[i]))\n\
    \  done\n  echo $sum\n}\n\ncandidate() {\n    solution \"$@\"\n}\n\nset -e\nrun_test()\
    \ {\n    [[ $(candidate \"5 8 7 1\") = \"12\" ]]\n    [[ $(candidate \"3 3 3 3\
    \ 3\") = \"9\" ]]\n    [[ $(candidate \"30 13 24 321\") = \"0\" ]]\n    [[ $(candidate\
    \ \"5 9\") = \"5\" ]]\n    [[ $(candidate \"2 4 8\") = \"0\" ]]\n    [[ $(candidate\
    \ \"30 13 23 32\") = \"23\" ]]\n    [[ $(candidate \"3 13 2 9\") = \"3\" ]]\n\
    }\n\nrun_test"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659999723
- exit_code: 1
  program: "#!/bin/bash\n# Given a non-empty list of integers, return the sum of all\
    \ of the odd elements that are in even positions.\n# Examples\n#\n# $1 is a space-separated\
    \ list\nsolution() {\n  local -n arr=$1\n  local sum=0\n  for ((i=0; i<${#arr[@]};\
    \ i+=2)); do\n    if [ $((arr[i] % 2)) -ne 0 ]; then\n      sum=$((sum + arr[i]))\n\
    \    fi\n  done\n  echo $sum\n}\n\ncandidate() {\n    solution \"$@\"\n}\n\nset\
    \ -e\nrun_test() {\n    [[ $(candidate \"5 8 7 1\") = \"12\" ]]\n    [[ $(candidate\
    \ \"3 3 3 3 3\") = \"9\" ]]\n    [[ $(candidate \"30 13 24 321\") = \"0\" ]]\n\
    \    [[ $(candidate \"5 9\") = \"5\" ]]\n    [[ $(candidate \"2 4 8\") = \"0\"\
    \ ]]\n    [[ $(candidate \"30 13 23 32\") = \"23\" ]]\n    [[ $(candidate \"3\
    \ 13 2 9\") = \"3\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: '/tmp/tmphq5leyev.sh: line 7: local: `5 8 7 1'': invalid variable name for
    name reference

    '
  stdout: ''
  timestamp: 1659999723
- exit_code: 1
  program: "#!/bin/bash\n# Given a non-empty list of integers, return the sum of all\
    \ of the odd elements that are in even positions.\n# Examples\n#\n# $1 is a space-separated\
    \ list\nsolution() {\n  local -a arr=(\"$@\")\n  local sum=0\n  for ((i=0; i<${#arr[@]};\
    \ i++)); do\n    if [[ $((i % 2)) -eq 0 && $((arr[i] % 2)) -eq 1 ]]; then\n  \
    \    sum=$((sum + arr[i]))\n    fi\n  done\n  echo $sum\n}\n\ncandidate() {\n\
    \    solution \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"5 8 7 1\"\
    ) = \"12\" ]]\n    [[ $(candidate \"3 3 3 3 3\") = \"9\" ]]\n    [[ $(candidate\
    \ \"30 13 24 321\") = \"0\" ]]\n    [[ $(candidate \"5 9\") = \"5\" ]]\n    [[\
    \ $(candidate \"2 4 8\") = \"0\" ]]\n    [[ $(candidate \"30 13 23 32\") = \"\
    23\" ]]\n    [[ $(candidate \"3 13 2 9\") = \"3\" ]]\n}\n\nrun_test"
  status: SyntaxError
  stderr: '/tmp/tmpj2m4nisk.sh: line 10: 5 8 7 1: syntax error in expression (error
    token is "8 7 1")

    '
  stdout: ''
  timestamp: 1659999723
- exit_code: 0
  program: "#!/bin/bash\n# Given a non-empty list of integers, return the sum of all\
    \ of the odd elements that are in even positions.\n# Examples\n#\n# $1 is a space-separated\
    \ list\nsolution() {\n  local -a a=($1)\n  local sum=0\n  for ((i=0; i<${#a[@]};\
    \ i++)); do\n    ((i % 2 == 0)) && ((a[i] % 2 == 1)) && ((sum += a[i]))\n  done\n\
    \  echo $sum\n}\n\ncandidate() {\n    solution \"$@\"\n}\n\nset -e\nrun_test()\
    \ {\n    [[ $(candidate \"5 8 7 1\") = \"12\" ]]\n    [[ $(candidate \"3 3 3 3\
    \ 3\") = \"9\" ]]\n    [[ $(candidate \"30 13 24 321\") = \"0\" ]]\n    [[ $(candidate\
    \ \"5 9\") = \"5\" ]]\n    [[ $(candidate \"2 4 8\") = \"0\" ]]\n    [[ $(candidate\
    \ \"30 13 23 32\") = \"23\" ]]\n    [[ $(candidate \"3 13 2 9\") = \"3\" ]]\n\
    }\n\nrun_test"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659999723
- exit_code: 1
  program: "#!/bin/bash\n# Given a non-empty list of integers, return the sum of all\
    \ of the odd elements that are in even positions.\n# Examples\n#\n# $1 is a space-separated\
    \ list\nsolution() {\n  local -n arr=$1\n  local sum=0\n  for ((i=0; i<${#arr[@]};\
    \ i+=2)); do\n    ((arr[i]%2==1)) && ((sum+=arr[i]))\n  done\n  echo $sum\n}\n\
    \ncandidate() {\n    solution \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate\
    \ \"5 8 7 1\") = \"12\" ]]\n    [[ $(candidate \"3 3 3 3 3\") = \"9\" ]]\n   \
    \ [[ $(candidate \"30 13 24 321\") = \"0\" ]]\n    [[ $(candidate \"5 9\") = \"\
    5\" ]]\n    [[ $(candidate \"2 4 8\") = \"0\" ]]\n    [[ $(candidate \"30 13 23\
    \ 32\") = \"23\" ]]\n    [[ $(candidate \"3 13 2 9\") = \"3\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: '/tmp/tmpklj4il7j.sh: line 7: local: `5 8 7 1'': invalid variable name for
    name reference

    '
  stdout: ''
  timestamp: 1659999723
- exit_code: 1
  program: "#!/bin/bash\n# Given a non-empty list of integers, return the sum of all\
    \ of the odd elements that are in even positions.\n# Examples\n#\n# $1 is a space-separated\
    \ list\nsolution() {\n  local -a arr=(\"$@\")\n  local sum=0\n  for ((i=0; i<${#arr[@]};\
    \ i+=2)); do\n    if ((arr[i] % 2 == 1)); then\n      sum=$((sum + arr[i]))\n\
    \    fi\n  done\n  echo $sum\n}\n\ncandidate() {\n    solution \"$@\"\n}\n\nset\
    \ -e\nrun_test() {\n    [[ $(candidate \"5 8 7 1\") = \"12\" ]]\n    [[ $(candidate\
    \ \"3 3 3 3 3\") = \"9\" ]]\n    [[ $(candidate \"30 13 24 321\") = \"0\" ]]\n\
    \    [[ $(candidate \"5 9\") = \"5\" ]]\n    [[ $(candidate \"2 4 8\") = \"0\"\
    \ ]]\n    [[ $(candidate \"30 13 23 32\") = \"23\" ]]\n    [[ $(candidate \"3\
    \ 13 2 9\") = \"3\" ]]\n}\n\nrun_test"
  status: SyntaxError
  stderr: '/tmp/tmptqtovnal.sh: line 10: ((: 5 8 7 1: syntax error in expression (error
    token is "8 7 1")

    '
  stdout: ''
  timestamp: 1659999723
- exit_code: 1
  program: "#!/bin/bash\n# Given a non-empty list of integers, return the sum of all\
    \ of the odd elements that are in even positions.\n# Examples\n#\n# $1 is a space-separated\
    \ list\nsolution() {\n  local -a arr=(\"$@\")\n  local sum=0\n  for ((i=0; i<${#arr[@]};\
    \ i++)); do\n    if ((i % 2 == 0 && arr[i] % 2 != 0)); then\n      sum=$((sum\
    \ + arr[i]))\n    fi\n  done\n  echo $sum\n}\n\ncandidate() {\n    solution \"\
    $@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"5 8 7 1\") = \"12\" ]]\n\
    \    [[ $(candidate \"3 3 3 3 3\") = \"9\" ]]\n    [[ $(candidate \"30 13 24 321\"\
    ) = \"0\" ]]\n    [[ $(candidate \"5 9\") = \"5\" ]]\n    [[ $(candidate \"2 4\
    \ 8\") = \"0\" ]]\n    [[ $(candidate \"30 13 23 32\") = \"23\" ]]\n    [[ $(candidate\
    \ \"3 13 2 9\") = \"3\" ]]\n}\n\nrun_test"
  status: SyntaxError
  stderr: '/tmp/tmp7zrdxmpl.sh: line 10: ((: 5 8 7 1: syntax error in expression (error
    token is "8 7 1")

    '
  stdout: ''
  timestamp: 1659999723
- exit_code: 0
  program: "#!/bin/bash\n# Given a non-empty list of integers, return the sum of all\
    \ of the odd elements that are in even positions.\n# Examples\n#\n# $1 is a space-separated\
    \ list\nsolution() {\n  local -a nums\n  IFS=' ' read -r -a nums <<< \"$1\"\n\
    \  local sum=0\n  for ((i=0; i<${#nums[@]}; i++)); do\n    if ((i % 2 == 0 &&\
    \ nums[i] % 2 != 0)); then\n      sum=$((sum + nums[i]))\n    fi\n  done\n  echo\
    \ $sum\n}\n\ncandidate() {\n    solution \"$@\"\n}\n\nset -e\nrun_test() {\n \
    \   [[ $(candidate \"5 8 7 1\") = \"12\" ]]\n    [[ $(candidate \"3 3 3 3 3\"\
    ) = \"9\" ]]\n    [[ $(candidate \"30 13 24 321\") = \"0\" ]]\n    [[ $(candidate\
    \ \"5 9\") = \"5\" ]]\n    [[ $(candidate \"2 4 8\") = \"0\" ]]\n    [[ $(candidate\
    \ \"30 13 23 32\") = \"23\" ]]\n    [[ $(candidate \"3 13 2 9\") = \"3\" ]]\n\
    }\n\nrun_test"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659999723
- exit_code: 1
  program: "#!/bin/bash\n# Given a non-empty list of integers, return the sum of all\
    \ of the odd elements that are in even positions.\n# Examples\n#\n# $1 is a space-separated\
    \ list\nsolution() {\n  local -a arr=(\"$@\")\n  local sum=0\n  for ((i=0; i<${#arr[@]};\
    \ i++)); do\n    if ((i % 2 == 0 && arr[i] % 2 != 0)); then\n      ((sum += arr[i]))\n\
    \    fi\n  done\n  echo $sum\n}\n\ncandidate() {\n    solution \"$@\"\n}\n\nset\
    \ -e\nrun_test() {\n    [[ $(candidate \"5 8 7 1\") = \"12\" ]]\n    [[ $(candidate\
    \ \"3 3 3 3 3\") = \"9\" ]]\n    [[ $(candidate \"30 13 24 321\") = \"0\" ]]\n\
    \    [[ $(candidate \"5 9\") = \"5\" ]]\n    [[ $(candidate \"2 4 8\") = \"0\"\
    \ ]]\n    [[ $(candidate \"30 13 23 32\") = \"23\" ]]\n    [[ $(candidate \"3\
    \ 13 2 9\") = \"3\" ]]\n}\n\nrun_test"
  status: SyntaxError
  stderr: '/tmp/tmpqw34qf9r.sh: line 10: ((: 5 8 7 1: syntax error in expression (error
    token is "8 7 1")

    '
  stdout: ''
  timestamp: 1659999723
- exit_code: 1
  program: "#!/bin/bash\n# Given a non-empty list of integers, return the sum of all\
    \ of the odd elements that are in even positions.\n# Examples\n#\n# $1 is a space-separated\
    \ list\nsolution() {\n  local -a arr=(\"$@\")\n  local sum=0\n  for ((i=0; i<${#arr[@]};\
    \ i++)); do\n    if ((i%2==0)) && ((arr[i]%2!=0)); then\n      ((sum+=arr[i]))\n\
    \    fi\n  done\n  echo $sum\n}\n\ncandidate() {\n    solution \"$@\"\n}\n\nset\
    \ -e\nrun_test() {\n    [[ $(candidate \"5 8 7 1\") = \"12\" ]]\n    [[ $(candidate\
    \ \"3 3 3 3 3\") = \"9\" ]]\n    [[ $(candidate \"30 13 24 321\") = \"0\" ]]\n\
    \    [[ $(candidate \"5 9\") = \"5\" ]]\n    [[ $(candidate \"2 4 8\") = \"0\"\
    \ ]]\n    [[ $(candidate \"30 13 23 32\") = \"23\" ]]\n    [[ $(candidate \"3\
    \ 13 2 9\") = \"3\" ]]\n}\n\nrun_test"
  status: SyntaxError
  stderr: '/tmp/tmpe33toob7.sh: line 10: ((: 5 8 7 1: syntax error in expression (error
    token is "8 7 1")

    '
  stdout: ''
  timestamp: 1659999723
- exit_code: 1
  program: "#!/bin/bash\n# Given a non-empty list of integers, return the sum of all\
    \ of the odd elements that are in even positions.\n# Examples\n#\n# $1 is a space-separated\
    \ list\nsolution() {\n  local -a arr=(\"$@\")\n  local sum=0\n  for ((i=0; i<${#arr[@]};\
    \ i++)); do\n    if ((i % 2 == 0 && arr[i] % 2 != 0)); then\n      sum=$((sum\
    \ + arr[i]))\n    fi\n  done\n  echo $sum\n}\n\ncandidate() {\n    solution \"\
    $@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"5 8 7 1\") = \"12\" ]]\n\
    \    [[ $(candidate \"3 3 3 3 3\") = \"9\" ]]\n    [[ $(candidate \"30 13 24 321\"\
    ) = \"0\" ]]\n    [[ $(candidate \"5 9\") = \"5\" ]]\n    [[ $(candidate \"2 4\
    \ 8\") = \"0\" ]]\n    [[ $(candidate \"30 13 23 32\") = \"23\" ]]\n    [[ $(candidate\
    \ \"3 13 2 9\") = \"3\" ]]\n}\n\nrun_test"
  status: SyntaxError
  stderr: '/tmp/tmp7zrdxmpl.sh: line 10: ((: 5 8 7 1: syntax error in expression (error
    token is "8 7 1")

    '
  stdout: ''
  timestamp: 1659999723
- exit_code: 1
  program: "#!/bin/bash\n# Given a non-empty list of integers, return the sum of all\
    \ of the odd elements that are in even positions.\n# Examples\n#\n# $1 is a space-separated\
    \ list\nsolution() {\n  local -a arr=(\"$@\")\n  local sum=0\n  for ((i=0; i<${#arr[@]};\
    \ i++)); do\n    if ((i % 2 == 0)) && ((arr[i] % 2 != 0)); then\n      sum=$((sum\
    \ + arr[i]))\n    fi\n  done\n  echo $sum\n}\n\ncandidate() {\n    solution \"\
    $@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"5 8 7 1\") = \"12\" ]]\n\
    \    [[ $(candidate \"3 3 3 3 3\") = \"9\" ]]\n    [[ $(candidate \"30 13 24 321\"\
    ) = \"0\" ]]\n    [[ $(candidate \"5 9\") = \"5\" ]]\n    [[ $(candidate \"2 4\
    \ 8\") = \"0\" ]]\n    [[ $(candidate \"30 13 23 32\") = \"23\" ]]\n    [[ $(candidate\
    \ \"3 13 2 9\") = \"3\" ]]\n}\n\nrun_test"
  status: SyntaxError
  stderr: '/tmp/tmpsuc4ky9h.sh: line 10: ((: 5 8 7 1: syntax error in expression (error
    token is "8 7 1")

    '
  stdout: ''
  timestamp: 1659999723
- exit_code: 1
  program: "#!/bin/bash\n# Given a non-empty list of integers, return the sum of all\
    \ of the odd elements that are in even positions.\n# Examples\n#\n# $1 is a space-separated\
    \ list\nsolution() {\n  local -a arr=(\"$@\")\n  local sum=0\n  for ((i=0; i<${#arr[@]};\
    \ i++)); do\n    if ((i%2==0 && arr[i]%2!=0)); then\n      ((sum+=arr[i]))\n \
    \   fi\n  done\n  echo $sum\n}\n\ncandidate() {\n    solution \"$@\"\n}\n\nset\
    \ -e\nrun_test() {\n    [[ $(candidate \"5 8 7 1\") = \"12\" ]]\n    [[ $(candidate\
    \ \"3 3 3 3 3\") = \"9\" ]]\n    [[ $(candidate \"30 13 24 321\") = \"0\" ]]\n\
    \    [[ $(candidate \"5 9\") = \"5\" ]]\n    [[ $(candidate \"2 4 8\") = \"0\"\
    \ ]]\n    [[ $(candidate \"30 13 23 32\") = \"23\" ]]\n    [[ $(candidate \"3\
    \ 13 2 9\") = \"3\" ]]\n}\n\nrun_test"
  status: SyntaxError
  stderr: '/tmp/tmpqi298fju.sh: line 10: ((: 5 8 7 1: syntax error in expression (error
    token is "8 7 1")

    '
  stdout: ''
  timestamp: 1659999723
- exit_code: 0
  program: "#!/bin/bash\n# Given a non-empty list of integers, return the sum of all\
    \ of the odd elements that are in even positions.\n# Examples\n#\n# $1 is a space-separated\
    \ list\nsolution() {\n  local -a list=($1)\n  local sum=0\n  for ((i=0; i<${#list[@]};\
    \ i++)); do\n    if ((i % 2 == 0)); then\n      if ((list[i] % 2 != 0)); then\n\
    \        sum=$((sum + list[i]))\n      fi\n    fi\n  done\n  echo $sum\n}\n\n\
    candidate() {\n    solution \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate\
    \ \"5 8 7 1\") = \"12\" ]]\n    [[ $(candidate \"3 3 3 3 3\") = \"9\" ]]\n   \
    \ [[ $(candidate \"30 13 24 321\") = \"0\" ]]\n    [[ $(candidate \"5 9\") = \"\
    5\" ]]\n    [[ $(candidate \"2 4 8\") = \"0\" ]]\n    [[ $(candidate \"30 13 23\
    \ 32\") = \"23\" ]]\n    [[ $(candidate \"3 13 2 9\") = \"3\" ]]\n}\n\nrun_test"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659999723
- exit_code: 0
  program: "#!/bin/bash\n# Given a non-empty list of integers, return the sum of all\
    \ of the odd elements that are in even positions.\n# Examples\n#\n# $1 is a space-separated\
    \ list\nsolution() {\n  local -a a=($1)\n  local sum=0\n  for ((i=0; i<${#a[@]};\
    \ i++)); do\n    if ((i % 2 == 0 && a[i] % 2 == 1)); then\n      ((sum += a[i]))\n\
    \    fi\n  done\n  echo $sum\n}\n\ncandidate() {\n    solution \"$@\"\n}\n\nset\
    \ -e\nrun_test() {\n    [[ $(candidate \"5 8 7 1\") = \"12\" ]]\n    [[ $(candidate\
    \ \"3 3 3 3 3\") = \"9\" ]]\n    [[ $(candidate \"30 13 24 321\") = \"0\" ]]\n\
    \    [[ $(candidate \"5 9\") = \"5\" ]]\n    [[ $(candidate \"2 4 8\") = \"0\"\
    \ ]]\n    [[ $(candidate \"30 13 23 32\") = \"23\" ]]\n    [[ $(candidate \"3\
    \ 13 2 9\") = \"3\" ]]\n}\n\nrun_test"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659999723
- exit_code: 1
  program: "#!/bin/bash\n# Given a non-empty list of integers, return the sum of all\
    \ of the odd elements that are in even positions.\n# Examples\n#\n# $1 is a space-separated\
    \ list\nsolution() {\n  local -a arr=(\"$@\")\n  local sum=0\n  for ((i=0; i<${#arr[@]};\
    \ i++)); do\n    if ((i % 2 == 0 && arr[i] % 2 != 0)); then\n      sum=$((sum\
    \ + arr[i]))\n    fi\n  done\n  echo $sum\n}\n\ncandidate() {\n    solution \"\
    $@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"5 8 7 1\") = \"12\" ]]\n\
    \    [[ $(candidate \"3 3 3 3 3\") = \"9\" ]]\n    [[ $(candidate \"30 13 24 321\"\
    ) = \"0\" ]]\n    [[ $(candidate \"5 9\") = \"5\" ]]\n    [[ $(candidate \"2 4\
    \ 8\") = \"0\" ]]\n    [[ $(candidate \"30 13 23 32\") = \"23\" ]]\n    [[ $(candidate\
    \ \"3 13 2 9\") = \"3\" ]]\n}\n\nrun_test"
  status: SyntaxError
  stderr: '/tmp/tmp7zrdxmpl.sh: line 10: ((: 5 8 7 1: syntax error in expression (error
    token is "8 7 1")

    '
  stdout: ''
  timestamp: 1659999723
- exit_code: 0
  program: "#!/bin/bash\n# Given a non-empty list of integers, return the sum of all\
    \ of the odd elements that are in even positions.\n# Examples\n#\n# $1 is a space-separated\
    \ list\nsolution() {\n  local -a a=($1)\n  local sum=0\n  for ((i=0; i<${#a[@]};\
    \ i++)); do\n    ((i%2==0)) && ((a[i]%2==1)) && ((sum+=a[i]))\n  done\n  echo\
    \ $sum\n}\n\ncandidate() {\n    solution \"$@\"\n}\n\nset -e\nrun_test() {\n \
    \   [[ $(candidate \"5 8 7 1\") = \"12\" ]]\n    [[ $(candidate \"3 3 3 3 3\"\
    ) = \"9\" ]]\n    [[ $(candidate \"30 13 24 321\") = \"0\" ]]\n    [[ $(candidate\
    \ \"5 9\") = \"5\" ]]\n    [[ $(candidate \"2 4 8\") = \"0\" ]]\n    [[ $(candidate\
    \ \"30 13 23 32\") = \"23\" ]]\n    [[ $(candidate \"3 13 2 9\") = \"3\" ]]\n\
    }\n\nrun_test"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659999723
- exit_code: 0
  program: "#!/bin/bash\n# Given a non-empty list of integers, return the sum of all\
    \ of the odd elements that are in even positions.\n# Examples\n#\n# $1 is a space-separated\
    \ list\nsolution() {\n  local -a array\n  local -i sum=0\n  local -i i=0\n  IFS='\
    \ ' read -r -a array <<< \"$1\"\n  for ((i=0; i<${#array[@]}; i++)); do\n    if\
    \ ((i%2==0 && array[i]%2!=0)); then\n      ((sum+=array[i]))\n    fi\n  done\n\
    \  echo $sum\n}\n\ncandidate() {\n    solution \"$@\"\n}\n\nset -e\nrun_test()\
    \ {\n    [[ $(candidate \"5 8 7 1\") = \"12\" ]]\n    [[ $(candidate \"3 3 3 3\
    \ 3\") = \"9\" ]]\n    [[ $(candidate \"30 13 24 321\") = \"0\" ]]\n    [[ $(candidate\
    \ \"5 9\") = \"5\" ]]\n    [[ $(candidate \"2 4 8\") = \"0\" ]]\n    [[ $(candidate\
    \ \"30 13 23 32\") = \"23\" ]]\n    [[ $(candidate \"3 13 2 9\") = \"3\" ]]\n\
    }\n\nrun_test"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659999723
- exit_code: 1
  program: "#!/bin/bash\n# Given a non-empty list of integers, return the sum of all\
    \ of the odd elements that are in even positions.\n# Examples\n#\n# $1 is a space-separated\
    \ list\nsolution() {\n  local -n arr=$1\n  local sum=0\n  for ((i=0; i<${#arr[@]};\
    \ i++)); do\n    if ((i % 2 == 0 && arr[i] % 2 != 0)); then\n      sum=$((sum\
    \ + arr[i]))\n    fi\n  done\n  echo $sum\n}\n\ncandidate() {\n    solution \"\
    $@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"5 8 7 1\") = \"12\" ]]\n\
    \    [[ $(candidate \"3 3 3 3 3\") = \"9\" ]]\n    [[ $(candidate \"30 13 24 321\"\
    ) = \"0\" ]]\n    [[ $(candidate \"5 9\") = \"5\" ]]\n    [[ $(candidate \"2 4\
    \ 8\") = \"0\" ]]\n    [[ $(candidate \"30 13 23 32\") = \"23\" ]]\n    [[ $(candidate\
    \ \"3 13 2 9\") = \"3\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: '/tmp/tmpmgddp7td.sh: line 7: local: `5 8 7 1'': invalid variable name for
    name reference

    '
  stdout: ''
  timestamp: 1659999723
- exit_code: 0
  program: "#!/bin/bash\n# Given a non-empty list of integers, return the sum of all\
    \ of the odd elements that are in even positions.\n# Examples\n#\n# $1 is a space-separated\
    \ list\nsolution() {\n  local -a a=($1)\n  local sum=0\n  for ((i=0; i<${#a[@]};\
    \ i++)); do\n    ((i%2==0)) && ((a[i]%2==1)) && ((sum+=a[i]))\n  done\n  echo\
    \ $sum\n}\n\ncandidate() {\n    solution \"$@\"\n}\n\nset -e\nrun_test() {\n \
    \   [[ $(candidate \"5 8 7 1\") = \"12\" ]]\n    [[ $(candidate \"3 3 3 3 3\"\
    ) = \"9\" ]]\n    [[ $(candidate \"30 13 24 321\") = \"0\" ]]\n    [[ $(candidate\
    \ \"5 9\") = \"5\" ]]\n    [[ $(candidate \"2 4 8\") = \"0\" ]]\n    [[ $(candidate\
    \ \"30 13 23 32\") = \"23\" ]]\n    [[ $(candidate \"3 13 2 9\") = \"3\" ]]\n\
    }\n\nrun_test"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659999723
- exit_code: 0
  program: "#!/bin/bash\n# Given a non-empty list of integers, return the sum of all\
    \ of the odd elements that are in even positions.\n# Examples\n#\n# $1 is a space-separated\
    \ list\nsolution() {\n  local -a nums=($1)\n  local sum=0\n  for ((i=0; i<${#nums[@]};\
    \ i++)); do\n    if ((i%2==0)) && ((nums[i]%2==1)); then\n      ((sum+=nums[i]))\n\
    \    fi\n  done\n  echo $sum\n}\n\ncandidate() {\n    solution \"$@\"\n}\n\nset\
    \ -e\nrun_test() {\n    [[ $(candidate \"5 8 7 1\") = \"12\" ]]\n    [[ $(candidate\
    \ \"3 3 3 3 3\") = \"9\" ]]\n    [[ $(candidate \"30 13 24 321\") = \"0\" ]]\n\
    \    [[ $(candidate \"5 9\") = \"5\" ]]\n    [[ $(candidate \"2 4 8\") = \"0\"\
    \ ]]\n    [[ $(candidate \"30 13 23 32\") = \"23\" ]]\n    [[ $(candidate \"3\
    \ 13 2 9\") = \"3\" ]]\n}\n\nrun_test"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659999723
- exit_code: 0
  program: "#!/bin/bash\n# Given a non-empty list of integers, return the sum of all\
    \ of the odd elements that are in even positions.\n# Examples\n#\n# $1 is a space-separated\
    \ list\nsolution() {\n  local list=$1\n  local sum=0\n  local i=0\n  for n in\
    \ $list; do\n    if [ $(($i % 2)) -eq 0 ]; then\n      if [ $(($n % 2)) -ne 0\
    \ ]; then\n        sum=$(($sum + $n))\n      fi\n    fi\n    i=$(($i + 1))\n \
    \ done\n  echo $sum\n}\n\ncandidate() {\n    solution \"$@\"\n}\n\nset -e\nrun_test()\
    \ {\n    [[ $(candidate \"5 8 7 1\") = \"12\" ]]\n    [[ $(candidate \"3 3 3 3\
    \ 3\") = \"9\" ]]\n    [[ $(candidate \"30 13 24 321\") = \"0\" ]]\n    [[ $(candidate\
    \ \"5 9\") = \"5\" ]]\n    [[ $(candidate \"2 4 8\") = \"0\" ]]\n    [[ $(candidate\
    \ \"30 13 23 32\") = \"23\" ]]\n    [[ $(candidate \"3 13 2 9\") = \"3\" ]]\n\
    }\n\nrun_test"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659999723
- exit_code: 0
  program: "#!/bin/bash\n# Given a non-empty list of integers, return the sum of all\
    \ of the odd elements that are in even positions.\n# Examples\n#\n# $1 is a space-separated\
    \ list\nsolution() {\n  local -a a=($1)\n  local sum=0\n  for ((i=0; i<${#a[@]};\
    \ i++)); do\n    if ((i % 2 == 0 && a[i] % 2 == 1)); then\n      ((sum += a[i]))\n\
    \    fi\n  done\n  echo $sum\n}\n\ncandidate() {\n    solution \"$@\"\n}\n\nset\
    \ -e\nrun_test() {\n    [[ $(candidate \"5 8 7 1\") = \"12\" ]]\n    [[ $(candidate\
    \ \"3 3 3 3 3\") = \"9\" ]]\n    [[ $(candidate \"30 13 24 321\") = \"0\" ]]\n\
    \    [[ $(candidate \"5 9\") = \"5\" ]]\n    [[ $(candidate \"2 4 8\") = \"0\"\
    \ ]]\n    [[ $(candidate \"30 13 23 32\") = \"23\" ]]\n    [[ $(candidate \"3\
    \ 13 2 9\") = \"3\" ]]\n}\n\nrun_test"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659999723
- exit_code: 1
  program: "#!/bin/bash\n# Given a non-empty list of integers, return the sum of all\
    \ of the odd elements that are in even positions.\n# Examples\n#\n# $1 is a space-separated\
    \ list\nsolution() {\n  local -a arr=(\"$@\")\n  local sum=0\n  for ((i=0; i<${#arr[@]};\
    \ i++)); do\n    if ((i%2==0 && arr[i]%2==1)); then\n      sum=$((sum+arr[i]))\n\
    \    fi\n  done\n  echo $sum\n}\n\ncandidate() {\n    solution \"$@\"\n}\n\nset\
    \ -e\nrun_test() {\n    [[ $(candidate \"5 8 7 1\") = \"12\" ]]\n    [[ $(candidate\
    \ \"3 3 3 3 3\") = \"9\" ]]\n    [[ $(candidate \"30 13 24 321\") = \"0\" ]]\n\
    \    [[ $(candidate \"5 9\") = \"5\" ]]\n    [[ $(candidate \"2 4 8\") = \"0\"\
    \ ]]\n    [[ $(candidate \"30 13 23 32\") = \"23\" ]]\n    [[ $(candidate \"3\
    \ 13 2 9\") = \"3\" ]]\n}\n\nrun_test"
  status: SyntaxError
  stderr: '/tmp/tmpl9a7yokf.sh: line 10: ((: 5 8 7 1: syntax error in expression (error
    token is "8 7 1")

    '
  stdout: ''
  timestamp: 1659999723
- exit_code: 0
  program: "#!/bin/bash\n# Given a non-empty list of integers, return the sum of all\
    \ of the odd elements that are in even positions.\n# Examples\n#\n# $1 is a space-separated\
    \ list\nsolution() {\n  local -a array=($1)\n  local sum=0\n  for ((i=0; i<${#array[@]};\
    \ i++)); do\n    if ((i % 2 == 0 && array[i] % 2 != 0)); then\n      sum=$((sum\
    \ + array[i]))\n    fi\n  done\n  echo $sum\n}\n\ncandidate() {\n    solution\
    \ \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"5 8 7 1\") = \"12\"\
    \ ]]\n    [[ $(candidate \"3 3 3 3 3\") = \"9\" ]]\n    [[ $(candidate \"30 13\
    \ 24 321\") = \"0\" ]]\n    [[ $(candidate \"5 9\") = \"5\" ]]\n    [[ $(candidate\
    \ \"2 4 8\") = \"0\" ]]\n    [[ $(candidate \"30 13 23 32\") = \"23\" ]]\n   \
    \ [[ $(candidate \"3 13 2 9\") = \"3\" ]]\n}\n\nrun_test"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659999723
- exit_code: 0
  program: "#!/bin/bash\n# Given a non-empty list of integers, return the sum of all\
    \ of the odd elements that are in even positions.\n# Examples\n#\n# $1 is a space-separated\
    \ list\nsolution() {\n  local -a array=($1)\n  local sum=0\n  for ((i=0; i<${#array[@]};\
    \ i++)); do\n    if ((i % 2 == 0 && array[i] % 2 != 0)); then\n      sum=$((sum\
    \ + array[i]))\n    fi\n  done\n  echo $sum\n}\n\ncandidate() {\n    solution\
    \ \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"5 8 7 1\") = \"12\"\
    \ ]]\n    [[ $(candidate \"3 3 3 3 3\") = \"9\" ]]\n    [[ $(candidate \"30 13\
    \ 24 321\") = \"0\" ]]\n    [[ $(candidate \"5 9\") = \"5\" ]]\n    [[ $(candidate\
    \ \"2 4 8\") = \"0\" ]]\n    [[ $(candidate \"30 13 23 32\") = \"23\" ]]\n   \
    \ [[ $(candidate \"3 13 2 9\") = \"3\" ]]\n}\n\nrun_test"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659999723
- exit_code: 1
  program: "#!/bin/bash\n# Given a non-empty list of integers, return the sum of all\
    \ of the odd elements that are in even positions.\n# Examples\n#\n# $1 is a space-separated\
    \ list\nsolution() {\n  local -n arr=$1\n  local sum=0\n  for ((i=0; i<${#arr[@]};\
    \ i++)); do\n    if ((i % 2 == 0 && arr[i] % 2 != 0)); then\n      ((sum += arr[i]))\n\
    \    fi\n  done\n  echo $sum\n}\n\ncandidate() {\n    solution \"$@\"\n}\n\nset\
    \ -e\nrun_test() {\n    [[ $(candidate \"5 8 7 1\") = \"12\" ]]\n    [[ $(candidate\
    \ \"3 3 3 3 3\") = \"9\" ]]\n    [[ $(candidate \"30 13 24 321\") = \"0\" ]]\n\
    \    [[ $(candidate \"5 9\") = \"5\" ]]\n    [[ $(candidate \"2 4 8\") = \"0\"\
    \ ]]\n    [[ $(candidate \"30 13 23 32\") = \"23\" ]]\n    [[ $(candidate \"3\
    \ 13 2 9\") = \"3\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: '/tmp/tmp4cem3cgs.sh: line 7: local: `5 8 7 1'': invalid variable name for
    name reference

    '
  stdout: ''
  timestamp: 1659999723
- exit_code: 0
  program: "#!/bin/bash\n# Given a non-empty list of integers, return the sum of all\
    \ of the odd elements that are in even positions.\n# Examples\n#\n# $1 is a space-separated\
    \ list\nsolution() {\n  local -a list=($1)\n  local sum=0\n  for ((i=0; i<${#list[@]};\
    \ i++)); do\n    if ((i % 2 == 0 && list[i] % 2 != 0)); then\n      sum=$((sum\
    \ + list[i]))\n    fi\n  done\n  echo $sum\n}\n\ncandidate() {\n    solution \"\
    $@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"5 8 7 1\") = \"12\" ]]\n\
    \    [[ $(candidate \"3 3 3 3 3\") = \"9\" ]]\n    [[ $(candidate \"30 13 24 321\"\
    ) = \"0\" ]]\n    [[ $(candidate \"5 9\") = \"5\" ]]\n    [[ $(candidate \"2 4\
    \ 8\") = \"0\" ]]\n    [[ $(candidate \"30 13 23 32\") = \"23\" ]]\n    [[ $(candidate\
    \ \"3 13 2 9\") = \"3\" ]]\n}\n\nrun_test"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659999723
- exit_code: 0
  program: "#!/bin/bash\n# Given a non-empty list of integers, return the sum of all\
    \ of the odd elements that are in even positions.\n# Examples\n#\n# $1 is a space-separated\
    \ list\nsolution() {\n  local -a arr=($1)\n  local sum=0\n  for ((i=0; i<${#arr[@]};\
    \ i++)); do\n    if ((i%2==0 && arr[i]%2==1)); then\n      sum=$((sum+arr[i]))\n\
    \    fi\n  done\n  echo $sum\n}\n\ncandidate() {\n    solution \"$@\"\n}\n\nset\
    \ -e\nrun_test() {\n    [[ $(candidate \"5 8 7 1\") = \"12\" ]]\n    [[ $(candidate\
    \ \"3 3 3 3 3\") = \"9\" ]]\n    [[ $(candidate \"30 13 24 321\") = \"0\" ]]\n\
    \    [[ $(candidate \"5 9\") = \"5\" ]]\n    [[ $(candidate \"2 4 8\") = \"0\"\
    \ ]]\n    [[ $(candidate \"30 13 23 32\") = \"23\" ]]\n    [[ $(candidate \"3\
    \ 13 2 9\") = \"3\" ]]\n}\n\nrun_test"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659999723
- exit_code: 1
  program: "#!/bin/bash\n# Given a non-empty list of integers, return the sum of all\
    \ of the odd elements that are in even positions.\n# Examples\n#\n# $1 is a space-separated\
    \ list\nsolution() {\n  local -a arr=(\"$@\")\n  local sum=0\n  for ((i=0; i<${#arr[@]};\
    \ i++)); do\n    if ((i % 2 == 0 && arr[i] % 2 != 0)); then\n      sum=$((sum\
    \ + arr[i]))\n    fi\n  done\n  echo $sum\n}\n\ncandidate() {\n    solution \"\
    $@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"5 8 7 1\") = \"12\" ]]\n\
    \    [[ $(candidate \"3 3 3 3 3\") = \"9\" ]]\n    [[ $(candidate \"30 13 24 321\"\
    ) = \"0\" ]]\n    [[ $(candidate \"5 9\") = \"5\" ]]\n    [[ $(candidate \"2 4\
    \ 8\") = \"0\" ]]\n    [[ $(candidate \"30 13 23 32\") = \"23\" ]]\n    [[ $(candidate\
    \ \"3 13 2 9\") = \"3\" ]]\n}\n\nrun_test"
  status: SyntaxError
  stderr: '/tmp/tmp7zrdxmpl.sh: line 10: ((: 5 8 7 1: syntax error in expression (error
    token is "8 7 1")

    '
  stdout: ''
  timestamp: 1659999723
- exit_code: 1
  program: "#!/bin/bash\n# Given a non-empty list of integers, return the sum of all\
    \ of the odd elements that are in even positions.\n# Examples\n#\n# $1 is a space-separated\
    \ list\nsolution() {\n  local -a arr=(\"$@\")\n  local sum=0\n  for ((i=0; i<${#arr[@]};\
    \ i+=2)); do\n    if ((arr[i] % 2 != 0)); then\n      ((sum+=arr[i]))\n    fi\n\
    \  done\n  echo $sum\n}\n\ncandidate() {\n    solution \"$@\"\n}\n\nset -e\nrun_test()\
    \ {\n    [[ $(candidate \"5 8 7 1\") = \"12\" ]]\n    [[ $(candidate \"3 3 3 3\
    \ 3\") = \"9\" ]]\n    [[ $(candidate \"30 13 24 321\") = \"0\" ]]\n    [[ $(candidate\
    \ \"5 9\") = \"5\" ]]\n    [[ $(candidate \"2 4 8\") = \"0\" ]]\n    [[ $(candidate\
    \ \"30 13 23 32\") = \"23\" ]]\n    [[ $(candidate \"3 13 2 9\") = \"3\" ]]\n\
    }\n\nrun_test"
  status: SyntaxError
  stderr: '/tmp/tmpntjssz_0.sh: line 10: ((: 5 8 7 1: syntax error in expression (error
    token is "8 7 1")

    '
  stdout: ''
  timestamp: 1659999723
- exit_code: 1
  program: "#!/bin/bash\n# Given a non-empty list of integers, return the sum of all\
    \ of the odd elements that are in even positions.\n# Examples\n#\n# $1 is a space-separated\
    \ list\nsolution() {\n  local -a arr=(\"$@\")\n  local sum=0\n  for ((i=0; i<${#arr[@]};\
    \ i++)); do\n    if ((i % 2 == 0 && arr[i] % 2 != 0)); then\n      ((sum += arr[i]))\n\
    \    fi\n  done\n  echo $sum\n}\n\ncandidate() {\n    solution \"$@\"\n}\n\nset\
    \ -e\nrun_test() {\n    [[ $(candidate \"5 8 7 1\") = \"12\" ]]\n    [[ $(candidate\
    \ \"3 3 3 3 3\") = \"9\" ]]\n    [[ $(candidate \"30 13 24 321\") = \"0\" ]]\n\
    \    [[ $(candidate \"5 9\") = \"5\" ]]\n    [[ $(candidate \"2 4 8\") = \"0\"\
    \ ]]\n    [[ $(candidate \"30 13 23 32\") = \"23\" ]]\n    [[ $(candidate \"3\
    \ 13 2 9\") = \"3\" ]]\n}\n\nrun_test"
  status: SyntaxError
  stderr: '/tmp/tmpqw34qf9r.sh: line 10: ((: 5 8 7 1: syntax error in expression (error
    token is "8 7 1")

    '
  stdout: ''
  timestamp: 1659999723
- exit_code: 1
  program: "#!/bin/bash\n# Given a non-empty list of integers, return the sum of all\
    \ of the odd elements that are in even positions.\n# Examples\n#\n# $1 is a space-separated\
    \ list\nsolution() {\n  local -a arr=(\"$@\")\n  local sum=0\n  for ((i=0; i<${#arr[@]};\
    \ i++)); do\n    if ((i % 2 == 0 && arr[i] % 2 != 0)); then\n      sum=$((sum\
    \ + arr[i]))\n    fi\n  done\n  echo $sum\n}\n\ncandidate() {\n    solution \"\
    $@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"5 8 7 1\") = \"12\" ]]\n\
    \    [[ $(candidate \"3 3 3 3 3\") = \"9\" ]]\n    [[ $(candidate \"30 13 24 321\"\
    ) = \"0\" ]]\n    [[ $(candidate \"5 9\") = \"5\" ]]\n    [[ $(candidate \"2 4\
    \ 8\") = \"0\" ]]\n    [[ $(candidate \"30 13 23 32\") = \"23\" ]]\n    [[ $(candidate\
    \ \"3 13 2 9\") = \"3\" ]]\n}\n\nrun_test"
  status: SyntaxError
  stderr: '/tmp/tmp7zrdxmpl.sh: line 10: ((: 5 8 7 1: syntax error in expression (error
    token is "8 7 1")

    '
  stdout: ''
  timestamp: 1659999723
- exit_code: 0
  program: "#!/bin/bash\n# Given a non-empty list of integers, return the sum of all\
    \ of the odd elements that are in even positions.\n# Examples\n#\n# $1 is a space-separated\
    \ list\nsolution() {\n  local -a a=($1)\n  local sum=0\n  for ((i=0; i<${#a[@]};\
    \ i+=2)); do\n    ((a[i]%2)) && ((sum+=a[i]))\n  done\n  echo $sum\n}\n\ncandidate()\
    \ {\n    solution \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"5 8\
    \ 7 1\") = \"12\" ]]\n    [[ $(candidate \"3 3 3 3 3\") = \"9\" ]]\n    [[ $(candidate\
    \ \"30 13 24 321\") = \"0\" ]]\n    [[ $(candidate \"5 9\") = \"5\" ]]\n    [[\
    \ $(candidate \"2 4 8\") = \"0\" ]]\n    [[ $(candidate \"30 13 23 32\") = \"\
    23\" ]]\n    [[ $(candidate \"3 13 2 9\") = \"3\" ]]\n}\n\nrun_test"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659999723
- exit_code: 1
  program: "#!/bin/bash\n# Given a non-empty list of integers, return the sum of all\
    \ of the odd elements that are in even positions.\n# Examples\n#\n# $1 is a space-separated\
    \ list\nsolution() {\n  local -a arr=(\"$@\")\n  local sum=0\n  for ((i=0; i<${#arr[@]};\
    \ i++)); do\n    if ((i % 2 == 0 && arr[i] % 2 != 0)); then\n      sum=$((sum\
    \ + arr[i]))\n    fi\n  done\n  echo $sum\n}\n\ncandidate() {\n    solution \"\
    $@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"5 8 7 1\") = \"12\" ]]\n\
    \    [[ $(candidate \"3 3 3 3 3\") = \"9\" ]]\n    [[ $(candidate \"30 13 24 321\"\
    ) = \"0\" ]]\n    [[ $(candidate \"5 9\") = \"5\" ]]\n    [[ $(candidate \"2 4\
    \ 8\") = \"0\" ]]\n    [[ $(candidate \"30 13 23 32\") = \"23\" ]]\n    [[ $(candidate\
    \ \"3 13 2 9\") = \"3\" ]]\n}\n\nrun_test"
  status: SyntaxError
  stderr: '/tmp/tmp7zrdxmpl.sh: line 10: ((: 5 8 7 1: syntax error in expression (error
    token is "8 7 1")

    '
  stdout: ''
  timestamp: 1659999723
- exit_code: 0
  program: "#!/bin/bash\n# Given a non-empty list of integers, return the sum of all\
    \ of the odd elements that are in even positions.\n# Examples\n#\n# $1 is a space-separated\
    \ list\nsolution() {\n  local -a arr=($1)\n  local sum=0\n  for ((i=0; i<${#arr[@]};\
    \ i++)); do\n    if ((i % 2 == 0 && arr[i] % 2 != 0)); then\n      ((sum += arr[i]))\n\
    \    fi\n  done\n  echo $sum\n}\n\ncandidate() {\n    solution \"$@\"\n}\n\nset\
    \ -e\nrun_test() {\n    [[ $(candidate \"5 8 7 1\") = \"12\" ]]\n    [[ $(candidate\
    \ \"3 3 3 3 3\") = \"9\" ]]\n    [[ $(candidate \"30 13 24 321\") = \"0\" ]]\n\
    \    [[ $(candidate \"5 9\") = \"5\" ]]\n    [[ $(candidate \"2 4 8\") = \"0\"\
    \ ]]\n    [[ $(candidate \"30 13 23 32\") = \"23\" ]]\n    [[ $(candidate \"3\
    \ 13 2 9\") = \"3\" ]]\n}\n\nrun_test"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659999723
- exit_code: 0
  program: "#!/bin/bash\n# Given a non-empty list of integers, return the sum of all\
    \ of the odd elements that are in even positions.\n# Examples\n#\n# $1 is a space-separated\
    \ list\nsolution() {\n  local -a array\n  local -i sum=0\n  local -i i=0\n  IFS='\
    \ ' read -r -a array <<< \"$1\"\n  for ((i=0; i<${#array[@]}; i++)); do\n    if\
    \ [[ $((i%2)) -eq 0 && $((array[i]%2)) -ne 0 ]]; then\n      sum=$((sum+array[i]))\n\
    \    fi\n  done\n  echo $sum\n}\n\ncandidate() {\n    solution \"$@\"\n}\n\nset\
    \ -e\nrun_test() {\n    [[ $(candidate \"5 8 7 1\") = \"12\" ]]\n    [[ $(candidate\
    \ \"3 3 3 3 3\") = \"9\" ]]\n    [[ $(candidate \"30 13 24 321\") = \"0\" ]]\n\
    \    [[ $(candidate \"5 9\") = \"5\" ]]\n    [[ $(candidate \"2 4 8\") = \"0\"\
    \ ]]\n    [[ $(candidate \"30 13 23 32\") = \"23\" ]]\n    [[ $(candidate \"3\
    \ 13 2 9\") = \"3\" ]]\n}\n\nrun_test"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659999723
- exit_code: 0
  program: "#!/bin/bash\n# Given a non-empty list of integers, return the sum of all\
    \ of the odd elements that are in even positions.\n# Examples\n#\n# $1 is a space-separated\
    \ list\nsolution() {\n  local -a arr=($1)\n  local sum=0\n  for ((i=0; i<${#arr[@]};\
    \ i+=2)); do\n    if [[ ${arr[i]}%2 -ne 0 ]]; then\n      ((sum+=arr[i]))\n  \
    \  fi\n  done\n  echo $sum\n}\n\ncandidate() {\n    solution \"$@\"\n}\n\nset\
    \ -e\nrun_test() {\n    [[ $(candidate \"5 8 7 1\") = \"12\" ]]\n    [[ $(candidate\
    \ \"3 3 3 3 3\") = \"9\" ]]\n    [[ $(candidate \"30 13 24 321\") = \"0\" ]]\n\
    \    [[ $(candidate \"5 9\") = \"5\" ]]\n    [[ $(candidate \"2 4 8\") = \"0\"\
    \ ]]\n    [[ $(candidate \"30 13 23 32\") = \"23\" ]]\n    [[ $(candidate \"3\
    \ 13 2 9\") = \"3\" ]]\n}\n\nrun_test"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659999723
- exit_code: 0
  program: "#!/bin/bash\n# Given a non-empty list of integers, return the sum of all\
    \ of the odd elements that are in even positions.\n# Examples\n#\n# $1 is a space-separated\
    \ list\nsolution() {\n  local -a arr=($1)\n  local sum=0\n  for ((i=0; i<${#arr[@]};\
    \ i++)); do\n    if [[ $((i%2)) -eq 0 && $((arr[i]%2)) -eq 1 ]]; then\n      sum=$((sum+arr[i]))\n\
    \    fi\n  done\n  echo $sum\n}\n\ncandidate() {\n    solution \"$@\"\n}\n\nset\
    \ -e\nrun_test() {\n    [[ $(candidate \"5 8 7 1\") = \"12\" ]]\n    [[ $(candidate\
    \ \"3 3 3 3 3\") = \"9\" ]]\n    [[ $(candidate \"30 13 24 321\") = \"0\" ]]\n\
    \    [[ $(candidate \"5 9\") = \"5\" ]]\n    [[ $(candidate \"2 4 8\") = \"0\"\
    \ ]]\n    [[ $(candidate \"30 13 23 32\") = \"23\" ]]\n    [[ $(candidate \"3\
    \ 13 2 9\") = \"3\" ]]\n}\n\nrun_test"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659999723
- exit_code: 0
  program: "#!/bin/bash\n# Given a non-empty list of integers, return the sum of all\
    \ of the odd elements that are in even positions.\n# Examples\n#\n# $1 is a space-separated\
    \ list\nsolution() {\n  local -a arr=($1)\n  local sum=0\n  for ((i=0; i<${#arr[@]};\
    \ i++)); do\n    if ((i%2==0 && arr[i]%2==1)); then\n      ((sum+=arr[i]))\n \
    \   fi\n  done\n  echo $sum\n}\n\ncandidate() {\n    solution \"$@\"\n}\n\nset\
    \ -e\nrun_test() {\n    [[ $(candidate \"5 8 7 1\") = \"12\" ]]\n    [[ $(candidate\
    \ \"3 3 3 3 3\") = \"9\" ]]\n    [[ $(candidate \"30 13 24 321\") = \"0\" ]]\n\
    \    [[ $(candidate \"5 9\") = \"5\" ]]\n    [[ $(candidate \"2 4 8\") = \"0\"\
    \ ]]\n    [[ $(candidate \"30 13 23 32\") = \"23\" ]]\n    [[ $(candidate \"3\
    \ 13 2 9\") = \"3\" ]]\n}\n\nrun_test"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659999723
- exit_code: 1
  program: "#!/bin/bash\n# Given a non-empty list of integers, return the sum of all\
    \ of the odd elements that are in even positions.\n# Examples\n#\n# $1 is a space-separated\
    \ list\nsolution() {\n  local -a arr=($1)\n  local sum=0\n  for ((i=0; i<${#arr[@]};\
    \ i++)); do\n    if ((i%2==0)); then\n      ((sum+=arr[i]))\n    fi\n  done\n\
    \  echo $sum\n}\n\ncandidate() {\n    solution \"$@\"\n}\n\nset -e\nrun_test()\
    \ {\n    [[ $(candidate \"5 8 7 1\") = \"12\" ]]\n    [[ $(candidate \"3 3 3 3\
    \ 3\") = \"9\" ]]\n    [[ $(candidate \"30 13 24 321\") = \"0\" ]]\n    [[ $(candidate\
    \ \"5 9\") = \"5\" ]]\n    [[ $(candidate \"2 4 8\") = \"0\" ]]\n    [[ $(candidate\
    \ \"30 13 23 32\") = \"23\" ]]\n    [[ $(candidate \"3 13 2 9\") = \"3\" ]]\n\
    }\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1659999723
- exit_code: 0
  program: "#!/bin/bash\n# Given a non-empty list of integers, return the sum of all\
    \ of the odd elements that are in even positions.\n# Examples\n#\n# $1 is a space-separated\
    \ list\nsolution() {\n  local -a arr\n  local -i sum=0\n  IFS=' ' read -r -a arr\
    \ <<< \"$1\"\n  for ((i=0; i<${#arr[@]}; i++)); do\n    if ((i%2==0 && arr[i]%2==1));\
    \ then\n      ((sum+=arr[i]))\n    fi\n  done\n  echo $sum\n}\n\ncandidate() {\n\
    \    solution \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"5 8 7 1\"\
    ) = \"12\" ]]\n    [[ $(candidate \"3 3 3 3 3\") = \"9\" ]]\n    [[ $(candidate\
    \ \"30 13 24 321\") = \"0\" ]]\n    [[ $(candidate \"5 9\") = \"5\" ]]\n    [[\
    \ $(candidate \"2 4 8\") = \"0\" ]]\n    [[ $(candidate \"30 13 23 32\") = \"\
    23\" ]]\n    [[ $(candidate \"3 13 2 9\") = \"3\" ]]\n}\n\nrun_test"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659999723

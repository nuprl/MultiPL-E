language: sh
name: HumanEval_114_minSubArraySum
results:
- exit_code: 1
  program: "#!/bin/bash\n# Given an array of integers nums, find the minimum sum of\
    \ any non-empty sub-array\n# of nums.\n# Example\n#\n# $1 is a space-separated\
    \ list\nminSubArraySum() {\n    local -n arr=$1\n    local min_sum=${arr[0]}\n\
    \    local sum=0\n    for i in \"${arr[@]}\"; do\n        (( sum += i ))\n   \
    \     (( sum < min_sum )) && min_sum=$sum\n        (( sum < 0 )) && sum=0\n  \
    \  done\n    echo $min_sum\n}\n\ncandidate() {\n    minSubArraySum \"$@\"\n}\n\
    \nset -e\nrun_test() {\n    [[ $(candidate \"2 3 4 1 2 4\") = \"1\" ]]\n    [[\
    \ $(candidate \"-1 -2 -3\") = \"-6\" ]]\n    [[ $(candidate \"-1 -2 -3 2 -10\"\
    ) = \"-14\" ]]\n    [[ $(candidate \"-9999999999999999\") = \"-9999999999999999\"\
    \ ]]\n    [[ $(candidate \"0 10 20 1000000\") = \"0\" ]]\n    [[ $(candidate \"\
    -1 -2 -3 10 -5\") = \"-6\" ]]\n    [[ $(candidate \"100 -1 -2 -3 10 -5\") = \"\
    -6\" ]]\n    [[ $(candidate \"10 11 13 8 3 4\") = \"3\" ]]\n    [[ $(candidate\
    \ \"100 -33 32 -1 0 -2\") = \"-33\" ]]\n    [[ $(candidate \"-10\") = \"-10\"\
    \ ]]\n    [[ $(candidate \"7\") = \"7\" ]]\n    [[ $(candidate \"1 -1\") = \"\
    -1\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: '/tmp/tmpwig402so.sh: line 8: local: `2 3 4 1 2 4'': invalid variable name
    for name reference

    '
  stdout: ''
  timestamp: 1660004787
- exit_code: 1
  program: "#!/bin/bash\n# Given an array of integers nums, find the minimum sum of\
    \ any non-empty sub-array\n# of nums.\n# Example\n#\n# $1 is a space-separated\
    \ list\nminSubArraySum() {\n    local -n arr=$1\n    local min=${arr[0]}\n   \
    \ local sum=0\n    for i in \"${arr[@]}\"; do\n        sum=$((sum + i))\n    \
    \    if [[ $sum -lt $min ]]; then\n            min=$sum\n        fi\n        if\
    \ [[ $sum -gt 0 ]]; then\n            sum=0\n        fi\n    done\n    echo $min\n\
    }\n\ncandidate() {\n    minSubArraySum \"$@\"\n}\n\nset -e\nrun_test() {\n   \
    \ [[ $(candidate \"2 3 4 1 2 4\") = \"1\" ]]\n    [[ $(candidate \"-1 -2 -3\"\
    ) = \"-6\" ]]\n    [[ $(candidate \"-1 -2 -3 2 -10\") = \"-14\" ]]\n    [[ $(candidate\
    \ \"-9999999999999999\") = \"-9999999999999999\" ]]\n    [[ $(candidate \"0 10\
    \ 20 1000000\") = \"0\" ]]\n    [[ $(candidate \"-1 -2 -3 10 -5\") = \"-6\" ]]\n\
    \    [[ $(candidate \"100 -1 -2 -3 10 -5\") = \"-6\" ]]\n    [[ $(candidate \"\
    10 11 13 8 3 4\") = \"3\" ]]\n    [[ $(candidate \"100 -33 32 -1 0 -2\") = \"\
    -33\" ]]\n    [[ $(candidate \"-10\") = \"-10\" ]]\n    [[ $(candidate \"7\")\
    \ = \"7\" ]]\n    [[ $(candidate \"1 -1\") = \"-1\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: '/tmp/tmpfkquxpek.sh: line 8: local: `2 3 4 1 2 4'': invalid variable name
    for name reference

    '
  stdout: ''
  timestamp: 1660004788
- exit_code: 1
  program: "#!/bin/bash\n# Given an array of integers nums, find the minimum sum of\
    \ any non-empty sub-array\n# of nums.\n# Example\n#\n# $1 is a space-separated\
    \ list\nminSubArraySum() {\n    local -n _nums=$1\n    local min=${_nums[0]}\n\
    \    local sum=0\n    for num in \"${_nums[@]}\"; do\n        sum=$((sum + num))\n\
    \        if [[ $sum -lt $min ]]; then\n            min=$sum\n        fi\n    \
    \    if [[ $sum -gt 0 ]]; then\n            sum=0\n        fi\n    done\n    echo\
    \ $min\n}\n\ncandidate() {\n    minSubArraySum \"$@\"\n}\n\nset -e\nrun_test()\
    \ {\n    [[ $(candidate \"2 3 4 1 2 4\") = \"1\" ]]\n    [[ $(candidate \"-1 -2\
    \ -3\") = \"-6\" ]]\n    [[ $(candidate \"-1 -2 -3 2 -10\") = \"-14\" ]]\n   \
    \ [[ $(candidate \"-9999999999999999\") = \"-9999999999999999\" ]]\n    [[ $(candidate\
    \ \"0 10 20 1000000\") = \"0\" ]]\n    [[ $(candidate \"-1 -2 -3 10 -5\") = \"\
    -6\" ]]\n    [[ $(candidate \"100 -1 -2 -3 10 -5\") = \"-6\" ]]\n    [[ $(candidate\
    \ \"10 11 13 8 3 4\") = \"3\" ]]\n    [[ $(candidate \"100 -33 32 -1 0 -2\") =\
    \ \"-33\" ]]\n    [[ $(candidate \"-10\") = \"-10\" ]]\n    [[ $(candidate \"\
    7\") = \"7\" ]]\n    [[ $(candidate \"1 -1\") = \"-1\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: '/tmp/tmpmw_gw7ur.sh: line 8: local: `2 3 4 1 2 4'': invalid variable name
    for name reference

    '
  stdout: ''
  timestamp: 1660004788
- exit_code: 1
  program: "#!/bin/bash\n# Given an array of integers nums, find the minimum sum of\
    \ any non-empty sub-array\n# of nums.\n# Example\n#\n# $1 is a space-separated\
    \ list\nminSubArraySum() {\n  local -n nums=$1\n  local minSum=${nums[0]}\n  local\
    \ sum=0\n  for ((i=0; i<${#nums[@]}; i++)); do\n    sum=$((sum + nums[i]))\n \
    \   if ((sum < minSum)); then\n      minSum=$sum\n    fi\n    if ((sum > 0));\
    \ then\n      sum=0\n    fi\n  done\n  echo $minSum\n}\n\ncandidate() {\n    minSubArraySum\
    \ \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"2 3 4 1 2 4\") = \"\
    1\" ]]\n    [[ $(candidate \"-1 -2 -3\") = \"-6\" ]]\n    [[ $(candidate \"-1\
    \ -2 -3 2 -10\") = \"-14\" ]]\n    [[ $(candidate \"-9999999999999999\") = \"\
    -9999999999999999\" ]]\n    [[ $(candidate \"0 10 20 1000000\") = \"0\" ]]\n \
    \   [[ $(candidate \"-1 -2 -3 10 -5\") = \"-6\" ]]\n    [[ $(candidate \"100 -1\
    \ -2 -3 10 -5\") = \"-6\" ]]\n    [[ $(candidate \"10 11 13 8 3 4\") = \"3\" ]]\n\
    \    [[ $(candidate \"100 -33 32 -1 0 -2\") = \"-33\" ]]\n    [[ $(candidate \"\
    -10\") = \"-10\" ]]\n    [[ $(candidate \"7\") = \"7\" ]]\n    [[ $(candidate\
    \ \"1 -1\") = \"-1\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: '/tmp/tmpz2jfngbw.sh: line 8: local: `2 3 4 1 2 4'': invalid variable name
    for name reference

    '
  stdout: ''
  timestamp: 1660004787
- exit_code: 0
  program: "#!/bin/bash\n# Given an array of integers nums, find the minimum sum of\
    \ any non-empty sub-array\n# of nums.\n# Example\n#\n# $1 is a space-separated\
    \ list\nminSubArraySum() {\n  local -a nums=()\n  local -i sum=0\n  local -i min=0\n\
    \  local -i i=0\n  local -i j=0\n  local -i k=0\n  local -i n=0\n  local -i tmp=0\n\
    \n  IFS=' ' read -r -a nums <<< \"$1\"\n  n=${#nums[@]}\n  min=${nums[0]}\n  for\
    \ ((i=0; i<n; i++)); do\n    sum=0\n    for ((j=i; j<n; j++)); do\n      sum+=${nums[j]}\n\
    \      if ((sum < min)); then\n        min=sum\n      fi\n    done\n  done\n \
    \ echo $min\n}\n\ncandidate() {\n    minSubArraySum \"$@\"\n}\n\nset -e\nrun_test()\
    \ {\n    [[ $(candidate \"2 3 4 1 2 4\") = \"1\" ]]\n    [[ $(candidate \"-1 -2\
    \ -3\") = \"-6\" ]]\n    [[ $(candidate \"-1 -2 -3 2 -10\") = \"-14\" ]]\n   \
    \ [[ $(candidate \"-9999999999999999\") = \"-9999999999999999\" ]]\n    [[ $(candidate\
    \ \"0 10 20 1000000\") = \"0\" ]]\n    [[ $(candidate \"-1 -2 -3 10 -5\") = \"\
    -6\" ]]\n    [[ $(candidate \"100 -1 -2 -3 10 -5\") = \"-6\" ]]\n    [[ $(candidate\
    \ \"10 11 13 8 3 4\") = \"3\" ]]\n    [[ $(candidate \"100 -33 32 -1 0 -2\") =\
    \ \"-33\" ]]\n    [[ $(candidate \"-10\") = \"-10\" ]]\n    [[ $(candidate \"\
    7\") = \"7\" ]]\n    [[ $(candidate \"1 -1\") = \"-1\" ]]\n}\n\nrun_test"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660004788
- exit_code: 1
  program: "#!/bin/bash\n# Given an array of integers nums, find the minimum sum of\
    \ any non-empty sub-array\n# of nums.\n# Example\n#\n# $1 is a space-separated\
    \ list\nminSubArraySum() {\n    local -n array=$1\n    local min=${array[0]}\n\
    \    local sum=0\n    for i in \"${array[@]}\"; do\n        sum=$((sum + i))\n\
    \        if [[ $sum -lt $min ]]; then\n            min=$sum\n        fi\n    done\n\
    \    echo $min\n}\n\ncandidate() {\n    minSubArraySum \"$@\"\n}\n\nset -e\nrun_test()\
    \ {\n    [[ $(candidate \"2 3 4 1 2 4\") = \"1\" ]]\n    [[ $(candidate \"-1 -2\
    \ -3\") = \"-6\" ]]\n    [[ $(candidate \"-1 -2 -3 2 -10\") = \"-14\" ]]\n   \
    \ [[ $(candidate \"-9999999999999999\") = \"-9999999999999999\" ]]\n    [[ $(candidate\
    \ \"0 10 20 1000000\") = \"0\" ]]\n    [[ $(candidate \"-1 -2 -3 10 -5\") = \"\
    -6\" ]]\n    [[ $(candidate \"100 -1 -2 -3 10 -5\") = \"-6\" ]]\n    [[ $(candidate\
    \ \"10 11 13 8 3 4\") = \"3\" ]]\n    [[ $(candidate \"100 -33 32 -1 0 -2\") =\
    \ \"-33\" ]]\n    [[ $(candidate \"-10\") = \"-10\" ]]\n    [[ $(candidate \"\
    7\") = \"7\" ]]\n    [[ $(candidate \"1 -1\") = \"-1\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: '/tmp/tmpjrlsyr4r.sh: line 8: local: `2 3 4 1 2 4'': invalid variable name
    for name reference

    '
  stdout: ''
  timestamp: 1660004788
- exit_code: 1
  program: "#!/bin/bash\n# Given an array of integers nums, find the minimum sum of\
    \ any non-empty sub-array\n# of nums.\n# Example\n#\n# $1 is a space-separated\
    \ list\nminSubArraySum() {\n    local -n _arr=$1\n    local min=${_arr[0]}\n \
    \   local sum=0\n    for i in \"${_arr[@]}\"; do\n        (( sum += i ))\n   \
    \     (( sum < min )) && min=$sum\n        (( sum > 0 )) && sum=0\n    done\n\
    \    echo $min\n}\n\ncandidate() {\n    minSubArraySum \"$@\"\n}\n\nset -e\nrun_test()\
    \ {\n    [[ $(candidate \"2 3 4 1 2 4\") = \"1\" ]]\n    [[ $(candidate \"-1 -2\
    \ -3\") = \"-6\" ]]\n    [[ $(candidate \"-1 -2 -3 2 -10\") = \"-14\" ]]\n   \
    \ [[ $(candidate \"-9999999999999999\") = \"-9999999999999999\" ]]\n    [[ $(candidate\
    \ \"0 10 20 1000000\") = \"0\" ]]\n    [[ $(candidate \"-1 -2 -3 10 -5\") = \"\
    -6\" ]]\n    [[ $(candidate \"100 -1 -2 -3 10 -5\") = \"-6\" ]]\n    [[ $(candidate\
    \ \"10 11 13 8 3 4\") = \"3\" ]]\n    [[ $(candidate \"100 -33 32 -1 0 -2\") =\
    \ \"-33\" ]]\n    [[ $(candidate \"-10\") = \"-10\" ]]\n    [[ $(candidate \"\
    7\") = \"7\" ]]\n    [[ $(candidate \"1 -1\") = \"-1\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: '/tmp/tmp2d84_ed6.sh: line 8: local: `2 3 4 1 2 4'': invalid variable name
    for name reference

    '
  stdout: ''
  timestamp: 1660004788
- exit_code: 1
  program: "#!/bin/bash\n# Given an array of integers nums, find the minimum sum of\
    \ any non-empty sub-array\n# of nums.\n# Example\n#\n# $1 is a space-separated\
    \ list\nminSubArraySum() {\n    local -n _nums=$1\n    local min_sum=${_nums[0]}\n\
    \    local sum=0\n    for i in \"${_nums[@]}\"; do\n        sum=$((sum + i))\n\
    \        if ((sum < min_sum)); then\n            min_sum=$sum\n        fi\n  \
    \      if ((sum > 0)); then\n            sum=0\n        fi\n    done\n    echo\
    \ $min_sum\n}\n\ncandidate() {\n    minSubArraySum \"$@\"\n}\n\nset -e\nrun_test()\
    \ {\n    [[ $(candidate \"2 3 4 1 2 4\") = \"1\" ]]\n    [[ $(candidate \"-1 -2\
    \ -3\") = \"-6\" ]]\n    [[ $(candidate \"-1 -2 -3 2 -10\") = \"-14\" ]]\n   \
    \ [[ $(candidate \"-9999999999999999\") = \"-9999999999999999\" ]]\n    [[ $(candidate\
    \ \"0 10 20 1000000\") = \"0\" ]]\n    [[ $(candidate \"-1 -2 -3 10 -5\") = \"\
    -6\" ]]\n    [[ $(candidate \"100 -1 -2 -3 10 -5\") = \"-6\" ]]\n    [[ $(candidate\
    \ \"10 11 13 8 3 4\") = \"3\" ]]\n    [[ $(candidate \"100 -33 32 -1 0 -2\") =\
    \ \"-33\" ]]\n    [[ $(candidate \"-10\") = \"-10\" ]]\n    [[ $(candidate \"\
    7\") = \"7\" ]]\n    [[ $(candidate \"1 -1\") = \"-1\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: '/tmp/tmpgpvqsemy.sh: line 8: local: `2 3 4 1 2 4'': invalid variable name
    for name reference

    '
  stdout: ''
  timestamp: 1660004787
- exit_code: 1
  program: "#!/bin/bash\n# Given an array of integers nums, find the minimum sum of\
    \ any non-empty sub-array\n# of nums.\n# Example\n#\n# $1 is a space-separated\
    \ list\nminSubArraySum() {\n    local nums=(\"$@\")\n    local min=${nums[0]}\n\
    \    local sum=0\n    for ((i=0; i<${#nums[@]}; i++)); do\n        sum=$((sum\
    \ + nums[i]))\n        if [[ $sum -lt $min ]]; then\n            min=$sum\n  \
    \      fi\n        if [[ $sum -gt 0 ]]; then\n            sum=0\n        fi\n\
    \    done\n    echo $min\n}\n\ncandidate() {\n    minSubArraySum \"$@\"\n}\n\n\
    set -e\nrun_test() {\n    [[ $(candidate \"2 3 4 1 2 4\") = \"1\" ]]\n    [[ $(candidate\
    \ \"-1 -2 -3\") = \"-6\" ]]\n    [[ $(candidate \"-1 -2 -3 2 -10\") = \"-14\"\
    \ ]]\n    [[ $(candidate \"-9999999999999999\") = \"-9999999999999999\" ]]\n \
    \   [[ $(candidate \"0 10 20 1000000\") = \"0\" ]]\n    [[ $(candidate \"-1 -2\
    \ -3 10 -5\") = \"-6\" ]]\n    [[ $(candidate \"100 -1 -2 -3 10 -5\") = \"-6\"\
    \ ]]\n    [[ $(candidate \"10 11 13 8 3 4\") = \"3\" ]]\n    [[ $(candidate \"\
    100 -33 32 -1 0 -2\") = \"-33\" ]]\n    [[ $(candidate \"-10\") = \"-10\" ]]\n\
    \    [[ $(candidate \"7\") = \"7\" ]]\n    [[ $(candidate \"1 -1\") = \"-1\" ]]\n\
    }\n\nrun_test"
  status: SyntaxError
  stderr: '/tmp/tmpcrnyj0zy.sh: line 12: 2 3 4 1 2 4: syntax error in expression (error
    token is "3 4 1 2 4")

    '
  stdout: ''
  timestamp: 1660004788
- exit_code: 1
  program: "#!/bin/bash\n# Given an array of integers nums, find the minimum sum of\
    \ any non-empty sub-array\n# of nums.\n# Example\n#\n# $1 is a space-separated\
    \ list\nminSubArraySum() {\n    local -n _arr=$1\n    local min=${_arr[0]}\n \
    \   local sum=0\n    for i in \"${_arr[@]}\"; do\n        sum=$((sum + i))\n \
    \       if [[ $sum -lt $min ]]; then\n            min=$sum\n        fi\n     \
    \   if [[ $sum -gt 0 ]]; then\n            sum=0\n        fi\n    done\n    echo\
    \ $min\n}\n\ncandidate() {\n    minSubArraySum \"$@\"\n}\n\nset -e\nrun_test()\
    \ {\n    [[ $(candidate \"2 3 4 1 2 4\") = \"1\" ]]\n    [[ $(candidate \"-1 -2\
    \ -3\") = \"-6\" ]]\n    [[ $(candidate \"-1 -2 -3 2 -10\") = \"-14\" ]]\n   \
    \ [[ $(candidate \"-9999999999999999\") = \"-9999999999999999\" ]]\n    [[ $(candidate\
    \ \"0 10 20 1000000\") = \"0\" ]]\n    [[ $(candidate \"-1 -2 -3 10 -5\") = \"\
    -6\" ]]\n    [[ $(candidate \"100 -1 -2 -3 10 -5\") = \"-6\" ]]\n    [[ $(candidate\
    \ \"10 11 13 8 3 4\") = \"3\" ]]\n    [[ $(candidate \"100 -33 32 -1 0 -2\") =\
    \ \"-33\" ]]\n    [[ $(candidate \"-10\") = \"-10\" ]]\n    [[ $(candidate \"\
    7\") = \"7\" ]]\n    [[ $(candidate \"1 -1\") = \"-1\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: '/tmp/tmpm1uaahor.sh: line 8: local: `2 3 4 1 2 4'': invalid variable name
    for name reference

    '
  stdout: ''
  timestamp: 1660004788
- exit_code: 1
  program: "#!/bin/bash\n# Given an array of integers nums, find the minimum sum of\
    \ any non-empty sub-array\n# of nums.\n# Example\n#\n# $1 is a space-separated\
    \ list\nminSubArraySum() {\n    local nums=(\"$@\")\n    local min=0\n    local\
    \ sum=0\n    for i in \"${nums[@]}\"; do\n        sum=$((sum + i))\n        if\
    \ [[ $sum -lt $min ]]; then\n            min=$sum\n        fi\n    done\n    echo\
    \ $min\n}\n\ncandidate() {\n    minSubArraySum \"$@\"\n}\n\nset -e\nrun_test()\
    \ {\n    [[ $(candidate \"2 3 4 1 2 4\") = \"1\" ]]\n    [[ $(candidate \"-1 -2\
    \ -3\") = \"-6\" ]]\n    [[ $(candidate \"-1 -2 -3 2 -10\") = \"-14\" ]]\n   \
    \ [[ $(candidate \"-9999999999999999\") = \"-9999999999999999\" ]]\n    [[ $(candidate\
    \ \"0 10 20 1000000\") = \"0\" ]]\n    [[ $(candidate \"-1 -2 -3 10 -5\") = \"\
    -6\" ]]\n    [[ $(candidate \"100 -1 -2 -3 10 -5\") = \"-6\" ]]\n    [[ $(candidate\
    \ \"10 11 13 8 3 4\") = \"3\" ]]\n    [[ $(candidate \"100 -33 32 -1 0 -2\") =\
    \ \"-33\" ]]\n    [[ $(candidate \"-10\") = \"-10\" ]]\n    [[ $(candidate \"\
    7\") = \"7\" ]]\n    [[ $(candidate \"1 -1\") = \"-1\" ]]\n}\n\nrun_test"
  status: SyntaxError
  stderr: '/tmp/tmphw31p2t7.sh: line 12: 2 3 4 1 2 4: syntax error in expression (error
    token is "3 4 1 2 4")

    '
  stdout: ''
  timestamp: 1660004788
- exit_code: 1
  program: "#!/bin/bash\n# Given an array of integers nums, find the minimum sum of\
    \ any non-empty sub-array\n# of nums.\n# Example\n#\n# $1 is a space-separated\
    \ list\nminSubArraySum() {\n    local -n nums=$1\n    local min_sum=${nums[0]}\n\
    \    local sum=0\n    for num in \"${nums[@]}\"; do\n        sum=$((sum + num))\n\
    \        if [[ $sum -lt $min_sum ]]; then\n            min_sum=$sum\n        fi\n\
    \        if [[ $sum -gt 0 ]]; then\n            sum=0\n        fi\n    done\n\
    \    echo $min_sum\n}\n\ncandidate() {\n    minSubArraySum \"$@\"\n}\n\nset -e\n\
    run_test() {\n    [[ $(candidate \"2 3 4 1 2 4\") = \"1\" ]]\n    [[ $(candidate\
    \ \"-1 -2 -3\") = \"-6\" ]]\n    [[ $(candidate \"-1 -2 -3 2 -10\") = \"-14\"\
    \ ]]\n    [[ $(candidate \"-9999999999999999\") = \"-9999999999999999\" ]]\n \
    \   [[ $(candidate \"0 10 20 1000000\") = \"0\" ]]\n    [[ $(candidate \"-1 -2\
    \ -3 10 -5\") = \"-6\" ]]\n    [[ $(candidate \"100 -1 -2 -3 10 -5\") = \"-6\"\
    \ ]]\n    [[ $(candidate \"10 11 13 8 3 4\") = \"3\" ]]\n    [[ $(candidate \"\
    100 -33 32 -1 0 -2\") = \"-33\" ]]\n    [[ $(candidate \"-10\") = \"-10\" ]]\n\
    \    [[ $(candidate \"7\") = \"7\" ]]\n    [[ $(candidate \"1 -1\") = \"-1\" ]]\n\
    }\n\nrun_test"
  status: Exception
  stderr: '/tmp/tmp8j_azv21.sh: line 8: local: `2 3 4 1 2 4'': invalid variable name
    for name reference

    '
  stdout: ''
  timestamp: 1660004788
- exit_code: 1
  program: "#!/bin/bash\n# Given an array of integers nums, find the minimum sum of\
    \ any non-empty sub-array\n# of nums.\n# Example\n#\n# $1 is a space-separated\
    \ list\nminSubArraySum() {\n    local -n arr=$1\n    local min=${arr[0]}\n   \
    \ local sum=0\n    for i in \"${arr[@]}\"; do\n        sum=$((sum + i))\n    \
    \    if [[ $sum -lt $min ]]; then\n            min=$sum\n        fi\n        if\
    \ [[ $sum -gt 0 ]]; then\n            sum=0\n        fi\n    done\n    echo $min\n\
    }\n\ncandidate() {\n    minSubArraySum \"$@\"\n}\n\nset -e\nrun_test() {\n   \
    \ [[ $(candidate \"2 3 4 1 2 4\") = \"1\" ]]\n    [[ $(candidate \"-1 -2 -3\"\
    ) = \"-6\" ]]\n    [[ $(candidate \"-1 -2 -3 2 -10\") = \"-14\" ]]\n    [[ $(candidate\
    \ \"-9999999999999999\") = \"-9999999999999999\" ]]\n    [[ $(candidate \"0 10\
    \ 20 1000000\") = \"0\" ]]\n    [[ $(candidate \"-1 -2 -3 10 -5\") = \"-6\" ]]\n\
    \    [[ $(candidate \"100 -1 -2 -3 10 -5\") = \"-6\" ]]\n    [[ $(candidate \"\
    10 11 13 8 3 4\") = \"3\" ]]\n    [[ $(candidate \"100 -33 32 -1 0 -2\") = \"\
    -33\" ]]\n    [[ $(candidate \"-10\") = \"-10\" ]]\n    [[ $(candidate \"7\")\
    \ = \"7\" ]]\n    [[ $(candidate \"1 -1\") = \"-1\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: '/tmp/tmpfkquxpek.sh: line 8: local: `2 3 4 1 2 4'': invalid variable name
    for name reference

    '
  stdout: ''
  timestamp: 1660004788
- exit_code: 1
  program: "#!/bin/bash\n# Given an array of integers nums, find the minimum sum of\
    \ any non-empty sub-array\n# of nums.\n# Example\n#\n# $1 is a space-separated\
    \ list\nminSubArraySum() {\n    local -n _nums=$1\n    local min_sum=${_nums[0]}\n\
    \    local sum=0\n    for num in \"${_nums[@]}\"; do\n        sum=$((sum + num))\n\
    \        if [[ $sum -lt $min_sum ]]; then\n            min_sum=$sum\n        fi\n\
    \        if [[ $sum -gt 0 ]]; then\n            sum=0\n        fi\n    done\n\
    \    echo $min_sum\n}\n\ncandidate() {\n    minSubArraySum \"$@\"\n}\n\nset -e\n\
    run_test() {\n    [[ $(candidate \"2 3 4 1 2 4\") = \"1\" ]]\n    [[ $(candidate\
    \ \"-1 -2 -3\") = \"-6\" ]]\n    [[ $(candidate \"-1 -2 -3 2 -10\") = \"-14\"\
    \ ]]\n    [[ $(candidate \"-9999999999999999\") = \"-9999999999999999\" ]]\n \
    \   [[ $(candidate \"0 10 20 1000000\") = \"0\" ]]\n    [[ $(candidate \"-1 -2\
    \ -3 10 -5\") = \"-6\" ]]\n    [[ $(candidate \"100 -1 -2 -3 10 -5\") = \"-6\"\
    \ ]]\n    [[ $(candidate \"10 11 13 8 3 4\") = \"3\" ]]\n    [[ $(candidate \"\
    100 -33 32 -1 0 -2\") = \"-33\" ]]\n    [[ $(candidate \"-10\") = \"-10\" ]]\n\
    \    [[ $(candidate \"7\") = \"7\" ]]\n    [[ $(candidate \"1 -1\") = \"-1\" ]]\n\
    }\n\nrun_test"
  status: Exception
  stderr: '/tmp/tmpbril_cv0.sh: line 8: local: `2 3 4 1 2 4'': invalid variable name
    for name reference

    '
  stdout: ''
  timestamp: 1660004788
- exit_code: 1
  program: "#!/bin/bash\n# Given an array of integers nums, find the minimum sum of\
    \ any non-empty sub-array\n# of nums.\n# Example\n#\n# $1 is a space-separated\
    \ list\nminSubArraySum() {\n  local -n arr=$1\n  local min=${arr[0]}\n  local\
    \ sum=0\n  for i in \"${arr[@]}\"; do\n    sum=$((sum + i))\n    if [[ $sum -lt\
    \ $min ]]; then\n      min=$sum\n    fi\n    if [[ $sum -gt 0 ]]; then\n     \
    \ sum=0\n    fi\n  done\n  echo $min\n}\n\ncandidate() {\n    minSubArraySum \"\
    $@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"2 3 4 1 2 4\") = \"1\" ]]\n\
    \    [[ $(candidate \"-1 -2 -3\") = \"-6\" ]]\n    [[ $(candidate \"-1 -2 -3 2\
    \ -10\") = \"-14\" ]]\n    [[ $(candidate \"-9999999999999999\") = \"-9999999999999999\"\
    \ ]]\n    [[ $(candidate \"0 10 20 1000000\") = \"0\" ]]\n    [[ $(candidate \"\
    -1 -2 -3 10 -5\") = \"-6\" ]]\n    [[ $(candidate \"100 -1 -2 -3 10 -5\") = \"\
    -6\" ]]\n    [[ $(candidate \"10 11 13 8 3 4\") = \"3\" ]]\n    [[ $(candidate\
    \ \"100 -33 32 -1 0 -2\") = \"-33\" ]]\n    [[ $(candidate \"-10\") = \"-10\"\
    \ ]]\n    [[ $(candidate \"7\") = \"7\" ]]\n    [[ $(candidate \"1 -1\") = \"\
    -1\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: '/tmp/tmp4p3hv6od.sh: line 8: local: `2 3 4 1 2 4'': invalid variable name
    for name reference

    '
  stdout: ''
  timestamp: 1660004788
- exit_code: 1
  program: "#!/bin/bash\n# Given an array of integers nums, find the minimum sum of\
    \ any non-empty sub-array\n# of nums.\n# Example\n#\n# $1 is a space-separated\
    \ list\nminSubArraySum() {\n    local -n _array=$1\n    local min=${_array[0]}\n\
    \    local sum=0\n    for i in \"${_array[@]}\"; do\n        sum=$((sum + i))\n\
    \        if [[ $sum -lt $min ]]; then\n            min=$sum\n        fi\n    done\n\
    \    echo $min\n}\n\ncandidate() {\n    minSubArraySum \"$@\"\n}\n\nset -e\nrun_test()\
    \ {\n    [[ $(candidate \"2 3 4 1 2 4\") = \"1\" ]]\n    [[ $(candidate \"-1 -2\
    \ -3\") = \"-6\" ]]\n    [[ $(candidate \"-1 -2 -3 2 -10\") = \"-14\" ]]\n   \
    \ [[ $(candidate \"-9999999999999999\") = \"-9999999999999999\" ]]\n    [[ $(candidate\
    \ \"0 10 20 1000000\") = \"0\" ]]\n    [[ $(candidate \"-1 -2 -3 10 -5\") = \"\
    -6\" ]]\n    [[ $(candidate \"100 -1 -2 -3 10 -5\") = \"-6\" ]]\n    [[ $(candidate\
    \ \"10 11 13 8 3 4\") = \"3\" ]]\n    [[ $(candidate \"100 -33 32 -1 0 -2\") =\
    \ \"-33\" ]]\n    [[ $(candidate \"-10\") = \"-10\" ]]\n    [[ $(candidate \"\
    7\") = \"7\" ]]\n    [[ $(candidate \"1 -1\") = \"-1\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: '/tmp/tmpajm684hr.sh: line 8: local: `2 3 4 1 2 4'': invalid variable name
    for name reference

    '
  stdout: ''
  timestamp: 1660004788
- exit_code: 0
  program: "#!/bin/bash\n# Given an array of integers nums, find the minimum sum of\
    \ any non-empty sub-array\n# of nums.\n# Example\n#\n# $1 is a space-separated\
    \ list\nminSubArraySum() {\n    local -a nums=($1)\n    local min_sum=${nums[0]}\n\
    \    local sum=0\n    for num in \"${nums[@]}\"; do\n        sum=$((sum + num))\n\
    \        if [[ sum -lt min_sum ]]; then\n            min_sum=$sum\n        fi\n\
    \        if [[ sum -gt 0 ]]; then\n            sum=0\n        fi\n    done\n \
    \   echo $min_sum\n}\n\ncandidate() {\n    minSubArraySum \"$@\"\n}\n\nset -e\n\
    run_test() {\n    [[ $(candidate \"2 3 4 1 2 4\") = \"1\" ]]\n    [[ $(candidate\
    \ \"-1 -2 -3\") = \"-6\" ]]\n    [[ $(candidate \"-1 -2 -3 2 -10\") = \"-14\"\
    \ ]]\n    [[ $(candidate \"-9999999999999999\") = \"-9999999999999999\" ]]\n \
    \   [[ $(candidate \"0 10 20 1000000\") = \"0\" ]]\n    [[ $(candidate \"-1 -2\
    \ -3 10 -5\") = \"-6\" ]]\n    [[ $(candidate \"100 -1 -2 -3 10 -5\") = \"-6\"\
    \ ]]\n    [[ $(candidate \"10 11 13 8 3 4\") = \"3\" ]]\n    [[ $(candidate \"\
    100 -33 32 -1 0 -2\") = \"-33\" ]]\n    [[ $(candidate \"-10\") = \"-10\" ]]\n\
    \    [[ $(candidate \"7\") = \"7\" ]]\n    [[ $(candidate \"1 -1\") = \"-1\" ]]\n\
    }\n\nrun_test"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660004788
- exit_code: 1
  program: "#!/bin/bash\n# Given an array of integers nums, find the minimum sum of\
    \ any non-empty sub-array\n# of nums.\n# Example\n#\n# $1 is a space-separated\
    \ list\nminSubArraySum() {\n  local -a nums=(\"$@\")\n  local min=0\n  local sum=0\n\
    \  for ((i=0; i<${#nums[@]}; i++)); do\n    sum=$((sum + nums[i]))\n    if ((sum\
    \ < min)); then\n      min=$sum\n    fi\n  done\n  echo $min\n}\n\ncandidate()\
    \ {\n    minSubArraySum \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate\
    \ \"2 3 4 1 2 4\") = \"1\" ]]\n    [[ $(candidate \"-1 -2 -3\") = \"-6\" ]]\n\
    \    [[ $(candidate \"-1 -2 -3 2 -10\") = \"-14\" ]]\n    [[ $(candidate \"-9999999999999999\"\
    ) = \"-9999999999999999\" ]]\n    [[ $(candidate \"0 10 20 1000000\") = \"0\"\
    \ ]]\n    [[ $(candidate \"-1 -2 -3 10 -5\") = \"-6\" ]]\n    [[ $(candidate \"\
    100 -1 -2 -3 10 -5\") = \"-6\" ]]\n    [[ $(candidate \"10 11 13 8 3 4\") = \"\
    3\" ]]\n    [[ $(candidate \"100 -33 32 -1 0 -2\") = \"-33\" ]]\n    [[ $(candidate\
    \ \"-10\") = \"-10\" ]]\n    [[ $(candidate \"7\") = \"7\" ]]\n    [[ $(candidate\
    \ \"1 -1\") = \"-1\" ]]\n}\n\nrun_test"
  status: SyntaxError
  stderr: '/tmp/tmpoj87jcxr.sh: line 12: 2 3 4 1 2 4: syntax error in expression (error
    token is "3 4 1 2 4")

    '
  stdout: ''
  timestamp: 1660004788
- exit_code: 1
  program: "#!/bin/bash\n# Given an array of integers nums, find the minimum sum of\
    \ any non-empty sub-array\n# of nums.\n# Example\n#\n# $1 is a space-separated\
    \ list\nminSubArraySum() {\n    local -n nums=$1\n    local min=${nums[0]}\n \
    \   local sum=0\n    for i in \"${nums[@]}\"; do\n        sum=$((sum + i))\n \
    \       if [[ $sum -lt $min ]]; then\n            min=$sum\n        fi\n     \
    \   if [[ $sum -gt 0 ]]; then\n            sum=0\n        fi\n    done\n    echo\
    \ $min\n}\n\ncandidate() {\n    minSubArraySum \"$@\"\n}\n\nset -e\nrun_test()\
    \ {\n    [[ $(candidate \"2 3 4 1 2 4\") = \"1\" ]]\n    [[ $(candidate \"-1 -2\
    \ -3\") = \"-6\" ]]\n    [[ $(candidate \"-1 -2 -3 2 -10\") = \"-14\" ]]\n   \
    \ [[ $(candidate \"-9999999999999999\") = \"-9999999999999999\" ]]\n    [[ $(candidate\
    \ \"0 10 20 1000000\") = \"0\" ]]\n    [[ $(candidate \"-1 -2 -3 10 -5\") = \"\
    -6\" ]]\n    [[ $(candidate \"100 -1 -2 -3 10 -5\") = \"-6\" ]]\n    [[ $(candidate\
    \ \"10 11 13 8 3 4\") = \"3\" ]]\n    [[ $(candidate \"100 -33 32 -1 0 -2\") =\
    \ \"-33\" ]]\n    [[ $(candidate \"-10\") = \"-10\" ]]\n    [[ $(candidate \"\
    7\") = \"7\" ]]\n    [[ $(candidate \"1 -1\") = \"-1\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: '/tmp/tmprfdaox40.sh: line 8: local: `2 3 4 1 2 4'': invalid variable name
    for name reference

    '
  stdout: ''
  timestamp: 1660004788
- exit_code: 1
  program: "#!/bin/bash\n# Given an array of integers nums, find the minimum sum of\
    \ any non-empty sub-array\n# of nums.\n# Example\n#\n# $1 is a space-separated\
    \ list\nminSubArraySum() {\n    local -n arr=$1\n    local min=${arr[0]}\n   \
    \ local sum=0\n    for i in \"${arr[@]}\"; do\n        sum=$((sum + i))\n    \
    \    if [[ $sum -lt $min ]]; then\n            min=$sum\n        fi\n        if\
    \ [[ $sum -gt 0 ]]; then\n            sum=0\n        fi\n    done\n    echo $min\n\
    }\n\ncandidate() {\n    minSubArraySum \"$@\"\n}\n\nset -e\nrun_test() {\n   \
    \ [[ $(candidate \"2 3 4 1 2 4\") = \"1\" ]]\n    [[ $(candidate \"-1 -2 -3\"\
    ) = \"-6\" ]]\n    [[ $(candidate \"-1 -2 -3 2 -10\") = \"-14\" ]]\n    [[ $(candidate\
    \ \"-9999999999999999\") = \"-9999999999999999\" ]]\n    [[ $(candidate \"0 10\
    \ 20 1000000\") = \"0\" ]]\n    [[ $(candidate \"-1 -2 -3 10 -5\") = \"-6\" ]]\n\
    \    [[ $(candidate \"100 -1 -2 -3 10 -5\") = \"-6\" ]]\n    [[ $(candidate \"\
    10 11 13 8 3 4\") = \"3\" ]]\n    [[ $(candidate \"100 -33 32 -1 0 -2\") = \"\
    -33\" ]]\n    [[ $(candidate \"-10\") = \"-10\" ]]\n    [[ $(candidate \"7\")\
    \ = \"7\" ]]\n    [[ $(candidate \"1 -1\") = \"-1\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: '/tmp/tmpfkquxpek.sh: line 8: local: `2 3 4 1 2 4'': invalid variable name
    for name reference

    '
  stdout: ''
  timestamp: 1660004788
- exit_code: 1
  program: "#!/bin/bash\n# Given an array of integers nums, find the minimum sum of\
    \ any non-empty sub-array\n# of nums.\n# Example\n#\n# $1 is a space-separated\
    \ list\nminSubArraySum() {\n    local nums=(\"$@\")\n    local min=0\n    local\
    \ sum=0\n    for ((i=0; i<${#nums[@]}; i++)); do\n        sum=$((sum + nums[i]))\n\
    \        if ((sum < min)); then\n            min=$sum\n        fi\n    done\n\
    \    echo $min\n}\n\ncandidate() {\n    minSubArraySum \"$@\"\n}\n\nset -e\nrun_test()\
    \ {\n    [[ $(candidate \"2 3 4 1 2 4\") = \"1\" ]]\n    [[ $(candidate \"-1 -2\
    \ -3\") = \"-6\" ]]\n    [[ $(candidate \"-1 -2 -3 2 -10\") = \"-14\" ]]\n   \
    \ [[ $(candidate \"-9999999999999999\") = \"-9999999999999999\" ]]\n    [[ $(candidate\
    \ \"0 10 20 1000000\") = \"0\" ]]\n    [[ $(candidate \"-1 -2 -3 10 -5\") = \"\
    -6\" ]]\n    [[ $(candidate \"100 -1 -2 -3 10 -5\") = \"-6\" ]]\n    [[ $(candidate\
    \ \"10 11 13 8 3 4\") = \"3\" ]]\n    [[ $(candidate \"100 -33 32 -1 0 -2\") =\
    \ \"-33\" ]]\n    [[ $(candidate \"-10\") = \"-10\" ]]\n    [[ $(candidate \"\
    7\") = \"7\" ]]\n    [[ $(candidate \"1 -1\") = \"-1\" ]]\n}\n\nrun_test"
  status: SyntaxError
  stderr: '/tmp/tmp2ux_1c0h.sh: line 12: 2 3 4 1 2 4: syntax error in expression (error
    token is "3 4 1 2 4")

    '
  stdout: ''
  timestamp: 1660004788
- exit_code: 0
  program: "#!/bin/bash\n# Given an array of integers nums, find the minimum sum of\
    \ any non-empty sub-array\n# of nums.\n# Example\n#\n# $1 is a space-separated\
    \ list\nminSubArraySum() {\n  local -a nums\n  local minSum=0\n  local sum=0\n\
    \  local i=0\n  nums=($1)\n  minSum=${nums[0]}\n  for ((i=0; i<${#nums[@]}; i++));\
    \ do\n    sum=$((sum + nums[i]))\n    if ((sum < minSum)); then\n      minSum=$sum\n\
    \    fi\n    if ((sum > 0)); then\n      sum=0\n    fi\n  done\n  echo $minSum\n\
    }\n\ncandidate() {\n    minSubArraySum \"$@\"\n}\n\nset -e\nrun_test() {\n   \
    \ [[ $(candidate \"2 3 4 1 2 4\") = \"1\" ]]\n    [[ $(candidate \"-1 -2 -3\"\
    ) = \"-6\" ]]\n    [[ $(candidate \"-1 -2 -3 2 -10\") = \"-14\" ]]\n    [[ $(candidate\
    \ \"-9999999999999999\") = \"-9999999999999999\" ]]\n    [[ $(candidate \"0 10\
    \ 20 1000000\") = \"0\" ]]\n    [[ $(candidate \"-1 -2 -3 10 -5\") = \"-6\" ]]\n\
    \    [[ $(candidate \"100 -1 -2 -3 10 -5\") = \"-6\" ]]\n    [[ $(candidate \"\
    10 11 13 8 3 4\") = \"3\" ]]\n    [[ $(candidate \"100 -33 32 -1 0 -2\") = \"\
    -33\" ]]\n    [[ $(candidate \"-10\") = \"-10\" ]]\n    [[ $(candidate \"7\")\
    \ = \"7\" ]]\n    [[ $(candidate \"1 -1\") = \"-1\" ]]\n}\n\nrun_test"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660004788
- exit_code: 1
  program: "#!/bin/bash\n# Given an array of integers nums, find the minimum sum of\
    \ any non-empty sub-array\n# of nums.\n# Example\n#\n# $1 is a space-separated\
    \ list\nminSubArraySum() {\n    local -n nums=$1\n    local min_sum=${nums[0]}\n\
    \    local sum=0\n    for ((i=0; i<${#nums[@]}; i++)); do\n        sum=$((sum\
    \ + nums[i]))\n        if ((sum < min_sum)); then\n            min_sum=$sum\n\
    \        fi\n        if ((sum > 0)); then\n            sum=0\n        fi\n   \
    \ done\n    echo $min_sum\n}\n\ncandidate() {\n    minSubArraySum \"$@\"\n}\n\n\
    set -e\nrun_test() {\n    [[ $(candidate \"2 3 4 1 2 4\") = \"1\" ]]\n    [[ $(candidate\
    \ \"-1 -2 -3\") = \"-6\" ]]\n    [[ $(candidate \"-1 -2 -3 2 -10\") = \"-14\"\
    \ ]]\n    [[ $(candidate \"-9999999999999999\") = \"-9999999999999999\" ]]\n \
    \   [[ $(candidate \"0 10 20 1000000\") = \"0\" ]]\n    [[ $(candidate \"-1 -2\
    \ -3 10 -5\") = \"-6\" ]]\n    [[ $(candidate \"100 -1 -2 -3 10 -5\") = \"-6\"\
    \ ]]\n    [[ $(candidate \"10 11 13 8 3 4\") = \"3\" ]]\n    [[ $(candidate \"\
    100 -33 32 -1 0 -2\") = \"-33\" ]]\n    [[ $(candidate \"-10\") = \"-10\" ]]\n\
    \    [[ $(candidate \"7\") = \"7\" ]]\n    [[ $(candidate \"1 -1\") = \"-1\" ]]\n\
    }\n\nrun_test"
  status: Exception
  stderr: '/tmp/tmpp1xvogbr.sh: line 8: local: `2 3 4 1 2 4'': invalid variable name
    for name reference

    '
  stdout: ''
  timestamp: 1660004788
- exit_code: 1
  program: "#!/bin/bash\n# Given an array of integers nums, find the minimum sum of\
    \ any non-empty sub-array\n# of nums.\n# Example\n#\n# $1 is a space-separated\
    \ list\nminSubArraySum() {\n    local -n nums=$1\n    local min=${nums[0]}\n \
    \   local sum=0\n    for ((i=0; i<${#nums[@]}; i++)); do\n        sum=$((sum +\
    \ nums[i]))\n        if [[ $sum -lt $min ]]; then\n            min=$sum\n    \
    \    fi\n        if [[ $sum -gt 0 ]]; then\n            sum=0\n        fi\n  \
    \  done\n    echo $min\n}\n\ncandidate() {\n    minSubArraySum \"$@\"\n}\n\nset\
    \ -e\nrun_test() {\n    [[ $(candidate \"2 3 4 1 2 4\") = \"1\" ]]\n    [[ $(candidate\
    \ \"-1 -2 -3\") = \"-6\" ]]\n    [[ $(candidate \"-1 -2 -3 2 -10\") = \"-14\"\
    \ ]]\n    [[ $(candidate \"-9999999999999999\") = \"-9999999999999999\" ]]\n \
    \   [[ $(candidate \"0 10 20 1000000\") = \"0\" ]]\n    [[ $(candidate \"-1 -2\
    \ -3 10 -5\") = \"-6\" ]]\n    [[ $(candidate \"100 -1 -2 -3 10 -5\") = \"-6\"\
    \ ]]\n    [[ $(candidate \"10 11 13 8 3 4\") = \"3\" ]]\n    [[ $(candidate \"\
    100 -33 32 -1 0 -2\") = \"-33\" ]]\n    [[ $(candidate \"-10\") = \"-10\" ]]\n\
    \    [[ $(candidate \"7\") = \"7\" ]]\n    [[ $(candidate \"1 -1\") = \"-1\" ]]\n\
    }\n\nrun_test"
  status: Exception
  stderr: '/tmp/tmpwf8wnjxk.sh: line 8: local: `2 3 4 1 2 4'': invalid variable name
    for name reference

    '
  stdout: ''
  timestamp: 1660004788
- exit_code: 1
  program: "#!/bin/bash\n# Given an array of integers nums, find the minimum sum of\
    \ any non-empty sub-array\n# of nums.\n# Example\n#\n# $1 is a space-separated\
    \ list\nminSubArraySum() {\n    local -n arr=$1\n    local min=${arr[0]}\n   \
    \ local sum=0\n    for i in \"${arr[@]}\"; do\n        sum=$((sum + i))\n    \
    \    if [[ $sum -lt $min ]]; then\n            min=$sum\n        fi\n        if\
    \ [[ $sum -gt 0 ]]; then\n            sum=0\n        fi\n    done\n    echo $min\n\
    }\n\ncandidate() {\n    minSubArraySum \"$@\"\n}\n\nset -e\nrun_test() {\n   \
    \ [[ $(candidate \"2 3 4 1 2 4\") = \"1\" ]]\n    [[ $(candidate \"-1 -2 -3\"\
    ) = \"-6\" ]]\n    [[ $(candidate \"-1 -2 -3 2 -10\") = \"-14\" ]]\n    [[ $(candidate\
    \ \"-9999999999999999\") = \"-9999999999999999\" ]]\n    [[ $(candidate \"0 10\
    \ 20 1000000\") = \"0\" ]]\n    [[ $(candidate \"-1 -2 -3 10 -5\") = \"-6\" ]]\n\
    \    [[ $(candidate \"100 -1 -2 -3 10 -5\") = \"-6\" ]]\n    [[ $(candidate \"\
    10 11 13 8 3 4\") = \"3\" ]]\n    [[ $(candidate \"100 -33 32 -1 0 -2\") = \"\
    -33\" ]]\n    [[ $(candidate \"-10\") = \"-10\" ]]\n    [[ $(candidate \"7\")\
    \ = \"7\" ]]\n    [[ $(candidate \"1 -1\") = \"-1\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: '/tmp/tmpfkquxpek.sh: line 8: local: `2 3 4 1 2 4'': invalid variable name
    for name reference

    '
  stdout: ''
  timestamp: 1660004788
- exit_code: 0
  program: "#!/bin/bash\n# Given an array of integers nums, find the minimum sum of\
    \ any non-empty sub-array\n# of nums.\n# Example\n#\n# $1 is a space-separated\
    \ list\nminSubArraySum() {\n  local -a nums=($1)\n  local min=${nums[0]}\n  local\
    \ sum=0\n  for ((i=0; i<${#nums[@]}; i++)); do\n    sum=$((sum + nums[i]))\n \
    \   if ((sum < min)); then\n      min=$sum\n    fi\n    if ((sum > 0)); then\n\
    \      sum=0\n    fi\n  done\n  echo $min\n}\n\ncandidate() {\n    minSubArraySum\
    \ \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"2 3 4 1 2 4\") = \"\
    1\" ]]\n    [[ $(candidate \"-1 -2 -3\") = \"-6\" ]]\n    [[ $(candidate \"-1\
    \ -2 -3 2 -10\") = \"-14\" ]]\n    [[ $(candidate \"-9999999999999999\") = \"\
    -9999999999999999\" ]]\n    [[ $(candidate \"0 10 20 1000000\") = \"0\" ]]\n \
    \   [[ $(candidate \"-1 -2 -3 10 -5\") = \"-6\" ]]\n    [[ $(candidate \"100 -1\
    \ -2 -3 10 -5\") = \"-6\" ]]\n    [[ $(candidate \"10 11 13 8 3 4\") = \"3\" ]]\n\
    \    [[ $(candidate \"100 -33 32 -1 0 -2\") = \"-33\" ]]\n    [[ $(candidate \"\
    -10\") = \"-10\" ]]\n    [[ $(candidate \"7\") = \"7\" ]]\n    [[ $(candidate\
    \ \"1 -1\") = \"-1\" ]]\n}\n\nrun_test"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660004788
- exit_code: 1
  program: "#!/bin/bash\n# Given an array of integers nums, find the minimum sum of\
    \ any non-empty sub-array\n# of nums.\n# Example\n#\n# $1 is a space-separated\
    \ list\nminSubArraySum() {\n  local -n nums=$1\n  local min_sum=${nums[0]}\n \
    \ local sum=0\n  for num in \"${nums[@]}\"; do\n    sum=$((sum + num))\n    if\
    \ [[ $sum -lt $min_sum ]]; then\n      min_sum=$sum\n    fi\n    if [[ $sum -gt\
    \ 0 ]]; then\n      sum=0\n    fi\n  done\n  echo $min_sum\n}\n\ncandidate() {\n\
    \    minSubArraySum \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"2\
    \ 3 4 1 2 4\") = \"1\" ]]\n    [[ $(candidate \"-1 -2 -3\") = \"-6\" ]]\n    [[\
    \ $(candidate \"-1 -2 -3 2 -10\") = \"-14\" ]]\n    [[ $(candidate \"-9999999999999999\"\
    ) = \"-9999999999999999\" ]]\n    [[ $(candidate \"0 10 20 1000000\") = \"0\"\
    \ ]]\n    [[ $(candidate \"-1 -2 -3 10 -5\") = \"-6\" ]]\n    [[ $(candidate \"\
    100 -1 -2 -3 10 -5\") = \"-6\" ]]\n    [[ $(candidate \"10 11 13 8 3 4\") = \"\
    3\" ]]\n    [[ $(candidate \"100 -33 32 -1 0 -2\") = \"-33\" ]]\n    [[ $(candidate\
    \ \"-10\") = \"-10\" ]]\n    [[ $(candidate \"7\") = \"7\" ]]\n    [[ $(candidate\
    \ \"1 -1\") = \"-1\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: '/tmp/tmpxi57_9l2.sh: line 8: local: `2 3 4 1 2 4'': invalid variable name
    for name reference

    '
  stdout: ''
  timestamp: 1660004788
- exit_code: 1
  program: "#!/bin/bash\n# Given an array of integers nums, find the minimum sum of\
    \ any non-empty sub-array\n# of nums.\n# Example\n#\n# $1 is a space-separated\
    \ list\nminSubArraySum() {\n  local nums=\"$1\"\n  local min_sum=0\n  local sum=0\n\
    \  local min_sum_found=false\n  for num in $nums; do\n    sum=$((sum + num))\n\
    \    if [[ $sum -lt $min_sum ]] || ! $min_sum_found; then\n      min_sum=$sum\n\
    \      min_sum_found=true\n    fi\n  done\n  echo $min_sum\n}\n\ncandidate() {\n\
    \    minSubArraySum \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"2\
    \ 3 4 1 2 4\") = \"1\" ]]\n    [[ $(candidate \"-1 -2 -3\") = \"-6\" ]]\n    [[\
    \ $(candidate \"-1 -2 -3 2 -10\") = \"-14\" ]]\n    [[ $(candidate \"-9999999999999999\"\
    ) = \"-9999999999999999\" ]]\n    [[ $(candidate \"0 10 20 1000000\") = \"0\"\
    \ ]]\n    [[ $(candidate \"-1 -2 -3 10 -5\") = \"-6\" ]]\n    [[ $(candidate \"\
    100 -1 -2 -3 10 -5\") = \"-6\" ]]\n    [[ $(candidate \"10 11 13 8 3 4\") = \"\
    3\" ]]\n    [[ $(candidate \"100 -33 32 -1 0 -2\") = \"-33\" ]]\n    [[ $(candidate\
    \ \"-10\") = \"-10\" ]]\n    [[ $(candidate \"7\") = \"7\" ]]\n    [[ $(candidate\
    \ \"1 -1\") = \"-1\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660004788
- exit_code: 1
  program: "#!/bin/bash\n# Given an array of integers nums, find the minimum sum of\
    \ any non-empty sub-array\n# of nums.\n# Example\n#\n# $1 is a space-separated\
    \ list\nminSubArraySum() {\n    local -n nums=$1\n    local min_sum=${nums[0]}\n\
    \    local sum=0\n    for ((i=0; i<${#nums[@]}; i++)); do\n        sum=$((sum\
    \ + nums[i]))\n        if ((sum < min_sum)); then\n            min_sum=$sum\n\
    \        fi\n        if ((sum > 0)); then\n            sum=0\n        fi\n   \
    \ done\n    echo $min_sum\n}\n\ncandidate() {\n    minSubArraySum \"$@\"\n}\n\n\
    set -e\nrun_test() {\n    [[ $(candidate \"2 3 4 1 2 4\") = \"1\" ]]\n    [[ $(candidate\
    \ \"-1 -2 -3\") = \"-6\" ]]\n    [[ $(candidate \"-1 -2 -3 2 -10\") = \"-14\"\
    \ ]]\n    [[ $(candidate \"-9999999999999999\") = \"-9999999999999999\" ]]\n \
    \   [[ $(candidate \"0 10 20 1000000\") = \"0\" ]]\n    [[ $(candidate \"-1 -2\
    \ -3 10 -5\") = \"-6\" ]]\n    [[ $(candidate \"100 -1 -2 -3 10 -5\") = \"-6\"\
    \ ]]\n    [[ $(candidate \"10 11 13 8 3 4\") = \"3\" ]]\n    [[ $(candidate \"\
    100 -33 32 -1 0 -2\") = \"-33\" ]]\n    [[ $(candidate \"-10\") = \"-10\" ]]\n\
    \    [[ $(candidate \"7\") = \"7\" ]]\n    [[ $(candidate \"1 -1\") = \"-1\" ]]\n\
    }\n\nrun_test"
  status: Exception
  stderr: '/tmp/tmpp1xvogbr.sh: line 8: local: `2 3 4 1 2 4'': invalid variable name
    for name reference

    '
  stdout: ''
  timestamp: 1660004788
- exit_code: 1
  program: "#!/bin/bash\n# Given an array of integers nums, find the minimum sum of\
    \ any non-empty sub-array\n# of nums.\n# Example\n#\n# $1 is a space-separated\
    \ list\nminSubArraySum() {\n  local -n nums=$1\n  local min_sum=${nums[0]}\n \
    \ local sum=0\n  for ((i=0; i<${#nums[@]}; i++)); do\n    sum=$((sum + nums[i]))\n\
    \    if ((sum < min_sum)); then\n      min_sum=$sum\n    fi\n    if ((sum > 0));\
    \ then\n      sum=0\n    fi\n  done\n  echo $min_sum\n}\n\ncandidate() {\n   \
    \ minSubArraySum \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"2 3 4\
    \ 1 2 4\") = \"1\" ]]\n    [[ $(candidate \"-1 -2 -3\") = \"-6\" ]]\n    [[ $(candidate\
    \ \"-1 -2 -3 2 -10\") = \"-14\" ]]\n    [[ $(candidate \"-9999999999999999\")\
    \ = \"-9999999999999999\" ]]\n    [[ $(candidate \"0 10 20 1000000\") = \"0\"\
    \ ]]\n    [[ $(candidate \"-1 -2 -3 10 -5\") = \"-6\" ]]\n    [[ $(candidate \"\
    100 -1 -2 -3 10 -5\") = \"-6\" ]]\n    [[ $(candidate \"10 11 13 8 3 4\") = \"\
    3\" ]]\n    [[ $(candidate \"100 -33 32 -1 0 -2\") = \"-33\" ]]\n    [[ $(candidate\
    \ \"-10\") = \"-10\" ]]\n    [[ $(candidate \"7\") = \"7\" ]]\n    [[ $(candidate\
    \ \"1 -1\") = \"-1\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: '/tmp/tmptb_9tita.sh: line 8: local: `2 3 4 1 2 4'': invalid variable name
    for name reference

    '
  stdout: ''
  timestamp: 1660004788
- exit_code: 0
  program: "#!/bin/bash\n# Given an array of integers nums, find the minimum sum of\
    \ any non-empty sub-array\n# of nums.\n# Example\n#\n# $1 is a space-separated\
    \ list\nminSubArraySum() {\n  local -a nums=($1)\n  local min_sum=${nums[0]}\n\
    \  local sum=0\n  for (( i=0; i<${#nums[@]}; i++ )); do\n    sum=$(( sum + nums[i]\
    \ ))\n    if [[ $sum -lt $min_sum ]]; then\n      min_sum=$sum\n    fi\n    if\
    \ [[ $sum -gt 0 ]]; then\n      sum=0\n    fi\n  done\n  echo $min_sum\n}\n\n\
    candidate() {\n    minSubArraySum \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate\
    \ \"2 3 4 1 2 4\") = \"1\" ]]\n    [[ $(candidate \"-1 -2 -3\") = \"-6\" ]]\n\
    \    [[ $(candidate \"-1 -2 -3 2 -10\") = \"-14\" ]]\n    [[ $(candidate \"-9999999999999999\"\
    ) = \"-9999999999999999\" ]]\n    [[ $(candidate \"0 10 20 1000000\") = \"0\"\
    \ ]]\n    [[ $(candidate \"-1 -2 -3 10 -5\") = \"-6\" ]]\n    [[ $(candidate \"\
    100 -1 -2 -3 10 -5\") = \"-6\" ]]\n    [[ $(candidate \"10 11 13 8 3 4\") = \"\
    3\" ]]\n    [[ $(candidate \"100 -33 32 -1 0 -2\") = \"-33\" ]]\n    [[ $(candidate\
    \ \"-10\") = \"-10\" ]]\n    [[ $(candidate \"7\") = \"7\" ]]\n    [[ $(candidate\
    \ \"1 -1\") = \"-1\" ]]\n}\n\nrun_test"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660004788
- exit_code: 0
  program: "#!/bin/bash\n# Given an array of integers nums, find the minimum sum of\
    \ any non-empty sub-array\n# of nums.\n# Example\n#\n# $1 is a space-separated\
    \ list\nminSubArraySum() {\n    local -a nums\n    IFS=' ' read -r -a nums <<<\
    \ \"$1\"\n    local min=${nums[0]}\n    local sum=0\n    for i in \"${nums[@]}\"\
    ; do\n        sum=$((sum + i))\n        if [[ $sum -lt $min ]]; then\n       \
    \     min=$sum\n        fi\n        if [[ $sum -gt 0 ]]; then\n            sum=0\n\
    \        fi\n    done\n    echo $min\n}\n\ncandidate() {\n    minSubArraySum \"\
    $@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"2 3 4 1 2 4\") = \"1\" ]]\n\
    \    [[ $(candidate \"-1 -2 -3\") = \"-6\" ]]\n    [[ $(candidate \"-1 -2 -3 2\
    \ -10\") = \"-14\" ]]\n    [[ $(candidate \"-9999999999999999\") = \"-9999999999999999\"\
    \ ]]\n    [[ $(candidate \"0 10 20 1000000\") = \"0\" ]]\n    [[ $(candidate \"\
    -1 -2 -3 10 -5\") = \"-6\" ]]\n    [[ $(candidate \"100 -1 -2 -3 10 -5\") = \"\
    -6\" ]]\n    [[ $(candidate \"10 11 13 8 3 4\") = \"3\" ]]\n    [[ $(candidate\
    \ \"100 -33 32 -1 0 -2\") = \"-33\" ]]\n    [[ $(candidate \"-10\") = \"-10\"\
    \ ]]\n    [[ $(candidate \"7\") = \"7\" ]]\n    [[ $(candidate \"1 -1\") = \"\
    -1\" ]]\n}\n\nrun_test"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660004788
- exit_code: 1
  program: "#!/bin/bash\n# Given an array of integers nums, find the minimum sum of\
    \ any non-empty sub-array\n# of nums.\n# Example\n#\n# $1 is a space-separated\
    \ list\nminSubArraySum() {\n  local -n nums=$1\n  local min=${nums[0]}\n  local\
    \ sum=0\n  for i in \"${nums[@]}\"; do\n    sum=$((sum + i))\n    if [[ $sum -lt\
    \ $min ]]; then\n      min=$sum\n    fi\n    if [[ $sum -gt 0 ]]; then\n     \
    \ sum=0\n    fi\n  done\n  echo $min\n}\n\ncandidate() {\n    minSubArraySum \"\
    $@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"2 3 4 1 2 4\") = \"1\" ]]\n\
    \    [[ $(candidate \"-1 -2 -3\") = \"-6\" ]]\n    [[ $(candidate \"-1 -2 -3 2\
    \ -10\") = \"-14\" ]]\n    [[ $(candidate \"-9999999999999999\") = \"-9999999999999999\"\
    \ ]]\n    [[ $(candidate \"0 10 20 1000000\") = \"0\" ]]\n    [[ $(candidate \"\
    -1 -2 -3 10 -5\") = \"-6\" ]]\n    [[ $(candidate \"100 -1 -2 -3 10 -5\") = \"\
    -6\" ]]\n    [[ $(candidate \"10 11 13 8 3 4\") = \"3\" ]]\n    [[ $(candidate\
    \ \"100 -33 32 -1 0 -2\") = \"-33\" ]]\n    [[ $(candidate \"-10\") = \"-10\"\
    \ ]]\n    [[ $(candidate \"7\") = \"7\" ]]\n    [[ $(candidate \"1 -1\") = \"\
    -1\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: '/tmp/tmp1gqgtdq2.sh: line 8: local: `2 3 4 1 2 4'': invalid variable name
    for name reference

    '
  stdout: ''
  timestamp: 1660004788
- exit_code: 1
  program: "#!/bin/bash\n# Given an array of integers nums, find the minimum sum of\
    \ any non-empty sub-array\n# of nums.\n# Example\n#\n# $1 is a space-separated\
    \ list\nminSubArraySum() {\n  local nums=(\"$@\")\n  local min=${nums[0]}\n  local\
    \ sum=0\n  for ((i=0; i<${#nums[@]}; i++)); do\n    sum=$((sum + nums[i]))\n \
    \   if [[ $sum -lt $min ]]; then\n      min=$sum\n    fi\n    if [[ $sum -gt 0\
    \ ]]; then\n      sum=0\n    fi\n  done\n  echo $min\n}\n\ncandidate() {\n   \
    \ minSubArraySum \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"2 3 4\
    \ 1 2 4\") = \"1\" ]]\n    [[ $(candidate \"-1 -2 -3\") = \"-6\" ]]\n    [[ $(candidate\
    \ \"-1 -2 -3 2 -10\") = \"-14\" ]]\n    [[ $(candidate \"-9999999999999999\")\
    \ = \"-9999999999999999\" ]]\n    [[ $(candidate \"0 10 20 1000000\") = \"0\"\
    \ ]]\n    [[ $(candidate \"-1 -2 -3 10 -5\") = \"-6\" ]]\n    [[ $(candidate \"\
    100 -1 -2 -3 10 -5\") = \"-6\" ]]\n    [[ $(candidate \"10 11 13 8 3 4\") = \"\
    3\" ]]\n    [[ $(candidate \"100 -33 32 -1 0 -2\") = \"-33\" ]]\n    [[ $(candidate\
    \ \"-10\") = \"-10\" ]]\n    [[ $(candidate \"7\") = \"7\" ]]\n    [[ $(candidate\
    \ \"1 -1\") = \"-1\" ]]\n}\n\nrun_test"
  status: SyntaxError
  stderr: '/tmp/tmpmutdo89r.sh: line 12: 2 3 4 1 2 4: syntax error in expression (error
    token is "3 4 1 2 4")

    '
  stdout: ''
  timestamp: 1660004788
- exit_code: 1
  program: "#!/bin/bash\n# Given an array of integers nums, find the minimum sum of\
    \ any non-empty sub-array\n# of nums.\n# Example\n#\n# $1 is a space-separated\
    \ list\nminSubArraySum() {\n    local -n nums=$1\n    local min=${nums[0]}\n \
    \   local sum=0\n    for i in \"${nums[@]}\"; do\n        sum=$((sum + i))\n \
    \       if ((sum < min)); then\n            min=$sum\n        fi\n        if ((sum\
    \ > 0)); then\n            sum=0\n        fi\n    done\n    echo $min\n}\n\ncandidate()\
    \ {\n    minSubArraySum \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate\
    \ \"2 3 4 1 2 4\") = \"1\" ]]\n    [[ $(candidate \"-1 -2 -3\") = \"-6\" ]]\n\
    \    [[ $(candidate \"-1 -2 -3 2 -10\") = \"-14\" ]]\n    [[ $(candidate \"-9999999999999999\"\
    ) = \"-9999999999999999\" ]]\n    [[ $(candidate \"0 10 20 1000000\") = \"0\"\
    \ ]]\n    [[ $(candidate \"-1 -2 -3 10 -5\") = \"-6\" ]]\n    [[ $(candidate \"\
    100 -1 -2 -3 10 -5\") = \"-6\" ]]\n    [[ $(candidate \"10 11 13 8 3 4\") = \"\
    3\" ]]\n    [[ $(candidate \"100 -33 32 -1 0 -2\") = \"-33\" ]]\n    [[ $(candidate\
    \ \"-10\") = \"-10\" ]]\n    [[ $(candidate \"7\") = \"7\" ]]\n    [[ $(candidate\
    \ \"1 -1\") = \"-1\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: '/tmp/tmp5yd29hsg.sh: line 8: local: `2 3 4 1 2 4'': invalid variable name
    for name reference

    '
  stdout: ''
  timestamp: 1660004788
- exit_code: 1
  program: "#!/bin/bash\n# Given an array of integers nums, find the minimum sum of\
    \ any non-empty sub-array\n# of nums.\n# Example\n#\n# $1 is a space-separated\
    \ list\nminSubArraySum() {\n    local -n nums=$1\n    local min_sum=${nums[0]}\n\
    \    local sum=0\n    for n in \"${nums[@]}\"; do\n        sum=$((sum + n))\n\
    \        if [[ $sum -lt $min_sum ]]; then\n            min_sum=$sum\n        fi\n\
    \        if [[ $sum -lt 0 ]]; then\n            sum=0\n        fi\n    done\n\
    \    echo $min_sum\n}\n\ncandidate() {\n    minSubArraySum \"$@\"\n}\n\nset -e\n\
    run_test() {\n    [[ $(candidate \"2 3 4 1 2 4\") = \"1\" ]]\n    [[ $(candidate\
    \ \"-1 -2 -3\") = \"-6\" ]]\n    [[ $(candidate \"-1 -2 -3 2 -10\") = \"-14\"\
    \ ]]\n    [[ $(candidate \"-9999999999999999\") = \"-9999999999999999\" ]]\n \
    \   [[ $(candidate \"0 10 20 1000000\") = \"0\" ]]\n    [[ $(candidate \"-1 -2\
    \ -3 10 -5\") = \"-6\" ]]\n    [[ $(candidate \"100 -1 -2 -3 10 -5\") = \"-6\"\
    \ ]]\n    [[ $(candidate \"10 11 13 8 3 4\") = \"3\" ]]\n    [[ $(candidate \"\
    100 -33 32 -1 0 -2\") = \"-33\" ]]\n    [[ $(candidate \"-10\") = \"-10\" ]]\n\
    \    [[ $(candidate \"7\") = \"7\" ]]\n    [[ $(candidate \"1 -1\") = \"-1\" ]]\n\
    }\n\nrun_test"
  status: Exception
  stderr: '/tmp/tmpsm47kh_v.sh: line 8: local: `2 3 4 1 2 4'': invalid variable name
    for name reference

    '
  stdout: ''
  timestamp: 1660004788
- exit_code: 1
  program: "#!/bin/bash\n# Given an array of integers nums, find the minimum sum of\
    \ any non-empty sub-array\n# of nums.\n# Example\n#\n# $1 is a space-separated\
    \ list\nminSubArraySum() {\n    local -n arr=$1\n    local min=${arr[0]}\n   \
    \ local sum=0\n    for i in \"${arr[@]}\"; do\n        ((sum += i))\n        ((sum\
    \ < min)) && min=$sum\n        ((sum > 0)) && sum=0\n    done\n    echo $min\n\
    }\n\ncandidate() {\n    minSubArraySum \"$@\"\n}\n\nset -e\nrun_test() {\n   \
    \ [[ $(candidate \"2 3 4 1 2 4\") = \"1\" ]]\n    [[ $(candidate \"-1 -2 -3\"\
    ) = \"-6\" ]]\n    [[ $(candidate \"-1 -2 -3 2 -10\") = \"-14\" ]]\n    [[ $(candidate\
    \ \"-9999999999999999\") = \"-9999999999999999\" ]]\n    [[ $(candidate \"0 10\
    \ 20 1000000\") = \"0\" ]]\n    [[ $(candidate \"-1 -2 -3 10 -5\") = \"-6\" ]]\n\
    \    [[ $(candidate \"100 -1 -2 -3 10 -5\") = \"-6\" ]]\n    [[ $(candidate \"\
    10 11 13 8 3 4\") = \"3\" ]]\n    [[ $(candidate \"100 -33 32 -1 0 -2\") = \"\
    -33\" ]]\n    [[ $(candidate \"-10\") = \"-10\" ]]\n    [[ $(candidate \"7\")\
    \ = \"7\" ]]\n    [[ $(candidate \"1 -1\") = \"-1\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: '/tmp/tmpxiz0kwh0.sh: line 8: local: `2 3 4 1 2 4'': invalid variable name
    for name reference

    '
  stdout: ''
  timestamp: 1660004788
- exit_code: 1
  program: "#!/bin/bash\n# Given an array of integers nums, find the minimum sum of\
    \ any non-empty sub-array\n# of nums.\n# Example\n#\n# $1 is a space-separated\
    \ list\nminSubArraySum() {\n    local nums=\"$1\"\n    local min=0\n    local\
    \ sum=0\n    for num in $nums; do\n        sum=$((sum + num))\n        if [[ $sum\
    \ -lt $min ]]; then\n            min=$sum\n        fi\n    done\n    echo $min\n\
    }\n\ncandidate() {\n    minSubArraySum \"$@\"\n}\n\nset -e\nrun_test() {\n   \
    \ [[ $(candidate \"2 3 4 1 2 4\") = \"1\" ]]\n    [[ $(candidate \"-1 -2 -3\"\
    ) = \"-6\" ]]\n    [[ $(candidate \"-1 -2 -3 2 -10\") = \"-14\" ]]\n    [[ $(candidate\
    \ \"-9999999999999999\") = \"-9999999999999999\" ]]\n    [[ $(candidate \"0 10\
    \ 20 1000000\") = \"0\" ]]\n    [[ $(candidate \"-1 -2 -3 10 -5\") = \"-6\" ]]\n\
    \    [[ $(candidate \"100 -1 -2 -3 10 -5\") = \"-6\" ]]\n    [[ $(candidate \"\
    10 11 13 8 3 4\") = \"3\" ]]\n    [[ $(candidate \"100 -33 32 -1 0 -2\") = \"\
    -33\" ]]\n    [[ $(candidate \"-10\") = \"-10\" ]]\n    [[ $(candidate \"7\")\
    \ = \"7\" ]]\n    [[ $(candidate \"1 -1\") = \"-1\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660004788
- exit_code: 1
  program: "#!/bin/bash\n# Given an array of integers nums, find the minimum sum of\
    \ any non-empty sub-array\n# of nums.\n# Example\n#\n# $1 is a space-separated\
    \ list\nminSubArraySum() {\n    local -a nums=(\"$@\")\n    local min=0\n    local\
    \ sum=0\n    for ((i=0; i<${#nums[@]}; i++)); do\n        sum=$((sum + nums[i]))\n\
    \        if ((sum < min)); then\n            min=$sum\n        fi\n    done\n\
    \    echo $min\n}\n\ncandidate() {\n    minSubArraySum \"$@\"\n}\n\nset -e\nrun_test()\
    \ {\n    [[ $(candidate \"2 3 4 1 2 4\") = \"1\" ]]\n    [[ $(candidate \"-1 -2\
    \ -3\") = \"-6\" ]]\n    [[ $(candidate \"-1 -2 -3 2 -10\") = \"-14\" ]]\n   \
    \ [[ $(candidate \"-9999999999999999\") = \"-9999999999999999\" ]]\n    [[ $(candidate\
    \ \"0 10 20 1000000\") = \"0\" ]]\n    [[ $(candidate \"-1 -2 -3 10 -5\") = \"\
    -6\" ]]\n    [[ $(candidate \"100 -1 -2 -3 10 -5\") = \"-6\" ]]\n    [[ $(candidate\
    \ \"10 11 13 8 3 4\") = \"3\" ]]\n    [[ $(candidate \"100 -33 32 -1 0 -2\") =\
    \ \"-33\" ]]\n    [[ $(candidate \"-10\") = \"-10\" ]]\n    [[ $(candidate \"\
    7\") = \"7\" ]]\n    [[ $(candidate \"1 -1\") = \"-1\" ]]\n}\n\nrun_test"
  status: SyntaxError
  stderr: '/tmp/tmpg_2ssoe2.sh: line 12: 2 3 4 1 2 4: syntax error in expression (error
    token is "3 4 1 2 4")

    '
  stdout: ''
  timestamp: 1660004788
- exit_code: 1
  program: "#!/bin/bash\n# Given an array of integers nums, find the minimum sum of\
    \ any non-empty sub-array\n# of nums.\n# Example\n#\n# $1 is a space-separated\
    \ list\nminSubArraySum() {\n    local nums=$1\n    local min=0\n    local sum=0\n\
    \    for num in $nums; do\n        sum=$((sum + num))\n        if [[ $sum -lt\
    \ $min ]]; then\n            min=$sum\n        fi\n    done\n    echo $min\n}\n\
    \ncandidate() {\n    minSubArraySum \"$@\"\n}\n\nset -e\nrun_test() {\n    [[\
    \ $(candidate \"2 3 4 1 2 4\") = \"1\" ]]\n    [[ $(candidate \"-1 -2 -3\") =\
    \ \"-6\" ]]\n    [[ $(candidate \"-1 -2 -3 2 -10\") = \"-14\" ]]\n    [[ $(candidate\
    \ \"-9999999999999999\") = \"-9999999999999999\" ]]\n    [[ $(candidate \"0 10\
    \ 20 1000000\") = \"0\" ]]\n    [[ $(candidate \"-1 -2 -3 10 -5\") = \"-6\" ]]\n\
    \    [[ $(candidate \"100 -1 -2 -3 10 -5\") = \"-6\" ]]\n    [[ $(candidate \"\
    10 11 13 8 3 4\") = \"3\" ]]\n    [[ $(candidate \"100 -33 32 -1 0 -2\") = \"\
    -33\" ]]\n    [[ $(candidate \"-10\") = \"-10\" ]]\n    [[ $(candidate \"7\")\
    \ = \"7\" ]]\n    [[ $(candidate \"1 -1\") = \"-1\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660004788
- exit_code: 1
  program: "#!/bin/bash\n# Given an array of integers nums, find the minimum sum of\
    \ any non-empty sub-array\n# of nums.\n# Example\n#\n# $1 is a space-separated\
    \ list\nminSubArraySum() {\n  local -n arr=$1\n  local min=${arr[0]}\n  local\
    \ sum=0\n  for i in \"${arr[@]}\"; do\n    ((sum += i))\n    ((sum < min)) &&\
    \ min=$sum\n    ((sum > 0)) && sum=0\n  done\n  echo $min\n}\n\ncandidate() {\n\
    \    minSubArraySum \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"2\
    \ 3 4 1 2 4\") = \"1\" ]]\n    [[ $(candidate \"-1 -2 -3\") = \"-6\" ]]\n    [[\
    \ $(candidate \"-1 -2 -3 2 -10\") = \"-14\" ]]\n    [[ $(candidate \"-9999999999999999\"\
    ) = \"-9999999999999999\" ]]\n    [[ $(candidate \"0 10 20 1000000\") = \"0\"\
    \ ]]\n    [[ $(candidate \"-1 -2 -3 10 -5\") = \"-6\" ]]\n    [[ $(candidate \"\
    100 -1 -2 -3 10 -5\") = \"-6\" ]]\n    [[ $(candidate \"10 11 13 8 3 4\") = \"\
    3\" ]]\n    [[ $(candidate \"100 -33 32 -1 0 -2\") = \"-33\" ]]\n    [[ $(candidate\
    \ \"-10\") = \"-10\" ]]\n    [[ $(candidate \"7\") = \"7\" ]]\n    [[ $(candidate\
    \ \"1 -1\") = \"-1\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: '/tmp/tmpo3m3a3iq.sh: line 8: local: `2 3 4 1 2 4'': invalid variable name
    for name reference

    '
  stdout: ''
  timestamp: 1660004788
- exit_code: 0
  program: "#!/bin/bash\n# Given an array of integers nums, find the minimum sum of\
    \ any non-empty sub-array\n# of nums.\n# Example\n#\n# $1 is a space-separated\
    \ list\nminSubArraySum() {\n  local -a nums=($1)\n  local min=${nums[0]}\n  local\
    \ sum=0\n  for n in \"${nums[@]}\"; do\n    sum=$((sum + n))\n    if [[ $sum -lt\
    \ $min ]]; then\n      min=$sum\n    fi\n    if [[ $sum -gt 0 ]]; then\n     \
    \ sum=0\n    fi\n  done\n  echo $min\n}\n\ncandidate() {\n    minSubArraySum \"\
    $@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"2 3 4 1 2 4\") = \"1\" ]]\n\
    \    [[ $(candidate \"-1 -2 -3\") = \"-6\" ]]\n    [[ $(candidate \"-1 -2 -3 2\
    \ -10\") = \"-14\" ]]\n    [[ $(candidate \"-9999999999999999\") = \"-9999999999999999\"\
    \ ]]\n    [[ $(candidate \"0 10 20 1000000\") = \"0\" ]]\n    [[ $(candidate \"\
    -1 -2 -3 10 -5\") = \"-6\" ]]\n    [[ $(candidate \"100 -1 -2 -3 10 -5\") = \"\
    -6\" ]]\n    [[ $(candidate \"10 11 13 8 3 4\") = \"3\" ]]\n    [[ $(candidate\
    \ \"100 -33 32 -1 0 -2\") = \"-33\" ]]\n    [[ $(candidate \"-10\") = \"-10\"\
    \ ]]\n    [[ $(candidate \"7\") = \"7\" ]]\n    [[ $(candidate \"1 -1\") = \"\
    -1\" ]]\n}\n\nrun_test"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660004788
- exit_code: 1
  program: "#!/bin/bash\n# Given an array of integers nums, find the minimum sum of\
    \ any non-empty sub-array\n# of nums.\n# Example\n#\n# $1 is a space-separated\
    \ list\nminSubArraySum() {\n    local -a nums=(\"$@\")\n    local min=0\n    local\
    \ sum=0\n    for ((i=0; i<${#nums[@]}; i++)); do\n        sum=$((sum + nums[i]))\n\
    \        if ((sum < min)); then\n            min=$sum\n        fi\n    done\n\
    \    echo $min\n}\n\ncandidate() {\n    minSubArraySum \"$@\"\n}\n\nset -e\nrun_test()\
    \ {\n    [[ $(candidate \"2 3 4 1 2 4\") = \"1\" ]]\n    [[ $(candidate \"-1 -2\
    \ -3\") = \"-6\" ]]\n    [[ $(candidate \"-1 -2 -3 2 -10\") = \"-14\" ]]\n   \
    \ [[ $(candidate \"-9999999999999999\") = \"-9999999999999999\" ]]\n    [[ $(candidate\
    \ \"0 10 20 1000000\") = \"0\" ]]\n    [[ $(candidate \"-1 -2 -3 10 -5\") = \"\
    -6\" ]]\n    [[ $(candidate \"100 -1 -2 -3 10 -5\") = \"-6\" ]]\n    [[ $(candidate\
    \ \"10 11 13 8 3 4\") = \"3\" ]]\n    [[ $(candidate \"100 -33 32 -1 0 -2\") =\
    \ \"-33\" ]]\n    [[ $(candidate \"-10\") = \"-10\" ]]\n    [[ $(candidate \"\
    7\") = \"7\" ]]\n    [[ $(candidate \"1 -1\") = \"-1\" ]]\n}\n\nrun_test"
  status: SyntaxError
  stderr: '/tmp/tmpg_2ssoe2.sh: line 12: 2 3 4 1 2 4: syntax error in expression (error
    token is "3 4 1 2 4")

    '
  stdout: ''
  timestamp: 1660004788
- exit_code: 1
  program: "#!/bin/bash\n# Given an array of integers nums, find the minimum sum of\
    \ any non-empty sub-array\n# of nums.\n# Example\n#\n# $1 is a space-separated\
    \ list\nminSubArraySum() {\n    local -n _arr=$1\n    local min=${_arr[0]}\n \
    \   local sum=0\n    for i in \"${_arr[@]}\"; do\n        sum=$((sum + i))\n \
    \       if [[ $sum -lt $min ]]; then\n            min=$sum\n        fi\n     \
    \   if [[ $sum -gt 0 ]]; then\n            sum=0\n        fi\n    done\n    echo\
    \ $min\n}\n\ncandidate() {\n    minSubArraySum \"$@\"\n}\n\nset -e\nrun_test()\
    \ {\n    [[ $(candidate \"2 3 4 1 2 4\") = \"1\" ]]\n    [[ $(candidate \"-1 -2\
    \ -3\") = \"-6\" ]]\n    [[ $(candidate \"-1 -2 -3 2 -10\") = \"-14\" ]]\n   \
    \ [[ $(candidate \"-9999999999999999\") = \"-9999999999999999\" ]]\n    [[ $(candidate\
    \ \"0 10 20 1000000\") = \"0\" ]]\n    [[ $(candidate \"-1 -2 -3 10 -5\") = \"\
    -6\" ]]\n    [[ $(candidate \"100 -1 -2 -3 10 -5\") = \"-6\" ]]\n    [[ $(candidate\
    \ \"10 11 13 8 3 4\") = \"3\" ]]\n    [[ $(candidate \"100 -33 32 -1 0 -2\") =\
    \ \"-33\" ]]\n    [[ $(candidate \"-10\") = \"-10\" ]]\n    [[ $(candidate \"\
    7\") = \"7\" ]]\n    [[ $(candidate \"1 -1\") = \"-1\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: '/tmp/tmpm1uaahor.sh: line 8: local: `2 3 4 1 2 4'': invalid variable name
    for name reference

    '
  stdout: ''
  timestamp: 1660004788
- exit_code: 1
  program: "#!/bin/bash\n# Given an array of integers nums, find the minimum sum of\
    \ any non-empty sub-array\n# of nums.\n# Example\n#\n# $1 is a space-separated\
    \ list\nminSubArraySum() {\n  local -n nums=$1\n  local min=${nums[0]}\n  local\
    \ sum=0\n  for i in \"${nums[@]}\"; do\n    sum=$((sum + i))\n    if [[ $sum -lt\
    \ $min ]]; then\n      min=$sum\n    fi\n    if [[ $sum -gt 0 ]]; then\n     \
    \ sum=0\n    fi\n  done\n  echo $min\n}\n\ncandidate() {\n    minSubArraySum \"\
    $@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"2 3 4 1 2 4\") = \"1\" ]]\n\
    \    [[ $(candidate \"-1 -2 -3\") = \"-6\" ]]\n    [[ $(candidate \"-1 -2 -3 2\
    \ -10\") = \"-14\" ]]\n    [[ $(candidate \"-9999999999999999\") = \"-9999999999999999\"\
    \ ]]\n    [[ $(candidate \"0 10 20 1000000\") = \"0\" ]]\n    [[ $(candidate \"\
    -1 -2 -3 10 -5\") = \"-6\" ]]\n    [[ $(candidate \"100 -1 -2 -3 10 -5\") = \"\
    -6\" ]]\n    [[ $(candidate \"10 11 13 8 3 4\") = \"3\" ]]\n    [[ $(candidate\
    \ \"100 -33 32 -1 0 -2\") = \"-33\" ]]\n    [[ $(candidate \"-10\") = \"-10\"\
    \ ]]\n    [[ $(candidate \"7\") = \"7\" ]]\n    [[ $(candidate \"1 -1\") = \"\
    -1\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: '/tmp/tmp1gqgtdq2.sh: line 8: local: `2 3 4 1 2 4'': invalid variable name
    for name reference

    '
  stdout: ''
  timestamp: 1660004788
- exit_code: 1
  program: "#!/bin/bash\n# Given an array of integers nums, find the minimum sum of\
    \ any non-empty sub-array\n# of nums.\n# Example\n#\n# $1 is a space-separated\
    \ list\nminSubArraySum() {\n    local -n _array=$1\n    local min=${_array[0]}\n\
    \    local sum=0\n    for i in \"${_array[@]}\"; do\n        sum=$((sum + i))\n\
    \        if [[ $sum -lt $min ]]; then\n            min=$sum\n        fi\n    done\n\
    \    echo $min\n}\n\ncandidate() {\n    minSubArraySum \"$@\"\n}\n\nset -e\nrun_test()\
    \ {\n    [[ $(candidate \"2 3 4 1 2 4\") = \"1\" ]]\n    [[ $(candidate \"-1 -2\
    \ -3\") = \"-6\" ]]\n    [[ $(candidate \"-1 -2 -3 2 -10\") = \"-14\" ]]\n   \
    \ [[ $(candidate \"-9999999999999999\") = \"-9999999999999999\" ]]\n    [[ $(candidate\
    \ \"0 10 20 1000000\") = \"0\" ]]\n    [[ $(candidate \"-1 -2 -3 10 -5\") = \"\
    -6\" ]]\n    [[ $(candidate \"100 -1 -2 -3 10 -5\") = \"-6\" ]]\n    [[ $(candidate\
    \ \"10 11 13 8 3 4\") = \"3\" ]]\n    [[ $(candidate \"100 -33 32 -1 0 -2\") =\
    \ \"-33\" ]]\n    [[ $(candidate \"-10\") = \"-10\" ]]\n    [[ $(candidate \"\
    7\") = \"7\" ]]\n    [[ $(candidate \"1 -1\") = \"-1\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: '/tmp/tmpajm684hr.sh: line 8: local: `2 3 4 1 2 4'': invalid variable name
    for name reference

    '
  stdout: ''
  timestamp: 1660004788
- exit_code: 1
  program: "#!/bin/bash\n# Given an array of integers nums, find the minimum sum of\
    \ any non-empty sub-array\n# of nums.\n# Example\n#\n# $1 is a space-separated\
    \ list\nminSubArraySum() {\n    local -n arr=$1\n    local min=${arr[0]}\n   \
    \ local sum=0\n    for i in \"${arr[@]}\"; do\n        sum=$((sum + i))\n    \
    \    if [[ $sum -lt $min ]]; then\n            min=$sum\n        fi\n        if\
    \ [[ $sum -gt 0 ]]; then\n            sum=0\n        fi\n    done\n    echo $min\n\
    }\n\ncandidate() {\n    minSubArraySum \"$@\"\n}\n\nset -e\nrun_test() {\n   \
    \ [[ $(candidate \"2 3 4 1 2 4\") = \"1\" ]]\n    [[ $(candidate \"-1 -2 -3\"\
    ) = \"-6\" ]]\n    [[ $(candidate \"-1 -2 -3 2 -10\") = \"-14\" ]]\n    [[ $(candidate\
    \ \"-9999999999999999\") = \"-9999999999999999\" ]]\n    [[ $(candidate \"0 10\
    \ 20 1000000\") = \"0\" ]]\n    [[ $(candidate \"-1 -2 -3 10 -5\") = \"-6\" ]]\n\
    \    [[ $(candidate \"100 -1 -2 -3 10 -5\") = \"-6\" ]]\n    [[ $(candidate \"\
    10 11 13 8 3 4\") = \"3\" ]]\n    [[ $(candidate \"100 -33 32 -1 0 -2\") = \"\
    -33\" ]]\n    [[ $(candidate \"-10\") = \"-10\" ]]\n    [[ $(candidate \"7\")\
    \ = \"7\" ]]\n    [[ $(candidate \"1 -1\") = \"-1\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: '/tmp/tmpfkquxpek.sh: line 8: local: `2 3 4 1 2 4'': invalid variable name
    for name reference

    '
  stdout: ''
  timestamp: 1660004788
- exit_code: 1
  program: "#!/bin/bash\n# Given an array of integers nums, find the minimum sum of\
    \ any non-empty sub-array\n# of nums.\n# Example\n#\n# $1 is a space-separated\
    \ list\nminSubArraySum() {\n    local -n _array=$1\n    local -i min=0x7fffffff\n\
    \    local -i sum=0\n\n    for i in \"${_array[@]}\"; do\n        sum+=i\n   \
    \     ((sum<min)) && min=sum\n        ((sum>0)) && sum=0\n    done\n\n    echo\
    \ $min\n}\n\ncandidate() {\n    minSubArraySum \"$@\"\n}\n\nset -e\nrun_test()\
    \ {\n    [[ $(candidate \"2 3 4 1 2 4\") = \"1\" ]]\n    [[ $(candidate \"-1 -2\
    \ -3\") = \"-6\" ]]\n    [[ $(candidate \"-1 -2 -3 2 -10\") = \"-14\" ]]\n   \
    \ [[ $(candidate \"-9999999999999999\") = \"-9999999999999999\" ]]\n    [[ $(candidate\
    \ \"0 10 20 1000000\") = \"0\" ]]\n    [[ $(candidate \"-1 -2 -3 10 -5\") = \"\
    -6\" ]]\n    [[ $(candidate \"100 -1 -2 -3 10 -5\") = \"-6\" ]]\n    [[ $(candidate\
    \ \"10 11 13 8 3 4\") = \"3\" ]]\n    [[ $(candidate \"100 -33 32 -1 0 -2\") =\
    \ \"-33\" ]]\n    [[ $(candidate \"-10\") = \"-10\" ]]\n    [[ $(candidate \"\
    7\") = \"7\" ]]\n    [[ $(candidate \"1 -1\") = \"-1\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: '/tmp/tmpq11ln66s.sh: line 8: local: `2 3 4 1 2 4'': invalid variable name
    for name reference

    '
  stdout: ''
  timestamp: 1660004788
- exit_code: 0
  program: "#!/bin/bash\n# Given an array of integers nums, find the minimum sum of\
    \ any non-empty sub-array\n# of nums.\n# Example\n#\n# $1 is a space-separated\
    \ list\nminSubArraySum() {\n    local -a nums=($1)\n    local min=${nums[0]}\n\
    \    local sum=0\n    for i in \"${nums[@]}\"; do\n        sum=$((sum + i))\n\
    \        if [[ $sum -lt $min ]]; then\n            min=$sum\n        fi\n    \
    \    if [[ $sum -gt 0 ]]; then\n            sum=0\n        fi\n    done\n    echo\
    \ $min\n}\n\ncandidate() {\n    minSubArraySum \"$@\"\n}\n\nset -e\nrun_test()\
    \ {\n    [[ $(candidate \"2 3 4 1 2 4\") = \"1\" ]]\n    [[ $(candidate \"-1 -2\
    \ -3\") = \"-6\" ]]\n    [[ $(candidate \"-1 -2 -3 2 -10\") = \"-14\" ]]\n   \
    \ [[ $(candidate \"-9999999999999999\") = \"-9999999999999999\" ]]\n    [[ $(candidate\
    \ \"0 10 20 1000000\") = \"0\" ]]\n    [[ $(candidate \"-1 -2 -3 10 -5\") = \"\
    -6\" ]]\n    [[ $(candidate \"100 -1 -2 -3 10 -5\") = \"-6\" ]]\n    [[ $(candidate\
    \ \"10 11 13 8 3 4\") = \"3\" ]]\n    [[ $(candidate \"100 -33 32 -1 0 -2\") =\
    \ \"-33\" ]]\n    [[ $(candidate \"-10\") = \"-10\" ]]\n    [[ $(candidate \"\
    7\") = \"7\" ]]\n    [[ $(candidate \"1 -1\") = \"-1\" ]]\n}\n\nrun_test"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660004788
- exit_code: 1
  program: "#!/bin/bash\n# Given an array of integers nums, find the minimum sum of\
    \ any non-empty sub-array\n# of nums.\n# Example\n#\n# $1 is a space-separated\
    \ list\nminSubArraySum() {\n    local -n nums=$1\n    local min_sum=${nums[0]}\n\
    \    local curr_sum=0\n    for num in \"${nums[@]}\"; do\n        curr_sum=$((curr_sum\
    \ + num))\n        if [[ $curr_sum -lt $min_sum ]]; then\n            min_sum=$curr_sum\n\
    \        fi\n        if [[ $curr_sum -gt 0 ]]; then\n            curr_sum=0\n\
    \        fi\n    done\n    echo $min_sum\n}\n\ncandidate() {\n    minSubArraySum\
    \ \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"2 3 4 1 2 4\") = \"\
    1\" ]]\n    [[ $(candidate \"-1 -2 -3\") = \"-6\" ]]\n    [[ $(candidate \"-1\
    \ -2 -3 2 -10\") = \"-14\" ]]\n    [[ $(candidate \"-9999999999999999\") = \"\
    -9999999999999999\" ]]\n    [[ $(candidate \"0 10 20 1000000\") = \"0\" ]]\n \
    \   [[ $(candidate \"-1 -2 -3 10 -5\") = \"-6\" ]]\n    [[ $(candidate \"100 -1\
    \ -2 -3 10 -5\") = \"-6\" ]]\n    [[ $(candidate \"10 11 13 8 3 4\") = \"3\" ]]\n\
    \    [[ $(candidate \"100 -33 32 -1 0 -2\") = \"-33\" ]]\n    [[ $(candidate \"\
    -10\") = \"-10\" ]]\n    [[ $(candidate \"7\") = \"7\" ]]\n    [[ $(candidate\
    \ \"1 -1\") = \"-1\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: '/tmp/tmpz3cxmitj.sh: line 8: local: `2 3 4 1 2 4'': invalid variable name
    for name reference

    '
  stdout: ''
  timestamp: 1660004788
- exit_code: 1
  program: "#!/bin/bash\n# Given an array of integers nums, find the minimum sum of\
    \ any non-empty sub-array\n# of nums.\n# Example\n#\n# $1 is a space-separated\
    \ list\nminSubArraySum() {\n    local -n nums=$1\n    local min=${nums[0]}\n \
    \   local sum=0\n    for num in \"${nums[@]}\"; do\n        sum=$((sum + num))\n\
    \        if [[ $sum -lt $min ]]; then\n            min=$sum\n        fi\n    \
    \    if [[ $sum -gt 0 ]]; then\n            sum=0\n        fi\n    done\n    echo\
    \ $min\n}\n\ncandidate() {\n    minSubArraySum \"$@\"\n}\n\nset -e\nrun_test()\
    \ {\n    [[ $(candidate \"2 3 4 1 2 4\") = \"1\" ]]\n    [[ $(candidate \"-1 -2\
    \ -3\") = \"-6\" ]]\n    [[ $(candidate \"-1 -2 -3 2 -10\") = \"-14\" ]]\n   \
    \ [[ $(candidate \"-9999999999999999\") = \"-9999999999999999\" ]]\n    [[ $(candidate\
    \ \"0 10 20 1000000\") = \"0\" ]]\n    [[ $(candidate \"-1 -2 -3 10 -5\") = \"\
    -6\" ]]\n    [[ $(candidate \"100 -1 -2 -3 10 -5\") = \"-6\" ]]\n    [[ $(candidate\
    \ \"10 11 13 8 3 4\") = \"3\" ]]\n    [[ $(candidate \"100 -33 32 -1 0 -2\") =\
    \ \"-33\" ]]\n    [[ $(candidate \"-10\") = \"-10\" ]]\n    [[ $(candidate \"\
    7\") = \"7\" ]]\n    [[ $(candidate \"1 -1\") = \"-1\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: '/tmp/tmpk635_irt.sh: line 8: local: `2 3 4 1 2 4'': invalid variable name
    for name reference

    '
  stdout: ''
  timestamp: 1660004788
- exit_code: 0
  program: "#!/bin/bash\n# Given an array of integers nums, find the minimum sum of\
    \ any non-empty sub-array\n# of nums.\n# Example\n#\n# $1 is a space-separated\
    \ list\nminSubArraySum() {\n    local nums=($1)\n    local min=${nums[0]}\n  \
    \  local sum=0\n    for i in \"${nums[@]}\"; do\n        sum=$((sum + i))\n  \
    \      if ((sum < min)); then\n            min=$sum\n        fi\n        if ((sum\
    \ > 0)); then\n            sum=0\n        fi\n    done\n    echo $min\n}\n\ncandidate()\
    \ {\n    minSubArraySum \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate\
    \ \"2 3 4 1 2 4\") = \"1\" ]]\n    [[ $(candidate \"-1 -2 -3\") = \"-6\" ]]\n\
    \    [[ $(candidate \"-1 -2 -3 2 -10\") = \"-14\" ]]\n    [[ $(candidate \"-9999999999999999\"\
    ) = \"-9999999999999999\" ]]\n    [[ $(candidate \"0 10 20 1000000\") = \"0\"\
    \ ]]\n    [[ $(candidate \"-1 -2 -3 10 -5\") = \"-6\" ]]\n    [[ $(candidate \"\
    100 -1 -2 -3 10 -5\") = \"-6\" ]]\n    [[ $(candidate \"10 11 13 8 3 4\") = \"\
    3\" ]]\n    [[ $(candidate \"100 -33 32 -1 0 -2\") = \"-33\" ]]\n    [[ $(candidate\
    \ \"-10\") = \"-10\" ]]\n    [[ $(candidate \"7\") = \"7\" ]]\n    [[ $(candidate\
    \ \"1 -1\") = \"-1\" ]]\n}\n\nrun_test"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660004788
- exit_code: 1
  program: "#!/bin/bash\n# Given an array of integers nums, find the minimum sum of\
    \ any non-empty sub-array\n# of nums.\n# Example\n#\n# $1 is a space-separated\
    \ list\nminSubArraySum() {\n    local nums=(\"$@\")\n    local min=${nums[0]}\n\
    \    local sum=0\n    for i in \"${nums[@]}\"; do\n        sum=$((sum + i))\n\
    \        if [[ $sum -lt $min ]]; then\n            min=$sum\n        fi\n    \
    \    if [[ $sum -gt 0 ]]; then\n            sum=0\n        fi\n    done\n    echo\
    \ $min\n}\n\ncandidate() {\n    minSubArraySum \"$@\"\n}\n\nset -e\nrun_test()\
    \ {\n    [[ $(candidate \"2 3 4 1 2 4\") = \"1\" ]]\n    [[ $(candidate \"-1 -2\
    \ -3\") = \"-6\" ]]\n    [[ $(candidate \"-1 -2 -3 2 -10\") = \"-14\" ]]\n   \
    \ [[ $(candidate \"-9999999999999999\") = \"-9999999999999999\" ]]\n    [[ $(candidate\
    \ \"0 10 20 1000000\") = \"0\" ]]\n    [[ $(candidate \"-1 -2 -3 10 -5\") = \"\
    -6\" ]]\n    [[ $(candidate \"100 -1 -2 -3 10 -5\") = \"-6\" ]]\n    [[ $(candidate\
    \ \"10 11 13 8 3 4\") = \"3\" ]]\n    [[ $(candidate \"100 -33 32 -1 0 -2\") =\
    \ \"-33\" ]]\n    [[ $(candidate \"-10\") = \"-10\" ]]\n    [[ $(candidate \"\
    7\") = \"7\" ]]\n    [[ $(candidate \"1 -1\") = \"-1\" ]]\n}\n\nrun_test"
  status: SyntaxError
  stderr: '/tmp/tmppbf_4c5s.sh: line 12: 2 3 4 1 2 4: syntax error in expression (error
    token is "3 4 1 2 4")

    '
  stdout: ''
  timestamp: 1660004788
- exit_code: 1
  program: "#!/bin/bash\n# Given an array of integers nums, find the minimum sum of\
    \ any non-empty sub-array\n# of nums.\n# Example\n#\n# $1 is a space-separated\
    \ list\nminSubArraySum() {\n  local -a nums\n  local min_sum=0\n  local sum=0\n\
    \  local i=0\n  local j=0\n  local k=0\n  local n=0\n  local min_n=0\n  local\
    \ min_i=0\n  local min_j=0\n  nums=($1)\n  n=${#nums[@]}\n  min_sum=${nums[0]}\n\
    \  min_n=1\n  min_i=0\n  min_j=0\n  for ((i=0; i<n; i++)); do\n    sum=0\n   \
    \ for ((j=i; j<n; j++)); do\n      sum=$((sum + nums[j]))\n      if [[ $sum -lt\
    \ $min_sum ]]; then\n        min_sum=$sum\n        min_n=$((j - i + 1))\n    \
    \    min_i=$i\n        min_j=$j\n      elif [[ $sum -eq $min_sum ]]; then\n  \
    \      if [[ $((j - i + 1)) -lt $min_n ]]; then\n          min_n=$((j - i + 1))\n\
    \          min_i=$i\n          min_j=$j\n        fi\n      fi\n    done\n  done\n\
    \  echo -n \"min_sum=$min_sum, min_n=$min_n, min_i=$min_i, min_j=$min_j, \"\n\
    \  echo -n \"min_array=[\"\n  for ((k=min_i; k<=min_j; k++)); do\n    echo -n\
    \ \"${nums[k]}\"\n    if [[ $k -lt $min_j ]]; then\n      echo -n \", \"\n   \
    \ fi\n  done\n  echo \"]\"\n}\n\ncandidate() {\n    minSubArraySum \"$@\"\n}\n\
    \nset -e\nrun_test() {\n    [[ $(candidate \"2 3 4 1 2 4\") = \"1\" ]]\n    [[\
    \ $(candidate \"-1 -2 -3\") = \"-6\" ]]\n    [[ $(candidate \"-1 -2 -3 2 -10\"\
    ) = \"-14\" ]]\n    [[ $(candidate \"-9999999999999999\") = \"-9999999999999999\"\
    \ ]]\n    [[ $(candidate \"0 10 20 1000000\") = \"0\" ]]\n    [[ $(candidate \"\
    -1 -2 -3 10 -5\") = \"-6\" ]]\n    [[ $(candidate \"100 -1 -2 -3 10 -5\") = \"\
    -6\" ]]\n    [[ $(candidate \"10 11 13 8 3 4\") = \"3\" ]]\n    [[ $(candidate\
    \ \"100 -33 32 -1 0 -2\") = \"-33\" ]]\n    [[ $(candidate \"-10\") = \"-10\"\
    \ ]]\n    [[ $(candidate \"7\") = \"7\" ]]\n    [[ $(candidate \"1 -1\") = \"\
    -1\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660004788
- exit_code: 0
  program: "#!/bin/bash\n# Given an array of integers nums, find the minimum sum of\
    \ any non-empty sub-array\n# of nums.\n# Example\n#\n# $1 is a space-separated\
    \ list\nminSubArraySum() {\n    local -a nums\n    IFS=' ' read -r -a nums <<<\
    \ \"$1\"\n    local min_sum=${nums[0]}\n    local sum=0\n    for i in \"${nums[@]}\"\
    ; do\n        sum=$((sum + i))\n        if [[ $sum -lt $min_sum ]]; then\n   \
    \         min_sum=$sum\n        fi\n        if [[ $sum -gt 0 ]]; then\n      \
    \      sum=0\n        fi\n    done\n    echo $min_sum\n}\n\ncandidate() {\n  \
    \  minSubArraySum \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"2 3\
    \ 4 1 2 4\") = \"1\" ]]\n    [[ $(candidate \"-1 -2 -3\") = \"-6\" ]]\n    [[\
    \ $(candidate \"-1 -2 -3 2 -10\") = \"-14\" ]]\n    [[ $(candidate \"-9999999999999999\"\
    ) = \"-9999999999999999\" ]]\n    [[ $(candidate \"0 10 20 1000000\") = \"0\"\
    \ ]]\n    [[ $(candidate \"-1 -2 -3 10 -5\") = \"-6\" ]]\n    [[ $(candidate \"\
    100 -1 -2 -3 10 -5\") = \"-6\" ]]\n    [[ $(candidate \"10 11 13 8 3 4\") = \"\
    3\" ]]\n    [[ $(candidate \"100 -33 32 -1 0 -2\") = \"-33\" ]]\n    [[ $(candidate\
    \ \"-10\") = \"-10\" ]]\n    [[ $(candidate \"7\") = \"7\" ]]\n    [[ $(candidate\
    \ \"1 -1\") = \"-1\" ]]\n}\n\nrun_test"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660004788
- exit_code: 1
  program: "#!/bin/bash\n# Given an array of integers nums, find the minimum sum of\
    \ any non-empty sub-array\n# of nums.\n# Example\n#\n# $1 is a space-separated\
    \ list\nminSubArraySum() {\n    local -a nums=(\"$@\")\n    local minSum=${nums[0]}\n\
    \    local sum=0\n    for num in \"${nums[@]}\"; do\n        sum=$((sum + num))\n\
    \        if [[ $sum -lt $minSum ]]; then\n            minSum=$sum\n        fi\n\
    \        if [[ $sum -gt 0 ]]; then\n            sum=0\n        fi\n    done\n\
    \    echo $minSum\n}\n\ncandidate() {\n    minSubArraySum \"$@\"\n}\n\nset -e\n\
    run_test() {\n    [[ $(candidate \"2 3 4 1 2 4\") = \"1\" ]]\n    [[ $(candidate\
    \ \"-1 -2 -3\") = \"-6\" ]]\n    [[ $(candidate \"-1 -2 -3 2 -10\") = \"-14\"\
    \ ]]\n    [[ $(candidate \"-9999999999999999\") = \"-9999999999999999\" ]]\n \
    \   [[ $(candidate \"0 10 20 1000000\") = \"0\" ]]\n    [[ $(candidate \"-1 -2\
    \ -3 10 -5\") = \"-6\" ]]\n    [[ $(candidate \"100 -1 -2 -3 10 -5\") = \"-6\"\
    \ ]]\n    [[ $(candidate \"10 11 13 8 3 4\") = \"3\" ]]\n    [[ $(candidate \"\
    100 -33 32 -1 0 -2\") = \"-33\" ]]\n    [[ $(candidate \"-10\") = \"-10\" ]]\n\
    \    [[ $(candidate \"7\") = \"7\" ]]\n    [[ $(candidate \"1 -1\") = \"-1\" ]]\n\
    }\n\nrun_test"
  status: SyntaxError
  stderr: '/tmp/tmpuu2t8xtq.sh: line 12: 2 3 4 1 2 4: syntax error in expression (error
    token is "3 4 1 2 4")

    '
  stdout: ''
  timestamp: 1660004788
- exit_code: 1
  program: "#!/bin/bash\n# Given an array of integers nums, find the minimum sum of\
    \ any non-empty sub-array\n# of nums.\n# Example\n#\n# $1 is a space-separated\
    \ list\nminSubArraySum() {\n  local -a nums=(\"$@\")\n  local min=0\n  local sum=0\n\
    \  for i in \"${nums[@]}\"; do\n    sum=$((sum + i))\n    if [[ $sum -lt $min\
    \ ]]; then\n      min=$sum\n    fi\n  done\n  echo $min\n}\n\ncandidate() {\n\
    \    minSubArraySum \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"2\
    \ 3 4 1 2 4\") = \"1\" ]]\n    [[ $(candidate \"-1 -2 -3\") = \"-6\" ]]\n    [[\
    \ $(candidate \"-1 -2 -3 2 -10\") = \"-14\" ]]\n    [[ $(candidate \"-9999999999999999\"\
    ) = \"-9999999999999999\" ]]\n    [[ $(candidate \"0 10 20 1000000\") = \"0\"\
    \ ]]\n    [[ $(candidate \"-1 -2 -3 10 -5\") = \"-6\" ]]\n    [[ $(candidate \"\
    100 -1 -2 -3 10 -5\") = \"-6\" ]]\n    [[ $(candidate \"10 11 13 8 3 4\") = \"\
    3\" ]]\n    [[ $(candidate \"100 -33 32 -1 0 -2\") = \"-33\" ]]\n    [[ $(candidate\
    \ \"-10\") = \"-10\" ]]\n    [[ $(candidate \"7\") = \"7\" ]]\n    [[ $(candidate\
    \ \"1 -1\") = \"-1\" ]]\n}\n\nrun_test"
  status: SyntaxError
  stderr: '/tmp/tmpitsj93xs.sh: line 12: 2 3 4 1 2 4: syntax error in expression (error
    token is "3 4 1 2 4")

    '
  stdout: ''
  timestamp: 1660004788
- exit_code: 1
  program: "#!/bin/bash\n# Given an array of integers nums, find the minimum sum of\
    \ any non-empty sub-array\n# of nums.\n# Example\n#\n# $1 is a space-separated\
    \ list\nminSubArraySum() {\n    local -n _arr=$1\n    local min=${_arr[0]}\n \
    \   local sum=0\n    for i in \"${_arr[@]}\"; do\n        sum=$((sum + i))\n \
    \       if [[ $sum -lt $min ]]; then\n            min=$sum\n        fi\n     \
    \   if [[ $sum -gt 0 ]]; then\n            sum=0\n        fi\n    done\n    echo\
    \ $min\n}\n\ncandidate() {\n    minSubArraySum \"$@\"\n}\n\nset -e\nrun_test()\
    \ {\n    [[ $(candidate \"2 3 4 1 2 4\") = \"1\" ]]\n    [[ $(candidate \"-1 -2\
    \ -3\") = \"-6\" ]]\n    [[ $(candidate \"-1 -2 -3 2 -10\") = \"-14\" ]]\n   \
    \ [[ $(candidate \"-9999999999999999\") = \"-9999999999999999\" ]]\n    [[ $(candidate\
    \ \"0 10 20 1000000\") = \"0\" ]]\n    [[ $(candidate \"-1 -2 -3 10 -5\") = \"\
    -6\" ]]\n    [[ $(candidate \"100 -1 -2 -3 10 -5\") = \"-6\" ]]\n    [[ $(candidate\
    \ \"10 11 13 8 3 4\") = \"3\" ]]\n    [[ $(candidate \"100 -33 32 -1 0 -2\") =\
    \ \"-33\" ]]\n    [[ $(candidate \"-10\") = \"-10\" ]]\n    [[ $(candidate \"\
    7\") = \"7\" ]]\n    [[ $(candidate \"1 -1\") = \"-1\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: '/tmp/tmpm1uaahor.sh: line 8: local: `2 3 4 1 2 4'': invalid variable name
    for name reference

    '
  stdout: ''
  timestamp: 1660004788
- exit_code: 1
  program: "#!/bin/bash\n# Given an array of integers nums, find the minimum sum of\
    \ any non-empty sub-array\n# of nums.\n# Example\n#\n# $1 is a space-separated\
    \ list\nminSubArraySum() {\n    local -n _nums=$1\n    local min_sum=${_nums[0]}\n\
    \    local sum=0\n    for ((i=0; i<${#_nums[@]}; i++)); do\n        sum=$((sum\
    \ + ${_nums[i]}))\n        if ((sum < min_sum)); then\n            min_sum=$sum\n\
    \        fi\n        if ((sum > 0)); then\n            sum=0\n        fi\n   \
    \ done\n    echo $min_sum\n}\n\ncandidate() {\n    minSubArraySum \"$@\"\n}\n\n\
    set -e\nrun_test() {\n    [[ $(candidate \"2 3 4 1 2 4\") = \"1\" ]]\n    [[ $(candidate\
    \ \"-1 -2 -3\") = \"-6\" ]]\n    [[ $(candidate \"-1 -2 -3 2 -10\") = \"-14\"\
    \ ]]\n    [[ $(candidate \"-9999999999999999\") = \"-9999999999999999\" ]]\n \
    \   [[ $(candidate \"0 10 20 1000000\") = \"0\" ]]\n    [[ $(candidate \"-1 -2\
    \ -3 10 -5\") = \"-6\" ]]\n    [[ $(candidate \"100 -1 -2 -3 10 -5\") = \"-6\"\
    \ ]]\n    [[ $(candidate \"10 11 13 8 3 4\") = \"3\" ]]\n    [[ $(candidate \"\
    100 -33 32 -1 0 -2\") = \"-33\" ]]\n    [[ $(candidate \"-10\") = \"-10\" ]]\n\
    \    [[ $(candidate \"7\") = \"7\" ]]\n    [[ $(candidate \"1 -1\") = \"-1\" ]]\n\
    }\n\nrun_test"
  status: Exception
  stderr: '/tmp/tmp3s_tb1zj.sh: line 8: local: `2 3 4 1 2 4'': invalid variable name
    for name reference

    '
  stdout: ''
  timestamp: 1660004788
- exit_code: 0
  program: "#!/bin/bash\n# Given an array of integers nums, find the minimum sum of\
    \ any non-empty sub-array\n# of nums.\n# Example\n#\n# $1 is a space-separated\
    \ list\nminSubArraySum() {\n    local -a nums=($1)\n    local min=${nums[0]}\n\
    \    local sum=0\n    for i in \"${nums[@]}\"; do\n        sum=$((sum + i))\n\
    \        if [[ $sum -lt $min ]]; then\n            min=$sum\n        fi\n    \
    \    if [[ $sum -gt 0 ]]; then\n            sum=0\n        fi\n    done\n    echo\
    \ $min\n}\n\ncandidate() {\n    minSubArraySum \"$@\"\n}\n\nset -e\nrun_test()\
    \ {\n    [[ $(candidate \"2 3 4 1 2 4\") = \"1\" ]]\n    [[ $(candidate \"-1 -2\
    \ -3\") = \"-6\" ]]\n    [[ $(candidate \"-1 -2 -3 2 -10\") = \"-14\" ]]\n   \
    \ [[ $(candidate \"-9999999999999999\") = \"-9999999999999999\" ]]\n    [[ $(candidate\
    \ \"0 10 20 1000000\") = \"0\" ]]\n    [[ $(candidate \"-1 -2 -3 10 -5\") = \"\
    -6\" ]]\n    [[ $(candidate \"100 -1 -2 -3 10 -5\") = \"-6\" ]]\n    [[ $(candidate\
    \ \"10 11 13 8 3 4\") = \"3\" ]]\n    [[ $(candidate \"100 -33 32 -1 0 -2\") =\
    \ \"-33\" ]]\n    [[ $(candidate \"-10\") = \"-10\" ]]\n    [[ $(candidate \"\
    7\") = \"7\" ]]\n    [[ $(candidate \"1 -1\") = \"-1\" ]]\n}\n\nrun_test"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660004788
- exit_code: 1
  program: "#!/bin/bash\n# Given an array of integers nums, find the minimum sum of\
    \ any non-empty sub-array\n# of nums.\n# Example\n#\n# $1 is a space-separated\
    \ list\nminSubArraySum() {\n  local -n _nums=$1\n  local minSum=${_nums[0]}\n\
    \  local currSum=0\n  for num in \"${_nums[@]}\"; do\n    currSum=$((currSum +\
    \ num))\n    if ((currSum < minSum)); then\n      minSum=$currSum\n    fi\n  \
    \  if ((currSum > 0)); then\n      currSum=0\n    fi\n  done\n  echo $minSum\n\
    }\n\ncandidate() {\n    minSubArraySum \"$@\"\n}\n\nset -e\nrun_test() {\n   \
    \ [[ $(candidate \"2 3 4 1 2 4\") = \"1\" ]]\n    [[ $(candidate \"-1 -2 -3\"\
    ) = \"-6\" ]]\n    [[ $(candidate \"-1 -2 -3 2 -10\") = \"-14\" ]]\n    [[ $(candidate\
    \ \"-9999999999999999\") = \"-9999999999999999\" ]]\n    [[ $(candidate \"0 10\
    \ 20 1000000\") = \"0\" ]]\n    [[ $(candidate \"-1 -2 -3 10 -5\") = \"-6\" ]]\n\
    \    [[ $(candidate \"100 -1 -2 -3 10 -5\") = \"-6\" ]]\n    [[ $(candidate \"\
    10 11 13 8 3 4\") = \"3\" ]]\n    [[ $(candidate \"100 -33 32 -1 0 -2\") = \"\
    -33\" ]]\n    [[ $(candidate \"-10\") = \"-10\" ]]\n    [[ $(candidate \"7\")\
    \ = \"7\" ]]\n    [[ $(candidate \"1 -1\") = \"-1\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: '/tmp/tmpsewae9dd.sh: line 8: local: `2 3 4 1 2 4'': invalid variable name
    for name reference

    '
  stdout: ''
  timestamp: 1660004788
- exit_code: 1
  program: "#!/bin/bash\n# Given an array of integers nums, find the minimum sum of\
    \ any non-empty sub-array\n# of nums.\n# Example\n#\n# $1 is a space-separated\
    \ list\nminSubArraySum() {\n    local -n _nums=$1\n    local min=${_nums[0]}\n\
    \    local sum=0\n    for num in \"${_nums[@]}\"; do\n        (( sum += num ))\n\
    \        (( sum < min )) && min=$sum\n        (( sum > 0 )) && sum=0\n    done\n\
    \    echo $min\n}\n\ncandidate() {\n    minSubArraySum \"$@\"\n}\n\nset -e\nrun_test()\
    \ {\n    [[ $(candidate \"2 3 4 1 2 4\") = \"1\" ]]\n    [[ $(candidate \"-1 -2\
    \ -3\") = \"-6\" ]]\n    [[ $(candidate \"-1 -2 -3 2 -10\") = \"-14\" ]]\n   \
    \ [[ $(candidate \"-9999999999999999\") = \"-9999999999999999\" ]]\n    [[ $(candidate\
    \ \"0 10 20 1000000\") = \"0\" ]]\n    [[ $(candidate \"-1 -2 -3 10 -5\") = \"\
    -6\" ]]\n    [[ $(candidate \"100 -1 -2 -3 10 -5\") = \"-6\" ]]\n    [[ $(candidate\
    \ \"10 11 13 8 3 4\") = \"3\" ]]\n    [[ $(candidate \"100 -33 32 -1 0 -2\") =\
    \ \"-33\" ]]\n    [[ $(candidate \"-10\") = \"-10\" ]]\n    [[ $(candidate \"\
    7\") = \"7\" ]]\n    [[ $(candidate \"1 -1\") = \"-1\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: '/tmp/tmpqbrcnw9o.sh: line 8: local: `2 3 4 1 2 4'': invalid variable name
    for name reference

    '
  stdout: ''
  timestamp: 1660004788
- exit_code: 0
  program: "#!/bin/bash\n# Given an array of integers nums, find the minimum sum of\
    \ any non-empty sub-array\n# of nums.\n# Example\n#\n# $1 is a space-separated\
    \ list\nminSubArraySum() {\n  local -r nums=($1)\n  local -i minSum=0x7fffffff\n\
    \  local -i sum=0\n  for (( i=0; i<${#nums[@]}; i++ )); do\n    sum+=${nums[i]}\n\
    \    if (( sum < minSum )); then\n      minSum=sum\n    fi\n    if (( sum > 0\
    \ )); then\n      sum=0\n    fi\n  done\n  echo $minSum\n}\n\ncandidate() {\n\
    \    minSubArraySum \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"2\
    \ 3 4 1 2 4\") = \"1\" ]]\n    [[ $(candidate \"-1 -2 -3\") = \"-6\" ]]\n    [[\
    \ $(candidate \"-1 -2 -3 2 -10\") = \"-14\" ]]\n    [[ $(candidate \"-9999999999999999\"\
    ) = \"-9999999999999999\" ]]\n    [[ $(candidate \"0 10 20 1000000\") = \"0\"\
    \ ]]\n    [[ $(candidate \"-1 -2 -3 10 -5\") = \"-6\" ]]\n    [[ $(candidate \"\
    100 -1 -2 -3 10 -5\") = \"-6\" ]]\n    [[ $(candidate \"10 11 13 8 3 4\") = \"\
    3\" ]]\n    [[ $(candidate \"100 -33 32 -1 0 -2\") = \"-33\" ]]\n    [[ $(candidate\
    \ \"-10\") = \"-10\" ]]\n    [[ $(candidate \"7\") = \"7\" ]]\n    [[ $(candidate\
    \ \"1 -1\") = \"-1\" ]]\n}\n\nrun_test"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660004788
- exit_code: 1
  program: "#!/bin/bash\n# Given an array of integers nums, find the minimum sum of\
    \ any non-empty sub-array\n# of nums.\n# Example\n#\n# $1 is a space-separated\
    \ list\nminSubArraySum() {\n    local -n nums=$1\n    local min_sum=${nums[0]}\n\
    \    local sum=0\n    for num in \"${nums[@]}\"; do\n        sum=$((sum + num))\n\
    \        if [[ $sum -lt $min_sum ]]; then\n            min_sum=$sum\n        fi\n\
    \        if [[ $sum -lt 0 ]]; then\n            sum=0\n        fi\n    done\n\
    \    echo $min_sum\n}\n\ncandidate() {\n    minSubArraySum \"$@\"\n}\n\nset -e\n\
    run_test() {\n    [[ $(candidate \"2 3 4 1 2 4\") = \"1\" ]]\n    [[ $(candidate\
    \ \"-1 -2 -3\") = \"-6\" ]]\n    [[ $(candidate \"-1 -2 -3 2 -10\") = \"-14\"\
    \ ]]\n    [[ $(candidate \"-9999999999999999\") = \"-9999999999999999\" ]]\n \
    \   [[ $(candidate \"0 10 20 1000000\") = \"0\" ]]\n    [[ $(candidate \"-1 -2\
    \ -3 10 -5\") = \"-6\" ]]\n    [[ $(candidate \"100 -1 -2 -3 10 -5\") = \"-6\"\
    \ ]]\n    [[ $(candidate \"10 11 13 8 3 4\") = \"3\" ]]\n    [[ $(candidate \"\
    100 -33 32 -1 0 -2\") = \"-33\" ]]\n    [[ $(candidate \"-10\") = \"-10\" ]]\n\
    \    [[ $(candidate \"7\") = \"7\" ]]\n    [[ $(candidate \"1 -1\") = \"-1\" ]]\n\
    }\n\nrun_test"
  status: Exception
  stderr: '/tmp/tmpwopb3il1.sh: line 8: local: `2 3 4 1 2 4'': invalid variable name
    for name reference

    '
  stdout: ''
  timestamp: 1660004788
- exit_code: 1
  program: "#!/bin/bash\n# Given an array of integers nums, find the minimum sum of\
    \ any non-empty sub-array\n# of nums.\n# Example\n#\n# $1 is a space-separated\
    \ list\nminSubArraySum() {\n  local -n nums=$1\n  local min_sum=${nums[0]}\n \
    \ local sum=0\n  for ((i=0; i<${#nums[@]}; i++)); do\n    sum=$((sum + nums[i]))\n\
    \    if ((sum < min_sum)); then\n      min_sum=$sum\n    fi\n    if ((sum > 0));\
    \ then\n      sum=0\n    fi\n  done\n  echo $min_sum\n}\n\ncandidate() {\n   \
    \ minSubArraySum \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"2 3 4\
    \ 1 2 4\") = \"1\" ]]\n    [[ $(candidate \"-1 -2 -3\") = \"-6\" ]]\n    [[ $(candidate\
    \ \"-1 -2 -3 2 -10\") = \"-14\" ]]\n    [[ $(candidate \"-9999999999999999\")\
    \ = \"-9999999999999999\" ]]\n    [[ $(candidate \"0 10 20 1000000\") = \"0\"\
    \ ]]\n    [[ $(candidate \"-1 -2 -3 10 -5\") = \"-6\" ]]\n    [[ $(candidate \"\
    100 -1 -2 -3 10 -5\") = \"-6\" ]]\n    [[ $(candidate \"10 11 13 8 3 4\") = \"\
    3\" ]]\n    [[ $(candidate \"100 -33 32 -1 0 -2\") = \"-33\" ]]\n    [[ $(candidate\
    \ \"-10\") = \"-10\" ]]\n    [[ $(candidate \"7\") = \"7\" ]]\n    [[ $(candidate\
    \ \"1 -1\") = \"-1\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: '/tmp/tmptb_9tita.sh: line 8: local: `2 3 4 1 2 4'': invalid variable name
    for name reference

    '
  stdout: ''
  timestamp: 1660004788
- exit_code: 1
  program: "#!/bin/bash\n# Given an array of integers nums, find the minimum sum of\
    \ any non-empty sub-array\n# of nums.\n# Example\n#\n# $1 is a space-separated\
    \ list\nminSubArraySum() {\n    local -n nums=$1\n    local min_sum=${nums[0]}\n\
    \    local sum=0\n    for i in \"${nums[@]}\"; do\n        sum=$((sum + i))\n\
    \        if [[ $sum -lt $min_sum ]]; then\n            min_sum=$sum\n        fi\n\
    \        if [[ $sum -lt 0 ]]; then\n            sum=0\n        fi\n    done\n\
    \    echo $min_sum\n}\n\ncandidate() {\n    minSubArraySum \"$@\"\n}\n\nset -e\n\
    run_test() {\n    [[ $(candidate \"2 3 4 1 2 4\") = \"1\" ]]\n    [[ $(candidate\
    \ \"-1 -2 -3\") = \"-6\" ]]\n    [[ $(candidate \"-1 -2 -3 2 -10\") = \"-14\"\
    \ ]]\n    [[ $(candidate \"-9999999999999999\") = \"-9999999999999999\" ]]\n \
    \   [[ $(candidate \"0 10 20 1000000\") = \"0\" ]]\n    [[ $(candidate \"-1 -2\
    \ -3 10 -5\") = \"-6\" ]]\n    [[ $(candidate \"100 -1 -2 -3 10 -5\") = \"-6\"\
    \ ]]\n    [[ $(candidate \"10 11 13 8 3 4\") = \"3\" ]]\n    [[ $(candidate \"\
    100 -33 32 -1 0 -2\") = \"-33\" ]]\n    [[ $(candidate \"-10\") = \"-10\" ]]\n\
    \    [[ $(candidate \"7\") = \"7\" ]]\n    [[ $(candidate \"1 -1\") = \"-1\" ]]\n\
    }\n\nrun_test"
  status: Exception
  stderr: '/tmp/tmpqvf68s47.sh: line 8: local: `2 3 4 1 2 4'': invalid variable name
    for name reference

    '
  stdout: ''
  timestamp: 1660004788
- exit_code: 1
  program: "#!/bin/bash\n# Given an array of integers nums, find the minimum sum of\
    \ any non-empty sub-array\n# of nums.\n# Example\n#\n# $1 is a space-separated\
    \ list\nminSubArraySum() {\n    local -n _array=$1\n    local min=${_array[0]}\n\
    \    local sum=0\n    for i in \"${_array[@]}\"; do\n        sum=$((sum + i))\n\
    \        if [[ $sum -lt $min ]]; then\n            min=$sum\n        fi\n    done\n\
    \    echo $min\n}\n\ncandidate() {\n    minSubArraySum \"$@\"\n}\n\nset -e\nrun_test()\
    \ {\n    [[ $(candidate \"2 3 4 1 2 4\") = \"1\" ]]\n    [[ $(candidate \"-1 -2\
    \ -3\") = \"-6\" ]]\n    [[ $(candidate \"-1 -2 -3 2 -10\") = \"-14\" ]]\n   \
    \ [[ $(candidate \"-9999999999999999\") = \"-9999999999999999\" ]]\n    [[ $(candidate\
    \ \"0 10 20 1000000\") = \"0\" ]]\n    [[ $(candidate \"-1 -2 -3 10 -5\") = \"\
    -6\" ]]\n    [[ $(candidate \"100 -1 -2 -3 10 -5\") = \"-6\" ]]\n    [[ $(candidate\
    \ \"10 11 13 8 3 4\") = \"3\" ]]\n    [[ $(candidate \"100 -33 32 -1 0 -2\") =\
    \ \"-33\" ]]\n    [[ $(candidate \"-10\") = \"-10\" ]]\n    [[ $(candidate \"\
    7\") = \"7\" ]]\n    [[ $(candidate \"1 -1\") = \"-1\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: '/tmp/tmpajm684hr.sh: line 8: local: `2 3 4 1 2 4'': invalid variable name
    for name reference

    '
  stdout: ''
  timestamp: 1660004788
- exit_code: 1
  program: "#!/bin/bash\n# Given an array of integers nums, find the minimum sum of\
    \ any non-empty sub-array\n# of nums.\n# Example\n#\n# $1 is a space-separated\
    \ list\nminSubArraySum() {\n    local -n _nums=$1\n    local min_sum=${_nums[0]}\n\
    \    local sum=0\n    for num in \"${_nums[@]}\"; do\n        (( sum += num ))\n\
    \        (( sum < min_sum )) && min_sum=$sum\n        (( sum < 0 )) && sum=0\n\
    \    done\n    echo $min_sum\n}\n\ncandidate() {\n    minSubArraySum \"$@\"\n\
    }\n\nset -e\nrun_test() {\n    [[ $(candidate \"2 3 4 1 2 4\") = \"1\" ]]\n  \
    \  [[ $(candidate \"-1 -2 -3\") = \"-6\" ]]\n    [[ $(candidate \"-1 -2 -3 2 -10\"\
    ) = \"-14\" ]]\n    [[ $(candidate \"-9999999999999999\") = \"-9999999999999999\"\
    \ ]]\n    [[ $(candidate \"0 10 20 1000000\") = \"0\" ]]\n    [[ $(candidate \"\
    -1 -2 -3 10 -5\") = \"-6\" ]]\n    [[ $(candidate \"100 -1 -2 -3 10 -5\") = \"\
    -6\" ]]\n    [[ $(candidate \"10 11 13 8 3 4\") = \"3\" ]]\n    [[ $(candidate\
    \ \"100 -33 32 -1 0 -2\") = \"-33\" ]]\n    [[ $(candidate \"-10\") = \"-10\"\
    \ ]]\n    [[ $(candidate \"7\") = \"7\" ]]\n    [[ $(candidate \"1 -1\") = \"\
    -1\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: '/tmp/tmp9efih7lz.sh: line 8: local: `2 3 4 1 2 4'': invalid variable name
    for name reference

    '
  stdout: ''
  timestamp: 1660004788
- exit_code: 1
  program: "#!/bin/bash\n# Given an array of integers nums, find the minimum sum of\
    \ any non-empty sub-array\n# of nums.\n# Example\n#\n# $1 is a space-separated\
    \ list\nminSubArraySum() {\n  local -a nums\n  IFS=' ' read -r -a nums <<< \"\
    $1\"\n  local min_sum=${nums[0]}\n  local sum=0\n  for num in \"${nums[@]}\";\
    \ do\n    sum=$((sum + num))\n    if [[ $sum -lt $min_sum ]]; then\n      min_sum=$sum\n\
    \    fi\n    if [[ $sum -lt 0 ]]; then\n      sum=0\n    fi\n  done\n  echo $min_sum\n\
    }\n\ncandidate() {\n    minSubArraySum \"$@\"\n}\n\nset -e\nrun_test() {\n   \
    \ [[ $(candidate \"2 3 4 1 2 4\") = \"1\" ]]\n    [[ $(candidate \"-1 -2 -3\"\
    ) = \"-6\" ]]\n    [[ $(candidate \"-1 -2 -3 2 -10\") = \"-14\" ]]\n    [[ $(candidate\
    \ \"-9999999999999999\") = \"-9999999999999999\" ]]\n    [[ $(candidate \"0 10\
    \ 20 1000000\") = \"0\" ]]\n    [[ $(candidate \"-1 -2 -3 10 -5\") = \"-6\" ]]\n\
    \    [[ $(candidate \"100 -1 -2 -3 10 -5\") = \"-6\" ]]\n    [[ $(candidate \"\
    10 11 13 8 3 4\") = \"3\" ]]\n    [[ $(candidate \"100 -33 32 -1 0 -2\") = \"\
    -33\" ]]\n    [[ $(candidate \"-10\") = \"-10\" ]]\n    [[ $(candidate \"7\")\
    \ = \"7\" ]]\n    [[ $(candidate \"1 -1\") = \"-1\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660004788
- exit_code: 1
  program: "#!/bin/bash\n# Given an array of integers nums, find the minimum sum of\
    \ any non-empty sub-array\n# of nums.\n# Example\n#\n# $1 is a space-separated\
    \ list\nminSubArraySum() {\n  local -a nums=(\"$@\")\n  local min_sum=0\n  local\
    \ sum=0\n  for ((i=0; i<${#nums[@]}; i++)); do\n    sum=$((sum + nums[i]))\n \
    \   if ((sum < min_sum)); then\n      min_sum=$sum\n    fi\n  done\n  echo $min_sum\n\
    }\n\ncandidate() {\n    minSubArraySum \"$@\"\n}\n\nset -e\nrun_test() {\n   \
    \ [[ $(candidate \"2 3 4 1 2 4\") = \"1\" ]]\n    [[ $(candidate \"-1 -2 -3\"\
    ) = \"-6\" ]]\n    [[ $(candidate \"-1 -2 -3 2 -10\") = \"-14\" ]]\n    [[ $(candidate\
    \ \"-9999999999999999\") = \"-9999999999999999\" ]]\n    [[ $(candidate \"0 10\
    \ 20 1000000\") = \"0\" ]]\n    [[ $(candidate \"-1 -2 -3 10 -5\") = \"-6\" ]]\n\
    \    [[ $(candidate \"100 -1 -2 -3 10 -5\") = \"-6\" ]]\n    [[ $(candidate \"\
    10 11 13 8 3 4\") = \"3\" ]]\n    [[ $(candidate \"100 -33 32 -1 0 -2\") = \"\
    -33\" ]]\n    [[ $(candidate \"-10\") = \"-10\" ]]\n    [[ $(candidate \"7\")\
    \ = \"7\" ]]\n    [[ $(candidate \"1 -1\") = \"-1\" ]]\n}\n\nrun_test"
  status: SyntaxError
  stderr: '/tmp/tmpglhegzru.sh: line 12: 2 3 4 1 2 4: syntax error in expression (error
    token is "3 4 1 2 4")

    '
  stdout: ''
  timestamp: 1660004788
- exit_code: 1
  program: "#!/bin/bash\n# Given an array of integers nums, find the minimum sum of\
    \ any non-empty sub-array\n# of nums.\n# Example\n#\n# $1 is a space-separated\
    \ list\nminSubArraySum() {\n  local -a nums=(\"$@\")\n  local min=0\n  local sum=0\n\
    \  for ((i=0; i<${#nums[@]}; i++)); do\n    sum=$((sum + nums[i]))\n    if ((sum\
    \ < min)); then\n      min=$sum\n    fi\n  done\n  echo $min\n}\n\ncandidate()\
    \ {\n    minSubArraySum \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate\
    \ \"2 3 4 1 2 4\") = \"1\" ]]\n    [[ $(candidate \"-1 -2 -3\") = \"-6\" ]]\n\
    \    [[ $(candidate \"-1 -2 -3 2 -10\") = \"-14\" ]]\n    [[ $(candidate \"-9999999999999999\"\
    ) = \"-9999999999999999\" ]]\n    [[ $(candidate \"0 10 20 1000000\") = \"0\"\
    \ ]]\n    [[ $(candidate \"-1 -2 -3 10 -5\") = \"-6\" ]]\n    [[ $(candidate \"\
    100 -1 -2 -3 10 -5\") = \"-6\" ]]\n    [[ $(candidate \"10 11 13 8 3 4\") = \"\
    3\" ]]\n    [[ $(candidate \"100 -33 32 -1 0 -2\") = \"-33\" ]]\n    [[ $(candidate\
    \ \"-10\") = \"-10\" ]]\n    [[ $(candidate \"7\") = \"7\" ]]\n    [[ $(candidate\
    \ \"1 -1\") = \"-1\" ]]\n}\n\nrun_test"
  status: SyntaxError
  stderr: '/tmp/tmpoj87jcxr.sh: line 12: 2 3 4 1 2 4: syntax error in expression (error
    token is "3 4 1 2 4")

    '
  stdout: ''
  timestamp: 1660004788
- exit_code: 1
  program: "#!/bin/bash\n# Given an array of integers nums, find the minimum sum of\
    \ any non-empty sub-array\n# of nums.\n# Example\n#\n# $1 is a space-separated\
    \ list\nminSubArraySum() {\n    local -n _arr=$1\n    local min=${_arr[0]}\n \
    \   local sum=0\n    for i in \"${_arr[@]}\"; do\n        sum=$((sum + i))\n \
    \       if [[ $sum -lt $min ]]; then\n            min=$sum\n        fi\n     \
    \   if [[ $sum -gt 0 ]]; then\n            sum=0\n        fi\n    done\n    echo\
    \ $min\n}\n\ncandidate() {\n    minSubArraySum \"$@\"\n}\n\nset -e\nrun_test()\
    \ {\n    [[ $(candidate \"2 3 4 1 2 4\") = \"1\" ]]\n    [[ $(candidate \"-1 -2\
    \ -3\") = \"-6\" ]]\n    [[ $(candidate \"-1 -2 -3 2 -10\") = \"-14\" ]]\n   \
    \ [[ $(candidate \"-9999999999999999\") = \"-9999999999999999\" ]]\n    [[ $(candidate\
    \ \"0 10 20 1000000\") = \"0\" ]]\n    [[ $(candidate \"-1 -2 -3 10 -5\") = \"\
    -6\" ]]\n    [[ $(candidate \"100 -1 -2 -3 10 -5\") = \"-6\" ]]\n    [[ $(candidate\
    \ \"10 11 13 8 3 4\") = \"3\" ]]\n    [[ $(candidate \"100 -33 32 -1 0 -2\") =\
    \ \"-33\" ]]\n    [[ $(candidate \"-10\") = \"-10\" ]]\n    [[ $(candidate \"\
    7\") = \"7\" ]]\n    [[ $(candidate \"1 -1\") = \"-1\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: '/tmp/tmpm1uaahor.sh: line 8: local: `2 3 4 1 2 4'': invalid variable name
    for name reference

    '
  stdout: ''
  timestamp: 1660004788
- exit_code: 1
  program: "#!/bin/bash\n# Given an array of integers nums, find the minimum sum of\
    \ any non-empty sub-array\n# of nums.\n# Example\n#\n# $1 is a space-separated\
    \ list\nminSubArraySum() {\n    local -n arr=$1\n    local min=${arr[0]}\n   \
    \ local sum=0\n    for ((i=0; i<${#arr[@]}; i++)); do\n        sum=$((sum + arr[i]))\n\
    \        if ((sum < min)); then\n            min=$sum\n        fi\n        if\
    \ ((sum > 0)); then\n            sum=0\n        fi\n    done\n    echo $min\n\
    }\n\ncandidate() {\n    minSubArraySum \"$@\"\n}\n\nset -e\nrun_test() {\n   \
    \ [[ $(candidate \"2 3 4 1 2 4\") = \"1\" ]]\n    [[ $(candidate \"-1 -2 -3\"\
    ) = \"-6\" ]]\n    [[ $(candidate \"-1 -2 -3 2 -10\") = \"-14\" ]]\n    [[ $(candidate\
    \ \"-9999999999999999\") = \"-9999999999999999\" ]]\n    [[ $(candidate \"0 10\
    \ 20 1000000\") = \"0\" ]]\n    [[ $(candidate \"-1 -2 -3 10 -5\") = \"-6\" ]]\n\
    \    [[ $(candidate \"100 -1 -2 -3 10 -5\") = \"-6\" ]]\n    [[ $(candidate \"\
    10 11 13 8 3 4\") = \"3\" ]]\n    [[ $(candidate \"100 -33 32 -1 0 -2\") = \"\
    -33\" ]]\n    [[ $(candidate \"-10\") = \"-10\" ]]\n    [[ $(candidate \"7\")\
    \ = \"7\" ]]\n    [[ $(candidate \"1 -1\") = \"-1\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: '/tmp/tmpu3fxhuzv.sh: line 8: local: `2 3 4 1 2 4'': invalid variable name
    for name reference

    '
  stdout: ''
  timestamp: 1660004788
- exit_code: 1
  program: "#!/bin/bash\n# Given an array of integers nums, find the minimum sum of\
    \ any non-empty sub-array\n# of nums.\n# Example\n#\n# $1 is a space-separated\
    \ list\nminSubArraySum() {\n    local -n arr=$1\n    local min=${arr[0]}\n   \
    \ local sum=0\n    for i in \"${arr[@]}\"; do\n        ((sum += i))\n        ((sum\
    \ < min)) && min=$sum\n        ((sum > 0)) && sum=0\n    done\n    echo $min\n\
    }\n\ncandidate() {\n    minSubArraySum \"$@\"\n}\n\nset -e\nrun_test() {\n   \
    \ [[ $(candidate \"2 3 4 1 2 4\") = \"1\" ]]\n    [[ $(candidate \"-1 -2 -3\"\
    ) = \"-6\" ]]\n    [[ $(candidate \"-1 -2 -3 2 -10\") = \"-14\" ]]\n    [[ $(candidate\
    \ \"-9999999999999999\") = \"-9999999999999999\" ]]\n    [[ $(candidate \"0 10\
    \ 20 1000000\") = \"0\" ]]\n    [[ $(candidate \"-1 -2 -3 10 -5\") = \"-6\" ]]\n\
    \    [[ $(candidate \"100 -1 -2 -3 10 -5\") = \"-6\" ]]\n    [[ $(candidate \"\
    10 11 13 8 3 4\") = \"3\" ]]\n    [[ $(candidate \"100 -33 32 -1 0 -2\") = \"\
    -33\" ]]\n    [[ $(candidate \"-10\") = \"-10\" ]]\n    [[ $(candidate \"7\")\
    \ = \"7\" ]]\n    [[ $(candidate \"1 -1\") = \"-1\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: '/tmp/tmpxiz0kwh0.sh: line 8: local: `2 3 4 1 2 4'': invalid variable name
    for name reference

    '
  stdout: ''
  timestamp: 1660004788
- exit_code: 1
  program: "#!/bin/bash\n# Given an array of integers nums, find the minimum sum of\
    \ any non-empty sub-array\n# of nums.\n# Example\n#\n# $1 is a space-separated\
    \ list\nminSubArraySum() {\n    local -n _nums=$1\n    local min=${_nums[0]}\n\
    \    local sum=0\n    for num in \"${_nums[@]}\"; do\n        sum=$((sum + num))\n\
    \        if [[ $sum -lt $min ]]; then\n            min=$sum\n        fi\n    \
    \    if [[ $sum -gt 0 ]]; then\n            sum=0\n        fi\n    done\n    echo\
    \ $min\n}\n\ncandidate() {\n    minSubArraySum \"$@\"\n}\n\nset -e\nrun_test()\
    \ {\n    [[ $(candidate \"2 3 4 1 2 4\") = \"1\" ]]\n    [[ $(candidate \"-1 -2\
    \ -3\") = \"-6\" ]]\n    [[ $(candidate \"-1 -2 -3 2 -10\") = \"-14\" ]]\n   \
    \ [[ $(candidate \"-9999999999999999\") = \"-9999999999999999\" ]]\n    [[ $(candidate\
    \ \"0 10 20 1000000\") = \"0\" ]]\n    [[ $(candidate \"-1 -2 -3 10 -5\") = \"\
    -6\" ]]\n    [[ $(candidate \"100 -1 -2 -3 10 -5\") = \"-6\" ]]\n    [[ $(candidate\
    \ \"10 11 13 8 3 4\") = \"3\" ]]\n    [[ $(candidate \"100 -33 32 -1 0 -2\") =\
    \ \"-33\" ]]\n    [[ $(candidate \"-10\") = \"-10\" ]]\n    [[ $(candidate \"\
    7\") = \"7\" ]]\n    [[ $(candidate \"1 -1\") = \"-1\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: '/tmp/tmpmw_gw7ur.sh: line 8: local: `2 3 4 1 2 4'': invalid variable name
    for name reference

    '
  stdout: ''
  timestamp: 1660004788
- exit_code: 0
  program: "#!/bin/bash\n# Given an array of integers nums, find the minimum sum of\
    \ any non-empty sub-array\n# of nums.\n# Example\n#\n# $1 is a space-separated\
    \ list\nminSubArraySum() {\n    local nums=($1)\n    local min=${nums[0]}\n  \
    \  local sum=0\n    for i in \"${nums[@]}\"; do\n        sum=$((sum + i))\n  \
    \      if ((sum < min)); then\n            min=$sum\n        fi\n        if ((sum\
    \ > 0)); then\n            sum=0\n        fi\n    done\n    echo $min\n}\n\ncandidate()\
    \ {\n    minSubArraySum \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate\
    \ \"2 3 4 1 2 4\") = \"1\" ]]\n    [[ $(candidate \"-1 -2 -3\") = \"-6\" ]]\n\
    \    [[ $(candidate \"-1 -2 -3 2 -10\") = \"-14\" ]]\n    [[ $(candidate \"-9999999999999999\"\
    ) = \"-9999999999999999\" ]]\n    [[ $(candidate \"0 10 20 1000000\") = \"0\"\
    \ ]]\n    [[ $(candidate \"-1 -2 -3 10 -5\") = \"-6\" ]]\n    [[ $(candidate \"\
    100 -1 -2 -3 10 -5\") = \"-6\" ]]\n    [[ $(candidate \"10 11 13 8 3 4\") = \"\
    3\" ]]\n    [[ $(candidate \"100 -33 32 -1 0 -2\") = \"-33\" ]]\n    [[ $(candidate\
    \ \"-10\") = \"-10\" ]]\n    [[ $(candidate \"7\") = \"7\" ]]\n    [[ $(candidate\
    \ \"1 -1\") = \"-1\" ]]\n}\n\nrun_test"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660004788
- exit_code: 1
  program: "#!/bin/bash\n# Given an array of integers nums, find the minimum sum of\
    \ any non-empty sub-array\n# of nums.\n# Example\n#\n# $1 is a space-separated\
    \ list\nminSubArraySum() {\n  local -n nums=$1\n  local min_sum=${nums[0]}\n \
    \ local sum=0\n  for num in \"${nums[@]}\"; do\n    sum=$((sum + num))\n    if\
    \ ((sum < min_sum)); then\n      min_sum=$sum\n    fi\n    if ((sum > 0)); then\n\
    \      sum=0\n    fi\n  done\n  echo $min_sum\n}\n\ncandidate() {\n    minSubArraySum\
    \ \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"2 3 4 1 2 4\") = \"\
    1\" ]]\n    [[ $(candidate \"-1 -2 -3\") = \"-6\" ]]\n    [[ $(candidate \"-1\
    \ -2 -3 2 -10\") = \"-14\" ]]\n    [[ $(candidate \"-9999999999999999\") = \"\
    -9999999999999999\" ]]\n    [[ $(candidate \"0 10 20 1000000\") = \"0\" ]]\n \
    \   [[ $(candidate \"-1 -2 -3 10 -5\") = \"-6\" ]]\n    [[ $(candidate \"100 -1\
    \ -2 -3 10 -5\") = \"-6\" ]]\n    [[ $(candidate \"10 11 13 8 3 4\") = \"3\" ]]\n\
    \    [[ $(candidate \"100 -33 32 -1 0 -2\") = \"-33\" ]]\n    [[ $(candidate \"\
    -10\") = \"-10\" ]]\n    [[ $(candidate \"7\") = \"7\" ]]\n    [[ $(candidate\
    \ \"1 -1\") = \"-1\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: '/tmp/tmpxin0cdxa.sh: line 8: local: `2 3 4 1 2 4'': invalid variable name
    for name reference

    '
  stdout: ''
  timestamp: 1660004788
- exit_code: 0
  program: "#!/bin/bash\n# Given an array of integers nums, find the minimum sum of\
    \ any non-empty sub-array\n# of nums.\n# Example\n#\n# $1 is a space-separated\
    \ list\nminSubArraySum() {\n  local -a nums\n  IFS=' ' read -r -a nums <<< \"\
    $1\"\n  local min=${nums[0]}\n  local sum=0\n  for i in \"${nums[@]}\"; do\n \
    \   sum=$((sum + i))\n    if [[ $sum -lt $min ]]; then\n      min=$sum\n    fi\n\
    \    if [[ $sum -gt 0 ]]; then\n      sum=0\n    fi\n  done\n  echo $min\n}\n\n\
    candidate() {\n    minSubArraySum \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate\
    \ \"2 3 4 1 2 4\") = \"1\" ]]\n    [[ $(candidate \"-1 -2 -3\") = \"-6\" ]]\n\
    \    [[ $(candidate \"-1 -2 -3 2 -10\") = \"-14\" ]]\n    [[ $(candidate \"-9999999999999999\"\
    ) = \"-9999999999999999\" ]]\n    [[ $(candidate \"0 10 20 1000000\") = \"0\"\
    \ ]]\n    [[ $(candidate \"-1 -2 -3 10 -5\") = \"-6\" ]]\n    [[ $(candidate \"\
    100 -1 -2 -3 10 -5\") = \"-6\" ]]\n    [[ $(candidate \"10 11 13 8 3 4\") = \"\
    3\" ]]\n    [[ $(candidate \"100 -33 32 -1 0 -2\") = \"-33\" ]]\n    [[ $(candidate\
    \ \"-10\") = \"-10\" ]]\n    [[ $(candidate \"7\") = \"7\" ]]\n    [[ $(candidate\
    \ \"1 -1\") = \"-1\" ]]\n}\n\nrun_test"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660004788
- exit_code: 1
  program: "#!/bin/bash\n# Given an array of integers nums, find the minimum sum of\
    \ any non-empty sub-array\n# of nums.\n# Example\n#\n# $1 is a space-separated\
    \ list\nminSubArraySum() {\n    local -a nums\n    IFS=' ' read -r -a nums <<<\
    \ \"$1\"\n    local min_sum=${nums[0]}\n    local sum=${nums[0]}\n    for ((i=1;\
    \ i<${#nums[@]}; i++)); do\n        sum=$((sum + nums[i]))\n        if ((sum <\
    \ min_sum)); then\n            min_sum=$sum\n        fi\n        if ((sum > 0));\
    \ then\n            sum=0\n        fi\n    done\n    echo $min_sum\n}\n\ncandidate()\
    \ {\n    minSubArraySum \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate\
    \ \"2 3 4 1 2 4\") = \"1\" ]]\n    [[ $(candidate \"-1 -2 -3\") = \"-6\" ]]\n\
    \    [[ $(candidate \"-1 -2 -3 2 -10\") = \"-14\" ]]\n    [[ $(candidate \"-9999999999999999\"\
    ) = \"-9999999999999999\" ]]\n    [[ $(candidate \"0 10 20 1000000\") = \"0\"\
    \ ]]\n    [[ $(candidate \"-1 -2 -3 10 -5\") = \"-6\" ]]\n    [[ $(candidate \"\
    100 -1 -2 -3 10 -5\") = \"-6\" ]]\n    [[ $(candidate \"10 11 13 8 3 4\") = \"\
    3\" ]]\n    [[ $(candidate \"100 -33 32 -1 0 -2\") = \"-33\" ]]\n    [[ $(candidate\
    \ \"-10\") = \"-10\" ]]\n    [[ $(candidate \"7\") = \"7\" ]]\n    [[ $(candidate\
    \ \"1 -1\") = \"-1\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660004788
- exit_code: 1
  program: "#!/bin/bash\n# Given an array of integers nums, find the minimum sum of\
    \ any non-empty sub-array\n# of nums.\n# Example\n#\n# $1 is a space-separated\
    \ list\nminSubArraySum() {\n    local -n nums=$1\n    local min=${nums[0]}\n \
    \   local sum=0\n    for num in \"${nums[@]}\"; do\n        sum=$((sum + num))\n\
    \        min=$((min < sum ? min : sum))\n        if [[ sum -lt 0 ]]; then\n  \
    \          sum=0\n        fi\n    done\n    echo $min\n}\n\ncandidate() {\n  \
    \  minSubArraySum \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"2 3\
    \ 4 1 2 4\") = \"1\" ]]\n    [[ $(candidate \"-1 -2 -3\") = \"-6\" ]]\n    [[\
    \ $(candidate \"-1 -2 -3 2 -10\") = \"-14\" ]]\n    [[ $(candidate \"-9999999999999999\"\
    ) = \"-9999999999999999\" ]]\n    [[ $(candidate \"0 10 20 1000000\") = \"0\"\
    \ ]]\n    [[ $(candidate \"-1 -2 -3 10 -5\") = \"-6\" ]]\n    [[ $(candidate \"\
    100 -1 -2 -3 10 -5\") = \"-6\" ]]\n    [[ $(candidate \"10 11 13 8 3 4\") = \"\
    3\" ]]\n    [[ $(candidate \"100 -33 32 -1 0 -2\") = \"-33\" ]]\n    [[ $(candidate\
    \ \"-10\") = \"-10\" ]]\n    [[ $(candidate \"7\") = \"7\" ]]\n    [[ $(candidate\
    \ \"1 -1\") = \"-1\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: '/tmp/tmpsuy1t37n.sh: line 8: local: `2 3 4 1 2 4'': invalid variable name
    for name reference

    '
  stdout: ''
  timestamp: 1660004788
- exit_code: 0
  program: "#!/bin/bash\n# Given an array of integers nums, find the minimum sum of\
    \ any non-empty sub-array\n# of nums.\n# Example\n#\n# $1 is a space-separated\
    \ list\nminSubArraySum() {\n    local -a nums=($1)\n    local min=${nums[0]}\n\
    \    local sum=0\n    for (( i=0; i<${#nums[@]}; i++ )); do\n        (( sum +=\
    \ nums[i] ))\n        (( sum < min )) && min=$sum\n        (( sum > 0 )) && sum=0\n\
    \    done\n    echo $min\n}\n\ncandidate() {\n    minSubArraySum \"$@\"\n}\n\n\
    set -e\nrun_test() {\n    [[ $(candidate \"2 3 4 1 2 4\") = \"1\" ]]\n    [[ $(candidate\
    \ \"-1 -2 -3\") = \"-6\" ]]\n    [[ $(candidate \"-1 -2 -3 2 -10\") = \"-14\"\
    \ ]]\n    [[ $(candidate \"-9999999999999999\") = \"-9999999999999999\" ]]\n \
    \   [[ $(candidate \"0 10 20 1000000\") = \"0\" ]]\n    [[ $(candidate \"-1 -2\
    \ -3 10 -5\") = \"-6\" ]]\n    [[ $(candidate \"100 -1 -2 -3 10 -5\") = \"-6\"\
    \ ]]\n    [[ $(candidate \"10 11 13 8 3 4\") = \"3\" ]]\n    [[ $(candidate \"\
    100 -33 32 -1 0 -2\") = \"-33\" ]]\n    [[ $(candidate \"-10\") = \"-10\" ]]\n\
    \    [[ $(candidate \"7\") = \"7\" ]]\n    [[ $(candidate \"1 -1\") = \"-1\" ]]\n\
    }\n\nrun_test"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660004788
- exit_code: 1
  program: "#!/bin/bash\n# Given an array of integers nums, find the minimum sum of\
    \ any non-empty sub-array\n# of nums.\n# Example\n#\n# $1 is a space-separated\
    \ list\nminSubArraySum() {\n  local -n arr=$1\n  local min=${arr[0]}\n  local\
    \ sum=0\n  for i in \"${arr[@]}\"; do\n    sum=$((sum + i))\n    if [[ $sum -lt\
    \ $min ]]; then\n      min=$sum\n    fi\n    if [[ $sum -gt 0 ]]; then\n     \
    \ sum=0\n    fi\n  done\n  echo $min\n}\n\ncandidate() {\n    minSubArraySum \"\
    $@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"2 3 4 1 2 4\") = \"1\" ]]\n\
    \    [[ $(candidate \"-1 -2 -3\") = \"-6\" ]]\n    [[ $(candidate \"-1 -2 -3 2\
    \ -10\") = \"-14\" ]]\n    [[ $(candidate \"-9999999999999999\") = \"-9999999999999999\"\
    \ ]]\n    [[ $(candidate \"0 10 20 1000000\") = \"0\" ]]\n    [[ $(candidate \"\
    -1 -2 -3 10 -5\") = \"-6\" ]]\n    [[ $(candidate \"100 -1 -2 -3 10 -5\") = \"\
    -6\" ]]\n    [[ $(candidate \"10 11 13 8 3 4\") = \"3\" ]]\n    [[ $(candidate\
    \ \"100 -33 32 -1 0 -2\") = \"-33\" ]]\n    [[ $(candidate \"-10\") = \"-10\"\
    \ ]]\n    [[ $(candidate \"7\") = \"7\" ]]\n    [[ $(candidate \"1 -1\") = \"\
    -1\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: '/tmp/tmp4p3hv6od.sh: line 8: local: `2 3 4 1 2 4'': invalid variable name
    for name reference

    '
  stdout: ''
  timestamp: 1660004788
- exit_code: 0
  program: "#!/bin/bash\n# Given an array of integers nums, find the minimum sum of\
    \ any non-empty sub-array\n# of nums.\n# Example\n#\n# $1 is a space-separated\
    \ list\nminSubArraySum() {\n    local -a nums=($1)\n    local min=${nums[0]}\n\
    \    local sum=0\n    for i in \"${nums[@]}\"; do\n        sum=$((sum + i))\n\
    \        if [[ $sum -lt $min ]]; then\n            min=$sum\n        fi\n    \
    \    if [[ $sum -gt 0 ]]; then\n            sum=0\n        fi\n    done\n    echo\
    \ $min\n}\n\ncandidate() {\n    minSubArraySum \"$@\"\n}\n\nset -e\nrun_test()\
    \ {\n    [[ $(candidate \"2 3 4 1 2 4\") = \"1\" ]]\n    [[ $(candidate \"-1 -2\
    \ -3\") = \"-6\" ]]\n    [[ $(candidate \"-1 -2 -3 2 -10\") = \"-14\" ]]\n   \
    \ [[ $(candidate \"-9999999999999999\") = \"-9999999999999999\" ]]\n    [[ $(candidate\
    \ \"0 10 20 1000000\") = \"0\" ]]\n    [[ $(candidate \"-1 -2 -3 10 -5\") = \"\
    -6\" ]]\n    [[ $(candidate \"100 -1 -2 -3 10 -5\") = \"-6\" ]]\n    [[ $(candidate\
    \ \"10 11 13 8 3 4\") = \"3\" ]]\n    [[ $(candidate \"100 -33 32 -1 0 -2\") =\
    \ \"-33\" ]]\n    [[ $(candidate \"-10\") = \"-10\" ]]\n    [[ $(candidate \"\
    7\") = \"7\" ]]\n    [[ $(candidate \"1 -1\") = \"-1\" ]]\n}\n\nrun_test"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660004788
- exit_code: 1
  program: "#!/bin/bash\n# Given an array of integers nums, find the minimum sum of\
    \ any non-empty sub-array\n# of nums.\n# Example\n#\n# $1 is a space-separated\
    \ list\nminSubArraySum() {\n    local -n _minSubArraySum_nums=$1\n    local min_sum=${_minSubArraySum_nums[0]}\n\
    \    local sum=0\n    for num in \"${_minSubArraySum_nums[@]}\"; do\n        sum=$((sum\
    \ + num))\n        if [[ $sum -lt $min_sum ]]; then\n            min_sum=$sum\n\
    \        fi\n        if [[ $sum -gt 0 ]]; then\n            sum=0\n        fi\n\
    \    done\n    echo $min_sum\n}\n\ncandidate() {\n    minSubArraySum \"$@\"\n\
    }\n\nset -e\nrun_test() {\n    [[ $(candidate \"2 3 4 1 2 4\") = \"1\" ]]\n  \
    \  [[ $(candidate \"-1 -2 -3\") = \"-6\" ]]\n    [[ $(candidate \"-1 -2 -3 2 -10\"\
    ) = \"-14\" ]]\n    [[ $(candidate \"-9999999999999999\") = \"-9999999999999999\"\
    \ ]]\n    [[ $(candidate \"0 10 20 1000000\") = \"0\" ]]\n    [[ $(candidate \"\
    -1 -2 -3 10 -5\") = \"-6\" ]]\n    [[ $(candidate \"100 -1 -2 -3 10 -5\") = \"\
    -6\" ]]\n    [[ $(candidate \"10 11 13 8 3 4\") = \"3\" ]]\n    [[ $(candidate\
    \ \"100 -33 32 -1 0 -2\") = \"-33\" ]]\n    [[ $(candidate \"-10\") = \"-10\"\
    \ ]]\n    [[ $(candidate \"7\") = \"7\" ]]\n    [[ $(candidate \"1 -1\") = \"\
    -1\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: '/tmp/tmpbhiow7ck.sh: line 8: local: `2 3 4 1 2 4'': invalid variable name
    for name reference

    '
  stdout: ''
  timestamp: 1660004788
- exit_code: 1
  program: "#!/bin/bash\n# Given an array of integers nums, find the minimum sum of\
    \ any non-empty sub-array\n# of nums.\n# Example\n#\n# $1 is a space-separated\
    \ list\nminSubArraySum() {\n    local -n _array=$1\n    local min_sum=0\n    local\
    \ sum=0\n    for i in \"${_array[@]}\"; do\n        sum=$((sum + i))\n       \
    \ if [[ $sum -lt $min_sum ]]; then\n            min_sum=$sum\n        fi\n   \
    \ done\n    echo $min_sum\n}\n\ncandidate() {\n    minSubArraySum \"$@\"\n}\n\n\
    set -e\nrun_test() {\n    [[ $(candidate \"2 3 4 1 2 4\") = \"1\" ]]\n    [[ $(candidate\
    \ \"-1 -2 -3\") = \"-6\" ]]\n    [[ $(candidate \"-1 -2 -3 2 -10\") = \"-14\"\
    \ ]]\n    [[ $(candidate \"-9999999999999999\") = \"-9999999999999999\" ]]\n \
    \   [[ $(candidate \"0 10 20 1000000\") = \"0\" ]]\n    [[ $(candidate \"-1 -2\
    \ -3 10 -5\") = \"-6\" ]]\n    [[ $(candidate \"100 -1 -2 -3 10 -5\") = \"-6\"\
    \ ]]\n    [[ $(candidate \"10 11 13 8 3 4\") = \"3\" ]]\n    [[ $(candidate \"\
    100 -33 32 -1 0 -2\") = \"-33\" ]]\n    [[ $(candidate \"-10\") = \"-10\" ]]\n\
    \    [[ $(candidate \"7\") = \"7\" ]]\n    [[ $(candidate \"1 -1\") = \"-1\" ]]\n\
    }\n\nrun_test"
  status: Exception
  stderr: '/tmp/tmphom3exq0.sh: line 8: local: `2 3 4 1 2 4'': invalid variable name
    for name reference

    '
  stdout: ''
  timestamp: 1660004788
- exit_code: 1
  program: "#!/bin/bash\n# Given an array of integers nums, find the minimum sum of\
    \ any non-empty sub-array\n# of nums.\n# Example\n#\n# $1 is a space-separated\
    \ list\nminSubArraySum() {\n  local -n nums=$1\n  local min=${nums[0]}\n  local\
    \ sum=0\n  for i in \"${nums[@]}\"; do\n    sum=$((sum + i))\n    if [[ $sum -lt\
    \ $min ]]; then\n      min=$sum\n    fi\n    if [[ $sum -gt 0 ]]; then\n     \
    \ sum=0\n    fi\n  done\n  echo $min\n}\n\ncandidate() {\n    minSubArraySum \"\
    $@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"2 3 4 1 2 4\") = \"1\" ]]\n\
    \    [[ $(candidate \"-1 -2 -3\") = \"-6\" ]]\n    [[ $(candidate \"-1 -2 -3 2\
    \ -10\") = \"-14\" ]]\n    [[ $(candidate \"-9999999999999999\") = \"-9999999999999999\"\
    \ ]]\n    [[ $(candidate \"0 10 20 1000000\") = \"0\" ]]\n    [[ $(candidate \"\
    -1 -2 -3 10 -5\") = \"-6\" ]]\n    [[ $(candidate \"100 -1 -2 -3 10 -5\") = \"\
    -6\" ]]\n    [[ $(candidate \"10 11 13 8 3 4\") = \"3\" ]]\n    [[ $(candidate\
    \ \"100 -33 32 -1 0 -2\") = \"-33\" ]]\n    [[ $(candidate \"-10\") = \"-10\"\
    \ ]]\n    [[ $(candidate \"7\") = \"7\" ]]\n    [[ $(candidate \"1 -1\") = \"\
    -1\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: '/tmp/tmp1gqgtdq2.sh: line 8: local: `2 3 4 1 2 4'': invalid variable name
    for name reference

    '
  stdout: ''
  timestamp: 1660004788
- exit_code: 1
  program: "#!/bin/bash\n# Given an array of integers nums, find the minimum sum of\
    \ any non-empty sub-array\n# of nums.\n# Example\n#\n# $1 is a space-separated\
    \ list\nminSubArraySum() {\n  local -n nums=$1\n  local minSum=0\n  local sum=0\n\
    \  for ((i=0; i<${#nums[@]}; i++)); do\n    sum=$((sum + nums[i]))\n    if ((sum\
    \ < minSum)); then\n      minSum=$sum\n    fi\n  done\n  echo $minSum\n}\n\ncandidate()\
    \ {\n    minSubArraySum \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate\
    \ \"2 3 4 1 2 4\") = \"1\" ]]\n    [[ $(candidate \"-1 -2 -3\") = \"-6\" ]]\n\
    \    [[ $(candidate \"-1 -2 -3 2 -10\") = \"-14\" ]]\n    [[ $(candidate \"-9999999999999999\"\
    ) = \"-9999999999999999\" ]]\n    [[ $(candidate \"0 10 20 1000000\") = \"0\"\
    \ ]]\n    [[ $(candidate \"-1 -2 -3 10 -5\") = \"-6\" ]]\n    [[ $(candidate \"\
    100 -1 -2 -3 10 -5\") = \"-6\" ]]\n    [[ $(candidate \"10 11 13 8 3 4\") = \"\
    3\" ]]\n    [[ $(candidate \"100 -33 32 -1 0 -2\") = \"-33\" ]]\n    [[ $(candidate\
    \ \"-10\") = \"-10\" ]]\n    [[ $(candidate \"7\") = \"7\" ]]\n    [[ $(candidate\
    \ \"1 -1\") = \"-1\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: '/tmp/tmp295zj7bp.sh: line 8: local: `2 3 4 1 2 4'': invalid variable name
    for name reference

    '
  stdout: ''
  timestamp: 1660004788
- exit_code: 0
  program: "#!/bin/bash\n# Given an array of integers nums, find the minimum sum of\
    \ any non-empty sub-array\n# of nums.\n# Example\n#\n# $1 is a space-separated\
    \ list\nminSubArraySum() {\n    local -a nums=($1)\n    local min=${nums[0]}\n\
    \    local sum=0\n    for (( i=0; i<${#nums[@]}; i++ )); do\n        sum=$(( sum\
    \ + nums[i] ))\n        if (( sum < min )); then\n            min=$sum\n     \
    \   fi\n        if (( sum > 0 )); then\n            sum=0\n        fi\n    done\n\
    \    echo $min\n}\n\ncandidate() {\n    minSubArraySum \"$@\"\n}\n\nset -e\nrun_test()\
    \ {\n    [[ $(candidate \"2 3 4 1 2 4\") = \"1\" ]]\n    [[ $(candidate \"-1 -2\
    \ -3\") = \"-6\" ]]\n    [[ $(candidate \"-1 -2 -3 2 -10\") = \"-14\" ]]\n   \
    \ [[ $(candidate \"-9999999999999999\") = \"-9999999999999999\" ]]\n    [[ $(candidate\
    \ \"0 10 20 1000000\") = \"0\" ]]\n    [[ $(candidate \"-1 -2 -3 10 -5\") = \"\
    -6\" ]]\n    [[ $(candidate \"100 -1 -2 -3 10 -5\") = \"-6\" ]]\n    [[ $(candidate\
    \ \"10 11 13 8 3 4\") = \"3\" ]]\n    [[ $(candidate \"100 -33 32 -1 0 -2\") =\
    \ \"-33\" ]]\n    [[ $(candidate \"-10\") = \"-10\" ]]\n    [[ $(candidate \"\
    7\") = \"7\" ]]\n    [[ $(candidate \"1 -1\") = \"-1\" ]]\n}\n\nrun_test"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660004788
- exit_code: 1
  program: "#!/bin/bash\n# Given an array of integers nums, find the minimum sum of\
    \ any non-empty sub-array\n# of nums.\n# Example\n#\n# $1 is a space-separated\
    \ list\nminSubArraySum() {\n    local -n nums=$1\n    local min=${nums[0]}\n \
    \   local sum=0\n    for num in \"${nums[@]}\"; do\n        ((sum += num))\n \
    \       ((sum < min)) && min=$sum\n        ((sum > 0)) && sum=0\n    done\n  \
    \  echo $min\n}\n\ncandidate() {\n    minSubArraySum \"$@\"\n}\n\nset -e\nrun_test()\
    \ {\n    [[ $(candidate \"2 3 4 1 2 4\") = \"1\" ]]\n    [[ $(candidate \"-1 -2\
    \ -3\") = \"-6\" ]]\n    [[ $(candidate \"-1 -2 -3 2 -10\") = \"-14\" ]]\n   \
    \ [[ $(candidate \"-9999999999999999\") = \"-9999999999999999\" ]]\n    [[ $(candidate\
    \ \"0 10 20 1000000\") = \"0\" ]]\n    [[ $(candidate \"-1 -2 -3 10 -5\") = \"\
    -6\" ]]\n    [[ $(candidate \"100 -1 -2 -3 10 -5\") = \"-6\" ]]\n    [[ $(candidate\
    \ \"10 11 13 8 3 4\") = \"3\" ]]\n    [[ $(candidate \"100 -33 32 -1 0 -2\") =\
    \ \"-33\" ]]\n    [[ $(candidate \"-10\") = \"-10\" ]]\n    [[ $(candidate \"\
    7\") = \"7\" ]]\n    [[ $(candidate \"1 -1\") = \"-1\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: '/tmp/tmpedrf8yr9.sh: line 8: local: `2 3 4 1 2 4'': invalid variable name
    for name reference

    '
  stdout: ''
  timestamp: 1660004788
- exit_code: 1
  program: "#!/bin/bash\n# Given an array of integers nums, find the minimum sum of\
    \ any non-empty sub-array\n# of nums.\n# Example\n#\n# $1 is a space-separated\
    \ list\nminSubArraySum() {\n  local -a nums=(\"$@\")\n  local min=0\n  local sum=0\n\
    \  for ((i=0; i<${#nums[@]}; i++)); do\n    sum=$((sum + nums[i]))\n    if ((sum\
    \ < min)); then\n      min=$sum\n    fi\n  done\n  echo $min\n}\n\ncandidate()\
    \ {\n    minSubArraySum \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate\
    \ \"2 3 4 1 2 4\") = \"1\" ]]\n    [[ $(candidate \"-1 -2 -3\") = \"-6\" ]]\n\
    \    [[ $(candidate \"-1 -2 -3 2 -10\") = \"-14\" ]]\n    [[ $(candidate \"-9999999999999999\"\
    ) = \"-9999999999999999\" ]]\n    [[ $(candidate \"0 10 20 1000000\") = \"0\"\
    \ ]]\n    [[ $(candidate \"-1 -2 -3 10 -5\") = \"-6\" ]]\n    [[ $(candidate \"\
    100 -1 -2 -3 10 -5\") = \"-6\" ]]\n    [[ $(candidate \"10 11 13 8 3 4\") = \"\
    3\" ]]\n    [[ $(candidate \"100 -33 32 -1 0 -2\") = \"-33\" ]]\n    [[ $(candidate\
    \ \"-10\") = \"-10\" ]]\n    [[ $(candidate \"7\") = \"7\" ]]\n    [[ $(candidate\
    \ \"1 -1\") = \"-1\" ]]\n}\n\nrun_test"
  status: SyntaxError
  stderr: '/tmp/tmpoj87jcxr.sh: line 12: 2 3 4 1 2 4: syntax error in expression (error
    token is "3 4 1 2 4")

    '
  stdout: ''
  timestamp: 1660004788
- exit_code: 1
  program: "#!/bin/bash\n# Given an array of integers nums, find the minimum sum of\
    \ any non-empty sub-array\n# of nums.\n# Example\n#\n# $1 is a space-separated\
    \ list\nminSubArraySum() {\n    local -n _nums=$1\n    local min_sum=${_nums[0]}\n\
    \    local sum=0\n    for i in \"${_nums[@]}\"; do\n        sum=$((sum + i))\n\
    \        if [[ $sum -lt $min_sum ]]; then\n            min_sum=$sum\n        fi\n\
    \        if [[ $sum -gt 0 ]]; then\n            sum=0\n        fi\n    done\n\
    \    echo $min_sum\n}\n\ncandidate() {\n    minSubArraySum \"$@\"\n}\n\nset -e\n\
    run_test() {\n    [[ $(candidate \"2 3 4 1 2 4\") = \"1\" ]]\n    [[ $(candidate\
    \ \"-1 -2 -3\") = \"-6\" ]]\n    [[ $(candidate \"-1 -2 -3 2 -10\") = \"-14\"\
    \ ]]\n    [[ $(candidate \"-9999999999999999\") = \"-9999999999999999\" ]]\n \
    \   [[ $(candidate \"0 10 20 1000000\") = \"0\" ]]\n    [[ $(candidate \"-1 -2\
    \ -3 10 -5\") = \"-6\" ]]\n    [[ $(candidate \"100 -1 -2 -3 10 -5\") = \"-6\"\
    \ ]]\n    [[ $(candidate \"10 11 13 8 3 4\") = \"3\" ]]\n    [[ $(candidate \"\
    100 -33 32 -1 0 -2\") = \"-33\" ]]\n    [[ $(candidate \"-10\") = \"-10\" ]]\n\
    \    [[ $(candidate \"7\") = \"7\" ]]\n    [[ $(candidate \"1 -1\") = \"-1\" ]]\n\
    }\n\nrun_test"
  status: Exception
  stderr: '/tmp/tmpyijq8hec.sh: line 8: local: `2 3 4 1 2 4'': invalid variable name
    for name reference

    '
  stdout: ''
  timestamp: 1660004788
- exit_code: 1
  program: "#!/bin/bash\n# Given an array of integers nums, find the minimum sum of\
    \ any non-empty sub-array\n# of nums.\n# Example\n#\n# $1 is a space-separated\
    \ list\nminSubArraySum() {\n    local nums=(\"$@\")\n    local min=${nums[0]}\n\
    \    local sum=0\n    for i in \"${nums[@]}\"; do\n        sum=$((sum + i))\n\
    \        if [[ $sum -lt $min ]]; then\n            min=$sum\n        fi\n    \
    \    if [[ $sum -gt 0 ]]; then\n            sum=0\n        fi\n    done\n    echo\
    \ $min\n}\n\ncandidate() {\n    minSubArraySum \"$@\"\n}\n\nset -e\nrun_test()\
    \ {\n    [[ $(candidate \"2 3 4 1 2 4\") = \"1\" ]]\n    [[ $(candidate \"-1 -2\
    \ -3\") = \"-6\" ]]\n    [[ $(candidate \"-1 -2 -3 2 -10\") = \"-14\" ]]\n   \
    \ [[ $(candidate \"-9999999999999999\") = \"-9999999999999999\" ]]\n    [[ $(candidate\
    \ \"0 10 20 1000000\") = \"0\" ]]\n    [[ $(candidate \"-1 -2 -3 10 -5\") = \"\
    -6\" ]]\n    [[ $(candidate \"100 -1 -2 -3 10 -5\") = \"-6\" ]]\n    [[ $(candidate\
    \ \"10 11 13 8 3 4\") = \"3\" ]]\n    [[ $(candidate \"100 -33 32 -1 0 -2\") =\
    \ \"-33\" ]]\n    [[ $(candidate \"-10\") = \"-10\" ]]\n    [[ $(candidate \"\
    7\") = \"7\" ]]\n    [[ $(candidate \"1 -1\") = \"-1\" ]]\n}\n\nrun_test"
  status: SyntaxError
  stderr: '/tmp/tmppbf_4c5s.sh: line 12: 2 3 4 1 2 4: syntax error in expression (error
    token is "3 4 1 2 4")

    '
  stdout: ''
  timestamp: 1660004788
- exit_code: 1
  program: "#!/bin/bash\n# Given an array of integers nums, find the minimum sum of\
    \ any non-empty sub-array\n# of nums.\n# Example\n#\n# $1 is a space-separated\
    \ list\nminSubArraySum() {\n    local -n nums=$1\n    local min_sum=${nums[0]}\n\
    \    local sum=0\n    for ((i=0; i<${#nums[@]}; i++)); do\n        sum=$((sum\
    \ + nums[i]))\n        if ((sum < min_sum)); then\n            min_sum=$sum\n\
    \        fi\n        if ((sum > 0)); then\n            sum=0\n        fi\n   \
    \ done\n    echo $min_sum\n}\n\ncandidate() {\n    minSubArraySum \"$@\"\n}\n\n\
    set -e\nrun_test() {\n    [[ $(candidate \"2 3 4 1 2 4\") = \"1\" ]]\n    [[ $(candidate\
    \ \"-1 -2 -3\") = \"-6\" ]]\n    [[ $(candidate \"-1 -2 -3 2 -10\") = \"-14\"\
    \ ]]\n    [[ $(candidate \"-9999999999999999\") = \"-9999999999999999\" ]]\n \
    \   [[ $(candidate \"0 10 20 1000000\") = \"0\" ]]\n    [[ $(candidate \"-1 -2\
    \ -3 10 -5\") = \"-6\" ]]\n    [[ $(candidate \"100 -1 -2 -3 10 -5\") = \"-6\"\
    \ ]]\n    [[ $(candidate \"10 11 13 8 3 4\") = \"3\" ]]\n    [[ $(candidate \"\
    100 -33 32 -1 0 -2\") = \"-33\" ]]\n    [[ $(candidate \"-10\") = \"-10\" ]]\n\
    \    [[ $(candidate \"7\") = \"7\" ]]\n    [[ $(candidate \"1 -1\") = \"-1\" ]]\n\
    }\n\nrun_test"
  status: Exception
  stderr: '/tmp/tmpp1xvogbr.sh: line 8: local: `2 3 4 1 2 4'': invalid variable name
    for name reference

    '
  stdout: ''
  timestamp: 1660004788
- exit_code: 1
  program: "#!/bin/bash\n# Given an array of integers nums, find the minimum sum of\
    \ any non-empty sub-array\n# of nums.\n# Example\n#\n# $1 is a space-separated\
    \ list\nminSubArraySum() {\n    local -n arr=$1\n    local min=${arr[0]}\n   \
    \ local sum=0\n    for i in \"${arr[@]}\"; do\n        sum=$((sum + i))\n    \
    \    if [[ $sum -lt $min ]]; then\n            min=$sum\n        fi\n        if\
    \ [[ $sum -gt 0 ]]; then\n            sum=0\n        fi\n    done\n    echo $min\n\
    }\n\ncandidate() {\n    minSubArraySum \"$@\"\n}\n\nset -e\nrun_test() {\n   \
    \ [[ $(candidate \"2 3 4 1 2 4\") = \"1\" ]]\n    [[ $(candidate \"-1 -2 -3\"\
    ) = \"-6\" ]]\n    [[ $(candidate \"-1 -2 -3 2 -10\") = \"-14\" ]]\n    [[ $(candidate\
    \ \"-9999999999999999\") = \"-9999999999999999\" ]]\n    [[ $(candidate \"0 10\
    \ 20 1000000\") = \"0\" ]]\n    [[ $(candidate \"-1 -2 -3 10 -5\") = \"-6\" ]]\n\
    \    [[ $(candidate \"100 -1 -2 -3 10 -5\") = \"-6\" ]]\n    [[ $(candidate \"\
    10 11 13 8 3 4\") = \"3\" ]]\n    [[ $(candidate \"100 -33 32 -1 0 -2\") = \"\
    -33\" ]]\n    [[ $(candidate \"-10\") = \"-10\" ]]\n    [[ $(candidate \"7\")\
    \ = \"7\" ]]\n    [[ $(candidate \"1 -1\") = \"-1\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: '/tmp/tmpfkquxpek.sh: line 8: local: `2 3 4 1 2 4'': invalid variable name
    for name reference

    '
  stdout: ''
  timestamp: 1660004788
- exit_code: 1
  program: "#!/bin/bash\n# Given an array of integers nums, find the minimum sum of\
    \ any non-empty sub-array\n# of nums.\n# Example\n#\n# $1 is a space-separated\
    \ list\nminSubArraySum() {\n    local -n nums=$1\n    local min_sum=0\n    local\
    \ sum=0\n    for num in \"${nums[@]}\"; do\n        sum=$((sum + num))\n     \
    \   if [[ $sum -lt $min_sum ]]; then\n            min_sum=$sum\n        fi\n \
    \   done\n    echo $min_sum\n}\n\ncandidate() {\n    minSubArraySum \"$@\"\n}\n\
    \nset -e\nrun_test() {\n    [[ $(candidate \"2 3 4 1 2 4\") = \"1\" ]]\n    [[\
    \ $(candidate \"-1 -2 -3\") = \"-6\" ]]\n    [[ $(candidate \"-1 -2 -3 2 -10\"\
    ) = \"-14\" ]]\n    [[ $(candidate \"-9999999999999999\") = \"-9999999999999999\"\
    \ ]]\n    [[ $(candidate \"0 10 20 1000000\") = \"0\" ]]\n    [[ $(candidate \"\
    -1 -2 -3 10 -5\") = \"-6\" ]]\n    [[ $(candidate \"100 -1 -2 -3 10 -5\") = \"\
    -6\" ]]\n    [[ $(candidate \"10 11 13 8 3 4\") = \"3\" ]]\n    [[ $(candidate\
    \ \"100 -33 32 -1 0 -2\") = \"-33\" ]]\n    [[ $(candidate \"-10\") = \"-10\"\
    \ ]]\n    [[ $(candidate \"7\") = \"7\" ]]\n    [[ $(candidate \"1 -1\") = \"\
    -1\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: '/tmp/tmprkh8sdva.sh: line 8: local: `2 3 4 1 2 4'': invalid variable name
    for name reference

    '
  stdout: ''
  timestamp: 1660004788
- exit_code: 1
  program: "#!/bin/bash\n# Given an array of integers nums, find the minimum sum of\
    \ any non-empty sub-array\n# of nums.\n# Example\n#\n# $1 is a space-separated\
    \ list\nminSubArraySum() {\n  local -n _array=$1\n  local min=${_array[0]}\n \
    \ local sum=0\n  for i in \"${_array[@]}\"; do\n    sum=$((sum + i))\n    if [[\
    \ $sum -lt $min ]]; then\n      min=$sum\n    fi\n    if [[ $sum -gt 0 ]]; then\n\
    \      sum=0\n    fi\n  done\n  echo $min\n}\n\ncandidate() {\n    minSubArraySum\
    \ \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"2 3 4 1 2 4\") = \"\
    1\" ]]\n    [[ $(candidate \"-1 -2 -3\") = \"-6\" ]]\n    [[ $(candidate \"-1\
    \ -2 -3 2 -10\") = \"-14\" ]]\n    [[ $(candidate \"-9999999999999999\") = \"\
    -9999999999999999\" ]]\n    [[ $(candidate \"0 10 20 1000000\") = \"0\" ]]\n \
    \   [[ $(candidate \"-1 -2 -3 10 -5\") = \"-6\" ]]\n    [[ $(candidate \"100 -1\
    \ -2 -3 10 -5\") = \"-6\" ]]\n    [[ $(candidate \"10 11 13 8 3 4\") = \"3\" ]]\n\
    \    [[ $(candidate \"100 -33 32 -1 0 -2\") = \"-33\" ]]\n    [[ $(candidate \"\
    -10\") = \"-10\" ]]\n    [[ $(candidate \"7\") = \"7\" ]]\n    [[ $(candidate\
    \ \"1 -1\") = \"-1\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: '/tmp/tmp55g_csel.sh: line 8: local: `2 3 4 1 2 4'': invalid variable name
    for name reference

    '
  stdout: ''
  timestamp: 1660004788
- exit_code: 1
  program: "#!/bin/bash\n# Given an array of integers nums, find the minimum sum of\
    \ any non-empty sub-array\n# of nums.\n# Example\n#\n# $1 is a space-separated\
    \ list\nminSubArraySum() {\n  local -n _nums=$1\n  local min=${_nums[0]}\n  local\
    \ sum=0\n  for num in \"${_nums[@]}\"; do\n    sum=$((sum + num))\n    if ((sum\
    \ < min)); then\n      min=$sum\n    fi\n    if ((sum > 0)); then\n      sum=0\n\
    \    fi\n  done\n  echo $min\n}\n\ncandidate() {\n    minSubArraySum \"$@\"\n\
    }\n\nset -e\nrun_test() {\n    [[ $(candidate \"2 3 4 1 2 4\") = \"1\" ]]\n  \
    \  [[ $(candidate \"-1 -2 -3\") = \"-6\" ]]\n    [[ $(candidate \"-1 -2 -3 2 -10\"\
    ) = \"-14\" ]]\n    [[ $(candidate \"-9999999999999999\") = \"-9999999999999999\"\
    \ ]]\n    [[ $(candidate \"0 10 20 1000000\") = \"0\" ]]\n    [[ $(candidate \"\
    -1 -2 -3 10 -5\") = \"-6\" ]]\n    [[ $(candidate \"100 -1 -2 -3 10 -5\") = \"\
    -6\" ]]\n    [[ $(candidate \"10 11 13 8 3 4\") = \"3\" ]]\n    [[ $(candidate\
    \ \"100 -33 32 -1 0 -2\") = \"-33\" ]]\n    [[ $(candidate \"-10\") = \"-10\"\
    \ ]]\n    [[ $(candidate \"7\") = \"7\" ]]\n    [[ $(candidate \"1 -1\") = \"\
    -1\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: '/tmp/tmpsm6lljky.sh: line 8: local: `2 3 4 1 2 4'': invalid variable name
    for name reference

    '
  stdout: ''
  timestamp: 1660004788
- exit_code: 1
  program: "#!/bin/bash\n# Given an array of integers nums, find the minimum sum of\
    \ any non-empty sub-array\n# of nums.\n# Example\n#\n# $1 is a space-separated\
    \ list\nminSubArraySum() {\n    local -n nums=$1\n    local min=${nums[0]}\n \
    \   local sum=0\n    for i in \"${nums[@]}\"; do\n        sum=$((sum + i))\n \
    \       if [[ $sum -lt $min ]]; then\n            min=$sum\n        fi\n     \
    \   if [[ $sum -gt 0 ]]; then\n            sum=0\n        fi\n    done\n    echo\
    \ $min\n}\n\ncandidate() {\n    minSubArraySum \"$@\"\n}\n\nset -e\nrun_test()\
    \ {\n    [[ $(candidate \"2 3 4 1 2 4\") = \"1\" ]]\n    [[ $(candidate \"-1 -2\
    \ -3\") = \"-6\" ]]\n    [[ $(candidate \"-1 -2 -3 2 -10\") = \"-14\" ]]\n   \
    \ [[ $(candidate \"-9999999999999999\") = \"-9999999999999999\" ]]\n    [[ $(candidate\
    \ \"0 10 20 1000000\") = \"0\" ]]\n    [[ $(candidate \"-1 -2 -3 10 -5\") = \"\
    -6\" ]]\n    [[ $(candidate \"100 -1 -2 -3 10 -5\") = \"-6\" ]]\n    [[ $(candidate\
    \ \"10 11 13 8 3 4\") = \"3\" ]]\n    [[ $(candidate \"100 -33 32 -1 0 -2\") =\
    \ \"-33\" ]]\n    [[ $(candidate \"-10\") = \"-10\" ]]\n    [[ $(candidate \"\
    7\") = \"7\" ]]\n    [[ $(candidate \"1 -1\") = \"-1\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: '/tmp/tmprfdaox40.sh: line 8: local: `2 3 4 1 2 4'': invalid variable name
    for name reference

    '
  stdout: ''
  timestamp: 1660004788
- exit_code: 0
  program: "#!/bin/bash\n# Given an array of integers nums, find the minimum sum of\
    \ any non-empty sub-array\n# of nums.\n# Example\n#\n# $1 is a space-separated\
    \ list\nminSubArraySum() {\n  local -a nums=($1)\n  local min=${nums[0]}\n  local\
    \ sum=0\n  for ((i=0; i<${#nums[@]}; i++)); do\n    sum=$((sum + nums[i]))\n \
    \   if ((sum < min)); then\n      min=$sum\n    fi\n    if ((sum > 0)); then\n\
    \      sum=0\n    fi\n  done\n  echo $min\n}\n\ncandidate() {\n    minSubArraySum\
    \ \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"2 3 4 1 2 4\") = \"\
    1\" ]]\n    [[ $(candidate \"-1 -2 -3\") = \"-6\" ]]\n    [[ $(candidate \"-1\
    \ -2 -3 2 -10\") = \"-14\" ]]\n    [[ $(candidate \"-9999999999999999\") = \"\
    -9999999999999999\" ]]\n    [[ $(candidate \"0 10 20 1000000\") = \"0\" ]]\n \
    \   [[ $(candidate \"-1 -2 -3 10 -5\") = \"-6\" ]]\n    [[ $(candidate \"100 -1\
    \ -2 -3 10 -5\") = \"-6\" ]]\n    [[ $(candidate \"10 11 13 8 3 4\") = \"3\" ]]\n\
    \    [[ $(candidate \"100 -33 32 -1 0 -2\") = \"-33\" ]]\n    [[ $(candidate \"\
    -10\") = \"-10\" ]]\n    [[ $(candidate \"7\") = \"7\" ]]\n    [[ $(candidate\
    \ \"1 -1\") = \"-1\" ]]\n}\n\nrun_test"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660004788
- exit_code: 1
  program: "#!/bin/bash\n# Given an array of integers nums, find the minimum sum of\
    \ any non-empty sub-array\n# of nums.\n# Example\n#\n# $1 is a space-separated\
    \ list\nminSubArraySum() {\n    local -n arr=$1\n    local min=${arr[0]}\n   \
    \ local sum=0\n    for i in \"${arr[@]}\"; do\n        sum=$((sum + i))\n    \
    \    if [[ $sum -lt $min ]]; then\n            min=$sum\n        fi\n        if\
    \ [[ $sum -gt 0 ]]; then\n            sum=0\n        fi\n    done\n    echo $min\n\
    }\n\ncandidate() {\n    minSubArraySum \"$@\"\n}\n\nset -e\nrun_test() {\n   \
    \ [[ $(candidate \"2 3 4 1 2 4\") = \"1\" ]]\n    [[ $(candidate \"-1 -2 -3\"\
    ) = \"-6\" ]]\n    [[ $(candidate \"-1 -2 -3 2 -10\") = \"-14\" ]]\n    [[ $(candidate\
    \ \"-9999999999999999\") = \"-9999999999999999\" ]]\n    [[ $(candidate \"0 10\
    \ 20 1000000\") = \"0\" ]]\n    [[ $(candidate \"-1 -2 -3 10 -5\") = \"-6\" ]]\n\
    \    [[ $(candidate \"100 -1 -2 -3 10 -5\") = \"-6\" ]]\n    [[ $(candidate \"\
    10 11 13 8 3 4\") = \"3\" ]]\n    [[ $(candidate \"100 -33 32 -1 0 -2\") = \"\
    -33\" ]]\n    [[ $(candidate \"-10\") = \"-10\" ]]\n    [[ $(candidate \"7\")\
    \ = \"7\" ]]\n    [[ $(candidate \"1 -1\") = \"-1\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: '/tmp/tmpfkquxpek.sh: line 8: local: `2 3 4 1 2 4'': invalid variable name
    for name reference

    '
  stdout: ''
  timestamp: 1660004788
- exit_code: 0
  program: "#!/bin/bash\n# Given an array of integers nums, find the minimum sum of\
    \ any non-empty sub-array\n# of nums.\n# Example\n#\n# $1 is a space-separated\
    \ list\nminSubArraySum() {\n  local -a nums\n  IFS=' ' read -r -a nums <<< \"\
    $1\"\n  local min=${nums[0]}\n  local sum=0\n  for i in \"${nums[@]}\"; do\n \
    \   sum=$((sum + i))\n    if [[ $sum -lt $min ]]; then\n      min=$sum\n    fi\n\
    \    if [[ $sum -gt 0 ]]; then\n      sum=0\n    fi\n  done\n  echo $min\n}\n\n\
    candidate() {\n    minSubArraySum \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate\
    \ \"2 3 4 1 2 4\") = \"1\" ]]\n    [[ $(candidate \"-1 -2 -3\") = \"-6\" ]]\n\
    \    [[ $(candidate \"-1 -2 -3 2 -10\") = \"-14\" ]]\n    [[ $(candidate \"-9999999999999999\"\
    ) = \"-9999999999999999\" ]]\n    [[ $(candidate \"0 10 20 1000000\") = \"0\"\
    \ ]]\n    [[ $(candidate \"-1 -2 -3 10 -5\") = \"-6\" ]]\n    [[ $(candidate \"\
    100 -1 -2 -3 10 -5\") = \"-6\" ]]\n    [[ $(candidate \"10 11 13 8 3 4\") = \"\
    3\" ]]\n    [[ $(candidate \"100 -33 32 -1 0 -2\") = \"-33\" ]]\n    [[ $(candidate\
    \ \"-10\") = \"-10\" ]]\n    [[ $(candidate \"7\") = \"7\" ]]\n    [[ $(candidate\
    \ \"1 -1\") = \"-1\" ]]\n}\n\nrun_test"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660004788
- exit_code: 1
  program: "#!/bin/bash\n# Given an array of integers nums, find the minimum sum of\
    \ any non-empty sub-array\n# of nums.\n# Example\n#\n# $1 is a space-separated\
    \ list\nminSubArraySum() {\n    local -n arr=$1\n    local min=${arr[0]}\n   \
    \ local sum=0\n    for i in \"${arr[@]}\"; do\n        sum=$((sum + i))\n    \
    \    if [[ $sum -lt $min ]]; then\n            min=$sum\n        fi\n        if\
    \ [[ $sum -gt 0 ]]; then\n            sum=0\n        fi\n    done\n    echo $min\n\
    }\n\ncandidate() {\n    minSubArraySum \"$@\"\n}\n\nset -e\nrun_test() {\n   \
    \ [[ $(candidate \"2 3 4 1 2 4\") = \"1\" ]]\n    [[ $(candidate \"-1 -2 -3\"\
    ) = \"-6\" ]]\n    [[ $(candidate \"-1 -2 -3 2 -10\") = \"-14\" ]]\n    [[ $(candidate\
    \ \"-9999999999999999\") = \"-9999999999999999\" ]]\n    [[ $(candidate \"0 10\
    \ 20 1000000\") = \"0\" ]]\n    [[ $(candidate \"-1 -2 -3 10 -5\") = \"-6\" ]]\n\
    \    [[ $(candidate \"100 -1 -2 -3 10 -5\") = \"-6\" ]]\n    [[ $(candidate \"\
    10 11 13 8 3 4\") = \"3\" ]]\n    [[ $(candidate \"100 -33 32 -1 0 -2\") = \"\
    -33\" ]]\n    [[ $(candidate \"-10\") = \"-10\" ]]\n    [[ $(candidate \"7\")\
    \ = \"7\" ]]\n    [[ $(candidate \"1 -1\") = \"-1\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: '/tmp/tmpfkquxpek.sh: line 8: local: `2 3 4 1 2 4'': invalid variable name
    for name reference

    '
  stdout: ''
  timestamp: 1660004788
- exit_code: 1
  program: "#!/bin/bash\n# Given an array of integers nums, find the minimum sum of\
    \ any non-empty sub-array\n# of nums.\n# Example\n#\n# $1 is a space-separated\
    \ list\nminSubArraySum() {\n  local -n _nums=$1\n  local min_sum=${_nums[0]}\n\
    \  local sum=0\n  for num in \"${_nums[@]}\"; do\n    sum=$((sum + num))\n   \
    \ if ((sum < min_sum)); then\n      min_sum=$sum\n    fi\n    if ((sum > 0));\
    \ then\n      sum=0\n    fi\n  done\n  echo $min_sum\n}\n\ncandidate() {\n   \
    \ minSubArraySum \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"2 3 4\
    \ 1 2 4\") = \"1\" ]]\n    [[ $(candidate \"-1 -2 -3\") = \"-6\" ]]\n    [[ $(candidate\
    \ \"-1 -2 -3 2 -10\") = \"-14\" ]]\n    [[ $(candidate \"-9999999999999999\")\
    \ = \"-9999999999999999\" ]]\n    [[ $(candidate \"0 10 20 1000000\") = \"0\"\
    \ ]]\n    [[ $(candidate \"-1 -2 -3 10 -5\") = \"-6\" ]]\n    [[ $(candidate \"\
    100 -1 -2 -3 10 -5\") = \"-6\" ]]\n    [[ $(candidate \"10 11 13 8 3 4\") = \"\
    3\" ]]\n    [[ $(candidate \"100 -33 32 -1 0 -2\") = \"-33\" ]]\n    [[ $(candidate\
    \ \"-10\") = \"-10\" ]]\n    [[ $(candidate \"7\") = \"7\" ]]\n    [[ $(candidate\
    \ \"1 -1\") = \"-1\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: '/tmp/tmpoyaygn1o.sh: line 8: local: `2 3 4 1 2 4'': invalid variable name
    for name reference

    '
  stdout: ''
  timestamp: 1660004788
- exit_code: 1
  program: "#!/bin/bash\n# Given an array of integers nums, find the minimum sum of\
    \ any non-empty sub-array\n# of nums.\n# Example\n#\n# $1 is a space-separated\
    \ list\nminSubArraySum() {\n    local -n arr=$1\n    local min=${arr[0]}\n   \
    \ local sum=0\n    for i in \"${arr[@]}\"; do\n        sum=$((sum + i))\n    \
    \    if [[ $sum -lt $min ]]; then\n            min=$sum\n        fi\n        if\
    \ [[ $sum -gt 0 ]]; then\n            sum=0\n        fi\n    done\n    echo $min\n\
    }\n\ncandidate() {\n    minSubArraySum \"$@\"\n}\n\nset -e\nrun_test() {\n   \
    \ [[ $(candidate \"2 3 4 1 2 4\") = \"1\" ]]\n    [[ $(candidate \"-1 -2 -3\"\
    ) = \"-6\" ]]\n    [[ $(candidate \"-1 -2 -3 2 -10\") = \"-14\" ]]\n    [[ $(candidate\
    \ \"-9999999999999999\") = \"-9999999999999999\" ]]\n    [[ $(candidate \"0 10\
    \ 20 1000000\") = \"0\" ]]\n    [[ $(candidate \"-1 -2 -3 10 -5\") = \"-6\" ]]\n\
    \    [[ $(candidate \"100 -1 -2 -3 10 -5\") = \"-6\" ]]\n    [[ $(candidate \"\
    10 11 13 8 3 4\") = \"3\" ]]\n    [[ $(candidate \"100 -33 32 -1 0 -2\") = \"\
    -33\" ]]\n    [[ $(candidate \"-10\") = \"-10\" ]]\n    [[ $(candidate \"7\")\
    \ = \"7\" ]]\n    [[ $(candidate \"1 -1\") = \"-1\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: '/tmp/tmpfkquxpek.sh: line 8: local: `2 3 4 1 2 4'': invalid variable name
    for name reference

    '
  stdout: ''
  timestamp: 1660004788
- exit_code: 1
  program: "#!/bin/bash\n# Given an array of integers nums, find the minimum sum of\
    \ any non-empty sub-array\n# of nums.\n# Example\n#\n# $1 is a space-separated\
    \ list\nminSubArraySum() {\n    local -n nums=$1\n    local min_sum=${nums[0]}\n\
    \    local sum=0\n    for ((i=0; i<${#nums[@]}; i++)); do\n        sum=$((sum\
    \ + nums[i]))\n        if ((sum < min_sum)); then\n            min_sum=$sum\n\
    \        fi\n        if ((sum > 0)); then\n            sum=0\n        fi\n   \
    \ done\n    echo $min_sum\n}\n\ncandidate() {\n    minSubArraySum \"$@\"\n}\n\n\
    set -e\nrun_test() {\n    [[ $(candidate \"2 3 4 1 2 4\") = \"1\" ]]\n    [[ $(candidate\
    \ \"-1 -2 -3\") = \"-6\" ]]\n    [[ $(candidate \"-1 -2 -3 2 -10\") = \"-14\"\
    \ ]]\n    [[ $(candidate \"-9999999999999999\") = \"-9999999999999999\" ]]\n \
    \   [[ $(candidate \"0 10 20 1000000\") = \"0\" ]]\n    [[ $(candidate \"-1 -2\
    \ -3 10 -5\") = \"-6\" ]]\n    [[ $(candidate \"100 -1 -2 -3 10 -5\") = \"-6\"\
    \ ]]\n    [[ $(candidate \"10 11 13 8 3 4\") = \"3\" ]]\n    [[ $(candidate \"\
    100 -33 32 -1 0 -2\") = \"-33\" ]]\n    [[ $(candidate \"-10\") = \"-10\" ]]\n\
    \    [[ $(candidate \"7\") = \"7\" ]]\n    [[ $(candidate \"1 -1\") = \"-1\" ]]\n\
    }\n\nrun_test"
  status: Exception
  stderr: '/tmp/tmpp1xvogbr.sh: line 8: local: `2 3 4 1 2 4'': invalid variable name
    for name reference

    '
  stdout: ''
  timestamp: 1660004788
- exit_code: 1
  program: "#!/bin/bash\n# Given an array of integers nums, find the minimum sum of\
    \ any non-empty sub-array\n# of nums.\n# Example\n#\n# $1 is a space-separated\
    \ list\nminSubArraySum() {\n    local -n nums=$1\n    local min=${nums[0]}\n \
    \   local sum=0\n    for num in \"${nums[@]}\"; do\n        sum=$((sum + num))\n\
    \        if [[ $sum -lt $min ]]; then\n            min=$sum\n        fi\n    \
    \    if [[ $sum -gt 0 ]]; then\n            sum=0\n        fi\n    done\n    echo\
    \ $min\n}\n\ncandidate() {\n    minSubArraySum \"$@\"\n}\n\nset -e\nrun_test()\
    \ {\n    [[ $(candidate \"2 3 4 1 2 4\") = \"1\" ]]\n    [[ $(candidate \"-1 -2\
    \ -3\") = \"-6\" ]]\n    [[ $(candidate \"-1 -2 -3 2 -10\") = \"-14\" ]]\n   \
    \ [[ $(candidate \"-9999999999999999\") = \"-9999999999999999\" ]]\n    [[ $(candidate\
    \ \"0 10 20 1000000\") = \"0\" ]]\n    [[ $(candidate \"-1 -2 -3 10 -5\") = \"\
    -6\" ]]\n    [[ $(candidate \"100 -1 -2 -3 10 -5\") = \"-6\" ]]\n    [[ $(candidate\
    \ \"10 11 13 8 3 4\") = \"3\" ]]\n    [[ $(candidate \"100 -33 32 -1 0 -2\") =\
    \ \"-33\" ]]\n    [[ $(candidate \"-10\") = \"-10\" ]]\n    [[ $(candidate \"\
    7\") = \"7\" ]]\n    [[ $(candidate \"1 -1\") = \"-1\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: '/tmp/tmpk635_irt.sh: line 8: local: `2 3 4 1 2 4'': invalid variable name
    for name reference

    '
  stdout: ''
  timestamp: 1660004788
- exit_code: 0
  program: "#!/bin/bash\n# Given an array of integers nums, find the minimum sum of\
    \ any non-empty sub-array\n# of nums.\n# Example\n#\n# $1 is a space-separated\
    \ list\nminSubArraySum() {\n    local nums=($1)\n    local min_sum=${nums[0]}\n\
    \    local sum=0\n    for i in \"${nums[@]}\"; do\n        sum=$((sum + i))\n\
    \        if [[ $sum -lt $min_sum ]]; then\n            min_sum=$sum\n        fi\n\
    \        if [[ $sum -gt 0 ]]; then\n            sum=0\n        fi\n    done\n\
    \    echo $min_sum\n}\n\ncandidate() {\n    minSubArraySum \"$@\"\n}\n\nset -e\n\
    run_test() {\n    [[ $(candidate \"2 3 4 1 2 4\") = \"1\" ]]\n    [[ $(candidate\
    \ \"-1 -2 -3\") = \"-6\" ]]\n    [[ $(candidate \"-1 -2 -3 2 -10\") = \"-14\"\
    \ ]]\n    [[ $(candidate \"-9999999999999999\") = \"-9999999999999999\" ]]\n \
    \   [[ $(candidate \"0 10 20 1000000\") = \"0\" ]]\n    [[ $(candidate \"-1 -2\
    \ -3 10 -5\") = \"-6\" ]]\n    [[ $(candidate \"100 -1 -2 -3 10 -5\") = \"-6\"\
    \ ]]\n    [[ $(candidate \"10 11 13 8 3 4\") = \"3\" ]]\n    [[ $(candidate \"\
    100 -33 32 -1 0 -2\") = \"-33\" ]]\n    [[ $(candidate \"-10\") = \"-10\" ]]\n\
    \    [[ $(candidate \"7\") = \"7\" ]]\n    [[ $(candidate \"1 -1\") = \"-1\" ]]\n\
    }\n\nrun_test"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660004788
- exit_code: 1
  program: "#!/bin/bash\n# Given an array of integers nums, find the minimum sum of\
    \ any non-empty sub-array\n# of nums.\n# Example\n#\n# $1 is a space-separated\
    \ list\nminSubArraySum() {\n    local -n arr=$1\n    local min=${arr[0]}\n   \
    \ local sum=0\n    for i in \"${arr[@]}\"; do\n        sum=$((sum + i))\n    \
    \    if [[ $sum -lt $min ]]; then\n            min=$sum\n        fi\n        if\
    \ [[ $sum -gt 0 ]]; then\n            sum=0\n        fi\n    done\n    echo $min\n\
    }\n\ncandidate() {\n    minSubArraySum \"$@\"\n}\n\nset -e\nrun_test() {\n   \
    \ [[ $(candidate \"2 3 4 1 2 4\") = \"1\" ]]\n    [[ $(candidate \"-1 -2 -3\"\
    ) = \"-6\" ]]\n    [[ $(candidate \"-1 -2 -3 2 -10\") = \"-14\" ]]\n    [[ $(candidate\
    \ \"-9999999999999999\") = \"-9999999999999999\" ]]\n    [[ $(candidate \"0 10\
    \ 20 1000000\") = \"0\" ]]\n    [[ $(candidate \"-1 -2 -3 10 -5\") = \"-6\" ]]\n\
    \    [[ $(candidate \"100 -1 -2 -3 10 -5\") = \"-6\" ]]\n    [[ $(candidate \"\
    10 11 13 8 3 4\") = \"3\" ]]\n    [[ $(candidate \"100 -33 32 -1 0 -2\") = \"\
    -33\" ]]\n    [[ $(candidate \"-10\") = \"-10\" ]]\n    [[ $(candidate \"7\")\
    \ = \"7\" ]]\n    [[ $(candidate \"1 -1\") = \"-1\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: '/tmp/tmpfkquxpek.sh: line 8: local: `2 3 4 1 2 4'': invalid variable name
    for name reference

    '
  stdout: ''
  timestamp: 1660004788
- exit_code: 1
  program: "#!/bin/bash\n# Given an array of integers nums, find the minimum sum of\
    \ any non-empty sub-array\n# of nums.\n# Example\n#\n# $1 is a space-separated\
    \ list\nminSubArraySum() {\n    local -n arr=$1\n    local min_sum=0\n    local\
    \ sum=0\n    for i in \"${arr[@]}\"; do\n        sum=$((sum + i))\n        if\
    \ [[ $sum -lt $min_sum ]]; then\n            min_sum=$sum\n        fi\n    done\n\
    \    echo $min_sum\n}\n\ncandidate() {\n    minSubArraySum \"$@\"\n}\n\nset -e\n\
    run_test() {\n    [[ $(candidate \"2 3 4 1 2 4\") = \"1\" ]]\n    [[ $(candidate\
    \ \"-1 -2 -3\") = \"-6\" ]]\n    [[ $(candidate \"-1 -2 -3 2 -10\") = \"-14\"\
    \ ]]\n    [[ $(candidate \"-9999999999999999\") = \"-9999999999999999\" ]]\n \
    \   [[ $(candidate \"0 10 20 1000000\") = \"0\" ]]\n    [[ $(candidate \"-1 -2\
    \ -3 10 -5\") = \"-6\" ]]\n    [[ $(candidate \"100 -1 -2 -3 10 -5\") = \"-6\"\
    \ ]]\n    [[ $(candidate \"10 11 13 8 3 4\") = \"3\" ]]\n    [[ $(candidate \"\
    100 -33 32 -1 0 -2\") = \"-33\" ]]\n    [[ $(candidate \"-10\") = \"-10\" ]]\n\
    \    [[ $(candidate \"7\") = \"7\" ]]\n    [[ $(candidate \"1 -1\") = \"-1\" ]]\n\
    }\n\nrun_test"
  status: Exception
  stderr: '/tmp/tmpekc6n2p6.sh: line 8: local: `2 3 4 1 2 4'': invalid variable name
    for name reference

    '
  stdout: ''
  timestamp: 1660004788
- exit_code: 1
  program: "#!/bin/bash\n# Given an array of integers nums, find the minimum sum of\
    \ any non-empty sub-array\n# of nums.\n# Example\n#\n# $1 is a space-separated\
    \ list\nminSubArraySum() {\n  local -a nums=(\"$@\")\n  local min_sum=0\n  local\
    \ sum=0\n  for ((i=0; i<${#nums[@]}; i++)); do\n    sum=$((sum + nums[i]))\n \
    \   if [[ $sum -lt $min_sum ]]; then\n      min_sum=$sum\n    fi\n  done\n  echo\
    \ $min_sum\n}\n\ncandidate() {\n    minSubArraySum \"$@\"\n}\n\nset -e\nrun_test()\
    \ {\n    [[ $(candidate \"2 3 4 1 2 4\") = \"1\" ]]\n    [[ $(candidate \"-1 -2\
    \ -3\") = \"-6\" ]]\n    [[ $(candidate \"-1 -2 -3 2 -10\") = \"-14\" ]]\n   \
    \ [[ $(candidate \"-9999999999999999\") = \"-9999999999999999\" ]]\n    [[ $(candidate\
    \ \"0 10 20 1000000\") = \"0\" ]]\n    [[ $(candidate \"-1 -2 -3 10 -5\") = \"\
    -6\" ]]\n    [[ $(candidate \"100 -1 -2 -3 10 -5\") = \"-6\" ]]\n    [[ $(candidate\
    \ \"10 11 13 8 3 4\") = \"3\" ]]\n    [[ $(candidate \"100 -33 32 -1 0 -2\") =\
    \ \"-33\" ]]\n    [[ $(candidate \"-10\") = \"-10\" ]]\n    [[ $(candidate \"\
    7\") = \"7\" ]]\n    [[ $(candidate \"1 -1\") = \"-1\" ]]\n}\n\nrun_test"
  status: SyntaxError
  stderr: '/tmp/tmp8k1c859n.sh: line 12: 2 3 4 1 2 4: syntax error in expression (error
    token is "3 4 1 2 4")

    '
  stdout: ''
  timestamp: 1660004788
- exit_code: 1
  program: "#!/bin/bash\n# Given an array of integers nums, find the minimum sum of\
    \ any non-empty sub-array\n# of nums.\n# Example\n#\n# $1 is a space-separated\
    \ list\nminSubArraySum() {\n  local -n arr=$1\n  local min=${arr[0]}\n  local\
    \ sum=0\n  for ((i=0; i<${#arr[@]}; i++)); do\n    sum=$((sum + arr[i]))\n   \
    \ if ((sum < min)); then\n      min=$sum\n    fi\n    if ((sum > 0)); then\n \
    \     sum=0\n    fi\n  done\n  echo $min\n}\n\ncandidate() {\n    minSubArraySum\
    \ \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"2 3 4 1 2 4\") = \"\
    1\" ]]\n    [[ $(candidate \"-1 -2 -3\") = \"-6\" ]]\n    [[ $(candidate \"-1\
    \ -2 -3 2 -10\") = \"-14\" ]]\n    [[ $(candidate \"-9999999999999999\") = \"\
    -9999999999999999\" ]]\n    [[ $(candidate \"0 10 20 1000000\") = \"0\" ]]\n \
    \   [[ $(candidate \"-1 -2 -3 10 -5\") = \"-6\" ]]\n    [[ $(candidate \"100 -1\
    \ -2 -3 10 -5\") = \"-6\" ]]\n    [[ $(candidate \"10 11 13 8 3 4\") = \"3\" ]]\n\
    \    [[ $(candidate \"100 -33 32 -1 0 -2\") = \"-33\" ]]\n    [[ $(candidate \"\
    -10\") = \"-10\" ]]\n    [[ $(candidate \"7\") = \"7\" ]]\n    [[ $(candidate\
    \ \"1 -1\") = \"-1\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: '/tmp/tmpwymzt6b2.sh: line 8: local: `2 3 4 1 2 4'': invalid variable name
    for name reference

    '
  stdout: ''
  timestamp: 1660004788
- exit_code: 1
  program: "#!/bin/bash\n# Given an array of integers nums, find the minimum sum of\
    \ any non-empty sub-array\n# of nums.\n# Example\n#\n# $1 is a space-separated\
    \ list\nminSubArraySum() {\n    local -n nums=$1\n    local min_sum=0\n    local\
    \ sum=0\n    local i=0\n    local n=${#nums[@]}\n    while (( i < n )); do\n \
    \       sum=$(( sum + nums[i] ))\n        if (( sum < min_sum )); then\n     \
    \       min_sum=$sum\n        fi\n        (( i++ ))\n    done\n    echo $min_sum\n\
    }\n\ncandidate() {\n    minSubArraySum \"$@\"\n}\n\nset -e\nrun_test() {\n   \
    \ [[ $(candidate \"2 3 4 1 2 4\") = \"1\" ]]\n    [[ $(candidate \"-1 -2 -3\"\
    ) = \"-6\" ]]\n    [[ $(candidate \"-1 -2 -3 2 -10\") = \"-14\" ]]\n    [[ $(candidate\
    \ \"-9999999999999999\") = \"-9999999999999999\" ]]\n    [[ $(candidate \"0 10\
    \ 20 1000000\") = \"0\" ]]\n    [[ $(candidate \"-1 -2 -3 10 -5\") = \"-6\" ]]\n\
    \    [[ $(candidate \"100 -1 -2 -3 10 -5\") = \"-6\" ]]\n    [[ $(candidate \"\
    10 11 13 8 3 4\") = \"3\" ]]\n    [[ $(candidate \"100 -33 32 -1 0 -2\") = \"\
    -33\" ]]\n    [[ $(candidate \"-10\") = \"-10\" ]]\n    [[ $(candidate \"7\")\
    \ = \"7\" ]]\n    [[ $(candidate \"1 -1\") = \"-1\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: '/tmp/tmpg_f303f6.sh: line 8: local: `2 3 4 1 2 4'': invalid variable name
    for name reference

    '
  stdout: ''
  timestamp: 1660004788
- exit_code: 1
  program: "#!/bin/bash\n# Given an array of integers nums, find the minimum sum of\
    \ any non-empty sub-array\n# of nums.\n# Example\n#\n# $1 is a space-separated\
    \ list\nminSubArraySum() {\n    local -a nums=()\n    local -i i=0 sum=0 min=0\n\
    \    IFS=' ' read -r -a nums <<< \"$1\"\n    min=${nums[0]}\n    for ((i=0; i<${#nums[@]};\
    \ i++)); do\n        if ((sum < 0)); then\n            sum=0\n        fi\n   \
    \     sum+=${nums[i]}\n        if ((sum < min)); then\n            min=sum\n \
    \       fi\n    done\n    echo $min\n}\n\ncandidate() {\n    minSubArraySum \"\
    $@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"2 3 4 1 2 4\") = \"1\" ]]\n\
    \    [[ $(candidate \"-1 -2 -3\") = \"-6\" ]]\n    [[ $(candidate \"-1 -2 -3 2\
    \ -10\") = \"-14\" ]]\n    [[ $(candidate \"-9999999999999999\") = \"-9999999999999999\"\
    \ ]]\n    [[ $(candidate \"0 10 20 1000000\") = \"0\" ]]\n    [[ $(candidate \"\
    -1 -2 -3 10 -5\") = \"-6\" ]]\n    [[ $(candidate \"100 -1 -2 -3 10 -5\") = \"\
    -6\" ]]\n    [[ $(candidate \"10 11 13 8 3 4\") = \"3\" ]]\n    [[ $(candidate\
    \ \"100 -33 32 -1 0 -2\") = \"-33\" ]]\n    [[ $(candidate \"-10\") = \"-10\"\
    \ ]]\n    [[ $(candidate \"7\") = \"7\" ]]\n    [[ $(candidate \"1 -1\") = \"\
    -1\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660004788
- exit_code: 1
  program: "#!/bin/bash\n# Given an array of integers nums, find the minimum sum of\
    \ any non-empty sub-array\n# of nums.\n# Example\n#\n# $1 is a space-separated\
    \ list\nminSubArraySum() {\n    local -n nums=$1\n    local min_sum=${nums[0]}\n\
    \    local sum=0\n    for num in \"${nums[@]}\"; do\n        sum=$((sum + num))\n\
    \        if [[ $sum -lt $min_sum ]]; then\n            min_sum=$sum\n        fi\n\
    \        if [[ $sum -gt 0 ]]; then\n            sum=0\n        fi\n    done\n\
    \    echo $min_sum\n}\n\ncandidate() {\n    minSubArraySum \"$@\"\n}\n\nset -e\n\
    run_test() {\n    [[ $(candidate \"2 3 4 1 2 4\") = \"1\" ]]\n    [[ $(candidate\
    \ \"-1 -2 -3\") = \"-6\" ]]\n    [[ $(candidate \"-1 -2 -3 2 -10\") = \"-14\"\
    \ ]]\n    [[ $(candidate \"-9999999999999999\") = \"-9999999999999999\" ]]\n \
    \   [[ $(candidate \"0 10 20 1000000\") = \"0\" ]]\n    [[ $(candidate \"-1 -2\
    \ -3 10 -5\") = \"-6\" ]]\n    [[ $(candidate \"100 -1 -2 -3 10 -5\") = \"-6\"\
    \ ]]\n    [[ $(candidate \"10 11 13 8 3 4\") = \"3\" ]]\n    [[ $(candidate \"\
    100 -33 32 -1 0 -2\") = \"-33\" ]]\n    [[ $(candidate \"-10\") = \"-10\" ]]\n\
    \    [[ $(candidate \"7\") = \"7\" ]]\n    [[ $(candidate \"1 -1\") = \"-1\" ]]\n\
    }\n\nrun_test"
  status: Exception
  stderr: '/tmp/tmp8j_azv21.sh: line 8: local: `2 3 4 1 2 4'': invalid variable name
    for name reference

    '
  stdout: ''
  timestamp: 1660004788
- exit_code: 1
  program: "#!/bin/bash\n# Given an array of integers nums, find the minimum sum of\
    \ any non-empty sub-array\n# of nums.\n# Example\n#\n# $1 is a space-separated\
    \ list\nminSubArraySum() {\n    local -n nums=$1\n    local min_sum=${nums[0]}\n\
    \    local sum=0\n    for num in \"${nums[@]}\"; do\n        sum=$((sum + num))\n\
    \        if [[ $sum -lt $min_sum ]]; then\n            min_sum=$sum\n        fi\n\
    \        if [[ $sum -gt 0 ]]; then\n            sum=0\n        fi\n    done\n\
    \    echo $min_sum\n}\n\ncandidate() {\n    minSubArraySum \"$@\"\n}\n\nset -e\n\
    run_test() {\n    [[ $(candidate \"2 3 4 1 2 4\") = \"1\" ]]\n    [[ $(candidate\
    \ \"-1 -2 -3\") = \"-6\" ]]\n    [[ $(candidate \"-1 -2 -3 2 -10\") = \"-14\"\
    \ ]]\n    [[ $(candidate \"-9999999999999999\") = \"-9999999999999999\" ]]\n \
    \   [[ $(candidate \"0 10 20 1000000\") = \"0\" ]]\n    [[ $(candidate \"-1 -2\
    \ -3 10 -5\") = \"-6\" ]]\n    [[ $(candidate \"100 -1 -2 -3 10 -5\") = \"-6\"\
    \ ]]\n    [[ $(candidate \"10 11 13 8 3 4\") = \"3\" ]]\n    [[ $(candidate \"\
    100 -33 32 -1 0 -2\") = \"-33\" ]]\n    [[ $(candidate \"-10\") = \"-10\" ]]\n\
    \    [[ $(candidate \"7\") = \"7\" ]]\n    [[ $(candidate \"1 -1\") = \"-1\" ]]\n\
    }\n\nrun_test"
  status: Exception
  stderr: '/tmp/tmp8j_azv21.sh: line 8: local: `2 3 4 1 2 4'': invalid variable name
    for name reference

    '
  stdout: ''
  timestamp: 1660004788
- exit_code: 1
  program: "#!/bin/bash\n# Given an array of integers nums, find the minimum sum of\
    \ any non-empty sub-array\n# of nums.\n# Example\n#\n# $1 is a space-separated\
    \ list\nminSubArraySum() {\n    local -n arr=$1\n    local min=${arr[0]}\n   \
    \ local sum=0\n    for i in \"${arr[@]}\"; do\n        sum=$((sum + i))\n    \
    \    if [[ $sum -lt $min ]]; then\n            min=$sum\n        fi\n        if\
    \ [[ $sum -gt 0 ]]; then\n            sum=0\n        fi\n    done\n    echo $min\n\
    }\n\ncandidate() {\n    minSubArraySum \"$@\"\n}\n\nset -e\nrun_test() {\n   \
    \ [[ $(candidate \"2 3 4 1 2 4\") = \"1\" ]]\n    [[ $(candidate \"-1 -2 -3\"\
    ) = \"-6\" ]]\n    [[ $(candidate \"-1 -2 -3 2 -10\") = \"-14\" ]]\n    [[ $(candidate\
    \ \"-9999999999999999\") = \"-9999999999999999\" ]]\n    [[ $(candidate \"0 10\
    \ 20 1000000\") = \"0\" ]]\n    [[ $(candidate \"-1 -2 -3 10 -5\") = \"-6\" ]]\n\
    \    [[ $(candidate \"100 -1 -2 -3 10 -5\") = \"-6\" ]]\n    [[ $(candidate \"\
    10 11 13 8 3 4\") = \"3\" ]]\n    [[ $(candidate \"100 -33 32 -1 0 -2\") = \"\
    -33\" ]]\n    [[ $(candidate \"-10\") = \"-10\" ]]\n    [[ $(candidate \"7\")\
    \ = \"7\" ]]\n    [[ $(candidate \"1 -1\") = \"-1\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: '/tmp/tmpfkquxpek.sh: line 8: local: `2 3 4 1 2 4'': invalid variable name
    for name reference

    '
  stdout: ''
  timestamp: 1660004788
- exit_code: 1
  program: "#!/bin/bash\n# Given an array of integers nums, find the minimum sum of\
    \ any non-empty sub-array\n# of nums.\n# Example\n#\n# $1 is a space-separated\
    \ list\nminSubArraySum() {\n    local nums=$1\n    local min=0\n    local sum=0\n\
    \    for num in $nums; do\n        sum=$((sum + num))\n        if [[ $sum -lt\
    \ $min ]]; then\n            min=$sum\n        fi\n    done\n    echo $min\n}\n\
    \ncandidate() {\n    minSubArraySum \"$@\"\n}\n\nset -e\nrun_test() {\n    [[\
    \ $(candidate \"2 3 4 1 2 4\") = \"1\" ]]\n    [[ $(candidate \"-1 -2 -3\") =\
    \ \"-6\" ]]\n    [[ $(candidate \"-1 -2 -3 2 -10\") = \"-14\" ]]\n    [[ $(candidate\
    \ \"-9999999999999999\") = \"-9999999999999999\" ]]\n    [[ $(candidate \"0 10\
    \ 20 1000000\") = \"0\" ]]\n    [[ $(candidate \"-1 -2 -3 10 -5\") = \"-6\" ]]\n\
    \    [[ $(candidate \"100 -1 -2 -3 10 -5\") = \"-6\" ]]\n    [[ $(candidate \"\
    10 11 13 8 3 4\") = \"3\" ]]\n    [[ $(candidate \"100 -33 32 -1 0 -2\") = \"\
    -33\" ]]\n    [[ $(candidate \"-10\") = \"-10\" ]]\n    [[ $(candidate \"7\")\
    \ = \"7\" ]]\n    [[ $(candidate \"1 -1\") = \"-1\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660004788
- exit_code: 1
  program: "#!/bin/bash\n# Given an array of integers nums, find the minimum sum of\
    \ any non-empty sub-array\n# of nums.\n# Example\n#\n# $1 is a space-separated\
    \ list\nminSubArraySum() {\n    local -n _nums=$1\n    local min=${_nums[0]}\n\
    \    local sum=0\n    for num in \"${_nums[@]}\"; do\n        sum=$((sum + num))\n\
    \        if [[ $sum -lt $min ]]; then\n            min=$sum\n        fi\n    \
    \    if [[ $sum -gt 0 ]]; then\n            sum=0\n        fi\n    done\n    echo\
    \ $min\n}\n\ncandidate() {\n    minSubArraySum \"$@\"\n}\n\nset -e\nrun_test()\
    \ {\n    [[ $(candidate \"2 3 4 1 2 4\") = \"1\" ]]\n    [[ $(candidate \"-1 -2\
    \ -3\") = \"-6\" ]]\n    [[ $(candidate \"-1 -2 -3 2 -10\") = \"-14\" ]]\n   \
    \ [[ $(candidate \"-9999999999999999\") = \"-9999999999999999\" ]]\n    [[ $(candidate\
    \ \"0 10 20 1000000\") = \"0\" ]]\n    [[ $(candidate \"-1 -2 -3 10 -5\") = \"\
    -6\" ]]\n    [[ $(candidate \"100 -1 -2 -3 10 -5\") = \"-6\" ]]\n    [[ $(candidate\
    \ \"10 11 13 8 3 4\") = \"3\" ]]\n    [[ $(candidate \"100 -33 32 -1 0 -2\") =\
    \ \"-33\" ]]\n    [[ $(candidate \"-10\") = \"-10\" ]]\n    [[ $(candidate \"\
    7\") = \"7\" ]]\n    [[ $(candidate \"1 -1\") = \"-1\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: '/tmp/tmpmw_gw7ur.sh: line 8: local: `2 3 4 1 2 4'': invalid variable name
    for name reference

    '
  stdout: ''
  timestamp: 1660004788
- exit_code: 1
  program: "#!/bin/bash\n# Given an array of integers nums, find the minimum sum of\
    \ any non-empty sub-array\n# of nums.\n# Example\n#\n# $1 is a space-separated\
    \ list\nminSubArraySum() {\n    local -a nums=(\"$@\")\n    local min_sum=${nums[0]}\n\
    \    local sum=0\n    for num in \"${nums[@]}\"; do\n        sum=$((sum + num))\n\
    \        if ((sum < min_sum)); then\n            min_sum=$sum\n        fi\n  \
    \      if ((sum > 0)); then\n            sum=0\n        fi\n    done\n    echo\
    \ $min_sum\n}\n\ncandidate() {\n    minSubArraySum \"$@\"\n}\n\nset -e\nrun_test()\
    \ {\n    [[ $(candidate \"2 3 4 1 2 4\") = \"1\" ]]\n    [[ $(candidate \"-1 -2\
    \ -3\") = \"-6\" ]]\n    [[ $(candidate \"-1 -2 -3 2 -10\") = \"-14\" ]]\n   \
    \ [[ $(candidate \"-9999999999999999\") = \"-9999999999999999\" ]]\n    [[ $(candidate\
    \ \"0 10 20 1000000\") = \"0\" ]]\n    [[ $(candidate \"-1 -2 -3 10 -5\") = \"\
    -6\" ]]\n    [[ $(candidate \"100 -1 -2 -3 10 -5\") = \"-6\" ]]\n    [[ $(candidate\
    \ \"10 11 13 8 3 4\") = \"3\" ]]\n    [[ $(candidate \"100 -33 32 -1 0 -2\") =\
    \ \"-33\" ]]\n    [[ $(candidate \"-10\") = \"-10\" ]]\n    [[ $(candidate \"\
    7\") = \"7\" ]]\n    [[ $(candidate \"1 -1\") = \"-1\" ]]\n}\n\nrun_test"
  status: SyntaxError
  stderr: '/tmp/tmppl_jp8ld.sh: line 12: 2 3 4 1 2 4: syntax error in expression (error
    token is "3 4 1 2 4")

    '
  stdout: ''
  timestamp: 1660004788
- exit_code: 1
  program: "#!/bin/bash\n# Given an array of integers nums, find the minimum sum of\
    \ any non-empty sub-array\n# of nums.\n# Example\n#\n# $1 is a space-separated\
    \ list\nminSubArraySum() {\n    local -n nums=$1\n    local min=${nums[0]}\n \
    \   local sum=0\n    for num in \"${nums[@]}\"; do\n        sum=$((sum + num))\n\
    \        if ((sum < min)); then\n            min=$sum\n        fi\n        if\
    \ ((sum > 0)); then\n            sum=0\n        fi\n    done\n    echo $min\n\
    }\n\ncandidate() {\n    minSubArraySum \"$@\"\n}\n\nset -e\nrun_test() {\n   \
    \ [[ $(candidate \"2 3 4 1 2 4\") = \"1\" ]]\n    [[ $(candidate \"-1 -2 -3\"\
    ) = \"-6\" ]]\n    [[ $(candidate \"-1 -2 -3 2 -10\") = \"-14\" ]]\n    [[ $(candidate\
    \ \"-9999999999999999\") = \"-9999999999999999\" ]]\n    [[ $(candidate \"0 10\
    \ 20 1000000\") = \"0\" ]]\n    [[ $(candidate \"-1 -2 -3 10 -5\") = \"-6\" ]]\n\
    \    [[ $(candidate \"100 -1 -2 -3 10 -5\") = \"-6\" ]]\n    [[ $(candidate \"\
    10 11 13 8 3 4\") = \"3\" ]]\n    [[ $(candidate \"100 -33 32 -1 0 -2\") = \"\
    -33\" ]]\n    [[ $(candidate \"-10\") = \"-10\" ]]\n    [[ $(candidate \"7\")\
    \ = \"7\" ]]\n    [[ $(candidate \"1 -1\") = \"-1\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: '/tmp/tmpimh95uyn.sh: line 8: local: `2 3 4 1 2 4'': invalid variable name
    for name reference

    '
  stdout: ''
  timestamp: 1660004788
- exit_code: 1
  program: "#!/bin/bash\n# Given an array of integers nums, find the minimum sum of\
    \ any non-empty sub-array\n# of nums.\n# Example\n#\n# $1 is a space-separated\
    \ list\nminSubArraySum() {\n    local -n arr=$1\n    local min=${arr[0]}\n   \
    \ local sum=0\n    for i in \"${arr[@]}\"; do\n        (( sum += i ))\n      \
    \  (( sum < min )) && min=$sum\n        (( sum > 0 )) && sum=0\n    done\n   \
    \ echo $min\n}\n\ncandidate() {\n    minSubArraySum \"$@\"\n}\n\nset -e\nrun_test()\
    \ {\n    [[ $(candidate \"2 3 4 1 2 4\") = \"1\" ]]\n    [[ $(candidate \"-1 -2\
    \ -3\") = \"-6\" ]]\n    [[ $(candidate \"-1 -2 -3 2 -10\") = \"-14\" ]]\n   \
    \ [[ $(candidate \"-9999999999999999\") = \"-9999999999999999\" ]]\n    [[ $(candidate\
    \ \"0 10 20 1000000\") = \"0\" ]]\n    [[ $(candidate \"-1 -2 -3 10 -5\") = \"\
    -6\" ]]\n    [[ $(candidate \"100 -1 -2 -3 10 -5\") = \"-6\" ]]\n    [[ $(candidate\
    \ \"10 11 13 8 3 4\") = \"3\" ]]\n    [[ $(candidate \"100 -33 32 -1 0 -2\") =\
    \ \"-33\" ]]\n    [[ $(candidate \"-10\") = \"-10\" ]]\n    [[ $(candidate \"\
    7\") = \"7\" ]]\n    [[ $(candidate \"1 -1\") = \"-1\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: '/tmp/tmpp667dtz7.sh: line 8: local: `2 3 4 1 2 4'': invalid variable name
    for name reference

    '
  stdout: ''
  timestamp: 1660004788
- exit_code: 0
  program: "#!/bin/bash\n# Given an array of integers nums, find the minimum sum of\
    \ any non-empty sub-array\n# of nums.\n# Example\n#\n# $1 is a space-separated\
    \ list\nminSubArraySum() {\n  local nums=($1)\n  local min_sum=${nums[0]}\n  local\
    \ sum=0\n  for i in ${nums[@]}; do\n    sum=$((sum + i))\n    if [[ $sum -lt $min_sum\
    \ ]]; then\n      min_sum=$sum\n    fi\n    if [[ $sum -gt 0 ]]; then\n      sum=0\n\
    \    fi\n  done\n  echo $min_sum\n}\n\ncandidate() {\n    minSubArraySum \"$@\"\
    \n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"2 3 4 1 2 4\") = \"1\" ]]\n\
    \    [[ $(candidate \"-1 -2 -3\") = \"-6\" ]]\n    [[ $(candidate \"-1 -2 -3 2\
    \ -10\") = \"-14\" ]]\n    [[ $(candidate \"-9999999999999999\") = \"-9999999999999999\"\
    \ ]]\n    [[ $(candidate \"0 10 20 1000000\") = \"0\" ]]\n    [[ $(candidate \"\
    -1 -2 -3 10 -5\") = \"-6\" ]]\n    [[ $(candidate \"100 -1 -2 -3 10 -5\") = \"\
    -6\" ]]\n    [[ $(candidate \"10 11 13 8 3 4\") = \"3\" ]]\n    [[ $(candidate\
    \ \"100 -33 32 -1 0 -2\") = \"-33\" ]]\n    [[ $(candidate \"-10\") = \"-10\"\
    \ ]]\n    [[ $(candidate \"7\") = \"7\" ]]\n    [[ $(candidate \"1 -1\") = \"\
    -1\" ]]\n}\n\nrun_test"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660004788
- exit_code: 1
  program: "#!/bin/bash\n# Given an array of integers nums, find the minimum sum of\
    \ any non-empty sub-array\n# of nums.\n# Example\n#\n# $1 is a space-separated\
    \ list\nminSubArraySum() {\n    local -n nums=$1\n    local min=${nums[0]}\n \
    \   local sum=0\n    for i in \"${nums[@]}\"; do\n        sum=$((sum + i))\n \
    \       if [[ $sum -lt $min ]]; then\n            min=$sum\n        fi\n     \
    \   if [[ $sum -gt 0 ]]; then\n            sum=0\n        fi\n    done\n    echo\
    \ $min\n}\n\ncandidate() {\n    minSubArraySum \"$@\"\n}\n\nset -e\nrun_test()\
    \ {\n    [[ $(candidate \"2 3 4 1 2 4\") = \"1\" ]]\n    [[ $(candidate \"-1 -2\
    \ -3\") = \"-6\" ]]\n    [[ $(candidate \"-1 -2 -3 2 -10\") = \"-14\" ]]\n   \
    \ [[ $(candidate \"-9999999999999999\") = \"-9999999999999999\" ]]\n    [[ $(candidate\
    \ \"0 10 20 1000000\") = \"0\" ]]\n    [[ $(candidate \"-1 -2 -3 10 -5\") = \"\
    -6\" ]]\n    [[ $(candidate \"100 -1 -2 -3 10 -5\") = \"-6\" ]]\n    [[ $(candidate\
    \ \"10 11 13 8 3 4\") = \"3\" ]]\n    [[ $(candidate \"100 -33 32 -1 0 -2\") =\
    \ \"-33\" ]]\n    [[ $(candidate \"-10\") = \"-10\" ]]\n    [[ $(candidate \"\
    7\") = \"7\" ]]\n    [[ $(candidate \"1 -1\") = \"-1\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: '/tmp/tmprfdaox40.sh: line 8: local: `2 3 4 1 2 4'': invalid variable name
    for name reference

    '
  stdout: ''
  timestamp: 1660004788
- exit_code: 1
  program: "#!/bin/bash\n# Given an array of integers nums, find the minimum sum of\
    \ any non-empty sub-array\n# of nums.\n# Example\n#\n# $1 is a space-separated\
    \ list\nminSubArraySum() {\n  local -n arr=$1\n  local min=${arr[0]}\n  local\
    \ sum=0\n  for i in \"${arr[@]}\"; do\n    ((sum += i))\n    ((sum < min)) &&\
    \ min=$sum\n    ((sum > 0)) && sum=0\n  done\n  echo $min\n}\n\ncandidate() {\n\
    \    minSubArraySum \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"2\
    \ 3 4 1 2 4\") = \"1\" ]]\n    [[ $(candidate \"-1 -2 -3\") = \"-6\" ]]\n    [[\
    \ $(candidate \"-1 -2 -3 2 -10\") = \"-14\" ]]\n    [[ $(candidate \"-9999999999999999\"\
    ) = \"-9999999999999999\" ]]\n    [[ $(candidate \"0 10 20 1000000\") = \"0\"\
    \ ]]\n    [[ $(candidate \"-1 -2 -3 10 -5\") = \"-6\" ]]\n    [[ $(candidate \"\
    100 -1 -2 -3 10 -5\") = \"-6\" ]]\n    [[ $(candidate \"10 11 13 8 3 4\") = \"\
    3\" ]]\n    [[ $(candidate \"100 -33 32 -1 0 -2\") = \"-33\" ]]\n    [[ $(candidate\
    \ \"-10\") = \"-10\" ]]\n    [[ $(candidate \"7\") = \"7\" ]]\n    [[ $(candidate\
    \ \"1 -1\") = \"-1\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: '/tmp/tmpo3m3a3iq.sh: line 8: local: `2 3 4 1 2 4'': invalid variable name
    for name reference

    '
  stdout: ''
  timestamp: 1660004788
- exit_code: 1
  program: "#!/bin/bash\n# Given an array of integers nums, find the minimum sum of\
    \ any non-empty sub-array\n# of nums.\n# Example\n#\n# $1 is a space-separated\
    \ list\nminSubArraySum() {\n    local -a nums=(\"$@\")\n    local min=0\n    local\
    \ sum=0\n    for i in \"${nums[@]}\"; do\n        sum=$((sum + i))\n        if\
    \ [[ $sum -lt $min ]]; then\n            min=$sum\n        fi\n    done\n    echo\
    \ $min\n}\n\ncandidate() {\n    minSubArraySum \"$@\"\n}\n\nset -e\nrun_test()\
    \ {\n    [[ $(candidate \"2 3 4 1 2 4\") = \"1\" ]]\n    [[ $(candidate \"-1 -2\
    \ -3\") = \"-6\" ]]\n    [[ $(candidate \"-1 -2 -3 2 -10\") = \"-14\" ]]\n   \
    \ [[ $(candidate \"-9999999999999999\") = \"-9999999999999999\" ]]\n    [[ $(candidate\
    \ \"0 10 20 1000000\") = \"0\" ]]\n    [[ $(candidate \"-1 -2 -3 10 -5\") = \"\
    -6\" ]]\n    [[ $(candidate \"100 -1 -2 -3 10 -5\") = \"-6\" ]]\n    [[ $(candidate\
    \ \"10 11 13 8 3 4\") = \"3\" ]]\n    [[ $(candidate \"100 -33 32 -1 0 -2\") =\
    \ \"-33\" ]]\n    [[ $(candidate \"-10\") = \"-10\" ]]\n    [[ $(candidate \"\
    7\") = \"7\" ]]\n    [[ $(candidate \"1 -1\") = \"-1\" ]]\n}\n\nrun_test"
  status: SyntaxError
  stderr: '/tmp/tmpfwac90i0.sh: line 12: 2 3 4 1 2 4: syntax error in expression (error
    token is "3 4 1 2 4")

    '
  stdout: ''
  timestamp: 1660004788
- exit_code: 0
  program: "#!/bin/bash\n# Given an array of integers nums, find the minimum sum of\
    \ any non-empty sub-array\n# of nums.\n# Example\n#\n# $1 is a space-separated\
    \ list\nminSubArraySum() {\n  local -a nums\n  IFS=' ' read -r -a nums <<< \"\
    $1\"\n  local min_sum=${nums[0]}\n  local sum=0\n  for num in \"${nums[@]}\";\
    \ do\n    sum=$((sum + num))\n    if [[ $sum -lt $min_sum ]]; then\n      min_sum=$sum\n\
    \    fi\n    if [[ $sum -gt 0 ]]; then\n      sum=0\n    fi\n  done\n  echo $min_sum\n\
    }\n\ncandidate() {\n    minSubArraySum \"$@\"\n}\n\nset -e\nrun_test() {\n   \
    \ [[ $(candidate \"2 3 4 1 2 4\") = \"1\" ]]\n    [[ $(candidate \"-1 -2 -3\"\
    ) = \"-6\" ]]\n    [[ $(candidate \"-1 -2 -3 2 -10\") = \"-14\" ]]\n    [[ $(candidate\
    \ \"-9999999999999999\") = \"-9999999999999999\" ]]\n    [[ $(candidate \"0 10\
    \ 20 1000000\") = \"0\" ]]\n    [[ $(candidate \"-1 -2 -3 10 -5\") = \"-6\" ]]\n\
    \    [[ $(candidate \"100 -1 -2 -3 10 -5\") = \"-6\" ]]\n    [[ $(candidate \"\
    10 11 13 8 3 4\") = \"3\" ]]\n    [[ $(candidate \"100 -33 32 -1 0 -2\") = \"\
    -33\" ]]\n    [[ $(candidate \"-10\") = \"-10\" ]]\n    [[ $(candidate \"7\")\
    \ = \"7\" ]]\n    [[ $(candidate \"1 -1\") = \"-1\" ]]\n}\n\nrun_test"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660004788
- exit_code: 1
  program: "#!/bin/bash\n# Given an array of integers nums, find the minimum sum of\
    \ any non-empty sub-array\n# of nums.\n# Example\n#\n# $1 is a space-separated\
    \ list\nminSubArraySum() {\n    local -n nums=$1\n    local min=${nums[0]}\n \
    \   local sum=0\n    for num in \"${nums[@]}\"; do\n        sum=$((sum + num))\n\
    \        if [[ $sum -lt $min ]]; then\n            min=$sum\n        fi\n    \
    \    if [[ $sum -gt 0 ]]; then\n            sum=0\n        fi\n    done\n    echo\
    \ $min\n}\n\ncandidate() {\n    minSubArraySum \"$@\"\n}\n\nset -e\nrun_test()\
    \ {\n    [[ $(candidate \"2 3 4 1 2 4\") = \"1\" ]]\n    [[ $(candidate \"-1 -2\
    \ -3\") = \"-6\" ]]\n    [[ $(candidate \"-1 -2 -3 2 -10\") = \"-14\" ]]\n   \
    \ [[ $(candidate \"-9999999999999999\") = \"-9999999999999999\" ]]\n    [[ $(candidate\
    \ \"0 10 20 1000000\") = \"0\" ]]\n    [[ $(candidate \"-1 -2 -3 10 -5\") = \"\
    -6\" ]]\n    [[ $(candidate \"100 -1 -2 -3 10 -5\") = \"-6\" ]]\n    [[ $(candidate\
    \ \"10 11 13 8 3 4\") = \"3\" ]]\n    [[ $(candidate \"100 -33 32 -1 0 -2\") =\
    \ \"-33\" ]]\n    [[ $(candidate \"-10\") = \"-10\" ]]\n    [[ $(candidate \"\
    7\") = \"7\" ]]\n    [[ $(candidate \"1 -1\") = \"-1\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: '/tmp/tmpk635_irt.sh: line 8: local: `2 3 4 1 2 4'': invalid variable name
    for name reference

    '
  stdout: ''
  timestamp: 1660004788
- exit_code: 1
  program: "#!/bin/bash\n# Given an array of integers nums, find the minimum sum of\
    \ any non-empty sub-array\n# of nums.\n# Example\n#\n# $1 is a space-separated\
    \ list\nminSubArraySum() {\n    local -n nums=$1\n    local min_sum=${nums[0]}\n\
    \    local sum=0\n    for ((i=0; i<${#nums[@]}; i++)); do\n        sum=$((sum\
    \ + nums[i]))\n        if [[ $sum -lt $min_sum ]]; then\n            min_sum=$sum\n\
    \        fi\n        if [[ $sum -gt 0 ]]; then\n            sum=0\n        fi\n\
    \    done\n    echo $min_sum\n}\n\ncandidate() {\n    minSubArraySum \"$@\"\n\
    }\n\nset -e\nrun_test() {\n    [[ $(candidate \"2 3 4 1 2 4\") = \"1\" ]]\n  \
    \  [[ $(candidate \"-1 -2 -3\") = \"-6\" ]]\n    [[ $(candidate \"-1 -2 -3 2 -10\"\
    ) = \"-14\" ]]\n    [[ $(candidate \"-9999999999999999\") = \"-9999999999999999\"\
    \ ]]\n    [[ $(candidate \"0 10 20 1000000\") = \"0\" ]]\n    [[ $(candidate \"\
    -1 -2 -3 10 -5\") = \"-6\" ]]\n    [[ $(candidate \"100 -1 -2 -3 10 -5\") = \"\
    -6\" ]]\n    [[ $(candidate \"10 11 13 8 3 4\") = \"3\" ]]\n    [[ $(candidate\
    \ \"100 -33 32 -1 0 -2\") = \"-33\" ]]\n    [[ $(candidate \"-10\") = \"-10\"\
    \ ]]\n    [[ $(candidate \"7\") = \"7\" ]]\n    [[ $(candidate \"1 -1\") = \"\
    -1\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: '/tmp/tmpxwnpgft6.sh: line 8: local: `2 3 4 1 2 4'': invalid variable name
    for name reference

    '
  stdout: ''
  timestamp: 1660004788
- exit_code: 0
  program: "#!/bin/bash\n# Given an array of integers nums, find the minimum sum of\
    \ any non-empty sub-array\n# of nums.\n# Example\n#\n# $1 is a space-separated\
    \ list\nminSubArraySum() {\n  local -a nums=($1)\n  local min_sum=${nums[0]}\n\
    \  local sum=0\n  for i in \"${nums[@]}\"; do\n    sum=$((sum + i))\n    if [[\
    \ $sum -lt $min_sum ]]; then\n      min_sum=$sum\n    fi\n    if [[ $sum -gt 0\
    \ ]]; then\n      sum=0\n    fi\n  done\n  echo $min_sum\n}\n\ncandidate() {\n\
    \    minSubArraySum \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"2\
    \ 3 4 1 2 4\") = \"1\" ]]\n    [[ $(candidate \"-1 -2 -3\") = \"-6\" ]]\n    [[\
    \ $(candidate \"-1 -2 -3 2 -10\") = \"-14\" ]]\n    [[ $(candidate \"-9999999999999999\"\
    ) = \"-9999999999999999\" ]]\n    [[ $(candidate \"0 10 20 1000000\") = \"0\"\
    \ ]]\n    [[ $(candidate \"-1 -2 -3 10 -5\") = \"-6\" ]]\n    [[ $(candidate \"\
    100 -1 -2 -3 10 -5\") = \"-6\" ]]\n    [[ $(candidate \"10 11 13 8 3 4\") = \"\
    3\" ]]\n    [[ $(candidate \"100 -33 32 -1 0 -2\") = \"-33\" ]]\n    [[ $(candidate\
    \ \"-10\") = \"-10\" ]]\n    [[ $(candidate \"7\") = \"7\" ]]\n    [[ $(candidate\
    \ \"1 -1\") = \"-1\" ]]\n}\n\nrun_test"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660004788
- exit_code: 1
  program: "#!/bin/bash\n# Given an array of integers nums, find the minimum sum of\
    \ any non-empty sub-array\n# of nums.\n# Example\n#\n# $1 is a space-separated\
    \ list\nminSubArraySum() {\n    local -a nums\n    local min_sum=0\n    local\
    \ sum=0\n    local i=0\n    local j=0\n    local k=0\n    local n=0\n    local\
    \ min_n=0\n    local min_i=0\n    local min_j=0\n\n    nums=($1)\n    n=${#nums[@]}\n\
    \    min_sum=${nums[0]}\n    min_n=1\n    min_i=0\n    min_j=0\n\n    for ((i=0;\
    \ i<n; i++)); do\n        sum=0\n        for ((j=i; j<n; j++)); do\n         \
    \   sum=$((sum + nums[j]))\n            if [[ $sum -lt $min_sum ]]; then\n   \
    \             min_sum=$sum\n                min_n=$((j - i + 1))\n           \
    \     min_i=$i\n                min_j=$j\n            elif [[ $sum -eq $min_sum\
    \ ]]; then\n                if [[ $((j - i + 1)) -lt $min_n ]]; then\n       \
    \             min_n=$((j - i + 1))\n                    min_i=$i\n           \
    \         min_j=$j\n                fi\n            fi\n        done\n    done\n\
    \n    echo -n \"min_sum=$min_sum, min_n=$min_n, min_i=$min_i, min_j=$min_j, \"\
    \n    echo -n \"min_subarray=(\"\n    for ((k=min_i; k<=min_j; k++)); do\n   \
    \     echo -n \"${nums[k]} \"\n    done\n    echo \")\"\n}\n\ncandidate() {\n\
    \    minSubArraySum \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"2\
    \ 3 4 1 2 4\") = \"1\" ]]\n    [[ $(candidate \"-1 -2 -3\") = \"-6\" ]]\n    [[\
    \ $(candidate \"-1 -2 -3 2 -10\") = \"-14\" ]]\n    [[ $(candidate \"-9999999999999999\"\
    ) = \"-9999999999999999\" ]]\n    [[ $(candidate \"0 10 20 1000000\") = \"0\"\
    \ ]]\n    [[ $(candidate \"-1 -2 -3 10 -5\") = \"-6\" ]]\n    [[ $(candidate \"\
    100 -1 -2 -3 10 -5\") = \"-6\" ]]\n    [[ $(candidate \"10 11 13 8 3 4\") = \"\
    3\" ]]\n    [[ $(candidate \"100 -33 32 -1 0 -2\") = \"-33\" ]]\n    [[ $(candidate\
    \ \"-10\") = \"-10\" ]]\n    [[ $(candidate \"7\") = \"7\" ]]\n    [[ $(candidate\
    \ \"1 -1\") = \"-1\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660004788
- exit_code: 1
  program: "#!/bin/bash\n# Given an array of integers nums, find the minimum sum of\
    \ any non-empty sub-array\n# of nums.\n# Example\n#\n# $1 is a space-separated\
    \ list\nminSubArraySum() {\n    local -n _minSubArraySum_nums=$1\n    local min=${_minSubArraySum_nums[0]}\n\
    \    local sum=0\n    for num in \"${_minSubArraySum_nums[@]}\"; do\n        sum=$((sum\
    \ + num))\n        if ((sum < min)); then\n            min=$sum\n        fi\n\
    \        if ((sum > 0)); then\n            sum=0\n        fi\n    done\n    echo\
    \ $min\n}\n\ncandidate() {\n    minSubArraySum \"$@\"\n}\n\nset -e\nrun_test()\
    \ {\n    [[ $(candidate \"2 3 4 1 2 4\") = \"1\" ]]\n    [[ $(candidate \"-1 -2\
    \ -3\") = \"-6\" ]]\n    [[ $(candidate \"-1 -2 -3 2 -10\") = \"-14\" ]]\n   \
    \ [[ $(candidate \"-9999999999999999\") = \"-9999999999999999\" ]]\n    [[ $(candidate\
    \ \"0 10 20 1000000\") = \"0\" ]]\n    [[ $(candidate \"-1 -2 -3 10 -5\") = \"\
    -6\" ]]\n    [[ $(candidate \"100 -1 -2 -3 10 -5\") = \"-6\" ]]\n    [[ $(candidate\
    \ \"10 11 13 8 3 4\") = \"3\" ]]\n    [[ $(candidate \"100 -33 32 -1 0 -2\") =\
    \ \"-33\" ]]\n    [[ $(candidate \"-10\") = \"-10\" ]]\n    [[ $(candidate \"\
    7\") = \"7\" ]]\n    [[ $(candidate \"1 -1\") = \"-1\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: '/tmp/tmpwfaejea0.sh: line 8: local: `2 3 4 1 2 4'': invalid variable name
    for name reference

    '
  stdout: ''
  timestamp: 1660004788
- exit_code: 1
  program: "#!/bin/bash\n# Given an array of integers nums, find the minimum sum of\
    \ any non-empty sub-array\n# of nums.\n# Example\n#\n# $1 is a space-separated\
    \ list\nminSubArraySum() {\n  local -a nums=(\"$@\")\n  local min=${nums[0]}\n\
    \  local sum=0\n  for num in \"${nums[@]}\"; do\n    sum=$((sum + num))\n    if\
    \ [[ $sum -lt $min ]]; then\n      min=$sum\n    fi\n    if [[ $sum -gt 0 ]];\
    \ then\n      sum=0\n    fi\n  done\n  echo $min\n}\n\ncandidate() {\n    minSubArraySum\
    \ \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"2 3 4 1 2 4\") = \"\
    1\" ]]\n    [[ $(candidate \"-1 -2 -3\") = \"-6\" ]]\n    [[ $(candidate \"-1\
    \ -2 -3 2 -10\") = \"-14\" ]]\n    [[ $(candidate \"-9999999999999999\") = \"\
    -9999999999999999\" ]]\n    [[ $(candidate \"0 10 20 1000000\") = \"0\" ]]\n \
    \   [[ $(candidate \"-1 -2 -3 10 -5\") = \"-6\" ]]\n    [[ $(candidate \"100 -1\
    \ -2 -3 10 -5\") = \"-6\" ]]\n    [[ $(candidate \"10 11 13 8 3 4\") = \"3\" ]]\n\
    \    [[ $(candidate \"100 -33 32 -1 0 -2\") = \"-33\" ]]\n    [[ $(candidate \"\
    -10\") = \"-10\" ]]\n    [[ $(candidate \"7\") = \"7\" ]]\n    [[ $(candidate\
    \ \"1 -1\") = \"-1\" ]]\n}\n\nrun_test"
  status: SyntaxError
  stderr: '/tmp/tmprdpik2wr.sh: line 12: 2 3 4 1 2 4: syntax error in expression (error
    token is "3 4 1 2 4")

    '
  stdout: ''
  timestamp: 1660004788
- exit_code: 1
  program: "#!/bin/bash\n# Given an array of integers nums, find the minimum sum of\
    \ any non-empty sub-array\n# of nums.\n# Example\n#\n# $1 is a space-separated\
    \ list\nminSubArraySum() {\n  local -a nums=(\"$@\")\n  local minSum=0\n  local\
    \ currSum=0\n  for ((i=0; i<${#nums[@]}; i++)); do\n    currSum=$((currSum + nums[i]))\n\
    \    if ((currSum < minSum)); then\n      minSum=$currSum\n    fi\n  done\n  echo\
    \ $minSum\n}\n\ncandidate() {\n    minSubArraySum \"$@\"\n}\n\nset -e\nrun_test()\
    \ {\n    [[ $(candidate \"2 3 4 1 2 4\") = \"1\" ]]\n    [[ $(candidate \"-1 -2\
    \ -3\") = \"-6\" ]]\n    [[ $(candidate \"-1 -2 -3 2 -10\") = \"-14\" ]]\n   \
    \ [[ $(candidate \"-9999999999999999\") = \"-9999999999999999\" ]]\n    [[ $(candidate\
    \ \"0 10 20 1000000\") = \"0\" ]]\n    [[ $(candidate \"-1 -2 -3 10 -5\") = \"\
    -6\" ]]\n    [[ $(candidate \"100 -1 -2 -3 10 -5\") = \"-6\" ]]\n    [[ $(candidate\
    \ \"10 11 13 8 3 4\") = \"3\" ]]\n    [[ $(candidate \"100 -33 32 -1 0 -2\") =\
    \ \"-33\" ]]\n    [[ $(candidate \"-10\") = \"-10\" ]]\n    [[ $(candidate \"\
    7\") = \"7\" ]]\n    [[ $(candidate \"1 -1\") = \"-1\" ]]\n}\n\nrun_test"
  status: SyntaxError
  stderr: '/tmp/tmpfrng65pw.sh: line 12: 2 3 4 1 2 4: syntax error in expression (error
    token is "3 4 1 2 4")

    '
  stdout: ''
  timestamp: 1660004788
- exit_code: 1
  program: "#!/bin/bash\n# Given an array of integers nums, find the minimum sum of\
    \ any non-empty sub-array\n# of nums.\n# Example\n#\n# $1 is a space-separated\
    \ list\nminSubArraySum() {\n  local -a nums=(\"$@\")\n  local min=0\n  local sum=0\n\
    \  for ((i=0; i<${#nums[@]}; i++)); do\n    sum=$((sum + nums[i]))\n    if [[\
    \ $sum -lt $min ]]; then\n      min=$sum\n    fi\n  done\n  echo $min\n}\n\ncandidate()\
    \ {\n    minSubArraySum \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate\
    \ \"2 3 4 1 2 4\") = \"1\" ]]\n    [[ $(candidate \"-1 -2 -3\") = \"-6\" ]]\n\
    \    [[ $(candidate \"-1 -2 -3 2 -10\") = \"-14\" ]]\n    [[ $(candidate \"-9999999999999999\"\
    ) = \"-9999999999999999\" ]]\n    [[ $(candidate \"0 10 20 1000000\") = \"0\"\
    \ ]]\n    [[ $(candidate \"-1 -2 -3 10 -5\") = \"-6\" ]]\n    [[ $(candidate \"\
    100 -1 -2 -3 10 -5\") = \"-6\" ]]\n    [[ $(candidate \"10 11 13 8 3 4\") = \"\
    3\" ]]\n    [[ $(candidate \"100 -33 32 -1 0 -2\") = \"-33\" ]]\n    [[ $(candidate\
    \ \"-10\") = \"-10\" ]]\n    [[ $(candidate \"7\") = \"7\" ]]\n    [[ $(candidate\
    \ \"1 -1\") = \"-1\" ]]\n}\n\nrun_test"
  status: SyntaxError
  stderr: '/tmp/tmpcgupozp6.sh: line 12: 2 3 4 1 2 4: syntax error in expression (error
    token is "3 4 1 2 4")

    '
  stdout: ''
  timestamp: 1660004788
- exit_code: 1
  program: "#!/bin/bash\n# Given an array of integers nums, find the minimum sum of\
    \ any non-empty sub-array\n# of nums.\n# Example\n#\n# $1 is a space-separated\
    \ list\nminSubArraySum() {\n  local nums=\"$1\"\n  local min=0\n  local sum=0\n\
    \  local i=0\n  local n=0\n  local num=0\n  for num in $nums; do\n    (( sum +=\
    \ num ))\n    (( n++ ))\n    if (( i == 0 )); then\n      min=$sum\n    elif ((\
    \ sum < min )); then\n      min=$sum\n    fi\n    (( i++ ))\n  done\n  echo $min\n\
    }\n\ncandidate() {\n    minSubArraySum \"$@\"\n}\n\nset -e\nrun_test() {\n   \
    \ [[ $(candidate \"2 3 4 1 2 4\") = \"1\" ]]\n    [[ $(candidate \"-1 -2 -3\"\
    ) = \"-6\" ]]\n    [[ $(candidate \"-1 -2 -3 2 -10\") = \"-14\" ]]\n    [[ $(candidate\
    \ \"-9999999999999999\") = \"-9999999999999999\" ]]\n    [[ $(candidate \"0 10\
    \ 20 1000000\") = \"0\" ]]\n    [[ $(candidate \"-1 -2 -3 10 -5\") = \"-6\" ]]\n\
    \    [[ $(candidate \"100 -1 -2 -3 10 -5\") = \"-6\" ]]\n    [[ $(candidate \"\
    10 11 13 8 3 4\") = \"3\" ]]\n    [[ $(candidate \"100 -33 32 -1 0 -2\") = \"\
    -33\" ]]\n    [[ $(candidate \"-10\") = \"-10\" ]]\n    [[ $(candidate \"7\")\
    \ = \"7\" ]]\n    [[ $(candidate \"1 -1\") = \"-1\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660004788
- exit_code: 1
  program: "#!/bin/bash\n# Given an array of integers nums, find the minimum sum of\
    \ any non-empty sub-array\n# of nums.\n# Example\n#\n# $1 is a space-separated\
    \ list\nminSubArraySum() {\n  local -n nums=$1\n  local minSum=${nums[0]}\n  local\
    \ currSum=0\n  for ((i=0; i<${#nums[@]}; i++)); do\n    currSum=$((currSum + nums[i]))\n\
    \    if ((currSum < minSum)); then\n      minSum=$currSum\n    fi\n    if ((currSum\
    \ > 0)); then\n      currSum=0\n    fi\n  done\n  echo $minSum\n}\n\ncandidate()\
    \ {\n    minSubArraySum \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate\
    \ \"2 3 4 1 2 4\") = \"1\" ]]\n    [[ $(candidate \"-1 -2 -3\") = \"-6\" ]]\n\
    \    [[ $(candidate \"-1 -2 -3 2 -10\") = \"-14\" ]]\n    [[ $(candidate \"-9999999999999999\"\
    ) = \"-9999999999999999\" ]]\n    [[ $(candidate \"0 10 20 1000000\") = \"0\"\
    \ ]]\n    [[ $(candidate \"-1 -2 -3 10 -5\") = \"-6\" ]]\n    [[ $(candidate \"\
    100 -1 -2 -3 10 -5\") = \"-6\" ]]\n    [[ $(candidate \"10 11 13 8 3 4\") = \"\
    3\" ]]\n    [[ $(candidate \"100 -33 32 -1 0 -2\") = \"-33\" ]]\n    [[ $(candidate\
    \ \"-10\") = \"-10\" ]]\n    [[ $(candidate \"7\") = \"7\" ]]\n    [[ $(candidate\
    \ \"1 -1\") = \"-1\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: '/tmp/tmp67l58xvg.sh: line 8: local: `2 3 4 1 2 4'': invalid variable name
    for name reference

    '
  stdout: ''
  timestamp: 1660004788
- exit_code: 1
  program: "#!/bin/bash\n# Given an array of integers nums, find the minimum sum of\
    \ any non-empty sub-array\n# of nums.\n# Example\n#\n# $1 is a space-separated\
    \ list\nminSubArraySum() {\n    local -a nums=(\"$@\")\n    local min=${nums[0]}\n\
    \    local sum=0\n    for i in \"${nums[@]}\"; do\n        sum=$((sum + i))\n\
    \        if [[ $sum -lt $min ]]; then\n            min=$sum\n        fi\n    \
    \    if [[ $sum -gt 0 ]]; then\n            sum=0\n        fi\n    done\n    echo\
    \ $min\n}\n\ncandidate() {\n    minSubArraySum \"$@\"\n}\n\nset -e\nrun_test()\
    \ {\n    [[ $(candidate \"2 3 4 1 2 4\") = \"1\" ]]\n    [[ $(candidate \"-1 -2\
    \ -3\") = \"-6\" ]]\n    [[ $(candidate \"-1 -2 -3 2 -10\") = \"-14\" ]]\n   \
    \ [[ $(candidate \"-9999999999999999\") = \"-9999999999999999\" ]]\n    [[ $(candidate\
    \ \"0 10 20 1000000\") = \"0\" ]]\n    [[ $(candidate \"-1 -2 -3 10 -5\") = \"\
    -6\" ]]\n    [[ $(candidate \"100 -1 -2 -3 10 -5\") = \"-6\" ]]\n    [[ $(candidate\
    \ \"10 11 13 8 3 4\") = \"3\" ]]\n    [[ $(candidate \"100 -33 32 -1 0 -2\") =\
    \ \"-33\" ]]\n    [[ $(candidate \"-10\") = \"-10\" ]]\n    [[ $(candidate \"\
    7\") = \"7\" ]]\n    [[ $(candidate \"1 -1\") = \"-1\" ]]\n}\n\nrun_test"
  status: SyntaxError
  stderr: '/tmp/tmpnr1s052o.sh: line 12: 2 3 4 1 2 4: syntax error in expression (error
    token is "3 4 1 2 4")

    '
  stdout: ''
  timestamp: 1660004788
- exit_code: 1
  program: "#!/bin/bash\n# Given an array of integers nums, find the minimum sum of\
    \ any non-empty sub-array\n# of nums.\n# Example\n#\n# $1 is a space-separated\
    \ list\nminSubArraySum() {\n  local -a nums\n  IFS=' ' read -r -a nums <<< \"\
    $1\"\n  local min_sum=0\n  local sum=0\n  for ((i = 0; i < ${#nums[@]}; i++));\
    \ do\n    sum=$((sum + nums[i]))\n    if ((sum < min_sum)); then\n      min_sum=$sum\n\
    \    fi\n  done\n  echo $min_sum\n}\n\ncandidate() {\n    minSubArraySum \"$@\"\
    \n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"2 3 4 1 2 4\") = \"1\" ]]\n\
    \    [[ $(candidate \"-1 -2 -3\") = \"-6\" ]]\n    [[ $(candidate \"-1 -2 -3 2\
    \ -10\") = \"-14\" ]]\n    [[ $(candidate \"-9999999999999999\") = \"-9999999999999999\"\
    \ ]]\n    [[ $(candidate \"0 10 20 1000000\") = \"0\" ]]\n    [[ $(candidate \"\
    -1 -2 -3 10 -5\") = \"-6\" ]]\n    [[ $(candidate \"100 -1 -2 -3 10 -5\") = \"\
    -6\" ]]\n    [[ $(candidate \"10 11 13 8 3 4\") = \"3\" ]]\n    [[ $(candidate\
    \ \"100 -33 32 -1 0 -2\") = \"-33\" ]]\n    [[ $(candidate \"-10\") = \"-10\"\
    \ ]]\n    [[ $(candidate \"7\") = \"7\" ]]\n    [[ $(candidate \"1 -1\") = \"\
    -1\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660004788
- exit_code: 1
  program: "#!/bin/bash\n# Given an array of integers nums, find the minimum sum of\
    \ any non-empty sub-array\n# of nums.\n# Example\n#\n# $1 is a space-separated\
    \ list\nminSubArraySum() {\n    local -n nums=$1\n    local min_sum=${nums[0]}\n\
    \    local sum=0\n    for ((i=0; i<${#nums[@]}; i++)); do\n        sum=$((sum\
    \ + nums[i]))\n        if [[ $sum -lt $min_sum ]]; then\n            min_sum=$sum\n\
    \        fi\n        if [[ $sum -gt 0 ]]; then\n            sum=0\n        fi\n\
    \    done\n    echo $min_sum\n}\n\ncandidate() {\n    minSubArraySum \"$@\"\n\
    }\n\nset -e\nrun_test() {\n    [[ $(candidate \"2 3 4 1 2 4\") = \"1\" ]]\n  \
    \  [[ $(candidate \"-1 -2 -3\") = \"-6\" ]]\n    [[ $(candidate \"-1 -2 -3 2 -10\"\
    ) = \"-14\" ]]\n    [[ $(candidate \"-9999999999999999\") = \"-9999999999999999\"\
    \ ]]\n    [[ $(candidate \"0 10 20 1000000\") = \"0\" ]]\n    [[ $(candidate \"\
    -1 -2 -3 10 -5\") = \"-6\" ]]\n    [[ $(candidate \"100 -1 -2 -3 10 -5\") = \"\
    -6\" ]]\n    [[ $(candidate \"10 11 13 8 3 4\") = \"3\" ]]\n    [[ $(candidate\
    \ \"100 -33 32 -1 0 -2\") = \"-33\" ]]\n    [[ $(candidate \"-10\") = \"-10\"\
    \ ]]\n    [[ $(candidate \"7\") = \"7\" ]]\n    [[ $(candidate \"1 -1\") = \"\
    -1\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: '/tmp/tmpxwnpgft6.sh: line 8: local: `2 3 4 1 2 4'': invalid variable name
    for name reference

    '
  stdout: ''
  timestamp: 1660004788
- exit_code: 1
  program: "#!/bin/bash\n# Given an array of integers nums, find the minimum sum of\
    \ any non-empty sub-array\n# of nums.\n# Example\n#\n# $1 is a space-separated\
    \ list\nminSubArraySum() {\n  local -a nums=(\"$@\")\n  local minSum=0\n  local\
    \ sum=0\n  for ((i=0; i<${#nums[@]}; i++)); do\n    sum=$((sum + nums[i]))\n \
    \   if ((sum < minSum)); then\n      minSum=$sum\n    fi\n  done\n  echo $minSum\n\
    }\n\ncandidate() {\n    minSubArraySum \"$@\"\n}\n\nset -e\nrun_test() {\n   \
    \ [[ $(candidate \"2 3 4 1 2 4\") = \"1\" ]]\n    [[ $(candidate \"-1 -2 -3\"\
    ) = \"-6\" ]]\n    [[ $(candidate \"-1 -2 -3 2 -10\") = \"-14\" ]]\n    [[ $(candidate\
    \ \"-9999999999999999\") = \"-9999999999999999\" ]]\n    [[ $(candidate \"0 10\
    \ 20 1000000\") = \"0\" ]]\n    [[ $(candidate \"-1 -2 -3 10 -5\") = \"-6\" ]]\n\
    \    [[ $(candidate \"100 -1 -2 -3 10 -5\") = \"-6\" ]]\n    [[ $(candidate \"\
    10 11 13 8 3 4\") = \"3\" ]]\n    [[ $(candidate \"100 -33 32 -1 0 -2\") = \"\
    -33\" ]]\n    [[ $(candidate \"-10\") = \"-10\" ]]\n    [[ $(candidate \"7\")\
    \ = \"7\" ]]\n    [[ $(candidate \"1 -1\") = \"-1\" ]]\n}\n\nrun_test"
  status: SyntaxError
  stderr: '/tmp/tmp6yqaaq8_.sh: line 12: 2 3 4 1 2 4: syntax error in expression (error
    token is "3 4 1 2 4")

    '
  stdout: ''
  timestamp: 1660004788
- exit_code: 0
  program: "#!/bin/bash\n# Given an array of integers nums, find the minimum sum of\
    \ any non-empty sub-array\n# of nums.\n# Example\n#\n# $1 is a space-separated\
    \ list\nminSubArraySum() {\n  local -a nums=($1)\n  local min=${nums[0]}\n  local\
    \ sum=0\n  for num in \"${nums[@]}\"; do\n    sum=$((sum + num))\n    if [[ $sum\
    \ -lt $min ]]; then\n      min=$sum\n    fi\n    if [[ $sum -gt 0 ]]; then\n \
    \     sum=0\n    fi\n  done\n  echo $min\n}\n\ncandidate() {\n    minSubArraySum\
    \ \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"2 3 4 1 2 4\") = \"\
    1\" ]]\n    [[ $(candidate \"-1 -2 -3\") = \"-6\" ]]\n    [[ $(candidate \"-1\
    \ -2 -3 2 -10\") = \"-14\" ]]\n    [[ $(candidate \"-9999999999999999\") = \"\
    -9999999999999999\" ]]\n    [[ $(candidate \"0 10 20 1000000\") = \"0\" ]]\n \
    \   [[ $(candidate \"-1 -2 -3 10 -5\") = \"-6\" ]]\n    [[ $(candidate \"100 -1\
    \ -2 -3 10 -5\") = \"-6\" ]]\n    [[ $(candidate \"10 11 13 8 3 4\") = \"3\" ]]\n\
    \    [[ $(candidate \"100 -33 32 -1 0 -2\") = \"-33\" ]]\n    [[ $(candidate \"\
    -10\") = \"-10\" ]]\n    [[ $(candidate \"7\") = \"7\" ]]\n    [[ $(candidate\
    \ \"1 -1\") = \"-1\" ]]\n}\n\nrun_test"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660004788
- exit_code: 1
  program: "#!/bin/bash\n# Given an array of integers nums, find the minimum sum of\
    \ any non-empty sub-array\n# of nums.\n# Example\n#\n# $1 is a space-separated\
    \ list\nminSubArraySum() {\n    local -n nums=$1\n    local min=${nums[0]}\n \
    \   local sum=0\n    for i in \"${nums[@]}\"; do\n        sum=$((sum + i))\n \
    \       if [[ $sum -lt $min ]]; then\n            min=$sum\n        fi\n     \
    \   if [[ $sum -gt 0 ]]; then\n            sum=0\n        fi\n    done\n    echo\
    \ $min\n}\n\ncandidate() {\n    minSubArraySum \"$@\"\n}\n\nset -e\nrun_test()\
    \ {\n    [[ $(candidate \"2 3 4 1 2 4\") = \"1\" ]]\n    [[ $(candidate \"-1 -2\
    \ -3\") = \"-6\" ]]\n    [[ $(candidate \"-1 -2 -3 2 -10\") = \"-14\" ]]\n   \
    \ [[ $(candidate \"-9999999999999999\") = \"-9999999999999999\" ]]\n    [[ $(candidate\
    \ \"0 10 20 1000000\") = \"0\" ]]\n    [[ $(candidate \"-1 -2 -3 10 -5\") = \"\
    -6\" ]]\n    [[ $(candidate \"100 -1 -2 -3 10 -5\") = \"-6\" ]]\n    [[ $(candidate\
    \ \"10 11 13 8 3 4\") = \"3\" ]]\n    [[ $(candidate \"100 -33 32 -1 0 -2\") =\
    \ \"-33\" ]]\n    [[ $(candidate \"-10\") = \"-10\" ]]\n    [[ $(candidate \"\
    7\") = \"7\" ]]\n    [[ $(candidate \"1 -1\") = \"-1\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: '/tmp/tmprfdaox40.sh: line 8: local: `2 3 4 1 2 4'': invalid variable name
    for name reference

    '
  stdout: ''
  timestamp: 1660004788
- exit_code: 1
  program: "#!/bin/bash\n# Given an array of integers nums, find the minimum sum of\
    \ any non-empty sub-array\n# of nums.\n# Example\n#\n# $1 is a space-separated\
    \ list\nminSubArraySum() {\n    local -n arr=$1\n    local min=${arr[0]}\n   \
    \ local sum=0\n    for i in \"${arr[@]}\"; do\n        sum=$((sum + i))\n    \
    \    if [[ $sum -lt $min ]]; then\n            min=$sum\n        fi\n        if\
    \ [[ $sum -gt 0 ]]; then\n            sum=0\n        fi\n    done\n    echo $min\n\
    }\n\ncandidate() {\n    minSubArraySum \"$@\"\n}\n\nset -e\nrun_test() {\n   \
    \ [[ $(candidate \"2 3 4 1 2 4\") = \"1\" ]]\n    [[ $(candidate \"-1 -2 -3\"\
    ) = \"-6\" ]]\n    [[ $(candidate \"-1 -2 -3 2 -10\") = \"-14\" ]]\n    [[ $(candidate\
    \ \"-9999999999999999\") = \"-9999999999999999\" ]]\n    [[ $(candidate \"0 10\
    \ 20 1000000\") = \"0\" ]]\n    [[ $(candidate \"-1 -2 -3 10 -5\") = \"-6\" ]]\n\
    \    [[ $(candidate \"100 -1 -2 -3 10 -5\") = \"-6\" ]]\n    [[ $(candidate \"\
    10 11 13 8 3 4\") = \"3\" ]]\n    [[ $(candidate \"100 -33 32 -1 0 -2\") = \"\
    -33\" ]]\n    [[ $(candidate \"-10\") = \"-10\" ]]\n    [[ $(candidate \"7\")\
    \ = \"7\" ]]\n    [[ $(candidate \"1 -1\") = \"-1\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: '/tmp/tmpfkquxpek.sh: line 8: local: `2 3 4 1 2 4'': invalid variable name
    for name reference

    '
  stdout: ''
  timestamp: 1660004788
- exit_code: 1
  program: "#!/bin/bash\n# Given an array of integers nums, find the minimum sum of\
    \ any non-empty sub-array\n# of nums.\n# Example\n#\n# $1 is a space-separated\
    \ list\nminSubArraySum() {\n    local -n _arr=$1\n    local min=${_arr[0]}\n \
    \   local sum=0\n    for i in \"${_arr[@]}\"; do\n        sum=$((sum + i))\n \
    \       if [[ $sum -lt $min ]]; then\n            min=$sum\n        fi\n     \
    \   if [[ $sum -gt 0 ]]; then\n            sum=0\n        fi\n    done\n    echo\
    \ $min\n}\n\ncandidate() {\n    minSubArraySum \"$@\"\n}\n\nset -e\nrun_test()\
    \ {\n    [[ $(candidate \"2 3 4 1 2 4\") = \"1\" ]]\n    [[ $(candidate \"-1 -2\
    \ -3\") = \"-6\" ]]\n    [[ $(candidate \"-1 -2 -3 2 -10\") = \"-14\" ]]\n   \
    \ [[ $(candidate \"-9999999999999999\") = \"-9999999999999999\" ]]\n    [[ $(candidate\
    \ \"0 10 20 1000000\") = \"0\" ]]\n    [[ $(candidate \"-1 -2 -3 10 -5\") = \"\
    -6\" ]]\n    [[ $(candidate \"100 -1 -2 -3 10 -5\") = \"-6\" ]]\n    [[ $(candidate\
    \ \"10 11 13 8 3 4\") = \"3\" ]]\n    [[ $(candidate \"100 -33 32 -1 0 -2\") =\
    \ \"-33\" ]]\n    [[ $(candidate \"-10\") = \"-10\" ]]\n    [[ $(candidate \"\
    7\") = \"7\" ]]\n    [[ $(candidate \"1 -1\") = \"-1\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: '/tmp/tmpm1uaahor.sh: line 8: local: `2 3 4 1 2 4'': invalid variable name
    for name reference

    '
  stdout: ''
  timestamp: 1660004788
- exit_code: 1
  program: "#!/bin/bash\n# Given an array of integers nums, find the minimum sum of\
    \ any non-empty sub-array\n# of nums.\n# Example\n#\n# $1 is a space-separated\
    \ list\nminSubArraySum() {\n    local -n _array=$1\n    local min=${_array[0]}\n\
    \    local sum=0\n    for i in \"${_array[@]}\"; do\n        (( sum += i ))\n\
    \        (( min > sum )) && min=$sum\n        (( sum < 0 )) && sum=0\n    done\n\
    \    echo $min\n}\n\ncandidate() {\n    minSubArraySum \"$@\"\n}\n\nset -e\nrun_test()\
    \ {\n    [[ $(candidate \"2 3 4 1 2 4\") = \"1\" ]]\n    [[ $(candidate \"-1 -2\
    \ -3\") = \"-6\" ]]\n    [[ $(candidate \"-1 -2 -3 2 -10\") = \"-14\" ]]\n   \
    \ [[ $(candidate \"-9999999999999999\") = \"-9999999999999999\" ]]\n    [[ $(candidate\
    \ \"0 10 20 1000000\") = \"0\" ]]\n    [[ $(candidate \"-1 -2 -3 10 -5\") = \"\
    -6\" ]]\n    [[ $(candidate \"100 -1 -2 -3 10 -5\") = \"-6\" ]]\n    [[ $(candidate\
    \ \"10 11 13 8 3 4\") = \"3\" ]]\n    [[ $(candidate \"100 -33 32 -1 0 -2\") =\
    \ \"-33\" ]]\n    [[ $(candidate \"-10\") = \"-10\" ]]\n    [[ $(candidate \"\
    7\") = \"7\" ]]\n    [[ $(candidate \"1 -1\") = \"-1\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: '/tmp/tmpisxldyfj.sh: line 8: local: `2 3 4 1 2 4'': invalid variable name
    for name reference

    '
  stdout: ''
  timestamp: 1660004788
- exit_code: 1
  program: "#!/bin/bash\n# Given an array of integers nums, find the minimum sum of\
    \ any non-empty sub-array\n# of nums.\n# Example\n#\n# $1 is a space-separated\
    \ list\nminSubArraySum() {\n  local -n arr=$1\n  local min=${arr[0]}\n  local\
    \ sum=0\n  for i in \"${arr[@]}\"; do\n    ((sum += i))\n    if ((sum < min));\
    \ then\n      min=$sum\n    fi\n    if ((sum > 0)); then\n      sum=0\n    fi\n\
    \  done\n  echo $min\n}\n\ncandidate() {\n    minSubArraySum \"$@\"\n}\n\nset\
    \ -e\nrun_test() {\n    [[ $(candidate \"2 3 4 1 2 4\") = \"1\" ]]\n    [[ $(candidate\
    \ \"-1 -2 -3\") = \"-6\" ]]\n    [[ $(candidate \"-1 -2 -3 2 -10\") = \"-14\"\
    \ ]]\n    [[ $(candidate \"-9999999999999999\") = \"-9999999999999999\" ]]\n \
    \   [[ $(candidate \"0 10 20 1000000\") = \"0\" ]]\n    [[ $(candidate \"-1 -2\
    \ -3 10 -5\") = \"-6\" ]]\n    [[ $(candidate \"100 -1 -2 -3 10 -5\") = \"-6\"\
    \ ]]\n    [[ $(candidate \"10 11 13 8 3 4\") = \"3\" ]]\n    [[ $(candidate \"\
    100 -33 32 -1 0 -2\") = \"-33\" ]]\n    [[ $(candidate \"-10\") = \"-10\" ]]\n\
    \    [[ $(candidate \"7\") = \"7\" ]]\n    [[ $(candidate \"1 -1\") = \"-1\" ]]\n\
    }\n\nrun_test"
  status: Exception
  stderr: '/tmp/tmp9kl05h72.sh: line 8: local: `2 3 4 1 2 4'': invalid variable name
    for name reference

    '
  stdout: ''
  timestamp: 1660004788
- exit_code: 1
  program: "#!/bin/bash\n# Given an array of integers nums, find the minimum sum of\
    \ any non-empty sub-array\n# of nums.\n# Example\n#\n# $1 is a space-separated\
    \ list\nminSubArraySum() {\n    local -a nums=(\"$@\")\n    local min=0\n    local\
    \ sum=0\n    for ((i=0; i<${#nums[@]}; i++)); do\n        sum+=${nums[$i]}\n \
    \       if [[ $sum -lt $min ]]; then\n            min=$sum\n        fi\n    done\n\
    \    echo $min\n}\n\ncandidate() {\n    minSubArraySum \"$@\"\n}\n\nset -e\nrun_test()\
    \ {\n    [[ $(candidate \"2 3 4 1 2 4\") = \"1\" ]]\n    [[ $(candidate \"-1 -2\
    \ -3\") = \"-6\" ]]\n    [[ $(candidate \"-1 -2 -3 2 -10\") = \"-14\" ]]\n   \
    \ [[ $(candidate \"-9999999999999999\") = \"-9999999999999999\" ]]\n    [[ $(candidate\
    \ \"0 10 20 1000000\") = \"0\" ]]\n    [[ $(candidate \"-1 -2 -3 10 -5\") = \"\
    -6\" ]]\n    [[ $(candidate \"100 -1 -2 -3 10 -5\") = \"-6\" ]]\n    [[ $(candidate\
    \ \"10 11 13 8 3 4\") = \"3\" ]]\n    [[ $(candidate \"100 -33 32 -1 0 -2\") =\
    \ \"-33\" ]]\n    [[ $(candidate \"-10\") = \"-10\" ]]\n    [[ $(candidate \"\
    7\") = \"7\" ]]\n    [[ $(candidate \"1 -1\") = \"-1\" ]]\n}\n\nrun_test"
  status: SyntaxError
  stderr: '/tmp/tmpj5l8_3q4.sh: line 13: [[: 02 3 4 1 2 4: syntax error in expression
    (error token is "3 4 1 2 4")

    '
  stdout: ''
  timestamp: 1660004788
- exit_code: 1
  program: "#!/bin/bash\n# Given an array of integers nums, find the minimum sum of\
    \ any non-empty sub-array\n# of nums.\n# Example\n#\n# $1 is a space-separated\
    \ list\nminSubArraySum() {\n    local -n arr=$1\n    local min=${arr[0]}\n   \
    \ local sum=0\n    for i in \"${arr[@]}\"; do\n        sum=$((sum + i))\n    \
    \    if [[ $sum -lt $min ]]; then\n            min=$sum\n        fi\n        if\
    \ [[ $sum -gt 0 ]]; then\n            sum=0\n        fi\n    done\n    echo $min\n\
    }\n\ncandidate() {\n    minSubArraySum \"$@\"\n}\n\nset -e\nrun_test() {\n   \
    \ [[ $(candidate \"2 3 4 1 2 4\") = \"1\" ]]\n    [[ $(candidate \"-1 -2 -3\"\
    ) = \"-6\" ]]\n    [[ $(candidate \"-1 -2 -3 2 -10\") = \"-14\" ]]\n    [[ $(candidate\
    \ \"-9999999999999999\") = \"-9999999999999999\" ]]\n    [[ $(candidate \"0 10\
    \ 20 1000000\") = \"0\" ]]\n    [[ $(candidate \"-1 -2 -3 10 -5\") = \"-6\" ]]\n\
    \    [[ $(candidate \"100 -1 -2 -3 10 -5\") = \"-6\" ]]\n    [[ $(candidate \"\
    10 11 13 8 3 4\") = \"3\" ]]\n    [[ $(candidate \"100 -33 32 -1 0 -2\") = \"\
    -33\" ]]\n    [[ $(candidate \"-10\") = \"-10\" ]]\n    [[ $(candidate \"7\")\
    \ = \"7\" ]]\n    [[ $(candidate \"1 -1\") = \"-1\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: '/tmp/tmpfkquxpek.sh: line 8: local: `2 3 4 1 2 4'': invalid variable name
    for name reference

    '
  stdout: ''
  timestamp: 1660004788
- exit_code: 1
  program: "#!/bin/bash\n# Given an array of integers nums, find the minimum sum of\
    \ any non-empty sub-array\n# of nums.\n# Example\n#\n# $1 is a space-separated\
    \ list\nminSubArraySum() {\n    local -a nums=(\"$@\")\n    local min=${nums[0]}\n\
    \    local sum=0\n    for i in \"${nums[@]}\"; do\n        sum=$((sum + i))\n\
    \        if [[ $sum -lt $min ]]; then\n            min=$sum\n        fi\n    \
    \    if [[ $sum -gt 0 ]]; then\n            sum=0\n        fi\n    done\n    echo\
    \ $min\n}\n\ncandidate() {\n    minSubArraySum \"$@\"\n}\n\nset -e\nrun_test()\
    \ {\n    [[ $(candidate \"2 3 4 1 2 4\") = \"1\" ]]\n    [[ $(candidate \"-1 -2\
    \ -3\") = \"-6\" ]]\n    [[ $(candidate \"-1 -2 -3 2 -10\") = \"-14\" ]]\n   \
    \ [[ $(candidate \"-9999999999999999\") = \"-9999999999999999\" ]]\n    [[ $(candidate\
    \ \"0 10 20 1000000\") = \"0\" ]]\n    [[ $(candidate \"-1 -2 -3 10 -5\") = \"\
    -6\" ]]\n    [[ $(candidate \"100 -1 -2 -3 10 -5\") = \"-6\" ]]\n    [[ $(candidate\
    \ \"10 11 13 8 3 4\") = \"3\" ]]\n    [[ $(candidate \"100 -33 32 -1 0 -2\") =\
    \ \"-33\" ]]\n    [[ $(candidate \"-10\") = \"-10\" ]]\n    [[ $(candidate \"\
    7\") = \"7\" ]]\n    [[ $(candidate \"1 -1\") = \"-1\" ]]\n}\n\nrun_test"
  status: SyntaxError
  stderr: '/tmp/tmpnr1s052o.sh: line 12: 2 3 4 1 2 4: syntax error in expression (error
    token is "3 4 1 2 4")

    '
  stdout: ''
  timestamp: 1660004788
- exit_code: 1
  program: "#!/bin/bash\n# Given an array of integers nums, find the minimum sum of\
    \ any non-empty sub-array\n# of nums.\n# Example\n#\n# $1 is a space-separated\
    \ list\nminSubArraySum() {\n  local -n arr=$1\n  local min=${arr[0]}\n  local\
    \ sum=0\n  for i in \"${arr[@]}\"; do\n    sum=$((sum + i))\n    if [[ $sum -lt\
    \ $min ]]; then\n      min=$sum\n    fi\n    if [[ $sum -gt 0 ]]; then\n     \
    \ sum=0\n    fi\n  done\n  echo $min\n}\n\ncandidate() {\n    minSubArraySum \"\
    $@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"2 3 4 1 2 4\") = \"1\" ]]\n\
    \    [[ $(candidate \"-1 -2 -3\") = \"-6\" ]]\n    [[ $(candidate \"-1 -2 -3 2\
    \ -10\") = \"-14\" ]]\n    [[ $(candidate \"-9999999999999999\") = \"-9999999999999999\"\
    \ ]]\n    [[ $(candidate \"0 10 20 1000000\") = \"0\" ]]\n    [[ $(candidate \"\
    -1 -2 -3 10 -5\") = \"-6\" ]]\n    [[ $(candidate \"100 -1 -2 -3 10 -5\") = \"\
    -6\" ]]\n    [[ $(candidate \"10 11 13 8 3 4\") = \"3\" ]]\n    [[ $(candidate\
    \ \"100 -33 32 -1 0 -2\") = \"-33\" ]]\n    [[ $(candidate \"-10\") = \"-10\"\
    \ ]]\n    [[ $(candidate \"7\") = \"7\" ]]\n    [[ $(candidate \"1 -1\") = \"\
    -1\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: '/tmp/tmp4p3hv6od.sh: line 8: local: `2 3 4 1 2 4'': invalid variable name
    for name reference

    '
  stdout: ''
  timestamp: 1660004788
- exit_code: 1
  program: "#!/bin/bash\n# Given an array of integers nums, find the minimum sum of\
    \ any non-empty sub-array\n# of nums.\n# Example\n#\n# $1 is a space-separated\
    \ list\nminSubArraySum() {\n    local nums=\"$1\"\n    local min_sum=0\n    local\
    \ sum=0\n    local num\n    for num in $nums; do\n        sum=$((sum + num))\n\
    \        if [[ $sum -lt $min_sum ]]; then\n            min_sum=$sum\n        fi\n\
    \    done\n    echo $min_sum\n}\n\ncandidate() {\n    minSubArraySum \"$@\"\n\
    }\n\nset -e\nrun_test() {\n    [[ $(candidate \"2 3 4 1 2 4\") = \"1\" ]]\n  \
    \  [[ $(candidate \"-1 -2 -3\") = \"-6\" ]]\n    [[ $(candidate \"-1 -2 -3 2 -10\"\
    ) = \"-14\" ]]\n    [[ $(candidate \"-9999999999999999\") = \"-9999999999999999\"\
    \ ]]\n    [[ $(candidate \"0 10 20 1000000\") = \"0\" ]]\n    [[ $(candidate \"\
    -1 -2 -3 10 -5\") = \"-6\" ]]\n    [[ $(candidate \"100 -1 -2 -3 10 -5\") = \"\
    -6\" ]]\n    [[ $(candidate \"10 11 13 8 3 4\") = \"3\" ]]\n    [[ $(candidate\
    \ \"100 -33 32 -1 0 -2\") = \"-33\" ]]\n    [[ $(candidate \"-10\") = \"-10\"\
    \ ]]\n    [[ $(candidate \"7\") = \"7\" ]]\n    [[ $(candidate \"1 -1\") = \"\
    -1\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660004788
- exit_code: 0
  program: "#!/bin/bash\n# Given an array of integers nums, find the minimum sum of\
    \ any non-empty sub-array\n# of nums.\n# Example\n#\n# $1 is a space-separated\
    \ list\nminSubArraySum() {\n    local -a nums=($1)\n    local min=${nums[0]}\n\
    \    local sum=0\n    for (( i=0; i<${#nums[@]}; i++ )); do\n        sum=$(( sum\
    \ + nums[i] ))\n        if (( sum < min )); then\n            min=$sum\n     \
    \   fi\n        if (( sum > 0 )); then\n            sum=0\n        fi\n    done\n\
    \    echo $min\n}\n\ncandidate() {\n    minSubArraySum \"$@\"\n}\n\nset -e\nrun_test()\
    \ {\n    [[ $(candidate \"2 3 4 1 2 4\") = \"1\" ]]\n    [[ $(candidate \"-1 -2\
    \ -3\") = \"-6\" ]]\n    [[ $(candidate \"-1 -2 -3 2 -10\") = \"-14\" ]]\n   \
    \ [[ $(candidate \"-9999999999999999\") = \"-9999999999999999\" ]]\n    [[ $(candidate\
    \ \"0 10 20 1000000\") = \"0\" ]]\n    [[ $(candidate \"-1 -2 -3 10 -5\") = \"\
    -6\" ]]\n    [[ $(candidate \"100 -1 -2 -3 10 -5\") = \"-6\" ]]\n    [[ $(candidate\
    \ \"10 11 13 8 3 4\") = \"3\" ]]\n    [[ $(candidate \"100 -33 32 -1 0 -2\") =\
    \ \"-33\" ]]\n    [[ $(candidate \"-10\") = \"-10\" ]]\n    [[ $(candidate \"\
    7\") = \"7\" ]]\n    [[ $(candidate \"1 -1\") = \"-1\" ]]\n}\n\nrun_test"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660004788
- exit_code: 1
  program: "#!/bin/bash\n# Given an array of integers nums, find the minimum sum of\
    \ any non-empty sub-array\n# of nums.\n# Example\n#\n# $1 is a space-separated\
    \ list\nminSubArraySum() {\n    local -n nums=$1\n    local min_sum=${nums[0]}\n\
    \    local sum=0\n    for i in \"${nums[@]}\"; do\n        sum=$((sum + i))\n\
    \        if [[ $sum -lt $min_sum ]]; then\n            min_sum=$sum\n        fi\n\
    \        if [[ $sum -gt 0 ]]; then\n            sum=0\n        fi\n    done\n\
    \    echo $min_sum\n}\n\ncandidate() {\n    minSubArraySum \"$@\"\n}\n\nset -e\n\
    run_test() {\n    [[ $(candidate \"2 3 4 1 2 4\") = \"1\" ]]\n    [[ $(candidate\
    \ \"-1 -2 -3\") = \"-6\" ]]\n    [[ $(candidate \"-1 -2 -3 2 -10\") = \"-14\"\
    \ ]]\n    [[ $(candidate \"-9999999999999999\") = \"-9999999999999999\" ]]\n \
    \   [[ $(candidate \"0 10 20 1000000\") = \"0\" ]]\n    [[ $(candidate \"-1 -2\
    \ -3 10 -5\") = \"-6\" ]]\n    [[ $(candidate \"100 -1 -2 -3 10 -5\") = \"-6\"\
    \ ]]\n    [[ $(candidate \"10 11 13 8 3 4\") = \"3\" ]]\n    [[ $(candidate \"\
    100 -33 32 -1 0 -2\") = \"-33\" ]]\n    [[ $(candidate \"-10\") = \"-10\" ]]\n\
    \    [[ $(candidate \"7\") = \"7\" ]]\n    [[ $(candidate \"1 -1\") = \"-1\" ]]\n\
    }\n\nrun_test"
  status: Exception
  stderr: '/tmp/tmpq71depjj.sh: line 8: local: `2 3 4 1 2 4'': invalid variable name
    for name reference

    '
  stdout: ''
  timestamp: 1660004788
- exit_code: 0
  program: "#!/bin/bash\n# Given an array of integers nums, find the minimum sum of\
    \ any non-empty sub-array\n# of nums.\n# Example\n#\n# $1 is a space-separated\
    \ list\nminSubArraySum() {\n  local -a nums\n  local min_sum\n  local sum\n  local\
    \ i\n  local j\n  local k\n\n  nums=($1)\n  min_sum=${nums[0]}\n  for ((i=0; i<${#nums[@]};\
    \ i++)); do\n    sum=0\n    for ((j=i; j<${#nums[@]}; j++)); do\n      sum=$((sum\
    \ + nums[j]))\n      if [[ $sum -lt $min_sum ]]; then\n        min_sum=$sum\n\
    \      fi\n    done\n  done\n  echo $min_sum\n}\n\ncandidate() {\n    minSubArraySum\
    \ \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"2 3 4 1 2 4\") = \"\
    1\" ]]\n    [[ $(candidate \"-1 -2 -3\") = \"-6\" ]]\n    [[ $(candidate \"-1\
    \ -2 -3 2 -10\") = \"-14\" ]]\n    [[ $(candidate \"-9999999999999999\") = \"\
    -9999999999999999\" ]]\n    [[ $(candidate \"0 10 20 1000000\") = \"0\" ]]\n \
    \   [[ $(candidate \"-1 -2 -3 10 -5\") = \"-6\" ]]\n    [[ $(candidate \"100 -1\
    \ -2 -3 10 -5\") = \"-6\" ]]\n    [[ $(candidate \"10 11 13 8 3 4\") = \"3\" ]]\n\
    \    [[ $(candidate \"100 -33 32 -1 0 -2\") = \"-33\" ]]\n    [[ $(candidate \"\
    -10\") = \"-10\" ]]\n    [[ $(candidate \"7\") = \"7\" ]]\n    [[ $(candidate\
    \ \"1 -1\") = \"-1\" ]]\n}\n\nrun_test"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660004788
- exit_code: 1
  program: "#!/bin/bash\n# Given an array of integers nums, find the minimum sum of\
    \ any non-empty sub-array\n# of nums.\n# Example\n#\n# $1 is a space-separated\
    \ list\nminSubArraySum() {\n  local -n nums=$1\n  local min=0\n  local sum=0\n\
    \  for ((i=0; i<${#nums[@]}; i++)); do\n    sum+=${nums[i]}\n    if ((sum < min));\
    \ then\n      min=sum\n    fi\n  done\n  echo $min\n}\n\ncandidate() {\n    minSubArraySum\
    \ \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"2 3 4 1 2 4\") = \"\
    1\" ]]\n    [[ $(candidate \"-1 -2 -3\") = \"-6\" ]]\n    [[ $(candidate \"-1\
    \ -2 -3 2 -10\") = \"-14\" ]]\n    [[ $(candidate \"-9999999999999999\") = \"\
    -9999999999999999\" ]]\n    [[ $(candidate \"0 10 20 1000000\") = \"0\" ]]\n \
    \   [[ $(candidate \"-1 -2 -3 10 -5\") = \"-6\" ]]\n    [[ $(candidate \"100 -1\
    \ -2 -3 10 -5\") = \"-6\" ]]\n    [[ $(candidate \"10 11 13 8 3 4\") = \"3\" ]]\n\
    \    [[ $(candidate \"100 -33 32 -1 0 -2\") = \"-33\" ]]\n    [[ $(candidate \"\
    -10\") = \"-10\" ]]\n    [[ $(candidate \"7\") = \"7\" ]]\n    [[ $(candidate\
    \ \"1 -1\") = \"-1\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: '/tmp/tmpbfru1z72.sh: line 8: local: `2 3 4 1 2 4'': invalid variable name
    for name reference

    '
  stdout: ''
  timestamp: 1660004788
- exit_code: 0
  program: "#!/bin/bash\n# Given an array of integers nums, find the minimum sum of\
    \ any non-empty sub-array\n# of nums.\n# Example\n#\n# $1 is a space-separated\
    \ list\nminSubArraySum() {\n  local -a nums=($1)\n  local min=${nums[0]}\n  local\
    \ sum=0\n  for num in \"${nums[@]}\"; do\n    sum=$((sum + num))\n    if [[ $sum\
    \ -lt $min ]]; then\n      min=$sum\n    fi\n    if [[ $sum -gt 0 ]]; then\n \
    \     sum=0\n    fi\n  done\n  echo $min\n}\n\ncandidate() {\n    minSubArraySum\
    \ \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"2 3 4 1 2 4\") = \"\
    1\" ]]\n    [[ $(candidate \"-1 -2 -3\") = \"-6\" ]]\n    [[ $(candidate \"-1\
    \ -2 -3 2 -10\") = \"-14\" ]]\n    [[ $(candidate \"-9999999999999999\") = \"\
    -9999999999999999\" ]]\n    [[ $(candidate \"0 10 20 1000000\") = \"0\" ]]\n \
    \   [[ $(candidate \"-1 -2 -3 10 -5\") = \"-6\" ]]\n    [[ $(candidate \"100 -1\
    \ -2 -3 10 -5\") = \"-6\" ]]\n    [[ $(candidate \"10 11 13 8 3 4\") = \"3\" ]]\n\
    \    [[ $(candidate \"100 -33 32 -1 0 -2\") = \"-33\" ]]\n    [[ $(candidate \"\
    -10\") = \"-10\" ]]\n    [[ $(candidate \"7\") = \"7\" ]]\n    [[ $(candidate\
    \ \"1 -1\") = \"-1\" ]]\n}\n\nrun_test"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660004788
- exit_code: 1
  program: "#!/bin/bash\n# Given an array of integers nums, find the minimum sum of\
    \ any non-empty sub-array\n# of nums.\n# Example\n#\n# $1 is a space-separated\
    \ list\nminSubArraySum() {\n  local -n arr=$1\n  local min_sum=${arr[0]}\n  local\
    \ sum=0\n  for ((i=0; i<${#arr[@]}; i++)); do\n    sum=$((sum + arr[i]))\n   \
    \ if ((sum < min_sum)); then\n      min_sum=$sum\n    fi\n    if ((sum > 0));\
    \ then\n      sum=0\n    fi\n  done\n  echo $min_sum\n}\n\ncandidate() {\n   \
    \ minSubArraySum \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"2 3 4\
    \ 1 2 4\") = \"1\" ]]\n    [[ $(candidate \"-1 -2 -3\") = \"-6\" ]]\n    [[ $(candidate\
    \ \"-1 -2 -3 2 -10\") = \"-14\" ]]\n    [[ $(candidate \"-9999999999999999\")\
    \ = \"-9999999999999999\" ]]\n    [[ $(candidate \"0 10 20 1000000\") = \"0\"\
    \ ]]\n    [[ $(candidate \"-1 -2 -3 10 -5\") = \"-6\" ]]\n    [[ $(candidate \"\
    100 -1 -2 -3 10 -5\") = \"-6\" ]]\n    [[ $(candidate \"10 11 13 8 3 4\") = \"\
    3\" ]]\n    [[ $(candidate \"100 -33 32 -1 0 -2\") = \"-33\" ]]\n    [[ $(candidate\
    \ \"-10\") = \"-10\" ]]\n    [[ $(candidate \"7\") = \"7\" ]]\n    [[ $(candidate\
    \ \"1 -1\") = \"-1\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: '/tmp/tmp417hf0je.sh: line 8: local: `2 3 4 1 2 4'': invalid variable name
    for name reference

    '
  stdout: ''
  timestamp: 1660004788
- exit_code: 1
  program: "#!/bin/bash\n# Given an array of integers nums, find the minimum sum of\
    \ any non-empty sub-array\n# of nums.\n# Example\n#\n# $1 is a space-separated\
    \ list\nminSubArraySum() {\n  local -a nums=(\"$@\")\n  local min=0\n  local sum=0\n\
    \  for ((i=0; i<${#nums[@]}; i++)); do\n    sum=$((sum + nums[i]))\n    if ((sum\
    \ < min)); then\n      min=$sum\n    fi\n  done\n  echo $min\n}\n\ncandidate()\
    \ {\n    minSubArraySum \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate\
    \ \"2 3 4 1 2 4\") = \"1\" ]]\n    [[ $(candidate \"-1 -2 -3\") = \"-6\" ]]\n\
    \    [[ $(candidate \"-1 -2 -3 2 -10\") = \"-14\" ]]\n    [[ $(candidate \"-9999999999999999\"\
    ) = \"-9999999999999999\" ]]\n    [[ $(candidate \"0 10 20 1000000\") = \"0\"\
    \ ]]\n    [[ $(candidate \"-1 -2 -3 10 -5\") = \"-6\" ]]\n    [[ $(candidate \"\
    100 -1 -2 -3 10 -5\") = \"-6\" ]]\n    [[ $(candidate \"10 11 13 8 3 4\") = \"\
    3\" ]]\n    [[ $(candidate \"100 -33 32 -1 0 -2\") = \"-33\" ]]\n    [[ $(candidate\
    \ \"-10\") = \"-10\" ]]\n    [[ $(candidate \"7\") = \"7\" ]]\n    [[ $(candidate\
    \ \"1 -1\") = \"-1\" ]]\n}\n\nrun_test"
  status: SyntaxError
  stderr: '/tmp/tmpoj87jcxr.sh: line 12: 2 3 4 1 2 4: syntax error in expression (error
    token is "3 4 1 2 4")

    '
  stdout: ''
  timestamp: 1660004788
- exit_code: 0
  program: "#!/bin/bash\n# Given an array of integers nums, find the minimum sum of\
    \ any non-empty sub-array\n# of nums.\n# Example\n#\n# $1 is a space-separated\
    \ list\nminSubArraySum() {\n    local nums=($1)\n    local min=${nums[0]}\n  \
    \  local sum=0\n    for i in \"${nums[@]}\"; do\n        sum=$((sum + i))\n  \
    \      if [[ $sum -lt $min ]]; then\n            min=$sum\n        fi\n      \
    \  if [[ $sum -gt 0 ]]; then\n            sum=0\n        fi\n    done\n    echo\
    \ $min\n}\n\ncandidate() {\n    minSubArraySum \"$@\"\n}\n\nset -e\nrun_test()\
    \ {\n    [[ $(candidate \"2 3 4 1 2 4\") = \"1\" ]]\n    [[ $(candidate \"-1 -2\
    \ -3\") = \"-6\" ]]\n    [[ $(candidate \"-1 -2 -3 2 -10\") = \"-14\" ]]\n   \
    \ [[ $(candidate \"-9999999999999999\") = \"-9999999999999999\" ]]\n    [[ $(candidate\
    \ \"0 10 20 1000000\") = \"0\" ]]\n    [[ $(candidate \"-1 -2 -3 10 -5\") = \"\
    -6\" ]]\n    [[ $(candidate \"100 -1 -2 -3 10 -5\") = \"-6\" ]]\n    [[ $(candidate\
    \ \"10 11 13 8 3 4\") = \"3\" ]]\n    [[ $(candidate \"100 -33 32 -1 0 -2\") =\
    \ \"-33\" ]]\n    [[ $(candidate \"-10\") = \"-10\" ]]\n    [[ $(candidate \"\
    7\") = \"7\" ]]\n    [[ $(candidate \"1 -1\") = \"-1\" ]]\n}\n\nrun_test"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660004788
- exit_code: 1
  program: "#!/bin/bash\n# Given an array of integers nums, find the minimum sum of\
    \ any non-empty sub-array\n# of nums.\n# Example\n#\n# $1 is a space-separated\
    \ list\nminSubArraySum() {\n    local -n _arr=$1\n    local min=${_arr[0]}\n \
    \   local sum=0\n    for i in \"${_arr[@]}\"; do\n        sum=$((sum + i))\n \
    \       if ((sum < min)); then\n            min=$sum\n        fi\n        if ((sum\
    \ > 0)); then\n            sum=0\n        fi\n    done\n    echo $min\n}\n\ncandidate()\
    \ {\n    minSubArraySum \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate\
    \ \"2 3 4 1 2 4\") = \"1\" ]]\n    [[ $(candidate \"-1 -2 -3\") = \"-6\" ]]\n\
    \    [[ $(candidate \"-1 -2 -3 2 -10\") = \"-14\" ]]\n    [[ $(candidate \"-9999999999999999\"\
    ) = \"-9999999999999999\" ]]\n    [[ $(candidate \"0 10 20 1000000\") = \"0\"\
    \ ]]\n    [[ $(candidate \"-1 -2 -3 10 -5\") = \"-6\" ]]\n    [[ $(candidate \"\
    100 -1 -2 -3 10 -5\") = \"-6\" ]]\n    [[ $(candidate \"10 11 13 8 3 4\") = \"\
    3\" ]]\n    [[ $(candidate \"100 -33 32 -1 0 -2\") = \"-33\" ]]\n    [[ $(candidate\
    \ \"-10\") = \"-10\" ]]\n    [[ $(candidate \"7\") = \"7\" ]]\n    [[ $(candidate\
    \ \"1 -1\") = \"-1\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: '/tmp/tmpjre7x_yk.sh: line 8: local: `2 3 4 1 2 4'': invalid variable name
    for name reference

    '
  stdout: ''
  timestamp: 1660004788
- exit_code: 1
  program: "#!/bin/bash\n# Given an array of integers nums, find the minimum sum of\
    \ any non-empty sub-array\n# of nums.\n# Example\n#\n# $1 is a space-separated\
    \ list\nminSubArraySum() {\n    local -n arr=$1\n    local min=${arr[0]}\n   \
    \ local sum=0\n    for i in \"${arr[@]}\"; do\n        sum=$((sum + i))\n    \
    \    if [[ $sum -lt $min ]]; then\n            min=$sum\n        fi\n        if\
    \ [[ $sum -gt 0 ]]; then\n            sum=0\n        fi\n    done\n    echo $min\n\
    }\n\ncandidate() {\n    minSubArraySum \"$@\"\n}\n\nset -e\nrun_test() {\n   \
    \ [[ $(candidate \"2 3 4 1 2 4\") = \"1\" ]]\n    [[ $(candidate \"-1 -2 -3\"\
    ) = \"-6\" ]]\n    [[ $(candidate \"-1 -2 -3 2 -10\") = \"-14\" ]]\n    [[ $(candidate\
    \ \"-9999999999999999\") = \"-9999999999999999\" ]]\n    [[ $(candidate \"0 10\
    \ 20 1000000\") = \"0\" ]]\n    [[ $(candidate \"-1 -2 -3 10 -5\") = \"-6\" ]]\n\
    \    [[ $(candidate \"100 -1 -2 -3 10 -5\") = \"-6\" ]]\n    [[ $(candidate \"\
    10 11 13 8 3 4\") = \"3\" ]]\n    [[ $(candidate \"100 -33 32 -1 0 -2\") = \"\
    -33\" ]]\n    [[ $(candidate \"-10\") = \"-10\" ]]\n    [[ $(candidate \"7\")\
    \ = \"7\" ]]\n    [[ $(candidate \"1 -1\") = \"-1\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: '/tmp/tmpfkquxpek.sh: line 8: local: `2 3 4 1 2 4'': invalid variable name
    for name reference

    '
  stdout: ''
  timestamp: 1660004788
- exit_code: 1
  program: "#!/bin/bash\n# Given an array of integers nums, find the minimum sum of\
    \ any non-empty sub-array\n# of nums.\n# Example\n#\n# $1 is a space-separated\
    \ list\nminSubArraySum() {\n    local -n nums=$1\n    local min=${nums[0]}\n \
    \   local sum=0\n    for i in \"${nums[@]}\"; do\n        sum=$((sum + i))\n \
    \       if [[ $sum -lt $min ]]; then\n            min=$sum\n        fi\n     \
    \   if [[ $sum -gt 0 ]]; then\n            sum=0\n        fi\n    done\n    echo\
    \ $min\n}\n\ncandidate() {\n    minSubArraySum \"$@\"\n}\n\nset -e\nrun_test()\
    \ {\n    [[ $(candidate \"2 3 4 1 2 4\") = \"1\" ]]\n    [[ $(candidate \"-1 -2\
    \ -3\") = \"-6\" ]]\n    [[ $(candidate \"-1 -2 -3 2 -10\") = \"-14\" ]]\n   \
    \ [[ $(candidate \"-9999999999999999\") = \"-9999999999999999\" ]]\n    [[ $(candidate\
    \ \"0 10 20 1000000\") = \"0\" ]]\n    [[ $(candidate \"-1 -2 -3 10 -5\") = \"\
    -6\" ]]\n    [[ $(candidate \"100 -1 -2 -3 10 -5\") = \"-6\" ]]\n    [[ $(candidate\
    \ \"10 11 13 8 3 4\") = \"3\" ]]\n    [[ $(candidate \"100 -33 32 -1 0 -2\") =\
    \ \"-33\" ]]\n    [[ $(candidate \"-10\") = \"-10\" ]]\n    [[ $(candidate \"\
    7\") = \"7\" ]]\n    [[ $(candidate \"1 -1\") = \"-1\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: '/tmp/tmprfdaox40.sh: line 8: local: `2 3 4 1 2 4'': invalid variable name
    for name reference

    '
  stdout: ''
  timestamp: 1660004788
- exit_code: 1
  program: "#!/bin/bash\n# Given an array of integers nums, find the minimum sum of\
    \ any non-empty sub-array\n# of nums.\n# Example\n#\n# $1 is a space-separated\
    \ list\nminSubArraySum() {\n  local -n nums=$1\n  local min=${nums[0]}\n  local\
    \ sum=0\n  for n in \"${nums[@]}\"; do\n    sum=$((sum + n))\n    min=$((min <\
    \ sum ? min : sum))\n    sum=$((sum < 0 ? 0 : sum))\n  done\n  echo $min\n}\n\n\
    candidate() {\n    minSubArraySum \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate\
    \ \"2 3 4 1 2 4\") = \"1\" ]]\n    [[ $(candidate \"-1 -2 -3\") = \"-6\" ]]\n\
    \    [[ $(candidate \"-1 -2 -3 2 -10\") = \"-14\" ]]\n    [[ $(candidate \"-9999999999999999\"\
    ) = \"-9999999999999999\" ]]\n    [[ $(candidate \"0 10 20 1000000\") = \"0\"\
    \ ]]\n    [[ $(candidate \"-1 -2 -3 10 -5\") = \"-6\" ]]\n    [[ $(candidate \"\
    100 -1 -2 -3 10 -5\") = \"-6\" ]]\n    [[ $(candidate \"10 11 13 8 3 4\") = \"\
    3\" ]]\n    [[ $(candidate \"100 -33 32 -1 0 -2\") = \"-33\" ]]\n    [[ $(candidate\
    \ \"-10\") = \"-10\" ]]\n    [[ $(candidate \"7\") = \"7\" ]]\n    [[ $(candidate\
    \ \"1 -1\") = \"-1\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: '/tmp/tmpnwcdxmn5.sh: line 8: local: `2 3 4 1 2 4'': invalid variable name
    for name reference

    '
  stdout: ''
  timestamp: 1660004788
- exit_code: 1
  program: "#!/bin/bash\n# Given an array of integers nums, find the minimum sum of\
    \ any non-empty sub-array\n# of nums.\n# Example\n#\n# $1 is a space-separated\
    \ list\nminSubArraySum() {\n    local -n nums=$1\n    local min_sum=${nums[0]}\n\
    \    local curr_sum=0\n    for num in \"${nums[@]}\"; do\n        curr_sum=$((curr_sum\
    \ + num))\n        if ((curr_sum < min_sum)); then\n            min_sum=$curr_sum\n\
    \        fi\n        if ((curr_sum > 0)); then\n            curr_sum=0\n     \
    \   fi\n    done\n    echo $min_sum\n}\n\ncandidate() {\n    minSubArraySum \"\
    $@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"2 3 4 1 2 4\") = \"1\" ]]\n\
    \    [[ $(candidate \"-1 -2 -3\") = \"-6\" ]]\n    [[ $(candidate \"-1 -2 -3 2\
    \ -10\") = \"-14\" ]]\n    [[ $(candidate \"-9999999999999999\") = \"-9999999999999999\"\
    \ ]]\n    [[ $(candidate \"0 10 20 1000000\") = \"0\" ]]\n    [[ $(candidate \"\
    -1 -2 -3 10 -5\") = \"-6\" ]]\n    [[ $(candidate \"100 -1 -2 -3 10 -5\") = \"\
    -6\" ]]\n    [[ $(candidate \"10 11 13 8 3 4\") = \"3\" ]]\n    [[ $(candidate\
    \ \"100 -33 32 -1 0 -2\") = \"-33\" ]]\n    [[ $(candidate \"-10\") = \"-10\"\
    \ ]]\n    [[ $(candidate \"7\") = \"7\" ]]\n    [[ $(candidate \"1 -1\") = \"\
    -1\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: '/tmp/tmp9smlm49r.sh: line 8: local: `2 3 4 1 2 4'': invalid variable name
    for name reference

    '
  stdout: ''
  timestamp: 1660004788
- exit_code: 1
  program: "#!/bin/bash\n# Given an array of integers nums, find the minimum sum of\
    \ any non-empty sub-array\n# of nums.\n# Example\n#\n# $1 is a space-separated\
    \ list\nminSubArraySum() {\n    local -n arr=$1\n    local min=${arr[0]}\n   \
    \ local sum=0\n    for i in \"${arr[@]}\"; do\n        (( sum += i ))\n      \
    \  if (( sum < min )); then\n            min=$sum\n        fi\n    done\n    echo\
    \ $min\n}\n\ncandidate() {\n    minSubArraySum \"$@\"\n}\n\nset -e\nrun_test()\
    \ {\n    [[ $(candidate \"2 3 4 1 2 4\") = \"1\" ]]\n    [[ $(candidate \"-1 -2\
    \ -3\") = \"-6\" ]]\n    [[ $(candidate \"-1 -2 -3 2 -10\") = \"-14\" ]]\n   \
    \ [[ $(candidate \"-9999999999999999\") = \"-9999999999999999\" ]]\n    [[ $(candidate\
    \ \"0 10 20 1000000\") = \"0\" ]]\n    [[ $(candidate \"-1 -2 -3 10 -5\") = \"\
    -6\" ]]\n    [[ $(candidate \"100 -1 -2 -3 10 -5\") = \"-6\" ]]\n    [[ $(candidate\
    \ \"10 11 13 8 3 4\") = \"3\" ]]\n    [[ $(candidate \"100 -33 32 -1 0 -2\") =\
    \ \"-33\" ]]\n    [[ $(candidate \"-10\") = \"-10\" ]]\n    [[ $(candidate \"\
    7\") = \"7\" ]]\n    [[ $(candidate \"1 -1\") = \"-1\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: '/tmp/tmpurx8_i9e.sh: line 8: local: `2 3 4 1 2 4'': invalid variable name
    for name reference

    '
  stdout: ''
  timestamp: 1660004788
- exit_code: 1
  program: "#!/bin/bash\n# Given an array of integers nums, find the minimum sum of\
    \ any non-empty sub-array\n# of nums.\n# Example\n#\n# $1 is a space-separated\
    \ list\nminSubArraySum() {\n  local -n nums=$1\n  local min_sum=${nums[0]}\n \
    \ local sum=0\n  for ((i=0; i<${#nums[@]}; i++)); do\n    sum=$((sum + nums[i]))\n\
    \    if ((sum < min_sum)); then\n      min_sum=$sum\n    fi\n    if ((sum > 0));\
    \ then\n      sum=0\n    fi\n  done\n  echo $min_sum\n}\n\ncandidate() {\n   \
    \ minSubArraySum \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"2 3 4\
    \ 1 2 4\") = \"1\" ]]\n    [[ $(candidate \"-1 -2 -3\") = \"-6\" ]]\n    [[ $(candidate\
    \ \"-1 -2 -3 2 -10\") = \"-14\" ]]\n    [[ $(candidate \"-9999999999999999\")\
    \ = \"-9999999999999999\" ]]\n    [[ $(candidate \"0 10 20 1000000\") = \"0\"\
    \ ]]\n    [[ $(candidate \"-1 -2 -3 10 -5\") = \"-6\" ]]\n    [[ $(candidate \"\
    100 -1 -2 -3 10 -5\") = \"-6\" ]]\n    [[ $(candidate \"10 11 13 8 3 4\") = \"\
    3\" ]]\n    [[ $(candidate \"100 -33 32 -1 0 -2\") = \"-33\" ]]\n    [[ $(candidate\
    \ \"-10\") = \"-10\" ]]\n    [[ $(candidate \"7\") = \"7\" ]]\n    [[ $(candidate\
    \ \"1 -1\") = \"-1\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: '/tmp/tmptb_9tita.sh: line 8: local: `2 3 4 1 2 4'': invalid variable name
    for name reference

    '
  stdout: ''
  timestamp: 1660004788
- exit_code: 0
  program: "#!/bin/bash\n# Given an array of integers nums, find the minimum sum of\
    \ any non-empty sub-array\n# of nums.\n# Example\n#\n# $1 is a space-separated\
    \ list\nminSubArraySum() {\n  local -a nums\n  IFS=' ' read -r -a nums <<< \"\
    $1\"\n  local min=${nums[0]}\n  local sum=0\n  for i in \"${nums[@]}\"; do\n \
    \   sum=$((sum + i))\n    if [[ $sum -lt $min ]]; then\n      min=$sum\n    fi\n\
    \    if [[ $sum -gt 0 ]]; then\n      sum=0\n    fi\n  done\n  echo $min\n}\n\n\
    candidate() {\n    minSubArraySum \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate\
    \ \"2 3 4 1 2 4\") = \"1\" ]]\n    [[ $(candidate \"-1 -2 -3\") = \"-6\" ]]\n\
    \    [[ $(candidate \"-1 -2 -3 2 -10\") = \"-14\" ]]\n    [[ $(candidate \"-9999999999999999\"\
    ) = \"-9999999999999999\" ]]\n    [[ $(candidate \"0 10 20 1000000\") = \"0\"\
    \ ]]\n    [[ $(candidate \"-1 -2 -3 10 -5\") = \"-6\" ]]\n    [[ $(candidate \"\
    100 -1 -2 -3 10 -5\") = \"-6\" ]]\n    [[ $(candidate \"10 11 13 8 3 4\") = \"\
    3\" ]]\n    [[ $(candidate \"100 -33 32 -1 0 -2\") = \"-33\" ]]\n    [[ $(candidate\
    \ \"-10\") = \"-10\" ]]\n    [[ $(candidate \"7\") = \"7\" ]]\n    [[ $(candidate\
    \ \"1 -1\") = \"-1\" ]]\n}\n\nrun_test"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660004788
- exit_code: 1
  program: "#!/bin/bash\n# Given an array of integers nums, find the minimum sum of\
    \ any non-empty sub-array\n# of nums.\n# Example\n#\n# $1 is a space-separated\
    \ list\nminSubArraySum() {\n    local -n _arr=$1\n    local min=${_arr[0]}\n \
    \   local sum=0\n    for i in \"${_arr[@]}\"; do\n        (( sum += i ))\n   \
    \     if (( sum < min )); then\n            min=$sum\n        fi\n        if ((\
    \ sum > 0 )); then\n            sum=0\n        fi\n    done\n    echo $min\n}\n\
    \ncandidate() {\n    minSubArraySum \"$@\"\n}\n\nset -e\nrun_test() {\n    [[\
    \ $(candidate \"2 3 4 1 2 4\") = \"1\" ]]\n    [[ $(candidate \"-1 -2 -3\") =\
    \ \"-6\" ]]\n    [[ $(candidate \"-1 -2 -3 2 -10\") = \"-14\" ]]\n    [[ $(candidate\
    \ \"-9999999999999999\") = \"-9999999999999999\" ]]\n    [[ $(candidate \"0 10\
    \ 20 1000000\") = \"0\" ]]\n    [[ $(candidate \"-1 -2 -3 10 -5\") = \"-6\" ]]\n\
    \    [[ $(candidate \"100 -1 -2 -3 10 -5\") = \"-6\" ]]\n    [[ $(candidate \"\
    10 11 13 8 3 4\") = \"3\" ]]\n    [[ $(candidate \"100 -33 32 -1 0 -2\") = \"\
    -33\" ]]\n    [[ $(candidate \"-10\") = \"-10\" ]]\n    [[ $(candidate \"7\")\
    \ = \"7\" ]]\n    [[ $(candidate \"1 -1\") = \"-1\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: '/tmp/tmp8t77bteu.sh: line 8: local: `2 3 4 1 2 4'': invalid variable name
    for name reference

    '
  stdout: ''
  timestamp: 1660004788
- exit_code: 1
  program: "#!/bin/bash\n# Given an array of integers nums, find the minimum sum of\
    \ any non-empty sub-array\n# of nums.\n# Example\n#\n# $1 is a space-separated\
    \ list\nminSubArraySum() {\n    local -n nums=$1\n    local min=${nums[0]}\n \
    \   local sum=${nums[0]}\n    for ((i=1; i<${#nums[@]}; i++)); do\n        if\
    \ ((sum > 0)); then\n            sum=0\n        fi\n        sum=$((sum + nums[i]))\n\
    \        if ((sum < min)); then\n            min=$sum\n        fi\n    done\n\
    \    echo $min\n}\n\ncandidate() {\n    minSubArraySum \"$@\"\n}\n\nset -e\nrun_test()\
    \ {\n    [[ $(candidate \"2 3 4 1 2 4\") = \"1\" ]]\n    [[ $(candidate \"-1 -2\
    \ -3\") = \"-6\" ]]\n    [[ $(candidate \"-1 -2 -3 2 -10\") = \"-14\" ]]\n   \
    \ [[ $(candidate \"-9999999999999999\") = \"-9999999999999999\" ]]\n    [[ $(candidate\
    \ \"0 10 20 1000000\") = \"0\" ]]\n    [[ $(candidate \"-1 -2 -3 10 -5\") = \"\
    -6\" ]]\n    [[ $(candidate \"100 -1 -2 -3 10 -5\") = \"-6\" ]]\n    [[ $(candidate\
    \ \"10 11 13 8 3 4\") = \"3\" ]]\n    [[ $(candidate \"100 -33 32 -1 0 -2\") =\
    \ \"-33\" ]]\n    [[ $(candidate \"-10\") = \"-10\" ]]\n    [[ $(candidate \"\
    7\") = \"7\" ]]\n    [[ $(candidate \"1 -1\") = \"-1\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: '/tmp/tmptfl658cb.sh: line 8: local: `2 3 4 1 2 4'': invalid variable name
    for name reference

    '
  stdout: ''
  timestamp: 1660004788
- exit_code: 1
  program: "#!/bin/bash\n# Given an array of integers nums, find the minimum sum of\
    \ any non-empty sub-array\n# of nums.\n# Example\n#\n# $1 is a space-separated\
    \ list\nminSubArraySum() {\n    local -n arr=$1\n    local min_sum=${arr[0]}\n\
    \    local sum=0\n    for i in \"${arr[@]}\"; do\n        sum=$((sum + i))\n \
    \       if [[ $sum -lt $min_sum ]]; then\n            min_sum=$sum\n        fi\n\
    \        if [[ $sum -gt 0 ]]; then\n            sum=0\n        fi\n    done\n\
    \    echo $min_sum\n}\n\ncandidate() {\n    minSubArraySum \"$@\"\n}\n\nset -e\n\
    run_test() {\n    [[ $(candidate \"2 3 4 1 2 4\") = \"1\" ]]\n    [[ $(candidate\
    \ \"-1 -2 -3\") = \"-6\" ]]\n    [[ $(candidate \"-1 -2 -3 2 -10\") = \"-14\"\
    \ ]]\n    [[ $(candidate \"-9999999999999999\") = \"-9999999999999999\" ]]\n \
    \   [[ $(candidate \"0 10 20 1000000\") = \"0\" ]]\n    [[ $(candidate \"-1 -2\
    \ -3 10 -5\") = \"-6\" ]]\n    [[ $(candidate \"100 -1 -2 -3 10 -5\") = \"-6\"\
    \ ]]\n    [[ $(candidate \"10 11 13 8 3 4\") = \"3\" ]]\n    [[ $(candidate \"\
    100 -33 32 -1 0 -2\") = \"-33\" ]]\n    [[ $(candidate \"-10\") = \"-10\" ]]\n\
    \    [[ $(candidate \"7\") = \"7\" ]]\n    [[ $(candidate \"1 -1\") = \"-1\" ]]\n\
    }\n\nrun_test"
  status: Exception
  stderr: '/tmp/tmpvcqdeqex.sh: line 8: local: `2 3 4 1 2 4'': invalid variable name
    for name reference

    '
  stdout: ''
  timestamp: 1660004788
- exit_code: 1
  program: "#!/bin/bash\n# Given an array of integers nums, find the minimum sum of\
    \ any non-empty sub-array\n# of nums.\n# Example\n#\n# $1 is a space-separated\
    \ list\nminSubArraySum() {\n    local -n nums=$1\n    local min_sum=${nums[0]}\n\
    \    local sum=0\n    for num in \"${nums[@]}\"; do\n        sum=$((sum + num))\n\
    \        if [[ $sum -lt $min_sum ]]; then\n            min_sum=$sum\n        fi\n\
    \        if [[ $sum -lt 0 ]]; then\n            sum=0\n        fi\n    done\n\
    \    echo $min_sum\n}\n\ncandidate() {\n    minSubArraySum \"$@\"\n}\n\nset -e\n\
    run_test() {\n    [[ $(candidate \"2 3 4 1 2 4\") = \"1\" ]]\n    [[ $(candidate\
    \ \"-1 -2 -3\") = \"-6\" ]]\n    [[ $(candidate \"-1 -2 -3 2 -10\") = \"-14\"\
    \ ]]\n    [[ $(candidate \"-9999999999999999\") = \"-9999999999999999\" ]]\n \
    \   [[ $(candidate \"0 10 20 1000000\") = \"0\" ]]\n    [[ $(candidate \"-1 -2\
    \ -3 10 -5\") = \"-6\" ]]\n    [[ $(candidate \"100 -1 -2 -3 10 -5\") = \"-6\"\
    \ ]]\n    [[ $(candidate \"10 11 13 8 3 4\") = \"3\" ]]\n    [[ $(candidate \"\
    100 -33 32 -1 0 -2\") = \"-33\" ]]\n    [[ $(candidate \"-10\") = \"-10\" ]]\n\
    \    [[ $(candidate \"7\") = \"7\" ]]\n    [[ $(candidate \"1 -1\") = \"-1\" ]]\n\
    }\n\nrun_test"
  status: Exception
  stderr: '/tmp/tmpwopb3il1.sh: line 8: local: `2 3 4 1 2 4'': invalid variable name
    for name reference

    '
  stdout: ''
  timestamp: 1660004788
- exit_code: 1
  program: "#!/bin/bash\n# Given an array of integers nums, find the minimum sum of\
    \ any non-empty sub-array\n# of nums.\n# Example\n#\n# $1 is a space-separated\
    \ list\nminSubArraySum() {\n  local -a nums=(\"$@\")\n  local min=0\n  local sum=0\n\
    \  for ((i=0; i<${#nums[@]}; i++)); do\n    sum=$((sum + nums[i]))\n    if [[\
    \ $sum -lt $min ]]; then\n      min=$sum\n    fi\n  done\n  echo $min\n}\n\ncandidate()\
    \ {\n    minSubArraySum \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate\
    \ \"2 3 4 1 2 4\") = \"1\" ]]\n    [[ $(candidate \"-1 -2 -3\") = \"-6\" ]]\n\
    \    [[ $(candidate \"-1 -2 -3 2 -10\") = \"-14\" ]]\n    [[ $(candidate \"-9999999999999999\"\
    ) = \"-9999999999999999\" ]]\n    [[ $(candidate \"0 10 20 1000000\") = \"0\"\
    \ ]]\n    [[ $(candidate \"-1 -2 -3 10 -5\") = \"-6\" ]]\n    [[ $(candidate \"\
    100 -1 -2 -3 10 -5\") = \"-6\" ]]\n    [[ $(candidate \"10 11 13 8 3 4\") = \"\
    3\" ]]\n    [[ $(candidate \"100 -33 32 -1 0 -2\") = \"-33\" ]]\n    [[ $(candidate\
    \ \"-10\") = \"-10\" ]]\n    [[ $(candidate \"7\") = \"7\" ]]\n    [[ $(candidate\
    \ \"1 -1\") = \"-1\" ]]\n}\n\nrun_test"
  status: SyntaxError
  stderr: '/tmp/tmpcgupozp6.sh: line 12: 2 3 4 1 2 4: syntax error in expression (error
    token is "3 4 1 2 4")

    '
  stdout: ''
  timestamp: 1660004788
- exit_code: 1
  program: "#!/bin/bash\n# Given an array of integers nums, find the minimum sum of\
    \ any non-empty sub-array\n# of nums.\n# Example\n#\n# $1 is a space-separated\
    \ list\nminSubArraySum() {\n    local -n nums=$1\n    local min=${nums[0]}\n \
    \   local sum=0\n    for i in \"${nums[@]}\"; do\n        sum=$((sum + i))\n \
    \       if [[ $sum -lt $min ]]; then\n            min=$sum\n        fi\n     \
    \   if [[ $sum -gt 0 ]]; then\n            sum=0\n        fi\n    done\n    echo\
    \ $min\n}\n\ncandidate() {\n    minSubArraySum \"$@\"\n}\n\nset -e\nrun_test()\
    \ {\n    [[ $(candidate \"2 3 4 1 2 4\") = \"1\" ]]\n    [[ $(candidate \"-1 -2\
    \ -3\") = \"-6\" ]]\n    [[ $(candidate \"-1 -2 -3 2 -10\") = \"-14\" ]]\n   \
    \ [[ $(candidate \"-9999999999999999\") = \"-9999999999999999\" ]]\n    [[ $(candidate\
    \ \"0 10 20 1000000\") = \"0\" ]]\n    [[ $(candidate \"-1 -2 -3 10 -5\") = \"\
    -6\" ]]\n    [[ $(candidate \"100 -1 -2 -3 10 -5\") = \"-6\" ]]\n    [[ $(candidate\
    \ \"10 11 13 8 3 4\") = \"3\" ]]\n    [[ $(candidate \"100 -33 32 -1 0 -2\") =\
    \ \"-33\" ]]\n    [[ $(candidate \"-10\") = \"-10\" ]]\n    [[ $(candidate \"\
    7\") = \"7\" ]]\n    [[ $(candidate \"1 -1\") = \"-1\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: '/tmp/tmprfdaox40.sh: line 8: local: `2 3 4 1 2 4'': invalid variable name
    for name reference

    '
  stdout: ''
  timestamp: 1660004788
- exit_code: 0
  program: "#!/bin/bash\n# Given an array of integers nums, find the minimum sum of\
    \ any non-empty sub-array\n# of nums.\n# Example\n#\n# $1 is a space-separated\
    \ list\nminSubArraySum() {\n  local -a nums=($1)\n  local min=${nums[0]}\n  local\
    \ sum=0\n  for ((i=0; i<${#nums[@]}; i++)); do\n    sum=$((sum + nums[i]))\n \
    \   if ((sum < min)); then\n      min=$sum\n    fi\n    if ((sum > 0)); then\n\
    \      sum=0\n    fi\n  done\n  echo $min\n}\n\ncandidate() {\n    minSubArraySum\
    \ \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"2 3 4 1 2 4\") = \"\
    1\" ]]\n    [[ $(candidate \"-1 -2 -3\") = \"-6\" ]]\n    [[ $(candidate \"-1\
    \ -2 -3 2 -10\") = \"-14\" ]]\n    [[ $(candidate \"-9999999999999999\") = \"\
    -9999999999999999\" ]]\n    [[ $(candidate \"0 10 20 1000000\") = \"0\" ]]\n \
    \   [[ $(candidate \"-1 -2 -3 10 -5\") = \"-6\" ]]\n    [[ $(candidate \"100 -1\
    \ -2 -3 10 -5\") = \"-6\" ]]\n    [[ $(candidate \"10 11 13 8 3 4\") = \"3\" ]]\n\
    \    [[ $(candidate \"100 -33 32 -1 0 -2\") = \"-33\" ]]\n    [[ $(candidate \"\
    -10\") = \"-10\" ]]\n    [[ $(candidate \"7\") = \"7\" ]]\n    [[ $(candidate\
    \ \"1 -1\") = \"-1\" ]]\n}\n\nrun_test"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660004788
- exit_code: 1
  program: "#!/bin/bash\n# Given an array of integers nums, find the minimum sum of\
    \ any non-empty sub-array\n# of nums.\n# Example\n#\n# $1 is a space-separated\
    \ list\nminSubArraySum() {\n    local -n nums=$1\n    local min_sum=${nums[0]}\n\
    \    local sum=0\n    for num in \"${nums[@]}\"; do\n        sum=$((sum + num))\n\
    \        if [[ $sum -lt $min_sum ]]; then\n            min_sum=$sum\n        fi\n\
    \        if [[ $sum -gt 0 ]]; then\n            sum=0\n        fi\n    done\n\
    \    echo $min_sum\n}\n\ncandidate() {\n    minSubArraySum \"$@\"\n}\n\nset -e\n\
    run_test() {\n    [[ $(candidate \"2 3 4 1 2 4\") = \"1\" ]]\n    [[ $(candidate\
    \ \"-1 -2 -3\") = \"-6\" ]]\n    [[ $(candidate \"-1 -2 -3 2 -10\") = \"-14\"\
    \ ]]\n    [[ $(candidate \"-9999999999999999\") = \"-9999999999999999\" ]]\n \
    \   [[ $(candidate \"0 10 20 1000000\") = \"0\" ]]\n    [[ $(candidate \"-1 -2\
    \ -3 10 -5\") = \"-6\" ]]\n    [[ $(candidate \"100 -1 -2 -3 10 -5\") = \"-6\"\
    \ ]]\n    [[ $(candidate \"10 11 13 8 3 4\") = \"3\" ]]\n    [[ $(candidate \"\
    100 -33 32 -1 0 -2\") = \"-33\" ]]\n    [[ $(candidate \"-10\") = \"-10\" ]]\n\
    \    [[ $(candidate \"7\") = \"7\" ]]\n    [[ $(candidate \"1 -1\") = \"-1\" ]]\n\
    }\n\nrun_test"
  status: Exception
  stderr: '/tmp/tmp8j_azv21.sh: line 8: local: `2 3 4 1 2 4'': invalid variable name
    for name reference

    '
  stdout: ''
  timestamp: 1660004788
- exit_code: 1
  program: "#!/bin/bash\n# Given an array of integers nums, find the minimum sum of\
    \ any non-empty sub-array\n# of nums.\n# Example\n#\n# $1 is a space-separated\
    \ list\nminSubArraySum() {\n    local -n nums=$1\n    local min_sum=${nums[0]}\n\
    \    local sum=0\n    for i in \"${nums[@]}\"; do\n        sum=$((sum + i))\n\
    \        if [[ $sum -lt $min_sum ]]; then\n            min_sum=$sum\n        fi\n\
    \        if [[ $sum -gt 0 ]]; then\n            sum=0\n        fi\n    done\n\
    \    echo $min_sum\n}\n\ncandidate() {\n    minSubArraySum \"$@\"\n}\n\nset -e\n\
    run_test() {\n    [[ $(candidate \"2 3 4 1 2 4\") = \"1\" ]]\n    [[ $(candidate\
    \ \"-1 -2 -3\") = \"-6\" ]]\n    [[ $(candidate \"-1 -2 -3 2 -10\") = \"-14\"\
    \ ]]\n    [[ $(candidate \"-9999999999999999\") = \"-9999999999999999\" ]]\n \
    \   [[ $(candidate \"0 10 20 1000000\") = \"0\" ]]\n    [[ $(candidate \"-1 -2\
    \ -3 10 -5\") = \"-6\" ]]\n    [[ $(candidate \"100 -1 -2 -3 10 -5\") = \"-6\"\
    \ ]]\n    [[ $(candidate \"10 11 13 8 3 4\") = \"3\" ]]\n    [[ $(candidate \"\
    100 -33 32 -1 0 -2\") = \"-33\" ]]\n    [[ $(candidate \"-10\") = \"-10\" ]]\n\
    \    [[ $(candidate \"7\") = \"7\" ]]\n    [[ $(candidate \"1 -1\") = \"-1\" ]]\n\
    }\n\nrun_test"
  status: Exception
  stderr: '/tmp/tmpq71depjj.sh: line 8: local: `2 3 4 1 2 4'': invalid variable name
    for name reference

    '
  stdout: ''
  timestamp: 1660004788
- exit_code: 1
  program: "#!/bin/bash\n# Given an array of integers nums, find the minimum sum of\
    \ any non-empty sub-array\n# of nums.\n# Example\n#\n# $1 is a space-separated\
    \ list\nminSubArraySum() {\n    local -n _nums=$1\n    local min_sum=${_nums[0]}\n\
    \    local curr_sum=${_nums[0]}\n    for ((i=1; i<${#_nums[@]}; i++)); do\n  \
    \      curr_sum=$((curr_sum + _nums[i]))\n        if ((curr_sum < min_sum)); then\n\
    \            min_sum=$curr_sum\n        fi\n        if ((curr_sum < 0)); then\n\
    \            curr_sum=0\n        fi\n    done\n    echo $min_sum\n}\n\ncandidate()\
    \ {\n    minSubArraySum \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate\
    \ \"2 3 4 1 2 4\") = \"1\" ]]\n    [[ $(candidate \"-1 -2 -3\") = \"-6\" ]]\n\
    \    [[ $(candidate \"-1 -2 -3 2 -10\") = \"-14\" ]]\n    [[ $(candidate \"-9999999999999999\"\
    ) = \"-9999999999999999\" ]]\n    [[ $(candidate \"0 10 20 1000000\") = \"0\"\
    \ ]]\n    [[ $(candidate \"-1 -2 -3 10 -5\") = \"-6\" ]]\n    [[ $(candidate \"\
    100 -1 -2 -3 10 -5\") = \"-6\" ]]\n    [[ $(candidate \"10 11 13 8 3 4\") = \"\
    3\" ]]\n    [[ $(candidate \"100 -33 32 -1 0 -2\") = \"-33\" ]]\n    [[ $(candidate\
    \ \"-10\") = \"-10\" ]]\n    [[ $(candidate \"7\") = \"7\" ]]\n    [[ $(candidate\
    \ \"1 -1\") = \"-1\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: '/tmp/tmpv0xw7vl5.sh: line 8: local: `2 3 4 1 2 4'': invalid variable name
    for name reference

    '
  stdout: ''
  timestamp: 1660004788
- exit_code: 1
  program: "#!/bin/bash\n# Given an array of integers nums, find the minimum sum of\
    \ any non-empty sub-array\n# of nums.\n# Example\n#\n# $1 is a space-separated\
    \ list\nminSubArraySum() {\n    local nums=(\"$@\")\n    local min=0\n    local\
    \ sum=0\n    for i in \"${nums[@]}\"; do\n        sum=$((sum + i))\n        if\
    \ [[ $sum -lt $min ]]; then\n            min=$sum\n        fi\n    done\n    echo\
    \ $min\n}\n\ncandidate() {\n    minSubArraySum \"$@\"\n}\n\nset -e\nrun_test()\
    \ {\n    [[ $(candidate \"2 3 4 1 2 4\") = \"1\" ]]\n    [[ $(candidate \"-1 -2\
    \ -3\") = \"-6\" ]]\n    [[ $(candidate \"-1 -2 -3 2 -10\") = \"-14\" ]]\n   \
    \ [[ $(candidate \"-9999999999999999\") = \"-9999999999999999\" ]]\n    [[ $(candidate\
    \ \"0 10 20 1000000\") = \"0\" ]]\n    [[ $(candidate \"-1 -2 -3 10 -5\") = \"\
    -6\" ]]\n    [[ $(candidate \"100 -1 -2 -3 10 -5\") = \"-6\" ]]\n    [[ $(candidate\
    \ \"10 11 13 8 3 4\") = \"3\" ]]\n    [[ $(candidate \"100 -33 32 -1 0 -2\") =\
    \ \"-33\" ]]\n    [[ $(candidate \"-10\") = \"-10\" ]]\n    [[ $(candidate \"\
    7\") = \"7\" ]]\n    [[ $(candidate \"1 -1\") = \"-1\" ]]\n}\n\nrun_test"
  status: SyntaxError
  stderr: '/tmp/tmphw31p2t7.sh: line 12: 2 3 4 1 2 4: syntax error in expression (error
    token is "3 4 1 2 4")

    '
  stdout: ''
  timestamp: 1660004788
- exit_code: 1
  program: "#!/bin/bash\n# Given an array of integers nums, find the minimum sum of\
    \ any non-empty sub-array\n# of nums.\n# Example\n#\n# $1 is a space-separated\
    \ list\nminSubArraySum() {\n  local -n _nums=$1\n  local min_sum=${_nums[0]}\n\
    \  local sum=0\n  for ((i=0; i<${#_nums[@]}; i++)); do\n    sum=$((sum + ${_nums[i]}))\n\
    \    if ((sum < min_sum)); then\n      min_sum=$sum\n    fi\n    if ((sum > 0));\
    \ then\n      sum=0\n    fi\n  done\n  echo $min_sum\n}\n\ncandidate() {\n   \
    \ minSubArraySum \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"2 3 4\
    \ 1 2 4\") = \"1\" ]]\n    [[ $(candidate \"-1 -2 -3\") = \"-6\" ]]\n    [[ $(candidate\
    \ \"-1 -2 -3 2 -10\") = \"-14\" ]]\n    [[ $(candidate \"-9999999999999999\")\
    \ = \"-9999999999999999\" ]]\n    [[ $(candidate \"0 10 20 1000000\") = \"0\"\
    \ ]]\n    [[ $(candidate \"-1 -2 -3 10 -5\") = \"-6\" ]]\n    [[ $(candidate \"\
    100 -1 -2 -3 10 -5\") = \"-6\" ]]\n    [[ $(candidate \"10 11 13 8 3 4\") = \"\
    3\" ]]\n    [[ $(candidate \"100 -33 32 -1 0 -2\") = \"-33\" ]]\n    [[ $(candidate\
    \ \"-10\") = \"-10\" ]]\n    [[ $(candidate \"7\") = \"7\" ]]\n    [[ $(candidate\
    \ \"1 -1\") = \"-1\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: '/tmp/tmptj8pxcfs.sh: line 8: local: `2 3 4 1 2 4'': invalid variable name
    for name reference

    '
  stdout: ''
  timestamp: 1660004788
- exit_code: 1
  program: "#!/bin/bash\n# Given an array of integers nums, find the minimum sum of\
    \ any non-empty sub-array\n# of nums.\n# Example\n#\n# $1 is a space-separated\
    \ list\nminSubArraySum() {\n    local -n arr=$1\n    local min=${arr[0]}\n   \
    \ local sum=0\n    for i in \"${arr[@]}\"; do\n        (( sum += i ))\n      \
    \  (( sum < min )) && min=$sum\n        (( sum > 0 )) && sum=0\n    done\n   \
    \ echo $min\n}\n\ncandidate() {\n    minSubArraySum \"$@\"\n}\n\nset -e\nrun_test()\
    \ {\n    [[ $(candidate \"2 3 4 1 2 4\") = \"1\" ]]\n    [[ $(candidate \"-1 -2\
    \ -3\") = \"-6\" ]]\n    [[ $(candidate \"-1 -2 -3 2 -10\") = \"-14\" ]]\n   \
    \ [[ $(candidate \"-9999999999999999\") = \"-9999999999999999\" ]]\n    [[ $(candidate\
    \ \"0 10 20 1000000\") = \"0\" ]]\n    [[ $(candidate \"-1 -2 -3 10 -5\") = \"\
    -6\" ]]\n    [[ $(candidate \"100 -1 -2 -3 10 -5\") = \"-6\" ]]\n    [[ $(candidate\
    \ \"10 11 13 8 3 4\") = \"3\" ]]\n    [[ $(candidate \"100 -33 32 -1 0 -2\") =\
    \ \"-33\" ]]\n    [[ $(candidate \"-10\") = \"-10\" ]]\n    [[ $(candidate \"\
    7\") = \"7\" ]]\n    [[ $(candidate \"1 -1\") = \"-1\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: '/tmp/tmpp667dtz7.sh: line 8: local: `2 3 4 1 2 4'': invalid variable name
    for name reference

    '
  stdout: ''
  timestamp: 1660004788
- exit_code: 1
  program: "#!/bin/bash\n# Given an array of integers nums, find the minimum sum of\
    \ any non-empty sub-array\n# of nums.\n# Example\n#\n# $1 is a space-separated\
    \ list\nminSubArraySum() {\n    local -n nums=$1\n    local min=${nums[0]}\n \
    \   local sum=0\n    for num in \"${nums[@]}\"; do\n        sum=$((sum + num))\n\
    \        if [[ $sum -lt $min ]]; then\n            min=$sum\n        fi\n    \
    \    if [[ $sum -gt 0 ]]; then\n            sum=0\n        fi\n    done\n    echo\
    \ $min\n}\n\ncandidate() {\n    minSubArraySum \"$@\"\n}\n\nset -e\nrun_test()\
    \ {\n    [[ $(candidate \"2 3 4 1 2 4\") = \"1\" ]]\n    [[ $(candidate \"-1 -2\
    \ -3\") = \"-6\" ]]\n    [[ $(candidate \"-1 -2 -3 2 -10\") = \"-14\" ]]\n   \
    \ [[ $(candidate \"-9999999999999999\") = \"-9999999999999999\" ]]\n    [[ $(candidate\
    \ \"0 10 20 1000000\") = \"0\" ]]\n    [[ $(candidate \"-1 -2 -3 10 -5\") = \"\
    -6\" ]]\n    [[ $(candidate \"100 -1 -2 -3 10 -5\") = \"-6\" ]]\n    [[ $(candidate\
    \ \"10 11 13 8 3 4\") = \"3\" ]]\n    [[ $(candidate \"100 -33 32 -1 0 -2\") =\
    \ \"-33\" ]]\n    [[ $(candidate \"-10\") = \"-10\" ]]\n    [[ $(candidate \"\
    7\") = \"7\" ]]\n    [[ $(candidate \"1 -1\") = \"-1\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: '/tmp/tmpk635_irt.sh: line 8: local: `2 3 4 1 2 4'': invalid variable name
    for name reference

    '
  stdout: ''
  timestamp: 1660004788
- exit_code: 1
  program: "#!/bin/bash\n# Given an array of integers nums, find the minimum sum of\
    \ any non-empty sub-array\n# of nums.\n# Example\n#\n# $1 is a space-separated\
    \ list\nminSubArraySum() {\n  local -a nums=($1)\n  local min=0\n  local sum=0\n\
    \  for ((i=0; i<${#nums[@]}; i++)); do\n    sum=$((sum + nums[i]))\n    if ((sum\
    \ < min)); then\n      min=$sum\n    fi\n  done\n  echo $min\n}\n\ncandidate()\
    \ {\n    minSubArraySum \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate\
    \ \"2 3 4 1 2 4\") = \"1\" ]]\n    [[ $(candidate \"-1 -2 -3\") = \"-6\" ]]\n\
    \    [[ $(candidate \"-1 -2 -3 2 -10\") = \"-14\" ]]\n    [[ $(candidate \"-9999999999999999\"\
    ) = \"-9999999999999999\" ]]\n    [[ $(candidate \"0 10 20 1000000\") = \"0\"\
    \ ]]\n    [[ $(candidate \"-1 -2 -3 10 -5\") = \"-6\" ]]\n    [[ $(candidate \"\
    100 -1 -2 -3 10 -5\") = \"-6\" ]]\n    [[ $(candidate \"10 11 13 8 3 4\") = \"\
    3\" ]]\n    [[ $(candidate \"100 -33 32 -1 0 -2\") = \"-33\" ]]\n    [[ $(candidate\
    \ \"-10\") = \"-10\" ]]\n    [[ $(candidate \"7\") = \"7\" ]]\n    [[ $(candidate\
    \ \"1 -1\") = \"-1\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660004788
- exit_code: 1
  program: "#!/bin/bash\n# Given an array of integers nums, find the minimum sum of\
    \ any non-empty sub-array\n# of nums.\n# Example\n#\n# $1 is a space-separated\
    \ list\nminSubArraySum() {\n  local -a nums=(\"$@\")\n  local min=0\n  local sum=0\n\
    \  for ((i=0; i<${#nums[@]}; i++)); do\n    sum=$((sum + nums[i]))\n    if ((sum\
    \ < min)); then\n      min=$sum\n    fi\n  done\n  echo $min\n}\n\ncandidate()\
    \ {\n    minSubArraySum \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate\
    \ \"2 3 4 1 2 4\") = \"1\" ]]\n    [[ $(candidate \"-1 -2 -3\") = \"-6\" ]]\n\
    \    [[ $(candidate \"-1 -2 -3 2 -10\") = \"-14\" ]]\n    [[ $(candidate \"-9999999999999999\"\
    ) = \"-9999999999999999\" ]]\n    [[ $(candidate \"0 10 20 1000000\") = \"0\"\
    \ ]]\n    [[ $(candidate \"-1 -2 -3 10 -5\") = \"-6\" ]]\n    [[ $(candidate \"\
    100 -1 -2 -3 10 -5\") = \"-6\" ]]\n    [[ $(candidate \"10 11 13 8 3 4\") = \"\
    3\" ]]\n    [[ $(candidate \"100 -33 32 -1 0 -2\") = \"-33\" ]]\n    [[ $(candidate\
    \ \"-10\") = \"-10\" ]]\n    [[ $(candidate \"7\") = \"7\" ]]\n    [[ $(candidate\
    \ \"1 -1\") = \"-1\" ]]\n}\n\nrun_test"
  status: SyntaxError
  stderr: '/tmp/tmpoj87jcxr.sh: line 12: 2 3 4 1 2 4: syntax error in expression (error
    token is "3 4 1 2 4")

    '
  stdout: ''
  timestamp: 1660004788
- exit_code: 1
  program: "#!/bin/bash\n# Given an array of integers nums, find the minimum sum of\
    \ any non-empty sub-array\n# of nums.\n# Example\n#\n# $1 is a space-separated\
    \ list\nminSubArraySum() {\n  local -a nums=(\"$@\")\n  local min_sum=0\n  local\
    \ sum=0\n  for (( i=0; i<${#nums[@]}; i++ )); do\n    sum=$(( sum + nums[i] ))\n\
    \    if (( sum < min_sum )); then\n      min_sum=$sum\n    fi\n  done\n  echo\
    \ $min_sum\n}\n\ncandidate() {\n    minSubArraySum \"$@\"\n}\n\nset -e\nrun_test()\
    \ {\n    [[ $(candidate \"2 3 4 1 2 4\") = \"1\" ]]\n    [[ $(candidate \"-1 -2\
    \ -3\") = \"-6\" ]]\n    [[ $(candidate \"-1 -2 -3 2 -10\") = \"-14\" ]]\n   \
    \ [[ $(candidate \"-9999999999999999\") = \"-9999999999999999\" ]]\n    [[ $(candidate\
    \ \"0 10 20 1000000\") = \"0\" ]]\n    [[ $(candidate \"-1 -2 -3 10 -5\") = \"\
    -6\" ]]\n    [[ $(candidate \"100 -1 -2 -3 10 -5\") = \"-6\" ]]\n    [[ $(candidate\
    \ \"10 11 13 8 3 4\") = \"3\" ]]\n    [[ $(candidate \"100 -33 32 -1 0 -2\") =\
    \ \"-33\" ]]\n    [[ $(candidate \"-10\") = \"-10\" ]]\n    [[ $(candidate \"\
    7\") = \"7\" ]]\n    [[ $(candidate \"1 -1\") = \"-1\" ]]\n}\n\nrun_test"
  status: SyntaxError
  stderr: '/tmp/tmp7kkodoup.sh: line 12: 2 3 4 1 2 4: syntax error in expression (error
    token is "3 4 1 2 4")

    '
  stdout: ''
  timestamp: 1660004788
- exit_code: 0
  program: "#!/bin/bash\n# Given an array of integers nums, find the minimum sum of\
    \ any non-empty sub-array\n# of nums.\n# Example\n#\n# $1 is a space-separated\
    \ list\nminSubArraySum() {\n  local -a nums=($1)\n  local min=${nums[0]}\n  local\
    \ sum=0\n  for ((i=0; i<${#nums[@]}; i++)); do\n    sum=$((sum + nums[i]))\n \
    \   if ((sum < min)); then\n      min=$sum\n    fi\n    if ((sum > 0)); then\n\
    \      sum=0\n    fi\n  done\n  echo $min\n}\n\ncandidate() {\n    minSubArraySum\
    \ \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"2 3 4 1 2 4\") = \"\
    1\" ]]\n    [[ $(candidate \"-1 -2 -3\") = \"-6\" ]]\n    [[ $(candidate \"-1\
    \ -2 -3 2 -10\") = \"-14\" ]]\n    [[ $(candidate \"-9999999999999999\") = \"\
    -9999999999999999\" ]]\n    [[ $(candidate \"0 10 20 1000000\") = \"0\" ]]\n \
    \   [[ $(candidate \"-1 -2 -3 10 -5\") = \"-6\" ]]\n    [[ $(candidate \"100 -1\
    \ -2 -3 10 -5\") = \"-6\" ]]\n    [[ $(candidate \"10 11 13 8 3 4\") = \"3\" ]]\n\
    \    [[ $(candidate \"100 -33 32 -1 0 -2\") = \"-33\" ]]\n    [[ $(candidate \"\
    -10\") = \"-10\" ]]\n    [[ $(candidate \"7\") = \"7\" ]]\n    [[ $(candidate\
    \ \"1 -1\") = \"-1\" ]]\n}\n\nrun_test"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660004788
- exit_code: 1
  program: "#!/bin/bash\n# Given an array of integers nums, find the minimum sum of\
    \ any non-empty sub-array\n# of nums.\n# Example\n#\n# $1 is a space-separated\
    \ list\nminSubArraySum() {\n  local -n nums=$1\n  local min_sum=${nums[0]}\n \
    \ local sum=0\n  for ((i=0; i<${#nums[@]}; i++)); do\n    sum=$((sum + nums[i]))\n\
    \    if ((sum < min_sum)); then\n      min_sum=$sum\n    fi\n    if ((sum > 0));\
    \ then\n      sum=0\n    fi\n  done\n  echo $min_sum\n}\n\ncandidate() {\n   \
    \ minSubArraySum \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"2 3 4\
    \ 1 2 4\") = \"1\" ]]\n    [[ $(candidate \"-1 -2 -3\") = \"-6\" ]]\n    [[ $(candidate\
    \ \"-1 -2 -3 2 -10\") = \"-14\" ]]\n    [[ $(candidate \"-9999999999999999\")\
    \ = \"-9999999999999999\" ]]\n    [[ $(candidate \"0 10 20 1000000\") = \"0\"\
    \ ]]\n    [[ $(candidate \"-1 -2 -3 10 -5\") = \"-6\" ]]\n    [[ $(candidate \"\
    100 -1 -2 -3 10 -5\") = \"-6\" ]]\n    [[ $(candidate \"10 11 13 8 3 4\") = \"\
    3\" ]]\n    [[ $(candidate \"100 -33 32 -1 0 -2\") = \"-33\" ]]\n    [[ $(candidate\
    \ \"-10\") = \"-10\" ]]\n    [[ $(candidate \"7\") = \"7\" ]]\n    [[ $(candidate\
    \ \"1 -1\") = \"-1\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: '/tmp/tmptb_9tita.sh: line 8: local: `2 3 4 1 2 4'': invalid variable name
    for name reference

    '
  stdout: ''
  timestamp: 1660004788
- exit_code: 1
  program: "#!/bin/bash\n# Given an array of integers nums, find the minimum sum of\
    \ any non-empty sub-array\n# of nums.\n# Example\n#\n# $1 is a space-separated\
    \ list\nminSubArraySum() {\n  local -n arr=$1\n  local min=${arr[0]}\n  local\
    \ sum=0\n  for i in \"${arr[@]}\"; do\n    sum=$((sum + i))\n    if [[ $sum -lt\
    \ $min ]]; then\n      min=$sum\n    fi\n    if [[ $sum -gt 0 ]]; then\n     \
    \ sum=0\n    fi\n  done\n  echo $min\n}\n\ncandidate() {\n    minSubArraySum \"\
    $@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"2 3 4 1 2 4\") = \"1\" ]]\n\
    \    [[ $(candidate \"-1 -2 -3\") = \"-6\" ]]\n    [[ $(candidate \"-1 -2 -3 2\
    \ -10\") = \"-14\" ]]\n    [[ $(candidate \"-9999999999999999\") = \"-9999999999999999\"\
    \ ]]\n    [[ $(candidate \"0 10 20 1000000\") = \"0\" ]]\n    [[ $(candidate \"\
    -1 -2 -3 10 -5\") = \"-6\" ]]\n    [[ $(candidate \"100 -1 -2 -3 10 -5\") = \"\
    -6\" ]]\n    [[ $(candidate \"10 11 13 8 3 4\") = \"3\" ]]\n    [[ $(candidate\
    \ \"100 -33 32 -1 0 -2\") = \"-33\" ]]\n    [[ $(candidate \"-10\") = \"-10\"\
    \ ]]\n    [[ $(candidate \"7\") = \"7\" ]]\n    [[ $(candidate \"1 -1\") = \"\
    -1\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: '/tmp/tmp4p3hv6od.sh: line 8: local: `2 3 4 1 2 4'': invalid variable name
    for name reference

    '
  stdout: ''
  timestamp: 1660004788
- exit_code: 1
  program: "#!/bin/bash\n# Given an array of integers nums, find the minimum sum of\
    \ any non-empty sub-array\n# of nums.\n# Example\n#\n# $1 is a space-separated\
    \ list\nminSubArraySum() {\n  local -n nums=$1\n  local min=${nums[0]}\n  local\
    \ sum=0\n  for n in \"${nums[@]}\"; do\n    sum=$((sum + n))\n    if [[ $sum -lt\
    \ $min ]]; then\n      min=$sum\n    fi\n    if [[ $sum -gt 0 ]]; then\n     \
    \ sum=0\n    fi\n  done\n  echo $min\n}\n\ncandidate() {\n    minSubArraySum \"\
    $@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"2 3 4 1 2 4\") = \"1\" ]]\n\
    \    [[ $(candidate \"-1 -2 -3\") = \"-6\" ]]\n    [[ $(candidate \"-1 -2 -3 2\
    \ -10\") = \"-14\" ]]\n    [[ $(candidate \"-9999999999999999\") = \"-9999999999999999\"\
    \ ]]\n    [[ $(candidate \"0 10 20 1000000\") = \"0\" ]]\n    [[ $(candidate \"\
    -1 -2 -3 10 -5\") = \"-6\" ]]\n    [[ $(candidate \"100 -1 -2 -3 10 -5\") = \"\
    -6\" ]]\n    [[ $(candidate \"10 11 13 8 3 4\") = \"3\" ]]\n    [[ $(candidate\
    \ \"100 -33 32 -1 0 -2\") = \"-33\" ]]\n    [[ $(candidate \"-10\") = \"-10\"\
    \ ]]\n    [[ $(candidate \"7\") = \"7\" ]]\n    [[ $(candidate \"1 -1\") = \"\
    -1\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: '/tmp/tmp9l5wmdk6.sh: line 8: local: `2 3 4 1 2 4'': invalid variable name
    for name reference

    '
  stdout: ''
  timestamp: 1660004788
- exit_code: 1
  program: "#!/bin/bash\n# Given an array of integers nums, find the minimum sum of\
    \ any non-empty sub-array\n# of nums.\n# Example\n#\n# $1 is a space-separated\
    \ list\nminSubArraySum() {\n    local -n _arr=$1\n    local min=${_arr[0]}\n \
    \   local sum=0\n    for i in \"${_arr[@]}\"; do\n        sum=$((sum + i))\n \
    \       if [[ $sum -lt $min ]]; then\n            min=$sum\n        fi\n     \
    \   if [[ $sum -gt 0 ]]; then\n            sum=0\n        fi\n    done\n    echo\
    \ $min\n}\n\ncandidate() {\n    minSubArraySum \"$@\"\n}\n\nset -e\nrun_test()\
    \ {\n    [[ $(candidate \"2 3 4 1 2 4\") = \"1\" ]]\n    [[ $(candidate \"-1 -2\
    \ -3\") = \"-6\" ]]\n    [[ $(candidate \"-1 -2 -3 2 -10\") = \"-14\" ]]\n   \
    \ [[ $(candidate \"-9999999999999999\") = \"-9999999999999999\" ]]\n    [[ $(candidate\
    \ \"0 10 20 1000000\") = \"0\" ]]\n    [[ $(candidate \"-1 -2 -3 10 -5\") = \"\
    -6\" ]]\n    [[ $(candidate \"100 -1 -2 -3 10 -5\") = \"-6\" ]]\n    [[ $(candidate\
    \ \"10 11 13 8 3 4\") = \"3\" ]]\n    [[ $(candidate \"100 -33 32 -1 0 -2\") =\
    \ \"-33\" ]]\n    [[ $(candidate \"-10\") = \"-10\" ]]\n    [[ $(candidate \"\
    7\") = \"7\" ]]\n    [[ $(candidate \"1 -1\") = \"-1\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: '/tmp/tmpm1uaahor.sh: line 8: local: `2 3 4 1 2 4'': invalid variable name
    for name reference

    '
  stdout: ''
  timestamp: 1660004788
- exit_code: 1
  program: "#!/bin/bash\n# Given an array of integers nums, find the minimum sum of\
    \ any non-empty sub-array\n# of nums.\n# Example\n#\n# $1 is a space-separated\
    \ list\nminSubArraySum() {\n    local nums=(\"$@\")\n    local min_sum=0\n   \
    \ local sum=0\n    for ((i=0; i<${#nums[@]}; i++)); do\n        sum=$((sum + nums[i]))\n\
    \        if ((sum < min_sum)); then\n            min_sum=$sum\n        fi\n  \
    \  done\n    echo $min_sum\n}\n\ncandidate() {\n    minSubArraySum \"$@\"\n}\n\
    \nset -e\nrun_test() {\n    [[ $(candidate \"2 3 4 1 2 4\") = \"1\" ]]\n    [[\
    \ $(candidate \"-1 -2 -3\") = \"-6\" ]]\n    [[ $(candidate \"-1 -2 -3 2 -10\"\
    ) = \"-14\" ]]\n    [[ $(candidate \"-9999999999999999\") = \"-9999999999999999\"\
    \ ]]\n    [[ $(candidate \"0 10 20 1000000\") = \"0\" ]]\n    [[ $(candidate \"\
    -1 -2 -3 10 -5\") = \"-6\" ]]\n    [[ $(candidate \"100 -1 -2 -3 10 -5\") = \"\
    -6\" ]]\n    [[ $(candidate \"10 11 13 8 3 4\") = \"3\" ]]\n    [[ $(candidate\
    \ \"100 -33 32 -1 0 -2\") = \"-33\" ]]\n    [[ $(candidate \"-10\") = \"-10\"\
    \ ]]\n    [[ $(candidate \"7\") = \"7\" ]]\n    [[ $(candidate \"1 -1\") = \"\
    -1\" ]]\n}\n\nrun_test"
  status: SyntaxError
  stderr: '/tmp/tmph2t2xro6.sh: line 12: 2 3 4 1 2 4: syntax error in expression (error
    token is "3 4 1 2 4")

    '
  stdout: ''
  timestamp: 1660004788
- exit_code: 1
  program: "#!/bin/bash\n# Given an array of integers nums, find the minimum sum of\
    \ any non-empty sub-array\n# of nums.\n# Example\n#\n# $1 is a space-separated\
    \ list\nminSubArraySum() {\n    local -n _arr=$1\n    local _min=${_arr[0]}\n\
    \    local _sum=0\n    for i in \"${_arr[@]}\"; do\n        _sum=$((_sum + i))\n\
    \        if [[ $_sum -lt $_min ]]; then\n            _min=$_sum\n        fi\n\
    \        if [[ $_sum -gt 0 ]]; then\n            _sum=0\n        fi\n    done\n\
    \    echo $_min\n}\n\ncandidate() {\n    minSubArraySum \"$@\"\n}\n\nset -e\n\
    run_test() {\n    [[ $(candidate \"2 3 4 1 2 4\") = \"1\" ]]\n    [[ $(candidate\
    \ \"-1 -2 -3\") = \"-6\" ]]\n    [[ $(candidate \"-1 -2 -3 2 -10\") = \"-14\"\
    \ ]]\n    [[ $(candidate \"-9999999999999999\") = \"-9999999999999999\" ]]\n \
    \   [[ $(candidate \"0 10 20 1000000\") = \"0\" ]]\n    [[ $(candidate \"-1 -2\
    \ -3 10 -5\") = \"-6\" ]]\n    [[ $(candidate \"100 -1 -2 -3 10 -5\") = \"-6\"\
    \ ]]\n    [[ $(candidate \"10 11 13 8 3 4\") = \"3\" ]]\n    [[ $(candidate \"\
    100 -33 32 -1 0 -2\") = \"-33\" ]]\n    [[ $(candidate \"-10\") = \"-10\" ]]\n\
    \    [[ $(candidate \"7\") = \"7\" ]]\n    [[ $(candidate \"1 -1\") = \"-1\" ]]\n\
    }\n\nrun_test"
  status: Exception
  stderr: '/tmp/tmp0ju0dnxt.sh: line 8: local: `2 3 4 1 2 4'': invalid variable name
    for name reference

    '
  stdout: ''
  timestamp: 1660004788
- exit_code: 1
  program: "#!/bin/bash\n# Given an array of integers nums, find the minimum sum of\
    \ any non-empty sub-array\n# of nums.\n# Example\n#\n# $1 is a space-separated\
    \ list\nminSubArraySum() {\n    local -a nums=(\"$@\")\n    local min=${nums[0]}\n\
    \    local sum=0\n    for num in \"${nums[@]}\"; do\n        sum=$((sum + num))\n\
    \        if [[ sum -lt min ]]; then\n            min=$sum\n        fi\n      \
    \  if [[ sum -gt 0 ]]; then\n            sum=0\n        fi\n    done\n    echo\
    \ $min\n}\n\ncandidate() {\n    minSubArraySum \"$@\"\n}\n\nset -e\nrun_test()\
    \ {\n    [[ $(candidate \"2 3 4 1 2 4\") = \"1\" ]]\n    [[ $(candidate \"-1 -2\
    \ -3\") = \"-6\" ]]\n    [[ $(candidate \"-1 -2 -3 2 -10\") = \"-14\" ]]\n   \
    \ [[ $(candidate \"-9999999999999999\") = \"-9999999999999999\" ]]\n    [[ $(candidate\
    \ \"0 10 20 1000000\") = \"0\" ]]\n    [[ $(candidate \"-1 -2 -3 10 -5\") = \"\
    -6\" ]]\n    [[ $(candidate \"100 -1 -2 -3 10 -5\") = \"-6\" ]]\n    [[ $(candidate\
    \ \"10 11 13 8 3 4\") = \"3\" ]]\n    [[ $(candidate \"100 -33 32 -1 0 -2\") =\
    \ \"-33\" ]]\n    [[ $(candidate \"-10\") = \"-10\" ]]\n    [[ $(candidate \"\
    7\") = \"7\" ]]\n    [[ $(candidate \"1 -1\") = \"-1\" ]]\n}\n\nrun_test"
  status: SyntaxError
  stderr: '/tmp/tmpqktp7_1d.sh: line 12: 2 3 4 1 2 4: syntax error in expression (error
    token is "3 4 1 2 4")

    '
  stdout: ''
  timestamp: 1660004788
- exit_code: 0
  program: "#!/bin/bash\n# Given an array of integers nums, find the minimum sum of\
    \ any non-empty sub-array\n# of nums.\n# Example\n#\n# $1 is a space-separated\
    \ list\nminSubArraySum() {\n  local -a nums\n  IFS=' ' read -r -a nums <<< \"\
    $1\"\n  local min_sum=${nums[0]}\n  local sum=0\n  for i in \"${nums[@]}\"; do\n\
    \    sum=$((sum + i))\n    if [[ $sum -lt $min_sum ]]; then\n      min_sum=$sum\n\
    \    fi\n    if [[ $sum -gt 0 ]]; then\n      sum=0\n    fi\n  done\n  echo $min_sum\n\
    }\n\ncandidate() {\n    minSubArraySum \"$@\"\n}\n\nset -e\nrun_test() {\n   \
    \ [[ $(candidate \"2 3 4 1 2 4\") = \"1\" ]]\n    [[ $(candidate \"-1 -2 -3\"\
    ) = \"-6\" ]]\n    [[ $(candidate \"-1 -2 -3 2 -10\") = \"-14\" ]]\n    [[ $(candidate\
    \ \"-9999999999999999\") = \"-9999999999999999\" ]]\n    [[ $(candidate \"0 10\
    \ 20 1000000\") = \"0\" ]]\n    [[ $(candidate \"-1 -2 -3 10 -5\") = \"-6\" ]]\n\
    \    [[ $(candidate \"100 -1 -2 -3 10 -5\") = \"-6\" ]]\n    [[ $(candidate \"\
    10 11 13 8 3 4\") = \"3\" ]]\n    [[ $(candidate \"100 -33 32 -1 0 -2\") = \"\
    -33\" ]]\n    [[ $(candidate \"-10\") = \"-10\" ]]\n    [[ $(candidate \"7\")\
    \ = \"7\" ]]\n    [[ $(candidate \"1 -1\") = \"-1\" ]]\n}\n\nrun_test"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660004788
- exit_code: 1
  program: "#!/bin/bash\n# Given an array of integers nums, find the minimum sum of\
    \ any non-empty sub-array\n# of nums.\n# Example\n#\n# $1 is a space-separated\
    \ list\nminSubArraySum() {\n    local -a nums=(\"$@\")\n    local min=0\n    local\
    \ sum=0\n    for ((i=0; i<${#nums[@]}; i++)); do\n        sum+=${nums[$i]}\n \
    \       if ((sum < min)); then\n            min=$sum\n        fi\n    done\n \
    \   echo $min\n}\n\ncandidate() {\n    minSubArraySum \"$@\"\n}\n\nset -e\nrun_test()\
    \ {\n    [[ $(candidate \"2 3 4 1 2 4\") = \"1\" ]]\n    [[ $(candidate \"-1 -2\
    \ -3\") = \"-6\" ]]\n    [[ $(candidate \"-1 -2 -3 2 -10\") = \"-14\" ]]\n   \
    \ [[ $(candidate \"-9999999999999999\") = \"-9999999999999999\" ]]\n    [[ $(candidate\
    \ \"0 10 20 1000000\") = \"0\" ]]\n    [[ $(candidate \"-1 -2 -3 10 -5\") = \"\
    -6\" ]]\n    [[ $(candidate \"100 -1 -2 -3 10 -5\") = \"-6\" ]]\n    [[ $(candidate\
    \ \"10 11 13 8 3 4\") = \"3\" ]]\n    [[ $(candidate \"100 -33 32 -1 0 -2\") =\
    \ \"-33\" ]]\n    [[ $(candidate \"-10\") = \"-10\" ]]\n    [[ $(candidate \"\
    7\") = \"7\" ]]\n    [[ $(candidate \"1 -1\") = \"-1\" ]]\n}\n\nrun_test"
  status: SyntaxError
  stderr: '/tmp/tmpqna5aiz_.sh: line 13: ((: 02 3 4 1 2 4: syntax error in expression
    (error token is "3 4 1 2 4")

    '
  stdout: ''
  timestamp: 1660004788
- exit_code: 1
  program: "#!/bin/bash\n# Given an array of integers nums, find the minimum sum of\
    \ any non-empty sub-array\n# of nums.\n# Example\n#\n# $1 is a space-separated\
    \ list\nminSubArraySum() {\n    local -a nums=(\"$@\")\n    local min=0\n    local\
    \ sum=0\n    for i in \"${nums[@]}\"; do\n        sum=$((sum + i))\n        if\
    \ [[ $sum -lt $min ]]; then\n            min=$sum\n        fi\n    done\n    echo\
    \ $min\n}\n\ncandidate() {\n    minSubArraySum \"$@\"\n}\n\nset -e\nrun_test()\
    \ {\n    [[ $(candidate \"2 3 4 1 2 4\") = \"1\" ]]\n    [[ $(candidate \"-1 -2\
    \ -3\") = \"-6\" ]]\n    [[ $(candidate \"-1 -2 -3 2 -10\") = \"-14\" ]]\n   \
    \ [[ $(candidate \"-9999999999999999\") = \"-9999999999999999\" ]]\n    [[ $(candidate\
    \ \"0 10 20 1000000\") = \"0\" ]]\n    [[ $(candidate \"-1 -2 -3 10 -5\") = \"\
    -6\" ]]\n    [[ $(candidate \"100 -1 -2 -3 10 -5\") = \"-6\" ]]\n    [[ $(candidate\
    \ \"10 11 13 8 3 4\") = \"3\" ]]\n    [[ $(candidate \"100 -33 32 -1 0 -2\") =\
    \ \"-33\" ]]\n    [[ $(candidate \"-10\") = \"-10\" ]]\n    [[ $(candidate \"\
    7\") = \"7\" ]]\n    [[ $(candidate \"1 -1\") = \"-1\" ]]\n}\n\nrun_test"
  status: SyntaxError
  stderr: '/tmp/tmpfwac90i0.sh: line 12: 2 3 4 1 2 4: syntax error in expression (error
    token is "3 4 1 2 4")

    '
  stdout: ''
  timestamp: 1660004788
- exit_code: 1
  program: "#!/bin/bash\n# Given an array of integers nums, find the minimum sum of\
    \ any non-empty sub-array\n# of nums.\n# Example\n#\n# $1 is a space-separated\
    \ list\nminSubArraySum() {\n  local -a nums=(\"$@\")\n  local min=0\n  local sum=0\n\
    \  for ((i=0; i<${#nums[@]}; i++)); do\n    sum=$((sum + nums[i]))\n    if ((sum\
    \ < min)); then\n      min=$sum\n    fi\n  done\n  echo $min\n}\n\ncandidate()\
    \ {\n    minSubArraySum \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate\
    \ \"2 3 4 1 2 4\") = \"1\" ]]\n    [[ $(candidate \"-1 -2 -3\") = \"-6\" ]]\n\
    \    [[ $(candidate \"-1 -2 -3 2 -10\") = \"-14\" ]]\n    [[ $(candidate \"-9999999999999999\"\
    ) = \"-9999999999999999\" ]]\n    [[ $(candidate \"0 10 20 1000000\") = \"0\"\
    \ ]]\n    [[ $(candidate \"-1 -2 -3 10 -5\") = \"-6\" ]]\n    [[ $(candidate \"\
    100 -1 -2 -3 10 -5\") = \"-6\" ]]\n    [[ $(candidate \"10 11 13 8 3 4\") = \"\
    3\" ]]\n    [[ $(candidate \"100 -33 32 -1 0 -2\") = \"-33\" ]]\n    [[ $(candidate\
    \ \"-10\") = \"-10\" ]]\n    [[ $(candidate \"7\") = \"7\" ]]\n    [[ $(candidate\
    \ \"1 -1\") = \"-1\" ]]\n}\n\nrun_test"
  status: SyntaxError
  stderr: '/tmp/tmpoj87jcxr.sh: line 12: 2 3 4 1 2 4: syntax error in expression (error
    token is "3 4 1 2 4")

    '
  stdout: ''
  timestamp: 1660004788
- exit_code: 0
  program: "#!/bin/bash\n# Given an array of integers nums, find the minimum sum of\
    \ any non-empty sub-array\n# of nums.\n# Example\n#\n# $1 is a space-separated\
    \ list\nminSubArraySum() {\n    local -a nums\n    IFS=' ' read -r -a nums <<<\
    \ \"$1\"\n    local min=${nums[0]}\n    local sum=0\n    for num in \"${nums[@]}\"\
    ; do\n        sum=$((sum + num))\n        if [[ $sum -lt $min ]]; then\n     \
    \       min=$sum\n        fi\n        if [[ $sum -gt 0 ]]; then\n            sum=0\n\
    \        fi\n    done\n    echo $min\n}\n\ncandidate() {\n    minSubArraySum \"\
    $@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"2 3 4 1 2 4\") = \"1\" ]]\n\
    \    [[ $(candidate \"-1 -2 -3\") = \"-6\" ]]\n    [[ $(candidate \"-1 -2 -3 2\
    \ -10\") = \"-14\" ]]\n    [[ $(candidate \"-9999999999999999\") = \"-9999999999999999\"\
    \ ]]\n    [[ $(candidate \"0 10 20 1000000\") = \"0\" ]]\n    [[ $(candidate \"\
    -1 -2 -3 10 -5\") = \"-6\" ]]\n    [[ $(candidate \"100 -1 -2 -3 10 -5\") = \"\
    -6\" ]]\n    [[ $(candidate \"10 11 13 8 3 4\") = \"3\" ]]\n    [[ $(candidate\
    \ \"100 -33 32 -1 0 -2\") = \"-33\" ]]\n    [[ $(candidate \"-10\") = \"-10\"\
    \ ]]\n    [[ $(candidate \"7\") = \"7\" ]]\n    [[ $(candidate \"1 -1\") = \"\
    -1\" ]]\n}\n\nrun_test"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660004788
- exit_code: 1
  program: "#!/bin/bash\n# Given an array of integers nums, find the minimum sum of\
    \ any non-empty sub-array\n# of nums.\n# Example\n#\n# $1 is a space-separated\
    \ list\nminSubArraySum() {\n  local -n _nums=$1\n  local min_sum=${_nums[0]}\n\
    \  local sum=0\n  for ((i=0; i<${#_nums[@]}; i++)); do\n    sum=$((sum + ${_nums[i]}))\n\
    \    if ((sum < min_sum)); then\n      min_sum=$sum\n    fi\n    if ((sum > 0));\
    \ then\n      sum=0\n    fi\n  done\n  echo $min_sum\n}\n\ncandidate() {\n   \
    \ minSubArraySum \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"2 3 4\
    \ 1 2 4\") = \"1\" ]]\n    [[ $(candidate \"-1 -2 -3\") = \"-6\" ]]\n    [[ $(candidate\
    \ \"-1 -2 -3 2 -10\") = \"-14\" ]]\n    [[ $(candidate \"-9999999999999999\")\
    \ = \"-9999999999999999\" ]]\n    [[ $(candidate \"0 10 20 1000000\") = \"0\"\
    \ ]]\n    [[ $(candidate \"-1 -2 -3 10 -5\") = \"-6\" ]]\n    [[ $(candidate \"\
    100 -1 -2 -3 10 -5\") = \"-6\" ]]\n    [[ $(candidate \"10 11 13 8 3 4\") = \"\
    3\" ]]\n    [[ $(candidate \"100 -33 32 -1 0 -2\") = \"-33\" ]]\n    [[ $(candidate\
    \ \"-10\") = \"-10\" ]]\n    [[ $(candidate \"7\") = \"7\" ]]\n    [[ $(candidate\
    \ \"1 -1\") = \"-1\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: '/tmp/tmptj8pxcfs.sh: line 8: local: `2 3 4 1 2 4'': invalid variable name
    for name reference

    '
  stdout: ''
  timestamp: 1660004788
- exit_code: 1
  program: "#!/bin/bash\n# Given an array of integers nums, find the minimum sum of\
    \ any non-empty sub-array\n# of nums.\n# Example\n#\n# $1 is a space-separated\
    \ list\nminSubArraySum() {\n    local -n nums=$1\n    local min_sum=${nums[0]}\n\
    \    local curr_sum=0\n    for num in \"${nums[@]}\"; do\n        curr_sum=$((curr_sum\
    \ + num))\n        if [[ $curr_sum -lt $min_sum ]]; then\n            min_sum=$curr_sum\n\
    \        fi\n        if [[ $curr_sum -gt 0 ]]; then\n            curr_sum=0\n\
    \        fi\n    done\n    echo $min_sum\n}\n\ncandidate() {\n    minSubArraySum\
    \ \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"2 3 4 1 2 4\") = \"\
    1\" ]]\n    [[ $(candidate \"-1 -2 -3\") = \"-6\" ]]\n    [[ $(candidate \"-1\
    \ -2 -3 2 -10\") = \"-14\" ]]\n    [[ $(candidate \"-9999999999999999\") = \"\
    -9999999999999999\" ]]\n    [[ $(candidate \"0 10 20 1000000\") = \"0\" ]]\n \
    \   [[ $(candidate \"-1 -2 -3 10 -5\") = \"-6\" ]]\n    [[ $(candidate \"100 -1\
    \ -2 -3 10 -5\") = \"-6\" ]]\n    [[ $(candidate \"10 11 13 8 3 4\") = \"3\" ]]\n\
    \    [[ $(candidate \"100 -33 32 -1 0 -2\") = \"-33\" ]]\n    [[ $(candidate \"\
    -10\") = \"-10\" ]]\n    [[ $(candidate \"7\") = \"7\" ]]\n    [[ $(candidate\
    \ \"1 -1\") = \"-1\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: '/tmp/tmpz3cxmitj.sh: line 8: local: `2 3 4 1 2 4'': invalid variable name
    for name reference

    '
  stdout: ''
  timestamp: 1660004788
- exit_code: 1
  program: "#!/bin/bash\n# Given an array of integers nums, find the minimum sum of\
    \ any non-empty sub-array\n# of nums.\n# Example\n#\n# $1 is a space-separated\
    \ list\nminSubArraySum() {\n    local -a nums=(\"$@\")\n    local min=0\n    local\
    \ sum=0\n    for ((i=0; i<${#nums[@]}; i++)); do\n        sum=$((sum + nums[i]))\n\
    \        if ((sum < min)); then\n            min=$sum\n        fi\n    done\n\
    \    echo $min\n}\n\ncandidate() {\n    minSubArraySum \"$@\"\n}\n\nset -e\nrun_test()\
    \ {\n    [[ $(candidate \"2 3 4 1 2 4\") = \"1\" ]]\n    [[ $(candidate \"-1 -2\
    \ -3\") = \"-6\" ]]\n    [[ $(candidate \"-1 -2 -3 2 -10\") = \"-14\" ]]\n   \
    \ [[ $(candidate \"-9999999999999999\") = \"-9999999999999999\" ]]\n    [[ $(candidate\
    \ \"0 10 20 1000000\") = \"0\" ]]\n    [[ $(candidate \"-1 -2 -3 10 -5\") = \"\
    -6\" ]]\n    [[ $(candidate \"100 -1 -2 -3 10 -5\") = \"-6\" ]]\n    [[ $(candidate\
    \ \"10 11 13 8 3 4\") = \"3\" ]]\n    [[ $(candidate \"100 -33 32 -1 0 -2\") =\
    \ \"-33\" ]]\n    [[ $(candidate \"-10\") = \"-10\" ]]\n    [[ $(candidate \"\
    7\") = \"7\" ]]\n    [[ $(candidate \"1 -1\") = \"-1\" ]]\n}\n\nrun_test"
  status: SyntaxError
  stderr: '/tmp/tmpg_2ssoe2.sh: line 12: 2 3 4 1 2 4: syntax error in expression (error
    token is "3 4 1 2 4")

    '
  stdout: ''
  timestamp: 1660004788

language: sh
name: HumanEval_63_fibfib
results:
- exit_code: 0
  program: "#!/bin/bash\n# The FibFib number sequence is a sequence similar to the\
    \ Fibbonacci sequnece that's defined as follows:\n# fibfib(0) == 0\n# fibfib(1)\
    \ == 0\n# fibfib(2) == 1\n# fibfib(n) == fibfib(n-1) + fibfib(n-2) + fibfib(n-3).\n\
    # Please write a function to efficiently compute the n-th element of the fibfib\
    \ number sequence.\n#\n# $1 is an integer\nfibfib() {\n    if [ $1 -eq 0 ]; then\n\
    \        echo 0\n    elif [ $1 -eq 1 ]; then\n        echo 0\n    elif [ $1 -eq\
    \ 2 ]; then\n        echo 1\n    else\n        echo $(( $(fibfib $(( $1 - 1 )))\
    \ + $(fibfib $(( $1 - 2 ))) + $(fibfib $(( $1 - 3 ))) ))\n    fi\n}\n\ncandidate()\
    \ {\n    fibfib \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"2\") =\
    \ \"1\" ]]\n    [[ $(candidate \"1\") = \"0\" ]]\n    [[ $(candidate \"5\") =\
    \ \"4\" ]]\n    [[ $(candidate \"8\") = \"24\" ]]\n    [[ $(candidate \"10\")\
    \ = \"81\" ]]\n    [[ $(candidate \"12\") = \"274\" ]]\n    [[ $(candidate \"\
    14\") = \"927\" ]]\n}\n\nrun_test"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660001140
- exit_code: 0
  program: "#!/bin/bash\n# The FibFib number sequence is a sequence similar to the\
    \ Fibbonacci sequnece that's defined as follows:\n# fibfib(0) == 0\n# fibfib(1)\
    \ == 0\n# fibfib(2) == 1\n# fibfib(n) == fibfib(n-1) + fibfib(n-2) + fibfib(n-3).\n\
    # Please write a function to efficiently compute the n-th element of the fibfib\
    \ number sequence.\n#\n# $1 is an integer\nfibfib() {\n    local n=$1\n    local\
    \ a=0\n    local b=0\n    local c=1\n    local d\n    while [ $n -gt 0 ]; do\n\
    \        d=$((a+b+c))\n        a=$b\n        b=$c\n        c=$d\n        n=$((n-1))\n\
    \    done\n    echo $a\n}\n\ncandidate() {\n    fibfib \"$@\"\n}\n\nset -e\nrun_test()\
    \ {\n    [[ $(candidate \"2\") = \"1\" ]]\n    [[ $(candidate \"1\") = \"0\" ]]\n\
    \    [[ $(candidate \"5\") = \"4\" ]]\n    [[ $(candidate \"8\") = \"24\" ]]\n\
    \    [[ $(candidate \"10\") = \"81\" ]]\n    [[ $(candidate \"12\") = \"274\"\
    \ ]]\n    [[ $(candidate \"14\") = \"927\" ]]\n}\n\nrun_test"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660001136
- exit_code: 0
  program: "#!/bin/bash\n# The FibFib number sequence is a sequence similar to the\
    \ Fibbonacci sequnece that's defined as follows:\n# fibfib(0) == 0\n# fibfib(1)\
    \ == 0\n# fibfib(2) == 1\n# fibfib(n) == fibfib(n-1) + fibfib(n-2) + fibfib(n-3).\n\
    # Please write a function to efficiently compute the n-th element of the fibfib\
    \ number sequence.\n#\n# $1 is an integer\nfibfib() {\n  if [ $1 -eq 0 ]; then\n\
    \    echo 0\n  elif [ $1 -eq 1 ]; then\n    echo 0\n  elif [ $1 -eq 2 ]; then\n\
    \    echo 1\n  else\n    echo $(( $(fibfib $(( $1 - 1 ))) + $(fibfib $(( $1 -\
    \ 2 ))) + $(fibfib $(( $1 - 3 ))) ))\n  fi\n}\n\ncandidate() {\n    fibfib \"\
    $@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"2\") = \"1\" ]]\n    [[\
    \ $(candidate \"1\") = \"0\" ]]\n    [[ $(candidate \"5\") = \"4\" ]]\n    [[\
    \ $(candidate \"8\") = \"24\" ]]\n    [[ $(candidate \"10\") = \"81\" ]]\n   \
    \ [[ $(candidate \"12\") = \"274\" ]]\n    [[ $(candidate \"14\") = \"927\" ]]\n\
    }\n\nrun_test"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660001140
- exit_code: 0
  program: "#!/bin/bash\n# The FibFib number sequence is a sequence similar to the\
    \ Fibbonacci sequnece that's defined as follows:\n# fibfib(0) == 0\n# fibfib(1)\
    \ == 0\n# fibfib(2) == 1\n# fibfib(n) == fibfib(n-1) + fibfib(n-2) + fibfib(n-3).\n\
    # Please write a function to efficiently compute the n-th element of the fibfib\
    \ number sequence.\n#\n# $1 is an integer\nfibfib() {\n    if [ $1 -eq 0 ]; then\n\
    \        echo 0\n    elif [ $1 -eq 1 ]; then\n        echo 0\n    elif [ $1 -eq\
    \ 2 ]; then\n        echo 1\n    else\n        echo $(($(fibfib $(($1-1))) + $(fibfib\
    \ $(($1-2))) + $(fibfib $(($1-3)))))\n    fi\n}\n\ncandidate() {\n    fibfib \"\
    $@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"2\") = \"1\" ]]\n    [[\
    \ $(candidate \"1\") = \"0\" ]]\n    [[ $(candidate \"5\") = \"4\" ]]\n    [[\
    \ $(candidate \"8\") = \"24\" ]]\n    [[ $(candidate \"10\") = \"81\" ]]\n   \
    \ [[ $(candidate \"12\") = \"274\" ]]\n    [[ $(candidate \"14\") = \"927\" ]]\n\
    }\n\nrun_test"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660001140
- exit_code: 0
  program: "#!/bin/bash\n# The FibFib number sequence is a sequence similar to the\
    \ Fibbonacci sequnece that's defined as follows:\n# fibfib(0) == 0\n# fibfib(1)\
    \ == 0\n# fibfib(2) == 1\n# fibfib(n) == fibfib(n-1) + fibfib(n-2) + fibfib(n-3).\n\
    # Please write a function to efficiently compute the n-th element of the fibfib\
    \ number sequence.\n#\n# $1 is an integer\nfibfib() {\n    if [[ $1 -eq 0 ]];\
    \ then\n        echo 0\n    elif [[ $1 -eq 1 ]]; then\n        echo 0\n    elif\
    \ [[ $1 -eq 2 ]]; then\n        echo 1\n    else\n        echo $(( $(fibfib $((\
    \ $1 - 1 ))) + $(fibfib $(( $1 - 2 ))) + $(fibfib $(( $1 - 3 ))) ))\n    fi\n\
    }\n\ncandidate() {\n    fibfib \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate\
    \ \"2\") = \"1\" ]]\n    [[ $(candidate \"1\") = \"0\" ]]\n    [[ $(candidate\
    \ \"5\") = \"4\" ]]\n    [[ $(candidate \"8\") = \"24\" ]]\n    [[ $(candidate\
    \ \"10\") = \"81\" ]]\n    [[ $(candidate \"12\") = \"274\" ]]\n    [[ $(candidate\
    \ \"14\") = \"927\" ]]\n}\n\nrun_test"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660001140
- exit_code: 0
  program: "#!/bin/bash\n# The FibFib number sequence is a sequence similar to the\
    \ Fibbonacci sequnece that's defined as follows:\n# fibfib(0) == 0\n# fibfib(1)\
    \ == 0\n# fibfib(2) == 1\n# fibfib(n) == fibfib(n-1) + fibfib(n-2) + fibfib(n-3).\n\
    # Please write a function to efficiently compute the n-th element of the fibfib\
    \ number sequence.\n#\n# $1 is an integer\nfibfib() {\n    if [ $1 -eq 0 ]; then\n\
    \        echo 0\n    elif [ $1 -eq 1 ]; then\n        echo 0\n    elif [ $1 -eq\
    \ 2 ]; then\n        echo 1\n    else\n        echo $(($(fibfib $(($1-1))) + $(fibfib\
    \ $(($1-2))) + $(fibfib $(($1-3)))))\n    fi\n}\n\ncandidate() {\n    fibfib \"\
    $@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"2\") = \"1\" ]]\n    [[\
    \ $(candidate \"1\") = \"0\" ]]\n    [[ $(candidate \"5\") = \"4\" ]]\n    [[\
    \ $(candidate \"8\") = \"24\" ]]\n    [[ $(candidate \"10\") = \"81\" ]]\n   \
    \ [[ $(candidate \"12\") = \"274\" ]]\n    [[ $(candidate \"14\") = \"927\" ]]\n\
    }\n\nrun_test"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660001140
- exit_code: 0
  program: "#!/bin/bash\n# The FibFib number sequence is a sequence similar to the\
    \ Fibbonacci sequnece that's defined as follows:\n# fibfib(0) == 0\n# fibfib(1)\
    \ == 0\n# fibfib(2) == 1\n# fibfib(n) == fibfib(n-1) + fibfib(n-2) + fibfib(n-3).\n\
    # Please write a function to efficiently compute the n-th element of the fibfib\
    \ number sequence.\n#\n# $1 is an integer\nfibfib() {\n    if [ $1 -eq 0 ]; then\n\
    \        echo 0\n    elif [ $1 -eq 1 ]; then\n        echo 0\n    elif [ $1 -eq\
    \ 2 ]; then\n        echo 1\n    else\n        echo $(($(fibfib $(($1-1))) + $(fibfib\
    \ $(($1-2))) + $(fibfib $(($1-3)))))\n    fi\n}\n\ncandidate() {\n    fibfib \"\
    $@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"2\") = \"1\" ]]\n    [[\
    \ $(candidate \"1\") = \"0\" ]]\n    [[ $(candidate \"5\") = \"4\" ]]\n    [[\
    \ $(candidate \"8\") = \"24\" ]]\n    [[ $(candidate \"10\") = \"81\" ]]\n   \
    \ [[ $(candidate \"12\") = \"274\" ]]\n    [[ $(candidate \"14\") = \"927\" ]]\n\
    }\n\nrun_test"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660001140
- exit_code: 0
  program: "#!/bin/bash\n# The FibFib number sequence is a sequence similar to the\
    \ Fibbonacci sequnece that's defined as follows:\n# fibfib(0) == 0\n# fibfib(1)\
    \ == 0\n# fibfib(2) == 1\n# fibfib(n) == fibfib(n-1) + fibfib(n-2) + fibfib(n-3).\n\
    # Please write a function to efficiently compute the n-th element of the fibfib\
    \ number sequence.\n#\n# $1 is an integer\nfibfib() {\n  if [ $1 -eq 0 ]; then\n\
    \    echo 0\n  elif [ $1 -eq 1 ]; then\n    echo 0\n  elif [ $1 -eq 2 ]; then\n\
    \    echo 1\n  else\n    echo $(( $(fibfib $(( $1 - 1 ))) + $(fibfib $(( $1 -\
    \ 2 ))) + $(fibfib $(( $1 - 3 ))) ))\n  fi\n}\n\ncandidate() {\n    fibfib \"\
    $@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"2\") = \"1\" ]]\n    [[\
    \ $(candidate \"1\") = \"0\" ]]\n    [[ $(candidate \"5\") = \"4\" ]]\n    [[\
    \ $(candidate \"8\") = \"24\" ]]\n    [[ $(candidate \"10\") = \"81\" ]]\n   \
    \ [[ $(candidate \"12\") = \"274\" ]]\n    [[ $(candidate \"14\") = \"927\" ]]\n\
    }\n\nrun_test"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660001140
- exit_code: 0
  program: "#!/bin/bash\n# The FibFib number sequence is a sequence similar to the\
    \ Fibbonacci sequnece that's defined as follows:\n# fibfib(0) == 0\n# fibfib(1)\
    \ == 0\n# fibfib(2) == 1\n# fibfib(n) == fibfib(n-1) + fibfib(n-2) + fibfib(n-3).\n\
    # Please write a function to efficiently compute the n-th element of the fibfib\
    \ number sequence.\n#\n# $1 is an integer\nfibfib() {\n    if [ $1 -eq 0 ]; then\n\
    \        echo 0\n    elif [ $1 -eq 1 ]; then\n        echo 0\n    elif [ $1 -eq\
    \ 2 ]; then\n        echo 1\n    else\n        echo $(( $(fibfib $(( $1 - 1 )))\
    \ + $(fibfib $(( $1 - 2 ))) + $(fibfib $(( $1 - 3 ))) ))\n    fi\n}\n\ncandidate()\
    \ {\n    fibfib \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"2\") =\
    \ \"1\" ]]\n    [[ $(candidate \"1\") = \"0\" ]]\n    [[ $(candidate \"5\") =\
    \ \"4\" ]]\n    [[ $(candidate \"8\") = \"24\" ]]\n    [[ $(candidate \"10\")\
    \ = \"81\" ]]\n    [[ $(candidate \"12\") = \"274\" ]]\n    [[ $(candidate \"\
    14\") = \"927\" ]]\n}\n\nrun_test"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660001140
- exit_code: 0
  program: "#!/bin/bash\n# The FibFib number sequence is a sequence similar to the\
    \ Fibbonacci sequnece that's defined as follows:\n# fibfib(0) == 0\n# fibfib(1)\
    \ == 0\n# fibfib(2) == 1\n# fibfib(n) == fibfib(n-1) + fibfib(n-2) + fibfib(n-3).\n\
    # Please write a function to efficiently compute the n-th element of the fibfib\
    \ number sequence.\n#\n# $1 is an integer\nfibfib() {\n    if [[ $1 -eq 0 ]];\
    \ then\n        echo 0\n    elif [[ $1 -eq 1 ]]; then\n        echo 0\n    elif\
    \ [[ $1 -eq 2 ]]; then\n        echo 1\n    else\n        echo $(( $(fibfib $((\
    \ $1 - 1 ))) + $(fibfib $(( $1 - 2 ))) + $(fibfib $(( $1 - 3 ))) ))\n    fi\n\
    }\n\ncandidate() {\n    fibfib \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate\
    \ \"2\") = \"1\" ]]\n    [[ $(candidate \"1\") = \"0\" ]]\n    [[ $(candidate\
    \ \"5\") = \"4\" ]]\n    [[ $(candidate \"8\") = \"24\" ]]\n    [[ $(candidate\
    \ \"10\") = \"81\" ]]\n    [[ $(candidate \"12\") = \"274\" ]]\n    [[ $(candidate\
    \ \"14\") = \"927\" ]]\n}\n\nrun_test"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660001140
- exit_code: 0
  program: "#!/bin/bash\n# The FibFib number sequence is a sequence similar to the\
    \ Fibbonacci sequnece that's defined as follows:\n# fibfib(0) == 0\n# fibfib(1)\
    \ == 0\n# fibfib(2) == 1\n# fibfib(n) == fibfib(n-1) + fibfib(n-2) + fibfib(n-3).\n\
    # Please write a function to efficiently compute the n-th element of the fibfib\
    \ number sequence.\n#\n# $1 is an integer\nfibfib() {\n  if [ $1 -eq 0 ]; then\n\
    \    echo 0\n  elif [ $1 -eq 1 ]; then\n    echo 0\n  elif [ $1 -eq 2 ]; then\n\
    \    echo 1\n  else\n    echo $(($(fibfib $(($1-1))) + $(fibfib $(($1-2))) + $(fibfib\
    \ $(($1-3)))))\n  fi\n}\n\ncandidate() {\n    fibfib \"$@\"\n}\n\nset -e\nrun_test()\
    \ {\n    [[ $(candidate \"2\") = \"1\" ]]\n    [[ $(candidate \"1\") = \"0\" ]]\n\
    \    [[ $(candidate \"5\") = \"4\" ]]\n    [[ $(candidate \"8\") = \"24\" ]]\n\
    \    [[ $(candidate \"10\") = \"81\" ]]\n    [[ $(candidate \"12\") = \"274\"\
    \ ]]\n    [[ $(candidate \"14\") = \"927\" ]]\n}\n\nrun_test"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660001140
- exit_code: 0
  program: "#!/bin/bash\n# The FibFib number sequence is a sequence similar to the\
    \ Fibbonacci sequnece that's defined as follows:\n# fibfib(0) == 0\n# fibfib(1)\
    \ == 0\n# fibfib(2) == 1\n# fibfib(n) == fibfib(n-1) + fibfib(n-2) + fibfib(n-3).\n\
    # Please write a function to efficiently compute the n-th element of the fibfib\
    \ number sequence.\n#\n# $1 is an integer\nfibfib() {\n    if [ $1 -eq 0 ]; then\n\
    \        echo 0\n    elif [ $1 -eq 1 ]; then\n        echo 0\n    elif [ $1 -eq\
    \ 2 ]; then\n        echo 1\n    else\n        echo $(($(fibfib $(($1-1))) + $(fibfib\
    \ $(($1-2))) + $(fibfib $(($1-3)))))\n    fi\n}\n\ncandidate() {\n    fibfib \"\
    $@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"2\") = \"1\" ]]\n    [[\
    \ $(candidate \"1\") = \"0\" ]]\n    [[ $(candidate \"5\") = \"4\" ]]\n    [[\
    \ $(candidate \"8\") = \"24\" ]]\n    [[ $(candidate \"10\") = \"81\" ]]\n   \
    \ [[ $(candidate \"12\") = \"274\" ]]\n    [[ $(candidate \"14\") = \"927\" ]]\n\
    }\n\nrun_test"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660001140
- exit_code: 0
  program: "#!/bin/bash\n# The FibFib number sequence is a sequence similar to the\
    \ Fibbonacci sequnece that's defined as follows:\n# fibfib(0) == 0\n# fibfib(1)\
    \ == 0\n# fibfib(2) == 1\n# fibfib(n) == fibfib(n-1) + fibfib(n-2) + fibfib(n-3).\n\
    # Please write a function to efficiently compute the n-th element of the fibfib\
    \ number sequence.\n#\n# $1 is an integer\nfibfib() {\n    if [ $1 -eq 0 ]; then\n\
    \        echo 0\n    elif [ $1 -eq 1 ]; then\n        echo 0\n    elif [ $1 -eq\
    \ 2 ]; then\n        echo 1\n    else\n        echo $(( $(fibfib $(( $1 - 1 )))\
    \ + $(fibfib $(( $1 - 2 ))) + $(fibfib $(( $1 - 3 ))) ))\n    fi\n}\n\ncandidate()\
    \ {\n    fibfib \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"2\") =\
    \ \"1\" ]]\n    [[ $(candidate \"1\") = \"0\" ]]\n    [[ $(candidate \"5\") =\
    \ \"4\" ]]\n    [[ $(candidate \"8\") = \"24\" ]]\n    [[ $(candidate \"10\")\
    \ = \"81\" ]]\n    [[ $(candidate \"12\") = \"274\" ]]\n    [[ $(candidate \"\
    14\") = \"927\" ]]\n}\n\nrun_test"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660001140
- exit_code: 0
  program: "#!/bin/bash\n# The FibFib number sequence is a sequence similar to the\
    \ Fibbonacci sequnece that's defined as follows:\n# fibfib(0) == 0\n# fibfib(1)\
    \ == 0\n# fibfib(2) == 1\n# fibfib(n) == fibfib(n-1) + fibfib(n-2) + fibfib(n-3).\n\
    # Please write a function to efficiently compute the n-th element of the fibfib\
    \ number sequence.\n#\n# $1 is an integer\nfibfib() {\n    if [[ $1 -eq 0 ]];\
    \ then\n        echo 0\n    elif [[ $1 -eq 1 ]]; then\n        echo 0\n    elif\
    \ [[ $1 -eq 2 ]]; then\n        echo 1\n    else\n        echo $(($(fibfib $(($1-1)))\
    \ + $(fibfib $(($1-2))) + $(fibfib $(($1-3)))))\n    fi\n}\n\ncandidate() {\n\
    \    fibfib \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"2\") = \"\
    1\" ]]\n    [[ $(candidate \"1\") = \"0\" ]]\n    [[ $(candidate \"5\") = \"4\"\
    \ ]]\n    [[ $(candidate \"8\") = \"24\" ]]\n    [[ $(candidate \"10\") = \"81\"\
    \ ]]\n    [[ $(candidate \"12\") = \"274\" ]]\n    [[ $(candidate \"14\") = \"\
    927\" ]]\n}\n\nrun_test"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660001140
- exit_code: 0
  program: "#!/bin/bash\n# The FibFib number sequence is a sequence similar to the\
    \ Fibbonacci sequnece that's defined as follows:\n# fibfib(0) == 0\n# fibfib(1)\
    \ == 0\n# fibfib(2) == 1\n# fibfib(n) == fibfib(n-1) + fibfib(n-2) + fibfib(n-3).\n\
    # Please write a function to efficiently compute the n-th element of the fibfib\
    \ number sequence.\n#\n# $1 is an integer\nfibfib() {\n  if [ $1 -eq 0 ]; then\n\
    \    echo 0\n  elif [ $1 -eq 1 ]; then\n    echo 0\n  elif [ $1 -eq 2 ]; then\n\
    \    echo 1\n  else\n    echo $(($(fibfib $(($1-1))) + $(fibfib $(($1-2))) + $(fibfib\
    \ $(($1-3)))))\n  fi\n}\n\ncandidate() {\n    fibfib \"$@\"\n}\n\nset -e\nrun_test()\
    \ {\n    [[ $(candidate \"2\") = \"1\" ]]\n    [[ $(candidate \"1\") = \"0\" ]]\n\
    \    [[ $(candidate \"5\") = \"4\" ]]\n    [[ $(candidate \"8\") = \"24\" ]]\n\
    \    [[ $(candidate \"10\") = \"81\" ]]\n    [[ $(candidate \"12\") = \"274\"\
    \ ]]\n    [[ $(candidate \"14\") = \"927\" ]]\n}\n\nrun_test"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660001140
- exit_code: 0
  program: "#!/bin/bash\n# The FibFib number sequence is a sequence similar to the\
    \ Fibbonacci sequnece that's defined as follows:\n# fibfib(0) == 0\n# fibfib(1)\
    \ == 0\n# fibfib(2) == 1\n# fibfib(n) == fibfib(n-1) + fibfib(n-2) + fibfib(n-3).\n\
    # Please write a function to efficiently compute the n-th element of the fibfib\
    \ number sequence.\n#\n# $1 is an integer\nfibfib() {\n    if [[ $1 -eq 0 ]];\
    \ then\n        echo 0\n    elif [[ $1 -eq 1 ]]; then\n        echo 0\n    elif\
    \ [[ $1 -eq 2 ]]; then\n        echo 1\n    else\n        echo $(($(fibfib $(($1-1)))\
    \ + $(fibfib $(($1-2))) + $(fibfib $(($1-3)))))\n    fi\n}\n\ncandidate() {\n\
    \    fibfib \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"2\") = \"\
    1\" ]]\n    [[ $(candidate \"1\") = \"0\" ]]\n    [[ $(candidate \"5\") = \"4\"\
    \ ]]\n    [[ $(candidate \"8\") = \"24\" ]]\n    [[ $(candidate \"10\") = \"81\"\
    \ ]]\n    [[ $(candidate \"12\") = \"274\" ]]\n    [[ $(candidate \"14\") = \"\
    927\" ]]\n}\n\nrun_test"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660001140
- exit_code: 0
  program: "#!/bin/bash\n# The FibFib number sequence is a sequence similar to the\
    \ Fibbonacci sequnece that's defined as follows:\n# fibfib(0) == 0\n# fibfib(1)\
    \ == 0\n# fibfib(2) == 1\n# fibfib(n) == fibfib(n-1) + fibfib(n-2) + fibfib(n-3).\n\
    # Please write a function to efficiently compute the n-th element of the fibfib\
    \ number sequence.\n#\n# $1 is an integer\nfibfib() {\n  if [ $1 -eq 0 ]; then\n\
    \    echo 0\n  elif [ $1 -eq 1 ]; then\n    echo 0\n  elif [ $1 -eq 2 ]; then\n\
    \    echo 1\n  else\n    echo $(( $(fibfib $(( $1 - 1 ))) + $(fibfib $(( $1 -\
    \ 2 ))) + $(fibfib $(( $1 - 3 ))) ))\n  fi\n}\n\ncandidate() {\n    fibfib \"\
    $@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"2\") = \"1\" ]]\n    [[\
    \ $(candidate \"1\") = \"0\" ]]\n    [[ $(candidate \"5\") = \"4\" ]]\n    [[\
    \ $(candidate \"8\") = \"24\" ]]\n    [[ $(candidate \"10\") = \"81\" ]]\n   \
    \ [[ $(candidate \"12\") = \"274\" ]]\n    [[ $(candidate \"14\") = \"927\" ]]\n\
    }\n\nrun_test"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660001140
- exit_code: 0
  program: "#!/bin/bash\n# The FibFib number sequence is a sequence similar to the\
    \ Fibbonacci sequnece that's defined as follows:\n# fibfib(0) == 0\n# fibfib(1)\
    \ == 0\n# fibfib(2) == 1\n# fibfib(n) == fibfib(n-1) + fibfib(n-2) + fibfib(n-3).\n\
    # Please write a function to efficiently compute the n-th element of the fibfib\
    \ number sequence.\n#\n# $1 is an integer\nfibfib() {\n    if [ $1 -eq 0 ]; then\n\
    \        echo 0\n    elif [ $1 -eq 1 ]; then\n        echo 0\n    elif [ $1 -eq\
    \ 2 ]; then\n        echo 1\n    else\n        echo $(( $(fibfib $(( $1 - 1 )))\
    \ + $(fibfib $(( $1 - 2 ))) + $(fibfib $(( $1 - 3 ))) ))\n    fi\n}\n\ncandidate()\
    \ {\n    fibfib \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"2\") =\
    \ \"1\" ]]\n    [[ $(candidate \"1\") = \"0\" ]]\n    [[ $(candidate \"5\") =\
    \ \"4\" ]]\n    [[ $(candidate \"8\") = \"24\" ]]\n    [[ $(candidate \"10\")\
    \ = \"81\" ]]\n    [[ $(candidate \"12\") = \"274\" ]]\n    [[ $(candidate \"\
    14\") = \"927\" ]]\n}\n\nrun_test"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660001140
- exit_code: 0
  program: "#!/bin/bash\n# The FibFib number sequence is a sequence similar to the\
    \ Fibbonacci sequnece that's defined as follows:\n# fibfib(0) == 0\n# fibfib(1)\
    \ == 0\n# fibfib(2) == 1\n# fibfib(n) == fibfib(n-1) + fibfib(n-2) + fibfib(n-3).\n\
    # Please write a function to efficiently compute the n-th element of the fibfib\
    \ number sequence.\n#\n# $1 is an integer\nfibfib() {\n    if [[ $1 -eq 0 ]];\
    \ then\n        echo 0\n    elif [[ $1 -eq 1 ]]; then\n        echo 0\n    elif\
    \ [[ $1 -eq 2 ]]; then\n        echo 1\n    else\n        echo $(($(fibfib $(($1-1)))\
    \ + $(fibfib $(($1-2))) + $(fibfib $(($1-3)))))\n    fi\n}\n\ncandidate() {\n\
    \    fibfib \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"2\") = \"\
    1\" ]]\n    [[ $(candidate \"1\") = \"0\" ]]\n    [[ $(candidate \"5\") = \"4\"\
    \ ]]\n    [[ $(candidate \"8\") = \"24\" ]]\n    [[ $(candidate \"10\") = \"81\"\
    \ ]]\n    [[ $(candidate \"12\") = \"274\" ]]\n    [[ $(candidate \"14\") = \"\
    927\" ]]\n}\n\nrun_test"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660001140
- exit_code: 0
  program: "#!/bin/bash\n# The FibFib number sequence is a sequence similar to the\
    \ Fibbonacci sequnece that's defined as follows:\n# fibfib(0) == 0\n# fibfib(1)\
    \ == 0\n# fibfib(2) == 1\n# fibfib(n) == fibfib(n-1) + fibfib(n-2) + fibfib(n-3).\n\
    # Please write a function to efficiently compute the n-th element of the fibfib\
    \ number sequence.\n#\n# $1 is an integer\nfibfib() {\n    if [ $1 -eq 0 ]; then\n\
    \        echo 0\n    elif [ $1 -eq 1 ]; then\n        echo 0\n    elif [ $1 -eq\
    \ 2 ]; then\n        echo 1\n    else\n        echo $(( $(fibfib $(( $1 - 1 )))\
    \ + $(fibfib $(( $1 - 2 ))) + $(fibfib $(( $1 - 3 ))) ))\n    fi\n}\n\ncandidate()\
    \ {\n    fibfib \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"2\") =\
    \ \"1\" ]]\n    [[ $(candidate \"1\") = \"0\" ]]\n    [[ $(candidate \"5\") =\
    \ \"4\" ]]\n    [[ $(candidate \"8\") = \"24\" ]]\n    [[ $(candidate \"10\")\
    \ = \"81\" ]]\n    [[ $(candidate \"12\") = \"274\" ]]\n    [[ $(candidate \"\
    14\") = \"927\" ]]\n}\n\nrun_test"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660001140
- exit_code: 0
  program: "#!/bin/bash\n# The FibFib number sequence is a sequence similar to the\
    \ Fibbonacci sequnece that's defined as follows:\n# fibfib(0) == 0\n# fibfib(1)\
    \ == 0\n# fibfib(2) == 1\n# fibfib(n) == fibfib(n-1) + fibfib(n-2) + fibfib(n-3).\n\
    # Please write a function to efficiently compute the n-th element of the fibfib\
    \ number sequence.\n#\n# $1 is an integer\nfibfib() {\n    if [ $1 -eq 0 ]; then\n\
    \        echo 0\n    elif [ $1 -eq 1 ]; then\n        echo 0\n    elif [ $1 -eq\
    \ 2 ]; then\n        echo 1\n    else\n        echo $(( $(fibfib $(( $1 - 1 )))\
    \ + $(fibfib $(( $1 - 2 ))) + $(fibfib $(( $1 - 3 ))) ))\n    fi\n}\n\ncandidate()\
    \ {\n    fibfib \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"2\") =\
    \ \"1\" ]]\n    [[ $(candidate \"1\") = \"0\" ]]\n    [[ $(candidate \"5\") =\
    \ \"4\" ]]\n    [[ $(candidate \"8\") = \"24\" ]]\n    [[ $(candidate \"10\")\
    \ = \"81\" ]]\n    [[ $(candidate \"12\") = \"274\" ]]\n    [[ $(candidate \"\
    14\") = \"927\" ]]\n}\n\nrun_test"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660001140
- exit_code: 0
  program: "#!/bin/bash\n# The FibFib number sequence is a sequence similar to the\
    \ Fibbonacci sequnece that's defined as follows:\n# fibfib(0) == 0\n# fibfib(1)\
    \ == 0\n# fibfib(2) == 1\n# fibfib(n) == fibfib(n-1) + fibfib(n-2) + fibfib(n-3).\n\
    # Please write a function to efficiently compute the n-th element of the fibfib\
    \ number sequence.\n#\n# $1 is an integer\nfibfib() {\n    if [ $1 -eq 0 ]; then\n\
    \        echo 0\n    elif [ $1 -eq 1 ]; then\n        echo 0\n    elif [ $1 -eq\
    \ 2 ]; then\n        echo 1\n    else\n        echo $(( $(fibfib $(( $1 - 1 )))\
    \ + $(fibfib $(( $1 - 2 ))) + $(fibfib $(( $1 - 3 ))) ))\n    fi\n}\n\ncandidate()\
    \ {\n    fibfib \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"2\") =\
    \ \"1\" ]]\n    [[ $(candidate \"1\") = \"0\" ]]\n    [[ $(candidate \"5\") =\
    \ \"4\" ]]\n    [[ $(candidate \"8\") = \"24\" ]]\n    [[ $(candidate \"10\")\
    \ = \"81\" ]]\n    [[ $(candidate \"12\") = \"274\" ]]\n    [[ $(candidate \"\
    14\") = \"927\" ]]\n}\n\nrun_test"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660001140
- exit_code: 0
  program: "#!/bin/bash\n# The FibFib number sequence is a sequence similar to the\
    \ Fibbonacci sequnece that's defined as follows:\n# fibfib(0) == 0\n# fibfib(1)\
    \ == 0\n# fibfib(2) == 1\n# fibfib(n) == fibfib(n-1) + fibfib(n-2) + fibfib(n-3).\n\
    # Please write a function to efficiently compute the n-th element of the fibfib\
    \ number sequence.\n#\n# $1 is an integer\nfibfib() {\n  if [ $1 -eq 0 ]; then\n\
    \    echo 0\n  elif [ $1 -eq 1 ]; then\n    echo 0\n  elif [ $1 -eq 2 ]; then\n\
    \    echo 1\n  else\n    echo $(( $(fibfib $(( $1 - 1 ))) + $(fibfib $(( $1 -\
    \ 2 ))) + $(fibfib $(( $1 - 3 ))) ))\n  fi\n}\n\ncandidate() {\n    fibfib \"\
    $@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"2\") = \"1\" ]]\n    [[\
    \ $(candidate \"1\") = \"0\" ]]\n    [[ $(candidate \"5\") = \"4\" ]]\n    [[\
    \ $(candidate \"8\") = \"24\" ]]\n    [[ $(candidate \"10\") = \"81\" ]]\n   \
    \ [[ $(candidate \"12\") = \"274\" ]]\n    [[ $(candidate \"14\") = \"927\" ]]\n\
    }\n\nrun_test"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660001140
- exit_code: 0
  program: "#!/bin/bash\n# The FibFib number sequence is a sequence similar to the\
    \ Fibbonacci sequnece that's defined as follows:\n# fibfib(0) == 0\n# fibfib(1)\
    \ == 0\n# fibfib(2) == 1\n# fibfib(n) == fibfib(n-1) + fibfib(n-2) + fibfib(n-3).\n\
    # Please write a function to efficiently compute the n-th element of the fibfib\
    \ number sequence.\n#\n# $1 is an integer\nfibfib() {\n    local n=$1\n    local\
    \ a=0\n    local b=0\n    local c=1\n    local d=0\n    while [ $n -gt 0 ]; do\n\
    \        d=$((a+b+c))\n        a=$b\n        b=$c\n        c=$d\n        n=$((n-1))\n\
    \    done\n    echo $a\n}\n\ncandidate() {\n    fibfib \"$@\"\n}\n\nset -e\nrun_test()\
    \ {\n    [[ $(candidate \"2\") = \"1\" ]]\n    [[ $(candidate \"1\") = \"0\" ]]\n\
    \    [[ $(candidate \"5\") = \"4\" ]]\n    [[ $(candidate \"8\") = \"24\" ]]\n\
    \    [[ $(candidate \"10\") = \"81\" ]]\n    [[ $(candidate \"12\") = \"274\"\
    \ ]]\n    [[ $(candidate \"14\") = \"927\" ]]\n}\n\nrun_test"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660001136
- exit_code: 0
  program: "#!/bin/bash\n# The FibFib number sequence is a sequence similar to the\
    \ Fibbonacci sequnece that's defined as follows:\n# fibfib(0) == 0\n# fibfib(1)\
    \ == 0\n# fibfib(2) == 1\n# fibfib(n) == fibfib(n-1) + fibfib(n-2) + fibfib(n-3).\n\
    # Please write a function to efficiently compute the n-th element of the fibfib\
    \ number sequence.\n#\n# $1 is an integer\nfibfib() {\n  if [ $1 -eq 0 ]; then\n\
    \    echo 0\n  elif [ $1 -eq 1 ]; then\n    echo 0\n  elif [ $1 -eq 2 ]; then\n\
    \    echo 1\n  else\n    echo $(($(fibfib $(($1-1))) + $(fibfib $(($1-2))) + $(fibfib\
    \ $(($1-3)))))\n  fi\n}\n\ncandidate() {\n    fibfib \"$@\"\n}\n\nset -e\nrun_test()\
    \ {\n    [[ $(candidate \"2\") = \"1\" ]]\n    [[ $(candidate \"1\") = \"0\" ]]\n\
    \    [[ $(candidate \"5\") = \"4\" ]]\n    [[ $(candidate \"8\") = \"24\" ]]\n\
    \    [[ $(candidate \"10\") = \"81\" ]]\n    [[ $(candidate \"12\") = \"274\"\
    \ ]]\n    [[ $(candidate \"14\") = \"927\" ]]\n}\n\nrun_test"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660001140
- exit_code: 0
  program: "#!/bin/bash\n# The FibFib number sequence is a sequence similar to the\
    \ Fibbonacci sequnece that's defined as follows:\n# fibfib(0) == 0\n# fibfib(1)\
    \ == 0\n# fibfib(2) == 1\n# fibfib(n) == fibfib(n-1) + fibfib(n-2) + fibfib(n-3).\n\
    # Please write a function to efficiently compute the n-th element of the fibfib\
    \ number sequence.\n#\n# $1 is an integer\nfibfib() {\n    if [ $1 -eq 0 ]; then\n\
    \        echo 0\n    elif [ $1 -eq 1 ]; then\n        echo 0\n    elif [ $1 -eq\
    \ 2 ]; then\n        echo 1\n    else\n        echo $(( $(fibfib $(( $1 - 1 )))\
    \ + $(fibfib $(( $1 - 2 ))) + $(fibfib $(( $1 - 3 ))) ))\n    fi\n}\n\ncandidate()\
    \ {\n    fibfib \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"2\") =\
    \ \"1\" ]]\n    [[ $(candidate \"1\") = \"0\" ]]\n    [[ $(candidate \"5\") =\
    \ \"4\" ]]\n    [[ $(candidate \"8\") = \"24\" ]]\n    [[ $(candidate \"10\")\
    \ = \"81\" ]]\n    [[ $(candidate \"12\") = \"274\" ]]\n    [[ $(candidate \"\
    14\") = \"927\" ]]\n}\n\nrun_test"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660001140
- exit_code: 0
  program: "#!/bin/bash\n# The FibFib number sequence is a sequence similar to the\
    \ Fibbonacci sequnece that's defined as follows:\n# fibfib(0) == 0\n# fibfib(1)\
    \ == 0\n# fibfib(2) == 1\n# fibfib(n) == fibfib(n-1) + fibfib(n-2) + fibfib(n-3).\n\
    # Please write a function to efficiently compute the n-th element of the fibfib\
    \ number sequence.\n#\n# $1 is an integer\nfibfib() {\n    if [ $1 -eq 0 ]; then\n\
    \        echo 0\n    elif [ $1 -eq 1 ]; then\n        echo 0\n    elif [ $1 -eq\
    \ 2 ]; then\n        echo 1\n    else\n        echo $(( $(fibfib $(( $1 - 1 )))\
    \ + $(fibfib $(( $1 - 2 ))) + $(fibfib $(( $1 - 3 ))) ))\n    fi\n}\n\ncandidate()\
    \ {\n    fibfib \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"2\") =\
    \ \"1\" ]]\n    [[ $(candidate \"1\") = \"0\" ]]\n    [[ $(candidate \"5\") =\
    \ \"4\" ]]\n    [[ $(candidate \"8\") = \"24\" ]]\n    [[ $(candidate \"10\")\
    \ = \"81\" ]]\n    [[ $(candidate \"12\") = \"274\" ]]\n    [[ $(candidate \"\
    14\") = \"927\" ]]\n}\n\nrun_test"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660001140
- exit_code: 0
  program: "#!/bin/bash\n# The FibFib number sequence is a sequence similar to the\
    \ Fibbonacci sequnece that's defined as follows:\n# fibfib(0) == 0\n# fibfib(1)\
    \ == 0\n# fibfib(2) == 1\n# fibfib(n) == fibfib(n-1) + fibfib(n-2) + fibfib(n-3).\n\
    # Please write a function to efficiently compute the n-th element of the fibfib\
    \ number sequence.\n#\n# $1 is an integer\nfibfib() {\n    if [ $1 -eq 0 ]; then\n\
    \        echo 0\n    elif [ $1 -eq 1 ]; then\n        echo 0\n    elif [ $1 -eq\
    \ 2 ]; then\n        echo 1\n    else\n        echo $(( $(fibfib $(( $1 - 1 )))\
    \ + $(fibfib $(( $1 - 2 ))) + $(fibfib $(( $1 - 3 ))) ))\n    fi\n}\n\ncandidate()\
    \ {\n    fibfib \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"2\") =\
    \ \"1\" ]]\n    [[ $(candidate \"1\") = \"0\" ]]\n    [[ $(candidate \"5\") =\
    \ \"4\" ]]\n    [[ $(candidate \"8\") = \"24\" ]]\n    [[ $(candidate \"10\")\
    \ = \"81\" ]]\n    [[ $(candidate \"12\") = \"274\" ]]\n    [[ $(candidate \"\
    14\") = \"927\" ]]\n}\n\nrun_test"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660001140
- exit_code: 0
  program: "#!/bin/bash\n# The FibFib number sequence is a sequence similar to the\
    \ Fibbonacci sequnece that's defined as follows:\n# fibfib(0) == 0\n# fibfib(1)\
    \ == 0\n# fibfib(2) == 1\n# fibfib(n) == fibfib(n-1) + fibfib(n-2) + fibfib(n-3).\n\
    # Please write a function to efficiently compute the n-th element of the fibfib\
    \ number sequence.\n#\n# $1 is an integer\nfibfib() {\n    if [[ $1 -eq 0 ]];\
    \ then\n        echo 0\n    elif [[ $1 -eq 1 ]]; then\n        echo 0\n    elif\
    \ [[ $1 -eq 2 ]]; then\n        echo 1\n    else\n        echo $(( $(fibfib $((\
    \ $1 - 1 ))) + $(fibfib $(( $1 - 2 ))) + $(fibfib $(( $1 - 3 ))) ))\n    fi\n\
    }\n\ncandidate() {\n    fibfib \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate\
    \ \"2\") = \"1\" ]]\n    [[ $(candidate \"1\") = \"0\" ]]\n    [[ $(candidate\
    \ \"5\") = \"4\" ]]\n    [[ $(candidate \"8\") = \"24\" ]]\n    [[ $(candidate\
    \ \"10\") = \"81\" ]]\n    [[ $(candidate \"12\") = \"274\" ]]\n    [[ $(candidate\
    \ \"14\") = \"927\" ]]\n}\n\nrun_test"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660001140
- exit_code: 0
  program: "#!/bin/bash\n# The FibFib number sequence is a sequence similar to the\
    \ Fibbonacci sequnece that's defined as follows:\n# fibfib(0) == 0\n# fibfib(1)\
    \ == 0\n# fibfib(2) == 1\n# fibfib(n) == fibfib(n-1) + fibfib(n-2) + fibfib(n-3).\n\
    # Please write a function to efficiently compute the n-th element of the fibfib\
    \ number sequence.\n#\n# $1 is an integer\nfibfib() {\n    if [ $1 -eq 0 ]; then\n\
    \        echo 0\n    elif [ $1 -eq 1 ]; then\n        echo 0\n    elif [ $1 -eq\
    \ 2 ]; then\n        echo 1\n    else\n        echo $(( $(fibfib $(( $1 - 1 )))\
    \ + $(fibfib $(( $1 - 2 ))) + $(fibfib $(( $1 - 3 ))) ))\n    fi\n}\n\ncandidate()\
    \ {\n    fibfib \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"2\") =\
    \ \"1\" ]]\n    [[ $(candidate \"1\") = \"0\" ]]\n    [[ $(candidate \"5\") =\
    \ \"4\" ]]\n    [[ $(candidate \"8\") = \"24\" ]]\n    [[ $(candidate \"10\")\
    \ = \"81\" ]]\n    [[ $(candidate \"12\") = \"274\" ]]\n    [[ $(candidate \"\
    14\") = \"927\" ]]\n}\n\nrun_test"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660001140
- exit_code: 0
  program: "#!/bin/bash\n# The FibFib number sequence is a sequence similar to the\
    \ Fibbonacci sequnece that's defined as follows:\n# fibfib(0) == 0\n# fibfib(1)\
    \ == 0\n# fibfib(2) == 1\n# fibfib(n) == fibfib(n-1) + fibfib(n-2) + fibfib(n-3).\n\
    # Please write a function to efficiently compute the n-th element of the fibfib\
    \ number sequence.\n#\n# $1 is an integer\nfibfib() {\n    local n=$1\n    local\
    \ a=0\n    local b=0\n    local c=1\n    local d=0\n    while [ $n -gt 0 ]; do\n\
    \        d=$((a+b+c))\n        a=$b\n        b=$c\n        c=$d\n        n=$((n-1))\n\
    \    done\n    echo $a\n}\n\ncandidate() {\n    fibfib \"$@\"\n}\n\nset -e\nrun_test()\
    \ {\n    [[ $(candidate \"2\") = \"1\" ]]\n    [[ $(candidate \"1\") = \"0\" ]]\n\
    \    [[ $(candidate \"5\") = \"4\" ]]\n    [[ $(candidate \"8\") = \"24\" ]]\n\
    \    [[ $(candidate \"10\") = \"81\" ]]\n    [[ $(candidate \"12\") = \"274\"\
    \ ]]\n    [[ $(candidate \"14\") = \"927\" ]]\n}\n\nrun_test"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660001136
- exit_code: 0
  program: "#!/bin/bash\n# The FibFib number sequence is a sequence similar to the\
    \ Fibbonacci sequnece that's defined as follows:\n# fibfib(0) == 0\n# fibfib(1)\
    \ == 0\n# fibfib(2) == 1\n# fibfib(n) == fibfib(n-1) + fibfib(n-2) + fibfib(n-3).\n\
    # Please write a function to efficiently compute the n-th element of the fibfib\
    \ number sequence.\n#\n# $1 is an integer\nfibfib() {\n    if [ $1 -eq 0 ]; then\n\
    \        echo 0\n    elif [ $1 -eq 1 ]; then\n        echo 0\n    elif [ $1 -eq\
    \ 2 ]; then\n        echo 1\n    else\n        echo $(( $(fibfib $(( $1 - 1 )))\
    \ + $(fibfib $(( $1 - 2 ))) + $(fibfib $(( $1 - 3 ))) ))\n    fi\n}\n\ncandidate()\
    \ {\n    fibfib \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"2\") =\
    \ \"1\" ]]\n    [[ $(candidate \"1\") = \"0\" ]]\n    [[ $(candidate \"5\") =\
    \ \"4\" ]]\n    [[ $(candidate \"8\") = \"24\" ]]\n    [[ $(candidate \"10\")\
    \ = \"81\" ]]\n    [[ $(candidate \"12\") = \"274\" ]]\n    [[ $(candidate \"\
    14\") = \"927\" ]]\n}\n\nrun_test"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660001140
- exit_code: 0
  program: "#!/bin/bash\n# The FibFib number sequence is a sequence similar to the\
    \ Fibbonacci sequnece that's defined as follows:\n# fibfib(0) == 0\n# fibfib(1)\
    \ == 0\n# fibfib(2) == 1\n# fibfib(n) == fibfib(n-1) + fibfib(n-2) + fibfib(n-3).\n\
    # Please write a function to efficiently compute the n-th element of the fibfib\
    \ number sequence.\n#\n# $1 is an integer\nfibfib() {\n    if [ $1 -eq 0 ]; then\n\
    \        echo 0\n    elif [ $1 -eq 1 ]; then\n        echo 0\n    elif [ $1 -eq\
    \ 2 ]; then\n        echo 1\n    else\n        echo $(( $(fibfib $(( $1 - 1 )))\
    \ + $(fibfib $(( $1 - 2 ))) + $(fibfib $(( $1 - 3 ))) ))\n    fi\n}\n\ncandidate()\
    \ {\n    fibfib \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"2\") =\
    \ \"1\" ]]\n    [[ $(candidate \"1\") = \"0\" ]]\n    [[ $(candidate \"5\") =\
    \ \"4\" ]]\n    [[ $(candidate \"8\") = \"24\" ]]\n    [[ $(candidate \"10\")\
    \ = \"81\" ]]\n    [[ $(candidate \"12\") = \"274\" ]]\n    [[ $(candidate \"\
    14\") = \"927\" ]]\n}\n\nrun_test"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660001140
- exit_code: 0
  program: "#!/bin/bash\n# The FibFib number sequence is a sequence similar to the\
    \ Fibbonacci sequnece that's defined as follows:\n# fibfib(0) == 0\n# fibfib(1)\
    \ == 0\n# fibfib(2) == 1\n# fibfib(n) == fibfib(n-1) + fibfib(n-2) + fibfib(n-3).\n\
    # Please write a function to efficiently compute the n-th element of the fibfib\
    \ number sequence.\n#\n# $1 is an integer\nfibfib() {\n  if [ $1 -eq 0 ]; then\n\
    \    echo 0\n  elif [ $1 -eq 1 ]; then\n    echo 0\n  elif [ $1 -eq 2 ]; then\n\
    \    echo 1\n  else\n    echo $(( $(fibfib $(( $1 - 1 ))) + $(fibfib $(( $1 -\
    \ 2 ))) + $(fibfib $(( $1 - 3 ))) ))\n  fi\n}\n\ncandidate() {\n    fibfib \"\
    $@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"2\") = \"1\" ]]\n    [[\
    \ $(candidate \"1\") = \"0\" ]]\n    [[ $(candidate \"5\") = \"4\" ]]\n    [[\
    \ $(candidate \"8\") = \"24\" ]]\n    [[ $(candidate \"10\") = \"81\" ]]\n   \
    \ [[ $(candidate \"12\") = \"274\" ]]\n    [[ $(candidate \"14\") = \"927\" ]]\n\
    }\n\nrun_test"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660001140
- exit_code: 0
  program: "#!/bin/bash\n# The FibFib number sequence is a sequence similar to the\
    \ Fibbonacci sequnece that's defined as follows:\n# fibfib(0) == 0\n# fibfib(1)\
    \ == 0\n# fibfib(2) == 1\n# fibfib(n) == fibfib(n-1) + fibfib(n-2) + fibfib(n-3).\n\
    # Please write a function to efficiently compute the n-th element of the fibfib\
    \ number sequence.\n#\n# $1 is an integer\nfibfib() {\n    if [ $1 -eq 0 ]; then\n\
    \        echo 0\n    elif [ $1 -eq 1 ]; then\n        echo 0\n    elif [ $1 -eq\
    \ 2 ]; then\n        echo 1\n    else\n        echo $(( $(fibfib $(( $1 - 1 )))\
    \ + $(fibfib $(( $1 - 2 ))) + $(fibfib $(( $1 - 3 ))) ))\n    fi\n}\n\ncandidate()\
    \ {\n    fibfib \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"2\") =\
    \ \"1\" ]]\n    [[ $(candidate \"1\") = \"0\" ]]\n    [[ $(candidate \"5\") =\
    \ \"4\" ]]\n    [[ $(candidate \"8\") = \"24\" ]]\n    [[ $(candidate \"10\")\
    \ = \"81\" ]]\n    [[ $(candidate \"12\") = \"274\" ]]\n    [[ $(candidate \"\
    14\") = \"927\" ]]\n}\n\nrun_test"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660001140
- exit_code: 0
  program: "#!/bin/bash\n# The FibFib number sequence is a sequence similar to the\
    \ Fibbonacci sequnece that's defined as follows:\n# fibfib(0) == 0\n# fibfib(1)\
    \ == 0\n# fibfib(2) == 1\n# fibfib(n) == fibfib(n-1) + fibfib(n-2) + fibfib(n-3).\n\
    # Please write a function to efficiently compute the n-th element of the fibfib\
    \ number sequence.\n#\n# $1 is an integer\nfibfib() {\n    if [ $1 -eq 0 ]; then\n\
    \        echo 0\n    elif [ $1 -eq 1 ]; then\n        echo 0\n    elif [ $1 -eq\
    \ 2 ]; then\n        echo 1\n    else\n        echo $(( $(fibfib $(( $1 - 1 )))\
    \ + $(fibfib $(( $1 - 2 ))) + $(fibfib $(( $1 - 3 ))) ))\n    fi\n}\n\ncandidate()\
    \ {\n    fibfib \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"2\") =\
    \ \"1\" ]]\n    [[ $(candidate \"1\") = \"0\" ]]\n    [[ $(candidate \"5\") =\
    \ \"4\" ]]\n    [[ $(candidate \"8\") = \"24\" ]]\n    [[ $(candidate \"10\")\
    \ = \"81\" ]]\n    [[ $(candidate \"12\") = \"274\" ]]\n    [[ $(candidate \"\
    14\") = \"927\" ]]\n}\n\nrun_test"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660001140
- exit_code: 0
  program: "#!/bin/bash\n# The FibFib number sequence is a sequence similar to the\
    \ Fibbonacci sequnece that's defined as follows:\n# fibfib(0) == 0\n# fibfib(1)\
    \ == 0\n# fibfib(2) == 1\n# fibfib(n) == fibfib(n-1) + fibfib(n-2) + fibfib(n-3).\n\
    # Please write a function to efficiently compute the n-th element of the fibfib\
    \ number sequence.\n#\n# $1 is an integer\nfibfib() {\n  if [ $1 -eq 0 ]; then\n\
    \    echo 0\n  elif [ $1 -eq 1 ]; then\n    echo 0\n  elif [ $1 -eq 2 ]; then\n\
    \    echo 1\n  else\n    echo $(( $(fibfib $(( $1 - 1 ))) + $(fibfib $(( $1 -\
    \ 2 ))) + $(fibfib $(( $1 - 3 ))) ))\n  fi\n}\n\ncandidate() {\n    fibfib \"\
    $@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"2\") = \"1\" ]]\n    [[\
    \ $(candidate \"1\") = \"0\" ]]\n    [[ $(candidate \"5\") = \"4\" ]]\n    [[\
    \ $(candidate \"8\") = \"24\" ]]\n    [[ $(candidate \"10\") = \"81\" ]]\n   \
    \ [[ $(candidate \"12\") = \"274\" ]]\n    [[ $(candidate \"14\") = \"927\" ]]\n\
    }\n\nrun_test"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660001140
- exit_code: 0
  program: "#!/bin/bash\n# The FibFib number sequence is a sequence similar to the\
    \ Fibbonacci sequnece that's defined as follows:\n# fibfib(0) == 0\n# fibfib(1)\
    \ == 0\n# fibfib(2) == 1\n# fibfib(n) == fibfib(n-1) + fibfib(n-2) + fibfib(n-3).\n\
    # Please write a function to efficiently compute the n-th element of the fibfib\
    \ number sequence.\n#\n# $1 is an integer\nfibfib() {\n    if [ $1 -eq 0 ]; then\n\
    \        echo 0\n    elif [ $1 -eq 1 ]; then\n        echo 0\n    elif [ $1 -eq\
    \ 2 ]; then\n        echo 1\n    else\n        echo $(($(fibfib $(($1-1))) + $(fibfib\
    \ $(($1-2))) + $(fibfib $(($1-3)))))\n    fi\n}\n\ncandidate() {\n    fibfib \"\
    $@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"2\") = \"1\" ]]\n    [[\
    \ $(candidate \"1\") = \"0\" ]]\n    [[ $(candidate \"5\") = \"4\" ]]\n    [[\
    \ $(candidate \"8\") = \"24\" ]]\n    [[ $(candidate \"10\") = \"81\" ]]\n   \
    \ [[ $(candidate \"12\") = \"274\" ]]\n    [[ $(candidate \"14\") = \"927\" ]]\n\
    }\n\nrun_test"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660001140
- exit_code: 0
  program: "#!/bin/bash\n# The FibFib number sequence is a sequence similar to the\
    \ Fibbonacci sequnece that's defined as follows:\n# fibfib(0) == 0\n# fibfib(1)\
    \ == 0\n# fibfib(2) == 1\n# fibfib(n) == fibfib(n-1) + fibfib(n-2) + fibfib(n-3).\n\
    # Please write a function to efficiently compute the n-th element of the fibfib\
    \ number sequence.\n#\n# $1 is an integer\nfibfib() {\n    if [[ $1 -eq 0 ]];\
    \ then\n        echo 0\n    elif [[ $1 -eq 1 ]]; then\n        echo 0\n    elif\
    \ [[ $1 -eq 2 ]]; then\n        echo 1\n    else\n        echo $(( $(fibfib $((\
    \ $1 - 1 ))) + $(fibfib $(( $1 - 2 ))) + $(fibfib $(( $1 - 3 ))) ))\n    fi\n\
    }\n\ncandidate() {\n    fibfib \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate\
    \ \"2\") = \"1\" ]]\n    [[ $(candidate \"1\") = \"0\" ]]\n    [[ $(candidate\
    \ \"5\") = \"4\" ]]\n    [[ $(candidate \"8\") = \"24\" ]]\n    [[ $(candidate\
    \ \"10\") = \"81\" ]]\n    [[ $(candidate \"12\") = \"274\" ]]\n    [[ $(candidate\
    \ \"14\") = \"927\" ]]\n}\n\nrun_test"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660001140
- exit_code: 0
  program: "#!/bin/bash\n# The FibFib number sequence is a sequence similar to the\
    \ Fibbonacci sequnece that's defined as follows:\n# fibfib(0) == 0\n# fibfib(1)\
    \ == 0\n# fibfib(2) == 1\n# fibfib(n) == fibfib(n-1) + fibfib(n-2) + fibfib(n-3).\n\
    # Please write a function to efficiently compute the n-th element of the fibfib\
    \ number sequence.\n#\n# $1 is an integer\nfibfib() {\n    if [ $1 -eq 0 ]; then\n\
    \        echo 0\n    elif [ $1 -eq 1 ]; then\n        echo 0\n    elif [ $1 -eq\
    \ 2 ]; then\n        echo 1\n    else\n        echo $(( $(fibfib $(( $1 - 1 )))\
    \ + $(fibfib $(( $1 - 2 ))) + $(fibfib $(( $1 - 3 ))) ))\n    fi\n}\n\ncandidate()\
    \ {\n    fibfib \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"2\") =\
    \ \"1\" ]]\n    [[ $(candidate \"1\") = \"0\" ]]\n    [[ $(candidate \"5\") =\
    \ \"4\" ]]\n    [[ $(candidate \"8\") = \"24\" ]]\n    [[ $(candidate \"10\")\
    \ = \"81\" ]]\n    [[ $(candidate \"12\") = \"274\" ]]\n    [[ $(candidate \"\
    14\") = \"927\" ]]\n}\n\nrun_test"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660001140
- exit_code: 0
  program: "#!/bin/bash\n# The FibFib number sequence is a sequence similar to the\
    \ Fibbonacci sequnece that's defined as follows:\n# fibfib(0) == 0\n# fibfib(1)\
    \ == 0\n# fibfib(2) == 1\n# fibfib(n) == fibfib(n-1) + fibfib(n-2) + fibfib(n-3).\n\
    # Please write a function to efficiently compute the n-th element of the fibfib\
    \ number sequence.\n#\n# $1 is an integer\nfibfib() {\n    if [ $1 -lt 0 ]; then\n\
    \        echo \"Error: $1 is not a positive integer\"\n        return 1\n    fi\n\
    \    if [ $1 -eq 0 ]; then\n        echo 0\n        return 0\n    fi\n    if [\
    \ $1 -eq 1 ]; then\n        echo 0\n        return 0\n    fi\n    if [ $1 -eq\
    \ 2 ]; then\n        echo 1\n        return 0\n    fi\n    a=0\n    b=0\n    c=1\n\
    \    for i in $(seq 3 $1); do\n        d=$((a+b+c))\n        a=$b\n        b=$c\n\
    \        c=$d\n    done\n    echo $d\n}\n\ncandidate() {\n    fibfib \"$@\"\n\
    }\n\nset -e\nrun_test() {\n    [[ $(candidate \"2\") = \"1\" ]]\n    [[ $(candidate\
    \ \"1\") = \"0\" ]]\n    [[ $(candidate \"5\") = \"4\" ]]\n    [[ $(candidate\
    \ \"8\") = \"24\" ]]\n    [[ $(candidate \"10\") = \"81\" ]]\n    [[ $(candidate\
    \ \"12\") = \"274\" ]]\n    [[ $(candidate \"14\") = \"927\" ]]\n}\n\nrun_test"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660001136
- exit_code: 0
  program: "#!/bin/bash\n# The FibFib number sequence is a sequence similar to the\
    \ Fibbonacci sequnece that's defined as follows:\n# fibfib(0) == 0\n# fibfib(1)\
    \ == 0\n# fibfib(2) == 1\n# fibfib(n) == fibfib(n-1) + fibfib(n-2) + fibfib(n-3).\n\
    # Please write a function to efficiently compute the n-th element of the fibfib\
    \ number sequence.\n#\n# $1 is an integer\nfibfib() {\n  if [ $1 -eq 0 ]; then\n\
    \    echo 0\n  elif [ $1 -eq 1 ]; then\n    echo 0\n  elif [ $1 -eq 2 ]; then\n\
    \    echo 1\n  else\n    echo $(($(fibfib $(($1-1))) + $(fibfib $(($1-2))) + $(fibfib\
    \ $(($1-3)))))\n  fi\n}\n\ncandidate() {\n    fibfib \"$@\"\n}\n\nset -e\nrun_test()\
    \ {\n    [[ $(candidate \"2\") = \"1\" ]]\n    [[ $(candidate \"1\") = \"0\" ]]\n\
    \    [[ $(candidate \"5\") = \"4\" ]]\n    [[ $(candidate \"8\") = \"24\" ]]\n\
    \    [[ $(candidate \"10\") = \"81\" ]]\n    [[ $(candidate \"12\") = \"274\"\
    \ ]]\n    [[ $(candidate \"14\") = \"927\" ]]\n}\n\nrun_test"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660001140
- exit_code: 0
  program: "#!/bin/bash\n# The FibFib number sequence is a sequence similar to the\
    \ Fibbonacci sequnece that's defined as follows:\n# fibfib(0) == 0\n# fibfib(1)\
    \ == 0\n# fibfib(2) == 1\n# fibfib(n) == fibfib(n-1) + fibfib(n-2) + fibfib(n-3).\n\
    # Please write a function to efficiently compute the n-th element of the fibfib\
    \ number sequence.\n#\n# $1 is an integer\nfibfib() {\n  if [ $1 -eq 0 ]; then\n\
    \    echo 0\n  elif [ $1 -eq 1 ]; then\n    echo 0\n  elif [ $1 -eq 2 ]; then\n\
    \    echo 1\n  else\n    echo $(( $(fibfib $(( $1 - 1 ))) + $(fibfib $(( $1 -\
    \ 2 ))) + $(fibfib $(( $1 - 3 ))) ))\n  fi\n}\n\ncandidate() {\n    fibfib \"\
    $@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"2\") = \"1\" ]]\n    [[\
    \ $(candidate \"1\") = \"0\" ]]\n    [[ $(candidate \"5\") = \"4\" ]]\n    [[\
    \ $(candidate \"8\") = \"24\" ]]\n    [[ $(candidate \"10\") = \"81\" ]]\n   \
    \ [[ $(candidate \"12\") = \"274\" ]]\n    [[ $(candidate \"14\") = \"927\" ]]\n\
    }\n\nrun_test"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660001140
- exit_code: 0
  program: "#!/bin/bash\n# The FibFib number sequence is a sequence similar to the\
    \ Fibbonacci sequnece that's defined as follows:\n# fibfib(0) == 0\n# fibfib(1)\
    \ == 0\n# fibfib(2) == 1\n# fibfib(n) == fibfib(n-1) + fibfib(n-2) + fibfib(n-3).\n\
    # Please write a function to efficiently compute the n-th element of the fibfib\
    \ number sequence.\n#\n# $1 is an integer\nfibfib() {\n  if [ $1 -eq 0 ]; then\n\
    \    echo 0\n  elif [ $1 -eq 1 ]; then\n    echo 0\n  elif [ $1 -eq 2 ]; then\n\
    \    echo 1\n  else\n    echo $(( $(fibfib $(( $1 - 1 ))) + $(fibfib $(( $1 -\
    \ 2 ))) + $(fibfib $(( $1 - 3 ))) ))\n  fi\n}\n\ncandidate() {\n    fibfib \"\
    $@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"2\") = \"1\" ]]\n    [[\
    \ $(candidate \"1\") = \"0\" ]]\n    [[ $(candidate \"5\") = \"4\" ]]\n    [[\
    \ $(candidate \"8\") = \"24\" ]]\n    [[ $(candidate \"10\") = \"81\" ]]\n   \
    \ [[ $(candidate \"12\") = \"274\" ]]\n    [[ $(candidate \"14\") = \"927\" ]]\n\
    }\n\nrun_test"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660001140
- exit_code: 0
  program: "#!/bin/bash\n# The FibFib number sequence is a sequence similar to the\
    \ Fibbonacci sequnece that's defined as follows:\n# fibfib(0) == 0\n# fibfib(1)\
    \ == 0\n# fibfib(2) == 1\n# fibfib(n) == fibfib(n-1) + fibfib(n-2) + fibfib(n-3).\n\
    # Please write a function to efficiently compute the n-th element of the fibfib\
    \ number sequence.\n#\n# $1 is an integer\nfibfib() {\n    if [ $1 -eq 0 ]; then\n\
    \        echo 0\n    elif [ $1 -eq 1 ]; then\n        echo 0\n    elif [ $1 -eq\
    \ 2 ]; then\n        echo 1\n    else\n        echo $(( $(fibfib $(( $1 - 1 )))\
    \ + $(fibfib $(( $1 - 2 ))) + $(fibfib $(( $1 - 3 ))) ))\n    fi\n}\n\ncandidate()\
    \ {\n    fibfib \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"2\") =\
    \ \"1\" ]]\n    [[ $(candidate \"1\") = \"0\" ]]\n    [[ $(candidate \"5\") =\
    \ \"4\" ]]\n    [[ $(candidate \"8\") = \"24\" ]]\n    [[ $(candidate \"10\")\
    \ = \"81\" ]]\n    [[ $(candidate \"12\") = \"274\" ]]\n    [[ $(candidate \"\
    14\") = \"927\" ]]\n}\n\nrun_test"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660001140
- exit_code: 0
  program: "#!/bin/bash\n# The FibFib number sequence is a sequence similar to the\
    \ Fibbonacci sequnece that's defined as follows:\n# fibfib(0) == 0\n# fibfib(1)\
    \ == 0\n# fibfib(2) == 1\n# fibfib(n) == fibfib(n-1) + fibfib(n-2) + fibfib(n-3).\n\
    # Please write a function to efficiently compute the n-th element of the fibfib\
    \ number sequence.\n#\n# $1 is an integer\nfibfib() {\n  if [ $1 -eq 0 ]; then\n\
    \    echo 0\n  elif [ $1 -eq 1 ]; then\n    echo 0\n  elif [ $1 -eq 2 ]; then\n\
    \    echo 1\n  else\n    echo $(( $(fibfib $(( $1 - 1 ))) + $(fibfib $(( $1 -\
    \ 2 ))) + $(fibfib $(( $1 - 3 ))) ))\n  fi\n}\n\ncandidate() {\n    fibfib \"\
    $@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"2\") = \"1\" ]]\n    [[\
    \ $(candidate \"1\") = \"0\" ]]\n    [[ $(candidate \"5\") = \"4\" ]]\n    [[\
    \ $(candidate \"8\") = \"24\" ]]\n    [[ $(candidate \"10\") = \"81\" ]]\n   \
    \ [[ $(candidate \"12\") = \"274\" ]]\n    [[ $(candidate \"14\") = \"927\" ]]\n\
    }\n\nrun_test"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660001140
- exit_code: 0
  program: "#!/bin/bash\n# The FibFib number sequence is a sequence similar to the\
    \ Fibbonacci sequnece that's defined as follows:\n# fibfib(0) == 0\n# fibfib(1)\
    \ == 0\n# fibfib(2) == 1\n# fibfib(n) == fibfib(n-1) + fibfib(n-2) + fibfib(n-3).\n\
    # Please write a function to efficiently compute the n-th element of the fibfib\
    \ number sequence.\n#\n# $1 is an integer\nfibfib() {\n    if [ $1 -eq 0 ]; then\n\
    \        echo 0\n    elif [ $1 -eq 1 ]; then\n        echo 0\n    elif [ $1 -eq\
    \ 2 ]; then\n        echo 1\n    else\n        echo $(( $(fibfib $(( $1 - 1 )))\
    \ + $(fibfib $(( $1 - 2 ))) + $(fibfib $(( $1 - 3 ))) ))\n    fi\n}\n\ncandidate()\
    \ {\n    fibfib \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"2\") =\
    \ \"1\" ]]\n    [[ $(candidate \"1\") = \"0\" ]]\n    [[ $(candidate \"5\") =\
    \ \"4\" ]]\n    [[ $(candidate \"8\") = \"24\" ]]\n    [[ $(candidate \"10\")\
    \ = \"81\" ]]\n    [[ $(candidate \"12\") = \"274\" ]]\n    [[ $(candidate \"\
    14\") = \"927\" ]]\n}\n\nrun_test"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660001140
- exit_code: 0
  program: "#!/bin/bash\n# The FibFib number sequence is a sequence similar to the\
    \ Fibbonacci sequnece that's defined as follows:\n# fibfib(0) == 0\n# fibfib(1)\
    \ == 0\n# fibfib(2) == 1\n# fibfib(n) == fibfib(n-1) + fibfib(n-2) + fibfib(n-3).\n\
    # Please write a function to efficiently compute the n-th element of the fibfib\
    \ number sequence.\n#\n# $1 is an integer\nfibfib() {\n    if [[ $1 -eq 0 ]];\
    \ then\n        echo 0\n    elif [[ $1 -eq 1 ]]; then\n        echo 0\n    elif\
    \ [[ $1 -eq 2 ]]; then\n        echo 1\n    else\n        echo $(($(fibfib $(($1-1)))\
    \ + $(fibfib $(($1-2))) + $(fibfib $(($1-3)))))\n    fi\n}\n\ncandidate() {\n\
    \    fibfib \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"2\") = \"\
    1\" ]]\n    [[ $(candidate \"1\") = \"0\" ]]\n    [[ $(candidate \"5\") = \"4\"\
    \ ]]\n    [[ $(candidate \"8\") = \"24\" ]]\n    [[ $(candidate \"10\") = \"81\"\
    \ ]]\n    [[ $(candidate \"12\") = \"274\" ]]\n    [[ $(candidate \"14\") = \"\
    927\" ]]\n}\n\nrun_test"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660001140
- exit_code: 0
  program: "#!/bin/bash\n# The FibFib number sequence is a sequence similar to the\
    \ Fibbonacci sequnece that's defined as follows:\n# fibfib(0) == 0\n# fibfib(1)\
    \ == 0\n# fibfib(2) == 1\n# fibfib(n) == fibfib(n-1) + fibfib(n-2) + fibfib(n-3).\n\
    # Please write a function to efficiently compute the n-th element of the fibfib\
    \ number sequence.\n#\n# $1 is an integer\nfibfib() {\n    if [ $1 -eq 0 ]; then\n\
    \        echo 0\n    elif [ $1 -eq 1 ]; then\n        echo 0\n    elif [ $1 -eq\
    \ 2 ]; then\n        echo 1\n    else\n        echo $(( $(fibfib $(( $1 - 1 )))\
    \ + $(fibfib $(( $1 - 2 ))) + $(fibfib $(( $1 - 3 ))) ))\n    fi\n}\n\ncandidate()\
    \ {\n    fibfib \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"2\") =\
    \ \"1\" ]]\n    [[ $(candidate \"1\") = \"0\" ]]\n    [[ $(candidate \"5\") =\
    \ \"4\" ]]\n    [[ $(candidate \"8\") = \"24\" ]]\n    [[ $(candidate \"10\")\
    \ = \"81\" ]]\n    [[ $(candidate \"12\") = \"274\" ]]\n    [[ $(candidate \"\
    14\") = \"927\" ]]\n}\n\nrun_test"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660001140
- exit_code: 0
  program: "#!/bin/bash\n# The FibFib number sequence is a sequence similar to the\
    \ Fibbonacci sequnece that's defined as follows:\n# fibfib(0) == 0\n# fibfib(1)\
    \ == 0\n# fibfib(2) == 1\n# fibfib(n) == fibfib(n-1) + fibfib(n-2) + fibfib(n-3).\n\
    # Please write a function to efficiently compute the n-th element of the fibfib\
    \ number sequence.\n#\n# $1 is an integer\nfibfib() {\n  if [ $1 -eq 0 ]; then\n\
    \    echo 0\n  elif [ $1 -eq 1 ]; then\n    echo 0\n  elif [ $1 -eq 2 ]; then\n\
    \    echo 1\n  else\n    echo $(( $(fibfib $(( $1 - 1 ))) + $(fibfib $(( $1 -\
    \ 2 ))) + $(fibfib $(( $1 - 3 ))) ))\n  fi\n}\n\ncandidate() {\n    fibfib \"\
    $@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"2\") = \"1\" ]]\n    [[\
    \ $(candidate \"1\") = \"0\" ]]\n    [[ $(candidate \"5\") = \"4\" ]]\n    [[\
    \ $(candidate \"8\") = \"24\" ]]\n    [[ $(candidate \"10\") = \"81\" ]]\n   \
    \ [[ $(candidate \"12\") = \"274\" ]]\n    [[ $(candidate \"14\") = \"927\" ]]\n\
    }\n\nrun_test"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660001140
- exit_code: 0
  program: "#!/bin/bash\n# The FibFib number sequence is a sequence similar to the\
    \ Fibbonacci sequnece that's defined as follows:\n# fibfib(0) == 0\n# fibfib(1)\
    \ == 0\n# fibfib(2) == 1\n# fibfib(n) == fibfib(n-1) + fibfib(n-2) + fibfib(n-3).\n\
    # Please write a function to efficiently compute the n-th element of the fibfib\
    \ number sequence.\n#\n# $1 is an integer\nfibfib() {\n    if [ $1 -eq 0 ]; then\n\
    \        echo 0\n    elif [ $1 -eq 1 ]; then\n        echo 0\n    elif [ $1 -eq\
    \ 2 ]; then\n        echo 1\n    else\n        echo $(( $(fibfib $(( $1 - 1 )))\
    \ + $(fibfib $(( $1 - 2 ))) + $(fibfib $(( $1 - 3 ))) ))\n    fi\n}\n\ncandidate()\
    \ {\n    fibfib \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"2\") =\
    \ \"1\" ]]\n    [[ $(candidate \"1\") = \"0\" ]]\n    [[ $(candidate \"5\") =\
    \ \"4\" ]]\n    [[ $(candidate \"8\") = \"24\" ]]\n    [[ $(candidate \"10\")\
    \ = \"81\" ]]\n    [[ $(candidate \"12\") = \"274\" ]]\n    [[ $(candidate \"\
    14\") = \"927\" ]]\n}\n\nrun_test"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660001140
- exit_code: 0
  program: "#!/bin/bash\n# The FibFib number sequence is a sequence similar to the\
    \ Fibbonacci sequnece that's defined as follows:\n# fibfib(0) == 0\n# fibfib(1)\
    \ == 0\n# fibfib(2) == 1\n# fibfib(n) == fibfib(n-1) + fibfib(n-2) + fibfib(n-3).\n\
    # Please write a function to efficiently compute the n-th element of the fibfib\
    \ number sequence.\n#\n# $1 is an integer\nfibfib() {\n    if [ $1 -eq 0 ]; then\n\
    \        echo 0\n    elif [ $1 -eq 1 ]; then\n        echo 0\n    elif [ $1 -eq\
    \ 2 ]; then\n        echo 1\n    else\n        echo $(( $(fibfib $(( $1 - 1 )))\
    \ + $(fibfib $(( $1 - 2 ))) + $(fibfib $(( $1 - 3 ))) ))\n    fi\n}\n\ncandidate()\
    \ {\n    fibfib \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"2\") =\
    \ \"1\" ]]\n    [[ $(candidate \"1\") = \"0\" ]]\n    [[ $(candidate \"5\") =\
    \ \"4\" ]]\n    [[ $(candidate \"8\") = \"24\" ]]\n    [[ $(candidate \"10\")\
    \ = \"81\" ]]\n    [[ $(candidate \"12\") = \"274\" ]]\n    [[ $(candidate \"\
    14\") = \"927\" ]]\n}\n\nrun_test"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660001140
- exit_code: 0
  program: "#!/bin/bash\n# The FibFib number sequence is a sequence similar to the\
    \ Fibbonacci sequnece that's defined as follows:\n# fibfib(0) == 0\n# fibfib(1)\
    \ == 0\n# fibfib(2) == 1\n# fibfib(n) == fibfib(n-1) + fibfib(n-2) + fibfib(n-3).\n\
    # Please write a function to efficiently compute the n-th element of the fibfib\
    \ number sequence.\n#\n# $1 is an integer\nfibfib() {\n    if [ $1 -eq 0 ]; then\n\
    \        echo 0\n    elif [ $1 -eq 1 ]; then\n        echo 0\n    elif [ $1 -eq\
    \ 2 ]; then\n        echo 1\n    else\n        echo $(($(fibfib $(($1-1))) + $(fibfib\
    \ $(($1-2))) + $(fibfib $(($1-3)))))\n    fi\n}\n\ncandidate() {\n    fibfib \"\
    $@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"2\") = \"1\" ]]\n    [[\
    \ $(candidate \"1\") = \"0\" ]]\n    [[ $(candidate \"5\") = \"4\" ]]\n    [[\
    \ $(candidate \"8\") = \"24\" ]]\n    [[ $(candidate \"10\") = \"81\" ]]\n   \
    \ [[ $(candidate \"12\") = \"274\" ]]\n    [[ $(candidate \"14\") = \"927\" ]]\n\
    }\n\nrun_test"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660001140
- exit_code: 0
  program: "#!/bin/bash\n# The FibFib number sequence is a sequence similar to the\
    \ Fibbonacci sequnece that's defined as follows:\n# fibfib(0) == 0\n# fibfib(1)\
    \ == 0\n# fibfib(2) == 1\n# fibfib(n) == fibfib(n-1) + fibfib(n-2) + fibfib(n-3).\n\
    # Please write a function to efficiently compute the n-th element of the fibfib\
    \ number sequence.\n#\n# $1 is an integer\nfibfib() {\n    if [ $1 -eq 0 ]; then\n\
    \        echo 0\n    elif [ $1 -eq 1 ]; then\n        echo 0\n    elif [ $1 -eq\
    \ 2 ]; then\n        echo 1\n    else\n        echo $(( $(fibfib $(( $1 - 1 )))\
    \ + $(fibfib $(( $1 - 2 ))) + $(fibfib $(( $1 - 3 ))) ))\n    fi\n}\n\ncandidate()\
    \ {\n    fibfib \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"2\") =\
    \ \"1\" ]]\n    [[ $(candidate \"1\") = \"0\" ]]\n    [[ $(candidate \"5\") =\
    \ \"4\" ]]\n    [[ $(candidate \"8\") = \"24\" ]]\n    [[ $(candidate \"10\")\
    \ = \"81\" ]]\n    [[ $(candidate \"12\") = \"274\" ]]\n    [[ $(candidate \"\
    14\") = \"927\" ]]\n}\n\nrun_test"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660001140
- exit_code: 0
  program: "#!/bin/bash\n# The FibFib number sequence is a sequence similar to the\
    \ Fibbonacci sequnece that's defined as follows:\n# fibfib(0) == 0\n# fibfib(1)\
    \ == 0\n# fibfib(2) == 1\n# fibfib(n) == fibfib(n-1) + fibfib(n-2) + fibfib(n-3).\n\
    # Please write a function to efficiently compute the n-th element of the fibfib\
    \ number sequence.\n#\n# $1 is an integer\nfibfib() {\n    if [ $1 -eq 0 ]; then\n\
    \        echo 0\n    elif [ $1 -eq 1 ]; then\n        echo 0\n    elif [ $1 -eq\
    \ 2 ]; then\n        echo 1\n    else\n        echo $(( $(fibfib $(( $1 - 1 )))\
    \ + $(fibfib $(( $1 - 2 ))) + $(fibfib $(( $1 - 3 ))) ))\n    fi\n}\n\ncandidate()\
    \ {\n    fibfib \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"2\") =\
    \ \"1\" ]]\n    [[ $(candidate \"1\") = \"0\" ]]\n    [[ $(candidate \"5\") =\
    \ \"4\" ]]\n    [[ $(candidate \"8\") = \"24\" ]]\n    [[ $(candidate \"10\")\
    \ = \"81\" ]]\n    [[ $(candidate \"12\") = \"274\" ]]\n    [[ $(candidate \"\
    14\") = \"927\" ]]\n}\n\nrun_test"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660001140
- exit_code: 0
  program: "#!/bin/bash\n# The FibFib number sequence is a sequence similar to the\
    \ Fibbonacci sequnece that's defined as follows:\n# fibfib(0) == 0\n# fibfib(1)\
    \ == 0\n# fibfib(2) == 1\n# fibfib(n) == fibfib(n-1) + fibfib(n-2) + fibfib(n-3).\n\
    # Please write a function to efficiently compute the n-th element of the fibfib\
    \ number sequence.\n#\n# $1 is an integer\nfibfib() {\n    if [ $1 -eq 0 ]; then\n\
    \        echo 0\n    elif [ $1 -eq 1 ]; then\n        echo 0\n    elif [ $1 -eq\
    \ 2 ]; then\n        echo 1\n    else\n        echo $(( $(fibfib $(( $1 - 1 )))\
    \ + $(fibfib $(( $1 - 2 ))) + $(fibfib $(( $1 - 3 ))) ))\n    fi\n}\n\ncandidate()\
    \ {\n    fibfib \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"2\") =\
    \ \"1\" ]]\n    [[ $(candidate \"1\") = \"0\" ]]\n    [[ $(candidate \"5\") =\
    \ \"4\" ]]\n    [[ $(candidate \"8\") = \"24\" ]]\n    [[ $(candidate \"10\")\
    \ = \"81\" ]]\n    [[ $(candidate \"12\") = \"274\" ]]\n    [[ $(candidate \"\
    14\") = \"927\" ]]\n}\n\nrun_test"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660001140
- exit_code: 0
  program: "#!/bin/bash\n# The FibFib number sequence is a sequence similar to the\
    \ Fibbonacci sequnece that's defined as follows:\n# fibfib(0) == 0\n# fibfib(1)\
    \ == 0\n# fibfib(2) == 1\n# fibfib(n) == fibfib(n-1) + fibfib(n-2) + fibfib(n-3).\n\
    # Please write a function to efficiently compute the n-th element of the fibfib\
    \ number sequence.\n#\n# $1 is an integer\nfibfib() {\n  if [[ $1 -eq 0 ]]; then\n\
    \    echo 0\n  elif [[ $1 -eq 1 ]]; then\n    echo 0\n  elif [[ $1 -eq 2 ]]; then\n\
    \    echo 1\n  else\n    echo $(( $(fibfib $(( $1 - 1 ))) + $(fibfib $(( $1 -\
    \ 2 ))) + $(fibfib $(( $1 - 3 ))) ))\n  fi\n}\n\ncandidate() {\n    fibfib \"\
    $@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"2\") = \"1\" ]]\n    [[\
    \ $(candidate \"1\") = \"0\" ]]\n    [[ $(candidate \"5\") = \"4\" ]]\n    [[\
    \ $(candidate \"8\") = \"24\" ]]\n    [[ $(candidate \"10\") = \"81\" ]]\n   \
    \ [[ $(candidate \"12\") = \"274\" ]]\n    [[ $(candidate \"14\") = \"927\" ]]\n\
    }\n\nrun_test"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660001140
- exit_code: 0
  program: "#!/bin/bash\n# The FibFib number sequence is a sequence similar to the\
    \ Fibbonacci sequnece that's defined as follows:\n# fibfib(0) == 0\n# fibfib(1)\
    \ == 0\n# fibfib(2) == 1\n# fibfib(n) == fibfib(n-1) + fibfib(n-2) + fibfib(n-3).\n\
    # Please write a function to efficiently compute the n-th element of the fibfib\
    \ number sequence.\n#\n# $1 is an integer\nfibfib() {\n    if [[ $1 -eq 0 ]];\
    \ then\n        echo 0\n    elif [[ $1 -eq 1 ]]; then\n        echo 0\n    elif\
    \ [[ $1 -eq 2 ]]; then\n        echo 1\n    else\n        echo $(( $(fibfib $((\
    \ $1 - 1 ))) + $(fibfib $(( $1 - 2 ))) + $(fibfib $(( $1 - 3 ))) ))\n    fi\n\
    }\n\ncandidate() {\n    fibfib \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate\
    \ \"2\") = \"1\" ]]\n    [[ $(candidate \"1\") = \"0\" ]]\n    [[ $(candidate\
    \ \"5\") = \"4\" ]]\n    [[ $(candidate \"8\") = \"24\" ]]\n    [[ $(candidate\
    \ \"10\") = \"81\" ]]\n    [[ $(candidate \"12\") = \"274\" ]]\n    [[ $(candidate\
    \ \"14\") = \"927\" ]]\n}\n\nrun_test"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660001140
- exit_code: 0
  program: "#!/bin/bash\n# The FibFib number sequence is a sequence similar to the\
    \ Fibbonacci sequnece that's defined as follows:\n# fibfib(0) == 0\n# fibfib(1)\
    \ == 0\n# fibfib(2) == 1\n# fibfib(n) == fibfib(n-1) + fibfib(n-2) + fibfib(n-3).\n\
    # Please write a function to efficiently compute the n-th element of the fibfib\
    \ number sequence.\n#\n# $1 is an integer\nfibfib() {\n    if [ $1 -eq 0 ]; then\n\
    \        echo 0\n    elif [ $1 -eq 1 ]; then\n        echo 0\n    elif [ $1 -eq\
    \ 2 ]; then\n        echo 1\n    else\n        echo $(( $(fibfib $(( $1 - 1 )))\
    \ + $(fibfib $(( $1 - 2 ))) + $(fibfib $(( $1 - 3 ))) ))\n    fi\n}\n\ncandidate()\
    \ {\n    fibfib \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"2\") =\
    \ \"1\" ]]\n    [[ $(candidate \"1\") = \"0\" ]]\n    [[ $(candidate \"5\") =\
    \ \"4\" ]]\n    [[ $(candidate \"8\") = \"24\" ]]\n    [[ $(candidate \"10\")\
    \ = \"81\" ]]\n    [[ $(candidate \"12\") = \"274\" ]]\n    [[ $(candidate \"\
    14\") = \"927\" ]]\n}\n\nrun_test"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660001140
- exit_code: 0
  program: "#!/bin/bash\n# The FibFib number sequence is a sequence similar to the\
    \ Fibbonacci sequnece that's defined as follows:\n# fibfib(0) == 0\n# fibfib(1)\
    \ == 0\n# fibfib(2) == 1\n# fibfib(n) == fibfib(n-1) + fibfib(n-2) + fibfib(n-3).\n\
    # Please write a function to efficiently compute the n-th element of the fibfib\
    \ number sequence.\n#\n# $1 is an integer\nfibfib() {\n    if [ $1 -eq 0 ]; then\n\
    \        echo 0\n    elif [ $1 -eq 1 ]; then\n        echo 0\n    elif [ $1 -eq\
    \ 2 ]; then\n        echo 1\n    else\n        echo $(( $(fibfib $(( $1 - 1 )))\
    \ + $(fibfib $(( $1 - 2 ))) + $(fibfib $(( $1 - 3 ))) ))\n    fi\n}\n\ncandidate()\
    \ {\n    fibfib \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"2\") =\
    \ \"1\" ]]\n    [[ $(candidate \"1\") = \"0\" ]]\n    [[ $(candidate \"5\") =\
    \ \"4\" ]]\n    [[ $(candidate \"8\") = \"24\" ]]\n    [[ $(candidate \"10\")\
    \ = \"81\" ]]\n    [[ $(candidate \"12\") = \"274\" ]]\n    [[ $(candidate \"\
    14\") = \"927\" ]]\n}\n\nrun_test"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660001140
- exit_code: 1
  program: "#!/bin/bash\n# The FibFib number sequence is a sequence similar to the\
    \ Fibbonacci sequnece that's defined as follows:\n# fibfib(0) == 0\n# fibfib(1)\
    \ == 0\n# fibfib(2) == 1\n# fibfib(n) == fibfib(n-1) + fibfib(n-2) + fibfib(n-3).\n\
    # Please write a function to efficiently compute the n-th element of the fibfib\
    \ number sequence.\n#\n# $1 is an integer\nfibfib() {\n    if [ \"$1\" -lt 3 ];\
    \ then\n        echo \"$1\"\n    else\n        echo $(( $(fibfib $(( $1 - 1 )))\
    \ + $(fibfib $(( $1 - 2 ))) + $(fibfib $(( $1 - 3 ))) ))\n    fi\n}\n\ncandidate()\
    \ {\n    fibfib \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"2\") =\
    \ \"1\" ]]\n    [[ $(candidate \"1\") = \"0\" ]]\n    [[ $(candidate \"5\") =\
    \ \"4\" ]]\n    [[ $(candidate \"8\") = \"24\" ]]\n    [[ $(candidate \"10\")\
    \ = \"81\" ]]\n    [[ $(candidate \"12\") = \"274\" ]]\n    [[ $(candidate \"\
    14\") = \"927\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660001136
- exit_code: 0
  program: "#!/bin/bash\n# The FibFib number sequence is a sequence similar to the\
    \ Fibbonacci sequnece that's defined as follows:\n# fibfib(0) == 0\n# fibfib(1)\
    \ == 0\n# fibfib(2) == 1\n# fibfib(n) == fibfib(n-1) + fibfib(n-2) + fibfib(n-3).\n\
    # Please write a function to efficiently compute the n-th element of the fibfib\
    \ number sequence.\n#\n# $1 is an integer\nfibfib() {\n    if [ $1 -eq 0 ]; then\n\
    \        echo 0\n    elif [ $1 -eq 1 ]; then\n        echo 0\n    elif [ $1 -eq\
    \ 2 ]; then\n        echo 1\n    else\n        echo $(( $(fibfib $(( $1 - 1 )))\
    \ + $(fibfib $(( $1 - 2 ))) + $(fibfib $(( $1 - 3 ))) ))\n    fi\n}\n\ncandidate()\
    \ {\n    fibfib \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"2\") =\
    \ \"1\" ]]\n    [[ $(candidate \"1\") = \"0\" ]]\n    [[ $(candidate \"5\") =\
    \ \"4\" ]]\n    [[ $(candidate \"8\") = \"24\" ]]\n    [[ $(candidate \"10\")\
    \ = \"81\" ]]\n    [[ $(candidate \"12\") = \"274\" ]]\n    [[ $(candidate \"\
    14\") = \"927\" ]]\n}\n\nrun_test"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660001140
- exit_code: 0
  program: "#!/bin/bash\n# The FibFib number sequence is a sequence similar to the\
    \ Fibbonacci sequnece that's defined as follows:\n# fibfib(0) == 0\n# fibfib(1)\
    \ == 0\n# fibfib(2) == 1\n# fibfib(n) == fibfib(n-1) + fibfib(n-2) + fibfib(n-3).\n\
    # Please write a function to efficiently compute the n-th element of the fibfib\
    \ number sequence.\n#\n# $1 is an integer\nfibfib() {\n  if [[ $1 -eq 0 ]]; then\n\
    \    echo 0\n  elif [[ $1 -eq 1 ]]; then\n    echo 0\n  elif [[ $1 -eq 2 ]]; then\n\
    \    echo 1\n  else\n    echo $(( $(fibfib $(( $1 - 1 ))) + $(fibfib $(( $1 -\
    \ 2 ))) + $(fibfib $(( $1 - 3 ))) ))\n  fi\n}\n\ncandidate() {\n    fibfib \"\
    $@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"2\") = \"1\" ]]\n    [[\
    \ $(candidate \"1\") = \"0\" ]]\n    [[ $(candidate \"5\") = \"4\" ]]\n    [[\
    \ $(candidate \"8\") = \"24\" ]]\n    [[ $(candidate \"10\") = \"81\" ]]\n   \
    \ [[ $(candidate \"12\") = \"274\" ]]\n    [[ $(candidate \"14\") = \"927\" ]]\n\
    }\n\nrun_test"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660001140
- exit_code: 0
  program: "#!/bin/bash\n# The FibFib number sequence is a sequence similar to the\
    \ Fibbonacci sequnece that's defined as follows:\n# fibfib(0) == 0\n# fibfib(1)\
    \ == 0\n# fibfib(2) == 1\n# fibfib(n) == fibfib(n-1) + fibfib(n-2) + fibfib(n-3).\n\
    # Please write a function to efficiently compute the n-th element of the fibfib\
    \ number sequence.\n#\n# $1 is an integer\nfibfib() {\n    if [ $1 -eq 0 ]; then\n\
    \        echo 0\n    elif [ $1 -eq 1 ]; then\n        echo 0\n    elif [ $1 -eq\
    \ 2 ]; then\n        echo 1\n    else\n        echo $(( $(fibfib $(( $1 - 1 )))\
    \ + $(fibfib $(( $1 - 2 ))) + $(fibfib $(( $1 - 3 ))) ))\n    fi\n}\n\ncandidate()\
    \ {\n    fibfib \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"2\") =\
    \ \"1\" ]]\n    [[ $(candidate \"1\") = \"0\" ]]\n    [[ $(candidate \"5\") =\
    \ \"4\" ]]\n    [[ $(candidate \"8\") = \"24\" ]]\n    [[ $(candidate \"10\")\
    \ = \"81\" ]]\n    [[ $(candidate \"12\") = \"274\" ]]\n    [[ $(candidate \"\
    14\") = \"927\" ]]\n}\n\nrun_test"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660001140
- exit_code: 0
  program: "#!/bin/bash\n# The FibFib number sequence is a sequence similar to the\
    \ Fibbonacci sequnece that's defined as follows:\n# fibfib(0) == 0\n# fibfib(1)\
    \ == 0\n# fibfib(2) == 1\n# fibfib(n) == fibfib(n-1) + fibfib(n-2) + fibfib(n-3).\n\
    # Please write a function to efficiently compute the n-th element of the fibfib\
    \ number sequence.\n#\n# $1 is an integer\nfibfib() {\n    if [ $1 -eq 0 ]; then\n\
    \        echo 0\n    elif [ $1 -eq 1 ]; then\n        echo 0\n    elif [ $1 -eq\
    \ 2 ]; then\n        echo 1\n    else\n        echo $(($(fibfib $(($1-1))) + $(fibfib\
    \ $(($1-2))) + $(fibfib $(($1-3)))))\n    fi\n}\n\ncandidate() {\n    fibfib \"\
    $@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"2\") = \"1\" ]]\n    [[\
    \ $(candidate \"1\") = \"0\" ]]\n    [[ $(candidate \"5\") = \"4\" ]]\n    [[\
    \ $(candidate \"8\") = \"24\" ]]\n    [[ $(candidate \"10\") = \"81\" ]]\n   \
    \ [[ $(candidate \"12\") = \"274\" ]]\n    [[ $(candidate \"14\") = \"927\" ]]\n\
    }\n\nrun_test"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660001140
- exit_code: 0
  program: "#!/bin/bash\n# The FibFib number sequence is a sequence similar to the\
    \ Fibbonacci sequnece that's defined as follows:\n# fibfib(0) == 0\n# fibfib(1)\
    \ == 0\n# fibfib(2) == 1\n# fibfib(n) == fibfib(n-1) + fibfib(n-2) + fibfib(n-3).\n\
    # Please write a function to efficiently compute the n-th element of the fibfib\
    \ number sequence.\n#\n# $1 is an integer\nfibfib() {\n    local n=$1\n    if\
    \ [ $n -eq 0 ]; then\n        echo 0\n    elif [ $n -eq 1 ]; then\n        echo\
    \ 0\n    elif [ $n -eq 2 ]; then\n        echo 1\n    else\n        echo $(( $(fibfib\
    \ $((n-1))) + $(fibfib $((n-2))) + $(fibfib $((n-3))) ))\n    fi\n}\n\ncandidate()\
    \ {\n    fibfib \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"2\") =\
    \ \"1\" ]]\n    [[ $(candidate \"1\") = \"0\" ]]\n    [[ $(candidate \"5\") =\
    \ \"4\" ]]\n    [[ $(candidate \"8\") = \"24\" ]]\n    [[ $(candidate \"10\")\
    \ = \"81\" ]]\n    [[ $(candidate \"12\") = \"274\" ]]\n    [[ $(candidate \"\
    14\") = \"927\" ]]\n}\n\nrun_test"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660001140
- exit_code: 0
  program: "#!/bin/bash\n# The FibFib number sequence is a sequence similar to the\
    \ Fibbonacci sequnece that's defined as follows:\n# fibfib(0) == 0\n# fibfib(1)\
    \ == 0\n# fibfib(2) == 1\n# fibfib(n) == fibfib(n-1) + fibfib(n-2) + fibfib(n-3).\n\
    # Please write a function to efficiently compute the n-th element of the fibfib\
    \ number sequence.\n#\n# $1 is an integer\nfibfib() {\n    if [ $1 -eq 0 ]; then\n\
    \        echo 0\n    elif [ $1 -eq 1 ]; then\n        echo 0\n    elif [ $1 -eq\
    \ 2 ]; then\n        echo 1\n    else\n        echo $(( $(fibfib $(( $1 - 1 )))\
    \ + $(fibfib $(( $1 - 2 ))) + $(fibfib $(( $1 - 3 ))) ))\n    fi\n}\n\ncandidate()\
    \ {\n    fibfib \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"2\") =\
    \ \"1\" ]]\n    [[ $(candidate \"1\") = \"0\" ]]\n    [[ $(candidate \"5\") =\
    \ \"4\" ]]\n    [[ $(candidate \"8\") = \"24\" ]]\n    [[ $(candidate \"10\")\
    \ = \"81\" ]]\n    [[ $(candidate \"12\") = \"274\" ]]\n    [[ $(candidate \"\
    14\") = \"927\" ]]\n}\n\nrun_test"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660001140
- exit_code: 0
  program: "#!/bin/bash\n# The FibFib number sequence is a sequence similar to the\
    \ Fibbonacci sequnece that's defined as follows:\n# fibfib(0) == 0\n# fibfib(1)\
    \ == 0\n# fibfib(2) == 1\n# fibfib(n) == fibfib(n-1) + fibfib(n-2) + fibfib(n-3).\n\
    # Please write a function to efficiently compute the n-th element of the fibfib\
    \ number sequence.\n#\n# $1 is an integer\nfibfib() {\n    if [ $1 -eq 0 ]; then\n\
    \        echo 0\n    elif [ $1 -eq 1 ]; then\n        echo 0\n    elif [ $1 -eq\
    \ 2 ]; then\n        echo 1\n    else\n        echo $(( $(fibfib $(( $1 - 1 )))\
    \ + $(fibfib $(( $1 - 2 ))) + $(fibfib $(( $1 - 3 ))) ))\n    fi\n}\n\ncandidate()\
    \ {\n    fibfib \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"2\") =\
    \ \"1\" ]]\n    [[ $(candidate \"1\") = \"0\" ]]\n    [[ $(candidate \"5\") =\
    \ \"4\" ]]\n    [[ $(candidate \"8\") = \"24\" ]]\n    [[ $(candidate \"10\")\
    \ = \"81\" ]]\n    [[ $(candidate \"12\") = \"274\" ]]\n    [[ $(candidate \"\
    14\") = \"927\" ]]\n}\n\nrun_test"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660001140
- exit_code: 0
  program: "#!/bin/bash\n# The FibFib number sequence is a sequence similar to the\
    \ Fibbonacci sequnece that's defined as follows:\n# fibfib(0) == 0\n# fibfib(1)\
    \ == 0\n# fibfib(2) == 1\n# fibfib(n) == fibfib(n-1) + fibfib(n-2) + fibfib(n-3).\n\
    # Please write a function to efficiently compute the n-th element of the fibfib\
    \ number sequence.\n#\n# $1 is an integer\nfibfib() {\n    if [ $1 -eq 0 ]; then\n\
    \        echo 0\n    elif [ $1 -eq 1 ]; then\n        echo 0\n    elif [ $1 -eq\
    \ 2 ]; then\n        echo 1\n    else\n        echo $(( $(fibfib $(( $1 - 1 )))\
    \ + $(fibfib $(( $1 - 2 ))) + $(fibfib $(( $1 - 3 ))) ))\n    fi\n}\n\ncandidate()\
    \ {\n    fibfib \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"2\") =\
    \ \"1\" ]]\n    [[ $(candidate \"1\") = \"0\" ]]\n    [[ $(candidate \"5\") =\
    \ \"4\" ]]\n    [[ $(candidate \"8\") = \"24\" ]]\n    [[ $(candidate \"10\")\
    \ = \"81\" ]]\n    [[ $(candidate \"12\") = \"274\" ]]\n    [[ $(candidate \"\
    14\") = \"927\" ]]\n}\n\nrun_test"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660001140
- exit_code: 0
  program: "#!/bin/bash\n# The FibFib number sequence is a sequence similar to the\
    \ Fibbonacci sequnece that's defined as follows:\n# fibfib(0) == 0\n# fibfib(1)\
    \ == 0\n# fibfib(2) == 1\n# fibfib(n) == fibfib(n-1) + fibfib(n-2) + fibfib(n-3).\n\
    # Please write a function to efficiently compute the n-th element of the fibfib\
    \ number sequence.\n#\n# $1 is an integer\nfibfib() {\n  if [ $1 -eq 0 ]; then\n\
    \    echo 0\n  elif [ $1 -eq 1 ]; then\n    echo 0\n  elif [ $1 -eq 2 ]; then\n\
    \    echo 1\n  else\n    echo $(( $(fibfib $(( $1 - 1 ))) + $(fibfib $(( $1 -\
    \ 2 ))) + $(fibfib $(( $1 - 3 ))) ))\n  fi\n}\n\ncandidate() {\n    fibfib \"\
    $@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"2\") = \"1\" ]]\n    [[\
    \ $(candidate \"1\") = \"0\" ]]\n    [[ $(candidate \"5\") = \"4\" ]]\n    [[\
    \ $(candidate \"8\") = \"24\" ]]\n    [[ $(candidate \"10\") = \"81\" ]]\n   \
    \ [[ $(candidate \"12\") = \"274\" ]]\n    [[ $(candidate \"14\") = \"927\" ]]\n\
    }\n\nrun_test"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660001140
- exit_code: 0
  program: "#!/bin/bash\n# The FibFib number sequence is a sequence similar to the\
    \ Fibbonacci sequnece that's defined as follows:\n# fibfib(0) == 0\n# fibfib(1)\
    \ == 0\n# fibfib(2) == 1\n# fibfib(n) == fibfib(n-1) + fibfib(n-2) + fibfib(n-3).\n\
    # Please write a function to efficiently compute the n-th element of the fibfib\
    \ number sequence.\n#\n# $1 is an integer\nfibfib() {\n    if [[ $1 -eq 0 ]];\
    \ then\n        echo 0\n    elif [[ $1 -eq 1 ]]; then\n        echo 0\n    elif\
    \ [[ $1 -eq 2 ]]; then\n        echo 1\n    else\n        echo $(($(fibfib $(($1-1)))\
    \ + $(fibfib $(($1-2))) + $(fibfib $(($1-3)))))\n    fi\n}\n\ncandidate() {\n\
    \    fibfib \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"2\") = \"\
    1\" ]]\n    [[ $(candidate \"1\") = \"0\" ]]\n    [[ $(candidate \"5\") = \"4\"\
    \ ]]\n    [[ $(candidate \"8\") = \"24\" ]]\n    [[ $(candidate \"10\") = \"81\"\
    \ ]]\n    [[ $(candidate \"12\") = \"274\" ]]\n    [[ $(candidate \"14\") = \"\
    927\" ]]\n}\n\nrun_test"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660001140
- exit_code: 0
  program: "#!/bin/bash\n# The FibFib number sequence is a sequence similar to the\
    \ Fibbonacci sequnece that's defined as follows:\n# fibfib(0) == 0\n# fibfib(1)\
    \ == 0\n# fibfib(2) == 1\n# fibfib(n) == fibfib(n-1) + fibfib(n-2) + fibfib(n-3).\n\
    # Please write a function to efficiently compute the n-th element of the fibfib\
    \ number sequence.\n#\n# $1 is an integer\nfibfib() {\n    if [[ $1 -eq 0 ]];\
    \ then\n        echo 0\n    elif [[ $1 -eq 1 ]]; then\n        echo 0\n    elif\
    \ [[ $1 -eq 2 ]]; then\n        echo 1\n    else\n        echo $(( $(fibfib $((\
    \ $1 - 1 ))) + $(fibfib $(( $1 - 2 ))) + $(fibfib $(( $1 - 3 ))) ))\n    fi\n\
    }\n\ncandidate() {\n    fibfib \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate\
    \ \"2\") = \"1\" ]]\n    [[ $(candidate \"1\") = \"0\" ]]\n    [[ $(candidate\
    \ \"5\") = \"4\" ]]\n    [[ $(candidate \"8\") = \"24\" ]]\n    [[ $(candidate\
    \ \"10\") = \"81\" ]]\n    [[ $(candidate \"12\") = \"274\" ]]\n    [[ $(candidate\
    \ \"14\") = \"927\" ]]\n}\n\nrun_test"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660001140
- exit_code: 0
  program: "#!/bin/bash\n# The FibFib number sequence is a sequence similar to the\
    \ Fibbonacci sequnece that's defined as follows:\n# fibfib(0) == 0\n# fibfib(1)\
    \ == 0\n# fibfib(2) == 1\n# fibfib(n) == fibfib(n-1) + fibfib(n-2) + fibfib(n-3).\n\
    # Please write a function to efficiently compute the n-th element of the fibfib\
    \ number sequence.\n#\n# $1 is an integer\nfibfib() {\n    if [ $1 -eq 0 ]; then\n\
    \        echo 0\n    elif [ $1 -eq 1 ]; then\n        echo 0\n    elif [ $1 -eq\
    \ 2 ]; then\n        echo 1\n    else\n        echo $(( $(fibfib $(( $1 - 1 )))\
    \ + $(fibfib $(( $1 - 2 ))) + $(fibfib $(( $1 - 3 ))) ))\n    fi\n}\n\ncandidate()\
    \ {\n    fibfib \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"2\") =\
    \ \"1\" ]]\n    [[ $(candidate \"1\") = \"0\" ]]\n    [[ $(candidate \"5\") =\
    \ \"4\" ]]\n    [[ $(candidate \"8\") = \"24\" ]]\n    [[ $(candidate \"10\")\
    \ = \"81\" ]]\n    [[ $(candidate \"12\") = \"274\" ]]\n    [[ $(candidate \"\
    14\") = \"927\" ]]\n}\n\nrun_test"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660001140
- exit_code: 0
  program: "#!/bin/bash\n# The FibFib number sequence is a sequence similar to the\
    \ Fibbonacci sequnece that's defined as follows:\n# fibfib(0) == 0\n# fibfib(1)\
    \ == 0\n# fibfib(2) == 1\n# fibfib(n) == fibfib(n-1) + fibfib(n-2) + fibfib(n-3).\n\
    # Please write a function to efficiently compute the n-th element of the fibfib\
    \ number sequence.\n#\n# $1 is an integer\nfibfib() {\n    if [ $1 -eq 0 ]; then\n\
    \        echo 0\n    elif [ $1 -eq 1 ]; then\n        echo 0\n    elif [ $1 -eq\
    \ 2 ]; then\n        echo 1\n    else\n        echo $(( $(fibfib $(( $1 - 1 )))\
    \ + $(fibfib $(( $1 - 2 ))) + $(fibfib $(( $1 - 3 ))) ))\n    fi\n}\n\ncandidate()\
    \ {\n    fibfib \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"2\") =\
    \ \"1\" ]]\n    [[ $(candidate \"1\") = \"0\" ]]\n    [[ $(candidate \"5\") =\
    \ \"4\" ]]\n    [[ $(candidate \"8\") = \"24\" ]]\n    [[ $(candidate \"10\")\
    \ = \"81\" ]]\n    [[ $(candidate \"12\") = \"274\" ]]\n    [[ $(candidate \"\
    14\") = \"927\" ]]\n}\n\nrun_test"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660001140
- exit_code: 0
  program: "#!/bin/bash\n# The FibFib number sequence is a sequence similar to the\
    \ Fibbonacci sequnece that's defined as follows:\n# fibfib(0) == 0\n# fibfib(1)\
    \ == 0\n# fibfib(2) == 1\n# fibfib(n) == fibfib(n-1) + fibfib(n-2) + fibfib(n-3).\n\
    # Please write a function to efficiently compute the n-th element of the fibfib\
    \ number sequence.\n#\n# $1 is an integer\nfibfib() {\n  if [ $1 -eq 0 ]; then\n\
    \    echo 0\n  elif [ $1 -eq 1 ]; then\n    echo 0\n  elif [ $1 -eq 2 ]; then\n\
    \    echo 1\n  else\n    echo $(($(fibfib $(($1-1))) + $(fibfib $(($1-2))) + $(fibfib\
    \ $(($1-3)))))\n  fi\n}\n\ncandidate() {\n    fibfib \"$@\"\n}\n\nset -e\nrun_test()\
    \ {\n    [[ $(candidate \"2\") = \"1\" ]]\n    [[ $(candidate \"1\") = \"0\" ]]\n\
    \    [[ $(candidate \"5\") = \"4\" ]]\n    [[ $(candidate \"8\") = \"24\" ]]\n\
    \    [[ $(candidate \"10\") = \"81\" ]]\n    [[ $(candidate \"12\") = \"274\"\
    \ ]]\n    [[ $(candidate \"14\") = \"927\" ]]\n}\n\nrun_test"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660001140
- exit_code: 0
  program: "#!/bin/bash\n# The FibFib number sequence is a sequence similar to the\
    \ Fibbonacci sequnece that's defined as follows:\n# fibfib(0) == 0\n# fibfib(1)\
    \ == 0\n# fibfib(2) == 1\n# fibfib(n) == fibfib(n-1) + fibfib(n-2) + fibfib(n-3).\n\
    # Please write a function to efficiently compute the n-th element of the fibfib\
    \ number sequence.\n#\n# $1 is an integer\nfibfib() {\n  if [ $1 -eq 0 ]; then\n\
    \    echo 0\n  elif [ $1 -eq 1 ]; then\n    echo 0\n  elif [ $1 -eq 2 ]; then\n\
    \    echo 1\n  else\n    echo $(( $(fibfib $(( $1 - 1 ))) + $(fibfib $(( $1 -\
    \ 2 ))) + $(fibfib $(( $1 - 3 ))) ))\n  fi\n}\n\ncandidate() {\n    fibfib \"\
    $@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"2\") = \"1\" ]]\n    [[\
    \ $(candidate \"1\") = \"0\" ]]\n    [[ $(candidate \"5\") = \"4\" ]]\n    [[\
    \ $(candidate \"8\") = \"24\" ]]\n    [[ $(candidate \"10\") = \"81\" ]]\n   \
    \ [[ $(candidate \"12\") = \"274\" ]]\n    [[ $(candidate \"14\") = \"927\" ]]\n\
    }\n\nrun_test"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660001140
- exit_code: 0
  program: "#!/bin/bash\n# The FibFib number sequence is a sequence similar to the\
    \ Fibbonacci sequnece that's defined as follows:\n# fibfib(0) == 0\n# fibfib(1)\
    \ == 0\n# fibfib(2) == 1\n# fibfib(n) == fibfib(n-1) + fibfib(n-2) + fibfib(n-3).\n\
    # Please write a function to efficiently compute the n-th element of the fibfib\
    \ number sequence.\n#\n# $1 is an integer\nfibfib() {\n    if [ $1 -eq 0 ]; then\n\
    \        echo 0\n    elif [ $1 -eq 1 ]; then\n        echo 0\n    elif [ $1 -eq\
    \ 2 ]; then\n        echo 1\n    else\n        echo $(( $(fibfib $(( $1 - 1 )))\
    \ + $(fibfib $(( $1 - 2 ))) + $(fibfib $(( $1 - 3 ))) ))\n    fi\n}\n\ncandidate()\
    \ {\n    fibfib \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"2\") =\
    \ \"1\" ]]\n    [[ $(candidate \"1\") = \"0\" ]]\n    [[ $(candidate \"5\") =\
    \ \"4\" ]]\n    [[ $(candidate \"8\") = \"24\" ]]\n    [[ $(candidate \"10\")\
    \ = \"81\" ]]\n    [[ $(candidate \"12\") = \"274\" ]]\n    [[ $(candidate \"\
    14\") = \"927\" ]]\n}\n\nrun_test"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660001140
- exit_code: 0
  program: "#!/bin/bash\n# The FibFib number sequence is a sequence similar to the\
    \ Fibbonacci sequnece that's defined as follows:\n# fibfib(0) == 0\n# fibfib(1)\
    \ == 0\n# fibfib(2) == 1\n# fibfib(n) == fibfib(n-1) + fibfib(n-2) + fibfib(n-3).\n\
    # Please write a function to efficiently compute the n-th element of the fibfib\
    \ number sequence.\n#\n# $1 is an integer\nfibfib() {\n    if [[ $1 -eq 0 ]];\
    \ then\n        echo 0\n    elif [[ $1 -eq 1 ]]; then\n        echo 0\n    elif\
    \ [[ $1 -eq 2 ]]; then\n        echo 1\n    else\n        echo $(( $(fibfib $((\
    \ $1 - 1 ))) + $(fibfib $(( $1 - 2 ))) + $(fibfib $(( $1 - 3 ))) ))\n    fi\n\
    }\n\ncandidate() {\n    fibfib \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate\
    \ \"2\") = \"1\" ]]\n    [[ $(candidate \"1\") = \"0\" ]]\n    [[ $(candidate\
    \ \"5\") = \"4\" ]]\n    [[ $(candidate \"8\") = \"24\" ]]\n    [[ $(candidate\
    \ \"10\") = \"81\" ]]\n    [[ $(candidate \"12\") = \"274\" ]]\n    [[ $(candidate\
    \ \"14\") = \"927\" ]]\n}\n\nrun_test"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660001140
- exit_code: 0
  program: "#!/bin/bash\n# The FibFib number sequence is a sequence similar to the\
    \ Fibbonacci sequnece that's defined as follows:\n# fibfib(0) == 0\n# fibfib(1)\
    \ == 0\n# fibfib(2) == 1\n# fibfib(n) == fibfib(n-1) + fibfib(n-2) + fibfib(n-3).\n\
    # Please write a function to efficiently compute the n-th element of the fibfib\
    \ number sequence.\n#\n# $1 is an integer\nfibfib() {\n    if [ $1 -eq 0 ]; then\n\
    \        echo 0\n    elif [ $1 -eq 1 ]; then\n        echo 0\n    elif [ $1 -eq\
    \ 2 ]; then\n        echo 1\n    else\n        echo $(( $(fibfib $(( $1 - 1 )))\
    \ + $(fibfib $(( $1 - 2 ))) + $(fibfib $(( $1 - 3 ))) ))\n    fi\n}\n\ncandidate()\
    \ {\n    fibfib \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"2\") =\
    \ \"1\" ]]\n    [[ $(candidate \"1\") = \"0\" ]]\n    [[ $(candidate \"5\") =\
    \ \"4\" ]]\n    [[ $(candidate \"8\") = \"24\" ]]\n    [[ $(candidate \"10\")\
    \ = \"81\" ]]\n    [[ $(candidate \"12\") = \"274\" ]]\n    [[ $(candidate \"\
    14\") = \"927\" ]]\n}\n\nrun_test"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660001140
- exit_code: 0
  program: "#!/bin/bash\n# The FibFib number sequence is a sequence similar to the\
    \ Fibbonacci sequnece that's defined as follows:\n# fibfib(0) == 0\n# fibfib(1)\
    \ == 0\n# fibfib(2) == 1\n# fibfib(n) == fibfib(n-1) + fibfib(n-2) + fibfib(n-3).\n\
    # Please write a function to efficiently compute the n-th element of the fibfib\
    \ number sequence.\n#\n# $1 is an integer\nfibfib() {\n    local n=$1\n    local\
    \ a=0\n    local b=0\n    local c=1\n    local d=0\n    while [ $n -gt 0 ]; do\n\
    \        d=$((a+b+c))\n        a=$b\n        b=$c\n        c=$d\n        n=$((n-1))\n\
    \    done\n    echo $a\n}\n\ncandidate() {\n    fibfib \"$@\"\n}\n\nset -e\nrun_test()\
    \ {\n    [[ $(candidate \"2\") = \"1\" ]]\n    [[ $(candidate \"1\") = \"0\" ]]\n\
    \    [[ $(candidate \"5\") = \"4\" ]]\n    [[ $(candidate \"8\") = \"24\" ]]\n\
    \    [[ $(candidate \"10\") = \"81\" ]]\n    [[ $(candidate \"12\") = \"274\"\
    \ ]]\n    [[ $(candidate \"14\") = \"927\" ]]\n}\n\nrun_test"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660001136
- exit_code: 0
  program: "#!/bin/bash\n# The FibFib number sequence is a sequence similar to the\
    \ Fibbonacci sequnece that's defined as follows:\n# fibfib(0) == 0\n# fibfib(1)\
    \ == 0\n# fibfib(2) == 1\n# fibfib(n) == fibfib(n-1) + fibfib(n-2) + fibfib(n-3).\n\
    # Please write a function to efficiently compute the n-th element of the fibfib\
    \ number sequence.\n#\n# $1 is an integer\nfibfib() {\n    if [ $1 -eq 0 ]; then\n\
    \        echo 0\n    elif [ $1 -eq 1 ]; then\n        echo 0\n    elif [ $1 -eq\
    \ 2 ]; then\n        echo 1\n    else\n        echo $(( $(fibfib $(( $1 - 1 )))\
    \ + $(fibfib $(( $1 - 2 ))) + $(fibfib $(( $1 - 3 ))) ))\n    fi\n}\n\ncandidate()\
    \ {\n    fibfib \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"2\") =\
    \ \"1\" ]]\n    [[ $(candidate \"1\") = \"0\" ]]\n    [[ $(candidate \"5\") =\
    \ \"4\" ]]\n    [[ $(candidate \"8\") = \"24\" ]]\n    [[ $(candidate \"10\")\
    \ = \"81\" ]]\n    [[ $(candidate \"12\") = \"274\" ]]\n    [[ $(candidate \"\
    14\") = \"927\" ]]\n}\n\nrun_test"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660001140
- exit_code: 0
  program: "#!/bin/bash\n# The FibFib number sequence is a sequence similar to the\
    \ Fibbonacci sequnece that's defined as follows:\n# fibfib(0) == 0\n# fibfib(1)\
    \ == 0\n# fibfib(2) == 1\n# fibfib(n) == fibfib(n-1) + fibfib(n-2) + fibfib(n-3).\n\
    # Please write a function to efficiently compute the n-th element of the fibfib\
    \ number sequence.\n#\n# $1 is an integer\nfibfib() {\n    if [ $1 -eq 0 ]; then\n\
    \        echo 0\n    elif [ $1 -eq 1 ]; then\n        echo 0\n    elif [ $1 -eq\
    \ 2 ]; then\n        echo 1\n    else\n        echo $(( $(fibfib $(( $1 - 1 )))\
    \ + $(fibfib $(( $1 - 2 ))) + $(fibfib $(( $1 - 3 ))) ))\n    fi\n}\n\ncandidate()\
    \ {\n    fibfib \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"2\") =\
    \ \"1\" ]]\n    [[ $(candidate \"1\") = \"0\" ]]\n    [[ $(candidate \"5\") =\
    \ \"4\" ]]\n    [[ $(candidate \"8\") = \"24\" ]]\n    [[ $(candidate \"10\")\
    \ = \"81\" ]]\n    [[ $(candidate \"12\") = \"274\" ]]\n    [[ $(candidate \"\
    14\") = \"927\" ]]\n}\n\nrun_test"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660001140
- exit_code: 0
  program: "#!/bin/bash\n# The FibFib number sequence is a sequence similar to the\
    \ Fibbonacci sequnece that's defined as follows:\n# fibfib(0) == 0\n# fibfib(1)\
    \ == 0\n# fibfib(2) == 1\n# fibfib(n) == fibfib(n-1) + fibfib(n-2) + fibfib(n-3).\n\
    # Please write a function to efficiently compute the n-th element of the fibfib\
    \ number sequence.\n#\n# $1 is an integer\nfibfib() {\n    if [ $1 -eq 0 ]; then\n\
    \        echo 0\n    elif [ $1 -eq 1 ]; then\n        echo 0\n    elif [ $1 -eq\
    \ 2 ]; then\n        echo 1\n    else\n        echo $(( $(fibfib $(( $1 - 1 )))\
    \ + $(fibfib $(( $1 - 2 ))) + $(fibfib $(( $1 - 3 ))) ))\n    fi\n}\n\ncandidate()\
    \ {\n    fibfib \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"2\") =\
    \ \"1\" ]]\n    [[ $(candidate \"1\") = \"0\" ]]\n    [[ $(candidate \"5\") =\
    \ \"4\" ]]\n    [[ $(candidate \"8\") = \"24\" ]]\n    [[ $(candidate \"10\")\
    \ = \"81\" ]]\n    [[ $(candidate \"12\") = \"274\" ]]\n    [[ $(candidate \"\
    14\") = \"927\" ]]\n}\n\nrun_test"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660001140
- exit_code: 0
  program: "#!/bin/bash\n# The FibFib number sequence is a sequence similar to the\
    \ Fibbonacci sequnece that's defined as follows:\n# fibfib(0) == 0\n# fibfib(1)\
    \ == 0\n# fibfib(2) == 1\n# fibfib(n) == fibfib(n-1) + fibfib(n-2) + fibfib(n-3).\n\
    # Please write a function to efficiently compute the n-th element of the fibfib\
    \ number sequence.\n#\n# $1 is an integer\nfibfib() {\n  if [ $1 -eq 0 ]; then\n\
    \    echo 0\n  elif [ $1 -eq 1 ]; then\n    echo 0\n  elif [ $1 -eq 2 ]; then\n\
    \    echo 1\n  else\n    echo $(($(fibfib $(($1-1))) + $(fibfib $(($1-2))) + $(fibfib\
    \ $(($1-3)))))\n  fi\n}\n\ncandidate() {\n    fibfib \"$@\"\n}\n\nset -e\nrun_test()\
    \ {\n    [[ $(candidate \"2\") = \"1\" ]]\n    [[ $(candidate \"1\") = \"0\" ]]\n\
    \    [[ $(candidate \"5\") = \"4\" ]]\n    [[ $(candidate \"8\") = \"24\" ]]\n\
    \    [[ $(candidate \"10\") = \"81\" ]]\n    [[ $(candidate \"12\") = \"274\"\
    \ ]]\n    [[ $(candidate \"14\") = \"927\" ]]\n}\n\nrun_test"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660001140
- exit_code: 0
  program: "#!/bin/bash\n# The FibFib number sequence is a sequence similar to the\
    \ Fibbonacci sequnece that's defined as follows:\n# fibfib(0) == 0\n# fibfib(1)\
    \ == 0\n# fibfib(2) == 1\n# fibfib(n) == fibfib(n-1) + fibfib(n-2) + fibfib(n-3).\n\
    # Please write a function to efficiently compute the n-th element of the fibfib\
    \ number sequence.\n#\n# $1 is an integer\nfibfib() {\n    if [ $1 -eq 0 ]; then\n\
    \        echo 0\n    elif [ $1 -eq 1 ]; then\n        echo 0\n    elif [ $1 -eq\
    \ 2 ]; then\n        echo 1\n    else\n        echo $(( $(fibfib $(( $1 - 1 )))\
    \ + $(fibfib $(( $1 - 2 ))) + $(fibfib $(( $1 - 3 ))) ))\n    fi\n}\n\ncandidate()\
    \ {\n    fibfib \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"2\") =\
    \ \"1\" ]]\n    [[ $(candidate \"1\") = \"0\" ]]\n    [[ $(candidate \"5\") =\
    \ \"4\" ]]\n    [[ $(candidate \"8\") = \"24\" ]]\n    [[ $(candidate \"10\")\
    \ = \"81\" ]]\n    [[ $(candidate \"12\") = \"274\" ]]\n    [[ $(candidate \"\
    14\") = \"927\" ]]\n}\n\nrun_test"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660001140
- exit_code: 0
  program: "#!/bin/bash\n# The FibFib number sequence is a sequence similar to the\
    \ Fibbonacci sequnece that's defined as follows:\n# fibfib(0) == 0\n# fibfib(1)\
    \ == 0\n# fibfib(2) == 1\n# fibfib(n) == fibfib(n-1) + fibfib(n-2) + fibfib(n-3).\n\
    # Please write a function to efficiently compute the n-th element of the fibfib\
    \ number sequence.\n#\n# $1 is an integer\nfibfib() {\n    if [ $1 -eq 0 ]; then\n\
    \        echo 0\n    elif [ $1 -eq 1 ]; then\n        echo 0\n    elif [ $1 -eq\
    \ 2 ]; then\n        echo 1\n    else\n        echo $(( $(fibfib $(( $1 - 1 )))\
    \ + $(fibfib $(( $1 - 2 ))) + $(fibfib $(( $1 - 3 ))) ))\n    fi\n}\n\ncandidate()\
    \ {\n    fibfib \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"2\") =\
    \ \"1\" ]]\n    [[ $(candidate \"1\") = \"0\" ]]\n    [[ $(candidate \"5\") =\
    \ \"4\" ]]\n    [[ $(candidate \"8\") = \"24\" ]]\n    [[ $(candidate \"10\")\
    \ = \"81\" ]]\n    [[ $(candidate \"12\") = \"274\" ]]\n    [[ $(candidate \"\
    14\") = \"927\" ]]\n}\n\nrun_test"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660001140
- exit_code: 0
  program: "#!/bin/bash\n# The FibFib number sequence is a sequence similar to the\
    \ Fibbonacci sequnece that's defined as follows:\n# fibfib(0) == 0\n# fibfib(1)\
    \ == 0\n# fibfib(2) == 1\n# fibfib(n) == fibfib(n-1) + fibfib(n-2) + fibfib(n-3).\n\
    # Please write a function to efficiently compute the n-th element of the fibfib\
    \ number sequence.\n#\n# $1 is an integer\nfibfib() {\n  if [ $1 -eq 0 ]; then\n\
    \    echo 0\n  elif [ $1 -eq 1 ]; then\n    echo 0\n  elif [ $1 -eq 2 ]; then\n\
    \    echo 1\n  else\n    echo $(( $(fibfib $(( $1 - 1 ))) + $(fibfib $(( $1 -\
    \ 2 ))) + $(fibfib $(( $1 - 3 ))) ))\n  fi\n}\n\ncandidate() {\n    fibfib \"\
    $@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"2\") = \"1\" ]]\n    [[\
    \ $(candidate \"1\") = \"0\" ]]\n    [[ $(candidate \"5\") = \"4\" ]]\n    [[\
    \ $(candidate \"8\") = \"24\" ]]\n    [[ $(candidate \"10\") = \"81\" ]]\n   \
    \ [[ $(candidate \"12\") = \"274\" ]]\n    [[ $(candidate \"14\") = \"927\" ]]\n\
    }\n\nrun_test"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660001140
- exit_code: 0
  program: "#!/bin/bash\n# The FibFib number sequence is a sequence similar to the\
    \ Fibbonacci sequnece that's defined as follows:\n# fibfib(0) == 0\n# fibfib(1)\
    \ == 0\n# fibfib(2) == 1\n# fibfib(n) == fibfib(n-1) + fibfib(n-2) + fibfib(n-3).\n\
    # Please write a function to efficiently compute the n-th element of the fibfib\
    \ number sequence.\n#\n# $1 is an integer\nfibfib() {\n    local n=$1\n    local\
    \ a=0\n    local b=0\n    local c=1\n    local d=0\n    if [ $n -eq 0 ]; then\n\
    \        echo 0\n    elif [ $n -eq 1 ]; then\n        echo 0\n    elif [ $n -eq\
    \ 2 ]; then\n        echo 1\n    else\n        for (( i=3; i<=$n; i++ )); do\n\
    \            d=$((a+b+c))\n            a=$b\n            b=$c\n            c=$d\n\
    \        done\n        echo $d\n    fi\n}\n\ncandidate() {\n    fibfib \"$@\"\n\
    }\n\nset -e\nrun_test() {\n    [[ $(candidate \"2\") = \"1\" ]]\n    [[ $(candidate\
    \ \"1\") = \"0\" ]]\n    [[ $(candidate \"5\") = \"4\" ]]\n    [[ $(candidate\
    \ \"8\") = \"24\" ]]\n    [[ $(candidate \"10\") = \"81\" ]]\n    [[ $(candidate\
    \ \"12\") = \"274\" ]]\n    [[ $(candidate \"14\") = \"927\" ]]\n}\n\nrun_test"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660001136
- exit_code: 0
  program: "#!/bin/bash\n# The FibFib number sequence is a sequence similar to the\
    \ Fibbonacci sequnece that's defined as follows:\n# fibfib(0) == 0\n# fibfib(1)\
    \ == 0\n# fibfib(2) == 1\n# fibfib(n) == fibfib(n-1) + fibfib(n-2) + fibfib(n-3).\n\
    # Please write a function to efficiently compute the n-th element of the fibfib\
    \ number sequence.\n#\n# $1 is an integer\nfibfib() {\n    if [ $1 -eq 0 ]; then\n\
    \        echo 0\n    elif [ $1 -eq 1 ]; then\n        echo 0\n    elif [ $1 -eq\
    \ 2 ]; then\n        echo 1\n    else\n        echo $(( $(fibfib $(( $1 - 1 )))\
    \ + $(fibfib $(( $1 - 2 ))) + $(fibfib $(( $1 - 3 ))) ))\n    fi\n}\n\ncandidate()\
    \ {\n    fibfib \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"2\") =\
    \ \"1\" ]]\n    [[ $(candidate \"1\") = \"0\" ]]\n    [[ $(candidate \"5\") =\
    \ \"4\" ]]\n    [[ $(candidate \"8\") = \"24\" ]]\n    [[ $(candidate \"10\")\
    \ = \"81\" ]]\n    [[ $(candidate \"12\") = \"274\" ]]\n    [[ $(candidate \"\
    14\") = \"927\" ]]\n}\n\nrun_test"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660001140
- exit_code: 0
  program: "#!/bin/bash\n# The FibFib number sequence is a sequence similar to the\
    \ Fibbonacci sequnece that's defined as follows:\n# fibfib(0) == 0\n# fibfib(1)\
    \ == 0\n# fibfib(2) == 1\n# fibfib(n) == fibfib(n-1) + fibfib(n-2) + fibfib(n-3).\n\
    # Please write a function to efficiently compute the n-th element of the fibfib\
    \ number sequence.\n#\n# $1 is an integer\nfibfib() {\n    if [ $1 -eq 0 ]; then\n\
    \        echo 0\n    elif [ $1 -eq 1 ]; then\n        echo 0\n    elif [ $1 -eq\
    \ 2 ]; then\n        echo 1\n    else\n        echo $(( $(fibfib $(( $1 - 1 )))\
    \ + $(fibfib $(( $1 - 2 ))) + $(fibfib $(( $1 - 3 ))) ))\n    fi\n}\n\ncandidate()\
    \ {\n    fibfib \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"2\") =\
    \ \"1\" ]]\n    [[ $(candidate \"1\") = \"0\" ]]\n    [[ $(candidate \"5\") =\
    \ \"4\" ]]\n    [[ $(candidate \"8\") = \"24\" ]]\n    [[ $(candidate \"10\")\
    \ = \"81\" ]]\n    [[ $(candidate \"12\") = \"274\" ]]\n    [[ $(candidate \"\
    14\") = \"927\" ]]\n}\n\nrun_test"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660001140
- exit_code: 0
  program: "#!/bin/bash\n# The FibFib number sequence is a sequence similar to the\
    \ Fibbonacci sequnece that's defined as follows:\n# fibfib(0) == 0\n# fibfib(1)\
    \ == 0\n# fibfib(2) == 1\n# fibfib(n) == fibfib(n-1) + fibfib(n-2) + fibfib(n-3).\n\
    # Please write a function to efficiently compute the n-th element of the fibfib\
    \ number sequence.\n#\n# $1 is an integer\nfibfib() {\n  if [ $1 -eq 0 ]; then\n\
    \    echo 0\n  elif [ $1 -eq 1 ]; then\n    echo 0\n  elif [ $1 -eq 2 ]; then\n\
    \    echo 1\n  else\n    echo $(( $(fibfib $(( $1 - 1 ))) + $(fibfib $(( $1 -\
    \ 2 ))) + $(fibfib $(( $1 - 3 ))) ))\n  fi\n}\n\ncandidate() {\n    fibfib \"\
    $@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"2\") = \"1\" ]]\n    [[\
    \ $(candidate \"1\") = \"0\" ]]\n    [[ $(candidate \"5\") = \"4\" ]]\n    [[\
    \ $(candidate \"8\") = \"24\" ]]\n    [[ $(candidate \"10\") = \"81\" ]]\n   \
    \ [[ $(candidate \"12\") = \"274\" ]]\n    [[ $(candidate \"14\") = \"927\" ]]\n\
    }\n\nrun_test"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660001140
- exit_code: 0
  program: "#!/bin/bash\n# The FibFib number sequence is a sequence similar to the\
    \ Fibbonacci sequnece that's defined as follows:\n# fibfib(0) == 0\n# fibfib(1)\
    \ == 0\n# fibfib(2) == 1\n# fibfib(n) == fibfib(n-1) + fibfib(n-2) + fibfib(n-3).\n\
    # Please write a function to efficiently compute the n-th element of the fibfib\
    \ number sequence.\n#\n# $1 is an integer\nfibfib() {\n    if [ $1 -eq 0 ]; then\n\
    \        echo 0\n    elif [ $1 -eq 1 ]; then\n        echo 0\n    elif [ $1 -eq\
    \ 2 ]; then\n        echo 1\n    else\n        echo $(( $(fibfib $(( $1 - 1 )))\
    \ + $(fibfib $(( $1 - 2 ))) + $(fibfib $(( $1 - 3 ))) ))\n    fi\n}\n\ncandidate()\
    \ {\n    fibfib \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"2\") =\
    \ \"1\" ]]\n    [[ $(candidate \"1\") = \"0\" ]]\n    [[ $(candidate \"5\") =\
    \ \"4\" ]]\n    [[ $(candidate \"8\") = \"24\" ]]\n    [[ $(candidate \"10\")\
    \ = \"81\" ]]\n    [[ $(candidate \"12\") = \"274\" ]]\n    [[ $(candidate \"\
    14\") = \"927\" ]]\n}\n\nrun_test"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660001140
- exit_code: 0
  program: "#!/bin/bash\n# The FibFib number sequence is a sequence similar to the\
    \ Fibbonacci sequnece that's defined as follows:\n# fibfib(0) == 0\n# fibfib(1)\
    \ == 0\n# fibfib(2) == 1\n# fibfib(n) == fibfib(n-1) + fibfib(n-2) + fibfib(n-3).\n\
    # Please write a function to efficiently compute the n-th element of the fibfib\
    \ number sequence.\n#\n# $1 is an integer\nfibfib() {\n    if [ $1 -eq 0 ]; then\n\
    \        echo 0\n    elif [ $1 -eq 1 ]; then\n        echo 0\n    elif [ $1 -eq\
    \ 2 ]; then\n        echo 1\n    else\n        echo $(( $(fibfib $(( $1 - 1 )))\
    \ + $(fibfib $(( $1 - 2 ))) + $(fibfib $(( $1 - 3 ))) ))\n    fi\n}\n\ncandidate()\
    \ {\n    fibfib \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"2\") =\
    \ \"1\" ]]\n    [[ $(candidate \"1\") = \"0\" ]]\n    [[ $(candidate \"5\") =\
    \ \"4\" ]]\n    [[ $(candidate \"8\") = \"24\" ]]\n    [[ $(candidate \"10\")\
    \ = \"81\" ]]\n    [[ $(candidate \"12\") = \"274\" ]]\n    [[ $(candidate \"\
    14\") = \"927\" ]]\n}\n\nrun_test"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660001140
- exit_code: 0
  program: "#!/bin/bash\n# The FibFib number sequence is a sequence similar to the\
    \ Fibbonacci sequnece that's defined as follows:\n# fibfib(0) == 0\n# fibfib(1)\
    \ == 0\n# fibfib(2) == 1\n# fibfib(n) == fibfib(n-1) + fibfib(n-2) + fibfib(n-3).\n\
    # Please write a function to efficiently compute the n-th element of the fibfib\
    \ number sequence.\n#\n# $1 is an integer\nfibfib() {\n    if [ $1 -eq 0 ]; then\n\
    \        echo 0\n    elif [ $1 -eq 1 ]; then\n        echo 0\n    elif [ $1 -eq\
    \ 2 ]; then\n        echo 1\n    else\n        echo $(( $(fibfib $(( $1 - 1 )))\
    \ + $(fibfib $(( $1 - 2 ))) + $(fibfib $(( $1 - 3 ))) ))\n    fi\n}\n\ncandidate()\
    \ {\n    fibfib \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"2\") =\
    \ \"1\" ]]\n    [[ $(candidate \"1\") = \"0\" ]]\n    [[ $(candidate \"5\") =\
    \ \"4\" ]]\n    [[ $(candidate \"8\") = \"24\" ]]\n    [[ $(candidate \"10\")\
    \ = \"81\" ]]\n    [[ $(candidate \"12\") = \"274\" ]]\n    [[ $(candidate \"\
    14\") = \"927\" ]]\n}\n\nrun_test"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660001140
- exit_code: 1
  program: "#!/bin/bash\n# The FibFib number sequence is a sequence similar to the\
    \ Fibbonacci sequnece that's defined as follows:\n# fibfib(0) == 0\n# fibfib(1)\
    \ == 0\n# fibfib(2) == 1\n# fibfib(n) == fibfib(n-1) + fibfib(n-2) + fibfib(n-3).\n\
    # Please write a function to efficiently compute the n-th element of the fibfib\
    \ number sequence.\n#\n# $1 is an integer\nfibfib() {\n    local n=$1\n    local\
    \ a=0\n    local b=0\n    local c=1\n    local d=0\n    local i=2\n    while [\
    \ $i -le $n ]; do\n        let d=a+b+c\n        let a=b\n        let b=c\n   \
    \     let c=d\n        let i=i+1\n    done\n    echo $d\n}\n\ncandidate() {\n\
    \    fibfib \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"2\") = \"\
    1\" ]]\n    [[ $(candidate \"1\") = \"0\" ]]\n    [[ $(candidate \"5\") = \"4\"\
    \ ]]\n    [[ $(candidate \"8\") = \"24\" ]]\n    [[ $(candidate \"10\") = \"81\"\
    \ ]]\n    [[ $(candidate \"12\") = \"274\" ]]\n    [[ $(candidate \"14\") = \"\
    927\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660001136
- exit_code: 0
  program: "#!/bin/bash\n# The FibFib number sequence is a sequence similar to the\
    \ Fibbonacci sequnece that's defined as follows:\n# fibfib(0) == 0\n# fibfib(1)\
    \ == 0\n# fibfib(2) == 1\n# fibfib(n) == fibfib(n-1) + fibfib(n-2) + fibfib(n-3).\n\
    # Please write a function to efficiently compute the n-th element of the fibfib\
    \ number sequence.\n#\n# $1 is an integer\nfibfib() {\n    if [[ $1 -eq 0 ]];\
    \ then\n        echo 0\n    elif [[ $1 -eq 1 ]]; then\n        echo 0\n    elif\
    \ [[ $1 -eq 2 ]]; then\n        echo 1\n    else\n        echo $(($(fibfib $(($1-1)))\
    \ + $(fibfib $(($1-2))) + $(fibfib $(($1-3)))))\n    fi\n}\n\ncandidate() {\n\
    \    fibfib \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"2\") = \"\
    1\" ]]\n    [[ $(candidate \"1\") = \"0\" ]]\n    [[ $(candidate \"5\") = \"4\"\
    \ ]]\n    [[ $(candidate \"8\") = \"24\" ]]\n    [[ $(candidate \"10\") = \"81\"\
    \ ]]\n    [[ $(candidate \"12\") = \"274\" ]]\n    [[ $(candidate \"14\") = \"\
    927\" ]]\n}\n\nrun_test"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660001140
- exit_code: 0
  program: "#!/bin/bash\n# The FibFib number sequence is a sequence similar to the\
    \ Fibbonacci sequnece that's defined as follows:\n# fibfib(0) == 0\n# fibfib(1)\
    \ == 0\n# fibfib(2) == 1\n# fibfib(n) == fibfib(n-1) + fibfib(n-2) + fibfib(n-3).\n\
    # Please write a function to efficiently compute the n-th element of the fibfib\
    \ number sequence.\n#\n# $1 is an integer\nfibfib() {\n    if [ $1 -eq 0 ]; then\n\
    \        echo 0\n    elif [ $1 -eq 1 ]; then\n        echo 0\n    elif [ $1 -eq\
    \ 2 ]; then\n        echo 1\n    else\n        echo $(( $(fibfib $(( $1 - 1 )))\
    \ + $(fibfib $(( $1 - 2 ))) + $(fibfib $(( $1 - 3 ))) ))\n    fi\n}\n\ncandidate()\
    \ {\n    fibfib \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"2\") =\
    \ \"1\" ]]\n    [[ $(candidate \"1\") = \"0\" ]]\n    [[ $(candidate \"5\") =\
    \ \"4\" ]]\n    [[ $(candidate \"8\") = \"24\" ]]\n    [[ $(candidate \"10\")\
    \ = \"81\" ]]\n    [[ $(candidate \"12\") = \"274\" ]]\n    [[ $(candidate \"\
    14\") = \"927\" ]]\n}\n\nrun_test"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660001140
- exit_code: 1
  program: "#!/bin/bash\n# The FibFib number sequence is a sequence similar to the\
    \ Fibbonacci sequnece that's defined as follows:\n# fibfib(0) == 0\n# fibfib(1)\
    \ == 0\n# fibfib(2) == 1\n# fibfib(n) == fibfib(n-1) + fibfib(n-2) + fibfib(n-3).\n\
    # Please write a function to efficiently compute the n-th element of the fibfib\
    \ number sequence.\n#\n# $1 is an integer\nfibfib() {\n    local n=$1\n    local\
    \ a=0\n    local b=0\n    local c=1\n    local d=0\n    local i=2\n    while [\
    \ $i -le $n ]; do\n        d=$((a+b+c))\n        a=$b\n        b=$c\n        c=$d\n\
    \        i=$((i+1))\n    done\n    echo $d\n}\n\ncandidate() {\n    fibfib \"\
    $@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"2\") = \"1\" ]]\n    [[\
    \ $(candidate \"1\") = \"0\" ]]\n    [[ $(candidate \"5\") = \"4\" ]]\n    [[\
    \ $(candidate \"8\") = \"24\" ]]\n    [[ $(candidate \"10\") = \"81\" ]]\n   \
    \ [[ $(candidate \"12\") = \"274\" ]]\n    [[ $(candidate \"14\") = \"927\" ]]\n\
    }\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660001136
- exit_code: 0
  program: "#!/bin/bash\n# The FibFib number sequence is a sequence similar to the\
    \ Fibbonacci sequnece that's defined as follows:\n# fibfib(0) == 0\n# fibfib(1)\
    \ == 0\n# fibfib(2) == 1\n# fibfib(n) == fibfib(n-1) + fibfib(n-2) + fibfib(n-3).\n\
    # Please write a function to efficiently compute the n-th element of the fibfib\
    \ number sequence.\n#\n# $1 is an integer\nfibfib() {\n  if [ $1 -eq 0 ]; then\n\
    \    echo 0\n  elif [ $1 -eq 1 ]; then\n    echo 0\n  elif [ $1 -eq 2 ]; then\n\
    \    echo 1\n  else\n    echo $(( $(fibfib $(( $1 - 1 ))) + $(fibfib $(( $1 -\
    \ 2 ))) + $(fibfib $(( $1 - 3 ))) ))\n  fi\n}\n\ncandidate() {\n    fibfib \"\
    $@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"2\") = \"1\" ]]\n    [[\
    \ $(candidate \"1\") = \"0\" ]]\n    [[ $(candidate \"5\") = \"4\" ]]\n    [[\
    \ $(candidate \"8\") = \"24\" ]]\n    [[ $(candidate \"10\") = \"81\" ]]\n   \
    \ [[ $(candidate \"12\") = \"274\" ]]\n    [[ $(candidate \"14\") = \"927\" ]]\n\
    }\n\nrun_test"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660001140
- exit_code: 0
  program: "#!/bin/bash\n# The FibFib number sequence is a sequence similar to the\
    \ Fibbonacci sequnece that's defined as follows:\n# fibfib(0) == 0\n# fibfib(1)\
    \ == 0\n# fibfib(2) == 1\n# fibfib(n) == fibfib(n-1) + fibfib(n-2) + fibfib(n-3).\n\
    # Please write a function to efficiently compute the n-th element of the fibfib\
    \ number sequence.\n#\n# $1 is an integer\nfibfib() {\n  if [ $1 -eq 0 ]; then\n\
    \    echo 0\n  elif [ $1 -eq 1 ]; then\n    echo 0\n  elif [ $1 -eq 2 ]; then\n\
    \    echo 1\n  else\n    echo $(( $(fibfib $(( $1 - 1 ))) + $(fibfib $(( $1 -\
    \ 2 ))) + $(fibfib $(( $1 - 3 ))) ))\n  fi\n}\n\ncandidate() {\n    fibfib \"\
    $@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"2\") = \"1\" ]]\n    [[\
    \ $(candidate \"1\") = \"0\" ]]\n    [[ $(candidate \"5\") = \"4\" ]]\n    [[\
    \ $(candidate \"8\") = \"24\" ]]\n    [[ $(candidate \"10\") = \"81\" ]]\n   \
    \ [[ $(candidate \"12\") = \"274\" ]]\n    [[ $(candidate \"14\") = \"927\" ]]\n\
    }\n\nrun_test"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660001140
- exit_code: 0
  program: "#!/bin/bash\n# The FibFib number sequence is a sequence similar to the\
    \ Fibbonacci sequnece that's defined as follows:\n# fibfib(0) == 0\n# fibfib(1)\
    \ == 0\n# fibfib(2) == 1\n# fibfib(n) == fibfib(n-1) + fibfib(n-2) + fibfib(n-3).\n\
    # Please write a function to efficiently compute the n-th element of the fibfib\
    \ number sequence.\n#\n# $1 is an integer\nfibfib() {\n\tif [ $1 -eq 0 ]; then\n\
    \t\techo 0\n\telif [ $1 -eq 1 ]; then\n\t\techo 0\n\telif [ $1 -eq 2 ]; then\n\
    \t\techo 1\n\telse\n\t\techo $(($(fibfib $(($1-1))) + $(fibfib $(($1-2))) + $(fibfib\
    \ $(($1-3)))))\n\tfi\n}\n\ncandidate() {\n    fibfib \"$@\"\n}\n\nset -e\nrun_test()\
    \ {\n    [[ $(candidate \"2\") = \"1\" ]]\n    [[ $(candidate \"1\") = \"0\" ]]\n\
    \    [[ $(candidate \"5\") = \"4\" ]]\n    [[ $(candidate \"8\") = \"24\" ]]\n\
    \    [[ $(candidate \"10\") = \"81\" ]]\n    [[ $(candidate \"12\") = \"274\"\
    \ ]]\n    [[ $(candidate \"14\") = \"927\" ]]\n}\n\nrun_test"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660001140
- exit_code: 0
  program: "#!/bin/bash\n# The FibFib number sequence is a sequence similar to the\
    \ Fibbonacci sequnece that's defined as follows:\n# fibfib(0) == 0\n# fibfib(1)\
    \ == 0\n# fibfib(2) == 1\n# fibfib(n) == fibfib(n-1) + fibfib(n-2) + fibfib(n-3).\n\
    # Please write a function to efficiently compute the n-th element of the fibfib\
    \ number sequence.\n#\n# $1 is an integer\nfibfib() {\n  if [ $1 -eq 0 ]; then\n\
    \    echo 0\n  elif [ $1 -eq 1 ]; then\n    echo 0\n  elif [ $1 -eq 2 ]; then\n\
    \    echo 1\n  else\n    echo $(( $(fibfib $(( $1 - 1 ))) + $(fibfib $(( $1 -\
    \ 2 ))) + $(fibfib $(( $1 - 3 ))) ))\n  fi\n}\n\ncandidate() {\n    fibfib \"\
    $@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"2\") = \"1\" ]]\n    [[\
    \ $(candidate \"1\") = \"0\" ]]\n    [[ $(candidate \"5\") = \"4\" ]]\n    [[\
    \ $(candidate \"8\") = \"24\" ]]\n    [[ $(candidate \"10\") = \"81\" ]]\n   \
    \ [[ $(candidate \"12\") = \"274\" ]]\n    [[ $(candidate \"14\") = \"927\" ]]\n\
    }\n\nrun_test"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660001140
- exit_code: 0
  program: "#!/bin/bash\n# The FibFib number sequence is a sequence similar to the\
    \ Fibbonacci sequnece that's defined as follows:\n# fibfib(0) == 0\n# fibfib(1)\
    \ == 0\n# fibfib(2) == 1\n# fibfib(n) == fibfib(n-1) + fibfib(n-2) + fibfib(n-3).\n\
    # Please write a function to efficiently compute the n-th element of the fibfib\
    \ number sequence.\n#\n# $1 is an integer\nfibfib() {\n  if [ $1 -eq 0 ]; then\n\
    \    echo 0\n  elif [ $1 -eq 1 ]; then\n    echo 0\n  elif [ $1 -eq 2 ]; then\n\
    \    echo 1\n  else\n    echo $(( $(fibfib $(( $1 - 1 ))) + $(fibfib $(( $1 -\
    \ 2 ))) + $(fibfib $(( $1 - 3 ))) ))\n  fi\n}\n\ncandidate() {\n    fibfib \"\
    $@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"2\") = \"1\" ]]\n    [[\
    \ $(candidate \"1\") = \"0\" ]]\n    [[ $(candidate \"5\") = \"4\" ]]\n    [[\
    \ $(candidate \"8\") = \"24\" ]]\n    [[ $(candidate \"10\") = \"81\" ]]\n   \
    \ [[ $(candidate \"12\") = \"274\" ]]\n    [[ $(candidate \"14\") = \"927\" ]]\n\
    }\n\nrun_test"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660001140
- exit_code: 0
  program: "#!/bin/bash\n# The FibFib number sequence is a sequence similar to the\
    \ Fibbonacci sequnece that's defined as follows:\n# fibfib(0) == 0\n# fibfib(1)\
    \ == 0\n# fibfib(2) == 1\n# fibfib(n) == fibfib(n-1) + fibfib(n-2) + fibfib(n-3).\n\
    # Please write a function to efficiently compute the n-th element of the fibfib\
    \ number sequence.\n#\n# $1 is an integer\nfibfib() {\n  if [ $1 -eq 0 ]; then\n\
    \    echo 0\n  elif [ $1 -eq 1 ]; then\n    echo 0\n  elif [ $1 -eq 2 ]; then\n\
    \    echo 1\n  else\n    echo $(( $(fibfib $(( $1 - 1 ))) + $(fibfib $(( $1 -\
    \ 2 ))) + $(fibfib $(( $1 - 3 ))) ))\n  fi\n}\n\ncandidate() {\n    fibfib \"\
    $@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"2\") = \"1\" ]]\n    [[\
    \ $(candidate \"1\") = \"0\" ]]\n    [[ $(candidate \"5\") = \"4\" ]]\n    [[\
    \ $(candidate \"8\") = \"24\" ]]\n    [[ $(candidate \"10\") = \"81\" ]]\n   \
    \ [[ $(candidate \"12\") = \"274\" ]]\n    [[ $(candidate \"14\") = \"927\" ]]\n\
    }\n\nrun_test"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660001140
- exit_code: 0
  program: "#!/bin/bash\n# The FibFib number sequence is a sequence similar to the\
    \ Fibbonacci sequnece that's defined as follows:\n# fibfib(0) == 0\n# fibfib(1)\
    \ == 0\n# fibfib(2) == 1\n# fibfib(n) == fibfib(n-1) + fibfib(n-2) + fibfib(n-3).\n\
    # Please write a function to efficiently compute the n-th element of the fibfib\
    \ number sequence.\n#\n# $1 is an integer\nfibfib() {\n    if [ $1 -eq 0 ]; then\n\
    \        echo 0\n    elif [ $1 -eq 1 ]; then\n        echo 0\n    elif [ $1 -eq\
    \ 2 ]; then\n        echo 1\n    else\n        echo $(( $(fibfib $(( $1 - 1 )))\
    \ + $(fibfib $(( $1 - 2 ))) + $(fibfib $(( $1 - 3 ))) ))\n    fi\n}\n\ncandidate()\
    \ {\n    fibfib \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"2\") =\
    \ \"1\" ]]\n    [[ $(candidate \"1\") = \"0\" ]]\n    [[ $(candidate \"5\") =\
    \ \"4\" ]]\n    [[ $(candidate \"8\") = \"24\" ]]\n    [[ $(candidate \"10\")\
    \ = \"81\" ]]\n    [[ $(candidate \"12\") = \"274\" ]]\n    [[ $(candidate \"\
    14\") = \"927\" ]]\n}\n\nrun_test"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660001140
- exit_code: 0
  program: "#!/bin/bash\n# The FibFib number sequence is a sequence similar to the\
    \ Fibbonacci sequnece that's defined as follows:\n# fibfib(0) == 0\n# fibfib(1)\
    \ == 0\n# fibfib(2) == 1\n# fibfib(n) == fibfib(n-1) + fibfib(n-2) + fibfib(n-3).\n\
    # Please write a function to efficiently compute the n-th element of the fibfib\
    \ number sequence.\n#\n# $1 is an integer\nfibfib() {\n    if [ $1 -eq 0 ]; then\n\
    \        echo 0\n    elif [ $1 -eq 1 ]; then\n        echo 0\n    elif [ $1 -eq\
    \ 2 ]; then\n        echo 1\n    else\n        echo $(( $(fibfib $(( $1 - 1 )))\
    \ + $(fibfib $(( $1 - 2 ))) + $(fibfib $(( $1 - 3 ))) ))\n    fi\n}\n\ncandidate()\
    \ {\n    fibfib \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"2\") =\
    \ \"1\" ]]\n    [[ $(candidate \"1\") = \"0\" ]]\n    [[ $(candidate \"5\") =\
    \ \"4\" ]]\n    [[ $(candidate \"8\") = \"24\" ]]\n    [[ $(candidate \"10\")\
    \ = \"81\" ]]\n    [[ $(candidate \"12\") = \"274\" ]]\n    [[ $(candidate \"\
    14\") = \"927\" ]]\n}\n\nrun_test"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660001140
- exit_code: 0
  program: "#!/bin/bash\n# The FibFib number sequence is a sequence similar to the\
    \ Fibbonacci sequnece that's defined as follows:\n# fibfib(0) == 0\n# fibfib(1)\
    \ == 0\n# fibfib(2) == 1\n# fibfib(n) == fibfib(n-1) + fibfib(n-2) + fibfib(n-3).\n\
    # Please write a function to efficiently compute the n-th element of the fibfib\
    \ number sequence.\n#\n# $1 is an integer\nfibfib() {\n    if [ $1 -eq 0 ]; then\n\
    \        echo 0\n    elif [ $1 -eq 1 ]; then\n        echo 0\n    elif [ $1 -eq\
    \ 2 ]; then\n        echo 1\n    else\n        echo $(( $(fibfib $(( $1 - 1 )))\
    \ + $(fibfib $(( $1 - 2 ))) + $(fibfib $(( $1 - 3 ))) ))\n    fi\n}\n\ncandidate()\
    \ {\n    fibfib \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"2\") =\
    \ \"1\" ]]\n    [[ $(candidate \"1\") = \"0\" ]]\n    [[ $(candidate \"5\") =\
    \ \"4\" ]]\n    [[ $(candidate \"8\") = \"24\" ]]\n    [[ $(candidate \"10\")\
    \ = \"81\" ]]\n    [[ $(candidate \"12\") = \"274\" ]]\n    [[ $(candidate \"\
    14\") = \"927\" ]]\n}\n\nrun_test"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660001140
- exit_code: 0
  program: "#!/bin/bash\n# The FibFib number sequence is a sequence similar to the\
    \ Fibbonacci sequnece that's defined as follows:\n# fibfib(0) == 0\n# fibfib(1)\
    \ == 0\n# fibfib(2) == 1\n# fibfib(n) == fibfib(n-1) + fibfib(n-2) + fibfib(n-3).\n\
    # Please write a function to efficiently compute the n-th element of the fibfib\
    \ number sequence.\n#\n# $1 is an integer\nfibfib() {\n    if [[ $1 -eq 0 ]];\
    \ then\n        echo 0\n    elif [[ $1 -eq 1 ]]; then\n        echo 0\n    elif\
    \ [[ $1 -eq 2 ]]; then\n        echo 1\n    else\n        echo $(( $(fibfib $((\
    \ $1 - 1 ))) + $(fibfib $(( $1 - 2 ))) + $(fibfib $(( $1 - 3 ))) ))\n    fi\n\
    }\n\ncandidate() {\n    fibfib \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate\
    \ \"2\") = \"1\" ]]\n    [[ $(candidate \"1\") = \"0\" ]]\n    [[ $(candidate\
    \ \"5\") = \"4\" ]]\n    [[ $(candidate \"8\") = \"24\" ]]\n    [[ $(candidate\
    \ \"10\") = \"81\" ]]\n    [[ $(candidate \"12\") = \"274\" ]]\n    [[ $(candidate\
    \ \"14\") = \"927\" ]]\n}\n\nrun_test"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660001140
- exit_code: 0
  program: "#!/bin/bash\n# The FibFib number sequence is a sequence similar to the\
    \ Fibbonacci sequnece that's defined as follows:\n# fibfib(0) == 0\n# fibfib(1)\
    \ == 0\n# fibfib(2) == 1\n# fibfib(n) == fibfib(n-1) + fibfib(n-2) + fibfib(n-3).\n\
    # Please write a function to efficiently compute the n-th element of the fibfib\
    \ number sequence.\n#\n# $1 is an integer\nfibfib() {\n    if [ $1 -eq 0 ]; then\n\
    \        echo 0\n    elif [ $1 -eq 1 ]; then\n        echo 0\n    elif [ $1 -eq\
    \ 2 ]; then\n        echo 1\n    else\n        echo $(( $(fibfib $(( $1 - 1 )))\
    \ + $(fibfib $(( $1 - 2 ))) + $(fibfib $(( $1 - 3 ))) ))\n    fi\n}\n\ncandidate()\
    \ {\n    fibfib \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"2\") =\
    \ \"1\" ]]\n    [[ $(candidate \"1\") = \"0\" ]]\n    [[ $(candidate \"5\") =\
    \ \"4\" ]]\n    [[ $(candidate \"8\") = \"24\" ]]\n    [[ $(candidate \"10\")\
    \ = \"81\" ]]\n    [[ $(candidate \"12\") = \"274\" ]]\n    [[ $(candidate \"\
    14\") = \"927\" ]]\n}\n\nrun_test"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660001140
- exit_code: 0
  program: "#!/bin/bash\n# The FibFib number sequence is a sequence similar to the\
    \ Fibbonacci sequnece that's defined as follows:\n# fibfib(0) == 0\n# fibfib(1)\
    \ == 0\n# fibfib(2) == 1\n# fibfib(n) == fibfib(n-1) + fibfib(n-2) + fibfib(n-3).\n\
    # Please write a function to efficiently compute the n-th element of the fibfib\
    \ number sequence.\n#\n# $1 is an integer\nfibfib() {\n    if [ $1 -eq 0 ]; then\n\
    \        echo 0\n    elif [ $1 -eq 1 ]; then\n        echo 0\n    elif [ $1 -eq\
    \ 2 ]; then\n        echo 1\n    else\n        echo $(( $(fibfib $(( $1 - 1 )))\
    \ + $(fibfib $(( $1 - 2 ))) + $(fibfib $(( $1 - 3 ))) ))\n    fi\n}\n\ncandidate()\
    \ {\n    fibfib \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"2\") =\
    \ \"1\" ]]\n    [[ $(candidate \"1\") = \"0\" ]]\n    [[ $(candidate \"5\") =\
    \ \"4\" ]]\n    [[ $(candidate \"8\") = \"24\" ]]\n    [[ $(candidate \"10\")\
    \ = \"81\" ]]\n    [[ $(candidate \"12\") = \"274\" ]]\n    [[ $(candidate \"\
    14\") = \"927\" ]]\n}\n\nrun_test"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660001140
- exit_code: 0
  program: "#!/bin/bash\n# The FibFib number sequence is a sequence similar to the\
    \ Fibbonacci sequnece that's defined as follows:\n# fibfib(0) == 0\n# fibfib(1)\
    \ == 0\n# fibfib(2) == 1\n# fibfib(n) == fibfib(n-1) + fibfib(n-2) + fibfib(n-3).\n\
    # Please write a function to efficiently compute the n-th element of the fibfib\
    \ number sequence.\n#\n# $1 is an integer\nfibfib() {\n  if [ $1 -eq 0 ]; then\n\
    \    echo 0\n  elif [ $1 -eq 1 ]; then\n    echo 0\n  elif [ $1 -eq 2 ]; then\n\
    \    echo 1\n  else\n    echo $(($(fibfib $(($1-1))) + $(fibfib $(($1-2))) + $(fibfib\
    \ $(($1-3)))))\n  fi\n}\n\ncandidate() {\n    fibfib \"$@\"\n}\n\nset -e\nrun_test()\
    \ {\n    [[ $(candidate \"2\") = \"1\" ]]\n    [[ $(candidate \"1\") = \"0\" ]]\n\
    \    [[ $(candidate \"5\") = \"4\" ]]\n    [[ $(candidate \"8\") = \"24\" ]]\n\
    \    [[ $(candidate \"10\") = \"81\" ]]\n    [[ $(candidate \"12\") = \"274\"\
    \ ]]\n    [[ $(candidate \"14\") = \"927\" ]]\n}\n\nrun_test"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660001140
- exit_code: 0
  program: "#!/bin/bash\n# The FibFib number sequence is a sequence similar to the\
    \ Fibbonacci sequnece that's defined as follows:\n# fibfib(0) == 0\n# fibfib(1)\
    \ == 0\n# fibfib(2) == 1\n# fibfib(n) == fibfib(n-1) + fibfib(n-2) + fibfib(n-3).\n\
    # Please write a function to efficiently compute the n-th element of the fibfib\
    \ number sequence.\n#\n# $1 is an integer\nfibfib() {\n    if [ $1 -eq 0 ]; then\n\
    \        echo 0\n    elif [ $1 -eq 1 ]; then\n        echo 0\n    elif [ $1 -eq\
    \ 2 ]; then\n        echo 1\n    else\n        echo $(( $(fibfib $(( $1 - 1 )))\
    \ + $(fibfib $(( $1 - 2 ))) + $(fibfib $(( $1 - 3 ))) ))\n    fi\n}\n\ncandidate()\
    \ {\n    fibfib \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"2\") =\
    \ \"1\" ]]\n    [[ $(candidate \"1\") = \"0\" ]]\n    [[ $(candidate \"5\") =\
    \ \"4\" ]]\n    [[ $(candidate \"8\") = \"24\" ]]\n    [[ $(candidate \"10\")\
    \ = \"81\" ]]\n    [[ $(candidate \"12\") = \"274\" ]]\n    [[ $(candidate \"\
    14\") = \"927\" ]]\n}\n\nrun_test"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660001140
- exit_code: 0
  program: "#!/bin/bash\n# The FibFib number sequence is a sequence similar to the\
    \ Fibbonacci sequnece that's defined as follows:\n# fibfib(0) == 0\n# fibfib(1)\
    \ == 0\n# fibfib(2) == 1\n# fibfib(n) == fibfib(n-1) + fibfib(n-2) + fibfib(n-3).\n\
    # Please write a function to efficiently compute the n-th element of the fibfib\
    \ number sequence.\n#\n# $1 is an integer\nfibfib() {\n    if [ $1 -eq 0 ]; then\n\
    \        echo 0\n    elif [ $1 -eq 1 ]; then\n        echo 0\n    elif [ $1 -eq\
    \ 2 ]; then\n        echo 1\n    else\n        echo $(( $(fibfib $(( $1 - 1 )))\
    \ + $(fibfib $(( $1 - 2 ))) + $(fibfib $(( $1 - 3 ))) ))\n    fi\n}\n\ncandidate()\
    \ {\n    fibfib \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"2\") =\
    \ \"1\" ]]\n    [[ $(candidate \"1\") = \"0\" ]]\n    [[ $(candidate \"5\") =\
    \ \"4\" ]]\n    [[ $(candidate \"8\") = \"24\" ]]\n    [[ $(candidate \"10\")\
    \ = \"81\" ]]\n    [[ $(candidate \"12\") = \"274\" ]]\n    [[ $(candidate \"\
    14\") = \"927\" ]]\n}\n\nrun_test"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660001140
- exit_code: 0
  program: "#!/bin/bash\n# The FibFib number sequence is a sequence similar to the\
    \ Fibbonacci sequnece that's defined as follows:\n# fibfib(0) == 0\n# fibfib(1)\
    \ == 0\n# fibfib(2) == 1\n# fibfib(n) == fibfib(n-1) + fibfib(n-2) + fibfib(n-3).\n\
    # Please write a function to efficiently compute the n-th element of the fibfib\
    \ number sequence.\n#\n# $1 is an integer\nfibfib() {\n    if [ $1 -eq 0 ]; then\n\
    \        echo 0\n    elif [ $1 -eq 1 ]; then\n        echo 0\n    elif [ $1 -eq\
    \ 2 ]; then\n        echo 1\n    else\n        echo $(( $(fibfib $(( $1 - 1 )))\
    \ + $(fibfib $(( $1 - 2 ))) + $(fibfib $(( $1 - 3 ))) ))\n    fi\n}\n\ncandidate()\
    \ {\n    fibfib \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"2\") =\
    \ \"1\" ]]\n    [[ $(candidate \"1\") = \"0\" ]]\n    [[ $(candidate \"5\") =\
    \ \"4\" ]]\n    [[ $(candidate \"8\") = \"24\" ]]\n    [[ $(candidate \"10\")\
    \ = \"81\" ]]\n    [[ $(candidate \"12\") = \"274\" ]]\n    [[ $(candidate \"\
    14\") = \"927\" ]]\n}\n\nrun_test"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660001140
- exit_code: 0
  program: "#!/bin/bash\n# The FibFib number sequence is a sequence similar to the\
    \ Fibbonacci sequnece that's defined as follows:\n# fibfib(0) == 0\n# fibfib(1)\
    \ == 0\n# fibfib(2) == 1\n# fibfib(n) == fibfib(n-1) + fibfib(n-2) + fibfib(n-3).\n\
    # Please write a function to efficiently compute the n-th element of the fibfib\
    \ number sequence.\n#\n# $1 is an integer\nfibfib() {\n    if [ $1 -eq 0 ]; then\n\
    \        echo 0\n    elif [ $1 -eq 1 ]; then\n        echo 0\n    elif [ $1 -eq\
    \ 2 ]; then\n        echo 1\n    else\n        echo $(( $(fibfib $(( $1 - 1 )))\
    \ + $(fibfib $(( $1 - 2 ))) + $(fibfib $(( $1 - 3 ))) ))\n    fi\n}\n\ncandidate()\
    \ {\n    fibfib \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"2\") =\
    \ \"1\" ]]\n    [[ $(candidate \"1\") = \"0\" ]]\n    [[ $(candidate \"5\") =\
    \ \"4\" ]]\n    [[ $(candidate \"8\") = \"24\" ]]\n    [[ $(candidate \"10\")\
    \ = \"81\" ]]\n    [[ $(candidate \"12\") = \"274\" ]]\n    [[ $(candidate \"\
    14\") = \"927\" ]]\n}\n\nrun_test"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660001140
- exit_code: 0
  program: "#!/bin/bash\n# The FibFib number sequence is a sequence similar to the\
    \ Fibbonacci sequnece that's defined as follows:\n# fibfib(0) == 0\n# fibfib(1)\
    \ == 0\n# fibfib(2) == 1\n# fibfib(n) == fibfib(n-1) + fibfib(n-2) + fibfib(n-3).\n\
    # Please write a function to efficiently compute the n-th element of the fibfib\
    \ number sequence.\n#\n# $1 is an integer\nfibfib() {\n    if [ $1 -eq 0 ]; then\n\
    \        echo 0\n    elif [ $1 -eq 1 ]; then\n        echo 0\n    elif [ $1 -eq\
    \ 2 ]; then\n        echo 1\n    else\n        echo $(( $(fibfib $(( $1 - 1 )))\
    \ + $(fibfib $(( $1 - 2 ))) + $(fibfib $(( $1 - 3 ))) ))\n    fi\n}\n\ncandidate()\
    \ {\n    fibfib \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"2\") =\
    \ \"1\" ]]\n    [[ $(candidate \"1\") = \"0\" ]]\n    [[ $(candidate \"5\") =\
    \ \"4\" ]]\n    [[ $(candidate \"8\") = \"24\" ]]\n    [[ $(candidate \"10\")\
    \ = \"81\" ]]\n    [[ $(candidate \"12\") = \"274\" ]]\n    [[ $(candidate \"\
    14\") = \"927\" ]]\n}\n\nrun_test"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660001140
- exit_code: 0
  program: "#!/bin/bash\n# The FibFib number sequence is a sequence similar to the\
    \ Fibbonacci sequnece that's defined as follows:\n# fibfib(0) == 0\n# fibfib(1)\
    \ == 0\n# fibfib(2) == 1\n# fibfib(n) == fibfib(n-1) + fibfib(n-2) + fibfib(n-3).\n\
    # Please write a function to efficiently compute the n-th element of the fibfib\
    \ number sequence.\n#\n# $1 is an integer\nfibfib() {\n    if [ $1 -eq 0 ]; then\n\
    \        echo 0\n    elif [ $1 -eq 1 ]; then\n        echo 0\n    elif [ $1 -eq\
    \ 2 ]; then\n        echo 1\n    else\n        echo $(( $(fibfib $(( $1 - 1 )))\
    \ + $(fibfib $(( $1 - 2 ))) + $(fibfib $(( $1 - 3 ))) ))\n    fi\n}\n\ncandidate()\
    \ {\n    fibfib \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"2\") =\
    \ \"1\" ]]\n    [[ $(candidate \"1\") = \"0\" ]]\n    [[ $(candidate \"5\") =\
    \ \"4\" ]]\n    [[ $(candidate \"8\") = \"24\" ]]\n    [[ $(candidate \"10\")\
    \ = \"81\" ]]\n    [[ $(candidate \"12\") = \"274\" ]]\n    [[ $(candidate \"\
    14\") = \"927\" ]]\n}\n\nrun_test"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660001140
- exit_code: 1
  program: "#!/bin/bash\n# The FibFib number sequence is a sequence similar to the\
    \ Fibbonacci sequnece that's defined as follows:\n# fibfib(0) == 0\n# fibfib(1)\
    \ == 0\n# fibfib(2) == 1\n# fibfib(n) == fibfib(n-1) + fibfib(n-2) + fibfib(n-3).\n\
    # Please write a function to efficiently compute the n-th element of the fibfib\
    \ number sequence.\n#\n# $1 is an integer\nfibfib() {\n    local n=$1\n    local\
    \ a=0\n    local b=0\n    local c=1\n    local i=2\n    while [ $i -le $n ]; do\n\
    \        local d=$((a+b+c))\n        a=$b\n        b=$c\n        c=$d\n      \
    \  i=$((i+1))\n    done\n    echo $c\n}\n\ncandidate() {\n    fibfib \"$@\"\n\
    }\n\nset -e\nrun_test() {\n    [[ $(candidate \"2\") = \"1\" ]]\n    [[ $(candidate\
    \ \"1\") = \"0\" ]]\n    [[ $(candidate \"5\") = \"4\" ]]\n    [[ $(candidate\
    \ \"8\") = \"24\" ]]\n    [[ $(candidate \"10\") = \"81\" ]]\n    [[ $(candidate\
    \ \"12\") = \"274\" ]]\n    [[ $(candidate \"14\") = \"927\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660001136
- exit_code: 0
  program: "#!/bin/bash\n# The FibFib number sequence is a sequence similar to the\
    \ Fibbonacci sequnece that's defined as follows:\n# fibfib(0) == 0\n# fibfib(1)\
    \ == 0\n# fibfib(2) == 1\n# fibfib(n) == fibfib(n-1) + fibfib(n-2) + fibfib(n-3).\n\
    # Please write a function to efficiently compute the n-th element of the fibfib\
    \ number sequence.\n#\n# $1 is an integer\nfibfib() {\n  if [ $1 -eq 0 ]; then\n\
    \    echo 0\n  elif [ $1 -eq 1 ]; then\n    echo 0\n  elif [ $1 -eq 2 ]; then\n\
    \    echo 1\n  else\n    echo $(( $(fibfib $(( $1 - 1 ))) + $(fibfib $(( $1 -\
    \ 2 ))) + $(fibfib $(( $1 - 3 ))) ))\n  fi\n}\n\ncandidate() {\n    fibfib \"\
    $@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"2\") = \"1\" ]]\n    [[\
    \ $(candidate \"1\") = \"0\" ]]\n    [[ $(candidate \"5\") = \"4\" ]]\n    [[\
    \ $(candidate \"8\") = \"24\" ]]\n    [[ $(candidate \"10\") = \"81\" ]]\n   \
    \ [[ $(candidate \"12\") = \"274\" ]]\n    [[ $(candidate \"14\") = \"927\" ]]\n\
    }\n\nrun_test"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660001140
- exit_code: 0
  program: "#!/bin/bash\n# The FibFib number sequence is a sequence similar to the\
    \ Fibbonacci sequnece that's defined as follows:\n# fibfib(0) == 0\n# fibfib(1)\
    \ == 0\n# fibfib(2) == 1\n# fibfib(n) == fibfib(n-1) + fibfib(n-2) + fibfib(n-3).\n\
    # Please write a function to efficiently compute the n-th element of the fibfib\
    \ number sequence.\n#\n# $1 is an integer\nfibfib() {\n    if [ $1 -eq 0 ]; then\n\
    \        echo 0\n    elif [ $1 -eq 1 ]; then\n        echo 0\n    elif [ $1 -eq\
    \ 2 ]; then\n        echo 1\n    else\n        echo $(( $(fibfib $(( $1 - 1 )))\
    \ + $(fibfib $(( $1 - 2 ))) + $(fibfib $(( $1 - 3 ))) ))\n    fi\n}\n\ncandidate()\
    \ {\n    fibfib \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"2\") =\
    \ \"1\" ]]\n    [[ $(candidate \"1\") = \"0\" ]]\n    [[ $(candidate \"5\") =\
    \ \"4\" ]]\n    [[ $(candidate \"8\") = \"24\" ]]\n    [[ $(candidate \"10\")\
    \ = \"81\" ]]\n    [[ $(candidate \"12\") = \"274\" ]]\n    [[ $(candidate \"\
    14\") = \"927\" ]]\n}\n\nrun_test"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660001140
- exit_code: 0
  program: "#!/bin/bash\n# The FibFib number sequence is a sequence similar to the\
    \ Fibbonacci sequnece that's defined as follows:\n# fibfib(0) == 0\n# fibfib(1)\
    \ == 0\n# fibfib(2) == 1\n# fibfib(n) == fibfib(n-1) + fibfib(n-2) + fibfib(n-3).\n\
    # Please write a function to efficiently compute the n-th element of the fibfib\
    \ number sequence.\n#\n# $1 is an integer\nfibfib() {\n    if [ $1 -eq 0 ]; then\n\
    \        echo 0\n    elif [ $1 -eq 1 ]; then\n        echo 0\n    elif [ $1 -eq\
    \ 2 ]; then\n        echo 1\n    else\n        echo $(( $(fibfib $(( $1 - 1 )))\
    \ + $(fibfib $(( $1 - 2 ))) + $(fibfib $(( $1 - 3 ))) ))\n    fi\n}\n\ncandidate()\
    \ {\n    fibfib \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"2\") =\
    \ \"1\" ]]\n    [[ $(candidate \"1\") = \"0\" ]]\n    [[ $(candidate \"5\") =\
    \ \"4\" ]]\n    [[ $(candidate \"8\") = \"24\" ]]\n    [[ $(candidate \"10\")\
    \ = \"81\" ]]\n    [[ $(candidate \"12\") = \"274\" ]]\n    [[ $(candidate \"\
    14\") = \"927\" ]]\n}\n\nrun_test"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660001140
- exit_code: 0
  program: "#!/bin/bash\n# The FibFib number sequence is a sequence similar to the\
    \ Fibbonacci sequnece that's defined as follows:\n# fibfib(0) == 0\n# fibfib(1)\
    \ == 0\n# fibfib(2) == 1\n# fibfib(n) == fibfib(n-1) + fibfib(n-2) + fibfib(n-3).\n\
    # Please write a function to efficiently compute the n-th element of the fibfib\
    \ number sequence.\n#\n# $1 is an integer\nfibfib() {\n  if [[ $1 -eq 0 ]]; then\n\
    \    echo 0\n  elif [[ $1 -eq 1 ]]; then\n    echo 0\n  elif [[ $1 -eq 2 ]]; then\n\
    \    echo 1\n  else\n    echo $(( $(fibfib $(( $1 - 1 ))) + $(fibfib $(( $1 -\
    \ 2 ))) + $(fibfib $(( $1 - 3 ))) ))\n  fi\n}\n\ncandidate() {\n    fibfib \"\
    $@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"2\") = \"1\" ]]\n    [[\
    \ $(candidate \"1\") = \"0\" ]]\n    [[ $(candidate \"5\") = \"4\" ]]\n    [[\
    \ $(candidate \"8\") = \"24\" ]]\n    [[ $(candidate \"10\") = \"81\" ]]\n   \
    \ [[ $(candidate \"12\") = \"274\" ]]\n    [[ $(candidate \"14\") = \"927\" ]]\n\
    }\n\nrun_test"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660001140
- exit_code: 0
  program: "#!/bin/bash\n# The FibFib number sequence is a sequence similar to the\
    \ Fibbonacci sequnece that's defined as follows:\n# fibfib(0) == 0\n# fibfib(1)\
    \ == 0\n# fibfib(2) == 1\n# fibfib(n) == fibfib(n-1) + fibfib(n-2) + fibfib(n-3).\n\
    # Please write a function to efficiently compute the n-th element of the fibfib\
    \ number sequence.\n#\n# $1 is an integer\nfibfib() {\n  if [ $1 -eq 0 ]; then\n\
    \    echo 0\n  elif [ $1 -eq 1 ]; then\n    echo 0\n  elif [ $1 -eq 2 ]; then\n\
    \    echo 1\n  else\n    echo $(( $(fibfib $(( $1 - 1 ))) + $(fibfib $(( $1 -\
    \ 2 ))) + $(fibfib $(( $1 - 3 ))) ))\n  fi\n}\n\ncandidate() {\n    fibfib \"\
    $@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"2\") = \"1\" ]]\n    [[\
    \ $(candidate \"1\") = \"0\" ]]\n    [[ $(candidate \"5\") = \"4\" ]]\n    [[\
    \ $(candidate \"8\") = \"24\" ]]\n    [[ $(candidate \"10\") = \"81\" ]]\n   \
    \ [[ $(candidate \"12\") = \"274\" ]]\n    [[ $(candidate \"14\") = \"927\" ]]\n\
    }\n\nrun_test"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660001140
- exit_code: 0
  program: "#!/bin/bash\n# The FibFib number sequence is a sequence similar to the\
    \ Fibbonacci sequnece that's defined as follows:\n# fibfib(0) == 0\n# fibfib(1)\
    \ == 0\n# fibfib(2) == 1\n# fibfib(n) == fibfib(n-1) + fibfib(n-2) + fibfib(n-3).\n\
    # Please write a function to efficiently compute the n-th element of the fibfib\
    \ number sequence.\n#\n# $1 is an integer\nfibfib() {\n    if [ $1 -eq 0 ]; then\n\
    \        echo 0\n    elif [ $1 -eq 1 ]; then\n        echo 0\n    elif [ $1 -eq\
    \ 2 ]; then\n        echo 1\n    else\n        echo $(( $(fibfib $(( $1 - 1 )))\
    \ + $(fibfib $(( $1 - 2 ))) + $(fibfib $(( $1 - 3 ))) ))\n    fi\n}\n\ncandidate()\
    \ {\n    fibfib \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"2\") =\
    \ \"1\" ]]\n    [[ $(candidate \"1\") = \"0\" ]]\n    [[ $(candidate \"5\") =\
    \ \"4\" ]]\n    [[ $(candidate \"8\") = \"24\" ]]\n    [[ $(candidate \"10\")\
    \ = \"81\" ]]\n    [[ $(candidate \"12\") = \"274\" ]]\n    [[ $(candidate \"\
    14\") = \"927\" ]]\n}\n\nrun_test"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660001140
- exit_code: 0
  program: "#!/bin/bash\n# The FibFib number sequence is a sequence similar to the\
    \ Fibbonacci sequnece that's defined as follows:\n# fibfib(0) == 0\n# fibfib(1)\
    \ == 0\n# fibfib(2) == 1\n# fibfib(n) == fibfib(n-1) + fibfib(n-2) + fibfib(n-3).\n\
    # Please write a function to efficiently compute the n-th element of the fibfib\
    \ number sequence.\n#\n# $1 is an integer\nfibfib() {\n    if [ $1 -eq 0 ]; then\n\
    \        echo 0\n    elif [ $1 -eq 1 ]; then\n        echo 0\n    elif [ $1 -eq\
    \ 2 ]; then\n        echo 1\n    else\n        echo $(($(fibfib $(($1-1))) + $(fibfib\
    \ $(($1-2))) + $(fibfib $(($1-3)))))\n    fi\n}\n\ncandidate() {\n    fibfib \"\
    $@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"2\") = \"1\" ]]\n    [[\
    \ $(candidate \"1\") = \"0\" ]]\n    [[ $(candidate \"5\") = \"4\" ]]\n    [[\
    \ $(candidate \"8\") = \"24\" ]]\n    [[ $(candidate \"10\") = \"81\" ]]\n   \
    \ [[ $(candidate \"12\") = \"274\" ]]\n    [[ $(candidate \"14\") = \"927\" ]]\n\
    }\n\nrun_test"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660001140
- exit_code: 0
  program: "#!/bin/bash\n# The FibFib number sequence is a sequence similar to the\
    \ Fibbonacci sequnece that's defined as follows:\n# fibfib(0) == 0\n# fibfib(1)\
    \ == 0\n# fibfib(2) == 1\n# fibfib(n) == fibfib(n-1) + fibfib(n-2) + fibfib(n-3).\n\
    # Please write a function to efficiently compute the n-th element of the fibfib\
    \ number sequence.\n#\n# $1 is an integer\nfibfib() {\n  if [ $1 -eq 0 ]; then\n\
    \    echo 0\n  elif [ $1 -eq 1 ]; then\n    echo 0\n  elif [ $1 -eq 2 ]; then\n\
    \    echo 1\n  else\n    echo $(( $(fibfib $(( $1 - 1 ))) + $(fibfib $(( $1 -\
    \ 2 ))) + $(fibfib $(( $1 - 3 ))) ))\n  fi\n}\n\ncandidate() {\n    fibfib \"\
    $@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"2\") = \"1\" ]]\n    [[\
    \ $(candidate \"1\") = \"0\" ]]\n    [[ $(candidate \"5\") = \"4\" ]]\n    [[\
    \ $(candidate \"8\") = \"24\" ]]\n    [[ $(candidate \"10\") = \"81\" ]]\n   \
    \ [[ $(candidate \"12\") = \"274\" ]]\n    [[ $(candidate \"14\") = \"927\" ]]\n\
    }\n\nrun_test"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660001140
- exit_code: 0
  program: "#!/bin/bash\n# The FibFib number sequence is a sequence similar to the\
    \ Fibbonacci sequnece that's defined as follows:\n# fibfib(0) == 0\n# fibfib(1)\
    \ == 0\n# fibfib(2) == 1\n# fibfib(n) == fibfib(n-1) + fibfib(n-2) + fibfib(n-3).\n\
    # Please write a function to efficiently compute the n-th element of the fibfib\
    \ number sequence.\n#\n# $1 is an integer\nfibfib() {\n    if [[ $1 -eq 0 ]];\
    \ then\n        echo 0\n    elif [[ $1 -eq 1 ]]; then\n        echo 0\n    elif\
    \ [[ $1 -eq 2 ]]; then\n        echo 1\n    else\n        echo $(($(fibfib $(($1-1)))\
    \ + $(fibfib $(($1-2))) + $(fibfib $(($1-3)))))\n    fi\n}\n\ncandidate() {\n\
    \    fibfib \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"2\") = \"\
    1\" ]]\n    [[ $(candidate \"1\") = \"0\" ]]\n    [[ $(candidate \"5\") = \"4\"\
    \ ]]\n    [[ $(candidate \"8\") = \"24\" ]]\n    [[ $(candidate \"10\") = \"81\"\
    \ ]]\n    [[ $(candidate \"12\") = \"274\" ]]\n    [[ $(candidate \"14\") = \"\
    927\" ]]\n}\n\nrun_test"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660001140
- exit_code: 0
  program: "#!/bin/bash\n# The FibFib number sequence is a sequence similar to the\
    \ Fibbonacci sequnece that's defined as follows:\n# fibfib(0) == 0\n# fibfib(1)\
    \ == 0\n# fibfib(2) == 1\n# fibfib(n) == fibfib(n-1) + fibfib(n-2) + fibfib(n-3).\n\
    # Please write a function to efficiently compute the n-th element of the fibfib\
    \ number sequence.\n#\n# $1 is an integer\nfibfib() {\n  if [ $1 -eq 0 ]; then\n\
    \    echo 0\n  elif [ $1 -eq 1 ]; then\n    echo 0\n  elif [ $1 -eq 2 ]; then\n\
    \    echo 1\n  else\n    echo $(($(fibfib $(($1-1))) + $(fibfib $(($1-2))) + $(fibfib\
    \ $(($1-3)))))\n  fi\n}\n\ncandidate() {\n    fibfib \"$@\"\n}\n\nset -e\nrun_test()\
    \ {\n    [[ $(candidate \"2\") = \"1\" ]]\n    [[ $(candidate \"1\") = \"0\" ]]\n\
    \    [[ $(candidate \"5\") = \"4\" ]]\n    [[ $(candidate \"8\") = \"24\" ]]\n\
    \    [[ $(candidate \"10\") = \"81\" ]]\n    [[ $(candidate \"12\") = \"274\"\
    \ ]]\n    [[ $(candidate \"14\") = \"927\" ]]\n}\n\nrun_test"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660001140
- exit_code: 0
  program: "#!/bin/bash\n# The FibFib number sequence is a sequence similar to the\
    \ Fibbonacci sequnece that's defined as follows:\n# fibfib(0) == 0\n# fibfib(1)\
    \ == 0\n# fibfib(2) == 1\n# fibfib(n) == fibfib(n-1) + fibfib(n-2) + fibfib(n-3).\n\
    # Please write a function to efficiently compute the n-th element of the fibfib\
    \ number sequence.\n#\n# $1 is an integer\nfibfib() {\n    if [ $1 -eq 0 ]; then\n\
    \        echo 0\n    elif [ $1 -eq 1 ]; then\n        echo 0\n    elif [ $1 -eq\
    \ 2 ]; then\n        echo 1\n    else\n        echo $(( $(fibfib $(( $1 - 1 )))\
    \ + $(fibfib $(( $1 - 2 ))) + $(fibfib $(( $1 - 3 ))) ))\n    fi\n}\n\ncandidate()\
    \ {\n    fibfib \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"2\") =\
    \ \"1\" ]]\n    [[ $(candidate \"1\") = \"0\" ]]\n    [[ $(candidate \"5\") =\
    \ \"4\" ]]\n    [[ $(candidate \"8\") = \"24\" ]]\n    [[ $(candidate \"10\")\
    \ = \"81\" ]]\n    [[ $(candidate \"12\") = \"274\" ]]\n    [[ $(candidate \"\
    14\") = \"927\" ]]\n}\n\nrun_test"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660001140
- exit_code: 0
  program: "#!/bin/bash\n# The FibFib number sequence is a sequence similar to the\
    \ Fibbonacci sequnece that's defined as follows:\n# fibfib(0) == 0\n# fibfib(1)\
    \ == 0\n# fibfib(2) == 1\n# fibfib(n) == fibfib(n-1) + fibfib(n-2) + fibfib(n-3).\n\
    # Please write a function to efficiently compute the n-th element of the fibfib\
    \ number sequence.\n#\n# $1 is an integer\nfibfib() {\n  if [ $1 -eq 0 ]; then\n\
    \    echo 0\n  elif [ $1 -eq 1 ]; then\n    echo 0\n  elif [ $1 -eq 2 ]; then\n\
    \    echo 1\n  else\n    echo $(( $(fibfib $(( $1 - 1 ))) + $(fibfib $(( $1 -\
    \ 2 ))) + $(fibfib $(( $1 - 3 ))) ))\n  fi\n}\n\ncandidate() {\n    fibfib \"\
    $@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"2\") = \"1\" ]]\n    [[\
    \ $(candidate \"1\") = \"0\" ]]\n    [[ $(candidate \"5\") = \"4\" ]]\n    [[\
    \ $(candidate \"8\") = \"24\" ]]\n    [[ $(candidate \"10\") = \"81\" ]]\n   \
    \ [[ $(candidate \"12\") = \"274\" ]]\n    [[ $(candidate \"14\") = \"927\" ]]\n\
    }\n\nrun_test"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660001140
- exit_code: 0
  program: "#!/bin/bash\n# The FibFib number sequence is a sequence similar to the\
    \ Fibbonacci sequnece that's defined as follows:\n# fibfib(0) == 0\n# fibfib(1)\
    \ == 0\n# fibfib(2) == 1\n# fibfib(n) == fibfib(n-1) + fibfib(n-2) + fibfib(n-3).\n\
    # Please write a function to efficiently compute the n-th element of the fibfib\
    \ number sequence.\n#\n# $1 is an integer\nfibfib() {\n    if [ $1 -eq 0 ]; then\n\
    \        echo 0\n    elif [ $1 -eq 1 ]; then\n        echo 0\n    elif [ $1 -eq\
    \ 2 ]; then\n        echo 1\n    else\n        echo $(( $(fibfib $(( $1 - 1 )))\
    \ + $(fibfib $(( $1 - 2 ))) + $(fibfib $(( $1 - 3 ))) ))\n    fi\n}\n\ncandidate()\
    \ {\n    fibfib \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"2\") =\
    \ \"1\" ]]\n    [[ $(candidate \"1\") = \"0\" ]]\n    [[ $(candidate \"5\") =\
    \ \"4\" ]]\n    [[ $(candidate \"8\") = \"24\" ]]\n    [[ $(candidate \"10\")\
    \ = \"81\" ]]\n    [[ $(candidate \"12\") = \"274\" ]]\n    [[ $(candidate \"\
    14\") = \"927\" ]]\n}\n\nrun_test"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660001140
- exit_code: 0
  program: "#!/bin/bash\n# The FibFib number sequence is a sequence similar to the\
    \ Fibbonacci sequnece that's defined as follows:\n# fibfib(0) == 0\n# fibfib(1)\
    \ == 0\n# fibfib(2) == 1\n# fibfib(n) == fibfib(n-1) + fibfib(n-2) + fibfib(n-3).\n\
    # Please write a function to efficiently compute the n-th element of the fibfib\
    \ number sequence.\n#\n# $1 is an integer\nfibfib() {\n    if [ $1 -eq 0 ]; then\n\
    \        echo 0\n    elif [ $1 -eq 1 ]; then\n        echo 0\n    elif [ $1 -eq\
    \ 2 ]; then\n        echo 1\n    else\n        echo $(( $(fibfib $(( $1 - 1 )))\
    \ + $(fibfib $(( $1 - 2 ))) + $(fibfib $(( $1 - 3 ))) ))\n    fi\n}\n\ncandidate()\
    \ {\n    fibfib \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"2\") =\
    \ \"1\" ]]\n    [[ $(candidate \"1\") = \"0\" ]]\n    [[ $(candidate \"5\") =\
    \ \"4\" ]]\n    [[ $(candidate \"8\") = \"24\" ]]\n    [[ $(candidate \"10\")\
    \ = \"81\" ]]\n    [[ $(candidate \"12\") = \"274\" ]]\n    [[ $(candidate \"\
    14\") = \"927\" ]]\n}\n\nrun_test"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660001140
- exit_code: 0
  program: "#!/bin/bash\n# The FibFib number sequence is a sequence similar to the\
    \ Fibbonacci sequnece that's defined as follows:\n# fibfib(0) == 0\n# fibfib(1)\
    \ == 0\n# fibfib(2) == 1\n# fibfib(n) == fibfib(n-1) + fibfib(n-2) + fibfib(n-3).\n\
    # Please write a function to efficiently compute the n-th element of the fibfib\
    \ number sequence.\n#\n# $1 is an integer\nfibfib() {\n    if [ $1 -eq 0 ]; then\n\
    \        echo 0\n    elif [ $1 -eq 1 ]; then\n        echo 0\n    elif [ $1 -eq\
    \ 2 ]; then\n        echo 1\n    else\n        echo $(($(fibfib $(($1-1))) + $(fibfib\
    \ $(($1-2))) + $(fibfib $(($1-3)))))\n    fi\n}\n\ncandidate() {\n    fibfib \"\
    $@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"2\") = \"1\" ]]\n    [[\
    \ $(candidate \"1\") = \"0\" ]]\n    [[ $(candidate \"5\") = \"4\" ]]\n    [[\
    \ $(candidate \"8\") = \"24\" ]]\n    [[ $(candidate \"10\") = \"81\" ]]\n   \
    \ [[ $(candidate \"12\") = \"274\" ]]\n    [[ $(candidate \"14\") = \"927\" ]]\n\
    }\n\nrun_test"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660001140
- exit_code: 0
  program: "#!/bin/bash\n# The FibFib number sequence is a sequence similar to the\
    \ Fibbonacci sequnece that's defined as follows:\n# fibfib(0) == 0\n# fibfib(1)\
    \ == 0\n# fibfib(2) == 1\n# fibfib(n) == fibfib(n-1) + fibfib(n-2) + fibfib(n-3).\n\
    # Please write a function to efficiently compute the n-th element of the fibfib\
    \ number sequence.\n#\n# $1 is an integer\nfibfib() {\n    if [ $1 -eq 0 ]; then\n\
    \        echo 0\n    elif [ $1 -eq 1 ]; then\n        echo 0\n    elif [ $1 -eq\
    \ 2 ]; then\n        echo 1\n    else\n        echo $(( $(fibfib $(( $1 - 1 )))\
    \ + $(fibfib $(( $1 - 2 ))) + $(fibfib $(( $1 - 3 ))) ))\n    fi\n}\n\ncandidate()\
    \ {\n    fibfib \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"2\") =\
    \ \"1\" ]]\n    [[ $(candidate \"1\") = \"0\" ]]\n    [[ $(candidate \"5\") =\
    \ \"4\" ]]\n    [[ $(candidate \"8\") = \"24\" ]]\n    [[ $(candidate \"10\")\
    \ = \"81\" ]]\n    [[ $(candidate \"12\") = \"274\" ]]\n    [[ $(candidate \"\
    14\") = \"927\" ]]\n}\n\nrun_test"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660001140
- exit_code: 0
  program: "#!/bin/bash\n# The FibFib number sequence is a sequence similar to the\
    \ Fibbonacci sequnece that's defined as follows:\n# fibfib(0) == 0\n# fibfib(1)\
    \ == 0\n# fibfib(2) == 1\n# fibfib(n) == fibfib(n-1) + fibfib(n-2) + fibfib(n-3).\n\
    # Please write a function to efficiently compute the n-th element of the fibfib\
    \ number sequence.\n#\n# $1 is an integer\nfibfib() {\n    if [[ $1 -eq 0 ]];\
    \ then\n        echo 0\n    elif [[ $1 -eq 1 ]]; then\n        echo 0\n    elif\
    \ [[ $1 -eq 2 ]]; then\n        echo 1\n    else\n        echo $(( $(fibfib $((\
    \ $1 - 1 ))) + $(fibfib $(( $1 - 2 ))) + $(fibfib $(( $1 - 3 ))) ))\n    fi\n\
    }\n\ncandidate() {\n    fibfib \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate\
    \ \"2\") = \"1\" ]]\n    [[ $(candidate \"1\") = \"0\" ]]\n    [[ $(candidate\
    \ \"5\") = \"4\" ]]\n    [[ $(candidate \"8\") = \"24\" ]]\n    [[ $(candidate\
    \ \"10\") = \"81\" ]]\n    [[ $(candidate \"12\") = \"274\" ]]\n    [[ $(candidate\
    \ \"14\") = \"927\" ]]\n}\n\nrun_test"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660001140
- exit_code: 0
  program: "#!/bin/bash\n# The FibFib number sequence is a sequence similar to the\
    \ Fibbonacci sequnece that's defined as follows:\n# fibfib(0) == 0\n# fibfib(1)\
    \ == 0\n# fibfib(2) == 1\n# fibfib(n) == fibfib(n-1) + fibfib(n-2) + fibfib(n-3).\n\
    # Please write a function to efficiently compute the n-th element of the fibfib\
    \ number sequence.\n#\n# $1 is an integer\nfibfib() {\n  if [ $1 -eq 0 ]; then\n\
    \    echo 0\n  elif [ $1 -eq 1 ]; then\n    echo 0\n  elif [ $1 -eq 2 ]; then\n\
    \    echo 1\n  else\n    echo $(( $(fibfib $(( $1 - 1 ))) + $(fibfib $(( $1 -\
    \ 2 ))) + $(fibfib $(( $1 - 3 ))) ))\n  fi\n}\n\ncandidate() {\n    fibfib \"\
    $@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"2\") = \"1\" ]]\n    [[\
    \ $(candidate \"1\") = \"0\" ]]\n    [[ $(candidate \"5\") = \"4\" ]]\n    [[\
    \ $(candidate \"8\") = \"24\" ]]\n    [[ $(candidate \"10\") = \"81\" ]]\n   \
    \ [[ $(candidate \"12\") = \"274\" ]]\n    [[ $(candidate \"14\") = \"927\" ]]\n\
    }\n\nrun_test"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660001140
- exit_code: 0
  program: "#!/bin/bash\n# The FibFib number sequence is a sequence similar to the\
    \ Fibbonacci sequnece that's defined as follows:\n# fibfib(0) == 0\n# fibfib(1)\
    \ == 0\n# fibfib(2) == 1\n# fibfib(n) == fibfib(n-1) + fibfib(n-2) + fibfib(n-3).\n\
    # Please write a function to efficiently compute the n-th element of the fibfib\
    \ number sequence.\n#\n# $1 is an integer\nfibfib() {\n    if [ $1 -eq 0 ]; then\n\
    \        echo 0\n    elif [ $1 -eq 1 ]; then\n        echo 0\n    elif [ $1 -eq\
    \ 2 ]; then\n        echo 1\n    else\n        echo $(( $(fibfib $(( $1 - 1 )))\
    \ + $(fibfib $(( $1 - 2 ))) + $(fibfib $(( $1 - 3 ))) ))\n    fi\n}\n\ncandidate()\
    \ {\n    fibfib \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"2\") =\
    \ \"1\" ]]\n    [[ $(candidate \"1\") = \"0\" ]]\n    [[ $(candidate \"5\") =\
    \ \"4\" ]]\n    [[ $(candidate \"8\") = \"24\" ]]\n    [[ $(candidate \"10\")\
    \ = \"81\" ]]\n    [[ $(candidate \"12\") = \"274\" ]]\n    [[ $(candidate \"\
    14\") = \"927\" ]]\n}\n\nrun_test"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660001140
- exit_code: 0
  program: "#!/bin/bash\n# The FibFib number sequence is a sequence similar to the\
    \ Fibbonacci sequnece that's defined as follows:\n# fibfib(0) == 0\n# fibfib(1)\
    \ == 0\n# fibfib(2) == 1\n# fibfib(n) == fibfib(n-1) + fibfib(n-2) + fibfib(n-3).\n\
    # Please write a function to efficiently compute the n-th element of the fibfib\
    \ number sequence.\n#\n# $1 is an integer\nfibfib() {\n  if [ $1 -eq 0 ]; then\n\
    \    echo 0\n  elif [ $1 -eq 1 ]; then\n    echo 0\n  elif [ $1 -eq 2 ]; then\n\
    \    echo 1\n  else\n    echo $(( $(fibfib $(( $1 - 1 ))) + $(fibfib $(( $1 -\
    \ 2 ))) + $(fibfib $(( $1 - 3 ))) ))\n  fi\n}\n\ncandidate() {\n    fibfib \"\
    $@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"2\") = \"1\" ]]\n    [[\
    \ $(candidate \"1\") = \"0\" ]]\n    [[ $(candidate \"5\") = \"4\" ]]\n    [[\
    \ $(candidate \"8\") = \"24\" ]]\n    [[ $(candidate \"10\") = \"81\" ]]\n   \
    \ [[ $(candidate \"12\") = \"274\" ]]\n    [[ $(candidate \"14\") = \"927\" ]]\n\
    }\n\nrun_test"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660001140
- exit_code: 0
  program: "#!/bin/bash\n# The FibFib number sequence is a sequence similar to the\
    \ Fibbonacci sequnece that's defined as follows:\n# fibfib(0) == 0\n# fibfib(1)\
    \ == 0\n# fibfib(2) == 1\n# fibfib(n) == fibfib(n-1) + fibfib(n-2) + fibfib(n-3).\n\
    # Please write a function to efficiently compute the n-th element of the fibfib\
    \ number sequence.\n#\n# $1 is an integer\nfibfib() {\n    if [ $1 -eq 0 ]; then\n\
    \        echo 0\n    elif [ $1 -eq 1 ]; then\n        echo 0\n    elif [ $1 -eq\
    \ 2 ]; then\n        echo 1\n    else\n        echo $(( $(fibfib $(( $1 - 1 )))\
    \ + $(fibfib $(( $1 - 2 ))) + $(fibfib $(( $1 - 3 ))) ))\n    fi\n}\n\ncandidate()\
    \ {\n    fibfib \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"2\") =\
    \ \"1\" ]]\n    [[ $(candidate \"1\") = \"0\" ]]\n    [[ $(candidate \"5\") =\
    \ \"4\" ]]\n    [[ $(candidate \"8\") = \"24\" ]]\n    [[ $(candidate \"10\")\
    \ = \"81\" ]]\n    [[ $(candidate \"12\") = \"274\" ]]\n    [[ $(candidate \"\
    14\") = \"927\" ]]\n}\n\nrun_test"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660001140
- exit_code: 1
  program: "#!/bin/bash\n# The FibFib number sequence is a sequence similar to the\
    \ Fibbonacci sequnece that's defined as follows:\n# fibfib(0) == 0\n# fibfib(1)\
    \ == 0\n# fibfib(2) == 1\n# fibfib(n) == fibfib(n-1) + fibfib(n-2) + fibfib(n-3).\n\
    # Please write a function to efficiently compute the n-th element of the fibfib\
    \ number sequence.\n#\n# $1 is an integer\nfibfib() {\n  local n=$1\n  local a=0\n\
    \  local b=0\n  local c=1\n  local d=0\n  for ((i=2; i<=n; i++)); do\n    d=$((a+b+c))\n\
    \    a=$b\n    b=$c\n    c=$d\n  done\n  echo $d\n}\n\ncandidate() {\n    fibfib\
    \ \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"2\") = \"1\" ]]\n  \
    \  [[ $(candidate \"1\") = \"0\" ]]\n    [[ $(candidate \"5\") = \"4\" ]]\n  \
    \  [[ $(candidate \"8\") = \"24\" ]]\n    [[ $(candidate \"10\") = \"81\" ]]\n\
    \    [[ $(candidate \"12\") = \"274\" ]]\n    [[ $(candidate \"14\") = \"927\"\
    \ ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660001136
- exit_code: 0
  program: "#!/bin/bash\n# The FibFib number sequence is a sequence similar to the\
    \ Fibbonacci sequnece that's defined as follows:\n# fibfib(0) == 0\n# fibfib(1)\
    \ == 0\n# fibfib(2) == 1\n# fibfib(n) == fibfib(n-1) + fibfib(n-2) + fibfib(n-3).\n\
    # Please write a function to efficiently compute the n-th element of the fibfib\
    \ number sequence.\n#\n# $1 is an integer\nfibfib() {\n    if [ $1 -eq 0 ]; then\n\
    \        echo 0\n    elif [ $1 -eq 1 ]; then\n        echo 0\n    elif [ $1 -eq\
    \ 2 ]; then\n        echo 1\n    else\n        echo $(( $(fibfib $(( $1 - 1 )))\
    \ + $(fibfib $(( $1 - 2 ))) + $(fibfib $(( $1 - 3 ))) ))\n    fi\n}\n\ncandidate()\
    \ {\n    fibfib \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"2\") =\
    \ \"1\" ]]\n    [[ $(candidate \"1\") = \"0\" ]]\n    [[ $(candidate \"5\") =\
    \ \"4\" ]]\n    [[ $(candidate \"8\") = \"24\" ]]\n    [[ $(candidate \"10\")\
    \ = \"81\" ]]\n    [[ $(candidate \"12\") = \"274\" ]]\n    [[ $(candidate \"\
    14\") = \"927\" ]]\n}\n\nrun_test"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660001140
- exit_code: 0
  program: "#!/bin/bash\n# The FibFib number sequence is a sequence similar to the\
    \ Fibbonacci sequnece that's defined as follows:\n# fibfib(0) == 0\n# fibfib(1)\
    \ == 0\n# fibfib(2) == 1\n# fibfib(n) == fibfib(n-1) + fibfib(n-2) + fibfib(n-3).\n\
    # Please write a function to efficiently compute the n-th element of the fibfib\
    \ number sequence.\n#\n# $1 is an integer\nfibfib() {\n    if [ $1 -eq 0 ]; then\n\
    \        echo 0\n    elif [ $1 -eq 1 ]; then\n        echo 0\n    elif [ $1 -eq\
    \ 2 ]; then\n        echo 1\n    else\n        echo $(( $(fibfib $(( $1 - 1 )))\
    \ + $(fibfib $(( $1 - 2 ))) + $(fibfib $(( $1 - 3 ))) ))\n    fi\n}\n\ncandidate()\
    \ {\n    fibfib \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"2\") =\
    \ \"1\" ]]\n    [[ $(candidate \"1\") = \"0\" ]]\n    [[ $(candidate \"5\") =\
    \ \"4\" ]]\n    [[ $(candidate \"8\") = \"24\" ]]\n    [[ $(candidate \"10\")\
    \ = \"81\" ]]\n    [[ $(candidate \"12\") = \"274\" ]]\n    [[ $(candidate \"\
    14\") = \"927\" ]]\n}\n\nrun_test"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660001140
- exit_code: 0
  program: "#!/bin/bash\n# The FibFib number sequence is a sequence similar to the\
    \ Fibbonacci sequnece that's defined as follows:\n# fibfib(0) == 0\n# fibfib(1)\
    \ == 0\n# fibfib(2) == 1\n# fibfib(n) == fibfib(n-1) + fibfib(n-2) + fibfib(n-3).\n\
    # Please write a function to efficiently compute the n-th element of the fibfib\
    \ number sequence.\n#\n# $1 is an integer\nfibfib() {\n  if [ $1 -eq 0 ]; then\n\
    \    echo 0\n  elif [ $1 -eq 1 ]; then\n    echo 0\n  elif [ $1 -eq 2 ]; then\n\
    \    echo 1\n  else\n    echo $(($(fibfib $(($1-1))) + $(fibfib $(($1-2))) + $(fibfib\
    \ $(($1-3)))))\n  fi\n}\n\ncandidate() {\n    fibfib \"$@\"\n}\n\nset -e\nrun_test()\
    \ {\n    [[ $(candidate \"2\") = \"1\" ]]\n    [[ $(candidate \"1\") = \"0\" ]]\n\
    \    [[ $(candidate \"5\") = \"4\" ]]\n    [[ $(candidate \"8\") = \"24\" ]]\n\
    \    [[ $(candidate \"10\") = \"81\" ]]\n    [[ $(candidate \"12\") = \"274\"\
    \ ]]\n    [[ $(candidate \"14\") = \"927\" ]]\n}\n\nrun_test"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660001140
- exit_code: 0
  program: "#!/bin/bash\n# The FibFib number sequence is a sequence similar to the\
    \ Fibbonacci sequnece that's defined as follows:\n# fibfib(0) == 0\n# fibfib(1)\
    \ == 0\n# fibfib(2) == 1\n# fibfib(n) == fibfib(n-1) + fibfib(n-2) + fibfib(n-3).\n\
    # Please write a function to efficiently compute the n-th element of the fibfib\
    \ number sequence.\n#\n# $1 is an integer\nfibfib() {\n    if [ $1 -eq 0 ]; then\n\
    \        echo 0\n    elif [ $1 -eq 1 ]; then\n        echo 0\n    elif [ $1 -eq\
    \ 2 ]; then\n        echo 1\n    else\n        echo $(( $(fibfib $(( $1 - 1 )))\
    \ + $(fibfib $(( $1 - 2 ))) + $(fibfib $(( $1 - 3 ))) ))\n    fi\n}\n\ncandidate()\
    \ {\n    fibfib \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"2\") =\
    \ \"1\" ]]\n    [[ $(candidate \"1\") = \"0\" ]]\n    [[ $(candidate \"5\") =\
    \ \"4\" ]]\n    [[ $(candidate \"8\") = \"24\" ]]\n    [[ $(candidate \"10\")\
    \ = \"81\" ]]\n    [[ $(candidate \"12\") = \"274\" ]]\n    [[ $(candidate \"\
    14\") = \"927\" ]]\n}\n\nrun_test"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660001140
- exit_code: 0
  program: "#!/bin/bash\n# The FibFib number sequence is a sequence similar to the\
    \ Fibbonacci sequnece that's defined as follows:\n# fibfib(0) == 0\n# fibfib(1)\
    \ == 0\n# fibfib(2) == 1\n# fibfib(n) == fibfib(n-1) + fibfib(n-2) + fibfib(n-3).\n\
    # Please write a function to efficiently compute the n-th element of the fibfib\
    \ number sequence.\n#\n# $1 is an integer\nfibfib() {\n    if [[ $1 -eq 0 ]];\
    \ then\n        echo 0\n    elif [[ $1 -eq 1 ]]; then\n        echo 0\n    elif\
    \ [[ $1 -eq 2 ]]; then\n        echo 1\n    else\n        echo $(($(fibfib $(($1-1)))\
    \ + $(fibfib $(($1-2))) + $(fibfib $(($1-3)))))\n    fi\n}\n\ncandidate() {\n\
    \    fibfib \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"2\") = \"\
    1\" ]]\n    [[ $(candidate \"1\") = \"0\" ]]\n    [[ $(candidate \"5\") = \"4\"\
    \ ]]\n    [[ $(candidate \"8\") = \"24\" ]]\n    [[ $(candidate \"10\") = \"81\"\
    \ ]]\n    [[ $(candidate \"12\") = \"274\" ]]\n    [[ $(candidate \"14\") = \"\
    927\" ]]\n}\n\nrun_test"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660001140
- exit_code: 0
  program: "#!/bin/bash\n# The FibFib number sequence is a sequence similar to the\
    \ Fibbonacci sequnece that's defined as follows:\n# fibfib(0) == 0\n# fibfib(1)\
    \ == 0\n# fibfib(2) == 1\n# fibfib(n) == fibfib(n-1) + fibfib(n-2) + fibfib(n-3).\n\
    # Please write a function to efficiently compute the n-th element of the fibfib\
    \ number sequence.\n#\n# $1 is an integer\nfibfib() {\n    if [ $1 -eq 0 ]; then\n\
    \        echo 0\n    elif [ $1 -eq 1 ]; then\n        echo 0\n    elif [ $1 -eq\
    \ 2 ]; then\n        echo 1\n    else\n        echo $(( $(fibfib $(( $1 - 1 )))\
    \ + $(fibfib $(( $1 - 2 ))) + $(fibfib $(( $1 - 3 ))) ))\n    fi\n}\n\ncandidate()\
    \ {\n    fibfib \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"2\") =\
    \ \"1\" ]]\n    [[ $(candidate \"1\") = \"0\" ]]\n    [[ $(candidate \"5\") =\
    \ \"4\" ]]\n    [[ $(candidate \"8\") = \"24\" ]]\n    [[ $(candidate \"10\")\
    \ = \"81\" ]]\n    [[ $(candidate \"12\") = \"274\" ]]\n    [[ $(candidate \"\
    14\") = \"927\" ]]\n}\n\nrun_test"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660001140
- exit_code: 0
  program: "#!/bin/bash\n# The FibFib number sequence is a sequence similar to the\
    \ Fibbonacci sequnece that's defined as follows:\n# fibfib(0) == 0\n# fibfib(1)\
    \ == 0\n# fibfib(2) == 1\n# fibfib(n) == fibfib(n-1) + fibfib(n-2) + fibfib(n-3).\n\
    # Please write a function to efficiently compute the n-th element of the fibfib\
    \ number sequence.\n#\n# $1 is an integer\nfibfib() {\n    if [ $1 -eq 0 ]; then\n\
    \        echo 0\n    elif [ $1 -eq 1 ]; then\n        echo 0\n    elif [ $1 -eq\
    \ 2 ]; then\n        echo 1\n    else\n        echo $(( $(fibfib $(( $1 - 1 )))\
    \ + $(fibfib $(( $1 - 2 ))) + $(fibfib $(( $1 - 3 ))) ))\n    fi\n}\n\ncandidate()\
    \ {\n    fibfib \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"2\") =\
    \ \"1\" ]]\n    [[ $(candidate \"1\") = \"0\" ]]\n    [[ $(candidate \"5\") =\
    \ \"4\" ]]\n    [[ $(candidate \"8\") = \"24\" ]]\n    [[ $(candidate \"10\")\
    \ = \"81\" ]]\n    [[ $(candidate \"12\") = \"274\" ]]\n    [[ $(candidate \"\
    14\") = \"927\" ]]\n}\n\nrun_test"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660001140
- exit_code: 0
  program: "#!/bin/bash\n# The FibFib number sequence is a sequence similar to the\
    \ Fibbonacci sequnece that's defined as follows:\n# fibfib(0) == 0\n# fibfib(1)\
    \ == 0\n# fibfib(2) == 1\n# fibfib(n) == fibfib(n-1) + fibfib(n-2) + fibfib(n-3).\n\
    # Please write a function to efficiently compute the n-th element of the fibfib\
    \ number sequence.\n#\n# $1 is an integer\nfibfib() {\n    if [ $1 -eq 0 ]; then\n\
    \        echo 0\n    elif [ $1 -eq 1 ]; then\n        echo 0\n    elif [ $1 -eq\
    \ 2 ]; then\n        echo 1\n    else\n        echo $(($(fibfib $(($1-1))) + $(fibfib\
    \ $(($1-2))) + $(fibfib $(($1-3)))))\n    fi\n}\n\ncandidate() {\n    fibfib \"\
    $@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"2\") = \"1\" ]]\n    [[\
    \ $(candidate \"1\") = \"0\" ]]\n    [[ $(candidate \"5\") = \"4\" ]]\n    [[\
    \ $(candidate \"8\") = \"24\" ]]\n    [[ $(candidate \"10\") = \"81\" ]]\n   \
    \ [[ $(candidate \"12\") = \"274\" ]]\n    [[ $(candidate \"14\") = \"927\" ]]\n\
    }\n\nrun_test"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660001140
- exit_code: 1
  program: "#!/bin/bash\n# The FibFib number sequence is a sequence similar to the\
    \ Fibbonacci sequnece that's defined as follows:\n# fibfib(0) == 0\n# fibfib(1)\
    \ == 0\n# fibfib(2) == 1\n# fibfib(n) == fibfib(n-1) + fibfib(n-2) + fibfib(n-3).\n\
    # Please write a function to efficiently compute the n-th element of the fibfib\
    \ number sequence.\n#\n# $1 is an integer\nfibfib() {\n  local n=$1\n  local a=0\n\
    \  local b=0\n  local c=1\n  local d=0\n  for ((i=2; i<=n; i++)); do\n    d=$((a+b+c))\n\
    \    a=$b\n    b=$c\n    c=$d\n  done\n  echo $d\n}\n\ncandidate() {\n    fibfib\
    \ \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"2\") = \"1\" ]]\n  \
    \  [[ $(candidate \"1\") = \"0\" ]]\n    [[ $(candidate \"5\") = \"4\" ]]\n  \
    \  [[ $(candidate \"8\") = \"24\" ]]\n    [[ $(candidate \"10\") = \"81\" ]]\n\
    \    [[ $(candidate \"12\") = \"274\" ]]\n    [[ $(candidate \"14\") = \"927\"\
    \ ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660001136
- exit_code: 0
  program: "#!/bin/bash\n# The FibFib number sequence is a sequence similar to the\
    \ Fibbonacci sequnece that's defined as follows:\n# fibfib(0) == 0\n# fibfib(1)\
    \ == 0\n# fibfib(2) == 1\n# fibfib(n) == fibfib(n-1) + fibfib(n-2) + fibfib(n-3).\n\
    # Please write a function to efficiently compute the n-th element of the fibfib\
    \ number sequence.\n#\n# $1 is an integer\nfibfib() {\n    if [ $1 -eq 0 ]; then\n\
    \        echo 0\n    elif [ $1 -eq 1 ]; then\n        echo 0\n    elif [ $1 -eq\
    \ 2 ]; then\n        echo 1\n    else\n        echo $(( $(fibfib $(( $1 - 1 )))\
    \ + $(fibfib $(( $1 - 2 ))) + $(fibfib $(( $1 - 3 ))) ))\n    fi\n}\n\ncandidate()\
    \ {\n    fibfib \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"2\") =\
    \ \"1\" ]]\n    [[ $(candidate \"1\") = \"0\" ]]\n    [[ $(candidate \"5\") =\
    \ \"4\" ]]\n    [[ $(candidate \"8\") = \"24\" ]]\n    [[ $(candidate \"10\")\
    \ = \"81\" ]]\n    [[ $(candidate \"12\") = \"274\" ]]\n    [[ $(candidate \"\
    14\") = \"927\" ]]\n}\n\nrun_test"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660001140
- exit_code: 0
  program: "#!/bin/bash\n# The FibFib number sequence is a sequence similar to the\
    \ Fibbonacci sequnece that's defined as follows:\n# fibfib(0) == 0\n# fibfib(1)\
    \ == 0\n# fibfib(2) == 1\n# fibfib(n) == fibfib(n-1) + fibfib(n-2) + fibfib(n-3).\n\
    # Please write a function to efficiently compute the n-th element of the fibfib\
    \ number sequence.\n#\n# $1 is an integer\nfibfib() {\n    if [[ $1 -eq 0 ]];\
    \ then\n        echo 0\n    elif [[ $1 -eq 1 ]]; then\n        echo 0\n    elif\
    \ [[ $1 -eq 2 ]]; then\n        echo 1\n    else\n        echo $(( $(fibfib $((\
    \ $1 - 1 ))) + $(fibfib $(( $1 - 2 ))) + $(fibfib $(( $1 - 3 ))) ))\n    fi\n\
    }\n\ncandidate() {\n    fibfib \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate\
    \ \"2\") = \"1\" ]]\n    [[ $(candidate \"1\") = \"0\" ]]\n    [[ $(candidate\
    \ \"5\") = \"4\" ]]\n    [[ $(candidate \"8\") = \"24\" ]]\n    [[ $(candidate\
    \ \"10\") = \"81\" ]]\n    [[ $(candidate \"12\") = \"274\" ]]\n    [[ $(candidate\
    \ \"14\") = \"927\" ]]\n}\n\nrun_test"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660001140
- exit_code: 0
  program: "#!/bin/bash\n# The FibFib number sequence is a sequence similar to the\
    \ Fibbonacci sequnece that's defined as follows:\n# fibfib(0) == 0\n# fibfib(1)\
    \ == 0\n# fibfib(2) == 1\n# fibfib(n) == fibfib(n-1) + fibfib(n-2) + fibfib(n-3).\n\
    # Please write a function to efficiently compute the n-th element of the fibfib\
    \ number sequence.\n#\n# $1 is an integer\nfibfib() {\n    if [ $1 -eq 0 ]; then\n\
    \        echo 0\n    elif [ $1 -eq 1 ]; then\n        echo 0\n    elif [ $1 -eq\
    \ 2 ]; then\n        echo 1\n    else\n        echo $(( $(fibfib $(( $1 - 1 )))\
    \ + $(fibfib $(( $1 - 2 ))) + $(fibfib $(( $1 - 3 ))) ))\n    fi\n}\n\ncandidate()\
    \ {\n    fibfib \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"2\") =\
    \ \"1\" ]]\n    [[ $(candidate \"1\") = \"0\" ]]\n    [[ $(candidate \"5\") =\
    \ \"4\" ]]\n    [[ $(candidate \"8\") = \"24\" ]]\n    [[ $(candidate \"10\")\
    \ = \"81\" ]]\n    [[ $(candidate \"12\") = \"274\" ]]\n    [[ $(candidate \"\
    14\") = \"927\" ]]\n}\n\nrun_test"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660001140
- exit_code: 0
  program: "#!/bin/bash\n# The FibFib number sequence is a sequence similar to the\
    \ Fibbonacci sequnece that's defined as follows:\n# fibfib(0) == 0\n# fibfib(1)\
    \ == 0\n# fibfib(2) == 1\n# fibfib(n) == fibfib(n-1) + fibfib(n-2) + fibfib(n-3).\n\
    # Please write a function to efficiently compute the n-th element of the fibfib\
    \ number sequence.\n#\n# $1 is an integer\nfibfib() {\n  if [ $1 -eq 0 ]; then\n\
    \    echo 0\n  elif [ $1 -eq 1 ]; then\n    echo 0\n  elif [ $1 -eq 2 ]; then\n\
    \    echo 1\n  else\n    echo $(( $(fibfib $(( $1 - 1 ))) + $(fibfib $(( $1 -\
    \ 2 ))) + $(fibfib $(( $1 - 3 ))) ))\n  fi\n}\n\ncandidate() {\n    fibfib \"\
    $@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"2\") = \"1\" ]]\n    [[\
    \ $(candidate \"1\") = \"0\" ]]\n    [[ $(candidate \"5\") = \"4\" ]]\n    [[\
    \ $(candidate \"8\") = \"24\" ]]\n    [[ $(candidate \"10\") = \"81\" ]]\n   \
    \ [[ $(candidate \"12\") = \"274\" ]]\n    [[ $(candidate \"14\") = \"927\" ]]\n\
    }\n\nrun_test"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660001140
- exit_code: 0
  program: "#!/bin/bash\n# The FibFib number sequence is a sequence similar to the\
    \ Fibbonacci sequnece that's defined as follows:\n# fibfib(0) == 0\n# fibfib(1)\
    \ == 0\n# fibfib(2) == 1\n# fibfib(n) == fibfib(n-1) + fibfib(n-2) + fibfib(n-3).\n\
    # Please write a function to efficiently compute the n-th element of the fibfib\
    \ number sequence.\n#\n# $1 is an integer\nfibfib() {\n    if [ $1 -eq 0 ]; then\n\
    \        echo 0\n    elif [ $1 -eq 1 ]; then\n        echo 0\n    elif [ $1 -eq\
    \ 2 ]; then\n        echo 1\n    else\n        echo $(( $(fibfib $(( $1 - 1 )))\
    \ + $(fibfib $(( $1 - 2 ))) + $(fibfib $(( $1 - 3 ))) ))\n    fi\n}\n\ncandidate()\
    \ {\n    fibfib \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"2\") =\
    \ \"1\" ]]\n    [[ $(candidate \"1\") = \"0\" ]]\n    [[ $(candidate \"5\") =\
    \ \"4\" ]]\n    [[ $(candidate \"8\") = \"24\" ]]\n    [[ $(candidate \"10\")\
    \ = \"81\" ]]\n    [[ $(candidate \"12\") = \"274\" ]]\n    [[ $(candidate \"\
    14\") = \"927\" ]]\n}\n\nrun_test"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660001140
- exit_code: 0
  program: "#!/bin/bash\n# The FibFib number sequence is a sequence similar to the\
    \ Fibbonacci sequnece that's defined as follows:\n# fibfib(0) == 0\n# fibfib(1)\
    \ == 0\n# fibfib(2) == 1\n# fibfib(n) == fibfib(n-1) + fibfib(n-2) + fibfib(n-3).\n\
    # Please write a function to efficiently compute the n-th element of the fibfib\
    \ number sequence.\n#\n# $1 is an integer\nfibfib() {\n    if [ $1 -eq 0 ]; then\n\
    \        echo 0\n    elif [ $1 -eq 1 ]; then\n        echo 0\n    elif [ $1 -eq\
    \ 2 ]; then\n        echo 1\n    else\n        echo $(( $(fibfib $(( $1 - 1 )))\
    \ + $(fibfib $(( $1 - 2 ))) + $(fibfib $(( $1 - 3 ))) ))\n    fi\n}\n\ncandidate()\
    \ {\n    fibfib \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"2\") =\
    \ \"1\" ]]\n    [[ $(candidate \"1\") = \"0\" ]]\n    [[ $(candidate \"5\") =\
    \ \"4\" ]]\n    [[ $(candidate \"8\") = \"24\" ]]\n    [[ $(candidate \"10\")\
    \ = \"81\" ]]\n    [[ $(candidate \"12\") = \"274\" ]]\n    [[ $(candidate \"\
    14\") = \"927\" ]]\n}\n\nrun_test"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660001140
- exit_code: 0
  program: "#!/bin/bash\n# The FibFib number sequence is a sequence similar to the\
    \ Fibbonacci sequnece that's defined as follows:\n# fibfib(0) == 0\n# fibfib(1)\
    \ == 0\n# fibfib(2) == 1\n# fibfib(n) == fibfib(n-1) + fibfib(n-2) + fibfib(n-3).\n\
    # Please write a function to efficiently compute the n-th element of the fibfib\
    \ number sequence.\n#\n# $1 is an integer\nfibfib() {\n    if [ $1 -eq 0 ]; then\n\
    \        echo 0\n    elif [ $1 -eq 1 ]; then\n        echo 0\n    elif [ $1 -eq\
    \ 2 ]; then\n        echo 1\n    else\n        echo $(( $(fibfib $(( $1 - 1 )))\
    \ + $(fibfib $(( $1 - 2 ))) + $(fibfib $(( $1 - 3 ))) ))\n    fi\n}\n\ncandidate()\
    \ {\n    fibfib \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"2\") =\
    \ \"1\" ]]\n    [[ $(candidate \"1\") = \"0\" ]]\n    [[ $(candidate \"5\") =\
    \ \"4\" ]]\n    [[ $(candidate \"8\") = \"24\" ]]\n    [[ $(candidate \"10\")\
    \ = \"81\" ]]\n    [[ $(candidate \"12\") = \"274\" ]]\n    [[ $(candidate \"\
    14\") = \"927\" ]]\n}\n\nrun_test"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660001140
- exit_code: 0
  program: "#!/bin/bash\n# The FibFib number sequence is a sequence similar to the\
    \ Fibbonacci sequnece that's defined as follows:\n# fibfib(0) == 0\n# fibfib(1)\
    \ == 0\n# fibfib(2) == 1\n# fibfib(n) == fibfib(n-1) + fibfib(n-2) + fibfib(n-3).\n\
    # Please write a function to efficiently compute the n-th element of the fibfib\
    \ number sequence.\n#\n# $1 is an integer\nfibfib() {\n    if [ $1 -eq 0 ]; then\n\
    \        echo 0\n    elif [ $1 -eq 1 ]; then\n        echo 0\n    elif [ $1 -eq\
    \ 2 ]; then\n        echo 1\n    else\n        echo $(( $(fibfib $(( $1 - 1 )))\
    \ + $(fibfib $(( $1 - 2 ))) + $(fibfib $(( $1 - 3 ))) ))\n    fi\n}\n\ncandidate()\
    \ {\n    fibfib \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"2\") =\
    \ \"1\" ]]\n    [[ $(candidate \"1\") = \"0\" ]]\n    [[ $(candidate \"5\") =\
    \ \"4\" ]]\n    [[ $(candidate \"8\") = \"24\" ]]\n    [[ $(candidate \"10\")\
    \ = \"81\" ]]\n    [[ $(candidate \"12\") = \"274\" ]]\n    [[ $(candidate \"\
    14\") = \"927\" ]]\n}\n\nrun_test"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660001140
- exit_code: 0
  program: "#!/bin/bash\n# The FibFib number sequence is a sequence similar to the\
    \ Fibbonacci sequnece that's defined as follows:\n# fibfib(0) == 0\n# fibfib(1)\
    \ == 0\n# fibfib(2) == 1\n# fibfib(n) == fibfib(n-1) + fibfib(n-2) + fibfib(n-3).\n\
    # Please write a function to efficiently compute the n-th element of the fibfib\
    \ number sequence.\n#\n# $1 is an integer\nfibfib() {\n    if [ $1 -eq 0 ]; then\n\
    \        echo 0\n    elif [ $1 -eq 1 ]; then\n        echo 0\n    elif [ $1 -eq\
    \ 2 ]; then\n        echo 1\n    else\n        echo $(( $(fibfib $(( $1 - 1 )))\
    \ + $(fibfib $(( $1 - 2 ))) + $(fibfib $(( $1 - 3 ))) ))\n    fi\n}\n\ncandidate()\
    \ {\n    fibfib \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"2\") =\
    \ \"1\" ]]\n    [[ $(candidate \"1\") = \"0\" ]]\n    [[ $(candidate \"5\") =\
    \ \"4\" ]]\n    [[ $(candidate \"8\") = \"24\" ]]\n    [[ $(candidate \"10\")\
    \ = \"81\" ]]\n    [[ $(candidate \"12\") = \"274\" ]]\n    [[ $(candidate \"\
    14\") = \"927\" ]]\n}\n\nrun_test"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660001140
- exit_code: 0
  program: "#!/bin/bash\n# The FibFib number sequence is a sequence similar to the\
    \ Fibbonacci sequnece that's defined as follows:\n# fibfib(0) == 0\n# fibfib(1)\
    \ == 0\n# fibfib(2) == 1\n# fibfib(n) == fibfib(n-1) + fibfib(n-2) + fibfib(n-3).\n\
    # Please write a function to efficiently compute the n-th element of the fibfib\
    \ number sequence.\n#\n# $1 is an integer\nfibfib() {\n    if [ $1 -eq 0 ]; then\n\
    \        echo 0\n    elif [ $1 -eq 1 ]; then\n        echo 0\n    elif [ $1 -eq\
    \ 2 ]; then\n        echo 1\n    else\n        echo $(( $(fibfib $(( $1 - 1 )))\
    \ + $(fibfib $(( $1 - 2 ))) + $(fibfib $(( $1 - 3 ))) ))\n    fi\n}\n\ncandidate()\
    \ {\n    fibfib \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"2\") =\
    \ \"1\" ]]\n    [[ $(candidate \"1\") = \"0\" ]]\n    [[ $(candidate \"5\") =\
    \ \"4\" ]]\n    [[ $(candidate \"8\") = \"24\" ]]\n    [[ $(candidate \"10\")\
    \ = \"81\" ]]\n    [[ $(candidate \"12\") = \"274\" ]]\n    [[ $(candidate \"\
    14\") = \"927\" ]]\n}\n\nrun_test"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660001140
- exit_code: 0
  program: "#!/bin/bash\n# The FibFib number sequence is a sequence similar to the\
    \ Fibbonacci sequnece that's defined as follows:\n# fibfib(0) == 0\n# fibfib(1)\
    \ == 0\n# fibfib(2) == 1\n# fibfib(n) == fibfib(n-1) + fibfib(n-2) + fibfib(n-3).\n\
    # Please write a function to efficiently compute the n-th element of the fibfib\
    \ number sequence.\n#\n# $1 is an integer\nfibfib() {\n    if [ $1 -eq 0 ]; then\n\
    \        echo 0\n    elif [ $1 -eq 1 ]; then\n        echo 0\n    elif [ $1 -eq\
    \ 2 ]; then\n        echo 1\n    else\n        echo $(( $(fibfib $(( $1 - 1 )))\
    \ + $(fibfib $(( $1 - 2 ))) + $(fibfib $(( $1 - 3 ))) ))\n    fi\n}\n\ncandidate()\
    \ {\n    fibfib \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"2\") =\
    \ \"1\" ]]\n    [[ $(candidate \"1\") = \"0\" ]]\n    [[ $(candidate \"5\") =\
    \ \"4\" ]]\n    [[ $(candidate \"8\") = \"24\" ]]\n    [[ $(candidate \"10\")\
    \ = \"81\" ]]\n    [[ $(candidate \"12\") = \"274\" ]]\n    [[ $(candidate \"\
    14\") = \"927\" ]]\n}\n\nrun_test"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660001140
- exit_code: 0
  program: "#!/bin/bash\n# The FibFib number sequence is a sequence similar to the\
    \ Fibbonacci sequnece that's defined as follows:\n# fibfib(0) == 0\n# fibfib(1)\
    \ == 0\n# fibfib(2) == 1\n# fibfib(n) == fibfib(n-1) + fibfib(n-2) + fibfib(n-3).\n\
    # Please write a function to efficiently compute the n-th element of the fibfib\
    \ number sequence.\n#\n# $1 is an integer\nfibfib() {\n    if [ $1 -eq 0 ]; then\n\
    \        echo 0\n    elif [ $1 -eq 1 ]; then\n        echo 0\n    elif [ $1 -eq\
    \ 2 ]; then\n        echo 1\n    else\n        echo $(( $(fibfib $(( $1 - 1 )))\
    \ + $(fibfib $(( $1 - 2 ))) + $(fibfib $(( $1 - 3 ))) ))\n    fi\n}\n\ncandidate()\
    \ {\n    fibfib \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"2\") =\
    \ \"1\" ]]\n    [[ $(candidate \"1\") = \"0\" ]]\n    [[ $(candidate \"5\") =\
    \ \"4\" ]]\n    [[ $(candidate \"8\") = \"24\" ]]\n    [[ $(candidate \"10\")\
    \ = \"81\" ]]\n    [[ $(candidate \"12\") = \"274\" ]]\n    [[ $(candidate \"\
    14\") = \"927\" ]]\n}\n\nrun_test"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660001140
- exit_code: 0
  program: "#!/bin/bash\n# The FibFib number sequence is a sequence similar to the\
    \ Fibbonacci sequnece that's defined as follows:\n# fibfib(0) == 0\n# fibfib(1)\
    \ == 0\n# fibfib(2) == 1\n# fibfib(n) == fibfib(n-1) + fibfib(n-2) + fibfib(n-3).\n\
    # Please write a function to efficiently compute the n-th element of the fibfib\
    \ number sequence.\n#\n# $1 is an integer\nfibfib() {\n    if [ $1 -eq 0 ]; then\n\
    \        echo 0\n    elif [ $1 -eq 1 ]; then\n        echo 0\n    elif [ $1 -eq\
    \ 2 ]; then\n        echo 1\n    else\n        echo $(( $(fibfib $(( $1 - 1 )))\
    \ + $(fibfib $(( $1 - 2 ))) + $(fibfib $(( $1 - 3 ))) ))\n    fi\n}\n\ncandidate()\
    \ {\n    fibfib \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"2\") =\
    \ \"1\" ]]\n    [[ $(candidate \"1\") = \"0\" ]]\n    [[ $(candidate \"5\") =\
    \ \"4\" ]]\n    [[ $(candidate \"8\") = \"24\" ]]\n    [[ $(candidate \"10\")\
    \ = \"81\" ]]\n    [[ $(candidate \"12\") = \"274\" ]]\n    [[ $(candidate \"\
    14\") = \"927\" ]]\n}\n\nrun_test"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660001140
- exit_code: 0
  program: "#!/bin/bash\n# The FibFib number sequence is a sequence similar to the\
    \ Fibbonacci sequnece that's defined as follows:\n# fibfib(0) == 0\n# fibfib(1)\
    \ == 0\n# fibfib(2) == 1\n# fibfib(n) == fibfib(n-1) + fibfib(n-2) + fibfib(n-3).\n\
    # Please write a function to efficiently compute the n-th element of the fibfib\
    \ number sequence.\n#\n# $1 is an integer\nfibfib() {\n    if [[ $1 -eq 0 ]];\
    \ then\n        echo 0\n    elif [[ $1 -eq 1 ]]; then\n        echo 0\n    elif\
    \ [[ $1 -eq 2 ]]; then\n        echo 1\n    else\n        echo $(( $(fibfib $((\
    \ $1 - 1 ))) + $(fibfib $(( $1 - 2 ))) + $(fibfib $(( $1 - 3 ))) ))\n    fi\n\
    }\n\ncandidate() {\n    fibfib \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate\
    \ \"2\") = \"1\" ]]\n    [[ $(candidate \"1\") = \"0\" ]]\n    [[ $(candidate\
    \ \"5\") = \"4\" ]]\n    [[ $(candidate \"8\") = \"24\" ]]\n    [[ $(candidate\
    \ \"10\") = \"81\" ]]\n    [[ $(candidate \"12\") = \"274\" ]]\n    [[ $(candidate\
    \ \"14\") = \"927\" ]]\n}\n\nrun_test"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660001140
- exit_code: 0
  program: "#!/bin/bash\n# The FibFib number sequence is a sequence similar to the\
    \ Fibbonacci sequnece that's defined as follows:\n# fibfib(0) == 0\n# fibfib(1)\
    \ == 0\n# fibfib(2) == 1\n# fibfib(n) == fibfib(n-1) + fibfib(n-2) + fibfib(n-3).\n\
    # Please write a function to efficiently compute the n-th element of the fibfib\
    \ number sequence.\n#\n# $1 is an integer\nfibfib() {\n    if [ $1 -eq 0 ]; then\n\
    \        echo 0\n    elif [ $1 -eq 1 ]; then\n        echo 0\n    elif [ $1 -eq\
    \ 2 ]; then\n        echo 1\n    else\n        echo $(( $(fibfib $(( $1 - 1 )))\
    \ + $(fibfib $(( $1 - 2 ))) + $(fibfib $(( $1 - 3 ))) ))\n    fi\n}\n\ncandidate()\
    \ {\n    fibfib \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"2\") =\
    \ \"1\" ]]\n    [[ $(candidate \"1\") = \"0\" ]]\n    [[ $(candidate \"5\") =\
    \ \"4\" ]]\n    [[ $(candidate \"8\") = \"24\" ]]\n    [[ $(candidate \"10\")\
    \ = \"81\" ]]\n    [[ $(candidate \"12\") = \"274\" ]]\n    [[ $(candidate \"\
    14\") = \"927\" ]]\n}\n\nrun_test"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660001140
- exit_code: 0
  program: "#!/bin/bash\n# The FibFib number sequence is a sequence similar to the\
    \ Fibbonacci sequnece that's defined as follows:\n# fibfib(0) == 0\n# fibfib(1)\
    \ == 0\n# fibfib(2) == 1\n# fibfib(n) == fibfib(n-1) + fibfib(n-2) + fibfib(n-3).\n\
    # Please write a function to efficiently compute the n-th element of the fibfib\
    \ number sequence.\n#\n# $1 is an integer\nfibfib() {\n  if [ $1 -eq 0 ]; then\n\
    \    echo 0\n  elif [ $1 -eq 1 ]; then\n    echo 0\n  elif [ $1 -eq 2 ]; then\n\
    \    echo 1\n  else\n    echo $(( $(fibfib $(( $1 - 1 ))) + $(fibfib $(( $1 -\
    \ 2 ))) + $(fibfib $(( $1 - 3 ))) ))\n  fi\n}\n\ncandidate() {\n    fibfib \"\
    $@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"2\") = \"1\" ]]\n    [[\
    \ $(candidate \"1\") = \"0\" ]]\n    [[ $(candidate \"5\") = \"4\" ]]\n    [[\
    \ $(candidate \"8\") = \"24\" ]]\n    [[ $(candidate \"10\") = \"81\" ]]\n   \
    \ [[ $(candidate \"12\") = \"274\" ]]\n    [[ $(candidate \"14\") = \"927\" ]]\n\
    }\n\nrun_test"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660001140
- exit_code: 0
  program: "#!/bin/bash\n# The FibFib number sequence is a sequence similar to the\
    \ Fibbonacci sequnece that's defined as follows:\n# fibfib(0) == 0\n# fibfib(1)\
    \ == 0\n# fibfib(2) == 1\n# fibfib(n) == fibfib(n-1) + fibfib(n-2) + fibfib(n-3).\n\
    # Please write a function to efficiently compute the n-th element of the fibfib\
    \ number sequence.\n#\n# $1 is an integer\nfibfib() {\n  if [ $1 -eq 0 ]; then\n\
    \    echo 0\n  elif [ $1 -eq 1 ]; then\n    echo 0\n  elif [ $1 -eq 2 ]; then\n\
    \    echo 1\n  else\n    echo $(( $(fibfib $(( $1 - 1 ))) + $(fibfib $(( $1 -\
    \ 2 ))) + $(fibfib $(( $1 - 3 ))) ))\n  fi\n}\n\ncandidate() {\n    fibfib \"\
    $@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"2\") = \"1\" ]]\n    [[\
    \ $(candidate \"1\") = \"0\" ]]\n    [[ $(candidate \"5\") = \"4\" ]]\n    [[\
    \ $(candidate \"8\") = \"24\" ]]\n    [[ $(candidate \"10\") = \"81\" ]]\n   \
    \ [[ $(candidate \"12\") = \"274\" ]]\n    [[ $(candidate \"14\") = \"927\" ]]\n\
    }\n\nrun_test"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660001140
- exit_code: 0
  program: "#!/bin/bash\n# The FibFib number sequence is a sequence similar to the\
    \ Fibbonacci sequnece that's defined as follows:\n# fibfib(0) == 0\n# fibfib(1)\
    \ == 0\n# fibfib(2) == 1\n# fibfib(n) == fibfib(n-1) + fibfib(n-2) + fibfib(n-3).\n\
    # Please write a function to efficiently compute the n-th element of the fibfib\
    \ number sequence.\n#\n# $1 is an integer\nfibfib() {\n    if [[ $1 -eq 0 ]];\
    \ then\n        echo 0\n    elif [[ $1 -eq 1 ]]; then\n        echo 0\n    elif\
    \ [[ $1 -eq 2 ]]; then\n        echo 1\n    else\n        echo $(( $(fibfib $((\
    \ $1 - 1 ))) + $(fibfib $(( $1 - 2 ))) + $(fibfib $(( $1 - 3 ))) ))\n    fi\n\
    }\n\ncandidate() {\n    fibfib \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate\
    \ \"2\") = \"1\" ]]\n    [[ $(candidate \"1\") = \"0\" ]]\n    [[ $(candidate\
    \ \"5\") = \"4\" ]]\n    [[ $(candidate \"8\") = \"24\" ]]\n    [[ $(candidate\
    \ \"10\") = \"81\" ]]\n    [[ $(candidate \"12\") = \"274\" ]]\n    [[ $(candidate\
    \ \"14\") = \"927\" ]]\n}\n\nrun_test"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660001140
- exit_code: 0
  program: "#!/bin/bash\n# The FibFib number sequence is a sequence similar to the\
    \ Fibbonacci sequnece that's defined as follows:\n# fibfib(0) == 0\n# fibfib(1)\
    \ == 0\n# fibfib(2) == 1\n# fibfib(n) == fibfib(n-1) + fibfib(n-2) + fibfib(n-3).\n\
    # Please write a function to efficiently compute the n-th element of the fibfib\
    \ number sequence.\n#\n# $1 is an integer\nfibfib() {\n    if [ $1 -eq 0 ]; then\n\
    \        echo 0\n    elif [ $1 -eq 1 ]; then\n        echo 0\n    elif [ $1 -eq\
    \ 2 ]; then\n        echo 1\n    else\n        echo $(( $(fibfib $(( $1 - 1 )))\
    \ + $(fibfib $(( $1 - 2 ))) + $(fibfib $(( $1 - 3 ))) ))\n    fi\n}\n\ncandidate()\
    \ {\n    fibfib \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"2\") =\
    \ \"1\" ]]\n    [[ $(candidate \"1\") = \"0\" ]]\n    [[ $(candidate \"5\") =\
    \ \"4\" ]]\n    [[ $(candidate \"8\") = \"24\" ]]\n    [[ $(candidate \"10\")\
    \ = \"81\" ]]\n    [[ $(candidate \"12\") = \"274\" ]]\n    [[ $(candidate \"\
    14\") = \"927\" ]]\n}\n\nrun_test"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660001140
- exit_code: 0
  program: "#!/bin/bash\n# The FibFib number sequence is a sequence similar to the\
    \ Fibbonacci sequnece that's defined as follows:\n# fibfib(0) == 0\n# fibfib(1)\
    \ == 0\n# fibfib(2) == 1\n# fibfib(n) == fibfib(n-1) + fibfib(n-2) + fibfib(n-3).\n\
    # Please write a function to efficiently compute the n-th element of the fibfib\
    \ number sequence.\n#\n# $1 is an integer\nfibfib() {\n    if [ $1 -eq 0 ]; then\n\
    \        echo 0\n    elif [ $1 -eq 1 ]; then\n        echo 0\n    elif [ $1 -eq\
    \ 2 ]; then\n        echo 1\n    else\n        echo $(( $(fibfib $(( $1 - 1 )))\
    \ + $(fibfib $(( $1 - 2 ))) + $(fibfib $(( $1 - 3 ))) ))\n    fi\n}\n\ncandidate()\
    \ {\n    fibfib \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"2\") =\
    \ \"1\" ]]\n    [[ $(candidate \"1\") = \"0\" ]]\n    [[ $(candidate \"5\") =\
    \ \"4\" ]]\n    [[ $(candidate \"8\") = \"24\" ]]\n    [[ $(candidate \"10\")\
    \ = \"81\" ]]\n    [[ $(candidate \"12\") = \"274\" ]]\n    [[ $(candidate \"\
    14\") = \"927\" ]]\n}\n\nrun_test"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660001140
- exit_code: 0
  program: "#!/bin/bash\n# The FibFib number sequence is a sequence similar to the\
    \ Fibbonacci sequnece that's defined as follows:\n# fibfib(0) == 0\n# fibfib(1)\
    \ == 0\n# fibfib(2) == 1\n# fibfib(n) == fibfib(n-1) + fibfib(n-2) + fibfib(n-3).\n\
    # Please write a function to efficiently compute the n-th element of the fibfib\
    \ number sequence.\n#\n# $1 is an integer\nfibfib() {\n  if [[ $1 -eq 0 ]]; then\n\
    \    echo 0\n  elif [[ $1 -eq 1 ]]; then\n    echo 0\n  elif [[ $1 -eq 2 ]]; then\n\
    \    echo 1\n  else\n    echo $(( $(fibfib $(( $1 - 1 ))) + $(fibfib $(( $1 -\
    \ 2 ))) + $(fibfib $(( $1 - 3 ))) ))\n  fi\n}\n\ncandidate() {\n    fibfib \"\
    $@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"2\") = \"1\" ]]\n    [[\
    \ $(candidate \"1\") = \"0\" ]]\n    [[ $(candidate \"5\") = \"4\" ]]\n    [[\
    \ $(candidate \"8\") = \"24\" ]]\n    [[ $(candidate \"10\") = \"81\" ]]\n   \
    \ [[ $(candidate \"12\") = \"274\" ]]\n    [[ $(candidate \"14\") = \"927\" ]]\n\
    }\n\nrun_test"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660001140
- exit_code: 0
  program: "#!/bin/bash\n# The FibFib number sequence is a sequence similar to the\
    \ Fibbonacci sequnece that's defined as follows:\n# fibfib(0) == 0\n# fibfib(1)\
    \ == 0\n# fibfib(2) == 1\n# fibfib(n) == fibfib(n-1) + fibfib(n-2) + fibfib(n-3).\n\
    # Please write a function to efficiently compute the n-th element of the fibfib\
    \ number sequence.\n#\n# $1 is an integer\nfibfib() {\n    if [[ $1 -eq 0 ]];\
    \ then\n        echo 0\n    elif [[ $1 -eq 1 ]]; then\n        echo 0\n    elif\
    \ [[ $1 -eq 2 ]]; then\n        echo 1\n    else\n        echo $(( $(fibfib $((\
    \ $1 - 1 ))) + $(fibfib $(( $1 - 2 ))) + $(fibfib $(( $1 - 3 ))) ))\n    fi\n\
    }\n\ncandidate() {\n    fibfib \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate\
    \ \"2\") = \"1\" ]]\n    [[ $(candidate \"1\") = \"0\" ]]\n    [[ $(candidate\
    \ \"5\") = \"4\" ]]\n    [[ $(candidate \"8\") = \"24\" ]]\n    [[ $(candidate\
    \ \"10\") = \"81\" ]]\n    [[ $(candidate \"12\") = \"274\" ]]\n    [[ $(candidate\
    \ \"14\") = \"927\" ]]\n}\n\nrun_test"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660001140
- exit_code: 0
  program: "#!/bin/bash\n# The FibFib number sequence is a sequence similar to the\
    \ Fibbonacci sequnece that's defined as follows:\n# fibfib(0) == 0\n# fibfib(1)\
    \ == 0\n# fibfib(2) == 1\n# fibfib(n) == fibfib(n-1) + fibfib(n-2) + fibfib(n-3).\n\
    # Please write a function to efficiently compute the n-th element of the fibfib\
    \ number sequence.\n#\n# $1 is an integer\nfibfib() {\n    if [ $1 -eq 0 ]; then\n\
    \        echo 0\n    elif [ $1 -eq 1 ]; then\n        echo 0\n    elif [ $1 -eq\
    \ 2 ]; then\n        echo 1\n    else\n        echo $(( $(fibfib $(( $1 - 1 )))\
    \ + $(fibfib $(( $1 - 2 ))) + $(fibfib $(( $1 - 3 ))) ))\n    fi\n}\n\ncandidate()\
    \ {\n    fibfib \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"2\") =\
    \ \"1\" ]]\n    [[ $(candidate \"1\") = \"0\" ]]\n    [[ $(candidate \"5\") =\
    \ \"4\" ]]\n    [[ $(candidate \"8\") = \"24\" ]]\n    [[ $(candidate \"10\")\
    \ = \"81\" ]]\n    [[ $(candidate \"12\") = \"274\" ]]\n    [[ $(candidate \"\
    14\") = \"927\" ]]\n}\n\nrun_test"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660001140
- exit_code: 0
  program: "#!/bin/bash\n# The FibFib number sequence is a sequence similar to the\
    \ Fibbonacci sequnece that's defined as follows:\n# fibfib(0) == 0\n# fibfib(1)\
    \ == 0\n# fibfib(2) == 1\n# fibfib(n) == fibfib(n-1) + fibfib(n-2) + fibfib(n-3).\n\
    # Please write a function to efficiently compute the n-th element of the fibfib\
    \ number sequence.\n#\n# $1 is an integer\nfibfib() {\n    if [ $1 -eq 0 ]; then\n\
    \        echo 0\n    elif [ $1 -eq 1 ]; then\n        echo 0\n    elif [ $1 -eq\
    \ 2 ]; then\n        echo 1\n    else\n        echo $(($(fibfib $(($1-1))) + $(fibfib\
    \ $(($1-2))) + $(fibfib $(($1-3)))))\n    fi\n}\n\ncandidate() {\n    fibfib \"\
    $@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"2\") = \"1\" ]]\n    [[\
    \ $(candidate \"1\") = \"0\" ]]\n    [[ $(candidate \"5\") = \"4\" ]]\n    [[\
    \ $(candidate \"8\") = \"24\" ]]\n    [[ $(candidate \"10\") = \"81\" ]]\n   \
    \ [[ $(candidate \"12\") = \"274\" ]]\n    [[ $(candidate \"14\") = \"927\" ]]\n\
    }\n\nrun_test"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660001140
- exit_code: 0
  program: "#!/bin/bash\n# The FibFib number sequence is a sequence similar to the\
    \ Fibbonacci sequnece that's defined as follows:\n# fibfib(0) == 0\n# fibfib(1)\
    \ == 0\n# fibfib(2) == 1\n# fibfib(n) == fibfib(n-1) + fibfib(n-2) + fibfib(n-3).\n\
    # Please write a function to efficiently compute the n-th element of the fibfib\
    \ number sequence.\n#\n# $1 is an integer\nfibfib() {\n    local n=$1\n    local\
    \ a=0\n    local b=0\n    local c=1\n    local d=0\n    if [ $n -eq 0 ]; then\n\
    \        echo 0\n    elif [ $n -eq 1 ]; then\n        echo 0\n    elif [ $n -eq\
    \ 2 ]; then\n        echo 1\n    else\n        for i in $(seq 3 $n); do\n    \
    \        d=$((a+b+c))\n            a=$b\n            b=$c\n            c=$d\n\
    \        done\n        echo $d\n    fi\n}\n\ncandidate() {\n    fibfib \"$@\"\n\
    }\n\nset -e\nrun_test() {\n    [[ $(candidate \"2\") = \"1\" ]]\n    [[ $(candidate\
    \ \"1\") = \"0\" ]]\n    [[ $(candidate \"5\") = \"4\" ]]\n    [[ $(candidate\
    \ \"8\") = \"24\" ]]\n    [[ $(candidate \"10\") = \"81\" ]]\n    [[ $(candidate\
    \ \"12\") = \"274\" ]]\n    [[ $(candidate \"14\") = \"927\" ]]\n}\n\nrun_test"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660001136
- exit_code: 0
  program: "#!/bin/bash\n# The FibFib number sequence is a sequence similar to the\
    \ Fibbonacci sequnece that's defined as follows:\n# fibfib(0) == 0\n# fibfib(1)\
    \ == 0\n# fibfib(2) == 1\n# fibfib(n) == fibfib(n-1) + fibfib(n-2) + fibfib(n-3).\n\
    # Please write a function to efficiently compute the n-th element of the fibfib\
    \ number sequence.\n#\n# $1 is an integer\nfibfib() {\n    if [ $1 -eq 0 ]; then\n\
    \        echo 0\n    elif [ $1 -eq 1 ]; then\n        echo 0\n    elif [ $1 -eq\
    \ 2 ]; then\n        echo 1\n    else\n        echo $(( $(fibfib $(( $1 - 1 )))\
    \ + $(fibfib $(( $1 - 2 ))) + $(fibfib $(( $1 - 3 ))) ))\n    fi\n}\n\ncandidate()\
    \ {\n    fibfib \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"2\") =\
    \ \"1\" ]]\n    [[ $(candidate \"1\") = \"0\" ]]\n    [[ $(candidate \"5\") =\
    \ \"4\" ]]\n    [[ $(candidate \"8\") = \"24\" ]]\n    [[ $(candidate \"10\")\
    \ = \"81\" ]]\n    [[ $(candidate \"12\") = \"274\" ]]\n    [[ $(candidate \"\
    14\") = \"927\" ]]\n}\n\nrun_test"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660001140
- exit_code: 0
  program: "#!/bin/bash\n# The FibFib number sequence is a sequence similar to the\
    \ Fibbonacci sequnece that's defined as follows:\n# fibfib(0) == 0\n# fibfib(1)\
    \ == 0\n# fibfib(2) == 1\n# fibfib(n) == fibfib(n-1) + fibfib(n-2) + fibfib(n-3).\n\
    # Please write a function to efficiently compute the n-th element of the fibfib\
    \ number sequence.\n#\n# $1 is an integer\nfibfib() {\n    if [ $1 -eq 0 ]; then\n\
    \        echo 0\n    elif [ $1 -eq 1 ]; then\n        echo 0\n    elif [ $1 -eq\
    \ 2 ]; then\n        echo 1\n    else\n        echo $(( $(fibfib $(( $1 - 1 )))\
    \ + $(fibfib $(( $1 - 2 ))) + $(fibfib $(( $1 - 3 ))) ))\n    fi\n}\n\ncandidate()\
    \ {\n    fibfib \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"2\") =\
    \ \"1\" ]]\n    [[ $(candidate \"1\") = \"0\" ]]\n    [[ $(candidate \"5\") =\
    \ \"4\" ]]\n    [[ $(candidate \"8\") = \"24\" ]]\n    [[ $(candidate \"10\")\
    \ = \"81\" ]]\n    [[ $(candidate \"12\") = \"274\" ]]\n    [[ $(candidate \"\
    14\") = \"927\" ]]\n}\n\nrun_test"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660001140
- exit_code: 0
  program: "#!/bin/bash\n# The FibFib number sequence is a sequence similar to the\
    \ Fibbonacci sequnece that's defined as follows:\n# fibfib(0) == 0\n# fibfib(1)\
    \ == 0\n# fibfib(2) == 1\n# fibfib(n) == fibfib(n-1) + fibfib(n-2) + fibfib(n-3).\n\
    # Please write a function to efficiently compute the n-th element of the fibfib\
    \ number sequence.\n#\n# $1 is an integer\nfibfib() {\n  if [ $1 -eq 0 ]; then\n\
    \    echo 0\n  elif [ $1 -eq 1 ]; then\n    echo 0\n  elif [ $1 -eq 2 ]; then\n\
    \    echo 1\n  else\n    echo $(( $(fibfib $(( $1 - 1 ))) + $(fibfib $(( $1 -\
    \ 2 ))) + $(fibfib $(( $1 - 3 ))) ))\n  fi\n}\n\ncandidate() {\n    fibfib \"\
    $@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"2\") = \"1\" ]]\n    [[\
    \ $(candidate \"1\") = \"0\" ]]\n    [[ $(candidate \"5\") = \"4\" ]]\n    [[\
    \ $(candidate \"8\") = \"24\" ]]\n    [[ $(candidate \"10\") = \"81\" ]]\n   \
    \ [[ $(candidate \"12\") = \"274\" ]]\n    [[ $(candidate \"14\") = \"927\" ]]\n\
    }\n\nrun_test"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660001140
- exit_code: 0
  program: "#!/bin/bash\n# The FibFib number sequence is a sequence similar to the\
    \ Fibbonacci sequnece that's defined as follows:\n# fibfib(0) == 0\n# fibfib(1)\
    \ == 0\n# fibfib(2) == 1\n# fibfib(n) == fibfib(n-1) + fibfib(n-2) + fibfib(n-3).\n\
    # Please write a function to efficiently compute the n-th element of the fibfib\
    \ number sequence.\n#\n# $1 is an integer\nfibfib() {\n  if [[ $1 -eq 0 ]]; then\n\
    \    echo 0\n  elif [[ $1 -eq 1 ]]; then\n    echo 0\n  elif [[ $1 -eq 2 ]]; then\n\
    \    echo 1\n  else\n    echo $(( $(fibfib $(( $1 - 1 ))) + $(fibfib $(( $1 -\
    \ 2 ))) + $(fibfib $(( $1 - 3 ))) ))\n  fi\n}\n\ncandidate() {\n    fibfib \"\
    $@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"2\") = \"1\" ]]\n    [[\
    \ $(candidate \"1\") = \"0\" ]]\n    [[ $(candidate \"5\") = \"4\" ]]\n    [[\
    \ $(candidate \"8\") = \"24\" ]]\n    [[ $(candidate \"10\") = \"81\" ]]\n   \
    \ [[ $(candidate \"12\") = \"274\" ]]\n    [[ $(candidate \"14\") = \"927\" ]]\n\
    }\n\nrun_test"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660001140
- exit_code: 0
  program: "#!/bin/bash\n# The FibFib number sequence is a sequence similar to the\
    \ Fibbonacci sequnece that's defined as follows:\n# fibfib(0) == 0\n# fibfib(1)\
    \ == 0\n# fibfib(2) == 1\n# fibfib(n) == fibfib(n-1) + fibfib(n-2) + fibfib(n-3).\n\
    # Please write a function to efficiently compute the n-th element of the fibfib\
    \ number sequence.\n#\n# $1 is an integer\nfibfib() {\n  if [[ $1 -eq 0 ]]; then\n\
    \    echo 0\n  elif [[ $1 -eq 1 ]]; then\n    echo 0\n  elif [[ $1 -eq 2 ]]; then\n\
    \    echo 1\n  else\n    echo $(( $(fibfib $(( $1 - 1 ))) + $(fibfib $(( $1 -\
    \ 2 ))) + $(fibfib $(( $1 - 3 ))) ))\n  fi\n}\n\ncandidate() {\n    fibfib \"\
    $@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"2\") = \"1\" ]]\n    [[\
    \ $(candidate \"1\") = \"0\" ]]\n    [[ $(candidate \"5\") = \"4\" ]]\n    [[\
    \ $(candidate \"8\") = \"24\" ]]\n    [[ $(candidate \"10\") = \"81\" ]]\n   \
    \ [[ $(candidate \"12\") = \"274\" ]]\n    [[ $(candidate \"14\") = \"927\" ]]\n\
    }\n\nrun_test"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660001140
- exit_code: 0
  program: "#!/bin/bash\n# The FibFib number sequence is a sequence similar to the\
    \ Fibbonacci sequnece that's defined as follows:\n# fibfib(0) == 0\n# fibfib(1)\
    \ == 0\n# fibfib(2) == 1\n# fibfib(n) == fibfib(n-1) + fibfib(n-2) + fibfib(n-3).\n\
    # Please write a function to efficiently compute the n-th element of the fibfib\
    \ number sequence.\n#\n# $1 is an integer\nfibfib() {\n    if [ $1 -eq 0 ]; then\n\
    \        echo 0\n    elif [ $1 -eq 1 ]; then\n        echo 0\n    elif [ $1 -eq\
    \ 2 ]; then\n        echo 1\n    else\n        echo $(( $(fibfib $(( $1 - 1 )))\
    \ + $(fibfib $(( $1 - 2 ))) + $(fibfib $(( $1 - 3 ))) ))\n    fi\n}\n\ncandidate()\
    \ {\n    fibfib \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"2\") =\
    \ \"1\" ]]\n    [[ $(candidate \"1\") = \"0\" ]]\n    [[ $(candidate \"5\") =\
    \ \"4\" ]]\n    [[ $(candidate \"8\") = \"24\" ]]\n    [[ $(candidate \"10\")\
    \ = \"81\" ]]\n    [[ $(candidate \"12\") = \"274\" ]]\n    [[ $(candidate \"\
    14\") = \"927\" ]]\n}\n\nrun_test"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660001140
- exit_code: 0
  program: "#!/bin/bash\n# The FibFib number sequence is a sequence similar to the\
    \ Fibbonacci sequnece that's defined as follows:\n# fibfib(0) == 0\n# fibfib(1)\
    \ == 0\n# fibfib(2) == 1\n# fibfib(n) == fibfib(n-1) + fibfib(n-2) + fibfib(n-3).\n\
    # Please write a function to efficiently compute the n-th element of the fibfib\
    \ number sequence.\n#\n# $1 is an integer\nfibfib() {\n  if [ $1 -eq 0 ]; then\n\
    \    echo 0\n  elif [ $1 -eq 1 ]; then\n    echo 0\n  elif [ $1 -eq 2 ]; then\n\
    \    echo 1\n  else\n    echo $(( $(fibfib $(( $1 - 1 ))) + $(fibfib $(( $1 -\
    \ 2 ))) + $(fibfib $(( $1 - 3 ))) ))\n  fi\n}\n\ncandidate() {\n    fibfib \"\
    $@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"2\") = \"1\" ]]\n    [[\
    \ $(candidate \"1\") = \"0\" ]]\n    [[ $(candidate \"5\") = \"4\" ]]\n    [[\
    \ $(candidate \"8\") = \"24\" ]]\n    [[ $(candidate \"10\") = \"81\" ]]\n   \
    \ [[ $(candidate \"12\") = \"274\" ]]\n    [[ $(candidate \"14\") = \"927\" ]]\n\
    }\n\nrun_test"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660001140
- exit_code: 0
  program: "#!/bin/bash\n# The FibFib number sequence is a sequence similar to the\
    \ Fibbonacci sequnece that's defined as follows:\n# fibfib(0) == 0\n# fibfib(1)\
    \ == 0\n# fibfib(2) == 1\n# fibfib(n) == fibfib(n-1) + fibfib(n-2) + fibfib(n-3).\n\
    # Please write a function to efficiently compute the n-th element of the fibfib\
    \ number sequence.\n#\n# $1 is an integer\nfibfib() {\n  if [ $1 -eq 0 ]; then\n\
    \    echo 0\n  elif [ $1 -eq 1 ]; then\n    echo 0\n  elif [ $1 -eq 2 ]; then\n\
    \    echo 1\n  else\n    echo $(($(fibfib $(($1-1))) + $(fibfib $(($1-2))) + $(fibfib\
    \ $(($1-3)))))\n  fi\n}\n\ncandidate() {\n    fibfib \"$@\"\n}\n\nset -e\nrun_test()\
    \ {\n    [[ $(candidate \"2\") = \"1\" ]]\n    [[ $(candidate \"1\") = \"0\" ]]\n\
    \    [[ $(candidate \"5\") = \"4\" ]]\n    [[ $(candidate \"8\") = \"24\" ]]\n\
    \    [[ $(candidate \"10\") = \"81\" ]]\n    [[ $(candidate \"12\") = \"274\"\
    \ ]]\n    [[ $(candidate \"14\") = \"927\" ]]\n}\n\nrun_test"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660001140
- exit_code: 0
  program: "#!/bin/bash\n# The FibFib number sequence is a sequence similar to the\
    \ Fibbonacci sequnece that's defined as follows:\n# fibfib(0) == 0\n# fibfib(1)\
    \ == 0\n# fibfib(2) == 1\n# fibfib(n) == fibfib(n-1) + fibfib(n-2) + fibfib(n-3).\n\
    # Please write a function to efficiently compute the n-th element of the fibfib\
    \ number sequence.\n#\n# $1 is an integer\nfibfib() {\n    if [ $1 -eq 0 ]; then\n\
    \        echo 0\n    elif [ $1 -eq 1 ]; then\n        echo 0\n    elif [ $1 -eq\
    \ 2 ]; then\n        echo 1\n    else\n        echo $(( $(fibfib $(( $1 - 1 )))\
    \ + $(fibfib $(( $1 - 2 ))) + $(fibfib $(( $1 - 3 ))) ))\n    fi\n}\n\ncandidate()\
    \ {\n    fibfib \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"2\") =\
    \ \"1\" ]]\n    [[ $(candidate \"1\") = \"0\" ]]\n    [[ $(candidate \"5\") =\
    \ \"4\" ]]\n    [[ $(candidate \"8\") = \"24\" ]]\n    [[ $(candidate \"10\")\
    \ = \"81\" ]]\n    [[ $(candidate \"12\") = \"274\" ]]\n    [[ $(candidate \"\
    14\") = \"927\" ]]\n}\n\nrun_test"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660001140
- exit_code: 0
  program: "#!/bin/bash\n# The FibFib number sequence is a sequence similar to the\
    \ Fibbonacci sequnece that's defined as follows:\n# fibfib(0) == 0\n# fibfib(1)\
    \ == 0\n# fibfib(2) == 1\n# fibfib(n) == fibfib(n-1) + fibfib(n-2) + fibfib(n-3).\n\
    # Please write a function to efficiently compute the n-th element of the fibfib\
    \ number sequence.\n#\n# $1 is an integer\nfibfib() {\n    if [ $1 -eq 0 ]; then\n\
    \        echo 0\n    elif [ $1 -eq 1 ]; then\n        echo 0\n    elif [ $1 -eq\
    \ 2 ]; then\n        echo 1\n    else\n        echo $(( $(fibfib $(( $1 - 1 )))\
    \ + $(fibfib $(( $1 - 2 ))) + $(fibfib $(( $1 - 3 ))) ))\n    fi\n}\n\ncandidate()\
    \ {\n    fibfib \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"2\") =\
    \ \"1\" ]]\n    [[ $(candidate \"1\") = \"0\" ]]\n    [[ $(candidate \"5\") =\
    \ \"4\" ]]\n    [[ $(candidate \"8\") = \"24\" ]]\n    [[ $(candidate \"10\")\
    \ = \"81\" ]]\n    [[ $(candidate \"12\") = \"274\" ]]\n    [[ $(candidate \"\
    14\") = \"927\" ]]\n}\n\nrun_test"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660001140
- exit_code: 0
  program: "#!/bin/bash\n# The FibFib number sequence is a sequence similar to the\
    \ Fibbonacci sequnece that's defined as follows:\n# fibfib(0) == 0\n# fibfib(1)\
    \ == 0\n# fibfib(2) == 1\n# fibfib(n) == fibfib(n-1) + fibfib(n-2) + fibfib(n-3).\n\
    # Please write a function to efficiently compute the n-th element of the fibfib\
    \ number sequence.\n#\n# $1 is an integer\nfibfib() {\n    if [ $1 -eq 0 ]; then\n\
    \        echo 0\n    elif [ $1 -eq 1 ]; then\n        echo 0\n    elif [ $1 -eq\
    \ 2 ]; then\n        echo 1\n    else\n        echo $(( $(fibfib $(( $1 - 1 )))\
    \ + $(fibfib $(( $1 - 2 ))) + $(fibfib $(( $1 - 3 ))) ))\n    fi\n}\n\ncandidate()\
    \ {\n    fibfib \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"2\") =\
    \ \"1\" ]]\n    [[ $(candidate \"1\") = \"0\" ]]\n    [[ $(candidate \"5\") =\
    \ \"4\" ]]\n    [[ $(candidate \"8\") = \"24\" ]]\n    [[ $(candidate \"10\")\
    \ = \"81\" ]]\n    [[ $(candidate \"12\") = \"274\" ]]\n    [[ $(candidate \"\
    14\") = \"927\" ]]\n}\n\nrun_test"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660001140
- exit_code: 0
  program: "#!/bin/bash\n# The FibFib number sequence is a sequence similar to the\
    \ Fibbonacci sequnece that's defined as follows:\n# fibfib(0) == 0\n# fibfib(1)\
    \ == 0\n# fibfib(2) == 1\n# fibfib(n) == fibfib(n-1) + fibfib(n-2) + fibfib(n-3).\n\
    # Please write a function to efficiently compute the n-th element of the fibfib\
    \ number sequence.\n#\n# $1 is an integer\nfibfib() {\n    if [ $1 -eq 0 ]; then\n\
    \        echo 0\n    elif [ $1 -eq 1 ]; then\n        echo 0\n    elif [ $1 -eq\
    \ 2 ]; then\n        echo 1\n    else\n        echo $(( $(fibfib $(( $1 - 1 )))\
    \ + $(fibfib $(( $1 - 2 ))) + $(fibfib $(( $1 - 3 ))) ))\n    fi\n}\n\ncandidate()\
    \ {\n    fibfib \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"2\") =\
    \ \"1\" ]]\n    [[ $(candidate \"1\") = \"0\" ]]\n    [[ $(candidate \"5\") =\
    \ \"4\" ]]\n    [[ $(candidate \"8\") = \"24\" ]]\n    [[ $(candidate \"10\")\
    \ = \"81\" ]]\n    [[ $(candidate \"12\") = \"274\" ]]\n    [[ $(candidate \"\
    14\") = \"927\" ]]\n}\n\nrun_test"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660001140
- exit_code: 1
  program: "#!/bin/bash\n# The FibFib number sequence is a sequence similar to the\
    \ Fibbonacci sequnece that's defined as follows:\n# fibfib(0) == 0\n# fibfib(1)\
    \ == 0\n# fibfib(2) == 1\n# fibfib(n) == fibfib(n-1) + fibfib(n-2) + fibfib(n-3).\n\
    # Please write a function to efficiently compute the n-th element of the fibfib\
    \ number sequence.\n#\n# $1 is an integer\nfibfib() {\n    local n=$1\n    local\
    \ a=0\n    local b=0\n    local c=1\n    local d=0\n    local i=2\n    while [\
    \ $i -le $n ]; do\n        d=$((a+b+c))\n        a=$b\n        b=$c\n        c=$d\n\
    \        i=$((i+1))\n    done\n    echo $d\n}\n\ncandidate() {\n    fibfib \"\
    $@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"2\") = \"1\" ]]\n    [[\
    \ $(candidate \"1\") = \"0\" ]]\n    [[ $(candidate \"5\") = \"4\" ]]\n    [[\
    \ $(candidate \"8\") = \"24\" ]]\n    [[ $(candidate \"10\") = \"81\" ]]\n   \
    \ [[ $(candidate \"12\") = \"274\" ]]\n    [[ $(candidate \"14\") = \"927\" ]]\n\
    }\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660001136
- exit_code: 0
  program: "#!/bin/bash\n# The FibFib number sequence is a sequence similar to the\
    \ Fibbonacci sequnece that's defined as follows:\n# fibfib(0) == 0\n# fibfib(1)\
    \ == 0\n# fibfib(2) == 1\n# fibfib(n) == fibfib(n-1) + fibfib(n-2) + fibfib(n-3).\n\
    # Please write a function to efficiently compute the n-th element of the fibfib\
    \ number sequence.\n#\n# $1 is an integer\nfibfib() {\n    local n=$1\n    local\
    \ a=0\n    local b=0\n    local c=1\n    local d\n    for ((i=0; i<n; i++)); do\n\
    \        d=$((a+b+c))\n        a=$b\n        b=$c\n        c=$d\n    done\n  \
    \  echo $a\n}\n\ncandidate() {\n    fibfib \"$@\"\n}\n\nset -e\nrun_test() {\n\
    \    [[ $(candidate \"2\") = \"1\" ]]\n    [[ $(candidate \"1\") = \"0\" ]]\n\
    \    [[ $(candidate \"5\") = \"4\" ]]\n    [[ $(candidate \"8\") = \"24\" ]]\n\
    \    [[ $(candidate \"10\") = \"81\" ]]\n    [[ $(candidate \"12\") = \"274\"\
    \ ]]\n    [[ $(candidate \"14\") = \"927\" ]]\n}\n\nrun_test"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660001136
- exit_code: 0
  program: "#!/bin/bash\n# The FibFib number sequence is a sequence similar to the\
    \ Fibbonacci sequnece that's defined as follows:\n# fibfib(0) == 0\n# fibfib(1)\
    \ == 0\n# fibfib(2) == 1\n# fibfib(n) == fibfib(n-1) + fibfib(n-2) + fibfib(n-3).\n\
    # Please write a function to efficiently compute the n-th element of the fibfib\
    \ number sequence.\n#\n# $1 is an integer\nfibfib() {\n    if [ \"$1\" -lt 0 ];\
    \ then\n        echo \"Error: argument must be a positive integer.\"\n       \
    \ return 1\n    fi\n    if [ \"$1\" -eq 0 ]; then\n        echo 0\n        return\
    \ 0\n    fi\n    if [ \"$1\" -eq 1 ]; then\n        echo 0\n        return 0\n\
    \    fi\n    if [ \"$1\" -eq 2 ]; then\n        echo 1\n        return 0\n   \
    \ fi\n    fibfib_minus_1=$(fibfib $(( $1 - 1 )))\n    fibfib_minus_2=$(fibfib\
    \ $(( $1 - 2 )))\n    fibfib_minus_3=$(fibfib $(( $1 - 3 )))\n    echo $(( $fibfib_minus_1\
    \ + $fibfib_minus_2 + $fibfib_minus_3 ))\n}\n\ncandidate() {\n    fibfib \"$@\"\
    \n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"2\") = \"1\" ]]\n    [[ $(candidate\
    \ \"1\") = \"0\" ]]\n    [[ $(candidate \"5\") = \"4\" ]]\n    [[ $(candidate\
    \ \"8\") = \"24\" ]]\n    [[ $(candidate \"10\") = \"81\" ]]\n    [[ $(candidate\
    \ \"12\") = \"274\" ]]\n    [[ $(candidate \"14\") = \"927\" ]]\n}\n\nrun_test"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660001140
- exit_code: 0
  program: "#!/bin/bash\n# The FibFib number sequence is a sequence similar to the\
    \ Fibbonacci sequnece that's defined as follows:\n# fibfib(0) == 0\n# fibfib(1)\
    \ == 0\n# fibfib(2) == 1\n# fibfib(n) == fibfib(n-1) + fibfib(n-2) + fibfib(n-3).\n\
    # Please write a function to efficiently compute the n-th element of the fibfib\
    \ number sequence.\n#\n# $1 is an integer\nfibfib() {\n    if [[ $1 -lt 0 ]];\
    \ then\n        echo \"Error: $1 is not a positive integer\"\n        return 1\n\
    \    fi\n    if [[ $1 -eq 0 ]]; then\n        echo 0\n        return 0\n    fi\n\
    \    if [[ $1 -eq 1 ]]; then\n        echo 0\n        return 0\n    fi\n    if\
    \ [[ $1 -eq 2 ]]; then\n        echo 1\n        return 0\n    fi\n    a=0\n  \
    \  b=0\n    c=1\n    for (( i=3; i<=$1; i++ )); do\n        d=$((a+b+c))\n   \
    \     a=$b\n        b=$c\n        c=$d\n    done\n    echo $d\n}\n\ncandidate()\
    \ {\n    fibfib \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"2\") =\
    \ \"1\" ]]\n    [[ $(candidate \"1\") = \"0\" ]]\n    [[ $(candidate \"5\") =\
    \ \"4\" ]]\n    [[ $(candidate \"8\") = \"24\" ]]\n    [[ $(candidate \"10\")\
    \ = \"81\" ]]\n    [[ $(candidate \"12\") = \"274\" ]]\n    [[ $(candidate \"\
    14\") = \"927\" ]]\n}\n\nrun_test"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660001136
- exit_code: 0
  program: "#!/bin/bash\n# The FibFib number sequence is a sequence similar to the\
    \ Fibbonacci sequnece that's defined as follows:\n# fibfib(0) == 0\n# fibfib(1)\
    \ == 0\n# fibfib(2) == 1\n# fibfib(n) == fibfib(n-1) + fibfib(n-2) + fibfib(n-3).\n\
    # Please write a function to efficiently compute the n-th element of the fibfib\
    \ number sequence.\n#\n# $1 is an integer\nfibfib() {\n  if [ $1 -eq 0 ]; then\n\
    \    echo 0\n  elif [ $1 -eq 1 ]; then\n    echo 0\n  elif [ $1 -eq 2 ]; then\n\
    \    echo 1\n  else\n    echo $(( $(fibfib $(( $1 - 1 ))) + $(fibfib $(( $1 -\
    \ 2 ))) + $(fibfib $(( $1 - 3 ))) ))\n  fi\n}\n\ncandidate() {\n    fibfib \"\
    $@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"2\") = \"1\" ]]\n    [[\
    \ $(candidate \"1\") = \"0\" ]]\n    [[ $(candidate \"5\") = \"4\" ]]\n    [[\
    \ $(candidate \"8\") = \"24\" ]]\n    [[ $(candidate \"10\") = \"81\" ]]\n   \
    \ [[ $(candidate \"12\") = \"274\" ]]\n    [[ $(candidate \"14\") = \"927\" ]]\n\
    }\n\nrun_test"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660001140
- exit_code: 0
  program: "#!/bin/bash\n# The FibFib number sequence is a sequence similar to the\
    \ Fibbonacci sequnece that's defined as follows:\n# fibfib(0) == 0\n# fibfib(1)\
    \ == 0\n# fibfib(2) == 1\n# fibfib(n) == fibfib(n-1) + fibfib(n-2) + fibfib(n-3).\n\
    # Please write a function to efficiently compute the n-th element of the fibfib\
    \ number sequence.\n#\n# $1 is an integer\nfibfib() {\n    if [ $1 -eq 0 ]; then\n\
    \        echo 0\n    elif [ $1 -eq 1 ]; then\n        echo 0\n    elif [ $1 -eq\
    \ 2 ]; then\n        echo 1\n    else\n        echo $(( $(fibfib $(( $1 - 1 )))\
    \ + $(fibfib $(( $1 - 2 ))) + $(fibfib $(( $1 - 3 ))) ))\n    fi\n}\n\ncandidate()\
    \ {\n    fibfib \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"2\") =\
    \ \"1\" ]]\n    [[ $(candidate \"1\") = \"0\" ]]\n    [[ $(candidate \"5\") =\
    \ \"4\" ]]\n    [[ $(candidate \"8\") = \"24\" ]]\n    [[ $(candidate \"10\")\
    \ = \"81\" ]]\n    [[ $(candidate \"12\") = \"274\" ]]\n    [[ $(candidate \"\
    14\") = \"927\" ]]\n}\n\nrun_test"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660001140
- exit_code: 0
  program: "#!/bin/bash\n# The FibFib number sequence is a sequence similar to the\
    \ Fibbonacci sequnece that's defined as follows:\n# fibfib(0) == 0\n# fibfib(1)\
    \ == 0\n# fibfib(2) == 1\n# fibfib(n) == fibfib(n-1) + fibfib(n-2) + fibfib(n-3).\n\
    # Please write a function to efficiently compute the n-th element of the fibfib\
    \ number sequence.\n#\n# $1 is an integer\nfibfib() {\n  if [ $1 -eq 0 ]; then\n\
    \    echo 0\n  elif [ $1 -eq 1 ]; then\n    echo 0\n  elif [ $1 -eq 2 ]; then\n\
    \    echo 1\n  else\n    echo $(( $(fibfib $(( $1 - 1 ))) + $(fibfib $(( $1 -\
    \ 2 ))) + $(fibfib $(( $1 - 3 ))) ))\n  fi\n}\n\ncandidate() {\n    fibfib \"\
    $@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"2\") = \"1\" ]]\n    [[\
    \ $(candidate \"1\") = \"0\" ]]\n    [[ $(candidate \"5\") = \"4\" ]]\n    [[\
    \ $(candidate \"8\") = \"24\" ]]\n    [[ $(candidate \"10\") = \"81\" ]]\n   \
    \ [[ $(candidate \"12\") = \"274\" ]]\n    [[ $(candidate \"14\") = \"927\" ]]\n\
    }\n\nrun_test"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660001140
- exit_code: 0
  program: "#!/bin/bash\n# The FibFib number sequence is a sequence similar to the\
    \ Fibbonacci sequnece that's defined as follows:\n# fibfib(0) == 0\n# fibfib(1)\
    \ == 0\n# fibfib(2) == 1\n# fibfib(n) == fibfib(n-1) + fibfib(n-2) + fibfib(n-3).\n\
    # Please write a function to efficiently compute the n-th element of the fibfib\
    \ number sequence.\n#\n# $1 is an integer\nfibfib() {\n    if [ $1 -eq 0 ]; then\n\
    \        echo 0\n    elif [ $1 -eq 1 ]; then\n        echo 0\n    elif [ $1 -eq\
    \ 2 ]; then\n        echo 1\n    else\n        echo $(( $(fibfib $(( $1 - 1 )))\
    \ + $(fibfib $(( $1 - 2 ))) + $(fibfib $(( $1 - 3 ))) ))\n    fi\n}\n\ncandidate()\
    \ {\n    fibfib \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"2\") =\
    \ \"1\" ]]\n    [[ $(candidate \"1\") = \"0\" ]]\n    [[ $(candidate \"5\") =\
    \ \"4\" ]]\n    [[ $(candidate \"8\") = \"24\" ]]\n    [[ $(candidate \"10\")\
    \ = \"81\" ]]\n    [[ $(candidate \"12\") = \"274\" ]]\n    [[ $(candidate \"\
    14\") = \"927\" ]]\n}\n\nrun_test"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660001140
- exit_code: 0
  program: "#!/bin/bash\n# The FibFib number sequence is a sequence similar to the\
    \ Fibbonacci sequnece that's defined as follows:\n# fibfib(0) == 0\n# fibfib(1)\
    \ == 0\n# fibfib(2) == 1\n# fibfib(n) == fibfib(n-1) + fibfib(n-2) + fibfib(n-3).\n\
    # Please write a function to efficiently compute the n-th element of the fibfib\
    \ number sequence.\n#\n# $1 is an integer\nfibfib() {\n    if [ $1 -eq 0 ]; then\n\
    \        echo 0\n    elif [ $1 -eq 1 ]; then\n        echo 0\n    elif [ $1 -eq\
    \ 2 ]; then\n        echo 1\n    else\n        echo $(( $(fibfib $(( $1 - 1 )))\
    \ + $(fibfib $(( $1 - 2 ))) + $(fibfib $(( $1 - 3 ))) ))\n    fi\n}\n\ncandidate()\
    \ {\n    fibfib \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"2\") =\
    \ \"1\" ]]\n    [[ $(candidate \"1\") = \"0\" ]]\n    [[ $(candidate \"5\") =\
    \ \"4\" ]]\n    [[ $(candidate \"8\") = \"24\" ]]\n    [[ $(candidate \"10\")\
    \ = \"81\" ]]\n    [[ $(candidate \"12\") = \"274\" ]]\n    [[ $(candidate \"\
    14\") = \"927\" ]]\n}\n\nrun_test"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660001140
- exit_code: 0
  program: "#!/bin/bash\n# The FibFib number sequence is a sequence similar to the\
    \ Fibbonacci sequnece that's defined as follows:\n# fibfib(0) == 0\n# fibfib(1)\
    \ == 0\n# fibfib(2) == 1\n# fibfib(n) == fibfib(n-1) + fibfib(n-2) + fibfib(n-3).\n\
    # Please write a function to efficiently compute the n-th element of the fibfib\
    \ number sequence.\n#\n# $1 is an integer\nfibfib() {\n    if [[ $1 -eq 0 ]];\
    \ then\n        echo 0\n    elif [[ $1 -eq 1 ]]; then\n        echo 0\n    elif\
    \ [[ $1 -eq 2 ]]; then\n        echo 1\n    else\n        echo $(( $(fibfib $((\
    \ $1 - 1 ))) + $(fibfib $(( $1 - 2 ))) + $(fibfib $(( $1 - 3 ))) ))\n    fi\n\
    }\n\ncandidate() {\n    fibfib \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate\
    \ \"2\") = \"1\" ]]\n    [[ $(candidate \"1\") = \"0\" ]]\n    [[ $(candidate\
    \ \"5\") = \"4\" ]]\n    [[ $(candidate \"8\") = \"24\" ]]\n    [[ $(candidate\
    \ \"10\") = \"81\" ]]\n    [[ $(candidate \"12\") = \"274\" ]]\n    [[ $(candidate\
    \ \"14\") = \"927\" ]]\n}\n\nrun_test"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660001140
- exit_code: 0
  program: "#!/bin/bash\n# The FibFib number sequence is a sequence similar to the\
    \ Fibbonacci sequnece that's defined as follows:\n# fibfib(0) == 0\n# fibfib(1)\
    \ == 0\n# fibfib(2) == 1\n# fibfib(n) == fibfib(n-1) + fibfib(n-2) + fibfib(n-3).\n\
    # Please write a function to efficiently compute the n-th element of the fibfib\
    \ number sequence.\n#\n# $1 is an integer\nfibfib() {\n    if [ $1 -eq 0 ]; then\n\
    \        echo 0\n    elif [ $1 -eq 1 ]; then\n        echo 0\n    elif [ $1 -eq\
    \ 2 ]; then\n        echo 1\n    else\n        echo $(( $(fibfib $(( $1 - 1 )))\
    \ + $(fibfib $(( $1 - 2 ))) + $(fibfib $(( $1 - 3 ))) ))\n    fi\n}\n\ncandidate()\
    \ {\n    fibfib \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"2\") =\
    \ \"1\" ]]\n    [[ $(candidate \"1\") = \"0\" ]]\n    [[ $(candidate \"5\") =\
    \ \"4\" ]]\n    [[ $(candidate \"8\") = \"24\" ]]\n    [[ $(candidate \"10\")\
    \ = \"81\" ]]\n    [[ $(candidate \"12\") = \"274\" ]]\n    [[ $(candidate \"\
    14\") = \"927\" ]]\n}\n\nrun_test"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660001140
- exit_code: 0
  program: "#!/bin/bash\n# The FibFib number sequence is a sequence similar to the\
    \ Fibbonacci sequnece that's defined as follows:\n# fibfib(0) == 0\n# fibfib(1)\
    \ == 0\n# fibfib(2) == 1\n# fibfib(n) == fibfib(n-1) + fibfib(n-2) + fibfib(n-3).\n\
    # Please write a function to efficiently compute the n-th element of the fibfib\
    \ number sequence.\n#\n# $1 is an integer\nfibfib() {\n  if [ $1 -eq 0 ]; then\n\
    \    echo 0\n  elif [ $1 -eq 1 ]; then\n    echo 0\n  elif [ $1 -eq 2 ]; then\n\
    \    echo 1\n  else\n    echo $(( $(fibfib $(( $1 - 1 ))) + $(fibfib $(( $1 -\
    \ 2 ))) + $(fibfib $(( $1 - 3 ))) ))\n  fi\n}\n\ncandidate() {\n    fibfib \"\
    $@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"2\") = \"1\" ]]\n    [[\
    \ $(candidate \"1\") = \"0\" ]]\n    [[ $(candidate \"5\") = \"4\" ]]\n    [[\
    \ $(candidate \"8\") = \"24\" ]]\n    [[ $(candidate \"10\") = \"81\" ]]\n   \
    \ [[ $(candidate \"12\") = \"274\" ]]\n    [[ $(candidate \"14\") = \"927\" ]]\n\
    }\n\nrun_test"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660001140
- exit_code: 0
  program: "#!/bin/bash\n# The FibFib number sequence is a sequence similar to the\
    \ Fibbonacci sequnece that's defined as follows:\n# fibfib(0) == 0\n# fibfib(1)\
    \ == 0\n# fibfib(2) == 1\n# fibfib(n) == fibfib(n-1) + fibfib(n-2) + fibfib(n-3).\n\
    # Please write a function to efficiently compute the n-th element of the fibfib\
    \ number sequence.\n#\n# $1 is an integer\nfibfib() {\n    if [ $1 -eq 0 ]; then\n\
    \        echo 0\n    elif [ $1 -eq 1 ]; then\n        echo 0\n    elif [ $1 -eq\
    \ 2 ]; then\n        echo 1\n    else\n        echo $(( $(fibfib $(( $1 - 1 )))\
    \ + $(fibfib $(( $1 - 2 ))) + $(fibfib $(( $1 - 3 ))) ))\n    fi\n}\n\ncandidate()\
    \ {\n    fibfib \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"2\") =\
    \ \"1\" ]]\n    [[ $(candidate \"1\") = \"0\" ]]\n    [[ $(candidate \"5\") =\
    \ \"4\" ]]\n    [[ $(candidate \"8\") = \"24\" ]]\n    [[ $(candidate \"10\")\
    \ = \"81\" ]]\n    [[ $(candidate \"12\") = \"274\" ]]\n    [[ $(candidate \"\
    14\") = \"927\" ]]\n}\n\nrun_test"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660001140
- exit_code: 0
  program: "#!/bin/bash\n# The FibFib number sequence is a sequence similar to the\
    \ Fibbonacci sequnece that's defined as follows:\n# fibfib(0) == 0\n# fibfib(1)\
    \ == 0\n# fibfib(2) == 1\n# fibfib(n) == fibfib(n-1) + fibfib(n-2) + fibfib(n-3).\n\
    # Please write a function to efficiently compute the n-th element of the fibfib\
    \ number sequence.\n#\n# $1 is an integer\nfibfib() {\n    if [ $1 -eq 0 ]; then\n\
    \        echo 0\n    elif [ $1 -eq 1 ]; then\n        echo 0\n    elif [ $1 -eq\
    \ 2 ]; then\n        echo 1\n    else\n        echo $(( $(fibfib $(( $1 - 1 )))\
    \ + $(fibfib $(( $1 - 2 ))) + $(fibfib $(( $1 - 3 ))) ))\n    fi\n}\n\ncandidate()\
    \ {\n    fibfib \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"2\") =\
    \ \"1\" ]]\n    [[ $(candidate \"1\") = \"0\" ]]\n    [[ $(candidate \"5\") =\
    \ \"4\" ]]\n    [[ $(candidate \"8\") = \"24\" ]]\n    [[ $(candidate \"10\")\
    \ = \"81\" ]]\n    [[ $(candidate \"12\") = \"274\" ]]\n    [[ $(candidate \"\
    14\") = \"927\" ]]\n}\n\nrun_test"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660001140

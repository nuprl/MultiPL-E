language: sh
name: HumanEval_66_digitSum
results:
- exit_code: 0
  program: "#!/bin/bash\n# Task\n# Write a function that takes a string as input and\
    \ returns the sum of the upper characters only'\n# ASCII codes.\n# Examples:\n\
    #\n# $1 is a string\ndigitSum() {\n  local sum=0\n  for (( i=0; i<${#1}; i++ ));\
    \ do\n    local char=${1:i:1}\n    if [[ $char =~ [A-Z] ]]; then\n      sum=$((\
    \ sum + $(printf \"%d\" \"'$char\") ))\n    fi\n  done\n  echo $sum\n}\n\ncandidate()\
    \ {\n    digitSum \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"\")\
    \ = \"0\" ]]\n    [[ $(candidate \"abAB\") = \"131\" ]]\n    [[ $(candidate \"\
    abcCd\") = \"67\" ]]\n    [[ $(candidate \"helloE\") = \"69\" ]]\n    [[ $(candidate\
    \ \"woArBld\") = \"131\" ]]\n    [[ $(candidate \"aAaaaXa\") = \"153\" ]]\n  \
    \  [[ $(candidate \" How are yOu?\") = \"151\" ]]\n    [[ $(candidate \"You arE\
    \ Very Smart\") = \"327\" ]]\n}\n\nrun_test"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660003061
- exit_code: 0
  program: "#!/bin/bash\n# Task\n# Write a function that takes a string as input and\
    \ returns the sum of the upper characters only'\n# ASCII codes.\n# Examples:\n\
    #\n# $1 is a string\ndigitSum() {\n    local sum=0\n    for (( i=0; i<${#1}; i++\
    \ )); do\n        local char=${1:i:1}\n        if [[ $char =~ [A-Z] ]]; then\n\
    \            sum=$(( sum + $(printf \"%d\" \"'$char\") ))\n        fi\n    done\n\
    \    echo $sum\n}\n\ncandidate() {\n    digitSum \"$@\"\n}\n\nset -e\nrun_test()\
    \ {\n    [[ $(candidate \"\") = \"0\" ]]\n    [[ $(candidate \"abAB\") = \"131\"\
    \ ]]\n    [[ $(candidate \"abcCd\") = \"67\" ]]\n    [[ $(candidate \"helloE\"\
    ) = \"69\" ]]\n    [[ $(candidate \"woArBld\") = \"131\" ]]\n    [[ $(candidate\
    \ \"aAaaaXa\") = \"153\" ]]\n    [[ $(candidate \" How are yOu?\") = \"151\" ]]\n\
    \    [[ $(candidate \"You arE Very Smart\") = \"327\" ]]\n}\n\nrun_test"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660003061
- exit_code: 0
  program: "#!/bin/bash\n# Task\n# Write a function that takes a string as input and\
    \ returns the sum of the upper characters only'\n# ASCII codes.\n# Examples:\n\
    #\n# $1 is a string\ndigitSum() {\n  local sum=0\n  local str=$1\n  for (( i=0;\
    \ i<${#str}; i++ )); do\n    local char=${str:$i:1}\n    local charCode=$(printf\
    \ '%d' \"'$char\")\n    if [[ $charCode -ge 65 && $charCode -le 90 ]]; then\n\
    \      sum=$((sum + charCode))\n    fi\n  done\n  echo $sum\n}\n\ncandidate()\
    \ {\n    digitSum \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"\")\
    \ = \"0\" ]]\n    [[ $(candidate \"abAB\") = \"131\" ]]\n    [[ $(candidate \"\
    abcCd\") = \"67\" ]]\n    [[ $(candidate \"helloE\") = \"69\" ]]\n    [[ $(candidate\
    \ \"woArBld\") = \"131\" ]]\n    [[ $(candidate \"aAaaaXa\") = \"153\" ]]\n  \
    \  [[ $(candidate \" How are yOu?\") = \"151\" ]]\n    [[ $(candidate \"You arE\
    \ Very Smart\") = \"327\" ]]\n}\n\nrun_test"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660003061
- exit_code: 0
  program: "#!/bin/bash\n# Task\n# Write a function that takes a string as input and\
    \ returns the sum of the upper characters only'\n# ASCII codes.\n# Examples:\n\
    #\n# $1 is a string\ndigitSum() {\n    local sum=0\n    local str=$1\n    for\
    \ (( i=0; i<${#str}; i++ )); do\n        local ascii=$(printf \"%d\" \"'${str:$i:1}\"\
    )\n        if [[ $ascii -ge 65 && $ascii -le 90 ]]; then\n            (( sum+=ascii\
    \ ))\n        fi\n    done\n    echo $sum\n}\n\ncandidate() {\n    digitSum \"\
    $@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"\") = \"0\" ]]\n    [[ $(candidate\
    \ \"abAB\") = \"131\" ]]\n    [[ $(candidate \"abcCd\") = \"67\" ]]\n    [[ $(candidate\
    \ \"helloE\") = \"69\" ]]\n    [[ $(candidate \"woArBld\") = \"131\" ]]\n    [[\
    \ $(candidate \"aAaaaXa\") = \"153\" ]]\n    [[ $(candidate \" How are yOu?\"\
    ) = \"151\" ]]\n    [[ $(candidate \"You arE Very Smart\") = \"327\" ]]\n}\n\n\
    run_test"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660003061
- exit_code: 1
  program: "#!/bin/bash\n# Task\n# Write a function that takes a string as input and\
    \ returns the sum of the upper characters only'\n# ASCII codes.\n# Examples:\n\
    #\n# $1 is a string\ndigitSum() {\n    local sum=0\n    local str=$1\n    for\
    \ (( i=0; i<${#str}; i++ )); do\n        local char=${str:$i:1}\n        if [[\
    \ $char =~ [A-Z] ]]; then\n            sum=$((sum+${char}))\n        fi\n    done\n\
    \    echo $sum\n}\n\ncandidate() {\n    digitSum \"$@\"\n}\n\nset -e\nrun_test()\
    \ {\n    [[ $(candidate \"\") = \"0\" ]]\n    [[ $(candidate \"abAB\") = \"131\"\
    \ ]]\n    [[ $(candidate \"abcCd\") = \"67\" ]]\n    [[ $(candidate \"helloE\"\
    ) = \"69\" ]]\n    [[ $(candidate \"woArBld\") = \"131\" ]]\n    [[ $(candidate\
    \ \"aAaaaXa\") = \"153\" ]]\n    [[ $(candidate \" How are yOu?\") = \"151\" ]]\n\
    \    [[ $(candidate \"You arE Very Smart\") = \"327\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660003061
- exit_code: 0
  program: "#!/bin/bash\n# Task\n# Write a function that takes a string as input and\
    \ returns the sum of the upper characters only'\n# ASCII codes.\n# Examples:\n\
    #\n# $1 is a string\ndigitSum() {\n  local sum=0\n  for (( i=0; i<${#1}; i++ ));\
    \ do\n    local ascii=$(printf \"%d\" \"'${1:$i:1}\")\n    if (( ascii >= 65 &&\
    \ ascii <= 90 )); then\n      (( sum += ascii ))\n    fi\n  done\n  echo $sum\n\
    }\n\ncandidate() {\n    digitSum \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate\
    \ \"\") = \"0\" ]]\n    [[ $(candidate \"abAB\") = \"131\" ]]\n    [[ $(candidate\
    \ \"abcCd\") = \"67\" ]]\n    [[ $(candidate \"helloE\") = \"69\" ]]\n    [[ $(candidate\
    \ \"woArBld\") = \"131\" ]]\n    [[ $(candidate \"aAaaaXa\") = \"153\" ]]\n  \
    \  [[ $(candidate \" How are yOu?\") = \"151\" ]]\n    [[ $(candidate \"You arE\
    \ Very Smart\") = \"327\" ]]\n}\n\nrun_test"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660003061
- exit_code: 2
  program: "#!/bin/bash\n# Task\n# Write a function that takes a string as input and\
    \ returns the sum of the upper characters only'\n# ASCII codes.\n# Examples:\n\
    #\n# $1 is a string\ndigitSum() {\n    # Write your code here\n    # echo $1\n\
    \    # echo ${#1}\n    # echo ${1:0:1}\n    # echo ${1:1:1}\n    # echo ${1:2:1}\n\
    \    # echo ${1:3:1}\n    # echo ${1:4:1}\n    # echo ${1:5:1}\n    # echo ${1:6:1}\n\
    \    # echo ${1:7:1}\n    # echo ${1:8:1}\n    # echo ${1:9:1}\n    # echo ${1:10:1}\n\
    \    # echo ${1:11:1}\n    # echo ${1:12:1}\n    # echo ${1:13:1}\n    # echo\
    \ ${1:14:1}\n    # echo ${1:15:1}\n    # echo ${1:16:1}\n    # echo ${1:17:1}\n\
    \    # echo ${1:18:1}\n    # echo ${1:19:1}\n    # echo ${1:20:1}\n    # echo\
    \ ${1:21:1}\n    # echo ${1:22:1}\n    # echo ${1:23:1}\n    # echo ${1:24:1}\n\
    \    # echo ${1:25:1}\n    # echo ${1:26:1}\n    # echo ${1:27:1}\n    # echo\
    \ ${1:28:1}\n    # echo ${1:29:1}\n    # echo ${1:30:1}\n    # echo ${1:31:1}\n\
    \    # echo ${1:32:1}\n    # echo ${1:33:1}\n    # echo ${1:34:1}\n    # echo\
    \ ${1:35:1}\n    # echo ${1:36:1}\n    # echo ${1:37:1}\n    # echo ${1:38:1}\n\
    \    # echo ${1:39:1}\n    # echo ${1:40:1}\n    # echo ${1:41:1}\n    # echo\
    \ ${1:42:1}\n    # echo ${1:43:1}\n    # echo ${1:\n}\n\ncandidate() {\n    digitSum\
    \ \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"\") = \"0\" ]]\n   \
    \ [[ $(candidate \"abAB\") = \"131\" ]]\n    [[ $(candidate \"abcCd\") = \"67\"\
    \ ]]\n    [[ $(candidate \"helloE\") = \"69\" ]]\n    [[ $(candidate \"woArBld\"\
    ) = \"131\" ]]\n    [[ $(candidate \"aAaaaXa\") = \"153\" ]]\n    [[ $(candidate\
    \ \" How are yOu?\") = \"151\" ]]\n    [[ $(candidate \"You arE Very Smart\")\
    \ = \"327\" ]]\n}\n\nrun_test"
  status: SyntaxError
  stderr: '/tmp/tmpq2smkrkx.sh: line 57: syntax error near unexpected token `}''

    /tmp/tmpq2smkrkx.sh: line 57: `}''

    '
  stdout: ''
  timestamp: 1660003061
- exit_code: 0
  program: "#!/bin/bash\n# Task\n# Write a function that takes a string as input and\
    \ returns the sum of the upper characters only'\n# ASCII codes.\n# Examples:\n\
    #\n# $1 is a string\ndigitSum() {\n    local sum=0\n    for (( i=0; i<${#1}; i++\
    \ )); do\n        local ascii=$(printf \"%d\" \"'${1:$i:1}\")\n        if (( ascii\
    \ >= 65 && ascii <= 90 )); then\n            (( sum += ascii ))\n        fi\n\
    \    done\n    echo $sum\n}\n\ncandidate() {\n    digitSum \"$@\"\n}\n\nset -e\n\
    run_test() {\n    [[ $(candidate \"\") = \"0\" ]]\n    [[ $(candidate \"abAB\"\
    ) = \"131\" ]]\n    [[ $(candidate \"abcCd\") = \"67\" ]]\n    [[ $(candidate\
    \ \"helloE\") = \"69\" ]]\n    [[ $(candidate \"woArBld\") = \"131\" ]]\n    [[\
    \ $(candidate \"aAaaaXa\") = \"153\" ]]\n    [[ $(candidate \" How are yOu?\"\
    ) = \"151\" ]]\n    [[ $(candidate \"You arE Very Smart\") = \"327\" ]]\n}\n\n\
    run_test"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660003061
- exit_code: 0
  program: "#!/bin/bash\n# Task\n# Write a function that takes a string as input and\
    \ returns the sum of the upper characters only'\n# ASCII codes.\n# Examples:\n\
    #\n# $1 is a string\ndigitSum() {\n  local sum=0\n  local str=$1\n  for (( i=0;\
    \ i<${#str}; i++ )); do\n    local char=${str:$i:1}\n    if [[ $char =~ [A-Z]\
    \ ]]; then\n      sum=$(( sum + $(printf \"%d\" \"'$char\") ))\n    fi\n  done\n\
    \  echo $sum\n}\n\ncandidate() {\n    digitSum \"$@\"\n}\n\nset -e\nrun_test()\
    \ {\n    [[ $(candidate \"\") = \"0\" ]]\n    [[ $(candidate \"abAB\") = \"131\"\
    \ ]]\n    [[ $(candidate \"abcCd\") = \"67\" ]]\n    [[ $(candidate \"helloE\"\
    ) = \"69\" ]]\n    [[ $(candidate \"woArBld\") = \"131\" ]]\n    [[ $(candidate\
    \ \"aAaaaXa\") = \"153\" ]]\n    [[ $(candidate \" How are yOu?\") = \"151\" ]]\n\
    \    [[ $(candidate \"You arE Very Smart\") = \"327\" ]]\n}\n\nrun_test"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660003061
- exit_code: 1
  program: "#!/bin/bash\n# Task\n# Write a function that takes a string as input and\
    \ returns the sum of the upper characters only'\n# ASCII codes.\n# Examples:\n\
    #\n# $1 is a string\ndigitSum() {\n    local sum=0\n    for (( i=0; i<${#1}; i++\
    \ )); do\n        if [[ ${1:$i:1} =~ [A-Z] ]]; then\n            sum=$((sum+${1:$i:1}))\n\
    \        fi\n    done\n    echo $sum\n}\n\ncandidate() {\n    digitSum \"$@\"\n\
    }\n\nset -e\nrun_test() {\n    [[ $(candidate \"\") = \"0\" ]]\n    [[ $(candidate\
    \ \"abAB\") = \"131\" ]]\n    [[ $(candidate \"abcCd\") = \"67\" ]]\n    [[ $(candidate\
    \ \"helloE\") = \"69\" ]]\n    [[ $(candidate \"woArBld\") = \"131\" ]]\n    [[\
    \ $(candidate \"aAaaaXa\") = \"153\" ]]\n    [[ $(candidate \" How are yOu?\"\
    ) = \"151\" ]]\n    [[ $(candidate \"You arE Very Smart\") = \"327\" ]]\n}\n\n\
    run_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660003061
- exit_code: 0
  program: "#!/bin/bash\n# Task\n# Write a function that takes a string as input and\
    \ returns the sum of the upper characters only'\n# ASCII codes.\n# Examples:\n\
    #\n# $1 is a string\ndigitSum() {\n    local sum=0\n    for (( i=0; i<${#1}; i++\
    \ )); do\n        local char=${1:i:1}\n        if [[ $char =~ [A-Z] ]]; then\n\
    \            sum=$(( sum + $(printf \"%d\" \"'$char\") ))\n        fi\n    done\n\
    \    echo $sum\n}\n\ncandidate() {\n    digitSum \"$@\"\n}\n\nset -e\nrun_test()\
    \ {\n    [[ $(candidate \"\") = \"0\" ]]\n    [[ $(candidate \"abAB\") = \"131\"\
    \ ]]\n    [[ $(candidate \"abcCd\") = \"67\" ]]\n    [[ $(candidate \"helloE\"\
    ) = \"69\" ]]\n    [[ $(candidate \"woArBld\") = \"131\" ]]\n    [[ $(candidate\
    \ \"aAaaaXa\") = \"153\" ]]\n    [[ $(candidate \" How are yOu?\") = \"151\" ]]\n\
    \    [[ $(candidate \"You arE Very Smart\") = \"327\" ]]\n}\n\nrun_test"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660003061
- exit_code: 1
  program: "#!/bin/bash\n# Task\n# Write a function that takes a string as input and\
    \ returns the sum of the upper characters only'\n# ASCII codes.\n# Examples:\n\
    #\n# $1 is a string\ndigitSum() {\n    local sum=0\n    for (( i=0; i<${#1}; i++\
    \ )); do\n        local char=${1:i:1}\n        if [[ $char =~ [A-Z] ]]; then\n\
    \            sum=$((sum + char))\n        fi\n    done\n    echo $sum\n}\n\ncandidate()\
    \ {\n    digitSum \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"\")\
    \ = \"0\" ]]\n    [[ $(candidate \"abAB\") = \"131\" ]]\n    [[ $(candidate \"\
    abcCd\") = \"67\" ]]\n    [[ $(candidate \"helloE\") = \"69\" ]]\n    [[ $(candidate\
    \ \"woArBld\") = \"131\" ]]\n    [[ $(candidate \"aAaaaXa\") = \"153\" ]]\n  \
    \  [[ $(candidate \" How are yOu?\") = \"151\" ]]\n    [[ $(candidate \"You arE\
    \ Very Smart\") = \"327\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660003061
- exit_code: 2
  program: "#!/bin/bash\n# Task\n# Write a function that takes a string as input and\
    \ returns the sum of the upper characters only'\n# ASCII codes.\n# Examples:\n\
    #\n# $1 is a string\ndigitSum() {\n  # Write your code here\n  # Use echo to print\
    \ to stdout\n  # Use $1 to get the first argument to the function\n  # Use $#\
    \ to get the number of arguments to the function\n  # Use $@ to get all arguments\
    \ to the function\n  # Use $? to get the exit status of the last command\n  #\
    \ Use $$ to get the process ID of the current shell\n  # Use $USER to get the\
    \ username of the current user\n  # Use $HOSTNAME to get the hostname of the machine\n\
    \  # Use $SECONDS to get the number of seconds since the shell was started\n \
    \ # Use $RANDOM to get a random number\n  # Use $LINENO to get the current line\
    \ number in the Bash script\n  # Use $FUNCNAME to get the name of the current\
    \ function\n  # Use $0 to get the name of the current script\n  # Use $DIRSTACK\
    \ to get the list of currently remembered directories\n  # Use $PWD to get the\
    \ current working directory\n  # Use $BASH_VERSION to get the version of the current\
    \ instance of Bash\n  # Use $BASH_VERSINFO to get a version information array\n\
    \  # Use $BASH_SOURCE to get the name of the file that is currently executing\n\
    \  # Use $BASH_SUBSHELL to get the subshell level of the current shell\n  # Use\
    \ $BASH_LINENO to get an array variable whose members are the line numbers in\
    \ source files where each corresponding member of FUNCNAME was invoked\n  # Use\
    \ $BASH_ARGC to get an array variable whose members are the number of parameters\
    \ in each frame of the current bash execution call stack\n  # Use $BASH_ARGV to\
    \ get an array variable whose members are the parameters in each frame of the\
    \ current bash execution call stack\n  # Use $BASH_EXECUTION_STRING to get the\
    \ command argument to the -c invocation option\n  # Use $BASH_REMATCH to get an\
    \ array variable whose members are assigned by the =~ binary operator to the [[\
    \ conditional command\n  # Use $BASH_SOURCE to get an array variable whose members\
    \ are assigned by the . or source builtin commands\n  # Use $BASH_COMMAND to get\
    \ the command currently being executed or about to be executed, unless the shell\
    \ is executing a\n}\n\ncandidate() {\n    digitSum \"$@\"\n}\n\nset -e\nrun_test()\
    \ {\n    [[ $(candidate \"\") = \"0\" ]]\n    [[ $(candidate \"abAB\") = \"131\"\
    \ ]]\n    [[ $(candidate \"abcCd\") = \"67\" ]]\n    [[ $(candidate \"helloE\"\
    ) = \"69\" ]]\n    [[ $(candidate \"woArBld\") = \"131\" ]]\n    [[ $(candidate\
    \ \"aAaaaXa\") = \"153\" ]]\n    [[ $(candidate \" How are yOu?\") = \"151\" ]]\n\
    \    [[ $(candidate \"You arE Very Smart\") = \"327\" ]]\n}\n\nrun_test"
  status: SyntaxError
  stderr: '/tmp/tmpbv5v5j36.sh: line 36: syntax error near unexpected token `}''

    /tmp/tmpbv5v5j36.sh: line 36: `}''

    '
  stdout: ''
  timestamp: 1660003061
- exit_code: 0
  program: "#!/bin/bash\n# Task\n# Write a function that takes a string as input and\
    \ returns the sum of the upper characters only'\n# ASCII codes.\n# Examples:\n\
    #\n# $1 is a string\ndigitSum() {\n    local sum=0\n    for (( i=0; i<${#1}; i++\
    \ )); do\n        local char=${1:i:1}\n        if [[ $char =~ [A-Z] ]]; then\n\
    \            sum=$((sum + $(printf \"%d\" \"'$char\")))\n        fi\n    done\n\
    \    echo $sum\n}\n\ncandidate() {\n    digitSum \"$@\"\n}\n\nset -e\nrun_test()\
    \ {\n    [[ $(candidate \"\") = \"0\" ]]\n    [[ $(candidate \"abAB\") = \"131\"\
    \ ]]\n    [[ $(candidate \"abcCd\") = \"67\" ]]\n    [[ $(candidate \"helloE\"\
    ) = \"69\" ]]\n    [[ $(candidate \"woArBld\") = \"131\" ]]\n    [[ $(candidate\
    \ \"aAaaaXa\") = \"153\" ]]\n    [[ $(candidate \" How are yOu?\") = \"151\" ]]\n\
    \    [[ $(candidate \"You arE Very Smart\") = \"327\" ]]\n}\n\nrun_test"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660003061
- exit_code: 1
  program: "#!/bin/bash\n# Task\n# Write a function that takes a string as input and\
    \ returns the sum of the upper characters only'\n# ASCII codes.\n# Examples:\n\
    #\n# $1 is a string\ndigitSum() {\n    local sum=0\n    for (( i=0; i<${#1}; i++\
    \ )); do\n        local char=${1:i:1}\n        if [[ $char =~ [A-Z] ]]; then\n\
    \            (( sum+=${char} ))\n        fi\n    done\n    echo $sum\n}\n\ncandidate()\
    \ {\n    digitSum \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"\")\
    \ = \"0\" ]]\n    [[ $(candidate \"abAB\") = \"131\" ]]\n    [[ $(candidate \"\
    abcCd\") = \"67\" ]]\n    [[ $(candidate \"helloE\") = \"69\" ]]\n    [[ $(candidate\
    \ \"woArBld\") = \"131\" ]]\n    [[ $(candidate \"aAaaaXa\") = \"153\" ]]\n  \
    \  [[ $(candidate \" How are yOu?\") = \"151\" ]]\n    [[ $(candidate \"You arE\
    \ Very Smart\") = \"327\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660003061
- exit_code: 0
  program: "#!/bin/bash\n# Task\n# Write a function that takes a string as input and\
    \ returns the sum of the upper characters only'\n# ASCII codes.\n# Examples:\n\
    #\n# $1 is a string\ndigitSum() {\n    local sum=0\n    for (( i=0; i<${#1}; i++\
    \ )); do\n        local char=${1:i:1}\n        if [[ $char =~ [A-Z] ]]; then\n\
    \            sum=$((sum + $(printf \"%d\" \"'$char\")))\n        fi\n    done\n\
    \    echo $sum\n}\n\ncandidate() {\n    digitSum \"$@\"\n}\n\nset -e\nrun_test()\
    \ {\n    [[ $(candidate \"\") = \"0\" ]]\n    [[ $(candidate \"abAB\") = \"131\"\
    \ ]]\n    [[ $(candidate \"abcCd\") = \"67\" ]]\n    [[ $(candidate \"helloE\"\
    ) = \"69\" ]]\n    [[ $(candidate \"woArBld\") = \"131\" ]]\n    [[ $(candidate\
    \ \"aAaaaXa\") = \"153\" ]]\n    [[ $(candidate \" How are yOu?\") = \"151\" ]]\n\
    \    [[ $(candidate \"You arE Very Smart\") = \"327\" ]]\n}\n\nrun_test"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660003061
- exit_code: 0
  program: "#!/bin/bash\n# Task\n# Write a function that takes a string as input and\
    \ returns the sum of the upper characters only'\n# ASCII codes.\n# Examples:\n\
    #\n# $1 is a string\ndigitSum() {\n    local sum=0\n    local str=$1\n    for\
    \ (( i=0; i<${#str}; i++ )); do\n        local char=${str:$i:1}\n        if [[\
    \ $char =~ [A-Z] ]]; then\n            local char_code=$(printf '%d' \"'$char\"\
    )\n            let sum+=$char_code\n        fi\n    done\n    echo $sum\n}\n\n\
    candidate() {\n    digitSum \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate\
    \ \"\") = \"0\" ]]\n    [[ $(candidate \"abAB\") = \"131\" ]]\n    [[ $(candidate\
    \ \"abcCd\") = \"67\" ]]\n    [[ $(candidate \"helloE\") = \"69\" ]]\n    [[ $(candidate\
    \ \"woArBld\") = \"131\" ]]\n    [[ $(candidate \"aAaaaXa\") = \"153\" ]]\n  \
    \  [[ $(candidate \" How are yOu?\") = \"151\" ]]\n    [[ $(candidate \"You arE\
    \ Very Smart\") = \"327\" ]]\n}\n\nrun_test"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660003061
- exit_code: 0
  program: "#!/bin/bash\n# Task\n# Write a function that takes a string as input and\
    \ returns the sum of the upper characters only'\n# ASCII codes.\n# Examples:\n\
    #\n# $1 is a string\ndigitSum() {\n    local sum=0\n    local str=\"$1\"\n   \
    \ for (( i=0; i<${#str}; i++ )); do\n        local char=${str:$i:1}\n        local\
    \ ascii=$(printf \"%d\" \"'$char\")\n        if [[ $ascii -ge 65 && $ascii -le\
    \ 90 ]]; then\n            (( sum += ascii ))\n        fi\n    done\n    echo\
    \ $sum\n}\n\ncandidate() {\n    digitSum \"$@\"\n}\n\nset -e\nrun_test() {\n \
    \   [[ $(candidate \"\") = \"0\" ]]\n    [[ $(candidate \"abAB\") = \"131\" ]]\n\
    \    [[ $(candidate \"abcCd\") = \"67\" ]]\n    [[ $(candidate \"helloE\") = \"\
    69\" ]]\n    [[ $(candidate \"woArBld\") = \"131\" ]]\n    [[ $(candidate \"aAaaaXa\"\
    ) = \"153\" ]]\n    [[ $(candidate \" How are yOu?\") = \"151\" ]]\n    [[ $(candidate\
    \ \"You arE Very Smart\") = \"327\" ]]\n}\n\nrun_test"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660003061
- exit_code: 0
  program: "#!/bin/bash\n# Task\n# Write a function that takes a string as input and\
    \ returns the sum of the upper characters only'\n# ASCII codes.\n# Examples:\n\
    #\n# $1 is a string\ndigitSum() {\n    local sum=0\n    for (( i=0; i<${#1}; i++\
    \ )); do\n        local char=${1:i:1}\n        if [[ $char =~ [A-Z] ]]; then\n\
    \            sum=$(( sum + $(printf \"%d\" \"'$char\") ))\n        fi\n    done\n\
    \    echo $sum\n}\n\ncandidate() {\n    digitSum \"$@\"\n}\n\nset -e\nrun_test()\
    \ {\n    [[ $(candidate \"\") = \"0\" ]]\n    [[ $(candidate \"abAB\") = \"131\"\
    \ ]]\n    [[ $(candidate \"abcCd\") = \"67\" ]]\n    [[ $(candidate \"helloE\"\
    ) = \"69\" ]]\n    [[ $(candidate \"woArBld\") = \"131\" ]]\n    [[ $(candidate\
    \ \"aAaaaXa\") = \"153\" ]]\n    [[ $(candidate \" How are yOu?\") = \"151\" ]]\n\
    \    [[ $(candidate \"You arE Very Smart\") = \"327\" ]]\n}\n\nrun_test"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660003061
- exit_code: 1
  program: "#!/bin/bash\n# Task\n# Write a function that takes a string as input and\
    \ returns the sum of the upper characters only'\n# ASCII codes.\n# Examples:\n\
    #\n# $1 is a string\ndigitSum() {\n  local sum=0\n  for (( i=0; i<${#1}; i++ ));\
    \ do\n    (( ${1:$i:1} >= 65 && ${1:$i:1} <= 90 )) && (( sum+=$(printf \"%d\"\
    \ \"'${1:$i:1}\") ))\n  done\n  echo $sum\n}\n\ncandidate() {\n    digitSum \"\
    $@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"\") = \"0\" ]]\n    [[ $(candidate\
    \ \"abAB\") = \"131\" ]]\n    [[ $(candidate \"abcCd\") = \"67\" ]]\n    [[ $(candidate\
    \ \"helloE\") = \"69\" ]]\n    [[ $(candidate \"woArBld\") = \"131\" ]]\n    [[\
    \ $(candidate \"aAaaaXa\") = \"153\" ]]\n    [[ $(candidate \" How are yOu?\"\
    ) = \"151\" ]]\n    [[ $(candidate \"You arE Very Smart\") = \"327\" ]]\n}\n\n\
    run_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660003061
- exit_code: 0
  program: "#!/bin/bash\n# Task\n# Write a function that takes a string as input and\
    \ returns the sum of the upper characters only'\n# ASCII codes.\n# Examples:\n\
    #\n# $1 is a string\ndigitSum() {\n  local sum=0\n  for (( i=0; i<${#1}; i++ ));\
    \ do\n    local char=${1:i:1}\n    if [[ $char =~ [A-Z] ]]; then\n      sum=$((sum\
    \ + $(printf \"%d\" \"'$char\")))\n    fi\n  done\n  echo $sum\n}\n\ncandidate()\
    \ {\n    digitSum \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"\")\
    \ = \"0\" ]]\n    [[ $(candidate \"abAB\") = \"131\" ]]\n    [[ $(candidate \"\
    abcCd\") = \"67\" ]]\n    [[ $(candidate \"helloE\") = \"69\" ]]\n    [[ $(candidate\
    \ \"woArBld\") = \"131\" ]]\n    [[ $(candidate \"aAaaaXa\") = \"153\" ]]\n  \
    \  [[ $(candidate \" How are yOu?\") = \"151\" ]]\n    [[ $(candidate \"You arE\
    \ Very Smart\") = \"327\" ]]\n}\n\nrun_test"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660003061
- exit_code: 0
  program: "#!/bin/bash\n# Task\n# Write a function that takes a string as input and\
    \ returns the sum of the upper characters only'\n# ASCII codes.\n# Examples:\n\
    #\n# $1 is a string\ndigitSum() {\n  local sum=0\n  local str=$1\n  for (( i=0;\
    \ i<${#str}; i++ )); do\n    local char=${str:$i:1}\n    if [[ $char =~ [A-Z]\
    \ ]]; then\n      sum=$(( sum + $(printf \"%d\" \"'$char\") ))\n    fi\n  done\n\
    \  echo $sum\n}\n\ncandidate() {\n    digitSum \"$@\"\n}\n\nset -e\nrun_test()\
    \ {\n    [[ $(candidate \"\") = \"0\" ]]\n    [[ $(candidate \"abAB\") = \"131\"\
    \ ]]\n    [[ $(candidate \"abcCd\") = \"67\" ]]\n    [[ $(candidate \"helloE\"\
    ) = \"69\" ]]\n    [[ $(candidate \"woArBld\") = \"131\" ]]\n    [[ $(candidate\
    \ \"aAaaaXa\") = \"153\" ]]\n    [[ $(candidate \" How are yOu?\") = \"151\" ]]\n\
    \    [[ $(candidate \"You arE Very Smart\") = \"327\" ]]\n}\n\nrun_test"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660003061
- exit_code: 1
  program: "#!/bin/bash\n# Task\n# Write a function that takes a string as input and\
    \ returns the sum of the upper characters only'\n# ASCII codes.\n# Examples:\n\
    #\n# $1 is a string\ndigitSum() {\n    local sum=0\n    for (( i=0; i<${#1}; i++\
    \ )); do\n        local char=${1:i:1}\n        if [[ $char =~ [A-Z] ]]; then\n\
    \            (( sum+=${char} ))\n        fi\n    done\n    echo $sum\n}\n\ncandidate()\
    \ {\n    digitSum \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"\")\
    \ = \"0\" ]]\n    [[ $(candidate \"abAB\") = \"131\" ]]\n    [[ $(candidate \"\
    abcCd\") = \"67\" ]]\n    [[ $(candidate \"helloE\") = \"69\" ]]\n    [[ $(candidate\
    \ \"woArBld\") = \"131\" ]]\n    [[ $(candidate \"aAaaaXa\") = \"153\" ]]\n  \
    \  [[ $(candidate \" How are yOu?\") = \"151\" ]]\n    [[ $(candidate \"You arE\
    \ Very Smart\") = \"327\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660003061
- exit_code: 0
  program: "#!/bin/bash\n# Task\n# Write a function that takes a string as input and\
    \ returns the sum of the upper characters only'\n# ASCII codes.\n# Examples:\n\
    #\n# $1 is a string\ndigitSum() {\n  local sum=0\n  local str=\"$1\"\n  local\
    \ i=0\n  local len=${#str}\n  while [ $i -lt $len ]; do\n    local char=${str:$i:1}\n\
    \    local ascii=$(printf \"%d\" \"'$char\")\n    if [ $ascii -ge 65 ] && [ $ascii\
    \ -le 90 ]; then\n      sum=$((sum + ascii))\n    fi\n    i=$((i + 1))\n  done\n\
    \  echo $sum\n}\n\ncandidate() {\n    digitSum \"$@\"\n}\n\nset -e\nrun_test()\
    \ {\n    [[ $(candidate \"\") = \"0\" ]]\n    [[ $(candidate \"abAB\") = \"131\"\
    \ ]]\n    [[ $(candidate \"abcCd\") = \"67\" ]]\n    [[ $(candidate \"helloE\"\
    ) = \"69\" ]]\n    [[ $(candidate \"woArBld\") = \"131\" ]]\n    [[ $(candidate\
    \ \"aAaaaXa\") = \"153\" ]]\n    [[ $(candidate \" How are yOu?\") = \"151\" ]]\n\
    \    [[ $(candidate \"You arE Very Smart\") = \"327\" ]]\n}\n\nrun_test"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660003061
- exit_code: 0
  program: "#!/bin/bash\n# Task\n# Write a function that takes a string as input and\
    \ returns the sum of the upper characters only'\n# ASCII codes.\n# Examples:\n\
    #\n# $1 is a string\ndigitSum() {\n  local sum=0\n  for (( i=0; i<${#1}; i++ ));\
    \ do\n    local char=${1:i:1}\n    if [[ $char =~ [A-Z] ]]; then\n      sum=$((\
    \ sum + $(printf \"%d\" \"'$char\") ))\n    fi\n  done\n  echo $sum\n}\n\ncandidate()\
    \ {\n    digitSum \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"\")\
    \ = \"0\" ]]\n    [[ $(candidate \"abAB\") = \"131\" ]]\n    [[ $(candidate \"\
    abcCd\") = \"67\" ]]\n    [[ $(candidate \"helloE\") = \"69\" ]]\n    [[ $(candidate\
    \ \"woArBld\") = \"131\" ]]\n    [[ $(candidate \"aAaaaXa\") = \"153\" ]]\n  \
    \  [[ $(candidate \" How are yOu?\") = \"151\" ]]\n    [[ $(candidate \"You arE\
    \ Very Smart\") = \"327\" ]]\n}\n\nrun_test"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660003061
- exit_code: 0
  program: "#!/bin/bash\n# Task\n# Write a function that takes a string as input and\
    \ returns the sum of the upper characters only'\n# ASCII codes.\n# Examples:\n\
    #\n# $1 is a string\ndigitSum() {\n    local sum=0\n    for (( i=0; i<${#1}; i++\
    \ )); do\n        local ascii=$(printf \"%d\" \"'${1:$i:1}\")\n        if (( ascii\
    \ >= 65 && ascii <= 90 )); then\n            (( sum += ascii ))\n        fi\n\
    \    done\n    echo $sum\n}\n\ncandidate() {\n    digitSum \"$@\"\n}\n\nset -e\n\
    run_test() {\n    [[ $(candidate \"\") = \"0\" ]]\n    [[ $(candidate \"abAB\"\
    ) = \"131\" ]]\n    [[ $(candidate \"abcCd\") = \"67\" ]]\n    [[ $(candidate\
    \ \"helloE\") = \"69\" ]]\n    [[ $(candidate \"woArBld\") = \"131\" ]]\n    [[\
    \ $(candidate \"aAaaaXa\") = \"153\" ]]\n    [[ $(candidate \" How are yOu?\"\
    ) = \"151\" ]]\n    [[ $(candidate \"You arE Very Smart\") = \"327\" ]]\n}\n\n\
    run_test"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660003061
- exit_code: 1
  program: "#!/bin/bash\n# Task\n# Write a function that takes a string as input and\
    \ returns the sum of the upper characters only'\n# ASCII codes.\n# Examples:\n\
    #\n# $1 is a string\ndigitSum() {\n  local sum=0\n  local str=$1\n  local char\n\
    \  for (( i=0; i<${#str}; i++ )); do\n    char=${str:$i:1}\n    if [[ $char =~\
    \ [A-Z] ]]; then\n      sum=$(( sum + ${char} ))\n    fi\n  done\n  echo $sum\n\
    }\n\ncandidate() {\n    digitSum \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate\
    \ \"\") = \"0\" ]]\n    [[ $(candidate \"abAB\") = \"131\" ]]\n    [[ $(candidate\
    \ \"abcCd\") = \"67\" ]]\n    [[ $(candidate \"helloE\") = \"69\" ]]\n    [[ $(candidate\
    \ \"woArBld\") = \"131\" ]]\n    [[ $(candidate \"aAaaaXa\") = \"153\" ]]\n  \
    \  [[ $(candidate \" How are yOu?\") = \"151\" ]]\n    [[ $(candidate \"You arE\
    \ Very Smart\") = \"327\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660003061
- exit_code: 0
  program: "#!/bin/bash\n# Task\n# Write a function that takes a string as input and\
    \ returns the sum of the upper characters only'\n# ASCII codes.\n# Examples:\n\
    #\n# $1 is a string\ndigitSum() {\n    local sum=0\n    local str=\"$1\"\n   \
    \ local i=0\n    local len=${#str}\n    while [ $i -lt $len ]; do\n        local\
    \ char=${str:$i:1}\n        local ascii=$(printf \"%d\" \"'$char\")\n        if\
    \ [ $ascii -ge 65 ] && [ $ascii -le 90 ]; then\n            sum=$((sum + ascii))\n\
    \        fi\n        i=$((i + 1))\n    done\n    echo $sum\n}\n\ncandidate() {\n\
    \    digitSum \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"\") = \"\
    0\" ]]\n    [[ $(candidate \"abAB\") = \"131\" ]]\n    [[ $(candidate \"abcCd\"\
    ) = \"67\" ]]\n    [[ $(candidate \"helloE\") = \"69\" ]]\n    [[ $(candidate\
    \ \"woArBld\") = \"131\" ]]\n    [[ $(candidate \"aAaaaXa\") = \"153\" ]]\n  \
    \  [[ $(candidate \" How are yOu?\") = \"151\" ]]\n    [[ $(candidate \"You arE\
    \ Very Smart\") = \"327\" ]]\n}\n\nrun_test"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660003061
- exit_code: 0
  program: "#!/bin/bash\n# Task\n# Write a function that takes a string as input and\
    \ returns the sum of the upper characters only'\n# ASCII codes.\n# Examples:\n\
    #\n# $1 is a string\ndigitSum() {\n    local sum=0\n    for (( i=0; i<${#1}; i++\
    \ )); do\n        local char=${1:i:1}\n        if [[ $char =~ [A-Z] ]]; then\n\
    \            sum=$(( sum + $(printf \"%d\" \"'$char\") ))\n        fi\n    done\n\
    \    echo $sum\n}\n\ncandidate() {\n    digitSum \"$@\"\n}\n\nset -e\nrun_test()\
    \ {\n    [[ $(candidate \"\") = \"0\" ]]\n    [[ $(candidate \"abAB\") = \"131\"\
    \ ]]\n    [[ $(candidate \"abcCd\") = \"67\" ]]\n    [[ $(candidate \"helloE\"\
    ) = \"69\" ]]\n    [[ $(candidate \"woArBld\") = \"131\" ]]\n    [[ $(candidate\
    \ \"aAaaaXa\") = \"153\" ]]\n    [[ $(candidate \" How are yOu?\") = \"151\" ]]\n\
    \    [[ $(candidate \"You arE Very Smart\") = \"327\" ]]\n}\n\nrun_test"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660003061
- exit_code: 0
  program: "#!/bin/bash\n# Task\n# Write a function that takes a string as input and\
    \ returns the sum of the upper characters only'\n# ASCII codes.\n# Examples:\n\
    #\n# $1 is a string\ndigitSum() {\n    local sum=0\n    local str=$1\n    for\
    \ (( i=0; i<${#str}; i++ )); do\n        local char=${str:$i:1}\n        local\
    \ ascii=$(printf \"%d\" \"'$char\")\n        if [[ $ascii -ge 65 && $ascii -le\
    \ 90 ]]; then\n            (( sum += ascii ))\n        fi\n    done\n    echo\
    \ $sum\n}\n\ncandidate() {\n    digitSum \"$@\"\n}\n\nset -e\nrun_test() {\n \
    \   [[ $(candidate \"\") = \"0\" ]]\n    [[ $(candidate \"abAB\") = \"131\" ]]\n\
    \    [[ $(candidate \"abcCd\") = \"67\" ]]\n    [[ $(candidate \"helloE\") = \"\
    69\" ]]\n    [[ $(candidate \"woArBld\") = \"131\" ]]\n    [[ $(candidate \"aAaaaXa\"\
    ) = \"153\" ]]\n    [[ $(candidate \" How are yOu?\") = \"151\" ]]\n    [[ $(candidate\
    \ \"You arE Very Smart\") = \"327\" ]]\n}\n\nrun_test"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660003061
- exit_code: 0
  program: "#!/bin/bash\n# Task\n# Write a function that takes a string as input and\
    \ returns the sum of the upper characters only'\n# ASCII codes.\n# Examples:\n\
    #\n# $1 is a string\ndigitSum() {\n    local sum=0\n    local str=$1\n    for\
    \ (( i=0; i<${#str}; i++ )); do\n        local char=${str:$i:1}\n        local\
    \ ascii=$(printf \"%d\" \"'$char\")\n        if [[ $ascii -ge 65 && $ascii -le\
    \ 90 ]]; then\n            (( sum+=$ascii ))\n        fi\n    done\n    echo $sum\n\
    }\n\ncandidate() {\n    digitSum \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate\
    \ \"\") = \"0\" ]]\n    [[ $(candidate \"abAB\") = \"131\" ]]\n    [[ $(candidate\
    \ \"abcCd\") = \"67\" ]]\n    [[ $(candidate \"helloE\") = \"69\" ]]\n    [[ $(candidate\
    \ \"woArBld\") = \"131\" ]]\n    [[ $(candidate \"aAaaaXa\") = \"153\" ]]\n  \
    \  [[ $(candidate \" How are yOu?\") = \"151\" ]]\n    [[ $(candidate \"You arE\
    \ Very Smart\") = \"327\" ]]\n}\n\nrun_test"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660003061
- exit_code: 0
  program: "#!/bin/bash\n# Task\n# Write a function that takes a string as input and\
    \ returns the sum of the upper characters only'\n# ASCII codes.\n# Examples:\n\
    #\n# $1 is a string\ndigitSum() {\n    local sum=0\n    for (( i=0; i<${#1}; i++\
    \ )); do\n        local char=${1:i:1}\n        if [[ $char =~ [A-Z] ]]; then\n\
    \            sum=$((sum + $(printf \"%d\" \"'$char\")))\n        fi\n    done\n\
    \    echo $sum\n}\n\ncandidate() {\n    digitSum \"$@\"\n}\n\nset -e\nrun_test()\
    \ {\n    [[ $(candidate \"\") = \"0\" ]]\n    [[ $(candidate \"abAB\") = \"131\"\
    \ ]]\n    [[ $(candidate \"abcCd\") = \"67\" ]]\n    [[ $(candidate \"helloE\"\
    ) = \"69\" ]]\n    [[ $(candidate \"woArBld\") = \"131\" ]]\n    [[ $(candidate\
    \ \"aAaaaXa\") = \"153\" ]]\n    [[ $(candidate \" How are yOu?\") = \"151\" ]]\n\
    \    [[ $(candidate \"You arE Very Smart\") = \"327\" ]]\n}\n\nrun_test"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660003061
- exit_code: 0
  program: "#!/bin/bash\n# Task\n# Write a function that takes a string as input and\
    \ returns the sum of the upper characters only'\n# ASCII codes.\n# Examples:\n\
    #\n# $1 is a string\ndigitSum() {\n    local -i sum=0\n    local -i i=0\n    local\
    \ -i len=\"${#1}\"\n    while (( i < len )); do\n        local -i ascii=\"$(printf\
    \ '%d' \"'${1:i:1}\")\"\n        (( ascii >= 65 && ascii <= 90 )) && (( sum +=\
    \ ascii ))\n        (( i++ ))\n    done\n    echo \"$sum\"\n}\n\ncandidate() {\n\
    \    digitSum \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"\") = \"\
    0\" ]]\n    [[ $(candidate \"abAB\") = \"131\" ]]\n    [[ $(candidate \"abcCd\"\
    ) = \"67\" ]]\n    [[ $(candidate \"helloE\") = \"69\" ]]\n    [[ $(candidate\
    \ \"woArBld\") = \"131\" ]]\n    [[ $(candidate \"aAaaaXa\") = \"153\" ]]\n  \
    \  [[ $(candidate \" How are yOu?\") = \"151\" ]]\n    [[ $(candidate \"You arE\
    \ Very Smart\") = \"327\" ]]\n}\n\nrun_test"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660003061
- exit_code: 1
  program: "#!/bin/bash\n# Task\n# Write a function that takes a string as input and\
    \ returns the sum of the upper characters only'\n# ASCII codes.\n# Examples:\n\
    #\n# $1 is a string\ndigitSum() {\n    local sum=0\n    for (( i=0; i<${#1}; i++\
    \ )); do\n        local char=${1:i:1}\n        if [[ $char =~ [A-Z] ]]; then\n\
    \            (( sum+=${char} ))\n        fi\n    done\n    echo $sum\n}\n\ncandidate()\
    \ {\n    digitSum \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"\")\
    \ = \"0\" ]]\n    [[ $(candidate \"abAB\") = \"131\" ]]\n    [[ $(candidate \"\
    abcCd\") = \"67\" ]]\n    [[ $(candidate \"helloE\") = \"69\" ]]\n    [[ $(candidate\
    \ \"woArBld\") = \"131\" ]]\n    [[ $(candidate \"aAaaaXa\") = \"153\" ]]\n  \
    \  [[ $(candidate \" How are yOu?\") = \"151\" ]]\n    [[ $(candidate \"You arE\
    \ Very Smart\") = \"327\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660003061
- exit_code: 0
  program: "#!/bin/bash\n# Task\n# Write a function that takes a string as input and\
    \ returns the sum of the upper characters only'\n# ASCII codes.\n# Examples:\n\
    #\n# $1 is a string\ndigitSum() {\n    local sum=0\n    local str=\"$1\"\n   \
    \ for (( i=0; i<${#str}; i++ )); do\n        local char=${str:$i:1}\n        local\
    \ ascii=$(printf \"%d\" \"'$char\")\n        if (( ascii >= 65 && ascii <= 90\
    \ )); then\n            (( sum += ascii ))\n        fi\n    done\n    echo $sum\n\
    }\n\ncandidate() {\n    digitSum \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate\
    \ \"\") = \"0\" ]]\n    [[ $(candidate \"abAB\") = \"131\" ]]\n    [[ $(candidate\
    \ \"abcCd\") = \"67\" ]]\n    [[ $(candidate \"helloE\") = \"69\" ]]\n    [[ $(candidate\
    \ \"woArBld\") = \"131\" ]]\n    [[ $(candidate \"aAaaaXa\") = \"153\" ]]\n  \
    \  [[ $(candidate \" How are yOu?\") = \"151\" ]]\n    [[ $(candidate \"You arE\
    \ Very Smart\") = \"327\" ]]\n}\n\nrun_test"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660003061
- exit_code: 1
  program: "#!/bin/bash\n# Task\n# Write a function that takes a string as input and\
    \ returns the sum of the upper characters only'\n# ASCII codes.\n# Examples:\n\
    #\n# $1 is a string\ndigitSum() {\n    local sum=0\n    for (( i=0; i<${#1}; i++\
    \ )); do\n        (( ${1:$i:1} >= 65 && ${1:$i:1} <= 90 )) && (( sum+=$(printf\
    \ \"%d\" \"'${1:$i:1}\") ))\n    done\n    echo $sum\n}\n\ncandidate() {\n   \
    \ digitSum \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"\") = \"0\"\
    \ ]]\n    [[ $(candidate \"abAB\") = \"131\" ]]\n    [[ $(candidate \"abcCd\"\
    ) = \"67\" ]]\n    [[ $(candidate \"helloE\") = \"69\" ]]\n    [[ $(candidate\
    \ \"woArBld\") = \"131\" ]]\n    [[ $(candidate \"aAaaaXa\") = \"153\" ]]\n  \
    \  [[ $(candidate \" How are yOu?\") = \"151\" ]]\n    [[ $(candidate \"You arE\
    \ Very Smart\") = \"327\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660003061
- exit_code: 0
  program: "#!/bin/bash\n# Task\n# Write a function that takes a string as input and\
    \ returns the sum of the upper characters only'\n# ASCII codes.\n# Examples:\n\
    #\n# $1 is a string\ndigitSum() {\n    local sum=0\n    local str=$1\n    for\
    \ (( i=0; i<${#str}; i++ )); do\n        local char=${str:$i:1}\n        local\
    \ code=$(printf '%d' \"'$char\")\n        if (( code >= 65 && code <= 90 )); then\n\
    \            (( sum += code ))\n        fi\n    done\n    echo $sum\n}\n\ncandidate()\
    \ {\n    digitSum \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"\")\
    \ = \"0\" ]]\n    [[ $(candidate \"abAB\") = \"131\" ]]\n    [[ $(candidate \"\
    abcCd\") = \"67\" ]]\n    [[ $(candidate \"helloE\") = \"69\" ]]\n    [[ $(candidate\
    \ \"woArBld\") = \"131\" ]]\n    [[ $(candidate \"aAaaaXa\") = \"153\" ]]\n  \
    \  [[ $(candidate \" How are yOu?\") = \"151\" ]]\n    [[ $(candidate \"You arE\
    \ Very Smart\") = \"327\" ]]\n}\n\nrun_test"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660003061
- exit_code: 0
  program: "#!/bin/bash\n# Task\n# Write a function that takes a string as input and\
    \ returns the sum of the upper characters only'\n# ASCII codes.\n# Examples:\n\
    #\n# $1 is a string\ndigitSum() {\n    local str=$1\n    local sum=0\n    for\
    \ (( i=0; i<${#str}; i++ )); do\n        local char=${str:$i:1}\n        local\
    \ ascii=$(printf \"%d\" \"'$char\")\n        if [[ $ascii -ge 65 && $ascii -le\
    \ 90 ]]; then\n            sum=$((sum + ascii))\n        fi\n    done\n    echo\
    \ $sum\n}\n\ncandidate() {\n    digitSum \"$@\"\n}\n\nset -e\nrun_test() {\n \
    \   [[ $(candidate \"\") = \"0\" ]]\n    [[ $(candidate \"abAB\") = \"131\" ]]\n\
    \    [[ $(candidate \"abcCd\") = \"67\" ]]\n    [[ $(candidate \"helloE\") = \"\
    69\" ]]\n    [[ $(candidate \"woArBld\") = \"131\" ]]\n    [[ $(candidate \"aAaaaXa\"\
    ) = \"153\" ]]\n    [[ $(candidate \" How are yOu?\") = \"151\" ]]\n    [[ $(candidate\
    \ \"You arE Very Smart\") = \"327\" ]]\n}\n\nrun_test"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660003061
- exit_code: 0
  program: "#!/bin/bash\n# Task\n# Write a function that takes a string as input and\
    \ returns the sum of the upper characters only'\n# ASCII codes.\n# Examples:\n\
    #\n# $1 is a string\ndigitSum() {\n    local sum=0\n    local str=\"$1\"\n   \
    \ local len=${#str}\n    local i=0\n    while [ $i -lt $len ]; do\n        local\
    \ char=${str:$i:1}\n        local ascii=$(printf \"%d\" \"'$char\")\n        if\
    \ [ $ascii -ge 65 ] && [ $ascii -le 90 ]; then\n            sum=$((sum + ascii))\n\
    \        fi\n        i=$((i + 1))\n    done\n    echo $sum\n}\n\ncandidate() {\n\
    \    digitSum \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"\") = \"\
    0\" ]]\n    [[ $(candidate \"abAB\") = \"131\" ]]\n    [[ $(candidate \"abcCd\"\
    ) = \"67\" ]]\n    [[ $(candidate \"helloE\") = \"69\" ]]\n    [[ $(candidate\
    \ \"woArBld\") = \"131\" ]]\n    [[ $(candidate \"aAaaaXa\") = \"153\" ]]\n  \
    \  [[ $(candidate \" How are yOu?\") = \"151\" ]]\n    [[ $(candidate \"You arE\
    \ Very Smart\") = \"327\" ]]\n}\n\nrun_test"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660003061
- exit_code: 0
  program: "#!/bin/bash\n# Task\n# Write a function that takes a string as input and\
    \ returns the sum of the upper characters only'\n# ASCII codes.\n# Examples:\n\
    #\n# $1 is a string\ndigitSum() {\n    local sum=0\n    local str=$1\n    local\
    \ i=0\n    while [ $i -lt ${#str} ]; do\n        local char=${str:$i:1}\n    \
    \    if [[ $char =~ [A-Z] ]]; then\n            sum=$((sum + $(printf \"%d\" \"\
    '$char\")))\n        fi\n        i=$((i + 1))\n    done\n    echo $sum\n}\n\n\
    candidate() {\n    digitSum \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate\
    \ \"\") = \"0\" ]]\n    [[ $(candidate \"abAB\") = \"131\" ]]\n    [[ $(candidate\
    \ \"abcCd\") = \"67\" ]]\n    [[ $(candidate \"helloE\") = \"69\" ]]\n    [[ $(candidate\
    \ \"woArBld\") = \"131\" ]]\n    [[ $(candidate \"aAaaaXa\") = \"153\" ]]\n  \
    \  [[ $(candidate \" How are yOu?\") = \"151\" ]]\n    [[ $(candidate \"You arE\
    \ Very Smart\") = \"327\" ]]\n}\n\nrun_test"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660003061
- exit_code: 0
  program: "#!/bin/bash\n# Task\n# Write a function that takes a string as input and\
    \ returns the sum of the upper characters only'\n# ASCII codes.\n# Examples:\n\
    #\n# $1 is a string\ndigitSum() {\n    local sum=0\n    for (( i=0; i<${#1}; i++\
    \ )); do\n        local char=${1:i:1}\n        if [[ $char =~ [A-Z] ]]; then\n\
    \            (( sum += $(printf \"%d\" \"'$char\") ))\n        fi\n    done\n\
    \    echo $sum\n}\n\ncandidate() {\n    digitSum \"$@\"\n}\n\nset -e\nrun_test()\
    \ {\n    [[ $(candidate \"\") = \"0\" ]]\n    [[ $(candidate \"abAB\") = \"131\"\
    \ ]]\n    [[ $(candidate \"abcCd\") = \"67\" ]]\n    [[ $(candidate \"helloE\"\
    ) = \"69\" ]]\n    [[ $(candidate \"woArBld\") = \"131\" ]]\n    [[ $(candidate\
    \ \"aAaaaXa\") = \"153\" ]]\n    [[ $(candidate \" How are yOu?\") = \"151\" ]]\n\
    \    [[ $(candidate \"You arE Very Smart\") = \"327\" ]]\n}\n\nrun_test"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660003061
- exit_code: 0
  program: "#!/bin/bash\n# Task\n# Write a function that takes a string as input and\
    \ returns the sum of the upper characters only'\n# ASCII codes.\n# Examples:\n\
    #\n# $1 is a string\ndigitSum() {\n  local sum=0\n  for (( i=0; i<${#1}; i++ ));\
    \ do\n    local char=${1:i:1}\n    if [[ $char =~ [A-Z] ]]; then\n      sum=$((\
    \ sum + $(printf \"%d\" \"'$char\") ))\n    fi\n  done\n  echo $sum\n}\n\ncandidate()\
    \ {\n    digitSum \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"\")\
    \ = \"0\" ]]\n    [[ $(candidate \"abAB\") = \"131\" ]]\n    [[ $(candidate \"\
    abcCd\") = \"67\" ]]\n    [[ $(candidate \"helloE\") = \"69\" ]]\n    [[ $(candidate\
    \ \"woArBld\") = \"131\" ]]\n    [[ $(candidate \"aAaaaXa\") = \"153\" ]]\n  \
    \  [[ $(candidate \" How are yOu?\") = \"151\" ]]\n    [[ $(candidate \"You arE\
    \ Very Smart\") = \"327\" ]]\n}\n\nrun_test"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660003061
- exit_code: 0
  program: "#!/bin/bash\n# Task\n# Write a function that takes a string as input and\
    \ returns the sum of the upper characters only'\n# ASCII codes.\n# Examples:\n\
    #\n# $1 is a string\ndigitSum() {\n    local sum=0\n    local str=$1\n    for\
    \ (( i=0; i<${#str}; i++ )); do\n        local char=${str:$i:1}\n        if [[\
    \ $char =~ [A-Z] ]]; then\n            local ascii=$(printf \"%d\" \"'$char\"\
    )\n            (( sum += ascii ))\n        fi\n    done\n    echo $sum\n}\n\n\
    candidate() {\n    digitSum \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate\
    \ \"\") = \"0\" ]]\n    [[ $(candidate \"abAB\") = \"131\" ]]\n    [[ $(candidate\
    \ \"abcCd\") = \"67\" ]]\n    [[ $(candidate \"helloE\") = \"69\" ]]\n    [[ $(candidate\
    \ \"woArBld\") = \"131\" ]]\n    [[ $(candidate \"aAaaaXa\") = \"153\" ]]\n  \
    \  [[ $(candidate \" How are yOu?\") = \"151\" ]]\n    [[ $(candidate \"You arE\
    \ Very Smart\") = \"327\" ]]\n}\n\nrun_test"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660003061
- exit_code: 0
  program: "#!/bin/bash\n# Task\n# Write a function that takes a string as input and\
    \ returns the sum of the upper characters only'\n# ASCII codes.\n# Examples:\n\
    #\n# $1 is a string\ndigitSum() {\n  local sum=0\n  for (( i=0; i<${#1}; i++ ));\
    \ do\n    local char=${1:i:1}\n    local ascii=$(printf \"%d\" \"'$char\")\n \
    \   if [[ $ascii -ge 65 && $ascii -le 90 ]]; then\n      sum=$((sum + ascii))\n\
    \    fi\n  done\n  echo $sum\n}\n\ncandidate() {\n    digitSum \"$@\"\n}\n\nset\
    \ -e\nrun_test() {\n    [[ $(candidate \"\") = \"0\" ]]\n    [[ $(candidate \"\
    abAB\") = \"131\" ]]\n    [[ $(candidate \"abcCd\") = \"67\" ]]\n    [[ $(candidate\
    \ \"helloE\") = \"69\" ]]\n    [[ $(candidate \"woArBld\") = \"131\" ]]\n    [[\
    \ $(candidate \"aAaaaXa\") = \"153\" ]]\n    [[ $(candidate \" How are yOu?\"\
    ) = \"151\" ]]\n    [[ $(candidate \"You arE Very Smart\") = \"327\" ]]\n}\n\n\
    run_test"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660003061
- exit_code: 1
  program: "#!/bin/bash\n# Task\n# Write a function that takes a string as input and\
    \ returns the sum of the upper characters only'\n# ASCII codes.\n# Examples:\n\
    #\n# $1 is a string\ndigitSum() {\n    # Write your code here\n    sum=0\n   \
    \ for (( i=0; i<${#1}; i++ )); do\n        if [[ ${1:$i:1} =~ [A-Z] ]]; then\n\
    \            sum=$((sum+${1:$i:1}))\n        fi\n    done\n    echo $sum\n}\n\n\
    candidate() {\n    digitSum \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate\
    \ \"\") = \"0\" ]]\n    [[ $(candidate \"abAB\") = \"131\" ]]\n    [[ $(candidate\
    \ \"abcCd\") = \"67\" ]]\n    [[ $(candidate \"helloE\") = \"69\" ]]\n    [[ $(candidate\
    \ \"woArBld\") = \"131\" ]]\n    [[ $(candidate \"aAaaaXa\") = \"153\" ]]\n  \
    \  [[ $(candidate \" How are yOu?\") = \"151\" ]]\n    [[ $(candidate \"You arE\
    \ Very Smart\") = \"327\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660003061
- exit_code: 0
  program: "#!/bin/bash\n# Task\n# Write a function that takes a string as input and\
    \ returns the sum of the upper characters only'\n# ASCII codes.\n# Examples:\n\
    #\n# $1 is a string\ndigitSum() {\n    local sum=0\n    local str=$1\n    for\
    \ (( i=0; i<${#str}; i++ )); do\n        local char=${str:$i:1}\n        local\
    \ ascii=$(printf \"%d\" \"'$char\")\n        if [[ $ascii -ge 65 && $ascii -le\
    \ 90 ]]; then\n            (( sum += ascii ))\n        fi\n    done\n    echo\
    \ $sum\n}\n\ncandidate() {\n    digitSum \"$@\"\n}\n\nset -e\nrun_test() {\n \
    \   [[ $(candidate \"\") = \"0\" ]]\n    [[ $(candidate \"abAB\") = \"131\" ]]\n\
    \    [[ $(candidate \"abcCd\") = \"67\" ]]\n    [[ $(candidate \"helloE\") = \"\
    69\" ]]\n    [[ $(candidate \"woArBld\") = \"131\" ]]\n    [[ $(candidate \"aAaaaXa\"\
    ) = \"153\" ]]\n    [[ $(candidate \" How are yOu?\") = \"151\" ]]\n    [[ $(candidate\
    \ \"You arE Very Smart\") = \"327\" ]]\n}\n\nrun_test"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660003061
- exit_code: 0
  program: "#!/bin/bash\n# Task\n# Write a function that takes a string as input and\
    \ returns the sum of the upper characters only'\n# ASCII codes.\n# Examples:\n\
    #\n# $1 is a string\ndigitSum() {\n    local sum=0\n    for (( i=0; i<${#1}; i++\
    \ )); do\n        local char=${1:i:1}\n        if [[ $char =~ [A-Z] ]]; then\n\
    \            sum=$(( sum + $(printf \"%d\" \"'$char\") ))\n        fi\n    done\n\
    \    echo $sum\n}\n\ncandidate() {\n    digitSum \"$@\"\n}\n\nset -e\nrun_test()\
    \ {\n    [[ $(candidate \"\") = \"0\" ]]\n    [[ $(candidate \"abAB\") = \"131\"\
    \ ]]\n    [[ $(candidate \"abcCd\") = \"67\" ]]\n    [[ $(candidate \"helloE\"\
    ) = \"69\" ]]\n    [[ $(candidate \"woArBld\") = \"131\" ]]\n    [[ $(candidate\
    \ \"aAaaaXa\") = \"153\" ]]\n    [[ $(candidate \" How are yOu?\") = \"151\" ]]\n\
    \    [[ $(candidate \"You arE Very Smart\") = \"327\" ]]\n}\n\nrun_test"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660003061
- exit_code: 1
  program: "#!/bin/bash\n# Task\n# Write a function that takes a string as input and\
    \ returns the sum of the upper characters only'\n# ASCII codes.\n# Examples:\n\
    #\n# $1 is a string\ndigitSum() {\n    local sum=0\n    for (( i=0; i<${#1}; i++\
    \ )); do\n        local char=${1:i:1}\n        if [[ $char =~ [A-Z] ]]; then\n\
    \            sum=$((sum+${char}))\n        fi\n    done\n    echo $sum\n}\n\n\
    candidate() {\n    digitSum \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate\
    \ \"\") = \"0\" ]]\n    [[ $(candidate \"abAB\") = \"131\" ]]\n    [[ $(candidate\
    \ \"abcCd\") = \"67\" ]]\n    [[ $(candidate \"helloE\") = \"69\" ]]\n    [[ $(candidate\
    \ \"woArBld\") = \"131\" ]]\n    [[ $(candidate \"aAaaaXa\") = \"153\" ]]\n  \
    \  [[ $(candidate \" How are yOu?\") = \"151\" ]]\n    [[ $(candidate \"You arE\
    \ Very Smart\") = \"327\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660003061
- exit_code: 1
  program: "#!/bin/bash\n# Task\n# Write a function that takes a string as input and\
    \ returns the sum of the upper characters only'\n# ASCII codes.\n# Examples:\n\
    #\n# $1 is a string\ndigitSum() {\n    local sum=0\n    for (( i=0; i<${#1}; i++\
    \ )); do\n        local char=${1:i:1}\n        if [[ $char =~ [A-Z] ]]; then\n\
    \            sum=$((sum+${char}))\n        fi\n    done\n    echo $sum\n}\n\n\
    candidate() {\n    digitSum \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate\
    \ \"\") = \"0\" ]]\n    [[ $(candidate \"abAB\") = \"131\" ]]\n    [[ $(candidate\
    \ \"abcCd\") = \"67\" ]]\n    [[ $(candidate \"helloE\") = \"69\" ]]\n    [[ $(candidate\
    \ \"woArBld\") = \"131\" ]]\n    [[ $(candidate \"aAaaaXa\") = \"153\" ]]\n  \
    \  [[ $(candidate \" How are yOu?\") = \"151\" ]]\n    [[ $(candidate \"You arE\
    \ Very Smart\") = \"327\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660003061
- exit_code: 0
  program: "#!/bin/bash\n# Task\n# Write a function that takes a string as input and\
    \ returns the sum of the upper characters only'\n# ASCII codes.\n# Examples:\n\
    #\n# $1 is a string\ndigitSum() {\n    local sum=0\n    for (( i=0; i<${#1}; i++\
    \ )); do\n        local char=${1:i:1}\n        if [[ $char =~ [A-Z] ]]; then\n\
    \            sum=$((sum + $(printf \"%d\" \"'$char\")))\n        fi\n    done\n\
    \    echo $sum\n}\n\ncandidate() {\n    digitSum \"$@\"\n}\n\nset -e\nrun_test()\
    \ {\n    [[ $(candidate \"\") = \"0\" ]]\n    [[ $(candidate \"abAB\") = \"131\"\
    \ ]]\n    [[ $(candidate \"abcCd\") = \"67\" ]]\n    [[ $(candidate \"helloE\"\
    ) = \"69\" ]]\n    [[ $(candidate \"woArBld\") = \"131\" ]]\n    [[ $(candidate\
    \ \"aAaaaXa\") = \"153\" ]]\n    [[ $(candidate \" How are yOu?\") = \"151\" ]]\n\
    \    [[ $(candidate \"You arE Very Smart\") = \"327\" ]]\n}\n\nrun_test"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660003061
- exit_code: 0
  program: "#!/bin/bash\n# Task\n# Write a function that takes a string as input and\
    \ returns the sum of the upper characters only'\n# ASCII codes.\n# Examples:\n\
    #\n# $1 is a string\ndigitSum() {\n  local sum=0\n  local str=$1\n  for (( i=0;\
    \ i<${#str}; i++ )); do\n    local char=${str:$i:1}\n    local ascii=$(printf\
    \ \"%d\" \"'$char\")\n    if [[ $ascii -ge 65 && $ascii -le 90 ]]; then\n    \
    \  sum=$((sum + ascii))\n    fi\n  done\n  echo $sum\n}\n\ncandidate() {\n   \
    \ digitSum \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"\") = \"0\"\
    \ ]]\n    [[ $(candidate \"abAB\") = \"131\" ]]\n    [[ $(candidate \"abcCd\"\
    ) = \"67\" ]]\n    [[ $(candidate \"helloE\") = \"69\" ]]\n    [[ $(candidate\
    \ \"woArBld\") = \"131\" ]]\n    [[ $(candidate \"aAaaaXa\") = \"153\" ]]\n  \
    \  [[ $(candidate \" How are yOu?\") = \"151\" ]]\n    [[ $(candidate \"You arE\
    \ Very Smart\") = \"327\" ]]\n}\n\nrun_test"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660003061
- exit_code: 0
  program: "#!/bin/bash\n# Task\n# Write a function that takes a string as input and\
    \ returns the sum of the upper characters only'\n# ASCII codes.\n# Examples:\n\
    #\n# $1 is a string\ndigitSum() {\n    local sum=0\n    for (( i=0; i<${#1}; i++\
    \ )); do\n        local ascii=$(printf \"%d\" \"'${1:$i:1}\")\n        if (( ascii\
    \ >= 65 && ascii <= 90 )); then\n            (( sum += ascii ))\n        fi\n\
    \    done\n    echo $sum\n}\n\ncandidate() {\n    digitSum \"$@\"\n}\n\nset -e\n\
    run_test() {\n    [[ $(candidate \"\") = \"0\" ]]\n    [[ $(candidate \"abAB\"\
    ) = \"131\" ]]\n    [[ $(candidate \"abcCd\") = \"67\" ]]\n    [[ $(candidate\
    \ \"helloE\") = \"69\" ]]\n    [[ $(candidate \"woArBld\") = \"131\" ]]\n    [[\
    \ $(candidate \"aAaaaXa\") = \"153\" ]]\n    [[ $(candidate \" How are yOu?\"\
    ) = \"151\" ]]\n    [[ $(candidate \"You arE Very Smart\") = \"327\" ]]\n}\n\n\
    run_test"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660003061
- exit_code: 1
  program: "#!/bin/bash\n# Task\n# Write a function that takes a string as input and\
    \ returns the sum of the upper characters only'\n# ASCII codes.\n# Examples:\n\
    #\n# $1 is a string\ndigitSum() {\n    local sum=0\n    for (( i=0; i<${#1}; i++\
    \ )); do\n        local char=${1:i:1}\n        if [[ $char =~ [A-Z] ]]; then\n\
    \            (( sum+=${char^^} ))\n        fi\n    done\n    echo $sum\n}\n\n\
    candidate() {\n    digitSum \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate\
    \ \"\") = \"0\" ]]\n    [[ $(candidate \"abAB\") = \"131\" ]]\n    [[ $(candidate\
    \ \"abcCd\") = \"67\" ]]\n    [[ $(candidate \"helloE\") = \"69\" ]]\n    [[ $(candidate\
    \ \"woArBld\") = \"131\" ]]\n    [[ $(candidate \"aAaaaXa\") = \"153\" ]]\n  \
    \  [[ $(candidate \" How are yOu?\") = \"151\" ]]\n    [[ $(candidate \"You arE\
    \ Very Smart\") = \"327\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660003061
- exit_code: 0
  program: "#!/bin/bash\n# Task\n# Write a function that takes a string as input and\
    \ returns the sum of the upper characters only'\n# ASCII codes.\n# Examples:\n\
    #\n# $1 is a string\ndigitSum() {\n    local sum=0\n    for (( i=0; i<${#1}; i++\
    \ )); do\n        local char=${1:i:1}\n        local code=$(printf \"%d\" \"'$char\"\
    )\n        if [[ $code -ge 65 && $code -le 90 ]]; then\n            ((sum+=code))\n\
    \        fi\n    done\n    echo $sum\n}\n\ncandidate() {\n    digitSum \"$@\"\n\
    }\n\nset -e\nrun_test() {\n    [[ $(candidate \"\") = \"0\" ]]\n    [[ $(candidate\
    \ \"abAB\") = \"131\" ]]\n    [[ $(candidate \"abcCd\") = \"67\" ]]\n    [[ $(candidate\
    \ \"helloE\") = \"69\" ]]\n    [[ $(candidate \"woArBld\") = \"131\" ]]\n    [[\
    \ $(candidate \"aAaaaXa\") = \"153\" ]]\n    [[ $(candidate \" How are yOu?\"\
    ) = \"151\" ]]\n    [[ $(candidate \"You arE Very Smart\") = \"327\" ]]\n}\n\n\
    run_test"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660003061
- exit_code: 0
  program: "#!/bin/bash\n# Task\n# Write a function that takes a string as input and\
    \ returns the sum of the upper characters only'\n# ASCII codes.\n# Examples:\n\
    #\n# $1 is a string\ndigitSum() {\n  local sum=0\n  for (( i=0; i<${#1}; i++ ));\
    \ do\n    local char=${1:i:1}\n    if [[ $char =~ [A-Z] ]]; then\n      sum=$((\
    \ sum + $(printf \"%d\" \"'$char\") ))\n    fi\n  done\n  echo $sum\n}\n\ncandidate()\
    \ {\n    digitSum \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"\")\
    \ = \"0\" ]]\n    [[ $(candidate \"abAB\") = \"131\" ]]\n    [[ $(candidate \"\
    abcCd\") = \"67\" ]]\n    [[ $(candidate \"helloE\") = \"69\" ]]\n    [[ $(candidate\
    \ \"woArBld\") = \"131\" ]]\n    [[ $(candidate \"aAaaaXa\") = \"153\" ]]\n  \
    \  [[ $(candidate \" How are yOu?\") = \"151\" ]]\n    [[ $(candidate \"You arE\
    \ Very Smart\") = \"327\" ]]\n}\n\nrun_test"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660003061
- exit_code: 0
  program: "#!/bin/bash\n# Task\n# Write a function that takes a string as input and\
    \ returns the sum of the upper characters only'\n# ASCII codes.\n# Examples:\n\
    #\n# $1 is a string\ndigitSum() {\n    local sum=0\n    local str=$1\n    for\
    \ (( i=0; i<${#str}; i++ )); do\n        local char=${str:$i:1}\n        local\
    \ charCode=$(printf '%d' \"'$char\")\n        if [[ $charCode -ge 65 && $charCode\
    \ -le 90 ]]; then\n            (( sum+=charCode ))\n        fi\n    done\n   \
    \ echo $sum\n}\n\ncandidate() {\n    digitSum \"$@\"\n}\n\nset -e\nrun_test()\
    \ {\n    [[ $(candidate \"\") = \"0\" ]]\n    [[ $(candidate \"abAB\") = \"131\"\
    \ ]]\n    [[ $(candidate \"abcCd\") = \"67\" ]]\n    [[ $(candidate \"helloE\"\
    ) = \"69\" ]]\n    [[ $(candidate \"woArBld\") = \"131\" ]]\n    [[ $(candidate\
    \ \"aAaaaXa\") = \"153\" ]]\n    [[ $(candidate \" How are yOu?\") = \"151\" ]]\n\
    \    [[ $(candidate \"You arE Very Smart\") = \"327\" ]]\n}\n\nrun_test"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660003061
- exit_code: 0
  program: "#!/bin/bash\n# Task\n# Write a function that takes a string as input and\
    \ returns the sum of the upper characters only'\n# ASCII codes.\n# Examples:\n\
    #\n# $1 is a string\ndigitSum() {\n    local sum=0\n    for (( i=0; i<${#1}; i++\
    \ )); do\n        local char=${1:i:1}\n        if [[ $char =~ [A-Z] ]]; then\n\
    \            sum=$(( sum + $(printf \"%d\" \"'$char\") ))\n        fi\n    done\n\
    \    echo $sum\n}\n\ncandidate() {\n    digitSum \"$@\"\n}\n\nset -e\nrun_test()\
    \ {\n    [[ $(candidate \"\") = \"0\" ]]\n    [[ $(candidate \"abAB\") = \"131\"\
    \ ]]\n    [[ $(candidate \"abcCd\") = \"67\" ]]\n    [[ $(candidate \"helloE\"\
    ) = \"69\" ]]\n    [[ $(candidate \"woArBld\") = \"131\" ]]\n    [[ $(candidate\
    \ \"aAaaaXa\") = \"153\" ]]\n    [[ $(candidate \" How are yOu?\") = \"151\" ]]\n\
    \    [[ $(candidate \"You arE Very Smart\") = \"327\" ]]\n}\n\nrun_test"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660003061
- exit_code: 0
  program: "#!/bin/bash\n# Task\n# Write a function that takes a string as input and\
    \ returns the sum of the upper characters only'\n# ASCII codes.\n# Examples:\n\
    #\n# $1 is a string\ndigitSum() {\n  local sum=0\n  local str=$1\n  for (( i=0;\
    \ i<${#str}; i++ )); do\n    local char=${str:$i:1}\n    local ascii=$(printf\
    \ \"%d\" \"'$char\")\n    if [[ $ascii -ge 65 && $ascii -le 90 ]]; then\n    \
    \  (( sum+=$ascii ))\n    fi\n  done\n  echo $sum\n}\n\ncandidate() {\n    digitSum\
    \ \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"\") = \"0\" ]]\n   \
    \ [[ $(candidate \"abAB\") = \"131\" ]]\n    [[ $(candidate \"abcCd\") = \"67\"\
    \ ]]\n    [[ $(candidate \"helloE\") = \"69\" ]]\n    [[ $(candidate \"woArBld\"\
    ) = \"131\" ]]\n    [[ $(candidate \"aAaaaXa\") = \"153\" ]]\n    [[ $(candidate\
    \ \" How are yOu?\") = \"151\" ]]\n    [[ $(candidate \"You arE Very Smart\")\
    \ = \"327\" ]]\n}\n\nrun_test"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660003061
- exit_code: 0
  program: "#!/bin/bash\n# Task\n# Write a function that takes a string as input and\
    \ returns the sum of the upper characters only'\n# ASCII codes.\n# Examples:\n\
    #\n# $1 is a string\ndigitSum() {\n    local sum=0\n    for (( i=0; i<${#1}; i++\
    \ )); do\n        local c=${1:i:1}\n        if [[ $c =~ [A-Z] ]]; then\n     \
    \       sum=$(( sum + $(printf \"%d\" \"'$c\") ))\n        fi\n    done\n    echo\
    \ $sum\n}\n\ncandidate() {\n    digitSum \"$@\"\n}\n\nset -e\nrun_test() {\n \
    \   [[ $(candidate \"\") = \"0\" ]]\n    [[ $(candidate \"abAB\") = \"131\" ]]\n\
    \    [[ $(candidate \"abcCd\") = \"67\" ]]\n    [[ $(candidate \"helloE\") = \"\
    69\" ]]\n    [[ $(candidate \"woArBld\") = \"131\" ]]\n    [[ $(candidate \"aAaaaXa\"\
    ) = \"153\" ]]\n    [[ $(candidate \" How are yOu?\") = \"151\" ]]\n    [[ $(candidate\
    \ \"You arE Very Smart\") = \"327\" ]]\n}\n\nrun_test"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660003061
- exit_code: 0
  program: "#!/bin/bash\n# Task\n# Write a function that takes a string as input and\
    \ returns the sum of the upper characters only'\n# ASCII codes.\n# Examples:\n\
    #\n# $1 is a string\ndigitSum() {\n    local sum=0\n    local str=$1\n    for\
    \ (( i=0; i<${#str}; i++ )); do\n        local char=${str:$i:1}\n        local\
    \ ascii=$(printf \"%d\" \"'$char\")\n        if [[ $ascii -ge 65 && $ascii -le\
    \ 90 ]]; then\n            (( sum+=ascii ))\n        fi\n    done\n    echo $sum\n\
    }\n\ncandidate() {\n    digitSum \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate\
    \ \"\") = \"0\" ]]\n    [[ $(candidate \"abAB\") = \"131\" ]]\n    [[ $(candidate\
    \ \"abcCd\") = \"67\" ]]\n    [[ $(candidate \"helloE\") = \"69\" ]]\n    [[ $(candidate\
    \ \"woArBld\") = \"131\" ]]\n    [[ $(candidate \"aAaaaXa\") = \"153\" ]]\n  \
    \  [[ $(candidate \" How are yOu?\") = \"151\" ]]\n    [[ $(candidate \"You arE\
    \ Very Smart\") = \"327\" ]]\n}\n\nrun_test"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660003061
- exit_code: 0
  program: "#!/bin/bash\n# Task\n# Write a function that takes a string as input and\
    \ returns the sum of the upper characters only'\n# ASCII codes.\n# Examples:\n\
    #\n# $1 is a string\ndigitSum() {\n    local sum=0\n    local str=$1\n    for\
    \ (( i=0; i<${#str}; i++ )); do\n        local char=${str:$i:1}\n        local\
    \ ascii=$(printf \"%d\" \"'$char\")\n        if [[ $ascii -ge 65 && $ascii -le\
    \ 90 ]]; then\n            sum=$((sum + ascii))\n        fi\n    done\n    echo\
    \ $sum\n}\n\ncandidate() {\n    digitSum \"$@\"\n}\n\nset -e\nrun_test() {\n \
    \   [[ $(candidate \"\") = \"0\" ]]\n    [[ $(candidate \"abAB\") = \"131\" ]]\n\
    \    [[ $(candidate \"abcCd\") = \"67\" ]]\n    [[ $(candidate \"helloE\") = \"\
    69\" ]]\n    [[ $(candidate \"woArBld\") = \"131\" ]]\n    [[ $(candidate \"aAaaaXa\"\
    ) = \"153\" ]]\n    [[ $(candidate \" How are yOu?\") = \"151\" ]]\n    [[ $(candidate\
    \ \"You arE Very Smart\") = \"327\" ]]\n}\n\nrun_test"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660003061
- exit_code: 0
  program: "#!/bin/bash\n# Task\n# Write a function that takes a string as input and\
    \ returns the sum of the upper characters only'\n# ASCII codes.\n# Examples:\n\
    #\n# $1 is a string\ndigitSum() {\n    local sum=0\n    for (( i=0; i<${#1}; i++\
    \ )); do\n        local char=${1:i:1}\n        if [[ $char =~ [A-Z] ]]; then\n\
    \            sum=$((sum + $(printf \"%d\" \"'$char\")))\n        fi\n    done\n\
    \    echo $sum\n}\n\ncandidate() {\n    digitSum \"$@\"\n}\n\nset -e\nrun_test()\
    \ {\n    [[ $(candidate \"\") = \"0\" ]]\n    [[ $(candidate \"abAB\") = \"131\"\
    \ ]]\n    [[ $(candidate \"abcCd\") = \"67\" ]]\n    [[ $(candidate \"helloE\"\
    ) = \"69\" ]]\n    [[ $(candidate \"woArBld\") = \"131\" ]]\n    [[ $(candidate\
    \ \"aAaaaXa\") = \"153\" ]]\n    [[ $(candidate \" How are yOu?\") = \"151\" ]]\n\
    \    [[ $(candidate \"You arE Very Smart\") = \"327\" ]]\n}\n\nrun_test"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660003061
- exit_code: 0
  program: "#!/bin/bash\n# Task\n# Write a function that takes a string as input and\
    \ returns the sum of the upper characters only'\n# ASCII codes.\n# Examples:\n\
    #\n# $1 is a string\ndigitSum() {\n    local sum=0\n    for (( i=0; i<${#1}; i++\
    \ )); do\n        local char=${1:i:1}\n        local char_ascii=$(printf \"%d\"\
    \ \"'$char\")\n        if (( char_ascii >= 65 && char_ascii <= 90 )); then\n \
    \           (( sum += char_ascii ))\n        fi\n    done\n    echo $sum\n}\n\n\
    candidate() {\n    digitSum \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate\
    \ \"\") = \"0\" ]]\n    [[ $(candidate \"abAB\") = \"131\" ]]\n    [[ $(candidate\
    \ \"abcCd\") = \"67\" ]]\n    [[ $(candidate \"helloE\") = \"69\" ]]\n    [[ $(candidate\
    \ \"woArBld\") = \"131\" ]]\n    [[ $(candidate \"aAaaaXa\") = \"153\" ]]\n  \
    \  [[ $(candidate \" How are yOu?\") = \"151\" ]]\n    [[ $(candidate \"You arE\
    \ Very Smart\") = \"327\" ]]\n}\n\nrun_test"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660003061
- exit_code: 1
  program: "#!/bin/bash\n# Task\n# Write a function that takes a string as input and\
    \ returns the sum of the upper characters only'\n# ASCII codes.\n# Examples:\n\
    #\n# $1 is a string\ndigitSum() {\n  local sum=0\n  for (( i=0; i<${#1}; i++ ));\
    \ do\n    if [[ ${1:$i:1} =~ [A-Z] ]]; then\n      sum=$(( sum + ${1:$i:1} ))\n\
    \    fi\n  done\n  echo $sum\n}\n\ncandidate() {\n    digitSum \"$@\"\n}\n\nset\
    \ -e\nrun_test() {\n    [[ $(candidate \"\") = \"0\" ]]\n    [[ $(candidate \"\
    abAB\") = \"131\" ]]\n    [[ $(candidate \"abcCd\") = \"67\" ]]\n    [[ $(candidate\
    \ \"helloE\") = \"69\" ]]\n    [[ $(candidate \"woArBld\") = \"131\" ]]\n    [[\
    \ $(candidate \"aAaaaXa\") = \"153\" ]]\n    [[ $(candidate \" How are yOu?\"\
    ) = \"151\" ]]\n    [[ $(candidate \"You arE Very Smart\") = \"327\" ]]\n}\n\n\
    run_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660003061
- exit_code: 0
  program: "#!/bin/bash\n# Task\n# Write a function that takes a string as input and\
    \ returns the sum of the upper characters only'\n# ASCII codes.\n# Examples:\n\
    #\n# $1 is a string\ndigitSum() {\n    local sum=0\n    for (( i=0; i<${#1}; i++\
    \ )); do\n        local char=${1:i:1}\n        local ascii=$(printf \"%d\" \"\
    '$char\")\n        if (( ascii >= 65 && ascii <= 90 )); then\n            (( sum\
    \ += ascii ))\n        fi\n    done\n    echo $sum\n}\n\ncandidate() {\n    digitSum\
    \ \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"\") = \"0\" ]]\n   \
    \ [[ $(candidate \"abAB\") = \"131\" ]]\n    [[ $(candidate \"abcCd\") = \"67\"\
    \ ]]\n    [[ $(candidate \"helloE\") = \"69\" ]]\n    [[ $(candidate \"woArBld\"\
    ) = \"131\" ]]\n    [[ $(candidate \"aAaaaXa\") = \"153\" ]]\n    [[ $(candidate\
    \ \" How are yOu?\") = \"151\" ]]\n    [[ $(candidate \"You arE Very Smart\")\
    \ = \"327\" ]]\n}\n\nrun_test"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660003061
- exit_code: 0
  program: "#!/bin/bash\n# Task\n# Write a function that takes a string as input and\
    \ returns the sum of the upper characters only'\n# ASCII codes.\n# Examples:\n\
    #\n# $1 is a string\ndigitSum() {\n    local sum=0\n    for (( i=0; i<${#1}; i++\
    \ )); do\n        local ascii=$(printf \"%d\" \"'${1:$i:1}\")\n        if (( ascii\
    \ >= 65 && ascii <= 90 )); then\n            (( sum += ascii ))\n        fi\n\
    \    done\n    echo $sum\n}\n\ncandidate() {\n    digitSum \"$@\"\n}\n\nset -e\n\
    run_test() {\n    [[ $(candidate \"\") = \"0\" ]]\n    [[ $(candidate \"abAB\"\
    ) = \"131\" ]]\n    [[ $(candidate \"abcCd\") = \"67\" ]]\n    [[ $(candidate\
    \ \"helloE\") = \"69\" ]]\n    [[ $(candidate \"woArBld\") = \"131\" ]]\n    [[\
    \ $(candidate \"aAaaaXa\") = \"153\" ]]\n    [[ $(candidate \" How are yOu?\"\
    ) = \"151\" ]]\n    [[ $(candidate \"You arE Very Smart\") = \"327\" ]]\n}\n\n\
    run_test"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660003061
- exit_code: 1
  program: "#!/bin/bash\n# Task\n# Write a function that takes a string as input and\
    \ returns the sum of the upper characters only'\n# ASCII codes.\n# Examples:\n\
    #\n# $1 is a string\ndigitSum() {\n    local -i sum=0\n    for (( i=0; i<${#1};\
    \ i++ )); do\n        if [[ ${1:i:1} =~ [A-Z] ]]; then\n            (( sum+=${1:i:1}\
    \ ))\n        fi\n    done\n    echo $sum\n}\n\ncandidate() {\n    digitSum \"\
    $@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"\") = \"0\" ]]\n    [[ $(candidate\
    \ \"abAB\") = \"131\" ]]\n    [[ $(candidate \"abcCd\") = \"67\" ]]\n    [[ $(candidate\
    \ \"helloE\") = \"69\" ]]\n    [[ $(candidate \"woArBld\") = \"131\" ]]\n    [[\
    \ $(candidate \"aAaaaXa\") = \"153\" ]]\n    [[ $(candidate \" How are yOu?\"\
    ) = \"151\" ]]\n    [[ $(candidate \"You arE Very Smart\") = \"327\" ]]\n}\n\n\
    run_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660003061
- exit_code: 0
  program: "#!/bin/bash\n# Task\n# Write a function that takes a string as input and\
    \ returns the sum of the upper characters only'\n# ASCII codes.\n# Examples:\n\
    #\n# $1 is a string\ndigitSum() {\n    local sum=0\n    for (( i=0; i<${#1}; i++\
    \ )); do\n        local char=${1:i:1}\n        local ascii=$(printf \"%d\" \"\
    '$char\")\n        if [[ $ascii -ge 65 && $ascii -le 90 ]]; then\n           \
    \ ((sum+=ascii))\n        fi\n    done\n    echo $sum\n}\n\ncandidate() {\n  \
    \  digitSum \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"\") = \"0\"\
    \ ]]\n    [[ $(candidate \"abAB\") = \"131\" ]]\n    [[ $(candidate \"abcCd\"\
    ) = \"67\" ]]\n    [[ $(candidate \"helloE\") = \"69\" ]]\n    [[ $(candidate\
    \ \"woArBld\") = \"131\" ]]\n    [[ $(candidate \"aAaaaXa\") = \"153\" ]]\n  \
    \  [[ $(candidate \" How are yOu?\") = \"151\" ]]\n    [[ $(candidate \"You arE\
    \ Very Smart\") = \"327\" ]]\n}\n\nrun_test"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660003061
- exit_code: 0
  program: "#!/bin/bash\n# Task\n# Write a function that takes a string as input and\
    \ returns the sum of the upper characters only'\n# ASCII codes.\n# Examples:\n\
    #\n# $1 is a string\ndigitSum() {\n    local sum=0\n    for (( i=0; i<${#1}; i++\
    \ )); do\n        local char=${1:i:1}\n        if [[ $char =~ [A-Z] ]]; then\n\
    \            sum=$(( sum + $(printf \"%d\" \"'$char\") ))\n        fi\n    done\n\
    \    echo $sum\n}\n\ncandidate() {\n    digitSum \"$@\"\n}\n\nset -e\nrun_test()\
    \ {\n    [[ $(candidate \"\") = \"0\" ]]\n    [[ $(candidate \"abAB\") = \"131\"\
    \ ]]\n    [[ $(candidate \"abcCd\") = \"67\" ]]\n    [[ $(candidate \"helloE\"\
    ) = \"69\" ]]\n    [[ $(candidate \"woArBld\") = \"131\" ]]\n    [[ $(candidate\
    \ \"aAaaaXa\") = \"153\" ]]\n    [[ $(candidate \" How are yOu?\") = \"151\" ]]\n\
    \    [[ $(candidate \"You arE Very Smart\") = \"327\" ]]\n}\n\nrun_test"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660003061
- exit_code: 0
  program: "#!/bin/bash\n# Task\n# Write a function that takes a string as input and\
    \ returns the sum of the upper characters only'\n# ASCII codes.\n# Examples:\n\
    #\n# $1 is a string\ndigitSum() {\n    local sum=0\n    for (( i=0; i<${#1}; i++\
    \ )); do\n        local char=${1:i:1}\n        if [[ $char =~ [A-Z] ]]; then\n\
    \            sum=$(( sum + $(printf \"%d\" \"'$char\") ))\n        fi\n    done\n\
    \    echo $sum\n}\n\ncandidate() {\n    digitSum \"$@\"\n}\n\nset -e\nrun_test()\
    \ {\n    [[ $(candidate \"\") = \"0\" ]]\n    [[ $(candidate \"abAB\") = \"131\"\
    \ ]]\n    [[ $(candidate \"abcCd\") = \"67\" ]]\n    [[ $(candidate \"helloE\"\
    ) = \"69\" ]]\n    [[ $(candidate \"woArBld\") = \"131\" ]]\n    [[ $(candidate\
    \ \"aAaaaXa\") = \"153\" ]]\n    [[ $(candidate \" How are yOu?\") = \"151\" ]]\n\
    \    [[ $(candidate \"You arE Very Smart\") = \"327\" ]]\n}\n\nrun_test"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660003061
- exit_code: 0
  program: "#!/bin/bash\n# Task\n# Write a function that takes a string as input and\
    \ returns the sum of the upper characters only'\n# ASCII codes.\n# Examples:\n\
    #\n# $1 is a string\ndigitSum() {\n  local sum=0\n  for (( i=0; i<${#1}; i++ ));\
    \ do\n    local char=${1:i:1}\n    if [[ $char =~ [A-Z] ]]; then\n      sum=$((\
    \ sum + $(printf \"%d\" \"'$char\") ))\n    fi\n  done\n  echo $sum\n}\n\ncandidate()\
    \ {\n    digitSum \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"\")\
    \ = \"0\" ]]\n    [[ $(candidate \"abAB\") = \"131\" ]]\n    [[ $(candidate \"\
    abcCd\") = \"67\" ]]\n    [[ $(candidate \"helloE\") = \"69\" ]]\n    [[ $(candidate\
    \ \"woArBld\") = \"131\" ]]\n    [[ $(candidate \"aAaaaXa\") = \"153\" ]]\n  \
    \  [[ $(candidate \" How are yOu?\") = \"151\" ]]\n    [[ $(candidate \"You arE\
    \ Very Smart\") = \"327\" ]]\n}\n\nrun_test"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660003061
- exit_code: 0
  program: "#!/bin/bash\n# Task\n# Write a function that takes a string as input and\
    \ returns the sum of the upper characters only'\n# ASCII codes.\n# Examples:\n\
    #\n# $1 is a string\ndigitSum() {\n    local sum=0\n    for (( i=0; i<${#1}; i++\
    \ )); do\n        local char=${1:i:1}\n        local charCode=$(printf \"%d\"\
    \ \"'$char\")\n        if [[ $charCode -ge 65 && $charCode -le 90 ]]; then\n \
    \           (( sum += charCode ))\n        fi\n    done\n    echo $sum\n}\n\n\
    candidate() {\n    digitSum \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate\
    \ \"\") = \"0\" ]]\n    [[ $(candidate \"abAB\") = \"131\" ]]\n    [[ $(candidate\
    \ \"abcCd\") = \"67\" ]]\n    [[ $(candidate \"helloE\") = \"69\" ]]\n    [[ $(candidate\
    \ \"woArBld\") = \"131\" ]]\n    [[ $(candidate \"aAaaaXa\") = \"153\" ]]\n  \
    \  [[ $(candidate \" How are yOu?\") = \"151\" ]]\n    [[ $(candidate \"You arE\
    \ Very Smart\") = \"327\" ]]\n}\n\nrun_test"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660003061
- exit_code: 0
  program: "#!/bin/bash\n# Task\n# Write a function that takes a string as input and\
    \ returns the sum of the upper characters only'\n# ASCII codes.\n# Examples:\n\
    #\n# $1 is a string\ndigitSum() {\n    local sum=0\n    local str=$1\n    for\
    \ (( i=0; i<${#str}; i++ )); do\n        local char=${str:$i:1}\n        local\
    \ charCode=$(printf \"%d\" \"'$char\")\n        if [[ $charCode -ge 65 && $charCode\
    \ -le 90 ]]; then\n            (( sum+=charCode ))\n        fi\n    done\n   \
    \ echo $sum\n}\n\ncandidate() {\n    digitSum \"$@\"\n}\n\nset -e\nrun_test()\
    \ {\n    [[ $(candidate \"\") = \"0\" ]]\n    [[ $(candidate \"abAB\") = \"131\"\
    \ ]]\n    [[ $(candidate \"abcCd\") = \"67\" ]]\n    [[ $(candidate \"helloE\"\
    ) = \"69\" ]]\n    [[ $(candidate \"woArBld\") = \"131\" ]]\n    [[ $(candidate\
    \ \"aAaaaXa\") = \"153\" ]]\n    [[ $(candidate \" How are yOu?\") = \"151\" ]]\n\
    \    [[ $(candidate \"You arE Very Smart\") = \"327\" ]]\n}\n\nrun_test"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660003061
- exit_code: 0
  program: "#!/bin/bash\n# Task\n# Write a function that takes a string as input and\
    \ returns the sum of the upper characters only'\n# ASCII codes.\n# Examples:\n\
    #\n# $1 is a string\ndigitSum() {\n  local sum=0\n  local str=\"$1\"\n  local\
    \ i=0\n  local len=${#str}\n  for ((i=0; i<len; i++)); do\n    local char=${str:i:1}\n\
    \    local char_ascii=$(printf \"%d\" \"'$char\")\n    if [[ $char_ascii -ge 65\
    \ && $char_ascii -le 90 ]]; then\n      sum=$((sum + char_ascii))\n    fi\n  done\n\
    \  echo $sum\n}\n\ncandidate() {\n    digitSum \"$@\"\n}\n\nset -e\nrun_test()\
    \ {\n    [[ $(candidate \"\") = \"0\" ]]\n    [[ $(candidate \"abAB\") = \"131\"\
    \ ]]\n    [[ $(candidate \"abcCd\") = \"67\" ]]\n    [[ $(candidate \"helloE\"\
    ) = \"69\" ]]\n    [[ $(candidate \"woArBld\") = \"131\" ]]\n    [[ $(candidate\
    \ \"aAaaaXa\") = \"153\" ]]\n    [[ $(candidate \" How are yOu?\") = \"151\" ]]\n\
    \    [[ $(candidate \"You arE Very Smart\") = \"327\" ]]\n}\n\nrun_test"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660003061
- exit_code: 0
  program: "#!/bin/bash\n# Task\n# Write a function that takes a string as input and\
    \ returns the sum of the upper characters only'\n# ASCII codes.\n# Examples:\n\
    #\n# $1 is a string\ndigitSum() {\n    local sum=0\n    for (( i=0; i<${#1}; i++\
    \ )); do\n        local char=${1:i:1}\n        local ascii=$(printf \"%d\" \"\
    '$char\")\n        if (( ascii >= 65 && ascii <= 90 )); then\n            (( sum\
    \ += ascii ))\n        fi\n    done\n    echo $sum\n}\n\ncandidate() {\n    digitSum\
    \ \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"\") = \"0\" ]]\n   \
    \ [[ $(candidate \"abAB\") = \"131\" ]]\n    [[ $(candidate \"abcCd\") = \"67\"\
    \ ]]\n    [[ $(candidate \"helloE\") = \"69\" ]]\n    [[ $(candidate \"woArBld\"\
    ) = \"131\" ]]\n    [[ $(candidate \"aAaaaXa\") = \"153\" ]]\n    [[ $(candidate\
    \ \" How are yOu?\") = \"151\" ]]\n    [[ $(candidate \"You arE Very Smart\")\
    \ = \"327\" ]]\n}\n\nrun_test"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660003061
- exit_code: 0
  program: "#!/bin/bash\n# Task\n# Write a function that takes a string as input and\
    \ returns the sum of the upper characters only'\n# ASCII codes.\n# Examples:\n\
    #\n# $1 is a string\ndigitSum() {\n    local sum=0\n    local str=$1\n    for\
    \ (( i=0; i<${#str}; i++ )); do\n        local char=${str:$i:1}\n        local\
    \ char_code=$(printf \"%d\" \"'$char\")\n        if [[ $char_code -ge 65 && $char_code\
    \ -le 90 ]]; then\n            (( sum += char_code ))\n        fi\n    done\n\
    \    echo $sum\n}\n\ncandidate() {\n    digitSum \"$@\"\n}\n\nset -e\nrun_test()\
    \ {\n    [[ $(candidate \"\") = \"0\" ]]\n    [[ $(candidate \"abAB\") = \"131\"\
    \ ]]\n    [[ $(candidate \"abcCd\") = \"67\" ]]\n    [[ $(candidate \"helloE\"\
    ) = \"69\" ]]\n    [[ $(candidate \"woArBld\") = \"131\" ]]\n    [[ $(candidate\
    \ \"aAaaaXa\") = \"153\" ]]\n    [[ $(candidate \" How are yOu?\") = \"151\" ]]\n\
    \    [[ $(candidate \"You arE Very Smart\") = \"327\" ]]\n}\n\nrun_test"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660003061
- exit_code: 0
  program: "#!/bin/bash\n# Task\n# Write a function that takes a string as input and\
    \ returns the sum of the upper characters only'\n# ASCII codes.\n# Examples:\n\
    #\n# $1 is a string\ndigitSum() {\n    local sum=0\n    for (( i=0; i<${#1}; i++\
    \ )); do\n        local char=${1:i:1}\n        local ascii=$(printf \"%d\" \"\
    '$char\")\n        if (( ascii >= 65 && ascii <= 90 )); then\n            (( sum\
    \ += ascii ))\n        fi\n    done\n    echo $sum\n}\n\ncandidate() {\n    digitSum\
    \ \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"\") = \"0\" ]]\n   \
    \ [[ $(candidate \"abAB\") = \"131\" ]]\n    [[ $(candidate \"abcCd\") = \"67\"\
    \ ]]\n    [[ $(candidate \"helloE\") = \"69\" ]]\n    [[ $(candidate \"woArBld\"\
    ) = \"131\" ]]\n    [[ $(candidate \"aAaaaXa\") = \"153\" ]]\n    [[ $(candidate\
    \ \" How are yOu?\") = \"151\" ]]\n    [[ $(candidate \"You arE Very Smart\")\
    \ = \"327\" ]]\n}\n\nrun_test"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660003061
- exit_code: 0
  program: "#!/bin/bash\n# Task\n# Write a function that takes a string as input and\
    \ returns the sum of the upper characters only'\n# ASCII codes.\n# Examples:\n\
    #\n# $1 is a string\ndigitSum() {\n  local sum=0\n  for (( i=0; i<${#1}; i++ ));\
    \ do\n    local char=${1:i:1}\n    if [[ $char =~ [A-Z] ]]; then\n      sum=$((\
    \ sum + $(printf \"%d\" \"'$char\") ))\n    fi\n  done\n  echo $sum\n}\n\ncandidate()\
    \ {\n    digitSum \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"\")\
    \ = \"0\" ]]\n    [[ $(candidate \"abAB\") = \"131\" ]]\n    [[ $(candidate \"\
    abcCd\") = \"67\" ]]\n    [[ $(candidate \"helloE\") = \"69\" ]]\n    [[ $(candidate\
    \ \"woArBld\") = \"131\" ]]\n    [[ $(candidate \"aAaaaXa\") = \"153\" ]]\n  \
    \  [[ $(candidate \" How are yOu?\") = \"151\" ]]\n    [[ $(candidate \"You arE\
    \ Very Smart\") = \"327\" ]]\n}\n\nrun_test"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660003061
- exit_code: 0
  program: "#!/bin/bash\n# Task\n# Write a function that takes a string as input and\
    \ returns the sum of the upper characters only'\n# ASCII codes.\n# Examples:\n\
    #\n# $1 is a string\ndigitSum() {\n  local sum=0\n  for (( i=0; i<${#1}; i++ ));\
    \ do\n    local char=${1:i:1}\n    local charCode=$(printf \"%d\" \"'$char\")\n\
    \    if (( charCode >= 65 && charCode <= 90 )); then\n      (( sum += charCode\
    \ ))\n    fi\n  done\n  echo $sum\n}\n\ncandidate() {\n    digitSum \"$@\"\n}\n\
    \nset -e\nrun_test() {\n    [[ $(candidate \"\") = \"0\" ]]\n    [[ $(candidate\
    \ \"abAB\") = \"131\" ]]\n    [[ $(candidate \"abcCd\") = \"67\" ]]\n    [[ $(candidate\
    \ \"helloE\") = \"69\" ]]\n    [[ $(candidate \"woArBld\") = \"131\" ]]\n    [[\
    \ $(candidate \"aAaaaXa\") = \"153\" ]]\n    [[ $(candidate \" How are yOu?\"\
    ) = \"151\" ]]\n    [[ $(candidate \"You arE Very Smart\") = \"327\" ]]\n}\n\n\
    run_test"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660003061
- exit_code: 0
  program: "#!/bin/bash\n# Task\n# Write a function that takes a string as input and\
    \ returns the sum of the upper characters only'\n# ASCII codes.\n# Examples:\n\
    #\n# $1 is a string\ndigitSum() {\n  local sum=0\n  for (( i=0; i<${#1}; i++ ));\
    \ do\n    local ascii=$(printf \"%d\" \"'${1:$i:1}\")\n    if [[ $ascii -ge 65\
    \ && $ascii -le 90 ]]; then\n      (( sum+=ascii ))\n    fi\n  done\n  echo $sum\n\
    }\n\ncandidate() {\n    digitSum \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate\
    \ \"\") = \"0\" ]]\n    [[ $(candidate \"abAB\") = \"131\" ]]\n    [[ $(candidate\
    \ \"abcCd\") = \"67\" ]]\n    [[ $(candidate \"helloE\") = \"69\" ]]\n    [[ $(candidate\
    \ \"woArBld\") = \"131\" ]]\n    [[ $(candidate \"aAaaaXa\") = \"153\" ]]\n  \
    \  [[ $(candidate \" How are yOu?\") = \"151\" ]]\n    [[ $(candidate \"You arE\
    \ Very Smart\") = \"327\" ]]\n}\n\nrun_test"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660003061
- exit_code: 1
  program: "#!/bin/bash\n# Task\n# Write a function that takes a string as input and\
    \ returns the sum of the upper characters only'\n# ASCII codes.\n# Examples:\n\
    #\n# $1 is a string\ndigitSum() {\n    local sum=0\n    for (( i=0; i<${#1}; i++\
    \ )); do\n        local char=${1:i:1}\n        if [[ $char =~ [A-Z] ]]; then\n\
    \            sum=$((sum+${char}))\n        fi\n    done\n    echo $sum\n}\n\n\
    candidate() {\n    digitSum \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate\
    \ \"\") = \"0\" ]]\n    [[ $(candidate \"abAB\") = \"131\" ]]\n    [[ $(candidate\
    \ \"abcCd\") = \"67\" ]]\n    [[ $(candidate \"helloE\") = \"69\" ]]\n    [[ $(candidate\
    \ \"woArBld\") = \"131\" ]]\n    [[ $(candidate \"aAaaaXa\") = \"153\" ]]\n  \
    \  [[ $(candidate \" How are yOu?\") = \"151\" ]]\n    [[ $(candidate \"You arE\
    \ Very Smart\") = \"327\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660003061
- exit_code: 0
  program: "#!/bin/bash\n# Task\n# Write a function that takes a string as input and\
    \ returns the sum of the upper characters only'\n# ASCII codes.\n# Examples:\n\
    #\n# $1 is a string\ndigitSum() {\n    local sum=0\n    for (( i=0; i<${#1}; i++\
    \ )); do\n        local char=${1:i:1}\n        if [[ $char =~ [A-Z] ]]; then\n\
    \            sum=$((sum + $(printf \"%d\" \"'$char\")))\n        fi\n    done\n\
    \    echo $sum\n}\n\ncandidate() {\n    digitSum \"$@\"\n}\n\nset -e\nrun_test()\
    \ {\n    [[ $(candidate \"\") = \"0\" ]]\n    [[ $(candidate \"abAB\") = \"131\"\
    \ ]]\n    [[ $(candidate \"abcCd\") = \"67\" ]]\n    [[ $(candidate \"helloE\"\
    ) = \"69\" ]]\n    [[ $(candidate \"woArBld\") = \"131\" ]]\n    [[ $(candidate\
    \ \"aAaaaXa\") = \"153\" ]]\n    [[ $(candidate \" How are yOu?\") = \"151\" ]]\n\
    \    [[ $(candidate \"You arE Very Smart\") = \"327\" ]]\n}\n\nrun_test"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660003061
- exit_code: 0
  program: "#!/bin/bash\n# Task\n# Write a function that takes a string as input and\
    \ returns the sum of the upper characters only'\n# ASCII codes.\n# Examples:\n\
    #\n# $1 is a string\ndigitSum() {\n    local sum=0\n    for (( i=0; i<${#1}; i++\
    \ )); do\n        local char=${1:i:1}\n        if [[ $char =~ [A-Z] ]]; then\n\
    \            (( sum += $(printf \"%d\" \"'$char\") ))\n        fi\n    done\n\
    \    echo $sum\n}\n\ncandidate() {\n    digitSum \"$@\"\n}\n\nset -e\nrun_test()\
    \ {\n    [[ $(candidate \"\") = \"0\" ]]\n    [[ $(candidate \"abAB\") = \"131\"\
    \ ]]\n    [[ $(candidate \"abcCd\") = \"67\" ]]\n    [[ $(candidate \"helloE\"\
    ) = \"69\" ]]\n    [[ $(candidate \"woArBld\") = \"131\" ]]\n    [[ $(candidate\
    \ \"aAaaaXa\") = \"153\" ]]\n    [[ $(candidate \" How are yOu?\") = \"151\" ]]\n\
    \    [[ $(candidate \"You arE Very Smart\") = \"327\" ]]\n}\n\nrun_test"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660003061
- exit_code: 0
  program: "#!/bin/bash\n# Task\n# Write a function that takes a string as input and\
    \ returns the sum of the upper characters only'\n# ASCII codes.\n# Examples:\n\
    #\n# $1 is a string\ndigitSum() {\n    local str=$1\n    local sum=0\n    for\
    \ (( i=0; i<${#str}; i++ )); do\n        local char=${str:$i:1}\n        if [[\
    \ $char =~ [A-Z] ]]; then\n            sum=$((sum+$(printf \"%d\" \"'$char\")))\n\
    \        fi\n    done\n    echo $sum\n}\n\ncandidate() {\n    digitSum \"$@\"\n\
    }\n\nset -e\nrun_test() {\n    [[ $(candidate \"\") = \"0\" ]]\n    [[ $(candidate\
    \ \"abAB\") = \"131\" ]]\n    [[ $(candidate \"abcCd\") = \"67\" ]]\n    [[ $(candidate\
    \ \"helloE\") = \"69\" ]]\n    [[ $(candidate \"woArBld\") = \"131\" ]]\n    [[\
    \ $(candidate \"aAaaaXa\") = \"153\" ]]\n    [[ $(candidate \" How are yOu?\"\
    ) = \"151\" ]]\n    [[ $(candidate \"You arE Very Smart\") = \"327\" ]]\n}\n\n\
    run_test"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660003061
- exit_code: 0
  program: "#!/bin/bash\n# Task\n# Write a function that takes a string as input and\
    \ returns the sum of the upper characters only'\n# ASCII codes.\n# Examples:\n\
    #\n# $1 is a string\ndigitSum() {\n    local sum=0\n    for (( i=0; i<${#1}; i++\
    \ )); do\n        local char=${1:i:1}\n        if [[ $char =~ [A-Z] ]]; then\n\
    \            sum=$(( sum + $(printf \"%d\" \"'$char\") ))\n        fi\n    done\n\
    \    echo $sum\n}\n\ncandidate() {\n    digitSum \"$@\"\n}\n\nset -e\nrun_test()\
    \ {\n    [[ $(candidate \"\") = \"0\" ]]\n    [[ $(candidate \"abAB\") = \"131\"\
    \ ]]\n    [[ $(candidate \"abcCd\") = \"67\" ]]\n    [[ $(candidate \"helloE\"\
    ) = \"69\" ]]\n    [[ $(candidate \"woArBld\") = \"131\" ]]\n    [[ $(candidate\
    \ \"aAaaaXa\") = \"153\" ]]\n    [[ $(candidate \" How are yOu?\") = \"151\" ]]\n\
    \    [[ $(candidate \"You arE Very Smart\") = \"327\" ]]\n}\n\nrun_test"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660003061
- exit_code: 1
  program: "#!/bin/bash\n# Task\n# Write a function that takes a string as input and\
    \ returns the sum of the upper characters only'\n# ASCII codes.\n# Examples:\n\
    #\n# $1 is a string\ndigitSum() {\n    local sum=0\n    for (( i=0; i<${#1}; i++\
    \ )); do\n        local char=${1:i:1}\n        if [[ $char =~ [A-Z] ]]; then\n\
    \            sum=$((sum+${char//[!0-9]/}))\n        fi\n    done\n    echo $sum\n\
    }\n\ncandidate() {\n    digitSum \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate\
    \ \"\") = \"0\" ]]\n    [[ $(candidate \"abAB\") = \"131\" ]]\n    [[ $(candidate\
    \ \"abcCd\") = \"67\" ]]\n    [[ $(candidate \"helloE\") = \"69\" ]]\n    [[ $(candidate\
    \ \"woArBld\") = \"131\" ]]\n    [[ $(candidate \"aAaaaXa\") = \"153\" ]]\n  \
    \  [[ $(candidate \" How are yOu?\") = \"151\" ]]\n    [[ $(candidate \"You arE\
    \ Very Smart\") = \"327\" ]]\n}\n\nrun_test"
  status: SyntaxError
  stderr: '/tmp/tmp0ae4t9sb.sh: line 13: sum+: syntax error: operand expected (error
    token is "+")

    '
  stdout: ''
  timestamp: 1660003061
- exit_code: 1
  program: "#!/bin/bash\n# Task\n# Write a function that takes a string as input and\
    \ returns the sum of the upper characters only'\n# ASCII codes.\n# Examples:\n\
    #\n# $1 is a string\ndigitSum() {\n    local -i sum=0\n    for (( i=0; i<${#1};\
    \ i++ )); do\n        if [[ ${1:i:1} =~ [A-Z] ]]; then\n            (( sum +=\
    \ ${1:i:1} ))\n        fi\n    done\n    echo $sum\n}\n\ncandidate() {\n    digitSum\
    \ \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"\") = \"0\" ]]\n   \
    \ [[ $(candidate \"abAB\") = \"131\" ]]\n    [[ $(candidate \"abcCd\") = \"67\"\
    \ ]]\n    [[ $(candidate \"helloE\") = \"69\" ]]\n    [[ $(candidate \"woArBld\"\
    ) = \"131\" ]]\n    [[ $(candidate \"aAaaaXa\") = \"153\" ]]\n    [[ $(candidate\
    \ \" How are yOu?\") = \"151\" ]]\n    [[ $(candidate \"You arE Very Smart\")\
    \ = \"327\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660003061
- exit_code: 0
  program: "#!/bin/bash\n# Task\n# Write a function that takes a string as input and\
    \ returns the sum of the upper characters only'\n# ASCII codes.\n# Examples:\n\
    #\n# $1 is a string\ndigitSum() {\n    local sum=0\n    for (( i=0; i<${#1}; i++\
    \ )); do\n        local char=${1:i:1}\n        if [[ $char =~ [A-Z] ]]; then\n\
    \            sum=$(( sum + $(printf \"%d\" \"'$char\") ))\n        fi\n    done\n\
    \    echo $sum\n}\n\ncandidate() {\n    digitSum \"$@\"\n}\n\nset -e\nrun_test()\
    \ {\n    [[ $(candidate \"\") = \"0\" ]]\n    [[ $(candidate \"abAB\") = \"131\"\
    \ ]]\n    [[ $(candidate \"abcCd\") = \"67\" ]]\n    [[ $(candidate \"helloE\"\
    ) = \"69\" ]]\n    [[ $(candidate \"woArBld\") = \"131\" ]]\n    [[ $(candidate\
    \ \"aAaaaXa\") = \"153\" ]]\n    [[ $(candidate \" How are yOu?\") = \"151\" ]]\n\
    \    [[ $(candidate \"You arE Very Smart\") = \"327\" ]]\n}\n\nrun_test"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660003061
- exit_code: 1
  program: "#!/bin/bash\n# Task\n# Write a function that takes a string as input and\
    \ returns the sum of the upper characters only'\n# ASCII codes.\n# Examples:\n\
    #\n# $1 is a string\ndigitSum() {\n    local sum=0\n    for (( i=0; i<${#1}; i++\
    \ )); do\n        local char=${1:i:1}\n        if [[ $char =~ [A-Z] ]]; then\n\
    \            sum=$((sum+${char//[!0-9]/}))\n        fi\n    done\n    echo $sum\n\
    }\n\ncandidate() {\n    digitSum \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate\
    \ \"\") = \"0\" ]]\n    [[ $(candidate \"abAB\") = \"131\" ]]\n    [[ $(candidate\
    \ \"abcCd\") = \"67\" ]]\n    [[ $(candidate \"helloE\") = \"69\" ]]\n    [[ $(candidate\
    \ \"woArBld\") = \"131\" ]]\n    [[ $(candidate \"aAaaaXa\") = \"153\" ]]\n  \
    \  [[ $(candidate \" How are yOu?\") = \"151\" ]]\n    [[ $(candidate \"You arE\
    \ Very Smart\") = \"327\" ]]\n}\n\nrun_test"
  status: SyntaxError
  stderr: '/tmp/tmp0ae4t9sb.sh: line 13: sum+: syntax error: operand expected (error
    token is "+")

    '
  stdout: ''
  timestamp: 1660003061
- exit_code: 1
  program: "#!/bin/bash\n# Task\n# Write a function that takes a string as input and\
    \ returns the sum of the upper characters only'\n# ASCII codes.\n# Examples:\n\
    #\n# $1 is a string\ndigitSum() {\n    local sum=0\n    for (( i=0; i<${#1}; i++\
    \ )); do\n        local char=${1:i:1}\n        if [[ $char =~ [A-Z] ]]; then\n\
    \            sum=$((sum+${char}))\n        fi\n    done\n    echo $sum\n}\n\n\
    candidate() {\n    digitSum \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate\
    \ \"\") = \"0\" ]]\n    [[ $(candidate \"abAB\") = \"131\" ]]\n    [[ $(candidate\
    \ \"abcCd\") = \"67\" ]]\n    [[ $(candidate \"helloE\") = \"69\" ]]\n    [[ $(candidate\
    \ \"woArBld\") = \"131\" ]]\n    [[ $(candidate \"aAaaaXa\") = \"153\" ]]\n  \
    \  [[ $(candidate \" How are yOu?\") = \"151\" ]]\n    [[ $(candidate \"You arE\
    \ Very Smart\") = \"327\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660003061
- exit_code: 0
  program: "#!/bin/bash\n# Task\n# Write a function that takes a string as input and\
    \ returns the sum of the upper characters only'\n# ASCII codes.\n# Examples:\n\
    #\n# $1 is a string\ndigitSum() {\n    local sum=0\n    for (( i=0; i<${#1}; i++\
    \ )); do\n        local ascii=$(printf \"%d\" \"'${1:$i:1}\")\n        if (( ascii\
    \ >= 65 && ascii <= 90 )); then\n            (( sum += ascii ))\n        fi\n\
    \    done\n    echo $sum\n}\n\ncandidate() {\n    digitSum \"$@\"\n}\n\nset -e\n\
    run_test() {\n    [[ $(candidate \"\") = \"0\" ]]\n    [[ $(candidate \"abAB\"\
    ) = \"131\" ]]\n    [[ $(candidate \"abcCd\") = \"67\" ]]\n    [[ $(candidate\
    \ \"helloE\") = \"69\" ]]\n    [[ $(candidate \"woArBld\") = \"131\" ]]\n    [[\
    \ $(candidate \"aAaaaXa\") = \"153\" ]]\n    [[ $(candidate \" How are yOu?\"\
    ) = \"151\" ]]\n    [[ $(candidate \"You arE Very Smart\") = \"327\" ]]\n}\n\n\
    run_test"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660003061
- exit_code: 0
  program: "#!/bin/bash\n# Task\n# Write a function that takes a string as input and\
    \ returns the sum of the upper characters only'\n# ASCII codes.\n# Examples:\n\
    #\n# $1 is a string\ndigitSum() {\n    local sum=0\n    for (( i=0; i<${#1}; i++\
    \ )); do\n        local char=${1:i:1}\n        if [[ $char =~ [A-Z] ]]; then\n\
    \            sum=$(( sum + $(printf \"%d\" \"'$char\") ))\n        fi\n    done\n\
    \    echo $sum\n}\n\ncandidate() {\n    digitSum \"$@\"\n}\n\nset -e\nrun_test()\
    \ {\n    [[ $(candidate \"\") = \"0\" ]]\n    [[ $(candidate \"abAB\") = \"131\"\
    \ ]]\n    [[ $(candidate \"abcCd\") = \"67\" ]]\n    [[ $(candidate \"helloE\"\
    ) = \"69\" ]]\n    [[ $(candidate \"woArBld\") = \"131\" ]]\n    [[ $(candidate\
    \ \"aAaaaXa\") = \"153\" ]]\n    [[ $(candidate \" How are yOu?\") = \"151\" ]]\n\
    \    [[ $(candidate \"You arE Very Smart\") = \"327\" ]]\n}\n\nrun_test"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660003061
- exit_code: 1
  program: "#!/bin/bash\n# Task\n# Write a function that takes a string as input and\
    \ returns the sum of the upper characters only'\n# ASCII codes.\n# Examples:\n\
    #\n# $1 is a string\ndigitSum() {\n    local -i sum=0\n    for (( i=0; i<${#1};\
    \ i++ )); do\n        (( ${1:i:1} >= 65 && ${1:i:1} <= 90 )) && (( sum += ${1:i:1}\
    \ ))\n    done\n    echo $sum\n}\n\ncandidate() {\n    digitSum \"$@\"\n}\n\n\
    set -e\nrun_test() {\n    [[ $(candidate \"\") = \"0\" ]]\n    [[ $(candidate\
    \ \"abAB\") = \"131\" ]]\n    [[ $(candidate \"abcCd\") = \"67\" ]]\n    [[ $(candidate\
    \ \"helloE\") = \"69\" ]]\n    [[ $(candidate \"woArBld\") = \"131\" ]]\n    [[\
    \ $(candidate \"aAaaaXa\") = \"153\" ]]\n    [[ $(candidate \" How are yOu?\"\
    ) = \"151\" ]]\n    [[ $(candidate \"You arE Very Smart\") = \"327\" ]]\n}\n\n\
    run_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660003061
- exit_code: 1
  program: "#!/bin/bash\n# Task\n# Write a function that takes a string as input and\
    \ returns the sum of the upper characters only'\n# ASCII codes.\n# Examples:\n\
    #\n# $1 is a string\ndigitSum() {\n    local sum=0\n    for (( i=0; i<${#1}; i++\
    \ )); do\n        (( ${1:$i:1} >= 65 && ${1:$i:1} <= 90 )) && (( sum+=$(printf\
    \ \"%d\" \"'${1:$i:1}\") ))\n    done\n    echo $sum\n}\n\ncandidate() {\n   \
    \ digitSum \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"\") = \"0\"\
    \ ]]\n    [[ $(candidate \"abAB\") = \"131\" ]]\n    [[ $(candidate \"abcCd\"\
    ) = \"67\" ]]\n    [[ $(candidate \"helloE\") = \"69\" ]]\n    [[ $(candidate\
    \ \"woArBld\") = \"131\" ]]\n    [[ $(candidate \"aAaaaXa\") = \"153\" ]]\n  \
    \  [[ $(candidate \" How are yOu?\") = \"151\" ]]\n    [[ $(candidate \"You arE\
    \ Very Smart\") = \"327\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660003061
- exit_code: 0
  program: "#!/bin/bash\n# Task\n# Write a function that takes a string as input and\
    \ returns the sum of the upper characters only'\n# ASCII codes.\n# Examples:\n\
    #\n# $1 is a string\ndigitSum() {\n    local sum=0\n    for (( i=0; i<${#1}; i++\
    \ )); do\n        local ascii=$(printf \"%d\" \"'${1:$i:1}\")\n        if (( ascii\
    \ >= 65 && ascii <= 90 )); then\n            (( sum += ascii ))\n        fi\n\
    \    done\n    echo $sum\n}\n\ncandidate() {\n    digitSum \"$@\"\n}\n\nset -e\n\
    run_test() {\n    [[ $(candidate \"\") = \"0\" ]]\n    [[ $(candidate \"abAB\"\
    ) = \"131\" ]]\n    [[ $(candidate \"abcCd\") = \"67\" ]]\n    [[ $(candidate\
    \ \"helloE\") = \"69\" ]]\n    [[ $(candidate \"woArBld\") = \"131\" ]]\n    [[\
    \ $(candidate \"aAaaaXa\") = \"153\" ]]\n    [[ $(candidate \" How are yOu?\"\
    ) = \"151\" ]]\n    [[ $(candidate \"You arE Very Smart\") = \"327\" ]]\n}\n\n\
    run_test"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660003061
- exit_code: 0
  program: "#!/bin/bash\n# Task\n# Write a function that takes a string as input and\
    \ returns the sum of the upper characters only'\n# ASCII codes.\n# Examples:\n\
    #\n# $1 is a string\ndigitSum() {\n  local sum=0\n  local str=\"$1\"\n  for ((\
    \ i=0; i<${#str}; i++ )); do\n    local char=${str:$i:1}\n    if [[ \"$char\"\
    \ =~ [A-Z] ]]; then\n      sum=$((sum + $(printf \"%d\" \"'$char\")))\n    fi\n\
    \  done\n  echo $sum\n}\n\ncandidate() {\n    digitSum \"$@\"\n}\n\nset -e\nrun_test()\
    \ {\n    [[ $(candidate \"\") = \"0\" ]]\n    [[ $(candidate \"abAB\") = \"131\"\
    \ ]]\n    [[ $(candidate \"abcCd\") = \"67\" ]]\n    [[ $(candidate \"helloE\"\
    ) = \"69\" ]]\n    [[ $(candidate \"woArBld\") = \"131\" ]]\n    [[ $(candidate\
    \ \"aAaaaXa\") = \"153\" ]]\n    [[ $(candidate \" How are yOu?\") = \"151\" ]]\n\
    \    [[ $(candidate \"You arE Very Smart\") = \"327\" ]]\n}\n\nrun_test"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660003061
- exit_code: 1
  program: "#!/bin/bash\n# Task\n# Write a function that takes a string as input and\
    \ returns the sum of the upper characters only'\n# ASCII codes.\n# Examples:\n\
    #\n# $1 is a string\ndigitSum() {\n    # Write your code here\n    sum=0\n   \
    \ for (( i=0; i<${#1}; i++ )); do\n        if [[ ${1:$i:1} =~ [A-Z] ]]; then\n\
    \            sum=$((sum+${1:$i:1}))\n        fi\n    done\n    echo $sum\n}\n\n\
    candidate() {\n    digitSum \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate\
    \ \"\") = \"0\" ]]\n    [[ $(candidate \"abAB\") = \"131\" ]]\n    [[ $(candidate\
    \ \"abcCd\") = \"67\" ]]\n    [[ $(candidate \"helloE\") = \"69\" ]]\n    [[ $(candidate\
    \ \"woArBld\") = \"131\" ]]\n    [[ $(candidate \"aAaaaXa\") = \"153\" ]]\n  \
    \  [[ $(candidate \" How are yOu?\") = \"151\" ]]\n    [[ $(candidate \"You arE\
    \ Very Smart\") = \"327\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660003061
- exit_code: 1
  program: "#!/bin/bash\n# Task\n# Write a function that takes a string as input and\
    \ returns the sum of the upper characters only'\n# ASCII codes.\n# Examples:\n\
    #\n# $1 is a string\ndigitSum() {\n    local sum=0\n    for (( i=0; i<${#1}; i++\
    \ )); do\n        local char=${1:i:1}\n        if [[ $char =~ [A-Z] ]]; then\n\
    \            sum=$((sum+${char}))\n        fi\n    done\n    echo $sum\n}\n\n\
    candidate() {\n    digitSum \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate\
    \ \"\") = \"0\" ]]\n    [[ $(candidate \"abAB\") = \"131\" ]]\n    [[ $(candidate\
    \ \"abcCd\") = \"67\" ]]\n    [[ $(candidate \"helloE\") = \"69\" ]]\n    [[ $(candidate\
    \ \"woArBld\") = \"131\" ]]\n    [[ $(candidate \"aAaaaXa\") = \"153\" ]]\n  \
    \  [[ $(candidate \" How are yOu?\") = \"151\" ]]\n    [[ $(candidate \"You arE\
    \ Very Smart\") = \"327\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660003061
- exit_code: 1
  program: "#!/bin/bash\n# Task\n# Write a function that takes a string as input and\
    \ returns the sum of the upper characters only'\n# ASCII codes.\n# Examples:\n\
    #\n# $1 is a string\ndigitSum() {\n    local sum=0\n    for (( i=0; i<${#1}; i++\
    \ )); do\n        local char=${1:i:1}\n        if [[ $char =~ [A-Z] ]]; then\n\
    \            sum=$((sum+${char}))\n        fi\n    done\n    echo $sum\n}\n\n\
    candidate() {\n    digitSum \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate\
    \ \"\") = \"0\" ]]\n    [[ $(candidate \"abAB\") = \"131\" ]]\n    [[ $(candidate\
    \ \"abcCd\") = \"67\" ]]\n    [[ $(candidate \"helloE\") = \"69\" ]]\n    [[ $(candidate\
    \ \"woArBld\") = \"131\" ]]\n    [[ $(candidate \"aAaaaXa\") = \"153\" ]]\n  \
    \  [[ $(candidate \" How are yOu?\") = \"151\" ]]\n    [[ $(candidate \"You arE\
    \ Very Smart\") = \"327\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660003061
- exit_code: 0
  program: "#!/bin/bash\n# Task\n# Write a function that takes a string as input and\
    \ returns the sum of the upper characters only'\n# ASCII codes.\n# Examples:\n\
    #\n# $1 is a string\ndigitSum() {\n  local sum=0\n  for (( i=0; i<${#1}; i++ ));\
    \ do\n    local char=${1:i:1}\n    if [[ $char =~ [A-Z] ]]; then\n      sum=$((\
    \ sum + $(printf \"%d\" \"'$char\") ))\n    fi\n  done\n  echo $sum\n}\n\ncandidate()\
    \ {\n    digitSum \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"\")\
    \ = \"0\" ]]\n    [[ $(candidate \"abAB\") = \"131\" ]]\n    [[ $(candidate \"\
    abcCd\") = \"67\" ]]\n    [[ $(candidate \"helloE\") = \"69\" ]]\n    [[ $(candidate\
    \ \"woArBld\") = \"131\" ]]\n    [[ $(candidate \"aAaaaXa\") = \"153\" ]]\n  \
    \  [[ $(candidate \" How are yOu?\") = \"151\" ]]\n    [[ $(candidate \"You arE\
    \ Very Smart\") = \"327\" ]]\n}\n\nrun_test"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660003061
- exit_code: 0
  program: "#!/bin/bash\n# Task\n# Write a function that takes a string as input and\
    \ returns the sum of the upper characters only'\n# ASCII codes.\n# Examples:\n\
    #\n# $1 is a string\ndigitSum() {\n  local sum=0\n  for (( i=0; i<${#1}; i++ ));\
    \ do\n    local char=${1:i:1}\n    if [[ $char =~ [A-Z] ]]; then\n      sum=$((\
    \ sum + $(printf \"%d\" \"'$char\") ))\n    fi\n  done\n  echo $sum\n}\n\ncandidate()\
    \ {\n    digitSum \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"\")\
    \ = \"0\" ]]\n    [[ $(candidate \"abAB\") = \"131\" ]]\n    [[ $(candidate \"\
    abcCd\") = \"67\" ]]\n    [[ $(candidate \"helloE\") = \"69\" ]]\n    [[ $(candidate\
    \ \"woArBld\") = \"131\" ]]\n    [[ $(candidate \"aAaaaXa\") = \"153\" ]]\n  \
    \  [[ $(candidate \" How are yOu?\") = \"151\" ]]\n    [[ $(candidate \"You arE\
    \ Very Smart\") = \"327\" ]]\n}\n\nrun_test"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660003061
- exit_code: 0
  program: "#!/bin/bash\n# Task\n# Write a function that takes a string as input and\
    \ returns the sum of the upper characters only'\n# ASCII codes.\n# Examples:\n\
    #\n# $1 is a string\ndigitSum() {\n  local sum=0\n  for (( i=0; i<${#1}; i++ ));\
    \ do\n    local ascii=$(printf \"%d\" \"'${1:$i:1}\")\n    if (( ascii >= 65 &&\
    \ ascii <= 90 )); then\n      (( sum += ascii ))\n    fi\n  done\n  echo $sum\n\
    }\n\ncandidate() {\n    digitSum \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate\
    \ \"\") = \"0\" ]]\n    [[ $(candidate \"abAB\") = \"131\" ]]\n    [[ $(candidate\
    \ \"abcCd\") = \"67\" ]]\n    [[ $(candidate \"helloE\") = \"69\" ]]\n    [[ $(candidate\
    \ \"woArBld\") = \"131\" ]]\n    [[ $(candidate \"aAaaaXa\") = \"153\" ]]\n  \
    \  [[ $(candidate \" How are yOu?\") = \"151\" ]]\n    [[ $(candidate \"You arE\
    \ Very Smart\") = \"327\" ]]\n}\n\nrun_test"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660003061
- exit_code: 1
  program: "#!/bin/bash\n# Task\n# Write a function that takes a string as input and\
    \ returns the sum of the upper characters only'\n# ASCII codes.\n# Examples:\n\
    #\n# $1 is a string\ndigitSum() {\n    local sum=0\n    for (( i=0; i<${#1}; i++\
    \ )); do\n        local char=${1:i:1}\n        if [[ $char =~ [A-Z] ]]; then\n\
    \            sum=$((sum+${char}))\n        fi\n    done\n    echo $sum\n}\n\n\
    candidate() {\n    digitSum \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate\
    \ \"\") = \"0\" ]]\n    [[ $(candidate \"abAB\") = \"131\" ]]\n    [[ $(candidate\
    \ \"abcCd\") = \"67\" ]]\n    [[ $(candidate \"helloE\") = \"69\" ]]\n    [[ $(candidate\
    \ \"woArBld\") = \"131\" ]]\n    [[ $(candidate \"aAaaaXa\") = \"153\" ]]\n  \
    \  [[ $(candidate \" How are yOu?\") = \"151\" ]]\n    [[ $(candidate \"You arE\
    \ Very Smart\") = \"327\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660003061
- exit_code: 0
  program: "#!/bin/bash\n# Task\n# Write a function that takes a string as input and\
    \ returns the sum of the upper characters only'\n# ASCII codes.\n# Examples:\n\
    #\n# $1 is a string\ndigitSum() {\n    local sum=0\n    for (( i=0; i<${#1}; i++\
    \ )); do\n        local char=${1:i:1}\n        if [[ $char =~ [A-Z] ]]; then\n\
    \            sum=$((sum + $(printf \"%d\" \"'$char\")))\n        fi\n    done\n\
    \    echo $sum\n}\n\ncandidate() {\n    digitSum \"$@\"\n}\n\nset -e\nrun_test()\
    \ {\n    [[ $(candidate \"\") = \"0\" ]]\n    [[ $(candidate \"abAB\") = \"131\"\
    \ ]]\n    [[ $(candidate \"abcCd\") = \"67\" ]]\n    [[ $(candidate \"helloE\"\
    ) = \"69\" ]]\n    [[ $(candidate \"woArBld\") = \"131\" ]]\n    [[ $(candidate\
    \ \"aAaaaXa\") = \"153\" ]]\n    [[ $(candidate \" How are yOu?\") = \"151\" ]]\n\
    \    [[ $(candidate \"You arE Very Smart\") = \"327\" ]]\n}\n\nrun_test"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660003061
- exit_code: 0
  program: "#!/bin/bash\n# Task\n# Write a function that takes a string as input and\
    \ returns the sum of the upper characters only'\n# ASCII codes.\n# Examples:\n\
    #\n# $1 is a string\ndigitSum() {\n    local sum=0\n    for (( i=0; i<${#1}; i++\
    \ )); do\n        local ascii=$(printf \"%d\" \"'${1:$i:1}\")\n        if (( ascii\
    \ >= 65 && ascii <= 90 )); then\n            (( sum += ascii ))\n        fi\n\
    \    done\n    echo $sum\n}\n\ncandidate() {\n    digitSum \"$@\"\n}\n\nset -e\n\
    run_test() {\n    [[ $(candidate \"\") = \"0\" ]]\n    [[ $(candidate \"abAB\"\
    ) = \"131\" ]]\n    [[ $(candidate \"abcCd\") = \"67\" ]]\n    [[ $(candidate\
    \ \"helloE\") = \"69\" ]]\n    [[ $(candidate \"woArBld\") = \"131\" ]]\n    [[\
    \ $(candidate \"aAaaaXa\") = \"153\" ]]\n    [[ $(candidate \" How are yOu?\"\
    ) = \"151\" ]]\n    [[ $(candidate \"You arE Very Smart\") = \"327\" ]]\n}\n\n\
    run_test"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660003061
- exit_code: 1
  program: "#!/bin/bash\n# Task\n# Write a function that takes a string as input and\
    \ returns the sum of the upper characters only'\n# ASCII codes.\n# Examples:\n\
    #\n# $1 is a string\ndigitSum() {\n  local sum=0\n  for (( i=0; i<${#1}; i++ ));\
    \ do\n    local char=${1:i:1}\n    if [[ $char =~ [A-Z] ]]; then\n      (( sum+=${char}\
    \ ))\n    fi\n  done\n  echo $sum\n}\n\ncandidate() {\n    digitSum \"$@\"\n}\n\
    \nset -e\nrun_test() {\n    [[ $(candidate \"\") = \"0\" ]]\n    [[ $(candidate\
    \ \"abAB\") = \"131\" ]]\n    [[ $(candidate \"abcCd\") = \"67\" ]]\n    [[ $(candidate\
    \ \"helloE\") = \"69\" ]]\n    [[ $(candidate \"woArBld\") = \"131\" ]]\n    [[\
    \ $(candidate \"aAaaaXa\") = \"153\" ]]\n    [[ $(candidate \" How are yOu?\"\
    ) = \"151\" ]]\n    [[ $(candidate \"You arE Very Smart\") = \"327\" ]]\n}\n\n\
    run_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660003061
- exit_code: 0
  program: "#!/bin/bash\n# Task\n# Write a function that takes a string as input and\
    \ returns the sum of the upper characters only'\n# ASCII codes.\n# Examples:\n\
    #\n# $1 is a string\ndigitSum() {\n    local sum=0\n    for (( i=0; i<${#1}; i++\
    \ )); do\n        local ascii=$(printf \"%d\" \"'${1:$i:1}\")\n        if [[ $ascii\
    \ -ge 65 && $ascii -le 90 ]]; then\n            (( sum += ascii ))\n        fi\n\
    \    done\n    echo $sum\n}\n\ncandidate() {\n    digitSum \"$@\"\n}\n\nset -e\n\
    run_test() {\n    [[ $(candidate \"\") = \"0\" ]]\n    [[ $(candidate \"abAB\"\
    ) = \"131\" ]]\n    [[ $(candidate \"abcCd\") = \"67\" ]]\n    [[ $(candidate\
    \ \"helloE\") = \"69\" ]]\n    [[ $(candidate \"woArBld\") = \"131\" ]]\n    [[\
    \ $(candidate \"aAaaaXa\") = \"153\" ]]\n    [[ $(candidate \" How are yOu?\"\
    ) = \"151\" ]]\n    [[ $(candidate \"You arE Very Smart\") = \"327\" ]]\n}\n\n\
    run_test"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660003061
- exit_code: 0
  program: "#!/bin/bash\n# Task\n# Write a function that takes a string as input and\
    \ returns the sum of the upper characters only'\n# ASCII codes.\n# Examples:\n\
    #\n# $1 is a string\ndigitSum() {\n  local sum=0\n  for (( i=0; i<${#1}; i++ ));\
    \ do\n    local char=${1:i:1}\n    if [[ $char =~ [A-Z] ]]; then\n      sum=$((sum\
    \ + $(printf \"%d\" \"'$char\")))\n    fi\n  done\n  echo $sum\n}\n\ncandidate()\
    \ {\n    digitSum \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"\")\
    \ = \"0\" ]]\n    [[ $(candidate \"abAB\") = \"131\" ]]\n    [[ $(candidate \"\
    abcCd\") = \"67\" ]]\n    [[ $(candidate \"helloE\") = \"69\" ]]\n    [[ $(candidate\
    \ \"woArBld\") = \"131\" ]]\n    [[ $(candidate \"aAaaaXa\") = \"153\" ]]\n  \
    \  [[ $(candidate \" How are yOu?\") = \"151\" ]]\n    [[ $(candidate \"You arE\
    \ Very Smart\") = \"327\" ]]\n}\n\nrun_test"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660003061
- exit_code: 1
  program: "#!/bin/bash\n# Task\n# Write a function that takes a string as input and\
    \ returns the sum of the upper characters only'\n# ASCII codes.\n# Examples:\n\
    #\n# $1 is a string\ndigitSum() {\n    local sum=0\n    for (( i=0; i<${#1}; i++\
    \ )); do\n        local char=${1:i:1}\n        if [[ $char =~ [A-Z] ]]; then\n\
    \            sum=$((sum+${char}))\n        fi\n    done\n    echo $sum\n}\n\n\
    candidate() {\n    digitSum \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate\
    \ \"\") = \"0\" ]]\n    [[ $(candidate \"abAB\") = \"131\" ]]\n    [[ $(candidate\
    \ \"abcCd\") = \"67\" ]]\n    [[ $(candidate \"helloE\") = \"69\" ]]\n    [[ $(candidate\
    \ \"woArBld\") = \"131\" ]]\n    [[ $(candidate \"aAaaaXa\") = \"153\" ]]\n  \
    \  [[ $(candidate \" How are yOu?\") = \"151\" ]]\n    [[ $(candidate \"You arE\
    \ Very Smart\") = \"327\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660003061
- exit_code: 0
  program: "#!/bin/bash\n# Task\n# Write a function that takes a string as input and\
    \ returns the sum of the upper characters only'\n# ASCII codes.\n# Examples:\n\
    #\n# $1 is a string\ndigitSum() {\n    local sum=0\n    for (( i=0; i<${#1}; i++\
    \ )); do\n        local char=${1:i:1}\n        if [[ $char =~ [A-Z] ]]; then\n\
    \            sum=$(( sum + $(printf \"%d\" \"'$char\") ))\n        fi\n    done\n\
    \    echo $sum\n}\n\ncandidate() {\n    digitSum \"$@\"\n}\n\nset -e\nrun_test()\
    \ {\n    [[ $(candidate \"\") = \"0\" ]]\n    [[ $(candidate \"abAB\") = \"131\"\
    \ ]]\n    [[ $(candidate \"abcCd\") = \"67\" ]]\n    [[ $(candidate \"helloE\"\
    ) = \"69\" ]]\n    [[ $(candidate \"woArBld\") = \"131\" ]]\n    [[ $(candidate\
    \ \"aAaaaXa\") = \"153\" ]]\n    [[ $(candidate \" How are yOu?\") = \"151\" ]]\n\
    \    [[ $(candidate \"You arE Very Smart\") = \"327\" ]]\n}\n\nrun_test"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660003061
- exit_code: 0
  program: "#!/bin/bash\n# Task\n# Write a function that takes a string as input and\
    \ returns the sum of the upper characters only'\n# ASCII codes.\n# Examples:\n\
    #\n# $1 is a string\ndigitSum() {\n    local sum=0\n    for (( i=0; i<${#1}; i++\
    \ )); do\n        local char=${1:i:1}\n        local charCode=$(printf \"%d\"\
    \ \"'$char\")\n        if [[ $charCode -ge 65 && $charCode -le 90 ]]; then\n \
    \           (( sum += charCode ))\n        fi\n    done\n    echo $sum\n}\n\n\
    candidate() {\n    digitSum \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate\
    \ \"\") = \"0\" ]]\n    [[ $(candidate \"abAB\") = \"131\" ]]\n    [[ $(candidate\
    \ \"abcCd\") = \"67\" ]]\n    [[ $(candidate \"helloE\") = \"69\" ]]\n    [[ $(candidate\
    \ \"woArBld\") = \"131\" ]]\n    [[ $(candidate \"aAaaaXa\") = \"153\" ]]\n  \
    \  [[ $(candidate \" How are yOu?\") = \"151\" ]]\n    [[ $(candidate \"You arE\
    \ Very Smart\") = \"327\" ]]\n}\n\nrun_test"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660003061
- exit_code: 0
  program: "#!/bin/bash\n# Task\n# Write a function that takes a string as input and\
    \ returns the sum of the upper characters only'\n# ASCII codes.\n# Examples:\n\
    #\n# $1 is a string\ndigitSum() {\n  local sum=0\n  for (( i=0; i<${#1}; i++ ));\
    \ do\n    local char=${1:i:1}\n    if [[ $char =~ [A-Z] ]]; then\n      sum=$((\
    \ sum + $(printf \"%d\" \"'$char\") ))\n    fi\n  done\n  echo $sum\n}\n\ncandidate()\
    \ {\n    digitSum \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"\")\
    \ = \"0\" ]]\n    [[ $(candidate \"abAB\") = \"131\" ]]\n    [[ $(candidate \"\
    abcCd\") = \"67\" ]]\n    [[ $(candidate \"helloE\") = \"69\" ]]\n    [[ $(candidate\
    \ \"woArBld\") = \"131\" ]]\n    [[ $(candidate \"aAaaaXa\") = \"153\" ]]\n  \
    \  [[ $(candidate \" How are yOu?\") = \"151\" ]]\n    [[ $(candidate \"You arE\
    \ Very Smart\") = \"327\" ]]\n}\n\nrun_test"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660003061
- exit_code: 0
  program: "#!/bin/bash\n# Task\n# Write a function that takes a string as input and\
    \ returns the sum of the upper characters only'\n# ASCII codes.\n# Examples:\n\
    #\n# $1 is a string\ndigitSum() {\n  local -i sum=0\n  local -i i=0\n  local -i\
    \ len=${#1}\n  while [ $i -lt $len ]; do\n    local -i ascii=$(printf \"%d\" \"\
    '${1:$i:1}\")\n    if [ $ascii -ge 65 ] && [ $ascii -le 90 ]; then\n      ((sum+=ascii))\n\
    \    fi\n    ((i++))\n  done\n  echo $sum\n}\n\ncandidate() {\n    digitSum \"\
    $@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"\") = \"0\" ]]\n    [[ $(candidate\
    \ \"abAB\") = \"131\" ]]\n    [[ $(candidate \"abcCd\") = \"67\" ]]\n    [[ $(candidate\
    \ \"helloE\") = \"69\" ]]\n    [[ $(candidate \"woArBld\") = \"131\" ]]\n    [[\
    \ $(candidate \"aAaaaXa\") = \"153\" ]]\n    [[ $(candidate \" How are yOu?\"\
    ) = \"151\" ]]\n    [[ $(candidate \"You arE Very Smart\") = \"327\" ]]\n}\n\n\
    run_test"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660003061
- exit_code: 0
  program: "#!/bin/bash\n# Task\n# Write a function that takes a string as input and\
    \ returns the sum of the upper characters only'\n# ASCII codes.\n# Examples:\n\
    #\n# $1 is a string\ndigitSum() {\n    local sum=0\n    for (( i=0; i<${#1}; i++\
    \ )); do\n        local ascii=$(printf \"%d\" \"'${1:$i:1}\")\n        if (( ascii\
    \ >= 65 && ascii <= 90 )); then\n            (( sum += ascii ))\n        fi\n\
    \    done\n    echo $sum\n}\n\ncandidate() {\n    digitSum \"$@\"\n}\n\nset -e\n\
    run_test() {\n    [[ $(candidate \"\") = \"0\" ]]\n    [[ $(candidate \"abAB\"\
    ) = \"131\" ]]\n    [[ $(candidate \"abcCd\") = \"67\" ]]\n    [[ $(candidate\
    \ \"helloE\") = \"69\" ]]\n    [[ $(candidate \"woArBld\") = \"131\" ]]\n    [[\
    \ $(candidate \"aAaaaXa\") = \"153\" ]]\n    [[ $(candidate \" How are yOu?\"\
    ) = \"151\" ]]\n    [[ $(candidate \"You arE Very Smart\") = \"327\" ]]\n}\n\n\
    run_test"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660003061
- exit_code: 0
  program: "#!/bin/bash\n# Task\n# Write a function that takes a string as input and\
    \ returns the sum of the upper characters only'\n# ASCII codes.\n# Examples:\n\
    #\n# $1 is a string\ndigitSum() {\n    local sum=0\n    local str=$1\n    local\
    \ len=${#str}\n    for ((i=0; i<len; i++)); do\n        local char=${str:i:1}\n\
    \        local ascii=$(printf \"%d\" \"'$char\")\n        if [[ $ascii -ge 65\
    \ && $ascii -le 90 ]]; then\n            sum=$((sum + ascii))\n        fi\n  \
    \  done\n    echo $sum\n}\n\ncandidate() {\n    digitSum \"$@\"\n}\n\nset -e\n\
    run_test() {\n    [[ $(candidate \"\") = \"0\" ]]\n    [[ $(candidate \"abAB\"\
    ) = \"131\" ]]\n    [[ $(candidate \"abcCd\") = \"67\" ]]\n    [[ $(candidate\
    \ \"helloE\") = \"69\" ]]\n    [[ $(candidate \"woArBld\") = \"131\" ]]\n    [[\
    \ $(candidate \"aAaaaXa\") = \"153\" ]]\n    [[ $(candidate \" How are yOu?\"\
    ) = \"151\" ]]\n    [[ $(candidate \"You arE Very Smart\") = \"327\" ]]\n}\n\n\
    run_test"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660003061
- exit_code: 0
  program: "#!/bin/bash\n# Task\n# Write a function that takes a string as input and\
    \ returns the sum of the upper characters only'\n# ASCII codes.\n# Examples:\n\
    #\n# $1 is a string\ndigitSum() {\n  local sum=0\n  local str=\"$1\"\n  for ((\
    \ i=0; i<${#str}; i++ )); do\n    local char=${str:$i:1}\n    if [[ $char =~ [A-Z]\
    \ ]]; then\n      sum=$(( sum + $(printf \"%d\" \"'$char\") ))\n    fi\n  done\n\
    \  echo $sum\n}\n\ncandidate() {\n    digitSum \"$@\"\n}\n\nset -e\nrun_test()\
    \ {\n    [[ $(candidate \"\") = \"0\" ]]\n    [[ $(candidate \"abAB\") = \"131\"\
    \ ]]\n    [[ $(candidate \"abcCd\") = \"67\" ]]\n    [[ $(candidate \"helloE\"\
    ) = \"69\" ]]\n    [[ $(candidate \"woArBld\") = \"131\" ]]\n    [[ $(candidate\
    \ \"aAaaaXa\") = \"153\" ]]\n    [[ $(candidate \" How are yOu?\") = \"151\" ]]\n\
    \    [[ $(candidate \"You arE Very Smart\") = \"327\" ]]\n}\n\nrun_test"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660003061
- exit_code: 1
  program: "#!/bin/bash\n# Task\n# Write a function that takes a string as input and\
    \ returns the sum of the upper characters only'\n# ASCII codes.\n# Examples:\n\
    #\n# $1 is a string\ndigitSum() {\n    echo $1 | grep -o '[A-Z]' | awk '{ sum\
    \ += $1 } END { print sum }'\n}\n\ncandidate() {\n    digitSum \"$@\"\n}\n\nset\
    \ -e\nrun_test() {\n    [[ $(candidate \"\") = \"0\" ]]\n    [[ $(candidate \"\
    abAB\") = \"131\" ]]\n    [[ $(candidate \"abcCd\") = \"67\" ]]\n    [[ $(candidate\
    \ \"helloE\") = \"69\" ]]\n    [[ $(candidate \"woArBld\") = \"131\" ]]\n    [[\
    \ $(candidate \"aAaaaXa\") = \"153\" ]]\n    [[ $(candidate \" How are yOu?\"\
    ) = \"151\" ]]\n    [[ $(candidate \"You arE Very Smart\") = \"327\" ]]\n}\n\n\
    run_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660003061
- exit_code: 0
  program: "#!/bin/bash\n# Task\n# Write a function that takes a string as input and\
    \ returns the sum of the upper characters only'\n# ASCII codes.\n# Examples:\n\
    #\n# $1 is a string\ndigitSum() {\n    local sum=0\n    for (( i=0; i<${#1}; i++\
    \ )); do\n        local ascii=$(printf \"%d\" \"'${1:$i:1}\")\n        if [[ $ascii\
    \ -ge 65 && $ascii -le 90 ]]; then\n            (( sum+=ascii ))\n        fi\n\
    \    done\n    echo $sum\n}\n\ncandidate() {\n    digitSum \"$@\"\n}\n\nset -e\n\
    run_test() {\n    [[ $(candidate \"\") = \"0\" ]]\n    [[ $(candidate \"abAB\"\
    ) = \"131\" ]]\n    [[ $(candidate \"abcCd\") = \"67\" ]]\n    [[ $(candidate\
    \ \"helloE\") = \"69\" ]]\n    [[ $(candidate \"woArBld\") = \"131\" ]]\n    [[\
    \ $(candidate \"aAaaaXa\") = \"153\" ]]\n    [[ $(candidate \" How are yOu?\"\
    ) = \"151\" ]]\n    [[ $(candidate \"You arE Very Smart\") = \"327\" ]]\n}\n\n\
    run_test"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660003061
- exit_code: 0
  program: "#!/bin/bash\n# Task\n# Write a function that takes a string as input and\
    \ returns the sum of the upper characters only'\n# ASCII codes.\n# Examples:\n\
    #\n# $1 is a string\ndigitSum() {\n    local sum=0\n    local str=$1\n    for\
    \ (( i=0; i<${#str}; i++ )); do\n        local char=${str:$i:1}\n        local\
    \ ascii=$(printf \"%d\" \"'$char\")\n        if (( ascii >= 65 && ascii <= 90\
    \ )); then\n            (( sum += ascii ))\n        fi\n    done\n    echo $sum\n\
    }\n\ncandidate() {\n    digitSum \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate\
    \ \"\") = \"0\" ]]\n    [[ $(candidate \"abAB\") = \"131\" ]]\n    [[ $(candidate\
    \ \"abcCd\") = \"67\" ]]\n    [[ $(candidate \"helloE\") = \"69\" ]]\n    [[ $(candidate\
    \ \"woArBld\") = \"131\" ]]\n    [[ $(candidate \"aAaaaXa\") = \"153\" ]]\n  \
    \  [[ $(candidate \" How are yOu?\") = \"151\" ]]\n    [[ $(candidate \"You arE\
    \ Very Smart\") = \"327\" ]]\n}\n\nrun_test"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660003061
- exit_code: 0
  program: "#!/bin/bash\n# Task\n# Write a function that takes a string as input and\
    \ returns the sum of the upper characters only'\n# ASCII codes.\n# Examples:\n\
    #\n# $1 is a string\ndigitSum() {\n    local sum=0\n    for (( i=0; i<${#1}; i++\
    \ )); do\n        local char=${1:i:1}\n        local ascii=$(printf \"%d\" \"\
    '$char\")\n        if (( ascii >= 65 && ascii <= 90 )); then\n            (( sum\
    \ += ascii ))\n        fi\n    done\n    echo $sum\n}\n\ncandidate() {\n    digitSum\
    \ \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"\") = \"0\" ]]\n   \
    \ [[ $(candidate \"abAB\") = \"131\" ]]\n    [[ $(candidate \"abcCd\") = \"67\"\
    \ ]]\n    [[ $(candidate \"helloE\") = \"69\" ]]\n    [[ $(candidate \"woArBld\"\
    ) = \"131\" ]]\n    [[ $(candidate \"aAaaaXa\") = \"153\" ]]\n    [[ $(candidate\
    \ \" How are yOu?\") = \"151\" ]]\n    [[ $(candidate \"You arE Very Smart\")\
    \ = \"327\" ]]\n}\n\nrun_test"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660003061
- exit_code: 0
  program: "#!/bin/bash\n# Task\n# Write a function that takes a string as input and\
    \ returns the sum of the upper characters only'\n# ASCII codes.\n# Examples:\n\
    #\n# $1 is a string\ndigitSum() {\n    local sum=0\n    for (( i=0; i<${#1}; i++\
    \ )); do\n        local ascii=$(printf \"%d\" \"'${1:$i:1}\")\n        if [[ $ascii\
    \ -ge 65 && $ascii -le 90 ]]; then\n            (( sum+=ascii ))\n        fi\n\
    \    done\n    echo $sum\n}\n\ncandidate() {\n    digitSum \"$@\"\n}\n\nset -e\n\
    run_test() {\n    [[ $(candidate \"\") = \"0\" ]]\n    [[ $(candidate \"abAB\"\
    ) = \"131\" ]]\n    [[ $(candidate \"abcCd\") = \"67\" ]]\n    [[ $(candidate\
    \ \"helloE\") = \"69\" ]]\n    [[ $(candidate \"woArBld\") = \"131\" ]]\n    [[\
    \ $(candidate \"aAaaaXa\") = \"153\" ]]\n    [[ $(candidate \" How are yOu?\"\
    ) = \"151\" ]]\n    [[ $(candidate \"You arE Very Smart\") = \"327\" ]]\n}\n\n\
    run_test"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660003061
- exit_code: 0
  program: "#!/bin/bash\n# Task\n# Write a function that takes a string as input and\
    \ returns the sum of the upper characters only'\n# ASCII codes.\n# Examples:\n\
    #\n# $1 is a string\ndigitSum() {\n  local sum=0\n  for (( i=0; i<${#1}; i++ ));\
    \ do\n    local char=${1:i:1}\n    if [[ $char =~ [A-Z] ]]; then\n      sum=$((\
    \ sum + $(printf \"%d\" \"'$char\") ))\n    fi\n  done\n  echo $sum\n}\n\ncandidate()\
    \ {\n    digitSum \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"\")\
    \ = \"0\" ]]\n    [[ $(candidate \"abAB\") = \"131\" ]]\n    [[ $(candidate \"\
    abcCd\") = \"67\" ]]\n    [[ $(candidate \"helloE\") = \"69\" ]]\n    [[ $(candidate\
    \ \"woArBld\") = \"131\" ]]\n    [[ $(candidate \"aAaaaXa\") = \"153\" ]]\n  \
    \  [[ $(candidate \" How are yOu?\") = \"151\" ]]\n    [[ $(candidate \"You arE\
    \ Very Smart\") = \"327\" ]]\n}\n\nrun_test"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660003061
- exit_code: 0
  program: "#!/bin/bash\n# Task\n# Write a function that takes a string as input and\
    \ returns the sum of the upper characters only'\n# ASCII codes.\n# Examples:\n\
    #\n# $1 is a string\ndigitSum() {\n    local sum=0\n    for (( i=0; i<${#1}; i++\
    \ )); do\n        local char=${1:i:1}\n        if [[ $char =~ [A-Z] ]]; then\n\
    \            sum=$((sum + $(printf \"%d\" \"'$char\")))\n        fi\n    done\n\
    \    echo $sum\n}\n\ncandidate() {\n    digitSum \"$@\"\n}\n\nset -e\nrun_test()\
    \ {\n    [[ $(candidate \"\") = \"0\" ]]\n    [[ $(candidate \"abAB\") = \"131\"\
    \ ]]\n    [[ $(candidate \"abcCd\") = \"67\" ]]\n    [[ $(candidate \"helloE\"\
    ) = \"69\" ]]\n    [[ $(candidate \"woArBld\") = \"131\" ]]\n    [[ $(candidate\
    \ \"aAaaaXa\") = \"153\" ]]\n    [[ $(candidate \" How are yOu?\") = \"151\" ]]\n\
    \    [[ $(candidate \"You arE Very Smart\") = \"327\" ]]\n}\n\nrun_test"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660003061
- exit_code: 0
  program: "#!/bin/bash\n# Task\n# Write a function that takes a string as input and\
    \ returns the sum of the upper characters only'\n# ASCII codes.\n# Examples:\n\
    #\n# $1 is a string\ndigitSum() {\n    local sum=0\n    for (( i=0; i<${#1}; i++\
    \ )); do\n        local char=${1:i:1}\n        if [[ $char =~ [A-Z] ]]; then\n\
    \            sum=$(( sum + $(printf \"%d\" \"'$char\") ))\n        fi\n    done\n\
    \    echo $sum\n}\n\ncandidate() {\n    digitSum \"$@\"\n}\n\nset -e\nrun_test()\
    \ {\n    [[ $(candidate \"\") = \"0\" ]]\n    [[ $(candidate \"abAB\") = \"131\"\
    \ ]]\n    [[ $(candidate \"abcCd\") = \"67\" ]]\n    [[ $(candidate \"helloE\"\
    ) = \"69\" ]]\n    [[ $(candidate \"woArBld\") = \"131\" ]]\n    [[ $(candidate\
    \ \"aAaaaXa\") = \"153\" ]]\n    [[ $(candidate \" How are yOu?\") = \"151\" ]]\n\
    \    [[ $(candidate \"You arE Very Smart\") = \"327\" ]]\n}\n\nrun_test"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660003061
- exit_code: 0
  program: "#!/bin/bash\n# Task\n# Write a function that takes a string as input and\
    \ returns the sum of the upper characters only'\n# ASCII codes.\n# Examples:\n\
    #\n# $1 is a string\ndigitSum() {\n  local sum=0\n  for (( i=0; i<${#1}; i++ ));\
    \ do\n    local char=${1:i:1}\n    if [[ $char =~ [A-Z] ]]; then\n      sum=$((sum\
    \ + $(printf \"%d\" \"'$char\")))\n    fi\n  done\n  echo $sum\n}\n\ncandidate()\
    \ {\n    digitSum \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"\")\
    \ = \"0\" ]]\n    [[ $(candidate \"abAB\") = \"131\" ]]\n    [[ $(candidate \"\
    abcCd\") = \"67\" ]]\n    [[ $(candidate \"helloE\") = \"69\" ]]\n    [[ $(candidate\
    \ \"woArBld\") = \"131\" ]]\n    [[ $(candidate \"aAaaaXa\") = \"153\" ]]\n  \
    \  [[ $(candidate \" How are yOu?\") = \"151\" ]]\n    [[ $(candidate \"You arE\
    \ Very Smart\") = \"327\" ]]\n}\n\nrun_test"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660003061
- exit_code: 0
  program: "#!/bin/bash\n# Task\n# Write a function that takes a string as input and\
    \ returns the sum of the upper characters only'\n# ASCII codes.\n# Examples:\n\
    #\n# $1 is a string\ndigitSum() {\n    local sum=0\n    for (( i=0; i<${#1}; i++\
    \ )); do\n        local char=${1:i:1}\n        if [[ $char =~ [A-Z] ]]; then\n\
    \            sum=$(( sum + $(printf \"%d\" \"'$char\") ))\n        fi\n    done\n\
    \    echo $sum\n}\n\ncandidate() {\n    digitSum \"$@\"\n}\n\nset -e\nrun_test()\
    \ {\n    [[ $(candidate \"\") = \"0\" ]]\n    [[ $(candidate \"abAB\") = \"131\"\
    \ ]]\n    [[ $(candidate \"abcCd\") = \"67\" ]]\n    [[ $(candidate \"helloE\"\
    ) = \"69\" ]]\n    [[ $(candidate \"woArBld\") = \"131\" ]]\n    [[ $(candidate\
    \ \"aAaaaXa\") = \"153\" ]]\n    [[ $(candidate \" How are yOu?\") = \"151\" ]]\n\
    \    [[ $(candidate \"You arE Very Smart\") = \"327\" ]]\n}\n\nrun_test"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660003061
- exit_code: 1
  program: "#!/bin/bash\n# Task\n# Write a function that takes a string as input and\
    \ returns the sum of the upper characters only'\n# ASCII codes.\n# Examples:\n\
    #\n# $1 is a string\ndigitSum() {\n    local sum=0\n    for (( i=0; i<${#1}; i++\
    \ )); do\n        local char=${1:i:1}\n        if [[ $char =~ [A-Z] ]]; then\n\
    \            sum=$((sum+${char}))\n        fi\n    done\n    echo $sum\n}\n\n\
    candidate() {\n    digitSum \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate\
    \ \"\") = \"0\" ]]\n    [[ $(candidate \"abAB\") = \"131\" ]]\n    [[ $(candidate\
    \ \"abcCd\") = \"67\" ]]\n    [[ $(candidate \"helloE\") = \"69\" ]]\n    [[ $(candidate\
    \ \"woArBld\") = \"131\" ]]\n    [[ $(candidate \"aAaaaXa\") = \"153\" ]]\n  \
    \  [[ $(candidate \" How are yOu?\") = \"151\" ]]\n    [[ $(candidate \"You arE\
    \ Very Smart\") = \"327\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660003061
- exit_code: 0
  program: "#!/bin/bash\n# Task\n# Write a function that takes a string as input and\
    \ returns the sum of the upper characters only'\n# ASCII codes.\n# Examples:\n\
    #\n# $1 is a string\ndigitSum() {\n  local sum=0\n  for (( i=0; i<${#1}; i++ ));\
    \ do\n    local char=${1:i:1}\n    if [[ $char =~ [A-Z] ]]; then\n      sum=$((\
    \ sum + $(printf \"%d\" \"'$char\") ))\n    fi\n  done\n  echo $sum\n}\n\ncandidate()\
    \ {\n    digitSum \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"\")\
    \ = \"0\" ]]\n    [[ $(candidate \"abAB\") = \"131\" ]]\n    [[ $(candidate \"\
    abcCd\") = \"67\" ]]\n    [[ $(candidate \"helloE\") = \"69\" ]]\n    [[ $(candidate\
    \ \"woArBld\") = \"131\" ]]\n    [[ $(candidate \"aAaaaXa\") = \"153\" ]]\n  \
    \  [[ $(candidate \" How are yOu?\") = \"151\" ]]\n    [[ $(candidate \"You arE\
    \ Very Smart\") = \"327\" ]]\n}\n\nrun_test"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660003061
- exit_code: 0
  program: "#!/bin/bash\n# Task\n# Write a function that takes a string as input and\
    \ returns the sum of the upper characters only'\n# ASCII codes.\n# Examples:\n\
    #\n# $1 is a string\ndigitSum() {\n    local sum=0\n    local str=$1\n    for\
    \ (( i=0; i<${#str}; i++ )); do\n        local char=${str:$i:1}\n        local\
    \ char_ascii=$(printf \"%d\" \"'$char\")\n        if [[ $char_ascii -ge 65 &&\
    \ $char_ascii -le 90 ]]; then\n            sum=$((sum + char_ascii))\n       \
    \ fi\n    done\n    echo $sum\n}\n\ncandidate() {\n    digitSum \"$@\"\n}\n\n\
    set -e\nrun_test() {\n    [[ $(candidate \"\") = \"0\" ]]\n    [[ $(candidate\
    \ \"abAB\") = \"131\" ]]\n    [[ $(candidate \"abcCd\") = \"67\" ]]\n    [[ $(candidate\
    \ \"helloE\") = \"69\" ]]\n    [[ $(candidate \"woArBld\") = \"131\" ]]\n    [[\
    \ $(candidate \"aAaaaXa\") = \"153\" ]]\n    [[ $(candidate \" How are yOu?\"\
    ) = \"151\" ]]\n    [[ $(candidate \"You arE Very Smart\") = \"327\" ]]\n}\n\n\
    run_test"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660003061
- exit_code: 0
  program: "#!/bin/bash\n# Task\n# Write a function that takes a string as input and\
    \ returns the sum of the upper characters only'\n# ASCII codes.\n# Examples:\n\
    #\n# $1 is a string\ndigitSum() {\n  local sum=0\n  for (( i=0; i<${#1}; i++ ));\
    \ do\n    local ascii=$(printf \"%d\" \"'${1:$i:1}\")\n    if [[ $ascii -ge 65\
    \ && $ascii -le 90 ]]; then\n      (( sum+=ascii ))\n    fi\n  done\n  echo $sum\n\
    }\n\ncandidate() {\n    digitSum \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate\
    \ \"\") = \"0\" ]]\n    [[ $(candidate \"abAB\") = \"131\" ]]\n    [[ $(candidate\
    \ \"abcCd\") = \"67\" ]]\n    [[ $(candidate \"helloE\") = \"69\" ]]\n    [[ $(candidate\
    \ \"woArBld\") = \"131\" ]]\n    [[ $(candidate \"aAaaaXa\") = \"153\" ]]\n  \
    \  [[ $(candidate \" How are yOu?\") = \"151\" ]]\n    [[ $(candidate \"You arE\
    \ Very Smart\") = \"327\" ]]\n}\n\nrun_test"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660003061
- exit_code: 0
  program: "#!/bin/bash\n# Task\n# Write a function that takes a string as input and\
    \ returns the sum of the upper characters only'\n# ASCII codes.\n# Examples:\n\
    #\n# $1 is a string\ndigitSum() {\n  local sum=0\n  local str=\"$1\"\n  for ((\
    \ i=0; i<${#str}; i++ )); do\n    local char=${str:$i:1}\n    local ascii=$(printf\
    \ \"%d\" \"'$char\")\n    if [[ $ascii -ge 65 && $ascii -le 90 ]]; then\n    \
    \  sum=$((sum + ascii))\n    fi\n  done\n  echo $sum\n}\n\ncandidate() {\n   \
    \ digitSum \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"\") = \"0\"\
    \ ]]\n    [[ $(candidate \"abAB\") = \"131\" ]]\n    [[ $(candidate \"abcCd\"\
    ) = \"67\" ]]\n    [[ $(candidate \"helloE\") = \"69\" ]]\n    [[ $(candidate\
    \ \"woArBld\") = \"131\" ]]\n    [[ $(candidate \"aAaaaXa\") = \"153\" ]]\n  \
    \  [[ $(candidate \" How are yOu?\") = \"151\" ]]\n    [[ $(candidate \"You arE\
    \ Very Smart\") = \"327\" ]]\n}\n\nrun_test"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660003061
- exit_code: 0
  program: "#!/bin/bash\n# Task\n# Write a function that takes a string as input and\
    \ returns the sum of the upper characters only'\n# ASCII codes.\n# Examples:\n\
    #\n# $1 is a string\ndigitSum() {\n    local sum=0\n    for (( i=0; i<${#1}; i++\
    \ )); do\n        local char=${1:i:1}\n        if [[ $char =~ [A-Z] ]]; then\n\
    \            sum=$(( sum + $(printf \"%d\" \"'$char\") ))\n        fi\n    done\n\
    \    echo $sum\n}\n\ncandidate() {\n    digitSum \"$@\"\n}\n\nset -e\nrun_test()\
    \ {\n    [[ $(candidate \"\") = \"0\" ]]\n    [[ $(candidate \"abAB\") = \"131\"\
    \ ]]\n    [[ $(candidate \"abcCd\") = \"67\" ]]\n    [[ $(candidate \"helloE\"\
    ) = \"69\" ]]\n    [[ $(candidate \"woArBld\") = \"131\" ]]\n    [[ $(candidate\
    \ \"aAaaaXa\") = \"153\" ]]\n    [[ $(candidate \" How are yOu?\") = \"151\" ]]\n\
    \    [[ $(candidate \"You arE Very Smart\") = \"327\" ]]\n}\n\nrun_test"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660003061
- exit_code: 0
  program: "#!/bin/bash\n# Task\n# Write a function that takes a string as input and\
    \ returns the sum of the upper characters only'\n# ASCII codes.\n# Examples:\n\
    #\n# $1 is a string\ndigitSum() {\n    local -i sum=0\n    local -i i=0\n    local\
    \ -i len=${#1}\n    while (( i < len )); do\n        local -i ascii=$(printf \"\
    %d\" \"'${1:i:1}\")\n        (( ascii >= 65 && ascii <= 90 )) && (( sum += ascii\
    \ ))\n        (( i++ ))\n    done\n    echo $sum\n}\n\ncandidate() {\n    digitSum\
    \ \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"\") = \"0\" ]]\n   \
    \ [[ $(candidate \"abAB\") = \"131\" ]]\n    [[ $(candidate \"abcCd\") = \"67\"\
    \ ]]\n    [[ $(candidate \"helloE\") = \"69\" ]]\n    [[ $(candidate \"woArBld\"\
    ) = \"131\" ]]\n    [[ $(candidate \"aAaaaXa\") = \"153\" ]]\n    [[ $(candidate\
    \ \" How are yOu?\") = \"151\" ]]\n    [[ $(candidate \"You arE Very Smart\")\
    \ = \"327\" ]]\n}\n\nrun_test"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660003061
- exit_code: 0
  program: "#!/bin/bash\n# Task\n# Write a function that takes a string as input and\
    \ returns the sum of the upper characters only'\n# ASCII codes.\n# Examples:\n\
    #\n# $1 is a string\ndigitSum() {\n    local sum=0\n    for (( i=0; i<${#1}; i++\
    \ )); do\n        local char=${1:i:1}\n        if [[ $char =~ [A-Z] ]]; then\n\
    \            sum=$(( sum + $(printf \"%d\" \"'$char\") ))\n        fi\n    done\n\
    \    echo $sum\n}\n\ncandidate() {\n    digitSum \"$@\"\n}\n\nset -e\nrun_test()\
    \ {\n    [[ $(candidate \"\") = \"0\" ]]\n    [[ $(candidate \"abAB\") = \"131\"\
    \ ]]\n    [[ $(candidate \"abcCd\") = \"67\" ]]\n    [[ $(candidate \"helloE\"\
    ) = \"69\" ]]\n    [[ $(candidate \"woArBld\") = \"131\" ]]\n    [[ $(candidate\
    \ \"aAaaaXa\") = \"153\" ]]\n    [[ $(candidate \" How are yOu?\") = \"151\" ]]\n\
    \    [[ $(candidate \"You arE Very Smart\") = \"327\" ]]\n}\n\nrun_test"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660003061
- exit_code: 0
  program: "#!/bin/bash\n# Task\n# Write a function that takes a string as input and\
    \ returns the sum of the upper characters only'\n# ASCII codes.\n# Examples:\n\
    #\n# $1 is a string\ndigitSum() {\n    local sum=0\n    for (( i=0; i<${#1}; i++\
    \ )); do\n        local char=${1:i:1}\n        if [[ $char =~ [A-Z] ]]; then\n\
    \            sum=$((sum + $(printf \"%d\" \"'$char\")))\n        fi\n    done\n\
    \    echo $sum\n}\n\ncandidate() {\n    digitSum \"$@\"\n}\n\nset -e\nrun_test()\
    \ {\n    [[ $(candidate \"\") = \"0\" ]]\n    [[ $(candidate \"abAB\") = \"131\"\
    \ ]]\n    [[ $(candidate \"abcCd\") = \"67\" ]]\n    [[ $(candidate \"helloE\"\
    ) = \"69\" ]]\n    [[ $(candidate \"woArBld\") = \"131\" ]]\n    [[ $(candidate\
    \ \"aAaaaXa\") = \"153\" ]]\n    [[ $(candidate \" How are yOu?\") = \"151\" ]]\n\
    \    [[ $(candidate \"You arE Very Smart\") = \"327\" ]]\n}\n\nrun_test"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660003061
- exit_code: 0
  program: "#!/bin/bash\n# Task\n# Write a function that takes a string as input and\
    \ returns the sum of the upper characters only'\n# ASCII codes.\n# Examples:\n\
    #\n# $1 is a string\ndigitSum() {\n  local sum=0\n  for (( i=0; i<${#1}; i++ ));\
    \ do\n    local char=${1:i:1}\n    if [[ $char =~ [A-Z] ]]; then\n      sum=$((sum\
    \ + $(printf \"%d\" \"'$char\")))\n    fi\n  done\n  echo $sum\n}\n\ncandidate()\
    \ {\n    digitSum \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"\")\
    \ = \"0\" ]]\n    [[ $(candidate \"abAB\") = \"131\" ]]\n    [[ $(candidate \"\
    abcCd\") = \"67\" ]]\n    [[ $(candidate \"helloE\") = \"69\" ]]\n    [[ $(candidate\
    \ \"woArBld\") = \"131\" ]]\n    [[ $(candidate \"aAaaaXa\") = \"153\" ]]\n  \
    \  [[ $(candidate \" How are yOu?\") = \"151\" ]]\n    [[ $(candidate \"You arE\
    \ Very Smart\") = \"327\" ]]\n}\n\nrun_test"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660003061
- exit_code: 0
  program: "#!/bin/bash\n# Task\n# Write a function that takes a string as input and\
    \ returns the sum of the upper characters only'\n# ASCII codes.\n# Examples:\n\
    #\n# $1 is a string\ndigitSum() {\n    local sum=0\n    for (( i=0; i<${#1}; i++\
    \ )); do\n        local char=${1:i:1}\n        if [[ $char =~ [A-Z] ]]; then\n\
    \            sum=$((sum + $(printf \"%d\" \"'$char\")))\n        fi\n    done\n\
    \    echo $sum\n}\n\ncandidate() {\n    digitSum \"$@\"\n}\n\nset -e\nrun_test()\
    \ {\n    [[ $(candidate \"\") = \"0\" ]]\n    [[ $(candidate \"abAB\") = \"131\"\
    \ ]]\n    [[ $(candidate \"abcCd\") = \"67\" ]]\n    [[ $(candidate \"helloE\"\
    ) = \"69\" ]]\n    [[ $(candidate \"woArBld\") = \"131\" ]]\n    [[ $(candidate\
    \ \"aAaaaXa\") = \"153\" ]]\n    [[ $(candidate \" How are yOu?\") = \"151\" ]]\n\
    \    [[ $(candidate \"You arE Very Smart\") = \"327\" ]]\n}\n\nrun_test"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660003061
- exit_code: 0
  program: "#!/bin/bash\n# Task\n# Write a function that takes a string as input and\
    \ returns the sum of the upper characters only'\n# ASCII codes.\n# Examples:\n\
    #\n# $1 is a string\ndigitSum() {\n  local sum=0\n  for (( i=0; i<${#1}; i++ ));\
    \ do\n    local char=${1:i:1}\n    if [[ $char =~ [A-Z] ]]; then\n      sum=$((sum\
    \ + $(printf \"%d\" \"'$char\")))\n    fi\n  done\n  echo $sum\n}\n\ncandidate()\
    \ {\n    digitSum \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"\")\
    \ = \"0\" ]]\n    [[ $(candidate \"abAB\") = \"131\" ]]\n    [[ $(candidate \"\
    abcCd\") = \"67\" ]]\n    [[ $(candidate \"helloE\") = \"69\" ]]\n    [[ $(candidate\
    \ \"woArBld\") = \"131\" ]]\n    [[ $(candidate \"aAaaaXa\") = \"153\" ]]\n  \
    \  [[ $(candidate \" How are yOu?\") = \"151\" ]]\n    [[ $(candidate \"You arE\
    \ Very Smart\") = \"327\" ]]\n}\n\nrun_test"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660003061
- exit_code: 1
  program: "#!/bin/bash\n# Task\n# Write a function that takes a string as input and\
    \ returns the sum of the upper characters only'\n# ASCII codes.\n# Examples:\n\
    #\n# $1 is a string\ndigitSum() {\n    local sum=0\n    for (( i=0; i<${#1}; i++\
    \ )); do\n        local char=${1:i:1}\n        if [[ $char =~ [A-Z] ]]; then\n\
    \            sum=$((sum+${char}))\n        fi\n    done\n    echo $sum\n}\n\n\
    candidate() {\n    digitSum \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate\
    \ \"\") = \"0\" ]]\n    [[ $(candidate \"abAB\") = \"131\" ]]\n    [[ $(candidate\
    \ \"abcCd\") = \"67\" ]]\n    [[ $(candidate \"helloE\") = \"69\" ]]\n    [[ $(candidate\
    \ \"woArBld\") = \"131\" ]]\n    [[ $(candidate \"aAaaaXa\") = \"153\" ]]\n  \
    \  [[ $(candidate \" How are yOu?\") = \"151\" ]]\n    [[ $(candidate \"You arE\
    \ Very Smart\") = \"327\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660003061
- exit_code: 0
  program: "#!/bin/bash\n# Task\n# Write a function that takes a string as input and\
    \ returns the sum of the upper characters only'\n# ASCII codes.\n# Examples:\n\
    #\n# $1 is a string\ndigitSum() {\n    local sum=0\n    for (( i=0; i<${#1}; i++\
    \ )); do\n        local char=${1:i:1}\n        if [[ $char =~ [A-Z] ]]; then\n\
    \            sum=$(( sum + $(printf \"%d\" \"'$char\") ))\n        fi\n    done\n\
    \    echo $sum\n}\n\ncandidate() {\n    digitSum \"$@\"\n}\n\nset -e\nrun_test()\
    \ {\n    [[ $(candidate \"\") = \"0\" ]]\n    [[ $(candidate \"abAB\") = \"131\"\
    \ ]]\n    [[ $(candidate \"abcCd\") = \"67\" ]]\n    [[ $(candidate \"helloE\"\
    ) = \"69\" ]]\n    [[ $(candidate \"woArBld\") = \"131\" ]]\n    [[ $(candidate\
    \ \"aAaaaXa\") = \"153\" ]]\n    [[ $(candidate \" How are yOu?\") = \"151\" ]]\n\
    \    [[ $(candidate \"You arE Very Smart\") = \"327\" ]]\n}\n\nrun_test"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660003061
- exit_code: 0
  program: "#!/bin/bash\n# Task\n# Write a function that takes a string as input and\
    \ returns the sum of the upper characters only'\n# ASCII codes.\n# Examples:\n\
    #\n# $1 is a string\ndigitSum() {\n  local sum=0\n  local str=$1\n  for (( i=0;\
    \ i<${#str}; i++ )); do\n    local char=${str:$i:1}\n    if [[ $char =~ [A-Z]\
    \ ]]; then\n      sum=$((sum + $(printf \"%d\" \"'$char\")))\n    fi\n  done\n\
    \  echo $sum\n}\n\ncandidate() {\n    digitSum \"$@\"\n}\n\nset -e\nrun_test()\
    \ {\n    [[ $(candidate \"\") = \"0\" ]]\n    [[ $(candidate \"abAB\") = \"131\"\
    \ ]]\n    [[ $(candidate \"abcCd\") = \"67\" ]]\n    [[ $(candidate \"helloE\"\
    ) = \"69\" ]]\n    [[ $(candidate \"woArBld\") = \"131\" ]]\n    [[ $(candidate\
    \ \"aAaaaXa\") = \"153\" ]]\n    [[ $(candidate \" How are yOu?\") = \"151\" ]]\n\
    \    [[ $(candidate \"You arE Very Smart\") = \"327\" ]]\n}\n\nrun_test"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660003061
- exit_code: 0
  program: "#!/bin/bash\n# Task\n# Write a function that takes a string as input and\
    \ returns the sum of the upper characters only'\n# ASCII codes.\n# Examples:\n\
    #\n# $1 is a string\ndigitSum() {\n    local sum=0\n    local str=$1\n    for\
    \ (( i=0; i<${#str}; i++ )); do\n        local char=${str:$i:1}\n        local\
    \ ascii=$(printf \"%d\" \"'$char\")\n        if [[ $ascii -ge 65 && $ascii -le\
    \ 90 ]]; then\n            (( sum+=ascii ))\n        fi\n    done\n    echo $sum\n\
    }\n\ncandidate() {\n    digitSum \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate\
    \ \"\") = \"0\" ]]\n    [[ $(candidate \"abAB\") = \"131\" ]]\n    [[ $(candidate\
    \ \"abcCd\") = \"67\" ]]\n    [[ $(candidate \"helloE\") = \"69\" ]]\n    [[ $(candidate\
    \ \"woArBld\") = \"131\" ]]\n    [[ $(candidate \"aAaaaXa\") = \"153\" ]]\n  \
    \  [[ $(candidate \" How are yOu?\") = \"151\" ]]\n    [[ $(candidate \"You arE\
    \ Very Smart\") = \"327\" ]]\n}\n\nrun_test"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660003061
- exit_code: 1
  program: "#!/bin/bash\n# Task\n# Write a function that takes a string as input and\
    \ returns the sum of the upper characters only'\n# ASCII codes.\n# Examples:\n\
    #\n# $1 is a string\ndigitSum() {\n    local sum=0\n    for (( i=0; i<${#1}; i++\
    \ )); do\n        local char=${1:i:1}\n        if [[ $char =~ [A-Z] ]]; then\n\
    \            sum=$((sum+${char}))\n        fi\n    done\n    echo $sum\n}\n\n\
    candidate() {\n    digitSum \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate\
    \ \"\") = \"0\" ]]\n    [[ $(candidate \"abAB\") = \"131\" ]]\n    [[ $(candidate\
    \ \"abcCd\") = \"67\" ]]\n    [[ $(candidate \"helloE\") = \"69\" ]]\n    [[ $(candidate\
    \ \"woArBld\") = \"131\" ]]\n    [[ $(candidate \"aAaaaXa\") = \"153\" ]]\n  \
    \  [[ $(candidate \" How are yOu?\") = \"151\" ]]\n    [[ $(candidate \"You arE\
    \ Very Smart\") = \"327\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660003061
- exit_code: 0
  program: "#!/bin/bash\n# Task\n# Write a function that takes a string as input and\
    \ returns the sum of the upper characters only'\n# ASCII codes.\n# Examples:\n\
    #\n# $1 is a string\ndigitSum() {\n    local sum=0\n    for (( i=0; i<${#1}; i++\
    \ )); do\n        local ascii=$(printf \"%d\" \"'${1:$i:1}\")\n        if (( ascii\
    \ >= 65 && ascii <= 90 )); then\n            (( sum += ascii ))\n        fi\n\
    \    done\n    echo $sum\n}\n\ncandidate() {\n    digitSum \"$@\"\n}\n\nset -e\n\
    run_test() {\n    [[ $(candidate \"\") = \"0\" ]]\n    [[ $(candidate \"abAB\"\
    ) = \"131\" ]]\n    [[ $(candidate \"abcCd\") = \"67\" ]]\n    [[ $(candidate\
    \ \"helloE\") = \"69\" ]]\n    [[ $(candidate \"woArBld\") = \"131\" ]]\n    [[\
    \ $(candidate \"aAaaaXa\") = \"153\" ]]\n    [[ $(candidate \" How are yOu?\"\
    ) = \"151\" ]]\n    [[ $(candidate \"You arE Very Smart\") = \"327\" ]]\n}\n\n\
    run_test"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660003061
- exit_code: 1
  program: "#!/bin/bash\n# Task\n# Write a function that takes a string as input and\
    \ returns the sum of the upper characters only'\n# ASCII codes.\n# Examples:\n\
    #\n# $1 is a string\ndigitSum() {\n    local sum=0\n    for (( i=0; i<${#1}; i++\
    \ )); do\n        local char=${1:i:1}\n        if [[ $char =~ [A-Z] ]]; then\n\
    \            sum=$((sum+${char}))\n        fi\n    done\n    echo $sum\n}\n\n\
    candidate() {\n    digitSum \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate\
    \ \"\") = \"0\" ]]\n    [[ $(candidate \"abAB\") = \"131\" ]]\n    [[ $(candidate\
    \ \"abcCd\") = \"67\" ]]\n    [[ $(candidate \"helloE\") = \"69\" ]]\n    [[ $(candidate\
    \ \"woArBld\") = \"131\" ]]\n    [[ $(candidate \"aAaaaXa\") = \"153\" ]]\n  \
    \  [[ $(candidate \" How are yOu?\") = \"151\" ]]\n    [[ $(candidate \"You arE\
    \ Very Smart\") = \"327\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660003061
- exit_code: 0
  program: "#!/bin/bash\n# Task\n# Write a function that takes a string as input and\
    \ returns the sum of the upper characters only'\n# ASCII codes.\n# Examples:\n\
    #\n# $1 is a string\ndigitSum() {\n    local sum=0\n    local str=\"$1\"\n   \
    \ for (( i=0; i<${#str}; i++ )); do\n        local char=${str:$i:1}\n        local\
    \ ascii=$(printf '%d' \"'$char\")\n        if [[ $ascii -ge 65 && $ascii -le 90\
    \ ]]; then\n            (( sum+=ascii ))\n        fi\n    done\n    echo $sum\n\
    }\n\ncandidate() {\n    digitSum \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate\
    \ \"\") = \"0\" ]]\n    [[ $(candidate \"abAB\") = \"131\" ]]\n    [[ $(candidate\
    \ \"abcCd\") = \"67\" ]]\n    [[ $(candidate \"helloE\") = \"69\" ]]\n    [[ $(candidate\
    \ \"woArBld\") = \"131\" ]]\n    [[ $(candidate \"aAaaaXa\") = \"153\" ]]\n  \
    \  [[ $(candidate \" How are yOu?\") = \"151\" ]]\n    [[ $(candidate \"You arE\
    \ Very Smart\") = \"327\" ]]\n}\n\nrun_test"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660003061
- exit_code: 0
  program: "#!/bin/bash\n# Task\n# Write a function that takes a string as input and\
    \ returns the sum of the upper characters only'\n# ASCII codes.\n# Examples:\n\
    #\n# $1 is a string\ndigitSum() {\n    local sum=0\n    for (( i=0; i<${#1}; i++\
    \ )); do\n        local char=${1:i:1}\n        if [[ $char =~ [A-Z] ]]; then\n\
    \            sum=$(( sum + $(printf \"%d\" \"'$char\") ))\n        fi\n    done\n\
    \    echo $sum\n}\n\ncandidate() {\n    digitSum \"$@\"\n}\n\nset -e\nrun_test()\
    \ {\n    [[ $(candidate \"\") = \"0\" ]]\n    [[ $(candidate \"abAB\") = \"131\"\
    \ ]]\n    [[ $(candidate \"abcCd\") = \"67\" ]]\n    [[ $(candidate \"helloE\"\
    ) = \"69\" ]]\n    [[ $(candidate \"woArBld\") = \"131\" ]]\n    [[ $(candidate\
    \ \"aAaaaXa\") = \"153\" ]]\n    [[ $(candidate \" How are yOu?\") = \"151\" ]]\n\
    \    [[ $(candidate \"You arE Very Smart\") = \"327\" ]]\n}\n\nrun_test"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660003061
- exit_code: 0
  program: "#!/bin/bash\n# Task\n# Write a function that takes a string as input and\
    \ returns the sum of the upper characters only'\n# ASCII codes.\n# Examples:\n\
    #\n# $1 is a string\ndigitSum() {\n    local str=$1\n    local sum=0\n    for\
    \ (( i=0; i<${#str}; i++ )); do\n        local char=${str:$i:1}\n        local\
    \ ascii=$(printf \"%d\" \"'$char\")\n        if [[ $ascii -ge 65 && $ascii -le\
    \ 90 ]]; then\n            sum=$((sum + ascii))\n        fi\n    done\n    echo\
    \ $sum\n}\n\ncandidate() {\n    digitSum \"$@\"\n}\n\nset -e\nrun_test() {\n \
    \   [[ $(candidate \"\") = \"0\" ]]\n    [[ $(candidate \"abAB\") = \"131\" ]]\n\
    \    [[ $(candidate \"abcCd\") = \"67\" ]]\n    [[ $(candidate \"helloE\") = \"\
    69\" ]]\n    [[ $(candidate \"woArBld\") = \"131\" ]]\n    [[ $(candidate \"aAaaaXa\"\
    ) = \"153\" ]]\n    [[ $(candidate \" How are yOu?\") = \"151\" ]]\n    [[ $(candidate\
    \ \"You arE Very Smart\") = \"327\" ]]\n}\n\nrun_test"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660003061
- exit_code: 0
  program: "#!/bin/bash\n# Task\n# Write a function that takes a string as input and\
    \ returns the sum of the upper characters only'\n# ASCII codes.\n# Examples:\n\
    #\n# $1 is a string\ndigitSum() {\n  local sum=0\n  for (( i=0; i<${#1}; i++ ));\
    \ do\n    local char=${1:i:1}\n    if [[ $char =~ [A-Z] ]]; then\n      sum=$((sum\
    \ + $(printf \"%d\" \"'$char\")))\n    fi\n  done\n  echo $sum\n}\n\ncandidate()\
    \ {\n    digitSum \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"\")\
    \ = \"0\" ]]\n    [[ $(candidate \"abAB\") = \"131\" ]]\n    [[ $(candidate \"\
    abcCd\") = \"67\" ]]\n    [[ $(candidate \"helloE\") = \"69\" ]]\n    [[ $(candidate\
    \ \"woArBld\") = \"131\" ]]\n    [[ $(candidate \"aAaaaXa\") = \"153\" ]]\n  \
    \  [[ $(candidate \" How are yOu?\") = \"151\" ]]\n    [[ $(candidate \"You arE\
    \ Very Smart\") = \"327\" ]]\n}\n\nrun_test"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660003061
- exit_code: 1
  program: "#!/bin/bash\n# Task\n# Write a function that takes a string as input and\
    \ returns the sum of the upper characters only'\n# ASCII codes.\n# Examples:\n\
    #\n# $1 is a string\ndigitSum() {\n    local -i sum=0\n    local -i i=0\n    local\
    \ -i len=${#1}\n    while [ $i -lt $len ]; do\n        local -i c=${1:$i:1}\n\
    \        if [ $c -ge 65 ] && [ $c -le 90 ]; then\n            ((sum+=c))\n   \
    \     fi\n        ((i++))\n    done\n    echo $sum\n}\n\ncandidate() {\n    digitSum\
    \ \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"\") = \"0\" ]]\n   \
    \ [[ $(candidate \"abAB\") = \"131\" ]]\n    [[ $(candidate \"abcCd\") = \"67\"\
    \ ]]\n    [[ $(candidate \"helloE\") = \"69\" ]]\n    [[ $(candidate \"woArBld\"\
    ) = \"131\" ]]\n    [[ $(candidate \"aAaaaXa\") = \"153\" ]]\n    [[ $(candidate\
    \ \" How are yOu?\") = \"151\" ]]\n    [[ $(candidate \"You arE Very Smart\")\
    \ = \"327\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660003061
- exit_code: 1
  program: "#!/bin/bash\n# Task\n# Write a function that takes a string as input and\
    \ returns the sum of the upper characters only'\n# ASCII codes.\n# Examples:\n\
    #\n# $1 is a string\ndigitSum() {\n    local sum=0\n    for (( i=0; i<${#1}; i++\
    \ )); do\n        local char=${1:i:1}\n        if [[ $char =~ [A-Z] ]]; then\n\
    \            sum=$((sum+${char}))\n        fi\n    done\n    echo $sum\n}\n\n\
    candidate() {\n    digitSum \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate\
    \ \"\") = \"0\" ]]\n    [[ $(candidate \"abAB\") = \"131\" ]]\n    [[ $(candidate\
    \ \"abcCd\") = \"67\" ]]\n    [[ $(candidate \"helloE\") = \"69\" ]]\n    [[ $(candidate\
    \ \"woArBld\") = \"131\" ]]\n    [[ $(candidate \"aAaaaXa\") = \"153\" ]]\n  \
    \  [[ $(candidate \" How are yOu?\") = \"151\" ]]\n    [[ $(candidate \"You arE\
    \ Very Smart\") = \"327\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660003061
- exit_code: 0
  program: "#!/bin/bash\n# Task\n# Write a function that takes a string as input and\
    \ returns the sum of the upper characters only'\n# ASCII codes.\n# Examples:\n\
    #\n# $1 is a string\ndigitSum() {\n    local sum=0\n    for (( i=0; i<${#1}; i++\
    \ )); do\n        local ascii=$(printf '%d' \"'${1:$i:1}\")\n        if (( ascii\
    \ >= 65 && ascii <= 90 )); then\n            (( sum += ascii ))\n        fi\n\
    \    done\n    echo $sum\n}\n\ncandidate() {\n    digitSum \"$@\"\n}\n\nset -e\n\
    run_test() {\n    [[ $(candidate \"\") = \"0\" ]]\n    [[ $(candidate \"abAB\"\
    ) = \"131\" ]]\n    [[ $(candidate \"abcCd\") = \"67\" ]]\n    [[ $(candidate\
    \ \"helloE\") = \"69\" ]]\n    [[ $(candidate \"woArBld\") = \"131\" ]]\n    [[\
    \ $(candidate \"aAaaaXa\") = \"153\" ]]\n    [[ $(candidate \" How are yOu?\"\
    ) = \"151\" ]]\n    [[ $(candidate \"You arE Very Smart\") = \"327\" ]]\n}\n\n\
    run_test"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660003061
- exit_code: 0
  program: "#!/bin/bash\n# Task\n# Write a function that takes a string as input and\
    \ returns the sum of the upper characters only'\n# ASCII codes.\n# Examples:\n\
    #\n# $1 is a string\ndigitSum() {\n    local sum=0\n    for (( i=0; i<${#1}; i++\
    \ )); do\n        local char=${1:i:1}\n        if [[ $char =~ [A-Z] ]]; then\n\
    \            sum=$(( sum + $(printf \"%d\" \"'$char\") ))\n        fi\n    done\n\
    \    echo $sum\n}\n\ncandidate() {\n    digitSum \"$@\"\n}\n\nset -e\nrun_test()\
    \ {\n    [[ $(candidate \"\") = \"0\" ]]\n    [[ $(candidate \"abAB\") = \"131\"\
    \ ]]\n    [[ $(candidate \"abcCd\") = \"67\" ]]\n    [[ $(candidate \"helloE\"\
    ) = \"69\" ]]\n    [[ $(candidate \"woArBld\") = \"131\" ]]\n    [[ $(candidate\
    \ \"aAaaaXa\") = \"153\" ]]\n    [[ $(candidate \" How are yOu?\") = \"151\" ]]\n\
    \    [[ $(candidate \"You arE Very Smart\") = \"327\" ]]\n}\n\nrun_test"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660003061
- exit_code: 0
  program: "#!/bin/bash\n# Task\n# Write a function that takes a string as input and\
    \ returns the sum of the upper characters only'\n# ASCII codes.\n# Examples:\n\
    #\n# $1 is a string\ndigitSum() {\n    local sum=0\n    for (( i=0; i<${#1}; i++\
    \ )); do\n        local char=${1:i:1}\n        local ascii=$(printf \"%d\" \"\
    '$char\")\n        if [[ $ascii -ge 65 && $ascii -le 90 ]]; then\n           \
    \ ((sum+=ascii))\n        fi\n    done\n    echo $sum\n}\n\ncandidate() {\n  \
    \  digitSum \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"\") = \"0\"\
    \ ]]\n    [[ $(candidate \"abAB\") = \"131\" ]]\n    [[ $(candidate \"abcCd\"\
    ) = \"67\" ]]\n    [[ $(candidate \"helloE\") = \"69\" ]]\n    [[ $(candidate\
    \ \"woArBld\") = \"131\" ]]\n    [[ $(candidate \"aAaaaXa\") = \"153\" ]]\n  \
    \  [[ $(candidate \" How are yOu?\") = \"151\" ]]\n    [[ $(candidate \"You arE\
    \ Very Smart\") = \"327\" ]]\n}\n\nrun_test"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660003061
- exit_code: 0
  program: "#!/bin/bash\n# Task\n# Write a function that takes a string as input and\
    \ returns the sum of the upper characters only'\n# ASCII codes.\n# Examples:\n\
    #\n# $1 is a string\ndigitSum() {\n    local sum=0\n    for (( i=0; i<${#1}; i++\
    \ )); do\n        local char=${1:i:1}\n        if [[ $char =~ [A-Z] ]]; then\n\
    \            sum=$(( sum + $(printf \"%d\" \"'$char\") ))\n        fi\n    done\n\
    \    echo $sum\n}\n\ncandidate() {\n    digitSum \"$@\"\n}\n\nset -e\nrun_test()\
    \ {\n    [[ $(candidate \"\") = \"0\" ]]\n    [[ $(candidate \"abAB\") = \"131\"\
    \ ]]\n    [[ $(candidate \"abcCd\") = \"67\" ]]\n    [[ $(candidate \"helloE\"\
    ) = \"69\" ]]\n    [[ $(candidate \"woArBld\") = \"131\" ]]\n    [[ $(candidate\
    \ \"aAaaaXa\") = \"153\" ]]\n    [[ $(candidate \" How are yOu?\") = \"151\" ]]\n\
    \    [[ $(candidate \"You arE Very Smart\") = \"327\" ]]\n}\n\nrun_test"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660003061
- exit_code: 1
  program: "#!/bin/bash\n# Task\n# Write a function that takes a string as input and\
    \ returns the sum of the upper characters only'\n# ASCII codes.\n# Examples:\n\
    #\n# $1 is a string\ndigitSum() {\n    local sum=0\n    local str=$1\n    for\
    \ (( i=0; i<${#str}; i++ )); do\n        local char=${str:$i:1}\n        if [[\
    \ $char =~ [A-Z] ]]; then\n            sum=$((sum+${char}))\n        fi\n    done\n\
    \    echo $sum\n}\n\ncandidate() {\n    digitSum \"$@\"\n}\n\nset -e\nrun_test()\
    \ {\n    [[ $(candidate \"\") = \"0\" ]]\n    [[ $(candidate \"abAB\") = \"131\"\
    \ ]]\n    [[ $(candidate \"abcCd\") = \"67\" ]]\n    [[ $(candidate \"helloE\"\
    ) = \"69\" ]]\n    [[ $(candidate \"woArBld\") = \"131\" ]]\n    [[ $(candidate\
    \ \"aAaaaXa\") = \"153\" ]]\n    [[ $(candidate \" How are yOu?\") = \"151\" ]]\n\
    \    [[ $(candidate \"You arE Very Smart\") = \"327\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660003061
- exit_code: 1
  program: "#!/bin/bash\n# Task\n# Write a function that takes a string as input and\
    \ returns the sum of the upper characters only'\n# ASCII codes.\n# Examples:\n\
    #\n# $1 is a string\ndigitSum() {\n    local sum=0\n    local str=$1\n    for\
    \ (( i=0; i<${#str}; i++ )); do\n        local char=${str:$i:1}\n        if [[\
    \ $char =~ [A-Z] ]]; then\n            sum=$((sum+${char}))\n        fi\n    done\n\
    \    echo $sum\n}\n\ncandidate() {\n    digitSum \"$@\"\n}\n\nset -e\nrun_test()\
    \ {\n    [[ $(candidate \"\") = \"0\" ]]\n    [[ $(candidate \"abAB\") = \"131\"\
    \ ]]\n    [[ $(candidate \"abcCd\") = \"67\" ]]\n    [[ $(candidate \"helloE\"\
    ) = \"69\" ]]\n    [[ $(candidate \"woArBld\") = \"131\" ]]\n    [[ $(candidate\
    \ \"aAaaaXa\") = \"153\" ]]\n    [[ $(candidate \" How are yOu?\") = \"151\" ]]\n\
    \    [[ $(candidate \"You arE Very Smart\") = \"327\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660003061
- exit_code: 0
  program: "#!/bin/bash\n# Task\n# Write a function that takes a string as input and\
    \ returns the sum of the upper characters only'\n# ASCII codes.\n# Examples:\n\
    #\n# $1 is a string\ndigitSum() {\n    local sum=0\n    for (( i=0; i<${#1}; i++\
    \ )); do\n        local char=${1:i:1}\n        if [[ $char =~ [A-Z] ]]; then\n\
    \            sum=$(( sum + $(printf \"%d\" \"'$char\") ))\n        fi\n    done\n\
    \    echo $sum\n}\n\ncandidate() {\n    digitSum \"$@\"\n}\n\nset -e\nrun_test()\
    \ {\n    [[ $(candidate \"\") = \"0\" ]]\n    [[ $(candidate \"abAB\") = \"131\"\
    \ ]]\n    [[ $(candidate \"abcCd\") = \"67\" ]]\n    [[ $(candidate \"helloE\"\
    ) = \"69\" ]]\n    [[ $(candidate \"woArBld\") = \"131\" ]]\n    [[ $(candidate\
    \ \"aAaaaXa\") = \"153\" ]]\n    [[ $(candidate \" How are yOu?\") = \"151\" ]]\n\
    \    [[ $(candidate \"You arE Very Smart\") = \"327\" ]]\n}\n\nrun_test"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660003061
- exit_code: 0
  program: "#!/bin/bash\n# Task\n# Write a function that takes a string as input and\
    \ returns the sum of the upper characters only'\n# ASCII codes.\n# Examples:\n\
    #\n# $1 is a string\ndigitSum() {\n  local sum=0\n  for (( i=0; i<${#1}; i++ ));\
    \ do\n    local char=${1:i:1}\n    if [[ $char =~ [A-Z] ]]; then\n      sum=$((\
    \ sum + $(printf \"%d\" \"'$char\") ))\n    fi\n  done\n  echo $sum\n}\n\ncandidate()\
    \ {\n    digitSum \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"\")\
    \ = \"0\" ]]\n    [[ $(candidate \"abAB\") = \"131\" ]]\n    [[ $(candidate \"\
    abcCd\") = \"67\" ]]\n    [[ $(candidate \"helloE\") = \"69\" ]]\n    [[ $(candidate\
    \ \"woArBld\") = \"131\" ]]\n    [[ $(candidate \"aAaaaXa\") = \"153\" ]]\n  \
    \  [[ $(candidate \" How are yOu?\") = \"151\" ]]\n    [[ $(candidate \"You arE\
    \ Very Smart\") = \"327\" ]]\n}\n\nrun_test"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660003061
- exit_code: 0
  program: "#!/bin/bash\n# Task\n# Write a function that takes a string as input and\
    \ returns the sum of the upper characters only'\n# ASCII codes.\n# Examples:\n\
    #\n# $1 is a string\ndigitSum() {\n    local sum=0\n    for (( i=0; i<${#1}; i++\
    \ )); do\n        local char=${1:i:1}\n        if [[ $char =~ [A-Z] ]]; then\n\
    \            sum=$(( sum + $(printf \"%d\" \"'$char\") ))\n        fi\n    done\n\
    \    echo $sum\n}\n\ncandidate() {\n    digitSum \"$@\"\n}\n\nset -e\nrun_test()\
    \ {\n    [[ $(candidate \"\") = \"0\" ]]\n    [[ $(candidate \"abAB\") = \"131\"\
    \ ]]\n    [[ $(candidate \"abcCd\") = \"67\" ]]\n    [[ $(candidate \"helloE\"\
    ) = \"69\" ]]\n    [[ $(candidate \"woArBld\") = \"131\" ]]\n    [[ $(candidate\
    \ \"aAaaaXa\") = \"153\" ]]\n    [[ $(candidate \" How are yOu?\") = \"151\" ]]\n\
    \    [[ $(candidate \"You arE Very Smart\") = \"327\" ]]\n}\n\nrun_test"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660003061
- exit_code: 1
  program: "#!/bin/bash\n# Task\n# Write a function that takes a string as input and\
    \ returns the sum of the upper characters only'\n# ASCII codes.\n# Examples:\n\
    #\n# $1 is a string\ndigitSum() {\n  local sum=0\n  for (( i=0; i<${#1}; i++ ));\
    \ do\n    (( ${1:$i:1} < 65 || ${1:$i:1} > 90 )) && continue\n    (( sum += ${1:$i:1}\
    \ ))\n  done\n  echo $sum\n}\n\ncandidate() {\n    digitSum \"$@\"\n}\n\nset -e\n\
    run_test() {\n    [[ $(candidate \"\") = \"0\" ]]\n    [[ $(candidate \"abAB\"\
    ) = \"131\" ]]\n    [[ $(candidate \"abcCd\") = \"67\" ]]\n    [[ $(candidate\
    \ \"helloE\") = \"69\" ]]\n    [[ $(candidate \"woArBld\") = \"131\" ]]\n    [[\
    \ $(candidate \"aAaaaXa\") = \"153\" ]]\n    [[ $(candidate \" How are yOu?\"\
    ) = \"151\" ]]\n    [[ $(candidate \"You arE Very Smart\") = \"327\" ]]\n}\n\n\
    run_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660003061
- exit_code: 0
  program: "#!/bin/bash\n# Task\n# Write a function that takes a string as input and\
    \ returns the sum of the upper characters only'\n# ASCII codes.\n# Examples:\n\
    #\n# $1 is a string\ndigitSum() {\n    local sum=0\n    for (( i=0; i<${#1}; i++\
    \ )); do\n        local char=${1:i:1}\n        if [[ $char =~ [A-Z] ]]; then\n\
    \            sum=$(( sum + $(printf \"%d\" \"'$char\") ))\n        fi\n    done\n\
    \    echo $sum\n}\n\ncandidate() {\n    digitSum \"$@\"\n}\n\nset -e\nrun_test()\
    \ {\n    [[ $(candidate \"\") = \"0\" ]]\n    [[ $(candidate \"abAB\") = \"131\"\
    \ ]]\n    [[ $(candidate \"abcCd\") = \"67\" ]]\n    [[ $(candidate \"helloE\"\
    ) = \"69\" ]]\n    [[ $(candidate \"woArBld\") = \"131\" ]]\n    [[ $(candidate\
    \ \"aAaaaXa\") = \"153\" ]]\n    [[ $(candidate \" How are yOu?\") = \"151\" ]]\n\
    \    [[ $(candidate \"You arE Very Smart\") = \"327\" ]]\n}\n\nrun_test"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660003061
- exit_code: 1
  program: "#!/bin/bash\n# Task\n# Write a function that takes a string as input and\
    \ returns the sum of the upper characters only'\n# ASCII codes.\n# Examples:\n\
    #\n# $1 is a string\ndigitSum() {\n    local sum=0\n    for (( i=0; i<${#1}; i++\
    \ )); do\n        local char=${1:i:1}\n        if [[ $char =~ [A-Z] ]]; then\n\
    \            sum=$((sum+${char}))\n        fi\n    done\n    echo $sum\n}\n\n\
    candidate() {\n    digitSum \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate\
    \ \"\") = \"0\" ]]\n    [[ $(candidate \"abAB\") = \"131\" ]]\n    [[ $(candidate\
    \ \"abcCd\") = \"67\" ]]\n    [[ $(candidate \"helloE\") = \"69\" ]]\n    [[ $(candidate\
    \ \"woArBld\") = \"131\" ]]\n    [[ $(candidate \"aAaaaXa\") = \"153\" ]]\n  \
    \  [[ $(candidate \" How are yOu?\") = \"151\" ]]\n    [[ $(candidate \"You arE\
    \ Very Smart\") = \"327\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660003061
- exit_code: 0
  program: "#!/bin/bash\n# Task\n# Write a function that takes a string as input and\
    \ returns the sum of the upper characters only'\n# ASCII codes.\n# Examples:\n\
    #\n# $1 is a string\ndigitSum() {\n  local sum=0\n  for (( i=0; i<${#1}; i++ ));\
    \ do\n    local char=${1:i:1}\n    if [[ $char =~ [A-Z] ]]; then\n      sum=$((\
    \ sum + $(printf \"%d\" \"'$char\") ))\n    fi\n  done\n  echo $sum\n}\n\ncandidate()\
    \ {\n    digitSum \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"\")\
    \ = \"0\" ]]\n    [[ $(candidate \"abAB\") = \"131\" ]]\n    [[ $(candidate \"\
    abcCd\") = \"67\" ]]\n    [[ $(candidate \"helloE\") = \"69\" ]]\n    [[ $(candidate\
    \ \"woArBld\") = \"131\" ]]\n    [[ $(candidate \"aAaaaXa\") = \"153\" ]]\n  \
    \  [[ $(candidate \" How are yOu?\") = \"151\" ]]\n    [[ $(candidate \"You arE\
    \ Very Smart\") = \"327\" ]]\n}\n\nrun_test"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660003061
- exit_code: 1
  program: "#!/bin/bash\n# Task\n# Write a function that takes a string as input and\
    \ returns the sum of the upper characters only'\n# ASCII codes.\n# Examples:\n\
    #\n# $1 is a string\ndigitSum() {\n    local sum=0\n    for (( i=0; i<${#1}; i++\
    \ )); do\n        c=${1:i:1}\n        if [[ $c =~ [A-Z] ]]; then\n           \
    \ sum=$((sum+${c}))\n        fi\n    done\n    echo $sum\n}\n\ncandidate() {\n\
    \    digitSum \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"\") = \"\
    0\" ]]\n    [[ $(candidate \"abAB\") = \"131\" ]]\n    [[ $(candidate \"abcCd\"\
    ) = \"67\" ]]\n    [[ $(candidate \"helloE\") = \"69\" ]]\n    [[ $(candidate\
    \ \"woArBld\") = \"131\" ]]\n    [[ $(candidate \"aAaaaXa\") = \"153\" ]]\n  \
    \  [[ $(candidate \" How are yOu?\") = \"151\" ]]\n    [[ $(candidate \"You arE\
    \ Very Smart\") = \"327\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660003061
- exit_code: 0
  program: "#!/bin/bash\n# Task\n# Write a function that takes a string as input and\
    \ returns the sum of the upper characters only'\n# ASCII codes.\n# Examples:\n\
    #\n# $1 is a string\ndigitSum() {\n  local sum=0\n  for (( i=0; i<${#1}; i++ ));\
    \ do\n    local char=${1:i:1}\n    if [[ $char =~ [A-Z] ]]; then\n      sum=$((\
    \ sum + $(printf \"%d\" \"'$char\") ))\n    fi\n  done\n  echo $sum\n}\n\ncandidate()\
    \ {\n    digitSum \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"\")\
    \ = \"0\" ]]\n    [[ $(candidate \"abAB\") = \"131\" ]]\n    [[ $(candidate \"\
    abcCd\") = \"67\" ]]\n    [[ $(candidate \"helloE\") = \"69\" ]]\n    [[ $(candidate\
    \ \"woArBld\") = \"131\" ]]\n    [[ $(candidate \"aAaaaXa\") = \"153\" ]]\n  \
    \  [[ $(candidate \" How are yOu?\") = \"151\" ]]\n    [[ $(candidate \"You arE\
    \ Very Smart\") = \"327\" ]]\n}\n\nrun_test"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660003061
- exit_code: 0
  program: "#!/bin/bash\n# Task\n# Write a function that takes a string as input and\
    \ returns the sum of the upper characters only'\n# ASCII codes.\n# Examples:\n\
    #\n# $1 is a string\ndigitSum() {\n    local sum=0\n    for (( i=0; i<${#1}; i++\
    \ )); do\n        local char=${1:i:1}\n        if [[ $char =~ [A-Z] ]]; then\n\
    \            sum=$(( sum + $(printf '%d' \"'$char\") ))\n        fi\n    done\n\
    \    echo $sum\n}\n\ncandidate() {\n    digitSum \"$@\"\n}\n\nset -e\nrun_test()\
    \ {\n    [[ $(candidate \"\") = \"0\" ]]\n    [[ $(candidate \"abAB\") = \"131\"\
    \ ]]\n    [[ $(candidate \"abcCd\") = \"67\" ]]\n    [[ $(candidate \"helloE\"\
    ) = \"69\" ]]\n    [[ $(candidate \"woArBld\") = \"131\" ]]\n    [[ $(candidate\
    \ \"aAaaaXa\") = \"153\" ]]\n    [[ $(candidate \" How are yOu?\") = \"151\" ]]\n\
    \    [[ $(candidate \"You arE Very Smart\") = \"327\" ]]\n}\n\nrun_test"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660003061
- exit_code: 0
  program: "#!/bin/bash\n# Task\n# Write a function that takes a string as input and\
    \ returns the sum of the upper characters only'\n# ASCII codes.\n# Examples:\n\
    #\n# $1 is a string\ndigitSum() {\n    local sum=0\n    local str=$1\n    for\
    \ (( i=0; i<${#str}; i++ )); do\n        local char=${str:$i:1}\n        local\
    \ ascii=$(printf \"%d\" \"'$char\")\n        if [[ $ascii -ge 65 && $ascii -le\
    \ 90 ]]; then\n            sum=$((sum + ascii))\n        fi\n    done\n    echo\
    \ $sum\n}\n\ncandidate() {\n    digitSum \"$@\"\n}\n\nset -e\nrun_test() {\n \
    \   [[ $(candidate \"\") = \"0\" ]]\n    [[ $(candidate \"abAB\") = \"131\" ]]\n\
    \    [[ $(candidate \"abcCd\") = \"67\" ]]\n    [[ $(candidate \"helloE\") = \"\
    69\" ]]\n    [[ $(candidate \"woArBld\") = \"131\" ]]\n    [[ $(candidate \"aAaaaXa\"\
    ) = \"153\" ]]\n    [[ $(candidate \" How are yOu?\") = \"151\" ]]\n    [[ $(candidate\
    \ \"You arE Very Smart\") = \"327\" ]]\n}\n\nrun_test"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660003061
- exit_code: 0
  program: "#!/bin/bash\n# Task\n# Write a function that takes a string as input and\
    \ returns the sum of the upper characters only'\n# ASCII codes.\n# Examples:\n\
    #\n# $1 is a string\ndigitSum() {\n    local sum=0\n    for (( i=0; i<${#1}; i++\
    \ )); do\n        local char=${1:i:1}\n        if [[ $char =~ [A-Z] ]]; then\n\
    \            sum=$(( sum + $(printf \"%d\" \"'$char\") ))\n        fi\n    done\n\
    \    echo $sum\n}\n\ncandidate() {\n    digitSum \"$@\"\n}\n\nset -e\nrun_test()\
    \ {\n    [[ $(candidate \"\") = \"0\" ]]\n    [[ $(candidate \"abAB\") = \"131\"\
    \ ]]\n    [[ $(candidate \"abcCd\") = \"67\" ]]\n    [[ $(candidate \"helloE\"\
    ) = \"69\" ]]\n    [[ $(candidate \"woArBld\") = \"131\" ]]\n    [[ $(candidate\
    \ \"aAaaaXa\") = \"153\" ]]\n    [[ $(candidate \" How are yOu?\") = \"151\" ]]\n\
    \    [[ $(candidate \"You arE Very Smart\") = \"327\" ]]\n}\n\nrun_test"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660003061
- exit_code: 0
  program: "#!/bin/bash\n# Task\n# Write a function that takes a string as input and\
    \ returns the sum of the upper characters only'\n# ASCII codes.\n# Examples:\n\
    #\n# $1 is a string\ndigitSum() {\n    local sum=0\n    for (( i=0; i<${#1}; i++\
    \ )); do\n        local char=${1:i:1}\n        if [[ $char =~ [A-Z] ]]; then\n\
    \            sum=$(( sum + $(printf \"%d\" \"'$char\") ))\n        fi\n    done\n\
    \    echo $sum\n}\n\ncandidate() {\n    digitSum \"$@\"\n}\n\nset -e\nrun_test()\
    \ {\n    [[ $(candidate \"\") = \"0\" ]]\n    [[ $(candidate \"abAB\") = \"131\"\
    \ ]]\n    [[ $(candidate \"abcCd\") = \"67\" ]]\n    [[ $(candidate \"helloE\"\
    ) = \"69\" ]]\n    [[ $(candidate \"woArBld\") = \"131\" ]]\n    [[ $(candidate\
    \ \"aAaaaXa\") = \"153\" ]]\n    [[ $(candidate \" How are yOu?\") = \"151\" ]]\n\
    \    [[ $(candidate \"You arE Very Smart\") = \"327\" ]]\n}\n\nrun_test"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660003061
- exit_code: 0
  program: "#!/bin/bash\n# Task\n# Write a function that takes a string as input and\
    \ returns the sum of the upper characters only'\n# ASCII codes.\n# Examples:\n\
    #\n# $1 is a string\ndigitSum() {\n    local sum=0\n    for (( i=0; i<${#1}; i++\
    \ )); do\n        local char=${1:i:1}\n        if [[ $char =~ [A-Z] ]]; then\n\
    \            sum=$((sum + $(printf \"%d\" \"'$char\")))\n        fi\n    done\n\
    \    echo $sum\n}\n\ncandidate() {\n    digitSum \"$@\"\n}\n\nset -e\nrun_test()\
    \ {\n    [[ $(candidate \"\") = \"0\" ]]\n    [[ $(candidate \"abAB\") = \"131\"\
    \ ]]\n    [[ $(candidate \"abcCd\") = \"67\" ]]\n    [[ $(candidate \"helloE\"\
    ) = \"69\" ]]\n    [[ $(candidate \"woArBld\") = \"131\" ]]\n    [[ $(candidate\
    \ \"aAaaaXa\") = \"153\" ]]\n    [[ $(candidate \" How are yOu?\") = \"151\" ]]\n\
    \    [[ $(candidate \"You arE Very Smart\") = \"327\" ]]\n}\n\nrun_test"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660003061
- exit_code: 0
  program: "#!/bin/bash\n# Task\n# Write a function that takes a string as input and\
    \ returns the sum of the upper characters only'\n# ASCII codes.\n# Examples:\n\
    #\n# $1 is a string\ndigitSum() {\n    local sum=0\n    for (( i=0; i<${#1}; i++\
    \ )); do\n        local char=${1:i:1}\n        if [[ $char =~ [A-Z] ]]; then\n\
    \            sum=$((sum + $(printf \"%d\" \"'$char\")))\n        fi\n    done\n\
    \    echo $sum\n}\n\ncandidate() {\n    digitSum \"$@\"\n}\n\nset -e\nrun_test()\
    \ {\n    [[ $(candidate \"\") = \"0\" ]]\n    [[ $(candidate \"abAB\") = \"131\"\
    \ ]]\n    [[ $(candidate \"abcCd\") = \"67\" ]]\n    [[ $(candidate \"helloE\"\
    ) = \"69\" ]]\n    [[ $(candidate \"woArBld\") = \"131\" ]]\n    [[ $(candidate\
    \ \"aAaaaXa\") = \"153\" ]]\n    [[ $(candidate \" How are yOu?\") = \"151\" ]]\n\
    \    [[ $(candidate \"You arE Very Smart\") = \"327\" ]]\n}\n\nrun_test"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660003061
- exit_code: 0
  program: "#!/bin/bash\n# Task\n# Write a function that takes a string as input and\
    \ returns the sum of the upper characters only'\n# ASCII codes.\n# Examples:\n\
    #\n# $1 is a string\ndigitSum() {\n  local sum=0\n  for (( i=0; i<${#1}; i++ ));\
    \ do\n    local char=${1:i:1}\n    if [[ $char =~ [A-Z] ]]; then\n      sum=$((\
    \ sum + $(printf \"%d\" \"'$char\") ))\n    fi\n  done\n  echo $sum\n}\n\ncandidate()\
    \ {\n    digitSum \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"\")\
    \ = \"0\" ]]\n    [[ $(candidate \"abAB\") = \"131\" ]]\n    [[ $(candidate \"\
    abcCd\") = \"67\" ]]\n    [[ $(candidate \"helloE\") = \"69\" ]]\n    [[ $(candidate\
    \ \"woArBld\") = \"131\" ]]\n    [[ $(candidate \"aAaaaXa\") = \"153\" ]]\n  \
    \  [[ $(candidate \" How are yOu?\") = \"151\" ]]\n    [[ $(candidate \"You arE\
    \ Very Smart\") = \"327\" ]]\n}\n\nrun_test"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660003061
- exit_code: 0
  program: "#!/bin/bash\n# Task\n# Write a function that takes a string as input and\
    \ returns the sum of the upper characters only'\n# ASCII codes.\n# Examples:\n\
    #\n# $1 is a string\ndigitSum() {\n  local sum=0\n  local str=$1\n  for (( i=0;\
    \ i<${#str}; i++ )); do\n    local char=${str:$i:1}\n    if [[ $char =~ [A-Z]\
    \ ]]; then\n      sum=$((sum + $(printf \"%d\" \"'$char\")))\n    fi\n  done\n\
    \  echo $sum\n}\n\ncandidate() {\n    digitSum \"$@\"\n}\n\nset -e\nrun_test()\
    \ {\n    [[ $(candidate \"\") = \"0\" ]]\n    [[ $(candidate \"abAB\") = \"131\"\
    \ ]]\n    [[ $(candidate \"abcCd\") = \"67\" ]]\n    [[ $(candidate \"helloE\"\
    ) = \"69\" ]]\n    [[ $(candidate \"woArBld\") = \"131\" ]]\n    [[ $(candidate\
    \ \"aAaaaXa\") = \"153\" ]]\n    [[ $(candidate \" How are yOu?\") = \"151\" ]]\n\
    \    [[ $(candidate \"You arE Very Smart\") = \"327\" ]]\n}\n\nrun_test"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660003061
- exit_code: 0
  program: "#!/bin/bash\n# Task\n# Write a function that takes a string as input and\
    \ returns the sum of the upper characters only'\n# ASCII codes.\n# Examples:\n\
    #\n# $1 is a string\ndigitSum() {\n    local sum=0\n    for (( i=0; i<${#1}; i++\
    \ )); do\n        local char=${1:i:1}\n        if [[ $char =~ [A-Z] ]]; then\n\
    \            sum=$((sum + $(printf \"%d\" \"'$char\")))\n        fi\n    done\n\
    \    echo $sum\n}\n\ncandidate() {\n    digitSum \"$@\"\n}\n\nset -e\nrun_test()\
    \ {\n    [[ $(candidate \"\") = \"0\" ]]\n    [[ $(candidate \"abAB\") = \"131\"\
    \ ]]\n    [[ $(candidate \"abcCd\") = \"67\" ]]\n    [[ $(candidate \"helloE\"\
    ) = \"69\" ]]\n    [[ $(candidate \"woArBld\") = \"131\" ]]\n    [[ $(candidate\
    \ \"aAaaaXa\") = \"153\" ]]\n    [[ $(candidate \" How are yOu?\") = \"151\" ]]\n\
    \    [[ $(candidate \"You arE Very Smart\") = \"327\" ]]\n}\n\nrun_test"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660003061
- exit_code: 1
  program: "#!/bin/bash\n# Task\n# Write a function that takes a string as input and\
    \ returns the sum of the upper characters only'\n# ASCII codes.\n# Examples:\n\
    #\n# $1 is a string\ndigitSum() {\n    local sum=0\n    for (( i=0; i<${#1}; i++\
    \ )); do\n        local char=${1:i:1}\n        if [[ $char =~ [A-Z] ]]; then\n\
    \            sum=$((sum+${char}))\n        fi\n    done\n    echo $sum\n}\n\n\
    candidate() {\n    digitSum \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate\
    \ \"\") = \"0\" ]]\n    [[ $(candidate \"abAB\") = \"131\" ]]\n    [[ $(candidate\
    \ \"abcCd\") = \"67\" ]]\n    [[ $(candidate \"helloE\") = \"69\" ]]\n    [[ $(candidate\
    \ \"woArBld\") = \"131\" ]]\n    [[ $(candidate \"aAaaaXa\") = \"153\" ]]\n  \
    \  [[ $(candidate \" How are yOu?\") = \"151\" ]]\n    [[ $(candidate \"You arE\
    \ Very Smart\") = \"327\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660003061
- exit_code: 1
  program: "#!/bin/bash\n# Task\n# Write a function that takes a string as input and\
    \ returns the sum of the upper characters only'\n# ASCII codes.\n# Examples:\n\
    #\n# $1 is a string\ndigitSum() {\n    local sum=0\n    for (( i=0; i<${#1}; i++\
    \ )); do\n        local char=${1:i:1}\n        if [[ $char =~ [A-Z] ]]; then\n\
    \            sum=$((sum+${char}))\n        fi\n    done\n    echo $sum\n}\n\n\
    candidate() {\n    digitSum \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate\
    \ \"\") = \"0\" ]]\n    [[ $(candidate \"abAB\") = \"131\" ]]\n    [[ $(candidate\
    \ \"abcCd\") = \"67\" ]]\n    [[ $(candidate \"helloE\") = \"69\" ]]\n    [[ $(candidate\
    \ \"woArBld\") = \"131\" ]]\n    [[ $(candidate \"aAaaaXa\") = \"153\" ]]\n  \
    \  [[ $(candidate \" How are yOu?\") = \"151\" ]]\n    [[ $(candidate \"You arE\
    \ Very Smart\") = \"327\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660003061
- exit_code: 0
  program: "#!/bin/bash\n# Task\n# Write a function that takes a string as input and\
    \ returns the sum of the upper characters only'\n# ASCII codes.\n# Examples:\n\
    #\n# $1 is a string\ndigitSum() {\n    local sum=0\n    for (( i=0; i<${#1}; i++\
    \ )); do\n        local char=${1:i:1}\n        if [[ $char =~ [A-Z] ]]; then\n\
    \            sum=$(( sum + $(printf \"%d\" \"'$char\") ))\n        fi\n    done\n\
    \    echo $sum\n}\n\ncandidate() {\n    digitSum \"$@\"\n}\n\nset -e\nrun_test()\
    \ {\n    [[ $(candidate \"\") = \"0\" ]]\n    [[ $(candidate \"abAB\") = \"131\"\
    \ ]]\n    [[ $(candidate \"abcCd\") = \"67\" ]]\n    [[ $(candidate \"helloE\"\
    ) = \"69\" ]]\n    [[ $(candidate \"woArBld\") = \"131\" ]]\n    [[ $(candidate\
    \ \"aAaaaXa\") = \"153\" ]]\n    [[ $(candidate \" How are yOu?\") = \"151\" ]]\n\
    \    [[ $(candidate \"You arE Very Smart\") = \"327\" ]]\n}\n\nrun_test"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660003061
- exit_code: 0
  program: "#!/bin/bash\n# Task\n# Write a function that takes a string as input and\
    \ returns the sum of the upper characters only'\n# ASCII codes.\n# Examples:\n\
    #\n# $1 is a string\ndigitSum() {\n  local sum=0\n  for (( i=0; i<${#1}; i++ ));\
    \ do\n    local char=${1:i:1}\n    if [[ $char =~ [A-Z] ]]; then\n      sum=$((sum\
    \ + $(printf \"%d\" \"'$char\")))\n    fi\n  done\n  echo $sum\n}\n\ncandidate()\
    \ {\n    digitSum \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"\")\
    \ = \"0\" ]]\n    [[ $(candidate \"abAB\") = \"131\" ]]\n    [[ $(candidate \"\
    abcCd\") = \"67\" ]]\n    [[ $(candidate \"helloE\") = \"69\" ]]\n    [[ $(candidate\
    \ \"woArBld\") = \"131\" ]]\n    [[ $(candidate \"aAaaaXa\") = \"153\" ]]\n  \
    \  [[ $(candidate \" How are yOu?\") = \"151\" ]]\n    [[ $(candidate \"You arE\
    \ Very Smart\") = \"327\" ]]\n}\n\nrun_test"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660003061
- exit_code: 1
  program: "#!/bin/bash\n# Task\n# Write a function that takes a string as input and\
    \ returns the sum of the upper characters only'\n# ASCII codes.\n# Examples:\n\
    #\n# $1 is a string\ndigitSum() {\n    local sum=0\n    local str=$1\n    for\
    \ (( i=0; i<${#str}; i++ )); do\n        local char=${str:$i:1}\n        if [[\
    \ $char =~ [A-Z] ]]; then\n            sum=$((sum+${char}))\n        fi\n    done\n\
    \    echo $sum\n}\n\ncandidate() {\n    digitSum \"$@\"\n}\n\nset -e\nrun_test()\
    \ {\n    [[ $(candidate \"\") = \"0\" ]]\n    [[ $(candidate \"abAB\") = \"131\"\
    \ ]]\n    [[ $(candidate \"abcCd\") = \"67\" ]]\n    [[ $(candidate \"helloE\"\
    ) = \"69\" ]]\n    [[ $(candidate \"woArBld\") = \"131\" ]]\n    [[ $(candidate\
    \ \"aAaaaXa\") = \"153\" ]]\n    [[ $(candidate \" How are yOu?\") = \"151\" ]]\n\
    \    [[ $(candidate \"You arE Very Smart\") = \"327\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660003061
- exit_code: 1
  program: "#!/bin/bash\n# Task\n# Write a function that takes a string as input and\
    \ returns the sum of the upper characters only'\n# ASCII codes.\n# Examples:\n\
    #\n# $1 is a string\ndigitSum() {\n    local sum=0\n    for (( i=0; i<${#1}; i++\
    \ )); do\n        local ascii=${1:$i:1}\n        if [[ $ascii =~ [A-Z] ]]; then\n\
    \            sum=$((sum+ascii))\n        fi\n    done\n    echo $sum\n}\n\ncandidate()\
    \ {\n    digitSum \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"\")\
    \ = \"0\" ]]\n    [[ $(candidate \"abAB\") = \"131\" ]]\n    [[ $(candidate \"\
    abcCd\") = \"67\" ]]\n    [[ $(candidate \"helloE\") = \"69\" ]]\n    [[ $(candidate\
    \ \"woArBld\") = \"131\" ]]\n    [[ $(candidate \"aAaaaXa\") = \"153\" ]]\n  \
    \  [[ $(candidate \" How are yOu?\") = \"151\" ]]\n    [[ $(candidate \"You arE\
    \ Very Smart\") = \"327\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660003061
- exit_code: 1
  program: "#!/bin/bash\n# Task\n# Write a function that takes a string as input and\
    \ returns the sum of the upper characters only'\n# ASCII codes.\n# Examples:\n\
    #\n# $1 is a string\ndigitSum() {\n    local sum=0\n    for (( i=0; i<${#1}; i++\
    \ )); do\n        local char=${1:i:1}\n        if [[ $char =~ [A-Z] ]]; then\n\
    \            sum=$((sum+${char}))\n        fi\n    done\n    echo $sum\n}\n\n\
    candidate() {\n    digitSum \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate\
    \ \"\") = \"0\" ]]\n    [[ $(candidate \"abAB\") = \"131\" ]]\n    [[ $(candidate\
    \ \"abcCd\") = \"67\" ]]\n    [[ $(candidate \"helloE\") = \"69\" ]]\n    [[ $(candidate\
    \ \"woArBld\") = \"131\" ]]\n    [[ $(candidate \"aAaaaXa\") = \"153\" ]]\n  \
    \  [[ $(candidate \" How are yOu?\") = \"151\" ]]\n    [[ $(candidate \"You arE\
    \ Very Smart\") = \"327\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660003061
- exit_code: 0
  program: "#!/bin/bash\n# Task\n# Write a function that takes a string as input and\
    \ returns the sum of the upper characters only'\n# ASCII codes.\n# Examples:\n\
    #\n# $1 is a string\ndigitSum() {\n    local sum=0\n    for (( i=0; i<${#1}; i++\
    \ )); do\n        local char=${1:i:1}\n        if [[ $char =~ [A-Z] ]]; then\n\
    \            sum=$(( sum + $(printf \"%d\" \"'$char\") ))\n        fi\n    done\n\
    \    echo $sum\n}\n\ncandidate() {\n    digitSum \"$@\"\n}\n\nset -e\nrun_test()\
    \ {\n    [[ $(candidate \"\") = \"0\" ]]\n    [[ $(candidate \"abAB\") = \"131\"\
    \ ]]\n    [[ $(candidate \"abcCd\") = \"67\" ]]\n    [[ $(candidate \"helloE\"\
    ) = \"69\" ]]\n    [[ $(candidate \"woArBld\") = \"131\" ]]\n    [[ $(candidate\
    \ \"aAaaaXa\") = \"153\" ]]\n    [[ $(candidate \" How are yOu?\") = \"151\" ]]\n\
    \    [[ $(candidate \"You arE Very Smart\") = \"327\" ]]\n}\n\nrun_test"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660003061
- exit_code: 1
  program: "#!/bin/bash\n# Task\n# Write a function that takes a string as input and\
    \ returns the sum of the upper characters only'\n# ASCII codes.\n# Examples:\n\
    #\n# $1 is a string\ndigitSum() {\n    local sum=0\n    for (( i=0; i<${#1}; i++\
    \ )); do\n        local char=${1:i:1}\n        if [[ $char =~ [A-Z] ]]; then\n\
    \            sum=$((sum+${char}))\n        fi\n    done\n    echo $sum\n}\n\n\
    candidate() {\n    digitSum \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate\
    \ \"\") = \"0\" ]]\n    [[ $(candidate \"abAB\") = \"131\" ]]\n    [[ $(candidate\
    \ \"abcCd\") = \"67\" ]]\n    [[ $(candidate \"helloE\") = \"69\" ]]\n    [[ $(candidate\
    \ \"woArBld\") = \"131\" ]]\n    [[ $(candidate \"aAaaaXa\") = \"153\" ]]\n  \
    \  [[ $(candidate \" How are yOu?\") = \"151\" ]]\n    [[ $(candidate \"You arE\
    \ Very Smart\") = \"327\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660003061
- exit_code: 0
  program: "#!/bin/bash\n# Task\n# Write a function that takes a string as input and\
    \ returns the sum of the upper characters only'\n# ASCII codes.\n# Examples:\n\
    #\n# $1 is a string\ndigitSum() {\n  local sum=0\n  local str=$1\n  for (( i=0;\
    \ i<${#str}; i++ )); do\n    local char=${str:$i:1}\n    local ascii=$(printf\
    \ \"%d\" \"'$char\")\n    if [[ $ascii -ge 65 && $ascii -le 90 ]]; then\n    \
    \  (( sum += ascii ))\n    fi\n  done\n  echo $sum\n}\n\ncandidate() {\n    digitSum\
    \ \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"\") = \"0\" ]]\n   \
    \ [[ $(candidate \"abAB\") = \"131\" ]]\n    [[ $(candidate \"abcCd\") = \"67\"\
    \ ]]\n    [[ $(candidate \"helloE\") = \"69\" ]]\n    [[ $(candidate \"woArBld\"\
    ) = \"131\" ]]\n    [[ $(candidate \"aAaaaXa\") = \"153\" ]]\n    [[ $(candidate\
    \ \" How are yOu?\") = \"151\" ]]\n    [[ $(candidate \"You arE Very Smart\")\
    \ = \"327\" ]]\n}\n\nrun_test"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660003061
- exit_code: 0
  program: "#!/bin/bash\n# Task\n# Write a function that takes a string as input and\
    \ returns the sum of the upper characters only'\n# ASCII codes.\n# Examples:\n\
    #\n# $1 is a string\ndigitSum() {\n    local sum=0\n    for (( i=0; i<${#1}; i++\
    \ )); do\n        local char=${1:i:1}\n        if [[ $char =~ [A-Z] ]]; then\n\
    \            sum=$((sum + $(printf \"%d\" \"'$char\")))\n        fi\n    done\n\
    \    echo $sum\n}\n\ncandidate() {\n    digitSum \"$@\"\n}\n\nset -e\nrun_test()\
    \ {\n    [[ $(candidate \"\") = \"0\" ]]\n    [[ $(candidate \"abAB\") = \"131\"\
    \ ]]\n    [[ $(candidate \"abcCd\") = \"67\" ]]\n    [[ $(candidate \"helloE\"\
    ) = \"69\" ]]\n    [[ $(candidate \"woArBld\") = \"131\" ]]\n    [[ $(candidate\
    \ \"aAaaaXa\") = \"153\" ]]\n    [[ $(candidate \" How are yOu?\") = \"151\" ]]\n\
    \    [[ $(candidate \"You arE Very Smart\") = \"327\" ]]\n}\n\nrun_test"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660003061
- exit_code: 0
  program: "#!/bin/bash\n# Task\n# Write a function that takes a string as input and\
    \ returns the sum of the upper characters only'\n# ASCII codes.\n# Examples:\n\
    #\n# $1 is a string\ndigitSum() {\n    local sum=0\n    for (( i=0; i<${#1}; i++\
    \ )); do\n        local char=${1:i:1}\n        if [[ $char =~ [A-Z] ]]; then\n\
    \            sum=$((sum + $(printf \"%d\" \"'$char\")))\n        fi\n    done\n\
    \    echo $sum\n}\n\ncandidate() {\n    digitSum \"$@\"\n}\n\nset -e\nrun_test()\
    \ {\n    [[ $(candidate \"\") = \"0\" ]]\n    [[ $(candidate \"abAB\") = \"131\"\
    \ ]]\n    [[ $(candidate \"abcCd\") = \"67\" ]]\n    [[ $(candidate \"helloE\"\
    ) = \"69\" ]]\n    [[ $(candidate \"woArBld\") = \"131\" ]]\n    [[ $(candidate\
    \ \"aAaaaXa\") = \"153\" ]]\n    [[ $(candidate \" How are yOu?\") = \"151\" ]]\n\
    \    [[ $(candidate \"You arE Very Smart\") = \"327\" ]]\n}\n\nrun_test"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660003061
- exit_code: 0
  program: "#!/bin/bash\n# Task\n# Write a function that takes a string as input and\
    \ returns the sum of the upper characters only'\n# ASCII codes.\n# Examples:\n\
    #\n# $1 is a string\ndigitSum() {\n    local sum=0\n    for (( i=0; i<${#1}; i++\
    \ )); do\n        local ascii=$(printf \"%d\" \"'${1:$i:1}\")\n        if (( $ascii\
    \ >= 65 && $ascii <= 90 )); then\n            (( sum += $ascii ))\n        fi\n\
    \    done\n    echo $sum\n}\n\ncandidate() {\n    digitSum \"$@\"\n}\n\nset -e\n\
    run_test() {\n    [[ $(candidate \"\") = \"0\" ]]\n    [[ $(candidate \"abAB\"\
    ) = \"131\" ]]\n    [[ $(candidate \"abcCd\") = \"67\" ]]\n    [[ $(candidate\
    \ \"helloE\") = \"69\" ]]\n    [[ $(candidate \"woArBld\") = \"131\" ]]\n    [[\
    \ $(candidate \"aAaaaXa\") = \"153\" ]]\n    [[ $(candidate \" How are yOu?\"\
    ) = \"151\" ]]\n    [[ $(candidate \"You arE Very Smart\") = \"327\" ]]\n}\n\n\
    run_test"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660003061
- exit_code: 0
  program: "#!/bin/bash\n# Task\n# Write a function that takes a string as input and\
    \ returns the sum of the upper characters only'\n# ASCII codes.\n# Examples:\n\
    #\n# $1 is a string\ndigitSum() {\n    local sum=0\n    local str=\"$1\"\n   \
    \ local i=0\n    local len=${#str}\n    while [ $i -lt $len ]; do\n        local\
    \ char=${str:$i:1}\n        local ascii=$(printf \"%d\" \"'$char\")\n        if\
    \ [ $ascii -ge 65 ] && [ $ascii -le 90 ]; then\n            sum=$((sum + ascii))\n\
    \        fi\n        i=$((i + 1))\n    done\n    echo $sum\n}\n\ncandidate() {\n\
    \    digitSum \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"\") = \"\
    0\" ]]\n    [[ $(candidate \"abAB\") = \"131\" ]]\n    [[ $(candidate \"abcCd\"\
    ) = \"67\" ]]\n    [[ $(candidate \"helloE\") = \"69\" ]]\n    [[ $(candidate\
    \ \"woArBld\") = \"131\" ]]\n    [[ $(candidate \"aAaaaXa\") = \"153\" ]]\n  \
    \  [[ $(candidate \" How are yOu?\") = \"151\" ]]\n    [[ $(candidate \"You arE\
    \ Very Smart\") = \"327\" ]]\n}\n\nrun_test"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660003061
- exit_code: 1
  program: "#!/bin/bash\n# Task\n# Write a function that takes a string as input and\
    \ returns the sum of the upper characters only'\n# ASCII codes.\n# Examples:\n\
    #\n# $1 is a string\ndigitSum() {\n    local sum=0\n    local str=$1\n    for\
    \ (( i=0; i<${#str}; i++ )); do\n        local char=${str:$i:1}\n        if [[\
    \ $char =~ [A-Z] ]]; then\n            sum=$((sum+$char))\n        fi\n    done\n\
    \    echo $sum\n}\n\ncandidate() {\n    digitSum \"$@\"\n}\n\nset -e\nrun_test()\
    \ {\n    [[ $(candidate \"\") = \"0\" ]]\n    [[ $(candidate \"abAB\") = \"131\"\
    \ ]]\n    [[ $(candidate \"abcCd\") = \"67\" ]]\n    [[ $(candidate \"helloE\"\
    ) = \"69\" ]]\n    [[ $(candidate \"woArBld\") = \"131\" ]]\n    [[ $(candidate\
    \ \"aAaaaXa\") = \"153\" ]]\n    [[ $(candidate \" How are yOu?\") = \"151\" ]]\n\
    \    [[ $(candidate \"You arE Very Smart\") = \"327\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660003061
- exit_code: 0
  program: "#!/bin/bash\n# Task\n# Write a function that takes a string as input and\
    \ returns the sum of the upper characters only'\n# ASCII codes.\n# Examples:\n\
    #\n# $1 is a string\ndigitSum() {\n  local sum=0\n  for (( i=0; i<${#1}; i++ ));\
    \ do\n    local char=${1:i:1}\n    if [[ $char =~ [A-Z] ]]; then\n      sum=$((sum\
    \ + $(printf \"%d\" \"'$char\")))\n    fi\n  done\n  echo $sum\n}\n\ncandidate()\
    \ {\n    digitSum \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"\")\
    \ = \"0\" ]]\n    [[ $(candidate \"abAB\") = \"131\" ]]\n    [[ $(candidate \"\
    abcCd\") = \"67\" ]]\n    [[ $(candidate \"helloE\") = \"69\" ]]\n    [[ $(candidate\
    \ \"woArBld\") = \"131\" ]]\n    [[ $(candidate \"aAaaaXa\") = \"153\" ]]\n  \
    \  [[ $(candidate \" How are yOu?\") = \"151\" ]]\n    [[ $(candidate \"You arE\
    \ Very Smart\") = \"327\" ]]\n}\n\nrun_test"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660003061
- exit_code: 0
  program: "#!/bin/bash\n# Task\n# Write a function that takes a string as input and\
    \ returns the sum of the upper characters only'\n# ASCII codes.\n# Examples:\n\
    #\n# $1 is a string\ndigitSum() {\n    local sum=0\n    for (( i=0; i<${#1}; i++\
    \ )); do\n        local ascii=$(printf \"%d\" \"'${1:$i:1}\")\n        if [[ $ascii\
    \ -ge 65 && $ascii -le 90 ]]; then\n            (( sum+=ascii ))\n        fi\n\
    \    done\n    echo $sum\n}\n\ncandidate() {\n    digitSum \"$@\"\n}\n\nset -e\n\
    run_test() {\n    [[ $(candidate \"\") = \"0\" ]]\n    [[ $(candidate \"abAB\"\
    ) = \"131\" ]]\n    [[ $(candidate \"abcCd\") = \"67\" ]]\n    [[ $(candidate\
    \ \"helloE\") = \"69\" ]]\n    [[ $(candidate \"woArBld\") = \"131\" ]]\n    [[\
    \ $(candidate \"aAaaaXa\") = \"153\" ]]\n    [[ $(candidate \" How are yOu?\"\
    ) = \"151\" ]]\n    [[ $(candidate \"You arE Very Smart\") = \"327\" ]]\n}\n\n\
    run_test"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660003061
- exit_code: 1
  program: "#!/bin/bash\n# Task\n# Write a function that takes a string as input and\
    \ returns the sum of the upper characters only'\n# ASCII codes.\n# Examples:\n\
    #\n# $1 is a string\ndigitSum() {\n    # Write your code here\n    echo \"$1\"\
    \ | grep -o \"[A-Z]\" | awk '{sum+=$1} END {print sum}'\n}\n\ncandidate() {\n\
    \    digitSum \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"\") = \"\
    0\" ]]\n    [[ $(candidate \"abAB\") = \"131\" ]]\n    [[ $(candidate \"abcCd\"\
    ) = \"67\" ]]\n    [[ $(candidate \"helloE\") = \"69\" ]]\n    [[ $(candidate\
    \ \"woArBld\") = \"131\" ]]\n    [[ $(candidate \"aAaaaXa\") = \"153\" ]]\n  \
    \  [[ $(candidate \" How are yOu?\") = \"151\" ]]\n    [[ $(candidate \"You arE\
    \ Very Smart\") = \"327\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660003061
- exit_code: 0
  program: "#!/bin/bash\n# Task\n# Write a function that takes a string as input and\
    \ returns the sum of the upper characters only'\n# ASCII codes.\n# Examples:\n\
    #\n# $1 is a string\ndigitSum() {\n    local sum=0\n    for (( i=0; i<${#1}; i++\
    \ )); do\n        local char=${1:i:1}\n        if [[ $char =~ [A-Z] ]]; then\n\
    \            sum=$((sum + $(printf \"%d\" \"'$char\")))\n        fi\n    done\n\
    \    echo $sum\n}\n\ncandidate() {\n    digitSum \"$@\"\n}\n\nset -e\nrun_test()\
    \ {\n    [[ $(candidate \"\") = \"0\" ]]\n    [[ $(candidate \"abAB\") = \"131\"\
    \ ]]\n    [[ $(candidate \"abcCd\") = \"67\" ]]\n    [[ $(candidate \"helloE\"\
    ) = \"69\" ]]\n    [[ $(candidate \"woArBld\") = \"131\" ]]\n    [[ $(candidate\
    \ \"aAaaaXa\") = \"153\" ]]\n    [[ $(candidate \" How are yOu?\") = \"151\" ]]\n\
    \    [[ $(candidate \"You arE Very Smart\") = \"327\" ]]\n}\n\nrun_test"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660003061
- exit_code: 0
  program: "#!/bin/bash\n# Task\n# Write a function that takes a string as input and\
    \ returns the sum of the upper characters only'\n# ASCII codes.\n# Examples:\n\
    #\n# $1 is a string\ndigitSum() {\n  local sum=0\n  for (( i=0; i<${#1}; i++ ));\
    \ do\n    local char=${1:i:1}\n    if [[ \"$char\" =~ [A-Z] ]]; then\n      ((\
    \ sum += $(printf \"%d\" \"'$char\") ))\n    fi\n  done\n  echo $sum\n}\n\ncandidate()\
    \ {\n    digitSum \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"\")\
    \ = \"0\" ]]\n    [[ $(candidate \"abAB\") = \"131\" ]]\n    [[ $(candidate \"\
    abcCd\") = \"67\" ]]\n    [[ $(candidate \"helloE\") = \"69\" ]]\n    [[ $(candidate\
    \ \"woArBld\") = \"131\" ]]\n    [[ $(candidate \"aAaaaXa\") = \"153\" ]]\n  \
    \  [[ $(candidate \" How are yOu?\") = \"151\" ]]\n    [[ $(candidate \"You arE\
    \ Very Smart\") = \"327\" ]]\n}\n\nrun_test"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660003061
- exit_code: 0
  program: "#!/bin/bash\n# Task\n# Write a function that takes a string as input and\
    \ returns the sum of the upper characters only'\n# ASCII codes.\n# Examples:\n\
    #\n# $1 is a string\ndigitSum() {\n    local sum=0\n    for (( i=0; i<${#1}; i++\
    \ )); do\n        local char=${1:i:1}\n        if [[ $char =~ [A-Z] ]]; then\n\
    \            (( sum += $(printf \"%d\" \"'$char\") ))\n        fi\n    done\n\
    \    echo $sum\n}\n\ncandidate() {\n    digitSum \"$@\"\n}\n\nset -e\nrun_test()\
    \ {\n    [[ $(candidate \"\") = \"0\" ]]\n    [[ $(candidate \"abAB\") = \"131\"\
    \ ]]\n    [[ $(candidate \"abcCd\") = \"67\" ]]\n    [[ $(candidate \"helloE\"\
    ) = \"69\" ]]\n    [[ $(candidate \"woArBld\") = \"131\" ]]\n    [[ $(candidate\
    \ \"aAaaaXa\") = \"153\" ]]\n    [[ $(candidate \" How are yOu?\") = \"151\" ]]\n\
    \    [[ $(candidate \"You arE Very Smart\") = \"327\" ]]\n}\n\nrun_test"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660003061
- exit_code: 0
  program: "#!/bin/bash\n# Task\n# Write a function that takes a string as input and\
    \ returns the sum of the upper characters only'\n# ASCII codes.\n# Examples:\n\
    #\n# $1 is a string\ndigitSum() {\n    local sum=0\n    for (( i=0; i<${#1}; i++\
    \ )); do\n        local char=${1:i:1}\n        local ascii=$(printf \"%d\" \"\
    '$char\")\n        if [[ $ascii -ge 65 && $ascii -le 90 ]]; then\n           \
    \ ((sum+=ascii))\n        fi\n    done\n    echo $sum\n}\n\ncandidate() {\n  \
    \  digitSum \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"\") = \"0\"\
    \ ]]\n    [[ $(candidate \"abAB\") = \"131\" ]]\n    [[ $(candidate \"abcCd\"\
    ) = \"67\" ]]\n    [[ $(candidate \"helloE\") = \"69\" ]]\n    [[ $(candidate\
    \ \"woArBld\") = \"131\" ]]\n    [[ $(candidate \"aAaaaXa\") = \"153\" ]]\n  \
    \  [[ $(candidate \" How are yOu?\") = \"151\" ]]\n    [[ $(candidate \"You arE\
    \ Very Smart\") = \"327\" ]]\n}\n\nrun_test"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660003061
- exit_code: 1
  program: "#!/bin/bash\n# Task\n# Write a function that takes a string as input and\
    \ returns the sum of the upper characters only'\n# ASCII codes.\n# Examples:\n\
    #\n# $1 is a string\ndigitSum() {\n    local sum=0\n    for (( i=0; i<${#1}; i++\
    \ )); do\n        local char=${1:i:1}\n        if [[ \"$char\" =~ [A-Z] ]]; then\n\
    \            sum=$((sum+${char}))\n        fi\n    done\n    echo $sum\n}\n\n\
    candidate() {\n    digitSum \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate\
    \ \"\") = \"0\" ]]\n    [[ $(candidate \"abAB\") = \"131\" ]]\n    [[ $(candidate\
    \ \"abcCd\") = \"67\" ]]\n    [[ $(candidate \"helloE\") = \"69\" ]]\n    [[ $(candidate\
    \ \"woArBld\") = \"131\" ]]\n    [[ $(candidate \"aAaaaXa\") = \"153\" ]]\n  \
    \  [[ $(candidate \" How are yOu?\") = \"151\" ]]\n    [[ $(candidate \"You arE\
    \ Very Smart\") = \"327\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660003061
- exit_code: 0
  program: "#!/bin/bash\n# Task\n# Write a function that takes a string as input and\
    \ returns the sum of the upper characters only'\n# ASCII codes.\n# Examples:\n\
    #\n# $1 is a string\ndigitSum() {\n  local sum=0\n  for (( i=0; i<${#1}; i++ ));\
    \ do\n    local char=${1:i:1}\n    if [[ $char =~ [A-Z] ]]; then\n      sum=$((\
    \ sum + $(printf \"%d\" \"'$char\") ))\n    fi\n  done\n  echo $sum\n}\n\ncandidate()\
    \ {\n    digitSum \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"\")\
    \ = \"0\" ]]\n    [[ $(candidate \"abAB\") = \"131\" ]]\n    [[ $(candidate \"\
    abcCd\") = \"67\" ]]\n    [[ $(candidate \"helloE\") = \"69\" ]]\n    [[ $(candidate\
    \ \"woArBld\") = \"131\" ]]\n    [[ $(candidate \"aAaaaXa\") = \"153\" ]]\n  \
    \  [[ $(candidate \" How are yOu?\") = \"151\" ]]\n    [[ $(candidate \"You arE\
    \ Very Smart\") = \"327\" ]]\n}\n\nrun_test"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660003061
- exit_code: 0
  program: "#!/bin/bash\n# Task\n# Write a function that takes a string as input and\
    \ returns the sum of the upper characters only'\n# ASCII codes.\n# Examples:\n\
    #\n# $1 is a string\ndigitSum() {\n    local sum=0\n    for (( i=0; i<${#1}; i++\
    \ )); do\n        local char=${1:i:1}\n        local ascii=$(printf \"%d\" \"\
    '$char\")\n        if [[ $ascii -ge 65 && $ascii -le 90 ]]; then\n           \
    \ ((sum+=ascii))\n        fi\n    done\n    echo $sum\n}\n\ncandidate() {\n  \
    \  digitSum \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"\") = \"0\"\
    \ ]]\n    [[ $(candidate \"abAB\") = \"131\" ]]\n    [[ $(candidate \"abcCd\"\
    ) = \"67\" ]]\n    [[ $(candidate \"helloE\") = \"69\" ]]\n    [[ $(candidate\
    \ \"woArBld\") = \"131\" ]]\n    [[ $(candidate \"aAaaaXa\") = \"153\" ]]\n  \
    \  [[ $(candidate \" How are yOu?\") = \"151\" ]]\n    [[ $(candidate \"You arE\
    \ Very Smart\") = \"327\" ]]\n}\n\nrun_test"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660003061

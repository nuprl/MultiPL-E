language: sh
name: HumanEval_108_count_nums
results:
- exit_code: 1
  program: "#!/bin/bash\n# Write a function count_nums which takes an array of integers\
    \ and returns\n# the number of elements which has a sum of digits > 0.\n# If a\
    \ number is negative, then its first signed digit will be negative:\n# e.g. -123\
    \ has signed digits -1, 2, and 3.\n#\n# $1 is a space-separated list\ncount_nums()\
    \ {\n    local -a nums=($1)\n    local -i sum=0\n    local -i count=0\n    for\
    \ num in \"${nums[@]}\"; do\n        if [[ $num -lt 0 ]]; then\n            num=${num:1}\n\
    \        fi\n        while [[ $num -gt 0 ]]; do\n            sum=$((sum + num\
    \ % 10))\n            num=$((num / 10))\n        done\n        if [[ $sum -gt\
    \ 0 ]]; then\n            count=$((count + 1))\n        fi\n        sum=0\n  \
    \  done\n    echo $count\n}\n\ncandidate() {\n    count_nums \"$@\"\n}\n\nset\
    \ -e\nrun_test() {\n    [[ $(candidate \"\") = \"0\" ]]\n    [[ $(candidate \"\
    -1 -2 0\") = \"0\" ]]\n    [[ $(candidate \"1 1 2 -2 3 4 5\") = \"6\" ]]\n   \
    \ [[ $(candidate \"1 6 9 -6 0 1 5\") = \"5\" ]]\n    [[ $(candidate \"1 100 98\
    \ -7 1 -1\") = \"4\" ]]\n    [[ $(candidate \"12 23 34 -45 -56 0\") = \"5\" ]]\n\
    \    [[ $(candidate \"0 1\") = \"1\" ]]\n    [[ $(candidate \"1\") = \"1\" ]]\n\
    }\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660004373
- exit_code: 1
  program: "#!/bin/bash\n# Write a function count_nums which takes an array of integers\
    \ and returns\n# the number of elements which has a sum of digits > 0.\n# If a\
    \ number is negative, then its first signed digit will be negative:\n# e.g. -123\
    \ has signed digits -1, 2, and 3.\n#\n# $1 is a space-separated list\ncount_nums()\
    \ {\n  local -a array=(\"$@\")\n  local count=0\n  for i in \"${array[@]}\"; do\n\
    \    local sum=0\n    local num=${i#-}\n    while [[ $num -gt 0 ]]; do\n     \
    \ sum=$((sum + num % 10))\n      num=$((num / 10))\n    done\n    if [[ $sum -gt\
    \ 0 ]]; then\n      count=$((count + 1))\n    fi\n  done\n  echo $count\n}\n\n\
    candidate() {\n    count_nums \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate\
    \ \"\") = \"0\" ]]\n    [[ $(candidate \"-1 -2 0\") = \"0\" ]]\n    [[ $(candidate\
    \ \"1 1 2 -2 3 4 5\") = \"6\" ]]\n    [[ $(candidate \"1 6 9 -6 0 1 5\") = \"\
    5\" ]]\n    [[ $(candidate \"1 100 98 -7 1 -1\") = \"4\" ]]\n    [[ $(candidate\
    \ \"12 23 34 -45 -56 0\") = \"5\" ]]\n    [[ $(candidate \"0 1\") = \"1\" ]]\n\
    \    [[ $(candidate \"1\") = \"1\" ]]\n}\n\nrun_test"
  status: SyntaxError
  stderr: '/tmp/tmp37ac10o3.sh: line 14: [[: 1 -2 0: syntax error in expression (error
    token is "0")

    /tmp/tmp37ac10o3.sh: line 14: [[: 1 1 2 -2 3 4 5: syntax error in expression (error
    token is "1 2 -2 3 4 5")

    '
  stdout: ''
  timestamp: 1660004373
- exit_code: 1
  program: "#!/bin/bash\n# Write a function count_nums which takes an array of integers\
    \ and returns\n# the number of elements which has a sum of digits > 0.\n# If a\
    \ number is negative, then its first signed digit will be negative:\n# e.g. -123\
    \ has signed digits -1, 2, and 3.\n#\n# $1 is a space-separated list\ncount_nums()\
    \ {\n    local sum=0\n    local num\n    for num in $1; do\n        if (( num\
    \ < 0 )); then\n            num=$(( -num ))\n        fi\n        while (( num\
    \ > 0 )); do\n            sum=$(( sum + num % 10 ))\n            num=$(( num /\
    \ 10 ))\n        done\n    done\n    echo $sum\n}\n\ncandidate() {\n    count_nums\
    \ \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"\") = \"0\" ]]\n   \
    \ [[ $(candidate \"-1 -2 0\") = \"0\" ]]\n    [[ $(candidate \"1 1 2 -2 3 4 5\"\
    ) = \"6\" ]]\n    [[ $(candidate \"1 6 9 -6 0 1 5\") = \"5\" ]]\n    [[ $(candidate\
    \ \"1 100 98 -7 1 -1\") = \"4\" ]]\n    [[ $(candidate \"12 23 34 -45 -56 0\"\
    ) = \"5\" ]]\n    [[ $(candidate \"0 1\") = \"1\" ]]\n    [[ $(candidate \"1\"\
    ) = \"1\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660004373
- exit_code: 1
  program: "#!/bin/bash\n# Write a function count_nums which takes an array of integers\
    \ and returns\n# the number of elements which has a sum of digits > 0.\n# If a\
    \ number is negative, then its first signed digit will be negative:\n# e.g. -123\
    \ has signed digits -1, 2, and 3.\n#\n# $1 is a space-separated list\ncount_nums()\
    \ {\n    declare -a arr=(\"$@\")\n    local count=0\n    for i in \"${arr[@]}\"\
    ; do\n        local sum=0\n        if (( i < 0 )); then\n            i=$(( -i\
    \ ))\n        fi\n        while (( i > 0 )); do\n            sum=$(( sum + i %\
    \ 10 ))\n            i=$(( i / 10 ))\n        done\n        if (( sum > 0 ));\
    \ then\n            count=$(( count + 1 ))\n        fi\n    done\n    echo \"\
    $count\"\n}\n\ncandidate() {\n    count_nums \"$@\"\n}\n\nset -e\nrun_test() {\n\
    \    [[ $(candidate \"\") = \"0\" ]]\n    [[ $(candidate \"-1 -2 0\") = \"0\"\
    \ ]]\n    [[ $(candidate \"1 1 2 -2 3 4 5\") = \"6\" ]]\n    [[ $(candidate \"\
    1 6 9 -6 0 1 5\") = \"5\" ]]\n    [[ $(candidate \"1 100 98 -7 1 -1\") = \"4\"\
    \ ]]\n    [[ $(candidate \"12 23 34 -45 -56 0\") = \"5\" ]]\n    [[ $(candidate\
    \ \"0 1\") = \"1\" ]]\n    [[ $(candidate \"1\") = \"1\" ]]\n}\n\nrun_test"
  status: SyntaxError
  stderr: '/tmp/tmpfn7ln1cw.sh: line 13: ((: -1 -2 0: syntax error in expression (error
    token is "0")

    /tmp/tmpfn7ln1cw.sh: line 16: ((: -1 -2 0: syntax error in expression (error token
    is "0")

    /tmp/tmpfn7ln1cw.sh: line 13: ((: 1 1 2 -2 3 4 5: syntax error in expression (error
    token is "1 2 -2 3 4 5")

    /tmp/tmpfn7ln1cw.sh: line 16: ((: 1 1 2 -2 3 4 5: syntax error in expression (error
    token is "1 2 -2 3 4 5")

    '
  stdout: ''
  timestamp: 1660004373
- exit_code: 1
  program: "#!/bin/bash\n# Write a function count_nums which takes an array of integers\
    \ and returns\n# the number of elements which has a sum of digits > 0.\n# If a\
    \ number is negative, then its first signed digit will be negative:\n# e.g. -123\
    \ has signed digits -1, 2, and 3.\n#\n# $1 is a space-separated list\ncount_nums()\
    \ {\n    local -a arr\n    local -i sum=0\n    local -i i=0\n    local -i count=0\n\
    \    arr=($1)\n    for ((i=0; i<${#arr[@]}; i++)); do\n        if ((arr[i] < 0));\
    \ then\n            sum=$((sum + arr[i] * -1))\n        else\n            sum=$((sum\
    \ + arr[i]))\n        fi\n        if ((sum > 0)); then\n            count=$((count\
    \ + 1))\n        fi\n    done\n    echo $count\n}\n\ncandidate() {\n    count_nums\
    \ \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"\") = \"0\" ]]\n   \
    \ [[ $(candidate \"-1 -2 0\") = \"0\" ]]\n    [[ $(candidate \"1 1 2 -2 3 4 5\"\
    ) = \"6\" ]]\n    [[ $(candidate \"1 6 9 -6 0 1 5\") = \"5\" ]]\n    [[ $(candidate\
    \ \"1 100 98 -7 1 -1\") = \"4\" ]]\n    [[ $(candidate \"12 23 34 -45 -56 0\"\
    ) = \"5\" ]]\n    [[ $(candidate \"0 1\") = \"1\" ]]\n    [[ $(candidate \"1\"\
    ) = \"1\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660004373
- exit_code: 1
  program: "#!/bin/bash\n# Write a function count_nums which takes an array of integers\
    \ and returns\n# the number of elements which has a sum of digits > 0.\n# If a\
    \ number is negative, then its first signed digit will be negative:\n# e.g. -123\
    \ has signed digits -1, 2, and 3.\n#\n# $1 is a space-separated list\ncount_nums()\
    \ {\n    local -a arr=($1)\n    local -i sum=0\n    local -i count=0\n    for\
    \ i in \"${arr[@]}\"; do\n        if [[ $i -lt 0 ]]; then\n            i=${i:1}\n\
    \        fi\n        while [[ $i -gt 0 ]]; do\n            sum=$((sum + i % 10))\n\
    \            i=$((i / 10))\n        done\n        if [[ $sum -gt 0 ]]; then\n\
    \            count=$((count + 1))\n        fi\n        sum=0\n    done\n    echo\
    \ $count\n}\n\ncandidate() {\n    count_nums \"$@\"\n}\n\nset -e\nrun_test() {\n\
    \    [[ $(candidate \"\") = \"0\" ]]\n    [[ $(candidate \"-1 -2 0\") = \"0\"\
    \ ]]\n    [[ $(candidate \"1 1 2 -2 3 4 5\") = \"6\" ]]\n    [[ $(candidate \"\
    1 6 9 -6 0 1 5\") = \"5\" ]]\n    [[ $(candidate \"1 100 98 -7 1 -1\") = \"4\"\
    \ ]]\n    [[ $(candidate \"12 23 34 -45 -56 0\") = \"5\" ]]\n    [[ $(candidate\
    \ \"0 1\") = \"1\" ]]\n    [[ $(candidate \"1\") = \"1\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660004373
- exit_code: 1
  program: "#!/bin/bash\n# Write a function count_nums which takes an array of integers\
    \ and returns\n# the number of elements which has a sum of digits > 0.\n# If a\
    \ number is negative, then its first signed digit will be negative:\n# e.g. -123\
    \ has signed digits -1, 2, and 3.\n#\n# $1 is a space-separated list\ncount_nums()\
    \ {\n    local -a arr=($1)\n    local count=0\n    for i in \"${arr[@]}\"; do\n\
    \        local sum=0\n        if [[ $i -lt 0 ]]; then\n            i=$((-i))\n\
    \        fi\n        while [[ $i -gt 0 ]]; do\n            sum=$((sum + i % 10))\n\
    \            i=$((i / 10))\n        done\n        if [[ $sum -gt 0 ]]; then\n\
    \            count=$((count + 1))\n        fi\n    done\n    echo $count\n}\n\n\
    candidate() {\n    count_nums \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate\
    \ \"\") = \"0\" ]]\n    [[ $(candidate \"-1 -2 0\") = \"0\" ]]\n    [[ $(candidate\
    \ \"1 1 2 -2 3 4 5\") = \"6\" ]]\n    [[ $(candidate \"1 6 9 -6 0 1 5\") = \"\
    5\" ]]\n    [[ $(candidate \"1 100 98 -7 1 -1\") = \"4\" ]]\n    [[ $(candidate\
    \ \"12 23 34 -45 -56 0\") = \"5\" ]]\n    [[ $(candidate \"0 1\") = \"1\" ]]\n\
    \    [[ $(candidate \"1\") = \"1\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660004373
- exit_code: 1
  program: "#!/bin/bash\n# Write a function count_nums which takes an array of integers\
    \ and returns\n# the number of elements which has a sum of digits > 0.\n# If a\
    \ number is negative, then its first signed digit will be negative:\n# e.g. -123\
    \ has signed digits -1, 2, and 3.\n#\n# $1 is a space-separated list\ncount_nums()\
    \ {\n    local -a arr=($1)\n    local count=0\n    for i in \"${arr[@]}\"; do\n\
    \        local sum=0\n        if [[ $i -lt 0 ]]; then\n            i=$(( -i ))\n\
    \        fi\n        while [[ $i -gt 0 ]]; do\n            sum=$(( sum + i % 10\
    \ ))\n            i=$(( i / 10 ))\n        done\n        if [[ $sum -gt 0 ]];\
    \ then\n            count=$(( count + 1 ))\n        fi\n    done\n    echo $count\n\
    }\n\ncandidate() {\n    count_nums \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate\
    \ \"\") = \"0\" ]]\n    [[ $(candidate \"-1 -2 0\") = \"0\" ]]\n    [[ $(candidate\
    \ \"1 1 2 -2 3 4 5\") = \"6\" ]]\n    [[ $(candidate \"1 6 9 -6 0 1 5\") = \"\
    5\" ]]\n    [[ $(candidate \"1 100 98 -7 1 -1\") = \"4\" ]]\n    [[ $(candidate\
    \ \"12 23 34 -45 -56 0\") = \"5\" ]]\n    [[ $(candidate \"0 1\") = \"1\" ]]\n\
    \    [[ $(candidate \"1\") = \"1\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660004373
- exit_code: 1
  program: "#!/bin/bash\n# Write a function count_nums which takes an array of integers\
    \ and returns\n# the number of elements which has a sum of digits > 0.\n# If a\
    \ number is negative, then its first signed digit will be negative:\n# e.g. -123\
    \ has signed digits -1, 2, and 3.\n#\n# $1 is a space-separated list\ncount_nums()\
    \ {\n    local -a arr=(\"$@\")\n    local count=0\n    for i in \"${arr[@]}\"\
    ; do\n        local sum=0\n        if (( i < 0 )); then\n            i=$(( -i\
    \ ))\n        fi\n        while (( i > 0 )); do\n            sum=$(( sum + i %\
    \ 10 ))\n            i=$(( i / 10 ))\n        done\n        if (( sum > 0 ));\
    \ then\n            count=$(( count + 1 ))\n        fi\n    done\n    echo \"\
    $count\"\n}\n\ncandidate() {\n    count_nums \"$@\"\n}\n\nset -e\nrun_test() {\n\
    \    [[ $(candidate \"\") = \"0\" ]]\n    [[ $(candidate \"-1 -2 0\") = \"0\"\
    \ ]]\n    [[ $(candidate \"1 1 2 -2 3 4 5\") = \"6\" ]]\n    [[ $(candidate \"\
    1 6 9 -6 0 1 5\") = \"5\" ]]\n    [[ $(candidate \"1 100 98 -7 1 -1\") = \"4\"\
    \ ]]\n    [[ $(candidate \"12 23 34 -45 -56 0\") = \"5\" ]]\n    [[ $(candidate\
    \ \"0 1\") = \"1\" ]]\n    [[ $(candidate \"1\") = \"1\" ]]\n}\n\nrun_test"
  status: SyntaxError
  stderr: '/tmp/tmp22i0h1rp.sh: line 13: ((: -1 -2 0: syntax error in expression (error
    token is "0")

    /tmp/tmp22i0h1rp.sh: line 16: ((: -1 -2 0: syntax error in expression (error token
    is "0")

    /tmp/tmp22i0h1rp.sh: line 13: ((: 1 1 2 -2 3 4 5: syntax error in expression (error
    token is "1 2 -2 3 4 5")

    /tmp/tmp22i0h1rp.sh: line 16: ((: 1 1 2 -2 3 4 5: syntax error in expression (error
    token is "1 2 -2 3 4 5")

    '
  stdout: ''
  timestamp: 1660004373
- exit_code: 1
  program: "#!/bin/bash\n# Write a function count_nums which takes an array of integers\
    \ and returns\n# the number of elements which has a sum of digits > 0.\n# If a\
    \ number is negative, then its first signed digit will be negative:\n# e.g. -123\
    \ has signed digits -1, 2, and 3.\n#\n# $1 is a space-separated list\ncount_nums()\
    \ {\n    local -a nums=($1)\n    local count=0\n    for num in \"${nums[@]}\"\
    ; do\n        local sum=0\n        local n=$num\n        if ((n < 0)); then\n\
    \            n=$((-n))\n        fi\n        while ((n > 0)); do\n            sum=$((sum\
    \ + n % 10))\n            n=$((n / 10))\n        done\n        if ((sum > 0));\
    \ then\n            count=$((count + 1))\n        fi\n    done\n    echo $count\n\
    }\n\ncandidate() {\n    count_nums \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate\
    \ \"\") = \"0\" ]]\n    [[ $(candidate \"-1 -2 0\") = \"0\" ]]\n    [[ $(candidate\
    \ \"1 1 2 -2 3 4 5\") = \"6\" ]]\n    [[ $(candidate \"1 6 9 -6 0 1 5\") = \"\
    5\" ]]\n    [[ $(candidate \"1 100 98 -7 1 -1\") = \"4\" ]]\n    [[ $(candidate\
    \ \"12 23 34 -45 -56 0\") = \"5\" ]]\n    [[ $(candidate \"0 1\") = \"1\" ]]\n\
    \    [[ $(candidate \"1\") = \"1\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660004373
- exit_code: 1
  program: "#!/bin/bash\n# Write a function count_nums which takes an array of integers\
    \ and returns\n# the number of elements which has a sum of digits > 0.\n# If a\
    \ number is negative, then its first signed digit will be negative:\n# e.g. -123\
    \ has signed digits -1, 2, and 3.\n#\n# $1 is a space-separated list\ncount_nums()\
    \ {\n    local sum=0\n    local nums=($1)\n    local count=0\n    for num in ${nums[@]};\
    \ do\n        if [[ $num -lt 0 ]]; then\n            num=$((-num))\n        fi\n\
    \        while [[ $num -gt 0 ]]; do\n            sum=$((sum + num % 10))\n   \
    \         num=$((num / 10))\n        done\n        if [[ $sum -gt 0 ]]; then\n\
    \            count=$((count + 1))\n        fi\n        sum=0\n    done\n    echo\
    \ $count\n}\n\ncandidate() {\n    count_nums \"$@\"\n}\n\nset -e\nrun_test() {\n\
    \    [[ $(candidate \"\") = \"0\" ]]\n    [[ $(candidate \"-1 -2 0\") = \"0\"\
    \ ]]\n    [[ $(candidate \"1 1 2 -2 3 4 5\") = \"6\" ]]\n    [[ $(candidate \"\
    1 6 9 -6 0 1 5\") = \"5\" ]]\n    [[ $(candidate \"1 100 98 -7 1 -1\") = \"4\"\
    \ ]]\n    [[ $(candidate \"12 23 34 -45 -56 0\") = \"5\" ]]\n    [[ $(candidate\
    \ \"0 1\") = \"1\" ]]\n    [[ $(candidate \"1\") = \"1\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660004373
- exit_code: 1
  program: "#!/bin/bash\n# Write a function count_nums which takes an array of integers\
    \ and returns\n# the number of elements which has a sum of digits > 0.\n# If a\
    \ number is negative, then its first signed digit will be negative:\n# e.g. -123\
    \ has signed digits -1, 2, and 3.\n#\n# $1 is a space-separated list\ncount_nums()\
    \ {\n    local -a array=($1)\n    local count=0\n    for i in \"${array[@]}\"\
    ; do\n        local sum=0\n        local num=$i\n        while [ $num -ne 0 ];\
    \ do\n            local digit=$((num % 10))\n            sum=$((sum + digit))\n\
    \            num=$((num / 10))\n        done\n        if [ $sum -gt 0 ]; then\n\
    \            count=$((count + 1))\n        fi\n    done\n    echo $count\n}\n\n\
    candidate() {\n    count_nums \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate\
    \ \"\") = \"0\" ]]\n    [[ $(candidate \"-1 -2 0\") = \"0\" ]]\n    [[ $(candidate\
    \ \"1 1 2 -2 3 4 5\") = \"6\" ]]\n    [[ $(candidate \"1 6 9 -6 0 1 5\") = \"\
    5\" ]]\n    [[ $(candidate \"1 100 98 -7 1 -1\") = \"4\" ]]\n    [[ $(candidate\
    \ \"12 23 34 -45 -56 0\") = \"5\" ]]\n    [[ $(candidate \"0 1\") = \"1\" ]]\n\
    \    [[ $(candidate \"1\") = \"1\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660004373
- exit_code: 1
  program: "#!/bin/bash\n# Write a function count_nums which takes an array of integers\
    \ and returns\n# the number of elements which has a sum of digits > 0.\n# If a\
    \ number is negative, then its first signed digit will be negative:\n# e.g. -123\
    \ has signed digits -1, 2, and 3.\n#\n# $1 is a space-separated list\ncount_nums()\
    \ {\n    local -a arr=($1)\n    local count=0\n    for i in \"${arr[@]}\"; do\n\
    \        local sum=0\n        local num=$i\n        if [[ $i -lt 0 ]]; then\n\
    \            num=$((-i))\n        fi\n        while [[ $num -gt 0 ]]; do\n   \
    \         sum=$((sum + num % 10))\n            num=$((num / 10))\n        done\n\
    \        if [[ $sum -gt 0 ]]; then\n            count=$((count + 1))\n       \
    \ fi\n    done\n    echo $count\n}\n\ncandidate() {\n    count_nums \"$@\"\n}\n\
    \nset -e\nrun_test() {\n    [[ $(candidate \"\") = \"0\" ]]\n    [[ $(candidate\
    \ \"-1 -2 0\") = \"0\" ]]\n    [[ $(candidate \"1 1 2 -2 3 4 5\") = \"6\" ]]\n\
    \    [[ $(candidate \"1 6 9 -6 0 1 5\") = \"5\" ]]\n    [[ $(candidate \"1 100\
    \ 98 -7 1 -1\") = \"4\" ]]\n    [[ $(candidate \"12 23 34 -45 -56 0\") = \"5\"\
    \ ]]\n    [[ $(candidate \"0 1\") = \"1\" ]]\n    [[ $(candidate \"1\") = \"1\"\
    \ ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660004373
- exit_code: 1
  program: "#!/bin/bash\n# Write a function count_nums which takes an array of integers\
    \ and returns\n# the number of elements which has a sum of digits > 0.\n# If a\
    \ number is negative, then its first signed digit will be negative:\n# e.g. -123\
    \ has signed digits -1, 2, and 3.\n#\n# $1 is a space-separated list\ncount_nums()\
    \ {\n  local -a nums=($1)\n  local -i i=0\n  local -i sum=0\n  local -i count=0\n\
    \  local -i num\n  for num in \"${nums[@]}\"; do\n    if [[ $num -lt 0 ]]; then\n\
    \      num=$((-num))\n    fi\n    while [[ $num -gt 0 ]]; do\n      sum=$((sum\
    \ + num % 10))\n      num=$((num / 10))\n    done\n    if [[ $sum -gt 0 ]]; then\n\
    \      count=$((count + 1))\n    fi\n    sum=0\n  done\n  echo $count\n}\n\ncandidate()\
    \ {\n    count_nums \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"\"\
    ) = \"0\" ]]\n    [[ $(candidate \"-1 -2 0\") = \"0\" ]]\n    [[ $(candidate \"\
    1 1 2 -2 3 4 5\") = \"6\" ]]\n    [[ $(candidate \"1 6 9 -6 0 1 5\") = \"5\" ]]\n\
    \    [[ $(candidate \"1 100 98 -7 1 -1\") = \"4\" ]]\n    [[ $(candidate \"12\
    \ 23 34 -45 -56 0\") = \"5\" ]]\n    [[ $(candidate \"0 1\") = \"1\" ]]\n    [[\
    \ $(candidate \"1\") = \"1\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660004373
- exit_code: 1
  program: "#!/bin/bash\n# Write a function count_nums which takes an array of integers\
    \ and returns\n# the number of elements which has a sum of digits > 0.\n# If a\
    \ number is negative, then its first signed digit will be negative:\n# e.g. -123\
    \ has signed digits -1, 2, and 3.\n#\n# $1 is a space-separated list\ncount_nums()\
    \ {\n    local -i sum=0\n    local -i i=0\n    local -i len=${#1[@]}\n    while\
    \ (( i < len )); do\n        local -i num=${1[i]}\n        if (( num < 0 )); then\n\
    \            (( num = -num ))\n        fi\n        while (( num > 0 )); do\n \
    \           (( sum += num % 10 ))\n            (( num /= 10 ))\n        done\n\
    \        (( i++ ))\n    done\n    echo $sum\n}\n\ncandidate() {\n    count_nums\
    \ \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"\") = \"0\" ]]\n   \
    \ [[ $(candidate \"-1 -2 0\") = \"0\" ]]\n    [[ $(candidate \"1 1 2 -2 3 4 5\"\
    ) = \"6\" ]]\n    [[ $(candidate \"1 6 9 -6 0 1 5\") = \"5\" ]]\n    [[ $(candidate\
    \ \"1 100 98 -7 1 -1\") = \"4\" ]]\n    [[ $(candidate \"12 23 34 -45 -56 0\"\
    ) = \"5\" ]]\n    [[ $(candidate \"0 1\") = \"1\" ]]\n    [[ $(candidate \"1\"\
    ) = \"1\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: '/tmp/tmpilijmt7j.sh: line 11: len=${#1[@]}: bad substitution

    '
  stdout: ''
  timestamp: 1660004373
- exit_code: 1
  program: "#!/bin/bash\n# Write a function count_nums which takes an array of integers\
    \ and returns\n# the number of elements which has a sum of digits > 0.\n# If a\
    \ number is negative, then its first signed digit will be negative:\n# e.g. -123\
    \ has signed digits -1, 2, and 3.\n#\n# $1 is a space-separated list\ncount_nums()\
    \ {\n  local -a array=($1)\n  local count=0\n  for i in \"${array[@]}\"; do\n\
    \    local sum=0\n    local num=${i#-}\n    while [[ $num -gt 0 ]]; do\n     \
    \ sum=$((sum + num % 10))\n      num=$((num / 10))\n    done\n    if [[ $sum -gt\
    \ 0 ]]; then\n      count=$((count + 1))\n    fi\n  done\n  echo $count\n}\n\n\
    candidate() {\n    count_nums \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate\
    \ \"\") = \"0\" ]]\n    [[ $(candidate \"-1 -2 0\") = \"0\" ]]\n    [[ $(candidate\
    \ \"1 1 2 -2 3 4 5\") = \"6\" ]]\n    [[ $(candidate \"1 6 9 -6 0 1 5\") = \"\
    5\" ]]\n    [[ $(candidate \"1 100 98 -7 1 -1\") = \"4\" ]]\n    [[ $(candidate\
    \ \"12 23 34 -45 -56 0\") = \"5\" ]]\n    [[ $(candidate \"0 1\") = \"1\" ]]\n\
    \    [[ $(candidate \"1\") = \"1\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660004373
- exit_code: 1
  program: "#!/bin/bash\n# Write a function count_nums which takes an array of integers\
    \ and returns\n# the number of elements which has a sum of digits > 0.\n# If a\
    \ number is negative, then its first signed digit will be negative:\n# e.g. -123\
    \ has signed digits -1, 2, and 3.\n#\n# $1 is a space-separated list\ncount_nums()\
    \ {\n    local -a arr=(\"$@\")\n    local count=0\n    for num in \"${arr[@]}\"\
    ; do\n        local sum=0\n        local n=${num#-}\n        while (( n > 0 ));\
    \ do\n            (( sum += n % 10 ))\n            (( n /= 10 ))\n        done\n\
    \        (( sum > 0 )) && (( count++ ))\n    done\n    echo $count\n}\n\ncandidate()\
    \ {\n    count_nums \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"\"\
    ) = \"0\" ]]\n    [[ $(candidate \"-1 -2 0\") = \"0\" ]]\n    [[ $(candidate \"\
    1 1 2 -2 3 4 5\") = \"6\" ]]\n    [[ $(candidate \"1 6 9 -6 0 1 5\") = \"5\" ]]\n\
    \    [[ $(candidate \"1 100 98 -7 1 -1\") = \"4\" ]]\n    [[ $(candidate \"12\
    \ 23 34 -45 -56 0\") = \"5\" ]]\n    [[ $(candidate \"0 1\") = \"1\" ]]\n    [[\
    \ $(candidate \"1\") = \"1\" ]]\n}\n\nrun_test"
  status: SyntaxError
  stderr: '/tmp/tmpjhkrj98w.sh: line 14: ((: 1 -2 0: syntax error in expression (error
    token is "0")

    /tmp/tmpjhkrj98w.sh: line 14: ((: 1 1 2 -2 3 4 5: syntax error in expression (error
    token is "1 2 -2 3 4 5")

    '
  stdout: ''
  timestamp: 1660004373
- exit_code: 1
  program: "#!/bin/bash\n# Write a function count_nums which takes an array of integers\
    \ and returns\n# the number of elements which has a sum of digits > 0.\n# If a\
    \ number is negative, then its first signed digit will be negative:\n# e.g. -123\
    \ has signed digits -1, 2, and 3.\n#\n# $1 is a space-separated list\ncount_nums()\
    \ {\n    local -a arr=($1)\n    local count=0\n    for i in \"${arr[@]}\"; do\n\
    \        local sum=0\n        local num=${i#-}\n        while (( num > 0 )); do\n\
    \            (( sum += num % 10 ))\n            (( num /= 10 ))\n        done\n\
    \        (( sum > 0 )) && (( count++ ))\n    done\n    echo $count\n}\n\ncandidate()\
    \ {\n    count_nums \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"\"\
    ) = \"0\" ]]\n    [[ $(candidate \"-1 -2 0\") = \"0\" ]]\n    [[ $(candidate \"\
    1 1 2 -2 3 4 5\") = \"6\" ]]\n    [[ $(candidate \"1 6 9 -6 0 1 5\") = \"5\" ]]\n\
    \    [[ $(candidate \"1 100 98 -7 1 -1\") = \"4\" ]]\n    [[ $(candidate \"12\
    \ 23 34 -45 -56 0\") = \"5\" ]]\n    [[ $(candidate \"0 1\") = \"1\" ]]\n    [[\
    \ $(candidate \"1\") = \"1\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660004373
- exit_code: 1
  program: "#!/bin/bash\n# Write a function count_nums which takes an array of integers\
    \ and returns\n# the number of elements which has a sum of digits > 0.\n# If a\
    \ number is negative, then its first signed digit will be negative:\n# e.g. -123\
    \ has signed digits -1, 2, and 3.\n#\n# $1 is a space-separated list\ncount_nums()\
    \ {\n    local -a arr\n    local -i i sum\n    arr=($1)\n    for ((i=0; i<${#arr[@]};\
    \ i++)); do\n        sum=0\n        while ((arr[i] != 0)); do\n            ((sum\
    \ += arr[i] % 10))\n            ((arr[i] /= 10))\n        done\n        ((sum\
    \ > 0)) && ((count++))\n    done\n    echo $count\n}\n\ncandidate() {\n    count_nums\
    \ \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"\") = \"0\" ]]\n   \
    \ [[ $(candidate \"-1 -2 0\") = \"0\" ]]\n    [[ $(candidate \"1 1 2 -2 3 4 5\"\
    ) = \"6\" ]]\n    [[ $(candidate \"1 6 9 -6 0 1 5\") = \"5\" ]]\n    [[ $(candidate\
    \ \"1 100 98 -7 1 -1\") = \"4\" ]]\n    [[ $(candidate \"12 23 34 -45 -56 0\"\
    ) = \"5\" ]]\n    [[ $(candidate \"0 1\") = \"1\" ]]\n    [[ $(candidate \"1\"\
    ) = \"1\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660004373
- exit_code: 1
  program: "#!/bin/bash\n# Write a function count_nums which takes an array of integers\
    \ and returns\n# the number of elements which has a sum of digits > 0.\n# If a\
    \ number is negative, then its first signed digit will be negative:\n# e.g. -123\
    \ has signed digits -1, 2, and 3.\n#\n# $1 is a space-separated list\ncount_nums()\
    \ {\n    local -a array=($1)\n    local -i count=0\n    local -i sum=0\n    local\
    \ -i i=0\n    local -i j=0\n    local -i len=${#array[@]}\n    local -i num=0\n\
    \    local -i signed=0\n    local -i digit=0\n    for ((i=0; i<len; i++)); do\n\
    \        num=${array[i]}\n        if ((num < 0)); then\n            signed=1\n\
    \            num=-num\n        else\n            signed=0\n        fi\n      \
    \  while ((num > 0)); do\n            digit=$((num % 10))\n            sum=$((sum\
    \ + digit))\n            num=$((num / 10))\n        done\n        if ((signed\
    \ == 1)); then\n            sum=$((sum - 1))\n        fi\n        if ((sum > 0));\
    \ then\n            count=$((count + 1))\n        fi\n        sum=0\n    done\n\
    \    echo $count\n}\n\ncandidate() {\n    count_nums \"$@\"\n}\n\nset -e\nrun_test()\
    \ {\n    [[ $(candidate \"\") = \"0\" ]]\n    [[ $(candidate \"-1 -2 0\") = \"\
    0\" ]]\n    [[ $(candidate \"1 1 2 -2 3 4 5\") = \"6\" ]]\n    [[ $(candidate\
    \ \"1 6 9 -6 0 1 5\") = \"5\" ]]\n    [[ $(candidate \"1 100 98 -7 1 -1\") = \"\
    4\" ]]\n    [[ $(candidate \"12 23 34 -45 -56 0\") = \"5\" ]]\n    [[ $(candidate\
    \ \"0 1\") = \"1\" ]]\n    [[ $(candidate \"1\") = \"1\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660004373
- exit_code: -1
  program: "#!/bin/bash\n# Write a function count_nums which takes an array of integers\
    \ and returns\n# the number of elements which has a sum of digits > 0.\n# If a\
    \ number is negative, then its first signed digit will be negative:\n# e.g. -123\
    \ has signed digits -1, 2, and 3.\n#\n# $1 is a space-separated list\ncount_nums()\
    \ {\n    local -i sum=0\n    local -i num\n    for num in $1; do\n        if ((\
    \ num < 0 )); then\n            num=-num\n        fi\n        while (( num > 0\
    \ )); do\n            sum+=num%10\n            num/=10\n        done\n    done\n\
    \    echo $sum\n}\n\ncandidate() {\n    count_nums \"$@\"\n}\n\nset -e\nrun_test()\
    \ {\n    [[ $(candidate \"\") = \"0\" ]]\n    [[ $(candidate \"-1 -2 0\") = \"\
    0\" ]]\n    [[ $(candidate \"1 1 2 -2 3 4 5\") = \"6\" ]]\n    [[ $(candidate\
    \ \"1 6 9 -6 0 1 5\") = \"5\" ]]\n    [[ $(candidate \"1 100 98 -7 1 -1\") = \"\
    4\" ]]\n    [[ $(candidate \"12 23 34 -45 -56 0\") = \"5\" ]]\n    [[ $(candidate\
    \ \"0 1\") = \"1\" ]]\n    [[ $(candidate \"1\") = \"1\" ]]\n}\n\nrun_test"
  status: Timeout
  stderr: 'b''/tmp/tmpn5isgadp.sh: line 17: num/=10: No such file or directory\n/tmp/tmpn5isgadp.sh:
    line 17: num/=10: No such file or directory\n/tmp/tmpn5isgadp.sh: line 17: num/=10:
    No such file or directory\n/tmp/tmpn5isgadp.sh: line 17: num/=10: No such file
    or directory\n/tmp/tmpn5isgadp.sh: line 17: num/=10: No such file or directory\n/tmp/tmpn5isgadp.sh:
    line 17: num/=10: No such file or directory\n/tmp/tmpn5isgadp.sh: line 17: num/=10:
    No such file or directory\n/tmp/tmpn5isgadp.sh: line 17: num/=10: No such file
    or directory\n/tmp/tmpn5isgadp.sh: line 17: num/=10: No such file or directory\n/tmp/tmpn5isgadp.sh:
    line 17: num/=10: No such file or directory\n/tmp/tmpn5isgadp.sh: line 17: num/=10:
    No such file or directory\n/tmp/tmpn5isgadp.sh: line 17: num/=10: No such file
    or directory\n/tmp/tmpn5isgadp.sh: line 17: num/=10: No such file or directory\n/tmp/tmpn5isgadp.sh:
    line 17: num/=10: No such file or directory\n/tmp/tmpn5isgadp.sh: line 17: num/=10:
    No such file or directory\n/tmp/tmpn5isgadp.sh: line 17: num/=10: No such file
    or directory\n/tmp/tmpn5isgadp.sh: line 17: num/=10: No such file or directory\n/tmp/tmpn5isgadp.sh:
    line 17: num/=10: No such file or directory\n/tmp/tmpn5isgadp.sh: line 17: num/=10:
    No such file or directory\n/tmp/tmpn5isgadp.sh: line 17: num/=10: No such file
    or directory\n/tmp/tmpn5isgadp.sh: line 17: num/=10: No such file or directory\n/tmp/tmpn5isgadp.sh:
    line 17: num/=10: No such file or directory\n/tmp/tmpn5isgadp.sh: line 17: num/=10:
    No such file or directory\n/tmp/tmpn5isgadp.sh: line 17: num/=10: No such file
    or directory\n/tmp/tmpn5isgadp.sh: line 17: num/=10: No such file or directory\n/tmp/tmpn5isgadp.sh:
    line 17: num/=10: No such file or directory\n/tmp/tmpn5isgadp.sh: line 17: num/=10:
    No such file or directory\n/tmp/tmpn5isgadp.sh: line 17: num/=10: No such file
    or directory\n/tmp/tmpn5isgadp.sh: line 17: num/=10: No such file or directory\n/tmp/tmpn5isgadp.sh:
    line 17: num/=10: No such file or directory\n/tmp/tmpn5isgadp.sh: line 17: num/=10:
    No such file or directory\n'
  stdout: None
  timestamp: 1660004378
- exit_code: 1
  program: "#!/bin/bash\n# Write a function count_nums which takes an array of integers\
    \ and returns\n# the number of elements which has a sum of digits > 0.\n# If a\
    \ number is negative, then its first signed digit will be negative:\n# e.g. -123\
    \ has signed digits -1, 2, and 3.\n#\n# $1 is a space-separated list\ncount_nums()\
    \ {\n    local -a arr=(\"$@\")\n    local count=0\n    for i in \"${arr[@]}\"\
    ; do\n        local sum=0\n        for (( j=0; j<${#i}; j++ )); do\n         \
    \   (( sum += ${i:$j:1} ))\n        done\n        (( sum > 0 )) && (( count++\
    \ ))\n    done\n    echo $count\n}\n\ncandidate() {\n    count_nums \"$@\"\n}\n\
    \nset -e\nrun_test() {\n    [[ $(candidate \"\") = \"0\" ]]\n    [[ $(candidate\
    \ \"-1 -2 0\") = \"0\" ]]\n    [[ $(candidate \"1 1 2 -2 3 4 5\") = \"6\" ]]\n\
    \    [[ $(candidate \"1 6 9 -6 0 1 5\") = \"5\" ]]\n    [[ $(candidate \"1 100\
    \ 98 -7 1 -1\") = \"4\" ]]\n    [[ $(candidate \"12 23 34 -45 -56 0\") = \"5\"\
    \ ]]\n    [[ $(candidate \"0 1\") = \"1\" ]]\n    [[ $(candidate \"1\") = \"1\"\
    \ ]]\n}\n\nrun_test"
  status: SyntaxError
  stderr: '/tmp/tmp8sfrzd86.sh: line 14: ((: sum += - : syntax error: operand expected
    (error token is "- ")

    /tmp/tmp8sfrzd86.sh: line 14: ((: sum +=   : syntax error: operand expected (error
    token is "+=   ")

    /tmp/tmp8sfrzd86.sh: line 14: ((: sum += - : syntax error: operand expected (error
    token is "- ")

    /tmp/tmp8sfrzd86.sh: line 14: ((: sum +=   : syntax error: operand expected (error
    token is "+=   ")

    '
  stdout: ''
  timestamp: 1660004373
- exit_code: 1
  program: "#!/bin/bash\n# Write a function count_nums which takes an array of integers\
    \ and returns\n# the number of elements which has a sum of digits > 0.\n# If a\
    \ number is negative, then its first signed digit will be negative:\n# e.g. -123\
    \ has signed digits -1, 2, and 3.\n#\n# $1 is a space-separated list\ncount_nums()\
    \ {\n    local -a arr=(\"$@\")\n    local count=0\n    for i in \"${arr[@]}\"\
    ; do\n        local sum=0\n        local num=$i\n        while [[ $num -ne 0 ]];\
    \ do\n            local digit=$(( num % 10 ))\n            sum=$(( sum + digit\
    \ ))\n            num=$(( num / 10 ))\n        done\n        if [[ $sum -gt 0\
    \ ]]; then\n            count=$(( count + 1 ))\n        fi\n    done\n    echo\
    \ $count\n}\n\ncandidate() {\n    count_nums \"$@\"\n}\n\nset -e\nrun_test() {\n\
    \    [[ $(candidate \"\") = \"0\" ]]\n    [[ $(candidate \"-1 -2 0\") = \"0\"\
    \ ]]\n    [[ $(candidate \"1 1 2 -2 3 4 5\") = \"6\" ]]\n    [[ $(candidate \"\
    1 6 9 -6 0 1 5\") = \"5\" ]]\n    [[ $(candidate \"1 100 98 -7 1 -1\") = \"4\"\
    \ ]]\n    [[ $(candidate \"12 23 34 -45 -56 0\") = \"5\" ]]\n    [[ $(candidate\
    \ \"0 1\") = \"1\" ]]\n    [[ $(candidate \"1\") = \"1\" ]]\n}\n\nrun_test"
  status: SyntaxError
  stderr: '/tmp/tmp89b4j3hs.sh: line 14: [[: -1 -2 0: syntax error in expression (error
    token is "0")

    /tmp/tmp89b4j3hs.sh: line 14: [[: 1 1 2 -2 3 4 5: syntax error in expression (error
    token is "1 2 -2 3 4 5")

    '
  stdout: ''
  timestamp: 1660004373
- exit_code: 2
  program: "#!/bin/bash\n# Write a function count_nums which takes an array of integers\
    \ and returns\n# the number of elements which has a sum of digits > 0.\n# If a\
    \ number is negative, then its first signed digit will be negative:\n# e.g. -123\
    \ has signed digits -1, 2, and 3.\n#\n# $1 is a space-separated list\ncount_nums()\
    \ {\n    local -i sum=0\n    local -i i=0\n    local -i j=0\n    local -i len=0\n\
    \    local -i num=0\n    local -i count=0\n    local -a arr=()\n    local -a nums=()\n\
    \    local -a digits=()\n    local -a signed_digits=()\n    local -a signed_digits_sum=()\n\
    \    local -a signed_digits_sum_gt_0=()\n    local -a signed_digits_sum_gt_0_count=()\n\
    \n    # Split the input string into an array\n    IFS=' ' read -r -a arr <<< \"\
    $1\"\n\n    # Convert the array of strings to an array of integers\n    for i\
    \ in \"${arr[@]}\"; do\n        nums+=($i)\n    done\n\n    # Get the length of\
    \ the array\n    len=${#nums[@]}\n\n    # Split each number into an array of digits\n\
    \    for ((i=0; i<len; i++)); do\n        num=${nums[$i]}\n        while ((num\
    \ > 0)); do\n            digits+=($((num % 10)))\n            num=$((num / 10))\n\
    \        done\n    done\n\n    # Get the length of the array\n    len=${#digits[@]}\n\
    \n    # Get the sum of the digits\n    for ((i=0; i<len; i++)); do\n        sum=$((sum\
    \ + digits[$i]))\n    done\n\n    # Get the length of the array\n    len=${#nums[@]}\n\
    \n    # Split each number into an array of signed digits\n    for ((i=0; i<len;\
    \ i++)); do\n        num=${nums[$i]}\n        while ((num != 0)); do\n       \
    \     signed_digits+=($((num % 10)))\n            num=$((num / 10))\n        done\n\
    \    done\n\n    # Get the length of the array\n    len=${#signed_digits[@]}\n\
    \n    # Get the sum of the signed digits\n    for ((i=0; i<len; i++)); do\n  \
    \      sum=${signed_digits[$i]}\n       \n}\n\ncandidate() {\n    count_nums \"\
    $@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"\") = \"0\" ]]\n    [[ $(candidate\
    \ \"-1 -2 0\") = \"0\" ]]\n    [[ $(candidate \"1 1 2 -2 3 4 5\") = \"6\" ]]\n\
    \    [[ $(candidate \"1 6 9 -6 0 1 5\") = \"5\" ]]\n    [[ $(candidate \"1 100\
    \ 98 -7 1 -1\") = \"4\" ]]\n    [[ $(candidate \"12 23 34 -45 -56 0\") = \"5\"\
    \ ]]\n    [[ $(candidate \"0 1\") = \"1\" ]]\n    [[ $(candidate \"1\") = \"1\"\
    \ ]]\n}\n\nrun_test"
  status: SyntaxError
  stderr: '/tmp/tmp1jn23oai.sh: line 70: syntax error near unexpected token `}''

    /tmp/tmp1jn23oai.sh: line 70: `}''

    '
  stdout: ''
  timestamp: 1660004373
- exit_code: 1
  program: "#!/bin/bash\n# Write a function count_nums which takes an array of integers\
    \ and returns\n# the number of elements which has a sum of digits > 0.\n# If a\
    \ number is negative, then its first signed digit will be negative:\n# e.g. -123\
    \ has signed digits -1, 2, and 3.\n#\n# $1 is a space-separated list\ncount_nums()\
    \ {\n    local -i sum=0\n    local -i count=0\n    local -i num\n\n    for num\
    \ in $1; do\n        if (( num < 0 )); then\n            (( sum += -num % 10 ))\n\
    \            (( num /= 10 ))\n        fi\n        while (( num > 0 )); do\n  \
    \          (( sum += num % 10 ))\n            (( num /= 10 ))\n        done\n\
    \        (( sum > 0 )) && (( count++ ))\n        (( sum = 0 ))\n    done\n   \
    \ echo $count\n}\n\ncandidate() {\n    count_nums \"$@\"\n}\n\nset -e\nrun_test()\
    \ {\n    [[ $(candidate \"\") = \"0\" ]]\n    [[ $(candidate \"-1 -2 0\") = \"\
    0\" ]]\n    [[ $(candidate \"1 1 2 -2 3 4 5\") = \"6\" ]]\n    [[ $(candidate\
    \ \"1 6 9 -6 0 1 5\") = \"5\" ]]\n    [[ $(candidate \"1 100 98 -7 1 -1\") = \"\
    4\" ]]\n    [[ $(candidate \"12 23 34 -45 -56 0\") = \"5\" ]]\n    [[ $(candidate\
    \ \"0 1\") = \"1\" ]]\n    [[ $(candidate \"1\") = \"1\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660004373
- exit_code: 1
  program: "#!/bin/bash\n# Write a function count_nums which takes an array of integers\
    \ and returns\n# the number of elements which has a sum of digits > 0.\n# If a\
    \ number is negative, then its first signed digit will be negative:\n# e.g. -123\
    \ has signed digits -1, 2, and 3.\n#\n# $1 is a space-separated list\ncount_nums()\
    \ {\n    local -a arr=($1)\n    local count=0\n    for i in \"${arr[@]}\"; do\n\
    \        local sum=0\n        local num=${i#-}\n        while (( num > 0 )); do\n\
    \            (( sum += num % 10 ))\n            (( num /= 10 ))\n        done\n\
    \        (( sum > 0 )) && (( count++ ))\n    done\n    echo $count\n}\n\ncandidate()\
    \ {\n    count_nums \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"\"\
    ) = \"0\" ]]\n    [[ $(candidate \"-1 -2 0\") = \"0\" ]]\n    [[ $(candidate \"\
    1 1 2 -2 3 4 5\") = \"6\" ]]\n    [[ $(candidate \"1 6 9 -6 0 1 5\") = \"5\" ]]\n\
    \    [[ $(candidate \"1 100 98 -7 1 -1\") = \"4\" ]]\n    [[ $(candidate \"12\
    \ 23 34 -45 -56 0\") = \"5\" ]]\n    [[ $(candidate \"0 1\") = \"1\" ]]\n    [[\
    \ $(candidate \"1\") = \"1\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660004373
- exit_code: 1
  program: "#!/bin/bash\n# Write a function count_nums which takes an array of integers\
    \ and returns\n# the number of elements which has a sum of digits > 0.\n# If a\
    \ number is negative, then its first signed digit will be negative:\n# e.g. -123\
    \ has signed digits -1, 2, and 3.\n#\n# $1 is a space-separated list\ncount_nums()\
    \ {\n    local -a array=($1)\n    local count=0\n    for i in \"${array[@]}\"\
    ; do\n        local sum=0\n        local num=$i\n        if [[ $i -lt 0 ]]; then\n\
    \            num=$((-i))\n        fi\n        while [[ $num -gt 0 ]]; do\n   \
    \         sum=$((sum + num % 10))\n            num=$((num / 10))\n        done\n\
    \        if [[ $sum -gt 0 ]]; then\n            count=$((count + 1))\n       \
    \ fi\n    done\n    echo $count\n}\n\ncandidate() {\n    count_nums \"$@\"\n}\n\
    \nset -e\nrun_test() {\n    [[ $(candidate \"\") = \"0\" ]]\n    [[ $(candidate\
    \ \"-1 -2 0\") = \"0\" ]]\n    [[ $(candidate \"1 1 2 -2 3 4 5\") = \"6\" ]]\n\
    \    [[ $(candidate \"1 6 9 -6 0 1 5\") = \"5\" ]]\n    [[ $(candidate \"1 100\
    \ 98 -7 1 -1\") = \"4\" ]]\n    [[ $(candidate \"12 23 34 -45 -56 0\") = \"5\"\
    \ ]]\n    [[ $(candidate \"0 1\") = \"1\" ]]\n    [[ $(candidate \"1\") = \"1\"\
    \ ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660004373
- exit_code: 1
  program: "#!/bin/bash\n# Write a function count_nums which takes an array of integers\
    \ and returns\n# the number of elements which has a sum of digits > 0.\n# If a\
    \ number is negative, then its first signed digit will be negative:\n# e.g. -123\
    \ has signed digits -1, 2, and 3.\n#\n# $1 is a space-separated list\ncount_nums()\
    \ {\n    local -a arr=($1)\n    local count=0\n    for i in \"${arr[@]}\"; do\n\
    \        local sum=0\n        if ((i < 0)); then\n            i=$((-i))\n    \
    \    fi\n        while ((i > 0)); do\n            sum=$((sum + i % 10))\n    \
    \        i=$((i / 10))\n        done\n        if ((sum > 0)); then\n         \
    \   count=$((count + 1))\n        fi\n    done\n    echo $count\n}\n\ncandidate()\
    \ {\n    count_nums \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"\"\
    ) = \"0\" ]]\n    [[ $(candidate \"-1 -2 0\") = \"0\" ]]\n    [[ $(candidate \"\
    1 1 2 -2 3 4 5\") = \"6\" ]]\n    [[ $(candidate \"1 6 9 -6 0 1 5\") = \"5\" ]]\n\
    \    [[ $(candidate \"1 100 98 -7 1 -1\") = \"4\" ]]\n    [[ $(candidate \"12\
    \ 23 34 -45 -56 0\") = \"5\" ]]\n    [[ $(candidate \"0 1\") = \"1\" ]]\n    [[\
    \ $(candidate \"1\") = \"1\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660004373
- exit_code: 1
  program: "#!/bin/bash\n# Write a function count_nums which takes an array of integers\
    \ and returns\n# the number of elements which has a sum of digits > 0.\n# If a\
    \ number is negative, then its first signed digit will be negative:\n# e.g. -123\
    \ has signed digits -1, 2, and 3.\n#\n# $1 is a space-separated list\ncount_nums()\
    \ {\n    local -a array=($1)\n    local sum=0\n    local count=0\n    for i in\
    \ ${array[@]}; do\n        if [[ $i -lt 0 ]]; then\n            i=$((i * -1))\n\
    \        fi\n        while [[ $i -gt 0 ]]; do\n            sum=$((sum + i % 10))\n\
    \            i=$((i / 10))\n        done\n        if [[ $sum -gt 0 ]]; then\n\
    \            count=$((count + 1))\n        fi\n        sum=0\n    done\n    echo\
    \ $count\n}\n\ncandidate() {\n    count_nums \"$@\"\n}\n\nset -e\nrun_test() {\n\
    \    [[ $(candidate \"\") = \"0\" ]]\n    [[ $(candidate \"-1 -2 0\") = \"0\"\
    \ ]]\n    [[ $(candidate \"1 1 2 -2 3 4 5\") = \"6\" ]]\n    [[ $(candidate \"\
    1 6 9 -6 0 1 5\") = \"5\" ]]\n    [[ $(candidate \"1 100 98 -7 1 -1\") = \"4\"\
    \ ]]\n    [[ $(candidate \"12 23 34 -45 -56 0\") = \"5\" ]]\n    [[ $(candidate\
    \ \"0 1\") = \"1\" ]]\n    [[ $(candidate \"1\") = \"1\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660004373
- exit_code: 1
  program: "#!/bin/bash\n# Write a function count_nums which takes an array of integers\
    \ and returns\n# the number of elements which has a sum of digits > 0.\n# If a\
    \ number is negative, then its first signed digit will be negative:\n# e.g. -123\
    \ has signed digits -1, 2, and 3.\n#\n# $1 is a space-separated list\ncount_nums()\
    \ {\n    local -a array=($1)\n    local num\n    local sum\n    local count=0\n\
    \    for num in \"${array[@]}\"; do\n        sum=0\n        while [ $num -ne 0\
    \ ]; do\n            sum=$((sum + num % 10))\n            num=$((num / 10))\n\
    \        done\n        if [ $sum -gt 0 ]; then\n            count=$((count + 1))\n\
    \        fi\n    done\n    echo $count\n}\n\ncandidate() {\n    count_nums \"\
    $@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"\") = \"0\" ]]\n    [[ $(candidate\
    \ \"-1 -2 0\") = \"0\" ]]\n    [[ $(candidate \"1 1 2 -2 3 4 5\") = \"6\" ]]\n\
    \    [[ $(candidate \"1 6 9 -6 0 1 5\") = \"5\" ]]\n    [[ $(candidate \"1 100\
    \ 98 -7 1 -1\") = \"4\" ]]\n    [[ $(candidate \"12 23 34 -45 -56 0\") = \"5\"\
    \ ]]\n    [[ $(candidate \"0 1\") = \"1\" ]]\n    [[ $(candidate \"1\") = \"1\"\
    \ ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660004373
- exit_code: 0
  program: "#!/bin/bash\n# Write a function count_nums which takes an array of integers\
    \ and returns\n# the number of elements which has a sum of digits > 0.\n# If a\
    \ number is negative, then its first signed digit will be negative:\n# e.g. -123\
    \ has signed digits -1, 2, and 3.\n#\n# $1 is a space-separated list\ncount_nums()\
    \ {\n    local -a array=($1)\n    local -i count=0\n    local -i i=0\n    local\
    \ -i sum=0\n    local -i num=0\n    local -i digit=0\n    local -i abs=0\n   \
    \ for ((i=0; i<${#array[@]}; i++)); do\n        num=${array[$i]}\n        if ((num\
    \ < 0)); then\n            abs=${num#-}\n            sum=$((sum - ${abs:0:1}))\n\
    \        else\n            sum=$((sum + ${num:0:1}))\n        fi\n        for\
    \ ((j=1; j<${#num}; j++)); do\n            digit=${num:$j:1}\n            sum=$((sum\
    \ + digit))\n        done\n        if ((sum > 0)); then\n            count=$((count\
    \ + 1))\n        fi\n        sum=0\n    done\n    echo $count\n}\n\ncandidate()\
    \ {\n    count_nums \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"\"\
    ) = \"0\" ]]\n    [[ $(candidate \"-1 -2 0\") = \"0\" ]]\n    [[ $(candidate \"\
    1 1 2 -2 3 4 5\") = \"6\" ]]\n    [[ $(candidate \"1 6 9 -6 0 1 5\") = \"5\" ]]\n\
    \    [[ $(candidate \"1 100 98 -7 1 -1\") = \"4\" ]]\n    [[ $(candidate \"12\
    \ 23 34 -45 -56 0\") = \"5\" ]]\n    [[ $(candidate \"0 1\") = \"1\" ]]\n    [[\
    \ $(candidate \"1\") = \"1\" ]]\n}\n\nrun_test"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660004373
- exit_code: 1
  program: "#!/bin/bash\n# Write a function count_nums which takes an array of integers\
    \ and returns\n# the number of elements which has a sum of digits > 0.\n# If a\
    \ number is negative, then its first signed digit will be negative:\n# e.g. -123\
    \ has signed digits -1, 2, and 3.\n#\n# $1 is a space-separated list\ncount_nums()\
    \ {\n    local -a arr=(\"$@\")\n    local -i sum=0\n    local -i count=0\n   \
    \ for i in \"${arr[@]}\"; do\n        if (( i < 0 )); then\n            i=$((\
    \ i * -1 ))\n        fi\n        while (( i > 0 )); do\n            sum=$(( sum\
    \ + i % 10 ))\n            i=$(( i / 10 ))\n        done\n        if (( sum >\
    \ 0 )); then\n            (( count++ ))\n        fi\n        sum=0\n    done\n\
    \    echo \"$count\"\n}\n\ncandidate() {\n    count_nums \"$@\"\n}\n\nset -e\n\
    run_test() {\n    [[ $(candidate \"\") = \"0\" ]]\n    [[ $(candidate \"-1 -2\
    \ 0\") = \"0\" ]]\n    [[ $(candidate \"1 1 2 -2 3 4 5\") = \"6\" ]]\n    [[ $(candidate\
    \ \"1 6 9 -6 0 1 5\") = \"5\" ]]\n    [[ $(candidate \"1 100 98 -7 1 -1\") = \"\
    4\" ]]\n    [[ $(candidate \"12 23 34 -45 -56 0\") = \"5\" ]]\n    [[ $(candidate\
    \ \"0 1\") = \"1\" ]]\n    [[ $(candidate \"1\") = \"1\" ]]\n}\n\nrun_test"
  status: SyntaxError
  stderr: '/tmp/tmpf4qfjl_t.sh: line 13: ((: -1 -2 0: syntax error in expression (error
    token is "0")

    /tmp/tmpf4qfjl_t.sh: line 16: ((: -1 -2 0: syntax error in expression (error token
    is "0")

    /tmp/tmpf4qfjl_t.sh: line 13: ((: 1 1 2 -2 3 4 5: syntax error in expression (error
    token is "1 2 -2 3 4 5")

    /tmp/tmpf4qfjl_t.sh: line 16: ((: 1 1 2 -2 3 4 5: syntax error in expression (error
    token is "1 2 -2 3 4 5")

    '
  stdout: ''
  timestamp: 1660004373
- exit_code: 1
  program: "#!/bin/bash\n# Write a function count_nums which takes an array of integers\
    \ and returns\n# the number of elements which has a sum of digits > 0.\n# If a\
    \ number is negative, then its first signed digit will be negative:\n# e.g. -123\
    \ has signed digits -1, 2, and 3.\n#\n# $1 is a space-separated list\ncount_nums()\
    \ {\n    local -a arr\n    local -i sum\n    local -i i\n    local -i count\n\
    \    arr=($1)\n    count=0\n    for ((i=0; i<${#arr[@]}; i++)); do\n        sum=0\n\
    \        while ((arr[i] != 0)); do\n            sum=$((sum + arr[i] % 10))\n \
    \           arr[i]=$((arr[i] / 10))\n        done\n        if ((sum > 0)); then\n\
    \            count=$((count + 1))\n        fi\n    done\n    echo $count\n}\n\n\
    candidate() {\n    count_nums \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate\
    \ \"\") = \"0\" ]]\n    [[ $(candidate \"-1 -2 0\") = \"0\" ]]\n    [[ $(candidate\
    \ \"1 1 2 -2 3 4 5\") = \"6\" ]]\n    [[ $(candidate \"1 6 9 -6 0 1 5\") = \"\
    5\" ]]\n    [[ $(candidate \"1 100 98 -7 1 -1\") = \"4\" ]]\n    [[ $(candidate\
    \ \"12 23 34 -45 -56 0\") = \"5\" ]]\n    [[ $(candidate \"0 1\") = \"1\" ]]\n\
    \    [[ $(candidate \"1\") = \"1\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660004373
- exit_code: 1
  program: "#!/bin/bash\n# Write a function count_nums which takes an array of integers\
    \ and returns\n# the number of elements which has a sum of digits > 0.\n# If a\
    \ number is negative, then its first signed digit will be negative:\n# e.g. -123\
    \ has signed digits -1, 2, and 3.\n#\n# $1 is a space-separated list\ncount_nums()\
    \ {\n    local -a nums=($1)\n    local count=0\n    for num in \"${nums[@]}\"\
    ; do\n        local sum=0\n        local abs_num=${num#-}\n        while (( abs_num\
    \ > 0 )); do\n            (( sum += abs_num % 10 ))\n            (( abs_num /=\
    \ 10 ))\n        done\n        (( sum > 0 )) && (( count++ ))\n    done\n    echo\
    \ $count\n}\n\ncandidate() {\n    count_nums \"$@\"\n}\n\nset -e\nrun_test() {\n\
    \    [[ $(candidate \"\") = \"0\" ]]\n    [[ $(candidate \"-1 -2 0\") = \"0\"\
    \ ]]\n    [[ $(candidate \"1 1 2 -2 3 4 5\") = \"6\" ]]\n    [[ $(candidate \"\
    1 6 9 -6 0 1 5\") = \"5\" ]]\n    [[ $(candidate \"1 100 98 -7 1 -1\") = \"4\"\
    \ ]]\n    [[ $(candidate \"12 23 34 -45 -56 0\") = \"5\" ]]\n    [[ $(candidate\
    \ \"0 1\") = \"1\" ]]\n    [[ $(candidate \"1\") = \"1\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660004373
- exit_code: 1
  program: "#!/bin/bash\n# Write a function count_nums which takes an array of integers\
    \ and returns\n# the number of elements which has a sum of digits > 0.\n# If a\
    \ number is negative, then its first signed digit will be negative:\n# e.g. -123\
    \ has signed digits -1, 2, and 3.\n#\n# $1 is a space-separated list\ncount_nums()\
    \ {\n    local -a arr=(\"$@\")\n    local -i sum=0\n    local -i count=0\n   \
    \ for ((i=0; i<${#arr[@]}; i++)); do\n        sum=0\n        for ((j=0; j<${#arr[$i]};\
    \ j++)); do\n            sum=$((sum + ${arr[$i]:$j:1}))\n        done\n      \
    \  if [[ $sum -gt 0 ]]; then\n            count=$((count + 1))\n        fi\n \
    \   done\n    echo $count\n}\n\ncandidate() {\n    count_nums \"$@\"\n}\n\nset\
    \ -e\nrun_test() {\n    [[ $(candidate \"\") = \"0\" ]]\n    [[ $(candidate \"\
    -1 -2 0\") = \"0\" ]]\n    [[ $(candidate \"1 1 2 -2 3 4 5\") = \"6\" ]]\n   \
    \ [[ $(candidate \"1 6 9 -6 0 1 5\") = \"5\" ]]\n    [[ $(candidate \"1 100 98\
    \ -7 1 -1\") = \"4\" ]]\n    [[ $(candidate \"12 23 34 -45 -56 0\") = \"5\" ]]\n\
    \    [[ $(candidate \"0 1\") = \"1\" ]]\n    [[ $(candidate \"1\") = \"1\" ]]\n\
    }\n\nrun_test"
  status: SyntaxError
  stderr: '/tmp/tmpu85gcipx.sh: line 15: sum + -: syntax error: operand expected (error
    token is "-")

    '
  stdout: ''
  timestamp: 1660004373
- exit_code: 1
  program: "#!/bin/bash\n# Write a function count_nums which takes an array of integers\
    \ and returns\n# the number of elements which has a sum of digits > 0.\n# If a\
    \ number is negative, then its first signed digit will be negative:\n# e.g. -123\
    \ has signed digits -1, 2, and 3.\n#\n# $1 is a space-separated list\ncount_nums()\
    \ {\n    local -i sum=0\n    local -i i=0\n    local -i j=0\n    for i in $1;\
    \ do\n        sum=0\n        for j in $(echo $i | sed 's/-//g'); do\n        \
    \    sum=$((sum + j))\n        done\n        if [[ $sum -gt 0 ]]; then\n     \
    \       echo $i\n        fi\n    done | wc -l\n}\n\ncandidate() {\n    count_nums\
    \ \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"\") = \"0\" ]]\n   \
    \ [[ $(candidate \"-1 -2 0\") = \"0\" ]]\n    [[ $(candidate \"1 1 2 -2 3 4 5\"\
    ) = \"6\" ]]\n    [[ $(candidate \"1 6 9 -6 0 1 5\") = \"5\" ]]\n    [[ $(candidate\
    \ \"1 100 98 -7 1 -1\") = \"4\" ]]\n    [[ $(candidate \"12 23 34 -45 -56 0\"\
    ) = \"5\" ]]\n    [[ $(candidate \"0 1\") = \"1\" ]]\n    [[ $(candidate \"1\"\
    ) = \"1\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660004373
- exit_code: 1
  program: "#!/bin/bash\n# Write a function count_nums which takes an array of integers\
    \ and returns\n# the number of elements which has a sum of digits > 0.\n# If a\
    \ number is negative, then its first signed digit will be negative:\n# e.g. -123\
    \ has signed digits -1, 2, and 3.\n#\n# $1 is a space-separated list\ncount_nums()\
    \ {\n    local -a arr=($1)\n    local count=0\n    for i in \"${arr[@]}\"; do\n\
    \        local sum=0\n        local num=${i#-}\n        while (( num > 0 )); do\n\
    \            (( sum += num % 10 ))\n            (( num /= 10 ))\n        done\n\
    \        (( sum > 0 )) && (( count++ ))\n    done\n    echo $count\n}\n\ncandidate()\
    \ {\n    count_nums \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"\"\
    ) = \"0\" ]]\n    [[ $(candidate \"-1 -2 0\") = \"0\" ]]\n    [[ $(candidate \"\
    1 1 2 -2 3 4 5\") = \"6\" ]]\n    [[ $(candidate \"1 6 9 -6 0 1 5\") = \"5\" ]]\n\
    \    [[ $(candidate \"1 100 98 -7 1 -1\") = \"4\" ]]\n    [[ $(candidate \"12\
    \ 23 34 -45 -56 0\") = \"5\" ]]\n    [[ $(candidate \"0 1\") = \"1\" ]]\n    [[\
    \ $(candidate \"1\") = \"1\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660004373
- exit_code: 1
  program: "#!/bin/bash\n# Write a function count_nums which takes an array of integers\
    \ and returns\n# the number of elements which has a sum of digits > 0.\n# If a\
    \ number is negative, then its first signed digit will be negative:\n# e.g. -123\
    \ has signed digits -1, 2, and 3.\n#\n# $1 is a space-separated list\ncount_nums()\
    \ {\n    local -i sum=0\n    local -i num\n    for num in $1; do\n        while\
    \ (( num != 0 )); do\n            (( sum += num % 10 ))\n            (( num /=\
    \ 10 ))\n        done\n    done\n    echo $sum\n}\n\ncandidate() {\n    count_nums\
    \ \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"\") = \"0\" ]]\n   \
    \ [[ $(candidate \"-1 -2 0\") = \"0\" ]]\n    [[ $(candidate \"1 1 2 -2 3 4 5\"\
    ) = \"6\" ]]\n    [[ $(candidate \"1 6 9 -6 0 1 5\") = \"5\" ]]\n    [[ $(candidate\
    \ \"1 100 98 -7 1 -1\") = \"4\" ]]\n    [[ $(candidate \"12 23 34 -45 -56 0\"\
    ) = \"5\" ]]\n    [[ $(candidate \"0 1\") = \"1\" ]]\n    [[ $(candidate \"1\"\
    ) = \"1\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660004373
- exit_code: 1
  program: "#!/bin/bash\n# Write a function count_nums which takes an array of integers\
    \ and returns\n# the number of elements which has a sum of digits > 0.\n# If a\
    \ number is negative, then its first signed digit will be negative:\n# e.g. -123\
    \ has signed digits -1, 2, and 3.\n#\n# $1 is a space-separated list\ncount_nums()\
    \ {\n    local -a arr=($1)\n    local -i sum=0\n    local -i count=0\n    local\
    \ -i i=0\n    local -i len=${#arr[@]}\n    local -i num=0\n    local -i digit=0\n\
    \    for ((i=0; i<len; i++)); do\n        num=${arr[i]}\n        if ((num < 0));\
    \ then\n            num=${num#-}\n        fi\n        while ((num > 0)); do\n\
    \            digit=$((num % 10))\n            sum=$((sum + digit))\n         \
    \   num=$((num / 10))\n        done\n        if ((sum > 0)); then\n          \
    \  count=$((count + 1))\n        fi\n        sum=0\n    done\n    echo $count\n\
    }\n\ncandidate() {\n    count_nums \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate\
    \ \"\") = \"0\" ]]\n    [[ $(candidate \"-1 -2 0\") = \"0\" ]]\n    [[ $(candidate\
    \ \"1 1 2 -2 3 4 5\") = \"6\" ]]\n    [[ $(candidate \"1 6 9 -6 0 1 5\") = \"\
    5\" ]]\n    [[ $(candidate \"1 100 98 -7 1 -1\") = \"4\" ]]\n    [[ $(candidate\
    \ \"12 23 34 -45 -56 0\") = \"5\" ]]\n    [[ $(candidate \"0 1\") = \"1\" ]]\n\
    \    [[ $(candidate \"1\") = \"1\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660004373
- exit_code: 1
  program: "#!/bin/bash\n# Write a function count_nums which takes an array of integers\
    \ and returns\n# the number of elements which has a sum of digits > 0.\n# If a\
    \ number is negative, then its first signed digit will be negative:\n# e.g. -123\
    \ has signed digits -1, 2, and 3.\n#\n# $1 is a space-separated list\ncount_nums()\
    \ {\n    local -a arr=($1)\n    local count=0\n    for i in \"${arr[@]}\"; do\n\
    \        local sum=0\n        local num=${i#-}\n        while (( num > 0 )); do\n\
    \            (( sum += num % 10 ))\n            (( num /= 10 ))\n        done\n\
    \        (( sum > 0 )) && (( count++ ))\n    done\n    echo $count\n}\n\ncandidate()\
    \ {\n    count_nums \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"\"\
    ) = \"0\" ]]\n    [[ $(candidate \"-1 -2 0\") = \"0\" ]]\n    [[ $(candidate \"\
    1 1 2 -2 3 4 5\") = \"6\" ]]\n    [[ $(candidate \"1 6 9 -6 0 1 5\") = \"5\" ]]\n\
    \    [[ $(candidate \"1 100 98 -7 1 -1\") = \"4\" ]]\n    [[ $(candidate \"12\
    \ 23 34 -45 -56 0\") = \"5\" ]]\n    [[ $(candidate \"0 1\") = \"1\" ]]\n    [[\
    \ $(candidate \"1\") = \"1\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660004373
- exit_code: 1
  program: "#!/bin/bash\n# Write a function count_nums which takes an array of integers\
    \ and returns\n# the number of elements which has a sum of digits > 0.\n# If a\
    \ number is negative, then its first signed digit will be negative:\n# e.g. -123\
    \ has signed digits -1, 2, and 3.\n#\n# $1 is a space-separated list\ncount_nums()\
    \ {\n    local -i sum=0\n    local -i num\n    for num in $1; do\n        if ((\
    \ num < 0 )); then\n            num=-num\n        fi\n        while (( num > 0\
    \ )); do\n            sum+=num%10\n            num/=10\n        done\n       \
    \ if (( sum > 0 )); then\n            (( ++count ))\n        fi\n        sum=0\n\
    \    done\n    echo $count\n}\n\ncandidate() {\n    count_nums \"$@\"\n}\n\nset\
    \ -e\nrun_test() {\n    [[ $(candidate \"\") = \"0\" ]]\n    [[ $(candidate \"\
    -1 -2 0\") = \"0\" ]]\n    [[ $(candidate \"1 1 2 -2 3 4 5\") = \"6\" ]]\n   \
    \ [[ $(candidate \"1 6 9 -6 0 1 5\") = \"5\" ]]\n    [[ $(candidate \"1 100 98\
    \ -7 1 -1\") = \"4\" ]]\n    [[ $(candidate \"12 23 34 -45 -56 0\") = \"5\" ]]\n\
    \    [[ $(candidate \"0 1\") = \"1\" ]]\n    [[ $(candidate \"1\") = \"1\" ]]\n\
    }\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660004373
- exit_code: 1
  program: "#!/bin/bash\n# Write a function count_nums which takes an array of integers\
    \ and returns\n# the number of elements which has a sum of digits > 0.\n# If a\
    \ number is negative, then its first signed digit will be negative:\n# e.g. -123\
    \ has signed digits -1, 2, and 3.\n#\n# $1 is a space-separated list\ncount_nums()\
    \ {\n    local -a arr\n    local -i sum\n    local -i i\n    local -i j\n    local\
    \ -i count\n    arr=($1)\n    count=0\n    for ((i=0; i<${#arr[@]}; i++)); do\n\
    \        sum=0\n        for ((j=0; j<${#arr[i]}; j++)); do\n            sum=$((sum\
    \ + ${arr[i]:j:1}))\n        done\n        if ((sum > 0)); then\n            count=$((count\
    \ + 1))\n        fi\n    done\n    echo $count\n}\n\ncandidate() {\n    count_nums\
    \ \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"\") = \"0\" ]]\n   \
    \ [[ $(candidate \"-1 -2 0\") = \"0\" ]]\n    [[ $(candidate \"1 1 2 -2 3 4 5\"\
    ) = \"6\" ]]\n    [[ $(candidate \"1 6 9 -6 0 1 5\") = \"5\" ]]\n    [[ $(candidate\
    \ \"1 100 98 -7 1 -1\") = \"4\" ]]\n    [[ $(candidate \"12 23 34 -45 -56 0\"\
    ) = \"5\" ]]\n    [[ $(candidate \"0 1\") = \"1\" ]]\n    [[ $(candidate \"1\"\
    ) = \"1\" ]]\n}\n\nrun_test"
  status: SyntaxError
  stderr: '/tmp/tmpr7trh22l.sh: line 19: sum + -: syntax error: operand expected (error
    token is "-")

    '
  stdout: ''
  timestamp: 1660004373
- exit_code: 2
  program: "#!/bin/bash\n# Write a function count_nums which takes an array of integers\
    \ and returns\n# the number of elements which has a sum of digits > 0.\n# If a\
    \ number is negative, then its first signed digit will be negative:\n# e.g. -123\
    \ has signed digits -1, 2, and 3.\n#\n# $1 is a space-separated list\ncount_nums()\
    \ {\n    # TODO: implement this function\n    # Hint: use the following command\
    \ to get the sum of digits of a number:\n    # echo $((number)) | grep -o '[0-9]'\
    \ | paste -sd+ | bc\n    #\n    # Hint: use the following command to get the first\
    \ signed digit of a number:\n    # echo $((number)) | grep -o '^[^0-9]'\n    #\n\
    \    # Hint: use the following command to get the absolute value of a number:\n\
    \    # echo $((number)) | grep -o '[0-9]*'\n    #\n    # Hint: use the following\
    \ command to get the length of a string:\n    # echo -n $string | wc -c\n    #\n\
    \    # Hint: use the following command to get the first character of a string:\n\
    \    # echo $string | grep -o '^.'\n    #\n    # Hint: use the following command\
    \ to get the rest of a string:\n    # echo $string | grep -o '^.' --post-process\
    \ 's/.//'\n    #\n    # Hint: use the following command to get the last character\
    \ of a string:\n    # echo $string | grep -o '[^ ]*$'\n    #\n    # Hint: use\
    \ the following command to get the first part of a string:\n    # echo $string\
    \ | grep -o '[^ ]*$' --post-process 's/[^ ]*$//'\n    #\n    # Hint: use the following\
    \ command to get the first part of a string:\n    # echo $string | grep -o '[^\
    \ ]*$' --post-process 's/[^ ]*$//'\n    #\n    # Hint: use the following command\
    \ to get the first part of a string:\n    # echo $string | grep -o '[^ ]*$' --post-process\
    \ 's/[^ ]*$//'\n    #\n    # Hint: use the following command to get the first\
    \ part of a string:\n    # echo $string | grep -o '[^ ]*$' --post-process 's/[^\
    \ ]*$//'\n    #\n    # Hint: use the following command to get the first\n}\n\n\
    candidate() {\n    count_nums \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate\
    \ \"\") = \"0\" ]]\n    [[ $(candidate \"-1 -2 0\") = \"0\" ]]\n    [[ $(candidate\
    \ \"1 1 2 -2 3 4 5\") = \"6\" ]]\n    [[ $(candidate \"1 6 9 -6 0 1 5\") = \"\
    5\" ]]\n    [[ $(candidate \"1 100 98 -7 1 -1\") = \"4\" ]]\n    [[ $(candidate\
    \ \"12 23 34 -45 -56 0\") = \"5\" ]]\n    [[ $(candidate \"0 1\") = \"1\" ]]\n\
    \    [[ $(candidate \"1\") = \"1\" ]]\n}\n\nrun_test"
  status: SyntaxError
  stderr: '/tmp/tmpubp7z08d.sh: line 44: syntax error near unexpected token `}''

    /tmp/tmpubp7z08d.sh: line 44: `}''

    '
  stdout: ''
  timestamp: 1660004373
- exit_code: 1
  program: "#!/bin/bash\n# Write a function count_nums which takes an array of integers\
    \ and returns\n# the number of elements which has a sum of digits > 0.\n# If a\
    \ number is negative, then its first signed digit will be negative:\n# e.g. -123\
    \ has signed digits -1, 2, and 3.\n#\n# $1 is a space-separated list\ncount_nums()\
    \ {\n    local -a arr=($1)\n    local count=0\n    for i in \"${arr[@]}\"; do\n\
    \        local sum=0\n        local num=$i\n        if [[ $i -lt 0 ]]; then\n\
    \            num=$((-$i))\n        fi\n        while [[ $num -gt 0 ]]; do\n  \
    \          sum=$((sum + num % 10))\n            num=$((num / 10))\n        done\n\
    \        if [[ $sum -gt 0 ]]; then\n            count=$((count + 1))\n       \
    \ fi\n    done\n    echo $count\n}\n\ncandidate() {\n    count_nums \"$@\"\n}\n\
    \nset -e\nrun_test() {\n    [[ $(candidate \"\") = \"0\" ]]\n    [[ $(candidate\
    \ \"-1 -2 0\") = \"0\" ]]\n    [[ $(candidate \"1 1 2 -2 3 4 5\") = \"6\" ]]\n\
    \    [[ $(candidate \"1 6 9 -6 0 1 5\") = \"5\" ]]\n    [[ $(candidate \"1 100\
    \ 98 -7 1 -1\") = \"4\" ]]\n    [[ $(candidate \"12 23 34 -45 -56 0\") = \"5\"\
    \ ]]\n    [[ $(candidate \"0 1\") = \"1\" ]]\n    [[ $(candidate \"1\") = \"1\"\
    \ ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660004373
- exit_code: 1
  program: "#!/bin/bash\n# Write a function count_nums which takes an array of integers\
    \ and returns\n# the number of elements which has a sum of digits > 0.\n# If a\
    \ number is negative, then its first signed digit will be negative:\n# e.g. -123\
    \ has signed digits -1, 2, and 3.\n#\n# $1 is a space-separated list\ncount_nums()\
    \ {\n    local sum=0\n    local count=0\n    for i in $1; do\n        if [ $i\
    \ -lt 0 ]; then\n            i=$((-$i))\n        fi\n        while [ $i -gt 0\
    \ ]; do\n            sum=$((sum + i % 10))\n            i=$((i / 10))\n      \
    \  done\n        if [ $sum -gt 0 ]; then\n            count=$((count + 1))\n \
    \       fi\n        sum=0\n    done\n    echo $count\n}\n\ncandidate() {\n   \
    \ count_nums \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"\") = \"\
    0\" ]]\n    [[ $(candidate \"-1 -2 0\") = \"0\" ]]\n    [[ $(candidate \"1 1 2\
    \ -2 3 4 5\") = \"6\" ]]\n    [[ $(candidate \"1 6 9 -6 0 1 5\") = \"5\" ]]\n\
    \    [[ $(candidate \"1 100 98 -7 1 -1\") = \"4\" ]]\n    [[ $(candidate \"12\
    \ 23 34 -45 -56 0\") = \"5\" ]]\n    [[ $(candidate \"0 1\") = \"1\" ]]\n    [[\
    \ $(candidate \"1\") = \"1\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660004373
- exit_code: 1
  program: "#!/bin/bash\n# Write a function count_nums which takes an array of integers\
    \ and returns\n# the number of elements which has a sum of digits > 0.\n# If a\
    \ number is negative, then its first signed digit will be negative:\n# e.g. -123\
    \ has signed digits -1, 2, and 3.\n#\n# $1 is a space-separated list\ncount_nums()\
    \ {\n    local -a arr=(\"$@\")\n    local count=0\n    for i in \"${arr[@]}\"\
    ; do\n        local sum=0\n        if [[ $i -lt 0 ]]; then\n            i=$((-i))\n\
    \        fi\n        while [[ $i -gt 0 ]]; do\n            sum=$((sum + i % 10))\n\
    \            i=$((i / 10))\n        done\n        if [[ $sum -gt 0 ]]; then\n\
    \            count=$((count + 1))\n        fi\n    done\n    echo $count\n}\n\n\
    candidate() {\n    count_nums \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate\
    \ \"\") = \"0\" ]]\n    [[ $(candidate \"-1 -2 0\") = \"0\" ]]\n    [[ $(candidate\
    \ \"1 1 2 -2 3 4 5\") = \"6\" ]]\n    [[ $(candidate \"1 6 9 -6 0 1 5\") = \"\
    5\" ]]\n    [[ $(candidate \"1 100 98 -7 1 -1\") = \"4\" ]]\n    [[ $(candidate\
    \ \"12 23 34 -45 -56 0\") = \"5\" ]]\n    [[ $(candidate \"0 1\") = \"1\" ]]\n\
    \    [[ $(candidate \"1\") = \"1\" ]]\n}\n\nrun_test"
  status: SyntaxError
  stderr: '/tmp/tmpuv3zu6bq.sh: line 13: [[: -1 -2 0: syntax error in expression (error
    token is "0")

    /tmp/tmpuv3zu6bq.sh: line 16: [[: -1 -2 0: syntax error in expression (error token
    is "0")

    /tmp/tmpuv3zu6bq.sh: line 13: [[: 1 1 2 -2 3 4 5: syntax error in expression (error
    token is "1 2 -2 3 4 5")

    /tmp/tmpuv3zu6bq.sh: line 16: [[: 1 1 2 -2 3 4 5: syntax error in expression (error
    token is "1 2 -2 3 4 5")

    '
  stdout: ''
  timestamp: 1660004373
- exit_code: 1
  program: "#!/bin/bash\n# Write a function count_nums which takes an array of integers\
    \ and returns\n# the number of elements which has a sum of digits > 0.\n# If a\
    \ number is negative, then its first signed digit will be negative:\n# e.g. -123\
    \ has signed digits -1, 2, and 3.\n#\n# $1 is a space-separated list\ncount_nums()\
    \ {\n    local -a arr=($1)\n    local count=0\n    for i in \"${arr[@]}\"; do\n\
    \        local sum=0\n        local num=${i#-}\n        while [[ $num -gt 0 ]];\
    \ do\n            sum=$((sum + num % 10))\n            num=$((num / 10))\n   \
    \     done\n        if [[ $sum -gt 0 ]]; then\n            count=$((count + 1))\n\
    \        fi\n    done\n    echo $count\n}\n\ncandidate() {\n    count_nums \"\
    $@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"\") = \"0\" ]]\n    [[ $(candidate\
    \ \"-1 -2 0\") = \"0\" ]]\n    [[ $(candidate \"1 1 2 -2 3 4 5\") = \"6\" ]]\n\
    \    [[ $(candidate \"1 6 9 -6 0 1 5\") = \"5\" ]]\n    [[ $(candidate \"1 100\
    \ 98 -7 1 -1\") = \"4\" ]]\n    [[ $(candidate \"12 23 34 -45 -56 0\") = \"5\"\
    \ ]]\n    [[ $(candidate \"0 1\") = \"1\" ]]\n    [[ $(candidate \"1\") = \"1\"\
    \ ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660004373
- exit_code: 1
  program: "#!/bin/bash\n# Write a function count_nums which takes an array of integers\
    \ and returns\n# the number of elements which has a sum of digits > 0.\n# If a\
    \ number is negative, then its first signed digit will be negative:\n# e.g. -123\
    \ has signed digits -1, 2, and 3.\n#\n# $1 is a space-separated list\ncount_nums()\
    \ {\n    local -a nums=($1)\n    local count=0\n    for num in \"${nums[@]}\"\
    ; do\n        local sum=0\n        local abs_num=${num#-}\n        while (( abs_num\
    \ > 0 )); do\n            (( sum += abs_num % 10 ))\n            (( abs_num /=\
    \ 10 ))\n        done\n        (( sum > 0 )) && (( count++ ))\n    done\n    echo\
    \ $count\n}\n\ncandidate() {\n    count_nums \"$@\"\n}\n\nset -e\nrun_test() {\n\
    \    [[ $(candidate \"\") = \"0\" ]]\n    [[ $(candidate \"-1 -2 0\") = \"0\"\
    \ ]]\n    [[ $(candidate \"1 1 2 -2 3 4 5\") = \"6\" ]]\n    [[ $(candidate \"\
    1 6 9 -6 0 1 5\") = \"5\" ]]\n    [[ $(candidate \"1 100 98 -7 1 -1\") = \"4\"\
    \ ]]\n    [[ $(candidate \"12 23 34 -45 -56 0\") = \"5\" ]]\n    [[ $(candidate\
    \ \"0 1\") = \"1\" ]]\n    [[ $(candidate \"1\") = \"1\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660004373
- exit_code: 1
  program: "#!/bin/bash\n# Write a function count_nums which takes an array of integers\
    \ and returns\n# the number of elements which has a sum of digits > 0.\n# If a\
    \ number is negative, then its first signed digit will be negative:\n# e.g. -123\
    \ has signed digits -1, 2, and 3.\n#\n# $1 is a space-separated list\ncount_nums()\
    \ {\n    local -a arr=(\"$@\")\n    local -i sum=0\n    local -i count=0\n   \
    \ for i in \"${arr[@]}\"; do\n        if [[ $i -lt 0 ]]; then\n            i=$((-i))\n\
    \        fi\n        while [[ $i -gt 0 ]]; do\n            sum=$((sum + i % 10))\n\
    \            i=$((i / 10))\n        done\n        if [[ $sum -gt 0 ]]; then\n\
    \            count=$((count + 1))\n        fi\n        sum=0\n    done\n    echo\
    \ $count\n}\n\ncandidate() {\n    count_nums \"$@\"\n}\n\nset -e\nrun_test() {\n\
    \    [[ $(candidate \"\") = \"0\" ]]\n    [[ $(candidate \"-1 -2 0\") = \"0\"\
    \ ]]\n    [[ $(candidate \"1 1 2 -2 3 4 5\") = \"6\" ]]\n    [[ $(candidate \"\
    1 6 9 -6 0 1 5\") = \"5\" ]]\n    [[ $(candidate \"1 100 98 -7 1 -1\") = \"4\"\
    \ ]]\n    [[ $(candidate \"12 23 34 -45 -56 0\") = \"5\" ]]\n    [[ $(candidate\
    \ \"0 1\") = \"1\" ]]\n    [[ $(candidate \"1\") = \"1\" ]]\n}\n\nrun_test"
  status: SyntaxError
  stderr: '/tmp/tmpkyudapyi.sh: line 13: [[: -1 -2 0: syntax error in expression (error
    token is "0")

    /tmp/tmpkyudapyi.sh: line 16: [[: -1 -2 0: syntax error in expression (error token
    is "0")

    /tmp/tmpkyudapyi.sh: line 13: [[: 1 1 2 -2 3 4 5: syntax error in expression (error
    token is "1 2 -2 3 4 5")

    /tmp/tmpkyudapyi.sh: line 16: [[: 1 1 2 -2 3 4 5: syntax error in expression (error
    token is "1 2 -2 3 4 5")

    '
  stdout: ''
  timestamp: 1660004373
- exit_code: 1
  program: "#!/bin/bash\n# Write a function count_nums which takes an array of integers\
    \ and returns\n# the number of elements which has a sum of digits > 0.\n# If a\
    \ number is negative, then its first signed digit will be negative:\n# e.g. -123\
    \ has signed digits -1, 2, and 3.\n#\n# $1 is a space-separated list\ncount_nums()\
    \ {\n    local -a array\n    array=($1)\n    local count=0\n    for i in \"${array[@]}\"\
    ; do\n        local sum=0\n        if [ $i -lt 0 ]; then\n            i=$((i*-1))\n\
    \        fi\n        while [ $i -gt 0 ]; do\n            sum=$((sum+i%10))\n \
    \           i=$((i/10))\n        done\n        if [ $sum -gt 0 ]; then\n     \
    \       count=$((count+1))\n        fi\n    done\n    echo $count\n}\n\ncandidate()\
    \ {\n    count_nums \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"\"\
    ) = \"0\" ]]\n    [[ $(candidate \"-1 -2 0\") = \"0\" ]]\n    [[ $(candidate \"\
    1 1 2 -2 3 4 5\") = \"6\" ]]\n    [[ $(candidate \"1 6 9 -6 0 1 5\") = \"5\" ]]\n\
    \    [[ $(candidate \"1 100 98 -7 1 -1\") = \"4\" ]]\n    [[ $(candidate \"12\
    \ 23 34 -45 -56 0\") = \"5\" ]]\n    [[ $(candidate \"0 1\") = \"1\" ]]\n    [[\
    \ $(candidate \"1\") = \"1\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660004373
- exit_code: 1
  program: "#!/bin/bash\n# Write a function count_nums which takes an array of integers\
    \ and returns\n# the number of elements which has a sum of digits > 0.\n# If a\
    \ number is negative, then its first signed digit will be negative:\n# e.g. -123\
    \ has signed digits -1, 2, and 3.\n#\n# $1 is a space-separated list\ncount_nums()\
    \ {\n    local -a arr=($1)\n    local count=0\n    for i in \"${arr[@]}\"; do\n\
    \        if [[ $i -lt 0 ]]; then\n            i=$((-i))\n        fi\n        local\
    \ sum=0\n        while [[ $i -gt 0 ]]; do\n            sum=$((sum + i % 10))\n\
    \            i=$((i / 10))\n        done\n        if [[ $sum -gt 0 ]]; then\n\
    \            count=$((count + 1))\n        fi\n    done\n    echo $count\n}\n\n\
    candidate() {\n    count_nums \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate\
    \ \"\") = \"0\" ]]\n    [[ $(candidate \"-1 -2 0\") = \"0\" ]]\n    [[ $(candidate\
    \ \"1 1 2 -2 3 4 5\") = \"6\" ]]\n    [[ $(candidate \"1 6 9 -6 0 1 5\") = \"\
    5\" ]]\n    [[ $(candidate \"1 100 98 -7 1 -1\") = \"4\" ]]\n    [[ $(candidate\
    \ \"12 23 34 -45 -56 0\") = \"5\" ]]\n    [[ $(candidate \"0 1\") = \"1\" ]]\n\
    \    [[ $(candidate \"1\") = \"1\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660004373
- exit_code: 1
  program: "#!/bin/bash\n# Write a function count_nums which takes an array of integers\
    \ and returns\n# the number of elements which has a sum of digits > 0.\n# If a\
    \ number is negative, then its first signed digit will be negative:\n# e.g. -123\
    \ has signed digits -1, 2, and 3.\n#\n# $1 is a space-separated list\ncount_nums()\
    \ {\n    local -a arr=(\"$@\")\n    local -i i sum=0 count=0\n    for i in \"\
    ${arr[@]}\"; do\n        if (( i < 0 )); then\n            (( sum += -i % 10 ))\n\
    \            (( i /= 10 ))\n        fi\n        while (( i > 0 )); do\n      \
    \      (( sum += i % 10 ))\n            (( i /= 10 ))\n        done\n        ((\
    \ sum > 0 )) && (( count++ ))\n        (( sum = 0 ))\n    done\n    echo \"$count\"\
    \n}\n\ncandidate() {\n    count_nums \"$@\"\n}\n\nset -e\nrun_test() {\n    [[\
    \ $(candidate \"\") = \"0\" ]]\n    [[ $(candidate \"-1 -2 0\") = \"0\" ]]\n \
    \   [[ $(candidate \"1 1 2 -2 3 4 5\") = \"6\" ]]\n    [[ $(candidate \"1 6 9\
    \ -6 0 1 5\") = \"5\" ]]\n    [[ $(candidate \"1 100 98 -7 1 -1\") = \"4\" ]]\n\
    \    [[ $(candidate \"12 23 34 -45 -56 0\") = \"5\" ]]\n    [[ $(candidate \"\
    0 1\") = \"1\" ]]\n    [[ $(candidate \"1\") = \"1\" ]]\n}\n\nrun_test"
  status: SyntaxError
  stderr: '/tmp/tmpz2mvcwnu.sh: line 11: -1 -2 0: syntax error in expression (error
    token is "0")

    '
  stdout: ''
  timestamp: 1660004373
- exit_code: 1
  program: "#!/bin/bash\n# Write a function count_nums which takes an array of integers\
    \ and returns\n# the number of elements which has a sum of digits > 0.\n# If a\
    \ number is negative, then its first signed digit will be negative:\n# e.g. -123\
    \ has signed digits -1, 2, and 3.\n#\n# $1 is a space-separated list\ncount_nums()\
    \ {\n    local -a array\n    local -i sum\n    local -i i\n    local -i j\n  \
    \  local -i count\n    local -i n\n\n    array=($1)\n    count=0\n    for ((i=0;\
    \ i<${#array[@]}; i++)); do\n        n=${array[i]}\n        if [[ $n -lt 0 ]];\
    \ then\n            n=$((-n))\n        fi\n        sum=0\n        while [[ $n\
    \ -gt 0 ]]; do\n            j=$((n % 10))\n            sum=$((sum + j))\n    \
    \        n=$((n / 10))\n        done\n        if [[ $sum -gt 0 ]]; then\n    \
    \        count=$((count + 1))\n        fi\n    done\n    echo $count\n}\n\ncandidate()\
    \ {\n    count_nums \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"\"\
    ) = \"0\" ]]\n    [[ $(candidate \"-1 -2 0\") = \"0\" ]]\n    [[ $(candidate \"\
    1 1 2 -2 3 4 5\") = \"6\" ]]\n    [[ $(candidate \"1 6 9 -6 0 1 5\") = \"5\" ]]\n\
    \    [[ $(candidate \"1 100 98 -7 1 -1\") = \"4\" ]]\n    [[ $(candidate \"12\
    \ 23 34 -45 -56 0\") = \"5\" ]]\n    [[ $(candidate \"0 1\") = \"1\" ]]\n    [[\
    \ $(candidate \"1\") = \"1\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660004373
- exit_code: 1
  program: "#!/bin/bash\n# Write a function count_nums which takes an array of integers\
    \ and returns\n# the number of elements which has a sum of digits > 0.\n# If a\
    \ number is negative, then its first signed digit will be negative:\n# e.g. -123\
    \ has signed digits -1, 2, and 3.\n#\n# $1 is a space-separated list\ncount_nums()\
    \ {\n    local -a nums=($1)\n    local count=0\n    for num in \"${nums[@]}\"\
    ; do\n        local sum=0\n        local n=$num\n        if [[ $num -lt 0 ]];\
    \ then\n            n=$(( -num ))\n        fi\n        while [[ $n -gt 0 ]]; do\n\
    \            sum=$(( sum + n % 10 ))\n            n=$(( n / 10 ))\n        done\n\
    \        if [[ $sum -gt 0 ]]; then\n            count=$(( count + 1 ))\n     \
    \   fi\n    done\n    echo $count\n}\n\ncandidate() {\n    count_nums \"$@\"\n\
    }\n\nset -e\nrun_test() {\n    [[ $(candidate \"\") = \"0\" ]]\n    [[ $(candidate\
    \ \"-1 -2 0\") = \"0\" ]]\n    [[ $(candidate \"1 1 2 -2 3 4 5\") = \"6\" ]]\n\
    \    [[ $(candidate \"1 6 9 -6 0 1 5\") = \"5\" ]]\n    [[ $(candidate \"1 100\
    \ 98 -7 1 -1\") = \"4\" ]]\n    [[ $(candidate \"12 23 34 -45 -56 0\") = \"5\"\
    \ ]]\n    [[ $(candidate \"0 1\") = \"1\" ]]\n    [[ $(candidate \"1\") = \"1\"\
    \ ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660004373
- exit_code: 1
  program: "#!/bin/bash\n# Write a function count_nums which takes an array of integers\
    \ and returns\n# the number of elements which has a sum of digits > 0.\n# If a\
    \ number is negative, then its first signed digit will be negative:\n# e.g. -123\
    \ has signed digits -1, 2, and 3.\n#\n# $1 is a space-separated list\ncount_nums()\
    \ {\n    local -a array=($1)\n    local count=0\n    for i in \"${array[@]}\"\
    ; do\n        local sum=0\n        if [ $i -lt 0 ]; then\n            i=$((i *\
    \ -1))\n        fi\n        while [ $i -gt 0 ]; do\n            sum=$((sum + i\
    \ % 10))\n            i=$((i / 10))\n        done\n        if [ $sum -gt 0 ];\
    \ then\n            count=$((count + 1))\n        fi\n    done\n    echo $count\n\
    }\n\ncandidate() {\n    count_nums \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate\
    \ \"\") = \"0\" ]]\n    [[ $(candidate \"-1 -2 0\") = \"0\" ]]\n    [[ $(candidate\
    \ \"1 1 2 -2 3 4 5\") = \"6\" ]]\n    [[ $(candidate \"1 6 9 -6 0 1 5\") = \"\
    5\" ]]\n    [[ $(candidate \"1 100 98 -7 1 -1\") = \"4\" ]]\n    [[ $(candidate\
    \ \"12 23 34 -45 -56 0\") = \"5\" ]]\n    [[ $(candidate \"0 1\") = \"1\" ]]\n\
    \    [[ $(candidate \"1\") = \"1\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660004373
- exit_code: 1
  program: "#!/bin/bash\n# Write a function count_nums which takes an array of integers\
    \ and returns\n# the number of elements which has a sum of digits > 0.\n# If a\
    \ number is negative, then its first signed digit will be negative:\n# e.g. -123\
    \ has signed digits -1, 2, and 3.\n#\n# $1 is a space-separated list\ncount_nums()\
    \ {\n    local -a nums=($1)\n    local i=0\n    local count=0\n    local sum=0\n\
    \    for i in \"${nums[@]}\"; do\n        if [[ $i -lt 0 ]]; then\n          \
    \  sum=$(( $i * -1 ))\n        else\n            sum=$i\n        fi\n        while\
    \ [[ $sum -gt 0 ]]; do\n            sum=$(( $sum / 10 ))\n            count=$((\
    \ $count + 1 ))\n        done\n    done\n    echo $count\n}\n\ncandidate() {\n\
    \    count_nums \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"\") =\
    \ \"0\" ]]\n    [[ $(candidate \"-1 -2 0\") = \"0\" ]]\n    [[ $(candidate \"\
    1 1 2 -2 3 4 5\") = \"6\" ]]\n    [[ $(candidate \"1 6 9 -6 0 1 5\") = \"5\" ]]\n\
    \    [[ $(candidate \"1 100 98 -7 1 -1\") = \"4\" ]]\n    [[ $(candidate \"12\
    \ 23 34 -45 -56 0\") = \"5\" ]]\n    [[ $(candidate \"0 1\") = \"1\" ]]\n    [[\
    \ $(candidate \"1\") = \"1\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660004373
- exit_code: 1
  program: "#!/bin/bash\n# Write a function count_nums which takes an array of integers\
    \ and returns\n# the number of elements which has a sum of digits > 0.\n# If a\
    \ number is negative, then its first signed digit will be negative:\n# e.g. -123\
    \ has signed digits -1, 2, and 3.\n#\n# $1 is a space-separated list\ncount_nums()\
    \ {\n    local -a arr=(\"$@\")\n    local -i sum=0\n    local -i count=0\n   \
    \ for i in \"${arr[@]}\"; do\n        if (( i < 0 )); then\n            (( sum\
    \ += -i % 10 ))\n            (( i /= 10 ))\n            (( sum += -i % 10 ))\n\
    \            (( i /= 10 ))\n            (( sum += -i % 10 ))\n        else\n \
    \           (( sum += i % 10 ))\n            (( i /= 10 ))\n            (( sum\
    \ += i % 10 ))\n            (( i /= 10 ))\n            (( sum += i % 10 ))\n \
    \       fi\n        if (( sum > 0 )); then\n            (( count++ ))\n      \
    \  fi\n        (( sum = 0 ))\n    done\n    echo \"$count\"\n}\n\ncandidate()\
    \ {\n    count_nums \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"\"\
    ) = \"0\" ]]\n    [[ $(candidate \"-1 -2 0\") = \"0\" ]]\n    [[ $(candidate \"\
    1 1 2 -2 3 4 5\") = \"6\" ]]\n    [[ $(candidate \"1 6 9 -6 0 1 5\") = \"5\" ]]\n\
    \    [[ $(candidate \"1 100 98 -7 1 -1\") = \"4\" ]]\n    [[ $(candidate \"12\
    \ 23 34 -45 -56 0\") = \"5\" ]]\n    [[ $(candidate \"0 1\") = \"1\" ]]\n    [[\
    \ $(candidate \"1\") = \"1\" ]]\n}\n\nrun_test"
  status: SyntaxError
  stderr: '/tmp/tmpiatd30bs.sh: line 13: ((: -1 -2 0: syntax error in expression (error
    token is "0")

    /tmp/tmpiatd30bs.sh: line 20: ((: -1 -2 0: syntax error in expression (error token
    is "0")

    /tmp/tmpiatd30bs.sh: line 21: ((: -1 -2 0: syntax error in expression (error token
    is "0")

    /tmp/tmpiatd30bs.sh: line 22: ((: -1 -2 0: syntax error in expression (error token
    is "0")

    /tmp/tmpiatd30bs.sh: line 23: ((: -1 -2 0: syntax error in expression (error token
    is "0")

    /tmp/tmpiatd30bs.sh: line 24: ((: -1 -2 0: syntax error in expression (error token
    is "0")

    /tmp/tmpiatd30bs.sh: line 13: ((: 1 1 2 -2 3 4 5: syntax error in expression (error
    token is "1 2 -2 3 4 5")

    /tmp/tmpiatd30bs.sh: line 20: ((: 1 1 2 -2 3 4 5: syntax error in expression (error
    token is "1 2 -2 3 4 5")

    /tmp/tmpiatd30bs.sh: line 21: ((: 1 1 2 -2 3 4 5: syntax error in expression (error
    token is "1 2 -2 3 4 5")

    /tmp/tmpiatd30bs.sh: line 22: ((: 1 1 2 -2 3 4 5: syntax error in expression (error
    token is "1 2 -2 3 4 5")

    /tmp/tmpiatd30bs.sh: line 23: ((: 1 1 2 -2 3 4 5: syntax error in expression (error
    token is "1 2 -2 3 4 5")

    /tmp/tmpiatd30bs.sh: line 24: ((: 1 1 2 -2 3 4 5: syntax error in expression (error
    token is "1 2 -2 3 4 5")

    '
  stdout: ''
  timestamp: 1660004373
- exit_code: -1
  program: "#!/bin/bash\n# Write a function count_nums which takes an array of integers\
    \ and returns\n# the number of elements which has a sum of digits > 0.\n# If a\
    \ number is negative, then its first signed digit will be negative:\n# e.g. -123\
    \ has signed digits -1, 2, and 3.\n#\n# $1 is a space-separated list\ncount_nums()\
    \ {\n    local -i sum=0\n    local -i count=0\n    local -i i=0\n    local -i\
    \ num=0\n    local -i len=0\n    local -i digit=0\n    local -a arr=()\n    arr=($1)\n\
    \    len=${#arr[@]}\n    for ((i=0; i<len; i++)); do\n        num=${arr[i]}\n\
    \        if ((num < 0)); then\n            num=-num\n        fi\n        sum=0\n\
    \        while ((num > 0)); do\n            digit=num%10\n            sum+=digit\n\
    \            num/=10\n        done\n        if ((sum > 0)); then\n           \
    \ ((count++))\n        fi\n    done\n    echo $count\n}\n\ncandidate() {\n   \
    \ count_nums \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"\") = \"\
    0\" ]]\n    [[ $(candidate \"-1 -2 0\") = \"0\" ]]\n    [[ $(candidate \"1 1 2\
    \ -2 3 4 5\") = \"6\" ]]\n    [[ $(candidate \"1 6 9 -6 0 1 5\") = \"5\" ]]\n\
    \    [[ $(candidate \"1 100 98 -7 1 -1\") = \"4\" ]]\n    [[ $(candidate \"12\
    \ 23 34 -45 -56 0\") = \"5\" ]]\n    [[ $(candidate \"0 1\") = \"1\" ]]\n    [[\
    \ $(candidate \"1\") = \"1\" ]]\n}\n\nrun_test"
  status: Timeout
  stderr: 'b''/tmp/tmptiz556nv.sh: line 27: num/=10: No such file or directory\n/tmp/tmptiz556nv.sh:
    line 27: num/=10: No such file or directory\n/tmp/tmptiz556nv.sh: line 27: num/=10:
    No such file or directory\n/tmp/tmptiz556nv.sh: line 27: num/=10: No such file
    or directory\n/tmp/tmptiz556nv.sh: line 27: num/=10: No such file or directory\n/tmp/tmptiz556nv.sh:
    line 27: num/=10: No such file or directory\n/tmp/tmptiz556nv.sh: line 27: num/=10:
    No such file or directory\n/tmp/tmptiz556nv.sh: line 27: num/=10: No such file
    or directory\n/tmp/tmptiz556nv.sh: line 27: num/=10: No such file or directory\n/tmp/tmptiz556nv.sh:
    line 27: num/=10: No such file or directory\n/tmp/tmptiz556nv.sh: line 27: num/=10:
    No such file or directory\n/tmp/tmptiz556nv.sh: line 27: num/=10: No such file
    or directory\n/tmp/tmptiz556nv.sh: line 27: num/=10: No such file or directory\n/tmp/tmptiz556nv.sh:
    line 27: num/=10: No such file or directory\n/tmp/tmptiz556nv.sh: line 27: num/=10:
    No such file or directory\n/tmp/tmptiz556nv.sh: line 27: num/=10: No such file
    or directory\n/tmp/tmptiz556nv.sh: line 27: num/=10: No such file or directory\n/tmp/tmptiz556nv.sh:
    line 27: num/=10: No such file or directory\n/tmp/tmptiz556nv.sh: line 27: num/=10:
    No such file or directory\n/tmp/tmptiz556nv.sh: line 27: num/=10: No such file
    or directory\n/tmp/tmptiz556nv.sh: line 27: num/=10: No such file or directory\n/tmp/tmptiz556nv.sh:
    line 27: num/=10: No such file or directory\n/tmp/tmptiz556nv.sh: line 27: num/=10:
    No such file or directory\n/tmp/tmptiz556nv.sh: line 27: num/=10: No such file
    or directory\n/tmp/tmptiz556nv.sh: line 27: num/=10: No such file or directory\n/tmp/tmptiz556nv.sh:
    line 27: num/=10: No such file or directory\n/tmp/tmptiz556nv.sh: line 27: num/=10:
    No such file or directory\n/tmp/tmptiz556nv.sh: line 27: num/=10: No such file
    or directory\n/tmp/tmptiz556nv.sh: line 27: num/=10: No such file or directory\n/tmp/tmptiz556nv.sh:
    line 27: num/=10: No such file or directory\n/tmp/tmptiz556nv.sh: line 27: num/=10:
    No such file or directory\n'
  stdout: None
  timestamp: 1660004378
- exit_code: 1
  program: "#!/bin/bash\n# Write a function count_nums which takes an array of integers\
    \ and returns\n# the number of elements which has a sum of digits > 0.\n# If a\
    \ number is negative, then its first signed digit will be negative:\n# e.g. -123\
    \ has signed digits -1, 2, and 3.\n#\n# $1 is a space-separated list\ncount_nums()\
    \ {\n    local -a array=($1)\n    local count=0\n    for i in \"${array[@]}\"\
    ; do\n        local sum=0\n        for ((j=0; j<${#i}; j++)); do\n           \
    \ sum=$((sum + ${i:$j:1}))\n        done\n        if [[ $sum -gt 0 ]]; then\n\
    \            count=$((count + 1))\n        fi\n    done\n    echo $count\n}\n\n\
    candidate() {\n    count_nums \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate\
    \ \"\") = \"0\" ]]\n    [[ $(candidate \"-1 -2 0\") = \"0\" ]]\n    [[ $(candidate\
    \ \"1 1 2 -2 3 4 5\") = \"6\" ]]\n    [[ $(candidate \"1 6 9 -6 0 1 5\") = \"\
    5\" ]]\n    [[ $(candidate \"1 100 98 -7 1 -1\") = \"4\" ]]\n    [[ $(candidate\
    \ \"12 23 34 -45 -56 0\") = \"5\" ]]\n    [[ $(candidate \"0 1\") = \"1\" ]]\n\
    \    [[ $(candidate \"1\") = \"1\" ]]\n}\n\nrun_test"
  status: SyntaxError
  stderr: '/tmp/tmppeix_j77.sh: line 14: sum + -: syntax error: operand expected (error
    token is "-")

    '
  stdout: ''
  timestamp: 1660004373
- exit_code: 1
  program: "#!/bin/bash\n# Write a function count_nums which takes an array of integers\
    \ and returns\n# the number of elements which has a sum of digits > 0.\n# If a\
    \ number is negative, then its first signed digit will be negative:\n# e.g. -123\
    \ has signed digits -1, 2, and 3.\n#\n# $1 is a space-separated list\ncount_nums()\
    \ {\n    local -a arr=(\"$@\")\n    local -i sum=0\n    local -i count=0\n   \
    \ local -i i=0\n    local -i n=0\n    local -i num=0\n    local -i digit=0\n\n\
    \    for ((i=0; i<${#arr[@]}; i++)); do\n        num=${arr[$i]}\n        sum=0\n\
    \        while ((num != 0)); do\n            digit=$((num % 10))\n           \
    \ ((sum += digit))\n            ((num /= 10))\n        done\n        ((sum !=\
    \ 0)) && ((count++))\n    done\n    echo $count\n}\n\ncandidate() {\n    count_nums\
    \ \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"\") = \"0\" ]]\n   \
    \ [[ $(candidate \"-1 -2 0\") = \"0\" ]]\n    [[ $(candidate \"1 1 2 -2 3 4 5\"\
    ) = \"6\" ]]\n    [[ $(candidate \"1 6 9 -6 0 1 5\") = \"5\" ]]\n    [[ $(candidate\
    \ \"1 100 98 -7 1 -1\") = \"4\" ]]\n    [[ $(candidate \"12 23 34 -45 -56 0\"\
    ) = \"5\" ]]\n    [[ $(candidate \"0 1\") = \"1\" ]]\n    [[ $(candidate \"1\"\
    ) = \"1\" ]]\n}\n\nrun_test"
  status: SyntaxError
  stderr: '/tmp/tmp3rjjtja6.sh: line 18: -1 -2 0: syntax error in expression (error
    token is "0")

    '
  stdout: ''
  timestamp: 1660004373
- exit_code: 1
  program: "#!/bin/bash\n# Write a function count_nums which takes an array of integers\
    \ and returns\n# the number of elements which has a sum of digits > 0.\n# If a\
    \ number is negative, then its first signed digit will be negative:\n# e.g. -123\
    \ has signed digits -1, 2, and 3.\n#\n# $1 is a space-separated list\ncount_nums()\
    \ {\n    local -i sum=0\n    local -i n=0\n    for i in $1; do\n        sum=0\n\
    \        if (( i < 0 )); then\n            i=-i\n        fi\n        while ((\
    \ i > 0 )); do\n            (( sum += i % 10 ))\n            (( i /= 10 ))\n \
    \       done\n        (( sum > 0 )) && (( n++ ))\n    done\n    echo $n\n}\n\n\
    candidate() {\n    count_nums \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate\
    \ \"\") = \"0\" ]]\n    [[ $(candidate \"-1 -2 0\") = \"0\" ]]\n    [[ $(candidate\
    \ \"1 1 2 -2 3 4 5\") = \"6\" ]]\n    [[ $(candidate \"1 6 9 -6 0 1 5\") = \"\
    5\" ]]\n    [[ $(candidate \"1 100 98 -7 1 -1\") = \"4\" ]]\n    [[ $(candidate\
    \ \"12 23 34 -45 -56 0\") = \"5\" ]]\n    [[ $(candidate \"0 1\") = \"1\" ]]\n\
    \    [[ $(candidate \"1\") = \"1\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: '/tmp/tmp2dv8dt8h.sh: line 16: ((: -i: expression recursion level exceeded
    (error token is "i")

    /tmp/tmp2dv8dt8h.sh: line 16: ((: -i: expression recursion level exceeded (error
    token is "i")

    /tmp/tmp2dv8dt8h.sh: line 16: ((: -i: expression recursion level exceeded (error
    token is "i")

    /tmp/tmp2dv8dt8h.sh: line 16: ((: -i: expression recursion level exceeded (error
    token is "i")

    /tmp/tmp2dv8dt8h.sh: line 16: ((: -i: expression recursion level exceeded (error
    token is "i")

    /tmp/tmp2dv8dt8h.sh: line 16: ((: -i: expression recursion level exceeded (error
    token is "i")

    /tmp/tmp2dv8dt8h.sh: line 16: ((: -i: expression recursion level exceeded (error
    token is "i")

    /tmp/tmp2dv8dt8h.sh: line 16: ((: -i: expression recursion level exceeded (error
    token is "i")

    '
  stdout: ''
  timestamp: 1660004373
- exit_code: 1
  program: "#!/bin/bash\n# Write a function count_nums which takes an array of integers\
    \ and returns\n# the number of elements which has a sum of digits > 0.\n# If a\
    \ number is negative, then its first signed digit will be negative:\n# e.g. -123\
    \ has signed digits -1, 2, and 3.\n#\n# $1 is a space-separated list\ncount_nums()\
    \ {\n    local -a arr=(\"$@\")\n    local count=0\n    for i in \"${arr[@]}\"\
    ; do\n        local sum=0\n        local num=${i#-}\n        while (( num > 0\
    \ )); do\n            (( sum += num % 10 ))\n            (( num /= 10 ))\n   \
    \     done\n        (( sum > 0 )) && (( count++ ))\n    done\n    echo $count\n\
    }\n\ncandidate() {\n    count_nums \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate\
    \ \"\") = \"0\" ]]\n    [[ $(candidate \"-1 -2 0\") = \"0\" ]]\n    [[ $(candidate\
    \ \"1 1 2 -2 3 4 5\") = \"6\" ]]\n    [[ $(candidate \"1 6 9 -6 0 1 5\") = \"\
    5\" ]]\n    [[ $(candidate \"1 100 98 -7 1 -1\") = \"4\" ]]\n    [[ $(candidate\
    \ \"12 23 34 -45 -56 0\") = \"5\" ]]\n    [[ $(candidate \"0 1\") = \"1\" ]]\n\
    \    [[ $(candidate \"1\") = \"1\" ]]\n}\n\nrun_test"
  status: SyntaxError
  stderr: '/tmp/tmp_eff3j7k.sh: line 14: ((: 1 -2 0: syntax error in expression (error
    token is "0")

    /tmp/tmp_eff3j7k.sh: line 14: ((: 1 1 2 -2 3 4 5: syntax error in expression (error
    token is "1 2 -2 3 4 5")

    '
  stdout: ''
  timestamp: 1660004373
- exit_code: 1
  program: "#!/bin/bash\n# Write a function count_nums which takes an array of integers\
    \ and returns\n# the number of elements which has a sum of digits > 0.\n# If a\
    \ number is negative, then its first signed digit will be negative:\n# e.g. -123\
    \ has signed digits -1, 2, and 3.\n#\n# $1 is a space-separated list\ncount_nums()\
    \ {\n    local -a array=(\"$@\")\n    local i=0\n    local sum=0\n    local count=0\n\
    \    for i in \"${array[@]}\"; do\n        if [[ $i -lt 0 ]]; then\n         \
    \   i=$((-i))\n        fi\n        while [[ $i -gt 0 ]]; do\n            sum=$((sum\
    \ + i % 10))\n            i=$((i / 10))\n        done\n        if [[ $sum -gt\
    \ 0 ]]; then\n            count=$((count + 1))\n        fi\n        sum=0\n  \
    \  done\n    echo $count\n}\n\ncandidate() {\n    count_nums \"$@\"\n}\n\nset\
    \ -e\nrun_test() {\n    [[ $(candidate \"\") = \"0\" ]]\n    [[ $(candidate \"\
    -1 -2 0\") = \"0\" ]]\n    [[ $(candidate \"1 1 2 -2 3 4 5\") = \"6\" ]]\n   \
    \ [[ $(candidate \"1 6 9 -6 0 1 5\") = \"5\" ]]\n    [[ $(candidate \"1 100 98\
    \ -7 1 -1\") = \"4\" ]]\n    [[ $(candidate \"12 23 34 -45 -56 0\") = \"5\" ]]\n\
    \    [[ $(candidate \"0 1\") = \"1\" ]]\n    [[ $(candidate \"1\") = \"1\" ]]\n\
    }\n\nrun_test"
  status: SyntaxError
  stderr: '/tmp/tmpg532ox6l.sh: line 14: [[: -1 -2 0: syntax error in expression (error
    token is "0")

    /tmp/tmpg532ox6l.sh: line 17: [[: -1 -2 0: syntax error in expression (error token
    is "0")

    /tmp/tmpg532ox6l.sh: line 14: [[: 1 1 2 -2 3 4 5: syntax error in expression (error
    token is "1 2 -2 3 4 5")

    /tmp/tmpg532ox6l.sh: line 17: [[: 1 1 2 -2 3 4 5: syntax error in expression (error
    token is "1 2 -2 3 4 5")

    '
  stdout: ''
  timestamp: 1660004373
- exit_code: 1
  program: "#!/bin/bash\n# Write a function count_nums which takes an array of integers\
    \ and returns\n# the number of elements which has a sum of digits > 0.\n# If a\
    \ number is negative, then its first signed digit will be negative:\n# e.g. -123\
    \ has signed digits -1, 2, and 3.\n#\n# $1 is a space-separated list\ncount_nums()\
    \ {\n    local -a nums=($1)\n    local count=0\n    local sum=0\n    for num in\
    \ ${nums[@]}; do\n        if [[ $num -lt 0 ]]; then\n            num=$((-$num))\n\
    \        fi\n        while [[ $num -gt 0 ]]; do\n            sum=$((sum + num\
    \ % 10))\n            num=$((num / 10))\n        done\n        if [[ $sum -gt\
    \ 0 ]]; then\n            count=$((count + 1))\n        fi\n        sum=0\n  \
    \  done\n    echo $count\n}\n\ncandidate() {\n    count_nums \"$@\"\n}\n\nset\
    \ -e\nrun_test() {\n    [[ $(candidate \"\") = \"0\" ]]\n    [[ $(candidate \"\
    -1 -2 0\") = \"0\" ]]\n    [[ $(candidate \"1 1 2 -2 3 4 5\") = \"6\" ]]\n   \
    \ [[ $(candidate \"1 6 9 -6 0 1 5\") = \"5\" ]]\n    [[ $(candidate \"1 100 98\
    \ -7 1 -1\") = \"4\" ]]\n    [[ $(candidate \"12 23 34 -45 -56 0\") = \"5\" ]]\n\
    \    [[ $(candidate \"0 1\") = \"1\" ]]\n    [[ $(candidate \"1\") = \"1\" ]]\n\
    }\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660004373
- exit_code: 1
  program: "#!/bin/bash\n# Write a function count_nums which takes an array of integers\
    \ and returns\n# the number of elements which has a sum of digits > 0.\n# If a\
    \ number is negative, then its first signed digit will be negative:\n# e.g. -123\
    \ has signed digits -1, 2, and 3.\n#\n# $1 is a space-separated list\ncount_nums()\
    \ {\n    local -a arr=(\"$@\")\n    local -i count=0\n    for i in \"${arr[@]}\"\
    ; do\n        local -i sum=0\n        local -i num=$i\n        while (( num !=\
    \ 0 )); do\n            (( sum += num % 10 ))\n            (( num /= 10 ))\n \
    \       done\n        (( count += sum > 0 ))\n    done\n    echo $count\n}\n\n\
    candidate() {\n    count_nums \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate\
    \ \"\") = \"0\" ]]\n    [[ $(candidate \"-1 -2 0\") = \"0\" ]]\n    [[ $(candidate\
    \ \"1 1 2 -2 3 4 5\") = \"6\" ]]\n    [[ $(candidate \"1 6 9 -6 0 1 5\") = \"\
    5\" ]]\n    [[ $(candidate \"1 100 98 -7 1 -1\") = \"4\" ]]\n    [[ $(candidate\
    \ \"12 23 34 -45 -56 0\") = \"5\" ]]\n    [[ $(candidate \"0 1\") = \"1\" ]]\n\
    \    [[ $(candidate \"1\") = \"1\" ]]\n}\n\nrun_test"
  status: SyntaxError
  stderr: '/tmp/tmpnsui9klv.sh: line 13: local: -1 -2 0: syntax error in expression
    (error token is "0")

    '
  stdout: ''
  timestamp: 1660004373
- exit_code: 1
  program: "#!/bin/bash\n# Write a function count_nums which takes an array of integers\
    \ and returns\n# the number of elements which has a sum of digits > 0.\n# If a\
    \ number is negative, then its first signed digit will be negative:\n# e.g. -123\
    \ has signed digits -1, 2, and 3.\n#\n# $1 is a space-separated list\ncount_nums()\
    \ {\n    local -a arr=(\"$@\")\n    local count=0\n    for i in \"${arr[@]}\"\
    ; do\n        local sum=0\n        local num=$i\n        if [[ $i -lt 0 ]]; then\n\
    \            num=$((-i))\n        fi\n        while [[ $num -gt 0 ]]; do\n   \
    \         sum=$((sum + num % 10))\n            num=$((num / 10))\n        done\n\
    \        if [[ $sum -gt 0 ]]; then\n            count=$((count + 1))\n       \
    \ fi\n    done\n    echo $count\n}\n\ncandidate() {\n    count_nums \"$@\"\n}\n\
    \nset -e\nrun_test() {\n    [[ $(candidate \"\") = \"0\" ]]\n    [[ $(candidate\
    \ \"-1 -2 0\") = \"0\" ]]\n    [[ $(candidate \"1 1 2 -2 3 4 5\") = \"6\" ]]\n\
    \    [[ $(candidate \"1 6 9 -6 0 1 5\") = \"5\" ]]\n    [[ $(candidate \"1 100\
    \ 98 -7 1 -1\") = \"4\" ]]\n    [[ $(candidate \"12 23 34 -45 -56 0\") = \"5\"\
    \ ]]\n    [[ $(candidate \"0 1\") = \"1\" ]]\n    [[ $(candidate \"1\") = \"1\"\
    \ ]]\n}\n\nrun_test"
  status: SyntaxError
  stderr: '/tmp/tmp52bw1gbb.sh: line 14: [[: -1 -2 0: syntax error in expression (error
    token is "0")

    /tmp/tmp52bw1gbb.sh: line 17: [[: -1 -2 0: syntax error in expression (error token
    is "0")

    /tmp/tmp52bw1gbb.sh: line 14: [[: 1 1 2 -2 3 4 5: syntax error in expression (error
    token is "1 2 -2 3 4 5")

    /tmp/tmp52bw1gbb.sh: line 17: [[: 1 1 2 -2 3 4 5: syntax error in expression (error
    token is "1 2 -2 3 4 5")

    '
  stdout: ''
  timestamp: 1660004373
- exit_code: 1
  program: "#!/bin/bash\n# Write a function count_nums which takes an array of integers\
    \ and returns\n# the number of elements which has a sum of digits > 0.\n# If a\
    \ number is negative, then its first signed digit will be negative:\n# e.g. -123\
    \ has signed digits -1, 2, and 3.\n#\n# $1 is a space-separated list\ncount_nums()\
    \ {\n    local -a arr=(\"$@\")\n    local -i sum=0\n    local -i count=0\n   \
    \ for i in \"${arr[@]}\"; do\n        if (( i < 0 )); then\n            (( sum\
    \ += -i % 10 ))\n            (( i = -i / 10 ))\n        fi\n        while (( i\
    \ > 0 )); do\n            (( sum += i % 10 ))\n            (( i /= 10 ))\n   \
    \     done\n        (( sum > 0 )) && (( count++ ))\n        (( sum = 0 ))\n  \
    \  done\n    echo \"$count\"\n}\n\ncandidate() {\n    count_nums \"$@\"\n}\n\n\
    set -e\nrun_test() {\n    [[ $(candidate \"\") = \"0\" ]]\n    [[ $(candidate\
    \ \"-1 -2 0\") = \"0\" ]]\n    [[ $(candidate \"1 1 2 -2 3 4 5\") = \"6\" ]]\n\
    \    [[ $(candidate \"1 6 9 -6 0 1 5\") = \"5\" ]]\n    [[ $(candidate \"1 100\
    \ 98 -7 1 -1\") = \"4\" ]]\n    [[ $(candidate \"12 23 34 -45 -56 0\") = \"5\"\
    \ ]]\n    [[ $(candidate \"0 1\") = \"1\" ]]\n    [[ $(candidate \"1\") = \"1\"\
    \ ]]\n}\n\nrun_test"
  status: SyntaxError
  stderr: '/tmp/tmp2fg_fdnp.sh: line 13: ((: -1 -2 0: syntax error in expression (error
    token is "0")

    /tmp/tmp2fg_fdnp.sh: line 17: ((: -1 -2 0: syntax error in expression (error token
    is "0")

    /tmp/tmp2fg_fdnp.sh: line 13: ((: 1 1 2 -2 3 4 5: syntax error in expression (error
    token is "1 2 -2 3 4 5")

    /tmp/tmp2fg_fdnp.sh: line 17: ((: 1 1 2 -2 3 4 5: syntax error in expression (error
    token is "1 2 -2 3 4 5")

    '
  stdout: ''
  timestamp: 1660004373
- exit_code: 1
  program: "#!/bin/bash\n# Write a function count_nums which takes an array of integers\
    \ and returns\n# the number of elements which has a sum of digits > 0.\n# If a\
    \ number is negative, then its first signed digit will be negative:\n# e.g. -123\
    \ has signed digits -1, 2, and 3.\n#\n# $1 is a space-separated list\ncount_nums()\
    \ {\n    local -a nums=($1)\n    local -i count=0\n    local -i sum=0\n    local\
    \ -i i=0\n    local -i j=0\n    local -i num=0\n    local -i digit=0\n    for\
    \ ((i=0; i<${#nums[@]}; i++)); do\n        num=${nums[$i]}\n        sum=0\n  \
    \      if ((num < 0)); then\n            num=$((-num))\n        fi\n        while\
    \ ((num > 0)); do\n            digit=$((num % 10))\n            sum=$((sum + digit))\n\
    \            num=$((num / 10))\n        done\n        if ((sum > 0)); then\n \
    \           count=$((count + 1))\n        fi\n    done\n    echo $count\n}\n\n\
    candidate() {\n    count_nums \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate\
    \ \"\") = \"0\" ]]\n    [[ $(candidate \"-1 -2 0\") = \"0\" ]]\n    [[ $(candidate\
    \ \"1 1 2 -2 3 4 5\") = \"6\" ]]\n    [[ $(candidate \"1 6 9 -6 0 1 5\") = \"\
    5\" ]]\n    [[ $(candidate \"1 100 98 -7 1 -1\") = \"4\" ]]\n    [[ $(candidate\
    \ \"12 23 34 -45 -56 0\") = \"5\" ]]\n    [[ $(candidate \"0 1\") = \"1\" ]]\n\
    \    [[ $(candidate \"1\") = \"1\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660004373
- exit_code: 1
  program: "#!/bin/bash\n# Write a function count_nums which takes an array of integers\
    \ and returns\n# the number of elements which has a sum of digits > 0.\n# If a\
    \ number is negative, then its first signed digit will be negative:\n# e.g. -123\
    \ has signed digits -1, 2, and 3.\n#\n# $1 is a space-separated list\ncount_nums()\
    \ {\n    local -a arr=(\"$@\")\n    local count=0\n    for i in \"${arr[@]}\"\
    ; do\n        local sum=0\n        if [[ $i -lt 0 ]]; then\n            i=$((-i))\n\
    \        fi\n        while [[ $i -gt 0 ]]; do\n            sum=$((sum + i % 10))\n\
    \            i=$((i / 10))\n        done\n        if [[ $sum -gt 0 ]]; then\n\
    \            count=$((count + 1))\n        fi\n    done\n    echo $count\n}\n\n\
    candidate() {\n    count_nums \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate\
    \ \"\") = \"0\" ]]\n    [[ $(candidate \"-1 -2 0\") = \"0\" ]]\n    [[ $(candidate\
    \ \"1 1 2 -2 3 4 5\") = \"6\" ]]\n    [[ $(candidate \"1 6 9 -6 0 1 5\") = \"\
    5\" ]]\n    [[ $(candidate \"1 100 98 -7 1 -1\") = \"4\" ]]\n    [[ $(candidate\
    \ \"12 23 34 -45 -56 0\") = \"5\" ]]\n    [[ $(candidate \"0 1\") = \"1\" ]]\n\
    \    [[ $(candidate \"1\") = \"1\" ]]\n}\n\nrun_test"
  status: SyntaxError
  stderr: '/tmp/tmpuv3zu6bq.sh: line 13: [[: -1 -2 0: syntax error in expression (error
    token is "0")

    /tmp/tmpuv3zu6bq.sh: line 16: [[: -1 -2 0: syntax error in expression (error token
    is "0")

    /tmp/tmpuv3zu6bq.sh: line 13: [[: 1 1 2 -2 3 4 5: syntax error in expression (error
    token is "1 2 -2 3 4 5")

    /tmp/tmpuv3zu6bq.sh: line 16: [[: 1 1 2 -2 3 4 5: syntax error in expression (error
    token is "1 2 -2 3 4 5")

    '
  stdout: ''
  timestamp: 1660004373
- exit_code: 1
  program: "#!/bin/bash\n# Write a function count_nums which takes an array of integers\
    \ and returns\n# the number of elements which has a sum of digits > 0.\n# If a\
    \ number is negative, then its first signed digit will be negative:\n# e.g. -123\
    \ has signed digits -1, 2, and 3.\n#\n# $1 is a space-separated list\ncount_nums()\
    \ {\n    local -a arr=(\"$@\")\n    local -i i=0\n    local -i sum=0\n    local\
    \ -i count=0\n    local -i len=${#arr[@]}\n    local -i num=0\n    local -i sign=0\n\
    \    local -i digit=0\n\n    while [ $i -lt $len ]; do\n        num=${arr[$i]}\n\
    \        sum=0\n        sign=1\n        if [ $num -lt 0 ]; then\n            sign=-1\n\
    \        fi\n        while [ $num -ne 0 ]; do\n            digit=$((num % 10))\n\
    \            sum=$((sum + sign * digit))\n            num=$((num / 10))\n    \
    \    done\n        if [ $sum -gt 0 ]; then\n            count=$((count + 1))\n\
    \        fi\n        i=$((i + 1))\n    done\n    echo $count\n}\n\ncandidate()\
    \ {\n    count_nums \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"\"\
    ) = \"0\" ]]\n    [[ $(candidate \"-1 -2 0\") = \"0\" ]]\n    [[ $(candidate \"\
    1 1 2 -2 3 4 5\") = \"6\" ]]\n    [[ $(candidate \"1 6 9 -6 0 1 5\") = \"5\" ]]\n\
    \    [[ $(candidate \"1 100 98 -7 1 -1\") = \"4\" ]]\n    [[ $(candidate \"12\
    \ 23 34 -45 -56 0\") = \"5\" ]]\n    [[ $(candidate \"0 1\") = \"1\" ]]\n    [[\
    \ $(candidate \"1\") = \"1\" ]]\n}\n\nrun_test"
  status: SyntaxError
  stderr: '/tmp/tmp_i10v8_1.sh: line 19: -1 -2 0: syntax error in expression (error
    token is "0")

    '
  stdout: ''
  timestamp: 1660004373
- exit_code: 1
  program: "#!/bin/bash\n# Write a function count_nums which takes an array of integers\
    \ and returns\n# the number of elements which has a sum of digits > 0.\n# If a\
    \ number is negative, then its first signed digit will be negative:\n# e.g. -123\
    \ has signed digits -1, 2, and 3.\n#\n# $1 is a space-separated list\ncount_nums()\
    \ {\n    local -a arr=($1)\n    local -i count=0\n    local -i sum=0\n    local\
    \ -i i=0\n    local -i n=0\n    local -i num=0\n    local -i sign=0\n    local\
    \ -i digit=0\n\n    for ((i=0; i<${#arr[@]}; i++)); do\n        num=${arr[i]}\n\
    \        sign=$((num < 0 ? -1 : 1))\n        num=$((num * sign))\n        sum=0\n\
    \        while ((num > 0)); do\n            digit=$((num % 10))\n            sum=$((sum\
    \ + digit))\n            num=$((num / 10))\n        done\n        if ((sum > 0));\
    \ then\n            count=$((count + 1))\n        fi\n    done\n    echo $count\n\
    }\n\ncandidate() {\n    count_nums \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate\
    \ \"\") = \"0\" ]]\n    [[ $(candidate \"-1 -2 0\") = \"0\" ]]\n    [[ $(candidate\
    \ \"1 1 2 -2 3 4 5\") = \"6\" ]]\n    [[ $(candidate \"1 6 9 -6 0 1 5\") = \"\
    5\" ]]\n    [[ $(candidate \"1 100 98 -7 1 -1\") = \"4\" ]]\n    [[ $(candidate\
    \ \"12 23 34 -45 -56 0\") = \"5\" ]]\n    [[ $(candidate \"0 1\") = \"1\" ]]\n\
    \    [[ $(candidate \"1\") = \"1\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660004373
- exit_code: 1
  program: "#!/bin/bash\n# Write a function count_nums which takes an array of integers\
    \ and returns\n# the number of elements which has a sum of digits > 0.\n# If a\
    \ number is negative, then its first signed digit will be negative:\n# e.g. -123\
    \ has signed digits -1, 2, and 3.\n#\n# $1 is a space-separated list\ncount_nums()\
    \ {\n    local -i sum=0\n    local -i count=0\n    local -i num\n    for num in\
    \ $1; do\n        if (( num < 0 )); then\n            num=-num\n        fi\n \
    \       while (( num > 0 )); do\n            sum+=$(( num % 10 ))\n          \
    \  num=$(( num / 10 ))\n        done\n        if (( sum > 0 )); then\n       \
    \     (( count++ ))\n        fi\n        sum=0\n    done\n    echo $count\n}\n\
    \ncandidate() {\n    count_nums \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate\
    \ \"\") = \"0\" ]]\n    [[ $(candidate \"-1 -2 0\") = \"0\" ]]\n    [[ $(candidate\
    \ \"1 1 2 -2 3 4 5\") = \"6\" ]]\n    [[ $(candidate \"1 6 9 -6 0 1 5\") = \"\
    5\" ]]\n    [[ $(candidate \"1 100 98 -7 1 -1\") = \"4\" ]]\n    [[ $(candidate\
    \ \"12 23 34 -45 -56 0\") = \"5\" ]]\n    [[ $(candidate \"0 1\") = \"1\" ]]\n\
    \    [[ $(candidate \"1\") = \"1\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660004374
- exit_code: 1
  program: "#!/bin/bash\n# Write a function count_nums which takes an array of integers\
    \ and returns\n# the number of elements which has a sum of digits > 0.\n# If a\
    \ number is negative, then its first signed digit will be negative:\n# e.g. -123\
    \ has signed digits -1, 2, and 3.\n#\n# $1 is a space-separated list\ncount_nums()\
    \ {\n    local -a nums=($1)\n    local count=0\n    for num in \"${nums[@]}\"\
    ; do\n        local sum=0\n        local abs_num=${num#-}\n        while (( abs_num\
    \ > 0 )); do\n            sum=$(( sum + abs_num % 10 ))\n            abs_num=$((\
    \ abs_num / 10 ))\n        done\n        if (( sum > 0 )); then\n            count=$((\
    \ count + 1 ))\n        fi\n    done\n    echo $count\n}\n\ncandidate() {\n  \
    \  count_nums \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"\") = \"\
    0\" ]]\n    [[ $(candidate \"-1 -2 0\") = \"0\" ]]\n    [[ $(candidate \"1 1 2\
    \ -2 3 4 5\") = \"6\" ]]\n    [[ $(candidate \"1 6 9 -6 0 1 5\") = \"5\" ]]\n\
    \    [[ $(candidate \"1 100 98 -7 1 -1\") = \"4\" ]]\n    [[ $(candidate \"12\
    \ 23 34 -45 -56 0\") = \"5\" ]]\n    [[ $(candidate \"0 1\") = \"1\" ]]\n    [[\
    \ $(candidate \"1\") = \"1\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660004373
- exit_code: 1
  program: "#!/bin/bash\n# Write a function count_nums which takes an array of integers\
    \ and returns\n# the number of elements which has a sum of digits > 0.\n# If a\
    \ number is negative, then its first signed digit will be negative:\n# e.g. -123\
    \ has signed digits -1, 2, and 3.\n#\n# $1 is a space-separated list\ncount_nums()\
    \ {\n    local -i sum=0\n    local -i i=0\n    local -i n=0\n    local -i num=0\n\
    \    local -i num_count=0\n    local -i num_count_sum=0\n    local -i num_count_sum_count=0\n\
    \    local -i num_count_sum_count_sum=0\n    local -i num_count_sum_count_sum_count=0\n\
    \    local -i num_count_sum_count_sum_count_sum=0\n    local -i num_count_sum_count_sum_count_sum_count=0\n\
    \    local -i num_count_sum_count_sum_count_sum_count_sum=0\n    local -i num_count_sum_count_sum_count_sum_count_sum_count=0\n\
    \    local -i num_count_sum_count_sum_count_sum_count_sum_count_sum=0\n    local\
    \ -i num_count_sum_count_sum_count_sum_count_sum_count_sum_count=0\n    local\
    \ -i num_count_sum_count_sum_count_sum_count_sum_count_sum_count_sum=0\n    local\
    \ -i num_count_sum_count_sum_count_sum_count_sum_count_sum_count_sum_count=0\n\
    \    local -i num_count_sum_count_sum_count_sum_count_sum_count_sum_count_sum_count_sum=0\n\
    \    local -i num_count_sum_count_sum_count_sum_count_sum_count_sum_count_sum_count_sum_count=0\n\
    \    local -i num_count_sum_count_sum_count_sum_count_sum_count_sum_count_sum_count_sum_count_sum=0\n\
    \    local -i num_count_sum_count_sum_count_sum_count_sum_count_sum_count_sum_count_sum_count_sum_count=0\n\
    \    local -i num_count_sum_count_sum_count_sum_count_sum_count_sum_count_sum_count_sum_count_sum\n\
    }\n\ncandidate() {\n    count_nums \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate\
    \ \"\") = \"0\" ]]\n    [[ $(candidate \"-1 -2 0\") = \"0\" ]]\n    [[ $(candidate\
    \ \"1 1 2 -2 3 4 5\") = \"6\" ]]\n    [[ $(candidate \"1 6 9 -6 0 1 5\") = \"\
    5\" ]]\n    [[ $(candidate \"1 100 98 -7 1 -1\") = \"4\" ]]\n    [[ $(candidate\
    \ \"12 23 34 -45 -56 0\") = \"5\" ]]\n    [[ $(candidate \"0 1\") = \"1\" ]]\n\
    \    [[ $(candidate \"1\") = \"1\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660004373
- exit_code: 1
  program: "#!/bin/bash\n# Write a function count_nums which takes an array of integers\
    \ and returns\n# the number of elements which has a sum of digits > 0.\n# If a\
    \ number is negative, then its first signed digit will be negative:\n# e.g. -123\
    \ has signed digits -1, 2, and 3.\n#\n# $1 is a space-separated list\ncount_nums()\
    \ {\n    local -a array\n    array=($1)\n    local count=0\n    for i in \"${array[@]}\"\
    ; do\n        local sum=0\n        local num=${i#-}\n        while [ $num -gt\
    \ 0 ]; do\n            sum=$((sum + num % 10))\n            num=$((num / 10))\n\
    \        done\n        if [ $sum -gt 0 ]; then\n            count=$((count + 1))\n\
    \        fi\n    done\n    echo $count\n}\n\ncandidate() {\n    count_nums \"\
    $@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"\") = \"0\" ]]\n    [[ $(candidate\
    \ \"-1 -2 0\") = \"0\" ]]\n    [[ $(candidate \"1 1 2 -2 3 4 5\") = \"6\" ]]\n\
    \    [[ $(candidate \"1 6 9 -6 0 1 5\") = \"5\" ]]\n    [[ $(candidate \"1 100\
    \ 98 -7 1 -1\") = \"4\" ]]\n    [[ $(candidate \"12 23 34 -45 -56 0\") = \"5\"\
    \ ]]\n    [[ $(candidate \"0 1\") = \"1\" ]]\n    [[ $(candidate \"1\") = \"1\"\
    \ ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660004373
- exit_code: 1
  program: "#!/bin/bash\n# Write a function count_nums which takes an array of integers\
    \ and returns\n# the number of elements which has a sum of digits > 0.\n# If a\
    \ number is negative, then its first signed digit will be negative:\n# e.g. -123\
    \ has signed digits -1, 2, and 3.\n#\n# $1 is a space-separated list\ncount_nums()\
    \ {\n    local -a nums=($1)\n    local count=0\n    for num in \"${nums[@]}\"\
    ; do\n        local sum=0\n        local abs_num=${num#-}\n        while (( abs_num\
    \ > 0 )); do\n            (( sum += abs_num % 10 ))\n            (( abs_num /=\
    \ 10 ))\n        done\n        (( sum > 0 )) && (( count++ ))\n    done\n    echo\
    \ $count\n}\n\ncandidate() {\n    count_nums \"$@\"\n}\n\nset -e\nrun_test() {\n\
    \    [[ $(candidate \"\") = \"0\" ]]\n    [[ $(candidate \"-1 -2 0\") = \"0\"\
    \ ]]\n    [[ $(candidate \"1 1 2 -2 3 4 5\") = \"6\" ]]\n    [[ $(candidate \"\
    1 6 9 -6 0 1 5\") = \"5\" ]]\n    [[ $(candidate \"1 100 98 -7 1 -1\") = \"4\"\
    \ ]]\n    [[ $(candidate \"12 23 34 -45 -56 0\") = \"5\" ]]\n    [[ $(candidate\
    \ \"0 1\") = \"1\" ]]\n    [[ $(candidate \"1\") = \"1\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660004373
- exit_code: 1
  program: "#!/bin/bash\n# Write a function count_nums which takes an array of integers\
    \ and returns\n# the number of elements which has a sum of digits > 0.\n# If a\
    \ number is negative, then its first signed digit will be negative:\n# e.g. -123\
    \ has signed digits -1, 2, and 3.\n#\n# $1 is a space-separated list\ncount_nums()\
    \ {\n  local -a array=($1)\n  local count=0\n  for num in \"${array[@]}\"; do\n\
    \    local sum=0\n    local num_abs=${num#-}\n    while [[ $num_abs -gt 0 ]];\
    \ do\n      sum=$((sum + num_abs % 10))\n      num_abs=$((num_abs / 10))\n   \
    \ done\n    if [[ $sum -gt 0 ]]; then\n      count=$((count + 1))\n    fi\n  done\n\
    \  echo $count\n}\n\ncandidate() {\n    count_nums \"$@\"\n}\n\nset -e\nrun_test()\
    \ {\n    [[ $(candidate \"\") = \"0\" ]]\n    [[ $(candidate \"-1 -2 0\") = \"\
    0\" ]]\n    [[ $(candidate \"1 1 2 -2 3 4 5\") = \"6\" ]]\n    [[ $(candidate\
    \ \"1 6 9 -6 0 1 5\") = \"5\" ]]\n    [[ $(candidate \"1 100 98 -7 1 -1\") = \"\
    4\" ]]\n    [[ $(candidate \"12 23 34 -45 -56 0\") = \"5\" ]]\n    [[ $(candidate\
    \ \"0 1\") = \"1\" ]]\n    [[ $(candidate \"1\") = \"1\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660004373
- exit_code: 1
  program: "#!/bin/bash\n# Write a function count_nums which takes an array of integers\
    \ and returns\n# the number of elements which has a sum of digits > 0.\n# If a\
    \ number is negative, then its first signed digit will be negative:\n# e.g. -123\
    \ has signed digits -1, 2, and 3.\n#\n# $1 is a space-separated list\ncount_nums()\
    \ {\n    local -i sum=0\n    local -i i=0\n    local -i j=0\n    local -i num=0\n\
    \    local -i count=0\n    for i in $1; do\n        sum=0\n        num=$i\n  \
    \      if [ $num -lt 0 ]; then\n            num=$((-num))\n        fi\n      \
    \  while [ $num -gt 0 ]; do\n            j=$((num % 10))\n            sum=$((sum\
    \ + j))\n            num=$((num / 10))\n        done\n        if [ $sum -gt 0\
    \ ]; then\n            count=$((count + 1))\n        fi\n    done\n    echo $count\n\
    }\n\ncandidate() {\n    count_nums \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate\
    \ \"\") = \"0\" ]]\n    [[ $(candidate \"-1 -2 0\") = \"0\" ]]\n    [[ $(candidate\
    \ \"1 1 2 -2 3 4 5\") = \"6\" ]]\n    [[ $(candidate \"1 6 9 -6 0 1 5\") = \"\
    5\" ]]\n    [[ $(candidate \"1 100 98 -7 1 -1\") = \"4\" ]]\n    [[ $(candidate\
    \ \"12 23 34 -45 -56 0\") = \"5\" ]]\n    [[ $(candidate \"0 1\") = \"1\" ]]\n\
    \    [[ $(candidate \"1\") = \"1\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660004373
- exit_code: 1
  program: "#!/bin/bash\n# Write a function count_nums which takes an array of integers\
    \ and returns\n# the number of elements which has a sum of digits > 0.\n# If a\
    \ number is negative, then its first signed digit will be negative:\n# e.g. -123\
    \ has signed digits -1, 2, and 3.\n#\n# $1 is a space-separated list\ncount_nums()\
    \ {\n    local -a nums=($1)\n    local -i sum=0\n    local -i count=0\n    for\
    \ num in \"${nums[@]}\"; do\n        if [[ $num -lt 0 ]]; then\n            num=${num:1}\n\
    \        fi\n        while [[ $num -gt 0 ]]; do\n            sum=$((sum + num\
    \ % 10))\n            num=$((num / 10))\n        done\n        if [[ $sum -gt\
    \ 0 ]]; then\n            count=$((count + 1))\n        fi\n        sum=0\n  \
    \  done\n    echo $count\n}\n\ncandidate() {\n    count_nums \"$@\"\n}\n\nset\
    \ -e\nrun_test() {\n    [[ $(candidate \"\") = \"0\" ]]\n    [[ $(candidate \"\
    -1 -2 0\") = \"0\" ]]\n    [[ $(candidate \"1 1 2 -2 3 4 5\") = \"6\" ]]\n   \
    \ [[ $(candidate \"1 6 9 -6 0 1 5\") = \"5\" ]]\n    [[ $(candidate \"1 100 98\
    \ -7 1 -1\") = \"4\" ]]\n    [[ $(candidate \"12 23 34 -45 -56 0\") = \"5\" ]]\n\
    \    [[ $(candidate \"0 1\") = \"1\" ]]\n    [[ $(candidate \"1\") = \"1\" ]]\n\
    }\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660004373
- exit_code: 1
  program: "#!/bin/bash\n# Write a function count_nums which takes an array of integers\
    \ and returns\n# the number of elements which has a sum of digits > 0.\n# If a\
    \ number is negative, then its first signed digit will be negative:\n# e.g. -123\
    \ has signed digits -1, 2, and 3.\n#\n# $1 is a space-separated list\ncount_nums()\
    \ {\n    local -a nums=($1)\n    local count=0\n    for num in \"${nums[@]}\"\
    ; do\n        local sum=0\n        local num_abs=${num#-}\n        while [[ $num_abs\
    \ -gt 0 ]]; do\n            local digit=$((num_abs % 10))\n            sum=$((sum\
    \ + digit))\n            num_abs=$((num_abs / 10))\n        done\n        if [[\
    \ $sum -gt 0 ]]; then\n            count=$((count + 1))\n        fi\n    done\n\
    \    echo $count\n}\n\ncandidate() {\n    count_nums \"$@\"\n}\n\nset -e\nrun_test()\
    \ {\n    [[ $(candidate \"\") = \"0\" ]]\n    [[ $(candidate \"-1 -2 0\") = \"\
    0\" ]]\n    [[ $(candidate \"1 1 2 -2 3 4 5\") = \"6\" ]]\n    [[ $(candidate\
    \ \"1 6 9 -6 0 1 5\") = \"5\" ]]\n    [[ $(candidate \"1 100 98 -7 1 -1\") = \"\
    4\" ]]\n    [[ $(candidate \"12 23 34 -45 -56 0\") = \"5\" ]]\n    [[ $(candidate\
    \ \"0 1\") = \"1\" ]]\n    [[ $(candidate \"1\") = \"1\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660004374
- exit_code: 1
  program: "#!/bin/bash\n# Write a function count_nums which takes an array of integers\
    \ and returns\n# the number of elements which has a sum of digits > 0.\n# If a\
    \ number is negative, then its first signed digit will be negative:\n# e.g. -123\
    \ has signed digits -1, 2, and 3.\n#\n# $1 is a space-separated list\ncount_nums()\
    \ {\n    local -a arr=(\"$@\")\n    local -i count=0\n    local -i i=0\n    local\
    \ -i sum=0\n    local -i num=0\n    local -i sign=0\n    local -i digit=0\n\n\
    \    for ((i=0; i<${#arr[@]}; i++)); do\n        num=${arr[$i]}\n        if ((num\
    \ < 0)); then\n            sign=-1\n            num=-num\n        else\n     \
    \       sign=1\n        fi\n        sum=0\n        while ((num > 0)); do\n   \
    \         digit=$((num % 10))\n            sum=$((sum + digit))\n            num=$((num\
    \ / 10))\n        done\n        if ((sign * sum > 0)); then\n            count=$((count\
    \ + 1))\n        fi\n    done\n    echo $count\n}\n\ncandidate() {\n    count_nums\
    \ \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"\") = \"0\" ]]\n   \
    \ [[ $(candidate \"-1 -2 0\") = \"0\" ]]\n    [[ $(candidate \"1 1 2 -2 3 4 5\"\
    ) = \"6\" ]]\n    [[ $(candidate \"1 6 9 -6 0 1 5\") = \"5\" ]]\n    [[ $(candidate\
    \ \"1 100 98 -7 1 -1\") = \"4\" ]]\n    [[ $(candidate \"12 23 34 -45 -56 0\"\
    ) = \"5\" ]]\n    [[ $(candidate \"0 1\") = \"1\" ]]\n    [[ $(candidate \"1\"\
    ) = \"1\" ]]\n}\n\nrun_test"
  status: SyntaxError
  stderr: '/tmp/tmpoqs1smt5.sh: line 18: -1 -2 0: syntax error in expression (error
    token is "0")

    '
  stdout: ''
  timestamp: 1660004374
- exit_code: 1
  program: "#!/bin/bash\n# Write a function count_nums which takes an array of integers\
    \ and returns\n# the number of elements which has a sum of digits > 0.\n# If a\
    \ number is negative, then its first signed digit will be negative:\n# e.g. -123\
    \ has signed digits -1, 2, and 3.\n#\n# $1 is a space-separated list\ncount_nums()\
    \ {\n    local -a arr=(\"$@\")\n    local sum=0\n    local count=0\n    for i\
    \ in \"${arr[@]}\"; do\n        if (( i < 0 )); then\n            i=$(( -i ))\n\
    \        fi\n        while (( i > 0 )); do\n            sum=$(( sum + i % 10 ))\n\
    \            i=$(( i / 10 ))\n        done\n        if (( sum > 0 )); then\n \
    \           count=$(( count + 1 ))\n        fi\n        sum=0\n    done\n    echo\
    \ \"$count\"\n}\n\ncandidate() {\n    count_nums \"$@\"\n}\n\nset -e\nrun_test()\
    \ {\n    [[ $(candidate \"\") = \"0\" ]]\n    [[ $(candidate \"-1 -2 0\") = \"\
    0\" ]]\n    [[ $(candidate \"1 1 2 -2 3 4 5\") = \"6\" ]]\n    [[ $(candidate\
    \ \"1 6 9 -6 0 1 5\") = \"5\" ]]\n    [[ $(candidate \"1 100 98 -7 1 -1\") = \"\
    4\" ]]\n    [[ $(candidate \"12 23 34 -45 -56 0\") = \"5\" ]]\n    [[ $(candidate\
    \ \"0 1\") = \"1\" ]]\n    [[ $(candidate \"1\") = \"1\" ]]\n}\n\nrun_test"
  status: SyntaxError
  stderr: '/tmp/tmpch8xfrzw.sh: line 13: ((: -1 -2 0: syntax error in expression (error
    token is "0")

    /tmp/tmpch8xfrzw.sh: line 16: ((: -1 -2 0: syntax error in expression (error token
    is "0")

    /tmp/tmpch8xfrzw.sh: line 13: ((: 1 1 2 -2 3 4 5: syntax error in expression (error
    token is "1 2 -2 3 4 5")

    /tmp/tmpch8xfrzw.sh: line 16: ((: 1 1 2 -2 3 4 5: syntax error in expression (error
    token is "1 2 -2 3 4 5")

    '
  stdout: ''
  timestamp: 1660004374
- exit_code: 1
  program: "#!/bin/bash\n# Write a function count_nums which takes an array of integers\
    \ and returns\n# the number of elements which has a sum of digits > 0.\n# If a\
    \ number is negative, then its first signed digit will be negative:\n# e.g. -123\
    \ has signed digits -1, 2, and 3.\n#\n# $1 is a space-separated list\ncount_nums()\
    \ {\n    local -a nums=($1)\n    local num\n    local sum\n    local count=0\n\
    \    for num in \"${nums[@]}\"; do\n        sum=0\n        while [ $num -ne 0\
    \ ]; do\n            sum=$((sum + num % 10))\n            num=$((num / 10))\n\
    \        done\n        if [ $sum -gt 0 ]; then\n            count=$((count + 1))\n\
    \        fi\n    done\n    echo $count\n}\n\ncandidate() {\n    count_nums \"\
    $@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"\") = \"0\" ]]\n    [[ $(candidate\
    \ \"-1 -2 0\") = \"0\" ]]\n    [[ $(candidate \"1 1 2 -2 3 4 5\") = \"6\" ]]\n\
    \    [[ $(candidate \"1 6 9 -6 0 1 5\") = \"5\" ]]\n    [[ $(candidate \"1 100\
    \ 98 -7 1 -1\") = \"4\" ]]\n    [[ $(candidate \"12 23 34 -45 -56 0\") = \"5\"\
    \ ]]\n    [[ $(candidate \"0 1\") = \"1\" ]]\n    [[ $(candidate \"1\") = \"1\"\
    \ ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660004373
- exit_code: 1
  program: "#!/bin/bash\n# Write a function count_nums which takes an array of integers\
    \ and returns\n# the number of elements which has a sum of digits > 0.\n# If a\
    \ number is negative, then its first signed digit will be negative:\n# e.g. -123\
    \ has signed digits -1, 2, and 3.\n#\n# $1 is a space-separated list\ncount_nums()\
    \ {\n    local -a arr\n    local -i i sum\n    arr=($1)\n    for ((i=0; i<${#arr[@]};\
    \ i++)); do\n        sum=0\n        while ((arr[i] != 0)); do\n            ((sum\
    \ += arr[i] % 10))\n            ((arr[i] /= 10))\n        done\n        ((sum\
    \ > 0)) && ((count++))\n    done\n    echo $count\n}\n\ncandidate() {\n    count_nums\
    \ \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"\") = \"0\" ]]\n   \
    \ [[ $(candidate \"-1 -2 0\") = \"0\" ]]\n    [[ $(candidate \"1 1 2 -2 3 4 5\"\
    ) = \"6\" ]]\n    [[ $(candidate \"1 6 9 -6 0 1 5\") = \"5\" ]]\n    [[ $(candidate\
    \ \"1 100 98 -7 1 -1\") = \"4\" ]]\n    [[ $(candidate \"12 23 34 -45 -56 0\"\
    ) = \"5\" ]]\n    [[ $(candidate \"0 1\") = \"1\" ]]\n    [[ $(candidate \"1\"\
    ) = \"1\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660004373
- exit_code: 1
  program: "#!/bin/bash\n# Write a function count_nums which takes an array of integers\
    \ and returns\n# the number of elements which has a sum of digits > 0.\n# If a\
    \ number is negative, then its first signed digit will be negative:\n# e.g. -123\
    \ has signed digits -1, 2, and 3.\n#\n# $1 is a space-separated list\ncount_nums()\
    \ {\n    local -a arr=($1)\n    local count=0\n    for i in \"${arr[@]}\"; do\n\
    \        local sum=0\n        local num=\"$i\"\n        if [[ $i -lt 0 ]]; then\n\
    \            num=\"${i:1}\"\n        fi\n        while [[ $num -gt 0 ]]; do\n\
    \            sum=$((sum + num % 10))\n            num=$((num / 10))\n        done\n\
    \        if [[ $sum -gt 0 ]]; then\n            count=$((count + 1))\n       \
    \ fi\n    done\n    echo $count\n}\n\ncandidate() {\n    count_nums \"$@\"\n}\n\
    \nset -e\nrun_test() {\n    [[ $(candidate \"\") = \"0\" ]]\n    [[ $(candidate\
    \ \"-1 -2 0\") = \"0\" ]]\n    [[ $(candidate \"1 1 2 -2 3 4 5\") = \"6\" ]]\n\
    \    [[ $(candidate \"1 6 9 -6 0 1 5\") = \"5\" ]]\n    [[ $(candidate \"1 100\
    \ 98 -7 1 -1\") = \"4\" ]]\n    [[ $(candidate \"12 23 34 -45 -56 0\") = \"5\"\
    \ ]]\n    [[ $(candidate \"0 1\") = \"1\" ]]\n    [[ $(candidate \"1\") = \"1\"\
    \ ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660004374
- exit_code: 1
  program: "#!/bin/bash\n# Write a function count_nums which takes an array of integers\
    \ and returns\n# the number of elements which has a sum of digits > 0.\n# If a\
    \ number is negative, then its first signed digit will be negative:\n# e.g. -123\
    \ has signed digits -1, 2, and 3.\n#\n# $1 is a space-separated list\ncount_nums()\
    \ {\n    local -a arr=($1)\n    local count=0\n    for i in \"${arr[@]}\"; do\n\
    \        local sum=0\n        for (( j=0; j<${#i}; j++ )); do\n            ((\
    \ sum += ${i:$j:1} ))\n        done\n        (( sum > 0 )) && (( count++ ))\n\
    \    done\n    echo $count\n}\n\ncandidate() {\n    count_nums \"$@\"\n}\n\nset\
    \ -e\nrun_test() {\n    [[ $(candidate \"\") = \"0\" ]]\n    [[ $(candidate \"\
    -1 -2 0\") = \"0\" ]]\n    [[ $(candidate \"1 1 2 -2 3 4 5\") = \"6\" ]]\n   \
    \ [[ $(candidate \"1 6 9 -6 0 1 5\") = \"5\" ]]\n    [[ $(candidate \"1 100 98\
    \ -7 1 -1\") = \"4\" ]]\n    [[ $(candidate \"12 23 34 -45 -56 0\") = \"5\" ]]\n\
    \    [[ $(candidate \"0 1\") = \"1\" ]]\n    [[ $(candidate \"1\") = \"1\" ]]\n\
    }\n\nrun_test"
  status: SyntaxError
  stderr: '/tmp/tmpy2qr4hia.sh: line 14: ((: sum += - : syntax error: operand expected
    (error token is "- ")

    /tmp/tmpy2qr4hia.sh: line 14: ((: sum += - : syntax error: operand expected (error
    token is "- ")

    '
  stdout: ''
  timestamp: 1660004374
- exit_code: 1
  program: "#!/bin/bash\n# Write a function count_nums which takes an array of integers\
    \ and returns\n# the number of elements which has a sum of digits > 0.\n# If a\
    \ number is negative, then its first signed digit will be negative:\n# e.g. -123\
    \ has signed digits -1, 2, and 3.\n#\n# $1 is a space-separated list\ncount_nums()\
    \ {\n    local -i sum=0\n    local -i i=0\n    local -i n=0\n    local -i num=0\n\
    \    local -i count=0\n    local -a arr=()\n    arr=($1)\n    n=${#arr[@]}\n \
    \   for ((i=0; i<n; i++)); do\n        num=${arr[i]}\n        if [[ $num -lt 0\
    \ ]]; then\n            num=$((-num))\n        fi\n        while [[ $num -gt 0\
    \ ]]; do\n            sum=$((sum + num % 10))\n            num=$((num / 10))\n\
    \        done\n        if [[ $sum -gt 0 ]]; then\n            count=$((count +\
    \ 1))\n        fi\n        sum=0\n    done\n    echo $count\n}\n\ncandidate()\
    \ {\n    count_nums \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"\"\
    ) = \"0\" ]]\n    [[ $(candidate \"-1 -2 0\") = \"0\" ]]\n    [[ $(candidate \"\
    1 1 2 -2 3 4 5\") = \"6\" ]]\n    [[ $(candidate \"1 6 9 -6 0 1 5\") = \"5\" ]]\n\
    \    [[ $(candidate \"1 100 98 -7 1 -1\") = \"4\" ]]\n    [[ $(candidate \"12\
    \ 23 34 -45 -56 0\") = \"5\" ]]\n    [[ $(candidate \"0 1\") = \"1\" ]]\n    [[\
    \ $(candidate \"1\") = \"1\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660004373
- exit_code: 1
  program: "#!/bin/bash\n# Write a function count_nums which takes an array of integers\
    \ and returns\n# the number of elements which has a sum of digits > 0.\n# If a\
    \ number is negative, then its first signed digit will be negative:\n# e.g. -123\
    \ has signed digits -1, 2, and 3.\n#\n# $1 is a space-separated list\ncount_nums()\
    \ {\n    local -i sum=0\n    for i in $1; do\n        if (( i < 0 )); then\n \
    \           i=-i\n        fi\n        while (( i > 0 )); do\n            sum+=i%10\n\
    \            i/=10\n        done\n        if (( sum > 0 )); then\n           \
    \ (( ++count ))\n        fi\n        sum=0\n    done\n    echo $count\n}\n\ncandidate()\
    \ {\n    count_nums \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"\"\
    ) = \"0\" ]]\n    [[ $(candidate \"-1 -2 0\") = \"0\" ]]\n    [[ $(candidate \"\
    1 1 2 -2 3 4 5\") = \"6\" ]]\n    [[ $(candidate \"1 6 9 -6 0 1 5\") = \"5\" ]]\n\
    \    [[ $(candidate \"1 100 98 -7 1 -1\") = \"4\" ]]\n    [[ $(candidate \"12\
    \ 23 34 -45 -56 0\") = \"5\" ]]\n    [[ $(candidate \"0 1\") = \"1\" ]]\n    [[\
    \ $(candidate \"1\") = \"1\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660004374
- exit_code: 1
  program: "#!/bin/bash\n# Write a function count_nums which takes an array of integers\
    \ and returns\n# the number of elements which has a sum of digits > 0.\n# If a\
    \ number is negative, then its first signed digit will be negative:\n# e.g. -123\
    \ has signed digits -1, 2, and 3.\n#\n# $1 is a space-separated list\ncount_nums()\
    \ {\n    local -a arr=(\"$@\")\n    local count=0\n    for i in \"${arr[@]}\"\
    ; do\n        local sum=0\n        local num=$i\n        if (( num < 0 )); then\n\
    \            num=$(( -num ))\n        fi\n        while (( num > 0 )); do\n  \
    \          sum=$(( sum + num % 10 ))\n            num=$(( num / 10 ))\n      \
    \  done\n        if (( sum > 0 )); then\n            count=$(( count + 1 ))\n\
    \        fi\n    done\n    echo $count\n}\n\ncandidate() {\n    count_nums \"\
    $@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"\") = \"0\" ]]\n    [[ $(candidate\
    \ \"-1 -2 0\") = \"0\" ]]\n    [[ $(candidate \"1 1 2 -2 3 4 5\") = \"6\" ]]\n\
    \    [[ $(candidate \"1 6 9 -6 0 1 5\") = \"5\" ]]\n    [[ $(candidate \"1 100\
    \ 98 -7 1 -1\") = \"4\" ]]\n    [[ $(candidate \"12 23 34 -45 -56 0\") = \"5\"\
    \ ]]\n    [[ $(candidate \"0 1\") = \"1\" ]]\n    [[ $(candidate \"1\") = \"1\"\
    \ ]]\n}\n\nrun_test"
  status: SyntaxError
  stderr: '/tmp/tmp7_0piepm.sh: line 14: ((: -1 -2 0: syntax error in expression (error
    token is "0")

    /tmp/tmp7_0piepm.sh: line 17: ((: -1 -2 0: syntax error in expression (error token
    is "0")

    /tmp/tmp7_0piepm.sh: line 14: ((: 1 1 2 -2 3 4 5: syntax error in expression (error
    token is "1 2 -2 3 4 5")

    /tmp/tmp7_0piepm.sh: line 17: ((: 1 1 2 -2 3 4 5: syntax error in expression (error
    token is "1 2 -2 3 4 5")

    '
  stdout: ''
  timestamp: 1660004374
- exit_code: 1
  program: "#!/bin/bash\n# Write a function count_nums which takes an array of integers\
    \ and returns\n# the number of elements which has a sum of digits > 0.\n# If a\
    \ number is negative, then its first signed digit will be negative:\n# e.g. -123\
    \ has signed digits -1, 2, and 3.\n#\n# $1 is a space-separated list\ncount_nums()\
    \ {\n    local -a array=($1)\n    local i=0\n    local sum=0\n    local count=0\n\
    \    for i in ${array[@]}; do\n        if [[ $i -lt 0 ]]; then\n            i=$((i\
    \ * -1))\n        fi\n        while [[ $i -gt 0 ]]; do\n            sum=$((sum\
    \ + i % 10))\n            i=$((i / 10))\n        done\n        if [[ $sum -gt\
    \ 0 ]]; then\n            count=$((count + 1))\n        fi\n        sum=0\n  \
    \  done\n    echo $count\n}\n\ncandidate() {\n    count_nums \"$@\"\n}\n\nset\
    \ -e\nrun_test() {\n    [[ $(candidate \"\") = \"0\" ]]\n    [[ $(candidate \"\
    -1 -2 0\") = \"0\" ]]\n    [[ $(candidate \"1 1 2 -2 3 4 5\") = \"6\" ]]\n   \
    \ [[ $(candidate \"1 6 9 -6 0 1 5\") = \"5\" ]]\n    [[ $(candidate \"1 100 98\
    \ -7 1 -1\") = \"4\" ]]\n    [[ $(candidate \"12 23 34 -45 -56 0\") = \"5\" ]]\n\
    \    [[ $(candidate \"0 1\") = \"1\" ]]\n    [[ $(candidate \"1\") = \"1\" ]]\n\
    }\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660004374
- exit_code: 1
  program: "#!/bin/bash\n# Write a function count_nums which takes an array of integers\
    \ and returns\n# the number of elements which has a sum of digits > 0.\n# If a\
    \ number is negative, then its first signed digit will be negative:\n# e.g. -123\
    \ has signed digits -1, 2, and 3.\n#\n# $1 is a space-separated list\ncount_nums()\
    \ {\n    local -a arr=(\"$@\")\n    local -i sum=0\n    local -i count=0\n   \
    \ local -i i=0\n    local -i num=0\n    local -i num_len=0\n    local -i digit=0\n\
    \n    for ((i=0; i<${#arr[@]}; i++)); do\n        num=${arr[$i]}\n        num_len=${#num}\n\
    \        sum=0\n        for ((j=0; j<num_len; j++)); do\n            digit=${num:$j:1}\n\
    \            sum+=$digit\n        done\n        if ((sum>0)); then\n         \
    \   ((count++))\n        fi\n    done\n    echo $count\n}\n\ncandidate() {\n \
    \   count_nums \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"\") = \"\
    0\" ]]\n    [[ $(candidate \"-1 -2 0\") = \"0\" ]]\n    [[ $(candidate \"1 1 2\
    \ -2 3 4 5\") = \"6\" ]]\n    [[ $(candidate \"1 6 9 -6 0 1 5\") = \"5\" ]]\n\
    \    [[ $(candidate \"1 100 98 -7 1 -1\") = \"4\" ]]\n    [[ $(candidate \"12\
    \ 23 34 -45 -56 0\") = \"5\" ]]\n    [[ $(candidate \"0 1\") = \"1\" ]]\n    [[\
    \ $(candidate \"1\") = \"1\" ]]\n}\n\nrun_test"
  status: SyntaxError
  stderr: '/tmp/tmp3lfmy2gd.sh: line 18: -1 -2 0: syntax error in expression (error
    token is "0")

    '
  stdout: ''
  timestamp: 1660004374
- exit_code: 1
  program: "#!/bin/bash\n# Write a function count_nums which takes an array of integers\
    \ and returns\n# the number of elements which has a sum of digits > 0.\n# If a\
    \ number is negative, then its first signed digit will be negative:\n# e.g. -123\
    \ has signed digits -1, 2, and 3.\n#\n# $1 is a space-separated list\ncount_nums()\
    \ {\n    local sum=0\n    local count=0\n    for i in $1; do\n        sum=0\n\
    \        if [[ $i -lt 0 ]]; then\n            i=$((-i))\n        fi\n        while\
    \ [[ $i -gt 0 ]]; do\n            sum=$((sum + i % 10))\n            i=$((i /\
    \ 10))\n        done\n        if [[ $sum -gt 0 ]]; then\n            count=$((count\
    \ + 1))\n        fi\n    done\n    echo $count\n}\n\ncandidate() {\n    count_nums\
    \ \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"\") = \"0\" ]]\n   \
    \ [[ $(candidate \"-1 -2 0\") = \"0\" ]]\n    [[ $(candidate \"1 1 2 -2 3 4 5\"\
    ) = \"6\" ]]\n    [[ $(candidate \"1 6 9 -6 0 1 5\") = \"5\" ]]\n    [[ $(candidate\
    \ \"1 100 98 -7 1 -1\") = \"4\" ]]\n    [[ $(candidate \"12 23 34 -45 -56 0\"\
    ) = \"5\" ]]\n    [[ $(candidate \"0 1\") = \"1\" ]]\n    [[ $(candidate \"1\"\
    ) = \"1\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660004374
- exit_code: 1
  program: "#!/bin/bash\n# Write a function count_nums which takes an array of integers\
    \ and returns\n# the number of elements which has a sum of digits > 0.\n# If a\
    \ number is negative, then its first signed digit will be negative:\n# e.g. -123\
    \ has signed digits -1, 2, and 3.\n#\n# $1 is a space-separated list\ncount_nums()\
    \ {\n    local -a arr=($1)\n    local -i sum=0\n    local -i count=0\n    for\
    \ i in \"${arr[@]}\"; do\n        sum=0\n        while ((i != 0)); do\n      \
    \      sum+=$((i % 10))\n            i=$((i / 10))\n        done\n        ((sum\
    \ > 0)) && ((count++))\n    done\n    echo $count\n}\n\ncandidate() {\n    count_nums\
    \ \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"\") = \"0\" ]]\n   \
    \ [[ $(candidate \"-1 -2 0\") = \"0\" ]]\n    [[ $(candidate \"1 1 2 -2 3 4 5\"\
    ) = \"6\" ]]\n    [[ $(candidate \"1 6 9 -6 0 1 5\") = \"5\" ]]\n    [[ $(candidate\
    \ \"1 100 98 -7 1 -1\") = \"4\" ]]\n    [[ $(candidate \"12 23 34 -45 -56 0\"\
    ) = \"5\" ]]\n    [[ $(candidate \"0 1\") = \"1\" ]]\n    [[ $(candidate \"1\"\
    ) = \"1\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660004374
- exit_code: 1
  program: "#!/bin/bash\n# Write a function count_nums which takes an array of integers\
    \ and returns\n# the number of elements which has a sum of digits > 0.\n# If a\
    \ number is negative, then its first signed digit will be negative:\n# e.g. -123\
    \ has signed digits -1, 2, and 3.\n#\n# $1 is a space-separated list\ncount_nums()\
    \ {\n  local -a arr=(\"$@\")\n  local -i sum=0\n  local -i count=0\n  local -i\
    \ i=0\n  for ((i=0; i<${#arr[@]}; i++)); do\n    local -i num=${arr[$i]}\n   \
    \ if ((num < 0)); then\n      num=-num\n    fi\n    while ((num > 0)); do\n  \
    \    sum+=$((num % 10))\n      num=$((num / 10))\n    done\n    if ((sum > 0));\
    \ then\n      count+=1\n    fi\n    sum=0\n  done\n  echo $count\n}\n\ncandidate()\
    \ {\n    count_nums \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"\"\
    ) = \"0\" ]]\n    [[ $(candidate \"-1 -2 0\") = \"0\" ]]\n    [[ $(candidate \"\
    1 1 2 -2 3 4 5\") = \"6\" ]]\n    [[ $(candidate \"1 6 9 -6 0 1 5\") = \"5\" ]]\n\
    \    [[ $(candidate \"1 100 98 -7 1 -1\") = \"4\" ]]\n    [[ $(candidate \"12\
    \ 23 34 -45 -56 0\") = \"5\" ]]\n    [[ $(candidate \"0 1\") = \"1\" ]]\n    [[\
    \ $(candidate \"1\") = \"1\" ]]\n}\n\nrun_test"
  status: SyntaxError
  stderr: '/tmp/tmp5uc05_f_.sh: line 14: local: -1 -2 0: syntax error in expression
    (error token is "0")

    '
  stdout: ''
  timestamp: 1660004374
- exit_code: 1
  program: "#!/bin/bash\n# Write a function count_nums which takes an array of integers\
    \ and returns\n# the number of elements which has a sum of digits > 0.\n# If a\
    \ number is negative, then its first signed digit will be negative:\n# e.g. -123\
    \ has signed digits -1, 2, and 3.\n#\n# $1 is a space-separated list\ncount_nums()\
    \ {\n    local -a nums=($1)\n    local count=0\n    local sum=0\n    for num in\
    \ ${nums[@]}; do\n        if [[ $num -lt 0 ]]; then\n            num=$((-$num))\n\
    \        fi\n        while [[ $num -gt 0 ]]; do\n            sum=$((sum + num\
    \ % 10))\n            num=$((num / 10))\n        done\n        if [[ $sum -gt\
    \ 0 ]]; then\n            count=$((count + 1))\n        fi\n        sum=0\n  \
    \  done\n    echo $count\n}\n\ncandidate() {\n    count_nums \"$@\"\n}\n\nset\
    \ -e\nrun_test() {\n    [[ $(candidate \"\") = \"0\" ]]\n    [[ $(candidate \"\
    -1 -2 0\") = \"0\" ]]\n    [[ $(candidate \"1 1 2 -2 3 4 5\") = \"6\" ]]\n   \
    \ [[ $(candidate \"1 6 9 -6 0 1 5\") = \"5\" ]]\n    [[ $(candidate \"1 100 98\
    \ -7 1 -1\") = \"4\" ]]\n    [[ $(candidate \"12 23 34 -45 -56 0\") = \"5\" ]]\n\
    \    [[ $(candidate \"0 1\") = \"1\" ]]\n    [[ $(candidate \"1\") = \"1\" ]]\n\
    }\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660004373
- exit_code: 1
  program: "#!/bin/bash\n# Write a function count_nums which takes an array of integers\
    \ and returns\n# the number of elements which has a sum of digits > 0.\n# If a\
    \ number is negative, then its first signed digit will be negative:\n# e.g. -123\
    \ has signed digits -1, 2, and 3.\n#\n# $1 is a space-separated list\ncount_nums()\
    \ {\n    local -a array=($1)\n    local count=0\n    for i in \"${array[@]}\"\
    ; do\n        local sum=0\n        local num=${i#-}\n        while (( num > 0\
    \ )); do\n            (( sum += num % 10 ))\n            (( num /= 10 ))\n   \
    \     done\n        (( sum > 0 )) && (( count++ ))\n    done\n    echo $count\n\
    }\n\ncandidate() {\n    count_nums \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate\
    \ \"\") = \"0\" ]]\n    [[ $(candidate \"-1 -2 0\") = \"0\" ]]\n    [[ $(candidate\
    \ \"1 1 2 -2 3 4 5\") = \"6\" ]]\n    [[ $(candidate \"1 6 9 -6 0 1 5\") = \"\
    5\" ]]\n    [[ $(candidate \"1 100 98 -7 1 -1\") = \"4\" ]]\n    [[ $(candidate\
    \ \"12 23 34 -45 -56 0\") = \"5\" ]]\n    [[ $(candidate \"0 1\") = \"1\" ]]\n\
    \    [[ $(candidate \"1\") = \"1\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660004374
- exit_code: 1
  program: "#!/bin/bash\n# Write a function count_nums which takes an array of integers\
    \ and returns\n# the number of elements which has a sum of digits > 0.\n# If a\
    \ number is negative, then its first signed digit will be negative:\n# e.g. -123\
    \ has signed digits -1, 2, and 3.\n#\n# $1 is a space-separated list\ncount_nums()\
    \ {\n    local -a array\n    local i\n    local sum\n    local count=0\n    array=($1)\n\
    \    for ((i=0; i<${#array[@]}; i++)); do\n        sum=0\n        while [[ ${array[$i]}\
    \ -ne 0 ]]; do\n            sum=$((sum + ${array[$i]} % 10))\n            array[$i]=$((array[$i]\
    \ / 10))\n        done\n        if [[ $sum -gt 0 ]]; then\n            count=$((count\
    \ + 1))\n        fi\n    done\n    echo $count\n}\n\ncandidate() {\n    count_nums\
    \ \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"\") = \"0\" ]]\n   \
    \ [[ $(candidate \"-1 -2 0\") = \"0\" ]]\n    [[ $(candidate \"1 1 2 -2 3 4 5\"\
    ) = \"6\" ]]\n    [[ $(candidate \"1 6 9 -6 0 1 5\") = \"5\" ]]\n    [[ $(candidate\
    \ \"1 100 98 -7 1 -1\") = \"4\" ]]\n    [[ $(candidate \"12 23 34 -45 -56 0\"\
    ) = \"5\" ]]\n    [[ $(candidate \"0 1\") = \"1\" ]]\n    [[ $(candidate \"1\"\
    ) = \"1\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660004374
- exit_code: 1
  program: "#!/bin/bash\n# Write a function count_nums which takes an array of integers\
    \ and returns\n# the number of elements which has a sum of digits > 0.\n# If a\
    \ number is negative, then its first signed digit will be negative:\n# e.g. -123\
    \ has signed digits -1, 2, and 3.\n#\n# $1 is a space-separated list\ncount_nums()\
    \ {\n    local -a array=($1)\n    local count=0\n    for i in \"${array[@]}\"\
    ; do\n        local sum=0\n        local num=${i#-}\n        while (( num > 0\
    \ )); do\n            (( sum += num % 10 ))\n            (( num /= 10 ))\n   \
    \     done\n        (( sum > 0 )) && (( count++ ))\n    done\n    echo $count\n\
    }\n\ncandidate() {\n    count_nums \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate\
    \ \"\") = \"0\" ]]\n    [[ $(candidate \"-1 -2 0\") = \"0\" ]]\n    [[ $(candidate\
    \ \"1 1 2 -2 3 4 5\") = \"6\" ]]\n    [[ $(candidate \"1 6 9 -6 0 1 5\") = \"\
    5\" ]]\n    [[ $(candidate \"1 100 98 -7 1 -1\") = \"4\" ]]\n    [[ $(candidate\
    \ \"12 23 34 -45 -56 0\") = \"5\" ]]\n    [[ $(candidate \"0 1\") = \"1\" ]]\n\
    \    [[ $(candidate \"1\") = \"1\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660004374
- exit_code: 1
  program: "#!/bin/bash\n# Write a function count_nums which takes an array of integers\
    \ and returns\n# the number of elements which has a sum of digits > 0.\n# If a\
    \ number is negative, then its first signed digit will be negative:\n# e.g. -123\
    \ has signed digits -1, 2, and 3.\n#\n# $1 is a space-separated list\ncount_nums()\
    \ {\n    local -a arr=(\"$@\")\n    local -i sum=0\n    local -i count=0\n   \
    \ for i in \"${arr[@]}\"; do\n        if (( i < 0 )); then\n            i=$((\
    \ -i ))\n        fi\n        while (( i > 0 )); do\n            sum+=$(( i % 10\
    \ ))\n            i=$(( i / 10 ))\n        done\n        if (( sum > 0 )); then\n\
    \            (( count++ ))\n        fi\n        sum=0\n    done\n    echo \"$count\"\
    \n}\n\ncandidate() {\n    count_nums \"$@\"\n}\n\nset -e\nrun_test() {\n    [[\
    \ $(candidate \"\") = \"0\" ]]\n    [[ $(candidate \"-1 -2 0\") = \"0\" ]]\n \
    \   [[ $(candidate \"1 1 2 -2 3 4 5\") = \"6\" ]]\n    [[ $(candidate \"1 6 9\
    \ -6 0 1 5\") = \"5\" ]]\n    [[ $(candidate \"1 100 98 -7 1 -1\") = \"4\" ]]\n\
    \    [[ $(candidate \"12 23 34 -45 -56 0\") = \"5\" ]]\n    [[ $(candidate \"\
    0 1\") = \"1\" ]]\n    [[ $(candidate \"1\") = \"1\" ]]\n}\n\nrun_test"
  status: SyntaxError
  stderr: '/tmp/tmpiw02w3o9.sh: line 13: ((: -1 -2 0: syntax error in expression (error
    token is "0")

    /tmp/tmpiw02w3o9.sh: line 16: ((: -1 -2 0: syntax error in expression (error token
    is "0")

    /tmp/tmpiw02w3o9.sh: line 13: ((: 1 1 2 -2 3 4 5: syntax error in expression (error
    token is "1 2 -2 3 4 5")

    /tmp/tmpiw02w3o9.sh: line 16: ((: 1 1 2 -2 3 4 5: syntax error in expression (error
    token is "1 2 -2 3 4 5")

    '
  stdout: ''
  timestamp: 1660004374
- exit_code: 1
  program: "#!/bin/bash\n# Write a function count_nums which takes an array of integers\
    \ and returns\n# the number of elements which has a sum of digits > 0.\n# If a\
    \ number is negative, then its first signed digit will be negative:\n# e.g. -123\
    \ has signed digits -1, 2, and 3.\n#\n# $1 is a space-separated list\ncount_nums()\
    \ {\n    local -a arr=(\"$@\")\n    local count=0\n    for i in \"${arr[@]}\"\
    ; do\n        local sum=0\n        local num=$i\n        if (( num < 0 )); then\n\
    \            num=$(( -num ))\n        fi\n        while (( num > 0 )); do\n  \
    \          local digit=$(( num % 10 ))\n            sum=$(( sum + digit ))\n \
    \           num=$(( num / 10 ))\n        done\n        if (( sum > 0 )); then\n\
    \            count=$(( count + 1 ))\n        fi\n    done\n    echo $count\n}\n\
    \ncandidate() {\n    count_nums \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate\
    \ \"\") = \"0\" ]]\n    [[ $(candidate \"-1 -2 0\") = \"0\" ]]\n    [[ $(candidate\
    \ \"1 1 2 -2 3 4 5\") = \"6\" ]]\n    [[ $(candidate \"1 6 9 -6 0 1 5\") = \"\
    5\" ]]\n    [[ $(candidate \"1 100 98 -7 1 -1\") = \"4\" ]]\n    [[ $(candidate\
    \ \"12 23 34 -45 -56 0\") = \"5\" ]]\n    [[ $(candidate \"0 1\") = \"1\" ]]\n\
    \    [[ $(candidate \"1\") = \"1\" ]]\n}\n\nrun_test"
  status: SyntaxError
  stderr: '/tmp/tmpqf7rl1di.sh: line 14: ((: -1 -2 0: syntax error in expression (error
    token is "0")

    /tmp/tmpqf7rl1di.sh: line 17: ((: -1 -2 0: syntax error in expression (error token
    is "0")

    /tmp/tmpqf7rl1di.sh: line 14: ((: 1 1 2 -2 3 4 5: syntax error in expression (error
    token is "1 2 -2 3 4 5")

    /tmp/tmpqf7rl1di.sh: line 17: ((: 1 1 2 -2 3 4 5: syntax error in expression (error
    token is "1 2 -2 3 4 5")

    '
  stdout: ''
  timestamp: 1660004374
- exit_code: 1
  program: "#!/bin/bash\n# Write a function count_nums which takes an array of integers\
    \ and returns\n# the number of elements which has a sum of digits > 0.\n# If a\
    \ number is negative, then its first signed digit will be negative:\n# e.g. -123\
    \ has signed digits -1, 2, and 3.\n#\n# $1 is a space-separated list\ncount_nums()\
    \ {\n    local sum=0\n    local count=0\n    for i in $1; do\n        if [[ $i\
    \ -lt 0 ]]; then\n            i=$((-$i))\n        fi\n        while [[ $i -gt\
    \ 0 ]]; do\n            sum=$((sum + i % 10))\n            i=$((i / 10))\n   \
    \     done\n        if [[ $sum -gt 0 ]]; then\n            count=$((count + 1))\n\
    \        fi\n        sum=0\n    done\n    echo $count\n}\n\ncandidate() {\n  \
    \  count_nums \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"\") = \"\
    0\" ]]\n    [[ $(candidate \"-1 -2 0\") = \"0\" ]]\n    [[ $(candidate \"1 1 2\
    \ -2 3 4 5\") = \"6\" ]]\n    [[ $(candidate \"1 6 9 -6 0 1 5\") = \"5\" ]]\n\
    \    [[ $(candidate \"1 100 98 -7 1 -1\") = \"4\" ]]\n    [[ $(candidate \"12\
    \ 23 34 -45 -56 0\") = \"5\" ]]\n    [[ $(candidate \"0 1\") = \"1\" ]]\n    [[\
    \ $(candidate \"1\") = \"1\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660004374
- exit_code: 1
  program: "#!/bin/bash\n# Write a function count_nums which takes an array of integers\
    \ and returns\n# the number of elements which has a sum of digits > 0.\n# If a\
    \ number is negative, then its first signed digit will be negative:\n# e.g. -123\
    \ has signed digits -1, 2, and 3.\n#\n# $1 is a space-separated list\ncount_nums()\
    \ {\n    local -i sum=0\n    local -i n=0\n    for i in $1; do\n        if ((\
    \ i < 0 )); then\n            (( sum += -i % 10 ))\n            (( i /= 10 ))\n\
    \        fi\n        while (( i > 0 )); do\n            (( sum += i % 10 ))\n\
    \            (( i /= 10 ))\n        done\n        (( sum > 0 )) && (( ++n ))\n\
    \        (( sum = 0 ))\n    done\n    echo $n\n}\n\ncandidate() {\n    count_nums\
    \ \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"\") = \"0\" ]]\n   \
    \ [[ $(candidate \"-1 -2 0\") = \"0\" ]]\n    [[ $(candidate \"1 1 2 -2 3 4 5\"\
    ) = \"6\" ]]\n    [[ $(candidate \"1 6 9 -6 0 1 5\") = \"5\" ]]\n    [[ $(candidate\
    \ \"1 100 98 -7 1 -1\") = \"4\" ]]\n    [[ $(candidate \"12 23 34 -45 -56 0\"\
    ) = \"5\" ]]\n    [[ $(candidate \"0 1\") = \"1\" ]]\n    [[ $(candidate \"1\"\
    ) = \"1\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660004374
- exit_code: 1
  program: "#!/bin/bash\n# Write a function count_nums which takes an array of integers\
    \ and returns\n# the number of elements which has a sum of digits > 0.\n# If a\
    \ number is negative, then its first signed digit will be negative:\n# e.g. -123\
    \ has signed digits -1, 2, and 3.\n#\n# $1 is a space-separated list\ncount_nums()\
    \ {\n    local -i sum=0\n    local -i i=0\n    local -i count=0\n    local -i\
    \ num\n    local -i sign\n    local -i digit\n    local -i abs_num\n    local\
    \ -i abs_digit\n    local -i abs_sign\n    local -i abs_sum\n    for i in $1;\
    \ do\n        num=$i\n        sum=0\n        sign=1\n        if (( num < 0 ));\
    \ then\n            sign=-1\n            num=-num\n        fi\n        while ((\
    \ num > 0 )); do\n            digit=$(( num % 10 ))\n            num=$(( num /\
    \ 10 ))\n            sum=$(( sum + digit ))\n        done\n        abs_sum=$((\
    \ sum * sign ))\n        if (( abs_sum > 0 )); then\n            count=$(( count\
    \ + 1 ))\n        fi\n    done\n    echo $count\n}\n\ncandidate() {\n    count_nums\
    \ \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"\") = \"0\" ]]\n   \
    \ [[ $(candidate \"-1 -2 0\") = \"0\" ]]\n    [[ $(candidate \"1 1 2 -2 3 4 5\"\
    ) = \"6\" ]]\n    [[ $(candidate \"1 6 9 -6 0 1 5\") = \"5\" ]]\n    [[ $(candidate\
    \ \"1 100 98 -7 1 -1\") = \"4\" ]]\n    [[ $(candidate \"12 23 34 -45 -56 0\"\
    ) = \"5\" ]]\n    [[ $(candidate \"0 1\") = \"1\" ]]\n    [[ $(candidate \"1\"\
    ) = \"1\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660004374
- exit_code: 1
  program: "#!/bin/bash\n# Write a function count_nums which takes an array of integers\
    \ and returns\n# the number of elements which has a sum of digits > 0.\n# If a\
    \ number is negative, then its first signed digit will be negative:\n# e.g. -123\
    \ has signed digits -1, 2, and 3.\n#\n# $1 is a space-separated list\ncount_nums()\
    \ {\n    local -a array\n    local i\n    local sum\n    local count\n    local\
    \ -i num\n\n    array=($1)\n    count=0\n    for ((i=0; i<${#array[@]}; i++));\
    \ do\n        num=${array[$i]}\n        if ((num < 0)); then\n            num=${num#-}\n\
    \        fi\n        sum=0\n        while ((num > 0)); do\n            ((sum +=\
    \ num % 10))\n            ((num /= 10))\n        done\n        if ((sum > 0));\
    \ then\n            ((count++))\n        fi\n    done\n    echo $count\n}\n\n\
    candidate() {\n    count_nums \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate\
    \ \"\") = \"0\" ]]\n    [[ $(candidate \"-1 -2 0\") = \"0\" ]]\n    [[ $(candidate\
    \ \"1 1 2 -2 3 4 5\") = \"6\" ]]\n    [[ $(candidate \"1 6 9 -6 0 1 5\") = \"\
    5\" ]]\n    [[ $(candidate \"1 100 98 -7 1 -1\") = \"4\" ]]\n    [[ $(candidate\
    \ \"12 23 34 -45 -56 0\") = \"5\" ]]\n    [[ $(candidate \"0 1\") = \"1\" ]]\n\
    \    [[ $(candidate \"1\") = \"1\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660004374
- exit_code: 1
  program: "#!/bin/bash\n# Write a function count_nums which takes an array of integers\
    \ and returns\n# the number of elements which has a sum of digits > 0.\n# If a\
    \ number is negative, then its first signed digit will be negative:\n# e.g. -123\
    \ has signed digits -1, 2, and 3.\n#\n# $1 is a space-separated list\ncount_nums()\
    \ {\n    local -a arr=(\"$@\")\n    local -i sum=0\n    local -i count=0\n   \
    \ local -i i=0\n    local -i j=0\n    local -i len=${#arr[@]}\n    local -i num=0\n\
    \    local -i digit=0\n    local -i sign=0\n\n    for ((i=0; i<len; i++)); do\n\
    \        num=${arr[i]}\n        sign=1\n        if ((num < 0)); then\n       \
    \     sign=-1\n            num=$((-num))\n        fi\n        sum=0\n        while\
    \ ((num > 0)); do\n            digit=$((num % 10))\n            sum=$((sum + digit))\n\
    \            num=$((num / 10))\n        done\n        sum=$((sum * sign))\n  \
    \      if ((sum > 0)); then\n            count=$((count + 1))\n        fi\n  \
    \  done\n    echo $count\n}\n\ncandidate() {\n    count_nums \"$@\"\n}\n\nset\
    \ -e\nrun_test() {\n    [[ $(candidate \"\") = \"0\" ]]\n    [[ $(candidate \"\
    -1 -2 0\") = \"0\" ]]\n    [[ $(candidate \"1 1 2 -2 3 4 5\") = \"6\" ]]\n   \
    \ [[ $(candidate \"1 6 9 -6 0 1 5\") = \"5\" ]]\n    [[ $(candidate \"1 100 98\
    \ -7 1 -1\") = \"4\" ]]\n    [[ $(candidate \"12 23 34 -45 -56 0\") = \"5\" ]]\n\
    \    [[ $(candidate \"0 1\") = \"1\" ]]\n    [[ $(candidate \"1\") = \"1\" ]]\n\
    }\n\nrun_test"
  status: SyntaxError
  stderr: '/tmp/tmpc1psl4as.sh: line 20: -1 -2 0: syntax error in expression (error
    token is "0")

    '
  stdout: ''
  timestamp: 1660004374
- exit_code: 1
  program: "#!/bin/bash\n# Write a function count_nums which takes an array of integers\
    \ and returns\n# the number of elements which has a sum of digits > 0.\n# If a\
    \ number is negative, then its first signed digit will be negative:\n# e.g. -123\
    \ has signed digits -1, 2, and 3.\n#\n# $1 is a space-separated list\ncount_nums()\
    \ {\n    local -i sum=0\n    for i in $1; do\n        if (( i < 0 )); then\n \
    \           (( i = -i ))\n        fi\n        while (( i > 0 )); do\n        \
    \    (( sum += i % 10 ))\n            (( i /= 10 ))\n        done\n        if\
    \ (( sum > 0 )); then\n            (( count++ ))\n        fi\n        (( sum =\
    \ 0 ))\n    done\n    echo $count\n}\n\ncandidate() {\n    count_nums \"$@\"\n\
    }\n\nset -e\nrun_test() {\n    [[ $(candidate \"\") = \"0\" ]]\n    [[ $(candidate\
    \ \"-1 -2 0\") = \"0\" ]]\n    [[ $(candidate \"1 1 2 -2 3 4 5\") = \"6\" ]]\n\
    \    [[ $(candidate \"1 6 9 -6 0 1 5\") = \"5\" ]]\n    [[ $(candidate \"1 100\
    \ 98 -7 1 -1\") = \"4\" ]]\n    [[ $(candidate \"12 23 34 -45 -56 0\") = \"5\"\
    \ ]]\n    [[ $(candidate \"0 1\") = \"1\" ]]\n    [[ $(candidate \"1\") = \"1\"\
    \ ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660004374
- exit_code: 1
  program: "#!/bin/bash\n# Write a function count_nums which takes an array of integers\
    \ and returns\n# the number of elements which has a sum of digits > 0.\n# If a\
    \ number is negative, then its first signed digit will be negative:\n# e.g. -123\
    \ has signed digits -1, 2, and 3.\n#\n# $1 is a space-separated list\ncount_nums()\
    \ {\n    local sum=0\n    local count=0\n    for num in $1; do\n        if [ $num\
    \ -lt 0 ]; then\n            num=$((-$num))\n        fi\n        while [ $num\
    \ -gt 0 ]; do\n            sum=$((sum + num % 10))\n            num=$((num / 10))\n\
    \        done\n        if [ $sum -gt 0 ]; then\n            count=$((count + 1))\n\
    \        fi\n        sum=0\n    done\n    echo $count\n}\n\ncandidate() {\n  \
    \  count_nums \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"\") = \"\
    0\" ]]\n    [[ $(candidate \"-1 -2 0\") = \"0\" ]]\n    [[ $(candidate \"1 1 2\
    \ -2 3 4 5\") = \"6\" ]]\n    [[ $(candidate \"1 6 9 -6 0 1 5\") = \"5\" ]]\n\
    \    [[ $(candidate \"1 100 98 -7 1 -1\") = \"4\" ]]\n    [[ $(candidate \"12\
    \ 23 34 -45 -56 0\") = \"5\" ]]\n    [[ $(candidate \"0 1\") = \"1\" ]]\n    [[\
    \ $(candidate \"1\") = \"1\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660004374
- exit_code: 1
  program: "#!/bin/bash\n# Write a function count_nums which takes an array of integers\
    \ and returns\n# the number of elements which has a sum of digits > 0.\n# If a\
    \ number is negative, then its first signed digit will be negative:\n# e.g. -123\
    \ has signed digits -1, 2, and 3.\n#\n# $1 is a space-separated list\ncount_nums()\
    \ {\n    local -a arr=($1)\n    local count=0\n    for i in \"${arr[@]}\"; do\n\
    \        local sum=0\n        local num=${i#-}\n        while [[ $num -gt 0 ]];\
    \ do\n            sum=$((sum + num % 10))\n            num=$((num / 10))\n   \
    \     done\n        if [[ $sum -gt 0 ]]; then\n            count=$((count + 1))\n\
    \        fi\n    done\n    echo $count\n}\n\ncandidate() {\n    count_nums \"\
    $@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"\") = \"0\" ]]\n    [[ $(candidate\
    \ \"-1 -2 0\") = \"0\" ]]\n    [[ $(candidate \"1 1 2 -2 3 4 5\") = \"6\" ]]\n\
    \    [[ $(candidate \"1 6 9 -6 0 1 5\") = \"5\" ]]\n    [[ $(candidate \"1 100\
    \ 98 -7 1 -1\") = \"4\" ]]\n    [[ $(candidate \"12 23 34 -45 -56 0\") = \"5\"\
    \ ]]\n    [[ $(candidate \"0 1\") = \"1\" ]]\n    [[ $(candidate \"1\") = \"1\"\
    \ ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660004373
- exit_code: 1
  program: "#!/bin/bash\n# Write a function count_nums which takes an array of integers\
    \ and returns\n# the number of elements which has a sum of digits > 0.\n# If a\
    \ number is negative, then its first signed digit will be negative:\n# e.g. -123\
    \ has signed digits -1, 2, and 3.\n#\n# $1 is a space-separated list\ncount_nums()\
    \ {\n    local -a nums=($1)\n    local sum=0\n    local count=0\n    for num in\
    \ ${nums[@]}; do\n        if [[ $num -lt 0 ]]; then\n            num=$((-$num))\n\
    \        fi\n        while [[ $num -gt 0 ]]; do\n            sum=$((sum + num\
    \ % 10))\n            num=$((num / 10))\n        done\n        if [[ $sum -gt\
    \ 0 ]]; then\n            count=$((count + 1))\n        fi\n        sum=0\n  \
    \  done\n    echo $count\n}\n\ncandidate() {\n    count_nums \"$@\"\n}\n\nset\
    \ -e\nrun_test() {\n    [[ $(candidate \"\") = \"0\" ]]\n    [[ $(candidate \"\
    -1 -2 0\") = \"0\" ]]\n    [[ $(candidate \"1 1 2 -2 3 4 5\") = \"6\" ]]\n   \
    \ [[ $(candidate \"1 6 9 -6 0 1 5\") = \"5\" ]]\n    [[ $(candidate \"1 100 98\
    \ -7 1 -1\") = \"4\" ]]\n    [[ $(candidate \"12 23 34 -45 -56 0\") = \"5\" ]]\n\
    \    [[ $(candidate \"0 1\") = \"1\" ]]\n    [[ $(candidate \"1\") = \"1\" ]]\n\
    }\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660004374
- exit_code: 1
  program: "#!/bin/bash\n# Write a function count_nums which takes an array of integers\
    \ and returns\n# the number of elements which has a sum of digits > 0.\n# If a\
    \ number is negative, then its first signed digit will be negative:\n# e.g. -123\
    \ has signed digits -1, 2, and 3.\n#\n# $1 is a space-separated list\ncount_nums()\
    \ {\n    local -i sum=0\n    for n in $1; do\n        if (( n < 0 )); then\n \
    \           n=${n:1}\n        fi\n        while (( n > 0 )); do\n            ((\
    \ sum += n % 10 ))\n            (( n /= 10 ))\n        done\n        (( sum >\
    \ 0 )) && (( ++count ))\n        (( sum = 0 ))\n    done\n    echo $count\n}\n\
    \ncandidate() {\n    count_nums \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate\
    \ \"\") = \"0\" ]]\n    [[ $(candidate \"-1 -2 0\") = \"0\" ]]\n    [[ $(candidate\
    \ \"1 1 2 -2 3 4 5\") = \"6\" ]]\n    [[ $(candidate \"1 6 9 -6 0 1 5\") = \"\
    5\" ]]\n    [[ $(candidate \"1 100 98 -7 1 -1\") = \"4\" ]]\n    [[ $(candidate\
    \ \"12 23 34 -45 -56 0\") = \"5\" ]]\n    [[ $(candidate \"0 1\") = \"1\" ]]\n\
    \    [[ $(candidate \"1\") = \"1\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660004374
- exit_code: 1
  program: "#!/bin/bash\n# Write a function count_nums which takes an array of integers\
    \ and returns\n# the number of elements which has a sum of digits > 0.\n# If a\
    \ number is negative, then its first signed digit will be negative:\n# e.g. -123\
    \ has signed digits -1, 2, and 3.\n#\n# $1 is a space-separated list\ncount_nums()\
    \ {\n    local -a array\n    local -i i sum\n    array=($1)\n    for ((i=0; i<${#array[@]};\
    \ i++)); do\n        sum=0\n        while ((array[i] != 0)); do\n            sum=$((sum\
    \ + array[i] % 10))\n            array[i]=$((array[i] / 10))\n        done\n \
    \       if ((sum > 0)); then\n            echo -n \"${array[i]} \"\n        fi\n\
    \    done\n    echo\n}\n\ncandidate() {\n    count_nums \"$@\"\n}\n\nset -e\n\
    run_test() {\n    [[ $(candidate \"\") = \"0\" ]]\n    [[ $(candidate \"-1 -2\
    \ 0\") = \"0\" ]]\n    [[ $(candidate \"1 1 2 -2 3 4 5\") = \"6\" ]]\n    [[ $(candidate\
    \ \"1 6 9 -6 0 1 5\") = \"5\" ]]\n    [[ $(candidate \"1 100 98 -7 1 -1\") = \"\
    4\" ]]\n    [[ $(candidate \"12 23 34 -45 -56 0\") = \"5\" ]]\n    [[ $(candidate\
    \ \"0 1\") = \"1\" ]]\n    [[ $(candidate \"1\") = \"1\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660004374
- exit_code: 1
  program: "#!/bin/bash\n# Write a function count_nums which takes an array of integers\
    \ and returns\n# the number of elements which has a sum of digits > 0.\n# If a\
    \ number is negative, then its first signed digit will be negative:\n# e.g. -123\
    \ has signed digits -1, 2, and 3.\n#\n# $1 is a space-separated list\ncount_nums()\
    \ {\n    local -a arr=($1)\n    local count=0\n    for i in \"${arr[@]}\"; do\n\
    \        local sum=0\n        if (( i < 0 )); then\n            i=$(( -i ))\n\
    \        fi\n        while (( i > 0 )); do\n            sum=$(( sum + i % 10 ))\n\
    \            i=$(( i / 10 ))\n        done\n        if (( sum > 0 )); then\n \
    \           count=$(( count + 1 ))\n        fi\n    done\n    echo $count\n}\n\
    \ncandidate() {\n    count_nums \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate\
    \ \"\") = \"0\" ]]\n    [[ $(candidate \"-1 -2 0\") = \"0\" ]]\n    [[ $(candidate\
    \ \"1 1 2 -2 3 4 5\") = \"6\" ]]\n    [[ $(candidate \"1 6 9 -6 0 1 5\") = \"\
    5\" ]]\n    [[ $(candidate \"1 100 98 -7 1 -1\") = \"4\" ]]\n    [[ $(candidate\
    \ \"12 23 34 -45 -56 0\") = \"5\" ]]\n    [[ $(candidate \"0 1\") = \"1\" ]]\n\
    \    [[ $(candidate \"1\") = \"1\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660004374
- exit_code: 1
  program: "#!/bin/bash\n# Write a function count_nums which takes an array of integers\
    \ and returns\n# the number of elements which has a sum of digits > 0.\n# If a\
    \ number is negative, then its first signed digit will be negative:\n# e.g. -123\
    \ has signed digits -1, 2, and 3.\n#\n# $1 is a space-separated list\ncount_nums()\
    \ {\n    local -a nums=($1)\n    local -i count=0\n    local -i sum=0\n    local\
    \ -i i=0\n    local -i j=0\n    local -i num=0\n    local -i digit=0\n    local\
    \ -i num_digits=0\n    local -i num_nums=${#nums[@]}\n    for ((i=0; i<num_nums;\
    \ i++)); do\n        num=${nums[i]}\n        num_digits=${#num}\n        for ((j=0;\
    \ j<num_digits; j++)); do\n            digit=${num:j:1}\n            sum=$((sum\
    \ + digit))\n        done\n        if ((sum > 0)); then\n            count=$((count\
    \ + 1))\n        fi\n        sum=0\n    done\n    echo $count\n}\n\ncandidate()\
    \ {\n    count_nums \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"\"\
    ) = \"0\" ]]\n    [[ $(candidate \"-1 -2 0\") = \"0\" ]]\n    [[ $(candidate \"\
    1 1 2 -2 3 4 5\") = \"6\" ]]\n    [[ $(candidate \"1 6 9 -6 0 1 5\") = \"5\" ]]\n\
    \    [[ $(candidate \"1 100 98 -7 1 -1\") = \"4\" ]]\n    [[ $(candidate \"12\
    \ 23 34 -45 -56 0\") = \"5\" ]]\n    [[ $(candidate \"0 1\") = \"1\" ]]\n    [[\
    \ $(candidate \"1\") = \"1\" ]]\n}\n\nrun_test"
  status: SyntaxError
  stderr: '/tmp/tmp488s988d.sh: line 22: -: syntax error: operand expected (error
    token is "-")

    '
  stdout: ''
  timestamp: 1660004374
- exit_code: 1
  program: "#!/bin/bash\n# Write a function count_nums which takes an array of integers\
    \ and returns\n# the number of elements which has a sum of digits > 0.\n# If a\
    \ number is negative, then its first signed digit will be negative:\n# e.g. -123\
    \ has signed digits -1, 2, and 3.\n#\n# $1 is a space-separated list\ncount_nums()\
    \ {\n    local -a arr=(\"$@\")\n    local sum=0\n    local count=0\n    for i\
    \ in \"${arr[@]}\"; do\n        if (( i < 0 )); then\n            i=$(( -i ))\n\
    \        fi\n        while (( i > 0 )); do\n            sum=$(( sum + i % 10 ))\n\
    \            i=$(( i / 10 ))\n        done\n        if (( sum > 0 )); then\n \
    \           count=$(( count + 1 ))\n        fi\n        sum=0\n    done\n    echo\
    \ \"$count\"\n}\n\ncandidate() {\n    count_nums \"$@\"\n}\n\nset -e\nrun_test()\
    \ {\n    [[ $(candidate \"\") = \"0\" ]]\n    [[ $(candidate \"-1 -2 0\") = \"\
    0\" ]]\n    [[ $(candidate \"1 1 2 -2 3 4 5\") = \"6\" ]]\n    [[ $(candidate\
    \ \"1 6 9 -6 0 1 5\") = \"5\" ]]\n    [[ $(candidate \"1 100 98 -7 1 -1\") = \"\
    4\" ]]\n    [[ $(candidate \"12 23 34 -45 -56 0\") = \"5\" ]]\n    [[ $(candidate\
    \ \"0 1\") = \"1\" ]]\n    [[ $(candidate \"1\") = \"1\" ]]\n}\n\nrun_test"
  status: SyntaxError
  stderr: '/tmp/tmpch8xfrzw.sh: line 13: ((: -1 -2 0: syntax error in expression (error
    token is "0")

    /tmp/tmpch8xfrzw.sh: line 16: ((: -1 -2 0: syntax error in expression (error token
    is "0")

    /tmp/tmpch8xfrzw.sh: line 13: ((: 1 1 2 -2 3 4 5: syntax error in expression (error
    token is "1 2 -2 3 4 5")

    /tmp/tmpch8xfrzw.sh: line 16: ((: 1 1 2 -2 3 4 5: syntax error in expression (error
    token is "1 2 -2 3 4 5")

    '
  stdout: ''
  timestamp: 1660004374
- exit_code: 1
  program: "#!/bin/bash\n# Write a function count_nums which takes an array of integers\
    \ and returns\n# the number of elements which has a sum of digits > 0.\n# If a\
    \ number is negative, then its first signed digit will be negative:\n# e.g. -123\
    \ has signed digits -1, 2, and 3.\n#\n# $1 is a space-separated list\ncount_nums()\
    \ {\n    local -a arr=($1)\n    local sum=0\n    local count=0\n    for i in ${arr[@]};\
    \ do\n        if [[ $i -lt 0 ]]; then\n            i=$((-i))\n        fi\n   \
    \     while [[ $i -gt 0 ]]; do\n            sum=$((sum + i % 10))\n          \
    \  i=$((i / 10))\n        done\n        if [[ $sum -gt 0 ]]; then\n          \
    \  count=$((count + 1))\n        fi\n        sum=0\n    done\n    echo $count\n\
    }\n\ncandidate() {\n    count_nums \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate\
    \ \"\") = \"0\" ]]\n    [[ $(candidate \"-1 -2 0\") = \"0\" ]]\n    [[ $(candidate\
    \ \"1 1 2 -2 3 4 5\") = \"6\" ]]\n    [[ $(candidate \"1 6 9 -6 0 1 5\") = \"\
    5\" ]]\n    [[ $(candidate \"1 100 98 -7 1 -1\") = \"4\" ]]\n    [[ $(candidate\
    \ \"12 23 34 -45 -56 0\") = \"5\" ]]\n    [[ $(candidate \"0 1\") = \"1\" ]]\n\
    \    [[ $(candidate \"1\") = \"1\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660004374
- exit_code: 1
  program: "#!/bin/bash\n# Write a function count_nums which takes an array of integers\
    \ and returns\n# the number of elements which has a sum of digits > 0.\n# If a\
    \ number is negative, then its first signed digit will be negative:\n# e.g. -123\
    \ has signed digits -1, 2, and 3.\n#\n# $1 is a space-separated list\ncount_nums()\
    \ {\n    local -a array=(\"$@\")\n    local count=0\n    for i in \"${array[@]}\"\
    ; do\n        local sum=0\n        local num=$i\n        while [ $num -ne 0 ];\
    \ do\n            sum=$((sum + num % 10))\n            num=$((num / 10))\n   \
    \     done\n        if [ $sum -gt 0 ]; then\n            count=$((count + 1))\n\
    \        fi\n    done\n    echo $count\n}\n\ncandidate() {\n    count_nums \"\
    $@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"\") = \"0\" ]]\n    [[ $(candidate\
    \ \"-1 -2 0\") = \"0\" ]]\n    [[ $(candidate \"1 1 2 -2 3 4 5\") = \"6\" ]]\n\
    \    [[ $(candidate \"1 6 9 -6 0 1 5\") = \"5\" ]]\n    [[ $(candidate \"1 100\
    \ 98 -7 1 -1\") = \"4\" ]]\n    [[ $(candidate \"12 23 34 -45 -56 0\") = \"5\"\
    \ ]]\n    [[ $(candidate \"0 1\") = \"1\" ]]\n    [[ $(candidate \"1\") = \"1\"\
    \ ]]\n}\n\nrun_test"
  status: Exception
  stderr: '/tmp/tmpks3ogah8.sh: line 14: [: -ne: unary operator expected

    /tmp/tmpks3ogah8.sh: line 14: [: -1: unary operator expected

    /tmp/tmpks3ogah8.sh: line 14: [: too many arguments

    '
  stdout: ''
  timestamp: 1660004374
- exit_code: 1
  program: "#!/bin/bash\n# Write a function count_nums which takes an array of integers\
    \ and returns\n# the number of elements which has a sum of digits > 0.\n# If a\
    \ number is negative, then its first signed digit will be negative:\n# e.g. -123\
    \ has signed digits -1, 2, and 3.\n#\n# $1 is a space-separated list\ncount_nums()\
    \ {\n    local -a arr\n    local -i i\n    local -i sum\n    local -i count\n\
    \    arr=($1)\n    count=0\n    for ((i=0; i<${#arr[@]}; i++)); do\n        sum=0\n\
    \        while ((arr[i] != 0)); do\n            sum=$((sum + arr[i] % 10))\n \
    \           arr[i]=$((arr[i] / 10))\n        done\n        ((sum != 0)) && ((count++))\n\
    \    done\n    echo $count\n}\n\ncandidate() {\n    count_nums \"$@\"\n}\n\nset\
    \ -e\nrun_test() {\n    [[ $(candidate \"\") = \"0\" ]]\n    [[ $(candidate \"\
    -1 -2 0\") = \"0\" ]]\n    [[ $(candidate \"1 1 2 -2 3 4 5\") = \"6\" ]]\n   \
    \ [[ $(candidate \"1 6 9 -6 0 1 5\") = \"5\" ]]\n    [[ $(candidate \"1 100 98\
    \ -7 1 -1\") = \"4\" ]]\n    [[ $(candidate \"12 23 34 -45 -56 0\") = \"5\" ]]\n\
    \    [[ $(candidate \"0 1\") = \"1\" ]]\n    [[ $(candidate \"1\") = \"1\" ]]\n\
    }\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660004374
- exit_code: 1
  program: "#!/bin/bash\n# Write a function count_nums which takes an array of integers\
    \ and returns\n# the number of elements which has a sum of digits > 0.\n# If a\
    \ number is negative, then its first signed digit will be negative:\n# e.g. -123\
    \ has signed digits -1, 2, and 3.\n#\n# $1 is a space-separated list\ncount_nums()\
    \ {\n    local -a nums\n    local sum=0\n    nums=($1)\n    for num in \"${nums[@]}\"\
    ; do\n        if [[ $num -lt 0 ]]; then\n            num=$((-$num))\n        fi\n\
    \        while [[ $num -gt 0 ]]; do\n            sum=$((sum + num % 10))\n   \
    \         num=$((num / 10))\n        done\n        if [[ $sum -gt 0 ]]; then\n\
    \            echo -n \"$num \"\n        fi\n        sum=0\n    done\n}\n\ncandidate()\
    \ {\n    count_nums \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"\"\
    ) = \"0\" ]]\n    [[ $(candidate \"-1 -2 0\") = \"0\" ]]\n    [[ $(candidate \"\
    1 1 2 -2 3 4 5\") = \"6\" ]]\n    [[ $(candidate \"1 6 9 -6 0 1 5\") = \"5\" ]]\n\
    \    [[ $(candidate \"1 100 98 -7 1 -1\") = \"4\" ]]\n    [[ $(candidate \"12\
    \ 23 34 -45 -56 0\") = \"5\" ]]\n    [[ $(candidate \"0 1\") = \"1\" ]]\n    [[\
    \ $(candidate \"1\") = \"1\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660004374
- exit_code: 1
  program: "#!/bin/bash\n# Write a function count_nums which takes an array of integers\
    \ and returns\n# the number of elements which has a sum of digits > 0.\n# If a\
    \ number is negative, then its first signed digit will be negative:\n# e.g. -123\
    \ has signed digits -1, 2, and 3.\n#\n# $1 is a space-separated list\ncount_nums()\
    \ {\n    local -a nums=($1)\n    local count=0\n    for num in \"${nums[@]}\"\
    ; do\n        local sum=0\n        local abs_num=${num#-}\n        while (( abs_num\
    \ > 0 )); do\n            sum=$(( sum + abs_num % 10 ))\n            abs_num=$((\
    \ abs_num / 10 ))\n        done\n        if (( sum > 0 )); then\n            count=$((\
    \ count + 1 ))\n        fi\n    done\n    echo $count\n}\n\ncandidate() {\n  \
    \  count_nums \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"\") = \"\
    0\" ]]\n    [[ $(candidate \"-1 -2 0\") = \"0\" ]]\n    [[ $(candidate \"1 1 2\
    \ -2 3 4 5\") = \"6\" ]]\n    [[ $(candidate \"1 6 9 -6 0 1 5\") = \"5\" ]]\n\
    \    [[ $(candidate \"1 100 98 -7 1 -1\") = \"4\" ]]\n    [[ $(candidate \"12\
    \ 23 34 -45 -56 0\") = \"5\" ]]\n    [[ $(candidate \"0 1\") = \"1\" ]]\n    [[\
    \ $(candidate \"1\") = \"1\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660004373
- exit_code: 1
  program: "#!/bin/bash\n# Write a function count_nums which takes an array of integers\
    \ and returns\n# the number of elements which has a sum of digits > 0.\n# If a\
    \ number is negative, then its first signed digit will be negative:\n# e.g. -123\
    \ has signed digits -1, 2, and 3.\n#\n# $1 is a space-separated list\ncount_nums()\
    \ {\n    local -a arr\n    local -i sum\n    local -i i\n    local -i count\n\
    \    arr=($1)\n    count=0\n    for ((i=0; i<${#arr[@]}; i++)); do\n        sum=0\n\
    \        while ((arr[i] != 0)); do\n            sum=$((sum + arr[i] % 10))\n \
    \           arr[i]=$((arr[i] / 10))\n        done\n        if ((sum > 0)); then\n\
    \            count=$((count + 1))\n        fi\n    done\n    echo $count\n}\n\n\
    candidate() {\n    count_nums \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate\
    \ \"\") = \"0\" ]]\n    [[ $(candidate \"-1 -2 0\") = \"0\" ]]\n    [[ $(candidate\
    \ \"1 1 2 -2 3 4 5\") = \"6\" ]]\n    [[ $(candidate \"1 6 9 -6 0 1 5\") = \"\
    5\" ]]\n    [[ $(candidate \"1 100 98 -7 1 -1\") = \"4\" ]]\n    [[ $(candidate\
    \ \"12 23 34 -45 -56 0\") = \"5\" ]]\n    [[ $(candidate \"0 1\") = \"1\" ]]\n\
    \    [[ $(candidate \"1\") = \"1\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660004373
- exit_code: 1
  program: "#!/bin/bash\n# Write a function count_nums which takes an array of integers\
    \ and returns\n# the number of elements which has a sum of digits > 0.\n# If a\
    \ number is negative, then its first signed digit will be negative:\n# e.g. -123\
    \ has signed digits -1, 2, and 3.\n#\n# $1 is a space-separated list\ncount_nums()\
    \ {\n    local -a arr=(\"$@\")\n    local count=0\n    for i in \"${arr[@]}\"\
    ; do\n        local sum=0\n        local num=$i\n        if (( num < 0 )); then\n\
    \            num=$(( -num ))\n        fi\n        while (( num > 0 )); do\n  \
    \          sum=$(( sum + num % 10 ))\n            num=$(( num / 10 ))\n      \
    \  done\n        if (( sum > 0 )); then\n            count=$(( count + 1 ))\n\
    \        fi\n    done\n    echo $count\n}\n\ncandidate() {\n    count_nums \"\
    $@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"\") = \"0\" ]]\n    [[ $(candidate\
    \ \"-1 -2 0\") = \"0\" ]]\n    [[ $(candidate \"1 1 2 -2 3 4 5\") = \"6\" ]]\n\
    \    [[ $(candidate \"1 6 9 -6 0 1 5\") = \"5\" ]]\n    [[ $(candidate \"1 100\
    \ 98 -7 1 -1\") = \"4\" ]]\n    [[ $(candidate \"12 23 34 -45 -56 0\") = \"5\"\
    \ ]]\n    [[ $(candidate \"0 1\") = \"1\" ]]\n    [[ $(candidate \"1\") = \"1\"\
    \ ]]\n}\n\nrun_test"
  status: SyntaxError
  stderr: '/tmp/tmp7_0piepm.sh: line 14: ((: -1 -2 0: syntax error in expression (error
    token is "0")

    /tmp/tmp7_0piepm.sh: line 17: ((: -1 -2 0: syntax error in expression (error token
    is "0")

    /tmp/tmp7_0piepm.sh: line 14: ((: 1 1 2 -2 3 4 5: syntax error in expression (error
    token is "1 2 -2 3 4 5")

    /tmp/tmp7_0piepm.sh: line 17: ((: 1 1 2 -2 3 4 5: syntax error in expression (error
    token is "1 2 -2 3 4 5")

    '
  stdout: ''
  timestamp: 1660004374
- exit_code: -1
  program: "#!/bin/bash\n# Write a function count_nums which takes an array of integers\
    \ and returns\n# the number of elements which has a sum of digits > 0.\n# If a\
    \ number is negative, then its first signed digit will be negative:\n# e.g. -123\
    \ has signed digits -1, 2, and 3.\n#\n# $1 is a space-separated list\ncount_nums()\
    \ {\n    local -i sum=0\n    local -i i=0\n    local -i num\n    local -i count=0\n\
    \    for num in $1; do\n        if (( num < 0 )); then\n            num=-num\n\
    \        fi\n        while (( num > 0 )); do\n            sum+=num%10\n      \
    \      num/=10\n        done\n        if (( sum > 0 )); then\n            count+=1\n\
    \        fi\n        sum=0\n    done\n    echo $count\n}\n\ncandidate() {\n  \
    \  count_nums \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"\") = \"\
    0\" ]]\n    [[ $(candidate \"-1 -2 0\") = \"0\" ]]\n    [[ $(candidate \"1 1 2\
    \ -2 3 4 5\") = \"6\" ]]\n    [[ $(candidate \"1 6 9 -6 0 1 5\") = \"5\" ]]\n\
    \    [[ $(candidate \"1 100 98 -7 1 -1\") = \"4\" ]]\n    [[ $(candidate \"12\
    \ 23 34 -45 -56 0\") = \"5\" ]]\n    [[ $(candidate \"0 1\") = \"1\" ]]\n    [[\
    \ $(candidate \"1\") = \"1\" ]]\n}\n\nrun_test"
  status: Timeout
  stderr: 'b''/tmp/tmpiih6p2a9.sh: line 19: num/=10: No such file or directory\n/tmp/tmpiih6p2a9.sh:
    line 19: num/=10: No such file or directory\n/tmp/tmpiih6p2a9.sh: line 19: num/=10:
    No such file or directory\n/tmp/tmpiih6p2a9.sh: line 19: num/=10: No such file
    or directory\n/tmp/tmpiih6p2a9.sh: line 19: num/=10: No such file or directory\n/tmp/tmpiih6p2a9.sh:
    line 19: num/=10: No such file or directory\n/tmp/tmpiih6p2a9.sh: line 19: num/=10:
    No such file or directory\n/tmp/tmpiih6p2a9.sh: line 19: num/=10: No such file
    or directory\n/tmp/tmpiih6p2a9.sh: line 19: num/=10: No such file or directory\n/tmp/tmpiih6p2a9.sh:
    line 19: num/=10: No such file or directory\n/tmp/tmpiih6p2a9.sh: line 19: num/=10:
    No such file or directory\n/tmp/tmpiih6p2a9.sh: line 19: num/=10: No such file
    or directory\n/tmp/tmpiih6p2a9.sh: line 19: num/=10: No such file or directory\n/tmp/tmpiih6p2a9.sh:
    line 19: num/=10: No such file or directory\n/tmp/tmpiih6p2a9.sh: line 19: num/=10:
    No such file or directory\n/tmp/tmpiih6p2a9.sh: line 19: num/=10: No such file
    or directory\n/tmp/tmpiih6p2a9.sh: line 19: num/=10: No such file or directory\n/tmp/tmpiih6p2a9.sh:
    line 19: num/=10: No such file or directory\n/tmp/tmpiih6p2a9.sh: line 19: num/=10:
    No such file or directory\n/tmp/tmpiih6p2a9.sh: line 19: num/=10: No such file
    or directory\n/tmp/tmpiih6p2a9.sh: line 19: num/=10: No such file or directory\n/tmp/tmpiih6p2a9.sh:
    line 19: num/=10: No such file or directory\n/tmp/tmpiih6p2a9.sh: line 19: num/=10:
    No such file or directory\n/tmp/tmpiih6p2a9.sh: line 19: num/=10: No such file
    or directory\n/tmp/tmpiih6p2a9.sh: line 19: num/=10: No such file or directory\n/tmp/tmpiih6p2a9.sh:
    line 19: num/=10: No such file or directory\n/tmp/tmpiih6p2a9.sh: line 19: num/=10:
    No such file or directory\n/tmp/tmpiih6p2a9.sh: line 19: num/=10: No such file
    or directory\n/tmp/tmpiih6p2a9.sh: line 19: num/=10: No such file or directory\n/tmp/tmpiih6p2a9.sh:
    line 19: num/=10: No such file or directory\n/tmp/tmpiih6p2a9.sh: line 19: num/=10:
    No such file or directory\n'
  stdout: None
  timestamp: 1660004379
- exit_code: 1
  program: "#!/bin/bash\n# Write a function count_nums which takes an array of integers\
    \ and returns\n# the number of elements which has a sum of digits > 0.\n# If a\
    \ number is negative, then its first signed digit will be negative:\n# e.g. -123\
    \ has signed digits -1, 2, and 3.\n#\n# $1 is a space-separated list\ncount_nums()\
    \ {\n    local -a arr=(\"$@\")\n    local count=0\n    for i in \"${arr[@]}\"\
    ; do\n        local sum=0\n        local num=$i\n        if (( num < 0 )); then\n\
    \            num=$(( -num ))\n        fi\n        while (( num > 0 )); do\n  \
    \          sum=$(( sum + num % 10 ))\n            num=$(( num / 10 ))\n      \
    \  done\n        if (( sum > 0 )); then\n            count=$(( count + 1 ))\n\
    \        fi\n    done\n    echo $count\n}\n\ncandidate() {\n    count_nums \"\
    $@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"\") = \"0\" ]]\n    [[ $(candidate\
    \ \"-1 -2 0\") = \"0\" ]]\n    [[ $(candidate \"1 1 2 -2 3 4 5\") = \"6\" ]]\n\
    \    [[ $(candidate \"1 6 9 -6 0 1 5\") = \"5\" ]]\n    [[ $(candidate \"1 100\
    \ 98 -7 1 -1\") = \"4\" ]]\n    [[ $(candidate \"12 23 34 -45 -56 0\") = \"5\"\
    \ ]]\n    [[ $(candidate \"0 1\") = \"1\" ]]\n    [[ $(candidate \"1\") = \"1\"\
    \ ]]\n}\n\nrun_test"
  status: SyntaxError
  stderr: '/tmp/tmp7_0piepm.sh: line 14: ((: -1 -2 0: syntax error in expression (error
    token is "0")

    /tmp/tmp7_0piepm.sh: line 17: ((: -1 -2 0: syntax error in expression (error token
    is "0")

    /tmp/tmp7_0piepm.sh: line 14: ((: 1 1 2 -2 3 4 5: syntax error in expression (error
    token is "1 2 -2 3 4 5")

    /tmp/tmp7_0piepm.sh: line 17: ((: 1 1 2 -2 3 4 5: syntax error in expression (error
    token is "1 2 -2 3 4 5")

    '
  stdout: ''
  timestamp: 1660004374
- exit_code: 1
  program: "#!/bin/bash\n# Write a function count_nums which takes an array of integers\
    \ and returns\n# the number of elements which has a sum of digits > 0.\n# If a\
    \ number is negative, then its first signed digit will be negative:\n# e.g. -123\
    \ has signed digits -1, 2, and 3.\n#\n# $1 is a space-separated list\ncount_nums()\
    \ {\n    local -a array=($1)\n    local count=0\n    for i in \"${array[@]}\"\
    ; do\n        local sum=0\n        local num=${i#-}\n        while (( num > 0\
    \ )); do\n            (( sum += num % 10 ))\n            (( num /= 10 ))\n   \
    \     done\n        (( sum > 0 )) && (( count++ ))\n    done\n    echo $count\n\
    }\n\ncandidate() {\n    count_nums \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate\
    \ \"\") = \"0\" ]]\n    [[ $(candidate \"-1 -2 0\") = \"0\" ]]\n    [[ $(candidate\
    \ \"1 1 2 -2 3 4 5\") = \"6\" ]]\n    [[ $(candidate \"1 6 9 -6 0 1 5\") = \"\
    5\" ]]\n    [[ $(candidate \"1 100 98 -7 1 -1\") = \"4\" ]]\n    [[ $(candidate\
    \ \"12 23 34 -45 -56 0\") = \"5\" ]]\n    [[ $(candidate \"0 1\") = \"1\" ]]\n\
    \    [[ $(candidate \"1\") = \"1\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660004374
- exit_code: 1
  program: "#!/bin/bash\n# Write a function count_nums which takes an array of integers\
    \ and returns\n# the number of elements which has a sum of digits > 0.\n# If a\
    \ number is negative, then its first signed digit will be negative:\n# e.g. -123\
    \ has signed digits -1, 2, and 3.\n#\n# $1 is a space-separated list\ncount_nums()\
    \ {\n    local -a nums=($1)\n    local num\n    local sum\n    local count=0\n\
    \    for num in \"${nums[@]}\"; do\n        sum=0\n        while [ $num -ne 0\
    \ ]; do\n            sum=$((sum + num % 10))\n            num=$((num / 10))\n\
    \        done\n        if [ $sum -gt 0 ]; then\n            count=$((count + 1))\n\
    \        fi\n    done\n    echo $count\n}\n\ncandidate() {\n    count_nums \"\
    $@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"\") = \"0\" ]]\n    [[ $(candidate\
    \ \"-1 -2 0\") = \"0\" ]]\n    [[ $(candidate \"1 1 2 -2 3 4 5\") = \"6\" ]]\n\
    \    [[ $(candidate \"1 6 9 -6 0 1 5\") = \"5\" ]]\n    [[ $(candidate \"1 100\
    \ 98 -7 1 -1\") = \"4\" ]]\n    [[ $(candidate \"12 23 34 -45 -56 0\") = \"5\"\
    \ ]]\n    [[ $(candidate \"0 1\") = \"1\" ]]\n    [[ $(candidate \"1\") = \"1\"\
    \ ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660004373
- exit_code: 1
  program: "#!/bin/bash\n# Write a function count_nums which takes an array of integers\
    \ and returns\n# the number of elements which has a sum of digits > 0.\n# If a\
    \ number is negative, then its first signed digit will be negative:\n# e.g. -123\
    \ has signed digits -1, 2, and 3.\n#\n# $1 is a space-separated list\ncount_nums()\
    \ {\n    local -a arr=(\"$@\")\n    local -i sum=0\n    local -i count=0\n   \
    \ local -i i=0\n    local -i len=${#arr[@]}\n    local -i num=0\n    local -i\
    \ digit=0\n\n    for ((i=0; i<len; i++)); do\n        num=${arr[i]}\n        if\
    \ [[ $num -lt 0 ]]; then\n            num=$((-num))\n        fi\n        while\
    \ [[ $num -gt 0 ]]; do\n            digit=$((num % 10))\n            sum=$((sum\
    \ + digit))\n            num=$((num / 10))\n        done\n        if [[ $sum -gt\
    \ 0 ]]; then\n            count=$((count + 1))\n        fi\n        sum=0\n  \
    \  done\n    echo $count\n}\n\ncandidate() {\n    count_nums \"$@\"\n}\n\nset\
    \ -e\nrun_test() {\n    [[ $(candidate \"\") = \"0\" ]]\n    [[ $(candidate \"\
    -1 -2 0\") = \"0\" ]]\n    [[ $(candidate \"1 1 2 -2 3 4 5\") = \"6\" ]]\n   \
    \ [[ $(candidate \"1 6 9 -6 0 1 5\") = \"5\" ]]\n    [[ $(candidate \"1 100 98\
    \ -7 1 -1\") = \"4\" ]]\n    [[ $(candidate \"12 23 34 -45 -56 0\") = \"5\" ]]\n\
    \    [[ $(candidate \"0 1\") = \"1\" ]]\n    [[ $(candidate \"1\") = \"1\" ]]\n\
    }\n\nrun_test"
  status: SyntaxError
  stderr: '/tmp/tmpbqlxmcst.sh: line 18: -1 -2 0: syntax error in expression (error
    token is "0")

    '
  stdout: ''
  timestamp: 1660004374
- exit_code: 1
  program: "#!/bin/bash\n# Write a function count_nums which takes an array of integers\
    \ and returns\n# the number of elements which has a sum of digits > 0.\n# If a\
    \ number is negative, then its first signed digit will be negative:\n# e.g. -123\
    \ has signed digits -1, 2, and 3.\n#\n# $1 is a space-separated list\ncount_nums()\
    \ {\n    local -a arr=($1)\n    local count=0\n    for i in \"${arr[@]}\"; do\n\
    \        local sum=0\n        local n=${i#-}\n        while ((n > 0)); do\n  \
    \          ((sum += n % 10))\n            ((n /= 10))\n        done\n        ((sum\
    \ > 0)) && ((count++))\n    done\n    echo $count\n}\n\ncandidate() {\n    count_nums\
    \ \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"\") = \"0\" ]]\n   \
    \ [[ $(candidate \"-1 -2 0\") = \"0\" ]]\n    [[ $(candidate \"1 1 2 -2 3 4 5\"\
    ) = \"6\" ]]\n    [[ $(candidate \"1 6 9 -6 0 1 5\") = \"5\" ]]\n    [[ $(candidate\
    \ \"1 100 98 -7 1 -1\") = \"4\" ]]\n    [[ $(candidate \"12 23 34 -45 -56 0\"\
    ) = \"5\" ]]\n    [[ $(candidate \"0 1\") = \"1\" ]]\n    [[ $(candidate \"1\"\
    ) = \"1\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660004374
- exit_code: 1
  program: "#!/bin/bash\n# Write a function count_nums which takes an array of integers\
    \ and returns\n# the number of elements which has a sum of digits > 0.\n# If a\
    \ number is negative, then its first signed digit will be negative:\n# e.g. -123\
    \ has signed digits -1, 2, and 3.\n#\n# $1 is a space-separated list\ncount_nums()\
    \ {\n    local -a arr\n    local -i i sum\n    arr=($1)\n    for ((i=0; i<${#arr[@]};\
    \ i++)); do\n        sum=0\n        while ((arr[i] != 0)); do\n            ((sum\
    \ += arr[i] % 10))\n            ((arr[i] /= 10))\n        done\n        ((sum\
    \ > 0)) && ((count++))\n    done\n    echo $count\n}\n\ncandidate() {\n    count_nums\
    \ \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"\") = \"0\" ]]\n   \
    \ [[ $(candidate \"-1 -2 0\") = \"0\" ]]\n    [[ $(candidate \"1 1 2 -2 3 4 5\"\
    ) = \"6\" ]]\n    [[ $(candidate \"1 6 9 -6 0 1 5\") = \"5\" ]]\n    [[ $(candidate\
    \ \"1 100 98 -7 1 -1\") = \"4\" ]]\n    [[ $(candidate \"12 23 34 -45 -56 0\"\
    ) = \"5\" ]]\n    [[ $(candidate \"0 1\") = \"1\" ]]\n    [[ $(candidate \"1\"\
    ) = \"1\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660004373
- exit_code: 1
  program: "#!/bin/bash\n# Write a function count_nums which takes an array of integers\
    \ and returns\n# the number of elements which has a sum of digits > 0.\n# If a\
    \ number is negative, then its first signed digit will be negative:\n# e.g. -123\
    \ has signed digits -1, 2, and 3.\n#\n# $1 is a space-separated list\ncount_nums()\
    \ {\n    local -a arr=($1)\n    local count=0\n    for i in \"${arr[@]}\"; do\n\
    \        local sum=0\n        local num=${i#-}\n        while (( num > 0 )); do\n\
    \            (( sum += num % 10 ))\n            (( num /= 10 ))\n        done\n\
    \        (( sum > 0 )) && (( count++ ))\n    done\n    echo $count\n}\n\ncandidate()\
    \ {\n    count_nums \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"\"\
    ) = \"0\" ]]\n    [[ $(candidate \"-1 -2 0\") = \"0\" ]]\n    [[ $(candidate \"\
    1 1 2 -2 3 4 5\") = \"6\" ]]\n    [[ $(candidate \"1 6 9 -6 0 1 5\") = \"5\" ]]\n\
    \    [[ $(candidate \"1 100 98 -7 1 -1\") = \"4\" ]]\n    [[ $(candidate \"12\
    \ 23 34 -45 -56 0\") = \"5\" ]]\n    [[ $(candidate \"0 1\") = \"1\" ]]\n    [[\
    \ $(candidate \"1\") = \"1\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660004373
- exit_code: 1
  program: "#!/bin/bash\n# Write a function count_nums which takes an array of integers\
    \ and returns\n# the number of elements which has a sum of digits > 0.\n# If a\
    \ number is negative, then its first signed digit will be negative:\n# e.g. -123\
    \ has signed digits -1, 2, and 3.\n#\n# $1 is a space-separated list\ncount_nums()\
    \ {\n    local -a arr=(\"$@\")\n    local count=0\n    for i in \"${arr[@]}\"\
    ; do\n        local sum=0\n        local num=${i#-}\n        while [[ $num -gt\
    \ 0 ]]; do\n            sum=$((sum + num % 10))\n            num=$((num / 10))\n\
    \        done\n        if [[ $i -lt 0 ]]; then\n            sum=$((-sum))\n  \
    \      fi\n        if [[ $sum -gt 0 ]]; then\n            count=$((count + 1))\n\
    \        fi\n    done\n    echo $count\n}\n\ncandidate() {\n    count_nums \"\
    $@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"\") = \"0\" ]]\n    [[ $(candidate\
    \ \"-1 -2 0\") = \"0\" ]]\n    [[ $(candidate \"1 1 2 -2 3 4 5\") = \"6\" ]]\n\
    \    [[ $(candidate \"1 6 9 -6 0 1 5\") = \"5\" ]]\n    [[ $(candidate \"1 100\
    \ 98 -7 1 -1\") = \"4\" ]]\n    [[ $(candidate \"12 23 34 -45 -56 0\") = \"5\"\
    \ ]]\n    [[ $(candidate \"0 1\") = \"1\" ]]\n    [[ $(candidate \"1\") = \"1\"\
    \ ]]\n}\n\nrun_test"
  status: SyntaxError
  stderr: '/tmp/tmp_r_e_rh4.sh: line 14: [[: 1 -2 0: syntax error in expression (error
    token is "0")

    /tmp/tmp_r_e_rh4.sh: line 18: [[: -1 -2 0: syntax error in expression (error token
    is "0")

    /tmp/tmp_r_e_rh4.sh: line 14: [[: 1 1 2 -2 3 4 5: syntax error in expression (error
    token is "1 2 -2 3 4 5")

    /tmp/tmp_r_e_rh4.sh: line 18: [[: 1 1 2 -2 3 4 5: syntax error in expression (error
    token is "1 2 -2 3 4 5")

    '
  stdout: ''
  timestamp: 1660004374
- exit_code: 1
  program: "#!/bin/bash\n# Write a function count_nums which takes an array of integers\
    \ and returns\n# the number of elements which has a sum of digits > 0.\n# If a\
    \ number is negative, then its first signed digit will be negative:\n# e.g. -123\
    \ has signed digits -1, 2, and 3.\n#\n# $1 is a space-separated list\ncount_nums()\
    \ {\n    local -a arr=(\"$@\")\n    local count=0\n    for i in \"${arr[@]}\"\
    ; do\n        local sum=0\n        for (( j=0; j<${#i}; j++ )); do\n         \
    \   (( sum += ${i:$j:1} ))\n        done\n        (( sum > 0 )) && (( count++\
    \ ))\n    done\n    echo $count\n}\n\ncandidate() {\n    count_nums \"$@\"\n}\n\
    \nset -e\nrun_test() {\n    [[ $(candidate \"\") = \"0\" ]]\n    [[ $(candidate\
    \ \"-1 -2 0\") = \"0\" ]]\n    [[ $(candidate \"1 1 2 -2 3 4 5\") = \"6\" ]]\n\
    \    [[ $(candidate \"1 6 9 -6 0 1 5\") = \"5\" ]]\n    [[ $(candidate \"1 100\
    \ 98 -7 1 -1\") = \"4\" ]]\n    [[ $(candidate \"12 23 34 -45 -56 0\") = \"5\"\
    \ ]]\n    [[ $(candidate \"0 1\") = \"1\" ]]\n    [[ $(candidate \"1\") = \"1\"\
    \ ]]\n}\n\nrun_test"
  status: SyntaxError
  stderr: '/tmp/tmp8sfrzd86.sh: line 14: ((: sum += - : syntax error: operand expected
    (error token is "- ")

    /tmp/tmp8sfrzd86.sh: line 14: ((: sum +=   : syntax error: operand expected (error
    token is "+=   ")

    /tmp/tmp8sfrzd86.sh: line 14: ((: sum += - : syntax error: operand expected (error
    token is "- ")

    /tmp/tmp8sfrzd86.sh: line 14: ((: sum +=   : syntax error: operand expected (error
    token is "+=   ")

    '
  stdout: ''
  timestamp: 1660004373
- exit_code: 1
  program: "#!/bin/bash\n# Write a function count_nums which takes an array of integers\
    \ and returns\n# the number of elements which has a sum of digits > 0.\n# If a\
    \ number is negative, then its first signed digit will be negative:\n# e.g. -123\
    \ has signed digits -1, 2, and 3.\n#\n# $1 is a space-separated list\ncount_nums()\
    \ {\n    local -a arr=(\"$@\")\n    local count=0\n    for i in \"${arr[@]}\"\
    ; do\n        local sum=0\n        local num=$i\n        if [[ $i -lt 0 ]]; then\n\
    \            num=$((-i))\n        fi\n        while [[ $num -gt 0 ]]; do\n   \
    \         sum=$((sum + num % 10))\n            num=$((num / 10))\n        done\n\
    \        if [[ $sum -gt 0 ]]; then\n            count=$((count + 1))\n       \
    \ fi\n    done\n    echo $count\n}\n\ncandidate() {\n    count_nums \"$@\"\n}\n\
    \nset -e\nrun_test() {\n    [[ $(candidate \"\") = \"0\" ]]\n    [[ $(candidate\
    \ \"-1 -2 0\") = \"0\" ]]\n    [[ $(candidate \"1 1 2 -2 3 4 5\") = \"6\" ]]\n\
    \    [[ $(candidate \"1 6 9 -6 0 1 5\") = \"5\" ]]\n    [[ $(candidate \"1 100\
    \ 98 -7 1 -1\") = \"4\" ]]\n    [[ $(candidate \"12 23 34 -45 -56 0\") = \"5\"\
    \ ]]\n    [[ $(candidate \"0 1\") = \"1\" ]]\n    [[ $(candidate \"1\") = \"1\"\
    \ ]]\n}\n\nrun_test"
  status: SyntaxError
  stderr: '/tmp/tmp52bw1gbb.sh: line 14: [[: -1 -2 0: syntax error in expression (error
    token is "0")

    /tmp/tmp52bw1gbb.sh: line 17: [[: -1 -2 0: syntax error in expression (error token
    is "0")

    /tmp/tmp52bw1gbb.sh: line 14: [[: 1 1 2 -2 3 4 5: syntax error in expression (error
    token is "1 2 -2 3 4 5")

    /tmp/tmp52bw1gbb.sh: line 17: [[: 1 1 2 -2 3 4 5: syntax error in expression (error
    token is "1 2 -2 3 4 5")

    '
  stdout: ''
  timestamp: 1660004373
- exit_code: 1
  program: "#!/bin/bash\n# Write a function count_nums which takes an array of integers\
    \ and returns\n# the number of elements which has a sum of digits > 0.\n# If a\
    \ number is negative, then its first signed digit will be negative:\n# e.g. -123\
    \ has signed digits -1, 2, and 3.\n#\n# $1 is a space-separated list\ncount_nums()\
    \ {\n    local -a array=($1)\n    local count=0\n    for i in \"${array[@]}\"\
    ; do\n        local sum=0\n        if [[ $i -lt 0 ]]; then\n            i=$((i\
    \ * -1))\n        fi\n        while [[ $i -gt 0 ]]; do\n            sum=$((sum\
    \ + i % 10))\n            i=$((i / 10))\n        done\n        if [[ $sum -gt\
    \ 0 ]]; then\n            count=$((count + 1))\n        fi\n    done\n    echo\
    \ $count\n}\n\ncandidate() {\n    count_nums \"$@\"\n}\n\nset -e\nrun_test() {\n\
    \    [[ $(candidate \"\") = \"0\" ]]\n    [[ $(candidate \"-1 -2 0\") = \"0\"\
    \ ]]\n    [[ $(candidate \"1 1 2 -2 3 4 5\") = \"6\" ]]\n    [[ $(candidate \"\
    1 6 9 -6 0 1 5\") = \"5\" ]]\n    [[ $(candidate \"1 100 98 -7 1 -1\") = \"4\"\
    \ ]]\n    [[ $(candidate \"12 23 34 -45 -56 0\") = \"5\" ]]\n    [[ $(candidate\
    \ \"0 1\") = \"1\" ]]\n    [[ $(candidate \"1\") = \"1\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660004374
- exit_code: 1
  program: "#!/bin/bash\n# Write a function count_nums which takes an array of integers\
    \ and returns\n# the number of elements which has a sum of digits > 0.\n# If a\
    \ number is negative, then its first signed digit will be negative:\n# e.g. -123\
    \ has signed digits -1, 2, and 3.\n#\n# $1 is a space-separated list\ncount_nums()\
    \ {\n    local -a nums=($1)\n    local count=0\n    for num in \"${nums[@]}\"\
    ; do\n        local sum=0\n        local num_abs=${num#-}\n        while [[ $num_abs\
    \ -gt 0 ]]; do\n            sum=$((sum + num_abs % 10))\n            num_abs=$((num_abs\
    \ / 10))\n        done\n        if [[ $sum -gt 0 ]]; then\n            count=$((count\
    \ + 1))\n        fi\n    done\n    echo $count\n}\n\ncandidate() {\n    count_nums\
    \ \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"\") = \"0\" ]]\n   \
    \ [[ $(candidate \"-1 -2 0\") = \"0\" ]]\n    [[ $(candidate \"1 1 2 -2 3 4 5\"\
    ) = \"6\" ]]\n    [[ $(candidate \"1 6 9 -6 0 1 5\") = \"5\" ]]\n    [[ $(candidate\
    \ \"1 100 98 -7 1 -1\") = \"4\" ]]\n    [[ $(candidate \"12 23 34 -45 -56 0\"\
    ) = \"5\" ]]\n    [[ $(candidate \"0 1\") = \"1\" ]]\n    [[ $(candidate \"1\"\
    ) = \"1\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660004374
- exit_code: -1
  program: "#!/bin/bash\n# Write a function count_nums which takes an array of integers\
    \ and returns\n# the number of elements which has a sum of digits > 0.\n# If a\
    \ number is negative, then its first signed digit will be negative:\n# e.g. -123\
    \ has signed digits -1, 2, and 3.\n#\n# $1 is a space-separated list\ncount_nums()\
    \ {\n    local -i sum=0\n    local -i num\n    for num in $1; do\n        if ((\
    \ num < 0 )); then\n            num=-num\n        fi\n        while (( num > 0\
    \ )); do\n            sum+=num%10\n            num/=10\n        done\n    done\n\
    \    echo $sum\n}\n\ncandidate() {\n    count_nums \"$@\"\n}\n\nset -e\nrun_test()\
    \ {\n    [[ $(candidate \"\") = \"0\" ]]\n    [[ $(candidate \"-1 -2 0\") = \"\
    0\" ]]\n    [[ $(candidate \"1 1 2 -2 3 4 5\") = \"6\" ]]\n    [[ $(candidate\
    \ \"1 6 9 -6 0 1 5\") = \"5\" ]]\n    [[ $(candidate \"1 100 98 -7 1 -1\") = \"\
    4\" ]]\n    [[ $(candidate \"12 23 34 -45 -56 0\") = \"5\" ]]\n    [[ $(candidate\
    \ \"0 1\") = \"1\" ]]\n    [[ $(candidate \"1\") = \"1\" ]]\n}\n\nrun_test"
  status: Timeout
  stderr: 'b''/tmp/tmpn5isgadp.sh: line 17: num/=10: No such file or directory\n/tmp/tmpn5isgadp.sh:
    line 17: num/=10: No such file or directory\n/tmp/tmpn5isgadp.sh: line 17: num/=10:
    No such file or directory\n/tmp/tmpn5isgadp.sh: line 17: num/=10: No such file
    or directory\n/tmp/tmpn5isgadp.sh: line 17: num/=10: No such file or directory\n/tmp/tmpn5isgadp.sh:
    line 17: num/=10: No such file or directory\n/tmp/tmpn5isgadp.sh: line 17: num/=10:
    No such file or directory\n/tmp/tmpn5isgadp.sh: line 17: num/=10: No such file
    or directory\n/tmp/tmpn5isgadp.sh: line 17: num/=10: No such file or directory\n/tmp/tmpn5isgadp.sh:
    line 17: num/=10: No such file or directory\n/tmp/tmpn5isgadp.sh: line 17: num/=10:
    No such file or directory\n/tmp/tmpn5isgadp.sh: line 17: num/=10: No such file
    or directory\n/tmp/tmpn5isgadp.sh: line 17: num/=10: No such file or directory\n/tmp/tmpn5isgadp.sh:
    line 17: num/=10: No such file or directory\n/tmp/tmpn5isgadp.sh: line 17: num/=10:
    No such file or directory\n/tmp/tmpn5isgadp.sh: line 17: num/=10: No such file
    or directory\n/tmp/tmpn5isgadp.sh: line 17: num/=10: No such file or directory\n/tmp/tmpn5isgadp.sh:
    line 17: num/=10: No such file or directory\n/tmp/tmpn5isgadp.sh: line 17: num/=10:
    No such file or directory\n/tmp/tmpn5isgadp.sh: line 17: num/=10: No such file
    or directory\n/tmp/tmpn5isgadp.sh: line 17: num/=10: No such file or directory\n/tmp/tmpn5isgadp.sh:
    line 17: num/=10: No such file or directory\n/tmp/tmpn5isgadp.sh: line 17: num/=10:
    No such file or directory\n/tmp/tmpn5isgadp.sh: line 17: num/=10: No such file
    or directory\n/tmp/tmpn5isgadp.sh: line 17: num/=10: No such file or directory\n/tmp/tmpn5isgadp.sh:
    line 17: num/=10: No such file or directory\n/tmp/tmpn5isgadp.sh: line 17: num/=10:
    No such file or directory\n/tmp/tmpn5isgadp.sh: line 17: num/=10: No such file
    or directory\n/tmp/tmpn5isgadp.sh: line 17: num/=10: No such file or directory\n/tmp/tmpn5isgadp.sh:
    line 17: num/=10: No such file or directory\n/tmp/tmpn5isgadp.sh: line 17: num/=10:
    No such file or directory\n'
  stdout: None
  timestamp: 1660004378
- exit_code: 1
  program: "#!/bin/bash\n# Write a function count_nums which takes an array of integers\
    \ and returns\n# the number of elements which has a sum of digits > 0.\n# If a\
    \ number is negative, then its first signed digit will be negative:\n# e.g. -123\
    \ has signed digits -1, 2, and 3.\n#\n# $1 is a space-separated list\ncount_nums()\
    \ {\n    local -a arr=(\"$@\")\n    local -i sum=0\n    local -i count=0\n   \
    \ for i in \"${arr[@]}\"; do\n        if (( i < 0 )); then\n            (( i =\
    \ -i ))\n        fi\n        while (( i > 0 )); do\n            (( sum += i %\
    \ 10 ))\n            (( i /= 10 ))\n        done\n        if (( sum > 0 )); then\n\
    \            (( count++ ))\n        fi\n        (( sum = 0 ))\n    done\n    echo\
    \ \"$count\"\n}\n\ncandidate() {\n    count_nums \"$@\"\n}\n\nset -e\nrun_test()\
    \ {\n    [[ $(candidate \"\") = \"0\" ]]\n    [[ $(candidate \"-1 -2 0\") = \"\
    0\" ]]\n    [[ $(candidate \"1 1 2 -2 3 4 5\") = \"6\" ]]\n    [[ $(candidate\
    \ \"1 6 9 -6 0 1 5\") = \"5\" ]]\n    [[ $(candidate \"1 100 98 -7 1 -1\") = \"\
    4\" ]]\n    [[ $(candidate \"12 23 34 -45 -56 0\") = \"5\" ]]\n    [[ $(candidate\
    \ \"0 1\") = \"1\" ]]\n    [[ $(candidate \"1\") = \"1\" ]]\n}\n\nrun_test"
  status: SyntaxError
  stderr: '/tmp/tmpsqe05zl9.sh: line 13: ((: -1 -2 0: syntax error in expression (error
    token is "0")

    /tmp/tmpsqe05zl9.sh: line 16: ((: -1 -2 0: syntax error in expression (error token
    is "0")

    /tmp/tmpsqe05zl9.sh: line 13: ((: 1 1 2 -2 3 4 5: syntax error in expression (error
    token is "1 2 -2 3 4 5")

    /tmp/tmpsqe05zl9.sh: line 16: ((: 1 1 2 -2 3 4 5: syntax error in expression (error
    token is "1 2 -2 3 4 5")

    '
  stdout: ''
  timestamp: 1660004374
- exit_code: 1
  program: "#!/bin/bash\n# Write a function count_nums which takes an array of integers\
    \ and returns\n# the number of elements which has a sum of digits > 0.\n# If a\
    \ number is negative, then its first signed digit will be negative:\n# e.g. -123\
    \ has signed digits -1, 2, and 3.\n#\n# $1 is a space-separated list\ncount_nums()\
    \ {\n    local -a arr=($1)\n    local count=0\n    for i in \"${arr[@]}\"; do\n\
    \        local sum=0\n        local num=$i\n        if (( num < 0 )); then\n \
    \           num=$(( -num ))\n        fi\n        while (( num > 0 )); do\n   \
    \         sum=$(( sum + num % 10 ))\n            num=$(( num / 10 ))\n       \
    \ done\n        if (( sum > 0 )); then\n            count=$(( count + 1 ))\n \
    \       fi\n    done\n    echo $count\n}\n\ncandidate() {\n    count_nums \"$@\"\
    \n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"\") = \"0\" ]]\n    [[ $(candidate\
    \ \"-1 -2 0\") = \"0\" ]]\n    [[ $(candidate \"1 1 2 -2 3 4 5\") = \"6\" ]]\n\
    \    [[ $(candidate \"1 6 9 -6 0 1 5\") = \"5\" ]]\n    [[ $(candidate \"1 100\
    \ 98 -7 1 -1\") = \"4\" ]]\n    [[ $(candidate \"12 23 34 -45 -56 0\") = \"5\"\
    \ ]]\n    [[ $(candidate \"0 1\") = \"1\" ]]\n    [[ $(candidate \"1\") = \"1\"\
    \ ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660004374
- exit_code: 1
  program: "#!/bin/bash\n# Write a function count_nums which takes an array of integers\
    \ and returns\n# the number of elements which has a sum of digits > 0.\n# If a\
    \ number is negative, then its first signed digit will be negative:\n# e.g. -123\
    \ has signed digits -1, 2, and 3.\n#\n# $1 is a space-separated list\ncount_nums()\
    \ {\n    local -a arr=($1)\n    local -i sum=0\n    local -i count=0\n    for\
    \ i in \"${arr[@]}\"; do\n        if (( i < 0 )); then\n            i=${i:1}\n\
    \        fi\n        while (( i > 0 )); do\n            sum+=$(( i % 10 ))\n \
    \           i=$(( i / 10 ))\n        done\n        if (( sum > 0 )); then\n  \
    \          count+=1\n        fi\n        sum=0\n    done\n    echo $count\n}\n\
    \ncandidate() {\n    count_nums \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate\
    \ \"\") = \"0\" ]]\n    [[ $(candidate \"-1 -2 0\") = \"0\" ]]\n    [[ $(candidate\
    \ \"1 1 2 -2 3 4 5\") = \"6\" ]]\n    [[ $(candidate \"1 6 9 -6 0 1 5\") = \"\
    5\" ]]\n    [[ $(candidate \"1 100 98 -7 1 -1\") = \"4\" ]]\n    [[ $(candidate\
    \ \"12 23 34 -45 -56 0\") = \"5\" ]]\n    [[ $(candidate \"0 1\") = \"1\" ]]\n\
    \    [[ $(candidate \"1\") = \"1\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660004374
- exit_code: -1
  program: "#!/bin/bash\n# Write a function count_nums which takes an array of integers\
    \ and returns\n# the number of elements which has a sum of digits > 0.\n# If a\
    \ number is negative, then its first signed digit will be negative:\n# e.g. -123\
    \ has signed digits -1, 2, and 3.\n#\n# $1 is a space-separated list\ncount_nums()\
    \ {\n    local -i sum=0\n    local -i num\n    for num in $1; do\n        if ((\
    \ num < 0 )); then\n            num=-num\n        fi\n        while (( num > 0\
    \ )); do\n            sum+=num%10\n            num/=10\n        done\n    done\n\
    \    echo $sum\n}\n\ncandidate() {\n    count_nums \"$@\"\n}\n\nset -e\nrun_test()\
    \ {\n    [[ $(candidate \"\") = \"0\" ]]\n    [[ $(candidate \"-1 -2 0\") = \"\
    0\" ]]\n    [[ $(candidate \"1 1 2 -2 3 4 5\") = \"6\" ]]\n    [[ $(candidate\
    \ \"1 6 9 -6 0 1 5\") = \"5\" ]]\n    [[ $(candidate \"1 100 98 -7 1 -1\") = \"\
    4\" ]]\n    [[ $(candidate \"12 23 34 -45 -56 0\") = \"5\" ]]\n    [[ $(candidate\
    \ \"0 1\") = \"1\" ]]\n    [[ $(candidate \"1\") = \"1\" ]]\n}\n\nrun_test"
  status: Timeout
  stderr: 'b''/tmp/tmpn5isgadp.sh: line 17: num/=10: No such file or directory\n/tmp/tmpn5isgadp.sh:
    line 17: num/=10: No such file or directory\n/tmp/tmpn5isgadp.sh: line 17: num/=10:
    No such file or directory\n/tmp/tmpn5isgadp.sh: line 17: num/=10: No such file
    or directory\n/tmp/tmpn5isgadp.sh: line 17: num/=10: No such file or directory\n/tmp/tmpn5isgadp.sh:
    line 17: num/=10: No such file or directory\n/tmp/tmpn5isgadp.sh: line 17: num/=10:
    No such file or directory\n/tmp/tmpn5isgadp.sh: line 17: num/=10: No such file
    or directory\n/tmp/tmpn5isgadp.sh: line 17: num/=10: No such file or directory\n/tmp/tmpn5isgadp.sh:
    line 17: num/=10: No such file or directory\n/tmp/tmpn5isgadp.sh: line 17: num/=10:
    No such file or directory\n/tmp/tmpn5isgadp.sh: line 17: num/=10: No such file
    or directory\n/tmp/tmpn5isgadp.sh: line 17: num/=10: No such file or directory\n/tmp/tmpn5isgadp.sh:
    line 17: num/=10: No such file or directory\n/tmp/tmpn5isgadp.sh: line 17: num/=10:
    No such file or directory\n/tmp/tmpn5isgadp.sh: line 17: num/=10: No such file
    or directory\n/tmp/tmpn5isgadp.sh: line 17: num/=10: No such file or directory\n/tmp/tmpn5isgadp.sh:
    line 17: num/=10: No such file or directory\n/tmp/tmpn5isgadp.sh: line 17: num/=10:
    No such file or directory\n/tmp/tmpn5isgadp.sh: line 17: num/=10: No such file
    or directory\n/tmp/tmpn5isgadp.sh: line 17: num/=10: No such file or directory\n/tmp/tmpn5isgadp.sh:
    line 17: num/=10: No such file or directory\n/tmp/tmpn5isgadp.sh: line 17: num/=10:
    No such file or directory\n/tmp/tmpn5isgadp.sh: line 17: num/=10: No such file
    or directory\n/tmp/tmpn5isgadp.sh: line 17: num/=10: No such file or directory\n/tmp/tmpn5isgadp.sh:
    line 17: num/=10: No such file or directory\n/tmp/tmpn5isgadp.sh: line 17: num/=10:
    No such file or directory\n/tmp/tmpn5isgadp.sh: line 17: num/=10: No such file
    or directory\n/tmp/tmpn5isgadp.sh: line 17: num/=10: No such file or directory\n/tmp/tmpn5isgadp.sh:
    line 17: num/=10: No such file or directory\n/tmp/tmpn5isgadp.sh: line 17: num/=10:
    No such file or directory\n'
  stdout: None
  timestamp: 1660004378
- exit_code: 1
  program: "#!/bin/bash\n# Write a function count_nums which takes an array of integers\
    \ and returns\n# the number of elements which has a sum of digits > 0.\n# If a\
    \ number is negative, then its first signed digit will be negative:\n# e.g. -123\
    \ has signed digits -1, 2, and 3.\n#\n# $1 is a space-separated list\ncount_nums()\
    \ {\n    local -a arr=(\"$@\")\n    local -i sum=0\n    local -i count=0\n   \
    \ for i in \"${arr[@]}\"; do\n        if [[ $i -lt 0 ]]; then\n            i=$((\
    \ -i ))\n        fi\n        while [[ $i -gt 0 ]]; do\n            sum=$(( sum\
    \ + i % 10 ))\n            i=$(( i / 10 ))\n        done\n        if [[ $sum -gt\
    \ 0 ]]; then\n            count=$(( count + 1 ))\n        fi\n        sum=0\n\
    \    done\n    echo $count\n}\n\ncandidate() {\n    count_nums \"$@\"\n}\n\nset\
    \ -e\nrun_test() {\n    [[ $(candidate \"\") = \"0\" ]]\n    [[ $(candidate \"\
    -1 -2 0\") = \"0\" ]]\n    [[ $(candidate \"1 1 2 -2 3 4 5\") = \"6\" ]]\n   \
    \ [[ $(candidate \"1 6 9 -6 0 1 5\") = \"5\" ]]\n    [[ $(candidate \"1 100 98\
    \ -7 1 -1\") = \"4\" ]]\n    [[ $(candidate \"12 23 34 -45 -56 0\") = \"5\" ]]\n\
    \    [[ $(candidate \"0 1\") = \"1\" ]]\n    [[ $(candidate \"1\") = \"1\" ]]\n\
    }\n\nrun_test"
  status: SyntaxError
  stderr: '/tmp/tmpb1yayuk9.sh: line 13: [[: -1 -2 0: syntax error in expression (error
    token is "0")

    /tmp/tmpb1yayuk9.sh: line 16: [[: -1 -2 0: syntax error in expression (error token
    is "0")

    /tmp/tmpb1yayuk9.sh: line 13: [[: 1 1 2 -2 3 4 5: syntax error in expression (error
    token is "1 2 -2 3 4 5")

    /tmp/tmpb1yayuk9.sh: line 16: [[: 1 1 2 -2 3 4 5: syntax error in expression (error
    token is "1 2 -2 3 4 5")

    '
  stdout: ''
  timestamp: 1660004374
- exit_code: 1
  program: "#!/bin/bash\n# Write a function count_nums which takes an array of integers\
    \ and returns\n# the number of elements which has a sum of digits > 0.\n# If a\
    \ number is negative, then its first signed digit will be negative:\n# e.g. -123\
    \ has signed digits -1, 2, and 3.\n#\n# $1 is a space-separated list\ncount_nums()\
    \ {\n    local sum=0\n    local count=0\n    for i in $1; do\n        if [ $i\
    \ -lt 0 ]; then\n            i=$((-i))\n        fi\n        while [ $i -gt 0 ];\
    \ do\n            sum=$((sum + i % 10))\n            i=$((i / 10))\n        done\n\
    \        if [ $sum -gt 0 ]; then\n            count=$((count + 1))\n        fi\n\
    \        sum=0\n    done\n    echo $count\n}\n\ncandidate() {\n    count_nums\
    \ \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"\") = \"0\" ]]\n   \
    \ [[ $(candidate \"-1 -2 0\") = \"0\" ]]\n    [[ $(candidate \"1 1 2 -2 3 4 5\"\
    ) = \"6\" ]]\n    [[ $(candidate \"1 6 9 -6 0 1 5\") = \"5\" ]]\n    [[ $(candidate\
    \ \"1 100 98 -7 1 -1\") = \"4\" ]]\n    [[ $(candidate \"12 23 34 -45 -56 0\"\
    ) = \"5\" ]]\n    [[ $(candidate \"0 1\") = \"1\" ]]\n    [[ $(candidate \"1\"\
    ) = \"1\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660004374
- exit_code: 1
  program: "#!/bin/bash\n# Write a function count_nums which takes an array of integers\
    \ and returns\n# the number of elements which has a sum of digits > 0.\n# If a\
    \ number is negative, then its first signed digit will be negative:\n# e.g. -123\
    \ has signed digits -1, 2, and 3.\n#\n# $1 is a space-separated list\ncount_nums()\
    \ {\n    local -a arr=($1)\n    local -i sum=0\n    local -i count=0\n    local\
    \ -i i=0\n    local -i j=0\n    local -i len=${#arr[@]}\n    local -i digit=0\n\
    \    local -i num=0\n    local -i sign=0\n\n    for ((i=0; i<len; i++)); do\n\
    \        num=${arr[i]}\n        sign=$((num < 0 ? -1 : 1))\n        num=$((num\
    \ * sign))\n        sum=0\n        while ((num > 0)); do\n            digit=$((num\
    \ % 10))\n            sum=$((sum + digit))\n            num=$((num / 10))\n  \
    \      done\n        if ((sum > 0)); then\n            count=$((count + 1))\n\
    \        fi\n    done\n    echo $count\n}\n\ncandidate() {\n    count_nums \"\
    $@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"\") = \"0\" ]]\n    [[ $(candidate\
    \ \"-1 -2 0\") = \"0\" ]]\n    [[ $(candidate \"1 1 2 -2 3 4 5\") = \"6\" ]]\n\
    \    [[ $(candidate \"1 6 9 -6 0 1 5\") = \"5\" ]]\n    [[ $(candidate \"1 100\
    \ 98 -7 1 -1\") = \"4\" ]]\n    [[ $(candidate \"12 23 34 -45 -56 0\") = \"5\"\
    \ ]]\n    [[ $(candidate \"0 1\") = \"1\" ]]\n    [[ $(candidate \"1\") = \"1\"\
    \ ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660004374
- exit_code: 1
  program: "#!/bin/bash\n# Write a function count_nums which takes an array of integers\
    \ and returns\n# the number of elements which has a sum of digits > 0.\n# If a\
    \ number is negative, then its first signed digit will be negative:\n# e.g. -123\
    \ has signed digits -1, 2, and 3.\n#\n# $1 is a space-separated list\ncount_nums()\
    \ {\n    local -a nums=($1)\n    local count=0\n    for num in \"${nums[@]}\"\
    ; do\n        local sum=0\n        if [[ $num -lt 0 ]]; then\n            num=$((-num))\n\
    \        fi\n        while [[ $num -gt 0 ]]; do\n            sum=$((sum + num\
    \ % 10))\n            num=$((num / 10))\n        done\n        if [[ $sum -gt\
    \ 0 ]]; then\n            count=$((count + 1))\n        fi\n    done\n    echo\
    \ $count\n}\n\ncandidate() {\n    count_nums \"$@\"\n}\n\nset -e\nrun_test() {\n\
    \    [[ $(candidate \"\") = \"0\" ]]\n    [[ $(candidate \"-1 -2 0\") = \"0\"\
    \ ]]\n    [[ $(candidate \"1 1 2 -2 3 4 5\") = \"6\" ]]\n    [[ $(candidate \"\
    1 6 9 -6 0 1 5\") = \"5\" ]]\n    [[ $(candidate \"1 100 98 -7 1 -1\") = \"4\"\
    \ ]]\n    [[ $(candidate \"12 23 34 -45 -56 0\") = \"5\" ]]\n    [[ $(candidate\
    \ \"0 1\") = \"1\" ]]\n    [[ $(candidate \"1\") = \"1\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660004374
- exit_code: 1
  program: "#!/bin/bash\n# Write a function count_nums which takes an array of integers\
    \ and returns\n# the number of elements which has a sum of digits > 0.\n# If a\
    \ number is negative, then its first signed digit will be negative:\n# e.g. -123\
    \ has signed digits -1, 2, and 3.\n#\n# $1 is a space-separated list\ncount_nums()\
    \ {\n    local -a array=($1)\n    local -i count=0\n    local -i sum=0\n    local\
    \ -i i=0\n    local -i j=0\n    local -i len=${#array[@]}\n    local -i num=0\n\
    \    local -i sign=0\n    local -i digit=0\n\n    for ((i=0; i<len; i++)); do\n\
    \        num=${array[i]}\n        sign=$((num < 0 ? -1 : 1))\n        num=$((num\
    \ * sign))\n        sum=0\n        while ((num > 0)); do\n            digit=$((num\
    \ % 10))\n            sum=$((sum + digit))\n            num=$((num / 10))\n  \
    \      done\n        sum=$((sum * sign))\n        if ((sum > 0)); then\n     \
    \       count=$((count + 1))\n        fi\n    done\n    echo $count\n}\n\ncandidate()\
    \ {\n    count_nums \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"\"\
    ) = \"0\" ]]\n    [[ $(candidate \"-1 -2 0\") = \"0\" ]]\n    [[ $(candidate \"\
    1 1 2 -2 3 4 5\") = \"6\" ]]\n    [[ $(candidate \"1 6 9 -6 0 1 5\") = \"5\" ]]\n\
    \    [[ $(candidate \"1 100 98 -7 1 -1\") = \"4\" ]]\n    [[ $(candidate \"12\
    \ 23 34 -45 -56 0\") = \"5\" ]]\n    [[ $(candidate \"0 1\") = \"1\" ]]\n    [[\
    \ $(candidate \"1\") = \"1\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660004374
- exit_code: 1
  program: "#!/bin/bash\n# Write a function count_nums which takes an array of integers\
    \ and returns\n# the number of elements which has a sum of digits > 0.\n# If a\
    \ number is negative, then its first signed digit will be negative:\n# e.g. -123\
    \ has signed digits -1, 2, and 3.\n#\n# $1 is a space-separated list\ncount_nums()\
    \ {\n    local -a arr=(\"$@\")\n    local -i sum=0\n    local -i count=0\n   \
    \ local -i i=0\n    local -i j=0\n    local -i len=${#arr[@]}\n    local -i num=0\n\
    \    local -i digit=0\n    local -i sign=0\n\n    for ((i=0; i<len; i++)); do\n\
    \        num=${arr[i]}\n        sum=0\n        sign=1\n        if ((num < 0));\
    \ then\n            sign=-1\n        fi\n        while ((num != 0)); do\n    \
    \        digit=$((num % 10))\n            sum=$((sum + digit))\n            num=$((num\
    \ / 10))\n        done\n        if ((sign * sum > 0)); then\n            count=$((count\
    \ + 1))\n        fi\n    done\n    echo $count\n}\n\ncandidate() {\n    count_nums\
    \ \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"\") = \"0\" ]]\n   \
    \ [[ $(candidate \"-1 -2 0\") = \"0\" ]]\n    [[ $(candidate \"1 1 2 -2 3 4 5\"\
    ) = \"6\" ]]\n    [[ $(candidate \"1 6 9 -6 0 1 5\") = \"5\" ]]\n    [[ $(candidate\
    \ \"1 100 98 -7 1 -1\") = \"4\" ]]\n    [[ $(candidate \"12 23 34 -45 -56 0\"\
    ) = \"5\" ]]\n    [[ $(candidate \"0 1\") = \"1\" ]]\n    [[ $(candidate \"1\"\
    ) = \"1\" ]]\n}\n\nrun_test"
  status: SyntaxError
  stderr: '/tmp/tmp9vgwgwxe.sh: line 20: -1 -2 0: syntax error in expression (error
    token is "0")

    '
  stdout: ''
  timestamp: 1660004374
- exit_code: 1
  program: "#!/bin/bash\n# Write a function count_nums which takes an array of integers\
    \ and returns\n# the number of elements which has a sum of digits > 0.\n# If a\
    \ number is negative, then its first signed digit will be negative:\n# e.g. -123\
    \ has signed digits -1, 2, and 3.\n#\n# $1 is a space-separated list\ncount_nums()\
    \ {\n    local -a arr=(\"$@\")\n    local count=0\n    for i in \"${arr[@]}\"\
    ; do\n        local sum=0\n        local num=$i\n        if (( num < 0 )); then\n\
    \            num=$(( -num ))\n        fi\n        while (( num > 0 )); do\n  \
    \          sum=$(( sum + num % 10 ))\n            num=$(( num / 10 ))\n      \
    \  done\n        if (( sum > 0 )); then\n            count=$(( count + 1 ))\n\
    \        fi\n    done\n    echo $count\n}\n\ncandidate() {\n    count_nums \"\
    $@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"\") = \"0\" ]]\n    [[ $(candidate\
    \ \"-1 -2 0\") = \"0\" ]]\n    [[ $(candidate \"1 1 2 -2 3 4 5\") = \"6\" ]]\n\
    \    [[ $(candidate \"1 6 9 -6 0 1 5\") = \"5\" ]]\n    [[ $(candidate \"1 100\
    \ 98 -7 1 -1\") = \"4\" ]]\n    [[ $(candidate \"12 23 34 -45 -56 0\") = \"5\"\
    \ ]]\n    [[ $(candidate \"0 1\") = \"1\" ]]\n    [[ $(candidate \"1\") = \"1\"\
    \ ]]\n}\n\nrun_test"
  status: SyntaxError
  stderr: '/tmp/tmp7_0piepm.sh: line 14: ((: -1 -2 0: syntax error in expression (error
    token is "0")

    /tmp/tmp7_0piepm.sh: line 17: ((: -1 -2 0: syntax error in expression (error token
    is "0")

    /tmp/tmp7_0piepm.sh: line 14: ((: 1 1 2 -2 3 4 5: syntax error in expression (error
    token is "1 2 -2 3 4 5")

    /tmp/tmp7_0piepm.sh: line 17: ((: 1 1 2 -2 3 4 5: syntax error in expression (error
    token is "1 2 -2 3 4 5")

    '
  stdout: ''
  timestamp: 1660004374
- exit_code: 1
  program: "#!/bin/bash\n# Write a function count_nums which takes an array of integers\
    \ and returns\n# the number of elements which has a sum of digits > 0.\n# If a\
    \ number is negative, then its first signed digit will be negative:\n# e.g. -123\
    \ has signed digits -1, 2, and 3.\n#\n# $1 is a space-separated list\ncount_nums()\
    \ {\n    local -a arr=(\"$@\")\n    local -i count=0\n    for i in \"${arr[@]}\"\
    ; do\n        local -i sum=0\n        local -i n=${i#-}\n        while (( n >\
    \ 0 )); do\n            (( sum += n % 10 ))\n            (( n /= 10 ))\n     \
    \   done\n        (( sum > 0 )) && (( count++ ))\n    done\n    echo \"$count\"\
    \n}\n\ncandidate() {\n    count_nums \"$@\"\n}\n\nset -e\nrun_test() {\n    [[\
    \ $(candidate \"\") = \"0\" ]]\n    [[ $(candidate \"-1 -2 0\") = \"0\" ]]\n \
    \   [[ $(candidate \"1 1 2 -2 3 4 5\") = \"6\" ]]\n    [[ $(candidate \"1 6 9\
    \ -6 0 1 5\") = \"5\" ]]\n    [[ $(candidate \"1 100 98 -7 1 -1\") = \"4\" ]]\n\
    \    [[ $(candidate \"12 23 34 -45 -56 0\") = \"5\" ]]\n    [[ $(candidate \"\
    0 1\") = \"1\" ]]\n    [[ $(candidate \"1\") = \"1\" ]]\n}\n\nrun_test"
  status: SyntaxError
  stderr: '/tmp/tmpkqa7nxdu.sh: line 13: local: 1 -2 0: syntax error in expression
    (error token is "0")

    '
  stdout: ''
  timestamp: 1660004374
- exit_code: 1
  program: "#!/bin/bash\n# Write a function count_nums which takes an array of integers\
    \ and returns\n# the number of elements which has a sum of digits > 0.\n# If a\
    \ number is negative, then its first signed digit will be negative:\n# e.g. -123\
    \ has signed digits -1, 2, and 3.\n#\n# $1 is a space-separated list\ncount_nums()\
    \ {\n    local -a arr=($1)\n    local count=0\n    for i in \"${arr[@]}\"; do\n\
    \        local sum=0\n        if [[ $i -lt 0 ]]; then\n            i=$((-i))\n\
    \        fi\n        while [[ $i -gt 0 ]]; do\n            local digit=$((i %\
    \ 10))\n            sum=$((sum + digit))\n            i=$((i / 10))\n        done\n\
    \        if [[ $sum -gt 0 ]]; then\n            count=$((count + 1))\n       \
    \ fi\n    done\n    echo $count\n}\n\ncandidate() {\n    count_nums \"$@\"\n}\n\
    \nset -e\nrun_test() {\n    [[ $(candidate \"\") = \"0\" ]]\n    [[ $(candidate\
    \ \"-1 -2 0\") = \"0\" ]]\n    [[ $(candidate \"1 1 2 -2 3 4 5\") = \"6\" ]]\n\
    \    [[ $(candidate \"1 6 9 -6 0 1 5\") = \"5\" ]]\n    [[ $(candidate \"1 100\
    \ 98 -7 1 -1\") = \"4\" ]]\n    [[ $(candidate \"12 23 34 -45 -56 0\") = \"5\"\
    \ ]]\n    [[ $(candidate \"0 1\") = \"1\" ]]\n    [[ $(candidate \"1\") = \"1\"\
    \ ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660004374
- exit_code: 1
  program: "#!/bin/bash\n# Write a function count_nums which takes an array of integers\
    \ and returns\n# the number of elements which has a sum of digits > 0.\n# If a\
    \ number is negative, then its first signed digit will be negative:\n# e.g. -123\
    \ has signed digits -1, 2, and 3.\n#\n# $1 is a space-separated list\ncount_nums()\
    \ {\n    local -a array=($1)\n    local -i count=0\n    local -i i=0\n    local\
    \ -i sum=0\n    local -i num=0\n    local -i sign=0\n    local -i digit=0\n  \
    \  local -i len=${#array[@]}\n    for ((i=0; i<len; i++)); do\n        num=${array[i]}\n\
    \        sign=$((num < 0 ? -1 : 1))\n        num=$((num * sign))\n        sum=0\n\
    \        while ((num > 0)); do\n            digit=$((num % 10))\n            sum=$((sum\
    \ + digit))\n            num=$((num / 10))\n        done\n        if ((sum > 0));\
    \ then\n            count=$((count + 1))\n        fi\n    done\n    echo $count\n\
    }\n\ncandidate() {\n    count_nums \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate\
    \ \"\") = \"0\" ]]\n    [[ $(candidate \"-1 -2 0\") = \"0\" ]]\n    [[ $(candidate\
    \ \"1 1 2 -2 3 4 5\") = \"6\" ]]\n    [[ $(candidate \"1 6 9 -6 0 1 5\") = \"\
    5\" ]]\n    [[ $(candidate \"1 100 98 -7 1 -1\") = \"4\" ]]\n    [[ $(candidate\
    \ \"12 23 34 -45 -56 0\") = \"5\" ]]\n    [[ $(candidate \"0 1\") = \"1\" ]]\n\
    \    [[ $(candidate \"1\") = \"1\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660004374
- exit_code: 1
  program: "#!/bin/bash\n# Write a function count_nums which takes an array of integers\
    \ and returns\n# the number of elements which has a sum of digits > 0.\n# If a\
    \ number is negative, then its first signed digit will be negative:\n# e.g. -123\
    \ has signed digits -1, 2, and 3.\n#\n# $1 is a space-separated list\ncount_nums()\
    \ {\n    local -a array=(\"$@\")\n    local count=0\n    for i in \"${array[@]}\"\
    ; do\n        local sum=0\n        local num=${i#-}\n        while [[ $num -gt\
    \ 0 ]]; do\n            sum=$((sum + num % 10))\n            num=$((num / 10))\n\
    \        done\n        if [[ $sum -gt 0 ]]; then\n            count=$((count +\
    \ 1))\n        fi\n    done\n    echo $count\n}\n\ncandidate() {\n    count_nums\
    \ \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"\") = \"0\" ]]\n   \
    \ [[ $(candidate \"-1 -2 0\") = \"0\" ]]\n    [[ $(candidate \"1 1 2 -2 3 4 5\"\
    ) = \"6\" ]]\n    [[ $(candidate \"1 6 9 -6 0 1 5\") = \"5\" ]]\n    [[ $(candidate\
    \ \"1 100 98 -7 1 -1\") = \"4\" ]]\n    [[ $(candidate \"12 23 34 -45 -56 0\"\
    ) = \"5\" ]]\n    [[ $(candidate \"0 1\") = \"1\" ]]\n    [[ $(candidate \"1\"\
    ) = \"1\" ]]\n}\n\nrun_test"
  status: SyntaxError
  stderr: '/tmp/tmp36hn645_.sh: line 14: [[: 1 -2 0: syntax error in expression (error
    token is "0")

    /tmp/tmp36hn645_.sh: line 14: [[: 1 1 2 -2 3 4 5: syntax error in expression (error
    token is "1 2 -2 3 4 5")

    '
  stdout: ''
  timestamp: 1660004374
- exit_code: 1
  program: "#!/bin/bash\n# Write a function count_nums which takes an array of integers\
    \ and returns\n# the number of elements which has a sum of digits > 0.\n# If a\
    \ number is negative, then its first signed digit will be negative:\n# e.g. -123\
    \ has signed digits -1, 2, and 3.\n#\n# $1 is a space-separated list\ncount_nums()\
    \ {\n    local -a nums=($1)\n    local count=0\n    for num in \"${nums[@]}\"\
    ; do\n        local sum=0\n        local num_abs=${num#-}\n        while (( num_abs\
    \ > 0 )); do\n            (( sum += num_abs % 10 ))\n            (( num_abs /=\
    \ 10 ))\n        done\n        (( sum > 0 )) && (( count++ ))\n    done\n    echo\
    \ $count\n}\n\ncandidate() {\n    count_nums \"$@\"\n}\n\nset -e\nrun_test() {\n\
    \    [[ $(candidate \"\") = \"0\" ]]\n    [[ $(candidate \"-1 -2 0\") = \"0\"\
    \ ]]\n    [[ $(candidate \"1 1 2 -2 3 4 5\") = \"6\" ]]\n    [[ $(candidate \"\
    1 6 9 -6 0 1 5\") = \"5\" ]]\n    [[ $(candidate \"1 100 98 -7 1 -1\") = \"4\"\
    \ ]]\n    [[ $(candidate \"12 23 34 -45 -56 0\") = \"5\" ]]\n    [[ $(candidate\
    \ \"0 1\") = \"1\" ]]\n    [[ $(candidate \"1\") = \"1\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660004374
- exit_code: 1
  program: "#!/bin/bash\n# Write a function count_nums which takes an array of integers\
    \ and returns\n# the number of elements which has a sum of digits > 0.\n# If a\
    \ number is negative, then its first signed digit will be negative:\n# e.g. -123\
    \ has signed digits -1, 2, and 3.\n#\n# $1 is a space-separated list\ncount_nums()\
    \ {\n    local -i sum=0\n    local -i i=0\n    local -i count=0\n    local -i\
    \ num\n    local -i digit\n    local -i abs_num\n    local -i abs_digit\n    local\
    \ -i num_digits\n    local -i num_digits_abs\n    local -i num_digits_abs_sum\n\
    \    local -i num_digits_sum\n    local -i num_digits_sum_abs\n    local -i num_digits_sum_abs_sum\n\
    \    local -i num_digits_sum_sum\n    local -i num_digits_sum_sum_abs\n    local\
    \ -i num_digits_sum_sum_abs_sum\n    local -i num_digits_sum_sum_sum\n    local\
    \ -i num_digits_sum_sum_sum_abs\n    local -i num_digits_sum_sum_sum_abs_sum\n\
    \    local -i num_digits_sum_sum_sum_sum\n    local -i num_digits_sum_sum_sum_sum_abs\n\
    \    local -i num_digits_sum_sum_sum_sum_abs_sum\n    local -i num_digits_sum_sum_sum_sum_sum\n\
    \    local -i num_digits_sum_sum_sum_sum_sum_abs\n    local -i num_digits_sum_sum_sum_sum_sum_abs_sum\n\
    \    local -i num_digits_sum_sum_sum_sum_sum_sum\n    local -i num_digits_sum_sum_sum_sum_sum_sum_abs\n\
    \    local -i num_digits_sum_sum_sum_sum_sum_sum_abs_sum\n    local -i num_digits_sum_sum_sum_sum_sum_sum_sum\n\
    \    local -i num_digits_sum_sum_sum_sum_sum_sum_sum_abs\n    local -i num_digits_sum_sum_sum_sum_sum_sum_sum_abs_sum\n\
    \    local -i num_digits_sum_sum_sum_sum_sum_sum_sum_sum\n    local\n}\n\ncandidate()\
    \ {\n    count_nums \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"\"\
    ) = \"0\" ]]\n    [[ $(candidate \"-1 -2 0\") = \"0\" ]]\n    [[ $(candidate \"\
    1 1 2 -2 3 4 5\") = \"6\" ]]\n    [[ $(candidate \"1 6 9 -6 0 1 5\") = \"5\" ]]\n\
    \    [[ $(candidate \"1 100 98 -7 1 -1\") = \"4\" ]]\n    [[ $(candidate \"12\
    \ 23 34 -45 -56 0\") = \"5\" ]]\n    [[ $(candidate \"0 1\") = \"1\" ]]\n    [[\
    \ $(candidate \"1\") = \"1\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660004374
- exit_code: 1
  program: "#!/bin/bash\n# Write a function count_nums which takes an array of integers\
    \ and returns\n# the number of elements which has a sum of digits > 0.\n# If a\
    \ number is negative, then its first signed digit will be negative:\n# e.g. -123\
    \ has signed digits -1, 2, and 3.\n#\n# $1 is a space-separated list\ncount_nums()\
    \ {\n    local -a arr=($1)\n    local count=0\n    for i in \"${arr[@]}\"; do\n\
    \        local sum=0\n        local num=${i#-}\n        while [[ $num -gt 0 ]];\
    \ do\n            sum=$((sum + num % 10))\n            num=$((num / 10))\n   \
    \     done\n        if [[ $sum -gt 0 ]]; then\n            count=$((count + 1))\n\
    \        fi\n    done\n    echo $count\n}\n\ncandidate() {\n    count_nums \"\
    $@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"\") = \"0\" ]]\n    [[ $(candidate\
    \ \"-1 -2 0\") = \"0\" ]]\n    [[ $(candidate \"1 1 2 -2 3 4 5\") = \"6\" ]]\n\
    \    [[ $(candidate \"1 6 9 -6 0 1 5\") = \"5\" ]]\n    [[ $(candidate \"1 100\
    \ 98 -7 1 -1\") = \"4\" ]]\n    [[ $(candidate \"12 23 34 -45 -56 0\") = \"5\"\
    \ ]]\n    [[ $(candidate \"0 1\") = \"1\" ]]\n    [[ $(candidate \"1\") = \"1\"\
    \ ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660004373
- exit_code: 1
  program: "#!/bin/bash\n# Write a function count_nums which takes an array of integers\
    \ and returns\n# the number of elements which has a sum of digits > 0.\n# If a\
    \ number is negative, then its first signed digit will be negative:\n# e.g. -123\
    \ has signed digits -1, 2, and 3.\n#\n# $1 is a space-separated list\ncount_nums()\
    \ {\n  local -a arr=($1)\n  local count=0\n  for i in \"${arr[@]}\"; do\n    local\
    \ sum=0\n    for (( j=0; j<${#i}; j++ )); do\n      sum=$(( sum + ${i:$j:1} ))\n\
    \    done\n    if (( sum > 0 )); then\n      count=$(( count + 1 ))\n    fi\n\
    \  done\n  echo $count\n}\n\ncandidate() {\n    count_nums \"$@\"\n}\n\nset -e\n\
    run_test() {\n    [[ $(candidate \"\") = \"0\" ]]\n    [[ $(candidate \"-1 -2\
    \ 0\") = \"0\" ]]\n    [[ $(candidate \"1 1 2 -2 3 4 5\") = \"6\" ]]\n    [[ $(candidate\
    \ \"1 6 9 -6 0 1 5\") = \"5\" ]]\n    [[ $(candidate \"1 100 98 -7 1 -1\") = \"\
    4\" ]]\n    [[ $(candidate \"12 23 34 -45 -56 0\") = \"5\" ]]\n    [[ $(candidate\
    \ \"0 1\") = \"1\" ]]\n    [[ $(candidate \"1\") = \"1\" ]]\n}\n\nrun_test"
  status: SyntaxError
  stderr: '/tmp/tmpfz6qf4d0.sh: line 14: sum + - : syntax error: operand expected
    (error token is "- ")

    '
  stdout: ''
  timestamp: 1660004374
- exit_code: 1
  program: "#!/bin/bash\n# Write a function count_nums which takes an array of integers\
    \ and returns\n# the number of elements which has a sum of digits > 0.\n# If a\
    \ number is negative, then its first signed digit will be negative:\n# e.g. -123\
    \ has signed digits -1, 2, and 3.\n#\n# $1 is a space-separated list\ncount_nums()\
    \ {\n    local -a arr=($1)\n    local count=0\n    for i in \"${arr[@]}\"; do\n\
    \        local sum=0\n        while [ $i -ne 0 ]; do\n            sum=$((sum +\
    \ i % 10))\n            i=$((i / 10))\n        done\n        if [ $sum -gt 0 ];\
    \ then\n            count=$((count + 1))\n        fi\n    done\n    echo $count\n\
    }\n\ncandidate() {\n    count_nums \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate\
    \ \"\") = \"0\" ]]\n    [[ $(candidate \"-1 -2 0\") = \"0\" ]]\n    [[ $(candidate\
    \ \"1 1 2 -2 3 4 5\") = \"6\" ]]\n    [[ $(candidate \"1 6 9 -6 0 1 5\") = \"\
    5\" ]]\n    [[ $(candidate \"1 100 98 -7 1 -1\") = \"4\" ]]\n    [[ $(candidate\
    \ \"12 23 34 -45 -56 0\") = \"5\" ]]\n    [[ $(candidate \"0 1\") = \"1\" ]]\n\
    \    [[ $(candidate \"1\") = \"1\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660004374
- exit_code: 1
  program: "#!/bin/bash\n# Write a function count_nums which takes an array of integers\
    \ and returns\n# the number of elements which has a sum of digits > 0.\n# If a\
    \ number is negative, then its first signed digit will be negative:\n# e.g. -123\
    \ has signed digits -1, 2, and 3.\n#\n# $1 is a space-separated list\ncount_nums()\
    \ {\n    local count=0\n    for num in $1; do\n        local sum=0\n        for\
    \ (( i=0; i<${#num}; i++ )); do\n            (( sum += ${num:$i:1} ))\n      \
    \  done\n        (( sum > 0 )) && (( count++ ))\n    done\n    echo $count\n}\n\
    \ncandidate() {\n    count_nums \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate\
    \ \"\") = \"0\" ]]\n    [[ $(candidate \"-1 -2 0\") = \"0\" ]]\n    [[ $(candidate\
    \ \"1 1 2 -2 3 4 5\") = \"6\" ]]\n    [[ $(candidate \"1 6 9 -6 0 1 5\") = \"\
    5\" ]]\n    [[ $(candidate \"1 100 98 -7 1 -1\") = \"4\" ]]\n    [[ $(candidate\
    \ \"12 23 34 -45 -56 0\") = \"5\" ]]\n    [[ $(candidate \"0 1\") = \"1\" ]]\n\
    \    [[ $(candidate \"1\") = \"1\" ]]\n}\n\nrun_test"
  status: SyntaxError
  stderr: '/tmp/tmp191z5izb.sh: line 13: ((: sum += - : syntax error: operand expected
    (error token is "- ")

    /tmp/tmp191z5izb.sh: line 13: ((: sum += - : syntax error: operand expected (error
    token is "- ")

    '
  stdout: ''
  timestamp: 1660004374
- exit_code: 1
  program: "#!/bin/bash\n# Write a function count_nums which takes an array of integers\
    \ and returns\n# the number of elements which has a sum of digits > 0.\n# If a\
    \ number is negative, then its first signed digit will be negative:\n# e.g. -123\
    \ has signed digits -1, 2, and 3.\n#\n# $1 is a space-separated list\ncount_nums()\
    \ {\n    local -a arr=(\"$@\")\n    local count=0\n    for i in \"${arr[@]}\"\
    ; do\n        local sum=0\n        local num=${i#-}\n        while (( num > 0\
    \ )); do\n            (( sum += num % 10 ))\n            (( num /= 10 ))\n   \
    \     done\n        (( sum > 0 )) && (( count++ ))\n    done\n    echo $count\n\
    }\n\ncandidate() {\n    count_nums \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate\
    \ \"\") = \"0\" ]]\n    [[ $(candidate \"-1 -2 0\") = \"0\" ]]\n    [[ $(candidate\
    \ \"1 1 2 -2 3 4 5\") = \"6\" ]]\n    [[ $(candidate \"1 6 9 -6 0 1 5\") = \"\
    5\" ]]\n    [[ $(candidate \"1 100 98 -7 1 -1\") = \"4\" ]]\n    [[ $(candidate\
    \ \"12 23 34 -45 -56 0\") = \"5\" ]]\n    [[ $(candidate \"0 1\") = \"1\" ]]\n\
    \    [[ $(candidate \"1\") = \"1\" ]]\n}\n\nrun_test"
  status: SyntaxError
  stderr: '/tmp/tmp_eff3j7k.sh: line 14: ((: 1 -2 0: syntax error in expression (error
    token is "0")

    /tmp/tmp_eff3j7k.sh: line 14: ((: 1 1 2 -2 3 4 5: syntax error in expression (error
    token is "1 2 -2 3 4 5")

    '
  stdout: ''
  timestamp: 1660004373
- exit_code: 1
  program: "#!/bin/bash\n# Write a function count_nums which takes an array of integers\
    \ and returns\n# the number of elements which has a sum of digits > 0.\n# If a\
    \ number is negative, then its first signed digit will be negative:\n# e.g. -123\
    \ has signed digits -1, 2, and 3.\n#\n# $1 is a space-separated list\ncount_nums()\
    \ {\n    local -a arr=(\"$@\")\n    local count=0\n    for i in \"${arr[@]}\"\
    ; do\n        local sum=0\n        local num=${i#-}\n        while [[ $num -gt\
    \ 0 ]]; do\n            sum=$((sum + num % 10))\n            num=$((num / 10))\n\
    \        done\n        if [[ $i -lt 0 ]]; then\n            sum=$((sum - num))\n\
    \        fi\n        if [[ $sum -gt 0 ]]; then\n            count=$((count + 1))\n\
    \        fi\n    done\n    echo $count\n}\n\ncandidate() {\n    count_nums \"\
    $@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"\") = \"0\" ]]\n    [[ $(candidate\
    \ \"-1 -2 0\") = \"0\" ]]\n    [[ $(candidate \"1 1 2 -2 3 4 5\") = \"6\" ]]\n\
    \    [[ $(candidate \"1 6 9 -6 0 1 5\") = \"5\" ]]\n    [[ $(candidate \"1 100\
    \ 98 -7 1 -1\") = \"4\" ]]\n    [[ $(candidate \"12 23 34 -45 -56 0\") = \"5\"\
    \ ]]\n    [[ $(candidate \"0 1\") = \"1\" ]]\n    [[ $(candidate \"1\") = \"1\"\
    \ ]]\n}\n\nrun_test"
  status: SyntaxError
  stderr: '/tmp/tmp4bw0p5gy.sh: line 14: [[: 1 -2 0: syntax error in expression (error
    token is "0")

    /tmp/tmp4bw0p5gy.sh: line 18: [[: -1 -2 0: syntax error in expression (error token
    is "0")

    /tmp/tmp4bw0p5gy.sh: line 14: [[: 1 1 2 -2 3 4 5: syntax error in expression (error
    token is "1 2 -2 3 4 5")

    /tmp/tmp4bw0p5gy.sh: line 18: [[: 1 1 2 -2 3 4 5: syntax error in expression (error
    token is "1 2 -2 3 4 5")

    '
  stdout: ''
  timestamp: 1660004374
- exit_code: 1
  program: "#!/bin/bash\n# Write a function count_nums which takes an array of integers\
    \ and returns\n# the number of elements which has a sum of digits > 0.\n# If a\
    \ number is negative, then its first signed digit will be negative:\n# e.g. -123\
    \ has signed digits -1, 2, and 3.\n#\n# $1 is a space-separated list\ncount_nums()\
    \ {\n    local sum=0\n    local count=0\n    for num in $1; do\n        if [[\
    \ $num -lt 0 ]]; then\n            num=$((-$num))\n        fi\n        while [[\
    \ $num -gt 0 ]]; do\n            sum=$((sum + num % 10))\n            num=$((num\
    \ / 10))\n        done\n        if [[ $sum -gt 0 ]]; then\n            count=$((count\
    \ + 1))\n        fi\n        sum=0\n    done\n    echo $count\n}\n\ncandidate()\
    \ {\n    count_nums \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"\"\
    ) = \"0\" ]]\n    [[ $(candidate \"-1 -2 0\") = \"0\" ]]\n    [[ $(candidate \"\
    1 1 2 -2 3 4 5\") = \"6\" ]]\n    [[ $(candidate \"1 6 9 -6 0 1 5\") = \"5\" ]]\n\
    \    [[ $(candidate \"1 100 98 -7 1 -1\") = \"4\" ]]\n    [[ $(candidate \"12\
    \ 23 34 -45 -56 0\") = \"5\" ]]\n    [[ $(candidate \"0 1\") = \"1\" ]]\n    [[\
    \ $(candidate \"1\") = \"1\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660004374
- exit_code: 1
  program: "#!/bin/bash\n# Write a function count_nums which takes an array of integers\
    \ and returns\n# the number of elements which has a sum of digits > 0.\n# If a\
    \ number is negative, then its first signed digit will be negative:\n# e.g. -123\
    \ has signed digits -1, 2, and 3.\n#\n# $1 is a space-separated list\ncount_nums()\
    \ {\n    local -i sum=0\n    local -i n=0\n    local -i i=0\n    local -i j=0\n\
    \    local -i k=0\n    local -i l=0\n    local -i m=0\n    local -i num=0\n  \
    \  local -i nums=0\n    local -i num_digits=0\n    local -i num_digits_sum=0\n\
    \    local -i num_digits_sum_total=0\n    local -i num_digits_sum_total_total=0\n\
    \    local -i num_digits_sum_total_total_total=0\n    local -i num_digits_sum_total_total_total_total=0\n\
    \    local -i num_digits_sum_total_total_total_total_total=0\n    local -i num_digits_sum_total_total_total_total_total_total=0\n\
    \    local -i num_digits_sum_total_total_total_total_total_total_total=0\n   \
    \ local -i num_digits_sum_total_total_total_total_total_total_total_total=0\n\
    \    local -i num_digits_sum_total_total_total_total_total_total_total_total_total=0\n\
    \    local -i num_digits_sum_total_total_total_total_total_total_total_total_total_total=0\n\
    \    local -i num_digits_sum_total_total_total_total_total_total_total_total_total_total_total=0\n\
    \    local -i num_digits_sum_total_total_total_total_total_total_total_total_total_total_total_total=0\n\
    \    local -i num_digits_sum_total_total_total_total_total_total_total_total_total_total_total_total_total=0\n\
    \    local -i num_digits_sum_total_total_total_total_total_total_total_total_total_total_total_total_total_total=0\n\
    \    local -i num_digits_sum_total_total_total_total_total_total\n}\n\ncandidate()\
    \ {\n    count_nums \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"\"\
    ) = \"0\" ]]\n    [[ $(candidate \"-1 -2 0\") = \"0\" ]]\n    [[ $(candidate \"\
    1 1 2 -2 3 4 5\") = \"6\" ]]\n    [[ $(candidate \"1 6 9 -6 0 1 5\") = \"5\" ]]\n\
    \    [[ $(candidate \"1 100 98 -7 1 -1\") = \"4\" ]]\n    [[ $(candidate \"12\
    \ 23 34 -45 -56 0\") = \"5\" ]]\n    [[ $(candidate \"0 1\") = \"1\" ]]\n    [[\
    \ $(candidate \"1\") = \"1\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660004374
- exit_code: 1
  program: "#!/bin/bash\n# Write a function count_nums which takes an array of integers\
    \ and returns\n# the number of elements which has a sum of digits > 0.\n# If a\
    \ number is negative, then its first signed digit will be negative:\n# e.g. -123\
    \ has signed digits -1, 2, and 3.\n#\n# $1 is a space-separated list\ncount_nums()\
    \ {\n    local -a arr=($1)\n    local i=0\n    local sum=0\n    local count=0\n\
    \    for i in ${arr[@]}; do\n        if [ $i -lt 0 ]; then\n            i=$((-i))\n\
    \        fi\n        while [ $i -gt 0 ]; do\n            sum=$((i % 10))\n   \
    \         i=$((i / 10))\n            count=$((count + sum))\n        done\n  \
    \      if [ $count -gt 0 ]; then\n            echo $count\n        fi\n      \
    \  count=0\n    done\n}\n\ncandidate() {\n    count_nums \"$@\"\n}\n\nset -e\n\
    run_test() {\n    [[ $(candidate \"\") = \"0\" ]]\n    [[ $(candidate \"-1 -2\
    \ 0\") = \"0\" ]]\n    [[ $(candidate \"1 1 2 -2 3 4 5\") = \"6\" ]]\n    [[ $(candidate\
    \ \"1 6 9 -6 0 1 5\") = \"5\" ]]\n    [[ $(candidate \"1 100 98 -7 1 -1\") = \"\
    4\" ]]\n    [[ $(candidate \"12 23 34 -45 -56 0\") = \"5\" ]]\n    [[ $(candidate\
    \ \"0 1\") = \"1\" ]]\n    [[ $(candidate \"1\") = \"1\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660004374
- exit_code: 1
  program: "#!/bin/bash\n# Write a function count_nums which takes an array of integers\
    \ and returns\n# the number of elements which has a sum of digits > 0.\n# If a\
    \ number is negative, then its first signed digit will be negative:\n# e.g. -123\
    \ has signed digits -1, 2, and 3.\n#\n# $1 is a space-separated list\ncount_nums()\
    \ {\n    local -a nums=($1)\n    local count=0\n    for num in \"${nums[@]}\"\
    ; do\n        local sum=0\n        local abs_num=${num#-}\n        while (( abs_num\
    \ > 0 )); do\n            (( sum += abs_num % 10 ))\n            (( abs_num /=\
    \ 10 ))\n        done\n        (( sum > 0 )) && (( count++ ))\n    done\n    echo\
    \ $count\n}\n\ncandidate() {\n    count_nums \"$@\"\n}\n\nset -e\nrun_test() {\n\
    \    [[ $(candidate \"\") = \"0\" ]]\n    [[ $(candidate \"-1 -2 0\") = \"0\"\
    \ ]]\n    [[ $(candidate \"1 1 2 -2 3 4 5\") = \"6\" ]]\n    [[ $(candidate \"\
    1 6 9 -6 0 1 5\") = \"5\" ]]\n    [[ $(candidate \"1 100 98 -7 1 -1\") = \"4\"\
    \ ]]\n    [[ $(candidate \"12 23 34 -45 -56 0\") = \"5\" ]]\n    [[ $(candidate\
    \ \"0 1\") = \"1\" ]]\n    [[ $(candidate \"1\") = \"1\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660004373
- exit_code: 1
  program: "#!/bin/bash\n# Write a function count_nums which takes an array of integers\
    \ and returns\n# the number of elements which has a sum of digits > 0.\n# If a\
    \ number is negative, then its first signed digit will be negative:\n# e.g. -123\
    \ has signed digits -1, 2, and 3.\n#\n# $1 is a space-separated list\ncount_nums()\
    \ {\n    local -a arr=(\"$@\")\n    local -i sum=0\n    local -i count=0\n   \
    \ for i in \"${arr[@]}\"; do\n        if [[ $i -lt 0 ]]; then\n            i=$((-i))\n\
    \        fi\n        while [[ $i -gt 0 ]]; do\n            sum=$((sum + i % 10))\n\
    \            i=$((i / 10))\n        done\n        if [[ $sum -gt 0 ]]; then\n\
    \            count=$((count + 1))\n        fi\n        sum=0\n    done\n    echo\
    \ $count\n}\n\ncandidate() {\n    count_nums \"$@\"\n}\n\nset -e\nrun_test() {\n\
    \    [[ $(candidate \"\") = \"0\" ]]\n    [[ $(candidate \"-1 -2 0\") = \"0\"\
    \ ]]\n    [[ $(candidate \"1 1 2 -2 3 4 5\") = \"6\" ]]\n    [[ $(candidate \"\
    1 6 9 -6 0 1 5\") = \"5\" ]]\n    [[ $(candidate \"1 100 98 -7 1 -1\") = \"4\"\
    \ ]]\n    [[ $(candidate \"12 23 34 -45 -56 0\") = \"5\" ]]\n    [[ $(candidate\
    \ \"0 1\") = \"1\" ]]\n    [[ $(candidate \"1\") = \"1\" ]]\n}\n\nrun_test"
  status: SyntaxError
  stderr: '/tmp/tmpkyudapyi.sh: line 13: [[: -1 -2 0: syntax error in expression (error
    token is "0")

    /tmp/tmpkyudapyi.sh: line 16: [[: -1 -2 0: syntax error in expression (error token
    is "0")

    /tmp/tmpkyudapyi.sh: line 13: [[: 1 1 2 -2 3 4 5: syntax error in expression (error
    token is "1 2 -2 3 4 5")

    /tmp/tmpkyudapyi.sh: line 16: [[: 1 1 2 -2 3 4 5: syntax error in expression (error
    token is "1 2 -2 3 4 5")

    '
  stdout: ''
  timestamp: 1660004373
- exit_code: 1
  program: "#!/bin/bash\n# Write a function count_nums which takes an array of integers\
    \ and returns\n# the number of elements which has a sum of digits > 0.\n# If a\
    \ number is negative, then its first signed digit will be negative:\n# e.g. -123\
    \ has signed digits -1, 2, and 3.\n#\n# $1 is a space-separated list\ncount_nums()\
    \ {\n    local -a array\n    array=($1)\n    local count=0\n    for i in \"${array[@]}\"\
    ; do\n        local sum=0\n        local num=$i\n        if [[ $i -lt 0 ]]; then\n\
    \            num=$((-i))\n        fi\n        while [[ $num -gt 0 ]]; do\n   \
    \         sum=$((sum + num % 10))\n            num=$((num / 10))\n        done\n\
    \        if [[ $sum -gt 0 ]]; then\n            count=$((count + 1))\n       \
    \ fi\n    done\n    echo $count\n}\n\ncandidate() {\n    count_nums \"$@\"\n}\n\
    \nset -e\nrun_test() {\n    [[ $(candidate \"\") = \"0\" ]]\n    [[ $(candidate\
    \ \"-1 -2 0\") = \"0\" ]]\n    [[ $(candidate \"1 1 2 -2 3 4 5\") = \"6\" ]]\n\
    \    [[ $(candidate \"1 6 9 -6 0 1 5\") = \"5\" ]]\n    [[ $(candidate \"1 100\
    \ 98 -7 1 -1\") = \"4\" ]]\n    [[ $(candidate \"12 23 34 -45 -56 0\") = \"5\"\
    \ ]]\n    [[ $(candidate \"0 1\") = \"1\" ]]\n    [[ $(candidate \"1\") = \"1\"\
    \ ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660004374
- exit_code: 1
  program: "#!/bin/bash\n# Write a function count_nums which takes an array of integers\
    \ and returns\n# the number of elements which has a sum of digits > 0.\n# If a\
    \ number is negative, then its first signed digit will be negative:\n# e.g. -123\
    \ has signed digits -1, 2, and 3.\n#\n# $1 is a space-separated list\ncount_nums()\
    \ {\n    local -a arr=(\"$@\")\n    local sum=0\n    local count=0\n    for i\
    \ in \"${arr[@]}\"; do\n        if [[ $i -lt 0 ]]; then\n            i=$((i *\
    \ -1))\n        fi\n        while [[ $i -gt 0 ]]; do\n            sum=$((sum +\
    \ i % 10))\n            i=$((i / 10))\n        done\n        if [[ $sum -gt 0\
    \ ]]; then\n            count=$((count + 1))\n        fi\n        sum=0\n    done\n\
    \    echo $count\n}\n\ncandidate() {\n    count_nums \"$@\"\n}\n\nset -e\nrun_test()\
    \ {\n    [[ $(candidate \"\") = \"0\" ]]\n    [[ $(candidate \"-1 -2 0\") = \"\
    0\" ]]\n    [[ $(candidate \"1 1 2 -2 3 4 5\") = \"6\" ]]\n    [[ $(candidate\
    \ \"1 6 9 -6 0 1 5\") = \"5\" ]]\n    [[ $(candidate \"1 100 98 -7 1 -1\") = \"\
    4\" ]]\n    [[ $(candidate \"12 23 34 -45 -56 0\") = \"5\" ]]\n    [[ $(candidate\
    \ \"0 1\") = \"1\" ]]\n    [[ $(candidate \"1\") = \"1\" ]]\n}\n\nrun_test"
  status: SyntaxError
  stderr: '/tmp/tmpprniomij.sh: line 13: [[: -1 -2 0: syntax error in expression (error
    token is "0")

    /tmp/tmpprniomij.sh: line 16: [[: -1 -2 0: syntax error in expression (error token
    is "0")

    /tmp/tmpprniomij.sh: line 13: [[: 1 1 2 -2 3 4 5: syntax error in expression (error
    token is "1 2 -2 3 4 5")

    /tmp/tmpprniomij.sh: line 16: [[: 1 1 2 -2 3 4 5: syntax error in expression (error
    token is "1 2 -2 3 4 5")

    '
  stdout: ''
  timestamp: 1660004374
- exit_code: 1
  program: "#!/bin/bash\n# Write a function count_nums which takes an array of integers\
    \ and returns\n# the number of elements which has a sum of digits > 0.\n# If a\
    \ number is negative, then its first signed digit will be negative:\n# e.g. -123\
    \ has signed digits -1, 2, and 3.\n#\n# $1 is a space-separated list\ncount_nums()\
    \ {\n  local -a array\n  local -i sum\n  local -i i\n  local -i count\n  array=($1)\n\
    \  count=0\n  for ((i=0; i<${#array[@]}; i++)); do\n    sum=0\n    while ((array[i]\
    \ != 0)); do\n      sum=$((sum + array[i] % 10))\n      array[i]=$((array[i] /\
    \ 10))\n    done\n    if ((sum > 0)); then\n      count=$((count + 1))\n    fi\n\
    \  done\n  echo $count\n}\n\ncandidate() {\n    count_nums \"$@\"\n}\n\nset -e\n\
    run_test() {\n    [[ $(candidate \"\") = \"0\" ]]\n    [[ $(candidate \"-1 -2\
    \ 0\") = \"0\" ]]\n    [[ $(candidate \"1 1 2 -2 3 4 5\") = \"6\" ]]\n    [[ $(candidate\
    \ \"1 6 9 -6 0 1 5\") = \"5\" ]]\n    [[ $(candidate \"1 100 98 -7 1 -1\") = \"\
    4\" ]]\n    [[ $(candidate \"12 23 34 -45 -56 0\") = \"5\" ]]\n    [[ $(candidate\
    \ \"0 1\") = \"1\" ]]\n    [[ $(candidate \"1\") = \"1\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660004374
- exit_code: 1
  program: "#!/bin/bash\n# Write a function count_nums which takes an array of integers\
    \ and returns\n# the number of elements which has a sum of digits > 0.\n# If a\
    \ number is negative, then its first signed digit will be negative:\n# e.g. -123\
    \ has signed digits -1, 2, and 3.\n#\n# $1 is a space-separated list\ncount_nums()\
    \ {\n    local -a arr=(\"$@\")\n    local -i count=0\n    local -i i\n    local\
    \ -i sum\n    local -i num\n    local -i sign\n\n    for ((i=0; i<${#arr[@]};\
    \ i++)); do\n        num=${arr[$i]}\n        sign=$((num < 0 ? -1 : 1))\n    \
    \    num=$((num * sign))\n        sum=0\n        while ((num > 0)); do\n     \
    \       sum=$((sum + num % 10))\n            num=$((num / 10))\n        done\n\
    \        ((sum > 0)) && ((count++))\n    done\n\n    echo $count\n}\n\ncandidate()\
    \ {\n    count_nums \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"\"\
    ) = \"0\" ]]\n    [[ $(candidate \"-1 -2 0\") = \"0\" ]]\n    [[ $(candidate \"\
    1 1 2 -2 3 4 5\") = \"6\" ]]\n    [[ $(candidate \"1 6 9 -6 0 1 5\") = \"5\" ]]\n\
    \    [[ $(candidate \"1 100 98 -7 1 -1\") = \"4\" ]]\n    [[ $(candidate \"12\
    \ 23 34 -45 -56 0\") = \"5\" ]]\n    [[ $(candidate \"0 1\") = \"1\" ]]\n    [[\
    \ $(candidate \"1\") = \"1\" ]]\n}\n\nrun_test"
  status: SyntaxError
  stderr: '/tmp/tmpu5i0cw9c.sh: line 17: -1 -2 0: syntax error in expression (error
    token is "0")

    '
  stdout: ''
  timestamp: 1660004374
- exit_code: 1
  program: "#!/bin/bash\n# Write a function count_nums which takes an array of integers\
    \ and returns\n# the number of elements which has a sum of digits > 0.\n# If a\
    \ number is negative, then its first signed digit will be negative:\n# e.g. -123\
    \ has signed digits -1, 2, and 3.\n#\n# $1 is a space-separated list\ncount_nums()\
    \ {\n    local -a nums=($1)\n    local count=0\n    for num in \"${nums[@]}\"\
    ; do\n        local sum=0\n        local digits=${num//-/}\n        for ((i=0;\
    \ i<${#digits}; i++)); do\n            sum=$((sum + ${digits:$i:1}))\n       \
    \ done\n        if [[ $num -lt 0 ]]; then\n            sum=$((sum * -1))\n   \
    \     fi\n        if [[ $sum -gt 0 ]]; then\n            count=$((count + 1))\n\
    \        fi\n    done\n    echo $count\n}\n\ncandidate() {\n    count_nums \"\
    $@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"\") = \"0\" ]]\n    [[ $(candidate\
    \ \"-1 -2 0\") = \"0\" ]]\n    [[ $(candidate \"1 1 2 -2 3 4 5\") = \"6\" ]]\n\
    \    [[ $(candidate \"1 6 9 -6 0 1 5\") = \"5\" ]]\n    [[ $(candidate \"1 100\
    \ 98 -7 1 -1\") = \"4\" ]]\n    [[ $(candidate \"12 23 34 -45 -56 0\") = \"5\"\
    \ ]]\n    [[ $(candidate \"0 1\") = \"1\" ]]\n    [[ $(candidate \"1\") = \"1\"\
    \ ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660004374
- exit_code: 1
  program: "#!/bin/bash\n# Write a function count_nums which takes an array of integers\
    \ and returns\n# the number of elements which has a sum of digits > 0.\n# If a\
    \ number is negative, then its first signed digit will be negative:\n# e.g. -123\
    \ has signed digits -1, 2, and 3.\n#\n# $1 is a space-separated list\ncount_nums()\
    \ {\n    local -a arr=($1)\n    local count=0\n    for i in \"${arr[@]}\"; do\n\
    \        local sum=0\n        local num=${i#-}\n        while (( num > 0 )); do\n\
    \            (( sum += num % 10 ))\n            (( num /= 10 ))\n        done\n\
    \        (( sum > 0 )) && (( count++ ))\n    done\n    echo $count\n}\n\ncandidate()\
    \ {\n    count_nums \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"\"\
    ) = \"0\" ]]\n    [[ $(candidate \"-1 -2 0\") = \"0\" ]]\n    [[ $(candidate \"\
    1 1 2 -2 3 4 5\") = \"6\" ]]\n    [[ $(candidate \"1 6 9 -6 0 1 5\") = \"5\" ]]\n\
    \    [[ $(candidate \"1 100 98 -7 1 -1\") = \"4\" ]]\n    [[ $(candidate \"12\
    \ 23 34 -45 -56 0\") = \"5\" ]]\n    [[ $(candidate \"0 1\") = \"1\" ]]\n    [[\
    \ $(candidate \"1\") = \"1\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660004373
- exit_code: 1
  program: "#!/bin/bash\n# Write a function count_nums which takes an array of integers\
    \ and returns\n# the number of elements which has a sum of digits > 0.\n# If a\
    \ number is negative, then its first signed digit will be negative:\n# e.g. -123\
    \ has signed digits -1, 2, and 3.\n#\n# $1 is a space-separated list\ncount_nums()\
    \ {\n    local -a arr=(\"$@\")\n    local -i sum=0\n    local -i count=0\n   \
    \ for i in \"${arr[@]}\"; do\n        if [[ $i -lt 0 ]]; then\n            i=\"\
    ${i:1}\"\n        fi\n        while [[ $i -gt 0 ]]; do\n            sum=$((sum\
    \ + i % 10))\n            i=$((i / 10))\n        done\n        if [[ $sum -gt\
    \ 0 ]]; then\n            count=$((count + 1))\n        fi\n        sum=0\n  \
    \  done\n    echo $count\n}\n\ncandidate() {\n    count_nums \"$@\"\n}\n\nset\
    \ -e\nrun_test() {\n    [[ $(candidate \"\") = \"0\" ]]\n    [[ $(candidate \"\
    -1 -2 0\") = \"0\" ]]\n    [[ $(candidate \"1 1 2 -2 3 4 5\") = \"6\" ]]\n   \
    \ [[ $(candidate \"1 6 9 -6 0 1 5\") = \"5\" ]]\n    [[ $(candidate \"1 100 98\
    \ -7 1 -1\") = \"4\" ]]\n    [[ $(candidate \"12 23 34 -45 -56 0\") = \"5\" ]]\n\
    \    [[ $(candidate \"0 1\") = \"1\" ]]\n    [[ $(candidate \"1\") = \"1\" ]]\n\
    }\n\nrun_test"
  status: SyntaxError
  stderr: '/tmp/tmp3otsdbqv.sh: line 13: [[: -1 -2 0: syntax error in expression (error
    token is "0")

    /tmp/tmp3otsdbqv.sh: line 16: [[: -1 -2 0: syntax error in expression (error token
    is "0")

    /tmp/tmp3otsdbqv.sh: line 13: [[: 1 1 2 -2 3 4 5: syntax error in expression (error
    token is "1 2 -2 3 4 5")

    /tmp/tmp3otsdbqv.sh: line 16: [[: 1 1 2 -2 3 4 5: syntax error in expression (error
    token is "1 2 -2 3 4 5")

    '
  stdout: ''
  timestamp: 1660004374
- exit_code: 1
  program: "#!/bin/bash\n# Write a function count_nums which takes an array of integers\
    \ and returns\n# the number of elements which has a sum of digits > 0.\n# If a\
    \ number is negative, then its first signed digit will be negative:\n# e.g. -123\
    \ has signed digits -1, 2, and 3.\n#\n# $1 is a space-separated list\ncount_nums()\
    \ {\n    local -i sum=0\n    for num in $1; do\n        if (( num < 0 )); then\n\
    \            num=${num#-}\n        fi\n        while (( num > 0 )); do\n     \
    \       (( sum += num % 10 ))\n            (( num /= 10 ))\n        done\n   \
    \     if (( sum > 0 )); then\n            (( ++count ))\n        fi\n        ((\
    \ sum = 0 ))\n    done\n    echo $count\n}\n\ncandidate() {\n    count_nums \"\
    $@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"\") = \"0\" ]]\n    [[ $(candidate\
    \ \"-1 -2 0\") = \"0\" ]]\n    [[ $(candidate \"1 1 2 -2 3 4 5\") = \"6\" ]]\n\
    \    [[ $(candidate \"1 6 9 -6 0 1 5\") = \"5\" ]]\n    [[ $(candidate \"1 100\
    \ 98 -7 1 -1\") = \"4\" ]]\n    [[ $(candidate \"12 23 34 -45 -56 0\") = \"5\"\
    \ ]]\n    [[ $(candidate \"0 1\") = \"1\" ]]\n    [[ $(candidate \"1\") = \"1\"\
    \ ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660004374
- exit_code: 1
  program: "#!/bin/bash\n# Write a function count_nums which takes an array of integers\
    \ and returns\n# the number of elements which has a sum of digits > 0.\n# If a\
    \ number is negative, then its first signed digit will be negative:\n# e.g. -123\
    \ has signed digits -1, 2, and 3.\n#\n# $1 is a space-separated list\ncount_nums()\
    \ {\n    local count=0\n    local num\n    for num in $1; do\n        local sum=0\n\
    \        local digit\n        for digit in $(echo $num | sed 's/-//g'); do\n \
    \           sum=$((sum + digit))\n        done\n        if [ $sum -gt 0 ]; then\n\
    \            count=$((count + 1))\n        fi\n    done\n    echo $count\n}\n\n\
    candidate() {\n    count_nums \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate\
    \ \"\") = \"0\" ]]\n    [[ $(candidate \"-1 -2 0\") = \"0\" ]]\n    [[ $(candidate\
    \ \"1 1 2 -2 3 4 5\") = \"6\" ]]\n    [[ $(candidate \"1 6 9 -6 0 1 5\") = \"\
    5\" ]]\n    [[ $(candidate \"1 100 98 -7 1 -1\") = \"4\" ]]\n    [[ $(candidate\
    \ \"12 23 34 -45 -56 0\") = \"5\" ]]\n    [[ $(candidate \"0 1\") = \"1\" ]]\n\
    \    [[ $(candidate \"1\") = \"1\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660004374
- exit_code: 1
  program: "#!/bin/bash\n# Write a function count_nums which takes an array of integers\
    \ and returns\n# the number of elements which has a sum of digits > 0.\n# If a\
    \ number is negative, then its first signed digit will be negative:\n# e.g. -123\
    \ has signed digits -1, 2, and 3.\n#\n# $1 is a space-separated list\ncount_nums()\
    \ {\n    local -a arr=(\"$@\")\n    local count=0\n    local sum=0\n    for i\
    \ in \"${arr[@]}\"; do\n        sum=0\n        if [[ $i -lt 0 ]]; then\n     \
    \       i=$((-i))\n        fi\n        while [[ $i -gt 0 ]]; do\n            sum=$((sum\
    \ + i % 10))\n            i=$((i / 10))\n        done\n        if [[ $sum -gt\
    \ 0 ]]; then\n            count=$((count + 1))\n        fi\n    done\n    echo\
    \ $count\n}\n\ncandidate() {\n    count_nums \"$@\"\n}\n\nset -e\nrun_test() {\n\
    \    [[ $(candidate \"\") = \"0\" ]]\n    [[ $(candidate \"-1 -2 0\") = \"0\"\
    \ ]]\n    [[ $(candidate \"1 1 2 -2 3 4 5\") = \"6\" ]]\n    [[ $(candidate \"\
    1 6 9 -6 0 1 5\") = \"5\" ]]\n    [[ $(candidate \"1 100 98 -7 1 -1\") = \"4\"\
    \ ]]\n    [[ $(candidate \"12 23 34 -45 -56 0\") = \"5\" ]]\n    [[ $(candidate\
    \ \"0 1\") = \"1\" ]]\n    [[ $(candidate \"1\") = \"1\" ]]\n}\n\nrun_test"
  status: SyntaxError
  stderr: '/tmp/tmp54i0xmih.sh: line 14: [[: -1 -2 0: syntax error in expression (error
    token is "0")

    /tmp/tmp54i0xmih.sh: line 17: [[: -1 -2 0: syntax error in expression (error token
    is "0")

    /tmp/tmp54i0xmih.sh: line 14: [[: 1 1 2 -2 3 4 5: syntax error in expression (error
    token is "1 2 -2 3 4 5")

    /tmp/tmp54i0xmih.sh: line 17: [[: 1 1 2 -2 3 4 5: syntax error in expression (error
    token is "1 2 -2 3 4 5")

    '
  stdout: ''
  timestamp: 1660004374
- exit_code: -1
  program: "#!/bin/bash\n# Write a function count_nums which takes an array of integers\
    \ and returns\n# the number of elements which has a sum of digits > 0.\n# If a\
    \ number is negative, then its first signed digit will be negative:\n# e.g. -123\
    \ has signed digits -1, 2, and 3.\n#\n# $1 is a space-separated list\ncount_nums()\
    \ {\n    local -i sum=0\n    local -i num\n    local -i count=0\n    for num in\
    \ $1; do\n        if (( num < 0 )); then\n            num=-num\n        fi\n \
    \       while (( num > 0 )); do\n            sum+=num%10\n            num/=10\n\
    \        done\n        if (( sum > 0 )); then\n            (( count++ ))\n   \
    \     fi\n        sum=0\n    done\n    echo $count\n}\n\ncandidate() {\n    count_nums\
    \ \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"\") = \"0\" ]]\n   \
    \ [[ $(candidate \"-1 -2 0\") = \"0\" ]]\n    [[ $(candidate \"1 1 2 -2 3 4 5\"\
    ) = \"6\" ]]\n    [[ $(candidate \"1 6 9 -6 0 1 5\") = \"5\" ]]\n    [[ $(candidate\
    \ \"1 100 98 -7 1 -1\") = \"4\" ]]\n    [[ $(candidate \"12 23 34 -45 -56 0\"\
    ) = \"5\" ]]\n    [[ $(candidate \"0 1\") = \"1\" ]]\n    [[ $(candidate \"1\"\
    ) = \"1\" ]]\n}\n\nrun_test"
  status: Timeout
  stderr: 'b''/tmp/tmp45xw7_sn.sh: line 18: num/=10: No such file or directory\n/tmp/tmp45xw7_sn.sh:
    line 18: num/=10: No such file or directory\n/tmp/tmp45xw7_sn.sh: line 18: num/=10:
    No such file or directory\n/tmp/tmp45xw7_sn.sh: line 18: num/=10: No such file
    or directory\n/tmp/tmp45xw7_sn.sh: line 18: num/=10: No such file or directory\n/tmp/tmp45xw7_sn.sh:
    line 18: num/=10: No such file or directory\n/tmp/tmp45xw7_sn.sh: line 18: num/=10:
    No such file or directory\n/tmp/tmp45xw7_sn.sh: line 18: num/=10: No such file
    or directory\n/tmp/tmp45xw7_sn.sh: line 18: num/=10: No such file or directory\n/tmp/tmp45xw7_sn.sh:
    line 18: num/=10: No such file or directory\n/tmp/tmp45xw7_sn.sh: line 18: num/=10:
    No such file or directory\n/tmp/tmp45xw7_sn.sh: line 18: num/=10: No such file
    or directory\n/tmp/tmp45xw7_sn.sh: line 18: num/=10: No such file or directory\n/tmp/tmp45xw7_sn.sh:
    line 18: num/=10: No such file or directory\n/tmp/tmp45xw7_sn.sh: line 18: num/=10:
    No such file or directory\n/tmp/tmp45xw7_sn.sh: line 18: num/=10: No such file
    or directory\n/tmp/tmp45xw7_sn.sh: line 18: num/=10: No such file or directory\n/tmp/tmp45xw7_sn.sh:
    line 18: num/=10: No such file or directory\n/tmp/tmp45xw7_sn.sh: line 18: num/=10:
    No such file or directory\n/tmp/tmp45xw7_sn.sh: line 18: num/=10: No such file
    or directory\n/tmp/tmp45xw7_sn.sh: line 18: num/=10: No such file or directory\n/tmp/tmp45xw7_sn.sh:
    line 18: num/=10: No such file or directory\n/tmp/tmp45xw7_sn.sh: line 18: num/=10:
    No such file or directory\n/tmp/tmp45xw7_sn.sh: line 18: num/=10: No such file
    or directory\n/tmp/tmp45xw7_sn.sh: line 18: num/=10: No such file or directory\n/tmp/tmp45xw7_sn.sh:
    line 18: num/=10: No such file or directory\n/tmp/tmp45xw7_sn.sh: line 18: num/=10:
    No such file or directory\n/tmp/tmp45xw7_sn.sh: line 18: num/=10: No such file
    or directory\n/tmp/tmp45xw7_sn.sh: line 18: num/=10: No such file or directory\n/tmp/tmp45xw7_sn.sh:
    line 18: num/=10: No such file or directory\n/tmp/tmp45xw7_sn.sh: line 18: num/=10:
    No such file or directory\n'
  stdout: None
  timestamp: 1660004379
- exit_code: 1
  program: "#!/bin/bash\n# Write a function count_nums which takes an array of integers\
    \ and returns\n# the number of elements which has a sum of digits > 0.\n# If a\
    \ number is negative, then its first signed digit will be negative:\n# e.g. -123\
    \ has signed digits -1, 2, and 3.\n#\n# $1 is a space-separated list\ncount_nums()\
    \ {\n    local -i sum=0\n    local -i num\n    for num in $1; do\n        if ((\
    \ num < 0 )); then\n            num=-num\n        fi\n        while (( num > 0\
    \ )); do\n            sum+=num%10\n            num/=10\n        done\n       \
    \ if (( sum > 0 )); then\n            (( ++count ))\n        fi\n        sum=0\n\
    \    done\n    echo $count\n}\n\ncandidate() {\n    count_nums \"$@\"\n}\n\nset\
    \ -e\nrun_test() {\n    [[ $(candidate \"\") = \"0\" ]]\n    [[ $(candidate \"\
    -1 -2 0\") = \"0\" ]]\n    [[ $(candidate \"1 1 2 -2 3 4 5\") = \"6\" ]]\n   \
    \ [[ $(candidate \"1 6 9 -6 0 1 5\") = \"5\" ]]\n    [[ $(candidate \"1 100 98\
    \ -7 1 -1\") = \"4\" ]]\n    [[ $(candidate \"12 23 34 -45 -56 0\") = \"5\" ]]\n\
    \    [[ $(candidate \"0 1\") = \"1\" ]]\n    [[ $(candidate \"1\") = \"1\" ]]\n\
    }\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660004373
- exit_code: 1
  program: "#!/bin/bash\n# Write a function count_nums which takes an array of integers\
    \ and returns\n# the number of elements which has a sum of digits > 0.\n# If a\
    \ number is negative, then its first signed digit will be negative:\n# e.g. -123\
    \ has signed digits -1, 2, and 3.\n#\n# $1 is a space-separated list\ncount_nums()\
    \ {\n    local -a nums=($1)\n    local count=0\n    for num in \"${nums[@]}\"\
    ; do\n        local sum=0\n        local abs_num=${num#-}\n        while (( abs_num\
    \ > 0 )); do\n            (( sum += abs_num % 10 ))\n            (( abs_num /=\
    \ 10 ))\n        done\n        (( sum > 0 )) && (( count++ ))\n    done\n    echo\
    \ $count\n}\n\ncandidate() {\n    count_nums \"$@\"\n}\n\nset -e\nrun_test() {\n\
    \    [[ $(candidate \"\") = \"0\" ]]\n    [[ $(candidate \"-1 -2 0\") = \"0\"\
    \ ]]\n    [[ $(candidate \"1 1 2 -2 3 4 5\") = \"6\" ]]\n    [[ $(candidate \"\
    1 6 9 -6 0 1 5\") = \"5\" ]]\n    [[ $(candidate \"1 100 98 -7 1 -1\") = \"4\"\
    \ ]]\n    [[ $(candidate \"12 23 34 -45 -56 0\") = \"5\" ]]\n    [[ $(candidate\
    \ \"0 1\") = \"1\" ]]\n    [[ $(candidate \"1\") = \"1\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660004373
- exit_code: 1
  program: "#!/bin/bash\n# Write a function count_nums which takes an array of integers\
    \ and returns\n# the number of elements which has a sum of digits > 0.\n# If a\
    \ number is negative, then its first signed digit will be negative:\n# e.g. -123\
    \ has signed digits -1, 2, and 3.\n#\n# $1 is a space-separated list\ncount_nums()\
    \ {\n    local -a arr=(\"$@\")\n    local -i sum=0\n    local -i count=0\n   \
    \ for i in \"${arr[@]}\"; do\n        if (( i < 0 )); then\n            i=$((\
    \ -i ))\n        fi\n        while (( i > 0 )); do\n            sum=$(( sum +\
    \ i % 10 ))\n            i=$(( i / 10 ))\n        done\n        if (( sum > 0\
    \ )); then\n            (( count++ ))\n        fi\n        sum=0\n    done\n \
    \   echo \"$count\"\n}\n\ncandidate() {\n    count_nums \"$@\"\n}\n\nset -e\n\
    run_test() {\n    [[ $(candidate \"\") = \"0\" ]]\n    [[ $(candidate \"-1 -2\
    \ 0\") = \"0\" ]]\n    [[ $(candidate \"1 1 2 -2 3 4 5\") = \"6\" ]]\n    [[ $(candidate\
    \ \"1 6 9 -6 0 1 5\") = \"5\" ]]\n    [[ $(candidate \"1 100 98 -7 1 -1\") = \"\
    4\" ]]\n    [[ $(candidate \"12 23 34 -45 -56 0\") = \"5\" ]]\n    [[ $(candidate\
    \ \"0 1\") = \"1\" ]]\n    [[ $(candidate \"1\") = \"1\" ]]\n}\n\nrun_test"
  status: SyntaxError
  stderr: '/tmp/tmptpasqy5_.sh: line 13: ((: -1 -2 0: syntax error in expression (error
    token is "0")

    /tmp/tmptpasqy5_.sh: line 16: ((: -1 -2 0: syntax error in expression (error token
    is "0")

    /tmp/tmptpasqy5_.sh: line 13: ((: 1 1 2 -2 3 4 5: syntax error in expression (error
    token is "1 2 -2 3 4 5")

    /tmp/tmptpasqy5_.sh: line 16: ((: 1 1 2 -2 3 4 5: syntax error in expression (error
    token is "1 2 -2 3 4 5")

    '
  stdout: ''
  timestamp: 1660004374
- exit_code: 1
  program: "#!/bin/bash\n# Write a function count_nums which takes an array of integers\
    \ and returns\n# the number of elements which has a sum of digits > 0.\n# If a\
    \ number is negative, then its first signed digit will be negative:\n# e.g. -123\
    \ has signed digits -1, 2, and 3.\n#\n# $1 is a space-separated list\ncount_nums()\
    \ {\n    local sum=0\n    local count=0\n    for num in $1; do\n        sum=0\n\
    \        for (( i=0; i<${#num}; i++ )); do\n            sum=$(( sum + ${num:$i:1}\
    \ ))\n        done\n        if (( sum > 0 )); then\n            count=$(( count\
    \ + 1 ))\n        fi\n    done\n    echo $count\n}\n\ncandidate() {\n    count_nums\
    \ \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"\") = \"0\" ]]\n   \
    \ [[ $(candidate \"-1 -2 0\") = \"0\" ]]\n    [[ $(candidate \"1 1 2 -2 3 4 5\"\
    ) = \"6\" ]]\n    [[ $(candidate \"1 6 9 -6 0 1 5\") = \"5\" ]]\n    [[ $(candidate\
    \ \"1 100 98 -7 1 -1\") = \"4\" ]]\n    [[ $(candidate \"12 23 34 -45 -56 0\"\
    ) = \"5\" ]]\n    [[ $(candidate \"0 1\") = \"1\" ]]\n    [[ $(candidate \"1\"\
    ) = \"1\" ]]\n}\n\nrun_test"
  status: SyntaxError
  stderr: '/tmp/tmpcj_wzqo3.sh: line 14: sum + - : syntax error: operand expected
    (error token is "- ")

    '
  stdout: ''
  timestamp: 1660004374
- exit_code: 1
  program: "#!/bin/bash\n# Write a function count_nums which takes an array of integers\
    \ and returns\n# the number of elements which has a sum of digits > 0.\n# If a\
    \ number is negative, then its first signed digit will be negative:\n# e.g. -123\
    \ has signed digits -1, 2, and 3.\n#\n# $1 is a space-separated list\ncount_nums()\
    \ {\n    local -a array=($1)\n    local count=0\n    for i in \"${array[@]}\"\
    ; do\n        local sum=0\n        local num=${i#-}\n        while (( num > 0\
    \ )); do\n            (( sum += num % 10 ))\n            (( num /= 10 ))\n   \
    \     done\n        (( sum > 0 )) && (( count++ ))\n    done\n    echo $count\n\
    }\n\ncandidate() {\n    count_nums \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate\
    \ \"\") = \"0\" ]]\n    [[ $(candidate \"-1 -2 0\") = \"0\" ]]\n    [[ $(candidate\
    \ \"1 1 2 -2 3 4 5\") = \"6\" ]]\n    [[ $(candidate \"1 6 9 -6 0 1 5\") = \"\
    5\" ]]\n    [[ $(candidate \"1 100 98 -7 1 -1\") = \"4\" ]]\n    [[ $(candidate\
    \ \"12 23 34 -45 -56 0\") = \"5\" ]]\n    [[ $(candidate \"0 1\") = \"1\" ]]\n\
    \    [[ $(candidate \"1\") = \"1\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660004374
- exit_code: 1
  program: "#!/bin/bash\n# Write a function count_nums which takes an array of integers\
    \ and returns\n# the number of elements which has a sum of digits > 0.\n# If a\
    \ number is negative, then its first signed digit will be negative:\n# e.g. -123\
    \ has signed digits -1, 2, and 3.\n#\n# $1 is a space-separated list\ncount_nums()\
    \ {\n    local -i sum=0\n    local -i i=0\n    local -i count=0\n    for i in\
    \ $1; do\n        if [[ $i -lt 0 ]]; then\n            sum=$(( $i * -1 ))\n  \
    \      else\n            sum=$i\n        fi\n        while [[ $sum -gt 0 ]]; do\n\
    \            sum=$(( $sum / 10 ))\n            count=$(( $count + 1 ))\n     \
    \   done\n    done\n    echo $count\n}\n\ncandidate() {\n    count_nums \"$@\"\
    \n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"\") = \"0\" ]]\n    [[ $(candidate\
    \ \"-1 -2 0\") = \"0\" ]]\n    [[ $(candidate \"1 1 2 -2 3 4 5\") = \"6\" ]]\n\
    \    [[ $(candidate \"1 6 9 -6 0 1 5\") = \"5\" ]]\n    [[ $(candidate \"1 100\
    \ 98 -7 1 -1\") = \"4\" ]]\n    [[ $(candidate \"12 23 34 -45 -56 0\") = \"5\"\
    \ ]]\n    [[ $(candidate \"0 1\") = \"1\" ]]\n    [[ $(candidate \"1\") = \"1\"\
    \ ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660004374
- exit_code: 1
  program: "#!/bin/bash\n# Write a function count_nums which takes an array of integers\
    \ and returns\n# the number of elements which has a sum of digits > 0.\n# If a\
    \ number is negative, then its first signed digit will be negative:\n# e.g. -123\
    \ has signed digits -1, 2, and 3.\n#\n# $1 is a space-separated list\ncount_nums()\
    \ {\n    local sum=0\n    local count=0\n    local num\n    for num in $1; do\n\
    \        if [[ $num -lt 0 ]]; then\n            num=$((-$num))\n        fi\n \
    \       while [[ $num -gt 0 ]]; do\n            sum=$((sum + num % 10))\n    \
    \        num=$((num / 10))\n        done\n        if [[ $sum -gt 0 ]]; then\n\
    \            count=$((count + 1))\n        fi\n        sum=0\n    done\n    echo\
    \ $count\n}\n\ncandidate() {\n    count_nums \"$@\"\n}\n\nset -e\nrun_test() {\n\
    \    [[ $(candidate \"\") = \"0\" ]]\n    [[ $(candidate \"-1 -2 0\") = \"0\"\
    \ ]]\n    [[ $(candidate \"1 1 2 -2 3 4 5\") = \"6\" ]]\n    [[ $(candidate \"\
    1 6 9 -6 0 1 5\") = \"5\" ]]\n    [[ $(candidate \"1 100 98 -7 1 -1\") = \"4\"\
    \ ]]\n    [[ $(candidate \"12 23 34 -45 -56 0\") = \"5\" ]]\n    [[ $(candidate\
    \ \"0 1\") = \"1\" ]]\n    [[ $(candidate \"1\") = \"1\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660004374
- exit_code: 1
  program: "#!/bin/bash\n# Write a function count_nums which takes an array of integers\
    \ and returns\n# the number of elements which has a sum of digits > 0.\n# If a\
    \ number is negative, then its first signed digit will be negative:\n# e.g. -123\
    \ has signed digits -1, 2, and 3.\n#\n# $1 is a space-separated list\ncount_nums()\
    \ {\n    local -i sum=0\n    local -i num\n    for num in $1; do\n        if ((\
    \ num < 0 )); then\n            num=-num\n        fi\n        while (( num > 0\
    \ )); do\n            sum+=num%10\n            num/=10\n        done\n       \
    \ if (( sum > 0 )); then\n            (( count++ ))\n        fi\n        sum=0\n\
    \    done\n    echo $count\n}\n\ncandidate() {\n    count_nums \"$@\"\n}\n\nset\
    \ -e\nrun_test() {\n    [[ $(candidate \"\") = \"0\" ]]\n    [[ $(candidate \"\
    -1 -2 0\") = \"0\" ]]\n    [[ $(candidate \"1 1 2 -2 3 4 5\") = \"6\" ]]\n   \
    \ [[ $(candidate \"1 6 9 -6 0 1 5\") = \"5\" ]]\n    [[ $(candidate \"1 100 98\
    \ -7 1 -1\") = \"4\" ]]\n    [[ $(candidate \"12 23 34 -45 -56 0\") = \"5\" ]]\n\
    \    [[ $(candidate \"0 1\") = \"1\" ]]\n    [[ $(candidate \"1\") = \"1\" ]]\n\
    }\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660004374
- exit_code: 1
  program: "#!/bin/bash\n# Write a function count_nums which takes an array of integers\
    \ and returns\n# the number of elements which has a sum of digits > 0.\n# If a\
    \ number is negative, then its first signed digit will be negative:\n# e.g. -123\
    \ has signed digits -1, 2, and 3.\n#\n# $1 is a space-separated list\ncount_nums()\
    \ {\n    local -a nums=($1)\n    local num\n    local sum\n    local count=0\n\
    \    for num in \"${nums[@]}\"; do\n        sum=0\n        while [[ $num -ne 0\
    \ ]]; do\n            sum=$((sum + num % 10))\n            num=$((num / 10))\n\
    \        done\n        if [[ $sum -gt 0 ]]; then\n            count=$((count +\
    \ 1))\n        fi\n    done\n    echo $count\n}\n\ncandidate() {\n    count_nums\
    \ \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"\") = \"0\" ]]\n   \
    \ [[ $(candidate \"-1 -2 0\") = \"0\" ]]\n    [[ $(candidate \"1 1 2 -2 3 4 5\"\
    ) = \"6\" ]]\n    [[ $(candidate \"1 6 9 -6 0 1 5\") = \"5\" ]]\n    [[ $(candidate\
    \ \"1 100 98 -7 1 -1\") = \"4\" ]]\n    [[ $(candidate \"12 23 34 -45 -56 0\"\
    ) = \"5\" ]]\n    [[ $(candidate \"0 1\") = \"1\" ]]\n    [[ $(candidate \"1\"\
    ) = \"1\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660004374
- exit_code: 1
  program: "#!/bin/bash\n# Write a function count_nums which takes an array of integers\
    \ and returns\n# the number of elements which has a sum of digits > 0.\n# If a\
    \ number is negative, then its first signed digit will be negative:\n# e.g. -123\
    \ has signed digits -1, 2, and 3.\n#\n# $1 is a space-separated list\ncount_nums()\
    \ {\n    local -a arr=(\"$@\")\n    local sum=0\n    local count=0\n    for i\
    \ in \"${arr[@]}\"; do\n        if [[ $i -lt 0 ]]; then\n            i=$((-i))\n\
    \        fi\n        while [[ $i -gt 0 ]]; do\n            sum=$((sum + i % 10))\n\
    \            i=$((i / 10))\n        done\n        if [[ $sum -gt 0 ]]; then\n\
    \            count=$((count + 1))\n        fi\n        sum=0\n    done\n    echo\
    \ $count\n}\n\ncandidate() {\n    count_nums \"$@\"\n}\n\nset -e\nrun_test() {\n\
    \    [[ $(candidate \"\") = \"0\" ]]\n    [[ $(candidate \"-1 -2 0\") = \"0\"\
    \ ]]\n    [[ $(candidate \"1 1 2 -2 3 4 5\") = \"6\" ]]\n    [[ $(candidate \"\
    1 6 9 -6 0 1 5\") = \"5\" ]]\n    [[ $(candidate \"1 100 98 -7 1 -1\") = \"4\"\
    \ ]]\n    [[ $(candidate \"12 23 34 -45 -56 0\") = \"5\" ]]\n    [[ $(candidate\
    \ \"0 1\") = \"1\" ]]\n    [[ $(candidate \"1\") = \"1\" ]]\n}\n\nrun_test"
  status: SyntaxError
  stderr: '/tmp/tmpe4a66pjb.sh: line 13: [[: -1 -2 0: syntax error in expression (error
    token is "0")

    /tmp/tmpe4a66pjb.sh: line 16: [[: -1 -2 0: syntax error in expression (error token
    is "0")

    /tmp/tmpe4a66pjb.sh: line 13: [[: 1 1 2 -2 3 4 5: syntax error in expression (error
    token is "1 2 -2 3 4 5")

    /tmp/tmpe4a66pjb.sh: line 16: [[: 1 1 2 -2 3 4 5: syntax error in expression (error
    token is "1 2 -2 3 4 5")

    '
  stdout: ''
  timestamp: 1660004374
- exit_code: 1
  program: "#!/bin/bash\n# Write a function count_nums which takes an array of integers\
    \ and returns\n# the number of elements which has a sum of digits > 0.\n# If a\
    \ number is negative, then its first signed digit will be negative:\n# e.g. -123\
    \ has signed digits -1, 2, and 3.\n#\n# $1 is a space-separated list\ncount_nums()\
    \ {\n    local -a arr\n    local -i sum\n    local -i i\n    local -i len\n  \
    \  local -i count\n    arr=($1)\n    len=${#arr[@]}\n    count=0\n    for ((i=0;\
    \ i<len; i++)); do\n        sum=0\n        while ((arr[i] != 0)); do\n       \
    \     sum=$((sum + arr[i] % 10))\n            arr[i]=$((arr[i] / 10))\n      \
    \  done\n        if ((sum > 0)); then\n            count=$((count + 1))\n    \
    \    fi\n    done\n    echo $count\n}\n\ncandidate() {\n    count_nums \"$@\"\n\
    }\n\nset -e\nrun_test() {\n    [[ $(candidate \"\") = \"0\" ]]\n    [[ $(candidate\
    \ \"-1 -2 0\") = \"0\" ]]\n    [[ $(candidate \"1 1 2 -2 3 4 5\") = \"6\" ]]\n\
    \    [[ $(candidate \"1 6 9 -6 0 1 5\") = \"5\" ]]\n    [[ $(candidate \"1 100\
    \ 98 -7 1 -1\") = \"4\" ]]\n    [[ $(candidate \"12 23 34 -45 -56 0\") = \"5\"\
    \ ]]\n    [[ $(candidate \"0 1\") = \"1\" ]]\n    [[ $(candidate \"1\") = \"1\"\
    \ ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660004374
- exit_code: 1
  program: "#!/bin/bash\n# Write a function count_nums which takes an array of integers\
    \ and returns\n# the number of elements which has a sum of digits > 0.\n# If a\
    \ number is negative, then its first signed digit will be negative:\n# e.g. -123\
    \ has signed digits -1, 2, and 3.\n#\n# $1 is a space-separated list\ncount_nums()\
    \ {\n    local -a arr=($1)\n    local count=0\n    for i in \"${arr[@]}\"; do\n\
    \        local sum=0\n        while (( i != 0 )); do\n            sum=$(( sum\
    \ + i % 10 ))\n            i=$(( i / 10 ))\n        done\n        (( sum > 0 ))\
    \ && (( count++ ))\n    done\n    echo $count\n}\n\ncandidate() {\n    count_nums\
    \ \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"\") = \"0\" ]]\n   \
    \ [[ $(candidate \"-1 -2 0\") = \"0\" ]]\n    [[ $(candidate \"1 1 2 -2 3 4 5\"\
    ) = \"6\" ]]\n    [[ $(candidate \"1 6 9 -6 0 1 5\") = \"5\" ]]\n    [[ $(candidate\
    \ \"1 100 98 -7 1 -1\") = \"4\" ]]\n    [[ $(candidate \"12 23 34 -45 -56 0\"\
    ) = \"5\" ]]\n    [[ $(candidate \"0 1\") = \"1\" ]]\n    [[ $(candidate \"1\"\
    ) = \"1\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660004374
- exit_code: 1
  program: "#!/bin/bash\n# Write a function count_nums which takes an array of integers\
    \ and returns\n# the number of elements which has a sum of digits > 0.\n# If a\
    \ number is negative, then its first signed digit will be negative:\n# e.g. -123\
    \ has signed digits -1, 2, and 3.\n#\n# $1 is a space-separated list\ncount_nums()\
    \ {\n    local -a nums=($1)\n    local -i i=0\n    local -i sum=0\n    local -i\
    \ count=0\n    for i in \"${nums[@]}\"; do\n        if (( i < 0 )); then\n   \
    \         (( i = i * -1 ))\n        fi\n        while (( i > 0 )); do\n      \
    \      (( sum += i % 10 ))\n            (( i /= 10 ))\n        done\n        if\
    \ (( sum > 0 )); then\n            (( count++ ))\n        fi\n        (( sum =\
    \ 0 ))\n    done\n    echo \"$count\"\n}\n\ncandidate() {\n    count_nums \"$@\"\
    \n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"\") = \"0\" ]]\n    [[ $(candidate\
    \ \"-1 -2 0\") = \"0\" ]]\n    [[ $(candidate \"1 1 2 -2 3 4 5\") = \"6\" ]]\n\
    \    [[ $(candidate \"1 6 9 -6 0 1 5\") = \"5\" ]]\n    [[ $(candidate \"1 100\
    \ 98 -7 1 -1\") = \"4\" ]]\n    [[ $(candidate \"12 23 34 -45 -56 0\") = \"5\"\
    \ ]]\n    [[ $(candidate \"0 1\") = \"1\" ]]\n    [[ $(candidate \"1\") = \"1\"\
    \ ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660004374
- exit_code: 1
  program: "#!/bin/bash\n# Write a function count_nums which takes an array of integers\
    \ and returns\n# the number of elements which has a sum of digits > 0.\n# If a\
    \ number is negative, then its first signed digit will be negative:\n# e.g. -123\
    \ has signed digits -1, 2, and 3.\n#\n# $1 is a space-separated list\ncount_nums()\
    \ {\n    local -i sum=0\n    local -i n=0\n    for i in $1; do\n        if ((\
    \ i < 0 )); then\n            (( sum += -i % 10 ))\n            (( i = -i / 10\
    \ ))\n        fi\n        while (( i > 0 )); do\n            (( sum += i % 10\
    \ ))\n            (( i /= 10 ))\n        done\n        (( sum > 0 )) && (( ++n\
    \ ))\n        (( sum = 0 ))\n    done\n    echo $n\n}\n\ncandidate() {\n    count_nums\
    \ \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"\") = \"0\" ]]\n   \
    \ [[ $(candidate \"-1 -2 0\") = \"0\" ]]\n    [[ $(candidate \"1 1 2 -2 3 4 5\"\
    ) = \"6\" ]]\n    [[ $(candidate \"1 6 9 -6 0 1 5\") = \"5\" ]]\n    [[ $(candidate\
    \ \"1 100 98 -7 1 -1\") = \"4\" ]]\n    [[ $(candidate \"12 23 34 -45 -56 0\"\
    ) = \"5\" ]]\n    [[ $(candidate \"0 1\") = \"1\" ]]\n    [[ $(candidate \"1\"\
    ) = \"1\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660004374
- exit_code: 1
  program: "#!/bin/bash\n# Write a function count_nums which takes an array of integers\
    \ and returns\n# the number of elements which has a sum of digits > 0.\n# If a\
    \ number is negative, then its first signed digit will be negative:\n# e.g. -123\
    \ has signed digits -1, 2, and 3.\n#\n# $1 is a space-separated list\ncount_nums()\
    \ {\n    local -a array\n    local -i i sum\n    array=($1)\n    for ((i=0; i<${#array[@]};\
    \ i++)); do\n        sum=0\n        while ((array[i] != 0)); do\n            sum=$((sum\
    \ + array[i] % 10))\n            array[i]=$((array[i] / 10))\n        done\n \
    \       if ((sum > 0)); then\n            ((count++))\n        fi\n    done\n\
    \    echo $count\n}\n\ncandidate() {\n    count_nums \"$@\"\n}\n\nset -e\nrun_test()\
    \ {\n    [[ $(candidate \"\") = \"0\" ]]\n    [[ $(candidate \"-1 -2 0\") = \"\
    0\" ]]\n    [[ $(candidate \"1 1 2 -2 3 4 5\") = \"6\" ]]\n    [[ $(candidate\
    \ \"1 6 9 -6 0 1 5\") = \"5\" ]]\n    [[ $(candidate \"1 100 98 -7 1 -1\") = \"\
    4\" ]]\n    [[ $(candidate \"12 23 34 -45 -56 0\") = \"5\" ]]\n    [[ $(candidate\
    \ \"0 1\") = \"1\" ]]\n    [[ $(candidate \"1\") = \"1\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660004374
- exit_code: 1
  program: "#!/bin/bash\n# Write a function count_nums which takes an array of integers\
    \ and returns\n# the number of elements which has a sum of digits > 0.\n# If a\
    \ number is negative, then its first signed digit will be negative:\n# e.g. -123\
    \ has signed digits -1, 2, and 3.\n#\n# $1 is a space-separated list\ncount_nums()\
    \ {\n    local -a nums=($1)\n    local count=0\n    for num in \"${nums[@]}\"\
    ; do\n        local sum=0\n        local abs_num=${num#-}\n        while (( abs_num\
    \ > 0 )); do\n            (( sum += abs_num % 10 ))\n            (( abs_num /=\
    \ 10 ))\n        done\n        (( sum > 0 )) && (( count++ ))\n    done\n    echo\
    \ $count\n}\n\ncandidate() {\n    count_nums \"$@\"\n}\n\nset -e\nrun_test() {\n\
    \    [[ $(candidate \"\") = \"0\" ]]\n    [[ $(candidate \"-1 -2 0\") = \"0\"\
    \ ]]\n    [[ $(candidate \"1 1 2 -2 3 4 5\") = \"6\" ]]\n    [[ $(candidate \"\
    1 6 9 -6 0 1 5\") = \"5\" ]]\n    [[ $(candidate \"1 100 98 -7 1 -1\") = \"4\"\
    \ ]]\n    [[ $(candidate \"12 23 34 -45 -56 0\") = \"5\" ]]\n    [[ $(candidate\
    \ \"0 1\") = \"1\" ]]\n    [[ $(candidate \"1\") = \"1\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660004373
- exit_code: 1
  program: "#!/bin/bash\n# Write a function count_nums which takes an array of integers\
    \ and returns\n# the number of elements which has a sum of digits > 0.\n# If a\
    \ number is negative, then its first signed digit will be negative:\n# e.g. -123\
    \ has signed digits -1, 2, and 3.\n#\n# $1 is a space-separated list\ncount_nums()\
    \ {\n    local -a arr=(\"$@\")\n    local -i sum=0\n    local -i count=0\n   \
    \ local -i i=0\n    local -i j=0\n    local -i len=${#arr[@]}\n    local -i num=0\n\
    \    local -i digit=0\n    local -i sign=0\n\n    for ((i=0; i<len; i++)); do\n\
    \        num=${arr[i]}\n        sum=0\n        sign=1\n        if ((num < 0));\
    \ then\n            sign=-1\n        fi\n        while ((num != 0)); do\n    \
    \        digit=$((num % 10))\n            sum=$((sum + digit))\n            num=$((num\
    \ / 10))\n        done\n        if ((sign * sum > 0)); then\n            count=$((count\
    \ + 1))\n        fi\n    done\n    echo $count\n}\n\ncandidate() {\n    count_nums\
    \ \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"\") = \"0\" ]]\n   \
    \ [[ $(candidate \"-1 -2 0\") = \"0\" ]]\n    [[ $(candidate \"1 1 2 -2 3 4 5\"\
    ) = \"6\" ]]\n    [[ $(candidate \"1 6 9 -6 0 1 5\") = \"5\" ]]\n    [[ $(candidate\
    \ \"1 100 98 -7 1 -1\") = \"4\" ]]\n    [[ $(candidate \"12 23 34 -45 -56 0\"\
    ) = \"5\" ]]\n    [[ $(candidate \"0 1\") = \"1\" ]]\n    [[ $(candidate \"1\"\
    ) = \"1\" ]]\n}\n\nrun_test"
  status: SyntaxError
  stderr: '/tmp/tmp9vgwgwxe.sh: line 20: -1 -2 0: syntax error in expression (error
    token is "0")

    '
  stdout: ''
  timestamp: 1660004374
- exit_code: 1
  program: "#!/bin/bash\n# Write a function count_nums which takes an array of integers\
    \ and returns\n# the number of elements which has a sum of digits > 0.\n# If a\
    \ number is negative, then its first signed digit will be negative:\n# e.g. -123\
    \ has signed digits -1, 2, and 3.\n#\n# $1 is a space-separated list\ncount_nums()\
    \ {\n    local -i sum=0\n    local -i num\n    for num in $1; do\n        if ((\
    \ num < 0 )); then\n            num=${num#-}\n        fi\n        while (( num\
    \ > 0 )); do\n            (( sum += num % 10 ))\n            (( num /= 10 ))\n\
    \        done\n        if (( sum > 0 )); then\n            (( count++ ))\n   \
    \     fi\n        (( sum = 0 ))\n    done\n    echo $count\n}\n\ncandidate() {\n\
    \    count_nums \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"\") =\
    \ \"0\" ]]\n    [[ $(candidate \"-1 -2 0\") = \"0\" ]]\n    [[ $(candidate \"\
    1 1 2 -2 3 4 5\") = \"6\" ]]\n    [[ $(candidate \"1 6 9 -6 0 1 5\") = \"5\" ]]\n\
    \    [[ $(candidate \"1 100 98 -7 1 -1\") = \"4\" ]]\n    [[ $(candidate \"12\
    \ 23 34 -45 -56 0\") = \"5\" ]]\n    [[ $(candidate \"0 1\") = \"1\" ]]\n    [[\
    \ $(candidate \"1\") = \"1\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660004374
- exit_code: 1
  program: "#!/bin/bash\n# Write a function count_nums which takes an array of integers\
    \ and returns\n# the number of elements which has a sum of digits > 0.\n# If a\
    \ number is negative, then its first signed digit will be negative:\n# e.g. -123\
    \ has signed digits -1, 2, and 3.\n#\n# $1 is a space-separated list\ncount_nums()\
    \ {\n    local -a nums=($1)\n    local count=0\n    for num in \"${nums[@]}\"\
    ; do\n        local -i sum=0\n        local -i num_abs=${num#-}\n        while\
    \ (( num_abs > 0 )); do\n            (( sum += num_abs % 10 ))\n            ((\
    \ num_abs /= 10 ))\n        done\n        (( sum > 0 )) && (( count++ ))\n   \
    \ done\n    echo $count\n}\n\ncandidate() {\n    count_nums \"$@\"\n}\n\nset -e\n\
    run_test() {\n    [[ $(candidate \"\") = \"0\" ]]\n    [[ $(candidate \"-1 -2\
    \ 0\") = \"0\" ]]\n    [[ $(candidate \"1 1 2 -2 3 4 5\") = \"6\" ]]\n    [[ $(candidate\
    \ \"1 6 9 -6 0 1 5\") = \"5\" ]]\n    [[ $(candidate \"1 100 98 -7 1 -1\") = \"\
    4\" ]]\n    [[ $(candidate \"12 23 34 -45 -56 0\") = \"5\" ]]\n    [[ $(candidate\
    \ \"0 1\") = \"1\" ]]\n    [[ $(candidate \"1\") = \"1\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660004374
- exit_code: 1
  program: "#!/bin/bash\n# Write a function count_nums which takes an array of integers\
    \ and returns\n# the number of elements which has a sum of digits > 0.\n# If a\
    \ number is negative, then its first signed digit will be negative:\n# e.g. -123\
    \ has signed digits -1, 2, and 3.\n#\n# $1 is a space-separated list\ncount_nums()\
    \ {\n    local -a arr=(\"$@\")\n    local -i sum=0\n    local -i count=0\n   \
    \ for i in \"${arr[@]}\"; do\n        if [[ $i -lt 0 ]]; then\n            i=$((i\
    \ * -1))\n        fi\n        while [[ $i -gt 0 ]]; do\n            sum=$((sum\
    \ + i % 10))\n            i=$((i / 10))\n        done\n        if [[ $sum -gt\
    \ 0 ]]; then\n            count=$((count + 1))\n        fi\n        sum=0\n  \
    \  done\n    echo $count\n}\n\ncandidate() {\n    count_nums \"$@\"\n}\n\nset\
    \ -e\nrun_test() {\n    [[ $(candidate \"\") = \"0\" ]]\n    [[ $(candidate \"\
    -1 -2 0\") = \"0\" ]]\n    [[ $(candidate \"1 1 2 -2 3 4 5\") = \"6\" ]]\n   \
    \ [[ $(candidate \"1 6 9 -6 0 1 5\") = \"5\" ]]\n    [[ $(candidate \"1 100 98\
    \ -7 1 -1\") = \"4\" ]]\n    [[ $(candidate \"12 23 34 -45 -56 0\") = \"5\" ]]\n\
    \    [[ $(candidate \"0 1\") = \"1\" ]]\n    [[ $(candidate \"1\") = \"1\" ]]\n\
    }\n\nrun_test"
  status: SyntaxError
  stderr: '/tmp/tmpq18b21_r.sh: line 13: [[: -1 -2 0: syntax error in expression (error
    token is "0")

    /tmp/tmpq18b21_r.sh: line 16: [[: -1 -2 0: syntax error in expression (error token
    is "0")

    /tmp/tmpq18b21_r.sh: line 13: [[: 1 1 2 -2 3 4 5: syntax error in expression (error
    token is "1 2 -2 3 4 5")

    /tmp/tmpq18b21_r.sh: line 16: [[: 1 1 2 -2 3 4 5: syntax error in expression (error
    token is "1 2 -2 3 4 5")

    '
  stdout: ''
  timestamp: 1660004374
- exit_code: -1
  program: "#!/bin/bash\n# Write a function count_nums which takes an array of integers\
    \ and returns\n# the number of elements which has a sum of digits > 0.\n# If a\
    \ number is negative, then its first signed digit will be negative:\n# e.g. -123\
    \ has signed digits -1, 2, and 3.\n#\n# $1 is a space-separated list\ncount_nums()\
    \ {\n  local -i sum=0\n  local -i num\n  for num in $1; do\n    if (( num < 0\
    \ )); then\n      num=-num\n    fi\n    while (( num > 0 )); do\n      sum+=num%10\n\
    \      num/=10\n    done\n  done\n  echo $sum\n}\n\ncandidate() {\n    count_nums\
    \ \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"\") = \"0\" ]]\n   \
    \ [[ $(candidate \"-1 -2 0\") = \"0\" ]]\n    [[ $(candidate \"1 1 2 -2 3 4 5\"\
    ) = \"6\" ]]\n    [[ $(candidate \"1 6 9 -6 0 1 5\") = \"5\" ]]\n    [[ $(candidate\
    \ \"1 100 98 -7 1 -1\") = \"4\" ]]\n    [[ $(candidate \"12 23 34 -45 -56 0\"\
    ) = \"5\" ]]\n    [[ $(candidate \"0 1\") = \"1\" ]]\n    [[ $(candidate \"1\"\
    ) = \"1\" ]]\n}\n\nrun_test"
  status: Timeout
  stderr: 'b''/tmp/tmprvaz27i8.sh: line 17: num/=10: No such file or directory\n/tmp/tmprvaz27i8.sh:
    line 17: num/=10: No such file or directory\n/tmp/tmprvaz27i8.sh: line 17: num/=10:
    No such file or directory\n/tmp/tmprvaz27i8.sh: line 17: num/=10: No such file
    or directory\n/tmp/tmprvaz27i8.sh: line 17: num/=10: No such file or directory\n/tmp/tmprvaz27i8.sh:
    line 17: num/=10: No such file or directory\n/tmp/tmprvaz27i8.sh: line 17: num/=10:
    No such file or directory\n/tmp/tmprvaz27i8.sh: line 17: num/=10: No such file
    or directory\n/tmp/tmprvaz27i8.sh: line 17: num/=10: No such file or directory\n/tmp/tmprvaz27i8.sh:
    line 17: num/=10: No such file or directory\n/tmp/tmprvaz27i8.sh: line 17: num/=10:
    No such file or directory\n/tmp/tmprvaz27i8.sh: line 17: num/=10: No such file
    or directory\n/tmp/tmprvaz27i8.sh: line 17: num/=10: No such file or directory\n/tmp/tmprvaz27i8.sh:
    line 17: num/=10: No such file or directory\n/tmp/tmprvaz27i8.sh: line 17: num/=10:
    No such file or directory\n/tmp/tmprvaz27i8.sh: line 17: num/=10: No such file
    or directory\n/tmp/tmprvaz27i8.sh: line 17: num/=10: No such file or directory\n/tmp/tmprvaz27i8.sh:
    line 17: num/=10: No such file or directory\n/tmp/tmprvaz27i8.sh: line 17: num/=10:
    No such file or directory\n/tmp/tmprvaz27i8.sh: line 17: num/=10: No such file
    or directory\n/tmp/tmprvaz27i8.sh: line 17: num/=10: No such file or directory\n/tmp/tmprvaz27i8.sh:
    line 17: num/=10: No such file or directory\n/tmp/tmprvaz27i8.sh: line 17: num/=10:
    No such file or directory\n/tmp/tmprvaz27i8.sh: line 17: num/=10: No such file
    or directory\n/tmp/tmprvaz27i8.sh: line 17: num/=10: No such file or directory\n/tmp/tmprvaz27i8.sh:
    line 17: num/=10: No such file or directory\n/tmp/tmprvaz27i8.sh: line 17: num/=10:
    No such file or directory\n/tmp/tmprvaz27i8.sh: line 17: num/=10: No such file
    or directory\n/tmp/tmprvaz27i8.sh: line 17: num/=10: No such file or directory\n/tmp/tmprvaz27i8.sh:
    line 17: num/=10: No such file or directory\n/tmp/tmprvaz27i8.sh: line 17: num/=10:
    No such file or directory\n'
  stdout: None
  timestamp: 1660004379
- exit_code: 1
  program: "#!/bin/bash\n# Write a function count_nums which takes an array of integers\
    \ and returns\n# the number of elements which has a sum of digits > 0.\n# If a\
    \ number is negative, then its first signed digit will be negative:\n# e.g. -123\
    \ has signed digits -1, 2, and 3.\n#\n# $1 is a space-separated list\ncount_nums()\
    \ {\n    local -i sum=0\n    local -i i=0\n    local -i j=0\n    local -i n=0\n\
    \    local -i s=0\n    local -i t=0\n    local -i x=0\n    local -i y=0\n    local\
    \ -i z=0\n    local -i a=0\n    local -i b=0\n    local -i c=0\n    local -i d=0\n\
    \    local -i e=0\n    local -i f=0\n    local -i g=0\n    local -i h=0\n    local\
    \ -i k=0\n    local -i l=0\n    local -i m=0\n    local -i p=0\n    local -i q=0\n\
    \    local -i r=0\n    local -i u=0\n    local -i v=0\n    local -i w=0\n    local\
    \ -i A=0\n    local -i B=0\n    local -i C=0\n    local -i D=0\n    local -i E=0\n\
    \    local -i F=0\n    local -i G=0\n    local -i H=0\n    local -i I=0\n    local\
    \ -i J=0\n    local -i K=0\n    local -i L=0\n    local -i M=0\n    local -i N=0\n\
    \    local -i O=0\n    local -i P=0\n    local -i Q=0\n    local -i R=0\n    local\
    \ -i S=0\n    local -i T=0\n    local -i U=0\n    local -i V=0\n    local -i W=0\n\
    \    local -i X=0\n    local -i Y=0\n    local -i Z=0\n    local -i _=0\n    local\
    \ -i __=0\n    local -i ___=0\n    local -i ____=0\n    local -i _____=0\n   \
    \ local -i ______=0\n    local -i _______=0\n    local -i ________=0\n    local\
    \ -i _________=0\n    local -i __________=0\n    local -i ___________\n}\n\ncandidate()\
    \ {\n    count_nums \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"\"\
    ) = \"0\" ]]\n    [[ $(candidate \"-1 -2 0\") = \"0\" ]]\n    [[ $(candidate \"\
    1 1 2 -2 3 4 5\") = \"6\" ]]\n    [[ $(candidate \"1 6 9 -6 0 1 5\") = \"5\" ]]\n\
    \    [[ $(candidate \"1 100 98 -7 1 -1\") = \"4\" ]]\n    [[ $(candidate \"12\
    \ 23 34 -45 -56 0\") = \"5\" ]]\n    [[ $(candidate \"0 1\") = \"1\" ]]\n    [[\
    \ $(candidate \"1\") = \"1\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660004374
- exit_code: 1
  program: "#!/bin/bash\n# Write a function count_nums which takes an array of integers\
    \ and returns\n# the number of elements which has a sum of digits > 0.\n# If a\
    \ number is negative, then its first signed digit will be negative:\n# e.g. -123\
    \ has signed digits -1, 2, and 3.\n#\n# $1 is a space-separated list\ncount_nums()\
    \ {\n  local -a nums=($1)\n  local count=0\n  for num in \"${nums[@]}\"; do\n\
    \    local sum=0\n    local abs_num=${num#-}\n    while (( abs_num > 0 )); do\n\
    \      (( sum += abs_num % 10 ))\n      (( abs_num /= 10 ))\n    done\n    ((\
    \ sum > 0 )) && (( count++ ))\n  done\n  echo $count\n}\n\ncandidate() {\n   \
    \ count_nums \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"\") = \"\
    0\" ]]\n    [[ $(candidate \"-1 -2 0\") = \"0\" ]]\n    [[ $(candidate \"1 1 2\
    \ -2 3 4 5\") = \"6\" ]]\n    [[ $(candidate \"1 6 9 -6 0 1 5\") = \"5\" ]]\n\
    \    [[ $(candidate \"1 100 98 -7 1 -1\") = \"4\" ]]\n    [[ $(candidate \"12\
    \ 23 34 -45 -56 0\") = \"5\" ]]\n    [[ $(candidate \"0 1\") = \"1\" ]]\n    [[\
    \ $(candidate \"1\") = \"1\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660004374
- exit_code: 1
  program: "#!/bin/bash\n# Write a function count_nums which takes an array of integers\
    \ and returns\n# the number of elements which has a sum of digits > 0.\n# If a\
    \ number is negative, then its first signed digit will be negative:\n# e.g. -123\
    \ has signed digits -1, 2, and 3.\n#\n# $1 is a space-separated list\ncount_nums()\
    \ {\n    local -a nums=($1)\n    local count=0\n    for num in \"${nums[@]}\"\
    ; do\n        local sum=0\n        if [[ $num -lt 0 ]]; then\n            num=$((-num))\n\
    \        fi\n        while [[ $num -gt 0 ]]; do\n            sum=$((sum + num\
    \ % 10))\n            num=$((num / 10))\n        done\n        if [[ $sum -gt\
    \ 0 ]]; then\n            count=$((count + 1))\n        fi\n    done\n    echo\
    \ $count\n}\n\ncandidate() {\n    count_nums \"$@\"\n}\n\nset -e\nrun_test() {\n\
    \    [[ $(candidate \"\") = \"0\" ]]\n    [[ $(candidate \"-1 -2 0\") = \"0\"\
    \ ]]\n    [[ $(candidate \"1 1 2 -2 3 4 5\") = \"6\" ]]\n    [[ $(candidate \"\
    1 6 9 -6 0 1 5\") = \"5\" ]]\n    [[ $(candidate \"1 100 98 -7 1 -1\") = \"4\"\
    \ ]]\n    [[ $(candidate \"12 23 34 -45 -56 0\") = \"5\" ]]\n    [[ $(candidate\
    \ \"0 1\") = \"1\" ]]\n    [[ $(candidate \"1\") = \"1\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660004374
- exit_code: 1
  program: "#!/bin/bash\n# Write a function count_nums which takes an array of integers\
    \ and returns\n# the number of elements which has a sum of digits > 0.\n# If a\
    \ number is negative, then its first signed digit will be negative:\n# e.g. -123\
    \ has signed digits -1, 2, and 3.\n#\n# $1 is a space-separated list\ncount_nums()\
    \ {\n    local -a arr=($1)\n    local count=0\n    for i in \"${arr[@]}\"; do\n\
    \        local sum=0\n        local num=${i#-}\n        while [[ $num -gt 0 ]];\
    \ do\n            sum=$((sum + num % 10))\n            num=$((num / 10))\n   \
    \     done\n        if [[ $i -lt 0 ]]; then\n            sum=$((sum * -1))\n \
    \       fi\n        if [[ $sum -gt 0 ]]; then\n            count=$((count + 1))\n\
    \        fi\n    done\n    echo $count\n}\n\ncandidate() {\n    count_nums \"\
    $@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"\") = \"0\" ]]\n    [[ $(candidate\
    \ \"-1 -2 0\") = \"0\" ]]\n    [[ $(candidate \"1 1 2 -2 3 4 5\") = \"6\" ]]\n\
    \    [[ $(candidate \"1 6 9 -6 0 1 5\") = \"5\" ]]\n    [[ $(candidate \"1 100\
    \ 98 -7 1 -1\") = \"4\" ]]\n    [[ $(candidate \"12 23 34 -45 -56 0\") = \"5\"\
    \ ]]\n    [[ $(candidate \"0 1\") = \"1\" ]]\n    [[ $(candidate \"1\") = \"1\"\
    \ ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660004374
- exit_code: 1
  program: "#!/bin/bash\n# Write a function count_nums which takes an array of integers\
    \ and returns\n# the number of elements which has a sum of digits > 0.\n# If a\
    \ number is negative, then its first signed digit will be negative:\n# e.g. -123\
    \ has signed digits -1, 2, and 3.\n#\n# $1 is a space-separated list\ncount_nums()\
    \ {\n    local -a nums=($1)\n    local count=0\n    for num in \"${nums[@]}\"\
    ; do\n        local sum=0\n        local abs_num=$(echo \"$num\" | sed 's/-//')\n\
    \        while [[ $abs_num -gt 0 ]]; do\n            sum=$((sum + abs_num % 10))\n\
    \            abs_num=$((abs_num / 10))\n        done\n        if [[ $sum -gt 0\
    \ ]]; then\n            count=$((count + 1))\n        fi\n    done\n    echo $count\n\
    }\n\ncandidate() {\n    count_nums \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate\
    \ \"\") = \"0\" ]]\n    [[ $(candidate \"-1 -2 0\") = \"0\" ]]\n    [[ $(candidate\
    \ \"1 1 2 -2 3 4 5\") = \"6\" ]]\n    [[ $(candidate \"1 6 9 -6 0 1 5\") = \"\
    5\" ]]\n    [[ $(candidate \"1 100 98 -7 1 -1\") = \"4\" ]]\n    [[ $(candidate\
    \ \"12 23 34 -45 -56 0\") = \"5\" ]]\n    [[ $(candidate \"0 1\") = \"1\" ]]\n\
    \    [[ $(candidate \"1\") = \"1\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660004374

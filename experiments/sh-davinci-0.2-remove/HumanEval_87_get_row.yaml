name: HumanEval_87_get_row
language: sh
prompt: "#!/bin/bash\n# You are given a 2 dimensional data, as a nested lists,\n#\
  \ which is similar to matrix, however, unlike matrices,\n# each row may contain\
  \ a different number of columns.\n# Given lst, and integer x, find integers x in\
  \ the list,\n# and return list of tuples, [(x1, y1), (x2, y2) ...] such that\n#\
  \ each tuple is a coordinate - (row, columns), starting with 0.\n# Sort coordinates\
  \ initially by rows in ascending order.\n# Also, sort coordinates of the row by\
  \ columns in descending order.\n# Examples:\n#\n# $1 is a newline-separated, space-separated\
  \ list\n# $2 is an integer\nget_row() {\n"
tests: "}\n\ncandidate() {\n    get_row \"$@\"\n}\n\nset -e\nrun_test() {\n    [[\
  \ $(candidate \"1 2 3 4 5 6\\n1 2 3 4 1 6\\n1 2 3 4 5 1\" \"1\") = \"0 0\\n1 4\\\
  n1 0\\n2 5\\n2 0\" ]]\n    [[ $(candidate \"1 2 3 4 5 6\\n1 2 3 4 5 6\\n1 2 3 4\
  \ 5 6\\n1 2 3 4 5 6\\n1 2 3 4 5 6\\n1 2 3 4 5 6\" \"2\") = \"0 1\\n1 1\\n2 1\\n3\
  \ 1\\n4 1\\n5 1\" ]]\n    [[ $(candidate \"1 2 3 4 5 6\\n1 2 3 4 5 6\\n1 1 3 4 5\
  \ 6\\n1 2 1 4 5 6\\n1 2 3 1 5 6\\n1 2 3 4 1 6\\n1 2 3 4 5 1\" \"1\") = \"0 0\\n1\
  \ 0\\n2 1\\n2 0\\n3 2\\n3 0\\n4 3\\n4 0\\n5 4\\n5 0\\n6 5\\n6 0\" ]]\n    [[ $(candidate\
  \ \"\" \"1\") = \"\" ]]\n    [[ $(candidate \"1\" \"2\") = \"\" ]]\n    [[ $(candidate\
  \ \"\\n1\\n1 2 3\" \"3\") = \"2 2\" ]]\n}\n\nrun_test"
completions: ["    echo \"$1\" | awk '{print $1}'", "    echo \"$1\" | awk -v row=\"\
    $2\" '{print $row}'", "    echo \"$1\" | awk -v row=$2 '{print $row}'", "    echo\
    \ \"$1\" | awk -v row=\"$2\" '{print $row}'", "    echo \"$1\" | awk -v row=\"\
    $2\" '{print $row}'", "    echo \"$1\" | awk -v row=$2 'NR == row { print $0 }'",
  "    echo \"$1\" | awk -v row=$2 '{print $row}'", "    echo \"$1\" | awk -v row=\"\
    $2\" 'NR == row { print }'", "    local lst=\"$1\"\n    local row=\"$2\"\n   \
    \ echo \"$lst\" | head -n \"$((row + 1))\" | tail -n 1", "    echo \"$1\" | awk\
    \ -v row=$2 '{print $row}'", "    echo \"$1\" | awk -v row=\"$2\" '{print $row}'",
  "    local row=$1\n    local lst=$2\n    echo \"$lst\" | head -n $row | tail -n\
    \ 1", "    local row=$1\n    local lst=$2\n    echo \"$lst\" | head -n $row |\
    \ tail -n 1", "    echo \"$1\" | awk -v row=$2 '{print $row}'", "    echo \"$1\"\
    \ | awk -v row=\"$2\" '{print $row}'", "    echo \"$1\" | awk -v row=\"$2\" '{print\
    \ $row}'", "    echo \"$1\" | awk -v row=$2 '{print $row}'", "    echo \"$1\"\
    \ | awk -v row=\"$2\" 'NR == row { print $0 }'", "    echo \"$1\" | awk -v row=$2\
    \ '{print $row}'", "  echo \"$1\" | awk -v row=$2 'NR == row { print $0 }'", " \
    \   echo \"$1\" | awk -v row=$2 'NR == row {print $0}'", "    echo \"$1\" | awk\
    \ -v row=$2 '{print $row}'", "  local row=$1\n  local lst=$2\n  echo \"$lst\"\
    \ | head -n $row | tail -n 1", "    echo \"$1\" | awk -v row=$2 'NR == row {print\
    \ $0}'", "    echo \"$1\" | awk -v row=$2 '{print $row}'", "    echo \"$1\" |\
    \ awk -v row=$2 '{print $row}'", "    echo \"$1\" | awk -v row=$2 '{print $row}'",
  "    echo \"$1\" | awk -v row=$2 '{print $row}'", "    echo \"$1\" | awk -v row=$2\
    \ '{print $row}'", "    echo \"$1\" | awk -v row=\"$2\" 'NR == row { print $0\
    \ }'", "    echo \"$1\" | awk -v row=$2 '{print $row}'", '    echo "$1" | head
    -n $2 | tail -n 1', "    echo \"$1\" | awk -v row=\"$2\" '{print $row}'", "  \
    \  echo \"$1\" | awk '{print $1}'", "    echo $1 | cut -d ' ' -f $2", "    echo\
    \ \"$1\" | awk '{print $1}'", "    echo \"$1\" | awk -v row=\"$2\" 'NR == row'",
  "    echo \"$1\" | awk -v row=$2 '{print $row}'", "    echo \"$1\" | awk -v row=$2\
    \ '{print $row}'", "    echo \"$1\" | awk -v row=$2 '{print $row}'", "    echo\
    \ \"$1\" | awk -v row=$2 '{print $row}'", "    echo \"$1\" | awk -v row=$2 '{print\
    \ $row}'", "    local row=$1\n    local lst=$2\n    echo \"$lst\" | head -n $row\
    \ | tail -n 1", "    echo \"$1\" | awk -v row=$2 '{print $row}'", "    echo \"\
    $1\" | awk -v row=$2 '{print $row}'", "    echo \"$1\" | awk -v row=$2 '{print\
    \ $row}'", "    echo \"$1\" | awk -v row=\"$2\" '{print $row}'", "    echo \"\
    $1\" | awk -v row=$2 'NR == row { print $0 }'", "    local row=$1\n    local lst=$2\n\
    \    echo \"$lst\" | head -n $row | tail -n 1", "    echo \"$1\" | awk -v row=$2\
    \ '{print $row}'", "    echo \"$1\" | awk -v row=$2 '{print $row}'", "    echo\
    \ \"$1\" | awk -v row=\"$2\" 'NR == row { print $0 }'", "    echo $1 | awk '{print\
    \ $1}'", '    echo "$1" | head -n $2 | tail -n 1', "    echo \"$1\" | awk -v row=$2\
    \ '{print $row}'", "    echo \"$1\" | awk -v row=$2 '{print $row}'", "    echo\
    \ \"$1\" | awk -v row=$2 '{print $row}'", "    echo \"$1\" | awk '{print $1}'",
  "    echo \"$1\" | awk -v row=$2 '{print $row}'", "    echo \"$1\" | awk -v row=$2\
    \ '{print $row}'", "    echo $1 | awk '{print $1}'", "    echo \"$1\" | awk -v\
    \ row=$2 '{print $row}'", "    echo \"$1\" | awk -v row=$2 '{print $row}'", " \
    \   echo \"$1\" | awk -v row=$2 '{print $row}'", "    echo \"$1\" | awk -v row=$2\
    \ '{print $row}'", "    echo \"$1\" | awk -v row=\"$2\" 'NR == row {print $0}'",
  "    echo \"$1\" | awk '{print $1}'", "    echo \"$1\" | awk -v row=\"$2\" 'NR ==\
    \ row { print $0 }'", "    echo \"$1\" | awk -v row=$2 '{print $row}'", "    echo\
    \ \"$1\" | awk -v row=$2 '{print $row}'", "    echo \"$1\" | awk -v row=$2 '{print\
    \ $row}'", "    echo \"$1\" | awk -v row=$2 '{print $row}'", "    echo \"$1\"\
    \ | awk -v row=$2 '{print $row}'", "    echo \"$1\" | awk -v row=$2 '{print $row}'",
  "    echo \"$1\" | awk -v row=$2 '{print $row}'", "    local row=$1\n    local lst=$2\n\
    \    echo \"$lst\" | head -n $row | tail -n 1", '    echo "$1" | head -n $2 |
    tail -n 1', "    local row=$1\n    local lst=$2\n    local x=$3\n    local row_lst=$(echo\
    \ \"$lst\" | head -n $row | tail -n 1)\n    local i=0\n    local res=\"\"\n  \
    \  for y in $row_lst; do\n        if [ $y -eq $x ]; then\n            res=\"$res\
    \ $i\"\n        fi\n        i=$((i+1))\n    done\n    echo $res", "    echo \"\
    $1\" | awk -v row=$2 'NR == row {print $0}'", "    echo \"$1\" | awk -v row=$2\
    \ '{print $row}'", "    local row=$1\n    local lst=$2\n    echo \"$lst\" | head\
    \ -n $row | tail -n 1", "    echo \"$1\" | awk -v row=\"$2\" 'NR == row {print\
    \ $0}'", "    echo \"$1\" | awk -v row=$2 'NR == row { print $0 }'", "    local\
    \ row=$1\n    local lst=$2\n    local x=$3\n    local row_lst=$(echo \"$lst\"\
    \ | head -n $row | tail -n 1)\n    local col=0\n    for i in $row_lst; do\n  \
    \      if [ $i -eq $x ]; then\n            echo \"$row $col\"\n        fi\n  \
    \      col=$((col+1))\n    done", "    echo \"$1\" | awk -v row=$2 '{print $row}'",
  "    echo \"$1\" | awk -v row=$2 'NR == row {print $0}'", "    echo \"$1\" | awk\
    \ -v row=\"$2\" 'NR == row { print $0 }'", "    echo \"$1\" | awk -v row=$2 '{print\
    \ $row}'", "    echo \"$1\" | awk -v row=$2 '{print $row}'", "    echo \"$1\"\
    \ | awk '{print $1}'", "    echo $1 | cut -d ' ' -f $2", "    echo \"$1\" | awk\
    \ -v row=$2 '{print $row}'", "    echo \"$1\" | awk -v row=$2 'NR == row {print}'",
  "    echo \"$1\" | awk -v row=$2 'NR == row {print $0}'", "    echo \"$1\" | awk\
    \ '{print $1}'", "  echo \"$1\" | awk -v row=$2 '{print $row}'", "    echo \"\
    $1\" | awk -v row=$2 '{print $row}'", "    echo \"$1\" | awk -v row=$2 '{print\
    \ $row}'", "    echo \"$1\" | awk -v row=\"$2\" 'NR == row {print $0}'", "  echo\
    \ \"$1\" | awk -v row=$2 'NR == row { print $0 }'", '    echo "$1" | head -n $2
    | tail -n 1', "    echo \"$1\" | awk -v row=$2 '{print $row}'", "    echo $1 |\
    \ cut -d ' ' -f $2", "    local row=$1\n    local lst=$2\n    local x=$3\n   \
    \ local i=0\n    local res=()\n    for col in $lst; do\n        if [[ $col -eq\
    \ $x ]]; then\n            res+=($row $i)\n        fi\n        i=$((i+1))\n  \
    \  done\n    echo ${res[@]}", "    echo \"$1\" | awk -v row=\"$2\" '{print $row}'",
  "    echo \"$1\" | awk '{print $1}'", "    echo \"$1\" | awk -v row=$2 '{print $row}'",
  "    echo \"$1\" | awk -v row=$2 'NR == row { print $0 }'", "    echo \"$1\" | awk\
    \ -v row=$2 '{print $row}'", "    echo \"$1\" | awk -v row=\"$2\" '{print $row}'",
  "    echo \"$1\" | awk -v row=\"$2\" '{print $row}'", "    echo \"$1\" | awk -v\
    \ row=$2 'NR == row {print $0}'", "    echo \"$1\" | awk -v row=$2 '{print $row}'",
  '    echo "$1" | head -n $2 | tail -n 1', "    echo \"$1\" | awk '{print $1}'",
  "    echo $1 | cut -d' ' -f$2", "    echo \"$1\" | awk '{print $1}'", "    echo\
    \ \"$1\" | awk -v row=$2 '{print $row}'", '    echo "$1" | sed -n "$2p"', "  \
    \  echo \"$1\" | awk -v row=$2 '{print $row}'", "    echo \"$1\" | awk -v row=$2\
    \ 'NR == row { print $0 }'", "    echo \"$1\" | awk -v row=\"$2\" '{print $row}'",
  "    echo \"$1\" | awk -v row=$2 'NR == row { print $0 }'", "    echo \"$1\" | awk\
    \ -v row=\"$2\" '{print $row}'", "    echo \"$1\" | awk -v row=$2 'NR == row {\
    \ print $0 }'", "    echo \"$1\" | awk -v row=$2 'NR == row { print $0 }'", " \
    \   echo \"$1\" | awk -v row=$2 'NR == row {print $0}'", "    echo \"$1\" | awk\
    \ -v row=$2 '{print $row}'", "    echo \"$1\" | awk -v row=$2 '{print $row}'",
  "    echo \"$1\" | awk -v row=$2 '{print $row}'", "    echo \"$1\" | awk '{print\
    \ $1}'", "    local row=$1\n    local lst=$2\n    local x=$3\n    local res=()\n\
    \    local i=0\n    for item in $lst; do\n        if [ $item -eq $x ]; then\n\
    \            res+=($i)\n        fi\n        i=$((i+1))\n    done\n    echo \"\
    ${res[@]}\"", "    echo \"$1\" | awk -v row=$2 '{print $row}'", "    echo \"$1\"\
    \ | awk -v row=$2 '{print $row}'", "    echo \"$1\" | awk -v row=$2 '{print $row}'",
  "    echo \"$1\" | awk -v row=$2 '{print $row}'", "    local lst=\"$1\"\n    local\
    \ x=\"$2\"\n    local row=0\n    local col=0\n    local result=()\n    while read\
    \ -r line; do\n        col=0\n        for i in $line; do\n            if [[ $i\
    \ -eq $x ]]; then\n                result+=(\"($row, $col)\")\n            fi\n\
    \            col=$((col+1))\n        done\n        row=$((row+1))\n    done <<<\
    \ \"$lst\"\n    echo \"${result[@]}\"", "    echo \"$1\" | awk -v row=$2 'NR ==\
    \ row {print $0}'", "  echo \"$1\" | awk -v row=\"$2\" '{print $row}'", "  echo\
    \ \"$1\" | awk -v row=$2 '{print $row}'", "    echo \"$1\" | awk -v row=$2 '{print\
    \ $row}'", "  echo \"$1\" | awk -v row=\"$2\" '{print $row}'", "    echo \"$1\"\
    \ | awk -v row=$2 'NR == row { print $0 }'", "    local lst=\"$1\"\n    local\
    \ x=\"$2\"\n    local row=0\n    local col=0\n    local res=\"\"\n    while read\
    \ -r line; do\n        col=0\n        for i in $line; do\n            if [[ $i\
    \ -eq $x ]]; then\n                res=\"$res($row,$col) \"\n            fi\n\
    \            col=$((col+1))\n        done\n        row=$((row+1))\n    done <<<\
    \ \"$lst\"\n    echo \"$res\"", "    echo \"$1\" | awk -v row=$2 '{print $row}'",
  "    echo \"$1\" | awk -v row=\"$2\" 'NR == row {print $0}'", "    echo \"$1\" |\
    \ awk -v row=$2 '{print $row}'", "    echo \"$1\" | awk -v row=$2 '{print $row}'",
  "    echo \"$1\" | awk -v row=$2 'NR == row { print $0 }'", "    echo \"$1\" | awk\
    \ -v row=$2 '{print $row}'", "    echo \"$1\" | awk '{print $1}'", "    echo \"\
    $1\" | awk -v row=$2 '{print $row}'", "    echo \"$1\" | awk -v row=\"$2\" 'NR\
    \ == row {print $0}'", "    echo \"$1\" | awk -v row=\"$2\" '{print $row}'", " \
    \   echo \"$1\" | awk -v row=$2 '{print $row}'", "    echo \"$1\" | awk -v row=\"\
    $2\" '{print $row}'", "    echo \"$1\" | awk -v row=$2 '{print $row}'", "    echo\
    \ $1 | cut -d ' ' -f $2", "    echo \"$1\" | awk -v row=$2 '{print $row}'", " \
    \   echo \"$1\" | awk -v row=$2 'NR == row {print $0}'", "    echo \"$1\" | awk\
    \ -v row=$2 'NR == row { print $0 }'", "    echo \"$1\" | awk -v row=\"$2\" 'NR\
    \ == row { print $0 }'", "    echo \"$1\" | awk -v row=$2 'NR == row { print $0\
    \ }'", "    echo \"$1\" | awk -v row=$2 '{print $row}'", "    echo \"$1\" | awk\
    \ -v row=$2 '{print $row}'", "    echo \"$1\" | awk -v row=\"$2\" '{print $row}'",
  "    echo \"$1\" | awk -v row=$2 '{print $row}'", "    echo \"$1\" | awk -v row=$2\
    \ 'NR == row { print $0 }'", '    echo "$1" | head -n $2 | tail -n 1', '    echo
    "$1" | sed -n "$2p"', "    echo \"$1\" | awk -v row=$2 '{print $row}'", "    echo\
    \ \"$1\" | awk -v row=$2 '{print $row}'", '    echo "$1" | head -n $2 | tail -n
    1', "  echo \"$1\" | awk -v row=$2 '{print $row}'", "    echo \"$1\" | awk -v\
    \ row=$2 '{print $row}'", "    echo \"$1\" | awk '{print $1}'", "    echo \"$1\"\
    \ | awk -v row=$2 'NR == row'", "    local row=$1\n    local lst=$2\n    local\
    \ cols=$(echo \"$lst\" | head -n $row | tail -n 1 | wc -w)\n    local i\n    for\
    \ ((i=1; i<=$cols; i++)); do\n        echo \"$row $i\"\n    done", '    echo "$1"
    | head -n $2 | tail -n 1', "    echo \"$1\" | awk -v row=$2 '{print $row}'", " \
    \   echo \"$1\" | awk -v row=\"$2\" '{print $row}'", "    echo \"$1\" | awk '{print\
    \ $1}'", '    echo "$1" | head -n $2 | tail -n 1', "    echo \"$1\" | awk -v row=\"\
    $2\" '{if (NR == row) print $0}'", "    echo \"$1\" | awk -v row=$2 '{print $row}'",
  "    echo \"$1\" | awk -v row=$2 'NR == row { print $0 }'", '    echo "$1" | sed
    -n "$2p"', "    echo \"$1\" | awk -v row=\"$2\" 'NR == row { print $0 }'", " \
    \   local row=\"$1\"\n    local x=\"$2\"\n    local i=0\n    local result=\"\"\
    \n    for y in $row; do\n        if [ \"$y\" == \"$x\" ]; then\n            result=\"\
    $result $i\"\n        fi\n        i=$((i+1))\n    done\n    echo \"$result\"",
  "    echo \"$1\" | awk -v row=$2 '{print $row}'", "    echo \"$1\" | awk -v row=$2\
    \ '{print $row}'", "    local row=$1\n    local lst=$2\n    echo \"$lst\" | head\
    \ -n $row | tail -n 1", "    echo \"$1\" | awk -v row=$2 '{print $row}'", "  \
    \  echo \"$1\" | awk -v row=$2 '{print $row}'", "    echo \"$1\" | awk -v row=$2\
    \ 'NR == row { print }'", "    echo \"$1\" | awk -v row=\"$2\" '{print $row}'",
  "    echo \"$1\" | awk -v row=$2 'NR == row'", "    echo \"$1\" | awk -v row=\"\
    $2\" 'NR == row { print $0 }'", "    echo \"$1\" | awk -v row=$2 '{print $row}'",
  '    echo "$1" | head -n $2 | tail -n 1']
stop_tokens:
- "\n}"

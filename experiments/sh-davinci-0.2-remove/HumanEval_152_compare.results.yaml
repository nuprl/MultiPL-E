language: sh
name: HumanEval_152_compare
results:
- exit_code: 0
  program: "#!/bin/bash\n# I think we all remember that feeling when the result of\
    \ some long-awaited\n# event is finally known. The feelings and thoughts you have\
    \ at that moment are\n# definitely worth noting down and comparing.\n# Your task\
    \ is to determine if a person correctly guessed the results of a number of matches.\n\
    # You are given two arrays of scores and guesses of equal length, where each index\
    \ shows a match. \n# Return an array of the same length denoting how far off each\
    \ guess was. If they have guessed correctly,\n# the value is 0, and if not, the\
    \ value is the absolute difference between the guess and the score.\n# example:\n\
    #\n# $1 is a space-separated list\n# $2 is a space-separated list\ncompare() {\n\
    \    local score=($1)\n    local guess=($2)\n    local result=()\n    for ((i=0;\
    \ i<${#score[@]}; i++)); do\n        result[i]=$((${score[i]}-${guess[i]}))\n\
    \        if [[ ${result[i]} -lt 0 ]]; then\n            result[i]=$((-${result[i]}))\n\
    \        fi\n    done\n    echo ${result[@]}\n}\n\ncandidate() {\n    compare\
    \ \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"1 2 3 4 5 1\" \"1 2\
    \ 3 4 2 -2\") = \"0 0 0 0 3 3\" ]]\n    [[ $(candidate \"0 0 0 0 0 0\" \"0 0 0\
    \ 0 0 0\") = \"0 0 0 0 0 0\" ]]\n    [[ $(candidate \"1 2 3\" \"-1 -2 -3\") =\
    \ \"2 4 6\" ]]\n    [[ $(candidate \"1 2 3 5\" \"-1 2 3 4\") = \"2 0 0 1\" ]]\n\
    }\n\nrun_test"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660002210
- exit_code: 1
  program: "#!/bin/bash\n# I think we all remember that feeling when the result of\
    \ some long-awaited\n# event is finally known. The feelings and thoughts you have\
    \ at that moment are\n# definitely worth noting down and comparing.\n# Your task\
    \ is to determine if a person correctly guessed the results of a number of matches.\n\
    # You are given two arrays of scores and guesses of equal length, where each index\
    \ shows a match. \n# Return an array of the same length denoting how far off each\
    \ guess was. If they have guessed correctly,\n# the value is 0, and if not, the\
    \ value is the absolute difference between the guess and the score.\n# example:\n\
    #\n# $1 is a space-separated list\n# $2 is a space-separated list\ncompare() {\n\
    \    local -n scores=$1\n    local -n guesses=$2\n    local -a result=()\n   \
    \ for ((i=0; i<${#scores[@]}; i++)); do\n        result[i]=$((${scores[i]}-${guesses[i]}))\n\
    \        result[i]=${result[i]#-}\n    done\n    echo \"${result[@]}\"\n}\n\n\
    candidate() {\n    compare \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate\
    \ \"1 2 3 4 5 1\" \"1 2 3 4 2 -2\") = \"0 0 0 0 3 3\" ]]\n    [[ $(candidate \"\
    0 0 0 0 0 0\" \"0 0 0 0 0 0\") = \"0 0 0 0 0 0\" ]]\n    [[ $(candidate \"1 2\
    \ 3\" \"-1 -2 -3\") = \"2 4 6\" ]]\n    [[ $(candidate \"1 2 3 5\" \"-1 2 3 4\"\
    ) = \"2 0 0 1\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: '/tmp/tmpzoktlrjj.sh: line 14: local: `1 2 3 4 5 1'': invalid variable name
    for name reference

    /tmp/tmpzoktlrjj.sh: line 15: local: `1 2 3 4 2 -2'': invalid variable name for
    name reference

    '
  stdout: ''
  timestamp: 1660002210
- exit_code: 0
  program: "#!/bin/bash\n# I think we all remember that feeling when the result of\
    \ some long-awaited\n# event is finally known. The feelings and thoughts you have\
    \ at that moment are\n# definitely worth noting down and comparing.\n# Your task\
    \ is to determine if a person correctly guessed the results of a number of matches.\n\
    # You are given two arrays of scores and guesses of equal length, where each index\
    \ shows a match. \n# Return an array of the same length denoting how far off each\
    \ guess was. If they have guessed correctly,\n# the value is 0, and if not, the\
    \ value is the absolute difference between the guess and the score.\n# example:\n\
    #\n# $1 is a space-separated list\n# $2 is a space-separated list\ncompare() {\n\
    \    local -a scores=($1)\n    local -a guesses=($2)\n    local -a result=()\n\
    \    for ((i=0; i<${#scores[@]}; i++)); do\n        if [[ ${scores[$i]} -eq ${guesses[$i]}\
    \ ]]; then\n            result[$i]=0\n        else\n            result[$i]=$((\
    \ ${scores[$i]} - ${guesses[$i]} ))\n        fi\n    done\n    echo ${result[@]}\n\
    }\n\ncandidate() {\n    compare \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate\
    \ \"1 2 3 4 5 1\" \"1 2 3 4 2 -2\") = \"0 0 0 0 3 3\" ]]\n    [[ $(candidate \"\
    0 0 0 0 0 0\" \"0 0 0 0 0 0\") = \"0 0 0 0 0 0\" ]]\n    [[ $(candidate \"1 2\
    \ 3\" \"-1 -2 -3\") = \"2 4 6\" ]]\n    [[ $(candidate \"1 2 3 5\" \"-1 2 3 4\"\
    ) = \"2 0 0 1\" ]]\n}\n\nrun_test"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660002209
- exit_code: 0
  program: "#!/bin/bash\n# I think we all remember that feeling when the result of\
    \ some long-awaited\n# event is finally known. The feelings and thoughts you have\
    \ at that moment are\n# definitely worth noting down and comparing.\n# Your task\
    \ is to determine if a person correctly guessed the results of a number of matches.\n\
    # You are given two arrays of scores and guesses of equal length, where each index\
    \ shows a match. \n# Return an array of the same length denoting how far off each\
    \ guess was. If they have guessed correctly,\n# the value is 0, and if not, the\
    \ value is the absolute difference between the guess and the score.\n# example:\n\
    #\n# $1 is a space-separated list\n# $2 is a space-separated list\ncompare() {\n\
    \    local -a scores=($1)\n    local -a guesses=($2)\n    local -a result=()\n\
    \    for i in ${!scores[@]}; do\n        if [[ ${scores[$i]} -eq ${guesses[$i]}\
    \ ]]; then\n            result+=(0)\n        else\n            result+=($((${scores[$i]}\
    \ - ${guesses[$i]})))\n        fi\n    done\n    echo ${result[@]}\n}\n\ncandidate()\
    \ {\n    compare \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"1 2 3\
    \ 4 5 1\" \"1 2 3 4 2 -2\") = \"0 0 0 0 3 3\" ]]\n    [[ $(candidate \"0 0 0 0\
    \ 0 0\" \"0 0 0 0 0 0\") = \"0 0 0 0 0 0\" ]]\n    [[ $(candidate \"1 2 3\" \"\
    -1 -2 -3\") = \"2 4 6\" ]]\n    [[ $(candidate \"1 2 3 5\" \"-1 2 3 4\") = \"\
    2 0 0 1\" ]]\n}\n\nrun_test"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660002210
- exit_code: 1
  program: "#!/bin/bash\n# I think we all remember that feeling when the result of\
    \ some long-awaited\n# event is finally known. The feelings and thoughts you have\
    \ at that moment are\n# definitely worth noting down and comparing.\n# Your task\
    \ is to determine if a person correctly guessed the results of a number of matches.\n\
    # You are given two arrays of scores and guesses of equal length, where each index\
    \ shows a match. \n# Return an array of the same length denoting how far off each\
    \ guess was. If they have guessed correctly,\n# the value is 0, and if not, the\
    \ value is the absolute difference between the guess and the score.\n# example:\n\
    #\n# $1 is a space-separated list\n# $2 is a space-separated list\ncompare() {\n\
    \    local -n scores=$1\n    local -n guesses=$2\n    local result=()\n    for\
    \ i in ${!scores[@]}; do\n        result+=($((${scores[$i]}-${guesses[$i]})))\n\
    \    done\n    echo \"${result[@]}\"\n}\n\ncandidate() {\n    compare \"$@\"\n\
    }\n\nset -e\nrun_test() {\n    [[ $(candidate \"1 2 3 4 5 1\" \"1 2 3 4 2 -2\"\
    ) = \"0 0 0 0 3 3\" ]]\n    [[ $(candidate \"0 0 0 0 0 0\" \"0 0 0 0 0 0\") =\
    \ \"0 0 0 0 0 0\" ]]\n    [[ $(candidate \"1 2 3\" \"-1 -2 -3\") = \"2 4 6\" ]]\n\
    \    [[ $(candidate \"1 2 3 5\" \"-1 2 3 4\") = \"2 0 0 1\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: '/tmp/tmpv9v7w0jy.sh: line 14: local: `1 2 3 4 5 1'': invalid variable name
    for name reference

    /tmp/tmpv9v7w0jy.sh: line 15: local: `1 2 3 4 2 -2'': invalid variable name for
    name reference

    '
  stdout: ''
  timestamp: 1660002209
- exit_code: 1
  program: "#!/bin/bash\n# I think we all remember that feeling when the result of\
    \ some long-awaited\n# event is finally known. The feelings and thoughts you have\
    \ at that moment are\n# definitely worth noting down and comparing.\n# Your task\
    \ is to determine if a person correctly guessed the results of a number of matches.\n\
    # You are given two arrays of scores and guesses of equal length, where each index\
    \ shows a match. \n# Return an array of the same length denoting how far off each\
    \ guess was. If they have guessed correctly,\n# the value is 0, and if not, the\
    \ value is the absolute difference between the guess and the score.\n# example:\n\
    #\n# $1 is a space-separated list\n# $2 is a space-separated list\ncompare() {\n\
    \    local -n scores=$1\n    local -n guesses=$2\n    local -a result=()\n   \
    \ for ((i=0; i<${#scores[@]}; i++)); do\n        local diff=$(( ${scores[$i]}\
    \ - ${guesses[$i]} ))\n        if (( diff < 0 )); then\n            diff=$(( -diff\
    \ ))\n        fi\n        result+=( $diff )\n    done\n    echo \"${result[@]}\"\
    \n}\n\ncandidate() {\n    compare \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate\
    \ \"1 2 3 4 5 1\" \"1 2 3 4 2 -2\") = \"0 0 0 0 3 3\" ]]\n    [[ $(candidate \"\
    0 0 0 0 0 0\" \"0 0 0 0 0 0\") = \"0 0 0 0 0 0\" ]]\n    [[ $(candidate \"1 2\
    \ 3\" \"-1 -2 -3\") = \"2 4 6\" ]]\n    [[ $(candidate \"1 2 3 5\" \"-1 2 3 4\"\
    ) = \"2 0 0 1\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: '/tmp/tmpx4x5gm_5.sh: line 14: local: `1 2 3 4 5 1'': invalid variable name
    for name reference

    /tmp/tmpx4x5gm_5.sh: line 15: local: `1 2 3 4 2 -2'': invalid variable name for
    name reference

    '
  stdout: ''
  timestamp: 1660002209
- exit_code: 0
  program: "#!/bin/bash\n# I think we all remember that feeling when the result of\
    \ some long-awaited\n# event is finally known. The feelings and thoughts you have\
    \ at that moment are\n# definitely worth noting down and comparing.\n# Your task\
    \ is to determine if a person correctly guessed the results of a number of matches.\n\
    # You are given two arrays of scores and guesses of equal length, where each index\
    \ shows a match. \n# Return an array of the same length denoting how far off each\
    \ guess was. If they have guessed correctly,\n# the value is 0, and if not, the\
    \ value is the absolute difference between the guess and the score.\n# example:\n\
    #\n# $1 is a space-separated list\n# $2 is a space-separated list\ncompare() {\n\
    \    local -a scores=($1)\n    local -a guesses=($2)\n    local -a result=()\n\
    \    for ((i=0; i<${#scores[@]}; i++)); do\n        if [[ ${scores[$i]} -eq ${guesses[$i]}\
    \ ]]; then\n            result[$i]=0\n        else\n            result[$i]=$((\
    \ ${scores[$i]} - ${guesses[$i]} ))\n        fi\n    done\n    echo ${result[@]}\n\
    }\n\ncandidate() {\n    compare \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate\
    \ \"1 2 3 4 5 1\" \"1 2 3 4 2 -2\") = \"0 0 0 0 3 3\" ]]\n    [[ $(candidate \"\
    0 0 0 0 0 0\" \"0 0 0 0 0 0\") = \"0 0 0 0 0 0\" ]]\n    [[ $(candidate \"1 2\
    \ 3\" \"-1 -2 -3\") = \"2 4 6\" ]]\n    [[ $(candidate \"1 2 3 5\" \"-1 2 3 4\"\
    ) = \"2 0 0 1\" ]]\n}\n\nrun_test"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660002209
- exit_code: 1
  program: "#!/bin/bash\n# I think we all remember that feeling when the result of\
    \ some long-awaited\n# event is finally known. The feelings and thoughts you have\
    \ at that moment are\n# definitely worth noting down and comparing.\n# Your task\
    \ is to determine if a person correctly guessed the results of a number of matches.\n\
    # You are given two arrays of scores and guesses of equal length, where each index\
    \ shows a match. \n# Return an array of the same length denoting how far off each\
    \ guess was. If they have guessed correctly,\n# the value is 0, and if not, the\
    \ value is the absolute difference between the guess and the score.\n# example:\n\
    #\n# $1 is a space-separated list\n# $2 is a space-separated list\ncompare() {\n\
    \    local -n a=$1\n    local -n b=$2\n    local -a result=()\n    for ((i=0;\
    \ i<${#a[@]}; i++)); do\n        result+=($((${a[$i]} - ${b[$i]})))\n    done\n\
    \    echo \"${result[@]}\"\n}\n\ncandidate() {\n    compare \"$@\"\n}\n\nset -e\n\
    run_test() {\n    [[ $(candidate \"1 2 3 4 5 1\" \"1 2 3 4 2 -2\") = \"0 0 0 0\
    \ 3 3\" ]]\n    [[ $(candidate \"0 0 0 0 0 0\" \"0 0 0 0 0 0\") = \"0 0 0 0 0\
    \ 0\" ]]\n    [[ $(candidate \"1 2 3\" \"-1 -2 -3\") = \"2 4 6\" ]]\n    [[ $(candidate\
    \ \"1 2 3 5\" \"-1 2 3 4\") = \"2 0 0 1\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: '/tmp/tmp32pnzcyn.sh: line 14: local: `1 2 3 4 5 1'': invalid variable name
    for name reference

    /tmp/tmp32pnzcyn.sh: line 15: local: `1 2 3 4 2 -2'': invalid variable name for
    name reference

    '
  stdout: ''
  timestamp: 1660002210
- exit_code: 1
  program: "#!/bin/bash\n# I think we all remember that feeling when the result of\
    \ some long-awaited\n# event is finally known. The feelings and thoughts you have\
    \ at that moment are\n# definitely worth noting down and comparing.\n# Your task\
    \ is to determine if a person correctly guessed the results of a number of matches.\n\
    # You are given two arrays of scores and guesses of equal length, where each index\
    \ shows a match. \n# Return an array of the same length denoting how far off each\
    \ guess was. If they have guessed correctly,\n# the value is 0, and if not, the\
    \ value is the absolute difference between the guess and the score.\n# example:\n\
    #\n# $1 is a space-separated list\n# $2 is a space-separated list\ncompare() {\n\
    \    local -n scores=$1\n    local -n guesses=$2\n    local -a result\n    for\
    \ ((i=0; i<${#scores[@]}; i++)); do\n        if [[ ${scores[$i]} -eq ${guesses[$i]}\
    \ ]]; then\n            result[$i]=0\n        else\n            result[$i]=$((\
    \ ${scores[$i]} - ${guesses[$i]} ))\n        fi\n    done\n    echo ${result[@]}\n\
    }\n\ncandidate() {\n    compare \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate\
    \ \"1 2 3 4 5 1\" \"1 2 3 4 2 -2\") = \"0 0 0 0 3 3\" ]]\n    [[ $(candidate \"\
    0 0 0 0 0 0\" \"0 0 0 0 0 0\") = \"0 0 0 0 0 0\" ]]\n    [[ $(candidate \"1 2\
    \ 3\" \"-1 -2 -3\") = \"2 4 6\" ]]\n    [[ $(candidate \"1 2 3 5\" \"-1 2 3 4\"\
    ) = \"2 0 0 1\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: '/tmp/tmpxiv6gpn6.sh: line 14: local: `1 2 3 4 5 1'': invalid variable name
    for name reference

    /tmp/tmpxiv6gpn6.sh: line 15: local: `1 2 3 4 2 -2'': invalid variable name for
    name reference

    '
  stdout: ''
  timestamp: 1660002210
- exit_code: 1
  program: "#!/bin/bash\n# I think we all remember that feeling when the result of\
    \ some long-awaited\n# event is finally known. The feelings and thoughts you have\
    \ at that moment are\n# definitely worth noting down and comparing.\n# Your task\
    \ is to determine if a person correctly guessed the results of a number of matches.\n\
    # You are given two arrays of scores and guesses of equal length, where each index\
    \ shows a match. \n# Return an array of the same length denoting how far off each\
    \ guess was. If they have guessed correctly,\n# the value is 0, and if not, the\
    \ value is the absolute difference between the guess and the score.\n# example:\n\
    #\n# $1 is a space-separated list\n# $2 is a space-separated list\ncompare() {\n\
    \    local score guess\n    local -a result\n    for ((i=0; i<${#1}; i++)); do\n\
    \        score=${1[i]}\n        guess=${2[i]}\n        if [[ $score -eq $guess\
    \ ]]; then\n            result[i]=0\n        else\n            result[i]=$((score-guess))\n\
    \        fi\n    done\n    echo ${result[@]}\n}\n\ncandidate() {\n    compare\
    \ \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"1 2 3 4 5 1\" \"1 2\
    \ 3 4 2 -2\") = \"0 0 0 0 3 3\" ]]\n    [[ $(candidate \"0 0 0 0 0 0\" \"0 0 0\
    \ 0 0 0\") = \"0 0 0 0 0 0\" ]]\n    [[ $(candidate \"1 2 3\" \"-1 -2 -3\") =\
    \ \"2 4 6\" ]]\n    [[ $(candidate \"1 2 3 5\" \"-1 2 3 4\") = \"2 0 0 1\" ]]\n\
    }\n\nrun_test"
  status: Exception
  stderr: '/tmp/tmpf9dy4evd.sh: line 17: ${1[i]}: bad substitution

    '
  stdout: ''
  timestamp: 1660002210
- exit_code: 1
  program: "#!/bin/bash\n# I think we all remember that feeling when the result of\
    \ some long-awaited\n# event is finally known. The feelings and thoughts you have\
    \ at that moment are\n# definitely worth noting down and comparing.\n# Your task\
    \ is to determine if a person correctly guessed the results of a number of matches.\n\
    # You are given two arrays of scores and guesses of equal length, where each index\
    \ shows a match. \n# Return an array of the same length denoting how far off each\
    \ guess was. If they have guessed correctly,\n# the value is 0, and if not, the\
    \ value is the absolute difference between the guess and the score.\n# example:\n\
    #\n# $1 is a space-separated list\n# $2 is a space-separated list\ncompare() {\n\
    \    local -n scores=$1\n    local -n guesses=$2\n    local -a result=()\n   \
    \ for i in ${!scores[@]}; do\n        if [[ ${scores[$i]} -eq ${guesses[$i]} ]];\
    \ then\n            result+=(\"0\")\n        else\n            result+=(\"$((${scores[$i]}\
    \ - ${guesses[$i]}))\")\n        fi\n    done\n    echo \"${result[@]}\"\n}\n\n\
    candidate() {\n    compare \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate\
    \ \"1 2 3 4 5 1\" \"1 2 3 4 2 -2\") = \"0 0 0 0 3 3\" ]]\n    [[ $(candidate \"\
    0 0 0 0 0 0\" \"0 0 0 0 0 0\") = \"0 0 0 0 0 0\" ]]\n    [[ $(candidate \"1 2\
    \ 3\" \"-1 -2 -3\") = \"2 4 6\" ]]\n    [[ $(candidate \"1 2 3 5\" \"-1 2 3 4\"\
    ) = \"2 0 0 1\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: '/tmp/tmpop5nekih.sh: line 14: local: `1 2 3 4 5 1'': invalid variable name
    for name reference

    /tmp/tmpop5nekih.sh: line 15: local: `1 2 3 4 2 -2'': invalid variable name for
    name reference

    '
  stdout: ''
  timestamp: 1660002210
- exit_code: 1
  program: "#!/bin/bash\n# I think we all remember that feeling when the result of\
    \ some long-awaited\n# event is finally known. The feelings and thoughts you have\
    \ at that moment are\n# definitely worth noting down and comparing.\n# Your task\
    \ is to determine if a person correctly guessed the results of a number of matches.\n\
    # You are given two arrays of scores and guesses of equal length, where each index\
    \ shows a match. \n# Return an array of the same length denoting how far off each\
    \ guess was. If they have guessed correctly,\n# the value is 0, and if not, the\
    \ value is the absolute difference between the guess and the score.\n# example:\n\
    #\n# $1 is a space-separated list\n# $2 is a space-separated list\ncompare() {\n\
    \    local -n scores=$1\n    local -n guesses=$2\n    local -a result=()\n   \
    \ for ((i=0; i<${#scores[@]}; i++)); do\n        result+=($((${scores[$i]} - ${guesses[$i]})))\n\
    \    done\n    echo \"${result[@]}\"\n}\n\ncandidate() {\n    compare \"$@\"\n\
    }\n\nset -e\nrun_test() {\n    [[ $(candidate \"1 2 3 4 5 1\" \"1 2 3 4 2 -2\"\
    ) = \"0 0 0 0 3 3\" ]]\n    [[ $(candidate \"0 0 0 0 0 0\" \"0 0 0 0 0 0\") =\
    \ \"0 0 0 0 0 0\" ]]\n    [[ $(candidate \"1 2 3\" \"-1 -2 -3\") = \"2 4 6\" ]]\n\
    \    [[ $(candidate \"1 2 3 5\" \"-1 2 3 4\") = \"2 0 0 1\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: '/tmp/tmpj_hkzzds.sh: line 14: local: `1 2 3 4 5 1'': invalid variable name
    for name reference

    /tmp/tmpj_hkzzds.sh: line 15: local: `1 2 3 4 2 -2'': invalid variable name for
    name reference

    '
  stdout: ''
  timestamp: 1660002210
- exit_code: 1
  program: "#!/bin/bash\n# I think we all remember that feeling when the result of\
    \ some long-awaited\n# event is finally known. The feelings and thoughts you have\
    \ at that moment are\n# definitely worth noting down and comparing.\n# Your task\
    \ is to determine if a person correctly guessed the results of a number of matches.\n\
    # You are given two arrays of scores and guesses of equal length, where each index\
    \ shows a match. \n# Return an array of the same length denoting how far off each\
    \ guess was. If they have guessed correctly,\n# the value is 0, and if not, the\
    \ value is the absolute difference between the guess and the score.\n# example:\n\
    #\n# $1 is a space-separated list\n# $2 is a space-separated list\ncompare() {\n\
    \  local -n scores=$1\n  local -n guesses=$2\n  local -a result=()\n  for ((i=0;\
    \ i<${#scores[@]}; i++)); do\n    local score=${scores[$i]}\n    local guess=${guesses[$i]}\n\
    \    if [[ $score -eq $guess ]]; then\n      result+=(0)\n    else\n      result+=($((score-guess)))\n\
    \    fi\n  done\n  echo \"${result[@]}\"\n}\n\ncandidate() {\n    compare \"$@\"\
    \n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"1 2 3 4 5 1\" \"1 2 3 4 2 -2\"\
    ) = \"0 0 0 0 3 3\" ]]\n    [[ $(candidate \"0 0 0 0 0 0\" \"0 0 0 0 0 0\") =\
    \ \"0 0 0 0 0 0\" ]]\n    [[ $(candidate \"1 2 3\" \"-1 -2 -3\") = \"2 4 6\" ]]\n\
    \    [[ $(candidate \"1 2 3 5\" \"-1 2 3 4\") = \"2 0 0 1\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: '/tmp/tmpsc_eo5o8.sh: line 14: local: `1 2 3 4 5 1'': invalid variable name
    for name reference

    /tmp/tmpsc_eo5o8.sh: line 15: local: `1 2 3 4 2 -2'': invalid variable name for
    name reference

    '
  stdout: ''
  timestamp: 1660002210
- exit_code: 1
  program: "#!/bin/bash\n# I think we all remember that feeling when the result of\
    \ some long-awaited\n# event is finally known. The feelings and thoughts you have\
    \ at that moment are\n# definitely worth noting down and comparing.\n# Your task\
    \ is to determine if a person correctly guessed the results of a number of matches.\n\
    # You are given two arrays of scores and guesses of equal length, where each index\
    \ shows a match. \n# Return an array of the same length denoting how far off each\
    \ guess was. If they have guessed correctly,\n# the value is 0, and if not, the\
    \ value is the absolute difference between the guess and the score.\n# example:\n\
    #\n# $1 is a space-separated list\n# $2 is a space-separated list\ncompare() {\n\
    \    local -n arr1=$1\n    local -n arr2=$2\n    local -a result\n    for ((i=0;\
    \ i<${#arr1[@]}; i++)); do\n        if [[ ${arr1[$i]} -eq ${arr2[$i]} ]]; then\n\
    \            result[$i]=0\n        else\n            result[$i]=$(( ${arr1[$i]}\
    \ - ${arr2[$i]} ))\n        fi\n    done\n    echo ${result[@]}\n}\n\ncandidate()\
    \ {\n    compare \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"1 2 3\
    \ 4 5 1\" \"1 2 3 4 2 -2\") = \"0 0 0 0 3 3\" ]]\n    [[ $(candidate \"0 0 0 0\
    \ 0 0\" \"0 0 0 0 0 0\") = \"0 0 0 0 0 0\" ]]\n    [[ $(candidate \"1 2 3\" \"\
    -1 -2 -3\") = \"2 4 6\" ]]\n    [[ $(candidate \"1 2 3 5\" \"-1 2 3 4\") = \"\
    2 0 0 1\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: '/tmp/tmp8pn6z8ln.sh: line 14: local: `1 2 3 4 5 1'': invalid variable name
    for name reference

    /tmp/tmp8pn6z8ln.sh: line 15: local: `1 2 3 4 2 -2'': invalid variable name for
    name reference

    '
  stdout: ''
  timestamp: 1660002210
- exit_code: 0
  program: "#!/bin/bash\n# I think we all remember that feeling when the result of\
    \ some long-awaited\n# event is finally known. The feelings and thoughts you have\
    \ at that moment are\n# definitely worth noting down and comparing.\n# Your task\
    \ is to determine if a person correctly guessed the results of a number of matches.\n\
    # You are given two arrays of scores and guesses of equal length, where each index\
    \ shows a match. \n# Return an array of the same length denoting how far off each\
    \ guess was. If they have guessed correctly,\n# the value is 0, and if not, the\
    \ value is the absolute difference between the guess and the score.\n# example:\n\
    #\n# $1 is a space-separated list\n# $2 is a space-separated list\ncompare() {\n\
    \    local -a scores=($1)\n    local -a guesses=($2)\n    local -a result=()\n\
    \    for ((i=0; i<${#scores[@]}; i++)); do\n        if [[ ${scores[$i]} -eq ${guesses[$i]}\
    \ ]]; then\n            result[$i]=0\n        else\n            result[$i]=$((\
    \ ${scores[$i]} - ${guesses[$i]} ))\n        fi\n    done\n    echo ${result[@]}\n\
    }\n\ncandidate() {\n    compare \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate\
    \ \"1 2 3 4 5 1\" \"1 2 3 4 2 -2\") = \"0 0 0 0 3 3\" ]]\n    [[ $(candidate \"\
    0 0 0 0 0 0\" \"0 0 0 0 0 0\") = \"0 0 0 0 0 0\" ]]\n    [[ $(candidate \"1 2\
    \ 3\" \"-1 -2 -3\") = \"2 4 6\" ]]\n    [[ $(candidate \"1 2 3 5\" \"-1 2 3 4\"\
    ) = \"2 0 0 1\" ]]\n}\n\nrun_test"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660002209
- exit_code: 1
  program: "#!/bin/bash\n# I think we all remember that feeling when the result of\
    \ some long-awaited\n# event is finally known. The feelings and thoughts you have\
    \ at that moment are\n# definitely worth noting down and comparing.\n# Your task\
    \ is to determine if a person correctly guessed the results of a number of matches.\n\
    # You are given two arrays of scores and guesses of equal length, where each index\
    \ shows a match. \n# Return an array of the same length denoting how far off each\
    \ guess was. If they have guessed correctly,\n# the value is 0, and if not, the\
    \ value is the absolute difference between the guess and the score.\n# example:\n\
    #\n# $1 is a space-separated list\n# $2 is a space-separated list\ncompare() {\n\
    \    local -n a=$1\n    local -n b=$2\n    local -a result=()\n    for ((i=0;\
    \ i<${#a[@]}; i++)); do\n        result+=($((${a[$i]} - ${b[$i]})))\n    done\n\
    \    echo \"${result[@]}\"\n}\n\ncandidate() {\n    compare \"$@\"\n}\n\nset -e\n\
    run_test() {\n    [[ $(candidate \"1 2 3 4 5 1\" \"1 2 3 4 2 -2\") = \"0 0 0 0\
    \ 3 3\" ]]\n    [[ $(candidate \"0 0 0 0 0 0\" \"0 0 0 0 0 0\") = \"0 0 0 0 0\
    \ 0\" ]]\n    [[ $(candidate \"1 2 3\" \"-1 -2 -3\") = \"2 4 6\" ]]\n    [[ $(candidate\
    \ \"1 2 3 5\" \"-1 2 3 4\") = \"2 0 0 1\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: '/tmp/tmp32pnzcyn.sh: line 14: local: `1 2 3 4 5 1'': invalid variable name
    for name reference

    /tmp/tmp32pnzcyn.sh: line 15: local: `1 2 3 4 2 -2'': invalid variable name for
    name reference

    '
  stdout: ''
  timestamp: 1660002210
- exit_code: 1
  program: "#!/bin/bash\n# I think we all remember that feeling when the result of\
    \ some long-awaited\n# event is finally known. The feelings and thoughts you have\
    \ at that moment are\n# definitely worth noting down and comparing.\n# Your task\
    \ is to determine if a person correctly guessed the results of a number of matches.\n\
    # You are given two arrays of scores and guesses of equal length, where each index\
    \ shows a match. \n# Return an array of the same length denoting how far off each\
    \ guess was. If they have guessed correctly,\n# the value is 0, and if not, the\
    \ value is the absolute difference between the guess and the score.\n# example:\n\
    #\n# $1 is a space-separated list\n# $2 is a space-separated list\ncompare() {\n\
    \    local -n a=$1\n    local -n b=$2\n    local -a result=()\n    for ((i=0;\
    \ i<${#a[@]}; i++)); do\n        if [[ ${a[$i]} -eq ${b[$i]} ]]; then\n      \
    \      result+=(0)\n        else\n            result+=($(( ${a[$i]} - ${b[$i]}\
    \ )))\n        fi\n    done\n    echo \"${result[@]}\"\n}\n\ncandidate() {\n \
    \   compare \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"1 2 3 4 5\
    \ 1\" \"1 2 3 4 2 -2\") = \"0 0 0 0 3 3\" ]]\n    [[ $(candidate \"0 0 0 0 0 0\"\
    \ \"0 0 0 0 0 0\") = \"0 0 0 0 0 0\" ]]\n    [[ $(candidate \"1 2 3\" \"-1 -2\
    \ -3\") = \"2 4 6\" ]]\n    [[ $(candidate \"1 2 3 5\" \"-1 2 3 4\") = \"2 0 0\
    \ 1\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: '/tmp/tmpdu31g5qy.sh: line 14: local: `1 2 3 4 5 1'': invalid variable name
    for name reference

    /tmp/tmpdu31g5qy.sh: line 15: local: `1 2 3 4 2 -2'': invalid variable name for
    name reference

    '
  stdout: ''
  timestamp: 1660002210
- exit_code: 1
  program: "#!/bin/bash\n# I think we all remember that feeling when the result of\
    \ some long-awaited\n# event is finally known. The feelings and thoughts you have\
    \ at that moment are\n# definitely worth noting down and comparing.\n# Your task\
    \ is to determine if a person correctly guessed the results of a number of matches.\n\
    # You are given two arrays of scores and guesses of equal length, where each index\
    \ shows a match. \n# Return an array of the same length denoting how far off each\
    \ guess was. If they have guessed correctly,\n# the value is 0, and if not, the\
    \ value is the absolute difference between the guess and the score.\n# example:\n\
    #\n# $1 is a space-separated list\n# $2 is a space-separated list\ncompare() {\n\
    \    local -n scores=$1\n    local -n guesses=$2\n    local -a result\n    for\
    \ ((i=0; i<${#scores[@]}; i++)); do\n        result+=($((${scores[$i]}-${guesses[$i]})))\n\
    \    done\n    echo \"${result[@]}\"\n}\n\ncandidate() {\n    compare \"$@\"\n\
    }\n\nset -e\nrun_test() {\n    [[ $(candidate \"1 2 3 4 5 1\" \"1 2 3 4 2 -2\"\
    ) = \"0 0 0 0 3 3\" ]]\n    [[ $(candidate \"0 0 0 0 0 0\" \"0 0 0 0 0 0\") =\
    \ \"0 0 0 0 0 0\" ]]\n    [[ $(candidate \"1 2 3\" \"-1 -2 -3\") = \"2 4 6\" ]]\n\
    \    [[ $(candidate \"1 2 3 5\" \"-1 2 3 4\") = \"2 0 0 1\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: '/tmp/tmp69xhoa75.sh: line 14: local: `1 2 3 4 5 1'': invalid variable name
    for name reference

    /tmp/tmp69xhoa75.sh: line 15: local: `1 2 3 4 2 -2'': invalid variable name for
    name reference

    '
  stdout: ''
  timestamp: 1660002210
- exit_code: 1
  program: "#!/bin/bash\n# I think we all remember that feeling when the result of\
    \ some long-awaited\n# event is finally known. The feelings and thoughts you have\
    \ at that moment are\n# definitely worth noting down and comparing.\n# Your task\
    \ is to determine if a person correctly guessed the results of a number of matches.\n\
    # You are given two arrays of scores and guesses of equal length, where each index\
    \ shows a match. \n# Return an array of the same length denoting how far off each\
    \ guess was. If they have guessed correctly,\n# the value is 0, and if not, the\
    \ value is the absolute difference between the guess and the score.\n# example:\n\
    #\n# $1 is a space-separated list\n# $2 is a space-separated list\ncompare() {\n\
    \    local -n scores=$1\n    local -n guesses=$2\n    local -a result\n    local\
    \ i=0\n    for score in $scores; do\n        result[$i]=$((${guesses[$i]} - $score))\n\
    \        ((i++))\n    done\n    echo ${result[@]}\n}\n\ncandidate() {\n    compare\
    \ \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"1 2 3 4 5 1\" \"1 2\
    \ 3 4 2 -2\") = \"0 0 0 0 3 3\" ]]\n    [[ $(candidate \"0 0 0 0 0 0\" \"0 0 0\
    \ 0 0 0\") = \"0 0 0 0 0 0\" ]]\n    [[ $(candidate \"1 2 3\" \"-1 -2 -3\") =\
    \ \"2 4 6\" ]]\n    [[ $(candidate \"1 2 3 5\" \"-1 2 3 4\") = \"2 0 0 1\" ]]\n\
    }\n\nrun_test"
  status: Exception
  stderr: '/tmp/tmpt0e6ji34.sh: line 14: local: `1 2 3 4 5 1'': invalid variable name
    for name reference

    /tmp/tmpt0e6ji34.sh: line 15: local: `1 2 3 4 2 -2'': invalid variable name for
    name reference

    '
  stdout: ''
  timestamp: 1660002210
- exit_code: 1
  program: "#!/bin/bash\n# I think we all remember that feeling when the result of\
    \ some long-awaited\n# event is finally known. The feelings and thoughts you have\
    \ at that moment are\n# definitely worth noting down and comparing.\n# Your task\
    \ is to determine if a person correctly guessed the results of a number of matches.\n\
    # You are given two arrays of scores and guesses of equal length, where each index\
    \ shows a match. \n# Return an array of the same length denoting how far off each\
    \ guess was. If they have guessed correctly,\n# the value is 0, and if not, the\
    \ value is the absolute difference between the guess and the score.\n# example:\n\
    #\n# $1 is a space-separated list\n# $2 is a space-separated list\ncompare() {\n\
    \    local -n scores=$1\n    local -n guesses=$2\n    local result=()\n    for\
    \ ((i=0; i<${#scores[@]}; i++)); do\n        result[i]=$((${scores[i]} - ${guesses[i]}))\n\
    \    done\n    echo \"${result[@]}\"\n}\n\ncandidate() {\n    compare \"$@\"\n\
    }\n\nset -e\nrun_test() {\n    [[ $(candidate \"1 2 3 4 5 1\" \"1 2 3 4 2 -2\"\
    ) = \"0 0 0 0 3 3\" ]]\n    [[ $(candidate \"0 0 0 0 0 0\" \"0 0 0 0 0 0\") =\
    \ \"0 0 0 0 0 0\" ]]\n    [[ $(candidate \"1 2 3\" \"-1 -2 -3\") = \"2 4 6\" ]]\n\
    \    [[ $(candidate \"1 2 3 5\" \"-1 2 3 4\") = \"2 0 0 1\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: '/tmp/tmpcazg6vzf.sh: line 14: local: `1 2 3 4 5 1'': invalid variable name
    for name reference

    /tmp/tmpcazg6vzf.sh: line 15: local: `1 2 3 4 2 -2'': invalid variable name for
    name reference

    '
  stdout: ''
  timestamp: 1660002210
- exit_code: 1
  program: "#!/bin/bash\n# I think we all remember that feeling when the result of\
    \ some long-awaited\n# event is finally known. The feelings and thoughts you have\
    \ at that moment are\n# definitely worth noting down and comparing.\n# Your task\
    \ is to determine if a person correctly guessed the results of a number of matches.\n\
    # You are given two arrays of scores and guesses of equal length, where each index\
    \ shows a match. \n# Return an array of the same length denoting how far off each\
    \ guess was. If they have guessed correctly,\n# the value is 0, and if not, the\
    \ value is the absolute difference between the guess and the score.\n# example:\n\
    #\n# $1 is a space-separated list\n# $2 is a space-separated list\ncompare() {\n\
    \    local -n scores=$1\n    local -n guesses=$2\n    local result=()\n    for\
    \ ((i=0; i<${#scores[@]}; i++)); do\n        if [[ ${scores[$i]} -eq ${guesses[$i]}\
    \ ]]; then\n            result+=(0)\n        else\n            result+=($(( ${scores[$i]}\
    \ - ${guesses[$i]} )))\n        fi\n    done\n    echo \"${result[@]}\"\n}\n\n\
    candidate() {\n    compare \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate\
    \ \"1 2 3 4 5 1\" \"1 2 3 4 2 -2\") = \"0 0 0 0 3 3\" ]]\n    [[ $(candidate \"\
    0 0 0 0 0 0\" \"0 0 0 0 0 0\") = \"0 0 0 0 0 0\" ]]\n    [[ $(candidate \"1 2\
    \ 3\" \"-1 -2 -3\") = \"2 4 6\" ]]\n    [[ $(candidate \"1 2 3 5\" \"-1 2 3 4\"\
    ) = \"2 0 0 1\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: '/tmp/tmp9mohepqf.sh: line 14: local: `1 2 3 4 5 1'': invalid variable name
    for name reference

    /tmp/tmp9mohepqf.sh: line 15: local: `1 2 3 4 2 -2'': invalid variable name for
    name reference

    '
  stdout: ''
  timestamp: 1660002210
- exit_code: 0
  program: "#!/bin/bash\n# I think we all remember that feeling when the result of\
    \ some long-awaited\n# event is finally known. The feelings and thoughts you have\
    \ at that moment are\n# definitely worth noting down and comparing.\n# Your task\
    \ is to determine if a person correctly guessed the results of a number of matches.\n\
    # You are given two arrays of scores and guesses of equal length, where each index\
    \ shows a match. \n# Return an array of the same length denoting how far off each\
    \ guess was. If they have guessed correctly,\n# the value is 0, and if not, the\
    \ value is the absolute difference between the guess and the score.\n# example:\n\
    #\n# $1 is a space-separated list\n# $2 is a space-separated list\ncompare() {\n\
    \    local score=($1)\n    local guess=($2)\n    local result=()\n    for ((i=0;\
    \ i<${#score[@]}; i++)); do\n        result[$i]=$((${score[$i]}-${guess[$i]}))\n\
    \        if [[ ${result[$i]} -lt 0 ]]; then\n            result[$i]=$((-${result[$i]}))\n\
    \        fi\n    done\n    echo ${result[@]}\n}\n\ncandidate() {\n    compare\
    \ \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"1 2 3 4 5 1\" \"1 2\
    \ 3 4 2 -2\") = \"0 0 0 0 3 3\" ]]\n    [[ $(candidate \"0 0 0 0 0 0\" \"0 0 0\
    \ 0 0 0\") = \"0 0 0 0 0 0\" ]]\n    [[ $(candidate \"1 2 3\" \"-1 -2 -3\") =\
    \ \"2 4 6\" ]]\n    [[ $(candidate \"1 2 3 5\" \"-1 2 3 4\") = \"2 0 0 1\" ]]\n\
    }\n\nrun_test"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660002210
- exit_code: 1
  program: "#!/bin/bash\n# I think we all remember that feeling when the result of\
    \ some long-awaited\n# event is finally known. The feelings and thoughts you have\
    \ at that moment are\n# definitely worth noting down and comparing.\n# Your task\
    \ is to determine if a person correctly guessed the results of a number of matches.\n\
    # You are given two arrays of scores and guesses of equal length, where each index\
    \ shows a match. \n# Return an array of the same length denoting how far off each\
    \ guess was. If they have guessed correctly,\n# the value is 0, and if not, the\
    \ value is the absolute difference between the guess and the score.\n# example:\n\
    #\n# $1 is a space-separated list\n# $2 is a space-separated list\ncompare() {\n\
    \    local -n scores=$1\n    local -n guesses=$2\n    local -a result=()\n   \
    \ for ((i=0; i<${#scores[@]}; i++)); do\n        result[i]=$((${scores[i]}-${guesses[i]}))\n\
    \        result[i]=${result[i]#-}\n    done\n    echo \"${result[@]}\"\n}\n\n\
    candidate() {\n    compare \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate\
    \ \"1 2 3 4 5 1\" \"1 2 3 4 2 -2\") = \"0 0 0 0 3 3\" ]]\n    [[ $(candidate \"\
    0 0 0 0 0 0\" \"0 0 0 0 0 0\") = \"0 0 0 0 0 0\" ]]\n    [[ $(candidate \"1 2\
    \ 3\" \"-1 -2 -3\") = \"2 4 6\" ]]\n    [[ $(candidate \"1 2 3 5\" \"-1 2 3 4\"\
    ) = \"2 0 0 1\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: '/tmp/tmpzoktlrjj.sh: line 14: local: `1 2 3 4 5 1'': invalid variable name
    for name reference

    /tmp/tmpzoktlrjj.sh: line 15: local: `1 2 3 4 2 -2'': invalid variable name for
    name reference

    '
  stdout: ''
  timestamp: 1660002210
- exit_code: 1
  program: "#!/bin/bash\n# I think we all remember that feeling when the result of\
    \ some long-awaited\n# event is finally known. The feelings and thoughts you have\
    \ at that moment are\n# definitely worth noting down and comparing.\n# Your task\
    \ is to determine if a person correctly guessed the results of a number of matches.\n\
    # You are given two arrays of scores and guesses of equal length, where each index\
    \ shows a match. \n# Return an array of the same length denoting how far off each\
    \ guess was. If they have guessed correctly,\n# the value is 0, and if not, the\
    \ value is the absolute difference between the guess and the score.\n# example:\n\
    #\n# $1 is a space-separated list\n# $2 is a space-separated list\ncompare() {\n\
    \    local -n scores=$1\n    local -n guesses=$2\n    local -a result=()\n   \
    \ for ((i=0; i<${#scores[@]}; i++)); do\n        if [[ ${scores[$i]} -eq ${guesses[$i]}\
    \ ]]; then\n            result+=(0)\n        else\n            result+=($(( ${scores[$i]}\
    \ - ${guesses[$i]} )))\n        fi\n    done\n    echo \"${result[@]}\"\n}\n\n\
    candidate() {\n    compare \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate\
    \ \"1 2 3 4 5 1\" \"1 2 3 4 2 -2\") = \"0 0 0 0 3 3\" ]]\n    [[ $(candidate \"\
    0 0 0 0 0 0\" \"0 0 0 0 0 0\") = \"0 0 0 0 0 0\" ]]\n    [[ $(candidate \"1 2\
    \ 3\" \"-1 -2 -3\") = \"2 4 6\" ]]\n    [[ $(candidate \"1 2 3 5\" \"-1 2 3 4\"\
    ) = \"2 0 0 1\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: '/tmp/tmpafs_1xxy.sh: line 14: local: `1 2 3 4 5 1'': invalid variable name
    for name reference

    /tmp/tmpafs_1xxy.sh: line 15: local: `1 2 3 4 2 -2'': invalid variable name for
    name reference

    '
  stdout: ''
  timestamp: 1660002210
- exit_code: 0
  program: "#!/bin/bash\n# I think we all remember that feeling when the result of\
    \ some long-awaited\n# event is finally known. The feelings and thoughts you have\
    \ at that moment are\n# definitely worth noting down and comparing.\n# Your task\
    \ is to determine if a person correctly guessed the results of a number of matches.\n\
    # You are given two arrays of scores and guesses of equal length, where each index\
    \ shows a match. \n# Return an array of the same length denoting how far off each\
    \ guess was. If they have guessed correctly,\n# the value is 0, and if not, the\
    \ value is the absolute difference between the guess and the score.\n# example:\n\
    #\n# $1 is a space-separated list\n# $2 is a space-separated list\ncompare() {\n\
    \    local -a scores=($1)\n    local -a guesses=($2)\n    local -a result=()\n\
    \    local i=0\n    for score in ${scores[@]}; do\n        result[$i]=$((${guesses[$i]}\
    \ - $score))\n        if [ ${result[$i]} -lt 0 ]; then\n            result[$i]=$((${result[$i]}\
    \ * -1))\n        fi\n        i=$(($i + 1))\n    done\n    echo ${result[@]}\n\
    }\n\ncandidate() {\n    compare \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate\
    \ \"1 2 3 4 5 1\" \"1 2 3 4 2 -2\") = \"0 0 0 0 3 3\" ]]\n    [[ $(candidate \"\
    0 0 0 0 0 0\" \"0 0 0 0 0 0\") = \"0 0 0 0 0 0\" ]]\n    [[ $(candidate \"1 2\
    \ 3\" \"-1 -2 -3\") = \"2 4 6\" ]]\n    [[ $(candidate \"1 2 3 5\" \"-1 2 3 4\"\
    ) = \"2 0 0 1\" ]]\n}\n\nrun_test"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660002210
- exit_code: 1
  program: "#!/bin/bash\n# I think we all remember that feeling when the result of\
    \ some long-awaited\n# event is finally known. The feelings and thoughts you have\
    \ at that moment are\n# definitely worth noting down and comparing.\n# Your task\
    \ is to determine if a person correctly guessed the results of a number of matches.\n\
    # You are given two arrays of scores and guesses of equal length, where each index\
    \ shows a match. \n# Return an array of the same length denoting how far off each\
    \ guess was. If they have guessed correctly,\n# the value is 0, and if not, the\
    \ value is the absolute difference between the guess and the score.\n# example:\n\
    #\n# $1 is a space-separated list\n# $2 is a space-separated list\ncompare() {\n\
    \    local -n _scores=$1\n    local -n _guesses=$2\n    local -a _result=()\n\
    \    for ((i=0; i<${#_scores[@]}; i++)); do\n        if [[ ${_scores[$i]} -eq\
    \ ${_guesses[$i]} ]]; then\n            _result+=(0)\n        else\n         \
    \   _result+=($(( ${_scores[$i]} - ${_guesses[$i]} )))\n        fi\n    done\n\
    \    echo \"${_result[@]}\"\n}\n\ncandidate() {\n    compare \"$@\"\n}\n\nset\
    \ -e\nrun_test() {\n    [[ $(candidate \"1 2 3 4 5 1\" \"1 2 3 4 2 -2\") = \"\
    0 0 0 0 3 3\" ]]\n    [[ $(candidate \"0 0 0 0 0 0\" \"0 0 0 0 0 0\") = \"0 0\
    \ 0 0 0 0\" ]]\n    [[ $(candidate \"1 2 3\" \"-1 -2 -3\") = \"2 4 6\" ]]\n  \
    \  [[ $(candidate \"1 2 3 5\" \"-1 2 3 4\") = \"2 0 0 1\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: '/tmp/tmp5lj9_avv.sh: line 14: local: `1 2 3 4 5 1'': invalid variable name
    for name reference

    /tmp/tmp5lj9_avv.sh: line 15: local: `1 2 3 4 2 -2'': invalid variable name for
    name reference

    '
  stdout: ''
  timestamp: 1660002210
- exit_code: 0
  program: "#!/bin/bash\n# I think we all remember that feeling when the result of\
    \ some long-awaited\n# event is finally known. The feelings and thoughts you have\
    \ at that moment are\n# definitely worth noting down and comparing.\n# Your task\
    \ is to determine if a person correctly guessed the results of a number of matches.\n\
    # You are given two arrays of scores and guesses of equal length, where each index\
    \ shows a match. \n# Return an array of the same length denoting how far off each\
    \ guess was. If they have guessed correctly,\n# the value is 0, and if not, the\
    \ value is the absolute difference between the guess and the score.\n# example:\n\
    #\n# $1 is a space-separated list\n# $2 is a space-separated list\ncompare() {\n\
    \    local -a scores=($1)\n    local -a guesses=($2)\n    local -a result=()\n\
    \    for ((i=0; i<${#scores[@]}; i++)); do\n        result[i]=$((${scores[i]}-${guesses[i]}))\n\
    \        if [[ ${result[i]} -lt 0 ]]; then\n            result[i]=$((-${result[i]}))\n\
    \        fi\n    done\n    echo ${result[@]}\n}\n\ncandidate() {\n    compare\
    \ \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"1 2 3 4 5 1\" \"1 2\
    \ 3 4 2 -2\") = \"0 0 0 0 3 3\" ]]\n    [[ $(candidate \"0 0 0 0 0 0\" \"0 0 0\
    \ 0 0 0\") = \"0 0 0 0 0 0\" ]]\n    [[ $(candidate \"1 2 3\" \"-1 -2 -3\") =\
    \ \"2 4 6\" ]]\n    [[ $(candidate \"1 2 3 5\" \"-1 2 3 4\") = \"2 0 0 1\" ]]\n\
    }\n\nrun_test"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660002210
- exit_code: 0
  program: "#!/bin/bash\n# I think we all remember that feeling when the result of\
    \ some long-awaited\n# event is finally known. The feelings and thoughts you have\
    \ at that moment are\n# definitely worth noting down and comparing.\n# Your task\
    \ is to determine if a person correctly guessed the results of a number of matches.\n\
    # You are given two arrays of scores and guesses of equal length, where each index\
    \ shows a match. \n# Return an array of the same length denoting how far off each\
    \ guess was. If they have guessed correctly,\n# the value is 0, and if not, the\
    \ value is the absolute difference between the guess and the score.\n# example:\n\
    #\n# $1 is a space-separated list\n# $2 is a space-separated list\ncompare() {\n\
    \    local -a scores=($1)\n    local -a guesses=($2)\n    local -a result=()\n\
    \    for ((i=0; i<${#scores[@]}; i++)); do\n        if [[ ${scores[$i]} -eq ${guesses[$i]}\
    \ ]]; then\n            result+=(\"0\")\n        else\n            result+=(\"\
    $((${scores[$i]} - ${guesses[$i]}))\")\n        fi\n    done\n    echo \"${result[@]}\"\
    \n}\n\ncandidate() {\n    compare \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate\
    \ \"1 2 3 4 5 1\" \"1 2 3 4 2 -2\") = \"0 0 0 0 3 3\" ]]\n    [[ $(candidate \"\
    0 0 0 0 0 0\" \"0 0 0 0 0 0\") = \"0 0 0 0 0 0\" ]]\n    [[ $(candidate \"1 2\
    \ 3\" \"-1 -2 -3\") = \"2 4 6\" ]]\n    [[ $(candidate \"1 2 3 5\" \"-1 2 3 4\"\
    ) = \"2 0 0 1\" ]]\n}\n\nrun_test"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660002210
- exit_code: 0
  program: "#!/bin/bash\n# I think we all remember that feeling when the result of\
    \ some long-awaited\n# event is finally known. The feelings and thoughts you have\
    \ at that moment are\n# definitely worth noting down and comparing.\n# Your task\
    \ is to determine if a person correctly guessed the results of a number of matches.\n\
    # You are given two arrays of scores and guesses of equal length, where each index\
    \ shows a match. \n# Return an array of the same length denoting how far off each\
    \ guess was. If they have guessed correctly,\n# the value is 0, and if not, the\
    \ value is the absolute difference between the guess and the score.\n# example:\n\
    #\n# $1 is a space-separated list\n# $2 is a space-separated list\ncompare() {\n\
    \    local -a scores=($1)\n    local -a guesses=($2)\n    local -a result=()\n\
    \    for ((i=0; i<${#scores[@]}; i++)); do\n        if [[ ${scores[$i]} -eq ${guesses[$i]}\
    \ ]]; then\n            result[$i]=0\n        else\n            result[$i]=$((\
    \ ${scores[$i]} - ${guesses[$i]} ))\n        fi\n    done\n    echo ${result[@]}\n\
    }\n\ncandidate() {\n    compare \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate\
    \ \"1 2 3 4 5 1\" \"1 2 3 4 2 -2\") = \"0 0 0 0 3 3\" ]]\n    [[ $(candidate \"\
    0 0 0 0 0 0\" \"0 0 0 0 0 0\") = \"0 0 0 0 0 0\" ]]\n    [[ $(candidate \"1 2\
    \ 3\" \"-1 -2 -3\") = \"2 4 6\" ]]\n    [[ $(candidate \"1 2 3 5\" \"-1 2 3 4\"\
    ) = \"2 0 0 1\" ]]\n}\n\nrun_test"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660002209
- exit_code: 0
  program: "#!/bin/bash\n# I think we all remember that feeling when the result of\
    \ some long-awaited\n# event is finally known. The feelings and thoughts you have\
    \ at that moment are\n# definitely worth noting down and comparing.\n# Your task\
    \ is to determine if a person correctly guessed the results of a number of matches.\n\
    # You are given two arrays of scores and guesses of equal length, where each index\
    \ shows a match. \n# Return an array of the same length denoting how far off each\
    \ guess was. If they have guessed correctly,\n# the value is 0, and if not, the\
    \ value is the absolute difference between the guess and the score.\n# example:\n\
    #\n# $1 is a space-separated list\n# $2 is a space-separated list\ncompare() {\n\
    \    local score=($1)\n    local guess=($2)\n    local result=()\n    for ((i=0;\
    \ i<${#score[@]}; i++)); do\n        result[$i]=$((${score[$i]}-${guess[$i]}))\n\
    \        result[$i]=$((${result[$i]}<0?-${result[$i]}:${result[$i]}))\n    done\n\
    \    echo ${result[@]}\n}\n\ncandidate() {\n    compare \"$@\"\n}\n\nset -e\n\
    run_test() {\n    [[ $(candidate \"1 2 3 4 5 1\" \"1 2 3 4 2 -2\") = \"0 0 0 0\
    \ 3 3\" ]]\n    [[ $(candidate \"0 0 0 0 0 0\" \"0 0 0 0 0 0\") = \"0 0 0 0 0\
    \ 0\" ]]\n    [[ $(candidate \"1 2 3\" \"-1 -2 -3\") = \"2 4 6\" ]]\n    [[ $(candidate\
    \ \"1 2 3 5\" \"-1 2 3 4\") = \"2 0 0 1\" ]]\n}\n\nrun_test"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660002210
- exit_code: 1
  program: "#!/bin/bash\n# I think we all remember that feeling when the result of\
    \ some long-awaited\n# event is finally known. The feelings and thoughts you have\
    \ at that moment are\n# definitely worth noting down and comparing.\n# Your task\
    \ is to determine if a person correctly guessed the results of a number of matches.\n\
    # You are given two arrays of scores and guesses of equal length, where each index\
    \ shows a match. \n# Return an array of the same length denoting how far off each\
    \ guess was. If they have guessed correctly,\n# the value is 0, and if not, the\
    \ value is the absolute difference between the guess and the score.\n# example:\n\
    #\n# $1 is a space-separated list\n# $2 is a space-separated list\ncompare() {\n\
    \    local -n scores=$1\n    local -n guesses=$2\n    local -a result=()\n   \
    \ for ((i=0; i<${#scores[@]}; i++)); do\n        result+=($((${scores[$i]} - ${guesses[$i]})))\n\
    \    done\n    echo \"${result[@]}\"\n}\n\ncandidate() {\n    compare \"$@\"\n\
    }\n\nset -e\nrun_test() {\n    [[ $(candidate \"1 2 3 4 5 1\" \"1 2 3 4 2 -2\"\
    ) = \"0 0 0 0 3 3\" ]]\n    [[ $(candidate \"0 0 0 0 0 0\" \"0 0 0 0 0 0\") =\
    \ \"0 0 0 0 0 0\" ]]\n    [[ $(candidate \"1 2 3\" \"-1 -2 -3\") = \"2 4 6\" ]]\n\
    \    [[ $(candidate \"1 2 3 5\" \"-1 2 3 4\") = \"2 0 0 1\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: '/tmp/tmpj_hkzzds.sh: line 14: local: `1 2 3 4 5 1'': invalid variable name
    for name reference

    /tmp/tmpj_hkzzds.sh: line 15: local: `1 2 3 4 2 -2'': invalid variable name for
    name reference

    '
  stdout: ''
  timestamp: 1660002210
- exit_code: 0
  program: "#!/bin/bash\n# I think we all remember that feeling when the result of\
    \ some long-awaited\n# event is finally known. The feelings and thoughts you have\
    \ at that moment are\n# definitely worth noting down and comparing.\n# Your task\
    \ is to determine if a person correctly guessed the results of a number of matches.\n\
    # You are given two arrays of scores and guesses of equal length, where each index\
    \ shows a match. \n# Return an array of the same length denoting how far off each\
    \ guess was. If they have guessed correctly,\n# the value is 0, and if not, the\
    \ value is the absolute difference between the guess and the score.\n# example:\n\
    #\n# $1 is a space-separated list\n# $2 is a space-separated list\ncompare() {\n\
    \    local -a scores=($1)\n    local -a guesses=($2)\n    local -a result=()\n\
    \    for (( i=0; i<${#scores[@]}; i++ )); do\n        result[i]=$((${scores[i]}-${guesses[i]}))\n\
    \        result[i]=${result[i]#-}\n    done\n    echo ${result[@]}\n}\n\ncandidate()\
    \ {\n    compare \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"1 2 3\
    \ 4 5 1\" \"1 2 3 4 2 -2\") = \"0 0 0 0 3 3\" ]]\n    [[ $(candidate \"0 0 0 0\
    \ 0 0\" \"0 0 0 0 0 0\") = \"0 0 0 0 0 0\" ]]\n    [[ $(candidate \"1 2 3\" \"\
    -1 -2 -3\") = \"2 4 6\" ]]\n    [[ $(candidate \"1 2 3 5\" \"-1 2 3 4\") = \"\
    2 0 0 1\" ]]\n}\n\nrun_test"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660002210
- exit_code: 0
  program: "#!/bin/bash\n# I think we all remember that feeling when the result of\
    \ some long-awaited\n# event is finally known. The feelings and thoughts you have\
    \ at that moment are\n# definitely worth noting down and comparing.\n# Your task\
    \ is to determine if a person correctly guessed the results of a number of matches.\n\
    # You are given two arrays of scores and guesses of equal length, where each index\
    \ shows a match. \n# Return an array of the same length denoting how far off each\
    \ guess was. If they have guessed correctly,\n# the value is 0, and if not, the\
    \ value is the absolute difference between the guess and the score.\n# example:\n\
    #\n# $1 is a space-separated list\n# $2 is a space-separated list\ncompare() {\n\
    \    local -a scores=($1)\n    local -a guesses=($2)\n    local -a result=()\n\
    \    for ((i=0; i<${#scores[@]}; i++)); do\n        if [[ ${scores[$i]} -eq ${guesses[$i]}\
    \ ]]; then\n            result[$i]=0\n        else\n            result[$i]=$((\
    \ ${scores[$i]} - ${guesses[$i]} ))\n        fi\n    done\n    echo ${result[@]}\n\
    }\n\ncandidate() {\n    compare \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate\
    \ \"1 2 3 4 5 1\" \"1 2 3 4 2 -2\") = \"0 0 0 0 3 3\" ]]\n    [[ $(candidate \"\
    0 0 0 0 0 0\" \"0 0 0 0 0 0\") = \"0 0 0 0 0 0\" ]]\n    [[ $(candidate \"1 2\
    \ 3\" \"-1 -2 -3\") = \"2 4 6\" ]]\n    [[ $(candidate \"1 2 3 5\" \"-1 2 3 4\"\
    ) = \"2 0 0 1\" ]]\n}\n\nrun_test"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660002209
- exit_code: 1
  program: "#!/bin/bash\n# I think we all remember that feeling when the result of\
    \ some long-awaited\n# event is finally known. The feelings and thoughts you have\
    \ at that moment are\n# definitely worth noting down and comparing.\n# Your task\
    \ is to determine if a person correctly guessed the results of a number of matches.\n\
    # You are given two arrays of scores and guesses of equal length, where each index\
    \ shows a match. \n# Return an array of the same length denoting how far off each\
    \ guess was. If they have guessed correctly,\n# the value is 0, and if not, the\
    \ value is the absolute difference between the guess and the score.\n# example:\n\
    #\n# $1 is a space-separated list\n# $2 is a space-separated list\ncompare() {\n\
    \    local -n scores=$1\n    local -n guesses=$2\n    local -a result\n    for\
    \ ((i=0; i<${#scores[@]}; i++)); do\n        result[i]=$((${scores[i]} - ${guesses[i]}))\n\
    \        if [[ ${result[i]} -lt 0 ]]; then\n            result[i]=$((-${result[i]}))\n\
    \        fi\n    done\n    echo ${result[@]}\n}\n\ncandidate() {\n    compare\
    \ \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"1 2 3 4 5 1\" \"1 2\
    \ 3 4 2 -2\") = \"0 0 0 0 3 3\" ]]\n    [[ $(candidate \"0 0 0 0 0 0\" \"0 0 0\
    \ 0 0 0\") = \"0 0 0 0 0 0\" ]]\n    [[ $(candidate \"1 2 3\" \"-1 -2 -3\") =\
    \ \"2 4 6\" ]]\n    [[ $(candidate \"1 2 3 5\" \"-1 2 3 4\") = \"2 0 0 1\" ]]\n\
    }\n\nrun_test"
  status: Exception
  stderr: '/tmp/tmpjg592sey.sh: line 14: local: `1 2 3 4 5 1'': invalid variable name
    for name reference

    /tmp/tmpjg592sey.sh: line 15: local: `1 2 3 4 2 -2'': invalid variable name for
    name reference

    '
  stdout: ''
  timestamp: 1660002210
- exit_code: 1
  program: "#!/bin/bash\n# I think we all remember that feeling when the result of\
    \ some long-awaited\n# event is finally known. The feelings and thoughts you have\
    \ at that moment are\n# definitely worth noting down and comparing.\n# Your task\
    \ is to determine if a person correctly guessed the results of a number of matches.\n\
    # You are given two arrays of scores and guesses of equal length, where each index\
    \ shows a match. \n# Return an array of the same length denoting how far off each\
    \ guess was. If they have guessed correctly,\n# the value is 0, and if not, the\
    \ value is the absolute difference between the guess and the score.\n# example:\n\
    #\n# $1 is a space-separated list\n# $2 is a space-separated list\ncompare() {\n\
    \    local -n scores=$1\n    local -n guesses=$2\n    local -a result=()\n   \
    \ for ((i=0; i<${#scores[@]}; i++)); do\n        result+=($((${scores[$i]} - ${guesses[$i]})))\n\
    \    done\n    echo \"${result[@]}\"\n}\n\ncandidate() {\n    compare \"$@\"\n\
    }\n\nset -e\nrun_test() {\n    [[ $(candidate \"1 2 3 4 5 1\" \"1 2 3 4 2 -2\"\
    ) = \"0 0 0 0 3 3\" ]]\n    [[ $(candidate \"0 0 0 0 0 0\" \"0 0 0 0 0 0\") =\
    \ \"0 0 0 0 0 0\" ]]\n    [[ $(candidate \"1 2 3\" \"-1 -2 -3\") = \"2 4 6\" ]]\n\
    \    [[ $(candidate \"1 2 3 5\" \"-1 2 3 4\") = \"2 0 0 1\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: '/tmp/tmpj_hkzzds.sh: line 14: local: `1 2 3 4 5 1'': invalid variable name
    for name reference

    /tmp/tmpj_hkzzds.sh: line 15: local: `1 2 3 4 2 -2'': invalid variable name for
    name reference

    '
  stdout: ''
  timestamp: 1660002210
- exit_code: 1
  program: "#!/bin/bash\n# I think we all remember that feeling when the result of\
    \ some long-awaited\n# event is finally known. The feelings and thoughts you have\
    \ at that moment are\n# definitely worth noting down and comparing.\n# Your task\
    \ is to determine if a person correctly guessed the results of a number of matches.\n\
    # You are given two arrays of scores and guesses of equal length, where each index\
    \ shows a match. \n# Return an array of the same length denoting how far off each\
    \ guess was. If they have guessed correctly,\n# the value is 0, and if not, the\
    \ value is the absolute difference between the guess and the score.\n# example:\n\
    #\n# $1 is a space-separated list\n# $2 is a space-separated list\ncompare() {\n\
    \    local -n scores=$1\n    local -n guesses=$2\n    local result=()\n    for\
    \ ((i=0; i<${#scores[@]}; i++)); do\n        if [[ ${scores[$i]} -eq ${guesses[$i]}\
    \ ]]; then\n            result+=(0)\n        else\n            result+=($(( ${scores[$i]}\
    \ - ${guesses[$i]} )))\n        fi\n    done\n    echo \"${result[@]}\"\n}\n\n\
    candidate() {\n    compare \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate\
    \ \"1 2 3 4 5 1\" \"1 2 3 4 2 -2\") = \"0 0 0 0 3 3\" ]]\n    [[ $(candidate \"\
    0 0 0 0 0 0\" \"0 0 0 0 0 0\") = \"0 0 0 0 0 0\" ]]\n    [[ $(candidate \"1 2\
    \ 3\" \"-1 -2 -3\") = \"2 4 6\" ]]\n    [[ $(candidate \"1 2 3 5\" \"-1 2 3 4\"\
    ) = \"2 0 0 1\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: '/tmp/tmp9mohepqf.sh: line 14: local: `1 2 3 4 5 1'': invalid variable name
    for name reference

    /tmp/tmp9mohepqf.sh: line 15: local: `1 2 3 4 2 -2'': invalid variable name for
    name reference

    '
  stdout: ''
  timestamp: 1660002210
- exit_code: 1
  program: "#!/bin/bash\n# I think we all remember that feeling when the result of\
    \ some long-awaited\n# event is finally known. The feelings and thoughts you have\
    \ at that moment are\n# definitely worth noting down and comparing.\n# Your task\
    \ is to determine if a person correctly guessed the results of a number of matches.\n\
    # You are given two arrays of scores and guesses of equal length, where each index\
    \ shows a match. \n# Return an array of the same length denoting how far off each\
    \ guess was. If they have guessed correctly,\n# the value is 0, and if not, the\
    \ value is the absolute difference between the guess and the score.\n# example:\n\
    #\n# $1 is a space-separated list\n# $2 is a space-separated list\ncompare() {\n\
    \    local -n _scores=$1\n    local -n _guesses=$2\n    local -a _result=()\n\
    \    for ((i=0; i<${#_scores[@]}; i++)); do\n        _result+=($((${_scores[$i]}-${_guesses[$i]})))\n\
    \    done\n    echo \"${_result[@]}\"\n}\n\ncandidate() {\n    compare \"$@\"\n\
    }\n\nset -e\nrun_test() {\n    [[ $(candidate \"1 2 3 4 5 1\" \"1 2 3 4 2 -2\"\
    ) = \"0 0 0 0 3 3\" ]]\n    [[ $(candidate \"0 0 0 0 0 0\" \"0 0 0 0 0 0\") =\
    \ \"0 0 0 0 0 0\" ]]\n    [[ $(candidate \"1 2 3\" \"-1 -2 -3\") = \"2 4 6\" ]]\n\
    \    [[ $(candidate \"1 2 3 5\" \"-1 2 3 4\") = \"2 0 0 1\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: '/tmp/tmpe0v3ga1z.sh: line 14: local: `1 2 3 4 5 1'': invalid variable name
    for name reference

    /tmp/tmpe0v3ga1z.sh: line 15: local: `1 2 3 4 2 -2'': invalid variable name for
    name reference

    '
  stdout: ''
  timestamp: 1660002210
- exit_code: 1
  program: "#!/bin/bash\n# I think we all remember that feeling when the result of\
    \ some long-awaited\n# event is finally known. The feelings and thoughts you have\
    \ at that moment are\n# definitely worth noting down and comparing.\n# Your task\
    \ is to determine if a person correctly guessed the results of a number of matches.\n\
    # You are given two arrays of scores and guesses of equal length, where each index\
    \ shows a match. \n# Return an array of the same length denoting how far off each\
    \ guess was. If they have guessed correctly,\n# the value is 0, and if not, the\
    \ value is the absolute difference between the guess and the score.\n# example:\n\
    #\n# $1 is a space-separated list\n# $2 is a space-separated list\ncompare() {\n\
    \    local -n scores=$1\n    local -n guesses=$2\n    local result=()\n    for\
    \ i in ${!scores[@]}; do\n        if [[ ${scores[$i]} -eq ${guesses[$i]} ]]; then\n\
    \            result+=(0)\n        else\n            result+=($(( ${scores[$i]}\
    \ - ${guesses[$i]} )))\n        fi\n    done\n    echo ${result[@]}\n}\n\ncandidate()\
    \ {\n    compare \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"1 2 3\
    \ 4 5 1\" \"1 2 3 4 2 -2\") = \"0 0 0 0 3 3\" ]]\n    [[ $(candidate \"0 0 0 0\
    \ 0 0\" \"0 0 0 0 0 0\") = \"0 0 0 0 0 0\" ]]\n    [[ $(candidate \"1 2 3\" \"\
    -1 -2 -3\") = \"2 4 6\" ]]\n    [[ $(candidate \"1 2 3 5\" \"-1 2 3 4\") = \"\
    2 0 0 1\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: '/tmp/tmpxjqriweh.sh: line 14: local: `1 2 3 4 5 1'': invalid variable name
    for name reference

    /tmp/tmpxjqriweh.sh: line 15: local: `1 2 3 4 2 -2'': invalid variable name for
    name reference

    '
  stdout: ''
  timestamp: 1660002210
- exit_code: 1
  program: "#!/bin/bash\n# I think we all remember that feeling when the result of\
    \ some long-awaited\n# event is finally known. The feelings and thoughts you have\
    \ at that moment are\n# definitely worth noting down and comparing.\n# Your task\
    \ is to determine if a person correctly guessed the results of a number of matches.\n\
    # You are given two arrays of scores and guesses of equal length, where each index\
    \ shows a match. \n# Return an array of the same length denoting how far off each\
    \ guess was. If they have guessed correctly,\n# the value is 0, and if not, the\
    \ value is the absolute difference between the guess and the score.\n# example:\n\
    #\n# $1 is a space-separated list\n# $2 is a space-separated list\ncompare() {\n\
    \    local -n scores=$1\n    local -n guesses=$2\n    local -a result\n    for\
    \ ((i=0; i<${#scores[@]}; i++)); do\n        if [[ ${scores[$i]} -eq ${guesses[$i]}\
    \ ]]; then\n            result[$i]=0\n        else\n            result[$i]=$((\
    \ ${scores[$i]} - ${guesses[$i]} ))\n        fi\n    done\n    echo ${result[@]}\n\
    }\n\ncandidate() {\n    compare \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate\
    \ \"1 2 3 4 5 1\" \"1 2 3 4 2 -2\") = \"0 0 0 0 3 3\" ]]\n    [[ $(candidate \"\
    0 0 0 0 0 0\" \"0 0 0 0 0 0\") = \"0 0 0 0 0 0\" ]]\n    [[ $(candidate \"1 2\
    \ 3\" \"-1 -2 -3\") = \"2 4 6\" ]]\n    [[ $(candidate \"1 2 3 5\" \"-1 2 3 4\"\
    ) = \"2 0 0 1\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: '/tmp/tmpxiv6gpn6.sh: line 14: local: `1 2 3 4 5 1'': invalid variable name
    for name reference

    /tmp/tmpxiv6gpn6.sh: line 15: local: `1 2 3 4 2 -2'': invalid variable name for
    name reference

    '
  stdout: ''
  timestamp: 1660002210
- exit_code: 0
  program: "#!/bin/bash\n# I think we all remember that feeling when the result of\
    \ some long-awaited\n# event is finally known. The feelings and thoughts you have\
    \ at that moment are\n# definitely worth noting down and comparing.\n# Your task\
    \ is to determine if a person correctly guessed the results of a number of matches.\n\
    # You are given two arrays of scores and guesses of equal length, where each index\
    \ shows a match. \n# Return an array of the same length denoting how far off each\
    \ guess was. If they have guessed correctly,\n# the value is 0, and if not, the\
    \ value is the absolute difference between the guess and the score.\n# example:\n\
    #\n# $1 is a space-separated list\n# $2 is a space-separated list\ncompare() {\n\
    \    local -a score=($1)\n    local -a guess=($2)\n    local -a result=()\n  \
    \  for ((i=0; i<${#score[@]}; i++)); do\n        result[i]=$((${score[i]}-${guess[i]}))\n\
    \        result[i]=${result[i]#-}\n    done\n    echo ${result[@]}\n}\n\ncandidate()\
    \ {\n    compare \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"1 2 3\
    \ 4 5 1\" \"1 2 3 4 2 -2\") = \"0 0 0 0 3 3\" ]]\n    [[ $(candidate \"0 0 0 0\
    \ 0 0\" \"0 0 0 0 0 0\") = \"0 0 0 0 0 0\" ]]\n    [[ $(candidate \"1 2 3\" \"\
    -1 -2 -3\") = \"2 4 6\" ]]\n    [[ $(candidate \"1 2 3 5\" \"-1 2 3 4\") = \"\
    2 0 0 1\" ]]\n}\n\nrun_test"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660002210
- exit_code: 1
  program: "#!/bin/bash\n# I think we all remember that feeling when the result of\
    \ some long-awaited\n# event is finally known. The feelings and thoughts you have\
    \ at that moment are\n# definitely worth noting down and comparing.\n# Your task\
    \ is to determine if a person correctly guessed the results of a number of matches.\n\
    # You are given two arrays of scores and guesses of equal length, where each index\
    \ shows a match. \n# Return an array of the same length denoting how far off each\
    \ guess was. If they have guessed correctly,\n# the value is 0, and if not, the\
    \ value is the absolute difference between the guess and the score.\n# example:\n\
    #\n# $1 is a space-separated list\n# $2 is a space-separated list\ncompare() {\n\
    \    local -n scores=$1\n    local -n guesses=$2\n    local result=()\n    for\
    \ i in ${!scores[@]}; do\n        if [[ ${scores[$i]} -eq ${guesses[$i]} ]]; then\n\
    \            result+=(0)\n        else\n            result+=($(( ${scores[$i]}\
    \ - ${guesses[$i]} )))\n        fi\n    done\n    echo ${result[@]}\n}\n\ncandidate()\
    \ {\n    compare \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"1 2 3\
    \ 4 5 1\" \"1 2 3 4 2 -2\") = \"0 0 0 0 3 3\" ]]\n    [[ $(candidate \"0 0 0 0\
    \ 0 0\" \"0 0 0 0 0 0\") = \"0 0 0 0 0 0\" ]]\n    [[ $(candidate \"1 2 3\" \"\
    -1 -2 -3\") = \"2 4 6\" ]]\n    [[ $(candidate \"1 2 3 5\" \"-1 2 3 4\") = \"\
    2 0 0 1\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: '/tmp/tmpxjqriweh.sh: line 14: local: `1 2 3 4 5 1'': invalid variable name
    for name reference

    /tmp/tmpxjqriweh.sh: line 15: local: `1 2 3 4 2 -2'': invalid variable name for
    name reference

    '
  stdout: ''
  timestamp: 1660002210
- exit_code: 0
  program: "#!/bin/bash\n# I think we all remember that feeling when the result of\
    \ some long-awaited\n# event is finally known. The feelings and thoughts you have\
    \ at that moment are\n# definitely worth noting down and comparing.\n# Your task\
    \ is to determine if a person correctly guessed the results of a number of matches.\n\
    # You are given two arrays of scores and guesses of equal length, where each index\
    \ shows a match. \n# Return an array of the same length denoting how far off each\
    \ guess was. If they have guessed correctly,\n# the value is 0, and if not, the\
    \ value is the absolute difference between the guess and the score.\n# example:\n\
    #\n# $1 is a space-separated list\n# $2 is a space-separated list\ncompare() {\n\
    \    local -a scores=($1)\n    local -a guesses=($2)\n    local -a result=()\n\
    \    for ((i=0; i<${#scores[@]}; i++)); do\n        if [[ ${scores[$i]} -eq ${guesses[$i]}\
    \ ]]; then\n            result+=(0)\n        else\n            result+=($((${scores[$i]}-${guesses[$i]})))\n\
    \        fi\n    done\n    echo ${result[@]}\n}\n\ncandidate() {\n    compare\
    \ \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"1 2 3 4 5 1\" \"1 2\
    \ 3 4 2 -2\") = \"0 0 0 0 3 3\" ]]\n    [[ $(candidate \"0 0 0 0 0 0\" \"0 0 0\
    \ 0 0 0\") = \"0 0 0 0 0 0\" ]]\n    [[ $(candidate \"1 2 3\" \"-1 -2 -3\") =\
    \ \"2 4 6\" ]]\n    [[ $(candidate \"1 2 3 5\" \"-1 2 3 4\") = \"2 0 0 1\" ]]\n\
    }\n\nrun_test"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660002210
- exit_code: 0
  program: "#!/bin/bash\n# I think we all remember that feeling when the result of\
    \ some long-awaited\n# event is finally known. The feelings and thoughts you have\
    \ at that moment are\n# definitely worth noting down and comparing.\n# Your task\
    \ is to determine if a person correctly guessed the results of a number of matches.\n\
    # You are given two arrays of scores and guesses of equal length, where each index\
    \ shows a match. \n# Return an array of the same length denoting how far off each\
    \ guess was. If they have guessed correctly,\n# the value is 0, and if not, the\
    \ value is the absolute difference between the guess and the score.\n# example:\n\
    #\n# $1 is a space-separated list\n# $2 is a space-separated list\ncompare() {\n\
    \    local -a scores=($1)\n    local -a guesses=($2)\n    local -a results=()\n\
    \    for ((i=0; i<${#scores[@]}; i++)); do\n        results[i]=$((${scores[i]}-${guesses[i]}))\n\
    \    done\n    echo ${results[@]}\n}\n\ncandidate() {\n    compare \"$@\"\n}\n\
    \nset -e\nrun_test() {\n    [[ $(candidate \"1 2 3 4 5 1\" \"1 2 3 4 2 -2\") =\
    \ \"0 0 0 0 3 3\" ]]\n    [[ $(candidate \"0 0 0 0 0 0\" \"0 0 0 0 0 0\") = \"\
    0 0 0 0 0 0\" ]]\n    [[ $(candidate \"1 2 3\" \"-1 -2 -3\") = \"2 4 6\" ]]\n\
    \    [[ $(candidate \"1 2 3 5\" \"-1 2 3 4\") = \"2 0 0 1\" ]]\n}\n\nrun_test"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660002210
- exit_code: 0
  program: "#!/bin/bash\n# I think we all remember that feeling when the result of\
    \ some long-awaited\n# event is finally known. The feelings and thoughts you have\
    \ at that moment are\n# definitely worth noting down and comparing.\n# Your task\
    \ is to determine if a person correctly guessed the results of a number of matches.\n\
    # You are given two arrays of scores and guesses of equal length, where each index\
    \ shows a match. \n# Return an array of the same length denoting how far off each\
    \ guess was. If they have guessed correctly,\n# the value is 0, and if not, the\
    \ value is the absolute difference between the guess and the score.\n# example:\n\
    #\n# $1 is a space-separated list\n# $2 is a space-separated list\ncompare() {\n\
    \    local score=($1)\n    local guess=($2)\n    local result=()\n    for i in\
    \ ${!score[@]}; do\n        if [[ ${score[$i]} -eq ${guess[$i]} ]]; then\n   \
    \         result[$i]=0\n        else\n            result[$i]=$(( ${score[$i]}\
    \ - ${guess[$i]} ))\n        fi\n    done\n    echo ${result[@]}\n}\n\ncandidate()\
    \ {\n    compare \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"1 2 3\
    \ 4 5 1\" \"1 2 3 4 2 -2\") = \"0 0 0 0 3 3\" ]]\n    [[ $(candidate \"0 0 0 0\
    \ 0 0\" \"0 0 0 0 0 0\") = \"0 0 0 0 0 0\" ]]\n    [[ $(candidate \"1 2 3\" \"\
    -1 -2 -3\") = \"2 4 6\" ]]\n    [[ $(candidate \"1 2 3 5\" \"-1 2 3 4\") = \"\
    2 0 0 1\" ]]\n}\n\nrun_test"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660002210
- exit_code: 0
  program: "#!/bin/bash\n# I think we all remember that feeling when the result of\
    \ some long-awaited\n# event is finally known. The feelings and thoughts you have\
    \ at that moment are\n# definitely worth noting down and comparing.\n# Your task\
    \ is to determine if a person correctly guessed the results of a number of matches.\n\
    # You are given two arrays of scores and guesses of equal length, where each index\
    \ shows a match. \n# Return an array of the same length denoting how far off each\
    \ guess was. If they have guessed correctly,\n# the value is 0, and if not, the\
    \ value is the absolute difference between the guess and the score.\n# example:\n\
    #\n# $1 is a space-separated list\n# $2 is a space-separated list\ncompare() {\n\
    \    local -a scores=($1)\n    local -a guesses=($2)\n    local -a result=()\n\
    \    for (( i=0; i<${#scores[@]}; i++ )); do\n        if [[ ${scores[$i]} -eq\
    \ ${guesses[$i]} ]]; then\n            result+=(0)\n        else\n           \
    \ result+=($((${scores[$i]} - ${guesses[$i]})))\n        fi\n    done\n    echo\
    \ \"${result[@]}\"\n}\n\ncandidate() {\n    compare \"$@\"\n}\n\nset -e\nrun_test()\
    \ {\n    [[ $(candidate \"1 2 3 4 5 1\" \"1 2 3 4 2 -2\") = \"0 0 0 0 3 3\" ]]\n\
    \    [[ $(candidate \"0 0 0 0 0 0\" \"0 0 0 0 0 0\") = \"0 0 0 0 0 0\" ]]\n  \
    \  [[ $(candidate \"1 2 3\" \"-1 -2 -3\") = \"2 4 6\" ]]\n    [[ $(candidate \"\
    1 2 3 5\" \"-1 2 3 4\") = \"2 0 0 1\" ]]\n}\n\nrun_test"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660002210
- exit_code: 0
  program: "#!/bin/bash\n# I think we all remember that feeling when the result of\
    \ some long-awaited\n# event is finally known. The feelings and thoughts you have\
    \ at that moment are\n# definitely worth noting down and comparing.\n# Your task\
    \ is to determine if a person correctly guessed the results of a number of matches.\n\
    # You are given two arrays of scores and guesses of equal length, where each index\
    \ shows a match. \n# Return an array of the same length denoting how far off each\
    \ guess was. If they have guessed correctly,\n# the value is 0, and if not, the\
    \ value is the absolute difference between the guess and the score.\n# example:\n\
    #\n# $1 is a space-separated list\n# $2 is a space-separated list\ncompare() {\n\
    \    local -a scores=($1)\n    local -a guesses=($2)\n    local -a result=()\n\
    \    for ((i=0; i<${#scores[@]}; i++)); do\n        if [[ ${scores[$i]} -eq ${guesses[$i]}\
    \ ]]; then\n            result[$i]=0\n        else\n            result[$i]=$((\
    \ ${scores[$i]} - ${guesses[$i]} ))\n        fi\n    done\n    echo ${result[@]}\n\
    }\n\ncandidate() {\n    compare \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate\
    \ \"1 2 3 4 5 1\" \"1 2 3 4 2 -2\") = \"0 0 0 0 3 3\" ]]\n    [[ $(candidate \"\
    0 0 0 0 0 0\" \"0 0 0 0 0 0\") = \"0 0 0 0 0 0\" ]]\n    [[ $(candidate \"1 2\
    \ 3\" \"-1 -2 -3\") = \"2 4 6\" ]]\n    [[ $(candidate \"1 2 3 5\" \"-1 2 3 4\"\
    ) = \"2 0 0 1\" ]]\n}\n\nrun_test"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660002209
- exit_code: 0
  program: "#!/bin/bash\n# I think we all remember that feeling when the result of\
    \ some long-awaited\n# event is finally known. The feelings and thoughts you have\
    \ at that moment are\n# definitely worth noting down and comparing.\n# Your task\
    \ is to determine if a person correctly guessed the results of a number of matches.\n\
    # You are given two arrays of scores and guesses of equal length, where each index\
    \ shows a match. \n# Return an array of the same length denoting how far off each\
    \ guess was. If they have guessed correctly,\n# the value is 0, and if not, the\
    \ value is the absolute difference between the guess and the score.\n# example:\n\
    #\n# $1 is a space-separated list\n# $2 is a space-separated list\ncompare() {\n\
    \  local score=($1)\n  local guess=($2)\n  local result=()\n  for ((i=0; i<${#score[@]};\
    \ i++)); do\n    result[$i]=$((${score[$i]}-${guess[$i]}))\n    if [[ ${result[$i]}\
    \ -lt 0 ]]; then\n      result[$i]=$((-${result[$i]}))\n    fi\n  done\n  echo\
    \ ${result[@]}\n}\n\ncandidate() {\n    compare \"$@\"\n}\n\nset -e\nrun_test()\
    \ {\n    [[ $(candidate \"1 2 3 4 5 1\" \"1 2 3 4 2 -2\") = \"0 0 0 0 3 3\" ]]\n\
    \    [[ $(candidate \"0 0 0 0 0 0\" \"0 0 0 0 0 0\") = \"0 0 0 0 0 0\" ]]\n  \
    \  [[ $(candidate \"1 2 3\" \"-1 -2 -3\") = \"2 4 6\" ]]\n    [[ $(candidate \"\
    1 2 3 5\" \"-1 2 3 4\") = \"2 0 0 1\" ]]\n}\n\nrun_test"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660002210
- exit_code: 0
  program: "#!/bin/bash\n# I think we all remember that feeling when the result of\
    \ some long-awaited\n# event is finally known. The feelings and thoughts you have\
    \ at that moment are\n# definitely worth noting down and comparing.\n# Your task\
    \ is to determine if a person correctly guessed the results of a number of matches.\n\
    # You are given two arrays of scores and guesses of equal length, where each index\
    \ shows a match. \n# Return an array of the same length denoting how far off each\
    \ guess was. If they have guessed correctly,\n# the value is 0, and if not, the\
    \ value is the absolute difference between the guess and the score.\n# example:\n\
    #\n# $1 is a space-separated list\n# $2 is a space-separated list\ncompare() {\n\
    \    local scores=($1)\n    local guesses=($2)\n    local result=()\n    for ((i=0;\
    \ i<${#scores[@]}; i++)); do\n        if [[ ${scores[$i]} -eq ${guesses[$i]} ]];\
    \ then\n            result+=(0)\n        else\n            result+=($((${scores[$i]}\
    \ - ${guesses[$i]})))\n        fi\n    done\n    echo ${result[@]}\n}\n\ncandidate()\
    \ {\n    compare \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"1 2 3\
    \ 4 5 1\" \"1 2 3 4 2 -2\") = \"0 0 0 0 3 3\" ]]\n    [[ $(candidate \"0 0 0 0\
    \ 0 0\" \"0 0 0 0 0 0\") = \"0 0 0 0 0 0\" ]]\n    [[ $(candidate \"1 2 3\" \"\
    -1 -2 -3\") = \"2 4 6\" ]]\n    [[ $(candidate \"1 2 3 5\" \"-1 2 3 4\") = \"\
    2 0 0 1\" ]]\n}\n\nrun_test"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660002210
- exit_code: 1
  program: "#!/bin/bash\n# I think we all remember that feeling when the result of\
    \ some long-awaited\n# event is finally known. The feelings and thoughts you have\
    \ at that moment are\n# definitely worth noting down and comparing.\n# Your task\
    \ is to determine if a person correctly guessed the results of a number of matches.\n\
    # You are given two arrays of scores and guesses of equal length, where each index\
    \ shows a match. \n# Return an array of the same length denoting how far off each\
    \ guess was. If they have guessed correctly,\n# the value is 0, and if not, the\
    \ value is the absolute difference between the guess and the score.\n# example:\n\
    #\n# $1 is a space-separated list\n# $2 is a space-separated list\ncompare() {\n\
    \    local -n scores=$1\n    local -n guesses=$2\n    local -a result=()\n   \
    \ for ((i=0; i<${#scores[@]}; i++)); do\n        if [[ ${scores[$i]} -eq ${guesses[$i]}\
    \ ]]; then\n            result+=(0)\n        else\n            result+=($(( ${scores[$i]}\
    \ - ${guesses[$i]} )))\n        fi\n    done\n    echo \"${result[@]}\"\n}\n\n\
    candidate() {\n    compare \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate\
    \ \"1 2 3 4 5 1\" \"1 2 3 4 2 -2\") = \"0 0 0 0 3 3\" ]]\n    [[ $(candidate \"\
    0 0 0 0 0 0\" \"0 0 0 0 0 0\") = \"0 0 0 0 0 0\" ]]\n    [[ $(candidate \"1 2\
    \ 3\" \"-1 -2 -3\") = \"2 4 6\" ]]\n    [[ $(candidate \"1 2 3 5\" \"-1 2 3 4\"\
    ) = \"2 0 0 1\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: '/tmp/tmpafs_1xxy.sh: line 14: local: `1 2 3 4 5 1'': invalid variable name
    for name reference

    /tmp/tmpafs_1xxy.sh: line 15: local: `1 2 3 4 2 -2'': invalid variable name for
    name reference

    '
  stdout: ''
  timestamp: 1660002210
- exit_code: 1
  program: "#!/bin/bash\n# I think we all remember that feeling when the result of\
    \ some long-awaited\n# event is finally known. The feelings and thoughts you have\
    \ at that moment are\n# definitely worth noting down and comparing.\n# Your task\
    \ is to determine if a person correctly guessed the results of a number of matches.\n\
    # You are given two arrays of scores and guesses of equal length, where each index\
    \ shows a match. \n# Return an array of the same length denoting how far off each\
    \ guess was. If they have guessed correctly,\n# the value is 0, and if not, the\
    \ value is the absolute difference between the guess and the score.\n# example:\n\
    #\n# $1 is a space-separated list\n# $2 is a space-separated list\ncompare() {\n\
    \    local -n scores=$1\n    local -n guesses=$2\n    local -a result=()\n   \
    \ for ((i=0; i<${#scores[@]}; i++)); do\n        if [[ ${scores[$i]} -eq ${guesses[$i]}\
    \ ]]; then\n            result+=(0)\n        else\n            result+=($(( ${scores[$i]}\
    \ - ${guesses[$i]} )))\n        fi\n    done\n    echo \"${result[@]}\"\n}\n\n\
    candidate() {\n    compare \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate\
    \ \"1 2 3 4 5 1\" \"1 2 3 4 2 -2\") = \"0 0 0 0 3 3\" ]]\n    [[ $(candidate \"\
    0 0 0 0 0 0\" \"0 0 0 0 0 0\") = \"0 0 0 0 0 0\" ]]\n    [[ $(candidate \"1 2\
    \ 3\" \"-1 -2 -3\") = \"2 4 6\" ]]\n    [[ $(candidate \"1 2 3 5\" \"-1 2 3 4\"\
    ) = \"2 0 0 1\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: '/tmp/tmpafs_1xxy.sh: line 14: local: `1 2 3 4 5 1'': invalid variable name
    for name reference

    /tmp/tmpafs_1xxy.sh: line 15: local: `1 2 3 4 2 -2'': invalid variable name for
    name reference

    '
  stdout: ''
  timestamp: 1660002210
- exit_code: 0
  program: "#!/bin/bash\n# I think we all remember that feeling when the result of\
    \ some long-awaited\n# event is finally known. The feelings and thoughts you have\
    \ at that moment are\n# definitely worth noting down and comparing.\n# Your task\
    \ is to determine if a person correctly guessed the results of a number of matches.\n\
    # You are given two arrays of scores and guesses of equal length, where each index\
    \ shows a match. \n# Return an array of the same length denoting how far off each\
    \ guess was. If they have guessed correctly,\n# the value is 0, and if not, the\
    \ value is the absolute difference between the guess and the score.\n# example:\n\
    #\n# $1 is a space-separated list\n# $2 is a space-separated list\ncompare() {\n\
    \  local scores=($1)\n  local guesses=($2)\n  local result=()\n  for ((i=0; i<${#scores[@]};\
    \ i++)); do\n    if [[ ${scores[$i]} -eq ${guesses[$i]} ]]; then\n      result+=(0)\n\
    \    else\n      result+=($((${scores[$i]} - ${guesses[$i]})))\n    fi\n  done\n\
    \  echo ${result[@]}\n}\n\ncandidate() {\n    compare \"$@\"\n}\n\nset -e\nrun_test()\
    \ {\n    [[ $(candidate \"1 2 3 4 5 1\" \"1 2 3 4 2 -2\") = \"0 0 0 0 3 3\" ]]\n\
    \    [[ $(candidate \"0 0 0 0 0 0\" \"0 0 0 0 0 0\") = \"0 0 0 0 0 0\" ]]\n  \
    \  [[ $(candidate \"1 2 3\" \"-1 -2 -3\") = \"2 4 6\" ]]\n    [[ $(candidate \"\
    1 2 3 5\" \"-1 2 3 4\") = \"2 0 0 1\" ]]\n}\n\nrun_test"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660002210
- exit_code: 0
  program: "#!/bin/bash\n# I think we all remember that feeling when the result of\
    \ some long-awaited\n# event is finally known. The feelings and thoughts you have\
    \ at that moment are\n# definitely worth noting down and comparing.\n# Your task\
    \ is to determine if a person correctly guessed the results of a number of matches.\n\
    # You are given two arrays of scores and guesses of equal length, where each index\
    \ shows a match. \n# Return an array of the same length denoting how far off each\
    \ guess was. If they have guessed correctly,\n# the value is 0, and if not, the\
    \ value is the absolute difference between the guess and the score.\n# example:\n\
    #\n# $1 is a space-separated list\n# $2 is a space-separated list\ncompare() {\n\
    \    local -a scores=($1)\n    local -a guesses=($2)\n    local -a result=()\n\
    \    for ((i=0; i<${#scores[@]}; i++)); do\n        result[$i]=$((${scores[$i]}-${guesses[$i]}))\n\
    \    done\n    echo ${result[@]}\n}\n\ncandidate() {\n    compare \"$@\"\n}\n\n\
    set -e\nrun_test() {\n    [[ $(candidate \"1 2 3 4 5 1\" \"1 2 3 4 2 -2\") = \"\
    0 0 0 0 3 3\" ]]\n    [[ $(candidate \"0 0 0 0 0 0\" \"0 0 0 0 0 0\") = \"0 0\
    \ 0 0 0 0\" ]]\n    [[ $(candidate \"1 2 3\" \"-1 -2 -3\") = \"2 4 6\" ]]\n  \
    \  [[ $(candidate \"1 2 3 5\" \"-1 2 3 4\") = \"2 0 0 1\" ]]\n}\n\nrun_test"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660002210
- exit_code: 1
  program: "#!/bin/bash\n# I think we all remember that feeling when the result of\
    \ some long-awaited\n# event is finally known. The feelings and thoughts you have\
    \ at that moment are\n# definitely worth noting down and comparing.\n# Your task\
    \ is to determine if a person correctly guessed the results of a number of matches.\n\
    # You are given two arrays of scores and guesses of equal length, where each index\
    \ shows a match. \n# Return an array of the same length denoting how far off each\
    \ guess was. If they have guessed correctly,\n# the value is 0, and if not, the\
    \ value is the absolute difference between the guess and the score.\n# example:\n\
    #\n# $1 is a space-separated list\n# $2 is a space-separated list\ncompare() {\n\
    \    local -n scores=$1\n    local -n guesses=$2\n    local result=()\n    for\
    \ ((i=0; i<${#scores[@]}; i++)); do\n        result+=($((${scores[$i]} - ${guesses[$i]})))\n\
    \    done\n    echo \"${result[@]}\"\n}\n\ncandidate() {\n    compare \"$@\"\n\
    }\n\nset -e\nrun_test() {\n    [[ $(candidate \"1 2 3 4 5 1\" \"1 2 3 4 2 -2\"\
    ) = \"0 0 0 0 3 3\" ]]\n    [[ $(candidate \"0 0 0 0 0 0\" \"0 0 0 0 0 0\") =\
    \ \"0 0 0 0 0 0\" ]]\n    [[ $(candidate \"1 2 3\" \"-1 -2 -3\") = \"2 4 6\" ]]\n\
    \    [[ $(candidate \"1 2 3 5\" \"-1 2 3 4\") = \"2 0 0 1\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: '/tmp/tmpizc6npkr.sh: line 14: local: `1 2 3 4 5 1'': invalid variable name
    for name reference

    /tmp/tmpizc6npkr.sh: line 15: local: `1 2 3 4 2 -2'': invalid variable name for
    name reference

    '
  stdout: ''
  timestamp: 1660002210
- exit_code: 0
  program: "#!/bin/bash\n# I think we all remember that feeling when the result of\
    \ some long-awaited\n# event is finally known. The feelings and thoughts you have\
    \ at that moment are\n# definitely worth noting down and comparing.\n# Your task\
    \ is to determine if a person correctly guessed the results of a number of matches.\n\
    # You are given two arrays of scores and guesses of equal length, where each index\
    \ shows a match. \n# Return an array of the same length denoting how far off each\
    \ guess was. If they have guessed correctly,\n# the value is 0, and if not, the\
    \ value is the absolute difference between the guess and the score.\n# example:\n\
    #\n# $1 is a space-separated list\n# $2 is a space-separated list\ncompare() {\n\
    \    local -a scores=($1)\n    local -a guesses=($2)\n    local -a result=()\n\
    \    for ((i=0; i<${#scores[@]}; i++)); do\n        result[i]=$((${scores[i]}-${guesses[i]}))\n\
    \        if [[ ${result[i]} -lt 0 ]]; then\n            result[i]=$((-${result[i]}))\n\
    \        fi\n    done\n    echo ${result[@]}\n}\n\ncandidate() {\n    compare\
    \ \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"1 2 3 4 5 1\" \"1 2\
    \ 3 4 2 -2\") = \"0 0 0 0 3 3\" ]]\n    [[ $(candidate \"0 0 0 0 0 0\" \"0 0 0\
    \ 0 0 0\") = \"0 0 0 0 0 0\" ]]\n    [[ $(candidate \"1 2 3\" \"-1 -2 -3\") =\
    \ \"2 4 6\" ]]\n    [[ $(candidate \"1 2 3 5\" \"-1 2 3 4\") = \"2 0 0 1\" ]]\n\
    }\n\nrun_test"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660002210
- exit_code: 1
  program: "#!/bin/bash\n# I think we all remember that feeling when the result of\
    \ some long-awaited\n# event is finally known. The feelings and thoughts you have\
    \ at that moment are\n# definitely worth noting down and comparing.\n# Your task\
    \ is to determine if a person correctly guessed the results of a number of matches.\n\
    # You are given two arrays of scores and guesses of equal length, where each index\
    \ shows a match. \n# Return an array of the same length denoting how far off each\
    \ guess was. If they have guessed correctly,\n# the value is 0, and if not, the\
    \ value is the absolute difference between the guess and the score.\n# example:\n\
    #\n# $1 is a space-separated list\n# $2 is a space-separated list\ncompare() {\n\
    \    local -n scores=$1\n    local -n guesses=$2\n    local result=()\n    for\
    \ ((i=0; i<${#scores[@]}; i++)); do\n        if [[ ${scores[$i]} -eq ${guesses[$i]}\
    \ ]]; then\n            result+=(0)\n        else\n            result+=($(( ${scores[$i]}\
    \ - ${guesses[$i]} )))\n        fi\n    done\n    echo \"${result[@]}\"\n}\n\n\
    candidate() {\n    compare \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate\
    \ \"1 2 3 4 5 1\" \"1 2 3 4 2 -2\") = \"0 0 0 0 3 3\" ]]\n    [[ $(candidate \"\
    0 0 0 0 0 0\" \"0 0 0 0 0 0\") = \"0 0 0 0 0 0\" ]]\n    [[ $(candidate \"1 2\
    \ 3\" \"-1 -2 -3\") = \"2 4 6\" ]]\n    [[ $(candidate \"1 2 3 5\" \"-1 2 3 4\"\
    ) = \"2 0 0 1\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: '/tmp/tmp9mohepqf.sh: line 14: local: `1 2 3 4 5 1'': invalid variable name
    for name reference

    /tmp/tmp9mohepqf.sh: line 15: local: `1 2 3 4 2 -2'': invalid variable name for
    name reference

    '
  stdout: ''
  timestamp: 1660002210
- exit_code: 1
  program: "#!/bin/bash\n# I think we all remember that feeling when the result of\
    \ some long-awaited\n# event is finally known. The feelings and thoughts you have\
    \ at that moment are\n# definitely worth noting down and comparing.\n# Your task\
    \ is to determine if a person correctly guessed the results of a number of matches.\n\
    # You are given two arrays of scores and guesses of equal length, where each index\
    \ shows a match. \n# Return an array of the same length denoting how far off each\
    \ guess was. If they have guessed correctly,\n# the value is 0, and if not, the\
    \ value is the absolute difference between the guess and the score.\n# example:\n\
    #\n# $1 is a space-separated list\n# $2 is a space-separated list\ncompare() {\n\
    \    local -n scores=$1\n    local -n guesses=$2\n    local -a result=()\n   \
    \ for ((i=0; i<${#scores[@]}; i++)); do\n        result+=($((${scores[$i]} - ${guesses[$i]})))\n\
    \    done\n    echo \"${result[@]}\"\n}\n\ncandidate() {\n    compare \"$@\"\n\
    }\n\nset -e\nrun_test() {\n    [[ $(candidate \"1 2 3 4 5 1\" \"1 2 3 4 2 -2\"\
    ) = \"0 0 0 0 3 3\" ]]\n    [[ $(candidate \"0 0 0 0 0 0\" \"0 0 0 0 0 0\") =\
    \ \"0 0 0 0 0 0\" ]]\n    [[ $(candidate \"1 2 3\" \"-1 -2 -3\") = \"2 4 6\" ]]\n\
    \    [[ $(candidate \"1 2 3 5\" \"-1 2 3 4\") = \"2 0 0 1\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: '/tmp/tmpj_hkzzds.sh: line 14: local: `1 2 3 4 5 1'': invalid variable name
    for name reference

    /tmp/tmpj_hkzzds.sh: line 15: local: `1 2 3 4 2 -2'': invalid variable name for
    name reference

    '
  stdout: ''
  timestamp: 1660002210
- exit_code: 1
  program: "#!/bin/bash\n# I think we all remember that feeling when the result of\
    \ some long-awaited\n# event is finally known. The feelings and thoughts you have\
    \ at that moment are\n# definitely worth noting down and comparing.\n# Your task\
    \ is to determine if a person correctly guessed the results of a number of matches.\n\
    # You are given two arrays of scores and guesses of equal length, where each index\
    \ shows a match. \n# Return an array of the same length denoting how far off each\
    \ guess was. If they have guessed correctly,\n# the value is 0, and if not, the\
    \ value is the absolute difference between the guess and the score.\n# example:\n\
    #\n# $1 is a space-separated list\n# $2 is a space-separated list\ncompare() {\n\
    \    local -n scores=$1\n    local -n guesses=$2\n    local -a result=()\n   \
    \ for ((i=0; i<${#scores[@]}; i++)); do\n        result[i]=$((${scores[i]}-${guesses[i]}))\n\
    \        if [[ ${result[i]} -lt 0 ]]; then\n            result[i]=$((-${result[i]}))\n\
    \        fi\n    done\n    echo ${result[@]}\n}\n\ncandidate() {\n    compare\
    \ \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"1 2 3 4 5 1\" \"1 2\
    \ 3 4 2 -2\") = \"0 0 0 0 3 3\" ]]\n    [[ $(candidate \"0 0 0 0 0 0\" \"0 0 0\
    \ 0 0 0\") = \"0 0 0 0 0 0\" ]]\n    [[ $(candidate \"1 2 3\" \"-1 -2 -3\") =\
    \ \"2 4 6\" ]]\n    [[ $(candidate \"1 2 3 5\" \"-1 2 3 4\") = \"2 0 0 1\" ]]\n\
    }\n\nrun_test"
  status: Exception
  stderr: '/tmp/tmpjm9y46gd.sh: line 14: local: `1 2 3 4 5 1'': invalid variable name
    for name reference

    /tmp/tmpjm9y46gd.sh: line 15: local: `1 2 3 4 2 -2'': invalid variable name for
    name reference

    '
  stdout: ''
  timestamp: 1660002210
- exit_code: 1
  program: "#!/bin/bash\n# I think we all remember that feeling when the result of\
    \ some long-awaited\n# event is finally known. The feelings and thoughts you have\
    \ at that moment are\n# definitely worth noting down and comparing.\n# Your task\
    \ is to determine if a person correctly guessed the results of a number of matches.\n\
    # You are given two arrays of scores and guesses of equal length, where each index\
    \ shows a match. \n# Return an array of the same length denoting how far off each\
    \ guess was. If they have guessed correctly,\n# the value is 0, and if not, the\
    \ value is the absolute difference between the guess and the score.\n# example:\n\
    #\n# $1 is a space-separated list\n# $2 is a space-separated list\ncompare() {\n\
    \    local -n scores=$1\n    local -n guesses=$2\n    local -a result=()\n   \
    \ for ((i=0; i<${#scores[@]}; i++)); do\n        result+=($((${scores[$i]} - ${guesses[$i]})))\n\
    \    done\n    echo \"${result[@]}\"\n}\n\ncandidate() {\n    compare \"$@\"\n\
    }\n\nset -e\nrun_test() {\n    [[ $(candidate \"1 2 3 4 5 1\" \"1 2 3 4 2 -2\"\
    ) = \"0 0 0 0 3 3\" ]]\n    [[ $(candidate \"0 0 0 0 0 0\" \"0 0 0 0 0 0\") =\
    \ \"0 0 0 0 0 0\" ]]\n    [[ $(candidate \"1 2 3\" \"-1 -2 -3\") = \"2 4 6\" ]]\n\
    \    [[ $(candidate \"1 2 3 5\" \"-1 2 3 4\") = \"2 0 0 1\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: '/tmp/tmpj_hkzzds.sh: line 14: local: `1 2 3 4 5 1'': invalid variable name
    for name reference

    /tmp/tmpj_hkzzds.sh: line 15: local: `1 2 3 4 2 -2'': invalid variable name for
    name reference

    '
  stdout: ''
  timestamp: 1660002210
- exit_code: 1
  program: "#!/bin/bash\n# I think we all remember that feeling when the result of\
    \ some long-awaited\n# event is finally known. The feelings and thoughts you have\
    \ at that moment are\n# definitely worth noting down and comparing.\n# Your task\
    \ is to determine if a person correctly guessed the results of a number of matches.\n\
    # You are given two arrays of scores and guesses of equal length, where each index\
    \ shows a match. \n# Return an array of the same length denoting how far off each\
    \ guess was. If they have guessed correctly,\n# the value is 0, and if not, the\
    \ value is the absolute difference between the guess and the score.\n# example:\n\
    #\n# $1 is a space-separated list\n# $2 is a space-separated list\ncompare() {\n\
    \    local -n scores=$1\n    local -n guesses=$2\n    local -a result=()\n   \
    \ for ((i=0; i<${#scores[@]}; i++)); do\n        if [[ ${scores[$i]} -eq ${guesses[$i]}\
    \ ]]; then\n            result+=(\"0\")\n        else\n            result+=(\"\
    $((${scores[$i]} - ${guesses[$i]}))\")\n        fi\n    done\n    echo \"${result[@]}\"\
    \n}\n\ncandidate() {\n    compare \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate\
    \ \"1 2 3 4 5 1\" \"1 2 3 4 2 -2\") = \"0 0 0 0 3 3\" ]]\n    [[ $(candidate \"\
    0 0 0 0 0 0\" \"0 0 0 0 0 0\") = \"0 0 0 0 0 0\" ]]\n    [[ $(candidate \"1 2\
    \ 3\" \"-1 -2 -3\") = \"2 4 6\" ]]\n    [[ $(candidate \"1 2 3 5\" \"-1 2 3 4\"\
    ) = \"2 0 0 1\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: '/tmp/tmp9i813l0w.sh: line 14: local: `1 2 3 4 5 1'': invalid variable name
    for name reference

    /tmp/tmp9i813l0w.sh: line 15: local: `1 2 3 4 2 -2'': invalid variable name for
    name reference

    '
  stdout: ''
  timestamp: 1660002210
- exit_code: 0
  program: "#!/bin/bash\n# I think we all remember that feeling when the result of\
    \ some long-awaited\n# event is finally known. The feelings and thoughts you have\
    \ at that moment are\n# definitely worth noting down and comparing.\n# Your task\
    \ is to determine if a person correctly guessed the results of a number of matches.\n\
    # You are given two arrays of scores and guesses of equal length, where each index\
    \ shows a match. \n# Return an array of the same length denoting how far off each\
    \ guess was. If they have guessed correctly,\n# the value is 0, and if not, the\
    \ value is the absolute difference between the guess and the score.\n# example:\n\
    #\n# $1 is a space-separated list\n# $2 is a space-separated list\ncompare() {\n\
    \    local score=($1)\n    local guess=($2)\n    local result=()\n    for ((i=0;\
    \ i<${#score[@]}; i++)); do\n        if [[ ${score[$i]} -eq ${guess[$i]} ]]; then\n\
    \            result+=(0)\n        else\n            result+=($((${score[$i]} -\
    \ ${guess[$i]})))\n        fi\n    done\n    echo ${result[@]}\n}\n\ncandidate()\
    \ {\n    compare \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"1 2 3\
    \ 4 5 1\" \"1 2 3 4 2 -2\") = \"0 0 0 0 3 3\" ]]\n    [[ $(candidate \"0 0 0 0\
    \ 0 0\" \"0 0 0 0 0 0\") = \"0 0 0 0 0 0\" ]]\n    [[ $(candidate \"1 2 3\" \"\
    -1 -2 -3\") = \"2 4 6\" ]]\n    [[ $(candidate \"1 2 3 5\" \"-1 2 3 4\") = \"\
    2 0 0 1\" ]]\n}\n\nrun_test"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660002210
- exit_code: 1
  program: "#!/bin/bash\n# I think we all remember that feeling when the result of\
    \ some long-awaited\n# event is finally known. The feelings and thoughts you have\
    \ at that moment are\n# definitely worth noting down and comparing.\n# Your task\
    \ is to determine if a person correctly guessed the results of a number of matches.\n\
    # You are given two arrays of scores and guesses of equal length, where each index\
    \ shows a match. \n# Return an array of the same length denoting how far off each\
    \ guess was. If they have guessed correctly,\n# the value is 0, and if not, the\
    \ value is the absolute difference between the guess and the score.\n# example:\n\
    #\n# $1 is a space-separated list\n# $2 is a space-separated list\ncompare() {\n\
    \  local -n scores=$1\n  local -n guesses=$2\n  local result=()\n  for ((i=0;\
    \ i<${#scores[@]}; i++)); do\n    if [[ ${scores[$i]} -eq ${guesses[$i]} ]]; then\n\
    \      result+=(\"0\")\n    else\n      result+=(\"$((${scores[$i]} - ${guesses[$i]}))\"\
    )\n    fi\n  done\n  echo \"${result[@]}\"\n}\n\ncandidate() {\n    compare \"\
    $@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"1 2 3 4 5 1\" \"1 2 3 4\
    \ 2 -2\") = \"0 0 0 0 3 3\" ]]\n    [[ $(candidate \"0 0 0 0 0 0\" \"0 0 0 0 0\
    \ 0\") = \"0 0 0 0 0 0\" ]]\n    [[ $(candidate \"1 2 3\" \"-1 -2 -3\") = \"2\
    \ 4 6\" ]]\n    [[ $(candidate \"1 2 3 5\" \"-1 2 3 4\") = \"2 0 0 1\" ]]\n}\n\
    \nrun_test"
  status: Exception
  stderr: '/tmp/tmpmknlm16n.sh: line 14: local: `1 2 3 4 5 1'': invalid variable name
    for name reference

    /tmp/tmpmknlm16n.sh: line 15: local: `1 2 3 4 2 -2'': invalid variable name for
    name reference

    '
  stdout: ''
  timestamp: 1660002210
- exit_code: 1
  program: "#!/bin/bash\n# I think we all remember that feeling when the result of\
    \ some long-awaited\n# event is finally known. The feelings and thoughts you have\
    \ at that moment are\n# definitely worth noting down and comparing.\n# Your task\
    \ is to determine if a person correctly guessed the results of a number of matches.\n\
    # You are given two arrays of scores and guesses of equal length, where each index\
    \ shows a match. \n# Return an array of the same length denoting how far off each\
    \ guess was. If they have guessed correctly,\n# the value is 0, and if not, the\
    \ value is the absolute difference between the guess and the score.\n# example:\n\
    #\n# $1 is a space-separated list\n# $2 is a space-separated list\ncompare() {\n\
    \  local -n scores=$1\n  local -n guesses=$2\n  local -a result=()\n  for ((i=0;\
    \ i<${#scores[@]}; i++)); do\n    result[i]=$((${scores[i]}-${guesses[i]}))\n\
    \    if [[ ${result[i]} -lt 0 ]]; then\n      result[i]=$((-${result[i]}))\n \
    \   fi\n  done\n  echo \"${result[@]}\"\n}\n\ncandidate() {\n    compare \"$@\"\
    \n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"1 2 3 4 5 1\" \"1 2 3 4 2 -2\"\
    ) = \"0 0 0 0 3 3\" ]]\n    [[ $(candidate \"0 0 0 0 0 0\" \"0 0 0 0 0 0\") =\
    \ \"0 0 0 0 0 0\" ]]\n    [[ $(candidate \"1 2 3\" \"-1 -2 -3\") = \"2 4 6\" ]]\n\
    \    [[ $(candidate \"1 2 3 5\" \"-1 2 3 4\") = \"2 0 0 1\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: '/tmp/tmph9q9ne3g.sh: line 14: local: `1 2 3 4 5 1'': invalid variable name
    for name reference

    /tmp/tmph9q9ne3g.sh: line 15: local: `1 2 3 4 2 -2'': invalid variable name for
    name reference

    '
  stdout: ''
  timestamp: 1660002210
- exit_code: 1
  program: "#!/bin/bash\n# I think we all remember that feeling when the result of\
    \ some long-awaited\n# event is finally known. The feelings and thoughts you have\
    \ at that moment are\n# definitely worth noting down and comparing.\n# Your task\
    \ is to determine if a person correctly guessed the results of a number of matches.\n\
    # You are given two arrays of scores and guesses of equal length, where each index\
    \ shows a match. \n# Return an array of the same length denoting how far off each\
    \ guess was. If they have guessed correctly,\n# the value is 0, and if not, the\
    \ value is the absolute difference between the guess and the score.\n# example:\n\
    #\n# $1 is a space-separated list\n# $2 is a space-separated list\ncompare() {\n\
    \    local -n scores=$1\n    local -n guesses=$2\n    local result=()\n    for\
    \ ((i=0; i<${#scores[@]}; i++)); do\n        if [[ ${scores[$i]} -eq ${guesses[$i]}\
    \ ]]; then\n            result+=(0)\n        else\n            result+=($(( ${scores[$i]}\
    \ - ${guesses[$i]} )))\n        fi\n    done\n    echo \"${result[@]}\"\n}\n\n\
    candidate() {\n    compare \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate\
    \ \"1 2 3 4 5 1\" \"1 2 3 4 2 -2\") = \"0 0 0 0 3 3\" ]]\n    [[ $(candidate \"\
    0 0 0 0 0 0\" \"0 0 0 0 0 0\") = \"0 0 0 0 0 0\" ]]\n    [[ $(candidate \"1 2\
    \ 3\" \"-1 -2 -3\") = \"2 4 6\" ]]\n    [[ $(candidate \"1 2 3 5\" \"-1 2 3 4\"\
    ) = \"2 0 0 1\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: '/tmp/tmp9mohepqf.sh: line 14: local: `1 2 3 4 5 1'': invalid variable name
    for name reference

    /tmp/tmp9mohepqf.sh: line 15: local: `1 2 3 4 2 -2'': invalid variable name for
    name reference

    '
  stdout: ''
  timestamp: 1660002210
- exit_code: 1
  program: "#!/bin/bash\n# I think we all remember that feeling when the result of\
    \ some long-awaited\n# event is finally known. The feelings and thoughts you have\
    \ at that moment are\n# definitely worth noting down and comparing.\n# Your task\
    \ is to determine if a person correctly guessed the results of a number of matches.\n\
    # You are given two arrays of scores and guesses of equal length, where each index\
    \ shows a match. \n# Return an array of the same length denoting how far off each\
    \ guess was. If they have guessed correctly,\n# the value is 0, and if not, the\
    \ value is the absolute difference between the guess and the score.\n# example:\n\
    #\n# $1 is a space-separated list\n# $2 is a space-separated list\ncompare() {\n\
    \    local -n scores=$1\n    local -n guesses=$2\n    local -a result=()\n   \
    \ for ((i=0; i<${#scores[@]}; i++)); do\n        if [[ ${scores[$i]} -eq ${guesses[$i]}\
    \ ]]; then\n            result+=(0)\n        else\n            result+=($(( ${scores[$i]}\
    \ - ${guesses[$i]} )))\n        fi\n    done\n    echo \"${result[@]}\"\n}\n\n\
    candidate() {\n    compare \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate\
    \ \"1 2 3 4 5 1\" \"1 2 3 4 2 -2\") = \"0 0 0 0 3 3\" ]]\n    [[ $(candidate \"\
    0 0 0 0 0 0\" \"0 0 0 0 0 0\") = \"0 0 0 0 0 0\" ]]\n    [[ $(candidate \"1 2\
    \ 3\" \"-1 -2 -3\") = \"2 4 6\" ]]\n    [[ $(candidate \"1 2 3 5\" \"-1 2 3 4\"\
    ) = \"2 0 0 1\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: '/tmp/tmpafs_1xxy.sh: line 14: local: `1 2 3 4 5 1'': invalid variable name
    for name reference

    /tmp/tmpafs_1xxy.sh: line 15: local: `1 2 3 4 2 -2'': invalid variable name for
    name reference

    '
  stdout: ''
  timestamp: 1660002210
- exit_code: 1
  program: "#!/bin/bash\n# I think we all remember that feeling when the result of\
    \ some long-awaited\n# event is finally known. The feelings and thoughts you have\
    \ at that moment are\n# definitely worth noting down and comparing.\n# Your task\
    \ is to determine if a person correctly guessed the results of a number of matches.\n\
    # You are given two arrays of scores and guesses of equal length, where each index\
    \ shows a match. \n# Return an array of the same length denoting how far off each\
    \ guess was. If they have guessed correctly,\n# the value is 0, and if not, the\
    \ value is the absolute difference between the guess and the score.\n# example:\n\
    #\n# $1 is a space-separated list\n# $2 is a space-separated list\ncompare() {\n\
    \  local -n scores=$1\n  local -n guesses=$2\n  local -a result=()\n  for ((i=0;\
    \ i<${#scores[@]}; i++)); do\n    result[$i]=$((${scores[$i]}-${guesses[$i]}))\n\
    \    result[$i]=${result[$i]#-}\n  done\n  echo \"${result[@]}\"\n}\n\ncandidate()\
    \ {\n    compare \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"1 2 3\
    \ 4 5 1\" \"1 2 3 4 2 -2\") = \"0 0 0 0 3 3\" ]]\n    [[ $(candidate \"0 0 0 0\
    \ 0 0\" \"0 0 0 0 0 0\") = \"0 0 0 0 0 0\" ]]\n    [[ $(candidate \"1 2 3\" \"\
    -1 -2 -3\") = \"2 4 6\" ]]\n    [[ $(candidate \"1 2 3 5\" \"-1 2 3 4\") = \"\
    2 0 0 1\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: '/tmp/tmp8kbb_pa8.sh: line 14: local: `1 2 3 4 5 1'': invalid variable name
    for name reference

    /tmp/tmp8kbb_pa8.sh: line 15: local: `1 2 3 4 2 -2'': invalid variable name for
    name reference

    '
  stdout: ''
  timestamp: 1660002210
- exit_code: 0
  program: "#!/bin/bash\n# I think we all remember that feeling when the result of\
    \ some long-awaited\n# event is finally known. The feelings and thoughts you have\
    \ at that moment are\n# definitely worth noting down and comparing.\n# Your task\
    \ is to determine if a person correctly guessed the results of a number of matches.\n\
    # You are given two arrays of scores and guesses of equal length, where each index\
    \ shows a match. \n# Return an array of the same length denoting how far off each\
    \ guess was. If they have guessed correctly,\n# the value is 0, and if not, the\
    \ value is the absolute difference between the guess and the score.\n# example:\n\
    #\n# $1 is a space-separated list\n# $2 is a space-separated list\ncompare() {\n\
    \    local -a scores=($1)\n    local -a guesses=($2)\n    local -a result=()\n\
    \    for ((i=0; i<${#scores[@]}; i++)); do\n        if [[ ${scores[$i]} -eq ${guesses[$i]}\
    \ ]]; then\n            result+=(0)\n        else\n            result+=($((${scores[$i]}\
    \ - ${guesses[$i]})))\n        fi\n    done\n    echo \"${result[@]}\"\n}\n\n\
    candidate() {\n    compare \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate\
    \ \"1 2 3 4 5 1\" \"1 2 3 4 2 -2\") = \"0 0 0 0 3 3\" ]]\n    [[ $(candidate \"\
    0 0 0 0 0 0\" \"0 0 0 0 0 0\") = \"0 0 0 0 0 0\" ]]\n    [[ $(candidate \"1 2\
    \ 3\" \"-1 -2 -3\") = \"2 4 6\" ]]\n    [[ $(candidate \"1 2 3 5\" \"-1 2 3 4\"\
    ) = \"2 0 0 1\" ]]\n}\n\nrun_test"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660002210
- exit_code: 0
  program: "#!/bin/bash\n# I think we all remember that feeling when the result of\
    \ some long-awaited\n# event is finally known. The feelings and thoughts you have\
    \ at that moment are\n# definitely worth noting down and comparing.\n# Your task\
    \ is to determine if a person correctly guessed the results of a number of matches.\n\
    # You are given two arrays of scores and guesses of equal length, where each index\
    \ shows a match. \n# Return an array of the same length denoting how far off each\
    \ guess was. If they have guessed correctly,\n# the value is 0, and if not, the\
    \ value is the absolute difference between the guess and the score.\n# example:\n\
    #\n# $1 is a space-separated list\n# $2 is a space-separated list\ncompare() {\n\
    \    local score=($1)\n    local guess=($2)\n    local result=()\n    for ((i=0;\
    \ i<${#score[@]}; i++)); do\n        result[$i]=$((${score[$i]}-${guess[$i]}))\n\
    \        if [[ ${result[$i]} -lt 0 ]]; then\n            result[$i]=$((-${result[$i]}))\n\
    \        fi\n    done\n    echo ${result[@]}\n}\n\ncandidate() {\n    compare\
    \ \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"1 2 3 4 5 1\" \"1 2\
    \ 3 4 2 -2\") = \"0 0 0 0 3 3\" ]]\n    [[ $(candidate \"0 0 0 0 0 0\" \"0 0 0\
    \ 0 0 0\") = \"0 0 0 0 0 0\" ]]\n    [[ $(candidate \"1 2 3\" \"-1 -2 -3\") =\
    \ \"2 4 6\" ]]\n    [[ $(candidate \"1 2 3 5\" \"-1 2 3 4\") = \"2 0 0 1\" ]]\n\
    }\n\nrun_test"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660002210
- exit_code: 1
  program: "#!/bin/bash\n# I think we all remember that feeling when the result of\
    \ some long-awaited\n# event is finally known. The feelings and thoughts you have\
    \ at that moment are\n# definitely worth noting down and comparing.\n# Your task\
    \ is to determine if a person correctly guessed the results of a number of matches.\n\
    # You are given two arrays of scores and guesses of equal length, where each index\
    \ shows a match. \n# Return an array of the same length denoting how far off each\
    \ guess was. If they have guessed correctly,\n# the value is 0, and if not, the\
    \ value is the absolute difference between the guess and the score.\n# example:\n\
    #\n# $1 is a space-separated list\n# $2 is a space-separated list\ncompare() {\n\
    \    local -n scores=$1\n    local -n guesses=$2\n    local -a result=()\n   \
    \ for ((i=0; i<${#scores[@]}; i++)); do\n        result+=($((${scores[$i]} - ${guesses[$i]})))\n\
    \    done\n    echo \"${result[@]}\"\n}\n\ncandidate() {\n    compare \"$@\"\n\
    }\n\nset -e\nrun_test() {\n    [[ $(candidate \"1 2 3 4 5 1\" \"1 2 3 4 2 -2\"\
    ) = \"0 0 0 0 3 3\" ]]\n    [[ $(candidate \"0 0 0 0 0 0\" \"0 0 0 0 0 0\") =\
    \ \"0 0 0 0 0 0\" ]]\n    [[ $(candidate \"1 2 3\" \"-1 -2 -3\") = \"2 4 6\" ]]\n\
    \    [[ $(candidate \"1 2 3 5\" \"-1 2 3 4\") = \"2 0 0 1\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: '/tmp/tmpj_hkzzds.sh: line 14: local: `1 2 3 4 5 1'': invalid variable name
    for name reference

    /tmp/tmpj_hkzzds.sh: line 15: local: `1 2 3 4 2 -2'': invalid variable name for
    name reference

    '
  stdout: ''
  timestamp: 1660002210
- exit_code: 1
  program: "#!/bin/bash\n# I think we all remember that feeling when the result of\
    \ some long-awaited\n# event is finally known. The feelings and thoughts you have\
    \ at that moment are\n# definitely worth noting down and comparing.\n# Your task\
    \ is to determine if a person correctly guessed the results of a number of matches.\n\
    # You are given two arrays of scores and guesses of equal length, where each index\
    \ shows a match. \n# Return an array of the same length denoting how far off each\
    \ guess was. If they have guessed correctly,\n# the value is 0, and if not, the\
    \ value is the absolute difference between the guess and the score.\n# example:\n\
    #\n# $1 is a space-separated list\n# $2 is a space-separated list\ncompare() {\n\
    \    local -n scores=$1\n    local -n guesses=$2\n    local -a result=()\n   \
    \ for i in ${!scores[@]}; do\n        if [[ ${scores[$i]} -eq ${guesses[$i]} ]];\
    \ then\n            result+=(0)\n        else\n            result+=($(( ${scores[$i]}\
    \ - ${guesses[$i]} )))\n        fi\n    done\n    echo \"${result[@]}\"\n}\n\n\
    candidate() {\n    compare \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate\
    \ \"1 2 3 4 5 1\" \"1 2 3 4 2 -2\") = \"0 0 0 0 3 3\" ]]\n    [[ $(candidate \"\
    0 0 0 0 0 0\" \"0 0 0 0 0 0\") = \"0 0 0 0 0 0\" ]]\n    [[ $(candidate \"1 2\
    \ 3\" \"-1 -2 -3\") = \"2 4 6\" ]]\n    [[ $(candidate \"1 2 3 5\" \"-1 2 3 4\"\
    ) = \"2 0 0 1\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: '/tmp/tmpo0caacl6.sh: line 14: local: `1 2 3 4 5 1'': invalid variable name
    for name reference

    /tmp/tmpo0caacl6.sh: line 15: local: `1 2 3 4 2 -2'': invalid variable name for
    name reference

    '
  stdout: ''
  timestamp: 1660002210
- exit_code: 1
  program: "#!/bin/bash\n# I think we all remember that feeling when the result of\
    \ some long-awaited\n# event is finally known. The feelings and thoughts you have\
    \ at that moment are\n# definitely worth noting down and comparing.\n# Your task\
    \ is to determine if a person correctly guessed the results of a number of matches.\n\
    # You are given two arrays of scores and guesses of equal length, where each index\
    \ shows a match. \n# Return an array of the same length denoting how far off each\
    \ guess was. If they have guessed correctly,\n# the value is 0, and if not, the\
    \ value is the absolute difference between the guess and the score.\n# example:\n\
    #\n# $1 is a space-separated list\n# $2 is a space-separated list\ncompare() {\n\
    \    local -n scores=$1\n    local -n guesses=$2\n    local result=()\n    for\
    \ ((i=0; i<${#scores[@]}; i++)); do\n        local score=${scores[$i]}\n     \
    \   local guess=${guesses[$i]}\n        if [[ $score -eq $guess ]]; then\n   \
    \         result+=(0)\n        else\n            result+=($((score-guess)))\n\
    \        fi\n    done\n    echo \"${result[@]}\"\n}\n\ncandidate() {\n    compare\
    \ \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"1 2 3 4 5 1\" \"1 2\
    \ 3 4 2 -2\") = \"0 0 0 0 3 3\" ]]\n    [[ $(candidate \"0 0 0 0 0 0\" \"0 0 0\
    \ 0 0 0\") = \"0 0 0 0 0 0\" ]]\n    [[ $(candidate \"1 2 3\" \"-1 -2 -3\") =\
    \ \"2 4 6\" ]]\n    [[ $(candidate \"1 2 3 5\" \"-1 2 3 4\") = \"2 0 0 1\" ]]\n\
    }\n\nrun_test"
  status: Exception
  stderr: '/tmp/tmpk1t_rwoq.sh: line 14: local: `1 2 3 4 5 1'': invalid variable name
    for name reference

    /tmp/tmpk1t_rwoq.sh: line 15: local: `1 2 3 4 2 -2'': invalid variable name for
    name reference

    '
  stdout: ''
  timestamp: 1660002210
- exit_code: 0
  program: "#!/bin/bash\n# I think we all remember that feeling when the result of\
    \ some long-awaited\n# event is finally known. The feelings and thoughts you have\
    \ at that moment are\n# definitely worth noting down and comparing.\n# Your task\
    \ is to determine if a person correctly guessed the results of a number of matches.\n\
    # You are given two arrays of scores and guesses of equal length, where each index\
    \ shows a match. \n# Return an array of the same length denoting how far off each\
    \ guess was. If they have guessed correctly,\n# the value is 0, and if not, the\
    \ value is the absolute difference between the guess and the score.\n# example:\n\
    #\n# $1 is a space-separated list\n# $2 is a space-separated list\ncompare() {\n\
    \    local -a scores=($1)\n    local -a guesses=($2)\n    local -a result=()\n\
    \    for ((i=0; i<${#scores[@]}; i++)); do\n        if [[ ${scores[$i]} -eq ${guesses[$i]}\
    \ ]]; then\n            result+=(0)\n        else\n            result+=($((${scores[$i]}\
    \ - ${guesses[$i]})))\n        fi\n    done\n    echo ${result[@]}\n}\n\ncandidate()\
    \ {\n    compare \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"1 2 3\
    \ 4 5 1\" \"1 2 3 4 2 -2\") = \"0 0 0 0 3 3\" ]]\n    [[ $(candidate \"0 0 0 0\
    \ 0 0\" \"0 0 0 0 0 0\") = \"0 0 0 0 0 0\" ]]\n    [[ $(candidate \"1 2 3\" \"\
    -1 -2 -3\") = \"2 4 6\" ]]\n    [[ $(candidate \"1 2 3 5\" \"-1 2 3 4\") = \"\
    2 0 0 1\" ]]\n}\n\nrun_test"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660002210
- exit_code: 1
  program: "#!/bin/bash\n# I think we all remember that feeling when the result of\
    \ some long-awaited\n# event is finally known. The feelings and thoughts you have\
    \ at that moment are\n# definitely worth noting down and comparing.\n# Your task\
    \ is to determine if a person correctly guessed the results of a number of matches.\n\
    # You are given two arrays of scores and guesses of equal length, where each index\
    \ shows a match. \n# Return an array of the same length denoting how far off each\
    \ guess was. If they have guessed correctly,\n# the value is 0, and if not, the\
    \ value is the absolute difference between the guess and the score.\n# example:\n\
    #\n# $1 is a space-separated list\n# $2 is a space-separated list\ncompare() {\n\
    \    local -n scores=$1\n    local -n guesses=$2\n    local -a result=()\n   \
    \ for ((i=0; i<${#scores[@]}; i++)); do\n        result+=($((${scores[$i]}-${guesses[$i]})))\n\
    \    done\n    echo \"${result[@]}\"\n}\n\ncandidate() {\n    compare \"$@\"\n\
    }\n\nset -e\nrun_test() {\n    [[ $(candidate \"1 2 3 4 5 1\" \"1 2 3 4 2 -2\"\
    ) = \"0 0 0 0 3 3\" ]]\n    [[ $(candidate \"0 0 0 0 0 0\" \"0 0 0 0 0 0\") =\
    \ \"0 0 0 0 0 0\" ]]\n    [[ $(candidate \"1 2 3\" \"-1 -2 -3\") = \"2 4 6\" ]]\n\
    \    [[ $(candidate \"1 2 3 5\" \"-1 2 3 4\") = \"2 0 0 1\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: '/tmp/tmp8w3oy0hv.sh: line 14: local: `1 2 3 4 5 1'': invalid variable name
    for name reference

    /tmp/tmp8w3oy0hv.sh: line 15: local: `1 2 3 4 2 -2'': invalid variable name for
    name reference

    '
  stdout: ''
  timestamp: 1660002210
- exit_code: 1
  program: "#!/bin/bash\n# I think we all remember that feeling when the result of\
    \ some long-awaited\n# event is finally known. The feelings and thoughts you have\
    \ at that moment are\n# definitely worth noting down and comparing.\n# Your task\
    \ is to determine if a person correctly guessed the results of a number of matches.\n\
    # You are given two arrays of scores and guesses of equal length, where each index\
    \ shows a match. \n# Return an array of the same length denoting how far off each\
    \ guess was. If they have guessed correctly,\n# the value is 0, and if not, the\
    \ value is the absolute difference between the guess and the score.\n# example:\n\
    #\n# $1 is a space-separated list\n# $2 is a space-separated list\ncompare() {\n\
    \  local -n scores=$1\n  local -n guesses=$2\n  local result=()\n  for ((i=0;\
    \ i<${#scores[@]}; i++)); do\n    if [[ ${scores[$i]} -eq ${guesses[$i]} ]]; then\n\
    \      result+=(0)\n    else\n      result+=($(( ${scores[$i]} - ${guesses[$i]}\
    \ )))\n    fi\n  done\n  echo \"${result[@]}\"\n}\n\ncandidate() {\n    compare\
    \ \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"1 2 3 4 5 1\" \"1 2\
    \ 3 4 2 -2\") = \"0 0 0 0 3 3\" ]]\n    [[ $(candidate \"0 0 0 0 0 0\" \"0 0 0\
    \ 0 0 0\") = \"0 0 0 0 0 0\" ]]\n    [[ $(candidate \"1 2 3\" \"-1 -2 -3\") =\
    \ \"2 4 6\" ]]\n    [[ $(candidate \"1 2 3 5\" \"-1 2 3 4\") = \"2 0 0 1\" ]]\n\
    }\n\nrun_test"
  status: Exception
  stderr: '/tmp/tmp3rafari0.sh: line 14: local: `1 2 3 4 5 1'': invalid variable name
    for name reference

    /tmp/tmp3rafari0.sh: line 15: local: `1 2 3 4 2 -2'': invalid variable name for
    name reference

    '
  stdout: ''
  timestamp: 1660002210
- exit_code: 0
  program: "#!/bin/bash\n# I think we all remember that feeling when the result of\
    \ some long-awaited\n# event is finally known. The feelings and thoughts you have\
    \ at that moment are\n# definitely worth noting down and comparing.\n# Your task\
    \ is to determine if a person correctly guessed the results of a number of matches.\n\
    # You are given two arrays of scores and guesses of equal length, where each index\
    \ shows a match. \n# Return an array of the same length denoting how far off each\
    \ guess was. If they have guessed correctly,\n# the value is 0, and if not, the\
    \ value is the absolute difference between the guess and the score.\n# example:\n\
    #\n# $1 is a space-separated list\n# $2 is a space-separated list\ncompare() {\n\
    \    local -a scores=($1)\n    local -a guesses=($2)\n    local -a result=()\n\
    \    for ((i=0; i<${#scores[@]}; i++)); do\n        result[$i]=$((${scores[$i]}-${guesses[$i]}))\n\
    \    done\n    echo ${result[@]}\n}\n\ncandidate() {\n    compare \"$@\"\n}\n\n\
    set -e\nrun_test() {\n    [[ $(candidate \"1 2 3 4 5 1\" \"1 2 3 4 2 -2\") = \"\
    0 0 0 0 3 3\" ]]\n    [[ $(candidate \"0 0 0 0 0 0\" \"0 0 0 0 0 0\") = \"0 0\
    \ 0 0 0 0\" ]]\n    [[ $(candidate \"1 2 3\" \"-1 -2 -3\") = \"2 4 6\" ]]\n  \
    \  [[ $(candidate \"1 2 3 5\" \"-1 2 3 4\") = \"2 0 0 1\" ]]\n}\n\nrun_test"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660002210
- exit_code: 0
  program: "#!/bin/bash\n# I think we all remember that feeling when the result of\
    \ some long-awaited\n# event is finally known. The feelings and thoughts you have\
    \ at that moment are\n# definitely worth noting down and comparing.\n# Your task\
    \ is to determine if a person correctly guessed the results of a number of matches.\n\
    # You are given two arrays of scores and guesses of equal length, where each index\
    \ shows a match. \n# Return an array of the same length denoting how far off each\
    \ guess was. If they have guessed correctly,\n# the value is 0, and if not, the\
    \ value is the absolute difference between the guess and the score.\n# example:\n\
    #\n# $1 is a space-separated list\n# $2 is a space-separated list\ncompare() {\n\
    \    local -a scores=($1)\n    local -a guesses=($2)\n    local -a result=()\n\
    \    for ((i=0; i<${#scores[@]}; i++)); do\n        if [[ ${scores[$i]} -eq ${guesses[$i]}\
    \ ]]; then\n            result[$i]=0\n        else\n            result[$i]=$((\
    \ ${scores[$i]} - ${guesses[$i]} ))\n        fi\n    done\n    echo ${result[@]}\n\
    }\n\ncandidate() {\n    compare \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate\
    \ \"1 2 3 4 5 1\" \"1 2 3 4 2 -2\") = \"0 0 0 0 3 3\" ]]\n    [[ $(candidate \"\
    0 0 0 0 0 0\" \"0 0 0 0 0 0\") = \"0 0 0 0 0 0\" ]]\n    [[ $(candidate \"1 2\
    \ 3\" \"-1 -2 -3\") = \"2 4 6\" ]]\n    [[ $(candidate \"1 2 3 5\" \"-1 2 3 4\"\
    ) = \"2 0 0 1\" ]]\n}\n\nrun_test"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660002209
- exit_code: 1
  program: "#!/bin/bash\n# I think we all remember that feeling when the result of\
    \ some long-awaited\n# event is finally known. The feelings and thoughts you have\
    \ at that moment are\n# definitely worth noting down and comparing.\n# Your task\
    \ is to determine if a person correctly guessed the results of a number of matches.\n\
    # You are given two arrays of scores and guesses of equal length, where each index\
    \ shows a match. \n# Return an array of the same length denoting how far off each\
    \ guess was. If they have guessed correctly,\n# the value is 0, and if not, the\
    \ value is the absolute difference between the guess and the score.\n# example:\n\
    #\n# $1 is a space-separated list\n# $2 is a space-separated list\ncompare() {\n\
    \    local -n scores=$1\n    local -n guesses=$2\n    local -a result=()\n   \
    \ for ((i=0; i<${#scores[@]}; i++)); do\n        if [[ ${scores[$i]} -eq ${guesses[$i]}\
    \ ]]; then\n            result+=(0)\n        else\n            result+=($(( ${scores[$i]}\
    \ - ${guesses[$i]} )))\n        fi\n    done\n    echo \"${result[@]}\"\n}\n\n\
    candidate() {\n    compare \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate\
    \ \"1 2 3 4 5 1\" \"1 2 3 4 2 -2\") = \"0 0 0 0 3 3\" ]]\n    [[ $(candidate \"\
    0 0 0 0 0 0\" \"0 0 0 0 0 0\") = \"0 0 0 0 0 0\" ]]\n    [[ $(candidate \"1 2\
    \ 3\" \"-1 -2 -3\") = \"2 4 6\" ]]\n    [[ $(candidate \"1 2 3 5\" \"-1 2 3 4\"\
    ) = \"2 0 0 1\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: '/tmp/tmpafs_1xxy.sh: line 14: local: `1 2 3 4 5 1'': invalid variable name
    for name reference

    /tmp/tmpafs_1xxy.sh: line 15: local: `1 2 3 4 2 -2'': invalid variable name for
    name reference

    '
  stdout: ''
  timestamp: 1660002210
- exit_code: 1
  program: "#!/bin/bash\n# I think we all remember that feeling when the result of\
    \ some long-awaited\n# event is finally known. The feelings and thoughts you have\
    \ at that moment are\n# definitely worth noting down and comparing.\n# Your task\
    \ is to determine if a person correctly guessed the results of a number of matches.\n\
    # You are given two arrays of scores and guesses of equal length, where each index\
    \ shows a match. \n# Return an array of the same length denoting how far off each\
    \ guess was. If they have guessed correctly,\n# the value is 0, and if not, the\
    \ value is the absolute difference between the guess and the score.\n# example:\n\
    #\n# $1 is a space-separated list\n# $2 is a space-separated list\ncompare() {\n\
    \    local -n scores=$1\n    local -n guesses=$2\n    local result=()\n    for\
    \ ((i=0; i<${#scores[@]}; i++)); do\n        if [[ ${scores[$i]} -eq ${guesses[$i]}\
    \ ]]; then\n            result+=(0)\n        else\n            result+=($(( ${scores[$i]}\
    \ - ${guesses[$i]} )))\n        fi\n    done\n    echo \"${result[@]}\"\n}\n\n\
    candidate() {\n    compare \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate\
    \ \"1 2 3 4 5 1\" \"1 2 3 4 2 -2\") = \"0 0 0 0 3 3\" ]]\n    [[ $(candidate \"\
    0 0 0 0 0 0\" \"0 0 0 0 0 0\") = \"0 0 0 0 0 0\" ]]\n    [[ $(candidate \"1 2\
    \ 3\" \"-1 -2 -3\") = \"2 4 6\" ]]\n    [[ $(candidate \"1 2 3 5\" \"-1 2 3 4\"\
    ) = \"2 0 0 1\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: '/tmp/tmp9mohepqf.sh: line 14: local: `1 2 3 4 5 1'': invalid variable name
    for name reference

    /tmp/tmp9mohepqf.sh: line 15: local: `1 2 3 4 2 -2'': invalid variable name for
    name reference

    '
  stdout: ''
  timestamp: 1660002210
- exit_code: 0
  program: "#!/bin/bash\n# I think we all remember that feeling when the result of\
    \ some long-awaited\n# event is finally known. The feelings and thoughts you have\
    \ at that moment are\n# definitely worth noting down and comparing.\n# Your task\
    \ is to determine if a person correctly guessed the results of a number of matches.\n\
    # You are given two arrays of scores and guesses of equal length, where each index\
    \ shows a match. \n# Return an array of the same length denoting how far off each\
    \ guess was. If they have guessed correctly,\n# the value is 0, and if not, the\
    \ value is the absolute difference between the guess and the score.\n# example:\n\
    #\n# $1 is a space-separated list\n# $2 is a space-separated list\ncompare() {\n\
    \    local -a scores=($1)\n    local -a guesses=($2)\n    local -a result=()\n\
    \    for ((i=0; i<${#scores[@]}; i++)); do\n        if [[ ${scores[$i]} -eq ${guesses[$i]}\
    \ ]]; then\n            result[$i]=0\n        else\n            result[$i]=$((\
    \ ${scores[$i]} - ${guesses[$i]} ))\n        fi\n    done\n    echo ${result[@]}\n\
    }\n\ncandidate() {\n    compare \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate\
    \ \"1 2 3 4 5 1\" \"1 2 3 4 2 -2\") = \"0 0 0 0 3 3\" ]]\n    [[ $(candidate \"\
    0 0 0 0 0 0\" \"0 0 0 0 0 0\") = \"0 0 0 0 0 0\" ]]\n    [[ $(candidate \"1 2\
    \ 3\" \"-1 -2 -3\") = \"2 4 6\" ]]\n    [[ $(candidate \"1 2 3 5\" \"-1 2 3 4\"\
    ) = \"2 0 0 1\" ]]\n}\n\nrun_test"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660002209
- exit_code: 1
  program: "#!/bin/bash\n# I think we all remember that feeling when the result of\
    \ some long-awaited\n# event is finally known. The feelings and thoughts you have\
    \ at that moment are\n# definitely worth noting down and comparing.\n# Your task\
    \ is to determine if a person correctly guessed the results of a number of matches.\n\
    # You are given two arrays of scores and guesses of equal length, where each index\
    \ shows a match. \n# Return an array of the same length denoting how far off each\
    \ guess was. If they have guessed correctly,\n# the value is 0, and if not, the\
    \ value is the absolute difference between the guess and the score.\n# example:\n\
    #\n# $1 is a space-separated list\n# $2 is a space-separated list\ncompare() {\n\
    \    local -n scores=$1\n    local -n guesses=$2\n    local -a result=()\n   \
    \ for ((i=0; i<${#scores[@]}; i++)); do\n        result+=($((${scores[$i]} - ${guesses[$i]})))\n\
    \    done\n    echo \"${result[@]}\"\n}\n\ncandidate() {\n    compare \"$@\"\n\
    }\n\nset -e\nrun_test() {\n    [[ $(candidate \"1 2 3 4 5 1\" \"1 2 3 4 2 -2\"\
    ) = \"0 0 0 0 3 3\" ]]\n    [[ $(candidate \"0 0 0 0 0 0\" \"0 0 0 0 0 0\") =\
    \ \"0 0 0 0 0 0\" ]]\n    [[ $(candidate \"1 2 3\" \"-1 -2 -3\") = \"2 4 6\" ]]\n\
    \    [[ $(candidate \"1 2 3 5\" \"-1 2 3 4\") = \"2 0 0 1\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: '/tmp/tmpj_hkzzds.sh: line 14: local: `1 2 3 4 5 1'': invalid variable name
    for name reference

    /tmp/tmpj_hkzzds.sh: line 15: local: `1 2 3 4 2 -2'': invalid variable name for
    name reference

    '
  stdout: ''
  timestamp: 1660002210
- exit_code: 1
  program: "#!/bin/bash\n# I think we all remember that feeling when the result of\
    \ some long-awaited\n# event is finally known. The feelings and thoughts you have\
    \ at that moment are\n# definitely worth noting down and comparing.\n# Your task\
    \ is to determine if a person correctly guessed the results of a number of matches.\n\
    # You are given two arrays of scores and guesses of equal length, where each index\
    \ shows a match. \n# Return an array of the same length denoting how far off each\
    \ guess was. If they have guessed correctly,\n# the value is 0, and if not, the\
    \ value is the absolute difference between the guess and the score.\n# example:\n\
    #\n# $1 is a space-separated list\n# $2 is a space-separated list\ncompare() {\n\
    \    local -n scores=$1\n    local -n guesses=$2\n    local -a result=()\n   \
    \ for ((i=0; i<${#scores[@]}; i++)); do\n        result+=($((${scores[$i]} - ${guesses[$i]})))\n\
    \    done\n    echo \"${result[@]}\"\n}\n\ncandidate() {\n    compare \"$@\"\n\
    }\n\nset -e\nrun_test() {\n    [[ $(candidate \"1 2 3 4 5 1\" \"1 2 3 4 2 -2\"\
    ) = \"0 0 0 0 3 3\" ]]\n    [[ $(candidate \"0 0 0 0 0 0\" \"0 0 0 0 0 0\") =\
    \ \"0 0 0 0 0 0\" ]]\n    [[ $(candidate \"1 2 3\" \"-1 -2 -3\") = \"2 4 6\" ]]\n\
    \    [[ $(candidate \"1 2 3 5\" \"-1 2 3 4\") = \"2 0 0 1\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: '/tmp/tmpj_hkzzds.sh: line 14: local: `1 2 3 4 5 1'': invalid variable name
    for name reference

    /tmp/tmpj_hkzzds.sh: line 15: local: `1 2 3 4 2 -2'': invalid variable name for
    name reference

    '
  stdout: ''
  timestamp: 1660002210
- exit_code: 1
  program: "#!/bin/bash\n# I think we all remember that feeling when the result of\
    \ some long-awaited\n# event is finally known. The feelings and thoughts you have\
    \ at that moment are\n# definitely worth noting down and comparing.\n# Your task\
    \ is to determine if a person correctly guessed the results of a number of matches.\n\
    # You are given two arrays of scores and guesses of equal length, where each index\
    \ shows a match. \n# Return an array of the same length denoting how far off each\
    \ guess was. If they have guessed correctly,\n# the value is 0, and if not, the\
    \ value is the absolute difference between the guess and the score.\n# example:\n\
    #\n# $1 is a space-separated list\n# $2 is a space-separated list\ncompare() {\n\
    \  local -n scores=$1\n  local -n guesses=$2\n  local result=()\n  for i in ${!scores[@]};\
    \ do\n    if [[ ${scores[$i]} -eq ${guesses[$i]} ]]; then\n      result+=(0)\n\
    \    else\n      result+=($(( ${scores[$i]} - ${guesses[$i]} )))\n    fi\n  done\n\
    \  echo ${result[@]}\n}\n\ncandidate() {\n    compare \"$@\"\n}\n\nset -e\nrun_test()\
    \ {\n    [[ $(candidate \"1 2 3 4 5 1\" \"1 2 3 4 2 -2\") = \"0 0 0 0 3 3\" ]]\n\
    \    [[ $(candidate \"0 0 0 0 0 0\" \"0 0 0 0 0 0\") = \"0 0 0 0 0 0\" ]]\n  \
    \  [[ $(candidate \"1 2 3\" \"-1 -2 -3\") = \"2 4 6\" ]]\n    [[ $(candidate \"\
    1 2 3 5\" \"-1 2 3 4\") = \"2 0 0 1\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: '/tmp/tmpzb_5cwaa.sh: line 14: local: `1 2 3 4 5 1'': invalid variable name
    for name reference

    /tmp/tmpzb_5cwaa.sh: line 15: local: `1 2 3 4 2 -2'': invalid variable name for
    name reference

    '
  stdout: ''
  timestamp: 1660002210
- exit_code: 1
  program: "#!/bin/bash\n# I think we all remember that feeling when the result of\
    \ some long-awaited\n# event is finally known. The feelings and thoughts you have\
    \ at that moment are\n# definitely worth noting down and comparing.\n# Your task\
    \ is to determine if a person correctly guessed the results of a number of matches.\n\
    # You are given two arrays of scores and guesses of equal length, where each index\
    \ shows a match. \n# Return an array of the same length denoting how far off each\
    \ guess was. If they have guessed correctly,\n# the value is 0, and if not, the\
    \ value is the absolute difference between the guess and the score.\n# example:\n\
    #\n# $1 is a space-separated list\n# $2 is a space-separated list\ncompare() {\n\
    \    local -n scores=$1\n    local -n guesses=$2\n    local -a result\n    for\
    \ ((i=0; i<${#scores[@]}; i++)); do\n        result[i]=$((${scores[i]} - ${guesses[i]}))\n\
    \        result[i]=${result[i]#-}\n    done\n    echo \"${result[@]}\"\n}\n\n\
    candidate() {\n    compare \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate\
    \ \"1 2 3 4 5 1\" \"1 2 3 4 2 -2\") = \"0 0 0 0 3 3\" ]]\n    [[ $(candidate \"\
    0 0 0 0 0 0\" \"0 0 0 0 0 0\") = \"0 0 0 0 0 0\" ]]\n    [[ $(candidate \"1 2\
    \ 3\" \"-1 -2 -3\") = \"2 4 6\" ]]\n    [[ $(candidate \"1 2 3 5\" \"-1 2 3 4\"\
    ) = \"2 0 0 1\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: '/tmp/tmpxs8mafrl.sh: line 14: local: `1 2 3 4 5 1'': invalid variable name
    for name reference

    /tmp/tmpxs8mafrl.sh: line 15: local: `1 2 3 4 2 -2'': invalid variable name for
    name reference

    '
  stdout: ''
  timestamp: 1660002210
- exit_code: 1
  program: "#!/bin/bash\n# I think we all remember that feeling when the result of\
    \ some long-awaited\n# event is finally known. The feelings and thoughts you have\
    \ at that moment are\n# definitely worth noting down and comparing.\n# Your task\
    \ is to determine if a person correctly guessed the results of a number of matches.\n\
    # You are given two arrays of scores and guesses of equal length, where each index\
    \ shows a match. \n# Return an array of the same length denoting how far off each\
    \ guess was. If they have guessed correctly,\n# the value is 0, and if not, the\
    \ value is the absolute difference between the guess and the score.\n# example:\n\
    #\n# $1 is a space-separated list\n# $2 is a space-separated list\ncompare() {\n\
    \    local -n _a=$1\n    local -n _b=$2\n    local -a _c\n    for ((i=0; i<${#_a[@]};\
    \ i++)); do\n        _c[i]=$((${_a[i]}-${_b[i]}))\n    done\n    echo \"${_c[@]}\"\
    \n}\n\ncandidate() {\n    compare \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate\
    \ \"1 2 3 4 5 1\" \"1 2 3 4 2 -2\") = \"0 0 0 0 3 3\" ]]\n    [[ $(candidate \"\
    0 0 0 0 0 0\" \"0 0 0 0 0 0\") = \"0 0 0 0 0 0\" ]]\n    [[ $(candidate \"1 2\
    \ 3\" \"-1 -2 -3\") = \"2 4 6\" ]]\n    [[ $(candidate \"1 2 3 5\" \"-1 2 3 4\"\
    ) = \"2 0 0 1\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: '/tmp/tmp1ysk_yt6.sh: line 14: local: `1 2 3 4 5 1'': invalid variable name
    for name reference

    /tmp/tmp1ysk_yt6.sh: line 15: local: `1 2 3 4 2 -2'': invalid variable name for
    name reference

    '
  stdout: ''
  timestamp: 1660002210
- exit_code: 1
  program: "#!/bin/bash\n# I think we all remember that feeling when the result of\
    \ some long-awaited\n# event is finally known. The feelings and thoughts you have\
    \ at that moment are\n# definitely worth noting down and comparing.\n# Your task\
    \ is to determine if a person correctly guessed the results of a number of matches.\n\
    # You are given two arrays of scores and guesses of equal length, where each index\
    \ shows a match. \n# Return an array of the same length denoting how far off each\
    \ guess was. If they have guessed correctly,\n# the value is 0, and if not, the\
    \ value is the absolute difference between the guess and the score.\n# example:\n\
    #\n# $1 is a space-separated list\n# $2 is a space-separated list\ncompare() {\n\
    \    local -n scores=$1\n    local -n guesses=$2\n    local -a result=()\n   \
    \ for ((i=0; i<${#scores[@]}; i++)); do\n        result+=($((${scores[$i]} - ${guesses[$i]})))\n\
    \    done\n    echo \"${result[@]}\"\n}\n\ncandidate() {\n    compare \"$@\"\n\
    }\n\nset -e\nrun_test() {\n    [[ $(candidate \"1 2 3 4 5 1\" \"1 2 3 4 2 -2\"\
    ) = \"0 0 0 0 3 3\" ]]\n    [[ $(candidate \"0 0 0 0 0 0\" \"0 0 0 0 0 0\") =\
    \ \"0 0 0 0 0 0\" ]]\n    [[ $(candidate \"1 2 3\" \"-1 -2 -3\") = \"2 4 6\" ]]\n\
    \    [[ $(candidate \"1 2 3 5\" \"-1 2 3 4\") = \"2 0 0 1\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: '/tmp/tmpj_hkzzds.sh: line 14: local: `1 2 3 4 5 1'': invalid variable name
    for name reference

    /tmp/tmpj_hkzzds.sh: line 15: local: `1 2 3 4 2 -2'': invalid variable name for
    name reference

    '
  stdout: ''
  timestamp: 1660002210
- exit_code: 1
  program: "#!/bin/bash\n# I think we all remember that feeling when the result of\
    \ some long-awaited\n# event is finally known. The feelings and thoughts you have\
    \ at that moment are\n# definitely worth noting down and comparing.\n# Your task\
    \ is to determine if a person correctly guessed the results of a number of matches.\n\
    # You are given two arrays of scores and guesses of equal length, where each index\
    \ shows a match. \n# Return an array of the same length denoting how far off each\
    \ guess was. If they have guessed correctly,\n# the value is 0, and if not, the\
    \ value is the absolute difference between the guess and the score.\n# example:\n\
    #\n# $1 is a space-separated list\n# $2 is a space-separated list\ncompare() {\n\
    \    local -n scores=$1\n    local -n guesses=$2\n    local -a result\n    for\
    \ ((i=0; i<${#scores[@]}; i++)); do\n        if [[ ${scores[$i]} -eq ${guesses[$i]}\
    \ ]]; then\n            result[$i]=0\n        else\n            result[$i]=$((\
    \ ${scores[$i]} - ${guesses[$i]} ))\n        fi\n    done\n    echo ${result[@]}\n\
    }\n\ncandidate() {\n    compare \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate\
    \ \"1 2 3 4 5 1\" \"1 2 3 4 2 -2\") = \"0 0 0 0 3 3\" ]]\n    [[ $(candidate \"\
    0 0 0 0 0 0\" \"0 0 0 0 0 0\") = \"0 0 0 0 0 0\" ]]\n    [[ $(candidate \"1 2\
    \ 3\" \"-1 -2 -3\") = \"2 4 6\" ]]\n    [[ $(candidate \"1 2 3 5\" \"-1 2 3 4\"\
    ) = \"2 0 0 1\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: '/tmp/tmpxiv6gpn6.sh: line 14: local: `1 2 3 4 5 1'': invalid variable name
    for name reference

    /tmp/tmpxiv6gpn6.sh: line 15: local: `1 2 3 4 2 -2'': invalid variable name for
    name reference

    '
  stdout: ''
  timestamp: 1660002210
- exit_code: 1
  program: "#!/bin/bash\n# I think we all remember that feeling when the result of\
    \ some long-awaited\n# event is finally known. The feelings and thoughts you have\
    \ at that moment are\n# definitely worth noting down and comparing.\n# Your task\
    \ is to determine if a person correctly guessed the results of a number of matches.\n\
    # You are given two arrays of scores and guesses of equal length, where each index\
    \ shows a match. \n# Return an array of the same length denoting how far off each\
    \ guess was. If they have guessed correctly,\n# the value is 0, and if not, the\
    \ value is the absolute difference between the guess and the score.\n# example:\n\
    #\n# $1 is a space-separated list\n# $2 is a space-separated list\ncompare() {\n\
    \    local -n scores=$1\n    local -n guesses=$2\n    local -a result=()\n   \
    \ for ((i=0; i<${#scores[@]}; i++)); do\n        result+=($((${scores[$i]} - ${guesses[$i]})))\n\
    \    done\n    echo \"${result[@]}\"\n}\n\ncandidate() {\n    compare \"$@\"\n\
    }\n\nset -e\nrun_test() {\n    [[ $(candidate \"1 2 3 4 5 1\" \"1 2 3 4 2 -2\"\
    ) = \"0 0 0 0 3 3\" ]]\n    [[ $(candidate \"0 0 0 0 0 0\" \"0 0 0 0 0 0\") =\
    \ \"0 0 0 0 0 0\" ]]\n    [[ $(candidate \"1 2 3\" \"-1 -2 -3\") = \"2 4 6\" ]]\n\
    \    [[ $(candidate \"1 2 3 5\" \"-1 2 3 4\") = \"2 0 0 1\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: '/tmp/tmpj_hkzzds.sh: line 14: local: `1 2 3 4 5 1'': invalid variable name
    for name reference

    /tmp/tmpj_hkzzds.sh: line 15: local: `1 2 3 4 2 -2'': invalid variable name for
    name reference

    '
  stdout: ''
  timestamp: 1660002210
- exit_code: 1
  program: "#!/bin/bash\n# I think we all remember that feeling when the result of\
    \ some long-awaited\n# event is finally known. The feelings and thoughts you have\
    \ at that moment are\n# definitely worth noting down and comparing.\n# Your task\
    \ is to determine if a person correctly guessed the results of a number of matches.\n\
    # You are given two arrays of scores and guesses of equal length, where each index\
    \ shows a match. \n# Return an array of the same length denoting how far off each\
    \ guess was. If they have guessed correctly,\n# the value is 0, and if not, the\
    \ value is the absolute difference between the guess and the score.\n# example:\n\
    #\n# $1 is a space-separated list\n# $2 is a space-separated list\ncompare() {\n\
    \  local -n scores=$1\n  local -n guesses=$2\n  local -a result=()\n  for ((i=0;\
    \ i<${#scores[@]}; i++)); do\n    if [[ ${scores[$i]} -eq ${guesses[$i]} ]]; then\n\
    \      result+=(0)\n    else\n      result+=($(( ${scores[$i]} - ${guesses[$i]}\
    \ )))\n    fi\n  done\n  echo \"${result[@]}\"\n}\n\ncandidate() {\n    compare\
    \ \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"1 2 3 4 5 1\" \"1 2\
    \ 3 4 2 -2\") = \"0 0 0 0 3 3\" ]]\n    [[ $(candidate \"0 0 0 0 0 0\" \"0 0 0\
    \ 0 0 0\") = \"0 0 0 0 0 0\" ]]\n    [[ $(candidate \"1 2 3\" \"-1 -2 -3\") =\
    \ \"2 4 6\" ]]\n    [[ $(candidate \"1 2 3 5\" \"-1 2 3 4\") = \"2 0 0 1\" ]]\n\
    }\n\nrun_test"
  status: Exception
  stderr: '/tmp/tmp1d79l9de.sh: line 14: local: `1 2 3 4 5 1'': invalid variable name
    for name reference

    /tmp/tmp1d79l9de.sh: line 15: local: `1 2 3 4 2 -2'': invalid variable name for
    name reference

    '
  stdout: ''
  timestamp: 1660002210
- exit_code: 1
  program: "#!/bin/bash\n# I think we all remember that feeling when the result of\
    \ some long-awaited\n# event is finally known. The feelings and thoughts you have\
    \ at that moment are\n# definitely worth noting down and comparing.\n# Your task\
    \ is to determine if a person correctly guessed the results of a number of matches.\n\
    # You are given two arrays of scores and guesses of equal length, where each index\
    \ shows a match. \n# Return an array of the same length denoting how far off each\
    \ guess was. If they have guessed correctly,\n# the value is 0, and if not, the\
    \ value is the absolute difference between the guess and the score.\n# example:\n\
    #\n# $1 is a space-separated list\n# $2 is a space-separated list\ncompare() {\n\
    \    local -n arr1=$1\n    local -n arr2=$2\n    local -a result\n    for ((i=0;\
    \ i<${#arr1[@]}; i++)); do\n        result[i]=$((${arr1[i]} - ${arr2[i]}))\n \
    \   done\n    echo \"${result[@]}\"\n}\n\ncandidate() {\n    compare \"$@\"\n\
    }\n\nset -e\nrun_test() {\n    [[ $(candidate \"1 2 3 4 5 1\" \"1 2 3 4 2 -2\"\
    ) = \"0 0 0 0 3 3\" ]]\n    [[ $(candidate \"0 0 0 0 0 0\" \"0 0 0 0 0 0\") =\
    \ \"0 0 0 0 0 0\" ]]\n    [[ $(candidate \"1 2 3\" \"-1 -2 -3\") = \"2 4 6\" ]]\n\
    \    [[ $(candidate \"1 2 3 5\" \"-1 2 3 4\") = \"2 0 0 1\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: '/tmp/tmpshvq9zjh.sh: line 14: local: `1 2 3 4 5 1'': invalid variable name
    for name reference

    /tmp/tmpshvq9zjh.sh: line 15: local: `1 2 3 4 2 -2'': invalid variable name for
    name reference

    '
  stdout: ''
  timestamp: 1660002210
- exit_code: 1
  program: "#!/bin/bash\n# I think we all remember that feeling when the result of\
    \ some long-awaited\n# event is finally known. The feelings and thoughts you have\
    \ at that moment are\n# definitely worth noting down and comparing.\n# Your task\
    \ is to determine if a person correctly guessed the results of a number of matches.\n\
    # You are given two arrays of scores and guesses of equal length, where each index\
    \ shows a match. \n# Return an array of the same length denoting how far off each\
    \ guess was. If they have guessed correctly,\n# the value is 0, and if not, the\
    \ value is the absolute difference between the guess and the score.\n# example:\n\
    #\n# $1 is a space-separated list\n# $2 is a space-separated list\ncompare() {\n\
    \    local -n scores=$1\n    local -n guesses=$2\n    local -a result=()\n   \
    \ for ((i=0; i<${#scores[@]}; i++)); do\n        result+=($((${scores[$i]} - ${guesses[$i]})))\n\
    \    done\n    echo \"${result[@]}\"\n}\n\ncandidate() {\n    compare \"$@\"\n\
    }\n\nset -e\nrun_test() {\n    [[ $(candidate \"1 2 3 4 5 1\" \"1 2 3 4 2 -2\"\
    ) = \"0 0 0 0 3 3\" ]]\n    [[ $(candidate \"0 0 0 0 0 0\" \"0 0 0 0 0 0\") =\
    \ \"0 0 0 0 0 0\" ]]\n    [[ $(candidate \"1 2 3\" \"-1 -2 -3\") = \"2 4 6\" ]]\n\
    \    [[ $(candidate \"1 2 3 5\" \"-1 2 3 4\") = \"2 0 0 1\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: '/tmp/tmpj_hkzzds.sh: line 14: local: `1 2 3 4 5 1'': invalid variable name
    for name reference

    /tmp/tmpj_hkzzds.sh: line 15: local: `1 2 3 4 2 -2'': invalid variable name for
    name reference

    '
  stdout: ''
  timestamp: 1660002210
- exit_code: 1
  program: "#!/bin/bash\n# I think we all remember that feeling when the result of\
    \ some long-awaited\n# event is finally known. The feelings and thoughts you have\
    \ at that moment are\n# definitely worth noting down and comparing.\n# Your task\
    \ is to determine if a person correctly guessed the results of a number of matches.\n\
    # You are given two arrays of scores and guesses of equal length, where each index\
    \ shows a match. \n# Return an array of the same length denoting how far off each\
    \ guess was. If they have guessed correctly,\n# the value is 0, and if not, the\
    \ value is the absolute difference between the guess and the score.\n# example:\n\
    #\n# $1 is a space-separated list\n# $2 is a space-separated list\ncompare() {\n\
    \  local score guess\n  local -a result\n  for ((i=0; i<${#1}; i++)); do\n   \
    \ score=${1[i]}\n    guess=${2[i]}\n    if [[ $score -eq $guess ]]; then\n   \
    \   result[i]=0\n    else\n      result[i]=$((guess-score))\n    fi\n  done\n\
    \  echo ${result[@]}\n}\n\ncandidate() {\n    compare \"$@\"\n}\n\nset -e\nrun_test()\
    \ {\n    [[ $(candidate \"1 2 3 4 5 1\" \"1 2 3 4 2 -2\") = \"0 0 0 0 3 3\" ]]\n\
    \    [[ $(candidate \"0 0 0 0 0 0\" \"0 0 0 0 0 0\") = \"0 0 0 0 0 0\" ]]\n  \
    \  [[ $(candidate \"1 2 3\" \"-1 -2 -3\") = \"2 4 6\" ]]\n    [[ $(candidate \"\
    1 2 3 5\" \"-1 2 3 4\") = \"2 0 0 1\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: '/tmp/tmpmamnkuky.sh: line 17: ${1[i]}: bad substitution

    '
  stdout: ''
  timestamp: 1660002210
- exit_code: 0
  program: "#!/bin/bash\n# I think we all remember that feeling when the result of\
    \ some long-awaited\n# event is finally known. The feelings and thoughts you have\
    \ at that moment are\n# definitely worth noting down and comparing.\n# Your task\
    \ is to determine if a person correctly guessed the results of a number of matches.\n\
    # You are given two arrays of scores and guesses of equal length, where each index\
    \ shows a match. \n# Return an array of the same length denoting how far off each\
    \ guess was. If they have guessed correctly,\n# the value is 0, and if not, the\
    \ value is the absolute difference between the guess and the score.\n# example:\n\
    #\n# $1 is a space-separated list\n# $2 is a space-separated list\ncompare() {\n\
    \    local score=($1)\n    local guess=($2)\n    local result=()\n    for ((i=0;\
    \ i<${#score[@]}; i++)); do\n        result[i]=$((${score[i]}-${guess[i]}))\n\
    \        if [[ ${result[i]} -lt 0 ]]; then\n            result[i]=$((-${result[i]}))\n\
    \        fi\n    done\n    echo ${result[@]}\n}\n\ncandidate() {\n    compare\
    \ \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"1 2 3 4 5 1\" \"1 2\
    \ 3 4 2 -2\") = \"0 0 0 0 3 3\" ]]\n    [[ $(candidate \"0 0 0 0 0 0\" \"0 0 0\
    \ 0 0 0\") = \"0 0 0 0 0 0\" ]]\n    [[ $(candidate \"1 2 3\" \"-1 -2 -3\") =\
    \ \"2 4 6\" ]]\n    [[ $(candidate \"1 2 3 5\" \"-1 2 3 4\") = \"2 0 0 1\" ]]\n\
    }\n\nrun_test"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660002210
- exit_code: 0
  program: "#!/bin/bash\n# I think we all remember that feeling when the result of\
    \ some long-awaited\n# event is finally known. The feelings and thoughts you have\
    \ at that moment are\n# definitely worth noting down and comparing.\n# Your task\
    \ is to determine if a person correctly guessed the results of a number of matches.\n\
    # You are given two arrays of scores and guesses of equal length, where each index\
    \ shows a match. \n# Return an array of the same length denoting how far off each\
    \ guess was. If they have guessed correctly,\n# the value is 0, and if not, the\
    \ value is the absolute difference between the guess and the score.\n# example:\n\
    #\n# $1 is a space-separated list\n# $2 is a space-separated list\ncompare() {\n\
    \    local -a score=($1)\n    local -a guess=($2)\n    local -a result=()\n  \
    \  for i in ${!score[@]}; do\n        if [[ ${score[$i]} -eq ${guess[$i]} ]];\
    \ then\n            result+=(0)\n        else\n            result+=($((${score[$i]}\
    \ - ${guess[$i]})))\n        fi\n    done\n    echo ${result[@]}\n}\n\ncandidate()\
    \ {\n    compare \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"1 2 3\
    \ 4 5 1\" \"1 2 3 4 2 -2\") = \"0 0 0 0 3 3\" ]]\n    [[ $(candidate \"0 0 0 0\
    \ 0 0\" \"0 0 0 0 0 0\") = \"0 0 0 0 0 0\" ]]\n    [[ $(candidate \"1 2 3\" \"\
    -1 -2 -3\") = \"2 4 6\" ]]\n    [[ $(candidate \"1 2 3 5\" \"-1 2 3 4\") = \"\
    2 0 0 1\" ]]\n}\n\nrun_test"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660002210
- exit_code: 0
  program: "#!/bin/bash\n# I think we all remember that feeling when the result of\
    \ some long-awaited\n# event is finally known. The feelings and thoughts you have\
    \ at that moment are\n# definitely worth noting down and comparing.\n# Your task\
    \ is to determine if a person correctly guessed the results of a number of matches.\n\
    # You are given two arrays of scores and guesses of equal length, where each index\
    \ shows a match. \n# Return an array of the same length denoting how far off each\
    \ guess was. If they have guessed correctly,\n# the value is 0, and if not, the\
    \ value is the absolute difference between the guess and the score.\n# example:\n\
    #\n# $1 is a space-separated list\n# $2 is a space-separated list\ncompare() {\n\
    \  local scores=($1)\n  local guesses=($2)\n  local result=()\n  for ((i=0; i<${#scores[@]};\
    \ i++)); do\n    if [[ ${scores[$i]} -eq ${guesses[$i]} ]]; then\n      result+=(0)\n\
    \    else\n      result+=($((${scores[$i]}-${guesses[$i]})))\n    fi\n  done\n\
    \  echo ${result[@]}\n}\n\ncandidate() {\n    compare \"$@\"\n}\n\nset -e\nrun_test()\
    \ {\n    [[ $(candidate \"1 2 3 4 5 1\" \"1 2 3 4 2 -2\") = \"0 0 0 0 3 3\" ]]\n\
    \    [[ $(candidate \"0 0 0 0 0 0\" \"0 0 0 0 0 0\") = \"0 0 0 0 0 0\" ]]\n  \
    \  [[ $(candidate \"1 2 3\" \"-1 -2 -3\") = \"2 4 6\" ]]\n    [[ $(candidate \"\
    1 2 3 5\" \"-1 2 3 4\") = \"2 0 0 1\" ]]\n}\n\nrun_test"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660002210
- exit_code: 1
  program: "#!/bin/bash\n# I think we all remember that feeling when the result of\
    \ some long-awaited\n# event is finally known. The feelings and thoughts you have\
    \ at that moment are\n# definitely worth noting down and comparing.\n# Your task\
    \ is to determine if a person correctly guessed the results of a number of matches.\n\
    # You are given two arrays of scores and guesses of equal length, where each index\
    \ shows a match. \n# Return an array of the same length denoting how far off each\
    \ guess was. If they have guessed correctly,\n# the value is 0, and if not, the\
    \ value is the absolute difference between the guess and the score.\n# example:\n\
    #\n# $1 is a space-separated list\n# $2 is a space-separated list\ncompare() {\n\
    \    local -n scores=$1\n    local -n guesses=$2\n    local -a result=()\n   \
    \ for i in ${!scores[@]}; do\n        if [[ ${scores[$i]} -eq ${guesses[$i]} ]];\
    \ then\n            result+=(0)\n        else\n            result+=($(( ${scores[$i]}\
    \ - ${guesses[$i]} )))\n        fi\n    done\n    echo \"${result[@]}\"\n}\n\n\
    candidate() {\n    compare \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate\
    \ \"1 2 3 4 5 1\" \"1 2 3 4 2 -2\") = \"0 0 0 0 3 3\" ]]\n    [[ $(candidate \"\
    0 0 0 0 0 0\" \"0 0 0 0 0 0\") = \"0 0 0 0 0 0\" ]]\n    [[ $(candidate \"1 2\
    \ 3\" \"-1 -2 -3\") = \"2 4 6\" ]]\n    [[ $(candidate \"1 2 3 5\" \"-1 2 3 4\"\
    ) = \"2 0 0 1\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: '/tmp/tmpo0caacl6.sh: line 14: local: `1 2 3 4 5 1'': invalid variable name
    for name reference

    /tmp/tmpo0caacl6.sh: line 15: local: `1 2 3 4 2 -2'': invalid variable name for
    name reference

    '
  stdout: ''
  timestamp: 1660002210
- exit_code: 0
  program: "#!/bin/bash\n# I think we all remember that feeling when the result of\
    \ some long-awaited\n# event is finally known. The feelings and thoughts you have\
    \ at that moment are\n# definitely worth noting down and comparing.\n# Your task\
    \ is to determine if a person correctly guessed the results of a number of matches.\n\
    # You are given two arrays of scores and guesses of equal length, where each index\
    \ shows a match. \n# Return an array of the same length denoting how far off each\
    \ guess was. If they have guessed correctly,\n# the value is 0, and if not, the\
    \ value is the absolute difference between the guess and the score.\n# example:\n\
    #\n# $1 is a space-separated list\n# $2 is a space-separated list\ncompare() {\n\
    \    local -a scores=($1)\n    local -a guesses=($2)\n    local -a result=()\n\
    \    for ((i=0; i<${#scores[@]}; i++)); do\n        if [ ${scores[$i]} -eq ${guesses[$i]}\
    \ ]; then\n            result+=(0)\n        else\n            result+=($((${scores[$i]}\
    \ - ${guesses[$i]})))\n        fi\n    done\n    echo ${result[@]}\n}\n\ncandidate()\
    \ {\n    compare \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"1 2 3\
    \ 4 5 1\" \"1 2 3 4 2 -2\") = \"0 0 0 0 3 3\" ]]\n    [[ $(candidate \"0 0 0 0\
    \ 0 0\" \"0 0 0 0 0 0\") = \"0 0 0 0 0 0\" ]]\n    [[ $(candidate \"1 2 3\" \"\
    -1 -2 -3\") = \"2 4 6\" ]]\n    [[ $(candidate \"1 2 3 5\" \"-1 2 3 4\") = \"\
    2 0 0 1\" ]]\n}\n\nrun_test"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660002210
- exit_code: 1
  program: "#!/bin/bash\n# I think we all remember that feeling when the result of\
    \ some long-awaited\n# event is finally known. The feelings and thoughts you have\
    \ at that moment are\n# definitely worth noting down and comparing.\n# Your task\
    \ is to determine if a person correctly guessed the results of a number of matches.\n\
    # You are given two arrays of scores and guesses of equal length, where each index\
    \ shows a match. \n# Return an array of the same length denoting how far off each\
    \ guess was. If they have guessed correctly,\n# the value is 0, and if not, the\
    \ value is the absolute difference between the guess and the score.\n# example:\n\
    #\n# $1 is a space-separated list\n# $2 is a space-separated list\ncompare() {\n\
    \    local -n scores=$1\n    local -n guesses=$2\n    local -a result=()\n   \
    \ for ((i=0; i<${#scores[@]}; i++)); do\n        if [[ ${scores[$i]} -eq ${guesses[$i]}\
    \ ]]; then\n            result+=(0)\n        else\n            result+=($(( ${scores[$i]}\
    \ - ${guesses[$i]} )))\n        fi\n    done\n    echo \"${result[@]}\"\n}\n\n\
    candidate() {\n    compare \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate\
    \ \"1 2 3 4 5 1\" \"1 2 3 4 2 -2\") = \"0 0 0 0 3 3\" ]]\n    [[ $(candidate \"\
    0 0 0 0 0 0\" \"0 0 0 0 0 0\") = \"0 0 0 0 0 0\" ]]\n    [[ $(candidate \"1 2\
    \ 3\" \"-1 -2 -3\") = \"2 4 6\" ]]\n    [[ $(candidate \"1 2 3 5\" \"-1 2 3 4\"\
    ) = \"2 0 0 1\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: '/tmp/tmpafs_1xxy.sh: line 14: local: `1 2 3 4 5 1'': invalid variable name
    for name reference

    /tmp/tmpafs_1xxy.sh: line 15: local: `1 2 3 4 2 -2'': invalid variable name for
    name reference

    '
  stdout: ''
  timestamp: 1660002210
- exit_code: 1
  program: "#!/bin/bash\n# I think we all remember that feeling when the result of\
    \ some long-awaited\n# event is finally known. The feelings and thoughts you have\
    \ at that moment are\n# definitely worth noting down and comparing.\n# Your task\
    \ is to determine if a person correctly guessed the results of a number of matches.\n\
    # You are given two arrays of scores and guesses of equal length, where each index\
    \ shows a match. \n# Return an array of the same length denoting how far off each\
    \ guess was. If they have guessed correctly,\n# the value is 0, and if not, the\
    \ value is the absolute difference between the guess and the score.\n# example:\n\
    #\n# $1 is a space-separated list\n# $2 is a space-separated list\ncompare() {\n\
    \    local -n _scores=$1\n    local -n _guesses=$2\n    local -a _result=()\n\
    \    for (( i=0; i<${#_scores[@]}; i++ )); do\n        _result[$i]=$((${_scores[$i]}-${_guesses[$i]}))\n\
    \    done\n    echo \"${_result[@]}\"\n}\n\ncandidate() {\n    compare \"$@\"\n\
    }\n\nset -e\nrun_test() {\n    [[ $(candidate \"1 2 3 4 5 1\" \"1 2 3 4 2 -2\"\
    ) = \"0 0 0 0 3 3\" ]]\n    [[ $(candidate \"0 0 0 0 0 0\" \"0 0 0 0 0 0\") =\
    \ \"0 0 0 0 0 0\" ]]\n    [[ $(candidate \"1 2 3\" \"-1 -2 -3\") = \"2 4 6\" ]]\n\
    \    [[ $(candidate \"1 2 3 5\" \"-1 2 3 4\") = \"2 0 0 1\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: '/tmp/tmpys8a022x.sh: line 14: local: `1 2 3 4 5 1'': invalid variable name
    for name reference

    /tmp/tmpys8a022x.sh: line 15: local: `1 2 3 4 2 -2'': invalid variable name for
    name reference

    '
  stdout: ''
  timestamp: 1660002210
- exit_code: 1
  program: "#!/bin/bash\n# I think we all remember that feeling when the result of\
    \ some long-awaited\n# event is finally known. The feelings and thoughts you have\
    \ at that moment are\n# definitely worth noting down and comparing.\n# Your task\
    \ is to determine if a person correctly guessed the results of a number of matches.\n\
    # You are given two arrays of scores and guesses of equal length, where each index\
    \ shows a match. \n# Return an array of the same length denoting how far off each\
    \ guess was. If they have guessed correctly,\n# the value is 0, and if not, the\
    \ value is the absolute difference between the guess and the score.\n# example:\n\
    #\n# $1 is a space-separated list\n# $2 is a space-separated list\ncompare() {\n\
    \  local -n arr1=$1\n  local -n arr2=$2\n  local -a result\n  for ((i=0; i<${#arr1[@]};\
    \ i++)); do\n    result[i]=$((${arr1[i]}-${arr2[i]}))\n  done\n  echo \"${result[@]}\"\
    \n}\n\ncandidate() {\n    compare \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate\
    \ \"1 2 3 4 5 1\" \"1 2 3 4 2 -2\") = \"0 0 0 0 3 3\" ]]\n    [[ $(candidate \"\
    0 0 0 0 0 0\" \"0 0 0 0 0 0\") = \"0 0 0 0 0 0\" ]]\n    [[ $(candidate \"1 2\
    \ 3\" \"-1 -2 -3\") = \"2 4 6\" ]]\n    [[ $(candidate \"1 2 3 5\" \"-1 2 3 4\"\
    ) = \"2 0 0 1\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: '/tmp/tmpfoc6b4mc.sh: line 14: local: `1 2 3 4 5 1'': invalid variable name
    for name reference

    /tmp/tmpfoc6b4mc.sh: line 15: local: `1 2 3 4 2 -2'': invalid variable name for
    name reference

    '
  stdout: ''
  timestamp: 1660002210
- exit_code: 0
  program: "#!/bin/bash\n# I think we all remember that feeling when the result of\
    \ some long-awaited\n# event is finally known. The feelings and thoughts you have\
    \ at that moment are\n# definitely worth noting down and comparing.\n# Your task\
    \ is to determine if a person correctly guessed the results of a number of matches.\n\
    # You are given two arrays of scores and guesses of equal length, where each index\
    \ shows a match. \n# Return an array of the same length denoting how far off each\
    \ guess was. If they have guessed correctly,\n# the value is 0, and if not, the\
    \ value is the absolute difference between the guess and the score.\n# example:\n\
    #\n# $1 is a space-separated list\n# $2 is a space-separated list\ncompare() {\n\
    \    local -a score=($1)\n    local -a guess=($2)\n    local -a result=()\n  \
    \  for ((i=0; i<${#score[@]}; i++)); do\n        result[$i]=$((${score[$i]}-${guess[$i]}))\n\
    \        result[$i]=${result[$i]#-}\n    done\n    echo ${result[@]}\n}\n\ncandidate()\
    \ {\n    compare \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"1 2 3\
    \ 4 5 1\" \"1 2 3 4 2 -2\") = \"0 0 0 0 3 3\" ]]\n    [[ $(candidate \"0 0 0 0\
    \ 0 0\" \"0 0 0 0 0 0\") = \"0 0 0 0 0 0\" ]]\n    [[ $(candidate \"1 2 3\" \"\
    -1 -2 -3\") = \"2 4 6\" ]]\n    [[ $(candidate \"1 2 3 5\" \"-1 2 3 4\") = \"\
    2 0 0 1\" ]]\n}\n\nrun_test"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660002210
- exit_code: 0
  program: "#!/bin/bash\n# I think we all remember that feeling when the result of\
    \ some long-awaited\n# event is finally known. The feelings and thoughts you have\
    \ at that moment are\n# definitely worth noting down and comparing.\n# Your task\
    \ is to determine if a person correctly guessed the results of a number of matches.\n\
    # You are given two arrays of scores and guesses of equal length, where each index\
    \ shows a match. \n# Return an array of the same length denoting how far off each\
    \ guess was. If they have guessed correctly,\n# the value is 0, and if not, the\
    \ value is the absolute difference between the guess and the score.\n# example:\n\
    #\n# $1 is a space-separated list\n# $2 is a space-separated list\ncompare() {\n\
    \    local -a scores=($1)\n    local -a guesses=($2)\n    local -a results=()\n\
    \    for ((i=0; i<${#scores[@]}; i++)); do\n        results[$i]=$((${scores[$i]}-${guesses[$i]}))\n\
    \    done\n    echo ${results[@]}\n}\n\ncandidate() {\n    compare \"$@\"\n}\n\
    \nset -e\nrun_test() {\n    [[ $(candidate \"1 2 3 4 5 1\" \"1 2 3 4 2 -2\") =\
    \ \"0 0 0 0 3 3\" ]]\n    [[ $(candidate \"0 0 0 0 0 0\" \"0 0 0 0 0 0\") = \"\
    0 0 0 0 0 0\" ]]\n    [[ $(candidate \"1 2 3\" \"-1 -2 -3\") = \"2 4 6\" ]]\n\
    \    [[ $(candidate \"1 2 3 5\" \"-1 2 3 4\") = \"2 0 0 1\" ]]\n}\n\nrun_test"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660002210
- exit_code: 1
  program: "#!/bin/bash\n# I think we all remember that feeling when the result of\
    \ some long-awaited\n# event is finally known. The feelings and thoughts you have\
    \ at that moment are\n# definitely worth noting down and comparing.\n# Your task\
    \ is to determine if a person correctly guessed the results of a number of matches.\n\
    # You are given two arrays of scores and guesses of equal length, where each index\
    \ shows a match. \n# Return an array of the same length denoting how far off each\
    \ guess was. If they have guessed correctly,\n# the value is 0, and if not, the\
    \ value is the absolute difference between the guess and the score.\n# example:\n\
    #\n# $1 is a space-separated list\n# $2 is a space-separated list\ncompare() {\n\
    \    local -n scores=$1\n    local -n guesses=$2\n    local -a result=()\n   \
    \ for (( i=0; i<${#scores[@]}; i++ )); do\n        result+=($((${scores[$i]} -\
    \ ${guesses[$i]})))\n    done\n    echo \"${result[@]}\"\n}\n\ncandidate() {\n\
    \    compare \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"1 2 3 4 5\
    \ 1\" \"1 2 3 4 2 -2\") = \"0 0 0 0 3 3\" ]]\n    [[ $(candidate \"0 0 0 0 0 0\"\
    \ \"0 0 0 0 0 0\") = \"0 0 0 0 0 0\" ]]\n    [[ $(candidate \"1 2 3\" \"-1 -2\
    \ -3\") = \"2 4 6\" ]]\n    [[ $(candidate \"1 2 3 5\" \"-1 2 3 4\") = \"2 0 0\
    \ 1\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: '/tmp/tmpn6hw_xth.sh: line 14: local: `1 2 3 4 5 1'': invalid variable name
    for name reference

    /tmp/tmpn6hw_xth.sh: line 15: local: `1 2 3 4 2 -2'': invalid variable name for
    name reference

    '
  stdout: ''
  timestamp: 1660002210
- exit_code: 0
  program: "#!/bin/bash\n# I think we all remember that feeling when the result of\
    \ some long-awaited\n# event is finally known. The feelings and thoughts you have\
    \ at that moment are\n# definitely worth noting down and comparing.\n# Your task\
    \ is to determine if a person correctly guessed the results of a number of matches.\n\
    # You are given two arrays of scores and guesses of equal length, where each index\
    \ shows a match. \n# Return an array of the same length denoting how far off each\
    \ guess was. If they have guessed correctly,\n# the value is 0, and if not, the\
    \ value is the absolute difference between the guess and the score.\n# example:\n\
    #\n# $1 is a space-separated list\n# $2 is a space-separated list\ncompare() {\n\
    \  local score=($1)\n  local guess=($2)\n  local result=()\n  for ((i=0; i<${#score[@]};\
    \ i++)); do\n    if [[ ${score[$i]} -eq ${guess[$i]} ]]; then\n      result[$i]=0\n\
    \    else\n      result[$i]=$(( ${score[$i]} - ${guess[$i]} ))\n    fi\n  done\n\
    \  echo ${result[@]}\n}\n\ncandidate() {\n    compare \"$@\"\n}\n\nset -e\nrun_test()\
    \ {\n    [[ $(candidate \"1 2 3 4 5 1\" \"1 2 3 4 2 -2\") = \"0 0 0 0 3 3\" ]]\n\
    \    [[ $(candidate \"0 0 0 0 0 0\" \"0 0 0 0 0 0\") = \"0 0 0 0 0 0\" ]]\n  \
    \  [[ $(candidate \"1 2 3\" \"-1 -2 -3\") = \"2 4 6\" ]]\n    [[ $(candidate \"\
    1 2 3 5\" \"-1 2 3 4\") = \"2 0 0 1\" ]]\n}\n\nrun_test"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660002210
- exit_code: 1
  program: "#!/bin/bash\n# I think we all remember that feeling when the result of\
    \ some long-awaited\n# event is finally known. The feelings and thoughts you have\
    \ at that moment are\n# definitely worth noting down and comparing.\n# Your task\
    \ is to determine if a person correctly guessed the results of a number of matches.\n\
    # You are given two arrays of scores and guesses of equal length, where each index\
    \ shows a match. \n# Return an array of the same length denoting how far off each\
    \ guess was. If they have guessed correctly,\n# the value is 0, and if not, the\
    \ value is the absolute difference between the guess and the score.\n# example:\n\
    #\n# $1 is a space-separated list\n# $2 is a space-separated list\ncompare() {\n\
    \    local -n scores=$1\n    local -n guesses=$2\n    local -a result\n    for\
    \ ((i=0; i<${#scores[@]}; i++)); do\n        if [[ ${scores[$i]} -eq ${guesses[$i]}\
    \ ]]; then\n            result[$i]=0\n        else\n            result[$i]=$((\
    \ ${scores[$i]} - ${guesses[$i]} ))\n        fi\n    done\n    echo ${result[@]}\n\
    }\n\ncandidate() {\n    compare \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate\
    \ \"1 2 3 4 5 1\" \"1 2 3 4 2 -2\") = \"0 0 0 0 3 3\" ]]\n    [[ $(candidate \"\
    0 0 0 0 0 0\" \"0 0 0 0 0 0\") = \"0 0 0 0 0 0\" ]]\n    [[ $(candidate \"1 2\
    \ 3\" \"-1 -2 -3\") = \"2 4 6\" ]]\n    [[ $(candidate \"1 2 3 5\" \"-1 2 3 4\"\
    ) = \"2 0 0 1\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: '/tmp/tmpxiv6gpn6.sh: line 14: local: `1 2 3 4 5 1'': invalid variable name
    for name reference

    /tmp/tmpxiv6gpn6.sh: line 15: local: `1 2 3 4 2 -2'': invalid variable name for
    name reference

    '
  stdout: ''
  timestamp: 1660002210
- exit_code: 1
  program: "#!/bin/bash\n# I think we all remember that feeling when the result of\
    \ some long-awaited\n# event is finally known. The feelings and thoughts you have\
    \ at that moment are\n# definitely worth noting down and comparing.\n# Your task\
    \ is to determine if a person correctly guessed the results of a number of matches.\n\
    # You are given two arrays of scores and guesses of equal length, where each index\
    \ shows a match. \n# Return an array of the same length denoting how far off each\
    \ guess was. If they have guessed correctly,\n# the value is 0, and if not, the\
    \ value is the absolute difference between the guess and the score.\n# example:\n\
    #\n# $1 is a space-separated list\n# $2 is a space-separated list\ncompare() {\n\
    \    local -n a=$1\n    local -n b=$2\n    local -a res\n    for ((i=0; i<${#a[@]};\
    \ i++)); do\n        res[i]=$((${a[i]}-${b[i]}))\n    done\n    echo \"${res[@]}\"\
    \n}\n\ncandidate() {\n    compare \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate\
    \ \"1 2 3 4 5 1\" \"1 2 3 4 2 -2\") = \"0 0 0 0 3 3\" ]]\n    [[ $(candidate \"\
    0 0 0 0 0 0\" \"0 0 0 0 0 0\") = \"0 0 0 0 0 0\" ]]\n    [[ $(candidate \"1 2\
    \ 3\" \"-1 -2 -3\") = \"2 4 6\" ]]\n    [[ $(candidate \"1 2 3 5\" \"-1 2 3 4\"\
    ) = \"2 0 0 1\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: '/tmp/tmpk90amxp3.sh: line 14: local: `1 2 3 4 5 1'': invalid variable name
    for name reference

    /tmp/tmpk90amxp3.sh: line 15: local: `1 2 3 4 2 -2'': invalid variable name for
    name reference

    '
  stdout: ''
  timestamp: 1660002210
- exit_code: 1
  program: "#!/bin/bash\n# I think we all remember that feeling when the result of\
    \ some long-awaited\n# event is finally known. The feelings and thoughts you have\
    \ at that moment are\n# definitely worth noting down and comparing.\n# Your task\
    \ is to determine if a person correctly guessed the results of a number of matches.\n\
    # You are given two arrays of scores and guesses of equal length, where each index\
    \ shows a match. \n# Return an array of the same length denoting how far off each\
    \ guess was. If they have guessed correctly,\n# the value is 0, and if not, the\
    \ value is the absolute difference between the guess and the score.\n# example:\n\
    #\n# $1 is a space-separated list\n# $2 is a space-separated list\ncompare() {\n\
    \    local -n scores=$1\n    local -n guesses=$2\n    local result=()\n    for\
    \ ((i=0; i<${#scores[@]}; i++)); do\n        result+=($((${scores[$i]}-${guesses[$i]})))\n\
    \    done\n    echo ${result[@]}\n}\n\ncandidate() {\n    compare \"$@\"\n}\n\n\
    set -e\nrun_test() {\n    [[ $(candidate \"1 2 3 4 5 1\" \"1 2 3 4 2 -2\") = \"\
    0 0 0 0 3 3\" ]]\n    [[ $(candidate \"0 0 0 0 0 0\" \"0 0 0 0 0 0\") = \"0 0\
    \ 0 0 0 0\" ]]\n    [[ $(candidate \"1 2 3\" \"-1 -2 -3\") = \"2 4 6\" ]]\n  \
    \  [[ $(candidate \"1 2 3 5\" \"-1 2 3 4\") = \"2 0 0 1\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: '/tmp/tmpj43d04zq.sh: line 14: local: `1 2 3 4 5 1'': invalid variable name
    for name reference

    /tmp/tmpj43d04zq.sh: line 15: local: `1 2 3 4 2 -2'': invalid variable name for
    name reference

    '
  stdout: ''
  timestamp: 1660002210
- exit_code: 1
  program: "#!/bin/bash\n# I think we all remember that feeling when the result of\
    \ some long-awaited\n# event is finally known. The feelings and thoughts you have\
    \ at that moment are\n# definitely worth noting down and comparing.\n# Your task\
    \ is to determine if a person correctly guessed the results of a number of matches.\n\
    # You are given two arrays of scores and guesses of equal length, where each index\
    \ shows a match. \n# Return an array of the same length denoting how far off each\
    \ guess was. If they have guessed correctly,\n# the value is 0, and if not, the\
    \ value is the absolute difference between the guess and the score.\n# example:\n\
    #\n# $1 is a space-separated list\n# $2 is a space-separated list\ncompare() {\n\
    \    local -n scores=$1\n    local -n guesses=$2\n    local -a result=()\n   \
    \ for ((i=0; i<${#scores[@]}; i++)); do\n        result+=($((${scores[$i]}-${guesses[$i]})))\n\
    \    done\n    echo \"${result[@]}\"\n}\n\ncandidate() {\n    compare \"$@\"\n\
    }\n\nset -e\nrun_test() {\n    [[ $(candidate \"1 2 3 4 5 1\" \"1 2 3 4 2 -2\"\
    ) = \"0 0 0 0 3 3\" ]]\n    [[ $(candidate \"0 0 0 0 0 0\" \"0 0 0 0 0 0\") =\
    \ \"0 0 0 0 0 0\" ]]\n    [[ $(candidate \"1 2 3\" \"-1 -2 -3\") = \"2 4 6\" ]]\n\
    \    [[ $(candidate \"1 2 3 5\" \"-1 2 3 4\") = \"2 0 0 1\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: '/tmp/tmp8w3oy0hv.sh: line 14: local: `1 2 3 4 5 1'': invalid variable name
    for name reference

    /tmp/tmp8w3oy0hv.sh: line 15: local: `1 2 3 4 2 -2'': invalid variable name for
    name reference

    '
  stdout: ''
  timestamp: 1660002210
- exit_code: 1
  program: "#!/bin/bash\n# I think we all remember that feeling when the result of\
    \ some long-awaited\n# event is finally known. The feelings and thoughts you have\
    \ at that moment are\n# definitely worth noting down and comparing.\n# Your task\
    \ is to determine if a person correctly guessed the results of a number of matches.\n\
    # You are given two arrays of scores and guesses of equal length, where each index\
    \ shows a match. \n# Return an array of the same length denoting how far off each\
    \ guess was. If they have guessed correctly,\n# the value is 0, and if not, the\
    \ value is the absolute difference between the guess and the score.\n# example:\n\
    #\n# $1 is a space-separated list\n# $2 is a space-separated list\ncompare() {\n\
    \    local -n scores=$1\n    local -n guesses=$2\n    local -a result\n    for\
    \ (( i=0; i<${#scores[@]}; i++ )); do\n        result[i]=$(( ${scores[i]} - ${guesses[i]}\
    \ ))\n    done\n    echo \"${result[@]}\"\n}\n\ncandidate() {\n    compare \"\
    $@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"1 2 3 4 5 1\" \"1 2 3 4\
    \ 2 -2\") = \"0 0 0 0 3 3\" ]]\n    [[ $(candidate \"0 0 0 0 0 0\" \"0 0 0 0 0\
    \ 0\") = \"0 0 0 0 0 0\" ]]\n    [[ $(candidate \"1 2 3\" \"-1 -2 -3\") = \"2\
    \ 4 6\" ]]\n    [[ $(candidate \"1 2 3 5\" \"-1 2 3 4\") = \"2 0 0 1\" ]]\n}\n\
    \nrun_test"
  status: Exception
  stderr: '/tmp/tmpmbzgabhy.sh: line 14: local: `1 2 3 4 5 1'': invalid variable name
    for name reference

    /tmp/tmpmbzgabhy.sh: line 15: local: `1 2 3 4 2 -2'': invalid variable name for
    name reference

    '
  stdout: ''
  timestamp: 1660002210
- exit_code: 1
  program: "#!/bin/bash\n# I think we all remember that feeling when the result of\
    \ some long-awaited\n# event is finally known. The feelings and thoughts you have\
    \ at that moment are\n# definitely worth noting down and comparing.\n# Your task\
    \ is to determine if a person correctly guessed the results of a number of matches.\n\
    # You are given two arrays of scores and guesses of equal length, where each index\
    \ shows a match. \n# Return an array of the same length denoting how far off each\
    \ guess was. If they have guessed correctly,\n# the value is 0, and if not, the\
    \ value is the absolute difference between the guess and the score.\n# example:\n\
    #\n# $1 is a space-separated list\n# $2 is a space-separated list\ncompare() {\n\
    \    local -n scores=$1\n    local -n guesses=$2\n    local -a result\n    for\
    \ ((i=0; i<${#scores[@]}; i++)); do\n        if [[ ${scores[$i]} -eq ${guesses[$i]}\
    \ ]]; then\n            result[$i]=0\n        else\n            result[$i]=$((\
    \ ${scores[$i]} - ${guesses[$i]} ))\n        fi\n    done\n    echo ${result[@]}\n\
    }\n\ncandidate() {\n    compare \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate\
    \ \"1 2 3 4 5 1\" \"1 2 3 4 2 -2\") = \"0 0 0 0 3 3\" ]]\n    [[ $(candidate \"\
    0 0 0 0 0 0\" \"0 0 0 0 0 0\") = \"0 0 0 0 0 0\" ]]\n    [[ $(candidate \"1 2\
    \ 3\" \"-1 -2 -3\") = \"2 4 6\" ]]\n    [[ $(candidate \"1 2 3 5\" \"-1 2 3 4\"\
    ) = \"2 0 0 1\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: '/tmp/tmpxiv6gpn6.sh: line 14: local: `1 2 3 4 5 1'': invalid variable name
    for name reference

    /tmp/tmpxiv6gpn6.sh: line 15: local: `1 2 3 4 2 -2'': invalid variable name for
    name reference

    '
  stdout: ''
  timestamp: 1660002210
- exit_code: 1
  program: "#!/bin/bash\n# I think we all remember that feeling when the result of\
    \ some long-awaited\n# event is finally known. The feelings and thoughts you have\
    \ at that moment are\n# definitely worth noting down and comparing.\n# Your task\
    \ is to determine if a person correctly guessed the results of a number of matches.\n\
    # You are given two arrays of scores and guesses of equal length, where each index\
    \ shows a match. \n# Return an array of the same length denoting how far off each\
    \ guess was. If they have guessed correctly,\n# the value is 0, and if not, the\
    \ value is the absolute difference between the guess and the score.\n# example:\n\
    #\n# $1 is a space-separated list\n# $2 is a space-separated list\ncompare() {\n\
    \    local -n scores=$1\n    local -n guesses=$2\n    local -a result\n    for\
    \ ((i=0; i<${#scores[@]}; i++)); do\n        if [[ ${scores[$i]} -eq ${guesses[$i]}\
    \ ]]; then\n            result[$i]=0\n        else\n            result[$i]=$((\
    \ ${scores[$i]} - ${guesses[$i]} ))\n        fi\n    done\n    echo ${result[@]}\n\
    }\n\ncandidate() {\n    compare \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate\
    \ \"1 2 3 4 5 1\" \"1 2 3 4 2 -2\") = \"0 0 0 0 3 3\" ]]\n    [[ $(candidate \"\
    0 0 0 0 0 0\" \"0 0 0 0 0 0\") = \"0 0 0 0 0 0\" ]]\n    [[ $(candidate \"1 2\
    \ 3\" \"-1 -2 -3\") = \"2 4 6\" ]]\n    [[ $(candidate \"1 2 3 5\" \"-1 2 3 4\"\
    ) = \"2 0 0 1\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: '/tmp/tmpxiv6gpn6.sh: line 14: local: `1 2 3 4 5 1'': invalid variable name
    for name reference

    /tmp/tmpxiv6gpn6.sh: line 15: local: `1 2 3 4 2 -2'': invalid variable name for
    name reference

    '
  stdout: ''
  timestamp: 1660002210
- exit_code: 1
  program: "#!/bin/bash\n# I think we all remember that feeling when the result of\
    \ some long-awaited\n# event is finally known. The feelings and thoughts you have\
    \ at that moment are\n# definitely worth noting down and comparing.\n# Your task\
    \ is to determine if a person correctly guessed the results of a number of matches.\n\
    # You are given two arrays of scores and guesses of equal length, where each index\
    \ shows a match. \n# Return an array of the same length denoting how far off each\
    \ guess was. If they have guessed correctly,\n# the value is 0, and if not, the\
    \ value is the absolute difference between the guess and the score.\n# example:\n\
    #\n# $1 is a space-separated list\n# $2 is a space-separated list\ncompare() {\n\
    \    local -n scores=$1\n    local -n guesses=$2\n    local result=()\n    for\
    \ i in ${!scores[@]}; do\n        if [[ ${scores[$i]} -eq ${guesses[$i]} ]]; then\n\
    \            result+=(0)\n        else\n            result+=($(( ${scores[$i]}\
    \ - ${guesses[$i]} )))\n        fi\n    done\n    echo ${result[@]}\n}\n\ncandidate()\
    \ {\n    compare \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"1 2 3\
    \ 4 5 1\" \"1 2 3 4 2 -2\") = \"0 0 0 0 3 3\" ]]\n    [[ $(candidate \"0 0 0 0\
    \ 0 0\" \"0 0 0 0 0 0\") = \"0 0 0 0 0 0\" ]]\n    [[ $(candidate \"1 2 3\" \"\
    -1 -2 -3\") = \"2 4 6\" ]]\n    [[ $(candidate \"1 2 3 5\" \"-1 2 3 4\") = \"\
    2 0 0 1\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: '/tmp/tmpxjqriweh.sh: line 14: local: `1 2 3 4 5 1'': invalid variable name
    for name reference

    /tmp/tmpxjqriweh.sh: line 15: local: `1 2 3 4 2 -2'': invalid variable name for
    name reference

    '
  stdout: ''
  timestamp: 1660002210
- exit_code: 0
  program: "#!/bin/bash\n# I think we all remember that feeling when the result of\
    \ some long-awaited\n# event is finally known. The feelings and thoughts you have\
    \ at that moment are\n# definitely worth noting down and comparing.\n# Your task\
    \ is to determine if a person correctly guessed the results of a number of matches.\n\
    # You are given two arrays of scores and guesses of equal length, where each index\
    \ shows a match. \n# Return an array of the same length denoting how far off each\
    \ guess was. If they have guessed correctly,\n# the value is 0, and if not, the\
    \ value is the absolute difference between the guess and the score.\n# example:\n\
    #\n# $1 is a space-separated list\n# $2 is a space-separated list\ncompare() {\n\
    \    local score=($1)\n    local guess=($2)\n    local result=()\n    for ((i=0;\
    \ i<${#score[@]}; i++)); do\n        result[i]=$((${score[i]}-${guess[i]}))\n\
    \        if [ ${result[i]} -lt 0 ]; then\n            result[i]=$((-${result[i]}))\n\
    \        fi\n    done\n    echo ${result[@]}\n}\n\ncandidate() {\n    compare\
    \ \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"1 2 3 4 5 1\" \"1 2\
    \ 3 4 2 -2\") = \"0 0 0 0 3 3\" ]]\n    [[ $(candidate \"0 0 0 0 0 0\" \"0 0 0\
    \ 0 0 0\") = \"0 0 0 0 0 0\" ]]\n    [[ $(candidate \"1 2 3\" \"-1 -2 -3\") =\
    \ \"2 4 6\" ]]\n    [[ $(candidate \"1 2 3 5\" \"-1 2 3 4\") = \"2 0 0 1\" ]]\n\
    }\n\nrun_test"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660002210
- exit_code: 1
  program: "#!/bin/bash\n# I think we all remember that feeling when the result of\
    \ some long-awaited\n# event is finally known. The feelings and thoughts you have\
    \ at that moment are\n# definitely worth noting down and comparing.\n# Your task\
    \ is to determine if a person correctly guessed the results of a number of matches.\n\
    # You are given two arrays of scores and guesses of equal length, where each index\
    \ shows a match. \n# Return an array of the same length denoting how far off each\
    \ guess was. If they have guessed correctly,\n# the value is 0, and if not, the\
    \ value is the absolute difference between the guess and the score.\n# example:\n\
    #\n# $1 is a space-separated list\n# $2 is a space-separated list\ncompare() {\n\
    \    local -n scores=$1\n    local -n guesses=$2\n    local -a result=()\n   \
    \ for i in \"${!scores[@]}\"; do\n        if [[ ${scores[$i]} -eq ${guesses[$i]}\
    \ ]]; then\n            result+=(0)\n        else\n            result+=($(( ${scores[$i]}\
    \ - ${guesses[$i]} )))\n        fi\n    done\n    echo \"${result[@]}\"\n}\n\n\
    candidate() {\n    compare \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate\
    \ \"1 2 3 4 5 1\" \"1 2 3 4 2 -2\") = \"0 0 0 0 3 3\" ]]\n    [[ $(candidate \"\
    0 0 0 0 0 0\" \"0 0 0 0 0 0\") = \"0 0 0 0 0 0\" ]]\n    [[ $(candidate \"1 2\
    \ 3\" \"-1 -2 -3\") = \"2 4 6\" ]]\n    [[ $(candidate \"1 2 3 5\" \"-1 2 3 4\"\
    ) = \"2 0 0 1\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: '/tmp/tmp2xc4903f.sh: line 14: local: `1 2 3 4 5 1'': invalid variable name
    for name reference

    /tmp/tmp2xc4903f.sh: line 15: local: `1 2 3 4 2 -2'': invalid variable name for
    name reference

    '
  stdout: ''
  timestamp: 1660002210
- exit_code: 1
  program: "#!/bin/bash\n# I think we all remember that feeling when the result of\
    \ some long-awaited\n# event is finally known. The feelings and thoughts you have\
    \ at that moment are\n# definitely worth noting down and comparing.\n# Your task\
    \ is to determine if a person correctly guessed the results of a number of matches.\n\
    # You are given two arrays of scores and guesses of equal length, where each index\
    \ shows a match. \n# Return an array of the same length denoting how far off each\
    \ guess was. If they have guessed correctly,\n# the value is 0, and if not, the\
    \ value is the absolute difference between the guess and the score.\n# example:\n\
    #\n# $1 is a space-separated list\n# $2 is a space-separated list\ncompare() {\n\
    \    local -n scores=$1\n    local -n guesses=$2\n    local -a result=()\n   \
    \ for i in ${!scores[@]}; do\n        if [[ ${scores[$i]} -eq ${guesses[$i]} ]];\
    \ then\n            result+=(0)\n        else\n            result+=($(( ${scores[$i]}\
    \ - ${guesses[$i]} )))\n        fi\n    done\n    echo \"${result[@]}\"\n}\n\n\
    candidate() {\n    compare \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate\
    \ \"1 2 3 4 5 1\" \"1 2 3 4 2 -2\") = \"0 0 0 0 3 3\" ]]\n    [[ $(candidate \"\
    0 0 0 0 0 0\" \"0 0 0 0 0 0\") = \"0 0 0 0 0 0\" ]]\n    [[ $(candidate \"1 2\
    \ 3\" \"-1 -2 -3\") = \"2 4 6\" ]]\n    [[ $(candidate \"1 2 3 5\" \"-1 2 3 4\"\
    ) = \"2 0 0 1\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: '/tmp/tmpo0caacl6.sh: line 14: local: `1 2 3 4 5 1'': invalid variable name
    for name reference

    /tmp/tmpo0caacl6.sh: line 15: local: `1 2 3 4 2 -2'': invalid variable name for
    name reference

    '
  stdout: ''
  timestamp: 1660002210
- exit_code: 1
  program: "#!/bin/bash\n# I think we all remember that feeling when the result of\
    \ some long-awaited\n# event is finally known. The feelings and thoughts you have\
    \ at that moment are\n# definitely worth noting down and comparing.\n# Your task\
    \ is to determine if a person correctly guessed the results of a number of matches.\n\
    # You are given two arrays of scores and guesses of equal length, where each index\
    \ shows a match. \n# Return an array of the same length denoting how far off each\
    \ guess was. If they have guessed correctly,\n# the value is 0, and if not, the\
    \ value is the absolute difference between the guess and the score.\n# example:\n\
    #\n# $1 is a space-separated list\n# $2 is a space-separated list\ncompare() {\n\
    \  local -n scores=$1\n  local -n guesses=$2\n  local -a result=()\n  for ((i=0;\
    \ i<${#scores[@]}; i++)); do\n    local score=${scores[$i]}\n    local guess=${guesses[$i]}\n\
    \    if [[ $score -eq $guess ]]; then\n      result+=(0)\n    else\n      result+=($((score\
    \ - guess)))\n    fi\n  done\n  echo \"${result[@]}\"\n}\n\ncandidate() {\n  \
    \  compare \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"1 2 3 4 5 1\"\
    \ \"1 2 3 4 2 -2\") = \"0 0 0 0 3 3\" ]]\n    [[ $(candidate \"0 0 0 0 0 0\" \"\
    0 0 0 0 0 0\") = \"0 0 0 0 0 0\" ]]\n    [[ $(candidate \"1 2 3\" \"-1 -2 -3\"\
    ) = \"2 4 6\" ]]\n    [[ $(candidate \"1 2 3 5\" \"-1 2 3 4\") = \"2 0 0 1\" ]]\n\
    }\n\nrun_test"
  status: Exception
  stderr: '/tmp/tmp0l71aus4.sh: line 14: local: `1 2 3 4 5 1'': invalid variable name
    for name reference

    /tmp/tmp0l71aus4.sh: line 15: local: `1 2 3 4 2 -2'': invalid variable name for
    name reference

    '
  stdout: ''
  timestamp: 1660002210
- exit_code: 1
  program: "#!/bin/bash\n# I think we all remember that feeling when the result of\
    \ some long-awaited\n# event is finally known. The feelings and thoughts you have\
    \ at that moment are\n# definitely worth noting down and comparing.\n# Your task\
    \ is to determine if a person correctly guessed the results of a number of matches.\n\
    # You are given two arrays of scores and guesses of equal length, where each index\
    \ shows a match. \n# Return an array of the same length denoting how far off each\
    \ guess was. If they have guessed correctly,\n# the value is 0, and if not, the\
    \ value is the absolute difference between the guess and the score.\n# example:\n\
    #\n# $1 is a space-separated list\n# $2 is a space-separated list\ncompare() {\n\
    \    local -n scores=$1\n    local -n guesses=$2\n    local -a result=()\n   \
    \ for ((i=0; i<${#scores[@]}; i++)); do\n        result+=($((${scores[$i]}-${guesses[$i]})))\n\
    \    done\n    echo \"${result[@]}\"\n}\n\ncandidate() {\n    compare \"$@\"\n\
    }\n\nset -e\nrun_test() {\n    [[ $(candidate \"1 2 3 4 5 1\" \"1 2 3 4 2 -2\"\
    ) = \"0 0 0 0 3 3\" ]]\n    [[ $(candidate \"0 0 0 0 0 0\" \"0 0 0 0 0 0\") =\
    \ \"0 0 0 0 0 0\" ]]\n    [[ $(candidate \"1 2 3\" \"-1 -2 -3\") = \"2 4 6\" ]]\n\
    \    [[ $(candidate \"1 2 3 5\" \"-1 2 3 4\") = \"2 0 0 1\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: '/tmp/tmp8w3oy0hv.sh: line 14: local: `1 2 3 4 5 1'': invalid variable name
    for name reference

    /tmp/tmp8w3oy0hv.sh: line 15: local: `1 2 3 4 2 -2'': invalid variable name for
    name reference

    '
  stdout: ''
  timestamp: 1660002210
- exit_code: 1
  program: "#!/bin/bash\n# I think we all remember that feeling when the result of\
    \ some long-awaited\n# event is finally known. The feelings and thoughts you have\
    \ at that moment are\n# definitely worth noting down and comparing.\n# Your task\
    \ is to determine if a person correctly guessed the results of a number of matches.\n\
    # You are given two arrays of scores and guesses of equal length, where each index\
    \ shows a match. \n# Return an array of the same length denoting how far off each\
    \ guess was. If they have guessed correctly,\n# the value is 0, and if not, the\
    \ value is the absolute difference between the guess and the score.\n# example:\n\
    #\n# $1 is a space-separated list\n# $2 is a space-separated list\ncompare() {\n\
    \    local -n a=$1\n    local -n b=$2\n    local -a result=()\n    for ((i=0;\
    \ i<${#a[@]}; i++)); do\n        result+=($((${a[$i]}-${b[$i]})))\n    done\n\
    \    echo \"${result[@]}\"\n}\n\ncandidate() {\n    compare \"$@\"\n}\n\nset -e\n\
    run_test() {\n    [[ $(candidate \"1 2 3 4 5 1\" \"1 2 3 4 2 -2\") = \"0 0 0 0\
    \ 3 3\" ]]\n    [[ $(candidate \"0 0 0 0 0 0\" \"0 0 0 0 0 0\") = \"0 0 0 0 0\
    \ 0\" ]]\n    [[ $(candidate \"1 2 3\" \"-1 -2 -3\") = \"2 4 6\" ]]\n    [[ $(candidate\
    \ \"1 2 3 5\" \"-1 2 3 4\") = \"2 0 0 1\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: '/tmp/tmpzrg4gzcy.sh: line 14: local: `1 2 3 4 5 1'': invalid variable name
    for name reference

    /tmp/tmpzrg4gzcy.sh: line 15: local: `1 2 3 4 2 -2'': invalid variable name for
    name reference

    '
  stdout: ''
  timestamp: 1660002210
- exit_code: 1
  program: "#!/bin/bash\n# I think we all remember that feeling when the result of\
    \ some long-awaited\n# event is finally known. The feelings and thoughts you have\
    \ at that moment are\n# definitely worth noting down and comparing.\n# Your task\
    \ is to determine if a person correctly guessed the results of a number of matches.\n\
    # You are given two arrays of scores and guesses of equal length, where each index\
    \ shows a match. \n# Return an array of the same length denoting how far off each\
    \ guess was. If they have guessed correctly,\n# the value is 0, and if not, the\
    \ value is the absolute difference between the guess and the score.\n# example:\n\
    #\n# $1 is a space-separated list\n# $2 is a space-separated list\ncompare() {\n\
    \    local -n scores=$1\n    local -n guesses=$2\n    local -a result=()\n   \
    \ for i in ${!scores[@]}; do\n        if [[ ${scores[$i]} -eq ${guesses[$i]} ]];\
    \ then\n            result+=(0)\n        else\n            result+=($(( ${scores[$i]}\
    \ - ${guesses[$i]} )))\n        fi\n    done\n    echo \"${result[@]}\"\n}\n\n\
    candidate() {\n    compare \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate\
    \ \"1 2 3 4 5 1\" \"1 2 3 4 2 -2\") = \"0 0 0 0 3 3\" ]]\n    [[ $(candidate \"\
    0 0 0 0 0 0\" \"0 0 0 0 0 0\") = \"0 0 0 0 0 0\" ]]\n    [[ $(candidate \"1 2\
    \ 3\" \"-1 -2 -3\") = \"2 4 6\" ]]\n    [[ $(candidate \"1 2 3 5\" \"-1 2 3 4\"\
    ) = \"2 0 0 1\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: '/tmp/tmpo0caacl6.sh: line 14: local: `1 2 3 4 5 1'': invalid variable name
    for name reference

    /tmp/tmpo0caacl6.sh: line 15: local: `1 2 3 4 2 -2'': invalid variable name for
    name reference

    '
  stdout: ''
  timestamp: 1660002210
- exit_code: 1
  program: "#!/bin/bash\n# I think we all remember that feeling when the result of\
    \ some long-awaited\n# event is finally known. The feelings and thoughts you have\
    \ at that moment are\n# definitely worth noting down and comparing.\n# Your task\
    \ is to determine if a person correctly guessed the results of a number of matches.\n\
    # You are given two arrays of scores and guesses of equal length, where each index\
    \ shows a match. \n# Return an array of the same length denoting how far off each\
    \ guess was. If they have guessed correctly,\n# the value is 0, and if not, the\
    \ value is the absolute difference between the guess and the score.\n# example:\n\
    #\n# $1 is a space-separated list\n# $2 is a space-separated list\ncompare() {\n\
    \    local -n scores=$1\n    local -n guesses=$2\n    local -a result=()\n   \
    \ for ((i=0; i<${#scores[@]}; i++)); do\n        result+=($((${scores[$i]} - ${guesses[$i]})))\n\
    \    done\n    echo \"${result[@]}\"\n}\n\ncandidate() {\n    compare \"$@\"\n\
    }\n\nset -e\nrun_test() {\n    [[ $(candidate \"1 2 3 4 5 1\" \"1 2 3 4 2 -2\"\
    ) = \"0 0 0 0 3 3\" ]]\n    [[ $(candidate \"0 0 0 0 0 0\" \"0 0 0 0 0 0\") =\
    \ \"0 0 0 0 0 0\" ]]\n    [[ $(candidate \"1 2 3\" \"-1 -2 -3\") = \"2 4 6\" ]]\n\
    \    [[ $(candidate \"1 2 3 5\" \"-1 2 3 4\") = \"2 0 0 1\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: '/tmp/tmpj_hkzzds.sh: line 14: local: `1 2 3 4 5 1'': invalid variable name
    for name reference

    /tmp/tmpj_hkzzds.sh: line 15: local: `1 2 3 4 2 -2'': invalid variable name for
    name reference

    '
  stdout: ''
  timestamp: 1660002210
- exit_code: 0
  program: "#!/bin/bash\n# I think we all remember that feeling when the result of\
    \ some long-awaited\n# event is finally known. The feelings and thoughts you have\
    \ at that moment are\n# definitely worth noting down and comparing.\n# Your task\
    \ is to determine if a person correctly guessed the results of a number of matches.\n\
    # You are given two arrays of scores and guesses of equal length, where each index\
    \ shows a match. \n# Return an array of the same length denoting how far off each\
    \ guess was. If they have guessed correctly,\n# the value is 0, and if not, the\
    \ value is the absolute difference between the guess and the score.\n# example:\n\
    #\n# $1 is a space-separated list\n# $2 is a space-separated list\ncompare() {\n\
    \    local score=($1)\n    local guess=($2)\n    local result=()\n    for ((i=0;\
    \ i<${#score[@]}; i++)); do\n        if [ ${score[$i]} -eq ${guess[$i]} ]; then\n\
    \            result[$i]=0\n        else\n            result[$i]=$((${score[$i]}\
    \ - ${guess[$i]}))\n        fi\n    done\n    echo ${result[@]}\n}\n\ncandidate()\
    \ {\n    compare \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"1 2 3\
    \ 4 5 1\" \"1 2 3 4 2 -2\") = \"0 0 0 0 3 3\" ]]\n    [[ $(candidate \"0 0 0 0\
    \ 0 0\" \"0 0 0 0 0 0\") = \"0 0 0 0 0 0\" ]]\n    [[ $(candidate \"1 2 3\" \"\
    -1 -2 -3\") = \"2 4 6\" ]]\n    [[ $(candidate \"1 2 3 5\" \"-1 2 3 4\") = \"\
    2 0 0 1\" ]]\n}\n\nrun_test"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660002210
- exit_code: 1
  program: "#!/bin/bash\n# I think we all remember that feeling when the result of\
    \ some long-awaited\n# event is finally known. The feelings and thoughts you have\
    \ at that moment are\n# definitely worth noting down and comparing.\n# Your task\
    \ is to determine if a person correctly guessed the results of a number of matches.\n\
    # You are given two arrays of scores and guesses of equal length, where each index\
    \ shows a match. \n# Return an array of the same length denoting how far off each\
    \ guess was. If they have guessed correctly,\n# the value is 0, and if not, the\
    \ value is the absolute difference between the guess and the score.\n# example:\n\
    #\n# $1 is a space-separated list\n# $2 is a space-separated list\ncompare() {\n\
    \    local -n scores=$1\n    local -n guesses=$2\n    local -a result=()\n   \
    \ for ((i=0; i<${#scores[@]}; i++)); do\n        result+=($((${scores[$i]} - ${guesses[$i]})))\n\
    \    done\n    echo \"${result[@]}\"\n}\n\ncandidate() {\n    compare \"$@\"\n\
    }\n\nset -e\nrun_test() {\n    [[ $(candidate \"1 2 3 4 5 1\" \"1 2 3 4 2 -2\"\
    ) = \"0 0 0 0 3 3\" ]]\n    [[ $(candidate \"0 0 0 0 0 0\" \"0 0 0 0 0 0\") =\
    \ \"0 0 0 0 0 0\" ]]\n    [[ $(candidate \"1 2 3\" \"-1 -2 -3\") = \"2 4 6\" ]]\n\
    \    [[ $(candidate \"1 2 3 5\" \"-1 2 3 4\") = \"2 0 0 1\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: '/tmp/tmpj_hkzzds.sh: line 14: local: `1 2 3 4 5 1'': invalid variable name
    for name reference

    /tmp/tmpj_hkzzds.sh: line 15: local: `1 2 3 4 2 -2'': invalid variable name for
    name reference

    '
  stdout: ''
  timestamp: 1660002210
- exit_code: 0
  program: "#!/bin/bash\n# I think we all remember that feeling when the result of\
    \ some long-awaited\n# event is finally known. The feelings and thoughts you have\
    \ at that moment are\n# definitely worth noting down and comparing.\n# Your task\
    \ is to determine if a person correctly guessed the results of a number of matches.\n\
    # You are given two arrays of scores and guesses of equal length, where each index\
    \ shows a match. \n# Return an array of the same length denoting how far off each\
    \ guess was. If they have guessed correctly,\n# the value is 0, and if not, the\
    \ value is the absolute difference between the guess and the score.\n# example:\n\
    #\n# $1 is a space-separated list\n# $2 is a space-separated list\ncompare() {\n\
    \    local -a scores=($1)\n    local -a guesses=($2)\n    local -a results=()\n\
    \    for ((i=0; i<${#scores[@]}; i++)); do\n        results[$i]=$((${scores[$i]}-${guesses[$i]}))\n\
    \    done\n    echo ${results[@]}\n}\n\ncandidate() {\n    compare \"$@\"\n}\n\
    \nset -e\nrun_test() {\n    [[ $(candidate \"1 2 3 4 5 1\" \"1 2 3 4 2 -2\") =\
    \ \"0 0 0 0 3 3\" ]]\n    [[ $(candidate \"0 0 0 0 0 0\" \"0 0 0 0 0 0\") = \"\
    0 0 0 0 0 0\" ]]\n    [[ $(candidate \"1 2 3\" \"-1 -2 -3\") = \"2 4 6\" ]]\n\
    \    [[ $(candidate \"1 2 3 5\" \"-1 2 3 4\") = \"2 0 0 1\" ]]\n}\n\nrun_test"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660002210
- exit_code: 1
  program: "#!/bin/bash\n# I think we all remember that feeling when the result of\
    \ some long-awaited\n# event is finally known. The feelings and thoughts you have\
    \ at that moment are\n# definitely worth noting down and comparing.\n# Your task\
    \ is to determine if a person correctly guessed the results of a number of matches.\n\
    # You are given two arrays of scores and guesses of equal length, where each index\
    \ shows a match. \n# Return an array of the same length denoting how far off each\
    \ guess was. If they have guessed correctly,\n# the value is 0, and if not, the\
    \ value is the absolute difference between the guess and the score.\n# example:\n\
    #\n# $1 is a space-separated list\n# $2 is a space-separated list\ncompare() {\n\
    \    local -n scores=$1\n    local -n guesses=$2\n    local -a result\n    for\
    \ i in ${!scores[@]}; do\n        if [[ ${scores[$i]} -eq ${guesses[$i]} ]]; then\n\
    \            result[$i]=0\n        else\n            result[$i]=$(( ${scores[$i]}\
    \ - ${guesses[$i]} ))\n        fi\n    done\n    echo ${result[@]}\n}\n\ncandidate()\
    \ {\n    compare \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"1 2 3\
    \ 4 5 1\" \"1 2 3 4 2 -2\") = \"0 0 0 0 3 3\" ]]\n    [[ $(candidate \"0 0 0 0\
    \ 0 0\" \"0 0 0 0 0 0\") = \"0 0 0 0 0 0\" ]]\n    [[ $(candidate \"1 2 3\" \"\
    -1 -2 -3\") = \"2 4 6\" ]]\n    [[ $(candidate \"1 2 3 5\" \"-1 2 3 4\") = \"\
    2 0 0 1\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: '/tmp/tmpc51pvyey.sh: line 14: local: `1 2 3 4 5 1'': invalid variable name
    for name reference

    /tmp/tmpc51pvyey.sh: line 15: local: `1 2 3 4 2 -2'': invalid variable name for
    name reference

    '
  stdout: ''
  timestamp: 1660002210
- exit_code: 1
  program: "#!/bin/bash\n# I think we all remember that feeling when the result of\
    \ some long-awaited\n# event is finally known. The feelings and thoughts you have\
    \ at that moment are\n# definitely worth noting down and comparing.\n# Your task\
    \ is to determine if a person correctly guessed the results of a number of matches.\n\
    # You are given two arrays of scores and guesses of equal length, where each index\
    \ shows a match. \n# Return an array of the same length denoting how far off each\
    \ guess was. If they have guessed correctly,\n# the value is 0, and if not, the\
    \ value is the absolute difference between the guess and the score.\n# example:\n\
    #\n# $1 is a space-separated list\n# $2 is a space-separated list\ncompare() {\n\
    \    local -n scores=$1\n    local -n guesses=$2\n    local -a result=()\n   \
    \ for ((i=0; i<${#scores[@]}; i++)); do\n        if ((scores[i] == guesses[i]));\
    \ then\n            result+=(0)\n        else\n            result+=($((scores[i]\
    \ - guesses[i])))\n        fi\n    done\n    echo \"${result[@]}\"\n}\n\ncandidate()\
    \ {\n    compare \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"1 2 3\
    \ 4 5 1\" \"1 2 3 4 2 -2\") = \"0 0 0 0 3 3\" ]]\n    [[ $(candidate \"0 0 0 0\
    \ 0 0\" \"0 0 0 0 0 0\") = \"0 0 0 0 0 0\" ]]\n    [[ $(candidate \"1 2 3\" \"\
    -1 -2 -3\") = \"2 4 6\" ]]\n    [[ $(candidate \"1 2 3 5\" \"-1 2 3 4\") = \"\
    2 0 0 1\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: '/tmp/tmpipc4qr0q.sh: line 14: local: `1 2 3 4 5 1'': invalid variable name
    for name reference

    /tmp/tmpipc4qr0q.sh: line 15: local: `1 2 3 4 2 -2'': invalid variable name for
    name reference

    '
  stdout: ''
  timestamp: 1660002210
- exit_code: 1
  program: "#!/bin/bash\n# I think we all remember that feeling when the result of\
    \ some long-awaited\n# event is finally known. The feelings and thoughts you have\
    \ at that moment are\n# definitely worth noting down and comparing.\n# Your task\
    \ is to determine if a person correctly guessed the results of a number of matches.\n\
    # You are given two arrays of scores and guesses of equal length, where each index\
    \ shows a match. \n# Return an array of the same length denoting how far off each\
    \ guess was. If they have guessed correctly,\n# the value is 0, and if not, the\
    \ value is the absolute difference between the guess and the score.\n# example:\n\
    #\n# $1 is a space-separated list\n# $2 is a space-separated list\ncompare() {\n\
    \    local -n scores=$1\n    local -n guesses=$2\n    local -a result=()\n   \
    \ for ((i=0; i<${#scores[@]}; i++)); do\n        result+=($((${scores[$i]} - ${guesses[$i]})))\n\
    \    done\n    echo \"${result[@]}\"\n}\n\ncandidate() {\n    compare \"$@\"\n\
    }\n\nset -e\nrun_test() {\n    [[ $(candidate \"1 2 3 4 5 1\" \"1 2 3 4 2 -2\"\
    ) = \"0 0 0 0 3 3\" ]]\n    [[ $(candidate \"0 0 0 0 0 0\" \"0 0 0 0 0 0\") =\
    \ \"0 0 0 0 0 0\" ]]\n    [[ $(candidate \"1 2 3\" \"-1 -2 -3\") = \"2 4 6\" ]]\n\
    \    [[ $(candidate \"1 2 3 5\" \"-1 2 3 4\") = \"2 0 0 1\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: '/tmp/tmpj_hkzzds.sh: line 14: local: `1 2 3 4 5 1'': invalid variable name
    for name reference

    /tmp/tmpj_hkzzds.sh: line 15: local: `1 2 3 4 2 -2'': invalid variable name for
    name reference

    '
  stdout: ''
  timestamp: 1660002210
- exit_code: 0
  program: "#!/bin/bash\n# I think we all remember that feeling when the result of\
    \ some long-awaited\n# event is finally known. The feelings and thoughts you have\
    \ at that moment are\n# definitely worth noting down and comparing.\n# Your task\
    \ is to determine if a person correctly guessed the results of a number of matches.\n\
    # You are given two arrays of scores and guesses of equal length, where each index\
    \ shows a match. \n# Return an array of the same length denoting how far off each\
    \ guess was. If they have guessed correctly,\n# the value is 0, and if not, the\
    \ value is the absolute difference between the guess and the score.\n# example:\n\
    #\n# $1 is a space-separated list\n# $2 is a space-separated list\ncompare() {\n\
    \    local -a scores=($1)\n    local -a guesses=($2)\n    local -a result=()\n\
    \    for ((i=0; i<${#scores[@]}; i++)); do\n        result[i]=$((${scores[i]}-${guesses[i]}))\n\
    \        if [ ${result[i]} -lt 0 ]; then\n            result[i]=$((-${result[i]}))\n\
    \        fi\n    done\n    echo ${result[@]}\n}\n\ncandidate() {\n    compare\
    \ \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"1 2 3 4 5 1\" \"1 2\
    \ 3 4 2 -2\") = \"0 0 0 0 3 3\" ]]\n    [[ $(candidate \"0 0 0 0 0 0\" \"0 0 0\
    \ 0 0 0\") = \"0 0 0 0 0 0\" ]]\n    [[ $(candidate \"1 2 3\" \"-1 -2 -3\") =\
    \ \"2 4 6\" ]]\n    [[ $(candidate \"1 2 3 5\" \"-1 2 3 4\") = \"2 0 0 1\" ]]\n\
    }\n\nrun_test"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660002210
- exit_code: 1
  program: "#!/bin/bash\n# I think we all remember that feeling when the result of\
    \ some long-awaited\n# event is finally known. The feelings and thoughts you have\
    \ at that moment are\n# definitely worth noting down and comparing.\n# Your task\
    \ is to determine if a person correctly guessed the results of a number of matches.\n\
    # You are given two arrays of scores and guesses of equal length, where each index\
    \ shows a match. \n# Return an array of the same length denoting how far off each\
    \ guess was. If they have guessed correctly,\n# the value is 0, and if not, the\
    \ value is the absolute difference between the guess and the score.\n# example:\n\
    #\n# $1 is a space-separated list\n# $2 is a space-separated list\ncompare() {\n\
    \  local -n scores=$1\n  local -n guesses=$2\n  local -a result=()\n  for ((i=0;\
    \ i<${#scores[@]}; i++)); do\n    if [[ ${scores[$i]} -eq ${guesses[$i]} ]]; then\n\
    \      result+=(0)\n    else\n      result+=($(( ${scores[$i]} - ${guesses[$i]}\
    \ )))\n    fi\n  done\n  echo \"${result[@]}\"\n}\n\ncandidate() {\n    compare\
    \ \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"1 2 3 4 5 1\" \"1 2\
    \ 3 4 2 -2\") = \"0 0 0 0 3 3\" ]]\n    [[ $(candidate \"0 0 0 0 0 0\" \"0 0 0\
    \ 0 0 0\") = \"0 0 0 0 0 0\" ]]\n    [[ $(candidate \"1 2 3\" \"-1 -2 -3\") =\
    \ \"2 4 6\" ]]\n    [[ $(candidate \"1 2 3 5\" \"-1 2 3 4\") = \"2 0 0 1\" ]]\n\
    }\n\nrun_test"
  status: Exception
  stderr: '/tmp/tmp1d79l9de.sh: line 14: local: `1 2 3 4 5 1'': invalid variable name
    for name reference

    /tmp/tmp1d79l9de.sh: line 15: local: `1 2 3 4 2 -2'': invalid variable name for
    name reference

    '
  stdout: ''
  timestamp: 1660002210
- exit_code: 1
  program: "#!/bin/bash\n# I think we all remember that feeling when the result of\
    \ some long-awaited\n# event is finally known. The feelings and thoughts you have\
    \ at that moment are\n# definitely worth noting down and comparing.\n# Your task\
    \ is to determine if a person correctly guessed the results of a number of matches.\n\
    # You are given two arrays of scores and guesses of equal length, where each index\
    \ shows a match. \n# Return an array of the same length denoting how far off each\
    \ guess was. If they have guessed correctly,\n# the value is 0, and if not, the\
    \ value is the absolute difference between the guess and the score.\n# example:\n\
    #\n# $1 is a space-separated list\n# $2 is a space-separated list\ncompare() {\n\
    \    local -n arr1=$1\n    local -n arr2=$2\n    local result=()\n    for ((i=0;\
    \ i<${#arr1[@]}; i++)); do\n        result+=($((${arr1[$i]}-${arr2[$i]})))\n \
    \   done\n    echo \"${result[@]}\"\n}\n\ncandidate() {\n    compare \"$@\"\n\
    }\n\nset -e\nrun_test() {\n    [[ $(candidate \"1 2 3 4 5 1\" \"1 2 3 4 2 -2\"\
    ) = \"0 0 0 0 3 3\" ]]\n    [[ $(candidate \"0 0 0 0 0 0\" \"0 0 0 0 0 0\") =\
    \ \"0 0 0 0 0 0\" ]]\n    [[ $(candidate \"1 2 3\" \"-1 -2 -3\") = \"2 4 6\" ]]\n\
    \    [[ $(candidate \"1 2 3 5\" \"-1 2 3 4\") = \"2 0 0 1\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: '/tmp/tmpbs3ic91o.sh: line 14: local: `1 2 3 4 5 1'': invalid variable name
    for name reference

    /tmp/tmpbs3ic91o.sh: line 15: local: `1 2 3 4 2 -2'': invalid variable name for
    name reference

    '
  stdout: ''
  timestamp: 1660002210
- exit_code: 1
  program: "#!/bin/bash\n# I think we all remember that feeling when the result of\
    \ some long-awaited\n# event is finally known. The feelings and thoughts you have\
    \ at that moment are\n# definitely worth noting down and comparing.\n# Your task\
    \ is to determine if a person correctly guessed the results of a number of matches.\n\
    # You are given two arrays of scores and guesses of equal length, where each index\
    \ shows a match. \n# Return an array of the same length denoting how far off each\
    \ guess was. If they have guessed correctly,\n# the value is 0, and if not, the\
    \ value is the absolute difference between the guess and the score.\n# example:\n\
    #\n# $1 is a space-separated list\n# $2 is a space-separated list\ncompare() {\n\
    \    local -n scores=$1\n    local -n guesses=$2\n    local -a result\n    for\
    \ ((i=0; i<${#scores[@]}; i++)); do\n        result[i]=$((${scores[i]}-${guesses[i]}))\n\
    \        if [[ ${result[i]} -lt 0 ]]; then\n            result[i]=$((-${result[i]}))\n\
    \        fi\n    done\n    echo ${result[@]}\n}\n\ncandidate() {\n    compare\
    \ \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"1 2 3 4 5 1\" \"1 2\
    \ 3 4 2 -2\") = \"0 0 0 0 3 3\" ]]\n    [[ $(candidate \"0 0 0 0 0 0\" \"0 0 0\
    \ 0 0 0\") = \"0 0 0 0 0 0\" ]]\n    [[ $(candidate \"1 2 3\" \"-1 -2 -3\") =\
    \ \"2 4 6\" ]]\n    [[ $(candidate \"1 2 3 5\" \"-1 2 3 4\") = \"2 0 0 1\" ]]\n\
    }\n\nrun_test"
  status: Exception
  stderr: '/tmp/tmplyz5_6e3.sh: line 14: local: `1 2 3 4 5 1'': invalid variable name
    for name reference

    /tmp/tmplyz5_6e3.sh: line 15: local: `1 2 3 4 2 -2'': invalid variable name for
    name reference

    '
  stdout: ''
  timestamp: 1660002210
- exit_code: 1
  program: "#!/bin/bash\n# I think we all remember that feeling when the result of\
    \ some long-awaited\n# event is finally known. The feelings and thoughts you have\
    \ at that moment are\n# definitely worth noting down and comparing.\n# Your task\
    \ is to determine if a person correctly guessed the results of a number of matches.\n\
    # You are given two arrays of scores and guesses of equal length, where each index\
    \ shows a match. \n# Return an array of the same length denoting how far off each\
    \ guess was. If they have guessed correctly,\n# the value is 0, and if not, the\
    \ value is the absolute difference between the guess and the score.\n# example:\n\
    #\n# $1 is a space-separated list\n# $2 is a space-separated list\ncompare() {\n\
    \    local -n arr1=$1\n    local -n arr2=$2\n    local -a result=()\n    for ((i=0;\
    \ i<${#arr1[@]}; i++)); do\n        result+=($((${arr1[$i]} - ${arr2[$i]})))\n\
    \    done\n    echo \"${result[@]}\"\n}\n\ncandidate() {\n    compare \"$@\"\n\
    }\n\nset -e\nrun_test() {\n    [[ $(candidate \"1 2 3 4 5 1\" \"1 2 3 4 2 -2\"\
    ) = \"0 0 0 0 3 3\" ]]\n    [[ $(candidate \"0 0 0 0 0 0\" \"0 0 0 0 0 0\") =\
    \ \"0 0 0 0 0 0\" ]]\n    [[ $(candidate \"1 2 3\" \"-1 -2 -3\") = \"2 4 6\" ]]\n\
    \    [[ $(candidate \"1 2 3 5\" \"-1 2 3 4\") = \"2 0 0 1\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: '/tmp/tmpbtst9w74.sh: line 14: local: `1 2 3 4 5 1'': invalid variable name
    for name reference

    /tmp/tmpbtst9w74.sh: line 15: local: `1 2 3 4 2 -2'': invalid variable name for
    name reference

    '
  stdout: ''
  timestamp: 1660002210
- exit_code: 1
  program: "#!/bin/bash\n# I think we all remember that feeling when the result of\
    \ some long-awaited\n# event is finally known. The feelings and thoughts you have\
    \ at that moment are\n# definitely worth noting down and comparing.\n# Your task\
    \ is to determine if a person correctly guessed the results of a number of matches.\n\
    # You are given two arrays of scores and guesses of equal length, where each index\
    \ shows a match. \n# Return an array of the same length denoting how far off each\
    \ guess was. If they have guessed correctly,\n# the value is 0, and if not, the\
    \ value is the absolute difference between the guess and the score.\n# example:\n\
    #\n# $1 is a space-separated list\n# $2 is a space-separated list\ncompare() {\n\
    \    local -n scores=$1\n    local -n guesses=$2\n    local -a result=()\n   \
    \ for ((i=0; i<${#scores[@]}; i++)); do\n        result+=($((${scores[$i]} - ${guesses[$i]})))\n\
    \    done\n    echo \"${result[@]}\"\n}\n\ncandidate() {\n    compare \"$@\"\n\
    }\n\nset -e\nrun_test() {\n    [[ $(candidate \"1 2 3 4 5 1\" \"1 2 3 4 2 -2\"\
    ) = \"0 0 0 0 3 3\" ]]\n    [[ $(candidate \"0 0 0 0 0 0\" \"0 0 0 0 0 0\") =\
    \ \"0 0 0 0 0 0\" ]]\n    [[ $(candidate \"1 2 3\" \"-1 -2 -3\") = \"2 4 6\" ]]\n\
    \    [[ $(candidate \"1 2 3 5\" \"-1 2 3 4\") = \"2 0 0 1\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: '/tmp/tmpj_hkzzds.sh: line 14: local: `1 2 3 4 5 1'': invalid variable name
    for name reference

    /tmp/tmpj_hkzzds.sh: line 15: local: `1 2 3 4 2 -2'': invalid variable name for
    name reference

    '
  stdout: ''
  timestamp: 1660002210
- exit_code: 1
  program: "#!/bin/bash\n# I think we all remember that feeling when the result of\
    \ some long-awaited\n# event is finally known. The feelings and thoughts you have\
    \ at that moment are\n# definitely worth noting down and comparing.\n# Your task\
    \ is to determine if a person correctly guessed the results of a number of matches.\n\
    # You are given two arrays of scores and guesses of equal length, where each index\
    \ shows a match. \n# Return an array of the same length denoting how far off each\
    \ guess was. If they have guessed correctly,\n# the value is 0, and if not, the\
    \ value is the absolute difference between the guess and the score.\n# example:\n\
    #\n# $1 is a space-separated list\n# $2 is a space-separated list\ncompare() {\n\
    \    local -n scores=$1\n    local -n guesses=$2\n    local -a result=()\n   \
    \ for ((i=0; i<${#scores[@]}; i++)); do\n        result[i]=$((${scores[i]}-${guesses[i]}))\n\
    \        if [[ ${result[i]} -lt 0 ]]; then\n            result[i]=$((-${result[i]}))\n\
    \        fi\n    done\n    echo ${result[@]}\n}\n\ncandidate() {\n    compare\
    \ \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"1 2 3 4 5 1\" \"1 2\
    \ 3 4 2 -2\") = \"0 0 0 0 3 3\" ]]\n    [[ $(candidate \"0 0 0 0 0 0\" \"0 0 0\
    \ 0 0 0\") = \"0 0 0 0 0 0\" ]]\n    [[ $(candidate \"1 2 3\" \"-1 -2 -3\") =\
    \ \"2 4 6\" ]]\n    [[ $(candidate \"1 2 3 5\" \"-1 2 3 4\") = \"2 0 0 1\" ]]\n\
    }\n\nrun_test"
  status: Exception
  stderr: '/tmp/tmpjm9y46gd.sh: line 14: local: `1 2 3 4 5 1'': invalid variable name
    for name reference

    /tmp/tmpjm9y46gd.sh: line 15: local: `1 2 3 4 2 -2'': invalid variable name for
    name reference

    '
  stdout: ''
  timestamp: 1660002210
- exit_code: 1
  program: "#!/bin/bash\n# I think we all remember that feeling when the result of\
    \ some long-awaited\n# event is finally known. The feelings and thoughts you have\
    \ at that moment are\n# definitely worth noting down and comparing.\n# Your task\
    \ is to determine if a person correctly guessed the results of a number of matches.\n\
    # You are given two arrays of scores and guesses of equal length, where each index\
    \ shows a match. \n# Return an array of the same length denoting how far off each\
    \ guess was. If they have guessed correctly,\n# the value is 0, and if not, the\
    \ value is the absolute difference between the guess and the score.\n# example:\n\
    #\n# $1 is a space-separated list\n# $2 is a space-separated list\ncompare() {\n\
    \  local -n scores=$1\n  local -n guesses=$2\n  local -a result=()\n  for i in\
    \ ${!scores[@]}; do\n    result+=($((${scores[$i]} - ${guesses[$i]})))\n  done\n\
    \  echo \"${result[@]}\"\n}\n\ncandidate() {\n    compare \"$@\"\n}\n\nset -e\n\
    run_test() {\n    [[ $(candidate \"1 2 3 4 5 1\" \"1 2 3 4 2 -2\") = \"0 0 0 0\
    \ 3 3\" ]]\n    [[ $(candidate \"0 0 0 0 0 0\" \"0 0 0 0 0 0\") = \"0 0 0 0 0\
    \ 0\" ]]\n    [[ $(candidate \"1 2 3\" \"-1 -2 -3\") = \"2 4 6\" ]]\n    [[ $(candidate\
    \ \"1 2 3 5\" \"-1 2 3 4\") = \"2 0 0 1\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: '/tmp/tmpf4udz535.sh: line 14: local: `1 2 3 4 5 1'': invalid variable name
    for name reference

    /tmp/tmpf4udz535.sh: line 15: local: `1 2 3 4 2 -2'': invalid variable name for
    name reference

    '
  stdout: ''
  timestamp: 1660002210
- exit_code: 1
  program: "#!/bin/bash\n# I think we all remember that feeling when the result of\
    \ some long-awaited\n# event is finally known. The feelings and thoughts you have\
    \ at that moment are\n# definitely worth noting down and comparing.\n# Your task\
    \ is to determine if a person correctly guessed the results of a number of matches.\n\
    # You are given two arrays of scores and guesses of equal length, where each index\
    \ shows a match. \n# Return an array of the same length denoting how far off each\
    \ guess was. If they have guessed correctly,\n# the value is 0, and if not, the\
    \ value is the absolute difference between the guess and the score.\n# example:\n\
    #\n# $1 is a space-separated list\n# $2 is a space-separated list\ncompare() {\n\
    \  local -n scores=$1\n  local -n guesses=$2\n  local result=()\n  for ((i=0;\
    \ i<${#scores[@]}; i++)); do\n    result+=($((${scores[$i]} - ${guesses[$i]})))\n\
    \  done\n  echo \"${result[@]}\"\n}\n\ncandidate() {\n    compare \"$@\"\n}\n\n\
    set -e\nrun_test() {\n    [[ $(candidate \"1 2 3 4 5 1\" \"1 2 3 4 2 -2\") = \"\
    0 0 0 0 3 3\" ]]\n    [[ $(candidate \"0 0 0 0 0 0\" \"0 0 0 0 0 0\") = \"0 0\
    \ 0 0 0 0\" ]]\n    [[ $(candidate \"1 2 3\" \"-1 -2 -3\") = \"2 4 6\" ]]\n  \
    \  [[ $(candidate \"1 2 3 5\" \"-1 2 3 4\") = \"2 0 0 1\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: '/tmp/tmpauqci48c.sh: line 14: local: `1 2 3 4 5 1'': invalid variable name
    for name reference

    /tmp/tmpauqci48c.sh: line 15: local: `1 2 3 4 2 -2'': invalid variable name for
    name reference

    '
  stdout: ''
  timestamp: 1660002210
- exit_code: 1
  program: "#!/bin/bash\n# I think we all remember that feeling when the result of\
    \ some long-awaited\n# event is finally known. The feelings and thoughts you have\
    \ at that moment are\n# definitely worth noting down and comparing.\n# Your task\
    \ is to determine if a person correctly guessed the results of a number of matches.\n\
    # You are given two arrays of scores and guesses of equal length, where each index\
    \ shows a match. \n# Return an array of the same length denoting how far off each\
    \ guess was. If they have guessed correctly,\n# the value is 0, and if not, the\
    \ value is the absolute difference between the guess and the score.\n# example:\n\
    #\n# $1 is a space-separated list\n# $2 is a space-separated list\ncompare() {\n\
    \    local -n scores=$1\n    local -n guesses=$2\n    local -a result=()\n   \
    \ for ((i=0; i<${#scores[@]}; i++)); do\n        if [[ ${scores[$i]} -eq ${guesses[$i]}\
    \ ]]; then\n            result+=(0)\n        else\n            result+=($(( ${scores[$i]}\
    \ - ${guesses[$i]} )))\n        fi\n    done\n    echo \"${result[@]}\"\n}\n\n\
    candidate() {\n    compare \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate\
    \ \"1 2 3 4 5 1\" \"1 2 3 4 2 -2\") = \"0 0 0 0 3 3\" ]]\n    [[ $(candidate \"\
    0 0 0 0 0 0\" \"0 0 0 0 0 0\") = \"0 0 0 0 0 0\" ]]\n    [[ $(candidate \"1 2\
    \ 3\" \"-1 -2 -3\") = \"2 4 6\" ]]\n    [[ $(candidate \"1 2 3 5\" \"-1 2 3 4\"\
    ) = \"2 0 0 1\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: '/tmp/tmpafs_1xxy.sh: line 14: local: `1 2 3 4 5 1'': invalid variable name
    for name reference

    /tmp/tmpafs_1xxy.sh: line 15: local: `1 2 3 4 2 -2'': invalid variable name for
    name reference

    '
  stdout: ''
  timestamp: 1660002210
- exit_code: 1
  program: "#!/bin/bash\n# I think we all remember that feeling when the result of\
    \ some long-awaited\n# event is finally known. The feelings and thoughts you have\
    \ at that moment are\n# definitely worth noting down and comparing.\n# Your task\
    \ is to determine if a person correctly guessed the results of a number of matches.\n\
    # You are given two arrays of scores and guesses of equal length, where each index\
    \ shows a match. \n# Return an array of the same length denoting how far off each\
    \ guess was. If they have guessed correctly,\n# the value is 0, and if not, the\
    \ value is the absolute difference between the guess and the score.\n# example:\n\
    #\n# $1 is a space-separated list\n# $2 is a space-separated list\ncompare() {\n\
    \    local -n scores=$1\n    local -n guesses=$2\n    local -a result=()\n   \
    \ for ((i=0; i<${#scores[@]}; i++)); do\n        if [[ ${scores[$i]} -eq ${guesses[$i]}\
    \ ]]; then\n            result+=(0)\n        else\n            result+=($(( ${scores[$i]}\
    \ - ${guesses[$i]} )))\n        fi\n    done\n    echo \"${result[@]}\"\n}\n\n\
    candidate() {\n    compare \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate\
    \ \"1 2 3 4 5 1\" \"1 2 3 4 2 -2\") = \"0 0 0 0 3 3\" ]]\n    [[ $(candidate \"\
    0 0 0 0 0 0\" \"0 0 0 0 0 0\") = \"0 0 0 0 0 0\" ]]\n    [[ $(candidate \"1 2\
    \ 3\" \"-1 -2 -3\") = \"2 4 6\" ]]\n    [[ $(candidate \"1 2 3 5\" \"-1 2 3 4\"\
    ) = \"2 0 0 1\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: '/tmp/tmpafs_1xxy.sh: line 14: local: `1 2 3 4 5 1'': invalid variable name
    for name reference

    /tmp/tmpafs_1xxy.sh: line 15: local: `1 2 3 4 2 -2'': invalid variable name for
    name reference

    '
  stdout: ''
  timestamp: 1660002210
- exit_code: 0
  program: "#!/bin/bash\n# I think we all remember that feeling when the result of\
    \ some long-awaited\n# event is finally known. The feelings and thoughts you have\
    \ at that moment are\n# definitely worth noting down and comparing.\n# Your task\
    \ is to determine if a person correctly guessed the results of a number of matches.\n\
    # You are given two arrays of scores and guesses of equal length, where each index\
    \ shows a match. \n# Return an array of the same length denoting how far off each\
    \ guess was. If they have guessed correctly,\n# the value is 0, and if not, the\
    \ value is the absolute difference between the guess and the score.\n# example:\n\
    #\n# $1 is a space-separated list\n# $2 is a space-separated list\ncompare() {\n\
    \    local -a scores=($1)\n    local -a guesses=($2)\n    local -a result=()\n\
    \    for (( i=0; i<${#scores[@]}; i++ )); do\n        result+=($((${scores[$i]}-${guesses[$i]})))\n\
    \    done\n    echo ${result[@]}\n}\n\ncandidate() {\n    compare \"$@\"\n}\n\n\
    set -e\nrun_test() {\n    [[ $(candidate \"1 2 3 4 5 1\" \"1 2 3 4 2 -2\") = \"\
    0 0 0 0 3 3\" ]]\n    [[ $(candidate \"0 0 0 0 0 0\" \"0 0 0 0 0 0\") = \"0 0\
    \ 0 0 0 0\" ]]\n    [[ $(candidate \"1 2 3\" \"-1 -2 -3\") = \"2 4 6\" ]]\n  \
    \  [[ $(candidate \"1 2 3 5\" \"-1 2 3 4\") = \"2 0 0 1\" ]]\n}\n\nrun_test"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660002210
- exit_code: 0
  program: "#!/bin/bash\n# I think we all remember that feeling when the result of\
    \ some long-awaited\n# event is finally known. The feelings and thoughts you have\
    \ at that moment are\n# definitely worth noting down and comparing.\n# Your task\
    \ is to determine if a person correctly guessed the results of a number of matches.\n\
    # You are given two arrays of scores and guesses of equal length, where each index\
    \ shows a match. \n# Return an array of the same length denoting how far off each\
    \ guess was. If they have guessed correctly,\n# the value is 0, and if not, the\
    \ value is the absolute difference between the guess and the score.\n# example:\n\
    #\n# $1 is a space-separated list\n# $2 is a space-separated list\ncompare() {\n\
    \  local -a scores=($1)\n  local -a guesses=($2)\n  local -a result=()\n  for\
    \ ((i=0; i<${#scores[@]}; i++)); do\n    if [[ ${scores[$i]} -eq ${guesses[$i]}\
    \ ]]; then\n      result[$i]=0\n    else\n      result[$i]=$(( ${scores[$i]} -\
    \ ${guesses[$i]} ))\n    fi\n  done\n  echo ${result[@]}\n}\n\ncandidate() {\n\
    \    compare \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"1 2 3 4 5\
    \ 1\" \"1 2 3 4 2 -2\") = \"0 0 0 0 3 3\" ]]\n    [[ $(candidate \"0 0 0 0 0 0\"\
    \ \"0 0 0 0 0 0\") = \"0 0 0 0 0 0\" ]]\n    [[ $(candidate \"1 2 3\" \"-1 -2\
    \ -3\") = \"2 4 6\" ]]\n    [[ $(candidate \"1 2 3 5\" \"-1 2 3 4\") = \"2 0 0\
    \ 1\" ]]\n}\n\nrun_test"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660002210
- exit_code: 1
  program: "#!/bin/bash\n# I think we all remember that feeling when the result of\
    \ some long-awaited\n# event is finally known. The feelings and thoughts you have\
    \ at that moment are\n# definitely worth noting down and comparing.\n# Your task\
    \ is to determine if a person correctly guessed the results of a number of matches.\n\
    # You are given two arrays of scores and guesses of equal length, where each index\
    \ shows a match. \n# Return an array of the same length denoting how far off each\
    \ guess was. If they have guessed correctly,\n# the value is 0, and if not, the\
    \ value is the absolute difference between the guess and the score.\n# example:\n\
    #\n# $1 is a space-separated list\n# $2 is a space-separated list\ncompare() {\n\
    \    local -n scores=$1\n    local -n guesses=$2\n    local -a result\n    for\
    \ ((i=0; i<${#scores[@]}; i++)); do\n        result[i]=$((${scores[i]} - ${guesses[i]}))\n\
    \        if [[ ${result[i]} -lt 0 ]]; then\n            result[i]=$((-${result[i]}))\n\
    \        fi\n    done\n    echo ${result[@]}\n}\n\ncandidate() {\n    compare\
    \ \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"1 2 3 4 5 1\" \"1 2\
    \ 3 4 2 -2\") = \"0 0 0 0 3 3\" ]]\n    [[ $(candidate \"0 0 0 0 0 0\" \"0 0 0\
    \ 0 0 0\") = \"0 0 0 0 0 0\" ]]\n    [[ $(candidate \"1 2 3\" \"-1 -2 -3\") =\
    \ \"2 4 6\" ]]\n    [[ $(candidate \"1 2 3 5\" \"-1 2 3 4\") = \"2 0 0 1\" ]]\n\
    }\n\nrun_test"
  status: Exception
  stderr: '/tmp/tmpjg592sey.sh: line 14: local: `1 2 3 4 5 1'': invalid variable name
    for name reference

    /tmp/tmpjg592sey.sh: line 15: local: `1 2 3 4 2 -2'': invalid variable name for
    name reference

    '
  stdout: ''
  timestamp: 1660002210
- exit_code: 1
  program: "#!/bin/bash\n# I think we all remember that feeling when the result of\
    \ some long-awaited\n# event is finally known. The feelings and thoughts you have\
    \ at that moment are\n# definitely worth noting down and comparing.\n# Your task\
    \ is to determine if a person correctly guessed the results of a number of matches.\n\
    # You are given two arrays of scores and guesses of equal length, where each index\
    \ shows a match. \n# Return an array of the same length denoting how far off each\
    \ guess was. If they have guessed correctly,\n# the value is 0, and if not, the\
    \ value is the absolute difference between the guess and the score.\n# example:\n\
    #\n# $1 is a space-separated list\n# $2 is a space-separated list\ncompare() {\n\
    \    local -n scores=$1\n    local -n guesses=$2\n    local result=()\n    for\
    \ ((i=0; i<${#scores[@]}; i++)); do\n        if [[ ${scores[$i]} -eq ${guesses[$i]}\
    \ ]]; then\n            result+=(0)\n        else\n            result+=($(( ${scores[$i]}\
    \ - ${guesses[$i]} )))\n        fi\n    done\n    echo \"${result[@]}\"\n}\n\n\
    candidate() {\n    compare \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate\
    \ \"1 2 3 4 5 1\" \"1 2 3 4 2 -2\") = \"0 0 0 0 3 3\" ]]\n    [[ $(candidate \"\
    0 0 0 0 0 0\" \"0 0 0 0 0 0\") = \"0 0 0 0 0 0\" ]]\n    [[ $(candidate \"1 2\
    \ 3\" \"-1 -2 -3\") = \"2 4 6\" ]]\n    [[ $(candidate \"1 2 3 5\" \"-1 2 3 4\"\
    ) = \"2 0 0 1\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: '/tmp/tmp9mohepqf.sh: line 14: local: `1 2 3 4 5 1'': invalid variable name
    for name reference

    /tmp/tmp9mohepqf.sh: line 15: local: `1 2 3 4 2 -2'': invalid variable name for
    name reference

    '
  stdout: ''
  timestamp: 1660002210
- exit_code: 0
  program: "#!/bin/bash\n# I think we all remember that feeling when the result of\
    \ some long-awaited\n# event is finally known. The feelings and thoughts you have\
    \ at that moment are\n# definitely worth noting down and comparing.\n# Your task\
    \ is to determine if a person correctly guessed the results of a number of matches.\n\
    # You are given two arrays of scores and guesses of equal length, where each index\
    \ shows a match. \n# Return an array of the same length denoting how far off each\
    \ guess was. If they have guessed correctly,\n# the value is 0, and if not, the\
    \ value is the absolute difference between the guess and the score.\n# example:\n\
    #\n# $1 is a space-separated list\n# $2 is a space-separated list\ncompare() {\n\
    \    local -a scores=($1)\n    local -a guesses=($2)\n    local -a result=()\n\
    \    for ((i=0; i<${#scores[@]}; i++)); do\n        if [[ ${scores[$i]} -eq ${guesses[$i]}\
    \ ]]; then\n            result[$i]=0\n        else\n            result[$i]=$((\
    \ ${scores[$i]} - ${guesses[$i]} ))\n        fi\n    done\n    echo ${result[@]}\n\
    }\n\ncandidate() {\n    compare \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate\
    \ \"1 2 3 4 5 1\" \"1 2 3 4 2 -2\") = \"0 0 0 0 3 3\" ]]\n    [[ $(candidate \"\
    0 0 0 0 0 0\" \"0 0 0 0 0 0\") = \"0 0 0 0 0 0\" ]]\n    [[ $(candidate \"1 2\
    \ 3\" \"-1 -2 -3\") = \"2 4 6\" ]]\n    [[ $(candidate \"1 2 3 5\" \"-1 2 3 4\"\
    ) = \"2 0 0 1\" ]]\n}\n\nrun_test"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660002209
- exit_code: 1
  program: "#!/bin/bash\n# I think we all remember that feeling when the result of\
    \ some long-awaited\n# event is finally known. The feelings and thoughts you have\
    \ at that moment are\n# definitely worth noting down and comparing.\n# Your task\
    \ is to determine if a person correctly guessed the results of a number of matches.\n\
    # You are given two arrays of scores and guesses of equal length, where each index\
    \ shows a match. \n# Return an array of the same length denoting how far off each\
    \ guess was. If they have guessed correctly,\n# the value is 0, and if not, the\
    \ value is the absolute difference between the guess and the score.\n# example:\n\
    #\n# $1 is a space-separated list\n# $2 is a space-separated list\ncompare() {\n\
    \    local -n scores=$1\n    local -n guesses=$2\n    local -a result=()\n   \
    \ for ((i=0; i<${#scores[@]}; i++)); do\n        if [[ ${scores[$i]} -eq ${guesses[$i]}\
    \ ]]; then\n            result+=(0)\n        else\n            result+=($(( ${scores[$i]}\
    \ - ${guesses[$i]} )))\n        fi\n    done\n    echo \"${result[@]}\"\n}\n\n\
    candidate() {\n    compare \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate\
    \ \"1 2 3 4 5 1\" \"1 2 3 4 2 -2\") = \"0 0 0 0 3 3\" ]]\n    [[ $(candidate \"\
    0 0 0 0 0 0\" \"0 0 0 0 0 0\") = \"0 0 0 0 0 0\" ]]\n    [[ $(candidate \"1 2\
    \ 3\" \"-1 -2 -3\") = \"2 4 6\" ]]\n    [[ $(candidate \"1 2 3 5\" \"-1 2 3 4\"\
    ) = \"2 0 0 1\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: '/tmp/tmpafs_1xxy.sh: line 14: local: `1 2 3 4 5 1'': invalid variable name
    for name reference

    /tmp/tmpafs_1xxy.sh: line 15: local: `1 2 3 4 2 -2'': invalid variable name for
    name reference

    '
  stdout: ''
  timestamp: 1660002210
- exit_code: 1
  program: "#!/bin/bash\n# I think we all remember that feeling when the result of\
    \ some long-awaited\n# event is finally known. The feelings and thoughts you have\
    \ at that moment are\n# definitely worth noting down and comparing.\n# Your task\
    \ is to determine if a person correctly guessed the results of a number of matches.\n\
    # You are given two arrays of scores and guesses of equal length, where each index\
    \ shows a match. \n# Return an array of the same length denoting how far off each\
    \ guess was. If they have guessed correctly,\n# the value is 0, and if not, the\
    \ value is the absolute difference between the guess and the score.\n# example:\n\
    #\n# $1 is a space-separated list\n# $2 is a space-separated list\ncompare() {\n\
    \    local -n scores=$1\n    local -n guesses=$2\n    local result=()\n    for\
    \ ((i=0; i<${#scores[@]}; i++)); do\n        result+=($((${scores[$i]} - ${guesses[$i]})))\n\
    \    done\n    echo \"${result[@]}\"\n}\n\ncandidate() {\n    compare \"$@\"\n\
    }\n\nset -e\nrun_test() {\n    [[ $(candidate \"1 2 3 4 5 1\" \"1 2 3 4 2 -2\"\
    ) = \"0 0 0 0 3 3\" ]]\n    [[ $(candidate \"0 0 0 0 0 0\" \"0 0 0 0 0 0\") =\
    \ \"0 0 0 0 0 0\" ]]\n    [[ $(candidate \"1 2 3\" \"-1 -2 -3\") = \"2 4 6\" ]]\n\
    \    [[ $(candidate \"1 2 3 5\" \"-1 2 3 4\") = \"2 0 0 1\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: '/tmp/tmpizc6npkr.sh: line 14: local: `1 2 3 4 5 1'': invalid variable name
    for name reference

    /tmp/tmpizc6npkr.sh: line 15: local: `1 2 3 4 2 -2'': invalid variable name for
    name reference

    '
  stdout: ''
  timestamp: 1660002210
- exit_code: 1
  program: "#!/bin/bash\n# I think we all remember that feeling when the result of\
    \ some long-awaited\n# event is finally known. The feelings and thoughts you have\
    \ at that moment are\n# definitely worth noting down and comparing.\n# Your task\
    \ is to determine if a person correctly guessed the results of a number of matches.\n\
    # You are given two arrays of scores and guesses of equal length, where each index\
    \ shows a match. \n# Return an array of the same length denoting how far off each\
    \ guess was. If they have guessed correctly,\n# the value is 0, and if not, the\
    \ value is the absolute difference between the guess and the score.\n# example:\n\
    #\n# $1 is a space-separated list\n# $2 is a space-separated list\ncompare() {\n\
    \    local -n scores=$1\n    local -n guesses=$2\n    local -a result=()\n   \
    \ for i in ${!scores[@]}; do\n        if [[ ${scores[$i]} -eq ${guesses[$i]} ]];\
    \ then\n            result+=(0)\n        else\n            result+=($(( ${scores[$i]}\
    \ - ${guesses[$i]} )))\n        fi\n    done\n    echo \"${result[@]}\"\n}\n\n\
    candidate() {\n    compare \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate\
    \ \"1 2 3 4 5 1\" \"1 2 3 4 2 -2\") = \"0 0 0 0 3 3\" ]]\n    [[ $(candidate \"\
    0 0 0 0 0 0\" \"0 0 0 0 0 0\") = \"0 0 0 0 0 0\" ]]\n    [[ $(candidate \"1 2\
    \ 3\" \"-1 -2 -3\") = \"2 4 6\" ]]\n    [[ $(candidate \"1 2 3 5\" \"-1 2 3 4\"\
    ) = \"2 0 0 1\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: '/tmp/tmpo0caacl6.sh: line 14: local: `1 2 3 4 5 1'': invalid variable name
    for name reference

    /tmp/tmpo0caacl6.sh: line 15: local: `1 2 3 4 2 -2'': invalid variable name for
    name reference

    '
  stdout: ''
  timestamp: 1660002210
- exit_code: 1
  program: "#!/bin/bash\n# I think we all remember that feeling when the result of\
    \ some long-awaited\n# event is finally known. The feelings and thoughts you have\
    \ at that moment are\n# definitely worth noting down and comparing.\n# Your task\
    \ is to determine if a person correctly guessed the results of a number of matches.\n\
    # You are given two arrays of scores and guesses of equal length, where each index\
    \ shows a match. \n# Return an array of the same length denoting how far off each\
    \ guess was. If they have guessed correctly,\n# the value is 0, and if not, the\
    \ value is the absolute difference between the guess and the score.\n# example:\n\
    #\n# $1 is a space-separated list\n# $2 is a space-separated list\ncompare() {\n\
    \    local -n scores=$1\n    local -n guesses=$2\n    local -a result=()\n   \
    \ for ((i=0; i<${#scores[@]}; i++)); do\n        result+=($((${scores[$i]}-${guesses[$i]})))\n\
    \    done\n    echo \"${result[@]}\"\n}\n\ncandidate() {\n    compare \"$@\"\n\
    }\n\nset -e\nrun_test() {\n    [[ $(candidate \"1 2 3 4 5 1\" \"1 2 3 4 2 -2\"\
    ) = \"0 0 0 0 3 3\" ]]\n    [[ $(candidate \"0 0 0 0 0 0\" \"0 0 0 0 0 0\") =\
    \ \"0 0 0 0 0 0\" ]]\n    [[ $(candidate \"1 2 3\" \"-1 -2 -3\") = \"2 4 6\" ]]\n\
    \    [[ $(candidate \"1 2 3 5\" \"-1 2 3 4\") = \"2 0 0 1\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: '/tmp/tmp8w3oy0hv.sh: line 14: local: `1 2 3 4 5 1'': invalid variable name
    for name reference

    /tmp/tmp8w3oy0hv.sh: line 15: local: `1 2 3 4 2 -2'': invalid variable name for
    name reference

    '
  stdout: ''
  timestamp: 1660002210
- exit_code: 1
  program: "#!/bin/bash\n# I think we all remember that feeling when the result of\
    \ some long-awaited\n# event is finally known. The feelings and thoughts you have\
    \ at that moment are\n# definitely worth noting down and comparing.\n# Your task\
    \ is to determine if a person correctly guessed the results of a number of matches.\n\
    # You are given two arrays of scores and guesses of equal length, where each index\
    \ shows a match. \n# Return an array of the same length denoting how far off each\
    \ guess was. If they have guessed correctly,\n# the value is 0, and if not, the\
    \ value is the absolute difference between the guess and the score.\n# example:\n\
    #\n# $1 is a space-separated list\n# $2 is a space-separated list\ncompare() {\n\
    \    local -n scores=$1\n    local -n guesses=$2\n    local -a result=()\n   \
    \ for ((i=0; i<${#scores[@]}; i++)); do\n        result+=($((${scores[$i]} - ${guesses[$i]})))\n\
    \    done\n    echo \"${result[@]}\"\n}\n\ncandidate() {\n    compare \"$@\"\n\
    }\n\nset -e\nrun_test() {\n    [[ $(candidate \"1 2 3 4 5 1\" \"1 2 3 4 2 -2\"\
    ) = \"0 0 0 0 3 3\" ]]\n    [[ $(candidate \"0 0 0 0 0 0\" \"0 0 0 0 0 0\") =\
    \ \"0 0 0 0 0 0\" ]]\n    [[ $(candidate \"1 2 3\" \"-1 -2 -3\") = \"2 4 6\" ]]\n\
    \    [[ $(candidate \"1 2 3 5\" \"-1 2 3 4\") = \"2 0 0 1\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: '/tmp/tmpj_hkzzds.sh: line 14: local: `1 2 3 4 5 1'': invalid variable name
    for name reference

    /tmp/tmpj_hkzzds.sh: line 15: local: `1 2 3 4 2 -2'': invalid variable name for
    name reference

    '
  stdout: ''
  timestamp: 1660002210
- exit_code: 0
  program: "#!/bin/bash\n# I think we all remember that feeling when the result of\
    \ some long-awaited\n# event is finally known. The feelings and thoughts you have\
    \ at that moment are\n# definitely worth noting down and comparing.\n# Your task\
    \ is to determine if a person correctly guessed the results of a number of matches.\n\
    # You are given two arrays of scores and guesses of equal length, where each index\
    \ shows a match. \n# Return an array of the same length denoting how far off each\
    \ guess was. If they have guessed correctly,\n# the value is 0, and if not, the\
    \ value is the absolute difference between the guess and the score.\n# example:\n\
    #\n# $1 is a space-separated list\n# $2 is a space-separated list\ncompare() {\n\
    \  local score=($1)\n  local guess=($2)\n  local result=()\n  for ((i=0; i<${#score[@]};\
    \ i++)); do\n    result[$i]=$((${score[$i]}-${guess[$i]}))\n    if [ ${result[$i]}\
    \ -lt 0 ]; then\n      result[$i]=$((-${result[$i]}))\n    fi\n  done\n  echo\
    \ ${result[@]}\n}\n\ncandidate() {\n    compare \"$@\"\n}\n\nset -e\nrun_test()\
    \ {\n    [[ $(candidate \"1 2 3 4 5 1\" \"1 2 3 4 2 -2\") = \"0 0 0 0 3 3\" ]]\n\
    \    [[ $(candidate \"0 0 0 0 0 0\" \"0 0 0 0 0 0\") = \"0 0 0 0 0 0\" ]]\n  \
    \  [[ $(candidate \"1 2 3\" \"-1 -2 -3\") = \"2 4 6\" ]]\n    [[ $(candidate \"\
    1 2 3 5\" \"-1 2 3 4\") = \"2 0 0 1\" ]]\n}\n\nrun_test"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660002210
- exit_code: 0
  program: "#!/bin/bash\n# I think we all remember that feeling when the result of\
    \ some long-awaited\n# event is finally known. The feelings and thoughts you have\
    \ at that moment are\n# definitely worth noting down and comparing.\n# Your task\
    \ is to determine if a person correctly guessed the results of a number of matches.\n\
    # You are given two arrays of scores and guesses of equal length, where each index\
    \ shows a match. \n# Return an array of the same length denoting how far off each\
    \ guess was. If they have guessed correctly,\n# the value is 0, and if not, the\
    \ value is the absolute difference between the guess and the score.\n# example:\n\
    #\n# $1 is a space-separated list\n# $2 is a space-separated list\ncompare() {\n\
    \    local scores=($1)\n    local guesses=($2)\n    local result=()\n    for ((i=0;\
    \ i<${#scores[@]}; i++)); do\n        result[$i]=$((${scores[$i]}-${guesses[$i]}))\n\
    \        if [[ ${result[$i]} -lt 0 ]]; then\n            result[$i]=$((-${result[$i]}))\n\
    \        fi\n    done\n    echo ${result[@]}\n}\n\ncandidate() {\n    compare\
    \ \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"1 2 3 4 5 1\" \"1 2\
    \ 3 4 2 -2\") = \"0 0 0 0 3 3\" ]]\n    [[ $(candidate \"0 0 0 0 0 0\" \"0 0 0\
    \ 0 0 0\") = \"0 0 0 0 0 0\" ]]\n    [[ $(candidate \"1 2 3\" \"-1 -2 -3\") =\
    \ \"2 4 6\" ]]\n    [[ $(candidate \"1 2 3 5\" \"-1 2 3 4\") = \"2 0 0 1\" ]]\n\
    }\n\nrun_test"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660002210
- exit_code: 1
  program: "#!/bin/bash\n# I think we all remember that feeling when the result of\
    \ some long-awaited\n# event is finally known. The feelings and thoughts you have\
    \ at that moment are\n# definitely worth noting down and comparing.\n# Your task\
    \ is to determine if a person correctly guessed the results of a number of matches.\n\
    # You are given two arrays of scores and guesses of equal length, where each index\
    \ shows a match. \n# Return an array of the same length denoting how far off each\
    \ guess was. If they have guessed correctly,\n# the value is 0, and if not, the\
    \ value is the absolute difference between the guess and the score.\n# example:\n\
    #\n# $1 is a space-separated list\n# $2 is a space-separated list\ncompare() {\n\
    \    local -n scores=$1\n    local -n guesses=$2\n    local result=()\n    for\
    \ ((i=0; i<${#scores[@]}; i++)); do\n        local diff=$((scores[i] - guesses[i]))\n\
    \        if ((diff < 0)); then\n            diff=$((-diff))\n        fi\n    \
    \    result+=($diff)\n    done\n    echo \"${result[@]}\"\n}\n\ncandidate() {\n\
    \    compare \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"1 2 3 4 5\
    \ 1\" \"1 2 3 4 2 -2\") = \"0 0 0 0 3 3\" ]]\n    [[ $(candidate \"0 0 0 0 0 0\"\
    \ \"0 0 0 0 0 0\") = \"0 0 0 0 0 0\" ]]\n    [[ $(candidate \"1 2 3\" \"-1 -2\
    \ -3\") = \"2 4 6\" ]]\n    [[ $(candidate \"1 2 3 5\" \"-1 2 3 4\") = \"2 0 0\
    \ 1\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: '/tmp/tmph6djhwvh.sh: line 14: local: `1 2 3 4 5 1'': invalid variable name
    for name reference

    /tmp/tmph6djhwvh.sh: line 15: local: `1 2 3 4 2 -2'': invalid variable name for
    name reference

    '
  stdout: ''
  timestamp: 1660002210
- exit_code: 1
  program: "#!/bin/bash\n# I think we all remember that feeling when the result of\
    \ some long-awaited\n# event is finally known. The feelings and thoughts you have\
    \ at that moment are\n# definitely worth noting down and comparing.\n# Your task\
    \ is to determine if a person correctly guessed the results of a number of matches.\n\
    # You are given two arrays of scores and guesses of equal length, where each index\
    \ shows a match. \n# Return an array of the same length denoting how far off each\
    \ guess was. If they have guessed correctly,\n# the value is 0, and if not, the\
    \ value is the absolute difference between the guess and the score.\n# example:\n\
    #\n# $1 is a space-separated list\n# $2 is a space-separated list\ncompare() {\n\
    \    local -n scores=$1\n    local -n guesses=$2\n    local -a result=()\n   \
    \ for ((i=0; i<${#scores[@]}; i++)); do\n        result+=($((${scores[$i]} - ${guesses[$i]})))\n\
    \    done\n    echo \"${result[@]}\"\n}\n\ncandidate() {\n    compare \"$@\"\n\
    }\n\nset -e\nrun_test() {\n    [[ $(candidate \"1 2 3 4 5 1\" \"1 2 3 4 2 -2\"\
    ) = \"0 0 0 0 3 3\" ]]\n    [[ $(candidate \"0 0 0 0 0 0\" \"0 0 0 0 0 0\") =\
    \ \"0 0 0 0 0 0\" ]]\n    [[ $(candidate \"1 2 3\" \"-1 -2 -3\") = \"2 4 6\" ]]\n\
    \    [[ $(candidate \"1 2 3 5\" \"-1 2 3 4\") = \"2 0 0 1\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: '/tmp/tmpj_hkzzds.sh: line 14: local: `1 2 3 4 5 1'': invalid variable name
    for name reference

    /tmp/tmpj_hkzzds.sh: line 15: local: `1 2 3 4 2 -2'': invalid variable name for
    name reference

    '
  stdout: ''
  timestamp: 1660002210
- exit_code: 1
  program: "#!/bin/bash\n# I think we all remember that feeling when the result of\
    \ some long-awaited\n# event is finally known. The feelings and thoughts you have\
    \ at that moment are\n# definitely worth noting down and comparing.\n# Your task\
    \ is to determine if a person correctly guessed the results of a number of matches.\n\
    # You are given two arrays of scores and guesses of equal length, where each index\
    \ shows a match. \n# Return an array of the same length denoting how far off each\
    \ guess was. If they have guessed correctly,\n# the value is 0, and if not, the\
    \ value is the absolute difference between the guess and the score.\n# example:\n\
    #\n# $1 is a space-separated list\n# $2 is a space-separated list\ncompare() {\n\
    \    local -n scores=$1\n    local -n guesses=$2\n    local -a result=()\n   \
    \ for ((i=0; i<${#scores[@]}; i++)); do\n        if [[ ${scores[$i]} -eq ${guesses[$i]}\
    \ ]]; then\n            result+=(0)\n        else\n            result+=($(( ${scores[$i]}\
    \ - ${guesses[$i]} )))\n        fi\n    done\n    echo \"${result[@]}\"\n}\n\n\
    candidate() {\n    compare \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate\
    \ \"1 2 3 4 5 1\" \"1 2 3 4 2 -2\") = \"0 0 0 0 3 3\" ]]\n    [[ $(candidate \"\
    0 0 0 0 0 0\" \"0 0 0 0 0 0\") = \"0 0 0 0 0 0\" ]]\n    [[ $(candidate \"1 2\
    \ 3\" \"-1 -2 -3\") = \"2 4 6\" ]]\n    [[ $(candidate \"1 2 3 5\" \"-1 2 3 4\"\
    ) = \"2 0 0 1\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: '/tmp/tmpafs_1xxy.sh: line 14: local: `1 2 3 4 5 1'': invalid variable name
    for name reference

    /tmp/tmpafs_1xxy.sh: line 15: local: `1 2 3 4 2 -2'': invalid variable name for
    name reference

    '
  stdout: ''
  timestamp: 1660002210
- exit_code: 0
  program: "#!/bin/bash\n# I think we all remember that feeling when the result of\
    \ some long-awaited\n# event is finally known. The feelings and thoughts you have\
    \ at that moment are\n# definitely worth noting down and comparing.\n# Your task\
    \ is to determine if a person correctly guessed the results of a number of matches.\n\
    # You are given two arrays of scores and guesses of equal length, where each index\
    \ shows a match. \n# Return an array of the same length denoting how far off each\
    \ guess was. If they have guessed correctly,\n# the value is 0, and if not, the\
    \ value is the absolute difference between the guess and the score.\n# example:\n\
    #\n# $1 is a space-separated list\n# $2 is a space-separated list\ncompare() {\n\
    \    local -a scores=($1)\n    local -a guesses=($2)\n    local -a result=()\n\
    \    for ((i=0; i<${#scores[@]}; i++)); do\n        if [[ ${scores[$i]} -eq ${guesses[$i]}\
    \ ]]; then\n            result+=(0)\n        else\n            result+=($((${scores[$i]}\
    \ - ${guesses[$i]})))\n        fi\n    done\n    echo ${result[@]}\n}\n\ncandidate()\
    \ {\n    compare \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"1 2 3\
    \ 4 5 1\" \"1 2 3 4 2 -2\") = \"0 0 0 0 3 3\" ]]\n    [[ $(candidate \"0 0 0 0\
    \ 0 0\" \"0 0 0 0 0 0\") = \"0 0 0 0 0 0\" ]]\n    [[ $(candidate \"1 2 3\" \"\
    -1 -2 -3\") = \"2 4 6\" ]]\n    [[ $(candidate \"1 2 3 5\" \"-1 2 3 4\") = \"\
    2 0 0 1\" ]]\n}\n\nrun_test"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660002210
- exit_code: 1
  program: "#!/bin/bash\n# I think we all remember that feeling when the result of\
    \ some long-awaited\n# event is finally known. The feelings and thoughts you have\
    \ at that moment are\n# definitely worth noting down and comparing.\n# Your task\
    \ is to determine if a person correctly guessed the results of a number of matches.\n\
    # You are given two arrays of scores and guesses of equal length, where each index\
    \ shows a match. \n# Return an array of the same length denoting how far off each\
    \ guess was. If they have guessed correctly,\n# the value is 0, and if not, the\
    \ value is the absolute difference between the guess and the score.\n# example:\n\
    #\n# $1 is a space-separated list\n# $2 is a space-separated list\ncompare() {\n\
    \    local -n scores=$1\n    local -n guesses=$2\n    local -a result=()\n   \
    \ for ((i=0; i<${#scores[@]}; i++)); do\n        result+=($((${scores[$i]}-${guesses[$i]})))\n\
    \    done\n    echo \"${result[@]}\"\n}\n\ncandidate() {\n    compare \"$@\"\n\
    }\n\nset -e\nrun_test() {\n    [[ $(candidate \"1 2 3 4 5 1\" \"1 2 3 4 2 -2\"\
    ) = \"0 0 0 0 3 3\" ]]\n    [[ $(candidate \"0 0 0 0 0 0\" \"0 0 0 0 0 0\") =\
    \ \"0 0 0 0 0 0\" ]]\n    [[ $(candidate \"1 2 3\" \"-1 -2 -3\") = \"2 4 6\" ]]\n\
    \    [[ $(candidate \"1 2 3 5\" \"-1 2 3 4\") = \"2 0 0 1\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: '/tmp/tmp8w3oy0hv.sh: line 14: local: `1 2 3 4 5 1'': invalid variable name
    for name reference

    /tmp/tmp8w3oy0hv.sh: line 15: local: `1 2 3 4 2 -2'': invalid variable name for
    name reference

    '
  stdout: ''
  timestamp: 1660002210
- exit_code: 0
  program: "#!/bin/bash\n# I think we all remember that feeling when the result of\
    \ some long-awaited\n# event is finally known. The feelings and thoughts you have\
    \ at that moment are\n# definitely worth noting down and comparing.\n# Your task\
    \ is to determine if a person correctly guessed the results of a number of matches.\n\
    # You are given two arrays of scores and guesses of equal length, where each index\
    \ shows a match. \n# Return an array of the same length denoting how far off each\
    \ guess was. If they have guessed correctly,\n# the value is 0, and if not, the\
    \ value is the absolute difference between the guess and the score.\n# example:\n\
    #\n# $1 is a space-separated list\n# $2 is a space-separated list\ncompare() {\n\
    \    local -a scores=($1)\n    local -a guesses=($2)\n    local -a result\n  \
    \  for ((i=0; i<${#scores[@]}; i++)); do\n        if [[ ${scores[$i]} -eq ${guesses[$i]}\
    \ ]]; then\n            result[$i]=0\n        else\n            result[$i]=$((\
    \ ${scores[$i]} - ${guesses[$i]} ))\n        fi\n    done\n    echo ${result[@]}\n\
    }\n\ncandidate() {\n    compare \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate\
    \ \"1 2 3 4 5 1\" \"1 2 3 4 2 -2\") = \"0 0 0 0 3 3\" ]]\n    [[ $(candidate \"\
    0 0 0 0 0 0\" \"0 0 0 0 0 0\") = \"0 0 0 0 0 0\" ]]\n    [[ $(candidate \"1 2\
    \ 3\" \"-1 -2 -3\") = \"2 4 6\" ]]\n    [[ $(candidate \"1 2 3 5\" \"-1 2 3 4\"\
    ) = \"2 0 0 1\" ]]\n}\n\nrun_test"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660002210
- exit_code: 0
  program: "#!/bin/bash\n# I think we all remember that feeling when the result of\
    \ some long-awaited\n# event is finally known. The feelings and thoughts you have\
    \ at that moment are\n# definitely worth noting down and comparing.\n# Your task\
    \ is to determine if a person correctly guessed the results of a number of matches.\n\
    # You are given two arrays of scores and guesses of equal length, where each index\
    \ shows a match. \n# Return an array of the same length denoting how far off each\
    \ guess was. If they have guessed correctly,\n# the value is 0, and if not, the\
    \ value is the absolute difference between the guess and the score.\n# example:\n\
    #\n# $1 is a space-separated list\n# $2 is a space-separated list\ncompare() {\n\
    \    local score=($1)\n    local guess=($2)\n    local result=()\n    for ((i=0;\
    \ i<${#score[@]}; i++)); do\n        result[$i]=$((${score[$i]}-${guess[$i]}))\n\
    \        if [[ ${result[$i]} -lt 0 ]]; then\n            result[$i]=$((-${result[$i]}))\n\
    \        fi\n    done\n    echo ${result[@]}\n}\n\ncandidate() {\n    compare\
    \ \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"1 2 3 4 5 1\" \"1 2\
    \ 3 4 2 -2\") = \"0 0 0 0 3 3\" ]]\n    [[ $(candidate \"0 0 0 0 0 0\" \"0 0 0\
    \ 0 0 0\") = \"0 0 0 0 0 0\" ]]\n    [[ $(candidate \"1 2 3\" \"-1 -2 -3\") =\
    \ \"2 4 6\" ]]\n    [[ $(candidate \"1 2 3 5\" \"-1 2 3 4\") = \"2 0 0 1\" ]]\n\
    }\n\nrun_test"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660002210
- exit_code: 0
  program: "#!/bin/bash\n# I think we all remember that feeling when the result of\
    \ some long-awaited\n# event is finally known. The feelings and thoughts you have\
    \ at that moment are\n# definitely worth noting down and comparing.\n# Your task\
    \ is to determine if a person correctly guessed the results of a number of matches.\n\
    # You are given two arrays of scores and guesses of equal length, where each index\
    \ shows a match. \n# Return an array of the same length denoting how far off each\
    \ guess was. If they have guessed correctly,\n# the value is 0, and if not, the\
    \ value is the absolute difference between the guess and the score.\n# example:\n\
    #\n# $1 is a space-separated list\n# $2 is a space-separated list\ncompare() {\n\
    \    local -a scores=($1)\n    local -a guesses=($2)\n    local -a result=()\n\
    \    for (( i=0; i<${#scores[@]}; i++ )); do\n        if [[ ${scores[$i]} -eq\
    \ ${guesses[$i]} ]]; then\n            result[$i]=0\n        else\n          \
    \  result[$i]=$(( ${scores[$i]} - ${guesses[$i]} ))\n        fi\n    done\n  \
    \  echo ${result[@]}\n}\n\ncandidate() {\n    compare \"$@\"\n}\n\nset -e\nrun_test()\
    \ {\n    [[ $(candidate \"1 2 3 4 5 1\" \"1 2 3 4 2 -2\") = \"0 0 0 0 3 3\" ]]\n\
    \    [[ $(candidate \"0 0 0 0 0 0\" \"0 0 0 0 0 0\") = \"0 0 0 0 0 0\" ]]\n  \
    \  [[ $(candidate \"1 2 3\" \"-1 -2 -3\") = \"2 4 6\" ]]\n    [[ $(candidate \"\
    1 2 3 5\" \"-1 2 3 4\") = \"2 0 0 1\" ]]\n}\n\nrun_test"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660002210
- exit_code: 1
  program: "#!/bin/bash\n# I think we all remember that feeling when the result of\
    \ some long-awaited\n# event is finally known. The feelings and thoughts you have\
    \ at that moment are\n# definitely worth noting down and comparing.\n# Your task\
    \ is to determine if a person correctly guessed the results of a number of matches.\n\
    # You are given two arrays of scores and guesses of equal length, where each index\
    \ shows a match. \n# Return an array of the same length denoting how far off each\
    \ guess was. If they have guessed correctly,\n# the value is 0, and if not, the\
    \ value is the absolute difference between the guess and the score.\n# example:\n\
    #\n# $1 is a space-separated list\n# $2 is a space-separated list\ncompare() {\n\
    \    local -n scores=$1\n    local -n guesses=$2\n    local -a result=()\n   \
    \ for ((i=0; i<${#scores[@]}; i++)); do\n        result+=($((${scores[$i]}-${guesses[$i]})))\n\
    \    done\n    echo \"${result[@]}\"\n}\n\ncandidate() {\n    compare \"$@\"\n\
    }\n\nset -e\nrun_test() {\n    [[ $(candidate \"1 2 3 4 5 1\" \"1 2 3 4 2 -2\"\
    ) = \"0 0 0 0 3 3\" ]]\n    [[ $(candidate \"0 0 0 0 0 0\" \"0 0 0 0 0 0\") =\
    \ \"0 0 0 0 0 0\" ]]\n    [[ $(candidate \"1 2 3\" \"-1 -2 -3\") = \"2 4 6\" ]]\n\
    \    [[ $(candidate \"1 2 3 5\" \"-1 2 3 4\") = \"2 0 0 1\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: '/tmp/tmp8w3oy0hv.sh: line 14: local: `1 2 3 4 5 1'': invalid variable name
    for name reference

    /tmp/tmp8w3oy0hv.sh: line 15: local: `1 2 3 4 2 -2'': invalid variable name for
    name reference

    '
  stdout: ''
  timestamp: 1660002210
- exit_code: 1
  program: "#!/bin/bash\n# I think we all remember that feeling when the result of\
    \ some long-awaited\n# event is finally known. The feelings and thoughts you have\
    \ at that moment are\n# definitely worth noting down and comparing.\n# Your task\
    \ is to determine if a person correctly guessed the results of a number of matches.\n\
    # You are given two arrays of scores and guesses of equal length, where each index\
    \ shows a match. \n# Return an array of the same length denoting how far off each\
    \ guess was. If they have guessed correctly,\n# the value is 0, and if not, the\
    \ value is the absolute difference between the guess and the score.\n# example:\n\
    #\n# $1 is a space-separated list\n# $2 is a space-separated list\ncompare() {\n\
    \    local -n scores=$1\n    local -n guesses=$2\n    local -a result\n    for\
    \ ((i=0; i<${#scores[@]}; i++)); do\n        result[i]=$((${scores[i]}-${guesses[i]}))\n\
    \        if [[ ${result[i]} -lt 0 ]]; then\n            result[i]=$((-${result[i]}))\n\
    \        fi\n    done\n    echo ${result[@]}\n}\n\ncandidate() {\n    compare\
    \ \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"1 2 3 4 5 1\" \"1 2\
    \ 3 4 2 -2\") = \"0 0 0 0 3 3\" ]]\n    [[ $(candidate \"0 0 0 0 0 0\" \"0 0 0\
    \ 0 0 0\") = \"0 0 0 0 0 0\" ]]\n    [[ $(candidate \"1 2 3\" \"-1 -2 -3\") =\
    \ \"2 4 6\" ]]\n    [[ $(candidate \"1 2 3 5\" \"-1 2 3 4\") = \"2 0 0 1\" ]]\n\
    }\n\nrun_test"
  status: Exception
  stderr: '/tmp/tmplyz5_6e3.sh: line 14: local: `1 2 3 4 5 1'': invalid variable name
    for name reference

    /tmp/tmplyz5_6e3.sh: line 15: local: `1 2 3 4 2 -2'': invalid variable name for
    name reference

    '
  stdout: ''
  timestamp: 1660002210
- exit_code: 1
  program: "#!/bin/bash\n# I think we all remember that feeling when the result of\
    \ some long-awaited\n# event is finally known. The feelings and thoughts you have\
    \ at that moment are\n# definitely worth noting down and comparing.\n# Your task\
    \ is to determine if a person correctly guessed the results of a number of matches.\n\
    # You are given two arrays of scores and guesses of equal length, where each index\
    \ shows a match. \n# Return an array of the same length denoting how far off each\
    \ guess was. If they have guessed correctly,\n# the value is 0, and if not, the\
    \ value is the absolute difference between the guess and the score.\n# example:\n\
    #\n# $1 is a space-separated list\n# $2 is a space-separated list\ncompare() {\n\
    \    local -n scores=$1\n    local -n guesses=$2\n    local -a result=()\n   \
    \ for ((i=0; i<${#scores[@]}; i++)); do\n        if [[ ${scores[$i]} -eq ${guesses[$i]}\
    \ ]]; then\n            result+=(0)\n        else\n            result+=($(( ${scores[$i]}\
    \ - ${guesses[$i]} )))\n        fi\n    done\n    echo \"${result[@]}\"\n}\n\n\
    candidate() {\n    compare \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate\
    \ \"1 2 3 4 5 1\" \"1 2 3 4 2 -2\") = \"0 0 0 0 3 3\" ]]\n    [[ $(candidate \"\
    0 0 0 0 0 0\" \"0 0 0 0 0 0\") = \"0 0 0 0 0 0\" ]]\n    [[ $(candidate \"1 2\
    \ 3\" \"-1 -2 -3\") = \"2 4 6\" ]]\n    [[ $(candidate \"1 2 3 5\" \"-1 2 3 4\"\
    ) = \"2 0 0 1\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: '/tmp/tmpafs_1xxy.sh: line 14: local: `1 2 3 4 5 1'': invalid variable name
    for name reference

    /tmp/tmpafs_1xxy.sh: line 15: local: `1 2 3 4 2 -2'': invalid variable name for
    name reference

    '
  stdout: ''
  timestamp: 1660002210
- exit_code: 0
  program: "#!/bin/bash\n# I think we all remember that feeling when the result of\
    \ some long-awaited\n# event is finally known. The feelings and thoughts you have\
    \ at that moment are\n# definitely worth noting down and comparing.\n# Your task\
    \ is to determine if a person correctly guessed the results of a number of matches.\n\
    # You are given two arrays of scores and guesses of equal length, where each index\
    \ shows a match. \n# Return an array of the same length denoting how far off each\
    \ guess was. If they have guessed correctly,\n# the value is 0, and if not, the\
    \ value is the absolute difference between the guess and the score.\n# example:\n\
    #\n# $1 is a space-separated list\n# $2 is a space-separated list\ncompare() {\n\
    \    local -a scores=($1)\n    local -a guesses=($2)\n    local -a result=()\n\
    \    for ((i=0; i<${#scores[@]}; i++)); do\n        result[i]=$((${scores[i]}-${guesses[i]}))\n\
    \        if [[ ${result[i]} -lt 0 ]]; then\n            result[i]=$((-${result[i]}))\n\
    \        fi\n    done\n    echo ${result[@]}\n}\n\ncandidate() {\n    compare\
    \ \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"1 2 3 4 5 1\" \"1 2\
    \ 3 4 2 -2\") = \"0 0 0 0 3 3\" ]]\n    [[ $(candidate \"0 0 0 0 0 0\" \"0 0 0\
    \ 0 0 0\") = \"0 0 0 0 0 0\" ]]\n    [[ $(candidate \"1 2 3\" \"-1 -2 -3\") =\
    \ \"2 4 6\" ]]\n    [[ $(candidate \"1 2 3 5\" \"-1 2 3 4\") = \"2 0 0 1\" ]]\n\
    }\n\nrun_test"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660002210
- exit_code: 1
  program: "#!/bin/bash\n# I think we all remember that feeling when the result of\
    \ some long-awaited\n# event is finally known. The feelings and thoughts you have\
    \ at that moment are\n# definitely worth noting down and comparing.\n# Your task\
    \ is to determine if a person correctly guessed the results of a number of matches.\n\
    # You are given two arrays of scores and guesses of equal length, where each index\
    \ shows a match. \n# Return an array of the same length denoting how far off each\
    \ guess was. If they have guessed correctly,\n# the value is 0, and if not, the\
    \ value is the absolute difference between the guess and the score.\n# example:\n\
    #\n# $1 is a space-separated list\n# $2 is a space-separated list\ncompare() {\n\
    \    local -n scores=$1\n    local -n guesses=$2\n    local -a result=()\n   \
    \ for ((i=0; i<${#scores[@]}; i++)); do\n        if [[ ${scores[$i]} -eq ${guesses[$i]}\
    \ ]]; then\n            result+=(0)\n        else\n            result+=($(( ${scores[$i]}\
    \ - ${guesses[$i]} )))\n        fi\n    done\n    echo \"${result[@]}\"\n}\n\n\
    candidate() {\n    compare \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate\
    \ \"1 2 3 4 5 1\" \"1 2 3 4 2 -2\") = \"0 0 0 0 3 3\" ]]\n    [[ $(candidate \"\
    0 0 0 0 0 0\" \"0 0 0 0 0 0\") = \"0 0 0 0 0 0\" ]]\n    [[ $(candidate \"1 2\
    \ 3\" \"-1 -2 -3\") = \"2 4 6\" ]]\n    [[ $(candidate \"1 2 3 5\" \"-1 2 3 4\"\
    ) = \"2 0 0 1\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: '/tmp/tmpafs_1xxy.sh: line 14: local: `1 2 3 4 5 1'': invalid variable name
    for name reference

    /tmp/tmpafs_1xxy.sh: line 15: local: `1 2 3 4 2 -2'': invalid variable name for
    name reference

    '
  stdout: ''
  timestamp: 1660002210
- exit_code: 1
  program: "#!/bin/bash\n# I think we all remember that feeling when the result of\
    \ some long-awaited\n# event is finally known. The feelings and thoughts you have\
    \ at that moment are\n# definitely worth noting down and comparing.\n# Your task\
    \ is to determine if a person correctly guessed the results of a number of matches.\n\
    # You are given two arrays of scores and guesses of equal length, where each index\
    \ shows a match. \n# Return an array of the same length denoting how far off each\
    \ guess was. If they have guessed correctly,\n# the value is 0, and if not, the\
    \ value is the absolute difference between the guess and the score.\n# example:\n\
    #\n# $1 is a space-separated list\n# $2 is a space-separated list\ncompare() {\n\
    \    local -n scores=$1\n    local -n guesses=$2\n    local -a result=()\n   \
    \ for ((i=0; i<${#scores[@]}; i++)); do\n        result[i]=$((${scores[i]}-${guesses[i]}))\n\
    \        if [[ ${result[i]} -lt 0 ]]; then\n            result[i]=$((-${result[i]}))\n\
    \        fi\n    done\n    echo ${result[@]}\n}\n\ncandidate() {\n    compare\
    \ \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"1 2 3 4 5 1\" \"1 2\
    \ 3 4 2 -2\") = \"0 0 0 0 3 3\" ]]\n    [[ $(candidate \"0 0 0 0 0 0\" \"0 0 0\
    \ 0 0 0\") = \"0 0 0 0 0 0\" ]]\n    [[ $(candidate \"1 2 3\" \"-1 -2 -3\") =\
    \ \"2 4 6\" ]]\n    [[ $(candidate \"1 2 3 5\" \"-1 2 3 4\") = \"2 0 0 1\" ]]\n\
    }\n\nrun_test"
  status: Exception
  stderr: '/tmp/tmpjm9y46gd.sh: line 14: local: `1 2 3 4 5 1'': invalid variable name
    for name reference

    /tmp/tmpjm9y46gd.sh: line 15: local: `1 2 3 4 2 -2'': invalid variable name for
    name reference

    '
  stdout: ''
  timestamp: 1660002210
- exit_code: 1
  program: "#!/bin/bash\n# I think we all remember that feeling when the result of\
    \ some long-awaited\n# event is finally known. The feelings and thoughts you have\
    \ at that moment are\n# definitely worth noting down and comparing.\n# Your task\
    \ is to determine if a person correctly guessed the results of a number of matches.\n\
    # You are given two arrays of scores and guesses of equal length, where each index\
    \ shows a match. \n# Return an array of the same length denoting how far off each\
    \ guess was. If they have guessed correctly,\n# the value is 0, and if not, the\
    \ value is the absolute difference between the guess and the score.\n# example:\n\
    #\n# $1 is a space-separated list\n# $2 is a space-separated list\ncompare() {\n\
    \    local -n scores=$1\n    local -n guesses=$2\n    local -a result=()\n   \
    \ for ((i=0; i<${#scores[@]}; i++)); do\n        if [[ ${scores[$i]} -eq ${guesses[$i]}\
    \ ]]; then\n            result+=(0)\n        else\n            result+=($(( ${scores[$i]}\
    \ - ${guesses[$i]} )))\n        fi\n    done\n    echo \"${result[@]}\"\n}\n\n\
    candidate() {\n    compare \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate\
    \ \"1 2 3 4 5 1\" \"1 2 3 4 2 -2\") = \"0 0 0 0 3 3\" ]]\n    [[ $(candidate \"\
    0 0 0 0 0 0\" \"0 0 0 0 0 0\") = \"0 0 0 0 0 0\" ]]\n    [[ $(candidate \"1 2\
    \ 3\" \"-1 -2 -3\") = \"2 4 6\" ]]\n    [[ $(candidate \"1 2 3 5\" \"-1 2 3 4\"\
    ) = \"2 0 0 1\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: '/tmp/tmpafs_1xxy.sh: line 14: local: `1 2 3 4 5 1'': invalid variable name
    for name reference

    /tmp/tmpafs_1xxy.sh: line 15: local: `1 2 3 4 2 -2'': invalid variable name for
    name reference

    '
  stdout: ''
  timestamp: 1660002210
- exit_code: 1
  program: "#!/bin/bash\n# I think we all remember that feeling when the result of\
    \ some long-awaited\n# event is finally known. The feelings and thoughts you have\
    \ at that moment are\n# definitely worth noting down and comparing.\n# Your task\
    \ is to determine if a person correctly guessed the results of a number of matches.\n\
    # You are given two arrays of scores and guesses of equal length, where each index\
    \ shows a match. \n# Return an array of the same length denoting how far off each\
    \ guess was. If they have guessed correctly,\n# the value is 0, and if not, the\
    \ value is the absolute difference between the guess and the score.\n# example:\n\
    #\n# $1 is a space-separated list\n# $2 is a space-separated list\ncompare() {\n\
    \    local -n scores=$1\n    local -n guesses=$2\n    local -a result=()\n   \
    \ for ((i=0; i<${#scores[@]}; i++)); do\n        result+=($((${scores[$i]} - ${guesses[$i]})))\n\
    \    done\n    echo \"${result[@]}\"\n}\n\ncandidate() {\n    compare \"$@\"\n\
    }\n\nset -e\nrun_test() {\n    [[ $(candidate \"1 2 3 4 5 1\" \"1 2 3 4 2 -2\"\
    ) = \"0 0 0 0 3 3\" ]]\n    [[ $(candidate \"0 0 0 0 0 0\" \"0 0 0 0 0 0\") =\
    \ \"0 0 0 0 0 0\" ]]\n    [[ $(candidate \"1 2 3\" \"-1 -2 -3\") = \"2 4 6\" ]]\n\
    \    [[ $(candidate \"1 2 3 5\" \"-1 2 3 4\") = \"2 0 0 1\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: '/tmp/tmpj_hkzzds.sh: line 14: local: `1 2 3 4 5 1'': invalid variable name
    for name reference

    /tmp/tmpj_hkzzds.sh: line 15: local: `1 2 3 4 2 -2'': invalid variable name for
    name reference

    '
  stdout: ''
  timestamp: 1660002210
- exit_code: 0
  program: "#!/bin/bash\n# I think we all remember that feeling when the result of\
    \ some long-awaited\n# event is finally known. The feelings and thoughts you have\
    \ at that moment are\n# definitely worth noting down and comparing.\n# Your task\
    \ is to determine if a person correctly guessed the results of a number of matches.\n\
    # You are given two arrays of scores and guesses of equal length, where each index\
    \ shows a match. \n# Return an array of the same length denoting how far off each\
    \ guess was. If they have guessed correctly,\n# the value is 0, and if not, the\
    \ value is the absolute difference between the guess and the score.\n# example:\n\
    #\n# $1 is a space-separated list\n# $2 is a space-separated list\ncompare() {\n\
    \    local scores=($1)\n    local guesses=($2)\n    local result=()\n    for ((i=0;\
    \ i<${#scores[@]}; i++)); do\n        if [[ ${scores[$i]} -eq ${guesses[$i]} ]];\
    \ then\n            result+=(0)\n        else\n            result+=($((${scores[$i]}\
    \ - ${guesses[$i]})))\n        fi\n    done\n    echo ${result[@]}\n}\n\ncandidate()\
    \ {\n    compare \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"1 2 3\
    \ 4 5 1\" \"1 2 3 4 2 -2\") = \"0 0 0 0 3 3\" ]]\n    [[ $(candidate \"0 0 0 0\
    \ 0 0\" \"0 0 0 0 0 0\") = \"0 0 0 0 0 0\" ]]\n    [[ $(candidate \"1 2 3\" \"\
    -1 -2 -3\") = \"2 4 6\" ]]\n    [[ $(candidate \"1 2 3 5\" \"-1 2 3 4\") = \"\
    2 0 0 1\" ]]\n}\n\nrun_test"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660002210
- exit_code: 0
  program: "#!/bin/bash\n# I think we all remember that feeling when the result of\
    \ some long-awaited\n# event is finally known. The feelings and thoughts you have\
    \ at that moment are\n# definitely worth noting down and comparing.\n# Your task\
    \ is to determine if a person correctly guessed the results of a number of matches.\n\
    # You are given two arrays of scores and guesses of equal length, where each index\
    \ shows a match. \n# Return an array of the same length denoting how far off each\
    \ guess was. If they have guessed correctly,\n# the value is 0, and if not, the\
    \ value is the absolute difference between the guess and the score.\n# example:\n\
    #\n# $1 is a space-separated list\n# $2 is a space-separated list\ncompare() {\n\
    \    local -a scores=($1)\n    local -a guesses=($2)\n    local -a results=()\n\
    \    for ((i=0; i<${#scores[@]}; i++)); do\n        results[i]=$((${scores[i]}-${guesses[i]}))\n\
    \    done\n    echo ${results[@]}\n}\n\ncandidate() {\n    compare \"$@\"\n}\n\
    \nset -e\nrun_test() {\n    [[ $(candidate \"1 2 3 4 5 1\" \"1 2 3 4 2 -2\") =\
    \ \"0 0 0 0 3 3\" ]]\n    [[ $(candidate \"0 0 0 0 0 0\" \"0 0 0 0 0 0\") = \"\
    0 0 0 0 0 0\" ]]\n    [[ $(candidate \"1 2 3\" \"-1 -2 -3\") = \"2 4 6\" ]]\n\
    \    [[ $(candidate \"1 2 3 5\" \"-1 2 3 4\") = \"2 0 0 1\" ]]\n}\n\nrun_test"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660002210
- exit_code: 0
  program: "#!/bin/bash\n# I think we all remember that feeling when the result of\
    \ some long-awaited\n# event is finally known. The feelings and thoughts you have\
    \ at that moment are\n# definitely worth noting down and comparing.\n# Your task\
    \ is to determine if a person correctly guessed the results of a number of matches.\n\
    # You are given two arrays of scores and guesses of equal length, where each index\
    \ shows a match. \n# Return an array of the same length denoting how far off each\
    \ guess was. If they have guessed correctly,\n# the value is 0, and if not, the\
    \ value is the absolute difference between the guess and the score.\n# example:\n\
    #\n# $1 is a space-separated list\n# $2 is a space-separated list\ncompare() {\n\
    \    local -a scores=($1)\n    local -a guesses=($2)\n    local -a result=()\n\
    \    for ((i=0; i<${#scores[@]}; i++)); do\n        if [[ ${scores[$i]} -eq ${guesses[$i]}\
    \ ]]; then\n            result[$i]=0\n        else\n            result[$i]=$((\
    \ ${scores[$i]} - ${guesses[$i]} ))\n        fi\n    done\n    echo ${result[@]}\n\
    }\n\ncandidate() {\n    compare \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate\
    \ \"1 2 3 4 5 1\" \"1 2 3 4 2 -2\") = \"0 0 0 0 3 3\" ]]\n    [[ $(candidate \"\
    0 0 0 0 0 0\" \"0 0 0 0 0 0\") = \"0 0 0 0 0 0\" ]]\n    [[ $(candidate \"1 2\
    \ 3\" \"-1 -2 -3\") = \"2 4 6\" ]]\n    [[ $(candidate \"1 2 3 5\" \"-1 2 3 4\"\
    ) = \"2 0 0 1\" ]]\n}\n\nrun_test"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660002209
- exit_code: 1
  program: "#!/bin/bash\n# I think we all remember that feeling when the result of\
    \ some long-awaited\n# event is finally known. The feelings and thoughts you have\
    \ at that moment are\n# definitely worth noting down and comparing.\n# Your task\
    \ is to determine if a person correctly guessed the results of a number of matches.\n\
    # You are given two arrays of scores and guesses of equal length, where each index\
    \ shows a match. \n# Return an array of the same length denoting how far off each\
    \ guess was. If they have guessed correctly,\n# the value is 0, and if not, the\
    \ value is the absolute difference between the guess and the score.\n# example:\n\
    #\n# $1 is a space-separated list\n# $2 is a space-separated list\ncompare() {\n\
    \    local -n scores=$1\n    local -n guesses=$2\n    local -a result=()\n   \
    \ for ((i=0; i<${#scores[@]}; i++)); do\n        local score=${scores[$i]}\n \
    \       local guess=${guesses[$i]}\n        if [[ $score -eq $guess ]]; then\n\
    \            result+=(0)\n        else\n            result+=($((score - guess)))\n\
    \        fi\n    done\n    echo \"${result[@]}\"\n}\n\ncandidate() {\n    compare\
    \ \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"1 2 3 4 5 1\" \"1 2\
    \ 3 4 2 -2\") = \"0 0 0 0 3 3\" ]]\n    [[ $(candidate \"0 0 0 0 0 0\" \"0 0 0\
    \ 0 0 0\") = \"0 0 0 0 0 0\" ]]\n    [[ $(candidate \"1 2 3\" \"-1 -2 -3\") =\
    \ \"2 4 6\" ]]\n    [[ $(candidate \"1 2 3 5\" \"-1 2 3 4\") = \"2 0 0 1\" ]]\n\
    }\n\nrun_test"
  status: Exception
  stderr: '/tmp/tmp58dy9nyl.sh: line 14: local: `1 2 3 4 5 1'': invalid variable name
    for name reference

    /tmp/tmp58dy9nyl.sh: line 15: local: `1 2 3 4 2 -2'': invalid variable name for
    name reference

    '
  stdout: ''
  timestamp: 1660002210
- exit_code: 1
  program: "#!/bin/bash\n# I think we all remember that feeling when the result of\
    \ some long-awaited\n# event is finally known. The feelings and thoughts you have\
    \ at that moment are\n# definitely worth noting down and comparing.\n# Your task\
    \ is to determine if a person correctly guessed the results of a number of matches.\n\
    # You are given two arrays of scores and guesses of equal length, where each index\
    \ shows a match. \n# Return an array of the same length denoting how far off each\
    \ guess was. If they have guessed correctly,\n# the value is 0, and if not, the\
    \ value is the absolute difference between the guess and the score.\n# example:\n\
    #\n# $1 is a space-separated list\n# $2 is a space-separated list\ncompare() {\n\
    \    local -n arr1=$1\n    local -n arr2=$2\n    local -a result\n    for ((i=0;\
    \ i<${#arr1[@]}; i++)); do\n        if [[ ${arr1[$i]} -eq ${arr2[$i]} ]]; then\n\
    \            result[$i]=0\n        else\n            result[$i]=$(( ${arr1[$i]}\
    \ - ${arr2[$i]} ))\n        fi\n    done\n    echo ${result[@]}\n}\n\ncandidate()\
    \ {\n    compare \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"1 2 3\
    \ 4 5 1\" \"1 2 3 4 2 -2\") = \"0 0 0 0 3 3\" ]]\n    [[ $(candidate \"0 0 0 0\
    \ 0 0\" \"0 0 0 0 0 0\") = \"0 0 0 0 0 0\" ]]\n    [[ $(candidate \"1 2 3\" \"\
    -1 -2 -3\") = \"2 4 6\" ]]\n    [[ $(candidate \"1 2 3 5\" \"-1 2 3 4\") = \"\
    2 0 0 1\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: '/tmp/tmp8pn6z8ln.sh: line 14: local: `1 2 3 4 5 1'': invalid variable name
    for name reference

    /tmp/tmp8pn6z8ln.sh: line 15: local: `1 2 3 4 2 -2'': invalid variable name for
    name reference

    '
  stdout: ''
  timestamp: 1660002210
- exit_code: 1
  program: "#!/bin/bash\n# I think we all remember that feeling when the result of\
    \ some long-awaited\n# event is finally known. The feelings and thoughts you have\
    \ at that moment are\n# definitely worth noting down and comparing.\n# Your task\
    \ is to determine if a person correctly guessed the results of a number of matches.\n\
    # You are given two arrays of scores and guesses of equal length, where each index\
    \ shows a match. \n# Return an array of the same length denoting how far off each\
    \ guess was. If they have guessed correctly,\n# the value is 0, and if not, the\
    \ value is the absolute difference between the guess and the score.\n# example:\n\
    #\n# $1 is a space-separated list\n# $2 is a space-separated list\ncompare() {\n\
    \  local -n scores=$1\n  local -n guesses=$2\n  local -a result=()\n  for ((i=0;\
    \ i<${#scores[@]}; i++)); do\n    if [[ ${scores[$i]} -eq ${guesses[$i]} ]]; then\n\
    \      result+=(0)\n    else\n      result+=($(( ${scores[$i]} - ${guesses[$i]}\
    \ )))\n    fi\n  done\n  echo \"${result[@]}\"\n}\n\ncandidate() {\n    compare\
    \ \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"1 2 3 4 5 1\" \"1 2\
    \ 3 4 2 -2\") = \"0 0 0 0 3 3\" ]]\n    [[ $(candidate \"0 0 0 0 0 0\" \"0 0 0\
    \ 0 0 0\") = \"0 0 0 0 0 0\" ]]\n    [[ $(candidate \"1 2 3\" \"-1 -2 -3\") =\
    \ \"2 4 6\" ]]\n    [[ $(candidate \"1 2 3 5\" \"-1 2 3 4\") = \"2 0 0 1\" ]]\n\
    }\n\nrun_test"
  status: Exception
  stderr: '/tmp/tmp1d79l9de.sh: line 14: local: `1 2 3 4 5 1'': invalid variable name
    for name reference

    /tmp/tmp1d79l9de.sh: line 15: local: `1 2 3 4 2 -2'': invalid variable name for
    name reference

    '
  stdout: ''
  timestamp: 1660002210
- exit_code: 0
  program: "#!/bin/bash\n# I think we all remember that feeling when the result of\
    \ some long-awaited\n# event is finally known. The feelings and thoughts you have\
    \ at that moment are\n# definitely worth noting down and comparing.\n# Your task\
    \ is to determine if a person correctly guessed the results of a number of matches.\n\
    # You are given two arrays of scores and guesses of equal length, where each index\
    \ shows a match. \n# Return an array of the same length denoting how far off each\
    \ guess was. If they have guessed correctly,\n# the value is 0, and if not, the\
    \ value is the absolute difference between the guess and the score.\n# example:\n\
    #\n# $1 is a space-separated list\n# $2 is a space-separated list\ncompare() {\n\
    \    local -a scores=($1)\n    local -a guesses=($2)\n    local -a result=()\n\
    \    for ((i=0; i<${#scores[@]}; i++)); do\n        if [[ ${scores[$i]} -eq ${guesses[$i]}\
    \ ]]; then\n            result+=(0)\n        else\n            result+=($((${scores[$i]}\
    \ - ${guesses[$i]})))\n        fi\n    done\n    echo ${result[@]}\n}\n\ncandidate()\
    \ {\n    compare \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"1 2 3\
    \ 4 5 1\" \"1 2 3 4 2 -2\") = \"0 0 0 0 3 3\" ]]\n    [[ $(candidate \"0 0 0 0\
    \ 0 0\" \"0 0 0 0 0 0\") = \"0 0 0 0 0 0\" ]]\n    [[ $(candidate \"1 2 3\" \"\
    -1 -2 -3\") = \"2 4 6\" ]]\n    [[ $(candidate \"1 2 3 5\" \"-1 2 3 4\") = \"\
    2 0 0 1\" ]]\n}\n\nrun_test"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660002210
- exit_code: 0
  program: "#!/bin/bash\n# I think we all remember that feeling when the result of\
    \ some long-awaited\n# event is finally known. The feelings and thoughts you have\
    \ at that moment are\n# definitely worth noting down and comparing.\n# Your task\
    \ is to determine if a person correctly guessed the results of a number of matches.\n\
    # You are given two arrays of scores and guesses of equal length, where each index\
    \ shows a match. \n# Return an array of the same length denoting how far off each\
    \ guess was. If they have guessed correctly,\n# the value is 0, and if not, the\
    \ value is the absolute difference between the guess and the score.\n# example:\n\
    #\n# $1 is a space-separated list\n# $2 is a space-separated list\ncompare() {\n\
    \    local -a scores=($1)\n    local -a guesses=($2)\n    local -a result=()\n\
    \    for ((i=0; i<${#scores[@]}; i++)); do\n        if [[ ${scores[$i]} -eq ${guesses[$i]}\
    \ ]]; then\n            result[$i]=0\n        else\n            result[$i]=$((\
    \ ${scores[$i]} - ${guesses[$i]} ))\n        fi\n    done\n    echo ${result[@]}\n\
    }\n\ncandidate() {\n    compare \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate\
    \ \"1 2 3 4 5 1\" \"1 2 3 4 2 -2\") = \"0 0 0 0 3 3\" ]]\n    [[ $(candidate \"\
    0 0 0 0 0 0\" \"0 0 0 0 0 0\") = \"0 0 0 0 0 0\" ]]\n    [[ $(candidate \"1 2\
    \ 3\" \"-1 -2 -3\") = \"2 4 6\" ]]\n    [[ $(candidate \"1 2 3 5\" \"-1 2 3 4\"\
    ) = \"2 0 0 1\" ]]\n}\n\nrun_test"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660002209
- exit_code: 0
  program: "#!/bin/bash\n# I think we all remember that feeling when the result of\
    \ some long-awaited\n# event is finally known. The feelings and thoughts you have\
    \ at that moment are\n# definitely worth noting down and comparing.\n# Your task\
    \ is to determine if a person correctly guessed the results of a number of matches.\n\
    # You are given two arrays of scores and guesses of equal length, where each index\
    \ shows a match. \n# Return an array of the same length denoting how far off each\
    \ guess was. If they have guessed correctly,\n# the value is 0, and if not, the\
    \ value is the absolute difference between the guess and the score.\n# example:\n\
    #\n# $1 is a space-separated list\n# $2 is a space-separated list\ncompare() {\n\
    \    local score=($1)\n    local guess=($2)\n    local result=()\n    for ((i=0;\
    \ i<${#score[@]}; i++)); do\n        result[$i]=$((${score[$i]}-${guess[$i]}))\n\
    \        result[$i]=$((${result[$i]}<0?-${result[$i]}:${result[$i]}))\n    done\n\
    \    echo ${result[@]}\n}\n\ncandidate() {\n    compare \"$@\"\n}\n\nset -e\n\
    run_test() {\n    [[ $(candidate \"1 2 3 4 5 1\" \"1 2 3 4 2 -2\") = \"0 0 0 0\
    \ 3 3\" ]]\n    [[ $(candidate \"0 0 0 0 0 0\" \"0 0 0 0 0 0\") = \"0 0 0 0 0\
    \ 0\" ]]\n    [[ $(candidate \"1 2 3\" \"-1 -2 -3\") = \"2 4 6\" ]]\n    [[ $(candidate\
    \ \"1 2 3 5\" \"-1 2 3 4\") = \"2 0 0 1\" ]]\n}\n\nrun_test"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660002210
- exit_code: 1
  program: "#!/bin/bash\n# I think we all remember that feeling when the result of\
    \ some long-awaited\n# event is finally known. The feelings and thoughts you have\
    \ at that moment are\n# definitely worth noting down and comparing.\n# Your task\
    \ is to determine if a person correctly guessed the results of a number of matches.\n\
    # You are given two arrays of scores and guesses of equal length, where each index\
    \ shows a match. \n# Return an array of the same length denoting how far off each\
    \ guess was. If they have guessed correctly,\n# the value is 0, and if not, the\
    \ value is the absolute difference between the guess and the score.\n# example:\n\
    #\n# $1 is a space-separated list\n# $2 is a space-separated list\ncompare() {\n\
    \  local -n scores=$1\n  local -n guesses=$2\n  local -a result\n  for ((i=0;\
    \ i<${#scores[@]}; i++)); do\n    if [[ ${scores[$i]} -eq ${guesses[$i]} ]]; then\n\
    \      result[$i]=0\n    else\n      result[$i]=$(( ${scores[$i]} - ${guesses[$i]}\
    \ ))\n    fi\n  done\n  echo \"${result[@]}\"\n}\n\ncandidate() {\n    compare\
    \ \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"1 2 3 4 5 1\" \"1 2\
    \ 3 4 2 -2\") = \"0 0 0 0 3 3\" ]]\n    [[ $(candidate \"0 0 0 0 0 0\" \"0 0 0\
    \ 0 0 0\") = \"0 0 0 0 0 0\" ]]\n    [[ $(candidate \"1 2 3\" \"-1 -2 -3\") =\
    \ \"2 4 6\" ]]\n    [[ $(candidate \"1 2 3 5\" \"-1 2 3 4\") = \"2 0 0 1\" ]]\n\
    }\n\nrun_test"
  status: Exception
  stderr: '/tmp/tmpzzwhwahz.sh: line 14: local: `1 2 3 4 5 1'': invalid variable name
    for name reference

    /tmp/tmpzzwhwahz.sh: line 15: local: `1 2 3 4 2 -2'': invalid variable name for
    name reference

    '
  stdout: ''
  timestamp: 1660002210
- exit_code: 1
  program: "#!/bin/bash\n# I think we all remember that feeling when the result of\
    \ some long-awaited\n# event is finally known. The feelings and thoughts you have\
    \ at that moment are\n# definitely worth noting down and comparing.\n# Your task\
    \ is to determine if a person correctly guessed the results of a number of matches.\n\
    # You are given two arrays of scores and guesses of equal length, where each index\
    \ shows a match. \n# Return an array of the same length denoting how far off each\
    \ guess was. If they have guessed correctly,\n# the value is 0, and if not, the\
    \ value is the absolute difference between the guess and the score.\n# example:\n\
    #\n# $1 is a space-separated list\n# $2 is a space-separated list\ncompare() {\n\
    \    local -n scores=$1\n    local -n guesses=$2\n    local -a result\n    for\
    \ ((i=0; i<${#scores[@]}; i++)); do\n        if [[ ${scores[$i]} -eq ${guesses[$i]}\
    \ ]]; then\n            result[$i]=0\n        else\n            result[$i]=$((\
    \ ${scores[$i]} - ${guesses[$i]} ))\n        fi\n    done\n    echo ${result[@]}\n\
    }\n\ncandidate() {\n    compare \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate\
    \ \"1 2 3 4 5 1\" \"1 2 3 4 2 -2\") = \"0 0 0 0 3 3\" ]]\n    [[ $(candidate \"\
    0 0 0 0 0 0\" \"0 0 0 0 0 0\") = \"0 0 0 0 0 0\" ]]\n    [[ $(candidate \"1 2\
    \ 3\" \"-1 -2 -3\") = \"2 4 6\" ]]\n    [[ $(candidate \"1 2 3 5\" \"-1 2 3 4\"\
    ) = \"2 0 0 1\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: '/tmp/tmpxiv6gpn6.sh: line 14: local: `1 2 3 4 5 1'': invalid variable name
    for name reference

    /tmp/tmpxiv6gpn6.sh: line 15: local: `1 2 3 4 2 -2'': invalid variable name for
    name reference

    '
  stdout: ''
  timestamp: 1660002210
- exit_code: 1
  program: "#!/bin/bash\n# I think we all remember that feeling when the result of\
    \ some long-awaited\n# event is finally known. The feelings and thoughts you have\
    \ at that moment are\n# definitely worth noting down and comparing.\n# Your task\
    \ is to determine if a person correctly guessed the results of a number of matches.\n\
    # You are given two arrays of scores and guesses of equal length, where each index\
    \ shows a match. \n# Return an array of the same length denoting how far off each\
    \ guess was. If they have guessed correctly,\n# the value is 0, and if not, the\
    \ value is the absolute difference between the guess and the score.\n# example:\n\
    #\n# $1 is a space-separated list\n# $2 is a space-separated list\ncompare() {\n\
    \    local -n scores=$1\n    local -n guesses=$2\n    local -a result\n    for\
    \ ((i=0; i<${#scores[@]}; i++)); do\n        result[i]=$((${scores[i]}-${guesses[i]}))\n\
    \        if [[ ${result[i]} -lt 0 ]]; then\n            result[i]=$((-${result[i]}))\n\
    \        fi\n    done\n    echo ${result[@]}\n}\n\ncandidate() {\n    compare\
    \ \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"1 2 3 4 5 1\" \"1 2\
    \ 3 4 2 -2\") = \"0 0 0 0 3 3\" ]]\n    [[ $(candidate \"0 0 0 0 0 0\" \"0 0 0\
    \ 0 0 0\") = \"0 0 0 0 0 0\" ]]\n    [[ $(candidate \"1 2 3\" \"-1 -2 -3\") =\
    \ \"2 4 6\" ]]\n    [[ $(candidate \"1 2 3 5\" \"-1 2 3 4\") = \"2 0 0 1\" ]]\n\
    }\n\nrun_test"
  status: Exception
  stderr: '/tmp/tmplyz5_6e3.sh: line 14: local: `1 2 3 4 5 1'': invalid variable name
    for name reference

    /tmp/tmplyz5_6e3.sh: line 15: local: `1 2 3 4 2 -2'': invalid variable name for
    name reference

    '
  stdout: ''
  timestamp: 1660002210
- exit_code: 1
  program: "#!/bin/bash\n# I think we all remember that feeling when the result of\
    \ some long-awaited\n# event is finally known. The feelings and thoughts you have\
    \ at that moment are\n# definitely worth noting down and comparing.\n# Your task\
    \ is to determine if a person correctly guessed the results of a number of matches.\n\
    # You are given two arrays of scores and guesses of equal length, where each index\
    \ shows a match. \n# Return an array of the same length denoting how far off each\
    \ guess was. If they have guessed correctly,\n# the value is 0, and if not, the\
    \ value is the absolute difference between the guess and the score.\n# example:\n\
    #\n# $1 is a space-separated list\n# $2 is a space-separated list\ncompare() {\n\
    \  local -n scores=$1\n  local -n guesses=$2\n  local result=()\n  for i in \"\
    ${!scores[@]}\"; do\n    result+=($((${scores[$i]} - ${guesses[$i]})))\n  done\n\
    \  echo \"${result[@]}\"\n}\n\ncandidate() {\n    compare \"$@\"\n}\n\nset -e\n\
    run_test() {\n    [[ $(candidate \"1 2 3 4 5 1\" \"1 2 3 4 2 -2\") = \"0 0 0 0\
    \ 3 3\" ]]\n    [[ $(candidate \"0 0 0 0 0 0\" \"0 0 0 0 0 0\") = \"0 0 0 0 0\
    \ 0\" ]]\n    [[ $(candidate \"1 2 3\" \"-1 -2 -3\") = \"2 4 6\" ]]\n    [[ $(candidate\
    \ \"1 2 3 5\" \"-1 2 3 4\") = \"2 0 0 1\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: '/tmp/tmppxh0suzs.sh: line 14: local: `1 2 3 4 5 1'': invalid variable name
    for name reference

    /tmp/tmppxh0suzs.sh: line 15: local: `1 2 3 4 2 -2'': invalid variable name for
    name reference

    '
  stdout: ''
  timestamp: 1660002210
- exit_code: 1
  program: "#!/bin/bash\n# I think we all remember that feeling when the result of\
    \ some long-awaited\n# event is finally known. The feelings and thoughts you have\
    \ at that moment are\n# definitely worth noting down and comparing.\n# Your task\
    \ is to determine if a person correctly guessed the results of a number of matches.\n\
    # You are given two arrays of scores and guesses of equal length, where each index\
    \ shows a match. \n# Return an array of the same length denoting how far off each\
    \ guess was. If they have guessed correctly,\n# the value is 0, and if not, the\
    \ value is the absolute difference between the guess and the score.\n# example:\n\
    #\n# $1 is a space-separated list\n# $2 is a space-separated list\ncompare() {\n\
    \    local -n scores=$1\n    local -n guesses=$2\n    local -a result\n    for\
    \ ((i=0; i<${#scores[@]}; i++)); do\n        if [[ ${scores[$i]} -eq ${guesses[$i]}\
    \ ]]; then\n            result+=(0)\n        else\n            result+=($(( ${scores[$i]}\
    \ - ${guesses[$i]} )))\n        fi\n    done\n    echo \"${result[@]}\"\n}\n\n\
    candidate() {\n    compare \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate\
    \ \"1 2 3 4 5 1\" \"1 2 3 4 2 -2\") = \"0 0 0 0 3 3\" ]]\n    [[ $(candidate \"\
    0 0 0 0 0 0\" \"0 0 0 0 0 0\") = \"0 0 0 0 0 0\" ]]\n    [[ $(candidate \"1 2\
    \ 3\" \"-1 -2 -3\") = \"2 4 6\" ]]\n    [[ $(candidate \"1 2 3 5\" \"-1 2 3 4\"\
    ) = \"2 0 0 1\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: '/tmp/tmpwnc0q8y6.sh: line 14: local: `1 2 3 4 5 1'': invalid variable name
    for name reference

    /tmp/tmpwnc0q8y6.sh: line 15: local: `1 2 3 4 2 -2'': invalid variable name for
    name reference

    '
  stdout: ''
  timestamp: 1660002210
- exit_code: 1
  program: "#!/bin/bash\n# I think we all remember that feeling when the result of\
    \ some long-awaited\n# event is finally known. The feelings and thoughts you have\
    \ at that moment are\n# definitely worth noting down and comparing.\n# Your task\
    \ is to determine if a person correctly guessed the results of a number of matches.\n\
    # You are given two arrays of scores and guesses of equal length, where each index\
    \ shows a match. \n# Return an array of the same length denoting how far off each\
    \ guess was. If they have guessed correctly,\n# the value is 0, and if not, the\
    \ value is the absolute difference between the guess and the score.\n# example:\n\
    #\n# $1 is a space-separated list\n# $2 is a space-separated list\ncompare() {\n\
    \    local -n scores=$1\n    local -n guesses=$2\n    local -a result\n    for\
    \ ((i=0; i<${#scores[@]}; i++)); do\n        if [[ ${scores[$i]} -eq ${guesses[$i]}\
    \ ]]; then\n            result[$i]=0\n        else\n            result[$i]=$((\
    \ ${scores[$i]} - ${guesses[$i]} ))\n        fi\n    done\n    echo ${result[@]}\n\
    }\n\ncandidate() {\n    compare \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate\
    \ \"1 2 3 4 5 1\" \"1 2 3 4 2 -2\") = \"0 0 0 0 3 3\" ]]\n    [[ $(candidate \"\
    0 0 0 0 0 0\" \"0 0 0 0 0 0\") = \"0 0 0 0 0 0\" ]]\n    [[ $(candidate \"1 2\
    \ 3\" \"-1 -2 -3\") = \"2 4 6\" ]]\n    [[ $(candidate \"1 2 3 5\" \"-1 2 3 4\"\
    ) = \"2 0 0 1\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: '/tmp/tmpxiv6gpn6.sh: line 14: local: `1 2 3 4 5 1'': invalid variable name
    for name reference

    /tmp/tmpxiv6gpn6.sh: line 15: local: `1 2 3 4 2 -2'': invalid variable name for
    name reference

    '
  stdout: ''
  timestamp: 1660002210
- exit_code: 0
  program: "#!/bin/bash\n# I think we all remember that feeling when the result of\
    \ some long-awaited\n# event is finally known. The feelings and thoughts you have\
    \ at that moment are\n# definitely worth noting down and comparing.\n# Your task\
    \ is to determine if a person correctly guessed the results of a number of matches.\n\
    # You are given two arrays of scores and guesses of equal length, where each index\
    \ shows a match. \n# Return an array of the same length denoting how far off each\
    \ guess was. If they have guessed correctly,\n# the value is 0, and if not, the\
    \ value is the absolute difference between the guess and the score.\n# example:\n\
    #\n# $1 is a space-separated list\n# $2 is a space-separated list\ncompare() {\n\
    \    local -a scores=($1)\n    local -a guesses=($2)\n    local -a result=()\n\
    \    for ((i=0; i<${#scores[@]}; i++)); do\n        if [[ ${scores[$i]} -eq ${guesses[$i]}\
    \ ]]; then\n            result+=(0)\n        else\n            result+=($((${scores[$i]}\
    \ - ${guesses[$i]})))\n        fi\n    done\n    echo ${result[@]}\n}\n\ncandidate()\
    \ {\n    compare \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"1 2 3\
    \ 4 5 1\" \"1 2 3 4 2 -2\") = \"0 0 0 0 3 3\" ]]\n    [[ $(candidate \"0 0 0 0\
    \ 0 0\" \"0 0 0 0 0 0\") = \"0 0 0 0 0 0\" ]]\n    [[ $(candidate \"1 2 3\" \"\
    -1 -2 -3\") = \"2 4 6\" ]]\n    [[ $(candidate \"1 2 3 5\" \"-1 2 3 4\") = \"\
    2 0 0 1\" ]]\n}\n\nrun_test"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660002210
- exit_code: 1
  program: "#!/bin/bash\n# I think we all remember that feeling when the result of\
    \ some long-awaited\n# event is finally known. The feelings and thoughts you have\
    \ at that moment are\n# definitely worth noting down and comparing.\n# Your task\
    \ is to determine if a person correctly guessed the results of a number of matches.\n\
    # You are given two arrays of scores and guesses of equal length, where each index\
    \ shows a match. \n# Return an array of the same length denoting how far off each\
    \ guess was. If they have guessed correctly,\n# the value is 0, and if not, the\
    \ value is the absolute difference between the guess and the score.\n# example:\n\
    #\n# $1 is a space-separated list\n# $2 is a space-separated list\ncompare() {\n\
    \    local -n scores=$1\n    local -n guesses=$2\n    local -a result=()\n   \
    \ for ((i=0; i<${#scores[@]}; i++)); do\n        result[i]=$((${scores[i]}-${guesses[i]}))\n\
    \        result[i]=${result[i]#-}\n    done\n    echo \"${result[@]}\"\n}\n\n\
    candidate() {\n    compare \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate\
    \ \"1 2 3 4 5 1\" \"1 2 3 4 2 -2\") = \"0 0 0 0 3 3\" ]]\n    [[ $(candidate \"\
    0 0 0 0 0 0\" \"0 0 0 0 0 0\") = \"0 0 0 0 0 0\" ]]\n    [[ $(candidate \"1 2\
    \ 3\" \"-1 -2 -3\") = \"2 4 6\" ]]\n    [[ $(candidate \"1 2 3 5\" \"-1 2 3 4\"\
    ) = \"2 0 0 1\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: '/tmp/tmpzoktlrjj.sh: line 14: local: `1 2 3 4 5 1'': invalid variable name
    for name reference

    /tmp/tmpzoktlrjj.sh: line 15: local: `1 2 3 4 2 -2'': invalid variable name for
    name reference

    '
  stdout: ''
  timestamp: 1660002210
- exit_code: 0
  program: "#!/bin/bash\n# I think we all remember that feeling when the result of\
    \ some long-awaited\n# event is finally known. The feelings and thoughts you have\
    \ at that moment are\n# definitely worth noting down and comparing.\n# Your task\
    \ is to determine if a person correctly guessed the results of a number of matches.\n\
    # You are given two arrays of scores and guesses of equal length, where each index\
    \ shows a match. \n# Return an array of the same length denoting how far off each\
    \ guess was. If they have guessed correctly,\n# the value is 0, and if not, the\
    \ value is the absolute difference between the guess and the score.\n# example:\n\
    #\n# $1 is a space-separated list\n# $2 is a space-separated list\ncompare() {\n\
    \  local score=($1)\n  local guess=($2)\n  local result=()\n  for ((i=0; i<${#score[@]};\
    \ i++)); do\n    if [[ ${score[$i]} -eq ${guess[$i]} ]]; then\n      result+=(0)\n\
    \    else\n      result+=($((${score[$i]} - ${guess[$i]})))\n    fi\n  done\n\
    \  echo ${result[@]}\n}\n\ncandidate() {\n    compare \"$@\"\n}\n\nset -e\nrun_test()\
    \ {\n    [[ $(candidate \"1 2 3 4 5 1\" \"1 2 3 4 2 -2\") = \"0 0 0 0 3 3\" ]]\n\
    \    [[ $(candidate \"0 0 0 0 0 0\" \"0 0 0 0 0 0\") = \"0 0 0 0 0 0\" ]]\n  \
    \  [[ $(candidate \"1 2 3\" \"-1 -2 -3\") = \"2 4 6\" ]]\n    [[ $(candidate \"\
    1 2 3 5\" \"-1 2 3 4\") = \"2 0 0 1\" ]]\n}\n\nrun_test"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660002210
- exit_code: 1
  program: "#!/bin/bash\n# I think we all remember that feeling when the result of\
    \ some long-awaited\n# event is finally known. The feelings and thoughts you have\
    \ at that moment are\n# definitely worth noting down and comparing.\n# Your task\
    \ is to determine if a person correctly guessed the results of a number of matches.\n\
    # You are given two arrays of scores and guesses of equal length, where each index\
    \ shows a match. \n# Return an array of the same length denoting how far off each\
    \ guess was. If they have guessed correctly,\n# the value is 0, and if not, the\
    \ value is the absolute difference between the guess and the score.\n# example:\n\
    #\n# $1 is a space-separated list\n# $2 is a space-separated list\ncompare() {\n\
    \  local -n scores=$1\n  local -n guesses=$2\n  local -a result=()\n  for i in\
    \ ${!scores[@]}; do\n    if [[ ${scores[$i]} -eq ${guesses[$i]} ]]; then\n   \
    \   result+=(0)\n    else\n      result+=($(( ${scores[$i]} - ${guesses[$i]} )))\n\
    \    fi\n  done\n  echo \"${result[@]}\"\n}\n\ncandidate() {\n    compare \"$@\"\
    \n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"1 2 3 4 5 1\" \"1 2 3 4 2 -2\"\
    ) = \"0 0 0 0 3 3\" ]]\n    [[ $(candidate \"0 0 0 0 0 0\" \"0 0 0 0 0 0\") =\
    \ \"0 0 0 0 0 0\" ]]\n    [[ $(candidate \"1 2 3\" \"-1 -2 -3\") = \"2 4 6\" ]]\n\
    \    [[ $(candidate \"1 2 3 5\" \"-1 2 3 4\") = \"2 0 0 1\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: '/tmp/tmp9xlrb8bc.sh: line 14: local: `1 2 3 4 5 1'': invalid variable name
    for name reference

    /tmp/tmp9xlrb8bc.sh: line 15: local: `1 2 3 4 2 -2'': invalid variable name for
    name reference

    '
  stdout: ''
  timestamp: 1660002210
- exit_code: 1
  program: "#!/bin/bash\n# I think we all remember that feeling when the result of\
    \ some long-awaited\n# event is finally known. The feelings and thoughts you have\
    \ at that moment are\n# definitely worth noting down and comparing.\n# Your task\
    \ is to determine if a person correctly guessed the results of a number of matches.\n\
    # You are given two arrays of scores and guesses of equal length, where each index\
    \ shows a match. \n# Return an array of the same length denoting how far off each\
    \ guess was. If they have guessed correctly,\n# the value is 0, and if not, the\
    \ value is the absolute difference between the guess and the score.\n# example:\n\
    #\n# $1 is a space-separated list\n# $2 is a space-separated list\ncompare() {\n\
    \    local -n scores=$1\n    local -n guesses=$2\n    local -a result=()\n   \
    \ for ((i=0; i<${#scores[@]}; i++)); do\n        result+=($((${scores[$i]} - ${guesses[$i]})))\n\
    \    done\n    echo \"${result[@]}\"\n}\n\ncandidate() {\n    compare \"$@\"\n\
    }\n\nset -e\nrun_test() {\n    [[ $(candidate \"1 2 3 4 5 1\" \"1 2 3 4 2 -2\"\
    ) = \"0 0 0 0 3 3\" ]]\n    [[ $(candidate \"0 0 0 0 0 0\" \"0 0 0 0 0 0\") =\
    \ \"0 0 0 0 0 0\" ]]\n    [[ $(candidate \"1 2 3\" \"-1 -2 -3\") = \"2 4 6\" ]]\n\
    \    [[ $(candidate \"1 2 3 5\" \"-1 2 3 4\") = \"2 0 0 1\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: '/tmp/tmpj_hkzzds.sh: line 14: local: `1 2 3 4 5 1'': invalid variable name
    for name reference

    /tmp/tmpj_hkzzds.sh: line 15: local: `1 2 3 4 2 -2'': invalid variable name for
    name reference

    '
  stdout: ''
  timestamp: 1660002210
- exit_code: 1
  program: "#!/bin/bash\n# I think we all remember that feeling when the result of\
    \ some long-awaited\n# event is finally known. The feelings and thoughts you have\
    \ at that moment are\n# definitely worth noting down and comparing.\n# Your task\
    \ is to determine if a person correctly guessed the results of a number of matches.\n\
    # You are given two arrays of scores and guesses of equal length, where each index\
    \ shows a match. \n# Return an array of the same length denoting how far off each\
    \ guess was. If they have guessed correctly,\n# the value is 0, and if not, the\
    \ value is the absolute difference between the guess and the score.\n# example:\n\
    #\n# $1 is a space-separated list\n# $2 is a space-separated list\ncompare() {\n\
    \  local -n scores=$1\n  local -n guesses=$2\n  local -a result=()\n  for ((i=0;\
    \ i<${#scores[@]}; i++)); do\n    if [[ ${scores[$i]} -eq ${guesses[$i]} ]]; then\n\
    \      result+=(0)\n    else\n      result+=($(( ${scores[$i]} - ${guesses[$i]}\
    \ )))\n    fi\n  done\n  echo \"${result[@]}\"\n}\n\ncandidate() {\n    compare\
    \ \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"1 2 3 4 5 1\" \"1 2\
    \ 3 4 2 -2\") = \"0 0 0 0 3 3\" ]]\n    [[ $(candidate \"0 0 0 0 0 0\" \"0 0 0\
    \ 0 0 0\") = \"0 0 0 0 0 0\" ]]\n    [[ $(candidate \"1 2 3\" \"-1 -2 -3\") =\
    \ \"2 4 6\" ]]\n    [[ $(candidate \"1 2 3 5\" \"-1 2 3 4\") = \"2 0 0 1\" ]]\n\
    }\n\nrun_test"
  status: Exception
  stderr: '/tmp/tmp1d79l9de.sh: line 14: local: `1 2 3 4 5 1'': invalid variable name
    for name reference

    /tmp/tmp1d79l9de.sh: line 15: local: `1 2 3 4 2 -2'': invalid variable name for
    name reference

    '
  stdout: ''
  timestamp: 1660002210
- exit_code: 1
  program: "#!/bin/bash\n# I think we all remember that feeling when the result of\
    \ some long-awaited\n# event is finally known. The feelings and thoughts you have\
    \ at that moment are\n# definitely worth noting down and comparing.\n# Your task\
    \ is to determine if a person correctly guessed the results of a number of matches.\n\
    # You are given two arrays of scores and guesses of equal length, where each index\
    \ shows a match. \n# Return an array of the same length denoting how far off each\
    \ guess was. If they have guessed correctly,\n# the value is 0, and if not, the\
    \ value is the absolute difference between the guess and the score.\n# example:\n\
    #\n# $1 is a space-separated list\n# $2 is a space-separated list\ncompare() {\n\
    \    local -n a=$1\n    local -n b=$2\n    local -a result\n    for ((i=0; i<${#a[@]};\
    \ i++)); do\n        result[i]=$((${a[i]}-${b[i]}))\n    done\n    echo \"${result[@]}\"\
    \n}\n\ncandidate() {\n    compare \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate\
    \ \"1 2 3 4 5 1\" \"1 2 3 4 2 -2\") = \"0 0 0 0 3 3\" ]]\n    [[ $(candidate \"\
    0 0 0 0 0 0\" \"0 0 0 0 0 0\") = \"0 0 0 0 0 0\" ]]\n    [[ $(candidate \"1 2\
    \ 3\" \"-1 -2 -3\") = \"2 4 6\" ]]\n    [[ $(candidate \"1 2 3 5\" \"-1 2 3 4\"\
    ) = \"2 0 0 1\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: '/tmp/tmpqgpcz6ug.sh: line 14: local: `1 2 3 4 5 1'': invalid variable name
    for name reference

    /tmp/tmpqgpcz6ug.sh: line 15: local: `1 2 3 4 2 -2'': invalid variable name for
    name reference

    '
  stdout: ''
  timestamp: 1660002210
- exit_code: 1
  program: "#!/bin/bash\n# I think we all remember that feeling when the result of\
    \ some long-awaited\n# event is finally known. The feelings and thoughts you have\
    \ at that moment are\n# definitely worth noting down and comparing.\n# Your task\
    \ is to determine if a person correctly guessed the results of a number of matches.\n\
    # You are given two arrays of scores and guesses of equal length, where each index\
    \ shows a match. \n# Return an array of the same length denoting how far off each\
    \ guess was. If they have guessed correctly,\n# the value is 0, and if not, the\
    \ value is the absolute difference between the guess and the score.\n# example:\n\
    #\n# $1 is a space-separated list\n# $2 is a space-separated list\ncompare() {\n\
    \    local -n scores=$1\n    local -n guesses=$2\n    local result=()\n    for\
    \ ((i=0; i<${#scores[@]}; i++)); do\n        if [[ ${scores[$i]} -eq ${guesses[$i]}\
    \ ]]; then\n            result+=(0)\n        else\n            result+=($(( ${scores[$i]}\
    \ - ${guesses[$i]} )))\n        fi\n    done\n    echo \"${result[@]}\"\n}\n\n\
    candidate() {\n    compare \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate\
    \ \"1 2 3 4 5 1\" \"1 2 3 4 2 -2\") = \"0 0 0 0 3 3\" ]]\n    [[ $(candidate \"\
    0 0 0 0 0 0\" \"0 0 0 0 0 0\") = \"0 0 0 0 0 0\" ]]\n    [[ $(candidate \"1 2\
    \ 3\" \"-1 -2 -3\") = \"2 4 6\" ]]\n    [[ $(candidate \"1 2 3 5\" \"-1 2 3 4\"\
    ) = \"2 0 0 1\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: '/tmp/tmp9mohepqf.sh: line 14: local: `1 2 3 4 5 1'': invalid variable name
    for name reference

    /tmp/tmp9mohepqf.sh: line 15: local: `1 2 3 4 2 -2'': invalid variable name for
    name reference

    '
  stdout: ''
  timestamp: 1660002210
- exit_code: 1
  program: "#!/bin/bash\n# I think we all remember that feeling when the result of\
    \ some long-awaited\n# event is finally known. The feelings and thoughts you have\
    \ at that moment are\n# definitely worth noting down and comparing.\n# Your task\
    \ is to determine if a person correctly guessed the results of a number of matches.\n\
    # You are given two arrays of scores and guesses of equal length, where each index\
    \ shows a match. \n# Return an array of the same length denoting how far off each\
    \ guess was. If they have guessed correctly,\n# the value is 0, and if not, the\
    \ value is the absolute difference between the guess and the score.\n# example:\n\
    #\n# $1 is a space-separated list\n# $2 is a space-separated list\ncompare() {\n\
    \    local -n scores=$1\n    local -n guesses=$2\n    local result=()\n    for\
    \ ((i=0; i<${#scores[@]}; i++)); do\n        local score=${scores[$i]}\n     \
    \   local guess=${guesses[$i]}\n        result+=($((guess-score)))\n    done\n\
    \    echo \"${result[@]}\"\n}\n\ncandidate() {\n    compare \"$@\"\n}\n\nset -e\n\
    run_test() {\n    [[ $(candidate \"1 2 3 4 5 1\" \"1 2 3 4 2 -2\") = \"0 0 0 0\
    \ 3 3\" ]]\n    [[ $(candidate \"0 0 0 0 0 0\" \"0 0 0 0 0 0\") = \"0 0 0 0 0\
    \ 0\" ]]\n    [[ $(candidate \"1 2 3\" \"-1 -2 -3\") = \"2 4 6\" ]]\n    [[ $(candidate\
    \ \"1 2 3 5\" \"-1 2 3 4\") = \"2 0 0 1\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: '/tmp/tmp7env3hs4.sh: line 14: local: `1 2 3 4 5 1'': invalid variable name
    for name reference

    /tmp/tmp7env3hs4.sh: line 15: local: `1 2 3 4 2 -2'': invalid variable name for
    name reference

    '
  stdout: ''
  timestamp: 1660002210
- exit_code: 0
  program: "#!/bin/bash\n# I think we all remember that feeling when the result of\
    \ some long-awaited\n# event is finally known. The feelings and thoughts you have\
    \ at that moment are\n# definitely worth noting down and comparing.\n# Your task\
    \ is to determine if a person correctly guessed the results of a number of matches.\n\
    # You are given two arrays of scores and guesses of equal length, where each index\
    \ shows a match. \n# Return an array of the same length denoting how far off each\
    \ guess was. If they have guessed correctly,\n# the value is 0, and if not, the\
    \ value is the absolute difference between the guess and the score.\n# example:\n\
    #\n# $1 is a space-separated list\n# $2 is a space-separated list\ncompare() {\n\
    \    local -a scores=($1)\n    local -a guesses=($2)\n    local -a result=()\n\
    \    for ((i=0; i<${#scores[@]}; i++)); do\n        if [[ ${scores[$i]} -eq ${guesses[$i]}\
    \ ]]; then\n            result+=(0)\n        else\n            result+=($((${scores[$i]}\
    \ - ${guesses[$i]})))\n        fi\n    done\n    echo \"${result[@]}\"\n}\n\n\
    candidate() {\n    compare \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate\
    \ \"1 2 3 4 5 1\" \"1 2 3 4 2 -2\") = \"0 0 0 0 3 3\" ]]\n    [[ $(candidate \"\
    0 0 0 0 0 0\" \"0 0 0 0 0 0\") = \"0 0 0 0 0 0\" ]]\n    [[ $(candidate \"1 2\
    \ 3\" \"-1 -2 -3\") = \"2 4 6\" ]]\n    [[ $(candidate \"1 2 3 5\" \"-1 2 3 4\"\
    ) = \"2 0 0 1\" ]]\n}\n\nrun_test"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660002210
- exit_code: 0
  program: "#!/bin/bash\n# I think we all remember that feeling when the result of\
    \ some long-awaited\n# event is finally known. The feelings and thoughts you have\
    \ at that moment are\n# definitely worth noting down and comparing.\n# Your task\
    \ is to determine if a person correctly guessed the results of a number of matches.\n\
    # You are given two arrays of scores and guesses of equal length, where each index\
    \ shows a match. \n# Return an array of the same length denoting how far off each\
    \ guess was. If they have guessed correctly,\n# the value is 0, and if not, the\
    \ value is the absolute difference between the guess and the score.\n# example:\n\
    #\n# $1 is a space-separated list\n# $2 is a space-separated list\ncompare() {\n\
    \    local -a score=($1)\n    local -a guess=($2)\n    local -a result=()\n  \
    \  for ((i=0; i<${#score[@]}; i++)); do\n        result[$i]=$((${score[$i]}-${guess[$i]}))\n\
    \        if [[ ${result[$i]} -lt 0 ]]; then\n            result[$i]=$((-${result[$i]}))\n\
    \        fi\n    done\n    echo ${result[@]}\n}\n\ncandidate() {\n    compare\
    \ \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"1 2 3 4 5 1\" \"1 2\
    \ 3 4 2 -2\") = \"0 0 0 0 3 3\" ]]\n    [[ $(candidate \"0 0 0 0 0 0\" \"0 0 0\
    \ 0 0 0\") = \"0 0 0 0 0 0\" ]]\n    [[ $(candidate \"1 2 3\" \"-1 -2 -3\") =\
    \ \"2 4 6\" ]]\n    [[ $(candidate \"1 2 3 5\" \"-1 2 3 4\") = \"2 0 0 1\" ]]\n\
    }\n\nrun_test"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660002210
- exit_code: 1
  program: "#!/bin/bash\n# I think we all remember that feeling when the result of\
    \ some long-awaited\n# event is finally known. The feelings and thoughts you have\
    \ at that moment are\n# definitely worth noting down and comparing.\n# Your task\
    \ is to determine if a person correctly guessed the results of a number of matches.\n\
    # You are given two arrays of scores and guesses of equal length, where each index\
    \ shows a match. \n# Return an array of the same length denoting how far off each\
    \ guess was. If they have guessed correctly,\n# the value is 0, and if not, the\
    \ value is the absolute difference between the guess and the score.\n# example:\n\
    #\n# $1 is a space-separated list\n# $2 is a space-separated list\ncompare() {\n\
    \    local -n scores=$1\n    local -n guesses=$2\n    local result=()\n    for\
    \ i in ${!scores[@]}; do\n        if [[ ${scores[$i]} -eq ${guesses[$i]} ]]; then\n\
    \            result+=(0)\n        else\n            result+=($(( ${scores[$i]}\
    \ - ${guesses[$i]} )))\n        fi\n    done\n    echo ${result[@]}\n}\n\ncandidate()\
    \ {\n    compare \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"1 2 3\
    \ 4 5 1\" \"1 2 3 4 2 -2\") = \"0 0 0 0 3 3\" ]]\n    [[ $(candidate \"0 0 0 0\
    \ 0 0\" \"0 0 0 0 0 0\") = \"0 0 0 0 0 0\" ]]\n    [[ $(candidate \"1 2 3\" \"\
    -1 -2 -3\") = \"2 4 6\" ]]\n    [[ $(candidate \"1 2 3 5\" \"-1 2 3 4\") = \"\
    2 0 0 1\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: '/tmp/tmpxjqriweh.sh: line 14: local: `1 2 3 4 5 1'': invalid variable name
    for name reference

    /tmp/tmpxjqriweh.sh: line 15: local: `1 2 3 4 2 -2'': invalid variable name for
    name reference

    '
  stdout: ''
  timestamp: 1660002210
- exit_code: 1
  program: "#!/bin/bash\n# I think we all remember that feeling when the result of\
    \ some long-awaited\n# event is finally known. The feelings and thoughts you have\
    \ at that moment are\n# definitely worth noting down and comparing.\n# Your task\
    \ is to determine if a person correctly guessed the results of a number of matches.\n\
    # You are given two arrays of scores and guesses of equal length, where each index\
    \ shows a match. \n# Return an array of the same length denoting how far off each\
    \ guess was. If they have guessed correctly,\n# the value is 0, and if not, the\
    \ value is the absolute difference between the guess and the score.\n# example:\n\
    #\n# $1 is a space-separated list\n# $2 is a space-separated list\ncompare() {\n\
    \    local -n scores=$1\n    local -n guesses=$2\n    local -a result\n    for\
    \ ((i=0; i<${#scores[@]}; i++)); do\n        if [[ ${scores[$i]} -eq ${guesses[$i]}\
    \ ]]; then\n            result[$i]=0\n        else\n            result[$i]=$((\
    \ ${scores[$i]} - ${guesses[$i]} ))\n        fi\n    done\n    echo ${result[@]}\n\
    }\n\ncandidate() {\n    compare \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate\
    \ \"1 2 3 4 5 1\" \"1 2 3 4 2 -2\") = \"0 0 0 0 3 3\" ]]\n    [[ $(candidate \"\
    0 0 0 0 0 0\" \"0 0 0 0 0 0\") = \"0 0 0 0 0 0\" ]]\n    [[ $(candidate \"1 2\
    \ 3\" \"-1 -2 -3\") = \"2 4 6\" ]]\n    [[ $(candidate \"1 2 3 5\" \"-1 2 3 4\"\
    ) = \"2 0 0 1\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: '/tmp/tmpxiv6gpn6.sh: line 14: local: `1 2 3 4 5 1'': invalid variable name
    for name reference

    /tmp/tmpxiv6gpn6.sh: line 15: local: `1 2 3 4 2 -2'': invalid variable name for
    name reference

    '
  stdout: ''
  timestamp: 1660002210
- exit_code: 0
  program: "#!/bin/bash\n# I think we all remember that feeling when the result of\
    \ some long-awaited\n# event is finally known. The feelings and thoughts you have\
    \ at that moment are\n# definitely worth noting down and comparing.\n# Your task\
    \ is to determine if a person correctly guessed the results of a number of matches.\n\
    # You are given two arrays of scores and guesses of equal length, where each index\
    \ shows a match. \n# Return an array of the same length denoting how far off each\
    \ guess was. If they have guessed correctly,\n# the value is 0, and if not, the\
    \ value is the absolute difference between the guess and the score.\n# example:\n\
    #\n# $1 is a space-separated list\n# $2 is a space-separated list\ncompare() {\n\
    \    local -a scores=($1)\n    local -a guesses=($2)\n    local -a result=()\n\
    \    for i in \"${!scores[@]}\"; do\n        if [[ ${scores[$i]} -eq ${guesses[$i]}\
    \ ]]; then\n            result+=(0)\n        else\n            result+=($((${scores[$i]}\
    \ - ${guesses[$i]})))\n        fi\n    done\n    echo \"${result[@]}\"\n}\n\n\
    candidate() {\n    compare \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate\
    \ \"1 2 3 4 5 1\" \"1 2 3 4 2 -2\") = \"0 0 0 0 3 3\" ]]\n    [[ $(candidate \"\
    0 0 0 0 0 0\" \"0 0 0 0 0 0\") = \"0 0 0 0 0 0\" ]]\n    [[ $(candidate \"1 2\
    \ 3\" \"-1 -2 -3\") = \"2 4 6\" ]]\n    [[ $(candidate \"1 2 3 5\" \"-1 2 3 4\"\
    ) = \"2 0 0 1\" ]]\n}\n\nrun_test"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660002210
- exit_code: 1
  program: "#!/bin/bash\n# I think we all remember that feeling when the result of\
    \ some long-awaited\n# event is finally known. The feelings and thoughts you have\
    \ at that moment are\n# definitely worth noting down and comparing.\n# Your task\
    \ is to determine if a person correctly guessed the results of a number of matches.\n\
    # You are given two arrays of scores and guesses of equal length, where each index\
    \ shows a match. \n# Return an array of the same length denoting how far off each\
    \ guess was. If they have guessed correctly,\n# the value is 0, and if not, the\
    \ value is the absolute difference between the guess and the score.\n# example:\n\
    #\n# $1 is a space-separated list\n# $2 is a space-separated list\ncompare() {\n\
    \    local -n _scores=$1\n    local -n _guesses=$2\n    local -a _result=()\n\
    \    for (( i=0; i<${#_scores[@]}; i++ )); do\n        _result[$i]=$((${_scores[$i]}-${_guesses[$i]}))\n\
    \    done\n    echo \"${_result[@]}\"\n}\n\ncandidate() {\n    compare \"$@\"\n\
    }\n\nset -e\nrun_test() {\n    [[ $(candidate \"1 2 3 4 5 1\" \"1 2 3 4 2 -2\"\
    ) = \"0 0 0 0 3 3\" ]]\n    [[ $(candidate \"0 0 0 0 0 0\" \"0 0 0 0 0 0\") =\
    \ \"0 0 0 0 0 0\" ]]\n    [[ $(candidate \"1 2 3\" \"-1 -2 -3\") = \"2 4 6\" ]]\n\
    \    [[ $(candidate \"1 2 3 5\" \"-1 2 3 4\") = \"2 0 0 1\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: '/tmp/tmpys8a022x.sh: line 14: local: `1 2 3 4 5 1'': invalid variable name
    for name reference

    /tmp/tmpys8a022x.sh: line 15: local: `1 2 3 4 2 -2'': invalid variable name for
    name reference

    '
  stdout: ''
  timestamp: 1660002210
- exit_code: 1
  program: "#!/bin/bash\n# I think we all remember that feeling when the result of\
    \ some long-awaited\n# event is finally known. The feelings and thoughts you have\
    \ at that moment are\n# definitely worth noting down and comparing.\n# Your task\
    \ is to determine if a person correctly guessed the results of a number of matches.\n\
    # You are given two arrays of scores and guesses of equal length, where each index\
    \ shows a match. \n# Return an array of the same length denoting how far off each\
    \ guess was. If they have guessed correctly,\n# the value is 0, and if not, the\
    \ value is the absolute difference between the guess and the score.\n# example:\n\
    #\n# $1 is a space-separated list\n# $2 is a space-separated list\ncompare() {\n\
    \    local -n scores=$1\n    local -n guesses=$2\n    local result=()\n    for\
    \ ((i=0; i<${#scores[@]}; i++)); do\n        result+=($((${scores[$i]} - ${guesses[$i]})))\n\
    \    done\n    echo \"${result[@]}\"\n}\n\ncandidate() {\n    compare \"$@\"\n\
    }\n\nset -e\nrun_test() {\n    [[ $(candidate \"1 2 3 4 5 1\" \"1 2 3 4 2 -2\"\
    ) = \"0 0 0 0 3 3\" ]]\n    [[ $(candidate \"0 0 0 0 0 0\" \"0 0 0 0 0 0\") =\
    \ \"0 0 0 0 0 0\" ]]\n    [[ $(candidate \"1 2 3\" \"-1 -2 -3\") = \"2 4 6\" ]]\n\
    \    [[ $(candidate \"1 2 3 5\" \"-1 2 3 4\") = \"2 0 0 1\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: '/tmp/tmpizc6npkr.sh: line 14: local: `1 2 3 4 5 1'': invalid variable name
    for name reference

    /tmp/tmpizc6npkr.sh: line 15: local: `1 2 3 4 2 -2'': invalid variable name for
    name reference

    '
  stdout: ''
  timestamp: 1660002210
- exit_code: 1
  program: "#!/bin/bash\n# I think we all remember that feeling when the result of\
    \ some long-awaited\n# event is finally known. The feelings and thoughts you have\
    \ at that moment are\n# definitely worth noting down and comparing.\n# Your task\
    \ is to determine if a person correctly guessed the results of a number of matches.\n\
    # You are given two arrays of scores and guesses of equal length, where each index\
    \ shows a match. \n# Return an array of the same length denoting how far off each\
    \ guess was. If they have guessed correctly,\n# the value is 0, and if not, the\
    \ value is the absolute difference between the guess and the score.\n# example:\n\
    #\n# $1 is a space-separated list\n# $2 is a space-separated list\ncompare() {\n\
    \  local -n scores=$1\n  local -n guesses=$2\n  local -a result=()\n  for ((i=0;\
    \ i<${#scores[@]}; i++)); do\n    if [[ ${scores[$i]} -eq ${guesses[$i]} ]]; then\n\
    \      result+=(0)\n    else\n      result+=($(( ${scores[$i]} - ${guesses[$i]}\
    \ )))\n    fi\n  done\n  echo \"${result[@]}\"\n}\n\ncandidate() {\n    compare\
    \ \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"1 2 3 4 5 1\" \"1 2\
    \ 3 4 2 -2\") = \"0 0 0 0 3 3\" ]]\n    [[ $(candidate \"0 0 0 0 0 0\" \"0 0 0\
    \ 0 0 0\") = \"0 0 0 0 0 0\" ]]\n    [[ $(candidate \"1 2 3\" \"-1 -2 -3\") =\
    \ \"2 4 6\" ]]\n    [[ $(candidate \"1 2 3 5\" \"-1 2 3 4\") = \"2 0 0 1\" ]]\n\
    }\n\nrun_test"
  status: Exception
  stderr: '/tmp/tmp1d79l9de.sh: line 14: local: `1 2 3 4 5 1'': invalid variable name
    for name reference

    /tmp/tmp1d79l9de.sh: line 15: local: `1 2 3 4 2 -2'': invalid variable name for
    name reference

    '
  stdout: ''
  timestamp: 1660002210
- exit_code: 1
  program: "#!/bin/bash\n# I think we all remember that feeling when the result of\
    \ some long-awaited\n# event is finally known. The feelings and thoughts you have\
    \ at that moment are\n# definitely worth noting down and comparing.\n# Your task\
    \ is to determine if a person correctly guessed the results of a number of matches.\n\
    # You are given two arrays of scores and guesses of equal length, where each index\
    \ shows a match. \n# Return an array of the same length denoting how far off each\
    \ guess was. If they have guessed correctly,\n# the value is 0, and if not, the\
    \ value is the absolute difference between the guess and the score.\n# example:\n\
    #\n# $1 is a space-separated list\n# $2 is a space-separated list\ncompare() {\n\
    \    local -n scores=$1\n    local -n guesses=$2\n    local result=()\n    for\
    \ ((i=0; i<${#scores[@]}; i++)); do\n        if [[ ${scores[$i]} -eq ${guesses[$i]}\
    \ ]]; then\n            result+=(0)\n        else\n            result+=($(( ${scores[$i]}\
    \ - ${guesses[$i]} )))\n        fi\n    done\n    echo \"${result[@]}\"\n}\n\n\
    candidate() {\n    compare \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate\
    \ \"1 2 3 4 5 1\" \"1 2 3 4 2 -2\") = \"0 0 0 0 3 3\" ]]\n    [[ $(candidate \"\
    0 0 0 0 0 0\" \"0 0 0 0 0 0\") = \"0 0 0 0 0 0\" ]]\n    [[ $(candidate \"1 2\
    \ 3\" \"-1 -2 -3\") = \"2 4 6\" ]]\n    [[ $(candidate \"1 2 3 5\" \"-1 2 3 4\"\
    ) = \"2 0 0 1\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: '/tmp/tmp9mohepqf.sh: line 14: local: `1 2 3 4 5 1'': invalid variable name
    for name reference

    /tmp/tmp9mohepqf.sh: line 15: local: `1 2 3 4 2 -2'': invalid variable name for
    name reference

    '
  stdout: ''
  timestamp: 1660002210
- exit_code: 1
  program: "#!/bin/bash\n# I think we all remember that feeling when the result of\
    \ some long-awaited\n# event is finally known. The feelings and thoughts you have\
    \ at that moment are\n# definitely worth noting down and comparing.\n# Your task\
    \ is to determine if a person correctly guessed the results of a number of matches.\n\
    # You are given two arrays of scores and guesses of equal length, where each index\
    \ shows a match. \n# Return an array of the same length denoting how far off each\
    \ guess was. If they have guessed correctly,\n# the value is 0, and if not, the\
    \ value is the absolute difference between the guess and the score.\n# example:\n\
    #\n# $1 is a space-separated list\n# $2 is a space-separated list\ncompare() {\n\
    \    local -n scores=$1\n    local -n guesses=$2\n    local -a result=()\n   \
    \ for ((i=0; i<${#scores[@]}; i++)); do\n        if [[ ${scores[$i]} -eq ${guesses[$i]}\
    \ ]]; then\n            result+=(0)\n        else\n            result+=($(( ${scores[$i]}\
    \ - ${guesses[$i]} )))\n        fi\n    done\n    echo \"${result[@]}\"\n}\n\n\
    candidate() {\n    compare \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate\
    \ \"1 2 3 4 5 1\" \"1 2 3 4 2 -2\") = \"0 0 0 0 3 3\" ]]\n    [[ $(candidate \"\
    0 0 0 0 0 0\" \"0 0 0 0 0 0\") = \"0 0 0 0 0 0\" ]]\n    [[ $(candidate \"1 2\
    \ 3\" \"-1 -2 -3\") = \"2 4 6\" ]]\n    [[ $(candidate \"1 2 3 5\" \"-1 2 3 4\"\
    ) = \"2 0 0 1\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: '/tmp/tmpafs_1xxy.sh: line 14: local: `1 2 3 4 5 1'': invalid variable name
    for name reference

    /tmp/tmpafs_1xxy.sh: line 15: local: `1 2 3 4 2 -2'': invalid variable name for
    name reference

    '
  stdout: ''
  timestamp: 1660002210
- exit_code: 1
  program: "#!/bin/bash\n# I think we all remember that feeling when the result of\
    \ some long-awaited\n# event is finally known. The feelings and thoughts you have\
    \ at that moment are\n# definitely worth noting down and comparing.\n# Your task\
    \ is to determine if a person correctly guessed the results of a number of matches.\n\
    # You are given two arrays of scores and guesses of equal length, where each index\
    \ shows a match. \n# Return an array of the same length denoting how far off each\
    \ guess was. If they have guessed correctly,\n# the value is 0, and if not, the\
    \ value is the absolute difference between the guess and the score.\n# example:\n\
    #\n# $1 is a space-separated list\n# $2 is a space-separated list\ncompare() {\n\
    \    local -n scores=$1\n    local -n guesses=$2\n    local result=()\n    for\
    \ i in ${!scores[@]}; do\n        result+=($((${scores[$i]} - ${guesses[$i]})))\n\
    \    done\n    echo \"${result[@]}\"\n}\n\ncandidate() {\n    compare \"$@\"\n\
    }\n\nset -e\nrun_test() {\n    [[ $(candidate \"1 2 3 4 5 1\" \"1 2 3 4 2 -2\"\
    ) = \"0 0 0 0 3 3\" ]]\n    [[ $(candidate \"0 0 0 0 0 0\" \"0 0 0 0 0 0\") =\
    \ \"0 0 0 0 0 0\" ]]\n    [[ $(candidate \"1 2 3\" \"-1 -2 -3\") = \"2 4 6\" ]]\n\
    \    [[ $(candidate \"1 2 3 5\" \"-1 2 3 4\") = \"2 0 0 1\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: '/tmp/tmpw7cm7plv.sh: line 14: local: `1 2 3 4 5 1'': invalid variable name
    for name reference

    /tmp/tmpw7cm7plv.sh: line 15: local: `1 2 3 4 2 -2'': invalid variable name for
    name reference

    '
  stdout: ''
  timestamp: 1660002210
- exit_code: 0
  program: "#!/bin/bash\n# I think we all remember that feeling when the result of\
    \ some long-awaited\n# event is finally known. The feelings and thoughts you have\
    \ at that moment are\n# definitely worth noting down and comparing.\n# Your task\
    \ is to determine if a person correctly guessed the results of a number of matches.\n\
    # You are given two arrays of scores and guesses of equal length, where each index\
    \ shows a match. \n# Return an array of the same length denoting how far off each\
    \ guess was. If they have guessed correctly,\n# the value is 0, and if not, the\
    \ value is the absolute difference between the guess and the score.\n# example:\n\
    #\n# $1 is a space-separated list\n# $2 is a space-separated list\ncompare() {\n\
    \    local -a scores=($1)\n    local -a guesses=($2)\n    local -a result=()\n\
    \    for ((i=0; i<${#scores[@]}; i++)); do\n        result[i]=$((${scores[i]}-${guesses[i]}))\n\
    \        if [[ ${result[i]} -lt 0 ]]; then\n            result[i]=$((-${result[i]}))\n\
    \        fi\n    done\n    echo ${result[@]}\n}\n\ncandidate() {\n    compare\
    \ \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"1 2 3 4 5 1\" \"1 2\
    \ 3 4 2 -2\") = \"0 0 0 0 3 3\" ]]\n    [[ $(candidate \"0 0 0 0 0 0\" \"0 0 0\
    \ 0 0 0\") = \"0 0 0 0 0 0\" ]]\n    [[ $(candidate \"1 2 3\" \"-1 -2 -3\") =\
    \ \"2 4 6\" ]]\n    [[ $(candidate \"1 2 3 5\" \"-1 2 3 4\") = \"2 0 0 1\" ]]\n\
    }\n\nrun_test"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660002210
- exit_code: 1
  program: "#!/bin/bash\n# I think we all remember that feeling when the result of\
    \ some long-awaited\n# event is finally known. The feelings and thoughts you have\
    \ at that moment are\n# definitely worth noting down and comparing.\n# Your task\
    \ is to determine if a person correctly guessed the results of a number of matches.\n\
    # You are given two arrays of scores and guesses of equal length, where each index\
    \ shows a match. \n# Return an array of the same length denoting how far off each\
    \ guess was. If they have guessed correctly,\n# the value is 0, and if not, the\
    \ value is the absolute difference between the guess and the score.\n# example:\n\
    #\n# $1 is a space-separated list\n# $2 is a space-separated list\ncompare() {\n\
    \  local -n arr1=$1\n  local -n arr2=$2\n  local -a result\n  for ((i=0; i<${#arr1[@]};\
    \ i++)); do\n    if [[ ${arr1[$i]} -eq ${arr2[$i]} ]]; then\n      result[$i]=0\n\
    \    else\n      result[$i]=$(( ${arr1[$i]} - ${arr2[$i]} ))\n    fi\n  done\n\
    \  echo ${result[@]}\n}\n\ncandidate() {\n    compare \"$@\"\n}\n\nset -e\nrun_test()\
    \ {\n    [[ $(candidate \"1 2 3 4 5 1\" \"1 2 3 4 2 -2\") = \"0 0 0 0 3 3\" ]]\n\
    \    [[ $(candidate \"0 0 0 0 0 0\" \"0 0 0 0 0 0\") = \"0 0 0 0 0 0\" ]]\n  \
    \  [[ $(candidate \"1 2 3\" \"-1 -2 -3\") = \"2 4 6\" ]]\n    [[ $(candidate \"\
    1 2 3 5\" \"-1 2 3 4\") = \"2 0 0 1\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: '/tmp/tmp07pzyhg2.sh: line 14: local: `1 2 3 4 5 1'': invalid variable name
    for name reference

    /tmp/tmp07pzyhg2.sh: line 15: local: `1 2 3 4 2 -2'': invalid variable name for
    name reference

    '
  stdout: ''
  timestamp: 1660002210

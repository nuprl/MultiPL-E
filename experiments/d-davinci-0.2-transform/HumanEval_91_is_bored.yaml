name: HumanEval_91_is_bored
language: d
prompt: "import std.math;\n/*\n\n    You'll be given a string of words, and your task\
  \ is to count the number\n    of boredoms. A boredom is a sentence that starts with\
  \ the word \"I\".\n    Sentences are delimited by '.', '?' or '!'.\n   \n    For\
  \ example:\n    >>> is_bored(\"Hello world\")\n    0L\n    >>> is_bored(\"The sky\
  \ is blue. The sun is shining. I love this weather\")\n    1L\n    \n*/\nlong is_bored(string\
  \ S) \n"
tests: "unittest\n{\n    alias candidate = is_bored;\n\n    assert(candidate(\"Hello\
  \ world\") == 0L);\n    assert(candidate(\"Is the sky blue?\") == 0L);\n    assert(candidate(\"\
  I love It !\") == 1L);\n    assert(candidate(\"bIt\") == 0L);\n    assert(candidate(\"\
  I feel good today. I will be productive. will kill It\") == 2L);\n    assert(candidate(\"\
  You and I are going for a walk\") == 0L);\n}\nvoid main(){}"
completions: ["{\n    long count = 0;\n    string[] sentences = split(S, \".\");\n\
    \    foreach(string sentence; sentences)\n    {\n        if(sentence.length >\
    \ 0)\n        {\n            string[] words = split(sentence, \" \");\n      \
    \      if(words[0] == \"I\")\n            {\n                count++;\n      \
    \      }\n        }\n    }\n    return count;\n}", "{\n    long boredoms = 0;\n\
    \    string[] sentences = split(S, \".\");\n    foreach(string sentence; sentences)\n\
    \    {\n        string[] words = split(sentence, \" \");\n        if(words[0]\
    \ == \"I\")\n            boredoms++;\n    }\n    return boredoms;\n}", "{\n  \
    \  long boredoms = 0;\n    string[] sentences = split(S, \".\");\n    foreach(string\
    \ sentence; sentences)\n    {\n        string[] words = split(sentence, \" \"\
    );\n        if(words[0] == \"I\")\n            boredoms++;\n    }\n    return\
    \ boredoms;\n}", "{\n    long boredoms = 0;\n    string[] sentences = split(S,\
    \ \".\");\n    foreach(string sentence; sentences)\n    {\n        if(sentence.length\
    \ > 0)\n        {\n            string[] words = split(sentence, \" \");\n    \
    \        if(words[0] == \"I\")\n            {\n                boredoms++;\n \
    \           }\n        }\n    }\n    return boredoms;\n}", "{\n    long boredoms\
    \ = 0;\n    string[] sentences = split(S, \".\");\n    foreach(string sentence;\
    \ sentences)\n    {\n        string[] words = split(sentence, \" \");\n      \
    \  if(words[0] == \"I\")\n            boredoms++;\n    }\n    return boredoms;\n\
    }", "{\n    long boredoms = 0;\n    string[] sentences = split(S, \".\");\n  \
    \  foreach(string sentence; sentences)\n    {\n        string[] words = split(sentence,\
    \ \" \");\n        if(words[0] == \"I\")\n            boredoms++;\n    }\n   \
    \ return boredoms;\n}", "{\n    long boredoms = 0;\n    string[] sentences = split(S,\
    \ \".\");\n    foreach(string sentence; sentences)\n    {\n        string[] words\
    \ = split(sentence, \" \");\n        if(words[0] == \"I\")\n            boredoms++;\n\
    \    }\n    return boredoms;\n}", "{\n    long boredoms = 0;\n    string[] sentences\
    \ = split(S, \".\");\n    foreach(string sentence; sentences)\n    {\n       \
    \ string[] words = split(sentence, \" \");\n        if(words[0] == \"I\")\n  \
    \          boredoms++;\n    }\n    return boredoms;\n}", "{\n    long boredoms\
    \ = 0;\n    string[] sentences = split(S, \".\");\n    foreach(sentence; sentences)\n\
    \    {\n        if(sentence.length > 0)\n        {\n            string[] words\
    \ = split(sentence, \" \");\n            if(words[0] == \"I\")\n            {\n\
    \                boredoms++;\n            }\n        }\n    }\n    return boredoms;\n\
    }", "{\n    long boredoms = 0;\n    string[] sentences = split(S, \".\");\n  \
    \  foreach(sentence; sentences)\n    {\n        if(sentence.length > 0)\n    \
    \    {\n            string[] words = split(sentence, \" \");\n            if(words[0]\
    \ == \"I\")\n            {\n                boredoms++;\n            }\n     \
    \   }\n    }\n    return boredoms;\n}", "{\n    long boredoms = 0;\n    string[]\
    \ sentences = split(S, \".\");\n    foreach(string sentence; sentences)\n    {\n\
    \        string[] words = split(sentence, \" \");\n        if(words[0] == \"I\"\
    )\n            boredoms++;\n    }\n    return boredoms;\n}", "{\n    long count\
    \ = 0;\n    string[] sentences = split(S, \".\");\n    foreach(string sentence;\
    \ sentences)\n    {\n        if(sentence.length > 0)\n        {\n            string[]\
    \ words = split(sentence, \" \");\n            if(words[0] == \"I\")\n       \
    \     {\n                count++;\n            }\n        }\n    }\n    return\
    \ count;\n}", "{\n    long boredoms = 0;\n    string[] sentences = split(S, \"\
    .\");\n    foreach(string sentence; sentences)\n    {\n        if(sentence.length\
    \ > 0)\n        {\n            if(sentence[0] == 'I')\n            {\n       \
    \         boredoms++;\n            }\n        }\n    }\n    return boredoms;\n\
    }", "{\n    long boredoms = 0;\n    auto words = split(S, \" \");\n    foreach(word;\
    \ words)\n    {\n        if(word == \"I\")\n            boredoms++;\n    }\n \
    \   return boredoms;\n}", "{\n    long boredoms = 0;\n    string[] sentences =\
    \ split(S, \".\");\n    foreach(string sentence; sentences)\n    {\n        string[]\
    \ words = split(sentence, \" \");\n        if(words[0] == \"I\")\n           \
    \ boredoms++;\n    }\n    return boredoms;\n}", "{\n    long boredoms = 0;\n \
    \   string[] sentences = split(S, \".\");\n    foreach(string sentence; sentences)\n\
    \    {\n        string[] words = split(sentence, \" \");\n        if(words[0]\
    \ == \"I\")\n            boredoms++;\n    }\n    return boredoms;\n}", "{\n  \
    \  long boredoms = 0;\n    string[] sentences = split(S, \".\");\n    foreach(string\
    \ sentence; sentences)\n    {\n        string[] words = split(sentence, \" \"\
    );\n        if(words[0] == \"I\")\n            boredoms++;\n    }\n    return\
    \ boredoms;\n}", "{\n    long boredoms = 0;\n    string[] sentences = split(S,\
    \ \".\");\n    foreach(string sentence; sentences)\n    {\n        if(sentence.length\
    \ > 0)\n        {\n            string[] words = split(sentence, \" \");\n    \
    \        if(words[0] == \"I\")\n            {\n                boredoms++;\n \
    \           }\n        }\n    }\n    return boredoms;\n}", "{\n    long boredoms\
    \ = 0;\n    string[] sentences = split(S, \".\");\n    foreach(string sentence;\
    \ sentences)\n    {\n        if(sentence.length > 0)\n        {\n            string[]\
    \ words = split(sentence, \" \");\n            if(words[0] == \"I\")\n       \
    \     {\n                boredoms++;\n            }\n        }\n    }\n    return\
    \ boredoms;\n}", "{\n    long boredoms = 0;\n    string[] sentences = split(S,\
    \ \".\");\n    foreach(string sentence; sentences)\n    {\n        string[] words\
    \ = split(sentence, \" \");\n        if(words[0] == \"I\")\n            boredoms++;\n\
    \    }\n    return boredoms;\n}", "{\n    long boredoms = 0;\n    string[] sentences\
    \ = split(S, \".\");\n    foreach(string sentence; sentences)\n    {\n       \
    \ string[] words = split(sentence, \" \");\n        if(words[0] == \"I\")\n  \
    \          boredoms++;\n    }\n    return boredoms;\n}", "{\n    long boredoms\
    \ = 0;\n    string[] sentences = split(S, \".\");\n    foreach(sentence; sentences)\n\
    \    {\n        string[] words = split(sentence, \" \");\n        if(words[0]\
    \ == \"I\")\n            boredoms++;\n    }\n    return boredoms;\n}", "{\n  \
    \  long count = 0;\n    string[] words = split(S, \" \");\n    foreach(string\
    \ word; words)\n    {\n        if(word == \"I\")\n            count++;\n    }\n\
    \    return count;\n}", "{\n    long boredoms = 0;\n    string[] sentences = split(S,\
    \ \".\");\n    foreach(sentence; sentences)\n    {\n        string[] words = split(sentence,\
    \ \" \");\n        if(words[0] == \"I\")\n            boredoms++;\n    }\n   \
    \ return boredoms;\n}", "{\n    long boredoms = 0;\n    string[] sentences = split(S,\
    \ \".\");\n    foreach(sentence; sentences)\n    {\n        string[] words = split(sentence,\
    \ \" \");\n        if(words[0] == \"I\")\n            boredoms++;\n    }\n   \
    \ return boredoms;\n}", "{\n    long boredoms = 0;\n    string[] sentences = split(S,\
    \ \".\");\n    foreach(string sentence; sentences)\n    {\n        string[] words\
    \ = split(sentence, \" \");\n        if(words[0] == \"I\")\n            boredoms++;\n\
    \    }\n    return boredoms;\n}", "{\n    long boredoms = 0;\n    string[] sentences\
    \ = split(S, \".\");\n    foreach(string sentence; sentences)\n    {\n       \
    \ if(sentence.length > 0)\n        {\n            string[] words = split(sentence,\
    \ \" \");\n            if(words[0] == \"I\")\n            {\n                boredoms++;\n\
    \            }\n        }\n    }\n    return boredoms;\n}", "{\n    long boredoms\
    \ = 0;\n    string[] sentences = split(S, \".\");\n    foreach(sentence; sentences)\n\
    \    {\n        string[] words = split(sentence, \" \");\n        if(words[0]\
    \ == \"I\")\n            boredoms++;\n    }\n    return boredoms;\n}", "{\n  \
    \  long boredoms = 0;\n    string[] sentences = split(S, \".\");\n    foreach(string\
    \ sentence; sentences)\n    {\n        string[] words = split(sentence, \" \"\
    );\n        if(words[0] == \"I\")\n            boredoms++;\n    }\n    return\
    \ boredoms;\n}", "{\n    long boredoms = 0;\n    string[] sentences = split(S,\
    \ \".\");\n    foreach(sentence; sentences)\n    {\n        if(sentence.length\
    \ > 0)\n        {\n            string[] words = split(sentence, \" \");\n    \
    \        if(words[0] == \"I\")\n            {\n                boredoms++;\n \
    \           }\n        }\n    }\n    return boredoms;\n}", "{\n    long boredoms\
    \ = 0;\n    string[] sentences = split(S, \".\");\n    foreach(string sentence;\
    \ sentences)\n    {\n        string[] words = split(sentence, \" \");\n      \
    \  if(words[0] == \"I\")\n            boredoms++;\n    }\n    return boredoms;\n\
    }", "{\n    long count = 0;\n    string[] sentences = split(S, \".\");\n    foreach(string\
    \ sentence; sentences)\n    {\n        string[] words = split(sentence, \" \"\
    );\n        if(words[0] == \"I\")\n            count++;\n    }\n    return count;\n\
    }", "{\n    long boredoms = 0;\n    string[] sentences = split(S, \".\");\n  \
    \  foreach(string sentence; sentences)\n    {\n        if(sentence.length > 0)\n\
    \        {\n            string[] words = split(sentence, \" \");\n           \
    \ if(words[0] == \"I\")\n            {\n                boredoms++;\n        \
    \    }\n        }\n    }\n    return boredoms;\n}", "{\n    long boredoms = 0;\n\
    \    string[] sentences = split(S, \".\");\n    foreach(string sentence; sentences)\n\
    \    {\n        string[] words = split(sentence, \" \");\n        if(words[0]\
    \ == \"I\")\n            boredoms++;\n    }\n    return boredoms;\n}", "{\n  \
    \  long boredoms = 0;\n    string[] sentences = split(S, \".\");\n    foreach(string\
    \ sentence; sentences)\n    {\n        if(sentence.length > 0)\n        {\n  \
    \          string[] words = split(sentence, \" \");\n            if(words[0] ==\
    \ \"I\")\n            {\n                boredoms++;\n            }\n        }\n\
    \    }\n    return boredoms;\n}", "{\n    long boredoms = 0;\n    string[] sentences\
    \ = split(S, \".\");\n    foreach(string sentence; sentences)\n    {\n       \
    \ string[] words = split(sentence, \" \");\n        if(words[0] == \"I\")\n  \
    \          boredoms++;\n    }\n    return boredoms;\n}", "{\n    long boredoms\
    \ = 0;\n    string[] sentences = split(S, \".\");\n    foreach(string sentence;\
    \ sentences)\n    {\n        if(sentence.length > 0)\n        {\n            string[]\
    \ words = split(sentence, \" \");\n            if(words[0] == \"I\")\n       \
    \     {\n                boredoms++;\n            }\n        }\n    }\n    return\
    \ boredoms;\n}", "{\n    long boredoms = 0;\n    string[] sentences = split(S,\
    \ \".\");\n    foreach(string sentence; sentences)\n    {\n        string[] words\
    \ = split(sentence, \" \");\n        if(words[0] == \"I\")\n            boredoms++;\n\
    \    }\n    return boredoms;\n}", "{\n    long count = 0;\n    string[] words\
    \ = split(S, \" \");\n    foreach(string word; words)\n    {\n        if(word\
    \ == \"I\")\n            count++;\n    }\n    return count;\n}", "{\n    long\
    \ boredoms = 0;\n    string[] sentences = split(S, \".\");\n    foreach(string\
    \ sentence; sentences)\n    {\n        string[] words = split(sentence, \" \"\
    );\n        if(words[0] == \"I\")\n            boredoms++;\n    }\n    return\
    \ boredoms;\n}", "{\n    long boredoms = 0;\n    string[] sentences = split(S,\
    \ \".\");\n    foreach(string sentence; sentences)\n    {\n        string[] words\
    \ = split(sentence, \" \");\n        if(words[0] == \"I\")\n            boredoms++;\n\
    \    }\n    return boredoms;\n}", "{\n    long boredoms = 0;\n    string[] sentences\
    \ = split(S, \".\");\n    foreach(string sentence; sentences)\n    {\n       \
    \ if(sentence.length > 0)\n        {\n            string[] words = split(sentence,\
    \ \" \");\n            if(words[0] == \"I\")\n            {\n                boredoms++;\n\
    \            }\n        }\n    }\n    return boredoms;\n}", "{\n    long boredoms\
    \ = 0;\n    string[] sentences = split(S, \".\");\n    foreach(string sentence;\
    \ sentences)\n    {\n        string[] words = split(sentence, \" \");\n      \
    \  if(words[0] == \"I\")\n            boredoms++;\n    }\n    return boredoms;\n\
    }", "{\n    long boredoms = 0;\n    string[] sentences = split(S, \".\");\n  \
    \  foreach(string sentence; sentences)\n    {\n        if(sentence.length > 0)\n\
    \        {\n            string[] words = split(sentence, \" \");\n           \
    \ if(words[0] == \"I\")\n            {\n                boredoms++;\n        \
    \    }\n        }\n    }\n    return boredoms;\n}", "{\n    long boredoms = 0;\n\
    \    string[] sentences = split(S, \".\");\n    foreach(string sentence; sentences)\n\
    \    {\n        string[] words = split(sentence, \" \");\n        if(words[0]\
    \ == \"I\")\n            boredoms++;\n    }\n    return boredoms;\n}", "{\n  \
    \  long count = 0;\n    string[] sentences = split(S, \".\");\n    foreach(string\
    \ sentence; sentences)\n    {\n        if(sentence.length > 0)\n        {\n  \
    \          string[] words = split(sentence, \" \");\n            if(words[0] ==\
    \ \"I\")\n            {\n                count++;\n            }\n        }\n\
    \    }\n    return count;\n}", "{\n    long boredoms = 0;\n    string[] sentences\
    \ = split(S, \".\");\n    foreach(string sentence; sentences)\n    {\n       \
    \ string[] words = split(sentence, \" \");\n        if(words[0] == \"I\")\n  \
    \          boredoms++;\n    }\n    return boredoms;\n}", "{\n    long boredoms\
    \ = 0;\n    string[] sentences = split(S, \".\");\n    foreach(string sentence;\
    \ sentences)\n    {\n        if(sentence.length > 0)\n        {\n            string[]\
    \ words = split(sentence, \" \");\n            if(words[0] == \"I\")\n       \
    \     {\n                boredoms++;\n            }\n        }\n    }\n    return\
    \ boredoms;\n}", "{\n    long boredoms = 0;\n    string[] sentences = split(S,\
    \ \".\");\n    foreach(string sentence; sentences)\n    {\n        string[] words\
    \ = split(sentence, \" \");\n        if(words[0] == \"I\")\n            boredoms++;\n\
    \    }\n    return boredoms;\n}", "{\n    long boredoms = 0;\n    string[] sentences\
    \ = split(S, \".\");\n    foreach(string sentence; sentences)\n    {\n       \
    \ string[] words = split(sentence, \" \");\n        if(words[0] == \"I\")\n  \
    \          boredoms++;\n    }\n    return boredoms;\n}", "{\n    long boredoms\
    \ = 0;\n    string[] sentences = split(S, \".\");\n    foreach(string sentence;\
    \ sentences)\n    {\n        string[] words = split(sentence, \" \");\n      \
    \  if(words[0] == \"I\")\n            boredoms++;\n    }\n    return boredoms;\n\
    }", "{\n    long boredoms = 0;\n    foreach(string sentence; split(S, \".\"))\n\
    \    {\n        if(sentence.length > 0)\n        {\n            if(sentence[0]\
    \ == 'I')\n                boredoms++;\n        }\n    }\n    return boredoms;\n\
    }", "{\n    long boredoms = 0;\n    string[] sentences = split(S, \".\");\n  \
    \  foreach(string sentence; sentences)\n    {\n        if(sentence.length > 0)\n\
    \        {\n            string[] words = split(sentence, \" \");\n           \
    \ if(words[0] == \"I\")\n            {\n                boredoms++;\n        \
    \    }\n        }\n    }\n    return boredoms;\n}", "{\n    long boredoms = 0;\n\
    \    auto sentences = split(S, \".\");\n    foreach(sentence; sentences)\n   \
    \ {\n        if(sentence.length > 0)\n        {\n            auto words = split(sentence,\
    \ \" \");\n            if(words[0] == \"I\")\n            {\n                boredoms++;\n\
    \            }\n        }\n    }\n    return boredoms;\n}", "{\n    long boredoms\
    \ = 0;\n    string[] sentences = split(S, \".\");\n    foreach(string sentence;\
    \ sentences)\n    {\n        string[] words = split(sentence, \" \");\n      \
    \  if(words[0] == \"I\")\n            boredoms++;\n    }\n    return boredoms;\n\
    }", "{\n    long count = 0;\n    string[] words = split(S, \" .?!\\n\");\n   \
    \ foreach(string word; words)\n    {\n        if(word == \"I\")\n            count++;\n\
    \    }\n    return count;\n}", "{\n    long count = 0;\n    string[] words = split(S,\
    \ \" \");\n    foreach(string word; words)\n    {\n        if(word == \"I\")\n\
    \            count++;\n    }\n    return count;\n}", "{\n    long boredoms = 0;\n\
    \    string[] sentences = split(S, \".\");\n    foreach(string sentence; sentences)\n\
    \    {\n        if(sentence.length > 0)\n        {\n            string[] words\
    \ = split(sentence, \" \");\n            if(words[0] == \"I\")\n            {\n\
    \                boredoms++;\n            }\n        }\n    }\n    return boredoms;\n\
    }", "{\n    long boredoms = 0;\n    long i = 0;\n    long len = S.length;\n  \
    \  while (i < len)\n    {\n        if (S[i] == 'I')\n        {\n            boredoms++;\n\
    \            while (i < len && S[i] != '.' && S[i] != '?' && S[i] != '!')\n  \
    \          {\n                i++;\n            }\n        }\n        i++;\n \
    \   }\n    return boredoms;\n}", "{\n    long boredoms = 0;\n    string[] sentences\
    \ = split(S, \".\");\n    foreach(sentence; sentences)\n    {\n        string[]\
    \ words = split(sentence, \" \");\n        if(words[0] == \"I\")\n           \
    \ boredoms++;\n    }\n    return boredoms;\n}", "{\n    long boredoms = 0;\n \
    \   string[] sentences = split(S, \".\");\n    foreach(sentence; sentences)\n\
    \    {\n        if(sentence.length > 0)\n        {\n            string[] words\
    \ = split(sentence, \" \");\n            if(words[0] == \"I\")\n            {\n\
    \                boredoms++;\n            }\n        }\n    }\n    return boredoms;\n\
    }", "{\n    long boredoms = 0;\n    string[] sentences = split(S, \".\");\n  \
    \  foreach(string sentence; sentences)\n    {\n        string[] words = split(sentence,\
    \ \" \");\n        if(words[0] == \"I\")\n            boredoms++;\n    }\n   \
    \ return boredoms;\n}", "{\n    long count = 0;\n    string[] words = split(S,\
    \ \" \");\n    foreach(string word; words)\n    {\n        if(word == \"I\")\n\
    \            count++;\n    }\n    return count;\n}", "{\n    long boredoms = 0;\n\
    \    string[] sentences = split(S, \".\");\n    foreach(string sentence; sentences)\n\
    \    {\n        if(sentence.length > 0)\n        {\n            string[] words\
    \ = split(sentence, \" \");\n            if(words[0] == \"I\")\n            {\n\
    \                boredoms++;\n            }\n        }\n    }\n    return boredoms;\n\
    }", "{\n    long boredoms = 0;\n    string[] sentences = split(S, \".\");\n  \
    \  foreach(string sentence; sentences)\n    {\n        if(sentence.length > 0)\n\
    \        {\n            string[] words = split(sentence, \" \");\n           \
    \ if(words[0] == \"I\")\n            {\n                boredoms++;\n        \
    \    }\n        }\n    }\n    return boredoms;\n}", "{\n    long boredoms = 0;\n\
    \    string[] sentences = split(S, \".\");\n    foreach(string sentence; sentences)\n\
    \    {\n        string[] words = split(sentence, \" \");\n        if(words[0]\
    \ == \"I\")\n            boredoms++;\n    }\n    return boredoms;\n}", "{\n  \
    \  long boredoms = 0;\n    string[] sentences = split(S, \".\");\n    foreach(string\
    \ sentence; sentences)\n    {\n        string[] words = split(sentence, \" \"\
    );\n        if(words[0] == \"I\")\n            boredoms++;\n    }\n    return\
    \ boredoms;\n}", "{\n    long boredoms = 0;\n    string[] sentences = split(S,\
    \ \".\");\n    foreach(sentence; sentences)\n    {\n        string[] words = split(sentence,\
    \ \" \");\n        if(words[0] == \"I\")\n            boredoms++;\n    }\n   \
    \ return boredoms;\n}", "{\n    long boredoms = 0;\n    string[] sentences = split(S,\
    \ \".\");\n    foreach(string sentence; sentences)\n    {\n        string[] words\
    \ = split(sentence, \" \");\n        if(words[0] == \"I\")\n            boredoms++;\n\
    \    }\n    return boredoms;\n}", "{\n    long boredoms = 0;\n    string[] sentences\
    \ = split(S, \".\");\n    foreach(sentence; sentences)\n    {\n        if(sentence.length\
    \ > 0)\n        {\n            string[] words = split(sentence, \" \");\n    \
    \        if(words[0] == \"I\")\n            {\n                boredoms++;\n \
    \           }\n        }\n    }\n    return boredoms;\n}", "{\n    long boredoms\
    \ = 0;\n    long i = 0;\n    long len = S.length;\n    while (i < len)\n    {\n\
    \        if (S[i] == 'I')\n        {\n            boredoms++;\n            while\
    \ (i < len && S[i] != '.' && S[i] != '?' && S[i] != '!')\n            {\n    \
    \            i++;\n            }\n        }\n        i++;\n    }\n    return boredoms;\n\
    }", "{\n    long boredoms = 0;\n    string[] sentences = split(S, \".\");\n  \
    \  foreach(string sentence; sentences)\n    {\n        if(sentence.length > 0)\n\
    \        {\n            string[] words = split(sentence, \" \");\n           \
    \ if(words[0] == \"I\")\n            {\n                boredoms++;\n        \
    \    }\n        }\n    }\n    return boredoms;\n}", "{\n    long count = 0;\n\
    \    string[] words = split(S, \" \");\n    foreach(string word; words)\n    {\n\
    \        if(word == \"I\")\n            count++;\n    }\n    return count;\n}",
  "{\n    long count = 0;\n    string[] words = split(S, \" \");\n    foreach(string\
    \ word; words)\n    {\n        if(word == \"I\")\n            count++;\n    }\n\
    \    return count;\n}", "{\n    long boredoms = 0;\n    string[] sentences = split(S,\
    \ \".\");\n    foreach(string sentence; sentences)\n    {\n        string[] words\
    \ = split(sentence, \" \");\n        if(words[0] == \"I\")\n            boredoms++;\n\
    \    }\n    return boredoms;\n}", "{\n    long boredoms = 0;\n    auto sentences\
    \ = split(S, \".\");\n    foreach(sentence; sentences)\n    {\n        if(sentence.length\
    \ > 0)\n        {\n            auto words = split(sentence, \" \");\n        \
    \    if(words[0] == \"I\")\n                boredoms++;\n        }\n    }\n  \
    \  return boredoms;\n}", "{\n    long boredoms = 0;\n    string[] sentences =\
    \ split(S, \".\");\n    foreach(string sentence; sentences)\n    {\n        if(sentence.length\
    \ > 0)\n        {\n            string[] words = split(sentence, \" \");\n    \
    \        if(words[0] == \"I\")\n            {\n                boredoms++;\n \
    \           }\n        }\n    }\n    return boredoms;\n}", "{\n    long boredoms\
    \ = 0;\n    string[] sentences = split(S, \".\");\n    foreach(string sentence;\
    \ sentences)\n    {\n        if(sentence.length > 0)\n        {\n            string[]\
    \ words = split(sentence, \" \");\n            if(words[0] == \"I\")\n       \
    \     {\n                boredoms++;\n            }\n        }\n    }\n    return\
    \ boredoms;\n}", "{\n    long count = 0;\n    string[] words = split(S, \" \"\
    );\n    foreach(string word; words)\n    {\n        if(word == \"I\")\n      \
    \      count++;\n    }\n    return count;\n}", "{\n    long count = 0;\n    string[]\
    \ sentences = split(S, \".\");\n    foreach(string sentence; sentences)\n    {\n\
    \        if(sentence.length > 0)\n        {\n            string[] words = split(sentence,\
    \ \" \");\n            if(words[0] == \"I\")\n            {\n                count++;\n\
    \            }\n        }\n    }\n    return count;\n}", "{\n    long boredoms\
    \ = 0;\n    long i = 0;\n    long j = 0;\n    long len = S.length;\n    while\
    \ (i < len)\n    {\n        if (S[i] == 'I')\n        {\n            j = i;\n\
    \            while (j < len && S[j] != '.' && S[j] != '?' && S[j] != '!')\n  \
    \          {\n                j++;\n            }\n            if (j == len ||\
    \ S[j] == '.')\n            {\n                boredoms++;\n            }\n  \
    \          i = j;\n        }\n        i++;\n    }\n    return boredoms;\n}", "{\n\
    \    long boredoms = 0;\n    string[] sentences = split(S, \".\");\n    foreach(string\
    \ sentence; sentences)\n    {\n        string[] words = split(sentence, \" \"\
    );\n        if(words[0] == \"I\")\n            boredoms++;\n    }\n    return\
    \ boredoms;\n}", "{\n    long boredoms = 0;\n    auto words = split(S, \" .!?\"\
    );\n    foreach(word; words)\n    {\n        if(word.length > 0 && word[0] ==\
    \ 'I')\n            boredoms++;\n    }\n    return boredoms;\n}", "{\n    long\
    \ boredoms = 0;\n    string[] sentences = split(S, \".\");\n    foreach(string\
    \ sentence; sentences)\n    {\n        string[] words = split(sentence, \" \"\
    );\n        if(words[0] == \"I\")\n            boredoms++;\n    }\n    return\
    \ boredoms;\n}", "{\n    long count = 0;\n    auto words = split(S, \" \");\n\
    \    foreach(word; words)\n    {\n        if(word == \"I\")\n            count++;\n\
    \    }\n    return count;\n}", "{\n    long boredoms = 0;\n    string[] sentences\
    \ = split(S, '.');\n    foreach(string sentence; sentences)\n    {\n        if(sentence.length\
    \ > 0)\n        {\n            string[] words = split(sentence, ' ');\n      \
    \      if(words[0] == \"I\")\n            {\n                boredoms++;\n   \
    \         }\n        }\n    }\n    return boredoms;\n}", "{\n    long count =\
    \ 0;\n    string[] words = split(S, \" \");\n    foreach(string word; words)\n\
    \    {\n        if(word == \"I\")\n            count++;\n    }\n    return count;\n\
    }", "{\n    long count = 0;\n    string[] words = split(S, \" \");\n    foreach(string\
    \ word; words)\n    {\n        if(word == \"I\")\n            count++;\n    }\n\
    \    return count;\n}", "{\n    long boredoms = 0;\n    string[] sentences = split(S,\
    \ \".\");\n    foreach(sentence; sentences)\n    {\n        string[] words = split(sentence,\
    \ \" \");\n        if(words[0] == \"I\")\n            boredoms++;\n    }\n   \
    \ return boredoms;\n}", "{\n    long boredoms = 0;\n    string[] sentences = split(S,\
    \ \".\");\n    foreach(string sentence; sentences)\n    {\n        string[] words\
    \ = split(sentence, \" \");\n        if(words[0] == \"I\")\n            boredoms++;\n\
    \    }\n    return boredoms;\n}", "{\n    long boredoms = 0;\n    string[] sentences\
    \ = split(S, \".\");\n    foreach(string sentence; sentences)\n    {\n       \
    \ if(sentence.length > 0)\n        {\n            string[] words = split(sentence,\
    \ \" \");\n            if(words[0] == \"I\")\n            {\n                boredoms++;\n\
    \            }\n        }\n    }\n    return boredoms;\n}", "{\n    long count\
    \ = 0;\n    string[] words = split(S, \" \");\n    foreach(string word; words)\n\
    \    {\n        if(word == \"I\")\n            count++;\n    }\n    return count;\n\
    }", "{\n    long boredoms = 0;\n    string[] sentences = split(S, \".\");\n  \
    \  foreach(string sentence; sentences)\n    {\n        if(sentence.length > 0)\n\
    \        {\n            string[] words = split(sentence, \" \");\n           \
    \ if(words[0] == \"I\")\n            {\n                boredoms++;\n        \
    \    }\n        }\n    }\n    return boredoms;\n}", "{\n    long boredoms = 0;\n\
    \    string[] sentences = split(S, \".\");\n    foreach(sentence; sentences)\n\
    \    {\n        if(sentence.length > 0)\n        {\n            string[] words\
    \ = split(sentence, \" \");\n            if(words[0] == \"I\")\n            {\n\
    \                boredoms++;\n            }\n        }\n    }\n    return boredoms;\n\
    }", "{\n    long count = 0;\n    string[] sentences = split(S, \".\");\n    foreach(string\
    \ sentence; sentences)\n    {\n        string[] words = split(sentence, \" \"\
    );\n        if(words[0] == \"I\")\n            count++;\n    }\n    return count;\n\
    }", "{\n    long boredoms = 0;\n    string[] sentences = split(S, \".\");\n  \
    \  foreach(string sentence; sentences)\n    {\n        if(sentence.length > 0)\n\
    \        {\n            string[] words = split(sentence, \" \");\n           \
    \ if(words[0] == \"I\")\n            {\n                boredoms++;\n        \
    \    }\n        }\n    }\n    return boredoms;\n}", "{\n    long boredoms = 0;\n\
    \    string[] sentences = split(S, \".\");\n    foreach(string sentence; sentences)\n\
    \    {\n        string[] words = split(sentence, \" \");\n        if(words[0]\
    \ == \"I\")\n            boredoms++;\n    }\n    return boredoms;\n}", "{\n  \
    \  long boredoms = 0;\n    string[] sentences = split(S, \".\");\n    foreach(string\
    \ sentence; sentences)\n    {\n        string[] words = split(sentence, \" \"\
    );\n        if(words[0] == \"I\")\n            boredoms++;\n    }\n    return\
    \ boredoms;\n}", "{\n    long boredoms = 0;\n    string[] sentences = split(S,\
    \ \".\");\n    foreach(string sentence; sentences)\n    {\n        string[] words\
    \ = split(sentence, \" \");\n        if(words[0] == \"I\")\n            boredoms++;\n\
    \    }\n    return boredoms;\n}", "{\n    long boredoms = 0;\n    string[] sentences\
    \ = split(S, \".\");\n    foreach(string sentence; sentences)\n    {\n       \
    \ if(sentence.length > 0)\n        {\n            string[] words = split(sentence,\
    \ \" \");\n            if(words[0] == \"I\")\n            {\n                boredoms++;\n\
    \            }\n        }\n    }\n    return boredoms;\n}", "{\n    long boredoms\
    \ = 0;\n    string[] sentences = split(S, \".\");\n    foreach(string sentence;\
    \ sentences)\n    {\n        if(sentence.length > 0)\n        {\n            string[]\
    \ words = split(sentence, \" \");\n            if(words[0] == \"I\")\n       \
    \     {\n                boredoms++;\n            }\n        }\n    }\n    return\
    \ boredoms;\n}", "{\n    long boredoms = 0;\n    auto sentences = split(S, \"\
    .\");\n    foreach(sentence; sentences)\n    {\n        if(sentence.length > 0)\n\
    \        {\n            auto words = split(sentence, \" \");\n            if(words[0]\
    \ == \"I\")\n            {\n                boredoms++;\n            }\n     \
    \   }\n    }\n    return boredoms;\n}", "{\n    long count = 0;\n    string[]\
    \ words = split(S, \" \");\n    foreach(string word; words)\n    {\n        if(word\
    \ == \"I\")\n            count++;\n    }\n    return count;\n}", "{\n    long\
    \ boredoms = 0;\n    string[] sentences = split(S, \".\");\n    foreach(string\
    \ sentence; sentences)\n    {\n        if(sentence.length > 0)\n        {\n  \
    \          string[] words = split(sentence, \" \");\n            if(words[0] ==\
    \ \"I\")\n            {\n                boredoms++;\n            }\n        }\n\
    \    }\n    return boredoms;\n}", "{\n    long boredoms = 0;\n    string[] sentences\
    \ = split(S, \".\");\n    foreach(string sentence; sentences) \n    {\n      \
    \  if(sentence.length > 0) \n        {\n            string[] words = split(sentence,\
    \ \" \");\n            if(words[0] == \"I\")\n                boredoms++;\n  \
    \      }\n    }\n    return boredoms;\n}", "{\n    long count = 0;\n    int i\
    \ = 0;\n    int j = 0;\n    int len = S.length;\n    while (i < len)\n    {\n\
    \        if (S[i] == 'I')\n        {\n            count++;\n            while\
    \ (S[i] != '.' && S[i] != '?' && S[i] != '!')\n            {\n               \
    \ i++;\n            }\n        }\n        i++;\n    }\n    return count;\n}",
  "{\n    long boredoms = 0;\n    string[] sentences = split(S, \".\");\n    foreach(sentence;\
    \ sentences)\n    {\n        if(sentence.startsWith(\"I\"))\n            boredoms++;\n\
    \    }\n    return boredoms;\n}", "{\n    long boredoms = 0;\n    string[] sentences\
    \ = split(S, \".\");\n    foreach(sentence; sentences)\n    {\n        string[]\
    \ words = split(sentence, \" \");\n        if(words[0] == \"I\")\n           \
    \ boredoms++;\n    }\n    return boredoms;\n}", "{\n    long boredoms = 0;\n \
    \   string[] sentences = split(S, \".\");\n    foreach(string sentence; sentences)\n\
    \    {\n        if(sentence.length > 0)\n        {\n            string[] words\
    \ = split(sentence, \" \");\n            if(words[0] == \"I\")\n            {\n\
    \                boredoms++;\n            }\n        }\n    }\n    return boredoms;\n\
    }", "{\n    long boredoms = 0;\n    string[] sentences = split(S, \".\");\n  \
    \  foreach(string sentence; sentences)\n    {\n        if(sentence.length > 0)\n\
    \        {\n            string[] words = split(sentence, \" \");\n           \
    \ if(words[0] == \"I\")\n            {\n                boredoms++;\n        \
    \    }\n        }\n    }\n    return boredoms;\n}", "{\n    long boredoms = 0;\n\
    \    string[] sentences = split(S, \".\");\n    foreach(string sentence; sentences)\n\
    \    {\n        string[] words = split(sentence, \" \");\n        if(words[0]\
    \ == \"I\")\n            boredoms++;\n    }\n    return boredoms;\n}", "{\n  \
    \  long boredoms = 0;\n    string[] sentences = split(S, \".\");\n    foreach(string\
    \ sentence; sentences)\n    {\n        if(sentence.length > 0)\n        {\n  \
    \          string[] words = split(sentence, \" \");\n            if(words[0] ==\
    \ \"I\")\n            {\n                boredoms++;\n            }\n        }\n\
    \    }\n    return boredoms;\n}", "{\n    long boredoms = 0;\n    string[] sentences\
    \ = split(S, \".\");\n    foreach(string sentence; sentences)\n    {\n       \
    \ if(sentence.length > 0)\n        {\n            string[] words = split(sentence,\
    \ \" \");\n            if(words[0] == \"I\")\n            {\n                boredoms++;\n\
    \            }\n        }\n    }\n    return boredoms;\n}", "{\n    long boredoms\
    \ = 0;\n    string[] sentences = split(S, \".\");\n    foreach(sentence; sentences)\n\
    \    {\n        if(sentence.length > 0)\n        {\n            string[] words\
    \ = split(sentence, \" \");\n            if(words[0] == \"I\")\n            {\n\
    \                boredoms++;\n            }\n        }\n    }\n    return boredoms;\n\
    }", "{\n    long boredoms = 0;\n    string[] sentences = split(S, \".\");\n  \
    \  foreach(string sentence; sentences)\n    {\n        if(startsWith(sentence,\
    \ \"I\"))\n            boredoms++;\n    }\n    return boredoms;\n}", "{\n    long\
    \ boredoms = 0;\n    string[] sentences = split(S, \".\");\n    foreach(string\
    \ sentence; sentences)\n    {\n        if(sentence.length > 0)\n        {\n  \
    \          string[] words = split(sentence, \" \");\n            if(words[0] ==\
    \ \"I\")\n            {\n                boredoms++;\n            }\n        }\n\
    \    }\n    return boredoms;\n}", "{\n    long boredoms = 0;\n    long i = 0;\n\
    \    long j = 0;\n    long k = 0;\n    long l = 0;\n    long m = 0;\n    long\
    \ n = 0;\n    long o = 0;\n    long p = 0;\n    long q = 0;\n    long r = 0;\n\
    \    long s = 0;\n    long t = 0;\n    long u = 0;\n    long v = 0;\n    long\
    \ w = 0;\n    long x = 0;\n    long y = 0;\n    long z = 0;\n    long a = 0;\n\
    \    long b = 0;\n    long c = 0;\n    long d = 0;\n    long e = 0;\n    long\
    \ f = 0;\n    long g = 0;\n    long h = 0;\n    long ii = 0;\n    long jj = 0;\n\
    \    long kk = 0;\n    long ll = 0;\n    long mm = 0;\n    long nn = 0;\n    long\
    \ oo = 0;\n    long pp = 0;\n    long qq = 0;\n    long rr = 0;\n    long ss =\
    \ 0;\n    long tt = 0;\n    long uu = 0;\n    long vv = 0;\n    long ww = 0;\n\
    \    long xx = 0;\n    long yy = 0;\n    long zz = 0;\n    long aa = 0;\n    long\
    \ bb = 0;\n    long cc = 0;\n    long dd = 0;\n    long ee = 0;\n    long ff =\
    \ 0;\n    long gg = 0;\n    long hh = 0;\n    long iii = 0;\n    long jjj = 0;\n\
    \    long kkk = 0;\n    long lll = 0;\n    long mmm = 0;\n    long nnn = 0;\n\
    \    long ooo = 0;\n    long ppp = 0;\n    long qqq = 0;\n    long rrr = 0;\n\
    \    long sss = 0;\n    long ttt = 0;\n    long uuu = 0;\n    long vvv = 0;\n\
    \    long www = 0;\n    long", "{\n    long boredoms = 0;\n    long i = 0;\n \
    \   long len = S.length;\n    while (i < len)\n    {\n        if (S[i] == 'I')\n\
    \        {\n            boredoms++;\n            while (i < len && S[i] != '.'\
    \ && S[i] != '?' && S[i] != '!')\n            {\n                i++;\n      \
    \      }\n        }\n        i++;\n    }\n    return boredoms;\n}", "{\n    long\
    \ boredoms = 0;\n    string[] sentences = split(S, \".\");\n    foreach(string\
    \ sentence; sentences)\n    {\n        if(sentence.length > 0)\n        {\n  \
    \          string[] words = split(sentence, \" \");\n            if(words[0] ==\
    \ \"I\")\n            {\n                boredoms++;\n            }\n        }\n\
    \    }\n    return boredoms;\n}", "{\n    long boredoms = 0;\n    string[] sentences\
    \ = split(S, \".\");\n    foreach(sentence; sentences)\n    {\n        if(sentence.length\
    \ > 0)\n        {\n            string[] words = split(sentence, \" \");\n    \
    \        if(words[0] == \"I\")\n            {\n                boredoms++;\n \
    \           }\n        }\n    }\n    return boredoms;\n}", "{\n    long boredoms\
    \ = 0;\n    string[] sentences = split(S, \".\");\n    foreach(sentence; sentences)\n\
    \    {\n        if(sentence.length > 0)\n        {\n            string[] words\
    \ = split(sentence, \" \");\n            if(words[0] == \"I\")\n            {\n\
    \                boredoms++;\n            }\n        }\n    }\n    return boredoms;\n\
    }", "{\n    long count = 0;\n    string[] words = split(S, \" \");\n    foreach(string\
    \ word; words)\n    {\n        if(word == \"I\")\n            count++;\n    }\n\
    \    return count;\n}", "{\n    long boredoms = 0;\n    foreach(string sentence;\
    \ S.split(\"[.?!]\"))\n    {\n        if(sentence.split(\" \")[0] == \"I\")\n\
    \            boredoms++;\n    }\n    return boredoms;\n}", "{\n    long boredoms\
    \ = 0;\n    string[] sentences = split(S, \".\");\n    foreach(string sentence;\
    \ sentences)\n    {\n        string[] words = split(sentence, \" \");\n      \
    \  if(words[0] == \"I\")\n            boredoms++;\n    }\n    return boredoms;\n\
    }", "{\n    long boredoms = 0;\n    string[] sentences = split(S, \".\");\n  \
    \  foreach(string sentence; sentences)\n    {\n        if(sentence.length > 0)\n\
    \        {\n            string[] words = split(sentence, \" \");\n           \
    \ if(words[0] == \"I\")\n            {\n                boredoms++;\n        \
    \    }\n        }\n    }\n    return boredoms;\n}", "{\n    long boredoms = 0;\n\
    \    auto words = split(S, \" .?!\", true);\n    foreach(word; words)\n    {\n\
    \        if(word.length > 0 && word[0] == 'I')\n            boredoms++;\n    }\n\
    \    return boredoms;\n}", "{\n    long boredoms = 0;\n    auto sentences = split(S,\
    \ \".\");\n    foreach(sentence; sentences)\n    {\n        auto words = split(sentence,\
    \ \" \");\n        if(words[0] == \"I\")\n            boredoms++;\n    }\n   \
    \ return boredoms;\n}", "{\n    long boredoms = 0;\n    string[] sentences = split(S,\
    \ \".\");\n    foreach(string sentence; sentences)\n    {\n        if(sentence.length\
    \ > 0)\n        {\n            string[] words = split(sentence, \" \");\n    \
    \        if(words[0] == \"I\")\n            {\n                boredoms++;\n \
    \           }\n        }\n    }\n    return boredoms;\n}", "{\n    long count\
    \ = 0;\n    string[] sentences = split(S, \".\");\n    foreach(string sentence;\
    \ sentences)\n    {\n        if(sentence.length > 0)\n        {\n            string[]\
    \ words = split(sentence, \" \");\n            if(words[0] == \"I\")\n       \
    \     {\n                count++;\n            }\n        }\n    }\n    return\
    \ count;\n}", "{\n    long boredoms = 0;\n    string[] sentences = split(S, \"\
    .\");\n    foreach(sentence; sentences)\n    {\n        string[] words = split(sentence,\
    \ \" \");\n        if(words[0] == \"I\")\n            boredoms++;\n    }\n   \
    \ return boredoms;\n}", "{\n    long boredoms = 0;\n    string[] sentences = split(S,\
    \ \".\");\n    foreach(string sentence; sentences)\n    {\n        string[] words\
    \ = split(sentence, \" \");\n        if(words[0] == \"I\")\n            boredoms++;\n\
    \    }\n    return boredoms;\n}", "{\n    long boredoms = 0;\n    string[] sentences\
    \ = split(S, \".\");\n    foreach(string sentence; sentences)\n    {\n       \
    \ if(sentence.length > 0)\n        {\n            string[] words = split(sentence,\
    \ \" \");\n            if(words[0] == \"I\")\n            {\n                boredoms++;\n\
    \            }\n        }\n    }\n    return boredoms;\n}", "{\n    long boredoms\
    \ = 0;\n    string[] sentences = split(S, \".\");\n    foreach(sentence; sentences)\n\
    \    {\n        string[] words = split(sentence, \" \");\n        if(words[0]\
    \ == \"I\")\n            boredoms++;\n    }\n    return boredoms;\n}", "{\n  \
    \  long boredoms = 0;\n    string[] sentences = split(S, \".\");\n    foreach(string\
    \ sentence; sentences)\n    {\n        string[] words = split(sentence, \" \"\
    );\n        if(words[0] == \"I\")\n            boredoms++;\n    }\n    return\
    \ boredoms;\n}", "{\n    long boredoms = 0;\n    string[] sentences = split(S,\
    \ \".!?\");\n    foreach(sentence; sentences)\n    {\n        if(sentence.length\
    \ > 0 && sentence[0] == 'I')\n            boredoms++;\n    }\n    return boredoms;\n\
    }", "{\n    long boredoms = 0;\n    string[] sentences = split(S, \".\");\n  \
    \  foreach(sentence; sentences)\n    {\n        string[] words = split(sentence,\
    \ \" \");\n        if(words[0] == \"I\")\n            boredoms++;\n    }\n   \
    \ return boredoms;\n}", "{\n    long boredoms = 0;\n    string[] sentences = split(S,\
    \ \".\");\n    foreach(sentence; sentences)\n    {\n        string[] words = split(sentence,\
    \ \" \");\n        if(words[0] == \"I\")\n            boredoms++;\n    }\n   \
    \ return boredoms;\n}", "{\n    long boredoms = 0;\n    string[] sentences = split(S,\
    \ \".\");\n    foreach(string sentence; sentences)\n    {\n        string[] words\
    \ = split(sentence, \" \");\n        if(words[0] == \"I\")\n            boredoms++;\n\
    \    }\n    return boredoms;\n}", "{\n    long boredoms = 0;\n    string[] sentences\
    \ = split(S, \".\");\n    foreach(string sentence; sentences)\n    {\n       \
    \ if(sentence.length > 0)\n        {\n            string[] words = split(sentence,\
    \ \" \");\n            if(words[0] == \"I\")\n            {\n                boredoms++;\n\
    \            }\n        }\n    }\n    return boredoms;\n}", "{\n    long boredoms\
    \ = 0;\n    string[] sentences = split(S, \".\");\n    foreach(string sentence;\
    \ sentences)\n    {\n        string[] words = split(sentence, \" \");\n      \
    \  if(words[0] == \"I\")\n            boredoms++;\n    }\n    return boredoms;\n\
    }", "{\n    long boredoms = 0;\n    long i = 0;\n    long len = S.length;\n  \
    \  while (i < len)\n    {\n        if (S[i] == 'I')\n        {\n            boredoms++;\n\
    \            while (i < len && S[i] != '.' && S[i] != '?' && S[i] != '!')\n  \
    \          {\n                i++;\n            }\n        }\n        i++;\n \
    \   }\n    return boredoms;\n}", "{\n    long boredoms = 0;\n    string[] sentences\
    \ = split(S, \".\");\n    foreach(string sentence; sentences)\n    {\n       \
    \ if(sentence.length > 0)\n        {\n            string[] words = split(sentence,\
    \ \" \");\n            if(words[0] == \"I\")\n            {\n                boredoms++;\n\
    \            }\n        }\n    }\n    return boredoms;\n}", "{\n    long count\
    \ = 0;\n    string[] words = split(S, \" \");\n    foreach(string word; words)\n\
    \    {\n        if(word == \"I\")\n            count++;\n    }\n    return count;\n\
    }", "{\n    long boredoms = 0;\n    string[] sentences = split(S, \".\");\n  \
    \  foreach(sentence; sentences)\n    {\n        string[] words = split(sentence,\
    \ \" \");\n        if(words[0] == \"I\")\n            boredoms++;\n    }\n   \
    \ return boredoms;\n}", "{\n    long boredoms = 0;\n    string[] sentences = split(S,\
    \ \".\");\n    foreach(sentence; sentences)\n    {\n        string[] words = split(sentence,\
    \ \" \");\n        if(words[0] == \"I\")\n            boredoms++;\n    }\n   \
    \ return boredoms;\n}", "{\n    long boredoms = 0;\n    string[] sentences = split(S,\
    \ \".\");\n    foreach(string sentence; sentences)\n    {\n        if(sentence.length\
    \ > 0)\n        {\n            string[] words = split(sentence, \" \");\n    \
    \        if(words[0] == \"I\")\n            {\n                boredoms++;\n \
    \           }\n        }\n    }\n    return boredoms;\n}", "{\n    long boredoms\
    \ = 0;\n    string[] sentences = split(S, \".\");\n    foreach(string sentence;\
    \ sentences)\n    {\n        if(sentence.length > 0)\n        {\n            string[]\
    \ words = split(sentence, \" \");\n            if(words[0] == \"I\")\n       \
    \     {\n                boredoms++;\n            }\n        }\n    }\n    return\
    \ boredoms;\n}", "{\n    long boredoms = 0;\n    string[] sentences = split(S,\
    \ \".\");\n    foreach(string sentence; sentences)\n    {\n        if(sentence.length\
    \ > 0)\n        {\n            if(sentence[0] == 'I')\n            {\n       \
    \         boredoms++;\n            }\n        }\n    }\n    return boredoms;\n\
    }", "{\n    long boredoms = 0;\n    string[] sentences = split(S, \".\");\n  \
    \  foreach(sentence; sentences)\n    {\n        if(sentence.length > 0)\n    \
    \    {\n            string[] words = split(sentence, \" \");\n            if(words[0]\
    \ == \"I\")\n            {\n                boredoms++;\n            }\n     \
    \   }\n    }\n    return boredoms;\n}", "{\n    long count = 0;\n    string[]\
    \ words = split(S, \" .?!\");\n    foreach(string word; words)\n    {\n      \
    \  if(word == \"I\")\n            count++;\n    }\n    return count;\n}", "{\n\
    \    long boredoms = 0;\n    string[] sentences = split(S, \".\");\n    foreach(string\
    \ sentence; sentences)\n    {\n        if(sentence.length > 0)\n        {\n  \
    \          string[] words = split(sentence, \" \");\n            if(words[0] ==\
    \ \"I\")\n            {\n                boredoms++;\n            }\n        }\n\
    \    }\n    return boredoms;\n}", "{\n    long boredoms = 0;\n    string[] sentences\
    \ = split(S, \".\");\n    foreach(string sentence; sentences)\n    {\n       \
    \ if(sentence.length > 0)\n        {\n            string[] words = split(sentence,\
    \ \" \");\n            if(words[0] == \"I\")\n            {\n                boredoms++;\n\
    \            }\n        }\n    }\n    return boredoms;\n}", "{\n    long boredoms\
    \ = 0;\n    string[] sentences = split(S, \".\");\n    foreach(string sentence;\
    \ sentences)\n    {\n        if(sentence.length > 0)\n        {\n            string[]\
    \ words = split(sentence, \" \");\n            if(words[0] == \"I\")\n       \
    \     {\n                boredoms++;\n            }\n        }\n    }\n    return\
    \ boredoms;\n}", "{\n    long boredoms = 0;\n    auto sentences = split(S, \"\
    .!?\");\n    foreach(sentence; sentences)\n    {\n        if(sentence.length >\
    \ 0 && sentence[0..1] == \"I \")\n            boredoms++;\n    }\n    return boredoms;\n\
    }", "{\n    long boredoms = 0;\n    string[] sentences = split(S, \".\");\n  \
    \  foreach(sentence; sentences)\n    {\n        string[] words = split(sentence,\
    \ \" \");\n        if(words[0] == \"I\")\n            boredoms++;\n    }\n   \
    \ return boredoms;\n}", "{\n    long boredoms = 0;\n    string[] words = split(S,\
    \ \" \");\n    foreach(string word; words)\n    {\n        if(word == \"I\")\n\
    \            boredoms++;\n    }\n    return boredoms;\n}", "{\n    long boredoms\
    \ = 0;\n    string[] sentences = split(S, \".\");\n    foreach(string sentence;\
    \ sentences)\n    {\n        string[] words = split(sentence, \" \");\n      \
    \  if(words[0] == \"I\")\n            boredoms++;\n    }\n    return boredoms;\n\
    }", "{\n    long count = 0;\n    string[] sentences = split(S, \".\");\n    foreach(string\
    \ sentence; sentences)\n    {\n        if(sentence.length > 0)\n        {\n  \
    \          string[] words = split(sentence, \" \");\n            if(words[0] ==\
    \ \"I\")\n            {\n                count++;\n            }\n        }\n\
    \    }\n    return count;\n}", "{\n    long boredoms = 0;\n    string[] sentences\
    \ = split(S, \".\");\n    foreach(string sentence; sentences)\n    {\n       \
    \ if(sentence.length > 0)\n        {\n            string[] words = split(sentence,\
    \ \" \");\n            if(words[0] == \"I\")\n            {\n                boredoms++;\n\
    \            }\n        }\n    }\n    return boredoms;\n}", "{\n    long boredoms\
    \ = 0;\n    string[] sentences = split(S, \".\");\n    foreach(string sentence;\
    \ sentences)\n    {\n        string[] words = split(sentence, \" \");\n      \
    \  if(words[0] == \"I\")\n            boredoms++;\n    }\n    return boredoms;\n\
    }", "{\n    long boredoms = 0;\n    string[] sentences = split(S, \".\");\n  \
    \  foreach(string sentence; sentences)\n    {\n        if(sentence.length > 0)\n\
    \        {\n            string[] words = split(sentence, \" \");\n           \
    \ if(words[0] == \"I\")\n            {\n                boredoms++;\n        \
    \    }\n        }\n    }\n    return boredoms;\n}", "{\n    long boredoms = 0;\n\
    \    string[] sentences = split(S, \".\");\n    foreach(sentence; sentences)\n\
    \    {\n        string[] words = split(sentence, \" \");\n        if(words[0]\
    \ == \"I\")\n            boredoms++;\n    }\n    return boredoms;\n}", "{\n  \
    \  long boredoms = 0;\n    string[] sentences = split(S, \".\");\n    foreach(string\
    \ sentence; sentences)\n    {\n        string[] words = split(sentence, \" \"\
    );\n        if(words[0] == \"I\")\n            boredoms++;\n    }\n    return\
    \ boredoms;\n}", "{\n    long boredoms = 0;\n    string[] sentences = split(S,\
    \ \".\");\n    foreach(sentence; sentences)\n    {\n        string[] words = split(sentence,\
    \ \" \");\n        if(words[0] == \"I\")\n            boredoms++;\n    }\n   \
    \ return boredoms;\n}", "{\n    long boredoms = 0;\n    string[] sentences = split(S,\
    \ \".\");\n    foreach(string sentence; sentences)\n    {\n        string[] words\
    \ = split(sentence, \" \");\n        if(words[0] == \"I\")\n            boredoms++;\n\
    \    }\n    return boredoms;\n}", "{\n    long boredoms = 0;\n    long i = 0;\n\
    \    long j = 0;\n    long k = 0;\n    long l = 0;\n    long m = 0;\n    long\
    \ n = 0;\n    long o = 0;\n    long p = 0;\n    long q = 0;\n    long r = 0;\n\
    \    long s = 0;\n    long t = 0;\n    long u = 0;\n    long v = 0;\n    long\
    \ w = 0;\n    long x = 0;\n    long y = 0;\n    long z = 0;\n    long a = 0;\n\
    \    long b = 0;\n    long c = 0;\n    long d = 0;\n    long e = 0;\n    long\
    \ f = 0;\n    long g = 0;\n    long h = 0;\n    long ii = 0;\n    long jj = 0;\n\
    \    long kk = 0;\n    long ll = 0;\n    long mm = 0;\n    long nn = 0;\n    long\
    \ oo = 0;\n    long pp = 0;\n    long qq = 0;\n    long rr = 0;\n    long ss =\
    \ 0;\n    long tt = 0;\n    long uu = 0;\n    long vv = 0;\n    long ww = 0;\n\
    \    long xx = 0;\n    long yy = 0;\n    long zz = 0;\n    long aa = 0;\n    long\
    \ bb = 0;\n    long cc = 0;\n    long dd = 0;\n    long ee = 0;\n    long ff =\
    \ 0;\n    long gg = 0;\n    long hh = 0;\n    long iii = 0;\n    long jjj = 0;\n\
    \    long kkk = 0;\n    long lll = 0;\n    long mmm = 0;\n    long nnn = 0;\n\
    \    long ooo = 0;\n    long ppp = 0;\n    long qqq = 0;\n    long rrr = 0;\n\
    \    long sss = 0;\n    long ttt = 0;\n    long uuu = 0;\n    long vvv = 0;\n\
    \    long www = 0;\n    long", "{\n    long boredoms = 0;\n    string[] sentences\
    \ = split(S, \".\");\n    foreach(string sentence; sentences)\n    {\n       \
    \ string[] words = split(sentence, \" \");\n        if(words[0] == \"I\")\n  \
    \          boredoms++;\n    }\n    return boredoms;\n}", "{\n    long count =\
    \ 0;\n    string[] sentences = split(S, \".\");\n    foreach(string sentence;\
    \ sentences)\n    {\n        string[] words = split(sentence, \" \");\n      \
    \  if(words[0] == \"I\")\n            count++;\n    }\n    return count;\n}",
  "{\n    long boredoms = 0;\n    auto words = split(S, \" \");\n    foreach(word;\
    \ words)\n    {\n        if(word == \"I\")\n            boredoms++;\n    }\n \
    \   return boredoms;\n}", "{\n    long boredoms = 0;\n    string[] sentences =\
    \ split(S, \".\");\n    foreach(string sentence; sentences)\n    {\n        string[]\
    \ words = split(sentence, \" \");\n        if(words[0] == \"I\")\n           \
    \ boredoms++;\n    }\n    return boredoms;\n}", "{\n    long boredoms = 0;\n \
    \   string[] sentences = split(S, \".\");\n    foreach(sentence; sentences)\n\
    \    {\n        string[] words = split(sentence, \" \");\n        if(words[0]\
    \ == \"I\")\n            boredoms++;\n    }\n    return boredoms;\n}", "{\n  \
    \  long boredoms = 0;\n    string[] sentences = split(S, \".\");\n    foreach(string\
    \ sentence; sentences)\n    {\n        if(sentence.length > 0)\n        {\n  \
    \          string[] words = split(sentence, \" \");\n            if(words[0] ==\
    \ \"I\")\n            {\n                boredoms++;\n            }\n        }\n\
    \    }\n    return boredoms;\n}", "{\n    long boredoms = 0;\n    string[] sentences\
    \ = split(S, \".\");\n    foreach(string sentence; sentences)\n    {\n       \
    \ if(sentence.length > 0)\n        {\n            string[] words = split(sentence,\
    \ \" \");\n            if(words[0] == \"I\")\n            {\n                boredoms++;\n\
    \            }\n        }\n    }\n    return boredoms;\n}", "{\n    long boredoms\
    \ = 0;\n    string[] sentences = split(S, \".\");\n    foreach(string sentence;\
    \ sentences)\n    {\n        if(sentence.length > 0)\n        {\n            string[]\
    \ words = split(sentence, \" \");\n            if(words[0] == \"I\")\n       \
    \     {\n                boredoms++;\n            }\n        }\n    }\n    return\
    \ boredoms;\n}", "{\n    long count = 0;\n    foreach(word; split(S, \" \"))\n\
    \    {\n        if(word == \"I\")\n        {\n            count++;\n        }\n\
    \    }\n    return count;\n}", "{\n    long boredoms = 0;\n    string[] sentences\
    \ = split(S, \".\");\n    foreach(string sentence; sentences)\n    {\n       \
    \ if(sentence.length > 0)\n        {\n            string[] words = split(sentence,\
    \ \" \");\n            if(words[0] == \"I\")\n            {\n                boredoms++;\n\
    \            }\n        }\n    }\n    return boredoms;\n}", "{\n    long boredoms\
    \ = 0;\n    string[] sentences = split(S, \".\");\n    foreach(sentence; sentences)\n\
    \    {\n        if(sentence.length > 0)\n        {\n            string[] words\
    \ = split(sentence, \" \");\n            if(words[0] == \"I\")\n            {\n\
    \                boredoms++;\n            }\n        }\n    }\n    return boredoms;\n\
    }", "{\n    auto words = split(S, \" .!?\");\n    long boredoms = 0;\n    foreach(word;\
    \ words)\n    {\n        if(word.length > 0 && word[0] == 'I')\n            boredoms++;\n\
    \    }\n    return boredoms;\n}", "{\n    long boredoms = 0;\n    string[] sentences\
    \ = split(S, \".\");\n    foreach(string sentence; sentences)\n    {\n       \
    \ string[] words = split(sentence, \" \");\n        if(words[0] == \"I\")\n  \
    \          boredoms++;\n    }\n    return boredoms;\n}", "{\n    long boredoms\
    \ = 0;\n    string[] sentences = split(S, \".\");\n    foreach(string sentence;\
    \ sentences)\n    {\n        if(sentence.length > 0)\n        {\n            string[]\
    \ words = split(sentence, \" \");\n            if(words[0] == \"I\")\n       \
    \     {\n                boredoms++;\n            }\n        }\n    }\n    return\
    \ boredoms;\n}", "{\n    long boredoms = 0;\n    string[] sentences = split(S,\
    \ \".\");\n    foreach(string sentence; sentences)\n    {\n        if(sentence.length\
    \ > 0)\n        {\n            string[] words = split(sentence, \" \");\n    \
    \        if(words[0] == \"I\")\n            {\n                boredoms++;\n \
    \           }\n        }\n    }\n    return boredoms;\n}", "{\n    long boredoms\
    \ = 0;\n    string[] sentences = split(S, \".\");\n    foreach(string sentence;\
    \ sentences)\n    {\n        if(startsWith(sentence, \"I\"))\n            boredoms++;\n\
    \    }\n    return boredoms;\n}", "{\n    long boredoms = 0;\n    string[] sentences\
    \ = split(S, \".\");\n    foreach(string sentence; sentences)\n    {\n       \
    \ string[] words = split(sentence, \" \");\n        if(words[0] == \"I\")\n  \
    \          boredoms++;\n    }\n    return boredoms;\n}", "{\n    long boredoms\
    \ = 0;\n    string[] sentences = split(S, \".\");\n    foreach(sentence; sentences)\n\
    \    {\n        string[] words = split(sentence, \" \");\n        if(words[0]\
    \ == \"I\")\n            boredoms++;\n    }\n    return boredoms;\n}", "{\n  \
    \  long boredoms = 0;\n    string[] sentences = split(S, \".\");\n    foreach(string\
    \ sentence; sentences)\n    {\n        string[] words = split(sentence, \" \"\
    );\n        if(words[0] == \"I\")\n            boredoms++;\n    }\n    return\
    \ boredoms;\n}", "{\n    long count = 0;\n    string[] sentences = split(S, \"\
    .\");\n    foreach(string sentence; sentences)\n    {\n        string[] words\
    \ = split(sentence, \" \");\n        if(words[0] == \"I\")\n            count++;\n\
    \    }\n    return count;\n}", "{\n    long boredoms = 0;\n    string[] sentences\
    \ = split(S, \".\");\n    foreach(string sentence; sentences)\n    {\n       \
    \ string[] words = split(sentence, \" \");\n        if(words[0] == \"I\")\n  \
    \          boredoms++;\n    }\n    return boredoms;\n}", "{\n    long boredoms\
    \ = 0;\n    string[] sentences = split(S, \".\");\n    foreach(sentence; sentences)\n\
    \    {\n        string[] words = split(sentence, \" \");\n        if(words[0]\
    \ == \"I\")\n            boredoms++;\n    }\n    return boredoms;\n}", "{\n  \
    \  long count = 0;\n    string[] sentences = split(S, \".\");\n    foreach(sentence;\
    \ sentences)\n    {\n        if(sentence.length > 0)\n        {\n            string[]\
    \ words = split(sentence, \" \");\n            if(words[0] == \"I\")\n       \
    \     {\n                count++;\n            }\n        }\n    }\n    return\
    \ count;\n}", "{\n    long boredoms = 0;\n    auto sentences = split(S, \".\"\
    );\n    for (auto sentence : sentences)\n    {\n        auto words = split(sentence,\
    \ \" \");\n        if (words[0] == \"I\")\n            boredoms++;\n    }\n  \
    \  return boredoms;\n}", "{\n    long boredoms = 0;\n    string[] sentences =\
    \ split(S, \".\");\n    foreach(string sentence; sentences)\n    {\n        string[]\
    \ words = split(sentence, \" \");\n        if(words[0] == \"I\")\n           \
    \ boredoms++;\n    }\n    return boredoms;\n}", "{\n    long boredoms = 0;\n \
    \   string[] sentences = split(S, \".\");\n    foreach(string sentence; sentences)\n\
    \    {\n        if(sentence.length > 0)\n        {\n            string[] words\
    \ = split(sentence, \" \");\n            if(words[0] == \"I\")\n            {\n\
    \                boredoms++;\n            }\n        }\n    }\n    return boredoms;\n\
    }", "{\n    long boredoms = 0;\n    string[] sentences = split(S, \".\");\n  \
    \  foreach(string sentence; sentences)\n    {\n        if(sentence.length > 0)\n\
    \        {\n            string[] words = split(sentence, \" \");\n           \
    \ if(words[0] == \"I\")\n            {\n                boredoms++;\n        \
    \    }\n        }\n    }\n    return boredoms;\n}", "{\n    long boredoms = 0;\n\
    \    string[] sentences = split(S, \".\");\n    foreach(string sentence; sentences)\n\
    \    {\n        if(sentence.length > 0)\n        {\n            string[] words\
    \ = split(sentence, \" \");\n            if(words[0] == \"I\")\n            {\n\
    \                boredoms++;\n            }\n        }\n    }\n    return boredoms;\n\
    }", "{\n    long count = 0;\n    string[] words = split(S, \" \");\n    foreach(string\
    \ word; words)\n    {\n        if(word == \"I\")\n            count++;\n    }\n\
    \    return count;\n}", "{\n    long boredoms = 0;\n    auto words = split(S,\
    \ \" \");\n    foreach(word; words)\n    {\n        if(word == \"I\")\n      \
    \      boredoms++;\n    }\n    return boredoms;\n}", "{\n    long count = 0;\n\
    \    string[] words = split(S, \".\");\n    foreach(string word; words)\n    {\n\
    \        string[] words2 = split(word, \"?\");\n        foreach(string word2;\
    \ words2)\n        {\n            string[] words3 = split(word2, \"!\");\n   \
    \         foreach(string word3; words3)\n            {\n                if(word3.length\
    \ > 0)\n                {\n                    if(word3[0] == 'I')\n         \
    \           {\n                        count++;\n                    }\n     \
    \           }\n            }\n        }\n    }\n    return count;\n}", "{\n  \
    \  long boredoms = 0;\n    string[] sentences = split(S, \".\");\n    foreach(string\
    \ sentence; sentences)\n    {\n        string[] words = split(sentence, \" \"\
    );\n        if(words[0] == \"I\")\n            boredoms++;\n    }\n    return\
    \ boredoms;\n}", "{\n    long boredoms = 0;\n    string[] sentences = split(S,\
    \ \".\");\n    foreach(string sentence; sentences)\n    {\n        string[] words\
    \ = split(sentence, \" \");\n        if(words[0] == \"I\")\n            boredoms++;\n\
    \    }\n    return boredoms;\n}", "{\n    long boredoms = 0;\n    string[] sentences\
    \ = split(S, \".\");\n    foreach(string sentence; sentences)\n    {\n       \
    \ string[] words = split(sentence, \" \");\n        if(words[0] == \"I\")\n  \
    \          boredoms++;\n    }\n    return boredoms;\n}"]
stop_tokens:
- "\n\n"
- "\nvoid"
- "\nbool"
- "\nint"

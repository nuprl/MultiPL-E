language: d
name: HumanEval_163_generate_integers
results:
- exit_code: 1
  program: "import std.typecons;\nimport std.math;\n/*\n\n    Given two positive integers\
    \ a and b, return the even digits between a\n    and b, in ascending order.\n\n\
    \    For example:\n    >>> generate_integers(2L, 8L)\n    [2L, 4L, 6L, 8L]\n \
    \   >>> generate_integers(8L, 2L)\n    [2L, 4L, 6L, 8L]\n    >>> generate_integers(10L,\
    \ 14L)\n    []\n    \n*/\nlong[] generate_integers(long a, long b) \n{\n    long[]\
    \ result;\n    if (a > b)\n    {\n        result = generate_integers(b, a);\n\
    \    }\n    else\n    {\n        result = [];\n        foreach (i; a..b+1)\n \
    \       {\n            if (i % 2 == 0)\n            {\n                result\
    \ ~= i;\n            }\n        }\n    }\n    return result;\n}\nunittest\n{\n\
    \    alias candidate = generate_integers;\n\n    assert(candidate(2L, 10L) ==\
    \ [2L, 4L, 6L, 8L]);\n    assert(candidate(10L, 2L) == [2L, 4L, 6L, 8L]);\n  \
    \  assert(candidate(132L, 2L) == [2L, 4L, 6L, 8L]);\n    assert(candidate(17L,\
    \ 89L) == []);\n}\nvoid main(){}"
  status: Exception
  stderr: 'core.exception.AssertError@/tmp/tmph7b7qda4.d(41): unittest failure

    ----------------

    ??:? _d_unittestp [0x4283cd]

    ??:? void tmph7b7qda4.__unittest_L37_C1() [0x427f60]

    ??:? void tmph7b7qda4.__modtest() [0x428150]

    ??:? int core.runtime.runModuleUnitTests().__foreachbody2(object.ModuleInfo*)
    [0x42cda3]

    ??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)).__lambda2(immutable(object.ModuleInfo*))
    [0x42bc36]

    ??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))).__foreachbody2(ref
    rt.sections_elf_shared.DSO) [0x430689]

    ??:? int rt.sections_elf_shared.DSO.opApply(scope int delegate(ref rt.sections_elf_shared.DSO))
    [0x430b38]

    ??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*)))
    [0x430615]

    ??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)) [0x42bc0d]

    ??:? runModuleUnitTests [0x42cb79]

    ??:? void rt.dmain2._d_run_main(int, char**, extern (C) int function(char[][])*).runAll()
    [0x42881c]

    ??:? void rt.dmain2._d_r'
  stdout: ''
  timestamp: 1660163090
- exit_code: 1
  program: "import std.typecons;\nimport std.math;\n/*\n\n    Given two positive integers\
    \ a and b, return the even digits between a\n    and b, in ascending order.\n\n\
    \    For example:\n    >>> generate_integers(2L, 8L)\n    [2L, 4L, 6L, 8L]\n \
    \   >>> generate_integers(8L, 2L)\n    [2L, 4L, 6L, 8L]\n    >>> generate_integers(10L,\
    \ 14L)\n    []\n    \n*/\nlong[] generate_integers(long a, long b) \n{\n    long[]\
    \ result;\n    if (a > b) \n    {\n        result = generate_integers(b, a);\n\
    \    } \n    else \n    {\n        if (a % 2 == 0) \n        {\n            result\
    \ = new long[(b - a) / 2 + 1];\n            foreach (i, ref e; result) \n    \
    \        {\n                e = a + 2 * i;\n            }\n        } \n      \
    \  else \n        {\n            result = new long[(b - a - 1) / 2 + 1];\n   \
    \         foreach (i, ref e; result) \n            {\n                e = a +\
    \ 2 * i + 1;\n            }\n        }\n    }\n    return result;\n}\nunittest\n\
    {\n    alias candidate = generate_integers;\n\n    assert(candidate(2L, 10L) ==\
    \ [2L, 4L, 6L, 8L]);\n    assert(candidate(10L, 2L) == [2L, 4L, 6L, 8L]);\n  \
    \  assert(candidate(132L, 2L) == [2L, 4L, 6L, 8L]);\n    assert(candidate(17L,\
    \ 89L) == []);\n}\nvoid main(){}"
  status: Exception
  stderr: 'core.exception.AssertError@/tmp/tmp715wepst.d(49): unittest failure

    ----------------

    ??:? _d_unittestp [0x42842d]

    ??:? void tmp715wepst.__unittest_L45_C1() [0x427fbc]

    ??:? void tmp715wepst.__modtest() [0x4281ac]

    ??:? int core.runtime.runModuleUnitTests().__foreachbody2(object.ModuleInfo*)
    [0x42c473]

    ??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)).__lambda2(immutable(object.ModuleInfo*))
    [0x42b306]

    ??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))).__foreachbody2(ref
    rt.sections_elf_shared.DSO) [0x430591]

    ??:? int rt.sections_elf_shared.DSO.opApply(scope int delegate(ref rt.sections_elf_shared.DSO))
    [0x430a40]

    ??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*)))
    [0x43051d]

    ??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)) [0x42b2dd]

    ??:? runModuleUnitTests [0x42c249]

    ??:? void rt.dmain2._d_run_main(int, char**, extern (C) int function(char[][])*).runAll()
    [0x42887c]

    ??:? void rt.dmain2._d_r'
  stdout: ''
  timestamp: 1660163090
- exit_code: 1
  program: "import std.typecons;\nimport std.math;\n/*\n\n    Given two positive integers\
    \ a and b, return the even digits between a\n    and b, in ascending order.\n\n\
    \    For example:\n    >>> generate_integers(2L, 8L)\n    [2L, 4L, 6L, 8L]\n \
    \   >>> generate_integers(8L, 2L)\n    [2L, 4L, 6L, 8L]\n    >>> generate_integers(10L,\
    \ 14L)\n    []\n    \n*/\nlong[] generate_integers(long a, long b) \n{\n    long[]\
    \ result;\n    if (a > b) \n    {\n        result = generate_integers(b, a);\n\
    \    } \n    else \n    {\n        if (a % 2 == 0) \n        {\n            result\
    \ = new long[(b - a) / 2 + 1];\n            for (int i = 0; i < result.length;\
    \ i++) \n            {\n                result[i] = a + 2 * i;\n            }\n\
    \        } \n        else \n        {\n            result = new long[(b - a -\
    \ 1) / 2 + 1];\n            for (int i = 0; i < result.length; i++) \n       \
    \     {\n                result[i] = a + 2 * i + 1;\n            }\n        }\n\
    \    }\n    return result;\n}\nunittest\n{\n    alias candidate = generate_integers;\n\
    \n    assert(candidate(2L, 10L) == [2L, 4L, 6L, 8L]);\n    assert(candidate(10L,\
    \ 2L) == [2L, 4L, 6L, 8L]);\n    assert(candidate(132L, 2L) == [2L, 4L, 6L, 8L]);\n\
    \    assert(candidate(17L, 89L) == []);\n}\nvoid main(){}"
  status: Exception
  stderr: 'core.exception.AssertError@/tmp/tmpb69k0ntg.d(49): unittest failure

    ----------------

    ??:? _d_unittestp [0x428455]

    ??:? void tmpb69k0ntg.__unittest_L45_C1() [0x427fe4]

    ??:? void tmpb69k0ntg.__modtest() [0x4281d4]

    ??:? int core.runtime.runModuleUnitTests().__foreachbody2(object.ModuleInfo*)
    [0x42c50f]

    ??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)).__lambda2(immutable(object.ModuleInfo*))
    [0x42b3a2]

    ??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))).__foreachbody2(ref
    rt.sections_elf_shared.DSO) [0x43062d]

    ??:? int rt.sections_elf_shared.DSO.opApply(scope int delegate(ref rt.sections_elf_shared.DSO))
    [0x430adc]

    ??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*)))
    [0x4305b9]

    ??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)) [0x42b379]

    ??:? runModuleUnitTests [0x42c2e5]

    ??:? void rt.dmain2._d_run_main(int, char**, extern (C) int function(char[][])*).runAll()
    [0x428918]

    ??:? void rt.dmain2._d_r'
  stdout: ''
  timestamp: 1660163090
- exit_code: 1
  program: "import std.typecons;\nimport std.math;\n/*\n\n    Given two positive integers\
    \ a and b, return the even digits between a\n    and b, in ascending order.\n\n\
    \    For example:\n    >>> generate_integers(2L, 8L)\n    [2L, 4L, 6L, 8L]\n \
    \   >>> generate_integers(8L, 2L)\n    [2L, 4L, 6L, 8L]\n    >>> generate_integers(10L,\
    \ 14L)\n    []\n    \n*/\nlong[] generate_integers(long a, long b) \n{\n    long[]\
    \ result;\n    if (a > b)\n    {\n        result = generate_integers(b, a);\n\
    \    }\n    else\n    {\n        result = new long[0];\n        for (long i =\
    \ a; i <= b; i++)\n        {\n            if (i % 2 == 0)\n            {\n   \
    \             result ~= i;\n            }\n        }\n    }\n    return result;\n\
    }\nunittest\n{\n    alias candidate = generate_integers;\n\n    assert(candidate(2L,\
    \ 10L) == [2L, 4L, 6L, 8L]);\n    assert(candidate(10L, 2L) == [2L, 4L, 6L, 8L]);\n\
    \    assert(candidate(132L, 2L) == [2L, 4L, 6L, 8L]);\n    assert(candidate(17L,\
    \ 89L) == []);\n}\nvoid main(){}"
  status: Exception
  stderr: 'core.exception.AssertError@/tmp/tmpo37024wm.d(41): unittest failure

    ----------------

    ??:? _d_unittestp [0x4283b5]

    ??:? void tmpo37024wm.__unittest_L37_C1() [0x427f48]

    ??:? void tmpo37024wm.__modtest() [0x428138]

    ??:? int core.runtime.runModuleUnitTests().__foreachbody2(object.ModuleInfo*)
    [0x42cde7]

    ??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)).__lambda2(immutable(object.ModuleInfo*))
    [0x42bc7a]

    ??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))).__foreachbody2(ref
    rt.sections_elf_shared.DSO) [0x4307c5]

    ??:? int rt.sections_elf_shared.DSO.opApply(scope int delegate(ref rt.sections_elf_shared.DSO))
    [0x430c74]

    ??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*)))
    [0x430751]

    ??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)) [0x42bc51]

    ??:? runModuleUnitTests [0x42cbbd]

    ??:? void rt.dmain2._d_run_main(int, char**, extern (C) int function(char[][])*).runAll()
    [0x428804]

    ??:? void rt.dmain2._d_r'
  stdout: ''
  timestamp: 1660163090
- exit_code: 1
  program: "import std.typecons;\nimport std.math;\n/*\n\n    Given two positive integers\
    \ a and b, return the even digits between a\n    and b, in ascending order.\n\n\
    \    For example:\n    >>> generate_integers(2L, 8L)\n    [2L, 4L, 6L, 8L]\n \
    \   >>> generate_integers(8L, 2L)\n    [2L, 4L, 6L, 8L]\n    >>> generate_integers(10L,\
    \ 14L)\n    []\n    \n*/\nlong[] generate_integers(long a, long b) \n{\n    long[]\
    \ result;\n    if (a > b)\n    {\n        result = generate_integers(b, a);\n\
    \    }\n    else\n    {\n        result = new long[];\n        foreach (i; a..b)\n\
    \        {\n            if (i % 2 == 0)\n            {\n                result\
    \ ~= i;\n            }\n        }\n    }\n    return result;\n}\nunittest\n{\n\
    \    alias candidate = generate_integers;\n\n    assert(candidate(2L, 10L) ==\
    \ [2L, 4L, 6L, 8L]);\n    assert(candidate(10L, 2L) == [2L, 4L, 6L, 8L]);\n  \
    \  assert(candidate(132L, 2L) == [2L, 4L, 6L, 8L]);\n    assert(candidate(17L,\
    \ 89L) == []);\n}\nvoid main(){}"
  status: SyntaxError
  stderr: '/tmp/tmp7trtofh_.d(26): Error: new can only create structs, dynamic arrays
    or class objects, not `long[]`''s

    Failed: ["dmd", "-unittest", "-v", "-o-", "/tmp/tmp7trtofh_.d", "-I/tmp"]

    '
  stdout: ''
  timestamp: 1660163090
- exit_code: 1
  program: "import std.typecons;\nimport std.math;\n/*\n\n    Given two positive integers\
    \ a and b, return the even digits between a\n    and b, in ascending order.\n\n\
    \    For example:\n    >>> generate_integers(2L, 8L)\n    [2L, 4L, 6L, 8L]\n \
    \   >>> generate_integers(8L, 2L)\n    [2L, 4L, 6L, 8L]\n    >>> generate_integers(10L,\
    \ 14L)\n    []\n    \n*/\nlong[] generate_integers(long a, long b) \n{\n    long[]\
    \ result;\n    if (a > b)\n    {\n        result = generate_integers(b, a);\n\
    \    }\n    else\n    {\n        result = [];\n        foreach (i; a..b+1)\n \
    \       {\n            if (i % 2 == 0)\n            {\n                result\
    \ ~= i;\n            }\n        }\n    }\n    return result;\n}\nunittest\n{\n\
    \    alias candidate = generate_integers;\n\n    assert(candidate(2L, 10L) ==\
    \ [2L, 4L, 6L, 8L]);\n    assert(candidate(10L, 2L) == [2L, 4L, 6L, 8L]);\n  \
    \  assert(candidate(132L, 2L) == [2L, 4L, 6L, 8L]);\n    assert(candidate(17L,\
    \ 89L) == []);\n}\nvoid main(){}"
  status: Exception
  stderr: 'core.exception.AssertError@/tmp/tmph7b7qda4.d(41): unittest failure

    ----------------

    ??:? _d_unittestp [0x4283cd]

    ??:? void tmph7b7qda4.__unittest_L37_C1() [0x427f60]

    ??:? void tmph7b7qda4.__modtest() [0x428150]

    ??:? int core.runtime.runModuleUnitTests().__foreachbody2(object.ModuleInfo*)
    [0x42cda3]

    ??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)).__lambda2(immutable(object.ModuleInfo*))
    [0x42bc36]

    ??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))).__foreachbody2(ref
    rt.sections_elf_shared.DSO) [0x430689]

    ??:? int rt.sections_elf_shared.DSO.opApply(scope int delegate(ref rt.sections_elf_shared.DSO))
    [0x430b38]

    ??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*)))
    [0x430615]

    ??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)) [0x42bc0d]

    ??:? runModuleUnitTests [0x42cb79]

    ??:? void rt.dmain2._d_run_main(int, char**, extern (C) int function(char[][])*).runAll()
    [0x42881c]

    ??:? void rt.dmain2._d_r'
  stdout: ''
  timestamp: 1660163090
- exit_code: 1
  program: "import std.typecons;\nimport std.math;\n/*\n\n    Given two positive integers\
    \ a and b, return the even digits between a\n    and b, in ascending order.\n\n\
    \    For example:\n    >>> generate_integers(2L, 8L)\n    [2L, 4L, 6L, 8L]\n \
    \   >>> generate_integers(8L, 2L)\n    [2L, 4L, 6L, 8L]\n    >>> generate_integers(10L,\
    \ 14L)\n    []\n    \n*/\nlong[] generate_integers(long a, long b) \n{\n    long[]\
    \ result;\n    if (a > b)\n    {\n        result = generate_integers(b, a);\n\
    \    }\n    else\n    {\n        result = [];\n        foreach (i; a..b)\n   \
    \     {\n            if (i % 2 == 0)\n            {\n                result ~=\
    \ i;\n            }\n        }\n    }\n    return result;\n}\nunittest\n{\n  \
    \  alias candidate = generate_integers;\n\n    assert(candidate(2L, 10L) == [2L,\
    \ 4L, 6L, 8L]);\n    assert(candidate(10L, 2L) == [2L, 4L, 6L, 8L]);\n    assert(candidate(132L,\
    \ 2L) == [2L, 4L, 6L, 8L]);\n    assert(candidate(17L, 89L) == []);\n}\nvoid main(){}"
  status: Exception
  stderr: 'core.exception.AssertError@/tmp/tmp9jqzgceq.d(43): unittest failure

    ----------------

    ??:? _d_unittestp [0x4283cd]

    ??:? void tmp9jqzgceq.__unittest_L37_C1() [0x42804c]

    ??:? void tmp9jqzgceq.__modtest() [0x428150]

    ??:? int core.runtime.runModuleUnitTests().__foreachbody2(object.ModuleInfo*)
    [0x42cda3]

    ??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)).__lambda2(immutable(object.ModuleInfo*))
    [0x42bc36]

    ??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))).__foreachbody2(ref
    rt.sections_elf_shared.DSO) [0x430689]

    ??:? int rt.sections_elf_shared.DSO.opApply(scope int delegate(ref rt.sections_elf_shared.DSO))
    [0x430b38]

    ??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*)))
    [0x430615]

    ??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)) [0x42bc0d]

    ??:? runModuleUnitTests [0x42cb79]

    ??:? void rt.dmain2._d_run_main(int, char**, extern (C) int function(char[][])*).runAll()
    [0x42881c]

    ??:? void rt.dmain2._d_r'
  stdout: ''
  timestamp: 1660163090
- exit_code: 1
  program: "import std.typecons;\nimport std.math;\n/*\n\n    Given two positive integers\
    \ a and b, return the even digits between a\n    and b, in ascending order.\n\n\
    \    For example:\n    >>> generate_integers(2L, 8L)\n    [2L, 4L, 6L, 8L]\n \
    \   >>> generate_integers(8L, 2L)\n    [2L, 4L, 6L, 8L]\n    >>> generate_integers(10L,\
    \ 14L)\n    []\n    \n*/\nlong[] generate_integers(long a, long b) \n{\n    long[]\
    \ result;\n    long i;\n    if (a > b)\n    {\n        result = new long[0];\n\
    \    }\n    else\n    {\n        result = new long[(b - a) / 2 + 1];\n       \
    \ i = 0;\n        while (a <= b)\n        {\n            if (a % 2 == 0)\n   \
    \         {\n                result[i] = a;\n                i++;\n          \
    \  }\n            a++;\n        }\n    }\n    return result;\n}\nunittest\n{\n\
    \    alias candidate = generate_integers;\n\n    assert(candidate(2L, 10L) ==\
    \ [2L, 4L, 6L, 8L]);\n    assert(candidate(10L, 2L) == [2L, 4L, 6L, 8L]);\n  \
    \  assert(candidate(132L, 2L) == [2L, 4L, 6L, 8L]);\n    assert(candidate(17L,\
    \ 89L) == []);\n}\nvoid main(){}"
  status: Exception
  stderr: 'core.exception.AssertError@/tmp/tmpml68vbs_.d(45): unittest failure

    ----------------

    ??:? _d_unittestp [0x4283dd]

    ??:? void tmpml68vbs_.__unittest_L41_C1() [0x427f6c]

    ??:? void tmpml68vbs_.__modtest() [0x42815c]

    ??:? int core.runtime.runModuleUnitTests().__foreachbody2(object.ModuleInfo*)
    [0x42c497]

    ??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)).__lambda2(immutable(object.ModuleInfo*))
    [0x42b32a]

    ??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))).__foreachbody2(ref
    rt.sections_elf_shared.DSO) [0x4305b5]

    ??:? int rt.sections_elf_shared.DSO.opApply(scope int delegate(ref rt.sections_elf_shared.DSO))
    [0x430a64]

    ??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*)))
    [0x430541]

    ??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)) [0x42b301]

    ??:? runModuleUnitTests [0x42c26d]

    ??:? void rt.dmain2._d_run_main(int, char**, extern (C) int function(char[][])*).runAll()
    [0x4288a0]

    ??:? void rt.dmain2._d_r'
  stdout: ''
  timestamp: 1660163090
- exit_code: 1
  program: "import std.typecons;\nimport std.math;\n/*\n\n    Given two positive integers\
    \ a and b, return the even digits between a\n    and b, in ascending order.\n\n\
    \    For example:\n    >>> generate_integers(2L, 8L)\n    [2L, 4L, 6L, 8L]\n \
    \   >>> generate_integers(8L, 2L)\n    [2L, 4L, 6L, 8L]\n    >>> generate_integers(10L,\
    \ 14L)\n    []\n    \n*/\nlong[] generate_integers(long a, long b) \n{\n    long[]\
    \ result;\n    if (a > b) \n    {\n        result = generate_integers(b, a);\n\
    \    } \n    else \n    {\n        result = [];\n        foreach (i; a..b+1) \n\
    \        {\n            if (i % 2 == 0) \n            {\n                result\
    \ ~= i;\n            }\n        }\n    }\n    return result;\n}\nunittest\n{\n\
    \    alias candidate = generate_integers;\n\n    assert(candidate(2L, 10L) ==\
    \ [2L, 4L, 6L, 8L]);\n    assert(candidate(10L, 2L) == [2L, 4L, 6L, 8L]);\n  \
    \  assert(candidate(132L, 2L) == [2L, 4L, 6L, 8L]);\n    assert(candidate(17L,\
    \ 89L) == []);\n}\nvoid main(){}"
  status: Exception
  stderr: 'core.exception.AssertError@/tmp/tmpdsg55syw.d(41): unittest failure

    ----------------

    ??:? _d_unittestp [0x4283cd]

    ??:? void tmpdsg55syw.__unittest_L37_C1() [0x427f60]

    ??:? void tmpdsg55syw.__modtest() [0x428150]

    ??:? int core.runtime.runModuleUnitTests().__foreachbody2(object.ModuleInfo*)
    [0x42cda3]

    ??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)).__lambda2(immutable(object.ModuleInfo*))
    [0x42bc36]

    ??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))).__foreachbody2(ref
    rt.sections_elf_shared.DSO) [0x430689]

    ??:? int rt.sections_elf_shared.DSO.opApply(scope int delegate(ref rt.sections_elf_shared.DSO))
    [0x430b38]

    ??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*)))
    [0x430615]

    ??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)) [0x42bc0d]

    ??:? runModuleUnitTests [0x42cb79]

    ??:? void rt.dmain2._d_run_main(int, char**, extern (C) int function(char[][])*).runAll()
    [0x42881c]

    ??:? void rt.dmain2._d_r'
  stdout: ''
  timestamp: 1660163090
- exit_code: 1
  program: "import std.typecons;\nimport std.math;\n/*\n\n    Given two positive integers\
    \ a and b, return the even digits between a\n    and b, in ascending order.\n\n\
    \    For example:\n    >>> generate_integers(2L, 8L)\n    [2L, 4L, 6L, 8L]\n \
    \   >>> generate_integers(8L, 2L)\n    [2L, 4L, 6L, 8L]\n    >>> generate_integers(10L,\
    \ 14L)\n    []\n    \n*/\nlong[] generate_integers(long a, long b) \n{\n    long[]\
    \ result;\n    if (a > b)\n    {\n        result = generate_integers(b, a);\n\
    \    }\n    else\n    {\n        result = new long[0];\n        for (long i =\
    \ a; i <= b; i++)\n        {\n            if (i % 2 == 0)\n            {\n   \
    \             result ~= i;\n            }\n        }\n    }\n    return result;\n\
    }\nunittest\n{\n    alias candidate = generate_integers;\n\n    assert(candidate(2L,\
    \ 10L) == [2L, 4L, 6L, 8L]);\n    assert(candidate(10L, 2L) == [2L, 4L, 6L, 8L]);\n\
    \    assert(candidate(132L, 2L) == [2L, 4L, 6L, 8L]);\n    assert(candidate(17L,\
    \ 89L) == []);\n}\nvoid main(){}"
  status: Exception
  stderr: 'core.exception.AssertError@/tmp/tmpo37024wm.d(41): unittest failure

    ----------------

    ??:? _d_unittestp [0x4283b5]

    ??:? void tmpo37024wm.__unittest_L37_C1() [0x427f48]

    ??:? void tmpo37024wm.__modtest() [0x428138]

    ??:? int core.runtime.runModuleUnitTests().__foreachbody2(object.ModuleInfo*)
    [0x42cde7]

    ??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)).__lambda2(immutable(object.ModuleInfo*))
    [0x42bc7a]

    ??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))).__foreachbody2(ref
    rt.sections_elf_shared.DSO) [0x4307c5]

    ??:? int rt.sections_elf_shared.DSO.opApply(scope int delegate(ref rt.sections_elf_shared.DSO))
    [0x430c74]

    ??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*)))
    [0x430751]

    ??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)) [0x42bc51]

    ??:? runModuleUnitTests [0x42cbbd]

    ??:? void rt.dmain2._d_run_main(int, char**, extern (C) int function(char[][])*).runAll()
    [0x428804]

    ??:? void rt.dmain2._d_r'
  stdout: ''
  timestamp: 1660163090
- exit_code: 1
  program: "import std.typecons;\nimport std.math;\n/*\n\n    Given two positive integers\
    \ a and b, return the even digits between a\n    and b, in ascending order.\n\n\
    \    For example:\n    >>> generate_integers(2L, 8L)\n    [2L, 4L, 6L, 8L]\n \
    \   >>> generate_integers(8L, 2L)\n    [2L, 4L, 6L, 8L]\n    >>> generate_integers(10L,\
    \ 14L)\n    []\n    \n*/\nlong[] generate_integers(long a, long b) \n{\n    long\
    \ min = min(a, b);\n    long max = max(a, b);\n    long[] result = new long[];\n\
    \    foreach(long i; min..max)\n    {\n        if(i % 2 == 0)\n        {\n   \
    \         result ~= i;\n        }\n    }\n    return result;\n}\nunittest\n{\n\
    \    alias candidate = generate_integers;\n\n    assert(candidate(2L, 10L) ==\
    \ [2L, 4L, 6L, 8L]);\n    assert(candidate(10L, 2L) == [2L, 4L, 6L, 8L]);\n  \
    \  assert(candidate(132L, 2L) == [2L, 4L, 6L, 8L]);\n    assert(candidate(17L,\
    \ 89L) == []);\n}\nvoid main(){}"
  status: SyntaxError
  stderr: '/tmp/tmp7p7bl6ay.d(19): Error: undefined identifier `min`, did you mean
    function `main`?

    /tmp/tmp7p7bl6ay.d(20): Error: undefined identifier `max`, did you mean function
    `fmax`?

    /tmp/tmp7p7bl6ay.d(21): Error: new can only create structs, dynamic arrays or
    class objects, not `long[]`''s

    Failed: ["dmd", "-unittest", "-v", "-o-", "/tmp/tmp7p7bl6ay.d", "-I/tmp"]

    '
  stdout: ''
  timestamp: 1660163090
- exit_code: 1
  program: "import std.typecons;\nimport std.math;\n/*\n\n    Given two positive integers\
    \ a and b, return the even digits between a\n    and b, in ascending order.\n\n\
    \    For example:\n    >>> generate_integers(2L, 8L)\n    [2L, 4L, 6L, 8L]\n \
    \   >>> generate_integers(8L, 2L)\n    [2L, 4L, 6L, 8L]\n    >>> generate_integers(10L,\
    \ 14L)\n    []\n    \n*/\nlong[] generate_integers(long a, long b) \n{\n    long[]\
    \ result;\n    if (a > b)\n    {\n        result = generate_integers(b, a);\n\
    \    }\n    else\n    {\n        if (a % 2 == 0)\n        {\n            result\
    \ = new long[(b - a) / 2 + 1];\n            for (long i = 0; i < result.length;\
    \ i++)\n            {\n                result[i] = a + 2 * i;\n            }\n\
    \        }\n        else\n        {\n            result = new long[(b - a) / 2];\n\
    \            for (long i = 0; i < result.length; i++)\n            {\n       \
    \         result[i] = a + 2 * i + 1;\n            }\n        }\n    }\n    return\
    \ result;\n}\nunittest\n{\n    alias candidate = generate_integers;\n\n    assert(candidate(2L,\
    \ 10L) == [2L, 4L, 6L, 8L]);\n    assert(candidate(10L, 2L) == [2L, 4L, 6L, 8L]);\n\
    \    assert(candidate(132L, 2L) == [2L, 4L, 6L, 8L]);\n    assert(candidate(17L,\
    \ 89L) == []);\n}\nvoid main(){}"
  status: Exception
  stderr: 'core.exception.AssertError@/tmp/tmp5mxvb7ao.d(49): unittest failure

    ----------------

    ??:? _d_unittestp [0x42844d]

    ??:? void tmp5mxvb7ao.__unittest_L45_C1() [0x427fe0]

    ??:? void tmp5mxvb7ao.__modtest() [0x4281d0]

    ??:? int core.runtime.runModuleUnitTests().__foreachbody2(object.ModuleInfo*)
    [0x42c507]

    ??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)).__lambda2(immutable(object.ModuleInfo*))
    [0x42b39a]

    ??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))).__foreachbody2(ref
    rt.sections_elf_shared.DSO) [0x430625]

    ??:? int rt.sections_elf_shared.DSO.opApply(scope int delegate(ref rt.sections_elf_shared.DSO))
    [0x430ad4]

    ??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*)))
    [0x4305b1]

    ??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)) [0x42b371]

    ??:? runModuleUnitTests [0x42c2dd]

    ??:? void rt.dmain2._d_run_main(int, char**, extern (C) int function(char[][])*).runAll()
    [0x428910]

    ??:? void rt.dmain2._d_r'
  stdout: ''
  timestamp: 1660163090
- exit_code: 1
  program: "import std.typecons;\nimport std.math;\n/*\n\n    Given two positive integers\
    \ a and b, return the even digits between a\n    and b, in ascending order.\n\n\
    \    For example:\n    >>> generate_integers(2L, 8L)\n    [2L, 4L, 6L, 8L]\n \
    \   >>> generate_integers(8L, 2L)\n    [2L, 4L, 6L, 8L]\n    >>> generate_integers(10L,\
    \ 14L)\n    []\n    \n*/\nlong[] generate_integers(long a, long b) \n{\n    long[]\
    \ result;\n    if (a > b)\n    {\n        result = generate_integers(b, a);\n\
    \    }\n    else\n    {\n        result = [];\n        foreach (i; a..b+1)\n \
    \       {\n            if (i % 2 == 0)\n            {\n                result\
    \ ~= i;\n            }\n        }\n    }\n    return result;\n}\nunittest\n{\n\
    \    alias candidate = generate_integers;\n\n    assert(candidate(2L, 10L) ==\
    \ [2L, 4L, 6L, 8L]);\n    assert(candidate(10L, 2L) == [2L, 4L, 6L, 8L]);\n  \
    \  assert(candidate(132L, 2L) == [2L, 4L, 6L, 8L]);\n    assert(candidate(17L,\
    \ 89L) == []);\n}\nvoid main(){}"
  status: Exception
  stderr: 'core.exception.AssertError@/tmp/tmph7b7qda4.d(41): unittest failure

    ----------------

    ??:? _d_unittestp [0x4283cd]

    ??:? void tmph7b7qda4.__unittest_L37_C1() [0x427f60]

    ??:? void tmph7b7qda4.__modtest() [0x428150]

    ??:? int core.runtime.runModuleUnitTests().__foreachbody2(object.ModuleInfo*)
    [0x42cda3]

    ??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)).__lambda2(immutable(object.ModuleInfo*))
    [0x42bc36]

    ??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))).__foreachbody2(ref
    rt.sections_elf_shared.DSO) [0x430689]

    ??:? int rt.sections_elf_shared.DSO.opApply(scope int delegate(ref rt.sections_elf_shared.DSO))
    [0x430b38]

    ??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*)))
    [0x430615]

    ??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)) [0x42bc0d]

    ??:? runModuleUnitTests [0x42cb79]

    ??:? void rt.dmain2._d_run_main(int, char**, extern (C) int function(char[][])*).runAll()
    [0x42881c]

    ??:? void rt.dmain2._d_r'
  stdout: ''
  timestamp: 1660163090
- exit_code: 1
  program: "import std.typecons;\nimport std.math;\n/*\n\n    Given two positive integers\
    \ a and b, return the even digits between a\n    and b, in ascending order.\n\n\
    \    For example:\n    >>> generate_integers(2L, 8L)\n    [2L, 4L, 6L, 8L]\n \
    \   >>> generate_integers(8L, 2L)\n    [2L, 4L, 6L, 8L]\n    >>> generate_integers(10L,\
    \ 14L)\n    []\n    \n*/\nlong[] generate_integers(long a, long b) \n{\n    long[]\
    \ result;\n    if (a > b)\n    {\n        result = generate_integers(b, a);\n\
    \    }\n    else\n    {\n        result = new long[0];\n        foreach (i; a..b+1)\n\
    \        {\n            if (i % 2 == 0)\n            {\n                result\
    \ ~= i;\n            }\n        }\n    }\n    return result;\n}\nunittest\n{\n\
    \    alias candidate = generate_integers;\n\n    assert(candidate(2L, 10L) ==\
    \ [2L, 4L, 6L, 8L]);\n    assert(candidate(10L, 2L) == [2L, 4L, 6L, 8L]);\n  \
    \  assert(candidate(132L, 2L) == [2L, 4L, 6L, 8L]);\n    assert(candidate(17L,\
    \ 89L) == []);\n}\nvoid main(){}"
  status: Exception
  stderr: 'core.exception.AssertError@/tmp/tmpdqsgss_y.d(41): unittest failure

    ----------------

    ??:? _d_unittestp [0x4283cd]

    ??:? void tmpdqsgss_y.__unittest_L37_C1() [0x427f5c]

    ??:? void tmpdqsgss_y.__modtest() [0x42814c]

    ??:? int core.runtime.runModuleUnitTests().__foreachbody2(object.ModuleInfo*)
    [0x42cdff]

    ??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)).__lambda2(immutable(object.ModuleInfo*))
    [0x42bc92]

    ??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))).__foreachbody2(ref
    rt.sections_elf_shared.DSO) [0x4307dd]

    ??:? int rt.sections_elf_shared.DSO.opApply(scope int delegate(ref rt.sections_elf_shared.DSO))
    [0x430c8c]

    ??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*)))
    [0x430769]

    ??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)) [0x42bc69]

    ??:? runModuleUnitTests [0x42cbd5]

    ??:? void rt.dmain2._d_run_main(int, char**, extern (C) int function(char[][])*).runAll()
    [0x42881c]

    ??:? void rt.dmain2._d_r'
  stdout: ''
  timestamp: 1660163090
- exit_code: 1
  program: "import std.typecons;\nimport std.math;\n/*\n\n    Given two positive integers\
    \ a and b, return the even digits between a\n    and b, in ascending order.\n\n\
    \    For example:\n    >>> generate_integers(2L, 8L)\n    [2L, 4L, 6L, 8L]\n \
    \   >>> generate_integers(8L, 2L)\n    [2L, 4L, 6L, 8L]\n    >>> generate_integers(10L,\
    \ 14L)\n    []\n    \n*/\nlong[] generate_integers(long a, long b) \n{\n    long[]\
    \ result;\n    if (a > b) \n    {\n        result = generate_integers(b, a);\n\
    \    }\n    else \n    {\n        result = [];\n        foreach (i; a..b+1) \n\
    \        {\n            if (i % 2 == 0) \n            {\n                result\
    \ ~= i;\n            }\n        }\n    }\n    return result;\n}\nunittest\n{\n\
    \    alias candidate = generate_integers;\n\n    assert(candidate(2L, 10L) ==\
    \ [2L, 4L, 6L, 8L]);\n    assert(candidate(10L, 2L) == [2L, 4L, 6L, 8L]);\n  \
    \  assert(candidate(132L, 2L) == [2L, 4L, 6L, 8L]);\n    assert(candidate(17L,\
    \ 89L) == []);\n}\nvoid main(){}"
  status: Exception
  stderr: 'core.exception.AssertError@/tmp/tmpjgghwjk9.d(41): unittest failure

    ----------------

    ??:? _d_unittestp [0x4283cd]

    ??:? void tmpjgghwjk9.__unittest_L37_C1() [0x427f60]

    ??:? void tmpjgghwjk9.__modtest() [0x428150]

    ??:? int core.runtime.runModuleUnitTests().__foreachbody2(object.ModuleInfo*)
    [0x42cda3]

    ??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)).__lambda2(immutable(object.ModuleInfo*))
    [0x42bc36]

    ??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))).__foreachbody2(ref
    rt.sections_elf_shared.DSO) [0x430689]

    ??:? int rt.sections_elf_shared.DSO.opApply(scope int delegate(ref rt.sections_elf_shared.DSO))
    [0x430b38]

    ??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*)))
    [0x430615]

    ??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)) [0x42bc0d]

    ??:? runModuleUnitTests [0x42cb79]

    ??:? void rt.dmain2._d_run_main(int, char**, extern (C) int function(char[][])*).runAll()
    [0x42881c]

    ??:? void rt.dmain2._d_r'
  stdout: ''
  timestamp: 1660163090
- exit_code: 1
  program: "import std.typecons;\nimport std.math;\n/*\n\n    Given two positive integers\
    \ a and b, return the even digits between a\n    and b, in ascending order.\n\n\
    \    For example:\n    >>> generate_integers(2L, 8L)\n    [2L, 4L, 6L, 8L]\n \
    \   >>> generate_integers(8L, 2L)\n    [2L, 4L, 6L, 8L]\n    >>> generate_integers(10L,\
    \ 14L)\n    []\n    \n*/\nlong[] generate_integers(long a, long b) \n{\n    long[]\
    \ result;\n    if (a > b) \n    {\n        result = generate_integers(b, a);\n\
    \    } \n    else \n    {\n        if (a % 2 == 0) \n        {\n            result\
    \ = new long[(b - a) / 2 + 1];\n            for (int i = 0; i < result.length;\
    \ i++) \n            {\n                result[i] = a + i * 2;\n            }\n\
    \        } \n        else \n        {\n            result = new long[(b - a -\
    \ 1) / 2 + 1];\n            for (int i = 0; i < result.length; i++) \n       \
    \     {\n                result[i] = a + i * 2 + 1;\n            }\n        }\n\
    \    }\n    return result;\n}\n/*\n    Given two positive integers a and b, return\
    \ the even digits between a\n    and b, in ascending order.\nunittest\n{\n   \
    \ alias candidate = generate_integers;\n\n    assert(candidate(2L, 10L) == [2L,\
    \ 4L, 6L, 8L]);\n    assert(candidate(10L, 2L) == [2L, 4L, 6L, 8L]);\n    assert(candidate(132L,\
    \ 2L) == [2L, 4L, 6L, 8L]);\n    assert(candidate(17L, 89L) == []);\n}\nvoid main(){}"
  status: SyntaxError
  stderr: '/tmp/tmpmsgfq2ja.d(45): Error: unterminated /* */ comment

    Failed: ["dmd", "-unittest", "-v", "-o-", "/tmp/tmpmsgfq2ja.d", "-I/tmp"]

    '
  stdout: ''
  timestamp: 1660163090
- exit_code: 1
  program: "import std.typecons;\nimport std.math;\n/*\n\n    Given two positive integers\
    \ a and b, return the even digits between a\n    and b, in ascending order.\n\n\
    \    For example:\n    >>> generate_integers(2L, 8L)\n    [2L, 4L, 6L, 8L]\n \
    \   >>> generate_integers(8L, 2L)\n    [2L, 4L, 6L, 8L]\n    >>> generate_integers(10L,\
    \ 14L)\n    []\n    \n*/\nlong[] generate_integers(long a, long b) \n{\n    long[]\
    \ result;\n    if (a > b)\n    {\n        result = generate_integers(b, a);\n\
    \    }\n    else\n    {\n        result = [];\n        foreach (i; a..b)\n   \
    \     {\n            if (i % 2 == 0)\n            {\n                result ~=\
    \ i;\n            }\n        }\n    }\n    return result;\n}\nunittest\n{\n  \
    \  alias candidate = generate_integers;\n\n    assert(candidate(2L, 10L) == [2L,\
    \ 4L, 6L, 8L]);\n    assert(candidate(10L, 2L) == [2L, 4L, 6L, 8L]);\n    assert(candidate(132L,\
    \ 2L) == [2L, 4L, 6L, 8L]);\n    assert(candidate(17L, 89L) == []);\n}\nvoid main(){}"
  status: Exception
  stderr: 'core.exception.AssertError@/tmp/tmp9jqzgceq.d(43): unittest failure

    ----------------

    ??:? _d_unittestp [0x4283cd]

    ??:? void tmp9jqzgceq.__unittest_L37_C1() [0x42804c]

    ??:? void tmp9jqzgceq.__modtest() [0x428150]

    ??:? int core.runtime.runModuleUnitTests().__foreachbody2(object.ModuleInfo*)
    [0x42cda3]

    ??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)).__lambda2(immutable(object.ModuleInfo*))
    [0x42bc36]

    ??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))).__foreachbody2(ref
    rt.sections_elf_shared.DSO) [0x430689]

    ??:? int rt.sections_elf_shared.DSO.opApply(scope int delegate(ref rt.sections_elf_shared.DSO))
    [0x430b38]

    ??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*)))
    [0x430615]

    ??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)) [0x42bc0d]

    ??:? runModuleUnitTests [0x42cb79]

    ??:? void rt.dmain2._d_run_main(int, char**, extern (C) int function(char[][])*).runAll()
    [0x42881c]

    ??:? void rt.dmain2._d_r'
  stdout: ''
  timestamp: 1660163090
- exit_code: 1
  program: "import std.typecons;\nimport std.math;\n/*\n\n    Given two positive integers\
    \ a and b, return the even digits between a\n    and b, in ascending order.\n\n\
    \    For example:\n    >>> generate_integers(2L, 8L)\n    [2L, 4L, 6L, 8L]\n \
    \   >>> generate_integers(8L, 2L)\n    [2L, 4L, 6L, 8L]\n    >>> generate_integers(10L,\
    \ 14L)\n    []\n    \n*/\nlong[] generate_integers(long a, long b) \n{\n    long[]\
    \ result;\n    if (a > b) \n    {\n        result = generate_integers(b, a);\n\
    \    } \n    else \n    {\n        result = [];\n        foreach (i; a..b) \n\
    \        {\n            if (i % 2 == 0) \n            {\n                result\
    \ ~= i;\n            }\n        }\n    }\n    return result;\n}\nunittest\n{\n\
    \    alias candidate = generate_integers;\n\n    assert(candidate(2L, 10L) ==\
    \ [2L, 4L, 6L, 8L]);\n    assert(candidate(10L, 2L) == [2L, 4L, 6L, 8L]);\n  \
    \  assert(candidate(132L, 2L) == [2L, 4L, 6L, 8L]);\n    assert(candidate(17L,\
    \ 89L) == []);\n}\nvoid main(){}"
  status: Exception
  stderr: 'core.exception.AssertError@/tmp/tmphlqgphhn.d(43): unittest failure

    ----------------

    ??:? _d_unittestp [0x4283cd]

    ??:? void tmphlqgphhn.__unittest_L37_C1() [0x42804c]

    ??:? void tmphlqgphhn.__modtest() [0x428150]

    ??:? int core.runtime.runModuleUnitTests().__foreachbody2(object.ModuleInfo*)
    [0x42cda3]

    ??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)).__lambda2(immutable(object.ModuleInfo*))
    [0x42bc36]

    ??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))).__foreachbody2(ref
    rt.sections_elf_shared.DSO) [0x430689]

    ??:? int rt.sections_elf_shared.DSO.opApply(scope int delegate(ref rt.sections_elf_shared.DSO))
    [0x430b38]

    ??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*)))
    [0x430615]

    ??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)) [0x42bc0d]

    ??:? runModuleUnitTests [0x42cb79]

    ??:? void rt.dmain2._d_run_main(int, char**, extern (C) int function(char[][])*).runAll()
    [0x42881c]

    ??:? void rt.dmain2._d_r'
  stdout: ''
  timestamp: 1660163090
- exit_code: 1
  program: "import std.typecons;\nimport std.math;\n/*\n\n    Given two positive integers\
    \ a and b, return the even digits between a\n    and b, in ascending order.\n\n\
    \    For example:\n    >>> generate_integers(2L, 8L)\n    [2L, 4L, 6L, 8L]\n \
    \   >>> generate_integers(8L, 2L)\n    [2L, 4L, 6L, 8L]\n    >>> generate_integers(10L,\
    \ 14L)\n    []\n    \n*/\nlong[] generate_integers(long a, long b) \n{\n    long[]\
    \ result;\n    if (a > b)\n    {\n        result = generate_integers(b, a);\n\
    \    }\n    else\n    {\n        result = [];\n        foreach (i; a..b+1)\n \
    \       {\n            if (i % 2 == 0)\n            {\n                result\
    \ ~= i;\n            }\n        }\n    }\n    return result;\n}\nunittest\n{\n\
    \    alias candidate = generate_integers;\n\n    assert(candidate(2L, 10L) ==\
    \ [2L, 4L, 6L, 8L]);\n    assert(candidate(10L, 2L) == [2L, 4L, 6L, 8L]);\n  \
    \  assert(candidate(132L, 2L) == [2L, 4L, 6L, 8L]);\n    assert(candidate(17L,\
    \ 89L) == []);\n}\nvoid main(){}"
  status: Exception
  stderr: 'core.exception.AssertError@/tmp/tmph7b7qda4.d(41): unittest failure

    ----------------

    ??:? _d_unittestp [0x4283cd]

    ??:? void tmph7b7qda4.__unittest_L37_C1() [0x427f60]

    ??:? void tmph7b7qda4.__modtest() [0x428150]

    ??:? int core.runtime.runModuleUnitTests().__foreachbody2(object.ModuleInfo*)
    [0x42cda3]

    ??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)).__lambda2(immutable(object.ModuleInfo*))
    [0x42bc36]

    ??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))).__foreachbody2(ref
    rt.sections_elf_shared.DSO) [0x430689]

    ??:? int rt.sections_elf_shared.DSO.opApply(scope int delegate(ref rt.sections_elf_shared.DSO))
    [0x430b38]

    ??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*)))
    [0x430615]

    ??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)) [0x42bc0d]

    ??:? runModuleUnitTests [0x42cb79]

    ??:? void rt.dmain2._d_run_main(int, char**, extern (C) int function(char[][])*).runAll()
    [0x42881c]

    ??:? void rt.dmain2._d_r'
  stdout: ''
  timestamp: 1660163090
- exit_code: 1
  program: "import std.typecons;\nimport std.math;\n/*\n\n    Given two positive integers\
    \ a and b, return the even digits between a\n    and b, in ascending order.\n\n\
    \    For example:\n    >>> generate_integers(2L, 8L)\n    [2L, 4L, 6L, 8L]\n \
    \   >>> generate_integers(8L, 2L)\n    [2L, 4L, 6L, 8L]\n    >>> generate_integers(10L,\
    \ 14L)\n    []\n    \n*/\nlong[] generate_integers(long a, long b) \n{\n    long[]\
    \ result;\n    if (a > b) \n    {\n        result = generate_integers(b, a);\n\
    \    } \n    else \n    {\n        result = [];\n        foreach (i; a..b) \n\
    \        {\n            if (i % 2 == 0) \n            {\n                result\
    \ ~= i;\n            }\n        }\n    }\n    return result;\n}\nunittest\n{\n\
    \    alias candidate = generate_integers;\n\n    assert(candidate(2L, 10L) ==\
    \ [2L, 4L, 6L, 8L]);\n    assert(candidate(10L, 2L) == [2L, 4L, 6L, 8L]);\n  \
    \  assert(candidate(132L, 2L) == [2L, 4L, 6L, 8L]);\n    assert(candidate(17L,\
    \ 89L) == []);\n}\nvoid main(){}"
  status: Exception
  stderr: 'core.exception.AssertError@/tmp/tmphlqgphhn.d(43): unittest failure

    ----------------

    ??:? _d_unittestp [0x4283cd]

    ??:? void tmphlqgphhn.__unittest_L37_C1() [0x42804c]

    ??:? void tmphlqgphhn.__modtest() [0x428150]

    ??:? int core.runtime.runModuleUnitTests().__foreachbody2(object.ModuleInfo*)
    [0x42cda3]

    ??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)).__lambda2(immutable(object.ModuleInfo*))
    [0x42bc36]

    ??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))).__foreachbody2(ref
    rt.sections_elf_shared.DSO) [0x430689]

    ??:? int rt.sections_elf_shared.DSO.opApply(scope int delegate(ref rt.sections_elf_shared.DSO))
    [0x430b38]

    ??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*)))
    [0x430615]

    ??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)) [0x42bc0d]

    ??:? runModuleUnitTests [0x42cb79]

    ??:? void rt.dmain2._d_run_main(int, char**, extern (C) int function(char[][])*).runAll()
    [0x42881c]

    ??:? void rt.dmain2._d_r'
  stdout: ''
  timestamp: 1660163090
- exit_code: 1
  program: "import std.typecons;\nimport std.math;\n/*\n\n    Given two positive integers\
    \ a and b, return the even digits between a\n    and b, in ascending order.\n\n\
    \    For example:\n    >>> generate_integers(2L, 8L)\n    [2L, 4L, 6L, 8L]\n \
    \   >>> generate_integers(8L, 2L)\n    [2L, 4L, 6L, 8L]\n    >>> generate_integers(10L,\
    \ 14L)\n    []\n    \n*/\nlong[] generate_integers(long a, long b) \n{\n    long[]\
    \ result;\n    if (a > b)\n    {\n        result = generate_integers(b, a);\n\
    \    }\n    else\n    {\n        result = new long[0];\n        if (a % 2 == 0)\n\
    \        {\n            result ~= a;\n        }\n        else\n        {\n   \
    \         a++;\n        }\n        while (a <= b)\n        {\n            result\
    \ ~= a;\n            a += 2;\n        }\n    }\n    return result;\n}\nunittest\n\
    {\n    alias candidate = generate_integers;\n\n    assert(candidate(2L, 10L) ==\
    \ [2L, 4L, 6L, 8L]);\n    assert(candidate(10L, 2L) == [2L, 4L, 6L, 8L]);\n  \
    \  assert(candidate(132L, 2L) == [2L, 4L, 6L, 8L]);\n    assert(candidate(17L,\
    \ 89L) == []);\n}\nvoid main(){}"
  status: Exception
  stderr: 'core.exception.AssertError@/tmp/tmpcdwewblr.d(47): unittest failure

    ----------------

    ??:? _d_unittestp [0x4283e5]

    ??:? void tmpcdwewblr.__unittest_L43_C1() [0x427f74]

    ??:? void tmpcdwewblr.__modtest() [0x428164]

    ??:? int core.runtime.runModuleUnitTests().__foreachbody2(object.ModuleInfo*)
    [0x42ce17]

    ??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)).__lambda2(immutable(object.ModuleInfo*))
    [0x42bcaa]

    ??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))).__foreachbody2(ref
    rt.sections_elf_shared.DSO) [0x4307f5]

    ??:? int rt.sections_elf_shared.DSO.opApply(scope int delegate(ref rt.sections_elf_shared.DSO))
    [0x430ca4]

    ??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*)))
    [0x430781]

    ??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)) [0x42bc81]

    ??:? runModuleUnitTests [0x42cbed]

    ??:? void rt.dmain2._d_run_main(int, char**, extern (C) int function(char[][])*).runAll()
    [0x428834]

    ??:? void rt.dmain2._d_r'
  stdout: ''
  timestamp: 1660163090
- exit_code: 1
  program: "import std.typecons;\nimport std.math;\n/*\n\n    Given two positive integers\
    \ a and b, return the even digits between a\n    and b, in ascending order.\n\n\
    \    For example:\n    >>> generate_integers(2L, 8L)\n    [2L, 4L, 6L, 8L]\n \
    \   >>> generate_integers(8L, 2L)\n    [2L, 4L, 6L, 8L]\n    >>> generate_integers(10L,\
    \ 14L)\n    []\n    \n*/\nlong[] generate_integers(long a, long b) \n{\n    long[]\
    \ result;\n    if (a > b)\n    {\n        result = generate_integers(b, a);\n\
    \    }\n    else\n    {\n        result = new long[(b - a) / 2 + 1];\n       \
    \ foreach (i, ref e; result)\n        {\n            e = a + 2 * i;\n        }\n\
    \    }\n    return result;\n}\nunittest\n{\n    alias candidate = generate_integers;\n\
    \n    assert(candidate(2L, 10L) == [2L, 4L, 6L, 8L]);\n    assert(candidate(10L,\
    \ 2L) == [2L, 4L, 6L, 8L]);\n    assert(candidate(132L, 2L) == [2L, 4L, 6L, 8L]);\n\
    \    assert(candidate(17L, 89L) == []);\n}\nvoid main(){}"
  status: Exception
  stderr: 'core.exception.AssertError@/tmp/tmp24vc4w0k.d(38): unittest failure

    ----------------

    ??:? _d_unittestp [0x4283a5]

    ??:? void tmp24vc4w0k.__unittest_L34_C1() [0x427f38]

    ??:? void tmp24vc4w0k.__modtest() [0x428128]

    ??:? int core.runtime.runModuleUnitTests().__foreachbody2(object.ModuleInfo*)
    [0x42c3eb]

    ??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)).__lambda2(immutable(object.ModuleInfo*))
    [0x42b27e]

    ??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))).__foreachbody2(ref
    rt.sections_elf_shared.DSO) [0x430509]

    ??:? int rt.sections_elf_shared.DSO.opApply(scope int delegate(ref rt.sections_elf_shared.DSO))
    [0x4309b8]

    ??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*)))
    [0x430495]

    ??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)) [0x42b255]

    ??:? runModuleUnitTests [0x42c1c1]

    ??:? void rt.dmain2._d_run_main(int, char**, extern (C) int function(char[][])*).runAll()
    [0x4287f4]

    ??:? void rt.dmain2._d_r'
  stdout: ''
  timestamp: 1660163091
- exit_code: 1
  program: "import std.typecons;\nimport std.math;\n/*\n\n    Given two positive integers\
    \ a and b, return the even digits between a\n    and b, in ascending order.\n\n\
    \    For example:\n    >>> generate_integers(2L, 8L)\n    [2L, 4L, 6L, 8L]\n \
    \   >>> generate_integers(8L, 2L)\n    [2L, 4L, 6L, 8L]\n    >>> generate_integers(10L,\
    \ 14L)\n    []\n    \n*/\nlong[] generate_integers(long a, long b) \n{\n    long[]\
    \ result;\n    if (a > b)\n    {\n        result = generate_integers(b, a);\n\
    \    }\n    else\n    {\n        result = [];\n        for (long i = a; i <= b;\
    \ i++)\n        {\n            if (i % 2 == 0)\n            {\n              \
    \  result ~= i;\n            }\n        }\n    }\n    return result;\n}\nunittest\n\
    {\n    alias candidate = generate_integers;\n\n    assert(candidate(2L, 10L) ==\
    \ [2L, 4L, 6L, 8L]);\n    assert(candidate(10L, 2L) == [2L, 4L, 6L, 8L]);\n  \
    \  assert(candidate(132L, 2L) == [2L, 4L, 6L, 8L]);\n    assert(candidate(17L,\
    \ 89L) == []);\n}\nvoid main(){}"
  status: Exception
  stderr: 'core.exception.AssertError@/tmp/tmp7xwr9480.d(41): unittest failure

    ----------------

    ??:? _d_unittestp [0x4283bd]

    ??:? void tmp7xwr9480.__unittest_L37_C1() [0x427f50]

    ??:? void tmp7xwr9480.__modtest() [0x428140]

    ??:? int core.runtime.runModuleUnitTests().__foreachbody2(object.ModuleInfo*)
    [0x42cd93]

    ??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)).__lambda2(immutable(object.ModuleInfo*))
    [0x42bc26]

    ??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))).__foreachbody2(ref
    rt.sections_elf_shared.DSO) [0x430679]

    ??:? int rt.sections_elf_shared.DSO.opApply(scope int delegate(ref rt.sections_elf_shared.DSO))
    [0x430b28]

    ??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*)))
    [0x430605]

    ??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)) [0x42bbfd]

    ??:? runModuleUnitTests [0x42cb69]

    ??:? void rt.dmain2._d_run_main(int, char**, extern (C) int function(char[][])*).runAll()
    [0x42880c]

    ??:? void rt.dmain2._d_r'
  stdout: ''
  timestamp: 1660163091
- exit_code: 1
  program: "import std.typecons;\nimport std.math;\n/*\n\n    Given two positive integers\
    \ a and b, return the even digits between a\n    and b, in ascending order.\n\n\
    \    For example:\n    >>> generate_integers(2L, 8L)\n    [2L, 4L, 6L, 8L]\n \
    \   >>> generate_integers(8L, 2L)\n    [2L, 4L, 6L, 8L]\n    >>> generate_integers(10L,\
    \ 14L)\n    []\n    \n*/\nlong[] generate_integers(long a, long b) \n{\n    if\
    \ (a > b)\n    {\n        long temp = a;\n        a = b;\n        b = temp;\n\
    \    }\n    long[] result = new long[];\n    foreach (i; a..b)\n    {\n      \
    \  if (i % 2 == 0)\n        {\n            result ~= i;\n        }\n    }\n  \
    \  return result;\n}\nunittest\n{\n    alias candidate = generate_integers;\n\n\
    \    assert(candidate(2L, 10L) == [2L, 4L, 6L, 8L]);\n    assert(candidate(10L,\
    \ 2L) == [2L, 4L, 6L, 8L]);\n    assert(candidate(132L, 2L) == [2L, 4L, 6L, 8L]);\n\
    \    assert(candidate(17L, 89L) == []);\n}\nvoid main(){}"
  status: SyntaxError
  stderr: '/tmp/tmpv2jjdiq9.d(25): Error: new can only create structs, dynamic arrays
    or class objects, not `long[]`''s

    Failed: ["dmd", "-unittest", "-v", "-o-", "/tmp/tmpv2jjdiq9.d", "-I/tmp"]

    '
  stdout: ''
  timestamp: 1660163090
- exit_code: 1
  program: "import std.typecons;\nimport std.math;\n/*\n\n    Given two positive integers\
    \ a and b, return the even digits between a\n    and b, in ascending order.\n\n\
    \    For example:\n    >>> generate_integers(2L, 8L)\n    [2L, 4L, 6L, 8L]\n \
    \   >>> generate_integers(8L, 2L)\n    [2L, 4L, 6L, 8L]\n    >>> generate_integers(10L,\
    \ 14L)\n    []\n    \n*/\nlong[] generate_integers(long a, long b) \n{\n    long[]\
    \ result;\n    if (a > b)\n    {\n        result = generate_integers(b, a);\n\
    \    }\n    else\n    {\n        result = new long[0];\n        for (long i =\
    \ a; i <= b; i++)\n        {\n            if (i % 2 == 0)\n            {\n   \
    \             result ~= i;\n            }\n        }\n    }\n    return result;\n\
    }\nunittest\n{\n    alias candidate = generate_integers;\n\n    assert(candidate(2L,\
    \ 10L) == [2L, 4L, 6L, 8L]);\n    assert(candidate(10L, 2L) == [2L, 4L, 6L, 8L]);\n\
    \    assert(candidate(132L, 2L) == [2L, 4L, 6L, 8L]);\n    assert(candidate(17L,\
    \ 89L) == []);\n}\nvoid main(){}"
  status: Exception
  stderr: 'core.exception.AssertError@/tmp/tmpo37024wm.d(41): unittest failure

    ----------------

    ??:? _d_unittestp [0x4283b5]

    ??:? void tmpo37024wm.__unittest_L37_C1() [0x427f48]

    ??:? void tmpo37024wm.__modtest() [0x428138]

    ??:? int core.runtime.runModuleUnitTests().__foreachbody2(object.ModuleInfo*)
    [0x42cde7]

    ??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)).__lambda2(immutable(object.ModuleInfo*))
    [0x42bc7a]

    ??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))).__foreachbody2(ref
    rt.sections_elf_shared.DSO) [0x4307c5]

    ??:? int rt.sections_elf_shared.DSO.opApply(scope int delegate(ref rt.sections_elf_shared.DSO))
    [0x430c74]

    ??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*)))
    [0x430751]

    ??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)) [0x42bc51]

    ??:? runModuleUnitTests [0x42cbbd]

    ??:? void rt.dmain2._d_run_main(int, char**, extern (C) int function(char[][])*).runAll()
    [0x428804]

    ??:? void rt.dmain2._d_r'
  stdout: ''
  timestamp: 1660163090
- exit_code: 1
  program: "import std.typecons;\nimport std.math;\n/*\n\n    Given two positive integers\
    \ a and b, return the even digits between a\n    and b, in ascending order.\n\n\
    \    For example:\n    >>> generate_integers(2L, 8L)\n    [2L, 4L, 6L, 8L]\n \
    \   >>> generate_integers(8L, 2L)\n    [2L, 4L, 6L, 8L]\n    >>> generate_integers(10L,\
    \ 14L)\n    []\n    \n*/\nlong[] generate_integers(long a, long b) \n{\n    long[]\
    \ result;\n    if (a > b)\n    {\n        result = generate_integers(b, a);\n\
    \    }\n    else\n    {\n        result = new long[0];\n        for (long i =\
    \ a; i <= b; i++)\n        {\n            if (i % 2 == 0)\n            {\n   \
    \             result ~= i;\n            }\n        }\n    }\n    return result;\n\
    }\nunittest\n{\n    alias candidate = generate_integers;\n\n    assert(candidate(2L,\
    \ 10L) == [2L, 4L, 6L, 8L]);\n    assert(candidate(10L, 2L) == [2L, 4L, 6L, 8L]);\n\
    \    assert(candidate(132L, 2L) == [2L, 4L, 6L, 8L]);\n    assert(candidate(17L,\
    \ 89L) == []);\n}\nvoid main(){}"
  status: Exception
  stderr: 'core.exception.AssertError@/tmp/tmpo37024wm.d(41): unittest failure

    ----------------

    ??:? _d_unittestp [0x4283b5]

    ??:? void tmpo37024wm.__unittest_L37_C1() [0x427f48]

    ??:? void tmpo37024wm.__modtest() [0x428138]

    ??:? int core.runtime.runModuleUnitTests().__foreachbody2(object.ModuleInfo*)
    [0x42cde7]

    ??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)).__lambda2(immutable(object.ModuleInfo*))
    [0x42bc7a]

    ??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))).__foreachbody2(ref
    rt.sections_elf_shared.DSO) [0x4307c5]

    ??:? int rt.sections_elf_shared.DSO.opApply(scope int delegate(ref rt.sections_elf_shared.DSO))
    [0x430c74]

    ??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*)))
    [0x430751]

    ??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)) [0x42bc51]

    ??:? runModuleUnitTests [0x42cbbd]

    ??:? void rt.dmain2._d_run_main(int, char**, extern (C) int function(char[][])*).runAll()
    [0x428804]

    ??:? void rt.dmain2._d_r'
  stdout: ''
  timestamp: 1660163090
- exit_code: 1
  program: "import std.typecons;\nimport std.math;\n/*\n\n    Given two positive integers\
    \ a and b, return the even digits between a\n    and b, in ascending order.\n\n\
    \    For example:\n    >>> generate_integers(2L, 8L)\n    [2L, 4L, 6L, 8L]\n \
    \   >>> generate_integers(8L, 2L)\n    [2L, 4L, 6L, 8L]\n    >>> generate_integers(10L,\
    \ 14L)\n    []\n    \n*/\nlong[] generate_integers(long a, long b) \n{\n    long[]\
    \ result;\n    if (a > b) \n    {\n        result = generate_integers(b, a);\n\
    \    }\n    else \n    {\n        result = [];\n        foreach (i; a..b) \n \
    \       {\n            if (i % 2 == 0) \n            {\n                result\
    \ ~= i;\n            }\n        }\n    }\n    return result;\n}\nunittest\n{\n\
    \    alias candidate = generate_integers;\n\n    assert(candidate(2L, 10L) ==\
    \ [2L, 4L, 6L, 8L]);\n    assert(candidate(10L, 2L) == [2L, 4L, 6L, 8L]);\n  \
    \  assert(candidate(132L, 2L) == [2L, 4L, 6L, 8L]);\n    assert(candidate(17L,\
    \ 89L) == []);\n}\nvoid main(){}"
  status: Exception
  stderr: 'core.exception.AssertError@/tmp/tmpp8ltyq6j.d(43): unittest failure

    ----------------

    ??:? _d_unittestp [0x4283cd]

    ??:? void tmpp8ltyq6j.__unittest_L37_C1() [0x42804c]

    ??:? void tmpp8ltyq6j.__modtest() [0x428150]

    ??:? int core.runtime.runModuleUnitTests().__foreachbody2(object.ModuleInfo*)
    [0x42cda3]

    ??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)).__lambda2(immutable(object.ModuleInfo*))
    [0x42bc36]

    ??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))).__foreachbody2(ref
    rt.sections_elf_shared.DSO) [0x430689]

    ??:? int rt.sections_elf_shared.DSO.opApply(scope int delegate(ref rt.sections_elf_shared.DSO))
    [0x430b38]

    ??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*)))
    [0x430615]

    ??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)) [0x42bc0d]

    ??:? runModuleUnitTests [0x42cb79]

    ??:? void rt.dmain2._d_run_main(int, char**, extern (C) int function(char[][])*).runAll()
    [0x42881c]

    ??:? void rt.dmain2._d_r'
  stdout: ''
  timestamp: 1660163090
- exit_code: 1
  program: "import std.typecons;\nimport std.math;\n/*\n\n    Given two positive integers\
    \ a and b, return the even digits between a\n    and b, in ascending order.\n\n\
    \    For example:\n    >>> generate_integers(2L, 8L)\n    [2L, 4L, 6L, 8L]\n \
    \   >>> generate_integers(8L, 2L)\n    [2L, 4L, 6L, 8L]\n    >>> generate_integers(10L,\
    \ 14L)\n    []\n    \n*/\nlong[] generate_integers(long a, long b) \n{\n    long[]\
    \ result;\n    if (a > b)\n    {\n        long temp = a;\n        a = b;\n   \
    \     b = temp;\n    }\n    if (a % 2 == 0)\n    {\n        result = new long[(b\
    \ - a) / 2 + 1];\n        for (long i = 0; i < result.length; i++)\n        {\n\
    \            result[i] = a + i * 2;\n        }\n    }\n    else\n    {\n     \
    \   result = new long[(b - a) / 2];\n        for (long i = 0; i < result.length;\
    \ i++)\n        {\n            result[i] = a + i * 2 + 1;\n        }\n    }\n\
    \    return result;\n}\nunittest\n{\n    alias candidate = generate_integers;\n\
    \n    assert(candidate(2L, 10L) == [2L, 4L, 6L, 8L]);\n    assert(candidate(10L,\
    \ 2L) == [2L, 4L, 6L, 8L]);\n    assert(candidate(132L, 2L) == [2L, 4L, 6L, 8L]);\n\
    \    assert(candidate(17L, 89L) == []);\n}\nvoid main(){}"
  status: Exception
  stderr: 'core.exception.AssertError@/tmp/tmpdvs1xgpq.d(48): unittest failure

    ----------------

    ??:? _d_unittestp [0x42844d]

    ??:? void tmpdvs1xgpq.__unittest_L44_C1() [0x427fdc]

    ??:? void tmpdvs1xgpq.__modtest() [0x4281cc]

    ??:? int core.runtime.runModuleUnitTests().__foreachbody2(object.ModuleInfo*)
    [0x42c507]

    ??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)).__lambda2(immutable(object.ModuleInfo*))
    [0x42b39a]

    ??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))).__foreachbody2(ref
    rt.sections_elf_shared.DSO) [0x430625]

    ??:? int rt.sections_elf_shared.DSO.opApply(scope int delegate(ref rt.sections_elf_shared.DSO))
    [0x430ad4]

    ??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*)))
    [0x4305b1]

    ??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)) [0x42b371]

    ??:? runModuleUnitTests [0x42c2dd]

    ??:? void rt.dmain2._d_run_main(int, char**, extern (C) int function(char[][])*).runAll()
    [0x428910]

    ??:? void rt.dmain2._d_r'
  stdout: ''
  timestamp: 1660163090
- exit_code: 1
  program: "import std.typecons;\nimport std.math;\n/*\n\n    Given two positive integers\
    \ a and b, return the even digits between a\n    and b, in ascending order.\n\n\
    \    For example:\n    >>> generate_integers(2L, 8L)\n    [2L, 4L, 6L, 8L]\n \
    \   >>> generate_integers(8L, 2L)\n    [2L, 4L, 6L, 8L]\n    >>> generate_integers(10L,\
    \ 14L)\n    []\n    \n*/\nlong[] generate_integers(long a, long b) \n{\n    long[]\
    \ result;\n    if (a > b)\n    {\n        result = generate_integers(b, a);\n\
    \    }\n    else\n    {\n        if (a % 2 == 0)\n        {\n            result\
    \ = new long[(b - a) / 2 + 1];\n            for (int i = 0; i < result.length;\
    \ i++)\n            {\n                result[i] = a + i * 2;\n            }\n\
    \        }\n        else\n        {\n            result = new long[(b - a) / 2];\n\
    \            for (int i = 0; i < result.length; i++)\n            {\n        \
    \        result[i] = a + i * 2 + 1;\n            }\n        }\n    }\n    return\
    \ result;\n}\nunittest\n{\n    alias candidate = generate_integers;\n\n    assert(candidate(2L,\
    \ 10L) == [2L, 4L, 6L, 8L]);\n    assert(candidate(10L, 2L) == [2L, 4L, 6L, 8L]);\n\
    \    assert(candidate(132L, 2L) == [2L, 4L, 6L, 8L]);\n    assert(candidate(17L,\
    \ 89L) == []);\n}\nvoid main(){}"
  status: Exception
  stderr: 'core.exception.AssertError@/tmp/tmpl8pnt19b.d(49): unittest failure

    ----------------

    ??:? _d_unittestp [0x42844d]

    ??:? void tmpl8pnt19b.__unittest_L45_C1() [0x427fdc]

    ??:? void tmpl8pnt19b.__modtest() [0x4281cc]

    ??:? int core.runtime.runModuleUnitTests().__foreachbody2(object.ModuleInfo*)
    [0x42c507]

    ??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)).__lambda2(immutable(object.ModuleInfo*))
    [0x42b39a]

    ??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))).__foreachbody2(ref
    rt.sections_elf_shared.DSO) [0x430625]

    ??:? int rt.sections_elf_shared.DSO.opApply(scope int delegate(ref rt.sections_elf_shared.DSO))
    [0x430ad4]

    ??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*)))
    [0x4305b1]

    ??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)) [0x42b371]

    ??:? runModuleUnitTests [0x42c2dd]

    ??:? void rt.dmain2._d_run_main(int, char**, extern (C) int function(char[][])*).runAll()
    [0x428910]

    ??:? void rt.dmain2._d_r'
  stdout: ''
  timestamp: 1660163090
- exit_code: 1
  program: "import std.typecons;\nimport std.math;\n/*\n\n    Given two positive integers\
    \ a and b, return the even digits between a\n    and b, in ascending order.\n\n\
    \    For example:\n    >>> generate_integers(2L, 8L)\n    [2L, 4L, 6L, 8L]\n \
    \   >>> generate_integers(8L, 2L)\n    [2L, 4L, 6L, 8L]\n    >>> generate_integers(10L,\
    \ 14L)\n    []\n    \n*/\nlong[] generate_integers(long a, long b) \n{\n    long[]\
    \ result;\n    if (a > b)\n    {\n        result = generate_integers(b, a);\n\
    \    }\n    else\n    {\n        if (a % 2 == 0)\n        {\n            result\
    \ = new long[(b - a) / 2 + 1];\n            for (int i = 0; i < result.length;\
    \ i++)\n            {\n                result[i] = a + 2 * i;\n            }\n\
    \        }\n        else\n        {\n            result = new long[(b - a - 1)\
    \ / 2 + 1];\n            for (int i = 0; i < result.length; i++)\n           \
    \ {\n                result[i] = a + 2 * i + 1;\n            }\n        }\n  \
    \  }\n    return result;\n}\nunittest\n{\n    alias candidate = generate_integers;\n\
    \n    assert(candidate(2L, 10L) == [2L, 4L, 6L, 8L]);\n    assert(candidate(10L,\
    \ 2L) == [2L, 4L, 6L, 8L]);\n    assert(candidate(132L, 2L) == [2L, 4L, 6L, 8L]);\n\
    \    assert(candidate(17L, 89L) == []);\n}\nvoid main(){}"
  status: Exception
  stderr: 'core.exception.AssertError@/tmp/tmpcbt_d1nl.d(49): unittest failure

    ----------------

    ??:? _d_unittestp [0x428455]

    ??:? void tmpcbt_d1nl.__unittest_L45_C1() [0x427fe4]

    ??:? void tmpcbt_d1nl.__modtest() [0x4281d4]

    ??:? int core.runtime.runModuleUnitTests().__foreachbody2(object.ModuleInfo*)
    [0x42c50f]

    ??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)).__lambda2(immutable(object.ModuleInfo*))
    [0x42b3a2]

    ??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))).__foreachbody2(ref
    rt.sections_elf_shared.DSO) [0x43062d]

    ??:? int rt.sections_elf_shared.DSO.opApply(scope int delegate(ref rt.sections_elf_shared.DSO))
    [0x430adc]

    ??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*)))
    [0x4305b9]

    ??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)) [0x42b379]

    ??:? runModuleUnitTests [0x42c2e5]

    ??:? void rt.dmain2._d_run_main(int, char**, extern (C) int function(char[][])*).runAll()
    [0x428918]

    ??:? void rt.dmain2._d_r'
  stdout: ''
  timestamp: 1660163090
- exit_code: 1
  program: "import std.typecons;\nimport std.math;\n/*\n\n    Given two positive integers\
    \ a and b, return the even digits between a\n    and b, in ascending order.\n\n\
    \    For example:\n    >>> generate_integers(2L, 8L)\n    [2L, 4L, 6L, 8L]\n \
    \   >>> generate_integers(8L, 2L)\n    [2L, 4L, 6L, 8L]\n    >>> generate_integers(10L,\
    \ 14L)\n    []\n    \n*/\nlong[] generate_integers(long a, long b) \n{\n    long[]\
    \ result;\n    if (a > b)\n    {\n        result = generate_integers(b, a);\n\
    \    }\n    else\n    {\n        result = new long[0];\n        for (long i =\
    \ a; i <= b; i++)\n        {\n            if (i % 2 == 0)\n            {\n   \
    \             result ~= i;\n            }\n        }\n    }\n    return result;\n\
    }\nunittest\n{\n    alias candidate = generate_integers;\n\n    assert(candidate(2L,\
    \ 10L) == [2L, 4L, 6L, 8L]);\n    assert(candidate(10L, 2L) == [2L, 4L, 6L, 8L]);\n\
    \    assert(candidate(132L, 2L) == [2L, 4L, 6L, 8L]);\n    assert(candidate(17L,\
    \ 89L) == []);\n}\nvoid main(){}"
  status: Exception
  stderr: 'core.exception.AssertError@/tmp/tmpo37024wm.d(41): unittest failure

    ----------------

    ??:? _d_unittestp [0x4283b5]

    ??:? void tmpo37024wm.__unittest_L37_C1() [0x427f48]

    ??:? void tmpo37024wm.__modtest() [0x428138]

    ??:? int core.runtime.runModuleUnitTests().__foreachbody2(object.ModuleInfo*)
    [0x42cde7]

    ??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)).__lambda2(immutable(object.ModuleInfo*))
    [0x42bc7a]

    ??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))).__foreachbody2(ref
    rt.sections_elf_shared.DSO) [0x4307c5]

    ??:? int rt.sections_elf_shared.DSO.opApply(scope int delegate(ref rt.sections_elf_shared.DSO))
    [0x430c74]

    ??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*)))
    [0x430751]

    ??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)) [0x42bc51]

    ??:? runModuleUnitTests [0x42cbbd]

    ??:? void rt.dmain2._d_run_main(int, char**, extern (C) int function(char[][])*).runAll()
    [0x428804]

    ??:? void rt.dmain2._d_r'
  stdout: ''
  timestamp: 1660163090
- exit_code: 1
  program: "import std.typecons;\nimport std.math;\n/*\n\n    Given two positive integers\
    \ a and b, return the even digits between a\n    and b, in ascending order.\n\n\
    \    For example:\n    >>> generate_integers(2L, 8L)\n    [2L, 4L, 6L, 8L]\n \
    \   >>> generate_integers(8L, 2L)\n    [2L, 4L, 6L, 8L]\n    >>> generate_integers(10L,\
    \ 14L)\n    []\n    \n*/\nlong[] generate_integers(long a, long b) \n{\n    long[]\
    \ result;\n    if (a > b)\n    {\n        result = generate_integers(b, a);\n\
    \    }\n    else\n    {\n        result = new long[];\n        foreach (i; a..b+1)\n\
    \        {\n            if (i % 2 == 0)\n            {\n                result\
    \ ~= i;\n            }\n        }\n    }\n    return result;\n}\nunittest\n{\n\
    \    alias candidate = generate_integers;\n\n    assert(candidate(2L, 10L) ==\
    \ [2L, 4L, 6L, 8L]);\n    assert(candidate(10L, 2L) == [2L, 4L, 6L, 8L]);\n  \
    \  assert(candidate(132L, 2L) == [2L, 4L, 6L, 8L]);\n    assert(candidate(17L,\
    \ 89L) == []);\n}\nvoid main(){}"
  status: SyntaxError
  stderr: '/tmp/tmpgb5373zm.d(26): Error: new can only create structs, dynamic arrays
    or class objects, not `long[]`''s

    Failed: ["dmd", "-unittest", "-v", "-o-", "/tmp/tmpgb5373zm.d", "-I/tmp"]

    '
  stdout: ''
  timestamp: 1660163090
- exit_code: 1
  program: "import std.typecons;\nimport std.math;\n/*\n\n    Given two positive integers\
    \ a and b, return the even digits between a\n    and b, in ascending order.\n\n\
    \    For example:\n    >>> generate_integers(2L, 8L)\n    [2L, 4L, 6L, 8L]\n \
    \   >>> generate_integers(8L, 2L)\n    [2L, 4L, 6L, 8L]\n    >>> generate_integers(10L,\
    \ 14L)\n    []\n    \n*/\nlong[] generate_integers(long a, long b) \n{\n    long[]\
    \ result;\n    if (a > b)\n    {\n        result = generate_integers(b, a);\n\
    \    }\n    else\n    {\n        result = new long[0];\n        long i = a;\n\
    \        while (i <= b)\n        {\n            if (i % 2 == 0)\n            {\n\
    \                result ~= i;\n            }\n            i++;\n        }\n  \
    \  }\n    return result;\n}\nunittest\n{\n    alias candidate = generate_integers;\n\
    \n    assert(candidate(2L, 10L) == [2L, 4L, 6L, 8L]);\n    assert(candidate(10L,\
    \ 2L) == [2L, 4L, 6L, 8L]);\n    assert(candidate(132L, 2L) == [2L, 4L, 6L, 8L]);\n\
    \    assert(candidate(17L, 89L) == []);\n}\nvoid main(){}"
  status: Exception
  stderr: 'core.exception.AssertError@/tmp/tmp0wqyy1f1.d(43): unittest failure

    ----------------

    ??:? _d_unittestp [0x4283b5]

    ??:? void tmp0wqyy1f1.__unittest_L39_C1() [0x427f48]

    ??:? void tmp0wqyy1f1.__modtest() [0x428138]

    ??:? int core.runtime.runModuleUnitTests().__foreachbody2(object.ModuleInfo*)
    [0x42cde7]

    ??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)).__lambda2(immutable(object.ModuleInfo*))
    [0x42bc7a]

    ??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))).__foreachbody2(ref
    rt.sections_elf_shared.DSO) [0x4307c5]

    ??:? int rt.sections_elf_shared.DSO.opApply(scope int delegate(ref rt.sections_elf_shared.DSO))
    [0x430c74]

    ??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*)))
    [0x430751]

    ??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)) [0x42bc51]

    ??:? runModuleUnitTests [0x42cbbd]

    ??:? void rt.dmain2._d_run_main(int, char**, extern (C) int function(char[][])*).runAll()
    [0x428804]

    ??:? void rt.dmain2._d_r'
  stdout: ''
  timestamp: 1660163091
- exit_code: 1
  program: "import std.typecons;\nimport std.math;\n/*\n\n    Given two positive integers\
    \ a and b, return the even digits between a\n    and b, in ascending order.\n\n\
    \    For example:\n    >>> generate_integers(2L, 8L)\n    [2L, 4L, 6L, 8L]\n \
    \   >>> generate_integers(8L, 2L)\n    [2L, 4L, 6L, 8L]\n    >>> generate_integers(10L,\
    \ 14L)\n    []\n    \n*/\nlong[] generate_integers(long a, long b) \n{\n    long[]\
    \ result;\n    if (a > b) \n    {\n        result = generate_integers(b, a);\n\
    \    }\n    else \n    {\n        result = new long[0];\n        for (long i =\
    \ a; i <= b; i++) \n        {\n            if (i % 2 == 0) \n            {\n \
    \               result ~= i;\n            }\n        }\n    }\n    return result;\n\
    }\nunittest\n{\n    alias candidate = generate_integers;\n\n    assert(candidate(2L,\
    \ 10L) == [2L, 4L, 6L, 8L]);\n    assert(candidate(10L, 2L) == [2L, 4L, 6L, 8L]);\n\
    \    assert(candidate(132L, 2L) == [2L, 4L, 6L, 8L]);\n    assert(candidate(17L,\
    \ 89L) == []);\n}\nvoid main(){}"
  status: Exception
  stderr: 'core.exception.AssertError@/tmp/tmpm7eqr98h.d(41): unittest failure

    ----------------

    ??:? _d_unittestp [0x4283b5]

    ??:? void tmpm7eqr98h.__unittest_L37_C1() [0x427f48]

    ??:? void tmpm7eqr98h.__modtest() [0x428138]

    ??:? int core.runtime.runModuleUnitTests().__foreachbody2(object.ModuleInfo*)
    [0x42cde7]

    ??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)).__lambda2(immutable(object.ModuleInfo*))
    [0x42bc7a]

    ??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))).__foreachbody2(ref
    rt.sections_elf_shared.DSO) [0x4307c5]

    ??:? int rt.sections_elf_shared.DSO.opApply(scope int delegate(ref rt.sections_elf_shared.DSO))
    [0x430c74]

    ??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*)))
    [0x430751]

    ??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)) [0x42bc51]

    ??:? runModuleUnitTests [0x42cbbd]

    ??:? void rt.dmain2._d_run_main(int, char**, extern (C) int function(char[][])*).runAll()
    [0x428804]

    ??:? void rt.dmain2._d_r'
  stdout: ''
  timestamp: 1660163091
- exit_code: 1
  program: "import std.typecons;\nimport std.math;\n/*\n\n    Given two positive integers\
    \ a and b, return the even digits between a\n    and b, in ascending order.\n\n\
    \    For example:\n    >>> generate_integers(2L, 8L)\n    [2L, 4L, 6L, 8L]\n \
    \   >>> generate_integers(8L, 2L)\n    [2L, 4L, 6L, 8L]\n    >>> generate_integers(10L,\
    \ 14L)\n    []\n    \n*/\nlong[] generate_integers(long a, long b) \n{\n    long[]\
    \ result;\n    if (a > b)\n    {\n        result = generate_integers(b, a);\n\
    \    }\n    else\n    {\n        result = new long[0];\n        long i = a;\n\
    \        while (i <= b)\n        {\n            if (i % 2 == 0)\n            {\n\
    \                result ~= i;\n            }\n            i++;\n        }\n  \
    \  }\n    return result;\n}\nunittest\n{\n    alias candidate = generate_integers;\n\
    \n    assert(candidate(2L, 10L) == [2L, 4L, 6L, 8L]);\n    assert(candidate(10L,\
    \ 2L) == [2L, 4L, 6L, 8L]);\n    assert(candidate(132L, 2L) == [2L, 4L, 6L, 8L]);\n\
    \    assert(candidate(17L, 89L) == []);\n}\nvoid main(){}"
  status: Exception
  stderr: 'core.exception.AssertError@/tmp/tmp0wqyy1f1.d(43): unittest failure

    ----------------

    ??:? _d_unittestp [0x4283b5]

    ??:? void tmp0wqyy1f1.__unittest_L39_C1() [0x427f48]

    ??:? void tmp0wqyy1f1.__modtest() [0x428138]

    ??:? int core.runtime.runModuleUnitTests().__foreachbody2(object.ModuleInfo*)
    [0x42cde7]

    ??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)).__lambda2(immutable(object.ModuleInfo*))
    [0x42bc7a]

    ??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))).__foreachbody2(ref
    rt.sections_elf_shared.DSO) [0x4307c5]

    ??:? int rt.sections_elf_shared.DSO.opApply(scope int delegate(ref rt.sections_elf_shared.DSO))
    [0x430c74]

    ??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*)))
    [0x430751]

    ??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)) [0x42bc51]

    ??:? runModuleUnitTests [0x42cbbd]

    ??:? void rt.dmain2._d_run_main(int, char**, extern (C) int function(char[][])*).runAll()
    [0x428804]

    ??:? void rt.dmain2._d_r'
  stdout: ''
  timestamp: 1660163091
- exit_code: 1
  program: "import std.typecons;\nimport std.math;\n/*\n\n    Given two positive integers\
    \ a and b, return the even digits between a\n    and b, in ascending order.\n\n\
    \    For example:\n    >>> generate_integers(2L, 8L)\n    [2L, 4L, 6L, 8L]\n \
    \   >>> generate_integers(8L, 2L)\n    [2L, 4L, 6L, 8L]\n    >>> generate_integers(10L,\
    \ 14L)\n    []\n    \n*/\nlong[] generate_integers(long a, long b) \n{\n    long[]\
    \ result;\n    if (a > b)\n    {\n        long temp = a;\n        a = b;\n   \
    \     b = temp;\n    }\n    if (a % 2 != 0)\n    {\n        a++;\n    }\n    if\
    \ (b % 2 != 0)\n    {\n        b--;\n    }\n    if (a > b)\n    {\n        return\
    \ result;\n    }\n    result = new long[(b - a) / 2 + 1];\n    for (int i = 0;\
    \ i < result.length; i++)\n    {\n        result[i] = a + i * 2;\n    }\n    return\
    \ result;\n}\nunittest\n{\n    alias candidate = generate_integers;\n\n    assert(candidate(2L,\
    \ 10L) == [2L, 4L, 6L, 8L]);\n    assert(candidate(10L, 2L) == [2L, 4L, 6L, 8L]);\n\
    \    assert(candidate(132L, 2L) == [2L, 4L, 6L, 8L]);\n    assert(candidate(17L,\
    \ 89L) == []);\n}\nvoid main(){}"
  status: Exception
  stderr: 'core.exception.AssertError@/tmp/tmp4f6w0e76.d(49): unittest failure

    ----------------

    ??:? _d_unittestp [0x4283fd]

    ??:? void tmp4f6w0e76.__unittest_L45_C1() [0x427f90]

    ??:? void tmp4f6w0e76.__modtest() [0x428180]

    ??:? int core.runtime.runModuleUnitTests().__foreachbody2(object.ModuleInfo*)
    [0x42c4b7]

    ??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)).__lambda2(immutable(object.ModuleInfo*))
    [0x42b34a]

    ??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))).__foreachbody2(ref
    rt.sections_elf_shared.DSO) [0x4305d5]

    ??:? int rt.sections_elf_shared.DSO.opApply(scope int delegate(ref rt.sections_elf_shared.DSO))
    [0x430a84]

    ??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*)))
    [0x430561]

    ??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)) [0x42b321]

    ??:? runModuleUnitTests [0x42c28d]

    ??:? void rt.dmain2._d_run_main(int, char**, extern (C) int function(char[][])*).runAll()
    [0x4288c0]

    ??:? void rt.dmain2._d_r'
  stdout: ''
  timestamp: 1660163091
- exit_code: 1
  program: "import std.typecons;\nimport std.math;\n/*\n\n    Given two positive integers\
    \ a and b, return the even digits between a\n    and b, in ascending order.\n\n\
    \    For example:\n    >>> generate_integers(2L, 8L)\n    [2L, 4L, 6L, 8L]\n \
    \   >>> generate_integers(8L, 2L)\n    [2L, 4L, 6L, 8L]\n    >>> generate_integers(10L,\
    \ 14L)\n    []\n    \n*/\nlong[] generate_integers(long a, long b) \n{\n    long[]\
    \ result;\n    if (a > b) {\n        result = generate_integers(b, a);\n    }\
    \ else {\n        result = new long[(int)((b - a) / 2) + 1];\n        foreach\
    \ (i, ref e; result) {\n            e = a + 2 * i;\n        }\n    }\n    return\
    \ result;\n}\nunittest\n{\n    alias candidate = generate_integers;\n\n    assert(candidate(2L,\
    \ 10L) == [2L, 4L, 6L, 8L]);\n    assert(candidate(10L, 2L) == [2L, 4L, 6L, 8L]);\n\
    \    assert(candidate(132L, 2L) == [2L, 4L, 6L, 8L]);\n    assert(candidate(17L,\
    \ 89L) == []);\n}\nvoid main(){}"
  status: SyntaxError
  stderr: '/tmp/tmp3ehlrinp.d(23): Error: C style cast illegal, use `cast(int)((b
    - a) / 2)`

    Failed: ["dmd", "-unittest", "-v", "-o-", "/tmp/tmp3ehlrinp.d", "-I/tmp"]

    '
  stdout: ''
  timestamp: 1660163090
- exit_code: 1
  program: "import std.typecons;\nimport std.math;\n/*\n\n    Given two positive integers\
    \ a and b, return the even digits between a\n    and b, in ascending order.\n\n\
    \    For example:\n    >>> generate_integers(2L, 8L)\n    [2L, 4L, 6L, 8L]\n \
    \   >>> generate_integers(8L, 2L)\n    [2L, 4L, 6L, 8L]\n    >>> generate_integers(10L,\
    \ 14L)\n    []\n    \n*/\nlong[] generate_integers(long a, long b) \n{\n    long[]\
    \ result;\n    if (a > b)\n    {\n        result = generate_integers(b, a);\n\
    \    }\n    else\n    {\n        if (a % 2 == 0)\n        {\n            result\
    \ = new long[(b - a) / 2 + 1];\n            for (int i = 0; i < result.length;\
    \ i++)\n            {\n                result[i] = a + i * 2;\n            }\n\
    \        }\n        else\n        {\n            result = new long[(b - a - 1)\
    \ / 2 + 1];\n            for (int i = 0; i < result.length; i++)\n           \
    \ {\n                result[i] = a + i * 2 + 1;\n            }\n        }\n  \
    \  }\n    return result;\n}\nunittest\n{\n    alias candidate = generate_integers;\n\
    \n    assert(candidate(2L, 10L) == [2L, 4L, 6L, 8L]);\n    assert(candidate(10L,\
    \ 2L) == [2L, 4L, 6L, 8L]);\n    assert(candidate(132L, 2L) == [2L, 4L, 6L, 8L]);\n\
    \    assert(candidate(17L, 89L) == []);\n}\nvoid main(){}"
  status: Exception
  stderr: 'core.exception.AssertError@/tmp/tmp6zh978ja.d(49): unittest failure

    ----------------

    ??:? _d_unittestp [0x428455]

    ??:? void tmp6zh978ja.__unittest_L45_C1() [0x427fe4]

    ??:? void tmp6zh978ja.__modtest() [0x4281d4]

    ??:? int core.runtime.runModuleUnitTests().__foreachbody2(object.ModuleInfo*)
    [0x42c50f]

    ??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)).__lambda2(immutable(object.ModuleInfo*))
    [0x42b3a2]

    ??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))).__foreachbody2(ref
    rt.sections_elf_shared.DSO) [0x43062d]

    ??:? int rt.sections_elf_shared.DSO.opApply(scope int delegate(ref rt.sections_elf_shared.DSO))
    [0x430adc]

    ??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*)))
    [0x4305b9]

    ??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)) [0x42b379]

    ??:? runModuleUnitTests [0x42c2e5]

    ??:? void rt.dmain2._d_run_main(int, char**, extern (C) int function(char[][])*).runAll()
    [0x428918]

    ??:? void rt.dmain2._d_r'
  stdout: ''
  timestamp: 1660163091
- exit_code: 1
  program: "import std.typecons;\nimport std.math;\n/*\n\n    Given two positive integers\
    \ a and b, return the even digits between a\n    and b, in ascending order.\n\n\
    \    For example:\n    >>> generate_integers(2L, 8L)\n    [2L, 4L, 6L, 8L]\n \
    \   >>> generate_integers(8L, 2L)\n    [2L, 4L, 6L, 8L]\n    >>> generate_integers(10L,\
    \ 14L)\n    []\n    \n*/\nlong[] generate_integers(long a, long b) \n{\n    long[]\
    \ result;\n    if (a > b)\n    {\n        result = generate_integers(b, a);\n\
    \    }\n    else\n    {\n        result = new long[];\n        foreach (i; a..b+1)\n\
    \        {\n            if (i % 2 == 0)\n            {\n                result\
    \ ~= i;\n            }\n        }\n    }\n    return result;\n}\nunittest\n{\n\
    \    alias candidate = generate_integers;\n\n    assert(candidate(2L, 10L) ==\
    \ [2L, 4L, 6L, 8L]);\n    assert(candidate(10L, 2L) == [2L, 4L, 6L, 8L]);\n  \
    \  assert(candidate(132L, 2L) == [2L, 4L, 6L, 8L]);\n    assert(candidate(17L,\
    \ 89L) == []);\n}\nvoid main(){}"
  status: SyntaxError
  stderr: '/tmp/tmpgb5373zm.d(26): Error: new can only create structs, dynamic arrays
    or class objects, not `long[]`''s

    Failed: ["dmd", "-unittest", "-v", "-o-", "/tmp/tmpgb5373zm.d", "-I/tmp"]

    '
  stdout: ''
  timestamp: 1660163090
- exit_code: 1
  program: "import std.typecons;\nimport std.math;\n/*\n\n    Given two positive integers\
    \ a and b, return the even digits between a\n    and b, in ascending order.\n\n\
    \    For example:\n    >>> generate_integers(2L, 8L)\n    [2L, 4L, 6L, 8L]\n \
    \   >>> generate_integers(8L, 2L)\n    [2L, 4L, 6L, 8L]\n    >>> generate_integers(10L,\
    \ 14L)\n    []\n    \n*/\nlong[] generate_integers(long a, long b) \n{\n    long[]\
    \ result;\n    if (a > b)\n    {\n        result = generate_integers(b, a);\n\
    \    }\n    else\n    {\n        result = new long[0];\n        for (long i =\
    \ a; i <= b; i++)\n        {\n            if (i % 2 == 0)\n            {\n   \
    \             result ~= i;\n            }\n        }\n    }\n    return result;\n\
    }\nunittest\n{\n    alias candidate = generate_integers;\n\n    assert(candidate(2L,\
    \ 10L) == [2L, 4L, 6L, 8L]);\n    assert(candidate(10L, 2L) == [2L, 4L, 6L, 8L]);\n\
    \    assert(candidate(132L, 2L) == [2L, 4L, 6L, 8L]);\n    assert(candidate(17L,\
    \ 89L) == []);\n}\nvoid main(){}"
  status: Exception
  stderr: 'core.exception.AssertError@/tmp/tmpo37024wm.d(41): unittest failure

    ----------------

    ??:? _d_unittestp [0x4283b5]

    ??:? void tmpo37024wm.__unittest_L37_C1() [0x427f48]

    ??:? void tmpo37024wm.__modtest() [0x428138]

    ??:? int core.runtime.runModuleUnitTests().__foreachbody2(object.ModuleInfo*)
    [0x42cde7]

    ??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)).__lambda2(immutable(object.ModuleInfo*))
    [0x42bc7a]

    ??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))).__foreachbody2(ref
    rt.sections_elf_shared.DSO) [0x4307c5]

    ??:? int rt.sections_elf_shared.DSO.opApply(scope int delegate(ref rt.sections_elf_shared.DSO))
    [0x430c74]

    ??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*)))
    [0x430751]

    ??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)) [0x42bc51]

    ??:? runModuleUnitTests [0x42cbbd]

    ??:? void rt.dmain2._d_run_main(int, char**, extern (C) int function(char[][])*).runAll()
    [0x428804]

    ??:? void rt.dmain2._d_r'
  stdout: ''
  timestamp: 1660163090
- exit_code: 1
  program: "import std.typecons;\nimport std.math;\n/*\n\n    Given two positive integers\
    \ a and b, return the even digits between a\n    and b, in ascending order.\n\n\
    \    For example:\n    >>> generate_integers(2L, 8L)\n    [2L, 4L, 6L, 8L]\n \
    \   >>> generate_integers(8L, 2L)\n    [2L, 4L, 6L, 8L]\n    >>> generate_integers(10L,\
    \ 14L)\n    []\n    \n*/\nlong[] generate_integers(long a, long b) \n{\n    if\
    \ (a > b)\n    {\n        long temp = a;\n        a = b;\n        b = temp;\n\
    \    }\n    long[] result = new long[(b - a) / 2 + 1];\n    for (long i = 0; i\
    \ < result.length; i++)\n    {\n        result[i] = a + i * 2;\n    }\n    return\
    \ result;\n}\nunittest\n{\n    alias candidate = generate_integers;\n\n    assert(candidate(2L,\
    \ 10L) == [2L, 4L, 6L, 8L]);\n    assert(candidate(10L, 2L) == [2L, 4L, 6L, 8L]);\n\
    \    assert(candidate(132L, 2L) == [2L, 4L, 6L, 8L]);\n    assert(candidate(17L,\
    \ 89L) == []);\n}\nvoid main(){}"
  status: Exception
  stderr: 'core.exception.AssertError@/tmp/tmpj4wdl13b.d(36): unittest failure

    ----------------

    ??:? _d_unittestp [0x4283a5]

    ??:? void tmpj4wdl13b.__unittest_L32_C1() [0x427f34]

    ??:? void tmpj4wdl13b.__modtest() [0x428124]

    ??:? int core.runtime.runModuleUnitTests().__foreachbody2(object.ModuleInfo*)
    [0x42c45f]

    ??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)).__lambda2(immutable(object.ModuleInfo*))
    [0x42b2f2]

    ??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))).__foreachbody2(ref
    rt.sections_elf_shared.DSO) [0x43057d]

    ??:? int rt.sections_elf_shared.DSO.opApply(scope int delegate(ref rt.sections_elf_shared.DSO))
    [0x430a2c]

    ??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*)))
    [0x430509]

    ??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)) [0x42b2c9]

    ??:? runModuleUnitTests [0x42c235]

    ??:? void rt.dmain2._d_run_main(int, char**, extern (C) int function(char[][])*).runAll()
    [0x428868]

    ??:? void rt.dmain2._d_r'
  stdout: ''
  timestamp: 1660163091
- exit_code: 1
  program: "import std.typecons;\nimport std.math;\n/*\n\n    Given two positive integers\
    \ a and b, return the even digits between a\n    and b, in ascending order.\n\n\
    \    For example:\n    >>> generate_integers(2L, 8L)\n    [2L, 4L, 6L, 8L]\n \
    \   >>> generate_integers(8L, 2L)\n    [2L, 4L, 6L, 8L]\n    >>> generate_integers(10L,\
    \ 14L)\n    []\n    \n*/\nlong[] generate_integers(long a, long b) \n{\n    auto\
    \ result = new long[];\n    if (a > b)\n    {\n        a = a ^ b;\n        b =\
    \ a ^ b;\n        a = a ^ b;\n    }\n    for (long i = a; i <= b; i++)\n    {\n\
    \        if (i % 2 == 0)\n        {\n            result ~= i;\n        }\n   \
    \ }\n    return result;\n}\nunittest\n{\n    alias candidate = generate_integers;\n\
    \n    assert(candidate(2L, 10L) == [2L, 4L, 6L, 8L]);\n    assert(candidate(10L,\
    \ 2L) == [2L, 4L, 6L, 8L]);\n    assert(candidate(132L, 2L) == [2L, 4L, 6L, 8L]);\n\
    \    assert(candidate(17L, 89L) == []);\n}\nvoid main(){}"
  status: SyntaxError
  stderr: '/tmp/tmpdimhr9zo.d(19): Error: new can only create structs, dynamic arrays
    or class objects, not `long[]`''s

    Failed: ["dmd", "-unittest", "-v", "-o-", "/tmp/tmpdimhr9zo.d", "-I/tmp"]

    '
  stdout: ''
  timestamp: 1660163091
- exit_code: 1
  program: "import std.typecons;\nimport std.math;\n/*\n\n    Given two positive integers\
    \ a and b, return the even digits between a\n    and b, in ascending order.\n\n\
    \    For example:\n    >>> generate_integers(2L, 8L)\n    [2L, 4L, 6L, 8L]\n \
    \   >>> generate_integers(8L, 2L)\n    [2L, 4L, 6L, 8L]\n    >>> generate_integers(10L,\
    \ 14L)\n    []\n    \n*/\nlong[] generate_integers(long a, long b) \n{\n    long[]\
    \ result;\n    if (a > b)\n    {\n        result = generate_integers(b, a);\n\
    \    }\n    else\n    {\n        result = new long[0];\n        for (long i =\
    \ a; i <= b; i++)\n        {\n            if (i % 2 == 0)\n            {\n   \
    \             result ~= i;\n            }\n        }\n    }\n    return result;\n\
    }\nunittest\n{\n    alias candidate = generate_integers;\n\n    assert(candidate(2L,\
    \ 10L) == [2L, 4L, 6L, 8L]);\n    assert(candidate(10L, 2L) == [2L, 4L, 6L, 8L]);\n\
    \    assert(candidate(132L, 2L) == [2L, 4L, 6L, 8L]);\n    assert(candidate(17L,\
    \ 89L) == []);\n}\nvoid main(){}"
  status: Exception
  stderr: 'core.exception.AssertError@/tmp/tmpo37024wm.d(41): unittest failure

    ----------------

    ??:? _d_unittestp [0x4283b5]

    ??:? void tmpo37024wm.__unittest_L37_C1() [0x427f48]

    ??:? void tmpo37024wm.__modtest() [0x428138]

    ??:? int core.runtime.runModuleUnitTests().__foreachbody2(object.ModuleInfo*)
    [0x42cde7]

    ??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)).__lambda2(immutable(object.ModuleInfo*))
    [0x42bc7a]

    ??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))).__foreachbody2(ref
    rt.sections_elf_shared.DSO) [0x4307c5]

    ??:? int rt.sections_elf_shared.DSO.opApply(scope int delegate(ref rt.sections_elf_shared.DSO))
    [0x430c74]

    ??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*)))
    [0x430751]

    ??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)) [0x42bc51]

    ??:? runModuleUnitTests [0x42cbbd]

    ??:? void rt.dmain2._d_run_main(int, char**, extern (C) int function(char[][])*).runAll()
    [0x428804]

    ??:? void rt.dmain2._d_r'
  stdout: ''
  timestamp: 1660163090
- exit_code: 1
  program: "import std.typecons;\nimport std.math;\n/*\n\n    Given two positive integers\
    \ a and b, return the even digits between a\n    and b, in ascending order.\n\n\
    \    For example:\n    >>> generate_integers(2L, 8L)\n    [2L, 4L, 6L, 8L]\n \
    \   >>> generate_integers(8L, 2L)\n    [2L, 4L, 6L, 8L]\n    >>> generate_integers(10L,\
    \ 14L)\n    []\n    \n*/\nlong[] generate_integers(long a, long b) \n{\n    long[]\
    \ result;\n    if (a > b) \n    {\n        result = generate_integers(b, a);\n\
    \    }\n    else \n    {\n        result = [];\n        foreach (i; a..b+1) \n\
    \        {\n            if (i % 2 == 0) \n            {\n                result\
    \ ~= i;\n            }\n        }\n    }\n    return result;\n}\nunittest\n{\n\
    \    alias candidate = generate_integers;\n\n    assert(candidate(2L, 10L) ==\
    \ [2L, 4L, 6L, 8L]);\n    assert(candidate(10L, 2L) == [2L, 4L, 6L, 8L]);\n  \
    \  assert(candidate(132L, 2L) == [2L, 4L, 6L, 8L]);\n    assert(candidate(17L,\
    \ 89L) == []);\n}\nvoid main(){}"
  status: Exception
  stderr: 'core.exception.AssertError@/tmp/tmpjgghwjk9.d(41): unittest failure

    ----------------

    ??:? _d_unittestp [0x4283cd]

    ??:? void tmpjgghwjk9.__unittest_L37_C1() [0x427f60]

    ??:? void tmpjgghwjk9.__modtest() [0x428150]

    ??:? int core.runtime.runModuleUnitTests().__foreachbody2(object.ModuleInfo*)
    [0x42cda3]

    ??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)).__lambda2(immutable(object.ModuleInfo*))
    [0x42bc36]

    ??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))).__foreachbody2(ref
    rt.sections_elf_shared.DSO) [0x430689]

    ??:? int rt.sections_elf_shared.DSO.opApply(scope int delegate(ref rt.sections_elf_shared.DSO))
    [0x430b38]

    ??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*)))
    [0x430615]

    ??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)) [0x42bc0d]

    ??:? runModuleUnitTests [0x42cb79]

    ??:? void rt.dmain2._d_run_main(int, char**, extern (C) int function(char[][])*).runAll()
    [0x42881c]

    ??:? void rt.dmain2._d_r'
  stdout: ''
  timestamp: 1660163090
- exit_code: 1
  program: "import std.typecons;\nimport std.math;\n/*\n\n    Given two positive integers\
    \ a and b, return the even digits between a\n    and b, in ascending order.\n\n\
    \    For example:\n    >>> generate_integers(2L, 8L)\n    [2L, 4L, 6L, 8L]\n \
    \   >>> generate_integers(8L, 2L)\n    [2L, 4L, 6L, 8L]\n    >>> generate_integers(10L,\
    \ 14L)\n    []\n    \n*/\nlong[] generate_integers(long a, long b) \n{\n    long[]\
    \ result;\n    if (a > b)\n    {\n        result = generate_integers(b, a);\n\
    \    }\n    else\n    {\n        result = [];\n        foreach (i; a..b+1)\n \
    \       {\n            if (i % 2 == 0)\n            {\n                result\
    \ ~= i;\n            }\n        }\n    }\n    return result;\n}\nunittest\n{\n\
    \    alias candidate = generate_integers;\n\n    assert(candidate(2L, 10L) ==\
    \ [2L, 4L, 6L, 8L]);\n    assert(candidate(10L, 2L) == [2L, 4L, 6L, 8L]);\n  \
    \  assert(candidate(132L, 2L) == [2L, 4L, 6L, 8L]);\n    assert(candidate(17L,\
    \ 89L) == []);\n}\nvoid main(){}"
  status: Exception
  stderr: 'core.exception.AssertError@/tmp/tmph7b7qda4.d(41): unittest failure

    ----------------

    ??:? _d_unittestp [0x4283cd]

    ??:? void tmph7b7qda4.__unittest_L37_C1() [0x427f60]

    ??:? void tmph7b7qda4.__modtest() [0x428150]

    ??:? int core.runtime.runModuleUnitTests().__foreachbody2(object.ModuleInfo*)
    [0x42cda3]

    ??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)).__lambda2(immutable(object.ModuleInfo*))
    [0x42bc36]

    ??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))).__foreachbody2(ref
    rt.sections_elf_shared.DSO) [0x430689]

    ??:? int rt.sections_elf_shared.DSO.opApply(scope int delegate(ref rt.sections_elf_shared.DSO))
    [0x430b38]

    ??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*)))
    [0x430615]

    ??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)) [0x42bc0d]

    ??:? runModuleUnitTests [0x42cb79]

    ??:? void rt.dmain2._d_run_main(int, char**, extern (C) int function(char[][])*).runAll()
    [0x42881c]

    ??:? void rt.dmain2._d_r'
  stdout: ''
  timestamp: 1660163090
- exit_code: 1
  program: "import std.typecons;\nimport std.math;\n/*\n\n    Given two positive integers\
    \ a and b, return the even digits between a\n    and b, in ascending order.\n\n\
    \    For example:\n    >>> generate_integers(2L, 8L)\n    [2L, 4L, 6L, 8L]\n \
    \   >>> generate_integers(8L, 2L)\n    [2L, 4L, 6L, 8L]\n    >>> generate_integers(10L,\
    \ 14L)\n    []\n    \n*/\nlong[] generate_integers(long a, long b) \n{\n    long[]\
    \ result;\n    if (a > b)\n    {\n        result = generate_integers(b, a);\n\
    \    }\n    else\n    {\n        result = new long[];\n        for (long i = a;\
    \ i <= b; i++)\n        {\n            if (i % 2 == 0)\n            {\n      \
    \          result ~= i;\n            }\n        }\n    }\n    return result;\n\
    }\nunittest\n{\n    alias candidate = generate_integers;\n\n    assert(candidate(2L,\
    \ 10L) == [2L, 4L, 6L, 8L]);\n    assert(candidate(10L, 2L) == [2L, 4L, 6L, 8L]);\n\
    \    assert(candidate(132L, 2L) == [2L, 4L, 6L, 8L]);\n    assert(candidate(17L,\
    \ 89L) == []);\n}\nvoid main(){}"
  status: SyntaxError
  stderr: '/tmp/tmp8qqrm9l7.d(26): Error: new can only create structs, dynamic arrays
    or class objects, not `long[]`''s

    Failed: ["dmd", "-unittest", "-v", "-o-", "/tmp/tmp8qqrm9l7.d", "-I/tmp"]

    '
  stdout: ''
  timestamp: 1660163091
- exit_code: 1
  program: "import std.typecons;\nimport std.math;\n/*\n\n    Given two positive integers\
    \ a and b, return the even digits between a\n    and b, in ascending order.\n\n\
    \    For example:\n    >>> generate_integers(2L, 8L)\n    [2L, 4L, 6L, 8L]\n \
    \   >>> generate_integers(8L, 2L)\n    [2L, 4L, 6L, 8L]\n    >>> generate_integers(10L,\
    \ 14L)\n    []\n    \n*/\nlong[] generate_integers(long a, long b) \n{\n    long[]\
    \ result;\n    if (a > b)\n    {\n        result = generate_integers(b, a);\n\
    \    }\n    else\n    {\n        result = new long[0];\n        if (a % 2 == 0)\n\
    \        {\n            result ~= a;\n        }\n        if (b % 2 == 0)\n   \
    \     {\n            result ~= b;\n        }\n        long c = a + 1;\n      \
    \  while (c < b)\n        {\n            if (c % 2 == 0)\n            {\n    \
    \            result ~= c;\n            }\n            c++;\n        }\n    }\n\
    \    return result;\n}\nunittest\n{\n    alias candidate = generate_integers;\n\
    \n    assert(candidate(2L, 10L) == [2L, 4L, 6L, 8L]);\n    assert(candidate(10L,\
    \ 2L) == [2L, 4L, 6L, 8L]);\n    assert(candidate(132L, 2L) == [2L, 4L, 6L, 8L]);\n\
    \    assert(candidate(17L, 89L) == []);\n}\nvoid main(){}"
  status: Exception
  stderr: 'core.exception.AssertError@/tmp/tmpvuos2jo4.d(51): unittest failure

    ----------------

    ??:? _d_unittestp [0x428445]

    ??:? void tmpvuos2jo4.__unittest_L47_C1() [0x427fd4]

    ??:? void tmpvuos2jo4.__modtest() [0x4281c4]

    ??:? int core.runtime.runModuleUnitTests().__foreachbody2(object.ModuleInfo*)
    [0x42ce77]

    ??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)).__lambda2(immutable(object.ModuleInfo*))
    [0x42bd0a]

    ??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))).__foreachbody2(ref
    rt.sections_elf_shared.DSO) [0x430855]

    ??:? int rt.sections_elf_shared.DSO.opApply(scope int delegate(ref rt.sections_elf_shared.DSO))
    [0x430d04]

    ??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*)))
    [0x4307e1]

    ??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)) [0x42bce1]

    ??:? runModuleUnitTests [0x42cc4d]

    ??:? void rt.dmain2._d_run_main(int, char**, extern (C) int function(char[][])*).runAll()
    [0x428894]

    ??:? void rt.dmain2._d_r'
  stdout: ''
  timestamp: 1660163091
- exit_code: 1
  program: "import std.typecons;\nimport std.math;\n/*\n\n    Given two positive integers\
    \ a and b, return the even digits between a\n    and b, in ascending order.\n\n\
    \    For example:\n    >>> generate_integers(2L, 8L)\n    [2L, 4L, 6L, 8L]\n \
    \   >>> generate_integers(8L, 2L)\n    [2L, 4L, 6L, 8L]\n    >>> generate_integers(10L,\
    \ 14L)\n    []\n    \n*/\nlong[] generate_integers(long a, long b) \n{\n    long[]\
    \ result;\n    if (a > b)\n    {\n        result = generate_integers(b, a);\n\
    \    }\n    else\n    {\n        result = new long[];\n        foreach (i; a..b+1)\n\
    \        {\n            if (i % 2 == 0)\n            {\n                result\
    \ ~= i;\n            }\n        }\n    }\n    return result;\n}\nunittest\n{\n\
    \    alias candidate = generate_integers;\n\n    assert(candidate(2L, 10L) ==\
    \ [2L, 4L, 6L, 8L]);\n    assert(candidate(10L, 2L) == [2L, 4L, 6L, 8L]);\n  \
    \  assert(candidate(132L, 2L) == [2L, 4L, 6L, 8L]);\n    assert(candidate(17L,\
    \ 89L) == []);\n}\nvoid main(){}"
  status: SyntaxError
  stderr: '/tmp/tmpgb5373zm.d(26): Error: new can only create structs, dynamic arrays
    or class objects, not `long[]`''s

    Failed: ["dmd", "-unittest", "-v", "-o-", "/tmp/tmpgb5373zm.d", "-I/tmp"]

    '
  stdout: ''
  timestamp: 1660163090
- exit_code: 1
  program: "import std.typecons;\nimport std.math;\n/*\n\n    Given two positive integers\
    \ a and b, return the even digits between a\n    and b, in ascending order.\n\n\
    \    For example:\n    >>> generate_integers(2L, 8L)\n    [2L, 4L, 6L, 8L]\n \
    \   >>> generate_integers(8L, 2L)\n    [2L, 4L, 6L, 8L]\n    >>> generate_integers(10L,\
    \ 14L)\n    []\n    \n*/\nlong[] generate_integers(long a, long b) \n{\n    long[]\
    \ result;\n    if (a > b)\n    {\n        result = generate_integers(b, a);\n\
    \    }\n    else\n    {\n        result = new long[0];\n        for (long i =\
    \ a; i <= b; i++)\n        {\n            if (i % 2 == 0)\n            {\n   \
    \             result ~= i;\n            }\n        }\n    }\n    return result;\n\
    }\nunittest\n{\n    alias candidate = generate_integers;\n\n    assert(candidate(2L,\
    \ 10L) == [2L, 4L, 6L, 8L]);\n    assert(candidate(10L, 2L) == [2L, 4L, 6L, 8L]);\n\
    \    assert(candidate(132L, 2L) == [2L, 4L, 6L, 8L]);\n    assert(candidate(17L,\
    \ 89L) == []);\n}\nvoid main(){}"
  status: Exception
  stderr: 'core.exception.AssertError@/tmp/tmpo37024wm.d(41): unittest failure

    ----------------

    ??:? _d_unittestp [0x4283b5]

    ??:? void tmpo37024wm.__unittest_L37_C1() [0x427f48]

    ??:? void tmpo37024wm.__modtest() [0x428138]

    ??:? int core.runtime.runModuleUnitTests().__foreachbody2(object.ModuleInfo*)
    [0x42cde7]

    ??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)).__lambda2(immutable(object.ModuleInfo*))
    [0x42bc7a]

    ??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))).__foreachbody2(ref
    rt.sections_elf_shared.DSO) [0x4307c5]

    ??:? int rt.sections_elf_shared.DSO.opApply(scope int delegate(ref rt.sections_elf_shared.DSO))
    [0x430c74]

    ??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*)))
    [0x430751]

    ??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)) [0x42bc51]

    ??:? runModuleUnitTests [0x42cbbd]

    ??:? void rt.dmain2._d_run_main(int, char**, extern (C) int function(char[][])*).runAll()
    [0x428804]

    ??:? void rt.dmain2._d_r'
  stdout: ''
  timestamp: 1660163090
- exit_code: 1
  program: "import std.typecons;\nimport std.math;\n/*\n\n    Given two positive integers\
    \ a and b, return the even digits between a\n    and b, in ascending order.\n\n\
    \    For example:\n    >>> generate_integers(2L, 8L)\n    [2L, 4L, 6L, 8L]\n \
    \   >>> generate_integers(8L, 2L)\n    [2L, 4L, 6L, 8L]\n    >>> generate_integers(10L,\
    \ 14L)\n    []\n    \n*/\nlong[] generate_integers(long a, long b) \n{\n    long[]\
    \ result;\n    if (a > b)\n    {\n        result = generate_integers(b, a);\n\
    \    }\n    else\n    {\n        result = new long[0];\n        long i = a;\n\
    \        while (i <= b)\n        {\n            if (i % 2 == 0)\n            {\n\
    \                result ~= i;\n            }\n            i++;\n        }\n  \
    \  }\n    return result;\n}\nunittest\n{\n    alias candidate = generate_integers;\n\
    \n    assert(candidate(2L, 10L) == [2L, 4L, 6L, 8L]);\n    assert(candidate(10L,\
    \ 2L) == [2L, 4L, 6L, 8L]);\n    assert(candidate(132L, 2L) == [2L, 4L, 6L, 8L]);\n\
    \    assert(candidate(17L, 89L) == []);\n}\nvoid main(){}"
  status: Exception
  stderr: 'core.exception.AssertError@/tmp/tmp0wqyy1f1.d(43): unittest failure

    ----------------

    ??:? _d_unittestp [0x4283b5]

    ??:? void tmp0wqyy1f1.__unittest_L39_C1() [0x427f48]

    ??:? void tmp0wqyy1f1.__modtest() [0x428138]

    ??:? int core.runtime.runModuleUnitTests().__foreachbody2(object.ModuleInfo*)
    [0x42cde7]

    ??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)).__lambda2(immutable(object.ModuleInfo*))
    [0x42bc7a]

    ??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))).__foreachbody2(ref
    rt.sections_elf_shared.DSO) [0x4307c5]

    ??:? int rt.sections_elf_shared.DSO.opApply(scope int delegate(ref rt.sections_elf_shared.DSO))
    [0x430c74]

    ??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*)))
    [0x430751]

    ??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)) [0x42bc51]

    ??:? runModuleUnitTests [0x42cbbd]

    ??:? void rt.dmain2._d_run_main(int, char**, extern (C) int function(char[][])*).runAll()
    [0x428804]

    ??:? void rt.dmain2._d_r'
  stdout: ''
  timestamp: 1660163091
- exit_code: 1
  program: "import std.typecons;\nimport std.math;\n/*\n\n    Given two positive integers\
    \ a and b, return the even digits between a\n    and b, in ascending order.\n\n\
    \    For example:\n    >>> generate_integers(2L, 8L)\n    [2L, 4L, 6L, 8L]\n \
    \   >>> generate_integers(8L, 2L)\n    [2L, 4L, 6L, 8L]\n    >>> generate_integers(10L,\
    \ 14L)\n    []\n    \n*/\nlong[] generate_integers(long a, long b) \n{\n    long[]\
    \ result;\n    if (a > b)\n    {\n        result = generate_integers(b, a);\n\
    \    }\n    else\n    {\n        result = [];\n        foreach (i; a..b)\n   \
    \     {\n            if (i % 2 == 0)\n            {\n                result ~=\
    \ i;\n            }\n        }\n    }\n    return result;\n}\nunittest\n{\n  \
    \  alias candidate = generate_integers;\n\n    assert(candidate(2L, 10L) == [2L,\
    \ 4L, 6L, 8L]);\n    assert(candidate(10L, 2L) == [2L, 4L, 6L, 8L]);\n    assert(candidate(132L,\
    \ 2L) == [2L, 4L, 6L, 8L]);\n    assert(candidate(17L, 89L) == []);\n}\nvoid main(){}"
  status: Exception
  stderr: 'core.exception.AssertError@/tmp/tmp9jqzgceq.d(43): unittest failure

    ----------------

    ??:? _d_unittestp [0x4283cd]

    ??:? void tmp9jqzgceq.__unittest_L37_C1() [0x42804c]

    ??:? void tmp9jqzgceq.__modtest() [0x428150]

    ??:? int core.runtime.runModuleUnitTests().__foreachbody2(object.ModuleInfo*)
    [0x42cda3]

    ??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)).__lambda2(immutable(object.ModuleInfo*))
    [0x42bc36]

    ??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))).__foreachbody2(ref
    rt.sections_elf_shared.DSO) [0x430689]

    ??:? int rt.sections_elf_shared.DSO.opApply(scope int delegate(ref rt.sections_elf_shared.DSO))
    [0x430b38]

    ??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*)))
    [0x430615]

    ??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)) [0x42bc0d]

    ??:? runModuleUnitTests [0x42cb79]

    ??:? void rt.dmain2._d_run_main(int, char**, extern (C) int function(char[][])*).runAll()
    [0x42881c]

    ??:? void rt.dmain2._d_r'
  stdout: ''
  timestamp: 1660163090
- exit_code: 1
  program: "import std.typecons;\nimport std.math;\n/*\n\n    Given two positive integers\
    \ a and b, return the even digits between a\n    and b, in ascending order.\n\n\
    \    For example:\n    >>> generate_integers(2L, 8L)\n    [2L, 4L, 6L, 8L]\n \
    \   >>> generate_integers(8L, 2L)\n    [2L, 4L, 6L, 8L]\n    >>> generate_integers(10L,\
    \ 14L)\n    []\n    \n*/\nlong[] generate_integers(long a, long b) \n{\n    long[]\
    \ result;\n    if (a > b)\n    {\n        result = generate_integers(b, a);\n\
    \    }\n    else\n    {\n        result = new long[(b - a) / 2 + 1];\n       \
    \ foreach (i, ref e; result)\n        {\n            e = a + 2 * i;\n        }\n\
    \    }\n    return result;\n}\nunittest\n{\n    alias candidate = generate_integers;\n\
    \n    assert(candidate(2L, 10L) == [2L, 4L, 6L, 8L]);\n    assert(candidate(10L,\
    \ 2L) == [2L, 4L, 6L, 8L]);\n    assert(candidate(132L, 2L) == [2L, 4L, 6L, 8L]);\n\
    \    assert(candidate(17L, 89L) == []);\n}\nvoid main(){}"
  status: Exception
  stderr: 'core.exception.AssertError@/tmp/tmp24vc4w0k.d(38): unittest failure

    ----------------

    ??:? _d_unittestp [0x4283a5]

    ??:? void tmp24vc4w0k.__unittest_L34_C1() [0x427f38]

    ??:? void tmp24vc4w0k.__modtest() [0x428128]

    ??:? int core.runtime.runModuleUnitTests().__foreachbody2(object.ModuleInfo*)
    [0x42c3eb]

    ??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)).__lambda2(immutable(object.ModuleInfo*))
    [0x42b27e]

    ??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))).__foreachbody2(ref
    rt.sections_elf_shared.DSO) [0x430509]

    ??:? int rt.sections_elf_shared.DSO.opApply(scope int delegate(ref rt.sections_elf_shared.DSO))
    [0x4309b8]

    ??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*)))
    [0x430495]

    ??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)) [0x42b255]

    ??:? runModuleUnitTests [0x42c1c1]

    ??:? void rt.dmain2._d_run_main(int, char**, extern (C) int function(char[][])*).runAll()
    [0x4287f4]

    ??:? void rt.dmain2._d_r'
  stdout: ''
  timestamp: 1660163091
- exit_code: 1
  program: "import std.typecons;\nimport std.math;\n/*\n\n    Given two positive integers\
    \ a and b, return the even digits between a\n    and b, in ascending order.\n\n\
    \    For example:\n    >>> generate_integers(2L, 8L)\n    [2L, 4L, 6L, 8L]\n \
    \   >>> generate_integers(8L, 2L)\n    [2L, 4L, 6L, 8L]\n    >>> generate_integers(10L,\
    \ 14L)\n    []\n    \n*/\nlong[] generate_integers(long a, long b) \n{\n    long[]\
    \ result;\n    if (a > b) {\n        result = generate_integers(b, a);\n    }\
    \ else {\n        result = new long[];\n        foreach (i; a..b) {\n        \
    \    if (i % 2 == 0) {\n                result ~= i;\n            }\n        }\n\
    \    }\n    return result;\n}\nunittest\n{\n    alias candidate = generate_integers;\n\
    \n    assert(candidate(2L, 10L) == [2L, 4L, 6L, 8L]);\n    assert(candidate(10L,\
    \ 2L) == [2L, 4L, 6L, 8L]);\n    assert(candidate(132L, 2L) == [2L, 4L, 6L, 8L]);\n\
    \    assert(candidate(17L, 89L) == []);\n}\nvoid main(){}"
  status: SyntaxError
  stderr: '/tmp/tmp0xf7du0z.d(23): Error: new can only create structs, dynamic arrays
    or class objects, not `long[]`''s

    Failed: ["dmd", "-unittest", "-v", "-o-", "/tmp/tmp0xf7du0z.d", "-I/tmp"]

    '
  stdout: ''
  timestamp: 1660163091
- exit_code: 1
  program: "import std.typecons;\nimport std.math;\n/*\n\n    Given two positive integers\
    \ a and b, return the even digits between a\n    and b, in ascending order.\n\n\
    \    For example:\n    >>> generate_integers(2L, 8L)\n    [2L, 4L, 6L, 8L]\n \
    \   >>> generate_integers(8L, 2L)\n    [2L, 4L, 6L, 8L]\n    >>> generate_integers(10L,\
    \ 14L)\n    []\n    \n*/\nlong[] generate_integers(long a, long b) \n{\n    auto\
    \ result = new long[];\n    if (a > b) \n    {\n        auto temp = a;\n     \
    \   a = b;\n        b = temp;\n    }\n    if (a % 2 == 0) \n    {\n        result\
    \ ~= a;\n        a += 2;\n    }\n    else \n    {\n        a += 1;\n    }\n  \
    \  while (a < b) \n    {\n        result ~= a;\n        a += 2;\n    }\n    return\
    \ result;\n}\nunittest\n{\n    alias candidate = generate_integers;\n\n    assert(candidate(2L,\
    \ 10L) == [2L, 4L, 6L, 8L]);\n    assert(candidate(10L, 2L) == [2L, 4L, 6L, 8L]);\n\
    \    assert(candidate(132L, 2L) == [2L, 4L, 6L, 8L]);\n    assert(candidate(17L,\
    \ 89L) == []);\n}\nvoid main(){}"
  status: SyntaxError
  stderr: '/tmp/tmp3sqrfd9p.d(19): Error: new can only create structs, dynamic arrays
    or class objects, not `long[]`''s

    Failed: ["dmd", "-unittest", "-v", "-o-", "/tmp/tmp3sqrfd9p.d", "-I/tmp"]

    '
  stdout: ''
  timestamp: 1660163091
- exit_code: 1
  program: "import std.typecons;\nimport std.math;\n/*\n\n    Given two positive integers\
    \ a and b, return the even digits between a\n    and b, in ascending order.\n\n\
    \    For example:\n    >>> generate_integers(2L, 8L)\n    [2L, 4L, 6L, 8L]\n \
    \   >>> generate_integers(8L, 2L)\n    [2L, 4L, 6L, 8L]\n    >>> generate_integers(10L,\
    \ 14L)\n    []\n    \n*/\nlong[] generate_integers(long a, long b) \n{\n    long[]\
    \ result;\n    if (a > b)\n    {\n        result = generate_integers(b, a);\n\
    \    }\n    else\n    {\n        result = new long[0];\n        if (a % 2 == 0)\n\
    \        {\n            result ~= a;\n        }\n        for (a += 1; a < b; a\
    \ += 2)\n        {\n            result ~= a;\n        }\n        if (b % 2 ==\
    \ 0)\n        {\n            result ~= b;\n        }\n    }\n    return result;\n\
    }\nunittest\n{\n    alias candidate = generate_integers;\n\n    assert(candidate(2L,\
    \ 10L) == [2L, 4L, 6L, 8L]);\n    assert(candidate(10L, 2L) == [2L, 4L, 6L, 8L]);\n\
    \    assert(candidate(132L, 2L) == [2L, 4L, 6L, 8L]);\n    assert(candidate(17L,\
    \ 89L) == []);\n}\nvoid main(){}"
  status: Exception
  stderr: 'core.exception.AssertError@/tmp/tmpleuzqfka.d(46): unittest failure

    ----------------

    ??:? _d_unittestp [0x428425]

    ??:? void tmpleuzqfka.__unittest_L42_C1() [0x427fb8]

    ??:? void tmpleuzqfka.__modtest() [0x4281a8]

    ??:? int core.runtime.runModuleUnitTests().__foreachbody2(object.ModuleInfo*)
    [0x42ce57]

    ??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)).__lambda2(immutable(object.ModuleInfo*))
    [0x42bcea]

    ??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))).__foreachbody2(ref
    rt.sections_elf_shared.DSO) [0x430835]

    ??:? int rt.sections_elf_shared.DSO.opApply(scope int delegate(ref rt.sections_elf_shared.DSO))
    [0x430ce4]

    ??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*)))
    [0x4307c1]

    ??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)) [0x42bcc1]

    ??:? runModuleUnitTests [0x42cc2d]

    ??:? void rt.dmain2._d_run_main(int, char**, extern (C) int function(char[][])*).runAll()
    [0x428874]

    ??:? void rt.dmain2._d_r'
  stdout: ''
  timestamp: 1660163091
- exit_code: 1
  program: "import std.typecons;\nimport std.math;\n/*\n\n    Given two positive integers\
    \ a and b, return the even digits between a\n    and b, in ascending order.\n\n\
    \    For example:\n    >>> generate_integers(2L, 8L)\n    [2L, 4L, 6L, 8L]\n \
    \   >>> generate_integers(8L, 2L)\n    [2L, 4L, 6L, 8L]\n    >>> generate_integers(10L,\
    \ 14L)\n    []\n    \n*/\nlong[] generate_integers(long a, long b) \n{\n    long[]\
    \ result;\n    if (a > b)\n    {\n        result = generate_integers(b, a);\n\
    \    }\n    else\n    {\n        result = [];\n        if (a % 2 == 0)\n     \
    \   {\n            result ~= a;\n        }\n        if (b % 2 == 0)\n        {\n\
    \            result ~= b;\n        }\n        if (a % 2 == 1)\n        {\n   \
    \         a++;\n        }\n        if (b % 2 == 1)\n        {\n            b--;\n\
    \        }\n        if (a < b)\n        {\n            result ~= generate_integers(a\
    \ + 2, b);\n        }\n    }\n    return result;\n}\nunittest\n{\n    alias candidate\
    \ = generate_integers;\n\n    assert(candidate(2L, 10L) == [2L, 4L, 6L, 8L]);\n\
    \    assert(candidate(10L, 2L) == [2L, 4L, 6L, 8L]);\n    assert(candidate(132L,\
    \ 2L) == [2L, 4L, 6L, 8L]);\n    assert(candidate(17L, 89L) == []);\n}\nvoid main(){}"
  status: Exception
  stderr: 'core.exception.AssertError@/tmp/tmp6u0tuv1x.d(54): unittest failure

    ----------------

    ??:? _d_unittestp [0x428455]

    ??:? void tmp6u0tuv1x.__unittest_L50_C1() [0x427fe4]

    ??:? void tmp6u0tuv1x.__modtest() [0x4281d4]

    ??:? int core.runtime.runModuleUnitTests().__foreachbody2(object.ModuleInfo*)
    [0x42cedb]

    ??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)).__lambda2(immutable(object.ModuleInfo*))
    [0x42bd6e]

    ??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))).__foreachbody2(ref
    rt.sections_elf_shared.DSO) [0x430711]

    ??:? int rt.sections_elf_shared.DSO.opApply(scope int delegate(ref rt.sections_elf_shared.DSO))
    [0x430bc0]

    ??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*)))
    [0x43069d]

    ??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)) [0x42bd45]

    ??:? runModuleUnitTests [0x42ccb1]

    ??:? void rt.dmain2._d_run_main(int, char**, extern (C) int function(char[][])*).runAll()
    [0x4288a4]

    ??:? void rt.dmain2._d_r'
  stdout: ''
  timestamp: 1660163091
- exit_code: 1
  program: "import std.typecons;\nimport std.math;\n/*\n\n    Given two positive integers\
    \ a and b, return the even digits between a\n    and b, in ascending order.\n\n\
    \    For example:\n    >>> generate_integers(2L, 8L)\n    [2L, 4L, 6L, 8L]\n \
    \   >>> generate_integers(8L, 2L)\n    [2L, 4L, 6L, 8L]\n    >>> generate_integers(10L,\
    \ 14L)\n    []\n    \n*/\nlong[] generate_integers(long a, long b) \n{\n    long[]\
    \ result;\n    if (a < b)\n    {\n        result = new long[(b - a) / 2 + 1];\n\
    \        foreach (i, ref e; result)\n        {\n            e = a + 2 * i;\n \
    \       }\n    }\n    else\n    {\n        result = new long[(a - b) / 2 + 1];\n\
    \        foreach (i, ref e; result)\n        {\n            e = b + 2 * i;\n \
    \       }\n    }\n    return result;\n}\nunittest\n{\n    alias candidate = generate_integers;\n\
    \n    assert(candidate(2L, 10L) == [2L, 4L, 6L, 8L]);\n    assert(candidate(10L,\
    \ 2L) == [2L, 4L, 6L, 8L]);\n    assert(candidate(132L, 2L) == [2L, 4L, 6L, 8L]);\n\
    \    assert(candidate(17L, 89L) == []);\n}\nvoid main(){}"
  status: Exception
  stderr: 'core.exception.AssertError@/tmp/tmp9p819kt7.d(42): unittest failure

    ----------------

    ??:? _d_unittestp [0x4283f5]

    ??:? void tmp9p819kt7.__unittest_L38_C1() [0x427f88]

    ??:? void tmp9p819kt7.__modtest() [0x428178]

    ??:? int core.runtime.runModuleUnitTests().__foreachbody2(object.ModuleInfo*)
    [0x42c43b]

    ??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)).__lambda2(immutable(object.ModuleInfo*))
    [0x42b2ce]

    ??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))).__foreachbody2(ref
    rt.sections_elf_shared.DSO) [0x430559]

    ??:? int rt.sections_elf_shared.DSO.opApply(scope int delegate(ref rt.sections_elf_shared.DSO))
    [0x430a08]

    ??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*)))
    [0x4304e5]

    ??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)) [0x42b2a5]

    ??:? runModuleUnitTests [0x42c211]

    ??:? void rt.dmain2._d_run_main(int, char**, extern (C) int function(char[][])*).runAll()
    [0x428844]

    ??:? void rt.dmain2._d_r'
  stdout: ''
  timestamp: 1660163091
- exit_code: 1
  program: "import std.typecons;\nimport std.math;\n/*\n\n    Given two positive integers\
    \ a and b, return the even digits between a\n    and b, in ascending order.\n\n\
    \    For example:\n    >>> generate_integers(2L, 8L)\n    [2L, 4L, 6L, 8L]\n \
    \   >>> generate_integers(8L, 2L)\n    [2L, 4L, 6L, 8L]\n    >>> generate_integers(10L,\
    \ 14L)\n    []\n    \n*/\nlong[] generate_integers(long a, long b) \n{\n    long[]\
    \ result;\n    if (a > b)\n    {\n        result = generate_integers(b, a);\n\
    \    }\n    else\n    {\n        result = [];\n        foreach (i; a .. b + 1)\n\
    \        {\n            if (i % 2 == 0)\n            {\n                result\
    \ ~= i;\n            }\n        }\n    }\n    return result;\n}\nunittest\n{\n\
    \    alias candidate = generate_integers;\n\n    assert(candidate(2L, 10L) ==\
    \ [2L, 4L, 6L, 8L]);\n    assert(candidate(10L, 2L) == [2L, 4L, 6L, 8L]);\n  \
    \  assert(candidate(132L, 2L) == [2L, 4L, 6L, 8L]);\n    assert(candidate(17L,\
    \ 89L) == []);\n}\nvoid main(){}"
  status: Exception
  stderr: 'core.exception.AssertError@/tmp/tmpr0ebyf4f.d(41): unittest failure

    ----------------

    ??:? _d_unittestp [0x4283cd]

    ??:? void tmpr0ebyf4f.__unittest_L37_C1() [0x427f60]

    ??:? void tmpr0ebyf4f.__modtest() [0x428150]

    ??:? int core.runtime.runModuleUnitTests().__foreachbody2(object.ModuleInfo*)
    [0x42cda3]

    ??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)).__lambda2(immutable(object.ModuleInfo*))
    [0x42bc36]

    ??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))).__foreachbody2(ref
    rt.sections_elf_shared.DSO) [0x430689]

    ??:? int rt.sections_elf_shared.DSO.opApply(scope int delegate(ref rt.sections_elf_shared.DSO))
    [0x430b38]

    ??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*)))
    [0x430615]

    ??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)) [0x42bc0d]

    ??:? runModuleUnitTests [0x42cb79]

    ??:? void rt.dmain2._d_run_main(int, char**, extern (C) int function(char[][])*).runAll()
    [0x42881c]

    ??:? void rt.dmain2._d_r'
  stdout: ''
  timestamp: 1660163091
- exit_code: 1
  program: "import std.typecons;\nimport std.math;\n/*\n\n    Given two positive integers\
    \ a and b, return the even digits between a\n    and b, in ascending order.\n\n\
    \    For example:\n    >>> generate_integers(2L, 8L)\n    [2L, 4L, 6L, 8L]\n \
    \   >>> generate_integers(8L, 2L)\n    [2L, 4L, 6L, 8L]\n    >>> generate_integers(10L,\
    \ 14L)\n    []\n    \n*/\nlong[] generate_integers(long a, long b) \n{\n    long[]\
    \ result;\n    if (a > b)\n    {\n        result = generate_integers(b, a);\n\
    \    }\n    else\n    {\n        result = new long[0];\n        for (long i =\
    \ a; i <= b; i++)\n        {\n            if (i % 2 == 0)\n            {\n   \
    \             result ~= i;\n            }\n        }\n    }\n    return result;\n\
    }\nunittest\n{\n    alias candidate = generate_integers;\n\n    assert(candidate(2L,\
    \ 10L) == [2L, 4L, 6L, 8L]);\n    assert(candidate(10L, 2L) == [2L, 4L, 6L, 8L]);\n\
    \    assert(candidate(132L, 2L) == [2L, 4L, 6L, 8L]);\n    assert(candidate(17L,\
    \ 89L) == []);\n}\nvoid main(){}"
  status: Exception
  stderr: 'core.exception.AssertError@/tmp/tmpo37024wm.d(41): unittest failure

    ----------------

    ??:? _d_unittestp [0x4283b5]

    ??:? void tmpo37024wm.__unittest_L37_C1() [0x427f48]

    ??:? void tmpo37024wm.__modtest() [0x428138]

    ??:? int core.runtime.runModuleUnitTests().__foreachbody2(object.ModuleInfo*)
    [0x42cde7]

    ??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)).__lambda2(immutable(object.ModuleInfo*))
    [0x42bc7a]

    ??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))).__foreachbody2(ref
    rt.sections_elf_shared.DSO) [0x4307c5]

    ??:? int rt.sections_elf_shared.DSO.opApply(scope int delegate(ref rt.sections_elf_shared.DSO))
    [0x430c74]

    ??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*)))
    [0x430751]

    ??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)) [0x42bc51]

    ??:? runModuleUnitTests [0x42cbbd]

    ??:? void rt.dmain2._d_run_main(int, char**, extern (C) int function(char[][])*).runAll()
    [0x428804]

    ??:? void rt.dmain2._d_r'
  stdout: ''
  timestamp: 1660163090
- exit_code: 1
  program: "import std.typecons;\nimport std.math;\n/*\n\n    Given two positive integers\
    \ a and b, return the even digits between a\n    and b, in ascending order.\n\n\
    \    For example:\n    >>> generate_integers(2L, 8L)\n    [2L, 4L, 6L, 8L]\n \
    \   >>> generate_integers(8L, 2L)\n    [2L, 4L, 6L, 8L]\n    >>> generate_integers(10L,\
    \ 14L)\n    []\n    \n*/\nlong[] generate_integers(long a, long b) \n{\n    long[]\
    \ result;\n    if (a > b)\n    {\n        long temp = a;\n        a = b;\n   \
    \     b = temp;\n    }\n    if (a % 2 == 0)\n    {\n        result = new long[(b\
    \ - a) / 2 + 1];\n        for (int i = 0; i < result.length; i++)\n        {\n\
    \            result[i] = a + i * 2;\n        }\n    }\n    else\n    {\n     \
    \   result = new long[(b - a - 1) / 2 + 1];\n        for (int i = 0; i < result.length;\
    \ i++)\n        {\n            result[i] = a + i * 2 + 1;\n        }\n    }\n\
    \    return result;\n}\nunittest\n{\n    alias candidate = generate_integers;\n\
    \n    assert(candidate(2L, 10L) == [2L, 4L, 6L, 8L]);\n    assert(candidate(10L,\
    \ 2L) == [2L, 4L, 6L, 8L]);\n    assert(candidate(132L, 2L) == [2L, 4L, 6L, 8L]);\n\
    \    assert(candidate(17L, 89L) == []);\n}\nvoid main(){}"
  status: Exception
  stderr: 'core.exception.AssertError@/tmp/tmpqb8qq_ll.d(48): unittest failure

    ----------------

    ??:? _d_unittestp [0x42844d]

    ??:? void tmpqb8qq_ll.__unittest_L44_C1() [0x427fdc]

    ??:? void tmpqb8qq_ll.__modtest() [0x4281cc]

    ??:? int core.runtime.runModuleUnitTests().__foreachbody2(object.ModuleInfo*)
    [0x42c507]

    ??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)).__lambda2(immutable(object.ModuleInfo*))
    [0x42b39a]

    ??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))).__foreachbody2(ref
    rt.sections_elf_shared.DSO) [0x430625]

    ??:? int rt.sections_elf_shared.DSO.opApply(scope int delegate(ref rt.sections_elf_shared.DSO))
    [0x430ad4]

    ??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*)))
    [0x4305b1]

    ??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)) [0x42b371]

    ??:? runModuleUnitTests [0x42c2dd]

    ??:? void rt.dmain2._d_run_main(int, char**, extern (C) int function(char[][])*).runAll()
    [0x428910]

    ??:? void rt.dmain2._d_r'
  stdout: ''
  timestamp: 1660163091
- exit_code: 1
  program: "import std.typecons;\nimport std.math;\n/*\n\n    Given two positive integers\
    \ a and b, return the even digits between a\n    and b, in ascending order.\n\n\
    \    For example:\n    >>> generate_integers(2L, 8L)\n    [2L, 4L, 6L, 8L]\n \
    \   >>> generate_integers(8L, 2L)\n    [2L, 4L, 6L, 8L]\n    >>> generate_integers(10L,\
    \ 14L)\n    []\n    \n*/\nlong[] generate_integers(long a, long b) \n{\n    long[]\
    \ result;\n    if (a > b) \n    {\n        result = generate_integers(b, a);\n\
    \    }\n    else \n    {\n        result = new long[(b - a) / 2 + 1];\n      \
    \  foreach (i, ref x; result) \n        {\n            x = a + 2 * i;\n      \
    \  }\n    }\n    return result;\n}\nunittest\n{\n    alias candidate = generate_integers;\n\
    \n    assert(candidate(2L, 10L) == [2L, 4L, 6L, 8L]);\n    assert(candidate(10L,\
    \ 2L) == [2L, 4L, 6L, 8L]);\n    assert(candidate(132L, 2L) == [2L, 4L, 6L, 8L]);\n\
    \    assert(candidate(17L, 89L) == []);\n}\nvoid main(){}"
  status: Exception
  stderr: 'core.exception.AssertError@/tmp/tmpbtljp76i.d(38): unittest failure

    ----------------

    ??:? _d_unittestp [0x4283a5]

    ??:? void tmpbtljp76i.__unittest_L34_C1() [0x427f38]

    ??:? void tmpbtljp76i.__modtest() [0x428128]

    ??:? int core.runtime.runModuleUnitTests().__foreachbody2(object.ModuleInfo*)
    [0x42c3eb]

    ??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)).__lambda2(immutable(object.ModuleInfo*))
    [0x42b27e]

    ??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))).__foreachbody2(ref
    rt.sections_elf_shared.DSO) [0x430509]

    ??:? int rt.sections_elf_shared.DSO.opApply(scope int delegate(ref rt.sections_elf_shared.DSO))
    [0x4309b8]

    ??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*)))
    [0x430495]

    ??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)) [0x42b255]

    ??:? runModuleUnitTests [0x42c1c1]

    ??:? void rt.dmain2._d_run_main(int, char**, extern (C) int function(char[][])*).runAll()
    [0x4287f4]

    ??:? void rt.dmain2._d_r'
  stdout: ''
  timestamp: 1660163091
- exit_code: 1
  program: "import std.typecons;\nimport std.math;\n/*\n\n    Given two positive integers\
    \ a and b, return the even digits between a\n    and b, in ascending order.\n\n\
    \    For example:\n    >>> generate_integers(2L, 8L)\n    [2L, 4L, 6L, 8L]\n \
    \   >>> generate_integers(8L, 2L)\n    [2L, 4L, 6L, 8L]\n    >>> generate_integers(10L,\
    \ 14L)\n    []\n    \n*/\nlong[] generate_integers(long a, long b) \n{\n    long[]\
    \ result;\n    if (a > b)\n    {\n        result = generate_integers(b, a);\n\
    \    }\n    else\n    {\n        result = [];\n        foreach (i; a..b)\n   \
    \     {\n            if (i % 2 == 0)\n            {\n                result ~=\
    \ i;\n            }\n        }\n    }\n    return result;\n}\nunittest\n{\n  \
    \  alias candidate = generate_integers;\n\n    assert(candidate(2L, 10L) == [2L,\
    \ 4L, 6L, 8L]);\n    assert(candidate(10L, 2L) == [2L, 4L, 6L, 8L]);\n    assert(candidate(132L,\
    \ 2L) == [2L, 4L, 6L, 8L]);\n    assert(candidate(17L, 89L) == []);\n}\nvoid main(){}"
  status: Exception
  stderr: 'core.exception.AssertError@/tmp/tmp9jqzgceq.d(43): unittest failure

    ----------------

    ??:? _d_unittestp [0x4283cd]

    ??:? void tmp9jqzgceq.__unittest_L37_C1() [0x42804c]

    ??:? void tmp9jqzgceq.__modtest() [0x428150]

    ??:? int core.runtime.runModuleUnitTests().__foreachbody2(object.ModuleInfo*)
    [0x42cda3]

    ??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)).__lambda2(immutable(object.ModuleInfo*))
    [0x42bc36]

    ??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))).__foreachbody2(ref
    rt.sections_elf_shared.DSO) [0x430689]

    ??:? int rt.sections_elf_shared.DSO.opApply(scope int delegate(ref rt.sections_elf_shared.DSO))
    [0x430b38]

    ??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*)))
    [0x430615]

    ??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)) [0x42bc0d]

    ??:? runModuleUnitTests [0x42cb79]

    ??:? void rt.dmain2._d_run_main(int, char**, extern (C) int function(char[][])*).runAll()
    [0x42881c]

    ??:? void rt.dmain2._d_r'
  stdout: ''
  timestamp: 1660163090
- exit_code: 1
  program: "import std.typecons;\nimport std.math;\n/*\n\n    Given two positive integers\
    \ a and b, return the even digits between a\n    and b, in ascending order.\n\n\
    \    For example:\n    >>> generate_integers(2L, 8L)\n    [2L, 4L, 6L, 8L]\n \
    \   >>> generate_integers(8L, 2L)\n    [2L, 4L, 6L, 8L]\n    >>> generate_integers(10L,\
    \ 14L)\n    []\n    \n*/\nlong[] generate_integers(long a, long b) \n{\n    long[]\
    \ result;\n    if (a > b)\n    {\n        result = generate_integers(b, a);\n\
    \    }\n    else\n    {\n        result = new long[0];\n        long i = a;\n\
    \        while (i <= b)\n        {\n            if (i % 2 == 0)\n            {\n\
    \                result ~= i;\n            }\n            i++;\n        }\n  \
    \  }\n    return result;\n}\nunittest\n{\n    alias candidate = generate_integers;\n\
    \n    assert(candidate(2L, 10L) == [2L, 4L, 6L, 8L]);\n    assert(candidate(10L,\
    \ 2L) == [2L, 4L, 6L, 8L]);\n    assert(candidate(132L, 2L) == [2L, 4L, 6L, 8L]);\n\
    \    assert(candidate(17L, 89L) == []);\n}\nvoid main(){}"
  status: Exception
  stderr: 'core.exception.AssertError@/tmp/tmp0wqyy1f1.d(43): unittest failure

    ----------------

    ??:? _d_unittestp [0x4283b5]

    ??:? void tmp0wqyy1f1.__unittest_L39_C1() [0x427f48]

    ??:? void tmp0wqyy1f1.__modtest() [0x428138]

    ??:? int core.runtime.runModuleUnitTests().__foreachbody2(object.ModuleInfo*)
    [0x42cde7]

    ??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)).__lambda2(immutable(object.ModuleInfo*))
    [0x42bc7a]

    ??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))).__foreachbody2(ref
    rt.sections_elf_shared.DSO) [0x4307c5]

    ??:? int rt.sections_elf_shared.DSO.opApply(scope int delegate(ref rt.sections_elf_shared.DSO))
    [0x430c74]

    ??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*)))
    [0x430751]

    ??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)) [0x42bc51]

    ??:? runModuleUnitTests [0x42cbbd]

    ??:? void rt.dmain2._d_run_main(int, char**, extern (C) int function(char[][])*).runAll()
    [0x428804]

    ??:? void rt.dmain2._d_r'
  stdout: ''
  timestamp: 1660163091
- exit_code: 1
  program: "import std.typecons;\nimport std.math;\n/*\n\n    Given two positive integers\
    \ a and b, return the even digits between a\n    and b, in ascending order.\n\n\
    \    For example:\n    >>> generate_integers(2L, 8L)\n    [2L, 4L, 6L, 8L]\n \
    \   >>> generate_integers(8L, 2L)\n    [2L, 4L, 6L, 8L]\n    >>> generate_integers(10L,\
    \ 14L)\n    []\n    \n*/\nlong[] generate_integers(long a, long b) \n{\n    long[]\
    \ result;\n    if (a > b) \n    {\n        result = generate_integers(b, a);\n\
    \    }\n    else \n    {\n        result = new long[];\n        for (long i =\
    \ a; i <= b; i++) \n        {\n            if (i % 2 == 0) \n            {\n \
    \               result ~= i;\n            }\n        }\n    }\n    return result;\n\
    }\nunittest\n{\n    alias candidate = generate_integers;\n\n    assert(candidate(2L,\
    \ 10L) == [2L, 4L, 6L, 8L]);\n    assert(candidate(10L, 2L) == [2L, 4L, 6L, 8L]);\n\
    \    assert(candidate(132L, 2L) == [2L, 4L, 6L, 8L]);\n    assert(candidate(17L,\
    \ 89L) == []);\n}\nvoid main(){}"
  status: SyntaxError
  stderr: '/tmp/tmp8pdd583o.d(26): Error: new can only create structs, dynamic arrays
    or class objects, not `long[]`''s

    Failed: ["dmd", "-unittest", "-v", "-o-", "/tmp/tmp8pdd583o.d", "-I/tmp"]

    '
  stdout: ''
  timestamp: 1660163091
- exit_code: 1
  program: "import std.typecons;\nimport std.math;\n/*\n\n    Given two positive integers\
    \ a and b, return the even digits between a\n    and b, in ascending order.\n\n\
    \    For example:\n    >>> generate_integers(2L, 8L)\n    [2L, 4L, 6L, 8L]\n \
    \   >>> generate_integers(8L, 2L)\n    [2L, 4L, 6L, 8L]\n    >>> generate_integers(10L,\
    \ 14L)\n    []\n    \n*/\nlong[] generate_integers(long a, long b) \n{\n    long[]\
    \ result;\n    if (a > b) {\n        result = generate_integers(b, a);\n    }\
    \ else {\n        result = new long[0];\n        for (long i = a; i <= b; i++)\
    \ {\n            if (i % 2 == 0) {\n                result ~= i;\n           \
    \ }\n        }\n    }\n    return result;\n}\nunittest\n{\n    alias candidate\
    \ = generate_integers;\n\n    assert(candidate(2L, 10L) == [2L, 4L, 6L, 8L]);\n\
    \    assert(candidate(10L, 2L) == [2L, 4L, 6L, 8L]);\n    assert(candidate(132L,\
    \ 2L) == [2L, 4L, 6L, 8L]);\n    assert(candidate(17L, 89L) == []);\n}\nvoid main(){}"
  status: Exception
  stderr: 'core.exception.AssertError@/tmp/tmpu_qqr3vh.d(36): unittest failure

    ----------------

    ??:? _d_unittestp [0x4283b5]

    ??:? void tmpu_qqr3vh.__unittest_L32_C1() [0x427f48]

    ??:? void tmpu_qqr3vh.__modtest() [0x428138]

    ??:? int core.runtime.runModuleUnitTests().__foreachbody2(object.ModuleInfo*)
    [0x42cde7]

    ??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)).__lambda2(immutable(object.ModuleInfo*))
    [0x42bc7a]

    ??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))).__foreachbody2(ref
    rt.sections_elf_shared.DSO) [0x4307c5]

    ??:? int rt.sections_elf_shared.DSO.opApply(scope int delegate(ref rt.sections_elf_shared.DSO))
    [0x430c74]

    ??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*)))
    [0x430751]

    ??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)) [0x42bc51]

    ??:? runModuleUnitTests [0x42cbbd]

    ??:? void rt.dmain2._d_run_main(int, char**, extern (C) int function(char[][])*).runAll()
    [0x428804]

    ??:? void rt.dmain2._d_r'
  stdout: ''
  timestamp: 1660163091
- exit_code: 1
  program: "import std.typecons;\nimport std.math;\n/*\n\n    Given two positive integers\
    \ a and b, return the even digits between a\n    and b, in ascending order.\n\n\
    \    For example:\n    >>> generate_integers(2L, 8L)\n    [2L, 4L, 6L, 8L]\n \
    \   >>> generate_integers(8L, 2L)\n    [2L, 4L, 6L, 8L]\n    >>> generate_integers(10L,\
    \ 14L)\n    []\n    \n*/\nlong[] generate_integers(long a, long b) \n{\n    long[]\
    \ result;\n    if (a > b)\n    {\n        result = generate_integers(b, a);\n\
    \    }\n    else\n    {\n        result = new long[];\n        foreach (i; a..b)\n\
    \        {\n            if (i % 2 == 0)\n            {\n                result\
    \ ~= i;\n            }\n        }\n    }\n    return result;\n}\nunittest\n{\n\
    \    alias candidate = generate_integers;\n\n    assert(candidate(2L, 10L) ==\
    \ [2L, 4L, 6L, 8L]);\n    assert(candidate(10L, 2L) == [2L, 4L, 6L, 8L]);\n  \
    \  assert(candidate(132L, 2L) == [2L, 4L, 6L, 8L]);\n    assert(candidate(17L,\
    \ 89L) == []);\n}\nvoid main(){}"
  status: SyntaxError
  stderr: '/tmp/tmp7trtofh_.d(26): Error: new can only create structs, dynamic arrays
    or class objects, not `long[]`''s

    Failed: ["dmd", "-unittest", "-v", "-o-", "/tmp/tmp7trtofh_.d", "-I/tmp"]

    '
  stdout: ''
  timestamp: 1660163090
- exit_code: 1
  program: "import std.typecons;\nimport std.math;\n/*\n\n    Given two positive integers\
    \ a and b, return the even digits between a\n    and b, in ascending order.\n\n\
    \    For example:\n    >>> generate_integers(2L, 8L)\n    [2L, 4L, 6L, 8L]\n \
    \   >>> generate_integers(8L, 2L)\n    [2L, 4L, 6L, 8L]\n    >>> generate_integers(10L,\
    \ 14L)\n    []\n    \n*/\nlong[] generate_integers(long a, long b) \n{\n    long[]\
    \ result;\n    if (a > b)\n    {\n        result = generate_integers(b, a);\n\
    \    }\n    else\n    {\n        result = new long[0];\n        if (a % 2 == 0)\n\
    \        {\n            result ~= a;\n        }\n        if (b % 2 == 0)\n   \
    \     {\n            result ~= b;\n        }\n        for (long i = a + 1; i <\
    \ b; i++)\n        {\n            if (i % 2 == 0)\n            {\n           \
    \     result ~= i;\n            }\n        }\n    }\n    return result;\n}\nunittest\n\
    {\n    alias candidate = generate_integers;\n\n    assert(candidate(2L, 10L) ==\
    \ [2L, 4L, 6L, 8L]);\n    assert(candidate(10L, 2L) == [2L, 4L, 6L, 8L]);\n  \
    \  assert(candidate(132L, 2L) == [2L, 4L, 6L, 8L]);\n    assert(candidate(17L,\
    \ 89L) == []);\n}\nvoid main(){}"
  status: Exception
  stderr: 'core.exception.AssertError@/tmp/tmpa5fag1yl.d(49): unittest failure

    ----------------

    ??:? _d_unittestp [0x428445]

    ??:? void tmpa5fag1yl.__unittest_L45_C1() [0x427fd4]

    ??:? void tmpa5fag1yl.__modtest() [0x4281c4]

    ??:? int core.runtime.runModuleUnitTests().__foreachbody2(object.ModuleInfo*)
    [0x42ce77]

    ??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)).__lambda2(immutable(object.ModuleInfo*))
    [0x42bd0a]

    ??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))).__foreachbody2(ref
    rt.sections_elf_shared.DSO) [0x430855]

    ??:? int rt.sections_elf_shared.DSO.opApply(scope int delegate(ref rt.sections_elf_shared.DSO))
    [0x430d04]

    ??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*)))
    [0x4307e1]

    ??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)) [0x42bce1]

    ??:? runModuleUnitTests [0x42cc4d]

    ??:? void rt.dmain2._d_run_main(int, char**, extern (C) int function(char[][])*).runAll()
    [0x428894]

    ??:? void rt.dmain2._d_r'
  stdout: ''
  timestamp: 1660163091
- exit_code: 1
  program: "import std.typecons;\nimport std.math;\n/*\n\n    Given two positive integers\
    \ a and b, return the even digits between a\n    and b, in ascending order.\n\n\
    \    For example:\n    >>> generate_integers(2L, 8L)\n    [2L, 4L, 6L, 8L]\n \
    \   >>> generate_integers(8L, 2L)\n    [2L, 4L, 6L, 8L]\n    >>> generate_integers(10L,\
    \ 14L)\n    []\n    \n*/\nlong[] generate_integers(long a, long b) \n{\n    if\
    \ (a > b) \n    {\n        long temp = a;\n        a = b;\n        b = temp;\n\
    \    }\n    long[] result = new long[];\n    for (long i = a; i <= b; i++) \n\
    \    {\n        if (i % 2 == 0) \n        {\n            result ~= i;\n      \
    \  }\n    }\n    return result;\n}\nunittest\n{\n    alias candidate = generate_integers;\n\
    \n    assert(candidate(2L, 10L) == [2L, 4L, 6L, 8L]);\n    assert(candidate(10L,\
    \ 2L) == [2L, 4L, 6L, 8L]);\n    assert(candidate(132L, 2L) == [2L, 4L, 6L, 8L]);\n\
    \    assert(candidate(17L, 89L) == []);\n}\nvoid main(){}"
  status: SyntaxError
  stderr: '/tmp/tmph3tctbsu.d(25): Error: new can only create structs, dynamic arrays
    or class objects, not `long[]`''s

    Failed: ["dmd", "-unittest", "-v", "-o-", "/tmp/tmph3tctbsu.d", "-I/tmp"]

    '
  stdout: ''
  timestamp: 1660163091
- exit_code: 1
  program: "import std.typecons;\nimport std.math;\n/*\n\n    Given two positive integers\
    \ a and b, return the even digits between a\n    and b, in ascending order.\n\n\
    \    For example:\n    >>> generate_integers(2L, 8L)\n    [2L, 4L, 6L, 8L]\n \
    \   >>> generate_integers(8L, 2L)\n    [2L, 4L, 6L, 8L]\n    >>> generate_integers(10L,\
    \ 14L)\n    []\n    \n*/\nlong[] generate_integers(long a, long b) \n{\n    //\
    \ TODO: implement the function\n    return [2L, 4L, 6L, 8L];\n}\nunittest\n{\n\
    \    alias candidate = generate_integers;\n\n    assert(candidate(2L, 10L) ==\
    \ [2L, 4L, 6L, 8L]);\n    assert(candidate(10L, 2L) == [2L, 4L, 6L, 8L]);\n  \
    \  assert(candidate(132L, 2L) == [2L, 4L, 6L, 8L]);\n    assert(candidate(17L,\
    \ 89L) == []);\n}\nvoid main(){}"
  status: Exception
  stderr: 'core.exception.AssertError@/tmp/tmphmmbfjyv.d(29): unittest failure

    ----------------

    ??:? _d_unittestp [0x428335]

    ??:? void tmphmmbfjyv.__unittest_L22_C1() [0x428009]

    ??:? void tmphmmbfjyv.__modtest() [0x4280b8]

    ??:? int core.runtime.runModuleUnitTests().__foreachbody2(object.ModuleInfo*)
    [0x42c31f]

    ??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)).__lambda2(immutable(object.ModuleInfo*))
    [0x42b1b2]

    ??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))).__foreachbody2(ref
    rt.sections_elf_shared.DSO) [0x430345]

    ??:? int rt.sections_elf_shared.DSO.opApply(scope int delegate(ref rt.sections_elf_shared.DSO))
    [0x4307f4]

    ??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*)))
    [0x4302d1]

    ??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)) [0x42b189]

    ??:? runModuleUnitTests [0x42c0f5]

    ??:? void rt.dmain2._d_run_main(int, char**, extern (C) int function(char[][])*).runAll()
    [0x428784]

    ??:? void rt.dmain2._d_r'
  stdout: ''
  timestamp: 1660163091
- exit_code: 1
  program: "import std.typecons;\nimport std.math;\n/*\n\n    Given two positive integers\
    \ a and b, return the even digits between a\n    and b, in ascending order.\n\n\
    \    For example:\n    >>> generate_integers(2L, 8L)\n    [2L, 4L, 6L, 8L]\n \
    \   >>> generate_integers(8L, 2L)\n    [2L, 4L, 6L, 8L]\n    >>> generate_integers(10L,\
    \ 14L)\n    []\n    \n*/\nlong[] generate_integers(long a, long b) \n{\n    long[]\
    \ result;\n    if (a > b)\n    {\n        result = generate_integers(b, a);\n\
    \    }\n    else\n    {\n        result = new long[];\n        for (long i = a;\
    \ i <= b; i++)\n        {\n            if (i % 2 == 0)\n            {\n      \
    \          result ~= i;\n            }\n        }\n    }\n    return result;\n\
    }\nunittest\n{\n    alias candidate = generate_integers;\n\n    assert(candidate(2L,\
    \ 10L) == [2L, 4L, 6L, 8L]);\n    assert(candidate(10L, 2L) == [2L, 4L, 6L, 8L]);\n\
    \    assert(candidate(132L, 2L) == [2L, 4L, 6L, 8L]);\n    assert(candidate(17L,\
    \ 89L) == []);\n}\nvoid main(){}"
  status: SyntaxError
  stderr: '/tmp/tmp8qqrm9l7.d(26): Error: new can only create structs, dynamic arrays
    or class objects, not `long[]`''s

    Failed: ["dmd", "-unittest", "-v", "-o-", "/tmp/tmp8qqrm9l7.d", "-I/tmp"]

    '
  stdout: ''
  timestamp: 1660163091
- exit_code: 1
  program: "import std.typecons;\nimport std.math;\n/*\n\n    Given two positive integers\
    \ a and b, return the even digits between a\n    and b, in ascending order.\n\n\
    \    For example:\n    >>> generate_integers(2L, 8L)\n    [2L, 4L, 6L, 8L]\n \
    \   >>> generate_integers(8L, 2L)\n    [2L, 4L, 6L, 8L]\n    >>> generate_integers(10L,\
    \ 14L)\n    []\n    \n*/\nlong[] generate_integers(long a, long b) \n{\n    long[]\
    \ result;\n    if (a > b)\n    {\n        result = generate_integers(b, a);\n\
    \    }\n    else\n    {\n        result = new long[0];\n        for (long i =\
    \ a; i <= b; i++)\n        {\n            if (i % 2 == 0)\n            {\n   \
    \             result ~= i;\n            }\n        }\n    }\n    return result;\n\
    }\nunittest\n{\n    alias candidate = generate_integers;\n\n    assert(candidate(2L,\
    \ 10L) == [2L, 4L, 6L, 8L]);\n    assert(candidate(10L, 2L) == [2L, 4L, 6L, 8L]);\n\
    \    assert(candidate(132L, 2L) == [2L, 4L, 6L, 8L]);\n    assert(candidate(17L,\
    \ 89L) == []);\n}\nvoid main(){}"
  status: Exception
  stderr: 'core.exception.AssertError@/tmp/tmpo37024wm.d(41): unittest failure

    ----------------

    ??:? _d_unittestp [0x4283b5]

    ??:? void tmpo37024wm.__unittest_L37_C1() [0x427f48]

    ??:? void tmpo37024wm.__modtest() [0x428138]

    ??:? int core.runtime.runModuleUnitTests().__foreachbody2(object.ModuleInfo*)
    [0x42cde7]

    ??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)).__lambda2(immutable(object.ModuleInfo*))
    [0x42bc7a]

    ??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))).__foreachbody2(ref
    rt.sections_elf_shared.DSO) [0x4307c5]

    ??:? int rt.sections_elf_shared.DSO.opApply(scope int delegate(ref rt.sections_elf_shared.DSO))
    [0x430c74]

    ??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*)))
    [0x430751]

    ??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)) [0x42bc51]

    ??:? runModuleUnitTests [0x42cbbd]

    ??:? void rt.dmain2._d_run_main(int, char**, extern (C) int function(char[][])*).runAll()
    [0x428804]

    ??:? void rt.dmain2._d_r'
  stdout: ''
  timestamp: 1660163090
- exit_code: 1
  program: "import std.typecons;\nimport std.math;\n/*\n\n    Given two positive integers\
    \ a and b, return the even digits between a\n    and b, in ascending order.\n\n\
    \    For example:\n    >>> generate_integers(2L, 8L)\n    [2L, 4L, 6L, 8L]\n \
    \   >>> generate_integers(8L, 2L)\n    [2L, 4L, 6L, 8L]\n    >>> generate_integers(10L,\
    \ 14L)\n    []\n    \n*/\nlong[] generate_integers(long a, long b) \n{\n    long[]\
    \ result;\n    if (a > b)\n    {\n        result = generate_integers(b, a);\n\
    \    }\n    else\n    {\n        result = new long[];\n        for (long i = a;\
    \ i <= b; i++)\n        {\n            if (i % 2 == 0)\n            {\n      \
    \          result ~= i;\n            }\n        }\n    }\n    return result;\n\
    }\nunittest\n{\n    alias candidate = generate_integers;\n\n    assert(candidate(2L,\
    \ 10L) == [2L, 4L, 6L, 8L]);\n    assert(candidate(10L, 2L) == [2L, 4L, 6L, 8L]);\n\
    \    assert(candidate(132L, 2L) == [2L, 4L, 6L, 8L]);\n    assert(candidate(17L,\
    \ 89L) == []);\n}\nvoid main(){}"
  status: SyntaxError
  stderr: '/tmp/tmp8qqrm9l7.d(26): Error: new can only create structs, dynamic arrays
    or class objects, not `long[]`''s

    Failed: ["dmd", "-unittest", "-v", "-o-", "/tmp/tmp8qqrm9l7.d", "-I/tmp"]

    '
  stdout: ''
  timestamp: 1660163091
- exit_code: 1
  program: "import std.typecons;\nimport std.math;\n/*\n\n    Given two positive integers\
    \ a and b, return the even digits between a\n    and b, in ascending order.\n\n\
    \    For example:\n    >>> generate_integers(2L, 8L)\n    [2L, 4L, 6L, 8L]\n \
    \   >>> generate_integers(8L, 2L)\n    [2L, 4L, 6L, 8L]\n    >>> generate_integers(10L,\
    \ 14L)\n    []\n    \n*/\nlong[] generate_integers(long a, long b) \n{\n    long[]\
    \ result;\n    if (a > b)\n    {\n        result = generate_integers(b, a);\n\
    \    }\n    else\n    {\n        if (a % 2 == 0)\n        {\n            result\
    \ = new long[(b - a) / 2 + 1];\n            for (long i = 0; i < result.length;\
    \ i++)\n            {\n                result[i] = a + i * 2;\n            }\n\
    \        }\n        else\n        {\n            result = new long[(b - a - 1)\
    \ / 2 + 1];\n            for (long i = 0; i < result.length; i++)\n          \
    \  {\n                result[i] = a + i * 2 + 1;\n            }\n        }\n \
    \   }\n    return result;\n}\nunittest\n{\n    alias candidate = generate_integers;\n\
    \n    assert(candidate(2L, 10L) == [2L, 4L, 6L, 8L]);\n    assert(candidate(10L,\
    \ 2L) == [2L, 4L, 6L, 8L]);\n    assert(candidate(132L, 2L) == [2L, 4L, 6L, 8L]);\n\
    \    assert(candidate(17L, 89L) == []);\n}\nvoid main(){}"
  status: Exception
  stderr: 'core.exception.AssertError@/tmp/tmp_179v3a9.d(49): unittest failure

    ----------------

    ??:? _d_unittestp [0x428455]

    ??:? void tmp_179v3a9.__unittest_L45_C1() [0x427fe4]

    ??:? void tmp_179v3a9.__modtest() [0x4281d4]

    ??:? int core.runtime.runModuleUnitTests().__foreachbody2(object.ModuleInfo*)
    [0x42c50f]

    ??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)).__lambda2(immutable(object.ModuleInfo*))
    [0x42b3a2]

    ??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))).__foreachbody2(ref
    rt.sections_elf_shared.DSO) [0x43062d]

    ??:? int rt.sections_elf_shared.DSO.opApply(scope int delegate(ref rt.sections_elf_shared.DSO))
    [0x430adc]

    ??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*)))
    [0x4305b9]

    ??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)) [0x42b379]

    ??:? runModuleUnitTests [0x42c2e5]

    ??:? void rt.dmain2._d_run_main(int, char**, extern (C) int function(char[][])*).runAll()
    [0x428918]

    ??:? void rt.dmain2._d_r'
  stdout: ''
  timestamp: 1660163091
- exit_code: 1
  program: "import std.typecons;\nimport std.math;\n/*\n\n    Given two positive integers\
    \ a and b, return the even digits between a\n    and b, in ascending order.\n\n\
    \    For example:\n    >>> generate_integers(2L, 8L)\n    [2L, 4L, 6L, 8L]\n \
    \   >>> generate_integers(8L, 2L)\n    [2L, 4L, 6L, 8L]\n    >>> generate_integers(10L,\
    \ 14L)\n    []\n    \n*/\nlong[] generate_integers(long a, long b) \n{\n    long[]\
    \ result;\n    if (a > b)\n    {\n        result = generate_integers(b, a);\n\
    \    }\n    else\n    {\n        result = new long[];\n        foreach (i; a..b)\n\
    \        {\n            if (i % 2 == 0)\n            {\n                result\
    \ ~= i;\n            }\n        }\n    }\n    return result;\n}\nunittest\n{\n\
    \    alias candidate = generate_integers;\n\n    assert(candidate(2L, 10L) ==\
    \ [2L, 4L, 6L, 8L]);\n    assert(candidate(10L, 2L) == [2L, 4L, 6L, 8L]);\n  \
    \  assert(candidate(132L, 2L) == [2L, 4L, 6L, 8L]);\n    assert(candidate(17L,\
    \ 89L) == []);\n}\nvoid main(){}"
  status: SyntaxError
  stderr: '/tmp/tmp7trtofh_.d(26): Error: new can only create structs, dynamic arrays
    or class objects, not `long[]`''s

    Failed: ["dmd", "-unittest", "-v", "-o-", "/tmp/tmp7trtofh_.d", "-I/tmp"]

    '
  stdout: ''
  timestamp: 1660163090
- exit_code: 1
  program: "import std.typecons;\nimport std.math;\n/*\n\n    Given two positive integers\
    \ a and b, return the even digits between a\n    and b, in ascending order.\n\n\
    \    For example:\n    >>> generate_integers(2L, 8L)\n    [2L, 4L, 6L, 8L]\n \
    \   >>> generate_integers(8L, 2L)\n    [2L, 4L, 6L, 8L]\n    >>> generate_integers(10L,\
    \ 14L)\n    []\n    \n*/\nlong[] generate_integers(long a, long b) \n{\n    long[]\
    \ result;\n    if (a > b)\n    {\n        result = generate_integers(b, a);\n\
    \    }\n    else\n    {\n        result = new long[];\n        foreach (i; a ..\
    \ b + 1)\n        {\n            if (i % 2 == 0)\n            {\n            \
    \    result ~= i;\n            }\n        }\n    }\n    return result;\n}\nunittest\n\
    {\n    alias candidate = generate_integers;\n\n    assert(candidate(2L, 10L) ==\
    \ [2L, 4L, 6L, 8L]);\n    assert(candidate(10L, 2L) == [2L, 4L, 6L, 8L]);\n  \
    \  assert(candidate(132L, 2L) == [2L, 4L, 6L, 8L]);\n    assert(candidate(17L,\
    \ 89L) == []);\n}\nvoid main(){}"
  status: SyntaxError
  stderr: '/tmp/tmprgj9mhlw.d(26): Error: new can only create structs, dynamic arrays
    or class objects, not `long[]`''s

    Failed: ["dmd", "-unittest", "-v", "-o-", "/tmp/tmprgj9mhlw.d", "-I/tmp"]

    '
  stdout: ''
  timestamp: 1660163091
- exit_code: 1
  program: "import std.typecons;\nimport std.math;\n/*\n\n    Given two positive integers\
    \ a and b, return the even digits between a\n    and b, in ascending order.\n\n\
    \    For example:\n    >>> generate_integers(2L, 8L)\n    [2L, 4L, 6L, 8L]\n \
    \   >>> generate_integers(8L, 2L)\n    [2L, 4L, 6L, 8L]\n    >>> generate_integers(10L,\
    \ 14L)\n    []\n    \n*/\nlong[] generate_integers(long a, long b) \n{\n    long[]\
    \ result;\n    if (a > b)\n    {\n        result = generate_integers(b, a);\n\
    \    }\n    else\n    {\n        result = new long[0];\n        if (a % 2 == 0)\n\
    \        {\n            result ~= a;\n            a += 2;\n        }\n       \
    \ else\n        {\n            a += 1;\n        }\n        for (; a <= b; a +=\
    \ 2)\n        {\n            result ~= a;\n        }\n    }\n    return result;\n\
    }\nunittest\n{\n    alias candidate = generate_integers;\n\n    assert(candidate(2L,\
    \ 10L) == [2L, 4L, 6L, 8L]);\n    assert(candidate(10L, 2L) == [2L, 4L, 6L, 8L]);\n\
    \    assert(candidate(132L, 2L) == [2L, 4L, 6L, 8L]);\n    assert(candidate(17L,\
    \ 89L) == []);\n}\nvoid main(){}"
  status: Exception
  stderr: 'core.exception.AssertError@/tmp/tmpdiigc1mf.d(47): unittest failure

    ----------------

    ??:? _d_unittestp [0x4283ed]

    ??:? void tmpdiigc1mf.__unittest_L43_C1() [0x427f7c]

    ??:? void tmpdiigc1mf.__modtest() [0x42816c]

    ??:? int core.runtime.runModuleUnitTests().__foreachbody2(object.ModuleInfo*)
    [0x42ce1f]

    ??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)).__lambda2(immutable(object.ModuleInfo*))
    [0x42bcb2]

    ??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))).__foreachbody2(ref
    rt.sections_elf_shared.DSO) [0x4307fd]

    ??:? int rt.sections_elf_shared.DSO.opApply(scope int delegate(ref rt.sections_elf_shared.DSO))
    [0x430cac]

    ??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*)))
    [0x430789]

    ??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)) [0x42bc89]

    ??:? runModuleUnitTests [0x42cbf5]

    ??:? void rt.dmain2._d_run_main(int, char**, extern (C) int function(char[][])*).runAll()
    [0x42883c]

    ??:? void rt.dmain2._d_r'
  stdout: ''
  timestamp: 1660163091
- exit_code: 1
  program: "import std.typecons;\nimport std.math;\n/*\n\n    Given two positive integers\
    \ a and b, return the even digits between a\n    and b, in ascending order.\n\n\
    \    For example:\n    >>> generate_integers(2L, 8L)\n    [2L, 4L, 6L, 8L]\n \
    \   >>> generate_integers(8L, 2L)\n    [2L, 4L, 6L, 8L]\n    >>> generate_integers(10L,\
    \ 14L)\n    []\n    \n*/\nlong[] generate_integers(long a, long b) \n{\n    long[]\
    \ result;\n    if (a > b)\n    {\n        result = generate_integers(b, a);\n\
    \    }\n    else\n    {\n        result = new long[0];\n        for (long i =\
    \ a; i <= b; i++)\n        {\n            if (i % 2 == 0)\n            {\n   \
    \             result ~= i;\n            }\n        }\n    }\n    return result;\n\
    }\nunittest\n{\n    alias candidate = generate_integers;\n\n    assert(candidate(2L,\
    \ 10L) == [2L, 4L, 6L, 8L]);\n    assert(candidate(10L, 2L) == [2L, 4L, 6L, 8L]);\n\
    \    assert(candidate(132L, 2L) == [2L, 4L, 6L, 8L]);\n    assert(candidate(17L,\
    \ 89L) == []);\n}\nvoid main(){}"
  status: Exception
  stderr: 'core.exception.AssertError@/tmp/tmpo37024wm.d(41): unittest failure

    ----------------

    ??:? _d_unittestp [0x4283b5]

    ??:? void tmpo37024wm.__unittest_L37_C1() [0x427f48]

    ??:? void tmpo37024wm.__modtest() [0x428138]

    ??:? int core.runtime.runModuleUnitTests().__foreachbody2(object.ModuleInfo*)
    [0x42cde7]

    ??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)).__lambda2(immutable(object.ModuleInfo*))
    [0x42bc7a]

    ??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))).__foreachbody2(ref
    rt.sections_elf_shared.DSO) [0x4307c5]

    ??:? int rt.sections_elf_shared.DSO.opApply(scope int delegate(ref rt.sections_elf_shared.DSO))
    [0x430c74]

    ??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*)))
    [0x430751]

    ??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)) [0x42bc51]

    ??:? runModuleUnitTests [0x42cbbd]

    ??:? void rt.dmain2._d_run_main(int, char**, extern (C) int function(char[][])*).runAll()
    [0x428804]

    ??:? void rt.dmain2._d_r'
  stdout: ''
  timestamp: 1660163090
- exit_code: 1
  program: "import std.typecons;\nimport std.math;\n/*\n\n    Given two positive integers\
    \ a and b, return the even digits between a\n    and b, in ascending order.\n\n\
    \    For example:\n    >>> generate_integers(2L, 8L)\n    [2L, 4L, 6L, 8L]\n \
    \   >>> generate_integers(8L, 2L)\n    [2L, 4L, 6L, 8L]\n    >>> generate_integers(10L,\
    \ 14L)\n    []\n    \n*/\nlong[] generate_integers(long a, long b) \n{\n    if\
    \ (a > b)\n    {\n        long temp = a;\n        a = b;\n        b = temp;\n\
    \    }\n    long[] result = new long[];\n    for (long i = a; i <= b; i++)\n \
    \   {\n        if (i % 2 == 0)\n        {\n            result ~= i;\n        }\n\
    \    }\n    return result;\n}\nunittest\n{\n    alias candidate = generate_integers;\n\
    \n    assert(candidate(2L, 10L) == [2L, 4L, 6L, 8L]);\n    assert(candidate(10L,\
    \ 2L) == [2L, 4L, 6L, 8L]);\n    assert(candidate(132L, 2L) == [2L, 4L, 6L, 8L]);\n\
    \    assert(candidate(17L, 89L) == []);\n}\nvoid main(){}"
  status: SyntaxError
  stderr: '/tmp/tmpzpzfez5i.d(25): Error: new can only create structs, dynamic arrays
    or class objects, not `long[]`''s

    Failed: ["dmd", "-unittest", "-v", "-o-", "/tmp/tmpzpzfez5i.d", "-I/tmp"]

    '
  stdout: ''
  timestamp: 1660163091
- exit_code: 1
  program: "import std.typecons;\nimport std.math;\n/*\n\n    Given two positive integers\
    \ a and b, return the even digits between a\n    and b, in ascending order.\n\n\
    \    For example:\n    >>> generate_integers(2L, 8L)\n    [2L, 4L, 6L, 8L]\n \
    \   >>> generate_integers(8L, 2L)\n    [2L, 4L, 6L, 8L]\n    >>> generate_integers(10L,\
    \ 14L)\n    []\n    \n*/\nlong[] generate_integers(long a, long b) \n{\n    long[]\
    \ result;\n    if (a > b)\n    {\n        result = generate_integers(b, a);\n\
    \    }\n    else\n    {\n        result = new long[];\n        for (long i = a;\
    \ i <= b; i++)\n        {\n            if (i % 2 == 0)\n            {\n      \
    \          result ~= i;\n            }\n        }\n    }\n    return result;\n\
    }\nunittest\n{\n    alias candidate = generate_integers;\n\n    assert(candidate(2L,\
    \ 10L) == [2L, 4L, 6L, 8L]);\n    assert(candidate(10L, 2L) == [2L, 4L, 6L, 8L]);\n\
    \    assert(candidate(132L, 2L) == [2L, 4L, 6L, 8L]);\n    assert(candidate(17L,\
    \ 89L) == []);\n}\nvoid main(){}"
  status: SyntaxError
  stderr: '/tmp/tmp8qqrm9l7.d(26): Error: new can only create structs, dynamic arrays
    or class objects, not `long[]`''s

    Failed: ["dmd", "-unittest", "-v", "-o-", "/tmp/tmp8qqrm9l7.d", "-I/tmp"]

    '
  stdout: ''
  timestamp: 1660163091
- exit_code: 1
  program: "import std.typecons;\nimport std.math;\n/*\n\n    Given two positive integers\
    \ a and b, return the even digits between a\n    and b, in ascending order.\n\n\
    \    For example:\n    >>> generate_integers(2L, 8L)\n    [2L, 4L, 6L, 8L]\n \
    \   >>> generate_integers(8L, 2L)\n    [2L, 4L, 6L, 8L]\n    >>> generate_integers(10L,\
    \ 14L)\n    []\n    \n*/\nlong[] generate_integers(long a, long b) \n{\n    long[]\
    \ result;\n    if (a > b)\n    {\n        result = generate_integers(b, a);\n\
    \    }\n    else\n    {\n        result = new long[0];\n        for (long i =\
    \ a; i <= b; i++)\n        {\n            if (i % 2 == 0)\n            {\n   \
    \             result ~= i;\n            }\n        }\n    }\n    return result;\n\
    }\nunittest\n{\n    alias candidate = generate_integers;\n\n    assert(candidate(2L,\
    \ 10L) == [2L, 4L, 6L, 8L]);\n    assert(candidate(10L, 2L) == [2L, 4L, 6L, 8L]);\n\
    \    assert(candidate(132L, 2L) == [2L, 4L, 6L, 8L]);\n    assert(candidate(17L,\
    \ 89L) == []);\n}\nvoid main(){}"
  status: Exception
  stderr: 'core.exception.AssertError@/tmp/tmpo37024wm.d(41): unittest failure

    ----------------

    ??:? _d_unittestp [0x4283b5]

    ??:? void tmpo37024wm.__unittest_L37_C1() [0x427f48]

    ??:? void tmpo37024wm.__modtest() [0x428138]

    ??:? int core.runtime.runModuleUnitTests().__foreachbody2(object.ModuleInfo*)
    [0x42cde7]

    ??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)).__lambda2(immutable(object.ModuleInfo*))
    [0x42bc7a]

    ??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))).__foreachbody2(ref
    rt.sections_elf_shared.DSO) [0x4307c5]

    ??:? int rt.sections_elf_shared.DSO.opApply(scope int delegate(ref rt.sections_elf_shared.DSO))
    [0x430c74]

    ??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*)))
    [0x430751]

    ??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)) [0x42bc51]

    ??:? runModuleUnitTests [0x42cbbd]

    ??:? void rt.dmain2._d_run_main(int, char**, extern (C) int function(char[][])*).runAll()
    [0x428804]

    ??:? void rt.dmain2._d_r'
  stdout: ''
  timestamp: 1660163090
- exit_code: 1
  program: "import std.typecons;\nimport std.math;\n/*\n\n    Given two positive integers\
    \ a and b, return the even digits between a\n    and b, in ascending order.\n\n\
    \    For example:\n    >>> generate_integers(2L, 8L)\n    [2L, 4L, 6L, 8L]\n \
    \   >>> generate_integers(8L, 2L)\n    [2L, 4L, 6L, 8L]\n    >>> generate_integers(10L,\
    \ 14L)\n    []\n    \n*/\nlong[] generate_integers(long a, long b) \n{\n    long[]\
    \ result;\n    if (a > b)\n    {\n        result = generate_integers(b, a);\n\
    \    }\n    else\n    {\n        result = [];\n        foreach (i; a..b)\n   \
    \     {\n            if (i % 2 == 0)\n            {\n                result ~=\
    \ i;\n            }\n        }\n    }\n    return result;\n}\nunittest\n{\n  \
    \  alias candidate = generate_integers;\n\n    assert(candidate(2L, 10L) == [2L,\
    \ 4L, 6L, 8L]);\n    assert(candidate(10L, 2L) == [2L, 4L, 6L, 8L]);\n    assert(candidate(132L,\
    \ 2L) == [2L, 4L, 6L, 8L]);\n    assert(candidate(17L, 89L) == []);\n}\nvoid main(){}"
  status: Exception
  stderr: 'core.exception.AssertError@/tmp/tmp9jqzgceq.d(43): unittest failure

    ----------------

    ??:? _d_unittestp [0x4283cd]

    ??:? void tmp9jqzgceq.__unittest_L37_C1() [0x42804c]

    ??:? void tmp9jqzgceq.__modtest() [0x428150]

    ??:? int core.runtime.runModuleUnitTests().__foreachbody2(object.ModuleInfo*)
    [0x42cda3]

    ??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)).__lambda2(immutable(object.ModuleInfo*))
    [0x42bc36]

    ??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))).__foreachbody2(ref
    rt.sections_elf_shared.DSO) [0x430689]

    ??:? int rt.sections_elf_shared.DSO.opApply(scope int delegate(ref rt.sections_elf_shared.DSO))
    [0x430b38]

    ??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*)))
    [0x430615]

    ??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)) [0x42bc0d]

    ??:? runModuleUnitTests [0x42cb79]

    ??:? void rt.dmain2._d_run_main(int, char**, extern (C) int function(char[][])*).runAll()
    [0x42881c]

    ??:? void rt.dmain2._d_r'
  stdout: ''
  timestamp: 1660163090
- exit_code: 1
  program: "import std.typecons;\nimport std.math;\n/*\n\n    Given two positive integers\
    \ a and b, return the even digits between a\n    and b, in ascending order.\n\n\
    \    For example:\n    >>> generate_integers(2L, 8L)\n    [2L, 4L, 6L, 8L]\n \
    \   >>> generate_integers(8L, 2L)\n    [2L, 4L, 6L, 8L]\n    >>> generate_integers(10L,\
    \ 14L)\n    []\n    \n*/\nlong[] generate_integers(long a, long b) \n{\n    long[]\
    \ result;\n    if (a > b)\n    {\n        result = generate_integers(b, a);\n\
    \    }\n    else\n    {\n        result = new long[0];\n        for (long i =\
    \ a; i <= b; i++)\n        {\n            if (i % 2 == 0)\n            {\n   \
    \             result ~= i;\n            }\n        }\n    }\n    return result;\n\
    }\nunittest\n{\n    alias candidate = generate_integers;\n\n    assert(candidate(2L,\
    \ 10L) == [2L, 4L, 6L, 8L]);\n    assert(candidate(10L, 2L) == [2L, 4L, 6L, 8L]);\n\
    \    assert(candidate(132L, 2L) == [2L, 4L, 6L, 8L]);\n    assert(candidate(17L,\
    \ 89L) == []);\n}\nvoid main(){}"
  status: Exception
  stderr: 'core.exception.AssertError@/tmp/tmpo37024wm.d(41): unittest failure

    ----------------

    ??:? _d_unittestp [0x4283b5]

    ??:? void tmpo37024wm.__unittest_L37_C1() [0x427f48]

    ??:? void tmpo37024wm.__modtest() [0x428138]

    ??:? int core.runtime.runModuleUnitTests().__foreachbody2(object.ModuleInfo*)
    [0x42cde7]

    ??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)).__lambda2(immutable(object.ModuleInfo*))
    [0x42bc7a]

    ??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))).__foreachbody2(ref
    rt.sections_elf_shared.DSO) [0x4307c5]

    ??:? int rt.sections_elf_shared.DSO.opApply(scope int delegate(ref rt.sections_elf_shared.DSO))
    [0x430c74]

    ??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*)))
    [0x430751]

    ??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)) [0x42bc51]

    ??:? runModuleUnitTests [0x42cbbd]

    ??:? void rt.dmain2._d_run_main(int, char**, extern (C) int function(char[][])*).runAll()
    [0x428804]

    ??:? void rt.dmain2._d_r'
  stdout: ''
  timestamp: 1660163090
- exit_code: 1
  program: "import std.typecons;\nimport std.math;\n/*\n\n    Given two positive integers\
    \ a and b, return the even digits between a\n    and b, in ascending order.\n\n\
    \    For example:\n    >>> generate_integers(2L, 8L)\n    [2L, 4L, 6L, 8L]\n \
    \   >>> generate_integers(8L, 2L)\n    [2L, 4L, 6L, 8L]\n    >>> generate_integers(10L,\
    \ 14L)\n    []\n    \n*/\nlong[] generate_integers(long a, long b) \n{\n    long[]\
    \ result;\n    if (a > b) \n    {\n        result = generate_integers(b, a);\n\
    \    }\n    else \n    {\n        result = [];\n        foreach (i; a..b+1) \n\
    \        {\n            if (i % 2 == 0) \n            {\n                result\
    \ ~= i;\n            }\n        }\n    }\n    return result;\n}\nunittest\n{\n\
    \    alias candidate = generate_integers;\n\n    assert(candidate(2L, 10L) ==\
    \ [2L, 4L, 6L, 8L]);\n    assert(candidate(10L, 2L) == [2L, 4L, 6L, 8L]);\n  \
    \  assert(candidate(132L, 2L) == [2L, 4L, 6L, 8L]);\n    assert(candidate(17L,\
    \ 89L) == []);\n}\nvoid main(){}"
  status: Exception
  stderr: 'core.exception.AssertError@/tmp/tmpjgghwjk9.d(41): unittest failure

    ----------------

    ??:? _d_unittestp [0x4283cd]

    ??:? void tmpjgghwjk9.__unittest_L37_C1() [0x427f60]

    ??:? void tmpjgghwjk9.__modtest() [0x428150]

    ??:? int core.runtime.runModuleUnitTests().__foreachbody2(object.ModuleInfo*)
    [0x42cda3]

    ??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)).__lambda2(immutable(object.ModuleInfo*))
    [0x42bc36]

    ??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))).__foreachbody2(ref
    rt.sections_elf_shared.DSO) [0x430689]

    ??:? int rt.sections_elf_shared.DSO.opApply(scope int delegate(ref rt.sections_elf_shared.DSO))
    [0x430b38]

    ??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*)))
    [0x430615]

    ??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)) [0x42bc0d]

    ??:? runModuleUnitTests [0x42cb79]

    ??:? void rt.dmain2._d_run_main(int, char**, extern (C) int function(char[][])*).runAll()
    [0x42881c]

    ??:? void rt.dmain2._d_r'
  stdout: ''
  timestamp: 1660163090
- exit_code: 1
  program: "import std.typecons;\nimport std.math;\n/*\n\n    Given two positive integers\
    \ a and b, return the even digits between a\n    and b, in ascending order.\n\n\
    \    For example:\n    >>> generate_integers(2L, 8L)\n    [2L, 4L, 6L, 8L]\n \
    \   >>> generate_integers(8L, 2L)\n    [2L, 4L, 6L, 8L]\n    >>> generate_integers(10L,\
    \ 14L)\n    []\n    \n*/\nlong[] generate_integers(long a, long b) \n{\n    long[]\
    \ result;\n    if (a > b)\n    {\n        result = generate_integers(b, a);\n\
    \    }\n    else\n    {\n        result = [];\n        foreach (i; a..b)\n   \
    \     {\n            if (i % 2 == 0)\n            {\n                result ~=\
    \ i;\n            }\n        }\n    }\n    return result;\n}\nunittest\n{\n  \
    \  alias candidate = generate_integers;\n\n    assert(candidate(2L, 10L) == [2L,\
    \ 4L, 6L, 8L]);\n    assert(candidate(10L, 2L) == [2L, 4L, 6L, 8L]);\n    assert(candidate(132L,\
    \ 2L) == [2L, 4L, 6L, 8L]);\n    assert(candidate(17L, 89L) == []);\n}\nvoid main(){}"
  status: Exception
  stderr: 'core.exception.AssertError@/tmp/tmp9jqzgceq.d(43): unittest failure

    ----------------

    ??:? _d_unittestp [0x4283cd]

    ??:? void tmp9jqzgceq.__unittest_L37_C1() [0x42804c]

    ??:? void tmp9jqzgceq.__modtest() [0x428150]

    ??:? int core.runtime.runModuleUnitTests().__foreachbody2(object.ModuleInfo*)
    [0x42cda3]

    ??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)).__lambda2(immutable(object.ModuleInfo*))
    [0x42bc36]

    ??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))).__foreachbody2(ref
    rt.sections_elf_shared.DSO) [0x430689]

    ??:? int rt.sections_elf_shared.DSO.opApply(scope int delegate(ref rt.sections_elf_shared.DSO))
    [0x430b38]

    ??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*)))
    [0x430615]

    ??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)) [0x42bc0d]

    ??:? runModuleUnitTests [0x42cb79]

    ??:? void rt.dmain2._d_run_main(int, char**, extern (C) int function(char[][])*).runAll()
    [0x42881c]

    ??:? void rt.dmain2._d_r'
  stdout: ''
  timestamp: 1660163090
- exit_code: 1
  program: "import std.typecons;\nimport std.math;\n/*\n\n    Given two positive integers\
    \ a and b, return the even digits between a\n    and b, in ascending order.\n\n\
    \    For example:\n    >>> generate_integers(2L, 8L)\n    [2L, 4L, 6L, 8L]\n \
    \   >>> generate_integers(8L, 2L)\n    [2L, 4L, 6L, 8L]\n    >>> generate_integers(10L,\
    \ 14L)\n    []\n    \n*/\nlong[] generate_integers(long a, long b) \n{\n    long[]\
    \ result;\n    if (a > b)\n    {\n        result = generate_integers(b, a);\n\
    \    }\n    else\n    {\n        result = new long[];\n        foreach (i; a..b)\n\
    \        {\n            if (i % 2 == 0)\n            {\n                result\
    \ ~= i;\n            }\n        }\n    }\n    return result;\n}\nunittest\n{\n\
    \    alias candidate = generate_integers;\n\n    assert(candidate(2L, 10L) ==\
    \ [2L, 4L, 6L, 8L]);\n    assert(candidate(10L, 2L) == [2L, 4L, 6L, 8L]);\n  \
    \  assert(candidate(132L, 2L) == [2L, 4L, 6L, 8L]);\n    assert(candidate(17L,\
    \ 89L) == []);\n}\nvoid main(){}"
  status: SyntaxError
  stderr: '/tmp/tmp7trtofh_.d(26): Error: new can only create structs, dynamic arrays
    or class objects, not `long[]`''s

    Failed: ["dmd", "-unittest", "-v", "-o-", "/tmp/tmp7trtofh_.d", "-I/tmp"]

    '
  stdout: ''
  timestamp: 1660163090
- exit_code: 1
  program: "import std.typecons;\nimport std.math;\n/*\n\n    Given two positive integers\
    \ a and b, return the even digits between a\n    and b, in ascending order.\n\n\
    \    For example:\n    >>> generate_integers(2L, 8L)\n    [2L, 4L, 6L, 8L]\n \
    \   >>> generate_integers(8L, 2L)\n    [2L, 4L, 6L, 8L]\n    >>> generate_integers(10L,\
    \ 14L)\n    []\n    \n*/\nlong[] generate_integers(long a, long b) \n{\n    long[]\
    \ result;\n    if (a > b)\n    {\n        result = generate_integers(b, a);\n\
    \    }\n    else\n    {\n        result = [];\n        for (long i = a; i <= b;\
    \ i++)\n        {\n            if (i % 2 == 0)\n            {\n              \
    \  result ~= i;\n            }\n        }\n    }\n    return result;\n}\nunittest\n\
    {\n    alias candidate = generate_integers;\n\n    assert(candidate(2L, 10L) ==\
    \ [2L, 4L, 6L, 8L]);\n    assert(candidate(10L, 2L) == [2L, 4L, 6L, 8L]);\n  \
    \  assert(candidate(132L, 2L) == [2L, 4L, 6L, 8L]);\n    assert(candidate(17L,\
    \ 89L) == []);\n}\nvoid main(){}"
  status: Exception
  stderr: 'core.exception.AssertError@/tmp/tmp7xwr9480.d(41): unittest failure

    ----------------

    ??:? _d_unittestp [0x4283bd]

    ??:? void tmp7xwr9480.__unittest_L37_C1() [0x427f50]

    ??:? void tmp7xwr9480.__modtest() [0x428140]

    ??:? int core.runtime.runModuleUnitTests().__foreachbody2(object.ModuleInfo*)
    [0x42cd93]

    ??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)).__lambda2(immutable(object.ModuleInfo*))
    [0x42bc26]

    ??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))).__foreachbody2(ref
    rt.sections_elf_shared.DSO) [0x430679]

    ??:? int rt.sections_elf_shared.DSO.opApply(scope int delegate(ref rt.sections_elf_shared.DSO))
    [0x430b28]

    ??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*)))
    [0x430605]

    ??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)) [0x42bbfd]

    ??:? runModuleUnitTests [0x42cb69]

    ??:? void rt.dmain2._d_run_main(int, char**, extern (C) int function(char[][])*).runAll()
    [0x42880c]

    ??:? void rt.dmain2._d_r'
  stdout: ''
  timestamp: 1660163091
- exit_code: 1
  program: "import std.typecons;\nimport std.math;\n/*\n\n    Given two positive integers\
    \ a and b, return the even digits between a\n    and b, in ascending order.\n\n\
    \    For example:\n    >>> generate_integers(2L, 8L)\n    [2L, 4L, 6L, 8L]\n \
    \   >>> generate_integers(8L, 2L)\n    [2L, 4L, 6L, 8L]\n    >>> generate_integers(10L,\
    \ 14L)\n    []\n    \n*/\nlong[] generate_integers(long a, long b) \n{\n    long[]\
    \ result;\n    if (a > b)\n    {\n        result = generate_integers(b, a);\n\
    \    }\n    else\n    {\n        result = [];\n        foreach (i; a..b+1)\n \
    \       {\n            if (i % 2 == 0)\n            {\n                result\
    \ ~= i;\n            }\n        }\n    }\n    return result;\n}\nunittest\n{\n\
    \    alias candidate = generate_integers;\n\n    assert(candidate(2L, 10L) ==\
    \ [2L, 4L, 6L, 8L]);\n    assert(candidate(10L, 2L) == [2L, 4L, 6L, 8L]);\n  \
    \  assert(candidate(132L, 2L) == [2L, 4L, 6L, 8L]);\n    assert(candidate(17L,\
    \ 89L) == []);\n}\nvoid main(){}"
  status: Exception
  stderr: 'core.exception.AssertError@/tmp/tmph7b7qda4.d(41): unittest failure

    ----------------

    ??:? _d_unittestp [0x4283cd]

    ??:? void tmph7b7qda4.__unittest_L37_C1() [0x427f60]

    ??:? void tmph7b7qda4.__modtest() [0x428150]

    ??:? int core.runtime.runModuleUnitTests().__foreachbody2(object.ModuleInfo*)
    [0x42cda3]

    ??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)).__lambda2(immutable(object.ModuleInfo*))
    [0x42bc36]

    ??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))).__foreachbody2(ref
    rt.sections_elf_shared.DSO) [0x430689]

    ??:? int rt.sections_elf_shared.DSO.opApply(scope int delegate(ref rt.sections_elf_shared.DSO))
    [0x430b38]

    ??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*)))
    [0x430615]

    ??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)) [0x42bc0d]

    ??:? runModuleUnitTests [0x42cb79]

    ??:? void rt.dmain2._d_run_main(int, char**, extern (C) int function(char[][])*).runAll()
    [0x42881c]

    ??:? void rt.dmain2._d_r'
  stdout: ''
  timestamp: 1660163090
- exit_code: 1
  program: "import std.typecons;\nimport std.math;\n/*\n\n    Given two positive integers\
    \ a and b, return the even digits between a\n    and b, in ascending order.\n\n\
    \    For example:\n    >>> generate_integers(2L, 8L)\n    [2L, 4L, 6L, 8L]\n \
    \   >>> generate_integers(8L, 2L)\n    [2L, 4L, 6L, 8L]\n    >>> generate_integers(10L,\
    \ 14L)\n    []\n    \n*/\nlong[] generate_integers(long a, long b) \n{\n    long[]\
    \ result;\n    if (a > b)\n    {\n        result = generate_integers(b, a);\n\
    \    }\n    else\n    {\n        result = new long[(int)((b - a) / 2) + 1];\n\
    \        for (int i = 0; i < result.length; i++)\n        {\n            result[i]\
    \ = a + i * 2;\n        }\n    }\n    return result;\n}\nunittest\n{\n    alias\
    \ candidate = generate_integers;\n\n    assert(candidate(2L, 10L) == [2L, 4L,\
    \ 6L, 8L]);\n    assert(candidate(10L, 2L) == [2L, 4L, 6L, 8L]);\n    assert(candidate(132L,\
    \ 2L) == [2L, 4L, 6L, 8L]);\n    assert(candidate(17L, 89L) == []);\n}\nvoid main(){}"
  status: SyntaxError
  stderr: '/tmp/tmpsr0wm3s6.d(26): Error: C style cast illegal, use `cast(int)((b
    - a) / 2)`

    Failed: ["dmd", "-unittest", "-v", "-o-", "/tmp/tmpsr0wm3s6.d", "-I/tmp"]

    '
  stdout: ''
  timestamp: 1660163091
- exit_code: 1
  program: "import std.typecons;\nimport std.math;\n/*\n\n    Given two positive integers\
    \ a and b, return the even digits between a\n    and b, in ascending order.\n\n\
    \    For example:\n    >>> generate_integers(2L, 8L)\n    [2L, 4L, 6L, 8L]\n \
    \   >>> generate_integers(8L, 2L)\n    [2L, 4L, 6L, 8L]\n    >>> generate_integers(10L,\
    \ 14L)\n    []\n    \n*/\nlong[] generate_integers(long a, long b) \n{\n    long[]\
    \ result;\n    if (a > b)\n    {\n        result = generate_integers(b, a);\n\
    \    }\n    else\n    {\n        result = [];\n        foreach (i; a..b)\n   \
    \     {\n            if (i % 2 == 0)\n            {\n                result ~=\
    \ i;\n            }\n        }\n    }\n    return result;\n}\nunittest\n{\n  \
    \  alias candidate = generate_integers;\n\n    assert(candidate(2L, 10L) == [2L,\
    \ 4L, 6L, 8L]);\n    assert(candidate(10L, 2L) == [2L, 4L, 6L, 8L]);\n    assert(candidate(132L,\
    \ 2L) == [2L, 4L, 6L, 8L]);\n    assert(candidate(17L, 89L) == []);\n}\nvoid main(){}"
  status: Exception
  stderr: 'core.exception.AssertError@/tmp/tmp9jqzgceq.d(43): unittest failure

    ----------------

    ??:? _d_unittestp [0x4283cd]

    ??:? void tmp9jqzgceq.__unittest_L37_C1() [0x42804c]

    ??:? void tmp9jqzgceq.__modtest() [0x428150]

    ??:? int core.runtime.runModuleUnitTests().__foreachbody2(object.ModuleInfo*)
    [0x42cda3]

    ??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)).__lambda2(immutable(object.ModuleInfo*))
    [0x42bc36]

    ??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))).__foreachbody2(ref
    rt.sections_elf_shared.DSO) [0x430689]

    ??:? int rt.sections_elf_shared.DSO.opApply(scope int delegate(ref rt.sections_elf_shared.DSO))
    [0x430b38]

    ??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*)))
    [0x430615]

    ??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)) [0x42bc0d]

    ??:? runModuleUnitTests [0x42cb79]

    ??:? void rt.dmain2._d_run_main(int, char**, extern (C) int function(char[][])*).runAll()
    [0x42881c]

    ??:? void rt.dmain2._d_r'
  stdout: ''
  timestamp: 1660163090
- exit_code: 1
  program: "import std.typecons;\nimport std.math;\n/*\n\n    Given two positive integers\
    \ a and b, return the even digits between a\n    and b, in ascending order.\n\n\
    \    For example:\n    >>> generate_integers(2L, 8L)\n    [2L, 4L, 6L, 8L]\n \
    \   >>> generate_integers(8L, 2L)\n    [2L, 4L, 6L, 8L]\n    >>> generate_integers(10L,\
    \ 14L)\n    []\n    \n*/\nlong[] generate_integers(long a, long b) \n{\n    long\
    \ min = min(a, b);\n    long max = max(a, b);\n    long[] result = [];\n    foreach(i;\
    \ min..max)\n    {\n        if(i % 2 == 0)\n        {\n            result ~= i;\n\
    \        }\n    }\n    return result;\n}\nunittest\n{\n    alias candidate = generate_integers;\n\
    \n    assert(candidate(2L, 10L) == [2L, 4L, 6L, 8L]);\n    assert(candidate(10L,\
    \ 2L) == [2L, 4L, 6L, 8L]);\n    assert(candidate(132L, 2L) == [2L, 4L, 6L, 8L]);\n\
    \    assert(candidate(17L, 89L) == []);\n}\nvoid main(){}"
  status: SyntaxError
  stderr: '/tmp/tmp8bga81s9.d(19): Error: undefined identifier `min`, did you mean
    function `main`?

    /tmp/tmp8bga81s9.d(20): Error: undefined identifier `max`, did you mean function
    `fmax`?

    Failed: ["dmd", "-unittest", "-v", "-o-", "/tmp/tmp8bga81s9.d", "-I/tmp"]

    '
  stdout: ''
  timestamp: 1660163091
- exit_code: 1
  program: "import std.typecons;\nimport std.math;\n/*\n\n    Given two positive integers\
    \ a and b, return the even digits between a\n    and b, in ascending order.\n\n\
    \    For example:\n    >>> generate_integers(2L, 8L)\n    [2L, 4L, 6L, 8L]\n \
    \   >>> generate_integers(8L, 2L)\n    [2L, 4L, 6L, 8L]\n    >>> generate_integers(10L,\
    \ 14L)\n    []\n    \n*/\nlong[] generate_integers(long a, long b) \n{\n    long[]\
    \ result;\n    if (a > b)\n    {\n        long temp = a;\n        a = b;\n   \
    \     b = temp;\n    }\n    if (a % 2 != 0)\n    {\n        a++;\n    }\n    if\
    \ (b % 2 != 0)\n    {\n        b--;\n    }\n    if (a > b)\n    {\n        return\
    \ result;\n    }\n    result = new long[(b - a) / 2 + 1];\n    for (int i = 0;\
    \ i < result.length; i++)\n    {\n        result[i] = a + i * 2;\n    }\n    return\
    \ result;\n}\nunittest\n{\n    alias candidate = generate_integers;\n\n    assert(candidate(2L,\
    \ 10L) == [2L, 4L, 6L, 8L]);\n    assert(candidate(10L, 2L) == [2L, 4L, 6L, 8L]);\n\
    \    assert(candidate(132L, 2L) == [2L, 4L, 6L, 8L]);\n    assert(candidate(17L,\
    \ 89L) == []);\n}\nvoid main(){}"
  status: Exception
  stderr: 'core.exception.AssertError@/tmp/tmp4f6w0e76.d(49): unittest failure

    ----------------

    ??:? _d_unittestp [0x4283fd]

    ??:? void tmp4f6w0e76.__unittest_L45_C1() [0x427f90]

    ??:? void tmp4f6w0e76.__modtest() [0x428180]

    ??:? int core.runtime.runModuleUnitTests().__foreachbody2(object.ModuleInfo*)
    [0x42c4b7]

    ??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)).__lambda2(immutable(object.ModuleInfo*))
    [0x42b34a]

    ??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))).__foreachbody2(ref
    rt.sections_elf_shared.DSO) [0x4305d5]

    ??:? int rt.sections_elf_shared.DSO.opApply(scope int delegate(ref rt.sections_elf_shared.DSO))
    [0x430a84]

    ??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*)))
    [0x430561]

    ??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)) [0x42b321]

    ??:? runModuleUnitTests [0x42c28d]

    ??:? void rt.dmain2._d_run_main(int, char**, extern (C) int function(char[][])*).runAll()
    [0x4288c0]

    ??:? void rt.dmain2._d_r'
  stdout: ''
  timestamp: 1660163091
- exit_code: 1
  program: "import std.typecons;\nimport std.math;\n/*\n\n    Given two positive integers\
    \ a and b, return the even digits between a\n    and b, in ascending order.\n\n\
    \    For example:\n    >>> generate_integers(2L, 8L)\n    [2L, 4L, 6L, 8L]\n \
    \   >>> generate_integers(8L, 2L)\n    [2L, 4L, 6L, 8L]\n    >>> generate_integers(10L,\
    \ 14L)\n    []\n    \n*/\nlong[] generate_integers(long a, long b) \n{\n    long[]\
    \ result;\n    if (a > b)\n    {\n        result = generate_integers(b, a);\n\
    \    }\n    else\n    {\n        result = [];\n        foreach (i; a..b)\n   \
    \     {\n            if (i % 2 == 0)\n            {\n                result ~=\
    \ i;\n            }\n        }\n    }\n    return result;\n}\nunittest\n{\n  \
    \  alias candidate = generate_integers;\n\n    assert(candidate(2L, 10L) == [2L,\
    \ 4L, 6L, 8L]);\n    assert(candidate(10L, 2L) == [2L, 4L, 6L, 8L]);\n    assert(candidate(132L,\
    \ 2L) == [2L, 4L, 6L, 8L]);\n    assert(candidate(17L, 89L) == []);\n}\nvoid main(){}"
  status: Exception
  stderr: 'core.exception.AssertError@/tmp/tmp9jqzgceq.d(43): unittest failure

    ----------------

    ??:? _d_unittestp [0x4283cd]

    ??:? void tmp9jqzgceq.__unittest_L37_C1() [0x42804c]

    ??:? void tmp9jqzgceq.__modtest() [0x428150]

    ??:? int core.runtime.runModuleUnitTests().__foreachbody2(object.ModuleInfo*)
    [0x42cda3]

    ??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)).__lambda2(immutable(object.ModuleInfo*))
    [0x42bc36]

    ??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))).__foreachbody2(ref
    rt.sections_elf_shared.DSO) [0x430689]

    ??:? int rt.sections_elf_shared.DSO.opApply(scope int delegate(ref rt.sections_elf_shared.DSO))
    [0x430b38]

    ??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*)))
    [0x430615]

    ??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)) [0x42bc0d]

    ??:? runModuleUnitTests [0x42cb79]

    ??:? void rt.dmain2._d_run_main(int, char**, extern (C) int function(char[][])*).runAll()
    [0x42881c]

    ??:? void rt.dmain2._d_r'
  stdout: ''
  timestamp: 1660163090
- exit_code: 1
  program: "import std.typecons;\nimport std.math;\n/*\n\n    Given two positive integers\
    \ a and b, return the even digits between a\n    and b, in ascending order.\n\n\
    \    For example:\n    >>> generate_integers(2L, 8L)\n    [2L, 4L, 6L, 8L]\n \
    \   >>> generate_integers(8L, 2L)\n    [2L, 4L, 6L, 8L]\n    >>> generate_integers(10L,\
    \ 14L)\n    []\n    \n*/\nlong[] generate_integers(long a, long b) \n{\n    long[]\
    \ result;\n    if (a > b)\n    {\n        result = generate_integers(b, a);\n\
    \    }\n    else\n    {\n        result = [];\n        foreach (i; a..b+1)\n \
    \       {\n            if (i % 2 == 0)\n            {\n                result\
    \ ~= i;\n            }\n        }\n    }\n    return result;\n}\nunittest\n{\n\
    \    alias candidate = generate_integers;\n\n    assert(candidate(2L, 10L) ==\
    \ [2L, 4L, 6L, 8L]);\n    assert(candidate(10L, 2L) == [2L, 4L, 6L, 8L]);\n  \
    \  assert(candidate(132L, 2L) == [2L, 4L, 6L, 8L]);\n    assert(candidate(17L,\
    \ 89L) == []);\n}\nvoid main(){}"
  status: Exception
  stderr: 'core.exception.AssertError@/tmp/tmph7b7qda4.d(41): unittest failure

    ----------------

    ??:? _d_unittestp [0x4283cd]

    ??:? void tmph7b7qda4.__unittest_L37_C1() [0x427f60]

    ??:? void tmph7b7qda4.__modtest() [0x428150]

    ??:? int core.runtime.runModuleUnitTests().__foreachbody2(object.ModuleInfo*)
    [0x42cda3]

    ??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)).__lambda2(immutable(object.ModuleInfo*))
    [0x42bc36]

    ??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))).__foreachbody2(ref
    rt.sections_elf_shared.DSO) [0x430689]

    ??:? int rt.sections_elf_shared.DSO.opApply(scope int delegate(ref rt.sections_elf_shared.DSO))
    [0x430b38]

    ??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*)))
    [0x430615]

    ??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)) [0x42bc0d]

    ??:? runModuleUnitTests [0x42cb79]

    ??:? void rt.dmain2._d_run_main(int, char**, extern (C) int function(char[][])*).runAll()
    [0x42881c]

    ??:? void rt.dmain2._d_r'
  stdout: ''
  timestamp: 1660163090
- exit_code: 1
  program: "import std.typecons;\nimport std.math;\n/*\n\n    Given two positive integers\
    \ a and b, return the even digits between a\n    and b, in ascending order.\n\n\
    \    For example:\n    >>> generate_integers(2L, 8L)\n    [2L, 4L, 6L, 8L]\n \
    \   >>> generate_integers(8L, 2L)\n    [2L, 4L, 6L, 8L]\n    >>> generate_integers(10L,\
    \ 14L)\n    []\n    \n*/\nlong[] generate_integers(long a, long b) \n{\n    long[]\
    \ result;\n    if (a > b)\n    {\n        result = generate_integers(b, a);\n\
    \    }\n    else\n    {\n        result = new long[0];\n        for (long i =\
    \ a; i <= b; i++)\n        {\n            if (i % 2 == 0)\n            {\n   \
    \             result ~= i;\n            }\n        }\n    }\n    return result;\n\
    }\nunittest\n{\n    alias candidate = generate_integers;\n\n    assert(candidate(2L,\
    \ 10L) == [2L, 4L, 6L, 8L]);\n    assert(candidate(10L, 2L) == [2L, 4L, 6L, 8L]);\n\
    \    assert(candidate(132L, 2L) == [2L, 4L, 6L, 8L]);\n    assert(candidate(17L,\
    \ 89L) == []);\n}\nvoid main(){}"
  status: Exception
  stderr: 'core.exception.AssertError@/tmp/tmpo37024wm.d(41): unittest failure

    ----------------

    ??:? _d_unittestp [0x4283b5]

    ??:? void tmpo37024wm.__unittest_L37_C1() [0x427f48]

    ??:? void tmpo37024wm.__modtest() [0x428138]

    ??:? int core.runtime.runModuleUnitTests().__foreachbody2(object.ModuleInfo*)
    [0x42cde7]

    ??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)).__lambda2(immutable(object.ModuleInfo*))
    [0x42bc7a]

    ??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))).__foreachbody2(ref
    rt.sections_elf_shared.DSO) [0x4307c5]

    ??:? int rt.sections_elf_shared.DSO.opApply(scope int delegate(ref rt.sections_elf_shared.DSO))
    [0x430c74]

    ??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*)))
    [0x430751]

    ??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)) [0x42bc51]

    ??:? runModuleUnitTests [0x42cbbd]

    ??:? void rt.dmain2._d_run_main(int, char**, extern (C) int function(char[][])*).runAll()
    [0x428804]

    ??:? void rt.dmain2._d_r'
  stdout: ''
  timestamp: 1660163090
- exit_code: 1
  program: "import std.typecons;\nimport std.math;\n/*\n\n    Given two positive integers\
    \ a and b, return the even digits between a\n    and b, in ascending order.\n\n\
    \    For example:\n    >>> generate_integers(2L, 8L)\n    [2L, 4L, 6L, 8L]\n \
    \   >>> generate_integers(8L, 2L)\n    [2L, 4L, 6L, 8L]\n    >>> generate_integers(10L,\
    \ 14L)\n    []\n    \n*/\nlong[] generate_integers(long a, long b) \n{\n    long[]\
    \ result;\n    if (a > b)\n    {\n        result = generate_integers(b, a);\n\
    \    }\n    else\n    {\n        result = new long[0];\n        long i = a;\n\
    \        while (i <= b)\n        {\n            if (i % 2 == 0)\n            {\n\
    \                result ~= i;\n            }\n            i++;\n        }\n  \
    \  }\n    return result;\n}\nunittest\n{\n    alias candidate = generate_integers;\n\
    \n    assert(candidate(2L, 10L) == [2L, 4L, 6L, 8L]);\n    assert(candidate(10L,\
    \ 2L) == [2L, 4L, 6L, 8L]);\n    assert(candidate(132L, 2L) == [2L, 4L, 6L, 8L]);\n\
    \    assert(candidate(17L, 89L) == []);\n}\nvoid main(){}"
  status: Exception
  stderr: 'core.exception.AssertError@/tmp/tmp0wqyy1f1.d(43): unittest failure

    ----------------

    ??:? _d_unittestp [0x4283b5]

    ??:? void tmp0wqyy1f1.__unittest_L39_C1() [0x427f48]

    ??:? void tmp0wqyy1f1.__modtest() [0x428138]

    ??:? int core.runtime.runModuleUnitTests().__foreachbody2(object.ModuleInfo*)
    [0x42cde7]

    ??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)).__lambda2(immutable(object.ModuleInfo*))
    [0x42bc7a]

    ??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))).__foreachbody2(ref
    rt.sections_elf_shared.DSO) [0x4307c5]

    ??:? int rt.sections_elf_shared.DSO.opApply(scope int delegate(ref rt.sections_elf_shared.DSO))
    [0x430c74]

    ??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*)))
    [0x430751]

    ??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)) [0x42bc51]

    ??:? runModuleUnitTests [0x42cbbd]

    ??:? void rt.dmain2._d_run_main(int, char**, extern (C) int function(char[][])*).runAll()
    [0x428804]

    ??:? void rt.dmain2._d_r'
  stdout: ''
  timestamp: 1660163091
- exit_code: 1
  program: "import std.typecons;\nimport std.math;\n/*\n\n    Given two positive integers\
    \ a and b, return the even digits between a\n    and b, in ascending order.\n\n\
    \    For example:\n    >>> generate_integers(2L, 8L)\n    [2L, 4L, 6L, 8L]\n \
    \   >>> generate_integers(8L, 2L)\n    [2L, 4L, 6L, 8L]\n    >>> generate_integers(10L,\
    \ 14L)\n    []\n    \n*/\nlong[] generate_integers(long a, long b) \n{\n    long[]\
    \ result;\n    if (a > b)\n    {\n        result = generate_integers(b, a);\n\
    \    }\n    else\n    {\n        if (a % 2 == 0)\n        {\n            result\
    \ = new long[(b - a) / 2 + 1];\n            foreach (i, ref e; result)\n     \
    \       {\n                e = a + i * 2;\n            }\n        }\n        else\n\
    \        {\n            result = new long[(b - a - 1) / 2 + 1];\n            foreach\
    \ (i, ref e; result)\n            {\n                e = a + i * 2 + 1;\n    \
    \        }\n        }\n    }\n    return result;\n}\nunittest\n{\n    alias candidate\
    \ = generate_integers;\n\n    assert(candidate(2L, 10L) == [2L, 4L, 6L, 8L]);\n\
    \    assert(candidate(10L, 2L) == [2L, 4L, 6L, 8L]);\n    assert(candidate(132L,\
    \ 2L) == [2L, 4L, 6L, 8L]);\n    assert(candidate(17L, 89L) == []);\n}\nvoid main(){}"
  status: Exception
  stderr: 'core.exception.AssertError@/tmp/tmp9h_gffgg.d(49): unittest failure

    ----------------

    ??:? _d_unittestp [0x42842d]

    ??:? void tmp9h_gffgg.__unittest_L45_C1() [0x427fbc]

    ??:? void tmp9h_gffgg.__modtest() [0x4281ac]

    ??:? int core.runtime.runModuleUnitTests().__foreachbody2(object.ModuleInfo*)
    [0x42c473]

    ??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)).__lambda2(immutable(object.ModuleInfo*))
    [0x42b306]

    ??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))).__foreachbody2(ref
    rt.sections_elf_shared.DSO) [0x430591]

    ??:? int rt.sections_elf_shared.DSO.opApply(scope int delegate(ref rt.sections_elf_shared.DSO))
    [0x430a40]

    ??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*)))
    [0x43051d]

    ??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)) [0x42b2dd]

    ??:? runModuleUnitTests [0x42c249]

    ??:? void rt.dmain2._d_run_main(int, char**, extern (C) int function(char[][])*).runAll()
    [0x42887c]

    ??:? void rt.dmain2._d_r'
  stdout: ''
  timestamp: 1660163091
- exit_code: 1
  program: "import std.typecons;\nimport std.math;\n/*\n\n    Given two positive integers\
    \ a and b, return the even digits between a\n    and b, in ascending order.\n\n\
    \    For example:\n    >>> generate_integers(2L, 8L)\n    [2L, 4L, 6L, 8L]\n \
    \   >>> generate_integers(8L, 2L)\n    [2L, 4L, 6L, 8L]\n    >>> generate_integers(10L,\
    \ 14L)\n    []\n    \n*/\nlong[] generate_integers(long a, long b) \n{\n    auto\
    \ result = new long[];\n    if (a > b)\n    {\n        auto temp = a;\n      \
    \  a = b;\n        b = temp;\n    }\n    for (auto i = a; i <= b; i++)\n    {\n\
    \        if (i % 2 == 0)\n        {\n            result ~= i;\n        }\n   \
    \ }\n    return result;\n}\nunittest\n{\n    alias candidate = generate_integers;\n\
    \n    assert(candidate(2L, 10L) == [2L, 4L, 6L, 8L]);\n    assert(candidate(10L,\
    \ 2L) == [2L, 4L, 6L, 8L]);\n    assert(candidate(132L, 2L) == [2L, 4L, 6L, 8L]);\n\
    \    assert(candidate(17L, 89L) == []);\n}\nvoid main(){}"
  status: SyntaxError
  stderr: '/tmp/tmpuix77ejl.d(19): Error: new can only create structs, dynamic arrays
    or class objects, not `long[]`''s

    Failed: ["dmd", "-unittest", "-v", "-o-", "/tmp/tmpuix77ejl.d", "-I/tmp"]

    '
  stdout: ''
  timestamp: 1660163091
- exit_code: 1
  program: "import std.typecons;\nimport std.math;\n/*\n\n    Given two positive integers\
    \ a and b, return the even digits between a\n    and b, in ascending order.\n\n\
    \    For example:\n    >>> generate_integers(2L, 8L)\n    [2L, 4L, 6L, 8L]\n \
    \   >>> generate_integers(8L, 2L)\n    [2L, 4L, 6L, 8L]\n    >>> generate_integers(10L,\
    \ 14L)\n    []\n    \n*/\nlong[] generate_integers(long a, long b) \n{\n    long[]\
    \ result;\n    if (a > b) \n    {\n        result = generate_integers(b, a);\n\
    \    }\n    else \n    {\n        if (a % 2 == 0) \n        {\n            result\
    \ = new long[(b - a) / 2 + 1];\n        }\n        else \n        {\n        \
    \    result = new long[(b - a) / 2];\n        }\n        for (int i = 0; i < result.length;\
    \ i++) \n        {\n            result[i] = a + 2 * i;\n        }\n    }\n   \
    \ return result;\n}\n/*\n    Given a positive integer n, return the first n-digits\
    \ of the\n    Fibonacci sequence, in ascending order.\nunittest\n{\n    alias\
    \ candidate = generate_integers;\n\n    assert(candidate(2L, 10L) == [2L, 4L,\
    \ 6L, 8L]);\n    assert(candidate(10L, 2L) == [2L, 4L, 6L, 8L]);\n    assert(candidate(132L,\
    \ 2L) == [2L, 4L, 6L, 8L]);\n    assert(candidate(17L, 89L) == []);\n}\nvoid main(){}"
  status: SyntaxError
  stderr: '/tmp/tmpd8ebougq.d(41): Error: unterminated /* */ comment

    Failed: ["dmd", "-unittest", "-v", "-o-", "/tmp/tmpd8ebougq.d", "-I/tmp"]

    '
  stdout: ''
  timestamp: 1660163091
- exit_code: 1
  program: "import std.typecons;\nimport std.math;\n/*\n\n    Given two positive integers\
    \ a and b, return the even digits between a\n    and b, in ascending order.\n\n\
    \    For example:\n    >>> generate_integers(2L, 8L)\n    [2L, 4L, 6L, 8L]\n \
    \   >>> generate_integers(8L, 2L)\n    [2L, 4L, 6L, 8L]\n    >>> generate_integers(10L,\
    \ 14L)\n    []\n    \n*/\nlong[] generate_integers(long a, long b) \n{\n    long[]\
    \ result;\n    if (a > b)\n    {\n        long temp = a;\n        a = b;\n   \
    \     b = temp;\n    }\n    foreach (i; a..b)\n    {\n        if (i % 2 == 0)\n\
    \        {\n            result ~= i;\n        }\n    }\n    return result;\n}\n\
    unittest\n{\n    alias candidate = generate_integers;\n\n    assert(candidate(2L,\
    \ 10L) == [2L, 4L, 6L, 8L]);\n    assert(candidate(10L, 2L) == [2L, 4L, 6L, 8L]);\n\
    \    assert(candidate(132L, 2L) == [2L, 4L, 6L, 8L]);\n    assert(candidate(17L,\
    \ 89L) == []);\n}\nvoid main(){}"
  status: Exception
  stderr: 'core.exception.AssertError@/tmp/tmpxe7hajcb.d(41): unittest failure

    ----------------

    ??:? _d_unittestp [0x4283a5]

    ??:? void tmpxe7hajcb.__unittest_L35_C1() [0x428020]

    ??:? void tmpxe7hajcb.__modtest() [0x428124]

    ??:? int core.runtime.runModuleUnitTests().__foreachbody2(object.ModuleInfo*)
    [0x42cd7b]

    ??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)).__lambda2(immutable(object.ModuleInfo*))
    [0x42bc0e]

    ??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))).__foreachbody2(ref
    rt.sections_elf_shared.DSO) [0x430661]

    ??:? int rt.sections_elf_shared.DSO.opApply(scope int delegate(ref rt.sections_elf_shared.DSO))
    [0x430b10]

    ??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*)))
    [0x4305ed]

    ??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)) [0x42bbe5]

    ??:? runModuleUnitTests [0x42cb51]

    ??:? void rt.dmain2._d_run_main(int, char**, extern (C) int function(char[][])*).runAll()
    [0x4287f4]

    ??:? void rt.dmain2._d_r'
  stdout: ''
  timestamp: 1660163091
- exit_code: 1
  program: "import std.typecons;\nimport std.math;\n/*\n\n    Given two positive integers\
    \ a and b, return the even digits between a\n    and b, in ascending order.\n\n\
    \    For example:\n    >>> generate_integers(2L, 8L)\n    [2L, 4L, 6L, 8L]\n \
    \   >>> generate_integers(8L, 2L)\n    [2L, 4L, 6L, 8L]\n    >>> generate_integers(10L,\
    \ 14L)\n    []\n    \n*/\nlong[] generate_integers(long a, long b) \n{\n    long[]\
    \ result;\n    if (a > b)\n    {\n        result = generate_integers(b, a);\n\
    \    }\n    else\n    {\n        result = [];\n        for (long i = a; i <= b;\
    \ i++)\n        {\n            if (i % 2 == 0)\n            {\n              \
    \  result ~= i;\n            }\n        }\n    }\n    return result;\n}\nunittest\n\
    {\n    alias candidate = generate_integers;\n\n    assert(candidate(2L, 10L) ==\
    \ [2L, 4L, 6L, 8L]);\n    assert(candidate(10L, 2L) == [2L, 4L, 6L, 8L]);\n  \
    \  assert(candidate(132L, 2L) == [2L, 4L, 6L, 8L]);\n    assert(candidate(17L,\
    \ 89L) == []);\n}\nvoid main(){}"
  status: Exception
  stderr: 'core.exception.AssertError@/tmp/tmp7xwr9480.d(41): unittest failure

    ----------------

    ??:? _d_unittestp [0x4283bd]

    ??:? void tmp7xwr9480.__unittest_L37_C1() [0x427f50]

    ??:? void tmp7xwr9480.__modtest() [0x428140]

    ??:? int core.runtime.runModuleUnitTests().__foreachbody2(object.ModuleInfo*)
    [0x42cd93]

    ??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)).__lambda2(immutable(object.ModuleInfo*))
    [0x42bc26]

    ??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))).__foreachbody2(ref
    rt.sections_elf_shared.DSO) [0x430679]

    ??:? int rt.sections_elf_shared.DSO.opApply(scope int delegate(ref rt.sections_elf_shared.DSO))
    [0x430b28]

    ??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*)))
    [0x430605]

    ??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)) [0x42bbfd]

    ??:? runModuleUnitTests [0x42cb69]

    ??:? void rt.dmain2._d_run_main(int, char**, extern (C) int function(char[][])*).runAll()
    [0x42880c]

    ??:? void rt.dmain2._d_r'
  stdout: ''
  timestamp: 1660163091
- exit_code: 1
  program: "import std.typecons;\nimport std.math;\n/*\n\n    Given two positive integers\
    \ a and b, return the even digits between a\n    and b, in ascending order.\n\n\
    \    For example:\n    >>> generate_integers(2L, 8L)\n    [2L, 4L, 6L, 8L]\n \
    \   >>> generate_integers(8L, 2L)\n    [2L, 4L, 6L, 8L]\n    >>> generate_integers(10L,\
    \ 14L)\n    []\n    \n*/\nlong[] generate_integers(long a, long b) \n{\n    long[]\
    \ result;\n    if (a > b)\n    {\n        result = generate_integers(b, a);\n\
    \    }\n    else\n    {\n        if (a % 2 == 0)\n        {\n            result\
    \ = new long[(b - a) / 2 + 1];\n            for (long i = 0; i < result.length;\
    \ i++)\n            {\n                result[i] = a + i * 2;\n            }\n\
    \        }\n        else\n        {\n            result = new long[(b - a - 1)\
    \ / 2 + 1];\n            for (long i = 0; i < result.length; i++)\n          \
    \  {\n                result[i] = a + i * 2 + 1;\n            }\n        }\n \
    \   }\n    return result;\n}\nunittest\n{\n    alias candidate = generate_integers;\n\
    \n    assert(candidate(2L, 10L) == [2L, 4L, 6L, 8L]);\n    assert(candidate(10L,\
    \ 2L) == [2L, 4L, 6L, 8L]);\n    assert(candidate(132L, 2L) == [2L, 4L, 6L, 8L]);\n\
    \    assert(candidate(17L, 89L) == []);\n}\nvoid main(){}"
  status: Exception
  stderr: 'core.exception.AssertError@/tmp/tmp_179v3a9.d(49): unittest failure

    ----------------

    ??:? _d_unittestp [0x428455]

    ??:? void tmp_179v3a9.__unittest_L45_C1() [0x427fe4]

    ??:? void tmp_179v3a9.__modtest() [0x4281d4]

    ??:? int core.runtime.runModuleUnitTests().__foreachbody2(object.ModuleInfo*)
    [0x42c50f]

    ??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)).__lambda2(immutable(object.ModuleInfo*))
    [0x42b3a2]

    ??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))).__foreachbody2(ref
    rt.sections_elf_shared.DSO) [0x43062d]

    ??:? int rt.sections_elf_shared.DSO.opApply(scope int delegate(ref rt.sections_elf_shared.DSO))
    [0x430adc]

    ??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*)))
    [0x4305b9]

    ??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)) [0x42b379]

    ??:? runModuleUnitTests [0x42c2e5]

    ??:? void rt.dmain2._d_run_main(int, char**, extern (C) int function(char[][])*).runAll()
    [0x428918]

    ??:? void rt.dmain2._d_r'
  stdout: ''
  timestamp: 1660163091
- exit_code: 1
  program: "import std.typecons;\nimport std.math;\n/*\n\n    Given two positive integers\
    \ a and b, return the even digits between a\n    and b, in ascending order.\n\n\
    \    For example:\n    >>> generate_integers(2L, 8L)\n    [2L, 4L, 6L, 8L]\n \
    \   >>> generate_integers(8L, 2L)\n    [2L, 4L, 6L, 8L]\n    >>> generate_integers(10L,\
    \ 14L)\n    []\n    \n*/\nlong[] generate_integers(long a, long b) \n{\n    long[]\
    \ result;\n    if (a > b)\n    {\n        result = generate_integers(b, a);\n\
    \    }\n    else\n    {\n        result = [];\n        foreach (i; a..b+1)\n \
    \       {\n            if (i % 2 == 0)\n            {\n                result\
    \ ~= i;\n            }\n        }\n    }\n    return result;\n}\nunittest\n{\n\
    \    alias candidate = generate_integers;\n\n    assert(candidate(2L, 10L) ==\
    \ [2L, 4L, 6L, 8L]);\n    assert(candidate(10L, 2L) == [2L, 4L, 6L, 8L]);\n  \
    \  assert(candidate(132L, 2L) == [2L, 4L, 6L, 8L]);\n    assert(candidate(17L,\
    \ 89L) == []);\n}\nvoid main(){}"
  status: Exception
  stderr: 'core.exception.AssertError@/tmp/tmph7b7qda4.d(41): unittest failure

    ----------------

    ??:? _d_unittestp [0x4283cd]

    ??:? void tmph7b7qda4.__unittest_L37_C1() [0x427f60]

    ??:? void tmph7b7qda4.__modtest() [0x428150]

    ??:? int core.runtime.runModuleUnitTests().__foreachbody2(object.ModuleInfo*)
    [0x42cda3]

    ??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)).__lambda2(immutable(object.ModuleInfo*))
    [0x42bc36]

    ??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))).__foreachbody2(ref
    rt.sections_elf_shared.DSO) [0x430689]

    ??:? int rt.sections_elf_shared.DSO.opApply(scope int delegate(ref rt.sections_elf_shared.DSO))
    [0x430b38]

    ??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*)))
    [0x430615]

    ??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)) [0x42bc0d]

    ??:? runModuleUnitTests [0x42cb79]

    ??:? void rt.dmain2._d_run_main(int, char**, extern (C) int function(char[][])*).runAll()
    [0x42881c]

    ??:? void rt.dmain2._d_r'
  stdout: ''
  timestamp: 1660163090
- exit_code: 1
  program: "import std.typecons;\nimport std.math;\n/*\n\n    Given two positive integers\
    \ a and b, return the even digits between a\n    and b, in ascending order.\n\n\
    \    For example:\n    >>> generate_integers(2L, 8L)\n    [2L, 4L, 6L, 8L]\n \
    \   >>> generate_integers(8L, 2L)\n    [2L, 4L, 6L, 8L]\n    >>> generate_integers(10L,\
    \ 14L)\n    []\n    \n*/\nlong[] generate_integers(long a, long b) \n{\n    long[]\
    \ result;\n    if (a > b)\n    {\n        result = generate_integers(b, a);\n\
    \    }\n    else\n    {\n        result = new long[0];\n        for (long i =\
    \ a; i <= b; i++)\n        {\n            if (i % 2 == 0)\n            {\n   \
    \             result ~= i;\n            }\n        }\n    }\n    return result;\n\
    }\nunittest\n{\n    alias candidate = generate_integers;\n\n    assert(candidate(2L,\
    \ 10L) == [2L, 4L, 6L, 8L]);\n    assert(candidate(10L, 2L) == [2L, 4L, 6L, 8L]);\n\
    \    assert(candidate(132L, 2L) == [2L, 4L, 6L, 8L]);\n    assert(candidate(17L,\
    \ 89L) == []);\n}\nvoid main(){}"
  status: Exception
  stderr: 'core.exception.AssertError@/tmp/tmpo37024wm.d(41): unittest failure

    ----------------

    ??:? _d_unittestp [0x4283b5]

    ??:? void tmpo37024wm.__unittest_L37_C1() [0x427f48]

    ??:? void tmpo37024wm.__modtest() [0x428138]

    ??:? int core.runtime.runModuleUnitTests().__foreachbody2(object.ModuleInfo*)
    [0x42cde7]

    ??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)).__lambda2(immutable(object.ModuleInfo*))
    [0x42bc7a]

    ??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))).__foreachbody2(ref
    rt.sections_elf_shared.DSO) [0x4307c5]

    ??:? int rt.sections_elf_shared.DSO.opApply(scope int delegate(ref rt.sections_elf_shared.DSO))
    [0x430c74]

    ??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*)))
    [0x430751]

    ??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)) [0x42bc51]

    ??:? runModuleUnitTests [0x42cbbd]

    ??:? void rt.dmain2._d_run_main(int, char**, extern (C) int function(char[][])*).runAll()
    [0x428804]

    ??:? void rt.dmain2._d_r'
  stdout: ''
  timestamp: 1660163090
- exit_code: 1
  program: "import std.typecons;\nimport std.math;\n/*\n\n    Given two positive integers\
    \ a and b, return the even digits between a\n    and b, in ascending order.\n\n\
    \    For example:\n    >>> generate_integers(2L, 8L)\n    [2L, 4L, 6L, 8L]\n \
    \   >>> generate_integers(8L, 2L)\n    [2L, 4L, 6L, 8L]\n    >>> generate_integers(10L,\
    \ 14L)\n    []\n    \n*/\nlong[] generate_integers(long a, long b) \n{\n    long[]\
    \ result;\n    if (a > b)\n    {\n        result = generate_integers(b, a);\n\
    \    }\n    else\n    {\n        result = new long[0];\n        for (long i =\
    \ a; i <= b; i++)\n        {\n            if (i % 2 == 0)\n            {\n   \
    \             result ~= i;\n            }\n        }\n    }\n    return result;\n\
    }\nunittest\n{\n    alias candidate = generate_integers;\n\n    assert(candidate(2L,\
    \ 10L) == [2L, 4L, 6L, 8L]);\n    assert(candidate(10L, 2L) == [2L, 4L, 6L, 8L]);\n\
    \    assert(candidate(132L, 2L) == [2L, 4L, 6L, 8L]);\n    assert(candidate(17L,\
    \ 89L) == []);\n}\nvoid main(){}"
  status: Exception
  stderr: 'core.exception.AssertError@/tmp/tmpo37024wm.d(41): unittest failure

    ----------------

    ??:? _d_unittestp [0x4283b5]

    ??:? void tmpo37024wm.__unittest_L37_C1() [0x427f48]

    ??:? void tmpo37024wm.__modtest() [0x428138]

    ??:? int core.runtime.runModuleUnitTests().__foreachbody2(object.ModuleInfo*)
    [0x42cde7]

    ??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)).__lambda2(immutable(object.ModuleInfo*))
    [0x42bc7a]

    ??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))).__foreachbody2(ref
    rt.sections_elf_shared.DSO) [0x4307c5]

    ??:? int rt.sections_elf_shared.DSO.opApply(scope int delegate(ref rt.sections_elf_shared.DSO))
    [0x430c74]

    ??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*)))
    [0x430751]

    ??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)) [0x42bc51]

    ??:? runModuleUnitTests [0x42cbbd]

    ??:? void rt.dmain2._d_run_main(int, char**, extern (C) int function(char[][])*).runAll()
    [0x428804]

    ??:? void rt.dmain2._d_r'
  stdout: ''
  timestamp: 1660163090
- exit_code: 1
  program: "import std.typecons;\nimport std.math;\n/*\n\n    Given two positive integers\
    \ a and b, return the even digits between a\n    and b, in ascending order.\n\n\
    \    For example:\n    >>> generate_integers(2L, 8L)\n    [2L, 4L, 6L, 8L]\n \
    \   >>> generate_integers(8L, 2L)\n    [2L, 4L, 6L, 8L]\n    >>> generate_integers(10L,\
    \ 14L)\n    []\n    \n*/\nlong[] generate_integers(long a, long b) \n{\n    long[]\
    \ result;\n    if (a > b) \n    {\n        result = generate_integers(b, a);\n\
    \    }\n    else \n    {\n        result = [];\n        foreach (i; a..b) \n \
    \       {\n            if (i % 2 == 0) \n            {\n                result\
    \ ~= i;\n            }\n        }\n    }\n    return result;\n}\nunittest\n{\n\
    \    alias candidate = generate_integers;\n\n    assert(candidate(2L, 10L) ==\
    \ [2L, 4L, 6L, 8L]);\n    assert(candidate(10L, 2L) == [2L, 4L, 6L, 8L]);\n  \
    \  assert(candidate(132L, 2L) == [2L, 4L, 6L, 8L]);\n    assert(candidate(17L,\
    \ 89L) == []);\n}\nvoid main(){}"
  status: Exception
  stderr: 'core.exception.AssertError@/tmp/tmpp8ltyq6j.d(43): unittest failure

    ----------------

    ??:? _d_unittestp [0x4283cd]

    ??:? void tmpp8ltyq6j.__unittest_L37_C1() [0x42804c]

    ??:? void tmpp8ltyq6j.__modtest() [0x428150]

    ??:? int core.runtime.runModuleUnitTests().__foreachbody2(object.ModuleInfo*)
    [0x42cda3]

    ??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)).__lambda2(immutable(object.ModuleInfo*))
    [0x42bc36]

    ??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))).__foreachbody2(ref
    rt.sections_elf_shared.DSO) [0x430689]

    ??:? int rt.sections_elf_shared.DSO.opApply(scope int delegate(ref rt.sections_elf_shared.DSO))
    [0x430b38]

    ??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*)))
    [0x430615]

    ??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)) [0x42bc0d]

    ??:? runModuleUnitTests [0x42cb79]

    ??:? void rt.dmain2._d_run_main(int, char**, extern (C) int function(char[][])*).runAll()
    [0x42881c]

    ??:? void rt.dmain2._d_r'
  stdout: ''
  timestamp: 1660163090
- exit_code: 1
  program: "import std.typecons;\nimport std.math;\n/*\n\n    Given two positive integers\
    \ a and b, return the even digits between a\n    and b, in ascending order.\n\n\
    \    For example:\n    >>> generate_integers(2L, 8L)\n    [2L, 4L, 6L, 8L]\n \
    \   >>> generate_integers(8L, 2L)\n    [2L, 4L, 6L, 8L]\n    >>> generate_integers(10L,\
    \ 14L)\n    []\n    \n*/\nlong[] generate_integers(long a, long b) \n{\n    long[]\
    \ result;\n    if (a > b) \n    {\n        result = generate_integers(b, a);\n\
    \    }\n    else \n    {\n        result = [];\n        foreach (i; a..b+1) \n\
    \        {\n            if (i % 2 == 0) \n            {\n                result\
    \ ~= i;\n            }\n        }\n    }\n    return result;\n}\nunittest\n{\n\
    \    alias candidate = generate_integers;\n\n    assert(candidate(2L, 10L) ==\
    \ [2L, 4L, 6L, 8L]);\n    assert(candidate(10L, 2L) == [2L, 4L, 6L, 8L]);\n  \
    \  assert(candidate(132L, 2L) == [2L, 4L, 6L, 8L]);\n    assert(candidate(17L,\
    \ 89L) == []);\n}\nvoid main(){}"
  status: Exception
  stderr: 'core.exception.AssertError@/tmp/tmpjgghwjk9.d(41): unittest failure

    ----------------

    ??:? _d_unittestp [0x4283cd]

    ??:? void tmpjgghwjk9.__unittest_L37_C1() [0x427f60]

    ??:? void tmpjgghwjk9.__modtest() [0x428150]

    ??:? int core.runtime.runModuleUnitTests().__foreachbody2(object.ModuleInfo*)
    [0x42cda3]

    ??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)).__lambda2(immutable(object.ModuleInfo*))
    [0x42bc36]

    ??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))).__foreachbody2(ref
    rt.sections_elf_shared.DSO) [0x430689]

    ??:? int rt.sections_elf_shared.DSO.opApply(scope int delegate(ref rt.sections_elf_shared.DSO))
    [0x430b38]

    ??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*)))
    [0x430615]

    ??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)) [0x42bc0d]

    ??:? runModuleUnitTests [0x42cb79]

    ??:? void rt.dmain2._d_run_main(int, char**, extern (C) int function(char[][])*).runAll()
    [0x42881c]

    ??:? void rt.dmain2._d_r'
  stdout: ''
  timestamp: 1660163090
- exit_code: 1
  program: "import std.typecons;\nimport std.math;\n/*\n\n    Given two positive integers\
    \ a and b, return the even digits between a\n    and b, in ascending order.\n\n\
    \    For example:\n    >>> generate_integers(2L, 8L)\n    [2L, 4L, 6L, 8L]\n \
    \   >>> generate_integers(8L, 2L)\n    [2L, 4L, 6L, 8L]\n    >>> generate_integers(10L,\
    \ 14L)\n    []\n    \n*/\nlong[] generate_integers(long a, long b) \n{\n    long[]\
    \ result;\n    if (a > b)\n    {\n        result = generate_integers(b, a);\n\
    \    }\n    else\n    {\n        result = new long[0];\n        if (a % 2 == 0)\n\
    \        {\n            result ~= a;\n        }\n        if (b % 2 == 0)\n   \
    \     {\n            result ~= b;\n        }\n        long c = a + 1;\n      \
    \  while (c < b)\n        {\n            if (c % 2 == 0)\n            {\n    \
    \            result ~= c;\n            }\n            c += 1;\n        }\n   \
    \ }\n    return result;\n}\nunittest\n{\n    alias candidate = generate_integers;\n\
    \n    assert(candidate(2L, 10L) == [2L, 4L, 6L, 8L]);\n    assert(candidate(10L,\
    \ 2L) == [2L, 4L, 6L, 8L]);\n    assert(candidate(132L, 2L) == [2L, 4L, 6L, 8L]);\n\
    \    assert(candidate(17L, 89L) == []);\n}\nvoid main(){}"
  status: Exception
  stderr: 'core.exception.AssertError@/tmp/tmppbzq5fot.d(51): unittest failure

    ----------------

    ??:? _d_unittestp [0x428445]

    ??:? void tmppbzq5fot.__unittest_L47_C1() [0x427fd4]

    ??:? void tmppbzq5fot.__modtest() [0x4281c4]

    ??:? int core.runtime.runModuleUnitTests().__foreachbody2(object.ModuleInfo*)
    [0x42ce77]

    ??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)).__lambda2(immutable(object.ModuleInfo*))
    [0x42bd0a]

    ??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))).__foreachbody2(ref
    rt.sections_elf_shared.DSO) [0x430855]

    ??:? int rt.sections_elf_shared.DSO.opApply(scope int delegate(ref rt.sections_elf_shared.DSO))
    [0x430d04]

    ??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*)))
    [0x4307e1]

    ??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)) [0x42bce1]

    ??:? runModuleUnitTests [0x42cc4d]

    ??:? void rt.dmain2._d_run_main(int, char**, extern (C) int function(char[][])*).runAll()
    [0x428894]

    ??:? void rt.dmain2._d_r'
  stdout: ''
  timestamp: 1660163091
- exit_code: 1
  program: "import std.typecons;\nimport std.math;\n/*\n\n    Given two positive integers\
    \ a and b, return the even digits between a\n    and b, in ascending order.\n\n\
    \    For example:\n    >>> generate_integers(2L, 8L)\n    [2L, 4L, 6L, 8L]\n \
    \   >>> generate_integers(8L, 2L)\n    [2L, 4L, 6L, 8L]\n    >>> generate_integers(10L,\
    \ 14L)\n    []\n    \n*/\nlong[] generate_integers(long a, long b) \n{\n    long[]\
    \ result;\n    if (a > b) \n    {\n        result = generate_integers(b, a);\n\
    \    }\n    else \n    {\n        result = new long[];\n        for (long i =\
    \ a; i <= b; i++) \n        {\n            if (i % 2 == 0) \n            {\n \
    \               result ~= i;\n            }\n        }\n    }\n    return result;\n\
    }\nunittest\n{\n    alias candidate = generate_integers;\n\n    assert(candidate(2L,\
    \ 10L) == [2L, 4L, 6L, 8L]);\n    assert(candidate(10L, 2L) == [2L, 4L, 6L, 8L]);\n\
    \    assert(candidate(132L, 2L) == [2L, 4L, 6L, 8L]);\n    assert(candidate(17L,\
    \ 89L) == []);\n}\nvoid main(){}"
  status: SyntaxError
  stderr: '/tmp/tmp8pdd583o.d(26): Error: new can only create structs, dynamic arrays
    or class objects, not `long[]`''s

    Failed: ["dmd", "-unittest", "-v", "-o-", "/tmp/tmp8pdd583o.d", "-I/tmp"]

    '
  stdout: ''
  timestamp: 1660163091
- exit_code: 1
  program: "import std.typecons;\nimport std.math;\n/*\n\n    Given two positive integers\
    \ a and b, return the even digits between a\n    and b, in ascending order.\n\n\
    \    For example:\n    >>> generate_integers(2L, 8L)\n    [2L, 4L, 6L, 8L]\n \
    \   >>> generate_integers(8L, 2L)\n    [2L, 4L, 6L, 8L]\n    >>> generate_integers(10L,\
    \ 14L)\n    []\n    \n*/\nlong[] generate_integers(long a, long b) \n{\n    long[]\
    \ result;\n    if (a > b)\n    {\n        result = generate_integers(b, a);\n\
    \    }\n    else\n    {\n        result = new long[];\n        foreach (i; a..b+1)\n\
    \        {\n            if (i % 2 == 0)\n            {\n                result\
    \ ~= i;\n            }\n        }\n    }\n    return result;\n}\nunittest\n{\n\
    \    alias candidate = generate_integers;\n\n    assert(candidate(2L, 10L) ==\
    \ [2L, 4L, 6L, 8L]);\n    assert(candidate(10L, 2L) == [2L, 4L, 6L, 8L]);\n  \
    \  assert(candidate(132L, 2L) == [2L, 4L, 6L, 8L]);\n    assert(candidate(17L,\
    \ 89L) == []);\n}\nvoid main(){}"
  status: SyntaxError
  stderr: '/tmp/tmpgb5373zm.d(26): Error: new can only create structs, dynamic arrays
    or class objects, not `long[]`''s

    Failed: ["dmd", "-unittest", "-v", "-o-", "/tmp/tmpgb5373zm.d", "-I/tmp"]

    '
  stdout: ''
  timestamp: 1660163090
- exit_code: 1
  program: "import std.typecons;\nimport std.math;\n/*\n\n    Given two positive integers\
    \ a and b, return the even digits between a\n    and b, in ascending order.\n\n\
    \    For example:\n    >>> generate_integers(2L, 8L)\n    [2L, 4L, 6L, 8L]\n \
    \   >>> generate_integers(8L, 2L)\n    [2L, 4L, 6L, 8L]\n    >>> generate_integers(10L,\
    \ 14L)\n    []\n    \n*/\nlong[] generate_integers(long a, long b) \n{\n    long[]\
    \ result;\n    if (a > b)\n    {\n        result = generate_integers(b, a);\n\
    \    }\n    else\n    {\n        if (a % 2 == 0)\n        {\n            result\
    \ = new long[(b - a) / 2 + 1];\n            for (int i = 0; i < result.length;\
    \ i++)\n            {\n                result[i] = a + i * 2;\n            }\n\
    \        }\n        else\n        {\n            result = new long[(b - a) / 2];\n\
    \            for (int i = 0; i < result.length; i++)\n            {\n        \
    \        result[i] = a + i * 2 + 1;\n            }\n        }\n    }\n    return\
    \ result;\n}\nunittest\n{\n    alias candidate = generate_integers;\n\n    assert(candidate(2L,\
    \ 10L) == [2L, 4L, 6L, 8L]);\n    assert(candidate(10L, 2L) == [2L, 4L, 6L, 8L]);\n\
    \    assert(candidate(132L, 2L) == [2L, 4L, 6L, 8L]);\n    assert(candidate(17L,\
    \ 89L) == []);\n}\nvoid main(){}"
  status: Exception
  stderr: 'core.exception.AssertError@/tmp/tmpl8pnt19b.d(49): unittest failure

    ----------------

    ??:? _d_unittestp [0x42844d]

    ??:? void tmpl8pnt19b.__unittest_L45_C1() [0x427fdc]

    ??:? void tmpl8pnt19b.__modtest() [0x4281cc]

    ??:? int core.runtime.runModuleUnitTests().__foreachbody2(object.ModuleInfo*)
    [0x42c507]

    ??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)).__lambda2(immutable(object.ModuleInfo*))
    [0x42b39a]

    ??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))).__foreachbody2(ref
    rt.sections_elf_shared.DSO) [0x430625]

    ??:? int rt.sections_elf_shared.DSO.opApply(scope int delegate(ref rt.sections_elf_shared.DSO))
    [0x430ad4]

    ??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*)))
    [0x4305b1]

    ??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)) [0x42b371]

    ??:? runModuleUnitTests [0x42c2dd]

    ??:? void rt.dmain2._d_run_main(int, char**, extern (C) int function(char[][])*).runAll()
    [0x428910]

    ??:? void rt.dmain2._d_r'
  stdout: ''
  timestamp: 1660163090
- exit_code: 1
  program: "import std.typecons;\nimport std.math;\n/*\n\n    Given two positive integers\
    \ a and b, return the even digits between a\n    and b, in ascending order.\n\n\
    \    For example:\n    >>> generate_integers(2L, 8L)\n    [2L, 4L, 6L, 8L]\n \
    \   >>> generate_integers(8L, 2L)\n    [2L, 4L, 6L, 8L]\n    >>> generate_integers(10L,\
    \ 14L)\n    []\n    \n*/\nlong[] generate_integers(long a, long b) \n{\n    long[]\
    \ result;\n    if (a > b)\n    {\n        long temp = a;\n        a = b;\n   \
    \     b = temp;\n    }\n    if (a % 2 != 0)\n    {\n        a++;\n    }\n    if\
    \ (b % 2 != 0)\n    {\n        b--;\n    }\n    if (a > b)\n    {\n        return\
    \ result;\n    }\n    result = new long[(b - a) / 2 + 1];\n    foreach (i, ref\
    \ e; result)\n    {\n        e = a + i * 2;\n    }\n    return result;\n}\nunittest\n\
    {\n    alias candidate = generate_integers;\n\n    assert(candidate(2L, 10L) ==\
    \ [2L, 4L, 6L, 8L]);\n    assert(candidate(10L, 2L) == [2L, 4L, 6L, 8L]);\n  \
    \  assert(candidate(132L, 2L) == [2L, 4L, 6L, 8L]);\n    assert(candidate(17L,\
    \ 89L) == []);\n}\nvoid main(){}"
  status: Exception
  stderr: 'core.exception.AssertError@/tmp/tmp1lqzpd6u.d(49): unittest failure

    ----------------

    ??:? _d_unittestp [0x4283ed]

    ??:? void tmp1lqzpd6u.__unittest_L45_C1() [0x427f80]

    ??:? void tmp1lqzpd6u.__modtest() [0x428170]

    ??:? int core.runtime.runModuleUnitTests().__foreachbody2(object.ModuleInfo*)
    [0x42c433]

    ??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)).__lambda2(immutable(object.ModuleInfo*))
    [0x42b2c6]

    ??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))).__foreachbody2(ref
    rt.sections_elf_shared.DSO) [0x430551]

    ??:? int rt.sections_elf_shared.DSO.opApply(scope int delegate(ref rt.sections_elf_shared.DSO))
    [0x430a00]

    ??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*)))
    [0x4304dd]

    ??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)) [0x42b29d]

    ??:? runModuleUnitTests [0x42c209]

    ??:? void rt.dmain2._d_run_main(int, char**, extern (C) int function(char[][])*).runAll()
    [0x42883c]

    ??:? void rt.dmain2._d_r'
  stdout: ''
  timestamp: 1660163091
- exit_code: 1
  program: "import std.typecons;\nimport std.math;\n/*\n\n    Given two positive integers\
    \ a and b, return the even digits between a\n    and b, in ascending order.\n\n\
    \    For example:\n    >>> generate_integers(2L, 8L)\n    [2L, 4L, 6L, 8L]\n \
    \   >>> generate_integers(8L, 2L)\n    [2L, 4L, 6L, 8L]\n    >>> generate_integers(10L,\
    \ 14L)\n    []\n    \n*/\nlong[] generate_integers(long a, long b) \n{\n    long[]\
    \ result;\n    if (a > b) \n    {\n        result = generate_integers(b, a);\n\
    \    } \n    else \n    {\n        result = new long[];\n        foreach (i; a..b)\
    \ \n        {\n            if (i % 2 == 0) \n            {\n                result\
    \ ~= i;\n            }\n        }\n    }\n    return result;\n}\nunittest\n{\n\
    \    alias candidate = generate_integers;\n\n    assert(candidate(2L, 10L) ==\
    \ [2L, 4L, 6L, 8L]);\n    assert(candidate(10L, 2L) == [2L, 4L, 6L, 8L]);\n  \
    \  assert(candidate(132L, 2L) == [2L, 4L, 6L, 8L]);\n    assert(candidate(17L,\
    \ 89L) == []);\n}\nvoid main(){}"
  status: SyntaxError
  stderr: '/tmp/tmpb12r8p_o.d(26): Error: new can only create structs, dynamic arrays
    or class objects, not `long[]`''s

    Failed: ["dmd", "-unittest", "-v", "-o-", "/tmp/tmpb12r8p_o.d", "-I/tmp"]

    '
  stdout: ''
  timestamp: 1660163091
- exit_code: 1
  program: "import std.typecons;\nimport std.math;\n/*\n\n    Given two positive integers\
    \ a and b, return the even digits between a\n    and b, in ascending order.\n\n\
    \    For example:\n    >>> generate_integers(2L, 8L)\n    [2L, 4L, 6L, 8L]\n \
    \   >>> generate_integers(8L, 2L)\n    [2L, 4L, 6L, 8L]\n    >>> generate_integers(10L,\
    \ 14L)\n    []\n    \n*/\nlong[] generate_integers(long a, long b) \n{\n    long[]\
    \ result;\n    if (a > b)\n    {\n        result = generate_integers(b, a);\n\
    \    }\n    else\n    {\n        result = new long[];\n        if (a % 2 == 0)\n\
    \        {\n            result ~= a;\n        }\n        else\n        {\n   \
    \         a++;\n        }\n        for (; a <= b; a += 2)\n        {\n       \
    \     result ~= a;\n        }\n    }\n    return result;\n}\nunittest\n{\n   \
    \ alias candidate = generate_integers;\n\n    assert(candidate(2L, 10L) == [2L,\
    \ 4L, 6L, 8L]);\n    assert(candidate(10L, 2L) == [2L, 4L, 6L, 8L]);\n    assert(candidate(132L,\
    \ 2L) == [2L, 4L, 6L, 8L]);\n    assert(candidate(17L, 89L) == []);\n}\nvoid main(){}"
  status: SyntaxError
  stderr: '/tmp/tmpfqac_19o.d(26): Error: new can only create structs, dynamic arrays
    or class objects, not `long[]`''s

    Failed: ["dmd", "-unittest", "-v", "-o-", "/tmp/tmpfqac_19o.d", "-I/tmp"]

    '
  stdout: ''
  timestamp: 1660163091
- exit_code: 1
  program: "import std.typecons;\nimport std.math;\n/*\n\n    Given two positive integers\
    \ a and b, return the even digits between a\n    and b, in ascending order.\n\n\
    \    For example:\n    >>> generate_integers(2L, 8L)\n    [2L, 4L, 6L, 8L]\n \
    \   >>> generate_integers(8L, 2L)\n    [2L, 4L, 6L, 8L]\n    >>> generate_integers(10L,\
    \ 14L)\n    []\n    \n*/\nlong[] generate_integers(long a, long b) \n{\n    long[]\
    \ result;\n    if (a > b) {\n        result = generate_integers(b, a);\n    }\
    \ else {\n        result = [];\n        foreach (i; a..b+1) {\n            if\
    \ (i % 2 == 0) {\n                result ~= i;\n            }\n        }\n   \
    \ }\n    return result;\n}\nunittest\n{\n    alias candidate = generate_integers;\n\
    \n    assert(candidate(2L, 10L) == [2L, 4L, 6L, 8L]);\n    assert(candidate(10L,\
    \ 2L) == [2L, 4L, 6L, 8L]);\n    assert(candidate(132L, 2L) == [2L, 4L, 6L, 8L]);\n\
    \    assert(candidate(17L, 89L) == []);\n}\nvoid main(){}"
  status: Exception
  stderr: 'core.exception.AssertError@/tmp/tmp7z45cntn.d(36): unittest failure

    ----------------

    ??:? _d_unittestp [0x4283cd]

    ??:? void tmp7z45cntn.__unittest_L32_C1() [0x427f60]

    ??:? void tmp7z45cntn.__modtest() [0x428150]

    ??:? int core.runtime.runModuleUnitTests().__foreachbody2(object.ModuleInfo*)
    [0x42cda3]

    ??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)).__lambda2(immutable(object.ModuleInfo*))
    [0x42bc36]

    ??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))).__foreachbody2(ref
    rt.sections_elf_shared.DSO) [0x430689]

    ??:? int rt.sections_elf_shared.DSO.opApply(scope int delegate(ref rt.sections_elf_shared.DSO))
    [0x430b38]

    ??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*)))
    [0x430615]

    ??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)) [0x42bc0d]

    ??:? runModuleUnitTests [0x42cb79]

    ??:? void rt.dmain2._d_run_main(int, char**, extern (C) int function(char[][])*).runAll()
    [0x42881c]

    ??:? void rt.dmain2._d_r'
  stdout: ''
  timestamp: 1660163091
- exit_code: 1
  program: "import std.typecons;\nimport std.math;\n/*\n\n    Given two positive integers\
    \ a and b, return the even digits between a\n    and b, in ascending order.\n\n\
    \    For example:\n    >>> generate_integers(2L, 8L)\n    [2L, 4L, 6L, 8L]\n \
    \   >>> generate_integers(8L, 2L)\n    [2L, 4L, 6L, 8L]\n    >>> generate_integers(10L,\
    \ 14L)\n    []\n    \n*/\nlong[] generate_integers(long a, long b) \n{\n    long[]\
    \ result;\n    if (a > b)\n    {\n        result = generate_integers(b, a);\n\
    \    }\n    else\n    {\n        result = new long[0];\n        for (long i =\
    \ a; i <= b; i++)\n        {\n            if (i % 2 == 0)\n            {\n   \
    \             result ~= i;\n            }\n        }\n    }\n    return result;\n\
    }\nunittest\n{\n    alias candidate = generate_integers;\n\n    assert(candidate(2L,\
    \ 10L) == [2L, 4L, 6L, 8L]);\n    assert(candidate(10L, 2L) == [2L, 4L, 6L, 8L]);\n\
    \    assert(candidate(132L, 2L) == [2L, 4L, 6L, 8L]);\n    assert(candidate(17L,\
    \ 89L) == []);\n}\nvoid main(){}"
  status: Exception
  stderr: 'core.exception.AssertError@/tmp/tmpo37024wm.d(41): unittest failure

    ----------------

    ??:? _d_unittestp [0x4283b5]

    ??:? void tmpo37024wm.__unittest_L37_C1() [0x427f48]

    ??:? void tmpo37024wm.__modtest() [0x428138]

    ??:? int core.runtime.runModuleUnitTests().__foreachbody2(object.ModuleInfo*)
    [0x42cde7]

    ??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)).__lambda2(immutable(object.ModuleInfo*))
    [0x42bc7a]

    ??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))).__foreachbody2(ref
    rt.sections_elf_shared.DSO) [0x4307c5]

    ??:? int rt.sections_elf_shared.DSO.opApply(scope int delegate(ref rt.sections_elf_shared.DSO))
    [0x430c74]

    ??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*)))
    [0x430751]

    ??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)) [0x42bc51]

    ??:? runModuleUnitTests [0x42cbbd]

    ??:? void rt.dmain2._d_run_main(int, char**, extern (C) int function(char[][])*).runAll()
    [0x428804]

    ??:? void rt.dmain2._d_r'
  stdout: ''
  timestamp: 1660163090
- exit_code: 1
  program: "import std.typecons;\nimport std.math;\n/*\n\n    Given two positive integers\
    \ a and b, return the even digits between a\n    and b, in ascending order.\n\n\
    \    For example:\n    >>> generate_integers(2L, 8L)\n    [2L, 4L, 6L, 8L]\n \
    \   >>> generate_integers(8L, 2L)\n    [2L, 4L, 6L, 8L]\n    >>> generate_integers(10L,\
    \ 14L)\n    []\n    \n*/\nlong[] generate_integers(long a, long b) \n{\n    long[]\
    \ result;\n    if (a > b) {\n        result = generate_integers(b, a);\n    }\
    \ else {\n        result = new long[0];\n        for (long i = a; i <= b; i++)\
    \ {\n            if (i % 2 == 0) {\n                result ~= i;\n           \
    \ }\n        }\n    }\n    return result;\n}\nunittest\n{\n    alias candidate\
    \ = generate_integers;\n\n    assert(candidate(2L, 10L) == [2L, 4L, 6L, 8L]);\n\
    \    assert(candidate(10L, 2L) == [2L, 4L, 6L, 8L]);\n    assert(candidate(132L,\
    \ 2L) == [2L, 4L, 6L, 8L]);\n    assert(candidate(17L, 89L) == []);\n}\nvoid main(){}"
  status: Exception
  stderr: 'core.exception.AssertError@/tmp/tmpu_qqr3vh.d(36): unittest failure

    ----------------

    ??:? _d_unittestp [0x4283b5]

    ??:? void tmpu_qqr3vh.__unittest_L32_C1() [0x427f48]

    ??:? void tmpu_qqr3vh.__modtest() [0x428138]

    ??:? int core.runtime.runModuleUnitTests().__foreachbody2(object.ModuleInfo*)
    [0x42cde7]

    ??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)).__lambda2(immutable(object.ModuleInfo*))
    [0x42bc7a]

    ??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))).__foreachbody2(ref
    rt.sections_elf_shared.DSO) [0x4307c5]

    ??:? int rt.sections_elf_shared.DSO.opApply(scope int delegate(ref rt.sections_elf_shared.DSO))
    [0x430c74]

    ??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*)))
    [0x430751]

    ??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)) [0x42bc51]

    ??:? runModuleUnitTests [0x42cbbd]

    ??:? void rt.dmain2._d_run_main(int, char**, extern (C) int function(char[][])*).runAll()
    [0x428804]

    ??:? void rt.dmain2._d_r'
  stdout: ''
  timestamp: 1660163091
- exit_code: 1
  program: "import std.typecons;\nimport std.math;\n/*\n\n    Given two positive integers\
    \ a and b, return the even digits between a\n    and b, in ascending order.\n\n\
    \    For example:\n    >>> generate_integers(2L, 8L)\n    [2L, 4L, 6L, 8L]\n \
    \   >>> generate_integers(8L, 2L)\n    [2L, 4L, 6L, 8L]\n    >>> generate_integers(10L,\
    \ 14L)\n    []\n    \n*/\nlong[] generate_integers(long a, long b) \n{\n    long[]\
    \ result;\n    if (a > b)\n    {\n        result = generate_integers(b, a);\n\
    \    }\n    else\n    {\n        result = [];\n        foreach (i; a..b+1)\n \
    \       {\n            if (i % 2 == 0)\n            {\n                result\
    \ ~= i;\n            }\n        }\n    }\n    return result;\n}\nunittest\n{\n\
    \    alias candidate = generate_integers;\n\n    assert(candidate(2L, 10L) ==\
    \ [2L, 4L, 6L, 8L]);\n    assert(candidate(10L, 2L) == [2L, 4L, 6L, 8L]);\n  \
    \  assert(candidate(132L, 2L) == [2L, 4L, 6L, 8L]);\n    assert(candidate(17L,\
    \ 89L) == []);\n}\nvoid main(){}"
  status: Exception
  stderr: 'core.exception.AssertError@/tmp/tmph7b7qda4.d(41): unittest failure

    ----------------

    ??:? _d_unittestp [0x4283cd]

    ??:? void tmph7b7qda4.__unittest_L37_C1() [0x427f60]

    ??:? void tmph7b7qda4.__modtest() [0x428150]

    ??:? int core.runtime.runModuleUnitTests().__foreachbody2(object.ModuleInfo*)
    [0x42cda3]

    ??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)).__lambda2(immutable(object.ModuleInfo*))
    [0x42bc36]

    ??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))).__foreachbody2(ref
    rt.sections_elf_shared.DSO) [0x430689]

    ??:? int rt.sections_elf_shared.DSO.opApply(scope int delegate(ref rt.sections_elf_shared.DSO))
    [0x430b38]

    ??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*)))
    [0x430615]

    ??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)) [0x42bc0d]

    ??:? runModuleUnitTests [0x42cb79]

    ??:? void rt.dmain2._d_run_main(int, char**, extern (C) int function(char[][])*).runAll()
    [0x42881c]

    ??:? void rt.dmain2._d_r'
  stdout: ''
  timestamp: 1660163090
- exit_code: 1
  program: "import std.typecons;\nimport std.math;\n/*\n\n    Given two positive integers\
    \ a and b, return the even digits between a\n    and b, in ascending order.\n\n\
    \    For example:\n    >>> generate_integers(2L, 8L)\n    [2L, 4L, 6L, 8L]\n \
    \   >>> generate_integers(8L, 2L)\n    [2L, 4L, 6L, 8L]\n    >>> generate_integers(10L,\
    \ 14L)\n    []\n    \n*/\nlong[] generate_integers(long a, long b) \n{\n    long[]\
    \ result;\n    if (a > b) \n    {\n        result = generate_integers(b, a);\n\
    \    } \n    else \n    {\n        if (a % 2 == 0) \n        {\n            result\
    \ = generate_integers(a, b, a);\n        } \n        else \n        {\n      \
    \      result = generate_integers(a + 1, b, a + 1);\n        }\n    }\n    return\
    \ result;\n}\nlong[] generate_integers(long a, long b, long first) \n{\n    long[]\
    \ result;\n    if (a > b) \n    {\n        result = new long[0];\n    } \n   \
    \ else \n    {\n        if (a % 2 == 0) \n        {\n            result = generate_integers(a\
    \ + 2, b, first);\n            result ~= a;\n        } \n        else \n     \
    \   {\n            result = generate_integers(a + 1, b, first);\n        }\n \
    \   }\n    return result;\n}\n/*\n    Given a positive integer n, return the prime\
    \ factors of n, in ascending\n    order.\nunittest\n{\n    alias candidate = generate_integers;\n\
    \n    assert(candidate(2L, 10L) == [2L, 4L, 6L, 8L]);\n    assert(candidate(10L,\
    \ 2L) == [2L, 4L, 6L, 8L]);\n    assert(candidate(132L, 2L) == [2L, 4L, 6L, 8L]);\n\
    \    assert(candidate(17L, 89L) == []);\n}\nvoid main(){}"
  status: SyntaxError
  stderr: '/tmp/tmp52dbx2mm.d(58): Error: unterminated /* */ comment

    Failed: ["dmd", "-unittest", "-v", "-o-", "/tmp/tmp52dbx2mm.d", "-I/tmp"]

    '
  stdout: ''
  timestamp: 1660163091
- exit_code: 1
  program: "import std.typecons;\nimport std.math;\n/*\n\n    Given two positive integers\
    \ a and b, return the even digits between a\n    and b, in ascending order.\n\n\
    \    For example:\n    >>> generate_integers(2L, 8L)\n    [2L, 4L, 6L, 8L]\n \
    \   >>> generate_integers(8L, 2L)\n    [2L, 4L, 6L, 8L]\n    >>> generate_integers(10L,\
    \ 14L)\n    []\n    \n*/\nlong[] generate_integers(long a, long b) \n{\n    long[]\
    \ result;\n    if (a > b)\n    {\n        result = generate_integers(b, a);\n\
    \    }\n    else\n    {\n        result = new long[0];\n        for (long i =\
    \ a; i <= b; i++)\n        {\n            if (i % 2 == 0)\n            {\n   \
    \             result ~= i;\n            }\n        }\n    }\n    return result;\n\
    }\nunittest\n{\n    alias candidate = generate_integers;\n\n    assert(candidate(2L,\
    \ 10L) == [2L, 4L, 6L, 8L]);\n    assert(candidate(10L, 2L) == [2L, 4L, 6L, 8L]);\n\
    \    assert(candidate(132L, 2L) == [2L, 4L, 6L, 8L]);\n    assert(candidate(17L,\
    \ 89L) == []);\n}\nvoid main(){}"
  status: Exception
  stderr: 'core.exception.AssertError@/tmp/tmpo37024wm.d(41): unittest failure

    ----------------

    ??:? _d_unittestp [0x4283b5]

    ??:? void tmpo37024wm.__unittest_L37_C1() [0x427f48]

    ??:? void tmpo37024wm.__modtest() [0x428138]

    ??:? int core.runtime.runModuleUnitTests().__foreachbody2(object.ModuleInfo*)
    [0x42cde7]

    ??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)).__lambda2(immutable(object.ModuleInfo*))
    [0x42bc7a]

    ??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))).__foreachbody2(ref
    rt.sections_elf_shared.DSO) [0x4307c5]

    ??:? int rt.sections_elf_shared.DSO.opApply(scope int delegate(ref rt.sections_elf_shared.DSO))
    [0x430c74]

    ??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*)))
    [0x430751]

    ??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)) [0x42bc51]

    ??:? runModuleUnitTests [0x42cbbd]

    ??:? void rt.dmain2._d_run_main(int, char**, extern (C) int function(char[][])*).runAll()
    [0x428804]

    ??:? void rt.dmain2._d_r'
  stdout: ''
  timestamp: 1660163090
- exit_code: 1
  program: "import std.typecons;\nimport std.math;\n/*\n\n    Given two positive integers\
    \ a and b, return the even digits between a\n    and b, in ascending order.\n\n\
    \    For example:\n    >>> generate_integers(2L, 8L)\n    [2L, 4L, 6L, 8L]\n \
    \   >>> generate_integers(8L, 2L)\n    [2L, 4L, 6L, 8L]\n    >>> generate_integers(10L,\
    \ 14L)\n    []\n    \n*/\nlong[] generate_integers(long a, long b) \n{\n    if\
    \ (a > b)\n    {\n        long temp = a;\n        a = b;\n        b = temp;\n\
    \    }\n    long[] result = new long[0];\n    for (long i = a; i <= b; i++)\n\
    \    {\n        if (i % 2 == 0)\n        {\n            result ~= i;\n       \
    \ }\n    }\n    return result;\n}\nunittest\n{\n    alias candidate = generate_integers;\n\
    \n    assert(candidate(2L, 10L) == [2L, 4L, 6L, 8L]);\n    assert(candidate(10L,\
    \ 2L) == [2L, 4L, 6L, 8L]);\n    assert(candidate(132L, 2L) == [2L, 4L, 6L, 8L]);\n\
    \    assert(candidate(17L, 89L) == []);\n}\nvoid main(){}"
  status: Exception
  stderr: 'core.exception.AssertError@/tmp/tmpfl7hkiwp.d(39): unittest failure

    ----------------

    ??:? _d_unittestp [0x428395]

    ??:? void tmpfl7hkiwp.__unittest_L35_C1() [0x427f28]

    ??:? void tmpfl7hkiwp.__modtest() [0x428118]

    ??:? int core.runtime.runModuleUnitTests().__foreachbody2(object.ModuleInfo*)
    [0x42cdc7]

    ??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)).__lambda2(immutable(object.ModuleInfo*))
    [0x42bc5a]

    ??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))).__foreachbody2(ref
    rt.sections_elf_shared.DSO) [0x4307a5]

    ??:? int rt.sections_elf_shared.DSO.opApply(scope int delegate(ref rt.sections_elf_shared.DSO))
    [0x430c54]

    ??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*)))
    [0x430731]

    ??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)) [0x42bc31]

    ??:? runModuleUnitTests [0x42cb9d]

    ??:? void rt.dmain2._d_run_main(int, char**, extern (C) int function(char[][])*).runAll()
    [0x4287e4]

    ??:? void rt.dmain2._d_r'
  stdout: ''
  timestamp: 1660163091
- exit_code: 1
  program: "import std.typecons;\nimport std.math;\n/*\n\n    Given two positive integers\
    \ a and b, return the even digits between a\n    and b, in ascending order.\n\n\
    \    For example:\n    >>> generate_integers(2L, 8L)\n    [2L, 4L, 6L, 8L]\n \
    \   >>> generate_integers(8L, 2L)\n    [2L, 4L, 6L, 8L]\n    >>> generate_integers(10L,\
    \ 14L)\n    []\n    \n*/\nlong[] generate_integers(long a, long b) \n{\n    long[]\
    \ result;\n    if (a > b)\n    {\n        result = generate_integers(b, a);\n\
    \    }\n    else\n    {\n        result = new long[0];\n        if (a % 2 == 0)\n\
    \        {\n            result ~= a;\n        }\n        if (b % 2 == 0)\n   \
    \     {\n            result ~= b;\n        }\n        long c = (a + b) / 2;\n\
    \        if (c % 2 == 0)\n        {\n            result ~= generate_integers(a,\
    \ c);\n            result ~= generate_integers(c, b);\n        }\n    }\n    return\
    \ result;\n}\nunittest\n{\n    alias candidate = generate_integers;\n\n    assert(candidate(2L,\
    \ 10L) == [2L, 4L, 6L, 8L]);\n    assert(candidate(10L, 2L) == [2L, 4L, 6L, 8L]);\n\
    \    assert(candidate(132L, 2L) == [2L, 4L, 6L, 8L]);\n    assert(candidate(17L,\
    \ 89L) == []);\n}\nvoid main(){}"
  status: Exception
  stderr: 'core.exception.AssertError@/tmp/tmpnn0d1gq8.d(48): unittest failure

    ----------------

    ??:? _d_unittestp [0x428455]

    ??:? void tmpnn0d1gq8.__unittest_L44_C1() [0x427fe4]

    ??:? void tmpnn0d1gq8.__modtest() [0x4281d4]

    ??:? int core.runtime.runModuleUnitTests().__foreachbody2(object.ModuleInfo*)
    [0x42cf37]

    ??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)).__lambda2(immutable(object.ModuleInfo*))
    [0x42bdca]

    ??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))).__foreachbody2(ref
    rt.sections_elf_shared.DSO) [0x430865]

    ??:? int rt.sections_elf_shared.DSO.opApply(scope int delegate(ref rt.sections_elf_shared.DSO))
    [0x430d14]

    ??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*)))
    [0x4307f1]

    ??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)) [0x42bda1]

    ??:? runModuleUnitTests [0x42cd0d]

    ??:? void rt.dmain2._d_run_main(int, char**, extern (C) int function(char[][])*).runAll()
    [0x4288a4]

    ??:? void rt.dmain2._d_r'
  stdout: ''
  timestamp: 1660163091
- exit_code: 1
  program: "import std.typecons;\nimport std.math;\n/*\n\n    Given two positive integers\
    \ a and b, return the even digits between a\n    and b, in ascending order.\n\n\
    \    For example:\n    >>> generate_integers(2L, 8L)\n    [2L, 4L, 6L, 8L]\n \
    \   >>> generate_integers(8L, 2L)\n    [2L, 4L, 6L, 8L]\n    >>> generate_integers(10L,\
    \ 14L)\n    []\n    \n*/\nlong[] generate_integers(long a, long b) \n{\n    long[]\
    \ result;\n    if (a > b)\n    {\n        result = generate_integers(b, a);\n\
    \    }\n    else\n    {\n        result = new long[];\n        foreach (i; a..b)\n\
    \        {\n            if (i % 2 == 0)\n            {\n                result\
    \ ~= i;\n            }\n        }\n    }\n    return result;\n}\nunittest\n{\n\
    \    alias candidate = generate_integers;\n\n    assert(candidate(2L, 10L) ==\
    \ [2L, 4L, 6L, 8L]);\n    assert(candidate(10L, 2L) == [2L, 4L, 6L, 8L]);\n  \
    \  assert(candidate(132L, 2L) == [2L, 4L, 6L, 8L]);\n    assert(candidate(17L,\
    \ 89L) == []);\n}\nvoid main(){}"
  status: SyntaxError
  stderr: '/tmp/tmp7trtofh_.d(26): Error: new can only create structs, dynamic arrays
    or class objects, not `long[]`''s

    Failed: ["dmd", "-unittest", "-v", "-o-", "/tmp/tmp7trtofh_.d", "-I/tmp"]

    '
  stdout: ''
  timestamp: 1660163090
- exit_code: 1
  program: "import std.typecons;\nimport std.math;\n/*\n\n    Given two positive integers\
    \ a and b, return the even digits between a\n    and b, in ascending order.\n\n\
    \    For example:\n    >>> generate_integers(2L, 8L)\n    [2L, 4L, 6L, 8L]\n \
    \   >>> generate_integers(8L, 2L)\n    [2L, 4L, 6L, 8L]\n    >>> generate_integers(10L,\
    \ 14L)\n    []\n    \n*/\nlong[] generate_integers(long a, long b) \n{\n    long[]\
    \ result;\n    if (a > b)\n    {\n        result = generate_integers(b, a);\n\
    \    }\n    else\n    {\n        if (a % 2 == 0)\n        {\n            result\
    \ = new long[(b - a) / 2 + 1];\n            for (long i = 0; i < result.length;\
    \ i++)\n            {\n                result[i] = a + i * 2;\n            }\n\
    \        }\n        else\n        {\n            result = new long[(b - a - 1)\
    \ / 2 + 1];\n            for (long i = 0; i < result.length; i++)\n          \
    \  {\n                result[i] = a + i * 2 + 1;\n            }\n        }\n \
    \   }\n    return result;\n}\nunittest\n{\n    alias candidate = generate_integers;\n\
    \n    assert(candidate(2L, 10L) == [2L, 4L, 6L, 8L]);\n    assert(candidate(10L,\
    \ 2L) == [2L, 4L, 6L, 8L]);\n    assert(candidate(132L, 2L) == [2L, 4L, 6L, 8L]);\n\
    \    assert(candidate(17L, 89L) == []);\n}\nvoid main(){}"
  status: Exception
  stderr: 'core.exception.AssertError@/tmp/tmp_179v3a9.d(49): unittest failure

    ----------------

    ??:? _d_unittestp [0x428455]

    ??:? void tmp_179v3a9.__unittest_L45_C1() [0x427fe4]

    ??:? void tmp_179v3a9.__modtest() [0x4281d4]

    ??:? int core.runtime.runModuleUnitTests().__foreachbody2(object.ModuleInfo*)
    [0x42c50f]

    ??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)).__lambda2(immutable(object.ModuleInfo*))
    [0x42b3a2]

    ??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))).__foreachbody2(ref
    rt.sections_elf_shared.DSO) [0x43062d]

    ??:? int rt.sections_elf_shared.DSO.opApply(scope int delegate(ref rt.sections_elf_shared.DSO))
    [0x430adc]

    ??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*)))
    [0x4305b9]

    ??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)) [0x42b379]

    ??:? runModuleUnitTests [0x42c2e5]

    ??:? void rt.dmain2._d_run_main(int, char**, extern (C) int function(char[][])*).runAll()
    [0x428918]

    ??:? void rt.dmain2._d_r'
  stdout: ''
  timestamp: 1660163091
- exit_code: 1
  program: "import std.typecons;\nimport std.math;\n/*\n\n    Given two positive integers\
    \ a and b, return the even digits between a\n    and b, in ascending order.\n\n\
    \    For example:\n    >>> generate_integers(2L, 8L)\n    [2L, 4L, 6L, 8L]\n \
    \   >>> generate_integers(8L, 2L)\n    [2L, 4L, 6L, 8L]\n    >>> generate_integers(10L,\
    \ 14L)\n    []\n    \n*/\nlong[] generate_integers(long a, long b) \n{\n    long[]\
    \ result;\n    if (a > b) \n    {\n        result = generate_integers(b, a);\n\
    \    }\n    else if (a % 2 == 0) \n    {\n        result = generate_integers(a,\
    \ b, 2L);\n    }\n    else \n    {\n        result = generate_integers(a + 1L,\
    \ b, 2L);\n    }\n    return result;\n}\nunittest\n{\n    alias candidate = generate_integers;\n\
    \n    assert(candidate(2L, 10L) == [2L, 4L, 6L, 8L]);\n    assert(candidate(10L,\
    \ 2L) == [2L, 4L, 6L, 8L]);\n    assert(candidate(132L, 2L) == [2L, 4L, 6L, 8L]);\n\
    \    assert(candidate(17L, 89L) == []);\n}\nvoid main(){}"
  status: SyntaxError
  stderr: '/tmp/tmpe7n5_mnl.d(26): Error: function `tmpe7n5_mnl.generate_integers(long
    a, long b)` is not callable using argument types `(long, long, long)`

    /tmp/tmpe7n5_mnl.d(30): Error: function `tmpe7n5_mnl.generate_integers(long a,
    long b)` is not callable using argument types `(long, long, long)`

    Failed: ["dmd", "-unittest", "-v", "-o-", "/tmp/tmpe7n5_mnl.d", "-I/tmp"]

    '
  stdout: ''
  timestamp: 1660163091
- exit_code: 1
  program: "import std.typecons;\nimport std.math;\n/*\n\n    Given two positive integers\
    \ a and b, return the even digits between a\n    and b, in ascending order.\n\n\
    \    For example:\n    >>> generate_integers(2L, 8L)\n    [2L, 4L, 6L, 8L]\n \
    \   >>> generate_integers(8L, 2L)\n    [2L, 4L, 6L, 8L]\n    >>> generate_integers(10L,\
    \ 14L)\n    []\n    \n*/\nlong[] generate_integers(long a, long b) \n{\n    long[]\
    \ result;\n    if (a > b)\n    {\n        result = generate_integers(b, a);\n\
    \    }\n    else\n    {\n        result = new long[0];\n        for (long i =\
    \ a; i <= b; i++)\n        {\n            if (i % 2 == 0)\n            {\n   \
    \             result ~= i;\n            }\n        }\n    }\n    return result;\n\
    }\nunittest\n{\n    alias candidate = generate_integers;\n\n    assert(candidate(2L,\
    \ 10L) == [2L, 4L, 6L, 8L]);\n    assert(candidate(10L, 2L) == [2L, 4L, 6L, 8L]);\n\
    \    assert(candidate(132L, 2L) == [2L, 4L, 6L, 8L]);\n    assert(candidate(17L,\
    \ 89L) == []);\n}\nvoid main(){}"
  status: Exception
  stderr: 'core.exception.AssertError@/tmp/tmpo37024wm.d(41): unittest failure

    ----------------

    ??:? _d_unittestp [0x4283b5]

    ??:? void tmpo37024wm.__unittest_L37_C1() [0x427f48]

    ??:? void tmpo37024wm.__modtest() [0x428138]

    ??:? int core.runtime.runModuleUnitTests().__foreachbody2(object.ModuleInfo*)
    [0x42cde7]

    ??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)).__lambda2(immutable(object.ModuleInfo*))
    [0x42bc7a]

    ??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))).__foreachbody2(ref
    rt.sections_elf_shared.DSO) [0x4307c5]

    ??:? int rt.sections_elf_shared.DSO.opApply(scope int delegate(ref rt.sections_elf_shared.DSO))
    [0x430c74]

    ??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*)))
    [0x430751]

    ??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)) [0x42bc51]

    ??:? runModuleUnitTests [0x42cbbd]

    ??:? void rt.dmain2._d_run_main(int, char**, extern (C) int function(char[][])*).runAll()
    [0x428804]

    ??:? void rt.dmain2._d_r'
  stdout: ''
  timestamp: 1660163090
- exit_code: 1
  program: "import std.typecons;\nimport std.math;\n/*\n\n    Given two positive integers\
    \ a and b, return the even digits between a\n    and b, in ascending order.\n\n\
    \    For example:\n    >>> generate_integers(2L, 8L)\n    [2L, 4L, 6L, 8L]\n \
    \   >>> generate_integers(8L, 2L)\n    [2L, 4L, 6L, 8L]\n    >>> generate_integers(10L,\
    \ 14L)\n    []\n    \n*/\nlong[] generate_integers(long a, long b) \n{\n    long[]\
    \ result;\n    if (a > b)\n    {\n        result = generate_integers(b, a);\n\
    \    }\n    else\n    {\n        result = new long[0];\n        for (long i =\
    \ a; i <= b; i++)\n        {\n            if (i % 2 == 0)\n            {\n   \
    \             result ~= i;\n            }\n        }\n    }\n    return result;\n\
    }\nunittest\n{\n    alias candidate = generate_integers;\n\n    assert(candidate(2L,\
    \ 10L) == [2L, 4L, 6L, 8L]);\n    assert(candidate(10L, 2L) == [2L, 4L, 6L, 8L]);\n\
    \    assert(candidate(132L, 2L) == [2L, 4L, 6L, 8L]);\n    assert(candidate(17L,\
    \ 89L) == []);\n}\nvoid main(){}"
  status: Exception
  stderr: 'core.exception.AssertError@/tmp/tmpo37024wm.d(41): unittest failure

    ----------------

    ??:? _d_unittestp [0x4283b5]

    ??:? void tmpo37024wm.__unittest_L37_C1() [0x427f48]

    ??:? void tmpo37024wm.__modtest() [0x428138]

    ??:? int core.runtime.runModuleUnitTests().__foreachbody2(object.ModuleInfo*)
    [0x42cde7]

    ??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)).__lambda2(immutable(object.ModuleInfo*))
    [0x42bc7a]

    ??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))).__foreachbody2(ref
    rt.sections_elf_shared.DSO) [0x4307c5]

    ??:? int rt.sections_elf_shared.DSO.opApply(scope int delegate(ref rt.sections_elf_shared.DSO))
    [0x430c74]

    ??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*)))
    [0x430751]

    ??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)) [0x42bc51]

    ??:? runModuleUnitTests [0x42cbbd]

    ??:? void rt.dmain2._d_run_main(int, char**, extern (C) int function(char[][])*).runAll()
    [0x428804]

    ??:? void rt.dmain2._d_r'
  stdout: ''
  timestamp: 1660163090
- exit_code: 1
  program: "import std.typecons;\nimport std.math;\n/*\n\n    Given two positive integers\
    \ a and b, return the even digits between a\n    and b, in ascending order.\n\n\
    \    For example:\n    >>> generate_integers(2L, 8L)\n    [2L, 4L, 6L, 8L]\n \
    \   >>> generate_integers(8L, 2L)\n    [2L, 4L, 6L, 8L]\n    >>> generate_integers(10L,\
    \ 14L)\n    []\n    \n*/\nlong[] generate_integers(long a, long b) \n{\n    long[]\
    \ result;\n    if (a > b)\n    {\n        result = generate_integers(b, a);\n\
    \    }\n    else\n    {\n        result = new long[0];\n        for (long i =\
    \ a; i <= b; i++)\n        {\n            if (i % 2 == 0)\n            {\n   \
    \             result ~= i;\n            }\n        }\n    }\n    return result;\n\
    }\nunittest\n{\n    alias candidate = generate_integers;\n\n    assert(candidate(2L,\
    \ 10L) == [2L, 4L, 6L, 8L]);\n    assert(candidate(10L, 2L) == [2L, 4L, 6L, 8L]);\n\
    \    assert(candidate(132L, 2L) == [2L, 4L, 6L, 8L]);\n    assert(candidate(17L,\
    \ 89L) == []);\n}\nvoid main(){}"
  status: Exception
  stderr: 'core.exception.AssertError@/tmp/tmpo37024wm.d(41): unittest failure

    ----------------

    ??:? _d_unittestp [0x4283b5]

    ??:? void tmpo37024wm.__unittest_L37_C1() [0x427f48]

    ??:? void tmpo37024wm.__modtest() [0x428138]

    ??:? int core.runtime.runModuleUnitTests().__foreachbody2(object.ModuleInfo*)
    [0x42cde7]

    ??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)).__lambda2(immutable(object.ModuleInfo*))
    [0x42bc7a]

    ??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))).__foreachbody2(ref
    rt.sections_elf_shared.DSO) [0x4307c5]

    ??:? int rt.sections_elf_shared.DSO.opApply(scope int delegate(ref rt.sections_elf_shared.DSO))
    [0x430c74]

    ??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*)))
    [0x430751]

    ??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)) [0x42bc51]

    ??:? runModuleUnitTests [0x42cbbd]

    ??:? void rt.dmain2._d_run_main(int, char**, extern (C) int function(char[][])*).runAll()
    [0x428804]

    ??:? void rt.dmain2._d_r'
  stdout: ''
  timestamp: 1660163090
- exit_code: 1
  program: "import std.typecons;\nimport std.math;\n/*\n\n    Given two positive integers\
    \ a and b, return the even digits between a\n    and b, in ascending order.\n\n\
    \    For example:\n    >>> generate_integers(2L, 8L)\n    [2L, 4L, 6L, 8L]\n \
    \   >>> generate_integers(8L, 2L)\n    [2L, 4L, 6L, 8L]\n    >>> generate_integers(10L,\
    \ 14L)\n    []\n    \n*/\nlong[] generate_integers(long a, long b) \n{\n    long[]\
    \ result;\n    long min = min(a, b);\n    long max = max(a, b);\n    foreach(i;\
    \ min..max)\n    {\n        if(i % 2 == 0)\n        {\n            result ~= i;\n\
    \        }\n    }\n    return result;\n}\nunittest\n{\n    alias candidate = generate_integers;\n\
    \n    assert(candidate(2L, 10L) == [2L, 4L, 6L, 8L]);\n    assert(candidate(10L,\
    \ 2L) == [2L, 4L, 6L, 8L]);\n    assert(candidate(132L, 2L) == [2L, 4L, 6L, 8L]);\n\
    \    assert(candidate(17L, 89L) == []);\n}\nvoid main(){}"
  status: SyntaxError
  stderr: '/tmp/tmp5nmq7xgv.d(20): Error: undefined identifier `min`, did you mean
    function `main`?

    /tmp/tmp5nmq7xgv.d(21): Error: undefined identifier `max`, did you mean function
    `fmax`?

    Failed: ["dmd", "-unittest", "-v", "-o-", "/tmp/tmp5nmq7xgv.d", "-I/tmp"]

    '
  stdout: ''
  timestamp: 1660163091
- exit_code: 1
  program: "import std.typecons;\nimport std.math;\n/*\n\n    Given two positive integers\
    \ a and b, return the even digits between a\n    and b, in ascending order.\n\n\
    \    For example:\n    >>> generate_integers(2L, 8L)\n    [2L, 4L, 6L, 8L]\n \
    \   >>> generate_integers(8L, 2L)\n    [2L, 4L, 6L, 8L]\n    >>> generate_integers(10L,\
    \ 14L)\n    []\n    \n*/\nlong[] generate_integers(long a, long b) \n{\n    long[]\
    \ result;\n    if (a > b)\n    {\n        result = generate_integers(b, a);\n\
    \    }\n    else\n    {\n        result = new long[];\n        for (long i = a;\
    \ i <= b; i++)\n        {\n            if (i % 2 == 0)\n            {\n      \
    \          result ~= i;\n            }\n        }\n    }\n    return result;\n\
    }\nunittest\n{\n    alias candidate = generate_integers;\n\n    assert(candidate(2L,\
    \ 10L) == [2L, 4L, 6L, 8L]);\n    assert(candidate(10L, 2L) == [2L, 4L, 6L, 8L]);\n\
    \    assert(candidate(132L, 2L) == [2L, 4L, 6L, 8L]);\n    assert(candidate(17L,\
    \ 89L) == []);\n}\nvoid main(){}"
  status: SyntaxError
  stderr: '/tmp/tmp8qqrm9l7.d(26): Error: new can only create structs, dynamic arrays
    or class objects, not `long[]`''s

    Failed: ["dmd", "-unittest", "-v", "-o-", "/tmp/tmp8qqrm9l7.d", "-I/tmp"]

    '
  stdout: ''
  timestamp: 1660163091
- exit_code: 1
  program: "import std.typecons;\nimport std.math;\n/*\n\n    Given two positive integers\
    \ a and b, return the even digits between a\n    and b, in ascending order.\n\n\
    \    For example:\n    >>> generate_integers(2L, 8L)\n    [2L, 4L, 6L, 8L]\n \
    \   >>> generate_integers(8L, 2L)\n    [2L, 4L, 6L, 8L]\n    >>> generate_integers(10L,\
    \ 14L)\n    []\n    \n*/\nlong[] generate_integers(long a, long b) \n{\n    long[]\
    \ result;\n    if (a > b)\n    {\n        result = generate_integers(b, a);\n\
    \    }\n    else\n    {\n        result = [];\n        foreach (i; a..b+1)\n \
    \       {\n            if (i % 2 == 0)\n            {\n                result\
    \ ~= i;\n            }\n        }\n    }\n    return result;\n}\nunittest\n{\n\
    \    alias candidate = generate_integers;\n\n    assert(candidate(2L, 10L) ==\
    \ [2L, 4L, 6L, 8L]);\n    assert(candidate(10L, 2L) == [2L, 4L, 6L, 8L]);\n  \
    \  assert(candidate(132L, 2L) == [2L, 4L, 6L, 8L]);\n    assert(candidate(17L,\
    \ 89L) == []);\n}\nvoid main(){}"
  status: Exception
  stderr: 'core.exception.AssertError@/tmp/tmph7b7qda4.d(41): unittest failure

    ----------------

    ??:? _d_unittestp [0x4283cd]

    ??:? void tmph7b7qda4.__unittest_L37_C1() [0x427f60]

    ??:? void tmph7b7qda4.__modtest() [0x428150]

    ??:? int core.runtime.runModuleUnitTests().__foreachbody2(object.ModuleInfo*)
    [0x42cda3]

    ??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)).__lambda2(immutable(object.ModuleInfo*))
    [0x42bc36]

    ??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))).__foreachbody2(ref
    rt.sections_elf_shared.DSO) [0x430689]

    ??:? int rt.sections_elf_shared.DSO.opApply(scope int delegate(ref rt.sections_elf_shared.DSO))
    [0x430b38]

    ??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*)))
    [0x430615]

    ??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)) [0x42bc0d]

    ??:? runModuleUnitTests [0x42cb79]

    ??:? void rt.dmain2._d_run_main(int, char**, extern (C) int function(char[][])*).runAll()
    [0x42881c]

    ??:? void rt.dmain2._d_r'
  stdout: ''
  timestamp: 1660163090
- exit_code: 1
  program: "import std.typecons;\nimport std.math;\n/*\n\n    Given two positive integers\
    \ a and b, return the even digits between a\n    and b, in ascending order.\n\n\
    \    For example:\n    >>> generate_integers(2L, 8L)\n    [2L, 4L, 6L, 8L]\n \
    \   >>> generate_integers(8L, 2L)\n    [2L, 4L, 6L, 8L]\n    >>> generate_integers(10L,\
    \ 14L)\n    []\n    \n*/\nlong[] generate_integers(long a, long b) \n{\n    long[]\
    \ result;\n    if (a > b) \n    {\n        result = generate_integers(b, a);\n\
    \    }\n    else \n    {\n        if (a % 2 == 0) \n        {\n            result\
    \ = generate_integers(a + 1, b);\n            result = result.insert(0, a);\n\
    \        }\n        else \n        {\n            result = generate_integers(a\
    \ + 1, b);\n        }\n    }\n    return result;\n}\nunittest\n{\n    alias candidate\
    \ = generate_integers;\n\n    assert(candidate(2L, 10L) == [2L, 4L, 6L, 8L]);\n\
    \    assert(candidate(10L, 2L) == [2L, 4L, 6L, 8L]);\n    assert(candidate(132L,\
    \ 2L) == [2L, 4L, 6L, 8L]);\n    assert(candidate(17L, 89L) == []);\n}\nvoid main(){}"
  status: SyntaxError
  stderr: '/tmp/tmpac8gbpfa.d(29): Error: no property `insert` for type `long[]`

    Failed: ["dmd", "-unittest", "-v", "-o-", "/tmp/tmpac8gbpfa.d", "-I/tmp"]

    '
  stdout: ''
  timestamp: 1660163091
- exit_code: 1
  program: "import std.typecons;\nimport std.math;\n/*\n\n    Given two positive integers\
    \ a and b, return the even digits between a\n    and b, in ascending order.\n\n\
    \    For example:\n    >>> generate_integers(2L, 8L)\n    [2L, 4L, 6L, 8L]\n \
    \   >>> generate_integers(8L, 2L)\n    [2L, 4L, 6L, 8L]\n    >>> generate_integers(10L,\
    \ 14L)\n    []\n    \n*/\nlong[] generate_integers(long a, long b) \n{\n    long[]\
    \ result;\n    if (a > b)\n    {\n        result = generate_integers(b, a);\n\
    \    }\n    else\n    {\n        result = [];\n        foreach (i; a..b)\n   \
    \     {\n            if (i % 2 == 0)\n            {\n                result ~=\
    \ i;\n            }\n        }\n    }\n    return result;\n}\nunittest\n{\n  \
    \  alias candidate = generate_integers;\n\n    assert(candidate(2L, 10L) == [2L,\
    \ 4L, 6L, 8L]);\n    assert(candidate(10L, 2L) == [2L, 4L, 6L, 8L]);\n    assert(candidate(132L,\
    \ 2L) == [2L, 4L, 6L, 8L]);\n    assert(candidate(17L, 89L) == []);\n}\nvoid main(){}"
  status: Exception
  stderr: 'core.exception.AssertError@/tmp/tmp9jqzgceq.d(43): unittest failure

    ----------------

    ??:? _d_unittestp [0x4283cd]

    ??:? void tmp9jqzgceq.__unittest_L37_C1() [0x42804c]

    ??:? void tmp9jqzgceq.__modtest() [0x428150]

    ??:? int core.runtime.runModuleUnitTests().__foreachbody2(object.ModuleInfo*)
    [0x42cda3]

    ??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)).__lambda2(immutable(object.ModuleInfo*))
    [0x42bc36]

    ??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))).__foreachbody2(ref
    rt.sections_elf_shared.DSO) [0x430689]

    ??:? int rt.sections_elf_shared.DSO.opApply(scope int delegate(ref rt.sections_elf_shared.DSO))
    [0x430b38]

    ??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*)))
    [0x430615]

    ??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)) [0x42bc0d]

    ??:? runModuleUnitTests [0x42cb79]

    ??:? void rt.dmain2._d_run_main(int, char**, extern (C) int function(char[][])*).runAll()
    [0x42881c]

    ??:? void rt.dmain2._d_r'
  stdout: ''
  timestamp: 1660163090
- exit_code: 1
  program: "import std.typecons;\nimport std.math;\n/*\n\n    Given two positive integers\
    \ a and b, return the even digits between a\n    and b, in ascending order.\n\n\
    \    For example:\n    >>> generate_integers(2L, 8L)\n    [2L, 4L, 6L, 8L]\n \
    \   >>> generate_integers(8L, 2L)\n    [2L, 4L, 6L, 8L]\n    >>> generate_integers(10L,\
    \ 14L)\n    []\n    \n*/\nlong[] generate_integers(long a, long b) \n{\n    long[]\
    \ result;\n    if (a > b) \n    {\n        result = generate_integers(b, a);\n\
    \    }\n    else if (a % 2 == 0) \n    {\n        result = new long[(b - a) /\
    \ 2 + 1];\n        foreach (i, ref e; result) \n        {\n            e = a +\
    \ i * 2;\n        }\n    }\n    else \n    {\n        result = new long[(b - a\
    \ - 1) / 2 + 1];\n        foreach (i, ref e; result) \n        {\n           \
    \ e = a + i * 2 + 1;\n        }\n    }\n    return result;\n}\nunittest\n{\n \
    \   alias candidate = generate_integers;\n\n    assert(candidate(2L, 10L) == [2L,\
    \ 4L, 6L, 8L]);\n    assert(candidate(10L, 2L) == [2L, 4L, 6L, 8L]);\n    assert(candidate(132L,\
    \ 2L) == [2L, 4L, 6L, 8L]);\n    assert(candidate(17L, 89L) == []);\n}\nvoid main(){}"
  status: Exception
  stderr: 'core.exception.AssertError@/tmp/tmptghco0lc.d(46): unittest failure

    ----------------

    ??:? _d_unittestp [0x42842d]

    ??:? void tmptghco0lc.__unittest_L42_C1() [0x427fbc]

    ??:? void tmptghco0lc.__modtest() [0x4281ac]

    ??:? int core.runtime.runModuleUnitTests().__foreachbody2(object.ModuleInfo*)
    [0x42c473]

    ??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)).__lambda2(immutable(object.ModuleInfo*))
    [0x42b306]

    ??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))).__foreachbody2(ref
    rt.sections_elf_shared.DSO) [0x430591]

    ??:? int rt.sections_elf_shared.DSO.opApply(scope int delegate(ref rt.sections_elf_shared.DSO))
    [0x430a40]

    ??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*)))
    [0x43051d]

    ??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)) [0x42b2dd]

    ??:? runModuleUnitTests [0x42c249]

    ??:? void rt.dmain2._d_run_main(int, char**, extern (C) int function(char[][])*).runAll()
    [0x42887c]

    ??:? void rt.dmain2._d_r'
  stdout: ''
  timestamp: 1660163091
- exit_code: 1
  program: "import std.typecons;\nimport std.math;\n/*\n\n    Given two positive integers\
    \ a and b, return the even digits between a\n    and b, in ascending order.\n\n\
    \    For example:\n    >>> generate_integers(2L, 8L)\n    [2L, 4L, 6L, 8L]\n \
    \   >>> generate_integers(8L, 2L)\n    [2L, 4L, 6L, 8L]\n    >>> generate_integers(10L,\
    \ 14L)\n    []\n    \n*/\nlong[] generate_integers(long a, long b) \n{\n    long[]\
    \ result;\n    if (a > b)\n    {\n        result = generate_integers(b, a);\n\
    \    }\n    else\n    {\n        result = [];\n        foreach (i; a..b)\n   \
    \     {\n            if (i % 2 == 0)\n            {\n                result ~=\
    \ i;\n            }\n        }\n    }\n    return result;\n}\nunittest\n{\n  \
    \  alias candidate = generate_integers;\n\n    assert(candidate(2L, 10L) == [2L,\
    \ 4L, 6L, 8L]);\n    assert(candidate(10L, 2L) == [2L, 4L, 6L, 8L]);\n    assert(candidate(132L,\
    \ 2L) == [2L, 4L, 6L, 8L]);\n    assert(candidate(17L, 89L) == []);\n}\nvoid main(){}"
  status: Exception
  stderr: 'core.exception.AssertError@/tmp/tmp9jqzgceq.d(43): unittest failure

    ----------------

    ??:? _d_unittestp [0x4283cd]

    ??:? void tmp9jqzgceq.__unittest_L37_C1() [0x42804c]

    ??:? void tmp9jqzgceq.__modtest() [0x428150]

    ??:? int core.runtime.runModuleUnitTests().__foreachbody2(object.ModuleInfo*)
    [0x42cda3]

    ??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)).__lambda2(immutable(object.ModuleInfo*))
    [0x42bc36]

    ??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))).__foreachbody2(ref
    rt.sections_elf_shared.DSO) [0x430689]

    ??:? int rt.sections_elf_shared.DSO.opApply(scope int delegate(ref rt.sections_elf_shared.DSO))
    [0x430b38]

    ??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*)))
    [0x430615]

    ??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)) [0x42bc0d]

    ??:? runModuleUnitTests [0x42cb79]

    ??:? void rt.dmain2._d_run_main(int, char**, extern (C) int function(char[][])*).runAll()
    [0x42881c]

    ??:? void rt.dmain2._d_r'
  stdout: ''
  timestamp: 1660163090
- exit_code: 1
  program: "import std.typecons;\nimport std.math;\n/*\n\n    Given two positive integers\
    \ a and b, return the even digits between a\n    and b, in ascending order.\n\n\
    \    For example:\n    >>> generate_integers(2L, 8L)\n    [2L, 4L, 6L, 8L]\n \
    \   >>> generate_integers(8L, 2L)\n    [2L, 4L, 6L, 8L]\n    >>> generate_integers(10L,\
    \ 14L)\n    []\n    \n*/\nlong[] generate_integers(long a, long b) \n{\n    long[]\
    \ result;\n    if (a > b)\n    {\n        result = generate_integers(b, a);\n\
    \    }\n    else\n    {\n        if (a % 2 == 0)\n        {\n            result\
    \ = new long[(b - a) / 2 + 1];\n            foreach (i, ref e; result)\n     \
    \       {\n                e = a + i * 2;\n            }\n        }\n        else\n\
    \        {\n            result = new long[(b - a - 1) / 2 + 1];\n            foreach\
    \ (i, ref e; result)\n            {\n                e = a + i * 2 + 1;\n    \
    \        }\n        }\n    }\n    return result;\n}\nunittest\n{\n    alias candidate\
    \ = generate_integers;\n\n    assert(candidate(2L, 10L) == [2L, 4L, 6L, 8L]);\n\
    \    assert(candidate(10L, 2L) == [2L, 4L, 6L, 8L]);\n    assert(candidate(132L,\
    \ 2L) == [2L, 4L, 6L, 8L]);\n    assert(candidate(17L, 89L) == []);\n}\nvoid main(){}"
  status: Exception
  stderr: 'core.exception.AssertError@/tmp/tmp9h_gffgg.d(49): unittest failure

    ----------------

    ??:? _d_unittestp [0x42842d]

    ??:? void tmp9h_gffgg.__unittest_L45_C1() [0x427fbc]

    ??:? void tmp9h_gffgg.__modtest() [0x4281ac]

    ??:? int core.runtime.runModuleUnitTests().__foreachbody2(object.ModuleInfo*)
    [0x42c473]

    ??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)).__lambda2(immutable(object.ModuleInfo*))
    [0x42b306]

    ??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))).__foreachbody2(ref
    rt.sections_elf_shared.DSO) [0x430591]

    ??:? int rt.sections_elf_shared.DSO.opApply(scope int delegate(ref rt.sections_elf_shared.DSO))
    [0x430a40]

    ??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*)))
    [0x43051d]

    ??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)) [0x42b2dd]

    ??:? runModuleUnitTests [0x42c249]

    ??:? void rt.dmain2._d_run_main(int, char**, extern (C) int function(char[][])*).runAll()
    [0x42887c]

    ??:? void rt.dmain2._d_r'
  stdout: ''
  timestamp: 1660163091
- exit_code: 1
  program: "import std.typecons;\nimport std.math;\n/*\n\n    Given two positive integers\
    \ a and b, return the even digits between a\n    and b, in ascending order.\n\n\
    \    For example:\n    >>> generate_integers(2L, 8L)\n    [2L, 4L, 6L, 8L]\n \
    \   >>> generate_integers(8L, 2L)\n    [2L, 4L, 6L, 8L]\n    >>> generate_integers(10L,\
    \ 14L)\n    []\n    \n*/\nlong[] generate_integers(long a, long b) \n{\n    long[]\
    \ result;\n    if (a > b)\n    {\n        result = generate_integers(b, a);\n\
    \    }\n    else\n    {\n        result = new long[0];\n        for (long i =\
    \ a; i <= b; i++)\n        {\n            if (i % 2 == 0)\n            {\n   \
    \             result ~= i;\n            }\n        }\n    }\n    return result;\n\
    }\nunittest\n{\n    alias candidate = generate_integers;\n\n    assert(candidate(2L,\
    \ 10L) == [2L, 4L, 6L, 8L]);\n    assert(candidate(10L, 2L) == [2L, 4L, 6L, 8L]);\n\
    \    assert(candidate(132L, 2L) == [2L, 4L, 6L, 8L]);\n    assert(candidate(17L,\
    \ 89L) == []);\n}\nvoid main(){}"
  status: Exception
  stderr: 'core.exception.AssertError@/tmp/tmpo37024wm.d(41): unittest failure

    ----------------

    ??:? _d_unittestp [0x4283b5]

    ??:? void tmpo37024wm.__unittest_L37_C1() [0x427f48]

    ??:? void tmpo37024wm.__modtest() [0x428138]

    ??:? int core.runtime.runModuleUnitTests().__foreachbody2(object.ModuleInfo*)
    [0x42cde7]

    ??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)).__lambda2(immutable(object.ModuleInfo*))
    [0x42bc7a]

    ??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))).__foreachbody2(ref
    rt.sections_elf_shared.DSO) [0x4307c5]

    ??:? int rt.sections_elf_shared.DSO.opApply(scope int delegate(ref rt.sections_elf_shared.DSO))
    [0x430c74]

    ??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*)))
    [0x430751]

    ??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)) [0x42bc51]

    ??:? runModuleUnitTests [0x42cbbd]

    ??:? void rt.dmain2._d_run_main(int, char**, extern (C) int function(char[][])*).runAll()
    [0x428804]

    ??:? void rt.dmain2._d_r'
  stdout: ''
  timestamp: 1660163090
- exit_code: 1
  program: "import std.typecons;\nimport std.math;\n/*\n\n    Given two positive integers\
    \ a and b, return the even digits between a\n    and b, in ascending order.\n\n\
    \    For example:\n    >>> generate_integers(2L, 8L)\n    [2L, 4L, 6L, 8L]\n \
    \   >>> generate_integers(8L, 2L)\n    [2L, 4L, 6L, 8L]\n    >>> generate_integers(10L,\
    \ 14L)\n    []\n    \n*/\nlong[] generate_integers(long a, long b) \n{\n    long[]\
    \ result;\n    if (a > b)\n    {\n        result = new long[(a - b) / 2 + 1];\n\
    \        foreach (i; 0 .. result.length)\n        {\n            result[i] = a\
    \ - 2 * i;\n        }\n    }\n    else\n    {\n        result = new long[(b -\
    \ a) / 2 + 1];\n        foreach (i; 0 .. result.length)\n        {\n         \
    \   result[i] = a + 2 * i;\n        }\n    }\n    return result;\n}\nunittest\n\
    {\n    alias candidate = generate_integers;\n\n    assert(candidate(2L, 10L) ==\
    \ [2L, 4L, 6L, 8L]);\n    assert(candidate(10L, 2L) == [2L, 4L, 6L, 8L]);\n  \
    \  assert(candidate(132L, 2L) == [2L, 4L, 6L, 8L]);\n    assert(candidate(17L,\
    \ 89L) == []);\n}\nvoid main(){}"
  status: Exception
  stderr: 'core.exception.AssertError@/tmp/tmpe8o6c221.d(42): unittest failure

    ----------------

    ??:? _d_unittestp [0x42842d]

    ??:? void tmpe8o6c221.__unittest_L38_C1() [0x427fbc]

    ??:? void tmpe8o6c221.__modtest() [0x4281ac]

    ??:? int core.runtime.runModuleUnitTests().__foreachbody2(object.ModuleInfo*)
    [0x42c4e7]

    ??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)).__lambda2(immutable(object.ModuleInfo*))
    [0x42b37a]

    ??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))).__foreachbody2(ref
    rt.sections_elf_shared.DSO) [0x430605]

    ??:? int rt.sections_elf_shared.DSO.opApply(scope int delegate(ref rt.sections_elf_shared.DSO))
    [0x430ab4]

    ??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*)))
    [0x430591]

    ??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)) [0x42b351]

    ??:? runModuleUnitTests [0x42c2bd]

    ??:? void rt.dmain2._d_run_main(int, char**, extern (C) int function(char[][])*).runAll()
    [0x4288f0]

    ??:? void rt.dmain2._d_r'
  stdout: ''
  timestamp: 1660163091
- exit_code: 1
  program: "import std.typecons;\nimport std.math;\n/*\n\n    Given two positive integers\
    \ a and b, return the even digits between a\n    and b, in ascending order.\n\n\
    \    For example:\n    >>> generate_integers(2L, 8L)\n    [2L, 4L, 6L, 8L]\n \
    \   >>> generate_integers(8L, 2L)\n    [2L, 4L, 6L, 8L]\n    >>> generate_integers(10L,\
    \ 14L)\n    []\n    \n*/\nlong[] generate_integers(long a, long b) \n{\n    long[]\
    \ result;\n    if (a > b) \n    {\n        result = generate_integers(b, a);\n\
    \    }\n    else if (a % 2 != 0) \n    {\n        result = generate_integers(a\
    \ + 1, b);\n    }\n    else if (b % 2 != 0) \n    {\n        result = generate_integers(a,\
    \ b - 1);\n    }\n    else \n    {\n        result = new long[(b - a) / 2 + 1];\n\
    \        foreach (i, ref e; result) \n        {\n            e = a + i * 2;\n\
    \        }\n    }\n    return result;\n}\nunittest\n{\n    alias candidate = generate_integers;\n\
    \n    assert(candidate(2L, 10L) == [2L, 4L, 6L, 8L]);\n    assert(candidate(10L,\
    \ 2L) == [2L, 4L, 6L, 8L]);\n    assert(candidate(132L, 2L) == [2L, 4L, 6L, 8L]);\n\
    \    assert(candidate(17L, 89L) == []);\n}\nvoid main(){}"
  status: Exception
  stderr: 'core.exception.AssertError@/tmp/tmpe_2mkd54.d(46): unittest failure

    ----------------

    ??:? _d_unittestp [0x4283fd]

    ??:? void tmpe_2mkd54.__unittest_L42_C1() [0x427f8c]

    ??:? void tmpe_2mkd54.__modtest() [0x42817c]

    ??:? int core.runtime.runModuleUnitTests().__foreachbody2(object.ModuleInfo*)
    [0x42c443]

    ??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)).__lambda2(immutable(object.ModuleInfo*))
    [0x42b2d6]

    ??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))).__foreachbody2(ref
    rt.sections_elf_shared.DSO) [0x430561]

    ??:? int rt.sections_elf_shared.DSO.opApply(scope int delegate(ref rt.sections_elf_shared.DSO))
    [0x430a10]

    ??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*)))
    [0x4304ed]

    ??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)) [0x42b2ad]

    ??:? runModuleUnitTests [0x42c219]

    ??:? void rt.dmain2._d_run_main(int, char**, extern (C) int function(char[][])*).runAll()
    [0x42884c]

    ??:? void rt.dmain2._d_r'
  stdout: ''
  timestamp: 1660163091
- exit_code: 1
  program: "import std.typecons;\nimport std.math;\n/*\n\n    Given two positive integers\
    \ a and b, return the even digits between a\n    and b, in ascending order.\n\n\
    \    For example:\n    >>> generate_integers(2L, 8L)\n    [2L, 4L, 6L, 8L]\n \
    \   >>> generate_integers(8L, 2L)\n    [2L, 4L, 6L, 8L]\n    >>> generate_integers(10L,\
    \ 14L)\n    []\n    \n*/\nlong[] generate_integers(long a, long b) \n{\n    long[]\
    \ result;\n    if (a > b)\n    {\n        result = generate_integers(b, a);\n\
    \    }\n    else\n    {\n        result = new long[(int)((b - a) / 2) + 1];\n\
    \        for (int i = 0; i < result.length; i++)\n        {\n            result[i]\
    \ = a + 2 * i;\n        }\n    }\n    return result;\n}\nunittest\n{\n    alias\
    \ candidate = generate_integers;\n\n    assert(candidate(2L, 10L) == [2L, 4L,\
    \ 6L, 8L]);\n    assert(candidate(10L, 2L) == [2L, 4L, 6L, 8L]);\n    assert(candidate(132L,\
    \ 2L) == [2L, 4L, 6L, 8L]);\n    assert(candidate(17L, 89L) == []);\n}\nvoid main(){}"
  status: SyntaxError
  stderr: '/tmp/tmpuzj81pka.d(26): Error: C style cast illegal, use `cast(int)((b
    - a) / 2)`

    Failed: ["dmd", "-unittest", "-v", "-o-", "/tmp/tmpuzj81pka.d", "-I/tmp"]

    '
  stdout: ''
  timestamp: 1660163091
- exit_code: 1
  program: "import std.typecons;\nimport std.math;\n/*\n\n    Given two positive integers\
    \ a and b, return the even digits between a\n    and b, in ascending order.\n\n\
    \    For example:\n    >>> generate_integers(2L, 8L)\n    [2L, 4L, 6L, 8L]\n \
    \   >>> generate_integers(8L, 2L)\n    [2L, 4L, 6L, 8L]\n    >>> generate_integers(10L,\
    \ 14L)\n    []\n    \n*/\nlong[] generate_integers(long a, long b) \n{\n    long[]\
    \ result;\n    if (a > b)\n    {\n        result = generate_integers(b, a);\n\
    \    }\n    else if (a % 2 == 0)\n    {\n        result = new long[(b - a) / 2\
    \ + 1];\n        foreach (i, ref e; result)\n        {\n            e = a + i\
    \ * 2;\n        }\n    }\n    else\n    {\n        result = new long[(b - a) /\
    \ 2];\n        foreach (i, ref e; result)\n        {\n            e = a + i *\
    \ 2 + 1;\n        }\n    }\n    return result;\n}\nunittest\n{\n    alias candidate\
    \ = generate_integers;\n\n    assert(candidate(2L, 10L) == [2L, 4L, 6L, 8L]);\n\
    \    assert(candidate(10L, 2L) == [2L, 4L, 6L, 8L]);\n    assert(candidate(132L,\
    \ 2L) == [2L, 4L, 6L, 8L]);\n    assert(candidate(17L, 89L) == []);\n}\nvoid main(){}"
  status: Exception
  stderr: 'core.exception.AssertError@/tmp/tmpl8fqambs.d(46): unittest failure

    ----------------

    ??:? _d_unittestp [0x428425]

    ??:? void tmpl8fqambs.__unittest_L42_C1() [0x427fb4]

    ??:? void tmpl8fqambs.__modtest() [0x4281a4]

    ??:? int core.runtime.runModuleUnitTests().__foreachbody2(object.ModuleInfo*)
    [0x42c46b]

    ??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)).__lambda2(immutable(object.ModuleInfo*))
    [0x42b2fe]

    ??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))).__foreachbody2(ref
    rt.sections_elf_shared.DSO) [0x430589]

    ??:? int rt.sections_elf_shared.DSO.opApply(scope int delegate(ref rt.sections_elf_shared.DSO))
    [0x430a38]

    ??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*)))
    [0x430515]

    ??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)) [0x42b2d5]

    ??:? runModuleUnitTests [0x42c241]

    ??:? void rt.dmain2._d_run_main(int, char**, extern (C) int function(char[][])*).runAll()
    [0x428874]

    ??:? void rt.dmain2._d_r'
  stdout: ''
  timestamp: 1660163091
- exit_code: 1
  program: "import std.typecons;\nimport std.math;\n/*\n\n    Given two positive integers\
    \ a and b, return the even digits between a\n    and b, in ascending order.\n\n\
    \    For example:\n    >>> generate_integers(2L, 8L)\n    [2L, 4L, 6L, 8L]\n \
    \   >>> generate_integers(8L, 2L)\n    [2L, 4L, 6L, 8L]\n    >>> generate_integers(10L,\
    \ 14L)\n    []\n    \n*/\nlong[] generate_integers(long a, long b) \n{\n    long[]\
    \ result;\n    if (a < b)\n    {\n        result = new long[(b - a) / 2 + 1];\n\
    \        foreach (i, ref e; result)\n        {\n            e = a + i * 2;\n \
    \       }\n    }\n    else\n    {\n        result = new long[(a - b) / 2 + 1];\n\
    \        foreach (i, ref e; result)\n        {\n            e = b + i * 2;\n \
    \       }\n    }\n    return result;\n}\nunittest\n{\n    alias candidate = generate_integers;\n\
    \n    assert(candidate(2L, 10L) == [2L, 4L, 6L, 8L]);\n    assert(candidate(10L,\
    \ 2L) == [2L, 4L, 6L, 8L]);\n    assert(candidate(132L, 2L) == [2L, 4L, 6L, 8L]);\n\
    \    assert(candidate(17L, 89L) == []);\n}\nvoid main(){}"
  status: Exception
  stderr: 'core.exception.AssertError@/tmp/tmpt09wv4wg.d(42): unittest failure

    ----------------

    ??:? _d_unittestp [0x4283f5]

    ??:? void tmpt09wv4wg.__unittest_L38_C1() [0x427f88]

    ??:? void tmpt09wv4wg.__modtest() [0x428178]

    ??:? int core.runtime.runModuleUnitTests().__foreachbody2(object.ModuleInfo*)
    [0x42c43b]

    ??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)).__lambda2(immutable(object.ModuleInfo*))
    [0x42b2ce]

    ??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))).__foreachbody2(ref
    rt.sections_elf_shared.DSO) [0x430559]

    ??:? int rt.sections_elf_shared.DSO.opApply(scope int delegate(ref rt.sections_elf_shared.DSO))
    [0x430a08]

    ??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*)))
    [0x4304e5]

    ??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)) [0x42b2a5]

    ??:? runModuleUnitTests [0x42c211]

    ??:? void rt.dmain2._d_run_main(int, char**, extern (C) int function(char[][])*).runAll()
    [0x428844]

    ??:? void rt.dmain2._d_r'
  stdout: ''
  timestamp: 1660163091
- exit_code: 1
  program: "import std.typecons;\nimport std.math;\n/*\n\n    Given two positive integers\
    \ a and b, return the even digits between a\n    and b, in ascending order.\n\n\
    \    For example:\n    >>> generate_integers(2L, 8L)\n    [2L, 4L, 6L, 8L]\n \
    \   >>> generate_integers(8L, 2L)\n    [2L, 4L, 6L, 8L]\n    >>> generate_integers(10L,\
    \ 14L)\n    []\n    \n*/\nlong[] generate_integers(long a, long b) \n{\n    long[]\
    \ result;\n    if (a > b) \n    {\n        result = generate_integers(b, a);\n\
    \    } \n    else \n    {\n        if (a % 2 == 0) \n        {\n            result\
    \ = new long[(b - a) / 2 + 1];\n            for (long i = 0; i < result.length;\
    \ i++) \n            {\n                result[i] = a + 2 * i;\n            }\n\
    \        } \n        else \n        {\n            result = new long[(b - a -\
    \ 1) / 2 + 1];\n            for (long i = 0; i < result.length; i++) \n      \
    \      {\n                result[i] = a + 2 * i + 1;\n            }\n        }\n\
    \    }\n    return result;\n}\nunittest\n{\n    alias candidate = generate_integers;\n\
    \n    assert(candidate(2L, 10L) == [2L, 4L, 6L, 8L]);\n    assert(candidate(10L,\
    \ 2L) == [2L, 4L, 6L, 8L]);\n    assert(candidate(132L, 2L) == [2L, 4L, 6L, 8L]);\n\
    \    assert(candidate(17L, 89L) == []);\n}\nvoid main(){}"
  status: Exception
  stderr: 'core.exception.AssertError@/tmp/tmp_v68qkmn.d(49): unittest failure

    ----------------

    ??:? _d_unittestp [0x428455]

    ??:? void tmp_v68qkmn.__unittest_L45_C1() [0x427fe4]

    ??:? void tmp_v68qkmn.__modtest() [0x4281d4]

    ??:? int core.runtime.runModuleUnitTests().__foreachbody2(object.ModuleInfo*)
    [0x42c50f]

    ??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)).__lambda2(immutable(object.ModuleInfo*))
    [0x42b3a2]

    ??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))).__foreachbody2(ref
    rt.sections_elf_shared.DSO) [0x43062d]

    ??:? int rt.sections_elf_shared.DSO.opApply(scope int delegate(ref rt.sections_elf_shared.DSO))
    [0x430adc]

    ??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*)))
    [0x4305b9]

    ??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)) [0x42b379]

    ??:? runModuleUnitTests [0x42c2e5]

    ??:? void rt.dmain2._d_run_main(int, char**, extern (C) int function(char[][])*).runAll()
    [0x428918]

    ??:? void rt.dmain2._d_r'
  stdout: ''
  timestamp: 1660163091
- exit_code: 1
  program: "import std.typecons;\nimport std.math;\n/*\n\n    Given two positive integers\
    \ a and b, return the even digits between a\n    and b, in ascending order.\n\n\
    \    For example:\n    >>> generate_integers(2L, 8L)\n    [2L, 4L, 6L, 8L]\n \
    \   >>> generate_integers(8L, 2L)\n    [2L, 4L, 6L, 8L]\n    >>> generate_integers(10L,\
    \ 14L)\n    []\n    \n*/\nlong[] generate_integers(long a, long b) \n{\n    long[]\
    \ result;\n    if (a > b) \n    {\n        result = generate_integers(b, a);\n\
    \    } \n    else \n    {\n        result = [];\n        foreach (i; a..b+1) \n\
    \        {\n            if (i % 2 == 0) \n            {\n                result\
    \ ~= i;\n            }\n        }\n    }\n    return result;\n}\nunittest\n{\n\
    \    alias candidate = generate_integers;\n\n    assert(candidate(2L, 10L) ==\
    \ [2L, 4L, 6L, 8L]);\n    assert(candidate(10L, 2L) == [2L, 4L, 6L, 8L]);\n  \
    \  assert(candidate(132L, 2L) == [2L, 4L, 6L, 8L]);\n    assert(candidate(17L,\
    \ 89L) == []);\n}\nvoid main(){}"
  status: Exception
  stderr: 'core.exception.AssertError@/tmp/tmpdsg55syw.d(41): unittest failure

    ----------------

    ??:? _d_unittestp [0x4283cd]

    ??:? void tmpdsg55syw.__unittest_L37_C1() [0x427f60]

    ??:? void tmpdsg55syw.__modtest() [0x428150]

    ??:? int core.runtime.runModuleUnitTests().__foreachbody2(object.ModuleInfo*)
    [0x42cda3]

    ??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)).__lambda2(immutable(object.ModuleInfo*))
    [0x42bc36]

    ??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))).__foreachbody2(ref
    rt.sections_elf_shared.DSO) [0x430689]

    ??:? int rt.sections_elf_shared.DSO.opApply(scope int delegate(ref rt.sections_elf_shared.DSO))
    [0x430b38]

    ??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*)))
    [0x430615]

    ??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)) [0x42bc0d]

    ??:? runModuleUnitTests [0x42cb79]

    ??:? void rt.dmain2._d_run_main(int, char**, extern (C) int function(char[][])*).runAll()
    [0x42881c]

    ??:? void rt.dmain2._d_r'
  stdout: ''
  timestamp: 1660163090
- exit_code: 1
  program: "import std.typecons;\nimport std.math;\n/*\n\n    Given two positive integers\
    \ a and b, return the even digits between a\n    and b, in ascending order.\n\n\
    \    For example:\n    >>> generate_integers(2L, 8L)\n    [2L, 4L, 6L, 8L]\n \
    \   >>> generate_integers(8L, 2L)\n    [2L, 4L, 6L, 8L]\n    >>> generate_integers(10L,\
    \ 14L)\n    []\n    \n*/\nlong[] generate_integers(long a, long b) \n{\n    long[]\
    \ result;\n    if (a > b)\n    {\n        result = generate_integers(b, a);\n\
    \    }\n    else\n    {\n        result = new long[];\n        foreach (i; a..b+1)\n\
    \        {\n            if (i % 2 == 0)\n            {\n                result\
    \ ~= i;\n            }\n        }\n    }\n    return result;\n}\nunittest\n{\n\
    \    alias candidate = generate_integers;\n\n    assert(candidate(2L, 10L) ==\
    \ [2L, 4L, 6L, 8L]);\n    assert(candidate(10L, 2L) == [2L, 4L, 6L, 8L]);\n  \
    \  assert(candidate(132L, 2L) == [2L, 4L, 6L, 8L]);\n    assert(candidate(17L,\
    \ 89L) == []);\n}\nvoid main(){}"
  status: SyntaxError
  stderr: '/tmp/tmpgb5373zm.d(26): Error: new can only create structs, dynamic arrays
    or class objects, not `long[]`''s

    Failed: ["dmd", "-unittest", "-v", "-o-", "/tmp/tmpgb5373zm.d", "-I/tmp"]

    '
  stdout: ''
  timestamp: 1660163090
- exit_code: 1
  program: "import std.typecons;\nimport std.math;\n/*\n\n    Given two positive integers\
    \ a and b, return the even digits between a\n    and b, in ascending order.\n\n\
    \    For example:\n    >>> generate_integers(2L, 8L)\n    [2L, 4L, 6L, 8L]\n \
    \   >>> generate_integers(8L, 2L)\n    [2L, 4L, 6L, 8L]\n    >>> generate_integers(10L,\
    \ 14L)\n    []\n    \n*/\nlong[] generate_integers(long a, long b) \n{\n    if\
    \ (a > b)\n    {\n        long temp = a;\n        a = b;\n        b = temp;\n\
    \    }\n    long[] result = new long[];\n    for (long i = a; i <= b; i++)\n \
    \   {\n        if (i % 2 == 0)\n        {\n            result ~= i;\n        }\n\
    \    }\n    return result;\n}\nunittest\n{\n    alias candidate = generate_integers;\n\
    \n    assert(candidate(2L, 10L) == [2L, 4L, 6L, 8L]);\n    assert(candidate(10L,\
    \ 2L) == [2L, 4L, 6L, 8L]);\n    assert(candidate(132L, 2L) == [2L, 4L, 6L, 8L]);\n\
    \    assert(candidate(17L, 89L) == []);\n}\nvoid main(){}"
  status: SyntaxError
  stderr: '/tmp/tmpzpzfez5i.d(25): Error: new can only create structs, dynamic arrays
    or class objects, not `long[]`''s

    Failed: ["dmd", "-unittest", "-v", "-o-", "/tmp/tmpzpzfez5i.d", "-I/tmp"]

    '
  stdout: ''
  timestamp: 1660163091
- exit_code: 1
  program: "import std.typecons;\nimport std.math;\n/*\n\n    Given two positive integers\
    \ a and b, return the even digits between a\n    and b, in ascending order.\n\n\
    \    For example:\n    >>> generate_integers(2L, 8L)\n    [2L, 4L, 6L, 8L]\n \
    \   >>> generate_integers(8L, 2L)\n    [2L, 4L, 6L, 8L]\n    >>> generate_integers(10L,\
    \ 14L)\n    []\n    \n*/\nlong[] generate_integers(long a, long b) \n{\n    auto\
    \ result = new long[];\n    if (a > b)\n    {\n        auto temp = a;\n      \
    \  a = b;\n        b = temp;\n    }\n    for (auto i = a; i <= b; i++)\n    {\n\
    \        if (i % 2 == 0)\n        {\n            result ~= i;\n        }\n   \
    \ }\n    return result;\n}\nunittest\n{\n    alias candidate = generate_integers;\n\
    \n    assert(candidate(2L, 10L) == [2L, 4L, 6L, 8L]);\n    assert(candidate(10L,\
    \ 2L) == [2L, 4L, 6L, 8L]);\n    assert(candidate(132L, 2L) == [2L, 4L, 6L, 8L]);\n\
    \    assert(candidate(17L, 89L) == []);\n}\nvoid main(){}"
  status: SyntaxError
  stderr: '/tmp/tmpuix77ejl.d(19): Error: new can only create structs, dynamic arrays
    or class objects, not `long[]`''s

    Failed: ["dmd", "-unittest", "-v", "-o-", "/tmp/tmpuix77ejl.d", "-I/tmp"]

    '
  stdout: ''
  timestamp: 1660163091
- exit_code: 1
  program: "import std.typecons;\nimport std.math;\n/*\n\n    Given two positive integers\
    \ a and b, return the even digits between a\n    and b, in ascending order.\n\n\
    \    For example:\n    >>> generate_integers(2L, 8L)\n    [2L, 4L, 6L, 8L]\n \
    \   >>> generate_integers(8L, 2L)\n    [2L, 4L, 6L, 8L]\n    >>> generate_integers(10L,\
    \ 14L)\n    []\n    \n*/\nlong[] generate_integers(long a, long b) \n{\n    long[]\
    \ result;\n    if (a > b)\n    {\n        result = generate_integers(b, a);\n\
    \    }\n    else\n    {\n        result = new long[(int)((b - a) / 2) + 1];\n\
    \        int i = 0;\n        foreach (long x; a.iota(b + 1))\n        {\n    \
    \        if (x % 2 == 0)\n            {\n                result[i] = x;\n    \
    \            i++;\n            }\n        }\n    }\n    return result;\n}\nunittest\n\
    {\n    alias candidate = generate_integers;\n\n    assert(candidate(2L, 10L) ==\
    \ [2L, 4L, 6L, 8L]);\n    assert(candidate(10L, 2L) == [2L, 4L, 6L, 8L]);\n  \
    \  assert(candidate(132L, 2L) == [2L, 4L, 6L, 8L]);\n    assert(candidate(17L,\
    \ 89L) == []);\n}\nvoid main(){}"
  status: SyntaxError
  stderr: '/tmp/tmpt8ajkzbj.d(26): Error: C style cast illegal, use `cast(int)((b
    - a) / 2)`

    Failed: ["dmd", "-unittest", "-v", "-o-", "/tmp/tmpt8ajkzbj.d", "-I/tmp"]

    '
  stdout: ''
  timestamp: 1660163091
- exit_code: 1
  program: "import std.typecons;\nimport std.math;\n/*\n\n    Given two positive integers\
    \ a and b, return the even digits between a\n    and b, in ascending order.\n\n\
    \    For example:\n    >>> generate_integers(2L, 8L)\n    [2L, 4L, 6L, 8L]\n \
    \   >>> generate_integers(8L, 2L)\n    [2L, 4L, 6L, 8L]\n    >>> generate_integers(10L,\
    \ 14L)\n    []\n    \n*/\nlong[] generate_integers(long a, long b) \n{\n    long[]\
    \ result;\n    if (a > b)\n    {\n        result = generate_integers(b, a);\n\
    \    }\n    else\n    {\n        result = new long[(int)((b - a) / 2) + 1];\n\
    \        foreach (i, ref e; result)\n        {\n            e = a + 2 * i;\n \
    \       }\n    }\n    return result;\n}\nunittest\n{\n    alias candidate = generate_integers;\n\
    \n    assert(candidate(2L, 10L) == [2L, 4L, 6L, 8L]);\n    assert(candidate(10L,\
    \ 2L) == [2L, 4L, 6L, 8L]);\n    assert(candidate(132L, 2L) == [2L, 4L, 6L, 8L]);\n\
    \    assert(candidate(17L, 89L) == []);\n}\nvoid main(){}"
  status: SyntaxError
  stderr: '/tmp/tmppj2atw0a.d(26): Error: C style cast illegal, use `cast(int)((b
    - a) / 2)`

    Failed: ["dmd", "-unittest", "-v", "-o-", "/tmp/tmppj2atw0a.d", "-I/tmp"]

    '
  stdout: ''
  timestamp: 1660163091
- exit_code: 1
  program: "import std.typecons;\nimport std.math;\n/*\n\n    Given two positive integers\
    \ a and b, return the even digits between a\n    and b, in ascending order.\n\n\
    \    For example:\n    >>> generate_integers(2L, 8L)\n    [2L, 4L, 6L, 8L]\n \
    \   >>> generate_integers(8L, 2L)\n    [2L, 4L, 6L, 8L]\n    >>> generate_integers(10L,\
    \ 14L)\n    []\n    \n*/\nlong[] generate_integers(long a, long b) \n{\n    long[]\
    \ result;\n    if (a > b) \n    {\n        result = generate_integers(b, a);\n\
    \    }\n    else \n    {\n        if (a % 2 == 0) \n        {\n            result\
    \ = new long[(b - a) / 2 + 1];\n        }\n        else \n        {\n        \
    \    result = new long[(b - a) / 2];\n        }\n        for (long i = 0; i <\
    \ result.length; i++) \n        {\n            result[i] = a + 2 * i;\n      \
    \  }\n    }\n    return result;\n}\n/*\n    Given a positive integer n, return\
    \ the number of digits in n.\nunittest\n{\n    alias candidate = generate_integers;\n\
    \n    assert(candidate(2L, 10L) == [2L, 4L, 6L, 8L]);\n    assert(candidate(10L,\
    \ 2L) == [2L, 4L, 6L, 8L]);\n    assert(candidate(132L, 2L) == [2L, 4L, 6L, 8L]);\n\
    \    assert(candidate(17L, 89L) == []);\n}\nvoid main(){}"
  status: SyntaxError
  stderr: '/tmp/tmp9wiwpiye.d(41): Error: unterminated /* */ comment

    Failed: ["dmd", "-unittest", "-v", "-o-", "/tmp/tmp9wiwpiye.d", "-I/tmp"]

    '
  stdout: ''
  timestamp: 1660163091
- exit_code: 1
  program: "import std.typecons;\nimport std.math;\n/*\n\n    Given two positive integers\
    \ a and b, return the even digits between a\n    and b, in ascending order.\n\n\
    \    For example:\n    >>> generate_integers(2L, 8L)\n    [2L, 4L, 6L, 8L]\n \
    \   >>> generate_integers(8L, 2L)\n    [2L, 4L, 6L, 8L]\n    >>> generate_integers(10L,\
    \ 14L)\n    []\n    \n*/\nlong[] generate_integers(long a, long b) \n{\n    long[]\
    \ result;\n    if (a > b)\n    {\n        result = generate_integers(b, a);\n\
    \    }\n    else\n    {\n        result = [];\n        foreach (i; a..b+1)\n \
    \       {\n            if (i % 2 == 0)\n            {\n                result\
    \ ~= i;\n            }\n        }\n    }\n    return result;\n}\nunittest\n{\n\
    \    alias candidate = generate_integers;\n\n    assert(candidate(2L, 10L) ==\
    \ [2L, 4L, 6L, 8L]);\n    assert(candidate(10L, 2L) == [2L, 4L, 6L, 8L]);\n  \
    \  assert(candidate(132L, 2L) == [2L, 4L, 6L, 8L]);\n    assert(candidate(17L,\
    \ 89L) == []);\n}\nvoid main(){}"
  status: Exception
  stderr: 'core.exception.AssertError@/tmp/tmph7b7qda4.d(41): unittest failure

    ----------------

    ??:? _d_unittestp [0x4283cd]

    ??:? void tmph7b7qda4.__unittest_L37_C1() [0x427f60]

    ??:? void tmph7b7qda4.__modtest() [0x428150]

    ??:? int core.runtime.runModuleUnitTests().__foreachbody2(object.ModuleInfo*)
    [0x42cda3]

    ??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)).__lambda2(immutable(object.ModuleInfo*))
    [0x42bc36]

    ??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))).__foreachbody2(ref
    rt.sections_elf_shared.DSO) [0x430689]

    ??:? int rt.sections_elf_shared.DSO.opApply(scope int delegate(ref rt.sections_elf_shared.DSO))
    [0x430b38]

    ??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*)))
    [0x430615]

    ??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)) [0x42bc0d]

    ??:? runModuleUnitTests [0x42cb79]

    ??:? void rt.dmain2._d_run_main(int, char**, extern (C) int function(char[][])*).runAll()
    [0x42881c]

    ??:? void rt.dmain2._d_r'
  stdout: ''
  timestamp: 1660163090
- exit_code: 1
  program: "import std.typecons;\nimport std.math;\n/*\n\n    Given two positive integers\
    \ a and b, return the even digits between a\n    and b, in ascending order.\n\n\
    \    For example:\n    >>> generate_integers(2L, 8L)\n    [2L, 4L, 6L, 8L]\n \
    \   >>> generate_integers(8L, 2L)\n    [2L, 4L, 6L, 8L]\n    >>> generate_integers(10L,\
    \ 14L)\n    []\n    \n*/\nlong[] generate_integers(long a, long b) \n{\n    long[]\
    \ result;\n    if (a > b) \n    {\n        result = generate_integers(b, a);\n\
    \    }\n    else \n    {\n        if (a % 2 == 0) \n        {\n            result\
    \ = generate_integers(a, b, a);\n        }\n        else \n        {\n       \
    \     result = generate_integers(a + 1, b, a + 1);\n        }\n    }\n    return\
    \ result;\n}\nunittest\n{\n    alias candidate = generate_integers;\n\n    assert(candidate(2L,\
    \ 10L) == [2L, 4L, 6L, 8L]);\n    assert(candidate(10L, 2L) == [2L, 4L, 6L, 8L]);\n\
    \    assert(candidate(132L, 2L) == [2L, 4L, 6L, 8L]);\n    assert(candidate(17L,\
    \ 89L) == []);\n}\nvoid main(){}"
  status: SyntaxError
  stderr: '/tmp/tmpilrn5wbp.d(28): Error: function `tmpilrn5wbp.generate_integers(long
    a, long b)` is not callable using argument types `(long, long, long)`

    /tmp/tmpilrn5wbp.d(32): Error: function `tmpilrn5wbp.generate_integers(long a,
    long b)` is not callable using argument types `(long, long, long)`

    Failed: ["dmd", "-unittest", "-v", "-o-", "/tmp/tmpilrn5wbp.d", "-I/tmp"]

    '
  stdout: ''
  timestamp: 1660163091
- exit_code: 1
  program: "import std.typecons;\nimport std.math;\n/*\n\n    Given two positive integers\
    \ a and b, return the even digits between a\n    and b, in ascending order.\n\n\
    \    For example:\n    >>> generate_integers(2L, 8L)\n    [2L, 4L, 6L, 8L]\n \
    \   >>> generate_integers(8L, 2L)\n    [2L, 4L, 6L, 8L]\n    >>> generate_integers(10L,\
    \ 14L)\n    []\n    \n*/\nlong[] generate_integers(long a, long b) \n{\n    long[]\
    \ result;\n    if (a > b)\n    {\n        result = new long[(a - b) / 2 + 1];\n\
    \        long i = 0;\n        foreach (long x; a.iota)\n        {\n          \
    \  if (x % 2 == 0)\n            {\n                result[i] = x;\n          \
    \      i++;\n            }\n        }\n    }\n    else\n    {\n        result\
    \ = new long[(b - a) / 2 + 1];\n        long i = 0;\n        foreach (long x;\
    \ a.iota)\n        {\n            if (x % 2 == 0)\n            {\n           \
    \     result[i] = x;\n                i++;\n            }\n        }\n    }\n\
    \    return result;\n}\nunittest\n{\n    alias candidate = generate_integers;\n\
    \n    assert(candidate(2L, 10L) == [2L, 4L, 6L, 8L]);\n    assert(candidate(10L,\
    \ 2L) == [2L, 4L, 6L, 8L]);\n    assert(candidate(132L, 2L) == [2L, 4L, 6L, 8L]);\n\
    \    assert(candidate(17L, 89L) == []);\n}\nvoid main(){}"
  status: SyntaxError
  stderr: '/tmp/tmp7whz26i0.d(24): Error: no property `iota` for type `long`

    /tmp/tmp7whz26i0.d(37): Error: no property `iota` for type `long`

    Failed: ["dmd", "-unittest", "-v", "-o-", "/tmp/tmp7whz26i0.d", "-I/tmp"]

    '
  stdout: ''
  timestamp: 1660163091
- exit_code: 1
  program: "import std.typecons;\nimport std.math;\n/*\n\n    Given two positive integers\
    \ a and b, return the even digits between a\n    and b, in ascending order.\n\n\
    \    For example:\n    >>> generate_integers(2L, 8L)\n    [2L, 4L, 6L, 8L]\n \
    \   >>> generate_integers(8L, 2L)\n    [2L, 4L, 6L, 8L]\n    >>> generate_integers(10L,\
    \ 14L)\n    []\n    \n*/\nlong[] generate_integers(long a, long b) \n{\n    long[]\
    \ result;\n    if (a > b)\n    {\n        result = generate_integers(b, a);\n\
    \    }\n    else\n    {\n        result = new long[0];\n        for (long i =\
    \ a; i <= b; i++)\n        {\n            if (i % 2 == 0)\n            {\n   \
    \             result ~= i;\n            }\n        }\n    }\n    return result;\n\
    }\nunittest\n{\n    alias candidate = generate_integers;\n\n    assert(candidate(2L,\
    \ 10L) == [2L, 4L, 6L, 8L]);\n    assert(candidate(10L, 2L) == [2L, 4L, 6L, 8L]);\n\
    \    assert(candidate(132L, 2L) == [2L, 4L, 6L, 8L]);\n    assert(candidate(17L,\
    \ 89L) == []);\n}\nvoid main(){}"
  status: Exception
  stderr: 'core.exception.AssertError@/tmp/tmpo37024wm.d(41): unittest failure

    ----------------

    ??:? _d_unittestp [0x4283b5]

    ??:? void tmpo37024wm.__unittest_L37_C1() [0x427f48]

    ??:? void tmpo37024wm.__modtest() [0x428138]

    ??:? int core.runtime.runModuleUnitTests().__foreachbody2(object.ModuleInfo*)
    [0x42cde7]

    ??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)).__lambda2(immutable(object.ModuleInfo*))
    [0x42bc7a]

    ??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))).__foreachbody2(ref
    rt.sections_elf_shared.DSO) [0x4307c5]

    ??:? int rt.sections_elf_shared.DSO.opApply(scope int delegate(ref rt.sections_elf_shared.DSO))
    [0x430c74]

    ??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*)))
    [0x430751]

    ??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)) [0x42bc51]

    ??:? runModuleUnitTests [0x42cbbd]

    ??:? void rt.dmain2._d_run_main(int, char**, extern (C) int function(char[][])*).runAll()
    [0x428804]

    ??:? void rt.dmain2._d_r'
  stdout: ''
  timestamp: 1660163090
- exit_code: 1
  program: "import std.typecons;\nimport std.math;\n/*\n\n    Given two positive integers\
    \ a and b, return the even digits between a\n    and b, in ascending order.\n\n\
    \    For example:\n    >>> generate_integers(2L, 8L)\n    [2L, 4L, 6L, 8L]\n \
    \   >>> generate_integers(8L, 2L)\n    [2L, 4L, 6L, 8L]\n    >>> generate_integers(10L,\
    \ 14L)\n    []\n    \n*/\nlong[] generate_integers(long a, long b) \n{\n    long[]\
    \ result;\n    if (a > b)\n    {\n        result = generate_integers(b, a);\n\
    \    }\n    else\n    {\n        result = [];\n        if (a % 2 == 0)\n     \
    \   {\n            result ~= a;\n        }\n        else\n        {\n        \
    \    a++;\n        }\n        while (a <= b)\n        {\n            result ~=\
    \ a;\n            a += 2;\n        }\n    }\n    return result;\n}\nunittest\n\
    {\n    alias candidate = generate_integers;\n\n    assert(candidate(2L, 10L) ==\
    \ [2L, 4L, 6L, 8L]);\n    assert(candidate(10L, 2L) == [2L, 4L, 6L, 8L]);\n  \
    \  assert(candidate(132L, 2L) == [2L, 4L, 6L, 8L]);\n    assert(candidate(17L,\
    \ 89L) == []);\n}\nvoid main(){}"
  status: Exception
  stderr: 'core.exception.AssertError@/tmp/tmpoz0fhxks.d(47): unittest failure

    ----------------

    ??:? _d_unittestp [0x4283ed]

    ??:? void tmpoz0fhxks.__unittest_L43_C1() [0x427f7c]

    ??:? void tmpoz0fhxks.__modtest() [0x42816c]

    ??:? int core.runtime.runModuleUnitTests().__foreachbody2(object.ModuleInfo*)
    [0x42cdc3]

    ??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)).__lambda2(immutable(object.ModuleInfo*))
    [0x42bc56]

    ??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))).__foreachbody2(ref
    rt.sections_elf_shared.DSO) [0x4306a9]

    ??:? int rt.sections_elf_shared.DSO.opApply(scope int delegate(ref rt.sections_elf_shared.DSO))
    [0x430b58]

    ??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*)))
    [0x430635]

    ??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)) [0x42bc2d]

    ??:? runModuleUnitTests [0x42cb99]

    ??:? void rt.dmain2._d_run_main(int, char**, extern (C) int function(char[][])*).runAll()
    [0x42883c]

    ??:? void rt.dmain2._d_r'
  stdout: ''
  timestamp: 1660163092
- exit_code: 1
  program: "import std.typecons;\nimport std.math;\n/*\n\n    Given two positive integers\
    \ a and b, return the even digits between a\n    and b, in ascending order.\n\n\
    \    For example:\n    >>> generate_integers(2L, 8L)\n    [2L, 4L, 6L, 8L]\n \
    \   >>> generate_integers(8L, 2L)\n    [2L, 4L, 6L, 8L]\n    >>> generate_integers(10L,\
    \ 14L)\n    []\n    \n*/\nlong[] generate_integers(long a, long b) \n{\n    long[]\
    \ result;\n    if (a > b)\n    {\n        result = generate_integers(b, a);\n\
    \    }\n    else\n    {\n        result = [];\n        foreach (i; a..b)\n   \
    \     {\n            if (i % 2 == 0)\n            {\n                result ~=\
    \ i;\n            }\n        }\n    }\n    return result;\n}\nunittest\n{\n  \
    \  alias candidate = generate_integers;\n\n    assert(candidate(2L, 10L) == [2L,\
    \ 4L, 6L, 8L]);\n    assert(candidate(10L, 2L) == [2L, 4L, 6L, 8L]);\n    assert(candidate(132L,\
    \ 2L) == [2L, 4L, 6L, 8L]);\n    assert(candidate(17L, 89L) == []);\n}\nvoid main(){}"
  status: Exception
  stderr: 'core.exception.AssertError@/tmp/tmp9jqzgceq.d(43): unittest failure

    ----------------

    ??:? _d_unittestp [0x4283cd]

    ??:? void tmp9jqzgceq.__unittest_L37_C1() [0x42804c]

    ??:? void tmp9jqzgceq.__modtest() [0x428150]

    ??:? int core.runtime.runModuleUnitTests().__foreachbody2(object.ModuleInfo*)
    [0x42cda3]

    ??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)).__lambda2(immutable(object.ModuleInfo*))
    [0x42bc36]

    ??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))).__foreachbody2(ref
    rt.sections_elf_shared.DSO) [0x430689]

    ??:? int rt.sections_elf_shared.DSO.opApply(scope int delegate(ref rt.sections_elf_shared.DSO))
    [0x430b38]

    ??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*)))
    [0x430615]

    ??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)) [0x42bc0d]

    ??:? runModuleUnitTests [0x42cb79]

    ??:? void rt.dmain2._d_run_main(int, char**, extern (C) int function(char[][])*).runAll()
    [0x42881c]

    ??:? void rt.dmain2._d_r'
  stdout: ''
  timestamp: 1660163090
- exit_code: 1
  program: "import std.typecons;\nimport std.math;\n/*\n\n    Given two positive integers\
    \ a and b, return the even digits between a\n    and b, in ascending order.\n\n\
    \    For example:\n    >>> generate_integers(2L, 8L)\n    [2L, 4L, 6L, 8L]\n \
    \   >>> generate_integers(8L, 2L)\n    [2L, 4L, 6L, 8L]\n    >>> generate_integers(10L,\
    \ 14L)\n    []\n    \n*/\nlong[] generate_integers(long a, long b) \n{\n    long[]\
    \ result;\n    if (a > b)\n    {\n        result = generate_integers(b, a);\n\
    \    }\n    else\n    {\n        result = [];\n        foreach (i; a..b)\n   \
    \     {\n            if (i % 2 == 0)\n            {\n                result ~=\
    \ i;\n            }\n        }\n    }\n    return result;\n}\nunittest\n{\n  \
    \  alias candidate = generate_integers;\n\n    assert(candidate(2L, 10L) == [2L,\
    \ 4L, 6L, 8L]);\n    assert(candidate(10L, 2L) == [2L, 4L, 6L, 8L]);\n    assert(candidate(132L,\
    \ 2L) == [2L, 4L, 6L, 8L]);\n    assert(candidate(17L, 89L) == []);\n}\nvoid main(){}"
  status: Exception
  stderr: 'core.exception.AssertError@/tmp/tmp9jqzgceq.d(43): unittest failure

    ----------------

    ??:? _d_unittestp [0x4283cd]

    ??:? void tmp9jqzgceq.__unittest_L37_C1() [0x42804c]

    ??:? void tmp9jqzgceq.__modtest() [0x428150]

    ??:? int core.runtime.runModuleUnitTests().__foreachbody2(object.ModuleInfo*)
    [0x42cda3]

    ??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)).__lambda2(immutable(object.ModuleInfo*))
    [0x42bc36]

    ??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))).__foreachbody2(ref
    rt.sections_elf_shared.DSO) [0x430689]

    ??:? int rt.sections_elf_shared.DSO.opApply(scope int delegate(ref rt.sections_elf_shared.DSO))
    [0x430b38]

    ??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*)))
    [0x430615]

    ??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)) [0x42bc0d]

    ??:? runModuleUnitTests [0x42cb79]

    ??:? void rt.dmain2._d_run_main(int, char**, extern (C) int function(char[][])*).runAll()
    [0x42881c]

    ??:? void rt.dmain2._d_r'
  stdout: ''
  timestamp: 1660163090
- exit_code: 1
  program: "import std.typecons;\nimport std.math;\n/*\n\n    Given two positive integers\
    \ a and b, return the even digits between a\n    and b, in ascending order.\n\n\
    \    For example:\n    >>> generate_integers(2L, 8L)\n    [2L, 4L, 6L, 8L]\n \
    \   >>> generate_integers(8L, 2L)\n    [2L, 4L, 6L, 8L]\n    >>> generate_integers(10L,\
    \ 14L)\n    []\n    \n*/\nlong[] generate_integers(long a, long b) \n{\n    if\
    \ (a > b)\n    {\n        long tmp = a;\n        a = b;\n        b = tmp;\n  \
    \  }\n    long[] result = new long[];\n    foreach (i; a..b+1)\n    {\n      \
    \  if (i % 2 == 0)\n        {\n            result ~= i;\n        }\n    }\n  \
    \  return result;\n}\nunittest\n{\n    alias candidate = generate_integers;\n\n\
    \    assert(candidate(2L, 10L) == [2L, 4L, 6L, 8L]);\n    assert(candidate(10L,\
    \ 2L) == [2L, 4L, 6L, 8L]);\n    assert(candidate(132L, 2L) == [2L, 4L, 6L, 8L]);\n\
    \    assert(candidate(17L, 89L) == []);\n}\nvoid main(){}"
  status: SyntaxError
  stderr: '/tmp/tmpad7dgaea.d(25): Error: new can only create structs, dynamic arrays
    or class objects, not `long[]`''s

    Failed: ["dmd", "-unittest", "-v", "-o-", "/tmp/tmpad7dgaea.d", "-I/tmp"]

    '
  stdout: ''
  timestamp: 1660163091
- exit_code: -1
  program: "import std.typecons;\nimport std.math;\n/*\n\n    Given two positive integers\
    \ a and b, return the even digits between a\n    and b, in ascending order.\n\n\
    \    For example:\n    >>> generate_integers(2L, 8L)\n    [2L, 4L, 6L, 8L]\n \
    \   >>> generate_integers(8L, 2L)\n    [2L, 4L, 6L, 8L]\n    >>> generate_integers(10L,\
    \ 14L)\n    []\n    \n*/\nlong[] generate_integers(long a, long b) \n{\n    long[]\
    \ result;\n    if (a > b)\n    {\n        result = generate_integers(b, a);\n\
    \    }\n    else\n    {\n        result = new long[0];\n        if (a % 2 == 0)\n\
    \        {\n            result ~= a;\n        }\n        if (b % 2 == 0)\n   \
    \     {\n            result ~= b;\n        }\n        if (a % 2 == 1)\n      \
    \  {\n            a++;\n        }\n        if (b % 2 == 1)\n        {\n      \
    \      b--;\n        }\n        if (a <= b)\n        {\n            result ~=\
    \ generate_integers(a + 2, b);\n        }\n    }\n    return result;\n}\nunittest\n\
    {\n    alias candidate = generate_integers;\n\n    assert(candidate(2L, 10L) ==\
    \ [2L, 4L, 6L, 8L]);\n    assert(candidate(10L, 2L) == [2L, 4L, 6L, 8L]);\n  \
    \  assert(candidate(132L, 2L) == [2L, 4L, 6L, 8L]);\n    assert(candidate(17L,\
    \ 89L) == []);\n}\nvoid main(){}"
  status: Timeout
  stderr: ''
  stdout: ''
  timestamp: 1660163109
- exit_code: 1
  program: "import std.typecons;\nimport std.math;\n/*\n\n    Given two positive integers\
    \ a and b, return the even digits between a\n    and b, in ascending order.\n\n\
    \    For example:\n    >>> generate_integers(2L, 8L)\n    [2L, 4L, 6L, 8L]\n \
    \   >>> generate_integers(8L, 2L)\n    [2L, 4L, 6L, 8L]\n    >>> generate_integers(10L,\
    \ 14L)\n    []\n    \n*/\nlong[] generate_integers(long a, long b) \n{\n    long[]\
    \ result;\n    if (a > b)\n    {\n        result = generate_integers(b, a);\n\
    \    }\n    else\n    {\n        if (a % 2 == 0)\n        {\n            result\
    \ = new long[(b - a) / 2 + 1];\n            foreach (i, ref e; result)\n     \
    \       {\n                e = a + i * 2;\n            }\n        }\n        else\n\
    \        {\n            result = new long[(b - a - 1) / 2 + 1];\n            foreach\
    \ (i, ref e; result)\n            {\n                e = a + i * 2 + 1;\n    \
    \        }\n        }\n    }\n    return result;\n}\nunittest\n{\n    alias candidate\
    \ = generate_integers;\n\n    assert(candidate(2L, 10L) == [2L, 4L, 6L, 8L]);\n\
    \    assert(candidate(10L, 2L) == [2L, 4L, 6L, 8L]);\n    assert(candidate(132L,\
    \ 2L) == [2L, 4L, 6L, 8L]);\n    assert(candidate(17L, 89L) == []);\n}\nvoid main(){}"
  status: Exception
  stderr: 'core.exception.AssertError@/tmp/tmp9h_gffgg.d(49): unittest failure

    ----------------

    ??:? _d_unittestp [0x42842d]

    ??:? void tmp9h_gffgg.__unittest_L45_C1() [0x427fbc]

    ??:? void tmp9h_gffgg.__modtest() [0x4281ac]

    ??:? int core.runtime.runModuleUnitTests().__foreachbody2(object.ModuleInfo*)
    [0x42c473]

    ??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)).__lambda2(immutable(object.ModuleInfo*))
    [0x42b306]

    ??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))).__foreachbody2(ref
    rt.sections_elf_shared.DSO) [0x430591]

    ??:? int rt.sections_elf_shared.DSO.opApply(scope int delegate(ref rt.sections_elf_shared.DSO))
    [0x430a40]

    ??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*)))
    [0x43051d]

    ??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)) [0x42b2dd]

    ??:? runModuleUnitTests [0x42c249]

    ??:? void rt.dmain2._d_run_main(int, char**, extern (C) int function(char[][])*).runAll()
    [0x42887c]

    ??:? void rt.dmain2._d_r'
  stdout: ''
  timestamp: 1660163091
- exit_code: 1
  program: "import std.typecons;\nimport std.math;\n/*\n\n    Given two positive integers\
    \ a and b, return the even digits between a\n    and b, in ascending order.\n\n\
    \    For example:\n    >>> generate_integers(2L, 8L)\n    [2L, 4L, 6L, 8L]\n \
    \   >>> generate_integers(8L, 2L)\n    [2L, 4L, 6L, 8L]\n    >>> generate_integers(10L,\
    \ 14L)\n    []\n    \n*/\nlong[] generate_integers(long a, long b) \n{\n    long[]\
    \ result;\n    if (a > b)\n    {\n        result = generate_integers(b, a);\n\
    \    }\n    else\n    {\n        result = [];\n        foreach (i; a..b)\n   \
    \     {\n            if (i % 2 == 0)\n            {\n                result ~=\
    \ i;\n            }\n        }\n    }\n    return result;\n}\nunittest\n{\n  \
    \  alias candidate = generate_integers;\n\n    assert(candidate(2L, 10L) == [2L,\
    \ 4L, 6L, 8L]);\n    assert(candidate(10L, 2L) == [2L, 4L, 6L, 8L]);\n    assert(candidate(132L,\
    \ 2L) == [2L, 4L, 6L, 8L]);\n    assert(candidate(17L, 89L) == []);\n}\nvoid main(){}"
  status: Exception
  stderr: 'core.exception.AssertError@/tmp/tmp9jqzgceq.d(43): unittest failure

    ----------------

    ??:? _d_unittestp [0x4283cd]

    ??:? void tmp9jqzgceq.__unittest_L37_C1() [0x42804c]

    ??:? void tmp9jqzgceq.__modtest() [0x428150]

    ??:? int core.runtime.runModuleUnitTests().__foreachbody2(object.ModuleInfo*)
    [0x42cda3]

    ??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)).__lambda2(immutable(object.ModuleInfo*))
    [0x42bc36]

    ??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))).__foreachbody2(ref
    rt.sections_elf_shared.DSO) [0x430689]

    ??:? int rt.sections_elf_shared.DSO.opApply(scope int delegate(ref rt.sections_elf_shared.DSO))
    [0x430b38]

    ??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*)))
    [0x430615]

    ??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)) [0x42bc0d]

    ??:? runModuleUnitTests [0x42cb79]

    ??:? void rt.dmain2._d_run_main(int, char**, extern (C) int function(char[][])*).runAll()
    [0x42881c]

    ??:? void rt.dmain2._d_r'
  stdout: ''
  timestamp: 1660163090
- exit_code: 1
  program: "import std.typecons;\nimport std.math;\n/*\n\n    Given two positive integers\
    \ a and b, return the even digits between a\n    and b, in ascending order.\n\n\
    \    For example:\n    >>> generate_integers(2L, 8L)\n    [2L, 4L, 6L, 8L]\n \
    \   >>> generate_integers(8L, 2L)\n    [2L, 4L, 6L, 8L]\n    >>> generate_integers(10L,\
    \ 14L)\n    []\n    \n*/\nlong[] generate_integers(long a, long b) \n{\n    long[]\
    \ result;\n    if (a > b) \n    {\n        result = generate_integers(b, a);\n\
    \    } \n    else \n    {\n        if (a % 2 == 0) \n        {\n            result\
    \ = new long[(b - a) / 2 + 1];\n            foreach (i, ref e; result) \n    \
    \        {\n                e = a + i * 2;\n            }\n        } \n      \
    \  else \n        {\n            result = new long[(b - a - 1) / 2 + 1];\n   \
    \         foreach (i, ref e; result) \n            {\n                e = a +\
    \ i * 2 + 1;\n            }\n        }\n    }\n    return result;\n}\nunittest\n\
    {\n    alias candidate = generate_integers;\n\n    assert(candidate(2L, 10L) ==\
    \ [2L, 4L, 6L, 8L]);\n    assert(candidate(10L, 2L) == [2L, 4L, 6L, 8L]);\n  \
    \  assert(candidate(132L, 2L) == [2L, 4L, 6L, 8L]);\n    assert(candidate(17L,\
    \ 89L) == []);\n}\nvoid main(){}"
  status: Exception
  stderr: 'core.exception.AssertError@/tmp/tmpeekuhskj.d(49): unittest failure

    ----------------

    ??:? _d_unittestp [0x42842d]

    ??:? void tmpeekuhskj.__unittest_L45_C1() [0x427fbc]

    ??:? void tmpeekuhskj.__modtest() [0x4281ac]

    ??:? int core.runtime.runModuleUnitTests().__foreachbody2(object.ModuleInfo*)
    [0x42c473]

    ??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)).__lambda2(immutable(object.ModuleInfo*))
    [0x42b306]

    ??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))).__foreachbody2(ref
    rt.sections_elf_shared.DSO) [0x430591]

    ??:? int rt.sections_elf_shared.DSO.opApply(scope int delegate(ref rt.sections_elf_shared.DSO))
    [0x430a40]

    ??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*)))
    [0x43051d]

    ??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)) [0x42b2dd]

    ??:? runModuleUnitTests [0x42c249]

    ??:? void rt.dmain2._d_run_main(int, char**, extern (C) int function(char[][])*).runAll()
    [0x42887c]

    ??:? void rt.dmain2._d_r'
  stdout: ''
  timestamp: 1660163092
- exit_code: 1
  program: "import std.typecons;\nimport std.math;\n/*\n\n    Given two positive integers\
    \ a and b, return the even digits between a\n    and b, in ascending order.\n\n\
    \    For example:\n    >>> generate_integers(2L, 8L)\n    [2L, 4L, 6L, 8L]\n \
    \   >>> generate_integers(8L, 2L)\n    [2L, 4L, 6L, 8L]\n    >>> generate_integers(10L,\
    \ 14L)\n    []\n    \n*/\nlong[] generate_integers(long a, long b) \n{\n    if\
    \ (a > b)\n    {\n        long temp = a;\n        a = b;\n        b = temp;\n\
    \    }\n    long[] result = new long[(int)((b - a) / 2) + 1];\n    int i = 0;\n\
    \    for (long j = a; j <= b; j += 2)\n    {\n        result[i] = j;\n       \
    \ i++;\n    }\n    return result;\n}\nunittest\n{\n    alias candidate = generate_integers;\n\
    \n    assert(candidate(2L, 10L) == [2L, 4L, 6L, 8L]);\n    assert(candidate(10L,\
    \ 2L) == [2L, 4L, 6L, 8L]);\n    assert(candidate(132L, 2L) == [2L, 4L, 6L, 8L]);\n\
    \    assert(candidate(17L, 89L) == []);\n}\nvoid main(){}"
  status: SyntaxError
  stderr: '/tmp/tmp7l63lvxq.d(25): Error: C style cast illegal, use `cast(int)((b
    - a) / 2)`

    Failed: ["dmd", "-unittest", "-v", "-o-", "/tmp/tmp7l63lvxq.d", "-I/tmp"]

    '
  stdout: ''
  timestamp: 1660163091
- exit_code: 1
  program: "import std.typecons;\nimport std.math;\n/*\n\n    Given two positive integers\
    \ a and b, return the even digits between a\n    and b, in ascending order.\n\n\
    \    For example:\n    >>> generate_integers(2L, 8L)\n    [2L, 4L, 6L, 8L]\n \
    \   >>> generate_integers(8L, 2L)\n    [2L, 4L, 6L, 8L]\n    >>> generate_integers(10L,\
    \ 14L)\n    []\n    \n*/\nlong[] generate_integers(long a, long b) \n{\n    long[]\
    \ result;\n    if (a > b)\n    {\n        result = generate_integers(b, a);\n\
    \    }\n    else\n    {\n        result = new long[];\n        foreach (i; a..b+1)\n\
    \        {\n            if (i % 2 == 0)\n            {\n                result\
    \ ~= i;\n            }\n        }\n    }\n    return result;\n}\nunittest\n{\n\
    \    alias candidate = generate_integers;\n\n    assert(candidate(2L, 10L) ==\
    \ [2L, 4L, 6L, 8L]);\n    assert(candidate(10L, 2L) == [2L, 4L, 6L, 8L]);\n  \
    \  assert(candidate(132L, 2L) == [2L, 4L, 6L, 8L]);\n    assert(candidate(17L,\
    \ 89L) == []);\n}\nvoid main(){}"
  status: SyntaxError
  stderr: '/tmp/tmpgb5373zm.d(26): Error: new can only create structs, dynamic arrays
    or class objects, not `long[]`''s

    Failed: ["dmd", "-unittest", "-v", "-o-", "/tmp/tmpgb5373zm.d", "-I/tmp"]

    '
  stdout: ''
  timestamp: 1660163090
- exit_code: 1
  program: "import std.typecons;\nimport std.math;\n/*\n\n    Given two positive integers\
    \ a and b, return the even digits between a\n    and b, in ascending order.\n\n\
    \    For example:\n    >>> generate_integers(2L, 8L)\n    [2L, 4L, 6L, 8L]\n \
    \   >>> generate_integers(8L, 2L)\n    [2L, 4L, 6L, 8L]\n    >>> generate_integers(10L,\
    \ 14L)\n    []\n    \n*/\nlong[] generate_integers(long a, long b) \n{\n    long[]\
    \ result;\n    if (a > b) \n    {\n        result = generate_integers(b, a);\n\
    \    } \n    else \n    {\n        if (a % 2 != 0) \n        {\n            a++;\n\
    \        }\n        if (b % 2 != 0) \n        {\n            b--;\n        }\n\
    \        if (a > b) \n        {\n            result = new long[0];\n        }\
    \ \n        else \n        {\n            result = new long[(b - a) / 2 + 1];\n\
    \            foreach (i, ref e; result) \n            {\n                e = a\
    \ + 2 * i;\n            }\n        }\n    }\n    return result;\n}\n/*\n    Given\
    \ a positive integer n, return the nth Fibonacci number.\nunittest\n{\n    alias\
    \ candidate = generate_integers;\n\n    assert(candidate(2L, 10L) == [2L, 4L,\
    \ 6L, 8L]);\n    assert(candidate(10L, 2L) == [2L, 4L, 6L, 8L]);\n    assert(candidate(132L,\
    \ 2L) == [2L, 4L, 6L, 8L]);\n    assert(candidate(17L, 89L) == []);\n}\nvoid main(){}"
  status: SyntaxError
  stderr: '/tmp/tmpl786osdh.d(49): Error: unterminated /* */ comment

    Failed: ["dmd", "-unittest", "-v", "-o-", "/tmp/tmpl786osdh.d", "-I/tmp"]

    '
  stdout: ''
  timestamp: 1660163091
- exit_code: 1
  program: "import std.typecons;\nimport std.math;\n/*\n\n    Given two positive integers\
    \ a and b, return the even digits between a\n    and b, in ascending order.\n\n\
    \    For example:\n    >>> generate_integers(2L, 8L)\n    [2L, 4L, 6L, 8L]\n \
    \   >>> generate_integers(8L, 2L)\n    [2L, 4L, 6L, 8L]\n    >>> generate_integers(10L,\
    \ 14L)\n    []\n    \n*/\nlong[] generate_integers(long a, long b) \n{\n    long[]\
    \ result;\n    if (a > b)\n    {\n        result = generate_integers(b, a);\n\
    \    }\n    else\n    {\n        if (a % 2 == 0)\n        {\n            result\
    \ = new long[(b - a) / 2 + 1];\n            for (long i = 0; i < result.length;\
    \ i++)\n            {\n                result[i] = a + i * 2;\n            }\n\
    \        }\n        else\n        {\n            result = new long[(b - a - 1)\
    \ / 2 + 1];\n            for (long i = 0; i < result.length; i++)\n          \
    \  {\n                result[i] = a + i * 2 + 1;\n            }\n        }\n \
    \   }\n    return result;\n}\nunittest\n{\n    alias candidate = generate_integers;\n\
    \n    assert(candidate(2L, 10L) == [2L, 4L, 6L, 8L]);\n    assert(candidate(10L,\
    \ 2L) == [2L, 4L, 6L, 8L]);\n    assert(candidate(132L, 2L) == [2L, 4L, 6L, 8L]);\n\
    \    assert(candidate(17L, 89L) == []);\n}\nvoid main(){}"
  status: Exception
  stderr: 'core.exception.AssertError@/tmp/tmp_179v3a9.d(49): unittest failure

    ----------------

    ??:? _d_unittestp [0x428455]

    ??:? void tmp_179v3a9.__unittest_L45_C1() [0x427fe4]

    ??:? void tmp_179v3a9.__modtest() [0x4281d4]

    ??:? int core.runtime.runModuleUnitTests().__foreachbody2(object.ModuleInfo*)
    [0x42c50f]

    ??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)).__lambda2(immutable(object.ModuleInfo*))
    [0x42b3a2]

    ??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))).__foreachbody2(ref
    rt.sections_elf_shared.DSO) [0x43062d]

    ??:? int rt.sections_elf_shared.DSO.opApply(scope int delegate(ref rt.sections_elf_shared.DSO))
    [0x430adc]

    ??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*)))
    [0x4305b9]

    ??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)) [0x42b379]

    ??:? runModuleUnitTests [0x42c2e5]

    ??:? void rt.dmain2._d_run_main(int, char**, extern (C) int function(char[][])*).runAll()
    [0x428918]

    ??:? void rt.dmain2._d_r'
  stdout: ''
  timestamp: 1660163091
- exit_code: 1
  program: "import std.typecons;\nimport std.math;\n/*\n\n    Given two positive integers\
    \ a and b, return the even digits between a\n    and b, in ascending order.\n\n\
    \    For example:\n    >>> generate_integers(2L, 8L)\n    [2L, 4L, 6L, 8L]\n \
    \   >>> generate_integers(8L, 2L)\n    [2L, 4L, 6L, 8L]\n    >>> generate_integers(10L,\
    \ 14L)\n    []\n    \n*/\nlong[] generate_integers(long a, long b) \n{\n    long[]\
    \ result;\n    if (a > b)\n    {\n        result = generate_integers(b, a);\n\
    \    }\n    else\n    {\n        result = new long[0];\n        foreach (i; a..b+1)\n\
    \        {\n            if (i % 2 == 0)\n            {\n                result\
    \ ~= i;\n            }\n        }\n    }\n    return result;\n}\nunittest\n{\n\
    \    alias candidate = generate_integers;\n\n    assert(candidate(2L, 10L) ==\
    \ [2L, 4L, 6L, 8L]);\n    assert(candidate(10L, 2L) == [2L, 4L, 6L, 8L]);\n  \
    \  assert(candidate(132L, 2L) == [2L, 4L, 6L, 8L]);\n    assert(candidate(17L,\
    \ 89L) == []);\n}\nvoid main(){}"
  status: Exception
  stderr: 'core.exception.AssertError@/tmp/tmpdqsgss_y.d(41): unittest failure

    ----------------

    ??:? _d_unittestp [0x4283cd]

    ??:? void tmpdqsgss_y.__unittest_L37_C1() [0x427f5c]

    ??:? void tmpdqsgss_y.__modtest() [0x42814c]

    ??:? int core.runtime.runModuleUnitTests().__foreachbody2(object.ModuleInfo*)
    [0x42cdff]

    ??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)).__lambda2(immutable(object.ModuleInfo*))
    [0x42bc92]

    ??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))).__foreachbody2(ref
    rt.sections_elf_shared.DSO) [0x4307dd]

    ??:? int rt.sections_elf_shared.DSO.opApply(scope int delegate(ref rt.sections_elf_shared.DSO))
    [0x430c8c]

    ??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*)))
    [0x430769]

    ??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)) [0x42bc69]

    ??:? runModuleUnitTests [0x42cbd5]

    ??:? void rt.dmain2._d_run_main(int, char**, extern (C) int function(char[][])*).runAll()
    [0x42881c]

    ??:? void rt.dmain2._d_r'
  stdout: ''
  timestamp: 1660163090
- exit_code: 1
  program: "import std.typecons;\nimport std.math;\n/*\n\n    Given two positive integers\
    \ a and b, return the even digits between a\n    and b, in ascending order.\n\n\
    \    For example:\n    >>> generate_integers(2L, 8L)\n    [2L, 4L, 6L, 8L]\n \
    \   >>> generate_integers(8L, 2L)\n    [2L, 4L, 6L, 8L]\n    >>> generate_integers(10L,\
    \ 14L)\n    []\n    \n*/\nlong[] generate_integers(long a, long b) \n{\n    long[]\
    \ result;\n    if (a > b)\n    {\n        result = generate_integers(b, a);\n\
    \    }\n    else\n    {\n        result = new long[];\n        foreach (i; a..b+1)\n\
    \        {\n            if (i % 2 == 0)\n            {\n                result\
    \ ~= i;\n            }\n        }\n    }\n    return result;\n}\nunittest\n{\n\
    \    alias candidate = generate_integers;\n\n    assert(candidate(2L, 10L) ==\
    \ [2L, 4L, 6L, 8L]);\n    assert(candidate(10L, 2L) == [2L, 4L, 6L, 8L]);\n  \
    \  assert(candidate(132L, 2L) == [2L, 4L, 6L, 8L]);\n    assert(candidate(17L,\
    \ 89L) == []);\n}\nvoid main(){}"
  status: SyntaxError
  stderr: '/tmp/tmpgb5373zm.d(26): Error: new can only create structs, dynamic arrays
    or class objects, not `long[]`''s

    Failed: ["dmd", "-unittest", "-v", "-o-", "/tmp/tmpgb5373zm.d", "-I/tmp"]

    '
  stdout: ''
  timestamp: 1660163090
- exit_code: 1
  program: "import std.typecons;\nimport std.math;\n/*\n\n    Given two positive integers\
    \ a and b, return the even digits between a\n    and b, in ascending order.\n\n\
    \    For example:\n    >>> generate_integers(2L, 8L)\n    [2L, 4L, 6L, 8L]\n \
    \   >>> generate_integers(8L, 2L)\n    [2L, 4L, 6L, 8L]\n    >>> generate_integers(10L,\
    \ 14L)\n    []\n    \n*/\nlong[] generate_integers(long a, long b) \n{\n    long[]\
    \ result;\n    if (a > b) \n    {\n        result = generate_integers(b, a);\n\
    \    }\n    else \n    {\n        result = new long[];\n        foreach (i; a..b)\
    \ \n        {\n            if (i % 2 == 0) \n            {\n                result\
    \ ~= i;\n            }\n        }\n    }\n    return result;\n}\nunittest\n{\n\
    \    alias candidate = generate_integers;\n\n    assert(candidate(2L, 10L) ==\
    \ [2L, 4L, 6L, 8L]);\n    assert(candidate(10L, 2L) == [2L, 4L, 6L, 8L]);\n  \
    \  assert(candidate(132L, 2L) == [2L, 4L, 6L, 8L]);\n    assert(candidate(17L,\
    \ 89L) == []);\n}\nvoid main(){}"
  status: SyntaxError
  stderr: '/tmp/tmpyri8swjc.d(26): Error: new can only create structs, dynamic arrays
    or class objects, not `long[]`''s

    Failed: ["dmd", "-unittest", "-v", "-o-", "/tmp/tmpyri8swjc.d", "-I/tmp"]

    '
  stdout: ''
  timestamp: 1660163091
- exit_code: 1
  program: "import std.typecons;\nimport std.math;\n/*\n\n    Given two positive integers\
    \ a and b, return the even digits between a\n    and b, in ascending order.\n\n\
    \    For example:\n    >>> generate_integers(2L, 8L)\n    [2L, 4L, 6L, 8L]\n \
    \   >>> generate_integers(8L, 2L)\n    [2L, 4L, 6L, 8L]\n    >>> generate_integers(10L,\
    \ 14L)\n    []\n    \n*/\nlong[] generate_integers(long a, long b) \n{\n    long[]\
    \ result;\n    if (a > b) \n    {\n        result = generate_integers(b, a);\n\
    \    } \n    else \n    {\n        if (a % 2L == 0L) \n        {\n           \
    \ result = new long[(b - a) / 2L + 1L];\n            foreach (i, ref e; result)\
    \ \n            {\n                e = a + i * 2L;\n            }\n        } \n\
    \        else \n        {\n            result = new long[(b - a) / 2L];\n    \
    \        foreach (i, ref e; result) \n            {\n                e = a + i\
    \ * 2L + 1L;\n            }\n        }\n    }\n    return result;\n}\n/*\nunittest\n\
    {\n    alias candidate = generate_integers;\n\n    assert(candidate(2L, 10L) ==\
    \ [2L, 4L, 6L, 8L]);\n    assert(candidate(10L, 2L) == [2L, 4L, 6L, 8L]);\n  \
    \  assert(candidate(132L, 2L) == [2L, 4L, 6L, 8L]);\n    assert(candidate(17L,\
    \ 89L) == []);\n}\nvoid main(){}"
  status: SyntaxError
  stderr: '/tmp/tmprm05f7z9.d(45): Error: unterminated /* */ comment

    Failed: ["dmd", "-unittest", "-v", "-o-", "/tmp/tmprm05f7z9.d", "-I/tmp"]

    '
  stdout: ''
  timestamp: 1660163091
- exit_code: 1
  program: "import std.typecons;\nimport std.math;\n/*\n\n    Given two positive integers\
    \ a and b, return the even digits between a\n    and b, in ascending order.\n\n\
    \    For example:\n    >>> generate_integers(2L, 8L)\n    [2L, 4L, 6L, 8L]\n \
    \   >>> generate_integers(8L, 2L)\n    [2L, 4L, 6L, 8L]\n    >>> generate_integers(10L,\
    \ 14L)\n    []\n    \n*/\nlong[] generate_integers(long a, long b) \n{\n    long[]\
    \ result;\n    if (a > b)\n    {\n        result = generate_integers(b, a);\n\
    \    }\n    else\n    {\n        result = [];\n        foreach (i; a..b)\n   \
    \     {\n            if (i % 2 == 0)\n            {\n                result ~=\
    \ i;\n            }\n        }\n    }\n    return result;\n}\nunittest\n{\n  \
    \  alias candidate = generate_integers;\n\n    assert(candidate(2L, 10L) == [2L,\
    \ 4L, 6L, 8L]);\n    assert(candidate(10L, 2L) == [2L, 4L, 6L, 8L]);\n    assert(candidate(132L,\
    \ 2L) == [2L, 4L, 6L, 8L]);\n    assert(candidate(17L, 89L) == []);\n}\nvoid main(){}"
  status: Exception
  stderr: 'core.exception.AssertError@/tmp/tmp9jqzgceq.d(43): unittest failure

    ----------------

    ??:? _d_unittestp [0x4283cd]

    ??:? void tmp9jqzgceq.__unittest_L37_C1() [0x42804c]

    ??:? void tmp9jqzgceq.__modtest() [0x428150]

    ??:? int core.runtime.runModuleUnitTests().__foreachbody2(object.ModuleInfo*)
    [0x42cda3]

    ??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)).__lambda2(immutable(object.ModuleInfo*))
    [0x42bc36]

    ??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))).__foreachbody2(ref
    rt.sections_elf_shared.DSO) [0x430689]

    ??:? int rt.sections_elf_shared.DSO.opApply(scope int delegate(ref rt.sections_elf_shared.DSO))
    [0x430b38]

    ??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*)))
    [0x430615]

    ??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)) [0x42bc0d]

    ??:? runModuleUnitTests [0x42cb79]

    ??:? void rt.dmain2._d_run_main(int, char**, extern (C) int function(char[][])*).runAll()
    [0x42881c]

    ??:? void rt.dmain2._d_r'
  stdout: ''
  timestamp: 1660163090
- exit_code: 1
  program: "import std.typecons;\nimport std.math;\n/*\n\n    Given two positive integers\
    \ a and b, return the even digits between a\n    and b, in ascending order.\n\n\
    \    For example:\n    >>> generate_integers(2L, 8L)\n    [2L, 4L, 6L, 8L]\n \
    \   >>> generate_integers(8L, 2L)\n    [2L, 4L, 6L, 8L]\n    >>> generate_integers(10L,\
    \ 14L)\n    []\n    \n*/\nlong[] generate_integers(long a, long b) \n{\n    long[]\
    \ result;\n    if (a > b)\n    {\n        result = generate_integers(b, a);\n\
    \    }\n    else\n    {\n        result = new long[(b - a) / 2 + 1];\n       \
    \ foreach (i, ref e; result)\n        {\n            e = a + 2 * i;\n        }\n\
    \    }\n    return result;\n}\nunittest\n{\n    alias candidate = generate_integers;\n\
    \n    assert(candidate(2L, 10L) == [2L, 4L, 6L, 8L]);\n    assert(candidate(10L,\
    \ 2L) == [2L, 4L, 6L, 8L]);\n    assert(candidate(132L, 2L) == [2L, 4L, 6L, 8L]);\n\
    \    assert(candidate(17L, 89L) == []);\n}\nvoid main(){}"
  status: Exception
  stderr: 'core.exception.AssertError@/tmp/tmp24vc4w0k.d(38): unittest failure

    ----------------

    ??:? _d_unittestp [0x4283a5]

    ??:? void tmp24vc4w0k.__unittest_L34_C1() [0x427f38]

    ??:? void tmp24vc4w0k.__modtest() [0x428128]

    ??:? int core.runtime.runModuleUnitTests().__foreachbody2(object.ModuleInfo*)
    [0x42c3eb]

    ??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)).__lambda2(immutable(object.ModuleInfo*))
    [0x42b27e]

    ??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))).__foreachbody2(ref
    rt.sections_elf_shared.DSO) [0x430509]

    ??:? int rt.sections_elf_shared.DSO.opApply(scope int delegate(ref rt.sections_elf_shared.DSO))
    [0x4309b8]

    ??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*)))
    [0x430495]

    ??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)) [0x42b255]

    ??:? runModuleUnitTests [0x42c1c1]

    ??:? void rt.dmain2._d_run_main(int, char**, extern (C) int function(char[][])*).runAll()
    [0x4287f4]

    ??:? void rt.dmain2._d_r'
  stdout: ''
  timestamp: 1660163091
- exit_code: 1
  program: "import std.typecons;\nimport std.math;\n/*\n\n    Given two positive integers\
    \ a and b, return the even digits between a\n    and b, in ascending order.\n\n\
    \    For example:\n    >>> generate_integers(2L, 8L)\n    [2L, 4L, 6L, 8L]\n \
    \   >>> generate_integers(8L, 2L)\n    [2L, 4L, 6L, 8L]\n    >>> generate_integers(10L,\
    \ 14L)\n    []\n    \n*/\nlong[] generate_integers(long a, long b) \n{\n    long[]\
    \ result;\n    if (a > b)\n    {\n        result = generate_integers(b, a);\n\
    \    }\n    else\n    {\n        result = [];\n        for (long i = a; i <= b;\
    \ i++)\n        {\n            if (i % 2 == 0)\n            {\n              \
    \  result ~= i;\n            }\n        }\n    }\n    return result;\n}\nunittest\n\
    {\n    alias candidate = generate_integers;\n\n    assert(candidate(2L, 10L) ==\
    \ [2L, 4L, 6L, 8L]);\n    assert(candidate(10L, 2L) == [2L, 4L, 6L, 8L]);\n  \
    \  assert(candidate(132L, 2L) == [2L, 4L, 6L, 8L]);\n    assert(candidate(17L,\
    \ 89L) == []);\n}\nvoid main(){}"
  status: Exception
  stderr: 'core.exception.AssertError@/tmp/tmp7xwr9480.d(41): unittest failure

    ----------------

    ??:? _d_unittestp [0x4283bd]

    ??:? void tmp7xwr9480.__unittest_L37_C1() [0x427f50]

    ??:? void tmp7xwr9480.__modtest() [0x428140]

    ??:? int core.runtime.runModuleUnitTests().__foreachbody2(object.ModuleInfo*)
    [0x42cd93]

    ??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)).__lambda2(immutable(object.ModuleInfo*))
    [0x42bc26]

    ??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))).__foreachbody2(ref
    rt.sections_elf_shared.DSO) [0x430679]

    ??:? int rt.sections_elf_shared.DSO.opApply(scope int delegate(ref rt.sections_elf_shared.DSO))
    [0x430b28]

    ??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*)))
    [0x430605]

    ??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)) [0x42bbfd]

    ??:? runModuleUnitTests [0x42cb69]

    ??:? void rt.dmain2._d_run_main(int, char**, extern (C) int function(char[][])*).runAll()
    [0x42880c]

    ??:? void rt.dmain2._d_r'
  stdout: ''
  timestamp: 1660163091
- exit_code: 1
  program: "import std.typecons;\nimport std.math;\n/*\n\n    Given two positive integers\
    \ a and b, return the even digits between a\n    and b, in ascending order.\n\n\
    \    For example:\n    >>> generate_integers(2L, 8L)\n    [2L, 4L, 6L, 8L]\n \
    \   >>> generate_integers(8L, 2L)\n    [2L, 4L, 6L, 8L]\n    >>> generate_integers(10L,\
    \ 14L)\n    []\n    \n*/\nlong[] generate_integers(long a, long b) \n{\n    long[]\
    \ result;\n    if (a > b)\n    {\n        result = generate_integers(b, a);\n\
    \    }\n    else\n    {\n        result = new long[0];\n        for (long i =\
    \ a; i <= b; i++)\n        {\n            if (i % 2 == 0)\n            {\n   \
    \             result ~= i;\n            }\n        }\n    }\n    return result;\n\
    }\nunittest\n{\n    alias candidate = generate_integers;\n\n    assert(candidate(2L,\
    \ 10L) == [2L, 4L, 6L, 8L]);\n    assert(candidate(10L, 2L) == [2L, 4L, 6L, 8L]);\n\
    \    assert(candidate(132L, 2L) == [2L, 4L, 6L, 8L]);\n    assert(candidate(17L,\
    \ 89L) == []);\n}\nvoid main(){}"
  status: Exception
  stderr: 'core.exception.AssertError@/tmp/tmpo37024wm.d(41): unittest failure

    ----------------

    ??:? _d_unittestp [0x4283b5]

    ??:? void tmpo37024wm.__unittest_L37_C1() [0x427f48]

    ??:? void tmpo37024wm.__modtest() [0x428138]

    ??:? int core.runtime.runModuleUnitTests().__foreachbody2(object.ModuleInfo*)
    [0x42cde7]

    ??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)).__lambda2(immutable(object.ModuleInfo*))
    [0x42bc7a]

    ??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))).__foreachbody2(ref
    rt.sections_elf_shared.DSO) [0x4307c5]

    ??:? int rt.sections_elf_shared.DSO.opApply(scope int delegate(ref rt.sections_elf_shared.DSO))
    [0x430c74]

    ??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*)))
    [0x430751]

    ??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)) [0x42bc51]

    ??:? runModuleUnitTests [0x42cbbd]

    ??:? void rt.dmain2._d_run_main(int, char**, extern (C) int function(char[][])*).runAll()
    [0x428804]

    ??:? void rt.dmain2._d_r'
  stdout: ''
  timestamp: 1660163090
- exit_code: 1
  program: "import std.typecons;\nimport std.math;\n/*\n\n    Given two positive integers\
    \ a and b, return the even digits between a\n    and b, in ascending order.\n\n\
    \    For example:\n    >>> generate_integers(2L, 8L)\n    [2L, 4L, 6L, 8L]\n \
    \   >>> generate_integers(8L, 2L)\n    [2L, 4L, 6L, 8L]\n    >>> generate_integers(10L,\
    \ 14L)\n    []\n    \n*/\nlong[] generate_integers(long a, long b) \n{\n    if\
    \ (a > b) \n    {\n        swap(a, b);\n    }\n    long[] result = new long[0];\n\
    \    for (long i = a; i <= b; i++) \n    {\n        if (i % 2 == 0) \n       \
    \ {\n            result ~= i;\n        }\n    }\n    return result;\n}\nunittest\n\
    {\n    alias candidate = generate_integers;\n\n    assert(candidate(2L, 10L) ==\
    \ [2L, 4L, 6L, 8L]);\n    assert(candidate(10L, 2L) == [2L, 4L, 6L, 8L]);\n  \
    \  assert(candidate(132L, 2L) == [2L, 4L, 6L, 8L]);\n    assert(candidate(17L,\
    \ 89L) == []);\n}\nvoid main(){}"
  status: SyntaxError
  stderr: '/tmp/tmpj9w5_b5r.d(21): Error: undefined identifier `swap`, did you mean
    template `wrap(Targets...) if (Targets.length >= 1 && allSatisfy!(isMutable, Targets))`?

    Failed: ["dmd", "-unittest", "-v", "-o-", "/tmp/tmpj9w5_b5r.d", "-I/tmp"]

    '
  stdout: ''
  timestamp: 1660163091
- exit_code: 1
  program: "import std.typecons;\nimport std.math;\n/*\n\n    Given two positive integers\
    \ a and b, return the even digits between a\n    and b, in ascending order.\n\n\
    \    For example:\n    >>> generate_integers(2L, 8L)\n    [2L, 4L, 6L, 8L]\n \
    \   >>> generate_integers(8L, 2L)\n    [2L, 4L, 6L, 8L]\n    >>> generate_integers(10L,\
    \ 14L)\n    []\n    \n*/\nlong[] generate_integers(long a, long b) \n{\n    long[]\
    \ result;\n    if (a > b) \n    {\n        result = generate_integers(b, a);\n\
    \    } \n    else \n    {\n        if (a % 2 == 0) \n        {\n            result\
    \ = new long[(b - a) / 2 + 1];\n            foreach (i, ref e; result) \n    \
    \        {\n                e = a + i * 2;\n            }\n        } \n      \
    \  else \n        {\n            result = new long[(b - a - 1) / 2 + 1];\n   \
    \         foreach (i, ref e; result) \n            {\n                e = a +\
    \ i * 2 + 1;\n            }\n        }\n    }\n    return result;\n}\nunittest\n\
    {\n    alias candidate = generate_integers;\n\n    assert(candidate(2L, 10L) ==\
    \ [2L, 4L, 6L, 8L]);\n    assert(candidate(10L, 2L) == [2L, 4L, 6L, 8L]);\n  \
    \  assert(candidate(132L, 2L) == [2L, 4L, 6L, 8L]);\n    assert(candidate(17L,\
    \ 89L) == []);\n}\nvoid main(){}"
  status: Exception
  stderr: 'core.exception.AssertError@/tmp/tmpeekuhskj.d(49): unittest failure

    ----------------

    ??:? _d_unittestp [0x42842d]

    ??:? void tmpeekuhskj.__unittest_L45_C1() [0x427fbc]

    ??:? void tmpeekuhskj.__modtest() [0x4281ac]

    ??:? int core.runtime.runModuleUnitTests().__foreachbody2(object.ModuleInfo*)
    [0x42c473]

    ??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)).__lambda2(immutable(object.ModuleInfo*))
    [0x42b306]

    ??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))).__foreachbody2(ref
    rt.sections_elf_shared.DSO) [0x430591]

    ??:? int rt.sections_elf_shared.DSO.opApply(scope int delegate(ref rt.sections_elf_shared.DSO))
    [0x430a40]

    ??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*)))
    [0x43051d]

    ??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)) [0x42b2dd]

    ??:? runModuleUnitTests [0x42c249]

    ??:? void rt.dmain2._d_run_main(int, char**, extern (C) int function(char[][])*).runAll()
    [0x42887c]

    ??:? void rt.dmain2._d_r'
  stdout: ''
  timestamp: 1660163092
- exit_code: 1
  program: "import std.typecons;\nimport std.math;\n/*\n\n    Given two positive integers\
    \ a and b, return the even digits between a\n    and b, in ascending order.\n\n\
    \    For example:\n    >>> generate_integers(2L, 8L)\n    [2L, 4L, 6L, 8L]\n \
    \   >>> generate_integers(8L, 2L)\n    [2L, 4L, 6L, 8L]\n    >>> generate_integers(10L,\
    \ 14L)\n    []\n    \n*/\nlong[] generate_integers(long a, long b) \n{\n    long[]\
    \ result;\n    if (a > b)\n    {\n        result = generate_integers(b, a);\n\
    \    }\n    else\n    {\n        result = new long[0];\n        for (long i =\
    \ a; i <= b; i++)\n        {\n            if (i % 2 == 0)\n            {\n   \
    \             result ~= i;\n            }\n        }\n    }\n    return result;\n\
    }\nunittest\n{\n    alias candidate = generate_integers;\n\n    assert(candidate(2L,\
    \ 10L) == [2L, 4L, 6L, 8L]);\n    assert(candidate(10L, 2L) == [2L, 4L, 6L, 8L]);\n\
    \    assert(candidate(132L, 2L) == [2L, 4L, 6L, 8L]);\n    assert(candidate(17L,\
    \ 89L) == []);\n}\nvoid main(){}"
  status: Exception
  stderr: 'core.exception.AssertError@/tmp/tmpo37024wm.d(41): unittest failure

    ----------------

    ??:? _d_unittestp [0x4283b5]

    ??:? void tmpo37024wm.__unittest_L37_C1() [0x427f48]

    ??:? void tmpo37024wm.__modtest() [0x428138]

    ??:? int core.runtime.runModuleUnitTests().__foreachbody2(object.ModuleInfo*)
    [0x42cde7]

    ??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)).__lambda2(immutable(object.ModuleInfo*))
    [0x42bc7a]

    ??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))).__foreachbody2(ref
    rt.sections_elf_shared.DSO) [0x4307c5]

    ??:? int rt.sections_elf_shared.DSO.opApply(scope int delegate(ref rt.sections_elf_shared.DSO))
    [0x430c74]

    ??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*)))
    [0x430751]

    ??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)) [0x42bc51]

    ??:? runModuleUnitTests [0x42cbbd]

    ??:? void rt.dmain2._d_run_main(int, char**, extern (C) int function(char[][])*).runAll()
    [0x428804]

    ??:? void rt.dmain2._d_r'
  stdout: ''
  timestamp: 1660163090
- exit_code: 1
  program: "import std.typecons;\nimport std.math;\n/*\n\n    Given two positive integers\
    \ a and b, return the even digits between a\n    and b, in ascending order.\n\n\
    \    For example:\n    >>> generate_integers(2L, 8L)\n    [2L, 4L, 6L, 8L]\n \
    \   >>> generate_integers(8L, 2L)\n    [2L, 4L, 6L, 8L]\n    >>> generate_integers(10L,\
    \ 14L)\n    []\n    \n*/\nlong[] generate_integers(long a, long b) \n{\n    long[]\
    \ result;\n    if (a > b) \n    {\n        result = generate_integers(b, a);\n\
    \    }\n    else \n    {\n        result = new long[];\n        for (long i =\
    \ a; i <= b; i++) \n        {\n            if (i % 2 == 0) \n            {\n \
    \               result ~= i;\n            }\n        }\n    }\n    return result;\n\
    }\nunittest\n{\n    alias candidate = generate_integers;\n\n    assert(candidate(2L,\
    \ 10L) == [2L, 4L, 6L, 8L]);\n    assert(candidate(10L, 2L) == [2L, 4L, 6L, 8L]);\n\
    \    assert(candidate(132L, 2L) == [2L, 4L, 6L, 8L]);\n    assert(candidate(17L,\
    \ 89L) == []);\n}\nvoid main(){}"
  status: SyntaxError
  stderr: '/tmp/tmp8pdd583o.d(26): Error: new can only create structs, dynamic arrays
    or class objects, not `long[]`''s

    Failed: ["dmd", "-unittest", "-v", "-o-", "/tmp/tmp8pdd583o.d", "-I/tmp"]

    '
  stdout: ''
  timestamp: 1660163091
- exit_code: 1
  program: "import std.typecons;\nimport std.math;\n/*\n\n    Given two positive integers\
    \ a and b, return the even digits between a\n    and b, in ascending order.\n\n\
    \    For example:\n    >>> generate_integers(2L, 8L)\n    [2L, 4L, 6L, 8L]\n \
    \   >>> generate_integers(8L, 2L)\n    [2L, 4L, 6L, 8L]\n    >>> generate_integers(10L,\
    \ 14L)\n    []\n    \n*/\nlong[] generate_integers(long a, long b) \n{\n    long[]\
    \ result;\n    if (a > b)\n    {\n        result = generate_integers(b, a);\n\
    \    }\n    else\n    {\n        result = new long[0];\n        if (a % 2 == 0)\n\
    \        {\n            result ~= a;\n        }\n        if (b % 2 == 0)\n   \
    \     {\n            result ~= b;\n        }\n        long c = a + 2;\n      \
    \  while (c < b)\n        {\n            result ~= c;\n            c += 2;\n \
    \       }\n    }\n    return result;\n}\nunittest\n{\n    alias candidate = generate_integers;\n\
    \n    assert(candidate(2L, 10L) == [2L, 4L, 6L, 8L]);\n    assert(candidate(10L,\
    \ 2L) == [2L, 4L, 6L, 8L]);\n    assert(candidate(132L, 2L) == [2L, 4L, 6L, 8L]);\n\
    \    assert(candidate(17L, 89L) == []);\n}\nvoid main(){}"
  status: Exception
  stderr: 'core.exception.AssertError@/tmp/tmpan86c81i.d(48): unittest failure

    ----------------

    ??:? _d_unittestp [0x42842d]

    ??:? void tmpan86c81i.__unittest_L44_C1() [0x427fc0]

    ??:? void tmpan86c81i.__modtest() [0x4281b0]

    ??:? int core.runtime.runModuleUnitTests().__foreachbody2(object.ModuleInfo*)
    [0x42ce5f]

    ??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)).__lambda2(immutable(object.ModuleInfo*))
    [0x42bcf2]

    ??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))).__foreachbody2(ref
    rt.sections_elf_shared.DSO) [0x43083d]

    ??:? int rt.sections_elf_shared.DSO.opApply(scope int delegate(ref rt.sections_elf_shared.DSO))
    [0x430cec]

    ??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*)))
    [0x4307c9]

    ??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)) [0x42bcc9]

    ??:? runModuleUnitTests [0x42cc35]

    ??:? void rt.dmain2._d_run_main(int, char**, extern (C) int function(char[][])*).runAll()
    [0x42887c]

    ??:? void rt.dmain2._d_r'
  stdout: ''
  timestamp: 1660163092
- exit_code: 1
  program: "import std.typecons;\nimport std.math;\n/*\n\n    Given two positive integers\
    \ a and b, return the even digits between a\n    and b, in ascending order.\n\n\
    \    For example:\n    >>> generate_integers(2L, 8L)\n    [2L, 4L, 6L, 8L]\n \
    \   >>> generate_integers(8L, 2L)\n    [2L, 4L, 6L, 8L]\n    >>> generate_integers(10L,\
    \ 14L)\n    []\n    \n*/\nlong[] generate_integers(long a, long b) \n{\n    long[]\
    \ result;\n    if (a > b) \n    {\n        result = generate_integers(b, a);\n\
    \    }\n    else if (a % 2 == 0) \n    {\n        result = new long[(b - a) /\
    \ 2 + 1];\n        foreach (i, ref e; result) \n        {\n            e = a +\
    \ 2 * i;\n        }\n    }\n    else \n    {\n        result = new long[(b - a)\
    \ / 2];\n        foreach (i, ref e; result) \n        {\n            e = a + 2\
    \ * i + 1;\n        }\n    }\n    return result;\n}\nunittest\n{\n    alias candidate\
    \ = generate_integers;\n\n    assert(candidate(2L, 10L) == [2L, 4L, 6L, 8L]);\n\
    \    assert(candidate(10L, 2L) == [2L, 4L, 6L, 8L]);\n    assert(candidate(132L,\
    \ 2L) == [2L, 4L, 6L, 8L]);\n    assert(candidate(17L, 89L) == []);\n}\nvoid main(){}"
  status: Exception
  stderr: 'core.exception.AssertError@/tmp/tmpxyc951r2.d(46): unittest failure

    ----------------

    ??:? _d_unittestp [0x428425]

    ??:? void tmpxyc951r2.__unittest_L42_C1() [0x427fb4]

    ??:? void tmpxyc951r2.__modtest() [0x4281a4]

    ??:? int core.runtime.runModuleUnitTests().__foreachbody2(object.ModuleInfo*)
    [0x42c46b]

    ??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)).__lambda2(immutable(object.ModuleInfo*))
    [0x42b2fe]

    ??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))).__foreachbody2(ref
    rt.sections_elf_shared.DSO) [0x430589]

    ??:? int rt.sections_elf_shared.DSO.opApply(scope int delegate(ref rt.sections_elf_shared.DSO))
    [0x430a38]

    ??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*)))
    [0x430515]

    ??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)) [0x42b2d5]

    ??:? runModuleUnitTests [0x42c241]

    ??:? void rt.dmain2._d_run_main(int, char**, extern (C) int function(char[][])*).runAll()
    [0x428874]

    ??:? void rt.dmain2._d_r'
  stdout: ''
  timestamp: 1660163092
- exit_code: 1
  program: "import std.typecons;\nimport std.math;\n/*\n\n    Given two positive integers\
    \ a and b, return the even digits between a\n    and b, in ascending order.\n\n\
    \    For example:\n    >>> generate_integers(2L, 8L)\n    [2L, 4L, 6L, 8L]\n \
    \   >>> generate_integers(8L, 2L)\n    [2L, 4L, 6L, 8L]\n    >>> generate_integers(10L,\
    \ 14L)\n    []\n    \n*/\nlong[] generate_integers(long a, long b) \n{\n    long[]\
    \ result;\n    if (a > b)\n    {\n        result = generate_integers(b, a);\n\
    \    }\n    else\n    {\n        result = new long[0];\n        for (long i =\
    \ a; i <= b; i++)\n        {\n            if (i % 2 == 0)\n            {\n   \
    \             result ~= i;\n            }\n        }\n    }\n    return result;\n\
    }\nunittest\n{\n    alias candidate = generate_integers;\n\n    assert(candidate(2L,\
    \ 10L) == [2L, 4L, 6L, 8L]);\n    assert(candidate(10L, 2L) == [2L, 4L, 6L, 8L]);\n\
    \    assert(candidate(132L, 2L) == [2L, 4L, 6L, 8L]);\n    assert(candidate(17L,\
    \ 89L) == []);\n}\nvoid main(){}"
  status: Exception
  stderr: 'core.exception.AssertError@/tmp/tmpo37024wm.d(41): unittest failure

    ----------------

    ??:? _d_unittestp [0x4283b5]

    ??:? void tmpo37024wm.__unittest_L37_C1() [0x427f48]

    ??:? void tmpo37024wm.__modtest() [0x428138]

    ??:? int core.runtime.runModuleUnitTests().__foreachbody2(object.ModuleInfo*)
    [0x42cde7]

    ??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)).__lambda2(immutable(object.ModuleInfo*))
    [0x42bc7a]

    ??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))).__foreachbody2(ref
    rt.sections_elf_shared.DSO) [0x4307c5]

    ??:? int rt.sections_elf_shared.DSO.opApply(scope int delegate(ref rt.sections_elf_shared.DSO))
    [0x430c74]

    ??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*)))
    [0x430751]

    ??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)) [0x42bc51]

    ??:? runModuleUnitTests [0x42cbbd]

    ??:? void rt.dmain2._d_run_main(int, char**, extern (C) int function(char[][])*).runAll()
    [0x428804]

    ??:? void rt.dmain2._d_r'
  stdout: ''
  timestamp: 1660163090
- exit_code: 1
  program: "import std.typecons;\nimport std.math;\n/*\n\n    Given two positive integers\
    \ a and b, return the even digits between a\n    and b, in ascending order.\n\n\
    \    For example:\n    >>> generate_integers(2L, 8L)\n    [2L, 4L, 6L, 8L]\n \
    \   >>> generate_integers(8L, 2L)\n    [2L, 4L, 6L, 8L]\n    >>> generate_integers(10L,\
    \ 14L)\n    []\n    \n*/\nlong[] generate_integers(long a, long b) \n{\n    long[]\
    \ result;\n    if (a > b) \n    {\n        result = new long[0];\n    } \n   \
    \ else \n    {\n        long[] temp = new long[(b - a) / 2 + 1];\n        long\
    \ i = 0;\n        foreach (long x; a.iota(b + 1)) \n        {\n            if\
    \ (x % 2 == 0) \n            {\n                temp[i] = x;\n               \
    \ i++;\n            }\n        }\n        result = temp[0..i];\n    }\n    return\
    \ result;\n}\nunittest\n{\n    alias candidate = generate_integers;\n\n    assert(candidate(2L,\
    \ 10L) == [2L, 4L, 6L, 8L]);\n    assert(candidate(10L, 2L) == [2L, 4L, 6L, 8L]);\n\
    \    assert(candidate(132L, 2L) == [2L, 4L, 6L, 8L]);\n    assert(candidate(17L,\
    \ 89L) == []);\n}\nvoid main(){}"
  status: SyntaxError
  stderr: '/tmp/tmpaq_sq6lj.d(28): Error: no property `iota` for type `long`

    Failed: ["dmd", "-unittest", "-v", "-o-", "/tmp/tmpaq_sq6lj.d", "-I/tmp"]

    '
  stdout: ''
  timestamp: 1660163091
- exit_code: 1
  program: "import std.typecons;\nimport std.math;\n/*\n\n    Given two positive integers\
    \ a and b, return the even digits between a\n    and b, in ascending order.\n\n\
    \    For example:\n    >>> generate_integers(2L, 8L)\n    [2L, 4L, 6L, 8L]\n \
    \   >>> generate_integers(8L, 2L)\n    [2L, 4L, 6L, 8L]\n    >>> generate_integers(10L,\
    \ 14L)\n    []\n    \n*/\nlong[] generate_integers(long a, long b) \n{\n    long[]\
    \ result;\n    if (a > b)\n    {\n        result = generate_integers(b, a);\n\
    \    }\n    else\n    {\n        result = [];\n        foreach (i; a..b+1)\n \
    \       {\n            if (i % 2 == 0)\n            {\n                result\
    \ ~= i;\n            }\n        }\n    }\n    return result;\n}\nunittest\n{\n\
    \    alias candidate = generate_integers;\n\n    assert(candidate(2L, 10L) ==\
    \ [2L, 4L, 6L, 8L]);\n    assert(candidate(10L, 2L) == [2L, 4L, 6L, 8L]);\n  \
    \  assert(candidate(132L, 2L) == [2L, 4L, 6L, 8L]);\n    assert(candidate(17L,\
    \ 89L) == []);\n}\nvoid main(){}"
  status: Exception
  stderr: 'core.exception.AssertError@/tmp/tmph7b7qda4.d(41): unittest failure

    ----------------

    ??:? _d_unittestp [0x4283cd]

    ??:? void tmph7b7qda4.__unittest_L37_C1() [0x427f60]

    ??:? void tmph7b7qda4.__modtest() [0x428150]

    ??:? int core.runtime.runModuleUnitTests().__foreachbody2(object.ModuleInfo*)
    [0x42cda3]

    ??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)).__lambda2(immutable(object.ModuleInfo*))
    [0x42bc36]

    ??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))).__foreachbody2(ref
    rt.sections_elf_shared.DSO) [0x430689]

    ??:? int rt.sections_elf_shared.DSO.opApply(scope int delegate(ref rt.sections_elf_shared.DSO))
    [0x430b38]

    ??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*)))
    [0x430615]

    ??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)) [0x42bc0d]

    ??:? runModuleUnitTests [0x42cb79]

    ??:? void rt.dmain2._d_run_main(int, char**, extern (C) int function(char[][])*).runAll()
    [0x42881c]

    ??:? void rt.dmain2._d_r'
  stdout: ''
  timestamp: 1660163090
- exit_code: 1
  program: "import std.typecons;\nimport std.math;\n/*\n\n    Given two positive integers\
    \ a and b, return the even digits between a\n    and b, in ascending order.\n\n\
    \    For example:\n    >>> generate_integers(2L, 8L)\n    [2L, 4L, 6L, 8L]\n \
    \   >>> generate_integers(8L, 2L)\n    [2L, 4L, 6L, 8L]\n    >>> generate_integers(10L,\
    \ 14L)\n    []\n    \n*/\nlong[] generate_integers(long a, long b) \n{\n    long[]\
    \ result;\n    if (a > b)\n    {\n        result = generate_integers(b, a);\n\
    \    }\n    else\n    {\n        result = [];\n        foreach (i; a..b+1)\n \
    \       {\n            if (i % 2 == 0)\n            {\n                result\
    \ ~= i;\n            }\n        }\n    }\n    return result;\n}\nunittest\n{\n\
    \    alias candidate = generate_integers;\n\n    assert(candidate(2L, 10L) ==\
    \ [2L, 4L, 6L, 8L]);\n    assert(candidate(10L, 2L) == [2L, 4L, 6L, 8L]);\n  \
    \  assert(candidate(132L, 2L) == [2L, 4L, 6L, 8L]);\n    assert(candidate(17L,\
    \ 89L) == []);\n}\nvoid main(){}"
  status: Exception
  stderr: 'core.exception.AssertError@/tmp/tmph7b7qda4.d(41): unittest failure

    ----------------

    ??:? _d_unittestp [0x4283cd]

    ??:? void tmph7b7qda4.__unittest_L37_C1() [0x427f60]

    ??:? void tmph7b7qda4.__modtest() [0x428150]

    ??:? int core.runtime.runModuleUnitTests().__foreachbody2(object.ModuleInfo*)
    [0x42cda3]

    ??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)).__lambda2(immutable(object.ModuleInfo*))
    [0x42bc36]

    ??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))).__foreachbody2(ref
    rt.sections_elf_shared.DSO) [0x430689]

    ??:? int rt.sections_elf_shared.DSO.opApply(scope int delegate(ref rt.sections_elf_shared.DSO))
    [0x430b38]

    ??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*)))
    [0x430615]

    ??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)) [0x42bc0d]

    ??:? runModuleUnitTests [0x42cb79]

    ??:? void rt.dmain2._d_run_main(int, char**, extern (C) int function(char[][])*).runAll()
    [0x42881c]

    ??:? void rt.dmain2._d_r'
  stdout: ''
  timestamp: 1660163090
- exit_code: 1
  program: "import std.typecons;\nimport std.math;\n/*\n\n    Given two positive integers\
    \ a and b, return the even digits between a\n    and b, in ascending order.\n\n\
    \    For example:\n    >>> generate_integers(2L, 8L)\n    [2L, 4L, 6L, 8L]\n \
    \   >>> generate_integers(8L, 2L)\n    [2L, 4L, 6L, 8L]\n    >>> generate_integers(10L,\
    \ 14L)\n    []\n    \n*/\nlong[] generate_integers(long a, long b) \n{\n    long[]\
    \ result;\n    if (a > b) \n    {\n        result = generate_integers(b, a);\n\
    \    } \n    else \n    {\n        result = new long[];\n        foreach (i; a..b)\
    \ \n        {\n            if (i % 2 == 0) \n            {\n                result\
    \ ~= i;\n            }\n        }\n    }\n    return result;\n}\nunittest\n{\n\
    \    alias candidate = generate_integers;\n\n    assert(candidate(2L, 10L) ==\
    \ [2L, 4L, 6L, 8L]);\n    assert(candidate(10L, 2L) == [2L, 4L, 6L, 8L]);\n  \
    \  assert(candidate(132L, 2L) == [2L, 4L, 6L, 8L]);\n    assert(candidate(17L,\
    \ 89L) == []);\n}\nvoid main(){}"
  status: SyntaxError
  stderr: '/tmp/tmpb12r8p_o.d(26): Error: new can only create structs, dynamic arrays
    or class objects, not `long[]`''s

    Failed: ["dmd", "-unittest", "-v", "-o-", "/tmp/tmpb12r8p_o.d", "-I/tmp"]

    '
  stdout: ''
  timestamp: 1660163091
- exit_code: 1
  program: "import std.typecons;\nimport std.math;\n/*\n\n    Given two positive integers\
    \ a and b, return the even digits between a\n    and b, in ascending order.\n\n\
    \    For example:\n    >>> generate_integers(2L, 8L)\n    [2L, 4L, 6L, 8L]\n \
    \   >>> generate_integers(8L, 2L)\n    [2L, 4L, 6L, 8L]\n    >>> generate_integers(10L,\
    \ 14L)\n    []\n    \n*/\nlong[] generate_integers(long a, long b) \n{\n    long[]\
    \ result;\n    if (a > b)\n    {\n        result = generate_integers(b, a);\n\
    \    }\n    else\n    {\n        result = new long[0];\n        if (a % 2 == 0)\n\
    \        {\n            result ~= a;\n        }\n        if (b % 2 == 0)\n   \
    \     {\n            result ~= b;\n        }\n        if (a % 2 == 1)\n      \
    \  {\n            a++;\n        }\n        if (b % 2 == 1)\n        {\n      \
    \      b--;\n        }\n        if (a < b)\n        {\n            result ~= generate_integers(a\
    \ + 2, b);\n        }\n    }\n    return result;\n}\nunittest\n{\n    alias candidate\
    \ = generate_integers;\n\n    assert(candidate(2L, 10L) == [2L, 4L, 6L, 8L]);\n\
    \    assert(candidate(10L, 2L) == [2L, 4L, 6L, 8L]);\n    assert(candidate(132L,\
    \ 2L) == [2L, 4L, 6L, 8L]);\n    assert(candidate(17L, 89L) == []);\n}\nvoid main(){}"
  status: Exception
  stderr: 'core.exception.AssertError@/tmp/tmpxmsbmo59.d(54): unittest failure

    ----------------

    ??:? _d_unittestp [0x42844d]

    ??:? void tmpxmsbmo59.__unittest_L50_C1() [0x427fe0]

    ??:? void tmpxmsbmo59.__modtest() [0x4281d0]

    ??:? int core.runtime.runModuleUnitTests().__foreachbody2(object.ModuleInfo*)
    [0x42cf2f]

    ??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)).__lambda2(immutable(object.ModuleInfo*))
    [0x42bdc2]

    ??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))).__foreachbody2(ref
    rt.sections_elf_shared.DSO) [0x43085d]

    ??:? int rt.sections_elf_shared.DSO.opApply(scope int delegate(ref rt.sections_elf_shared.DSO))
    [0x430d0c]

    ??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*)))
    [0x4307e9]

    ??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)) [0x42bd99]

    ??:? runModuleUnitTests [0x42cd05]

    ??:? void rt.dmain2._d_run_main(int, char**, extern (C) int function(char[][])*).runAll()
    [0x42889c]

    ??:? void rt.dmain2._d_r'
  stdout: ''
  timestamp: 1660163092
- exit_code: 1
  program: "import std.typecons;\nimport std.math;\n/*\n\n    Given two positive integers\
    \ a and b, return the even digits between a\n    and b, in ascending order.\n\n\
    \    For example:\n    >>> generate_integers(2L, 8L)\n    [2L, 4L, 6L, 8L]\n \
    \   >>> generate_integers(8L, 2L)\n    [2L, 4L, 6L, 8L]\n    >>> generate_integers(10L,\
    \ 14L)\n    []\n    \n*/\nlong[] generate_integers(long a, long b) \n{\n    long[]\
    \ result;\n    if (a > b)\n    {\n        result = generate_integers(b, a);\n\
    \    }\n    else\n    {\n        if (a % 2 == 0)\n        {\n            result\
    \ = new long[(b - a) / 2 + 1];\n            for (int i = 0; i < result.length;\
    \ i++)\n            {\n                result[i] = a + i * 2;\n            }\n\
    \        }\n        else\n        {\n            result = new long[(b - a - 1)\
    \ / 2 + 1];\n            for (int i = 0; i < result.length; i++)\n           \
    \ {\n                result[i] = a + i * 2 + 1;\n            }\n        }\n  \
    \  }\n    return result;\n}\nunittest\n{\n    alias candidate = generate_integers;\n\
    \n    assert(candidate(2L, 10L) == [2L, 4L, 6L, 8L]);\n    assert(candidate(10L,\
    \ 2L) == [2L, 4L, 6L, 8L]);\n    assert(candidate(132L, 2L) == [2L, 4L, 6L, 8L]);\n\
    \    assert(candidate(17L, 89L) == []);\n}\nvoid main(){}"
  status: Exception
  stderr: 'core.exception.AssertError@/tmp/tmp6zh978ja.d(49): unittest failure

    ----------------

    ??:? _d_unittestp [0x428455]

    ??:? void tmp6zh978ja.__unittest_L45_C1() [0x427fe4]

    ??:? void tmp6zh978ja.__modtest() [0x4281d4]

    ??:? int core.runtime.runModuleUnitTests().__foreachbody2(object.ModuleInfo*)
    [0x42c50f]

    ??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)).__lambda2(immutable(object.ModuleInfo*))
    [0x42b3a2]

    ??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))).__foreachbody2(ref
    rt.sections_elf_shared.DSO) [0x43062d]

    ??:? int rt.sections_elf_shared.DSO.opApply(scope int delegate(ref rt.sections_elf_shared.DSO))
    [0x430adc]

    ??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*)))
    [0x4305b9]

    ??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)) [0x42b379]

    ??:? runModuleUnitTests [0x42c2e5]

    ??:? void rt.dmain2._d_run_main(int, char**, extern (C) int function(char[][])*).runAll()
    [0x428918]

    ??:? void rt.dmain2._d_r'
  stdout: ''
  timestamp: 1660163091
- exit_code: 1
  program: "import std.typecons;\nimport std.math;\n/*\n\n    Given two positive integers\
    \ a and b, return the even digits between a\n    and b, in ascending order.\n\n\
    \    For example:\n    >>> generate_integers(2L, 8L)\n    [2L, 4L, 6L, 8L]\n \
    \   >>> generate_integers(8L, 2L)\n    [2L, 4L, 6L, 8L]\n    >>> generate_integers(10L,\
    \ 14L)\n    []\n    \n*/\nlong[] generate_integers(long a, long b) \n{\n    long[]\
    \ result;\n    if (a > b)\n    {\n        long temp = a;\n        a = b;\n   \
    \     b = temp;\n    }\n    if (a % 2 != 0)\n    {\n        a++;\n    }\n    if\
    \ (b % 2 != 0)\n    {\n        b--;\n    }\n    if (a > b)\n    {\n        return\
    \ result;\n    }\n    result = new long[(b - a) / 2 + 1];\n    for (long i = 0;\
    \ i < result.length; i++)\n    {\n        result[i] = a + i * 2;\n    }\n    return\
    \ result;\n}\nunittest\n{\n    alias candidate = generate_integers;\n\n    assert(candidate(2L,\
    \ 10L) == [2L, 4L, 6L, 8L]);\n    assert(candidate(10L, 2L) == [2L, 4L, 6L, 8L]);\n\
    \    assert(candidate(132L, 2L) == [2L, 4L, 6L, 8L]);\n    assert(candidate(17L,\
    \ 89L) == []);\n}\nvoid main(){}"
  status: Exception
  stderr: 'core.exception.AssertError@/tmp/tmpnij5f97r.d(49): unittest failure

    ----------------

    ??:? _d_unittestp [0x4283fd]

    ??:? void tmpnij5f97r.__unittest_L45_C1() [0x427f90]

    ??:? void tmpnij5f97r.__modtest() [0x428180]

    ??:? int core.runtime.runModuleUnitTests().__foreachbody2(object.ModuleInfo*)
    [0x42c4b7]

    ??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)).__lambda2(immutable(object.ModuleInfo*))
    [0x42b34a]

    ??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))).__foreachbody2(ref
    rt.sections_elf_shared.DSO) [0x4305d5]

    ??:? int rt.sections_elf_shared.DSO.opApply(scope int delegate(ref rt.sections_elf_shared.DSO))
    [0x430a84]

    ??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*)))
    [0x430561]

    ??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)) [0x42b321]

    ??:? runModuleUnitTests [0x42c28d]

    ??:? void rt.dmain2._d_run_main(int, char**, extern (C) int function(char[][])*).runAll()
    [0x4288c0]

    ??:? void rt.dmain2._d_r'
  stdout: ''
  timestamp: 1660163092
- exit_code: 1
  program: "import std.typecons;\nimport std.math;\n/*\n\n    Given two positive integers\
    \ a and b, return the even digits between a\n    and b, in ascending order.\n\n\
    \    For example:\n    >>> generate_integers(2L, 8L)\n    [2L, 4L, 6L, 8L]\n \
    \   >>> generate_integers(8L, 2L)\n    [2L, 4L, 6L, 8L]\n    >>> generate_integers(10L,\
    \ 14L)\n    []\n    \n*/\nlong[] generate_integers(long a, long b) \n{\n    long[]\
    \ result;\n    if (a > b)\n    {\n        result = generate_integers(b, a);\n\
    \    }\n    else\n    {\n        if (a % 2 == 0)\n        {\n            result\
    \ = new long[(b - a) / 2 + 1];\n            foreach (i, ref e; result)\n     \
    \       {\n                e = a + i * 2;\n            }\n        }\n        else\n\
    \        {\n            result = new long[(b - a) / 2];\n            foreach (i,\
    \ ref e; result)\n            {\n                e = a + i * 2 + 1;\n        \
    \    }\n        }\n    }\n    return result;\n}\nunittest\n{\n    alias candidate\
    \ = generate_integers;\n\n    assert(candidate(2L, 10L) == [2L, 4L, 6L, 8L]);\n\
    \    assert(candidate(10L, 2L) == [2L, 4L, 6L, 8L]);\n    assert(candidate(132L,\
    \ 2L) == [2L, 4L, 6L, 8L]);\n    assert(candidate(17L, 89L) == []);\n}\nvoid main(){}"
  status: Exception
  stderr: 'core.exception.AssertError@/tmp/tmp0ts2im9q.d(49): unittest failure

    ----------------

    ??:? _d_unittestp [0x428425]

    ??:? void tmp0ts2im9q.__unittest_L45_C1() [0x427fb4]

    ??:? void tmp0ts2im9q.__modtest() [0x4281a4]

    ??:? int core.runtime.runModuleUnitTests().__foreachbody2(object.ModuleInfo*)
    [0x42c46b]

    ??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)).__lambda2(immutable(object.ModuleInfo*))
    [0x42b2fe]

    ??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))).__foreachbody2(ref
    rt.sections_elf_shared.DSO) [0x430589]

    ??:? int rt.sections_elf_shared.DSO.opApply(scope int delegate(ref rt.sections_elf_shared.DSO))
    [0x430a38]

    ??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*)))
    [0x430515]

    ??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)) [0x42b2d5]

    ??:? runModuleUnitTests [0x42c241]

    ??:? void rt.dmain2._d_run_main(int, char**, extern (C) int function(char[][])*).runAll()
    [0x428874]

    ??:? void rt.dmain2._d_r'
  stdout: ''
  timestamp: 1660163092
- exit_code: 1
  program: "import std.typecons;\nimport std.math;\n/*\n\n    Given two positive integers\
    \ a and b, return the even digits between a\n    and b, in ascending order.\n\n\
    \    For example:\n    >>> generate_integers(2L, 8L)\n    [2L, 4L, 6L, 8L]\n \
    \   >>> generate_integers(8L, 2L)\n    [2L, 4L, 6L, 8L]\n    >>> generate_integers(10L,\
    \ 14L)\n    []\n    \n*/\nlong[] generate_integers(long a, long b) \n{\n    long[]\
    \ result;\n    if (a > b)\n    {\n        result = generate_integers(b, a);\n\
    \    }\n    else\n    {\n        result = new long[0];\n        for (long i =\
    \ a; i <= b; i++)\n        {\n            if (i % 2 == 0)\n            {\n   \
    \             result ~= i;\n            }\n        }\n    }\n    return result;\n\
    }\nunittest\n{\n    alias candidate = generate_integers;\n\n    assert(candidate(2L,\
    \ 10L) == [2L, 4L, 6L, 8L]);\n    assert(candidate(10L, 2L) == [2L, 4L, 6L, 8L]);\n\
    \    assert(candidate(132L, 2L) == [2L, 4L, 6L, 8L]);\n    assert(candidate(17L,\
    \ 89L) == []);\n}\nvoid main(){}"
  status: Exception
  stderr: 'core.exception.AssertError@/tmp/tmpo37024wm.d(41): unittest failure

    ----------------

    ??:? _d_unittestp [0x4283b5]

    ??:? void tmpo37024wm.__unittest_L37_C1() [0x427f48]

    ??:? void tmpo37024wm.__modtest() [0x428138]

    ??:? int core.runtime.runModuleUnitTests().__foreachbody2(object.ModuleInfo*)
    [0x42cde7]

    ??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)).__lambda2(immutable(object.ModuleInfo*))
    [0x42bc7a]

    ??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))).__foreachbody2(ref
    rt.sections_elf_shared.DSO) [0x4307c5]

    ??:? int rt.sections_elf_shared.DSO.opApply(scope int delegate(ref rt.sections_elf_shared.DSO))
    [0x430c74]

    ??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*)))
    [0x430751]

    ??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)) [0x42bc51]

    ??:? runModuleUnitTests [0x42cbbd]

    ??:? void rt.dmain2._d_run_main(int, char**, extern (C) int function(char[][])*).runAll()
    [0x428804]

    ??:? void rt.dmain2._d_r'
  stdout: ''
  timestamp: 1660163090
- exit_code: 1
  program: "import std.typecons;\nimport std.math;\n/*\n\n    Given two positive integers\
    \ a and b, return the even digits between a\n    and b, in ascending order.\n\n\
    \    For example:\n    >>> generate_integers(2L, 8L)\n    [2L, 4L, 6L, 8L]\n \
    \   >>> generate_integers(8L, 2L)\n    [2L, 4L, 6L, 8L]\n    >>> generate_integers(10L,\
    \ 14L)\n    []\n    \n*/\nlong[] generate_integers(long a, long b) \n{\n    long[]\
    \ result;\n    if (a > b)\n    {\n        result = generate_integers(b, a);\n\
    \    }\n    else\n    {\n        result = [];\n        foreach (i; a..b)\n   \
    \     {\n            if (i % 2 == 0)\n            {\n                result ~=\
    \ i;\n            }\n        }\n    }\n    return result;\n}\nunittest\n{\n  \
    \  alias candidate = generate_integers;\n\n    assert(candidate(2L, 10L) == [2L,\
    \ 4L, 6L, 8L]);\n    assert(candidate(10L, 2L) == [2L, 4L, 6L, 8L]);\n    assert(candidate(132L,\
    \ 2L) == [2L, 4L, 6L, 8L]);\n    assert(candidate(17L, 89L) == []);\n}\nvoid main(){}"
  status: Exception
  stderr: 'core.exception.AssertError@/tmp/tmp9jqzgceq.d(43): unittest failure

    ----------------

    ??:? _d_unittestp [0x4283cd]

    ??:? void tmp9jqzgceq.__unittest_L37_C1() [0x42804c]

    ??:? void tmp9jqzgceq.__modtest() [0x428150]

    ??:? int core.runtime.runModuleUnitTests().__foreachbody2(object.ModuleInfo*)
    [0x42cda3]

    ??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)).__lambda2(immutable(object.ModuleInfo*))
    [0x42bc36]

    ??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))).__foreachbody2(ref
    rt.sections_elf_shared.DSO) [0x430689]

    ??:? int rt.sections_elf_shared.DSO.opApply(scope int delegate(ref rt.sections_elf_shared.DSO))
    [0x430b38]

    ??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*)))
    [0x430615]

    ??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)) [0x42bc0d]

    ??:? runModuleUnitTests [0x42cb79]

    ??:? void rt.dmain2._d_run_main(int, char**, extern (C) int function(char[][])*).runAll()
    [0x42881c]

    ??:? void rt.dmain2._d_r'
  stdout: ''
  timestamp: 1660163090
- exit_code: 1
  program: "import std.typecons;\nimport std.math;\n/*\n\n    Given two positive integers\
    \ a and b, return the even digits between a\n    and b, in ascending order.\n\n\
    \    For example:\n    >>> generate_integers(2L, 8L)\n    [2L, 4L, 6L, 8L]\n \
    \   >>> generate_integers(8L, 2L)\n    [2L, 4L, 6L, 8L]\n    >>> generate_integers(10L,\
    \ 14L)\n    []\n    \n*/\nlong[] generate_integers(long a, long b) \n{\n    long[]\
    \ result;\n    if (a > b)\n    {\n        result = generate_integers(b, a);\n\
    \    }\n    else\n    {\n        result = new long[0];\n        long i = a;\n\
    \        while (i <= b)\n        {\n            if (i % 2 == 0)\n            {\n\
    \                result ~= i;\n            }\n            i++;\n        }\n  \
    \  }\n    return result;\n}\nunittest\n{\n    alias candidate = generate_integers;\n\
    \n    assert(candidate(2L, 10L) == [2L, 4L, 6L, 8L]);\n    assert(candidate(10L,\
    \ 2L) == [2L, 4L, 6L, 8L]);\n    assert(candidate(132L, 2L) == [2L, 4L, 6L, 8L]);\n\
    \    assert(candidate(17L, 89L) == []);\n}\nvoid main(){}"
  status: Exception
  stderr: 'core.exception.AssertError@/tmp/tmp0wqyy1f1.d(43): unittest failure

    ----------------

    ??:? _d_unittestp [0x4283b5]

    ??:? void tmp0wqyy1f1.__unittest_L39_C1() [0x427f48]

    ??:? void tmp0wqyy1f1.__modtest() [0x428138]

    ??:? int core.runtime.runModuleUnitTests().__foreachbody2(object.ModuleInfo*)
    [0x42cde7]

    ??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)).__lambda2(immutable(object.ModuleInfo*))
    [0x42bc7a]

    ??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))).__foreachbody2(ref
    rt.sections_elf_shared.DSO) [0x4307c5]

    ??:? int rt.sections_elf_shared.DSO.opApply(scope int delegate(ref rt.sections_elf_shared.DSO))
    [0x430c74]

    ??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*)))
    [0x430751]

    ??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)) [0x42bc51]

    ??:? runModuleUnitTests [0x42cbbd]

    ??:? void rt.dmain2._d_run_main(int, char**, extern (C) int function(char[][])*).runAll()
    [0x428804]

    ??:? void rt.dmain2._d_r'
  stdout: ''
  timestamp: 1660163091
- exit_code: 1
  program: "import std.typecons;\nimport std.math;\n/*\n\n    Given two positive integers\
    \ a and b, return the even digits between a\n    and b, in ascending order.\n\n\
    \    For example:\n    >>> generate_integers(2L, 8L)\n    [2L, 4L, 6L, 8L]\n \
    \   >>> generate_integers(8L, 2L)\n    [2L, 4L, 6L, 8L]\n    >>> generate_integers(10L,\
    \ 14L)\n    []\n    \n*/\nlong[] generate_integers(long a, long b) \n{\n    long[]\
    \ result;\n    if (a > b)\n    {\n        result = generate_integers(b, a);\n\
    \    }\n    else\n    {\n        result = [];\n        foreach (i; a..b+1)\n \
    \       {\n            if (i % 2 == 0)\n            {\n                result\
    \ ~= i;\n            }\n        }\n    }\n    return result;\n}\nunittest\n{\n\
    \    alias candidate = generate_integers;\n\n    assert(candidate(2L, 10L) ==\
    \ [2L, 4L, 6L, 8L]);\n    assert(candidate(10L, 2L) == [2L, 4L, 6L, 8L]);\n  \
    \  assert(candidate(132L, 2L) == [2L, 4L, 6L, 8L]);\n    assert(candidate(17L,\
    \ 89L) == []);\n}\nvoid main(){}"
  status: Exception
  stderr: 'core.exception.AssertError@/tmp/tmph7b7qda4.d(41): unittest failure

    ----------------

    ??:? _d_unittestp [0x4283cd]

    ??:? void tmph7b7qda4.__unittest_L37_C1() [0x427f60]

    ??:? void tmph7b7qda4.__modtest() [0x428150]

    ??:? int core.runtime.runModuleUnitTests().__foreachbody2(object.ModuleInfo*)
    [0x42cda3]

    ??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)).__lambda2(immutable(object.ModuleInfo*))
    [0x42bc36]

    ??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))).__foreachbody2(ref
    rt.sections_elf_shared.DSO) [0x430689]

    ??:? int rt.sections_elf_shared.DSO.opApply(scope int delegate(ref rt.sections_elf_shared.DSO))
    [0x430b38]

    ??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*)))
    [0x430615]

    ??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)) [0x42bc0d]

    ??:? runModuleUnitTests [0x42cb79]

    ??:? void rt.dmain2._d_run_main(int, char**, extern (C) int function(char[][])*).runAll()
    [0x42881c]

    ??:? void rt.dmain2._d_r'
  stdout: ''
  timestamp: 1660163090
- exit_code: 1
  program: "import std.typecons;\nimport std.math;\n/*\n\n    Given two positive integers\
    \ a and b, return the even digits between a\n    and b, in ascending order.\n\n\
    \    For example:\n    >>> generate_integers(2L, 8L)\n    [2L, 4L, 6L, 8L]\n \
    \   >>> generate_integers(8L, 2L)\n    [2L, 4L, 6L, 8L]\n    >>> generate_integers(10L,\
    \ 14L)\n    []\n    \n*/\nlong[] generate_integers(long a, long b) \n{\n    long[]\
    \ result;\n    if (a > b) \n    {\n        result = generate_integers(b, a);\n\
    \    } \n    else \n    {\n        result = new long[];\n        for (long i =\
    \ a; i <= b; i++) \n        {\n            if (i % 2 == 0) \n            {\n \
    \               result ~= i;\n            }\n        }\n    }\n    return result;\n\
    }\nunittest\n{\n    alias candidate = generate_integers;\n\n    assert(candidate(2L,\
    \ 10L) == [2L, 4L, 6L, 8L]);\n    assert(candidate(10L, 2L) == [2L, 4L, 6L, 8L]);\n\
    \    assert(candidate(132L, 2L) == [2L, 4L, 6L, 8L]);\n    assert(candidate(17L,\
    \ 89L) == []);\n}\nvoid main(){}"
  status: SyntaxError
  stderr: '/tmp/tmp4k07cxmd.d(26): Error: new can only create structs, dynamic arrays
    or class objects, not `long[]`''s

    Failed: ["dmd", "-unittest", "-v", "-o-", "/tmp/tmp4k07cxmd.d", "-I/tmp"]

    '
  stdout: ''
  timestamp: 1660163092
- exit_code: 1
  program: "import std.typecons;\nimport std.math;\n/*\n\n    Given two positive integers\
    \ a and b, return the even digits between a\n    and b, in ascending order.\n\n\
    \    For example:\n    >>> generate_integers(2L, 8L)\n    [2L, 4L, 6L, 8L]\n \
    \   >>> generate_integers(8L, 2L)\n    [2L, 4L, 6L, 8L]\n    >>> generate_integers(10L,\
    \ 14L)\n    []\n    \n*/\nlong[] generate_integers(long a, long b) \n{\n    long[]\
    \ result;\n    if (a > b)\n    {\n        result = generate_integers(b, a);\n\
    \    }\n    else\n    {\n        result = new long[];\n        foreach (i; a..b+1)\n\
    \        {\n            if (i % 2 == 0)\n            {\n                result\
    \ ~= i;\n            }\n        }\n    }\n    return result;\n}\nunittest\n{\n\
    \    alias candidate = generate_integers;\n\n    assert(candidate(2L, 10L) ==\
    \ [2L, 4L, 6L, 8L]);\n    assert(candidate(10L, 2L) == [2L, 4L, 6L, 8L]);\n  \
    \  assert(candidate(132L, 2L) == [2L, 4L, 6L, 8L]);\n    assert(candidate(17L,\
    \ 89L) == []);\n}\nvoid main(){}"
  status: SyntaxError
  stderr: '/tmp/tmpgb5373zm.d(26): Error: new can only create structs, dynamic arrays
    or class objects, not `long[]`''s

    Failed: ["dmd", "-unittest", "-v", "-o-", "/tmp/tmpgb5373zm.d", "-I/tmp"]

    '
  stdout: ''
  timestamp: 1660163090
- exit_code: 1
  program: "import std.typecons;\nimport std.math;\n/*\n\n    Given two positive integers\
    \ a and b, return the even digits between a\n    and b, in ascending order.\n\n\
    \    For example:\n    >>> generate_integers(2L, 8L)\n    [2L, 4L, 6L, 8L]\n \
    \   >>> generate_integers(8L, 2L)\n    [2L, 4L, 6L, 8L]\n    >>> generate_integers(10L,\
    \ 14L)\n    []\n    \n*/\nlong[] generate_integers(long a, long b) \n{\n    long\
    \ min = min(a, b);\n    long max = max(a, b);\n    long[] result = [];\n    foreach(i;\
    \ min..max)\n    {\n        if(i % 2 == 0)\n        {\n            result ~= i;\n\
    \        }\n    }\n    return result;\n}\nunittest\n{\n    alias candidate = generate_integers;\n\
    \n    assert(candidate(2L, 10L) == [2L, 4L, 6L, 8L]);\n    assert(candidate(10L,\
    \ 2L) == [2L, 4L, 6L, 8L]);\n    assert(candidate(132L, 2L) == [2L, 4L, 6L, 8L]);\n\
    \    assert(candidate(17L, 89L) == []);\n}\nvoid main(){}"
  status: SyntaxError
  stderr: '/tmp/tmp8bga81s9.d(19): Error: undefined identifier `min`, did you mean
    function `main`?

    /tmp/tmp8bga81s9.d(20): Error: undefined identifier `max`, did you mean function
    `fmax`?

    Failed: ["dmd", "-unittest", "-v", "-o-", "/tmp/tmp8bga81s9.d", "-I/tmp"]

    '
  stdout: ''
  timestamp: 1660163091
- exit_code: 1
  program: "import std.typecons;\nimport std.math;\n/*\n\n    Given two positive integers\
    \ a and b, return the even digits between a\n    and b, in ascending order.\n\n\
    \    For example:\n    >>> generate_integers(2L, 8L)\n    [2L, 4L, 6L, 8L]\n \
    \   >>> generate_integers(8L, 2L)\n    [2L, 4L, 6L, 8L]\n    >>> generate_integers(10L,\
    \ 14L)\n    []\n    \n*/\nlong[] generate_integers(long a, long b) \n{\n    long[]\
    \ result;\n    if (a > b)\n    {\n        long temp = a;\n        a = b;\n   \
    \     b = temp;\n    }\n    if (a % 2 == 0)\n    {\n        result = new long[(b\
    \ - a) / 2 + 1];\n        result[0] = a;\n        for (int i = 1; i < result.length;\
    \ i++)\n        {\n            result[i] = result[i - 1] + 2;\n        }\n   \
    \ }\n    else\n    {\n        result = new long[(b - a - 1) / 2 + 1];\n      \
    \  result[0] = a + 1;\n        for (int i = 1; i < result.length; i++)\n     \
    \   {\n            result[i] = result[i - 1] + 2;\n        }\n    }\n    return\
    \ result;\n}\nunittest\n{\n    alias candidate = generate_integers;\n\n    assert(candidate(2L,\
    \ 10L) == [2L, 4L, 6L, 8L]);\n    assert(candidate(10L, 2L) == [2L, 4L, 6L, 8L]);\n\
    \    assert(candidate(132L, 2L) == [2L, 4L, 6L, 8L]);\n    assert(candidate(17L,\
    \ 89L) == []);\n}\nvoid main(){}"
  status: Exception
  stderr: 'core.exception.AssertError@/tmp/tmp1v_dfe6u.d(50): unittest failure

    ----------------

    ??:? _d_unittestp [0x4284cd]

    ??:? void tmp1v_dfe6u.__unittest_L46_C1() [0x42805c]

    ??:? void tmp1v_dfe6u.__modtest() [0x42824c]

    ??:? int core.runtime.runModuleUnitTests().__foreachbody2(object.ModuleInfo*)
    [0x42c587]

    ??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)).__lambda2(immutable(object.ModuleInfo*))
    [0x42b41a]

    ??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))).__foreachbody2(ref
    rt.sections_elf_shared.DSO) [0x4306a5]

    ??:? int rt.sections_elf_shared.DSO.opApply(scope int delegate(ref rt.sections_elf_shared.DSO))
    [0x430b54]

    ??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*)))
    [0x430631]

    ??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)) [0x42b3f1]

    ??:? runModuleUnitTests [0x42c35d]

    ??:? void rt.dmain2._d_run_main(int, char**, extern (C) int function(char[][])*).runAll()
    [0x428990]

    ??:? void rt.dmain2._d_r'
  stdout: ''
  timestamp: 1660163092
- exit_code: 1
  program: "import std.typecons;\nimport std.math;\n/*\n\n    Given two positive integers\
    \ a and b, return the even digits between a\n    and b, in ascending order.\n\n\
    \    For example:\n    >>> generate_integers(2L, 8L)\n    [2L, 4L, 6L, 8L]\n \
    \   >>> generate_integers(8L, 2L)\n    [2L, 4L, 6L, 8L]\n    >>> generate_integers(10L,\
    \ 14L)\n    []\n    \n*/\nlong[] generate_integers(long a, long b) \n{\n    long[]\
    \ result;\n    if (a > b)\n    {\n        result = generate_integers(b, a);\n\
    \    }\n    else if (a % 2 == 0)\n    {\n        result = generate_integers(a\
    \ + 1, b);\n        result = result.insert(0, a);\n    }\n    else\n    {\n  \
    \      result = generate_integers(a + 1, b);\n    }\n    return result;\n}\nunittest\n\
    {\n    alias candidate = generate_integers;\n\n    assert(candidate(2L, 10L) ==\
    \ [2L, 4L, 6L, 8L]);\n    assert(candidate(10L, 2L) == [2L, 4L, 6L, 8L]);\n  \
    \  assert(candidate(132L, 2L) == [2L, 4L, 6L, 8L]);\n    assert(candidate(17L,\
    \ 89L) == []);\n}\nvoid main(){}"
  status: SyntaxError
  stderr: '/tmp/tmp9w572ez_.d(27): Error: no property `insert` for type `long[]`

    Failed: ["dmd", "-unittest", "-v", "-o-", "/tmp/tmp9w572ez_.d", "-I/tmp"]

    '
  stdout: ''
  timestamp: 1660163092
- exit_code: 1
  program: "import std.typecons;\nimport std.math;\n/*\n\n    Given two positive integers\
    \ a and b, return the even digits between a\n    and b, in ascending order.\n\n\
    \    For example:\n    >>> generate_integers(2L, 8L)\n    [2L, 4L, 6L, 8L]\n \
    \   >>> generate_integers(8L, 2L)\n    [2L, 4L, 6L, 8L]\n    >>> generate_integers(10L,\
    \ 14L)\n    []\n    \n*/\nlong[] generate_integers(long a, long b) \n{\n    long[]\
    \ result;\n    if (a > b) \n    {\n        result = generate_integers(b, a);\n\
    \    } \n    else \n    {\n        if (a % 2 == 0) \n        {\n            result\
    \ = new long[(b - a) / 2 + 1];\n            for (long i = 0; i < result.length;\
    \ i++) \n            {\n                result[i] = a + 2 * i;\n            }\n\
    \        } \n        else \n        {\n            result = new long[(b - a -\
    \ 1) / 2 + 1];\n            for (long i = 0; i < result.length; i++) \n      \
    \      {\n                result[i] = a + 2 * i + 1;\n            }\n        }\n\
    \    }\n    return result;\n}\n/*\n    Given a positive integer n, return the\
    \ nth Fibonacci number.\nunittest\n{\n    alias candidate = generate_integers;\n\
    \n    assert(candidate(2L, 10L) == [2L, 4L, 6L, 8L]);\n    assert(candidate(10L,\
    \ 2L) == [2L, 4L, 6L, 8L]);\n    assert(candidate(132L, 2L) == [2L, 4L, 6L, 8L]);\n\
    \    assert(candidate(17L, 89L) == []);\n}\nvoid main(){}"
  status: SyntaxError
  stderr: '/tmp/tmpst3b0h2q.d(45): Error: unterminated /* */ comment

    Failed: ["dmd", "-unittest", "-v", "-o-", "/tmp/tmpst3b0h2q.d", "-I/tmp"]

    '
  stdout: ''
  timestamp: 1660163091
- exit_code: 1
  program: "import std.typecons;\nimport std.math;\n/*\n\n    Given two positive integers\
    \ a and b, return the even digits between a\n    and b, in ascending order.\n\n\
    \    For example:\n    >>> generate_integers(2L, 8L)\n    [2L, 4L, 6L, 8L]\n \
    \   >>> generate_integers(8L, 2L)\n    [2L, 4L, 6L, 8L]\n    >>> generate_integers(10L,\
    \ 14L)\n    []\n    \n*/\nlong[] generate_integers(long a, long b) \n{\n    if\
    \ (a > b)\n    {\n        long temp = a;\n        a = b;\n        b = temp;\n\
    \    }\n    long[] result = new long[];\n    for (long i = a; i <= b; i++)\n \
    \   {\n        if (i % 2 == 0)\n        {\n            result ~= i;\n        }\n\
    \    }\n    return result;\n}\nunittest\n{\n    alias candidate = generate_integers;\n\
    \n    assert(candidate(2L, 10L) == [2L, 4L, 6L, 8L]);\n    assert(candidate(10L,\
    \ 2L) == [2L, 4L, 6L, 8L]);\n    assert(candidate(132L, 2L) == [2L, 4L, 6L, 8L]);\n\
    \    assert(candidate(17L, 89L) == []);\n}\nvoid main(){}"
  status: SyntaxError
  stderr: '/tmp/tmpzpzfez5i.d(25): Error: new can only create structs, dynamic arrays
    or class objects, not `long[]`''s

    Failed: ["dmd", "-unittest", "-v", "-o-", "/tmp/tmpzpzfez5i.d", "-I/tmp"]

    '
  stdout: ''
  timestamp: 1660163091
- exit_code: 1
  program: "import std.typecons;\nimport std.math;\n/*\n\n    Given two positive integers\
    \ a and b, return the even digits between a\n    and b, in ascending order.\n\n\
    \    For example:\n    >>> generate_integers(2L, 8L)\n    [2L, 4L, 6L, 8L]\n \
    \   >>> generate_integers(8L, 2L)\n    [2L, 4L, 6L, 8L]\n    >>> generate_integers(10L,\
    \ 14L)\n    []\n    \n*/\nlong[] generate_integers(long a, long b) \n{\n    long[]\
    \ result;\n    if (a > b)\n    {\n        result = generate_integers(b, a);\n\
    \    }\n    else\n    {\n        result = new long[0];\n        for (long i =\
    \ a; i <= b; i++)\n        {\n            if (i % 2 == 0)\n            {\n   \
    \             result ~= i;\n            }\n        }\n    }\n    return result;\n\
    }\nunittest\n{\n    alias candidate = generate_integers;\n\n    assert(candidate(2L,\
    \ 10L) == [2L, 4L, 6L, 8L]);\n    assert(candidate(10L, 2L) == [2L, 4L, 6L, 8L]);\n\
    \    assert(candidate(132L, 2L) == [2L, 4L, 6L, 8L]);\n    assert(candidate(17L,\
    \ 89L) == []);\n}\nvoid main(){}"
  status: Exception
  stderr: 'core.exception.AssertError@/tmp/tmpo37024wm.d(41): unittest failure

    ----------------

    ??:? _d_unittestp [0x4283b5]

    ??:? void tmpo37024wm.__unittest_L37_C1() [0x427f48]

    ??:? void tmpo37024wm.__modtest() [0x428138]

    ??:? int core.runtime.runModuleUnitTests().__foreachbody2(object.ModuleInfo*)
    [0x42cde7]

    ??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)).__lambda2(immutable(object.ModuleInfo*))
    [0x42bc7a]

    ??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))).__foreachbody2(ref
    rt.sections_elf_shared.DSO) [0x4307c5]

    ??:? int rt.sections_elf_shared.DSO.opApply(scope int delegate(ref rt.sections_elf_shared.DSO))
    [0x430c74]

    ??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*)))
    [0x430751]

    ??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)) [0x42bc51]

    ??:? runModuleUnitTests [0x42cbbd]

    ??:? void rt.dmain2._d_run_main(int, char**, extern (C) int function(char[][])*).runAll()
    [0x428804]

    ??:? void rt.dmain2._d_r'
  stdout: ''
  timestamp: 1660163090

name: HumanEval_108_count_nums
language: d
prompt: "import std.typecons;\nimport std.math;\n/*\n\n    Write a function count_nums\
  \ which takes an array of integers and returns\n    the number of elements which\
  \ has a sum of digits > 0.\n    If a number is negative, then its first signed digit\
  \ will be negative:\n    e.g. -123 has signed digits -1, 2, and 3.\n    >>> count_nums([])\n\
  \    0L\n    >>> count_nums([-1L, 11L, -11L])\n    1L\n    >>> count_nums([1L, 1L,\
  \ 2L])\n    3L\n    \n*/\nlong count_nums(long[] arr) \n"
tests: "unittest\n{\n    alias candidate = count_nums;\n\n    assert(candidate([])\
  \ == 0L);\n    assert(candidate([-1L, -2L, 0L]) == 0L);\n    assert(candidate([1L,\
  \ 1L, 2L, -2L, 3L, 4L, 5L]) == 6L);\n    assert(candidate([1L, 6L, 9L, -6L, 0L,\
  \ 1L, 5L]) == 5L);\n    assert(candidate([1L, 100L, 98L, -7L, 1L, -1L]) == 4L);\n\
  \    assert(candidate([12L, 23L, 34L, -45L, -56L, 0L]) == 5L);\n    assert(candidate([0L,\
  \ 1L]) == 1L);\n    assert(candidate([1L]) == 1L);\n}\nvoid main(){}"
completions: ["{\n    long count = 0;\n    foreach(elem; arr)\n    {\n        long\
    \ sum = 0;\n        long num = elem;\n        while(num != 0)\n        {\n   \
    \         sum += num % 10;\n            num /= 10;\n        }\n        if(sum\
    \ > 0)\n            count++;\n    }\n    return count;\n}", "{\n    long count\
    \ = 0;\n    foreach(i; arr)\n    {\n        long sum = 0;\n        long num =\
    \ i;\n        if(num < 0)\n        {\n            num = -num;\n        }\n   \
    \     while(num > 0)\n        {\n            sum += num % 10;\n            num\
    \ /= 10;\n        }\n        if(sum > 0)\n        {\n            count++;\n  \
    \      }\n    }\n    return count;\n}", "{\n    long count = 0;\n    foreach(i;\
    \ arr)\n    {\n        long sum = 0;\n        long num = i;\n        if(num <\
    \ 0)\n        {\n            num = -num;\n        }\n        while(num > 0)\n\
    \        {\n            sum += num % 10;\n            num /= 10;\n        }\n\
    \        if(sum > 0)\n        {\n            count++;\n        }\n    }\n    return\
    \ count;\n}", "{\n    long count = 0;\n    foreach(i; arr)\n    {\n        if(i\
    \ < 0)\n        {\n            i = -i;\n        }\n        long sum = 0;\n   \
    \     while(i > 0)\n        {\n            sum += i % 10;\n            i /= 10;\n\
    \        }\n        if(sum > 0)\n        {\n            count++;\n        }\n\
    \    }\n    return count;\n}", "{\n    long count = 0;\n    foreach(i; arr)\n\
    \    {\n        long sum = 0;\n        long num = i;\n        if(num < 0)\n  \
    \      {\n            num = -num;\n        }\n        while(num > 0)\n       \
    \ {\n            sum += num % 10;\n            num /= 10;\n        }\n       \
    \ if(sum > 0)\n        {\n            count++;\n        }\n    }\n    return count;\n\
    }\n/*", "{\n    long count = 0;\n    foreach(num; arr)\n    {\n        long sum\
    \ = 0;\n        foreach(digit; num.to!string)\n        {\n            if(digit.isDigit)\n\
    \            {\n                sum += digit.to!long;\n            }\n       \
    \ }\n        if(sum > 0)\n        {\n            count++;\n        }\n    }\n\
    \    return count;\n}", "{\n    long count = 0;\n    foreach(i; arr)\n    {\n\
    \        long sum = 0;\n        long num = i;\n        if(num < 0)\n        {\n\
    \            num = -num;\n        }\n        while(num > 0)\n        {\n     \
    \       sum += num % 10;\n            num /= 10;\n        }\n        if(sum >\
    \ 0)\n        {\n            count++;\n        }\n    }\n    return count;\n}",
  "{\n    long count = 0;\n    foreach(i; arr)\n    {\n        if(i < 0)\n       \
    \ {\n            i = -i;\n        }\n        long sum = 0;\n        while(i >\
    \ 0)\n        {\n            sum += i % 10;\n            i /= 10;\n        }\n\
    \        if(sum > 0)\n        {\n            count++;\n        }\n    }\n    return\
    \ count;\n}", "{\n    long count = 0;\n    foreach(i; arr)\n    {\n        if(i\
    \ < 0)\n        {\n            i = -i;\n        }\n        long sum = 0;\n   \
    \     while(i > 0)\n        {\n            sum += i % 10;\n            i /= 10;\n\
    \        }\n        if(sum > 0)\n        {\n            count++;\n        }\n\
    \    }\n    return count;\n}\n/*", "{\n    long count = 0;\n    foreach(i; arr)\n\
    \    {\n        if(i < 0)\n        {\n            i = -i;\n        }\n       \
    \ long sum = 0;\n        while(i > 0)\n        {\n            sum += i % 10;\n\
    \            i /= 10;\n        }\n        if(sum > 0)\n        {\n           \
    \ count++;\n        }\n    }\n    return count;\n}", "{\n    long count = 0;\n\
    \    foreach(i; arr)\n    {\n        long sum = 0;\n        long num = i;\n  \
    \      while(num != 0)\n        {\n            sum += abs(num % 10);\n       \
    \     num /= 10;\n        }\n        if(sum > 0)\n            count++;\n    }\n\
    \    return count;\n}", "{\n    long count = 0;\n    foreach(i; arr)\n    {\n\
    \        long sum = 0;\n        long num = i;\n        if(num < 0)\n        {\n\
    \            num = -num;\n        }\n        while(num != 0)\n        {\n    \
    \        sum += num % 10;\n            num /= 10;\n        }\n        if(sum >\
    \ 0)\n        {\n            count++;\n        }\n    }\n    return count;\n}",
  "{\n    long count = 0;\n    foreach(num; arr)\n    {\n        long sum = 0;\n \
    \       long n = abs(num);\n        while(n > 0)\n        {\n            sum +=\
    \ n % 10;\n            n /= 10;\n        }\n        if(sum > 0)\n            count++;\n\
    \    }\n    return count;\n}", "{\n    long count = 0;\n    foreach(i; arr)\n\
    \    {\n        long sum = 0;\n        long n = i;\n        if(n < 0)\n      \
    \      n = -n;\n        while(n > 0)\n        {\n            sum += n % 10;\n\
    \            n /= 10;\n        }\n        if(sum > 0)\n            count++;\n\
    \    }\n    return count;\n}", "{\n    long count = 0;\n    foreach(idx, val;\
    \ arr)\n    {\n        if(val < 0)\n        {\n            val = -val;\n     \
    \   }\n        long sum = 0;\n        while(val > 0)\n        {\n            sum\
    \ += val % 10;\n            val /= 10;\n        }\n        if(sum > 0)\n     \
    \   {\n            count++;\n        }\n    }\n    return count;\n}", "{\n   \
    \ long count = 0;\n    foreach(elem; arr)\n    {\n        long sum = 0;\n    \
    \    long num = elem;\n        if(num < 0)\n        {\n            num = -num;\n\
    \        }\n        while(num > 0)\n        {\n            sum += num % 10;\n\
    \            num /= 10;\n        }\n        if(sum > 0)\n        {\n         \
    \   count++;\n        }\n    }\n    return count;\n}", "{\n    long count = 0;\n\
    \    foreach(i; arr)\n    {\n        long sum = 0;\n        long num = i;\n  \
    \      while(num != 0)\n        {\n            sum += abs(num % 10);\n       \
    \     num /= 10;\n        }\n        if(sum > 0)\n            count++;\n    }\n\
    \    return count;\n}", "{\n    long count = 0;\n    foreach(i; arr)\n    {\n\
    \        long sum = 0;\n        foreach(j; i.digits)\n        {\n            sum\
    \ += j;\n        }\n        if(sum > 0)\n        {\n            count++;\n   \
    \     }\n    }\n    return count;\n}", "{\n    long count = 0;\n    foreach(i;\
    \ arr)\n    {\n        if(i < 0)\n        {\n            i = -i;\n        }\n\
    \        long sum = 0;\n        while(i > 0)\n        {\n            sum += i\
    \ % 10;\n            i /= 10;\n        }\n        if(sum > 0)\n        {\n   \
    \         count++;\n        }\n    }\n    return count;\n}", "{\n    long count\
    \ = 0;\n    foreach(i; arr)\n    {\n        long sum = 0;\n        long num =\
    \ i;\n        while(num != 0)\n        {\n            sum += abs(num % 10);\n\
    \            num /= 10;\n        }\n        if(sum > 0)\n            count++;\n\
    \    }\n    return count;\n}"]
stop_tokens:
- "\n\n"
- "\nvoid"
- "\nbool"
- "\nint"

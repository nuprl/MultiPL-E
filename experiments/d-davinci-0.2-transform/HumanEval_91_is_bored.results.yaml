language: d
name: HumanEval_91_is_bored
results:
- exit_code: 1
  program: "import std.math;\n/*\n\n    You'll be given a string of words, and your\
    \ task is to count the number\n    of boredoms. A boredom is a sentence that starts\
    \ with the word \"I\".\n    Sentences are delimited by '.', '?' or '!'.\n   \n\
    \    For example:\n    >>> is_bored(\"Hello world\")\n    0L\n    >>> is_bored(\"\
    The sky is blue. The sun is shining. I love this weather\")\n    1L\n    \n*/\n\
    long is_bored(string S) \n{\n    long count = 0;\n    string[] sentences = split(S,\
    \ \".\");\n    foreach(string sentence; sentences)\n    {\n        if(sentence.length\
    \ > 0)\n        {\n            string[] words = split(sentence, \" \");\n    \
    \        if(words[0] == \"I\")\n            {\n                count++;\n    \
    \        }\n        }\n    }\n    return count;\n}\nunittest\n{\n    alias candidate\
    \ = is_bored;\n\n    assert(candidate(\"Hello world\") == 0L);\n    assert(candidate(\"\
    Is the sky blue?\") == 0L);\n    assert(candidate(\"I love It !\") == 1L);\n \
    \   assert(candidate(\"bIt\") == 0L);\n    assert(candidate(\"I feel good today.\
    \ I will be productive. will kill It\") == 2L);\n    assert(candidate(\"You and\
    \ I are going for a walk\") == 0L);\n}\nvoid main(){}"
  status: SyntaxError
  stderr: '/tmp/tmp03651ldh.d(18): Error: undefined identifier `split`

    /tmp/tmp03651ldh.d(23): Error: undefined identifier `split`

    Failed: ["dmd", "-unittest", "-v", "-o-", "/tmp/tmp03651ldh.d", "-I/tmp"]

    '
  stdout: ''
  timestamp: 1660163028
- exit_code: 1
  program: "import std.math;\n/*\n\n    You'll be given a string of words, and your\
    \ task is to count the number\n    of boredoms. A boredom is a sentence that starts\
    \ with the word \"I\".\n    Sentences are delimited by '.', '?' or '!'.\n   \n\
    \    For example:\n    >>> is_bored(\"Hello world\")\n    0L\n    >>> is_bored(\"\
    The sky is blue. The sun is shining. I love this weather\")\n    1L\n    \n*/\n\
    long is_bored(string S) \n{\n    long boredoms = 0;\n    string[] sentences =\
    \ split(S, \".\");\n    foreach(string sentence; sentences)\n    {\n        string[]\
    \ words = split(sentence, \" \");\n        if(words[0] == \"I\")\n           \
    \ boredoms++;\n    }\n    return boredoms;\n}\nunittest\n{\n    alias candidate\
    \ = is_bored;\n\n    assert(candidate(\"Hello world\") == 0L);\n    assert(candidate(\"\
    Is the sky blue?\") == 0L);\n    assert(candidate(\"I love It !\") == 1L);\n \
    \   assert(candidate(\"bIt\") == 0L);\n    assert(candidate(\"I feel good today.\
    \ I will be productive. will kill It\") == 2L);\n    assert(candidate(\"You and\
    \ I are going for a walk\") == 0L);\n}\nvoid main(){}"
  status: SyntaxError
  stderr: '/tmp/tmp1upyxolo.d(18): Error: undefined identifier `split`

    /tmp/tmp1upyxolo.d(21): Error: undefined identifier `split`

    Failed: ["dmd", "-unittest", "-v", "-o-", "/tmp/tmp1upyxolo.d", "-I/tmp"]

    '
  stdout: ''
  timestamp: 1660163028
- exit_code: 1
  program: "import std.math;\n/*\n\n    You'll be given a string of words, and your\
    \ task is to count the number\n    of boredoms. A boredom is a sentence that starts\
    \ with the word \"I\".\n    Sentences are delimited by '.', '?' or '!'.\n   \n\
    \    For example:\n    >>> is_bored(\"Hello world\")\n    0L\n    >>> is_bored(\"\
    The sky is blue. The sun is shining. I love this weather\")\n    1L\n    \n*/\n\
    long is_bored(string S) \n{\n    long boredoms = 0;\n    string[] sentences =\
    \ split(S, \".\");\n    foreach(string sentence; sentences)\n    {\n        string[]\
    \ words = split(sentence, \" \");\n        if(words[0] == \"I\")\n           \
    \ boredoms++;\n    }\n    return boredoms;\n}\nunittest\n{\n    alias candidate\
    \ = is_bored;\n\n    assert(candidate(\"Hello world\") == 0L);\n    assert(candidate(\"\
    Is the sky blue?\") == 0L);\n    assert(candidate(\"I love It !\") == 1L);\n \
    \   assert(candidate(\"bIt\") == 0L);\n    assert(candidate(\"I feel good today.\
    \ I will be productive. will kill It\") == 2L);\n    assert(candidate(\"You and\
    \ I are going for a walk\") == 0L);\n}\nvoid main(){}"
  status: SyntaxError
  stderr: '/tmp/tmp1upyxolo.d(18): Error: undefined identifier `split`

    /tmp/tmp1upyxolo.d(21): Error: undefined identifier `split`

    Failed: ["dmd", "-unittest", "-v", "-o-", "/tmp/tmp1upyxolo.d", "-I/tmp"]

    '
  stdout: ''
  timestamp: 1660163028
- exit_code: 1
  program: "import std.math;\n/*\n\n    You'll be given a string of words, and your\
    \ task is to count the number\n    of boredoms. A boredom is a sentence that starts\
    \ with the word \"I\".\n    Sentences are delimited by '.', '?' or '!'.\n   \n\
    \    For example:\n    >>> is_bored(\"Hello world\")\n    0L\n    >>> is_bored(\"\
    The sky is blue. The sun is shining. I love this weather\")\n    1L\n    \n*/\n\
    long is_bored(string S) \n{\n    long boredoms = 0;\n    string[] sentences =\
    \ split(S, \".\");\n    foreach(string sentence; sentences)\n    {\n        if(sentence.length\
    \ > 0)\n        {\n            string[] words = split(sentence, \" \");\n    \
    \        if(words[0] == \"I\")\n            {\n                boredoms++;\n \
    \           }\n        }\n    }\n    return boredoms;\n}\nunittest\n{\n    alias\
    \ candidate = is_bored;\n\n    assert(candidate(\"Hello world\") == 0L);\n   \
    \ assert(candidate(\"Is the sky blue?\") == 0L);\n    assert(candidate(\"I love\
    \ It !\") == 1L);\n    assert(candidate(\"bIt\") == 0L);\n    assert(candidate(\"\
    I feel good today. I will be productive. will kill It\") == 2L);\n    assert(candidate(\"\
    You and I are going for a walk\") == 0L);\n}\nvoid main(){}"
  status: SyntaxError
  stderr: '/tmp/tmprvolhnpj.d(18): Error: undefined identifier `split`

    /tmp/tmprvolhnpj.d(23): Error: undefined identifier `split`

    Failed: ["dmd", "-unittest", "-v", "-o-", "/tmp/tmprvolhnpj.d", "-I/tmp"]

    '
  stdout: ''
  timestamp: 1660163028
- exit_code: 1
  program: "import std.math;\n/*\n\n    You'll be given a string of words, and your\
    \ task is to count the number\n    of boredoms. A boredom is a sentence that starts\
    \ with the word \"I\".\n    Sentences are delimited by '.', '?' or '!'.\n   \n\
    \    For example:\n    >>> is_bored(\"Hello world\")\n    0L\n    >>> is_bored(\"\
    The sky is blue. The sun is shining. I love this weather\")\n    1L\n    \n*/\n\
    long is_bored(string S) \n{\n    long boredoms = 0;\n    string[] sentences =\
    \ split(S, \".\");\n    foreach(string sentence; sentences)\n    {\n        string[]\
    \ words = split(sentence, \" \");\n        if(words[0] == \"I\")\n           \
    \ boredoms++;\n    }\n    return boredoms;\n}\nunittest\n{\n    alias candidate\
    \ = is_bored;\n\n    assert(candidate(\"Hello world\") == 0L);\n    assert(candidate(\"\
    Is the sky blue?\") == 0L);\n    assert(candidate(\"I love It !\") == 1L);\n \
    \   assert(candidate(\"bIt\") == 0L);\n    assert(candidate(\"I feel good today.\
    \ I will be productive. will kill It\") == 2L);\n    assert(candidate(\"You and\
    \ I are going for a walk\") == 0L);\n}\nvoid main(){}"
  status: SyntaxError
  stderr: '/tmp/tmp1upyxolo.d(18): Error: undefined identifier `split`

    /tmp/tmp1upyxolo.d(21): Error: undefined identifier `split`

    Failed: ["dmd", "-unittest", "-v", "-o-", "/tmp/tmp1upyxolo.d", "-I/tmp"]

    '
  stdout: ''
  timestamp: 1660163028
- exit_code: 1
  program: "import std.math;\n/*\n\n    You'll be given a string of words, and your\
    \ task is to count the number\n    of boredoms. A boredom is a sentence that starts\
    \ with the word \"I\".\n    Sentences are delimited by '.', '?' or '!'.\n   \n\
    \    For example:\n    >>> is_bored(\"Hello world\")\n    0L\n    >>> is_bored(\"\
    The sky is blue. The sun is shining. I love this weather\")\n    1L\n    \n*/\n\
    long is_bored(string S) \n{\n    long boredoms = 0;\n    string[] sentences =\
    \ split(S, \".\");\n    foreach(string sentence; sentences)\n    {\n        string[]\
    \ words = split(sentence, \" \");\n        if(words[0] == \"I\")\n           \
    \ boredoms++;\n    }\n    return boredoms;\n}\nunittest\n{\n    alias candidate\
    \ = is_bored;\n\n    assert(candidate(\"Hello world\") == 0L);\n    assert(candidate(\"\
    Is the sky blue?\") == 0L);\n    assert(candidate(\"I love It !\") == 1L);\n \
    \   assert(candidate(\"bIt\") == 0L);\n    assert(candidate(\"I feel good today.\
    \ I will be productive. will kill It\") == 2L);\n    assert(candidate(\"You and\
    \ I are going for a walk\") == 0L);\n}\nvoid main(){}"
  status: SyntaxError
  stderr: '/tmp/tmp1upyxolo.d(18): Error: undefined identifier `split`

    /tmp/tmp1upyxolo.d(21): Error: undefined identifier `split`

    Failed: ["dmd", "-unittest", "-v", "-o-", "/tmp/tmp1upyxolo.d", "-I/tmp"]

    '
  stdout: ''
  timestamp: 1660163028
- exit_code: 1
  program: "import std.math;\n/*\n\n    You'll be given a string of words, and your\
    \ task is to count the number\n    of boredoms. A boredom is a sentence that starts\
    \ with the word \"I\".\n    Sentences are delimited by '.', '?' or '!'.\n   \n\
    \    For example:\n    >>> is_bored(\"Hello world\")\n    0L\n    >>> is_bored(\"\
    The sky is blue. The sun is shining. I love this weather\")\n    1L\n    \n*/\n\
    long is_bored(string S) \n{\n    long boredoms = 0;\n    string[] sentences =\
    \ split(S, \".\");\n    foreach(string sentence; sentences)\n    {\n        string[]\
    \ words = split(sentence, \" \");\n        if(words[0] == \"I\")\n           \
    \ boredoms++;\n    }\n    return boredoms;\n}\nunittest\n{\n    alias candidate\
    \ = is_bored;\n\n    assert(candidate(\"Hello world\") == 0L);\n    assert(candidate(\"\
    Is the sky blue?\") == 0L);\n    assert(candidate(\"I love It !\") == 1L);\n \
    \   assert(candidate(\"bIt\") == 0L);\n    assert(candidate(\"I feel good today.\
    \ I will be productive. will kill It\") == 2L);\n    assert(candidate(\"You and\
    \ I are going for a walk\") == 0L);\n}\nvoid main(){}"
  status: SyntaxError
  stderr: '/tmp/tmp1upyxolo.d(18): Error: undefined identifier `split`

    /tmp/tmp1upyxolo.d(21): Error: undefined identifier `split`

    Failed: ["dmd", "-unittest", "-v", "-o-", "/tmp/tmp1upyxolo.d", "-I/tmp"]

    '
  stdout: ''
  timestamp: 1660163028
- exit_code: 1
  program: "import std.math;\n/*\n\n    You'll be given a string of words, and your\
    \ task is to count the number\n    of boredoms. A boredom is a sentence that starts\
    \ with the word \"I\".\n    Sentences are delimited by '.', '?' or '!'.\n   \n\
    \    For example:\n    >>> is_bored(\"Hello world\")\n    0L\n    >>> is_bored(\"\
    The sky is blue. The sun is shining. I love this weather\")\n    1L\n    \n*/\n\
    long is_bored(string S) \n{\n    long boredoms = 0;\n    string[] sentences =\
    \ split(S, \".\");\n    foreach(string sentence; sentences)\n    {\n        string[]\
    \ words = split(sentence, \" \");\n        if(words[0] == \"I\")\n           \
    \ boredoms++;\n    }\n    return boredoms;\n}\nunittest\n{\n    alias candidate\
    \ = is_bored;\n\n    assert(candidate(\"Hello world\") == 0L);\n    assert(candidate(\"\
    Is the sky blue?\") == 0L);\n    assert(candidate(\"I love It !\") == 1L);\n \
    \   assert(candidate(\"bIt\") == 0L);\n    assert(candidate(\"I feel good today.\
    \ I will be productive. will kill It\") == 2L);\n    assert(candidate(\"You and\
    \ I are going for a walk\") == 0L);\n}\nvoid main(){}"
  status: SyntaxError
  stderr: '/tmp/tmp1upyxolo.d(18): Error: undefined identifier `split`

    /tmp/tmp1upyxolo.d(21): Error: undefined identifier `split`

    Failed: ["dmd", "-unittest", "-v", "-o-", "/tmp/tmp1upyxolo.d", "-I/tmp"]

    '
  stdout: ''
  timestamp: 1660163028
- exit_code: 1
  program: "import std.math;\n/*\n\n    You'll be given a string of words, and your\
    \ task is to count the number\n    of boredoms. A boredom is a sentence that starts\
    \ with the word \"I\".\n    Sentences are delimited by '.', '?' or '!'.\n   \n\
    \    For example:\n    >>> is_bored(\"Hello world\")\n    0L\n    >>> is_bored(\"\
    The sky is blue. The sun is shining. I love this weather\")\n    1L\n    \n*/\n\
    long is_bored(string S) \n{\n    long boredoms = 0;\n    string[] sentences =\
    \ split(S, \".\");\n    foreach(sentence; sentences)\n    {\n        if(sentence.length\
    \ > 0)\n        {\n            string[] words = split(sentence, \" \");\n    \
    \        if(words[0] == \"I\")\n            {\n                boredoms++;\n \
    \           }\n        }\n    }\n    return boredoms;\n}\nunittest\n{\n    alias\
    \ candidate = is_bored;\n\n    assert(candidate(\"Hello world\") == 0L);\n   \
    \ assert(candidate(\"Is the sky blue?\") == 0L);\n    assert(candidate(\"I love\
    \ It !\") == 1L);\n    assert(candidate(\"bIt\") == 0L);\n    assert(candidate(\"\
    I feel good today. I will be productive. will kill It\") == 2L);\n    assert(candidate(\"\
    You and I are going for a walk\") == 0L);\n}\nvoid main(){}"
  status: SyntaxError
  stderr: '/tmp/tmpmhho1zga.d(18): Error: undefined identifier `split`

    /tmp/tmpmhho1zga.d(23): Error: undefined identifier `split`

    Failed: ["dmd", "-unittest", "-v", "-o-", "/tmp/tmpmhho1zga.d", "-I/tmp"]

    '
  stdout: ''
  timestamp: 1660163028
- exit_code: 1
  program: "import std.math;\n/*\n\n    You'll be given a string of words, and your\
    \ task is to count the number\n    of boredoms. A boredom is a sentence that starts\
    \ with the word \"I\".\n    Sentences are delimited by '.', '?' or '!'.\n   \n\
    \    For example:\n    >>> is_bored(\"Hello world\")\n    0L\n    >>> is_bored(\"\
    The sky is blue. The sun is shining. I love this weather\")\n    1L\n    \n*/\n\
    long is_bored(string S) \n{\n    long boredoms = 0;\n    string[] sentences =\
    \ split(S, \".\");\n    foreach(sentence; sentences)\n    {\n        if(sentence.length\
    \ > 0)\n        {\n            string[] words = split(sentence, \" \");\n    \
    \        if(words[0] == \"I\")\n            {\n                boredoms++;\n \
    \           }\n        }\n    }\n    return boredoms;\n}\nunittest\n{\n    alias\
    \ candidate = is_bored;\n\n    assert(candidate(\"Hello world\") == 0L);\n   \
    \ assert(candidate(\"Is the sky blue?\") == 0L);\n    assert(candidate(\"I love\
    \ It !\") == 1L);\n    assert(candidate(\"bIt\") == 0L);\n    assert(candidate(\"\
    I feel good today. I will be productive. will kill It\") == 2L);\n    assert(candidate(\"\
    You and I are going for a walk\") == 0L);\n}\nvoid main(){}"
  status: SyntaxError
  stderr: '/tmp/tmpmhho1zga.d(18): Error: undefined identifier `split`

    /tmp/tmpmhho1zga.d(23): Error: undefined identifier `split`

    Failed: ["dmd", "-unittest", "-v", "-o-", "/tmp/tmpmhho1zga.d", "-I/tmp"]

    '
  stdout: ''
  timestamp: 1660163028
- exit_code: 1
  program: "import std.math;\n/*\n\n    You'll be given a string of words, and your\
    \ task is to count the number\n    of boredoms. A boredom is a sentence that starts\
    \ with the word \"I\".\n    Sentences are delimited by '.', '?' or '!'.\n   \n\
    \    For example:\n    >>> is_bored(\"Hello world\")\n    0L\n    >>> is_bored(\"\
    The sky is blue. The sun is shining. I love this weather\")\n    1L\n    \n*/\n\
    long is_bored(string S) \n{\n    long boredoms = 0;\n    string[] sentences =\
    \ split(S, \".\");\n    foreach(string sentence; sentences)\n    {\n        string[]\
    \ words = split(sentence, \" \");\n        if(words[0] == \"I\")\n           \
    \ boredoms++;\n    }\n    return boredoms;\n}\nunittest\n{\n    alias candidate\
    \ = is_bored;\n\n    assert(candidate(\"Hello world\") == 0L);\n    assert(candidate(\"\
    Is the sky blue?\") == 0L);\n    assert(candidate(\"I love It !\") == 1L);\n \
    \   assert(candidate(\"bIt\") == 0L);\n    assert(candidate(\"I feel good today.\
    \ I will be productive. will kill It\") == 2L);\n    assert(candidate(\"You and\
    \ I are going for a walk\") == 0L);\n}\nvoid main(){}"
  status: SyntaxError
  stderr: '/tmp/tmp1upyxolo.d(18): Error: undefined identifier `split`

    /tmp/tmp1upyxolo.d(21): Error: undefined identifier `split`

    Failed: ["dmd", "-unittest", "-v", "-o-", "/tmp/tmp1upyxolo.d", "-I/tmp"]

    '
  stdout: ''
  timestamp: 1660163028
- exit_code: 1
  program: "import std.math;\n/*\n\n    You'll be given a string of words, and your\
    \ task is to count the number\n    of boredoms. A boredom is a sentence that starts\
    \ with the word \"I\".\n    Sentences are delimited by '.', '?' or '!'.\n   \n\
    \    For example:\n    >>> is_bored(\"Hello world\")\n    0L\n    >>> is_bored(\"\
    The sky is blue. The sun is shining. I love this weather\")\n    1L\n    \n*/\n\
    long is_bored(string S) \n{\n    long count = 0;\n    string[] sentences = split(S,\
    \ \".\");\n    foreach(string sentence; sentences)\n    {\n        if(sentence.length\
    \ > 0)\n        {\n            string[] words = split(sentence, \" \");\n    \
    \        if(words[0] == \"I\")\n            {\n                count++;\n    \
    \        }\n        }\n    }\n    return count;\n}\nunittest\n{\n    alias candidate\
    \ = is_bored;\n\n    assert(candidate(\"Hello world\") == 0L);\n    assert(candidate(\"\
    Is the sky blue?\") == 0L);\n    assert(candidate(\"I love It !\") == 1L);\n \
    \   assert(candidate(\"bIt\") == 0L);\n    assert(candidate(\"I feel good today.\
    \ I will be productive. will kill It\") == 2L);\n    assert(candidate(\"You and\
    \ I are going for a walk\") == 0L);\n}\nvoid main(){}"
  status: SyntaxError
  stderr: '/tmp/tmp03651ldh.d(18): Error: undefined identifier `split`

    /tmp/tmp03651ldh.d(23): Error: undefined identifier `split`

    Failed: ["dmd", "-unittest", "-v", "-o-", "/tmp/tmp03651ldh.d", "-I/tmp"]

    '
  stdout: ''
  timestamp: 1660163028
- exit_code: 1
  program: "import std.math;\n/*\n\n    You'll be given a string of words, and your\
    \ task is to count the number\n    of boredoms. A boredom is a sentence that starts\
    \ with the word \"I\".\n    Sentences are delimited by '.', '?' or '!'.\n   \n\
    \    For example:\n    >>> is_bored(\"Hello world\")\n    0L\n    >>> is_bored(\"\
    The sky is blue. The sun is shining. I love this weather\")\n    1L\n    \n*/\n\
    long is_bored(string S) \n{\n    long boredoms = 0;\n    string[] sentences =\
    \ split(S, \".\");\n    foreach(string sentence; sentences)\n    {\n        if(sentence.length\
    \ > 0)\n        {\n            if(sentence[0] == 'I')\n            {\n       \
    \         boredoms++;\n            }\n        }\n    }\n    return boredoms;\n\
    }\nunittest\n{\n    alias candidate = is_bored;\n\n    assert(candidate(\"Hello\
    \ world\") == 0L);\n    assert(candidate(\"Is the sky blue?\") == 0L);\n    assert(candidate(\"\
    I love It !\") == 1L);\n    assert(candidate(\"bIt\") == 0L);\n    assert(candidate(\"\
    I feel good today. I will be productive. will kill It\") == 2L);\n    assert(candidate(\"\
    You and I are going for a walk\") == 0L);\n}\nvoid main(){}"
  status: SyntaxError
  stderr: '/tmp/tmp0g6ca0rk.d(18): Error: undefined identifier `split`

    Failed: ["dmd", "-unittest", "-v", "-o-", "/tmp/tmp0g6ca0rk.d", "-I/tmp"]

    '
  stdout: ''
  timestamp: 1660163028
- exit_code: 1
  program: "import std.math;\n/*\n\n    You'll be given a string of words, and your\
    \ task is to count the number\n    of boredoms. A boredom is a sentence that starts\
    \ with the word \"I\".\n    Sentences are delimited by '.', '?' or '!'.\n   \n\
    \    For example:\n    >>> is_bored(\"Hello world\")\n    0L\n    >>> is_bored(\"\
    The sky is blue. The sun is shining. I love this weather\")\n    1L\n    \n*/\n\
    long is_bored(string S) \n{\n    long boredoms = 0;\n    auto words = split(S,\
    \ \" \");\n    foreach(word; words)\n    {\n        if(word == \"I\")\n      \
    \      boredoms++;\n    }\n    return boredoms;\n}\nunittest\n{\n    alias candidate\
    \ = is_bored;\n\n    assert(candidate(\"Hello world\") == 0L);\n    assert(candidate(\"\
    Is the sky blue?\") == 0L);\n    assert(candidate(\"I love It !\") == 1L);\n \
    \   assert(candidate(\"bIt\") == 0L);\n    assert(candidate(\"I feel good today.\
    \ I will be productive. will kill It\") == 2L);\n    assert(candidate(\"You and\
    \ I are going for a walk\") == 0L);\n}\nvoid main(){}"
  status: SyntaxError
  stderr: '/tmp/tmpm0jgnlho.d(18): Error: undefined identifier `split`

    Failed: ["dmd", "-unittest", "-v", "-o-", "/tmp/tmpm0jgnlho.d", "-I/tmp"]

    '
  stdout: ''
  timestamp: 1660163028
- exit_code: 1
  program: "import std.math;\n/*\n\n    You'll be given a string of words, and your\
    \ task is to count the number\n    of boredoms. A boredom is a sentence that starts\
    \ with the word \"I\".\n    Sentences are delimited by '.', '?' or '!'.\n   \n\
    \    For example:\n    >>> is_bored(\"Hello world\")\n    0L\n    >>> is_bored(\"\
    The sky is blue. The sun is shining. I love this weather\")\n    1L\n    \n*/\n\
    long is_bored(string S) \n{\n    long boredoms = 0;\n    string[] sentences =\
    \ split(S, \".\");\n    foreach(string sentence; sentences)\n    {\n        string[]\
    \ words = split(sentence, \" \");\n        if(words[0] == \"I\")\n           \
    \ boredoms++;\n    }\n    return boredoms;\n}\nunittest\n{\n    alias candidate\
    \ = is_bored;\n\n    assert(candidate(\"Hello world\") == 0L);\n    assert(candidate(\"\
    Is the sky blue?\") == 0L);\n    assert(candidate(\"I love It !\") == 1L);\n \
    \   assert(candidate(\"bIt\") == 0L);\n    assert(candidate(\"I feel good today.\
    \ I will be productive. will kill It\") == 2L);\n    assert(candidate(\"You and\
    \ I are going for a walk\") == 0L);\n}\nvoid main(){}"
  status: SyntaxError
  stderr: '/tmp/tmp1upyxolo.d(18): Error: undefined identifier `split`

    /tmp/tmp1upyxolo.d(21): Error: undefined identifier `split`

    Failed: ["dmd", "-unittest", "-v", "-o-", "/tmp/tmp1upyxolo.d", "-I/tmp"]

    '
  stdout: ''
  timestamp: 1660163028
- exit_code: 1
  program: "import std.math;\n/*\n\n    You'll be given a string of words, and your\
    \ task is to count the number\n    of boredoms. A boredom is a sentence that starts\
    \ with the word \"I\".\n    Sentences are delimited by '.', '?' or '!'.\n   \n\
    \    For example:\n    >>> is_bored(\"Hello world\")\n    0L\n    >>> is_bored(\"\
    The sky is blue. The sun is shining. I love this weather\")\n    1L\n    \n*/\n\
    long is_bored(string S) \n{\n    long boredoms = 0;\n    string[] sentences =\
    \ split(S, \".\");\n    foreach(string sentence; sentences)\n    {\n        string[]\
    \ words = split(sentence, \" \");\n        if(words[0] == \"I\")\n           \
    \ boredoms++;\n    }\n    return boredoms;\n}\nunittest\n{\n    alias candidate\
    \ = is_bored;\n\n    assert(candidate(\"Hello world\") == 0L);\n    assert(candidate(\"\
    Is the sky blue?\") == 0L);\n    assert(candidate(\"I love It !\") == 1L);\n \
    \   assert(candidate(\"bIt\") == 0L);\n    assert(candidate(\"I feel good today.\
    \ I will be productive. will kill It\") == 2L);\n    assert(candidate(\"You and\
    \ I are going for a walk\") == 0L);\n}\nvoid main(){}"
  status: SyntaxError
  stderr: '/tmp/tmp1upyxolo.d(18): Error: undefined identifier `split`

    /tmp/tmp1upyxolo.d(21): Error: undefined identifier `split`

    Failed: ["dmd", "-unittest", "-v", "-o-", "/tmp/tmp1upyxolo.d", "-I/tmp"]

    '
  stdout: ''
  timestamp: 1660163028
- exit_code: 1
  program: "import std.math;\n/*\n\n    You'll be given a string of words, and your\
    \ task is to count the number\n    of boredoms. A boredom is a sentence that starts\
    \ with the word \"I\".\n    Sentences are delimited by '.', '?' or '!'.\n   \n\
    \    For example:\n    >>> is_bored(\"Hello world\")\n    0L\n    >>> is_bored(\"\
    The sky is blue. The sun is shining. I love this weather\")\n    1L\n    \n*/\n\
    long is_bored(string S) \n{\n    long boredoms = 0;\n    string[] sentences =\
    \ split(S, \".\");\n    foreach(string sentence; sentences)\n    {\n        string[]\
    \ words = split(sentence, \" \");\n        if(words[0] == \"I\")\n           \
    \ boredoms++;\n    }\n    return boredoms;\n}\nunittest\n{\n    alias candidate\
    \ = is_bored;\n\n    assert(candidate(\"Hello world\") == 0L);\n    assert(candidate(\"\
    Is the sky blue?\") == 0L);\n    assert(candidate(\"I love It !\") == 1L);\n \
    \   assert(candidate(\"bIt\") == 0L);\n    assert(candidate(\"I feel good today.\
    \ I will be productive. will kill It\") == 2L);\n    assert(candidate(\"You and\
    \ I are going for a walk\") == 0L);\n}\nvoid main(){}"
  status: SyntaxError
  stderr: '/tmp/tmp1upyxolo.d(18): Error: undefined identifier `split`

    /tmp/tmp1upyxolo.d(21): Error: undefined identifier `split`

    Failed: ["dmd", "-unittest", "-v", "-o-", "/tmp/tmp1upyxolo.d", "-I/tmp"]

    '
  stdout: ''
  timestamp: 1660163028
- exit_code: 1
  program: "import std.math;\n/*\n\n    You'll be given a string of words, and your\
    \ task is to count the number\n    of boredoms. A boredom is a sentence that starts\
    \ with the word \"I\".\n    Sentences are delimited by '.', '?' or '!'.\n   \n\
    \    For example:\n    >>> is_bored(\"Hello world\")\n    0L\n    >>> is_bored(\"\
    The sky is blue. The sun is shining. I love this weather\")\n    1L\n    \n*/\n\
    long is_bored(string S) \n{\n    long boredoms = 0;\n    string[] sentences =\
    \ split(S, \".\");\n    foreach(string sentence; sentences)\n    {\n        if(sentence.length\
    \ > 0)\n        {\n            string[] words = split(sentence, \" \");\n    \
    \        if(words[0] == \"I\")\n            {\n                boredoms++;\n \
    \           }\n        }\n    }\n    return boredoms;\n}\nunittest\n{\n    alias\
    \ candidate = is_bored;\n\n    assert(candidate(\"Hello world\") == 0L);\n   \
    \ assert(candidate(\"Is the sky blue?\") == 0L);\n    assert(candidate(\"I love\
    \ It !\") == 1L);\n    assert(candidate(\"bIt\") == 0L);\n    assert(candidate(\"\
    I feel good today. I will be productive. will kill It\") == 2L);\n    assert(candidate(\"\
    You and I are going for a walk\") == 0L);\n}\nvoid main(){}"
  status: SyntaxError
  stderr: '/tmp/tmprvolhnpj.d(18): Error: undefined identifier `split`

    /tmp/tmprvolhnpj.d(23): Error: undefined identifier `split`

    Failed: ["dmd", "-unittest", "-v", "-o-", "/tmp/tmprvolhnpj.d", "-I/tmp"]

    '
  stdout: ''
  timestamp: 1660163028
- exit_code: 1
  program: "import std.math;\n/*\n\n    You'll be given a string of words, and your\
    \ task is to count the number\n    of boredoms. A boredom is a sentence that starts\
    \ with the word \"I\".\n    Sentences are delimited by '.', '?' or '!'.\n   \n\
    \    For example:\n    >>> is_bored(\"Hello world\")\n    0L\n    >>> is_bored(\"\
    The sky is blue. The sun is shining. I love this weather\")\n    1L\n    \n*/\n\
    long is_bored(string S) \n{\n    long boredoms = 0;\n    string[] sentences =\
    \ split(S, \".\");\n    foreach(string sentence; sentences)\n    {\n        if(sentence.length\
    \ > 0)\n        {\n            string[] words = split(sentence, \" \");\n    \
    \        if(words[0] == \"I\")\n            {\n                boredoms++;\n \
    \           }\n        }\n    }\n    return boredoms;\n}\nunittest\n{\n    alias\
    \ candidate = is_bored;\n\n    assert(candidate(\"Hello world\") == 0L);\n   \
    \ assert(candidate(\"Is the sky blue?\") == 0L);\n    assert(candidate(\"I love\
    \ It !\") == 1L);\n    assert(candidate(\"bIt\") == 0L);\n    assert(candidate(\"\
    I feel good today. I will be productive. will kill It\") == 2L);\n    assert(candidate(\"\
    You and I are going for a walk\") == 0L);\n}\nvoid main(){}"
  status: SyntaxError
  stderr: '/tmp/tmprvolhnpj.d(18): Error: undefined identifier `split`

    /tmp/tmprvolhnpj.d(23): Error: undefined identifier `split`

    Failed: ["dmd", "-unittest", "-v", "-o-", "/tmp/tmprvolhnpj.d", "-I/tmp"]

    '
  stdout: ''
  timestamp: 1660163028
- exit_code: 1
  program: "import std.math;\n/*\n\n    You'll be given a string of words, and your\
    \ task is to count the number\n    of boredoms. A boredom is a sentence that starts\
    \ with the word \"I\".\n    Sentences are delimited by '.', '?' or '!'.\n   \n\
    \    For example:\n    >>> is_bored(\"Hello world\")\n    0L\n    >>> is_bored(\"\
    The sky is blue. The sun is shining. I love this weather\")\n    1L\n    \n*/\n\
    long is_bored(string S) \n{\n    long boredoms = 0;\n    string[] sentences =\
    \ split(S, \".\");\n    foreach(string sentence; sentences)\n    {\n        string[]\
    \ words = split(sentence, \" \");\n        if(words[0] == \"I\")\n           \
    \ boredoms++;\n    }\n    return boredoms;\n}\nunittest\n{\n    alias candidate\
    \ = is_bored;\n\n    assert(candidate(\"Hello world\") == 0L);\n    assert(candidate(\"\
    Is the sky blue?\") == 0L);\n    assert(candidate(\"I love It !\") == 1L);\n \
    \   assert(candidate(\"bIt\") == 0L);\n    assert(candidate(\"I feel good today.\
    \ I will be productive. will kill It\") == 2L);\n    assert(candidate(\"You and\
    \ I are going for a walk\") == 0L);\n}\nvoid main(){}"
  status: SyntaxError
  stderr: '/tmp/tmp1upyxolo.d(18): Error: undefined identifier `split`

    /tmp/tmp1upyxolo.d(21): Error: undefined identifier `split`

    Failed: ["dmd", "-unittest", "-v", "-o-", "/tmp/tmp1upyxolo.d", "-I/tmp"]

    '
  stdout: ''
  timestamp: 1660163028
- exit_code: 1
  program: "import std.math;\n/*\n\n    You'll be given a string of words, and your\
    \ task is to count the number\n    of boredoms. A boredom is a sentence that starts\
    \ with the word \"I\".\n    Sentences are delimited by '.', '?' or '!'.\n   \n\
    \    For example:\n    >>> is_bored(\"Hello world\")\n    0L\n    >>> is_bored(\"\
    The sky is blue. The sun is shining. I love this weather\")\n    1L\n    \n*/\n\
    long is_bored(string S) \n{\n    long boredoms = 0;\n    string[] sentences =\
    \ split(S, \".\");\n    foreach(string sentence; sentences)\n    {\n        string[]\
    \ words = split(sentence, \" \");\n        if(words[0] == \"I\")\n           \
    \ boredoms++;\n    }\n    return boredoms;\n}\nunittest\n{\n    alias candidate\
    \ = is_bored;\n\n    assert(candidate(\"Hello world\") == 0L);\n    assert(candidate(\"\
    Is the sky blue?\") == 0L);\n    assert(candidate(\"I love It !\") == 1L);\n \
    \   assert(candidate(\"bIt\") == 0L);\n    assert(candidate(\"I feel good today.\
    \ I will be productive. will kill It\") == 2L);\n    assert(candidate(\"You and\
    \ I are going for a walk\") == 0L);\n}\nvoid main(){}"
  status: SyntaxError
  stderr: '/tmp/tmp1upyxolo.d(18): Error: undefined identifier `split`

    /tmp/tmp1upyxolo.d(21): Error: undefined identifier `split`

    Failed: ["dmd", "-unittest", "-v", "-o-", "/tmp/tmp1upyxolo.d", "-I/tmp"]

    '
  stdout: ''
  timestamp: 1660163028
- exit_code: 1
  program: "import std.math;\n/*\n\n    You'll be given a string of words, and your\
    \ task is to count the number\n    of boredoms. A boredom is a sentence that starts\
    \ with the word \"I\".\n    Sentences are delimited by '.', '?' or '!'.\n   \n\
    \    For example:\n    >>> is_bored(\"Hello world\")\n    0L\n    >>> is_bored(\"\
    The sky is blue. The sun is shining. I love this weather\")\n    1L\n    \n*/\n\
    long is_bored(string S) \n{\n    long boredoms = 0;\n    string[] sentences =\
    \ split(S, \".\");\n    foreach(sentence; sentences)\n    {\n        string[]\
    \ words = split(sentence, \" \");\n        if(words[0] == \"I\")\n           \
    \ boredoms++;\n    }\n    return boredoms;\n}\nunittest\n{\n    alias candidate\
    \ = is_bored;\n\n    assert(candidate(\"Hello world\") == 0L);\n    assert(candidate(\"\
    Is the sky blue?\") == 0L);\n    assert(candidate(\"I love It !\") == 1L);\n \
    \   assert(candidate(\"bIt\") == 0L);\n    assert(candidate(\"I feel good today.\
    \ I will be productive. will kill It\") == 2L);\n    assert(candidate(\"You and\
    \ I are going for a walk\") == 0L);\n}\nvoid main(){}"
  status: SyntaxError
  stderr: '/tmp/tmpx3am4b_0.d(18): Error: undefined identifier `split`

    /tmp/tmpx3am4b_0.d(21): Error: undefined identifier `split`

    Failed: ["dmd", "-unittest", "-v", "-o-", "/tmp/tmpx3am4b_0.d", "-I/tmp"]

    '
  stdout: ''
  timestamp: 1660163028
- exit_code: 1
  program: "import std.math;\n/*\n\n    You'll be given a string of words, and your\
    \ task is to count the number\n    of boredoms. A boredom is a sentence that starts\
    \ with the word \"I\".\n    Sentences are delimited by '.', '?' or '!'.\n   \n\
    \    For example:\n    >>> is_bored(\"Hello world\")\n    0L\n    >>> is_bored(\"\
    The sky is blue. The sun is shining. I love this weather\")\n    1L\n    \n*/\n\
    long is_bored(string S) \n{\n    long count = 0;\n    string[] words = split(S,\
    \ \" \");\n    foreach(string word; words)\n    {\n        if(word == \"I\")\n\
    \            count++;\n    }\n    return count;\n}\nunittest\n{\n    alias candidate\
    \ = is_bored;\n\n    assert(candidate(\"Hello world\") == 0L);\n    assert(candidate(\"\
    Is the sky blue?\") == 0L);\n    assert(candidate(\"I love It !\") == 1L);\n \
    \   assert(candidate(\"bIt\") == 0L);\n    assert(candidate(\"I feel good today.\
    \ I will be productive. will kill It\") == 2L);\n    assert(candidate(\"You and\
    \ I are going for a walk\") == 0L);\n}\nvoid main(){}"
  status: SyntaxError
  stderr: '/tmp/tmpej_rprd2.d(18): Error: undefined identifier `split`

    Failed: ["dmd", "-unittest", "-v", "-o-", "/tmp/tmpej_rprd2.d", "-I/tmp"]

    '
  stdout: ''
  timestamp: 1660163028
- exit_code: 1
  program: "import std.math;\n/*\n\n    You'll be given a string of words, and your\
    \ task is to count the number\n    of boredoms. A boredom is a sentence that starts\
    \ with the word \"I\".\n    Sentences are delimited by '.', '?' or '!'.\n   \n\
    \    For example:\n    >>> is_bored(\"Hello world\")\n    0L\n    >>> is_bored(\"\
    The sky is blue. The sun is shining. I love this weather\")\n    1L\n    \n*/\n\
    long is_bored(string S) \n{\n    long boredoms = 0;\n    string[] sentences =\
    \ split(S, \".\");\n    foreach(sentence; sentences)\n    {\n        string[]\
    \ words = split(sentence, \" \");\n        if(words[0] == \"I\")\n           \
    \ boredoms++;\n    }\n    return boredoms;\n}\nunittest\n{\n    alias candidate\
    \ = is_bored;\n\n    assert(candidate(\"Hello world\") == 0L);\n    assert(candidate(\"\
    Is the sky blue?\") == 0L);\n    assert(candidate(\"I love It !\") == 1L);\n \
    \   assert(candidate(\"bIt\") == 0L);\n    assert(candidate(\"I feel good today.\
    \ I will be productive. will kill It\") == 2L);\n    assert(candidate(\"You and\
    \ I are going for a walk\") == 0L);\n}\nvoid main(){}"
  status: SyntaxError
  stderr: '/tmp/tmpx3am4b_0.d(18): Error: undefined identifier `split`

    /tmp/tmpx3am4b_0.d(21): Error: undefined identifier `split`

    Failed: ["dmd", "-unittest", "-v", "-o-", "/tmp/tmpx3am4b_0.d", "-I/tmp"]

    '
  stdout: ''
  timestamp: 1660163028
- exit_code: 1
  program: "import std.math;\n/*\n\n    You'll be given a string of words, and your\
    \ task is to count the number\n    of boredoms. A boredom is a sentence that starts\
    \ with the word \"I\".\n    Sentences are delimited by '.', '?' or '!'.\n   \n\
    \    For example:\n    >>> is_bored(\"Hello world\")\n    0L\n    >>> is_bored(\"\
    The sky is blue. The sun is shining. I love this weather\")\n    1L\n    \n*/\n\
    long is_bored(string S) \n{\n    long boredoms = 0;\n    string[] sentences =\
    \ split(S, \".\");\n    foreach(sentence; sentences)\n    {\n        string[]\
    \ words = split(sentence, \" \");\n        if(words[0] == \"I\")\n           \
    \ boredoms++;\n    }\n    return boredoms;\n}\nunittest\n{\n    alias candidate\
    \ = is_bored;\n\n    assert(candidate(\"Hello world\") == 0L);\n    assert(candidate(\"\
    Is the sky blue?\") == 0L);\n    assert(candidate(\"I love It !\") == 1L);\n \
    \   assert(candidate(\"bIt\") == 0L);\n    assert(candidate(\"I feel good today.\
    \ I will be productive. will kill It\") == 2L);\n    assert(candidate(\"You and\
    \ I are going for a walk\") == 0L);\n}\nvoid main(){}"
  status: SyntaxError
  stderr: '/tmp/tmpx3am4b_0.d(18): Error: undefined identifier `split`

    /tmp/tmpx3am4b_0.d(21): Error: undefined identifier `split`

    Failed: ["dmd", "-unittest", "-v", "-o-", "/tmp/tmpx3am4b_0.d", "-I/tmp"]

    '
  stdout: ''
  timestamp: 1660163028
- exit_code: 1
  program: "import std.math;\n/*\n\n    You'll be given a string of words, and your\
    \ task is to count the number\n    of boredoms. A boredom is a sentence that starts\
    \ with the word \"I\".\n    Sentences are delimited by '.', '?' or '!'.\n   \n\
    \    For example:\n    >>> is_bored(\"Hello world\")\n    0L\n    >>> is_bored(\"\
    The sky is blue. The sun is shining. I love this weather\")\n    1L\n    \n*/\n\
    long is_bored(string S) \n{\n    long boredoms = 0;\n    string[] sentences =\
    \ split(S, \".\");\n    foreach(string sentence; sentences)\n    {\n        string[]\
    \ words = split(sentence, \" \");\n        if(words[0] == \"I\")\n           \
    \ boredoms++;\n    }\n    return boredoms;\n}\nunittest\n{\n    alias candidate\
    \ = is_bored;\n\n    assert(candidate(\"Hello world\") == 0L);\n    assert(candidate(\"\
    Is the sky blue?\") == 0L);\n    assert(candidate(\"I love It !\") == 1L);\n \
    \   assert(candidate(\"bIt\") == 0L);\n    assert(candidate(\"I feel good today.\
    \ I will be productive. will kill It\") == 2L);\n    assert(candidate(\"You and\
    \ I are going for a walk\") == 0L);\n}\nvoid main(){}"
  status: SyntaxError
  stderr: '/tmp/tmp1upyxolo.d(18): Error: undefined identifier `split`

    /tmp/tmp1upyxolo.d(21): Error: undefined identifier `split`

    Failed: ["dmd", "-unittest", "-v", "-o-", "/tmp/tmp1upyxolo.d", "-I/tmp"]

    '
  stdout: ''
  timestamp: 1660163028
- exit_code: 1
  program: "import std.math;\n/*\n\n    You'll be given a string of words, and your\
    \ task is to count the number\n    of boredoms. A boredom is a sentence that starts\
    \ with the word \"I\".\n    Sentences are delimited by '.', '?' or '!'.\n   \n\
    \    For example:\n    >>> is_bored(\"Hello world\")\n    0L\n    >>> is_bored(\"\
    The sky is blue. The sun is shining. I love this weather\")\n    1L\n    \n*/\n\
    long is_bored(string S) \n{\n    long boredoms = 0;\n    string[] sentences =\
    \ split(S, \".\");\n    foreach(string sentence; sentences)\n    {\n        if(sentence.length\
    \ > 0)\n        {\n            string[] words = split(sentence, \" \");\n    \
    \        if(words[0] == \"I\")\n            {\n                boredoms++;\n \
    \           }\n        }\n    }\n    return boredoms;\n}\nunittest\n{\n    alias\
    \ candidate = is_bored;\n\n    assert(candidate(\"Hello world\") == 0L);\n   \
    \ assert(candidate(\"Is the sky blue?\") == 0L);\n    assert(candidate(\"I love\
    \ It !\") == 1L);\n    assert(candidate(\"bIt\") == 0L);\n    assert(candidate(\"\
    I feel good today. I will be productive. will kill It\") == 2L);\n    assert(candidate(\"\
    You and I are going for a walk\") == 0L);\n}\nvoid main(){}"
  status: SyntaxError
  stderr: '/tmp/tmprvolhnpj.d(18): Error: undefined identifier `split`

    /tmp/tmprvolhnpj.d(23): Error: undefined identifier `split`

    Failed: ["dmd", "-unittest", "-v", "-o-", "/tmp/tmprvolhnpj.d", "-I/tmp"]

    '
  stdout: ''
  timestamp: 1660163028
- exit_code: 1
  program: "import std.math;\n/*\n\n    You'll be given a string of words, and your\
    \ task is to count the number\n    of boredoms. A boredom is a sentence that starts\
    \ with the word \"I\".\n    Sentences are delimited by '.', '?' or '!'.\n   \n\
    \    For example:\n    >>> is_bored(\"Hello world\")\n    0L\n    >>> is_bored(\"\
    The sky is blue. The sun is shining. I love this weather\")\n    1L\n    \n*/\n\
    long is_bored(string S) \n{\n    long boredoms = 0;\n    string[] sentences =\
    \ split(S, \".\");\n    foreach(sentence; sentences)\n    {\n        string[]\
    \ words = split(sentence, \" \");\n        if(words[0] == \"I\")\n           \
    \ boredoms++;\n    }\n    return boredoms;\n}\nunittest\n{\n    alias candidate\
    \ = is_bored;\n\n    assert(candidate(\"Hello world\") == 0L);\n    assert(candidate(\"\
    Is the sky blue?\") == 0L);\n    assert(candidate(\"I love It !\") == 1L);\n \
    \   assert(candidate(\"bIt\") == 0L);\n    assert(candidate(\"I feel good today.\
    \ I will be productive. will kill It\") == 2L);\n    assert(candidate(\"You and\
    \ I are going for a walk\") == 0L);\n}\nvoid main(){}"
  status: SyntaxError
  stderr: '/tmp/tmpx3am4b_0.d(18): Error: undefined identifier `split`

    /tmp/tmpx3am4b_0.d(21): Error: undefined identifier `split`

    Failed: ["dmd", "-unittest", "-v", "-o-", "/tmp/tmpx3am4b_0.d", "-I/tmp"]

    '
  stdout: ''
  timestamp: 1660163028
- exit_code: 1
  program: "import std.math;\n/*\n\n    You'll be given a string of words, and your\
    \ task is to count the number\n    of boredoms. A boredom is a sentence that starts\
    \ with the word \"I\".\n    Sentences are delimited by '.', '?' or '!'.\n   \n\
    \    For example:\n    >>> is_bored(\"Hello world\")\n    0L\n    >>> is_bored(\"\
    The sky is blue. The sun is shining. I love this weather\")\n    1L\n    \n*/\n\
    long is_bored(string S) \n{\n    long boredoms = 0;\n    string[] sentences =\
    \ split(S, \".\");\n    foreach(string sentence; sentences)\n    {\n        string[]\
    \ words = split(sentence, \" \");\n        if(words[0] == \"I\")\n           \
    \ boredoms++;\n    }\n    return boredoms;\n}\nunittest\n{\n    alias candidate\
    \ = is_bored;\n\n    assert(candidate(\"Hello world\") == 0L);\n    assert(candidate(\"\
    Is the sky blue?\") == 0L);\n    assert(candidate(\"I love It !\") == 1L);\n \
    \   assert(candidate(\"bIt\") == 0L);\n    assert(candidate(\"I feel good today.\
    \ I will be productive. will kill It\") == 2L);\n    assert(candidate(\"You and\
    \ I are going for a walk\") == 0L);\n}\nvoid main(){}"
  status: SyntaxError
  stderr: '/tmp/tmp1upyxolo.d(18): Error: undefined identifier `split`

    /tmp/tmp1upyxolo.d(21): Error: undefined identifier `split`

    Failed: ["dmd", "-unittest", "-v", "-o-", "/tmp/tmp1upyxolo.d", "-I/tmp"]

    '
  stdout: ''
  timestamp: 1660163028
- exit_code: 1
  program: "import std.math;\n/*\n\n    You'll be given a string of words, and your\
    \ task is to count the number\n    of boredoms. A boredom is a sentence that starts\
    \ with the word \"I\".\n    Sentences are delimited by '.', '?' or '!'.\n   \n\
    \    For example:\n    >>> is_bored(\"Hello world\")\n    0L\n    >>> is_bored(\"\
    The sky is blue. The sun is shining. I love this weather\")\n    1L\n    \n*/\n\
    long is_bored(string S) \n{\n    long boredoms = 0;\n    string[] sentences =\
    \ split(S, \".\");\n    foreach(sentence; sentences)\n    {\n        if(sentence.length\
    \ > 0)\n        {\n            string[] words = split(sentence, \" \");\n    \
    \        if(words[0] == \"I\")\n            {\n                boredoms++;\n \
    \           }\n        }\n    }\n    return boredoms;\n}\nunittest\n{\n    alias\
    \ candidate = is_bored;\n\n    assert(candidate(\"Hello world\") == 0L);\n   \
    \ assert(candidate(\"Is the sky blue?\") == 0L);\n    assert(candidate(\"I love\
    \ It !\") == 1L);\n    assert(candidate(\"bIt\") == 0L);\n    assert(candidate(\"\
    I feel good today. I will be productive. will kill It\") == 2L);\n    assert(candidate(\"\
    You and I are going for a walk\") == 0L);\n}\nvoid main(){}"
  status: SyntaxError
  stderr: '/tmp/tmpmhho1zga.d(18): Error: undefined identifier `split`

    /tmp/tmpmhho1zga.d(23): Error: undefined identifier `split`

    Failed: ["dmd", "-unittest", "-v", "-o-", "/tmp/tmpmhho1zga.d", "-I/tmp"]

    '
  stdout: ''
  timestamp: 1660163028
- exit_code: 1
  program: "import std.math;\n/*\n\n    You'll be given a string of words, and your\
    \ task is to count the number\n    of boredoms. A boredom is a sentence that starts\
    \ with the word \"I\".\n    Sentences are delimited by '.', '?' or '!'.\n   \n\
    \    For example:\n    >>> is_bored(\"Hello world\")\n    0L\n    >>> is_bored(\"\
    The sky is blue. The sun is shining. I love this weather\")\n    1L\n    \n*/\n\
    long is_bored(string S) \n{\n    long boredoms = 0;\n    string[] sentences =\
    \ split(S, \".\");\n    foreach(string sentence; sentences)\n    {\n        string[]\
    \ words = split(sentence, \" \");\n        if(words[0] == \"I\")\n           \
    \ boredoms++;\n    }\n    return boredoms;\n}\nunittest\n{\n    alias candidate\
    \ = is_bored;\n\n    assert(candidate(\"Hello world\") == 0L);\n    assert(candidate(\"\
    Is the sky blue?\") == 0L);\n    assert(candidate(\"I love It !\") == 1L);\n \
    \   assert(candidate(\"bIt\") == 0L);\n    assert(candidate(\"I feel good today.\
    \ I will be productive. will kill It\") == 2L);\n    assert(candidate(\"You and\
    \ I are going for a walk\") == 0L);\n}\nvoid main(){}"
  status: SyntaxError
  stderr: '/tmp/tmp1upyxolo.d(18): Error: undefined identifier `split`

    /tmp/tmp1upyxolo.d(21): Error: undefined identifier `split`

    Failed: ["dmd", "-unittest", "-v", "-o-", "/tmp/tmp1upyxolo.d", "-I/tmp"]

    '
  stdout: ''
  timestamp: 1660163028
- exit_code: 1
  program: "import std.math;\n/*\n\n    You'll be given a string of words, and your\
    \ task is to count the number\n    of boredoms. A boredom is a sentence that starts\
    \ with the word \"I\".\n    Sentences are delimited by '.', '?' or '!'.\n   \n\
    \    For example:\n    >>> is_bored(\"Hello world\")\n    0L\n    >>> is_bored(\"\
    The sky is blue. The sun is shining. I love this weather\")\n    1L\n    \n*/\n\
    long is_bored(string S) \n{\n    long count = 0;\n    string[] sentences = split(S,\
    \ \".\");\n    foreach(string sentence; sentences)\n    {\n        string[] words\
    \ = split(sentence, \" \");\n        if(words[0] == \"I\")\n            count++;\n\
    \    }\n    return count;\n}\nunittest\n{\n    alias candidate = is_bored;\n\n\
    \    assert(candidate(\"Hello world\") == 0L);\n    assert(candidate(\"Is the\
    \ sky blue?\") == 0L);\n    assert(candidate(\"I love It !\") == 1L);\n    assert(candidate(\"\
    bIt\") == 0L);\n    assert(candidate(\"I feel good today. I will be productive.\
    \ will kill It\") == 2L);\n    assert(candidate(\"You and I are going for a walk\"\
    ) == 0L);\n}\nvoid main(){}"
  status: SyntaxError
  stderr: '/tmp/tmpd7dz0lhc.d(18): Error: undefined identifier `split`

    /tmp/tmpd7dz0lhc.d(21): Error: undefined identifier `split`

    Failed: ["dmd", "-unittest", "-v", "-o-", "/tmp/tmpd7dz0lhc.d", "-I/tmp"]

    '
  stdout: ''
  timestamp: 1660163028
- exit_code: 1
  program: "import std.math;\n/*\n\n    You'll be given a string of words, and your\
    \ task is to count the number\n    of boredoms. A boredom is a sentence that starts\
    \ with the word \"I\".\n    Sentences are delimited by '.', '?' or '!'.\n   \n\
    \    For example:\n    >>> is_bored(\"Hello world\")\n    0L\n    >>> is_bored(\"\
    The sky is blue. The sun is shining. I love this weather\")\n    1L\n    \n*/\n\
    long is_bored(string S) \n{\n    long boredoms = 0;\n    string[] sentences =\
    \ split(S, \".\");\n    foreach(string sentence; sentences)\n    {\n        if(sentence.length\
    \ > 0)\n        {\n            string[] words = split(sentence, \" \");\n    \
    \        if(words[0] == \"I\")\n            {\n                boredoms++;\n \
    \           }\n        }\n    }\n    return boredoms;\n}\nunittest\n{\n    alias\
    \ candidate = is_bored;\n\n    assert(candidate(\"Hello world\") == 0L);\n   \
    \ assert(candidate(\"Is the sky blue?\") == 0L);\n    assert(candidate(\"I love\
    \ It !\") == 1L);\n    assert(candidate(\"bIt\") == 0L);\n    assert(candidate(\"\
    I feel good today. I will be productive. will kill It\") == 2L);\n    assert(candidate(\"\
    You and I are going for a walk\") == 0L);\n}\nvoid main(){}"
  status: SyntaxError
  stderr: '/tmp/tmprvolhnpj.d(18): Error: undefined identifier `split`

    /tmp/tmprvolhnpj.d(23): Error: undefined identifier `split`

    Failed: ["dmd", "-unittest", "-v", "-o-", "/tmp/tmprvolhnpj.d", "-I/tmp"]

    '
  stdout: ''
  timestamp: 1660163028
- exit_code: 1
  program: "import std.math;\n/*\n\n    You'll be given a string of words, and your\
    \ task is to count the number\n    of boredoms. A boredom is a sentence that starts\
    \ with the word \"I\".\n    Sentences are delimited by '.', '?' or '!'.\n   \n\
    \    For example:\n    >>> is_bored(\"Hello world\")\n    0L\n    >>> is_bored(\"\
    The sky is blue. The sun is shining. I love this weather\")\n    1L\n    \n*/\n\
    long is_bored(string S) \n{\n    long boredoms = 0;\n    string[] sentences =\
    \ split(S, \".\");\n    foreach(string sentence; sentences)\n    {\n        string[]\
    \ words = split(sentence, \" \");\n        if(words[0] == \"I\")\n           \
    \ boredoms++;\n    }\n    return boredoms;\n}\nunittest\n{\n    alias candidate\
    \ = is_bored;\n\n    assert(candidate(\"Hello world\") == 0L);\n    assert(candidate(\"\
    Is the sky blue?\") == 0L);\n    assert(candidate(\"I love It !\") == 1L);\n \
    \   assert(candidate(\"bIt\") == 0L);\n    assert(candidate(\"I feel good today.\
    \ I will be productive. will kill It\") == 2L);\n    assert(candidate(\"You and\
    \ I are going for a walk\") == 0L);\n}\nvoid main(){}"
  status: SyntaxError
  stderr: '/tmp/tmp1upyxolo.d(18): Error: undefined identifier `split`

    /tmp/tmp1upyxolo.d(21): Error: undefined identifier `split`

    Failed: ["dmd", "-unittest", "-v", "-o-", "/tmp/tmp1upyxolo.d", "-I/tmp"]

    '
  stdout: ''
  timestamp: 1660163028
- exit_code: 1
  program: "import std.math;\n/*\n\n    You'll be given a string of words, and your\
    \ task is to count the number\n    of boredoms. A boredom is a sentence that starts\
    \ with the word \"I\".\n    Sentences are delimited by '.', '?' or '!'.\n   \n\
    \    For example:\n    >>> is_bored(\"Hello world\")\n    0L\n    >>> is_bored(\"\
    The sky is blue. The sun is shining. I love this weather\")\n    1L\n    \n*/\n\
    long is_bored(string S) \n{\n    long boredoms = 0;\n    string[] sentences =\
    \ split(S, \".\");\n    foreach(string sentence; sentences)\n    {\n        if(sentence.length\
    \ > 0)\n        {\n            string[] words = split(sentence, \" \");\n    \
    \        if(words[0] == \"I\")\n            {\n                boredoms++;\n \
    \           }\n        }\n    }\n    return boredoms;\n}\nunittest\n{\n    alias\
    \ candidate = is_bored;\n\n    assert(candidate(\"Hello world\") == 0L);\n   \
    \ assert(candidate(\"Is the sky blue?\") == 0L);\n    assert(candidate(\"I love\
    \ It !\") == 1L);\n    assert(candidate(\"bIt\") == 0L);\n    assert(candidate(\"\
    I feel good today. I will be productive. will kill It\") == 2L);\n    assert(candidate(\"\
    You and I are going for a walk\") == 0L);\n}\nvoid main(){}"
  status: SyntaxError
  stderr: '/tmp/tmprvolhnpj.d(18): Error: undefined identifier `split`

    /tmp/tmprvolhnpj.d(23): Error: undefined identifier `split`

    Failed: ["dmd", "-unittest", "-v", "-o-", "/tmp/tmprvolhnpj.d", "-I/tmp"]

    '
  stdout: ''
  timestamp: 1660163028
- exit_code: 1
  program: "import std.math;\n/*\n\n    You'll be given a string of words, and your\
    \ task is to count the number\n    of boredoms. A boredom is a sentence that starts\
    \ with the word \"I\".\n    Sentences are delimited by '.', '?' or '!'.\n   \n\
    \    For example:\n    >>> is_bored(\"Hello world\")\n    0L\n    >>> is_bored(\"\
    The sky is blue. The sun is shining. I love this weather\")\n    1L\n    \n*/\n\
    long is_bored(string S) \n{\n    long boredoms = 0;\n    string[] sentences =\
    \ split(S, \".\");\n    foreach(string sentence; sentences)\n    {\n        string[]\
    \ words = split(sentence, \" \");\n        if(words[0] == \"I\")\n           \
    \ boredoms++;\n    }\n    return boredoms;\n}\nunittest\n{\n    alias candidate\
    \ = is_bored;\n\n    assert(candidate(\"Hello world\") == 0L);\n    assert(candidate(\"\
    Is the sky blue?\") == 0L);\n    assert(candidate(\"I love It !\") == 1L);\n \
    \   assert(candidate(\"bIt\") == 0L);\n    assert(candidate(\"I feel good today.\
    \ I will be productive. will kill It\") == 2L);\n    assert(candidate(\"You and\
    \ I are going for a walk\") == 0L);\n}\nvoid main(){}"
  status: SyntaxError
  stderr: '/tmp/tmp1upyxolo.d(18): Error: undefined identifier `split`

    /tmp/tmp1upyxolo.d(21): Error: undefined identifier `split`

    Failed: ["dmd", "-unittest", "-v", "-o-", "/tmp/tmp1upyxolo.d", "-I/tmp"]

    '
  stdout: ''
  timestamp: 1660163028
- exit_code: 1
  program: "import std.math;\n/*\n\n    You'll be given a string of words, and your\
    \ task is to count the number\n    of boredoms. A boredom is a sentence that starts\
    \ with the word \"I\".\n    Sentences are delimited by '.', '?' or '!'.\n   \n\
    \    For example:\n    >>> is_bored(\"Hello world\")\n    0L\n    >>> is_bored(\"\
    The sky is blue. The sun is shining. I love this weather\")\n    1L\n    \n*/\n\
    long is_bored(string S) \n{\n    long boredoms = 0;\n    string[] sentences =\
    \ split(S, \".\");\n    foreach(string sentence; sentences)\n    {\n        if(sentence.length\
    \ > 0)\n        {\n            string[] words = split(sentence, \" \");\n    \
    \        if(words[0] == \"I\")\n            {\n                boredoms++;\n \
    \           }\n        }\n    }\n    return boredoms;\n}\nunittest\n{\n    alias\
    \ candidate = is_bored;\n\n    assert(candidate(\"Hello world\") == 0L);\n   \
    \ assert(candidate(\"Is the sky blue?\") == 0L);\n    assert(candidate(\"I love\
    \ It !\") == 1L);\n    assert(candidate(\"bIt\") == 0L);\n    assert(candidate(\"\
    I feel good today. I will be productive. will kill It\") == 2L);\n    assert(candidate(\"\
    You and I are going for a walk\") == 0L);\n}\nvoid main(){}"
  status: SyntaxError
  stderr: '/tmp/tmprvolhnpj.d(18): Error: undefined identifier `split`

    /tmp/tmprvolhnpj.d(23): Error: undefined identifier `split`

    Failed: ["dmd", "-unittest", "-v", "-o-", "/tmp/tmprvolhnpj.d", "-I/tmp"]

    '
  stdout: ''
  timestamp: 1660163028
- exit_code: 1
  program: "import std.math;\n/*\n\n    You'll be given a string of words, and your\
    \ task is to count the number\n    of boredoms. A boredom is a sentence that starts\
    \ with the word \"I\".\n    Sentences are delimited by '.', '?' or '!'.\n   \n\
    \    For example:\n    >>> is_bored(\"Hello world\")\n    0L\n    >>> is_bored(\"\
    The sky is blue. The sun is shining. I love this weather\")\n    1L\n    \n*/\n\
    long is_bored(string S) \n{\n    long boredoms = 0;\n    string[] sentences =\
    \ split(S, \".\");\n    foreach(string sentence; sentences)\n    {\n        string[]\
    \ words = split(sentence, \" \");\n        if(words[0] == \"I\")\n           \
    \ boredoms++;\n    }\n    return boredoms;\n}\nunittest\n{\n    alias candidate\
    \ = is_bored;\n\n    assert(candidate(\"Hello world\") == 0L);\n    assert(candidate(\"\
    Is the sky blue?\") == 0L);\n    assert(candidate(\"I love It !\") == 1L);\n \
    \   assert(candidate(\"bIt\") == 0L);\n    assert(candidate(\"I feel good today.\
    \ I will be productive. will kill It\") == 2L);\n    assert(candidate(\"You and\
    \ I are going for a walk\") == 0L);\n}\nvoid main(){}"
  status: SyntaxError
  stderr: '/tmp/tmp1upyxolo.d(18): Error: undefined identifier `split`

    /tmp/tmp1upyxolo.d(21): Error: undefined identifier `split`

    Failed: ["dmd", "-unittest", "-v", "-o-", "/tmp/tmp1upyxolo.d", "-I/tmp"]

    '
  stdout: ''
  timestamp: 1660163028
- exit_code: 1
  program: "import std.math;\n/*\n\n    You'll be given a string of words, and your\
    \ task is to count the number\n    of boredoms. A boredom is a sentence that starts\
    \ with the word \"I\".\n    Sentences are delimited by '.', '?' or '!'.\n   \n\
    \    For example:\n    >>> is_bored(\"Hello world\")\n    0L\n    >>> is_bored(\"\
    The sky is blue. The sun is shining. I love this weather\")\n    1L\n    \n*/\n\
    long is_bored(string S) \n{\n    long count = 0;\n    string[] words = split(S,\
    \ \" \");\n    foreach(string word; words)\n    {\n        if(word == \"I\")\n\
    \            count++;\n    }\n    return count;\n}\nunittest\n{\n    alias candidate\
    \ = is_bored;\n\n    assert(candidate(\"Hello world\") == 0L);\n    assert(candidate(\"\
    Is the sky blue?\") == 0L);\n    assert(candidate(\"I love It !\") == 1L);\n \
    \   assert(candidate(\"bIt\") == 0L);\n    assert(candidate(\"I feel good today.\
    \ I will be productive. will kill It\") == 2L);\n    assert(candidate(\"You and\
    \ I are going for a walk\") == 0L);\n}\nvoid main(){}"
  status: SyntaxError
  stderr: '/tmp/tmpej_rprd2.d(18): Error: undefined identifier `split`

    Failed: ["dmd", "-unittest", "-v", "-o-", "/tmp/tmpej_rprd2.d", "-I/tmp"]

    '
  stdout: ''
  timestamp: 1660163028
- exit_code: 1
  program: "import std.math;\n/*\n\n    You'll be given a string of words, and your\
    \ task is to count the number\n    of boredoms. A boredom is a sentence that starts\
    \ with the word \"I\".\n    Sentences are delimited by '.', '?' or '!'.\n   \n\
    \    For example:\n    >>> is_bored(\"Hello world\")\n    0L\n    >>> is_bored(\"\
    The sky is blue. The sun is shining. I love this weather\")\n    1L\n    \n*/\n\
    long is_bored(string S) \n{\n    long boredoms = 0;\n    string[] sentences =\
    \ split(S, \".\");\n    foreach(string sentence; sentences)\n    {\n        string[]\
    \ words = split(sentence, \" \");\n        if(words[0] == \"I\")\n           \
    \ boredoms++;\n    }\n    return boredoms;\n}\nunittest\n{\n    alias candidate\
    \ = is_bored;\n\n    assert(candidate(\"Hello world\") == 0L);\n    assert(candidate(\"\
    Is the sky blue?\") == 0L);\n    assert(candidate(\"I love It !\") == 1L);\n \
    \   assert(candidate(\"bIt\") == 0L);\n    assert(candidate(\"I feel good today.\
    \ I will be productive. will kill It\") == 2L);\n    assert(candidate(\"You and\
    \ I are going for a walk\") == 0L);\n}\nvoid main(){}"
  status: SyntaxError
  stderr: '/tmp/tmp1upyxolo.d(18): Error: undefined identifier `split`

    /tmp/tmp1upyxolo.d(21): Error: undefined identifier `split`

    Failed: ["dmd", "-unittest", "-v", "-o-", "/tmp/tmp1upyxolo.d", "-I/tmp"]

    '
  stdout: ''
  timestamp: 1660163028
- exit_code: 1
  program: "import std.math;\n/*\n\n    You'll be given a string of words, and your\
    \ task is to count the number\n    of boredoms. A boredom is a sentence that starts\
    \ with the word \"I\".\n    Sentences are delimited by '.', '?' or '!'.\n   \n\
    \    For example:\n    >>> is_bored(\"Hello world\")\n    0L\n    >>> is_bored(\"\
    The sky is blue. The sun is shining. I love this weather\")\n    1L\n    \n*/\n\
    long is_bored(string S) \n{\n    long boredoms = 0;\n    string[] sentences =\
    \ split(S, \".\");\n    foreach(string sentence; sentences)\n    {\n        string[]\
    \ words = split(sentence, \" \");\n        if(words[0] == \"I\")\n           \
    \ boredoms++;\n    }\n    return boredoms;\n}\nunittest\n{\n    alias candidate\
    \ = is_bored;\n\n    assert(candidate(\"Hello world\") == 0L);\n    assert(candidate(\"\
    Is the sky blue?\") == 0L);\n    assert(candidate(\"I love It !\") == 1L);\n \
    \   assert(candidate(\"bIt\") == 0L);\n    assert(candidate(\"I feel good today.\
    \ I will be productive. will kill It\") == 2L);\n    assert(candidate(\"You and\
    \ I are going for a walk\") == 0L);\n}\nvoid main(){}"
  status: SyntaxError
  stderr: '/tmp/tmp1upyxolo.d(18): Error: undefined identifier `split`

    /tmp/tmp1upyxolo.d(21): Error: undefined identifier `split`

    Failed: ["dmd", "-unittest", "-v", "-o-", "/tmp/tmp1upyxolo.d", "-I/tmp"]

    '
  stdout: ''
  timestamp: 1660163028
- exit_code: 1
  program: "import std.math;\n/*\n\n    You'll be given a string of words, and your\
    \ task is to count the number\n    of boredoms. A boredom is a sentence that starts\
    \ with the word \"I\".\n    Sentences are delimited by '.', '?' or '!'.\n   \n\
    \    For example:\n    >>> is_bored(\"Hello world\")\n    0L\n    >>> is_bored(\"\
    The sky is blue. The sun is shining. I love this weather\")\n    1L\n    \n*/\n\
    long is_bored(string S) \n{\n    long boredoms = 0;\n    string[] sentences =\
    \ split(S, \".\");\n    foreach(string sentence; sentences)\n    {\n        if(sentence.length\
    \ > 0)\n        {\n            string[] words = split(sentence, \" \");\n    \
    \        if(words[0] == \"I\")\n            {\n                boredoms++;\n \
    \           }\n        }\n    }\n    return boredoms;\n}\nunittest\n{\n    alias\
    \ candidate = is_bored;\n\n    assert(candidate(\"Hello world\") == 0L);\n   \
    \ assert(candidate(\"Is the sky blue?\") == 0L);\n    assert(candidate(\"I love\
    \ It !\") == 1L);\n    assert(candidate(\"bIt\") == 0L);\n    assert(candidate(\"\
    I feel good today. I will be productive. will kill It\") == 2L);\n    assert(candidate(\"\
    You and I are going for a walk\") == 0L);\n}\nvoid main(){}"
  status: SyntaxError
  stderr: '/tmp/tmprvolhnpj.d(18): Error: undefined identifier `split`

    /tmp/tmprvolhnpj.d(23): Error: undefined identifier `split`

    Failed: ["dmd", "-unittest", "-v", "-o-", "/tmp/tmprvolhnpj.d", "-I/tmp"]

    '
  stdout: ''
  timestamp: 1660163028
- exit_code: 1
  program: "import std.math;\n/*\n\n    You'll be given a string of words, and your\
    \ task is to count the number\n    of boredoms. A boredom is a sentence that starts\
    \ with the word \"I\".\n    Sentences are delimited by '.', '?' or '!'.\n   \n\
    \    For example:\n    >>> is_bored(\"Hello world\")\n    0L\n    >>> is_bored(\"\
    The sky is blue. The sun is shining. I love this weather\")\n    1L\n    \n*/\n\
    long is_bored(string S) \n{\n    long boredoms = 0;\n    string[] sentences =\
    \ split(S, \".\");\n    foreach(string sentence; sentences)\n    {\n        string[]\
    \ words = split(sentence, \" \");\n        if(words[0] == \"I\")\n           \
    \ boredoms++;\n    }\n    return boredoms;\n}\nunittest\n{\n    alias candidate\
    \ = is_bored;\n\n    assert(candidate(\"Hello world\") == 0L);\n    assert(candidate(\"\
    Is the sky blue?\") == 0L);\n    assert(candidate(\"I love It !\") == 1L);\n \
    \   assert(candidate(\"bIt\") == 0L);\n    assert(candidate(\"I feel good today.\
    \ I will be productive. will kill It\") == 2L);\n    assert(candidate(\"You and\
    \ I are going for a walk\") == 0L);\n}\nvoid main(){}"
  status: SyntaxError
  stderr: '/tmp/tmp1upyxolo.d(18): Error: undefined identifier `split`

    /tmp/tmp1upyxolo.d(21): Error: undefined identifier `split`

    Failed: ["dmd", "-unittest", "-v", "-o-", "/tmp/tmp1upyxolo.d", "-I/tmp"]

    '
  stdout: ''
  timestamp: 1660163028
- exit_code: 1
  program: "import std.math;\n/*\n\n    You'll be given a string of words, and your\
    \ task is to count the number\n    of boredoms. A boredom is a sentence that starts\
    \ with the word \"I\".\n    Sentences are delimited by '.', '?' or '!'.\n   \n\
    \    For example:\n    >>> is_bored(\"Hello world\")\n    0L\n    >>> is_bored(\"\
    The sky is blue. The sun is shining. I love this weather\")\n    1L\n    \n*/\n\
    long is_bored(string S) \n{\n    long boredoms = 0;\n    string[] sentences =\
    \ split(S, \".\");\n    foreach(string sentence; sentences)\n    {\n        if(sentence.length\
    \ > 0)\n        {\n            string[] words = split(sentence, \" \");\n    \
    \        if(words[0] == \"I\")\n            {\n                boredoms++;\n \
    \           }\n        }\n    }\n    return boredoms;\n}\nunittest\n{\n    alias\
    \ candidate = is_bored;\n\n    assert(candidate(\"Hello world\") == 0L);\n   \
    \ assert(candidate(\"Is the sky blue?\") == 0L);\n    assert(candidate(\"I love\
    \ It !\") == 1L);\n    assert(candidate(\"bIt\") == 0L);\n    assert(candidate(\"\
    I feel good today. I will be productive. will kill It\") == 2L);\n    assert(candidate(\"\
    You and I are going for a walk\") == 0L);\n}\nvoid main(){}"
  status: SyntaxError
  stderr: '/tmp/tmprvolhnpj.d(18): Error: undefined identifier `split`

    /tmp/tmprvolhnpj.d(23): Error: undefined identifier `split`

    Failed: ["dmd", "-unittest", "-v", "-o-", "/tmp/tmprvolhnpj.d", "-I/tmp"]

    '
  stdout: ''
  timestamp: 1660163028
- exit_code: 1
  program: "import std.math;\n/*\n\n    You'll be given a string of words, and your\
    \ task is to count the number\n    of boredoms. A boredom is a sentence that starts\
    \ with the word \"I\".\n    Sentences are delimited by '.', '?' or '!'.\n   \n\
    \    For example:\n    >>> is_bored(\"Hello world\")\n    0L\n    >>> is_bored(\"\
    The sky is blue. The sun is shining. I love this weather\")\n    1L\n    \n*/\n\
    long is_bored(string S) \n{\n    long boredoms = 0;\n    string[] sentences =\
    \ split(S, \".\");\n    foreach(string sentence; sentences)\n    {\n        string[]\
    \ words = split(sentence, \" \");\n        if(words[0] == \"I\")\n           \
    \ boredoms++;\n    }\n    return boredoms;\n}\nunittest\n{\n    alias candidate\
    \ = is_bored;\n\n    assert(candidate(\"Hello world\") == 0L);\n    assert(candidate(\"\
    Is the sky blue?\") == 0L);\n    assert(candidate(\"I love It !\") == 1L);\n \
    \   assert(candidate(\"bIt\") == 0L);\n    assert(candidate(\"I feel good today.\
    \ I will be productive. will kill It\") == 2L);\n    assert(candidate(\"You and\
    \ I are going for a walk\") == 0L);\n}\nvoid main(){}"
  status: SyntaxError
  stderr: '/tmp/tmp1upyxolo.d(18): Error: undefined identifier `split`

    /tmp/tmp1upyxolo.d(21): Error: undefined identifier `split`

    Failed: ["dmd", "-unittest", "-v", "-o-", "/tmp/tmp1upyxolo.d", "-I/tmp"]

    '
  stdout: ''
  timestamp: 1660163028
- exit_code: 1
  program: "import std.math;\n/*\n\n    You'll be given a string of words, and your\
    \ task is to count the number\n    of boredoms. A boredom is a sentence that starts\
    \ with the word \"I\".\n    Sentences are delimited by '.', '?' or '!'.\n   \n\
    \    For example:\n    >>> is_bored(\"Hello world\")\n    0L\n    >>> is_bored(\"\
    The sky is blue. The sun is shining. I love this weather\")\n    1L\n    \n*/\n\
    long is_bored(string S) \n{\n    long count = 0;\n    string[] sentences = split(S,\
    \ \".\");\n    foreach(string sentence; sentences)\n    {\n        if(sentence.length\
    \ > 0)\n        {\n            string[] words = split(sentence, \" \");\n    \
    \        if(words[0] == \"I\")\n            {\n                count++;\n    \
    \        }\n        }\n    }\n    return count;\n}\nunittest\n{\n    alias candidate\
    \ = is_bored;\n\n    assert(candidate(\"Hello world\") == 0L);\n    assert(candidate(\"\
    Is the sky blue?\") == 0L);\n    assert(candidate(\"I love It !\") == 1L);\n \
    \   assert(candidate(\"bIt\") == 0L);\n    assert(candidate(\"I feel good today.\
    \ I will be productive. will kill It\") == 2L);\n    assert(candidate(\"You and\
    \ I are going for a walk\") == 0L);\n}\nvoid main(){}"
  status: SyntaxError
  stderr: '/tmp/tmp03651ldh.d(18): Error: undefined identifier `split`

    /tmp/tmp03651ldh.d(23): Error: undefined identifier `split`

    Failed: ["dmd", "-unittest", "-v", "-o-", "/tmp/tmp03651ldh.d", "-I/tmp"]

    '
  stdout: ''
  timestamp: 1660163028
- exit_code: 1
  program: "import std.math;\n/*\n\n    You'll be given a string of words, and your\
    \ task is to count the number\n    of boredoms. A boredom is a sentence that starts\
    \ with the word \"I\".\n    Sentences are delimited by '.', '?' or '!'.\n   \n\
    \    For example:\n    >>> is_bored(\"Hello world\")\n    0L\n    >>> is_bored(\"\
    The sky is blue. The sun is shining. I love this weather\")\n    1L\n    \n*/\n\
    long is_bored(string S) \n{\n    long boredoms = 0;\n    string[] sentences =\
    \ split(S, \".\");\n    foreach(string sentence; sentences)\n    {\n        string[]\
    \ words = split(sentence, \" \");\n        if(words[0] == \"I\")\n           \
    \ boredoms++;\n    }\n    return boredoms;\n}\nunittest\n{\n    alias candidate\
    \ = is_bored;\n\n    assert(candidate(\"Hello world\") == 0L);\n    assert(candidate(\"\
    Is the sky blue?\") == 0L);\n    assert(candidate(\"I love It !\") == 1L);\n \
    \   assert(candidate(\"bIt\") == 0L);\n    assert(candidate(\"I feel good today.\
    \ I will be productive. will kill It\") == 2L);\n    assert(candidate(\"You and\
    \ I are going for a walk\") == 0L);\n}\nvoid main(){}"
  status: SyntaxError
  stderr: '/tmp/tmp1upyxolo.d(18): Error: undefined identifier `split`

    /tmp/tmp1upyxolo.d(21): Error: undefined identifier `split`

    Failed: ["dmd", "-unittest", "-v", "-o-", "/tmp/tmp1upyxolo.d", "-I/tmp"]

    '
  stdout: ''
  timestamp: 1660163028
- exit_code: 1
  program: "import std.math;\n/*\n\n    You'll be given a string of words, and your\
    \ task is to count the number\n    of boredoms. A boredom is a sentence that starts\
    \ with the word \"I\".\n    Sentences are delimited by '.', '?' or '!'.\n   \n\
    \    For example:\n    >>> is_bored(\"Hello world\")\n    0L\n    >>> is_bored(\"\
    The sky is blue. The sun is shining. I love this weather\")\n    1L\n    \n*/\n\
    long is_bored(string S) \n{\n    long boredoms = 0;\n    string[] sentences =\
    \ split(S, \".\");\n    foreach(string sentence; sentences)\n    {\n        if(sentence.length\
    \ > 0)\n        {\n            string[] words = split(sentence, \" \");\n    \
    \        if(words[0] == \"I\")\n            {\n                boredoms++;\n \
    \           }\n        }\n    }\n    return boredoms;\n}\nunittest\n{\n    alias\
    \ candidate = is_bored;\n\n    assert(candidate(\"Hello world\") == 0L);\n   \
    \ assert(candidate(\"Is the sky blue?\") == 0L);\n    assert(candidate(\"I love\
    \ It !\") == 1L);\n    assert(candidate(\"bIt\") == 0L);\n    assert(candidate(\"\
    I feel good today. I will be productive. will kill It\") == 2L);\n    assert(candidate(\"\
    You and I are going for a walk\") == 0L);\n}\nvoid main(){}"
  status: SyntaxError
  stderr: '/tmp/tmprvolhnpj.d(18): Error: undefined identifier `split`

    /tmp/tmprvolhnpj.d(23): Error: undefined identifier `split`

    Failed: ["dmd", "-unittest", "-v", "-o-", "/tmp/tmprvolhnpj.d", "-I/tmp"]

    '
  stdout: ''
  timestamp: 1660163028
- exit_code: 1
  program: "import std.math;\n/*\n\n    You'll be given a string of words, and your\
    \ task is to count the number\n    of boredoms. A boredom is a sentence that starts\
    \ with the word \"I\".\n    Sentences are delimited by '.', '?' or '!'.\n   \n\
    \    For example:\n    >>> is_bored(\"Hello world\")\n    0L\n    >>> is_bored(\"\
    The sky is blue. The sun is shining. I love this weather\")\n    1L\n    \n*/\n\
    long is_bored(string S) \n{\n    long boredoms = 0;\n    string[] sentences =\
    \ split(S, \".\");\n    foreach(string sentence; sentences)\n    {\n        string[]\
    \ words = split(sentence, \" \");\n        if(words[0] == \"I\")\n           \
    \ boredoms++;\n    }\n    return boredoms;\n}\nunittest\n{\n    alias candidate\
    \ = is_bored;\n\n    assert(candidate(\"Hello world\") == 0L);\n    assert(candidate(\"\
    Is the sky blue?\") == 0L);\n    assert(candidate(\"I love It !\") == 1L);\n \
    \   assert(candidate(\"bIt\") == 0L);\n    assert(candidate(\"I feel good today.\
    \ I will be productive. will kill It\") == 2L);\n    assert(candidate(\"You and\
    \ I are going for a walk\") == 0L);\n}\nvoid main(){}"
  status: SyntaxError
  stderr: '/tmp/tmp1upyxolo.d(18): Error: undefined identifier `split`

    /tmp/tmp1upyxolo.d(21): Error: undefined identifier `split`

    Failed: ["dmd", "-unittest", "-v", "-o-", "/tmp/tmp1upyxolo.d", "-I/tmp"]

    '
  stdout: ''
  timestamp: 1660163028
- exit_code: 1
  program: "import std.math;\n/*\n\n    You'll be given a string of words, and your\
    \ task is to count the number\n    of boredoms. A boredom is a sentence that starts\
    \ with the word \"I\".\n    Sentences are delimited by '.', '?' or '!'.\n   \n\
    \    For example:\n    >>> is_bored(\"Hello world\")\n    0L\n    >>> is_bored(\"\
    The sky is blue. The sun is shining. I love this weather\")\n    1L\n    \n*/\n\
    long is_bored(string S) \n{\n    long boredoms = 0;\n    string[] sentences =\
    \ split(S, \".\");\n    foreach(string sentence; sentences)\n    {\n        string[]\
    \ words = split(sentence, \" \");\n        if(words[0] == \"I\")\n           \
    \ boredoms++;\n    }\n    return boredoms;\n}\nunittest\n{\n    alias candidate\
    \ = is_bored;\n\n    assert(candidate(\"Hello world\") == 0L);\n    assert(candidate(\"\
    Is the sky blue?\") == 0L);\n    assert(candidate(\"I love It !\") == 1L);\n \
    \   assert(candidate(\"bIt\") == 0L);\n    assert(candidate(\"I feel good today.\
    \ I will be productive. will kill It\") == 2L);\n    assert(candidate(\"You and\
    \ I are going for a walk\") == 0L);\n}\nvoid main(){}"
  status: SyntaxError
  stderr: '/tmp/tmp1upyxolo.d(18): Error: undefined identifier `split`

    /tmp/tmp1upyxolo.d(21): Error: undefined identifier `split`

    Failed: ["dmd", "-unittest", "-v", "-o-", "/tmp/tmp1upyxolo.d", "-I/tmp"]

    '
  stdout: ''
  timestamp: 1660163028
- exit_code: 1
  program: "import std.math;\n/*\n\n    You'll be given a string of words, and your\
    \ task is to count the number\n    of boredoms. A boredom is a sentence that starts\
    \ with the word \"I\".\n    Sentences are delimited by '.', '?' or '!'.\n   \n\
    \    For example:\n    >>> is_bored(\"Hello world\")\n    0L\n    >>> is_bored(\"\
    The sky is blue. The sun is shining. I love this weather\")\n    1L\n    \n*/\n\
    long is_bored(string S) \n{\n    long boredoms = 0;\n    string[] sentences =\
    \ split(S, \".\");\n    foreach(string sentence; sentences)\n    {\n        string[]\
    \ words = split(sentence, \" \");\n        if(words[0] == \"I\")\n           \
    \ boredoms++;\n    }\n    return boredoms;\n}\nunittest\n{\n    alias candidate\
    \ = is_bored;\n\n    assert(candidate(\"Hello world\") == 0L);\n    assert(candidate(\"\
    Is the sky blue?\") == 0L);\n    assert(candidate(\"I love It !\") == 1L);\n \
    \   assert(candidate(\"bIt\") == 0L);\n    assert(candidate(\"I feel good today.\
    \ I will be productive. will kill It\") == 2L);\n    assert(candidate(\"You and\
    \ I are going for a walk\") == 0L);\n}\nvoid main(){}"
  status: SyntaxError
  stderr: '/tmp/tmp1upyxolo.d(18): Error: undefined identifier `split`

    /tmp/tmp1upyxolo.d(21): Error: undefined identifier `split`

    Failed: ["dmd", "-unittest", "-v", "-o-", "/tmp/tmp1upyxolo.d", "-I/tmp"]

    '
  stdout: ''
  timestamp: 1660163028
- exit_code: 1
  program: "import std.math;\n/*\n\n    You'll be given a string of words, and your\
    \ task is to count the number\n    of boredoms. A boredom is a sentence that starts\
    \ with the word \"I\".\n    Sentences are delimited by '.', '?' or '!'.\n   \n\
    \    For example:\n    >>> is_bored(\"Hello world\")\n    0L\n    >>> is_bored(\"\
    The sky is blue. The sun is shining. I love this weather\")\n    1L\n    \n*/\n\
    long is_bored(string S) \n{\n    long boredoms = 0;\n    foreach(string sentence;\
    \ split(S, \".\"))\n    {\n        if(sentence.length > 0)\n        {\n      \
    \      if(sentence[0] == 'I')\n                boredoms++;\n        }\n    }\n\
    \    return boredoms;\n}\nunittest\n{\n    alias candidate = is_bored;\n\n   \
    \ assert(candidate(\"Hello world\") == 0L);\n    assert(candidate(\"Is the sky\
    \ blue?\") == 0L);\n    assert(candidate(\"I love It !\") == 1L);\n    assert(candidate(\"\
    bIt\") == 0L);\n    assert(candidate(\"I feel good today. I will be productive.\
    \ will kill It\") == 2L);\n    assert(candidate(\"You and I are going for a walk\"\
    ) == 0L);\n}\nvoid main(){}"
  status: SyntaxError
  stderr: '/tmp/tmp4bp1ixs0.d(18): Error: undefined identifier `split`

    Failed: ["dmd", "-unittest", "-v", "-o-", "/tmp/tmp4bp1ixs0.d", "-I/tmp"]

    '
  stdout: ''
  timestamp: 1660163028
- exit_code: 1
  program: "import std.math;\n/*\n\n    You'll be given a string of words, and your\
    \ task is to count the number\n    of boredoms. A boredom is a sentence that starts\
    \ with the word \"I\".\n    Sentences are delimited by '.', '?' or '!'.\n   \n\
    \    For example:\n    >>> is_bored(\"Hello world\")\n    0L\n    >>> is_bored(\"\
    The sky is blue. The sun is shining. I love this weather\")\n    1L\n    \n*/\n\
    long is_bored(string S) \n{\n    long boredoms = 0;\n    string[] sentences =\
    \ split(S, \".\");\n    foreach(string sentence; sentences)\n    {\n        if(sentence.length\
    \ > 0)\n        {\n            string[] words = split(sentence, \" \");\n    \
    \        if(words[0] == \"I\")\n            {\n                boredoms++;\n \
    \           }\n        }\n    }\n    return boredoms;\n}\nunittest\n{\n    alias\
    \ candidate = is_bored;\n\n    assert(candidate(\"Hello world\") == 0L);\n   \
    \ assert(candidate(\"Is the sky blue?\") == 0L);\n    assert(candidate(\"I love\
    \ It !\") == 1L);\n    assert(candidate(\"bIt\") == 0L);\n    assert(candidate(\"\
    I feel good today. I will be productive. will kill It\") == 2L);\n    assert(candidate(\"\
    You and I are going for a walk\") == 0L);\n}\nvoid main(){}"
  status: SyntaxError
  stderr: '/tmp/tmprvolhnpj.d(18): Error: undefined identifier `split`

    /tmp/tmprvolhnpj.d(23): Error: undefined identifier `split`

    Failed: ["dmd", "-unittest", "-v", "-o-", "/tmp/tmprvolhnpj.d", "-I/tmp"]

    '
  stdout: ''
  timestamp: 1660163028
- exit_code: 1
  program: "import std.math;\n/*\n\n    You'll be given a string of words, and your\
    \ task is to count the number\n    of boredoms. A boredom is a sentence that starts\
    \ with the word \"I\".\n    Sentences are delimited by '.', '?' or '!'.\n   \n\
    \    For example:\n    >>> is_bored(\"Hello world\")\n    0L\n    >>> is_bored(\"\
    The sky is blue. The sun is shining. I love this weather\")\n    1L\n    \n*/\n\
    long is_bored(string S) \n{\n    long boredoms = 0;\n    auto sentences = split(S,\
    \ \".\");\n    foreach(sentence; sentences)\n    {\n        if(sentence.length\
    \ > 0)\n        {\n            auto words = split(sentence, \" \");\n        \
    \    if(words[0] == \"I\")\n            {\n                boredoms++;\n     \
    \       }\n        }\n    }\n    return boredoms;\n}\nunittest\n{\n    alias candidate\
    \ = is_bored;\n\n    assert(candidate(\"Hello world\") == 0L);\n    assert(candidate(\"\
    Is the sky blue?\") == 0L);\n    assert(candidate(\"I love It !\") == 1L);\n \
    \   assert(candidate(\"bIt\") == 0L);\n    assert(candidate(\"I feel good today.\
    \ I will be productive. will kill It\") == 2L);\n    assert(candidate(\"You and\
    \ I are going for a walk\") == 0L);\n}\nvoid main(){}"
  status: SyntaxError
  stderr: '/tmp/tmpd9xijn1s.d(18): Error: undefined identifier `split`

    Failed: ["dmd", "-unittest", "-v", "-o-", "/tmp/tmpd9xijn1s.d", "-I/tmp"]

    '
  stdout: ''
  timestamp: 1660163028
- exit_code: 1
  program: "import std.math;\n/*\n\n    You'll be given a string of words, and your\
    \ task is to count the number\n    of boredoms. A boredom is a sentence that starts\
    \ with the word \"I\".\n    Sentences are delimited by '.', '?' or '!'.\n   \n\
    \    For example:\n    >>> is_bored(\"Hello world\")\n    0L\n    >>> is_bored(\"\
    The sky is blue. The sun is shining. I love this weather\")\n    1L\n    \n*/\n\
    long is_bored(string S) \n{\n    long boredoms = 0;\n    string[] sentences =\
    \ split(S, \".\");\n    foreach(string sentence; sentences)\n    {\n        string[]\
    \ words = split(sentence, \" \");\n        if(words[0] == \"I\")\n           \
    \ boredoms++;\n    }\n    return boredoms;\n}\nunittest\n{\n    alias candidate\
    \ = is_bored;\n\n    assert(candidate(\"Hello world\") == 0L);\n    assert(candidate(\"\
    Is the sky blue?\") == 0L);\n    assert(candidate(\"I love It !\") == 1L);\n \
    \   assert(candidate(\"bIt\") == 0L);\n    assert(candidate(\"I feel good today.\
    \ I will be productive. will kill It\") == 2L);\n    assert(candidate(\"You and\
    \ I are going for a walk\") == 0L);\n}\nvoid main(){}"
  status: SyntaxError
  stderr: '/tmp/tmp1upyxolo.d(18): Error: undefined identifier `split`

    /tmp/tmp1upyxolo.d(21): Error: undefined identifier `split`

    Failed: ["dmd", "-unittest", "-v", "-o-", "/tmp/tmp1upyxolo.d", "-I/tmp"]

    '
  stdout: ''
  timestamp: 1660163028
- exit_code: 1
  program: "import std.math;\n/*\n\n    You'll be given a string of words, and your\
    \ task is to count the number\n    of boredoms. A boredom is a sentence that starts\
    \ with the word \"I\".\n    Sentences are delimited by '.', '?' or '!'.\n   \n\
    \    For example:\n    >>> is_bored(\"Hello world\")\n    0L\n    >>> is_bored(\"\
    The sky is blue. The sun is shining. I love this weather\")\n    1L\n    \n*/\n\
    long is_bored(string S) \n{\n    long count = 0;\n    string[] words = split(S,\
    \ \" .?!\\n\");\n    foreach(string word; words)\n    {\n        if(word == \"\
    I\")\n            count++;\n    }\n    return count;\n}\nunittest\n{\n    alias\
    \ candidate = is_bored;\n\n    assert(candidate(\"Hello world\") == 0L);\n   \
    \ assert(candidate(\"Is the sky blue?\") == 0L);\n    assert(candidate(\"I love\
    \ It !\") == 1L);\n    assert(candidate(\"bIt\") == 0L);\n    assert(candidate(\"\
    I feel good today. I will be productive. will kill It\") == 2L);\n    assert(candidate(\"\
    You and I are going for a walk\") == 0L);\n}\nvoid main(){}"
  status: SyntaxError
  stderr: '/tmp/tmp_sgqh3dv.d(18): Error: undefined identifier `split`

    Failed: ["dmd", "-unittest", "-v", "-o-", "/tmp/tmp_sgqh3dv.d", "-I/tmp"]

    '
  stdout: ''
  timestamp: 1660163028
- exit_code: 1
  program: "import std.math;\n/*\n\n    You'll be given a string of words, and your\
    \ task is to count the number\n    of boredoms. A boredom is a sentence that starts\
    \ with the word \"I\".\n    Sentences are delimited by '.', '?' or '!'.\n   \n\
    \    For example:\n    >>> is_bored(\"Hello world\")\n    0L\n    >>> is_bored(\"\
    The sky is blue. The sun is shining. I love this weather\")\n    1L\n    \n*/\n\
    long is_bored(string S) \n{\n    long count = 0;\n    string[] words = split(S,\
    \ \" \");\n    foreach(string word; words)\n    {\n        if(word == \"I\")\n\
    \            count++;\n    }\n    return count;\n}\nunittest\n{\n    alias candidate\
    \ = is_bored;\n\n    assert(candidate(\"Hello world\") == 0L);\n    assert(candidate(\"\
    Is the sky blue?\") == 0L);\n    assert(candidate(\"I love It !\") == 1L);\n \
    \   assert(candidate(\"bIt\") == 0L);\n    assert(candidate(\"I feel good today.\
    \ I will be productive. will kill It\") == 2L);\n    assert(candidate(\"You and\
    \ I are going for a walk\") == 0L);\n}\nvoid main(){}"
  status: SyntaxError
  stderr: '/tmp/tmpej_rprd2.d(18): Error: undefined identifier `split`

    Failed: ["dmd", "-unittest", "-v", "-o-", "/tmp/tmpej_rprd2.d", "-I/tmp"]

    '
  stdout: ''
  timestamp: 1660163028
- exit_code: 1
  program: "import std.math;\n/*\n\n    You'll be given a string of words, and your\
    \ task is to count the number\n    of boredoms. A boredom is a sentence that starts\
    \ with the word \"I\".\n    Sentences are delimited by '.', '?' or '!'.\n   \n\
    \    For example:\n    >>> is_bored(\"Hello world\")\n    0L\n    >>> is_bored(\"\
    The sky is blue. The sun is shining. I love this weather\")\n    1L\n    \n*/\n\
    long is_bored(string S) \n{\n    long boredoms = 0;\n    string[] sentences =\
    \ split(S, \".\");\n    foreach(string sentence; sentences)\n    {\n        if(sentence.length\
    \ > 0)\n        {\n            string[] words = split(sentence, \" \");\n    \
    \        if(words[0] == \"I\")\n            {\n                boredoms++;\n \
    \           }\n        }\n    }\n    return boredoms;\n}\nunittest\n{\n    alias\
    \ candidate = is_bored;\n\n    assert(candidate(\"Hello world\") == 0L);\n   \
    \ assert(candidate(\"Is the sky blue?\") == 0L);\n    assert(candidate(\"I love\
    \ It !\") == 1L);\n    assert(candidate(\"bIt\") == 0L);\n    assert(candidate(\"\
    I feel good today. I will be productive. will kill It\") == 2L);\n    assert(candidate(\"\
    You and I are going for a walk\") == 0L);\n}\nvoid main(){}"
  status: SyntaxError
  stderr: '/tmp/tmprvolhnpj.d(18): Error: undefined identifier `split`

    /tmp/tmprvolhnpj.d(23): Error: undefined identifier `split`

    Failed: ["dmd", "-unittest", "-v", "-o-", "/tmp/tmprvolhnpj.d", "-I/tmp"]

    '
  stdout: ''
  timestamp: 1660163028
- exit_code: 1
  program: "import std.math;\n/*\n\n    You'll be given a string of words, and your\
    \ task is to count the number\n    of boredoms. A boredom is a sentence that starts\
    \ with the word \"I\".\n    Sentences are delimited by '.', '?' or '!'.\n   \n\
    \    For example:\n    >>> is_bored(\"Hello world\")\n    0L\n    >>> is_bored(\"\
    The sky is blue. The sun is shining. I love this weather\")\n    1L\n    \n*/\n\
    long is_bored(string S) \n{\n    long boredoms = 0;\n    long i = 0;\n    long\
    \ len = S.length;\n    while (i < len)\n    {\n        if (S[i] == 'I')\n    \
    \    {\n            boredoms++;\n            while (i < len && S[i] != '.' &&\
    \ S[i] != '?' && S[i] != '!')\n            {\n                i++;\n         \
    \   }\n        }\n        i++;\n    }\n    return boredoms;\n}\nunittest\n{\n\
    \    alias candidate = is_bored;\n\n    assert(candidate(\"Hello world\") == 0L);\n\
    \    assert(candidate(\"Is the sky blue?\") == 0L);\n    assert(candidate(\"I\
    \ love It !\") == 1L);\n    assert(candidate(\"bIt\") == 0L);\n    assert(candidate(\"\
    I feel good today. I will be productive. will kill It\") == 2L);\n    assert(candidate(\"\
    You and I are going for a walk\") == 0L);\n}\nvoid main(){}"
  status: Exception
  stderr: 'core.exception.AssertError@/tmp/tmpyxi969_c.d(39): unittest failure

    ----------------

    ??:? _d_unittestp [0x427e95]

    ??:? void tmpyxi969_c.__unittest_L34_C1() [0x427b57]

    ??:? void tmpyxi969_c.__modtest() [0x427c14]

    ??:? int core.runtime.runModuleUnitTests().__foreachbody2(object.ModuleInfo*)
    [0x42bc2f]

    ??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)).__lambda2(immutable(object.ModuleInfo*))
    [0x42aac2]

    ??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))).__foreachbody2(ref
    rt.sections_elf_shared.DSO) [0x42fc55]

    ??:? int rt.sections_elf_shared.DSO.opApply(scope int delegate(ref rt.sections_elf_shared.DSO))
    [0x430104]

    ??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*)))
    [0x42fbe1]

    ??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)) [0x42aa99]

    ??:? runModuleUnitTests [0x42ba05]

    ??:? void rt.dmain2._d_run_main(int, char**, extern (C) int function(char[][])*).runAll()
    [0x428358]

    ??:? void rt.dmain2._d_r'
  stdout: ''
  timestamp: 1660163028
- exit_code: 1
  program: "import std.math;\n/*\n\n    You'll be given a string of words, and your\
    \ task is to count the number\n    of boredoms. A boredom is a sentence that starts\
    \ with the word \"I\".\n    Sentences are delimited by '.', '?' or '!'.\n   \n\
    \    For example:\n    >>> is_bored(\"Hello world\")\n    0L\n    >>> is_bored(\"\
    The sky is blue. The sun is shining. I love this weather\")\n    1L\n    \n*/\n\
    long is_bored(string S) \n{\n    long boredoms = 0;\n    string[] sentences =\
    \ split(S, \".\");\n    foreach(sentence; sentences)\n    {\n        string[]\
    \ words = split(sentence, \" \");\n        if(words[0] == \"I\")\n           \
    \ boredoms++;\n    }\n    return boredoms;\n}\nunittest\n{\n    alias candidate\
    \ = is_bored;\n\n    assert(candidate(\"Hello world\") == 0L);\n    assert(candidate(\"\
    Is the sky blue?\") == 0L);\n    assert(candidate(\"I love It !\") == 1L);\n \
    \   assert(candidate(\"bIt\") == 0L);\n    assert(candidate(\"I feel good today.\
    \ I will be productive. will kill It\") == 2L);\n    assert(candidate(\"You and\
    \ I are going for a walk\") == 0L);\n}\nvoid main(){}"
  status: SyntaxError
  stderr: '/tmp/tmpx3am4b_0.d(18): Error: undefined identifier `split`

    /tmp/tmpx3am4b_0.d(21): Error: undefined identifier `split`

    Failed: ["dmd", "-unittest", "-v", "-o-", "/tmp/tmpx3am4b_0.d", "-I/tmp"]

    '
  stdout: ''
  timestamp: 1660163028
- exit_code: 1
  program: "import std.math;\n/*\n\n    You'll be given a string of words, and your\
    \ task is to count the number\n    of boredoms. A boredom is a sentence that starts\
    \ with the word \"I\".\n    Sentences are delimited by '.', '?' or '!'.\n   \n\
    \    For example:\n    >>> is_bored(\"Hello world\")\n    0L\n    >>> is_bored(\"\
    The sky is blue. The sun is shining. I love this weather\")\n    1L\n    \n*/\n\
    long is_bored(string S) \n{\n    long boredoms = 0;\n    string[] sentences =\
    \ split(S, \".\");\n    foreach(sentence; sentences)\n    {\n        if(sentence.length\
    \ > 0)\n        {\n            string[] words = split(sentence, \" \");\n    \
    \        if(words[0] == \"I\")\n            {\n                boredoms++;\n \
    \           }\n        }\n    }\n    return boredoms;\n}\nunittest\n{\n    alias\
    \ candidate = is_bored;\n\n    assert(candidate(\"Hello world\") == 0L);\n   \
    \ assert(candidate(\"Is the sky blue?\") == 0L);\n    assert(candidate(\"I love\
    \ It !\") == 1L);\n    assert(candidate(\"bIt\") == 0L);\n    assert(candidate(\"\
    I feel good today. I will be productive. will kill It\") == 2L);\n    assert(candidate(\"\
    You and I are going for a walk\") == 0L);\n}\nvoid main(){}"
  status: SyntaxError
  stderr: '/tmp/tmpmhho1zga.d(18): Error: undefined identifier `split`

    /tmp/tmpmhho1zga.d(23): Error: undefined identifier `split`

    Failed: ["dmd", "-unittest", "-v", "-o-", "/tmp/tmpmhho1zga.d", "-I/tmp"]

    '
  stdout: ''
  timestamp: 1660163028
- exit_code: 1
  program: "import std.math;\n/*\n\n    You'll be given a string of words, and your\
    \ task is to count the number\n    of boredoms. A boredom is a sentence that starts\
    \ with the word \"I\".\n    Sentences are delimited by '.', '?' or '!'.\n   \n\
    \    For example:\n    >>> is_bored(\"Hello world\")\n    0L\n    >>> is_bored(\"\
    The sky is blue. The sun is shining. I love this weather\")\n    1L\n    \n*/\n\
    long is_bored(string S) \n{\n    long boredoms = 0;\n    string[] sentences =\
    \ split(S, \".\");\n    foreach(string sentence; sentences)\n    {\n        string[]\
    \ words = split(sentence, \" \");\n        if(words[0] == \"I\")\n           \
    \ boredoms++;\n    }\n    return boredoms;\n}\nunittest\n{\n    alias candidate\
    \ = is_bored;\n\n    assert(candidate(\"Hello world\") == 0L);\n    assert(candidate(\"\
    Is the sky blue?\") == 0L);\n    assert(candidate(\"I love It !\") == 1L);\n \
    \   assert(candidate(\"bIt\") == 0L);\n    assert(candidate(\"I feel good today.\
    \ I will be productive. will kill It\") == 2L);\n    assert(candidate(\"You and\
    \ I are going for a walk\") == 0L);\n}\nvoid main(){}"
  status: SyntaxError
  stderr: '/tmp/tmp1upyxolo.d(18): Error: undefined identifier `split`

    /tmp/tmp1upyxolo.d(21): Error: undefined identifier `split`

    Failed: ["dmd", "-unittest", "-v", "-o-", "/tmp/tmp1upyxolo.d", "-I/tmp"]

    '
  stdout: ''
  timestamp: 1660163028
- exit_code: 1
  program: "import std.math;\n/*\n\n    You'll be given a string of words, and your\
    \ task is to count the number\n    of boredoms. A boredom is a sentence that starts\
    \ with the word \"I\".\n    Sentences are delimited by '.', '?' or '!'.\n   \n\
    \    For example:\n    >>> is_bored(\"Hello world\")\n    0L\n    >>> is_bored(\"\
    The sky is blue. The sun is shining. I love this weather\")\n    1L\n    \n*/\n\
    long is_bored(string S) \n{\n    long count = 0;\n    string[] words = split(S,\
    \ \" \");\n    foreach(string word; words)\n    {\n        if(word == \"I\")\n\
    \            count++;\n    }\n    return count;\n}\nunittest\n{\n    alias candidate\
    \ = is_bored;\n\n    assert(candidate(\"Hello world\") == 0L);\n    assert(candidate(\"\
    Is the sky blue?\") == 0L);\n    assert(candidate(\"I love It !\") == 1L);\n \
    \   assert(candidate(\"bIt\") == 0L);\n    assert(candidate(\"I feel good today.\
    \ I will be productive. will kill It\") == 2L);\n    assert(candidate(\"You and\
    \ I are going for a walk\") == 0L);\n}\nvoid main(){}"
  status: SyntaxError
  stderr: '/tmp/tmpej_rprd2.d(18): Error: undefined identifier `split`

    Failed: ["dmd", "-unittest", "-v", "-o-", "/tmp/tmpej_rprd2.d", "-I/tmp"]

    '
  stdout: ''
  timestamp: 1660163028
- exit_code: 1
  program: "import std.math;\n/*\n\n    You'll be given a string of words, and your\
    \ task is to count the number\n    of boredoms. A boredom is a sentence that starts\
    \ with the word \"I\".\n    Sentences are delimited by '.', '?' or '!'.\n   \n\
    \    For example:\n    >>> is_bored(\"Hello world\")\n    0L\n    >>> is_bored(\"\
    The sky is blue. The sun is shining. I love this weather\")\n    1L\n    \n*/\n\
    long is_bored(string S) \n{\n    long boredoms = 0;\n    string[] sentences =\
    \ split(S, \".\");\n    foreach(string sentence; sentences)\n    {\n        if(sentence.length\
    \ > 0)\n        {\n            string[] words = split(sentence, \" \");\n    \
    \        if(words[0] == \"I\")\n            {\n                boredoms++;\n \
    \           }\n        }\n    }\n    return boredoms;\n}\nunittest\n{\n    alias\
    \ candidate = is_bored;\n\n    assert(candidate(\"Hello world\") == 0L);\n   \
    \ assert(candidate(\"Is the sky blue?\") == 0L);\n    assert(candidate(\"I love\
    \ It !\") == 1L);\n    assert(candidate(\"bIt\") == 0L);\n    assert(candidate(\"\
    I feel good today. I will be productive. will kill It\") == 2L);\n    assert(candidate(\"\
    You and I are going for a walk\") == 0L);\n}\nvoid main(){}"
  status: SyntaxError
  stderr: '/tmp/tmprvolhnpj.d(18): Error: undefined identifier `split`

    /tmp/tmprvolhnpj.d(23): Error: undefined identifier `split`

    Failed: ["dmd", "-unittest", "-v", "-o-", "/tmp/tmprvolhnpj.d", "-I/tmp"]

    '
  stdout: ''
  timestamp: 1660163028
- exit_code: 1
  program: "import std.math;\n/*\n\n    You'll be given a string of words, and your\
    \ task is to count the number\n    of boredoms. A boredom is a sentence that starts\
    \ with the word \"I\".\n    Sentences are delimited by '.', '?' or '!'.\n   \n\
    \    For example:\n    >>> is_bored(\"Hello world\")\n    0L\n    >>> is_bored(\"\
    The sky is blue. The sun is shining. I love this weather\")\n    1L\n    \n*/\n\
    long is_bored(string S) \n{\n    long boredoms = 0;\n    string[] sentences =\
    \ split(S, \".\");\n    foreach(string sentence; sentences)\n    {\n        if(sentence.length\
    \ > 0)\n        {\n            string[] words = split(sentence, \" \");\n    \
    \        if(words[0] == \"I\")\n            {\n                boredoms++;\n \
    \           }\n        }\n    }\n    return boredoms;\n}\nunittest\n{\n    alias\
    \ candidate = is_bored;\n\n    assert(candidate(\"Hello world\") == 0L);\n   \
    \ assert(candidate(\"Is the sky blue?\") == 0L);\n    assert(candidate(\"I love\
    \ It !\") == 1L);\n    assert(candidate(\"bIt\") == 0L);\n    assert(candidate(\"\
    I feel good today. I will be productive. will kill It\") == 2L);\n    assert(candidate(\"\
    You and I are going for a walk\") == 0L);\n}\nvoid main(){}"
  status: SyntaxError
  stderr: '/tmp/tmprvolhnpj.d(18): Error: undefined identifier `split`

    /tmp/tmprvolhnpj.d(23): Error: undefined identifier `split`

    Failed: ["dmd", "-unittest", "-v", "-o-", "/tmp/tmprvolhnpj.d", "-I/tmp"]

    '
  stdout: ''
  timestamp: 1660163028
- exit_code: 1
  program: "import std.math;\n/*\n\n    You'll be given a string of words, and your\
    \ task is to count the number\n    of boredoms. A boredom is a sentence that starts\
    \ with the word \"I\".\n    Sentences are delimited by '.', '?' or '!'.\n   \n\
    \    For example:\n    >>> is_bored(\"Hello world\")\n    0L\n    >>> is_bored(\"\
    The sky is blue. The sun is shining. I love this weather\")\n    1L\n    \n*/\n\
    long is_bored(string S) \n{\n    long boredoms = 0;\n    string[] sentences =\
    \ split(S, \".\");\n    foreach(string sentence; sentences)\n    {\n        string[]\
    \ words = split(sentence, \" \");\n        if(words[0] == \"I\")\n           \
    \ boredoms++;\n    }\n    return boredoms;\n}\nunittest\n{\n    alias candidate\
    \ = is_bored;\n\n    assert(candidate(\"Hello world\") == 0L);\n    assert(candidate(\"\
    Is the sky blue?\") == 0L);\n    assert(candidate(\"I love It !\") == 1L);\n \
    \   assert(candidate(\"bIt\") == 0L);\n    assert(candidate(\"I feel good today.\
    \ I will be productive. will kill It\") == 2L);\n    assert(candidate(\"You and\
    \ I are going for a walk\") == 0L);\n}\nvoid main(){}"
  status: SyntaxError
  stderr: '/tmp/tmp1upyxolo.d(18): Error: undefined identifier `split`

    /tmp/tmp1upyxolo.d(21): Error: undefined identifier `split`

    Failed: ["dmd", "-unittest", "-v", "-o-", "/tmp/tmp1upyxolo.d", "-I/tmp"]

    '
  stdout: ''
  timestamp: 1660163028
- exit_code: 1
  program: "import std.math;\n/*\n\n    You'll be given a string of words, and your\
    \ task is to count the number\n    of boredoms. A boredom is a sentence that starts\
    \ with the word \"I\".\n    Sentences are delimited by '.', '?' or '!'.\n   \n\
    \    For example:\n    >>> is_bored(\"Hello world\")\n    0L\n    >>> is_bored(\"\
    The sky is blue. The sun is shining. I love this weather\")\n    1L\n    \n*/\n\
    long is_bored(string S) \n{\n    long boredoms = 0;\n    string[] sentences =\
    \ split(S, \".\");\n    foreach(string sentence; sentences)\n    {\n        string[]\
    \ words = split(sentence, \" \");\n        if(words[0] == \"I\")\n           \
    \ boredoms++;\n    }\n    return boredoms;\n}\nunittest\n{\n    alias candidate\
    \ = is_bored;\n\n    assert(candidate(\"Hello world\") == 0L);\n    assert(candidate(\"\
    Is the sky blue?\") == 0L);\n    assert(candidate(\"I love It !\") == 1L);\n \
    \   assert(candidate(\"bIt\") == 0L);\n    assert(candidate(\"I feel good today.\
    \ I will be productive. will kill It\") == 2L);\n    assert(candidate(\"You and\
    \ I are going for a walk\") == 0L);\n}\nvoid main(){}"
  status: SyntaxError
  stderr: '/tmp/tmp1upyxolo.d(18): Error: undefined identifier `split`

    /tmp/tmp1upyxolo.d(21): Error: undefined identifier `split`

    Failed: ["dmd", "-unittest", "-v", "-o-", "/tmp/tmp1upyxolo.d", "-I/tmp"]

    '
  stdout: ''
  timestamp: 1660163028
- exit_code: 1
  program: "import std.math;\n/*\n\n    You'll be given a string of words, and your\
    \ task is to count the number\n    of boredoms. A boredom is a sentence that starts\
    \ with the word \"I\".\n    Sentences are delimited by '.', '?' or '!'.\n   \n\
    \    For example:\n    >>> is_bored(\"Hello world\")\n    0L\n    >>> is_bored(\"\
    The sky is blue. The sun is shining. I love this weather\")\n    1L\n    \n*/\n\
    long is_bored(string S) \n{\n    long boredoms = 0;\n    string[] sentences =\
    \ split(S, \".\");\n    foreach(sentence; sentences)\n    {\n        string[]\
    \ words = split(sentence, \" \");\n        if(words[0] == \"I\")\n           \
    \ boredoms++;\n    }\n    return boredoms;\n}\nunittest\n{\n    alias candidate\
    \ = is_bored;\n\n    assert(candidate(\"Hello world\") == 0L);\n    assert(candidate(\"\
    Is the sky blue?\") == 0L);\n    assert(candidate(\"I love It !\") == 1L);\n \
    \   assert(candidate(\"bIt\") == 0L);\n    assert(candidate(\"I feel good today.\
    \ I will be productive. will kill It\") == 2L);\n    assert(candidate(\"You and\
    \ I are going for a walk\") == 0L);\n}\nvoid main(){}"
  status: SyntaxError
  stderr: '/tmp/tmpx3am4b_0.d(18): Error: undefined identifier `split`

    /tmp/tmpx3am4b_0.d(21): Error: undefined identifier `split`

    Failed: ["dmd", "-unittest", "-v", "-o-", "/tmp/tmpx3am4b_0.d", "-I/tmp"]

    '
  stdout: ''
  timestamp: 1660163028
- exit_code: 1
  program: "import std.math;\n/*\n\n    You'll be given a string of words, and your\
    \ task is to count the number\n    of boredoms. A boredom is a sentence that starts\
    \ with the word \"I\".\n    Sentences are delimited by '.', '?' or '!'.\n   \n\
    \    For example:\n    >>> is_bored(\"Hello world\")\n    0L\n    >>> is_bored(\"\
    The sky is blue. The sun is shining. I love this weather\")\n    1L\n    \n*/\n\
    long is_bored(string S) \n{\n    long boredoms = 0;\n    string[] sentences =\
    \ split(S, \".\");\n    foreach(string sentence; sentences)\n    {\n        string[]\
    \ words = split(sentence, \" \");\n        if(words[0] == \"I\")\n           \
    \ boredoms++;\n    }\n    return boredoms;\n}\nunittest\n{\n    alias candidate\
    \ = is_bored;\n\n    assert(candidate(\"Hello world\") == 0L);\n    assert(candidate(\"\
    Is the sky blue?\") == 0L);\n    assert(candidate(\"I love It !\") == 1L);\n \
    \   assert(candidate(\"bIt\") == 0L);\n    assert(candidate(\"I feel good today.\
    \ I will be productive. will kill It\") == 2L);\n    assert(candidate(\"You and\
    \ I are going for a walk\") == 0L);\n}\nvoid main(){}"
  status: SyntaxError
  stderr: '/tmp/tmp1upyxolo.d(18): Error: undefined identifier `split`

    /tmp/tmp1upyxolo.d(21): Error: undefined identifier `split`

    Failed: ["dmd", "-unittest", "-v", "-o-", "/tmp/tmp1upyxolo.d", "-I/tmp"]

    '
  stdout: ''
  timestamp: 1660163028
- exit_code: 1
  program: "import std.math;\n/*\n\n    You'll be given a string of words, and your\
    \ task is to count the number\n    of boredoms. A boredom is a sentence that starts\
    \ with the word \"I\".\n    Sentences are delimited by '.', '?' or '!'.\n   \n\
    \    For example:\n    >>> is_bored(\"Hello world\")\n    0L\n    >>> is_bored(\"\
    The sky is blue. The sun is shining. I love this weather\")\n    1L\n    \n*/\n\
    long is_bored(string S) \n{\n    long boredoms = 0;\n    string[] sentences =\
    \ split(S, \".\");\n    foreach(sentence; sentences)\n    {\n        if(sentence.length\
    \ > 0)\n        {\n            string[] words = split(sentence, \" \");\n    \
    \        if(words[0] == \"I\")\n            {\n                boredoms++;\n \
    \           }\n        }\n    }\n    return boredoms;\n}\nunittest\n{\n    alias\
    \ candidate = is_bored;\n\n    assert(candidate(\"Hello world\") == 0L);\n   \
    \ assert(candidate(\"Is the sky blue?\") == 0L);\n    assert(candidate(\"I love\
    \ It !\") == 1L);\n    assert(candidate(\"bIt\") == 0L);\n    assert(candidate(\"\
    I feel good today. I will be productive. will kill It\") == 2L);\n    assert(candidate(\"\
    You and I are going for a walk\") == 0L);\n}\nvoid main(){}"
  status: SyntaxError
  stderr: '/tmp/tmpmhho1zga.d(18): Error: undefined identifier `split`

    /tmp/tmpmhho1zga.d(23): Error: undefined identifier `split`

    Failed: ["dmd", "-unittest", "-v", "-o-", "/tmp/tmpmhho1zga.d", "-I/tmp"]

    '
  stdout: ''
  timestamp: 1660163028
- exit_code: 1
  program: "import std.math;\n/*\n\n    You'll be given a string of words, and your\
    \ task is to count the number\n    of boredoms. A boredom is a sentence that starts\
    \ with the word \"I\".\n    Sentences are delimited by '.', '?' or '!'.\n   \n\
    \    For example:\n    >>> is_bored(\"Hello world\")\n    0L\n    >>> is_bored(\"\
    The sky is blue. The sun is shining. I love this weather\")\n    1L\n    \n*/\n\
    long is_bored(string S) \n{\n    long boredoms = 0;\n    long i = 0;\n    long\
    \ len = S.length;\n    while (i < len)\n    {\n        if (S[i] == 'I')\n    \
    \    {\n            boredoms++;\n            while (i < len && S[i] != '.' &&\
    \ S[i] != '?' && S[i] != '!')\n            {\n                i++;\n         \
    \   }\n        }\n        i++;\n    }\n    return boredoms;\n}\nunittest\n{\n\
    \    alias candidate = is_bored;\n\n    assert(candidate(\"Hello world\") == 0L);\n\
    \    assert(candidate(\"Is the sky blue?\") == 0L);\n    assert(candidate(\"I\
    \ love It !\") == 1L);\n    assert(candidate(\"bIt\") == 0L);\n    assert(candidate(\"\
    I feel good today. I will be productive. will kill It\") == 2L);\n    assert(candidate(\"\
    You and I are going for a walk\") == 0L);\n}\nvoid main(){}"
  status: Exception
  stderr: 'core.exception.AssertError@/tmp/tmpyxi969_c.d(39): unittest failure

    ----------------

    ??:? _d_unittestp [0x427e95]

    ??:? void tmpyxi969_c.__unittest_L34_C1() [0x427b57]

    ??:? void tmpyxi969_c.__modtest() [0x427c14]

    ??:? int core.runtime.runModuleUnitTests().__foreachbody2(object.ModuleInfo*)
    [0x42bc2f]

    ??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)).__lambda2(immutable(object.ModuleInfo*))
    [0x42aac2]

    ??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))).__foreachbody2(ref
    rt.sections_elf_shared.DSO) [0x42fc55]

    ??:? int rt.sections_elf_shared.DSO.opApply(scope int delegate(ref rt.sections_elf_shared.DSO))
    [0x430104]

    ??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*)))
    [0x42fbe1]

    ??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)) [0x42aa99]

    ??:? runModuleUnitTests [0x42ba05]

    ??:? void rt.dmain2._d_run_main(int, char**, extern (C) int function(char[][])*).runAll()
    [0x428358]

    ??:? void rt.dmain2._d_r'
  stdout: ''
  timestamp: 1660163028
- exit_code: 1
  program: "import std.math;\n/*\n\n    You'll be given a string of words, and your\
    \ task is to count the number\n    of boredoms. A boredom is a sentence that starts\
    \ with the word \"I\".\n    Sentences are delimited by '.', '?' or '!'.\n   \n\
    \    For example:\n    >>> is_bored(\"Hello world\")\n    0L\n    >>> is_bored(\"\
    The sky is blue. The sun is shining. I love this weather\")\n    1L\n    \n*/\n\
    long is_bored(string S) \n{\n    long boredoms = 0;\n    string[] sentences =\
    \ split(S, \".\");\n    foreach(string sentence; sentences)\n    {\n        if(sentence.length\
    \ > 0)\n        {\n            string[] words = split(sentence, \" \");\n    \
    \        if(words[0] == \"I\")\n            {\n                boredoms++;\n \
    \           }\n        }\n    }\n    return boredoms;\n}\nunittest\n{\n    alias\
    \ candidate = is_bored;\n\n    assert(candidate(\"Hello world\") == 0L);\n   \
    \ assert(candidate(\"Is the sky blue?\") == 0L);\n    assert(candidate(\"I love\
    \ It !\") == 1L);\n    assert(candidate(\"bIt\") == 0L);\n    assert(candidate(\"\
    I feel good today. I will be productive. will kill It\") == 2L);\n    assert(candidate(\"\
    You and I are going for a walk\") == 0L);\n}\nvoid main(){}"
  status: SyntaxError
  stderr: '/tmp/tmprvolhnpj.d(18): Error: undefined identifier `split`

    /tmp/tmprvolhnpj.d(23): Error: undefined identifier `split`

    Failed: ["dmd", "-unittest", "-v", "-o-", "/tmp/tmprvolhnpj.d", "-I/tmp"]

    '
  stdout: ''
  timestamp: 1660163028
- exit_code: 1
  program: "import std.math;\n/*\n\n    You'll be given a string of words, and your\
    \ task is to count the number\n    of boredoms. A boredom is a sentence that starts\
    \ with the word \"I\".\n    Sentences are delimited by '.', '?' or '!'.\n   \n\
    \    For example:\n    >>> is_bored(\"Hello world\")\n    0L\n    >>> is_bored(\"\
    The sky is blue. The sun is shining. I love this weather\")\n    1L\n    \n*/\n\
    long is_bored(string S) \n{\n    long count = 0;\n    string[] words = split(S,\
    \ \" \");\n    foreach(string word; words)\n    {\n        if(word == \"I\")\n\
    \            count++;\n    }\n    return count;\n}\nunittest\n{\n    alias candidate\
    \ = is_bored;\n\n    assert(candidate(\"Hello world\") == 0L);\n    assert(candidate(\"\
    Is the sky blue?\") == 0L);\n    assert(candidate(\"I love It !\") == 1L);\n \
    \   assert(candidate(\"bIt\") == 0L);\n    assert(candidate(\"I feel good today.\
    \ I will be productive. will kill It\") == 2L);\n    assert(candidate(\"You and\
    \ I are going for a walk\") == 0L);\n}\nvoid main(){}"
  status: SyntaxError
  stderr: '/tmp/tmpej_rprd2.d(18): Error: undefined identifier `split`

    Failed: ["dmd", "-unittest", "-v", "-o-", "/tmp/tmpej_rprd2.d", "-I/tmp"]

    '
  stdout: ''
  timestamp: 1660163028
- exit_code: 1
  program: "import std.math;\n/*\n\n    You'll be given a string of words, and your\
    \ task is to count the number\n    of boredoms. A boredom is a sentence that starts\
    \ with the word \"I\".\n    Sentences are delimited by '.', '?' or '!'.\n   \n\
    \    For example:\n    >>> is_bored(\"Hello world\")\n    0L\n    >>> is_bored(\"\
    The sky is blue. The sun is shining. I love this weather\")\n    1L\n    \n*/\n\
    long is_bored(string S) \n{\n    long count = 0;\n    string[] words = split(S,\
    \ \" \");\n    foreach(string word; words)\n    {\n        if(word == \"I\")\n\
    \            count++;\n    }\n    return count;\n}\nunittest\n{\n    alias candidate\
    \ = is_bored;\n\n    assert(candidate(\"Hello world\") == 0L);\n    assert(candidate(\"\
    Is the sky blue?\") == 0L);\n    assert(candidate(\"I love It !\") == 1L);\n \
    \   assert(candidate(\"bIt\") == 0L);\n    assert(candidate(\"I feel good today.\
    \ I will be productive. will kill It\") == 2L);\n    assert(candidate(\"You and\
    \ I are going for a walk\") == 0L);\n}\nvoid main(){}"
  status: SyntaxError
  stderr: '/tmp/tmpej_rprd2.d(18): Error: undefined identifier `split`

    Failed: ["dmd", "-unittest", "-v", "-o-", "/tmp/tmpej_rprd2.d", "-I/tmp"]

    '
  stdout: ''
  timestamp: 1660163028
- exit_code: 1
  program: "import std.math;\n/*\n\n    You'll be given a string of words, and your\
    \ task is to count the number\n    of boredoms. A boredom is a sentence that starts\
    \ with the word \"I\".\n    Sentences are delimited by '.', '?' or '!'.\n   \n\
    \    For example:\n    >>> is_bored(\"Hello world\")\n    0L\n    >>> is_bored(\"\
    The sky is blue. The sun is shining. I love this weather\")\n    1L\n    \n*/\n\
    long is_bored(string S) \n{\n    long boredoms = 0;\n    string[] sentences =\
    \ split(S, \".\");\n    foreach(string sentence; sentences)\n    {\n        string[]\
    \ words = split(sentence, \" \");\n        if(words[0] == \"I\")\n           \
    \ boredoms++;\n    }\n    return boredoms;\n}\nunittest\n{\n    alias candidate\
    \ = is_bored;\n\n    assert(candidate(\"Hello world\") == 0L);\n    assert(candidate(\"\
    Is the sky blue?\") == 0L);\n    assert(candidate(\"I love It !\") == 1L);\n \
    \   assert(candidate(\"bIt\") == 0L);\n    assert(candidate(\"I feel good today.\
    \ I will be productive. will kill It\") == 2L);\n    assert(candidate(\"You and\
    \ I are going for a walk\") == 0L);\n}\nvoid main(){}"
  status: SyntaxError
  stderr: '/tmp/tmp1upyxolo.d(18): Error: undefined identifier `split`

    /tmp/tmp1upyxolo.d(21): Error: undefined identifier `split`

    Failed: ["dmd", "-unittest", "-v", "-o-", "/tmp/tmp1upyxolo.d", "-I/tmp"]

    '
  stdout: ''
  timestamp: 1660163028
- exit_code: 1
  program: "import std.math;\n/*\n\n    You'll be given a string of words, and your\
    \ task is to count the number\n    of boredoms. A boredom is a sentence that starts\
    \ with the word \"I\".\n    Sentences are delimited by '.', '?' or '!'.\n   \n\
    \    For example:\n    >>> is_bored(\"Hello world\")\n    0L\n    >>> is_bored(\"\
    The sky is blue. The sun is shining. I love this weather\")\n    1L\n    \n*/\n\
    long is_bored(string S) \n{\n    long boredoms = 0;\n    auto sentences = split(S,\
    \ \".\");\n    foreach(sentence; sentences)\n    {\n        if(sentence.length\
    \ > 0)\n        {\n            auto words = split(sentence, \" \");\n        \
    \    if(words[0] == \"I\")\n                boredoms++;\n        }\n    }\n  \
    \  return boredoms;\n}\nunittest\n{\n    alias candidate = is_bored;\n\n    assert(candidate(\"\
    Hello world\") == 0L);\n    assert(candidate(\"Is the sky blue?\") == 0L);\n \
    \   assert(candidate(\"I love It !\") == 1L);\n    assert(candidate(\"bIt\") ==\
    \ 0L);\n    assert(candidate(\"I feel good today. I will be productive. will kill\
    \ It\") == 2L);\n    assert(candidate(\"You and I are going for a walk\") == 0L);\n\
    }\nvoid main(){}"
  status: SyntaxError
  stderr: '/tmp/tmpbckz2owa.d(18): Error: undefined identifier `split`

    Failed: ["dmd", "-unittest", "-v", "-o-", "/tmp/tmpbckz2owa.d", "-I/tmp"]

    '
  stdout: ''
  timestamp: 1660163028
- exit_code: 1
  program: "import std.math;\n/*\n\n    You'll be given a string of words, and your\
    \ task is to count the number\n    of boredoms. A boredom is a sentence that starts\
    \ with the word \"I\".\n    Sentences are delimited by '.', '?' or '!'.\n   \n\
    \    For example:\n    >>> is_bored(\"Hello world\")\n    0L\n    >>> is_bored(\"\
    The sky is blue. The sun is shining. I love this weather\")\n    1L\n    \n*/\n\
    long is_bored(string S) \n{\n    long boredoms = 0;\n    string[] sentences =\
    \ split(S, \".\");\n    foreach(string sentence; sentences)\n    {\n        if(sentence.length\
    \ > 0)\n        {\n            string[] words = split(sentence, \" \");\n    \
    \        if(words[0] == \"I\")\n            {\n                boredoms++;\n \
    \           }\n        }\n    }\n    return boredoms;\n}\nunittest\n{\n    alias\
    \ candidate = is_bored;\n\n    assert(candidate(\"Hello world\") == 0L);\n   \
    \ assert(candidate(\"Is the sky blue?\") == 0L);\n    assert(candidate(\"I love\
    \ It !\") == 1L);\n    assert(candidate(\"bIt\") == 0L);\n    assert(candidate(\"\
    I feel good today. I will be productive. will kill It\") == 2L);\n    assert(candidate(\"\
    You and I are going for a walk\") == 0L);\n}\nvoid main(){}"
  status: SyntaxError
  stderr: '/tmp/tmprvolhnpj.d(18): Error: undefined identifier `split`

    /tmp/tmprvolhnpj.d(23): Error: undefined identifier `split`

    Failed: ["dmd", "-unittest", "-v", "-o-", "/tmp/tmprvolhnpj.d", "-I/tmp"]

    '
  stdout: ''
  timestamp: 1660163028
- exit_code: 1
  program: "import std.math;\n/*\n\n    You'll be given a string of words, and your\
    \ task is to count the number\n    of boredoms. A boredom is a sentence that starts\
    \ with the word \"I\".\n    Sentences are delimited by '.', '?' or '!'.\n   \n\
    \    For example:\n    >>> is_bored(\"Hello world\")\n    0L\n    >>> is_bored(\"\
    The sky is blue. The sun is shining. I love this weather\")\n    1L\n    \n*/\n\
    long is_bored(string S) \n{\n    long boredoms = 0;\n    string[] sentences =\
    \ split(S, \".\");\n    foreach(string sentence; sentences)\n    {\n        if(sentence.length\
    \ > 0)\n        {\n            string[] words = split(sentence, \" \");\n    \
    \        if(words[0] == \"I\")\n            {\n                boredoms++;\n \
    \           }\n        }\n    }\n    return boredoms;\n}\nunittest\n{\n    alias\
    \ candidate = is_bored;\n\n    assert(candidate(\"Hello world\") == 0L);\n   \
    \ assert(candidate(\"Is the sky blue?\") == 0L);\n    assert(candidate(\"I love\
    \ It !\") == 1L);\n    assert(candidate(\"bIt\") == 0L);\n    assert(candidate(\"\
    I feel good today. I will be productive. will kill It\") == 2L);\n    assert(candidate(\"\
    You and I are going for a walk\") == 0L);\n}\nvoid main(){}"
  status: SyntaxError
  stderr: '/tmp/tmprvolhnpj.d(18): Error: undefined identifier `split`

    /tmp/tmprvolhnpj.d(23): Error: undefined identifier `split`

    Failed: ["dmd", "-unittest", "-v", "-o-", "/tmp/tmprvolhnpj.d", "-I/tmp"]

    '
  stdout: ''
  timestamp: 1660163028
- exit_code: 1
  program: "import std.math;\n/*\n\n    You'll be given a string of words, and your\
    \ task is to count the number\n    of boredoms. A boredom is a sentence that starts\
    \ with the word \"I\".\n    Sentences are delimited by '.', '?' or '!'.\n   \n\
    \    For example:\n    >>> is_bored(\"Hello world\")\n    0L\n    >>> is_bored(\"\
    The sky is blue. The sun is shining. I love this weather\")\n    1L\n    \n*/\n\
    long is_bored(string S) \n{\n    long count = 0;\n    string[] words = split(S,\
    \ \" \");\n    foreach(string word; words)\n    {\n        if(word == \"I\")\n\
    \            count++;\n    }\n    return count;\n}\nunittest\n{\n    alias candidate\
    \ = is_bored;\n\n    assert(candidate(\"Hello world\") == 0L);\n    assert(candidate(\"\
    Is the sky blue?\") == 0L);\n    assert(candidate(\"I love It !\") == 1L);\n \
    \   assert(candidate(\"bIt\") == 0L);\n    assert(candidate(\"I feel good today.\
    \ I will be productive. will kill It\") == 2L);\n    assert(candidate(\"You and\
    \ I are going for a walk\") == 0L);\n}\nvoid main(){}"
  status: SyntaxError
  stderr: '/tmp/tmpej_rprd2.d(18): Error: undefined identifier `split`

    Failed: ["dmd", "-unittest", "-v", "-o-", "/tmp/tmpej_rprd2.d", "-I/tmp"]

    '
  stdout: ''
  timestamp: 1660163028
- exit_code: 1
  program: "import std.math;\n/*\n\n    You'll be given a string of words, and your\
    \ task is to count the number\n    of boredoms. A boredom is a sentence that starts\
    \ with the word \"I\".\n    Sentences are delimited by '.', '?' or '!'.\n   \n\
    \    For example:\n    >>> is_bored(\"Hello world\")\n    0L\n    >>> is_bored(\"\
    The sky is blue. The sun is shining. I love this weather\")\n    1L\n    \n*/\n\
    long is_bored(string S) \n{\n    long count = 0;\n    string[] sentences = split(S,\
    \ \".\");\n    foreach(string sentence; sentences)\n    {\n        if(sentence.length\
    \ > 0)\n        {\n            string[] words = split(sentence, \" \");\n    \
    \        if(words[0] == \"I\")\n            {\n                count++;\n    \
    \        }\n        }\n    }\n    return count;\n}\nunittest\n{\n    alias candidate\
    \ = is_bored;\n\n    assert(candidate(\"Hello world\") == 0L);\n    assert(candidate(\"\
    Is the sky blue?\") == 0L);\n    assert(candidate(\"I love It !\") == 1L);\n \
    \   assert(candidate(\"bIt\") == 0L);\n    assert(candidate(\"I feel good today.\
    \ I will be productive. will kill It\") == 2L);\n    assert(candidate(\"You and\
    \ I are going for a walk\") == 0L);\n}\nvoid main(){}"
  status: SyntaxError
  stderr: '/tmp/tmp03651ldh.d(18): Error: undefined identifier `split`

    /tmp/tmp03651ldh.d(23): Error: undefined identifier `split`

    Failed: ["dmd", "-unittest", "-v", "-o-", "/tmp/tmp03651ldh.d", "-I/tmp"]

    '
  stdout: ''
  timestamp: 1660163028
- exit_code: 1
  program: "import std.math;\n/*\n\n    You'll be given a string of words, and your\
    \ task is to count the number\n    of boredoms. A boredom is a sentence that starts\
    \ with the word \"I\".\n    Sentences are delimited by '.', '?' or '!'.\n   \n\
    \    For example:\n    >>> is_bored(\"Hello world\")\n    0L\n    >>> is_bored(\"\
    The sky is blue. The sun is shining. I love this weather\")\n    1L\n    \n*/\n\
    long is_bored(string S) \n{\n    long boredoms = 0;\n    long i = 0;\n    long\
    \ j = 0;\n    long len = S.length;\n    while (i < len)\n    {\n        if (S[i]\
    \ == 'I')\n        {\n            j = i;\n            while (j < len && S[j] !=\
    \ '.' && S[j] != '?' && S[j] != '!')\n            {\n                j++;\n  \
    \          }\n            if (j == len || S[j] == '.')\n            {\n      \
    \          boredoms++;\n            }\n            i = j;\n        }\n       \
    \ i++;\n    }\n    return boredoms;\n}\nunittest\n{\n    alias candidate = is_bored;\n\
    \n    assert(candidate(\"Hello world\") == 0L);\n    assert(candidate(\"Is the\
    \ sky blue?\") == 0L);\n    assert(candidate(\"I love It !\") == 1L);\n    assert(candidate(\"\
    bIt\") == 0L);\n    assert(candidate(\"I feel good today. I will be productive.\
    \ will kill It\") == 2L);\n    assert(candidate(\"You and I are going for a walk\"\
    ) == 0L);\n}\nvoid main(){}"
  status: Exception
  stderr: 'core.exception.AssertError@/tmp/tmpmit9y5sq.d(46): unittest failure

    ----------------

    ??:? _d_unittestp [0x427edd]

    ??:? void tmpmit9y5sq.__unittest_L40_C1() [0x427bca]

    ??:? void tmpmit9y5sq.__modtest() [0x427c5c]

    ??:? int core.runtime.runModuleUnitTests().__foreachbody2(object.ModuleInfo*)
    [0x42bc77]

    ??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)).__lambda2(immutable(object.ModuleInfo*))
    [0x42ab0a]

    ??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))).__foreachbody2(ref
    rt.sections_elf_shared.DSO) [0x42fc9d]

    ??:? int rt.sections_elf_shared.DSO.opApply(scope int delegate(ref rt.sections_elf_shared.DSO))
    [0x43014c]

    ??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*)))
    [0x42fc29]

    ??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)) [0x42aae1]

    ??:? runModuleUnitTests [0x42ba4d]

    ??:? void rt.dmain2._d_run_main(int, char**, extern (C) int function(char[][])*).runAll()
    [0x4283a0]

    ??:? void rt.dmain2._d_r'
  stdout: ''
  timestamp: 1660163028
- exit_code: 1
  program: "import std.math;\n/*\n\n    You'll be given a string of words, and your\
    \ task is to count the number\n    of boredoms. A boredom is a sentence that starts\
    \ with the word \"I\".\n    Sentences are delimited by '.', '?' or '!'.\n   \n\
    \    For example:\n    >>> is_bored(\"Hello world\")\n    0L\n    >>> is_bored(\"\
    The sky is blue. The sun is shining. I love this weather\")\n    1L\n    \n*/\n\
    long is_bored(string S) \n{\n    long boredoms = 0;\n    string[] sentences =\
    \ split(S, \".\");\n    foreach(string sentence; sentences)\n    {\n        string[]\
    \ words = split(sentence, \" \");\n        if(words[0] == \"I\")\n           \
    \ boredoms++;\n    }\n    return boredoms;\n}\nunittest\n{\n    alias candidate\
    \ = is_bored;\n\n    assert(candidate(\"Hello world\") == 0L);\n    assert(candidate(\"\
    Is the sky blue?\") == 0L);\n    assert(candidate(\"I love It !\") == 1L);\n \
    \   assert(candidate(\"bIt\") == 0L);\n    assert(candidate(\"I feel good today.\
    \ I will be productive. will kill It\") == 2L);\n    assert(candidate(\"You and\
    \ I are going for a walk\") == 0L);\n}\nvoid main(){}"
  status: SyntaxError
  stderr: '/tmp/tmp1upyxolo.d(18): Error: undefined identifier `split`

    /tmp/tmp1upyxolo.d(21): Error: undefined identifier `split`

    Failed: ["dmd", "-unittest", "-v", "-o-", "/tmp/tmp1upyxolo.d", "-I/tmp"]

    '
  stdout: ''
  timestamp: 1660163028
- exit_code: 1
  program: "import std.math;\n/*\n\n    You'll be given a string of words, and your\
    \ task is to count the number\n    of boredoms. A boredom is a sentence that starts\
    \ with the word \"I\".\n    Sentences are delimited by '.', '?' or '!'.\n   \n\
    \    For example:\n    >>> is_bored(\"Hello world\")\n    0L\n    >>> is_bored(\"\
    The sky is blue. The sun is shining. I love this weather\")\n    1L\n    \n*/\n\
    long is_bored(string S) \n{\n    long boredoms = 0;\n    auto words = split(S,\
    \ \" .!?\");\n    foreach(word; words)\n    {\n        if(word.length > 0 && word[0]\
    \ == 'I')\n            boredoms++;\n    }\n    return boredoms;\n}\nunittest\n\
    {\n    alias candidate = is_bored;\n\n    assert(candidate(\"Hello world\") ==\
    \ 0L);\n    assert(candidate(\"Is the sky blue?\") == 0L);\n    assert(candidate(\"\
    I love It !\") == 1L);\n    assert(candidate(\"bIt\") == 0L);\n    assert(candidate(\"\
    I feel good today. I will be productive. will kill It\") == 2L);\n    assert(candidate(\"\
    You and I are going for a walk\") == 0L);\n}\nvoid main(){}"
  status: SyntaxError
  stderr: '/tmp/tmp2v0ospfo.d(18): Error: undefined identifier `split`

    Failed: ["dmd", "-unittest", "-v", "-o-", "/tmp/tmp2v0ospfo.d", "-I/tmp"]

    '
  stdout: ''
  timestamp: 1660163028
- exit_code: 1
  program: "import std.math;\n/*\n\n    You'll be given a string of words, and your\
    \ task is to count the number\n    of boredoms. A boredom is a sentence that starts\
    \ with the word \"I\".\n    Sentences are delimited by '.', '?' or '!'.\n   \n\
    \    For example:\n    >>> is_bored(\"Hello world\")\n    0L\n    >>> is_bored(\"\
    The sky is blue. The sun is shining. I love this weather\")\n    1L\n    \n*/\n\
    long is_bored(string S) \n{\n    long boredoms = 0;\n    string[] sentences =\
    \ split(S, \".\");\n    foreach(string sentence; sentences)\n    {\n        string[]\
    \ words = split(sentence, \" \");\n        if(words[0] == \"I\")\n           \
    \ boredoms++;\n    }\n    return boredoms;\n}\nunittest\n{\n    alias candidate\
    \ = is_bored;\n\n    assert(candidate(\"Hello world\") == 0L);\n    assert(candidate(\"\
    Is the sky blue?\") == 0L);\n    assert(candidate(\"I love It !\") == 1L);\n \
    \   assert(candidate(\"bIt\") == 0L);\n    assert(candidate(\"I feel good today.\
    \ I will be productive. will kill It\") == 2L);\n    assert(candidate(\"You and\
    \ I are going for a walk\") == 0L);\n}\nvoid main(){}"
  status: SyntaxError
  stderr: '/tmp/tmp1upyxolo.d(18): Error: undefined identifier `split`

    /tmp/tmp1upyxolo.d(21): Error: undefined identifier `split`

    Failed: ["dmd", "-unittest", "-v", "-o-", "/tmp/tmp1upyxolo.d", "-I/tmp"]

    '
  stdout: ''
  timestamp: 1660163028
- exit_code: 1
  program: "import std.math;\n/*\n\n    You'll be given a string of words, and your\
    \ task is to count the number\n    of boredoms. A boredom is a sentence that starts\
    \ with the word \"I\".\n    Sentences are delimited by '.', '?' or '!'.\n   \n\
    \    For example:\n    >>> is_bored(\"Hello world\")\n    0L\n    >>> is_bored(\"\
    The sky is blue. The sun is shining. I love this weather\")\n    1L\n    \n*/\n\
    long is_bored(string S) \n{\n    long count = 0;\n    auto words = split(S, \"\
    \ \");\n    foreach(word; words)\n    {\n        if(word == \"I\")\n         \
    \   count++;\n    }\n    return count;\n}\nunittest\n{\n    alias candidate =\
    \ is_bored;\n\n    assert(candidate(\"Hello world\") == 0L);\n    assert(candidate(\"\
    Is the sky blue?\") == 0L);\n    assert(candidate(\"I love It !\") == 1L);\n \
    \   assert(candidate(\"bIt\") == 0L);\n    assert(candidate(\"I feel good today.\
    \ I will be productive. will kill It\") == 2L);\n    assert(candidate(\"You and\
    \ I are going for a walk\") == 0L);\n}\nvoid main(){}"
  status: SyntaxError
  stderr: '/tmp/tmpd7u7448s.d(18): Error: undefined identifier `split`

    Failed: ["dmd", "-unittest", "-v", "-o-", "/tmp/tmpd7u7448s.d", "-I/tmp"]

    '
  stdout: ''
  timestamp: 1660163028
- exit_code: 1
  program: "import std.math;\n/*\n\n    You'll be given a string of words, and your\
    \ task is to count the number\n    of boredoms. A boredom is a sentence that starts\
    \ with the word \"I\".\n    Sentences are delimited by '.', '?' or '!'.\n   \n\
    \    For example:\n    >>> is_bored(\"Hello world\")\n    0L\n    >>> is_bored(\"\
    The sky is blue. The sun is shining. I love this weather\")\n    1L\n    \n*/\n\
    long is_bored(string S) \n{\n    long boredoms = 0;\n    string[] sentences =\
    \ split(S, '.');\n    foreach(string sentence; sentences)\n    {\n        if(sentence.length\
    \ > 0)\n        {\n            string[] words = split(sentence, ' ');\n      \
    \      if(words[0] == \"I\")\n            {\n                boredoms++;\n   \
    \         }\n        }\n    }\n    return boredoms;\n}\nunittest\n{\n    alias\
    \ candidate = is_bored;\n\n    assert(candidate(\"Hello world\") == 0L);\n   \
    \ assert(candidate(\"Is the sky blue?\") == 0L);\n    assert(candidate(\"I love\
    \ It !\") == 1L);\n    assert(candidate(\"bIt\") == 0L);\n    assert(candidate(\"\
    I feel good today. I will be productive. will kill It\") == 2L);\n    assert(candidate(\"\
    You and I are going for a walk\") == 0L);\n}\nvoid main(){}"
  status: SyntaxError
  stderr: '/tmp/tmp9fxah167.d(18): Error: undefined identifier `split`

    /tmp/tmp9fxah167.d(23): Error: undefined identifier `split`

    Failed: ["dmd", "-unittest", "-v", "-o-", "/tmp/tmp9fxah167.d", "-I/tmp"]

    '
  stdout: ''
  timestamp: 1660163028
- exit_code: 1
  program: "import std.math;\n/*\n\n    You'll be given a string of words, and your\
    \ task is to count the number\n    of boredoms. A boredom is a sentence that starts\
    \ with the word \"I\".\n    Sentences are delimited by '.', '?' or '!'.\n   \n\
    \    For example:\n    >>> is_bored(\"Hello world\")\n    0L\n    >>> is_bored(\"\
    The sky is blue. The sun is shining. I love this weather\")\n    1L\n    \n*/\n\
    long is_bored(string S) \n{\n    long count = 0;\n    string[] words = split(S,\
    \ \" \");\n    foreach(string word; words)\n    {\n        if(word == \"I\")\n\
    \            count++;\n    }\n    return count;\n}\nunittest\n{\n    alias candidate\
    \ = is_bored;\n\n    assert(candidate(\"Hello world\") == 0L);\n    assert(candidate(\"\
    Is the sky blue?\") == 0L);\n    assert(candidate(\"I love It !\") == 1L);\n \
    \   assert(candidate(\"bIt\") == 0L);\n    assert(candidate(\"I feel good today.\
    \ I will be productive. will kill It\") == 2L);\n    assert(candidate(\"You and\
    \ I are going for a walk\") == 0L);\n}\nvoid main(){}"
  status: SyntaxError
  stderr: '/tmp/tmpej_rprd2.d(18): Error: undefined identifier `split`

    Failed: ["dmd", "-unittest", "-v", "-o-", "/tmp/tmpej_rprd2.d", "-I/tmp"]

    '
  stdout: ''
  timestamp: 1660163028
- exit_code: 1
  program: "import std.math;\n/*\n\n    You'll be given a string of words, and your\
    \ task is to count the number\n    of boredoms. A boredom is a sentence that starts\
    \ with the word \"I\".\n    Sentences are delimited by '.', '?' or '!'.\n   \n\
    \    For example:\n    >>> is_bored(\"Hello world\")\n    0L\n    >>> is_bored(\"\
    The sky is blue. The sun is shining. I love this weather\")\n    1L\n    \n*/\n\
    long is_bored(string S) \n{\n    long count = 0;\n    string[] words = split(S,\
    \ \" \");\n    foreach(string word; words)\n    {\n        if(word == \"I\")\n\
    \            count++;\n    }\n    return count;\n}\nunittest\n{\n    alias candidate\
    \ = is_bored;\n\n    assert(candidate(\"Hello world\") == 0L);\n    assert(candidate(\"\
    Is the sky blue?\") == 0L);\n    assert(candidate(\"I love It !\") == 1L);\n \
    \   assert(candidate(\"bIt\") == 0L);\n    assert(candidate(\"I feel good today.\
    \ I will be productive. will kill It\") == 2L);\n    assert(candidate(\"You and\
    \ I are going for a walk\") == 0L);\n}\nvoid main(){}"
  status: SyntaxError
  stderr: '/tmp/tmpej_rprd2.d(18): Error: undefined identifier `split`

    Failed: ["dmd", "-unittest", "-v", "-o-", "/tmp/tmpej_rprd2.d", "-I/tmp"]

    '
  stdout: ''
  timestamp: 1660163028
- exit_code: 1
  program: "import std.math;\n/*\n\n    You'll be given a string of words, and your\
    \ task is to count the number\n    of boredoms. A boredom is a sentence that starts\
    \ with the word \"I\".\n    Sentences are delimited by '.', '?' or '!'.\n   \n\
    \    For example:\n    >>> is_bored(\"Hello world\")\n    0L\n    >>> is_bored(\"\
    The sky is blue. The sun is shining. I love this weather\")\n    1L\n    \n*/\n\
    long is_bored(string S) \n{\n    long boredoms = 0;\n    string[] sentences =\
    \ split(S, \".\");\n    foreach(sentence; sentences)\n    {\n        string[]\
    \ words = split(sentence, \" \");\n        if(words[0] == \"I\")\n           \
    \ boredoms++;\n    }\n    return boredoms;\n}\nunittest\n{\n    alias candidate\
    \ = is_bored;\n\n    assert(candidate(\"Hello world\") == 0L);\n    assert(candidate(\"\
    Is the sky blue?\") == 0L);\n    assert(candidate(\"I love It !\") == 1L);\n \
    \   assert(candidate(\"bIt\") == 0L);\n    assert(candidate(\"I feel good today.\
    \ I will be productive. will kill It\") == 2L);\n    assert(candidate(\"You and\
    \ I are going for a walk\") == 0L);\n}\nvoid main(){}"
  status: SyntaxError
  stderr: '/tmp/tmpx3am4b_0.d(18): Error: undefined identifier `split`

    /tmp/tmpx3am4b_0.d(21): Error: undefined identifier `split`

    Failed: ["dmd", "-unittest", "-v", "-o-", "/tmp/tmpx3am4b_0.d", "-I/tmp"]

    '
  stdout: ''
  timestamp: 1660163028
- exit_code: 1
  program: "import std.math;\n/*\n\n    You'll be given a string of words, and your\
    \ task is to count the number\n    of boredoms. A boredom is a sentence that starts\
    \ with the word \"I\".\n    Sentences are delimited by '.', '?' or '!'.\n   \n\
    \    For example:\n    >>> is_bored(\"Hello world\")\n    0L\n    >>> is_bored(\"\
    The sky is blue. The sun is shining. I love this weather\")\n    1L\n    \n*/\n\
    long is_bored(string S) \n{\n    long boredoms = 0;\n    string[] sentences =\
    \ split(S, \".\");\n    foreach(string sentence; sentences)\n    {\n        string[]\
    \ words = split(sentence, \" \");\n        if(words[0] == \"I\")\n           \
    \ boredoms++;\n    }\n    return boredoms;\n}\nunittest\n{\n    alias candidate\
    \ = is_bored;\n\n    assert(candidate(\"Hello world\") == 0L);\n    assert(candidate(\"\
    Is the sky blue?\") == 0L);\n    assert(candidate(\"I love It !\") == 1L);\n \
    \   assert(candidate(\"bIt\") == 0L);\n    assert(candidate(\"I feel good today.\
    \ I will be productive. will kill It\") == 2L);\n    assert(candidate(\"You and\
    \ I are going for a walk\") == 0L);\n}\nvoid main(){}"
  status: SyntaxError
  stderr: '/tmp/tmp1upyxolo.d(18): Error: undefined identifier `split`

    /tmp/tmp1upyxolo.d(21): Error: undefined identifier `split`

    Failed: ["dmd", "-unittest", "-v", "-o-", "/tmp/tmp1upyxolo.d", "-I/tmp"]

    '
  stdout: ''
  timestamp: 1660163028
- exit_code: 1
  program: "import std.math;\n/*\n\n    You'll be given a string of words, and your\
    \ task is to count the number\n    of boredoms. A boredom is a sentence that starts\
    \ with the word \"I\".\n    Sentences are delimited by '.', '?' or '!'.\n   \n\
    \    For example:\n    >>> is_bored(\"Hello world\")\n    0L\n    >>> is_bored(\"\
    The sky is blue. The sun is shining. I love this weather\")\n    1L\n    \n*/\n\
    long is_bored(string S) \n{\n    long boredoms = 0;\n    string[] sentences =\
    \ split(S, \".\");\n    foreach(string sentence; sentences)\n    {\n        if(sentence.length\
    \ > 0)\n        {\n            string[] words = split(sentence, \" \");\n    \
    \        if(words[0] == \"I\")\n            {\n                boredoms++;\n \
    \           }\n        }\n    }\n    return boredoms;\n}\nunittest\n{\n    alias\
    \ candidate = is_bored;\n\n    assert(candidate(\"Hello world\") == 0L);\n   \
    \ assert(candidate(\"Is the sky blue?\") == 0L);\n    assert(candidate(\"I love\
    \ It !\") == 1L);\n    assert(candidate(\"bIt\") == 0L);\n    assert(candidate(\"\
    I feel good today. I will be productive. will kill It\") == 2L);\n    assert(candidate(\"\
    You and I are going for a walk\") == 0L);\n}\nvoid main(){}"
  status: SyntaxError
  stderr: '/tmp/tmprvolhnpj.d(18): Error: undefined identifier `split`

    /tmp/tmprvolhnpj.d(23): Error: undefined identifier `split`

    Failed: ["dmd", "-unittest", "-v", "-o-", "/tmp/tmprvolhnpj.d", "-I/tmp"]

    '
  stdout: ''
  timestamp: 1660163028
- exit_code: 1
  program: "import std.math;\n/*\n\n    You'll be given a string of words, and your\
    \ task is to count the number\n    of boredoms. A boredom is a sentence that starts\
    \ with the word \"I\".\n    Sentences are delimited by '.', '?' or '!'.\n   \n\
    \    For example:\n    >>> is_bored(\"Hello world\")\n    0L\n    >>> is_bored(\"\
    The sky is blue. The sun is shining. I love this weather\")\n    1L\n    \n*/\n\
    long is_bored(string S) \n{\n    long count = 0;\n    string[] words = split(S,\
    \ \" \");\n    foreach(string word; words)\n    {\n        if(word == \"I\")\n\
    \            count++;\n    }\n    return count;\n}\nunittest\n{\n    alias candidate\
    \ = is_bored;\n\n    assert(candidate(\"Hello world\") == 0L);\n    assert(candidate(\"\
    Is the sky blue?\") == 0L);\n    assert(candidate(\"I love It !\") == 1L);\n \
    \   assert(candidate(\"bIt\") == 0L);\n    assert(candidate(\"I feel good today.\
    \ I will be productive. will kill It\") == 2L);\n    assert(candidate(\"You and\
    \ I are going for a walk\") == 0L);\n}\nvoid main(){}"
  status: SyntaxError
  stderr: '/tmp/tmpej_rprd2.d(18): Error: undefined identifier `split`

    Failed: ["dmd", "-unittest", "-v", "-o-", "/tmp/tmpej_rprd2.d", "-I/tmp"]

    '
  stdout: ''
  timestamp: 1660163028
- exit_code: 1
  program: "import std.math;\n/*\n\n    You'll be given a string of words, and your\
    \ task is to count the number\n    of boredoms. A boredom is a sentence that starts\
    \ with the word \"I\".\n    Sentences are delimited by '.', '?' or '!'.\n   \n\
    \    For example:\n    >>> is_bored(\"Hello world\")\n    0L\n    >>> is_bored(\"\
    The sky is blue. The sun is shining. I love this weather\")\n    1L\n    \n*/\n\
    long is_bored(string S) \n{\n    long boredoms = 0;\n    string[] sentences =\
    \ split(S, \".\");\n    foreach(string sentence; sentences)\n    {\n        if(sentence.length\
    \ > 0)\n        {\n            string[] words = split(sentence, \" \");\n    \
    \        if(words[0] == \"I\")\n            {\n                boredoms++;\n \
    \           }\n        }\n    }\n    return boredoms;\n}\nunittest\n{\n    alias\
    \ candidate = is_bored;\n\n    assert(candidate(\"Hello world\") == 0L);\n   \
    \ assert(candidate(\"Is the sky blue?\") == 0L);\n    assert(candidate(\"I love\
    \ It !\") == 1L);\n    assert(candidate(\"bIt\") == 0L);\n    assert(candidate(\"\
    I feel good today. I will be productive. will kill It\") == 2L);\n    assert(candidate(\"\
    You and I are going for a walk\") == 0L);\n}\nvoid main(){}"
  status: SyntaxError
  stderr: '/tmp/tmprvolhnpj.d(18): Error: undefined identifier `split`

    /tmp/tmprvolhnpj.d(23): Error: undefined identifier `split`

    Failed: ["dmd", "-unittest", "-v", "-o-", "/tmp/tmprvolhnpj.d", "-I/tmp"]

    '
  stdout: ''
  timestamp: 1660163028
- exit_code: 1
  program: "import std.math;\n/*\n\n    You'll be given a string of words, and your\
    \ task is to count the number\n    of boredoms. A boredom is a sentence that starts\
    \ with the word \"I\".\n    Sentences are delimited by '.', '?' or '!'.\n   \n\
    \    For example:\n    >>> is_bored(\"Hello world\")\n    0L\n    >>> is_bored(\"\
    The sky is blue. The sun is shining. I love this weather\")\n    1L\n    \n*/\n\
    long is_bored(string S) \n{\n    long boredoms = 0;\n    string[] sentences =\
    \ split(S, \".\");\n    foreach(sentence; sentences)\n    {\n        if(sentence.length\
    \ > 0)\n        {\n            string[] words = split(sentence, \" \");\n    \
    \        if(words[0] == \"I\")\n            {\n                boredoms++;\n \
    \           }\n        }\n    }\n    return boredoms;\n}\nunittest\n{\n    alias\
    \ candidate = is_bored;\n\n    assert(candidate(\"Hello world\") == 0L);\n   \
    \ assert(candidate(\"Is the sky blue?\") == 0L);\n    assert(candidate(\"I love\
    \ It !\") == 1L);\n    assert(candidate(\"bIt\") == 0L);\n    assert(candidate(\"\
    I feel good today. I will be productive. will kill It\") == 2L);\n    assert(candidate(\"\
    You and I are going for a walk\") == 0L);\n}\nvoid main(){}"
  status: SyntaxError
  stderr: '/tmp/tmpmhho1zga.d(18): Error: undefined identifier `split`

    /tmp/tmpmhho1zga.d(23): Error: undefined identifier `split`

    Failed: ["dmd", "-unittest", "-v", "-o-", "/tmp/tmpmhho1zga.d", "-I/tmp"]

    '
  stdout: ''
  timestamp: 1660163028
- exit_code: 1
  program: "import std.math;\n/*\n\n    You'll be given a string of words, and your\
    \ task is to count the number\n    of boredoms. A boredom is a sentence that starts\
    \ with the word \"I\".\n    Sentences are delimited by '.', '?' or '!'.\n   \n\
    \    For example:\n    >>> is_bored(\"Hello world\")\n    0L\n    >>> is_bored(\"\
    The sky is blue. The sun is shining. I love this weather\")\n    1L\n    \n*/\n\
    long is_bored(string S) \n{\n    long count = 0;\n    string[] sentences = split(S,\
    \ \".\");\n    foreach(string sentence; sentences)\n    {\n        string[] words\
    \ = split(sentence, \" \");\n        if(words[0] == \"I\")\n            count++;\n\
    \    }\n    return count;\n}\nunittest\n{\n    alias candidate = is_bored;\n\n\
    \    assert(candidate(\"Hello world\") == 0L);\n    assert(candidate(\"Is the\
    \ sky blue?\") == 0L);\n    assert(candidate(\"I love It !\") == 1L);\n    assert(candidate(\"\
    bIt\") == 0L);\n    assert(candidate(\"I feel good today. I will be productive.\
    \ will kill It\") == 2L);\n    assert(candidate(\"You and I are going for a walk\"\
    ) == 0L);\n}\nvoid main(){}"
  status: SyntaxError
  stderr: '/tmp/tmpd7dz0lhc.d(18): Error: undefined identifier `split`

    /tmp/tmpd7dz0lhc.d(21): Error: undefined identifier `split`

    Failed: ["dmd", "-unittest", "-v", "-o-", "/tmp/tmpd7dz0lhc.d", "-I/tmp"]

    '
  stdout: ''
  timestamp: 1660163028
- exit_code: 1
  program: "import std.math;\n/*\n\n    You'll be given a string of words, and your\
    \ task is to count the number\n    of boredoms. A boredom is a sentence that starts\
    \ with the word \"I\".\n    Sentences are delimited by '.', '?' or '!'.\n   \n\
    \    For example:\n    >>> is_bored(\"Hello world\")\n    0L\n    >>> is_bored(\"\
    The sky is blue. The sun is shining. I love this weather\")\n    1L\n    \n*/\n\
    long is_bored(string S) \n{\n    long boredoms = 0;\n    string[] sentences =\
    \ split(S, \".\");\n    foreach(string sentence; sentences)\n    {\n        if(sentence.length\
    \ > 0)\n        {\n            string[] words = split(sentence, \" \");\n    \
    \        if(words[0] == \"I\")\n            {\n                boredoms++;\n \
    \           }\n        }\n    }\n    return boredoms;\n}\nunittest\n{\n    alias\
    \ candidate = is_bored;\n\n    assert(candidate(\"Hello world\") == 0L);\n   \
    \ assert(candidate(\"Is the sky blue?\") == 0L);\n    assert(candidate(\"I love\
    \ It !\") == 1L);\n    assert(candidate(\"bIt\") == 0L);\n    assert(candidate(\"\
    I feel good today. I will be productive. will kill It\") == 2L);\n    assert(candidate(\"\
    You and I are going for a walk\") == 0L);\n}\nvoid main(){}"
  status: SyntaxError
  stderr: '/tmp/tmprvolhnpj.d(18): Error: undefined identifier `split`

    /tmp/tmprvolhnpj.d(23): Error: undefined identifier `split`

    Failed: ["dmd", "-unittest", "-v", "-o-", "/tmp/tmprvolhnpj.d", "-I/tmp"]

    '
  stdout: ''
  timestamp: 1660163028
- exit_code: 1
  program: "import std.math;\n/*\n\n    You'll be given a string of words, and your\
    \ task is to count the number\n    of boredoms. A boredom is a sentence that starts\
    \ with the word \"I\".\n    Sentences are delimited by '.', '?' or '!'.\n   \n\
    \    For example:\n    >>> is_bored(\"Hello world\")\n    0L\n    >>> is_bored(\"\
    The sky is blue. The sun is shining. I love this weather\")\n    1L\n    \n*/\n\
    long is_bored(string S) \n{\n    long boredoms = 0;\n    string[] sentences =\
    \ split(S, \".\");\n    foreach(string sentence; sentences)\n    {\n        string[]\
    \ words = split(sentence, \" \");\n        if(words[0] == \"I\")\n           \
    \ boredoms++;\n    }\n    return boredoms;\n}\nunittest\n{\n    alias candidate\
    \ = is_bored;\n\n    assert(candidate(\"Hello world\") == 0L);\n    assert(candidate(\"\
    Is the sky blue?\") == 0L);\n    assert(candidate(\"I love It !\") == 1L);\n \
    \   assert(candidate(\"bIt\") == 0L);\n    assert(candidate(\"I feel good today.\
    \ I will be productive. will kill It\") == 2L);\n    assert(candidate(\"You and\
    \ I are going for a walk\") == 0L);\n}\nvoid main(){}"
  status: SyntaxError
  stderr: '/tmp/tmp1upyxolo.d(18): Error: undefined identifier `split`

    /tmp/tmp1upyxolo.d(21): Error: undefined identifier `split`

    Failed: ["dmd", "-unittest", "-v", "-o-", "/tmp/tmp1upyxolo.d", "-I/tmp"]

    '
  stdout: ''
  timestamp: 1660163028
- exit_code: 1
  program: "import std.math;\n/*\n\n    You'll be given a string of words, and your\
    \ task is to count the number\n    of boredoms. A boredom is a sentence that starts\
    \ with the word \"I\".\n    Sentences are delimited by '.', '?' or '!'.\n   \n\
    \    For example:\n    >>> is_bored(\"Hello world\")\n    0L\n    >>> is_bored(\"\
    The sky is blue. The sun is shining. I love this weather\")\n    1L\n    \n*/\n\
    long is_bored(string S) \n{\n    long boredoms = 0;\n    string[] sentences =\
    \ split(S, \".\");\n    foreach(string sentence; sentences)\n    {\n        string[]\
    \ words = split(sentence, \" \");\n        if(words[0] == \"I\")\n           \
    \ boredoms++;\n    }\n    return boredoms;\n}\nunittest\n{\n    alias candidate\
    \ = is_bored;\n\n    assert(candidate(\"Hello world\") == 0L);\n    assert(candidate(\"\
    Is the sky blue?\") == 0L);\n    assert(candidate(\"I love It !\") == 1L);\n \
    \   assert(candidate(\"bIt\") == 0L);\n    assert(candidate(\"I feel good today.\
    \ I will be productive. will kill It\") == 2L);\n    assert(candidate(\"You and\
    \ I are going for a walk\") == 0L);\n}\nvoid main(){}"
  status: SyntaxError
  stderr: '/tmp/tmp1upyxolo.d(18): Error: undefined identifier `split`

    /tmp/tmp1upyxolo.d(21): Error: undefined identifier `split`

    Failed: ["dmd", "-unittest", "-v", "-o-", "/tmp/tmp1upyxolo.d", "-I/tmp"]

    '
  stdout: ''
  timestamp: 1660163028
- exit_code: 1
  program: "import std.math;\n/*\n\n    You'll be given a string of words, and your\
    \ task is to count the number\n    of boredoms. A boredom is a sentence that starts\
    \ with the word \"I\".\n    Sentences are delimited by '.', '?' or '!'.\n   \n\
    \    For example:\n    >>> is_bored(\"Hello world\")\n    0L\n    >>> is_bored(\"\
    The sky is blue. The sun is shining. I love this weather\")\n    1L\n    \n*/\n\
    long is_bored(string S) \n{\n    long boredoms = 0;\n    string[] sentences =\
    \ split(S, \".\");\n    foreach(string sentence; sentences)\n    {\n        string[]\
    \ words = split(sentence, \" \");\n        if(words[0] == \"I\")\n           \
    \ boredoms++;\n    }\n    return boredoms;\n}\nunittest\n{\n    alias candidate\
    \ = is_bored;\n\n    assert(candidate(\"Hello world\") == 0L);\n    assert(candidate(\"\
    Is the sky blue?\") == 0L);\n    assert(candidate(\"I love It !\") == 1L);\n \
    \   assert(candidate(\"bIt\") == 0L);\n    assert(candidate(\"I feel good today.\
    \ I will be productive. will kill It\") == 2L);\n    assert(candidate(\"You and\
    \ I are going for a walk\") == 0L);\n}\nvoid main(){}"
  status: SyntaxError
  stderr: '/tmp/tmp1upyxolo.d(18): Error: undefined identifier `split`

    /tmp/tmp1upyxolo.d(21): Error: undefined identifier `split`

    Failed: ["dmd", "-unittest", "-v", "-o-", "/tmp/tmp1upyxolo.d", "-I/tmp"]

    '
  stdout: ''
  timestamp: 1660163028
- exit_code: 1
  program: "import std.math;\n/*\n\n    You'll be given a string of words, and your\
    \ task is to count the number\n    of boredoms. A boredom is a sentence that starts\
    \ with the word \"I\".\n    Sentences are delimited by '.', '?' or '!'.\n   \n\
    \    For example:\n    >>> is_bored(\"Hello world\")\n    0L\n    >>> is_bored(\"\
    The sky is blue. The sun is shining. I love this weather\")\n    1L\n    \n*/\n\
    long is_bored(string S) \n{\n    long boredoms = 0;\n    string[] sentences =\
    \ split(S, \".\");\n    foreach(string sentence; sentences)\n    {\n        if(sentence.length\
    \ > 0)\n        {\n            string[] words = split(sentence, \" \");\n    \
    \        if(words[0] == \"I\")\n            {\n                boredoms++;\n \
    \           }\n        }\n    }\n    return boredoms;\n}\nunittest\n{\n    alias\
    \ candidate = is_bored;\n\n    assert(candidate(\"Hello world\") == 0L);\n   \
    \ assert(candidate(\"Is the sky blue?\") == 0L);\n    assert(candidate(\"I love\
    \ It !\") == 1L);\n    assert(candidate(\"bIt\") == 0L);\n    assert(candidate(\"\
    I feel good today. I will be productive. will kill It\") == 2L);\n    assert(candidate(\"\
    You and I are going for a walk\") == 0L);\n}\nvoid main(){}"
  status: SyntaxError
  stderr: '/tmp/tmprvolhnpj.d(18): Error: undefined identifier `split`

    /tmp/tmprvolhnpj.d(23): Error: undefined identifier `split`

    Failed: ["dmd", "-unittest", "-v", "-o-", "/tmp/tmprvolhnpj.d", "-I/tmp"]

    '
  stdout: ''
  timestamp: 1660163028
- exit_code: 1
  program: "import std.math;\n/*\n\n    You'll be given a string of words, and your\
    \ task is to count the number\n    of boredoms. A boredom is a sentence that starts\
    \ with the word \"I\".\n    Sentences are delimited by '.', '?' or '!'.\n   \n\
    \    For example:\n    >>> is_bored(\"Hello world\")\n    0L\n    >>> is_bored(\"\
    The sky is blue. The sun is shining. I love this weather\")\n    1L\n    \n*/\n\
    long is_bored(string S) \n{\n    long boredoms = 0;\n    string[] sentences =\
    \ split(S, \".\");\n    foreach(string sentence; sentences)\n    {\n        if(sentence.length\
    \ > 0)\n        {\n            string[] words = split(sentence, \" \");\n    \
    \        if(words[0] == \"I\")\n            {\n                boredoms++;\n \
    \           }\n        }\n    }\n    return boredoms;\n}\nunittest\n{\n    alias\
    \ candidate = is_bored;\n\n    assert(candidate(\"Hello world\") == 0L);\n   \
    \ assert(candidate(\"Is the sky blue?\") == 0L);\n    assert(candidate(\"I love\
    \ It !\") == 1L);\n    assert(candidate(\"bIt\") == 0L);\n    assert(candidate(\"\
    I feel good today. I will be productive. will kill It\") == 2L);\n    assert(candidate(\"\
    You and I are going for a walk\") == 0L);\n}\nvoid main(){}"
  status: SyntaxError
  stderr: '/tmp/tmprvolhnpj.d(18): Error: undefined identifier `split`

    /tmp/tmprvolhnpj.d(23): Error: undefined identifier `split`

    Failed: ["dmd", "-unittest", "-v", "-o-", "/tmp/tmprvolhnpj.d", "-I/tmp"]

    '
  stdout: ''
  timestamp: 1660163028
- exit_code: 1
  program: "import std.math;\n/*\n\n    You'll be given a string of words, and your\
    \ task is to count the number\n    of boredoms. A boredom is a sentence that starts\
    \ with the word \"I\".\n    Sentences are delimited by '.', '?' or '!'.\n   \n\
    \    For example:\n    >>> is_bored(\"Hello world\")\n    0L\n    >>> is_bored(\"\
    The sky is blue. The sun is shining. I love this weather\")\n    1L\n    \n*/\n\
    long is_bored(string S) \n{\n    long boredoms = 0;\n    auto sentences = split(S,\
    \ \".\");\n    foreach(sentence; sentences)\n    {\n        if(sentence.length\
    \ > 0)\n        {\n            auto words = split(sentence, \" \");\n        \
    \    if(words[0] == \"I\")\n            {\n                boredoms++;\n     \
    \       }\n        }\n    }\n    return boredoms;\n}\nunittest\n{\n    alias candidate\
    \ = is_bored;\n\n    assert(candidate(\"Hello world\") == 0L);\n    assert(candidate(\"\
    Is the sky blue?\") == 0L);\n    assert(candidate(\"I love It !\") == 1L);\n \
    \   assert(candidate(\"bIt\") == 0L);\n    assert(candidate(\"I feel good today.\
    \ I will be productive. will kill It\") == 2L);\n    assert(candidate(\"You and\
    \ I are going for a walk\") == 0L);\n}\nvoid main(){}"
  status: SyntaxError
  stderr: '/tmp/tmpd9xijn1s.d(18): Error: undefined identifier `split`

    Failed: ["dmd", "-unittest", "-v", "-o-", "/tmp/tmpd9xijn1s.d", "-I/tmp"]

    '
  stdout: ''
  timestamp: 1660163028
- exit_code: 1
  program: "import std.math;\n/*\n\n    You'll be given a string of words, and your\
    \ task is to count the number\n    of boredoms. A boredom is a sentence that starts\
    \ with the word \"I\".\n    Sentences are delimited by '.', '?' or '!'.\n   \n\
    \    For example:\n    >>> is_bored(\"Hello world\")\n    0L\n    >>> is_bored(\"\
    The sky is blue. The sun is shining. I love this weather\")\n    1L\n    \n*/\n\
    long is_bored(string S) \n{\n    long count = 0;\n    string[] words = split(S,\
    \ \" \");\n    foreach(string word; words)\n    {\n        if(word == \"I\")\n\
    \            count++;\n    }\n    return count;\n}\nunittest\n{\n    alias candidate\
    \ = is_bored;\n\n    assert(candidate(\"Hello world\") == 0L);\n    assert(candidate(\"\
    Is the sky blue?\") == 0L);\n    assert(candidate(\"I love It !\") == 1L);\n \
    \   assert(candidate(\"bIt\") == 0L);\n    assert(candidate(\"I feel good today.\
    \ I will be productive. will kill It\") == 2L);\n    assert(candidate(\"You and\
    \ I are going for a walk\") == 0L);\n}\nvoid main(){}"
  status: SyntaxError
  stderr: '/tmp/tmpej_rprd2.d(18): Error: undefined identifier `split`

    Failed: ["dmd", "-unittest", "-v", "-o-", "/tmp/tmpej_rprd2.d", "-I/tmp"]

    '
  stdout: ''
  timestamp: 1660163028
- exit_code: 1
  program: "import std.math;\n/*\n\n    You'll be given a string of words, and your\
    \ task is to count the number\n    of boredoms. A boredom is a sentence that starts\
    \ with the word \"I\".\n    Sentences are delimited by '.', '?' or '!'.\n   \n\
    \    For example:\n    >>> is_bored(\"Hello world\")\n    0L\n    >>> is_bored(\"\
    The sky is blue. The sun is shining. I love this weather\")\n    1L\n    \n*/\n\
    long is_bored(string S) \n{\n    long boredoms = 0;\n    string[] sentences =\
    \ split(S, \".\");\n    foreach(string sentence; sentences)\n    {\n        if(sentence.length\
    \ > 0)\n        {\n            string[] words = split(sentence, \" \");\n    \
    \        if(words[0] == \"I\")\n            {\n                boredoms++;\n \
    \           }\n        }\n    }\n    return boredoms;\n}\nunittest\n{\n    alias\
    \ candidate = is_bored;\n\n    assert(candidate(\"Hello world\") == 0L);\n   \
    \ assert(candidate(\"Is the sky blue?\") == 0L);\n    assert(candidate(\"I love\
    \ It !\") == 1L);\n    assert(candidate(\"bIt\") == 0L);\n    assert(candidate(\"\
    I feel good today. I will be productive. will kill It\") == 2L);\n    assert(candidate(\"\
    You and I are going for a walk\") == 0L);\n}\nvoid main(){}"
  status: SyntaxError
  stderr: '/tmp/tmprvolhnpj.d(18): Error: undefined identifier `split`

    /tmp/tmprvolhnpj.d(23): Error: undefined identifier `split`

    Failed: ["dmd", "-unittest", "-v", "-o-", "/tmp/tmprvolhnpj.d", "-I/tmp"]

    '
  stdout: ''
  timestamp: 1660163028
- exit_code: 1
  program: "import std.math;\n/*\n\n    You'll be given a string of words, and your\
    \ task is to count the number\n    of boredoms. A boredom is a sentence that starts\
    \ with the word \"I\".\n    Sentences are delimited by '.', '?' or '!'.\n   \n\
    \    For example:\n    >>> is_bored(\"Hello world\")\n    0L\n    >>> is_bored(\"\
    The sky is blue. The sun is shining. I love this weather\")\n    1L\n    \n*/\n\
    long is_bored(string S) \n{\n    long boredoms = 0;\n    string[] sentences =\
    \ split(S, \".\");\n    foreach(string sentence; sentences) \n    {\n        if(sentence.length\
    \ > 0) \n        {\n            string[] words = split(sentence, \" \");\n   \
    \         if(words[0] == \"I\")\n                boredoms++;\n        }\n    }\n\
    \    return boredoms;\n}\nunittest\n{\n    alias candidate = is_bored;\n\n   \
    \ assert(candidate(\"Hello world\") == 0L);\n    assert(candidate(\"Is the sky\
    \ blue?\") == 0L);\n    assert(candidate(\"I love It !\") == 1L);\n    assert(candidate(\"\
    bIt\") == 0L);\n    assert(candidate(\"I feel good today. I will be productive.\
    \ will kill It\") == 2L);\n    assert(candidate(\"You and I are going for a walk\"\
    ) == 0L);\n}\nvoid main(){}"
  status: SyntaxError
  stderr: '/tmp/tmpuo5r1fkt.d(18): Error: undefined identifier `split`

    /tmp/tmpuo5r1fkt.d(23): Error: undefined identifier `split`

    Failed: ["dmd", "-unittest", "-v", "-o-", "/tmp/tmpuo5r1fkt.d", "-I/tmp"]

    '
  stdout: ''
  timestamp: 1660163028
- exit_code: 1
  program: "import std.math;\n/*\n\n    You'll be given a string of words, and your\
    \ task is to count the number\n    of boredoms. A boredom is a sentence that starts\
    \ with the word \"I\".\n    Sentences are delimited by '.', '?' or '!'.\n   \n\
    \    For example:\n    >>> is_bored(\"Hello world\")\n    0L\n    >>> is_bored(\"\
    The sky is blue. The sun is shining. I love this weather\")\n    1L\n    \n*/\n\
    long is_bored(string S) \n{\n    long count = 0;\n    int i = 0;\n    int j =\
    \ 0;\n    int len = S.length;\n    while (i < len)\n    {\n        if (S[i] ==\
    \ 'I')\n        {\n            count++;\n            while (S[i] != '.' && S[i]\
    \ != '?' && S[i] != '!')\n            {\n                i++;\n            }\n\
    \        }\n        i++;\n    }\n    return count;\n}\nunittest\n{\n    alias\
    \ candidate = is_bored;\n\n    assert(candidate(\"Hello world\") == 0L);\n   \
    \ assert(candidate(\"Is the sky blue?\") == 0L);\n    assert(candidate(\"I love\
    \ It !\") == 1L);\n    assert(candidate(\"bIt\") == 0L);\n    assert(candidate(\"\
    I feel good today. I will be productive. will kill It\") == 2L);\n    assert(candidate(\"\
    You and I are going for a walk\") == 0L);\n}\nvoid main(){}"
  status: SyntaxError
  stderr: '/tmp/tmp0i7oooo5.d(20): Error: cannot implicitly convert expression `S.length`
    of type `ulong` to `int`

    Failed: ["dmd", "-unittest", "-v", "-o-", "/tmp/tmp0i7oooo5.d", "-I/tmp"]

    '
  stdout: ''
  timestamp: 1660163028
- exit_code: 1
  program: "import std.math;\n/*\n\n    You'll be given a string of words, and your\
    \ task is to count the number\n    of boredoms. A boredom is a sentence that starts\
    \ with the word \"I\".\n    Sentences are delimited by '.', '?' or '!'.\n   \n\
    \    For example:\n    >>> is_bored(\"Hello world\")\n    0L\n    >>> is_bored(\"\
    The sky is blue. The sun is shining. I love this weather\")\n    1L\n    \n*/\n\
    long is_bored(string S) \n{\n    long boredoms = 0;\n    string[] sentences =\
    \ split(S, \".\");\n    foreach(sentence; sentences)\n    {\n        if(sentence.startsWith(\"\
    I\"))\n            boredoms++;\n    }\n    return boredoms;\n}\nunittest\n{\n\
    \    alias candidate = is_bored;\n\n    assert(candidate(\"Hello world\") == 0L);\n\
    \    assert(candidate(\"Is the sky blue?\") == 0L);\n    assert(candidate(\"I\
    \ love It !\") == 1L);\n    assert(candidate(\"bIt\") == 0L);\n    assert(candidate(\"\
    I feel good today. I will be productive. will kill It\") == 2L);\n    assert(candidate(\"\
    You and I are going for a walk\") == 0L);\n}\nvoid main(){}"
  status: SyntaxError
  stderr: '/tmp/tmpfwkn2cnv.d(18): Error: undefined identifier `split`

    /tmp/tmpfwkn2cnv.d(21): Error: no property `startsWith` for type `string`

    Failed: ["dmd", "-unittest", "-v", "-o-", "/tmp/tmpfwkn2cnv.d", "-I/tmp"]

    '
  stdout: ''
  timestamp: 1660163028
- exit_code: 1
  program: "import std.math;\n/*\n\n    You'll be given a string of words, and your\
    \ task is to count the number\n    of boredoms. A boredom is a sentence that starts\
    \ with the word \"I\".\n    Sentences are delimited by '.', '?' or '!'.\n   \n\
    \    For example:\n    >>> is_bored(\"Hello world\")\n    0L\n    >>> is_bored(\"\
    The sky is blue. The sun is shining. I love this weather\")\n    1L\n    \n*/\n\
    long is_bored(string S) \n{\n    long boredoms = 0;\n    string[] sentences =\
    \ split(S, \".\");\n    foreach(sentence; sentences)\n    {\n        string[]\
    \ words = split(sentence, \" \");\n        if(words[0] == \"I\")\n           \
    \ boredoms++;\n    }\n    return boredoms;\n}\nunittest\n{\n    alias candidate\
    \ = is_bored;\n\n    assert(candidate(\"Hello world\") == 0L);\n    assert(candidate(\"\
    Is the sky blue?\") == 0L);\n    assert(candidate(\"I love It !\") == 1L);\n \
    \   assert(candidate(\"bIt\") == 0L);\n    assert(candidate(\"I feel good today.\
    \ I will be productive. will kill It\") == 2L);\n    assert(candidate(\"You and\
    \ I are going for a walk\") == 0L);\n}\nvoid main(){}"
  status: SyntaxError
  stderr: '/tmp/tmpx3am4b_0.d(18): Error: undefined identifier `split`

    /tmp/tmpx3am4b_0.d(21): Error: undefined identifier `split`

    Failed: ["dmd", "-unittest", "-v", "-o-", "/tmp/tmpx3am4b_0.d", "-I/tmp"]

    '
  stdout: ''
  timestamp: 1660163028
- exit_code: 1
  program: "import std.math;\n/*\n\n    You'll be given a string of words, and your\
    \ task is to count the number\n    of boredoms. A boredom is a sentence that starts\
    \ with the word \"I\".\n    Sentences are delimited by '.', '?' or '!'.\n   \n\
    \    For example:\n    >>> is_bored(\"Hello world\")\n    0L\n    >>> is_bored(\"\
    The sky is blue. The sun is shining. I love this weather\")\n    1L\n    \n*/\n\
    long is_bored(string S) \n{\n    long boredoms = 0;\n    string[] sentences =\
    \ split(S, \".\");\n    foreach(string sentence; sentences)\n    {\n        if(sentence.length\
    \ > 0)\n        {\n            string[] words = split(sentence, \" \");\n    \
    \        if(words[0] == \"I\")\n            {\n                boredoms++;\n \
    \           }\n        }\n    }\n    return boredoms;\n}\nunittest\n{\n    alias\
    \ candidate = is_bored;\n\n    assert(candidate(\"Hello world\") == 0L);\n   \
    \ assert(candidate(\"Is the sky blue?\") == 0L);\n    assert(candidate(\"I love\
    \ It !\") == 1L);\n    assert(candidate(\"bIt\") == 0L);\n    assert(candidate(\"\
    I feel good today. I will be productive. will kill It\") == 2L);\n    assert(candidate(\"\
    You and I are going for a walk\") == 0L);\n}\nvoid main(){}"
  status: SyntaxError
  stderr: '/tmp/tmprvolhnpj.d(18): Error: undefined identifier `split`

    /tmp/tmprvolhnpj.d(23): Error: undefined identifier `split`

    Failed: ["dmd", "-unittest", "-v", "-o-", "/tmp/tmprvolhnpj.d", "-I/tmp"]

    '
  stdout: ''
  timestamp: 1660163028
- exit_code: 1
  program: "import std.math;\n/*\n\n    You'll be given a string of words, and your\
    \ task is to count the number\n    of boredoms. A boredom is a sentence that starts\
    \ with the word \"I\".\n    Sentences are delimited by '.', '?' or '!'.\n   \n\
    \    For example:\n    >>> is_bored(\"Hello world\")\n    0L\n    >>> is_bored(\"\
    The sky is blue. The sun is shining. I love this weather\")\n    1L\n    \n*/\n\
    long is_bored(string S) \n{\n    long boredoms = 0;\n    string[] sentences =\
    \ split(S, \".\");\n    foreach(string sentence; sentences)\n    {\n        if(sentence.length\
    \ > 0)\n        {\n            string[] words = split(sentence, \" \");\n    \
    \        if(words[0] == \"I\")\n            {\n                boredoms++;\n \
    \           }\n        }\n    }\n    return boredoms;\n}\nunittest\n{\n    alias\
    \ candidate = is_bored;\n\n    assert(candidate(\"Hello world\") == 0L);\n   \
    \ assert(candidate(\"Is the sky blue?\") == 0L);\n    assert(candidate(\"I love\
    \ It !\") == 1L);\n    assert(candidate(\"bIt\") == 0L);\n    assert(candidate(\"\
    I feel good today. I will be productive. will kill It\") == 2L);\n    assert(candidate(\"\
    You and I are going for a walk\") == 0L);\n}\nvoid main(){}"
  status: SyntaxError
  stderr: '/tmp/tmprvolhnpj.d(18): Error: undefined identifier `split`

    /tmp/tmprvolhnpj.d(23): Error: undefined identifier `split`

    Failed: ["dmd", "-unittest", "-v", "-o-", "/tmp/tmprvolhnpj.d", "-I/tmp"]

    '
  stdout: ''
  timestamp: 1660163028
- exit_code: 1
  program: "import std.math;\n/*\n\n    You'll be given a string of words, and your\
    \ task is to count the number\n    of boredoms. A boredom is a sentence that starts\
    \ with the word \"I\".\n    Sentences are delimited by '.', '?' or '!'.\n   \n\
    \    For example:\n    >>> is_bored(\"Hello world\")\n    0L\n    >>> is_bored(\"\
    The sky is blue. The sun is shining. I love this weather\")\n    1L\n    \n*/\n\
    long is_bored(string S) \n{\n    long boredoms = 0;\n    string[] sentences =\
    \ split(S, \".\");\n    foreach(string sentence; sentences)\n    {\n        string[]\
    \ words = split(sentence, \" \");\n        if(words[0] == \"I\")\n           \
    \ boredoms++;\n    }\n    return boredoms;\n}\nunittest\n{\n    alias candidate\
    \ = is_bored;\n\n    assert(candidate(\"Hello world\") == 0L);\n    assert(candidate(\"\
    Is the sky blue?\") == 0L);\n    assert(candidate(\"I love It !\") == 1L);\n \
    \   assert(candidate(\"bIt\") == 0L);\n    assert(candidate(\"I feel good today.\
    \ I will be productive. will kill It\") == 2L);\n    assert(candidate(\"You and\
    \ I are going for a walk\") == 0L);\n}\nvoid main(){}"
  status: SyntaxError
  stderr: '/tmp/tmp1upyxolo.d(18): Error: undefined identifier `split`

    /tmp/tmp1upyxolo.d(21): Error: undefined identifier `split`

    Failed: ["dmd", "-unittest", "-v", "-o-", "/tmp/tmp1upyxolo.d", "-I/tmp"]

    '
  stdout: ''
  timestamp: 1660163028
- exit_code: 1
  program: "import std.math;\n/*\n\n    You'll be given a string of words, and your\
    \ task is to count the number\n    of boredoms. A boredom is a sentence that starts\
    \ with the word \"I\".\n    Sentences are delimited by '.', '?' or '!'.\n   \n\
    \    For example:\n    >>> is_bored(\"Hello world\")\n    0L\n    >>> is_bored(\"\
    The sky is blue. The sun is shining. I love this weather\")\n    1L\n    \n*/\n\
    long is_bored(string S) \n{\n    long boredoms = 0;\n    string[] sentences =\
    \ split(S, \".\");\n    foreach(string sentence; sentences)\n    {\n        if(sentence.length\
    \ > 0)\n        {\n            string[] words = split(sentence, \" \");\n    \
    \        if(words[0] == \"I\")\n            {\n                boredoms++;\n \
    \           }\n        }\n    }\n    return boredoms;\n}\nunittest\n{\n    alias\
    \ candidate = is_bored;\n\n    assert(candidate(\"Hello world\") == 0L);\n   \
    \ assert(candidate(\"Is the sky blue?\") == 0L);\n    assert(candidate(\"I love\
    \ It !\") == 1L);\n    assert(candidate(\"bIt\") == 0L);\n    assert(candidate(\"\
    I feel good today. I will be productive. will kill It\") == 2L);\n    assert(candidate(\"\
    You and I are going for a walk\") == 0L);\n}\nvoid main(){}"
  status: SyntaxError
  stderr: '/tmp/tmprvolhnpj.d(18): Error: undefined identifier `split`

    /tmp/tmprvolhnpj.d(23): Error: undefined identifier `split`

    Failed: ["dmd", "-unittest", "-v", "-o-", "/tmp/tmprvolhnpj.d", "-I/tmp"]

    '
  stdout: ''
  timestamp: 1660163028
- exit_code: 1
  program: "import std.math;\n/*\n\n    You'll be given a string of words, and your\
    \ task is to count the number\n    of boredoms. A boredom is a sentence that starts\
    \ with the word \"I\".\n    Sentences are delimited by '.', '?' or '!'.\n   \n\
    \    For example:\n    >>> is_bored(\"Hello world\")\n    0L\n    >>> is_bored(\"\
    The sky is blue. The sun is shining. I love this weather\")\n    1L\n    \n*/\n\
    long is_bored(string S) \n{\n    long boredoms = 0;\n    string[] sentences =\
    \ split(S, \".\");\n    foreach(string sentence; sentences)\n    {\n        if(sentence.length\
    \ > 0)\n        {\n            string[] words = split(sentence, \" \");\n    \
    \        if(words[0] == \"I\")\n            {\n                boredoms++;\n \
    \           }\n        }\n    }\n    return boredoms;\n}\nunittest\n{\n    alias\
    \ candidate = is_bored;\n\n    assert(candidate(\"Hello world\") == 0L);\n   \
    \ assert(candidate(\"Is the sky blue?\") == 0L);\n    assert(candidate(\"I love\
    \ It !\") == 1L);\n    assert(candidate(\"bIt\") == 0L);\n    assert(candidate(\"\
    I feel good today. I will be productive. will kill It\") == 2L);\n    assert(candidate(\"\
    You and I are going for a walk\") == 0L);\n}\nvoid main(){}"
  status: SyntaxError
  stderr: '/tmp/tmprvolhnpj.d(18): Error: undefined identifier `split`

    /tmp/tmprvolhnpj.d(23): Error: undefined identifier `split`

    Failed: ["dmd", "-unittest", "-v", "-o-", "/tmp/tmprvolhnpj.d", "-I/tmp"]

    '
  stdout: ''
  timestamp: 1660163028
- exit_code: 1
  program: "import std.math;\n/*\n\n    You'll be given a string of words, and your\
    \ task is to count the number\n    of boredoms. A boredom is a sentence that starts\
    \ with the word \"I\".\n    Sentences are delimited by '.', '?' or '!'.\n   \n\
    \    For example:\n    >>> is_bored(\"Hello world\")\n    0L\n    >>> is_bored(\"\
    The sky is blue. The sun is shining. I love this weather\")\n    1L\n    \n*/\n\
    long is_bored(string S) \n{\n    long boredoms = 0;\n    string[] sentences =\
    \ split(S, \".\");\n    foreach(sentence; sentences)\n    {\n        if(sentence.length\
    \ > 0)\n        {\n            string[] words = split(sentence, \" \");\n    \
    \        if(words[0] == \"I\")\n            {\n                boredoms++;\n \
    \           }\n        }\n    }\n    return boredoms;\n}\nunittest\n{\n    alias\
    \ candidate = is_bored;\n\n    assert(candidate(\"Hello world\") == 0L);\n   \
    \ assert(candidate(\"Is the sky blue?\") == 0L);\n    assert(candidate(\"I love\
    \ It !\") == 1L);\n    assert(candidate(\"bIt\") == 0L);\n    assert(candidate(\"\
    I feel good today. I will be productive. will kill It\") == 2L);\n    assert(candidate(\"\
    You and I are going for a walk\") == 0L);\n}\nvoid main(){}"
  status: SyntaxError
  stderr: '/tmp/tmpmhho1zga.d(18): Error: undefined identifier `split`

    /tmp/tmpmhho1zga.d(23): Error: undefined identifier `split`

    Failed: ["dmd", "-unittest", "-v", "-o-", "/tmp/tmpmhho1zga.d", "-I/tmp"]

    '
  stdout: ''
  timestamp: 1660163028
- exit_code: 1
  program: "import std.math;\n/*\n\n    You'll be given a string of words, and your\
    \ task is to count the number\n    of boredoms. A boredom is a sentence that starts\
    \ with the word \"I\".\n    Sentences are delimited by '.', '?' or '!'.\n   \n\
    \    For example:\n    >>> is_bored(\"Hello world\")\n    0L\n    >>> is_bored(\"\
    The sky is blue. The sun is shining. I love this weather\")\n    1L\n    \n*/\n\
    long is_bored(string S) \n{\n    long boredoms = 0;\n    string[] sentences =\
    \ split(S, \".\");\n    foreach(string sentence; sentences)\n    {\n        if(startsWith(sentence,\
    \ \"I\"))\n            boredoms++;\n    }\n    return boredoms;\n}\nunittest\n\
    {\n    alias candidate = is_bored;\n\n    assert(candidate(\"Hello world\") ==\
    \ 0L);\n    assert(candidate(\"Is the sky blue?\") == 0L);\n    assert(candidate(\"\
    I love It !\") == 1L);\n    assert(candidate(\"bIt\") == 0L);\n    assert(candidate(\"\
    I feel good today. I will be productive. will kill It\") == 2L);\n    assert(candidate(\"\
    You and I are going for a walk\") == 0L);\n}\nvoid main(){}"
  status: SyntaxError
  stderr: '/tmp/tmpudu06gfa.d(18): Error: undefined identifier `split`

    /tmp/tmpudu06gfa.d(21): Error: undefined identifier `startsWith`

    Failed: ["dmd", "-unittest", "-v", "-o-", "/tmp/tmpudu06gfa.d", "-I/tmp"]

    '
  stdout: ''
  timestamp: 1660163028
- exit_code: 1
  program: "import std.math;\n/*\n\n    You'll be given a string of words, and your\
    \ task is to count the number\n    of boredoms. A boredom is a sentence that starts\
    \ with the word \"I\".\n    Sentences are delimited by '.', '?' or '!'.\n   \n\
    \    For example:\n    >>> is_bored(\"Hello world\")\n    0L\n    >>> is_bored(\"\
    The sky is blue. The sun is shining. I love this weather\")\n    1L\n    \n*/\n\
    long is_bored(string S) \n{\n    long boredoms = 0;\n    string[] sentences =\
    \ split(S, \".\");\n    foreach(string sentence; sentences)\n    {\n        if(sentence.length\
    \ > 0)\n        {\n            string[] words = split(sentence, \" \");\n    \
    \        if(words[0] == \"I\")\n            {\n                boredoms++;\n \
    \           }\n        }\n    }\n    return boredoms;\n}\nunittest\n{\n    alias\
    \ candidate = is_bored;\n\n    assert(candidate(\"Hello world\") == 0L);\n   \
    \ assert(candidate(\"Is the sky blue?\") == 0L);\n    assert(candidate(\"I love\
    \ It !\") == 1L);\n    assert(candidate(\"bIt\") == 0L);\n    assert(candidate(\"\
    I feel good today. I will be productive. will kill It\") == 2L);\n    assert(candidate(\"\
    You and I are going for a walk\") == 0L);\n}\nvoid main(){}"
  status: SyntaxError
  stderr: '/tmp/tmprvolhnpj.d(18): Error: undefined identifier `split`

    /tmp/tmprvolhnpj.d(23): Error: undefined identifier `split`

    Failed: ["dmd", "-unittest", "-v", "-o-", "/tmp/tmprvolhnpj.d", "-I/tmp"]

    '
  stdout: ''
  timestamp: 1660163028
- exit_code: 1
  program: "import std.math;\n/*\n\n    You'll be given a string of words, and your\
    \ task is to count the number\n    of boredoms. A boredom is a sentence that starts\
    \ with the word \"I\".\n    Sentences are delimited by '.', '?' or '!'.\n   \n\
    \    For example:\n    >>> is_bored(\"Hello world\")\n    0L\n    >>> is_bored(\"\
    The sky is blue. The sun is shining. I love this weather\")\n    1L\n    \n*/\n\
    long is_bored(string S) \n{\n    long boredoms = 0;\n    long i = 0;\n    long\
    \ j = 0;\n    long k = 0;\n    long l = 0;\n    long m = 0;\n    long n = 0;\n\
    \    long o = 0;\n    long p = 0;\n    long q = 0;\n    long r = 0;\n    long\
    \ s = 0;\n    long t = 0;\n    long u = 0;\n    long v = 0;\n    long w = 0;\n\
    \    long x = 0;\n    long y = 0;\n    long z = 0;\n    long a = 0;\n    long\
    \ b = 0;\n    long c = 0;\n    long d = 0;\n    long e = 0;\n    long f = 0;\n\
    \    long g = 0;\n    long h = 0;\n    long ii = 0;\n    long jj = 0;\n    long\
    \ kk = 0;\n    long ll = 0;\n    long mm = 0;\n    long nn = 0;\n    long oo =\
    \ 0;\n    long pp = 0;\n    long qq = 0;\n    long rr = 0;\n    long ss = 0;\n\
    \    long tt = 0;\n    long uu = 0;\n    long vv = 0;\n    long ww = 0;\n    long\
    \ xx = 0;\n    long yy = 0;\n    long zz = 0;\n    long aa = 0;\n    long bb =\
    \ 0;\n    long cc = 0;\n    long dd = 0;\n    long ee = 0;\n    long ff = 0;\n\
    \    long gg = 0;\n    long hh = 0;\n    long iii = 0;\n    long jjj = 0;\n  \
    \  long kkk = 0;\n    long lll = 0;\n    long mmm = 0;\n    long nnn = 0;\n  \
    \  long ooo = 0;\n    long ppp = 0;\n    long qqq = 0;\n    long rrr = 0;\n  \
    \  long sss = 0;\n    long ttt = 0;\n    long uuu = 0;\n    long vvv = 0;\n  \
    \  long www = 0;\n    long\nunittest\n{\n    alias candidate = is_bored;\n\n \
    \   assert(candidate(\"Hello world\") == 0L);\n    assert(candidate(\"Is the sky\
    \ blue?\") == 0L);\n    assert(candidate(\"I love It !\") == 1L);\n    assert(candidate(\"\
    bIt\") == 0L);\n    assert(candidate(\"I feel good today. I will be productive.\
    \ will kill It\") == 2L);\n    assert(candidate(\"You and I are going for a walk\"\
    ) == 0L);\n}\nvoid main(){}"
  status: SyntaxError
  stderr: '/tmp/tmpj0g9yftq.d(86): Error: no identifier for declarator `long`

    /tmp/tmpj0g9yftq.d(86): Error: found `unittest` instead of statement

    Failed: ["dmd", "-unittest", "-v", "-o-", "/tmp/tmpj0g9yftq.d", "-I/tmp"]

    '
  stdout: ''
  timestamp: 1660163028
- exit_code: 1
  program: "import std.math;\n/*\n\n    You'll be given a string of words, and your\
    \ task is to count the number\n    of boredoms. A boredom is a sentence that starts\
    \ with the word \"I\".\n    Sentences are delimited by '.', '?' or '!'.\n   \n\
    \    For example:\n    >>> is_bored(\"Hello world\")\n    0L\n    >>> is_bored(\"\
    The sky is blue. The sun is shining. I love this weather\")\n    1L\n    \n*/\n\
    long is_bored(string S) \n{\n    long boredoms = 0;\n    long i = 0;\n    long\
    \ len = S.length;\n    while (i < len)\n    {\n        if (S[i] == 'I')\n    \
    \    {\n            boredoms++;\n            while (i < len && S[i] != '.' &&\
    \ S[i] != '?' && S[i] != '!')\n            {\n                i++;\n         \
    \   }\n        }\n        i++;\n    }\n    return boredoms;\n}\nunittest\n{\n\
    \    alias candidate = is_bored;\n\n    assert(candidate(\"Hello world\") == 0L);\n\
    \    assert(candidate(\"Is the sky blue?\") == 0L);\n    assert(candidate(\"I\
    \ love It !\") == 1L);\n    assert(candidate(\"bIt\") == 0L);\n    assert(candidate(\"\
    I feel good today. I will be productive. will kill It\") == 2L);\n    assert(candidate(\"\
    You and I are going for a walk\") == 0L);\n}\nvoid main(){}"
  status: Exception
  stderr: 'core.exception.AssertError@/tmp/tmpyxi969_c.d(39): unittest failure

    ----------------

    ??:? _d_unittestp [0x427e95]

    ??:? void tmpyxi969_c.__unittest_L34_C1() [0x427b57]

    ??:? void tmpyxi969_c.__modtest() [0x427c14]

    ??:? int core.runtime.runModuleUnitTests().__foreachbody2(object.ModuleInfo*)
    [0x42bc2f]

    ??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)).__lambda2(immutable(object.ModuleInfo*))
    [0x42aac2]

    ??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))).__foreachbody2(ref
    rt.sections_elf_shared.DSO) [0x42fc55]

    ??:? int rt.sections_elf_shared.DSO.opApply(scope int delegate(ref rt.sections_elf_shared.DSO))
    [0x430104]

    ??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*)))
    [0x42fbe1]

    ??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)) [0x42aa99]

    ??:? runModuleUnitTests [0x42ba05]

    ??:? void rt.dmain2._d_run_main(int, char**, extern (C) int function(char[][])*).runAll()
    [0x428358]

    ??:? void rt.dmain2._d_r'
  stdout: ''
  timestamp: 1660163028
- exit_code: 1
  program: "import std.math;\n/*\n\n    You'll be given a string of words, and your\
    \ task is to count the number\n    of boredoms. A boredom is a sentence that starts\
    \ with the word \"I\".\n    Sentences are delimited by '.', '?' or '!'.\n   \n\
    \    For example:\n    >>> is_bored(\"Hello world\")\n    0L\n    >>> is_bored(\"\
    The sky is blue. The sun is shining. I love this weather\")\n    1L\n    \n*/\n\
    long is_bored(string S) \n{\n    long boredoms = 0;\n    string[] sentences =\
    \ split(S, \".\");\n    foreach(string sentence; sentences)\n    {\n        if(sentence.length\
    \ > 0)\n        {\n            string[] words = split(sentence, \" \");\n    \
    \        if(words[0] == \"I\")\n            {\n                boredoms++;\n \
    \           }\n        }\n    }\n    return boredoms;\n}\nunittest\n{\n    alias\
    \ candidate = is_bored;\n\n    assert(candidate(\"Hello world\") == 0L);\n   \
    \ assert(candidate(\"Is the sky blue?\") == 0L);\n    assert(candidate(\"I love\
    \ It !\") == 1L);\n    assert(candidate(\"bIt\") == 0L);\n    assert(candidate(\"\
    I feel good today. I will be productive. will kill It\") == 2L);\n    assert(candidate(\"\
    You and I are going for a walk\") == 0L);\n}\nvoid main(){}"
  status: SyntaxError
  stderr: '/tmp/tmprvolhnpj.d(18): Error: undefined identifier `split`

    /tmp/tmprvolhnpj.d(23): Error: undefined identifier `split`

    Failed: ["dmd", "-unittest", "-v", "-o-", "/tmp/tmprvolhnpj.d", "-I/tmp"]

    '
  stdout: ''
  timestamp: 1660163028
- exit_code: 1
  program: "import std.math;\n/*\n\n    You'll be given a string of words, and your\
    \ task is to count the number\n    of boredoms. A boredom is a sentence that starts\
    \ with the word \"I\".\n    Sentences are delimited by '.', '?' or '!'.\n   \n\
    \    For example:\n    >>> is_bored(\"Hello world\")\n    0L\n    >>> is_bored(\"\
    The sky is blue. The sun is shining. I love this weather\")\n    1L\n    \n*/\n\
    long is_bored(string S) \n{\n    long boredoms = 0;\n    string[] sentences =\
    \ split(S, \".\");\n    foreach(sentence; sentences)\n    {\n        if(sentence.length\
    \ > 0)\n        {\n            string[] words = split(sentence, \" \");\n    \
    \        if(words[0] == \"I\")\n            {\n                boredoms++;\n \
    \           }\n        }\n    }\n    return boredoms;\n}\nunittest\n{\n    alias\
    \ candidate = is_bored;\n\n    assert(candidate(\"Hello world\") == 0L);\n   \
    \ assert(candidate(\"Is the sky blue?\") == 0L);\n    assert(candidate(\"I love\
    \ It !\") == 1L);\n    assert(candidate(\"bIt\") == 0L);\n    assert(candidate(\"\
    I feel good today. I will be productive. will kill It\") == 2L);\n    assert(candidate(\"\
    You and I are going for a walk\") == 0L);\n}\nvoid main(){}"
  status: SyntaxError
  stderr: '/tmp/tmpmhho1zga.d(18): Error: undefined identifier `split`

    /tmp/tmpmhho1zga.d(23): Error: undefined identifier `split`

    Failed: ["dmd", "-unittest", "-v", "-o-", "/tmp/tmpmhho1zga.d", "-I/tmp"]

    '
  stdout: ''
  timestamp: 1660163028
- exit_code: 1
  program: "import std.math;\n/*\n\n    You'll be given a string of words, and your\
    \ task is to count the number\n    of boredoms. A boredom is a sentence that starts\
    \ with the word \"I\".\n    Sentences are delimited by '.', '?' or '!'.\n   \n\
    \    For example:\n    >>> is_bored(\"Hello world\")\n    0L\n    >>> is_bored(\"\
    The sky is blue. The sun is shining. I love this weather\")\n    1L\n    \n*/\n\
    long is_bored(string S) \n{\n    long boredoms = 0;\n    string[] sentences =\
    \ split(S, \".\");\n    foreach(sentence; sentences)\n    {\n        if(sentence.length\
    \ > 0)\n        {\n            string[] words = split(sentence, \" \");\n    \
    \        if(words[0] == \"I\")\n            {\n                boredoms++;\n \
    \           }\n        }\n    }\n    return boredoms;\n}\nunittest\n{\n    alias\
    \ candidate = is_bored;\n\n    assert(candidate(\"Hello world\") == 0L);\n   \
    \ assert(candidate(\"Is the sky blue?\") == 0L);\n    assert(candidate(\"I love\
    \ It !\") == 1L);\n    assert(candidate(\"bIt\") == 0L);\n    assert(candidate(\"\
    I feel good today. I will be productive. will kill It\") == 2L);\n    assert(candidate(\"\
    You and I are going for a walk\") == 0L);\n}\nvoid main(){}"
  status: SyntaxError
  stderr: '/tmp/tmpmhho1zga.d(18): Error: undefined identifier `split`

    /tmp/tmpmhho1zga.d(23): Error: undefined identifier `split`

    Failed: ["dmd", "-unittest", "-v", "-o-", "/tmp/tmpmhho1zga.d", "-I/tmp"]

    '
  stdout: ''
  timestamp: 1660163028
- exit_code: 1
  program: "import std.math;\n/*\n\n    You'll be given a string of words, and your\
    \ task is to count the number\n    of boredoms. A boredom is a sentence that starts\
    \ with the word \"I\".\n    Sentences are delimited by '.', '?' or '!'.\n   \n\
    \    For example:\n    >>> is_bored(\"Hello world\")\n    0L\n    >>> is_bored(\"\
    The sky is blue. The sun is shining. I love this weather\")\n    1L\n    \n*/\n\
    long is_bored(string S) \n{\n    long count = 0;\n    string[] words = split(S,\
    \ \" \");\n    foreach(string word; words)\n    {\n        if(word == \"I\")\n\
    \            count++;\n    }\n    return count;\n}\nunittest\n{\n    alias candidate\
    \ = is_bored;\n\n    assert(candidate(\"Hello world\") == 0L);\n    assert(candidate(\"\
    Is the sky blue?\") == 0L);\n    assert(candidate(\"I love It !\") == 1L);\n \
    \   assert(candidate(\"bIt\") == 0L);\n    assert(candidate(\"I feel good today.\
    \ I will be productive. will kill It\") == 2L);\n    assert(candidate(\"You and\
    \ I are going for a walk\") == 0L);\n}\nvoid main(){}"
  status: SyntaxError
  stderr: '/tmp/tmpej_rprd2.d(18): Error: undefined identifier `split`

    Failed: ["dmd", "-unittest", "-v", "-o-", "/tmp/tmpej_rprd2.d", "-I/tmp"]

    '
  stdout: ''
  timestamp: 1660163028
- exit_code: 1
  program: "import std.math;\n/*\n\n    You'll be given a string of words, and your\
    \ task is to count the number\n    of boredoms. A boredom is a sentence that starts\
    \ with the word \"I\".\n    Sentences are delimited by '.', '?' or '!'.\n   \n\
    \    For example:\n    >>> is_bored(\"Hello world\")\n    0L\n    >>> is_bored(\"\
    The sky is blue. The sun is shining. I love this weather\")\n    1L\n    \n*/\n\
    long is_bored(string S) \n{\n    long boredoms = 0;\n    foreach(string sentence;\
    \ S.split(\"[.?!]\"))\n    {\n        if(sentence.split(\" \")[0] == \"I\")\n\
    \            boredoms++;\n    }\n    return boredoms;\n}\nunittest\n{\n    alias\
    \ candidate = is_bored;\n\n    assert(candidate(\"Hello world\") == 0L);\n   \
    \ assert(candidate(\"Is the sky blue?\") == 0L);\n    assert(candidate(\"I love\
    \ It !\") == 1L);\n    assert(candidate(\"bIt\") == 0L);\n    assert(candidate(\"\
    I feel good today. I will be productive. will kill It\") == 2L);\n    assert(candidate(\"\
    You and I are going for a walk\") == 0L);\n}\nvoid main(){}"
  status: SyntaxError
  stderr: '/tmp/tmp1avosnmf.d(18): Error: no property `split` for type `string`

    Failed: ["dmd", "-unittest", "-v", "-o-", "/tmp/tmp1avosnmf.d", "-I/tmp"]

    '
  stdout: ''
  timestamp: 1660163028
- exit_code: 1
  program: "import std.math;\n/*\n\n    You'll be given a string of words, and your\
    \ task is to count the number\n    of boredoms. A boredom is a sentence that starts\
    \ with the word \"I\".\n    Sentences are delimited by '.', '?' or '!'.\n   \n\
    \    For example:\n    >>> is_bored(\"Hello world\")\n    0L\n    >>> is_bored(\"\
    The sky is blue. The sun is shining. I love this weather\")\n    1L\n    \n*/\n\
    long is_bored(string S) \n{\n    long boredoms = 0;\n    string[] sentences =\
    \ split(S, \".\");\n    foreach(string sentence; sentences)\n    {\n        string[]\
    \ words = split(sentence, \" \");\n        if(words[0] == \"I\")\n           \
    \ boredoms++;\n    }\n    return boredoms;\n}\nunittest\n{\n    alias candidate\
    \ = is_bored;\n\n    assert(candidate(\"Hello world\") == 0L);\n    assert(candidate(\"\
    Is the sky blue?\") == 0L);\n    assert(candidate(\"I love It !\") == 1L);\n \
    \   assert(candidate(\"bIt\") == 0L);\n    assert(candidate(\"I feel good today.\
    \ I will be productive. will kill It\") == 2L);\n    assert(candidate(\"You and\
    \ I are going for a walk\") == 0L);\n}\nvoid main(){}"
  status: SyntaxError
  stderr: '/tmp/tmp1upyxolo.d(18): Error: undefined identifier `split`

    /tmp/tmp1upyxolo.d(21): Error: undefined identifier `split`

    Failed: ["dmd", "-unittest", "-v", "-o-", "/tmp/tmp1upyxolo.d", "-I/tmp"]

    '
  stdout: ''
  timestamp: 1660163028
- exit_code: 1
  program: "import std.math;\n/*\n\n    You'll be given a string of words, and your\
    \ task is to count the number\n    of boredoms. A boredom is a sentence that starts\
    \ with the word \"I\".\n    Sentences are delimited by '.', '?' or '!'.\n   \n\
    \    For example:\n    >>> is_bored(\"Hello world\")\n    0L\n    >>> is_bored(\"\
    The sky is blue. The sun is shining. I love this weather\")\n    1L\n    \n*/\n\
    long is_bored(string S) \n{\n    long boredoms = 0;\n    string[] sentences =\
    \ split(S, \".\");\n    foreach(string sentence; sentences)\n    {\n        if(sentence.length\
    \ > 0)\n        {\n            string[] words = split(sentence, \" \");\n    \
    \        if(words[0] == \"I\")\n            {\n                boredoms++;\n \
    \           }\n        }\n    }\n    return boredoms;\n}\nunittest\n{\n    alias\
    \ candidate = is_bored;\n\n    assert(candidate(\"Hello world\") == 0L);\n   \
    \ assert(candidate(\"Is the sky blue?\") == 0L);\n    assert(candidate(\"I love\
    \ It !\") == 1L);\n    assert(candidate(\"bIt\") == 0L);\n    assert(candidate(\"\
    I feel good today. I will be productive. will kill It\") == 2L);\n    assert(candidate(\"\
    You and I are going for a walk\") == 0L);\n}\nvoid main(){}"
  status: SyntaxError
  stderr: '/tmp/tmprvolhnpj.d(18): Error: undefined identifier `split`

    /tmp/tmprvolhnpj.d(23): Error: undefined identifier `split`

    Failed: ["dmd", "-unittest", "-v", "-o-", "/tmp/tmprvolhnpj.d", "-I/tmp"]

    '
  stdout: ''
  timestamp: 1660163028
- exit_code: 1
  program: "import std.math;\n/*\n\n    You'll be given a string of words, and your\
    \ task is to count the number\n    of boredoms. A boredom is a sentence that starts\
    \ with the word \"I\".\n    Sentences are delimited by '.', '?' or '!'.\n   \n\
    \    For example:\n    >>> is_bored(\"Hello world\")\n    0L\n    >>> is_bored(\"\
    The sky is blue. The sun is shining. I love this weather\")\n    1L\n    \n*/\n\
    long is_bored(string S) \n{\n    long boredoms = 0;\n    auto words = split(S,\
    \ \" .?!\", true);\n    foreach(word; words)\n    {\n        if(word.length >\
    \ 0 && word[0] == 'I')\n            boredoms++;\n    }\n    return boredoms;\n\
    }\nunittest\n{\n    alias candidate = is_bored;\n\n    assert(candidate(\"Hello\
    \ world\") == 0L);\n    assert(candidate(\"Is the sky blue?\") == 0L);\n    assert(candidate(\"\
    I love It !\") == 1L);\n    assert(candidate(\"bIt\") == 0L);\n    assert(candidate(\"\
    I feel good today. I will be productive. will kill It\") == 2L);\n    assert(candidate(\"\
    You and I are going for a walk\") == 0L);\n}\nvoid main(){}"
  status: SyntaxError
  stderr: '/tmp/tmpdkzxtbft.d(18): Error: undefined identifier `split`

    Failed: ["dmd", "-unittest", "-v", "-o-", "/tmp/tmpdkzxtbft.d", "-I/tmp"]

    '
  stdout: ''
  timestamp: 1660163028
- exit_code: 1
  program: "import std.math;\n/*\n\n    You'll be given a string of words, and your\
    \ task is to count the number\n    of boredoms. A boredom is a sentence that starts\
    \ with the word \"I\".\n    Sentences are delimited by '.', '?' or '!'.\n   \n\
    \    For example:\n    >>> is_bored(\"Hello world\")\n    0L\n    >>> is_bored(\"\
    The sky is blue. The sun is shining. I love this weather\")\n    1L\n    \n*/\n\
    long is_bored(string S) \n{\n    long boredoms = 0;\n    auto sentences = split(S,\
    \ \".\");\n    foreach(sentence; sentences)\n    {\n        auto words = split(sentence,\
    \ \" \");\n        if(words[0] == \"I\")\n            boredoms++;\n    }\n   \
    \ return boredoms;\n}\nunittest\n{\n    alias candidate = is_bored;\n\n    assert(candidate(\"\
    Hello world\") == 0L);\n    assert(candidate(\"Is the sky blue?\") == 0L);\n \
    \   assert(candidate(\"I love It !\") == 1L);\n    assert(candidate(\"bIt\") ==\
    \ 0L);\n    assert(candidate(\"I feel good today. I will be productive. will kill\
    \ It\") == 2L);\n    assert(candidate(\"You and I are going for a walk\") == 0L);\n\
    }\nvoid main(){}"
  status: SyntaxError
  stderr: '/tmp/tmppi5pp7cx.d(18): Error: undefined identifier `split`

    Failed: ["dmd", "-unittest", "-v", "-o-", "/tmp/tmppi5pp7cx.d", "-I/tmp"]

    '
  stdout: ''
  timestamp: 1660163028
- exit_code: 1
  program: "import std.math;\n/*\n\n    You'll be given a string of words, and your\
    \ task is to count the number\n    of boredoms. A boredom is a sentence that starts\
    \ with the word \"I\".\n    Sentences are delimited by '.', '?' or '!'.\n   \n\
    \    For example:\n    >>> is_bored(\"Hello world\")\n    0L\n    >>> is_bored(\"\
    The sky is blue. The sun is shining. I love this weather\")\n    1L\n    \n*/\n\
    long is_bored(string S) \n{\n    long boredoms = 0;\n    string[] sentences =\
    \ split(S, \".\");\n    foreach(string sentence; sentences)\n    {\n        if(sentence.length\
    \ > 0)\n        {\n            string[] words = split(sentence, \" \");\n    \
    \        if(words[0] == \"I\")\n            {\n                boredoms++;\n \
    \           }\n        }\n    }\n    return boredoms;\n}\nunittest\n{\n    alias\
    \ candidate = is_bored;\n\n    assert(candidate(\"Hello world\") == 0L);\n   \
    \ assert(candidate(\"Is the sky blue?\") == 0L);\n    assert(candidate(\"I love\
    \ It !\") == 1L);\n    assert(candidate(\"bIt\") == 0L);\n    assert(candidate(\"\
    I feel good today. I will be productive. will kill It\") == 2L);\n    assert(candidate(\"\
    You and I are going for a walk\") == 0L);\n}\nvoid main(){}"
  status: SyntaxError
  stderr: '/tmp/tmprvolhnpj.d(18): Error: undefined identifier `split`

    /tmp/tmprvolhnpj.d(23): Error: undefined identifier `split`

    Failed: ["dmd", "-unittest", "-v", "-o-", "/tmp/tmprvolhnpj.d", "-I/tmp"]

    '
  stdout: ''
  timestamp: 1660163028
- exit_code: 1
  program: "import std.math;\n/*\n\n    You'll be given a string of words, and your\
    \ task is to count the number\n    of boredoms. A boredom is a sentence that starts\
    \ with the word \"I\".\n    Sentences are delimited by '.', '?' or '!'.\n   \n\
    \    For example:\n    >>> is_bored(\"Hello world\")\n    0L\n    >>> is_bored(\"\
    The sky is blue. The sun is shining. I love this weather\")\n    1L\n    \n*/\n\
    long is_bored(string S) \n{\n    long count = 0;\n    string[] sentences = split(S,\
    \ \".\");\n    foreach(string sentence; sentences)\n    {\n        if(sentence.length\
    \ > 0)\n        {\n            string[] words = split(sentence, \" \");\n    \
    \        if(words[0] == \"I\")\n            {\n                count++;\n    \
    \        }\n        }\n    }\n    return count;\n}\nunittest\n{\n    alias candidate\
    \ = is_bored;\n\n    assert(candidate(\"Hello world\") == 0L);\n    assert(candidate(\"\
    Is the sky blue?\") == 0L);\n    assert(candidate(\"I love It !\") == 1L);\n \
    \   assert(candidate(\"bIt\") == 0L);\n    assert(candidate(\"I feel good today.\
    \ I will be productive. will kill It\") == 2L);\n    assert(candidate(\"You and\
    \ I are going for a walk\") == 0L);\n}\nvoid main(){}"
  status: SyntaxError
  stderr: '/tmp/tmp03651ldh.d(18): Error: undefined identifier `split`

    /tmp/tmp03651ldh.d(23): Error: undefined identifier `split`

    Failed: ["dmd", "-unittest", "-v", "-o-", "/tmp/tmp03651ldh.d", "-I/tmp"]

    '
  stdout: ''
  timestamp: 1660163028
- exit_code: 1
  program: "import std.math;\n/*\n\n    You'll be given a string of words, and your\
    \ task is to count the number\n    of boredoms. A boredom is a sentence that starts\
    \ with the word \"I\".\n    Sentences are delimited by '.', '?' or '!'.\n   \n\
    \    For example:\n    >>> is_bored(\"Hello world\")\n    0L\n    >>> is_bored(\"\
    The sky is blue. The sun is shining. I love this weather\")\n    1L\n    \n*/\n\
    long is_bored(string S) \n{\n    long boredoms = 0;\n    string[] sentences =\
    \ split(S, \".\");\n    foreach(sentence; sentences)\n    {\n        string[]\
    \ words = split(sentence, \" \");\n        if(words[0] == \"I\")\n           \
    \ boredoms++;\n    }\n    return boredoms;\n}\nunittest\n{\n    alias candidate\
    \ = is_bored;\n\n    assert(candidate(\"Hello world\") == 0L);\n    assert(candidate(\"\
    Is the sky blue?\") == 0L);\n    assert(candidate(\"I love It !\") == 1L);\n \
    \   assert(candidate(\"bIt\") == 0L);\n    assert(candidate(\"I feel good today.\
    \ I will be productive. will kill It\") == 2L);\n    assert(candidate(\"You and\
    \ I are going for a walk\") == 0L);\n}\nvoid main(){}"
  status: SyntaxError
  stderr: '/tmp/tmpx3am4b_0.d(18): Error: undefined identifier `split`

    /tmp/tmpx3am4b_0.d(21): Error: undefined identifier `split`

    Failed: ["dmd", "-unittest", "-v", "-o-", "/tmp/tmpx3am4b_0.d", "-I/tmp"]

    '
  stdout: ''
  timestamp: 1660163028
- exit_code: 1
  program: "import std.math;\n/*\n\n    You'll be given a string of words, and your\
    \ task is to count the number\n    of boredoms. A boredom is a sentence that starts\
    \ with the word \"I\".\n    Sentences are delimited by '.', '?' or '!'.\n   \n\
    \    For example:\n    >>> is_bored(\"Hello world\")\n    0L\n    >>> is_bored(\"\
    The sky is blue. The sun is shining. I love this weather\")\n    1L\n    \n*/\n\
    long is_bored(string S) \n{\n    long boredoms = 0;\n    string[] sentences =\
    \ split(S, \".\");\n    foreach(string sentence; sentences)\n    {\n        string[]\
    \ words = split(sentence, \" \");\n        if(words[0] == \"I\")\n           \
    \ boredoms++;\n    }\n    return boredoms;\n}\nunittest\n{\n    alias candidate\
    \ = is_bored;\n\n    assert(candidate(\"Hello world\") == 0L);\n    assert(candidate(\"\
    Is the sky blue?\") == 0L);\n    assert(candidate(\"I love It !\") == 1L);\n \
    \   assert(candidate(\"bIt\") == 0L);\n    assert(candidate(\"I feel good today.\
    \ I will be productive. will kill It\") == 2L);\n    assert(candidate(\"You and\
    \ I are going for a walk\") == 0L);\n}\nvoid main(){}"
  status: SyntaxError
  stderr: '/tmp/tmp1upyxolo.d(18): Error: undefined identifier `split`

    /tmp/tmp1upyxolo.d(21): Error: undefined identifier `split`

    Failed: ["dmd", "-unittest", "-v", "-o-", "/tmp/tmp1upyxolo.d", "-I/tmp"]

    '
  stdout: ''
  timestamp: 1660163028
- exit_code: 1
  program: "import std.math;\n/*\n\n    You'll be given a string of words, and your\
    \ task is to count the number\n    of boredoms. A boredom is a sentence that starts\
    \ with the word \"I\".\n    Sentences are delimited by '.', '?' or '!'.\n   \n\
    \    For example:\n    >>> is_bored(\"Hello world\")\n    0L\n    >>> is_bored(\"\
    The sky is blue. The sun is shining. I love this weather\")\n    1L\n    \n*/\n\
    long is_bored(string S) \n{\n    long boredoms = 0;\n    string[] sentences =\
    \ split(S, \".\");\n    foreach(string sentence; sentences)\n    {\n        if(sentence.length\
    \ > 0)\n        {\n            string[] words = split(sentence, \" \");\n    \
    \        if(words[0] == \"I\")\n            {\n                boredoms++;\n \
    \           }\n        }\n    }\n    return boredoms;\n}\nunittest\n{\n    alias\
    \ candidate = is_bored;\n\n    assert(candidate(\"Hello world\") == 0L);\n   \
    \ assert(candidate(\"Is the sky blue?\") == 0L);\n    assert(candidate(\"I love\
    \ It !\") == 1L);\n    assert(candidate(\"bIt\") == 0L);\n    assert(candidate(\"\
    I feel good today. I will be productive. will kill It\") == 2L);\n    assert(candidate(\"\
    You and I are going for a walk\") == 0L);\n}\nvoid main(){}"
  status: SyntaxError
  stderr: '/tmp/tmprvolhnpj.d(18): Error: undefined identifier `split`

    /tmp/tmprvolhnpj.d(23): Error: undefined identifier `split`

    Failed: ["dmd", "-unittest", "-v", "-o-", "/tmp/tmprvolhnpj.d", "-I/tmp"]

    '
  stdout: ''
  timestamp: 1660163028
- exit_code: 1
  program: "import std.math;\n/*\n\n    You'll be given a string of words, and your\
    \ task is to count the number\n    of boredoms. A boredom is a sentence that starts\
    \ with the word \"I\".\n    Sentences are delimited by '.', '?' or '!'.\n   \n\
    \    For example:\n    >>> is_bored(\"Hello world\")\n    0L\n    >>> is_bored(\"\
    The sky is blue. The sun is shining. I love this weather\")\n    1L\n    \n*/\n\
    long is_bored(string S) \n{\n    long boredoms = 0;\n    string[] sentences =\
    \ split(S, \".\");\n    foreach(sentence; sentences)\n    {\n        string[]\
    \ words = split(sentence, \" \");\n        if(words[0] == \"I\")\n           \
    \ boredoms++;\n    }\n    return boredoms;\n}\nunittest\n{\n    alias candidate\
    \ = is_bored;\n\n    assert(candidate(\"Hello world\") == 0L);\n    assert(candidate(\"\
    Is the sky blue?\") == 0L);\n    assert(candidate(\"I love It !\") == 1L);\n \
    \   assert(candidate(\"bIt\") == 0L);\n    assert(candidate(\"I feel good today.\
    \ I will be productive. will kill It\") == 2L);\n    assert(candidate(\"You and\
    \ I are going for a walk\") == 0L);\n}\nvoid main(){}"
  status: SyntaxError
  stderr: '/tmp/tmpx3am4b_0.d(18): Error: undefined identifier `split`

    /tmp/tmpx3am4b_0.d(21): Error: undefined identifier `split`

    Failed: ["dmd", "-unittest", "-v", "-o-", "/tmp/tmpx3am4b_0.d", "-I/tmp"]

    '
  stdout: ''
  timestamp: 1660163028
- exit_code: 1
  program: "import std.math;\n/*\n\n    You'll be given a string of words, and your\
    \ task is to count the number\n    of boredoms. A boredom is a sentence that starts\
    \ with the word \"I\".\n    Sentences are delimited by '.', '?' or '!'.\n   \n\
    \    For example:\n    >>> is_bored(\"Hello world\")\n    0L\n    >>> is_bored(\"\
    The sky is blue. The sun is shining. I love this weather\")\n    1L\n    \n*/\n\
    long is_bored(string S) \n{\n    long boredoms = 0;\n    string[] sentences =\
    \ split(S, \".\");\n    foreach(string sentence; sentences)\n    {\n        string[]\
    \ words = split(sentence, \" \");\n        if(words[0] == \"I\")\n           \
    \ boredoms++;\n    }\n    return boredoms;\n}\nunittest\n{\n    alias candidate\
    \ = is_bored;\n\n    assert(candidate(\"Hello world\") == 0L);\n    assert(candidate(\"\
    Is the sky blue?\") == 0L);\n    assert(candidate(\"I love It !\") == 1L);\n \
    \   assert(candidate(\"bIt\") == 0L);\n    assert(candidate(\"I feel good today.\
    \ I will be productive. will kill It\") == 2L);\n    assert(candidate(\"You and\
    \ I are going for a walk\") == 0L);\n}\nvoid main(){}"
  status: SyntaxError
  stderr: '/tmp/tmp1upyxolo.d(18): Error: undefined identifier `split`

    /tmp/tmp1upyxolo.d(21): Error: undefined identifier `split`

    Failed: ["dmd", "-unittest", "-v", "-o-", "/tmp/tmp1upyxolo.d", "-I/tmp"]

    '
  stdout: ''
  timestamp: 1660163028
- exit_code: 1
  program: "import std.math;\n/*\n\n    You'll be given a string of words, and your\
    \ task is to count the number\n    of boredoms. A boredom is a sentence that starts\
    \ with the word \"I\".\n    Sentences are delimited by '.', '?' or '!'.\n   \n\
    \    For example:\n    >>> is_bored(\"Hello world\")\n    0L\n    >>> is_bored(\"\
    The sky is blue. The sun is shining. I love this weather\")\n    1L\n    \n*/\n\
    long is_bored(string S) \n{\n    long boredoms = 0;\n    string[] sentences =\
    \ split(S, \".!?\");\n    foreach(sentence; sentences)\n    {\n        if(sentence.length\
    \ > 0 && sentence[0] == 'I')\n            boredoms++;\n    }\n    return boredoms;\n\
    }\nunittest\n{\n    alias candidate = is_bored;\n\n    assert(candidate(\"Hello\
    \ world\") == 0L);\n    assert(candidate(\"Is the sky blue?\") == 0L);\n    assert(candidate(\"\
    I love It !\") == 1L);\n    assert(candidate(\"bIt\") == 0L);\n    assert(candidate(\"\
    I feel good today. I will be productive. will kill It\") == 2L);\n    assert(candidate(\"\
    You and I are going for a walk\") == 0L);\n}\nvoid main(){}"
  status: SyntaxError
  stderr: '/tmp/tmpweaol19q.d(18): Error: undefined identifier `split`

    Failed: ["dmd", "-unittest", "-v", "-o-", "/tmp/tmpweaol19q.d", "-I/tmp"]

    '
  stdout: ''
  timestamp: 1660163028
- exit_code: 1
  program: "import std.math;\n/*\n\n    You'll be given a string of words, and your\
    \ task is to count the number\n    of boredoms. A boredom is a sentence that starts\
    \ with the word \"I\".\n    Sentences are delimited by '.', '?' or '!'.\n   \n\
    \    For example:\n    >>> is_bored(\"Hello world\")\n    0L\n    >>> is_bored(\"\
    The sky is blue. The sun is shining. I love this weather\")\n    1L\n    \n*/\n\
    long is_bored(string S) \n{\n    long boredoms = 0;\n    string[] sentences =\
    \ split(S, \".\");\n    foreach(sentence; sentences)\n    {\n        string[]\
    \ words = split(sentence, \" \");\n        if(words[0] == \"I\")\n           \
    \ boredoms++;\n    }\n    return boredoms;\n}\nunittest\n{\n    alias candidate\
    \ = is_bored;\n\n    assert(candidate(\"Hello world\") == 0L);\n    assert(candidate(\"\
    Is the sky blue?\") == 0L);\n    assert(candidate(\"I love It !\") == 1L);\n \
    \   assert(candidate(\"bIt\") == 0L);\n    assert(candidate(\"I feel good today.\
    \ I will be productive. will kill It\") == 2L);\n    assert(candidate(\"You and\
    \ I are going for a walk\") == 0L);\n}\nvoid main(){}"
  status: SyntaxError
  stderr: '/tmp/tmpx3am4b_0.d(18): Error: undefined identifier `split`

    /tmp/tmpx3am4b_0.d(21): Error: undefined identifier `split`

    Failed: ["dmd", "-unittest", "-v", "-o-", "/tmp/tmpx3am4b_0.d", "-I/tmp"]

    '
  stdout: ''
  timestamp: 1660163028
- exit_code: 1
  program: "import std.math;\n/*\n\n    You'll be given a string of words, and your\
    \ task is to count the number\n    of boredoms. A boredom is a sentence that starts\
    \ with the word \"I\".\n    Sentences are delimited by '.', '?' or '!'.\n   \n\
    \    For example:\n    >>> is_bored(\"Hello world\")\n    0L\n    >>> is_bored(\"\
    The sky is blue. The sun is shining. I love this weather\")\n    1L\n    \n*/\n\
    long is_bored(string S) \n{\n    long boredoms = 0;\n    string[] sentences =\
    \ split(S, \".\");\n    foreach(sentence; sentences)\n    {\n        string[]\
    \ words = split(sentence, \" \");\n        if(words[0] == \"I\")\n           \
    \ boredoms++;\n    }\n    return boredoms;\n}\nunittest\n{\n    alias candidate\
    \ = is_bored;\n\n    assert(candidate(\"Hello world\") == 0L);\n    assert(candidate(\"\
    Is the sky blue?\") == 0L);\n    assert(candidate(\"I love It !\") == 1L);\n \
    \   assert(candidate(\"bIt\") == 0L);\n    assert(candidate(\"I feel good today.\
    \ I will be productive. will kill It\") == 2L);\n    assert(candidate(\"You and\
    \ I are going for a walk\") == 0L);\n}\nvoid main(){}"
  status: SyntaxError
  stderr: '/tmp/tmpx3am4b_0.d(18): Error: undefined identifier `split`

    /tmp/tmpx3am4b_0.d(21): Error: undefined identifier `split`

    Failed: ["dmd", "-unittest", "-v", "-o-", "/tmp/tmpx3am4b_0.d", "-I/tmp"]

    '
  stdout: ''
  timestamp: 1660163028
- exit_code: 1
  program: "import std.math;\n/*\n\n    You'll be given a string of words, and your\
    \ task is to count the number\n    of boredoms. A boredom is a sentence that starts\
    \ with the word \"I\".\n    Sentences are delimited by '.', '?' or '!'.\n   \n\
    \    For example:\n    >>> is_bored(\"Hello world\")\n    0L\n    >>> is_bored(\"\
    The sky is blue. The sun is shining. I love this weather\")\n    1L\n    \n*/\n\
    long is_bored(string S) \n{\n    long boredoms = 0;\n    string[] sentences =\
    \ split(S, \".\");\n    foreach(string sentence; sentences)\n    {\n        string[]\
    \ words = split(sentence, \" \");\n        if(words[0] == \"I\")\n           \
    \ boredoms++;\n    }\n    return boredoms;\n}\nunittest\n{\n    alias candidate\
    \ = is_bored;\n\n    assert(candidate(\"Hello world\") == 0L);\n    assert(candidate(\"\
    Is the sky blue?\") == 0L);\n    assert(candidate(\"I love It !\") == 1L);\n \
    \   assert(candidate(\"bIt\") == 0L);\n    assert(candidate(\"I feel good today.\
    \ I will be productive. will kill It\") == 2L);\n    assert(candidate(\"You and\
    \ I are going for a walk\") == 0L);\n}\nvoid main(){}"
  status: SyntaxError
  stderr: '/tmp/tmp1upyxolo.d(18): Error: undefined identifier `split`

    /tmp/tmp1upyxolo.d(21): Error: undefined identifier `split`

    Failed: ["dmd", "-unittest", "-v", "-o-", "/tmp/tmp1upyxolo.d", "-I/tmp"]

    '
  stdout: ''
  timestamp: 1660163028
- exit_code: 1
  program: "import std.math;\n/*\n\n    You'll be given a string of words, and your\
    \ task is to count the number\n    of boredoms. A boredom is a sentence that starts\
    \ with the word \"I\".\n    Sentences are delimited by '.', '?' or '!'.\n   \n\
    \    For example:\n    >>> is_bored(\"Hello world\")\n    0L\n    >>> is_bored(\"\
    The sky is blue. The sun is shining. I love this weather\")\n    1L\n    \n*/\n\
    long is_bored(string S) \n{\n    long boredoms = 0;\n    string[] sentences =\
    \ split(S, \".\");\n    foreach(string sentence; sentences)\n    {\n        if(sentence.length\
    \ > 0)\n        {\n            string[] words = split(sentence, \" \");\n    \
    \        if(words[0] == \"I\")\n            {\n                boredoms++;\n \
    \           }\n        }\n    }\n    return boredoms;\n}\nunittest\n{\n    alias\
    \ candidate = is_bored;\n\n    assert(candidate(\"Hello world\") == 0L);\n   \
    \ assert(candidate(\"Is the sky blue?\") == 0L);\n    assert(candidate(\"I love\
    \ It !\") == 1L);\n    assert(candidate(\"bIt\") == 0L);\n    assert(candidate(\"\
    I feel good today. I will be productive. will kill It\") == 2L);\n    assert(candidate(\"\
    You and I are going for a walk\") == 0L);\n}\nvoid main(){}"
  status: SyntaxError
  stderr: '/tmp/tmprvolhnpj.d(18): Error: undefined identifier `split`

    /tmp/tmprvolhnpj.d(23): Error: undefined identifier `split`

    Failed: ["dmd", "-unittest", "-v", "-o-", "/tmp/tmprvolhnpj.d", "-I/tmp"]

    '
  stdout: ''
  timestamp: 1660163028
- exit_code: 1
  program: "import std.math;\n/*\n\n    You'll be given a string of words, and your\
    \ task is to count the number\n    of boredoms. A boredom is a sentence that starts\
    \ with the word \"I\".\n    Sentences are delimited by '.', '?' or '!'.\n   \n\
    \    For example:\n    >>> is_bored(\"Hello world\")\n    0L\n    >>> is_bored(\"\
    The sky is blue. The sun is shining. I love this weather\")\n    1L\n    \n*/\n\
    long is_bored(string S) \n{\n    long boredoms = 0;\n    string[] sentences =\
    \ split(S, \".\");\n    foreach(string sentence; sentences)\n    {\n        string[]\
    \ words = split(sentence, \" \");\n        if(words[0] == \"I\")\n           \
    \ boredoms++;\n    }\n    return boredoms;\n}\nunittest\n{\n    alias candidate\
    \ = is_bored;\n\n    assert(candidate(\"Hello world\") == 0L);\n    assert(candidate(\"\
    Is the sky blue?\") == 0L);\n    assert(candidate(\"I love It !\") == 1L);\n \
    \   assert(candidate(\"bIt\") == 0L);\n    assert(candidate(\"I feel good today.\
    \ I will be productive. will kill It\") == 2L);\n    assert(candidate(\"You and\
    \ I are going for a walk\") == 0L);\n}\nvoid main(){}"
  status: SyntaxError
  stderr: '/tmp/tmp1upyxolo.d(18): Error: undefined identifier `split`

    /tmp/tmp1upyxolo.d(21): Error: undefined identifier `split`

    Failed: ["dmd", "-unittest", "-v", "-o-", "/tmp/tmp1upyxolo.d", "-I/tmp"]

    '
  stdout: ''
  timestamp: 1660163028
- exit_code: 1
  program: "import std.math;\n/*\n\n    You'll be given a string of words, and your\
    \ task is to count the number\n    of boredoms. A boredom is a sentence that starts\
    \ with the word \"I\".\n    Sentences are delimited by '.', '?' or '!'.\n   \n\
    \    For example:\n    >>> is_bored(\"Hello world\")\n    0L\n    >>> is_bored(\"\
    The sky is blue. The sun is shining. I love this weather\")\n    1L\n    \n*/\n\
    long is_bored(string S) \n{\n    long boredoms = 0;\n    long i = 0;\n    long\
    \ len = S.length;\n    while (i < len)\n    {\n        if (S[i] == 'I')\n    \
    \    {\n            boredoms++;\n            while (i < len && S[i] != '.' &&\
    \ S[i] != '?' && S[i] != '!')\n            {\n                i++;\n         \
    \   }\n        }\n        i++;\n    }\n    return boredoms;\n}\nunittest\n{\n\
    \    alias candidate = is_bored;\n\n    assert(candidate(\"Hello world\") == 0L);\n\
    \    assert(candidate(\"Is the sky blue?\") == 0L);\n    assert(candidate(\"I\
    \ love It !\") == 1L);\n    assert(candidate(\"bIt\") == 0L);\n    assert(candidate(\"\
    I feel good today. I will be productive. will kill It\") == 2L);\n    assert(candidate(\"\
    You and I are going for a walk\") == 0L);\n}\nvoid main(){}"
  status: Exception
  stderr: 'core.exception.AssertError@/tmp/tmpyxi969_c.d(39): unittest failure

    ----------------

    ??:? _d_unittestp [0x427e95]

    ??:? void tmpyxi969_c.__unittest_L34_C1() [0x427b57]

    ??:? void tmpyxi969_c.__modtest() [0x427c14]

    ??:? int core.runtime.runModuleUnitTests().__foreachbody2(object.ModuleInfo*)
    [0x42bc2f]

    ??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)).__lambda2(immutable(object.ModuleInfo*))
    [0x42aac2]

    ??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))).__foreachbody2(ref
    rt.sections_elf_shared.DSO) [0x42fc55]

    ??:? int rt.sections_elf_shared.DSO.opApply(scope int delegate(ref rt.sections_elf_shared.DSO))
    [0x430104]

    ??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*)))
    [0x42fbe1]

    ??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)) [0x42aa99]

    ??:? runModuleUnitTests [0x42ba05]

    ??:? void rt.dmain2._d_run_main(int, char**, extern (C) int function(char[][])*).runAll()
    [0x428358]

    ??:? void rt.dmain2._d_r'
  stdout: ''
  timestamp: 1660163028
- exit_code: 1
  program: "import std.math;\n/*\n\n    You'll be given a string of words, and your\
    \ task is to count the number\n    of boredoms. A boredom is a sentence that starts\
    \ with the word \"I\".\n    Sentences are delimited by '.', '?' or '!'.\n   \n\
    \    For example:\n    >>> is_bored(\"Hello world\")\n    0L\n    >>> is_bored(\"\
    The sky is blue. The sun is shining. I love this weather\")\n    1L\n    \n*/\n\
    long is_bored(string S) \n{\n    long boredoms = 0;\n    string[] sentences =\
    \ split(S, \".\");\n    foreach(string sentence; sentences)\n    {\n        if(sentence.length\
    \ > 0)\n        {\n            string[] words = split(sentence, \" \");\n    \
    \        if(words[0] == \"I\")\n            {\n                boredoms++;\n \
    \           }\n        }\n    }\n    return boredoms;\n}\nunittest\n{\n    alias\
    \ candidate = is_bored;\n\n    assert(candidate(\"Hello world\") == 0L);\n   \
    \ assert(candidate(\"Is the sky blue?\") == 0L);\n    assert(candidate(\"I love\
    \ It !\") == 1L);\n    assert(candidate(\"bIt\") == 0L);\n    assert(candidate(\"\
    I feel good today. I will be productive. will kill It\") == 2L);\n    assert(candidate(\"\
    You and I are going for a walk\") == 0L);\n}\nvoid main(){}"
  status: SyntaxError
  stderr: '/tmp/tmprvolhnpj.d(18): Error: undefined identifier `split`

    /tmp/tmprvolhnpj.d(23): Error: undefined identifier `split`

    Failed: ["dmd", "-unittest", "-v", "-o-", "/tmp/tmprvolhnpj.d", "-I/tmp"]

    '
  stdout: ''
  timestamp: 1660163028
- exit_code: 1
  program: "import std.math;\n/*\n\n    You'll be given a string of words, and your\
    \ task is to count the number\n    of boredoms. A boredom is a sentence that starts\
    \ with the word \"I\".\n    Sentences are delimited by '.', '?' or '!'.\n   \n\
    \    For example:\n    >>> is_bored(\"Hello world\")\n    0L\n    >>> is_bored(\"\
    The sky is blue. The sun is shining. I love this weather\")\n    1L\n    \n*/\n\
    long is_bored(string S) \n{\n    long count = 0;\n    string[] words = split(S,\
    \ \" \");\n    foreach(string word; words)\n    {\n        if(word == \"I\")\n\
    \            count++;\n    }\n    return count;\n}\nunittest\n{\n    alias candidate\
    \ = is_bored;\n\n    assert(candidate(\"Hello world\") == 0L);\n    assert(candidate(\"\
    Is the sky blue?\") == 0L);\n    assert(candidate(\"I love It !\") == 1L);\n \
    \   assert(candidate(\"bIt\") == 0L);\n    assert(candidate(\"I feel good today.\
    \ I will be productive. will kill It\") == 2L);\n    assert(candidate(\"You and\
    \ I are going for a walk\") == 0L);\n}\nvoid main(){}"
  status: SyntaxError
  stderr: '/tmp/tmpej_rprd2.d(18): Error: undefined identifier `split`

    Failed: ["dmd", "-unittest", "-v", "-o-", "/tmp/tmpej_rprd2.d", "-I/tmp"]

    '
  stdout: ''
  timestamp: 1660163028
- exit_code: 1
  program: "import std.math;\n/*\n\n    You'll be given a string of words, and your\
    \ task is to count the number\n    of boredoms. A boredom is a sentence that starts\
    \ with the word \"I\".\n    Sentences are delimited by '.', '?' or '!'.\n   \n\
    \    For example:\n    >>> is_bored(\"Hello world\")\n    0L\n    >>> is_bored(\"\
    The sky is blue. The sun is shining. I love this weather\")\n    1L\n    \n*/\n\
    long is_bored(string S) \n{\n    long boredoms = 0;\n    string[] sentences =\
    \ split(S, \".\");\n    foreach(sentence; sentences)\n    {\n        string[]\
    \ words = split(sentence, \" \");\n        if(words[0] == \"I\")\n           \
    \ boredoms++;\n    }\n    return boredoms;\n}\nunittest\n{\n    alias candidate\
    \ = is_bored;\n\n    assert(candidate(\"Hello world\") == 0L);\n    assert(candidate(\"\
    Is the sky blue?\") == 0L);\n    assert(candidate(\"I love It !\") == 1L);\n \
    \   assert(candidate(\"bIt\") == 0L);\n    assert(candidate(\"I feel good today.\
    \ I will be productive. will kill It\") == 2L);\n    assert(candidate(\"You and\
    \ I are going for a walk\") == 0L);\n}\nvoid main(){}"
  status: SyntaxError
  stderr: '/tmp/tmpx3am4b_0.d(18): Error: undefined identifier `split`

    /tmp/tmpx3am4b_0.d(21): Error: undefined identifier `split`

    Failed: ["dmd", "-unittest", "-v", "-o-", "/tmp/tmpx3am4b_0.d", "-I/tmp"]

    '
  stdout: ''
  timestamp: 1660163028
- exit_code: 1
  program: "import std.math;\n/*\n\n    You'll be given a string of words, and your\
    \ task is to count the number\n    of boredoms. A boredom is a sentence that starts\
    \ with the word \"I\".\n    Sentences are delimited by '.', '?' or '!'.\n   \n\
    \    For example:\n    >>> is_bored(\"Hello world\")\n    0L\n    >>> is_bored(\"\
    The sky is blue. The sun is shining. I love this weather\")\n    1L\n    \n*/\n\
    long is_bored(string S) \n{\n    long boredoms = 0;\n    string[] sentences =\
    \ split(S, \".\");\n    foreach(sentence; sentences)\n    {\n        string[]\
    \ words = split(sentence, \" \");\n        if(words[0] == \"I\")\n           \
    \ boredoms++;\n    }\n    return boredoms;\n}\nunittest\n{\n    alias candidate\
    \ = is_bored;\n\n    assert(candidate(\"Hello world\") == 0L);\n    assert(candidate(\"\
    Is the sky blue?\") == 0L);\n    assert(candidate(\"I love It !\") == 1L);\n \
    \   assert(candidate(\"bIt\") == 0L);\n    assert(candidate(\"I feel good today.\
    \ I will be productive. will kill It\") == 2L);\n    assert(candidate(\"You and\
    \ I are going for a walk\") == 0L);\n}\nvoid main(){}"
  status: SyntaxError
  stderr: '/tmp/tmpx3am4b_0.d(18): Error: undefined identifier `split`

    /tmp/tmpx3am4b_0.d(21): Error: undefined identifier `split`

    Failed: ["dmd", "-unittest", "-v", "-o-", "/tmp/tmpx3am4b_0.d", "-I/tmp"]

    '
  stdout: ''
  timestamp: 1660163028
- exit_code: 1
  program: "import std.math;\n/*\n\n    You'll be given a string of words, and your\
    \ task is to count the number\n    of boredoms. A boredom is a sentence that starts\
    \ with the word \"I\".\n    Sentences are delimited by '.', '?' or '!'.\n   \n\
    \    For example:\n    >>> is_bored(\"Hello world\")\n    0L\n    >>> is_bored(\"\
    The sky is blue. The sun is shining. I love this weather\")\n    1L\n    \n*/\n\
    long is_bored(string S) \n{\n    long boredoms = 0;\n    string[] sentences =\
    \ split(S, \".\");\n    foreach(string sentence; sentences)\n    {\n        if(sentence.length\
    \ > 0)\n        {\n            string[] words = split(sentence, \" \");\n    \
    \        if(words[0] == \"I\")\n            {\n                boredoms++;\n \
    \           }\n        }\n    }\n    return boredoms;\n}\nunittest\n{\n    alias\
    \ candidate = is_bored;\n\n    assert(candidate(\"Hello world\") == 0L);\n   \
    \ assert(candidate(\"Is the sky blue?\") == 0L);\n    assert(candidate(\"I love\
    \ It !\") == 1L);\n    assert(candidate(\"bIt\") == 0L);\n    assert(candidate(\"\
    I feel good today. I will be productive. will kill It\") == 2L);\n    assert(candidate(\"\
    You and I are going for a walk\") == 0L);\n}\nvoid main(){}"
  status: SyntaxError
  stderr: '/tmp/tmprvolhnpj.d(18): Error: undefined identifier `split`

    /tmp/tmprvolhnpj.d(23): Error: undefined identifier `split`

    Failed: ["dmd", "-unittest", "-v", "-o-", "/tmp/tmprvolhnpj.d", "-I/tmp"]

    '
  stdout: ''
  timestamp: 1660163028
- exit_code: 1
  program: "import std.math;\n/*\n\n    You'll be given a string of words, and your\
    \ task is to count the number\n    of boredoms. A boredom is a sentence that starts\
    \ with the word \"I\".\n    Sentences are delimited by '.', '?' or '!'.\n   \n\
    \    For example:\n    >>> is_bored(\"Hello world\")\n    0L\n    >>> is_bored(\"\
    The sky is blue. The sun is shining. I love this weather\")\n    1L\n    \n*/\n\
    long is_bored(string S) \n{\n    long boredoms = 0;\n    string[] sentences =\
    \ split(S, \".\");\n    foreach(string sentence; sentences)\n    {\n        if(sentence.length\
    \ > 0)\n        {\n            string[] words = split(sentence, \" \");\n    \
    \        if(words[0] == \"I\")\n            {\n                boredoms++;\n \
    \           }\n        }\n    }\n    return boredoms;\n}\nunittest\n{\n    alias\
    \ candidate = is_bored;\n\n    assert(candidate(\"Hello world\") == 0L);\n   \
    \ assert(candidate(\"Is the sky blue?\") == 0L);\n    assert(candidate(\"I love\
    \ It !\") == 1L);\n    assert(candidate(\"bIt\") == 0L);\n    assert(candidate(\"\
    I feel good today. I will be productive. will kill It\") == 2L);\n    assert(candidate(\"\
    You and I are going for a walk\") == 0L);\n}\nvoid main(){}"
  status: SyntaxError
  stderr: '/tmp/tmprvolhnpj.d(18): Error: undefined identifier `split`

    /tmp/tmprvolhnpj.d(23): Error: undefined identifier `split`

    Failed: ["dmd", "-unittest", "-v", "-o-", "/tmp/tmprvolhnpj.d", "-I/tmp"]

    '
  stdout: ''
  timestamp: 1660163028
- exit_code: 1
  program: "import std.math;\n/*\n\n    You'll be given a string of words, and your\
    \ task is to count the number\n    of boredoms. A boredom is a sentence that starts\
    \ with the word \"I\".\n    Sentences are delimited by '.', '?' or '!'.\n   \n\
    \    For example:\n    >>> is_bored(\"Hello world\")\n    0L\n    >>> is_bored(\"\
    The sky is blue. The sun is shining. I love this weather\")\n    1L\n    \n*/\n\
    long is_bored(string S) \n{\n    long boredoms = 0;\n    string[] sentences =\
    \ split(S, \".\");\n    foreach(string sentence; sentences)\n    {\n        if(sentence.length\
    \ > 0)\n        {\n            if(sentence[0] == 'I')\n            {\n       \
    \         boredoms++;\n            }\n        }\n    }\n    return boredoms;\n\
    }\nunittest\n{\n    alias candidate = is_bored;\n\n    assert(candidate(\"Hello\
    \ world\") == 0L);\n    assert(candidate(\"Is the sky blue?\") == 0L);\n    assert(candidate(\"\
    I love It !\") == 1L);\n    assert(candidate(\"bIt\") == 0L);\n    assert(candidate(\"\
    I feel good today. I will be productive. will kill It\") == 2L);\n    assert(candidate(\"\
    You and I are going for a walk\") == 0L);\n}\nvoid main(){}"
  status: SyntaxError
  stderr: '/tmp/tmp0g6ca0rk.d(18): Error: undefined identifier `split`

    Failed: ["dmd", "-unittest", "-v", "-o-", "/tmp/tmp0g6ca0rk.d", "-I/tmp"]

    '
  stdout: ''
  timestamp: 1660163028
- exit_code: 1
  program: "import std.math;\n/*\n\n    You'll be given a string of words, and your\
    \ task is to count the number\n    of boredoms. A boredom is a sentence that starts\
    \ with the word \"I\".\n    Sentences are delimited by '.', '?' or '!'.\n   \n\
    \    For example:\n    >>> is_bored(\"Hello world\")\n    0L\n    >>> is_bored(\"\
    The sky is blue. The sun is shining. I love this weather\")\n    1L\n    \n*/\n\
    long is_bored(string S) \n{\n    long boredoms = 0;\n    string[] sentences =\
    \ split(S, \".\");\n    foreach(sentence; sentences)\n    {\n        if(sentence.length\
    \ > 0)\n        {\n            string[] words = split(sentence, \" \");\n    \
    \        if(words[0] == \"I\")\n            {\n                boredoms++;\n \
    \           }\n        }\n    }\n    return boredoms;\n}\nunittest\n{\n    alias\
    \ candidate = is_bored;\n\n    assert(candidate(\"Hello world\") == 0L);\n   \
    \ assert(candidate(\"Is the sky blue?\") == 0L);\n    assert(candidate(\"I love\
    \ It !\") == 1L);\n    assert(candidate(\"bIt\") == 0L);\n    assert(candidate(\"\
    I feel good today. I will be productive. will kill It\") == 2L);\n    assert(candidate(\"\
    You and I are going for a walk\") == 0L);\n}\nvoid main(){}"
  status: SyntaxError
  stderr: '/tmp/tmpmhho1zga.d(18): Error: undefined identifier `split`

    /tmp/tmpmhho1zga.d(23): Error: undefined identifier `split`

    Failed: ["dmd", "-unittest", "-v", "-o-", "/tmp/tmpmhho1zga.d", "-I/tmp"]

    '
  stdout: ''
  timestamp: 1660163028
- exit_code: 1
  program: "import std.math;\n/*\n\n    You'll be given a string of words, and your\
    \ task is to count the number\n    of boredoms. A boredom is a sentence that starts\
    \ with the word \"I\".\n    Sentences are delimited by '.', '?' or '!'.\n   \n\
    \    For example:\n    >>> is_bored(\"Hello world\")\n    0L\n    >>> is_bored(\"\
    The sky is blue. The sun is shining. I love this weather\")\n    1L\n    \n*/\n\
    long is_bored(string S) \n{\n    long count = 0;\n    string[] words = split(S,\
    \ \" .?!\");\n    foreach(string word; words)\n    {\n        if(word == \"I\"\
    )\n            count++;\n    }\n    return count;\n}\nunittest\n{\n    alias candidate\
    \ = is_bored;\n\n    assert(candidate(\"Hello world\") == 0L);\n    assert(candidate(\"\
    Is the sky blue?\") == 0L);\n    assert(candidate(\"I love It !\") == 1L);\n \
    \   assert(candidate(\"bIt\") == 0L);\n    assert(candidate(\"I feel good today.\
    \ I will be productive. will kill It\") == 2L);\n    assert(candidate(\"You and\
    \ I are going for a walk\") == 0L);\n}\nvoid main(){}"
  status: SyntaxError
  stderr: '/tmp/tmpptah8kbr.d(18): Error: undefined identifier `split`

    Failed: ["dmd", "-unittest", "-v", "-o-", "/tmp/tmpptah8kbr.d", "-I/tmp"]

    '
  stdout: ''
  timestamp: 1660163028
- exit_code: 1
  program: "import std.math;\n/*\n\n    You'll be given a string of words, and your\
    \ task is to count the number\n    of boredoms. A boredom is a sentence that starts\
    \ with the word \"I\".\n    Sentences are delimited by '.', '?' or '!'.\n   \n\
    \    For example:\n    >>> is_bored(\"Hello world\")\n    0L\n    >>> is_bored(\"\
    The sky is blue. The sun is shining. I love this weather\")\n    1L\n    \n*/\n\
    long is_bored(string S) \n{\n    long boredoms = 0;\n    string[] sentences =\
    \ split(S, \".\");\n    foreach(string sentence; sentences)\n    {\n        if(sentence.length\
    \ > 0)\n        {\n            string[] words = split(sentence, \" \");\n    \
    \        if(words[0] == \"I\")\n            {\n                boredoms++;\n \
    \           }\n        }\n    }\n    return boredoms;\n}\nunittest\n{\n    alias\
    \ candidate = is_bored;\n\n    assert(candidate(\"Hello world\") == 0L);\n   \
    \ assert(candidate(\"Is the sky blue?\") == 0L);\n    assert(candidate(\"I love\
    \ It !\") == 1L);\n    assert(candidate(\"bIt\") == 0L);\n    assert(candidate(\"\
    I feel good today. I will be productive. will kill It\") == 2L);\n    assert(candidate(\"\
    You and I are going for a walk\") == 0L);\n}\nvoid main(){}"
  status: SyntaxError
  stderr: '/tmp/tmprvolhnpj.d(18): Error: undefined identifier `split`

    /tmp/tmprvolhnpj.d(23): Error: undefined identifier `split`

    Failed: ["dmd", "-unittest", "-v", "-o-", "/tmp/tmprvolhnpj.d", "-I/tmp"]

    '
  stdout: ''
  timestamp: 1660163028
- exit_code: 1
  program: "import std.math;\n/*\n\n    You'll be given a string of words, and your\
    \ task is to count the number\n    of boredoms. A boredom is a sentence that starts\
    \ with the word \"I\".\n    Sentences are delimited by '.', '?' or '!'.\n   \n\
    \    For example:\n    >>> is_bored(\"Hello world\")\n    0L\n    >>> is_bored(\"\
    The sky is blue. The sun is shining. I love this weather\")\n    1L\n    \n*/\n\
    long is_bored(string S) \n{\n    long boredoms = 0;\n    string[] sentences =\
    \ split(S, \".\");\n    foreach(string sentence; sentences)\n    {\n        if(sentence.length\
    \ > 0)\n        {\n            string[] words = split(sentence, \" \");\n    \
    \        if(words[0] == \"I\")\n            {\n                boredoms++;\n \
    \           }\n        }\n    }\n    return boredoms;\n}\nunittest\n{\n    alias\
    \ candidate = is_bored;\n\n    assert(candidate(\"Hello world\") == 0L);\n   \
    \ assert(candidate(\"Is the sky blue?\") == 0L);\n    assert(candidate(\"I love\
    \ It !\") == 1L);\n    assert(candidate(\"bIt\") == 0L);\n    assert(candidate(\"\
    I feel good today. I will be productive. will kill It\") == 2L);\n    assert(candidate(\"\
    You and I are going for a walk\") == 0L);\n}\nvoid main(){}"
  status: SyntaxError
  stderr: '/tmp/tmprvolhnpj.d(18): Error: undefined identifier `split`

    /tmp/tmprvolhnpj.d(23): Error: undefined identifier `split`

    Failed: ["dmd", "-unittest", "-v", "-o-", "/tmp/tmprvolhnpj.d", "-I/tmp"]

    '
  stdout: ''
  timestamp: 1660163028
- exit_code: 1
  program: "import std.math;\n/*\n\n    You'll be given a string of words, and your\
    \ task is to count the number\n    of boredoms. A boredom is a sentence that starts\
    \ with the word \"I\".\n    Sentences are delimited by '.', '?' or '!'.\n   \n\
    \    For example:\n    >>> is_bored(\"Hello world\")\n    0L\n    >>> is_bored(\"\
    The sky is blue. The sun is shining. I love this weather\")\n    1L\n    \n*/\n\
    long is_bored(string S) \n{\n    long boredoms = 0;\n    string[] sentences =\
    \ split(S, \".\");\n    foreach(string sentence; sentences)\n    {\n        if(sentence.length\
    \ > 0)\n        {\n            string[] words = split(sentence, \" \");\n    \
    \        if(words[0] == \"I\")\n            {\n                boredoms++;\n \
    \           }\n        }\n    }\n    return boredoms;\n}\nunittest\n{\n    alias\
    \ candidate = is_bored;\n\n    assert(candidate(\"Hello world\") == 0L);\n   \
    \ assert(candidate(\"Is the sky blue?\") == 0L);\n    assert(candidate(\"I love\
    \ It !\") == 1L);\n    assert(candidate(\"bIt\") == 0L);\n    assert(candidate(\"\
    I feel good today. I will be productive. will kill It\") == 2L);\n    assert(candidate(\"\
    You and I are going for a walk\") == 0L);\n}\nvoid main(){}"
  status: SyntaxError
  stderr: '/tmp/tmprvolhnpj.d(18): Error: undefined identifier `split`

    /tmp/tmprvolhnpj.d(23): Error: undefined identifier `split`

    Failed: ["dmd", "-unittest", "-v", "-o-", "/tmp/tmprvolhnpj.d", "-I/tmp"]

    '
  stdout: ''
  timestamp: 1660163028
- exit_code: 1
  program: "import std.math;\n/*\n\n    You'll be given a string of words, and your\
    \ task is to count the number\n    of boredoms. A boredom is a sentence that starts\
    \ with the word \"I\".\n    Sentences are delimited by '.', '?' or '!'.\n   \n\
    \    For example:\n    >>> is_bored(\"Hello world\")\n    0L\n    >>> is_bored(\"\
    The sky is blue. The sun is shining. I love this weather\")\n    1L\n    \n*/\n\
    long is_bored(string S) \n{\n    long boredoms = 0;\n    auto sentences = split(S,\
    \ \".!?\");\n    foreach(sentence; sentences)\n    {\n        if(sentence.length\
    \ > 0 && sentence[0..1] == \"I \")\n            boredoms++;\n    }\n    return\
    \ boredoms;\n}\nunittest\n{\n    alias candidate = is_bored;\n\n    assert(candidate(\"\
    Hello world\") == 0L);\n    assert(candidate(\"Is the sky blue?\") == 0L);\n \
    \   assert(candidate(\"I love It !\") == 1L);\n    assert(candidate(\"bIt\") ==\
    \ 0L);\n    assert(candidate(\"I feel good today. I will be productive. will kill\
    \ It\") == 2L);\n    assert(candidate(\"You and I are going for a walk\") == 0L);\n\
    }\nvoid main(){}"
  status: SyntaxError
  stderr: '/tmp/tmptzbcdras.d(18): Error: undefined identifier `split`

    Failed: ["dmd", "-unittest", "-v", "-o-", "/tmp/tmptzbcdras.d", "-I/tmp"]

    '
  stdout: ''
  timestamp: 1660163028
- exit_code: 1
  program: "import std.math;\n/*\n\n    You'll be given a string of words, and your\
    \ task is to count the number\n    of boredoms. A boredom is a sentence that starts\
    \ with the word \"I\".\n    Sentences are delimited by '.', '?' or '!'.\n   \n\
    \    For example:\n    >>> is_bored(\"Hello world\")\n    0L\n    >>> is_bored(\"\
    The sky is blue. The sun is shining. I love this weather\")\n    1L\n    \n*/\n\
    long is_bored(string S) \n{\n    long boredoms = 0;\n    string[] sentences =\
    \ split(S, \".\");\n    foreach(sentence; sentences)\n    {\n        string[]\
    \ words = split(sentence, \" \");\n        if(words[0] == \"I\")\n           \
    \ boredoms++;\n    }\n    return boredoms;\n}\nunittest\n{\n    alias candidate\
    \ = is_bored;\n\n    assert(candidate(\"Hello world\") == 0L);\n    assert(candidate(\"\
    Is the sky blue?\") == 0L);\n    assert(candidate(\"I love It !\") == 1L);\n \
    \   assert(candidate(\"bIt\") == 0L);\n    assert(candidate(\"I feel good today.\
    \ I will be productive. will kill It\") == 2L);\n    assert(candidate(\"You and\
    \ I are going for a walk\") == 0L);\n}\nvoid main(){}"
  status: SyntaxError
  stderr: '/tmp/tmpx3am4b_0.d(18): Error: undefined identifier `split`

    /tmp/tmpx3am4b_0.d(21): Error: undefined identifier `split`

    Failed: ["dmd", "-unittest", "-v", "-o-", "/tmp/tmpx3am4b_0.d", "-I/tmp"]

    '
  stdout: ''
  timestamp: 1660163028
- exit_code: 1
  program: "import std.math;\n/*\n\n    You'll be given a string of words, and your\
    \ task is to count the number\n    of boredoms. A boredom is a sentence that starts\
    \ with the word \"I\".\n    Sentences are delimited by '.', '?' or '!'.\n   \n\
    \    For example:\n    >>> is_bored(\"Hello world\")\n    0L\n    >>> is_bored(\"\
    The sky is blue. The sun is shining. I love this weather\")\n    1L\n    \n*/\n\
    long is_bored(string S) \n{\n    long boredoms = 0;\n    string[] words = split(S,\
    \ \" \");\n    foreach(string word; words)\n    {\n        if(word == \"I\")\n\
    \            boredoms++;\n    }\n    return boredoms;\n}\nunittest\n{\n    alias\
    \ candidate = is_bored;\n\n    assert(candidate(\"Hello world\") == 0L);\n   \
    \ assert(candidate(\"Is the sky blue?\") == 0L);\n    assert(candidate(\"I love\
    \ It !\") == 1L);\n    assert(candidate(\"bIt\") == 0L);\n    assert(candidate(\"\
    I feel good today. I will be productive. will kill It\") == 2L);\n    assert(candidate(\"\
    You and I are going for a walk\") == 0L);\n}\nvoid main(){}"
  status: SyntaxError
  stderr: '/tmp/tmpjg9deqpy.d(18): Error: undefined identifier `split`

    Failed: ["dmd", "-unittest", "-v", "-o-", "/tmp/tmpjg9deqpy.d", "-I/tmp"]

    '
  stdout: ''
  timestamp: 1660163028
- exit_code: 1
  program: "import std.math;\n/*\n\n    You'll be given a string of words, and your\
    \ task is to count the number\n    of boredoms. A boredom is a sentence that starts\
    \ with the word \"I\".\n    Sentences are delimited by '.', '?' or '!'.\n   \n\
    \    For example:\n    >>> is_bored(\"Hello world\")\n    0L\n    >>> is_bored(\"\
    The sky is blue. The sun is shining. I love this weather\")\n    1L\n    \n*/\n\
    long is_bored(string S) \n{\n    long boredoms = 0;\n    string[] sentences =\
    \ split(S, \".\");\n    foreach(string sentence; sentences)\n    {\n        string[]\
    \ words = split(sentence, \" \");\n        if(words[0] == \"I\")\n           \
    \ boredoms++;\n    }\n    return boredoms;\n}\nunittest\n{\n    alias candidate\
    \ = is_bored;\n\n    assert(candidate(\"Hello world\") == 0L);\n    assert(candidate(\"\
    Is the sky blue?\") == 0L);\n    assert(candidate(\"I love It !\") == 1L);\n \
    \   assert(candidate(\"bIt\") == 0L);\n    assert(candidate(\"I feel good today.\
    \ I will be productive. will kill It\") == 2L);\n    assert(candidate(\"You and\
    \ I are going for a walk\") == 0L);\n}\nvoid main(){}"
  status: SyntaxError
  stderr: '/tmp/tmp1upyxolo.d(18): Error: undefined identifier `split`

    /tmp/tmp1upyxolo.d(21): Error: undefined identifier `split`

    Failed: ["dmd", "-unittest", "-v", "-o-", "/tmp/tmp1upyxolo.d", "-I/tmp"]

    '
  stdout: ''
  timestamp: 1660163028
- exit_code: 1
  program: "import std.math;\n/*\n\n    You'll be given a string of words, and your\
    \ task is to count the number\n    of boredoms. A boredom is a sentence that starts\
    \ with the word \"I\".\n    Sentences are delimited by '.', '?' or '!'.\n   \n\
    \    For example:\n    >>> is_bored(\"Hello world\")\n    0L\n    >>> is_bored(\"\
    The sky is blue. The sun is shining. I love this weather\")\n    1L\n    \n*/\n\
    long is_bored(string S) \n{\n    long count = 0;\n    string[] sentences = split(S,\
    \ \".\");\n    foreach(string sentence; sentences)\n    {\n        if(sentence.length\
    \ > 0)\n        {\n            string[] words = split(sentence, \" \");\n    \
    \        if(words[0] == \"I\")\n            {\n                count++;\n    \
    \        }\n        }\n    }\n    return count;\n}\nunittest\n{\n    alias candidate\
    \ = is_bored;\n\n    assert(candidate(\"Hello world\") == 0L);\n    assert(candidate(\"\
    Is the sky blue?\") == 0L);\n    assert(candidate(\"I love It !\") == 1L);\n \
    \   assert(candidate(\"bIt\") == 0L);\n    assert(candidate(\"I feel good today.\
    \ I will be productive. will kill It\") == 2L);\n    assert(candidate(\"You and\
    \ I are going for a walk\") == 0L);\n}\nvoid main(){}"
  status: SyntaxError
  stderr: '/tmp/tmp03651ldh.d(18): Error: undefined identifier `split`

    /tmp/tmp03651ldh.d(23): Error: undefined identifier `split`

    Failed: ["dmd", "-unittest", "-v", "-o-", "/tmp/tmp03651ldh.d", "-I/tmp"]

    '
  stdout: ''
  timestamp: 1660163028
- exit_code: 1
  program: "import std.math;\n/*\n\n    You'll be given a string of words, and your\
    \ task is to count the number\n    of boredoms. A boredom is a sentence that starts\
    \ with the word \"I\".\n    Sentences are delimited by '.', '?' or '!'.\n   \n\
    \    For example:\n    >>> is_bored(\"Hello world\")\n    0L\n    >>> is_bored(\"\
    The sky is blue. The sun is shining. I love this weather\")\n    1L\n    \n*/\n\
    long is_bored(string S) \n{\n    long boredoms = 0;\n    string[] sentences =\
    \ split(S, \".\");\n    foreach(string sentence; sentences)\n    {\n        if(sentence.length\
    \ > 0)\n        {\n            string[] words = split(sentence, \" \");\n    \
    \        if(words[0] == \"I\")\n            {\n                boredoms++;\n \
    \           }\n        }\n    }\n    return boredoms;\n}\nunittest\n{\n    alias\
    \ candidate = is_bored;\n\n    assert(candidate(\"Hello world\") == 0L);\n   \
    \ assert(candidate(\"Is the sky blue?\") == 0L);\n    assert(candidate(\"I love\
    \ It !\") == 1L);\n    assert(candidate(\"bIt\") == 0L);\n    assert(candidate(\"\
    I feel good today. I will be productive. will kill It\") == 2L);\n    assert(candidate(\"\
    You and I are going for a walk\") == 0L);\n}\nvoid main(){}"
  status: SyntaxError
  stderr: '/tmp/tmprvolhnpj.d(18): Error: undefined identifier `split`

    /tmp/tmprvolhnpj.d(23): Error: undefined identifier `split`

    Failed: ["dmd", "-unittest", "-v", "-o-", "/tmp/tmprvolhnpj.d", "-I/tmp"]

    '
  stdout: ''
  timestamp: 1660163028
- exit_code: 1
  program: "import std.math;\n/*\n\n    You'll be given a string of words, and your\
    \ task is to count the number\n    of boredoms. A boredom is a sentence that starts\
    \ with the word \"I\".\n    Sentences are delimited by '.', '?' or '!'.\n   \n\
    \    For example:\n    >>> is_bored(\"Hello world\")\n    0L\n    >>> is_bored(\"\
    The sky is blue. The sun is shining. I love this weather\")\n    1L\n    \n*/\n\
    long is_bored(string S) \n{\n    long boredoms = 0;\n    string[] sentences =\
    \ split(S, \".\");\n    foreach(string sentence; sentences)\n    {\n        string[]\
    \ words = split(sentence, \" \");\n        if(words[0] == \"I\")\n           \
    \ boredoms++;\n    }\n    return boredoms;\n}\nunittest\n{\n    alias candidate\
    \ = is_bored;\n\n    assert(candidate(\"Hello world\") == 0L);\n    assert(candidate(\"\
    Is the sky blue?\") == 0L);\n    assert(candidate(\"I love It !\") == 1L);\n \
    \   assert(candidate(\"bIt\") == 0L);\n    assert(candidate(\"I feel good today.\
    \ I will be productive. will kill It\") == 2L);\n    assert(candidate(\"You and\
    \ I are going for a walk\") == 0L);\n}\nvoid main(){}"
  status: SyntaxError
  stderr: '/tmp/tmp1upyxolo.d(18): Error: undefined identifier `split`

    /tmp/tmp1upyxolo.d(21): Error: undefined identifier `split`

    Failed: ["dmd", "-unittest", "-v", "-o-", "/tmp/tmp1upyxolo.d", "-I/tmp"]

    '
  stdout: ''
  timestamp: 1660163028
- exit_code: 1
  program: "import std.math;\n/*\n\n    You'll be given a string of words, and your\
    \ task is to count the number\n    of boredoms. A boredom is a sentence that starts\
    \ with the word \"I\".\n    Sentences are delimited by '.', '?' or '!'.\n   \n\
    \    For example:\n    >>> is_bored(\"Hello world\")\n    0L\n    >>> is_bored(\"\
    The sky is blue. The sun is shining. I love this weather\")\n    1L\n    \n*/\n\
    long is_bored(string S) \n{\n    long boredoms = 0;\n    string[] sentences =\
    \ split(S, \".\");\n    foreach(string sentence; sentences)\n    {\n        if(sentence.length\
    \ > 0)\n        {\n            string[] words = split(sentence, \" \");\n    \
    \        if(words[0] == \"I\")\n            {\n                boredoms++;\n \
    \           }\n        }\n    }\n    return boredoms;\n}\nunittest\n{\n    alias\
    \ candidate = is_bored;\n\n    assert(candidate(\"Hello world\") == 0L);\n   \
    \ assert(candidate(\"Is the sky blue?\") == 0L);\n    assert(candidate(\"I love\
    \ It !\") == 1L);\n    assert(candidate(\"bIt\") == 0L);\n    assert(candidate(\"\
    I feel good today. I will be productive. will kill It\") == 2L);\n    assert(candidate(\"\
    You and I are going for a walk\") == 0L);\n}\nvoid main(){}"
  status: SyntaxError
  stderr: '/tmp/tmprvolhnpj.d(18): Error: undefined identifier `split`

    /tmp/tmprvolhnpj.d(23): Error: undefined identifier `split`

    Failed: ["dmd", "-unittest", "-v", "-o-", "/tmp/tmprvolhnpj.d", "-I/tmp"]

    '
  stdout: ''
  timestamp: 1660163028
- exit_code: 1
  program: "import std.math;\n/*\n\n    You'll be given a string of words, and your\
    \ task is to count the number\n    of boredoms. A boredom is a sentence that starts\
    \ with the word \"I\".\n    Sentences are delimited by '.', '?' or '!'.\n   \n\
    \    For example:\n    >>> is_bored(\"Hello world\")\n    0L\n    >>> is_bored(\"\
    The sky is blue. The sun is shining. I love this weather\")\n    1L\n    \n*/\n\
    long is_bored(string S) \n{\n    long boredoms = 0;\n    string[] sentences =\
    \ split(S, \".\");\n    foreach(sentence; sentences)\n    {\n        string[]\
    \ words = split(sentence, \" \");\n        if(words[0] == \"I\")\n           \
    \ boredoms++;\n    }\n    return boredoms;\n}\nunittest\n{\n    alias candidate\
    \ = is_bored;\n\n    assert(candidate(\"Hello world\") == 0L);\n    assert(candidate(\"\
    Is the sky blue?\") == 0L);\n    assert(candidate(\"I love It !\") == 1L);\n \
    \   assert(candidate(\"bIt\") == 0L);\n    assert(candidate(\"I feel good today.\
    \ I will be productive. will kill It\") == 2L);\n    assert(candidate(\"You and\
    \ I are going for a walk\") == 0L);\n}\nvoid main(){}"
  status: SyntaxError
  stderr: '/tmp/tmpx3am4b_0.d(18): Error: undefined identifier `split`

    /tmp/tmpx3am4b_0.d(21): Error: undefined identifier `split`

    Failed: ["dmd", "-unittest", "-v", "-o-", "/tmp/tmpx3am4b_0.d", "-I/tmp"]

    '
  stdout: ''
  timestamp: 1660163028
- exit_code: 1
  program: "import std.math;\n/*\n\n    You'll be given a string of words, and your\
    \ task is to count the number\n    of boredoms. A boredom is a sentence that starts\
    \ with the word \"I\".\n    Sentences are delimited by '.', '?' or '!'.\n   \n\
    \    For example:\n    >>> is_bored(\"Hello world\")\n    0L\n    >>> is_bored(\"\
    The sky is blue. The sun is shining. I love this weather\")\n    1L\n    \n*/\n\
    long is_bored(string S) \n{\n    long boredoms = 0;\n    string[] sentences =\
    \ split(S, \".\");\n    foreach(string sentence; sentences)\n    {\n        string[]\
    \ words = split(sentence, \" \");\n        if(words[0] == \"I\")\n           \
    \ boredoms++;\n    }\n    return boredoms;\n}\nunittest\n{\n    alias candidate\
    \ = is_bored;\n\n    assert(candidate(\"Hello world\") == 0L);\n    assert(candidate(\"\
    Is the sky blue?\") == 0L);\n    assert(candidate(\"I love It !\") == 1L);\n \
    \   assert(candidate(\"bIt\") == 0L);\n    assert(candidate(\"I feel good today.\
    \ I will be productive. will kill It\") == 2L);\n    assert(candidate(\"You and\
    \ I are going for a walk\") == 0L);\n}\nvoid main(){}"
  status: SyntaxError
  stderr: '/tmp/tmp1upyxolo.d(18): Error: undefined identifier `split`

    /tmp/tmp1upyxolo.d(21): Error: undefined identifier `split`

    Failed: ["dmd", "-unittest", "-v", "-o-", "/tmp/tmp1upyxolo.d", "-I/tmp"]

    '
  stdout: ''
  timestamp: 1660163028
- exit_code: 1
  program: "import std.math;\n/*\n\n    You'll be given a string of words, and your\
    \ task is to count the number\n    of boredoms. A boredom is a sentence that starts\
    \ with the word \"I\".\n    Sentences are delimited by '.', '?' or '!'.\n   \n\
    \    For example:\n    >>> is_bored(\"Hello world\")\n    0L\n    >>> is_bored(\"\
    The sky is blue. The sun is shining. I love this weather\")\n    1L\n    \n*/\n\
    long is_bored(string S) \n{\n    long boredoms = 0;\n    string[] sentences =\
    \ split(S, \".\");\n    foreach(sentence; sentences)\n    {\n        string[]\
    \ words = split(sentence, \" \");\n        if(words[0] == \"I\")\n           \
    \ boredoms++;\n    }\n    return boredoms;\n}\nunittest\n{\n    alias candidate\
    \ = is_bored;\n\n    assert(candidate(\"Hello world\") == 0L);\n    assert(candidate(\"\
    Is the sky blue?\") == 0L);\n    assert(candidate(\"I love It !\") == 1L);\n \
    \   assert(candidate(\"bIt\") == 0L);\n    assert(candidate(\"I feel good today.\
    \ I will be productive. will kill It\") == 2L);\n    assert(candidate(\"You and\
    \ I are going for a walk\") == 0L);\n}\nvoid main(){}"
  status: SyntaxError
  stderr: '/tmp/tmpx3am4b_0.d(18): Error: undefined identifier `split`

    /tmp/tmpx3am4b_0.d(21): Error: undefined identifier `split`

    Failed: ["dmd", "-unittest", "-v", "-o-", "/tmp/tmpx3am4b_0.d", "-I/tmp"]

    '
  stdout: ''
  timestamp: 1660163028
- exit_code: 1
  program: "import std.math;\n/*\n\n    You'll be given a string of words, and your\
    \ task is to count the number\n    of boredoms. A boredom is a sentence that starts\
    \ with the word \"I\".\n    Sentences are delimited by '.', '?' or '!'.\n   \n\
    \    For example:\n    >>> is_bored(\"Hello world\")\n    0L\n    >>> is_bored(\"\
    The sky is blue. The sun is shining. I love this weather\")\n    1L\n    \n*/\n\
    long is_bored(string S) \n{\n    long boredoms = 0;\n    string[] sentences =\
    \ split(S, \".\");\n    foreach(string sentence; sentences)\n    {\n        string[]\
    \ words = split(sentence, \" \");\n        if(words[0] == \"I\")\n           \
    \ boredoms++;\n    }\n    return boredoms;\n}\nunittest\n{\n    alias candidate\
    \ = is_bored;\n\n    assert(candidate(\"Hello world\") == 0L);\n    assert(candidate(\"\
    Is the sky blue?\") == 0L);\n    assert(candidate(\"I love It !\") == 1L);\n \
    \   assert(candidate(\"bIt\") == 0L);\n    assert(candidate(\"I feel good today.\
    \ I will be productive. will kill It\") == 2L);\n    assert(candidate(\"You and\
    \ I are going for a walk\") == 0L);\n}\nvoid main(){}"
  status: SyntaxError
  stderr: '/tmp/tmp1upyxolo.d(18): Error: undefined identifier `split`

    /tmp/tmp1upyxolo.d(21): Error: undefined identifier `split`

    Failed: ["dmd", "-unittest", "-v", "-o-", "/tmp/tmp1upyxolo.d", "-I/tmp"]

    '
  stdout: ''
  timestamp: 1660163028
- exit_code: 1
  program: "import std.math;\n/*\n\n    You'll be given a string of words, and your\
    \ task is to count the number\n    of boredoms. A boredom is a sentence that starts\
    \ with the word \"I\".\n    Sentences are delimited by '.', '?' or '!'.\n   \n\
    \    For example:\n    >>> is_bored(\"Hello world\")\n    0L\n    >>> is_bored(\"\
    The sky is blue. The sun is shining. I love this weather\")\n    1L\n    \n*/\n\
    long is_bored(string S) \n{\n    long boredoms = 0;\n    long i = 0;\n    long\
    \ j = 0;\n    long k = 0;\n    long l = 0;\n    long m = 0;\n    long n = 0;\n\
    \    long o = 0;\n    long p = 0;\n    long q = 0;\n    long r = 0;\n    long\
    \ s = 0;\n    long t = 0;\n    long u = 0;\n    long v = 0;\n    long w = 0;\n\
    \    long x = 0;\n    long y = 0;\n    long z = 0;\n    long a = 0;\n    long\
    \ b = 0;\n    long c = 0;\n    long d = 0;\n    long e = 0;\n    long f = 0;\n\
    \    long g = 0;\n    long h = 0;\n    long ii = 0;\n    long jj = 0;\n    long\
    \ kk = 0;\n    long ll = 0;\n    long mm = 0;\n    long nn = 0;\n    long oo =\
    \ 0;\n    long pp = 0;\n    long qq = 0;\n    long rr = 0;\n    long ss = 0;\n\
    \    long tt = 0;\n    long uu = 0;\n    long vv = 0;\n    long ww = 0;\n    long\
    \ xx = 0;\n    long yy = 0;\n    long zz = 0;\n    long aa = 0;\n    long bb =\
    \ 0;\n    long cc = 0;\n    long dd = 0;\n    long ee = 0;\n    long ff = 0;\n\
    \    long gg = 0;\n    long hh = 0;\n    long iii = 0;\n    long jjj = 0;\n  \
    \  long kkk = 0;\n    long lll = 0;\n    long mmm = 0;\n    long nnn = 0;\n  \
    \  long ooo = 0;\n    long ppp = 0;\n    long qqq = 0;\n    long rrr = 0;\n  \
    \  long sss = 0;\n    long ttt = 0;\n    long uuu = 0;\n    long vvv = 0;\n  \
    \  long www = 0;\n    long\nunittest\n{\n    alias candidate = is_bored;\n\n \
    \   assert(candidate(\"Hello world\") == 0L);\n    assert(candidate(\"Is the sky\
    \ blue?\") == 0L);\n    assert(candidate(\"I love It !\") == 1L);\n    assert(candidate(\"\
    bIt\") == 0L);\n    assert(candidate(\"I feel good today. I will be productive.\
    \ will kill It\") == 2L);\n    assert(candidate(\"You and I are going for a walk\"\
    ) == 0L);\n}\nvoid main(){}"
  status: SyntaxError
  stderr: '/tmp/tmpj0g9yftq.d(86): Error: no identifier for declarator `long`

    /tmp/tmpj0g9yftq.d(86): Error: found `unittest` instead of statement

    Failed: ["dmd", "-unittest", "-v", "-o-", "/tmp/tmpj0g9yftq.d", "-I/tmp"]

    '
  stdout: ''
  timestamp: 1660163028
- exit_code: 1
  program: "import std.math;\n/*\n\n    You'll be given a string of words, and your\
    \ task is to count the number\n    of boredoms. A boredom is a sentence that starts\
    \ with the word \"I\".\n    Sentences are delimited by '.', '?' or '!'.\n   \n\
    \    For example:\n    >>> is_bored(\"Hello world\")\n    0L\n    >>> is_bored(\"\
    The sky is blue. The sun is shining. I love this weather\")\n    1L\n    \n*/\n\
    long is_bored(string S) \n{\n    long boredoms = 0;\n    string[] sentences =\
    \ split(S, \".\");\n    foreach(string sentence; sentences)\n    {\n        string[]\
    \ words = split(sentence, \" \");\n        if(words[0] == \"I\")\n           \
    \ boredoms++;\n    }\n    return boredoms;\n}\nunittest\n{\n    alias candidate\
    \ = is_bored;\n\n    assert(candidate(\"Hello world\") == 0L);\n    assert(candidate(\"\
    Is the sky blue?\") == 0L);\n    assert(candidate(\"I love It !\") == 1L);\n \
    \   assert(candidate(\"bIt\") == 0L);\n    assert(candidate(\"I feel good today.\
    \ I will be productive. will kill It\") == 2L);\n    assert(candidate(\"You and\
    \ I are going for a walk\") == 0L);\n}\nvoid main(){}"
  status: SyntaxError
  stderr: '/tmp/tmp1upyxolo.d(18): Error: undefined identifier `split`

    /tmp/tmp1upyxolo.d(21): Error: undefined identifier `split`

    Failed: ["dmd", "-unittest", "-v", "-o-", "/tmp/tmp1upyxolo.d", "-I/tmp"]

    '
  stdout: ''
  timestamp: 1660163028
- exit_code: 1
  program: "import std.math;\n/*\n\n    You'll be given a string of words, and your\
    \ task is to count the number\n    of boredoms. A boredom is a sentence that starts\
    \ with the word \"I\".\n    Sentences are delimited by '.', '?' or '!'.\n   \n\
    \    For example:\n    >>> is_bored(\"Hello world\")\n    0L\n    >>> is_bored(\"\
    The sky is blue. The sun is shining. I love this weather\")\n    1L\n    \n*/\n\
    long is_bored(string S) \n{\n    long count = 0;\n    string[] sentences = split(S,\
    \ \".\");\n    foreach(string sentence; sentences)\n    {\n        string[] words\
    \ = split(sentence, \" \");\n        if(words[0] == \"I\")\n            count++;\n\
    \    }\n    return count;\n}\nunittest\n{\n    alias candidate = is_bored;\n\n\
    \    assert(candidate(\"Hello world\") == 0L);\n    assert(candidate(\"Is the\
    \ sky blue?\") == 0L);\n    assert(candidate(\"I love It !\") == 1L);\n    assert(candidate(\"\
    bIt\") == 0L);\n    assert(candidate(\"I feel good today. I will be productive.\
    \ will kill It\") == 2L);\n    assert(candidate(\"You and I are going for a walk\"\
    ) == 0L);\n}\nvoid main(){}"
  status: SyntaxError
  stderr: '/tmp/tmpd7dz0lhc.d(18): Error: undefined identifier `split`

    /tmp/tmpd7dz0lhc.d(21): Error: undefined identifier `split`

    Failed: ["dmd", "-unittest", "-v", "-o-", "/tmp/tmpd7dz0lhc.d", "-I/tmp"]

    '
  stdout: ''
  timestamp: 1660163028
- exit_code: 1
  program: "import std.math;\n/*\n\n    You'll be given a string of words, and your\
    \ task is to count the number\n    of boredoms. A boredom is a sentence that starts\
    \ with the word \"I\".\n    Sentences are delimited by '.', '?' or '!'.\n   \n\
    \    For example:\n    >>> is_bored(\"Hello world\")\n    0L\n    >>> is_bored(\"\
    The sky is blue. The sun is shining. I love this weather\")\n    1L\n    \n*/\n\
    long is_bored(string S) \n{\n    long boredoms = 0;\n    auto words = split(S,\
    \ \" \");\n    foreach(word; words)\n    {\n        if(word == \"I\")\n      \
    \      boredoms++;\n    }\n    return boredoms;\n}\nunittest\n{\n    alias candidate\
    \ = is_bored;\n\n    assert(candidate(\"Hello world\") == 0L);\n    assert(candidate(\"\
    Is the sky blue?\") == 0L);\n    assert(candidate(\"I love It !\") == 1L);\n \
    \   assert(candidate(\"bIt\") == 0L);\n    assert(candidate(\"I feel good today.\
    \ I will be productive. will kill It\") == 2L);\n    assert(candidate(\"You and\
    \ I are going for a walk\") == 0L);\n}\nvoid main(){}"
  status: SyntaxError
  stderr: '/tmp/tmpm0jgnlho.d(18): Error: undefined identifier `split`

    Failed: ["dmd", "-unittest", "-v", "-o-", "/tmp/tmpm0jgnlho.d", "-I/tmp"]

    '
  stdout: ''
  timestamp: 1660163028
- exit_code: 1
  program: "import std.math;\n/*\n\n    You'll be given a string of words, and your\
    \ task is to count the number\n    of boredoms. A boredom is a sentence that starts\
    \ with the word \"I\".\n    Sentences are delimited by '.', '?' or '!'.\n   \n\
    \    For example:\n    >>> is_bored(\"Hello world\")\n    0L\n    >>> is_bored(\"\
    The sky is blue. The sun is shining. I love this weather\")\n    1L\n    \n*/\n\
    long is_bored(string S) \n{\n    long boredoms = 0;\n    string[] sentences =\
    \ split(S, \".\");\n    foreach(string sentence; sentences)\n    {\n        string[]\
    \ words = split(sentence, \" \");\n        if(words[0] == \"I\")\n           \
    \ boredoms++;\n    }\n    return boredoms;\n}\nunittest\n{\n    alias candidate\
    \ = is_bored;\n\n    assert(candidate(\"Hello world\") == 0L);\n    assert(candidate(\"\
    Is the sky blue?\") == 0L);\n    assert(candidate(\"I love It !\") == 1L);\n \
    \   assert(candidate(\"bIt\") == 0L);\n    assert(candidate(\"I feel good today.\
    \ I will be productive. will kill It\") == 2L);\n    assert(candidate(\"You and\
    \ I are going for a walk\") == 0L);\n}\nvoid main(){}"
  status: SyntaxError
  stderr: '/tmp/tmp1upyxolo.d(18): Error: undefined identifier `split`

    /tmp/tmp1upyxolo.d(21): Error: undefined identifier `split`

    Failed: ["dmd", "-unittest", "-v", "-o-", "/tmp/tmp1upyxolo.d", "-I/tmp"]

    '
  stdout: ''
  timestamp: 1660163028
- exit_code: 1
  program: "import std.math;\n/*\n\n    You'll be given a string of words, and your\
    \ task is to count the number\n    of boredoms. A boredom is a sentence that starts\
    \ with the word \"I\".\n    Sentences are delimited by '.', '?' or '!'.\n   \n\
    \    For example:\n    >>> is_bored(\"Hello world\")\n    0L\n    >>> is_bored(\"\
    The sky is blue. The sun is shining. I love this weather\")\n    1L\n    \n*/\n\
    long is_bored(string S) \n{\n    long boredoms = 0;\n    string[] sentences =\
    \ split(S, \".\");\n    foreach(sentence; sentences)\n    {\n        string[]\
    \ words = split(sentence, \" \");\n        if(words[0] == \"I\")\n           \
    \ boredoms++;\n    }\n    return boredoms;\n}\nunittest\n{\n    alias candidate\
    \ = is_bored;\n\n    assert(candidate(\"Hello world\") == 0L);\n    assert(candidate(\"\
    Is the sky blue?\") == 0L);\n    assert(candidate(\"I love It !\") == 1L);\n \
    \   assert(candidate(\"bIt\") == 0L);\n    assert(candidate(\"I feel good today.\
    \ I will be productive. will kill It\") == 2L);\n    assert(candidate(\"You and\
    \ I are going for a walk\") == 0L);\n}\nvoid main(){}"
  status: SyntaxError
  stderr: '/tmp/tmpx3am4b_0.d(18): Error: undefined identifier `split`

    /tmp/tmpx3am4b_0.d(21): Error: undefined identifier `split`

    Failed: ["dmd", "-unittest", "-v", "-o-", "/tmp/tmpx3am4b_0.d", "-I/tmp"]

    '
  stdout: ''
  timestamp: 1660163028
- exit_code: 1
  program: "import std.math;\n/*\n\n    You'll be given a string of words, and your\
    \ task is to count the number\n    of boredoms. A boredom is a sentence that starts\
    \ with the word \"I\".\n    Sentences are delimited by '.', '?' or '!'.\n   \n\
    \    For example:\n    >>> is_bored(\"Hello world\")\n    0L\n    >>> is_bored(\"\
    The sky is blue. The sun is shining. I love this weather\")\n    1L\n    \n*/\n\
    long is_bored(string S) \n{\n    long boredoms = 0;\n    string[] sentences =\
    \ split(S, \".\");\n    foreach(string sentence; sentences)\n    {\n        if(sentence.length\
    \ > 0)\n        {\n            string[] words = split(sentence, \" \");\n    \
    \        if(words[0] == \"I\")\n            {\n                boredoms++;\n \
    \           }\n        }\n    }\n    return boredoms;\n}\nunittest\n{\n    alias\
    \ candidate = is_bored;\n\n    assert(candidate(\"Hello world\") == 0L);\n   \
    \ assert(candidate(\"Is the sky blue?\") == 0L);\n    assert(candidate(\"I love\
    \ It !\") == 1L);\n    assert(candidate(\"bIt\") == 0L);\n    assert(candidate(\"\
    I feel good today. I will be productive. will kill It\") == 2L);\n    assert(candidate(\"\
    You and I are going for a walk\") == 0L);\n}\nvoid main(){}"
  status: SyntaxError
  stderr: '/tmp/tmprvolhnpj.d(18): Error: undefined identifier `split`

    /tmp/tmprvolhnpj.d(23): Error: undefined identifier `split`

    Failed: ["dmd", "-unittest", "-v", "-o-", "/tmp/tmprvolhnpj.d", "-I/tmp"]

    '
  stdout: ''
  timestamp: 1660163028
- exit_code: 1
  program: "import std.math;\n/*\n\n    You'll be given a string of words, and your\
    \ task is to count the number\n    of boredoms. A boredom is a sentence that starts\
    \ with the word \"I\".\n    Sentences are delimited by '.', '?' or '!'.\n   \n\
    \    For example:\n    >>> is_bored(\"Hello world\")\n    0L\n    >>> is_bored(\"\
    The sky is blue. The sun is shining. I love this weather\")\n    1L\n    \n*/\n\
    long is_bored(string S) \n{\n    long boredoms = 0;\n    string[] sentences =\
    \ split(S, \".\");\n    foreach(string sentence; sentences)\n    {\n        if(sentence.length\
    \ > 0)\n        {\n            string[] words = split(sentence, \" \");\n    \
    \        if(words[0] == \"I\")\n            {\n                boredoms++;\n \
    \           }\n        }\n    }\n    return boredoms;\n}\nunittest\n{\n    alias\
    \ candidate = is_bored;\n\n    assert(candidate(\"Hello world\") == 0L);\n   \
    \ assert(candidate(\"Is the sky blue?\") == 0L);\n    assert(candidate(\"I love\
    \ It !\") == 1L);\n    assert(candidate(\"bIt\") == 0L);\n    assert(candidate(\"\
    I feel good today. I will be productive. will kill It\") == 2L);\n    assert(candidate(\"\
    You and I are going for a walk\") == 0L);\n}\nvoid main(){}"
  status: SyntaxError
  stderr: '/tmp/tmprvolhnpj.d(18): Error: undefined identifier `split`

    /tmp/tmprvolhnpj.d(23): Error: undefined identifier `split`

    Failed: ["dmd", "-unittest", "-v", "-o-", "/tmp/tmprvolhnpj.d", "-I/tmp"]

    '
  stdout: ''
  timestamp: 1660163028
- exit_code: 1
  program: "import std.math;\n/*\n\n    You'll be given a string of words, and your\
    \ task is to count the number\n    of boredoms. A boredom is a sentence that starts\
    \ with the word \"I\".\n    Sentences are delimited by '.', '?' or '!'.\n   \n\
    \    For example:\n    >>> is_bored(\"Hello world\")\n    0L\n    >>> is_bored(\"\
    The sky is blue. The sun is shining. I love this weather\")\n    1L\n    \n*/\n\
    long is_bored(string S) \n{\n    long boredoms = 0;\n    string[] sentences =\
    \ split(S, \".\");\n    foreach(string sentence; sentences)\n    {\n        if(sentence.length\
    \ > 0)\n        {\n            string[] words = split(sentence, \" \");\n    \
    \        if(words[0] == \"I\")\n            {\n                boredoms++;\n \
    \           }\n        }\n    }\n    return boredoms;\n}\nunittest\n{\n    alias\
    \ candidate = is_bored;\n\n    assert(candidate(\"Hello world\") == 0L);\n   \
    \ assert(candidate(\"Is the sky blue?\") == 0L);\n    assert(candidate(\"I love\
    \ It !\") == 1L);\n    assert(candidate(\"bIt\") == 0L);\n    assert(candidate(\"\
    I feel good today. I will be productive. will kill It\") == 2L);\n    assert(candidate(\"\
    You and I are going for a walk\") == 0L);\n}\nvoid main(){}"
  status: SyntaxError
  stderr: '/tmp/tmprvolhnpj.d(18): Error: undefined identifier `split`

    /tmp/tmprvolhnpj.d(23): Error: undefined identifier `split`

    Failed: ["dmd", "-unittest", "-v", "-o-", "/tmp/tmprvolhnpj.d", "-I/tmp"]

    '
  stdout: ''
  timestamp: 1660163028
- exit_code: 1
  program: "import std.math;\n/*\n\n    You'll be given a string of words, and your\
    \ task is to count the number\n    of boredoms. A boredom is a sentence that starts\
    \ with the word \"I\".\n    Sentences are delimited by '.', '?' or '!'.\n   \n\
    \    For example:\n    >>> is_bored(\"Hello world\")\n    0L\n    >>> is_bored(\"\
    The sky is blue. The sun is shining. I love this weather\")\n    1L\n    \n*/\n\
    long is_bored(string S) \n{\n    long count = 0;\n    foreach(word; split(S, \"\
    \ \"))\n    {\n        if(word == \"I\")\n        {\n            count++;\n  \
    \      }\n    }\n    return count;\n}\nunittest\n{\n    alias candidate = is_bored;\n\
    \n    assert(candidate(\"Hello world\") == 0L);\n    assert(candidate(\"Is the\
    \ sky blue?\") == 0L);\n    assert(candidate(\"I love It !\") == 1L);\n    assert(candidate(\"\
    bIt\") == 0L);\n    assert(candidate(\"I feel good today. I will be productive.\
    \ will kill It\") == 2L);\n    assert(candidate(\"You and I are going for a walk\"\
    ) == 0L);\n}\nvoid main(){}"
  status: SyntaxError
  stderr: '/tmp/tmpx6l6mivb.d(18): Error: undefined identifier `split`

    Failed: ["dmd", "-unittest", "-v", "-o-", "/tmp/tmpx6l6mivb.d", "-I/tmp"]

    '
  stdout: ''
  timestamp: 1660163028
- exit_code: 1
  program: "import std.math;\n/*\n\n    You'll be given a string of words, and your\
    \ task is to count the number\n    of boredoms. A boredom is a sentence that starts\
    \ with the word \"I\".\n    Sentences are delimited by '.', '?' or '!'.\n   \n\
    \    For example:\n    >>> is_bored(\"Hello world\")\n    0L\n    >>> is_bored(\"\
    The sky is blue. The sun is shining. I love this weather\")\n    1L\n    \n*/\n\
    long is_bored(string S) \n{\n    long boredoms = 0;\n    string[] sentences =\
    \ split(S, \".\");\n    foreach(string sentence; sentences)\n    {\n        if(sentence.length\
    \ > 0)\n        {\n            string[] words = split(sentence, \" \");\n    \
    \        if(words[0] == \"I\")\n            {\n                boredoms++;\n \
    \           }\n        }\n    }\n    return boredoms;\n}\nunittest\n{\n    alias\
    \ candidate = is_bored;\n\n    assert(candidate(\"Hello world\") == 0L);\n   \
    \ assert(candidate(\"Is the sky blue?\") == 0L);\n    assert(candidate(\"I love\
    \ It !\") == 1L);\n    assert(candidate(\"bIt\") == 0L);\n    assert(candidate(\"\
    I feel good today. I will be productive. will kill It\") == 2L);\n    assert(candidate(\"\
    You and I are going for a walk\") == 0L);\n}\nvoid main(){}"
  status: SyntaxError
  stderr: '/tmp/tmprvolhnpj.d(18): Error: undefined identifier `split`

    /tmp/tmprvolhnpj.d(23): Error: undefined identifier `split`

    Failed: ["dmd", "-unittest", "-v", "-o-", "/tmp/tmprvolhnpj.d", "-I/tmp"]

    '
  stdout: ''
  timestamp: 1660163028
- exit_code: 1
  program: "import std.math;\n/*\n\n    You'll be given a string of words, and your\
    \ task is to count the number\n    of boredoms. A boredom is a sentence that starts\
    \ with the word \"I\".\n    Sentences are delimited by '.', '?' or '!'.\n   \n\
    \    For example:\n    >>> is_bored(\"Hello world\")\n    0L\n    >>> is_bored(\"\
    The sky is blue. The sun is shining. I love this weather\")\n    1L\n    \n*/\n\
    long is_bored(string S) \n{\n    long boredoms = 0;\n    string[] sentences =\
    \ split(S, \".\");\n    foreach(sentence; sentences)\n    {\n        if(sentence.length\
    \ > 0)\n        {\n            string[] words = split(sentence, \" \");\n    \
    \        if(words[0] == \"I\")\n            {\n                boredoms++;\n \
    \           }\n        }\n    }\n    return boredoms;\n}\nunittest\n{\n    alias\
    \ candidate = is_bored;\n\n    assert(candidate(\"Hello world\") == 0L);\n   \
    \ assert(candidate(\"Is the sky blue?\") == 0L);\n    assert(candidate(\"I love\
    \ It !\") == 1L);\n    assert(candidate(\"bIt\") == 0L);\n    assert(candidate(\"\
    I feel good today. I will be productive. will kill It\") == 2L);\n    assert(candidate(\"\
    You and I are going for a walk\") == 0L);\n}\nvoid main(){}"
  status: SyntaxError
  stderr: '/tmp/tmpmhho1zga.d(18): Error: undefined identifier `split`

    /tmp/tmpmhho1zga.d(23): Error: undefined identifier `split`

    Failed: ["dmd", "-unittest", "-v", "-o-", "/tmp/tmpmhho1zga.d", "-I/tmp"]

    '
  stdout: ''
  timestamp: 1660163028
- exit_code: 1
  program: "import std.math;\n/*\n\n    You'll be given a string of words, and your\
    \ task is to count the number\n    of boredoms. A boredom is a sentence that starts\
    \ with the word \"I\".\n    Sentences are delimited by '.', '?' or '!'.\n   \n\
    \    For example:\n    >>> is_bored(\"Hello world\")\n    0L\n    >>> is_bored(\"\
    The sky is blue. The sun is shining. I love this weather\")\n    1L\n    \n*/\n\
    long is_bored(string S) \n{\n    auto words = split(S, \" .!?\");\n    long boredoms\
    \ = 0;\n    foreach(word; words)\n    {\n        if(word.length > 0 && word[0]\
    \ == 'I')\n            boredoms++;\n    }\n    return boredoms;\n}\nunittest\n\
    {\n    alias candidate = is_bored;\n\n    assert(candidate(\"Hello world\") ==\
    \ 0L);\n    assert(candidate(\"Is the sky blue?\") == 0L);\n    assert(candidate(\"\
    I love It !\") == 1L);\n    assert(candidate(\"bIt\") == 0L);\n    assert(candidate(\"\
    I feel good today. I will be productive. will kill It\") == 2L);\n    assert(candidate(\"\
    You and I are going for a walk\") == 0L);\n}\nvoid main(){}"
  status: SyntaxError
  stderr: '/tmp/tmp69w1fngu.d(17): Error: undefined identifier `split`

    Failed: ["dmd", "-unittest", "-v", "-o-", "/tmp/tmp69w1fngu.d", "-I/tmp"]

    '
  stdout: ''
  timestamp: 1660163028
- exit_code: 1
  program: "import std.math;\n/*\n\n    You'll be given a string of words, and your\
    \ task is to count the number\n    of boredoms. A boredom is a sentence that starts\
    \ with the word \"I\".\n    Sentences are delimited by '.', '?' or '!'.\n   \n\
    \    For example:\n    >>> is_bored(\"Hello world\")\n    0L\n    >>> is_bored(\"\
    The sky is blue. The sun is shining. I love this weather\")\n    1L\n    \n*/\n\
    long is_bored(string S) \n{\n    long boredoms = 0;\n    string[] sentences =\
    \ split(S, \".\");\n    foreach(string sentence; sentences)\n    {\n        string[]\
    \ words = split(sentence, \" \");\n        if(words[0] == \"I\")\n           \
    \ boredoms++;\n    }\n    return boredoms;\n}\nunittest\n{\n    alias candidate\
    \ = is_bored;\n\n    assert(candidate(\"Hello world\") == 0L);\n    assert(candidate(\"\
    Is the sky blue?\") == 0L);\n    assert(candidate(\"I love It !\") == 1L);\n \
    \   assert(candidate(\"bIt\") == 0L);\n    assert(candidate(\"I feel good today.\
    \ I will be productive. will kill It\") == 2L);\n    assert(candidate(\"You and\
    \ I are going for a walk\") == 0L);\n}\nvoid main(){}"
  status: SyntaxError
  stderr: '/tmp/tmp1upyxolo.d(18): Error: undefined identifier `split`

    /tmp/tmp1upyxolo.d(21): Error: undefined identifier `split`

    Failed: ["dmd", "-unittest", "-v", "-o-", "/tmp/tmp1upyxolo.d", "-I/tmp"]

    '
  stdout: ''
  timestamp: 1660163028
- exit_code: 1
  program: "import std.math;\n/*\n\n    You'll be given a string of words, and your\
    \ task is to count the number\n    of boredoms. A boredom is a sentence that starts\
    \ with the word \"I\".\n    Sentences are delimited by '.', '?' or '!'.\n   \n\
    \    For example:\n    >>> is_bored(\"Hello world\")\n    0L\n    >>> is_bored(\"\
    The sky is blue. The sun is shining. I love this weather\")\n    1L\n    \n*/\n\
    long is_bored(string S) \n{\n    long boredoms = 0;\n    string[] sentences =\
    \ split(S, \".\");\n    foreach(string sentence; sentences)\n    {\n        if(sentence.length\
    \ > 0)\n        {\n            string[] words = split(sentence, \" \");\n    \
    \        if(words[0] == \"I\")\n            {\n                boredoms++;\n \
    \           }\n        }\n    }\n    return boredoms;\n}\nunittest\n{\n    alias\
    \ candidate = is_bored;\n\n    assert(candidate(\"Hello world\") == 0L);\n   \
    \ assert(candidate(\"Is the sky blue?\") == 0L);\n    assert(candidate(\"I love\
    \ It !\") == 1L);\n    assert(candidate(\"bIt\") == 0L);\n    assert(candidate(\"\
    I feel good today. I will be productive. will kill It\") == 2L);\n    assert(candidate(\"\
    You and I are going for a walk\") == 0L);\n}\nvoid main(){}"
  status: SyntaxError
  stderr: '/tmp/tmprvolhnpj.d(18): Error: undefined identifier `split`

    /tmp/tmprvolhnpj.d(23): Error: undefined identifier `split`

    Failed: ["dmd", "-unittest", "-v", "-o-", "/tmp/tmprvolhnpj.d", "-I/tmp"]

    '
  stdout: ''
  timestamp: 1660163028
- exit_code: 1
  program: "import std.math;\n/*\n\n    You'll be given a string of words, and your\
    \ task is to count the number\n    of boredoms. A boredom is a sentence that starts\
    \ with the word \"I\".\n    Sentences are delimited by '.', '?' or '!'.\n   \n\
    \    For example:\n    >>> is_bored(\"Hello world\")\n    0L\n    >>> is_bored(\"\
    The sky is blue. The sun is shining. I love this weather\")\n    1L\n    \n*/\n\
    long is_bored(string S) \n{\n    long boredoms = 0;\n    string[] sentences =\
    \ split(S, \".\");\n    foreach(string sentence; sentences)\n    {\n        if(sentence.length\
    \ > 0)\n        {\n            string[] words = split(sentence, \" \");\n    \
    \        if(words[0] == \"I\")\n            {\n                boredoms++;\n \
    \           }\n        }\n    }\n    return boredoms;\n}\nunittest\n{\n    alias\
    \ candidate = is_bored;\n\n    assert(candidate(\"Hello world\") == 0L);\n   \
    \ assert(candidate(\"Is the sky blue?\") == 0L);\n    assert(candidate(\"I love\
    \ It !\") == 1L);\n    assert(candidate(\"bIt\") == 0L);\n    assert(candidate(\"\
    I feel good today. I will be productive. will kill It\") == 2L);\n    assert(candidate(\"\
    You and I are going for a walk\") == 0L);\n}\nvoid main(){}"
  status: SyntaxError
  stderr: '/tmp/tmprvolhnpj.d(18): Error: undefined identifier `split`

    /tmp/tmprvolhnpj.d(23): Error: undefined identifier `split`

    Failed: ["dmd", "-unittest", "-v", "-o-", "/tmp/tmprvolhnpj.d", "-I/tmp"]

    '
  stdout: ''
  timestamp: 1660163028
- exit_code: 1
  program: "import std.math;\n/*\n\n    You'll be given a string of words, and your\
    \ task is to count the number\n    of boredoms. A boredom is a sentence that starts\
    \ with the word \"I\".\n    Sentences are delimited by '.', '?' or '!'.\n   \n\
    \    For example:\n    >>> is_bored(\"Hello world\")\n    0L\n    >>> is_bored(\"\
    The sky is blue. The sun is shining. I love this weather\")\n    1L\n    \n*/\n\
    long is_bored(string S) \n{\n    long boredoms = 0;\n    string[] sentences =\
    \ split(S, \".\");\n    foreach(string sentence; sentences)\n    {\n        if(startsWith(sentence,\
    \ \"I\"))\n            boredoms++;\n    }\n    return boredoms;\n}\nunittest\n\
    {\n    alias candidate = is_bored;\n\n    assert(candidate(\"Hello world\") ==\
    \ 0L);\n    assert(candidate(\"Is the sky blue?\") == 0L);\n    assert(candidate(\"\
    I love It !\") == 1L);\n    assert(candidate(\"bIt\") == 0L);\n    assert(candidate(\"\
    I feel good today. I will be productive. will kill It\") == 2L);\n    assert(candidate(\"\
    You and I are going for a walk\") == 0L);\n}\nvoid main(){}"
  status: SyntaxError
  stderr: '/tmp/tmpudu06gfa.d(18): Error: undefined identifier `split`

    /tmp/tmpudu06gfa.d(21): Error: undefined identifier `startsWith`

    Failed: ["dmd", "-unittest", "-v", "-o-", "/tmp/tmpudu06gfa.d", "-I/tmp"]

    '
  stdout: ''
  timestamp: 1660163028
- exit_code: 1
  program: "import std.math;\n/*\n\n    You'll be given a string of words, and your\
    \ task is to count the number\n    of boredoms. A boredom is a sentence that starts\
    \ with the word \"I\".\n    Sentences are delimited by '.', '?' or '!'.\n   \n\
    \    For example:\n    >>> is_bored(\"Hello world\")\n    0L\n    >>> is_bored(\"\
    The sky is blue. The sun is shining. I love this weather\")\n    1L\n    \n*/\n\
    long is_bored(string S) \n{\n    long boredoms = 0;\n    string[] sentences =\
    \ split(S, \".\");\n    foreach(string sentence; sentences)\n    {\n        string[]\
    \ words = split(sentence, \" \");\n        if(words[0] == \"I\")\n           \
    \ boredoms++;\n    }\n    return boredoms;\n}\nunittest\n{\n    alias candidate\
    \ = is_bored;\n\n    assert(candidate(\"Hello world\") == 0L);\n    assert(candidate(\"\
    Is the sky blue?\") == 0L);\n    assert(candidate(\"I love It !\") == 1L);\n \
    \   assert(candidate(\"bIt\") == 0L);\n    assert(candidate(\"I feel good today.\
    \ I will be productive. will kill It\") == 2L);\n    assert(candidate(\"You and\
    \ I are going for a walk\") == 0L);\n}\nvoid main(){}"
  status: SyntaxError
  stderr: '/tmp/tmp1upyxolo.d(18): Error: undefined identifier `split`

    /tmp/tmp1upyxolo.d(21): Error: undefined identifier `split`

    Failed: ["dmd", "-unittest", "-v", "-o-", "/tmp/tmp1upyxolo.d", "-I/tmp"]

    '
  stdout: ''
  timestamp: 1660163028
- exit_code: 1
  program: "import std.math;\n/*\n\n    You'll be given a string of words, and your\
    \ task is to count the number\n    of boredoms. A boredom is a sentence that starts\
    \ with the word \"I\".\n    Sentences are delimited by '.', '?' or '!'.\n   \n\
    \    For example:\n    >>> is_bored(\"Hello world\")\n    0L\n    >>> is_bored(\"\
    The sky is blue. The sun is shining. I love this weather\")\n    1L\n    \n*/\n\
    long is_bored(string S) \n{\n    long boredoms = 0;\n    string[] sentences =\
    \ split(S, \".\");\n    foreach(sentence; sentences)\n    {\n        string[]\
    \ words = split(sentence, \" \");\n        if(words[0] == \"I\")\n           \
    \ boredoms++;\n    }\n    return boredoms;\n}\nunittest\n{\n    alias candidate\
    \ = is_bored;\n\n    assert(candidate(\"Hello world\") == 0L);\n    assert(candidate(\"\
    Is the sky blue?\") == 0L);\n    assert(candidate(\"I love It !\") == 1L);\n \
    \   assert(candidate(\"bIt\") == 0L);\n    assert(candidate(\"I feel good today.\
    \ I will be productive. will kill It\") == 2L);\n    assert(candidate(\"You and\
    \ I are going for a walk\") == 0L);\n}\nvoid main(){}"
  status: SyntaxError
  stderr: '/tmp/tmpx3am4b_0.d(18): Error: undefined identifier `split`

    /tmp/tmpx3am4b_0.d(21): Error: undefined identifier `split`

    Failed: ["dmd", "-unittest", "-v", "-o-", "/tmp/tmpx3am4b_0.d", "-I/tmp"]

    '
  stdout: ''
  timestamp: 1660163028
- exit_code: 1
  program: "import std.math;\n/*\n\n    You'll be given a string of words, and your\
    \ task is to count the number\n    of boredoms. A boredom is a sentence that starts\
    \ with the word \"I\".\n    Sentences are delimited by '.', '?' or '!'.\n   \n\
    \    For example:\n    >>> is_bored(\"Hello world\")\n    0L\n    >>> is_bored(\"\
    The sky is blue. The sun is shining. I love this weather\")\n    1L\n    \n*/\n\
    long is_bored(string S) \n{\n    long boredoms = 0;\n    string[] sentences =\
    \ split(S, \".\");\n    foreach(string sentence; sentences)\n    {\n        string[]\
    \ words = split(sentence, \" \");\n        if(words[0] == \"I\")\n           \
    \ boredoms++;\n    }\n    return boredoms;\n}\nunittest\n{\n    alias candidate\
    \ = is_bored;\n\n    assert(candidate(\"Hello world\") == 0L);\n    assert(candidate(\"\
    Is the sky blue?\") == 0L);\n    assert(candidate(\"I love It !\") == 1L);\n \
    \   assert(candidate(\"bIt\") == 0L);\n    assert(candidate(\"I feel good today.\
    \ I will be productive. will kill It\") == 2L);\n    assert(candidate(\"You and\
    \ I are going for a walk\") == 0L);\n}\nvoid main(){}"
  status: SyntaxError
  stderr: '/tmp/tmp1upyxolo.d(18): Error: undefined identifier `split`

    /tmp/tmp1upyxolo.d(21): Error: undefined identifier `split`

    Failed: ["dmd", "-unittest", "-v", "-o-", "/tmp/tmp1upyxolo.d", "-I/tmp"]

    '
  stdout: ''
  timestamp: 1660163028
- exit_code: 1
  program: "import std.math;\n/*\n\n    You'll be given a string of words, and your\
    \ task is to count the number\n    of boredoms. A boredom is a sentence that starts\
    \ with the word \"I\".\n    Sentences are delimited by '.', '?' or '!'.\n   \n\
    \    For example:\n    >>> is_bored(\"Hello world\")\n    0L\n    >>> is_bored(\"\
    The sky is blue. The sun is shining. I love this weather\")\n    1L\n    \n*/\n\
    long is_bored(string S) \n{\n    long count = 0;\n    string[] sentences = split(S,\
    \ \".\");\n    foreach(string sentence; sentences)\n    {\n        string[] words\
    \ = split(sentence, \" \");\n        if(words[0] == \"I\")\n            count++;\n\
    \    }\n    return count;\n}\nunittest\n{\n    alias candidate = is_bored;\n\n\
    \    assert(candidate(\"Hello world\") == 0L);\n    assert(candidate(\"Is the\
    \ sky blue?\") == 0L);\n    assert(candidate(\"I love It !\") == 1L);\n    assert(candidate(\"\
    bIt\") == 0L);\n    assert(candidate(\"I feel good today. I will be productive.\
    \ will kill It\") == 2L);\n    assert(candidate(\"You and I are going for a walk\"\
    ) == 0L);\n}\nvoid main(){}"
  status: SyntaxError
  stderr: '/tmp/tmpd7dz0lhc.d(18): Error: undefined identifier `split`

    /tmp/tmpd7dz0lhc.d(21): Error: undefined identifier `split`

    Failed: ["dmd", "-unittest", "-v", "-o-", "/tmp/tmpd7dz0lhc.d", "-I/tmp"]

    '
  stdout: ''
  timestamp: 1660163028
- exit_code: 1
  program: "import std.math;\n/*\n\n    You'll be given a string of words, and your\
    \ task is to count the number\n    of boredoms. A boredom is a sentence that starts\
    \ with the word \"I\".\n    Sentences are delimited by '.', '?' or '!'.\n   \n\
    \    For example:\n    >>> is_bored(\"Hello world\")\n    0L\n    >>> is_bored(\"\
    The sky is blue. The sun is shining. I love this weather\")\n    1L\n    \n*/\n\
    long is_bored(string S) \n{\n    long boredoms = 0;\n    string[] sentences =\
    \ split(S, \".\");\n    foreach(string sentence; sentences)\n    {\n        string[]\
    \ words = split(sentence, \" \");\n        if(words[0] == \"I\")\n           \
    \ boredoms++;\n    }\n    return boredoms;\n}\nunittest\n{\n    alias candidate\
    \ = is_bored;\n\n    assert(candidate(\"Hello world\") == 0L);\n    assert(candidate(\"\
    Is the sky blue?\") == 0L);\n    assert(candidate(\"I love It !\") == 1L);\n \
    \   assert(candidate(\"bIt\") == 0L);\n    assert(candidate(\"I feel good today.\
    \ I will be productive. will kill It\") == 2L);\n    assert(candidate(\"You and\
    \ I are going for a walk\") == 0L);\n}\nvoid main(){}"
  status: SyntaxError
  stderr: '/tmp/tmp1upyxolo.d(18): Error: undefined identifier `split`

    /tmp/tmp1upyxolo.d(21): Error: undefined identifier `split`

    Failed: ["dmd", "-unittest", "-v", "-o-", "/tmp/tmp1upyxolo.d", "-I/tmp"]

    '
  stdout: ''
  timestamp: 1660163028
- exit_code: 1
  program: "import std.math;\n/*\n\n    You'll be given a string of words, and your\
    \ task is to count the number\n    of boredoms. A boredom is a sentence that starts\
    \ with the word \"I\".\n    Sentences are delimited by '.', '?' or '!'.\n   \n\
    \    For example:\n    >>> is_bored(\"Hello world\")\n    0L\n    >>> is_bored(\"\
    The sky is blue. The sun is shining. I love this weather\")\n    1L\n    \n*/\n\
    long is_bored(string S) \n{\n    long boredoms = 0;\n    string[] sentences =\
    \ split(S, \".\");\n    foreach(sentence; sentences)\n    {\n        string[]\
    \ words = split(sentence, \" \");\n        if(words[0] == \"I\")\n           \
    \ boredoms++;\n    }\n    return boredoms;\n}\nunittest\n{\n    alias candidate\
    \ = is_bored;\n\n    assert(candidate(\"Hello world\") == 0L);\n    assert(candidate(\"\
    Is the sky blue?\") == 0L);\n    assert(candidate(\"I love It !\") == 1L);\n \
    \   assert(candidate(\"bIt\") == 0L);\n    assert(candidate(\"I feel good today.\
    \ I will be productive. will kill It\") == 2L);\n    assert(candidate(\"You and\
    \ I are going for a walk\") == 0L);\n}\nvoid main(){}"
  status: SyntaxError
  stderr: '/tmp/tmpx3am4b_0.d(18): Error: undefined identifier `split`

    /tmp/tmpx3am4b_0.d(21): Error: undefined identifier `split`

    Failed: ["dmd", "-unittest", "-v", "-o-", "/tmp/tmpx3am4b_0.d", "-I/tmp"]

    '
  stdout: ''
  timestamp: 1660163028
- exit_code: 1
  program: "import std.math;\n/*\n\n    You'll be given a string of words, and your\
    \ task is to count the number\n    of boredoms. A boredom is a sentence that starts\
    \ with the word \"I\".\n    Sentences are delimited by '.', '?' or '!'.\n   \n\
    \    For example:\n    >>> is_bored(\"Hello world\")\n    0L\n    >>> is_bored(\"\
    The sky is blue. The sun is shining. I love this weather\")\n    1L\n    \n*/\n\
    long is_bored(string S) \n{\n    long count = 0;\n    string[] sentences = split(S,\
    \ \".\");\n    foreach(sentence; sentences)\n    {\n        if(sentence.length\
    \ > 0)\n        {\n            string[] words = split(sentence, \" \");\n    \
    \        if(words[0] == \"I\")\n            {\n                count++;\n    \
    \        }\n        }\n    }\n    return count;\n}\nunittest\n{\n    alias candidate\
    \ = is_bored;\n\n    assert(candidate(\"Hello world\") == 0L);\n    assert(candidate(\"\
    Is the sky blue?\") == 0L);\n    assert(candidate(\"I love It !\") == 1L);\n \
    \   assert(candidate(\"bIt\") == 0L);\n    assert(candidate(\"I feel good today.\
    \ I will be productive. will kill It\") == 2L);\n    assert(candidate(\"You and\
    \ I are going for a walk\") == 0L);\n}\nvoid main(){}"
  status: SyntaxError
  stderr: '/tmp/tmp0ws5fbrt.d(18): Error: undefined identifier `split`

    /tmp/tmp0ws5fbrt.d(23): Error: undefined identifier `split`

    Failed: ["dmd", "-unittest", "-v", "-o-", "/tmp/tmp0ws5fbrt.d", "-I/tmp"]

    '
  stdout: ''
  timestamp: 1660163028
- exit_code: 1
  program: "import std.math;\n/*\n\n    You'll be given a string of words, and your\
    \ task is to count the number\n    of boredoms. A boredom is a sentence that starts\
    \ with the word \"I\".\n    Sentences are delimited by '.', '?' or '!'.\n   \n\
    \    For example:\n    >>> is_bored(\"Hello world\")\n    0L\n    >>> is_bored(\"\
    The sky is blue. The sun is shining. I love this weather\")\n    1L\n    \n*/\n\
    long is_bored(string S) \n{\n    long boredoms = 0;\n    auto sentences = split(S,\
    \ \".\");\n    for (auto sentence : sentences)\n    {\n        auto words = split(sentence,\
    \ \" \");\n        if (words[0] == \"I\")\n            boredoms++;\n    }\n  \
    \  return boredoms;\n}\nunittest\n{\n    alias candidate = is_bored;\n\n    assert(candidate(\"\
    Hello world\") == 0L);\n    assert(candidate(\"Is the sky blue?\") == 0L);\n \
    \   assert(candidate(\"I love It !\") == 1L);\n    assert(candidate(\"bIt\") ==\
    \ 0L);\n    assert(candidate(\"I feel good today. I will be productive. will kill\
    \ It\") == 2L);\n    assert(candidate(\"You and I are going for a walk\") == 0L);\n\
    }\nvoid main(){}"
  status: SyntaxError
  stderr: '/tmp/tmpwo1wrh_b.d(19): Error: no identifier for declarator `sentence`

    /tmp/tmpwo1wrh_b.d(19): Error: expression expected, not `:`

    /tmp/tmpwo1wrh_b.d(19): Error: found `sentences` when expecting `;` following
    `for` condition

    Failed: ["dmd", "-unittest", "-v", "-o-", "/tmp/tmpwo1wrh_b.d", "-I/tmp"]

    '
  stdout: ''
  timestamp: 1660163028
- exit_code: 1
  program: "import std.math;\n/*\n\n    You'll be given a string of words, and your\
    \ task is to count the number\n    of boredoms. A boredom is a sentence that starts\
    \ with the word \"I\".\n    Sentences are delimited by '.', '?' or '!'.\n   \n\
    \    For example:\n    >>> is_bored(\"Hello world\")\n    0L\n    >>> is_bored(\"\
    The sky is blue. The sun is shining. I love this weather\")\n    1L\n    \n*/\n\
    long is_bored(string S) \n{\n    long boredoms = 0;\n    string[] sentences =\
    \ split(S, \".\");\n    foreach(string sentence; sentences)\n    {\n        string[]\
    \ words = split(sentence, \" \");\n        if(words[0] == \"I\")\n           \
    \ boredoms++;\n    }\n    return boredoms;\n}\nunittest\n{\n    alias candidate\
    \ = is_bored;\n\n    assert(candidate(\"Hello world\") == 0L);\n    assert(candidate(\"\
    Is the sky blue?\") == 0L);\n    assert(candidate(\"I love It !\") == 1L);\n \
    \   assert(candidate(\"bIt\") == 0L);\n    assert(candidate(\"I feel good today.\
    \ I will be productive. will kill It\") == 2L);\n    assert(candidate(\"You and\
    \ I are going for a walk\") == 0L);\n}\nvoid main(){}"
  status: SyntaxError
  stderr: '/tmp/tmp1upyxolo.d(18): Error: undefined identifier `split`

    /tmp/tmp1upyxolo.d(21): Error: undefined identifier `split`

    Failed: ["dmd", "-unittest", "-v", "-o-", "/tmp/tmp1upyxolo.d", "-I/tmp"]

    '
  stdout: ''
  timestamp: 1660163028
- exit_code: 1
  program: "import std.math;\n/*\n\n    You'll be given a string of words, and your\
    \ task is to count the number\n    of boredoms. A boredom is a sentence that starts\
    \ with the word \"I\".\n    Sentences are delimited by '.', '?' or '!'.\n   \n\
    \    For example:\n    >>> is_bored(\"Hello world\")\n    0L\n    >>> is_bored(\"\
    The sky is blue. The sun is shining. I love this weather\")\n    1L\n    \n*/\n\
    long is_bored(string S) \n{\n    long boredoms = 0;\n    string[] sentences =\
    \ split(S, \".\");\n    foreach(string sentence; sentences)\n    {\n        if(sentence.length\
    \ > 0)\n        {\n            string[] words = split(sentence, \" \");\n    \
    \        if(words[0] == \"I\")\n            {\n                boredoms++;\n \
    \           }\n        }\n    }\n    return boredoms;\n}\nunittest\n{\n    alias\
    \ candidate = is_bored;\n\n    assert(candidate(\"Hello world\") == 0L);\n   \
    \ assert(candidate(\"Is the sky blue?\") == 0L);\n    assert(candidate(\"I love\
    \ It !\") == 1L);\n    assert(candidate(\"bIt\") == 0L);\n    assert(candidate(\"\
    I feel good today. I will be productive. will kill It\") == 2L);\n    assert(candidate(\"\
    You and I are going for a walk\") == 0L);\n}\nvoid main(){}"
  status: SyntaxError
  stderr: '/tmp/tmprvolhnpj.d(18): Error: undefined identifier `split`

    /tmp/tmprvolhnpj.d(23): Error: undefined identifier `split`

    Failed: ["dmd", "-unittest", "-v", "-o-", "/tmp/tmprvolhnpj.d", "-I/tmp"]

    '
  stdout: ''
  timestamp: 1660163028
- exit_code: 1
  program: "import std.math;\n/*\n\n    You'll be given a string of words, and your\
    \ task is to count the number\n    of boredoms. A boredom is a sentence that starts\
    \ with the word \"I\".\n    Sentences are delimited by '.', '?' or '!'.\n   \n\
    \    For example:\n    >>> is_bored(\"Hello world\")\n    0L\n    >>> is_bored(\"\
    The sky is blue. The sun is shining. I love this weather\")\n    1L\n    \n*/\n\
    long is_bored(string S) \n{\n    long boredoms = 0;\n    string[] sentences =\
    \ split(S, \".\");\n    foreach(string sentence; sentences)\n    {\n        if(sentence.length\
    \ > 0)\n        {\n            string[] words = split(sentence, \" \");\n    \
    \        if(words[0] == \"I\")\n            {\n                boredoms++;\n \
    \           }\n        }\n    }\n    return boredoms;\n}\nunittest\n{\n    alias\
    \ candidate = is_bored;\n\n    assert(candidate(\"Hello world\") == 0L);\n   \
    \ assert(candidate(\"Is the sky blue?\") == 0L);\n    assert(candidate(\"I love\
    \ It !\") == 1L);\n    assert(candidate(\"bIt\") == 0L);\n    assert(candidate(\"\
    I feel good today. I will be productive. will kill It\") == 2L);\n    assert(candidate(\"\
    You and I are going for a walk\") == 0L);\n}\nvoid main(){}"
  status: SyntaxError
  stderr: '/tmp/tmprvolhnpj.d(18): Error: undefined identifier `split`

    /tmp/tmprvolhnpj.d(23): Error: undefined identifier `split`

    Failed: ["dmd", "-unittest", "-v", "-o-", "/tmp/tmprvolhnpj.d", "-I/tmp"]

    '
  stdout: ''
  timestamp: 1660163028
- exit_code: 1
  program: "import std.math;\n/*\n\n    You'll be given a string of words, and your\
    \ task is to count the number\n    of boredoms. A boredom is a sentence that starts\
    \ with the word \"I\".\n    Sentences are delimited by '.', '?' or '!'.\n   \n\
    \    For example:\n    >>> is_bored(\"Hello world\")\n    0L\n    >>> is_bored(\"\
    The sky is blue. The sun is shining. I love this weather\")\n    1L\n    \n*/\n\
    long is_bored(string S) \n{\n    long boredoms = 0;\n    string[] sentences =\
    \ split(S, \".\");\n    foreach(string sentence; sentences)\n    {\n        if(sentence.length\
    \ > 0)\n        {\n            string[] words = split(sentence, \" \");\n    \
    \        if(words[0] == \"I\")\n            {\n                boredoms++;\n \
    \           }\n        }\n    }\n    return boredoms;\n}\nunittest\n{\n    alias\
    \ candidate = is_bored;\n\n    assert(candidate(\"Hello world\") == 0L);\n   \
    \ assert(candidate(\"Is the sky blue?\") == 0L);\n    assert(candidate(\"I love\
    \ It !\") == 1L);\n    assert(candidate(\"bIt\") == 0L);\n    assert(candidate(\"\
    I feel good today. I will be productive. will kill It\") == 2L);\n    assert(candidate(\"\
    You and I are going for a walk\") == 0L);\n}\nvoid main(){}"
  status: SyntaxError
  stderr: '/tmp/tmprvolhnpj.d(18): Error: undefined identifier `split`

    /tmp/tmprvolhnpj.d(23): Error: undefined identifier `split`

    Failed: ["dmd", "-unittest", "-v", "-o-", "/tmp/tmprvolhnpj.d", "-I/tmp"]

    '
  stdout: ''
  timestamp: 1660163028
- exit_code: 1
  program: "import std.math;\n/*\n\n    You'll be given a string of words, and your\
    \ task is to count the number\n    of boredoms. A boredom is a sentence that starts\
    \ with the word \"I\".\n    Sentences are delimited by '.', '?' or '!'.\n   \n\
    \    For example:\n    >>> is_bored(\"Hello world\")\n    0L\n    >>> is_bored(\"\
    The sky is blue. The sun is shining. I love this weather\")\n    1L\n    \n*/\n\
    long is_bored(string S) \n{\n    long count = 0;\n    string[] words = split(S,\
    \ \" \");\n    foreach(string word; words)\n    {\n        if(word == \"I\")\n\
    \            count++;\n    }\n    return count;\n}\nunittest\n{\n    alias candidate\
    \ = is_bored;\n\n    assert(candidate(\"Hello world\") == 0L);\n    assert(candidate(\"\
    Is the sky blue?\") == 0L);\n    assert(candidate(\"I love It !\") == 1L);\n \
    \   assert(candidate(\"bIt\") == 0L);\n    assert(candidate(\"I feel good today.\
    \ I will be productive. will kill It\") == 2L);\n    assert(candidate(\"You and\
    \ I are going for a walk\") == 0L);\n}\nvoid main(){}"
  status: SyntaxError
  stderr: '/tmp/tmpej_rprd2.d(18): Error: undefined identifier `split`

    Failed: ["dmd", "-unittest", "-v", "-o-", "/tmp/tmpej_rprd2.d", "-I/tmp"]

    '
  stdout: ''
  timestamp: 1660163028
- exit_code: 1
  program: "import std.math;\n/*\n\n    You'll be given a string of words, and your\
    \ task is to count the number\n    of boredoms. A boredom is a sentence that starts\
    \ with the word \"I\".\n    Sentences are delimited by '.', '?' or '!'.\n   \n\
    \    For example:\n    >>> is_bored(\"Hello world\")\n    0L\n    >>> is_bored(\"\
    The sky is blue. The sun is shining. I love this weather\")\n    1L\n    \n*/\n\
    long is_bored(string S) \n{\n    long boredoms = 0;\n    auto words = split(S,\
    \ \" \");\n    foreach(word; words)\n    {\n        if(word == \"I\")\n      \
    \      boredoms++;\n    }\n    return boredoms;\n}\nunittest\n{\n    alias candidate\
    \ = is_bored;\n\n    assert(candidate(\"Hello world\") == 0L);\n    assert(candidate(\"\
    Is the sky blue?\") == 0L);\n    assert(candidate(\"I love It !\") == 1L);\n \
    \   assert(candidate(\"bIt\") == 0L);\n    assert(candidate(\"I feel good today.\
    \ I will be productive. will kill It\") == 2L);\n    assert(candidate(\"You and\
    \ I are going for a walk\") == 0L);\n}\nvoid main(){}"
  status: SyntaxError
  stderr: '/tmp/tmpm0jgnlho.d(18): Error: undefined identifier `split`

    Failed: ["dmd", "-unittest", "-v", "-o-", "/tmp/tmpm0jgnlho.d", "-I/tmp"]

    '
  stdout: ''
  timestamp: 1660163028
- exit_code: 1
  program: "import std.math;\n/*\n\n    You'll be given a string of words, and your\
    \ task is to count the number\n    of boredoms. A boredom is a sentence that starts\
    \ with the word \"I\".\n    Sentences are delimited by '.', '?' or '!'.\n   \n\
    \    For example:\n    >>> is_bored(\"Hello world\")\n    0L\n    >>> is_bored(\"\
    The sky is blue. The sun is shining. I love this weather\")\n    1L\n    \n*/\n\
    long is_bored(string S) \n{\n    long count = 0;\n    string[] words = split(S,\
    \ \".\");\n    foreach(string word; words)\n    {\n        string[] words2 = split(word,\
    \ \"?\");\n        foreach(string word2; words2)\n        {\n            string[]\
    \ words3 = split(word2, \"!\");\n            foreach(string word3; words3)\n \
    \           {\n                if(word3.length > 0)\n                {\n     \
    \               if(word3[0] == 'I')\n                    {\n                 \
    \       count++;\n                    }\n                }\n            }\n  \
    \      }\n    }\n    return count;\n}\nunittest\n{\n    alias candidate = is_bored;\n\
    \n    assert(candidate(\"Hello world\") == 0L);\n    assert(candidate(\"Is the\
    \ sky blue?\") == 0L);\n    assert(candidate(\"I love It !\") == 1L);\n    assert(candidate(\"\
    bIt\") == 0L);\n    assert(candidate(\"I feel good today. I will be productive.\
    \ will kill It\") == 2L);\n    assert(candidate(\"You and I are going for a walk\"\
    ) == 0L);\n}\nvoid main(){}"
  status: SyntaxError
  stderr: '/tmp/tmpvmgbdjtz.d(18): Error: undefined identifier `split`

    /tmp/tmpvmgbdjtz.d(21): Error: undefined identifier `split`

    /tmp/tmpvmgbdjtz.d(24): Error: undefined identifier `split`

    Failed: ["dmd", "-unittest", "-v", "-o-", "/tmp/tmpvmgbdjtz.d", "-I/tmp"]

    '
  stdout: ''
  timestamp: 1660163028
- exit_code: 1
  program: "import std.math;\n/*\n\n    You'll be given a string of words, and your\
    \ task is to count the number\n    of boredoms. A boredom is a sentence that starts\
    \ with the word \"I\".\n    Sentences are delimited by '.', '?' or '!'.\n   \n\
    \    For example:\n    >>> is_bored(\"Hello world\")\n    0L\n    >>> is_bored(\"\
    The sky is blue. The sun is shining. I love this weather\")\n    1L\n    \n*/\n\
    long is_bored(string S) \n{\n    long boredoms = 0;\n    string[] sentences =\
    \ split(S, \".\");\n    foreach(string sentence; sentences)\n    {\n        string[]\
    \ words = split(sentence, \" \");\n        if(words[0] == \"I\")\n           \
    \ boredoms++;\n    }\n    return boredoms;\n}\nunittest\n{\n    alias candidate\
    \ = is_bored;\n\n    assert(candidate(\"Hello world\") == 0L);\n    assert(candidate(\"\
    Is the sky blue?\") == 0L);\n    assert(candidate(\"I love It !\") == 1L);\n \
    \   assert(candidate(\"bIt\") == 0L);\n    assert(candidate(\"I feel good today.\
    \ I will be productive. will kill It\") == 2L);\n    assert(candidate(\"You and\
    \ I are going for a walk\") == 0L);\n}\nvoid main(){}"
  status: SyntaxError
  stderr: '/tmp/tmp1upyxolo.d(18): Error: undefined identifier `split`

    /tmp/tmp1upyxolo.d(21): Error: undefined identifier `split`

    Failed: ["dmd", "-unittest", "-v", "-o-", "/tmp/tmp1upyxolo.d", "-I/tmp"]

    '
  stdout: ''
  timestamp: 1660163028
- exit_code: 1
  program: "import std.math;\n/*\n\n    You'll be given a string of words, and your\
    \ task is to count the number\n    of boredoms. A boredom is a sentence that starts\
    \ with the word \"I\".\n    Sentences are delimited by '.', '?' or '!'.\n   \n\
    \    For example:\n    >>> is_bored(\"Hello world\")\n    0L\n    >>> is_bored(\"\
    The sky is blue. The sun is shining. I love this weather\")\n    1L\n    \n*/\n\
    long is_bored(string S) \n{\n    long boredoms = 0;\n    string[] sentences =\
    \ split(S, \".\");\n    foreach(string sentence; sentences)\n    {\n        string[]\
    \ words = split(sentence, \" \");\n        if(words[0] == \"I\")\n           \
    \ boredoms++;\n    }\n    return boredoms;\n}\nunittest\n{\n    alias candidate\
    \ = is_bored;\n\n    assert(candidate(\"Hello world\") == 0L);\n    assert(candidate(\"\
    Is the sky blue?\") == 0L);\n    assert(candidate(\"I love It !\") == 1L);\n \
    \   assert(candidate(\"bIt\") == 0L);\n    assert(candidate(\"I feel good today.\
    \ I will be productive. will kill It\") == 2L);\n    assert(candidate(\"You and\
    \ I are going for a walk\") == 0L);\n}\nvoid main(){}"
  status: SyntaxError
  stderr: '/tmp/tmp1upyxolo.d(18): Error: undefined identifier `split`

    /tmp/tmp1upyxolo.d(21): Error: undefined identifier `split`

    Failed: ["dmd", "-unittest", "-v", "-o-", "/tmp/tmp1upyxolo.d", "-I/tmp"]

    '
  stdout: ''
  timestamp: 1660163028
- exit_code: 1
  program: "import std.math;\n/*\n\n    You'll be given a string of words, and your\
    \ task is to count the number\n    of boredoms. A boredom is a sentence that starts\
    \ with the word \"I\".\n    Sentences are delimited by '.', '?' or '!'.\n   \n\
    \    For example:\n    >>> is_bored(\"Hello world\")\n    0L\n    >>> is_bored(\"\
    The sky is blue. The sun is shining. I love this weather\")\n    1L\n    \n*/\n\
    long is_bored(string S) \n{\n    long boredoms = 0;\n    string[] sentences =\
    \ split(S, \".\");\n    foreach(string sentence; sentences)\n    {\n        string[]\
    \ words = split(sentence, \" \");\n        if(words[0] == \"I\")\n           \
    \ boredoms++;\n    }\n    return boredoms;\n}\nunittest\n{\n    alias candidate\
    \ = is_bored;\n\n    assert(candidate(\"Hello world\") == 0L);\n    assert(candidate(\"\
    Is the sky blue?\") == 0L);\n    assert(candidate(\"I love It !\") == 1L);\n \
    \   assert(candidate(\"bIt\") == 0L);\n    assert(candidate(\"I feel good today.\
    \ I will be productive. will kill It\") == 2L);\n    assert(candidate(\"You and\
    \ I are going for a walk\") == 0L);\n}\nvoid main(){}"
  status: SyntaxError
  stderr: '/tmp/tmp1upyxolo.d(18): Error: undefined identifier `split`

    /tmp/tmp1upyxolo.d(21): Error: undefined identifier `split`

    Failed: ["dmd", "-unittest", "-v", "-o-", "/tmp/tmp1upyxolo.d", "-I/tmp"]

    '
  stdout: ''
  timestamp: 1660163028

language: d
name: HumanEval_15_string_sequence
results:
- exit_code: 1
  program: "import std.math;\n/*\n Return a string containing space-delimited numbers\
    \ starting from 0 upto n inclusive.\n    >>> string_sequence(0L)\n    \"0\"\n\
    \    >>> string_sequence(5L)\n    \"0 1 2 3 4 5\"\n    \n*/\nstring string_sequence(long\
    \ n) \n{\n    string result = \"\";\n    foreach (i; 0L .. n + 1L)\n    {\n  \
    \      result ~= to!string(i) ~ \" \";\n    }\n    return result.trimRight();\n\
    }\nunittest\n{\n    alias candidate = string_sequence;\n\n    assert(candidate(0L)\
    \ == \"0\");\n    assert(candidate(3L) == \"0 1 2 3\");\n    assert(candidate(10L)\
    \ == \"0 1 2 3 4 5 6 7 8 9 10\");\n}\nvoid main(){}"
  status: SyntaxError
  stderr: '/tmp/tmpz1hv32sx.d(15): Error: template instance `to!string` template `to`
    is not defined

    /tmp/tmpz1hv32sx.d(17): Error: no property `trimRight` for type `string`

    Failed: ["dmd", "-unittest", "-v", "-o-", "/tmp/tmpz1hv32sx.d", "-I/tmp"]

    '
  stdout: ''
  timestamp: 1660163029
- exit_code: 1
  program: "import std.math;\n/*\n Return a string containing space-delimited numbers\
    \ starting from 0 upto n inclusive.\n    >>> string_sequence(0L)\n    \"0\"\n\
    \    >>> string_sequence(5L)\n    \"0 1 2 3 4 5\"\n    \n*/\nstring string_sequence(long\
    \ n) \n{\n    string result = \"\";\n    for (int i = 0; i <= n; i++) \n    {\n\
    \        result += to!string(i) + \" \";\n    }\n    return result;\n}\nunittest\n\
    {\n    alias candidate = string_sequence;\n\n    assert(candidate(0L) == \"0\"\
    );\n    assert(candidate(3L) == \"0 1 2 3\");\n    assert(candidate(10L) == \"\
    0 1 2 3 4 5 6 7 8 9 10\");\n}\nvoid main(){}"
  status: SyntaxError
  stderr: '/tmp/tmp6gp62em7.d(15): Error: template instance `to!string` template `to`
    is not defined

    Failed: ["dmd", "-unittest", "-v", "-o-", "/tmp/tmp6gp62em7.d", "-I/tmp"]

    '
  stdout: ''
  timestamp: 1660163029
- exit_code: 1
  program: "import std.math;\n/*\n Return a string containing space-delimited numbers\
    \ starting from 0 upto n inclusive.\n    >>> string_sequence(0L)\n    \"0\"\n\
    \    >>> string_sequence(5L)\n    \"0 1 2 3 4 5\"\n    \n*/\nstring string_sequence(long\
    \ n) \n{\n    string result;\n    foreach (i; 0L .. n + 1L)\n    {\n        result\
    \ ~= to!string(i) ~ \" \";\n    }\n    return result;\n}\nunittest\n{\n    alias\
    \ candidate = string_sequence;\n\n    assert(candidate(0L) == \"0\");\n    assert(candidate(3L)\
    \ == \"0 1 2 3\");\n    assert(candidate(10L) == \"0 1 2 3 4 5 6 7 8 9 10\");\n\
    }\nvoid main(){}"
  status: SyntaxError
  stderr: '/tmp/tmp6ptkbkg7.d(15): Error: template instance `to!string` template `to`
    is not defined

    Failed: ["dmd", "-unittest", "-v", "-o-", "/tmp/tmp6ptkbkg7.d", "-I/tmp"]

    '
  stdout: ''
  timestamp: 1660163029
- exit_code: 1
  program: "import std.math;\n/*\n Return a string containing space-delimited numbers\
    \ starting from 0 upto n inclusive.\n    >>> string_sequence(0L)\n    \"0\"\n\
    \    >>> string_sequence(5L)\n    \"0 1 2 3 4 5\"\n    \n*/\nstring string_sequence(long\
    \ n) \n{\n    string result = \"\";\n    for (long i = 0; i <= n; i++)\n    {\n\
    \        result += to!string(i) + \" \";\n    }\n    return result;\n}\nunittest\n\
    {\n    alias candidate = string_sequence;\n\n    assert(candidate(0L) == \"0\"\
    );\n    assert(candidate(3L) == \"0 1 2 3\");\n    assert(candidate(10L) == \"\
    0 1 2 3 4 5 6 7 8 9 10\");\n}\nvoid main(){}"
  status: SyntaxError
  stderr: '/tmp/tmpbl63d6z8.d(15): Error: template instance `to!string` template `to`
    is not defined

    Failed: ["dmd", "-unittest", "-v", "-o-", "/tmp/tmpbl63d6z8.d", "-I/tmp"]

    '
  stdout: ''
  timestamp: 1660163029
- exit_code: 1
  program: "import std.math;\n/*\n Return a string containing space-delimited numbers\
    \ starting from 0 upto n inclusive.\n    >>> string_sequence(0L)\n    \"0\"\n\
    \    >>> string_sequence(5L)\n    \"0 1 2 3 4 5\"\n    \n*/\nstring string_sequence(long\
    \ n) \n{\n    string s = \"\";\n    foreach (i; 0L .. n + 1L)\n    {\n       \
    \ s ~= to!string(i) ~ \" \";\n    }\n    return s;\n}\nunittest\n{\n    alias\
    \ candidate = string_sequence;\n\n    assert(candidate(0L) == \"0\");\n    assert(candidate(3L)\
    \ == \"0 1 2 3\");\n    assert(candidate(10L) == \"0 1 2 3 4 5 6 7 8 9 10\");\n\
    }\nvoid main(){}"
  status: SyntaxError
  stderr: '/tmp/tmph2b6x3x5.d(15): Error: template instance `to!string` template `to`
    is not defined

    Failed: ["dmd", "-unittest", "-v", "-o-", "/tmp/tmph2b6x3x5.d", "-I/tmp"]

    '
  stdout: ''
  timestamp: 1660163029
- exit_code: 1
  program: "import std.math;\n/*\n Return a string containing space-delimited numbers\
    \ starting from 0 upto n inclusive.\n    >>> string_sequence(0L)\n    \"0\"\n\
    \    >>> string_sequence(5L)\n    \"0 1 2 3 4 5\"\n    \n*/\nstring string_sequence(long\
    \ n) \n{\n    string s = \"\";\n    for (long i = 0; i <= n; i++) \n    {\n  \
    \      s += to!string(i);\n        if (i < n) \n        {\n            s += \"\
    \ \";\n        }\n    }\n    return s;\n}\nunittest\n{\n    alias candidate =\
    \ string_sequence;\n\n    assert(candidate(0L) == \"0\");\n    assert(candidate(3L)\
    \ == \"0 1 2 3\");\n    assert(candidate(10L) == \"0 1 2 3 4 5 6 7 8 9 10\");\n\
    }\nvoid main(){}"
  status: SyntaxError
  stderr: '/tmp/tmp77xzgxnt.d(15): Error: template instance `to!string` template `to`
    is not defined

    /tmp/tmp77xzgxnt.d(18): Error: slice `s` is not mutable

    Failed: ["dmd", "-unittest", "-v", "-o-", "/tmp/tmp77xzgxnt.d", "-I/tmp"]

    '
  stdout: ''
  timestamp: 1660163029
- exit_code: 1
  program: "import std.math;\n/*\n Return a string containing space-delimited numbers\
    \ starting from 0 upto n inclusive.\n    >>> string_sequence(0L)\n    \"0\"\n\
    \    >>> string_sequence(5L)\n    \"0 1 2 3 4 5\"\n    \n*/\nstring string_sequence(long\
    \ n) \n{\n    string result = \"\";\n    foreach (i; 0L .. n + 1L)\n    {\n  \
    \      result ~= to!string(i) ~ \" \";\n    }\n    return result;\n}\nunittest\n\
    {\n    alias candidate = string_sequence;\n\n    assert(candidate(0L) == \"0\"\
    );\n    assert(candidate(3L) == \"0 1 2 3\");\n    assert(candidate(10L) == \"\
    0 1 2 3 4 5 6 7 8 9 10\");\n}\nvoid main(){}"
  status: SyntaxError
  stderr: '/tmp/tmprtj2maoj.d(15): Error: template instance `to!string` template `to`
    is not defined

    Failed: ["dmd", "-unittest", "-v", "-o-", "/tmp/tmprtj2maoj.d", "-I/tmp"]

    '
  stdout: ''
  timestamp: 1660163029
- exit_code: 1
  program: "import std.math;\n/*\n Return a string containing space-delimited numbers\
    \ starting from 0 upto n inclusive.\n    >>> string_sequence(0L)\n    \"0\"\n\
    \    >>> string_sequence(5L)\n    \"0 1 2 3 4 5\"\n    \n*/\nstring string_sequence(long\
    \ n) \n{\n    string s = \"\";\n    for (long i = 0; i <= n; i++) \n    {\n  \
    \      s += to!string(i);\n        if (i < n)\n            s += \" \";\n    }\n\
    \    return s;\n}\nunittest\n{\n    alias candidate = string_sequence;\n\n   \
    \ assert(candidate(0L) == \"0\");\n    assert(candidate(3L) == \"0 1 2 3\");\n\
    \    assert(candidate(10L) == \"0 1 2 3 4 5 6 7 8 9 10\");\n}\nvoid main(){}"
  status: SyntaxError
  stderr: '/tmp/tmprz1tzzgi.d(15): Error: template instance `to!string` template `to`
    is not defined

    /tmp/tmprz1tzzgi.d(17): Error: slice `s` is not mutable

    Failed: ["dmd", "-unittest", "-v", "-o-", "/tmp/tmprz1tzzgi.d", "-I/tmp"]

    '
  stdout: ''
  timestamp: 1660163029
- exit_code: 1
  program: "import std.math;\n/*\n Return a string containing space-delimited numbers\
    \ starting from 0 upto n inclusive.\n    >>> string_sequence(0L)\n    \"0\"\n\
    \    >>> string_sequence(5L)\n    \"0 1 2 3 4 5\"\n    \n*/\nstring string_sequence(long\
    \ n) \n{\n    string result = \"\";\n    foreach (i; 0L .. n + 1L)\n    {\n  \
    \      result ~= to!string(i) ~ \" \";\n    }\n    return result;\n}\nunittest\n\
    {\n    alias candidate = string_sequence;\n\n    assert(candidate(0L) == \"0\"\
    );\n    assert(candidate(3L) == \"0 1 2 3\");\n    assert(candidate(10L) == \"\
    0 1 2 3 4 5 6 7 8 9 10\");\n}\nvoid main(){}"
  status: SyntaxError
  stderr: '/tmp/tmprtj2maoj.d(15): Error: template instance `to!string` template `to`
    is not defined

    Failed: ["dmd", "-unittest", "-v", "-o-", "/tmp/tmprtj2maoj.d", "-I/tmp"]

    '
  stdout: ''
  timestamp: 1660163029
- exit_code: 1
  program: "import std.math;\n/*\n Return a string containing space-delimited numbers\
    \ starting from 0 upto n inclusive.\n    >>> string_sequence(0L)\n    \"0\"\n\
    \    >>> string_sequence(5L)\n    \"0 1 2 3 4 5\"\n    \n*/\nstring string_sequence(long\
    \ n) \n{\n    string s = \"\";\n    for (int i = 0; i <= n; i++)\n    {\n    \
    \    s += to!string(i) + \" \";\n    }\n    return s;\n}\nunittest\n{\n    alias\
    \ candidate = string_sequence;\n\n    assert(candidate(0L) == \"0\");\n    assert(candidate(3L)\
    \ == \"0 1 2 3\");\n    assert(candidate(10L) == \"0 1 2 3 4 5 6 7 8 9 10\");\n\
    }\nvoid main(){}"
  status: SyntaxError
  stderr: '/tmp/tmpioqiremn.d(15): Error: template instance `to!string` template `to`
    is not defined

    Failed: ["dmd", "-unittest", "-v", "-o-", "/tmp/tmpioqiremn.d", "-I/tmp"]

    '
  stdout: ''
  timestamp: 1660163029
- exit_code: 1
  program: "import std.math;\n/*\n Return a string containing space-delimited numbers\
    \ starting from 0 upto n inclusive.\n    >>> string_sequence(0L)\n    \"0\"\n\
    \    >>> string_sequence(5L)\n    \"0 1 2 3 4 5\"\n    \n*/\nstring string_sequence(long\
    \ n) \n{\n    string result = \"\";\n    foreach (i; 0L .. n + 1L) \n    {\n \
    \       result ~= i.to!string;\n        if (i < n) \n        {\n            result\
    \ ~= \" \";\n        }\n    }\n    return result;\n}\nunittest\n{\n    alias candidate\
    \ = string_sequence;\n\n    assert(candidate(0L) == \"0\");\n    assert(candidate(3L)\
    \ == \"0 1 2 3\");\n    assert(candidate(10L) == \"0 1 2 3 4 5 6 7 8 9 10\");\n\
    }\nvoid main(){}"
  status: SyntaxError
  stderr: '/tmp/tmpkt0_4qh0.d(15): Error: no property `to` for type `long`

    Failed: ["dmd", "-unittest", "-v", "-o-", "/tmp/tmpkt0_4qh0.d", "-I/tmp"]

    '
  stdout: ''
  timestamp: 1660163029
- exit_code: 1
  program: "import std.math;\n/*\n Return a string containing space-delimited numbers\
    \ starting from 0 upto n inclusive.\n    >>> string_sequence(0L)\n    \"0\"\n\
    \    >>> string_sequence(5L)\n    \"0 1 2 3 4 5\"\n    \n*/\nstring string_sequence(long\
    \ n) \n{\n    string s = \"\";\n    for (long i = 0; i <= n; i++) \n    {\n  \
    \      s += to!string(i);\n        if (i < n) \n        {\n            s += \"\
    \ \";\n        }\n    }\n    return s;\n}\nunittest\n{\n    alias candidate =\
    \ string_sequence;\n\n    assert(candidate(0L) == \"0\");\n    assert(candidate(3L)\
    \ == \"0 1 2 3\");\n    assert(candidate(10L) == \"0 1 2 3 4 5 6 7 8 9 10\");\n\
    }\nvoid main(){}"
  status: SyntaxError
  stderr: '/tmp/tmp77xzgxnt.d(15): Error: template instance `to!string` template `to`
    is not defined

    /tmp/tmp77xzgxnt.d(18): Error: slice `s` is not mutable

    Failed: ["dmd", "-unittest", "-v", "-o-", "/tmp/tmp77xzgxnt.d", "-I/tmp"]

    '
  stdout: ''
  timestamp: 1660163029
- exit_code: 1
  program: "import std.math;\n/*\n Return a string containing space-delimited numbers\
    \ starting from 0 upto n inclusive.\n    >>> string_sequence(0L)\n    \"0\"\n\
    \    >>> string_sequence(5L)\n    \"0 1 2 3 4 5\"\n    \n*/\nstring string_sequence(long\
    \ n) \n{\n    string result = \"\";\n    for (long i = 0; i <= n; i++) \n    {\n\
    \        result += to!string(i);\n        if (i < n) \n        {\n           \
    \ result += \" \";\n        }\n    }\n    return result;\n}\nunittest\n{\n   \
    \ alias candidate = string_sequence;\n\n    assert(candidate(0L) == \"0\");\n\
    \    assert(candidate(3L) == \"0 1 2 3\");\n    assert(candidate(10L) == \"0 1\
    \ 2 3 4 5 6 7 8 9 10\");\n}\nvoid main(){}"
  status: SyntaxError
  stderr: '/tmp/tmp5z7ughf1.d(15): Error: template instance `to!string` template `to`
    is not defined

    /tmp/tmp5z7ughf1.d(18): Error: slice `result` is not mutable

    Failed: ["dmd", "-unittest", "-v", "-o-", "/tmp/tmp5z7ughf1.d", "-I/tmp"]

    '
  stdout: ''
  timestamp: 1660163029
- exit_code: 1
  program: "import std.math;\n/*\n Return a string containing space-delimited numbers\
    \ starting from 0 upto n inclusive.\n    >>> string_sequence(0L)\n    \"0\"\n\
    \    >>> string_sequence(5L)\n    \"0 1 2 3 4 5\"\n    \n*/\nstring string_sequence(long\
    \ n) \n{\n    string result;\n    foreach (i; 0L .. n + 1L)\n    {\n        result\
    \ ~= to!string(i) ~ \" \";\n    }\n    return result;\n}\nunittest\n{\n    alias\
    \ candidate = string_sequence;\n\n    assert(candidate(0L) == \"0\");\n    assert(candidate(3L)\
    \ == \"0 1 2 3\");\n    assert(candidate(10L) == \"0 1 2 3 4 5 6 7 8 9 10\");\n\
    }\nvoid main(){}"
  status: SyntaxError
  stderr: '/tmp/tmp6ptkbkg7.d(15): Error: template instance `to!string` template `to`
    is not defined

    Failed: ["dmd", "-unittest", "-v", "-o-", "/tmp/tmp6ptkbkg7.d", "-I/tmp"]

    '
  stdout: ''
  timestamp: 1660163029
- exit_code: 1
  program: "import std.math;\n/*\n Return a string containing space-delimited numbers\
    \ starting from 0 upto n inclusive.\n    >>> string_sequence(0L)\n    \"0\"\n\
    \    >>> string_sequence(5L)\n    \"0 1 2 3 4 5\"\n    \n*/\nstring string_sequence(long\
    \ n) \n{\n    string result;\n    foreach (i; 0L .. n + 1L)\n    {\n        result\
    \ ~= i.to!string;\n        if (i != n)\n            result ~= \" \";\n    }\n\
    \    return result;\n}\nunittest\n{\n    alias candidate = string_sequence;\n\n\
    \    assert(candidate(0L) == \"0\");\n    assert(candidate(3L) == \"0 1 2 3\"\
    );\n    assert(candidate(10L) == \"0 1 2 3 4 5 6 7 8 9 10\");\n}\nvoid main(){}"
  status: SyntaxError
  stderr: '/tmp/tmpqwieuzn1.d(15): Error: no property `to` for type `long`

    Failed: ["dmd", "-unittest", "-v", "-o-", "/tmp/tmpqwieuzn1.d", "-I/tmp"]

    '
  stdout: ''
  timestamp: 1660163029
- exit_code: 1
  program: "import std.math;\n/*\n Return a string containing space-delimited numbers\
    \ starting from 0 upto n inclusive.\n    >>> string_sequence(0L)\n    \"0\"\n\
    \    >>> string_sequence(5L)\n    \"0 1 2 3 4 5\"\n    \n*/\nstring string_sequence(long\
    \ n) \n{\n    string s;\n    foreach (i; 0L .. n + 1L)\n    {\n        s ~= to!string(i)\
    \ ~ \" \";\n    }\n    return s;\n}\nunittest\n{\n    alias candidate = string_sequence;\n\
    \n    assert(candidate(0L) == \"0\");\n    assert(candidate(3L) == \"0 1 2 3\"\
    );\n    assert(candidate(10L) == \"0 1 2 3 4 5 6 7 8 9 10\");\n}\nvoid main(){}"
  status: SyntaxError
  stderr: '/tmp/tmplkf0p8oy.d(15): Error: template instance `to!string` template `to`
    is not defined

    Failed: ["dmd", "-unittest", "-v", "-o-", "/tmp/tmplkf0p8oy.d", "-I/tmp"]

    '
  stdout: ''
  timestamp: 1660163029
- exit_code: 1
  program: "import std.math;\n/*\n Return a string containing space-delimited numbers\
    \ starting from 0 upto n inclusive.\n    >>> string_sequence(0L)\n    \"0\"\n\
    \    >>> string_sequence(5L)\n    \"0 1 2 3 4 5\"\n    \n*/\nstring string_sequence(long\
    \ n) \n{\n    string result = \"\";\n    for (long i = 0; i <= n; i++) \n    {\n\
    \        result += to!string(i);\n        if (i < n) \n        {\n           \
    \ result += \" \";\n        }\n    }\n    return result;\n}\nunittest\n{\n   \
    \ alias candidate = string_sequence;\n\n    assert(candidate(0L) == \"0\");\n\
    \    assert(candidate(3L) == \"0 1 2 3\");\n    assert(candidate(10L) == \"0 1\
    \ 2 3 4 5 6 7 8 9 10\");\n}\nvoid main(){}"
  status: SyntaxError
  stderr: '/tmp/tmp5z7ughf1.d(15): Error: template instance `to!string` template `to`
    is not defined

    /tmp/tmp5z7ughf1.d(18): Error: slice `result` is not mutable

    Failed: ["dmd", "-unittest", "-v", "-o-", "/tmp/tmp5z7ughf1.d", "-I/tmp"]

    '
  stdout: ''
  timestamp: 1660163029
- exit_code: 1
  program: "import std.math;\n/*\n Return a string containing space-delimited numbers\
    \ starting from 0 upto n inclusive.\n    >>> string_sequence(0L)\n    \"0\"\n\
    \    >>> string_sequence(5L)\n    \"0 1 2 3 4 5\"\n    \n*/\nstring string_sequence(long\
    \ n) \n{\n    string result = \"\";\n    for (long i = 0; i <= n; i++) \n    {\n\
    \        result += to!string(i);\n        if (i < n) \n        {\n           \
    \ result += \" \";\n        }\n    }\n    return result;\n}\nunittest\n{\n   \
    \ alias candidate = string_sequence;\n\n    assert(candidate(0L) == \"0\");\n\
    \    assert(candidate(3L) == \"0 1 2 3\");\n    assert(candidate(10L) == \"0 1\
    \ 2 3 4 5 6 7 8 9 10\");\n}\nvoid main(){}"
  status: SyntaxError
  stderr: '/tmp/tmp5z7ughf1.d(15): Error: template instance `to!string` template `to`
    is not defined

    /tmp/tmp5z7ughf1.d(18): Error: slice `result` is not mutable

    Failed: ["dmd", "-unittest", "-v", "-o-", "/tmp/tmp5z7ughf1.d", "-I/tmp"]

    '
  stdout: ''
  timestamp: 1660163029
- exit_code: 1
  program: "import std.math;\n/*\n Return a string containing space-delimited numbers\
    \ starting from 0 upto n inclusive.\n    >>> string_sequence(0L)\n    \"0\"\n\
    \    >>> string_sequence(5L)\n    \"0 1 2 3 4 5\"\n    \n*/\nstring string_sequence(long\
    \ n) \n{\n    string s = \"\";\n    foreach (i; 0L .. n + 1L)\n    {\n       \
    \ s ~= to!string(i) ~ \" \";\n    }\n    return s;\n}\nunittest\n{\n    alias\
    \ candidate = string_sequence;\n\n    assert(candidate(0L) == \"0\");\n    assert(candidate(3L)\
    \ == \"0 1 2 3\");\n    assert(candidate(10L) == \"0 1 2 3 4 5 6 7 8 9 10\");\n\
    }\nvoid main(){}"
  status: SyntaxError
  stderr: '/tmp/tmph2b6x3x5.d(15): Error: template instance `to!string` template `to`
    is not defined

    Failed: ["dmd", "-unittest", "-v", "-o-", "/tmp/tmph2b6x3x5.d", "-I/tmp"]

    '
  stdout: ''
  timestamp: 1660163029
- exit_code: 1
  program: "import std.math;\n/*\n Return a string containing space-delimited numbers\
    \ starting from 0 upto n inclusive.\n    >>> string_sequence(0L)\n    \"0\"\n\
    \    >>> string_sequence(5L)\n    \"0 1 2 3 4 5\"\n    \n*/\nstring string_sequence(long\
    \ n) \n{\n    string result = \"\";\n    foreach (i; 0L .. n + 1L) \n    {\n \
    \       result ~= to!string(i) ~ \" \";\n    }\n    return result;\n}\nunittest\n\
    {\n    alias candidate = string_sequence;\n\n    assert(candidate(0L) == \"0\"\
    );\n    assert(candidate(3L) == \"0 1 2 3\");\n    assert(candidate(10L) == \"\
    0 1 2 3 4 5 6 7 8 9 10\");\n}\nvoid main(){}"
  status: SyntaxError
  stderr: '/tmp/tmpvkr8_bpf.d(15): Error: template instance `to!string` template `to`
    is not defined

    Failed: ["dmd", "-unittest", "-v", "-o-", "/tmp/tmpvkr8_bpf.d", "-I/tmp"]

    '
  stdout: ''
  timestamp: 1660163029
- exit_code: 1
  program: "import std.math;\n/*\n Return a string containing space-delimited numbers\
    \ starting from 0 upto n inclusive.\n    >>> string_sequence(0L)\n    \"0\"\n\
    \    >>> string_sequence(5L)\n    \"0 1 2 3 4 5\"\n    \n*/\nstring string_sequence(long\
    \ n) \n{\n    string result = \"\";\n    for (long i = 0; i <= n; i++) \n    {\n\
    \        result += to!string(i);\n        if (i < n) \n        {\n           \
    \ result += \" \";\n        }\n    }\n    return result;\n}\nunittest\n{\n   \
    \ alias candidate = string_sequence;\n\n    assert(candidate(0L) == \"0\");\n\
    \    assert(candidate(3L) == \"0 1 2 3\");\n    assert(candidate(10L) == \"0 1\
    \ 2 3 4 5 6 7 8 9 10\");\n}\nvoid main(){}"
  status: SyntaxError
  stderr: '/tmp/tmp5z7ughf1.d(15): Error: template instance `to!string` template `to`
    is not defined

    /tmp/tmp5z7ughf1.d(18): Error: slice `result` is not mutable

    Failed: ["dmd", "-unittest", "-v", "-o-", "/tmp/tmp5z7ughf1.d", "-I/tmp"]

    '
  stdout: ''
  timestamp: 1660163029
- exit_code: 1
  program: "import std.math;\n/*\n Return a string containing space-delimited numbers\
    \ starting from 0 upto n inclusive.\n    >>> string_sequence(0L)\n    \"0\"\n\
    \    >>> string_sequence(5L)\n    \"0 1 2 3 4 5\"\n    \n*/\nstring string_sequence(long\
    \ n) \n{\n    string result = \"\";\n    for (long i = 0; i <= n; i++)\n    {\n\
    \        result += to!string(i) + \" \";\n    }\n    return result;\n}\nunittest\n\
    {\n    alias candidate = string_sequence;\n\n    assert(candidate(0L) == \"0\"\
    );\n    assert(candidate(3L) == \"0 1 2 3\");\n    assert(candidate(10L) == \"\
    0 1 2 3 4 5 6 7 8 9 10\");\n}\nvoid main(){}"
  status: SyntaxError
  stderr: '/tmp/tmpbl63d6z8.d(15): Error: template instance `to!string` template `to`
    is not defined

    Failed: ["dmd", "-unittest", "-v", "-o-", "/tmp/tmpbl63d6z8.d", "-I/tmp"]

    '
  stdout: ''
  timestamp: 1660163029
- exit_code: 1
  program: "import std.math;\n/*\n Return a string containing space-delimited numbers\
    \ starting from 0 upto n inclusive.\n    >>> string_sequence(0L)\n    \"0\"\n\
    \    >>> string_sequence(5L)\n    \"0 1 2 3 4 5\"\n    \n*/\nstring string_sequence(long\
    \ n) \n{\n    string result = \"\";\n    foreach (i; 0L .. n + 1L)\n    {\n  \
    \      result ~= to!string(i) ~ \" \";\n    }\n    return result;\n}\nunittest\n\
    {\n    alias candidate = string_sequence;\n\n    assert(candidate(0L) == \"0\"\
    );\n    assert(candidate(3L) == \"0 1 2 3\");\n    assert(candidate(10L) == \"\
    0 1 2 3 4 5 6 7 8 9 10\");\n}\nvoid main(){}"
  status: SyntaxError
  stderr: '/tmp/tmprtj2maoj.d(15): Error: template instance `to!string` template `to`
    is not defined

    Failed: ["dmd", "-unittest", "-v", "-o-", "/tmp/tmprtj2maoj.d", "-I/tmp"]

    '
  stdout: ''
  timestamp: 1660163029
- exit_code: 1
  program: "import std.math;\n/*\n Return a string containing space-delimited numbers\
    \ starting from 0 upto n inclusive.\n    >>> string_sequence(0L)\n    \"0\"\n\
    \    >>> string_sequence(5L)\n    \"0 1 2 3 4 5\"\n    \n*/\nstring string_sequence(long\
    \ n) \n{\n    string result = \"\";\n    for (long i = 0; i <= n; i++) \n    {\n\
    \        result += to!string(i);\n        if (i < n) \n        {\n           \
    \ result += \" \";\n        }\n    }\n    return result;\n}\nunittest\n{\n   \
    \ alias candidate = string_sequence;\n\n    assert(candidate(0L) == \"0\");\n\
    \    assert(candidate(3L) == \"0 1 2 3\");\n    assert(candidate(10L) == \"0 1\
    \ 2 3 4 5 6 7 8 9 10\");\n}\nvoid main(){}"
  status: SyntaxError
  stderr: '/tmp/tmp5z7ughf1.d(15): Error: template instance `to!string` template `to`
    is not defined

    /tmp/tmp5z7ughf1.d(18): Error: slice `result` is not mutable

    Failed: ["dmd", "-unittest", "-v", "-o-", "/tmp/tmp5z7ughf1.d", "-I/tmp"]

    '
  stdout: ''
  timestamp: 1660163029
- exit_code: 1
  program: "import std.math;\n/*\n Return a string containing space-delimited numbers\
    \ starting from 0 upto n inclusive.\n    >>> string_sequence(0L)\n    \"0\"\n\
    \    >>> string_sequence(5L)\n    \"0 1 2 3 4 5\"\n    \n*/\nstring string_sequence(long\
    \ n) \n{\n    string result = \"\";\n    foreach (i; 0L .. n + 1L)\n    {\n  \
    \      result ~= to!string(i) ~ \" \";\n    }\n    return result;\n}\nunittest\n\
    {\n    alias candidate = string_sequence;\n\n    assert(candidate(0L) == \"0\"\
    );\n    assert(candidate(3L) == \"0 1 2 3\");\n    assert(candidate(10L) == \"\
    0 1 2 3 4 5 6 7 8 9 10\");\n}\nvoid main(){}"
  status: SyntaxError
  stderr: '/tmp/tmprtj2maoj.d(15): Error: template instance `to!string` template `to`
    is not defined

    Failed: ["dmd", "-unittest", "-v", "-o-", "/tmp/tmprtj2maoj.d", "-I/tmp"]

    '
  stdout: ''
  timestamp: 1660163029
- exit_code: 1
  program: "import std.math;\n/*\n Return a string containing space-delimited numbers\
    \ starting from 0 upto n inclusive.\n    >>> string_sequence(0L)\n    \"0\"\n\
    \    >>> string_sequence(5L)\n    \"0 1 2 3 4 5\"\n    \n*/\nstring string_sequence(long\
    \ n) \n{\n    string s = \"\";\n    for (long i = 0; i <= n; i++)\n    {\n   \
    \     s = s ~ to!string(i) ~ \" \";\n    }\n    return s;\n}\nunittest\n{\n  \
    \  alias candidate = string_sequence;\n\n    assert(candidate(0L) == \"0\");\n\
    \    assert(candidate(3L) == \"0 1 2 3\");\n    assert(candidate(10L) == \"0 1\
    \ 2 3 4 5 6 7 8 9 10\");\n}\nvoid main(){}"
  status: SyntaxError
  stderr: '/tmp/tmpx0ordsim.d(15): Error: template instance `to!string` template `to`
    is not defined

    Failed: ["dmd", "-unittest", "-v", "-o-", "/tmp/tmpx0ordsim.d", "-I/tmp"]

    '
  stdout: ''
  timestamp: 1660163029
- exit_code: 1
  program: "import std.math;\n/*\n Return a string containing space-delimited numbers\
    \ starting from 0 upto n inclusive.\n    >>> string_sequence(0L)\n    \"0\"\n\
    \    >>> string_sequence(5L)\n    \"0 1 2 3 4 5\"\n    \n*/\nstring string_sequence(long\
    \ n) \n{\n    string s = \"\";\n    for (long i = 0; i <= n; i++)\n    {\n   \
    \     s += to!string(i);\n        if (i < n)\n            s += \" \";\n    }\n\
    \    return s;\n}\nunittest\n{\n    alias candidate = string_sequence;\n\n   \
    \ assert(candidate(0L) == \"0\");\n    assert(candidate(3L) == \"0 1 2 3\");\n\
    \    assert(candidate(10L) == \"0 1 2 3 4 5 6 7 8 9 10\");\n}\nvoid main(){}"
  status: SyntaxError
  stderr: '/tmp/tmp4_5za_8c.d(15): Error: template instance `to!string` template `to`
    is not defined

    /tmp/tmp4_5za_8c.d(17): Error: slice `s` is not mutable

    Failed: ["dmd", "-unittest", "-v", "-o-", "/tmp/tmp4_5za_8c.d", "-I/tmp"]

    '
  stdout: ''
  timestamp: 1660163029
- exit_code: 1
  program: "import std.math;\n/*\n Return a string containing space-delimited numbers\
    \ starting from 0 upto n inclusive.\n    >>> string_sequence(0L)\n    \"0\"\n\
    \    >>> string_sequence(5L)\n    \"0 1 2 3 4 5\"\n    \n*/\nstring string_sequence(long\
    \ n) \n{\n    string result = \"\";\n    foreach (i; 0 .. n + 1)\n    {\n    \
    \    result ~= to!string(i) ~ \" \";\n    }\n    return result.trimRight();\n\
    }\nunittest\n{\n    alias candidate = string_sequence;\n\n    assert(candidate(0L)\
    \ == \"0\");\n    assert(candidate(3L) == \"0 1 2 3\");\n    assert(candidate(10L)\
    \ == \"0 1 2 3 4 5 6 7 8 9 10\");\n}\nvoid main(){}"
  status: SyntaxError
  stderr: '/tmp/tmp58hp2tj3.d(15): Error: template instance `to!string` template `to`
    is not defined

    /tmp/tmp58hp2tj3.d(17): Error: no property `trimRight` for type `string`

    Failed: ["dmd", "-unittest", "-v", "-o-", "/tmp/tmp58hp2tj3.d", "-I/tmp"]

    '
  stdout: ''
  timestamp: 1660163029
- exit_code: 1
  program: "import std.math;\n/*\n Return a string containing space-delimited numbers\
    \ starting from 0 upto n inclusive.\n    >>> string_sequence(0L)\n    \"0\"\n\
    \    >>> string_sequence(5L)\n    \"0 1 2 3 4 5\"\n    \n*/\nstring string_sequence(long\
    \ n) \n{\n    string result;\n    foreach (i; 0L .. n + 1L)\n    {\n        result\
    \ ~= to!string(i) ~ \" \";\n    }\n    return result;\n}\nunittest\n{\n    alias\
    \ candidate = string_sequence;\n\n    assert(candidate(0L) == \"0\");\n    assert(candidate(3L)\
    \ == \"0 1 2 3\");\n    assert(candidate(10L) == \"0 1 2 3 4 5 6 7 8 9 10\");\n\
    }\nvoid main(){}"
  status: SyntaxError
  stderr: '/tmp/tmp6ptkbkg7.d(15): Error: template instance `to!string` template `to`
    is not defined

    Failed: ["dmd", "-unittest", "-v", "-o-", "/tmp/tmp6ptkbkg7.d", "-I/tmp"]

    '
  stdout: ''
  timestamp: 1660163029
- exit_code: 1
  program: "import std.math;\n/*\n Return a string containing space-delimited numbers\
    \ starting from 0 upto n inclusive.\n    >>> string_sequence(0L)\n    \"0\"\n\
    \    >>> string_sequence(5L)\n    \"0 1 2 3 4 5\"\n    \n*/\nstring string_sequence(long\
    \ n) \n{\n    string result = \"\";\n    foreach (i; 0L .. n + 1L) \n    {\n \
    \       result ~= i.to!string;\n        if (i < n) \n        {\n            result\
    \ ~= \" \";\n        }\n    }\n    return result;\n}\nunittest\n{\n    alias candidate\
    \ = string_sequence;\n\n    assert(candidate(0L) == \"0\");\n    assert(candidate(3L)\
    \ == \"0 1 2 3\");\n    assert(candidate(10L) == \"0 1 2 3 4 5 6 7 8 9 10\");\n\
    }\nvoid main(){}"
  status: SyntaxError
  stderr: '/tmp/tmpkt0_4qh0.d(15): Error: no property `to` for type `long`

    Failed: ["dmd", "-unittest", "-v", "-o-", "/tmp/tmpkt0_4qh0.d", "-I/tmp"]

    '
  stdout: ''
  timestamp: 1660163029
- exit_code: 1
  program: "import std.math;\n/*\n Return a string containing space-delimited numbers\
    \ starting from 0 upto n inclusive.\n    >>> string_sequence(0L)\n    \"0\"\n\
    \    >>> string_sequence(5L)\n    \"0 1 2 3 4 5\"\n    \n*/\nstring string_sequence(long\
    \ n) \n{\n    string result = \"\";\n    foreach (i; 0L .. n + 1L)\n    {\n  \
    \      result ~= i.to!string;\n        if (i != n)\n            result ~= \" \"\
    ;\n    }\n    return result;\n}\nunittest\n{\n    alias candidate = string_sequence;\n\
    \n    assert(candidate(0L) == \"0\");\n    assert(candidate(3L) == \"0 1 2 3\"\
    );\n    assert(candidate(10L) == \"0 1 2 3 4 5 6 7 8 9 10\");\n}\nvoid main(){}"
  status: SyntaxError
  stderr: '/tmp/tmpah81_gdo.d(15): Error: no property `to` for type `long`

    Failed: ["dmd", "-unittest", "-v", "-o-", "/tmp/tmpah81_gdo.d", "-I/tmp"]

    '
  stdout: ''
  timestamp: 1660163029
- exit_code: 1
  program: "import std.math;\n/*\n Return a string containing space-delimited numbers\
    \ starting from 0 upto n inclusive.\n    >>> string_sequence(0L)\n    \"0\"\n\
    \    >>> string_sequence(5L)\n    \"0 1 2 3 4 5\"\n    \n*/\nstring string_sequence(long\
    \ n) \n{\n    string result = \"\";\n    for (long i = 0; i <= n; i++)\n    {\n\
    \        result += to!string(i) + \" \";\n    }\n    return result.trimRight();\n\
    }\nunittest\n{\n    alias candidate = string_sequence;\n\n    assert(candidate(0L)\
    \ == \"0\");\n    assert(candidate(3L) == \"0 1 2 3\");\n    assert(candidate(10L)\
    \ == \"0 1 2 3 4 5 6 7 8 9 10\");\n}\nvoid main(){}"
  status: SyntaxError
  stderr: '/tmp/tmpkm4x2hdp.d(15): Error: template instance `to!string` template `to`
    is not defined

    /tmp/tmpkm4x2hdp.d(17): Error: no property `trimRight` for type `string`

    Failed: ["dmd", "-unittest", "-v", "-o-", "/tmp/tmpkm4x2hdp.d", "-I/tmp"]

    '
  stdout: ''
  timestamp: 1660163029
- exit_code: 1
  program: "import std.math;\n/*\n Return a string containing space-delimited numbers\
    \ starting from 0 upto n inclusive.\n    >>> string_sequence(0L)\n    \"0\"\n\
    \    >>> string_sequence(5L)\n    \"0 1 2 3 4 5\"\n    \n*/\nstring string_sequence(long\
    \ n) \n{\n    string result = \"\";\n    foreach (i; 0L .. n + 1L)\n    {\n  \
    \      result ~= to!string(i) ~ \" \";\n    }\n    return result;\n}\nunittest\n\
    {\n    alias candidate = string_sequence;\n\n    assert(candidate(0L) == \"0\"\
    );\n    assert(candidate(3L) == \"0 1 2 3\");\n    assert(candidate(10L) == \"\
    0 1 2 3 4 5 6 7 8 9 10\");\n}\nvoid main(){}"
  status: SyntaxError
  stderr: '/tmp/tmprtj2maoj.d(15): Error: template instance `to!string` template `to`
    is not defined

    Failed: ["dmd", "-unittest", "-v", "-o-", "/tmp/tmprtj2maoj.d", "-I/tmp"]

    '
  stdout: ''
  timestamp: 1660163029
- exit_code: 1
  program: "import std.math;\n/*\n Return a string containing space-delimited numbers\
    \ starting from 0 upto n inclusive.\n    >>> string_sequence(0L)\n    \"0\"\n\
    \    >>> string_sequence(5L)\n    \"0 1 2 3 4 5\"\n    \n*/\nstring string_sequence(long\
    \ n) \n{\n    string result = \"\";\n    foreach (i; 0L .. n + 1L) \n    {\n \
    \       result ~= to!string(i) ~ \" \";\n    }\n    return result;\n}\nunittest\n\
    {\n    alias candidate = string_sequence;\n\n    assert(candidate(0L) == \"0\"\
    );\n    assert(candidate(3L) == \"0 1 2 3\");\n    assert(candidate(10L) == \"\
    0 1 2 3 4 5 6 7 8 9 10\");\n}\nvoid main(){}"
  status: SyntaxError
  stderr: '/tmp/tmpvkr8_bpf.d(15): Error: template instance `to!string` template `to`
    is not defined

    Failed: ["dmd", "-unittest", "-v", "-o-", "/tmp/tmpvkr8_bpf.d", "-I/tmp"]

    '
  stdout: ''
  timestamp: 1660163029
- exit_code: 1
  program: "import std.math;\n/*\n Return a string containing space-delimited numbers\
    \ starting from 0 upto n inclusive.\n    >>> string_sequence(0L)\n    \"0\"\n\
    \    >>> string_sequence(5L)\n    \"0 1 2 3 4 5\"\n    \n*/\nstring string_sequence(long\
    \ n) \n{\n    string result = \"\";\n    for (long i = 0; i <= n; i++)\n    {\n\
    \        result += to!string(i) + \" \";\n    }\n    return result;\n}\nunittest\n\
    {\n    alias candidate = string_sequence;\n\n    assert(candidate(0L) == \"0\"\
    );\n    assert(candidate(3L) == \"0 1 2 3\");\n    assert(candidate(10L) == \"\
    0 1 2 3 4 5 6 7 8 9 10\");\n}\nvoid main(){}"
  status: SyntaxError
  stderr: '/tmp/tmpbl63d6z8.d(15): Error: template instance `to!string` template `to`
    is not defined

    Failed: ["dmd", "-unittest", "-v", "-o-", "/tmp/tmpbl63d6z8.d", "-I/tmp"]

    '
  stdout: ''
  timestamp: 1660163029
- exit_code: 1
  program: "import std.math;\n/*\n Return a string containing space-delimited numbers\
    \ starting from 0 upto n inclusive.\n    >>> string_sequence(0L)\n    \"0\"\n\
    \    >>> string_sequence(5L)\n    \"0 1 2 3 4 5\"\n    \n*/\nstring string_sequence(long\
    \ n) \n{\n    string result = \"\";\n    for (long i = 0; i <= n; i++) \n    {\n\
    \        result += to!string(i);\n        if (i < n) \n        {\n           \
    \ result += \" \";\n        }\n    }\n    return result;\n}\nunittest\n{\n   \
    \ alias candidate = string_sequence;\n\n    assert(candidate(0L) == \"0\");\n\
    \    assert(candidate(3L) == \"0 1 2 3\");\n    assert(candidate(10L) == \"0 1\
    \ 2 3 4 5 6 7 8 9 10\");\n}\nvoid main(){}"
  status: SyntaxError
  stderr: '/tmp/tmp5z7ughf1.d(15): Error: template instance `to!string` template `to`
    is not defined

    /tmp/tmp5z7ughf1.d(18): Error: slice `result` is not mutable

    Failed: ["dmd", "-unittest", "-v", "-o-", "/tmp/tmp5z7ughf1.d", "-I/tmp"]

    '
  stdout: ''
  timestamp: 1660163029
- exit_code: 1
  program: "import std.math;\n/*\n Return a string containing space-delimited numbers\
    \ starting from 0 upto n inclusive.\n    >>> string_sequence(0L)\n    \"0\"\n\
    \    >>> string_sequence(5L)\n    \"0 1 2 3 4 5\"\n    \n*/\nstring string_sequence(long\
    \ n) \n{\n    string result;\n    foreach (i; 0L .. n + 1L)\n    {\n        result\
    \ ~= to!string(i) ~ \" \";\n    }\n    return result;\n}\nunittest\n{\n    alias\
    \ candidate = string_sequence;\n\n    assert(candidate(0L) == \"0\");\n    assert(candidate(3L)\
    \ == \"0 1 2 3\");\n    assert(candidate(10L) == \"0 1 2 3 4 5 6 7 8 9 10\");\n\
    }\nvoid main(){}"
  status: SyntaxError
  stderr: '/tmp/tmp6ptkbkg7.d(15): Error: template instance `to!string` template `to`
    is not defined

    Failed: ["dmd", "-unittest", "-v", "-o-", "/tmp/tmp6ptkbkg7.d", "-I/tmp"]

    '
  stdout: ''
  timestamp: 1660163029
- exit_code: 1
  program: "import std.math;\n/*\n Return a string containing space-delimited numbers\
    \ starting from 0 upto n inclusive.\n    >>> string_sequence(0L)\n    \"0\"\n\
    \    >>> string_sequence(5L)\n    \"0 1 2 3 4 5\"\n    \n*/\nstring string_sequence(long\
    \ n) \n{\n    string result;\n    for (long i = 0; i <= n; i++)\n    {\n     \
    \   result ~= to!string(i) ~ \" \";\n    }\n    return result;\n}\nunittest\n\
    {\n    alias candidate = string_sequence;\n\n    assert(candidate(0L) == \"0\"\
    );\n    assert(candidate(3L) == \"0 1 2 3\");\n    assert(candidate(10L) == \"\
    0 1 2 3 4 5 6 7 8 9 10\");\n}\nvoid main(){}"
  status: SyntaxError
  stderr: '/tmp/tmpatn1qnnf.d(15): Error: template instance `to!string` template `to`
    is not defined

    Failed: ["dmd", "-unittest", "-v", "-o-", "/tmp/tmpatn1qnnf.d", "-I/tmp"]

    '
  stdout: ''
  timestamp: 1660163029
- exit_code: 1
  program: "import std.math;\n/*\n Return a string containing space-delimited numbers\
    \ starting from 0 upto n inclusive.\n    >>> string_sequence(0L)\n    \"0\"\n\
    \    >>> string_sequence(5L)\n    \"0 1 2 3 4 5\"\n    \n*/\nstring string_sequence(long\
    \ n) \n{\n    string result = \"\";\n    foreach (i; 0L .. n + 1L)\n    {\n  \
    \      result ~= to!string(i) ~ \" \";\n    }\n    return result;\n}\nunittest\n\
    {\n    alias candidate = string_sequence;\n\n    assert(candidate(0L) == \"0\"\
    );\n    assert(candidate(3L) == \"0 1 2 3\");\n    assert(candidate(10L) == \"\
    0 1 2 3 4 5 6 7 8 9 10\");\n}\nvoid main(){}"
  status: SyntaxError
  stderr: '/tmp/tmprtj2maoj.d(15): Error: template instance `to!string` template `to`
    is not defined

    Failed: ["dmd", "-unittest", "-v", "-o-", "/tmp/tmprtj2maoj.d", "-I/tmp"]

    '
  stdout: ''
  timestamp: 1660163029
- exit_code: 1
  program: "import std.math;\n/*\n Return a string containing space-delimited numbers\
    \ starting from 0 upto n inclusive.\n    >>> string_sequence(0L)\n    \"0\"\n\
    \    >>> string_sequence(5L)\n    \"0 1 2 3 4 5\"\n    \n*/\nstring string_sequence(long\
    \ n) \n{\n    string result = \"\";\n    for (long i = 0; i <= n; i++)\n    {\n\
    \        result = result ~ to!string(i) ~ \" \";\n    }\n    return result;\n\
    }\nunittest\n{\n    alias candidate = string_sequence;\n\n    assert(candidate(0L)\
    \ == \"0\");\n    assert(candidate(3L) == \"0 1 2 3\");\n    assert(candidate(10L)\
    \ == \"0 1 2 3 4 5 6 7 8 9 10\");\n}\nvoid main(){}"
  status: SyntaxError
  stderr: '/tmp/tmpjeuahv34.d(15): Error: template instance `to!string` template `to`
    is not defined

    Failed: ["dmd", "-unittest", "-v", "-o-", "/tmp/tmpjeuahv34.d", "-I/tmp"]

    '
  stdout: ''
  timestamp: 1660163029
- exit_code: 1
  program: "import std.math;\n/*\n Return a string containing space-delimited numbers\
    \ starting from 0 upto n inclusive.\n    >>> string_sequence(0L)\n    \"0\"\n\
    \    >>> string_sequence(5L)\n    \"0 1 2 3 4 5\"\n    \n*/\nstring string_sequence(long\
    \ n) \n{\n    string result;\n    foreach (i; 0L .. n + 1L)\n    {\n        result\
    \ ~= to!string(i) ~ \" \";\n    }\n    return result;\n}\nunittest\n{\n    alias\
    \ candidate = string_sequence;\n\n    assert(candidate(0L) == \"0\");\n    assert(candidate(3L)\
    \ == \"0 1 2 3\");\n    assert(candidate(10L) == \"0 1 2 3 4 5 6 7 8 9 10\");\n\
    }\nvoid main(){}"
  status: SyntaxError
  stderr: '/tmp/tmp6ptkbkg7.d(15): Error: template instance `to!string` template `to`
    is not defined

    Failed: ["dmd", "-unittest", "-v", "-o-", "/tmp/tmp6ptkbkg7.d", "-I/tmp"]

    '
  stdout: ''
  timestamp: 1660163029
- exit_code: 1
  program: "import std.math;\n/*\n Return a string containing space-delimited numbers\
    \ starting from 0 upto n inclusive.\n    >>> string_sequence(0L)\n    \"0\"\n\
    \    >>> string_sequence(5L)\n    \"0 1 2 3 4 5\"\n    \n*/\nstring string_sequence(long\
    \ n) \n{\n    string result = \"\";\n    for (long i = 0; i <= n; i++)\n    {\n\
    \        result += to!string(i) + \" \";\n    }\n    return result;\n}\nunittest\n\
    {\n    alias candidate = string_sequence;\n\n    assert(candidate(0L) == \"0\"\
    );\n    assert(candidate(3L) == \"0 1 2 3\");\n    assert(candidate(10L) == \"\
    0 1 2 3 4 5 6 7 8 9 10\");\n}\nvoid main(){}"
  status: SyntaxError
  stderr: '/tmp/tmpbl63d6z8.d(15): Error: template instance `to!string` template `to`
    is not defined

    Failed: ["dmd", "-unittest", "-v", "-o-", "/tmp/tmpbl63d6z8.d", "-I/tmp"]

    '
  stdout: ''
  timestamp: 1660163029
- exit_code: 1
  program: "import std.math;\n/*\n Return a string containing space-delimited numbers\
    \ starting from 0 upto n inclusive.\n    >>> string_sequence(0L)\n    \"0\"\n\
    \    >>> string_sequence(5L)\n    \"0 1 2 3 4 5\"\n    \n*/\nstring string_sequence(long\
    \ n) \n{\n    string s = \"\";\n    for (long i = 0; i <= n; i++)\n    {\n   \
    \     s += to!string(i);\n        if (i != n)\n            s += \" \";\n    }\n\
    \    return s;\n}\nunittest\n{\n    alias candidate = string_sequence;\n\n   \
    \ assert(candidate(0L) == \"0\");\n    assert(candidate(3L) == \"0 1 2 3\");\n\
    \    assert(candidate(10L) == \"0 1 2 3 4 5 6 7 8 9 10\");\n}\nvoid main(){}"
  status: SyntaxError
  stderr: '/tmp/tmpbm3usd8m.d(15): Error: template instance `to!string` template `to`
    is not defined

    /tmp/tmpbm3usd8m.d(17): Error: slice `s` is not mutable

    Failed: ["dmd", "-unittest", "-v", "-o-", "/tmp/tmpbm3usd8m.d", "-I/tmp"]

    '
  stdout: ''
  timestamp: 1660163029
- exit_code: 1
  program: "import std.math;\n/*\n Return a string containing space-delimited numbers\
    \ starting from 0 upto n inclusive.\n    >>> string_sequence(0L)\n    \"0\"\n\
    \    >>> string_sequence(5L)\n    \"0 1 2 3 4 5\"\n    \n*/\nstring string_sequence(long\
    \ n) \n{\n    string result = \"\";\n    for (long i = 0; i <= n; i++)\n    {\n\
    \        result += to!string(i) + \" \";\n    }\n    return result;\n}\nunittest\n\
    {\n    alias candidate = string_sequence;\n\n    assert(candidate(0L) == \"0\"\
    );\n    assert(candidate(3L) == \"0 1 2 3\");\n    assert(candidate(10L) == \"\
    0 1 2 3 4 5 6 7 8 9 10\");\n}\nvoid main(){}"
  status: SyntaxError
  stderr: '/tmp/tmpbl63d6z8.d(15): Error: template instance `to!string` template `to`
    is not defined

    Failed: ["dmd", "-unittest", "-v", "-o-", "/tmp/tmpbl63d6z8.d", "-I/tmp"]

    '
  stdout: ''
  timestamp: 1660163029
- exit_code: 1
  program: "import std.math;\n/*\n Return a string containing space-delimited numbers\
    \ starting from 0 upto n inclusive.\n    >>> string_sequence(0L)\n    \"0\"\n\
    \    >>> string_sequence(5L)\n    \"0 1 2 3 4 5\"\n    \n*/\nstring string_sequence(long\
    \ n) \n{\n    string s = \"\";\n    for (long i = 0; i <= n; i++)\n    {\n   \
    \     s += to!string(i);\n        if (i != n)\n            s += \" \";\n    }\n\
    \    return s;\n}\nunittest\n{\n    alias candidate = string_sequence;\n\n   \
    \ assert(candidate(0L) == \"0\");\n    assert(candidate(3L) == \"0 1 2 3\");\n\
    \    assert(candidate(10L) == \"0 1 2 3 4 5 6 7 8 9 10\");\n}\nvoid main(){}"
  status: SyntaxError
  stderr: '/tmp/tmpbm3usd8m.d(15): Error: template instance `to!string` template `to`
    is not defined

    /tmp/tmpbm3usd8m.d(17): Error: slice `s` is not mutable

    Failed: ["dmd", "-unittest", "-v", "-o-", "/tmp/tmpbm3usd8m.d", "-I/tmp"]

    '
  stdout: ''
  timestamp: 1660163029
- exit_code: 1
  program: "import std.math;\n/*\n Return a string containing space-delimited numbers\
    \ starting from 0 upto n inclusive.\n    >>> string_sequence(0L)\n    \"0\"\n\
    \    >>> string_sequence(5L)\n    \"0 1 2 3 4 5\"\n    \n*/\nstring string_sequence(long\
    \ n) \n{\n    string result;\n    for (long i = 0; i <= n; i++) \n    {\n    \
    \    result ~= to!string(i);\n        if (i < n) \n        {\n            result\
    \ ~= \" \";\n        }\n    }\n    return result;\n}\nunittest\n{\n    alias candidate\
    \ = string_sequence;\n\n    assert(candidate(0L) == \"0\");\n    assert(candidate(3L)\
    \ == \"0 1 2 3\");\n    assert(candidate(10L) == \"0 1 2 3 4 5 6 7 8 9 10\");\n\
    }\nvoid main(){}"
  status: SyntaxError
  stderr: '/tmp/tmpjitp3ztf.d(15): Error: template instance `to!string` template `to`
    is not defined

    Failed: ["dmd", "-unittest", "-v", "-o-", "/tmp/tmpjitp3ztf.d", "-I/tmp"]

    '
  stdout: ''
  timestamp: 1660163029
- exit_code: 1
  program: "import std.math;\n/*\n Return a string containing space-delimited numbers\
    \ starting from 0 upto n inclusive.\n    >>> string_sequence(0L)\n    \"0\"\n\
    \    >>> string_sequence(5L)\n    \"0 1 2 3 4 5\"\n    \n*/\nstring string_sequence(long\
    \ n) \n{\n    string result = \"\";\n    foreach (i; 0L .. n + 1L)\n    {\n  \
    \      result ~= to!string(i) ~ \" \";\n    }\n    return result;\n}\nunittest\n\
    {\n    alias candidate = string_sequence;\n\n    assert(candidate(0L) == \"0\"\
    );\n    assert(candidate(3L) == \"0 1 2 3\");\n    assert(candidate(10L) == \"\
    0 1 2 3 4 5 6 7 8 9 10\");\n}\nvoid main(){}"
  status: SyntaxError
  stderr: '/tmp/tmprtj2maoj.d(15): Error: template instance `to!string` template `to`
    is not defined

    Failed: ["dmd", "-unittest", "-v", "-o-", "/tmp/tmprtj2maoj.d", "-I/tmp"]

    '
  stdout: ''
  timestamp: 1660163029
- exit_code: 1
  program: "import std.math;\n/*\n Return a string containing space-delimited numbers\
    \ starting from 0 upto n inclusive.\n    >>> string_sequence(0L)\n    \"0\"\n\
    \    >>> string_sequence(5L)\n    \"0 1 2 3 4 5\"\n    \n*/\nstring string_sequence(long\
    \ n) \n{\n    string result = \"\";\n    foreach (i; 0L .. n + 1L)\n    {\n  \
    \      result ~= to!string(i) ~ \" \";\n    }\n    return result;\n}\nunittest\n\
    {\n    alias candidate = string_sequence;\n\n    assert(candidate(0L) == \"0\"\
    );\n    assert(candidate(3L) == \"0 1 2 3\");\n    assert(candidate(10L) == \"\
    0 1 2 3 4 5 6 7 8 9 10\");\n}\nvoid main(){}"
  status: SyntaxError
  stderr: '/tmp/tmprtj2maoj.d(15): Error: template instance `to!string` template `to`
    is not defined

    Failed: ["dmd", "-unittest", "-v", "-o-", "/tmp/tmprtj2maoj.d", "-I/tmp"]

    '
  stdout: ''
  timestamp: 1660163029
- exit_code: 1
  program: "import std.math;\n/*\n Return a string containing space-delimited numbers\
    \ starting from 0 upto n inclusive.\n    >>> string_sequence(0L)\n    \"0\"\n\
    \    >>> string_sequence(5L)\n    \"0 1 2 3 4 5\"\n    \n*/\nstring string_sequence(long\
    \ n) \n{\n    string result = \"\";\n    foreach (i; 0L .. n + 1L) \n    {\n \
    \       result ~= to!string(i) ~ \" \";\n    }\n    return result;\n}\nunittest\n\
    {\n    alias candidate = string_sequence;\n\n    assert(candidate(0L) == \"0\"\
    );\n    assert(candidate(3L) == \"0 1 2 3\");\n    assert(candidate(10L) == \"\
    0 1 2 3 4 5 6 7 8 9 10\");\n}\nvoid main(){}"
  status: SyntaxError
  stderr: '/tmp/tmpvkr8_bpf.d(15): Error: template instance `to!string` template `to`
    is not defined

    Failed: ["dmd", "-unittest", "-v", "-o-", "/tmp/tmpvkr8_bpf.d", "-I/tmp"]

    '
  stdout: ''
  timestamp: 1660163029
- exit_code: 1
  program: "import std.math;\n/*\n Return a string containing space-delimited numbers\
    \ starting from 0 upto n inclusive.\n    >>> string_sequence(0L)\n    \"0\"\n\
    \    >>> string_sequence(5L)\n    \"0 1 2 3 4 5\"\n    \n*/\nstring string_sequence(long\
    \ n) \n{\n    string result = \"\";\n    foreach (i; 0L .. n + 1L)\n    {\n  \
    \      result ~= to!string(i) ~ \" \";\n    }\n    return result;\n}\nunittest\n\
    {\n    alias candidate = string_sequence;\n\n    assert(candidate(0L) == \"0\"\
    );\n    assert(candidate(3L) == \"0 1 2 3\");\n    assert(candidate(10L) == \"\
    0 1 2 3 4 5 6 7 8 9 10\");\n}\nvoid main(){}"
  status: SyntaxError
  stderr: '/tmp/tmprtj2maoj.d(15): Error: template instance `to!string` template `to`
    is not defined

    Failed: ["dmd", "-unittest", "-v", "-o-", "/tmp/tmprtj2maoj.d", "-I/tmp"]

    '
  stdout: ''
  timestamp: 1660163029
- exit_code: 1
  program: "import std.math;\n/*\n Return a string containing space-delimited numbers\
    \ starting from 0 upto n inclusive.\n    >>> string_sequence(0L)\n    \"0\"\n\
    \    >>> string_sequence(5L)\n    \"0 1 2 3 4 5\"\n    \n*/\nstring string_sequence(long\
    \ n) \n{\n    string result = \"\";\n    for (long i = 0; i <= n; i++)\n    {\n\
    \        result += to!string(i) + \" \";\n    }\n    return result;\n}\nunittest\n\
    {\n    alias candidate = string_sequence;\n\n    assert(candidate(0L) == \"0\"\
    );\n    assert(candidate(3L) == \"0 1 2 3\");\n    assert(candidate(10L) == \"\
    0 1 2 3 4 5 6 7 8 9 10\");\n}\nvoid main(){}"
  status: SyntaxError
  stderr: '/tmp/tmpbl63d6z8.d(15): Error: template instance `to!string` template `to`
    is not defined

    Failed: ["dmd", "-unittest", "-v", "-o-", "/tmp/tmpbl63d6z8.d", "-I/tmp"]

    '
  stdout: ''
  timestamp: 1660163029
- exit_code: 1
  program: "import std.math;\n/*\n Return a string containing space-delimited numbers\
    \ starting from 0 upto n inclusive.\n    >>> string_sequence(0L)\n    \"0\"\n\
    \    >>> string_sequence(5L)\n    \"0 1 2 3 4 5\"\n    \n*/\nstring string_sequence(long\
    \ n) \n{\n    string result = \"\";\n    for (long i = 0; i <= n; i++) \n    {\n\
    \        result += to!string(i);\n        if (i < n) \n        {\n           \
    \ result += \" \";\n        }\n    }\n    return result;\n}\nunittest\n{\n   \
    \ alias candidate = string_sequence;\n\n    assert(candidate(0L) == \"0\");\n\
    \    assert(candidate(3L) == \"0 1 2 3\");\n    assert(candidate(10L) == \"0 1\
    \ 2 3 4 5 6 7 8 9 10\");\n}\nvoid main(){}"
  status: SyntaxError
  stderr: '/tmp/tmp5z7ughf1.d(15): Error: template instance `to!string` template `to`
    is not defined

    /tmp/tmp5z7ughf1.d(18): Error: slice `result` is not mutable

    Failed: ["dmd", "-unittest", "-v", "-o-", "/tmp/tmp5z7ughf1.d", "-I/tmp"]

    '
  stdout: ''
  timestamp: 1660163029
- exit_code: 1
  program: "import std.math;\n/*\n Return a string containing space-delimited numbers\
    \ starting from 0 upto n inclusive.\n    >>> string_sequence(0L)\n    \"0\"\n\
    \    >>> string_sequence(5L)\n    \"0 1 2 3 4 5\"\n    \n*/\nstring string_sequence(long\
    \ n) \n{\n    string result;\n    foreach (i; 0L .. n + 1L) \n    {\n        result\
    \ ~= i;\n        if (i < n) \n        {\n            result ~= \" \";\n      \
    \  }\n    }\n    return result;\n}\nunittest\n{\n    alias candidate = string_sequence;\n\
    \n    assert(candidate(0L) == \"0\");\n    assert(candidate(3L) == \"0 1 2 3\"\
    );\n    assert(candidate(10L) == \"0 1 2 3 4 5 6 7 8 9 10\");\n}\nvoid main(){}"
  status: SyntaxError
  stderr: '/tmp/tmp1jvj6qx4.d(15): Error: cannot append type `long` to type `string`

    Failed: ["dmd", "-unittest", "-v", "-o-", "/tmp/tmp1jvj6qx4.d", "-I/tmp"]

    '
  stdout: ''
  timestamp: 1660163029
- exit_code: 1
  program: "import std.math;\n/*\n Return a string containing space-delimited numbers\
    \ starting from 0 upto n inclusive.\n    >>> string_sequence(0L)\n    \"0\"\n\
    \    >>> string_sequence(5L)\n    \"0 1 2 3 4 5\"\n    \n*/\nstring string_sequence(long\
    \ n) \n{\n    string result = \"\";\n    for (long i = 0; i <= n; i++) \n    {\n\
    \        result += to!string(i);\n        if (i < n) \n        {\n           \
    \ result += \" \";\n        }\n    }\n    return result;\n}\nunittest\n{\n   \
    \ alias candidate = string_sequence;\n\n    assert(candidate(0L) == \"0\");\n\
    \    assert(candidate(3L) == \"0 1 2 3\");\n    assert(candidate(10L) == \"0 1\
    \ 2 3 4 5 6 7 8 9 10\");\n}\nvoid main(){}"
  status: SyntaxError
  stderr: '/tmp/tmp5z7ughf1.d(15): Error: template instance `to!string` template `to`
    is not defined

    /tmp/tmp5z7ughf1.d(18): Error: slice `result` is not mutable

    Failed: ["dmd", "-unittest", "-v", "-o-", "/tmp/tmp5z7ughf1.d", "-I/tmp"]

    '
  stdout: ''
  timestamp: 1660163029
- exit_code: 1
  program: "import std.math;\n/*\n Return a string containing space-delimited numbers\
    \ starting from 0 upto n inclusive.\n    >>> string_sequence(0L)\n    \"0\"\n\
    \    >>> string_sequence(5L)\n    \"0 1 2 3 4 5\"\n    \n*/\nstring string_sequence(long\
    \ n) \n{\n    string result = \"\";\n    for (long i = 0; i <= n; i++) \n    {\n\
    \        result += to!string(i);\n        if (i < n) \n        {\n           \
    \ result += \" \";\n        }\n    }\n    return result;\n}\nunittest\n{\n   \
    \ alias candidate = string_sequence;\n\n    assert(candidate(0L) == \"0\");\n\
    \    assert(candidate(3L) == \"0 1 2 3\");\n    assert(candidate(10L) == \"0 1\
    \ 2 3 4 5 6 7 8 9 10\");\n}\nvoid main(){}"
  status: SyntaxError
  stderr: '/tmp/tmp5z7ughf1.d(15): Error: template instance `to!string` template `to`
    is not defined

    /tmp/tmp5z7ughf1.d(18): Error: slice `result` is not mutable

    Failed: ["dmd", "-unittest", "-v", "-o-", "/tmp/tmp5z7ughf1.d", "-I/tmp"]

    '
  stdout: ''
  timestamp: 1660163029
- exit_code: 1
  program: "import std.math;\n/*\n Return a string containing space-delimited numbers\
    \ starting from 0 upto n inclusive.\n    >>> string_sequence(0L)\n    \"0\"\n\
    \    >>> string_sequence(5L)\n    \"0 1 2 3 4 5\"\n    \n*/\nstring string_sequence(long\
    \ n) \n{\n    string s = \"\";\n    for (int i = 0; i <= n; i++)\n    {\n    \
    \    s = s ~ to!string(i) ~ \" \";\n    }\n    return s;\n}\nunittest\n{\n   \
    \ alias candidate = string_sequence;\n\n    assert(candidate(0L) == \"0\");\n\
    \    assert(candidate(3L) == \"0 1 2 3\");\n    assert(candidate(10L) == \"0 1\
    \ 2 3 4 5 6 7 8 9 10\");\n}\nvoid main(){}"
  status: SyntaxError
  stderr: '/tmp/tmpsmw1cpze.d(15): Error: template instance `to!string` template `to`
    is not defined

    Failed: ["dmd", "-unittest", "-v", "-o-", "/tmp/tmpsmw1cpze.d", "-I/tmp"]

    '
  stdout: ''
  timestamp: 1660163029
- exit_code: 1
  program: "import std.math;\n/*\n Return a string containing space-delimited numbers\
    \ starting from 0 upto n inclusive.\n    >>> string_sequence(0L)\n    \"0\"\n\
    \    >>> string_sequence(5L)\n    \"0 1 2 3 4 5\"\n    \n*/\nstring string_sequence(long\
    \ n) \n{\n    string s;\n    foreach (i; 0L .. n + 1L)\n    {\n        s ~= i.to!string;\n\
    \        s ~= \" \";\n    }\n    return s;\n}\nunittest\n{\n    alias candidate\
    \ = string_sequence;\n\n    assert(candidate(0L) == \"0\");\n    assert(candidate(3L)\
    \ == \"0 1 2 3\");\n    assert(candidate(10L) == \"0 1 2 3 4 5 6 7 8 9 10\");\n\
    }\nvoid main(){}"
  status: SyntaxError
  stderr: '/tmp/tmpeorzl9dx.d(15): Error: no property `to` for type `long`

    Failed: ["dmd", "-unittest", "-v", "-o-", "/tmp/tmpeorzl9dx.d", "-I/tmp"]

    '
  stdout: ''
  timestamp: 1660163029
- exit_code: 1
  program: "import std.math;\n/*\n Return a string containing space-delimited numbers\
    \ starting from 0 upto n inclusive.\n    >>> string_sequence(0L)\n    \"0\"\n\
    \    >>> string_sequence(5L)\n    \"0 1 2 3 4 5\"\n    \n*/\nstring string_sequence(long\
    \ n) \n{\n    string result = \"\";\n    for (long i = 0; i <= n; i++) \n    {\n\
    \        result += to!string(i);\n        if (i < n) \n        {\n           \
    \ result += \" \";\n        }\n    }\n    return result;\n}\nunittest\n{\n   \
    \ alias candidate = string_sequence;\n\n    assert(candidate(0L) == \"0\");\n\
    \    assert(candidate(3L) == \"0 1 2 3\");\n    assert(candidate(10L) == \"0 1\
    \ 2 3 4 5 6 7 8 9 10\");\n}\nvoid main(){}"
  status: SyntaxError
  stderr: '/tmp/tmp5z7ughf1.d(15): Error: template instance `to!string` template `to`
    is not defined

    /tmp/tmp5z7ughf1.d(18): Error: slice `result` is not mutable

    Failed: ["dmd", "-unittest", "-v", "-o-", "/tmp/tmp5z7ughf1.d", "-I/tmp"]

    '
  stdout: ''
  timestamp: 1660163029
- exit_code: 1
  program: "import std.math;\n/*\n Return a string containing space-delimited numbers\
    \ starting from 0 upto n inclusive.\n    >>> string_sequence(0L)\n    \"0\"\n\
    \    >>> string_sequence(5L)\n    \"0 1 2 3 4 5\"\n    \n*/\nstring string_sequence(long\
    \ n) \n{\n    string s = \"\";\n    for (long i = 0; i <= n; i++)\n    {\n   \
    \     s += to!string(i);\n        if (i != n)\n            s += \" \";\n    }\n\
    \    return s;\n}\nunittest\n{\n    alias candidate = string_sequence;\n\n   \
    \ assert(candidate(0L) == \"0\");\n    assert(candidate(3L) == \"0 1 2 3\");\n\
    \    assert(candidate(10L) == \"0 1 2 3 4 5 6 7 8 9 10\");\n}\nvoid main(){}"
  status: SyntaxError
  stderr: '/tmp/tmpbm3usd8m.d(15): Error: template instance `to!string` template `to`
    is not defined

    /tmp/tmpbm3usd8m.d(17): Error: slice `s` is not mutable

    Failed: ["dmd", "-unittest", "-v", "-o-", "/tmp/tmpbm3usd8m.d", "-I/tmp"]

    '
  stdout: ''
  timestamp: 1660163029
- exit_code: 1
  program: "import std.math;\n/*\n Return a string containing space-delimited numbers\
    \ starting from 0 upto n inclusive.\n    >>> string_sequence(0L)\n    \"0\"\n\
    \    >>> string_sequence(5L)\n    \"0 1 2 3 4 5\"\n    \n*/\nstring string_sequence(long\
    \ n) \n{\n    string result;\n    foreach (i; 0L .. n + 1L)\n    {\n        result\
    \ ~= to!string(i) ~ \" \";\n    }\n    return result;\n}\nunittest\n{\n    alias\
    \ candidate = string_sequence;\n\n    assert(candidate(0L) == \"0\");\n    assert(candidate(3L)\
    \ == \"0 1 2 3\");\n    assert(candidate(10L) == \"0 1 2 3 4 5 6 7 8 9 10\");\n\
    }\nvoid main(){}"
  status: SyntaxError
  stderr: '/tmp/tmp6ptkbkg7.d(15): Error: template instance `to!string` template `to`
    is not defined

    Failed: ["dmd", "-unittest", "-v", "-o-", "/tmp/tmp6ptkbkg7.d", "-I/tmp"]

    '
  stdout: ''
  timestamp: 1660163029
- exit_code: 1
  program: "import std.math;\n/*\n Return a string containing space-delimited numbers\
    \ starting from 0 upto n inclusive.\n    >>> string_sequence(0L)\n    \"0\"\n\
    \    >>> string_sequence(5L)\n    \"0 1 2 3 4 5\"\n    \n*/\nstring string_sequence(long\
    \ n) \n{\n    string s = \"\";\n    for (long i = 0; i <= n; i++)\n    {\n   \
    \     s += to!string(i);\n        if (i < n)\n            s += \" \";\n    }\n\
    \    return s;\n}\nunittest\n{\n    alias candidate = string_sequence;\n\n   \
    \ assert(candidate(0L) == \"0\");\n    assert(candidate(3L) == \"0 1 2 3\");\n\
    \    assert(candidate(10L) == \"0 1 2 3 4 5 6 7 8 9 10\");\n}\nvoid main(){}"
  status: SyntaxError
  stderr: '/tmp/tmp4_5za_8c.d(15): Error: template instance `to!string` template `to`
    is not defined

    /tmp/tmp4_5za_8c.d(17): Error: slice `s` is not mutable

    Failed: ["dmd", "-unittest", "-v", "-o-", "/tmp/tmp4_5za_8c.d", "-I/tmp"]

    '
  stdout: ''
  timestamp: 1660163029
- exit_code: 1
  program: "import std.math;\n/*\n Return a string containing space-delimited numbers\
    \ starting from 0 upto n inclusive.\n    >>> string_sequence(0L)\n    \"0\"\n\
    \    >>> string_sequence(5L)\n    \"0 1 2 3 4 5\"\n    \n*/\nstring string_sequence(long\
    \ n) \n{\n    string result = \"\";\n    for (long i = 0; i <= n; i++)\n    {\n\
    \        result += to!string(i) + \" \";\n    }\n    return result;\n}\nunittest\n\
    {\n    alias candidate = string_sequence;\n\n    assert(candidate(0L) == \"0\"\
    );\n    assert(candidate(3L) == \"0 1 2 3\");\n    assert(candidate(10L) == \"\
    0 1 2 3 4 5 6 7 8 9 10\");\n}\nvoid main(){}"
  status: SyntaxError
  stderr: '/tmp/tmpbl63d6z8.d(15): Error: template instance `to!string` template `to`
    is not defined

    Failed: ["dmd", "-unittest", "-v", "-o-", "/tmp/tmpbl63d6z8.d", "-I/tmp"]

    '
  stdout: ''
  timestamp: 1660163029
- exit_code: 1
  program: "import std.math;\n/*\n Return a string containing space-delimited numbers\
    \ starting from 0 upto n inclusive.\n    >>> string_sequence(0L)\n    \"0\"\n\
    \    >>> string_sequence(5L)\n    \"0 1 2 3 4 5\"\n    \n*/\nstring string_sequence(long\
    \ n) \n{\n    string s = \"\";\n    for (long i = 0; i <= n; i++) \n    {\n  \
    \      s += to!string(i);\n        if (i < n) \n        {\n            s += \"\
    \ \";\n        }\n    }\n    return s;\n}\n/*\n Return a string containing space-delimited\
    \ numbers starting from 0 upto n inclusive.\n    >>> string_sequence(0L)\n   \
    \ \"0\"\n    >>> string_sequence(5L)\n    \"0 1 2 3 4 5\"\n    \n*/\nstring string_sequence(long\
    \ n) \n{\n    string s = \"\";\n    for (long i = 0; i <= n; i++) \n    {\n  \
    \      s += to!string(i);\n        if (i < n) \n        {\n            s += \"\
    \ \";\n        }\n    }\n    return s;\n}\n/*\n Return a string containing space-delimited\
    \ numbers starting from 0 upto n inclusive.\n    >>> string_sequence(0L)\n   \
    \ \"0\"\n    >>> string_sequence(5L)\n    \"0 1 2 3 4 5\"\n    \n*/\nstring string_sequence(long\
    \ n) \n{\n    string s = \"\";\n    for (long i = 0; i <= n; i++) \n    {\n  \
    \      s += to!string(i);\n        if (i < n) \n        {\n            s += \"\
    \ \";\n        }\n    }\n    return s;\n}\n/*\n Return a string containing space-delimited\
    \ numbers starting from 0 upto n inclusive.\n    >>> string_sequence(0L)\n   \
    \ \"0\"\n    >>> string_sequence(5L)\n    \"0 1 2 3 4 5\"\n    \n*/\nstring string_sequence(long\
    \ n) \n{\n    string s = \"\";\n    for (long i = 0; i <= n; i++) \n    {\n  \
    \      s += to!string(i);\n        if (i < n) \n        {\n            s += \"\
    \ \";\n        }\n    }\n    return s;\n}\n/*\n Return a string containing space-delimited\
    \ numbers starting from 0 upto n inclusive.\n\nunittest\n{\n    alias candidate\
    \ = string_sequence;\n\n    assert(candidate(0L) == \"0\");\n    assert(candidate(3L)\
    \ == \"0 1 2 3\");\n    assert(candidate(10L) == \"0 1 2 3 4 5 6 7 8 9 10\");\n\
    }\nvoid main(){}"
  status: SyntaxError
  stderr: '/tmp/tmp157ded59.d(86): Error: unterminated /* */ comment

    Failed: ["dmd", "-unittest", "-v", "-o-", "/tmp/tmp157ded59.d", "-I/tmp"]

    '
  stdout: ''
  timestamp: 1660163029
- exit_code: 1
  program: "import std.math;\n/*\n Return a string containing space-delimited numbers\
    \ starting from 0 upto n inclusive.\n    >>> string_sequence(0L)\n    \"0\"\n\
    \    >>> string_sequence(5L)\n    \"0 1 2 3 4 5\"\n    \n*/\nstring string_sequence(long\
    \ n) \n{\n    string s;\n    for (long i = 0; i <= n; i++)\n        s ~= to!string(i)\
    \ ~ \" \";\n    return s;\n}\nunittest\n{\n    alias candidate = string_sequence;\n\
    \n    assert(candidate(0L) == \"0\");\n    assert(candidate(3L) == \"0 1 2 3\"\
    );\n    assert(candidate(10L) == \"0 1 2 3 4 5 6 7 8 9 10\");\n}\nvoid main(){}"
  status: SyntaxError
  stderr: '/tmp/tmpgkt18khb.d(14): Error: template instance `to!string` template `to`
    is not defined

    Failed: ["dmd", "-unittest", "-v", "-o-", "/tmp/tmpgkt18khb.d", "-I/tmp"]

    '
  stdout: ''
  timestamp: 1660163029
- exit_code: 1
  program: "import std.math;\n/*\n Return a string containing space-delimited numbers\
    \ starting from 0 upto n inclusive.\n    >>> string_sequence(0L)\n    \"0\"\n\
    \    >>> string_sequence(5L)\n    \"0 1 2 3 4 5\"\n    \n*/\nstring string_sequence(long\
    \ n) \n{\n    string result;\n    for (long i = 0; i <= n; i++) \n    {\n    \
    \    result ~= to!string(i);\n        if (i < n) \n        {\n            result\
    \ ~= \" \";\n        }\n    }\n    return result;\n}\nunittest\n{\n    alias candidate\
    \ = string_sequence;\n\n    assert(candidate(0L) == \"0\");\n    assert(candidate(3L)\
    \ == \"0 1 2 3\");\n    assert(candidate(10L) == \"0 1 2 3 4 5 6 7 8 9 10\");\n\
    }\nvoid main(){}"
  status: SyntaxError
  stderr: '/tmp/tmpjitp3ztf.d(15): Error: template instance `to!string` template `to`
    is not defined

    Failed: ["dmd", "-unittest", "-v", "-o-", "/tmp/tmpjitp3ztf.d", "-I/tmp"]

    '
  stdout: ''
  timestamp: 1660163029
- exit_code: 1
  program: "import std.math;\n/*\n Return a string containing space-delimited numbers\
    \ starting from 0 upto n inclusive.\n    >>> string_sequence(0L)\n    \"0\"\n\
    \    >>> string_sequence(5L)\n    \"0 1 2 3 4 5\"\n    \n*/\nstring string_sequence(long\
    \ n) \n{\n    string result;\n    for (long i = 0; i <= n; i++) \n    {\n    \
    \    result ~= to!string(i);\n        if (i < n) \n        {\n            result\
    \ ~= \" \";\n        }\n    }\n    return result;\n}\nunittest\n{\n    alias candidate\
    \ = string_sequence;\n\n    assert(candidate(0L) == \"0\");\n    assert(candidate(3L)\
    \ == \"0 1 2 3\");\n    assert(candidate(10L) == \"0 1 2 3 4 5 6 7 8 9 10\");\n\
    }\nvoid main(){}"
  status: SyntaxError
  stderr: '/tmp/tmpjitp3ztf.d(15): Error: template instance `to!string` template `to`
    is not defined

    Failed: ["dmd", "-unittest", "-v", "-o-", "/tmp/tmpjitp3ztf.d", "-I/tmp"]

    '
  stdout: ''
  timestamp: 1660163029
- exit_code: 1
  program: "import std.math;\n/*\n Return a string containing space-delimited numbers\
    \ starting from 0 upto n inclusive.\n    >>> string_sequence(0L)\n    \"0\"\n\
    \    >>> string_sequence(5L)\n    \"0 1 2 3 4 5\"\n    \n*/\nstring string_sequence(long\
    \ n) \n{\n    string result;\n    for (long i = 0; i <= n; i++) \n    {\n    \
    \    result ~= to!string(i);\n        if (i < n)\n            result ~= \" \"\
    ;\n    }\n    return result;\n}\nunittest\n{\n    alias candidate = string_sequence;\n\
    \n    assert(candidate(0L) == \"0\");\n    assert(candidate(3L) == \"0 1 2 3\"\
    );\n    assert(candidate(10L) == \"0 1 2 3 4 5 6 7 8 9 10\");\n}\nvoid main(){}"
  status: SyntaxError
  stderr: '/tmp/tmpswbsmrub.d(15): Error: template instance `to!string` template `to`
    is not defined

    Failed: ["dmd", "-unittest", "-v", "-o-", "/tmp/tmpswbsmrub.d", "-I/tmp"]

    '
  stdout: ''
  timestamp: 1660163029
- exit_code: 1
  program: "import std.math;\n/*\n Return a string containing space-delimited numbers\
    \ starting from 0 upto n inclusive.\n    >>> string_sequence(0L)\n    \"0\"\n\
    \    >>> string_sequence(5L)\n    \"0 1 2 3 4 5\"\n    \n*/\nstring string_sequence(long\
    \ n) \n{\n    string result;\n    foreach (i; 0L .. n + 1L)\n    {\n        result\
    \ ~= to!string(i) ~ \" \";\n    }\n    return result;\n}\nunittest\n{\n    alias\
    \ candidate = string_sequence;\n\n    assert(candidate(0L) == \"0\");\n    assert(candidate(3L)\
    \ == \"0 1 2 3\");\n    assert(candidate(10L) == \"0 1 2 3 4 5 6 7 8 9 10\");\n\
    }\nvoid main(){}"
  status: SyntaxError
  stderr: '/tmp/tmp6ptkbkg7.d(15): Error: template instance `to!string` template `to`
    is not defined

    Failed: ["dmd", "-unittest", "-v", "-o-", "/tmp/tmp6ptkbkg7.d", "-I/tmp"]

    '
  stdout: ''
  timestamp: 1660163029
- exit_code: 1
  program: "import std.math;\n/*\n Return a string containing space-delimited numbers\
    \ starting from 0 upto n inclusive.\n    >>> string_sequence(0L)\n    \"0\"\n\
    \    >>> string_sequence(5L)\n    \"0 1 2 3 4 5\"\n    \n*/\nstring string_sequence(long\
    \ n) \n{\n    string result = \"\";\n    foreach (i; 0L .. n + 1L)\n    {\n  \
    \      result ~= i.to!string;\n        if (i != n)\n            result ~= \" \"\
    ;\n    }\n    return result;\n}\nunittest\n{\n    alias candidate = string_sequence;\n\
    \n    assert(candidate(0L) == \"0\");\n    assert(candidate(3L) == \"0 1 2 3\"\
    );\n    assert(candidate(10L) == \"0 1 2 3 4 5 6 7 8 9 10\");\n}\nvoid main(){}"
  status: SyntaxError
  stderr: '/tmp/tmpah81_gdo.d(15): Error: no property `to` for type `long`

    Failed: ["dmd", "-unittest", "-v", "-o-", "/tmp/tmpah81_gdo.d", "-I/tmp"]

    '
  stdout: ''
  timestamp: 1660163029
- exit_code: 1
  program: "import std.math;\n/*\n Return a string containing space-delimited numbers\
    \ starting from 0 upto n inclusive.\n    >>> string_sequence(0L)\n    \"0\"\n\
    \    >>> string_sequence(5L)\n    \"0 1 2 3 4 5\"\n    \n*/\nstring string_sequence(long\
    \ n) \n{\n    string s = \"\";\n    foreach (i; 0..n+1)\n    {\n        s ~= to!string(i)\
    \ ~ \" \";\n    }\n    return s;\n}\nunittest\n{\n    alias candidate = string_sequence;\n\
    \n    assert(candidate(0L) == \"0\");\n    assert(candidate(3L) == \"0 1 2 3\"\
    );\n    assert(candidate(10L) == \"0 1 2 3 4 5 6 7 8 9 10\");\n}\nvoid main(){}"
  status: SyntaxError
  stderr: '/tmp/tmpdwyhzyoy.d(15): Error: template instance `to!string` template `to`
    is not defined

    Failed: ["dmd", "-unittest", "-v", "-o-", "/tmp/tmpdwyhzyoy.d", "-I/tmp"]

    '
  stdout: ''
  timestamp: 1660163029
- exit_code: 1
  program: "import std.math;\n/*\n Return a string containing space-delimited numbers\
    \ starting from 0 upto n inclusive.\n    >>> string_sequence(0L)\n    \"0\"\n\
    \    >>> string_sequence(5L)\n    \"0 1 2 3 4 5\"\n    \n*/\nstring string_sequence(long\
    \ n) \n{\n    string result = \"\";\n    for (long i = 0; i <= n; i++)\n    {\n\
    \        result += to!string(i) + \" \";\n    }\n    return result;\n}\nunittest\n\
    {\n    alias candidate = string_sequence;\n\n    assert(candidate(0L) == \"0\"\
    );\n    assert(candidate(3L) == \"0 1 2 3\");\n    assert(candidate(10L) == \"\
    0 1 2 3 4 5 6 7 8 9 10\");\n}\nvoid main(){}"
  status: SyntaxError
  stderr: '/tmp/tmpbl63d6z8.d(15): Error: template instance `to!string` template `to`
    is not defined

    Failed: ["dmd", "-unittest", "-v", "-o-", "/tmp/tmpbl63d6z8.d", "-I/tmp"]

    '
  stdout: ''
  timestamp: 1660163029
- exit_code: 1
  program: "import std.math;\n/*\n Return a string containing space-delimited numbers\
    \ starting from 0 upto n inclusive.\n    >>> string_sequence(0L)\n    \"0\"\n\
    \    >>> string_sequence(5L)\n    \"0 1 2 3 4 5\"\n    \n*/\nstring string_sequence(long\
    \ n) \n{\n    string result;\n    foreach (i; 0L .. n + 1L)\n    {\n        result\
    \ ~= to!string(i) ~ \" \";\n    }\n    return result;\n}\nunittest\n{\n    alias\
    \ candidate = string_sequence;\n\n    assert(candidate(0L) == \"0\");\n    assert(candidate(3L)\
    \ == \"0 1 2 3\");\n    assert(candidate(10L) == \"0 1 2 3 4 5 6 7 8 9 10\");\n\
    }\nvoid main(){}"
  status: SyntaxError
  stderr: '/tmp/tmp6ptkbkg7.d(15): Error: template instance `to!string` template `to`
    is not defined

    Failed: ["dmd", "-unittest", "-v", "-o-", "/tmp/tmp6ptkbkg7.d", "-I/tmp"]

    '
  stdout: ''
  timestamp: 1660163029
- exit_code: 1
  program: "import std.math;\n/*\n Return a string containing space-delimited numbers\
    \ starting from 0 upto n inclusive.\n    >>> string_sequence(0L)\n    \"0\"\n\
    \    >>> string_sequence(5L)\n    \"0 1 2 3 4 5\"\n    \n*/\nstring string_sequence(long\
    \ n) \n{\n    string s = \"\";\n    for (long i = 0; i <= n; i++)\n    {\n   \
    \     s += to!string(i);\n        if (i < n)\n            s += \" \";\n    }\n\
    \    return s;\n}\nunittest\n{\n    alias candidate = string_sequence;\n\n   \
    \ assert(candidate(0L) == \"0\");\n    assert(candidate(3L) == \"0 1 2 3\");\n\
    \    assert(candidate(10L) == \"0 1 2 3 4 5 6 7 8 9 10\");\n}\nvoid main(){}"
  status: SyntaxError
  stderr: '/tmp/tmp4_5za_8c.d(15): Error: template instance `to!string` template `to`
    is not defined

    /tmp/tmp4_5za_8c.d(17): Error: slice `s` is not mutable

    Failed: ["dmd", "-unittest", "-v", "-o-", "/tmp/tmp4_5za_8c.d", "-I/tmp"]

    '
  stdout: ''
  timestamp: 1660163029
- exit_code: 1
  program: "import std.math;\n/*\n Return a string containing space-delimited numbers\
    \ starting from 0 upto n inclusive.\n    >>> string_sequence(0L)\n    \"0\"\n\
    \    >>> string_sequence(5L)\n    \"0 1 2 3 4 5\"\n    \n*/\nstring string_sequence(long\
    \ n) \n{\n    string result;\n    foreach (i; 0L .. n + 1L)\n    {\n        result\
    \ ~= to!string(i) ~ \" \";\n    }\n    return result.trimRight();\n}\nunittest\n\
    {\n    alias candidate = string_sequence;\n\n    assert(candidate(0L) == \"0\"\
    );\n    assert(candidate(3L) == \"0 1 2 3\");\n    assert(candidate(10L) == \"\
    0 1 2 3 4 5 6 7 8 9 10\");\n}\nvoid main(){}"
  status: SyntaxError
  stderr: '/tmp/tmp1oyrqv3_.d(15): Error: template instance `to!string` template `to`
    is not defined

    /tmp/tmp1oyrqv3_.d(17): Error: no property `trimRight` for type `string`

    Failed: ["dmd", "-unittest", "-v", "-o-", "/tmp/tmp1oyrqv3_.d", "-I/tmp"]

    '
  stdout: ''
  timestamp: 1660163029
- exit_code: 1
  program: "import std.math;\n/*\n Return a string containing space-delimited numbers\
    \ starting from 0 upto n inclusive.\n    >>> string_sequence(0L)\n    \"0\"\n\
    \    >>> string_sequence(5L)\n    \"0 1 2 3 4 5\"\n    \n*/\nstring string_sequence(long\
    \ n) \n{\n    string result = \"\";\n    for (long i = 0; i <= n; i++) \n    {\n\
    \        result += to!string(i);\n        if (i < n) \n        {\n           \
    \ result += \" \";\n        }\n    }\n    return result;\n}\nunittest\n{\n   \
    \ alias candidate = string_sequence;\n\n    assert(candidate(0L) == \"0\");\n\
    \    assert(candidate(3L) == \"0 1 2 3\");\n    assert(candidate(10L) == \"0 1\
    \ 2 3 4 5 6 7 8 9 10\");\n}\nvoid main(){}"
  status: SyntaxError
  stderr: '/tmp/tmp5z7ughf1.d(15): Error: template instance `to!string` template `to`
    is not defined

    /tmp/tmp5z7ughf1.d(18): Error: slice `result` is not mutable

    Failed: ["dmd", "-unittest", "-v", "-o-", "/tmp/tmp5z7ughf1.d", "-I/tmp"]

    '
  stdout: ''
  timestamp: 1660163029
- exit_code: 1
  program: "import std.math;\n/*\n Return a string containing space-delimited numbers\
    \ starting from 0 upto n inclusive.\n    >>> string_sequence(0L)\n    \"0\"\n\
    \    >>> string_sequence(5L)\n    \"0 1 2 3 4 5\"\n    \n*/\nstring string_sequence(long\
    \ n) \n{\n    string result = \"\";\n    foreach (i; 0L .. n + 1L)\n    {\n  \
    \      result ~= i.to!string;\n        if (i != n)\n            result ~= \" \"\
    ;\n    }\n    return result;\n}\nunittest\n{\n    alias candidate = string_sequence;\n\
    \n    assert(candidate(0L) == \"0\");\n    assert(candidate(3L) == \"0 1 2 3\"\
    );\n    assert(candidate(10L) == \"0 1 2 3 4 5 6 7 8 9 10\");\n}\nvoid main(){}"
  status: SyntaxError
  stderr: '/tmp/tmpah81_gdo.d(15): Error: no property `to` for type `long`

    Failed: ["dmd", "-unittest", "-v", "-o-", "/tmp/tmpah81_gdo.d", "-I/tmp"]

    '
  stdout: ''
  timestamp: 1660163029
- exit_code: 1
  program: "import std.math;\n/*\n Return a string containing space-delimited numbers\
    \ starting from 0 upto n inclusive.\n    >>> string_sequence(0L)\n    \"0\"\n\
    \    >>> string_sequence(5L)\n    \"0 1 2 3 4 5\"\n    \n*/\nstring string_sequence(long\
    \ n) \n{\n    string result = \"\";\n    foreach (i; 0L .. n + 1L) \n    {\n \
    \       result ~= i;\n        if (i < n) \n        {\n            result ~= \"\
    \ \";\n        }\n    }\n    return result;\n}\nunittest\n{\n    alias candidate\
    \ = string_sequence;\n\n    assert(candidate(0L) == \"0\");\n    assert(candidate(3L)\
    \ == \"0 1 2 3\");\n    assert(candidate(10L) == \"0 1 2 3 4 5 6 7 8 9 10\");\n\
    }\nvoid main(){}"
  status: SyntaxError
  stderr: '/tmp/tmpzgabjtwg.d(15): Error: cannot append type `long` to type `string`

    Failed: ["dmd", "-unittest", "-v", "-o-", "/tmp/tmpzgabjtwg.d", "-I/tmp"]

    '
  stdout: ''
  timestamp: 1660163029
- exit_code: 1
  program: "import std.math;\n/*\n Return a string containing space-delimited numbers\
    \ starting from 0 upto n inclusive.\n    >>> string_sequence(0L)\n    \"0\"\n\
    \    >>> string_sequence(5L)\n    \"0 1 2 3 4 5\"\n    \n*/\nstring string_sequence(long\
    \ n) \n{\n    string result;\n    for (long i = 0; i <= n; i++) \n    {\n    \
    \    result ~= to!string(i) ~ \" \";\n    }\n    return result;\n}\nunittest\n\
    {\n    alias candidate = string_sequence;\n\n    assert(candidate(0L) == \"0\"\
    );\n    assert(candidate(3L) == \"0 1 2 3\");\n    assert(candidate(10L) == \"\
    0 1 2 3 4 5 6 7 8 9 10\");\n}\nvoid main(){}"
  status: SyntaxError
  stderr: '/tmp/tmp3_r8bc1s.d(15): Error: template instance `to!string` template `to`
    is not defined

    Failed: ["dmd", "-unittest", "-v", "-o-", "/tmp/tmp3_r8bc1s.d", "-I/tmp"]

    '
  stdout: ''
  timestamp: 1660163029
- exit_code: 1
  program: "import std.math;\n/*\n Return a string containing space-delimited numbers\
    \ starting from 0 upto n inclusive.\n    >>> string_sequence(0L)\n    \"0\"\n\
    \    >>> string_sequence(5L)\n    \"0 1 2 3 4 5\"\n    \n*/\nstring string_sequence(long\
    \ n) \n{\n    string s = \"\";\n    foreach (i; 0L .. n + 1L)\n    {\n       \
    \ s ~= to!string(i) ~ \" \";\n    }\n    return s;\n}\nunittest\n{\n    alias\
    \ candidate = string_sequence;\n\n    assert(candidate(0L) == \"0\");\n    assert(candidate(3L)\
    \ == \"0 1 2 3\");\n    assert(candidate(10L) == \"0 1 2 3 4 5 6 7 8 9 10\");\n\
    }\nvoid main(){}"
  status: SyntaxError
  stderr: '/tmp/tmph2b6x3x5.d(15): Error: template instance `to!string` template `to`
    is not defined

    Failed: ["dmd", "-unittest", "-v", "-o-", "/tmp/tmph2b6x3x5.d", "-I/tmp"]

    '
  stdout: ''
  timestamp: 1660163029
- exit_code: 1
  program: "import std.math;\n/*\n Return a string containing space-delimited numbers\
    \ starting from 0 upto n inclusive.\n    >>> string_sequence(0L)\n    \"0\"\n\
    \    >>> string_sequence(5L)\n    \"0 1 2 3 4 5\"\n    \n*/\nstring string_sequence(long\
    \ n) \n{\n    string result = \"\";\n    for (long i = 0; i <= n; i++)\n    {\n\
    \        result += to!string(i) + \" \";\n    }\n    return result.stripRight();\n\
    }\nunittest\n{\n    alias candidate = string_sequence;\n\n    assert(candidate(0L)\
    \ == \"0\");\n    assert(candidate(3L) == \"0 1 2 3\");\n    assert(candidate(10L)\
    \ == \"0 1 2 3 4 5 6 7 8 9 10\");\n}\nvoid main(){}"
  status: SyntaxError
  stderr: '/tmp/tmp079nxrae.d(15): Error: template instance `to!string` template `to`
    is not defined

    /tmp/tmp079nxrae.d(17): Error: no property `stripRight` for type `string`

    Failed: ["dmd", "-unittest", "-v", "-o-", "/tmp/tmp079nxrae.d", "-I/tmp"]

    '
  stdout: ''
  timestamp: 1660163029
- exit_code: 1
  program: "import std.math;\n/*\n Return a string containing space-delimited numbers\
    \ starting from 0 upto n inclusive.\n    >>> string_sequence(0L)\n    \"0\"\n\
    \    >>> string_sequence(5L)\n    \"0 1 2 3 4 5\"\n    \n*/\nstring string_sequence(long\
    \ n) \n{\n    string s = \"\";\n    foreach (i; 0L .. n + 1L)\n    {\n       \
    \ s ~= i;\n        if (i < n)\n            s ~= \" \";\n    }\n    return s;\n\
    }\nunittest\n{\n    alias candidate = string_sequence;\n\n    assert(candidate(0L)\
    \ == \"0\");\n    assert(candidate(3L) == \"0 1 2 3\");\n    assert(candidate(10L)\
    \ == \"0 1 2 3 4 5 6 7 8 9 10\");\n}\nvoid main(){}"
  status: SyntaxError
  stderr: '/tmp/tmpaiadck46.d(15): Error: cannot append type `long` to type `string`

    Failed: ["dmd", "-unittest", "-v", "-o-", "/tmp/tmpaiadck46.d", "-I/tmp"]

    '
  stdout: ''
  timestamp: 1660163029
- exit_code: 1
  program: "import std.math;\n/*\n Return a string containing space-delimited numbers\
    \ starting from 0 upto n inclusive.\n    >>> string_sequence(0L)\n    \"0\"\n\
    \    >>> string_sequence(5L)\n    \"0 1 2 3 4 5\"\n    \n*/\nstring string_sequence(long\
    \ n) \n{\n    string s = \"\";\n    for (long i = 0; i <= n; i++)\n    {\n   \
    \     s = s ~ to!string(i) ~ \" \";\n    }\n    return s;\n}\nunittest\n{\n  \
    \  alias candidate = string_sequence;\n\n    assert(candidate(0L) == \"0\");\n\
    \    assert(candidate(3L) == \"0 1 2 3\");\n    assert(candidate(10L) == \"0 1\
    \ 2 3 4 5 6 7 8 9 10\");\n}\nvoid main(){}"
  status: SyntaxError
  stderr: '/tmp/tmpx0ordsim.d(15): Error: template instance `to!string` template `to`
    is not defined

    Failed: ["dmd", "-unittest", "-v", "-o-", "/tmp/tmpx0ordsim.d", "-I/tmp"]

    '
  stdout: ''
  timestamp: 1660163029
- exit_code: 1
  program: "import std.math;\n/*\n Return a string containing space-delimited numbers\
    \ starting from 0 upto n inclusive.\n    >>> string_sequence(0L)\n    \"0\"\n\
    \    >>> string_sequence(5L)\n    \"0 1 2 3 4 5\"\n    \n*/\nstring string_sequence(long\
    \ n) \n{\n    string result = \"\";\n    for (long i = 0; i <= n; i++) \n    {\n\
    \        result += to!string(i);\n        if (i < n)\n            result += \"\
    \ \";\n    }\n    return result;\n}\nunittest\n{\n    alias candidate = string_sequence;\n\
    \n    assert(candidate(0L) == \"0\");\n    assert(candidate(3L) == \"0 1 2 3\"\
    );\n    assert(candidate(10L) == \"0 1 2 3 4 5 6 7 8 9 10\");\n}\nvoid main(){}"
  status: SyntaxError
  stderr: '/tmp/tmp1fswe0bx.d(15): Error: template instance `to!string` template `to`
    is not defined

    /tmp/tmp1fswe0bx.d(17): Error: slice `result` is not mutable

    Failed: ["dmd", "-unittest", "-v", "-o-", "/tmp/tmp1fswe0bx.d", "-I/tmp"]

    '
  stdout: ''
  timestamp: 1660163029
- exit_code: 1
  program: "import std.math;\n/*\n Return a string containing space-delimited numbers\
    \ starting from 0 upto n inclusive.\n    >>> string_sequence(0L)\n    \"0\"\n\
    \    >>> string_sequence(5L)\n    \"0 1 2 3 4 5\"\n    \n*/\nstring string_sequence(long\
    \ n) \n{\n    string result = \"\";\n    for (long i = 0; i <= n; i++) \n    {\n\
    \        result = result ~ i ~ \" \";\n    }\n    return result;\n}\nunittest\n\
    {\n    alias candidate = string_sequence;\n\n    assert(candidate(0L) == \"0\"\
    );\n    assert(candidate(3L) == \"0 1 2 3\");\n    assert(candidate(10L) == \"\
    0 1 2 3 4 5 6 7 8 9 10\");\n}\nvoid main(){}"
  status: SyntaxError
  stderr: '/tmp/tmptwq1697g.d(15): Error: incompatible types for `(result) ~ (i)`:
    `string` and `long`

    Failed: ["dmd", "-unittest", "-v", "-o-", "/tmp/tmptwq1697g.d", "-I/tmp"]

    '
  stdout: ''
  timestamp: 1660163029
- exit_code: 1
  program: "import std.math;\n/*\n Return a string containing space-delimited numbers\
    \ starting from 0 upto n inclusive.\n    >>> string_sequence(0L)\n    \"0\"\n\
    \    >>> string_sequence(5L)\n    \"0 1 2 3 4 5\"\n    \n*/\nstring string_sequence(long\
    \ n) \n{\n    string s = \"\";\n    for (long i = 0; i <= n; i++) \n    {\n  \
    \      s += to!string(i);\n        if (i < n) \n        {\n            s += \"\
    \ \";\n        }\n    }\n    return s;\n}\nunittest\n{\n    alias candidate =\
    \ string_sequence;\n\n    assert(candidate(0L) == \"0\");\n    assert(candidate(3L)\
    \ == \"0 1 2 3\");\n    assert(candidate(10L) == \"0 1 2 3 4 5 6 7 8 9 10\");\n\
    }\nvoid main(){}"
  status: SyntaxError
  stderr: '/tmp/tmp77xzgxnt.d(15): Error: template instance `to!string` template `to`
    is not defined

    /tmp/tmp77xzgxnt.d(18): Error: slice `s` is not mutable

    Failed: ["dmd", "-unittest", "-v", "-o-", "/tmp/tmp77xzgxnt.d", "-I/tmp"]

    '
  stdout: ''
  timestamp: 1660163029
- exit_code: 1
  program: "import std.math;\n/*\n Return a string containing space-delimited numbers\
    \ starting from 0 upto n inclusive.\n    >>> string_sequence(0L)\n    \"0\"\n\
    \    >>> string_sequence(5L)\n    \"0 1 2 3 4 5\"\n    \n*/\nstring string_sequence(long\
    \ n) \n{\n    string s = \"\";\n    for (int i = 0; i <= n; i++) \n    {\n   \
    \     s += to!string(i);\n        if (i < n)\n            s += \" \";\n    }\n\
    \    return s;\n}\nunittest\n{\n    alias candidate = string_sequence;\n\n   \
    \ assert(candidate(0L) == \"0\");\n    assert(candidate(3L) == \"0 1 2 3\");\n\
    \    assert(candidate(10L) == \"0 1 2 3 4 5 6 7 8 9 10\");\n}\nvoid main(){}"
  status: SyntaxError
  stderr: '/tmp/tmpsr5ep5k1.d(15): Error: template instance `to!string` template `to`
    is not defined

    /tmp/tmpsr5ep5k1.d(17): Error: slice `s` is not mutable

    Failed: ["dmd", "-unittest", "-v", "-o-", "/tmp/tmpsr5ep5k1.d", "-I/tmp"]

    '
  stdout: ''
  timestamp: 1660163029
- exit_code: 1
  program: "import std.math;\n/*\n Return a string containing space-delimited numbers\
    \ starting from 0 upto n inclusive.\n    >>> string_sequence(0L)\n    \"0\"\n\
    \    >>> string_sequence(5L)\n    \"0 1 2 3 4 5\"\n    \n*/\nstring string_sequence(long\
    \ n) \n{\n    string result = \"\";\n    for (long i = 0; i <= n; i++)\n    {\n\
    \        result += to!string(i) + \" \";\n    }\n    return result;\n}\nunittest\n\
    {\n    alias candidate = string_sequence;\n\n    assert(candidate(0L) == \"0\"\
    );\n    assert(candidate(3L) == \"0 1 2 3\");\n    assert(candidate(10L) == \"\
    0 1 2 3 4 5 6 7 8 9 10\");\n}\nvoid main(){}"
  status: SyntaxError
  stderr: '/tmp/tmpbl63d6z8.d(15): Error: template instance `to!string` template `to`
    is not defined

    Failed: ["dmd", "-unittest", "-v", "-o-", "/tmp/tmpbl63d6z8.d", "-I/tmp"]

    '
  stdout: ''
  timestamp: 1660163029
- exit_code: 1
  program: "import std.math;\n/*\n Return a string containing space-delimited numbers\
    \ starting from 0 upto n inclusive.\n    >>> string_sequence(0L)\n    \"0\"\n\
    \    >>> string_sequence(5L)\n    \"0 1 2 3 4 5\"\n    \n*/\nstring string_sequence(long\
    \ n) \n{\n    string result = \"\";\n    foreach (i; 0L .. n + 1L)\n    {\n  \
    \      result ~= to!string(i) ~ \" \";\n    }\n    return result;\n}\nunittest\n\
    {\n    alias candidate = string_sequence;\n\n    assert(candidate(0L) == \"0\"\
    );\n    assert(candidate(3L) == \"0 1 2 3\");\n    assert(candidate(10L) == \"\
    0 1 2 3 4 5 6 7 8 9 10\");\n}\nvoid main(){}"
  status: SyntaxError
  stderr: '/tmp/tmprtj2maoj.d(15): Error: template instance `to!string` template `to`
    is not defined

    Failed: ["dmd", "-unittest", "-v", "-o-", "/tmp/tmprtj2maoj.d", "-I/tmp"]

    '
  stdout: ''
  timestamp: 1660163029
- exit_code: 1
  program: "import std.math;\n/*\n Return a string containing space-delimited numbers\
    \ starting from 0 upto n inclusive.\n    >>> string_sequence(0L)\n    \"0\"\n\
    \    >>> string_sequence(5L)\n    \"0 1 2 3 4 5\"\n    \n*/\nstring string_sequence(long\
    \ n) \n{\n    string result = \"\";\n    foreach (i; 0L .. n + 1L)\n    {\n  \
    \      result ~= to!string(i) ~ \" \";\n    }\n    return result;\n}\nunittest\n\
    {\n    alias candidate = string_sequence;\n\n    assert(candidate(0L) == \"0\"\
    );\n    assert(candidate(3L) == \"0 1 2 3\");\n    assert(candidate(10L) == \"\
    0 1 2 3 4 5 6 7 8 9 10\");\n}\nvoid main(){}"
  status: SyntaxError
  stderr: '/tmp/tmprtj2maoj.d(15): Error: template instance `to!string` template `to`
    is not defined

    Failed: ["dmd", "-unittest", "-v", "-o-", "/tmp/tmprtj2maoj.d", "-I/tmp"]

    '
  stdout: ''
  timestamp: 1660163029
- exit_code: 1
  program: "import std.math;\n/*\n Return a string containing space-delimited numbers\
    \ starting from 0 upto n inclusive.\n    >>> string_sequence(0L)\n    \"0\"\n\
    \    >>> string_sequence(5L)\n    \"0 1 2 3 4 5\"\n    \n*/\nstring string_sequence(long\
    \ n) \n{\n    string result;\n    foreach (i; 0L .. n + 1L)\n    {\n        result\
    \ ~= i.to!string;\n        if (i != n)\n            result ~= \" \";\n    }\n\
    \    return result;\n}\nunittest\n{\n    alias candidate = string_sequence;\n\n\
    \    assert(candidate(0L) == \"0\");\n    assert(candidate(3L) == \"0 1 2 3\"\
    );\n    assert(candidate(10L) == \"0 1 2 3 4 5 6 7 8 9 10\");\n}\nvoid main(){}"
  status: SyntaxError
  stderr: '/tmp/tmpqwieuzn1.d(15): Error: no property `to` for type `long`

    Failed: ["dmd", "-unittest", "-v", "-o-", "/tmp/tmpqwieuzn1.d", "-I/tmp"]

    '
  stdout: ''
  timestamp: 1660163029
- exit_code: 1
  program: "import std.math;\n/*\n Return a string containing space-delimited numbers\
    \ starting from 0 upto n inclusive.\n    >>> string_sequence(0L)\n    \"0\"\n\
    \    >>> string_sequence(5L)\n    \"0 1 2 3 4 5\"\n    \n*/\nstring string_sequence(long\
    \ n) \n{\n    string result = \"\";\n    for (long i = 0; i <= n; i++) \n    {\n\
    \        result += to!string(i);\n        if (i < n) \n        {\n           \
    \ result += \" \";\n        }\n    }\n    return result;\n}\nunittest\n{\n   \
    \ alias candidate = string_sequence;\n\n    assert(candidate(0L) == \"0\");\n\
    \    assert(candidate(3L) == \"0 1 2 3\");\n    assert(candidate(10L) == \"0 1\
    \ 2 3 4 5 6 7 8 9 10\");\n}\nvoid main(){}"
  status: SyntaxError
  stderr: '/tmp/tmp5z7ughf1.d(15): Error: template instance `to!string` template `to`
    is not defined

    /tmp/tmp5z7ughf1.d(18): Error: slice `result` is not mutable

    Failed: ["dmd", "-unittest", "-v", "-o-", "/tmp/tmp5z7ughf1.d", "-I/tmp"]

    '
  stdout: ''
  timestamp: 1660163029
- exit_code: 1
  program: "import std.math;\n/*\n Return a string containing space-delimited numbers\
    \ starting from 0 upto n inclusive.\n    >>> string_sequence(0L)\n    \"0\"\n\
    \    >>> string_sequence(5L)\n    \"0 1 2 3 4 5\"\n    \n*/\nstring string_sequence(long\
    \ n) \n{\n    string result = \"\";\n    for (long i = 0; i <= n; i++)\n    {\n\
    \        result += to!string(i) + \" \";\n    }\n    return result;\n}\nunittest\n\
    {\n    alias candidate = string_sequence;\n\n    assert(candidate(0L) == \"0\"\
    );\n    assert(candidate(3L) == \"0 1 2 3\");\n    assert(candidate(10L) == \"\
    0 1 2 3 4 5 6 7 8 9 10\");\n}\nvoid main(){}"
  status: SyntaxError
  stderr: '/tmp/tmpbl63d6z8.d(15): Error: template instance `to!string` template `to`
    is not defined

    Failed: ["dmd", "-unittest", "-v", "-o-", "/tmp/tmpbl63d6z8.d", "-I/tmp"]

    '
  stdout: ''
  timestamp: 1660163029
- exit_code: 1
  program: "import std.math;\n/*\n Return a string containing space-delimited numbers\
    \ starting from 0 upto n inclusive.\n    >>> string_sequence(0L)\n    \"0\"\n\
    \    >>> string_sequence(5L)\n    \"0 1 2 3 4 5\"\n    \n*/\nstring string_sequence(long\
    \ n) \n{\n    string result = \"\";\n    for (long i = 0; i <= n; i++)\n    {\n\
    \        result += to!string(i) + \" \";\n    }\n    return result;\n}\nunittest\n\
    {\n    alias candidate = string_sequence;\n\n    assert(candidate(0L) == \"0\"\
    );\n    assert(candidate(3L) == \"0 1 2 3\");\n    assert(candidate(10L) == \"\
    0 1 2 3 4 5 6 7 8 9 10\");\n}\nvoid main(){}"
  status: SyntaxError
  stderr: '/tmp/tmpbl63d6z8.d(15): Error: template instance `to!string` template `to`
    is not defined

    Failed: ["dmd", "-unittest", "-v", "-o-", "/tmp/tmpbl63d6z8.d", "-I/tmp"]

    '
  stdout: ''
  timestamp: 1660163029
- exit_code: 1
  program: "import std.math;\n/*\n Return a string containing space-delimited numbers\
    \ starting from 0 upto n inclusive.\n    >>> string_sequence(0L)\n    \"0\"\n\
    \    >>> string_sequence(5L)\n    \"0 1 2 3 4 5\"\n    \n*/\nstring string_sequence(long\
    \ n) \n{\n    string result;\n    for (long i = 0; i <= n; i++) \n    {\n    \
    \    result ~= i;\n        if (i < n) \n        {\n            result ~= \" \"\
    ;\n        }\n    }\n    return result;\n}\nunittest\n{\n    alias candidate =\
    \ string_sequence;\n\n    assert(candidate(0L) == \"0\");\n    assert(candidate(3L)\
    \ == \"0 1 2 3\");\n    assert(candidate(10L) == \"0 1 2 3 4 5 6 7 8 9 10\");\n\
    }\nvoid main(){}"
  status: SyntaxError
  stderr: '/tmp/tmpfa1qz0l8.d(15): Error: cannot append type `long` to type `string`

    Failed: ["dmd", "-unittest", "-v", "-o-", "/tmp/tmpfa1qz0l8.d", "-I/tmp"]

    '
  stdout: ''
  timestamp: 1660163029
- exit_code: 1
  program: "import std.math;\n/*\n Return a string containing space-delimited numbers\
    \ starting from 0 upto n inclusive.\n    >>> string_sequence(0L)\n    \"0\"\n\
    \    >>> string_sequence(5L)\n    \"0 1 2 3 4 5\"\n    \n*/\nstring string_sequence(long\
    \ n) \n{\n    string s = \"\";\n    for (long i = 0; i <= n; i++)\n    {\n   \
    \     s = s ~ to!string(i) ~ \" \";\n    }\n    return s;\n}\nunittest\n{\n  \
    \  alias candidate = string_sequence;\n\n    assert(candidate(0L) == \"0\");\n\
    \    assert(candidate(3L) == \"0 1 2 3\");\n    assert(candidate(10L) == \"0 1\
    \ 2 3 4 5 6 7 8 9 10\");\n}\nvoid main(){}"
  status: SyntaxError
  stderr: '/tmp/tmpx0ordsim.d(15): Error: template instance `to!string` template `to`
    is not defined

    Failed: ["dmd", "-unittest", "-v", "-o-", "/tmp/tmpx0ordsim.d", "-I/tmp"]

    '
  stdout: ''
  timestamp: 1660163029
- exit_code: 1
  program: "import std.math;\n/*\n Return a string containing space-delimited numbers\
    \ starting from 0 upto n inclusive.\n    >>> string_sequence(0L)\n    \"0\"\n\
    \    >>> string_sequence(5L)\n    \"0 1 2 3 4 5\"\n    \n*/\nstring string_sequence(long\
    \ n) \n{\n    string result = \"\";\n    for (long i = 0; i <= n; i++)\n    {\n\
    \        result += to!string(i) + \" \";\n    }\n    return result;\n}\nunittest\n\
    {\n    alias candidate = string_sequence;\n\n    assert(candidate(0L) == \"0\"\
    );\n    assert(candidate(3L) == \"0 1 2 3\");\n    assert(candidate(10L) == \"\
    0 1 2 3 4 5 6 7 8 9 10\");\n}\nvoid main(){}"
  status: SyntaxError
  stderr: '/tmp/tmpbl63d6z8.d(15): Error: template instance `to!string` template `to`
    is not defined

    Failed: ["dmd", "-unittest", "-v", "-o-", "/tmp/tmpbl63d6z8.d", "-I/tmp"]

    '
  stdout: ''
  timestamp: 1660163029
- exit_code: 1
  program: "import std.math;\n/*\n Return a string containing space-delimited numbers\
    \ starting from 0 upto n inclusive.\n    >>> string_sequence(0L)\n    \"0\"\n\
    \    >>> string_sequence(5L)\n    \"0 1 2 3 4 5\"\n    \n*/\nstring string_sequence(long\
    \ n) \n{\n    string s = \"\";\n    for (long i = 0; i <= n; i++) \n    {\n  \
    \      s += to!string(i);\n        if (i < n) \n        {\n            s += \"\
    \ \";\n        }\n    }\n    return s;\n}\nunittest\n{\n    alias candidate =\
    \ string_sequence;\n\n    assert(candidate(0L) == \"0\");\n    assert(candidate(3L)\
    \ == \"0 1 2 3\");\n    assert(candidate(10L) == \"0 1 2 3 4 5 6 7 8 9 10\");\n\
    }\nvoid main(){}"
  status: SyntaxError
  stderr: '/tmp/tmp77xzgxnt.d(15): Error: template instance `to!string` template `to`
    is not defined

    /tmp/tmp77xzgxnt.d(18): Error: slice `s` is not mutable

    Failed: ["dmd", "-unittest", "-v", "-o-", "/tmp/tmp77xzgxnt.d", "-I/tmp"]

    '
  stdout: ''
  timestamp: 1660163029
- exit_code: 1
  program: "import std.math;\n/*\n Return a string containing space-delimited numbers\
    \ starting from 0 upto n inclusive.\n    >>> string_sequence(0L)\n    \"0\"\n\
    \    >>> string_sequence(5L)\n    \"0 1 2 3 4 5\"\n    \n*/\nstring string_sequence(long\
    \ n) \n{\n    string result;\n    foreach (i; 0L .. n + 1L) \n    {\n        result\
    \ ~= i;\n        if (i < n) \n        {\n            result ~= \" \";\n      \
    \  }\n    }\n    return result;\n}\n/*\n Return a string containing space-delimited\
    \ numbers starting from 0 upto n inclusive.\n    >>> string_sequence(0L)\n   \
    \ \"0\"\n    >>> string_sequence(5L)\n    \"0 1 2 3 4 5\"\n    \n*/\nstring string_sequence(long\
    \ n) \n{\n    string result;\n    foreach (i; 0L .. n + 1L) \n    {\n        result\
    \ ~= i;\n        if (i < n) \n        {\n            result ~= \" \";\n      \
    \  }\n    }\n    return result;\n}\n/*\n Return a string containing space-delimited\
    \ numbers starting from 0 upto n inclusive.\n    >>> string_sequence(0L)\n   \
    \ \"0\"\n    >>> string_sequence(5L)\n    \"0 1 2 3 4 5\"\n    \n*/\nstring string_sequence(long\
    \ n) \n{\n    string result;\n    foreach (i; 0L .. n + 1L) \n    {\n        result\
    \ ~= i;\n        if (i < n) \n        {\n            result ~= \" \";\n      \
    \  }\n    }\n    return result;\n}\n/*\n Return a string containing space-delimited\
    \ numbers starting from 0 upto n inclusive.\n    >>> string_sequence(0L)\n   \
    \ \"0\"\n    >>> string_sequence(5L)\n    \"0 1 2 3 4 5\"\n    \n*/\nstring string_sequence(long\
    \ n) \n{\n    string result;\n    foreach (i; 0L .. n + 1L) \n    {\n        result\
    \ ~= i;\n        if (i < n) \n        {\n            result ~= \" \";\n      \
    \  }\n    }\n    return result;\n}\n/*\n Return a string containing space-delimited\
    \ numbers starting from 0 upto n inclusive.\n    >>> string_sequence(0L)\n   \
    \ \"0\"\n   \nunittest\n{\n    alias candidate = string_sequence;\n\n    assert(candidate(0L)\
    \ == \"0\");\n    assert(candidate(3L) == \"0 1 2 3\");\n    assert(candidate(10L)\
    \ == \"0 1 2 3 4 5 6 7 8 9 10\");\n}\nvoid main(){}"
  status: SyntaxError
  stderr: '/tmp/tmpk6oh1cdm.d(86): Error: unterminated /* */ comment

    Failed: ["dmd", "-unittest", "-v", "-o-", "/tmp/tmpk6oh1cdm.d", "-I/tmp"]

    '
  stdout: ''
  timestamp: 1660163029
- exit_code: 1
  program: "import std.math;\n/*\n Return a string containing space-delimited numbers\
    \ starting from 0 upto n inclusive.\n    >>> string_sequence(0L)\n    \"0\"\n\
    \    >>> string_sequence(5L)\n    \"0 1 2 3 4 5\"\n    \n*/\nstring string_sequence(long\
    \ n) \n{\n    string result = \"\";\n    for (long i = 0; i <= n; i++) \n    {\n\
    \        result += to!string(i);\n        if (i < n) \n        {\n           \
    \ result += \" \";\n        }\n    }\n    return result;\n}\nunittest\n{\n   \
    \ alias candidate = string_sequence;\n\n    assert(candidate(0L) == \"0\");\n\
    \    assert(candidate(3L) == \"0 1 2 3\");\n    assert(candidate(10L) == \"0 1\
    \ 2 3 4 5 6 7 8 9 10\");\n}\nvoid main(){}"
  status: SyntaxError
  stderr: '/tmp/tmp5z7ughf1.d(15): Error: template instance `to!string` template `to`
    is not defined

    /tmp/tmp5z7ughf1.d(18): Error: slice `result` is not mutable

    Failed: ["dmd", "-unittest", "-v", "-o-", "/tmp/tmp5z7ughf1.d", "-I/tmp"]

    '
  stdout: ''
  timestamp: 1660163029
- exit_code: 1
  program: "import std.math;\n/*\n Return a string containing space-delimited numbers\
    \ starting from 0 upto n inclusive.\n    >>> string_sequence(0L)\n    \"0\"\n\
    \    >>> string_sequence(5L)\n    \"0 1 2 3 4 5\"\n    \n*/\nstring string_sequence(long\
    \ n) \n{\n    string result;\n    for (long i = 0; i <= n; i++)\n    {\n     \
    \   result ~= to!string(i) ~ \" \";\n    }\n    return result;\n}\nunittest\n\
    {\n    alias candidate = string_sequence;\n\n    assert(candidate(0L) == \"0\"\
    );\n    assert(candidate(3L) == \"0 1 2 3\");\n    assert(candidate(10L) == \"\
    0 1 2 3 4 5 6 7 8 9 10\");\n}\nvoid main(){}"
  status: SyntaxError
  stderr: '/tmp/tmpatn1qnnf.d(15): Error: template instance `to!string` template `to`
    is not defined

    Failed: ["dmd", "-unittest", "-v", "-o-", "/tmp/tmpatn1qnnf.d", "-I/tmp"]

    '
  stdout: ''
  timestamp: 1660163029
- exit_code: 1
  program: "import std.math;\n/*\n Return a string containing space-delimited numbers\
    \ starting from 0 upto n inclusive.\n    >>> string_sequence(0L)\n    \"0\"\n\
    \    >>> string_sequence(5L)\n    \"0 1 2 3 4 5\"\n    \n*/\nstring string_sequence(long\
    \ n) \n{\n    string result;\n    for (long i = 0; i <= n; i++) \n    {\n    \
    \    result ~= to!string(i) ~ \" \";\n    }\n    return result;\n}\nunittest\n\
    {\n    alias candidate = string_sequence;\n\n    assert(candidate(0L) == \"0\"\
    );\n    assert(candidate(3L) == \"0 1 2 3\");\n    assert(candidate(10L) == \"\
    0 1 2 3 4 5 6 7 8 9 10\");\n}\nvoid main(){}"
  status: SyntaxError
  stderr: '/tmp/tmp3_r8bc1s.d(15): Error: template instance `to!string` template `to`
    is not defined

    Failed: ["dmd", "-unittest", "-v", "-o-", "/tmp/tmp3_r8bc1s.d", "-I/tmp"]

    '
  stdout: ''
  timestamp: 1660163029
- exit_code: 1
  program: "import std.math;\n/*\n Return a string containing space-delimited numbers\
    \ starting from 0 upto n inclusive.\n    >>> string_sequence(0L)\n    \"0\"\n\
    \    >>> string_sequence(5L)\n    \"0 1 2 3 4 5\"\n    \n*/\nstring string_sequence(long\
    \ n) \n{\n    string result = \"\";\n    foreach (i; 0L .. n + 1L)\n    {\n  \
    \      result ~= to!string(i) ~ \" \";\n    }\n    return result;\n}\nunittest\n\
    {\n    alias candidate = string_sequence;\n\n    assert(candidate(0L) == \"0\"\
    );\n    assert(candidate(3L) == \"0 1 2 3\");\n    assert(candidate(10L) == \"\
    0 1 2 3 4 5 6 7 8 9 10\");\n}\nvoid main(){}"
  status: SyntaxError
  stderr: '/tmp/tmprtj2maoj.d(15): Error: template instance `to!string` template `to`
    is not defined

    Failed: ["dmd", "-unittest", "-v", "-o-", "/tmp/tmprtj2maoj.d", "-I/tmp"]

    '
  stdout: ''
  timestamp: 1660163029
- exit_code: 1
  program: "import std.math;\n/*\n Return a string containing space-delimited numbers\
    \ starting from 0 upto n inclusive.\n    >>> string_sequence(0L)\n    \"0\"\n\
    \    >>> string_sequence(5L)\n    \"0 1 2 3 4 5\"\n    \n*/\nstring string_sequence(long\
    \ n) \n{\n    string s = \"\";\n    for (long i = 0; i <= n; i++) \n    {\n  \
    \      s += to!string(i);\n        if (i < n) \n        {\n            s += \"\
    \ \";\n        }\n    }\n    return s;\n}\nunittest\n{\n    alias candidate =\
    \ string_sequence;\n\n    assert(candidate(0L) == \"0\");\n    assert(candidate(3L)\
    \ == \"0 1 2 3\");\n    assert(candidate(10L) == \"0 1 2 3 4 5 6 7 8 9 10\");\n\
    }\nvoid main(){}"
  status: SyntaxError
  stderr: '/tmp/tmp77xzgxnt.d(15): Error: template instance `to!string` template `to`
    is not defined

    /tmp/tmp77xzgxnt.d(18): Error: slice `s` is not mutable

    Failed: ["dmd", "-unittest", "-v", "-o-", "/tmp/tmp77xzgxnt.d", "-I/tmp"]

    '
  stdout: ''
  timestamp: 1660163029
- exit_code: 1
  program: "import std.math;\n/*\n Return a string containing space-delimited numbers\
    \ starting from 0 upto n inclusive.\n    >>> string_sequence(0L)\n    \"0\"\n\
    \    >>> string_sequence(5L)\n    \"0 1 2 3 4 5\"\n    \n*/\nstring string_sequence(long\
    \ n) \n{\n    string result;\n    foreach (i; 0L .. n + 1L)\n    {\n        result\
    \ ~= to!string(i) ~ \" \";\n    }\n    return result;\n}\nunittest\n{\n    alias\
    \ candidate = string_sequence;\n\n    assert(candidate(0L) == \"0\");\n    assert(candidate(3L)\
    \ == \"0 1 2 3\");\n    assert(candidate(10L) == \"0 1 2 3 4 5 6 7 8 9 10\");\n\
    }\nvoid main(){}"
  status: SyntaxError
  stderr: '/tmp/tmp6ptkbkg7.d(15): Error: template instance `to!string` template `to`
    is not defined

    Failed: ["dmd", "-unittest", "-v", "-o-", "/tmp/tmp6ptkbkg7.d", "-I/tmp"]

    '
  stdout: ''
  timestamp: 1660163029
- exit_code: 1
  program: "import std.math;\n/*\n Return a string containing space-delimited numbers\
    \ starting from 0 upto n inclusive.\n    >>> string_sequence(0L)\n    \"0\"\n\
    \    >>> string_sequence(5L)\n    \"0 1 2 3 4 5\"\n    \n*/\nstring string_sequence(long\
    \ n) \n{\n    string result = \"\";\n    foreach (i; 0 .. n + 1)\n    {\n    \
    \    result ~= i.to!string;\n        if (i != n)\n            result ~= \" \"\
    ;\n    }\n    return result;\n}\nunittest\n{\n    alias candidate = string_sequence;\n\
    \n    assert(candidate(0L) == \"0\");\n    assert(candidate(3L) == \"0 1 2 3\"\
    );\n    assert(candidate(10L) == \"0 1 2 3 4 5 6 7 8 9 10\");\n}\nvoid main(){}"
  status: SyntaxError
  stderr: '/tmp/tmp4f1wjd0q.d(15): Error: no property `to` for type `long`

    Failed: ["dmd", "-unittest", "-v", "-o-", "/tmp/tmp4f1wjd0q.d", "-I/tmp"]

    '
  stdout: ''
  timestamp: 1660163029
- exit_code: 1
  program: "import std.math;\n/*\n Return a string containing space-delimited numbers\
    \ starting from 0 upto n inclusive.\n    >>> string_sequence(0L)\n    \"0\"\n\
    \    >>> string_sequence(5L)\n    \"0 1 2 3 4 5\"\n    \n*/\nstring string_sequence(long\
    \ n) \n{\n    string result = \"\";\n    foreach (i; 0L .. n + 1L)\n    {\n  \
    \      result ~= to!string(i) ~ \" \";\n    }\n    return result;\n}\nunittest\n\
    {\n    alias candidate = string_sequence;\n\n    assert(candidate(0L) == \"0\"\
    );\n    assert(candidate(3L) == \"0 1 2 3\");\n    assert(candidate(10L) == \"\
    0 1 2 3 4 5 6 7 8 9 10\");\n}\nvoid main(){}"
  status: SyntaxError
  stderr: '/tmp/tmprtj2maoj.d(15): Error: template instance `to!string` template `to`
    is not defined

    Failed: ["dmd", "-unittest", "-v", "-o-", "/tmp/tmprtj2maoj.d", "-I/tmp"]

    '
  stdout: ''
  timestamp: 1660163029
- exit_code: 1
  program: "import std.math;\n/*\n Return a string containing space-delimited numbers\
    \ starting from 0 upto n inclusive.\n    >>> string_sequence(0L)\n    \"0\"\n\
    \    >>> string_sequence(5L)\n    \"0 1 2 3 4 5\"\n    \n*/\nstring string_sequence(long\
    \ n) \n{\n    string result = \"\";\n    foreach (i; 0L .. n + 1L) \n    {\n \
    \       result ~= i;\n        if (i < n) \n        {\n            result ~= \"\
    \ \";\n        }\n    }\n    return result;\n}\nunittest\n{\n    alias candidate\
    \ = string_sequence;\n\n    assert(candidate(0L) == \"0\");\n    assert(candidate(3L)\
    \ == \"0 1 2 3\");\n    assert(candidate(10L) == \"0 1 2 3 4 5 6 7 8 9 10\");\n\
    }\nvoid main(){}"
  status: SyntaxError
  stderr: '/tmp/tmpzgabjtwg.d(15): Error: cannot append type `long` to type `string`

    Failed: ["dmd", "-unittest", "-v", "-o-", "/tmp/tmpzgabjtwg.d", "-I/tmp"]

    '
  stdout: ''
  timestamp: 1660163029
- exit_code: 1
  program: "import std.math;\n/*\n Return a string containing space-delimited numbers\
    \ starting from 0 upto n inclusive.\n    >>> string_sequence(0L)\n    \"0\"\n\
    \    >>> string_sequence(5L)\n    \"0 1 2 3 4 5\"\n    \n*/\nstring string_sequence(long\
    \ n) \n{\n    string s = \"\";\n    foreach (i; 0L .. n + 1L)\n    {\n       \
    \ s ~= to!string(i) ~ \" \";\n    }\n    return s;\n}\nunittest\n{\n    alias\
    \ candidate = string_sequence;\n\n    assert(candidate(0L) == \"0\");\n    assert(candidate(3L)\
    \ == \"0 1 2 3\");\n    assert(candidate(10L) == \"0 1 2 3 4 5 6 7 8 9 10\");\n\
    }\nvoid main(){}"
  status: SyntaxError
  stderr: '/tmp/tmph2b6x3x5.d(15): Error: template instance `to!string` template `to`
    is not defined

    Failed: ["dmd", "-unittest", "-v", "-o-", "/tmp/tmph2b6x3x5.d", "-I/tmp"]

    '
  stdout: ''
  timestamp: 1660163029
- exit_code: 1
  program: "import std.math;\n/*\n Return a string containing space-delimited numbers\
    \ starting from 0 upto n inclusive.\n    >>> string_sequence(0L)\n    \"0\"\n\
    \    >>> string_sequence(5L)\n    \"0 1 2 3 4 5\"\n    \n*/\nstring string_sequence(long\
    \ n) \n{\n    string result = \"\";\n    for (long i = 0; i <= n; i++) \n    {\n\
    \        result += to!string(i);\n        if (i < n) \n        {\n           \
    \ result += \" \";\n        }\n    }\n    return result;\n}\nunittest\n{\n   \
    \ alias candidate = string_sequence;\n\n    assert(candidate(0L) == \"0\");\n\
    \    assert(candidate(3L) == \"0 1 2 3\");\n    assert(candidate(10L) == \"0 1\
    \ 2 3 4 5 6 7 8 9 10\");\n}\nvoid main(){}"
  status: SyntaxError
  stderr: '/tmp/tmp5z7ughf1.d(15): Error: template instance `to!string` template `to`
    is not defined

    /tmp/tmp5z7ughf1.d(18): Error: slice `result` is not mutable

    Failed: ["dmd", "-unittest", "-v", "-o-", "/tmp/tmp5z7ughf1.d", "-I/tmp"]

    '
  stdout: ''
  timestamp: 1660163029
- exit_code: 1
  program: "import std.math;\n/*\n Return a string containing space-delimited numbers\
    \ starting from 0 upto n inclusive.\n    >>> string_sequence(0L)\n    \"0\"\n\
    \    >>> string_sequence(5L)\n    \"0 1 2 3 4 5\"\n    \n*/\nstring string_sequence(long\
    \ n) \n{\n    string result;\n    for (long i = 0; i <= n; i++) \n    {\n    \
    \    result ~= to!string(i);\n        if (i < n) \n        {\n            result\
    \ ~= \" \";\n        }\n    }\n    return result;\n}\nunittest\n{\n    alias candidate\
    \ = string_sequence;\n\n    assert(candidate(0L) == \"0\");\n    assert(candidate(3L)\
    \ == \"0 1 2 3\");\n    assert(candidate(10L) == \"0 1 2 3 4 5 6 7 8 9 10\");\n\
    }\nvoid main(){}"
  status: SyntaxError
  stderr: '/tmp/tmpjitp3ztf.d(15): Error: template instance `to!string` template `to`
    is not defined

    Failed: ["dmd", "-unittest", "-v", "-o-", "/tmp/tmpjitp3ztf.d", "-I/tmp"]

    '
  stdout: ''
  timestamp: 1660163029
- exit_code: 1
  program: "import std.math;\n/*\n Return a string containing space-delimited numbers\
    \ starting from 0 upto n inclusive.\n    >>> string_sequence(0L)\n    \"0\"\n\
    \    >>> string_sequence(5L)\n    \"0 1 2 3 4 5\"\n    \n*/\nstring string_sequence(long\
    \ n) \n{\n    string result = \"\";\n    for (long i = 0; i <= n; i++) \n    {\n\
    \        result += to!string(i);\n        if (i < n) \n        {\n           \
    \ result += \" \";\n        }\n    }\n    return result;\n}\nunittest\n{\n   \
    \ alias candidate = string_sequence;\n\n    assert(candidate(0L) == \"0\");\n\
    \    assert(candidate(3L) == \"0 1 2 3\");\n    assert(candidate(10L) == \"0 1\
    \ 2 3 4 5 6 7 8 9 10\");\n}\nvoid main(){}"
  status: SyntaxError
  stderr: '/tmp/tmp5z7ughf1.d(15): Error: template instance `to!string` template `to`
    is not defined

    /tmp/tmp5z7ughf1.d(18): Error: slice `result` is not mutable

    Failed: ["dmd", "-unittest", "-v", "-o-", "/tmp/tmp5z7ughf1.d", "-I/tmp"]

    '
  stdout: ''
  timestamp: 1660163029
- exit_code: 1
  program: "import std.math;\n/*\n Return a string containing space-delimited numbers\
    \ starting from 0 upto n inclusive.\n    >>> string_sequence(0L)\n    \"0\"\n\
    \    >>> string_sequence(5L)\n    \"0 1 2 3 4 5\"\n    \n*/\nstring string_sequence(long\
    \ n) \n{\n    string result = \"\";\n    for (long i = 0; i <= n; i++)\n    {\n\
    \        result += to!string(i) + \" \";\n    }\n    return result;\n}\nunittest\n\
    {\n    alias candidate = string_sequence;\n\n    assert(candidate(0L) == \"0\"\
    );\n    assert(candidate(3L) == \"0 1 2 3\");\n    assert(candidate(10L) == \"\
    0 1 2 3 4 5 6 7 8 9 10\");\n}\nvoid main(){}"
  status: SyntaxError
  stderr: '/tmp/tmpbl63d6z8.d(15): Error: template instance `to!string` template `to`
    is not defined

    Failed: ["dmd", "-unittest", "-v", "-o-", "/tmp/tmpbl63d6z8.d", "-I/tmp"]

    '
  stdout: ''
  timestamp: 1660163029
- exit_code: 1
  program: "import std.math;\n/*\n Return a string containing space-delimited numbers\
    \ starting from 0 upto n inclusive.\n    >>> string_sequence(0L)\n    \"0\"\n\
    \    >>> string_sequence(5L)\n    \"0 1 2 3 4 5\"\n    \n*/\nstring string_sequence(long\
    \ n) \n{\n    string result = \"\";\n    foreach (i; 0L .. n+1L)\n    {\n    \
    \    result ~= to!string(i) ~ \" \";\n    }\n    return result;\n}\nunittest\n\
    {\n    alias candidate = string_sequence;\n\n    assert(candidate(0L) == \"0\"\
    );\n    assert(candidate(3L) == \"0 1 2 3\");\n    assert(candidate(10L) == \"\
    0 1 2 3 4 5 6 7 8 9 10\");\n}\nvoid main(){}"
  status: SyntaxError
  stderr: '/tmp/tmpnneetcgg.d(15): Error: template instance `to!string` template `to`
    is not defined

    Failed: ["dmd", "-unittest", "-v", "-o-", "/tmp/tmpnneetcgg.d", "-I/tmp"]

    '
  stdout: ''
  timestamp: 1660163029
- exit_code: 1
  program: "import std.math;\n/*\n Return a string containing space-delimited numbers\
    \ starting from 0 upto n inclusive.\n    >>> string_sequence(0L)\n    \"0\"\n\
    \    >>> string_sequence(5L)\n    \"0 1 2 3 4 5\"\n    \n*/\nstring string_sequence(long\
    \ n) \n{\n    string result;\n    foreach (i; 0L .. n + 1L)\n    {\n        result\
    \ ~= to!string(i) ~ \" \";\n    }\n    return result;\n}\nunittest\n{\n    alias\
    \ candidate = string_sequence;\n\n    assert(candidate(0L) == \"0\");\n    assert(candidate(3L)\
    \ == \"0 1 2 3\");\n    assert(candidate(10L) == \"0 1 2 3 4 5 6 7 8 9 10\");\n\
    }\nvoid main(){}"
  status: SyntaxError
  stderr: '/tmp/tmp6ptkbkg7.d(15): Error: template instance `to!string` template `to`
    is not defined

    Failed: ["dmd", "-unittest", "-v", "-o-", "/tmp/tmp6ptkbkg7.d", "-I/tmp"]

    '
  stdout: ''
  timestamp: 1660163029
- exit_code: 1
  program: "import std.math;\n/*\n Return a string containing space-delimited numbers\
    \ starting from 0 upto n inclusive.\n    >>> string_sequence(0L)\n    \"0\"\n\
    \    >>> string_sequence(5L)\n    \"0 1 2 3 4 5\"\n    \n*/\nstring string_sequence(long\
    \ n) \n{\n    string result = \"\";\n    foreach (i; 0L .. n + 1L)\n    {\n  \
    \      result ~= to!string(i) ~ \" \";\n    }\n    return result;\n}\nunittest\n\
    {\n    alias candidate = string_sequence;\n\n    assert(candidate(0L) == \"0\"\
    );\n    assert(candidate(3L) == \"0 1 2 3\");\n    assert(candidate(10L) == \"\
    0 1 2 3 4 5 6 7 8 9 10\");\n}\nvoid main(){}"
  status: SyntaxError
  stderr: '/tmp/tmprtj2maoj.d(15): Error: template instance `to!string` template `to`
    is not defined

    Failed: ["dmd", "-unittest", "-v", "-o-", "/tmp/tmprtj2maoj.d", "-I/tmp"]

    '
  stdout: ''
  timestamp: 1660163029
- exit_code: 1
  program: "import std.math;\n/*\n Return a string containing space-delimited numbers\
    \ starting from 0 upto n inclusive.\n    >>> string_sequence(0L)\n    \"0\"\n\
    \    >>> string_sequence(5L)\n    \"0 1 2 3 4 5\"\n    \n*/\nstring string_sequence(long\
    \ n) \n{\n    string result = \"\";\n    for (long i = 0; i <= n; i++) \n    {\n\
    \        result += to!string(i);\n        if (i < n)\n            result += \"\
    \ \";\n    }\n    return result;\n}\nunittest\n{\n    alias candidate = string_sequence;\n\
    \n    assert(candidate(0L) == \"0\");\n    assert(candidate(3L) == \"0 1 2 3\"\
    );\n    assert(candidate(10L) == \"0 1 2 3 4 5 6 7 8 9 10\");\n}\nvoid main(){}"
  status: SyntaxError
  stderr: '/tmp/tmp1fswe0bx.d(15): Error: template instance `to!string` template `to`
    is not defined

    /tmp/tmp1fswe0bx.d(17): Error: slice `result` is not mutable

    Failed: ["dmd", "-unittest", "-v", "-o-", "/tmp/tmp1fswe0bx.d", "-I/tmp"]

    '
  stdout: ''
  timestamp: 1660163029
- exit_code: 1
  program: "import std.math;\n/*\n Return a string containing space-delimited numbers\
    \ starting from 0 upto n inclusive.\n    >>> string_sequence(0L)\n    \"0\"\n\
    \    >>> string_sequence(5L)\n    \"0 1 2 3 4 5\"\n    \n*/\nstring string_sequence(long\
    \ n) \n{\n    string s = \"\";\n    for (long i = 0; i <= n; i++)\n    {\n   \
    \     s = s ~ to!string(i) ~ \" \";\n    }\n    return s;\n}\nunittest\n{\n  \
    \  alias candidate = string_sequence;\n\n    assert(candidate(0L) == \"0\");\n\
    \    assert(candidate(3L) == \"0 1 2 3\");\n    assert(candidate(10L) == \"0 1\
    \ 2 3 4 5 6 7 8 9 10\");\n}\nvoid main(){}"
  status: SyntaxError
  stderr: '/tmp/tmpx0ordsim.d(15): Error: template instance `to!string` template `to`
    is not defined

    Failed: ["dmd", "-unittest", "-v", "-o-", "/tmp/tmpx0ordsim.d", "-I/tmp"]

    '
  stdout: ''
  timestamp: 1660163029
- exit_code: 1
  program: "import std.math;\n/*\n Return a string containing space-delimited numbers\
    \ starting from 0 upto n inclusive.\n    >>> string_sequence(0L)\n    \"0\"\n\
    \    >>> string_sequence(5L)\n    \"0 1 2 3 4 5\"\n    \n*/\nstring string_sequence(long\
    \ n) \n{\n    string result = \"\";\n    for (long i = 0; i <= n; i++) \n    {\n\
    \        result += to!string(i);\n        if (i < n) \n        {\n           \
    \ result += \" \";\n        }\n    }\n    return result;\n}\nunittest\n{\n   \
    \ alias candidate = string_sequence;\n\n    assert(candidate(0L) == \"0\");\n\
    \    assert(candidate(3L) == \"0 1 2 3\");\n    assert(candidate(10L) == \"0 1\
    \ 2 3 4 5 6 7 8 9 10\");\n}\nvoid main(){}"
  status: SyntaxError
  stderr: '/tmp/tmp5z7ughf1.d(15): Error: template instance `to!string` template `to`
    is not defined

    /tmp/tmp5z7ughf1.d(18): Error: slice `result` is not mutable

    Failed: ["dmd", "-unittest", "-v", "-o-", "/tmp/tmp5z7ughf1.d", "-I/tmp"]

    '
  stdout: ''
  timestamp: 1660163029
- exit_code: 1
  program: "import std.math;\n/*\n Return a string containing space-delimited numbers\
    \ starting from 0 upto n inclusive.\n    >>> string_sequence(0L)\n    \"0\"\n\
    \    >>> string_sequence(5L)\n    \"0 1 2 3 4 5\"\n    \n*/\nstring string_sequence(long\
    \ n) \n{\n    string result;\n    foreach (i; 0L .. n+1L)\n    {\n        result\
    \ ~= to!string(i) ~ \" \";\n    }\n    return result;\n}\nunittest\n{\n    alias\
    \ candidate = string_sequence;\n\n    assert(candidate(0L) == \"0\");\n    assert(candidate(3L)\
    \ == \"0 1 2 3\");\n    assert(candidate(10L) == \"0 1 2 3 4 5 6 7 8 9 10\");\n\
    }\nvoid main(){}"
  status: SyntaxError
  stderr: '/tmp/tmpf6xrv92q.d(15): Error: template instance `to!string` template `to`
    is not defined

    Failed: ["dmd", "-unittest", "-v", "-o-", "/tmp/tmpf6xrv92q.d", "-I/tmp"]

    '
  stdout: ''
  timestamp: 1660163029
- exit_code: 1
  program: "import std.math;\n/*\n Return a string containing space-delimited numbers\
    \ starting from 0 upto n inclusive.\n    >>> string_sequence(0L)\n    \"0\"\n\
    \    >>> string_sequence(5L)\n    \"0 1 2 3 4 5\"\n    \n*/\nstring string_sequence(long\
    \ n) \n{\n    string result = \"\";\n    for (long i = 0; i <= n; i++) \n    {\n\
    \        result += to!string(i);\n        if (i < n) \n        {\n           \
    \ result += \" \";\n        }\n    }\n    return result;\n}\n/*\n Return a string\
    \ containing space-delimited numbers starting from 0 upto n inclusive.\n    >>>\
    \ string_sequence(0L)\n    \"0\"\n    >>> string_sequence(5L)\n    \"0 1 2 3 4\
    \ 5\"\n    \n*/\nstring string_sequence(long n) \n{\n    string result = \"\"\
    ;\n    for (long i = 0; i <= n; i++) \n    {\n        result += to!string(i);\n\
    \        if (i < n) \n        {\n            result += \" \";\n        }\n   \
    \ }\n    return result;\n}\n/*\n Return a string containing space-delimited numbers\
    \ starting from 0 upto n inclusive.\n    >>> string_sequence(0L)\n    \"0\"\n\
    \    >>> string_sequence(5L)\n    \"0 1 2 3 4 5\"\n    \n*/\nstring string_sequence(long\
    \ n) \n{\n    string result = \"\";\n    for (long i = 0; i <= n; i++) \n    {\n\
    \        result += to!string(i);\n        if (i < n) \n        {\n           \
    \ result += \" \";\n        }\n    }\n    return result;\n}\n/*\n Return a string\
    \ containing space-delimited numbers starting from 0 upto n inclusive.\n    >>>\
    \ string_sequence(0L)\n    \"0\"\n    >>> string_sequence(5L)\n    \"0 1 2 3 4\
    \ 5\"\n    \n*/\nstring string_sequence(long n) \n{\n    string result = \"\"\
    ;\n    for (long i = 0; i <= n; i++) \n    {\n        result += to!string(i);\n\
    \        if (i < n) \n        {\n            result += \" \";\n        }\n   \
    \ }\n    return result;\n}\n/*\n Return a string containing space-delimited numbers\
    \ starting from 0 upto n inclusive.\n\nunittest\n{\n    alias candidate = string_sequence;\n\
    \n    assert(candidate(0L) == \"0\");\n    assert(candidate(3L) == \"0 1 2 3\"\
    );\n    assert(candidate(10L) == \"0 1 2 3 4 5 6 7 8 9 10\");\n}\nvoid main(){}"
  status: SyntaxError
  stderr: '/tmp/tmp0yqd_wsj.d(86): Error: unterminated /* */ comment

    Failed: ["dmd", "-unittest", "-v", "-o-", "/tmp/tmp0yqd_wsj.d", "-I/tmp"]

    '
  stdout: ''
  timestamp: 1660163029
- exit_code: 1
  program: "import std.math;\n/*\n Return a string containing space-delimited numbers\
    \ starting from 0 upto n inclusive.\n    >>> string_sequence(0L)\n    \"0\"\n\
    \    >>> string_sequence(5L)\n    \"0 1 2 3 4 5\"\n    \n*/\nstring string_sequence(long\
    \ n) \n{\n    string result = \"\";\n    foreach (i; 0L .. n+1L) \n    {\n   \
    \     result ~= to!string(i) ~ \" \";\n    }\n    return result;\n}\nunittest\n\
    {\n    alias candidate = string_sequence;\n\n    assert(candidate(0L) == \"0\"\
    );\n    assert(candidate(3L) == \"0 1 2 3\");\n    assert(candidate(10L) == \"\
    0 1 2 3 4 5 6 7 8 9 10\");\n}\nvoid main(){}"
  status: SyntaxError
  stderr: '/tmp/tmpcir8t12b.d(15): Error: template instance `to!string` template `to`
    is not defined

    Failed: ["dmd", "-unittest", "-v", "-o-", "/tmp/tmpcir8t12b.d", "-I/tmp"]

    '
  stdout: ''
  timestamp: 1660163029
- exit_code: 1
  program: "import std.math;\n/*\n Return a string containing space-delimited numbers\
    \ starting from 0 upto n inclusive.\n    >>> string_sequence(0L)\n    \"0\"\n\
    \    >>> string_sequence(5L)\n    \"0 1 2 3 4 5\"\n    \n*/\nstring string_sequence(long\
    \ n) \n{\n    string result;\n    foreach (i; 0L .. n + 1L)\n    {\n        result\
    \ ~= i.to!string;\n        if (i != n)\n            result ~= \" \";\n    }\n\
    \    return result;\n}\nunittest\n{\n    alias candidate = string_sequence;\n\n\
    \    assert(candidate(0L) == \"0\");\n    assert(candidate(3L) == \"0 1 2 3\"\
    );\n    assert(candidate(10L) == \"0 1 2 3 4 5 6 7 8 9 10\");\n}\nvoid main(){}"
  status: SyntaxError
  stderr: '/tmp/tmpqwieuzn1.d(15): Error: no property `to` for type `long`

    Failed: ["dmd", "-unittest", "-v", "-o-", "/tmp/tmpqwieuzn1.d", "-I/tmp"]

    '
  stdout: ''
  timestamp: 1660163029
- exit_code: 1
  program: "import std.math;\n/*\n Return a string containing space-delimited numbers\
    \ starting from 0 upto n inclusive.\n    >>> string_sequence(0L)\n    \"0\"\n\
    \    >>> string_sequence(5L)\n    \"0 1 2 3 4 5\"\n    \n*/\nstring string_sequence(long\
    \ n) \n{\n    string result;\n    foreach (i; 0L .. n + 1L)\n    {\n        result\
    \ ~= i.to!string;\n        if (i < n)\n            result ~= \" \";\n    }\n \
    \   return result;\n}\nunittest\n{\n    alias candidate = string_sequence;\n\n\
    \    assert(candidate(0L) == \"0\");\n    assert(candidate(3L) == \"0 1 2 3\"\
    );\n    assert(candidate(10L) == \"0 1 2 3 4 5 6 7 8 9 10\");\n}\nvoid main(){}"
  status: SyntaxError
  stderr: '/tmp/tmpei393v6o.d(15): Error: no property `to` for type `long`

    Failed: ["dmd", "-unittest", "-v", "-o-", "/tmp/tmpei393v6o.d", "-I/tmp"]

    '
  stdout: ''
  timestamp: 1660163029
- exit_code: 1
  program: "import std.math;\n/*\n Return a string containing space-delimited numbers\
    \ starting from 0 upto n inclusive.\n    >>> string_sequence(0L)\n    \"0\"\n\
    \    >>> string_sequence(5L)\n    \"0 1 2 3 4 5\"\n    \n*/\nstring string_sequence(long\
    \ n) \n{\n    string result = \"\";\n    foreach (i; 0L .. n + 1L) \n    {\n \
    \       result ~= i;\n        if (i < n)\n            result ~= \" \";\n    }\n\
    \    return result;\n}\nunittest\n{\n    alias candidate = string_sequence;\n\n\
    \    assert(candidate(0L) == \"0\");\n    assert(candidate(3L) == \"0 1 2 3\"\
    );\n    assert(candidate(10L) == \"0 1 2 3 4 5 6 7 8 9 10\");\n}\nvoid main(){}"
  status: SyntaxError
  stderr: '/tmp/tmp9uucy16f.d(15): Error: cannot append type `long` to type `string`

    Failed: ["dmd", "-unittest", "-v", "-o-", "/tmp/tmp9uucy16f.d", "-I/tmp"]

    '
  stdout: ''
  timestamp: 1660163029
- exit_code: 1
  program: "import std.math;\n/*\n Return a string containing space-delimited numbers\
    \ starting from 0 upto n inclusive.\n    >>> string_sequence(0L)\n    \"0\"\n\
    \    >>> string_sequence(5L)\n    \"0 1 2 3 4 5\"\n    \n*/\nstring string_sequence(long\
    \ n) \n{\n    string result = \"\";\n    for (int i = 0; i <= n; i++) \n    {\n\
    \        result += to!string(i) + \" \";\n    }\n    return result.trimRight();\n\
    }\nunittest\n{\n    alias candidate = string_sequence;\n\n    assert(candidate(0L)\
    \ == \"0\");\n    assert(candidate(3L) == \"0 1 2 3\");\n    assert(candidate(10L)\
    \ == \"0 1 2 3 4 5 6 7 8 9 10\");\n}\nvoid main(){}"
  status: SyntaxError
  stderr: '/tmp/tmpl7oc9sud.d(15): Error: template instance `to!string` template `to`
    is not defined

    /tmp/tmpl7oc9sud.d(17): Error: no property `trimRight` for type `string`

    Failed: ["dmd", "-unittest", "-v", "-o-", "/tmp/tmpl7oc9sud.d", "-I/tmp"]

    '
  stdout: ''
  timestamp: 1660163029
- exit_code: 1
  program: "import std.math;\n/*\n Return a string containing space-delimited numbers\
    \ starting from 0 upto n inclusive.\n    >>> string_sequence(0L)\n    \"0\"\n\
    \    >>> string_sequence(5L)\n    \"0 1 2 3 4 5\"\n    \n*/\nstring string_sequence(long\
    \ n) \n{\n    string result = \"\";\n    foreach (i; 0L .. n + 1L)\n    {\n  \
    \      result ~= to!string(i) ~ \" \";\n    }\n    return result;\n}\nunittest\n\
    {\n    alias candidate = string_sequence;\n\n    assert(candidate(0L) == \"0\"\
    );\n    assert(candidate(3L) == \"0 1 2 3\");\n    assert(candidate(10L) == \"\
    0 1 2 3 4 5 6 7 8 9 10\");\n}\nvoid main(){}"
  status: SyntaxError
  stderr: '/tmp/tmprtj2maoj.d(15): Error: template instance `to!string` template `to`
    is not defined

    Failed: ["dmd", "-unittest", "-v", "-o-", "/tmp/tmprtj2maoj.d", "-I/tmp"]

    '
  stdout: ''
  timestamp: 1660163029
- exit_code: 1
  program: "import std.math;\n/*\n Return a string containing space-delimited numbers\
    \ starting from 0 upto n inclusive.\n    >>> string_sequence(0L)\n    \"0\"\n\
    \    >>> string_sequence(5L)\n    \"0 1 2 3 4 5\"\n    \n*/\nstring string_sequence(long\
    \ n) \n{\n    string result;\n    foreach (i; 0L .. n + 1L)\n    {\n        result\
    \ ~= i.to!string;\n        if (i < n)\n            result ~= \" \";\n    }\n \
    \   return result;\n}\nunittest\n{\n    alias candidate = string_sequence;\n\n\
    \    assert(candidate(0L) == \"0\");\n    assert(candidate(3L) == \"0 1 2 3\"\
    );\n    assert(candidate(10L) == \"0 1 2 3 4 5 6 7 8 9 10\");\n}\nvoid main(){}"
  status: SyntaxError
  stderr: '/tmp/tmpei393v6o.d(15): Error: no property `to` for type `long`

    Failed: ["dmd", "-unittest", "-v", "-o-", "/tmp/tmpei393v6o.d", "-I/tmp"]

    '
  stdout: ''
  timestamp: 1660163029
- exit_code: 1
  program: "import std.math;\n/*\n Return a string containing space-delimited numbers\
    \ starting from 0 upto n inclusive.\n    >>> string_sequence(0L)\n    \"0\"\n\
    \    >>> string_sequence(5L)\n    \"0 1 2 3 4 5\"\n    \n*/\nstring string_sequence(long\
    \ n) \n{\n    string result = \"\";\n    for (long i = 0; i <= n; i++)\n    {\n\
    \        result += to!string(i) + \" \";\n    }\n    return result;\n}\nunittest\n\
    {\n    alias candidate = string_sequence;\n\n    assert(candidate(0L) == \"0\"\
    );\n    assert(candidate(3L) == \"0 1 2 3\");\n    assert(candidate(10L) == \"\
    0 1 2 3 4 5 6 7 8 9 10\");\n}\nvoid main(){}"
  status: SyntaxError
  stderr: '/tmp/tmpbl63d6z8.d(15): Error: template instance `to!string` template `to`
    is not defined

    Failed: ["dmd", "-unittest", "-v", "-o-", "/tmp/tmpbl63d6z8.d", "-I/tmp"]

    '
  stdout: ''
  timestamp: 1660163029
- exit_code: 1
  program: "import std.math;\n/*\n Return a string containing space-delimited numbers\
    \ starting from 0 upto n inclusive.\n    >>> string_sequence(0L)\n    \"0\"\n\
    \    >>> string_sequence(5L)\n    \"0 1 2 3 4 5\"\n    \n*/\nstring string_sequence(long\
    \ n) \n{\n    string result;\n    for (long i = 0; i <= n; i++) \n    {\n    \
    \    result ~= to!string(i);\n        if (i < n) \n        {\n            result\
    \ ~= \" \";\n        }\n    }\n    return result;\n}\nunittest\n{\n    alias candidate\
    \ = string_sequence;\n\n    assert(candidate(0L) == \"0\");\n    assert(candidate(3L)\
    \ == \"0 1 2 3\");\n    assert(candidate(10L) == \"0 1 2 3 4 5 6 7 8 9 10\");\n\
    }\nvoid main(){}"
  status: SyntaxError
  stderr: '/tmp/tmpjitp3ztf.d(15): Error: template instance `to!string` template `to`
    is not defined

    Failed: ["dmd", "-unittest", "-v", "-o-", "/tmp/tmpjitp3ztf.d", "-I/tmp"]

    '
  stdout: ''
  timestamp: 1660163029
- exit_code: 1
  program: "import std.math;\n/*\n Return a string containing space-delimited numbers\
    \ starting from 0 upto n inclusive.\n    >>> string_sequence(0L)\n    \"0\"\n\
    \    >>> string_sequence(5L)\n    \"0 1 2 3 4 5\"\n    \n*/\nstring string_sequence(long\
    \ n) \n{\n    string result = \"\";\n    foreach (i; 0L .. n + 1L)\n    {\n  \
    \      result ~= to!string(i) ~ \" \";\n    }\n    return result;\n}\nunittest\n\
    {\n    alias candidate = string_sequence;\n\n    assert(candidate(0L) == \"0\"\
    );\n    assert(candidate(3L) == \"0 1 2 3\");\n    assert(candidate(10L) == \"\
    0 1 2 3 4 5 6 7 8 9 10\");\n}\nvoid main(){}"
  status: SyntaxError
  stderr: '/tmp/tmprtj2maoj.d(15): Error: template instance `to!string` template `to`
    is not defined

    Failed: ["dmd", "-unittest", "-v", "-o-", "/tmp/tmprtj2maoj.d", "-I/tmp"]

    '
  stdout: ''
  timestamp: 1660163029
- exit_code: 1
  program: "import std.math;\n/*\n Return a string containing space-delimited numbers\
    \ starting from 0 upto n inclusive.\n    >>> string_sequence(0L)\n    \"0\"\n\
    \    >>> string_sequence(5L)\n    \"0 1 2 3 4 5\"\n    \n*/\nstring string_sequence(long\
    \ n) \n{\n    string s = \"\";\n    for (long i = 0; i <= n; i++)\n    {\n   \
    \     s += to!string(i);\n        if (i != n)\n            s += \" \";\n    }\n\
    \    return s;\n}\nunittest\n{\n    alias candidate = string_sequence;\n\n   \
    \ assert(candidate(0L) == \"0\");\n    assert(candidate(3L) == \"0 1 2 3\");\n\
    \    assert(candidate(10L) == \"0 1 2 3 4 5 6 7 8 9 10\");\n}\nvoid main(){}"
  status: SyntaxError
  stderr: '/tmp/tmpbm3usd8m.d(15): Error: template instance `to!string` template `to`
    is not defined

    /tmp/tmpbm3usd8m.d(17): Error: slice `s` is not mutable

    Failed: ["dmd", "-unittest", "-v", "-o-", "/tmp/tmpbm3usd8m.d", "-I/tmp"]

    '
  stdout: ''
  timestamp: 1660163029
- exit_code: 1
  program: "import std.math;\n/*\n Return a string containing space-delimited numbers\
    \ starting from 0 upto n inclusive.\n    >>> string_sequence(0L)\n    \"0\"\n\
    \    >>> string_sequence(5L)\n    \"0 1 2 3 4 5\"\n    \n*/\nstring string_sequence(long\
    \ n) \n{\n    string result;\n    for (long i = 0; i <= n; i++)\n    {\n     \
    \   result ~= to!string(i) ~ \" \";\n    }\n    return result;\n}\nunittest\n\
    {\n    alias candidate = string_sequence;\n\n    assert(candidate(0L) == \"0\"\
    );\n    assert(candidate(3L) == \"0 1 2 3\");\n    assert(candidate(10L) == \"\
    0 1 2 3 4 5 6 7 8 9 10\");\n}\nvoid main(){}"
  status: SyntaxError
  stderr: '/tmp/tmpatn1qnnf.d(15): Error: template instance `to!string` template `to`
    is not defined

    Failed: ["dmd", "-unittest", "-v", "-o-", "/tmp/tmpatn1qnnf.d", "-I/tmp"]

    '
  stdout: ''
  timestamp: 1660163029
- exit_code: 1
  program: "import std.math;\n/*\n Return a string containing space-delimited numbers\
    \ starting from 0 upto n inclusive.\n    >>> string_sequence(0L)\n    \"0\"\n\
    \    >>> string_sequence(5L)\n    \"0 1 2 3 4 5\"\n    \n*/\nstring string_sequence(long\
    \ n) \n{\n    string s = \"\";\n    for (long i = 0; i <= n; i++) \n    {\n  \
    \      s += to!string(i);\n        if (i < n)\n            s += \" \";\n    }\n\
    \    return s;\n}\nunittest\n{\n    alias candidate = string_sequence;\n\n   \
    \ assert(candidate(0L) == \"0\");\n    assert(candidate(3L) == \"0 1 2 3\");\n\
    \    assert(candidate(10L) == \"0 1 2 3 4 5 6 7 8 9 10\");\n}\nvoid main(){}"
  status: SyntaxError
  stderr: '/tmp/tmprz1tzzgi.d(15): Error: template instance `to!string` template `to`
    is not defined

    /tmp/tmprz1tzzgi.d(17): Error: slice `s` is not mutable

    Failed: ["dmd", "-unittest", "-v", "-o-", "/tmp/tmprz1tzzgi.d", "-I/tmp"]

    '
  stdout: ''
  timestamp: 1660163029
- exit_code: 1
  program: "import std.math;\n/*\n Return a string containing space-delimited numbers\
    \ starting from 0 upto n inclusive.\n    >>> string_sequence(0L)\n    \"0\"\n\
    \    >>> string_sequence(5L)\n    \"0 1 2 3 4 5\"\n    \n*/\nstring string_sequence(long\
    \ n) \n{\n    string result = \"\";\n    for (long i = 0; i <= n; i++)\n    {\n\
    \        result += to!string(i) + \" \";\n    }\n    return result;\n}\nunittest\n\
    {\n    alias candidate = string_sequence;\n\n    assert(candidate(0L) == \"0\"\
    );\n    assert(candidate(3L) == \"0 1 2 3\");\n    assert(candidate(10L) == \"\
    0 1 2 3 4 5 6 7 8 9 10\");\n}\nvoid main(){}"
  status: SyntaxError
  stderr: '/tmp/tmpbl63d6z8.d(15): Error: template instance `to!string` template `to`
    is not defined

    Failed: ["dmd", "-unittest", "-v", "-o-", "/tmp/tmpbl63d6z8.d", "-I/tmp"]

    '
  stdout: ''
  timestamp: 1660163029
- exit_code: 1
  program: "import std.math;\n/*\n Return a string containing space-delimited numbers\
    \ starting from 0 upto n inclusive.\n    >>> string_sequence(0L)\n    \"0\"\n\
    \    >>> string_sequence(5L)\n    \"0 1 2 3 4 5\"\n    \n*/\nstring string_sequence(long\
    \ n) \n{\n    string s = \"\";\n    for (long i = 0; i <= n; i++) \n    {\n  \
    \      s += to!string(i);\n        if (i < n) \n        {\n            s += \"\
    \ \";\n        }\n    }\n    return s;\n}\nunittest\n{\n    alias candidate =\
    \ string_sequence;\n\n    assert(candidate(0L) == \"0\");\n    assert(candidate(3L)\
    \ == \"0 1 2 3\");\n    assert(candidate(10L) == \"0 1 2 3 4 5 6 7 8 9 10\");\n\
    }\nvoid main(){}"
  status: SyntaxError
  stderr: '/tmp/tmp77xzgxnt.d(15): Error: template instance `to!string` template `to`
    is not defined

    /tmp/tmp77xzgxnt.d(18): Error: slice `s` is not mutable

    Failed: ["dmd", "-unittest", "-v", "-o-", "/tmp/tmp77xzgxnt.d", "-I/tmp"]

    '
  stdout: ''
  timestamp: 1660163029
- exit_code: 1
  program: "import std.math;\n/*\n Return a string containing space-delimited numbers\
    \ starting from 0 upto n inclusive.\n    >>> string_sequence(0L)\n    \"0\"\n\
    \    >>> string_sequence(5L)\n    \"0 1 2 3 4 5\"\n    \n*/\nstring string_sequence(long\
    \ n) \n{\n    string s = \"\";\n    for (long i = 0; i <= n; i++) \n    {\n  \
    \      s += to!string(i);\n        if (i < n) \n        {\n            s += \"\
    \ \";\n        }\n    }\n    return s;\n}\nunittest\n{\n    alias candidate =\
    \ string_sequence;\n\n    assert(candidate(0L) == \"0\");\n    assert(candidate(3L)\
    \ == \"0 1 2 3\");\n    assert(candidate(10L) == \"0 1 2 3 4 5 6 7 8 9 10\");\n\
    }\nvoid main(){}"
  status: SyntaxError
  stderr: '/tmp/tmp77xzgxnt.d(15): Error: template instance `to!string` template `to`
    is not defined

    /tmp/tmp77xzgxnt.d(18): Error: slice `s` is not mutable

    Failed: ["dmd", "-unittest", "-v", "-o-", "/tmp/tmp77xzgxnt.d", "-I/tmp"]

    '
  stdout: ''
  timestamp: 1660163029
- exit_code: 1
  program: "import std.math;\n/*\n Return a string containing space-delimited numbers\
    \ starting from 0 upto n inclusive.\n    >>> string_sequence(0L)\n    \"0\"\n\
    \    >>> string_sequence(5L)\n    \"0 1 2 3 4 5\"\n    \n*/\nstring string_sequence(long\
    \ n) \n{\n    string result;\n    foreach (i; 0L .. n + 1L)\n    {\n        result\
    \ ~= i.to!string;\n        if (i != n)\n            result ~= \" \";\n    }\n\
    \    return result;\n}\nunittest\n{\n    alias candidate = string_sequence;\n\n\
    \    assert(candidate(0L) == \"0\");\n    assert(candidate(3L) == \"0 1 2 3\"\
    );\n    assert(candidate(10L) == \"0 1 2 3 4 5 6 7 8 9 10\");\n}\nvoid main(){}"
  status: SyntaxError
  stderr: '/tmp/tmpqwieuzn1.d(15): Error: no property `to` for type `long`

    Failed: ["dmd", "-unittest", "-v", "-o-", "/tmp/tmpqwieuzn1.d", "-I/tmp"]

    '
  stdout: ''
  timestamp: 1660163029
- exit_code: 1
  program: "import std.math;\n/*\n Return a string containing space-delimited numbers\
    \ starting from 0 upto n inclusive.\n    >>> string_sequence(0L)\n    \"0\"\n\
    \    >>> string_sequence(5L)\n    \"0 1 2 3 4 5\"\n    \n*/\nstring string_sequence(long\
    \ n) \n{\n    string result = \"\";\n    for (long i = 0; i <= n; i++)\n    {\n\
    \        result += to!string(i) + \" \";\n    }\n    return result.trim();\n}\n\
    unittest\n{\n    alias candidate = string_sequence;\n\n    assert(candidate(0L)\
    \ == \"0\");\n    assert(candidate(3L) == \"0 1 2 3\");\n    assert(candidate(10L)\
    \ == \"0 1 2 3 4 5 6 7 8 9 10\");\n}\nvoid main(){}"
  status: SyntaxError
  stderr: '/tmp/tmp3bdkjgf3.d(15): Error: template instance `to!string` template `to`
    is not defined

    /tmp/tmp3bdkjgf3.d(17): Error: no property `trim` for type `string`

    Failed: ["dmd", "-unittest", "-v", "-o-", "/tmp/tmp3bdkjgf3.d", "-I/tmp"]

    '
  stdout: ''
  timestamp: 1660163029
- exit_code: 1
  program: "import std.math;\n/*\n Return a string containing space-delimited numbers\
    \ starting from 0 upto n inclusive.\n    >>> string_sequence(0L)\n    \"0\"\n\
    \    >>> string_sequence(5L)\n    \"0 1 2 3 4 5\"\n    \n*/\nstring string_sequence(long\
    \ n) \n{\n    string result = \"\";\n    foreach (i; 0L .. n+1L)\n    {\n    \
    \    result ~= i.to!string ~ \" \";\n    }\n    return result;\n}\nunittest\n\
    {\n    alias candidate = string_sequence;\n\n    assert(candidate(0L) == \"0\"\
    );\n    assert(candidate(3L) == \"0 1 2 3\");\n    assert(candidate(10L) == \"\
    0 1 2 3 4 5 6 7 8 9 10\");\n}\nvoid main(){}"
  status: SyntaxError
  stderr: '/tmp/tmpndpl7eva.d(15): Error: no property `to` for type `long`

    Failed: ["dmd", "-unittest", "-v", "-o-", "/tmp/tmpndpl7eva.d", "-I/tmp"]

    '
  stdout: ''
  timestamp: 1660163029
- exit_code: 1
  program: "import std.math;\n/*\n Return a string containing space-delimited numbers\
    \ starting from 0 upto n inclusive.\n    >>> string_sequence(0L)\n    \"0\"\n\
    \    >>> string_sequence(5L)\n    \"0 1 2 3 4 5\"\n    \n*/\nstring string_sequence(long\
    \ n) \n{\n    string result = \"\";\n    for (long i = 0; i <= n; i++) \n    {\n\
    \        result += to!string(i);\n        if (i < n) \n        {\n           \
    \ result += \" \";\n        }\n    }\n    return result;\n}\nunittest\n{\n   \
    \ alias candidate = string_sequence;\n\n    assert(candidate(0L) == \"0\");\n\
    \    assert(candidate(3L) == \"0 1 2 3\");\n    assert(candidate(10L) == \"0 1\
    \ 2 3 4 5 6 7 8 9 10\");\n}\nvoid main(){}"
  status: SyntaxError
  stderr: '/tmp/tmp5z7ughf1.d(15): Error: template instance `to!string` template `to`
    is not defined

    /tmp/tmp5z7ughf1.d(18): Error: slice `result` is not mutable

    Failed: ["dmd", "-unittest", "-v", "-o-", "/tmp/tmp5z7ughf1.d", "-I/tmp"]

    '
  stdout: ''
  timestamp: 1660163029
- exit_code: 1
  program: "import std.math;\n/*\n Return a string containing space-delimited numbers\
    \ starting from 0 upto n inclusive.\n    >>> string_sequence(0L)\n    \"0\"\n\
    \    >>> string_sequence(5L)\n    \"0 1 2 3 4 5\"\n    \n*/\nstring string_sequence(long\
    \ n) \n{\n    string s = \"\";\n    for (long i = 0; i <= n; i++)\n    {\n   \
    \     s = s ~ to!string(i) ~ \" \";\n    }\n    return s;\n}\nunittest\n{\n  \
    \  alias candidate = string_sequence;\n\n    assert(candidate(0L) == \"0\");\n\
    \    assert(candidate(3L) == \"0 1 2 3\");\n    assert(candidate(10L) == \"0 1\
    \ 2 3 4 5 6 7 8 9 10\");\n}\nvoid main(){}"
  status: SyntaxError
  stderr: '/tmp/tmpx0ordsim.d(15): Error: template instance `to!string` template `to`
    is not defined

    Failed: ["dmd", "-unittest", "-v", "-o-", "/tmp/tmpx0ordsim.d", "-I/tmp"]

    '
  stdout: ''
  timestamp: 1660163029
- exit_code: 1
  program: "import std.math;\n/*\n Return a string containing space-delimited numbers\
    \ starting from 0 upto n inclusive.\n    >>> string_sequence(0L)\n    \"0\"\n\
    \    >>> string_sequence(5L)\n    \"0 1 2 3 4 5\"\n    \n*/\nstring string_sequence(long\
    \ n) \n{\n    string result;\n    foreach (i; 0L .. n + 1L)\n    {\n        result\
    \ ~= to!string(i) ~ \" \";\n    }\n    return result;\n}\nunittest\n{\n    alias\
    \ candidate = string_sequence;\n\n    assert(candidate(0L) == \"0\");\n    assert(candidate(3L)\
    \ == \"0 1 2 3\");\n    assert(candidate(10L) == \"0 1 2 3 4 5 6 7 8 9 10\");\n\
    }\nvoid main(){}"
  status: SyntaxError
  stderr: '/tmp/tmp6ptkbkg7.d(15): Error: template instance `to!string` template `to`
    is not defined

    Failed: ["dmd", "-unittest", "-v", "-o-", "/tmp/tmp6ptkbkg7.d", "-I/tmp"]

    '
  stdout: ''
  timestamp: 1660163029
- exit_code: 1
  program: "import std.math;\n/*\n Return a string containing space-delimited numbers\
    \ starting from 0 upto n inclusive.\n    >>> string_sequence(0L)\n    \"0\"\n\
    \    >>> string_sequence(5L)\n    \"0 1 2 3 4 5\"\n    \n*/\nstring string_sequence(long\
    \ n) \n{\n    string result = \"\";\n    for (long i = 0; i <= n; i++) \n    {\n\
    \        result += to!string(i);\n        if (i < n)\n            result += \"\
    \ \";\n    }\n    return result;\n}\nunittest\n{\n    alias candidate = string_sequence;\n\
    \n    assert(candidate(0L) == \"0\");\n    assert(candidate(3L) == \"0 1 2 3\"\
    );\n    assert(candidate(10L) == \"0 1 2 3 4 5 6 7 8 9 10\");\n}\nvoid main(){}"
  status: SyntaxError
  stderr: '/tmp/tmp1fswe0bx.d(15): Error: template instance `to!string` template `to`
    is not defined

    /tmp/tmp1fswe0bx.d(17): Error: slice `result` is not mutable

    Failed: ["dmd", "-unittest", "-v", "-o-", "/tmp/tmp1fswe0bx.d", "-I/tmp"]

    '
  stdout: ''
  timestamp: 1660163029
- exit_code: 1
  program: "import std.math;\n/*\n Return a string containing space-delimited numbers\
    \ starting from 0 upto n inclusive.\n    >>> string_sequence(0L)\n    \"0\"\n\
    \    >>> string_sequence(5L)\n    \"0 1 2 3 4 5\"\n    \n*/\nstring string_sequence(long\
    \ n) \n{\n    string result;\n    for (long i = 0; i <= n; i++)\n    {\n     \
    \   result ~= to!string(i) ~ \" \";\n    }\n    return result;\n}\nunittest\n\
    {\n    alias candidate = string_sequence;\n\n    assert(candidate(0L) == \"0\"\
    );\n    assert(candidate(3L) == \"0 1 2 3\");\n    assert(candidate(10L) == \"\
    0 1 2 3 4 5 6 7 8 9 10\");\n}\nvoid main(){}"
  status: SyntaxError
  stderr: '/tmp/tmpatn1qnnf.d(15): Error: template instance `to!string` template `to`
    is not defined

    Failed: ["dmd", "-unittest", "-v", "-o-", "/tmp/tmpatn1qnnf.d", "-I/tmp"]

    '
  stdout: ''
  timestamp: 1660163029
- exit_code: 1
  program: "import std.math;\n/*\n Return a string containing space-delimited numbers\
    \ starting from 0 upto n inclusive.\n    >>> string_sequence(0L)\n    \"0\"\n\
    \    >>> string_sequence(5L)\n    \"0 1 2 3 4 5\"\n    \n*/\nstring string_sequence(long\
    \ n) \n{\n    string result = \"\";\n    foreach (i; 0L .. n + 1L)\n    {\n  \
    \      result ~= to!string(i) ~ \" \";\n    }\n    return result;\n}\nunittest\n\
    {\n    alias candidate = string_sequence;\n\n    assert(candidate(0L) == \"0\"\
    );\n    assert(candidate(3L) == \"0 1 2 3\");\n    assert(candidate(10L) == \"\
    0 1 2 3 4 5 6 7 8 9 10\");\n}\nvoid main(){}"
  status: SyntaxError
  stderr: '/tmp/tmprtj2maoj.d(15): Error: template instance `to!string` template `to`
    is not defined

    Failed: ["dmd", "-unittest", "-v", "-o-", "/tmp/tmprtj2maoj.d", "-I/tmp"]

    '
  stdout: ''
  timestamp: 1660163029
- exit_code: 1
  program: "import std.math;\n/*\n Return a string containing space-delimited numbers\
    \ starting from 0 upto n inclusive.\n    >>> string_sequence(0L)\n    \"0\"\n\
    \    >>> string_sequence(5L)\n    \"0 1 2 3 4 5\"\n    \n*/\nstring string_sequence(long\
    \ n) \n{\n    string result = \"\";\n    foreach (i; 0L .. n + 1L)\n    {\n  \
    \      result ~= to!string(i) ~ \" \";\n    }\n    return result;\n}\nunittest\n\
    {\n    alias candidate = string_sequence;\n\n    assert(candidate(0L) == \"0\"\
    );\n    assert(candidate(3L) == \"0 1 2 3\");\n    assert(candidate(10L) == \"\
    0 1 2 3 4 5 6 7 8 9 10\");\n}\nvoid main(){}"
  status: SyntaxError
  stderr: '/tmp/tmprtj2maoj.d(15): Error: template instance `to!string` template `to`
    is not defined

    Failed: ["dmd", "-unittest", "-v", "-o-", "/tmp/tmprtj2maoj.d", "-I/tmp"]

    '
  stdout: ''
  timestamp: 1660163029
- exit_code: 1
  program: "import std.math;\n/*\n Return a string containing space-delimited numbers\
    \ starting from 0 upto n inclusive.\n    >>> string_sequence(0L)\n    \"0\"\n\
    \    >>> string_sequence(5L)\n    \"0 1 2 3 4 5\"\n    \n*/\nstring string_sequence(long\
    \ n) \n{\n    string result = \"\";\n    foreach (i; 0L .. n + 1L)\n    {\n  \
    \      result ~= i.to!string;\n        if (i < n)\n            result ~= \" \"\
    ;\n    }\n    return result;\n}\nunittest\n{\n    alias candidate = string_sequence;\n\
    \n    assert(candidate(0L) == \"0\");\n    assert(candidate(3L) == \"0 1 2 3\"\
    );\n    assert(candidate(10L) == \"0 1 2 3 4 5 6 7 8 9 10\");\n}\nvoid main(){}"
  status: SyntaxError
  stderr: '/tmp/tmpsnnfj3uz.d(15): Error: no property `to` for type `long`

    Failed: ["dmd", "-unittest", "-v", "-o-", "/tmp/tmpsnnfj3uz.d", "-I/tmp"]

    '
  stdout: ''
  timestamp: 1660163029
- exit_code: 1
  program: "import std.math;\n/*\n Return a string containing space-delimited numbers\
    \ starting from 0 upto n inclusive.\n    >>> string_sequence(0L)\n    \"0\"\n\
    \    >>> string_sequence(5L)\n    \"0 1 2 3 4 5\"\n    \n*/\nstring string_sequence(long\
    \ n) \n{\n    string result = \"\";\n    for (long i = 0; i <= n; i++) \n    {\n\
    \        result += to!string(i);\n        if (i < n) \n        {\n           \
    \ result += \" \";\n        }\n    }\n    return result;\n}\nunittest\n{\n   \
    \ alias candidate = string_sequence;\n\n    assert(candidate(0L) == \"0\");\n\
    \    assert(candidate(3L) == \"0 1 2 3\");\n    assert(candidate(10L) == \"0 1\
    \ 2 3 4 5 6 7 8 9 10\");\n}\nvoid main(){}"
  status: SyntaxError
  stderr: '/tmp/tmp5z7ughf1.d(15): Error: template instance `to!string` template `to`
    is not defined

    /tmp/tmp5z7ughf1.d(18): Error: slice `result` is not mutable

    Failed: ["dmd", "-unittest", "-v", "-o-", "/tmp/tmp5z7ughf1.d", "-I/tmp"]

    '
  stdout: ''
  timestamp: 1660163029
- exit_code: 1
  program: "import std.math;\n/*\n Return a string containing space-delimited numbers\
    \ starting from 0 upto n inclusive.\n    >>> string_sequence(0L)\n    \"0\"\n\
    \    >>> string_sequence(5L)\n    \"0 1 2 3 4 5\"\n    \n*/\nstring string_sequence(long\
    \ n) \n{\n    string result = \"\";\n    for (long i = 0; i <= n; i++)\n    {\n\
    \        result = result ~ to!string(i) ~ \" \";\n    }\n    return result;\n\
    }\nunittest\n{\n    alias candidate = string_sequence;\n\n    assert(candidate(0L)\
    \ == \"0\");\n    assert(candidate(3L) == \"0 1 2 3\");\n    assert(candidate(10L)\
    \ == \"0 1 2 3 4 5 6 7 8 9 10\");\n}\nvoid main(){}"
  status: SyntaxError
  stderr: '/tmp/tmpjeuahv34.d(15): Error: template instance `to!string` template `to`
    is not defined

    Failed: ["dmd", "-unittest", "-v", "-o-", "/tmp/tmpjeuahv34.d", "-I/tmp"]

    '
  stdout: ''
  timestamp: 1660163029
- exit_code: 1
  program: "import std.math;\n/*\n Return a string containing space-delimited numbers\
    \ starting from 0 upto n inclusive.\n    >>> string_sequence(0L)\n    \"0\"\n\
    \    >>> string_sequence(5L)\n    \"0 1 2 3 4 5\"\n    \n*/\nstring string_sequence(long\
    \ n) \n{\n    string result = \"\";\n    for (long i = 0; i <= n; i++)\n    {\n\
    \        result += to!string(i) + \" \";\n    }\n    return result;\n}\nunittest\n\
    {\n    alias candidate = string_sequence;\n\n    assert(candidate(0L) == \"0\"\
    );\n    assert(candidate(3L) == \"0 1 2 3\");\n    assert(candidate(10L) == \"\
    0 1 2 3 4 5 6 7 8 9 10\");\n}\nvoid main(){}"
  status: SyntaxError
  stderr: '/tmp/tmpbl63d6z8.d(15): Error: template instance `to!string` template `to`
    is not defined

    Failed: ["dmd", "-unittest", "-v", "-o-", "/tmp/tmpbl63d6z8.d", "-I/tmp"]

    '
  stdout: ''
  timestamp: 1660163029
- exit_code: 1
  program: "import std.math;\n/*\n Return a string containing space-delimited numbers\
    \ starting from 0 upto n inclusive.\n    >>> string_sequence(0L)\n    \"0\"\n\
    \    >>> string_sequence(5L)\n    \"0 1 2 3 4 5\"\n    \n*/\nstring string_sequence(long\
    \ n) \n{\n    string result = \"\";\n    for (long i = 0; i <= n; i++)\n    {\n\
    \        result += to!string(i) + \" \";\n    }\n    return result;\n}\nunittest\n\
    {\n    alias candidate = string_sequence;\n\n    assert(candidate(0L) == \"0\"\
    );\n    assert(candidate(3L) == \"0 1 2 3\");\n    assert(candidate(10L) == \"\
    0 1 2 3 4 5 6 7 8 9 10\");\n}\nvoid main(){}"
  status: SyntaxError
  stderr: '/tmp/tmpbl63d6z8.d(15): Error: template instance `to!string` template `to`
    is not defined

    Failed: ["dmd", "-unittest", "-v", "-o-", "/tmp/tmpbl63d6z8.d", "-I/tmp"]

    '
  stdout: ''
  timestamp: 1660163029
- exit_code: 1
  program: "import std.math;\n/*\n Return a string containing space-delimited numbers\
    \ starting from 0 upto n inclusive.\n    >>> string_sequence(0L)\n    \"0\"\n\
    \    >>> string_sequence(5L)\n    \"0 1 2 3 4 5\"\n    \n*/\nstring string_sequence(long\
    \ n) \n{\n    string result = \"\";\n    for (long i = 0; i <= n; i++) \n    {\n\
    \        result += to!string(i);\n        if (i < n) \n        {\n           \
    \ result += \" \";\n        }\n    }\n    return result;\n}\nunittest\n{\n   \
    \ alias candidate = string_sequence;\n\n    assert(candidate(0L) == \"0\");\n\
    \    assert(candidate(3L) == \"0 1 2 3\");\n    assert(candidate(10L) == \"0 1\
    \ 2 3 4 5 6 7 8 9 10\");\n}\nvoid main(){}"
  status: SyntaxError
  stderr: '/tmp/tmp5z7ughf1.d(15): Error: template instance `to!string` template `to`
    is not defined

    /tmp/tmp5z7ughf1.d(18): Error: slice `result` is not mutable

    Failed: ["dmd", "-unittest", "-v", "-o-", "/tmp/tmp5z7ughf1.d", "-I/tmp"]

    '
  stdout: ''
  timestamp: 1660163029
- exit_code: 1
  program: "import std.math;\n/*\n Return a string containing space-delimited numbers\
    \ starting from 0 upto n inclusive.\n    >>> string_sequence(0L)\n    \"0\"\n\
    \    >>> string_sequence(5L)\n    \"0 1 2 3 4 5\"\n    \n*/\nstring string_sequence(long\
    \ n) \n{\n    string result;\n    foreach (i; 0L .. n + 1L)\n    {\n        result\
    \ ~= i.to!string;\n        if (i != n)\n            result ~= \" \";\n    }\n\
    \    return result;\n}\nunittest\n{\n    alias candidate = string_sequence;\n\n\
    \    assert(candidate(0L) == \"0\");\n    assert(candidate(3L) == \"0 1 2 3\"\
    );\n    assert(candidate(10L) == \"0 1 2 3 4 5 6 7 8 9 10\");\n}\nvoid main(){}"
  status: SyntaxError
  stderr: '/tmp/tmpqwieuzn1.d(15): Error: no property `to` for type `long`

    Failed: ["dmd", "-unittest", "-v", "-o-", "/tmp/tmpqwieuzn1.d", "-I/tmp"]

    '
  stdout: ''
  timestamp: 1660163029
- exit_code: 1
  program: "import std.math;\n/*\n Return a string containing space-delimited numbers\
    \ starting from 0 upto n inclusive.\n    >>> string_sequence(0L)\n    \"0\"\n\
    \    >>> string_sequence(5L)\n    \"0 1 2 3 4 5\"\n    \n*/\nstring string_sequence(long\
    \ n) \n{\n    string result;\n    foreach (i; 0L .. n + 1L) \n    {\n        result\
    \ ~= to!string(i) ~ \" \";\n    }\n    return result;\n}\nunittest\n{\n    alias\
    \ candidate = string_sequence;\n\n    assert(candidate(0L) == \"0\");\n    assert(candidate(3L)\
    \ == \"0 1 2 3\");\n    assert(candidate(10L) == \"0 1 2 3 4 5 6 7 8 9 10\");\n\
    }\nvoid main(){}"
  status: SyntaxError
  stderr: '/tmp/tmp5b1i0ps1.d(15): Error: template instance `to!string` template `to`
    is not defined

    Failed: ["dmd", "-unittest", "-v", "-o-", "/tmp/tmp5b1i0ps1.d", "-I/tmp"]

    '
  stdout: ''
  timestamp: 1660163029
- exit_code: 1
  program: "import std.math;\n/*\n Return a string containing space-delimited numbers\
    \ starting from 0 upto n inclusive.\n    >>> string_sequence(0L)\n    \"0\"\n\
    \    >>> string_sequence(5L)\n    \"0 1 2 3 4 5\"\n    \n*/\nstring string_sequence(long\
    \ n) \n{\n    string result = \"\";\n    foreach (i; 0L .. n + 1L) \n    {\n \
    \       result ~= to!string(i) ~ \" \";\n    }\n    return result;\n}\nunittest\n\
    {\n    alias candidate = string_sequence;\n\n    assert(candidate(0L) == \"0\"\
    );\n    assert(candidate(3L) == \"0 1 2 3\");\n    assert(candidate(10L) == \"\
    0 1 2 3 4 5 6 7 8 9 10\");\n}\nvoid main(){}"
  status: SyntaxError
  stderr: '/tmp/tmpvkr8_bpf.d(15): Error: template instance `to!string` template `to`
    is not defined

    Failed: ["dmd", "-unittest", "-v", "-o-", "/tmp/tmpvkr8_bpf.d", "-I/tmp"]

    '
  stdout: ''
  timestamp: 1660163029
- exit_code: 1
  program: "import std.math;\n/*\n Return a string containing space-delimited numbers\
    \ starting from 0 upto n inclusive.\n    >>> string_sequence(0L)\n    \"0\"\n\
    \    >>> string_sequence(5L)\n    \"0 1 2 3 4 5\"\n    \n*/\nstring string_sequence(long\
    \ n) \n{\n    string result = \"\";\n    for (long i = 0; i <= n; i++)\n    {\n\
    \        result += to!string(i) + \" \";\n    }\n    return result;\n}\nunittest\n\
    {\n    alias candidate = string_sequence;\n\n    assert(candidate(0L) == \"0\"\
    );\n    assert(candidate(3L) == \"0 1 2 3\");\n    assert(candidate(10L) == \"\
    0 1 2 3 4 5 6 7 8 9 10\");\n}\nvoid main(){}"
  status: SyntaxError
  stderr: '/tmp/tmpbl63d6z8.d(15): Error: template instance `to!string` template `to`
    is not defined

    Failed: ["dmd", "-unittest", "-v", "-o-", "/tmp/tmpbl63d6z8.d", "-I/tmp"]

    '
  stdout: ''
  timestamp: 1660163029
- exit_code: 1
  program: "import std.math;\n/*\n Return a string containing space-delimited numbers\
    \ starting from 0 upto n inclusive.\n    >>> string_sequence(0L)\n    \"0\"\n\
    \    >>> string_sequence(5L)\n    \"0 1 2 3 4 5\"\n    \n*/\nstring string_sequence(long\
    \ n) \n{\n    string result = \"\";\n    foreach (i; 0L .. n + 1L)\n    {\n  \
    \      result ~= i.to!string;\n        if (i < n)\n            result ~= \" \"\
    ;\n    }\n    return result;\n}\nunittest\n{\n    alias candidate = string_sequence;\n\
    \n    assert(candidate(0L) == \"0\");\n    assert(candidate(3L) == \"0 1 2 3\"\
    );\n    assert(candidate(10L) == \"0 1 2 3 4 5 6 7 8 9 10\");\n}\nvoid main(){}"
  status: SyntaxError
  stderr: '/tmp/tmpsnnfj3uz.d(15): Error: no property `to` for type `long`

    Failed: ["dmd", "-unittest", "-v", "-o-", "/tmp/tmpsnnfj3uz.d", "-I/tmp"]

    '
  stdout: ''
  timestamp: 1660163029
- exit_code: 1
  program: "import std.math;\n/*\n Return a string containing space-delimited numbers\
    \ starting from 0 upto n inclusive.\n    >>> string_sequence(0L)\n    \"0\"\n\
    \    >>> string_sequence(5L)\n    \"0 1 2 3 4 5\"\n    \n*/\nstring string_sequence(long\
    \ n) \n{\n    string result = \"\";\n    for (long i = 0; i <= n; i++) \n    {\n\
    \        result += to!string(i);\n        if (i < n)\n            result += \"\
    \ \";\n    }\n    return result;\n}\nunittest\n{\n    alias candidate = string_sequence;\n\
    \n    assert(candidate(0L) == \"0\");\n    assert(candidate(3L) == \"0 1 2 3\"\
    );\n    assert(candidate(10L) == \"0 1 2 3 4 5 6 7 8 9 10\");\n}\nvoid main(){}"
  status: SyntaxError
  stderr: '/tmp/tmp1fswe0bx.d(15): Error: template instance `to!string` template `to`
    is not defined

    /tmp/tmp1fswe0bx.d(17): Error: slice `result` is not mutable

    Failed: ["dmd", "-unittest", "-v", "-o-", "/tmp/tmp1fswe0bx.d", "-I/tmp"]

    '
  stdout: ''
  timestamp: 1660163029
- exit_code: 1
  program: "import std.math;\n/*\n Return a string containing space-delimited numbers\
    \ starting from 0 upto n inclusive.\n    >>> string_sequence(0L)\n    \"0\"\n\
    \    >>> string_sequence(5L)\n    \"0 1 2 3 4 5\"\n    \n*/\nstring string_sequence(long\
    \ n) \n{\n    string result = \"\";\n    for (long i = 0; i <= n; i++) \n    {\n\
    \        result += to!string(i);\n        if (i < n) \n        {\n           \
    \ result += \" \";\n        }\n    }\n    return result;\n}\nunittest\n{\n   \
    \ alias candidate = string_sequence;\n\n    assert(candidate(0L) == \"0\");\n\
    \    assert(candidate(3L) == \"0 1 2 3\");\n    assert(candidate(10L) == \"0 1\
    \ 2 3 4 5 6 7 8 9 10\");\n}\nvoid main(){}"
  status: SyntaxError
  stderr: '/tmp/tmp5z7ughf1.d(15): Error: template instance `to!string` template `to`
    is not defined

    /tmp/tmp5z7ughf1.d(18): Error: slice `result` is not mutable

    Failed: ["dmd", "-unittest", "-v", "-o-", "/tmp/tmp5z7ughf1.d", "-I/tmp"]

    '
  stdout: ''
  timestamp: 1660163029
- exit_code: 1
  program: "import std.math;\n/*\n Return a string containing space-delimited numbers\
    \ starting from 0 upto n inclusive.\n    >>> string_sequence(0L)\n    \"0\"\n\
    \    >>> string_sequence(5L)\n    \"0 1 2 3 4 5\"\n    \n*/\nstring string_sequence(long\
    \ n) \n{\n    string result = \"\";\n    for (long i = 0; i <= n; i++)\n    {\n\
    \        result += to!string(i) + \" \";\n    }\n    return result;\n}\nunittest\n\
    {\n    alias candidate = string_sequence;\n\n    assert(candidate(0L) == \"0\"\
    );\n    assert(candidate(3L) == \"0 1 2 3\");\n    assert(candidate(10L) == \"\
    0 1 2 3 4 5 6 7 8 9 10\");\n}\nvoid main(){}"
  status: SyntaxError
  stderr: '/tmp/tmpbl63d6z8.d(15): Error: template instance `to!string` template `to`
    is not defined

    Failed: ["dmd", "-unittest", "-v", "-o-", "/tmp/tmpbl63d6z8.d", "-I/tmp"]

    '
  stdout: ''
  timestamp: 1660163029
- exit_code: 1
  program: "import std.math;\n/*\n Return a string containing space-delimited numbers\
    \ starting from 0 upto n inclusive.\n    >>> string_sequence(0L)\n    \"0\"\n\
    \    >>> string_sequence(5L)\n    \"0 1 2 3 4 5\"\n    \n*/\nstring string_sequence(long\
    \ n) \n{\n    string result;\n    foreach (i; 0L .. n + 1L)\n    {\n        result\
    \ ~= to!string(i) ~ \" \";\n    }\n    return result;\n}\n/*\n Return a string\
    \ containing space-delimited numbers starting from 0 upto n inclusive.\n    >>>\
    \ string_sequence(0L)\n    \"0\"\n    >>> string_sequence(5L)\n    \"0 1 2 3 4\
    \ 5\"\n    \n*/\nstring string_sequence_2(long n) \n{\n    string result;\n  \
    \  foreach (i; 0L .. n + 1L)\n    {\n        result ~= to!string(i) ~ \" \";\n\
    \    }\n    return result;\n}\n/*\n Return a string containing space-delimited\
    \ numbers starting from 0 upto n inclusive.\n    >>> string_sequence(0L)\n   \
    \ \"0\"\n    >>> string_sequence(5L)\n    \"0 1 2 3 4 5\"\n    \n*/\nstring string_sequence_3(long\
    \ n) \n{\n    string result;\n    foreach (i; 0L .. n + 1L)\n    {\n        result\
    \ ~= to!string(i) ~ \" \";\n    }\n    return result;\n}\n/*\n Return a string\
    \ containing space-delimited numbers starting from 0 upto n inclusive.\n    >>>\
    \ string_sequence(0L)\n    \"0\"\n    >>> string_sequence(5L)\n    \"0 1 2 3 4\
    \ 5\"\n    \n*/\nstring string_sequence_4(long n) \n{\n    string result;\n  \
    \  foreach (i; 0L .. n + 1L)\n    {\n        result ~= to!string(i) ~ \" \";\n\
    \    }\n    return result;\n}\n/*\n Return a string containing space-delimited\
    \ numbers starting from 0 upto n inclusive.\n    >>> string_sequence(0L)\n   \
    \ \"0\"\n    >>> string_sequence(5L)\n    \"0 1 2 3 4 5\"\n    \n*/\nstring string_sequence_5(long\
    \ n) \n{\n    string result;\n    foreach (i; 0L .. n + 1L)\n   \nunittest\n{\n\
    \    alias candidate = string_sequence;\n\n    assert(candidate(0L) == \"0\");\n\
    \    assert(candidate(3L) == \"0 1 2 3\");\n    assert(candidate(10L) == \"0 1\
    \ 2 3 4 5 6 7 8 9 10\");\n}\nvoid main(){}"
  status: SyntaxError
  stderr: '/tmp/tmpu24by4gx.d(83): Error: found `unittest` instead of statement

    Failed: ["dmd", "-unittest", "-v", "-o-", "/tmp/tmpu24by4gx.d", "-I/tmp"]

    '
  stdout: ''
  timestamp: 1660163029
- exit_code: 1
  program: "import std.math;\n/*\n Return a string containing space-delimited numbers\
    \ starting from 0 upto n inclusive.\n    >>> string_sequence(0L)\n    \"0\"\n\
    \    >>> string_sequence(5L)\n    \"0 1 2 3 4 5\"\n    \n*/\nstring string_sequence(long\
    \ n) \n{\n    string result = \"\";\n    foreach (i; 0L .. n + 1L)\n    {\n  \
    \      result ~= to!string(i) ~ \" \";\n    }\n    return result;\n}\nunittest\n\
    {\n    alias candidate = string_sequence;\n\n    assert(candidate(0L) == \"0\"\
    );\n    assert(candidate(3L) == \"0 1 2 3\");\n    assert(candidate(10L) == \"\
    0 1 2 3 4 5 6 7 8 9 10\");\n}\nvoid main(){}"
  status: SyntaxError
  stderr: '/tmp/tmprtj2maoj.d(15): Error: template instance `to!string` template `to`
    is not defined

    Failed: ["dmd", "-unittest", "-v", "-o-", "/tmp/tmprtj2maoj.d", "-I/tmp"]

    '
  stdout: ''
  timestamp: 1660163029
- exit_code: 1
  program: "import std.math;\n/*\n Return a string containing space-delimited numbers\
    \ starting from 0 upto n inclusive.\n    >>> string_sequence(0L)\n    \"0\"\n\
    \    >>> string_sequence(5L)\n    \"0 1 2 3 4 5\"\n    \n*/\nstring string_sequence(long\
    \ n) \n{\n    string result;\n    foreach (i; 0L .. n + 1L) \n    {\n        result\
    \ ~= i.to!string;\n        if (i < n) \n        {\n            result ~= \" \"\
    ;\n        }\n    }\n    return result;\n}\nunittest\n{\n    alias candidate =\
    \ string_sequence;\n\n    assert(candidate(0L) == \"0\");\n    assert(candidate(3L)\
    \ == \"0 1 2 3\");\n    assert(candidate(10L) == \"0 1 2 3 4 5 6 7 8 9 10\");\n\
    }\nvoid main(){}"
  status: SyntaxError
  stderr: '/tmp/tmp7ql9w_yb.d(15): Error: no property `to` for type `long`

    Failed: ["dmd", "-unittest", "-v", "-o-", "/tmp/tmp7ql9w_yb.d", "-I/tmp"]

    '
  stdout: ''
  timestamp: 1660163029
- exit_code: 1
  program: "import std.math;\n/*\n Return a string containing space-delimited numbers\
    \ starting from 0 upto n inclusive.\n    >>> string_sequence(0L)\n    \"0\"\n\
    \    >>> string_sequence(5L)\n    \"0 1 2 3 4 5\"\n    \n*/\nstring string_sequence(long\
    \ n) \n{\n    string result = \"\";\n    for (long i = 0; i <= n; i++) \n    {\n\
    \        result += to!string(i);\n        if (i < n) \n        {\n           \
    \ result += \" \";\n        }\n    }\n    return result;\n}\nunittest\n{\n   \
    \ alias candidate = string_sequence;\n\n    assert(candidate(0L) == \"0\");\n\
    \    assert(candidate(3L) == \"0 1 2 3\");\n    assert(candidate(10L) == \"0 1\
    \ 2 3 4 5 6 7 8 9 10\");\n}\nvoid main(){}"
  status: SyntaxError
  stderr: '/tmp/tmp5z7ughf1.d(15): Error: template instance `to!string` template `to`
    is not defined

    /tmp/tmp5z7ughf1.d(18): Error: slice `result` is not mutable

    Failed: ["dmd", "-unittest", "-v", "-o-", "/tmp/tmp5z7ughf1.d", "-I/tmp"]

    '
  stdout: ''
  timestamp: 1660163029
- exit_code: 1
  program: "import std.math;\n/*\n Return a string containing space-delimited numbers\
    \ starting from 0 upto n inclusive.\n    >>> string_sequence(0L)\n    \"0\"\n\
    \    >>> string_sequence(5L)\n    \"0 1 2 3 4 5\"\n    \n*/\nstring string_sequence(long\
    \ n) \n{\n    string result = \"\";\n    for (long i = 0; i <= n; i++)\n    {\n\
    \        result += to!string(i) + \" \";\n    }\n    return result.trimRight();\n\
    }\nunittest\n{\n    alias candidate = string_sequence;\n\n    assert(candidate(0L)\
    \ == \"0\");\n    assert(candidate(3L) == \"0 1 2 3\");\n    assert(candidate(10L)\
    \ == \"0 1 2 3 4 5 6 7 8 9 10\");\n}\nvoid main(){}"
  status: SyntaxError
  stderr: '/tmp/tmpkm4x2hdp.d(15): Error: template instance `to!string` template `to`
    is not defined

    /tmp/tmpkm4x2hdp.d(17): Error: no property `trimRight` for type `string`

    Failed: ["dmd", "-unittest", "-v", "-o-", "/tmp/tmpkm4x2hdp.d", "-I/tmp"]

    '
  stdout: ''
  timestamp: 1660163029
- exit_code: 1
  program: "import std.math;\n/*\n Return a string containing space-delimited numbers\
    \ starting from 0 upto n inclusive.\n    >>> string_sequence(0L)\n    \"0\"\n\
    \    >>> string_sequence(5L)\n    \"0 1 2 3 4 5\"\n    \n*/\nstring string_sequence(long\
    \ n) \n{\n    string result = \"\";\n    foreach (i; 0L .. n + 1L)\n    {\n  \
    \      result ~= to!string(i) ~ \" \";\n    }\n    return result;\n}\nunittest\n\
    {\n    alias candidate = string_sequence;\n\n    assert(candidate(0L) == \"0\"\
    );\n    assert(candidate(3L) == \"0 1 2 3\");\n    assert(candidate(10L) == \"\
    0 1 2 3 4 5 6 7 8 9 10\");\n}\nvoid main(){}"
  status: SyntaxError
  stderr: '/tmp/tmprtj2maoj.d(15): Error: template instance `to!string` template `to`
    is not defined

    Failed: ["dmd", "-unittest", "-v", "-o-", "/tmp/tmprtj2maoj.d", "-I/tmp"]

    '
  stdout: ''
  timestamp: 1660163029
- exit_code: 1
  program: "import std.math;\n/*\n Return a string containing space-delimited numbers\
    \ starting from 0 upto n inclusive.\n    >>> string_sequence(0L)\n    \"0\"\n\
    \    >>> string_sequence(5L)\n    \"0 1 2 3 4 5\"\n    \n*/\nstring string_sequence(long\
    \ n) \n{\n    string result = \"\";\n    for (long i = 0; i <= n; i++)\n    {\n\
    \        result += to!string(i) + \" \";\n    }\n    return result;\n}\nunittest\n\
    {\n    alias candidate = string_sequence;\n\n    assert(candidate(0L) == \"0\"\
    );\n    assert(candidate(3L) == \"0 1 2 3\");\n    assert(candidate(10L) == \"\
    0 1 2 3 4 5 6 7 8 9 10\");\n}\nvoid main(){}"
  status: SyntaxError
  stderr: '/tmp/tmpbl63d6z8.d(15): Error: template instance `to!string` template `to`
    is not defined

    Failed: ["dmd", "-unittest", "-v", "-o-", "/tmp/tmpbl63d6z8.d", "-I/tmp"]

    '
  stdout: ''
  timestamp: 1660163029
- exit_code: 1
  program: "import std.math;\n/*\n Return a string containing space-delimited numbers\
    \ starting from 0 upto n inclusive.\n    >>> string_sequence(0L)\n    \"0\"\n\
    \    >>> string_sequence(5L)\n    \"0 1 2 3 4 5\"\n    \n*/\nstring string_sequence(long\
    \ n) \n{\n    string result;\n    foreach (i; 0L .. n + 1L)\n    {\n        result\
    \ ~= to!string(i) ~ \" \";\n    }\n    return result;\n}\nunittest\n{\n    alias\
    \ candidate = string_sequence;\n\n    assert(candidate(0L) == \"0\");\n    assert(candidate(3L)\
    \ == \"0 1 2 3\");\n    assert(candidate(10L) == \"0 1 2 3 4 5 6 7 8 9 10\");\n\
    }\nvoid main(){}"
  status: SyntaxError
  stderr: '/tmp/tmp6ptkbkg7.d(15): Error: template instance `to!string` template `to`
    is not defined

    Failed: ["dmd", "-unittest", "-v", "-o-", "/tmp/tmp6ptkbkg7.d", "-I/tmp"]

    '
  stdout: ''
  timestamp: 1660163029
- exit_code: 1
  program: "import std.math;\n/*\n Return a string containing space-delimited numbers\
    \ starting from 0 upto n inclusive.\n    >>> string_sequence(0L)\n    \"0\"\n\
    \    >>> string_sequence(5L)\n    \"0 1 2 3 4 5\"\n    \n*/\nstring string_sequence(long\
    \ n) \n{\n    string result = \"\";\n    for (long i = 0; i <= n; i++) \n    {\n\
    \        result += to!string(i);\n        if (i < n) \n        {\n           \
    \ result += \" \";\n        }\n    }\n    return result;\n}\nunittest\n{\n   \
    \ alias candidate = string_sequence;\n\n    assert(candidate(0L) == \"0\");\n\
    \    assert(candidate(3L) == \"0 1 2 3\");\n    assert(candidate(10L) == \"0 1\
    \ 2 3 4 5 6 7 8 9 10\");\n}\nvoid main(){}"
  status: SyntaxError
  stderr: '/tmp/tmp5z7ughf1.d(15): Error: template instance `to!string` template `to`
    is not defined

    /tmp/tmp5z7ughf1.d(18): Error: slice `result` is not mutable

    Failed: ["dmd", "-unittest", "-v", "-o-", "/tmp/tmp5z7ughf1.d", "-I/tmp"]

    '
  stdout: ''
  timestamp: 1660163029
- exit_code: 1
  program: "import std.math;\n/*\n Return a string containing space-delimited numbers\
    \ starting from 0 upto n inclusive.\n    >>> string_sequence(0L)\n    \"0\"\n\
    \    >>> string_sequence(5L)\n    \"0 1 2 3 4 5\"\n    \n*/\nstring string_sequence(long\
    \ n) \n{\n    string result;\n    foreach (i; 0L .. n+1L) \n    {\n        result\
    \ ~= i;\n        if (i < n) \n        {\n            result ~= \" \";\n      \
    \  }\n    }\n    return result;\n}\nunittest\n{\n    alias candidate = string_sequence;\n\
    \n    assert(candidate(0L) == \"0\");\n    assert(candidate(3L) == \"0 1 2 3\"\
    );\n    assert(candidate(10L) == \"0 1 2 3 4 5 6 7 8 9 10\");\n}\nvoid main(){}"
  status: SyntaxError
  stderr: '/tmp/tmpn0prlx2t.d(15): Error: cannot append type `long` to type `string`

    Failed: ["dmd", "-unittest", "-v", "-o-", "/tmp/tmpn0prlx2t.d", "-I/tmp"]

    '
  stdout: ''
  timestamp: 1660163029
- exit_code: 1
  program: "import std.math;\n/*\n Return a string containing space-delimited numbers\
    \ starting from 0 upto n inclusive.\n    >>> string_sequence(0L)\n    \"0\"\n\
    \    >>> string_sequence(5L)\n    \"0 1 2 3 4 5\"\n    \n*/\nstring string_sequence(long\
    \ n) \n{\n    string result;\n    for (long i = 0; i <= n; i++) \n    {\n    \
    \    result ~= to!string(i);\n        if (i < n) \n        {\n            result\
    \ ~= \" \";\n        }\n    }\n    return result;\n}\nunittest\n{\n    alias candidate\
    \ = string_sequence;\n\n    assert(candidate(0L) == \"0\");\n    assert(candidate(3L)\
    \ == \"0 1 2 3\");\n    assert(candidate(10L) == \"0 1 2 3 4 5 6 7 8 9 10\");\n\
    }\nvoid main(){}"
  status: SyntaxError
  stderr: '/tmp/tmpjitp3ztf.d(15): Error: template instance `to!string` template `to`
    is not defined

    Failed: ["dmd", "-unittest", "-v", "-o-", "/tmp/tmpjitp3ztf.d", "-I/tmp"]

    '
  stdout: ''
  timestamp: 1660163029
- exit_code: 1
  program: "import std.math;\n/*\n Return a string containing space-delimited numbers\
    \ starting from 0 upto n inclusive.\n    >>> string_sequence(0L)\n    \"0\"\n\
    \    >>> string_sequence(5L)\n    \"0 1 2 3 4 5\"\n    \n*/\nstring string_sequence(long\
    \ n) \n{\n    string result;\n    foreach (i; 0L .. n + 1L)\n    {\n        result\
    \ ~= i.to!string;\n        if (i != n)\n            result ~= \" \";\n    }\n\
    \    return result;\n}\nunittest\n{\n    alias candidate = string_sequence;\n\n\
    \    assert(candidate(0L) == \"0\");\n    assert(candidate(3L) == \"0 1 2 3\"\
    );\n    assert(candidate(10L) == \"0 1 2 3 4 5 6 7 8 9 10\");\n}\nvoid main(){}"
  status: SyntaxError
  stderr: '/tmp/tmpqwieuzn1.d(15): Error: no property `to` for type `long`

    Failed: ["dmd", "-unittest", "-v", "-o-", "/tmp/tmpqwieuzn1.d", "-I/tmp"]

    '
  stdout: ''
  timestamp: 1660163029
- exit_code: 1
  program: "import std.math;\n/*\n Return a string containing space-delimited numbers\
    \ starting from 0 upto n inclusive.\n    >>> string_sequence(0L)\n    \"0\"\n\
    \    >>> string_sequence(5L)\n    \"0 1 2 3 4 5\"\n    \n*/\nstring string_sequence(long\
    \ n) \n{\n    string result;\n    foreach (i; 0L .. n + 1L)\n    {\n        result\
    \ ~= to!string(i) ~ \" \";\n    }\n    return result;\n}\nunittest\n{\n    alias\
    \ candidate = string_sequence;\n\n    assert(candidate(0L) == \"0\");\n    assert(candidate(3L)\
    \ == \"0 1 2 3\");\n    assert(candidate(10L) == \"0 1 2 3 4 5 6 7 8 9 10\");\n\
    }\nvoid main(){}"
  status: SyntaxError
  stderr: '/tmp/tmp6ptkbkg7.d(15): Error: template instance `to!string` template `to`
    is not defined

    Failed: ["dmd", "-unittest", "-v", "-o-", "/tmp/tmp6ptkbkg7.d", "-I/tmp"]

    '
  stdout: ''
  timestamp: 1660163029
- exit_code: 1
  program: "import std.math;\n/*\n Return a string containing space-delimited numbers\
    \ starting from 0 upto n inclusive.\n    >>> string_sequence(0L)\n    \"0\"\n\
    \    >>> string_sequence(5L)\n    \"0 1 2 3 4 5\"\n    \n*/\nstring string_sequence(long\
    \ n) \n{\n    string result = \"\";\n    foreach (i; 0L .. n + 1L)\n    {\n  \
    \      result ~= i.to!string;\n        if (i != n)\n            result ~= \" \"\
    ;\n    }\n    return result;\n}\nunittest\n{\n    alias candidate = string_sequence;\n\
    \n    assert(candidate(0L) == \"0\");\n    assert(candidate(3L) == \"0 1 2 3\"\
    );\n    assert(candidate(10L) == \"0 1 2 3 4 5 6 7 8 9 10\");\n}\nvoid main(){}"
  status: SyntaxError
  stderr: '/tmp/tmpah81_gdo.d(15): Error: no property `to` for type `long`

    Failed: ["dmd", "-unittest", "-v", "-o-", "/tmp/tmpah81_gdo.d", "-I/tmp"]

    '
  stdout: ''
  timestamp: 1660163029
- exit_code: 1
  program: "import std.math;\n/*\n Return a string containing space-delimited numbers\
    \ starting from 0 upto n inclusive.\n    >>> string_sequence(0L)\n    \"0\"\n\
    \    >>> string_sequence(5L)\n    \"0 1 2 3 4 5\"\n    \n*/\nstring string_sequence(long\
    \ n) \n{\n    string result;\n    for (long i = 0; i <= n; i++) \n    {\n    \
    \    result ~= to!string(i);\n        if (i < n) \n        {\n            result\
    \ ~= \" \";\n        }\n    }\n    return result;\n}\nunittest\n{\n    alias candidate\
    \ = string_sequence;\n\n    assert(candidate(0L) == \"0\");\n    assert(candidate(3L)\
    \ == \"0 1 2 3\");\n    assert(candidate(10L) == \"0 1 2 3 4 5 6 7 8 9 10\");\n\
    }\nvoid main(){}"
  status: SyntaxError
  stderr: '/tmp/tmpjitp3ztf.d(15): Error: template instance `to!string` template `to`
    is not defined

    Failed: ["dmd", "-unittest", "-v", "-o-", "/tmp/tmpjitp3ztf.d", "-I/tmp"]

    '
  stdout: ''
  timestamp: 1660163029
- exit_code: 1
  program: "import std.math;\n/*\n Return a string containing space-delimited numbers\
    \ starting from 0 upto n inclusive.\n    >>> string_sequence(0L)\n    \"0\"\n\
    \    >>> string_sequence(5L)\n    \"0 1 2 3 4 5\"\n    \n*/\nstring string_sequence(long\
    \ n) \n{\n    string result;\n    foreach (i; 0L .. n + 1L)\n    {\n        result\
    \ ~= i.to!string;\n        if (i != n)\n            result ~= \" \";\n    }\n\
    \    return result;\n}\nunittest\n{\n    alias candidate = string_sequence;\n\n\
    \    assert(candidate(0L) == \"0\");\n    assert(candidate(3L) == \"0 1 2 3\"\
    );\n    assert(candidate(10L) == \"0 1 2 3 4 5 6 7 8 9 10\");\n}\nvoid main(){}"
  status: SyntaxError
  stderr: '/tmp/tmpqwieuzn1.d(15): Error: no property `to` for type `long`

    Failed: ["dmd", "-unittest", "-v", "-o-", "/tmp/tmpqwieuzn1.d", "-I/tmp"]

    '
  stdout: ''
  timestamp: 1660163029
- exit_code: 1
  program: "import std.math;\n/*\n Return a string containing space-delimited numbers\
    \ starting from 0 upto n inclusive.\n    >>> string_sequence(0L)\n    \"0\"\n\
    \    >>> string_sequence(5L)\n    \"0 1 2 3 4 5\"\n    \n*/\nstring string_sequence(long\
    \ n) \n{\n    string result = \"\";\n    foreach (i; 0L .. n + 1L)\n    {\n  \
    \      result ~= i.to!string();\n        if (i < n)\n            result ~= \"\
    \ \";\n    }\n    return result;\n}\nunittest\n{\n    alias candidate = string_sequence;\n\
    \n    assert(candidate(0L) == \"0\");\n    assert(candidate(3L) == \"0 1 2 3\"\
    );\n    assert(candidate(10L) == \"0 1 2 3 4 5 6 7 8 9 10\");\n}\nvoid main(){}"
  status: SyntaxError
  stderr: '/tmp/tmpzfxv3oqt.d(15): Error: no property `to` for type `long`

    Failed: ["dmd", "-unittest", "-v", "-o-", "/tmp/tmpzfxv3oqt.d", "-I/tmp"]

    '
  stdout: ''
  timestamp: 1660163029
- exit_code: 1
  program: "import std.math;\n/*\n Return a string containing space-delimited numbers\
    \ starting from 0 upto n inclusive.\n    >>> string_sequence(0L)\n    \"0\"\n\
    \    >>> string_sequence(5L)\n    \"0 1 2 3 4 5\"\n    \n*/\nstring string_sequence(long\
    \ n) \n{\n    string result;\n    foreach (i; 0L .. n + 1L) \n    {\n        result\
    \ ~= i.to!string;\n        if (i < n) \n        {\n            result ~= \" \"\
    ;\n        }\n    }\n    return result;\n}\nunittest\n{\n    alias candidate =\
    \ string_sequence;\n\n    assert(candidate(0L) == \"0\");\n    assert(candidate(3L)\
    \ == \"0 1 2 3\");\n    assert(candidate(10L) == \"0 1 2 3 4 5 6 7 8 9 10\");\n\
    }\nvoid main(){}"
  status: SyntaxError
  stderr: '/tmp/tmp7ql9w_yb.d(15): Error: no property `to` for type `long`

    Failed: ["dmd", "-unittest", "-v", "-o-", "/tmp/tmp7ql9w_yb.d", "-I/tmp"]

    '
  stdout: ''
  timestamp: 1660163029
- exit_code: 1
  program: "import std.math;\n/*\n Return a string containing space-delimited numbers\
    \ starting from 0 upto n inclusive.\n    >>> string_sequence(0L)\n    \"0\"\n\
    \    >>> string_sequence(5L)\n    \"0 1 2 3 4 5\"\n    \n*/\nstring string_sequence(long\
    \ n) \n{\n    string s = \"\";\n    for (long i = 0; i <= n; i++) \n    {\n  \
    \      s += to!string(i);\n        if (i < n)\n            s += \" \";\n    }\n\
    \    return s;\n}\nunittest\n{\n    alias candidate = string_sequence;\n\n   \
    \ assert(candidate(0L) == \"0\");\n    assert(candidate(3L) == \"0 1 2 3\");\n\
    \    assert(candidate(10L) == \"0 1 2 3 4 5 6 7 8 9 10\");\n}\nvoid main(){}"
  status: SyntaxError
  stderr: '/tmp/tmprz1tzzgi.d(15): Error: template instance `to!string` template `to`
    is not defined

    /tmp/tmprz1tzzgi.d(17): Error: slice `s` is not mutable

    Failed: ["dmd", "-unittest", "-v", "-o-", "/tmp/tmprz1tzzgi.d", "-I/tmp"]

    '
  stdout: ''
  timestamp: 1660163029
- exit_code: 1
  program: "import std.math;\n/*\n Return a string containing space-delimited numbers\
    \ starting from 0 upto n inclusive.\n    >>> string_sequence(0L)\n    \"0\"\n\
    \    >>> string_sequence(5L)\n    \"0 1 2 3 4 5\"\n    \n*/\nstring string_sequence(long\
    \ n) \n{\n    string result = \"\";\n    for (int i = 0; i <= n; i++)\n    {\n\
    \        result += to!string(i) + \" \";\n    }\n    return result;\n}\nunittest\n\
    {\n    alias candidate = string_sequence;\n\n    assert(candidate(0L) == \"0\"\
    );\n    assert(candidate(3L) == \"0 1 2 3\");\n    assert(candidate(10L) == \"\
    0 1 2 3 4 5 6 7 8 9 10\");\n}\nvoid main(){}"
  status: SyntaxError
  stderr: '/tmp/tmpqedm2hre.d(15): Error: template instance `to!string` template `to`
    is not defined

    Failed: ["dmd", "-unittest", "-v", "-o-", "/tmp/tmpqedm2hre.d", "-I/tmp"]

    '
  stdout: ''
  timestamp: 1660163029
- exit_code: 1
  program: "import std.math;\n/*\n Return a string containing space-delimited numbers\
    \ starting from 0 upto n inclusive.\n    >>> string_sequence(0L)\n    \"0\"\n\
    \    >>> string_sequence(5L)\n    \"0 1 2 3 4 5\"\n    \n*/\nstring string_sequence(long\
    \ n) \n{\n    string result;\n    foreach (i; 0L .. n + 1L)\n    {\n        result\
    \ ~= to!string(i) ~ \" \";\n    }\n    return result;\n}\nunittest\n{\n    alias\
    \ candidate = string_sequence;\n\n    assert(candidate(0L) == \"0\");\n    assert(candidate(3L)\
    \ == \"0 1 2 3\");\n    assert(candidate(10L) == \"0 1 2 3 4 5 6 7 8 9 10\");\n\
    }\nvoid main(){}"
  status: SyntaxError
  stderr: '/tmp/tmp6ptkbkg7.d(15): Error: template instance `to!string` template `to`
    is not defined

    Failed: ["dmd", "-unittest", "-v", "-o-", "/tmp/tmp6ptkbkg7.d", "-I/tmp"]

    '
  stdout: ''
  timestamp: 1660163029
- exit_code: 1
  program: "import std.math;\n/*\n Return a string containing space-delimited numbers\
    \ starting from 0 upto n inclusive.\n    >>> string_sequence(0L)\n    \"0\"\n\
    \    >>> string_sequence(5L)\n    \"0 1 2 3 4 5\"\n    \n*/\nstring string_sequence(long\
    \ n) \n{\n    string result = \"\";\n    foreach (i; 0L .. n + 1L) \n    {\n \
    \       result ~= to!string(i) ~ \" \";\n    }\n    return result;\n}\nunittest\n\
    {\n    alias candidate = string_sequence;\n\n    assert(candidate(0L) == \"0\"\
    );\n    assert(candidate(3L) == \"0 1 2 3\");\n    assert(candidate(10L) == \"\
    0 1 2 3 4 5 6 7 8 9 10\");\n}\nvoid main(){}"
  status: SyntaxError
  stderr: '/tmp/tmpvkr8_bpf.d(15): Error: template instance `to!string` template `to`
    is not defined

    Failed: ["dmd", "-unittest", "-v", "-o-", "/tmp/tmpvkr8_bpf.d", "-I/tmp"]

    '
  stdout: ''
  timestamp: 1660163029
- exit_code: 1
  program: "import std.math;\n/*\n Return a string containing space-delimited numbers\
    \ starting from 0 upto n inclusive.\n    >>> string_sequence(0L)\n    \"0\"\n\
    \    >>> string_sequence(5L)\n    \"0 1 2 3 4 5\"\n    \n*/\nstring string_sequence(long\
    \ n) \n{\n    string result = \"\";\n    for (long i = 0; i <= n; i++) \n    {\n\
    \        result += to!string(i);\n        if (i < n) \n        {\n           \
    \ result += \" \";\n        }\n    }\n    return result;\n}\nunittest\n{\n   \
    \ alias candidate = string_sequence;\n\n    assert(candidate(0L) == \"0\");\n\
    \    assert(candidate(3L) == \"0 1 2 3\");\n    assert(candidate(10L) == \"0 1\
    \ 2 3 4 5 6 7 8 9 10\");\n}\nvoid main(){}"
  status: SyntaxError
  stderr: '/tmp/tmp5z7ughf1.d(15): Error: template instance `to!string` template `to`
    is not defined

    /tmp/tmp5z7ughf1.d(18): Error: slice `result` is not mutable

    Failed: ["dmd", "-unittest", "-v", "-o-", "/tmp/tmp5z7ughf1.d", "-I/tmp"]

    '
  stdout: ''
  timestamp: 1660163029
- exit_code: 1
  program: "import std.math;\n/*\n Return a string containing space-delimited numbers\
    \ starting from 0 upto n inclusive.\n    >>> string_sequence(0L)\n    \"0\"\n\
    \    >>> string_sequence(5L)\n    \"0 1 2 3 4 5\"\n    \n*/\nstring string_sequence(long\
    \ n) \n{\n    string result;\n    foreach (i; 0L .. n + 1L) \n    {\n        result\
    \ ~= i.to!string;\n        if (i < n) \n        {\n            result ~= \" \"\
    ;\n        }\n    }\n    return result;\n}\nunittest\n{\n    alias candidate =\
    \ string_sequence;\n\n    assert(candidate(0L) == \"0\");\n    assert(candidate(3L)\
    \ == \"0 1 2 3\");\n    assert(candidate(10L) == \"0 1 2 3 4 5 6 7 8 9 10\");\n\
    }\nvoid main(){}"
  status: SyntaxError
  stderr: '/tmp/tmp7ql9w_yb.d(15): Error: no property `to` for type `long`

    Failed: ["dmd", "-unittest", "-v", "-o-", "/tmp/tmp7ql9w_yb.d", "-I/tmp"]

    '
  stdout: ''
  timestamp: 1660163029
- exit_code: 1
  program: "import std.math;\n/*\n Return a string containing space-delimited numbers\
    \ starting from 0 upto n inclusive.\n    >>> string_sequence(0L)\n    \"0\"\n\
    \    >>> string_sequence(5L)\n    \"0 1 2 3 4 5\"\n    \n*/\nstring string_sequence(long\
    \ n) \n{\n    string s = \"\";\n    for (long i = 0; i <= n; i++)\n    {\n   \
    \     s += to!string(i);\n        if (i != n)\n            s += \" \";\n    }\n\
    \    return s;\n}\nunittest\n{\n    alias candidate = string_sequence;\n\n   \
    \ assert(candidate(0L) == \"0\");\n    assert(candidate(3L) == \"0 1 2 3\");\n\
    \    assert(candidate(10L) == \"0 1 2 3 4 5 6 7 8 9 10\");\n}\nvoid main(){}"
  status: SyntaxError
  stderr: '/tmp/tmpbm3usd8m.d(15): Error: template instance `to!string` template `to`
    is not defined

    /tmp/tmpbm3usd8m.d(17): Error: slice `s` is not mutable

    Failed: ["dmd", "-unittest", "-v", "-o-", "/tmp/tmpbm3usd8m.d", "-I/tmp"]

    '
  stdout: ''
  timestamp: 1660163029
- exit_code: 1
  program: "import std.math;\n/*\n Return a string containing space-delimited numbers\
    \ starting from 0 upto n inclusive.\n    >>> string_sequence(0L)\n    \"0\"\n\
    \    >>> string_sequence(5L)\n    \"0 1 2 3 4 5\"\n    \n*/\nstring string_sequence(long\
    \ n) \n{\n    string result;\n    foreach (i; 0L .. n + 1L)\n    {\n        result\
    \ ~= to!string(i) ~ \" \";\n    }\n    return result;\n}\nunittest\n{\n    alias\
    \ candidate = string_sequence;\n\n    assert(candidate(0L) == \"0\");\n    assert(candidate(3L)\
    \ == \"0 1 2 3\");\n    assert(candidate(10L) == \"0 1 2 3 4 5 6 7 8 9 10\");\n\
    }\nvoid main(){}"
  status: SyntaxError
  stderr: '/tmp/tmp6ptkbkg7.d(15): Error: template instance `to!string` template `to`
    is not defined

    Failed: ["dmd", "-unittest", "-v", "-o-", "/tmp/tmp6ptkbkg7.d", "-I/tmp"]

    '
  stdout: ''
  timestamp: 1660163029
- exit_code: 1
  program: "import std.math;\n/*\n Return a string containing space-delimited numbers\
    \ starting from 0 upto n inclusive.\n    >>> string_sequence(0L)\n    \"0\"\n\
    \    >>> string_sequence(5L)\n    \"0 1 2 3 4 5\"\n    \n*/\nstring string_sequence(long\
    \ n) \n{\n    string s = \"\";\n    for (long i = 0; i <= n; i++) \n    {\n  \
    \      s += to!string(i);\n        if (i < n) \n        {\n            s += \"\
    \ \";\n        }\n    }\n    return s;\n}\nunittest\n{\n    alias candidate =\
    \ string_sequence;\n\n    assert(candidate(0L) == \"0\");\n    assert(candidate(3L)\
    \ == \"0 1 2 3\");\n    assert(candidate(10L) == \"0 1 2 3 4 5 6 7 8 9 10\");\n\
    }\nvoid main(){}"
  status: SyntaxError
  stderr: '/tmp/tmp77xzgxnt.d(15): Error: template instance `to!string` template `to`
    is not defined

    /tmp/tmp77xzgxnt.d(18): Error: slice `s` is not mutable

    Failed: ["dmd", "-unittest", "-v", "-o-", "/tmp/tmp77xzgxnt.d", "-I/tmp"]

    '
  stdout: ''
  timestamp: 1660163029
- exit_code: 1
  program: "import std.math;\n/*\n Return a string containing space-delimited numbers\
    \ starting from 0 upto n inclusive.\n    >>> string_sequence(0L)\n    \"0\"\n\
    \    >>> string_sequence(5L)\n    \"0 1 2 3 4 5\"\n    \n*/\nstring string_sequence(long\
    \ n) \n{\n    string s = \"\";\n    for (long i = 0; i <= n; i++)\n    {\n   \
    \     s += to!string(i);\n        if (i < n)\n            s += \" \";\n    }\n\
    \    return s;\n}\nunittest\n{\n    alias candidate = string_sequence;\n\n   \
    \ assert(candidate(0L) == \"0\");\n    assert(candidate(3L) == \"0 1 2 3\");\n\
    \    assert(candidate(10L) == \"0 1 2 3 4 5 6 7 8 9 10\");\n}\nvoid main(){}"
  status: SyntaxError
  stderr: '/tmp/tmp4_5za_8c.d(15): Error: template instance `to!string` template `to`
    is not defined

    /tmp/tmp4_5za_8c.d(17): Error: slice `s` is not mutable

    Failed: ["dmd", "-unittest", "-v", "-o-", "/tmp/tmp4_5za_8c.d", "-I/tmp"]

    '
  stdout: ''
  timestamp: 1660163029
- exit_code: 1
  program: "import std.math;\n/*\n Return a string containing space-delimited numbers\
    \ starting from 0 upto n inclusive.\n    >>> string_sequence(0L)\n    \"0\"\n\
    \    >>> string_sequence(5L)\n    \"0 1 2 3 4 5\"\n    \n*/\nstring string_sequence(long\
    \ n) \n{\n    string result;\n    foreach (i; 0 .. n + 1)\n    {\n        result\
    \ ~= to!string(i) ~ \" \";\n    }\n    return result;\n}\nunittest\n{\n    alias\
    \ candidate = string_sequence;\n\n    assert(candidate(0L) == \"0\");\n    assert(candidate(3L)\
    \ == \"0 1 2 3\");\n    assert(candidate(10L) == \"0 1 2 3 4 5 6 7 8 9 10\");\n\
    }\nvoid main(){}"
  status: SyntaxError
  stderr: '/tmp/tmpbs4yg73g.d(15): Error: template instance `to!string` template `to`
    is not defined

    Failed: ["dmd", "-unittest", "-v", "-o-", "/tmp/tmpbs4yg73g.d", "-I/tmp"]

    '
  stdout: ''
  timestamp: 1660163029
- exit_code: 1
  program: "import std.math;\n/*\n Return a string containing space-delimited numbers\
    \ starting from 0 upto n inclusive.\n    >>> string_sequence(0L)\n    \"0\"\n\
    \    >>> string_sequence(5L)\n    \"0 1 2 3 4 5\"\n    \n*/\nstring string_sequence(long\
    \ n) \n{\n    string result;\n    for (long i = 0; i <= n; i++) \n    {\n    \
    \    result ~= to!string(i);\n        if (i < n) \n        {\n            result\
    \ ~= \" \";\n        }\n    }\n    return result;\n}\nunittest\n{\n    alias candidate\
    \ = string_sequence;\n\n    assert(candidate(0L) == \"0\");\n    assert(candidate(3L)\
    \ == \"0 1 2 3\");\n    assert(candidate(10L) == \"0 1 2 3 4 5 6 7 8 9 10\");\n\
    }\nvoid main(){}"
  status: SyntaxError
  stderr: '/tmp/tmpjitp3ztf.d(15): Error: template instance `to!string` template `to`
    is not defined

    Failed: ["dmd", "-unittest", "-v", "-o-", "/tmp/tmpjitp3ztf.d", "-I/tmp"]

    '
  stdout: ''
  timestamp: 1660163029
- exit_code: 1
  program: "import std.math;\n/*\n Return a string containing space-delimited numbers\
    \ starting from 0 upto n inclusive.\n    >>> string_sequence(0L)\n    \"0\"\n\
    \    >>> string_sequence(5L)\n    \"0 1 2 3 4 5\"\n    \n*/\nstring string_sequence(long\
    \ n) \n{\n    string result = \"\";\n    foreach (i; 0L .. n + 1L)\n    {\n  \
    \      result ~= i.to!string;\n        if (i != n)\n            result ~= \" \"\
    ;\n    }\n    return result;\n}\nunittest\n{\n    alias candidate = string_sequence;\n\
    \n    assert(candidate(0L) == \"0\");\n    assert(candidate(3L) == \"0 1 2 3\"\
    );\n    assert(candidate(10L) == \"0 1 2 3 4 5 6 7 8 9 10\");\n}\nvoid main(){}"
  status: SyntaxError
  stderr: '/tmp/tmpah81_gdo.d(15): Error: no property `to` for type `long`

    Failed: ["dmd", "-unittest", "-v", "-o-", "/tmp/tmpah81_gdo.d", "-I/tmp"]

    '
  stdout: ''
  timestamp: 1660163029
- exit_code: 1
  program: "import std.math;\n/*\n Return a string containing space-delimited numbers\
    \ starting from 0 upto n inclusive.\n    >>> string_sequence(0L)\n    \"0\"\n\
    \    >>> string_sequence(5L)\n    \"0 1 2 3 4 5\"\n    \n*/\nstring string_sequence(long\
    \ n) \n{\n    string result = \"\";\n    foreach (i; 0L .. n + 1L)\n    {\n  \
    \      result ~= to!string(i) ~ \" \";\n    }\n    return result;\n}\nunittest\n\
    {\n    alias candidate = string_sequence;\n\n    assert(candidate(0L) == \"0\"\
    );\n    assert(candidate(3L) == \"0 1 2 3\");\n    assert(candidate(10L) == \"\
    0 1 2 3 4 5 6 7 8 9 10\");\n}\nvoid main(){}"
  status: SyntaxError
  stderr: '/tmp/tmprtj2maoj.d(15): Error: template instance `to!string` template `to`
    is not defined

    Failed: ["dmd", "-unittest", "-v", "-o-", "/tmp/tmprtj2maoj.d", "-I/tmp"]

    '
  stdout: ''
  timestamp: 1660163029
- exit_code: 1
  program: "import std.math;\n/*\n Return a string containing space-delimited numbers\
    \ starting from 0 upto n inclusive.\n    >>> string_sequence(0L)\n    \"0\"\n\
    \    >>> string_sequence(5L)\n    \"0 1 2 3 4 5\"\n    \n*/\nstring string_sequence(long\
    \ n) \n{\n    string result = \"\";\n    foreach (i; 0 .. n + 1) \n    {\n   \
    \     result ~= i;\n        if (i < n) \n        {\n            result ~= \" \"\
    ;\n        }\n    }\n    return result;\n}\nunittest\n{\n    alias candidate =\
    \ string_sequence;\n\n    assert(candidate(0L) == \"0\");\n    assert(candidate(3L)\
    \ == \"0 1 2 3\");\n    assert(candidate(10L) == \"0 1 2 3 4 5 6 7 8 9 10\");\n\
    }\nvoid main(){}"
  status: SyntaxError
  stderr: '/tmp/tmppd33eygj.d(15): Error: cannot append type `long` to type `string`

    Failed: ["dmd", "-unittest", "-v", "-o-", "/tmp/tmppd33eygj.d", "-I/tmp"]

    '
  stdout: ''
  timestamp: 1660163029
- exit_code: 1
  program: "import std.math;\n/*\n Return a string containing space-delimited numbers\
    \ starting from 0 upto n inclusive.\n    >>> string_sequence(0L)\n    \"0\"\n\
    \    >>> string_sequence(5L)\n    \"0 1 2 3 4 5\"\n    \n*/\nstring string_sequence(long\
    \ n) \n{\n    string result;\n    for (long i = 0; i <= n; i++) \n    {\n    \
    \    result ~= to!string(i);\n        if (i < n) \n        {\n            result\
    \ ~= \" \";\n        }\n    }\n    return result;\n}\nunittest\n{\n    alias candidate\
    \ = string_sequence;\n\n    assert(candidate(0L) == \"0\");\n    assert(candidate(3L)\
    \ == \"0 1 2 3\");\n    assert(candidate(10L) == \"0 1 2 3 4 5 6 7 8 9 10\");\n\
    }\nvoid main(){}"
  status: SyntaxError
  stderr: '/tmp/tmpjitp3ztf.d(15): Error: template instance `to!string` template `to`
    is not defined

    Failed: ["dmd", "-unittest", "-v", "-o-", "/tmp/tmpjitp3ztf.d", "-I/tmp"]

    '
  stdout: ''
  timestamp: 1660163029
- exit_code: 1
  program: "import std.math;\n/*\n Return a string containing space-delimited numbers\
    \ starting from 0 upto n inclusive.\n    >>> string_sequence(0L)\n    \"0\"\n\
    \    >>> string_sequence(5L)\n    \"0 1 2 3 4 5\"\n    \n*/\nstring string_sequence(long\
    \ n) \n{\n    string result;\n    foreach (i; 0L .. n + 1L)\n    {\n        result\
    \ ~= i.to!string ~ \" \";\n    }\n    return result;\n}\nunittest\n{\n    alias\
    \ candidate = string_sequence;\n\n    assert(candidate(0L) == \"0\");\n    assert(candidate(3L)\
    \ == \"0 1 2 3\");\n    assert(candidate(10L) == \"0 1 2 3 4 5 6 7 8 9 10\");\n\
    }\nvoid main(){}"
  status: SyntaxError
  stderr: '/tmp/tmpsz2xt069.d(15): Error: no property `to` for type `long`

    Failed: ["dmd", "-unittest", "-v", "-o-", "/tmp/tmpsz2xt069.d", "-I/tmp"]

    '
  stdout: ''
  timestamp: 1660163029
- exit_code: 1
  program: "import std.math;\n/*\n Return a string containing space-delimited numbers\
    \ starting from 0 upto n inclusive.\n    >>> string_sequence(0L)\n    \"0\"\n\
    \    >>> string_sequence(5L)\n    \"0 1 2 3 4 5\"\n    \n*/\nstring string_sequence(long\
    \ n) \n{\n    string result = \"\";\n    for (long i = 0; i <= n; i++)\n    {\n\
    \        result += to!string(i) + \" \";\n    }\n    return result.trimRight();\n\
    }\nunittest\n{\n    alias candidate = string_sequence;\n\n    assert(candidate(0L)\
    \ == \"0\");\n    assert(candidate(3L) == \"0 1 2 3\");\n    assert(candidate(10L)\
    \ == \"0 1 2 3 4 5 6 7 8 9 10\");\n}\nvoid main(){}"
  status: SyntaxError
  stderr: '/tmp/tmpkm4x2hdp.d(15): Error: template instance `to!string` template `to`
    is not defined

    /tmp/tmpkm4x2hdp.d(17): Error: no property `trimRight` for type `string`

    Failed: ["dmd", "-unittest", "-v", "-o-", "/tmp/tmpkm4x2hdp.d", "-I/tmp"]

    '
  stdout: ''
  timestamp: 1660163029
- exit_code: 1
  program: "import std.math;\n/*\n Return a string containing space-delimited numbers\
    \ starting from 0 upto n inclusive.\n    >>> string_sequence(0L)\n    \"0\"\n\
    \    >>> string_sequence(5L)\n    \"0 1 2 3 4 5\"\n    \n*/\nstring string_sequence(long\
    \ n) \n{\n    string result = \"\";\n    foreach (i; 0L .. n + 1L)\n    {\n  \
    \      result ~= i.to!string;\n        if (i != n)\n            result ~= \" \"\
    ;\n    }\n    return result;\n}\nunittest\n{\n    alias candidate = string_sequence;\n\
    \n    assert(candidate(0L) == \"0\");\n    assert(candidate(3L) == \"0 1 2 3\"\
    );\n    assert(candidate(10L) == \"0 1 2 3 4 5 6 7 8 9 10\");\n}\nvoid main(){}"
  status: SyntaxError
  stderr: '/tmp/tmpah81_gdo.d(15): Error: no property `to` for type `long`

    Failed: ["dmd", "-unittest", "-v", "-o-", "/tmp/tmpah81_gdo.d", "-I/tmp"]

    '
  stdout: ''
  timestamp: 1660163029
- exit_code: 1
  program: "import std.math;\n/*\n Return a string containing space-delimited numbers\
    \ starting from 0 upto n inclusive.\n    >>> string_sequence(0L)\n    \"0\"\n\
    \    >>> string_sequence(5L)\n    \"0 1 2 3 4 5\"\n    \n*/\nstring string_sequence(long\
    \ n) \n{\n    string result;\n    foreach (i; 0L .. n + 1L)\n    {\n        result\
    \ ~= to!string(i) ~ \" \";\n    }\n    return result;\n}\nunittest\n{\n    alias\
    \ candidate = string_sequence;\n\n    assert(candidate(0L) == \"0\");\n    assert(candidate(3L)\
    \ == \"0 1 2 3\");\n    assert(candidate(10L) == \"0 1 2 3 4 5 6 7 8 9 10\");\n\
    }\nvoid main(){}"
  status: SyntaxError
  stderr: '/tmp/tmp6ptkbkg7.d(15): Error: template instance `to!string` template `to`
    is not defined

    Failed: ["dmd", "-unittest", "-v", "-o-", "/tmp/tmp6ptkbkg7.d", "-I/tmp"]

    '
  stdout: ''
  timestamp: 1660163029
- exit_code: 1
  program: "import std.math;\n/*\n Return a string containing space-delimited numbers\
    \ starting from 0 upto n inclusive.\n    >>> string_sequence(0L)\n    \"0\"\n\
    \    >>> string_sequence(5L)\n    \"0 1 2 3 4 5\"\n    \n*/\nstring string_sequence(long\
    \ n) \n{\n    string s = \"\";\n    for (long i = 0; i <= n; i++)\n    {\n   \
    \     s = s ~ to!string(i) ~ \" \";\n    }\n    return s;\n}\nunittest\n{\n  \
    \  alias candidate = string_sequence;\n\n    assert(candidate(0L) == \"0\");\n\
    \    assert(candidate(3L) == \"0 1 2 3\");\n    assert(candidate(10L) == \"0 1\
    \ 2 3 4 5 6 7 8 9 10\");\n}\nvoid main(){}"
  status: SyntaxError
  stderr: '/tmp/tmpx0ordsim.d(15): Error: template instance `to!string` template `to`
    is not defined

    Failed: ["dmd", "-unittest", "-v", "-o-", "/tmp/tmpx0ordsim.d", "-I/tmp"]

    '
  stdout: ''
  timestamp: 1660163029
- exit_code: 1
  program: "import std.math;\n/*\n Return a string containing space-delimited numbers\
    \ starting from 0 upto n inclusive.\n    >>> string_sequence(0L)\n    \"0\"\n\
    \    >>> string_sequence(5L)\n    \"0 1 2 3 4 5\"\n    \n*/\nstring string_sequence(long\
    \ n) \n{\n    string result;\n    for (long i = 0; i <= n; i++) \n    {\n    \
    \    result ~= to!string(i);\n        if (i < n) \n        {\n            result\
    \ ~= \" \";\n        }\n    }\n    return result;\n}\nunittest\n{\n    alias candidate\
    \ = string_sequence;\n\n    assert(candidate(0L) == \"0\");\n    assert(candidate(3L)\
    \ == \"0 1 2 3\");\n    assert(candidate(10L) == \"0 1 2 3 4 5 6 7 8 9 10\");\n\
    }\nvoid main(){}"
  status: SyntaxError
  stderr: '/tmp/tmpjitp3ztf.d(15): Error: template instance `to!string` template `to`
    is not defined

    Failed: ["dmd", "-unittest", "-v", "-o-", "/tmp/tmpjitp3ztf.d", "-I/tmp"]

    '
  stdout: ''
  timestamp: 1660163029

name: HumanEval_19_sort_numbers
language: d
prompt: "import std.typecons;\nimport std.math;\n/*\n Input is a space-delimited string\
  \ of numberals from 'zero' to 'nine'.\n    Valid choices are 'zero', 'one', 'two',\
  \ 'three', 'four', 'five', 'six', 'seven', 'eight' and 'nine'.\n    Return the string\
  \ with numbers sorted from smallest to largest\n    >>> sort_numbers(\"three one\
  \ five\")\n    \"one three five\"\n    \n*/\nstring sort_numbers(string numbers)\
  \ \n"
tests: "unittest\n{\n    alias candidate = sort_numbers;\n\n    assert(candidate(\"\
  \") == \"\");\n    assert(candidate(\"three\") == \"three\");\n    assert(candidate(\"\
  three five nine\") == \"three five nine\");\n    assert(candidate(\"five zero four\
  \ seven nine eight\") == \"zero four five seven eight nine\");\n    assert(candidate(\"\
  six five four three two one zero\") == \"zero one two three four five six\");\n\
  }\nvoid main(){}"
completions: ["{\n    string[] nums = numbers.split(\" \");\n    int[] nums_int =\
    \ new int[nums.length];\n    int i = 0;\n    foreach(string num; nums)\n    {\n\
    \        nums_int[i] = to!int(num);\n        i++;\n    }\n    sort(nums_int);\n\
    \    string result = \"\";\n    foreach(int num; nums_int)\n    {\n        result\
    \ ~= num.to!string ~ \" \";\n    }\n    return result;\n}", "{\n    string[] nums\
    \ = numbers.split(\" \");\n    int[] nums_int = new int[nums.length];\n    foreach(i,\
    \ num; nums)\n    {\n        switch(num)\n        {\n            case \"zero\"\
    :\n                nums_int[i] = 0;\n                break;\n            case\
    \ \"one\":\n                nums_int[i] = 1;\n                break;\n       \
    \     case \"two\":\n                nums_int[i] = 2;\n                break;\n\
    \            case \"three\":\n                nums_int[i] = 3;\n             \
    \   break;\n            case \"four\":\n                nums_int[i] = 4;\n   \
    \             break;\n            case \"five\":\n                nums_int[i]\
    \ = 5;\n                break;\n            case \"six\":\n                nums_int[i]\
    \ = 6;\n                break;\n            case \"seven\":\n                nums_int[i]\
    \ = 7;\n                break;\n            case \"eight\":\n                nums_int[i]\
    \ = 8;\n                break;\n            case \"nine\":\n                nums_int[i]\
    \ = 9;\n                break;\n        }\n    }\n    nums_int.sort();\n    foreach(i,\
    \ num; nums_int)\n    {\n        switch(num)\n        {\n            case 0:\n\
    \                nums[i] = \"zero\";\n                break;\n            case\
    \ 1:\n                nums[i] = \"one\";\n                break;\n           \
    \ case 2:\n                nums[i] = \"two\";\n                break;\n      \
    \      case 3:\n                nums[i] = \"three\";\n                break;\n\
    \            case 4:\n                nums[i] = \"four\";\n                break;\n\
    \            case 5:\n                nums[i] = \"five\";\n                break;\n\
    \            case 6:\n                nums[i] = \"six\";\n                break;\n\
    \            case 7:\n                nums[i] = \"seven\";\n                break;\n\
    \            case 8:\n                nums[i] = \"eight\";\n                break;\n\
    \            case 9:\n                nums[i] = \"nine", "{\n    string[] nums\
    \ = numbers.split(\" \");\n    int[] nums_int = new int[nums.length];\n    foreach(i,\
    \ n; nums)\n    {\n        nums_int[i] = to!int(n);\n    }\n    sort(nums_int);\n\
    \    string result = \"\";\n    foreach(n; nums_int)\n    {\n        result ~=\
    \ to!string(n) ~ \" \";\n    }\n    return result.stripRight;\n}", "{\n    string[]\
    \ nums = numbers.split(\" \");\n    int[] nums_int = new int[nums.length];\n \
    \   foreach(i, num; nums)\n    {\n        nums_int[i] = to!int(num);\n    }\n\
    \    nums_int.sort;\n    foreach(i, num; nums_int)\n    {\n        nums[i] = to!string(num);\n\
    \    }\n    return nums.join(\" \");\n}", "{\n    string[] nums = numbers.split(\"\
    \ \");\n    int[] nums_int = new int[nums.length];\n    foreach(i, num; nums)\n\
    \    {\n        nums_int[i] = to!int(num);\n    }\n    sort(nums_int);\n    string\
    \ result = \"\";\n    foreach(num; nums_int)\n    {\n        result ~= to!string(num)\
    \ ~ \" \";\n    }\n    return result.trimRight();\n}", "{\n    string[] nums =\
    \ numbers.split(\" \");\n    int[] nums_int = new int[nums.length];\n    foreach(i,\
    \ num; nums)\n    {\n        switch(num)\n        {\n            case \"zero\"\
    : nums_int[i] = 0; break;\n            case \"one\": nums_int[i] = 1; break;\n\
    \            case \"two\": nums_int[i] = 2; break;\n            case \"three\"\
    : nums_int[i] = 3; break;\n            case \"four\": nums_int[i] = 4; break;\n\
    \            case \"five\": nums_int[i] = 5; break;\n            case \"six\"\
    : nums_int[i] = 6; break;\n            case \"seven\": nums_int[i] = 7; break;\n\
    \            case \"eight\": nums_int[i] = 8; break;\n            case \"nine\"\
    : nums_int[i] = 9; break;\n        }\n    }\n    nums_int.sort;\n    foreach(i,\
    \ num; nums_int)\n    {\n        switch(num)\n        {\n            case 0: nums[i]\
    \ = \"zero\"; break;\n            case 1: nums[i] = \"one\"; break;\n        \
    \    case 2: nums[i] = \"two\"; break;\n            case 3: nums[i] = \"three\"\
    ; break;\n            case 4: nums[i] = \"four\"; break;\n            case 5:\
    \ nums[i] = \"five\"; break;\n            case 6: nums[i] = \"six\"; break;\n\
    \            case 7: nums[i] = \"seven\"; break;\n            case 8: nums[i]\
    \ = \"eight\"; break;\n            case 9: nums[i] = \"nine\"; break;\n      \
    \  }\n    }\n    return nums.join(\" \");\n}", "{\n    string[] nums = numbers.split(\"\
    \ \");\n    int[] nums_int = new int[nums.length];\n    foreach(int i, string\
    \ num; nums)\n    {\n        switch(num)\n        {\n            case \"zero\"\
    :\n                nums_int[i] = 0;\n                break;\n            case\
    \ \"one\":\n                nums_int[i] = 1;\n                break;\n       \
    \     case \"two\":\n                nums_int[i] = 2;\n                break;\n\
    \            case \"three\":\n                nums_int[i] = 3;\n             \
    \   break;\n            case \"four\":\n                nums_int[i] = 4;\n   \
    \             break;\n            case \"five\":\n                nums_int[i]\
    \ = 5;\n                break;\n            case \"six\":\n                nums_int[i]\
    \ = 6;\n                break;\n            case \"seven\":\n                nums_int[i]\
    \ = 7;\n                break;\n            case \"eight\":\n                nums_int[i]\
    \ = 8;\n                break;\n            case \"nine\":\n                nums_int[i]\
    \ = 9;\n                break;\n        }\n    }\n    nums_int.sort();\n    foreach(int\
    \ i, int num; nums_int)\n    {\n        switch(num)\n        {\n            case\
    \ 0:\n                nums[i] = \"zero\";\n                break;\n          \
    \  case 1:\n                nums[i] = \"one\";\n                break;\n     \
    \       case 2:\n                nums[i] = \"two\";\n                break;\n\
    \            case 3:\n                nums[i] = \"three\";\n                break;\n\
    \            case 4:\n                nums[i] = \"four\";\n                break;\n\
    \            case 5:\n                nums[i] = \"five\";\n                break;\n\
    \            case 6:\n                nums[i] = \"six\";\n                break;\n\
    \            case 7:\n                nums[i] = \"seven\";\n                break;\n\
    \            case 8:\n                nums[i] = \"eight\";\n                break;\n\
    \            case 9:\n                nums[i", "{\n    string[] nums = numbers.split(\"\
    \ \");\n    int[] nums_int = new int[nums.length];\n    foreach(i, num; nums)\n\
    \    {\n        nums_int[i] = num_to_int(num);\n    }\n    nums_int.sort;\n  \
    \  foreach(i, num; nums_int)\n    {\n        nums[i] = int_to_num(num);\n    }\n\
    \    return nums.join(\" \");\n}", "{\n    string[] nums = numbers.split(\" \"\
    );\n    int[] nums_int = new int[nums.length];\n    foreach(int i, string num;\
    \ nums)\n    {\n        nums_int[i] = num_to_int(num);\n    }\n    sort(nums_int);\n\
    \    string result = \"\";\n    foreach(int i, int num; nums_int)\n    {\n   \
    \     result ~= int_to_num(num) ~ \" \";\n    }\n    return result.stripRight();\n\
    }", "{\n    string[] nums = numbers.split(\" \");\n    int[] nums_int = new int[nums.length];\n\
    \    for (int i = 0; i < nums.length; i++)\n    {\n        nums_int[i] = to!int(nums[i]);\n\
    \    }\n    sort(nums_int);\n    string result = \"\";\n    foreach (int i; nums_int)\n\
    \    {\n        result ~= to!string(i) ~ \" \";\n    }\n    return result.trimRight();\n\
    }", "{\n    import std.algorithm.comparison : sort;\n    import std.conv : to;\n\
    \    import std.range : map;\n    import std.array : array;\n    import std.string\
    \ : split;\n    import std.typecons : tuple;\n    import std.math : min;\n   \
    \ import std.stdio : writeln;\n    import std.traits : isIntegral;\n    import\
    \ std.typecons : tuple;\n    import std.algorithm : sort;\n    import std.range\
    \ : map;\n    import std.array : array;\n    import std.string : split;\n    import\
    \ std.typecons : tuple;\n    import std.math : min;\n    import std.stdio : writeln;\n\
    \    import std.traits : isIntegral;\n    import std.typecons : tuple;\n    import\
    \ std.algorithm : sort;\n    import std.range : map;\n    import std.array : array;\n\
    \    import std.string : split;\n    import std.typecons : tuple;\n    import\
    \ std.math : min;\n    import std.stdio : writeln;\n    import std.traits : isIntegral;\n\
    \    import std.typecons : tuple;\n    import std.algorithm : sort;\n    import\
    \ std.range : map;\n    import std.array : array;\n    import std.string : split;\n\
    \    import std.typecons : tuple;\n    import std.math : min;\n    import std.stdio\
    \ : writeln;\n    import std.traits : isIntegral;\n    import std.typecons : tuple;\n\
    \    import std.algorithm : sort;\n    import std.range : map;\n    import std.array\
    \ : array;\n    import std.string : split;\n    import std.typecons : tuple;\n\
    \    import std.math : min;\n    import std.stdio : writeln;\n    import std.traits\
    \ : isIntegral;\n    import std.typecons : tuple;\n    import std.algorithm :\
    \ sort;\n    import std.range : map;\n    import std.array : array;\n    import\
    \ std.string : split;\n    import std.typecons : tuple;\n    import std.", "{\n\
    \    string[] nums = numbers.split(\" \");\n    int[] num_ints = new int[nums.length];\n\
    \    foreach(i, num; nums)\n    {\n        switch(num)\n        {\n          \
    \  case \"zero\": num_ints[i] = 0; break;\n            case \"one\": num_ints[i]\
    \ = 1; break;\n            case \"two\": num_ints[i] = 2; break;\n           \
    \ case \"three\": num_ints[i] = 3; break;\n            case \"four\": num_ints[i]\
    \ = 4; break;\n            case \"five\": num_ints[i] = 5; break;\n          \
    \  case \"six\": num_ints[i] = 6; break;\n            case \"seven\": num_ints[i]\
    \ = 7; break;\n            case \"eight\": num_ints[i] = 8; break;\n         \
    \   case \"nine\": num_ints[i] = 9; break;\n        }\n    }\n    num_ints.sort();\n\
    \    foreach(i, num; num_ints)\n    {\n        switch(num)\n        {\n      \
    \      case 0: nums[i] = \"zero\"; break;\n            case 1: nums[i] = \"one\"\
    ; break;\n            case 2: nums[i] = \"two\"; break;\n            case 3: nums[i]\
    \ = \"three\"; break;\n            case 4: nums[i] = \"four\"; break;\n      \
    \      case 5: nums[i] = \"five\"; break;\n            case 6: nums[i] = \"six\"\
    ; break;\n            case 7: nums[i] = \"seven\"; break;\n            case 8:\
    \ nums[i] = \"eight\"; break;\n            case 9: nums[i] = \"nine\"; break;\n\
    \        }\n    }\n    return nums.join(\" \");\n}", "{\n    string[] nums = numbers.split(\"\
    \ \");\n    int[] nums_int = new int[nums.length];\n    foreach(i, num; nums)\n\
    \    {\n        switch(num)\n        {\n            case \"zero\":\n         \
    \       nums_int[i] = 0;\n                break;\n            case \"one\":\n\
    \                nums_int[i] = 1;\n                break;\n            case \"\
    two\":\n                nums_int[i] = 2;\n                break;\n           \
    \ case \"three\":\n                nums_int[i] = 3;\n                break;\n\
    \            case \"four\":\n                nums_int[i] = 4;\n              \
    \  break;\n            case \"five\":\n                nums_int[i] = 5;\n    \
    \            break;\n            case \"six\":\n                nums_int[i] =\
    \ 6;\n                break;\n            case \"seven\":\n                nums_int[i]\
    \ = 7;\n                break;\n            case \"eight\":\n                nums_int[i]\
    \ = 8;\n                break;\n            case \"nine\":\n                nums_int[i]\
    \ = 9;\n                break;\n        }\n    }\n    nums_int.sort();\n    foreach(i,\
    \ num; nums_int)\n    {\n        switch(num)\n        {\n            case 0:\n\
    \                nums[i] = \"zero\";\n                break;\n            case\
    \ 1:\n                nums[i] = \"one\";\n                break;\n           \
    \ case 2:\n                nums[i] = \"two\";\n                break;\n      \
    \      case 3:\n                nums[i] = \"three\";\n                break;\n\
    \            case 4:\n                nums[i] = \"four\";\n                break;\n\
    \            case 5:\n                nums[i] = \"five\";\n                break;\n\
    \            case 6:\n                nums[i] = \"six\";\n                break;\n\
    \            case 7:\n                nums[i] = \"seven\";\n                break;\n\
    \            case 8:\n                nums[i] = \"eight\";\n                break;\n\
    \            case 9:\n                nums[i] = \"nine", "{\n    string[] nums\
    \ = numbers.split(\" \");\n    int[] nums_int = new int[nums.length];\n    foreach(i,\
    \ num; nums)\n    {\n        switch(num)\n        {\n            case \"zero\"\
    :\n                nums_int[i] = 0;\n                break;\n            case\
    \ \"one\":\n                nums_int[i] = 1;\n                break;\n       \
    \     case \"two\":\n                nums_int[i] = 2;\n                break;\n\
    \            case \"three\":\n                nums_int[i] = 3;\n             \
    \   break;\n            case \"four\":\n                nums_int[i] = 4;\n   \
    \             break;\n            case \"five\":\n                nums_int[i]\
    \ = 5;\n                break;\n            case \"six\":\n                nums_int[i]\
    \ = 6;\n                break;\n            case \"seven\":\n                nums_int[i]\
    \ = 7;\n                break;\n            case \"eight\":\n                nums_int[i]\
    \ = 8;\n                break;\n            case \"nine\":\n                nums_int[i]\
    \ = 9;\n                break;\n        }\n    }\n    nums_int.sort;\n    foreach(i,\
    \ num; nums_int)\n    {\n        switch(num)\n        {\n            case 0:\n\
    \                nums[i] = \"zero\";\n                break;\n            case\
    \ 1:\n                nums[i] = \"one\";\n                break;\n           \
    \ case 2:\n                nums[i] = \"two\";\n                break;\n      \
    \      case 3:\n                nums[i] = \"three\";\n                break;\n\
    \            case 4:\n                nums[i] = \"four\";\n                break;\n\
    \            case 5:\n                nums[i] = \"five\";\n                break;\n\
    \            case 6:\n                nums[i] = \"six\";\n                break;\n\
    \            case 7:\n                nums[i] = \"seven\";\n                break;\n\
    \            case 8:\n                nums[i] = \"eight\";\n                break;\n\
    \            case 9:\n                nums[i] = \"nine", "{\n    string[] nums\
    \ = numbers.split(\" \");\n    string[] nums_sorted = nums.dup;\n    nums_sorted.sort;\n\
    \    string ret = \"\";\n    foreach(string num; nums_sorted)\n    {\n       \
    \ ret ~= num ~ \" \";\n    }\n    return ret.stripRight;\n}", "{\n    string[]\
    \ words = numbers.split(\" \");\n    int[] nums = new int[words.length];\n   \
    \ foreach(int i, string word; words)\n    {\n        nums[i] = word_to_num(word);\n\
    \    }\n    nums.sort();\n    foreach(int i, int num; nums)\n    {\n        words[i]\
    \ = num_to_word(num);\n    }\n    return words.join(\" \");\n}", "{\n    import\
    \ std.algorithm.comparison : sort;\n    import std.conv : to;\n    import std.range\
    \ : map;\n    import std.string : split;\n    import std.traits : isIntegral;\n\
    \    import std.typecons : tuple;\n    import std.typecons : Tuple;\n    import\
    \ std.typecons : tuple;\n    import std.typecons : Tuple;\n    import std.typecons\
    \ : tuple;\n    import std.typecons : Tuple;\n    import std.typecons : tuple;\n\
    \    import std.typecons : Tuple;\n    import std.typecons : tuple;\n    import\
    \ std.typecons : Tuple;\n    import std.typecons : tuple;\n    import std.typecons\
    \ : Tuple;\n    import std.typecons : tuple;\n    import std.typecons : Tuple;\n\
    \    import std.typecons : tuple;\n    import std.typecons : Tuple;\n    import\
    \ std.typecons : tuple;\n    import std.typecons : Tuple;\n    import std.typecons\
    \ : tuple;\n    import std.typecons : Tuple;\n    import std.typecons : tuple;\n\
    \    import std.typecons : Tuple;\n    import std.typecons : tuple;\n    import\
    \ std.typecons : Tuple;\n    import std.typecons : tuple;\n    import std.typecons\
    \ : Tuple;\n    import std.typecons : tuple;\n    import std.typecons : Tuple;\n\
    \    import std.typecons : tuple;\n    import std.typecons : Tuple;\n    import\
    \ std.typecons : tuple;\n    import std.typecons : Tuple;\n    import std.typecons\
    \ : tuple;\n    import std.typecons : Tuple;\n    import std.typecons : tuple;\n\
    \    import std.typecons : Tuple;\n    import std.typecons : tuple;\n    import\
    \ std.typecons : Tuple;\n    import std.typecons : tuple;\n    import std.typecons\
    \ : Tuple;\n    import std.typecons : tuple;\n    import std.typecons : Tuple;\n\
    \    import std.typecons : tuple;\n    import std.type", "{\n    string[] nums\
    \ = numbers.split(\" \");\n    int[] nums_int = new int[nums.length];\n    foreach(int\
    \ i, string num; nums)\n    {\n        nums_int[i] = num_to_int(num);\n    }\n\
    \    nums_int.sort();\n    foreach(int i, int num; nums_int)\n    {\n        nums[i]\
    \ = int_to_num(num);\n    }\n    return nums.join(\" \");\n}", "{\n    string[]\
    \ nums = numbers.split(\" \");\n    int[] nums_int = new int[nums.length];\n \
    \   foreach(i, num; nums)\n    {\n        nums_int[i] = to!int(num);\n    }\n\
    \    sort(nums_int);\n    string result = \"\";\n    foreach(num; nums_int)\n\
    \    {\n        result ~= to!string(num) ~ \" \";\n    }\n    return result.stripRight();\n\
    }", "{\n    string[] nums = numbers.split(\" \");\n    int[] nums_int = new int[nums.length];\n\
    \    foreach(i, num; nums)\n    {\n        nums_int[i] = to!int(num);\n    }\n\
    \    sort(nums_int);\n    string result = \"\";\n    foreach(i, num; nums_int)\n\
    \    {\n        result ~= num.to!string ~ \" \";\n    }\n    return result.stripRight();\n\
    }"]
stop_tokens:
- "\n\n"
- "\nvoid"
- "\nbool"
- "\nint"

name: HumanEval_23_strlen
language: d
prompt: "import std.math;\n/*\n Return length of given string\n    >>> strlen(\"\"\
  )\n    0L\n    >>> strlen(\"abc\")\n    3L\n    \n*/\nlong strlen(string string)\
  \ \n"
tests: "unittest\n{\n    alias candidate = strlen;\n\n    assert(candidate(\"\") ==\
  \ 0L);\n    assert(candidate(\"x\") == 1L);\n    assert(candidate(\"asdasnakj\"\
  ) == 9L);\n}\nvoid main(){}"
completions: ["{\n    long length = 0;\n    foreach(c; string)\n    {\n        length++;\n\
    \    }\n    return length;\n}", "{\n    long length = 0;\n    foreach(c; string)\n\
    \    {\n        length++;\n    }\n    return length;\n}", "{\n    long length\
    \ = 0;\n    foreach(c; string)\n    {\n        length++;\n    }\n    return length;\n\
    }", "{\n    long length = 0;\n    foreach(c; string)\n    {\n        length++;\n\
    \    }\n    return length;\n}", "{\n    long len = 0;\n    foreach(c; string)\n\
    \        len++;\n    return len;\n}", "{\n    return string.length;\n}", "{\n\
    \    long length = 0;\n    foreach(c; string)\n    {\n        length++;\n    }\n\
    \    return length;\n}", "{\n    long length = 0;\n    foreach(char c; string)\n\
    \    {\n        length++;\n    }\n    return length;\n}", "{\n    long length\
    \ = 0;\n    foreach(char c; string)\n    {\n        length++;\n    }\n    return\
    \ length;\n}", "{\n    long i = 0;\n    foreach(c; string)\n    {\n        i++;\n\
    \    }\n    return i;\n}", "{\n    long len = 0;\n    foreach(c; string)\n   \
    \     len++;\n    return len;\n}", "{\n    long length = 0;\n    foreach(c; string)\
    \ {\n        length++;\n    }\n    return length;\n}", "{\n    long length = 0;\n\
    \    foreach(c; string)\n    {\n        length++;\n    }\n    return length;\n\
    }", "{\n    return string.length;\n}", "{\n    long len = 0;\n    foreach(c; string)\n\
    \        len++;\n    return len;\n}", "{\n    long length = 0;\n    foreach(c;\
    \ string)\n    {\n        length++;\n    }\n    return length;\n}", "{\n    long\
    \ length = 0;\n    foreach(char c; string)\n    {\n        length++;\n    }\n\
    \    return length;\n}", "{\n    long length = 0;\n    foreach(c; string)\n  \
    \  {\n        length++;\n    }\n    return length;\n}", "{\n    long length =\
    \ 0;\n    foreach(char c; string)\n    {\n        length++;\n    }\n    return\
    \ length;\n}", "{\n    long length = 0;\n    foreach(char c; string)\n       \
    \ length++;\n    return length;\n}"]
stop_tokens:
- "\n\n"
- "\nvoid"
- "\nbool"
- "\nint"

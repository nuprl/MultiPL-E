language: d
name: HumanEval_83_starts_one_ends
results:
- exit_code: 1
  program: "import std.typecons;\nimport std.math;\n/*\n\n    Given a positive integer\
    \ n, return the count of the numbers of n-digit\n    positive integers that start\
    \ or end with 1.\n    \n*/\nlong starts_one_ends(long n) \n{\n    long count =\
    \ 0;\n    long start = 1;\n    long end = 1;\n    long i = 0;\n    long j = 0;\n\
    \    long k = 0;\n    long l = 0;\n    long m = 0;\n    long p = 0;\n    long\
    \ q = 0;\n    long r = 0;\n    long s = 0;\n    long t = 0;\n    long u = 0;\n\
    \    long v = 0;\n    long w = 0;\n    long x = 0;\n    long y = 0;\n    long\
    \ z = 0;\n    long a = 0;\n    long b = 0;\n    long c = 0;\n    long d = 0;\n\
    \    long e = 0;\n    long f = 0;\n    long g = 0;\n    long h = 0;\n    long\
    \ ii = 0;\n    long jj = 0;\n    long kk = 0;\n    long ll = 0;\n    long mm =\
    \ 0;\n    long pp = 0;\n    long qq = 0;\n    long rr = 0;\n    long ss = 0;\n\
    \    long tt = 0;\n    long uu = 0;\n    long vv = 0;\n    long ww = 0;\n    long\
    \ xx = 0;\n    long yy = 0;\n    long zz = 0;\n    long aa = 0;\n    long bb =\
    \ 0;\n    long cc = 0;\n    long dd = 0;\n    long ee = 0;\n    long ff = 0;\n\
    \    long gg = 0;\n    long hh = 0;\n    long iii = 0;\n    long jjj = 0;\n  \
    \  long kkk = 0;\n    long lll = 0;\n    long mmm = 0;\n    long ppp = 0;\n  \
    \  long qqq = 0;\n    long rrr = 0;\n    long sss = 0;\n    long ttt = 0;\n  \
    \  long uuu = 0;\n    long vvv = 0;\n    long www = 0;\n    long xxx = 0;\n  \
    \  long yyy = 0;\n    long zzz = 0;\n    long aaaa = 0;\n    long b\nunittest\n\
    {\n    alias candidate = starts_one_ends;\n\n    assert(candidate(1L) == 1L);\n\
    \    assert(candidate(2L) == 18L);\n    assert(candidate(3L) == 180L);\n    assert(candidate(4L)\
    \ == 1800L);\n    assert(candidate(5L) == 18000L);\n}\nvoid main(){}"
  status: SyntaxError
  stderr: 'b''/tmp/tmpman_gvn5.d(80): Error: semicolon expected, not `unittest`\n/tmp/tmpman_gvn5.d(80):
    Error: found `unittest` instead of statement\nFailed: ["dmd", "-unittest", "-v",
    "-o-", "/tmp/tmpman_gvn5.d", "-I/tmp"]\n'''
  stdout: b''
- exit_code: 1
  program: "import std.typecons;\nimport std.math;\n/*\n\n    Given a positive integer\
    \ n, return the count of the numbers of n-digit\n    positive integers that start\
    \ or end with 1.\n    \n*/\nlong starts_one_ends(long n) \n{\n    long result\
    \ = 0;\n    long start = 1;\n    long end = 1;\n    for (long i = 0; i < n; i++)\
    \ {\n        start *= 10;\n        end *= 10;\n    }\n    end -= 1;\n    for (long\
    \ i = start; i <= end; i++) {\n        if (i % 10 == 1 || i / 10 == 1) {\n   \
    \         result++;\n        }\n    }\n    return result;\n}\nunittest\n{\n  \
    \  alias candidate = starts_one_ends;\n\n    assert(candidate(1L) == 1L);\n  \
    \  assert(candidate(2L) == 18L);\n    assert(candidate(3L) == 180L);\n    assert(candidate(4L)\
    \ == 1800L);\n    assert(candidate(5L) == 18000L);\n}\nvoid main(){}"
  status: Exception
  stderr: 'b''core.exception.AssertError@/tmp/tmpd64j6x3d.d(30): unittest failure\n----------------\n??:?
    _d_unittestp [0x427de5]\n??:? void tmpd64j6x3d.__unittest_L26_C1() [0x427ac4]\n??:?
    void tmpd64j6x3d.__modtest() [0x427b64]\n??:? int core.runtime.runModuleUnitTests().__foreachbody2(object.ModuleInfo*)
    [0x42bb0b]\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)).__lambda2(immutable(object.ModuleInfo*))
    [0x42a99e]\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))).__foreachbody2(ref
    rt.sections_elf_shared.DSO) [0x42fb31]\n??:? int rt.sections_elf_shared.DSO.opApply(scope
    int delegate(ref rt.sections_elf_shared.DSO)) [0x42ffe0]\n??:? int rt.minfo.moduleinfos_apply(scope
    int delegate(immutable(object.ModuleInfo*))) [0x42fabd]\n??:? int object.ModuleInfo.opApply(scope
    int delegate(object.ModuleInfo*)) [0x42a975]\n??:? runModuleUnitTests [0x42b8e1]\n??:?
    void rt.dmain2._d_run_main(int, char**, extern (C) int function(char[][])*).runAll()
    [0x428234]\n??:? void rt.dmain2._d_run_main(int, char**, extern (C) int function(char[][])*).tryExec(scope
    void delegate()) [0x4281bb]\n??:? _d_run_main [0x428126]\n??:? main [0x427b77]\n??:?
    __libc_start_main [0x60574554]\n1/1 unittests FAILED\n'''
  stdout: b''
- exit_code: 1
  program: "import std.typecons;\nimport std.math;\n/*\n\n    Given a positive integer\
    \ n, return the count of the numbers of n-digit\n    positive integers that start\
    \ or end with 1.\n    \n*/\nlong starts_one_ends(long n) \n{\n    long res = 0;\n\
    \    for (long i = 1; i <= n; i++) \n    {\n        res += pow(10, i - 1);\n \
    \   }\n    return res;\n}\nunittest\n{\n    alias candidate = starts_one_ends;\n\
    \n    assert(candidate(1L) == 1L);\n    assert(candidate(2L) == 18L);\n    assert(candidate(3L)\
    \ == 180L);\n    assert(candidate(4L) == 1800L);\n    assert(candidate(5L) ==\
    \ 18000L);\n}\nvoid main(){}"
  status: Exception
  stderr: 'b''core.exception.AssertError@/tmp/tmpsvemf7f3.d(23): unittest failure\n----------------\n??:?
    _d_unittestp [0x427e85]\n??:? void tmpsvemf7f3.__unittest_L18_C1() [0x427ad1]\n??:?
    void tmpsvemf7f3.__modtest() [0x427c08]\n??:? int core.runtime.runModuleUnitTests().__foreachbody2(object.ModuleInfo*)
    [0x42bbab]\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)).__lambda2(immutable(object.ModuleInfo*))
    [0x42aa3e]\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))).__foreachbody2(ref
    rt.sections_elf_shared.DSO) [0x42fbd1]\n??:? int rt.sections_elf_shared.DSO.opApply(scope
    int delegate(ref rt.sections_elf_shared.DSO)) [0x430080]\n??:? int rt.minfo.moduleinfos_apply(scope
    int delegate(immutable(object.ModuleInfo*))) [0x42fb5d]\n??:? int object.ModuleInfo.opApply(scope
    int delegate(object.ModuleInfo*)) [0x42aa15]\n??:? runModuleUnitTests [0x42b981]\n??:?
    void rt.dmain2._d_run_main(int, char**, extern (C) int function(char[][])*).runAll()
    [0x4282d4]\n??:? void rt.dmain2._d_run_main(int, char**, extern (C) int function(char[][])*).tryExec(scope
    void delegate()) [0x42825b]\n??:? _d_run_main [0x4281c6]\n??:? main [0x427c1b]\n??:?
    __libc_start_main [0x56acb554]\n1/1 unittests FAILED\n'''
  stdout: b''
- exit_code: 1
  program: "import std.typecons;\nimport std.math;\n/*\n\n    Given a positive integer\
    \ n, return the count of the numbers of n-digit\n    positive integers that start\
    \ or end with 1.\n    \n*/\nlong starts_one_ends(long n) \n{\n    long result\
    \ = 0;\n    long start = 1;\n    long end = 1;\n    for (long i = 1; i < n; i++)\
    \ {\n        start *= 10;\n        end *= 10;\n    }\n    end += 1;\n    result\
    \ = end - start;\n    return result;\n}\nunittest\n{\n    alias candidate = starts_one_ends;\n\
    \n    assert(candidate(1L) == 1L);\n    assert(candidate(2L) == 18L);\n    assert(candidate(3L)\
    \ == 180L);\n    assert(candidate(4L) == 1800L);\n    assert(candidate(5L) ==\
    \ 18000L);\n}\nvoid main(){}"
  status: Exception
  stderr: 'b''core.exception.AssertError@/tmp/tmpcm8tqv7m.d(27): unittest failure\n----------------\n??:?
    _d_unittestp [0x427d9d]\n??:? void tmpcm8tqv7m.__unittest_L22_C1() [0x427aa1]\n??:?
    void tmpcm8tqv7m.__modtest() [0x427b20]\n??:? int core.runtime.runModuleUnitTests().__foreachbody2(object.ModuleInfo*)
    [0x42bac3]\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)).__lambda2(immutable(object.ModuleInfo*))
    [0x42a956]\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))).__foreachbody2(ref
    rt.sections_elf_shared.DSO) [0x42fae9]\n??:? int rt.sections_elf_shared.DSO.opApply(scope
    int delegate(ref rt.sections_elf_shared.DSO)) [0x42ff98]\n??:? int rt.minfo.moduleinfos_apply(scope
    int delegate(immutable(object.ModuleInfo*))) [0x42fa75]\n??:? int object.ModuleInfo.opApply(scope
    int delegate(object.ModuleInfo*)) [0x42a92d]\n??:? runModuleUnitTests [0x42b899]\n??:?
    void rt.dmain2._d_run_main(int, char**, extern (C) int function(char[][])*).runAll()
    [0x4281ec]\n??:? void rt.dmain2._d_run_main(int, char**, extern (C) int function(char[][])*).tryExec(scope
    void delegate()) [0x428173]\n??:? _d_run_main [0x4280de]\n??:? main [0x427b33]\n??:?
    __libc_start_main [0xcb9c8554]\n1/1 unittests FAILED\n'''
  stdout: b''
- exit_code: 1
  program: "import std.typecons;\nimport std.math;\n/*\n\n    Given a positive integer\
    \ n, return the count of the numbers of n-digit\n    positive integers that start\
    \ or end with 1.\n    \n*/\nlong starts_one_ends(long n) \n{\n    long count =\
    \ 0;\n    long start = 1;\n    long end = 1;\n    long i = 0;\n    long j = 0;\n\
    \    long k = 0;\n    long l = 0;\n    long m = 0;\n    long o = 0;\n    long\
    \ p = 0;\n    long q = 0;\n    long r = 0;\n    long s = 0;\n    long t = 0;\n\
    \    long u = 0;\n    long v = 0;\n    long w = 0;\n    long x = 0;\n    long\
    \ y = 0;\n    long z = 0;\n    long aa = 0;\n    long ab = 0;\n    long ac = 0;\n\
    \    long ad = 0;\n    long ae = 0;\n    long af = 0;\n    long ag = 0;\n    long\
    \ ah = 0;\n    long ai = 0;\n    long aj = 0;\n    long ak = 0;\n    long al =\
    \ 0;\n    long am = 0;\n    long an = 0;\n    long ao = 0;\n    long ap = 0;\n\
    \    long aq = 0;\n    long ar = 0;\n    long as = 0;\n    long at = 0;\n    long\
    \ au = 0;\n    long av = 0;\n    long aw = 0;\n    long ax = 0;\n    long ay =\
    \ 0;\n    long az = 0;\n    long ba = 0;\n    long bb = 0;\n    long bc = 0;\n\
    \    long bd = 0;\n    long be = 0;\n    long bf = 0;\n    long bg = 0;\n    long\
    \ bh = 0;\n    long bi = 0;\n    long bj = 0;\n    long bk = 0;\n    long bl =\
    \ 0;\n    long bm = 0;\n    long bn = 0;\n    long bo = 0;\n    long bp = 0;\n\
    \    long bq = 0;\n    long br = 0;\n    long bs = 0;\n    long bt = 0;\n    long\
    \ bu = 0;\n    long bv = 0;\n    long bw = 0;\n    long bx =\nunittest\n{\n  \
    \  alias candidate = starts_one_ends;\n\n    assert(candidate(1L) == 1L);\n  \
    \  assert(candidate(2L) == 18L);\n    assert(candidate(3L) == 180L);\n    assert(candidate(4L)\
    \ == 1800L);\n    assert(candidate(5L) == 18000L);\n}\nvoid main(){}"
  status: SyntaxError
  stderr: 'b''/tmp/tmplpupxup3.d(81): Error: expression expected, not `unittest`\n/tmp/tmplpupxup3.d(82):
    Error: semicolon expected, not `{`\n/tmp/tmplpupxup3.d(91): Error: found `End
    of File` when expecting `}` following compound statement\nFailed: ["dmd", "-unittest",
    "-v", "-o-", "/tmp/tmplpupxup3.d", "-I/tmp"]\n'''
  stdout: b''
- exit_code: 1
  program: "import std.typecons;\nimport std.math;\n/*\n\n    Given a positive integer\
    \ n, return the count of the numbers of n-digit\n    positive integers that start\
    \ or end with 1.\n    \n*/\nlong starts_one_ends(long n) \n{\n    long count =\
    \ 0;\n    long start = 1;\n    long end = 1;\n    for (long i = 0; i < n; i++)\
    \ {\n        start *= 10;\n        end *= 10;\n    }\n    start /= 10;\n    end\
    \ -= 1;\n    count = end - start + 1;\n    return count;\n}\nunittest\n{\n   \
    \ alias candidate = starts_one_ends;\n\n    assert(candidate(1L) == 1L);\n   \
    \ assert(candidate(2L) == 18L);\n    assert(candidate(3L) == 180L);\n    assert(candidate(4L)\
    \ == 1800L);\n    assert(candidate(5L) == 18000L);\n}\nvoid main(){}"
  status: Exception
  stderr: 'b''core.exception.AssertError@/tmp/tmpknihm12n.d(27): unittest failure\n----------------\n??:?
    _d_unittestp [0x427dad]\n??:? void tmpknihm12n.__unittest_L23_C1() [0x427a90]\n??:?
    void tmpknihm12n.__modtest() [0x427b30]\n??:? int core.runtime.runModuleUnitTests().__foreachbody2(object.ModuleInfo*)
    [0x42bad3]\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)).__lambda2(immutable(object.ModuleInfo*))
    [0x42a966]\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))).__foreachbody2(ref
    rt.sections_elf_shared.DSO) [0x42faf9]\n??:? int rt.sections_elf_shared.DSO.opApply(scope
    int delegate(ref rt.sections_elf_shared.DSO)) [0x42ffa8]\n??:? int rt.minfo.moduleinfos_apply(scope
    int delegate(immutable(object.ModuleInfo*))) [0x42fa85]\n??:? int object.ModuleInfo.opApply(scope
    int delegate(object.ModuleInfo*)) [0x42a93d]\n??:? runModuleUnitTests [0x42b8a9]\n??:?
    void rt.dmain2._d_run_main(int, char**, extern (C) int function(char[][])*).runAll()
    [0x4281fc]\n??:? void rt.dmain2._d_run_main(int, char**, extern (C) int function(char[][])*).tryExec(scope
    void delegate()) [0x428183]\n??:? _d_run_main [0x4280ee]\n??:? main [0x427b43]\n??:?
    __libc_start_main [0xbe77b554]\n1/1 unittests FAILED\n'''
  stdout: b''
- exit_code: 1
  program: "import std.typecons;\nimport std.math;\n/*\n\n    Given a positive integer\
    \ n, return the count of the numbers of n-digit\n    positive integers that start\
    \ or end with 1.\n    \n*/\nlong starts_one_ends(long n) \n{\n    if (n == 1)\n\
    \        return 2;\n    else\n        return pow(10, n - 1) + pow(10, n - 2);\n\
    }\nunittest\n{\n    alias candidate = starts_one_ends;\n\n    assert(candidate(1L)\
    \ == 1L);\n    assert(candidate(2L) == 18L);\n    assert(candidate(3L) == 180L);\n\
    \    assert(candidate(4L) == 1800L);\n    assert(candidate(5L) == 18000L);\n}\n\
    void main(){}"
  status: Exception
  stderr: 'b''core.exception.AssertError@/tmp/tmp9lqrdbpx.d(20): unittest failure\n----------------\n??:?
    _d_unittestp [0x427e8d]\n??:? void tmp9lqrdbpx.__unittest_L16_C1() [0x427ab8]\n??:?
    void tmp9lqrdbpx.__modtest() [0x427c10]\n??:? int core.runtime.runModuleUnitTests().__foreachbody2(object.ModuleInfo*)
    [0x42bbb3]\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)).__lambda2(immutable(object.ModuleInfo*))
    [0x42aa46]\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))).__foreachbody2(ref
    rt.sections_elf_shared.DSO) [0x42fbd9]\n??:? int rt.sections_elf_shared.DSO.opApply(scope
    int delegate(ref rt.sections_elf_shared.DSO)) [0x430088]\n??:? int rt.minfo.moduleinfos_apply(scope
    int delegate(immutable(object.ModuleInfo*))) [0x42fb65]\n??:? int object.ModuleInfo.opApply(scope
    int delegate(object.ModuleInfo*)) [0x42aa1d]\n??:? runModuleUnitTests [0x42b989]\n??:?
    void rt.dmain2._d_run_main(int, char**, extern (C) int function(char[][])*).runAll()
    [0x4282dc]\n??:? void rt.dmain2._d_run_main(int, char**, extern (C) int function(char[][])*).tryExec(scope
    void delegate()) [0x428263]\n??:? _d_run_main [0x4281ce]\n??:? main [0x427c23]\n??:?
    __libc_start_main [0xcd0c7554]\n1/1 unittests FAILED\n'''
  stdout: b''
- exit_code: 1
  program: "import std.typecons;\nimport std.math;\n/*\n\n    Given a positive integer\
    \ n, return the count of the numbers of n-digit\n    positive integers that start\
    \ or end with 1.\n    \n*/\nlong starts_one_ends(long n) \n{\n    long result\
    \ = 0;\n    if (n == 1)\n        return 1;\n    else if (n == 2)\n        return\
    \ 10;\n    else\n    {\n        result = starts_one_ends(n - 1) + starts_one_ends(n\
    \ - 2);\n        return result;\n    }\n}\nunittest\n{\n    alias candidate =\
    \ starts_one_ends;\n\n    assert(candidate(1L) == 1L);\n    assert(candidate(2L)\
    \ == 18L);\n    assert(candidate(3L) == 180L);\n    assert(candidate(4L) == 1800L);\n\
    \    assert(candidate(5L) == 18000L);\n}\nvoid main(){}"
  status: Exception
  stderr: 'b''core.exception.AssertError@/tmp/tmpb4h5d63v.d(27): unittest failure\n----------------\n??:?
    _d_unittestp [0x427d9d]\n??:? void tmpb4h5d63v.__unittest_L22_C1() [0x427a9d]\n??:?
    void tmpb4h5d63v.__modtest() [0x427b1c]\n??:? int core.runtime.runModuleUnitTests().__foreachbody2(object.ModuleInfo*)
    [0x42bac3]\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)).__lambda2(immutable(object.ModuleInfo*))
    [0x42a956]\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))).__foreachbody2(ref
    rt.sections_elf_shared.DSO) [0x42fae9]\n??:? int rt.sections_elf_shared.DSO.opApply(scope
    int delegate(ref rt.sections_elf_shared.DSO)) [0x42ff98]\n??:? int rt.minfo.moduleinfos_apply(scope
    int delegate(immutable(object.ModuleInfo*))) [0x42fa75]\n??:? int object.ModuleInfo.opApply(scope
    int delegate(object.ModuleInfo*)) [0x42a92d]\n??:? runModuleUnitTests [0x42b899]\n??:?
    void rt.dmain2._d_run_main(int, char**, extern (C) int function(char[][])*).runAll()
    [0x4281ec]\n??:? void rt.dmain2._d_run_main(int, char**, extern (C) int function(char[][])*).tryExec(scope
    void delegate()) [0x428173]\n??:? _d_run_main [0x4280de]\n??:? main [0x427b2f]\n??:?
    __libc_start_main [0x3436b554]\n1/1 unittests FAILED\n'''
  stdout: b''
- exit_code: 1
  program: "import std.typecons;\nimport std.math;\n/*\n\n    Given a positive integer\
    \ n, return the count of the numbers of n-digit\n    positive integers that start\
    \ or end with 1.\n    \n*/\nlong starts_one_ends(long n) \n{\n    long count =\
    \ 0;\n    long start = 1;\n    long end = 1;\n    for (long i = 0; i < n; i++)\
    \ {\n        start *= 10;\n        end *= 10;\n    }\n    for (long i = start;\
    \ i < end; i++) {\n        if (i % 10 == 1 || i / 10 == 1) {\n            count++;\n\
    \        }\n    }\n    return count;\n}\nunittest\n{\n    alias candidate = starts_one_ends;\n\
    \n    assert(candidate(1L) == 1L);\n    assert(candidate(2L) == 18L);\n    assert(candidate(3L)\
    \ == 180L);\n    assert(candidate(4L) == 1800L);\n    assert(candidate(5L) ==\
    \ 18000L);\n}\nvoid main(){}"
  status: Exception
  stderr: 'b''core.exception.AssertError@/tmp/tmpft0ivixh.d(29): unittest failure\n----------------\n??:?
    _d_unittestp [0x427ddd]\n??:? void tmpft0ivixh.__unittest_L25_C1() [0x427ac0]\n??:?
    void tmpft0ivixh.__modtest() [0x427b60]\n??:? int core.runtime.runModuleUnitTests().__foreachbody2(object.ModuleInfo*)
    [0x42bb03]\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)).__lambda2(immutable(object.ModuleInfo*))
    [0x42a996]\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))).__foreachbody2(ref
    rt.sections_elf_shared.DSO) [0x42fb29]\n??:? int rt.sections_elf_shared.DSO.opApply(scope
    int delegate(ref rt.sections_elf_shared.DSO)) [0x42ffd8]\n??:? int rt.minfo.moduleinfos_apply(scope
    int delegate(immutable(object.ModuleInfo*))) [0x42fab5]\n??:? int object.ModuleInfo.opApply(scope
    int delegate(object.ModuleInfo*)) [0x42a96d]\n??:? runModuleUnitTests [0x42b8d9]\n??:?
    void rt.dmain2._d_run_main(int, char**, extern (C) int function(char[][])*).runAll()
    [0x42822c]\n??:? void rt.dmain2._d_run_main(int, char**, extern (C) int function(char[][])*).tryExec(scope
    void delegate()) [0x4281b3]\n??:? _d_run_main [0x42811e]\n??:? main [0x427b73]\n??:?
    __libc_start_main [0x480a554]\n1/1 unittests FAILED\n'''
  stdout: b''
- exit_code: 1
  program: "import std.typecons;\nimport std.math;\n/*\n\n    Given a positive integer\
    \ n, return the count of the numbers of n-digit\n    positive integers that start\
    \ or end with 1.\n    \n*/\nlong starts_one_ends(long n) \n{\n    long result\
    \ = 0;\n    if (n == 1)\n        return 1;\n    if (n == 2)\n        return 10;\n\
    \    if (n == 3)\n        return 100;\n    if (n == 4)\n        return 1000;\n\
    \    if (n == 5)\n        return 10000;\n    if (n == 6)\n        return 100000;\n\
    \    if (n == 7)\n        return 1000000;\n    if (n == 8)\n        return 10000000;\n\
    \    if (n == 9)\n        return 100000000;\n    if (n == 10)\n        return\
    \ 1000000000;\n    if (n == 11)\n        return 10000000000;\n    if (n == 12)\n\
    \        return 100000000000;\n    if (n == 13)\n        return 1000000000000;\n\
    \    if (n == 14)\n        return 10000000000000;\n    if (n == 15)\n        return\
    \ 100000000000000;\n    if (n == 16)\n        return 1000000000000000;\n    if\
    \ (n == 17)\n        return 10000000000000000;\n    if (n == 18)\n        return\
    \ 100000000000000000;\n    if (n == 19)\n        return 1000000000000000000;\n\
    \    if (n == 20)\n        return 10000000000000000000;\n    if (n == 21)\n  \
    \      return 100000000000000000000;\n    if (n == 22)\n        return 1000000000000000000000;\n\
    \    if (n == 23)\n        return 10000000000000000000000;\n    if (n == 24)\n\
    \        return 100000000000000000000000;\n    if (n == 25)\n        return 1000000000000000000000000;\n\
    \    if (n == 26)\n        return 10000000000000000000000000;\n    if (n == 27)\n\
    \        return 100000000000000000000000000;\n    if (n == 28)\n        return\
    \ 1000000000000000000000000000;\n    if (n == 29)\n        return 10000000000000000000000000000;\n\
    \    if (n == 30)\n        return 100000000000000000000000000000;\n    if (n ==\
    \ 31)\n        return 1000000000000000000000000000000;\n    if (n == 32)\n   \
    \     return 10000000000000000000000000000000;\n    if (n == 33)\n        return\
    \ 100000000000000000000000000000000;\n    if (n == 34)\n        return 1000000000000000000000000000000000;\n\
    \   \nunittest\n{\n    alias candidate = starts_one_ends;\n\n    assert(candidate(1L)\
    \ == 1L);\n    assert(candidate(2L) == 18L);\n    assert(candidate(3L) == 180L);\n\
    \    assert(candidate(4L) == 1800L);\n    assert(candidate(5L) == 18000L);\n}\n\
    void main(){}"
  status: SyntaxError
  stderr: 'b''/tmp/tmp9884tv7v.d(51): Error: signed integer overflow\n/tmp/tmp9884tv7v.d(53):
    Error: integer overflow\n/tmp/tmp9884tv7v.d(55): Error: integer overflow\n/tmp/tmp9884tv7v.d(57):
    Error: integer overflow\n/tmp/tmp9884tv7v.d(59): Error: integer overflow\n/tmp/tmp9884tv7v.d(61):
    Error: integer overflow\n/tmp/tmp9884tv7v.d(63): Error: integer overflow\n/tmp/tmp9884tv7v.d(65):
    Error: integer overflow\n/tmp/tmp9884tv7v.d(67): Error: integer overflow\n/tmp/tmp9884tv7v.d(69):
    Error: integer overflow\n/tmp/tmp9884tv7v.d(71): Error: integer overflow\n/tmp/tmp9884tv7v.d(73):
    Error: integer overflow\n/tmp/tmp9884tv7v.d(75): Error: integer overflow\n/tmp/tmp9884tv7v.d(77):
    Error: integer overflow\n/tmp/tmp9884tv7v.d(79): Error: integer overflow\n/tmp/tmp9884tv7v.d(81):
    Error: found `unittest` instead of statement\nFailed: ["dmd", "-unittest", "-v",
    "-o-", "/tmp/tmp9884tv7v.d", "-I/tmp"]\n'''
  stdout: b''
- exit_code: 1
  program: "import std.typecons;\nimport std.math;\n/*\n\n    Given a positive integer\
    \ n, return the count of the numbers of n-digit\n    positive integers that start\
    \ or end with 1.\n    \n*/\nlong starts_one_ends(long n) \n{\n    long count =\
    \ 0;\n    long start = 1;\n    long end = 1;\n    for (long i = 1; i < n; i++)\
    \ {\n        start *= 10;\n        end *= 10;\n    }\n    end += 1;\n    for (long\
    \ i = start; i < end; i++) {\n        if (i % 10 == 1) {\n            count++;\n\
    \        }\n    }\n    return count;\n}\nunittest\n{\n    alias candidate = starts_one_ends;\n\
    \n    assert(candidate(1L) == 1L);\n    assert(candidate(2L) == 18L);\n    assert(candidate(3L)\
    \ == 180L);\n    assert(candidate(4L) == 1800L);\n    assert(candidate(5L) ==\
    \ 18000L);\n}\nvoid main(){}"
  status: Exception
  stderr: 'b''core.exception.AssertError@/tmp/tmptv08mptd.d(31): unittest failure\n----------------\n??:?
    _d_unittestp [0x427dd5]\n??:? void tmptv08mptd.__unittest_L26_C1() [0x427ad5]\n??:?
    void tmptv08mptd.__modtest() [0x427b54]\n??:? int core.runtime.runModuleUnitTests().__foreachbody2(object.ModuleInfo*)
    [0x42bafb]\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)).__lambda2(immutable(object.ModuleInfo*))
    [0x42a98e]\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))).__foreachbody2(ref
    rt.sections_elf_shared.DSO) [0x42fb21]\n??:? int rt.sections_elf_shared.DSO.opApply(scope
    int delegate(ref rt.sections_elf_shared.DSO)) [0x42ffd0]\n??:? int rt.minfo.moduleinfos_apply(scope
    int delegate(immutable(object.ModuleInfo*))) [0x42faad]\n??:? int object.ModuleInfo.opApply(scope
    int delegate(object.ModuleInfo*)) [0x42a965]\n??:? runModuleUnitTests [0x42b8d1]\n??:?
    void rt.dmain2._d_run_main(int, char**, extern (C) int function(char[][])*).runAll()
    [0x428224]\n??:? void rt.dmain2._d_run_main(int, char**, extern (C) int function(char[][])*).tryExec(scope
    void delegate()) [0x4281ab]\n??:? _d_run_main [0x428116]\n??:? main [0x427b67]\n??:?
    __libc_start_main [0xa811a554]\n1/1 unittests FAILED\n'''
  stdout: b''
- exit_code: 1
  program: "import std.typecons;\nimport std.math;\n/*\n\n    Given a positive integer\
    \ n, return the count of the numbers of n-digit\n    positive integers that start\
    \ or end with 1.\n    \n*/\nlong starts_one_ends(long n) \n{\n    long count =\
    \ 0;\n    long start = 1;\n    long end = 1;\n    for (long i = 0; i < n; i++)\
    \ {\n        start *= 10;\n        end *= 10;\n    }\n    for (long i = start;\
    \ i < end; i++) {\n        if (i % 10 == 1 || i / start == 1) {\n            count++;\n\
    \        }\n    }\n    return count;\n}\nunittest\n{\n    alias candidate = starts_one_ends;\n\
    \n    assert(candidate(1L) == 1L);\n    assert(candidate(2L) == 18L);\n    assert(candidate(3L)\
    \ == 180L);\n    assert(candidate(4L) == 1800L);\n    assert(candidate(5L) ==\
    \ 18000L);\n}\nvoid main(){}"
  status: Exception
  stderr: 'b''core.exception.AssertError@/tmp/tmpzwrxy5lu.d(29): unittest failure\n----------------\n??:?
    _d_unittestp [0x427ddd]\n??:? void tmpzwrxy5lu.__unittest_L25_C1() [0x427ac0]\n??:?
    void tmpzwrxy5lu.__modtest() [0x427b60]\n??:? int core.runtime.runModuleUnitTests().__foreachbody2(object.ModuleInfo*)
    [0x42bb03]\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)).__lambda2(immutable(object.ModuleInfo*))
    [0x42a996]\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))).__foreachbody2(ref
    rt.sections_elf_shared.DSO) [0x42fb29]\n??:? int rt.sections_elf_shared.DSO.opApply(scope
    int delegate(ref rt.sections_elf_shared.DSO)) [0x42ffd8]\n??:? int rt.minfo.moduleinfos_apply(scope
    int delegate(immutable(object.ModuleInfo*))) [0x42fab5]\n??:? int object.ModuleInfo.opApply(scope
    int delegate(object.ModuleInfo*)) [0x42a96d]\n??:? runModuleUnitTests [0x42b8d9]\n??:?
    void rt.dmain2._d_run_main(int, char**, extern (C) int function(char[][])*).runAll()
    [0x42822c]\n??:? void rt.dmain2._d_run_main(int, char**, extern (C) int function(char[][])*).tryExec(scope
    void delegate()) [0x4281b3]\n??:? _d_run_main [0x42811e]\n??:? main [0x427b73]\n??:?
    __libc_start_main [0xc0193554]\n1/1 unittests FAILED\n'''
  stdout: b''
- exit_code: 1
  program: "import std.typecons;\nimport std.math;\n/*\n\n    Given a positive integer\
    \ n, return the count of the numbers of n-digit\n    positive integers that start\
    \ or end with 1.\n    \n*/\nlong starts_one_ends(long n) \n{\n    long result\
    \ = 0;\n    if (n == 1)\n        return 1;\n    else if (n == 2)\n        return\
    \ 10;\n    else\n    {\n        result = starts_one_ends(n - 1) + starts_one_ends(n\
    \ - 2);\n        return result;\n    }\n}\nunittest\n{\n    alias candidate =\
    \ starts_one_ends;\n\n    assert(candidate(1L) == 1L);\n    assert(candidate(2L)\
    \ == 18L);\n    assert(candidate(3L) == 180L);\n    assert(candidate(4L) == 1800L);\n\
    \    assert(candidate(5L) == 18000L);\n}\nvoid main(){}"
  status: Exception
  stderr: 'b''core.exception.AssertError@/tmp/tmpb4h5d63v.d(27): unittest failure\n----------------\n??:?
    _d_unittestp [0x427d9d]\n??:? void tmpb4h5d63v.__unittest_L22_C1() [0x427a9d]\n??:?
    void tmpb4h5d63v.__modtest() [0x427b1c]\n??:? int core.runtime.runModuleUnitTests().__foreachbody2(object.ModuleInfo*)
    [0x42bac3]\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)).__lambda2(immutable(object.ModuleInfo*))
    [0x42a956]\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))).__foreachbody2(ref
    rt.sections_elf_shared.DSO) [0x42fae9]\n??:? int rt.sections_elf_shared.DSO.opApply(scope
    int delegate(ref rt.sections_elf_shared.DSO)) [0x42ff98]\n??:? int rt.minfo.moduleinfos_apply(scope
    int delegate(immutable(object.ModuleInfo*))) [0x42fa75]\n??:? int object.ModuleInfo.opApply(scope
    int delegate(object.ModuleInfo*)) [0x42a92d]\n??:? runModuleUnitTests [0x42b899]\n??:?
    void rt.dmain2._d_run_main(int, char**, extern (C) int function(char[][])*).runAll()
    [0x4281ec]\n??:? void rt.dmain2._d_run_main(int, char**, extern (C) int function(char[][])*).tryExec(scope
    void delegate()) [0x428173]\n??:? _d_run_main [0x4280de]\n??:? main [0x427b2f]\n??:?
    __libc_start_main [0x3436b554]\n1/1 unittests FAILED\n'''
  stdout: b''
- exit_code: 1
  program: "import std.typecons;\nimport std.math;\n/*\n\n    Given a positive integer\
    \ n, return the count of the numbers of n-digit\n    positive integers that start\
    \ or end with 1.\n    \n*/\nlong starts_one_ends(long n) \n{\n    long result\
    \ = 0;\n    long max = pow(10, n);\n    for (long i = 1; i < max; i++) \n    {\n\
    \        if (i % 10 == 1) \n        {\n            result++;\n        }\n    \
    \    if (i / 10 == 1) \n        {\n            result++;\n        }\n    }\n \
    \   return result;\n}\nunittest\n{\n    alias candidate = starts_one_ends;\n\n\
    \    assert(candidate(1L) == 1L);\n    assert(candidate(2L) == 18L);\n    assert(candidate(3L)\
    \ == 180L);\n    assert(candidate(4L) == 1800L);\n    assert(candidate(5L) ==\
    \ 18000L);\n}\nvoid main(){}"
  status: Exception
  stderr: 'b''core.exception.AssertError@/tmp/tmpcs61260v.d(31): unittest failure\n----------------\n??:?
    _d_unittestp [0x427ea5]\n??:? void tmpcs61260v.__unittest_L26_C1() [0x427af1]\n??:?
    void tmpcs61260v.__modtest() [0x427c28]\n??:? int core.runtime.runModuleUnitTests().__foreachbody2(object.ModuleInfo*)
    [0x42bbcb]\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)).__lambda2(immutable(object.ModuleInfo*))
    [0x42aa5e]\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))).__foreachbody2(ref
    rt.sections_elf_shared.DSO) [0x42fbf1]\n??:? int rt.sections_elf_shared.DSO.opApply(scope
    int delegate(ref rt.sections_elf_shared.DSO)) [0x4300a0]\n??:? int rt.minfo.moduleinfos_apply(scope
    int delegate(immutable(object.ModuleInfo*))) [0x42fb7d]\n??:? int object.ModuleInfo.opApply(scope
    int delegate(object.ModuleInfo*)) [0x42aa35]\n??:? runModuleUnitTests [0x42b9a1]\n??:?
    void rt.dmain2._d_run_main(int, char**, extern (C) int function(char[][])*).runAll()
    [0x4282f4]\n??:? void rt.dmain2._d_run_main(int, char**, extern (C) int function(char[][])*).tryExec(scope
    void delegate()) [0x42827b]\n??:? _d_run_main [0x4281e6]\n??:? main [0x427c3b]\n??:?
    __libc_start_main [0x58c9554]\n1/1 unittests FAILED\n'''
  stdout: b''
- exit_code: 1
  program: "import std.typecons;\nimport std.math;\n/*\n\n    Given a positive integer\
    \ n, return the count of the numbers of n-digit\n    positive integers that start\
    \ or end with 1.\n    \n*/\nlong starts_one_ends(long n) \n{\n    long result\
    \ = 0;\n    if (n == 1) \n    {\n        result = 1;\n    } \n    else \n    {\n\
    \        long m = n / 2;\n        if (n % 2 == 0) \n        {\n            result\
    \ = pow(10, m - 1) * 9;\n        } \n        else \n        {\n            result\
    \ = pow(10, m - 1) * 9 * 2;\n        }\n    }\n    return result;\n}\nunittest\n\
    {\n    alias candidate = starts_one_ends;\n\n    assert(candidate(1L) == 1L);\n\
    \    assert(candidate(2L) == 18L);\n    assert(candidate(3L) == 180L);\n    assert(candidate(4L)\
    \ == 1800L);\n    assert(candidate(5L) == 18000L);\n}\nvoid main(){}"
  status: Exception
  stderr: 'b''core.exception.AssertError@/tmp/tmpqtih_0sb.d(35): unittest failure\n----------------\n??:?
    _d_unittestp [0x427ec5]\n??:? void tmpqtih_0sb.__unittest_L30_C1() [0x427b11]\n??:?
    void tmpqtih_0sb.__modtest() [0x427c48]\n??:? int core.runtime.runModuleUnitTests().__foreachbody2(object.ModuleInfo*)
    [0x42bbeb]\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)).__lambda2(immutable(object.ModuleInfo*))
    [0x42aa7e]\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))).__foreachbody2(ref
    rt.sections_elf_shared.DSO) [0x42fc11]\n??:? int rt.sections_elf_shared.DSO.opApply(scope
    int delegate(ref rt.sections_elf_shared.DSO)) [0x4300c0]\n??:? int rt.minfo.moduleinfos_apply(scope
    int delegate(immutable(object.ModuleInfo*))) [0x42fb9d]\n??:? int object.ModuleInfo.opApply(scope
    int delegate(object.ModuleInfo*)) [0x42aa55]\n??:? runModuleUnitTests [0x42b9c1]\n??:?
    void rt.dmain2._d_run_main(int, char**, extern (C) int function(char[][])*).runAll()
    [0x428314]\n??:? void rt.dmain2._d_run_main(int, char**, extern (C) int function(char[][])*).tryExec(scope
    void delegate()) [0x42829b]\n??:? _d_run_main [0x428206]\n??:? main [0x427c5b]\n??:?
    __libc_start_main [0x96495554]\n1/1 unittests FAILED\n'''
  stdout: b''
- exit_code: 1
  program: "import std.typecons;\nimport std.math;\n/*\n\n    Given a positive integer\
    \ n, return the count of the numbers of n-digit\n    positive integers that start\
    \ or end with 1.\n    \n*/\nlong starts_one_ends(long n) \n{\n    long count =\
    \ 0;\n    long start = 1;\n    long end = 1;\n    long i = 0;\n    long j = 0;\n\
    \    long k = 0;\n    long l = 0;\n    long m = 0;\n    long p = 0;\n    long\
    \ q = 0;\n    long r = 0;\n    long s = 0;\n    long t = 0;\n    long u = 0;\n\
    \    long v = 0;\n    long w = 0;\n    long x = 0;\n    long y = 0;\n    long\
    \ z = 0;\n    long a = 0;\n    long b = 0;\n    long c = 0;\n    long d = 0;\n\
    \    long e = 0;\n    long f = 0;\n    long g = 0;\n    long h = 0;\n    long\
    \ ii = 0;\n    long jj = 0;\n    long kk = 0;\n    long ll = 0;\n    long mm =\
    \ 0;\n    long pp = 0;\n    long qq = 0;\n    long rr = 0;\n    long ss = 0;\n\
    \    long tt = 0;\n    long uu = 0;\n    long vv = 0;\n    long ww = 0;\n    long\
    \ xx = 0;\n    long yy = 0;\n    long zz = 0;\n    long aa = 0;\n    long bb =\
    \ 0;\n    long cc = 0;\n    long dd = 0;\n    long ee = 0;\n    long ff = 0;\n\
    \    long gg = 0;\n    long hh = 0;\n    long iii = 0;\n    long jjj = 0;\n  \
    \  long kkk = 0;\n    long lll = 0;\n    long mmm = 0;\n    long ppp = 0;\n  \
    \  long qqq = 0;\n    long rrr = 0;\n    long sss = 0;\n    long ttt = 0;\n  \
    \  long uuu = 0;\n    long vvv = 0;\n    long www = 0;\n    long xxx = 0;\n  \
    \  long yyy = 0;\n    long zzz = 0;\n    long aaaa = 0;\n    long b\nunittest\n\
    {\n    alias candidate = starts_one_ends;\n\n    assert(candidate(1L) == 1L);\n\
    \    assert(candidate(2L) == 18L);\n    assert(candidate(3L) == 180L);\n    assert(candidate(4L)\
    \ == 1800L);\n    assert(candidate(5L) == 18000L);\n}\nvoid main(){}"
  status: SyntaxError
  stderr: 'b''/tmp/tmpman_gvn5.d(80): Error: semicolon expected, not `unittest`\n/tmp/tmpman_gvn5.d(80):
    Error: found `unittest` instead of statement\nFailed: ["dmd", "-unittest", "-v",
    "-o-", "/tmp/tmpman_gvn5.d", "-I/tmp"]\n'''
  stdout: b''
- exit_code: 1
  program: "import std.typecons;\nimport std.math;\n/*\n\n    Given a positive integer\
    \ n, return the count of the numbers of n-digit\n    positive integers that start\
    \ or end with 1.\n    \n*/\nlong starts_one_ends(long n) \n{\n    long result\
    \ = 0;\n    for (long i = 1; i <= n; i++) \n    {\n        result += pow(10, i\
    \ - 1);\n    }\n    return result;\n}\nunittest\n{\n    alias candidate = starts_one_ends;\n\
    \n    assert(candidate(1L) == 1L);\n    assert(candidate(2L) == 18L);\n    assert(candidate(3L)\
    \ == 180L);\n    assert(candidate(4L) == 1800L);\n    assert(candidate(5L) ==\
    \ 18000L);\n}\nvoid main(){}"
  status: Exception
  stderr: 'b''core.exception.AssertError@/tmp/tmpdmncg0nz.d(23): unittest failure\n----------------\n??:?
    _d_unittestp [0x427e85]\n??:? void tmpdmncg0nz.__unittest_L18_C1() [0x427ad1]\n??:?
    void tmpdmncg0nz.__modtest() [0x427c08]\n??:? int core.runtime.runModuleUnitTests().__foreachbody2(object.ModuleInfo*)
    [0x42bbab]\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)).__lambda2(immutable(object.ModuleInfo*))
    [0x42aa3e]\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))).__foreachbody2(ref
    rt.sections_elf_shared.DSO) [0x42fbd1]\n??:? int rt.sections_elf_shared.DSO.opApply(scope
    int delegate(ref rt.sections_elf_shared.DSO)) [0x430080]\n??:? int rt.minfo.moduleinfos_apply(scope
    int delegate(immutable(object.ModuleInfo*))) [0x42fb5d]\n??:? int object.ModuleInfo.opApply(scope
    int delegate(object.ModuleInfo*)) [0x42aa15]\n??:? runModuleUnitTests [0x42b981]\n??:?
    void rt.dmain2._d_run_main(int, char**, extern (C) int function(char[][])*).runAll()
    [0x4282d4]\n??:? void rt.dmain2._d_run_main(int, char**, extern (C) int function(char[][])*).tryExec(scope
    void delegate()) [0x42825b]\n??:? _d_run_main [0x4281c6]\n??:? main [0x427c1b]\n??:?
    __libc_start_main [0x60e1c554]\n1/1 unittests FAILED\n'''
  stdout: b''
- exit_code: 1
  program: "import std.typecons;\nimport std.math;\n/*\n\n    Given a positive integer\
    \ n, return the count of the numbers of n-digit\n    positive integers that start\
    \ or end with 1.\n    \n*/\nlong starts_one_ends(long n) \n{\n    long result\
    \ = 0;\n    long start = 1;\n    long end = 1;\n    for (long i = 0; i < n; i++)\
    \ {\n        start *= 10;\n        end *= 10;\n    }\n    start /= 10;\n    end\
    \ -= 1;\n    result = end - start + 1;\n    return result;\n}\nunittest\n{\n \
    \   alias candidate = starts_one_ends;\n\n    assert(candidate(1L) == 1L);\n \
    \   assert(candidate(2L) == 18L);\n    assert(candidate(3L) == 180L);\n    assert(candidate(4L)\
    \ == 1800L);\n    assert(candidate(5L) == 18000L);\n}\nvoid main(){}"
  status: Exception
  stderr: 'b''core.exception.AssertError@/tmp/tmpjx4yezdq.d(27): unittest failure\n----------------\n??:?
    _d_unittestp [0x427dad]\n??:? void tmpjx4yezdq.__unittest_L23_C1() [0x427a90]\n??:?
    void tmpjx4yezdq.__modtest() [0x427b30]\n??:? int core.runtime.runModuleUnitTests().__foreachbody2(object.ModuleInfo*)
    [0x42bad3]\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)).__lambda2(immutable(object.ModuleInfo*))
    [0x42a966]\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))).__foreachbody2(ref
    rt.sections_elf_shared.DSO) [0x42faf9]\n??:? int rt.sections_elf_shared.DSO.opApply(scope
    int delegate(ref rt.sections_elf_shared.DSO)) [0x42ffa8]\n??:? int rt.minfo.moduleinfos_apply(scope
    int delegate(immutable(object.ModuleInfo*))) [0x42fa85]\n??:? int object.ModuleInfo.opApply(scope
    int delegate(object.ModuleInfo*)) [0x42a93d]\n??:? runModuleUnitTests [0x42b8a9]\n??:?
    void rt.dmain2._d_run_main(int, char**, extern (C) int function(char[][])*).runAll()
    [0x4281fc]\n??:? void rt.dmain2._d_run_main(int, char**, extern (C) int function(char[][])*).tryExec(scope
    void delegate()) [0x428183]\n??:? _d_run_main [0x4280ee]\n??:? main [0x427b43]\n??:?
    __libc_start_main [0x7d8a9554]\n1/1 unittests FAILED\n'''
  stdout: b''
- exit_code: 1
  program: "import std.typecons;\nimport std.math;\n/*\n\n    Given a positive integer\
    \ n, return the count of the numbers of n-digit\n    positive integers that start\
    \ or end with 1.\n    \n*/\nlong starts_one_ends(long n) \n{\n    long count =\
    \ 0;\n    long start = 1;\n    long end = 1;\n    for (long i = 0; i < n; i++)\
    \ {\n        start *= 10;\n        end *= 10;\n    }\n    for (long i = start;\
    \ i < end; i++) {\n        if (i % 10 == 1 || i / start == 1) {\n            count++;\n\
    \        }\n    }\n    return count;\n}\nunittest\n{\n    alias candidate = starts_one_ends;\n\
    \n    assert(candidate(1L) == 1L);\n    assert(candidate(2L) == 18L);\n    assert(candidate(3L)\
    \ == 180L);\n    assert(candidate(4L) == 1800L);\n    assert(candidate(5L) ==\
    \ 18000L);\n}\nvoid main(){}"
  status: Exception
  stderr: 'b''core.exception.AssertError@/tmp/tmpzwrxy5lu.d(29): unittest failure\n----------------\n??:?
    _d_unittestp [0x427ddd]\n??:? void tmpzwrxy5lu.__unittest_L25_C1() [0x427ac0]\n??:?
    void tmpzwrxy5lu.__modtest() [0x427b60]\n??:? int core.runtime.runModuleUnitTests().__foreachbody2(object.ModuleInfo*)
    [0x42bb03]\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)).__lambda2(immutable(object.ModuleInfo*))
    [0x42a996]\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))).__foreachbody2(ref
    rt.sections_elf_shared.DSO) [0x42fb29]\n??:? int rt.sections_elf_shared.DSO.opApply(scope
    int delegate(ref rt.sections_elf_shared.DSO)) [0x42ffd8]\n??:? int rt.minfo.moduleinfos_apply(scope
    int delegate(immutable(object.ModuleInfo*))) [0x42fab5]\n??:? int object.ModuleInfo.opApply(scope
    int delegate(object.ModuleInfo*)) [0x42a96d]\n??:? runModuleUnitTests [0x42b8d9]\n??:?
    void rt.dmain2._d_run_main(int, char**, extern (C) int function(char[][])*).runAll()
    [0x42822c]\n??:? void rt.dmain2._d_run_main(int, char**, extern (C) int function(char[][])*).tryExec(scope
    void delegate()) [0x4281b3]\n??:? _d_run_main [0x42811e]\n??:? main [0x427b73]\n??:?
    __libc_start_main [0xc0193554]\n1/1 unittests FAILED\n'''
  stdout: b''
- exit_code: 1
  program: "import std.typecons;\nimport std.math;\n/*\n\n    Given a positive integer\
    \ n, return the count of the numbers of n-digit\n    positive integers that start\
    \ or end with 1.\n    \n*/\nlong starts_one_ends(long n) \n{\n    long result\
    \ = 0;\n    long start = 1;\n    long end = 1;\n    for (long i = 0; i < n; i++)\
    \ {\n        start *= 10;\n        end *= 10;\n    }\n    start /= 10;\n    end\
    \ -= 1;\n    result = end - start + 1;\n    return result;\n}\nunittest\n{\n \
    \   alias candidate = starts_one_ends;\n\n    assert(candidate(1L) == 1L);\n \
    \   assert(candidate(2L) == 18L);\n    assert(candidate(3L) == 180L);\n    assert(candidate(4L)\
    \ == 1800L);\n    assert(candidate(5L) == 18000L);\n}\nvoid main(){}"
  status: Exception
  stderr: 'b''core.exception.AssertError@/tmp/tmpjx4yezdq.d(27): unittest failure\n----------------\n??:?
    _d_unittestp [0x427dad]\n??:? void tmpjx4yezdq.__unittest_L23_C1() [0x427a90]\n??:?
    void tmpjx4yezdq.__modtest() [0x427b30]\n??:? int core.runtime.runModuleUnitTests().__foreachbody2(object.ModuleInfo*)
    [0x42bad3]\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)).__lambda2(immutable(object.ModuleInfo*))
    [0x42a966]\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))).__foreachbody2(ref
    rt.sections_elf_shared.DSO) [0x42faf9]\n??:? int rt.sections_elf_shared.DSO.opApply(scope
    int delegate(ref rt.sections_elf_shared.DSO)) [0x42ffa8]\n??:? int rt.minfo.moduleinfos_apply(scope
    int delegate(immutable(object.ModuleInfo*))) [0x42fa85]\n??:? int object.ModuleInfo.opApply(scope
    int delegate(object.ModuleInfo*)) [0x42a93d]\n??:? runModuleUnitTests [0x42b8a9]\n??:?
    void rt.dmain2._d_run_main(int, char**, extern (C) int function(char[][])*).runAll()
    [0x4281fc]\n??:? void rt.dmain2._d_run_main(int, char**, extern (C) int function(char[][])*).tryExec(scope
    void delegate()) [0x428183]\n??:? _d_run_main [0x4280ee]\n??:? main [0x427b43]\n??:?
    __libc_start_main [0x7d8a9554]\n1/1 unittests FAILED\n'''
  stdout: b''
- exit_code: 1
  program: "import std.typecons;\nimport std.math;\n/*\n\n    Given a positive integer\
    \ n, return the count of the numbers of n-digit\n    positive integers that start\
    \ or end with 1.\n    \n*/\nlong starts_one_ends(long n) \n{\n    if (n == 1)\n\
    \        return 1;\n    else\n        return starts_one_ends(n - 1) + pow(10,\
    \ n - 1);\n}\nunittest\n{\n    alias candidate = starts_one_ends;\n\n    assert(candidate(1L)\
    \ == 1L);\n    assert(candidate(2L) == 18L);\n    assert(candidate(3L) == 180L);\n\
    \    assert(candidate(4L) == 1800L);\n    assert(candidate(5L) == 18000L);\n}\n\
    void main(){}"
  status: SyntaxError
  stderr: 'b''Error: cannot find source code for runtime library file \''object.d\''\n       dmd
    might not be correctly installed. Run \''dmd -man\'' for installation instructions.\nimport
    path[0] = /tmp\nFailed: ["dmd", "-unittest", "-v", "-o-", "/tmp/tmp_1vgw8uq.d",
    "-I/tmp"]\n'''
  stdout: b''
  timestamp: 1659798336
- exit_code: 1
  program: "import std.typecons;\nimport std.math;\n/*\n\n    Given a positive integer\
    \ n, return the count of the numbers of n-digit\n    positive integers that start\
    \ or end with 1.\n    \n*/\nlong starts_one_ends(long n) \n{\n    long count =\
    \ 0;\n    long start = 1;\n    long end = 1;\n    long i = 0;\n    while (i <\
    \ n) \n    {\n        count += start + end;\n        start *= 10;\n        end\
    \ *= 10;\n        ++i;\n    }\n    return count;\n}\nunittest\n{\n    alias candidate\
    \ = starts_one_ends;\n\n    assert(candidate(1L) == 1L);\n    assert(candidate(2L)\
    \ == 18L);\n    assert(candidate(3L) == 180L);\n    assert(candidate(4L) == 1800L);\n\
    \    assert(candidate(5L) == 18000L);\n}\nvoid main(){}"
  status: SyntaxError
  stderr: 'b''Error: cannot find source code for runtime library file \''object.d\''\n       dmd
    might not be correctly installed. Run \''dmd -man\'' for installation instructions.\nimport
    path[0] = /tmp\nFailed: ["dmd", "-unittest", "-v", "-o-", "/tmp/tmp5zw1vtk9.d",
    "-I/tmp"]\n'''
  stdout: b''
  timestamp: 1659798336
- exit_code: 1
  program: "import std.typecons;\nimport std.math;\n/*\n\n    Given a positive integer\
    \ n, return the count of the numbers of n-digit\n    positive integers that start\
    \ or end with 1.\n    \n*/\nlong starts_one_ends(long n) \n{\n    long count =\
    \ 0;\n    long start = 1;\n    long end = 1;\n    for (long i = 0; i < n; i++)\
    \ {\n        start *= 10;\n        end *= 10;\n    }\n    start /= 10;\n    end\
    \ -= 1;\n    count = end - start + 1;\n    return count;\n}\nunittest\n{\n   \
    \ alias candidate = starts_one_ends;\n\n    assert(candidate(1L) == 1L);\n   \
    \ assert(candidate(2L) == 18L);\n    assert(candidate(3L) == 180L);\n    assert(candidate(4L)\
    \ == 1800L);\n    assert(candidate(5L) == 18000L);\n}\nvoid main(){}"
  status: Exception
  stderr: 'b''core.exception.AssertError@/tmp/tmpknihm12n.d(27): unittest failure\n----------------\n??:?
    _d_unittestp [0x427dad]\n??:? void tmpknihm12n.__unittest_L23_C1() [0x427a90]\n??:?
    void tmpknihm12n.__modtest() [0x427b30]\n??:? int core.runtime.runModuleUnitTests().__foreachbody2(object.ModuleInfo*)
    [0x42bad3]\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)).__lambda2(immutable(object.ModuleInfo*))
    [0x42a966]\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))).__foreachbody2(ref
    rt.sections_elf_shared.DSO) [0x42faf9]\n??:? int rt.sections_elf_shared.DSO.opApply(scope
    int delegate(ref rt.sections_elf_shared.DSO)) [0x42ffa8]\n??:? int rt.minfo.moduleinfos_apply(scope
    int delegate(immutable(object.ModuleInfo*))) [0x42fa85]\n??:? int object.ModuleInfo.opApply(scope
    int delegate(object.ModuleInfo*)) [0x42a93d]\n??:? runModuleUnitTests [0x42b8a9]\n??:?
    void rt.dmain2._d_run_main(int, char**, extern (C) int function(char[][])*).runAll()
    [0x4281fc]\n??:? void rt.dmain2._d_run_main(int, char**, extern (C) int function(char[][])*).tryExec(scope
    void delegate()) [0x428183]\n??:? _d_run_main [0x4280ee]\n??:? main [0x427b43]\n??:?
    __libc_start_main [0xbe77b554]\n1/1 unittests FAILED\n'''
  stdout: b''
- exit_code: 1
  program: "import std.typecons;\nimport std.math;\n/*\n\n    Given a positive integer\
    \ n, return the count of the numbers of n-digit\n    positive integers that start\
    \ or end with 1.\n    \n*/\nlong starts_one_ends(long n) \n{\n    if (n == 1)\n\
    \        return 2;\n    else\n        return (pow(10, n - 1) + pow(10, n - 2));\n\
    }\nunittest\n{\n    alias candidate = starts_one_ends;\n\n    assert(candidate(1L)\
    \ == 1L);\n    assert(candidate(2L) == 18L);\n    assert(candidate(3L) == 180L);\n\
    \    assert(candidate(4L) == 1800L);\n    assert(candidate(5L) == 18000L);\n}\n\
    void main(){}"
  status: SyntaxError
  stderr: 'b''Error: cannot find source code for runtime library file \''object.d\''\n       dmd
    might not be correctly installed. Run \''dmd -man\'' for installation instructions.\nimport
    path[0] = /tmp\nFailed: ["dmd", "-unittest", "-v", "-o-", "/tmp/tmp58l78vg7.d",
    "-I/tmp"]\n'''
  stdout: b''
  timestamp: 1659798336
- exit_code: 1
  program: "import std.typecons;\nimport std.math;\n/*\n\n    Given a positive integer\
    \ n, return the count of the numbers of n-digit\n    positive integers that start\
    \ or end with 1.\n    \n*/\nlong starts_one_ends(long n) \n{\n    long count =\
    \ 0;\n    long start = 1;\n    long end = 1;\n    for (long i = 0; i < n; i++)\
    \ \n    {\n        start *= 10;\n        end *= 10;\n    }\n    start /= 10;\n\
    \    end -= 1;\n    for (long i = start; i <= end; i++) \n    {\n        if (i\
    \ % 10 == 1 || i / 10 == 1) \n        {\n            count++;\n        }\n   \
    \ }\n    return count;\n}\nunittest\n{\n    alias candidate = starts_one_ends;\n\
    \n    assert(candidate(1L) == 1L);\n    assert(candidate(2L) == 18L);\n    assert(candidate(3L)\
    \ == 180L);\n    assert(candidate(4L) == 1800L);\n    assert(candidate(5L) ==\
    \ 18000L);\n}\nvoid main(){}"
  status: SyntaxError
  stderr: 'b''Error: cannot find source code for runtime library file \''object.d\''\n       dmd
    might not be correctly installed. Run \''dmd -man\'' for installation instructions.\nimport
    path[0] = /tmp\nFailed: ["dmd", "-unittest", "-v", "-o-", "/tmp/tmpl2hwm6mk.d",
    "-I/tmp"]\n'''
  stdout: b''
  timestamp: 1659798336
- exit_code: 1
  program: "import std.typecons;\nimport std.math;\n/*\n\n    Given a positive integer\
    \ n, return the count of the numbers of n-digit\n    positive integers that start\
    \ or end with 1.\n    \n*/\nlong starts_one_ends(long n) \n{\n    long result\
    \ = 0;\n    long start = 1;\n    long end = 1;\n    for (long i = 1; i < n; i++)\
    \ {\n        start *= 10;\n        end *= 10;\n    }\n    end += 1;\n    result\
    \ = end - start;\n    return result;\n}\nunittest\n{\n    alias candidate = starts_one_ends;\n\
    \n    assert(candidate(1L) == 1L);\n    assert(candidate(2L) == 18L);\n    assert(candidate(3L)\
    \ == 180L);\n    assert(candidate(4L) == 1800L);\n    assert(candidate(5L) ==\
    \ 18000L);\n}\nvoid main(){}"
  status: Exception
  stderr: 'b''core.exception.AssertError@/tmp/tmpcm8tqv7m.d(27): unittest failure\n----------------\n??:?
    _d_unittestp [0x427d9d]\n??:? void tmpcm8tqv7m.__unittest_L22_C1() [0x427aa1]\n??:?
    void tmpcm8tqv7m.__modtest() [0x427b20]\n??:? int core.runtime.runModuleUnitTests().__foreachbody2(object.ModuleInfo*)
    [0x42bac3]\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)).__lambda2(immutable(object.ModuleInfo*))
    [0x42a956]\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))).__foreachbody2(ref
    rt.sections_elf_shared.DSO) [0x42fae9]\n??:? int rt.sections_elf_shared.DSO.opApply(scope
    int delegate(ref rt.sections_elf_shared.DSO)) [0x42ff98]\n??:? int rt.minfo.moduleinfos_apply(scope
    int delegate(immutable(object.ModuleInfo*))) [0x42fa75]\n??:? int object.ModuleInfo.opApply(scope
    int delegate(object.ModuleInfo*)) [0x42a92d]\n??:? runModuleUnitTests [0x42b899]\n??:?
    void rt.dmain2._d_run_main(int, char**, extern (C) int function(char[][])*).runAll()
    [0x4281ec]\n??:? void rt.dmain2._d_run_main(int, char**, extern (C) int function(char[][])*).tryExec(scope
    void delegate()) [0x428173]\n??:? _d_run_main [0x4280de]\n??:? main [0x427b33]\n??:?
    __libc_start_main [0xcb9c8554]\n1/1 unittests FAILED\n'''
  stdout: b''
- exit_code: 1
  program: "import std.typecons;\nimport std.math;\n/*\n\n    Given a positive integer\
    \ n, return the count of the numbers of n-digit\n    positive integers that start\
    \ or end with 1.\n    \n*/\nlong starts_one_ends(long n) \n{\n    if (n == 1)\
    \ \n        return 2;\n    else if (n == 2) \n        return 4;\n    else \n \
    \       return starts_one_ends(n - 1) + starts_one_ends(n - 2);\n}\nunittest\n\
    {\n    alias candidate = starts_one_ends;\n\n    assert(candidate(1L) == 1L);\n\
    \    assert(candidate(2L) == 18L);\n    assert(candidate(3L) == 180L);\n    assert(candidate(4L)\
    \ == 1800L);\n    assert(candidate(5L) == 18000L);\n}\nvoid main(){}"
  status: SyntaxError
  stderr: 'b''Error: cannot find source code for runtime library file \''object.d\''\n       dmd
    might not be correctly installed. Run \''dmd -man\'' for installation instructions.\nimport
    path[0] = /tmp\nFailed: ["dmd", "-unittest", "-v", "-o-", "/tmp/tmpmkfpfqts.d",
    "-I/tmp"]\n'''
  stdout: b''
  timestamp: 1659798336
- exit_code: 1
  program: "import std.typecons;\nimport std.math;\n/*\n\n    Given a positive integer\
    \ n, return the count of the numbers of n-digit\n    positive integers that start\
    \ or end with 1.\n    \n*/\nlong starts_one_ends(long n) \n{\n    long result\
    \ = 0;\n    long max = pow(10, n);\n    for (long i = 1; i < max; i++) \n    {\n\
    \        auto s = to!string(i);\n        if (s[0] == '1' || s[$-1] == '1') \n\
    \        {\n            result++;\n        }\n    }\n    return result;\n}\nunittest\n\
    {\n    alias candidate = starts_one_ends;\n\n    assert(candidate(1L) == 1L);\n\
    \    assert(candidate(2L) == 18L);\n    assert(candidate(3L) == 180L);\n    assert(candidate(4L)\
    \ == 1800L);\n    assert(candidate(5L) == 18000L);\n}\nvoid main(){}"
  status: SyntaxError
  stderr: 'b''Error: cannot find source code for runtime library file \''object.d\''\n       dmd
    might not be correctly installed. Run \''dmd -man\'' for installation instructions.\nimport
    path[0] = /tmp\nFailed: ["dmd", "-unittest", "-v", "-o-", "/tmp/tmpm8gjwfd1.d",
    "-I/tmp"]\n'''
  stdout: b''
  timestamp: 1659798336
- exit_code: 1
  program: "import std.typecons;\nimport std.math;\n/*\n\n    Given a positive integer\
    \ n, return the count of the numbers of n-digit\n    positive integers that start\
    \ or end with 1.\n    \n*/\nlong starts_one_ends(long n) \n{\n    long result\
    \ = 0;\n    long start = 1;\n    long end = 1;\n    for (long i = 0; i < n; i++)\
    \ {\n        start *= 10;\n        end *= 10;\n    }\n    start /= 10;\n    end\
    \ -= 1;\n    result = end - start + 1;\n    return result;\n}\nunittest\n{\n \
    \   alias candidate = starts_one_ends;\n\n    assert(candidate(1L) == 1L);\n \
    \   assert(candidate(2L) == 18L);\n    assert(candidate(3L) == 180L);\n    assert(candidate(4L)\
    \ == 1800L);\n    assert(candidate(5L) == 18000L);\n}\nvoid main(){}"
  status: Exception
  stderr: 'b''core.exception.AssertError@/tmp/tmpjx4yezdq.d(27): unittest failure\n----------------\n??:?
    _d_unittestp [0x427dad]\n??:? void tmpjx4yezdq.__unittest_L23_C1() [0x427a90]\n??:?
    void tmpjx4yezdq.__modtest() [0x427b30]\n??:? int core.runtime.runModuleUnitTests().__foreachbody2(object.ModuleInfo*)
    [0x42bad3]\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)).__lambda2(immutable(object.ModuleInfo*))
    [0x42a966]\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))).__foreachbody2(ref
    rt.sections_elf_shared.DSO) [0x42faf9]\n??:? int rt.sections_elf_shared.DSO.opApply(scope
    int delegate(ref rt.sections_elf_shared.DSO)) [0x42ffa8]\n??:? int rt.minfo.moduleinfos_apply(scope
    int delegate(immutable(object.ModuleInfo*))) [0x42fa85]\n??:? int object.ModuleInfo.opApply(scope
    int delegate(object.ModuleInfo*)) [0x42a93d]\n??:? runModuleUnitTests [0x42b8a9]\n??:?
    void rt.dmain2._d_run_main(int, char**, extern (C) int function(char[][])*).runAll()
    [0x4281fc]\n??:? void rt.dmain2._d_run_main(int, char**, extern (C) int function(char[][])*).tryExec(scope
    void delegate()) [0x428183]\n??:? _d_run_main [0x4280ee]\n??:? main [0x427b43]\n??:?
    __libc_start_main [0x7d8a9554]\n1/1 unittests FAILED\n'''
  stdout: b''
- exit_code: 1
  program: "import std.typecons;\nimport std.math;\n/*\n\n    Given a positive integer\
    \ n, return the count of the numbers of n-digit\n    positive integers that start\
    \ or end with 1.\n    \n*/\nlong starts_one_ends(long n) \n{\n    long result\
    \ = 0;\n    long start = pow(10, n - 1);\n    long end = pow(10, n);\n    foreach\
    \ (i; start .. end) {\n        if (i % 10 == 1 || i / 10 == 1) {\n           \
    \ result++;\n        }\n    }\n    return result;\n}\nunittest\n{\n    alias candidate\
    \ = starts_one_ends;\n\n    assert(candidate(1L) == 1L);\n    assert(candidate(2L)\
    \ == 18L);\n    assert(candidate(3L) == 180L);\n    assert(candidate(4L) == 1800L);\n\
    \    assert(candidate(5L) == 18000L);\n}\nvoid main(){}"
  status: SyntaxError
  stderr: 'b''Error: cannot find source code for runtime library file \''object.d\''\n       dmd
    might not be correctly installed. Run \''dmd -man\'' for installation instructions.\nimport
    path[0] = /tmp\nFailed: ["dmd", "-unittest", "-v", "-o-", "/tmp/tmpy5wr03xc.d",
    "-I/tmp"]\n'''
  stdout: b''
  timestamp: 1659798336
- exit_code: 1
  program: "import std.typecons;\nimport std.math;\n/*\n\n    Given a positive integer\
    \ n, return the count of the numbers of n-digit\n    positive integers that start\
    \ or end with 1.\n    \n*/\nlong starts_one_ends(long n) \n{\n    if (n == 1)\n\
    \        return 2;\n    else if (n == 2)\n        return 4;\n    else\n      \
    \  return starts_one_ends(n - 1) + starts_one_ends(n - 2);\n}\nunittest\n{\n \
    \   alias candidate = starts_one_ends;\n\n    assert(candidate(1L) == 1L);\n \
    \   assert(candidate(2L) == 18L);\n    assert(candidate(3L) == 180L);\n    assert(candidate(4L)\
    \ == 1800L);\n    assert(candidate(5L) == 18000L);\n}\nvoid main(){}"
  status: SyntaxError
  stderr: 'b''Error: cannot find source code for runtime library file \''object.d\''\n       dmd
    might not be correctly installed. Run \''dmd -man\'' for installation instructions.\nimport
    path[0] = /tmp\nFailed: ["dmd", "-unittest", "-v", "-o-", "/tmp/tmpk1jyly2k.d",
    "-I/tmp"]\n'''
  stdout: b''
  timestamp: 1659798336
- exit_code: 1
  program: "import std.typecons;\nimport std.math;\n/*\n\n    Given a positive integer\
    \ n, return the count of the numbers of n-digit\n    positive integers that start\
    \ or end with 1.\n    \n*/\nlong starts_one_ends(long n) \n{\n    long result\
    \ = 0;\n    long max = pow(10, n);\n    long min = pow(10, n - 1);\n    foreach(i;\
    \ min .. max) {\n        string s = to!string(i);\n        if (s[0] == '1' ||\
    \ s[$ - 1] == '1') {\n            result++;\n        }\n    }\n    return result;\n\
    }\nunittest\n{\n    alias candidate = starts_one_ends;\n\n    assert(candidate(1L)\
    \ == 1L);\n    assert(candidate(2L) == 18L);\n    assert(candidate(3L) == 180L);\n\
    \    assert(candidate(4L) == 1800L);\n    assert(candidate(5L) == 18000L);\n}\n\
    void main(){}"
  status: SyntaxError
  stderr: 'b''Error: cannot find source code for runtime library file \''object.d\''\n       dmd
    might not be correctly installed. Run \''dmd -man\'' for installation instructions.\nimport
    path[0] = /tmp\nFailed: ["dmd", "-unittest", "-v", "-o-", "/tmp/tmpv30xtmcj.d",
    "-I/tmp"]\n'''
  stdout: b''
  timestamp: 1659798336
- exit_code: 1
  program: "import std.typecons;\nimport std.math;\n/*\n\n    Given a positive integer\
    \ n, return the count of the numbers of n-digit\n    positive integers that start\
    \ or end with 1.\n    \n*/\nlong starts_one_ends(long n) \n{\n    long result\
    \ = 0;\n    long start = 1;\n    long end = 1;\n    for (long i = 0; i < n; i++)\
    \ {\n        start *= 10;\n        end *= 10;\n    }\n    start /= 10;\n    end\
    \ /= 10;\n    for (long i = start; i < end; i++) {\n        if (i % 10 == 1 ||\
    \ i / 10 == 1) {\n            result++;\n        }\n    }\n    return result;\n\
    }\nunittest\n{\n    alias candidate = starts_one_ends;\n\n    assert(candidate(1L)\
    \ == 1L);\n    assert(candidate(2L) == 18L);\n    assert(candidate(3L) == 180L);\n\
    \    assert(candidate(4L) == 1800L);\n    assert(candidate(5L) == 18000L);\n}\n\
    void main(){}"
  status: SyntaxError
  stderr: 'b''Error: cannot find source code for runtime library file \''object.d\''\n       dmd
    might not be correctly installed. Run \''dmd -man\'' for installation instructions.\nimport
    path[0] = /tmp\nFailed: ["dmd", "-unittest", "-v", "-o-", "/tmp/tmp_7evdq6p.d",
    "-I/tmp"]\n'''
  stdout: b''
  timestamp: 1659798336
- exit_code: 1
  program: "import std.typecons;\nimport std.math;\n/*\n\n    Given a positive integer\
    \ n, return the count of the numbers of n-digit\n    positive integers that start\
    \ or end with 1.\n    \n*/\nlong starts_one_ends(long n) \n{\n    if (n == 1)\n\
    \        return 2;\n    if (n == 2)\n        return 3;\n    return starts_one_ends(n\
    \ - 1) + starts_one_ends(n - 2);\n}\nunittest\n{\n    alias candidate = starts_one_ends;\n\
    \n    assert(candidate(1L) == 1L);\n    assert(candidate(2L) == 18L);\n    assert(candidate(3L)\
    \ == 180L);\n    assert(candidate(4L) == 1800L);\n    assert(candidate(5L) ==\
    \ 18000L);\n}\nvoid main(){}"
  status: SyntaxError
  stderr: 'b''Error: cannot find source code for runtime library file \''object.d\''\n       dmd
    might not be correctly installed. Run \''dmd -man\'' for installation instructions.\nimport
    path[0] = /tmp\nFailed: ["dmd", "-unittest", "-v", "-o-", "/tmp/tmpimmx3rzb.d",
    "-I/tmp"]\n'''
  stdout: b''
  timestamp: 1659798336
- exit_code: 1
  program: "import std.typecons;\nimport std.math;\n/*\n\n    Given a positive integer\
    \ n, return the count of the numbers of n-digit\n    positive integers that start\
    \ or end with 1.\n    \n*/\nlong starts_one_ends(long n) \n{\n    long count =\
    \ 0;\n    long i = 0;\n    long j = 0;\n    long k = 0;\n    long l = 0;\n   \
    \ long m = 0;\n    long o = 0;\n    long p = 0;\n    long q = 0;\n    long r =\
    \ 0;\n    long s = 0;\n    long t = 0;\n    long u = 0;\n    long v = 0;\n   \
    \ long w = 0;\n    long x = 0;\n    long y = 0;\n    long z = 0;\n    long aa\
    \ = 0;\n    long ab = 0;\n    long ac = 0;\n    long ad = 0;\n    long ae = 0;\n\
    \    long af = 0;\n    long ag = 0;\n    long ah = 0;\n    long ai = 0;\n    long\
    \ aj = 0;\n    long ak = 0;\n    long al = 0;\n    long am = 0;\n    long an =\
    \ 0;\n    long ao = 0;\n    long ap = 0;\n    long aq = 0;\n    long ar = 0;\n\
    \    long as = 0;\n    long at = 0;\n    long au = 0;\n    long av = 0;\n    long\
    \ aw = 0;\n    long ax = 0;\n    long ay = 0;\n    long az = 0;\n    long ba =\
    \ 0;\n    long bb = 0;\n    long bc = 0;\n    long bd = 0;\n    long be = 0;\n\
    \    long bf = 0;\n    long bg = 0;\n    long bh = 0;\n    long bi = 0;\n    long\
    \ bj = 0;\n    long bk = 0;\n    long bl = 0;\n    long bm = 0;\n    long bn =\
    \ 0;\n    long bo = 0;\n    long bp = 0;\n    long bq = 0;\n    long br = 0;\n\
    \    long bs = 0;\n    long bt = 0;\n    long bu = 0;\n    long bv = 0;\n    long\
    \ bw = 0;\n    long bx = 0;\n    long by = 0;\n    long bz\nunittest\n{\n    alias\
    \ candidate = starts_one_ends;\n\n    assert(candidate(1L) == 1L);\n    assert(candidate(2L)\
    \ == 18L);\n    assert(candidate(3L) == 180L);\n    assert(candidate(4L) == 1800L);\n\
    \    assert(candidate(5L) == 18000L);\n}\nvoid main(){}"
  status: SyntaxError
  stderr: 'b''/tmp/tmpjfth4tzx.d(81): Error: semicolon expected, not \''unittest\''\n/tmp/tmpjfth4tzx.d(81):
    Error: found \''unittest\'' instead of statement\nFailed: ["dmd", "-unittest",
    "-v", "-o-", "/tmp/tmpjfth4tzx.d", "-I/tmp"]\n'''
  stdout: b''
  timestamp: 1659798336
- exit_code: 1
  program: "import std.typecons;\nimport std.math;\n/*\n\n    Given a positive integer\
    \ n, return the count of the numbers of n-digit\n    positive integers that start\
    \ or end with 1.\n    \n*/\nlong starts_one_ends(long n) \n{\n    long result\
    \ = 0;\n    if (n == 1)\n        return 1;\n    else if (n == 2)\n        return\
    \ 10;\n    else\n    {\n        result = starts_one_ends(n - 1) + starts_one_ends(n\
    \ - 2);\n        return result;\n    }\n}\nunittest\n{\n    alias candidate =\
    \ starts_one_ends;\n\n    assert(candidate(1L) == 1L);\n    assert(candidate(2L)\
    \ == 18L);\n    assert(candidate(3L) == 180L);\n    assert(candidate(4L) == 1800L);\n\
    \    assert(candidate(5L) == 18000L);\n}\nvoid main(){}"
  status: Exception
  stderr: 'b''core.exception.AssertError@/tmp/tmpb4h5d63v.d(27): unittest failure\n----------------\n??:?
    _d_unittestp [0x427d9d]\n??:? void tmpb4h5d63v.__unittest_L22_C1() [0x427a9d]\n??:?
    void tmpb4h5d63v.__modtest() [0x427b1c]\n??:? int core.runtime.runModuleUnitTests().__foreachbody2(object.ModuleInfo*)
    [0x42bac3]\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)).__lambda2(immutable(object.ModuleInfo*))
    [0x42a956]\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))).__foreachbody2(ref
    rt.sections_elf_shared.DSO) [0x42fae9]\n??:? int rt.sections_elf_shared.DSO.opApply(scope
    int delegate(ref rt.sections_elf_shared.DSO)) [0x42ff98]\n??:? int rt.minfo.moduleinfos_apply(scope
    int delegate(immutable(object.ModuleInfo*))) [0x42fa75]\n??:? int object.ModuleInfo.opApply(scope
    int delegate(object.ModuleInfo*)) [0x42a92d]\n??:? runModuleUnitTests [0x42b899]\n??:?
    void rt.dmain2._d_run_main(int, char**, extern (C) int function(char[][])*).runAll()
    [0x4281ec]\n??:? void rt.dmain2._d_run_main(int, char**, extern (C) int function(char[][])*).tryExec(scope
    void delegate()) [0x428173]\n??:? _d_run_main [0x4280de]\n??:? main [0x427b2f]\n??:?
    __libc_start_main [0x3436b554]\n1/1 unittests FAILED\n'''
  stdout: b''
- exit_code: 1
  program: "import std.typecons;\nimport std.math;\n/*\n\n    Given a positive integer\
    \ n, return the count of the numbers of n-digit\n    positive integers that start\
    \ or end with 1.\n    \n*/\nlong starts_one_ends(long n) \n{\n    long count =\
    \ 0;\n    long start = pow(10, n - 1);\n    long end = pow(10, n) - 1;\n    for\
    \ (long i = start; i <= end; i++) {\n        auto s = to!string(i);\n        if\
    \ (s[0] == '1' || s[$ - 1] == '1') {\n            count++;\n        }\n    }\n\
    \    return count;\n}\nunittest\n{\n    alias candidate = starts_one_ends;\n\n\
    \    assert(candidate(1L) == 1L);\n    assert(candidate(2L) == 18L);\n    assert(candidate(3L)\
    \ == 180L);\n    assert(candidate(4L) == 1800L);\n    assert(candidate(5L) ==\
    \ 18000L);\n}\nvoid main(){}"
  status: SyntaxError
  stderr: 'b''Error: cannot find source code for runtime library file \''object.d\''\n       dmd
    might not be correctly installed. Run \''dmd -man\'' for installation instructions.\nimport
    path[0] = /tmp\nFailed: ["dmd", "-unittest", "-v", "-o-", "/tmp/tmpt_xcnz5w.d",
    "-I/tmp"]\n'''
  stdout: b''
  timestamp: 1659798336
- exit_code: 1
  program: "import std.typecons;\nimport std.math;\n/*\n\n    Given a positive integer\
    \ n, return the count of the numbers of n-digit\n    positive integers that start\
    \ or end with 1.\n    \n*/\nlong starts_one_ends(long n) \n{\n    long result\
    \ = 0;\n    long start = 1;\n    long end = 1;\n    for (long i = 1; i < n; i++)\
    \ {\n        start *= 10;\n        end *= 10;\n    }\n    end += 1;\n    result\
    \ = end - start;\n    return result;\n}\nunittest\n{\n    alias candidate = starts_one_ends;\n\
    \n    assert(candidate(1L) == 1L);\n    assert(candidate(2L) == 18L);\n    assert(candidate(3L)\
    \ == 180L);\n    assert(candidate(4L) == 1800L);\n    assert(candidate(5L) ==\
    \ 18000L);\n}\nvoid main(){}"
  status: Exception
  stderr: 'b''core.exception.AssertError@/tmp/tmpcm8tqv7m.d(27): unittest failure\n----------------\n??:?
    _d_unittestp [0x427d9d]\n??:? void tmpcm8tqv7m.__unittest_L22_C1() [0x427aa1]\n??:?
    void tmpcm8tqv7m.__modtest() [0x427b20]\n??:? int core.runtime.runModuleUnitTests().__foreachbody2(object.ModuleInfo*)
    [0x42bac3]\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)).__lambda2(immutable(object.ModuleInfo*))
    [0x42a956]\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))).__foreachbody2(ref
    rt.sections_elf_shared.DSO) [0x42fae9]\n??:? int rt.sections_elf_shared.DSO.opApply(scope
    int delegate(ref rt.sections_elf_shared.DSO)) [0x42ff98]\n??:? int rt.minfo.moduleinfos_apply(scope
    int delegate(immutable(object.ModuleInfo*))) [0x42fa75]\n??:? int object.ModuleInfo.opApply(scope
    int delegate(object.ModuleInfo*)) [0x42a92d]\n??:? runModuleUnitTests [0x42b899]\n??:?
    void rt.dmain2._d_run_main(int, char**, extern (C) int function(char[][])*).runAll()
    [0x4281ec]\n??:? void rt.dmain2._d_run_main(int, char**, extern (C) int function(char[][])*).tryExec(scope
    void delegate()) [0x428173]\n??:? _d_run_main [0x4280de]\n??:? main [0x427b33]\n??:?
    __libc_start_main [0xcb9c8554]\n1/1 unittests FAILED\n'''
  stdout: b''
- exit_code: 1
  program: "import std.typecons;\nimport std.math;\n/*\n\n    Given a positive integer\
    \ n, return the count of the numbers of n-digit\n    positive integers that start\
    \ or end with 1.\n    \n*/\nlong starts_one_ends(long n) \n{\n    long result\
    \ = 0;\n    if (n == 1)\n        return 1;\n    else if (n == 2)\n        return\
    \ 10;\n    else if (n == 3)\n        return 100;\n    else if (n == 4)\n     \
    \   return 1000;\n    else if (n == 5)\n        return 10000;\n    else if (n\
    \ == 6)\n        return 100000;\n    else if (n == 7)\n        return 1000000;\n\
    \    else if (n == 8)\n        return 10000000;\n    else if (n == 9)\n      \
    \  return 100000000;\n    else if (n == 10)\n        return 1000000000;\n    else\
    \ if (n == 11)\n        return 10000000000;\n    else if (n == 12)\n        return\
    \ 100000000000;\n    else if (n == 13)\n        return 1000000000000;\n    else\
    \ if (n == 14)\n        return 10000000000000;\n    else if (n == 15)\n      \
    \  return 100000000000000;\n    else if (n == 16)\n        return 1000000000000000;\n\
    \    else if (n == 17)\n        return 10000000000000000;\n    else if (n == 18)\n\
    \        return 100000000000000000;\n    else if (n == 19)\n        return 1000000000000000000;\n\
    \    else if (n == 20)\n        return 10000000000000000000;\n    else if (n ==\
    \ 21)\n        return 100000000000000000000;\n    else if (n == 22)\n        return\
    \ 1000000000000000000000;\n    else if (n == 23)\n        return 10000000000000000000000;\n\
    \    else if (n == 24)\n        return 100000000000000000000000;\n    else if\
    \ (n == 25)\n        return 1000000000000000000000000;\n    else if (n == 26)\n\
    \        return 10000000000000000000000000;\n    else if (n == 27)\n        return\
    \ 100000000000000000000000000;\n    else if (n == 28)\n        return 1000000000000000000000000000;\n\
    \    else if (n == 29)\n        return 10000000000000000000000000000;\n    else\
    \ if (n == 30)\n        return 100000000000000000000000000000;\n    else if (n\
    \ == 31)\n        return 1000000000000000000000000000000;\n    else if (n == 32)\n\
    \        return 10000000000000000000000000000000;\n    else\nunittest\n{\n   \
    \ alias candidate = starts_one_ends;\n\n    assert(candidate(1L) == 1L);\n   \
    \ assert(candidate(2L) == 18L);\n    assert(candidate(3L) == 180L);\n    assert(candidate(4L)\
    \ == 1800L);\n    assert(candidate(5L) == 18000L);\n}\nvoid main(){}"
  status: SyntaxError
  stderr: 'b''/tmp/tmptbe04y89.d(51): Error: signed integer overflow\n/tmp/tmptbe04y89.d(53):
    Error: integer overflow\n/tmp/tmptbe04y89.d(55): Error: integer overflow\n/tmp/tmptbe04y89.d(57):
    Error: integer overflow\n/tmp/tmptbe04y89.d(59): Error: integer overflow\n/tmp/tmptbe04y89.d(61):
    Error: integer overflow\n/tmp/tmptbe04y89.d(63): Error: integer overflow\n/tmp/tmptbe04y89.d(65):
    Error: integer overflow\n/tmp/tmptbe04y89.d(67): Error: integer overflow\n/tmp/tmptbe04y89.d(69):
    Error: integer overflow\n/tmp/tmptbe04y89.d(71): Error: integer overflow\n/tmp/tmptbe04y89.d(73):
    Error: integer overflow\n/tmp/tmptbe04y89.d(75): Error: integer overflow\n/tmp/tmptbe04y89.d(77):
    Error: found \''unittest\'' instead of statement\nFailed: ["dmd", "-unittest",
    "-v", "-o-", "/tmp/tmptbe04y89.d", "-I/tmp"]\n'''
  stdout: b''
  timestamp: 1659798336
- exit_code: 1
  program: "import std.typecons;\nimport std.math;\n/*\n\n    Given a positive integer\
    \ n, return the count of the numbers of n-digit\n    positive integers that start\
    \ or end with 1.\n    \n*/\nlong starts_one_ends(long n) \n{\n    if (n == 1)\n\
    \        return 1;\n    else\n        return starts_one_ends(n - 1) + pow(10,\
    \ n - 1);\n}\nunittest\n{\n    alias candidate = starts_one_ends;\n\n    assert(candidate(1L)\
    \ == 1L);\n    assert(candidate(2L) == 18L);\n    assert(candidate(3L) == 180L);\n\
    \    assert(candidate(4L) == 1800L);\n    assert(candidate(5L) == 18000L);\n}\n\
    void main(){}"
  status: SyntaxError
  stderr: 'b''Error: cannot find source code for runtime library file \''object.d\''\n       dmd
    might not be correctly installed. Run \''dmd -man\'' for installation instructions.\nimport
    path[0] = /tmp\nFailed: ["dmd", "-unittest", "-v", "-o-", "/tmp/tmp_1vgw8uq.d",
    "-I/tmp"]\n'''
  stdout: b''
  timestamp: 1659798336
- exit_code: 1
  program: "import std.typecons;\nimport std.math;\n/*\n\n    Given a positive integer\
    \ n, return the count of the numbers of n-digit\n    positive integers that start\
    \ or end with 1.\n    \n*/\nlong starts_one_ends(long n) \n{\n    long result\
    \ = 0;\n    long max_number = pow(10, n);\n    foreach(i; 1 .. max_number)\n \
    \   {\n        if(i % 10 == 1)\n        {\n            result++;\n        }\n\
    \        if(i / 10 == 1)\n        {\n            result++;\n        }\n    }\n\
    \    return result;\n}\nunittest\n{\n    alias candidate = starts_one_ends;\n\n\
    \    assert(candidate(1L) == 1L);\n    assert(candidate(2L) == 18L);\n    assert(candidate(3L)\
    \ == 180L);\n    assert(candidate(4L) == 1800L);\n    assert(candidate(5L) ==\
    \ 18000L);\n}\nvoid main(){}"
  status: SyntaxError
  stderr: 'b''Error: cannot find source code for runtime library file \''object.d\''\n       dmd
    might not be correctly installed. Run \''dmd -man\'' for installation instructions.\nimport
    path[0] = /tmp\nFailed: ["dmd", "-unittest", "-v", "-o-", "/tmp/tmph06ofcpy.d",
    "-I/tmp"]\n'''
  stdout: b''
  timestamp: 1659798336
- exit_code: 1
  program: "import std.typecons;\nimport std.math;\n/*\n\n    Given a positive integer\
    \ n, return the count of the numbers of n-digit\n    positive integers that start\
    \ or end with 1.\n    \n*/\nlong starts_one_ends(long n) \n{\n    long count =\
    \ 0;\n    long start = 1;\n    long end = 1;\n    for (long i = 1; i <= n; i++)\
    \ {\n        start *= 10;\n        end = end * 10 + 1;\n    }\n    count = end\
    \ - start;\n    return count;\n}\nunittest\n{\n    alias candidate = starts_one_ends;\n\
    \n    assert(candidate(1L) == 1L);\n    assert(candidate(2L) == 18L);\n    assert(candidate(3L)\
    \ == 180L);\n    assert(candidate(4L) == 1800L);\n    assert(candidate(5L) ==\
    \ 18000L);\n}\nvoid main(){}"
  status: SyntaxError
  stderr: 'b''Error: cannot find source code for runtime library file \''object.d\''\n       dmd
    might not be correctly installed. Run \''dmd -man\'' for installation instructions.\nimport
    path[0] = /tmp\nFailed: ["dmd", "-unittest", "-v", "-o-", "/tmp/tmppv2ju6n7.d",
    "-I/tmp"]\n'''
  stdout: b''
  timestamp: 1659798336
- exit_code: 1
  program: "import std.typecons;\nimport std.math;\n/*\n\n    Given a positive integer\
    \ n, return the count of the numbers of n-digit\n    positive integers that start\
    \ or end with 1.\n    \n*/\nlong starts_one_ends(long n) \n{\n    if (n == 1)\n\
    \        return 1;\n    else if (n == 2)\n        return 10;\n    else\n    {\n\
    \        long result = 0;\n        foreach (i; 1 .. n)\n        {\n          \
    \  result += pow(10, i - 1);\n        }\n        return result;\n    }\n}\nunittest\n\
    {\n    alias candidate = starts_one_ends;\n\n    assert(candidate(1L) == 1L);\n\
    \    assert(candidate(2L) == 18L);\n    assert(candidate(3L) == 180L);\n    assert(candidate(4L)\
    \ == 1800L);\n    assert(candidate(5L) == 18000L);\n}\nvoid main(){}"
  status: SyntaxError
  stderr: 'b''Error: cannot find source code for runtime library file \''object.d\''\n       dmd
    might not be correctly installed. Run \''dmd -man\'' for installation instructions.\nimport
    path[0] = /tmp\nFailed: ["dmd", "-unittest", "-v", "-o-", "/tmp/tmpsyjcygjd.d",
    "-I/tmp"]\n'''
  stdout: b''
  timestamp: 1659798336
- exit_code: 1
  program: "import std.typecons;\nimport std.math;\n/*\n\n    Given a positive integer\
    \ n, return the count of the numbers of n-digit\n    positive integers that start\
    \ or end with 1.\n    \n*/\nlong starts_one_ends(long n) \n{\n    long count =\
    \ 0;\n    long start = 1;\n    long end = 1;\n    for (long i = 1; i < n; i++)\
    \ {\n        start *= 10;\n        end *= 10;\n    }\n    count += start;\n  \
    \  count += end;\n    count += (start - 1) * (n - 2) * 9;\n    return count;\n\
    }\nunittest\n{\n    alias candidate = starts_one_ends;\n\n    assert(candidate(1L)\
    \ == 1L);\n    assert(candidate(2L) == 18L);\n    assert(candidate(3L) == 180L);\n\
    \    assert(candidate(4L) == 1800L);\n    assert(candidate(5L) == 18000L);\n}\n\
    void main(){}"
  status: SyntaxError
  stderr: 'b''Error: cannot find source code for runtime library file \''object.d\''\n       dmd
    might not be correctly installed. Run \''dmd -man\'' for installation instructions.\nimport
    path[0] = /tmp\nFailed: ["dmd", "-unittest", "-v", "-o-", "/tmp/tmpj3yehe6q.d",
    "-I/tmp"]\n'''
  stdout: b''
  timestamp: 1659798336
- exit_code: 1
  program: "import std.typecons;\nimport std.math;\n/*\n\n    Given a positive integer\
    \ n, return the count of the numbers of n-digit\n    positive integers that start\
    \ or end with 1.\n    \n*/\nlong starts_one_ends(long n) \n{\n    if (n == 1)\n\
    \        return 1;\n    else\n        return (long)pow(10, n - 1) + starts_one_ends(n\
    \ - 1);\n}\nunittest\n{\n    alias candidate = starts_one_ends;\n\n    assert(candidate(1L)\
    \ == 1L);\n    assert(candidate(2L) == 18L);\n    assert(candidate(3L) == 180L);\n\
    \    assert(candidate(4L) == 1800L);\n    assert(candidate(5L) == 18000L);\n}\n\
    void main(){}"
  status: SyntaxError
  stderr: 'b''/tmp/tmp4encjk8e.d(14): Error: C style cast illegal, use cast(long)pow(10,
    n - 1)\nFailed: ["dmd", "-unittest", "-v", "-o-", "/tmp/tmp4encjk8e.d", "-I/tmp"]\n'''
  stdout: b''
  timestamp: 1659798336
- exit_code: 1
  program: "import std.typecons;\nimport std.math;\n/*\n\n    Given a positive integer\
    \ n, return the count of the numbers of n-digit\n    positive integers that start\
    \ or end with 1.\n    \n*/\nlong starts_one_ends(long n) \n{\n    long result\
    \ = 0;\n    if (n == 1)\n        return 1;\n    else if (n == 2)\n        return\
    \ 10;\n    else\n    {\n        long start = pow(10, n - 1);\n        long end\
    \ = pow(10, n - 2);\n        result = start + end;\n        return result;\n \
    \   }\n}\nunittest\n{\n    alias candidate = starts_one_ends;\n\n    assert(candidate(1L)\
    \ == 1L);\n    assert(candidate(2L) == 18L);\n    assert(candidate(3L) == 180L);\n\
    \    assert(candidate(4L) == 1800L);\n    assert(candidate(5L) == 18000L);\n}\n\
    void main(){}"
  status: SyntaxError
  stderr: 'b''Error: cannot find source code for runtime library file \''object.d\''\n       dmd
    might not be correctly installed. Run \''dmd -man\'' for installation instructions.\nimport
    path[0] = /tmp\nFailed: ["dmd", "-unittest", "-v", "-o-", "/tmp/tmpyqf22z4g.d",
    "-I/tmp"]\n'''
  stdout: b''
  timestamp: 1659798336
- exit_code: 1
  program: "import std.typecons;\nimport std.math;\n/*\n\n    Given a positive integer\
    \ n, return the count of the numbers of n-digit\n    positive integers that start\
    \ or end with 1.\n    \n*/\nlong starts_one_ends(long n) \n{\n    long count =\
    \ 0;\n    long start = pow(10, n - 1);\n    long end = pow(10, n);\n    foreach(i;\
    \ start .. end) {\n        if (i % 10 == 1 || i / 10 == 1) {\n            count++;\n\
    \        }\n    }\n    return count;\n}\nunittest\n{\n    alias candidate = starts_one_ends;\n\
    \n    assert(candidate(1L) == 1L);\n    assert(candidate(2L) == 18L);\n    assert(candidate(3L)\
    \ == 180L);\n    assert(candidate(4L) == 1800L);\n    assert(candidate(5L) ==\
    \ 18000L);\n}\nvoid main(){}"
  status: SyntaxError
  stderr: 'b''Error: cannot find source code for runtime library file \''object.d\''\n       dmd
    might not be correctly installed. Run \''dmd -man\'' for installation instructions.\nimport
    path[0] = /tmp\nFailed: ["dmd", "-unittest", "-v", "-o-", "/tmp/tmp7slcu8qf.d",
    "-I/tmp"]\n'''
  stdout: b''
  timestamp: 1659798336
- exit_code: 1
  program: "import std.typecons;\nimport std.math;\n/*\n\n    Given a positive integer\
    \ n, return the count of the numbers of n-digit\n    positive integers that start\
    \ or end with 1.\n    \n*/\nlong starts_one_ends(long n) \n{\n    if (n == 1)\
    \ return 1;\n    if (n == 2) return 2;\n    if (n == 3) return 4;\n    if (n ==\
    \ 4) return 8;\n    if (n == 5) return 16;\n    if (n == 6) return 32;\n    if\
    \ (n == 7) return 64;\n    if (n == 8) return 128;\n    if (n == 9) return 256;\n\
    \    if (n == 10) return 512;\n    if (n == 11) return 1024;\n    if (n == 12)\
    \ return 2048;\n    if (n == 13) return 4096;\n    if (n == 14) return 8192;\n\
    \    if (n == 15) return 16384;\n    if (n == 16) return 32768;\n    if (n ==\
    \ 17) return 65536;\n    if (n == 18) return 131072;\n    if (n == 19) return\
    \ 262144;\n    if (n == 20) return 524288;\n    if (n == 21) return 1048576;\n\
    \    if (n == 22) return 2097152;\n    if (n == 23) return 4194304;\n    if (n\
    \ == 24) return 8388608;\n    if (n == 25) return 16777216;\n    if (n == 26)\
    \ return 33554432;\n    if (n == 27) return 67108864;\n    if (n == 28) return\
    \ 134217728;\n    if (n == 29) return 268435456;\n    if (n == 30) return 536870912;\n\
    \    if (n == 31) return 1073741824;\n    if (n == 32) return 2147483648;\n  \
    \  if (n == 33) return 4294967296;\n    if (n == 34) return 8589934592;\n    if\
    \ (n == 35) return 17179869184;\n    if (n == 36) return 34359738368;\n    if\
    \ (n == 37) return 68719476736;\n    if (n == 38) return 137438953472;\n    if\
    \ (n == 39) return 274877906944;\n    if (n == 40) return\nunittest\n{\n    alias\
    \ candidate = starts_one_ends;\n\n    assert(candidate(1L) == 1L);\n    assert(candidate(2L)\
    \ == 18L);\n    assert(candidate(3L) == 180L);\n    assert(candidate(4L) == 1800L);\n\
    \    assert(candidate(5L) == 18000L);\n}\nvoid main(){}"
  status: SyntaxError
  stderr: 'b''/tmp/tmpc5s9f45u.d(51): Error: expression expected, not \''unittest\''\n/tmp/tmpc5s9f45u.d(52):
    Error: found \''{\'' when expecting \'';\'' following return statement\nFailed:
    ["dmd", "-unittest", "-v", "-o-", "/tmp/tmpc5s9f45u.d", "-I/tmp"]\n'''
  stdout: b''
  timestamp: 1659798336
- exit_code: 1
  program: "import std.typecons;\nimport std.math;\n/*\n\n    Given a positive integer\
    \ n, return the count of the numbers of n-digit\n    positive integers that start\
    \ or end with 1.\n    \n*/\nlong starts_one_ends(long n) \n{\n    long count =\
    \ 0;\n    if (n == 1)\n        return 1;\n    else if (n == 2)\n        return\
    \ 10;\n    else\n    {\n        count = starts_one_ends(n - 1) + starts_one_ends(n\
    \ - 2);\n        return count;\n    }\n}\nunittest\n{\n    alias candidate = starts_one_ends;\n\
    \n    assert(candidate(1L) == 1L);\n    assert(candidate(2L) == 18L);\n    assert(candidate(3L)\
    \ == 180L);\n    assert(candidate(4L) == 1800L);\n    assert(candidate(5L) ==\
    \ 18000L);\n}\nvoid main(){}"
  status: SyntaxError
  stderr: 'b''Error: cannot find source code for runtime library file \''object.d\''\n       dmd
    might not be correctly installed. Run \''dmd -man\'' for installation instructions.\nimport
    path[0] = /tmp\nFailed: ["dmd", "-unittest", "-v", "-o-", "/tmp/tmpe7ha7f_e.d",
    "-I/tmp"]\n'''
  stdout: b''
  timestamp: 1659798336
- exit_code: 1
  program: "import std.typecons;\nimport std.math;\n/*\n\n    Given a positive integer\
    \ n, return the count of the numbers of n-digit\n    positive integers that start\
    \ or end with 1.\n    \n*/\nlong starts_one_ends(long n) \n{\n    long count =\
    \ 0;\n    long max = pow(10, n);\n    long min = pow(10, n - 1);\n    for (long\
    \ i = min; i < max; i++) {\n        if (i % 10 == 1 || i / 10 == 1) {\n      \
    \      count++;\n        }\n    }\n    return count;\n}\nunittest\n{\n    alias\
    \ candidate = starts_one_ends;\n\n    assert(candidate(1L) == 1L);\n    assert(candidate(2L)\
    \ == 18L);\n    assert(candidate(3L) == 180L);\n    assert(candidate(4L) == 1800L);\n\
    \    assert(candidate(5L) == 18000L);\n}\nvoid main(){}"
  status: SyntaxError
  stderr: 'b''Error: cannot find source code for runtime library file \''object.d\''\n       dmd
    might not be correctly installed. Run \''dmd -man\'' for installation instructions.\nimport
    path[0] = /tmp\nFailed: ["dmd", "-unittest", "-v", "-o-", "/tmp/tmpk4yddf3m.d",
    "-I/tmp"]\n'''
  stdout: b''
  timestamp: 1659798336
- exit_code: 1
  program: "import std.typecons;\nimport std.math;\n/*\n\n    Given a positive integer\
    \ n, return the count of the numbers of n-digit\n    positive integers that start\
    \ or end with 1.\n    \n*/\nlong starts_one_ends(long n) \n{\n    if (n == 1)\n\
    \        return 2;\n    else\n        return starts_one_ends(n - 1) + pow(10,\
    \ n - 1);\n}\nunittest\n{\n    alias candidate = starts_one_ends;\n\n    assert(candidate(1L)\
    \ == 1L);\n    assert(candidate(2L) == 18L);\n    assert(candidate(3L) == 180L);\n\
    \    assert(candidate(4L) == 1800L);\n    assert(candidate(5L) == 18000L);\n}\n\
    void main(){}"
  status: SyntaxError
  stderr: 'b''Error: cannot find source code for runtime library file \''object.d\''\n       dmd
    might not be correctly installed. Run \''dmd -man\'' for installation instructions.\nimport
    path[0] = /tmp\nFailed: ["dmd", "-unittest", "-v", "-o-", "/tmp/tmphbnzyk9e.d",
    "-I/tmp"]\n'''
  stdout: b''
  timestamp: 1659798336
- exit_code: 1
  program: "import std.typecons;\nimport std.math;\n/*\n\n    Given a positive integer\
    \ n, return the count of the numbers of n-digit\n    positive integers that start\
    \ or end with 1.\n    \n*/\nlong starts_one_ends(long n) \n{\n    if (n == 1)\n\
    \        return 2;\n    else \n    {\n        long r = starts_one_ends(n - 1);\n\
    \        return r + (long)pow(10, n - 1);\n    }\n}\nunittest\n{\n    alias candidate\
    \ = starts_one_ends;\n\n    assert(candidate(1L) == 1L);\n    assert(candidate(2L)\
    \ == 18L);\n    assert(candidate(3L) == 180L);\n    assert(candidate(4L) == 1800L);\n\
    \    assert(candidate(5L) == 18000L);\n}\nvoid main(){}"
  status: SyntaxError
  stderr: 'b''/tmp/tmp8cts3ixt.d(16): Error: C style cast illegal, use cast(long)pow(10,
    n - 1)\nFailed: ["dmd", "-unittest", "-v", "-o-", "/tmp/tmp8cts3ixt.d", "-I/tmp"]\n'''
  stdout: b''
  timestamp: 1659798336
- exit_code: 1
  program: "import std.typecons;\nimport std.math;\n/*\n\n    Given a positive integer\
    \ n, return the count of the numbers of n-digit\n    positive integers that start\
    \ or end with 1.\n    \n*/\nlong starts_one_ends(long n) \n{\n    long count =\
    \ 0;\n    long start = 1;\n    long end = 1;\n    for (long i = 0; i < n; i++)\
    \ {\n        start *= 10;\n        end *= 10;\n    }\n    start /= 10;\n    end\
    \ -= 1;\n    count = end - start + 1;\n    return count;\n}\nunittest\n{\n   \
    \ alias candidate = starts_one_ends;\n\n    assert(candidate(1L) == 1L);\n   \
    \ assert(candidate(2L) == 18L);\n    assert(candidate(3L) == 180L);\n    assert(candidate(4L)\
    \ == 1800L);\n    assert(candidate(5L) == 18000L);\n}\nvoid main(){}"
  status: Exception
  stderr: 'b''core.exception.AssertError@/tmp/tmpknihm12n.d(27): unittest failure\n----------------\n??:?
    _d_unittestp [0x427dad]\n??:? void tmpknihm12n.__unittest_L23_C1() [0x427a90]\n??:?
    void tmpknihm12n.__modtest() [0x427b30]\n??:? int core.runtime.runModuleUnitTests().__foreachbody2(object.ModuleInfo*)
    [0x42bad3]\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)).__lambda2(immutable(object.ModuleInfo*))
    [0x42a966]\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))).__foreachbody2(ref
    rt.sections_elf_shared.DSO) [0x42faf9]\n??:? int rt.sections_elf_shared.DSO.opApply(scope
    int delegate(ref rt.sections_elf_shared.DSO)) [0x42ffa8]\n??:? int rt.minfo.moduleinfos_apply(scope
    int delegate(immutable(object.ModuleInfo*))) [0x42fa85]\n??:? int object.ModuleInfo.opApply(scope
    int delegate(object.ModuleInfo*)) [0x42a93d]\n??:? runModuleUnitTests [0x42b8a9]\n??:?
    void rt.dmain2._d_run_main(int, char**, extern (C) int function(char[][])*).runAll()
    [0x4281fc]\n??:? void rt.dmain2._d_run_main(int, char**, extern (C) int function(char[][])*).tryExec(scope
    void delegate()) [0x428183]\n??:? _d_run_main [0x4280ee]\n??:? main [0x427b43]\n??:?
    __libc_start_main [0xbe77b554]\n1/1 unittests FAILED\n'''
  stdout: b''
- exit_code: 1
  program: "import std.typecons;\nimport std.math;\n/*\n\n    Given a positive integer\
    \ n, return the count of the numbers of n-digit\n    positive integers that start\
    \ or end with 1.\n    \n*/\nlong starts_one_ends(long n) \n{\n    long result\
    \ = 0;\n    for (long i = 1; i <= n; i++) \n    {\n        result += pow(10, i\
    \ - 1);\n    }\n    return result;\n}\nunittest\n{\n    alias candidate = starts_one_ends;\n\
    \n    assert(candidate(1L) == 1L);\n    assert(candidate(2L) == 18L);\n    assert(candidate(3L)\
    \ == 180L);\n    assert(candidate(4L) == 1800L);\n    assert(candidate(5L) ==\
    \ 18000L);\n}\nvoid main(){}"
  status: Exception
  stderr: 'b''core.exception.AssertError@/tmp/tmpdmncg0nz.d(23): unittest failure\n----------------\n??:?
    _d_unittestp [0x427e85]\n??:? void tmpdmncg0nz.__unittest_L18_C1() [0x427ad1]\n??:?
    void tmpdmncg0nz.__modtest() [0x427c08]\n??:? int core.runtime.runModuleUnitTests().__foreachbody2(object.ModuleInfo*)
    [0x42bbab]\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)).__lambda2(immutable(object.ModuleInfo*))
    [0x42aa3e]\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))).__foreachbody2(ref
    rt.sections_elf_shared.DSO) [0x42fbd1]\n??:? int rt.sections_elf_shared.DSO.opApply(scope
    int delegate(ref rt.sections_elf_shared.DSO)) [0x430080]\n??:? int rt.minfo.moduleinfos_apply(scope
    int delegate(immutable(object.ModuleInfo*))) [0x42fb5d]\n??:? int object.ModuleInfo.opApply(scope
    int delegate(object.ModuleInfo*)) [0x42aa15]\n??:? runModuleUnitTests [0x42b981]\n??:?
    void rt.dmain2._d_run_main(int, char**, extern (C) int function(char[][])*).runAll()
    [0x4282d4]\n??:? void rt.dmain2._d_run_main(int, char**, extern (C) int function(char[][])*).tryExec(scope
    void delegate()) [0x42825b]\n??:? _d_run_main [0x4281c6]\n??:? main [0x427c1b]\n??:?
    __libc_start_main [0x60e1c554]\n1/1 unittests FAILED\n'''
  stdout: b''
- exit_code: 1
  program: "import std.typecons;\nimport std.math;\n/*\n\n    Given a positive integer\
    \ n, return the count of the numbers of n-digit\n    positive integers that start\
    \ or end with 1.\n    \n*/\nlong starts_one_ends(long n) \n{\n    long count =\
    \ 0;\n    long max = pow(10, n);\n    long min = pow(10, n - 1);\n    for (long\
    \ i = min; i < max; i++) {\n        string s = to!string(i);\n        if (s[0]\
    \ == '1' || s[$ - 1] == '1') {\n            count++;\n        }\n    }\n    return\
    \ count;\n}\nunittest\n{\n    alias candidate = starts_one_ends;\n\n    assert(candidate(1L)\
    \ == 1L);\n    assert(candidate(2L) == 18L);\n    assert(candidate(3L) == 180L);\n\
    \    assert(candidate(4L) == 1800L);\n    assert(candidate(5L) == 18000L);\n}\n\
    void main(){}"
  status: SyntaxError
  stderr: 'b''Error: cannot find source code for runtime library file \''object.d\''\n       dmd
    might not be correctly installed. Run \''dmd -man\'' for installation instructions.\nimport
    path[0] = /tmp\nFailed: ["dmd", "-unittest", "-v", "-o-", "/tmp/tmp80tzh5s6.d",
    "-I/tmp"]\n'''
  stdout: b''
  timestamp: 1659798336
- exit_code: 1
  program: "import std.typecons;\nimport std.math;\n/*\n\n    Given a positive integer\
    \ n, return the count of the numbers of n-digit\n    positive integers that start\
    \ or end with 1.\n    \n*/\nlong starts_one_ends(long n) \n{\n    long result\
    \ = 0;\n    long i = 1;\n    while (i <= n) {\n        result += (long)pow(10,\
    \ i - 1);\n        i++;\n    }\n    return result;\n}\nunittest\n{\n    alias\
    \ candidate = starts_one_ends;\n\n    assert(candidate(1L) == 1L);\n    assert(candidate(2L)\
    \ == 18L);\n    assert(candidate(3L) == 180L);\n    assert(candidate(4L) == 1800L);\n\
    \    assert(candidate(5L) == 18000L);\n}\nvoid main(){}"
  status: SyntaxError
  stderr: 'b''/tmp/tmpqbhcrnfx.d(14): Error: C style cast illegal, use cast(long)pow(10,
    i - 1)\nFailed: ["dmd", "-unittest", "-v", "-o-", "/tmp/tmpqbhcrnfx.d", "-I/tmp"]\n'''
  stdout: b''
  timestamp: 1659798336
- exit_code: 1
  program: "import std.typecons;\nimport std.math;\n/*\n\n    Given a positive integer\
    \ n, return the count of the numbers of n-digit\n    positive integers that start\
    \ or end with 1.\n    \n*/\nlong starts_one_ends(long n) \n{\n    long result\
    \ = 0;\n    long start = 1;\n    long end = 1;\n    for (long i = 1; i < n; i++)\
    \ {\n        start *= 10;\n        end *= 10;\n    }\n    result += start;\n \
    \   result += end;\n    result += (start - 1) * (n - 1);\n    return result;\n\
    }\nunittest\n{\n    alias candidate = starts_one_ends;\n\n    assert(candidate(1L)\
    \ == 1L);\n    assert(candidate(2L) == 18L);\n    assert(candidate(3L) == 180L);\n\
    \    assert(candidate(4L) == 1800L);\n    assert(candidate(5L) == 18000L);\n}\n\
    void main(){}"
  status: SyntaxError
  stderr: 'b''Error: cannot find source code for runtime library file \''object.d\''\n       dmd
    might not be correctly installed. Run \''dmd -man\'' for installation instructions.\nimport
    path[0] = /tmp\nFailed: ["dmd", "-unittest", "-v", "-o-", "/tmp/tmpsc_auuse.d",
    "-I/tmp"]\n'''
  stdout: b''
  timestamp: 1659798336
- exit_code: 1
  program: "import std.typecons;\nimport std.math;\n/*\n\n    Given a positive integer\
    \ n, return the count of the numbers of n-digit\n    positive integers that start\
    \ or end with 1.\n    \n*/\nlong starts_one_ends(long n) \n{\n    long ret = 0;\n\
    \    long i = 0;\n    long j = 0;\n    long k = 0;\n    long l = 0;\n    long\
    \ m = 0;\n    long nn = 0;\n    long o = 0;\n    long p = 0;\n    long q = 0;\n\
    \    long r = 0;\n    long s = 0;\n    long t = 0;\n    long u = 0;\n    long\
    \ v = 0;\n    long w = 0;\n    long x = 0;\n    long y = 0;\n    long z = 0;\n\
    \    long aa = 0;\n    long bb = 0;\n    long cc = 0;\n    long dd = 0;\n    long\
    \ ee = 0;\n    long ff = 0;\n    long gg = 0;\n    long hh = 0;\n    long ii =\
    \ 0;\n    long jj = 0;\n    long kk = 0;\n    long ll = 0;\n    long mm = 0;\n\
    \    long nnn = 0;\n    long oo = 0;\n    long pp = 0;\n    long qq = 0;\n   \
    \ long rr = 0;\n    long ss = 0;\n    long tt = 0;\n    long uu = 0;\n    long\
    \ vv = 0;\n    long ww = 0;\n    long xx = 0;\n    long yy = 0;\n    long zz =\
    \ 0;\n    long aaa = 0;\n    long bbb = 0;\n    long ccc = 0;\n    long ddd =\
    \ 0;\n    long eee = 0;\n    long fff = 0;\n    long ggg = 0;\n    long hhh =\
    \ 0;\n    long iii = 0;\n    long jjj = 0;\n    long kkk = 0;\n    long lll =\
    \ 0;\n    long mmm = 0;\n    long nnnn = 0;\n    long ooo = 0;\n    long ppp =\
    \ 0;\n    long qqq = 0;\n    long rrr = 0;\n    long sss = 0;\n    long ttt =\
    \ 0;\n    long uuu = 0;\n    long vvv = 0;\n\nunittest\n{\n    alias candidate\
    \ = starts_one_ends;\n\n    assert(candidate(1L) == 1L);\n    assert(candidate(2L)\
    \ == 18L);\n    assert(candidate(3L) == 180L);\n    assert(candidate(4L) == 1800L);\n\
    \    assert(candidate(5L) == 18000L);\n}\nvoid main(){}"
  status: SyntaxError
  stderr: 'b''/tmp/tmp7ouwx0oe.d(79): Error: found \''unittest\'' instead of statement\nFailed:
    ["dmd", "-unittest", "-v", "-o-", "/tmp/tmp7ouwx0oe.d", "-I/tmp"]\n'''
  stdout: b''
  timestamp: 1659798336
- exit_code: 1
  program: "import std.typecons;\nimport std.math;\n/*\n\n    Given a positive integer\
    \ n, return the count of the numbers of n-digit\n    positive integers that start\
    \ or end with 1.\n    \n*/\nlong starts_one_ends(long n) \n{\n    long result\
    \ = 0;\n    if (n == 1)\n        return 1;\n    else if (n == 2)\n        return\
    \ 10;\n    else\n    {\n        result = starts_one_ends(n - 1) + starts_one_ends(n\
    \ - 2);\n        return result;\n    }\n}\nunittest\n{\n    alias candidate =\
    \ starts_one_ends;\n\n    assert(candidate(1L) == 1L);\n    assert(candidate(2L)\
    \ == 18L);\n    assert(candidate(3L) == 180L);\n    assert(candidate(4L) == 1800L);\n\
    \    assert(candidate(5L) == 18000L);\n}\nvoid main(){}"
  status: Exception
  stderr: 'b''core.exception.AssertError@/tmp/tmpb4h5d63v.d(27): unittest failure\n----------------\n??:?
    _d_unittestp [0x427d9d]\n??:? void tmpb4h5d63v.__unittest_L22_C1() [0x427a9d]\n??:?
    void tmpb4h5d63v.__modtest() [0x427b1c]\n??:? int core.runtime.runModuleUnitTests().__foreachbody2(object.ModuleInfo*)
    [0x42bac3]\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)).__lambda2(immutable(object.ModuleInfo*))
    [0x42a956]\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))).__foreachbody2(ref
    rt.sections_elf_shared.DSO) [0x42fae9]\n??:? int rt.sections_elf_shared.DSO.opApply(scope
    int delegate(ref rt.sections_elf_shared.DSO)) [0x42ff98]\n??:? int rt.minfo.moduleinfos_apply(scope
    int delegate(immutable(object.ModuleInfo*))) [0x42fa75]\n??:? int object.ModuleInfo.opApply(scope
    int delegate(object.ModuleInfo*)) [0x42a92d]\n??:? runModuleUnitTests [0x42b899]\n??:?
    void rt.dmain2._d_run_main(int, char**, extern (C) int function(char[][])*).runAll()
    [0x4281ec]\n??:? void rt.dmain2._d_run_main(int, char**, extern (C) int function(char[][])*).tryExec(scope
    void delegate()) [0x428173]\n??:? _d_run_main [0x4280de]\n??:? main [0x427b2f]\n??:?
    __libc_start_main [0x3436b554]\n1/1 unittests FAILED\n'''
  stdout: b''
- exit_code: 1
  program: "import std.typecons;\nimport std.math;\n/*\n\n    Given a positive integer\
    \ n, return the count of the numbers of n-digit\n    positive integers that start\
    \ or end with 1.\n    \n*/\nlong starts_one_ends(long n) \n{\n    long result\
    \ = 0;\n    long start = 1;\n    long end = 1;\n    for (long i = 1; i < n; i++)\
    \ {\n        start *= 10;\n        end *= 10;\n    }\n    result += start;\n \
    \   result += end;\n    result += (start - 1) * (end - 1);\n    return result;\n\
    }\nunittest\n{\n    alias candidate = starts_one_ends;\n\n    assert(candidate(1L)\
    \ == 1L);\n    assert(candidate(2L) == 18L);\n    assert(candidate(3L) == 180L);\n\
    \    assert(candidate(4L) == 1800L);\n    assert(candidate(5L) == 18000L);\n}\n\
    void main(){}"
  status: SyntaxError
  stderr: 'b''Error: cannot find source code for runtime library file \''object.d\''\n       dmd
    might not be correctly installed. Run \''dmd -man\'' for installation instructions.\nimport
    path[0] = /tmp\nFailed: ["dmd", "-unittest", "-v", "-o-", "/tmp/tmp77dkgeem.d",
    "-I/tmp"]\n'''
  stdout: b''
  timestamp: 1659798336
- exit_code: 1
  program: "import std.typecons;\nimport std.math;\n/*\n\n    Given a positive integer\
    \ n, return the count of the numbers of n-digit\n    positive integers that start\
    \ or end with 1.\n    \n*/\nlong starts_one_ends(long n) \n{\n    long count =\
    \ 0;\n    long start = 1;\n    long end = 1;\n    for (long i = 0; i < n; i++)\
    \ {\n        start *= 10;\n        end *= 10;\n    }\n    end += 1;\n    for (long\
    \ i = start; i < end; i++) {\n        if (i % 10 == 1 || i / 10 == 1) {\n    \
    \        count++;\n        }\n    }\n    return count;\n}\nunittest\n{\n    alias\
    \ candidate = starts_one_ends;\n\n    assert(candidate(1L) == 1L);\n    assert(candidate(2L)\
    \ == 18L);\n    assert(candidate(3L) == 180L);\n    assert(candidate(4L) == 1800L);\n\
    \    assert(candidate(5L) == 18000L);\n}\nvoid main(){}"
  status: SyntaxError
  stderr: 'b''Error: cannot find source code for runtime library file \''object.d\''\n       dmd
    might not be correctly installed. Run \''dmd -man\'' for installation instructions.\nimport
    path[0] = /tmp\nFailed: ["dmd", "-unittest", "-v", "-o-", "/tmp/tmpfdtpxbix.d",
    "-I/tmp"]\n'''
  stdout: b''
  timestamp: 1659798336
- exit_code: 1
  program: "import std.typecons;\nimport std.math;\n/*\n\n    Given a positive integer\
    \ n, return the count of the numbers of n-digit\n    positive integers that start\
    \ or end with 1.\n    \n*/\nlong starts_one_ends(long n) \n{\n    long count =\
    \ 0;\n    if (n == 1)\n        return 1;\n    else if (n == 2)\n        return\
    \ 10;\n    else if (n == 3)\n        return 100;\n    else\n    {\n        count\
    \ = starts_one_ends(n - 1) + starts_one_ends(n - 2);\n        return count;\n\
    \    }\n}\nunittest\n{\n    alias candidate = starts_one_ends;\n\n    assert(candidate(1L)\
    \ == 1L);\n    assert(candidate(2L) == 18L);\n    assert(candidate(3L) == 180L);\n\
    \    assert(candidate(4L) == 1800L);\n    assert(candidate(5L) == 18000L);\n}\n\
    void main(){}"
  status: SyntaxError
  stderr: 'b''Error: cannot find source code for runtime library file \''object.d\''\n       dmd
    might not be correctly installed. Run \''dmd -man\'' for installation instructions.\nimport
    path[0] = /tmp\nFailed: ["dmd", "-unittest", "-v", "-o-", "/tmp/tmpb1opb7u8.d",
    "-I/tmp"]\n'''
  stdout: b''
  timestamp: 1659798336
- exit_code: 1
  program: "import std.typecons;\nimport std.math;\n/*\n\n    Given a positive integer\
    \ n, return the count of the numbers of n-digit\n    positive integers that start\
    \ or end with 1.\n    \n*/\nlong starts_one_ends(long n) \n{\n    long result\
    \ = 0;\n    long start = 1;\n    long end = 1;\n    for (long i = 0; i < n; i++)\
    \ {\n        start *= 10;\n        end *= 10;\n    }\n    start /= 10;\n    end--;\n\
    \    result = end - start + 1;\n    return result;\n}\nunittest\n{\n    alias\
    \ candidate = starts_one_ends;\n\n    assert(candidate(1L) == 1L);\n    assert(candidate(2L)\
    \ == 18L);\n    assert(candidate(3L) == 180L);\n    assert(candidate(4L) == 1800L);\n\
    \    assert(candidate(5L) == 18000L);\n}\nvoid main(){}"
  status: SyntaxError
  stderr: 'b''Error: cannot find source code for runtime library file \''object.d\''\n       dmd
    might not be correctly installed. Run \''dmd -man\'' for installation instructions.\nimport
    path[0] = /tmp\nFailed: ["dmd", "-unittest", "-v", "-o-", "/tmp/tmpm_jab_pe.d",
    "-I/tmp"]\n'''
  stdout: b''
  timestamp: 1659798336
- exit_code: 1
  program: "import std.typecons;\nimport std.math;\n/*\n\n    Given a positive integer\
    \ n, return the count of the numbers of n-digit\n    positive integers that start\
    \ or end with 1.\n    \n*/\nlong starts_one_ends(long n) \n{\n    long result\
    \ = 0;\n    long start = 1;\n    long end = 1;\n    for (int i = 1; i < n; i++)\
    \ {\n        start *= 10;\n        end *= 10;\n    }\n    result += start;\n \
    \   result += end;\n    result += (n - 2) * 9 * start;\n    return result;\n}\n\
    unittest\n{\n    alias candidate = starts_one_ends;\n\n    assert(candidate(1L)\
    \ == 1L);\n    assert(candidate(2L) == 18L);\n    assert(candidate(3L) == 180L);\n\
    \    assert(candidate(4L) == 1800L);\n    assert(candidate(5L) == 18000L);\n}\n\
    void main(){}"
  status: SyntaxError
  stderr: 'b''Error: cannot find source code for runtime library file \''object.d\''\n       dmd
    might not be correctly installed. Run \''dmd -man\'' for installation instructions.\nimport
    path[0] = /tmp\nFailed: ["dmd", "-unittest", "-v", "-o-", "/tmp/tmpa3__o62p.d",
    "-I/tmp"]\n'''
  stdout: b''
  timestamp: 1659798336
- exit_code: 1
  program: "import std.typecons;\nimport std.math;\n/*\n\n    Given a positive integer\
    \ n, return the count of the numbers of n-digit\n    positive integers that start\
    \ or end with 1.\n    \n*/\nlong starts_one_ends(long n) \n{\n    long result\
    \ = 0;\n    long max = pow(10, n);\n    long min = pow(10, n - 1);\n    foreach(i;\
    \ min .. max)\n    {\n        string s = to!string(i);\n        if(s[0] == '1'\
    \ || s[$ - 1] == '1')\n            result++;\n    }\n    return result;\n}\nunittest\n\
    {\n    alias candidate = starts_one_ends;\n\n    assert(candidate(1L) == 1L);\n\
    \    assert(candidate(2L) == 18L);\n    assert(candidate(3L) == 180L);\n    assert(candidate(4L)\
    \ == 1800L);\n    assert(candidate(5L) == 18000L);\n}\nvoid main(){}"
  status: SyntaxError
  stderr: 'b''Error: cannot find source code for runtime library file \''object.d\''\n       dmd
    might not be correctly installed. Run \''dmd -man\'' for installation instructions.\nimport
    path[0] = /tmp\nFailed: ["dmd", "-unittest", "-v", "-o-", "/tmp/tmpv059r3w2.d",
    "-I/tmp"]\n'''
  stdout: b''
  timestamp: 1659798336
- exit_code: 1
  program: "import std.typecons;\nimport std.math;\n/*\n\n    Given a positive integer\
    \ n, return the count of the numbers of n-digit\n    positive integers that start\
    \ or end with 1.\n    \n*/\nlong starts_one_ends(long n) \n{\n    long result\
    \ = 0;\n    long max = pow(10, n);\n    for (long i = 1; i < max; i++) {\n   \
    \     if (i % 10 == 1) {\n            result++;\n        }\n    }\n    return\
    \ result;\n}\nunittest\n{\n    alias candidate = starts_one_ends;\n\n    assert(candidate(1L)\
    \ == 1L);\n    assert(candidate(2L) == 18L);\n    assert(candidate(3L) == 180L);\n\
    \    assert(candidate(4L) == 1800L);\n    assert(candidate(5L) == 18000L);\n}\n\
    void main(){}"
  status: SyntaxError
  stderr: 'b''Error: cannot find source code for runtime library file \''object.d\''\n       dmd
    might not be correctly installed. Run \''dmd -man\'' for installation instructions.\nimport
    path[0] = /tmp\nFailed: ["dmd", "-unittest", "-v", "-o-", "/tmp/tmp2ddicb_w.d",
    "-I/tmp"]\n'''
  stdout: b''
  timestamp: 1659798336
- exit_code: 1
  program: "import std.typecons;\nimport std.math;\n/*\n\n    Given a positive integer\
    \ n, return the count of the numbers of n-digit\n    positive integers that start\
    \ or end with 1.\n    \n*/\nlong starts_one_ends(long n) \n{\n    long count =\
    \ 0;\n    long start = 1;\n    long end = 1;\n    for (long i = 1; i < n; i++)\
    \ {\n        start *= 10;\n        end *= 10;\n    }\n    for (long i = start;\
    \ i < end * 10; i++) {\n        if (i % 10 == 1 || i / start == 1) {\n       \
    \     count++;\n        }\n    }\n    return count;\n}\nunittest\n{\n    alias\
    \ candidate = starts_one_ends;\n\n    assert(candidate(1L) == 1L);\n    assert(candidate(2L)\
    \ == 18L);\n    assert(candidate(3L) == 180L);\n    assert(candidate(4L) == 1800L);\n\
    \    assert(candidate(5L) == 18000L);\n}\nvoid main(){}"
  status: SyntaxError
  stderr: 'b''Error: cannot find source code for runtime library file \''object.d\''\n       dmd
    might not be correctly installed. Run \''dmd -man\'' for installation instructions.\nimport
    path[0] = /tmp\nFailed: ["dmd", "-unittest", "-v", "-o-", "/tmp/tmpfseqmt8m.d",
    "-I/tmp"]\n'''
  stdout: b''
  timestamp: 1659798336
- exit_code: 1
  program: "import std.typecons;\nimport std.math;\n/*\n\n    Given a positive integer\
    \ n, return the count of the numbers of n-digit\n    positive integers that start\
    \ or end with 1.\n    \n*/\nlong starts_one_ends(long n) \n{\n    if (n == 1)\n\
    \        return 1;\n    else\n        return (long)pow(10, n - 1) + starts_one_ends(n\
    \ - 1);\n}\nunittest\n{\n    alias candidate = starts_one_ends;\n\n    assert(candidate(1L)\
    \ == 1L);\n    assert(candidate(2L) == 18L);\n    assert(candidate(3L) == 180L);\n\
    \    assert(candidate(4L) == 1800L);\n    assert(candidate(5L) == 18000L);\n}\n\
    void main(){}"
  status: SyntaxError
  stderr: 'b''/tmp/tmp4encjk8e.d(14): Error: C style cast illegal, use cast(long)pow(10,
    n - 1)\nFailed: ["dmd", "-unittest", "-v", "-o-", "/tmp/tmp4encjk8e.d", "-I/tmp"]\n'''
  stdout: b''
  timestamp: 1659798336
- exit_code: 1
  program: "import std.typecons;\nimport std.math;\n/*\n\n    Given a positive integer\
    \ n, return the count of the numbers of n-digit\n    positive integers that start\
    \ or end with 1.\n    \n*/\nlong starts_one_ends(long n) \n{\n    /*\n       \
    \ The number of n-digit positive integers that start or end with 1 is\n      \
    \  the sum of the number of n-digit positive integers that start with 1\n    \
    \    and the number of n-digit positive integers that end with 1.\n        \n\
    \        The number of n-digit positive integers that start with 1 is the\n  \
    \      number of n-digit positive integers that end with 1.\n        \n      \
    \  The number of n-digit positive integers that end with 1 is the number\n   \
    \     of (n-1)-digit positive integers.\n        \n        The number of (n-1)-digit\
    \ positive integers is 10^(n-1).\n        \n        Therefore, the number of n-digit\
    \ positive integers that start or end\n        with 1 is 2 * 10^(n-1).\n    */\n\
    \    return 2 * pow(10, n - 1);\n}\nunittest\n{\n    alias candidate = starts_one_ends;\n\
    \n    assert(candidate(1L) == 1L);\n    assert(candidate(2L) == 18L);\n    assert(candidate(3L)\
    \ == 180L);\n    assert(candidate(4L) == 1800L);\n    assert(candidate(5L) ==\
    \ 18000L);\n}\nvoid main(){}"
  status: SyntaxError
  stderr: 'b''Error: cannot find source code for runtime library file \''object.d\''\n       dmd
    might not be correctly installed. Run \''dmd -man\'' for installation instructions.\nimport
    path[0] = /tmp\nFailed: ["dmd", "-unittest", "-v", "-o-", "/tmp/tmp0fje_t31.d",
    "-I/tmp"]\n'''
  stdout: b''
  timestamp: 1659798336
- exit_code: 1
  program: "import std.typecons;\nimport std.math;\n/*\n\n    Given a positive integer\
    \ n, return the count of the numbers of n-digit\n    positive integers that start\
    \ or end with 1.\n    \n*/\nlong starts_one_ends(long n) \n{\n    long result\
    \ = 0;\n    long max = pow(10, n);\n    foreach(i; 1 .. max) {\n        if (i\
    \ % 10 == 1 || i / pow(10, n - 1) == 1) {\n            result++;\n        }\n\
    \    }\n    return result;\n}\nunittest\n{\n    alias candidate = starts_one_ends;\n\
    \n    assert(candidate(1L) == 1L);\n    assert(candidate(2L) == 18L);\n    assert(candidate(3L)\
    \ == 180L);\n    assert(candidate(4L) == 1800L);\n    assert(candidate(5L) ==\
    \ 18000L);\n}\nvoid main(){}"
  status: SyntaxError
  stderr: 'b''Error: cannot find source code for runtime library file \''object.d\''\n       dmd
    might not be correctly installed. Run \''dmd -man\'' for installation instructions.\nimport
    path[0] = /tmp\nFailed: ["dmd", "-unittest", "-v", "-o-", "/tmp/tmpq_5gtlxy.d",
    "-I/tmp"]\n'''
  stdout: b''
  timestamp: 1659798336
- exit_code: 1
  program: "import std.typecons;\nimport std.math;\n/*\n\n    Given a positive integer\
    \ n, return the count of the numbers of n-digit\n    positive integers that start\
    \ or end with 1.\n    \n*/\nlong starts_one_ends(long n) \n{\n    long result\
    \ = 0;\n    long start = 1;\n    long end = 1;\n    for (long i = 0; i < n; i++)\
    \ {\n        start *= 10;\n        end *= 10;\n    }\n    start /= 10;\n    end\
    \ -= 1;\n    result = end - start + 1;\n    return result;\n}\nunittest\n{\n \
    \   alias candidate = starts_one_ends;\n\n    assert(candidate(1L) == 1L);\n \
    \   assert(candidate(2L) == 18L);\n    assert(candidate(3L) == 180L);\n    assert(candidate(4L)\
    \ == 1800L);\n    assert(candidate(5L) == 18000L);\n}\nvoid main(){}"
  status: Exception
  stderr: 'b''core.exception.AssertError@/tmp/tmpjx4yezdq.d(27): unittest failure\n----------------\n??:?
    _d_unittestp [0x427dad]\n??:? void tmpjx4yezdq.__unittest_L23_C1() [0x427a90]\n??:?
    void tmpjx4yezdq.__modtest() [0x427b30]\n??:? int core.runtime.runModuleUnitTests().__foreachbody2(object.ModuleInfo*)
    [0x42bad3]\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)).__lambda2(immutable(object.ModuleInfo*))
    [0x42a966]\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))).__foreachbody2(ref
    rt.sections_elf_shared.DSO) [0x42faf9]\n??:? int rt.sections_elf_shared.DSO.opApply(scope
    int delegate(ref rt.sections_elf_shared.DSO)) [0x42ffa8]\n??:? int rt.minfo.moduleinfos_apply(scope
    int delegate(immutable(object.ModuleInfo*))) [0x42fa85]\n??:? int object.ModuleInfo.opApply(scope
    int delegate(object.ModuleInfo*)) [0x42a93d]\n??:? runModuleUnitTests [0x42b8a9]\n??:?
    void rt.dmain2._d_run_main(int, char**, extern (C) int function(char[][])*).runAll()
    [0x4281fc]\n??:? void rt.dmain2._d_run_main(int, char**, extern (C) int function(char[][])*).tryExec(scope
    void delegate()) [0x428183]\n??:? _d_run_main [0x4280ee]\n??:? main [0x427b43]\n??:?
    __libc_start_main [0x7d8a9554]\n1/1 unittests FAILED\n'''
  stdout: b''
- exit_code: 1
  program: "import std.typecons;\nimport std.math;\n/*\n\n    Given a positive integer\
    \ n, return the count of the numbers of n-digit\n    positive integers that start\
    \ or end with 1.\n    \n*/\nlong starts_one_ends(long n) \n{\n    long count =\
    \ 0;\n    long start = 1;\n    long end = 1;\n    for (long i = 0; i < n; i++)\
    \ {\n        start *= 10;\n        end *= 10;\n    }\n    start /= 10;\n    end\
    \ -= 1;\n    count = end - start + 1;\n    return count;\n}\nunittest\n{\n   \
    \ alias candidate = starts_one_ends;\n\n    assert(candidate(1L) == 1L);\n   \
    \ assert(candidate(2L) == 18L);\n    assert(candidate(3L) == 180L);\n    assert(candidate(4L)\
    \ == 1800L);\n    assert(candidate(5L) == 18000L);\n}\nvoid main(){}"
  status: Exception
  stderr: 'b''core.exception.AssertError@/tmp/tmpknihm12n.d(27): unittest failure\n----------------\n??:?
    _d_unittestp [0x427dad]\n??:? void tmpknihm12n.__unittest_L23_C1() [0x427a90]\n??:?
    void tmpknihm12n.__modtest() [0x427b30]\n??:? int core.runtime.runModuleUnitTests().__foreachbody2(object.ModuleInfo*)
    [0x42bad3]\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)).__lambda2(immutable(object.ModuleInfo*))
    [0x42a966]\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))).__foreachbody2(ref
    rt.sections_elf_shared.DSO) [0x42faf9]\n??:? int rt.sections_elf_shared.DSO.opApply(scope
    int delegate(ref rt.sections_elf_shared.DSO)) [0x42ffa8]\n??:? int rt.minfo.moduleinfos_apply(scope
    int delegate(immutable(object.ModuleInfo*))) [0x42fa85]\n??:? int object.ModuleInfo.opApply(scope
    int delegate(object.ModuleInfo*)) [0x42a93d]\n??:? runModuleUnitTests [0x42b8a9]\n??:?
    void rt.dmain2._d_run_main(int, char**, extern (C) int function(char[][])*).runAll()
    [0x4281fc]\n??:? void rt.dmain2._d_run_main(int, char**, extern (C) int function(char[][])*).tryExec(scope
    void delegate()) [0x428183]\n??:? _d_run_main [0x4280ee]\n??:? main [0x427b43]\n??:?
    __libc_start_main [0xbe77b554]\n1/1 unittests FAILED\n'''
  stdout: b''
- exit_code: 1
  program: "import std.typecons;\nimport std.math;\n/*\n\n    Given a positive integer\
    \ n, return the count of the numbers of n-digit\n    positive integers that start\
    \ or end with 1.\n    \n*/\nlong starts_one_ends(long n) \n{\n    if (n == 1)\n\
    \        return 2;\n    else if (n == 2)\n        return 3;\n    else\n      \
    \  return starts_one_ends(n - 1) + starts_one_ends(n - 2);\n}\nunittest\n{\n \
    \   alias candidate = starts_one_ends;\n\n    assert(candidate(1L) == 1L);\n \
    \   assert(candidate(2L) == 18L);\n    assert(candidate(3L) == 180L);\n    assert(candidate(4L)\
    \ == 1800L);\n    assert(candidate(5L) == 18000L);\n}\nvoid main(){}"
  status: SyntaxError
  stderr: 'b''Error: cannot find source code for runtime library file \''object.d\''\n       dmd
    might not be correctly installed. Run \''dmd -man\'' for installation instructions.\nimport
    path[0] = /tmp\nFailed: ["dmd", "-unittest", "-v", "-o-", "/tmp/tmp8k4kfutg.d",
    "-I/tmp"]\n'''
  stdout: b''
  timestamp: 1659798336
- exit_code: 1
  program: "import std.typecons;\nimport std.math;\n/*\n\n    Given a positive integer\
    \ n, return the count of the numbers of n-digit\n    positive integers that start\
    \ or end with 1.\n    \n*/\nlong starts_one_ends(long n) \n{\n    long result\
    \ = 0;\n    long pow = pow(10, n - 1);\n    for (long i = 1; i < 10; i++) \n \
    \   {\n        result += pow;\n    }\n    return result;\n}\nunittest\n{\n   \
    \ alias candidate = starts_one_ends;\n\n    assert(candidate(1L) == 1L);\n   \
    \ assert(candidate(2L) == 18L);\n    assert(candidate(3L) == 180L);\n    assert(candidate(4L)\
    \ == 1800L);\n    assert(candidate(5L) == 18000L);\n}\nvoid main(){}"
  status: SyntaxError
  stderr: 'b''Error: cannot find source code for runtime library file \''object.d\''\n       dmd
    might not be correctly installed. Run \''dmd -man\'' for installation instructions.\nimport
    path[0] = /tmp\nFailed: ["dmd", "-unittest", "-v", "-o-", "/tmp/tmpofy492ts.d",
    "-I/tmp"]\n'''
  stdout: b''
  timestamp: 1659798336
- exit_code: 1
  program: "import std.typecons;\nimport std.math;\n/*\n\n    Given a positive integer\
    \ n, return the count of the numbers of n-digit\n    positive integers that start\
    \ or end with 1.\n    \n*/\nlong starts_one_ends(long n) \n{\n    long result\
    \ = 0;\n    long start = 1;\n    long end = 1;\n    for (long i = 0; i < n; i++)\
    \ {\n        start *= 10;\n        end *= 10;\n    }\n    start /= 10;\n    end\
    \ -= 1;\n    result = end - start + 1;\n    return result;\n}\nunittest\n{\n \
    \   alias candidate = starts_one_ends;\n\n    assert(candidate(1L) == 1L);\n \
    \   assert(candidate(2L) == 18L);\n    assert(candidate(3L) == 180L);\n    assert(candidate(4L)\
    \ == 1800L);\n    assert(candidate(5L) == 18000L);\n}\nvoid main(){}"
  status: Exception
  stderr: 'b''core.exception.AssertError@/tmp/tmpjx4yezdq.d(27): unittest failure\n----------------\n??:?
    _d_unittestp [0x427dad]\n??:? void tmpjx4yezdq.__unittest_L23_C1() [0x427a90]\n??:?
    void tmpjx4yezdq.__modtest() [0x427b30]\n??:? int core.runtime.runModuleUnitTests().__foreachbody2(object.ModuleInfo*)
    [0x42bad3]\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)).__lambda2(immutable(object.ModuleInfo*))
    [0x42a966]\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))).__foreachbody2(ref
    rt.sections_elf_shared.DSO) [0x42faf9]\n??:? int rt.sections_elf_shared.DSO.opApply(scope
    int delegate(ref rt.sections_elf_shared.DSO)) [0x42ffa8]\n??:? int rt.minfo.moduleinfos_apply(scope
    int delegate(immutable(object.ModuleInfo*))) [0x42fa85]\n??:? int object.ModuleInfo.opApply(scope
    int delegate(object.ModuleInfo*)) [0x42a93d]\n??:? runModuleUnitTests [0x42b8a9]\n??:?
    void rt.dmain2._d_run_main(int, char**, extern (C) int function(char[][])*).runAll()
    [0x4281fc]\n??:? void rt.dmain2._d_run_main(int, char**, extern (C) int function(char[][])*).tryExec(scope
    void delegate()) [0x428183]\n??:? _d_run_main [0x4280ee]\n??:? main [0x427b43]\n??:?
    __libc_start_main [0x7d8a9554]\n1/1 unittests FAILED\n'''
  stdout: b''
- exit_code: 1
  program: "import std.typecons;\nimport std.math;\n/*\n\n    Given a positive integer\
    \ n, return the count of the numbers of n-digit\n    positive integers that start\
    \ or end with 1.\n    \n*/\nlong starts_one_ends(long n) \n{\n    long result\
    \ = 0;\n    long start = 1;\n    long end = 1;\n    for (long i = 0; i < n; i++)\
    \ {\n        start *= 10;\n        end *= 10;\n    }\n    start /= 10;\n    end\
    \ -= 1;\n    result = end - start + 1;\n    return result;\n}\nunittest\n{\n \
    \   alias candidate = starts_one_ends;\n\n    assert(candidate(1L) == 1L);\n \
    \   assert(candidate(2L) == 18L);\n    assert(candidate(3L) == 180L);\n    assert(candidate(4L)\
    \ == 1800L);\n    assert(candidate(5L) == 18000L);\n}\nvoid main(){}"
  status: Exception
  stderr: 'b''core.exception.AssertError@/tmp/tmpjx4yezdq.d(27): unittest failure\n----------------\n??:?
    _d_unittestp [0x427dad]\n??:? void tmpjx4yezdq.__unittest_L23_C1() [0x427a90]\n??:?
    void tmpjx4yezdq.__modtest() [0x427b30]\n??:? int core.runtime.runModuleUnitTests().__foreachbody2(object.ModuleInfo*)
    [0x42bad3]\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)).__lambda2(immutable(object.ModuleInfo*))
    [0x42a966]\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))).__foreachbody2(ref
    rt.sections_elf_shared.DSO) [0x42faf9]\n??:? int rt.sections_elf_shared.DSO.opApply(scope
    int delegate(ref rt.sections_elf_shared.DSO)) [0x42ffa8]\n??:? int rt.minfo.moduleinfos_apply(scope
    int delegate(immutable(object.ModuleInfo*))) [0x42fa85]\n??:? int object.ModuleInfo.opApply(scope
    int delegate(object.ModuleInfo*)) [0x42a93d]\n??:? runModuleUnitTests [0x42b8a9]\n??:?
    void rt.dmain2._d_run_main(int, char**, extern (C) int function(char[][])*).runAll()
    [0x4281fc]\n??:? void rt.dmain2._d_run_main(int, char**, extern (C) int function(char[][])*).tryExec(scope
    void delegate()) [0x428183]\n??:? _d_run_main [0x4280ee]\n??:? main [0x427b43]\n??:?
    __libc_start_main [0x7d8a9554]\n1/1 unittests FAILED\n'''
  stdout: b''
- exit_code: 1
  program: "import std.typecons;\nimport std.math;\n/*\n\n    Given a positive integer\
    \ n, return the count of the numbers of n-digit\n    positive integers that start\
    \ or end with 1.\n    \n*/\nlong starts_one_ends(long n) \n{\n    if (n == 1)\n\
    \        return 2;\n    else\n        return starts_one_ends(n - 1) + (pow(10,\
    \ n - 1) - pow(10, n - 2));\n}\nunittest\n{\n    alias candidate = starts_one_ends;\n\
    \n    assert(candidate(1L) == 1L);\n    assert(candidate(2L) == 18L);\n    assert(candidate(3L)\
    \ == 180L);\n    assert(candidate(4L) == 1800L);\n    assert(candidate(5L) ==\
    \ 18000L);\n}\nvoid main(){}"
  status: SyntaxError
  stderr: 'b''Error: cannot find source code for runtime library file \''object.d\''\n       dmd
    might not be correctly installed. Run \''dmd -man\'' for installation instructions.\nimport
    path[0] = /tmp\nFailed: ["dmd", "-unittest", "-v", "-o-", "/tmp/tmp_033k6ih.d",
    "-I/tmp"]\n'''
  stdout: b''
  timestamp: 1659798336
- exit_code: 1
  program: "import std.typecons;\nimport std.math;\n/*\n\n    Given a positive integer\
    \ n, return the count of the numbers of n-digit\n    positive integers that start\
    \ or end with 1.\n    \n*/\nlong starts_one_ends(long n) \n{\n    long result\
    \ = 0;\n    long start = 1;\n    long end = 1;\n    for (long i = 1; i < n; i++)\
    \ {\n        start *= 10;\n        end *= 10;\n    }\n    end += 1;\n    result\
    \ = (end - start) * n;\n    return result;\n}\nunittest\n{\n    alias candidate\
    \ = starts_one_ends;\n\n    assert(candidate(1L) == 1L);\n    assert(candidate(2L)\
    \ == 18L);\n    assert(candidate(3L) == 180L);\n    assert(candidate(4L) == 1800L);\n\
    \    assert(candidate(5L) == 18000L);\n}\nvoid main(){}"
  status: SyntaxError
  stderr: 'b''Error: cannot find source code for runtime library file \''object.d\''\n       dmd
    might not be correctly installed. Run \''dmd -man\'' for installation instructions.\nimport
    path[0] = /tmp\nFailed: ["dmd", "-unittest", "-v", "-o-", "/tmp/tmpov6hywjl.d",
    "-I/tmp"]\n'''
  stdout: b''
  timestamp: 1659798336
- exit_code: 1
  program: "import std.typecons;\nimport std.math;\n/*\n\n    Given a positive integer\
    \ n, return the count of the numbers of n-digit\n    positive integers that start\
    \ or end with 1.\n    \n*/\nlong starts_one_ends(long n) \n{\n    long count =\
    \ 0;\n    long max = pow(10, n);\n    long min = pow(10, n - 1);\n    foreach(i;\
    \ min .. max) {\n        if (i % 10 == 1 || i / 10 == 1) {\n            count++;\n\
    \        }\n    }\n    return count;\n}\nunittest\n{\n    alias candidate = starts_one_ends;\n\
    \n    assert(candidate(1L) == 1L);\n    assert(candidate(2L) == 18L);\n    assert(candidate(3L)\
    \ == 180L);\n    assert(candidate(4L) == 1800L);\n    assert(candidate(5L) ==\
    \ 18000L);\n}\nvoid main(){}"
  status: SyntaxError
  stderr: 'b''Error: cannot find source code for runtime library file \''object.d\''\n       dmd
    might not be correctly installed. Run \''dmd -man\'' for installation instructions.\nimport
    path[0] = /tmp\nFailed: ["dmd", "-unittest", "-v", "-o-", "/tmp/tmpow89cdjd.d",
    "-I/tmp"]\n'''
  stdout: b''
  timestamp: 1659798336
- exit_code: 1
  program: "import std.typecons;\nimport std.math;\n/*\n\n    Given a positive integer\
    \ n, return the count of the numbers of n-digit\n    positive integers that start\
    \ or end with 1.\n    \n*/\nlong starts_one_ends(long n) \n{\n    long result\
    \ = 0;\n    long start = 1;\n    long end = 1;\n    for (long i = 1; i < n; i++)\
    \ {\n        start *= 10;\n        end *= 10;\n    }\n    result += start;\n \
    \   result += end;\n    result += (start - 1) * (n - 1);\n    return result;\n\
    }\nunittest\n{\n    alias candidate = starts_one_ends;\n\n    assert(candidate(1L)\
    \ == 1L);\n    assert(candidate(2L) == 18L);\n    assert(candidate(3L) == 180L);\n\
    \    assert(candidate(4L) == 1800L);\n    assert(candidate(5L) == 18000L);\n}\n\
    void main(){}"
  status: SyntaxError
  stderr: 'b''Error: cannot find source code for runtime library file \''object.d\''\n       dmd
    might not be correctly installed. Run \''dmd -man\'' for installation instructions.\nimport
    path[0] = /tmp\nFailed: ["dmd", "-unittest", "-v", "-o-", "/tmp/tmpsc_auuse.d",
    "-I/tmp"]\n'''
  stdout: b''
  timestamp: 1659798336
- exit_code: 1
  program: "import std.typecons;\nimport std.math;\n/*\n\n    Given a positive integer\
    \ n, return the count of the numbers of n-digit\n    positive integers that start\
    \ or end with 1.\n    \n*/\nlong starts_one_ends(long n) \n{\n    if (n == 1)\
    \ \n        return 2;\n    else \n        return (pow(10, n) - pow(9, n) - pow(10,\
    \ n - 1) + pow(8, n - 1)) / 9;\n}\nunittest\n{\n    alias candidate = starts_one_ends;\n\
    \n    assert(candidate(1L) == 1L);\n    assert(candidate(2L) == 18L);\n    assert(candidate(3L)\
    \ == 180L);\n    assert(candidate(4L) == 1800L);\n    assert(candidate(5L) ==\
    \ 18000L);\n}\nvoid main(){}"
  status: SyntaxError
  stderr: 'b''Error: cannot find source code for runtime library file \''object.d\''\n       dmd
    might not be correctly installed. Run \''dmd -man\'' for installation instructions.\nimport
    path[0] = /tmp\nFailed: ["dmd", "-unittest", "-v", "-o-", "/tmp/tmpo1vnqnmv.d",
    "-I/tmp"]\n'''
  stdout: b''
  timestamp: 1659798336
- exit_code: 1
  program: "import std.typecons;\nimport std.math;\n/*\n\n    Given a positive integer\
    \ n, return the count of the numbers of n-digit\n    positive integers that start\
    \ or end with 1.\n    \n*/\nlong starts_one_ends(long n) \n{\n    if (n == 1)\n\
    \        return 2;\n    else\n        return (pow(10, n - 1) - pow(10, n - 2))\
    \ * 2;\n}\nunittest\n{\n    alias candidate = starts_one_ends;\n\n    assert(candidate(1L)\
    \ == 1L);\n    assert(candidate(2L) == 18L);\n    assert(candidate(3L) == 180L);\n\
    \    assert(candidate(4L) == 1800L);\n    assert(candidate(5L) == 18000L);\n}\n\
    void main(){}"
  status: SyntaxError
  stderr: 'b''Error: cannot find source code for runtime library file \''object.d\''\n       dmd
    might not be correctly installed. Run \''dmd -man\'' for installation instructions.\nimport
    path[0] = /tmp\nFailed: ["dmd", "-unittest", "-v", "-o-", "/tmp/tmpqwh2z7df.d",
    "-I/tmp"]\n'''
  stdout: b''
  timestamp: 1659798336
- exit_code: 1
  program: "import std.typecons;\nimport std.math;\n/*\n\n    Given a positive integer\
    \ n, return the count of the numbers of n-digit\n    positive integers that start\
    \ or end with 1.\n    \n*/\nlong starts_one_ends(long n) \n{\n    long result\
    \ = 0;\n    long start = 1;\n    long end = 1;\n    foreach(i; 0 .. n)\n    {\n\
    \        result += start * end;\n        start *= 10;\n        end = end * 10\
    \ + 1;\n    }\n    return result;\n}\nunittest\n{\n    alias candidate = starts_one_ends;\n\
    \n    assert(candidate(1L) == 1L);\n    assert(candidate(2L) == 18L);\n    assert(candidate(3L)\
    \ == 180L);\n    assert(candidate(4L) == 1800L);\n    assert(candidate(5L) ==\
    \ 18000L);\n}\nvoid main(){}"
  status: SyntaxError
  stderr: 'b''Error: cannot find source code for runtime library file \''object.d\''\n       dmd
    might not be correctly installed. Run \''dmd -man\'' for installation instructions.\nimport
    path[0] = /tmp\nFailed: ["dmd", "-unittest", "-v", "-o-", "/tmp/tmp4mxn2c5a.d",
    "-I/tmp"]\n'''
  stdout: b''
  timestamp: 1659798336
- exit_code: 1
  program: "import std.typecons;\nimport std.math;\n/*\n\n    Given a positive integer\
    \ n, return the count of the numbers of n-digit\n    positive integers that start\
    \ or end with 1.\n    \n*/\nlong starts_one_ends(long n) \n{\n    long result\
    \ = 0;\n    if (n == 1)\n        return 1;\n    else if (n == 2)\n        return\
    \ 10;\n    else\n    {\n        result = starts_one_ends(n - 1) + starts_one_ends(n\
    \ - 2);\n        return result;\n    }\n}\nunittest\n{\n    alias candidate =\
    \ starts_one_ends;\n\n    assert(candidate(1L) == 1L);\n    assert(candidate(2L)\
    \ == 18L);\n    assert(candidate(3L) == 180L);\n    assert(candidate(4L) == 1800L);\n\
    \    assert(candidate(5L) == 18000L);\n}\nvoid main(){}"
  status: Exception
  stderr: 'b''core.exception.AssertError@/tmp/tmpb4h5d63v.d(27): unittest failure\n----------------\n??:?
    _d_unittestp [0x427d9d]\n??:? void tmpb4h5d63v.__unittest_L22_C1() [0x427a9d]\n??:?
    void tmpb4h5d63v.__modtest() [0x427b1c]\n??:? int core.runtime.runModuleUnitTests().__foreachbody2(object.ModuleInfo*)
    [0x42bac3]\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)).__lambda2(immutable(object.ModuleInfo*))
    [0x42a956]\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))).__foreachbody2(ref
    rt.sections_elf_shared.DSO) [0x42fae9]\n??:? int rt.sections_elf_shared.DSO.opApply(scope
    int delegate(ref rt.sections_elf_shared.DSO)) [0x42ff98]\n??:? int rt.minfo.moduleinfos_apply(scope
    int delegate(immutable(object.ModuleInfo*))) [0x42fa75]\n??:? int object.ModuleInfo.opApply(scope
    int delegate(object.ModuleInfo*)) [0x42a92d]\n??:? runModuleUnitTests [0x42b899]\n??:?
    void rt.dmain2._d_run_main(int, char**, extern (C) int function(char[][])*).runAll()
    [0x4281ec]\n??:? void rt.dmain2._d_run_main(int, char**, extern (C) int function(char[][])*).tryExec(scope
    void delegate()) [0x428173]\n??:? _d_run_main [0x4280de]\n??:? main [0x427b2f]\n??:?
    __libc_start_main [0x3436b554]\n1/1 unittests FAILED\n'''
  stdout: b''
- exit_code: 1
  program: "import std.typecons;\nimport std.math;\n/*\n\n    Given a positive integer\
    \ n, return the count of the numbers of n-digit\n    positive integers that start\
    \ or end with 1.\n    \n*/\nlong starts_one_ends(long n) \n{\n    long result\
    \ = 0;\n    long max = pow(10, n);\n    long min = pow(10, n - 1);\n    foreach(i;\
    \ min .. max)\n    {\n        string s = to!string(i);\n        if(s[0] == '1'\
    \ || s[$ - 1] == '1')\n            result++;\n    }\n    return result;\n}\nunittest\n\
    {\n    alias candidate = starts_one_ends;\n\n    assert(candidate(1L) == 1L);\n\
    \    assert(candidate(2L) == 18L);\n    assert(candidate(3L) == 180L);\n    assert(candidate(4L)\
    \ == 1800L);\n    assert(candidate(5L) == 18000L);\n}\nvoid main(){}"
  status: SyntaxError
  stderr: 'b''Error: cannot find source code for runtime library file \''object.d\''\n       dmd
    might not be correctly installed. Run \''dmd -man\'' for installation instructions.\nimport
    path[0] = /tmp\nFailed: ["dmd", "-unittest", "-v", "-o-", "/tmp/tmpv059r3w2.d",
    "-I/tmp"]\n'''
  stdout: b''
  timestamp: 1659798336
- exit_code: 1
  program: "import std.typecons;\nimport std.math;\n/*\n\n    Given a positive integer\
    \ n, return the count of the numbers of n-digit\n    positive integers that start\
    \ or end with 1.\n    \n*/\nlong starts_one_ends(long n) \n{\n    long result\
    \ = 0;\n    long start = 1;\n    long end = 1;\n    long i = 0;\n    while (i\
    \ < n) {\n        start *= 10;\n        end *= 10;\n        i++;\n    }\n    start\
    \ /= 10;\n    end -= 1;\n    result = end - start + 1;\n    return result;\n}\n\
    unittest\n{\n    alias candidate = starts_one_ends;\n\n    assert(candidate(1L)\
    \ == 1L);\n    assert(candidate(2L) == 18L);\n    assert(candidate(3L) == 180L);\n\
    \    assert(candidate(4L) == 1800L);\n    assert(candidate(5L) == 18000L);\n}\n\
    void main(){}"
  status: SyntaxError
  stderr: 'b''Error: cannot find source code for runtime library file \''object.d\''\n       dmd
    might not be correctly installed. Run \''dmd -man\'' for installation instructions.\nimport
    path[0] = /tmp\nFailed: ["dmd", "-unittest", "-v", "-o-", "/tmp/tmpcadkznq7.d",
    "-I/tmp"]\n'''
  stdout: b''
  timestamp: 1659798336
- exit_code: 1
  program: "import std.typecons;\nimport std.math;\n/*\n\n    Given a positive integer\
    \ n, return the count of the numbers of n-digit\n    positive integers that start\
    \ or end with 1.\n    \n*/\nlong starts_one_ends(long n) \n{\n    long count =\
    \ 0;\n    long max = pow(10, n);\n    for (long i = 1; i < max; i++) \n    {\n\
    \        if (i % 10 == 1) \n        {\n            count++;\n        }\n     \
    \   if (i / 10 == 1) \n        {\n            count++;\n        }\n    }\n   \
    \ return count;\n}\nunittest\n{\n    alias candidate = starts_one_ends;\n\n  \
    \  assert(candidate(1L) == 1L);\n    assert(candidate(2L) == 18L);\n    assert(candidate(3L)\
    \ == 180L);\n    assert(candidate(4L) == 1800L);\n    assert(candidate(5L) ==\
    \ 18000L);\n}\nvoid main(){}"
  status: SyntaxError
  stderr: 'b''Error: cannot find source code for runtime library file \''object.d\''\n       dmd
    might not be correctly installed. Run \''dmd -man\'' for installation instructions.\nimport
    path[0] = /tmp\nFailed: ["dmd", "-unittest", "-v", "-o-", "/tmp/tmpx1v2fg4y.d",
    "-I/tmp"]\n'''
  stdout: b''
  timestamp: 1659798336
- exit_code: 1
  program: "import std.typecons;\nimport std.math;\n/*\n\n    Given a positive integer\
    \ n, return the count of the numbers of n-digit\n    positive integers that start\
    \ or end with 1.\n    \n*/\nlong starts_one_ends(long n) \n{\n    if (n == 1)\n\
    \        return 1;\n    else\n        return (n - 1) * pow(10, n - 2) + starts_one_ends(n\
    \ - 1);\n}\nunittest\n{\n    alias candidate = starts_one_ends;\n\n    assert(candidate(1L)\
    \ == 1L);\n    assert(candidate(2L) == 18L);\n    assert(candidate(3L) == 180L);\n\
    \    assert(candidate(4L) == 1800L);\n    assert(candidate(5L) == 18000L);\n}\n\
    void main(){}"
  status: SyntaxError
  stderr: 'b''Error: cannot find source code for runtime library file \''object.d\''\n       dmd
    might not be correctly installed. Run \''dmd -man\'' for installation instructions.\nimport
    path[0] = /tmp\nFailed: ["dmd", "-unittest", "-v", "-o-", "/tmp/tmpj9x0hqwm.d",
    "-I/tmp"]\n'''
  stdout: b''
  timestamp: 1659798336
- exit_code: 1
  program: "import std.typecons;\nimport std.math;\n/*\n\n    Given a positive integer\
    \ n, return the count of the numbers of n-digit\n    positive integers that start\
    \ or end with 1.\n    \n*/\nlong starts_one_ends(long n) \n{\n    long count =\
    \ 0;\n    long max = pow(10, n);\n    for (long i = 1; i < max; i++) {\n     \
    \   if (i % 10 == 1) {\n            count++;\n        }\n    }\n    return count;\n\
    }\nunittest\n{\n    alias candidate = starts_one_ends;\n\n    assert(candidate(1L)\
    \ == 1L);\n    assert(candidate(2L) == 18L);\n    assert(candidate(3L) == 180L);\n\
    \    assert(candidate(4L) == 1800L);\n    assert(candidate(5L) == 18000L);\n}\n\
    void main(){}"
  status: SyntaxError
  stderr: 'b''Error: cannot find source code for runtime library file \''object.d\''\n       dmd
    might not be correctly installed. Run \''dmd -man\'' for installation instructions.\nimport
    path[0] = /tmp\nFailed: ["dmd", "-unittest", "-v", "-o-", "/tmp/tmprzod_9ge.d",
    "-I/tmp"]\n'''
  stdout: b''
  timestamp: 1659798336
- exit_code: 1
  program: "import std.typecons;\nimport std.math;\n/*\n\n    Given a positive integer\
    \ n, return the count of the numbers of n-digit\n    positive integers that start\
    \ or end with 1.\n    \n*/\nlong starts_one_ends(long n) \n{\n    if (n == 1)\n\
    \        return 2;\n    else if (n == 2)\n        return 3;\n    else\n      \
    \  return starts_one_ends(n - 1) + starts_one_ends(n - 2);\n}\nunittest\n{\n \
    \   alias candidate = starts_one_ends;\n\n    assert(candidate(1L) == 1L);\n \
    \   assert(candidate(2L) == 18L);\n    assert(candidate(3L) == 180L);\n    assert(candidate(4L)\
    \ == 1800L);\n    assert(candidate(5L) == 18000L);\n}\nvoid main(){}"
  status: SyntaxError
  stderr: 'b''Error: cannot find source code for runtime library file \''object.d\''\n       dmd
    might not be correctly installed. Run \''dmd -man\'' for installation instructions.\nimport
    path[0] = /tmp\nFailed: ["dmd", "-unittest", "-v", "-o-", "/tmp/tmp8k4kfutg.d",
    "-I/tmp"]\n'''
  stdout: b''
  timestamp: 1659798336
- exit_code: 1
  program: "import std.typecons;\nimport std.math;\n/*\n\n    Given a positive integer\
    \ n, return the count of the numbers of n-digit\n    positive integers that start\
    \ or end with 1.\n    \n*/\nlong starts_one_ends(long n) \n{\n    long res = 0;\n\
    \    long max = pow(10, n);\n    for (long i = 1; i < max; i++) {\n        if\
    \ (i % 10 == 1) {\n            res++;\n        }\n    }\n    return res;\n}\n\
    unittest\n{\n    alias candidate = starts_one_ends;\n\n    assert(candidate(1L)\
    \ == 1L);\n    assert(candidate(2L) == 18L);\n    assert(candidate(3L) == 180L);\n\
    \    assert(candidate(4L) == 1800L);\n    assert(candidate(5L) == 18000L);\n}\n\
    void main(){}"
  status: SyntaxError
  stderr: 'b''Error: cannot find source code for runtime library file \''object.d\''\n       dmd
    might not be correctly installed. Run \''dmd -man\'' for installation instructions.\nimport
    path[0] = /tmp\nFailed: ["dmd", "-unittest", "-v", "-o-", "/tmp/tmpvh3nvv2h.d",
    "-I/tmp"]\n'''
  stdout: b''
  timestamp: 1659798336
- exit_code: 1
  program: "import std.typecons;\nimport std.math;\n/*\n\n    Given a positive integer\
    \ n, return the count of the numbers of n-digit\n    positive integers that start\
    \ or end with 1.\n    \n*/\nlong starts_one_ends(long n) \n{\n    long result\
    \ = 0;\n    if (n == 1)\n        return 1;\n    else if (n == 2)\n        return\
    \ 10;\n    else\n    {\n        result = starts_one_ends(n - 1) + starts_one_ends(n\
    \ - 2);\n        return result;\n    }\n}\nunittest\n{\n    alias candidate =\
    \ starts_one_ends;\n\n    assert(candidate(1L) == 1L);\n    assert(candidate(2L)\
    \ == 18L);\n    assert(candidate(3L) == 180L);\n    assert(candidate(4L) == 1800L);\n\
    \    assert(candidate(5L) == 18000L);\n}\nvoid main(){}"
  status: Exception
  stderr: 'b''core.exception.AssertError@/tmp/tmpb4h5d63v.d(27): unittest failure\n----------------\n??:?
    _d_unittestp [0x427d9d]\n??:? void tmpb4h5d63v.__unittest_L22_C1() [0x427a9d]\n??:?
    void tmpb4h5d63v.__modtest() [0x427b1c]\n??:? int core.runtime.runModuleUnitTests().__foreachbody2(object.ModuleInfo*)
    [0x42bac3]\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)).__lambda2(immutable(object.ModuleInfo*))
    [0x42a956]\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))).__foreachbody2(ref
    rt.sections_elf_shared.DSO) [0x42fae9]\n??:? int rt.sections_elf_shared.DSO.opApply(scope
    int delegate(ref rt.sections_elf_shared.DSO)) [0x42ff98]\n??:? int rt.minfo.moduleinfos_apply(scope
    int delegate(immutable(object.ModuleInfo*))) [0x42fa75]\n??:? int object.ModuleInfo.opApply(scope
    int delegate(object.ModuleInfo*)) [0x42a92d]\n??:? runModuleUnitTests [0x42b899]\n??:?
    void rt.dmain2._d_run_main(int, char**, extern (C) int function(char[][])*).runAll()
    [0x4281ec]\n??:? void rt.dmain2._d_run_main(int, char**, extern (C) int function(char[][])*).tryExec(scope
    void delegate()) [0x428173]\n??:? _d_run_main [0x4280de]\n??:? main [0x427b2f]\n??:?
    __libc_start_main [0x3436b554]\n1/1 unittests FAILED\n'''
  stdout: b''
- exit_code: 1
  program: "import std.typecons;\nimport std.math;\n/*\n\n    Given a positive integer\
    \ n, return the count of the numbers of n-digit\n    positive integers that start\
    \ or end with 1.\n    \n*/\nlong starts_one_ends(long n) \n{\n    if (n == 1)\n\
    \        return 2;\n    else if (n == 2)\n        return 3;\n    else\n      \
    \  return starts_one_ends(n - 1) + starts_one_ends(n - 2);\n}\nunittest\n{\n \
    \   alias candidate = starts_one_ends;\n\n    assert(candidate(1L) == 1L);\n \
    \   assert(candidate(2L) == 18L);\n    assert(candidate(3L) == 180L);\n    assert(candidate(4L)\
    \ == 1800L);\n    assert(candidate(5L) == 18000L);\n}\nvoid main(){}"
  status: SyntaxError
  stderr: 'b''Error: cannot find source code for runtime library file \''object.d\''\n       dmd
    might not be correctly installed. Run \''dmd -man\'' for installation instructions.\nimport
    path[0] = /tmp\nFailed: ["dmd", "-unittest", "-v", "-o-", "/tmp/tmp8k4kfutg.d",
    "-I/tmp"]\n'''
  stdout: b''
  timestamp: 1659798336
- exit_code: 1
  program: "import std.typecons;\nimport std.math;\n/*\n\n    Given a positive integer\
    \ n, return the count of the numbers of n-digit\n    positive integers that start\
    \ or end with 1.\n    \n*/\nlong starts_one_ends(long n) \n{\n    long result\
    \ = 0;\n    long start = 1;\n    long end = 1;\n    for (long i = 0; i < n; i++)\
    \ {\n        start *= 10;\n        end *= 10;\n    }\n    end -= 1;\n    result\
    \ = end - start + 1;\n    return result;\n}\nunittest\n{\n    alias candidate\
    \ = starts_one_ends;\n\n    assert(candidate(1L) == 1L);\n    assert(candidate(2L)\
    \ == 18L);\n    assert(candidate(3L) == 180L);\n    assert(candidate(4L) == 1800L);\n\
    \    assert(candidate(5L) == 18000L);\n}\nvoid main(){}"
  status: SyntaxError
  stderr: 'b''Error: cannot find source code for runtime library file \''object.d\''\n       dmd
    might not be correctly installed. Run \''dmd -man\'' for installation instructions.\nimport
    path[0] = /tmp\nFailed: ["dmd", "-unittest", "-v", "-o-", "/tmp/tmppu7fra8v.d",
    "-I/tmp"]\n'''
  stdout: b''
  timestamp: 1659798336
- exit_code: 1
  program: "import std.typecons;\nimport std.math;\n/*\n\n    Given a positive integer\
    \ n, return the count of the numbers of n-digit\n    positive integers that start\
    \ or end with 1.\n    \n*/\nlong starts_one_ends(long n) \n{\n    long count =\
    \ 0;\n    long start = 1;\n    long end = 1;\n    long i = 0;\n    long j = 0;\n\
    \    long k = 0;\n    long m = 0;\n    long x = 0;\n    long y = 0;\n    long\
    \ z = 0;\n    long w = 0;\n    long v = 0;\n    long u = 0;\n    long t = 0;\n\
    \    long s = 0;\n    long r = 0;\n    long q = 0;\n    long p = 0;\n    long\
    \ o = 0;\n    long l = 0;\n    long h = 0;\n    long g = 0;\n    long f = 0;\n\
    \    long e = 0;\n    long d = 0;\n    long c = 0;\n    long b = 0;\n    long\
    \ a = 0;\n    long N = 0;\n    long M = 0;\n    long L = 0;\n    long K = 0;\n\
    \    long J = 0;\n    long I = 0;\n    long H = 0;\n    long G = 0;\n    long\
    \ F = 0;\n    long E = 0;\n    long D = 0;\n    long C = 0;\n    long B = 0;\n\
    \    long A = 0;\n    long Z = 0;\n    long Y = 0;\n    long X = 0;\n    long\
    \ W = 0;\n    long V = 0;\n    long U = 0;\n    long T = 0;\n    long S = 0;\n\
    \    long R = 0;\n    long Q = 0;\n    long P = 0;\n    long O = 0;\n    long[]\
    \ arr = new long[n];\n    long[] arr2 = new long[n];\n    long[] arr3 = new long[n];\n\
    \    long[] arr4 = new long[n];\n    long[] arr5 = new long[n];\n    long[] arr6\
    \ = new long[n];\n    long[] arr7 = new long[n];\n    long[] arr8 = new long[n];\n\
    \    long[] arr9 = new long[n];\n    long[] arr10 = new long[n];\n    long[] arr11\
    \ = new long[n];\n\nunittest\n{\n    alias candidate = starts_one_ends;\n\n  \
    \  assert(candidate(1L) == 1L);\n    assert(candidate(2L) == 18L);\n    assert(candidate(3L)\
    \ == 180L);\n    assert(candidate(4L) == 1800L);\n    assert(candidate(5L) ==\
    \ 18000L);\n}\nvoid main(){}"
  status: SyntaxError
  stderr: 'b''/tmp/tmp48lwsscj.d(77): Error: found \''unittest\'' instead of statement\nFailed:
    ["dmd", "-unittest", "-v", "-o-", "/tmp/tmp48lwsscj.d", "-I/tmp"]\n'''
  stdout: b''
  timestamp: 1659798336
- exit_code: 1
  program: "import std.typecons;\nimport std.math;\n/*\n\n    Given a positive integer\
    \ n, return the count of the numbers of n-digit\n    positive integers that start\
    \ or end with 1.\n    \n*/\nlong starts_one_ends(long n) \n{\n    long result\
    \ = 0;\n    long start = 1;\n    long end = 1;\n    long i = 0;\n    long j =\
    \ 0;\n    long k = 0;\n    long l = 0;\n    long m = 0;\n    long n = 0;\n   \
    \ long o = 0;\n    long p = 0;\n    long q = 0;\n    long r = 0;\n    long s =\
    \ 0;\n    long t = 0;\n    long u = 0;\n    long v = 0;\n    long w = 0;\n   \
    \ long x = 0;\n    long y = 0;\n    long z = 0;\n    long aa = 0;\n    long ab\
    \ = 0;\n    long ac = 0;\n    long ad = 0;\n    long ae = 0;\n    long af = 0;\n\
    \    long ag = 0;\n    long ah = 0;\n    long ai = 0;\n    long aj = 0;\n    long\
    \ ak = 0;\n    long al = 0;\n    long am = 0;\n    long an = 0;\n    long ao =\
    \ 0;\n    long ap = 0;\n    long aq = 0;\n    long ar = 0;\n    long as = 0;\n\
    \    long at = 0;\n    long au = 0;\n    long av = 0;\n    long aw = 0;\n    long\
    \ ax = 0;\n    long ay = 0;\n    long az = 0;\n    long ba = 0;\n    long bb =\
    \ 0;\n    long bc = 0;\n    long bd = 0;\n    long be = 0;\n    long bf = 0;\n\
    \    long bg = 0;\n    long bh = 0;\n    long bi = 0;\n    long bj = 0;\n    long\
    \ bk = 0;\n    long bl = 0;\n    long bm = 0;\n    long bn = 0;\n    long bo =\
    \ 0;\n    long bp = 0;\n    long bq = 0;\n    long br = 0;\n    long bs = 0;\n\
    \    long bt = 0;\n    long bu = 0;\n    long bv = 0;\n    long bw = 0\nunittest\n\
    {\n    alias candidate = starts_one_ends;\n\n    assert(candidate(1L) == 1L);\n\
    \    assert(candidate(2L) == 18L);\n    assert(candidate(3L) == 180L);\n    assert(candidate(4L)\
    \ == 1800L);\n    assert(candidate(5L) == 18000L);\n}\nvoid main(){}"
  status: SyntaxError
  stderr: 'b''/tmp/tmpy3xel5im.d(81): Error: semicolon expected, not \''unittest\''\n/tmp/tmpy3xel5im.d(81):
    Error: found \''unittest\'' instead of statement\nFailed: ["dmd", "-unittest",
    "-v", "-o-", "/tmp/tmpy3xel5im.d", "-I/tmp"]\n'''
  stdout: b''
  timestamp: 1659798336
- exit_code: 1
  program: "import std.typecons;\nimport std.math;\n/*\n\n    Given a positive integer\
    \ n, return the count of the numbers of n-digit\n    positive integers that start\
    \ or end with 1.\n    \n*/\nlong starts_one_ends(long n) \n{\n    long result\
    \ = 0;\n    long start = 1;\n    long end = 1;\n    long i = 0;\n    long j =\
    \ 0;\n    long k = 0;\n    long l = 0;\n    long m = 0;\n    long n_digits = 0;\n\
    \    long n_digits_end = 0;\n    long n_digits_start = 0;\n    long n_digits_start_end\
    \ = 0;\n    long n_digits_start_end_start = 0;\n    long n_digits_start_end_end\
    \ = 0;\n    long n_digits_start_end_start_end = 0;\n    long n_digits_start_end_start_end_start\
    \ = 0;\n    long n_digits_start_end_start_end_end = 0;\n    long n_digits_start_end_start_end_start_end\
    \ = 0;\n    long n_digits_start_end_start_end_start_end_start = 0;\n    long n_digits_start_end_start_end_start_end_end\
    \ = 0;\n    long n_digits_start_end_start_end_start_end_start_end = 0;\n    long\
    \ n_digits_start_end_start_end_start_end_start_end_start = 0;\n    long n_digits_start_end_start_end_start_end_start_end_end\
    \ = 0;\n    long n_digits_start_end_start_end_start_end_start_end_start_end =\
    \ 0;\n    long n_digits_start_end_start_end_start_end_start_end_start_end_start\
    \ = 0;\n    long n_digits_start_end_start_end_start_end_start_end_start_end_end\
    \ = 0;\n    long n_digits_start_end_start_end_start_end_start_end_start_end_start_end\
    \ = 0;\n    long n_digits_start_end_start_end_start_end_start_end_start_end_start_end_start\
    \ = 0;\nunittest\n{\n    alias candidate = starts_one_ends;\n\n    assert(candidate(1L)\
    \ == 1L);\n    assert(candidate(2L) == 18L);\n    assert(candidate(3L) == 180L);\n\
    \    assert(candidate(4L) == 1800L);\n    assert(candidate(5L) == 18000L);\n}\n\
    void main(){}"
  status: SyntaxError
  stderr: 'b''/tmp/tmpecbrftk8.d(39): Error: found \''unittest\'' instead of statement\nFailed:
    ["dmd", "-unittest", "-v", "-o-", "/tmp/tmpecbrftk8.d", "-I/tmp"]\n'''
  stdout: b''
  timestamp: 1659798336
- exit_code: 1
  program: "import std.typecons;\nimport std.math;\n/*\n\n    Given a positive integer\
    \ n, return the count of the numbers of n-digit\n    positive integers that start\
    \ or end with 1.\n    \n*/\nlong starts_one_ends(long n) \n{\n    if (n == 1)\n\
    \        return 1;\n    else\n        return starts_one_ends(n - 1) + pow(10,\
    \ n - 1);\n}\nunittest\n{\n    alias candidate = starts_one_ends;\n\n    assert(candidate(1L)\
    \ == 1L);\n    assert(candidate(2L) == 18L);\n    assert(candidate(3L) == 180L);\n\
    \    assert(candidate(4L) == 1800L);\n    assert(candidate(5L) == 18000L);\n}\n\
    void main(){}"
  status: SyntaxError
  stderr: 'b''Error: cannot find source code for runtime library file \''object.d\''\n       dmd
    might not be correctly installed. Run \''dmd -man\'' for installation instructions.\nimport
    path[0] = /tmp\nFailed: ["dmd", "-unittest", "-v", "-o-", "/tmp/tmp_1vgw8uq.d",
    "-I/tmp"]\n'''
  stdout: b''
  timestamp: 1659798336
- exit_code: 1
  program: "import std.typecons;\nimport std.math;\n/*\n\n    Given a positive integer\
    \ n, return the count of the numbers of n-digit\n    positive integers that start\
    \ or end with 1.\n    \n*/\nlong starts_one_ends(long n) \n{\n    long count =\
    \ 0;\n    long max = pow(10, n);\n    foreach(i; 1 .. max) {\n        if (i %\
    \ 10 == 1 || i / pow(10, n - 1) == 1) {\n            count++;\n        }\n   \
    \ }\n    return count;\n}\nunittest\n{\n    alias candidate = starts_one_ends;\n\
    \n    assert(candidate(1L) == 1L);\n    assert(candidate(2L) == 18L);\n    assert(candidate(3L)\
    \ == 180L);\n    assert(candidate(4L) == 1800L);\n    assert(candidate(5L) ==\
    \ 18000L);\n}\nvoid main(){}"
  status: SyntaxError
  stderr: 'b''Error: cannot find source code for runtime library file \''object.d\''\n       dmd
    might not be correctly installed. Run \''dmd -man\'' for installation instructions.\nimport
    path[0] = /tmp\nFailed: ["dmd", "-unittest", "-v", "-o-", "/tmp/tmp659zll29.d",
    "-I/tmp"]\n'''
  stdout: b''
  timestamp: 1659798336
- exit_code: 1
  program: "import std.typecons;\nimport std.math;\n/*\n\n    Given a positive integer\
    \ n, return the count of the numbers of n-digit\n    positive integers that start\
    \ or end with 1.\n    \n*/\nlong starts_one_ends(long n) \n{\n    long res = 0;\n\
    \    long start = 1;\n    long end = 1;\n    for (long i = 1; i < n; i++) {\n\
    \        start *= 10;\n        end *= 10;\n    }\n    res += start;\n    res +=\
    \ end;\n    res += (start - 1) * 9;\n    return res;\n}\nunittest\n{\n    alias\
    \ candidate = starts_one_ends;\n\n    assert(candidate(1L) == 1L);\n    assert(candidate(2L)\
    \ == 18L);\n    assert(candidate(3L) == 180L);\n    assert(candidate(4L) == 1800L);\n\
    \    assert(candidate(5L) == 18000L);\n}\nvoid main(){}"
  status: SyntaxError
  stderr: 'b''Error: cannot find source code for runtime library file \''object.d\''\n       dmd
    might not be correctly installed. Run \''dmd -man\'' for installation instructions.\nimport
    path[0] = /tmp\nFailed: ["dmd", "-unittest", "-v", "-o-", "/tmp/tmpd2g1068w.d",
    "-I/tmp"]\n'''
  stdout: b''
  timestamp: 1659798336
- exit_code: 1
  program: "import std.typecons;\nimport std.math;\n/*\n\n    Given a positive integer\
    \ n, return the count of the numbers of n-digit\n    positive integers that start\
    \ or end with 1.\n    \n*/\nlong starts_one_ends(long n) \n{\n    if (n == 1)\n\
    \        return 2;\n    else\n        return pow(10, n-1) + pow(10, n-2);\n}\n\
    unittest\n{\n    alias candidate = starts_one_ends;\n\n    assert(candidate(1L)\
    \ == 1L);\n    assert(candidate(2L) == 18L);\n    assert(candidate(3L) == 180L);\n\
    \    assert(candidate(4L) == 1800L);\n    assert(candidate(5L) == 18000L);\n}\n\
    void main(){}"
  status: SyntaxError
  stderr: 'b''Error: cannot find source code for runtime library file \''object.d\''\n       dmd
    might not be correctly installed. Run \''dmd -man\'' for installation instructions.\nimport
    path[0] = /tmp\nFailed: ["dmd", "-unittest", "-v", "-o-", "/tmp/tmpdupuybj5.d",
    "-I/tmp"]\n'''
  stdout: b''
  timestamp: 1659798336
- exit_code: 1
  program: "import std.typecons;\nimport std.math;\n/*\n\n    Given a positive integer\
    \ n, return the count of the numbers of n-digit\n    positive integers that start\
    \ or end with 1.\n    \n*/\nlong starts_one_ends(long n) \n{\n    if (n == 1)\n\
    \        return 1;\n    else\n        return starts_one_ends(n - 1) + (long)pow(10,\
    \ n - 1);\n}\nunittest\n{\n    alias candidate = starts_one_ends;\n\n    assert(candidate(1L)\
    \ == 1L);\n    assert(candidate(2L) == 18L);\n    assert(candidate(3L) == 180L);\n\
    \    assert(candidate(4L) == 1800L);\n    assert(candidate(5L) == 18000L);\n}\n\
    void main(){}"
  status: SyntaxError
  stderr: 'b''/tmp/tmpnhfth_ti.d(14): Error: C style cast illegal, use cast(long)pow(10,
    n - 1)\nFailed: ["dmd", "-unittest", "-v", "-o-", "/tmp/tmpnhfth_ti.d", "-I/tmp"]\n'''
  stdout: b''
  timestamp: 1659798336
- exit_code: 1
  program: "import std.typecons;\nimport std.math;\n/*\n\n    Given a positive integer\
    \ n, return the count of the numbers of n-digit\n    positive integers that start\
    \ or end with 1.\n    \n*/\nlong starts_one_ends(long n) \n{\n    long result\
    \ = 0;\n    long i = 0;\n    long j = 0;\n    long k = 0;\n    long l = 0;\n \
    \   long m = 0;\n    long o = 0;\n    long p = 0;\n    long q = 0;\n    long r\
    \ = 0;\n    long s = 0;\n    long t = 0;\n    long u = 0;\n    long v = 0;\n \
    \   long w = 0;\n    long x = 0;\n    long y = 0;\n    long z = 0;\n    long aa\
    \ = 0;\n    long ab = 0;\n    long ac = 0;\n    long ad = 0;\n    long ae = 0;\n\
    \    long af = 0;\n    long ag = 0;\n    long ah = 0;\n    long ai = 0;\n    long\
    \ aj = 0;\n    long ak = 0;\n    long al = 0;\n    long am = 0;\n    long an =\
    \ 0;\n    long ao = 0;\n    long ap = 0;\n    long aq = 0;\n    long ar = 0;\n\
    \    long as = 0;\n    long at = 0;\n    long au = 0;\n    long av = 0;\n    long\
    \ aw = 0;\n    long ax = 0;\n    long ay = 0;\n    long az = 0;\n    long ba =\
    \ 0;\n    long bb = 0;\n    long bc = 0;\n    long bd = 0;\n    long be = 0;\n\
    \    long bf = 0;\n    long bg = 0;\n    long bh = 0;\n    long bi = 0;\n    long\
    \ bj = 0;\n    long bk = 0;\n    long bl = 0;\n    long bm = 0;\n    long bn =\
    \ 0;\n    long bo = 0;\n    long bp = 0;\n    long bq = 0;\n    long br = 0;\n\
    \    long bs = 0;\n    long bt = 0;\n    long bu = 0;\n    long bv = 0;\n    long\
    \ bw = 0;\n    long bx = 0;\n    long by = 0;\n    long bz\nunittest\n{\n    alias\
    \ candidate = starts_one_ends;\n\n    assert(candidate(1L) == 1L);\n    assert(candidate(2L)\
    \ == 18L);\n    assert(candidate(3L) == 180L);\n    assert(candidate(4L) == 1800L);\n\
    \    assert(candidate(5L) == 18000L);\n}\nvoid main(){}"
  status: SyntaxError
  stderr: 'b''/tmp/tmp62klqdso.d(81): Error: semicolon expected, not \''unittest\''\n/tmp/tmp62klqdso.d(81):
    Error: found \''unittest\'' instead of statement\nFailed: ["dmd", "-unittest",
    "-v", "-o-", "/tmp/tmp62klqdso.d", "-I/tmp"]\n'''
  stdout: b''
  timestamp: 1659798336
- exit_code: 1
  program: "import std.typecons;\nimport std.math;\n/*\n\n    Given a positive integer\
    \ n, return the count of the numbers of n-digit\n    positive integers that start\
    \ or end with 1.\n    \n*/\nlong starts_one_ends(long n) \n{\n    if (n == 1)\n\
    \        return 2;\n    else\n        return (starts_one_ends(n - 1) + pow(10,\
    \ n - 1));\n}\nunittest\n{\n    alias candidate = starts_one_ends;\n\n    assert(candidate(1L)\
    \ == 1L);\n    assert(candidate(2L) == 18L);\n    assert(candidate(3L) == 180L);\n\
    \    assert(candidate(4L) == 1800L);\n    assert(candidate(5L) == 18000L);\n}\n\
    void main(){}"
  status: SyntaxError
  stderr: 'b''Error: cannot find source code for runtime library file \''object.d\''\n       dmd
    might not be correctly installed. Run \''dmd -man\'' for installation instructions.\nimport
    path[0] = /tmp\nFailed: ["dmd", "-unittest", "-v", "-o-", "/tmp/tmp1y86oy4h.d",
    "-I/tmp"]\n'''
  stdout: b''
  timestamp: 1659798336
- exit_code: 1
  program: "import std.typecons;\nimport std.math;\n/*\n\n    Given a positive integer\
    \ n, return the count of the numbers of n-digit\n    positive integers that start\
    \ or end with 1.\n    \n*/\nlong starts_one_ends(long n) \n{\n    if (n == 1)\n\
    \        return 2;\n    else\n        return (long)pow(10, n - 1) + 9 * (n - 1)\
    \ * (long)pow(10, n - 2);\n}\nunittest\n{\n    alias candidate = starts_one_ends;\n\
    \n    assert(candidate(1L) == 1L);\n    assert(candidate(2L) == 18L);\n    assert(candidate(3L)\
    \ == 180L);\n    assert(candidate(4L) == 1800L);\n    assert(candidate(5L) ==\
    \ 18000L);\n}\nvoid main(){}"
  status: SyntaxError
  stderr: 'b''/tmp/tmp6e11ss1r.d(14): Error: C style cast illegal, use cast(long)pow(10,
    n - 1)\n/tmp/tmp6e11ss1r.d(14): Error: C style cast illegal, use cast(long)pow(10,
    n - 2)\nFailed: ["dmd", "-unittest", "-v", "-o-", "/tmp/tmp6e11ss1r.d", "-I/tmp"]\n'''
  stdout: b''
  timestamp: 1659798336
- exit_code: 1
  program: "import std.typecons;\nimport std.math;\n/*\n\n    Given a positive integer\
    \ n, return the count of the numbers of n-digit\n    positive integers that start\
    \ or end with 1.\n    \n*/\nlong starts_one_ends(long n) \n{\n    long result\
    \ = 0;\n    long start = 1;\n    long end = 1;\n    for (long i = 1; i < n; i++)\
    \ {\n        start *= 10;\n        end *= 10;\n    }\n    for (long i = start;\
    \ i < end; i++) {\n        if (i % 10 == 1 || i / start == 1) {\n            result++;\n\
    \        }\n    }\n    return result;\n}\nunittest\n{\n    alias candidate = starts_one_ends;\n\
    \n    assert(candidate(1L) == 1L);\n    assert(candidate(2L) == 18L);\n    assert(candidate(3L)\
    \ == 180L);\n    assert(candidate(4L) == 1800L);\n    assert(candidate(5L) ==\
    \ 18000L);\n}\nvoid main(){}"
  status: SyntaxError
  stderr: 'b''Error: cannot find source code for runtime library file \''object.d\''\n       dmd
    might not be correctly installed. Run \''dmd -man\'' for installation instructions.\nimport
    path[0] = /tmp\nFailed: ["dmd", "-unittest", "-v", "-o-", "/tmp/tmp7s5eopse.d",
    "-I/tmp"]\n'''
  stdout: b''
  timestamp: 1659798336
- exit_code: 1
  program: "import std.typecons;\nimport std.math;\n/*\n\n    Given a positive integer\
    \ n, return the count of the numbers of n-digit\n    positive integers that start\
    \ or end with 1.\n    \n*/\nlong starts_one_ends(long n) \n{\n    long result\
    \ = 0;\n    long max = pow(10, n);\n    long min = pow(10, n - 1);\n    foreach(i;\
    \ min .. max)\n    {\n        string s = to!string(i);\n        if(s[0] == '1'\
    \ || s[$ - 1] == '1')\n            result++;\n    }\n    return result;\n}\nunittest\n\
    {\n    alias candidate = starts_one_ends;\n\n    assert(candidate(1L) == 1L);\n\
    \    assert(candidate(2L) == 18L);\n    assert(candidate(3L) == 180L);\n    assert(candidate(4L)\
    \ == 1800L);\n    assert(candidate(5L) == 18000L);\n}\nvoid main(){}"
  status: SyntaxError
  stderr: 'b''Error: cannot find source code for runtime library file \''object.d\''\n       dmd
    might not be correctly installed. Run \''dmd -man\'' for installation instructions.\nimport
    path[0] = /tmp\nFailed: ["dmd", "-unittest", "-v", "-o-", "/tmp/tmpv059r3w2.d",
    "-I/tmp"]\n'''
  stdout: b''
  timestamp: 1659798336
- exit_code: 1
  program: "import std.typecons;\nimport std.math;\n/*\n\n    Given a positive integer\
    \ n, return the count of the numbers of n-digit\n    positive integers that start\
    \ or end with 1.\n    \n*/\nlong starts_one_ends(long n) \n{\n    long count =\
    \ 0;\n    long start = 1;\n    long end = 1;\n    for (long i = 0; i < n; i++)\
    \ {\n        start *= 10;\n        end *= 10;\n    }\n    for (long i = start;\
    \ i < end; i++) {\n        if (i % 10 == 1 || i / 10 == 1) {\n            count++;\n\
    \        }\n    }\n    return count;\n}\nunittest\n{\n    alias candidate = starts_one_ends;\n\
    \n    assert(candidate(1L) == 1L);\n    assert(candidate(2L) == 18L);\n    assert(candidate(3L)\
    \ == 180L);\n    assert(candidate(4L) == 1800L);\n    assert(candidate(5L) ==\
    \ 18000L);\n}\nvoid main(){}"
  status: Exception
  stderr: 'b''core.exception.AssertError@/tmp/tmpft0ivixh.d(29): unittest failure\n----------------\n??:?
    _d_unittestp [0x427ddd]\n??:? void tmpft0ivixh.__unittest_L25_C1() [0x427ac0]\n??:?
    void tmpft0ivixh.__modtest() [0x427b60]\n??:? int core.runtime.runModuleUnitTests().__foreachbody2(object.ModuleInfo*)
    [0x42bb03]\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)).__lambda2(immutable(object.ModuleInfo*))
    [0x42a996]\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))).__foreachbody2(ref
    rt.sections_elf_shared.DSO) [0x42fb29]\n??:? int rt.sections_elf_shared.DSO.opApply(scope
    int delegate(ref rt.sections_elf_shared.DSO)) [0x42ffd8]\n??:? int rt.minfo.moduleinfos_apply(scope
    int delegate(immutable(object.ModuleInfo*))) [0x42fab5]\n??:? int object.ModuleInfo.opApply(scope
    int delegate(object.ModuleInfo*)) [0x42a96d]\n??:? runModuleUnitTests [0x42b8d9]\n??:?
    void rt.dmain2._d_run_main(int, char**, extern (C) int function(char[][])*).runAll()
    [0x42822c]\n??:? void rt.dmain2._d_run_main(int, char**, extern (C) int function(char[][])*).tryExec(scope
    void delegate()) [0x4281b3]\n??:? _d_run_main [0x42811e]\n??:? main [0x427b73]\n??:?
    __libc_start_main [0x480a554]\n1/1 unittests FAILED\n'''
  stdout: b''
- exit_code: 1
  program: "import std.typecons;\nimport std.math;\n/*\n\n    Given a positive integer\
    \ n, return the count of the numbers of n-digit\n    positive integers that start\
    \ or end with 1.\n    \n*/\nlong starts_one_ends(long n) \n{\n    long count =\
    \ 0;\n    long start = 1;\n    long end = 1;\n    for (long i = 1; i < n; i++)\
    \ {\n        start *= 10;\n        end *= 10;\n    }\n    end += 1;\n    for (long\
    \ i = start; i < end; i++) {\n        if (i % 10 == 1) {\n            count++;\n\
    \        }\n    }\n    return count;\n}\nunittest\n{\n    alias candidate = starts_one_ends;\n\
    \n    assert(candidate(1L) == 1L);\n    assert(candidate(2L) == 18L);\n    assert(candidate(3L)\
    \ == 180L);\n    assert(candidate(4L) == 1800L);\n    assert(candidate(5L) ==\
    \ 18000L);\n}\nvoid main(){}"
  status: Exception
  stderr: 'b''core.exception.AssertError@/tmp/tmptv08mptd.d(31): unittest failure\n----------------\n??:?
    _d_unittestp [0x427dd5]\n??:? void tmptv08mptd.__unittest_L26_C1() [0x427ad5]\n??:?
    void tmptv08mptd.__modtest() [0x427b54]\n??:? int core.runtime.runModuleUnitTests().__foreachbody2(object.ModuleInfo*)
    [0x42bafb]\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)).__lambda2(immutable(object.ModuleInfo*))
    [0x42a98e]\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))).__foreachbody2(ref
    rt.sections_elf_shared.DSO) [0x42fb21]\n??:? int rt.sections_elf_shared.DSO.opApply(scope
    int delegate(ref rt.sections_elf_shared.DSO)) [0x42ffd0]\n??:? int rt.minfo.moduleinfos_apply(scope
    int delegate(immutable(object.ModuleInfo*))) [0x42faad]\n??:? int object.ModuleInfo.opApply(scope
    int delegate(object.ModuleInfo*)) [0x42a965]\n??:? runModuleUnitTests [0x42b8d1]\n??:?
    void rt.dmain2._d_run_main(int, char**, extern (C) int function(char[][])*).runAll()
    [0x428224]\n??:? void rt.dmain2._d_run_main(int, char**, extern (C) int function(char[][])*).tryExec(scope
    void delegate()) [0x4281ab]\n??:? _d_run_main [0x428116]\n??:? main [0x427b67]\n??:?
    __libc_start_main [0xa811a554]\n1/1 unittests FAILED\n'''
  stdout: b''
- exit_code: 1
  program: "import std.typecons;\nimport std.math;\n/*\n\n    Given a positive integer\
    \ n, return the count of the numbers of n-digit\n    positive integers that start\
    \ or end with 1.\n    \n*/\nlong starts_one_ends(long n) \n{\n    long result\
    \ = 0;\n    long i = 0;\n    long j = 0;\n    long k = 0;\n    long l = 0;\n \
    \   long m = 0;\n    long n_digits = 0;\n    long start = 0;\n    long end = 0;\n\
    \    long start_end = 0;\n    long start_start = 0;\n    long end_end = 0;\n \
    \   long end_start = 0;\n    long start_end_start = 0;\n    long start_start_end\
    \ = 0;\n    long end_end_start = 0;\n    long end_start_end = 0;\n    long start_end_start_end\
    \ = 0;\n    long start_start_end_end = 0;\n    long end_end_start_end = 0;\n \
    \   long end_start_end_end = 0;\n    long start_end_start_end_end = 0;\n    long\
    \ start_start_end_end_end = 0;\n    long end_end_start_end_end = 0;\n    long\
    \ end_start_end_end_end = 0;\n    long start_end_start_end_end_end = 0;\n    long\
    \ start_start_end_end_end_end = 0;\n    long end_end_start_end_end_end = 0;\n\
    \    long end_start_end_end_end_end = 0;\n    long start_end_start_end_end_end_end\
    \ = 0;\n    long start_start_end_end_end_end_end = 0;\n    long end_end_start_end_end_end_end\
    \ = 0;\n    long end_start_end_end_end_end_end = 0;\n    long start_end_start_end_end_end_end_end\
    \ = 0;\n    long start_start_end_end_end_end_end_end = 0;\n    long end_end_start_end_end_end_end_end\
    \ = 0;\n    long end_start_end_end_end_end_end_end = 0;\n    long start_end_start_end_end_end_end_end_end\
    \ = 0;\n\nunittest\n{\n    alias candidate = starts_one_ends;\n\n    assert(candidate(1L)\
    \ == 1L);\n    assert(candidate(2L) == 18L);\n    assert(candidate(3L) == 180L);\n\
    \    assert(candidate(4L) == 1800L);\n    assert(candidate(5L) == 18000L);\n}\n\
    void main(){}"
  status: SyntaxError
  stderr: 'b''/tmp/tmpo7jn3tq4.d(50): Error: found \''unittest\'' instead of statement\nFailed:
    ["dmd", "-unittest", "-v", "-o-", "/tmp/tmpo7jn3tq4.d", "-I/tmp"]\n'''
  stdout: b''
  timestamp: 1659798336
- exit_code: 1
  program: "import std.typecons;\nimport std.math;\n/*\n\n    Given a positive integer\
    \ n, return the count of the numbers of n-digit\n    positive integers that start\
    \ or end with 1.\n    \n*/\nlong starts_one_ends(long n) \n{\n    long count =\
    \ 0;\n    long start = 1;\n    long end = 1;\n    for (long i = 0; i < n; i++)\
    \ {\n        start *= 10;\n        end *= 10;\n    }\n    end += 1;\n    for (long\
    \ i = start; i < end; i++) {\n        if (i % 10 == 1 || i / 10 == 1) {\n    \
    \        count++;\n        }\n    }\n    return count;\n}\nunittest\n{\n    alias\
    \ candidate = starts_one_ends;\n\n    assert(candidate(1L) == 1L);\n    assert(candidate(2L)\
    \ == 18L);\n    assert(candidate(3L) == 180L);\n    assert(candidate(4L) == 1800L);\n\
    \    assert(candidate(5L) == 18000L);\n}\nvoid main(){}"
  status: SyntaxError
  stderr: 'b''Error: cannot find source code for runtime library file \''object.d\''\n       dmd
    might not be correctly installed. Run \''dmd -man\'' for installation instructions.\nimport
    path[0] = /tmp\nFailed: ["dmd", "-unittest", "-v", "-o-", "/tmp/tmpfdtpxbix.d",
    "-I/tmp"]\n'''
  stdout: b''
  timestamp: 1659798336
- exit_code: 1
  program: "import std.typecons;\nimport std.math;\n/*\n\n    Given a positive integer\
    \ n, return the count of the numbers of n-digit\n    positive integers that start\
    \ or end with 1.\n    \n*/\nlong starts_one_ends(long n) \n{\n    long result\
    \ = 0;\n    long start = 1;\n    long end = 1;\n    for (long i = 1; i <= n; i++)\
    \ {\n        start *= 10;\n        end *= 10;\n    }\n    start /= 10;\n    end\
    \ -= 1;\n    result = end - start + 1;\n    return result;\n}\nunittest\n{\n \
    \   alias candidate = starts_one_ends;\n\n    assert(candidate(1L) == 1L);\n \
    \   assert(candidate(2L) == 18L);\n    assert(candidate(3L) == 180L);\n    assert(candidate(4L)\
    \ == 1800L);\n    assert(candidate(5L) == 18000L);\n}\nvoid main(){}"
  status: SyntaxError
  stderr: 'b''Error: cannot find source code for runtime library file \''object.d\''\n       dmd
    might not be correctly installed. Run \''dmd -man\'' for installation instructions.\nimport
    path[0] = /tmp\nFailed: ["dmd", "-unittest", "-v", "-o-", "/tmp/tmpv4xewqi4.d",
    "-I/tmp"]\n'''
  stdout: b''
  timestamp: 1659798336
- exit_code: 1
  program: "import std.typecons;\nimport std.math;\n/*\n\n    Given a positive integer\
    \ n, return the count of the numbers of n-digit\n    positive integers that start\
    \ or end with 1.\n    \n*/\nlong starts_one_ends(long n) \n{\n    long result\
    \ = 0;\n    long start = 1;\n    long end = 1;\n    foreach(i; 1..n) {\n     \
    \   start *= 10;\n        end *= 10;\n    }\n    start /= 10;\n    end -= 1;\n\
    \    result = end - start + 1;\n    return result;\n}\nunittest\n{\n    alias\
    \ candidate = starts_one_ends;\n\n    assert(candidate(1L) == 1L);\n    assert(candidate(2L)\
    \ == 18L);\n    assert(candidate(3L) == 180L);\n    assert(candidate(4L) == 1800L);\n\
    \    assert(candidate(5L) == 18000L);\n}\nvoid main(){}"
  status: SyntaxError
  stderr: 'b''Error: cannot find source code for runtime library file \''object.d\''\n       dmd
    might not be correctly installed. Run \''dmd -man\'' for installation instructions.\nimport
    path[0] = /tmp\nFailed: ["dmd", "-unittest", "-v", "-o-", "/tmp/tmpdt92dacv.d",
    "-I/tmp"]\n'''
  stdout: b''
  timestamp: 1659798336
- exit_code: 1
  program: "import std.typecons;\nimport std.math;\n/*\n\n    Given a positive integer\
    \ n, return the count of the numbers of n-digit\n    positive integers that start\
    \ or end with 1.\n    \n*/\nlong starts_one_ends(long n) \n{\n    long result\
    \ = 0;\n    long max = pow(10, n);\n    long min = pow(10, n - 1);\n    foreach(i;\
    \ min .. max)\n    {\n        if(i % 10 == 1 || i / 10 == 1)\n        {\n    \
    \        result++;\n        }\n    }\n    return result;\n}\nunittest\n{\n   \
    \ alias candidate = starts_one_ends;\n\n    assert(candidate(1L) == 1L);\n   \
    \ assert(candidate(2L) == 18L);\n    assert(candidate(3L) == 180L);\n    assert(candidate(4L)\
    \ == 1800L);\n    assert(candidate(5L) == 18000L);\n}\nvoid main(){}"
  status: SyntaxError
  stderr: 'b''Error: cannot find source code for runtime library file \''object.d\''\n       dmd
    might not be correctly installed. Run \''dmd -man\'' for installation instructions.\nimport
    path[0] = /tmp\nFailed: ["dmd", "-unittest", "-v", "-o-", "/tmp/tmp10z_mkte.d",
    "-I/tmp"]\n'''
  stdout: b''
  timestamp: 1659798336
- exit_code: 1
  program: "import std.typecons;\nimport std.math;\n/*\n\n    Given a positive integer\
    \ n, return the count of the numbers of n-digit\n    positive integers that start\
    \ or end with 1.\n    \n*/\nlong starts_one_ends(long n) \n{\n    long result\
    \ = 0;\n    long start = 1;\n    long end = 1;\n    long i = 0;\n    while (i\
    \ < n) {\n        start *= 10;\n        end *= 10;\n        result += start;\n\
    \        ++i;\n    }\n    return result + end;\n}\nunittest\n{\n    alias candidate\
    \ = starts_one_ends;\n\n    assert(candidate(1L) == 1L);\n    assert(candidate(2L)\
    \ == 18L);\n    assert(candidate(3L) == 180L);\n    assert(candidate(4L) == 1800L);\n\
    \    assert(candidate(5L) == 18000L);\n}\nvoid main(){}"
  status: SyntaxError
  stderr: 'b''Error: cannot find source code for runtime library file \''object.d\''\n       dmd
    might not be correctly installed. Run \''dmd -man\'' for installation instructions.\nimport
    path[0] = /tmp\nFailed: ["dmd", "-unittest", "-v", "-o-", "/tmp/tmphnykw2mg.d",
    "-I/tmp"]\n'''
  stdout: b''
  timestamp: 1659798336
- exit_code: 1
  program: "import std.typecons;\nimport std.math;\n/*\n\n    Given a positive integer\
    \ n, return the count of the numbers of n-digit\n    positive integers that start\
    \ or end with 1.\n    \n*/\nlong starts_one_ends(long n) \n{\n    if (n == 1)\n\
    \        return 1;\n    else\n        return starts_one_ends(n - 1) + (long)pow(10,\
    \ n - 1);\n}\nunittest\n{\n    alias candidate = starts_one_ends;\n\n    assert(candidate(1L)\
    \ == 1L);\n    assert(candidate(2L) == 18L);\n    assert(candidate(3L) == 180L);\n\
    \    assert(candidate(4L) == 1800L);\n    assert(candidate(5L) == 18000L);\n}\n\
    void main(){}"
  status: SyntaxError
  stderr: 'b''/tmp/tmpnhfth_ti.d(14): Error: C style cast illegal, use cast(long)pow(10,
    n - 1)\nFailed: ["dmd", "-unittest", "-v", "-o-", "/tmp/tmpnhfth_ti.d", "-I/tmp"]\n'''
  stdout: b''
  timestamp: 1659798336
- exit_code: 1
  program: "import std.typecons;\nimport std.math;\n/*\n\n    Given a positive integer\
    \ n, return the count of the numbers of n-digit\n    positive integers that start\
    \ or end with 1.\n    \n*/\nlong starts_one_ends(long n) \n{\n    long count =\
    \ 0;\n    long start = 1;\n    long end = 1;\n    long i = 0;\n    long j = 0;\n\
    \    long k = 0;\n    long l = 0;\n    long m = 0;\n    long o = 0;\n    long\
    \ p = 0;\n    long q = 0;\n    long r = 0;\n    long s = 0;\n    long t = 0;\n\
    \    long u = 0;\n    long v = 0;\n    long w = 0;\n    long x = 0;\n    long\
    \ y = 0;\n    long z = 0;\n    long aa = 0;\n    long ab = 0;\n    long ac = 0;\n\
    \    long ad = 0;\n    long ae = 0;\n    long af = 0;\n    long ag = 0;\n    long\
    \ ah = 0;\n    long ai = 0;\n    long aj = 0;\n    long ak = 0;\n    long al =\
    \ 0;\n    long am = 0;\n    long an = 0;\n    long ao = 0;\n    long ap = 0;\n\
    \    long aq = 0;\n    long ar = 0;\n    long as = 0;\n    long at = 0;\n    long\
    \ au = 0;\n    long av = 0;\n    long aw = 0;\n    long ax = 0;\n    long ay =\
    \ 0;\n    long az = 0;\n    long ba = 0;\n    long bb = 0;\n    long bc = 0;\n\
    \    long bd = 0;\n    long be = 0;\n    long bf = 0;\n    long bg = 0;\n    long\
    \ bh = 0;\n    long bi = 0;\n    long bj = 0;\n    long bk = 0;\n    long bl =\
    \ 0;\n    long bm = 0;\n    long bn = 0;\n    long bo = 0;\n    long bp = 0;\n\
    \    long bq = 0;\n    long br = 0;\n    long bs = 0;\n    long bt = 0;\n    long\
    \ bu = 0;\n    long bv = 0;\n    long bw = 0;\n    long bx =\nunittest\n{\n  \
    \  alias candidate = starts_one_ends;\n\n    assert(candidate(1L) == 1L);\n  \
    \  assert(candidate(2L) == 18L);\n    assert(candidate(3L) == 180L);\n    assert(candidate(4L)\
    \ == 1800L);\n    assert(candidate(5L) == 18000L);\n}\nvoid main(){}"
  status: SyntaxError
  stderr: 'b''/tmp/tmplpupxup3.d(81): Error: expression expected, not `unittest`\n/tmp/tmplpupxup3.d(82):
    Error: semicolon expected, not `{`\n/tmp/tmplpupxup3.d(91): Error: found `End
    of File` when expecting `}` following compound statement\nFailed: ["dmd", "-unittest",
    "-v", "-o-", "/tmp/tmplpupxup3.d", "-I/tmp"]\n'''
  stdout: b''
- exit_code: 1
  program: "import std.typecons;\nimport std.math;\n/*\n\n    Given a positive integer\
    \ n, return the count of the numbers of n-digit\n    positive integers that start\
    \ or end with 1.\n    \n*/\nlong starts_one_ends(long n) \n{\n    long result\
    \ = 0;\n    long max = pow(10, n);\n    foreach(i; 1 .. max)\n    {\n        if(i\
    \ % 10 == 1)\n            result++;\n        if(i / 10 == 1)\n            result++;\n\
    \    }\n    return result;\n}\nunittest\n{\n    alias candidate = starts_one_ends;\n\
    \n    assert(candidate(1L) == 1L);\n    assert(candidate(2L) == 18L);\n    assert(candidate(3L)\
    \ == 180L);\n    assert(candidate(4L) == 1800L);\n    assert(candidate(5L) ==\
    \ 18000L);\n}\nvoid main(){}"
  status: SyntaxError
  stderr: 'b''Error: cannot find source code for runtime library file \''object.d\''\n       dmd
    might not be correctly installed. Run \''dmd -man\'' for installation instructions.\nimport
    path[0] = /tmp\nFailed: ["dmd", "-unittest", "-v", "-o-", "/tmp/tmpedv28sfi.d",
    "-I/tmp"]\n'''
  stdout: b''
  timestamp: 1659798336
- exit_code: 1
  program: "import std.typecons;\nimport std.math;\n/*\n\n    Given a positive integer\
    \ n, return the count of the numbers of n-digit\n    positive integers that start\
    \ or end with 1.\n    \n*/\nlong starts_one_ends(long n) \n{\n    long count =\
    \ 0;\n    long max = pow(10, n);\n    long min = pow(10, n - 1);\n    foreach(i;\
    \ min .. max) {\n        if (i % 10 == 1 || i / 10 == 1) {\n            count++;\n\
    \        }\n    }\n    return count;\n}\nunittest\n{\n    alias candidate = starts_one_ends;\n\
    \n    assert(candidate(1L) == 1L);\n    assert(candidate(2L) == 18L);\n    assert(candidate(3L)\
    \ == 180L);\n    assert(candidate(4L) == 1800L);\n    assert(candidate(5L) ==\
    \ 18000L);\n}\nvoid main(){}"
  status: SyntaxError
  stderr: 'b''Error: cannot find source code for runtime library file \''object.d\''\n       dmd
    might not be correctly installed. Run \''dmd -man\'' for installation instructions.\nimport
    path[0] = /tmp\nFailed: ["dmd", "-unittest", "-v", "-o-", "/tmp/tmpow89cdjd.d",
    "-I/tmp"]\n'''
  stdout: b''
  timestamp: 1659798336
- exit_code: 1
  program: "import std.typecons;\nimport std.math;\n/*\n\n    Given a positive integer\
    \ n, return the count of the numbers of n-digit\n    positive integers that start\
    \ or end with 1.\n    \n*/\nlong starts_one_ends(long n) \n{\n    long count =\
    \ 0;\n    long start = 1;\n    long end = 10;\n    long i = 0;\n    long j = 0;\n\
    \    long k = 0;\n    long l = 0;\n    long m = 0;\n    long p = 0;\n    long\
    \ q = 0;\n    long r = 0;\n    long s = 0;\n    long t = 0;\n    long u = 0;\n\
    \    long v = 0;\n    long w = 0;\n    long x = 0;\n    long y = 0;\n    long\
    \ z = 0;\n    long a = 0;\n    long b = 0;\n    long c = 0;\n    long d = 0;\n\
    \    long e = 0;\n    long f = 0;\n    long g = 0;\n    long h = 0;\n    long\
    \ ii = 0;\n    long jj = 0;\n    long kk = 0;\n    long ll = 0;\n    long mm =\
    \ 0;\n    long pp = 0;\n    long qq = 0;\n    long rr = 0;\n    long ss = 0;\n\
    \    long tt = 0;\n    long uu = 0;\n    long vv = 0;\n    long ww = 0;\n    long\
    \ xx = 0;\n    long yy = 0;\n    long zz = 0;\n    long aa = 0;\n    long bb =\
    \ 0;\n    long cc = 0;\n    long dd = 0;\n    long ee = 0;\n    long ff = 0;\n\
    \    long gg = 0;\n    long hh = 0;\n    long iii = 0;\n    long jjj = 0;\n  \
    \  long kkk = 0;\n    long lll = 0;\n    long mmm = 0;\n    long ppp = 0;\n  \
    \  long qqq = 0;\n    long rrr = 0;\n    long sss = 0;\n    long ttt = 0;\n  \
    \  long uuu = 0;\n    long vvv = 0;\n    long www = 0;\n    long xxx = 0;\n  \
    \  long yyy = 0;\n    long zzz = 0;\n    long aaa = 0;\n    long b\nunittest\n\
    {\n    alias candidate = starts_one_ends;\n\n    assert(candidate(1L) == 1L);\n\
    \    assert(candidate(2L) == 18L);\n    assert(candidate(3L) == 180L);\n    assert(candidate(4L)\
    \ == 1800L);\n    assert(candidate(5L) == 18000L);\n}\nvoid main(){}"
  status: SyntaxError
  stderr: 'b''/tmp/tmpmiqq1b36.d(80): Error: semicolon expected, not \''unittest\''\n/tmp/tmpmiqq1b36.d(80):
    Error: found \''unittest\'' instead of statement\nFailed: ["dmd", "-unittest",
    "-v", "-o-", "/tmp/tmpmiqq1b36.d", "-I/tmp"]\n'''
  stdout: b''
  timestamp: 1659798336
- exit_code: 1
  program: "import std.typecons;\nimport std.math;\n/*\n\n    Given a positive integer\
    \ n, return the count of the numbers of n-digit\n    positive integers that start\
    \ or end with 1.\n    \n*/\nlong starts_one_ends(long n) \n{\n    long result\
    \ = 0;\n    long i = 0;\n    long j = 0;\n    long k = 0;\n    long l = 0;\n \
    \   long m = 0;\n    long n = 0;\n    long o = 0;\n    long p = 0;\n    long q\
    \ = 0;\n    long r = 0;\n    long s = 0;\n    long t = 0;\n    long u = 0;\n \
    \   long v = 0;\n    long w = 0;\n    long x = 0;\n    long y = 0;\n    long z\
    \ = 0;\n    long aa = 0;\n    long ab = 0;\n    long ac = 0;\n    long ad = 0;\n\
    \    long ae = 0;\n    long af = 0;\n    long ag = 0;\n    long ah = 0;\n    long\
    \ ai = 0;\n    long aj = 0;\n    long ak = 0;\n    long al = 0;\n    long am =\
    \ 0;\n    long an = 0;\n    long ao = 0;\n    long ap = 0;\n    long aq = 0;\n\
    \    long ar = 0;\n    long as = 0;\n    long at = 0;\n    long au = 0;\n    long\
    \ av = 0;\n    long aw = 0;\n    long ax = 0;\n    long ay = 0;\n    long az =\
    \ 0;\n    long ba = 0;\n    long bb = 0;\n    long bc = 0;\n    long bd = 0;\n\
    \    long be = 0;\n    long bf = 0;\n    long bg = 0;\n    long bh = 0;\n    long\
    \ bi = 0;\n    long bj = 0;\n    long bk = 0;\n    long bl = 0;\n    long bm =\
    \ 0;\n    long bn = 0;\n    long bo = 0;\n    long bp = 0;\n    long bq = 0;\n\
    \    long br = 0;\n    long bs = 0;\n    long bt = 0;\n    long bu = 0;\n    long\
    \ bv = 0;\n    long bw = 0;\n    long bx = 0;\n    long by =\nunittest\n{\n  \
    \  alias candidate = starts_one_ends;\n\n    assert(candidate(1L) == 1L);\n  \
    \  assert(candidate(2L) == 18L);\n    assert(candidate(3L) == 180L);\n    assert(candidate(4L)\
    \ == 1800L);\n    assert(candidate(5L) == 18000L);\n}\nvoid main(){}"
  status: SyntaxError
  stderr: 'b''/tmp/tmp0y2rqg2x.d(81): Error: expression expected, not \''unittest\''\n/tmp/tmp0y2rqg2x.d(82):
    Error: semicolon expected, not \''{\''\n/tmp/tmp0y2rqg2x.d(91): Error: found \''EOF\''
    when expecting \''}\'' following compound statement\nFailed: ["dmd", "-unittest",
    "-v", "-o-", "/tmp/tmp0y2rqg2x.d", "-I/tmp"]\n'''
  stdout: b''
  timestamp: 1659798336
- exit_code: 1
  program: "import std.typecons;\nimport std.math;\n/*\n\n    Given a positive integer\
    \ n, return the count of the numbers of n-digit\n    positive integers that start\
    \ or end with 1.\n    \n*/\nlong starts_one_ends(long n) \n{\n    long result\
    \ = 0;\n    long max = pow(10, n);\n    for (long i = 1; i < max; i++) \n    {\n\
    \        if (i % 10 == 1) \n        {\n            result++;\n        }\n    \
    \    if (i / 10 == 1) \n        {\n            result++;\n        }\n    }\n \
    \   return result;\n}\nunittest\n{\n    alias candidate = starts_one_ends;\n\n\
    \    assert(candidate(1L) == 1L);\n    assert(candidate(2L) == 18L);\n    assert(candidate(3L)\
    \ == 180L);\n    assert(candidate(4L) == 1800L);\n    assert(candidate(5L) ==\
    \ 18000L);\n}\nvoid main(){}"
  status: Exception
  stderr: 'b''core.exception.AssertError@/tmp/tmpcs61260v.d(31): unittest failure\n----------------\n??:?
    _d_unittestp [0x427ea5]\n??:? void tmpcs61260v.__unittest_L26_C1() [0x427af1]\n??:?
    void tmpcs61260v.__modtest() [0x427c28]\n??:? int core.runtime.runModuleUnitTests().__foreachbody2(object.ModuleInfo*)
    [0x42bbcb]\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)).__lambda2(immutable(object.ModuleInfo*))
    [0x42aa5e]\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))).__foreachbody2(ref
    rt.sections_elf_shared.DSO) [0x42fbf1]\n??:? int rt.sections_elf_shared.DSO.opApply(scope
    int delegate(ref rt.sections_elf_shared.DSO)) [0x4300a0]\n??:? int rt.minfo.moduleinfos_apply(scope
    int delegate(immutable(object.ModuleInfo*))) [0x42fb7d]\n??:? int object.ModuleInfo.opApply(scope
    int delegate(object.ModuleInfo*)) [0x42aa35]\n??:? runModuleUnitTests [0x42b9a1]\n??:?
    void rt.dmain2._d_run_main(int, char**, extern (C) int function(char[][])*).runAll()
    [0x4282f4]\n??:? void rt.dmain2._d_run_main(int, char**, extern (C) int function(char[][])*).tryExec(scope
    void delegate()) [0x42827b]\n??:? _d_run_main [0x4281e6]\n??:? main [0x427c3b]\n??:?
    __libc_start_main [0x58c9554]\n1/1 unittests FAILED\n'''
  stdout: b''
- exit_code: 1
  program: "import std.typecons;\nimport std.math;\n/*\n\n    Given a positive integer\
    \ n, return the count of the numbers of n-digit\n    positive integers that start\
    \ or end with 1.\n    \n*/\nlong starts_one_ends(long n) \n{\n    long result\
    \ = 0;\n    long max_num = pow(10, n);\n    foreach(i; 1 .. max_num)\n    {\n\
    \        if(i % 10 == 1 || i / 10 == 1)\n            result++;\n    }\n    return\
    \ result;\n}\nunittest\n{\n    alias candidate = starts_one_ends;\n\n    assert(candidate(1L)\
    \ == 1L);\n    assert(candidate(2L) == 18L);\n    assert(candidate(3L) == 180L);\n\
    \    assert(candidate(4L) == 1800L);\n    assert(candidate(5L) == 18000L);\n}\n\
    void main(){}"
  status: SyntaxError
  stderr: 'b''Error: cannot find source code for runtime library file \''object.d\''\n       dmd
    might not be correctly installed. Run \''dmd -man\'' for installation instructions.\nimport
    path[0] = /tmp\nFailed: ["dmd", "-unittest", "-v", "-o-", "/tmp/tmp3wrvo9a7.d",
    "-I/tmp"]\n'''
  stdout: b''
  timestamp: 1659798336
- exit_code: 1
  program: "import std.typecons;\nimport std.math;\n/*\n\n    Given a positive integer\
    \ n, return the count of the numbers of n-digit\n    positive integers that start\
    \ or end with 1.\n    \n*/\nlong starts_one_ends(long n) \n{\n    long result\
    \ = 0;\n    long i = 0;\n    long j = 0;\n    long k = 0;\n    long l = 0;\n \
    \   long m = 0;\n    long n = 0;\n    long o = 0;\n    long p = 0;\n    long q\
    \ = 0;\n    long r = 0;\n    long s = 0;\n    long t = 0;\n    long u = 0;\n \
    \   long v = 0;\n    long w = 0;\n    long x = 0;\n    long y = 0;\n    long z\
    \ = 0;\n    long aa = 0;\n    long ab = 0;\n    long ac = 0;\n    long ad = 0;\n\
    \    long ae = 0;\n    long af = 0;\n    long ag = 0;\n    long ah = 0;\n    long\
    \ ai = 0;\n    long aj = 0;\n    long ak = 0;\n    long al = 0;\n    long am =\
    \ 0;\n    long an = 0;\n    long ao = 0;\n    long ap = 0;\n    long aq = 0;\n\
    \    long ar = 0;\n    long as = 0;\n    long at = 0;\n    long au = 0;\n    long\
    \ av = 0;\n    long aw = 0;\n    long ax = 0;\n    long ay = 0;\n    long az =\
    \ 0;\n    long ba = 0;\n    long bb = 0;\n    long bc = 0;\n    long bd = 0;\n\
    \    long be = 0;\n    long bf = 0;\n    long bg = 0;\n    long bh = 0;\n    long\
    \ bi = 0;\n    long bj = 0;\n    long bk = 0;\n    long bl = 0;\n    long bm =\
    \ 0;\n    long bn = 0;\n    long bo = 0;\n    long bp = 0;\n    long bq = 0;\n\
    \    long br = 0;\n    long bs = 0;\n    long bt = 0;\n    long bu = 0;\n    long\
    \ bv = 0;\n    long bw = 0;\n    long bx = 0;\n    long by =\nunittest\n{\n  \
    \  alias candidate = starts_one_ends;\n\n    assert(candidate(1L) == 1L);\n  \
    \  assert(candidate(2L) == 18L);\n    assert(candidate(3L) == 180L);\n    assert(candidate(4L)\
    \ == 1800L);\n    assert(candidate(5L) == 18000L);\n}\nvoid main(){}"
  status: SyntaxError
  stderr: 'b''/tmp/tmp0y2rqg2x.d(81): Error: expression expected, not \''unittest\''\n/tmp/tmp0y2rqg2x.d(82):
    Error: semicolon expected, not \''{\''\n/tmp/tmp0y2rqg2x.d(91): Error: found \''EOF\''
    when expecting \''}\'' following compound statement\nFailed: ["dmd", "-unittest",
    "-v", "-o-", "/tmp/tmp0y2rqg2x.d", "-I/tmp"]\n'''
  stdout: b''
  timestamp: 1659798336
- exit_code: 1
  program: "import std.typecons;\nimport std.math;\n/*\n\n    Given a positive integer\
    \ n, return the count of the numbers of n-digit\n    positive integers that start\
    \ or end with 1.\n    \n*/\nlong starts_one_ends(long n) \n{\n    if (n == 1)\n\
    \        return 2;\n    else if (n == 2)\n        return 3;\n    else\n      \
    \  return starts_one_ends(n - 1) + starts_one_ends(n - 2);\n}\nunittest\n{\n \
    \   alias candidate = starts_one_ends;\n\n    assert(candidate(1L) == 1L);\n \
    \   assert(candidate(2L) == 18L);\n    assert(candidate(3L) == 180L);\n    assert(candidate(4L)\
    \ == 1800L);\n    assert(candidate(5L) == 18000L);\n}\nvoid main(){}"
  status: SyntaxError
  stderr: 'b''Error: cannot find source code for runtime library file \''object.d\''\n       dmd
    might not be correctly installed. Run \''dmd -man\'' for installation instructions.\nimport
    path[0] = /tmp\nFailed: ["dmd", "-unittest", "-v", "-o-", "/tmp/tmp8k4kfutg.d",
    "-I/tmp"]\n'''
  stdout: b''
  timestamp: 1659798336
- exit_code: 1
  program: "import std.typecons;\nimport std.math;\n/*\n\n    Given a positive integer\
    \ n, return the count of the numbers of n-digit\n    positive integers that start\
    \ or end with 1.\n    \n*/\nlong starts_one_ends(long n) \n{\n    long result\
    \ = 0;\n    long i = 0;\n    long j = 0;\n    long k = 0;\n    long l = 0;\n \
    \   long m = 0;\n    long o = 0;\n    long p = 0;\n    long q = 0;\n    long r\
    \ = 0;\n    long s = 0;\n    long t = 0;\n    long u = 0;\n    long v = 0;\n \
    \   long w = 0;\n    long x = 0;\n    long y = 0;\n    long z = 0;\n    long aa\
    \ = 0;\n    long ab = 0;\n    long ac = 0;\n    long ad = 0;\n    long ae = 0;\n\
    \    long af = 0;\n    long ag = 0;\n    long ah = 0;\n    long ai = 0;\n    long\
    \ aj = 0;\n    long ak = 0;\n    long al = 0;\n    long am = 0;\n    long an =\
    \ 0;\n    long ao = 0;\n    long ap = 0;\n    long aq = 0;\n    long ar = 0;\n\
    \    long as = 0;\n    long at = 0;\n    long au = 0;\n    long av = 0;\n    long\
    \ aw = 0;\n    long ax = 0;\n    long ay = 0;\n    long az = 0;\n    long ba =\
    \ 0;\n    long bb = 0;\n    long bc = 0;\n    long bd = 0;\n    long be = 0;\n\
    \    long bf = 0;\n    long bg = 0;\n    long bh = 0;\n    long bi = 0;\n    long\
    \ bj = 0;\n    long bk = 0;\n    long bl = 0;\n    long bm = 0;\n    long bn =\
    \ 0;\n    long bo = 0;\n    long bp = 0;\n    long bq = 0;\n    long br = 0;\n\
    \    long bs = 0;\n    long bt = 0;\n    long bu = 0;\n    long bv = 0;\n    long\
    \ bw = 0;\n    long bx = 0;\n    long by = 0;\n    long bz\nunittest\n{\n    alias\
    \ candidate = starts_one_ends;\n\n    assert(candidate(1L) == 1L);\n    assert(candidate(2L)\
    \ == 18L);\n    assert(candidate(3L) == 180L);\n    assert(candidate(4L) == 1800L);\n\
    \    assert(candidate(5L) == 18000L);\n}\nvoid main(){}"
  status: SyntaxError
  stderr: 'b''/tmp/tmp62klqdso.d(81): Error: semicolon expected, not \''unittest\''\n/tmp/tmp62klqdso.d(81):
    Error: found \''unittest\'' instead of statement\nFailed: ["dmd", "-unittest",
    "-v", "-o-", "/tmp/tmp62klqdso.d", "-I/tmp"]\n'''
  stdout: b''
  timestamp: 1659798336
- exit_code: 1
  program: "import std.typecons;\nimport std.math;\n/*\n\n    Given a positive integer\
    \ n, return the count of the numbers of n-digit\n    positive integers that start\
    \ or end with 1.\n    \n*/\nlong starts_one_ends(long n) \n{\n    if (n == 1)\n\
    \        return 2;\n    else\n        return (pow(10, n - 1) + pow(10, n - 2));\n\
    }\nunittest\n{\n    alias candidate = starts_one_ends;\n\n    assert(candidate(1L)\
    \ == 1L);\n    assert(candidate(2L) == 18L);\n    assert(candidate(3L) == 180L);\n\
    \    assert(candidate(4L) == 1800L);\n    assert(candidate(5L) == 18000L);\n}\n\
    void main(){}"
  status: SyntaxError
  stderr: 'b''Error: cannot find source code for runtime library file \''object.d\''\n       dmd
    might not be correctly installed. Run \''dmd -man\'' for installation instructions.\nimport
    path[0] = /tmp\nFailed: ["dmd", "-unittest", "-v", "-o-", "/tmp/tmp58l78vg7.d",
    "-I/tmp"]\n'''
  stdout: b''
  timestamp: 1659798336
- exit_code: 1
  program: "import std.typecons;\nimport std.math;\n/*\n\n    Given a positive integer\
    \ n, return the count of the numbers of n-digit\n    positive integers that start\
    \ or end with 1.\n    \n*/\nlong starts_one_ends(long n) \n{\n    long result\
    \ = 0;\n    long i = 1;\n    long j = 1;\n    long k = 1;\n    long l = 1;\n \
    \   long m = 1;\n    long n = 1;\n    long o = 1;\n    long p = 1;\n    long q\
    \ = 1;\n    long r = 1;\n    long s = 1;\n    long t = 1;\n    long u = 1;\n \
    \   long v = 1;\n    long w = 1;\n    long x = 1;\n    long y = 1;\n    long z\
    \ = 1;\n    long aa = 1;\n    long ab = 1;\n    long ac = 1;\n    long ad = 1;\n\
    \    long ae = 1;\n    long af = 1;\n    long ag = 1;\n    long ah = 1;\n    long\
    \ ai = 1;\n    long aj = 1;\n    long ak = 1;\n    long al = 1;\n    long am =\
    \ 1;\n    long an = 1;\n    long ao = 1;\n    long ap = 1;\n    long aq = 1;\n\
    \    long ar = 1;\n    long as = 1;\n    long at = 1;\n    long au = 1;\n    long\
    \ av = 1;\n    long aw = 1;\n    long ax = 1;\n    long ay = 1;\n    long az =\
    \ 1;\n    long ba = 1;\n    long bb = 1;\n    long bc = 1;\n    long bd = 1;\n\
    \    long be = 1;\n    long bf = 1;\n    long bg = 1;\n    long bh = 1;\n    long\
    \ bi = 1;\n    long bj = 1;\n    long bk = 1;\n    long bl = 1;\n    long bm =\
    \ 1;\n    long bn = 1;\n    long bo = 1;\n    long bp = 1;\n    long bq = 1;\n\
    \    long br = 1;\n    long bs = 1;\n    long bt = 1;\n    long bu = 1;\n    long\
    \ bv = 1;\n    long bw = 1;\n    long bx = 1;\n    long by =\nunittest\n{\n  \
    \  alias candidate = starts_one_ends;\n\n    assert(candidate(1L) == 1L);\n  \
    \  assert(candidate(2L) == 18L);\n    assert(candidate(3L) == 180L);\n    assert(candidate(4L)\
    \ == 1800L);\n    assert(candidate(5L) == 18000L);\n}\nvoid main(){}"
  status: SyntaxError
  stderr: 'b''/tmp/tmpnq92qa1z.d(81): Error: expression expected, not \''unittest\''\n/tmp/tmpnq92qa1z.d(82):
    Error: semicolon expected, not \''{\''\n/tmp/tmpnq92qa1z.d(91): Error: found \''EOF\''
    when expecting \''}\'' following compound statement\nFailed: ["dmd", "-unittest",
    "-v", "-o-", "/tmp/tmpnq92qa1z.d", "-I/tmp"]\n'''
  stdout: b''
  timestamp: 1659798336
- exit_code: 1
  program: "import std.typecons;\nimport std.math;\n/*\n\n    Given a positive integer\
    \ n, return the count of the numbers of n-digit\n    positive integers that start\
    \ or end with 1.\n    \n*/\nlong starts_one_ends(long n) \n{\n    long result\
    \ = 0;\n    long max = pow(10, n);\n    foreach(i; 1 .. max)\n    {\n        if\
    \ (i % 10 == 1)\n            result++;\n        if (i / 10 == 1)\n           \
    \ result++;\n    }\n    return result;\n}\nunittest\n{\n    alias candidate =\
    \ starts_one_ends;\n\n    assert(candidate(1L) == 1L);\n    assert(candidate(2L)\
    \ == 18L);\n    assert(candidate(3L) == 180L);\n    assert(candidate(4L) == 1800L);\n\
    \    assert(candidate(5L) == 18000L);\n}\nvoid main(){}"
  status: SyntaxError
  stderr: 'b''Error: cannot find source code for runtime library file \''object.d\''\n       dmd
    might not be correctly installed. Run \''dmd -man\'' for installation instructions.\nimport
    path[0] = /tmp\nFailed: ["dmd", "-unittest", "-v", "-o-", "/tmp/tmpzsmjxvis.d",
    "-I/tmp"]\n'''
  stdout: b''
  timestamp: 1659798336
- exit_code: 1
  program: "import std.typecons;\nimport std.math;\n/*\n\n    Given a positive integer\
    \ n, return the count of the numbers of n-digit\n    positive integers that start\
    \ or end with 1.\n    \n*/\nlong starts_one_ends(long n) \n{\n    long count =\
    \ 0;\n    long start = 1;\n    long end = 1;\n    for (long i = 0; i < n; i++)\
    \ {\n        start *= 10;\n        end *= 10;\n    }\n    end += 1;\n    for (long\
    \ i = start; i < end; i++) {\n        if (i % 10 == 1 || i / 10 == 1) {\n    \
    \        count++;\n        }\n    }\n    return count;\n}\nunittest\n{\n    alias\
    \ candidate = starts_one_ends;\n\n    assert(candidate(1L) == 1L);\n    assert(candidate(2L)\
    \ == 18L);\n    assert(candidate(3L) == 180L);\n    assert(candidate(4L) == 1800L);\n\
    \    assert(candidate(5L) == 18000L);\n}\nvoid main(){}"
  status: SyntaxError
  stderr: 'b''Error: cannot find source code for runtime library file \''object.d\''\n       dmd
    might not be correctly installed. Run \''dmd -man\'' for installation instructions.\nimport
    path[0] = /tmp\nFailed: ["dmd", "-unittest", "-v", "-o-", "/tmp/tmpfdtpxbix.d",
    "-I/tmp"]\n'''
  stdout: b''
  timestamp: 1659798336
- exit_code: 1
  program: "import std.typecons;\nimport std.math;\n/*\n\n    Given a positive integer\
    \ n, return the count of the numbers of n-digit\n    positive integers that start\
    \ or end with 1.\n    \n*/\nlong starts_one_ends(long n) \n{\n    long count =\
    \ 0;\n    long start = 1;\n    long end = 1;\n    long i = 0;\n    long j = 0;\n\
    \    long k = 0;\n    long l = 0;\n    long m = 0;\n    long p = 0;\n    long\
    \ q = 0;\n    long r = 0;\n    long s = 0;\n    long t = 0;\n    long u = 0;\n\
    \    long v = 0;\n    long w = 0;\n    long x = 0;\n    long y = 0;\n    long\
    \ z = 0;\n    long a = 0;\n    long b = 0;\n    long c = 0;\n    long d = 0;\n\
    \    long e = 0;\n    long f = 0;\n    long g = 0;\n    long h = 0;\n    long\
    \ ii = 0;\n    long jj = 0;\n    long kk = 0;\n    long ll = 0;\n    long mm =\
    \ 0;\n    long pp = 0;\n    long qq = 0;\n    long rr = 0;\n    long ss = 0;\n\
    \    long tt = 0;\n    long uu = 0;\n    long vv = 0;\n    long ww = 0;\n    long\
    \ xx = 0;\n    long yy = 0;\n    long zz = 0;\n    long aa = 0;\n    long bb =\
    \ 0;\n    long cc = 0;\n    long dd = 0;\n    long ee = 0;\n    long ff = 0;\n\
    \    long gg = 0;\n    long hh = 0;\n    long iii = 0;\n    long jjj = 0;\n  \
    \  long kkk = 0;\n    long lll = 0;\n    long mmm = 0;\n    long ppp = 0;\n  \
    \  long qqq = 0;\n    long rrr = 0;\n    long sss = 0;\n    long ttt = 0;\n  \
    \  long uuu = 0;\n    long vvv = 0;\n    long www = 0;\n    long xxx = 0;\n  \
    \  long yyy = 0;\n    long zzz = 0;\n    long aaaa = 0;\n    long b\nunittest\n\
    {\n    alias candidate = starts_one_ends;\n\n    assert(candidate(1L) == 1L);\n\
    \    assert(candidate(2L) == 18L);\n    assert(candidate(3L) == 180L);\n    assert(candidate(4L)\
    \ == 1800L);\n    assert(candidate(5L) == 18000L);\n}\nvoid main(){}"
  status: SyntaxError
  stderr: 'b''/tmp/tmpman_gvn5.d(80): Error: semicolon expected, not `unittest`\n/tmp/tmpman_gvn5.d(80):
    Error: found `unittest` instead of statement\nFailed: ["dmd", "-unittest", "-v",
    "-o-", "/tmp/tmpman_gvn5.d", "-I/tmp"]\n'''
  stdout: b''
- exit_code: 1
  program: "import std.typecons;\nimport std.math;\n/*\n\n    Given a positive integer\
    \ n, return the count of the numbers of n-digit\n    positive integers that start\
    \ or end with 1.\n    \n*/\nlong starts_one_ends(long n) \n{\n    if (n == 1)\n\
    \        return 1;\n    else\n        return starts_one_ends(n - 1) + pow(10,\
    \ n - 1);\n}\nunittest\n{\n    alias candidate = starts_one_ends;\n\n    assert(candidate(1L)\
    \ == 1L);\n    assert(candidate(2L) == 18L);\n    assert(candidate(3L) == 180L);\n\
    \    assert(candidate(4L) == 1800L);\n    assert(candidate(5L) == 18000L);\n}\n\
    void main(){}"
  status: SyntaxError
  stderr: 'b''Error: cannot find source code for runtime library file \''object.d\''\n       dmd
    might not be correctly installed. Run \''dmd -man\'' for installation instructions.\nimport
    path[0] = /tmp\nFailed: ["dmd", "-unittest", "-v", "-o-", "/tmp/tmp_1vgw8uq.d",
    "-I/tmp"]\n'''
  stdout: b''
  timestamp: 1659798336
- exit_code: 1
  program: "import std.typecons;\nimport std.math;\n/*\n\n    Given a positive integer\
    \ n, return the count of the numbers of n-digit\n    positive integers that start\
    \ or end with 1.\n    \n*/\nlong starts_one_ends(long n) \n{\n    long count =\
    \ 0;\n    long start = 1;\n    long end = 1;\n    for (long i = 0; i < n; i++)\
    \ {\n        start *= 10;\n        end *= 10;\n    }\n    start /= 10;\n    end\
    \ -= 1;\n    count = end - start + 1;\n    return count;\n}\nunittest\n{\n   \
    \ alias candidate = starts_one_ends;\n\n    assert(candidate(1L) == 1L);\n   \
    \ assert(candidate(2L) == 18L);\n    assert(candidate(3L) == 180L);\n    assert(candidate(4L)\
    \ == 1800L);\n    assert(candidate(5L) == 18000L);\n}\nvoid main(){}"
  status: Exception
  stderr: 'b''core.exception.AssertError@/tmp/tmpknihm12n.d(27): unittest failure\n----------------\n??:?
    _d_unittestp [0x427dad]\n??:? void tmpknihm12n.__unittest_L23_C1() [0x427a90]\n??:?
    void tmpknihm12n.__modtest() [0x427b30]\n??:? int core.runtime.runModuleUnitTests().__foreachbody2(object.ModuleInfo*)
    [0x42bad3]\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)).__lambda2(immutable(object.ModuleInfo*))
    [0x42a966]\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))).__foreachbody2(ref
    rt.sections_elf_shared.DSO) [0x42faf9]\n??:? int rt.sections_elf_shared.DSO.opApply(scope
    int delegate(ref rt.sections_elf_shared.DSO)) [0x42ffa8]\n??:? int rt.minfo.moduleinfos_apply(scope
    int delegate(immutable(object.ModuleInfo*))) [0x42fa85]\n??:? int object.ModuleInfo.opApply(scope
    int delegate(object.ModuleInfo*)) [0x42a93d]\n??:? runModuleUnitTests [0x42b8a9]\n??:?
    void rt.dmain2._d_run_main(int, char**, extern (C) int function(char[][])*).runAll()
    [0x4281fc]\n??:? void rt.dmain2._d_run_main(int, char**, extern (C) int function(char[][])*).tryExec(scope
    void delegate()) [0x428183]\n??:? _d_run_main [0x4280ee]\n??:? main [0x427b43]\n??:?
    __libc_start_main [0xbe77b554]\n1/1 unittests FAILED\n'''
  stdout: b''
- exit_code: 1
  program: "import std.typecons;\nimport std.math;\n/*\n\n    Given a positive integer\
    \ n, return the count of the numbers of n-digit\n    positive integers that start\
    \ or end with 1.\n    \n*/\nlong starts_one_ends(long n) \n{\n    long result\
    \ = 0;\n    long start = pow(10, n - 1);\n    long end = pow(10, n);\n    foreach\
    \ (i; start .. end) {\n        if (i % 10 == 1 || i / 10 == 1) {\n           \
    \ result++;\n        }\n    }\n    return result;\n}\nunittest\n{\n    alias candidate\
    \ = starts_one_ends;\n\n    assert(candidate(1L) == 1L);\n    assert(candidate(2L)\
    \ == 18L);\n    assert(candidate(3L) == 180L);\n    assert(candidate(4L) == 1800L);\n\
    \    assert(candidate(5L) == 18000L);\n}\nvoid main(){}"
  status: SyntaxError
  stderr: 'b''Error: cannot find source code for runtime library file \''object.d\''\n       dmd
    might not be correctly installed. Run \''dmd -man\'' for installation instructions.\nimport
    path[0] = /tmp\nFailed: ["dmd", "-unittest", "-v", "-o-", "/tmp/tmpy5wr03xc.d",
    "-I/tmp"]\n'''
  stdout: b''
  timestamp: 1659798336
- exit_code: 1
  program: "import std.typecons;\nimport std.math;\n/*\n\n    Given a positive integer\
    \ n, return the count of the numbers of n-digit\n    positive integers that start\
    \ or end with 1.\n    \n*/\nlong starts_one_ends(long n) \n{\n    long result\
    \ = 0;\n    long i = 0;\n    long j = 0;\n    long k = 0;\n    long l = 0;\n \
    \   long m = 0;\n    long n_digits = 0;\n    long n_digits_1 = 0;\n    long n_digits_2\
    \ = 0;\n    long n_digits_3 = 0;\n    long n_digits_4 = 0;\n    long n_digits_5\
    \ = 0;\n    long n_digits_6 = 0;\n    long n_digits_7 = 0;\n    long n_digits_8\
    \ = 0;\n    long n_digits_9 = 0;\n    long n_digits_10 = 0;\n    long n_digits_11\
    \ = 0;\n    long n_digits_12 = 0;\n    long n_digits_13 = 0;\n    long n_digits_14\
    \ = 0;\n    long n_digits_15 = 0;\n    long n_digits_16 = 0;\n    long n_digits_17\
    \ = 0;\n    long n_digits_18 = 0;\n    long n_digits_19 = 0;\n    long n_digits_20\
    \ = 0;\n    long n_digits_21 = 0;\n    long n_digits_22 = 0;\n    long n_digits_23\
    \ = 0;\n    long n_digits_24 = 0;\n    long n_digits_25 = 0;\n    long n_digits_26\
    \ = 0;\n    long n_digits_27 = 0;\n    long n_digits_28 = 0;\n    long n_digits_29\
    \ = 0;\n    long n_digits_30 = 0;\n    long n_digits_31 = 0;\n    long n_digits_32\
    \ = 0;\n    long n_digits_33 = 0;\n    long n_digits_34 = 0;\n    long n_digits_35\
    \ = 0;\n    long n_digits_36 = 0;\n    long n_digits_37 = 0;\n    long n_digits_38\
    \ = 0;\n   \nunittest\n{\n    alias candidate = starts_one_ends;\n\n    assert(candidate(1L)\
    \ == 1L);\n    assert(candidate(2L) == 18L);\n    assert(candidate(3L) == 180L);\n\
    \    assert(candidate(4L) == 1800L);\n    assert(candidate(5L) == 18000L);\n}\n\
    void main(){}"
  status: SyntaxError
  stderr: 'b''/tmp/tmp245_qy0n.d(57): Error: found \''unittest\'' instead of statement\nFailed:
    ["dmd", "-unittest", "-v", "-o-", "/tmp/tmp245_qy0n.d", "-I/tmp"]\n'''
  stdout: b''
  timestamp: 1659798336
- exit_code: 1
  program: "import std.typecons;\nimport std.math;\n/*\n\n    Given a positive integer\
    \ n, return the count of the numbers of n-digit\n    positive integers that start\
    \ or end with 1.\n    \n*/\nlong starts_one_ends(long n) \n{\n    long result\
    \ = 0;\n    long i = 1;\n    long j = 1;\n    long k = 1;\n    long l = 1;\n \
    \   long m = 1;\n    long o = 1;\n    long p = 1;\n    long q = 1;\n    long r\
    \ = 1;\n    long s = 1;\n    long t = 1;\n    long u = 1;\n    long v = 1;\n \
    \   long w = 1;\n    long x = 1;\n    long y = 1;\n    long z = 1;\n    long aa\
    \ = 1;\n    long ab = 1;\n    long ac = 1;\n    long ad = 1;\n    long ae = 1;\n\
    \    long af = 1;\n    long ag = 1;\n    long ah = 1;\n    long ai = 1;\n    long\
    \ aj = 1;\n    long ak = 1;\n    long al = 1;\n    long am = 1;\n    long an =\
    \ 1;\n    long ao = 1;\n    long ap = 1;\n    long aq = 1;\n    long ar = 1;\n\
    \    long as = 1;\n    long at = 1;\n    long au = 1;\n    long av = 1;\n    long\
    \ aw = 1;\n    long ax = 1;\n    long ay = 1;\n    long az = 1;\n    long ba =\
    \ 1;\n    long bb = 1;\n    long bc = 1;\n    long bd = 1;\n    long be = 1;\n\
    \    long bf = 1;\n    long bg = 1;\n    long bh = 1;\n    long bi = 1;\n    long\
    \ bj = 1;\n    long bk = 1;\n    long bl = 1;\n    long bm = 1;\n    long bn =\
    \ 1;\n    long bo = 1;\n    long bp = 1;\n    long bq = 1;\n    long br = 1;\n\
    \    long bs = 1;\n    long bt = 1;\n    long bu = 1;\n    long bv = 1;\n    long\
    \ bw = 1;\n    long bx = 1;\n    long by = 1;\n    long bz\nunittest\n{\n    alias\
    \ candidate = starts_one_ends;\n\n    assert(candidate(1L) == 1L);\n    assert(candidate(2L)\
    \ == 18L);\n    assert(candidate(3L) == 180L);\n    assert(candidate(4L) == 1800L);\n\
    \    assert(candidate(5L) == 18000L);\n}\nvoid main(){}"
  status: SyntaxError
  stderr: 'b''/tmp/tmpy08wmkvo.d(81): Error: semicolon expected, not \''unittest\''\n/tmp/tmpy08wmkvo.d(81):
    Error: found \''unittest\'' instead of statement\nFailed: ["dmd", "-unittest",
    "-v", "-o-", "/tmp/tmpy08wmkvo.d", "-I/tmp"]\n'''
  stdout: b''
  timestamp: 1659798336
- exit_code: 1
  program: "import std.typecons;\nimport std.math;\n/*\n\n    Given a positive integer\
    \ n, return the count of the numbers of n-digit\n    positive integers that start\
    \ or end with 1.\n    \n*/\nlong starts_one_ends(long n) \n{\n    long count =\
    \ 0;\n    long start = pow(10, n - 1);\n    long end = pow(10, n);\n    foreach(i;\
    \ start .. end)\n    {\n        if(i % 10 == 1)\n        {\n            count++;\n\
    \        }\n    }\n    return count;\n}\nunittest\n{\n    alias candidate = starts_one_ends;\n\
    \n    assert(candidate(1L) == 1L);\n    assert(candidate(2L) == 18L);\n    assert(candidate(3L)\
    \ == 180L);\n    assert(candidate(4L) == 1800L);\n    assert(candidate(5L) ==\
    \ 18000L);\n}\nvoid main(){}"
  status: SyntaxError
  stderr: 'b''Error: cannot find source code for runtime library file \''object.d\''\n       dmd
    might not be correctly installed. Run \''dmd -man\'' for installation instructions.\nimport
    path[0] = /tmp\nFailed: ["dmd", "-unittest", "-v", "-o-", "/tmp/tmppi7bl64v.d",
    "-I/tmp"]\n'''
  stdout: b''
  timestamp: 1659798336
- exit_code: 1
  program: "import std.typecons;\nimport std.math;\n/*\n\n    Given a positive integer\
    \ n, return the count of the numbers of n-digit\n    positive integers that start\
    \ or end with 1.\n    \n*/\nlong starts_one_ends(long n) \n{\n    long result\
    \ = 0;\n    if (n == 1)\n        return 1;\n    else if (n == 2)\n        return\
    \ 10;\n    else\n    {\n        result = starts_one_ends(n - 1) + starts_one_ends(n\
    \ - 2);\n        return result;\n    }\n}\nunittest\n{\n    alias candidate =\
    \ starts_one_ends;\n\n    assert(candidate(1L) == 1L);\n    assert(candidate(2L)\
    \ == 18L);\n    assert(candidate(3L) == 180L);\n    assert(candidate(4L) == 1800L);\n\
    \    assert(candidate(5L) == 18000L);\n}\nvoid main(){}"
  status: Exception
  stderr: 'b''core.exception.AssertError@/tmp/tmpb4h5d63v.d(27): unittest failure\n----------------\n??:?
    _d_unittestp [0x427d9d]\n??:? void tmpb4h5d63v.__unittest_L22_C1() [0x427a9d]\n??:?
    void tmpb4h5d63v.__modtest() [0x427b1c]\n??:? int core.runtime.runModuleUnitTests().__foreachbody2(object.ModuleInfo*)
    [0x42bac3]\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)).__lambda2(immutable(object.ModuleInfo*))
    [0x42a956]\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))).__foreachbody2(ref
    rt.sections_elf_shared.DSO) [0x42fae9]\n??:? int rt.sections_elf_shared.DSO.opApply(scope
    int delegate(ref rt.sections_elf_shared.DSO)) [0x42ff98]\n??:? int rt.minfo.moduleinfos_apply(scope
    int delegate(immutable(object.ModuleInfo*))) [0x42fa75]\n??:? int object.ModuleInfo.opApply(scope
    int delegate(object.ModuleInfo*)) [0x42a92d]\n??:? runModuleUnitTests [0x42b899]\n??:?
    void rt.dmain2._d_run_main(int, char**, extern (C) int function(char[][])*).runAll()
    [0x4281ec]\n??:? void rt.dmain2._d_run_main(int, char**, extern (C) int function(char[][])*).tryExec(scope
    void delegate()) [0x428173]\n??:? _d_run_main [0x4280de]\n??:? main [0x427b2f]\n??:?
    __libc_start_main [0x3436b554]\n1/1 unittests FAILED\n'''
  stdout: b''
- exit_code: 1
  program: "import std.typecons;\nimport std.math;\n/*\n\n    Given a positive integer\
    \ n, return the count of the numbers of n-digit\n    positive integers that start\
    \ or end with 1.\n    \n*/\nlong starts_one_ends(long n) \n{\n    long result\
    \ = 0;\n    long start = 1;\n    long end = 1;\n    for (long i = 0; i < n; i++)\
    \ {\n        start *= 10;\n        end *= 10;\n    }\n    result += start - 1;\n\
    \    end /= 10;\n    result += end - 1;\n    return result;\n}\nunittest\n{\n\
    \    alias candidate = starts_one_ends;\n\n    assert(candidate(1L) == 1L);\n\
    \    assert(candidate(2L) == 18L);\n    assert(candidate(3L) == 180L);\n    assert(candidate(4L)\
    \ == 1800L);\n    assert(candidate(5L) == 18000L);\n}\nvoid main(){}"
  status: SyntaxError
  stderr: 'b''Error: cannot find source code for runtime library file \''object.d\''\n       dmd
    might not be correctly installed. Run \''dmd -man\'' for installation instructions.\nimport
    path[0] = /tmp\nFailed: ["dmd", "-unittest", "-v", "-o-", "/tmp/tmpa55w4clo.d",
    "-I/tmp"]\n'''
  stdout: b''
  timestamp: 1659798336
- exit_code: 1
  program: "import std.typecons;\nimport std.math;\n/*\n\n    Given a positive integer\
    \ n, return the count of the numbers of n-digit\n    positive integers that start\
    \ or end with 1.\n    \n*/\nlong starts_one_ends(long n) \n{\n    long result\
    \ = 0;\n    if (n == 1)\n        return 1;\n    else if (n == 2)\n        return\
    \ 11;\n    else\n    {\n        result = 11;\n        for (long i = 3; i <= n;\
    \ i++)\n        {\n            result += 9 * pow(10, i - 2);\n        }\n    }\n\
    \    return result;\n}\nunittest\n{\n    alias candidate = starts_one_ends;\n\n\
    \    assert(candidate(1L) == 1L);\n    assert(candidate(2L) == 18L);\n    assert(candidate(3L)\
    \ == 180L);\n    assert(candidate(4L) == 1800L);\n    assert(candidate(5L) ==\
    \ 18000L);\n}\nvoid main(){}"
  status: SyntaxError
  stderr: 'b''Error: cannot find source code for runtime library file \''object.d\''\n       dmd
    might not be correctly installed. Run \''dmd -man\'' for installation instructions.\nimport
    path[0] = /tmp\nFailed: ["dmd", "-unittest", "-v", "-o-", "/tmp/tmpbcp484ww.d",
    "-I/tmp"]\n'''
  stdout: b''
  timestamp: 1659798336
- exit_code: 1
  program: "import std.typecons;\nimport std.math;\n/*\n\n    Given a positive integer\
    \ n, return the count of the numbers of n-digit\n    positive integers that start\
    \ or end with 1.\n    \n*/\nlong starts_one_ends(long n) \n{\n    long result\
    \ = 0;\n    if (n == 1) \n    {\n        result = 2;\n    }\n    else if (n ==\
    \ 2) \n    {\n        result = 3;\n    }\n    else \n    {\n        result = starts_one_ends(n\
    \ - 1) + starts_one_ends(n - 2);\n    }\n    return result;\n}\nunittest\n{\n\
    \    alias candidate = starts_one_ends;\n\n    assert(candidate(1L) == 1L);\n\
    \    assert(candidate(2L) == 18L);\n    assert(candidate(3L) == 180L);\n    assert(candidate(4L)\
    \ == 1800L);\n    assert(candidate(5L) == 18000L);\n}\nvoid main(){}"
  status: SyntaxError
  stderr: 'b''Error: cannot find source code for runtime library file \''object.d\''\n       dmd
    might not be correctly installed. Run \''dmd -man\'' for installation instructions.\nimport
    path[0] = /tmp\nFailed: ["dmd", "-unittest", "-v", "-o-", "/tmp/tmp9b_4trvu.d",
    "-I/tmp"]\n'''
  stdout: b''
  timestamp: 1659798336
- exit_code: 1
  program: "import std.typecons;\nimport std.math;\n/*\n\n    Given a positive integer\
    \ n, return the count of the numbers of n-digit\n    positive integers that start\
    \ or end with 1.\n    \n*/\nlong starts_one_ends(long n) \n{\n    if (n == 1)\
    \ \n        return 2;\n    else \n        return (n - 1) * pow(10, n - 2) + starts_one_ends(n\
    \ - 1);\n}\nunittest\n{\n    alias candidate = starts_one_ends;\n\n    assert(candidate(1L)\
    \ == 1L);\n    assert(candidate(2L) == 18L);\n    assert(candidate(3L) == 180L);\n\
    \    assert(candidate(4L) == 1800L);\n    assert(candidate(5L) == 18000L);\n}\n\
    void main(){}"
  status: SyntaxError
  stderr: 'b''Error: cannot find source code for runtime library file \''object.d\''\n       dmd
    might not be correctly installed. Run \''dmd -man\'' for installation instructions.\nimport
    path[0] = /tmp\nFailed: ["dmd", "-unittest", "-v", "-o-", "/tmp/tmp1xwxyxfy.d",
    "-I/tmp"]\n'''
  stdout: b''
  timestamp: 1659798336
- exit_code: 1
  program: "import std.typecons;\nimport std.math;\n/*\n\n    Given a positive integer\
    \ n, return the count of the numbers of n-digit\n    positive integers that start\
    \ or end with 1.\n    \n*/\nlong starts_one_ends(long n) \n{\n    long result\
    \ = 0;\n    long start = 1;\n    long end = 1;\n    for (long i = 0; i < n; i++)\
    \ {\n        start *= 10;\n        end *= 10;\n    }\n    start /= 10;\n    end\
    \ -= 1;\n    result = end - start + 1;\n    return result;\n}\nunittest\n{\n \
    \   alias candidate = starts_one_ends;\n\n    assert(candidate(1L) == 1L);\n \
    \   assert(candidate(2L) == 18L);\n    assert(candidate(3L) == 180L);\n    assert(candidate(4L)\
    \ == 1800L);\n    assert(candidate(5L) == 18000L);\n}\nvoid main(){}"
  status: Exception
  stderr: 'b''core.exception.AssertError@/tmp/tmpjx4yezdq.d(27): unittest failure\n----------------\n??:?
    _d_unittestp [0x427dad]\n??:? void tmpjx4yezdq.__unittest_L23_C1() [0x427a90]\n??:?
    void tmpjx4yezdq.__modtest() [0x427b30]\n??:? int core.runtime.runModuleUnitTests().__foreachbody2(object.ModuleInfo*)
    [0x42bad3]\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)).__lambda2(immutable(object.ModuleInfo*))
    [0x42a966]\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))).__foreachbody2(ref
    rt.sections_elf_shared.DSO) [0x42faf9]\n??:? int rt.sections_elf_shared.DSO.opApply(scope
    int delegate(ref rt.sections_elf_shared.DSO)) [0x42ffa8]\n??:? int rt.minfo.moduleinfos_apply(scope
    int delegate(immutable(object.ModuleInfo*))) [0x42fa85]\n??:? int object.ModuleInfo.opApply(scope
    int delegate(object.ModuleInfo*)) [0x42a93d]\n??:? runModuleUnitTests [0x42b8a9]\n??:?
    void rt.dmain2._d_run_main(int, char**, extern (C) int function(char[][])*).runAll()
    [0x4281fc]\n??:? void rt.dmain2._d_run_main(int, char**, extern (C) int function(char[][])*).tryExec(scope
    void delegate()) [0x428183]\n??:? _d_run_main [0x4280ee]\n??:? main [0x427b43]\n??:?
    __libc_start_main [0x7d8a9554]\n1/1 unittests FAILED\n'''
  stdout: b''
- exit_code: 1
  program: "import std.typecons;\nimport std.math;\n/*\n\n    Given a positive integer\
    \ n, return the count of the numbers of n-digit\n    positive integers that start\
    \ or end with 1.\n    \n*/\nlong starts_one_ends(long n) \n{\n    long result\
    \ = 0;\n    long min = 1;\n    long max = 1;\n    long i = 0;\n    while (i <\
    \ n) {\n        min *= 10;\n        max *= 10;\n        ++i;\n    }\n    min +=\
    \ 1;\n    max += 9;\n    result = max - min + 1;\n    return result;\n}\nunittest\n\
    {\n    alias candidate = starts_one_ends;\n\n    assert(candidate(1L) == 1L);\n\
    \    assert(candidate(2L) == 18L);\n    assert(candidate(3L) == 180L);\n    assert(candidate(4L)\
    \ == 1800L);\n    assert(candidate(5L) == 18000L);\n}\nvoid main(){}"
  status: SyntaxError
  stderr: 'b''Error: cannot find source code for runtime library file \''object.d\''\n       dmd
    might not be correctly installed. Run \''dmd -man\'' for installation instructions.\nimport
    path[0] = /tmp\nFailed: ["dmd", "-unittest", "-v", "-o-", "/tmp/tmpx_hrh18x.d",
    "-I/tmp"]\n'''
  stdout: b''
  timestamp: 1659798336
- exit_code: 1
  program: "import std.typecons;\nimport std.math;\n/*\n\n    Given a positive integer\
    \ n, return the count of the numbers of n-digit\n    positive integers that start\
    \ or end with 1.\n    \n*/\nlong starts_one_ends(long n) \n{\n    long count =\
    \ 0;\n    long start = 1;\n    long end = 1;\n    long i = 0;\n    long j = 0;\n\
    \    long k = 0;\n    long l = 0;\n    long m = 0;\n    long o = 0;\n    long\
    \ p = 0;\n    long q = 0;\n    long r = 0;\n    long s = 0;\n    long t = 0;\n\
    \    long u = 0;\n    long v = 0;\n    long w = 0;\n    long x = 0;\n    long\
    \ y = 0;\n    long z = 0;\n    long aa = 0;\n    long ab = 0;\n    long ac = 0;\n\
    \    long ad = 0;\n    long ae = 0;\n    long af = 0;\n    long ag = 0;\n    long\
    \ ah = 0;\n    long ai = 0;\n    long aj = 0;\n    long ak = 0;\n    long al =\
    \ 0;\n    long am = 0;\n    long an = 0;\n    long ao = 0;\n    long ap = 0;\n\
    \    long aq = 0;\n    long ar = 0;\n    long as = 0;\n    long at = 0;\n    long\
    \ au = 0;\n    long av = 0;\n    long aw = 0;\n    long ax = 0;\n    long ay =\
    \ 0;\n    long az = 0;\n    long ba = 0;\n    long bb = 0;\n    long bc = 0;\n\
    \    long bd = 0;\n    long be = 0;\n    long bf = 0;\n    long bg = 0;\n    long\
    \ bh = 0;\n    long bi = 0;\n    long bj = 0;\n    long bk = 0;\n    long bl =\
    \ 0;\n    long bm = 0;\n    long bn = 0;\n    long bo = 0;\n    long bp = 0;\n\
    \    long bq = 0;\n    long br = 0;\n    long bs = 0;\n    long bt = 0;\n    long\
    \ bu = 0;\n    long bv = 0;\n    long bw = 0;\n    long bx =\nunittest\n{\n  \
    \  alias candidate = starts_one_ends;\n\n    assert(candidate(1L) == 1L);\n  \
    \  assert(candidate(2L) == 18L);\n    assert(candidate(3L) == 180L);\n    assert(candidate(4L)\
    \ == 1800L);\n    assert(candidate(5L) == 18000L);\n}\nvoid main(){}"
  status: SyntaxError
  stderr: 'b''/tmp/tmplpupxup3.d(81): Error: expression expected, not `unittest`\n/tmp/tmplpupxup3.d(82):
    Error: semicolon expected, not `{`\n/tmp/tmplpupxup3.d(91): Error: found `End
    of File` when expecting `}` following compound statement\nFailed: ["dmd", "-unittest",
    "-v", "-o-", "/tmp/tmplpupxup3.d", "-I/tmp"]\n'''
  stdout: b''
- exit_code: 1
  program: "import std.typecons;\nimport std.math;\n/*\n\n    Given a positive integer\
    \ n, return the count of the numbers of n-digit\n    positive integers that start\
    \ or end with 1.\n    \n*/\nlong starts_one_ends(long n) \n{\n    long count =\
    \ 0;\n    long max = pow(10, n);\n    for (long i = 1; i < max; i++) \n    {\n\
    \        if (i % 10 == 1) \n        {\n            count++;\n        }\n     \
    \   if (i / 10 == 1) \n        {\n            count++;\n        }\n    }\n   \
    \ return count;\n}\nunittest\n{\n    alias candidate = starts_one_ends;\n\n  \
    \  assert(candidate(1L) == 1L);\n    assert(candidate(2L) == 18L);\n    assert(candidate(3L)\
    \ == 180L);\n    assert(candidate(4L) == 1800L);\n    assert(candidate(5L) ==\
    \ 18000L);\n}\nvoid main(){}"
  status: SyntaxError
  stderr: 'b''Error: cannot find source code for runtime library file \''object.d\''\n       dmd
    might not be correctly installed. Run \''dmd -man\'' for installation instructions.\nimport
    path[0] = /tmp\nFailed: ["dmd", "-unittest", "-v", "-o-", "/tmp/tmpx1v2fg4y.d",
    "-I/tmp"]\n'''
  stdout: b''
  timestamp: 1659798336
- exit_code: 1
  program: "import std.typecons;\nimport std.math;\n/*\n\n    Given a positive integer\
    \ n, return the count of the numbers of n-digit\n    positive integers that start\
    \ or end with 1.\n    \n*/\nlong starts_one_ends(long n) \n{\n    long result\
    \ = 0;\n    long start = 1;\n    long end = 1;\n    for (long i = 0; i < n; i++)\
    \ {\n        start *= 10;\n        end *= 10;\n    }\n    start /= 10;\n    end\
    \ -= 1;\n    result = end - start + 1;\n    return result;\n}\nunittest\n{\n \
    \   alias candidate = starts_one_ends;\n\n    assert(candidate(1L) == 1L);\n \
    \   assert(candidate(2L) == 18L);\n    assert(candidate(3L) == 180L);\n    assert(candidate(4L)\
    \ == 1800L);\n    assert(candidate(5L) == 18000L);\n}\nvoid main(){}"
  status: Exception
  stderr: 'b''core.exception.AssertError@/tmp/tmpjx4yezdq.d(27): unittest failure\n----------------\n??:?
    _d_unittestp [0x427dad]\n??:? void tmpjx4yezdq.__unittest_L23_C1() [0x427a90]\n??:?
    void tmpjx4yezdq.__modtest() [0x427b30]\n??:? int core.runtime.runModuleUnitTests().__foreachbody2(object.ModuleInfo*)
    [0x42bad3]\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)).__lambda2(immutable(object.ModuleInfo*))
    [0x42a966]\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))).__foreachbody2(ref
    rt.sections_elf_shared.DSO) [0x42faf9]\n??:? int rt.sections_elf_shared.DSO.opApply(scope
    int delegate(ref rt.sections_elf_shared.DSO)) [0x42ffa8]\n??:? int rt.minfo.moduleinfos_apply(scope
    int delegate(immutable(object.ModuleInfo*))) [0x42fa85]\n??:? int object.ModuleInfo.opApply(scope
    int delegate(object.ModuleInfo*)) [0x42a93d]\n??:? runModuleUnitTests [0x42b8a9]\n??:?
    void rt.dmain2._d_run_main(int, char**, extern (C) int function(char[][])*).runAll()
    [0x4281fc]\n??:? void rt.dmain2._d_run_main(int, char**, extern (C) int function(char[][])*).tryExec(scope
    void delegate()) [0x428183]\n??:? _d_run_main [0x4280ee]\n??:? main [0x427b43]\n??:?
    __libc_start_main [0x7d8a9554]\n1/1 unittests FAILED\n'''
  stdout: b''
- exit_code: 1
  program: "import std.typecons;\nimport std.math;\n/*\n\n    Given a positive integer\
    \ n, return the count of the numbers of n-digit\n    positive integers that start\
    \ or end with 1.\n    \n*/\nlong starts_one_ends(long n) \n{\n    long result\
    \ = 0;\n    long start = 1;\n    long end = 1;\n    for (long i = 1; i < n; i++)\
    \ {\n        start *= 10;\n        end *= 10;\n    }\n    result += start;\n \
    \   result += end;\n    result += (start - 1) * 9;\n    return result;\n}\nunittest\n\
    {\n    alias candidate = starts_one_ends;\n\n    assert(candidate(1L) == 1L);\n\
    \    assert(candidate(2L) == 18L);\n    assert(candidate(3L) == 180L);\n    assert(candidate(4L)\
    \ == 1800L);\n    assert(candidate(5L) == 18000L);\n}\nvoid main(){}"
  status: SyntaxError
  stderr: 'b''Error: cannot find source code for runtime library file \''object.d\''\n       dmd
    might not be correctly installed. Run \''dmd -man\'' for installation instructions.\nimport
    path[0] = /tmp\nFailed: ["dmd", "-unittest", "-v", "-o-", "/tmp/tmp94vz2bt3.d",
    "-I/tmp"]\n'''
  stdout: b''
  timestamp: 1659798336
- exit_code: 1
  program: "import std.typecons;\nimport std.math;\n/*\n\n    Given a positive integer\
    \ n, return the count of the numbers of n-digit\n    positive integers that start\
    \ or end with 1.\n    \n*/\nlong starts_one_ends(long n) \n{\n    long count =\
    \ 0;\n    long min = pow(10, n - 1);\n    long max = pow(10, n);\n    for (long\
    \ i = min; i < max; i++) {\n        string s = to!string(i);\n        if (s[0]\
    \ == '1' || s[$ - 1] == '1') {\n            count++;\n        }\n    }\n    return\
    \ count;\n}\nunittest\n{\n    alias candidate = starts_one_ends;\n\n    assert(candidate(1L)\
    \ == 1L);\n    assert(candidate(2L) == 18L);\n    assert(candidate(3L) == 180L);\n\
    \    assert(candidate(4L) == 1800L);\n    assert(candidate(5L) == 18000L);\n}\n\
    void main(){}"
  status: SyntaxError
  stderr: 'b''Error: cannot find source code for runtime library file \''object.d\''\n       dmd
    might not be correctly installed. Run \''dmd -man\'' for installation instructions.\nimport
    path[0] = /tmp\nFailed: ["dmd", "-unittest", "-v", "-o-", "/tmp/tmps7wauayn.d",
    "-I/tmp"]\n'''
  stdout: b''
  timestamp: 1659798336
- exit_code: 1
  program: "import std.typecons;\nimport std.math;\n/*\n\n    Given a positive integer\
    \ n, return the count of the numbers of n-digit\n    positive integers that start\
    \ or end with 1.\n    \n*/\nlong starts_one_ends(long n) \n{\n    long result\
    \ = 0;\n    if (n == 1)\n        return 1;\n    else if (n == 2)\n        return\
    \ 10;\n    else if (n == 3)\n        return 55;\n    else if (n == 4)\n      \
    \  return 220;\n    else if (n == 5)\n        return 715;\n    else if (n == 6)\n\
    \        return 2002;\n    else if (n == 7)\n        return 5005;\n    else if\
    \ (n == 8)\n        return 11440;\n    else if (n == 9)\n        return 24310;\n\
    \    else if (n == 10)\n        return 48620;\n    else if (n == 11)\n       \
    \ return 92378;\n    else if (n == 12)\n        return 167960;\n    else if (n\
    \ == 13)\n        return 293930;\n    else if (n == 14)\n        return 497420;\n\
    \    else if (n == 15)\n        return 817190;\n    else if (n == 16)\n      \
    \  return 1307504;\n    else if (n == 17)\n        return 2042975;\n    else if\
    \ (n == 18)\n        return 3124550;\n    else if (n == 19)\n        return 4686825;\n\
    \    else if (n == 20)\n        return 6863040;\n    else if (n == 21)\n     \
    \   return 10015005;\n    else if (n == 22)\n        return 14307150;\n    else\
    \ if (n == 23)\n        return 20058300;\n    else if (n == 24)\n        return\
    \ 28171025;\n    else if (n == 25)\n        return 39679650;\n    else if (n ==\
    \ 26)\n        return 55679075;\n    else if (n == 27)\n        return 77261600;\n\
    \    else if (n == 28)\n        return 106700525;\n    else if (n == 29)\n   \
    \     return 148104150;\n    else if (n == 30)\n        return 206253075;\n  \
    \  else if (n == 31)\n        return 287330736;\n    else if (n == 32)\n     \
    \   return\nunittest\n{\n    alias candidate = starts_one_ends;\n\n    assert(candidate(1L)\
    \ == 1L);\n    assert(candidate(2L) == 18L);\n    assert(candidate(3L) == 180L);\n\
    \    assert(candidate(4L) == 1800L);\n    assert(candidate(5L) == 18000L);\n}\n\
    void main(){}"
  status: SyntaxError
  stderr: 'b''/tmp/tmp6jfefxci.d(76): Error: expression expected, not \''unittest\''\n/tmp/tmp6jfefxci.d(77):
    Error: found \''{\'' when expecting \'';\'' following return statement\nFailed:
    ["dmd", "-unittest", "-v", "-o-", "/tmp/tmp6jfefxci.d", "-I/tmp"]\n'''
  stdout: b''
  timestamp: 1659798336
- exit_code: 1
  program: "import std.typecons;\nimport std.math;\n/*\n\n    Given a positive integer\
    \ n, return the count of the numbers of n-digit\n    positive integers that start\
    \ or end with 1.\n    \n*/\nlong starts_one_ends(long n) \n{\n    long count =\
    \ 0;\n    long start = 1;\n    long end = 1;\n    for (long i = 0; i < n; i++)\
    \ {\n        start *= 10;\n        end = end * 10 + 1;\n    }\n    count = end\
    \ - start;\n    return count;\n}\nunittest\n{\n    alias candidate = starts_one_ends;\n\
    \n    assert(candidate(1L) == 1L);\n    assert(candidate(2L) == 18L);\n    assert(candidate(3L)\
    \ == 180L);\n    assert(candidate(4L) == 1800L);\n    assert(candidate(5L) ==\
    \ 18000L);\n}\nvoid main(){}"
  status: SyntaxError
  stderr: 'b''Error: cannot find source code for runtime library file \''object.d\''\n       dmd
    might not be correctly installed. Run \''dmd -man\'' for installation instructions.\nimport
    path[0] = /tmp\nFailed: ["dmd", "-unittest", "-v", "-o-", "/tmp/tmpuhfamcos.d",
    "-I/tmp"]\n'''
  stdout: b''
  timestamp: 1659798336
- exit_code: 1
  program: "import std.typecons;\nimport std.math;\n/*\n\n    Given a positive integer\
    \ n, return the count of the numbers of n-digit\n    positive integers that start\
    \ or end with 1.\n    \n*/\nlong starts_one_ends(long n) \n{\n    long result\
    \ = 0;\n    long start = 1;\n    long end = 1;\n    for (long i = 1; i < n; i++)\
    \ {\n        start *= 10;\n        end *= 10;\n    }\n    end += 1;\n    result\
    \ = end - start;\n    return result;\n}\nunittest\n{\n    alias candidate = starts_one_ends;\n\
    \n    assert(candidate(1L) == 1L);\n    assert(candidate(2L) == 18L);\n    assert(candidate(3L)\
    \ == 180L);\n    assert(candidate(4L) == 1800L);\n    assert(candidate(5L) ==\
    \ 18000L);\n}\nvoid main(){}"
  status: Exception
  stderr: 'b''core.exception.AssertError@/tmp/tmpcm8tqv7m.d(27): unittest failure\n----------------\n??:?
    _d_unittestp [0x427d9d]\n??:? void tmpcm8tqv7m.__unittest_L22_C1() [0x427aa1]\n??:?
    void tmpcm8tqv7m.__modtest() [0x427b20]\n??:? int core.runtime.runModuleUnitTests().__foreachbody2(object.ModuleInfo*)
    [0x42bac3]\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)).__lambda2(immutable(object.ModuleInfo*))
    [0x42a956]\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))).__foreachbody2(ref
    rt.sections_elf_shared.DSO) [0x42fae9]\n??:? int rt.sections_elf_shared.DSO.opApply(scope
    int delegate(ref rt.sections_elf_shared.DSO)) [0x42ff98]\n??:? int rt.minfo.moduleinfos_apply(scope
    int delegate(immutable(object.ModuleInfo*))) [0x42fa75]\n??:? int object.ModuleInfo.opApply(scope
    int delegate(object.ModuleInfo*)) [0x42a92d]\n??:? runModuleUnitTests [0x42b899]\n??:?
    void rt.dmain2._d_run_main(int, char**, extern (C) int function(char[][])*).runAll()
    [0x4281ec]\n??:? void rt.dmain2._d_run_main(int, char**, extern (C) int function(char[][])*).tryExec(scope
    void delegate()) [0x428173]\n??:? _d_run_main [0x4280de]\n??:? main [0x427b33]\n??:?
    __libc_start_main [0xcb9c8554]\n1/1 unittests FAILED\n'''
  stdout: b''
- exit_code: 1
  program: "import std.typecons;\nimport std.math;\n/*\n\n    Given a positive integer\
    \ n, return the count of the numbers of n-digit\n    positive integers that start\
    \ or end with 1.\n    \n*/\nlong starts_one_ends(long n) \n{\n    long count =\
    \ 0;\n    long start = 1;\n    long end = 1;\n    long i = 0;\n    long j = 0;\n\
    \    long k = 0;\n    long l = 0;\n    long m = 0;\n    long o = 0;\n    long\
    \ p = 0;\n    long q = 0;\n    long r = 0;\n    long s = 0;\n    long t = 0;\n\
    \    long u = 0;\n    long v = 0;\n    long w = 0;\n    long x = 0;\n    long\
    \ y = 0;\n    long z = 0;\n    long aa = 0;\n    long ab = 0;\n    long ac = 0;\n\
    \    long ad = 0;\n    long ae = 0;\n    long af = 0;\n    long ag = 0;\n    long\
    \ ah = 0;\n    long ai = 0;\n    long aj = 0;\n    long ak = 0;\n    long al =\
    \ 0;\n    long am = 0;\n    long an = 0;\n    long ao = 0;\n    long ap = 0;\n\
    \    long aq = 0;\n    long ar = 0;\n    long as = 0;\n    long at = 0;\n    long\
    \ au = 0;\n    long av = 0;\n    long aw = 0;\n    long ax = 0;\n    long ay =\
    \ 0;\n    long az = 0;\n    long ba = 0;\n    long bb = 0;\n    long bc = 0;\n\
    \    long bd = 0;\n    long be = 0;\n    long bf = 0;\n    long bg = 0;\n    long\
    \ bh = 0;\n    long bi = 0;\n    long bj = 0;\n    long bk = 0;\n    long bl =\
    \ 0;\n    long bm = 0;\n    long bn = 0;\n    long bo = 0;\n    long bp = 0;\n\
    \    long bq = 0;\n    long br = 0;\n    long bs = 0;\n    long bt = 0;\n    long\
    \ bu = 0;\n    long bv = 0;\n    long bw = 0;\n    long bx =\nunittest\n{\n  \
    \  alias candidate = starts_one_ends;\n\n    assert(candidate(1L) == 1L);\n  \
    \  assert(candidate(2L) == 18L);\n    assert(candidate(3L) == 180L);\n    assert(candidate(4L)\
    \ == 1800L);\n    assert(candidate(5L) == 18000L);\n}\nvoid main(){}"
  status: SyntaxError
  stderr: 'b''/tmp/tmplpupxup3.d(81): Error: expression expected, not `unittest`\n/tmp/tmplpupxup3.d(82):
    Error: semicolon expected, not `{`\n/tmp/tmplpupxup3.d(91): Error: found `End
    of File` when expecting `}` following compound statement\nFailed: ["dmd", "-unittest",
    "-v", "-o-", "/tmp/tmplpupxup3.d", "-I/tmp"]\n'''
  stdout: b''
- exit_code: 1
  program: "import std.typecons;\nimport std.math;\n/*\n\n    Given a positive integer\
    \ n, return the count of the numbers of n-digit\n    positive integers that start\
    \ or end with 1.\n    \n*/\nlong starts_one_ends(long n) \n{\n    long res = 0;\n\
    \    if (n == 1) \n    {\n        res = 1;\n    }\n    else \n    {\n        res\
    \ = (long)pow(10, n - 1) + 9 * (n - 1) * (long)pow(10, n - 2);\n    }\n    return\
    \ res;\n}\nunittest\n{\n    alias candidate = starts_one_ends;\n\n    assert(candidate(1L)\
    \ == 1L);\n    assert(candidate(2L) == 18L);\n    assert(candidate(3L) == 180L);\n\
    \    assert(candidate(4L) == 1800L);\n    assert(candidate(5L) == 18000L);\n}\n\
    void main(){}"
  status: SyntaxError
  stderr: 'b''/tmp/tmpe7h8tmls.d(18): Error: C style cast illegal, use cast(long)pow(10,
    n - 1)\n/tmp/tmpe7h8tmls.d(18): Error: C style cast illegal, use cast(long)pow(10,
    n - 2)\nFailed: ["dmd", "-unittest", "-v", "-o-", "/tmp/tmpe7h8tmls.d", "-I/tmp"]\n'''
  stdout: b''
  timestamp: 1659798337
- exit_code: 1
  program: "import std.typecons;\nimport std.math;\n/*\n\n    Given a positive integer\
    \ n, return the count of the numbers of n-digit\n    positive integers that start\
    \ or end with 1.\n    \n*/\nlong starts_one_ends(long n) \n{\n    if (n <= 1)\n\
    \        return 0;\n    else if (n == 2)\n        return 1;\n    else\n      \
    \  return (long)pow(10, n - 1) + starts_one_ends(n - 1);\n}\nunittest\n{\n   \
    \ alias candidate = starts_one_ends;\n\n    assert(candidate(1L) == 1L);\n   \
    \ assert(candidate(2L) == 18L);\n    assert(candidate(3L) == 180L);\n    assert(candidate(4L)\
    \ == 1800L);\n    assert(candidate(5L) == 18000L);\n}\nvoid main(){}"
  status: SyntaxError
  stderr: 'b''/tmp/tmps3jckfhr.d(16): Error: C style cast illegal, use cast(long)pow(10,
    n - 1)\nFailed: ["dmd", "-unittest", "-v", "-o-", "/tmp/tmps3jckfhr.d", "-I/tmp"]\n'''
  stdout: b''
  timestamp: 1659798336
- exit_code: 1
  program: "import std.typecons;\nimport std.math;\n/*\n\n    Given a positive integer\
    \ n, return the count of the numbers of n-digit\n    positive integers that start\
    \ or end with 1.\n    \n*/\nlong starts_one_ends(long n) \n{\n    long result\
    \ = 0;\n    long max = pow(10, n);\n    for (long i = 1; i < max; i++) {\n   \
    \     if (i % 10 == 1) {\n            result++;\n        }\n    }\n    return\
    \ result;\n}\nunittest\n{\n    alias candidate = starts_one_ends;\n\n    assert(candidate(1L)\
    \ == 1L);\n    assert(candidate(2L) == 18L);\n    assert(candidate(3L) == 180L);\n\
    \    assert(candidate(4L) == 1800L);\n    assert(candidate(5L) == 18000L);\n}\n\
    void main(){}"
  status: SyntaxError
  stderr: 'b''Error: cannot find source code for runtime library file \''object.d\''\n       dmd
    might not be correctly installed. Run \''dmd -man\'' for installation instructions.\nimport
    path[0] = /tmp\nFailed: ["dmd", "-unittest", "-v", "-o-", "/tmp/tmp2ddicb_w.d",
    "-I/tmp"]\n'''
  stdout: b''
  timestamp: 1659798336
- exit_code: 1
  program: "import std.typecons;\nimport std.math;\n/*\n\n    Given a positive integer\
    \ n, return the count of the numbers of n-digit\n    positive integers that start\
    \ or end with 1.\n    \n*/\nlong starts_one_ends(long n) \n{\n    long result\
    \ = 0;\n    long max = pow(10, n);\n    long min = pow(10, n - 1);\n    foreach(i;\
    \ min .. max) {\n        if(i % 10 == 1 || i / 10 == 1) {\n            result++;\n\
    \        }\n    }\n    return result;\n}\nunittest\n{\n    alias candidate = starts_one_ends;\n\
    \n    assert(candidate(1L) == 1L);\n    assert(candidate(2L) == 18L);\n    assert(candidate(3L)\
    \ == 180L);\n    assert(candidate(4L) == 1800L);\n    assert(candidate(5L) ==\
    \ 18000L);\n}\nvoid main(){}"
  status: SyntaxError
  stderr: 'b''Error: cannot find source code for runtime library file \''object.d\''\n       dmd
    might not be correctly installed. Run \''dmd -man\'' for installation instructions.\nimport
    path[0] = /tmp\nFailed: ["dmd", "-unittest", "-v", "-o-", "/tmp/tmpm6ca1ic7.d",
    "-I/tmp"]\n'''
  stdout: b''
  timestamp: 1659798336
- exit_code: 1
  program: "import std.typecons;\nimport std.math;\n/*\n\n    Given a positive integer\
    \ n, return the count of the numbers of n-digit\n    positive integers that start\
    \ or end with 1.\n    \n*/\nlong starts_one_ends(long n) \n{\n    long count =\
    \ 0;\n    long start = 1;\n    long end = 1;\n    long i = 0;\n    long j = 0;\n\
    \    long k = 0;\n    long l = 0;\n    long m = 0;\n    long o = 0;\n    long\
    \ p = 0;\n    long q = 0;\n    long r = 0;\n    long s = 0;\n    long t = 0;\n\
    \    long u = 0;\n    long v = 0;\n    long w = 0;\n    long x = 0;\n    long\
    \ y = 0;\n    long z = 0;\n    long aa = 0;\n    long ab = 0;\n    long ac = 0;\n\
    \    long ad = 0;\n    long ae = 0;\n    long af = 0;\n    long ag = 0;\n    long\
    \ ah = 0;\n    long ai = 0;\n    long aj = 0;\n    long ak = 0;\n    long al =\
    \ 0;\n    long am = 0;\n    long an = 0;\n    long ao = 0;\n    long ap = 0;\n\
    \    long aq = 0;\n    long ar = 0;\n    long as = 0;\n    long at = 0;\n    long\
    \ au = 0;\n    long av = 0;\n    long aw = 0;\n    long ax = 0;\n    long ay =\
    \ 0;\n    long az = 0;\n    long ba = 0;\n    long bb = 0;\n    long bc = 0;\n\
    \    long bd = 0;\n    long be = 0;\n    long bf = 0;\n    long bg = 0;\n    long\
    \ bh = 0;\n    long bi = 0;\n    long bj = 0;\n    long bk = 0;\n    long bl =\
    \ 0;\n    long bm = 0;\n    long bn = 0;\n    long bo = 0;\n    long bp = 0;\n\
    \    long bq = 0;\n    long br = 0;\n    long bs = 0;\n    long bt = 0;\n    long\
    \ bu = 0;\n    long bv = 0;\n    long bw = 0;\n    long bx =\nunittest\n{\n  \
    \  alias candidate = starts_one_ends;\n\n    assert(candidate(1L) == 1L);\n  \
    \  assert(candidate(2L) == 18L);\n    assert(candidate(3L) == 180L);\n    assert(candidate(4L)\
    \ == 1800L);\n    assert(candidate(5L) == 18000L);\n}\nvoid main(){}"
  status: SyntaxError
  stderr: 'b''/tmp/tmplpupxup3.d(81): Error: expression expected, not `unittest`\n/tmp/tmplpupxup3.d(82):
    Error: semicolon expected, not `{`\n/tmp/tmplpupxup3.d(91): Error: found `End
    of File` when expecting `}` following compound statement\nFailed: ["dmd", "-unittest",
    "-v", "-o-", "/tmp/tmplpupxup3.d", "-I/tmp"]\n'''
  stdout: b''
- exit_code: 1
  program: "import std.typecons;\nimport std.math;\n/*\n\n    Given a positive integer\
    \ n, return the count of the numbers of n-digit\n    positive integers that start\
    \ or end with 1.\n    \n*/\nlong starts_one_ends(long n) \n{\n    long count =\
    \ 0;\n    long start = 1;\n    long end = 1;\n    for (long i = 0; i < n; i++)\
    \ {\n        start *= 10;\n        end *= 10;\n    }\n    end += 1;\n    for (long\
    \ i = start; i < end; i++) {\n        if (i % 10 == 1 || i / 10 == 1) {\n    \
    \        count++;\n        }\n    }\n    return count;\n}\nunittest\n{\n    alias\
    \ candidate = starts_one_ends;\n\n    assert(candidate(1L) == 1L);\n    assert(candidate(2L)\
    \ == 18L);\n    assert(candidate(3L) == 180L);\n    assert(candidate(4L) == 1800L);\n\
    \    assert(candidate(5L) == 18000L);\n}\nvoid main(){}"
  status: SyntaxError
  stderr: 'b''Error: cannot find source code for runtime library file \''object.d\''\n       dmd
    might not be correctly installed. Run \''dmd -man\'' for installation instructions.\nimport
    path[0] = /tmp\nFailed: ["dmd", "-unittest", "-v", "-o-", "/tmp/tmpfdtpxbix.d",
    "-I/tmp"]\n'''
  stdout: b''
  timestamp: 1659798336
- exit_code: 1
  program: "import std.typecons;\nimport std.math;\n/*\n\n    Given a positive integer\
    \ n, return the count of the numbers of n-digit\n    positive integers that start\
    \ or end with 1.\n    \n*/\nlong starts_one_ends(long n) \n{\n    if (n == 1)\
    \ \n        return 2;\n    if (n == 2) \n        return 4;\n    return starts_one_ends(n\
    \ - 1) + starts_one_ends(n - 2);\n}\nunittest\n{\n    alias candidate = starts_one_ends;\n\
    \n    assert(candidate(1L) == 1L);\n    assert(candidate(2L) == 18L);\n    assert(candidate(3L)\
    \ == 180L);\n    assert(candidate(4L) == 1800L);\n    assert(candidate(5L) ==\
    \ 18000L);\n}\nvoid main(){}"
  status: SyntaxError
  stderr: 'b''Error: cannot find source code for runtime library file \''object.d\''\n       dmd
    might not be correctly installed. Run \''dmd -man\'' for installation instructions.\nimport
    path[0] = /tmp\nFailed: ["dmd", "-unittest", "-v", "-o-", "/tmp/tmpz85qboa9.d",
    "-I/tmp"]\n'''
  stdout: b''
  timestamp: 1659798337
- exit_code: 1
  program: "import std.typecons;\nimport std.math;\n/*\n\n    Given a positive integer\
    \ n, return the count of the numbers of n-digit\n    positive integers that start\
    \ or end with 1.\n    \n*/\nlong starts_one_ends(long n) \n{\n    long count =\
    \ 0;\n    long start = 1;\n    long end = 1;\n    for (long i = 1; i < n; i++)\
    \ \n    {\n        start *= 10;\n        end *= 10;\n    }\n    count += start;\n\
    \    count += end;\n    count += (start - 1) * 9;\n    return count;\n}\nunittest\n\
    {\n    alias candidate = starts_one_ends;\n\n    assert(candidate(1L) == 1L);\n\
    \    assert(candidate(2L) == 18L);\n    assert(candidate(3L) == 180L);\n    assert(candidate(4L)\
    \ == 1800L);\n    assert(candidate(5L) == 18000L);\n}\nvoid main(){}"
  status: SyntaxError
  stderr: 'b''Error: cannot find source code for runtime library file \''object.d\''\n       dmd
    might not be correctly installed. Run \''dmd -man\'' for installation instructions.\nimport
    path[0] = /tmp\nFailed: ["dmd", "-unittest", "-v", "-o-", "/tmp/tmpzutnmpn2.d",
    "-I/tmp"]\n'''
  stdout: b''
  timestamp: 1659798336
- exit_code: 1
  program: "import std.typecons;\nimport std.math;\n/*\n\n    Given a positive integer\
    \ n, return the count of the numbers of n-digit\n    positive integers that start\
    \ or end with 1.\n    \n*/\nlong starts_one_ends(long n) \n{\n    long result\
    \ = 0;\n    if (n == 1)\n        return 1;\n    else if (n == 2)\n        return\
    \ 10;\n    else if (n == 3)\n        return 100;\n    else if (n == 4)\n     \
    \   return 1000;\n    else if (n == 5)\n        return 10000;\n    else if (n\
    \ == 6)\n        return 100000;\n    else if (n == 7)\n        return 1000000;\n\
    \    else if (n == 8)\n        return 10000000;\n    else if (n == 9)\n      \
    \  return 100000000;\n    else if (n == 10)\n        return 1000000000;\n    else\
    \ if (n == 11)\n        return 10000000000;\n    else if (n == 12)\n        return\
    \ 100000000000;\n    else if (n == 13)\n        return 1000000000000;\n    else\
    \ if (n == 14)\n        return 10000000000000;\n    else if (n == 15)\n      \
    \  return 100000000000000;\n    else if (n == 16)\n        return 1000000000000000;\n\
    \    else if (n == 17)\n        return 10000000000000000;\n    else if (n == 18)\n\
    \        return 100000000000000000;\n    else if (n == 19)\n        return 1000000000000000000;\n\
    \    else if (n == 20)\n        return 10000000000000000000;\n    else if (n ==\
    \ 21)\n        return 100000000000000000000;\n    else if (n == 22)\n        return\
    \ 1000000000000000000000;\n    else if (n == 23)\n        return 10000000000000000000000;\n\
    \    else if (n == 24)\n        return 100000000000000000000000;\n    else if\
    \ (n == 25)\n        return 1000000000000000000000000;\n    else if (n == 26)\n\
    \        return 10000000000000000000000000;\n    else if (n == 27)\n        return\
    \ 100000000000000000000000000;\n    else if (n == 28)\n        return 1000000000000000000000000000;\n\
    \    else if (n == 29)\n        return 10000000000000000000000000000;\n    else\
    \ if (n == 30)\n        return 100000000000000000000000000000;\n    else if (n\
    \ == 31)\n        return 1000000000000000000000000000000;\n    else if (n == 32)\n\
    \        return 10000000000000000000000000000000;\n    else\nunittest\n{\n   \
    \ alias candidate = starts_one_ends;\n\n    assert(candidate(1L) == 1L);\n   \
    \ assert(candidate(2L) == 18L);\n    assert(candidate(3L) == 180L);\n    assert(candidate(4L)\
    \ == 1800L);\n    assert(candidate(5L) == 18000L);\n}\nvoid main(){}"
  status: SyntaxError
  stderr: 'b''/tmp/tmptbe04y89.d(51): Error: signed integer overflow\n/tmp/tmptbe04y89.d(53):
    Error: integer overflow\n/tmp/tmptbe04y89.d(55): Error: integer overflow\n/tmp/tmptbe04y89.d(57):
    Error: integer overflow\n/tmp/tmptbe04y89.d(59): Error: integer overflow\n/tmp/tmptbe04y89.d(61):
    Error: integer overflow\n/tmp/tmptbe04y89.d(63): Error: integer overflow\n/tmp/tmptbe04y89.d(65):
    Error: integer overflow\n/tmp/tmptbe04y89.d(67): Error: integer overflow\n/tmp/tmptbe04y89.d(69):
    Error: integer overflow\n/tmp/tmptbe04y89.d(71): Error: integer overflow\n/tmp/tmptbe04y89.d(73):
    Error: integer overflow\n/tmp/tmptbe04y89.d(75): Error: integer overflow\n/tmp/tmptbe04y89.d(77):
    Error: found \''unittest\'' instead of statement\nFailed: ["dmd", "-unittest",
    "-v", "-o-", "/tmp/tmptbe04y89.d", "-I/tmp"]\n'''
  stdout: b''
  timestamp: 1659798336
- exit_code: 1
  program: "import std.typecons;\nimport std.math;\n/*\n\n    Given a positive integer\
    \ n, return the count of the numbers of n-digit\n    positive integers that start\
    \ or end with 1.\n    \n*/\nlong starts_one_ends(long n) \n{\n    long count =\
    \ 0;\n    long i = 1;\n    long j = 1;\n    long k = 1;\n    long l = 1;\n   \
    \ long m = 1;\n    long o = 1;\n    long p = 1;\n    long q = 1;\n    long r =\
    \ 1;\n    long s = 1;\n    long t = 1;\n    long u = 1;\n    long v = 1;\n   \
    \ long w = 1;\n    long x = 1;\n    long y = 1;\n    long z = 1;\n    long aa\
    \ = 1;\n    long ab = 1;\n    long ac = 1;\n    long ad = 1;\n    long ae = 1;\n\
    \    long af = 1;\n    long ag = 1;\n    long ah = 1;\n    long ai = 1;\n    long\
    \ aj = 1;\n    long ak = 1;\n    long al = 1;\n    long am = 1;\n    long an =\
    \ 1;\n    long ao = 1;\n    long ap = 1;\n    long aq = 1;\n    long ar = 1;\n\
    \    long as = 1;\n    long at = 1;\n    long au = 1;\n    long av = 1;\n    long\
    \ aw = 1;\n    long ax = 1;\n    long ay = 1;\n    long az = 1;\n    long ba =\
    \ 1;\n    long bb = 1;\n    long bc = 1;\n    long bd = 1;\n    long be = 1;\n\
    \    long bf = 1;\n    long bg = 1;\n    long bh = 1;\n    long bi = 1;\n    long\
    \ bj = 1;\n    long bk = 1;\n    long bl = 1;\n    long bm = 1;\n    long bn =\
    \ 1;\n    long bo = 1;\n    long bp = 1;\n    long bq = 1;\n    long br = 1;\n\
    \    long bs = 1;\n    long bt = 1;\n    long bu = 1;\n    long bv = 1;\n    long\
    \ bw = 1;\n    long bx = 1;\n    long by = 1;\n    long bz\nunittest\n{\n    alias\
    \ candidate = starts_one_ends;\n\n    assert(candidate(1L) == 1L);\n    assert(candidate(2L)\
    \ == 18L);\n    assert(candidate(3L) == 180L);\n    assert(candidate(4L) == 1800L);\n\
    \    assert(candidate(5L) == 18000L);\n}\nvoid main(){}"
  status: SyntaxError
  stderr: 'b''/tmp/tmprp8mehx3.d(81): Error: semicolon expected, not \''unittest\''\n/tmp/tmprp8mehx3.d(81):
    Error: found \''unittest\'' instead of statement\nFailed: ["dmd", "-unittest",
    "-v", "-o-", "/tmp/tmprp8mehx3.d", "-I/tmp"]\n'''
  stdout: b''
  timestamp: 1659798337
- exit_code: 1
  program: "import std.typecons;\nimport std.math;\n/*\n\n    Given a positive integer\
    \ n, return the count of the numbers of n-digit\n    positive integers that start\
    \ or end with 1.\n    \n*/\nlong starts_one_ends(long n) \n{\n    long result\
    \ = 0;\n    long i = 1;\n    while (i <= n) \n    {\n        result += pow(10,\
    \ i - 1);\n        i++;\n    }\n    return result;\n}\nunittest\n{\n    alias\
    \ candidate = starts_one_ends;\n\n    assert(candidate(1L) == 1L);\n    assert(candidate(2L)\
    \ == 18L);\n    assert(candidate(3L) == 180L);\n    assert(candidate(4L) == 1800L);\n\
    \    assert(candidate(5L) == 18000L);\n}\nvoid main(){}"
  status: SyntaxError
  stderr: 'b''Error: cannot find source code for runtime library file \''object.d\''\n       dmd
    might not be correctly installed. Run \''dmd -man\'' for installation instructions.\nimport
    path[0] = /tmp\nFailed: ["dmd", "-unittest", "-v", "-o-", "/tmp/tmplx3plrtq.d",
    "-I/tmp"]\n'''
  stdout: b''
  timestamp: 1659798336
- exit_code: 1
  program: "import std.typecons;\nimport std.math;\n/*\n\n    Given a positive integer\
    \ n, return the count of the numbers of n-digit\n    positive integers that start\
    \ or end with 1.\n    \n*/\nlong starts_one_ends(long n) \n{\n    long result\
    \ = 0;\n    long start = 1;\n    long end = 1;\n    for (long i = 1; i < n; i++)\
    \ {\n        start *= 10;\n        end *= 10;\n    }\n    result += start;\n \
    \   result += end;\n    result += (start - 1) * (n - 1);\n    return result;\n\
    }\nunittest\n{\n    alias candidate = starts_one_ends;\n\n    assert(candidate(1L)\
    \ == 1L);\n    assert(candidate(2L) == 18L);\n    assert(candidate(3L) == 180L);\n\
    \    assert(candidate(4L) == 1800L);\n    assert(candidate(5L) == 18000L);\n}\n\
    void main(){}"
  status: SyntaxError
  stderr: 'b''Error: cannot find source code for runtime library file \''object.d\''\n       dmd
    might not be correctly installed. Run \''dmd -man\'' for installation instructions.\nimport
    path[0] = /tmp\nFailed: ["dmd", "-unittest", "-v", "-o-", "/tmp/tmpsc_auuse.d",
    "-I/tmp"]\n'''
  stdout: b''
  timestamp: 1659798336
- exit_code: 1
  program: "import std.typecons;\nimport std.math;\n/*\n\n    Given a positive integer\
    \ n, return the count of the numbers of n-digit\n    positive integers that start\
    \ or end with 1.\n    \n*/\nlong starts_one_ends(long n) \n{\n    long count =\
    \ 0;\n    long start = 1;\n    long end = 1;\n    long i = 0;\n    long j = 0;\n\
    \    long k = 0;\n    long l = 0;\n    long m = 0;\n    long o = 0;\n    long\
    \ p = 0;\n    long q = 0;\n    long r = 0;\n    long s = 0;\n    long t = 0;\n\
    \    long u = 0;\n    long v = 0;\n    long w = 0;\n    long x = 0;\n    long\
    \ y = 0;\n    long z = 0;\n    long aa = 0;\n    long ab = 0;\n    long ac = 0;\n\
    \    long ad = 0;\n    long ae = 0;\n    long af = 0;\n    long ag = 0;\n    long\
    \ ah = 0;\n    long ai = 0;\n    long aj = 0;\n    long ak = 0;\n    long al =\
    \ 0;\n    long am = 0;\n    long an = 0;\n    long ao = 0;\n    long ap = 0;\n\
    \    long aq = 0;\n    long ar = 0;\n    long as = 0;\n    long at = 0;\n    long\
    \ au = 0;\n    long av = 0;\n    long aw = 0;\n    long ax = 0;\n    long ay =\
    \ 0;\n    long az = 0;\n    long ba = 0;\n    long bb = 0;\n    long bc = 0;\n\
    \    long bd = 0;\n    long be = 0;\n    long bf = 0;\n    long bg = 0;\n    long\
    \ bh = 0;\n    long bi = 0;\n    long bj = 0;\n    long bk = 0;\n    long bl =\
    \ 0;\n    long bm = 0;\n    long bn = 0;\n    long bo = 0;\n    long bp = 0;\n\
    \    long bq = 0;\n    long br = 0;\n    long bs = 0;\n    long bt = 0;\n    long\
    \ bu = 0;\n    long bv = 0;\n    long bw = 0;\n    long bx =\nunittest\n{\n  \
    \  alias candidate = starts_one_ends;\n\n    assert(candidate(1L) == 1L);\n  \
    \  assert(candidate(2L) == 18L);\n    assert(candidate(3L) == 180L);\n    assert(candidate(4L)\
    \ == 1800L);\n    assert(candidate(5L) == 18000L);\n}\nvoid main(){}"
  status: SyntaxError
  stderr: 'b''/tmp/tmplpupxup3.d(81): Error: expression expected, not `unittest`\n/tmp/tmplpupxup3.d(82):
    Error: semicolon expected, not `{`\n/tmp/tmplpupxup3.d(91): Error: found `End
    of File` when expecting `}` following compound statement\nFailed: ["dmd", "-unittest",
    "-v", "-o-", "/tmp/tmplpupxup3.d", "-I/tmp"]\n'''
  stdout: b''
- exit_code: 1
  program: "import std.typecons;\nimport std.math;\n/*\n\n    Given a positive integer\
    \ n, return the count of the numbers of n-digit\n    positive integers that start\
    \ or end with 1.\n    \n*/\nlong starts_one_ends(long n) \n{\n    long count =\
    \ 0;\n    for (long i = 1; i <= n; i++) {\n        count += pow(10, i - 1);\n\
    \    }\n    return count;\n}\nunittest\n{\n    alias candidate = starts_one_ends;\n\
    \n    assert(candidate(1L) == 1L);\n    assert(candidate(2L) == 18L);\n    assert(candidate(3L)\
    \ == 180L);\n    assert(candidate(4L) == 1800L);\n    assert(candidate(5L) ==\
    \ 18000L);\n}\nvoid main(){}"
  status: SyntaxError
  stderr: 'b''Error: cannot find source code for runtime library file \''object.d\''\n       dmd
    might not be correctly installed. Run \''dmd -man\'' for installation instructions.\nimport
    path[0] = /tmp\nFailed: ["dmd", "-unittest", "-v", "-o-", "/tmp/tmpkeiyd9qy.d",
    "-I/tmp"]\n'''
  stdout: b''
  timestamp: 1659798337
- exit_code: 1
  program: "import std.typecons;\nimport std.math;\n/*\n\n    Given a positive integer\
    \ n, return the count of the numbers of n-digit\n    positive integers that start\
    \ or end with 1.\n    \n*/\nlong starts_one_ends(long n) \n{\n    long result\
    \ = 0;\n    long limit = pow(10, n);\n    foreach(i; 1 .. limit)\n    {\n    \
    \    if(i % 10 == 1)\n            result++;\n        if(i / 10 == 1)\n       \
    \     result++;\n    }\n    return result;\n}\nunittest\n{\n    alias candidate\
    \ = starts_one_ends;\n\n    assert(candidate(1L) == 1L);\n    assert(candidate(2L)\
    \ == 18L);\n    assert(candidate(3L) == 180L);\n    assert(candidate(4L) == 1800L);\n\
    \    assert(candidate(5L) == 18000L);\n}\nvoid main(){}"
  status: SyntaxError
  stderr: 'b''Error: cannot find source code for runtime library file \''object.d\''\n       dmd
    might not be correctly installed. Run \''dmd -man\'' for installation instructions.\nimport
    path[0] = /tmp\nFailed: ["dmd", "-unittest", "-v", "-o-", "/tmp/tmpsr5snq96.d",
    "-I/tmp"]\n'''
  stdout: b''
  timestamp: 1659798337
- exit_code: 1
  program: "import std.typecons;\nimport std.math;\n/*\n\n    Given a positive integer\
    \ n, return the count of the numbers of n-digit\n    positive integers that start\
    \ or end with 1.\n    \n*/\nlong starts_one_ends(long n) \n{\n    long result\
    \ = 0;\n    long start = 1;\n    long end = 1;\n    for (long i = 1; i < n; i++)\
    \ {\n        start *= 10;\n        end *= 10;\n    }\n    result += start;\n \
    \   result += end;\n    result += (start - 1) * (n - 1);\n    return result;\n\
    }\nunittest\n{\n    alias candidate = starts_one_ends;\n\n    assert(candidate(1L)\
    \ == 1L);\n    assert(candidate(2L) == 18L);\n    assert(candidate(3L) == 180L);\n\
    \    assert(candidate(4L) == 1800L);\n    assert(candidate(5L) == 18000L);\n}\n\
    void main(){}"
  status: SyntaxError
  stderr: 'b''Error: cannot find source code for runtime library file \''object.d\''\n       dmd
    might not be correctly installed. Run \''dmd -man\'' for installation instructions.\nimport
    path[0] = /tmp\nFailed: ["dmd", "-unittest", "-v", "-o-", "/tmp/tmpsc_auuse.d",
    "-I/tmp"]\n'''
  stdout: b''
  timestamp: 1659798336
- exit_code: 1
  program: "import std.typecons;\nimport std.math;\n/*\n\n    Given a positive integer\
    \ n, return the count of the numbers of n-digit\n    positive integers that start\
    \ or end with 1.\n    \n*/\nlong starts_one_ends(long n) \n{\n    if (n == 1)\
    \ return 1;\n    if (n == 2) return 2;\n    if (n == 3) return 4;\n    if (n ==\
    \ 4) return 8;\n    if (n == 5) return 16;\n    if (n == 6) return 32;\n    if\
    \ (n == 7) return 64;\n    if (n == 8) return 128;\n    if (n == 9) return 256;\n\
    \    if (n == 10) return 512;\n    if (n == 11) return 1024;\n    if (n == 12)\
    \ return 2048;\n    if (n == 13) return 4096;\n    if (n == 14) return 8192;\n\
    \    if (n == 15) return 16384;\n    if (n == 16) return 32768;\n    if (n ==\
    \ 17) return 65536;\n    if (n == 18) return 131072;\n    if (n == 19) return\
    \ 262144;\n    if (n == 20) return 524288;\n    if (n == 21) return 1048576;\n\
    \    if (n == 22) return 2097152;\n    if (n == 23) return 4194304;\n    if (n\
    \ == 24) return 8388608;\n    if (n == 25) return 16777216;\n    if (n == 26)\
    \ return 33554432;\n    if (n == 27) return 67108864;\n    if (n == 28) return\
    \ 134217728;\n    if (n == 29) return 268435456;\n    if (n == 30) return 536870912;\n\
    \    if (n == 31) return 1073741824;\n    if (n == 32) return 2147483648;\n  \
    \  if (n == 33) return 4294967296;\n    if (n == 34) return 8589934592;\n    if\
    \ (n == 35) return 17179869184;\n    if (n == 36) return 34359738368;\n    if\
    \ (n == 37) return 68719476736;\n    if (n == 38) return 137438953472;\n    if\
    \ (n == 39) return 274877906944;\n    if (n == 40) return\nunittest\n{\n    alias\
    \ candidate = starts_one_ends;\n\n    assert(candidate(1L) == 1L);\n    assert(candidate(2L)\
    \ == 18L);\n    assert(candidate(3L) == 180L);\n    assert(candidate(4L) == 1800L);\n\
    \    assert(candidate(5L) == 18000L);\n}\nvoid main(){}"
  status: SyntaxError
  stderr: 'b''/tmp/tmpc5s9f45u.d(51): Error: expression expected, not \''unittest\''\n/tmp/tmpc5s9f45u.d(52):
    Error: found \''{\'' when expecting \'';\'' following return statement\nFailed:
    ["dmd", "-unittest", "-v", "-o-", "/tmp/tmpc5s9f45u.d", "-I/tmp"]\n'''
  stdout: b''
  timestamp: 1659798336
- exit_code: 1
  program: "import std.typecons;\nimport std.math;\n/*\n\n    Given a positive integer\
    \ n, return the count of the numbers of n-digit\n    positive integers that start\
    \ or end with 1.\n    \n*/\nlong starts_one_ends(long n) \n{\n    long result\
    \ = 0;\n    if (n == 1)\n        return 1;\n    else if (n == 2)\n        return\
    \ 10;\n    else\n    {\n        result = starts_one_ends(n - 1) + starts_one_ends(n\
    \ - 2);\n        return result;\n    }\n}\nunittest\n{\n    alias candidate =\
    \ starts_one_ends;\n\n    assert(candidate(1L) == 1L);\n    assert(candidate(2L)\
    \ == 18L);\n    assert(candidate(3L) == 180L);\n    assert(candidate(4L) == 1800L);\n\
    \    assert(candidate(5L) == 18000L);\n}\nvoid main(){}"
  status: Exception
  stderr: 'b''core.exception.AssertError@/tmp/tmpb4h5d63v.d(27): unittest failure\n----------------\n??:?
    _d_unittestp [0x427d9d]\n??:? void tmpb4h5d63v.__unittest_L22_C1() [0x427a9d]\n??:?
    void tmpb4h5d63v.__modtest() [0x427b1c]\n??:? int core.runtime.runModuleUnitTests().__foreachbody2(object.ModuleInfo*)
    [0x42bac3]\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)).__lambda2(immutable(object.ModuleInfo*))
    [0x42a956]\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))).__foreachbody2(ref
    rt.sections_elf_shared.DSO) [0x42fae9]\n??:? int rt.sections_elf_shared.DSO.opApply(scope
    int delegate(ref rt.sections_elf_shared.DSO)) [0x42ff98]\n??:? int rt.minfo.moduleinfos_apply(scope
    int delegate(immutable(object.ModuleInfo*))) [0x42fa75]\n??:? int object.ModuleInfo.opApply(scope
    int delegate(object.ModuleInfo*)) [0x42a92d]\n??:? runModuleUnitTests [0x42b899]\n??:?
    void rt.dmain2._d_run_main(int, char**, extern (C) int function(char[][])*).runAll()
    [0x4281ec]\n??:? void rt.dmain2._d_run_main(int, char**, extern (C) int function(char[][])*).tryExec(scope
    void delegate()) [0x428173]\n??:? _d_run_main [0x4280de]\n??:? main [0x427b2f]\n??:?
    __libc_start_main [0x3436b554]\n1/1 unittests FAILED\n'''
  stdout: b''
- exit_code: 1
  program: "import std.typecons;\nimport std.math;\n/*\n\n    Given a positive integer\
    \ n, return the count of the numbers of n-digit\n    positive integers that start\
    \ or end with 1.\n    \n*/\nlong starts_one_ends(long n) \n{\n    long result\
    \ = 0;\n    if (n == 1)\n        return 1;\n    else if (n == 2)\n        return\
    \ 10;\n    else\n    {\n        result = starts_one_ends(n - 1) + starts_one_ends(n\
    \ - 2);\n        return result;\n    }\n}\nunittest\n{\n    alias candidate =\
    \ starts_one_ends;\n\n    assert(candidate(1L) == 1L);\n    assert(candidate(2L)\
    \ == 18L);\n    assert(candidate(3L) == 180L);\n    assert(candidate(4L) == 1800L);\n\
    \    assert(candidate(5L) == 18000L);\n}\nvoid main(){}"
  status: Exception
  stderr: 'b''core.exception.AssertError@/tmp/tmpb4h5d63v.d(27): unittest failure\n----------------\n??:?
    _d_unittestp [0x427d9d]\n??:? void tmpb4h5d63v.__unittest_L22_C1() [0x427a9d]\n??:?
    void tmpb4h5d63v.__modtest() [0x427b1c]\n??:? int core.runtime.runModuleUnitTests().__foreachbody2(object.ModuleInfo*)
    [0x42bac3]\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)).__lambda2(immutable(object.ModuleInfo*))
    [0x42a956]\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))).__foreachbody2(ref
    rt.sections_elf_shared.DSO) [0x42fae9]\n??:? int rt.sections_elf_shared.DSO.opApply(scope
    int delegate(ref rt.sections_elf_shared.DSO)) [0x42ff98]\n??:? int rt.minfo.moduleinfos_apply(scope
    int delegate(immutable(object.ModuleInfo*))) [0x42fa75]\n??:? int object.ModuleInfo.opApply(scope
    int delegate(object.ModuleInfo*)) [0x42a92d]\n??:? runModuleUnitTests [0x42b899]\n??:?
    void rt.dmain2._d_run_main(int, char**, extern (C) int function(char[][])*).runAll()
    [0x4281ec]\n??:? void rt.dmain2._d_run_main(int, char**, extern (C) int function(char[][])*).tryExec(scope
    void delegate()) [0x428173]\n??:? _d_run_main [0x4280de]\n??:? main [0x427b2f]\n??:?
    __libc_start_main [0x3436b554]\n1/1 unittests FAILED\n'''
  stdout: b''
- exit_code: 1
  program: "import std.typecons;\nimport std.math;\n/*\n\n    Given a positive integer\
    \ n, return the count of the numbers of n-digit\n    positive integers that start\
    \ or end with 1.\n    \n*/\nlong starts_one_ends(long n) \n{\n    if (n == 1)\n\
    \        return 1;\n    else if (n == 2)\n        return 10;\n    else\n    {\n\
    \        long result = 0;\n        for (long i = 1; i < n; i++)\n        {\n \
    \           result += starts_one_ends(i) * pow(10, n - i);\n        }\n      \
    \  result += pow(10, n - 1);\n        return result;\n    }\n}\nunittest\n{\n\
    \    alias candidate = starts_one_ends;\n\n    assert(candidate(1L) == 1L);\n\
    \    assert(candidate(2L) == 18L);\n    assert(candidate(3L) == 180L);\n    assert(candidate(4L)\
    \ == 1800L);\n    assert(candidate(5L) == 18000L);\n}\nvoid main(){}"
  status: SyntaxError
  stderr: 'b''Error: cannot find source code for runtime library file \''object.d\''\n       dmd
    might not be correctly installed. Run \''dmd -man\'' for installation instructions.\nimport
    path[0] = /tmp\nFailed: ["dmd", "-unittest", "-v", "-o-", "/tmp/tmpqz1yur11.d",
    "-I/tmp"]\n'''
  stdout: b''
  timestamp: 1659798337
- exit_code: 1
  program: "import std.typecons;\nimport std.math;\n/*\n\n    Given a positive integer\
    \ n, return the count of the numbers of n-digit\n    positive integers that start\
    \ or end with 1.\n    \n*/\nlong starts_one_ends(long n) \n{\n    long result\
    \ = 0;\n    long max = pow(10, n);\n    for (long i = 1; i < max; i++) {\n   \
    \     string s = to!string(i);\n        if (s[0] == '1' || s[$-1] == '1') {\n\
    \            result++;\n        }\n    }\n    return result;\n}\nunittest\n{\n\
    \    alias candidate = starts_one_ends;\n\n    assert(candidate(1L) == 1L);\n\
    \    assert(candidate(2L) == 18L);\n    assert(candidate(3L) == 180L);\n    assert(candidate(4L)\
    \ == 1800L);\n    assert(candidate(5L) == 18000L);\n}\nvoid main(){}"
  status: SyntaxError
  stderr: 'b''Error: cannot find source code for runtime library file \''object.d\''\n       dmd
    might not be correctly installed. Run \''dmd -man\'' for installation instructions.\nimport
    path[0] = /tmp\nFailed: ["dmd", "-unittest", "-v", "-o-", "/tmp/tmp5ec__2om.d",
    "-I/tmp"]\n'''
  stdout: b''
  timestamp: 1659798337
- exit_code: 1
  program: "import std.typecons;\nimport std.math;\n/*\n\n    Given a positive integer\
    \ n, return the count of the numbers of n-digit\n    positive integers that start\
    \ or end with 1.\n    \n*/\nlong starts_one_ends(long n) \n{\n    long count =\
    \ 0;\n    long start = 1;\n    long end = 1;\n    for (long i = 1; i < n; i++)\
    \ {\n        start *= 10;\n        end *= 10;\n    }\n    count += start;\n  \
    \  count += end;\n    count += (start - 1) * (n - 2) * 9;\n    return count;\n\
    }\nunittest\n{\n    alias candidate = starts_one_ends;\n\n    assert(candidate(1L)\
    \ == 1L);\n    assert(candidate(2L) == 18L);\n    assert(candidate(3L) == 180L);\n\
    \    assert(candidate(4L) == 1800L);\n    assert(candidate(5L) == 18000L);\n}\n\
    void main(){}"
  status: SyntaxError
  stderr: 'b''Error: cannot find source code for runtime library file \''object.d\''\n       dmd
    might not be correctly installed. Run \''dmd -man\'' for installation instructions.\nimport
    path[0] = /tmp\nFailed: ["dmd", "-unittest", "-v", "-o-", "/tmp/tmpj3yehe6q.d",
    "-I/tmp"]\n'''
  stdout: b''
  timestamp: 1659798336
- exit_code: 1
  program: "import std.typecons;\nimport std.math;\n/*\n\n    Given a positive integer\
    \ n, return the count of the numbers of n-digit\n    positive integers that start\
    \ or end with 1.\n    \n*/\nlong starts_one_ends(long n) \n{\n    long result\
    \ = 0;\n    long start = 1;\n    long end = 1;\n    for (long i = 0; i < n; i++)\
    \ {\n        start *= 10;\n        end *= 10;\n    }\n    start /= 10;\n    end\
    \ -= 1;\n    result = end - start + 1;\n    return result;\n}\nunittest\n{\n \
    \   alias candidate = starts_one_ends;\n\n    assert(candidate(1L) == 1L);\n \
    \   assert(candidate(2L) == 18L);\n    assert(candidate(3L) == 180L);\n    assert(candidate(4L)\
    \ == 1800L);\n    assert(candidate(5L) == 18000L);\n}\nvoid main(){}"
  status: Exception
  stderr: 'b''core.exception.AssertError@/tmp/tmpjx4yezdq.d(27): unittest failure\n----------------\n??:?
    _d_unittestp [0x427dad]\n??:? void tmpjx4yezdq.__unittest_L23_C1() [0x427a90]\n??:?
    void tmpjx4yezdq.__modtest() [0x427b30]\n??:? int core.runtime.runModuleUnitTests().__foreachbody2(object.ModuleInfo*)
    [0x42bad3]\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)).__lambda2(immutable(object.ModuleInfo*))
    [0x42a966]\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))).__foreachbody2(ref
    rt.sections_elf_shared.DSO) [0x42faf9]\n??:? int rt.sections_elf_shared.DSO.opApply(scope
    int delegate(ref rt.sections_elf_shared.DSO)) [0x42ffa8]\n??:? int rt.minfo.moduleinfos_apply(scope
    int delegate(immutable(object.ModuleInfo*))) [0x42fa85]\n??:? int object.ModuleInfo.opApply(scope
    int delegate(object.ModuleInfo*)) [0x42a93d]\n??:? runModuleUnitTests [0x42b8a9]\n??:?
    void rt.dmain2._d_run_main(int, char**, extern (C) int function(char[][])*).runAll()
    [0x4281fc]\n??:? void rt.dmain2._d_run_main(int, char**, extern (C) int function(char[][])*).tryExec(scope
    void delegate()) [0x428183]\n??:? _d_run_main [0x4280ee]\n??:? main [0x427b43]\n??:?
    __libc_start_main [0x7d8a9554]\n1/1 unittests FAILED\n'''
  stdout: b''
- exit_code: 1
  program: "import std.typecons;\nimport std.math;\n/*\n\n    Given a positive integer\
    \ n, return the count of the numbers of n-digit\n    positive integers that start\
    \ or end with 1.\n    \n*/\nlong starts_one_ends(long n) \n{\n    long result\
    \ = 0;\n    long start = 1;\n    long end = 1;\n    for (long i = 0; i < n; i++)\
    \ {\n        start *= 10;\n        end *= 10;\n    }\n    start /= 10;\n    end\
    \ -= 1;\n    result = end - start + 1;\n    return result;\n}\nunittest\n{\n \
    \   alias candidate = starts_one_ends;\n\n    assert(candidate(1L) == 1L);\n \
    \   assert(candidate(2L) == 18L);\n    assert(candidate(3L) == 180L);\n    assert(candidate(4L)\
    \ == 1800L);\n    assert(candidate(5L) == 18000L);\n}\nvoid main(){}"
  status: Exception
  stderr: 'b''core.exception.AssertError@/tmp/tmpjx4yezdq.d(27): unittest failure\n----------------\n??:?
    _d_unittestp [0x427dad]\n??:? void tmpjx4yezdq.__unittest_L23_C1() [0x427a90]\n??:?
    void tmpjx4yezdq.__modtest() [0x427b30]\n??:? int core.runtime.runModuleUnitTests().__foreachbody2(object.ModuleInfo*)
    [0x42bad3]\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)).__lambda2(immutable(object.ModuleInfo*))
    [0x42a966]\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))).__foreachbody2(ref
    rt.sections_elf_shared.DSO) [0x42faf9]\n??:? int rt.sections_elf_shared.DSO.opApply(scope
    int delegate(ref rt.sections_elf_shared.DSO)) [0x42ffa8]\n??:? int rt.minfo.moduleinfos_apply(scope
    int delegate(immutable(object.ModuleInfo*))) [0x42fa85]\n??:? int object.ModuleInfo.opApply(scope
    int delegate(object.ModuleInfo*)) [0x42a93d]\n??:? runModuleUnitTests [0x42b8a9]\n??:?
    void rt.dmain2._d_run_main(int, char**, extern (C) int function(char[][])*).runAll()
    [0x4281fc]\n??:? void rt.dmain2._d_run_main(int, char**, extern (C) int function(char[][])*).tryExec(scope
    void delegate()) [0x428183]\n??:? _d_run_main [0x4280ee]\n??:? main [0x427b43]\n??:?
    __libc_start_main [0x7d8a9554]\n1/1 unittests FAILED\n'''
  stdout: b''
- exit_code: 1
  program: "import std.typecons;\nimport std.math;\n/*\n\n    Given a positive integer\
    \ n, return the count of the numbers of n-digit\n    positive integers that start\
    \ or end with 1.\n    \n*/\nlong starts_one_ends(long n) \n{\n    long result\
    \ = 0;\n    long start = 1;\n    long end = 1;\n    for (long i = 0; i < n; i++)\
    \ {\n        start *= 10;\n        end *= 10;\n    }\n    start /= 10;\n    end\
    \ -= 1;\n    result = end - start + 1;\n    return result;\n}\nunittest\n{\n \
    \   alias candidate = starts_one_ends;\n\n    assert(candidate(1L) == 1L);\n \
    \   assert(candidate(2L) == 18L);\n    assert(candidate(3L) == 180L);\n    assert(candidate(4L)\
    \ == 1800L);\n    assert(candidate(5L) == 18000L);\n}\nvoid main(){}"
  status: Exception
  stderr: 'b''core.exception.AssertError@/tmp/tmpjx4yezdq.d(27): unittest failure\n----------------\n??:?
    _d_unittestp [0x427dad]\n??:? void tmpjx4yezdq.__unittest_L23_C1() [0x427a90]\n??:?
    void tmpjx4yezdq.__modtest() [0x427b30]\n??:? int core.runtime.runModuleUnitTests().__foreachbody2(object.ModuleInfo*)
    [0x42bad3]\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)).__lambda2(immutable(object.ModuleInfo*))
    [0x42a966]\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))).__foreachbody2(ref
    rt.sections_elf_shared.DSO) [0x42faf9]\n??:? int rt.sections_elf_shared.DSO.opApply(scope
    int delegate(ref rt.sections_elf_shared.DSO)) [0x42ffa8]\n??:? int rt.minfo.moduleinfos_apply(scope
    int delegate(immutable(object.ModuleInfo*))) [0x42fa85]\n??:? int object.ModuleInfo.opApply(scope
    int delegate(object.ModuleInfo*)) [0x42a93d]\n??:? runModuleUnitTests [0x42b8a9]\n??:?
    void rt.dmain2._d_run_main(int, char**, extern (C) int function(char[][])*).runAll()
    [0x4281fc]\n??:? void rt.dmain2._d_run_main(int, char**, extern (C) int function(char[][])*).tryExec(scope
    void delegate()) [0x428183]\n??:? _d_run_main [0x4280ee]\n??:? main [0x427b43]\n??:?
    __libc_start_main [0x7d8a9554]\n1/1 unittests FAILED\n'''
  stdout: b''
- exit_code: 1
  program: "import std.typecons;\nimport std.math;\n/*\n\n    Given a positive integer\
    \ n, return the count of the numbers of n-digit\n    positive integers that start\
    \ or end with 1.\n    \n*/\nlong starts_one_ends(long n) \n{\n    long result\
    \ = 0;\n    if (n == 1)\n        return 1;\n    else if (n == 2)\n        return\
    \ 10;\n    else if (n == 3)\n        return 100;\n    else if (n == 4)\n     \
    \   return 1000;\n    else if (n == 5)\n        return 10000;\n    else if (n\
    \ == 6)\n        return 100000;\n    else if (n == 7)\n        return 1000000;\n\
    \    else if (n == 8)\n        return 10000000;\n    else if (n == 9)\n      \
    \  return 100000000;\n    else if (n == 10)\n        return 1000000000;\n    else\
    \ if (n == 11)\n        return 10000000000;\n    else if (n == 12)\n        return\
    \ 100000000000;\n    else if (n == 13)\n        return 1000000000000;\n    else\
    \ if (n == 14)\n        return 10000000000000;\n    else if (n == 15)\n      \
    \  return 100000000000000;\n    else if (n == 16)\n        return 1000000000000000;\n\
    \    else if (n == 17)\n        return 10000000000000000;\n    else if (n == 18)\n\
    \        return 100000000000000000;\n    else if (n == 19)\n        return 1000000000000000000;\n\
    \    else if (n == 20)\n        return 10000000000000000000;\n    else if (n ==\
    \ 21)\n        return 100000000000000000000;\n    else if (n == 22)\n        return\
    \ 1000000000000000000000;\n    else if (n == 23)\n        return 10000000000000000000000;\n\
    \    else if (n == 24)\n        return 100000000000000000000000;\n    else if\
    \ (n == 25)\n        return 1000000000000000000000000;\n    else if (n == 26)\n\
    \        return 10000000000000000000000000;\n    else if (n == 27)\n        return\
    \ 100000000000000000000000000;\n    else if (n == 28)\n        return 1000000000000000000000000000;\n\
    \    else if (n == 29)\n        return 10000000000000000000000000000;\n    else\
    \ if (n == 30)\n        return 100000000000000000000000000000;\n    else if (n\
    \ == 31)\n        return 1000000000000000000000000000000;\n    else if (n == 32)\n\
    \        return 10000000000000000000000000000000;\n    else\nunittest\n{\n   \
    \ alias candidate = starts_one_ends;\n\n    assert(candidate(1L) == 1L);\n   \
    \ assert(candidate(2L) == 18L);\n    assert(candidate(3L) == 180L);\n    assert(candidate(4L)\
    \ == 1800L);\n    assert(candidate(5L) == 18000L);\n}\nvoid main(){}"
  status: SyntaxError
  stderr: 'b''/tmp/tmptbe04y89.d(51): Error: signed integer overflow\n/tmp/tmptbe04y89.d(53):
    Error: integer overflow\n/tmp/tmptbe04y89.d(55): Error: integer overflow\n/tmp/tmptbe04y89.d(57):
    Error: integer overflow\n/tmp/tmptbe04y89.d(59): Error: integer overflow\n/tmp/tmptbe04y89.d(61):
    Error: integer overflow\n/tmp/tmptbe04y89.d(63): Error: integer overflow\n/tmp/tmptbe04y89.d(65):
    Error: integer overflow\n/tmp/tmptbe04y89.d(67): Error: integer overflow\n/tmp/tmptbe04y89.d(69):
    Error: integer overflow\n/tmp/tmptbe04y89.d(71): Error: integer overflow\n/tmp/tmptbe04y89.d(73):
    Error: integer overflow\n/tmp/tmptbe04y89.d(75): Error: integer overflow\n/tmp/tmptbe04y89.d(77):
    Error: found \''unittest\'' instead of statement\nFailed: ["dmd", "-unittest",
    "-v", "-o-", "/tmp/tmptbe04y89.d", "-I/tmp"]\n'''
  stdout: b''
  timestamp: 1659798336
- exit_code: 1
  program: "import std.typecons;\nimport std.math;\n/*\n\n    Given a positive integer\
    \ n, return the count of the numbers of n-digit\n    positive integers that start\
    \ or end with 1.\n    \n*/\nlong starts_one_ends(long n) \n{\n    long count =\
    \ 0;\n    long start = 1;\n    long end = 1;\n    for (long i = 0; i < n; i++)\
    \ {\n        start *= 10;\n        end *= 10;\n    }\n    start /= 10;\n    end\
    \ -= 1;\n    count = end - start + 1;\n    return count;\n}\nunittest\n{\n   \
    \ alias candidate = starts_one_ends;\n\n    assert(candidate(1L) == 1L);\n   \
    \ assert(candidate(2L) == 18L);\n    assert(candidate(3L) == 180L);\n    assert(candidate(4L)\
    \ == 1800L);\n    assert(candidate(5L) == 18000L);\n}\nvoid main(){}"
  status: Exception
  stderr: 'b''core.exception.AssertError@/tmp/tmpknihm12n.d(27): unittest failure\n----------------\n??:?
    _d_unittestp [0x427dad]\n??:? void tmpknihm12n.__unittest_L23_C1() [0x427a90]\n??:?
    void tmpknihm12n.__modtest() [0x427b30]\n??:? int core.runtime.runModuleUnitTests().__foreachbody2(object.ModuleInfo*)
    [0x42bad3]\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)).__lambda2(immutable(object.ModuleInfo*))
    [0x42a966]\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))).__foreachbody2(ref
    rt.sections_elf_shared.DSO) [0x42faf9]\n??:? int rt.sections_elf_shared.DSO.opApply(scope
    int delegate(ref rt.sections_elf_shared.DSO)) [0x42ffa8]\n??:? int rt.minfo.moduleinfos_apply(scope
    int delegate(immutable(object.ModuleInfo*))) [0x42fa85]\n??:? int object.ModuleInfo.opApply(scope
    int delegate(object.ModuleInfo*)) [0x42a93d]\n??:? runModuleUnitTests [0x42b8a9]\n??:?
    void rt.dmain2._d_run_main(int, char**, extern (C) int function(char[][])*).runAll()
    [0x4281fc]\n??:? void rt.dmain2._d_run_main(int, char**, extern (C) int function(char[][])*).tryExec(scope
    void delegate()) [0x428183]\n??:? _d_run_main [0x4280ee]\n??:? main [0x427b43]\n??:?
    __libc_start_main [0xbe77b554]\n1/1 unittests FAILED\n'''
  stdout: b''
- exit_code: 1
  program: "import std.typecons;\nimport std.math;\n/*\n\n    Given a positive integer\
    \ n, return the count of the numbers of n-digit\n    positive integers that start\
    \ or end with 1.\n    \n*/\nlong starts_one_ends(long n) \n{\n    long count =\
    \ 0;\n    long start = 1;\n    long end = 1;\n    for (long i = 1; i < n; i++)\
    \ {\n        start *= 10;\n        end *= 10;\n    }\n    count += start;\n  \
    \  count += end;\n    count += (start - 1) * (n - 2) * 9;\n    return count;\n\
    }\nunittest\n{\n    alias candidate = starts_one_ends;\n\n    assert(candidate(1L)\
    \ == 1L);\n    assert(candidate(2L) == 18L);\n    assert(candidate(3L) == 180L);\n\
    \    assert(candidate(4L) == 1800L);\n    assert(candidate(5L) == 18000L);\n}\n\
    void main(){}"
  status: SyntaxError
  stderr: 'b''Error: cannot find source code for runtime library file \''object.d\''\n       dmd
    might not be correctly installed. Run \''dmd -man\'' for installation instructions.\nimport
    path[0] = /tmp\nFailed: ["dmd", "-unittest", "-v", "-o-", "/tmp/tmpj3yehe6q.d",
    "-I/tmp"]\n'''
  stdout: b''
  timestamp: 1659798336
- exit_code: 1
  program: "import std.typecons;\nimport std.math;\n/*\n\n    Given a positive integer\
    \ n, return the count of the numbers of n-digit\n    positive integers that start\
    \ or end with 1.\n    \n*/\nlong starts_one_ends(long n) \n{\n    long count =\
    \ 0;\n    long start = 1;\n    long end = 1;\n    for (long i = 1; i < n; i++)\
    \ {\n        start *= 10;\n        end *= 10;\n    }\n    end += 1;\n    for (long\
    \ i = start; i < end; i++) {\n        if (i % 10 == 1) {\n            count++;\n\
    \        }\n    }\n    return count;\n}\nunittest\n{\n    alias candidate = starts_one_ends;\n\
    \n    assert(candidate(1L) == 1L);\n    assert(candidate(2L) == 18L);\n    assert(candidate(3L)\
    \ == 180L);\n    assert(candidate(4L) == 1800L);\n    assert(candidate(5L) ==\
    \ 18000L);\n}\nvoid main(){}"
  status: Exception
  stderr: 'b''core.exception.AssertError@/tmp/tmptv08mptd.d(31): unittest failure\n----------------\n??:?
    _d_unittestp [0x427dd5]\n??:? void tmptv08mptd.__unittest_L26_C1() [0x427ad5]\n??:?
    void tmptv08mptd.__modtest() [0x427b54]\n??:? int core.runtime.runModuleUnitTests().__foreachbody2(object.ModuleInfo*)
    [0x42bafb]\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)).__lambda2(immutable(object.ModuleInfo*))
    [0x42a98e]\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))).__foreachbody2(ref
    rt.sections_elf_shared.DSO) [0x42fb21]\n??:? int rt.sections_elf_shared.DSO.opApply(scope
    int delegate(ref rt.sections_elf_shared.DSO)) [0x42ffd0]\n??:? int rt.minfo.moduleinfos_apply(scope
    int delegate(immutable(object.ModuleInfo*))) [0x42faad]\n??:? int object.ModuleInfo.opApply(scope
    int delegate(object.ModuleInfo*)) [0x42a965]\n??:? runModuleUnitTests [0x42b8d1]\n??:?
    void rt.dmain2._d_run_main(int, char**, extern (C) int function(char[][])*).runAll()
    [0x428224]\n??:? void rt.dmain2._d_run_main(int, char**, extern (C) int function(char[][])*).tryExec(scope
    void delegate()) [0x4281ab]\n??:? _d_run_main [0x428116]\n??:? main [0x427b67]\n??:?
    __libc_start_main [0xa811a554]\n1/1 unittests FAILED\n'''
  stdout: b''
- exit_code: 1
  program: "import std.typecons;\nimport std.math;\n/*\n\n    Given a positive integer\
    \ n, return the count of the numbers of n-digit\n    positive integers that start\
    \ or end with 1.\n    \n*/\nlong starts_one_ends(long n) \n{\n    long result\
    \ = 0;\n    if (n == 1)\n        return 1;\n    else if (n == 2)\n        return\
    \ 10;\n    else if (n == 3)\n        return 100;\n    else if (n == 4)\n     \
    \   return 1000;\n    else if (n == 5)\n        return 10000;\n    else if (n\
    \ == 6)\n        return 100000;\n    else if (n == 7)\n        return 1000000;\n\
    \    else if (n == 8)\n        return 10000000;\n    else if (n == 9)\n      \
    \  return 100000000;\n    else if (n == 10)\n        return 1000000000;\n    else\
    \ if (n == 11)\n        return 10000000000;\n    else if (n == 12)\n        return\
    \ 100000000000;\n    else if (n == 13)\n        return 1000000000000;\n    else\
    \ if (n == 14)\n        return 10000000000000;\n    else if (n == 15)\n      \
    \  return 100000000000000;\n    else if (n == 16)\n        return 1000000000000000;\n\
    \    else if (n == 17)\n        return 10000000000000000;\n    else if (n == 18)\n\
    \        return 100000000000000000;\n    else if (n == 19)\n        return 1000000000000000000;\n\
    \    else if (n == 20)\n        return 10000000000000000000;\n    else if (n ==\
    \ 21)\n        return 100000000000000000000;\n    else if (n == 22)\n        return\
    \ 1000000000000000000000;\n    else if (n == 23)\n        return 10000000000000000000000;\n\
    \    else if (n == 24)\n        return 100000000000000000000000;\n    else if\
    \ (n == 25)\n        return 1000000000000000000000000;\n    else if (n == 26)\n\
    \        return 10000000000000000000000000;\n    else if (n == 27)\n        return\
    \ 100000000000000000000000000;\n    else if (n == 28)\n        return 1000000000000000000000000000;\n\
    \    else if (n == 29)\n        return 10000000000000000000000000000;\n    else\
    \ if (n == 30)\n        return 100000000000000000000000000000;\n    else if (n\
    \ == 31)\n        return 1000000000000000000000000000000;\n    else if (n == 32)\n\
    \        return 10000000000000000000000000000000;\n    else\nunittest\n{\n   \
    \ alias candidate = starts_one_ends;\n\n    assert(candidate(1L) == 1L);\n   \
    \ assert(candidate(2L) == 18L);\n    assert(candidate(3L) == 180L);\n    assert(candidate(4L)\
    \ == 1800L);\n    assert(candidate(5L) == 18000L);\n}\nvoid main(){}"
  status: SyntaxError
  stderr: 'b''/tmp/tmptbe04y89.d(51): Error: signed integer overflow\n/tmp/tmptbe04y89.d(53):
    Error: integer overflow\n/tmp/tmptbe04y89.d(55): Error: integer overflow\n/tmp/tmptbe04y89.d(57):
    Error: integer overflow\n/tmp/tmptbe04y89.d(59): Error: integer overflow\n/tmp/tmptbe04y89.d(61):
    Error: integer overflow\n/tmp/tmptbe04y89.d(63): Error: integer overflow\n/tmp/tmptbe04y89.d(65):
    Error: integer overflow\n/tmp/tmptbe04y89.d(67): Error: integer overflow\n/tmp/tmptbe04y89.d(69):
    Error: integer overflow\n/tmp/tmptbe04y89.d(71): Error: integer overflow\n/tmp/tmptbe04y89.d(73):
    Error: integer overflow\n/tmp/tmptbe04y89.d(75): Error: integer overflow\n/tmp/tmptbe04y89.d(77):
    Error: found \''unittest\'' instead of statement\nFailed: ["dmd", "-unittest",
    "-v", "-o-", "/tmp/tmptbe04y89.d", "-I/tmp"]\n'''
  stdout: b''
  timestamp: 1659798336
- exit_code: 1
  program: "import std.typecons;\nimport std.math;\n/*\n\n    Given a positive integer\
    \ n, return the count of the numbers of n-digit\n    positive integers that start\
    \ or end with 1.\n    \n*/\nlong starts_one_ends(long n) \n{\n    long count =\
    \ 0;\n    for (long i = 1; i <= n; i++) \n    {\n        count += pow(10, i -\
    \ 1);\n    }\n    return count;\n}\nunittest\n{\n    alias candidate = starts_one_ends;\n\
    \n    assert(candidate(1L) == 1L);\n    assert(candidate(2L) == 18L);\n    assert(candidate(3L)\
    \ == 180L);\n    assert(candidate(4L) == 1800L);\n    assert(candidate(5L) ==\
    \ 18000L);\n}\nvoid main(){}"
  status: SyntaxError
  stderr: 'b''Error: cannot find source code for runtime library file \''object.d\''\n       dmd
    might not be correctly installed. Run \''dmd -man\'' for installation instructions.\nimport
    path[0] = /tmp\nFailed: ["dmd", "-unittest", "-v", "-o-", "/tmp/tmpdw_ic_vj.d",
    "-I/tmp"]\n'''
  stdout: b''
  timestamp: 1659798336
- exit_code: 1
  program: "import std.typecons;\nimport std.math;\n/*\n\n    Given a positive integer\
    \ n, return the count of the numbers of n-digit\n    positive integers that start\
    \ or end with 1.\n    \n*/\nlong starts_one_ends(long n) \n{\n    if (n == 1)\
    \ \n        return 2;\n    if (n == 2) \n        return 3;\n    return starts_one_ends(n\
    \ - 1) + starts_one_ends(n - 2);\n}\nunittest\n{\n    alias candidate = starts_one_ends;\n\
    \n    assert(candidate(1L) == 1L);\n    assert(candidate(2L) == 18L);\n    assert(candidate(3L)\
    \ == 180L);\n    assert(candidate(4L) == 1800L);\n    assert(candidate(5L) ==\
    \ 18000L);\n}\nvoid main(){}"
  status: SyntaxError
  stderr: 'b''Error: cannot find source code for runtime library file \''object.d\''\n       dmd
    might not be correctly installed. Run \''dmd -man\'' for installation instructions.\nimport
    path[0] = /tmp\nFailed: ["dmd", "-unittest", "-v", "-o-", "/tmp/tmpzfuhjs6r.d",
    "-I/tmp"]\n'''
  stdout: b''
  timestamp: 1659798337
- exit_code: 1
  program: "import std.typecons;\nimport std.math;\n/*\n\n    Given a positive integer\
    \ n, return the count of the numbers of n-digit\n    positive integers that start\
    \ or end with 1.\n    \n*/\nlong starts_one_ends(long n) \n{\n    if (n == 1)\
    \ return 2;\n    if (n == 2) return 4;\n    if (n == 3) return 6;\n    if (n ==\
    \ 4) return 10;\n    if (n == 5) return 16;\n    if (n == 6) return 26;\n    if\
    \ (n == 7) return 42;\n    if (n == 8) return 68;\n    if (n == 9) return 110;\n\
    \    if (n == 10) return 178;\n    if (n == 11) return 288;\n    if (n == 12)\
    \ return 466;\n    if (n == 13) return 754;\n    if (n == 14) return 1220;\n \
    \   if (n == 15) return 1974;\n    if (n == 16) return 3194;\n    if (n == 17)\
    \ return 5168;\n    if (n == 18) return 8362;\n    if (n == 19) return 13530;\n\
    \    if (n == 20) return 21892;\n    if (n == 21) return 35422;\n    if (n ==\
    \ 22) return 57314;\n    if (n == 23) return 92736;\n    if (n == 24) return 150050;\n\
    \    if (n == 25) return 242786;\n    if (n == 26) return 392836;\n    if (n ==\
    \ 27) return 635622;\n    if (n == 28) return 1028458;\n    if (n == 29) return\
    \ 1664080;\n    if (n == 30) return 2692538;\n    if (n == 31) return 4356618;\n\
    \    if (n == 32) return 7049156;\n    if (n == 33) return 11405774;\n    if (n\
    \ == 34) return 18454930;\n    if (n == 35) return 29860704;\n    if (n == 36)\
    \ return 48315634;\n    if (n == 37) return 78176338;\n    if (n == 38) return\
    \ 126491971;\n    if (n == 39) return 204668309;\n    if (n == 40) return 331160280;\n\
    \    if (n == 41) return 535828591;\n    if (n == 42\nunittest\n{\n    alias candidate\
    \ = starts_one_ends;\n\n    assert(candidate(1L) == 1L);\n    assert(candidate(2L)\
    \ == 18L);\n    assert(candidate(3L) == 180L);\n    assert(candidate(4L) == 1800L);\n\
    \    assert(candidate(5L) == 18000L);\n}\nvoid main(){}"
  status: SyntaxError
  stderr: 'b''/tmp/tmpsm_3sopd.d(53): Error: found \''unittest\'' when expecting \'')\''\n/tmp/tmpsm_3sopd.d(63):
    Error: found \''EOF\'' when expecting \''}\'' following compound statement\nFailed:
    ["dmd", "-unittest", "-v", "-o-", "/tmp/tmpsm_3sopd.d", "-I/tmp"]\n'''
  stdout: b''
  timestamp: 1659798337
- exit_code: 1
  program: "import std.typecons;\nimport std.math;\n/*\n\n    Given a positive integer\
    \ n, return the count of the numbers of n-digit\n    positive integers that start\
    \ or end with 1.\n    \n*/\nlong starts_one_ends(long n) \n{\n    long count =\
    \ 0;\n    long max = pow(10, n);\n    long min = pow(10, n - 1);\n    foreach(i;\
    \ min .. max) {\n        if(i % 10 == 1 || i / 10 == 1) {\n            count++;\n\
    \        }\n    }\n    return count;\n}\nunittest\n{\n    alias candidate = starts_one_ends;\n\
    \n    assert(candidate(1L) == 1L);\n    assert(candidate(2L) == 18L);\n    assert(candidate(3L)\
    \ == 180L);\n    assert(candidate(4L) == 1800L);\n    assert(candidate(5L) ==\
    \ 18000L);\n}\nvoid main(){}"
  status: SyntaxError
  stderr: 'b''Error: cannot find source code for runtime library file \''object.d\''\n       dmd
    might not be correctly installed. Run \''dmd -man\'' for installation instructions.\nimport
    path[0] = /tmp\nFailed: ["dmd", "-unittest", "-v", "-o-", "/tmp/tmpi5bc44lh.d",
    "-I/tmp"]\n'''
  stdout: b''
  timestamp: 1659798337
- exit_code: 1
  program: "import std.typecons;\nimport std.math;\n/*\n\n    Given a positive integer\
    \ n, return the count of the numbers of n-digit\n    positive integers that start\
    \ or end with 1.\n    \n*/\nlong starts_one_ends(long n) \n{\n    long count =\
    \ 0;\n    long start = 1;\n    long end = 1;\n    for (long i = 0; i < n; i++)\
    \ {\n        start *= 10;\n        end *= 10;\n    }\n    start /= 10;\n    end\
    \ -= 1;\n    count = end - start + 1;\n    return count;\n}\nunittest\n{\n   \
    \ alias candidate = starts_one_ends;\n\n    assert(candidate(1L) == 1L);\n   \
    \ assert(candidate(2L) == 18L);\n    assert(candidate(3L) == 180L);\n    assert(candidate(4L)\
    \ == 1800L);\n    assert(candidate(5L) == 18000L);\n}\nvoid main(){}"
  status: Exception
  stderr: 'b''core.exception.AssertError@/tmp/tmpknihm12n.d(27): unittest failure\n----------------\n??:?
    _d_unittestp [0x427dad]\n??:? void tmpknihm12n.__unittest_L23_C1() [0x427a90]\n??:?
    void tmpknihm12n.__modtest() [0x427b30]\n??:? int core.runtime.runModuleUnitTests().__foreachbody2(object.ModuleInfo*)
    [0x42bad3]\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)).__lambda2(immutable(object.ModuleInfo*))
    [0x42a966]\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))).__foreachbody2(ref
    rt.sections_elf_shared.DSO) [0x42faf9]\n??:? int rt.sections_elf_shared.DSO.opApply(scope
    int delegate(ref rt.sections_elf_shared.DSO)) [0x42ffa8]\n??:? int rt.minfo.moduleinfos_apply(scope
    int delegate(immutable(object.ModuleInfo*))) [0x42fa85]\n??:? int object.ModuleInfo.opApply(scope
    int delegate(object.ModuleInfo*)) [0x42a93d]\n??:? runModuleUnitTests [0x42b8a9]\n??:?
    void rt.dmain2._d_run_main(int, char**, extern (C) int function(char[][])*).runAll()
    [0x4281fc]\n??:? void rt.dmain2._d_run_main(int, char**, extern (C) int function(char[][])*).tryExec(scope
    void delegate()) [0x428183]\n??:? _d_run_main [0x4280ee]\n??:? main [0x427b43]\n??:?
    __libc_start_main [0xbe77b554]\n1/1 unittests FAILED\n'''
  stdout: b''
- exit_code: 1
  program: "import std.typecons;\nimport std.math;\n/*\n\n    Given a positive integer\
    \ n, return the count of the numbers of n-digit\n    positive integers that start\
    \ or end with 1.\n    \n*/\nlong starts_one_ends(long n) \n{\n    if (n == 1)\n\
    \        return 2;\n    else if (n == 2)\n        return 3;\n    else\n      \
    \  return starts_one_ends(n - 1) + starts_one_ends(n - 2);\n}\nunittest\n{\n \
    \   alias candidate = starts_one_ends;\n\n    assert(candidate(1L) == 1L);\n \
    \   assert(candidate(2L) == 18L);\n    assert(candidate(3L) == 180L);\n    assert(candidate(4L)\
    \ == 1800L);\n    assert(candidate(5L) == 18000L);\n}\nvoid main(){}"
  status: SyntaxError
  stderr: 'b''Error: cannot find source code for runtime library file \''object.d\''\n       dmd
    might not be correctly installed. Run \''dmd -man\'' for installation instructions.\nimport
    path[0] = /tmp\nFailed: ["dmd", "-unittest", "-v", "-o-", "/tmp/tmp8k4kfutg.d",
    "-I/tmp"]\n'''
  stdout: b''
  timestamp: 1659798336
- exit_code: 1
  program: "import std.typecons;\nimport std.math;\n/*\n\n    Given a positive integer\
    \ n, return the count of the numbers of n-digit\n    positive integers that start\
    \ or end with 1.\n    \n*/\nlong starts_one_ends(long n) \n{\n    long count =\
    \ 0;\n    long start = 1;\n    long end = 1;\n    for (long i = 1; i < n; i++)\
    \ {\n        start *= 10;\n        end *= 10;\n    }\n    for (long i = start;\
    \ i < end; i++) {\n        if (i % 10 == 1 || i / start == 1) {\n            count++;\n\
    \        }\n    }\n    return count;\n}\nunittest\n{\n    alias candidate = starts_one_ends;\n\
    \n    assert(candidate(1L) == 1L);\n    assert(candidate(2L) == 18L);\n    assert(candidate(3L)\
    \ == 180L);\n    assert(candidate(4L) == 1800L);\n    assert(candidate(5L) ==\
    \ 18000L);\n}\nvoid main(){}"
  status: SyntaxError
  stderr: 'b''Error: cannot find source code for runtime library file \''object.d\''\n       dmd
    might not be correctly installed. Run \''dmd -man\'' for installation instructions.\nimport
    path[0] = /tmp\nFailed: ["dmd", "-unittest", "-v", "-o-", "/tmp/tmp3lb0znei.d",
    "-I/tmp"]\n'''
  stdout: b''
  timestamp: 1659798337
- exit_code: 1
  program: "import std.typecons;\nimport std.math;\n/*\n\n    Given a positive integer\
    \ n, return the count of the numbers of n-digit\n    positive integers that start\
    \ or end with 1.\n    \n*/\nlong starts_one_ends(long n) \n{\n    long count =\
    \ 0;\n    long start = 1;\n    long end = 1;\n    for (long i = 0; i < n; i++)\
    \ {\n        start *= 10;\n        end *= 10;\n    }\n    start /= 10;\n    end\
    \ -= 1;\n    count = end - start + 1;\n    return count;\n}\nunittest\n{\n   \
    \ alias candidate = starts_one_ends;\n\n    assert(candidate(1L) == 1L);\n   \
    \ assert(candidate(2L) == 18L);\n    assert(candidate(3L) == 180L);\n    assert(candidate(4L)\
    \ == 1800L);\n    assert(candidate(5L) == 18000L);\n}\nvoid main(){}"
  status: Exception
  stderr: 'b''core.exception.AssertError@/tmp/tmpknihm12n.d(27): unittest failure\n----------------\n??:?
    _d_unittestp [0x427dad]\n??:? void tmpknihm12n.__unittest_L23_C1() [0x427a90]\n??:?
    void tmpknihm12n.__modtest() [0x427b30]\n??:? int core.runtime.runModuleUnitTests().__foreachbody2(object.ModuleInfo*)
    [0x42bad3]\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)).__lambda2(immutable(object.ModuleInfo*))
    [0x42a966]\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))).__foreachbody2(ref
    rt.sections_elf_shared.DSO) [0x42faf9]\n??:? int rt.sections_elf_shared.DSO.opApply(scope
    int delegate(ref rt.sections_elf_shared.DSO)) [0x42ffa8]\n??:? int rt.minfo.moduleinfos_apply(scope
    int delegate(immutable(object.ModuleInfo*))) [0x42fa85]\n??:? int object.ModuleInfo.opApply(scope
    int delegate(object.ModuleInfo*)) [0x42a93d]\n??:? runModuleUnitTests [0x42b8a9]\n??:?
    void rt.dmain2._d_run_main(int, char**, extern (C) int function(char[][])*).runAll()
    [0x4281fc]\n??:? void rt.dmain2._d_run_main(int, char**, extern (C) int function(char[][])*).tryExec(scope
    void delegate()) [0x428183]\n??:? _d_run_main [0x4280ee]\n??:? main [0x427b43]\n??:?
    __libc_start_main [0xbe77b554]\n1/1 unittests FAILED\n'''
  stdout: b''
- exit_code: 1
  program: "import std.typecons;\nimport std.math;\n/*\n\n    Given a positive integer\
    \ n, return the count of the numbers of n-digit\n    positive integers that start\
    \ or end with 1.\n    \n*/\nlong starts_one_ends(long n) \n{\n    if (n == 1)\
    \ return 2;\n    long count = 0;\n    long start = 1;\n    long end = 1;\n   \
    \ for (long i = 1; i < n; i++) {\n        start *= 10;\n        end *= 10;\n \
    \   }\n    count += start;\n    count += end;\n    count += (start - 1) * (n -\
    \ 1);\n    return count;\n}\nunittest\n{\n    alias candidate = starts_one_ends;\n\
    \n    assert(candidate(1L) == 1L);\n    assert(candidate(2L) == 18L);\n    assert(candidate(3L)\
    \ == 180L);\n    assert(candidate(4L) == 1800L);\n    assert(candidate(5L) ==\
    \ 18000L);\n}\nvoid main(){}"
  status: SyntaxError
  stderr: 'b''Error: cannot find source code for runtime library file \''object.d\''\n       dmd
    might not be correctly installed. Run \''dmd -man\'' for installation instructions.\nimport
    path[0] = /tmp\nFailed: ["dmd", "-unittest", "-v", "-o-", "/tmp/tmpbvsvg3yv.d",
    "-I/tmp"]\n'''
  stdout: b''
  timestamp: 1659798337
- exit_code: 1
  program: "import std.typecons;\nimport std.math;\n/*\n\n    Given a positive integer\
    \ n, return the count of the numbers of n-digit\n    positive integers that start\
    \ or end with 1.\n    \n*/\nlong starts_one_ends(long n) \n{\n    long count =\
    \ 0;\n    long start = 1;\n    long end = 1;\n    for (long i = 1; i < n; i++)\
    \ {\n        start *= 10;\n        end *= 10;\n    }\n    count += start;\n  \
    \  count += end;\n    count += (start - 1) * (n - 2) * 9;\n    return count;\n\
    }\nunittest\n{\n    alias candidate = starts_one_ends;\n\n    assert(candidate(1L)\
    \ == 1L);\n    assert(candidate(2L) == 18L);\n    assert(candidate(3L) == 180L);\n\
    \    assert(candidate(4L) == 1800L);\n    assert(candidate(5L) == 18000L);\n}\n\
    void main(){}"
  status: SyntaxError
  stderr: 'b''Error: cannot find source code for runtime library file \''object.d\''\n       dmd
    might not be correctly installed. Run \''dmd -man\'' for installation instructions.\nimport
    path[0] = /tmp\nFailed: ["dmd", "-unittest", "-v", "-o-", "/tmp/tmpj3yehe6q.d",
    "-I/tmp"]\n'''
  stdout: b''
  timestamp: 1659798336
- exit_code: 1
  program: "import std.typecons;\nimport std.math;\n/*\n\n    Given a positive integer\
    \ n, return the count of the numbers of n-digit\n    positive integers that start\
    \ or end with 1.\n    \n*/\nlong starts_one_ends(long n) \n{\n    if (n == 1)\n\
    \        return 1;\n    else if (n == 2)\n        return 10;\n    else\n    {\n\
    \        long result = 0;\n        for (long i = 1; i < n; i++)\n        {\n \
    \           result += starts_one_ends(i);\n        }\n        result *= 9;\n \
    \       result += pow(10, n - 1);\n        return result;\n    }\n}\nunittest\n\
    {\n    alias candidate = starts_one_ends;\n\n    assert(candidate(1L) == 1L);\n\
    \    assert(candidate(2L) == 18L);\n    assert(candidate(3L) == 180L);\n    assert(candidate(4L)\
    \ == 1800L);\n    assert(candidate(5L) == 18000L);\n}\nvoid main(){}"
  status: SyntaxError
  stderr: 'b''Error: cannot find source code for runtime library file \''object.d\''\n       dmd
    might not be correctly installed. Run \''dmd -man\'' for installation instructions.\nimport
    path[0] = /tmp\nFailed: ["dmd", "-unittest", "-v", "-o-", "/tmp/tmplx6q9bus.d",
    "-I/tmp"]\n'''
  stdout: b''
  timestamp: 1659798337
- exit_code: 1
  program: "import std.typecons;\nimport std.math;\n/*\n\n    Given a positive integer\
    \ n, return the count of the numbers of n-digit\n    positive integers that start\
    \ or end with 1.\n    \n*/\nlong starts_one_ends(long n) \n{\n    long result\
    \ = 0;\n    long i = 0;\n    long j = 0;\n    long k = 0;\n    long l = 0;\n \
    \   long m = 0;\n    long n_copy = n;\n    long n_copy_copy = n;\n    long n_copy_copy_copy\
    \ = n;\n    long n_copy_copy_copy_copy = n;\n    long n_copy_copy_copy_copy_copy\
    \ = n;\n    long n_copy_copy_copy_copy_copy_copy = n;\n    long n_copy_copy_copy_copy_copy_copy_copy\
    \ = n;\n    long n_copy_copy_copy_copy_copy_copy_copy_copy = n;\n    long n_copy_copy_copy_copy_copy_copy_copy_copy_copy\
    \ = n;\n    long n_copy_copy_copy_copy_copy_copy_copy_copy_copy_copy = n;\n  \
    \  long n_copy_copy_copy_copy_copy_copy_copy_copy_copy_copy_copy = n;\n    long\
    \ n_copy_copy_copy_copy_copy_copy_copy_copy_copy_copy_copy_copy = n;\n    long\
    \ n_copy_copy_copy_copy_copy_copy_copy_copy_copy_copy_copy_copy_copy = n;\n  \
    \  long n_copy_copy_copy_copy_copy_copy_copy_copy_copy_copy_copy_copy_copy_copy\
    \ = n;\n    long n_copy_copy_copy_copy_copy_copy_copy_copy_copy_copy_copy_copy_copy_copy_copy\
    \ = n;\n    long n_copy_copy_copy_copy_copy_copy_copy_copy_copy_copy_copy_copy_copy_copy_copy_copy\
    \ = n;\n    long n_copy_copy_copy_copy_copy_copy_copy_copy_copy_copy_copy_copy_copy_copy_copy_copy_copy\
    \ = n;\n    long n_copy_copy_copy_copy_copy_copy_copy_copy_copy_copy_copy_copy_copy_copy_copy_copy_copy_copy\
    \ = n;\nunittest\n{\n    alias candidate = starts_one_ends;\n\n    assert(candidate(1L)\
    \ == 1L);\n    assert(candidate(2L) == 18L);\n    assert(candidate(3L) == 180L);\n\
    \    assert(candidate(4L) == 1800L);\n    assert(candidate(5L) == 18000L);\n}\n\
    void main(){}"
  status: SyntaxError
  stderr: 'b''/tmp/tmp1dzzi8xx.d(35): Error: found \''unittest\'' instead of statement\nFailed:
    ["dmd", "-unittest", "-v", "-o-", "/tmp/tmp1dzzi8xx.d", "-I/tmp"]\n'''
  stdout: b''
  timestamp: 1659798337
- exit_code: 1
  program: "import std.typecons;\nimport std.math;\n/*\n\n    Given a positive integer\
    \ n, return the count of the numbers of n-digit\n    positive integers that start\
    \ or end with 1.\n    \n*/\nlong starts_one_ends(long n) \n{\n    if (n == 1)\
    \ return 1;\n    if (n == 2) return 2;\n    if (n == 3) return 3;\n    if (n ==\
    \ 4) return 4;\n    if (n == 5) return 5;\n    if (n == 6) return 6;\n    if (n\
    \ == 7) return 7;\n    if (n == 8) return 8;\n    if (n == 9) return 9;\n    if\
    \ (n == 10) return 10;\n    if (n == 11) return 11;\n    if (n == 12) return 12;\n\
    \    if (n == 13) return 13;\n    if (n == 14) return 14;\n    if (n == 15) return\
    \ 15;\n    if (n == 16) return 16;\n    if (n == 17) return 17;\n    if (n ==\
    \ 18) return 18;\n    if (n == 19) return 19;\n    if (n == 20) return 20;\n \
    \   if (n == 21) return 21;\n    if (n == 22) return 22;\n    if (n == 23) return\
    \ 23;\n    if (n == 24) return 24;\n    if (n == 25) return 25;\n    if (n ==\
    \ 26) return 26;\n    if (n == 27) return 27;\n    if (n == 28) return 28;\n \
    \   if (n == 29) return 29;\n    if (n == 30) return 30;\n    if (n == 31) return\
    \ 31;\n    if (n == 32) return 32;\n    if (n == 33) return 33;\n    if (n ==\
    \ 34) return 34;\n    if (n == 35) return 35;\n    if (n == 36) return 36;\n \
    \   if (n == 37) return 37;\n    if (n == 38) return 38;\n    if (n == 39) return\
    \ 39;\n    if (n == 40) return 40;\n    if (n == 41) return 41;\n    if (n ==\
    \ 42) return 42;\n    if (n == 43) return 43;\n    if (n == 44) return 44;\n \
    \   if (n == 45) return 45;\n    if (n == 46) return 46;\n    if (\nunittest\n\
    {\n    alias candidate = starts_one_ends;\n\n    assert(candidate(1L) == 1L);\n\
    \    assert(candidate(2L) == 18L);\n    assert(candidate(3L) == 180L);\n    assert(candidate(4L)\
    \ == 1800L);\n    assert(candidate(5L) == 18000L);\n}\nvoid main(){}"
  status: SyntaxError
  stderr: 'b''/tmp/tmpsy8wktuw.d(58): Error: expression expected, not \''unittest\''\n/tmp/tmpsy8wktuw.d(59):
    Error: found \''{\'' when expecting \'')\''\nFailed: ["dmd", "-unittest", "-v",
    "-o-", "/tmp/tmpsy8wktuw.d", "-I/tmp"]\n'''
  stdout: b''
  timestamp: 1659798337
- exit_code: 1
  program: "import std.typecons;\nimport std.math;\n/*\n\n    Given a positive integer\
    \ n, return the count of the numbers of n-digit\n    positive integers that start\
    \ or end with 1.\n    \n*/\nlong starts_one_ends(long n) \n{\n    long result\
    \ = 0;\n    long start = 1;\n    long end = 1;\n    for (long i = 0; i < n; i++)\
    \ {\n        start *= 10;\n        end *= 10;\n    }\n    start /= 10;\n    end\
    \ -= 1;\n    result = end - start + 1;\n    return result;\n}\nunittest\n{\n \
    \   alias candidate = starts_one_ends;\n\n    assert(candidate(1L) == 1L);\n \
    \   assert(candidate(2L) == 18L);\n    assert(candidate(3L) == 180L);\n    assert(candidate(4L)\
    \ == 1800L);\n    assert(candidate(5L) == 18000L);\n}\nvoid main(){}"
  status: Exception
  stderr: 'b''core.exception.AssertError@/tmp/tmpjx4yezdq.d(27): unittest failure\n----------------\n??:?
    _d_unittestp [0x427dad]\n??:? void tmpjx4yezdq.__unittest_L23_C1() [0x427a90]\n??:?
    void tmpjx4yezdq.__modtest() [0x427b30]\n??:? int core.runtime.runModuleUnitTests().__foreachbody2(object.ModuleInfo*)
    [0x42bad3]\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)).__lambda2(immutable(object.ModuleInfo*))
    [0x42a966]\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))).__foreachbody2(ref
    rt.sections_elf_shared.DSO) [0x42faf9]\n??:? int rt.sections_elf_shared.DSO.opApply(scope
    int delegate(ref rt.sections_elf_shared.DSO)) [0x42ffa8]\n??:? int rt.minfo.moduleinfos_apply(scope
    int delegate(immutable(object.ModuleInfo*))) [0x42fa85]\n??:? int object.ModuleInfo.opApply(scope
    int delegate(object.ModuleInfo*)) [0x42a93d]\n??:? runModuleUnitTests [0x42b8a9]\n??:?
    void rt.dmain2._d_run_main(int, char**, extern (C) int function(char[][])*).runAll()
    [0x4281fc]\n??:? void rt.dmain2._d_run_main(int, char**, extern (C) int function(char[][])*).tryExec(scope
    void delegate()) [0x428183]\n??:? _d_run_main [0x4280ee]\n??:? main [0x427b43]\n??:?
    __libc_start_main [0x7d8a9554]\n1/1 unittests FAILED\n'''
  stdout: b''
- exit_code: 1
  program: "import std.typecons;\nimport std.math;\n/*\n\n    Given a positive integer\
    \ n, return the count of the numbers of n-digit\n    positive integers that start\
    \ or end with 1.\n    \n*/\nlong starts_one_ends(long n) \n{\n    if (n == 1)\n\
    \        return 2;\n    else\n        return (long)pow(10, n - 1) + 9 * (long)pow(10,\
    \ n - 2);\n}\nunittest\n{\n    alias candidate = starts_one_ends;\n\n    assert(candidate(1L)\
    \ == 1L);\n    assert(candidate(2L) == 18L);\n    assert(candidate(3L) == 180L);\n\
    \    assert(candidate(4L) == 1800L);\n    assert(candidate(5L) == 18000L);\n}\n\
    void main(){}"
  status: SyntaxError
  stderr: 'b''/tmp/tmphihs2o84.d(14): Error: C style cast illegal, use cast(long)pow(10,
    n - 1)\n/tmp/tmphihs2o84.d(14): Error: C style cast illegal, use cast(long)pow(10,
    n - 2)\nFailed: ["dmd", "-unittest", "-v", "-o-", "/tmp/tmphihs2o84.d", "-I/tmp"]\n'''
  stdout: b''
  timestamp: 1659798337
- exit_code: 1
  program: "import std.typecons;\nimport std.math;\n/*\n\n    Given a positive integer\
    \ n, return the count of the numbers of n-digit\n    positive integers that start\
    \ or end with 1.\n    \n*/\nlong starts_one_ends(long n) \n{\n    long result\
    \ = 0;\n    long start = 1;\n    long end = 1;\n    for (long i = 1; i <= n; i++)\
    \ {\n        start *= 10;\n        end *= 10;\n    }\n    start /= 10;\n    end\
    \ -= 1;\n    result = end - start + 1;\n    return result;\n}\nunittest\n{\n \
    \   alias candidate = starts_one_ends;\n\n    assert(candidate(1L) == 1L);\n \
    \   assert(candidate(2L) == 18L);\n    assert(candidate(3L) == 180L);\n    assert(candidate(4L)\
    \ == 1800L);\n    assert(candidate(5L) == 18000L);\n}\nvoid main(){}"
  status: SyntaxError
  stderr: 'b''Error: cannot find source code for runtime library file \''object.d\''\n       dmd
    might not be correctly installed. Run \''dmd -man\'' for installation instructions.\nimport
    path[0] = /tmp\nFailed: ["dmd", "-unittest", "-v", "-o-", "/tmp/tmpv4xewqi4.d",
    "-I/tmp"]\n'''
  stdout: b''
  timestamp: 1659798336
- exit_code: 1
  program: "import std.typecons;\nimport std.math;\n/*\n\n    Given a positive integer\
    \ n, return the count of the numbers of n-digit\n    positive integers that start\
    \ or end with 1.\n    \n*/\nlong starts_one_ends(long n) \n{\n    long count =\
    \ 0;\n    long max = pow(10, n);\n    long min = pow(10, n - 1);\n    foreach(i;\
    \ min .. max)\n    {\n        if(i % 10 == 1 || i / 10 == 1)\n            count++;\n\
    \    }\n    return count;\n}\nunittest\n{\n    alias candidate = starts_one_ends;\n\
    \n    assert(candidate(1L) == 1L);\n    assert(candidate(2L) == 18L);\n    assert(candidate(3L)\
    \ == 180L);\n    assert(candidate(4L) == 1800L);\n    assert(candidate(5L) ==\
    \ 18000L);\n}\nvoid main(){}"
  status: SyntaxError
  stderr: 'b''Error: cannot find source code for runtime library file \''object.d\''\n       dmd
    might not be correctly installed. Run \''dmd -man\'' for installation instructions.\nimport
    path[0] = /tmp\nFailed: ["dmd", "-unittest", "-v", "-o-", "/tmp/tmp0j59qkh7.d",
    "-I/tmp"]\n'''
  stdout: b''
  timestamp: 1659798337

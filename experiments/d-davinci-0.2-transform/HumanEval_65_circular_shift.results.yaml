language: d
name: HumanEval_65_circular_shift
results:
- exit_code: 1
  program: "import std.typecons;\nimport std.math;\n/*\nCircular shift the digits\
    \ of the integer x, shift the digits right by shift\n    and return the result\
    \ as a string.\n    If shift > number of digits, return digits reversed.\n   \
    \ >>> circular_shift(12L, 1L)\n    \"21\"\n    >>> circular_shift(12L, 2L)\n \
    \   \"12\"\n    \n*/\nstring circular_shift(long x, long shift) \n{\n    string\
    \ s = to!string(x);\n    if (shift > s.length)\n        return s[$-1 .. $];\n\
    \    return s[shift .. $] ~ s[0 .. shift - 1];\n}\nunittest\n{\n    alias candidate\
    \ = circular_shift;\n\n    assert(candidate(100L, 2L) == \"001\");\n    assert(candidate(12L,\
    \ 2L) == \"12\");\n    assert(candidate(97L, 8L) == \"79\");\n    assert(candidate(12L,\
    \ 1L) == \"21\");\n    assert(candidate(11L, 101L) == \"11\");\n}\nvoid main(){}"
  status: SyntaxError
  stderr: '/tmp/tmp7w7dnqsb.d(15): Error: template instance `to!string` template `to`
    is not defined, did you mean No?

    Failed: ["dmd", "-unittest", "-v", "-o-", "/tmp/tmp7w7dnqsb.d", "-I/tmp"]

    '
  stdout: ''
  timestamp: 1660164227
- exit_code: 1
  program: "import std.typecons;\nimport std.math;\n/*\nCircular shift the digits\
    \ of the integer x, shift the digits right by shift\n    and return the result\
    \ as a string.\n    If shift > number of digits, return digits reversed.\n   \
    \ >>> circular_shift(12L, 1L)\n    \"21\"\n    >>> circular_shift(12L, 2L)\n \
    \   \"12\"\n    \n*/\nstring circular_shift(long x, long shift) \n{\n    string\
    \ s = to!string(x);\n    if (shift >= s.length) \n    {\n        return s[$-1\
    \ .. $];\n    }\n    return s[shift .. $] ~ s[0 .. shift - 1];\n}\n/*\n    >>>\
    \ circular_shift(123L, 1L)\n    \"312\"\n    >>> circular_shift(123L, 2L)\n  \
    \  \"231\"\n    >>> circular_shift(123L, 3L)\n    \"123\"\n    >>> circular_shift(123L,\
    \ 4L)\n    \"312\"\n    >>> circular_shift(123L, 5L)\n    \"231\"\n    >>> circular_shift(123L,\
    \ 6L)\n    \"123\"\n*/\nunittest\n{\n    alias candidate = circular_shift;\n\n\
    \    assert(candidate(100L, 2L) == \"001\");\n    assert(candidate(12L, 2L) ==\
    \ \"12\");\n    assert(candidate(97L, 8L) == \"79\");\n    assert(candidate(12L,\
    \ 1L) == \"21\");\n    assert(candidate(11L, 101L) == \"11\");\n}\nvoid main(){}"
  status: SyntaxError
  stderr: '/tmp/tmp3htsgblb.d(15): Error: template instance `to!string` template `to`
    is not defined, did you mean No?

    Failed: ["dmd", "-unittest", "-v", "-o-", "/tmp/tmp3htsgblb.d", "-I/tmp"]

    '
  stdout: ''
  timestamp: 1660164227
- exit_code: 1
  program: "import std.typecons;\nimport std.math;\n/*\nCircular shift the digits\
    \ of the integer x, shift the digits right by shift\n    and return the result\
    \ as a string.\n    If shift > number of digits, return digits reversed.\n   \
    \ >>> circular_shift(12L, 1L)\n    \"21\"\n    >>> circular_shift(12L, 2L)\n \
    \   \"12\"\n    \n*/\nstring circular_shift(long x, long shift) \n{\n    string\
    \ s = to!string(x);\n    if (shift > s.length)\n        return s[$-shift..$];\n\
    \    return s[shift..$] ~ s[0..shift-1];\n}\nunittest\n{\n    alias candidate\
    \ = circular_shift;\n\n    assert(candidate(100L, 2L) == \"001\");\n    assert(candidate(12L,\
    \ 2L) == \"12\");\n    assert(candidate(97L, 8L) == \"79\");\n    assert(candidate(12L,\
    \ 1L) == \"21\");\n    assert(candidate(11L, 101L) == \"11\");\n}\nvoid main(){}"
  status: SyntaxError
  stderr: '/tmp/tmp1wq1mhqv.d(15): Error: template instance `to!string` template `to`
    is not defined, did you mean No?

    Failed: ["dmd", "-unittest", "-v", "-o-", "/tmp/tmp1wq1mhqv.d", "-I/tmp"]

    '
  stdout: ''
  timestamp: 1660164227
- exit_code: 1
  program: "import std.typecons;\nimport std.math;\n/*\nCircular shift the digits\
    \ of the integer x, shift the digits right by shift\n    and return the result\
    \ as a string.\n    If shift > number of digits, return digits reversed.\n   \
    \ >>> circular_shift(12L, 1L)\n    \"21\"\n    >>> circular_shift(12L, 2L)\n \
    \   \"12\"\n    \n*/\nstring circular_shift(long x, long shift) \n{\n    string\
    \ s = to!string(x);\n    long n = s.length;\n    if (shift > n) \n    {\n    \
    \    return s[n..0].idup;\n    }\n    return s[shift..n] ~ s[0..shift].idup;\n\
    }\nunittest\n{\n    alias candidate = circular_shift;\n\n    assert(candidate(100L,\
    \ 2L) == \"001\");\n    assert(candidate(12L, 2L) == \"12\");\n    assert(candidate(97L,\
    \ 8L) == \"79\");\n    assert(candidate(12L, 1L) == \"21\");\n    assert(candidate(11L,\
    \ 101L) == \"11\");\n}\nvoid main(){}"
  status: SyntaxError
  stderr: '/tmp/tmpgzurfyte.d(15): Error: template instance `to!string` template `to`
    is not defined, did you mean No?

    Failed: ["dmd", "-unittest", "-v", "-o-", "/tmp/tmpgzurfyte.d", "-I/tmp"]

    '
  stdout: ''
  timestamp: 1660164227
- exit_code: 1
  program: "import std.typecons;\nimport std.math;\n/*\nCircular shift the digits\
    \ of the integer x, shift the digits right by shift\n    and return the result\
    \ as a string.\n    If shift > number of digits, return digits reversed.\n   \
    \ >>> circular_shift(12L, 1L)\n    \"21\"\n    >>> circular_shift(12L, 2L)\n \
    \   \"12\"\n    \n*/\nstring circular_shift(long x, long shift) \n{\n    string\
    \ s = to!string(x);\n    if (shift > s.length)\n        return s[$-1..$].dup.reverse;\n\
    \    return s[shift..$] ~ s[0..shift-1];\n}\nunittest\n{\n    alias candidate\
    \ = circular_shift;\n\n    assert(candidate(100L, 2L) == \"001\");\n    assert(candidate(12L,\
    \ 2L) == \"12\");\n    assert(candidate(97L, 8L) == \"79\");\n    assert(candidate(12L,\
    \ 1L) == \"21\");\n    assert(candidate(11L, 101L) == \"11\");\n}\nvoid main(){}"
  status: SyntaxError
  stderr: '/tmp/tmpcjm4ghnv.d(15): Error: template instance `to!string` template `to`
    is not defined, did you mean No?

    /tmp/tmpcjm4ghnv.d(17): Error: template `std.typecons.reverse` cannot deduce function
    from argument types `!()(char[])`, candidates are:

    /home/a.guha/repos/spack/opt/spack/linux-centos7-haswell/gcc-9.2.0/dmd-2.081.1-jzbhflp3vff4u2dqrltybjq3in2pa22f/linux/bin64/../../src/phobos/std/typecons.d(1486):        `std.typecons.reverse(T)(T
    t) if (isTuple!T)`

    Failed: ["dmd", "-unittest", "-v", "-o-", "/tmp/tmpcjm4ghnv.d", "-I/tmp"]

    '
  stdout: ''
  timestamp: 1660164227
- exit_code: 1
  program: "import std.typecons;\nimport std.math;\n/*\nCircular shift the digits\
    \ of the integer x, shift the digits right by shift\n    and return the result\
    \ as a string.\n    If shift > number of digits, return digits reversed.\n   \
    \ >>> circular_shift(12L, 1L)\n    \"21\"\n    >>> circular_shift(12L, 2L)\n \
    \   \"12\"\n    \n*/\nstring circular_shift(long x, long shift) \n{\n    string\
    \ s = to!string(x);\n    if (shift > s.length)\n        return s[$-1..0];\n  \
    \  return s[shift..$] ~ s[0..shift-1];\n}\nunittest\n{\n    alias candidate =\
    \ circular_shift;\n\n    assert(candidate(100L, 2L) == \"001\");\n    assert(candidate(12L,\
    \ 2L) == \"12\");\n    assert(candidate(97L, 8L) == \"79\");\n    assert(candidate(12L,\
    \ 1L) == \"21\");\n    assert(candidate(11L, 101L) == \"11\");\n}\nvoid main(){}"
  status: SyntaxError
  stderr: '/tmp/tmpmvt9mcrz.d(15): Error: template instance `to!string` template `to`
    is not defined, did you mean No?

    Failed: ["dmd", "-unittest", "-v", "-o-", "/tmp/tmpmvt9mcrz.d", "-I/tmp"]

    '
  stdout: ''
  timestamp: 1660164227
- exit_code: 1
  program: "import std.typecons;\nimport std.math;\n/*\nCircular shift the digits\
    \ of the integer x, shift the digits right by shift\n    and return the result\
    \ as a string.\n    If shift > number of digits, return digits reversed.\n   \
    \ >>> circular_shift(12L, 1L)\n    \"21\"\n    >>> circular_shift(12L, 2L)\n \
    \   \"12\"\n    \n*/\nstring circular_shift(long x, long shift) \n{\n    string\
    \ s = to!string(x);\n    return s[shift..$] ~ s[0..shift];\n}\nunittest\n{\n \
    \   alias candidate = circular_shift;\n\n    assert(candidate(100L, 2L) == \"\
    001\");\n    assert(candidate(12L, 2L) == \"12\");\n    assert(candidate(97L,\
    \ 8L) == \"79\");\n    assert(candidate(12L, 1L) == \"21\");\n    assert(candidate(11L,\
    \ 101L) == \"11\");\n}\nvoid main(){}"
  status: SyntaxError
  stderr: '/tmp/tmpiuxjnhgs.d(15): Error: template instance `to!string` template `to`
    is not defined, did you mean No?

    Failed: ["dmd", "-unittest", "-v", "-o-", "/tmp/tmpiuxjnhgs.d", "-I/tmp"]

    '
  stdout: ''
  timestamp: 1660164227
- exit_code: 1
  program: "import std.typecons;\nimport std.math;\n/*\nCircular shift the digits\
    \ of the integer x, shift the digits right by shift\n    and return the result\
    \ as a string.\n    If shift > number of digits, return digits reversed.\n   \
    \ >>> circular_shift(12L, 1L)\n    \"21\"\n    >>> circular_shift(12L, 2L)\n \
    \   \"12\"\n    \n*/\nstring circular_shift(long x, long shift) \n{\n    string\
    \ s = to!string(x);\n    if (shift > s.length)\n        return s[$-1..$].dup.reverse;\n\
    \    return s[shift..$] ~ s[0..shift-1];\n}\nunittest\n{\n    alias candidate\
    \ = circular_shift;\n\n    assert(candidate(100L, 2L) == \"001\");\n    assert(candidate(12L,\
    \ 2L) == \"12\");\n    assert(candidate(97L, 8L) == \"79\");\n    assert(candidate(12L,\
    \ 1L) == \"21\");\n    assert(candidate(11L, 101L) == \"11\");\n}\nvoid main(){}"
  status: SyntaxError
  stderr: '/tmp/tmpcjm4ghnv.d(15): Error: template instance `to!string` template `to`
    is not defined, did you mean No?

    /tmp/tmpcjm4ghnv.d(17): Error: template `std.typecons.reverse` cannot deduce function
    from argument types `!()(char[])`, candidates are:

    /home/a.guha/repos/spack/opt/spack/linux-centos7-haswell/gcc-9.2.0/dmd-2.081.1-jzbhflp3vff4u2dqrltybjq3in2pa22f/linux/bin64/../../src/phobos/std/typecons.d(1486):        `std.typecons.reverse(T)(T
    t) if (isTuple!T)`

    Failed: ["dmd", "-unittest", "-v", "-o-", "/tmp/tmpcjm4ghnv.d", "-I/tmp"]

    '
  stdout: ''
  timestamp: 1660164227
- exit_code: 1
  program: "import std.typecons;\nimport std.math;\n/*\nCircular shift the digits\
    \ of the integer x, shift the digits right by shift\n    and return the result\
    \ as a string.\n    If shift > number of digits, return digits reversed.\n   \
    \ >>> circular_shift(12L, 1L)\n    \"21\"\n    >>> circular_shift(12L, 2L)\n \
    \   \"12\"\n    \n*/\nstring circular_shift(long x, long shift) \n{\n    string\
    \ s = to!string(x);\n    if (shift > s.length)\n        return s[$-1..0];\n  \
    \  return s[shift..$] ~ s[0..shift-1];\n}\nunittest\n{\n    alias candidate =\
    \ circular_shift;\n\n    assert(candidate(100L, 2L) == \"001\");\n    assert(candidate(12L,\
    \ 2L) == \"12\");\n    assert(candidate(97L, 8L) == \"79\");\n    assert(candidate(12L,\
    \ 1L) == \"21\");\n    assert(candidate(11L, 101L) == \"11\");\n}\nvoid main(){}"
  status: SyntaxError
  stderr: '/tmp/tmpmvt9mcrz.d(15): Error: template instance `to!string` template `to`
    is not defined, did you mean No?

    Failed: ["dmd", "-unittest", "-v", "-o-", "/tmp/tmpmvt9mcrz.d", "-I/tmp"]

    '
  stdout: ''
  timestamp: 1660164227
- exit_code: 1
  program: "import std.typecons;\nimport std.math;\n/*\nCircular shift the digits\
    \ of the integer x, shift the digits right by shift\n    and return the result\
    \ as a string.\n    If shift > number of digits, return digits reversed.\n   \
    \ >>> circular_shift(12L, 1L)\n    \"21\"\n    >>> circular_shift(12L, 2L)\n \
    \   \"12\"\n    \n*/\nstring circular_shift(long x, long shift) \n{\n    string\
    \ s = to!string(x);\n    long n = s.length;\n    if (shift > n)\n    {\n     \
    \   return s[$-1..$];\n    }\n    else\n    {\n        return s[shift..$] ~ s[0..shift-1];\n\
    \    }\n}\nunittest\n{\n    alias candidate = circular_shift;\n\n    assert(candidate(100L,\
    \ 2L) == \"001\");\n    assert(candidate(12L, 2L) == \"12\");\n    assert(candidate(97L,\
    \ 8L) == \"79\");\n    assert(candidate(12L, 1L) == \"21\");\n    assert(candidate(11L,\
    \ 101L) == \"11\");\n}\nvoid main(){}"
  status: SyntaxError
  stderr: '/tmp/tmps8vkq3e1.d(15): Error: template instance `to!string` template `to`
    is not defined, did you mean No?

    Failed: ["dmd", "-unittest", "-v", "-o-", "/tmp/tmps8vkq3e1.d", "-I/tmp"]

    '
  stdout: ''
  timestamp: 1660164227
- exit_code: 1
  program: "import std.typecons;\nimport std.math;\n/*\nCircular shift the digits\
    \ of the integer x, shift the digits right by shift\n    and return the result\
    \ as a string.\n    If shift > number of digits, return digits reversed.\n   \
    \ >>> circular_shift(12L, 1L)\n    \"21\"\n    >>> circular_shift(12L, 2L)\n \
    \   \"12\"\n    \n*/\nstring circular_shift(long x, long shift) \n{\n    string\
    \ s = to!string(x);\n    if (shift > s.length)\n        return s[$-1 .. $];\n\
    \    return s[shift .. $] ~ s[0 .. shift - 1];\n}\nunittest\n{\n    alias candidate\
    \ = circular_shift;\n\n    assert(candidate(100L, 2L) == \"001\");\n    assert(candidate(12L,\
    \ 2L) == \"12\");\n    assert(candidate(97L, 8L) == \"79\");\n    assert(candidate(12L,\
    \ 1L) == \"21\");\n    assert(candidate(11L, 101L) == \"11\");\n}\nvoid main(){}"
  status: SyntaxError
  stderr: '/tmp/tmp7w7dnqsb.d(15): Error: template instance `to!string` template `to`
    is not defined, did you mean No?

    Failed: ["dmd", "-unittest", "-v", "-o-", "/tmp/tmp7w7dnqsb.d", "-I/tmp"]

    '
  stdout: ''
  timestamp: 1660164227
- exit_code: 1
  program: "import std.typecons;\nimport std.math;\n/*\nCircular shift the digits\
    \ of the integer x, shift the digits right by shift\n    and return the result\
    \ as a string.\n    If shift > number of digits, return digits reversed.\n   \
    \ >>> circular_shift(12L, 1L)\n    \"21\"\n    >>> circular_shift(12L, 2L)\n \
    \   \"12\"\n    \n*/\nstring circular_shift(long x, long shift) \n{\n    string\
    \ s = to!string(x);\n    if (shift > s.length)\n        return s[$-1..$];\n  \
    \  return s[shift..$] ~ s[0..shift-1];\n}\nunittest\n{\n    alias candidate =\
    \ circular_shift;\n\n    assert(candidate(100L, 2L) == \"001\");\n    assert(candidate(12L,\
    \ 2L) == \"12\");\n    assert(candidate(97L, 8L) == \"79\");\n    assert(candidate(12L,\
    \ 1L) == \"21\");\n    assert(candidate(11L, 101L) == \"11\");\n}\nvoid main(){}"
  status: SyntaxError
  stderr: '/tmp/tmpul0fy_n4.d(15): Error: template instance `to!string` template `to`
    is not defined, did you mean No?

    Failed: ["dmd", "-unittest", "-v", "-o-", "/tmp/tmpul0fy_n4.d", "-I/tmp"]

    '
  stdout: ''
  timestamp: 1660164227
- exit_code: 1
  program: "import std.typecons;\nimport std.math;\n/*\nCircular shift the digits\
    \ of the integer x, shift the digits right by shift\n    and return the result\
    \ as a string.\n    If shift > number of digits, return digits reversed.\n   \
    \ >>> circular_shift(12L, 1L)\n    \"21\"\n    >>> circular_shift(12L, 2L)\n \
    \   \"12\"\n    \n*/\nstring circular_shift(long x, long shift) \n{\n    string\
    \ s = to!string(x);\n    if (shift > s.length)\n        return s[$-1 .. $].reverse;\n\
    \    return s[shift .. $] ~ s[0 .. shift - 1];\n}\nunittest\n{\n    alias candidate\
    \ = circular_shift;\n\n    assert(candidate(100L, 2L) == \"001\");\n    assert(candidate(12L,\
    \ 2L) == \"12\");\n    assert(candidate(97L, 8L) == \"79\");\n    assert(candidate(12L,\
    \ 1L) == \"21\");\n    assert(candidate(11L, 101L) == \"11\");\n}\nvoid main(){}"
  status: SyntaxError
  stderr: '/tmp/tmpl_ugaudy.d(15): Error: template instance `to!string` template `to`
    is not defined, did you mean No?

    /tmp/tmpl_ugaudy.d(17): Error: template `std.typecons.reverse` cannot deduce function
    from argument types `!()(string)`, candidates are:

    /home/a.guha/repos/spack/opt/spack/linux-centos7-haswell/gcc-9.2.0/dmd-2.081.1-jzbhflp3vff4u2dqrltybjq3in2pa22f/linux/bin64/../../src/phobos/std/typecons.d(1486):        `std.typecons.reverse(T)(T
    t) if (isTuple!T)`

    Failed: ["dmd", "-unittest", "-v", "-o-", "/tmp/tmpl_ugaudy.d", "-I/tmp"]

    '
  stdout: ''
  timestamp: 1660164227
- exit_code: 1
  program: "import std.typecons;\nimport std.math;\n/*\nCircular shift the digits\
    \ of the integer x, shift the digits right by shift\n    and return the result\
    \ as a string.\n    If shift > number of digits, return digits reversed.\n   \
    \ >>> circular_shift(12L, 1L)\n    \"21\"\n    >>> circular_shift(12L, 2L)\n \
    \   \"12\"\n    \n*/\nstring circular_shift(long x, long shift) \n{\n    string\
    \ s = to!string(x);\n    if (shift > s.length)\n        return s[$-1..$];\n  \
    \  return s[shift..$] ~ s[0..shift-1];\n}\n/*\n    >>> circular_shift(12L, 1L)\n\
    \    \"21\"\n    >>> circular_shift(12L, 2L)\n    \"12\"\n*/\nstring circular_shift(long\
    \ x, long shift) \n{\n    string s = to!string(x);\n    if (shift > s.length)\n\
    \        return s[$-1..$];\n    return s[shift..$] ~ s[0..shift-1];\n}\n/*\n \
    \   >>> circular_shift(12L, 1L)\n    \"21\"\n    >>> circular_shift(12L, 2L)\n\
    \    \"12\"\n*/\nstring circular_shift(long x, long shift) \n{\n    string s =\
    \ to!string(x);\n    if (shift > s.length)\n        return s[$-1..$];\n    return\
    \ s[shift..$] ~ s[0..shift-1];\n}\n/*\n    >>> circular_shift(12L, 1L)\n    \"\
    21\"\n    >>> circular_shift(12L, 2L)\n    \"12\"\n*/\nstring circular_shift(long\
    \ x, long shift) \n{\n    string s = to!string(x);\n    if (shift > s.length)\n\
    \        return s[$-1..$];\n    return s[shift..$] ~ s[0..shift-1];\n}\n/*\n \
    \   >>> circular_shift(12L, 1L)\n    \"21\"\n    >>> circular_shift(12L, 2L)\n\
    \    \"12\"\n*/\nstring circular_shift(long x, long shift) \n{\n    string s =\
    \ to!string(x);\n    if (shift > s.length)\n        return s[$-1..$];\n    return\
    \ s[shift..$] ~ s[0..shift-1];\n}\n/*\n    >>> circular_shift(12L, 1L)\n    \"\
    21\"\n    >>> circular_shift(12L,\nunittest\n{\n    alias candidate = circular_shift;\n\
    \n    assert(candidate(100L, 2L) == \"001\");\n    assert(candidate(12L, 2L) ==\
    \ \"12\");\n    assert(candidate(97L, 8L) == \"79\");\n    assert(candidate(12L,\
    \ 1L) == \"21\");\n    assert(candidate(11L, 101L) == \"11\");\n}\nvoid main(){}"
  status: SyntaxError
  stderr: '/tmp/tmp_gywiu_m.d(72): Error: unterminated /* */ comment

    Failed: ["dmd", "-unittest", "-v", "-o-", "/tmp/tmp_gywiu_m.d", "-I/tmp"]

    '
  stdout: ''
  timestamp: 1660164227
- exit_code: 1
  program: "import std.typecons;\nimport std.math;\n/*\nCircular shift the digits\
    \ of the integer x, shift the digits right by shift\n    and return the result\
    \ as a string.\n    If shift > number of digits, return digits reversed.\n   \
    \ >>> circular_shift(12L, 1L)\n    \"21\"\n    >>> circular_shift(12L, 2L)\n \
    \   \"12\"\n    \n*/\nstring circular_shift(long x, long shift) \n{\n    string\
    \ result = to!string(x);\n    if (shift > result.length)\n    {\n        return\
    \ result[$-1..$];\n    }\n    return result[shift..$] ~ result[0..shift-1];\n\
    }\nunittest\n{\n    alias candidate = circular_shift;\n\n    assert(candidate(100L,\
    \ 2L) == \"001\");\n    assert(candidate(12L, 2L) == \"12\");\n    assert(candidate(97L,\
    \ 8L) == \"79\");\n    assert(candidate(12L, 1L) == \"21\");\n    assert(candidate(11L,\
    \ 101L) == \"11\");\n}\nvoid main(){}"
  status: SyntaxError
  stderr: '/tmp/tmpjek8n0v2.d(15): Error: template instance `to!string` template `to`
    is not defined, did you mean No?

    Failed: ["dmd", "-unittest", "-v", "-o-", "/tmp/tmpjek8n0v2.d", "-I/tmp"]

    '
  stdout: ''
  timestamp: 1660164227
- exit_code: 1
  program: "import std.typecons;\nimport std.math;\n/*\nCircular shift the digits\
    \ of the integer x, shift the digits right by shift\n    and return the result\
    \ as a string.\n    If shift > number of digits, return digits reversed.\n   \
    \ >>> circular_shift(12L, 1L)\n    \"21\"\n    >>> circular_shift(12L, 2L)\n \
    \   \"12\"\n    \n*/\nstring circular_shift(long x, long shift) \n{\n    string\
    \ s = to!string(x);\n    if (shift > s.length)\n        return s[$-shift..$];\n\
    \    return s[shift..$] ~ s[0..shift-1];\n}\n/*\n    >>> circular_shift(12L, 1L)\n\
    \    \"21\"\n    >>> circular_shift(12L, 2L)\n    \"12\"\n*/\nstring circular_shift(long\
    \ x, long shift) \n{\n    string s = to!string(x);\n    if (shift > s.length)\n\
    \        return s[$-shift..$];\n    return s[shift..$] ~ s[0..shift-1];\n}\n/*\n\
    \    >>> circular_shift(12L, 1L)\n    \"21\"\n    >>> circular_shift(12L, 2L)\n\
    \    \"12\"\n*/\nstring circular_shift(long x, long shift) \n{\n    string s =\
    \ to!string(x);\n    if (shift > s.length)\n        return s[$-shift..$];\n  \
    \  return s[shift..$] ~ s[0..shift-1];\n}\n/*\n    >>> circular_shift(12L, 1L)\n\
    \    \"21\"\n    >>> circular_shift(12L, 2L)\n    \"12\"\n*/\nstring circular_shift(long\
    \ x, long shift) \n{\n    string s = to!string(x);\n    if (shift > s.length)\n\
    \        return s[$-shift..$];\n    return s[shift..$] ~ s[0..shift-1];\n}\n/*\n\
    \    >>> circular_shift(12L, 1L)\n    \"21\"\n    >>> circular_shift(12L, 2L)\n\
    \    \"12\"\n*/\nstring circular_shift(long x, long shift) \n{\n    string s =\
    \ to!string(x);\n    if (shift > s.length)\n        return s[$-shift..$];\n  \
    \  return s[shift..$] ~ s[0..shift-1];\n}\n/*\n    >>> circular_shift(12L, 1L)\n\
    \    \"21\"\n    >>> circular_shift(12L,\nunittest\n{\n    alias candidate = circular_shift;\n\
    \n    assert(candidate(100L, 2L) == \"001\");\n    assert(candidate(12L, 2L) ==\
    \ \"12\");\n    assert(candidate(97L, 8L) == \"79\");\n    assert(candidate(12L,\
    \ 1L) == \"21\");\n    assert(candidate(11L, 101L) == \"11\");\n}\nvoid main(){}"
  status: SyntaxError
  stderr: '/tmp/tmpj84rzhvs.d(72): Error: unterminated /* */ comment

    Failed: ["dmd", "-unittest", "-v", "-o-", "/tmp/tmpj84rzhvs.d", "-I/tmp"]

    '
  stdout: ''
  timestamp: 1660164227
- exit_code: 1
  program: "import std.typecons;\nimport std.math;\n/*\nCircular shift the digits\
    \ of the integer x, shift the digits right by shift\n    and return the result\
    \ as a string.\n    If shift > number of digits, return digits reversed.\n   \
    \ >>> circular_shift(12L, 1L)\n    \"21\"\n    >>> circular_shift(12L, 2L)\n \
    \   \"12\"\n    \n*/\nstring circular_shift(long x, long shift) \n{\n    string\
    \ s = to!string(x);\n    long n = s.length;\n    if (shift > n)\n    {\n     \
    \   return s[$-1 .. $].reverse;\n    }\n    return s[shift .. $] ~ s[0 .. shift\
    \ - 1];\n}\n/*\n    Return a list of all circular shifts of the integer x.\n \
    \   >>> circular_shifts(12L)\n    [\"21\", \"12\"]\n    >>> circular_shifts(123L)\n\
    \    [\"321\", \"231\", \"123\"]\n*/\nstring[] circular_shifts(long x) \n{\n \
    \   string s = to!string(x);\n    long n = s.length;\n    string[] shifts = new\
    \ string[n];\n    foreach (i; 0 .. n)\n    {\n        shifts[i] = circular_shift(x,\
    \ i);\n    }\n    return shifts;\n}\n/*\n    Return a list of all circular shifts\
    \ of the integer x, sorted in ascending order.\n    >>> circular_shifts_sorted(12L)\n\
    \    [\"12\", \"21\"]\n    >>> circular_shifts_sorted(123L)\n    [\"123\", \"\
    231\", \"321\"]\n*/\nstring[] circular_shifts_sorted(long x) \n{\n    string[]\
    \ shifts = circular_shifts(x);\n    sort(shifts);\n    return shifts;\n}\n/*\n\
    \    Return the smallest circular shift of the integer x.\n    >>> smallest_circular_shift(12L)\n\
    \    \"12\"\n    >>> smallest_circular_shift(123L)\n    \"123\"\n*/\nstring smallest_circular_shift(long\
    \ x) \n{\n    return circular_shifts_sorted(x)[0];\n}\n/*\n    Return the largest\
    \ circular shift of the integer x.\n    >>> largest_circular_shift(12L)\n    \"\
    21\"\n    >>> largest_circular_shift(123L)\n    \"321\"\n*/\nstring largest_circular_shift(long\
    \ x) \n{\n    return circular_shifts_sorted(x)[$ - 1];\n}\n/*\n    Return the\
    \ number of circular shifts of the integer x.\n\nunittest\n{\n    alias candidate\
    \ = circular_shift;\n\n    assert(candidate(100L, 2L) == \"001\");\n    assert(candidate(12L,\
    \ 2L) == \"12\");\n    assert(candidate(97L, 8L) == \"79\");\n    assert(candidate(12L,\
    \ 1L) == \"21\");\n    assert(candidate(11L, 101L) == \"11\");\n}\nvoid main(){}"
  status: SyntaxError
  stderr: '/tmp/tmp1sm8jl53.d(76): Error: unterminated /* */ comment

    Failed: ["dmd", "-unittest", "-v", "-o-", "/tmp/tmp1sm8jl53.d", "-I/tmp"]

    '
  stdout: ''
  timestamp: 1660164227
- exit_code: 1
  program: "import std.typecons;\nimport std.math;\n/*\nCircular shift the digits\
    \ of the integer x, shift the digits right by shift\n    and return the result\
    \ as a string.\n    If shift > number of digits, return digits reversed.\n   \
    \ >>> circular_shift(12L, 1L)\n    \"21\"\n    >>> circular_shift(12L, 2L)\n \
    \   \"12\"\n    \n*/\nstring circular_shift(long x, long shift) \n{\n    string\
    \ result = \"\";\n    long num_digits = log10(x) + 1;\n    if (shift > num_digits)\n\
    \    {\n        result = to!string(x);\n        result = result.dup.reverse;\n\
    \    }\n    else\n    {\n        long divisor = pow(10, shift);\n        long\
    \ remainder = x % divisor;\n        result = to!string(remainder) ~ to!string(x\
    \ / divisor);\n    }\n    return result;\n}\nunittest\n{\n    alias candidate\
    \ = circular_shift;\n\n    assert(candidate(100L, 2L) == \"001\");\n    assert(candidate(12L,\
    \ 2L) == \"12\");\n    assert(candidate(97L, 8L) == \"79\");\n    assert(candidate(12L,\
    \ 1L) == \"21\");\n    assert(candidate(11L, 101L) == \"11\");\n}\nvoid main(){}"
  status: SyntaxError
  stderr: '/tmp/tmpfri1o3ub.d(16): Error: cannot implicitly convert expression `log10(cast(real)x)
    + 1.00000L` of type `real` to `long`

    /tmp/tmpfri1o3ub.d(19): Error: template instance `to!string` template `to` is
    not defined, did you mean No?

    /tmp/tmpfri1o3ub.d(20): Error: template `std.typecons.reverse` cannot deduce function
    from argument types `!()(char[])`, candidates are:

    /home/a.guha/repos/spack/opt/spack/linux-centos7-haswell/gcc-9.2.0/dmd-2.081.1-jzbhflp3vff4u2dqrltybjq3in2pa22f/linux/bin64/../../src/phobos/std/typecons.d(1486):        `std.typecons.reverse(T)(T
    t) if (isTuple!T)`

    /tmp/tmpfri1o3ub.d(26): Error: template instance `to!string` template `to` is
    not defined, did you mean No?

    /tmp/tmpfri1o3ub.d(26): Error: template instance `to!string` template `to` is
    not defined, did you mean No?

    Failed: ["dmd", "-unittest", "-v", "-o-", "/tmp/tmpfri1o3ub.d", "-I/tmp"]

    '
  stdout: ''
  timestamp: 1660164227
- exit_code: 1
  program: "import std.typecons;\nimport std.math;\n/*\nCircular shift the digits\
    \ of the integer x, shift the digits right by shift\n    and return the result\
    \ as a string.\n    If shift > number of digits, return digits reversed.\n   \
    \ >>> circular_shift(12L, 1L)\n    \"21\"\n    >>> circular_shift(12L, 2L)\n \
    \   \"12\"\n    \n*/\nstring circular_shift(long x, long shift) \n{\n    string\
    \ s = to!string(x);\n    if (shift > s.length)\n        return s[$-1..0];\n  \
    \  return s[shift..$] ~ s[0..shift-1];\n}\nunittest\n{\n    alias candidate =\
    \ circular_shift;\n\n    assert(candidate(100L, 2L) == \"001\");\n    assert(candidate(12L,\
    \ 2L) == \"12\");\n    assert(candidate(97L, 8L) == \"79\");\n    assert(candidate(12L,\
    \ 1L) == \"21\");\n    assert(candidate(11L, 101L) == \"11\");\n}\nvoid main(){}"
  status: SyntaxError
  stderr: '/tmp/tmpmvt9mcrz.d(15): Error: template instance `to!string` template `to`
    is not defined, did you mean No?

    Failed: ["dmd", "-unittest", "-v", "-o-", "/tmp/tmpmvt9mcrz.d", "-I/tmp"]

    '
  stdout: ''
  timestamp: 1660164227
- exit_code: 1
  program: "import std.typecons;\nimport std.math;\n/*\nCircular shift the digits\
    \ of the integer x, shift the digits right by shift\n    and return the result\
    \ as a string.\n    If shift > number of digits, return digits reversed.\n   \
    \ >>> circular_shift(12L, 1L)\n    \"21\"\n    >>> circular_shift(12L, 2L)\n \
    \   \"12\"\n    \n*/\nstring circular_shift(long x, long shift) \n{\n    string\
    \ s = to!string(x);\n    if (shift > s.length)\n        return s[$-1..$];\n  \
    \  return s[shift..$] ~ s[0..shift-1];\n}\nunittest\n{\n    alias candidate =\
    \ circular_shift;\n\n    assert(candidate(100L, 2L) == \"001\");\n    assert(candidate(12L,\
    \ 2L) == \"12\");\n    assert(candidate(97L, 8L) == \"79\");\n    assert(candidate(12L,\
    \ 1L) == \"21\");\n    assert(candidate(11L, 101L) == \"11\");\n}\nvoid main(){}"
  status: SyntaxError
  stderr: '/tmp/tmpul0fy_n4.d(15): Error: template instance `to!string` template `to`
    is not defined, did you mean No?

    Failed: ["dmd", "-unittest", "-v", "-o-", "/tmp/tmpul0fy_n4.d", "-I/tmp"]

    '
  stdout: ''
  timestamp: 1660164227
- exit_code: 1
  program: "import std.typecons;\nimport std.math;\n/*\nCircular shift the digits\
    \ of the integer x, shift the digits right by shift\n    and return the result\
    \ as a string.\n    If shift > number of digits, return digits reversed.\n   \
    \ >>> circular_shift(12L, 1L)\n    \"21\"\n    >>> circular_shift(12L, 2L)\n \
    \   \"12\"\n    \n*/\nstring circular_shift(long x, long shift) \n{\n    string\
    \ s = to!string(x);\n    if (shift > s.length)\n        return s[$-1 .. 0];\n\
    \    return s[shift .. $] ~ s[0 .. shift - 1];\n}\nunittest\n{\n    alias candidate\
    \ = circular_shift;\n\n    assert(candidate(100L, 2L) == \"001\");\n    assert(candidate(12L,\
    \ 2L) == \"12\");\n    assert(candidate(97L, 8L) == \"79\");\n    assert(candidate(12L,\
    \ 1L) == \"21\");\n    assert(candidate(11L, 101L) == \"11\");\n}\nvoid main(){}"
  status: SyntaxError
  stderr: '/tmp/tmppmvtxfd0.d(15): Error: template instance `to!string` template `to`
    is not defined, did you mean No?

    Failed: ["dmd", "-unittest", "-v", "-o-", "/tmp/tmppmvtxfd0.d", "-I/tmp"]

    '
  stdout: ''
  timestamp: 1660164227
- exit_code: 1
  program: "import std.typecons;\nimport std.math;\n/*\nCircular shift the digits\
    \ of the integer x, shift the digits right by shift\n    and return the result\
    \ as a string.\n    If shift > number of digits, return digits reversed.\n   \
    \ >>> circular_shift(12L, 1L)\n    \"21\"\n    >>> circular_shift(12L, 2L)\n \
    \   \"12\"\n    \n*/\nstring circular_shift(long x, long shift) \n{\n    string\
    \ s = to!string(x);\n    if (shift > s.length)\n        return s[$-1..$].dup.reverse;\n\
    \    return s[shift..$] ~ s[0..shift-1];\n}\n/*\n    Return the number of digits\
    \ in the integer x.\n    >>> num_digits(0L)\n    1\n    >>> num_digits(5L)\n \
    \   1\n    >>> num_digits(1234567890L)\n    10\n*/\nunittest\n{\n    alias candidate\
    \ = circular_shift;\n\n    assert(candidate(100L, 2L) == \"001\");\n    assert(candidate(12L,\
    \ 2L) == \"12\");\n    assert(candidate(97L, 8L) == \"79\");\n    assert(candidate(12L,\
    \ 1L) == \"21\");\n    assert(candidate(11L, 101L) == \"11\");\n}\nvoid main(){}"
  status: SyntaxError
  stderr: '/tmp/tmpw3nhpx8d.d(15): Error: template instance `to!string` template `to`
    is not defined, did you mean No?

    /tmp/tmpw3nhpx8d.d(17): Error: template `std.typecons.reverse` cannot deduce function
    from argument types `!()(char[])`, candidates are:

    /home/a.guha/repos/spack/opt/spack/linux-centos7-haswell/gcc-9.2.0/dmd-2.081.1-jzbhflp3vff4u2dqrltybjq3in2pa22f/linux/bin64/../../src/phobos/std/typecons.d(1486):        `std.typecons.reverse(T)(T
    t) if (isTuple!T)`

    Failed: ["dmd", "-unittest", "-v", "-o-", "/tmp/tmpw3nhpx8d.d", "-I/tmp"]

    '
  stdout: ''
  timestamp: 1660164227
- exit_code: 1
  program: "import std.typecons;\nimport std.math;\n/*\nCircular shift the digits\
    \ of the integer x, shift the digits right by shift\n    and return the result\
    \ as a string.\n    If shift > number of digits, return digits reversed.\n   \
    \ >>> circular_shift(12L, 1L)\n    \"21\"\n    >>> circular_shift(12L, 2L)\n \
    \   \"12\"\n    \n*/\nstring circular_shift(long x, long shift) \n{\n    string\
    \ s = to!string(x);\n    if (shift > s.length)\n        return s[$-1..0];\n  \
    \  return s[shift..$] ~ s[0..shift-1];\n}\nunittest\n{\n    alias candidate =\
    \ circular_shift;\n\n    assert(candidate(100L, 2L) == \"001\");\n    assert(candidate(12L,\
    \ 2L) == \"12\");\n    assert(candidate(97L, 8L) == \"79\");\n    assert(candidate(12L,\
    \ 1L) == \"21\");\n    assert(candidate(11L, 101L) == \"11\");\n}\nvoid main(){}"
  status: SyntaxError
  stderr: '/tmp/tmpmvt9mcrz.d(15): Error: template instance `to!string` template `to`
    is not defined, did you mean No?

    Failed: ["dmd", "-unittest", "-v", "-o-", "/tmp/tmpmvt9mcrz.d", "-I/tmp"]

    '
  stdout: ''
  timestamp: 1660164227
- exit_code: 1
  program: "import std.typecons;\nimport std.math;\n/*\nCircular shift the digits\
    \ of the integer x, shift the digits right by shift\n    and return the result\
    \ as a string.\n    If shift > number of digits, return digits reversed.\n   \
    \ >>> circular_shift(12L, 1L)\n    \"21\"\n    >>> circular_shift(12L, 2L)\n \
    \   \"12\"\n    \n*/\nstring circular_shift(long x, long shift) \n{\n    string\
    \ s = to!string(x);\n    if (shift > s.length)\n        return s[$-1..$].reverse;\n\
    \    return s[shift..$] ~ s[0..shift-1];\n}\nunittest\n{\n    alias candidate\
    \ = circular_shift;\n\n    assert(candidate(100L, 2L) == \"001\");\n    assert(candidate(12L,\
    \ 2L) == \"12\");\n    assert(candidate(97L, 8L) == \"79\");\n    assert(candidate(12L,\
    \ 1L) == \"21\");\n    assert(candidate(11L, 101L) == \"11\");\n}\nvoid main(){}"
  status: SyntaxError
  stderr: '/tmp/tmpn599cip8.d(15): Error: template instance `to!string` template `to`
    is not defined, did you mean No?

    /tmp/tmpn599cip8.d(17): Error: template `std.typecons.reverse` cannot deduce function
    from argument types `!()(string)`, candidates are:

    /home/a.guha/repos/spack/opt/spack/linux-centos7-haswell/gcc-9.2.0/dmd-2.081.1-jzbhflp3vff4u2dqrltybjq3in2pa22f/linux/bin64/../../src/phobos/std/typecons.d(1486):        `std.typecons.reverse(T)(T
    t) if (isTuple!T)`

    Failed: ["dmd", "-unittest", "-v", "-o-", "/tmp/tmpn599cip8.d", "-I/tmp"]

    '
  stdout: ''
  timestamp: 1660164227
- exit_code: 1
  program: "import std.typecons;\nimport std.math;\n/*\nCircular shift the digits\
    \ of the integer x, shift the digits right by shift\n    and return the result\
    \ as a string.\n    If shift > number of digits, return digits reversed.\n   \
    \ >>> circular_shift(12L, 1L)\n    \"21\"\n    >>> circular_shift(12L, 2L)\n \
    \   \"12\"\n    \n*/\nstring circular_shift(long x, long shift) \n{\n    string\
    \ s = to!string(x);\n    if (shift > s.length)\n        return s[$-1..0];\n  \
    \  return s[shift..$] ~ s[0..shift-1];\n}\nunittest\n{\n    alias candidate =\
    \ circular_shift;\n\n    assert(candidate(100L, 2L) == \"001\");\n    assert(candidate(12L,\
    \ 2L) == \"12\");\n    assert(candidate(97L, 8L) == \"79\");\n    assert(candidate(12L,\
    \ 1L) == \"21\");\n    assert(candidate(11L, 101L) == \"11\");\n}\nvoid main(){}"
  status: SyntaxError
  stderr: '/tmp/tmpmvt9mcrz.d(15): Error: template instance `to!string` template `to`
    is not defined, did you mean No?

    Failed: ["dmd", "-unittest", "-v", "-o-", "/tmp/tmpmvt9mcrz.d", "-I/tmp"]

    '
  stdout: ''
  timestamp: 1660164227
- exit_code: 1
  program: "import std.typecons;\nimport std.math;\n/*\nCircular shift the digits\
    \ of the integer x, shift the digits right by shift\n    and return the result\
    \ as a string.\n    If shift > number of digits, return digits reversed.\n   \
    \ >>> circular_shift(12L, 1L)\n    \"21\"\n    >>> circular_shift(12L, 2L)\n \
    \   \"12\"\n    \n*/\nstring circular_shift(long x, long shift) \n{\n    string\
    \ s = to!string(x);\n    if (shift > s.length) \n    {\n        return s[$-1..$];\n\
    \    }\n    return s[shift..$] ~ s[0..shift-1];\n}\nunittest\n{\n    alias candidate\
    \ = circular_shift;\n\n    assert(candidate(100L, 2L) == \"001\");\n    assert(candidate(12L,\
    \ 2L) == \"12\");\n    assert(candidate(97L, 8L) == \"79\");\n    assert(candidate(12L,\
    \ 1L) == \"21\");\n    assert(candidate(11L, 101L) == \"11\");\n}\nvoid main(){}"
  status: SyntaxError
  stderr: '/tmp/tmp3p48h2rb.d(15): Error: template instance `to!string` template `to`
    is not defined, did you mean No?

    Failed: ["dmd", "-unittest", "-v", "-o-", "/tmp/tmp3p48h2rb.d", "-I/tmp"]

    '
  stdout: ''
  timestamp: 1660164227
- exit_code: 1
  program: "import std.typecons;\nimport std.math;\n/*\nCircular shift the digits\
    \ of the integer x, shift the digits right by shift\n    and return the result\
    \ as a string.\n    If shift > number of digits, return digits reversed.\n   \
    \ >>> circular_shift(12L, 1L)\n    \"21\"\n    >>> circular_shift(12L, 2L)\n \
    \   \"12\"\n    \n*/\nstring circular_shift(long x, long shift) \n{\n    string\
    \ s = to!string(x);\n    if (shift > s.length)\n        return s[$-shift..$];\n\
    \    return s[shift..$] ~ s[0..shift-1];\n}\nunittest\n{\n    alias candidate\
    \ = circular_shift;\n\n    assert(candidate(100L, 2L) == \"001\");\n    assert(candidate(12L,\
    \ 2L) == \"12\");\n    assert(candidate(97L, 8L) == \"79\");\n    assert(candidate(12L,\
    \ 1L) == \"21\");\n    assert(candidate(11L, 101L) == \"11\");\n}\nvoid main(){}"
  status: SyntaxError
  stderr: '/tmp/tmp1wq1mhqv.d(15): Error: template instance `to!string` template `to`
    is not defined, did you mean No?

    Failed: ["dmd", "-unittest", "-v", "-o-", "/tmp/tmp1wq1mhqv.d", "-I/tmp"]

    '
  stdout: ''
  timestamp: 1660164227
- exit_code: 1
  program: "import std.typecons;\nimport std.math;\n/*\nCircular shift the digits\
    \ of the integer x, shift the digits right by shift\n    and return the result\
    \ as a string.\n    If shift > number of digits, return digits reversed.\n   \
    \ >>> circular_shift(12L, 1L)\n    \"21\"\n    >>> circular_shift(12L, 2L)\n \
    \   \"12\"\n    \n*/\nstring circular_shift(long x, long shift) \n{\n    string\
    \ s = to!string(x);\n    long n = s.length;\n    if (shift > n) \n    {\n    \
    \    return s[n..0].idup;\n    }\n    return s[n-shift..n] ~ s[0..n-shift-1];\n\
    }\n/*\n    Return the number of digits in the integer x.\n    >>> num_digits(0L)\n\
    \    1\n    >>> num_digits(12345L)\n    5\n*/\nlong num_digits(long x) \n{\n \
    \   return to!string(x).length;\n}\n/*\n    Return the number of digits in the\
    \ integer x.\n    >>> num_digits(0L)\n    1\n    >>> num_digits(12345L)\n    5\n\
    */\nlong num_digits(long x) \n{\n    return to!string(x).length;\n}\n/*\n    Return\
    \ the number of digits in the integer x.\n    >>> num_digits(0L)\n    1\n    >>>\
    \ num_digits(12345L)\n    5\n*/\nlong num_digits(long x) \n{\n    return to!string(x).length;\n\
    }\n/*\n    Return the number of digits in the integer x.\n    >>> num_digits(0L)\n\
    \    1\n    >>> num_digits(12345L)\n    5\n*/\nlong num_digits(long x) \n{\n \
    \   return to!string(x).length;\n}\n/*\n    Return the number of digits in the\
    \ integer x.\n    >>> num_digits(0L)\n    1\n    >>> num_digits(12345L)\n    5\n\
    */\nlong num_digits(long x) \n{\n    return to!string(x).length;\n}\n/*\n    Return\
    \ the number of digits in the integer x.\n    >>> num_digits(0L)\n    1\n    >>>\
    \ num_digits(12345L)\n    5\n*/\nlong num_digits(long x) \n{\n    return to!string(x).length;\n\
    }\n/*\n    Return the number of digits in the integer x\nunittest\n{\n    alias\
    \ candidate = circular_shift;\n\n    assert(candidate(100L, 2L) == \"001\");\n\
    \    assert(candidate(12L, 2L) == \"12\");\n    assert(candidate(97L, 8L) == \"\
    79\");\n    assert(candidate(12L, 1L) == \"21\");\n    assert(candidate(11L, 101L)\
    \ == \"11\");\n}\nvoid main(){}"
  status: SyntaxError
  stderr: '/tmp/tmpey_76iy7.d(89): Error: unterminated /* */ comment

    Failed: ["dmd", "-unittest", "-v", "-o-", "/tmp/tmpey_76iy7.d", "-I/tmp"]

    '
  stdout: ''
  timestamp: 1660164227
- exit_code: 1
  program: "import std.typecons;\nimport std.math;\n/*\nCircular shift the digits\
    \ of the integer x, shift the digits right by shift\n    and return the result\
    \ as a string.\n    If shift > number of digits, return digits reversed.\n   \
    \ >>> circular_shift(12L, 1L)\n    \"21\"\n    >>> circular_shift(12L, 2L)\n \
    \   \"12\"\n    \n*/\nstring circular_shift(long x, long shift) \n{\n    string\
    \ s = to!string(x);\n    long len = s.length;\n    if (shift > len)\n    {\n \
    \       return s[$-len..$].dup.reverse;\n    }\n    return s[shift..$] ~ s[0..shift-1];\n\
    }\nunittest\n{\n    alias candidate = circular_shift;\n\n    assert(candidate(100L,\
    \ 2L) == \"001\");\n    assert(candidate(12L, 2L) == \"12\");\n    assert(candidate(97L,\
    \ 8L) == \"79\");\n    assert(candidate(12L, 1L) == \"21\");\n    assert(candidate(11L,\
    \ 101L) == \"11\");\n}\nvoid main(){}"
  status: SyntaxError
  stderr: '/tmp/tmpr5hfy8p_.d(15): Error: template instance `to!string` template `to`
    is not defined, did you mean No?

    /tmp/tmpr5hfy8p_.d(19): Error: template `std.typecons.reverse` cannot deduce function
    from argument types `!()(char[])`, candidates are:

    /home/a.guha/repos/spack/opt/spack/linux-centos7-haswell/gcc-9.2.0/dmd-2.081.1-jzbhflp3vff4u2dqrltybjq3in2pa22f/linux/bin64/../../src/phobos/std/typecons.d(1486):        `std.typecons.reverse(T)(T
    t) if (isTuple!T)`

    Failed: ["dmd", "-unittest", "-v", "-o-", "/tmp/tmpr5hfy8p_.d", "-I/tmp"]

    '
  stdout: ''
  timestamp: 1660164227
- exit_code: 1
  program: "import std.typecons;\nimport std.math;\n/*\nCircular shift the digits\
    \ of the integer x, shift the digits right by shift\n    and return the result\
    \ as a string.\n    If shift > number of digits, return digits reversed.\n   \
    \ >>> circular_shift(12L, 1L)\n    \"21\"\n    >>> circular_shift(12L, 2L)\n \
    \   \"12\"\n    \n*/\nstring circular_shift(long x, long shift) \n{\n    string\
    \ s = to!string(x);\n    if (shift > s.length)\n        return s[$-1..$].dup.reverse;\n\
    \    else\n        return s[shift..$] ~ s[0..shift-1];\n}\nunittest\n{\n    alias\
    \ candidate = circular_shift;\n\n    assert(candidate(100L, 2L) == \"001\");\n\
    \    assert(candidate(12L, 2L) == \"12\");\n    assert(candidate(97L, 8L) == \"\
    79\");\n    assert(candidate(12L, 1L) == \"21\");\n    assert(candidate(11L, 101L)\
    \ == \"11\");\n}\nvoid main(){}"
  status: SyntaxError
  stderr: '/tmp/tmp9_rlbu3z.d(15): Error: template instance `to!string` template `to`
    is not defined, did you mean No?

    /tmp/tmp9_rlbu3z.d(17): Error: template `std.typecons.reverse` cannot deduce function
    from argument types `!()(char[])`, candidates are:

    /home/a.guha/repos/spack/opt/spack/linux-centos7-haswell/gcc-9.2.0/dmd-2.081.1-jzbhflp3vff4u2dqrltybjq3in2pa22f/linux/bin64/../../src/phobos/std/typecons.d(1486):        `std.typecons.reverse(T)(T
    t) if (isTuple!T)`

    Failed: ["dmd", "-unittest", "-v", "-o-", "/tmp/tmp9_rlbu3z.d", "-I/tmp"]

    '
  stdout: ''
  timestamp: 1660164227
- exit_code: 1
  program: "import std.typecons;\nimport std.math;\n/*\nCircular shift the digits\
    \ of the integer x, shift the digits right by shift\n    and return the result\
    \ as a string.\n    If shift > number of digits, return digits reversed.\n   \
    \ >>> circular_shift(12L, 1L)\n    \"21\"\n    >>> circular_shift(12L, 2L)\n \
    \   \"12\"\n    \n*/\nstring circular_shift(long x, long shift) \n{\n    string\
    \ s = to!string(x);\n    if (shift > s.length)\n        return s[$-1..0];\n  \
    \  return s[shift..$] ~ s[0..shift-1];\n}\nunittest\n{\n    alias candidate =\
    \ circular_shift;\n\n    assert(candidate(100L, 2L) == \"001\");\n    assert(candidate(12L,\
    \ 2L) == \"12\");\n    assert(candidate(97L, 8L) == \"79\");\n    assert(candidate(12L,\
    \ 1L) == \"21\");\n    assert(candidate(11L, 101L) == \"11\");\n}\nvoid main(){}"
  status: SyntaxError
  stderr: '/tmp/tmpmvt9mcrz.d(15): Error: template instance `to!string` template `to`
    is not defined, did you mean No?

    Failed: ["dmd", "-unittest", "-v", "-o-", "/tmp/tmpmvt9mcrz.d", "-I/tmp"]

    '
  stdout: ''
  timestamp: 1660164227
- exit_code: 1
  program: "import std.typecons;\nimport std.math;\n/*\nCircular shift the digits\
    \ of the integer x, shift the digits right by shift\n    and return the result\
    \ as a string.\n    If shift > number of digits, return digits reversed.\n   \
    \ >>> circular_shift(12L, 1L)\n    \"21\"\n    >>> circular_shift(12L, 2L)\n \
    \   \"12\"\n    \n*/\nstring circular_shift(long x, long shift) \n{\n    string\
    \ s = to!string(x);\n    if (shift > s.length)\n        return s[$-1..0];\n  \
    \  return s[shift..$] ~ s[0..shift-1];\n}\nunittest\n{\n    alias candidate =\
    \ circular_shift;\n\n    assert(candidate(100L, 2L) == \"001\");\n    assert(candidate(12L,\
    \ 2L) == \"12\");\n    assert(candidate(97L, 8L) == \"79\");\n    assert(candidate(12L,\
    \ 1L) == \"21\");\n    assert(candidate(11L, 101L) == \"11\");\n}\nvoid main(){}"
  status: SyntaxError
  stderr: '/tmp/tmpmvt9mcrz.d(15): Error: template instance `to!string` template `to`
    is not defined, did you mean No?

    Failed: ["dmd", "-unittest", "-v", "-o-", "/tmp/tmpmvt9mcrz.d", "-I/tmp"]

    '
  stdout: ''
  timestamp: 1660164227
- exit_code: 1
  program: "import std.typecons;\nimport std.math;\n/*\nCircular shift the digits\
    \ of the integer x, shift the digits right by shift\n    and return the result\
    \ as a string.\n    If shift > number of digits, return digits reversed.\n   \
    \ >>> circular_shift(12L, 1L)\n    \"21\"\n    >>> circular_shift(12L, 2L)\n \
    \   \"12\"\n    \n*/\nstring circular_shift(long x, long shift) \n{\n    string\
    \ result = to!string(x);\n    if (shift > result.length) \n    {\n        return\
    \ result[$-1..$];\n    }\n    return result[shift..$] ~ result[0..shift-1];\n\
    }\n/*\n    Return the number of digits in the integer x.\n    >>> num_digits(0L)\n\
    \    1\n    >>> num_digits(1L)\n    1\n    >>> num_digits(10L)\n    2\n    >>>\
    \ num_digits(12345L)\n    5\n*/\nlong num_digits(long x) \n{\n    return to!string(x).length;\n\
    }\n/*\n    Return the number of digits in the integer x.\n    >>> num_digits(0L)\n\
    \    1\n    >>> num_digits(1L)\n    1\n    >>> num_digits(10L)\n    2\n    >>>\
    \ num_digits(12345L)\n    5\n*/\nlong num_digits(long x) \n{\n    return to!string(x).length;\n\
    }\n/*\n    Return the number of digits in the integer x.\n    >>> num_digits(0L)\n\
    \    1\n    >>> num_digits(1L)\n    1\n    >>> num_digits(10L)\n    2\n    >>>\
    \ num_digits(12345L)\n    5\n*/\nlong num_digits(long x) \n{\n    return to!string(x).length;\n\
    }\n/*\n    Return the number of digits in the integer x.\n    >>> num_digits(0L)\n\
    \    1\n    >>> num_digits(1L)\n    1\n    >>> num_digits(10L)\n    2\n    >>>\
    \ num_digits(12345L)\n    5\n*/\nlong num_digits(long x) \n{\n    return to!string(x).length;\n\
    }\n/*\n    Return the number of digits in the integer x.\n    >>> num_digits(0L)\n\
    \    1\n    >>> num_digits(1L)\n    1\n    >>> num_digits(10L)\n   \nunittest\n\
    {\n    alias candidate = circular_shift;\n\n    assert(candidate(100L, 2L) ==\
    \ \"001\");\n    assert(candidate(12L, 2L) == \"12\");\n    assert(candidate(97L,\
    \ 8L) == \"79\");\n    assert(candidate(12L, 1L) == \"21\");\n    assert(candidate(11L,\
    \ 101L) == \"11\");\n}\nvoid main(){}"
  status: SyntaxError
  stderr: '/tmp/tmp18grxgew.d(82): Error: unterminated /* */ comment

    Failed: ["dmd", "-unittest", "-v", "-o-", "/tmp/tmp18grxgew.d", "-I/tmp"]

    '
  stdout: ''
  timestamp: 1660164227
- exit_code: 1
  program: "import std.typecons;\nimport std.math;\n/*\nCircular shift the digits\
    \ of the integer x, shift the digits right by shift\n    and return the result\
    \ as a string.\n    If shift > number of digits, return digits reversed.\n   \
    \ >>> circular_shift(12L, 1L)\n    \"21\"\n    >>> circular_shift(12L, 2L)\n \
    \   \"12\"\n    \n*/\nstring circular_shift(long x, long shift) \n{\n    string\
    \ result = to!string(x);\n    long len = result.length;\n    if (shift > len)\n\
    \    {\n        return result[$-1..$];\n    }\n    else\n    {\n        return\
    \ result[shift..$] ~ result[0..shift-1];\n    }\n}\nunittest\n{\n    alias candidate\
    \ = circular_shift;\n\n    assert(candidate(100L, 2L) == \"001\");\n    assert(candidate(12L,\
    \ 2L) == \"12\");\n    assert(candidate(97L, 8L) == \"79\");\n    assert(candidate(12L,\
    \ 1L) == \"21\");\n    assert(candidate(11L, 101L) == \"11\");\n}\nvoid main(){}"
  status: SyntaxError
  stderr: '/tmp/tmpzd6pmjh6.d(15): Error: template instance `to!string` template `to`
    is not defined, did you mean No?

    Failed: ["dmd", "-unittest", "-v", "-o-", "/tmp/tmpzd6pmjh6.d", "-I/tmp"]

    '
  stdout: ''
  timestamp: 1660164227
- exit_code: 1
  program: "import std.typecons;\nimport std.math;\n/*\nCircular shift the digits\
    \ of the integer x, shift the digits right by shift\n    and return the result\
    \ as a string.\n    If shift > number of digits, return digits reversed.\n   \
    \ >>> circular_shift(12L, 1L)\n    \"21\"\n    >>> circular_shift(12L, 2L)\n \
    \   \"12\"\n    \n*/\nstring circular_shift(long x, long shift) \n{\n    string\
    \ result = to!string(x);\n    if (shift > result.length)\n    {\n        return\
    \ result[$-1..$];\n    }\n    else\n    {\n        return result[shift..$] ~ result[0..shift-1];\n\
    \    }\n}\nunittest\n{\n    alias candidate = circular_shift;\n\n    assert(candidate(100L,\
    \ 2L) == \"001\");\n    assert(candidate(12L, 2L) == \"12\");\n    assert(candidate(97L,\
    \ 8L) == \"79\");\n    assert(candidate(12L, 1L) == \"21\");\n    assert(candidate(11L,\
    \ 101L) == \"11\");\n}\nvoid main(){}"
  status: SyntaxError
  stderr: '/tmp/tmpr_x9f_6z.d(15): Error: template instance `to!string` template `to`
    is not defined, did you mean No?

    Failed: ["dmd", "-unittest", "-v", "-o-", "/tmp/tmpr_x9f_6z.d", "-I/tmp"]

    '
  stdout: ''
  timestamp: 1660164227
- exit_code: 1
  program: "import std.typecons;\nimport std.math;\n/*\nCircular shift the digits\
    \ of the integer x, shift the digits right by shift\n    and return the result\
    \ as a string.\n    If shift > number of digits, return digits reversed.\n   \
    \ >>> circular_shift(12L, 1L)\n    \"21\"\n    >>> circular_shift(12L, 2L)\n \
    \   \"12\"\n    \n*/\nstring circular_shift(long x, long shift) \n{\n    string\
    \ s = to!string(x);\n    if (shift > s.length)\n        return s[$-shift..$];\n\
    \    return s[shift..$] ~ s[0..shift-1];\n}\nunittest\n{\n    alias candidate\
    \ = circular_shift;\n\n    assert(candidate(100L, 2L) == \"001\");\n    assert(candidate(12L,\
    \ 2L) == \"12\");\n    assert(candidate(97L, 8L) == \"79\");\n    assert(candidate(12L,\
    \ 1L) == \"21\");\n    assert(candidate(11L, 101L) == \"11\");\n}\nvoid main(){}"
  status: SyntaxError
  stderr: '/tmp/tmp1wq1mhqv.d(15): Error: template instance `to!string` template `to`
    is not defined, did you mean No?

    Failed: ["dmd", "-unittest", "-v", "-o-", "/tmp/tmp1wq1mhqv.d", "-I/tmp"]

    '
  stdout: ''
  timestamp: 1660164227
- exit_code: 1
  program: "import std.typecons;\nimport std.math;\n/*\nCircular shift the digits\
    \ of the integer x, shift the digits right by shift\n    and return the result\
    \ as a string.\n    If shift > number of digits, return digits reversed.\n   \
    \ >>> circular_shift(12L, 1L)\n    \"21\"\n    >>> circular_shift(12L, 2L)\n \
    \   \"12\"\n    \n*/\nstring circular_shift(long x, long shift) \n{\n    string\
    \ s = to!string(x);\n    if (shift > s.length)\n        return s[$-1..$].reverse;\n\
    \    return s[shift..$] ~ s[0..shift-1];\n}\n/*\n    Return the number of digits\
    \ in the integer x.\n    >>> num_digits(12L)\n    2\n    >>> num_digits(12345L)\n\
    \    5\n*/\nlong num_digits(long x) \n{\n    return to!string(x).length;\n}\n\
    /*\n    Return the number of digits in the integer x.\n    >>> num_digits(12L)\n\
    \    2\n    >>> num_digits(12345L)\n    5\n*/\nlong num_digits(long x) \n{\n \
    \   return to!string(x).length;\n}\n/*\n    Return the number of digits in the\
    \ integer x.\n    >>> num_digits(12L)\n    2\n    >>> num_digits(12345L)\n   \
    \ 5\n*/\nlong num_digits(long x) \n{\n    return to!string(x).length;\n}\n/*\n\
    \    Return the number of digits in the integer x.\n    >>> num_digits(12L)\n\
    \    2\n    >>> num_digits(12345L)\n    5\n*/\nlong num_digits(long x) \n{\n \
    \   return to!string(x).length;\n}\n/*\n    Return the number of digits in the\
    \ integer x.\n    >>> num_digits(12L)\n    2\n    >>> num_digits(12345L)\n   \
    \ 5\n*/\nlong num_digits(long x) \n{\n    return to!string(x).length;\n}\n/*\n\
    \    Return the number of digits in the integer x.\n    >>> num_digits(12L)\n\
    \    2\n    >>> num_digits(12345L)\n    5\n*/\nlong num_digits(long x) \n{\n \
    \   return to!string(x).length;\n}\n/*\n    Return the number of digits in the\
    \ integer x.\n    >>> num_digits(12L)\n    2\n   \nunittest\n{\n    alias candidate\
    \ = circular_shift;\n\n    assert(candidate(100L, 2L) == \"001\");\n    assert(candidate(12L,\
    \ 2L) == \"12\");\n    assert(candidate(97L, 8L) == \"79\");\n    assert(candidate(12L,\
    \ 1L) == \"21\");\n    assert(candidate(11L, 101L) == \"11\");\n}\nvoid main(){}"
  status: SyntaxError
  stderr: '/tmp/tmpu2gk344v.d(86): Error: unterminated /* */ comment

    Failed: ["dmd", "-unittest", "-v", "-o-", "/tmp/tmpu2gk344v.d", "-I/tmp"]

    '
  stdout: ''
  timestamp: 1660164227
- exit_code: 1
  program: "import std.typecons;\nimport std.math;\n/*\nCircular shift the digits\
    \ of the integer x, shift the digits right by shift\n    and return the result\
    \ as a string.\n    If shift > number of digits, return digits reversed.\n   \
    \ >>> circular_shift(12L, 1L)\n    \"21\"\n    >>> circular_shift(12L, 2L)\n \
    \   \"12\"\n    \n*/\nstring circular_shift(long x, long shift) \n{\n    string\
    \ s = to!string(x);\n    shift %= s.length;\n    return s[shift..$] ~ s[0..shift];\n\
    }\n/*\n    Return the number of digits in the integer x.\n    >>> num_digits(1L)\n\
    \    1\n    >>> num_digits(12L)\n    2\n    >>> num_digits(123L)\n    3\n*/\n\
    unittest\n{\n    alias candidate = circular_shift;\n\n    assert(candidate(100L,\
    \ 2L) == \"001\");\n    assert(candidate(12L, 2L) == \"12\");\n    assert(candidate(97L,\
    \ 8L) == \"79\");\n    assert(candidate(12L, 1L) == \"21\");\n    assert(candidate(11L,\
    \ 101L) == \"11\");\n}\nvoid main(){}"
  status: SyntaxError
  stderr: '/tmp/tmpkt2x1ir8.d(15): Error: template instance `to!string` template `to`
    is not defined, did you mean No?

    Failed: ["dmd", "-unittest", "-v", "-o-", "/tmp/tmpkt2x1ir8.d", "-I/tmp"]

    '
  stdout: ''
  timestamp: 1660164227
- exit_code: 1
  program: "import std.typecons;\nimport std.math;\n/*\nCircular shift the digits\
    \ of the integer x, shift the digits right by shift\n    and return the result\
    \ as a string.\n    If shift > number of digits, return digits reversed.\n   \
    \ >>> circular_shift(12L, 1L)\n    \"21\"\n    >>> circular_shift(12L, 2L)\n \
    \   \"12\"\n    \n*/\nstring circular_shift(long x, long shift) \n{\n    string\
    \ s = to!string(x);\n    if (shift > s.length)\n        return s[$-1..$].dup.reverse;\n\
    \    return s[shift..$] ~ s[0..shift-1];\n}\nunittest\n{\n    alias candidate\
    \ = circular_shift;\n\n    assert(candidate(100L, 2L) == \"001\");\n    assert(candidate(12L,\
    \ 2L) == \"12\");\n    assert(candidate(97L, 8L) == \"79\");\n    assert(candidate(12L,\
    \ 1L) == \"21\");\n    assert(candidate(11L, 101L) == \"11\");\n}\nvoid main(){}"
  status: SyntaxError
  stderr: '/tmp/tmpcjm4ghnv.d(15): Error: template instance `to!string` template `to`
    is not defined, did you mean No?

    /tmp/tmpcjm4ghnv.d(17): Error: template `std.typecons.reverse` cannot deduce function
    from argument types `!()(char[])`, candidates are:

    /home/a.guha/repos/spack/opt/spack/linux-centos7-haswell/gcc-9.2.0/dmd-2.081.1-jzbhflp3vff4u2dqrltybjq3in2pa22f/linux/bin64/../../src/phobos/std/typecons.d(1486):        `std.typecons.reverse(T)(T
    t) if (isTuple!T)`

    Failed: ["dmd", "-unittest", "-v", "-o-", "/tmp/tmpcjm4ghnv.d", "-I/tmp"]

    '
  stdout: ''
  timestamp: 1660164227
- exit_code: 1
  program: "import std.typecons;\nimport std.math;\n/*\nCircular shift the digits\
    \ of the integer x, shift the digits right by shift\n    and return the result\
    \ as a string.\n    If shift > number of digits, return digits reversed.\n   \
    \ >>> circular_shift(12L, 1L)\n    \"21\"\n    >>> circular_shift(12L, 2L)\n \
    \   \"12\"\n    \n*/\nstring circular_shift(long x, long shift) \n{\n    string\
    \ s = to!string(x);\n    if (shift > s.length)\n        return s[$-1..$].reverse;\n\
    \    return s[shift..$] ~ s[0..shift-1];\n}\n/*\n    Return the number of digits\
    \ in the integer x.\n    >>> num_digits(1L)\n    1\n    >>> num_digits(12L)\n\
    \    2\n    >>> num_digits(123L)\n    3\n*/\nlong num_digits(long x) \n{\n   \
    \ return to!string(x).length;\n}\n/*\n    Return the number of digits in the integer\
    \ x.\n    >>> num_digits(1L)\n    1\n    >>> num_digits(12L)\n    2\n    >>> num_digits(123L)\n\
    \    3\n*/\nlong num_digits(long x) \n{\n    return to!string(x).length;\n}\n\
    /*\n    Return the number of digits in the integer x.\n    >>> num_digits(1L)\n\
    \    1\n    >>> num_digits(12L)\n    2\n    >>> num_digits(123L)\n    3\n*/\n\
    long num_digits(long x) \n{\n    return to!string(x).length;\n}\n/*\n    Return\
    \ the number of digits in the integer x.\n    >>> num_digits(1L)\n    1\n    >>>\
    \ num_digits(12L)\n    2\n    >>> num_digits(123L)\n    3\n*/\nlong num_digits(long\
    \ x) \n{\n    return to!string(x).length;\n}\n/*\n    Return the number of digits\
    \ in the integer x.\n    >>> num_digits(1L)\n    1\n    >>> num_digits(12L)\n\
    \    2\n    >>> num_digits(123L)\n    3\n*/\nlong num_digits(long x) \n{\n   \
    \ return to!string(x).length;\n}\n/*\n    Return the number of digits in the integer\
    \ x.\n    >>> num_digits(1L)\n    1\n    >>> num_digits(\nunittest\n{\n    alias\
    \ candidate = circular_shift;\n\n    assert(candidate(100L, 2L) == \"001\");\n\
    \    assert(candidate(12L, 2L) == \"12\");\n    assert(candidate(97L, 8L) == \"\
    79\");\n    assert(candidate(12L, 1L) == \"21\");\n    assert(candidate(11L, 101L)\
    \ == \"11\");\n}\nvoid main(){}"
  status: SyntaxError
  stderr: '/tmp/tmp91qu2ak6.d(85): Error: unterminated /* */ comment

    Failed: ["dmd", "-unittest", "-v", "-o-", "/tmp/tmp91qu2ak6.d", "-I/tmp"]

    '
  stdout: ''
  timestamp: 1660164227
- exit_code: 1
  program: "import std.typecons;\nimport std.math;\n/*\nCircular shift the digits\
    \ of the integer x, shift the digits right by shift\n    and return the result\
    \ as a string.\n    If shift > number of digits, return digits reversed.\n   \
    \ >>> circular_shift(12L, 1L)\n    \"21\"\n    >>> circular_shift(12L, 2L)\n \
    \   \"12\"\n    \n*/\nstring circular_shift(long x, long shift) \n{\n    string\
    \ s = to!string(x);\n    if (shift > s.length) \n    {\n        return s[$-1..$];\n\
    \    }\n    return s[shift..$] ~ s[0..shift-1];\n}\n/*\nGenerate a list of all\
    \ circular shifts of the integer x.\n    >>> circular_shifts(12L)\n    [\"21\"\
    , \"12\"]\n    >>> circular_shifts(123L)\n    [\"321\", \"231\", \"123\"]\n*/\n\
    string[] circular_shifts(long x) \n{\n    string s = to!string(x);\n    string[]\
    \ shifts = new string[s.length];\n    foreach (i; 0..s.length) \n    {\n     \
    \   shifts[i] = circular_shift(x, i);\n    }\n    return shifts;\n}\n/*\nSort\
    \ the list of circular shifts of the integer x.\n    >>> circular_shifts_sorted(12L)\n\
    \    [\"12\", \"21\"]\n    >>> circular_shifts_sorted(123L)\n    [\"123\", \"\
    231\", \"321\"]\n*/\nstring[] circular_shifts_sorted(long x) \n{\n    string[]\
    \ shifts = circular_shifts(x);\n    sort(shifts);\n    return shifts;\n}\n/*\n\
    Return the smallest circular shift of the integer x.\n    >>> smallest_circular_shift(12L)\n\
    \    \"12\"\n    >>> smallest_circular_shift(123L)\n    \"123\"\n*/\nstring smallest_circular_shift(long\
    \ x) \n{\n    return circular_shifts_sorted(x)[0];\n}\n/*\nReturn the largest\
    \ circular shift of the integer x.\n    >>> largest_circular_shift(12L)\n    \"\
    21\"\n    >>> largest_circular_shift(123L)\n    \"321\"\n*/\nstring largest_circular_shift(long\
    \ x) \n{\n    return circular_shifts_sorted(x)[$-1];\n}\n/*\nReturn the integer\
    \ corresponding to the string s.\n    >>> int_from_string(\"123\")\n    123L\n\
    */\nlong int_from_string(\nunittest\n{\n    alias candidate = circular_shift;\n\
    \n    assert(candidate(100L, 2L) == \"001\");\n    assert(candidate(12L, 2L) ==\
    \ \"12\");\n    assert(candidate(97L, 8L) == \"79\");\n    assert(candidate(12L,\
    \ 1L) == \"21\");\n    assert(candidate(11L, 101L) == \"11\");\n}\nvoid main(){}"
  status: SyntaxError
  stderr: '/tmp/tmpy4eqqvv7.d(80): Error: basic type expected, not `unittest`

    /tmp/tmpy4eqqvv7.d(80): Error: found `unittest` when expecting `)`

    Failed: ["dmd", "-unittest", "-v", "-o-", "/tmp/tmpy4eqqvv7.d", "-I/tmp"]

    '
  stdout: ''
  timestamp: 1660164227
- exit_code: 1
  program: "import std.typecons;\nimport std.math;\n/*\nCircular shift the digits\
    \ of the integer x, shift the digits right by shift\n    and return the result\
    \ as a string.\n    If shift > number of digits, return digits reversed.\n   \
    \ >>> circular_shift(12L, 1L)\n    \"21\"\n    >>> circular_shift(12L, 2L)\n \
    \   \"12\"\n    \n*/\nstring circular_shift(long x, long shift) \n{\n    string\
    \ s = format(\"%d\", x);\n    if (shift > s.length)\n    {\n        return s[$-1..$];\n\
    \    }\n    else\n    {\n        return s[shift..$] ~ s[0..shift-1];\n    }\n\
    }\nunittest\n{\n    alias candidate = circular_shift;\n\n    assert(candidate(100L,\
    \ 2L) == \"001\");\n    assert(candidate(12L, 2L) == \"12\");\n    assert(candidate(97L,\
    \ 8L) == \"79\");\n    assert(candidate(12L, 1L) == \"21\");\n    assert(candidate(11L,\
    \ 101L) == \"11\");\n}\nvoid main(){}"
  status: SyntaxError
  stderr: '/tmp/tmpvo4k53rn.d(15): Error: undefined identifier `format`

    Failed: ["dmd", "-unittest", "-v", "-o-", "/tmp/tmpvo4k53rn.d", "-I/tmp"]

    '
  stdout: ''
  timestamp: 1660164227
- exit_code: 1
  program: "import std.typecons;\nimport std.math;\n/*\nCircular shift the digits\
    \ of the integer x, shift the digits right by shift\n    and return the result\
    \ as a string.\n    If shift > number of digits, return digits reversed.\n   \
    \ >>> circular_shift(12L, 1L)\n    \"21\"\n    >>> circular_shift(12L, 2L)\n \
    \   \"12\"\n    \n*/\nstring circular_shift(long x, long shift) \n{\n    string\
    \ s = to!string(x);\n    if (shift > s.length) {\n        return s[$-1..$];\n\
    \    }\n    return s[shift..$] ~ s[0..shift-1];\n}\nunittest\n{\n    alias candidate\
    \ = circular_shift;\n\n    assert(candidate(100L, 2L) == \"001\");\n    assert(candidate(12L,\
    \ 2L) == \"12\");\n    assert(candidate(97L, 8L) == \"79\");\n    assert(candidate(12L,\
    \ 1L) == \"21\");\n    assert(candidate(11L, 101L) == \"11\");\n}\nvoid main(){}"
  status: SyntaxError
  stderr: '/tmp/tmpdahqneij.d(15): Error: template instance `to!string` template `to`
    is not defined, did you mean No?

    Failed: ["dmd", "-unittest", "-v", "-o-", "/tmp/tmpdahqneij.d", "-I/tmp"]

    '
  stdout: ''
  timestamp: 1660164227
- exit_code: 1
  program: "import std.typecons;\nimport std.math;\n/*\nCircular shift the digits\
    \ of the integer x, shift the digits right by shift\n    and return the result\
    \ as a string.\n    If shift > number of digits, return digits reversed.\n   \
    \ >>> circular_shift(12L, 1L)\n    \"21\"\n    >>> circular_shift(12L, 2L)\n \
    \   \"12\"\n    \n*/\nstring circular_shift(long x, long shift) \n{\n    string\
    \ s = to!string(x);\n    if (shift > s.length) \n    {\n        return s[$-1..$].dup;\n\
    \    }\n    return s[shift..$] ~ s[0..shift-1];\n}\nunittest\n{\n    alias candidate\
    \ = circular_shift;\n\n    assert(candidate(100L, 2L) == \"001\");\n    assert(candidate(12L,\
    \ 2L) == \"12\");\n    assert(candidate(97L, 8L) == \"79\");\n    assert(candidate(12L,\
    \ 1L) == \"21\");\n    assert(candidate(11L, 101L) == \"11\");\n}\nvoid main(){}"
  status: SyntaxError
  stderr: '/tmp/tmp5e8765iq.d(15): Error: template instance `to!string` template `to`
    is not defined, did you mean No?

    Failed: ["dmd", "-unittest", "-v", "-o-", "/tmp/tmp5e8765iq.d", "-I/tmp"]

    '
  stdout: ''
  timestamp: 1660164227
- exit_code: 1
  program: "import std.typecons;\nimport std.math;\n/*\nCircular shift the digits\
    \ of the integer x, shift the digits right by shift\n    and return the result\
    \ as a string.\n    If shift > number of digits, return digits reversed.\n   \
    \ >>> circular_shift(12L, 1L)\n    \"21\"\n    >>> circular_shift(12L, 2L)\n \
    \   \"12\"\n    \n*/\nstring circular_shift(long x, long shift) \n{\n    string\
    \ s = to!string(x);\n    shift %= s.length;\n    return s[shift..$] ~ s[0..shift];\n\
    }\nunittest\n{\n    alias candidate = circular_shift;\n\n    assert(candidate(100L,\
    \ 2L) == \"001\");\n    assert(candidate(12L, 2L) == \"12\");\n    assert(candidate(97L,\
    \ 8L) == \"79\");\n    assert(candidate(12L, 1L) == \"21\");\n    assert(candidate(11L,\
    \ 101L) == \"11\");\n}\nvoid main(){}"
  status: SyntaxError
  stderr: '/tmp/tmpyl6g8zts.d(15): Error: template instance `to!string` template `to`
    is not defined, did you mean No?

    Failed: ["dmd", "-unittest", "-v", "-o-", "/tmp/tmpyl6g8zts.d", "-I/tmp"]

    '
  stdout: ''
  timestamp: 1660164227
- exit_code: 1
  program: "import std.typecons;\nimport std.math;\n/*\nCircular shift the digits\
    \ of the integer x, shift the digits right by shift\n    and return the result\
    \ as a string.\n    If shift > number of digits, return digits reversed.\n   \
    \ >>> circular_shift(12L, 1L)\n    \"21\"\n    >>> circular_shift(12L, 2L)\n \
    \   \"12\"\n    \n*/\nstring circular_shift(long x, long shift) \n{\n    string\
    \ s = to!string(x);\n    if (shift > s.length)\n        return s[$-1..$].reversed;\n\
    \    return s[shift..$] ~ s[0..shift-1];\n}\nunittest\n{\n    alias candidate\
    \ = circular_shift;\n\n    assert(candidate(100L, 2L) == \"001\");\n    assert(candidate(12L,\
    \ 2L) == \"12\");\n    assert(candidate(97L, 8L) == \"79\");\n    assert(candidate(12L,\
    \ 1L) == \"21\");\n    assert(candidate(11L, 101L) == \"11\");\n}\nvoid main(){}"
  status: SyntaxError
  stderr: '/tmp/tmpm9_k865o.d(15): Error: template instance `to!string` template `to`
    is not defined, did you mean No?

    /tmp/tmpm9_k865o.d(17): Error: no property `reversed` for type `string`

    Failed: ["dmd", "-unittest", "-v", "-o-", "/tmp/tmpm9_k865o.d", "-I/tmp"]

    '
  stdout: ''
  timestamp: 1660164227
- exit_code: 1
  program: "import std.typecons;\nimport std.math;\n/*\nCircular shift the digits\
    \ of the integer x, shift the digits right by shift\n    and return the result\
    \ as a string.\n    If shift > number of digits, return digits reversed.\n   \
    \ >>> circular_shift(12L, 1L)\n    \"21\"\n    >>> circular_shift(12L, 2L)\n \
    \   \"12\"\n    \n*/\nstring circular_shift(long x, long shift) \n{\n    string\
    \ s = to!string(x);\n    if (shift > s.length)\n        return s[$-shift..$];\n\
    \    else\n        return s[shift..$] ~ s[0..shift-1];\n}\nunittest\n{\n    alias\
    \ candidate = circular_shift;\n\n    assert(candidate(100L, 2L) == \"001\");\n\
    \    assert(candidate(12L, 2L) == \"12\");\n    assert(candidate(97L, 8L) == \"\
    79\");\n    assert(candidate(12L, 1L) == \"21\");\n    assert(candidate(11L, 101L)\
    \ == \"11\");\n}\nvoid main(){}"
  status: SyntaxError
  stderr: '/tmp/tmpyai4gqov.d(15): Error: template instance `to!string` template `to`
    is not defined, did you mean No?

    Failed: ["dmd", "-unittest", "-v", "-o-", "/tmp/tmpyai4gqov.d", "-I/tmp"]

    '
  stdout: ''
  timestamp: 1660164227
- exit_code: 1
  program: "import std.typecons;\nimport std.math;\n/*\nCircular shift the digits\
    \ of the integer x, shift the digits right by shift\n    and return the result\
    \ as a string.\n    If shift > number of digits, return digits reversed.\n   \
    \ >>> circular_shift(12L, 1L)\n    \"21\"\n    >>> circular_shift(12L, 2L)\n \
    \   \"12\"\n    \n*/\nstring circular_shift(long x, long shift) \n{\n    string\
    \ s = to!string(x);\n    if (shift > s.length)\n        return s[$-1..$];\n  \
    \  return s[shift..$] ~ s[0..shift-1];\n}\nunittest\n{\n    alias candidate =\
    \ circular_shift;\n\n    assert(candidate(100L, 2L) == \"001\");\n    assert(candidate(12L,\
    \ 2L) == \"12\");\n    assert(candidate(97L, 8L) == \"79\");\n    assert(candidate(12L,\
    \ 1L) == \"21\");\n    assert(candidate(11L, 101L) == \"11\");\n}\nvoid main(){}"
  status: SyntaxError
  stderr: '/tmp/tmpul0fy_n4.d(15): Error: template instance `to!string` template `to`
    is not defined, did you mean No?

    Failed: ["dmd", "-unittest", "-v", "-o-", "/tmp/tmpul0fy_n4.d", "-I/tmp"]

    '
  stdout: ''
  timestamp: 1660164227
- exit_code: 1
  program: "import std.typecons;\nimport std.math;\n/*\nCircular shift the digits\
    \ of the integer x, shift the digits right by shift\n    and return the result\
    \ as a string.\n    If shift > number of digits, return digits reversed.\n   \
    \ >>> circular_shift(12L, 1L)\n    \"21\"\n    >>> circular_shift(12L, 2L)\n \
    \   \"12\"\n    \n*/\nstring circular_shift(long x, long shift) \n{\n    string\
    \ s = to!string(x);\n    if (shift > s.length)\n        return s[$-shift..$];\n\
    \    return s[shift..$] ~ s[0..shift-1];\n}\n/*\n    Return the number of digits\
    \ in the integer x.\n    >>> num_digits(0L)\n    1\n    >>> num_digits(1L)\n \
    \   1\n    >>> num_digits(10L)\n    2\n    >>> num_digits(12345L)\n    5\n*/\n\
    long num_digits(long x) \n{\n    return to!string(x).length;\n}\n/*\n    Return\
    \ the number of digits in the integer x.\n    >>> num_digits(0L)\n    1\n    >>>\
    \ num_digits(1L)\n    1\n    >>> num_digits(10L)\n    2\n    >>> num_digits(12345L)\n\
    \    5\n*/\nlong num_digits(long x) \n{\n    return to!string(x).length;\n}\n\
    /*\n    Return the number of digits in the integer x.\n    >>> num_digits(0L)\n\
    \    1\n    >>> num_digits(1L)\n    1\n    >>> num_digits(10L)\n    2\n    >>>\
    \ num_digits(12345L)\n    5\n*/\nlong num_digits(long x) \n{\n    return to!string(x).length;\n\
    }\n/*\n    Return the number of digits in the integer x.\n    >>> num_digits(0L)\n\
    \    1\n    >>> num_digits(1L)\n    1\n    >>> num_digits(10L)\n    2\n    >>>\
    \ num_digits(12345L)\n    5\n*/\nlong num_digits(long x) \n{\n    return to!string(x).length;\n\
    }\n/*\n    Return the number of digits in the integer x.\n    >>> num_digits(0L)\n\
    \    1\n    >>> num_digits(1L)\n    1\n    >>> num_digits(10L)\n    2\n    >>>\
    \ num_dig\nunittest\n{\n    alias candidate = circular_shift;\n\n    assert(candidate(100L,\
    \ 2L) == \"001\");\n    assert(candidate(12L, 2L) == \"12\");\n    assert(candidate(97L,\
    \ 8L) == \"79\");\n    assert(candidate(12L, 1L) == \"21\");\n    assert(candidate(11L,\
    \ 101L) == \"11\");\n}\nvoid main(){}"
  status: SyntaxError
  stderr: '/tmp/tmp6_zbhuf4.d(80): Error: unterminated /* */ comment

    Failed: ["dmd", "-unittest", "-v", "-o-", "/tmp/tmp6_zbhuf4.d", "-I/tmp"]

    '
  stdout: ''
  timestamp: 1660164227
- exit_code: 1
  program: "import std.typecons;\nimport std.math;\n/*\nCircular shift the digits\
    \ of the integer x, shift the digits right by shift\n    and return the result\
    \ as a string.\n    If shift > number of digits, return digits reversed.\n   \
    \ >>> circular_shift(12L, 1L)\n    \"21\"\n    >>> circular_shift(12L, 2L)\n \
    \   \"12\"\n    \n*/\nstring circular_shift(long x, long shift) \n{\n    string\
    \ s = to!string(x);\n    if (shift > s.length)\n        return s[$-1..$].reverse;\n\
    \    return s[shift..$] ~ s[0..shift-1];\n}\n/*\n    >>> circular_shift(12L, 1L)\n\
    \    \"21\"\n    >>> circular_shift(12L, 2L)\n    \"12\"\n*/\nunittest\n{\n  \
    \  alias candidate = circular_shift;\n\n    assert(candidate(100L, 2L) == \"001\"\
    );\n    assert(candidate(12L, 2L) == \"12\");\n    assert(candidate(97L, 8L) ==\
    \ \"79\");\n    assert(candidate(12L, 1L) == \"21\");\n    assert(candidate(11L,\
    \ 101L) == \"11\");\n}\nvoid main(){}"
  status: SyntaxError
  stderr: '/tmp/tmpgklvay0i.d(15): Error: template instance `to!string` template `to`
    is not defined, did you mean No?

    /tmp/tmpgklvay0i.d(17): Error: template `std.typecons.reverse` cannot deduce function
    from argument types `!()(string)`, candidates are:

    /home/a.guha/repos/spack/opt/spack/linux-centos7-haswell/gcc-9.2.0/dmd-2.081.1-jzbhflp3vff4u2dqrltybjq3in2pa22f/linux/bin64/../../src/phobos/std/typecons.d(1486):        `std.typecons.reverse(T)(T
    t) if (isTuple!T)`

    Failed: ["dmd", "-unittest", "-v", "-o-", "/tmp/tmpgklvay0i.d", "-I/tmp"]

    '
  stdout: ''
  timestamp: 1660164227
- exit_code: 1
  program: "import std.typecons;\nimport std.math;\n/*\nCircular shift the digits\
    \ of the integer x, shift the digits right by shift\n    and return the result\
    \ as a string.\n    If shift > number of digits, return digits reversed.\n   \
    \ >>> circular_shift(12L, 1L)\n    \"21\"\n    >>> circular_shift(12L, 2L)\n \
    \   \"12\"\n    \n*/\nstring circular_shift(long x, long shift) \n{\n    string\
    \ s = to!string(x);\n    if (shift > s.length)\n        return s[$-1..0];\n  \
    \  return s[shift..$] ~ s[0..shift-1];\n}\n/*\n    >>> is_circular_prime(197L)\n\
    \    true\n    >>> is_circular_prime(197L)\n    true\n    >>> is_circular_prime(197L)\n\
    \    true\n    >>> is_circular_prime(197L)\n    true\n    >>> is_circular_prime(197L)\n\
    \    true\n    >>> is_circular_prime(197L)\n    true\n    >>> is_circular_prime(197L)\n\
    \    true\n    >>> is_circular_prime(197L)\n    true\n    >>> is_circular_prime(197L)\n\
    \    true\n*/\nunittest\n{\n    alias candidate = circular_shift;\n\n    assert(candidate(100L,\
    \ 2L) == \"001\");\n    assert(candidate(12L, 2L) == \"12\");\n    assert(candidate(97L,\
    \ 8L) == \"79\");\n    assert(candidate(12L, 1L) == \"21\");\n    assert(candidate(11L,\
    \ 101L) == \"11\");\n}\nvoid main(){}"
  status: SyntaxError
  stderr: '/tmp/tmp85qbmd6v.d(15): Error: template instance `to!string` template `to`
    is not defined, did you mean No?

    Failed: ["dmd", "-unittest", "-v", "-o-", "/tmp/tmp85qbmd6v.d", "-I/tmp"]

    '
  stdout: ''
  timestamp: 1660164227
- exit_code: 1
  program: "import std.typecons;\nimport std.math;\n/*\nCircular shift the digits\
    \ of the integer x, shift the digits right by shift\n    and return the result\
    \ as a string.\n    If shift > number of digits, return digits reversed.\n   \
    \ >>> circular_shift(12L, 1L)\n    \"21\"\n    >>> circular_shift(12L, 2L)\n \
    \   \"12\"\n    \n*/\nstring circular_shift(long x, long shift) \n{\n    string\
    \ s = to!string(x);\n    if (shift > s.length)\n        return s[$-1..$];\n  \
    \  return s[shift..$] ~ s[0..shift-1];\n}\nunittest\n{\n    alias candidate =\
    \ circular_shift;\n\n    assert(candidate(100L, 2L) == \"001\");\n    assert(candidate(12L,\
    \ 2L) == \"12\");\n    assert(candidate(97L, 8L) == \"79\");\n    assert(candidate(12L,\
    \ 1L) == \"21\");\n    assert(candidate(11L, 101L) == \"11\");\n}\nvoid main(){}"
  status: SyntaxError
  stderr: '/tmp/tmpul0fy_n4.d(15): Error: template instance `to!string` template `to`
    is not defined, did you mean No?

    Failed: ["dmd", "-unittest", "-v", "-o-", "/tmp/tmpul0fy_n4.d", "-I/tmp"]

    '
  stdout: ''
  timestamp: 1660164227
- exit_code: 1
  program: "import std.typecons;\nimport std.math;\n/*\nCircular shift the digits\
    \ of the integer x, shift the digits right by shift\n    and return the result\
    \ as a string.\n    If shift > number of digits, return digits reversed.\n   \
    \ >>> circular_shift(12L, 1L)\n    \"21\"\n    >>> circular_shift(12L, 2L)\n \
    \   \"12\"\n    \n*/\nstring circular_shift(long x, long shift) \n{\n    string\
    \ s = to!string(x);\n    if (shift > s.length) \n    {\n        return s[$-1..$];\n\
    \    }\n    return s[shift..$] ~ s[0..shift-1];\n}\nunittest\n{\n    alias candidate\
    \ = circular_shift;\n\n    assert(candidate(100L, 2L) == \"001\");\n    assert(candidate(12L,\
    \ 2L) == \"12\");\n    assert(candidate(97L, 8L) == \"79\");\n    assert(candidate(12L,\
    \ 1L) == \"21\");\n    assert(candidate(11L, 101L) == \"11\");\n}\nvoid main(){}"
  status: SyntaxError
  stderr: '/tmp/tmp3p48h2rb.d(15): Error: template instance `to!string` template `to`
    is not defined, did you mean No?

    Failed: ["dmd", "-unittest", "-v", "-o-", "/tmp/tmp3p48h2rb.d", "-I/tmp"]

    '
  stdout: ''
  timestamp: 1660164227
- exit_code: 1
  program: "import std.typecons;\nimport std.math;\n/*\nCircular shift the digits\
    \ of the integer x, shift the digits right by shift\n    and return the result\
    \ as a string.\n    If shift > number of digits, return digits reversed.\n   \
    \ >>> circular_shift(12L, 1L)\n    \"21\"\n    >>> circular_shift(12L, 2L)\n \
    \   \"12\"\n    \n*/\nstring circular_shift(long x, long shift) \n{\n    string\
    \ s = to!string(x);\n    if (shift > s.length) {\n        return s[$-1 .. $].dup;\n\
    \    }\n    return s[shift .. $] ~ s[0 .. shift - 1];\n}\nunittest\n{\n    alias\
    \ candidate = circular_shift;\n\n    assert(candidate(100L, 2L) == \"001\");\n\
    \    assert(candidate(12L, 2L) == \"12\");\n    assert(candidate(97L, 8L) == \"\
    79\");\n    assert(candidate(12L, 1L) == \"21\");\n    assert(candidate(11L, 101L)\
    \ == \"11\");\n}\nvoid main(){}"
  status: SyntaxError
  stderr: '/tmp/tmptqarzm4w.d(15): Error: template instance `to!string` template `to`
    is not defined, did you mean No?

    Failed: ["dmd", "-unittest", "-v", "-o-", "/tmp/tmptqarzm4w.d", "-I/tmp"]

    '
  stdout: ''
  timestamp: 1660164227
- exit_code: 1
  program: "import std.typecons;\nimport std.math;\n/*\nCircular shift the digits\
    \ of the integer x, shift the digits right by shift\n    and return the result\
    \ as a string.\n    If shift > number of digits, return digits reversed.\n   \
    \ >>> circular_shift(12L, 1L)\n    \"21\"\n    >>> circular_shift(12L, 2L)\n \
    \   \"12\"\n    \n*/\nstring circular_shift(long x, long shift) \n{\n    string\
    \ s = to!string(x);\n    long n = s.length;\n    if (shift > n)\n        return\
    \ s[$-1..$].reverse;\n    return s[shift..$] ~ s[0..shift-1];\n}\n/*\n    Return\
    \ the number of digits in the integer x.\n    >>> num_digits(0L)\n    1\n    >>>\
    \ num_digits(5L)\n    1\n    >>> num_digits(1234567890L)\n    10\n*/\nlong num_digits(long\
    \ x) \n{\n    return to!string(x).length;\n}\n/*\n    Return the integer formed\
    \ by reversing the digits of the integer x.\n    >>> reverse_digits(1234567890L)\n\
    \    9876543210L\n*/\nlong reverse_digits(long x) \n{\n    return to!long(to!string(x)[$-1..$].reverse);\n\
    }\n/*\n    Return the integer formed by reversing the digits of the integer x.\n\
    \    >>> reverse_digits(1234567890L)\n    9876543210L\n*/\nlong reverse_digits(long\
    \ x) \n{\n    return to!long(to!string(x)[$-1..$].reverse);\n}\n/*\n    Return\
    \ the integer formed by reversing the digits of the integer x.\n    >>> reverse_digits(1234567890L)\n\
    \    9876543210L\n*/\nlong reverse_digits(long x) \n{\n    return to!long(to!string(x)[$-1..$].reverse);\n\
    }\n/*\n    Return the integer formed by reversing the digits of the integer x.\n\
    \    >>> reverse_digits(1234567890L)\n    9876543210L\n*/\nlong reverse_digits(long\
    \ x) \n{\n    return to!long(to!string(x)[$-1..$].reverse);\n}\n/*\n    Return\
    \ the integer formed by reversing the digits of the integer x.\n    >>> reverse_digits(1234567890L)\n\
    \    9876543210L\n*/\nlong reverse_digits(long x) \n{\nunittest\n{\n    alias\
    \ candidate = circular_shift;\n\n    assert(candidate(100L, 2L) == \"001\");\n\
    \    assert(candidate(12L, 2L) == \"12\");\n    assert(candidate(97L, 8L) == \"\
    79\");\n    assert(candidate(12L, 1L) == \"21\");\n    assert(candidate(11L, 101L)\
    \ == \"11\");\n}\nvoid main(){}"
  status: SyntaxError
  stderr: '/tmp/tmpbhr3r_rc.d(77): Error: found `unittest` instead of statement

    Failed: ["dmd", "-unittest", "-v", "-o-", "/tmp/tmpbhr3r_rc.d", "-I/tmp"]

    '
  stdout: ''
  timestamp: 1660164227
- exit_code: 1
  program: "import std.typecons;\nimport std.math;\n/*\nCircular shift the digits\
    \ of the integer x, shift the digits right by shift\n    and return the result\
    \ as a string.\n    If shift > number of digits, return digits reversed.\n   \
    \ >>> circular_shift(12L, 1L)\n    \"21\"\n    >>> circular_shift(12L, 2L)\n \
    \   \"12\"\n    \n*/\nstring circular_shift(long x, long shift) \n{\n    string\
    \ s = to!string(x);\n    return s[shift..$] ~ s[0..shift];\n}\nunittest\n{\n \
    \   alias candidate = circular_shift;\n\n    assert(candidate(100L, 2L) == \"\
    001\");\n    assert(candidate(12L, 2L) == \"12\");\n    assert(candidate(97L,\
    \ 8L) == \"79\");\n    assert(candidate(12L, 1L) == \"21\");\n    assert(candidate(11L,\
    \ 101L) == \"11\");\n}\nvoid main(){}"
  status: SyntaxError
  stderr: '/tmp/tmpiuxjnhgs.d(15): Error: template instance `to!string` template `to`
    is not defined, did you mean No?

    Failed: ["dmd", "-unittest", "-v", "-o-", "/tmp/tmpiuxjnhgs.d", "-I/tmp"]

    '
  stdout: ''
  timestamp: 1660164227
- exit_code: 1
  program: "import std.typecons;\nimport std.math;\n/*\nCircular shift the digits\
    \ of the integer x, shift the digits right by shift\n    and return the result\
    \ as a string.\n    If shift > number of digits, return digits reversed.\n   \
    \ >>> circular_shift(12L, 1L)\n    \"21\"\n    >>> circular_shift(12L, 2L)\n \
    \   \"12\"\n    \n*/\nstring circular_shift(long x, long shift) \n{\n    string\
    \ s = to!string(x);\n    if (shift > s.length)\n        return s[$-1..0];\n  \
    \  return s[shift..$] ~ s[0..shift-1];\n}\nunittest\n{\n    alias candidate =\
    \ circular_shift;\n\n    assert(candidate(100L, 2L) == \"001\");\n    assert(candidate(12L,\
    \ 2L) == \"12\");\n    assert(candidate(97L, 8L) == \"79\");\n    assert(candidate(12L,\
    \ 1L) == \"21\");\n    assert(candidate(11L, 101L) == \"11\");\n}\nvoid main(){}"
  status: SyntaxError
  stderr: '/tmp/tmpmvt9mcrz.d(15): Error: template instance `to!string` template `to`
    is not defined, did you mean No?

    Failed: ["dmd", "-unittest", "-v", "-o-", "/tmp/tmpmvt9mcrz.d", "-I/tmp"]

    '
  stdout: ''
  timestamp: 1660164227
- exit_code: 1
  program: "import std.typecons;\nimport std.math;\n/*\nCircular shift the digits\
    \ of the integer x, shift the digits right by shift\n    and return the result\
    \ as a string.\n    If shift > number of digits, return digits reversed.\n   \
    \ >>> circular_shift(12L, 1L)\n    \"21\"\n    >>> circular_shift(12L, 2L)\n \
    \   \"12\"\n    \n*/\nstring circular_shift(long x, long shift) \n{\n    string\
    \ s = to!string(x);\n    shift %= s.length;\n    return s[shift..$] ~ s[0..shift];\n\
    }\nunittest\n{\n    alias candidate = circular_shift;\n\n    assert(candidate(100L,\
    \ 2L) == \"001\");\n    assert(candidate(12L, 2L) == \"12\");\n    assert(candidate(97L,\
    \ 8L) == \"79\");\n    assert(candidate(12L, 1L) == \"21\");\n    assert(candidate(11L,\
    \ 101L) == \"11\");\n}\nvoid main(){}"
  status: SyntaxError
  stderr: '/tmp/tmpyl6g8zts.d(15): Error: template instance `to!string` template `to`
    is not defined, did you mean No?

    Failed: ["dmd", "-unittest", "-v", "-o-", "/tmp/tmpyl6g8zts.d", "-I/tmp"]

    '
  stdout: ''
  timestamp: 1660164227
- exit_code: 1
  program: "import std.typecons;\nimport std.math;\n/*\nCircular shift the digits\
    \ of the integer x, shift the digits right by shift\n    and return the result\
    \ as a string.\n    If shift > number of digits, return digits reversed.\n   \
    \ >>> circular_shift(12L, 1L)\n    \"21\"\n    >>> circular_shift(12L, 2L)\n \
    \   \"12\"\n    \n*/\nstring circular_shift(long x, long shift) \n{\n    string\
    \ s = to!string(x);\n    shift %= s.length;\n    return s[shift..$] ~ s[0..shift];\n\
    }\nunittest\n{\n    alias candidate = circular_shift;\n\n    assert(candidate(100L,\
    \ 2L) == \"001\");\n    assert(candidate(12L, 2L) == \"12\");\n    assert(candidate(97L,\
    \ 8L) == \"79\");\n    assert(candidate(12L, 1L) == \"21\");\n    assert(candidate(11L,\
    \ 101L) == \"11\");\n}\nvoid main(){}"
  status: SyntaxError
  stderr: '/tmp/tmpyl6g8zts.d(15): Error: template instance `to!string` template `to`
    is not defined, did you mean No?

    Failed: ["dmd", "-unittest", "-v", "-o-", "/tmp/tmpyl6g8zts.d", "-I/tmp"]

    '
  stdout: ''
  timestamp: 1660164227
- exit_code: 1
  program: "import std.typecons;\nimport std.math;\n/*\nCircular shift the digits\
    \ of the integer x, shift the digits right by shift\n    and return the result\
    \ as a string.\n    If shift > number of digits, return digits reversed.\n   \
    \ >>> circular_shift(12L, 1L)\n    \"21\"\n    >>> circular_shift(12L, 2L)\n \
    \   \"12\"\n    \n*/\nstring circular_shift(long x, long shift) \n{\n    string\
    \ s = to!string(x);\n    if (shift > s.length)\n        return s[$-1..0];\n  \
    \  return s[shift..$] ~ s[0..shift-1];\n}\nunittest\n{\n    alias candidate =\
    \ circular_shift;\n\n    assert(candidate(100L, 2L) == \"001\");\n    assert(candidate(12L,\
    \ 2L) == \"12\");\n    assert(candidate(97L, 8L) == \"79\");\n    assert(candidate(12L,\
    \ 1L) == \"21\");\n    assert(candidate(11L, 101L) == \"11\");\n}\nvoid main(){}"
  status: SyntaxError
  stderr: '/tmp/tmpmvt9mcrz.d(15): Error: template instance `to!string` template `to`
    is not defined, did you mean No?

    Failed: ["dmd", "-unittest", "-v", "-o-", "/tmp/tmpmvt9mcrz.d", "-I/tmp"]

    '
  stdout: ''
  timestamp: 1660164227
- exit_code: 1
  program: "import std.typecons;\nimport std.math;\n/*\nCircular shift the digits\
    \ of the integer x, shift the digits right by shift\n    and return the result\
    \ as a string.\n    If shift > number of digits, return digits reversed.\n   \
    \ >>> circular_shift(12L, 1L)\n    \"21\"\n    >>> circular_shift(12L, 2L)\n \
    \   \"12\"\n    \n*/\nstring circular_shift(long x, long shift) \n{\n    string\
    \ s = to!string(x);\n    if (shift >= s.length)\n        return s[$-1..$].reverse;\n\
    \    return s[shift..$] ~ s[0..shift-1];\n}\nunittest\n{\n    alias candidate\
    \ = circular_shift;\n\n    assert(candidate(100L, 2L) == \"001\");\n    assert(candidate(12L,\
    \ 2L) == \"12\");\n    assert(candidate(97L, 8L) == \"79\");\n    assert(candidate(12L,\
    \ 1L) == \"21\");\n    assert(candidate(11L, 101L) == \"11\");\n}\nvoid main(){}"
  status: SyntaxError
  stderr: '/tmp/tmpwvgtjgy6.d(15): Error: template instance `to!string` template `to`
    is not defined, did you mean No?

    /tmp/tmpwvgtjgy6.d(17): Error: template `std.typecons.reverse` cannot deduce function
    from argument types `!()(string)`, candidates are:

    /home/a.guha/repos/spack/opt/spack/linux-centos7-haswell/gcc-9.2.0/dmd-2.081.1-jzbhflp3vff4u2dqrltybjq3in2pa22f/linux/bin64/../../src/phobos/std/typecons.d(1486):        `std.typecons.reverse(T)(T
    t) if (isTuple!T)`

    Failed: ["dmd", "-unittest", "-v", "-o-", "/tmp/tmpwvgtjgy6.d", "-I/tmp"]

    '
  stdout: ''
  timestamp: 1660164227
- exit_code: 1
  program: "import std.typecons;\nimport std.math;\n/*\nCircular shift the digits\
    \ of the integer x, shift the digits right by shift\n    and return the result\
    \ as a string.\n    If shift > number of digits, return digits reversed.\n   \
    \ >>> circular_shift(12L, 1L)\n    \"21\"\n    >>> circular_shift(12L, 2L)\n \
    \   \"12\"\n    \n*/\nstring circular_shift(long x, long shift) \n{\n    long\
    \ num_digits = (long)log10(x);\n    long shift_digits = shift % (num_digits +\
    \ 1);\n    if (shift_digits == 0)\n        return to!string(x);\n    else\n  \
    \  {\n        string s = to!string(x);\n        return s[shift_digits..$] ~ s[0..shift_digits\
    \ - 1];\n    }\n}\nunittest\n{\n    alias candidate = circular_shift;\n\n    assert(candidate(100L,\
    \ 2L) == \"001\");\n    assert(candidate(12L, 2L) == \"12\");\n    assert(candidate(97L,\
    \ 8L) == \"79\");\n    assert(candidate(12L, 1L) == \"21\");\n    assert(candidate(11L,\
    \ 101L) == \"11\");\n}\nvoid main(){}"
  status: SyntaxError
  stderr: '/tmp/tmpixeksgwn.d(15): Error: C style cast illegal, use `cast(long)log10(x)`

    Failed: ["dmd", "-unittest", "-v", "-o-", "/tmp/tmpixeksgwn.d", "-I/tmp"]

    '
  stdout: ''
  timestamp: 1660164227
- exit_code: 1
  program: "import std.typecons;\nimport std.math;\n/*\nCircular shift the digits\
    \ of the integer x, shift the digits right by shift\n    and return the result\
    \ as a string.\n    If shift > number of digits, return digits reversed.\n   \
    \ >>> circular_shift(12L, 1L)\n    \"21\"\n    >>> circular_shift(12L, 2L)\n \
    \   \"12\"\n    \n*/\nstring circular_shift(long x, long shift) \n{\n    string\
    \ s = to!string(x);\n    if (shift > s.length)\n        return s[$-1..$];\n  \
    \  return s[shift..$] ~ s[0..shift-1];\n}\n/*\n    Return the number of digits\
    \ in the integer x.\n    >>> num_digits(0L)\n    1\n    >>> num_digits(5L)\n \
    \   1\n    >>> num_digits(1234567890L)\n    10\n*/\nlong num_digits(long x) \n\
    {\n    return to!string(x).length;\n}\n/*\n    Return the integer formed by reversing\
    \ the digits of the integer x.\n    >>> reverse_digits(1234567890L)\n    9876543210L\n\
    */\nlong reverse_digits(long x) \n{\n    return to!long(to!string(x)[$-1..$]);\n\
    }\n/*\n    Return True if the integer x is a palindrome.\n    >>> is_palindrome(12321L)\n\
    \    true\n    >>> is_palindrome(12345L)\n    false\n*/\nunittest\n{\n    alias\
    \ candidate = circular_shift;\n\n    assert(candidate(100L, 2L) == \"001\");\n\
    \    assert(candidate(12L, 2L) == \"12\");\n    assert(candidate(97L, 8L) == \"\
    79\");\n    assert(candidate(12L, 1L) == \"21\");\n    assert(candidate(11L, 101L)\
    \ == \"11\");\n}\nvoid main(){}"
  status: SyntaxError
  stderr: '/tmp/tmpfo236goi.d(15): Error: template instance `to!string` template `to`
    is not defined, did you mean No?

    /tmp/tmpfo236goi.d(31): Error: template instance `to!string` template `to` is
    not defined, did you mean No?

    /tmp/tmpfo236goi.d(40): Error: template instance `to!long` template `to` is not
    defined, did you mean No?

    Failed: ["dmd", "-unittest", "-v", "-o-", "/tmp/tmpfo236goi.d", "-I/tmp"]

    '
  stdout: ''
  timestamp: 1660164227
- exit_code: 1
  program: "import std.typecons;\nimport std.math;\n/*\nCircular shift the digits\
    \ of the integer x, shift the digits right by shift\n    and return the result\
    \ as a string.\n    If shift > number of digits, return digits reversed.\n   \
    \ >>> circular_shift(12L, 1L)\n    \"21\"\n    >>> circular_shift(12L, 2L)\n \
    \   \"12\"\n    \n*/\nstring circular_shift(long x, long shift) \n{\n    string\
    \ s = to!string(x);\n    if (shift > s.length)\n        return s[$-1..0];\n  \
    \  return s[shift..$] ~ s[0..shift-1];\n}\nunittest\n{\n    alias candidate =\
    \ circular_shift;\n\n    assert(candidate(100L, 2L) == \"001\");\n    assert(candidate(12L,\
    \ 2L) == \"12\");\n    assert(candidate(97L, 8L) == \"79\");\n    assert(candidate(12L,\
    \ 1L) == \"21\");\n    assert(candidate(11L, 101L) == \"11\");\n}\nvoid main(){}"
  status: SyntaxError
  stderr: '/tmp/tmpmvt9mcrz.d(15): Error: template instance `to!string` template `to`
    is not defined, did you mean No?

    Failed: ["dmd", "-unittest", "-v", "-o-", "/tmp/tmpmvt9mcrz.d", "-I/tmp"]

    '
  stdout: ''
  timestamp: 1660164227
- exit_code: 1
  program: "import std.typecons;\nimport std.math;\n/*\nCircular shift the digits\
    \ of the integer x, shift the digits right by shift\n    and return the result\
    \ as a string.\n    If shift > number of digits, return digits reversed.\n   \
    \ >>> circular_shift(12L, 1L)\n    \"21\"\n    >>> circular_shift(12L, 2L)\n \
    \   \"12\"\n    \n*/\nstring circular_shift(long x, long shift) \n{\n    string\
    \ s = to!string(x);\n    if (shift > s.length)\n        return s[$-1..0];\n  \
    \  return s[shift..$] ~ s[0..shift-1];\n}\nunittest\n{\n    alias candidate =\
    \ circular_shift;\n\n    assert(candidate(100L, 2L) == \"001\");\n    assert(candidate(12L,\
    \ 2L) == \"12\");\n    assert(candidate(97L, 8L) == \"79\");\n    assert(candidate(12L,\
    \ 1L) == \"21\");\n    assert(candidate(11L, 101L) == \"11\");\n}\nvoid main(){}"
  status: SyntaxError
  stderr: '/tmp/tmpmvt9mcrz.d(15): Error: template instance `to!string` template `to`
    is not defined, did you mean No?

    Failed: ["dmd", "-unittest", "-v", "-o-", "/tmp/tmpmvt9mcrz.d", "-I/tmp"]

    '
  stdout: ''
  timestamp: 1660164227
- exit_code: 1
  program: "import std.typecons;\nimport std.math;\n/*\nCircular shift the digits\
    \ of the integer x, shift the digits right by shift\n    and return the result\
    \ as a string.\n    If shift > number of digits, return digits reversed.\n   \
    \ >>> circular_shift(12L, 1L)\n    \"21\"\n    >>> circular_shift(12L, 2L)\n \
    \   \"12\"\n    \n*/\nstring circular_shift(long x, long shift) \n{\n    string\
    \ s = to!string(x);\n    shift %= s.length;\n    return s[shift..$] ~ s[0..shift];\n\
    }\nunittest\n{\n    alias candidate = circular_shift;\n\n    assert(candidate(100L,\
    \ 2L) == \"001\");\n    assert(candidate(12L, 2L) == \"12\");\n    assert(candidate(97L,\
    \ 8L) == \"79\");\n    assert(candidate(12L, 1L) == \"21\");\n    assert(candidate(11L,\
    \ 101L) == \"11\");\n}\nvoid main(){}"
  status: SyntaxError
  stderr: '/tmp/tmpyl6g8zts.d(15): Error: template instance `to!string` template `to`
    is not defined, did you mean No?

    Failed: ["dmd", "-unittest", "-v", "-o-", "/tmp/tmpyl6g8zts.d", "-I/tmp"]

    '
  stdout: ''
  timestamp: 1660164227
- exit_code: 1
  program: "import std.typecons;\nimport std.math;\n/*\nCircular shift the digits\
    \ of the integer x, shift the digits right by shift\n    and return the result\
    \ as a string.\n    If shift > number of digits, return digits reversed.\n   \
    \ >>> circular_shift(12L, 1L)\n    \"21\"\n    >>> circular_shift(12L, 2L)\n \
    \   \"12\"\n    \n*/\nstring circular_shift(long x, long shift) \n{\n    string\
    \ s = to!string(x);\n    if (shift > s.length)\n        return s[$-1..0];\n  \
    \  return s[shift..$] ~ s[0..shift-1];\n}\n/*\n    Return the number of digits\
    \ in the integer x.\n    >>> num_digits(12L)\n    2\n    >>> num_digits(12345L)\n\
    \    5\n*/\nlong num_digits(long x) \n{\n    return to!string(x).length;\n}\n\
    /*\n    Return the number of digits in the integer x.\n    >>> num_digits(12L)\n\
    \    2\n    >>> num_digits(12345L)\n    5\n*/\nlong num_digits(long x) \n{\n \
    \   return to!string(x).length;\n}\n/*\n    Return the number of digits in the\
    \ integer x.\n    >>> num_digits(12L)\n    2\n    >>> num_digits(12345L)\n   \
    \ 5\n*/\nlong num_digits(long x) \n{\n    return to!string(x).length;\n}\n/*\n\
    \    Return the number of digits in the integer x.\n    >>> num_digits(12L)\n\
    \    2\n    >>> num_digits(12345L)\n    5\n*/\nlong num_digits(long x) \n{\n \
    \   return to!string(x).length;\n}\n/*\n    Return the number of digits in the\
    \ integer x.\n    >>> num_digits(12L)\n    2\n    >>> num_digits(12345L)\n   \
    \ 5\n*/\nlong num_digits(long x) \n{\n    return to!string(x).length;\n}\n/*\n\
    \    Return the number of digits in the integer x.\n    >>> num_digits(12L)\n\
    \    2\n    >>> num_digits(12345L)\n    5\n*/\nlong num_digits(long x) \n{\n \
    \   return to!string(x).length;\n}\n/*\n    Return the number of digits in the\
    \ integer x.\n    >>> num_digits(12L)\n    2\n    >>> num\nunittest\n{\n    alias\
    \ candidate = circular_shift;\n\n    assert(candidate(100L, 2L) == \"001\");\n\
    \    assert(candidate(12L, 2L) == \"12\");\n    assert(candidate(97L, 8L) == \"\
    79\");\n    assert(candidate(12L, 1L) == \"21\");\n    assert(candidate(11L, 101L)\
    \ == \"11\");\n}\nvoid main(){}"
  status: SyntaxError
  stderr: '/tmp/tmpdd9syhf4.d(86): Error: unterminated /* */ comment

    Failed: ["dmd", "-unittest", "-v", "-o-", "/tmp/tmpdd9syhf4.d", "-I/tmp"]

    '
  stdout: ''
  timestamp: 1660164227
- exit_code: 1
  program: "import std.typecons;\nimport std.math;\n/*\nCircular shift the digits\
    \ of the integer x, shift the digits right by shift\n    and return the result\
    \ as a string.\n    If shift > number of digits, return digits reversed.\n   \
    \ >>> circular_shift(12L, 1L)\n    \"21\"\n    >>> circular_shift(12L, 2L)\n \
    \   \"12\"\n    \n*/\nstring circular_shift(long x, long shift) \n{\n    string\
    \ s = to!string(x);\n    if (shift > s.length)\n        return s[$-1..$].reverse;\n\
    \    return s[shift..$] ~ s[0..shift-1];\n}\nunittest\n{\n    alias candidate\
    \ = circular_shift;\n\n    assert(candidate(100L, 2L) == \"001\");\n    assert(candidate(12L,\
    \ 2L) == \"12\");\n    assert(candidate(97L, 8L) == \"79\");\n    assert(candidate(12L,\
    \ 1L) == \"21\");\n    assert(candidate(11L, 101L) == \"11\");\n}\nvoid main(){}"
  status: SyntaxError
  stderr: '/tmp/tmpn599cip8.d(15): Error: template instance `to!string` template `to`
    is not defined, did you mean No?

    /tmp/tmpn599cip8.d(17): Error: template `std.typecons.reverse` cannot deduce function
    from argument types `!()(string)`, candidates are:

    /home/a.guha/repos/spack/opt/spack/linux-centos7-haswell/gcc-9.2.0/dmd-2.081.1-jzbhflp3vff4u2dqrltybjq3in2pa22f/linux/bin64/../../src/phobos/std/typecons.d(1486):        `std.typecons.reverse(T)(T
    t) if (isTuple!T)`

    Failed: ["dmd", "-unittest", "-v", "-o-", "/tmp/tmpn599cip8.d", "-I/tmp"]

    '
  stdout: ''
  timestamp: 1660164227
- exit_code: 1
  program: "import std.typecons;\nimport std.math;\n/*\nCircular shift the digits\
    \ of the integer x, shift the digits right by shift\n    and return the result\
    \ as a string.\n    If shift > number of digits, return digits reversed.\n   \
    \ >>> circular_shift(12L, 1L)\n    \"21\"\n    >>> circular_shift(12L, 2L)\n \
    \   \"12\"\n    \n*/\nstring circular_shift(long x, long shift) \n{\n    string\
    \ s = to!string(x);\n    shift %= s.length;\n    return s[shift..$] ~ s[0..shift];\n\
    }\nunittest\n{\n    alias candidate = circular_shift;\n\n    assert(candidate(100L,\
    \ 2L) == \"001\");\n    assert(candidate(12L, 2L) == \"12\");\n    assert(candidate(97L,\
    \ 8L) == \"79\");\n    assert(candidate(12L, 1L) == \"21\");\n    assert(candidate(11L,\
    \ 101L) == \"11\");\n}\nvoid main(){}"
  status: SyntaxError
  stderr: '/tmp/tmpyl6g8zts.d(15): Error: template instance `to!string` template `to`
    is not defined, did you mean No?

    Failed: ["dmd", "-unittest", "-v", "-o-", "/tmp/tmpyl6g8zts.d", "-I/tmp"]

    '
  stdout: ''
  timestamp: 1660164227
- exit_code: 1
  program: "import std.typecons;\nimport std.math;\n/*\nCircular shift the digits\
    \ of the integer x, shift the digits right by shift\n    and return the result\
    \ as a string.\n    If shift > number of digits, return digits reversed.\n   \
    \ >>> circular_shift(12L, 1L)\n    \"21\"\n    >>> circular_shift(12L, 2L)\n \
    \   \"12\"\n    \n*/\nstring circular_shift(long x, long shift) \n{\n    string\
    \ s = to!string(x);\n    if (shift > s.length)\n        return s[$-1..$];\n  \
    \  return s[shift..$] ~ s[0..shift-1];\n}\nunittest\n{\n    alias candidate =\
    \ circular_shift;\n\n    assert(candidate(100L, 2L) == \"001\");\n    assert(candidate(12L,\
    \ 2L) == \"12\");\n    assert(candidate(97L, 8L) == \"79\");\n    assert(candidate(12L,\
    \ 1L) == \"21\");\n    assert(candidate(11L, 101L) == \"11\");\n}\nvoid main(){}"
  status: SyntaxError
  stderr: '/tmp/tmpul0fy_n4.d(15): Error: template instance `to!string` template `to`
    is not defined, did you mean No?

    Failed: ["dmd", "-unittest", "-v", "-o-", "/tmp/tmpul0fy_n4.d", "-I/tmp"]

    '
  stdout: ''
  timestamp: 1660164227
- exit_code: 1
  program: "import std.typecons;\nimport std.math;\n/*\nCircular shift the digits\
    \ of the integer x, shift the digits right by shift\n    and return the result\
    \ as a string.\n    If shift > number of digits, return digits reversed.\n   \
    \ >>> circular_shift(12L, 1L)\n    \"21\"\n    >>> circular_shift(12L, 2L)\n \
    \   \"12\"\n    \n*/\nstring circular_shift(long x, long shift) \n{\n    string\
    \ s = to!string(x);\n    shift %= s.length;\n    return s[shift..$] ~ s[0..shift];\n\
    }\nunittest\n{\n    alias candidate = circular_shift;\n\n    assert(candidate(100L,\
    \ 2L) == \"001\");\n    assert(candidate(12L, 2L) == \"12\");\n    assert(candidate(97L,\
    \ 8L) == \"79\");\n    assert(candidate(12L, 1L) == \"21\");\n    assert(candidate(11L,\
    \ 101L) == \"11\");\n}\nvoid main(){}"
  status: SyntaxError
  stderr: '/tmp/tmpyl6g8zts.d(15): Error: template instance `to!string` template `to`
    is not defined, did you mean No?

    Failed: ["dmd", "-unittest", "-v", "-o-", "/tmp/tmpyl6g8zts.d", "-I/tmp"]

    '
  stdout: ''
  timestamp: 1660164227
- exit_code: 1
  program: "import std.typecons;\nimport std.math;\n/*\nCircular shift the digits\
    \ of the integer x, shift the digits right by shift\n    and return the result\
    \ as a string.\n    If shift > number of digits, return digits reversed.\n   \
    \ >>> circular_shift(12L, 1L)\n    \"21\"\n    >>> circular_shift(12L, 2L)\n \
    \   \"12\"\n    \n*/\nstring circular_shift(long x, long shift) \n{\n    string\
    \ digits = to!string(x);\n    if (shift > digits.length)\n    {\n        return\
    \ digits.dup.reverse;\n    }\n    else\n    {\n        return digits[shift..$]\
    \ ~ digits[0..shift];\n    }\n}\nunittest\n{\n    alias candidate = circular_shift;\n\
    \n    assert(candidate(100L, 2L) == \"001\");\n    assert(candidate(12L, 2L) ==\
    \ \"12\");\n    assert(candidate(97L, 8L) == \"79\");\n    assert(candidate(12L,\
    \ 1L) == \"21\");\n    assert(candidate(11L, 101L) == \"11\");\n}\nvoid main(){}"
  status: SyntaxError
  stderr: '/tmp/tmp7t1ggazf.d(15): Error: template instance `to!string` template `to`
    is not defined, did you mean No?

    /tmp/tmp7t1ggazf.d(18): Error: template `std.typecons.reverse` cannot deduce function
    from argument types `!()(char[])`, candidates are:

    /home/a.guha/repos/spack/opt/spack/linux-centos7-haswell/gcc-9.2.0/dmd-2.081.1-jzbhflp3vff4u2dqrltybjq3in2pa22f/linux/bin64/../../src/phobos/std/typecons.d(1486):        `std.typecons.reverse(T)(T
    t) if (isTuple!T)`

    Failed: ["dmd", "-unittest", "-v", "-o-", "/tmp/tmp7t1ggazf.d", "-I/tmp"]

    '
  stdout: ''
  timestamp: 1660164227
- exit_code: 1
  program: "import std.typecons;\nimport std.math;\n/*\nCircular shift the digits\
    \ of the integer x, shift the digits right by shift\n    and return the result\
    \ as a string.\n    If shift > number of digits, return digits reversed.\n   \
    \ >>> circular_shift(12L, 1L)\n    \"21\"\n    >>> circular_shift(12L, 2L)\n \
    \   \"12\"\n    \n*/\nstring circular_shift(long x, long shift) \n{\n    string\
    \ s = to!string(x);\n    if (shift > s.length)\n        return s[$-1..0];\n  \
    \  return s[shift..$] ~ s[0..shift-1];\n}\nunittest\n{\n    alias candidate =\
    \ circular_shift;\n\n    assert(candidate(100L, 2L) == \"001\");\n    assert(candidate(12L,\
    \ 2L) == \"12\");\n    assert(candidate(97L, 8L) == \"79\");\n    assert(candidate(12L,\
    \ 1L) == \"21\");\n    assert(candidate(11L, 101L) == \"11\");\n}\nvoid main(){}"
  status: SyntaxError
  stderr: '/tmp/tmpmvt9mcrz.d(15): Error: template instance `to!string` template `to`
    is not defined, did you mean No?

    Failed: ["dmd", "-unittest", "-v", "-o-", "/tmp/tmpmvt9mcrz.d", "-I/tmp"]

    '
  stdout: ''
  timestamp: 1660164227
- exit_code: 1
  program: "import std.typecons;\nimport std.math;\n/*\nCircular shift the digits\
    \ of the integer x, shift the digits right by shift\n    and return the result\
    \ as a string.\n    If shift > number of digits, return digits reversed.\n   \
    \ >>> circular_shift(12L, 1L)\n    \"21\"\n    >>> circular_shift(12L, 2L)\n \
    \   \"12\"\n    \n*/\nstring circular_shift(long x, long shift) \n{\n    string\
    \ s = to!string(x);\n    if (shift > s.length)\n        return s[$-shift..$];\n\
    \    return s[shift..$] ~ s[0..shift-1];\n}\nunittest\n{\n    alias candidate\
    \ = circular_shift;\n\n    assert(candidate(100L, 2L) == \"001\");\n    assert(candidate(12L,\
    \ 2L) == \"12\");\n    assert(candidate(97L, 8L) == \"79\");\n    assert(candidate(12L,\
    \ 1L) == \"21\");\n    assert(candidate(11L, 101L) == \"11\");\n}\nvoid main(){}"
  status: SyntaxError
  stderr: '/tmp/tmp1wq1mhqv.d(15): Error: template instance `to!string` template `to`
    is not defined, did you mean No?

    Failed: ["dmd", "-unittest", "-v", "-o-", "/tmp/tmp1wq1mhqv.d", "-I/tmp"]

    '
  stdout: ''
  timestamp: 1660164227
- exit_code: 1
  program: "import std.typecons;\nimport std.math;\n/*\nCircular shift the digits\
    \ of the integer x, shift the digits right by shift\n    and return the result\
    \ as a string.\n    If shift > number of digits, return digits reversed.\n   \
    \ >>> circular_shift(12L, 1L)\n    \"21\"\n    >>> circular_shift(12L, 2L)\n \
    \   \"12\"\n    \n*/\nstring circular_shift(long x, long shift) \n{\n    string\
    \ s = to!string(x);\n    shift %= s.length;\n    return s[shift..$] ~ s[0..shift];\n\
    }\n/*\n    Return the number of digits in the integer x.\n    >>> num_digits(123L)\n\
    \    3\n    >>> num_digits(0L)\n    1\n*/\nlong num_digits(long x) \n{\n    return\
    \ to!string(x).length;\n}\n/*\n    Return the number of digits in the integer\
    \ x.\n    >>> num_digits(123L)\n    3\n    >>> num_digits(0L)\n    1\n*/\nlong\
    \ num_digits(long x) \n{\n    return to!string(x).length;\n}\n/*\n    Return the\
    \ number of digits in the integer x.\n    >>> num_digits(123L)\n    3\n    >>>\
    \ num_digits(0L)\n    1\n*/\nlong num_digits(long x) \n{\n    return to!string(x).length;\n\
    }\n/*\n    Return the number of digits in the integer x.\n    >>> num_digits(123L)\n\
    \    3\n    >>> num_digits(0L)\n    1\n*/\nlong num_digits(long x) \n{\n    return\
    \ to!string(x).length;\n}\n/*\n    Return the number of digits in the integer\
    \ x.\n    >>> num_digits(123L)\n    3\n    >>> num_digits(0L)\n    1\n*/\nlong\
    \ num_digits(long x) \n{\n    return to!string(x).length;\n}\n/*\n    Return the\
    \ number of digits in the integer x.\n    >>> num_digits(123L)\n    3\n    >>>\
    \ num_digits(0L)\n    1\n*/\nlong num_digits(long x) \n{\n    return to!string(x).length;\n\
    }\n/*\n    Return the number of digits in the integer x.\n    >>> num_digits(123L)\n\
    \    3\n    >>> num_digits(0L)\n    1\n*/\nlong num_digits(long\nunittest\n{\n\
    \    alias candidate = circular_shift;\n\n    assert(candidate(100L, 2L) == \"\
    001\");\n    assert(candidate(12L, 2L) == \"12\");\n    assert(candidate(97L,\
    \ 8L) == \"79\");\n    assert(candidate(12L, 1L) == \"21\");\n    assert(candidate(11L,\
    \ 101L) == \"11\");\n}\nvoid main(){}"
  status: SyntaxError
  stderr: '/tmp/tmp2ldybfmo.d(93): Error: found `unittest` when expecting `)`

    Failed: ["dmd", "-unittest", "-v", "-o-", "/tmp/tmp2ldybfmo.d", "-I/tmp"]

    '
  stdout: ''
  timestamp: 1660164227
- exit_code: 1
  program: "import std.typecons;\nimport std.math;\n/*\nCircular shift the digits\
    \ of the integer x, shift the digits right by shift\n    and return the result\
    \ as a string.\n    If shift > number of digits, return digits reversed.\n   \
    \ >>> circular_shift(12L, 1L)\n    \"21\"\n    >>> circular_shift(12L, 2L)\n \
    \   \"12\"\n    \n*/\nstring circular_shift(long x, long shift) \n{\n    string\
    \ s = to!string(x);\n    long n = s.length;\n    shift = shift % n;\n    if (shift\
    \ == 0)\n        return s;\n    if (shift < 0)\n        shift += n;\n    return\
    \ s[shift .. $] ~ s[0 .. shift];\n}\n/*\n    Return the number of digits in the\
    \ integer x.\n    >>> num_digits(0L)\n    1\n    >>> num_digits(5L)\n    1\n \
    \   >>> num_digits(12345L)\n    5\n*/\nlong num_digits(long x) \n{\n    if (x\
    \ == 0)\n        return 1;\n    return cast(long) ceil(log10(abs(x) + 1));\n}\n\
    /*\n    Return the integer formed by reversing the digits of the integer x.\n\
    \    >>> reverse_digits(12345L)\n    54321L\n    >>> reverse_digits(1L)\n    1L\n\
    */\nlong reverse_digits(long x) \n{\n    string s = to!string(x);\n    return\
    \ to!long(s[$ .. 0]);\n}\n/*\n    Return the integer formed by reversing the digits\
    \ of the integer x.\n    >>> reverse_digits(12345L)\n    54321L\n    >>> reverse_digits(1L)\n\
    \    1L\n*/\nlong reverse_digits(long x) \n{\n    string s = to!string(x);\n \
    \   return to!long(s[$ .. 0]);\n}\n/*\n    Return the number of digits in the\
    \ integer x.\n    >>> num_digits(0L)\n    1\n    >>> num_digits(5L)\n    1\n \
    \   >>> num_digits(12345L)\n    5\n*/\nlong num_digits(long x) \n{\n    if (x\
    \ == 0)\n        return 1;\n    return cast(long) ceil(log10(abs(x) + 1));\n}\n\
    /*\n    Return the integer formed by reversing the digits of the integer x.\n\
    \    >>> reverse_digits(12345L)\n    54321L\n    >>> reverse_dig\nunittest\n{\n\
    \    alias candidate = circular_shift;\n\n    assert(candidate(100L, 2L) == \"\
    001\");\n    assert(candidate(12L, 2L) == \"12\");\n    assert(candidate(97L,\
    \ 8L) == \"79\");\n    assert(candidate(12L, 1L) == \"21\");\n    assert(candidate(11L,\
    \ 101L) == \"11\");\n}\nvoid main(){}"
  status: SyntaxError
  stderr: '/tmp/tmp65xw1jns.d(78): Error: unterminated /* */ comment

    Failed: ["dmd", "-unittest", "-v", "-o-", "/tmp/tmp65xw1jns.d", "-I/tmp"]

    '
  stdout: ''
  timestamp: 1660164227
- exit_code: 1
  program: "import std.typecons;\nimport std.math;\n/*\nCircular shift the digits\
    \ of the integer x, shift the digits right by shift\n    and return the result\
    \ as a string.\n    If shift > number of digits, return digits reversed.\n   \
    \ >>> circular_shift(12L, 1L)\n    \"21\"\n    >>> circular_shift(12L, 2L)\n \
    \   \"12\"\n    \n*/\nstring circular_shift(long x, long shift) \n{\n    string\
    \ s = to!string(x);\n    if (shift > s.length) \n    {\n        return s[$-1..$].dup.reverse;\n\
    \    }\n    return s[shift..$] ~ s[0..shift-1];\n}\n/*\n    Return the number\
    \ of digits in the integer x.\n    >>> num_digits(0L)\n    1\n    >>> num_digits(123L)\n\
    \    3\n*/\nlong num_digits(long x) \n{\n    return to!string(x).length;\n}\n\
    /*\n    Return the number of digits in the integer x.\n    >>> num_digits(0L)\n\
    \    1\n    >>> num_digits(123L)\n    3\n*/\nlong num_digits(long x) \n{\n   \
    \ return to!string(x).length;\n}\n/*\n    Return the number of digits in the integer\
    \ x.\n    >>> num_digits(0L)\n    1\n    >>> num_digits(123L)\n    3\n*/\nlong\
    \ num_digits(long x) \n{\n    return to!string(x).length;\n}\n/*\n    Return the\
    \ number of digits in the integer x.\n    >>> num_digits(0L)\n    1\n    >>> num_digits(123L)\n\
    \    3\n*/\nlong num_digits(long x) \n{\n    return to!string(x).length;\n}\n\
    /*\n    Return the number of digits in the integer x.\n    >>> num_digits(0L)\n\
    \    1\n    >>> num_digits(123L)\n    3\n*/\nlong num_digits(long x) \n{\n   \
    \ return to!string(x).length;\n}\n/*\n    Return the number of digits in the integer\
    \ x.\n    >>> num_digits(0L)\n    1\n    >>> num_digits(123L)\n    3\n*/\nlong\
    \ num_digits(long x) \n{\n    return to!string(x).length;\n}\n/*\n    Return the\
    \ number of digits in the integer x.\n    >>> num_digits(0L)\n\nunittest\n{\n\
    \    alias candidate = circular_shift;\n\n    assert(candidate(100L, 2L) == \"\
    001\");\n    assert(candidate(12L, 2L) == \"12\");\n    assert(candidate(97L,\
    \ 8L) == \"79\");\n    assert(candidate(12L, 1L) == \"21\");\n    assert(candidate(11L,\
    \ 101L) == \"11\");\n}\nvoid main(){}"
  status: SyntaxError
  stderr: '/tmp/tmporu69fvp.d(88): Error: unterminated /* */ comment

    Failed: ["dmd", "-unittest", "-v", "-o-", "/tmp/tmporu69fvp.d", "-I/tmp"]

    '
  stdout: ''
  timestamp: 1660164227
- exit_code: 1
  program: "import std.typecons;\nimport std.math;\n/*\nCircular shift the digits\
    \ of the integer x, shift the digits right by shift\n    and return the result\
    \ as a string.\n    If shift > number of digits, return digits reversed.\n   \
    \ >>> circular_shift(12L, 1L)\n    \"21\"\n    >>> circular_shift(12L, 2L)\n \
    \   \"12\"\n    \n*/\nstring circular_shift(long x, long shift) \n{\n    long\
    \ n = log10(x);\n    long y = x;\n    long z = 0;\n    long i = 0;\n    while\
    \ (i < n) {\n        z += y % 10 * pow(10, (n - i + shift) % n);\n        y /=\
    \ 10;\n        i++;\n    }\n    return to!string(z);\n}\nunittest\n{\n    alias\
    \ candidate = circular_shift;\n\n    assert(candidate(100L, 2L) == \"001\");\n\
    \    assert(candidate(12L, 2L) == \"12\");\n    assert(candidate(97L, 8L) == \"\
    79\");\n    assert(candidate(12L, 1L) == \"21\");\n    assert(candidate(11L, 101L)\
    \ == \"11\");\n}\nvoid main(){}"
  status: SyntaxError
  stderr: '/tmp/tmpi4tnfgsu.d(15): Error: cannot implicitly convert expression `log10(cast(real)x)`
    of type `real` to `long`

    /tmp/tmpi4tnfgsu.d(24): Error: template instance `to!string` template `to` is
    not defined, did you mean No?

    Failed: ["dmd", "-unittest", "-v", "-o-", "/tmp/tmpi4tnfgsu.d", "-I/tmp"]

    '
  stdout: ''
  timestamp: 1660164227
- exit_code: 1
  program: "import std.typecons;\nimport std.math;\n/*\nCircular shift the digits\
    \ of the integer x, shift the digits right by shift\n    and return the result\
    \ as a string.\n    If shift > number of digits, return digits reversed.\n   \
    \ >>> circular_shift(12L, 1L)\n    \"21\"\n    >>> circular_shift(12L, 2L)\n \
    \   \"12\"\n    \n*/\nstring circular_shift(long x, long shift) \n{\n    string\
    \ s = to!string(x);\n    long n = s.length;\n    if (shift > n)\n    {\n     \
    \   return s[$-1..$];\n    }\n    return s[shift..$] ~ s[0..shift-1];\n}\nunittest\n\
    {\n    alias candidate = circular_shift;\n\n    assert(candidate(100L, 2L) ==\
    \ \"001\");\n    assert(candidate(12L, 2L) == \"12\");\n    assert(candidate(97L,\
    \ 8L) == \"79\");\n    assert(candidate(12L, 1L) == \"21\");\n    assert(candidate(11L,\
    \ 101L) == \"11\");\n}\nvoid main(){}"
  status: SyntaxError
  stderr: '/tmp/tmpfc68dyrr.d(15): Error: template instance `to!string` template `to`
    is not defined, did you mean No?

    Failed: ["dmd", "-unittest", "-v", "-o-", "/tmp/tmpfc68dyrr.d", "-I/tmp"]

    '
  stdout: ''
  timestamp: 1660164227
- exit_code: 1
  program: "import std.typecons;\nimport std.math;\n/*\nCircular shift the digits\
    \ of the integer x, shift the digits right by shift\n    and return the result\
    \ as a string.\n    If shift > number of digits, return digits reversed.\n   \
    \ >>> circular_shift(12L, 1L)\n    \"21\"\n    >>> circular_shift(12L, 2L)\n \
    \   \"12\"\n    \n*/\nstring circular_shift(long x, long shift) \n{\n    string\
    \ s = to!string(x);\n    if (shift > s.length)\n        return s[$-1..0];\n  \
    \  return s[shift..$] ~ s[0..shift-1];\n}\nunittest\n{\n    alias candidate =\
    \ circular_shift;\n\n    assert(candidate(100L, 2L) == \"001\");\n    assert(candidate(12L,\
    \ 2L) == \"12\");\n    assert(candidate(97L, 8L) == \"79\");\n    assert(candidate(12L,\
    \ 1L) == \"21\");\n    assert(candidate(11L, 101L) == \"11\");\n}\nvoid main(){}"
  status: SyntaxError
  stderr: '/tmp/tmpmvt9mcrz.d(15): Error: template instance `to!string` template `to`
    is not defined, did you mean No?

    Failed: ["dmd", "-unittest", "-v", "-o-", "/tmp/tmpmvt9mcrz.d", "-I/tmp"]

    '
  stdout: ''
  timestamp: 1660164227
- exit_code: 1
  program: "import std.typecons;\nimport std.math;\n/*\nCircular shift the digits\
    \ of the integer x, shift the digits right by shift\n    and return the result\
    \ as a string.\n    If shift > number of digits, return digits reversed.\n   \
    \ >>> circular_shift(12L, 1L)\n    \"21\"\n    >>> circular_shift(12L, 2L)\n \
    \   \"12\"\n    \n*/\nstring circular_shift(long x, long shift) \n{\n    string\
    \ s = to!string(x);\n    shift %= s.length;\n    return s[shift..$] ~ s[0..shift];\n\
    }\nunittest\n{\n    alias candidate = circular_shift;\n\n    assert(candidate(100L,\
    \ 2L) == \"001\");\n    assert(candidate(12L, 2L) == \"12\");\n    assert(candidate(97L,\
    \ 8L) == \"79\");\n    assert(candidate(12L, 1L) == \"21\");\n    assert(candidate(11L,\
    \ 101L) == \"11\");\n}\nvoid main(){}"
  status: SyntaxError
  stderr: '/tmp/tmpyl6g8zts.d(15): Error: template instance `to!string` template `to`
    is not defined, did you mean No?

    Failed: ["dmd", "-unittest", "-v", "-o-", "/tmp/tmpyl6g8zts.d", "-I/tmp"]

    '
  stdout: ''
  timestamp: 1660164227
- exit_code: 1
  program: "import std.typecons;\nimport std.math;\n/*\nCircular shift the digits\
    \ of the integer x, shift the digits right by shift\n    and return the result\
    \ as a string.\n    If shift > number of digits, return digits reversed.\n   \
    \ >>> circular_shift(12L, 1L)\n    \"21\"\n    >>> circular_shift(12L, 2L)\n \
    \   \"12\"\n    \n*/\nstring circular_shift(long x, long shift) \n{\n    string\
    \ s = to!string(x);\n    if (shift > s.length)\n        return s[$-1..$];\n  \
    \  return s[shift..$] ~ s[0..shift-1];\n}\n/*\n    Return the number of digits\
    \ in the integer x.\n    >>> num_digits(0L)\n    1\n    >>> num_digits(5L)\n \
    \   1\n    >>> num_digits(1234567890L)\n    10\n*/\nlong num_digits(long x) \n\
    {\n    return to!string(x).length;\n}\n/*\n    Return the integer formed by reversing\
    \ the digits of the integer x.\n    >>> reverse_digits(1234567890L)\n    9876543210L\n\
    */\nlong reverse_digits(long x) \n{\n    return to!long(to!string(x)[$-1..$]);\n\
    }\n/*\n    Return the integer formed by reversing the digits of the integer x.\n\
    \    >>> reverse_digits(1234567890L)\n    9876543210L\n*/\nlong reverse_digits(long\
    \ x) \n{\n    return to!long(to!string(x)[$-1..$]);\n}\n/*\n    Return the integer\
    \ formed by reversing the digits of the integer x.\n    >>> reverse_digits(1234567890L)\n\
    \    9876543210L\n*/\nlong reverse_digits(long x) \n{\n    return to!long(to!string(x)[$-1..$]);\n\
    }\n/*\n    Return the integer formed by reversing the digits of the integer x.\n\
    \    >>> reverse_digits(1234567890L)\n    9876543210L\n*/\nlong reverse_digits(long\
    \ x) \n{\n    return to!long(to!string(x)[$-1..$]);\n}\n/*\n    Return the integer\
    \ formed by reversing the digits of the integer x.\n    >>> reverse_digits(1234567890L)\n\
    \    9876543210L\n*/\nlong reverse_digits(long x) \n{\n    return to!long(to!string(x)[$-1..\n\
    unittest\n{\n    alias candidate = circular_shift;\n\n    assert(candidate(100L,\
    \ 2L) == \"001\");\n    assert(candidate(12L, 2L) == \"12\");\n    assert(candidate(97L,\
    \ 8L) == \"79\");\n    assert(candidate(12L, 1L) == \"21\");\n    assert(candidate(11L,\
    \ 101L) == \"11\");\n}\nvoid main(){}"
  status: SyntaxError
  stderr: '/tmp/tmp9zt9yzpo.d(77): Error: expression expected, not `unittest`

    /tmp/tmp9zt9yzpo.d(78): Error: found `{` when expecting `,`

    /tmp/tmp9zt9yzpo.d(79): Error: expression expected, not `alias`

    /tmp/tmp9zt9yzpo.d(79): Error: found `candidate` when expecting `,`

    /tmp/tmp9zt9yzpo.d(79): Error: expression expected, not `=`

    /tmp/tmp9zt9yzpo.d(79): Error: found `circular_shift` when expecting `,`

    /tmp/tmp9zt9yzpo.d(79): Error: expression expected, not `;`

    /tmp/tmp9zt9yzpo.d(81): Error: found `assert` when expecting `,`

    /tmp/tmp9zt9yzpo.d(81): Error: found `;` when expecting `,`

    /tmp/tmp9zt9yzpo.d(82): Error: found `;` when expecting `,`

    /tmp/tmp9zt9yzpo.d(83): Error: found `;` when expecting `,`

    /tmp/tmp9zt9yzpo.d(84): Error: found `;` when expecting `,`

    /tmp/tmp9zt9yzpo.d(85): Error: found `;` when expecting `,`

    /tmp/tmp9zt9yzpo.d(86): Error: expression expected, not `}`

    /tmp/tmp9zt9yzpo.d(87): Error: found `void` when expecting `,`

    /tmp/tmp9zt9yzpo.d(87): Error: found `{` when expecting `,`

    /tmp/tmp9zt9yzpo.d(87): '
  stdout: ''
  timestamp: 1660164227
- exit_code: 1
  program: "import std.typecons;\nimport std.math;\n/*\nCircular shift the digits\
    \ of the integer x, shift the digits right by shift\n    and return the result\
    \ as a string.\n    If shift > number of digits, return digits reversed.\n   \
    \ >>> circular_shift(12L, 1L)\n    \"21\"\n    >>> circular_shift(12L, 2L)\n \
    \   \"12\"\n    \n*/\nstring circular_shift(long x, long shift) \n{\n    string\
    \ s = to!string(x);\n    if (shift > s.length)\n        return s[$-1..$];\n  \
    \  return s[shift..$] ~ s[0..shift-1];\n}\n/*\n    Return the number of digits\
    \ in the integer x.\n    >>> num_digits(0L)\n    1\n    >>> num_digits(5L)\n \
    \   1\n    >>> num_digits(12345L)\n    5\n*/\nlong num_digits(long x) \n{\n  \
    \  return to!string(x).length;\n}\n/*\n    Return the integer formed by reversing\
    \ the digits of the integer x.\n    >>> reverse_digits(1234L)\n    4321L\n   \
    \ >>> reverse_digits(3456789L)\n    9876543L\n*/\nlong reverse_digits(long x)\
    \ \n{\n    string s = to!string(x);\n    return to!long(s[$-1..$]);\n}\n/*\n \
    \   Return the integer formed by reversing the digits of the integer x.\n    >>>\
    \ reverse_digits(1234L)\n    4321L\n    >>> reverse_digits(3456789L)\n    9876543L\n\
    */\nlong reverse_digits(long x) \n{\n    string s = to!string(x);\n    return\
    \ to!long(s[$-1..$]);\n}\n/*\n    Return the number of digits in the integer x.\n\
    \    >>> num_digits(0L)\n    1\n    >>> num_digits(5L)\n    1\n    >>> num_digits(12345L)\n\
    \    5\n*/\nlong num_digits(long x) \n{\n    return to!string(x).length;\n}\n\
    /*\n    Return the integer formed by reversing the digits of the integer x.\n\
    \    >>> reverse_digits(1234L)\n    4321L\n    >>> reverse_digits(3456789L)\n\
    \    9876543L\n*/\nlong reverse_digits(long x) \n{\n    string s = to!string(x);\n\
    \    return to!long(s[$-1..$\nunittest\n{\n    alias candidate = circular_shift;\n\
    \n    assert(candidate(100L, 2L) == \"001\");\n    assert(candidate(12L, 2L) ==\
    \ \"12\");\n    assert(candidate(97L, 8L) == \"79\");\n    assert(candidate(12L,\
    \ 1L) == \"21\");\n    assert(candidate(11L, 101L) == \"11\");\n}\nvoid main(){}"
  status: SyntaxError
  stderr: '/tmp/tmp2j__g7r_.d(81): Error: found `unittest` when expecting `,`

    /tmp/tmp2j__g7r_.d(91): Error: found `void` when expecting `,`

    /tmp/tmp2j__g7r_.d(91): Error: found `{` when expecting `,`

    /tmp/tmp2j__g7r_.d(91): Error: expression expected, not `}`

    /tmp/tmp2j__g7r_.d(91): Error: found `End of File` when expecting `,`

    /tmp/tmp2j__g7r_.d(91): Error: found `End of File` when expecting `]`

    /tmp/tmp2j__g7r_.d(91): Error: found `End of File` when expecting `,`

    /tmp/tmp2j__g7r_.d(91): Error: found `End of File` when expecting `)`

    /tmp/tmp2j__g7r_.d(91): Error: found `End of File` when expecting `;` following
    `return` statement

    /tmp/tmp2j__g7r_.d(91): Error: found `End of File` when expecting `}` following
    compound statement

    Failed: ["dmd", "-unittest", "-v", "-o-", "/tmp/tmp2j__g7r_.d", "-I/tmp"]

    '
  stdout: ''
  timestamp: 1660164227
- exit_code: 1
  program: "import std.typecons;\nimport std.math;\n/*\nCircular shift the digits\
    \ of the integer x, shift the digits right by shift\n    and return the result\
    \ as a string.\n    If shift > number of digits, return digits reversed.\n   \
    \ >>> circular_shift(12L, 1L)\n    \"21\"\n    >>> circular_shift(12L, 2L)\n \
    \   \"12\"\n    \n*/\nstring circular_shift(long x, long shift) \n{\n    string\
    \ s = to!string(x);\n    if (shift > s.length)\n        return s[$-1..0];\n  \
    \  return s[shift..$] ~ s[0..shift-1];\n}\n/*\n    Return the number of digits\
    \ in the integer x.\n    >>> num_digits(12L)\n    2\n    >>> num_digits(12345L)\n\
    \    5\n*/\nlong num_digits(long x) \n{\n    return to!string(x).length;\n}\n\
    /*\n    Return the number of digits in the integer x.\n    >>> num_digits(12L)\n\
    \    2\n    >>> num_digits(12345L)\n    5\n*/\nlong num_digits(long x) \n{\n \
    \   return to!string(x).length;\n}\n/*\n    Return the number of digits in the\
    \ integer x.\n    >>> num_digits(12L)\n    2\n    >>> num_digits(12345L)\n   \
    \ 5\n*/\nlong num_digits(long x) \n{\n    return to!string(x).length;\n}\n/*\n\
    \    Return the number of digits in the integer x.\n    >>> num_digits(12L)\n\
    \    2\n    >>> num_digits(12345L)\n    5\n*/\nlong num_digits(long x) \n{\n \
    \   return to!string(x).length;\n}\n/*\n    Return the number of digits in the\
    \ integer x.\n    >>> num_digits(12L)\n    2\n    >>> num_digits(12345L)\n   \
    \ 5\n*/\nlong num_digits(long x) \n{\n    return to!string(x).length;\n}\n/*\n\
    \    Return the number of digits in the integer x.\n    >>> num_digits(12L)\n\
    \    2\n    >>> num_digits(12345L)\n    5\n*/\nlong num_digits(long x) \n{\n \
    \   return to!string(x).length;\n}\n/*\n    Return the number of digits in the\
    \ integer x.\n    >>> num_digits(12L)\n    2\n    >>> num\nunittest\n{\n    alias\
    \ candidate = circular_shift;\n\n    assert(candidate(100L, 2L) == \"001\");\n\
    \    assert(candidate(12L, 2L) == \"12\");\n    assert(candidate(97L, 8L) == \"\
    79\");\n    assert(candidate(12L, 1L) == \"21\");\n    assert(candidate(11L, 101L)\
    \ == \"11\");\n}\nvoid main(){}"
  status: SyntaxError
  stderr: '/tmp/tmpdd9syhf4.d(86): Error: unterminated /* */ comment

    Failed: ["dmd", "-unittest", "-v", "-o-", "/tmp/tmpdd9syhf4.d", "-I/tmp"]

    '
  stdout: ''
  timestamp: 1660164227
- exit_code: 1
  program: "import std.typecons;\nimport std.math;\n/*\nCircular shift the digits\
    \ of the integer x, shift the digits right by shift\n    and return the result\
    \ as a string.\n    If shift > number of digits, return digits reversed.\n   \
    \ >>> circular_shift(12L, 1L)\n    \"21\"\n    >>> circular_shift(12L, 2L)\n \
    \   \"12\"\n    \n*/\nstring circular_shift(long x, long shift) \n{\n    string\
    \ s = to!string(x);\n    if (shift > s.length)\n        return s[$-1..0];\n  \
    \  return s[shift..$] ~ s[0..shift-1];\n}\n/*\n    Return the number of digits\
    \ in the integer x.\n    >>> num_digits(123L)\n    3\n    >>> num_digits(0L)\n\
    \    1\n*/\nlong num_digits(long x) \n{\n    return to!string(x).length;\n}\n\
    /*\n    Return the number of digits in the integer x.\n    >>> num_digits(123L)\n\
    \    3\n    >>> num_digits(0L)\n    1\n*/\nlong num_digits(long x) \n{\n    return\
    \ to!string(x).length;\n}\n/*\n    Return the number of digits in the integer\
    \ x.\n    >>> num_digits(123L)\n    3\n    >>> num_digits(0L)\n    1\n*/\nlong\
    \ num_digits(long x) \n{\n    return to!string(x).length;\n}\n/*\n    Return the\
    \ number of digits in the integer x.\n    >>> num_digits(123L)\n    3\n    >>>\
    \ num_digits(0L)\n    1\n*/\nlong num_digits(long x) \n{\n    return to!string(x).length;\n\
    }\n/*\n    Return the number of digits in the integer x.\n    >>> num_digits(123L)\n\
    \    3\n    >>> num_digits(0L)\n    1\n*/\nlong num_digits(long x) \n{\n    return\
    \ to!string(x).length;\n}\n/*\n    Return the number of digits in the integer\
    \ x.\n    >>> num_digits(123L)\n    3\n    >>> num_digits(0L)\n    1\n*/\nlong\
    \ num_digits(long x) \n{\n    return to!string(x).length;\n}\n/*\n    Return the\
    \ number of digits in the integer x.\n    >>> num_digits(123L)\n    3\n    >>>\
    \ num_digits(0L\nunittest\n{\n    alias candidate = circular_shift;\n\n    assert(candidate(100L,\
    \ 2L) == \"001\");\n    assert(candidate(12L, 2L) == \"12\");\n    assert(candidate(97L,\
    \ 8L) == \"79\");\n    assert(candidate(12L, 1L) == \"21\");\n    assert(candidate(11L,\
    \ 101L) == \"11\");\n}\nvoid main(){}"
  status: SyntaxError
  stderr: '/tmp/tmpeu8unbzi.d(86): Error: unterminated /* */ comment

    Failed: ["dmd", "-unittest", "-v", "-o-", "/tmp/tmpeu8unbzi.d", "-I/tmp"]

    '
  stdout: ''
  timestamp: 1660164227
- exit_code: 1
  program: "import std.typecons;\nimport std.math;\n/*\nCircular shift the digits\
    \ of the integer x, shift the digits right by shift\n    and return the result\
    \ as a string.\n    If shift > number of digits, return digits reversed.\n   \
    \ >>> circular_shift(12L, 1L)\n    \"21\"\n    >>> circular_shift(12L, 2L)\n \
    \   \"12\"\n    \n*/\nstring circular_shift(long x, long shift) \n{\n    string\
    \ result;\n    long n = x.digits;\n    if (shift > n) \n    {\n        result\
    \ = x.to!string;\n        result = result.reverse;\n    } \n    else \n    {\n\
    \        result = x.to!string;\n        result = result[shift .. $] ~ result[0\
    \ .. shift - 1];\n    }\n    return result;\n}\n/*\n    Return the number of digits\
    \ in the integer x.\n    >>> digits(12L)\n    2\n    >>> digits(12345L)\n    5\n\
    */\nlong digits(long x) \n{\n    return x.digits;\n}\n/*\n    Return the number\
    \ of digits in the integer x.\n    >>> digits(12L)\n    2\n    >>> digits(12345L)\n\
    \    5\n*/\nlong digits(long x) \n{\n    return x.digits;\n}\n/*\n    Return the\
    \ number of digits in the integer x.\n    >>> digits(12L)\n    2\n    >>> digits(12345L)\n\
    \    5\n*/\nlong digits(long x) \n{\n    return x.digits;\n}\n/*\n    Return the\
    \ number of digits in the integer x.\n    >>> digits(12L)\n    2\n    >>> digits(12345L)\n\
    \    5\n*/\nlong digits(long x) \n{\n    return x.digits;\n}\n/*\n    Return the\
    \ number of digits in the integer x.\n    >>> digits(12L)\n    2\n    >>> digits(12345L)\n\
    \    5\n*/\nlong digits(long x) \n{\n    return x.digits;\n}\n/*\n    Return the\
    \ number of digits in the integer x.\n    >>> digits(12L)\n    2\n    >>> digits(12345L)\n\
    \    5\n*/\nlong digits(long x) \n{\n    return x.digits;\n}\n/*\n    Return the\
    \ number of digits in the integer x.\n    >>> digits(12L)\n    2\n    >>> digits(12345L)\n\
    \    5\n*/\nlong digits(long x) \n{\n    return x.digits;\n}\n/*\nunittest\n{\n\
    \    alias candidate = circular_shift;\n\n    assert(candidate(100L, 2L) == \"\
    001\");\n    assert(candidate(12L, 2L) == \"12\");\n    assert(candidate(97L,\
    \ 8L) == \"79\");\n    assert(candidate(12L, 1L) == \"21\");\n    assert(candidate(11L,\
    \ 101L) == \"11\");\n}\nvoid main(){}"
  status: SyntaxError
  stderr: '/tmp/tmp5yvwlr_b.d(106): Error: unterminated /* */ comment

    Failed: ["dmd", "-unittest", "-v", "-o-", "/tmp/tmp5yvwlr_b.d", "-I/tmp"]

    '
  stdout: ''
  timestamp: 1660164227
- exit_code: 1
  program: "import std.typecons;\nimport std.math;\n/*\nCircular shift the digits\
    \ of the integer x, shift the digits right by shift\n    and return the result\
    \ as a string.\n    If shift > number of digits, return digits reversed.\n   \
    \ >>> circular_shift(12L, 1L)\n    \"21\"\n    >>> circular_shift(12L, 2L)\n \
    \   \"12\"\n    \n*/\nstring circular_shift(long x, long shift) \n{\n    string\
    \ s = to!string(x);\n    if (shift > s.length)\n        return s[$-1..$].dup.reverse;\n\
    \    return s[shift..$] ~ s[0..shift-1];\n}\nunittest\n{\n    alias candidate\
    \ = circular_shift;\n\n    assert(candidate(100L, 2L) == \"001\");\n    assert(candidate(12L,\
    \ 2L) == \"12\");\n    assert(candidate(97L, 8L) == \"79\");\n    assert(candidate(12L,\
    \ 1L) == \"21\");\n    assert(candidate(11L, 101L) == \"11\");\n}\nvoid main(){}"
  status: SyntaxError
  stderr: '/tmp/tmpcjm4ghnv.d(15): Error: template instance `to!string` template `to`
    is not defined, did you mean No?

    /tmp/tmpcjm4ghnv.d(17): Error: template `std.typecons.reverse` cannot deduce function
    from argument types `!()(char[])`, candidates are:

    /home/a.guha/repos/spack/opt/spack/linux-centos7-haswell/gcc-9.2.0/dmd-2.081.1-jzbhflp3vff4u2dqrltybjq3in2pa22f/linux/bin64/../../src/phobos/std/typecons.d(1486):        `std.typecons.reverse(T)(T
    t) if (isTuple!T)`

    Failed: ["dmd", "-unittest", "-v", "-o-", "/tmp/tmpcjm4ghnv.d", "-I/tmp"]

    '
  stdout: ''
  timestamp: 1660164227
- exit_code: 1
  program: "import std.typecons;\nimport std.math;\n/*\nCircular shift the digits\
    \ of the integer x, shift the digits right by shift\n    and return the result\
    \ as a string.\n    If shift > number of digits, return digits reversed.\n   \
    \ >>> circular_shift(12L, 1L)\n    \"21\"\n    >>> circular_shift(12L, 2L)\n \
    \   \"12\"\n    \n*/\nstring circular_shift(long x, long shift) \n{\n    string\
    \ s = to!string(x);\n    if (shift > s.length)\n        return s[$-1..$].dup.reverse;\n\
    \    return s[shift..$] ~ s[0..shift-1];\n}\nunittest\n{\n    alias candidate\
    \ = circular_shift;\n\n    assert(candidate(100L, 2L) == \"001\");\n    assert(candidate(12L,\
    \ 2L) == \"12\");\n    assert(candidate(97L, 8L) == \"79\");\n    assert(candidate(12L,\
    \ 1L) == \"21\");\n    assert(candidate(11L, 101L) == \"11\");\n}\nvoid main(){}"
  status: SyntaxError
  stderr: '/tmp/tmpcjm4ghnv.d(15): Error: template instance `to!string` template `to`
    is not defined, did you mean No?

    /tmp/tmpcjm4ghnv.d(17): Error: template `std.typecons.reverse` cannot deduce function
    from argument types `!()(char[])`, candidates are:

    /home/a.guha/repos/spack/opt/spack/linux-centos7-haswell/gcc-9.2.0/dmd-2.081.1-jzbhflp3vff4u2dqrltybjq3in2pa22f/linux/bin64/../../src/phobos/std/typecons.d(1486):        `std.typecons.reverse(T)(T
    t) if (isTuple!T)`

    Failed: ["dmd", "-unittest", "-v", "-o-", "/tmp/tmpcjm4ghnv.d", "-I/tmp"]

    '
  stdout: ''
  timestamp: 1660164227
- exit_code: 1
  program: "import std.typecons;\nimport std.math;\n/*\nCircular shift the digits\
    \ of the integer x, shift the digits right by shift\n    and return the result\
    \ as a string.\n    If shift > number of digits, return digits reversed.\n   \
    \ >>> circular_shift(12L, 1L)\n    \"21\"\n    >>> circular_shift(12L, 2L)\n \
    \   \"12\"\n    \n*/\nstring circular_shift(long x, long shift) \n{\n    long\
    \ n = x.length;\n    if (shift > n)\n        return x.reversed;\n    return x[shift..$]\
    \ ~ x[0..shift];\n}\nunittest\n{\n    alias candidate = circular_shift;\n\n  \
    \  assert(candidate(100L, 2L) == \"001\");\n    assert(candidate(12L, 2L) == \"\
    12\");\n    assert(candidate(97L, 8L) == \"79\");\n    assert(candidate(12L, 1L)\
    \ == \"21\");\n    assert(candidate(11L, 101L) == \"11\");\n}\nvoid main(){}"
  status: SyntaxError
  stderr: '/tmp/tmpjtuaq76f.d(15): Error: no property `length` for type `long`

    /tmp/tmpjtuaq76f.d(17): Error: no property `reversed` for type `long`

    /tmp/tmpjtuaq76f.d(18): Error: only one index allowed to index `long`

    /tmp/tmpjtuaq76f.d(18): Error: only one index allowed to index `long`

    Failed: ["dmd", "-unittest", "-v", "-o-", "/tmp/tmpjtuaq76f.d", "-I/tmp"]

    '
  stdout: ''
  timestamp: 1660164227
- exit_code: 1
  program: "import std.typecons;\nimport std.math;\n/*\nCircular shift the digits\
    \ of the integer x, shift the digits right by shift\n    and return the result\
    \ as a string.\n    If shift > number of digits, return digits reversed.\n   \
    \ >>> circular_shift(12L, 1L)\n    \"21\"\n    >>> circular_shift(12L, 2L)\n \
    \   \"12\"\n    \n*/\nstring circular_shift(long x, long shift) \n{\n    string\
    \ s = to!string(x);\n    if (shift > s.length)\n        return s[$-1..$];\n  \
    \  return s[shift..$] ~ s[0..shift-1];\n}\n/*\n    Return the number of digits\
    \ in the integer x.\n    >>> num_digits(123L)\n    3\n    >>> num_digits(0L)\n\
    \    1\n*/\nlong num_digits(long x) \n{\n    return to!string(x).length;\n}\n\
    /*\n    Return the number of digits in the integer x.\n    >>> num_digits(123L)\n\
    \    3\n    >>> num_digits(0L)\n    1\n*/\nlong num_digits(long x) \n{\n    return\
    \ to!string(x).length;\n}\n/*\n    Return the number of digits in the integer\
    \ x.\n    >>> num_digits(123L)\n    3\n    >>> num_digits(0L)\n    1\n*/\nlong\
    \ num_digits(long x) \n{\n    return to!string(x).length;\n}\n/*\n    Return the\
    \ number of digits in the integer x.\n    >>> num_digits(123L)\n    3\n    >>>\
    \ num_digits(0L)\n    1\n*/\nlong num_digits(long x) \n{\n    return to!string(x).length;\n\
    }\n/*\n    Return the number of digits in the integer x.\n    >>> num_digits(123L)\n\
    \    3\n    >>> num_digits(0L)\n    1\n*/\nlong num_digits(long x) \n{\n    return\
    \ to!string(x).length;\n}\n/*\n    Return the number of digits in the integer\
    \ x.\n    >>> num_digits(123L)\n    3\n    >>> num_digits(0L)\n    1\n*/\nlong\
    \ num_digits(long x) \n{\n    return to!string(x).length;\n}\n/*\n    Return the\
    \ number of digits in the integer x.\n    >>> num_digits(123L)\n    3\n    >>>\
    \ num_digits(0L\nunittest\n{\n    alias candidate = circular_shift;\n\n    assert(candidate(100L,\
    \ 2L) == \"001\");\n    assert(candidate(12L, 2L) == \"12\");\n    assert(candidate(97L,\
    \ 8L) == \"79\");\n    assert(candidate(12L, 1L) == \"21\");\n    assert(candidate(11L,\
    \ 101L) == \"11\");\n}\nvoid main(){}"
  status: SyntaxError
  stderr: '/tmp/tmpdqhf56p0.d(86): Error: unterminated /* */ comment

    Failed: ["dmd", "-unittest", "-v", "-o-", "/tmp/tmpdqhf56p0.d", "-I/tmp"]

    '
  stdout: ''
  timestamp: 1660164227
- exit_code: 1
  program: "import std.typecons;\nimport std.math;\n/*\nCircular shift the digits\
    \ of the integer x, shift the digits right by shift\n    and return the result\
    \ as a string.\n    If shift > number of digits, return digits reversed.\n   \
    \ >>> circular_shift(12L, 1L)\n    \"21\"\n    >>> circular_shift(12L, 2L)\n \
    \   \"12\"\n    \n*/\nstring circular_shift(long x, long shift) \n{\n    string\
    \ s = to!string(x);\n    if (shift > s.length)\n        return s[$-1..0];\n  \
    \  return s[shift..$] ~ s[0..shift-1];\n}\nunittest\n{\n    alias candidate =\
    \ circular_shift;\n\n    assert(candidate(100L, 2L) == \"001\");\n    assert(candidate(12L,\
    \ 2L) == \"12\");\n    assert(candidate(97L, 8L) == \"79\");\n    assert(candidate(12L,\
    \ 1L) == \"21\");\n    assert(candidate(11L, 101L) == \"11\");\n}\nvoid main(){}"
  status: SyntaxError
  stderr: '/tmp/tmpmvt9mcrz.d(15): Error: template instance `to!string` template `to`
    is not defined, did you mean No?

    Failed: ["dmd", "-unittest", "-v", "-o-", "/tmp/tmpmvt9mcrz.d", "-I/tmp"]

    '
  stdout: ''
  timestamp: 1660164227
- exit_code: 1
  program: "import std.typecons;\nimport std.math;\n/*\nCircular shift the digits\
    \ of the integer x, shift the digits right by shift\n    and return the result\
    \ as a string.\n    If shift > number of digits, return digits reversed.\n   \
    \ >>> circular_shift(12L, 1L)\n    \"21\"\n    >>> circular_shift(12L, 2L)\n \
    \   \"12\"\n    \n*/\nstring circular_shift(long x, long shift) \n{\n    string\
    \ s = to!string(x);\n    if (shift > s.length) \n    {\n        return s[$-1 ..\
    \ $];\n    }\n    return s[shift .. $] ~ s[0 .. shift - 1];\n}\n/*\n    Return\
    \ the number of digits in the integer x.\n    >>> num_digits(0L)\n    1\n    >>>\
    \ num_digits(5L)\n    1\n    >>> num_digits(1234567890L)\n    10\n*/\nlong num_digits(long\
    \ x) \n{\n    return to!string(x).length;\n}\n/*\n    Return the integer formed\
    \ by reversing the digits of the integer x.\n    >>> reverse_digits(1234567890L)\n\
    \    9876543210L\n*/\nlong reverse_digits(long x) \n{\n    return to!long(to!string(x)[$-1\
    \ .. $]);\n}\n/*\n    Return the integer formed by reversing the digits of the\
    \ integer x.\n    >>> reverse_digits(1234567890L)\n    9876543210L\n*/\nlong reverse_digits(long\
    \ x) \n{\n    return to!long(to!string(x)[$-1 .. $]);\n}\n/*\n    Return the integer\
    \ formed by reversing the digits of the integer x.\n    >>> reverse_digits(1234567890L)\n\
    \    9876543210L\n*/\nlong reverse_digits(long x) \n{\n    return to!long(to!string(x)[$-1\
    \ .. $]);\n}\n/*\n    Return the integer formed by reversing the digits of the\
    \ integer x.\n    >>> reverse_digits(1234567890L)\n    9876543210L\n*/\nlong reverse_digits(long\
    \ x) \n{\n    return to!long(to!string(x)[$-1 .. $]);\n}\n/*\n    Return the integer\
    \ formed by reversing the digits of the integer x.\n    >>> reverse_digits(1234567890L)\n\
    \    9876543210L\n*/\nlong reverse_digits(long x) \n{\n    return to!long(to!string\n\
    unittest\n{\n    alias candidate = circular_shift;\n\n    assert(candidate(100L,\
    \ 2L) == \"001\");\n    assert(candidate(12L, 2L) == \"12\");\n    assert(candidate(97L,\
    \ 8L) == \"79\");\n    assert(candidate(12L, 1L) == \"21\");\n    assert(candidate(11L,\
    \ 101L) == \"11\");\n}\nvoid main(){}"
  status: SyntaxError
  stderr: '/tmp/tmpaka_clgk.d(79): Error: found `unittest` when expecting `,`

    /tmp/tmpaka_clgk.d(89): Error: found `void` when expecting `,`

    /tmp/tmpaka_clgk.d(89): Error: found `{` when expecting `,`

    /tmp/tmpaka_clgk.d(89): Error: expression expected, not `}`

    /tmp/tmpaka_clgk.d(89): Error: found `End of File` when expecting `,`

    /tmp/tmpaka_clgk.d(89): Error: found `End of File` when expecting `)`

    /tmp/tmpaka_clgk.d(89): Error: found `End of File` when expecting `;` following
    `return` statement

    /tmp/tmpaka_clgk.d(89): Error: found `End of File` when expecting `}` following
    compound statement

    Failed: ["dmd", "-unittest", "-v", "-o-", "/tmp/tmpaka_clgk.d", "-I/tmp"]

    '
  stdout: ''
  timestamp: 1660164227
- exit_code: 1
  program: "import std.typecons;\nimport std.math;\n/*\nCircular shift the digits\
    \ of the integer x, shift the digits right by shift\n    and return the result\
    \ as a string.\n    If shift > number of digits, return digits reversed.\n   \
    \ >>> circular_shift(12L, 1L)\n    \"21\"\n    >>> circular_shift(12L, 2L)\n \
    \   \"12\"\n    \n*/\nstring circular_shift(long x, long shift) \n{\n    string\
    \ s = to!string(x);\n    if (shift > s.length)\n        return s[$-1..$];\n  \
    \  return s[shift..$] ~ s[0..shift-1];\n}\nunittest\n{\n    alias candidate =\
    \ circular_shift;\n\n    assert(candidate(100L, 2L) == \"001\");\n    assert(candidate(12L,\
    \ 2L) == \"12\");\n    assert(candidate(97L, 8L) == \"79\");\n    assert(candidate(12L,\
    \ 1L) == \"21\");\n    assert(candidate(11L, 101L) == \"11\");\n}\nvoid main(){}"
  status: SyntaxError
  stderr: '/tmp/tmpul0fy_n4.d(15): Error: template instance `to!string` template `to`
    is not defined, did you mean No?

    Failed: ["dmd", "-unittest", "-v", "-o-", "/tmp/tmpul0fy_n4.d", "-I/tmp"]

    '
  stdout: ''
  timestamp: 1660164227
- exit_code: 1
  program: "import std.typecons;\nimport std.math;\n/*\nCircular shift the digits\
    \ of the integer x, shift the digits right by shift\n    and return the result\
    \ as a string.\n    If shift > number of digits, return digits reversed.\n   \
    \ >>> circular_shift(12L, 1L)\n    \"21\"\n    >>> circular_shift(12L, 2L)\n \
    \   \"12\"\n    \n*/\nstring circular_shift(long x, long shift) \n{\n    string\
    \ s = to!string(x);\n    if (shift > s.length)\n        return s[$-1..$];\n  \
    \  return s[shift..$] ~ s[0..shift-1];\n}\nunittest\n{\n    alias candidate =\
    \ circular_shift;\n\n    assert(candidate(100L, 2L) == \"001\");\n    assert(candidate(12L,\
    \ 2L) == \"12\");\n    assert(candidate(97L, 8L) == \"79\");\n    assert(candidate(12L,\
    \ 1L) == \"21\");\n    assert(candidate(11L, 101L) == \"11\");\n}\nvoid main(){}"
  status: SyntaxError
  stderr: '/tmp/tmpul0fy_n4.d(15): Error: template instance `to!string` template `to`
    is not defined, did you mean No?

    Failed: ["dmd", "-unittest", "-v", "-o-", "/tmp/tmpul0fy_n4.d", "-I/tmp"]

    '
  stdout: ''
  timestamp: 1660164227
- exit_code: 1
  program: "import std.typecons;\nimport std.math;\n/*\nCircular shift the digits\
    \ of the integer x, shift the digits right by shift\n    and return the result\
    \ as a string.\n    If shift > number of digits, return digits reversed.\n   \
    \ >>> circular_shift(12L, 1L)\n    \"21\"\n    >>> circular_shift(12L, 2L)\n \
    \   \"12\"\n    \n*/\nstring circular_shift(long x, long shift) \n{\n    string\
    \ s = to!string(x);\n    if (shift > s.length)\n        return s[$ - 1 .. 0];\n\
    \    return s[shift .. $ - 1] ~ s[0 .. shift - 1];\n}\n/*\n    Return the number\
    \ of digits in the integer x.\n    >>> num_digits(0L)\n    1\n    >>> num_digits(5L)\n\
    \    1\n    >>> num_digits(12345L)\n    5\n*/\nlong num_digits(long x) \n{\n \
    \   return to!string(x).length;\n}\n/*\n    Return the integer formed by reversing\
    \ the digits of the integer x.\n    >>> reverse_digits(1234L)\n    4321L\n   \
    \ >>> reverse_digits(0L)\n    0L\n*/\nlong reverse_digits(long x) \n{\n    return\
    \ to!long(to!string(x)[$ - 1 .. 0]);\n}\n/*\n    Return the integer formed by\
    \ reversing the digits of the integer x.\n    >>> reverse_digits(1234L)\n    4321L\n\
    \    >>> reverse_digits(0L)\n    0L\n*/\nlong reverse_digits(long x) \n{\n   \
    \ return to!long(to!string(x)[$ - 1 .. 0]);\n}\n/*\n    Return the integer formed\
    \ by reversing the digits of the integer x.\n    >>> reverse_digits(1234L)\n \
    \   4321L\n    >>> reverse_digits(0L)\n    0L\n*/\nlong reverse_digits(long x)\
    \ \n{\n    return to!long(to!string(x)[$ - 1 .. 0]);\n}\n/*\n    Return the integer\
    \ formed by reversing the digits of the integer x.\n    >>> reverse_digits(1234L)\n\
    \    4321L\n    >>> reverse_digits(0L)\n    0L\n*/\nlong reverse_digits(long x)\
    \ \n{\n    return to!long(to!string(x)[$ - 1 .. 0]);\n}\n/*\n    Return the integer\
    \ formed by reversing the digits of the integer x.\n    >>> reverse_digits(1234L)\n\
    \   \nunittest\n{\n    alias candidate = circular_shift;\n\n    assert(candidate(100L,\
    \ 2L) == \"001\");\n    assert(candidate(12L, 2L) == \"12\");\n    assert(candidate(97L,\
    \ 8L) == \"79\");\n    assert(candidate(12L, 1L) == \"21\");\n    assert(candidate(11L,\
    \ 101L) == \"11\");\n}\nvoid main(){}"
  status: SyntaxError
  stderr: '/tmp/tmpf213ljso.d(77): Error: unterminated /* */ comment

    Failed: ["dmd", "-unittest", "-v", "-o-", "/tmp/tmpf213ljso.d", "-I/tmp"]

    '
  stdout: ''
  timestamp: 1660164227
- exit_code: 1
  program: "import std.typecons;\nimport std.math;\n/*\nCircular shift the digits\
    \ of the integer x, shift the digits right by shift\n    and return the result\
    \ as a string.\n    If shift > number of digits, return digits reversed.\n   \
    \ >>> circular_shift(12L, 1L)\n    \"21\"\n    >>> circular_shift(12L, 2L)\n \
    \   \"12\"\n    \n*/\nstring circular_shift(long x, long shift) \n{\n    string\
    \ s = to!string(x);\n    if (shift > s.length)\n        return s[$-1 .. $];\n\
    \    return s[shift .. $] ~ s[0 .. shift - 1];\n}\nunittest\n{\n    alias candidate\
    \ = circular_shift;\n\n    assert(candidate(100L, 2L) == \"001\");\n    assert(candidate(12L,\
    \ 2L) == \"12\");\n    assert(candidate(97L, 8L) == \"79\");\n    assert(candidate(12L,\
    \ 1L) == \"21\");\n    assert(candidate(11L, 101L) == \"11\");\n}\nvoid main(){}"
  status: SyntaxError
  stderr: '/tmp/tmp7w7dnqsb.d(15): Error: template instance `to!string` template `to`
    is not defined, did you mean No?

    Failed: ["dmd", "-unittest", "-v", "-o-", "/tmp/tmp7w7dnqsb.d", "-I/tmp"]

    '
  stdout: ''
  timestamp: 1660164227
- exit_code: 1
  program: "import std.typecons;\nimport std.math;\n/*\nCircular shift the digits\
    \ of the integer x, shift the digits right by shift\n    and return the result\
    \ as a string.\n    If shift > number of digits, return digits reversed.\n   \
    \ >>> circular_shift(12L, 1L)\n    \"21\"\n    >>> circular_shift(12L, 2L)\n \
    \   \"12\"\n    \n*/\nstring circular_shift(long x, long shift) \n{\n    string\
    \ s = to!string(x);\n    if (shift > s.length)\n        return s[$-1..0];\n  \
    \  return s[shift..$] ~ s[0..shift-1];\n}\nunittest\n{\n    alias candidate =\
    \ circular_shift;\n\n    assert(candidate(100L, 2L) == \"001\");\n    assert(candidate(12L,\
    \ 2L) == \"12\");\n    assert(candidate(97L, 8L) == \"79\");\n    assert(candidate(12L,\
    \ 1L) == \"21\");\n    assert(candidate(11L, 101L) == \"11\");\n}\nvoid main(){}"
  status: SyntaxError
  stderr: '/tmp/tmpmvt9mcrz.d(15): Error: template instance `to!string` template `to`
    is not defined, did you mean No?

    Failed: ["dmd", "-unittest", "-v", "-o-", "/tmp/tmpmvt9mcrz.d", "-I/tmp"]

    '
  stdout: ''
  timestamp: 1660164227
- exit_code: 1
  program: "import std.typecons;\nimport std.math;\n/*\nCircular shift the digits\
    \ of the integer x, shift the digits right by shift\n    and return the result\
    \ as a string.\n    If shift > number of digits, return digits reversed.\n   \
    \ >>> circular_shift(12L, 1L)\n    \"21\"\n    >>> circular_shift(12L, 2L)\n \
    \   \"12\"\n    \n*/\nstring circular_shift(long x, long shift) \n{\n    string\
    \ s = to!string(x);\n    if (shift > s.length)\n        return s[$-1..$].reverse;\n\
    \    return s[shift..$] ~ s[0..shift-1];\n}\nunittest\n{\n    alias candidate\
    \ = circular_shift;\n\n    assert(candidate(100L, 2L) == \"001\");\n    assert(candidate(12L,\
    \ 2L) == \"12\");\n    assert(candidate(97L, 8L) == \"79\");\n    assert(candidate(12L,\
    \ 1L) == \"21\");\n    assert(candidate(11L, 101L) == \"11\");\n}\nvoid main(){}"
  status: SyntaxError
  stderr: '/tmp/tmpn599cip8.d(15): Error: template instance `to!string` template `to`
    is not defined, did you mean No?

    /tmp/tmpn599cip8.d(17): Error: template `std.typecons.reverse` cannot deduce function
    from argument types `!()(string)`, candidates are:

    /home/a.guha/repos/spack/opt/spack/linux-centos7-haswell/gcc-9.2.0/dmd-2.081.1-jzbhflp3vff4u2dqrltybjq3in2pa22f/linux/bin64/../../src/phobos/std/typecons.d(1486):        `std.typecons.reverse(T)(T
    t) if (isTuple!T)`

    Failed: ["dmd", "-unittest", "-v", "-o-", "/tmp/tmpn599cip8.d", "-I/tmp"]

    '
  stdout: ''
  timestamp: 1660164227
- exit_code: 1
  program: "import std.typecons;\nimport std.math;\n/*\nCircular shift the digits\
    \ of the integer x, shift the digits right by shift\n    and return the result\
    \ as a string.\n    If shift > number of digits, return digits reversed.\n   \
    \ >>> circular_shift(12L, 1L)\n    \"21\"\n    >>> circular_shift(12L, 2L)\n \
    \   \"12\"\n    \n*/\nstring circular_shift(long x, long shift) \n{\n    string\
    \ s = to!string(x);\n    if (shift > s.length)\n        return s[$-1 .. $].dup.reverse;\n\
    \    return s[shift .. $] ~ s[0 .. shift - 1];\n}\nunittest\n{\n    alias candidate\
    \ = circular_shift;\n\n    assert(candidate(100L, 2L) == \"001\");\n    assert(candidate(12L,\
    \ 2L) == \"12\");\n    assert(candidate(97L, 8L) == \"79\");\n    assert(candidate(12L,\
    \ 1L) == \"21\");\n    assert(candidate(11L, 101L) == \"11\");\n}\nvoid main(){}"
  status: SyntaxError
  stderr: '/tmp/tmpqvf1seec.d(15): Error: template instance `to!string` template `to`
    is not defined, did you mean No?

    /tmp/tmpqvf1seec.d(17): Error: template `std.typecons.reverse` cannot deduce function
    from argument types `!()(char[])`, candidates are:

    /home/a.guha/repos/spack/opt/spack/linux-centos7-haswell/gcc-9.2.0/dmd-2.081.1-jzbhflp3vff4u2dqrltybjq3in2pa22f/linux/bin64/../../src/phobos/std/typecons.d(1486):        `std.typecons.reverse(T)(T
    t) if (isTuple!T)`

    Failed: ["dmd", "-unittest", "-v", "-o-", "/tmp/tmpqvf1seec.d", "-I/tmp"]

    '
  stdout: ''
  timestamp: 1660164227
- exit_code: 1
  program: "import std.typecons;\nimport std.math;\n/*\nCircular shift the digits\
    \ of the integer x, shift the digits right by shift\n    and return the result\
    \ as a string.\n    If shift > number of digits, return digits reversed.\n   \
    \ >>> circular_shift(12L, 1L)\n    \"21\"\n    >>> circular_shift(12L, 2L)\n \
    \   \"12\"\n    \n*/\nstring circular_shift(long x, long shift) \n{\n    string\
    \ s = to!string(x);\n    if (shift > s.length) {\n        return s[$-1 .. $];\n\
    \    }\n    return s[shift .. $] ~ s[0 .. shift - 1];\n}\nunittest\n{\n    alias\
    \ candidate = circular_shift;\n\n    assert(candidate(100L, 2L) == \"001\");\n\
    \    assert(candidate(12L, 2L) == \"12\");\n    assert(candidate(97L, 8L) == \"\
    79\");\n    assert(candidate(12L, 1L) == \"21\");\n    assert(candidate(11L, 101L)\
    \ == \"11\");\n}\nvoid main(){}"
  status: SyntaxError
  stderr: '/tmp/tmpcpffjxv5.d(15): Error: template instance `to!string` template `to`
    is not defined, did you mean No?

    Failed: ["dmd", "-unittest", "-v", "-o-", "/tmp/tmpcpffjxv5.d", "-I/tmp"]

    '
  stdout: ''
  timestamp: 1660164227
- exit_code: 1
  program: "import std.typecons;\nimport std.math;\n/*\nCircular shift the digits\
    \ of the integer x, shift the digits right by shift\n    and return the result\
    \ as a string.\n    If shift > number of digits, return digits reversed.\n   \
    \ >>> circular_shift(12L, 1L)\n    \"21\"\n    >>> circular_shift(12L, 2L)\n \
    \   \"12\"\n    \n*/\nstring circular_shift(long x, long shift) \n{\n    string\
    \ s = to!string(x);\n    if (shift > s.length)\n        return s[$-1..$].dup.reverse;\n\
    \    return s[shift..$] ~ s[0..shift-1];\n}\nunittest\n{\n    alias candidate\
    \ = circular_shift;\n\n    assert(candidate(100L, 2L) == \"001\");\n    assert(candidate(12L,\
    \ 2L) == \"12\");\n    assert(candidate(97L, 8L) == \"79\");\n    assert(candidate(12L,\
    \ 1L) == \"21\");\n    assert(candidate(11L, 101L) == \"11\");\n}\nvoid main(){}"
  status: SyntaxError
  stderr: '/tmp/tmpcjm4ghnv.d(15): Error: template instance `to!string` template `to`
    is not defined, did you mean No?

    /tmp/tmpcjm4ghnv.d(17): Error: template `std.typecons.reverse` cannot deduce function
    from argument types `!()(char[])`, candidates are:

    /home/a.guha/repos/spack/opt/spack/linux-centos7-haswell/gcc-9.2.0/dmd-2.081.1-jzbhflp3vff4u2dqrltybjq3in2pa22f/linux/bin64/../../src/phobos/std/typecons.d(1486):        `std.typecons.reverse(T)(T
    t) if (isTuple!T)`

    Failed: ["dmd", "-unittest", "-v", "-o-", "/tmp/tmpcjm4ghnv.d", "-I/tmp"]

    '
  stdout: ''
  timestamp: 1660164227
- exit_code: 1
  program: "import std.typecons;\nimport std.math;\n/*\nCircular shift the digits\
    \ of the integer x, shift the digits right by shift\n    and return the result\
    \ as a string.\n    If shift > number of digits, return digits reversed.\n   \
    \ >>> circular_shift(12L, 1L)\n    \"21\"\n    >>> circular_shift(12L, 2L)\n \
    \   \"12\"\n    \n*/\nstring circular_shift(long x, long shift) \n{\n    string\
    \ s = to!string(x);\n    if (shift > s.length)\n        return s[$-1 .. $];\n\
    \    return s[shift .. $] ~ s[0 .. shift - 1];\n}\n/*\n    Return the number of\
    \ digits in the integer x.\n    >>> num_digits(0L)\n    1\n    >>> num_digits(10L)\n\
    \    2\n    >>> num_digits(12345L)\n    5\n*/\nlong num_digits(long x) \n{\n \
    \   return to!string(x).length;\n}\n/*\n    Return the number of digits in the\
    \ integer x.\n    >>> num_digits(0L)\n    1\n    >>> num_digits(10L)\n    2\n\
    \    >>> num_digits(12345L)\n    5\n*/\nlong num_digits(long x) \n{\n    return\
    \ to!string(x).length;\n}\n/*\n    Return the number of digits in the integer\
    \ x.\n    >>> num_digits(0L)\n    1\n    >>> num_digits(10L)\n    2\n    >>> num_digits(12345L)\n\
    \    5\n*/\nlong num_digits(long x) \n{\n    return to!string(x).length;\n}\n\
    /*\n    Return the number of digits in the integer x.\n    >>> num_digits(0L)\n\
    \    1\n    >>> num_digits(10L)\n    2\n    >>> num_digits(12345L)\n    5\n*/\n\
    long num_digits(long x) \n{\n    return to!string(x).length;\n}\n/*\n    Return\
    \ the number of digits in the integer x.\n    >>> num_digits(0L)\n    1\n    >>>\
    \ num_digits(10L)\n    2\n    >>> num_digits(12345L)\n    5\n*/\nlong num_digits(long\
    \ x) \n{\n    return to!string(x).length;\n}\n/*\n    Return the number of digits\
    \ in the integer x.\n    >>> num_digits(0L)\n    1\n    >>> num_\nunittest\n{\n\
    \    alias candidate = circular_shift;\n\n    assert(candidate(100L, 2L) == \"\
    001\");\n    assert(candidate(12L, 2L) == \"12\");\n    assert(candidate(97L,\
    \ 8L) == \"79\");\n    assert(candidate(12L, 1L) == \"21\");\n    assert(candidate(11L,\
    \ 101L) == \"11\");\n}\nvoid main(){}"
  status: SyntaxError
  stderr: '/tmp/tmph4_416i9.d(85): Error: unterminated /* */ comment

    Failed: ["dmd", "-unittest", "-v", "-o-", "/tmp/tmph4_416i9.d", "-I/tmp"]

    '
  stdout: ''
  timestamp: 1660164227
- exit_code: 1
  program: "import std.typecons;\nimport std.math;\n/*\nCircular shift the digits\
    \ of the integer x, shift the digits right by shift\n    and return the result\
    \ as a string.\n    If shift > number of digits, return digits reversed.\n   \
    \ >>> circular_shift(12L, 1L)\n    \"21\"\n    >>> circular_shift(12L, 2L)\n \
    \   \"12\"\n    \n*/\nstring circular_shift(long x, long shift) \n{\n    string\
    \ s = to!string(x);\n    if (shift > s.length)\n        return s[$-shift..$];\n\
    \    return s[shift..$] ~ s[0..shift-1];\n}\n/*\n    Return the sum of the digits\
    \ of the integer x.\n    >>> sum_digits(12L)\n    3\n    >>> sum_digits(12345L)\n\
    \    15\n*/\nlong sum_digits(long x) \n{\n    string s = to!string(x);\n    long\
    \ sum = 0;\n    foreach (c; s)\n        sum += c - '0';\n    return sum;\n}\n\
    /*\n    Return the number of digits in the integer x.\n    >>> num_digits(12L)\n\
    \    2\n    >>> num_digits(12345L)\n    5\n*/\nlong num_digits(long x) \n{\n \
    \   return to!string(x).length;\n}\n/*\n    Return the number of digits in the\
    \ integer x.\n    >>> num_digits(12L)\n    2\n    >>> num_digits(12345L)\n   \
    \ 5\n*/\nlong num_digits(long x) \n{\n    return to!string(x).length;\n}\n/*\n\
    \    Return the number of digits in the integer x.\n    >>> num_digits(12L)\n\
    \    2\n    >>> num_digits(12345L)\n    5\n*/\nlong num_digits(long x) \n{\n \
    \   return to!string(x).length;\n}\n/*\n    Return the number of digits in the\
    \ integer x.\n    >>> num_digits(12L)\n    2\n    >>> num_digits(12345L)\n   \
    \ 5\n*/\nlong num_digits(long x) \n{\n    return to!string(x).length;\n}\n/*\n\
    \    Return the number of digits in the integer x.\n    >>> num_digits(12L)\n\
    \    2\n    >>> num_digits(12345L)\n    5\n*/\nlong num_digits(long x) \n{\n \
    \   return to!string(x).length;\n}\n\nunittest\n{\n    alias candidate = circular_shift;\n\
    \n    assert(candidate(100L, 2L) == \"001\");\n    assert(candidate(12L, 2L) ==\
    \ \"12\");\n    assert(candidate(97L, 8L) == \"79\");\n    assert(candidate(12L,\
    \ 1L) == \"21\");\n    assert(candidate(11L, 101L) == \"11\");\n}\nvoid main(){}"
  status: SyntaxError
  stderr: '/tmp/tmp5cy9chob.d(15): Error: template instance `to!string` template `to`
    is not defined, did you mean No?

    /tmp/tmp5cy9chob.d(29): Error: template instance `to!string` template `to` is
    not defined, did you mean No?

    /tmp/tmp5cy9chob.d(44): Error: template instance `to!string` template `to` is
    not defined, did you mean No?

    /tmp/tmp5cy9chob.d(55): Error: template instance `to!string` template `to` is
    not defined, did you mean No?

    /tmp/tmp5cy9chob.d(66): Error: template instance `to!string` template `to` is
    not defined, did you mean No?

    /tmp/tmp5cy9chob.d(77): Error: template instance `to!string` template `to` is
    not defined, did you mean No?

    /tmp/tmp5cy9chob.d(88): Error: template instance `to!string` template `to` is
    not defined, did you mean No?

    Failed: ["dmd", "-unittest", "-v", "-o-", "/tmp/tmp5cy9chob.d", "-I/tmp"]

    '
  stdout: ''
  timestamp: 1660164227
- exit_code: 1
  program: "import std.typecons;\nimport std.math;\n/*\nCircular shift the digits\
    \ of the integer x, shift the digits right by shift\n    and return the result\
    \ as a string.\n    If shift > number of digits, return digits reversed.\n   \
    \ >>> circular_shift(12L, 1L)\n    \"21\"\n    >>> circular_shift(12L, 2L)\n \
    \   \"12\"\n    \n*/\nstring circular_shift(long x, long shift) \n{\n    string\
    \ s = to!string(x);\n    long len = s.length;\n    if (shift > len)\n    {\n \
    \       return s[$-1..$];\n    }\n    return s[shift..$] ~ s[0..shift-1];\n}\n\
    unittest\n{\n    alias candidate = circular_shift;\n\n    assert(candidate(100L,\
    \ 2L) == \"001\");\n    assert(candidate(12L, 2L) == \"12\");\n    assert(candidate(97L,\
    \ 8L) == \"79\");\n    assert(candidate(12L, 1L) == \"21\");\n    assert(candidate(11L,\
    \ 101L) == \"11\");\n}\nvoid main(){}"
  status: SyntaxError
  stderr: '/tmp/tmpi52w4_rj.d(15): Error: template instance `to!string` template `to`
    is not defined, did you mean No?

    Failed: ["dmd", "-unittest", "-v", "-o-", "/tmp/tmpi52w4_rj.d", "-I/tmp"]

    '
  stdout: ''
  timestamp: 1660164227
- exit_code: 1
  program: "import std.typecons;\nimport std.math;\n/*\nCircular shift the digits\
    \ of the integer x, shift the digits right by shift\n    and return the result\
    \ as a string.\n    If shift > number of digits, return digits reversed.\n   \
    \ >>> circular_shift(12L, 1L)\n    \"21\"\n    >>> circular_shift(12L, 2L)\n \
    \   \"12\"\n    \n*/\nstring circular_shift(long x, long shift) \n{\n    string\
    \ result = to!string(x);\n    if (shift > result.length)\n    {\n        return\
    \ result[$-1..$];\n    }\n    else\n    {\n        return result[shift..$] ~ result[0..shift-1];\n\
    \    }\n}\n/*\n    Return the number of digits in the integer x.\n    >>> num_digits(0L)\n\
    \    1\n    >>> num_digits(1L)\n    1\n    >>> num_digits(10L)\n    2\n    >>>\
    \ num_digits(12345L)\n    5\n*/\nlong num_digits(long x) \n{\n    return to!string(x).length;\n\
    }\n/*\n    Return the number of digits in the integer x.\n    >>> num_digits(0L)\n\
    \    1\n    >>> num_digits(1L)\n    1\n    >>> num_digits(10L)\n    2\n    >>>\
    \ num_digits(12345L)\n    5\n*/\nlong num_digits(long x) \n{\n    return to!string(x).length;\n\
    }\n/*\n    Return the number of digits in the integer x.\n    >>> num_digits(0L)\n\
    \    1\n    >>> num_digits(1L)\n    1\n    >>> num_digits(10L)\n    2\n    >>>\
    \ num_digits(12345L)\n    5\n*/\nlong num_digits(long x) \n{\n    return to!string(x).length;\n\
    }\n/*\n    Return the number of digits in the integer x.\n    >>> num_digits(0L)\n\
    \    1\n    >>> num_digits(1L)\n    1\n    >>> num_digits(10L)\n    2\n    >>>\
    \ num_digits(12345L)\n    5\n*/\nlong num_digits(long x) \n{\n    return to!string(x).length;\n\
    }\n/*\n    Return the number of digits in the integer x.\n    >>> num_digits(0L)\n\
    \    1\n    >>> num_digits(1L)\n    1\n    >>> num_\nunittest\n{\n    alias candidate\
    \ = circular_shift;\n\n    assert(candidate(100L, 2L) == \"001\");\n    assert(candidate(12L,\
    \ 2L) == \"12\");\n    assert(candidate(97L, 8L) == \"79\");\n    assert(candidate(12L,\
    \ 1L) == \"21\");\n    assert(candidate(11L, 101L) == \"11\");\n}\nvoid main(){}"
  status: SyntaxError
  stderr: '/tmp/tmpoydye2t9.d(85): Error: unterminated /* */ comment

    Failed: ["dmd", "-unittest", "-v", "-o-", "/tmp/tmpoydye2t9.d", "-I/tmp"]

    '
  stdout: ''
  timestamp: 1660164227
- exit_code: 1
  program: "import std.typecons;\nimport std.math;\n/*\nCircular shift the digits\
    \ of the integer x, shift the digits right by shift\n    and return the result\
    \ as a string.\n    If shift > number of digits, return digits reversed.\n   \
    \ >>> circular_shift(12L, 1L)\n    \"21\"\n    >>> circular_shift(12L, 2L)\n \
    \   \"12\"\n    \n*/\nstring circular_shift(long x, long shift) \n{\n    string\
    \ s = to!string(x);\n    long n = s.length;\n    if (shift > n)\n    {\n     \
    \   return s[$-1..$];\n    }\n    return s[shift..$] ~ s[0..shift-1];\n}\nunittest\n\
    {\n    alias candidate = circular_shift;\n\n    assert(candidate(100L, 2L) ==\
    \ \"001\");\n    assert(candidate(12L, 2L) == \"12\");\n    assert(candidate(97L,\
    \ 8L) == \"79\");\n    assert(candidate(12L, 1L) == \"21\");\n    assert(candidate(11L,\
    \ 101L) == \"11\");\n}\nvoid main(){}"
  status: SyntaxError
  stderr: '/tmp/tmpfc68dyrr.d(15): Error: template instance `to!string` template `to`
    is not defined, did you mean No?

    Failed: ["dmd", "-unittest", "-v", "-o-", "/tmp/tmpfc68dyrr.d", "-I/tmp"]

    '
  stdout: ''
  timestamp: 1660164227
- exit_code: 1
  program: "import std.typecons;\nimport std.math;\n/*\nCircular shift the digits\
    \ of the integer x, shift the digits right by shift\n    and return the result\
    \ as a string.\n    If shift > number of digits, return digits reversed.\n   \
    \ >>> circular_shift(12L, 1L)\n    \"21\"\n    >>> circular_shift(12L, 2L)\n \
    \   \"12\"\n    \n*/\nstring circular_shift(long x, long shift) \n{\n    string\
    \ s = to!string(x);\n    if (shift > s.length) \n    {\n        return s[$-1 ..\
    \ $];\n    }\n    return s[shift .. $] ~ s[0 .. shift - 1];\n}\nunittest\n{\n\
    \    alias candidate = circular_shift;\n\n    assert(candidate(100L, 2L) == \"\
    001\");\n    assert(candidate(12L, 2L) == \"12\");\n    assert(candidate(97L,\
    \ 8L) == \"79\");\n    assert(candidate(12L, 1L) == \"21\");\n    assert(candidate(11L,\
    \ 101L) == \"11\");\n}\nvoid main(){}"
  status: SyntaxError
  stderr: '/tmp/tmpui0ts_jq.d(15): Error: template instance `to!string` template `to`
    is not defined, did you mean No?

    Failed: ["dmd", "-unittest", "-v", "-o-", "/tmp/tmpui0ts_jq.d", "-I/tmp"]

    '
  stdout: ''
  timestamp: 1660164227
- exit_code: 1
  program: "import std.typecons;\nimport std.math;\n/*\nCircular shift the digits\
    \ of the integer x, shift the digits right by shift\n    and return the result\
    \ as a string.\n    If shift > number of digits, return digits reversed.\n   \
    \ >>> circular_shift(12L, 1L)\n    \"21\"\n    >>> circular_shift(12L, 2L)\n \
    \   \"12\"\n    \n*/\nstring circular_shift(long x, long shift) \n{\n    string\
    \ s = to!string(x);\n    if (shift > s.length)\n        return s[$-1..0];\n  \
    \  return s[shift..$] ~ s[0..shift-1];\n}\nunittest\n{\n    alias candidate =\
    \ circular_shift;\n\n    assert(candidate(100L, 2L) == \"001\");\n    assert(candidate(12L,\
    \ 2L) == \"12\");\n    assert(candidate(97L, 8L) == \"79\");\n    assert(candidate(12L,\
    \ 1L) == \"21\");\n    assert(candidate(11L, 101L) == \"11\");\n}\nvoid main(){}"
  status: SyntaxError
  stderr: '/tmp/tmpmvt9mcrz.d(15): Error: template instance `to!string` template `to`
    is not defined, did you mean No?

    Failed: ["dmd", "-unittest", "-v", "-o-", "/tmp/tmpmvt9mcrz.d", "-I/tmp"]

    '
  stdout: ''
  timestamp: 1660164227
- exit_code: 1
  program: "import std.typecons;\nimport std.math;\n/*\nCircular shift the digits\
    \ of the integer x, shift the digits right by shift\n    and return the result\
    \ as a string.\n    If shift > number of digits, return digits reversed.\n   \
    \ >>> circular_shift(12L, 1L)\n    \"21\"\n    >>> circular_shift(12L, 2L)\n \
    \   \"12\"\n    \n*/\nstring circular_shift(long x, long shift) \n{\n    string\
    \ s = to!string(x);\n    long n = s.length;\n    if (shift > n)\n    {\n     \
    \   return s[$-1..$];\n    }\n    else\n    {\n        return s[shift..$] ~ s[0..shift-1];\n\
    \    }\n}\nunittest\n{\n    alias candidate = circular_shift;\n\n    assert(candidate(100L,\
    \ 2L) == \"001\");\n    assert(candidate(12L, 2L) == \"12\");\n    assert(candidate(97L,\
    \ 8L) == \"79\");\n    assert(candidate(12L, 1L) == \"21\");\n    assert(candidate(11L,\
    \ 101L) == \"11\");\n}\nvoid main(){}"
  status: SyntaxError
  stderr: '/tmp/tmps8vkq3e1.d(15): Error: template instance `to!string` template `to`
    is not defined, did you mean No?

    Failed: ["dmd", "-unittest", "-v", "-o-", "/tmp/tmps8vkq3e1.d", "-I/tmp"]

    '
  stdout: ''
  timestamp: 1660164227
- exit_code: 1
  program: "import std.typecons;\nimport std.math;\n/*\nCircular shift the digits\
    \ of the integer x, shift the digits right by shift\n    and return the result\
    \ as a string.\n    If shift > number of digits, return digits reversed.\n   \
    \ >>> circular_shift(12L, 1L)\n    \"21\"\n    >>> circular_shift(12L, 2L)\n \
    \   \"12\"\n    \n*/\nstring circular_shift(long x, long shift) \n{\n    string\
    \ s = to!string(x);\n    if (shift > s.length)\n        return s[$-shift..$];\n\
    \    return s[shift..$] ~ s[0..shift-1];\n}\n/*\n    >>> circular_shift(1234L,\
    \ 1L)\n    \"4123\"\n    >>> circular_shift(1234L, 2L)\n    \"3412\"\n    >>>\
    \ circular_shift(1234L, 3L)\n    \"2341\"\n    >>> circular_shift(1234L, 4L)\n\
    \    \"1234\"\n    >>> circular_shift(1234L, 5L)\n    \"1234\"\n    >>> circular_shift(1234L,\
    \ 6L)\n    \"1234\"\n    >>> circular_shift(1234L, 7L)\n    \"1234\"\n    >>>\
    \ circular_shift(1234L, 8L)\n    \"1234\"\n    >>> circular_shift(1234L, 9L)\n\
    \    \"1234\"\n    >>> circular_shift(1234L, 10L)\n    \"1234\"\n    >>> circular_shift(1234L,\
    \ 11L)\n    \"1234\"\n    >>> circular_shift(1234L, 12L)\n    \"1234\"\n    >>>\
    \ circular_shift(1234L, 13L)\n    \"1234\"\n    >>> circular_shift(1234L, 14L)\n\
    \    \"1234\"\n    >>> circular_shift(1234L, 15L)\n    \"1234\"\n    >>> circular_shift(1234L,\
    \ 16L)\n    \"1234\"\n    >>> circular_shift(1234L, 17L)\n    \"1234\"\n    >>>\
    \ circular_shift(1234L, 18L)\n    \"1234\"\n    >>> circular_shift(1234L, 19L)\n\
    \    \"1234\"\n    >>> circular_shift(1234L, 20L)\n    \"1234\"\n    >>> circular_shift(1234L,\
    \ 21L)\n    \"1234\"\n    >>> circular_shift(1234L, 22L)\n    \"1234\"\n    >>>\
    \ circular_shift(1234L, 23L)\n   \nunittest\n{\n    alias candidate = circular_shift;\n\
    \n    assert(candidate(100L, 2L) == \"001\");\n    assert(candidate(12L, 2L) ==\
    \ \"12\");\n    assert(candidate(97L, 8L) == \"79\");\n    assert(candidate(12L,\
    \ 1L) == \"21\");\n    assert(candidate(11L, 101L) == \"11\");\n}\nvoid main(){}"
  status: SyntaxError
  stderr: '/tmp/tmpkze4w_bd.d(20): Error: unterminated /* */ comment

    Failed: ["dmd", "-unittest", "-v", "-o-", "/tmp/tmpkze4w_bd.d", "-I/tmp"]

    '
  stdout: ''
  timestamp: 1660164227
- exit_code: 1
  program: "import std.typecons;\nimport std.math;\n/*\nCircular shift the digits\
    \ of the integer x, shift the digits right by shift\n    and return the result\
    \ as a string.\n    If shift > number of digits, return digits reversed.\n   \
    \ >>> circular_shift(12L, 1L)\n    \"21\"\n    >>> circular_shift(12L, 2L)\n \
    \   \"12\"\n    \n*/\nstring circular_shift(long x, long shift) \n{\n    string\
    \ s = to!string(x);\n    if (shift > s.length)\n        return s[$-1..$].dup.reverse;\n\
    \    return s[shift..$] ~ s[0..shift-1];\n}\nunittest\n{\n    alias candidate\
    \ = circular_shift;\n\n    assert(candidate(100L, 2L) == \"001\");\n    assert(candidate(12L,\
    \ 2L) == \"12\");\n    assert(candidate(97L, 8L) == \"79\");\n    assert(candidate(12L,\
    \ 1L) == \"21\");\n    assert(candidate(11L, 101L) == \"11\");\n}\nvoid main(){}"
  status: SyntaxError
  stderr: '/tmp/tmpcjm4ghnv.d(15): Error: template instance `to!string` template `to`
    is not defined, did you mean No?

    /tmp/tmpcjm4ghnv.d(17): Error: template `std.typecons.reverse` cannot deduce function
    from argument types `!()(char[])`, candidates are:

    /home/a.guha/repos/spack/opt/spack/linux-centos7-haswell/gcc-9.2.0/dmd-2.081.1-jzbhflp3vff4u2dqrltybjq3in2pa22f/linux/bin64/../../src/phobos/std/typecons.d(1486):        `std.typecons.reverse(T)(T
    t) if (isTuple!T)`

    Failed: ["dmd", "-unittest", "-v", "-o-", "/tmp/tmpcjm4ghnv.d", "-I/tmp"]

    '
  stdout: ''
  timestamp: 1660164227
- exit_code: 1
  program: "import std.typecons;\nimport std.math;\n/*\nCircular shift the digits\
    \ of the integer x, shift the digits right by shift\n    and return the result\
    \ as a string.\n    If shift > number of digits, return digits reversed.\n   \
    \ >>> circular_shift(12L, 1L)\n    \"21\"\n    >>> circular_shift(12L, 2L)\n \
    \   \"12\"\n    \n*/\nstring circular_shift(long x, long shift) \n{\n    string\
    \ s = to!string(x);\n    if (shift > s.length) \n    {\n        return s[$-1 ..\
    \ $];\n    }\n    return s[shift .. $] ~ s[0 .. shift - 1];\n}\n/*\n    Return\
    \ the number of digits in the integer x.\n    >>> num_digits(123L)\n    3\n  \
    \  >>> num_digits(0L)\n    1\n*/\nlong num_digits(long x) \n{\n    return to!string(x).length;\n\
    }\n/*\n    Return the number of digits in the integer x.\n    >>> num_digits(123L)\n\
    \    3\n    >>> num_digits(0L)\n    1\n*/\nlong num_digits(long x) \n{\n    return\
    \ to!string(x).length;\n}\n/*\n    Return the number of digits in the integer\
    \ x.\n    >>> num_digits(123L)\n    3\n    >>> num_digits(0L)\n    1\n*/\nlong\
    \ num_digits(long x) \n{\n    return to!string(x).length;\n}\n/*\n    Return the\
    \ number of digits in the integer x.\n    >>> num_digits(123L)\n    3\n    >>>\
    \ num_digits(0L)\n    1\n*/\nlong num_digits(long x) \n{\n    return to!string(x).length;\n\
    }\n/*\n    Return the number of digits in the integer x.\n    >>> num_digits(123L)\n\
    \    3\n    >>> num_digits(0L)\n    1\n*/\nlong num_digits(long x) \n{\n    return\
    \ to!string(x).length;\n}\n/*\n    Return the number of digits in the integer\
    \ x.\n    >>> num_digits(123L)\n    3\n    >>> num_digits(0L)\n    1\n*/\nlong\
    \ num_digits(long x) \n{\n    return to!string(x).length;\n}\n/*\n    Return the\
    \ number of digits in the integer x.\n    >>> num_digits(123L)\n    3\n    >>>\n\
    unittest\n{\n    alias candidate = circular_shift;\n\n    assert(candidate(100L,\
    \ 2L) == \"001\");\n    assert(candidate(12L, 2L) == \"12\");\n    assert(candidate(97L,\
    \ 8L) == \"79\");\n    assert(candidate(12L, 1L) == \"21\");\n    assert(candidate(11L,\
    \ 101L) == \"11\");\n}\nvoid main(){}"
  status: SyntaxError
  stderr: '/tmp/tmpw4n_i8h9.d(88): Error: unterminated /* */ comment

    Failed: ["dmd", "-unittest", "-v", "-o-", "/tmp/tmpw4n_i8h9.d", "-I/tmp"]

    '
  stdout: ''
  timestamp: 1660164227
- exit_code: 1
  program: "import std.typecons;\nimport std.math;\n/*\nCircular shift the digits\
    \ of the integer x, shift the digits right by shift\n    and return the result\
    \ as a string.\n    If shift > number of digits, return digits reversed.\n   \
    \ >>> circular_shift(12L, 1L)\n    \"21\"\n    >>> circular_shift(12L, 2L)\n \
    \   \"12\"\n    \n*/\nstring circular_shift(long x, long shift) \n{\n    string\
    \ s = to!string(x);\n    if (shift > s.length)\n        return s[$-1..$];\n  \
    \  return s[shift..$] ~ s[0..shift-1];\n}\nunittest\n{\n    alias candidate =\
    \ circular_shift;\n\n    assert(candidate(100L, 2L) == \"001\");\n    assert(candidate(12L,\
    \ 2L) == \"12\");\n    assert(candidate(97L, 8L) == \"79\");\n    assert(candidate(12L,\
    \ 1L) == \"21\");\n    assert(candidate(11L, 101L) == \"11\");\n}\nvoid main(){}"
  status: SyntaxError
  stderr: '/tmp/tmpul0fy_n4.d(15): Error: template instance `to!string` template `to`
    is not defined, did you mean No?

    Failed: ["dmd", "-unittest", "-v", "-o-", "/tmp/tmpul0fy_n4.d", "-I/tmp"]

    '
  stdout: ''
  timestamp: 1660164227
- exit_code: 1
  program: "import std.typecons;\nimport std.math;\n/*\nCircular shift the digits\
    \ of the integer x, shift the digits right by shift\n    and return the result\
    \ as a string.\n    If shift > number of digits, return digits reversed.\n   \
    \ >>> circular_shift(12L, 1L)\n    \"21\"\n    >>> circular_shift(12L, 2L)\n \
    \   \"12\"\n    \n*/\nstring circular_shift(long x, long shift) \n{\n    string\
    \ s = to!string(x);\n    if (shift > s.length)\n        return s[$-1..0];\n  \
    \  return s[shift..$] ~ s[0..shift-1];\n}\nunittest\n{\n    alias candidate =\
    \ circular_shift;\n\n    assert(candidate(100L, 2L) == \"001\");\n    assert(candidate(12L,\
    \ 2L) == \"12\");\n    assert(candidate(97L, 8L) == \"79\");\n    assert(candidate(12L,\
    \ 1L) == \"21\");\n    assert(candidate(11L, 101L) == \"11\");\n}\nvoid main(){}"
  status: SyntaxError
  stderr: '/tmp/tmpmvt9mcrz.d(15): Error: template instance `to!string` template `to`
    is not defined, did you mean No?

    Failed: ["dmd", "-unittest", "-v", "-o-", "/tmp/tmpmvt9mcrz.d", "-I/tmp"]

    '
  stdout: ''
  timestamp: 1660164227
- exit_code: 1
  program: "import std.typecons;\nimport std.math;\n/*\nCircular shift the digits\
    \ of the integer x, shift the digits right by shift\n    and return the result\
    \ as a string.\n    If shift > number of digits, return digits reversed.\n   \
    \ >>> circular_shift(12L, 1L)\n    \"21\"\n    >>> circular_shift(12L, 2L)\n \
    \   \"12\"\n    \n*/\nstring circular_shift(long x, long shift) \n{\n    string\
    \ s = to!string(x);\n    if (shift > s.length)\n        return s[$-1..0];\n  \
    \  return s[shift..$] ~ s[0..shift-1];\n}\nunittest\n{\n    alias candidate =\
    \ circular_shift;\n\n    assert(candidate(100L, 2L) == \"001\");\n    assert(candidate(12L,\
    \ 2L) == \"12\");\n    assert(candidate(97L, 8L) == \"79\");\n    assert(candidate(12L,\
    \ 1L) == \"21\");\n    assert(candidate(11L, 101L) == \"11\");\n}\nvoid main(){}"
  status: SyntaxError
  stderr: '/tmp/tmpmvt9mcrz.d(15): Error: template instance `to!string` template `to`
    is not defined, did you mean No?

    Failed: ["dmd", "-unittest", "-v", "-o-", "/tmp/tmpmvt9mcrz.d", "-I/tmp"]

    '
  stdout: ''
  timestamp: 1660164227
- exit_code: 1
  program: "import std.typecons;\nimport std.math;\n/*\nCircular shift the digits\
    \ of the integer x, shift the digits right by shift\n    and return the result\
    \ as a string.\n    If shift > number of digits, return digits reversed.\n   \
    \ >>> circular_shift(12L, 1L)\n    \"21\"\n    >>> circular_shift(12L, 2L)\n \
    \   \"12\"\n    \n*/\nstring circular_shift(long x, long shift) \n{\n    string\
    \ s = to!string(x);\n    if (shift > s.length)\n        return s[$-shift..$];\n\
    \    return s[shift..$] ~ s[0..shift-1];\n}\n/*\n    Return the number of digits\
    \ in the integer x.\n    >>> num_digits(12L)\n    2\n    >>> num_digits(123L)\n\
    \    3\n*/\nlong num_digits(long x) \n{\n    return to!string(x).length;\n}\n\
    /*\n    Return the number of digits in the integer x.\n    >>> num_digits(12L)\n\
    \    2\n    >>> num_digits(123L)\n    3\n*/\nlong num_digits(long x) \n{\n   \
    \ return to!string(x).length;\n}\n/*\n    Return the number of digits in the integer\
    \ x.\n    >>> num_digits(12L)\n    2\n    >>> num_digits(123L)\n    3\n*/\nlong\
    \ num_digits(long x) \n{\n    return to!string(x).length;\n}\n/*\n    Return the\
    \ number of digits in the integer x.\n    >>> num_digits(12L)\n    2\n    >>>\
    \ num_digits(123L)\n    3\n*/\nlong num_digits(long x) \n{\n    return to!string(x).length;\n\
    }\n/*\n    Return the number of digits in the integer x.\n    >>> num_digits(12L)\n\
    \    2\n    >>> num_digits(123L)\n    3\n*/\nlong num_digits(long x) \n{\n   \
    \ return to!string(x).length;\n}\n/*\n    Return the number of digits in the integer\
    \ x.\n    >>> num_digits(12L)\n    2\n    >>> num_digits(123L)\n    3\n*/\nlong\
    \ num_digits(long x) \n{\n    return to!string(x).length;\n}\n/*\n    Return the\
    \ number of digits in the integer x.\n    >>> num_digits(12L)\n    2\n    >>>\
    \ num_digits(123L\nunittest\n{\n    alias candidate = circular_shift;\n\n    assert(candidate(100L,\
    \ 2L) == \"001\");\n    assert(candidate(12L, 2L) == \"12\");\n    assert(candidate(97L,\
    \ 8L) == \"79\");\n    assert(candidate(12L, 1L) == \"21\");\n    assert(candidate(11L,\
    \ 101L) == \"11\");\n}\nvoid main(){}"
  status: SyntaxError
  stderr: '/tmp/tmpuw2824hb.d(86): Error: unterminated /* */ comment

    Failed: ["dmd", "-unittest", "-v", "-o-", "/tmp/tmpuw2824hb.d", "-I/tmp"]

    '
  stdout: ''
  timestamp: 1660164227
- exit_code: 1
  program: "import std.typecons;\nimport std.math;\n/*\nCircular shift the digits\
    \ of the integer x, shift the digits right by shift\n    and return the result\
    \ as a string.\n    If shift > number of digits, return digits reversed.\n   \
    \ >>> circular_shift(12L, 1L)\n    \"21\"\n    >>> circular_shift(12L, 2L)\n \
    \   \"12\"\n    \n*/\nstring circular_shift(long x, long shift) \n{\n    string\
    \ s = to!string(x);\n    if (shift > s.length)\n        return s[$-1..0];\n  \
    \  return s[shift..$] ~ s[0..shift-1];\n}\nunittest\n{\n    alias candidate =\
    \ circular_shift;\n\n    assert(candidate(100L, 2L) == \"001\");\n    assert(candidate(12L,\
    \ 2L) == \"12\");\n    assert(candidate(97L, 8L) == \"79\");\n    assert(candidate(12L,\
    \ 1L) == \"21\");\n    assert(candidate(11L, 101L) == \"11\");\n}\nvoid main(){}"
  status: SyntaxError
  stderr: '/tmp/tmpmvt9mcrz.d(15): Error: template instance `to!string` template `to`
    is not defined, did you mean No?

    Failed: ["dmd", "-unittest", "-v", "-o-", "/tmp/tmpmvt9mcrz.d", "-I/tmp"]

    '
  stdout: ''
  timestamp: 1660164227
- exit_code: 1
  program: "import std.typecons;\nimport std.math;\n/*\nCircular shift the digits\
    \ of the integer x, shift the digits right by shift\n    and return the result\
    \ as a string.\n    If shift > number of digits, return digits reversed.\n   \
    \ >>> circular_shift(12L, 1L)\n    \"21\"\n    >>> circular_shift(12L, 2L)\n \
    \   \"12\"\n    \n*/\nstring circular_shift(long x, long shift) \n{\n    string\
    \ s = to!string(x);\n    if (shift > s.length)\n        return s[$-1..$];\n  \
    \  return s[shift..$] ~ s[0..shift-1];\n}\n/*\n    Return the number of digits\
    \ in the integer x.\n    >>> number_of_digits(12L)\n    2\n    >>> number_of_digits(12345L)\n\
    \    5\n*/\nlong number_of_digits(long x) \n{\n    return to!string(x).length;\n\
    }\n/*\n    Return the number of digits in the integer x.\n    >>> number_of_digits(12L)\n\
    \    2\n    >>> number_of_digits(12345L)\n    5\n*/\nlong number_of_digits(long\
    \ x) \n{\n    return to!string(x).length;\n}\n/*\n    Return the number of digits\
    \ in the integer x.\n    >>> number_of_digits(12L)\n    2\n    >>> number_of_digits(12345L)\n\
    \    5\n*/\nlong number_of_digits(long x) \n{\n    return to!string(x).length;\n\
    }\n/*\n    Return the number of digits in the integer x.\n    >>> number_of_digits(12L)\n\
    \    2\n    >>> number_of_digits(12345L)\n    5\n*/\nlong number_of_digits(long\
    \ x) \n{\n    return to!string(x).length;\n}\n/*\n    Return the number of digits\
    \ in the integer x.\n    >>> number_of_digits(12L)\n    2\n    >>> number_of_digits(12345L)\n\
    \    5\n*/\nlong number_of_digits(long x) \n{\n    return to!string(x).length;\n\
    }\n/*\n    Return the number of digits in the integer x.\n    >>> number_of_digits(12L)\n\
    \    2\n    >>> number_of_digits(12345L)\n    5\n*/\nlong number_of_digits(long\
    \ x) \n{\n    return to!string(x).\nunittest\n{\n    alias candidate = circular_shift;\n\
    \n    assert(candidate(100L, 2L) == \"001\");\n    assert(candidate(12L, 2L) ==\
    \ \"12\");\n    assert(candidate(97L, 8L) == \"79\");\n    assert(candidate(12L,\
    \ 1L) == \"21\");\n    assert(candidate(11L, 101L) == \"11\");\n}\nvoid main(){}"
  status: SyntaxError
  stderr: '/tmp/tmpwv1x_l97.d(85): Error: identifier expected following `.`, not `unittest`

    /tmp/tmpwv1x_l97.d(86): Error: found `{` when expecting `;` following `return`
    statement

    Failed: ["dmd", "-unittest", "-v", "-o-", "/tmp/tmpwv1x_l97.d", "-I/tmp"]

    '
  stdout: ''
  timestamp: 1660164227
- exit_code: 1
  program: "import std.typecons;\nimport std.math;\n/*\nCircular shift the digits\
    \ of the integer x, shift the digits right by shift\n    and return the result\
    \ as a string.\n    If shift > number of digits, return digits reversed.\n   \
    \ >>> circular_shift(12L, 1L)\n    \"21\"\n    >>> circular_shift(12L, 2L)\n \
    \   \"12\"\n    \n*/\nstring circular_shift(long x, long shift) \n{\n    string\
    \ s = to!string(x);\n    long n = s.length;\n    if (shift > n) \n    {\n    \
    \    return s[n-1..0];\n    }\n    return s[shift..n-1] ~ s[0..shift-1];\n}\n\
    /*\n    Return the number of digits in the integer x.\n    >>> num_digits(0L)\n\
    \    1\n    >>> num_digits(5L)\n    1\n    >>> num_digits(12345L)\n    5\n*/\n\
    long num_digits(long x) \n{\n    return to!string(x).length;\n}\n/*\n    Return\
    \ the integer formed by reversing the digits of the integer x.\n    >>> reverse_digits(12345L)\n\
    \    54321L\n    >>> reverse_digits(1L)\n    1L\n*/\nlong reverse_digits(long\
    \ x) \n{\n    return to!long(to!string(x)[$-1..0]);\n}\n/*\n    Return the integer\
    \ formed by reversing the digits of the integer x.\n    >>> reverse_digits(12345L)\n\
    \    54321L\n    >>> reverse_digits(1L)\n    1L\n*/\nlong reverse_digits(long\
    \ x) \n{\n    return to!long(to!string(x)[$-1..0]);\n}\n/*\n    Return the integer\
    \ formed by reversing the digits of the integer x.\n    >>> reverse_digits(12345L)\n\
    \    54321L\n    >>> reverse_digits(1L)\n    1L\n*/\nlong reverse_digits(long\
    \ x) \n{\n    return to!long(to!string(x)[$-1..0]);\n}\n/*\n    Return the integer\
    \ formed by reversing the digits of the integer x.\n    >>> reverse_digits(12345L)\n\
    \    54321L\n    >>> reverse_digits(1L)\n    1L\n*/\nlong reverse_digits(long\
    \ x) \n{\n    return to!long(to!string(x)[$-1..0]);\n}\n/*\n    Return the integer\
    \ formed by reversing the digits of\nunittest\n{\n    alias candidate = circular_shift;\n\
    \n    assert(candidate(100L, 2L) == \"001\");\n    assert(candidate(12L, 2L) ==\
    \ \"12\");\n    assert(candidate(97L, 8L) == \"79\");\n    assert(candidate(12L,\
    \ 1L) == \"21\");\n    assert(candidate(11L, 101L) == \"11\");\n}\nvoid main(){}"
  status: SyntaxError
  stderr: '/tmp/tmpfhsqqvxd.d(80): Error: unterminated /* */ comment

    Failed: ["dmd", "-unittest", "-v", "-o-", "/tmp/tmpfhsqqvxd.d", "-I/tmp"]

    '
  stdout: ''
  timestamp: 1660164227
- exit_code: 1
  program: "import std.typecons;\nimport std.math;\n/*\nCircular shift the digits\
    \ of the integer x, shift the digits right by shift\n    and return the result\
    \ as a string.\n    If shift > number of digits, return digits reversed.\n   \
    \ >>> circular_shift(12L, 1L)\n    \"21\"\n    >>> circular_shift(12L, 2L)\n \
    \   \"12\"\n    \n*/\nstring circular_shift(long x, long shift) \n{\n    string\
    \ s = to!string(x);\n    if (shift > s.length)\n        return s[$-1..$].dup.reverse;\n\
    \    return s[shift..$] ~ s[0..shift-1];\n}\nunittest\n{\n    alias candidate\
    \ = circular_shift;\n\n    assert(candidate(100L, 2L) == \"001\");\n    assert(candidate(12L,\
    \ 2L) == \"12\");\n    assert(candidate(97L, 8L) == \"79\");\n    assert(candidate(12L,\
    \ 1L) == \"21\");\n    assert(candidate(11L, 101L) == \"11\");\n}\nvoid main(){}"
  status: SyntaxError
  stderr: '/tmp/tmpcjm4ghnv.d(15): Error: template instance `to!string` template `to`
    is not defined, did you mean No?

    /tmp/tmpcjm4ghnv.d(17): Error: template `std.typecons.reverse` cannot deduce function
    from argument types `!()(char[])`, candidates are:

    /home/a.guha/repos/spack/opt/spack/linux-centos7-haswell/gcc-9.2.0/dmd-2.081.1-jzbhflp3vff4u2dqrltybjq3in2pa22f/linux/bin64/../../src/phobos/std/typecons.d(1486):        `std.typecons.reverse(T)(T
    t) if (isTuple!T)`

    Failed: ["dmd", "-unittest", "-v", "-o-", "/tmp/tmpcjm4ghnv.d", "-I/tmp"]

    '
  stdout: ''
  timestamp: 1660164227
- exit_code: 1
  program: "import std.typecons;\nimport std.math;\n/*\nCircular shift the digits\
    \ of the integer x, shift the digits right by shift\n    and return the result\
    \ as a string.\n    If shift > number of digits, return digits reversed.\n   \
    \ >>> circular_shift(12L, 1L)\n    \"21\"\n    >>> circular_shift(12L, 2L)\n \
    \   \"12\"\n    \n*/\nstring circular_shift(long x, long shift) \n{\n    string\
    \ s = to!string(x);\n    long len = s.length;\n    if (shift > len)\n    {\n \
    \       return s[$-1..$];\n    }\n    return s[shift..$] ~ s[0..shift-1];\n}\n\
    /*\n    Return a list of all circular shifts of the integer x.\n    >>> circular_shifts(12L)\n\
    \    [\"21\", \"12\"]\n    >>> circular_shifts(123L)\n    [\"321\", \"231\", \"\
    123\"]\n*/\nstring[] circular_shifts(long x) \n{\n    string s = to!string(x);\n\
    \    long len = s.length;\n    string[] result = new string[len];\n    foreach\
    \ (i; 0..len)\n    {\n        result[i] = circular_shift(x, i);\n    }\n    return\
    \ result;\n}\n/*\n    Return a list of all circular shifts of the integer x, sorted\
    \ in ascending order.\n    >>> sorted_circular_shifts(12L)\n    [\"12\", \"21\"\
    ]\n    >>> sorted_circular_shifts(123L)\n    [\"123\", \"231\", \"321\"]\n*/\n\
    string[] sorted_circular_shifts(long x) \n{\n    string[] result = circular_shifts(x);\n\
    \    sort(result);\n    return result;\n}\n/*\n    Return the integer whose digits\
    \ are the circular shifts of the integer x, sorted in ascending order.\n    >>>\
    \ circular_sort(12L)\n    12\n    >>> circular_sort(123L)\n    123\n    >>> circular_sort(321L)\n\
    \    123\n*/\nlong circular_sort(long x) \n{\n    string[] result = sorted_circular_shifts(x);\n\
    \    return to!long(result[0]);\n}\n/*\n    Return the integer whose digits are\
    \ the circular shifts of the integer x, sorted in ascending order.\n    >>> circular_sort(12L)\n\
    \    12\n    >>> circular_sort(123L)\n    123\n    >>> circular_sort(321L)\n \
    \   123\n*/\nlong circular_sort(long x) \n{\n    string[] result = sorted_\nunittest\n\
    {\n    alias candidate = circular_shift;\n\n    assert(candidate(100L, 2L) ==\
    \ \"001\");\n    assert(candidate(12L, 2L) == \"12\");\n    assert(candidate(97L,\
    \ 8L) == \"79\");\n    assert(candidate(12L, 1L) == \"21\");\n    assert(candidate(11L,\
    \ 101L) == \"11\");\n}\nvoid main(){}"
  status: SyntaxError
  stderr: '/tmp/tmpfijhct8p.d(80): Error: semicolon expected, not `unittest`

    /tmp/tmpfijhct8p.d(80): Error: found `unittest` instead of statement

    Failed: ["dmd", "-unittest", "-v", "-o-", "/tmp/tmpfijhct8p.d", "-I/tmp"]

    '
  stdout: ''
  timestamp: 1660164227
- exit_code: 1
  program: "import std.typecons;\nimport std.math;\n/*\nCircular shift the digits\
    \ of the integer x, shift the digits right by shift\n    and return the result\
    \ as a string.\n    If shift > number of digits, return digits reversed.\n   \
    \ >>> circular_shift(12L, 1L)\n    \"21\"\n    >>> circular_shift(12L, 2L)\n \
    \   \"12\"\n    \n*/\nstring circular_shift(long x, long shift) \n{\n    string\
    \ s = to!string(x);\n    long n = s.length;\n    if (shift > n)\n    {\n     \
    \   return s[$-1..$];\n    }\n    else\n    {\n        return s[shift..$] ~ s[0..shift-1];\n\
    \    }\n}\nunittest\n{\n    alias candidate = circular_shift;\n\n    assert(candidate(100L,\
    \ 2L) == \"001\");\n    assert(candidate(12L, 2L) == \"12\");\n    assert(candidate(97L,\
    \ 8L) == \"79\");\n    assert(candidate(12L, 1L) == \"21\");\n    assert(candidate(11L,\
    \ 101L) == \"11\");\n}\nvoid main(){}"
  status: SyntaxError
  stderr: '/tmp/tmps8vkq3e1.d(15): Error: template instance `to!string` template `to`
    is not defined, did you mean No?

    Failed: ["dmd", "-unittest", "-v", "-o-", "/tmp/tmps8vkq3e1.d", "-I/tmp"]

    '
  stdout: ''
  timestamp: 1660164227
- exit_code: 1
  program: "import std.typecons;\nimport std.math;\n/*\nCircular shift the digits\
    \ of the integer x, shift the digits right by shift\n    and return the result\
    \ as a string.\n    If shift > number of digits, return digits reversed.\n   \
    \ >>> circular_shift(12L, 1L)\n    \"21\"\n    >>> circular_shift(12L, 2L)\n \
    \   \"12\"\n    \n*/\nstring circular_shift(long x, long shift) \n{\n    string\
    \ result = to!string(x);\n    if (shift > result.length)\n    {\n        return\
    \ result[$-1..$].dup;\n    }\n    else\n    {\n        return result[shift..$]\
    \ ~ result[0..shift-1];\n    }\n}\n/*\n    Return the number of digits in the\
    \ integer x.\n    >>> num_digits(0L)\n    1\n    >>> num_digits(1L)\n    1\n \
    \   >>> num_digits(10L)\n    2\n    >>> num_digits(12345L)\n    5\n*/\nlong num_digits(long\
    \ x) \n{\n    return to!string(x).length;\n}\n/*\n    Return the number of digits\
    \ in the integer x.\n    >>> num_digits(0L)\n    1\n    >>> num_digits(1L)\n \
    \   1\n    >>> num_digits(10L)\n    2\n    >>> num_digits(12345L)\n    5\n*/\n\
    long num_digits(long x) \n{\n    return to!string(x).length;\n}\n/*\n    Return\
    \ the number of digits in the integer x.\n    >>> num_digits(0L)\n    1\n    >>>\
    \ num_digits(1L)\n    1\n    >>> num_digits(10L)\n    2\n    >>> num_digits(12345L)\n\
    \    5\n*/\nlong num_digits(long x) \n{\n    return to!string(x).length;\n}\n\
    /*\n    Return the number of digits in the integer x.\n    >>> num_digits(0L)\n\
    \    1\n    >>> num_digits(1L)\n    1\n    >>> num_digits(10L)\n    2\n    >>>\
    \ num_digits(12345L)\n    5\n*/\nlong num_digits(long x) \n{\n    return to!string(x).length;\n\
    }\n/*\n    Return the number of digits in the integer x.\n    >>> num_digits(0L)\n\
    \    1\n    >>> num_digits(1L)\n    1\n   \nunittest\n{\n    alias candidate =\
    \ circular_shift;\n\n    assert(candidate(100L, 2L) == \"001\");\n    assert(candidate(12L,\
    \ 2L) == \"12\");\n    assert(candidate(97L, 8L) == \"79\");\n    assert(candidate(12L,\
    \ 1L) == \"21\");\n    assert(candidate(11L, 101L) == \"11\");\n}\nvoid main(){}"
  status: SyntaxError
  stderr: '/tmp/tmpi92kcxsa.d(85): Error: unterminated /* */ comment

    Failed: ["dmd", "-unittest", "-v", "-o-", "/tmp/tmpi92kcxsa.d", "-I/tmp"]

    '
  stdout: ''
  timestamp: 1660164227
- exit_code: 1
  program: "import std.typecons;\nimport std.math;\n/*\nCircular shift the digits\
    \ of the integer x, shift the digits right by shift\n    and return the result\
    \ as a string.\n    If shift > number of digits, return digits reversed.\n   \
    \ >>> circular_shift(12L, 1L)\n    \"21\"\n    >>> circular_shift(12L, 2L)\n \
    \   \"12\"\n    \n*/\nstring circular_shift(long x, long shift) \n{\n    string\
    \ s = to!string(x);\n    shift %= s.length;\n    return s[shift..$] ~ s[0..shift];\n\
    }\nunittest\n{\n    alias candidate = circular_shift;\n\n    assert(candidate(100L,\
    \ 2L) == \"001\");\n    assert(candidate(12L, 2L) == \"12\");\n    assert(candidate(97L,\
    \ 8L) == \"79\");\n    assert(candidate(12L, 1L) == \"21\");\n    assert(candidate(11L,\
    \ 101L) == \"11\");\n}\nvoid main(){}"
  status: SyntaxError
  stderr: '/tmp/tmpyl6g8zts.d(15): Error: template instance `to!string` template `to`
    is not defined, did you mean No?

    Failed: ["dmd", "-unittest", "-v", "-o-", "/tmp/tmpyl6g8zts.d", "-I/tmp"]

    '
  stdout: ''
  timestamp: 1660164227
- exit_code: 1
  program: "import std.typecons;\nimport std.math;\n/*\nCircular shift the digits\
    \ of the integer x, shift the digits right by shift\n    and return the result\
    \ as a string.\n    If shift > number of digits, return digits reversed.\n   \
    \ >>> circular_shift(12L, 1L)\n    \"21\"\n    >>> circular_shift(12L, 2L)\n \
    \   \"12\"\n    \n*/\nstring circular_shift(long x, long shift) \n{\n    string\
    \ s = to!string(x);\n    if (shift > s.length) \n    {\n        return s[$-1..$].dup;\n\
    \    }\n    return s[shift..$] ~ s[0..shift-1];\n}\n/*\n    Return the number\
    \ of digits in the integer x.\n    >>> num_digits(12L)\n    2\n    >>> num_digits(123L)\n\
    \    3\n*/\nlong num_digits(long x) \n{\n    return to!string(x).length;\n}\n\
    /*\n    Return the number of digits in the integer x.\n    >>> num_digits(12L)\n\
    \    2\n    >>> num_digits(123L)\n    3\n*/\nlong num_digits(long x) \n{\n   \
    \ return to!string(x).length;\n}\n/*\n    Return the number of digits in the integer\
    \ x.\n    >>> num_digits(12L)\n    2\n    >>> num_digits(123L)\n    3\n*/\nlong\
    \ num_digits(long x) \n{\n    return to!string(x).length;\n}\n/*\n    Return the\
    \ number of digits in the integer x.\n    >>> num_digits(12L)\n    2\n    >>>\
    \ num_digits(123L)\n    3\n*/\nlong num_digits(long x) \n{\n    return to!string(x).length;\n\
    }\n/*\n    Return the number of digits in the integer x.\n    >>> num_digits(12L)\n\
    \    2\n    >>> num_digits(123L)\n    3\n*/\nlong num_digits(long x) \n{\n   \
    \ return to!string(x).length;\n}\n/*\n    Return the number of digits in the integer\
    \ x.\n    >>> num_digits(12L)\n    2\n    >>> num_digits(123L)\n    3\n*/\nlong\
    \ num_digits(long x) \n{\n    return to!string(x).length;\n}\n/*\n    Return the\
    \ number of digits in the integer x.\n    >>> num_digits(12L)\n    2\nunittest\n\
    {\n    alias candidate = circular_shift;\n\n    assert(candidate(100L, 2L) ==\
    \ \"001\");\n    assert(candidate(12L, 2L) == \"12\");\n    assert(candidate(97L,\
    \ 8L) == \"79\");\n    assert(candidate(12L, 1L) == \"21\");\n    assert(candidate(11L,\
    \ 101L) == \"11\");\n}\nvoid main(){}"
  status: SyntaxError
  stderr: '/tmp/tmpd57ipbey.d(88): Error: unterminated /* */ comment

    Failed: ["dmd", "-unittest", "-v", "-o-", "/tmp/tmpd57ipbey.d", "-I/tmp"]

    '
  stdout: ''
  timestamp: 1660164227
- exit_code: 1
  program: "import std.typecons;\nimport std.math;\n/*\nCircular shift the digits\
    \ of the integer x, shift the digits right by shift\n    and return the result\
    \ as a string.\n    If shift > number of digits, return digits reversed.\n   \
    \ >>> circular_shift(12L, 1L)\n    \"21\"\n    >>> circular_shift(12L, 2L)\n \
    \   \"12\"\n    \n*/\nstring circular_shift(long x, long shift) \n{\n    string\
    \ s = to!string(x);\n    if (shift > s.length)\n        return s[$-1 .. $].reverse;\n\
    \    return s[shift .. $] ~ s[0 .. shift - 1];\n}\n/*\n    >>> circular_shift(12L,\
    \ 1L)\n    \"21\"\n    >>> circular_shift(12L, 2L)\n    \"12\"\n*/\nstring circular_shift(long\
    \ x, long shift) \n{\n    string s = to!string(x);\n    if (shift > s.length)\n\
    \        return s[$-1 .. $].reverse;\n    return s[shift .. $] ~ s[0 .. shift\
    \ - 1];\n}\n/*\n    >>> circular_shift(12L, 1L)\n    \"21\"\n    >>> circular_shift(12L,\
    \ 2L)\n    \"12\"\n*/\nstring circular_shift(long x, long shift) \n{\n    string\
    \ s = to!string(x);\n    if (shift > s.length)\n        return s[$-1 .. $].reverse;\n\
    \    return s[shift .. $] ~ s[0 .. shift - 1];\n}\n/*\n    >>> circular_shift(12L,\
    \ 1L)\n    \"21\"\n    >>> circular_shift(12L, 2L)\n    \"12\"\n*/\nstring circular_shift(long\
    \ x, long shift) \n{\n    string s = to!string(x);\n    if (shift > s.length)\n\
    \        return s[$-1 .. $].reverse;\n    return s[shift .. $] ~ s[0 .. shift\
    \ - 1];\n}\n/*\n    >>> circular_shift(12L, 1L)\n    \"21\"\n    >>> circular_shift(12L,\
    \ 2L)\n    \"12\"\n*/\nstring circular_shift(long x, long shift) \n{\n    string\
    \ s = to!string(x);\n    if (shift > s.length)\n        return s[$-1 .. $].reverse;\n\
    \    return s[shift .. $] ~ s[0 .. shift - 1];\n}\n/*\n    >>> circular_shift(12L,\
    \ 1L)\n    \"21\"\nunittest\n{\n    alias candidate = circular_shift;\n\n    assert(candidate(100L,\
    \ 2L) == \"001\");\n    assert(candidate(12L, 2L) == \"12\");\n    assert(candidate(97L,\
    \ 8L) == \"79\");\n    assert(candidate(12L, 1L) == \"21\");\n    assert(candidate(11L,\
    \ 101L) == \"11\");\n}\nvoid main(){}"
  status: SyntaxError
  stderr: '/tmp/tmp0tsqfe_q.d(72): Error: unterminated /* */ comment

    Failed: ["dmd", "-unittest", "-v", "-o-", "/tmp/tmp0tsqfe_q.d", "-I/tmp"]

    '
  stdout: ''
  timestamp: 1660164227
- exit_code: 1
  program: "import std.typecons;\nimport std.math;\n/*\nCircular shift the digits\
    \ of the integer x, shift the digits right by shift\n    and return the result\
    \ as a string.\n    If shift > number of digits, return digits reversed.\n   \
    \ >>> circular_shift(12L, 1L)\n    \"21\"\n    >>> circular_shift(12L, 2L)\n \
    \   \"12\"\n    \n*/\nstring circular_shift(long x, long shift) \n{\n    string\
    \ s = to!string(x);\n    if (shift > s.length)\n        return s[$-1..0];\n  \
    \  return s[shift..$] ~ s[0..shift-1];\n}\nunittest\n{\n    alias candidate =\
    \ circular_shift;\n\n    assert(candidate(100L, 2L) == \"001\");\n    assert(candidate(12L,\
    \ 2L) == \"12\");\n    assert(candidate(97L, 8L) == \"79\");\n    assert(candidate(12L,\
    \ 1L) == \"21\");\n    assert(candidate(11L, 101L) == \"11\");\n}\nvoid main(){}"
  status: SyntaxError
  stderr: '/tmp/tmpmvt9mcrz.d(15): Error: template instance `to!string` template `to`
    is not defined, did you mean No?

    Failed: ["dmd", "-unittest", "-v", "-o-", "/tmp/tmpmvt9mcrz.d", "-I/tmp"]

    '
  stdout: ''
  timestamp: 1660164227
- exit_code: 1
  program: "import std.typecons;\nimport std.math;\n/*\nCircular shift the digits\
    \ of the integer x, shift the digits right by shift\n    and return the result\
    \ as a string.\n    If shift > number of digits, return digits reversed.\n   \
    \ >>> circular_shift(12L, 1L)\n    \"21\"\n    >>> circular_shift(12L, 2L)\n \
    \   \"12\"\n    \n*/\nstring circular_shift(long x, long shift) \n{\n    string\
    \ s = to!string(x);\n    if (shift > s.length)\n        return s[$-1..$];\n  \
    \  return s[shift..$] ~ s[0..shift-1];\n}\nunittest\n{\n    alias candidate =\
    \ circular_shift;\n\n    assert(candidate(100L, 2L) == \"001\");\n    assert(candidate(12L,\
    \ 2L) == \"12\");\n    assert(candidate(97L, 8L) == \"79\");\n    assert(candidate(12L,\
    \ 1L) == \"21\");\n    assert(candidate(11L, 101L) == \"11\");\n}\nvoid main(){}"
  status: SyntaxError
  stderr: '/tmp/tmpul0fy_n4.d(15): Error: template instance `to!string` template `to`
    is not defined, did you mean No?

    Failed: ["dmd", "-unittest", "-v", "-o-", "/tmp/tmpul0fy_n4.d", "-I/tmp"]

    '
  stdout: ''
  timestamp: 1660164227
- exit_code: 1
  program: "import std.typecons;\nimport std.math;\n/*\nCircular shift the digits\
    \ of the integer x, shift the digits right by shift\n    and return the result\
    \ as a string.\n    If shift > number of digits, return digits reversed.\n   \
    \ >>> circular_shift(12L, 1L)\n    \"21\"\n    >>> circular_shift(12L, 2L)\n \
    \   \"12\"\n    \n*/\nstring circular_shift(long x, long shift) \n{\n    string\
    \ s = to!string(x);\n    if (shift > s.length)\n        return s[$-1..$].reverse;\n\
    \    return s[shift..$] ~ s[0..shift-1];\n}\nunittest\n{\n    alias candidate\
    \ = circular_shift;\n\n    assert(candidate(100L, 2L) == \"001\");\n    assert(candidate(12L,\
    \ 2L) == \"12\");\n    assert(candidate(97L, 8L) == \"79\");\n    assert(candidate(12L,\
    \ 1L) == \"21\");\n    assert(candidate(11L, 101L) == \"11\");\n}\nvoid main(){}"
  status: SyntaxError
  stderr: '/tmp/tmpn599cip8.d(15): Error: template instance `to!string` template `to`
    is not defined, did you mean No?

    /tmp/tmpn599cip8.d(17): Error: template `std.typecons.reverse` cannot deduce function
    from argument types `!()(string)`, candidates are:

    /home/a.guha/repos/spack/opt/spack/linux-centos7-haswell/gcc-9.2.0/dmd-2.081.1-jzbhflp3vff4u2dqrltybjq3in2pa22f/linux/bin64/../../src/phobos/std/typecons.d(1486):        `std.typecons.reverse(T)(T
    t) if (isTuple!T)`

    Failed: ["dmd", "-unittest", "-v", "-o-", "/tmp/tmpn599cip8.d", "-I/tmp"]

    '
  stdout: ''
  timestamp: 1660164227
- exit_code: 1
  program: "import std.typecons;\nimport std.math;\n/*\nCircular shift the digits\
    \ of the integer x, shift the digits right by shift\n    and return the result\
    \ as a string.\n    If shift > number of digits, return digits reversed.\n   \
    \ >>> circular_shift(12L, 1L)\n    \"21\"\n    >>> circular_shift(12L, 2L)\n \
    \   \"12\"\n    \n*/\nstring circular_shift(long x, long shift) \n{\n    string\
    \ result = to!string(x);\n    if (shift > result.length)\n    {\n        return\
    \ result[$-1..$].reverse;\n    }\n    return result[shift..$] ~ result[0..shift-1];\n\
    }\n/*\n    Return the number of digits in the integer x.\n    >>> num_digits(0L)\n\
    \    1\n    >>> num_digits(1L)\n    1\n    >>> num_digits(10L)\n    2\n    >>>\
    \ num_digits(12345L)\n    5\n*/\nlong num_digits(long x) \n{\n    return to!string(x).length;\n\
    }\n/*\n    Return the number of digits in the integer x.\n    >>> num_digits(0L)\n\
    \    1\n    >>> num_digits(1L)\n    1\n    >>> num_digits(10L)\n    2\n    >>>\
    \ num_digits(12345L)\n    5\n*/\nlong num_digits(long x) \n{\n    return to!string(x).length;\n\
    }\n/*\n    Return the number of digits in the integer x.\n    >>> num_digits(0L)\n\
    \    1\n    >>> num_digits(1L)\n    1\n    >>> num_digits(10L)\n    2\n    >>>\
    \ num_digits(12345L)\n    5\n*/\nlong num_digits(long x) \n{\n    return to!string(x).length;\n\
    }\n/*\n    Return the number of digits in the integer x.\n    >>> num_digits(0L)\n\
    \    1\n    >>> num_digits(1L)\n    1\n    >>> num_digits(10L)\n    2\n    >>>\
    \ num_digits(12345L)\n    5\n*/\nlong num_digits(long x) \n{\n    return to!string(x).length;\n\
    }\n/*\n    Return the number of digits in the integer x.\n    >>> num_digits(0L)\n\
    \    1\n    >>> num_digits(1L)\n    1\n    >>> num_digits(10L)\n\nunittest\n{\n\
    \    alias candidate = circular_shift;\n\n    assert(candidate(100L, 2L) == \"\
    001\");\n    assert(candidate(12L, 2L) == \"12\");\n    assert(candidate(97L,\
    \ 8L) == \"79\");\n    assert(candidate(12L, 1L) == \"21\");\n    assert(candidate(11L,\
    \ 101L) == \"11\");\n}\nvoid main(){}"
  status: SyntaxError
  stderr: '/tmp/tmpozceieds.d(82): Error: unterminated /* */ comment

    Failed: ["dmd", "-unittest", "-v", "-o-", "/tmp/tmpozceieds.d", "-I/tmp"]

    '
  stdout: ''
  timestamp: 1660164227
- exit_code: 1
  program: "import std.typecons;\nimport std.math;\n/*\nCircular shift the digits\
    \ of the integer x, shift the digits right by shift\n    and return the result\
    \ as a string.\n    If shift > number of digits, return digits reversed.\n   \
    \ >>> circular_shift(12L, 1L)\n    \"21\"\n    >>> circular_shift(12L, 2L)\n \
    \   \"12\"\n    \n*/\nstring circular_shift(long x, long shift) \n{\n    string\
    \ s = to!string(x);\n    if (shift > s.length)\n        return s[$-1..0];\n  \
    \  return s[shift..$] ~ s[0..shift-1];\n}\nunittest\n{\n    alias candidate =\
    \ circular_shift;\n\n    assert(candidate(100L, 2L) == \"001\");\n    assert(candidate(12L,\
    \ 2L) == \"12\");\n    assert(candidate(97L, 8L) == \"79\");\n    assert(candidate(12L,\
    \ 1L) == \"21\");\n    assert(candidate(11L, 101L) == \"11\");\n}\nvoid main(){}"
  status: SyntaxError
  stderr: '/tmp/tmpmvt9mcrz.d(15): Error: template instance `to!string` template `to`
    is not defined, did you mean No?

    Failed: ["dmd", "-unittest", "-v", "-o-", "/tmp/tmpmvt9mcrz.d", "-I/tmp"]

    '
  stdout: ''
  timestamp: 1660164227
- exit_code: 1
  program: "import std.typecons;\nimport std.math;\n/*\nCircular shift the digits\
    \ of the integer x, shift the digits right by shift\n    and return the result\
    \ as a string.\n    If shift > number of digits, return digits reversed.\n   \
    \ >>> circular_shift(12L, 1L)\n    \"21\"\n    >>> circular_shift(12L, 2L)\n \
    \   \"12\"\n    \n*/\nstring circular_shift(long x, long shift) \n{\n    string\
    \ s = to!string(x);\n    long n = s.length;\n    if (shift > n)\n    {\n     \
    \   return s[$-1..$];\n    }\n    return s[shift..$] ~ s[0..shift-1];\n}\nunittest\n\
    {\n    alias candidate = circular_shift;\n\n    assert(candidate(100L, 2L) ==\
    \ \"001\");\n    assert(candidate(12L, 2L) == \"12\");\n    assert(candidate(97L,\
    \ 8L) == \"79\");\n    assert(candidate(12L, 1L) == \"21\");\n    assert(candidate(11L,\
    \ 101L) == \"11\");\n}\nvoid main(){}"
  status: SyntaxError
  stderr: '/tmp/tmpfc68dyrr.d(15): Error: template instance `to!string` template `to`
    is not defined, did you mean No?

    Failed: ["dmd", "-unittest", "-v", "-o-", "/tmp/tmpfc68dyrr.d", "-I/tmp"]

    '
  stdout: ''
  timestamp: 1660164227
- exit_code: 1
  program: "import std.typecons;\nimport std.math;\n/*\nCircular shift the digits\
    \ of the integer x, shift the digits right by shift\n    and return the result\
    \ as a string.\n    If shift > number of digits, return digits reversed.\n   \
    \ >>> circular_shift(12L, 1L)\n    \"21\"\n    >>> circular_shift(12L, 2L)\n \
    \   \"12\"\n    \n*/\nstring circular_shift(long x, long shift) \n{\n    string\
    \ s = to!string(x);\n    shift %= s.length;\n    return s[shift..$] ~ s[0..shift];\n\
    }\nunittest\n{\n    alias candidate = circular_shift;\n\n    assert(candidate(100L,\
    \ 2L) == \"001\");\n    assert(candidate(12L, 2L) == \"12\");\n    assert(candidate(97L,\
    \ 8L) == \"79\");\n    assert(candidate(12L, 1L) == \"21\");\n    assert(candidate(11L,\
    \ 101L) == \"11\");\n}\nvoid main(){}"
  status: SyntaxError
  stderr: '/tmp/tmpyl6g8zts.d(15): Error: template instance `to!string` template `to`
    is not defined, did you mean No?

    Failed: ["dmd", "-unittest", "-v", "-o-", "/tmp/tmpyl6g8zts.d", "-I/tmp"]

    '
  stdout: ''
  timestamp: 1660164227
- exit_code: 1
  program: "import std.typecons;\nimport std.math;\n/*\nCircular shift the digits\
    \ of the integer x, shift the digits right by shift\n    and return the result\
    \ as a string.\n    If shift > number of digits, return digits reversed.\n   \
    \ >>> circular_shift(12L, 1L)\n    \"21\"\n    >>> circular_shift(12L, 2L)\n \
    \   \"12\"\n    \n*/\nstring circular_shift(long x, long shift) \n{\n    string\
    \ s = to!string(x);\n    if (shift > s.length)\n        return s[$-1..0];\n  \
    \  return s[shift..$] ~ s[0..shift-1];\n}\nunittest\n{\n    alias candidate =\
    \ circular_shift;\n\n    assert(candidate(100L, 2L) == \"001\");\n    assert(candidate(12L,\
    \ 2L) == \"12\");\n    assert(candidate(97L, 8L) == \"79\");\n    assert(candidate(12L,\
    \ 1L) == \"21\");\n    assert(candidate(11L, 101L) == \"11\");\n}\nvoid main(){}"
  status: SyntaxError
  stderr: '/tmp/tmpmvt9mcrz.d(15): Error: template instance `to!string` template `to`
    is not defined, did you mean No?

    Failed: ["dmd", "-unittest", "-v", "-o-", "/tmp/tmpmvt9mcrz.d", "-I/tmp"]

    '
  stdout: ''
  timestamp: 1660164227
- exit_code: 1
  program: "import std.typecons;\nimport std.math;\n/*\nCircular shift the digits\
    \ of the integer x, shift the digits right by shift\n    and return the result\
    \ as a string.\n    If shift > number of digits, return digits reversed.\n   \
    \ >>> circular_shift(12L, 1L)\n    \"21\"\n    >>> circular_shift(12L, 2L)\n \
    \   \"12\"\n    \n*/\nstring circular_shift(long x, long shift) \n{\n    string\
    \ s = to!string(x);\n    if (shift > s.length)\n        return s[$-1..$];\n  \
    \  return s[shift..$] ~ s[0..shift-1];\n}\nunittest\n{\n    alias candidate =\
    \ circular_shift;\n\n    assert(candidate(100L, 2L) == \"001\");\n    assert(candidate(12L,\
    \ 2L) == \"12\");\n    assert(candidate(97L, 8L) == \"79\");\n    assert(candidate(12L,\
    \ 1L) == \"21\");\n    assert(candidate(11L, 101L) == \"11\");\n}\nvoid main(){}"
  status: SyntaxError
  stderr: '/tmp/tmpul0fy_n4.d(15): Error: template instance `to!string` template `to`
    is not defined, did you mean No?

    Failed: ["dmd", "-unittest", "-v", "-o-", "/tmp/tmpul0fy_n4.d", "-I/tmp"]

    '
  stdout: ''
  timestamp: 1660164227
- exit_code: 1
  program: "import std.typecons;\nimport std.math;\n/*\nCircular shift the digits\
    \ of the integer x, shift the digits right by shift\n    and return the result\
    \ as a string.\n    If shift > number of digits, return digits reversed.\n   \
    \ >>> circular_shift(12L, 1L)\n    \"21\"\n    >>> circular_shift(12L, 2L)\n \
    \   \"12\"\n    \n*/\nstring circular_shift(long x, long shift) \n{\n    string\
    \ s = to!string(x);\n    shift %= s.length;\n    return s[shift..$] ~ s[0..shift];\n\
    }\nunittest\n{\n    alias candidate = circular_shift;\n\n    assert(candidate(100L,\
    \ 2L) == \"001\");\n    assert(candidate(12L, 2L) == \"12\");\n    assert(candidate(97L,\
    \ 8L) == \"79\");\n    assert(candidate(12L, 1L) == \"21\");\n    assert(candidate(11L,\
    \ 101L) == \"11\");\n}\nvoid main(){}"
  status: SyntaxError
  stderr: '/tmp/tmpyl6g8zts.d(15): Error: template instance `to!string` template `to`
    is not defined, did you mean No?

    Failed: ["dmd", "-unittest", "-v", "-o-", "/tmp/tmpyl6g8zts.d", "-I/tmp"]

    '
  stdout: ''
  timestamp: 1660164227
- exit_code: 1
  program: "import std.typecons;\nimport std.math;\n/*\nCircular shift the digits\
    \ of the integer x, shift the digits right by shift\n    and return the result\
    \ as a string.\n    If shift > number of digits, return digits reversed.\n   \
    \ >>> circular_shift(12L, 1L)\n    \"21\"\n    >>> circular_shift(12L, 2L)\n \
    \   \"12\"\n    \n*/\nstring circular_shift(long x, long shift) \n{\n    string\
    \ s = to!string(x);\n    if (shift > s.length)\n        return s[$-1..0];\n  \
    \  return s[shift..$] ~ s[0..shift-1];\n}\nunittest\n{\n    alias candidate =\
    \ circular_shift;\n\n    assert(candidate(100L, 2L) == \"001\");\n    assert(candidate(12L,\
    \ 2L) == \"12\");\n    assert(candidate(97L, 8L) == \"79\");\n    assert(candidate(12L,\
    \ 1L) == \"21\");\n    assert(candidate(11L, 101L) == \"11\");\n}\nvoid main(){}"
  status: SyntaxError
  stderr: '/tmp/tmpmvt9mcrz.d(15): Error: template instance `to!string` template `to`
    is not defined, did you mean No?

    Failed: ["dmd", "-unittest", "-v", "-o-", "/tmp/tmpmvt9mcrz.d", "-I/tmp"]

    '
  stdout: ''
  timestamp: 1660164227
- exit_code: 1
  program: "import std.typecons;\nimport std.math;\n/*\nCircular shift the digits\
    \ of the integer x, shift the digits right by shift\n    and return the result\
    \ as a string.\n    If shift > number of digits, return digits reversed.\n   \
    \ >>> circular_shift(12L, 1L)\n    \"21\"\n    >>> circular_shift(12L, 2L)\n \
    \   \"12\"\n    \n*/\nstring circular_shift(long x, long shift) \n{\n    string\
    \ result = to!string(x);\n    shift %= result.length;\n    if (shift == 0) return\
    \ result;\n    return result[shift..$] ~ result[0..shift-1];\n}\n/*\n    Return\
    \ the number of digits in the integer x.\n    >>> num_digits(0L)\n    1\n    >>>\
    \ num_digits(5L)\n    1\n    >>> num_digits(12345L)\n    5\n*/\nlong num_digits(long\
    \ x) \n{\n    return to!string(x).length;\n}\n/*\n    Return the integer formed\
    \ by reversing the digits in the integer x.\n    >>> reverse_digits(1L)\n    1\n\
    \    >>> reverse_digits(12L)\n    21\n    >>> reverse_digits(12345L)\n    54321\n\
    */\nlong reverse_digits(long x) \n{\n    return to!long(to!string(x).reverse);\n\
    }\n/*\n    Return the integer formed by reversing the digits in the integer x.\n\
    \    >>> reverse_digits(1L)\n    1\n    >>> reverse_digits(12L)\n    21\n    >>>\
    \ reverse_digits(12345L)\n    54321\n*/\nlong reverse_digits(long x) \n{\n   \
    \ return to!long(to!string(x).reverse);\n}\n/*\n    Return the integer formed\
    \ by reversing the digits in the integer x.\n    >>> reverse_digits(1L)\n    1\n\
    \    >>> reverse_digits(12L)\n    21\n    >>> reverse_digits(12345L)\n    54321\n\
    */\nlong reverse_digits(long x) \n{\n    return to!long(to!string(x).reverse);\n\
    }\n/*\n    Return the integer formed by reversing the digits in the integer x.\n\
    \    >>> reverse_digits(1L)\n    1\n    >>> reverse_digits(12L)\n    21\n    >>>\
    \ reverse_digits(12345L)\n    54321\n*/\nlong reverse_digits(long x) \n{\n   \
    \ return to!long(to!string(x).reverse);\nunittest\n{\n    alias candidate = circular_shift;\n\
    \n    assert(candidate(100L, 2L) == \"001\");\n    assert(candidate(12L, 2L) ==\
    \ \"12\");\n    assert(candidate(97L, 8L) == \"79\");\n    assert(candidate(12L,\
    \ 1L) == \"21\");\n    assert(candidate(11L, 101L) == \"11\");\n}\nvoid main(){}"
  status: SyntaxError
  stderr: '/tmp/tmp1bn_2zqi.d(84): Error: found `unittest` instead of statement

    Failed: ["dmd", "-unittest", "-v", "-o-", "/tmp/tmp1bn_2zqi.d", "-I/tmp"]

    '
  stdout: ''
  timestamp: 1660164227
- exit_code: 1
  program: "import std.typecons;\nimport std.math;\n/*\nCircular shift the digits\
    \ of the integer x, shift the digits right by shift\n    and return the result\
    \ as a string.\n    If shift > number of digits, return digits reversed.\n   \
    \ >>> circular_shift(12L, 1L)\n    \"21\"\n    >>> circular_shift(12L, 2L)\n \
    \   \"12\"\n    \n*/\nstring circular_shift(long x, long shift) \n{\n    string\
    \ s = to!string(x);\n    long n = s.length;\n    if (shift > n)\n    {\n     \
    \   return s[$-1..$];\n    }\n    return s[shift..$] ~ s[0..shift-1];\n}\nunittest\n\
    {\n    alias candidate = circular_shift;\n\n    assert(candidate(100L, 2L) ==\
    \ \"001\");\n    assert(candidate(12L, 2L) == \"12\");\n    assert(candidate(97L,\
    \ 8L) == \"79\");\n    assert(candidate(12L, 1L) == \"21\");\n    assert(candidate(11L,\
    \ 101L) == \"11\");\n}\nvoid main(){}"
  status: SyntaxError
  stderr: '/tmp/tmpfc68dyrr.d(15): Error: template instance `to!string` template `to`
    is not defined, did you mean No?

    Failed: ["dmd", "-unittest", "-v", "-o-", "/tmp/tmpfc68dyrr.d", "-I/tmp"]

    '
  stdout: ''
  timestamp: 1660164227
- exit_code: 1
  program: "import std.typecons;\nimport std.math;\n/*\nCircular shift the digits\
    \ of the integer x, shift the digits right by shift\n    and return the result\
    \ as a string.\n    If shift > number of digits, return digits reversed.\n   \
    \ >>> circular_shift(12L, 1L)\n    \"21\"\n    >>> circular_shift(12L, 2L)\n \
    \   \"12\"\n    \n*/\nstring circular_shift(long x, long shift) \n{\n    string\
    \ s = to!string(x);\n    long n = s.length;\n    if (shift > n)\n    {\n     \
    \   return s[$-1..$];\n    }\n    return s[shift..$] ~ s[0..shift-1];\n}\nunittest\n\
    {\n    alias candidate = circular_shift;\n\n    assert(candidate(100L, 2L) ==\
    \ \"001\");\n    assert(candidate(12L, 2L) == \"12\");\n    assert(candidate(97L,\
    \ 8L) == \"79\");\n    assert(candidate(12L, 1L) == \"21\");\n    assert(candidate(11L,\
    \ 101L) == \"11\");\n}\nvoid main(){}"
  status: SyntaxError
  stderr: '/tmp/tmpfc68dyrr.d(15): Error: template instance `to!string` template `to`
    is not defined, did you mean No?

    Failed: ["dmd", "-unittest", "-v", "-o-", "/tmp/tmpfc68dyrr.d", "-I/tmp"]

    '
  stdout: ''
  timestamp: 1660164227
- exit_code: 1
  program: "import std.typecons;\nimport std.math;\n/*\nCircular shift the digits\
    \ of the integer x, shift the digits right by shift\n    and return the result\
    \ as a string.\n    If shift > number of digits, return digits reversed.\n   \
    \ >>> circular_shift(12L, 1L)\n    \"21\"\n    >>> circular_shift(12L, 2L)\n \
    \   \"12\"\n    \n*/\nstring circular_shift(long x, long shift) \n{\n    string\
    \ s = to!string(x);\n    if (shift > s.length)\n        return s[$-1..0];\n  \
    \  return s[shift..$] ~ s[0..shift-1];\n}\nunittest\n{\n    alias candidate =\
    \ circular_shift;\n\n    assert(candidate(100L, 2L) == \"001\");\n    assert(candidate(12L,\
    \ 2L) == \"12\");\n    assert(candidate(97L, 8L) == \"79\");\n    assert(candidate(12L,\
    \ 1L) == \"21\");\n    assert(candidate(11L, 101L) == \"11\");\n}\nvoid main(){}"
  status: SyntaxError
  stderr: '/tmp/tmpmvt9mcrz.d(15): Error: template instance `to!string` template `to`
    is not defined, did you mean No?

    Failed: ["dmd", "-unittest", "-v", "-o-", "/tmp/tmpmvt9mcrz.d", "-I/tmp"]

    '
  stdout: ''
  timestamp: 1660164227
- exit_code: 1
  program: "import std.typecons;\nimport std.math;\n/*\nCircular shift the digits\
    \ of the integer x, shift the digits right by shift\n    and return the result\
    \ as a string.\n    If shift > number of digits, return digits reversed.\n   \
    \ >>> circular_shift(12L, 1L)\n    \"21\"\n    >>> circular_shift(12L, 2L)\n \
    \   \"12\"\n    \n*/\nstring circular_shift(long x, long shift) \n{\n    string\
    \ s = to!string(x);\n    if (shift > s.length)\n        return s[$-1..$].dup.reverse;\n\
    \    return s[shift..$] ~ s[0..shift-1];\n}\nunittest\n{\n    alias candidate\
    \ = circular_shift;\n\n    assert(candidate(100L, 2L) == \"001\");\n    assert(candidate(12L,\
    \ 2L) == \"12\");\n    assert(candidate(97L, 8L) == \"79\");\n    assert(candidate(12L,\
    \ 1L) == \"21\");\n    assert(candidate(11L, 101L) == \"11\");\n}\nvoid main(){}"
  status: SyntaxError
  stderr: '/tmp/tmpcjm4ghnv.d(15): Error: template instance `to!string` template `to`
    is not defined, did you mean No?

    /tmp/tmpcjm4ghnv.d(17): Error: template `std.typecons.reverse` cannot deduce function
    from argument types `!()(char[])`, candidates are:

    /home/a.guha/repos/spack/opt/spack/linux-centos7-haswell/gcc-9.2.0/dmd-2.081.1-jzbhflp3vff4u2dqrltybjq3in2pa22f/linux/bin64/../../src/phobos/std/typecons.d(1486):        `std.typecons.reverse(T)(T
    t) if (isTuple!T)`

    Failed: ["dmd", "-unittest", "-v", "-o-", "/tmp/tmpcjm4ghnv.d", "-I/tmp"]

    '
  stdout: ''
  timestamp: 1660164227
- exit_code: 1
  program: "import std.typecons;\nimport std.math;\n/*\nCircular shift the digits\
    \ of the integer x, shift the digits right by shift\n    and return the result\
    \ as a string.\n    If shift > number of digits, return digits reversed.\n   \
    \ >>> circular_shift(12L, 1L)\n    \"21\"\n    >>> circular_shift(12L, 2L)\n \
    \   \"12\"\n    \n*/\nstring circular_shift(long x, long shift) \n{\n    string\
    \ s = to!string(x);\n    if (shift > s.length)\n        return s[$-1..$].dup.reverse;\n\
    \    return s[shift..$] ~ s[0..shift-1];\n}\nunittest\n{\n    alias candidate\
    \ = circular_shift;\n\n    assert(candidate(100L, 2L) == \"001\");\n    assert(candidate(12L,\
    \ 2L) == \"12\");\n    assert(candidate(97L, 8L) == \"79\");\n    assert(candidate(12L,\
    \ 1L) == \"21\");\n    assert(candidate(11L, 101L) == \"11\");\n}\nvoid main(){}"
  status: SyntaxError
  stderr: '/tmp/tmpcjm4ghnv.d(15): Error: template instance `to!string` template `to`
    is not defined, did you mean No?

    /tmp/tmpcjm4ghnv.d(17): Error: template `std.typecons.reverse` cannot deduce function
    from argument types `!()(char[])`, candidates are:

    /home/a.guha/repos/spack/opt/spack/linux-centos7-haswell/gcc-9.2.0/dmd-2.081.1-jzbhflp3vff4u2dqrltybjq3in2pa22f/linux/bin64/../../src/phobos/std/typecons.d(1486):        `std.typecons.reverse(T)(T
    t) if (isTuple!T)`

    Failed: ["dmd", "-unittest", "-v", "-o-", "/tmp/tmpcjm4ghnv.d", "-I/tmp"]

    '
  stdout: ''
  timestamp: 1660164227
- exit_code: 1
  program: "import std.typecons;\nimport std.math;\n/*\nCircular shift the digits\
    \ of the integer x, shift the digits right by shift\n    and return the result\
    \ as a string.\n    If shift > number of digits, return digits reversed.\n   \
    \ >>> circular_shift(12L, 1L)\n    \"21\"\n    >>> circular_shift(12L, 2L)\n \
    \   \"12\"\n    \n*/\nstring circular_shift(long x, long shift) \n{\n    string\
    \ s = to!string(x);\n    if (shift > s.length)\n        return s[$-1 .. $];\n\
    \    return s[shift .. $] ~ s[0 .. shift - 1];\n}\nunittest\n{\n    alias candidate\
    \ = circular_shift;\n\n    assert(candidate(100L, 2L) == \"001\");\n    assert(candidate(12L,\
    \ 2L) == \"12\");\n    assert(candidate(97L, 8L) == \"79\");\n    assert(candidate(12L,\
    \ 1L) == \"21\");\n    assert(candidate(11L, 101L) == \"11\");\n}\nvoid main(){}"
  status: SyntaxError
  stderr: '/tmp/tmp7w7dnqsb.d(15): Error: template instance `to!string` template `to`
    is not defined, did you mean No?

    Failed: ["dmd", "-unittest", "-v", "-o-", "/tmp/tmp7w7dnqsb.d", "-I/tmp"]

    '
  stdout: ''
  timestamp: 1660164227
- exit_code: 1
  program: "import std.typecons;\nimport std.math;\n/*\nCircular shift the digits\
    \ of the integer x, shift the digits right by shift\n    and return the result\
    \ as a string.\n    If shift > number of digits, return digits reversed.\n   \
    \ >>> circular_shift(12L, 1L)\n    \"21\"\n    >>> circular_shift(12L, 2L)\n \
    \   \"12\"\n    \n*/\nstring circular_shift(long x, long shift) \n{\n    string\
    \ s = to!string(x);\n    if (shift > s.length) \n    {\n        return s[$-1..$];\n\
    \    }\n    return s[shift..$] ~ s[0..shift-1];\n}\nunittest\n{\n    alias candidate\
    \ = circular_shift;\n\n    assert(candidate(100L, 2L) == \"001\");\n    assert(candidate(12L,\
    \ 2L) == \"12\");\n    assert(candidate(97L, 8L) == \"79\");\n    assert(candidate(12L,\
    \ 1L) == \"21\");\n    assert(candidate(11L, 101L) == \"11\");\n}\nvoid main(){}"
  status: SyntaxError
  stderr: '/tmp/tmp3p48h2rb.d(15): Error: template instance `to!string` template `to`
    is not defined, did you mean No?

    Failed: ["dmd", "-unittest", "-v", "-o-", "/tmp/tmp3p48h2rb.d", "-I/tmp"]

    '
  stdout: ''
  timestamp: 1660164227
- exit_code: 1
  program: "import std.typecons;\nimport std.math;\n/*\nCircular shift the digits\
    \ of the integer x, shift the digits right by shift\n    and return the result\
    \ as a string.\n    If shift > number of digits, return digits reversed.\n   \
    \ >>> circular_shift(12L, 1L)\n    \"21\"\n    >>> circular_shift(12L, 2L)\n \
    \   \"12\"\n    \n*/\nstring circular_shift(long x, long shift) \n{\n    string\
    \ s = to!string(x);\n    if (shift > s.length)\n        return s[$-1 .. $].reverse();\n\
    \    return s[shift .. $] ~ s[0 .. shift - 1];\n}\nunittest\n{\n    alias candidate\
    \ = circular_shift;\n\n    assert(candidate(100L, 2L) == \"001\");\n    assert(candidate(12L,\
    \ 2L) == \"12\");\n    assert(candidate(97L, 8L) == \"79\");\n    assert(candidate(12L,\
    \ 1L) == \"21\");\n    assert(candidate(11L, 101L) == \"11\");\n}\nvoid main(){}"
  status: SyntaxError
  stderr: '/tmp/tmp13ujek_2.d(15): Error: template instance `to!string` template `to`
    is not defined, did you mean No?

    /tmp/tmp13ujek_2.d(17): Error: template `std.typecons.reverse` cannot deduce function
    from argument types `!()(string)`, candidates are:

    /home/a.guha/repos/spack/opt/spack/linux-centos7-haswell/gcc-9.2.0/dmd-2.081.1-jzbhflp3vff4u2dqrltybjq3in2pa22f/linux/bin64/../../src/phobos/std/typecons.d(1486):        `std.typecons.reverse(T)(T
    t) if (isTuple!T)`

    Failed: ["dmd", "-unittest", "-v", "-o-", "/tmp/tmp13ujek_2.d", "-I/tmp"]

    '
  stdout: ''
  timestamp: 1660164227
- exit_code: 1
  program: "import std.typecons;\nimport std.math;\n/*\nCircular shift the digits\
    \ of the integer x, shift the digits right by shift\n    and return the result\
    \ as a string.\n    If shift > number of digits, return digits reversed.\n   \
    \ >>> circular_shift(12L, 1L)\n    \"21\"\n    >>> circular_shift(12L, 2L)\n \
    \   \"12\"\n    \n*/\nstring circular_shift(long x, long shift) \n{\n    string\
    \ s = to!string(x);\n    if (shift > s.length)\n        return s[$-1..$];\n  \
    \  return s[shift..$] ~ s[0..shift-1];\n}\nunittest\n{\n    alias candidate =\
    \ circular_shift;\n\n    assert(candidate(100L, 2L) == \"001\");\n    assert(candidate(12L,\
    \ 2L) == \"12\");\n    assert(candidate(97L, 8L) == \"79\");\n    assert(candidate(12L,\
    \ 1L) == \"21\");\n    assert(candidate(11L, 101L) == \"11\");\n}\nvoid main(){}"
  status: SyntaxError
  stderr: '/tmp/tmpul0fy_n4.d(15): Error: template instance `to!string` template `to`
    is not defined, did you mean No?

    Failed: ["dmd", "-unittest", "-v", "-o-", "/tmp/tmpul0fy_n4.d", "-I/tmp"]

    '
  stdout: ''
  timestamp: 1660164227
- exit_code: 1
  program: "import std.typecons;\nimport std.math;\n/*\nCircular shift the digits\
    \ of the integer x, shift the digits right by shift\n    and return the result\
    \ as a string.\n    If shift > number of digits, return digits reversed.\n   \
    \ >>> circular_shift(12L, 1L)\n    \"21\"\n    >>> circular_shift(12L, 2L)\n \
    \   \"12\"\n    \n*/\nstring circular_shift(long x, long shift) \n{\n    string\
    \ result = to!string(x);\n    shift %= result.length;\n    if (shift == 0) return\
    \ result;\n    return result[shift..$] ~ result[0..shift-1];\n}\n/*\n    Given\
    \ a list of integers, return a list of the integers, omitting any that\n    are\
    \ less than 0.\n    >>> positive_integers_only([1, -1, -2, 3, 4, -5])\n    [1,\
    \ 3, 4]\n*/\nunittest\n{\n    alias candidate = circular_shift;\n\n    assert(candidate(100L,\
    \ 2L) == \"001\");\n    assert(candidate(12L, 2L) == \"12\");\n    assert(candidate(97L,\
    \ 8L) == \"79\");\n    assert(candidate(12L, 1L) == \"21\");\n    assert(candidate(11L,\
    \ 101L) == \"11\");\n}\nvoid main(){}"
  status: SyntaxError
  stderr: '/tmp/tmpdi1avfxa.d(15): Error: template instance `to!string` template `to`
    is not defined, did you mean No?

    Failed: ["dmd", "-unittest", "-v", "-o-", "/tmp/tmpdi1avfxa.d", "-I/tmp"]

    '
  stdout: ''
  timestamp: 1660164227
- exit_code: 1
  program: "import std.typecons;\nimport std.math;\n/*\nCircular shift the digits\
    \ of the integer x, shift the digits right by shift\n    and return the result\
    \ as a string.\n    If shift > number of digits, return digits reversed.\n   \
    \ >>> circular_shift(12L, 1L)\n    \"21\"\n    >>> circular_shift(12L, 2L)\n \
    \   \"12\"\n    \n*/\nstring circular_shift(long x, long shift) \n{\n    string\
    \ s = to!string(x);\n    if (shift > s.length)\n        return s[$-1 .. $].reverse;\n\
    \    else\n        return s[shift .. $] ~ s[0 .. shift - 1];\n}\nunittest\n{\n\
    \    alias candidate = circular_shift;\n\n    assert(candidate(100L, 2L) == \"\
    001\");\n    assert(candidate(12L, 2L) == \"12\");\n    assert(candidate(97L,\
    \ 8L) == \"79\");\n    assert(candidate(12L, 1L) == \"21\");\n    assert(candidate(11L,\
    \ 101L) == \"11\");\n}\nvoid main(){}"
  status: SyntaxError
  stderr: '/tmp/tmpu7ya1hzd.d(15): Error: template instance `to!string` template `to`
    is not defined, did you mean No?

    /tmp/tmpu7ya1hzd.d(17): Error: template `std.typecons.reverse` cannot deduce function
    from argument types `!()(string)`, candidates are:

    /home/a.guha/repos/spack/opt/spack/linux-centos7-haswell/gcc-9.2.0/dmd-2.081.1-jzbhflp3vff4u2dqrltybjq3in2pa22f/linux/bin64/../../src/phobos/std/typecons.d(1486):        `std.typecons.reverse(T)(T
    t) if (isTuple!T)`

    Failed: ["dmd", "-unittest", "-v", "-o-", "/tmp/tmpu7ya1hzd.d", "-I/tmp"]

    '
  stdout: ''
  timestamp: 1660164227
- exit_code: 1
  program: "import std.typecons;\nimport std.math;\n/*\nCircular shift the digits\
    \ of the integer x, shift the digits right by shift\n    and return the result\
    \ as a string.\n    If shift > number of digits, return digits reversed.\n   \
    \ >>> circular_shift(12L, 1L)\n    \"21\"\n    >>> circular_shift(12L, 2L)\n \
    \   \"12\"\n    \n*/\nstring circular_shift(long x, long shift) \n{\n    string\
    \ s = to!string(x);\n    if (shift > s.length)\n        return s[$-1..0];\n  \
    \  return s[shift..$] ~ s[0..shift-1];\n}\nunittest\n{\n    alias candidate =\
    \ circular_shift;\n\n    assert(candidate(100L, 2L) == \"001\");\n    assert(candidate(12L,\
    \ 2L) == \"12\");\n    assert(candidate(97L, 8L) == \"79\");\n    assert(candidate(12L,\
    \ 1L) == \"21\");\n    assert(candidate(11L, 101L) == \"11\");\n}\nvoid main(){}"
  status: SyntaxError
  stderr: '/tmp/tmpmvt9mcrz.d(15): Error: template instance `to!string` template `to`
    is not defined, did you mean No?

    Failed: ["dmd", "-unittest", "-v", "-o-", "/tmp/tmpmvt9mcrz.d", "-I/tmp"]

    '
  stdout: ''
  timestamp: 1660164227
- exit_code: 1
  program: "import std.typecons;\nimport std.math;\n/*\nCircular shift the digits\
    \ of the integer x, shift the digits right by shift\n    and return the result\
    \ as a string.\n    If shift > number of digits, return digits reversed.\n   \
    \ >>> circular_shift(12L, 1L)\n    \"21\"\n    >>> circular_shift(12L, 2L)\n \
    \   \"12\"\n    \n*/\nstring circular_shift(long x, long shift) \n{\n    string\
    \ s = to!string(x);\n    shift %= s.length;\n    return s[shift..$] ~ s[0..shift];\n\
    }\nunittest\n{\n    alias candidate = circular_shift;\n\n    assert(candidate(100L,\
    \ 2L) == \"001\");\n    assert(candidate(12L, 2L) == \"12\");\n    assert(candidate(97L,\
    \ 8L) == \"79\");\n    assert(candidate(12L, 1L) == \"21\");\n    assert(candidate(11L,\
    \ 101L) == \"11\");\n}\nvoid main(){}"
  status: SyntaxError
  stderr: '/tmp/tmpyl6g8zts.d(15): Error: template instance `to!string` template `to`
    is not defined, did you mean No?

    Failed: ["dmd", "-unittest", "-v", "-o-", "/tmp/tmpyl6g8zts.d", "-I/tmp"]

    '
  stdout: ''
  timestamp: 1660164227
- exit_code: 1
  program: "import std.typecons;\nimport std.math;\n/*\nCircular shift the digits\
    \ of the integer x, shift the digits right by shift\n    and return the result\
    \ as a string.\n    If shift > number of digits, return digits reversed.\n   \
    \ >>> circular_shift(12L, 1L)\n    \"21\"\n    >>> circular_shift(12L, 2L)\n \
    \   \"12\"\n    \n*/\nstring circular_shift(long x, long shift) \n{\n    string\
    \ s = to!string(x);\n    long n = s.length;\n    if (shift > n)\n    {\n     \
    \   return s[$-1..$];\n    }\n    return s[shift..$-1] ~ s[0..shift-1];\n}\nunittest\n\
    {\n    alias candidate = circular_shift;\n\n    assert(candidate(100L, 2L) ==\
    \ \"001\");\n    assert(candidate(12L, 2L) == \"12\");\n    assert(candidate(97L,\
    \ 8L) == \"79\");\n    assert(candidate(12L, 1L) == \"21\");\n    assert(candidate(11L,\
    \ 101L) == \"11\");\n}\nvoid main(){}"
  status: SyntaxError
  stderr: '/tmp/tmp794ya53i.d(15): Error: template instance `to!string` template `to`
    is not defined, did you mean No?

    Failed: ["dmd", "-unittest", "-v", "-o-", "/tmp/tmp794ya53i.d", "-I/tmp"]

    '
  stdout: ''
  timestamp: 1660164227
- exit_code: 1
  program: "import std.typecons;\nimport std.math;\n/*\nCircular shift the digits\
    \ of the integer x, shift the digits right by shift\n    and return the result\
    \ as a string.\n    If shift > number of digits, return digits reversed.\n   \
    \ >>> circular_shift(12L, 1L)\n    \"21\"\n    >>> circular_shift(12L, 2L)\n \
    \   \"12\"\n    \n*/\nstring circular_shift(long x, long shift) \n{\n    string\
    \ s = to!string(x);\n    if (shift > s.length)\n        return s[$-shift..$];\n\
    \    return s[shift..$] ~ s[0..shift-1];\n}\nunittest\n{\n    alias candidate\
    \ = circular_shift;\n\n    assert(candidate(100L, 2L) == \"001\");\n    assert(candidate(12L,\
    \ 2L) == \"12\");\n    assert(candidate(97L, 8L) == \"79\");\n    assert(candidate(12L,\
    \ 1L) == \"21\");\n    assert(candidate(11L, 101L) == \"11\");\n}\nvoid main(){}"
  status: SyntaxError
  stderr: '/tmp/tmp1wq1mhqv.d(15): Error: template instance `to!string` template `to`
    is not defined, did you mean No?

    Failed: ["dmd", "-unittest", "-v", "-o-", "/tmp/tmp1wq1mhqv.d", "-I/tmp"]

    '
  stdout: ''
  timestamp: 1660164227
- exit_code: 1
  program: "import std.typecons;\nimport std.math;\n/*\nCircular shift the digits\
    \ of the integer x, shift the digits right by shift\n    and return the result\
    \ as a string.\n    If shift > number of digits, return digits reversed.\n   \
    \ >>> circular_shift(12L, 1L)\n    \"21\"\n    >>> circular_shift(12L, 2L)\n \
    \   \"12\"\n    \n*/\nstring circular_shift(long x, long shift) \n{\n    string\
    \ s = to!string(x);\n    shift %= s.length;\n    return s[shift..$] ~ s[0..shift];\n\
    }\n/*\n    Return the number of digits in the integer x.\n    >>> num_digits(0L)\n\
    \    1\n    >>> num_digits(123L)\n    3\n*/\nlong num_digits(long x) \n{\n   \
    \ return to!string(x).length;\n}\n/*\n    Return the number of digits in the integer\
    \ x.\n    >>> num_digits(0L)\n    1\n    >>> num_digits(123L)\n    3\n*/\nlong\
    \ num_digits(long x) \n{\n    return to!string(x).length;\n}\n/*\n    Return the\
    \ number of digits in the integer x.\n    >>> num_digits(0L)\n    1\n    >>> num_digits(123L)\n\
    \    3\n*/\nlong num_digits(long x) \n{\n    return to!string(x).length;\n}\n\
    /*\n    Return the number of digits in the integer x.\n    >>> num_digits(0L)\n\
    \    1\n    >>> num_digits(123L)\n    3\n*/\nlong num_digits(long x) \n{\n   \
    \ return to!string(x).length;\n}\n/*\n    Return the number of digits in the integer\
    \ x.\n    >>> num_digits(0L)\n    1\n    >>> num_digits(123L)\n    3\n*/\nlong\
    \ num_digits(long x) \n{\n    return to!string(x).length;\n}\n/*\n    Return the\
    \ number of digits in the integer x.\n    >>> num_digits(0L)\n    1\n    >>> num_digits(123L)\n\
    \    3\n*/\nlong num_digits(long x) \n{\n    return to!string(x).length;\n}\n\
    /*\n    Return the number of digits in the integer x.\n    >>> num_digits(0L)\n\
    \    1\n    >>> num_digits(123L)\n    3\n*/\nlong num_digits(long\nunittest\n\
    {\n    alias candidate = circular_shift;\n\n    assert(candidate(100L, 2L) ==\
    \ \"001\");\n    assert(candidate(12L, 2L) == \"12\");\n    assert(candidate(97L,\
    \ 8L) == \"79\");\n    assert(candidate(12L, 1L) == \"21\");\n    assert(candidate(11L,\
    \ 101L) == \"11\");\n}\nvoid main(){}"
  status: SyntaxError
  stderr: '/tmp/tmpovdc226_.d(93): Error: found `unittest` when expecting `)`

    Failed: ["dmd", "-unittest", "-v", "-o-", "/tmp/tmpovdc226_.d", "-I/tmp"]

    '
  stdout: ''
  timestamp: 1660164227
- exit_code: 1
  program: "import std.typecons;\nimport std.math;\n/*\nCircular shift the digits\
    \ of the integer x, shift the digits right by shift\n    and return the result\
    \ as a string.\n    If shift > number of digits, return digits reversed.\n   \
    \ >>> circular_shift(12L, 1L)\n    \"21\"\n    >>> circular_shift(12L, 2L)\n \
    \   \"12\"\n    \n*/\nstring circular_shift(long x, long shift) \n{\n    string\
    \ s = to!string(x);\n    long len = s.length;\n    if (shift > len)\n    {\n \
    \       return s[$-1..$];\n    }\n    else\n    {\n        return s[shift..$]\
    \ ~ s[0..shift-1];\n    }\n}\nunittest\n{\n    alias candidate = circular_shift;\n\
    \n    assert(candidate(100L, 2L) == \"001\");\n    assert(candidate(12L, 2L) ==\
    \ \"12\");\n    assert(candidate(97L, 8L) == \"79\");\n    assert(candidate(12L,\
    \ 1L) == \"21\");\n    assert(candidate(11L, 101L) == \"11\");\n}\nvoid main(){}"
  status: SyntaxError
  stderr: '/tmp/tmpdzfr7egv.d(15): Error: template instance `to!string` template `to`
    is not defined, did you mean No?

    Failed: ["dmd", "-unittest", "-v", "-o-", "/tmp/tmpdzfr7egv.d", "-I/tmp"]

    '
  stdout: ''
  timestamp: 1660164227
- exit_code: 1
  program: "import std.typecons;\nimport std.math;\n/*\nCircular shift the digits\
    \ of the integer x, shift the digits right by shift\n    and return the result\
    \ as a string.\n    If shift > number of digits, return digits reversed.\n   \
    \ >>> circular_shift(12L, 1L)\n    \"21\"\n    >>> circular_shift(12L, 2L)\n \
    \   \"12\"\n    \n*/\nstring circular_shift(long x, long shift) \n{\n    string\
    \ s = to!string(x);\n    if (shift > s.length)\n        return s[$-1..0];\n  \
    \  return s[shift..$] ~ s[0..shift-1];\n}\nunittest\n{\n    alias candidate =\
    \ circular_shift;\n\n    assert(candidate(100L, 2L) == \"001\");\n    assert(candidate(12L,\
    \ 2L) == \"12\");\n    assert(candidate(97L, 8L) == \"79\");\n    assert(candidate(12L,\
    \ 1L) == \"21\");\n    assert(candidate(11L, 101L) == \"11\");\n}\nvoid main(){}"
  status: SyntaxError
  stderr: '/tmp/tmpmvt9mcrz.d(15): Error: template instance `to!string` template `to`
    is not defined, did you mean No?

    Failed: ["dmd", "-unittest", "-v", "-o-", "/tmp/tmpmvt9mcrz.d", "-I/tmp"]

    '
  stdout: ''
  timestamp: 1660164227
- exit_code: 1
  program: "import std.typecons;\nimport std.math;\n/*\nCircular shift the digits\
    \ of the integer x, shift the digits right by shift\n    and return the result\
    \ as a string.\n    If shift > number of digits, return digits reversed.\n   \
    \ >>> circular_shift(12L, 1L)\n    \"21\"\n    >>> circular_shift(12L, 2L)\n \
    \   \"12\"\n    \n*/\nstring circular_shift(long x, long shift) \n{\n    string\
    \ s = to!string(x);\n    if (shift > s.length)\n        return s[$-1..$].dup.reverse;\n\
    \    return s[shift..$] ~ s[0..shift-1];\n}\nunittest\n{\n    alias candidate\
    \ = circular_shift;\n\n    assert(candidate(100L, 2L) == \"001\");\n    assert(candidate(12L,\
    \ 2L) == \"12\");\n    assert(candidate(97L, 8L) == \"79\");\n    assert(candidate(12L,\
    \ 1L) == \"21\");\n    assert(candidate(11L, 101L) == \"11\");\n}\nvoid main(){}"
  status: SyntaxError
  stderr: '/tmp/tmpcjm4ghnv.d(15): Error: template instance `to!string` template `to`
    is not defined, did you mean No?

    /tmp/tmpcjm4ghnv.d(17): Error: template `std.typecons.reverse` cannot deduce function
    from argument types `!()(char[])`, candidates are:

    /home/a.guha/repos/spack/opt/spack/linux-centos7-haswell/gcc-9.2.0/dmd-2.081.1-jzbhflp3vff4u2dqrltybjq3in2pa22f/linux/bin64/../../src/phobos/std/typecons.d(1486):        `std.typecons.reverse(T)(T
    t) if (isTuple!T)`

    Failed: ["dmd", "-unittest", "-v", "-o-", "/tmp/tmpcjm4ghnv.d", "-I/tmp"]

    '
  stdout: ''
  timestamp: 1660164227
- exit_code: 1
  program: "import std.typecons;\nimport std.math;\n/*\nCircular shift the digits\
    \ of the integer x, shift the digits right by shift\n    and return the result\
    \ as a string.\n    If shift > number of digits, return digits reversed.\n   \
    \ >>> circular_shift(12L, 1L)\n    \"21\"\n    >>> circular_shift(12L, 2L)\n \
    \   \"12\"\n    \n*/\nstring circular_shift(long x, long shift) \n{\n    string\
    \ s = to!string(x);\n    if (shift > s.length)\n        return s[$-1 .. 0];\n\
    \    return s[shift .. $] ~ s[0 .. shift - 1];\n}\n/*\n    >>> circular_shift(12L,\
    \ 1L)\n    \"21\"\n    >>> circular_shift(12L, 2L)\n    \"12\"\n*/\nstring circular_shift(long\
    \ x, long shift) \n{\n    string s = to!string(x);\n    if (shift > s.length)\n\
    \        return s[$-1 .. 0];\n    return s[shift .. $] ~ s[0 .. shift - 1];\n\
    }\n/*\n    >>> circular_shift(12L, 1L)\n    \"21\"\n    >>> circular_shift(12L,\
    \ 2L)\n    \"12\"\n*/\nstring circular_shift(long x, long shift) \n{\n    string\
    \ s = to!string(x);\n    if (shift > s.length)\n        return s[$-1 .. 0];\n\
    \    return s[shift .. $] ~ s[0 .. shift - 1];\n}\n/*\n    >>> circular_shift(12L,\
    \ 1L)\n    \"21\"\n    >>> circular_shift(12L, 2L)\n    \"12\"\n*/\nstring circular_shift(long\
    \ x, long shift) \n{\n    string s = to!string(x);\n    if (shift > s.length)\n\
    \        return s[$-1 .. 0];\n    return s[shift .. $] ~ s[0 .. shift - 1];\n\
    }\n/*\n    >>> circular_shift(12L, 1L)\n    \"21\"\n    >>> circular_shift(12L,\
    \ 2L)\n    \"12\"\n*/\nstring circular_shift(long x, long shift) \n{\n    string\
    \ s = to!string(x);\n    if (shift > s.length)\n        return s[$-1 .. 0];\n\
    \    return s[shift .. $] ~ s[0 .. shift - 1];\n}\n/*\n    >>> circular_shift(12L,\
    \ 1L)\n    \"21\"\n    >>> circular_shift(12L,\nunittest\n{\n    alias candidate\
    \ = circular_shift;\n\n    assert(candidate(100L, 2L) == \"001\");\n    assert(candidate(12L,\
    \ 2L) == \"12\");\n    assert(candidate(97L, 8L) == \"79\");\n    assert(candidate(12L,\
    \ 1L) == \"21\");\n    assert(candidate(11L, 101L) == \"11\");\n}\nvoid main(){}"
  status: SyntaxError
  stderr: '/tmp/tmpthaj2wys.d(72): Error: unterminated /* */ comment

    Failed: ["dmd", "-unittest", "-v", "-o-", "/tmp/tmpthaj2wys.d", "-I/tmp"]

    '
  stdout: ''
  timestamp: 1660164227
- exit_code: 1
  program: "import std.typecons;\nimport std.math;\n/*\nCircular shift the digits\
    \ of the integer x, shift the digits right by shift\n    and return the result\
    \ as a string.\n    If shift > number of digits, return digits reversed.\n   \
    \ >>> circular_shift(12L, 1L)\n    \"21\"\n    >>> circular_shift(12L, 2L)\n \
    \   \"12\"\n    \n*/\nstring circular_shift(long x, long shift) \n{\n    string\
    \ s = to!string(x);\n    if (shift > s.length)\n        return s[$-shift..$];\n\
    \    return s[shift..$] ~ s[0..shift-1];\n}\nunittest\n{\n    alias candidate\
    \ = circular_shift;\n\n    assert(candidate(100L, 2L) == \"001\");\n    assert(candidate(12L,\
    \ 2L) == \"12\");\n    assert(candidate(97L, 8L) == \"79\");\n    assert(candidate(12L,\
    \ 1L) == \"21\");\n    assert(candidate(11L, 101L) == \"11\");\n}\nvoid main(){}"
  status: SyntaxError
  stderr: '/tmp/tmp1wq1mhqv.d(15): Error: template instance `to!string` template `to`
    is not defined, did you mean No?

    Failed: ["dmd", "-unittest", "-v", "-o-", "/tmp/tmp1wq1mhqv.d", "-I/tmp"]

    '
  stdout: ''
  timestamp: 1660164227
- exit_code: 1
  program: "import std.typecons;\nimport std.math;\n/*\nCircular shift the digits\
    \ of the integer x, shift the digits right by shift\n    and return the result\
    \ as a string.\n    If shift > number of digits, return digits reversed.\n   \
    \ >>> circular_shift(12L, 1L)\n    \"21\"\n    >>> circular_shift(12L, 2L)\n \
    \   \"12\"\n    \n*/\nstring circular_shift(long x, long shift) \n{\n    string\
    \ s = to!string(x);\n    if (shift > s.length)\n        return s[$-1..$];\n  \
    \  return s[shift..$] ~ s[0..shift-1];\n}\nunittest\n{\n    alias candidate =\
    \ circular_shift;\n\n    assert(candidate(100L, 2L) == \"001\");\n    assert(candidate(12L,\
    \ 2L) == \"12\");\n    assert(candidate(97L, 8L) == \"79\");\n    assert(candidate(12L,\
    \ 1L) == \"21\");\n    assert(candidate(11L, 101L) == \"11\");\n}\nvoid main(){}"
  status: SyntaxError
  stderr: '/tmp/tmpul0fy_n4.d(15): Error: template instance `to!string` template `to`
    is not defined, did you mean No?

    Failed: ["dmd", "-unittest", "-v", "-o-", "/tmp/tmpul0fy_n4.d", "-I/tmp"]

    '
  stdout: ''
  timestamp: 1660164227
- exit_code: 1
  program: "import std.typecons;\nimport std.math;\n/*\nCircular shift the digits\
    \ of the integer x, shift the digits right by shift\n    and return the result\
    \ as a string.\n    If shift > number of digits, return digits reversed.\n   \
    \ >>> circular_shift(12L, 1L)\n    \"21\"\n    >>> circular_shift(12L, 2L)\n \
    \   \"12\"\n    \n*/\nstring circular_shift(long x, long shift) \n{\n    string\
    \ s = to!string(x);\n    if (shift > s.length)\n        return s[$-1..$].reverse;\n\
    \    return s[shift..$] ~ s[0..shift-1];\n}\nunittest\n{\n    alias candidate\
    \ = circular_shift;\n\n    assert(candidate(100L, 2L) == \"001\");\n    assert(candidate(12L,\
    \ 2L) == \"12\");\n    assert(candidate(97L, 8L) == \"79\");\n    assert(candidate(12L,\
    \ 1L) == \"21\");\n    assert(candidate(11L, 101L) == \"11\");\n}\nvoid main(){}"
  status: SyntaxError
  stderr: '/tmp/tmpn599cip8.d(15): Error: template instance `to!string` template `to`
    is not defined, did you mean No?

    /tmp/tmpn599cip8.d(17): Error: template `std.typecons.reverse` cannot deduce function
    from argument types `!()(string)`, candidates are:

    /home/a.guha/repos/spack/opt/spack/linux-centos7-haswell/gcc-9.2.0/dmd-2.081.1-jzbhflp3vff4u2dqrltybjq3in2pa22f/linux/bin64/../../src/phobos/std/typecons.d(1486):        `std.typecons.reverse(T)(T
    t) if (isTuple!T)`

    Failed: ["dmd", "-unittest", "-v", "-o-", "/tmp/tmpn599cip8.d", "-I/tmp"]

    '
  stdout: ''
  timestamp: 1660164227
- exit_code: 1
  program: "import std.typecons;\nimport std.math;\n/*\nCircular shift the digits\
    \ of the integer x, shift the digits right by shift\n    and return the result\
    \ as a string.\n    If shift > number of digits, return digits reversed.\n   \
    \ >>> circular_shift(12L, 1L)\n    \"21\"\n    >>> circular_shift(12L, 2L)\n \
    \   \"12\"\n    \n*/\nstring circular_shift(long x, long shift) \n{\n    string\
    \ s = to!string(x);\n    shift %= s.length;\n    return s[shift..$] ~ s[0..shift];\n\
    }\nunittest\n{\n    alias candidate = circular_shift;\n\n    assert(candidate(100L,\
    \ 2L) == \"001\");\n    assert(candidate(12L, 2L) == \"12\");\n    assert(candidate(97L,\
    \ 8L) == \"79\");\n    assert(candidate(12L, 1L) == \"21\");\n    assert(candidate(11L,\
    \ 101L) == \"11\");\n}\nvoid main(){}"
  status: SyntaxError
  stderr: '/tmp/tmpyl6g8zts.d(15): Error: template instance `to!string` template `to`
    is not defined, did you mean No?

    Failed: ["dmd", "-unittest", "-v", "-o-", "/tmp/tmpyl6g8zts.d", "-I/tmp"]

    '
  stdout: ''
  timestamp: 1660164227
- exit_code: 1
  program: "import std.typecons;\nimport std.math;\n/*\nCircular shift the digits\
    \ of the integer x, shift the digits right by shift\n    and return the result\
    \ as a string.\n    If shift > number of digits, return digits reversed.\n   \
    \ >>> circular_shift(12L, 1L)\n    \"21\"\n    >>> circular_shift(12L, 2L)\n \
    \   \"12\"\n    \n*/\nstring circular_shift(long x, long shift) \n{\n    string\
    \ s = to!string(x);\n    if (shift > s.length)\n        return s[$-1..0];\n  \
    \  return s[shift..$] ~ s[0..shift-1];\n}\n/*\n    >>> circular_shift(12345L,\
    \ 1L)\n    \"23451\"\n    >>> circular_shift(12345L, 2L)\n    \"34512\"\n    >>>\
    \ circular_shift(12345L, 3L)\n    \"45123\"\n    >>> circular_shift(12345L, 4L)\n\
    \    \"51234\"\n    >>> circular_shift(12345L, 5L)\n    \"12345\"\n    >>> circular_shift(12345L,\
    \ 6L)\n    \"23451\"\n    >>> circular_shift(12345L, 7L)\n    \"34512\"\n    >>>\
    \ circular_shift(12345L, 8L)\n    \"45123\"\n    >>> circular_shift(12345L, 9L)\n\
    \    \"51234\"\n    >>> circular_shift(12345L, 10L)\n    \"12345\"\n*/\nunittest\n\
    {\n    alias candidate = circular_shift;\n\n    assert(candidate(100L, 2L) ==\
    \ \"001\");\n    assert(candidate(12L, 2L) == \"12\");\n    assert(candidate(97L,\
    \ 8L) == \"79\");\n    assert(candidate(12L, 1L) == \"21\");\n    assert(candidate(11L,\
    \ 101L) == \"11\");\n}\nvoid main(){}"
  status: SyntaxError
  stderr: '/tmp/tmpihqory7y.d(15): Error: template instance `to!string` template `to`
    is not defined, did you mean No?

    Failed: ["dmd", "-unittest", "-v", "-o-", "/tmp/tmpihqory7y.d", "-I/tmp"]

    '
  stdout: ''
  timestamp: 1660164227
- exit_code: 1
  program: "import std.typecons;\nimport std.math;\n/*\nCircular shift the digits\
    \ of the integer x, shift the digits right by shift\n    and return the result\
    \ as a string.\n    If shift > number of digits, return digits reversed.\n   \
    \ >>> circular_shift(12L, 1L)\n    \"21\"\n    >>> circular_shift(12L, 2L)\n \
    \   \"12\"\n    \n*/\nstring circular_shift(long x, long shift) \n{\n    string\
    \ s = to!string(x);\n    if (shift > s.length)\n        return s[$-1 .. $].reverse;\n\
    \    return s[shift .. $] ~ s[0 .. shift - 1];\n}\nunittest\n{\n    alias candidate\
    \ = circular_shift;\n\n    assert(candidate(100L, 2L) == \"001\");\n    assert(candidate(12L,\
    \ 2L) == \"12\");\n    assert(candidate(97L, 8L) == \"79\");\n    assert(candidate(12L,\
    \ 1L) == \"21\");\n    assert(candidate(11L, 101L) == \"11\");\n}\nvoid main(){}"
  status: SyntaxError
  stderr: '/tmp/tmpl_ugaudy.d(15): Error: template instance `to!string` template `to`
    is not defined, did you mean No?

    /tmp/tmpl_ugaudy.d(17): Error: template `std.typecons.reverse` cannot deduce function
    from argument types `!()(string)`, candidates are:

    /home/a.guha/repos/spack/opt/spack/linux-centos7-haswell/gcc-9.2.0/dmd-2.081.1-jzbhflp3vff4u2dqrltybjq3in2pa22f/linux/bin64/../../src/phobos/std/typecons.d(1486):        `std.typecons.reverse(T)(T
    t) if (isTuple!T)`

    Failed: ["dmd", "-unittest", "-v", "-o-", "/tmp/tmpl_ugaudy.d", "-I/tmp"]

    '
  stdout: ''
  timestamp: 1660164227
- exit_code: 1
  program: "import std.typecons;\nimport std.math;\n/*\nCircular shift the digits\
    \ of the integer x, shift the digits right by shift\n    and return the result\
    \ as a string.\n    If shift > number of digits, return digits reversed.\n   \
    \ >>> circular_shift(12L, 1L)\n    \"21\"\n    >>> circular_shift(12L, 2L)\n \
    \   \"12\"\n    \n*/\nstring circular_shift(long x, long shift) \n{\n    string\
    \ s = to!string(x);\n    if (shift > s.length)\n        return s[$-1..0];\n  \
    \  return s[shift..$] ~ s[0..shift-1];\n}\n/*\n    Given a list of integers, return\
    \ the list of circular shifts of each integer.\n    >>> circular_shifts([12L,\
    \ 56L])\n    [\"21\", \"65\"]\n*/\nstring[] circular_shifts(long[] xs) \n{\n \
    \   return xs.map!circular_shift;\n}\n/*\n    Given a list of integers, return\
    \ the list of circular shifts of each integer,\n    sorted in ascending order.\n\
    \    >>> circular_shifts_sorted([12L, 56L])\n    [\"12\", \"21\", \"56\", \"65\"\
    ]\n*/\nstring[] circular_shifts_sorted(long[] xs) \n{\n    return circular_shifts(xs).sort;\n\
    }\n/*\n    Given a list of integers, return the list of circular shifts of each\
    \ integer,\n    sorted in ascending order, with duplicates removed.\n    >>> circular_shifts_sorted_unique([12L,\
    \ 56L])\n    [\"12\", \"21\", \"56\", \"65\"]\n*/\nstring[] circular_shifts_sorted_unique(long[]\
    \ xs) \n{\n    return circular_shifts_sorted(xs).uniq;\n}\n/*\n    Given a list\
    \ of integers, return the list of circular shifts of each integer,\n    sorted\
    \ in ascending order, with duplicates removed, and converted back to integers.\n\
    \    >>> circular_shifts_sorted_unique_ints([12L, 56L])\n    [12, 21, 56, 65]\n\
    */\nlong[] circular_shifts_sorted_unique_ints(long[] xs) \n{\n    return circular_shifts_sorted_unique(xs).map!to!long;\n\
    }\n/*\n    Given a list of integers, return the list of circular shifts of each\
    \ integer,\n    sorted in ascending order, with duplicates removed, and converted\
    \ back to integers,\n    and the number of times each integer appears in the original\
    \ list.\n    >>> circular_shifts_sorted_unique_\nunittest\n{\n    alias candidate\
    \ = circular_shift;\n\n    assert(candidate(100L, 2L) == \"001\");\n    assert(candidate(12L,\
    \ 2L) == \"12\");\n    assert(candidate(97L, 8L) == \"79\");\n    assert(candidate(12L,\
    \ 1L) == \"21\");\n    assert(candidate(11L, 101L) == \"11\");\n}\nvoid main(){}"
  status: SyntaxError
  stderr: '/tmp/tmpsfv2b_st.d(57): Error: multiple ! arguments are not allowed

    /tmp/tmpsfv2b_st.d(59): Error: unterminated /* */ comment

    Failed: ["dmd", "-unittest", "-v", "-o-", "/tmp/tmpsfv2b_st.d", "-I/tmp"]

    '
  stdout: ''
  timestamp: 1660164227
- exit_code: 1
  program: "import std.typecons;\nimport std.math;\n/*\nCircular shift the digits\
    \ of the integer x, shift the digits right by shift\n    and return the result\
    \ as a string.\n    If shift > number of digits, return digits reversed.\n   \
    \ >>> circular_shift(12L, 1L)\n    \"21\"\n    >>> circular_shift(12L, 2L)\n \
    \   \"12\"\n    \n*/\nstring circular_shift(long x, long shift) \n{\n    string\
    \ s = to!string(x);\n    if (shift > s.length)\n        return s[$-1..0];\n  \
    \  return s[shift..$] ~ s[0..shift-1];\n}\nunittest\n{\n    alias candidate =\
    \ circular_shift;\n\n    assert(candidate(100L, 2L) == \"001\");\n    assert(candidate(12L,\
    \ 2L) == \"12\");\n    assert(candidate(97L, 8L) == \"79\");\n    assert(candidate(12L,\
    \ 1L) == \"21\");\n    assert(candidate(11L, 101L) == \"11\");\n}\nvoid main(){}"
  status: SyntaxError
  stderr: '/tmp/tmpmvt9mcrz.d(15): Error: template instance `to!string` template `to`
    is not defined, did you mean No?

    Failed: ["dmd", "-unittest", "-v", "-o-", "/tmp/tmpmvt9mcrz.d", "-I/tmp"]

    '
  stdout: ''
  timestamp: 1660164227
- exit_code: 1
  program: "import std.typecons;\nimport std.math;\n/*\nCircular shift the digits\
    \ of the integer x, shift the digits right by shift\n    and return the result\
    \ as a string.\n    If shift > number of digits, return digits reversed.\n   \
    \ >>> circular_shift(12L, 1L)\n    \"21\"\n    >>> circular_shift(12L, 2L)\n \
    \   \"12\"\n    \n*/\nstring circular_shift(long x, long shift) \n{\n    string\
    \ s = to!string(x);\n    if (shift > s.length)\n        return s[$-1..$].reverse;\n\
    \    return s[shift..$] ~ s[0..shift-1];\n}\nunittest\n{\n    alias candidate\
    \ = circular_shift;\n\n    assert(candidate(100L, 2L) == \"001\");\n    assert(candidate(12L,\
    \ 2L) == \"12\");\n    assert(candidate(97L, 8L) == \"79\");\n    assert(candidate(12L,\
    \ 1L) == \"21\");\n    assert(candidate(11L, 101L) == \"11\");\n}\nvoid main(){}"
  status: SyntaxError
  stderr: '/tmp/tmpn599cip8.d(15): Error: template instance `to!string` template `to`
    is not defined, did you mean No?

    /tmp/tmpn599cip8.d(17): Error: template `std.typecons.reverse` cannot deduce function
    from argument types `!()(string)`, candidates are:

    /home/a.guha/repos/spack/opt/spack/linux-centos7-haswell/gcc-9.2.0/dmd-2.081.1-jzbhflp3vff4u2dqrltybjq3in2pa22f/linux/bin64/../../src/phobos/std/typecons.d(1486):        `std.typecons.reverse(T)(T
    t) if (isTuple!T)`

    Failed: ["dmd", "-unittest", "-v", "-o-", "/tmp/tmpn599cip8.d", "-I/tmp"]

    '
  stdout: ''
  timestamp: 1660164227
- exit_code: 1
  program: "import std.typecons;\nimport std.math;\n/*\nCircular shift the digits\
    \ of the integer x, shift the digits right by shift\n    and return the result\
    \ as a string.\n    If shift > number of digits, return digits reversed.\n   \
    \ >>> circular_shift(12L, 1L)\n    \"21\"\n    >>> circular_shift(12L, 2L)\n \
    \   \"12\"\n    \n*/\nstring circular_shift(long x, long shift) \n{\n    string\
    \ s = to!string(x);\n    long n = s.length;\n    if (shift > n)\n    {\n     \
    \   return s[$-1..$];\n    }\n    else\n    {\n        return s[shift..$] ~ s[0..shift-1];\n\
    \    }\n}\nunittest\n{\n    alias candidate = circular_shift;\n\n    assert(candidate(100L,\
    \ 2L) == \"001\");\n    assert(candidate(12L, 2L) == \"12\");\n    assert(candidate(97L,\
    \ 8L) == \"79\");\n    assert(candidate(12L, 1L) == \"21\");\n    assert(candidate(11L,\
    \ 101L) == \"11\");\n}\nvoid main(){}"
  status: SyntaxError
  stderr: '/tmp/tmps8vkq3e1.d(15): Error: template instance `to!string` template `to`
    is not defined, did you mean No?

    Failed: ["dmd", "-unittest", "-v", "-o-", "/tmp/tmps8vkq3e1.d", "-I/tmp"]

    '
  stdout: ''
  timestamp: 1660164227
- exit_code: 1
  program: "import std.typecons;\nimport std.math;\n/*\nCircular shift the digits\
    \ of the integer x, shift the digits right by shift\n    and return the result\
    \ as a string.\n    If shift > number of digits, return digits reversed.\n   \
    \ >>> circular_shift(12L, 1L)\n    \"21\"\n    >>> circular_shift(12L, 2L)\n \
    \   \"12\"\n    \n*/\nstring circular_shift(long x, long shift) \n{\n    string\
    \ s = to!string(x);\n    long len = s.length;\n    if (shift > len)\n    {\n \
    \       return s[$-1 .. $];\n    }\n    return s[shift .. $] ~ s[0 .. shift-1];\n\
    }\nunittest\n{\n    alias candidate = circular_shift;\n\n    assert(candidate(100L,\
    \ 2L) == \"001\");\n    assert(candidate(12L, 2L) == \"12\");\n    assert(candidate(97L,\
    \ 8L) == \"79\");\n    assert(candidate(12L, 1L) == \"21\");\n    assert(candidate(11L,\
    \ 101L) == \"11\");\n}\nvoid main(){}"
  status: SyntaxError
  stderr: '/tmp/tmpn7jxj_52.d(15): Error: template instance `to!string` template `to`
    is not defined, did you mean No?

    Failed: ["dmd", "-unittest", "-v", "-o-", "/tmp/tmpn7jxj_52.d", "-I/tmp"]

    '
  stdout: ''
  timestamp: 1660164227
- exit_code: 1
  program: "import std.typecons;\nimport std.math;\n/*\nCircular shift the digits\
    \ of the integer x, shift the digits right by shift\n    and return the result\
    \ as a string.\n    If shift > number of digits, return digits reversed.\n   \
    \ >>> circular_shift(12L, 1L)\n    \"21\"\n    >>> circular_shift(12L, 2L)\n \
    \   \"12\"\n    \n*/\nstring circular_shift(long x, long shift) \n{\n    string\
    \ s = to!string(x);\n    if (shift > s.length)\n        return s[$-1..$].reverse;\n\
    \    return s[shift..$] ~ s[0..shift-1];\n}\nunittest\n{\n    alias candidate\
    \ = circular_shift;\n\n    assert(candidate(100L, 2L) == \"001\");\n    assert(candidate(12L,\
    \ 2L) == \"12\");\n    assert(candidate(97L, 8L) == \"79\");\n    assert(candidate(12L,\
    \ 1L) == \"21\");\n    assert(candidate(11L, 101L) == \"11\");\n}\nvoid main(){}"
  status: SyntaxError
  stderr: '/tmp/tmpn599cip8.d(15): Error: template instance `to!string` template `to`
    is not defined, did you mean No?

    /tmp/tmpn599cip8.d(17): Error: template `std.typecons.reverse` cannot deduce function
    from argument types `!()(string)`, candidates are:

    /home/a.guha/repos/spack/opt/spack/linux-centos7-haswell/gcc-9.2.0/dmd-2.081.1-jzbhflp3vff4u2dqrltybjq3in2pa22f/linux/bin64/../../src/phobos/std/typecons.d(1486):        `std.typecons.reverse(T)(T
    t) if (isTuple!T)`

    Failed: ["dmd", "-unittest", "-v", "-o-", "/tmp/tmpn599cip8.d", "-I/tmp"]

    '
  stdout: ''
  timestamp: 1660164227
- exit_code: 1
  program: "import std.typecons;\nimport std.math;\n/*\nCircular shift the digits\
    \ of the integer x, shift the digits right by shift\n    and return the result\
    \ as a string.\n    If shift > number of digits, return digits reversed.\n   \
    \ >>> circular_shift(12L, 1L)\n    \"21\"\n    >>> circular_shift(12L, 2L)\n \
    \   \"12\"\n    \n*/\nstring circular_shift(long x, long shift) \n{\n    string\
    \ s = to!string(x);\n    if (shift > s.length)\n        return s[$-1..0];\n  \
    \  return s[shift..$] ~ s[0..shift-1];\n}\nunittest\n{\n    alias candidate =\
    \ circular_shift;\n\n    assert(candidate(100L, 2L) == \"001\");\n    assert(candidate(12L,\
    \ 2L) == \"12\");\n    assert(candidate(97L, 8L) == \"79\");\n    assert(candidate(12L,\
    \ 1L) == \"21\");\n    assert(candidate(11L, 101L) == \"11\");\n}\nvoid main(){}"
  status: SyntaxError
  stderr: '/tmp/tmpmvt9mcrz.d(15): Error: template instance `to!string` template `to`
    is not defined, did you mean No?

    Failed: ["dmd", "-unittest", "-v", "-o-", "/tmp/tmpmvt9mcrz.d", "-I/tmp"]

    '
  stdout: ''
  timestamp: 1660164227
- exit_code: 1
  program: "import std.typecons;\nimport std.math;\n/*\nCircular shift the digits\
    \ of the integer x, shift the digits right by shift\n    and return the result\
    \ as a string.\n    If shift > number of digits, return digits reversed.\n   \
    \ >>> circular_shift(12L, 1L)\n    \"21\"\n    >>> circular_shift(12L, 2L)\n \
    \   \"12\"\n    \n*/\nstring circular_shift(long x, long shift) \n{\n    string\
    \ s = to!string(x);\n    if (shift > s.length)\n        return s[$-1..$].dup.reverse;\n\
    \    return s[shift..$] ~ s[0..shift-1];\n}\nunittest\n{\n    alias candidate\
    \ = circular_shift;\n\n    assert(candidate(100L, 2L) == \"001\");\n    assert(candidate(12L,\
    \ 2L) == \"12\");\n    assert(candidate(97L, 8L) == \"79\");\n    assert(candidate(12L,\
    \ 1L) == \"21\");\n    assert(candidate(11L, 101L) == \"11\");\n}\nvoid main(){}"
  status: SyntaxError
  stderr: '/tmp/tmpcjm4ghnv.d(15): Error: template instance `to!string` template `to`
    is not defined, did you mean No?

    /tmp/tmpcjm4ghnv.d(17): Error: template `std.typecons.reverse` cannot deduce function
    from argument types `!()(char[])`, candidates are:

    /home/a.guha/repos/spack/opt/spack/linux-centos7-haswell/gcc-9.2.0/dmd-2.081.1-jzbhflp3vff4u2dqrltybjq3in2pa22f/linux/bin64/../../src/phobos/std/typecons.d(1486):        `std.typecons.reverse(T)(T
    t) if (isTuple!T)`

    Failed: ["dmd", "-unittest", "-v", "-o-", "/tmp/tmpcjm4ghnv.d", "-I/tmp"]

    '
  stdout: ''
  timestamp: 1660164227
- exit_code: 1
  program: "import std.typecons;\nimport std.math;\n/*\nCircular shift the digits\
    \ of the integer x, shift the digits right by shift\n    and return the result\
    \ as a string.\n    If shift > number of digits, return digits reversed.\n   \
    \ >>> circular_shift(12L, 1L)\n    \"21\"\n    >>> circular_shift(12L, 2L)\n \
    \   \"12\"\n    \n*/\nstring circular_shift(long x, long shift) \n{\n    string\
    \ s = to!string(x);\n    shift %= s.length;\n    return s[shift..$] ~ s[0..shift];\n\
    }\nunittest\n{\n    alias candidate = circular_shift;\n\n    assert(candidate(100L,\
    \ 2L) == \"001\");\n    assert(candidate(12L, 2L) == \"12\");\n    assert(candidate(97L,\
    \ 8L) == \"79\");\n    assert(candidate(12L, 1L) == \"21\");\n    assert(candidate(11L,\
    \ 101L) == \"11\");\n}\nvoid main(){}"
  status: SyntaxError
  stderr: '/tmp/tmpyl6g8zts.d(15): Error: template instance `to!string` template `to`
    is not defined, did you mean No?

    Failed: ["dmd", "-unittest", "-v", "-o-", "/tmp/tmpyl6g8zts.d", "-I/tmp"]

    '
  stdout: ''
  timestamp: 1660164227
- exit_code: 1
  program: "import std.typecons;\nimport std.math;\n/*\nCircular shift the digits\
    \ of the integer x, shift the digits right by shift\n    and return the result\
    \ as a string.\n    If shift > number of digits, return digits reversed.\n   \
    \ >>> circular_shift(12L, 1L)\n    \"21\"\n    >>> circular_shift(12L, 2L)\n \
    \   \"12\"\n    \n*/\nstring circular_shift(long x, long shift) \n{\n    string\
    \ s = to!string(x);\n    shift %= s.length;\n    return s[shift..$] ~ s[0..shift];\n\
    }\nunittest\n{\n    alias candidate = circular_shift;\n\n    assert(candidate(100L,\
    \ 2L) == \"001\");\n    assert(candidate(12L, 2L) == \"12\");\n    assert(candidate(97L,\
    \ 8L) == \"79\");\n    assert(candidate(12L, 1L) == \"21\");\n    assert(candidate(11L,\
    \ 101L) == \"11\");\n}\nvoid main(){}"
  status: SyntaxError
  stderr: '/tmp/tmpyl6g8zts.d(15): Error: template instance `to!string` template `to`
    is not defined, did you mean No?

    Failed: ["dmd", "-unittest", "-v", "-o-", "/tmp/tmpyl6g8zts.d", "-I/tmp"]

    '
  stdout: ''
  timestamp: 1660164227
- exit_code: 1
  program: "import std.typecons;\nimport std.math;\n/*\nCircular shift the digits\
    \ of the integer x, shift the digits right by shift\n    and return the result\
    \ as a string.\n    If shift > number of digits, return digits reversed.\n   \
    \ >>> circular_shift(12L, 1L)\n    \"21\"\n    >>> circular_shift(12L, 2L)\n \
    \   \"12\"\n    \n*/\nstring circular_shift(long x, long shift) \n{\n    string\
    \ s = to!string(x);\n    if (shift > s.length)\n        return s[$-1..0];\n  \
    \  return s[shift..$] ~ s[0..shift-1];\n}\nunittest\n{\n    alias candidate =\
    \ circular_shift;\n\n    assert(candidate(100L, 2L) == \"001\");\n    assert(candidate(12L,\
    \ 2L) == \"12\");\n    assert(candidate(97L, 8L) == \"79\");\n    assert(candidate(12L,\
    \ 1L) == \"21\");\n    assert(candidate(11L, 101L) == \"11\");\n}\nvoid main(){}"
  status: SyntaxError
  stderr: '/tmp/tmpmvt9mcrz.d(15): Error: template instance `to!string` template `to`
    is not defined, did you mean No?

    Failed: ["dmd", "-unittest", "-v", "-o-", "/tmp/tmpmvt9mcrz.d", "-I/tmp"]

    '
  stdout: ''
  timestamp: 1660164227
- exit_code: 1
  program: "import std.typecons;\nimport std.math;\n/*\nCircular shift the digits\
    \ of the integer x, shift the digits right by shift\n    and return the result\
    \ as a string.\n    If shift > number of digits, return digits reversed.\n   \
    \ >>> circular_shift(12L, 1L)\n    \"21\"\n    >>> circular_shift(12L, 2L)\n \
    \   \"12\"\n    \n*/\nstring circular_shift(long x, long shift) \n{\n    string\
    \ s = to!string(x);\n    if (shift > s.length)\n        return s[$-1..0];\n  \
    \  return s[shift..$] ~ s[0..shift-1];\n}\n/*\n    >>> is_circular_prime(197L)\n\
    \    True\n    >>> is_circular_prime(197L, primes)\n    True\n    >>> is_circular_prime(197L,\
    \ [2, 3, 5, 7, 11, 13, 17, 19, 23, 29, 31, 37, 41, 43, 47, 53, 59, 61, 67, 71,\
    \ 73, 79, 83, 89, 97, 101, 103, 107, 109, 113, 127, 131, 137, 139, 149, 151, 157,\
    \ 163, 167, 173, 179, 181, 191, 193, 197, 199, 211, 223, 227, 229, 233, 239, 241,\
    \ 251, 257, 263, 269, 271, 277, 281, 283, 293, 307, 311, 313, 317, 331, 337, 347,\
    \ 349, 353, 359, 367, 373, 379, 383, 389, 397, 401, 409, 419, 421, 431, 433, 439,\
    \ 443, 449, 457, 461, 463, 467, 479, 487, 491, 499, 503, 509, 521, 523, 541, 547,\
    \ 557, 563, 569, 571, 577, 587, 593, 599, 601, 607, 613, 617, 619, 631, 641, 643,\
    \ 647, 653, 659, 661, 673, 677, 683, 691, 701, 709, 719, 727, 733, 739, 743, 751,\
    \ 757, 761, 769, 773, 787, 797, 809, 811, 821, 823, 827, 829, 839, 853, 857, 859,\
    \ 863, 877, 881, 883, 887, 907, 911, 919, 929, 937, 941, 947, 953, 967, 971, 977,\
    \ 9\nunittest\n{\n    alias candidate = circular_shift;\n\n    assert(candidate(100L,\
    \ 2L) == \"001\");\n    assert(candidate(12L, 2L) == \"12\");\n    assert(candidate(97L,\
    \ 8L) == \"79\");\n    assert(candidate(12L, 1L) == \"21\");\n    assert(candidate(11L,\
    \ 101L) == \"11\");\n}\nvoid main(){}"
  status: SyntaxError
  stderr: '/tmp/tmpt163hhib.d(20): Error: unterminated /* */ comment

    Failed: ["dmd", "-unittest", "-v", "-o-", "/tmp/tmpt163hhib.d", "-I/tmp"]

    '
  stdout: ''
  timestamp: 1660164227
- exit_code: 1
  program: "import std.typecons;\nimport std.math;\n/*\nCircular shift the digits\
    \ of the integer x, shift the digits right by shift\n    and return the result\
    \ as a string.\n    If shift > number of digits, return digits reversed.\n   \
    \ >>> circular_shift(12L, 1L)\n    \"21\"\n    >>> circular_shift(12L, 2L)\n \
    \   \"12\"\n    \n*/\nstring circular_shift(long x, long shift) \n{\n    string\
    \ s = to!string(x);\n    if (shift > s.length)\n        return s[$-1..$].dup.reverse;\n\
    \    return s[shift..$] ~ s[0..shift-1];\n}\nunittest\n{\n    alias candidate\
    \ = circular_shift;\n\n    assert(candidate(100L, 2L) == \"001\");\n    assert(candidate(12L,\
    \ 2L) == \"12\");\n    assert(candidate(97L, 8L) == \"79\");\n    assert(candidate(12L,\
    \ 1L) == \"21\");\n    assert(candidate(11L, 101L) == \"11\");\n}\nvoid main(){}"
  status: SyntaxError
  stderr: '/tmp/tmpcjm4ghnv.d(15): Error: template instance `to!string` template `to`
    is not defined, did you mean No?

    /tmp/tmpcjm4ghnv.d(17): Error: template `std.typecons.reverse` cannot deduce function
    from argument types `!()(char[])`, candidates are:

    /home/a.guha/repos/spack/opt/spack/linux-centos7-haswell/gcc-9.2.0/dmd-2.081.1-jzbhflp3vff4u2dqrltybjq3in2pa22f/linux/bin64/../../src/phobos/std/typecons.d(1486):        `std.typecons.reverse(T)(T
    t) if (isTuple!T)`

    Failed: ["dmd", "-unittest", "-v", "-o-", "/tmp/tmpcjm4ghnv.d", "-I/tmp"]

    '
  stdout: ''
  timestamp: 1660164227
- exit_code: 1
  program: "import std.typecons;\nimport std.math;\n/*\nCircular shift the digits\
    \ of the integer x, shift the digits right by shift\n    and return the result\
    \ as a string.\n    If shift > number of digits, return digits reversed.\n   \
    \ >>> circular_shift(12L, 1L)\n    \"21\"\n    >>> circular_shift(12L, 2L)\n \
    \   \"12\"\n    \n*/\nstring circular_shift(long x, long shift) \n{\n    string\
    \ result = to!string(x);\n    if (shift > result.length)\n    {\n        return\
    \ result[$-1 .. $].reverse;\n    }\n    else\n    {\n        return result[shift\
    \ .. $] ~ result[0 .. shift - 1];\n    }\n}\nunittest\n{\n    alias candidate\
    \ = circular_shift;\n\n    assert(candidate(100L, 2L) == \"001\");\n    assert(candidate(12L,\
    \ 2L) == \"12\");\n    assert(candidate(97L, 8L) == \"79\");\n    assert(candidate(12L,\
    \ 1L) == \"21\");\n    assert(candidate(11L, 101L) == \"11\");\n}\nvoid main(){}"
  status: SyntaxError
  stderr: '/tmp/tmpdd8jnk1l.d(15): Error: template instance `to!string` template `to`
    is not defined, did you mean No?

    /tmp/tmpdd8jnk1l.d(18): Error: template `std.typecons.reverse` cannot deduce function
    from argument types `!()(string)`, candidates are:

    /home/a.guha/repos/spack/opt/spack/linux-centos7-haswell/gcc-9.2.0/dmd-2.081.1-jzbhflp3vff4u2dqrltybjq3in2pa22f/linux/bin64/../../src/phobos/std/typecons.d(1486):        `std.typecons.reverse(T)(T
    t) if (isTuple!T)`

    Failed: ["dmd", "-unittest", "-v", "-o-", "/tmp/tmpdd8jnk1l.d", "-I/tmp"]

    '
  stdout: ''
  timestamp: 1660164228
- exit_code: 1
  program: "import std.typecons;\nimport std.math;\n/*\nCircular shift the digits\
    \ of the integer x, shift the digits right by shift\n    and return the result\
    \ as a string.\n    If shift > number of digits, return digits reversed.\n   \
    \ >>> circular_shift(12L, 1L)\n    \"21\"\n    >>> circular_shift(12L, 2L)\n \
    \   \"12\"\n    \n*/\nstring circular_shift(long x, long shift) \n{\n    string\
    \ s = to!string(x);\n    long n = s.length;\n    if (shift > n)\n    {\n     \
    \   return s[$-1..$];\n    }\n    else\n    {\n        return s[shift..$] ~ s[0..shift-1];\n\
    \    }\n}\nunittest\n{\n    alias candidate = circular_shift;\n\n    assert(candidate(100L,\
    \ 2L) == \"001\");\n    assert(candidate(12L, 2L) == \"12\");\n    assert(candidate(97L,\
    \ 8L) == \"79\");\n    assert(candidate(12L, 1L) == \"21\");\n    assert(candidate(11L,\
    \ 101L) == \"11\");\n}\nvoid main(){}"
  status: SyntaxError
  stderr: '/tmp/tmps8vkq3e1.d(15): Error: template instance `to!string` template `to`
    is not defined, did you mean No?

    Failed: ["dmd", "-unittest", "-v", "-o-", "/tmp/tmps8vkq3e1.d", "-I/tmp"]

    '
  stdout: ''
  timestamp: 1660164227
- exit_code: 1
  program: "import std.typecons;\nimport std.math;\n/*\nCircular shift the digits\
    \ of the integer x, shift the digits right by shift\n    and return the result\
    \ as a string.\n    If shift > number of digits, return digits reversed.\n   \
    \ >>> circular_shift(12L, 1L)\n    \"21\"\n    >>> circular_shift(12L, 2L)\n \
    \   \"12\"\n    \n*/\nstring circular_shift(long x, long shift) \n{\n    string\
    \ s = to!string(x);\n    if (shift > s.length)\n        return s[$-1..$];\n  \
    \  return s[shift..$] ~ s[0..shift-1];\n}\nunittest\n{\n    alias candidate =\
    \ circular_shift;\n\n    assert(candidate(100L, 2L) == \"001\");\n    assert(candidate(12L,\
    \ 2L) == \"12\");\n    assert(candidate(97L, 8L) == \"79\");\n    assert(candidate(12L,\
    \ 1L) == \"21\");\n    assert(candidate(11L, 101L) == \"11\");\n}\nvoid main(){}"
  status: SyntaxError
  stderr: '/tmp/tmpul0fy_n4.d(15): Error: template instance `to!string` template `to`
    is not defined, did you mean No?

    Failed: ["dmd", "-unittest", "-v", "-o-", "/tmp/tmpul0fy_n4.d", "-I/tmp"]

    '
  stdout: ''
  timestamp: 1660164227
- exit_code: 1
  program: "import std.typecons;\nimport std.math;\n/*\nCircular shift the digits\
    \ of the integer x, shift the digits right by shift\n    and return the result\
    \ as a string.\n    If shift > number of digits, return digits reversed.\n   \
    \ >>> circular_shift(12L, 1L)\n    \"21\"\n    >>> circular_shift(12L, 2L)\n \
    \   \"12\"\n    \n*/\nstring circular_shift(long x, long shift) \n{\n    string\
    \ s = to!string(x);\n    shift %= s.length;\n    return s[shift..$] ~ s[0..shift-1];\n\
    }\n/*\n    Return the number of digits in the integer x.\n    >>> num_digits(0L)\n\
    \    1\n    >>> num_digits(5L)\n    1\n    >>> num_digits(1234567890L)\n    10\n\
    */\nlong num_digits(long x) \n{\n    return to!string(x).length;\n}\n/*\n    Return\
    \ the number of digits in the integer x.\n    >>> num_digits(0L)\n    1\n    >>>\
    \ num_digits(5L)\n    1\n    >>> num_digits(1234567890L)\n    10\n*/\nlong num_digits(long\
    \ x) \n{\n    return to!string(x).length;\n}\n/*\n    Return the number of digits\
    \ in the integer x.\n    >>> num_digits(0L)\n    1\n    >>> num_digits(5L)\n \
    \   1\n    >>> num_digits(1234567890L)\n    10\n*/\nlong num_digits(long x) \n\
    {\n    return to!string(x).length;\n}\n/*\n    Return the number of digits in\
    \ the integer x.\n    >>> num_digits(0L)\n    1\n    >>> num_digits(5L)\n    1\n\
    \    >>> num_digits(1234567890L)\n    10\n*/\nlong num_digits(long x) \n{\n  \
    \  return to!string(x).length;\n}\n/*\n    Return the number of digits in the\
    \ integer x.\n    >>> num_digits(0L)\n    1\n    >>> num_digits(5L)\n    1\n \
    \   >>> num_digits(1234567890L)\n    10\n*/\nlong num_digits(long x) \n{\n   \
    \ return to!string(x).length;\n}\n/*\n    Return the number of digits in the integer\
    \ x.\n    >>> num_digits(0L)\n    1\n    >>> num_digits\nunittest\n{\n    alias\
    \ candidate = circular_shift;\n\n    assert(candidate(100L, 2L) == \"001\");\n\
    \    assert(candidate(12L, 2L) == \"12\");\n    assert(candidate(97L, 8L) == \"\
    79\");\n    assert(candidate(12L, 1L) == \"21\");\n    assert(candidate(11L, 101L)\
    \ == \"11\");\n}\nvoid main(){}"
  status: SyntaxError
  stderr: '/tmp/tmp2rej0dwr.d(84): Error: unterminated /* */ comment

    Failed: ["dmd", "-unittest", "-v", "-o-", "/tmp/tmp2rej0dwr.d", "-I/tmp"]

    '
  stdout: ''
  timestamp: 1660164227
- exit_code: 1
  program: "import std.typecons;\nimport std.math;\n/*\nCircular shift the digits\
    \ of the integer x, shift the digits right by shift\n    and return the result\
    \ as a string.\n    If shift > number of digits, return digits reversed.\n   \
    \ >>> circular_shift(12L, 1L)\n    \"21\"\n    >>> circular_shift(12L, 2L)\n \
    \   \"12\"\n    \n*/\nstring circular_shift(long x, long shift) \n{\n    string\
    \ s = to!string(x);\n    if (shift > s.length)\n        return s[$-1..0];\n  \
    \  return s[shift..$] ~ s[0..shift-1];\n}\n/*\n    Return the number of digits\
    \ in the integer x.\n    >>> num_digits(0L)\n    1\n    >>> num_digits(123L)\n\
    \    3\n*/\nlong num_digits(long x) \n{\n    return to!string(x).length;\n}\n\
    /*\n    Return the number of digits in the integer x.\n    >>> num_digits(0L)\n\
    \    1\n    >>> num_digits(123L)\n    3\n*/\nlong num_digits(long x) \n{\n   \
    \ return to!string(x).length;\n}\n/*\n    Return the number of digits in the integer\
    \ x.\n    >>> num_digits(0L)\n    1\n    >>> num_digits(123L)\n    3\n*/\nlong\
    \ num_digits(long x) \n{\n    return to!string(x).length;\n}\n/*\n    Return the\
    \ number of digits in the integer x.\n    >>> num_digits(0L)\n    1\n    >>> num_digits(123L)\n\
    \    3\n*/\nlong num_digits(long x) \n{\n    return to!string(x).length;\n}\n\
    /*\n    Return the number of digits in the integer x.\n    >>> num_digits(0L)\n\
    \    1\n    >>> num_digits(123L)\n    3\n*/\nlong num_digits(long x) \n{\n   \
    \ return to!string(x).length;\n}\n/*\n    Return the number of digits in the integer\
    \ x.\n    >>> num_digits(0L)\n    1\n    >>> num_digits(123L)\n    3\n*/\nlong\
    \ num_digits(long x) \n{\n    return to!string(x).length;\n}\n/*\n    Return the\
    \ number of digits in the integer x.\n    >>> num_digits(0L)\n    1\n    >>> num_digits(123L\n\
    unittest\n{\n    alias candidate = circular_shift;\n\n    assert(candidate(100L,\
    \ 2L) == \"001\");\n    assert(candidate(12L, 2L) == \"12\");\n    assert(candidate(97L,\
    \ 8L) == \"79\");\n    assert(candidate(12L, 1L) == \"21\");\n    assert(candidate(11L,\
    \ 101L) == \"11\");\n}\nvoid main(){}"
  status: SyntaxError
  stderr: '/tmp/tmpr74md2dn.d(86): Error: unterminated /* */ comment

    Failed: ["dmd", "-unittest", "-v", "-o-", "/tmp/tmpr74md2dn.d", "-I/tmp"]

    '
  stdout: ''
  timestamp: 1660164227
- exit_code: 1
  program: "import std.typecons;\nimport std.math;\n/*\nCircular shift the digits\
    \ of the integer x, shift the digits right by shift\n    and return the result\
    \ as a string.\n    If shift > number of digits, return digits reversed.\n   \
    \ >>> circular_shift(12L, 1L)\n    \"21\"\n    >>> circular_shift(12L, 2L)\n \
    \   \"12\"\n    \n*/\nstring circular_shift(long x, long shift) \n{\n    string\
    \ s = to!string(x);\n    if (shift > s.length)\n        return s[$-1..$];\n  \
    \  return s[shift..$] ~ s[0..shift-1];\n}\nunittest\n{\n    alias candidate =\
    \ circular_shift;\n\n    assert(candidate(100L, 2L) == \"001\");\n    assert(candidate(12L,\
    \ 2L) == \"12\");\n    assert(candidate(97L, 8L) == \"79\");\n    assert(candidate(12L,\
    \ 1L) == \"21\");\n    assert(candidate(11L, 101L) == \"11\");\n}\nvoid main(){}"
  status: SyntaxError
  stderr: '/tmp/tmpul0fy_n4.d(15): Error: template instance `to!string` template `to`
    is not defined, did you mean No?

    Failed: ["dmd", "-unittest", "-v", "-o-", "/tmp/tmpul0fy_n4.d", "-I/tmp"]

    '
  stdout: ''
  timestamp: 1660164227
- exit_code: 1
  program: "import std.typecons;\nimport std.math;\n/*\nCircular shift the digits\
    \ of the integer x, shift the digits right by shift\n    and return the result\
    \ as a string.\n    If shift > number of digits, return digits reversed.\n   \
    \ >>> circular_shift(12L, 1L)\n    \"21\"\n    >>> circular_shift(12L, 2L)\n \
    \   \"12\"\n    \n*/\nstring circular_shift(long x, long shift) \n{\n    string\
    \ s = to!string(x);\n    if (shift > s.length) \n    {\n        return s[$-1..$].dup.reverse;\n\
    \    }\n    else \n    {\n        return s[shift..$] ~ s[0..shift-1];\n    }\n\
    }\n/*\n    Return the number of digits in the integer x.\n    >>> num_digits(0L)\n\
    \    1\n    >>> num_digits(5L)\n    1\n    >>> num_digits(1234567890L)\n    10\n\
    */\nlong num_digits(long x) \n{\n    return to!string(x).length;\n}\n/*\n    Return\
    \ the number of digits in the integer x.\n    >>> num_digits(0L)\n    1\n    >>>\
    \ num_digits(5L)\n    1\n    >>> num_digits(1234567890L)\n    10\n*/\nlong num_digits(long\
    \ x) \n{\n    return to!string(x).length;\n}\n/*\n    Return the number of digits\
    \ in the integer x.\n    >>> num_digits(0L)\n    1\n    >>> num_digits(5L)\n \
    \   1\n    >>> num_digits(1234567890L)\n    10\n*/\nlong num_digits(long x) \n\
    {\n    return to!string(x).length;\n}\n/*\n    Return the number of digits in\
    \ the integer x.\n    >>> num_digits(0L)\n    1\n    >>> num_digits(5L)\n    1\n\
    \    >>> num_digits(1234567890L)\n    10\n*/\nlong num_digits(long x) \n{\n  \
    \  return to!string(x).length;\n}\n/*\n    Return the number of digits in the\
    \ integer x.\n    >>> num_digits(0L)\n    1\n    >>> num_digits(5L)\n    1\n \
    \   >>> num_digits(1234567890L)\n    10\n*/\nlong num_digits(long x) \n{\n   \
    \ return to!string(x).length;\n}\n\nunittest\n{\n    alias candidate = circular_shift;\n\
    \n    assert(candidate(100L, 2L) == \"001\");\n    assert(candidate(12L, 2L) ==\
    \ \"12\");\n    assert(candidate(97L, 8L) == \"79\");\n    assert(candidate(12L,\
    \ 1L) == \"21\");\n    assert(candidate(11L, 101L) == \"11\");\n}\nvoid main(){}"
  status: SyntaxError
  stderr: '/tmp/tmpcgmi3qur.d(15): Error: template instance `to!string` template `to`
    is not defined, did you mean No?

    /tmp/tmpcgmi3qur.d(18): Error: template `std.typecons.reverse` cannot deduce function
    from argument types `!()(char[])`, candidates are:

    /home/a.guha/repos/spack/opt/spack/linux-centos7-haswell/gcc-9.2.0/dmd-2.081.1-jzbhflp3vff4u2dqrltybjq3in2pa22f/linux/bin64/../../src/phobos/std/typecons.d(1486):        `std.typecons.reverse(T)(T
    t) if (isTuple!T)`

    /tmp/tmpcgmi3qur.d(36): Error: template instance `to!string` template `to` is
    not defined, did you mean No?

    /tmp/tmpcgmi3qur.d(49): Error: template instance `to!string` template `to` is
    not defined, did you mean No?

    /tmp/tmpcgmi3qur.d(62): Error: template instance `to!string` template `to` is
    not defined, did you mean No?

    /tmp/tmpcgmi3qur.d(75): Error: template instance `to!string` template `to` is
    not defined, did you mean No?

    /tmp/tmpcgmi3qur.d(88): Error: template instance `to!string` template `to` is
    not defined, did you mean No?

    Failed: ["dmd", "-unitt'
  stdout: ''
  timestamp: 1660164228
- exit_code: 1
  program: "import std.typecons;\nimport std.math;\n/*\nCircular shift the digits\
    \ of the integer x, shift the digits right by shift\n    and return the result\
    \ as a string.\n    If shift > number of digits, return digits reversed.\n   \
    \ >>> circular_shift(12L, 1L)\n    \"21\"\n    >>> circular_shift(12L, 2L)\n \
    \   \"12\"\n    \n*/\nstring circular_shift(long x, long shift) \n{\n    string\
    \ s = to!string(x);\n    long n = s.length;\n    if (shift > n)\n    {\n     \
    \   return s[$-1..$];\n    }\n    return s[shift..$] ~ s[0..shift-1];\n}\nunittest\n\
    {\n    alias candidate = circular_shift;\n\n    assert(candidate(100L, 2L) ==\
    \ \"001\");\n    assert(candidate(12L, 2L) == \"12\");\n    assert(candidate(97L,\
    \ 8L) == \"79\");\n    assert(candidate(12L, 1L) == \"21\");\n    assert(candidate(11L,\
    \ 101L) == \"11\");\n}\nvoid main(){}"
  status: SyntaxError
  stderr: '/tmp/tmpfc68dyrr.d(15): Error: template instance `to!string` template `to`
    is not defined, did you mean No?

    Failed: ["dmd", "-unittest", "-v", "-o-", "/tmp/tmpfc68dyrr.d", "-I/tmp"]

    '
  stdout: ''
  timestamp: 1660164227
- exit_code: 1
  program: "import std.typecons;\nimport std.math;\n/*\nCircular shift the digits\
    \ of the integer x, shift the digits right by shift\n    and return the result\
    \ as a string.\n    If shift > number of digits, return digits reversed.\n   \
    \ >>> circular_shift(12L, 1L)\n    \"21\"\n    >>> circular_shift(12L, 2L)\n \
    \   \"12\"\n    \n*/\nstring circular_shift(long x, long shift) \n{\n    string\
    \ s = to!string(x);\n    if (shift > s.length)\n        return s[$-1..$].dup.reverse;\n\
    \    return s[shift..$] ~ s[0..shift-1];\n}\nunittest\n{\n    alias candidate\
    \ = circular_shift;\n\n    assert(candidate(100L, 2L) == \"001\");\n    assert(candidate(12L,\
    \ 2L) == \"12\");\n    assert(candidate(97L, 8L) == \"79\");\n    assert(candidate(12L,\
    \ 1L) == \"21\");\n    assert(candidate(11L, 101L) == \"11\");\n}\nvoid main(){}"
  status: SyntaxError
  stderr: '/tmp/tmpcjm4ghnv.d(15): Error: template instance `to!string` template `to`
    is not defined, did you mean No?

    /tmp/tmpcjm4ghnv.d(17): Error: template `std.typecons.reverse` cannot deduce function
    from argument types `!()(char[])`, candidates are:

    /home/a.guha/repos/spack/opt/spack/linux-centos7-haswell/gcc-9.2.0/dmd-2.081.1-jzbhflp3vff4u2dqrltybjq3in2pa22f/linux/bin64/../../src/phobos/std/typecons.d(1486):        `std.typecons.reverse(T)(T
    t) if (isTuple!T)`

    Failed: ["dmd", "-unittest", "-v", "-o-", "/tmp/tmpcjm4ghnv.d", "-I/tmp"]

    '
  stdout: ''
  timestamp: 1660164227
- exit_code: 1
  program: "import std.typecons;\nimport std.math;\n/*\nCircular shift the digits\
    \ of the integer x, shift the digits right by shift\n    and return the result\
    \ as a string.\n    If shift > number of digits, return digits reversed.\n   \
    \ >>> circular_shift(12L, 1L)\n    \"21\"\n    >>> circular_shift(12L, 2L)\n \
    \   \"12\"\n    \n*/\nstring circular_shift(long x, long shift) \n{\n    string\
    \ s = to!string(x);\n    if (shift > s.length)\n        return s[$-1..0];\n  \
    \  return s[shift..$] ~ s[0..shift-1];\n}\nunittest\n{\n    alias candidate =\
    \ circular_shift;\n\n    assert(candidate(100L, 2L) == \"001\");\n    assert(candidate(12L,\
    \ 2L) == \"12\");\n    assert(candidate(97L, 8L) == \"79\");\n    assert(candidate(12L,\
    \ 1L) == \"21\");\n    assert(candidate(11L, 101L) == \"11\");\n}\nvoid main(){}"
  status: SyntaxError
  stderr: '/tmp/tmpmvt9mcrz.d(15): Error: template instance `to!string` template `to`
    is not defined, did you mean No?

    Failed: ["dmd", "-unittest", "-v", "-o-", "/tmp/tmpmvt9mcrz.d", "-I/tmp"]

    '
  stdout: ''
  timestamp: 1660164227
- exit_code: 1
  program: "import std.typecons;\nimport std.math;\n/*\nCircular shift the digits\
    \ of the integer x, shift the digits right by shift\n    and return the result\
    \ as a string.\n    If shift > number of digits, return digits reversed.\n   \
    \ >>> circular_shift(12L, 1L)\n    \"21\"\n    >>> circular_shift(12L, 2L)\n \
    \   \"12\"\n    \n*/\nstring circular_shift(long x, long shift) \n{\n    string\
    \ s = to!string(x);\n    if (shift > s.length) \n    {\n        return s[$-1..$].reverse;\n\
    \    }\n    return s[shift..$] ~ s[0..shift-1];\n}\n/*\n    Return the number\
    \ of digits in the integer x.\n    >>> num_digits(12L)\n    2\n    >>> num_digits(12345L)\n\
    \    5\n*/\nlong num_digits(long x) \n{\n    return to!string(x).length;\n}\n\
    /*\n    Return the number of digits in the integer x.\n    >>> num_digits(12L)\n\
    \    2\n    >>> num_digits(12345L)\n    5\n*/\nlong num_digits(long x) \n{\n \
    \   return to!string(x).length;\n}\n/*\n    Return the number of digits in the\
    \ integer x.\n    >>> num_digits(12L)\n    2\n    >>> num_digits(12345L)\n   \
    \ 5\n*/\nlong num_digits(long x) \n{\n    return to!string(x).length;\n}\n/*\n\
    \    Return the number of digits in the integer x.\n    >>> num_digits(12L)\n\
    \    2\n    >>> num_digits(12345L)\n    5\n*/\nlong num_digits(long x) \n{\n \
    \   return to!string(x).length;\n}\n/*\n    Return the number of digits in the\
    \ integer x.\n    >>> num_digits(12L)\n    2\n    >>> num_digits(12345L)\n   \
    \ 5\n*/\nlong num_digits(long x) \n{\n    return to!string(x).length;\n}\n/*\n\
    \    Return the number of digits in the integer x.\n    >>> num_digits(12L)\n\
    \    2\n    >>> num_digits(12345L)\n    5\n*/\nlong num_digits(long x) \n{\n \
    \   return to!string(x).length;\n}\n/*\n    Return the number of digits in the\
    \ integer x.\n    >>> num_digits(12\nunittest\n{\n    alias candidate = circular_shift;\n\
    \n    assert(candidate(100L, 2L) == \"001\");\n    assert(candidate(12L, 2L) ==\
    \ \"12\");\n    assert(candidate(97L, 8L) == \"79\");\n    assert(candidate(12L,\
    \ 1L) == \"21\");\n    assert(candidate(11L, 101L) == \"11\");\n}\nvoid main(){}"
  status: SyntaxError
  stderr: '/tmp/tmpe3fuz84u.d(88): Error: unterminated /* */ comment

    Failed: ["dmd", "-unittest", "-v", "-o-", "/tmp/tmpe3fuz84u.d", "-I/tmp"]

    '
  stdout: ''
  timestamp: 1660164227
- exit_code: 1
  program: "import std.typecons;\nimport std.math;\n/*\nCircular shift the digits\
    \ of the integer x, shift the digits right by shift\n    and return the result\
    \ as a string.\n    If shift > number of digits, return digits reversed.\n   \
    \ >>> circular_shift(12L, 1L)\n    \"21\"\n    >>> circular_shift(12L, 2L)\n \
    \   \"12\"\n    \n*/\nstring circular_shift(long x, long shift) \n{\n    string\
    \ s = to!string(x);\n    if (shift > s.length)\n        return s[$-1..0];\n  \
    \  return s[shift..$] ~ s[0..shift-1];\n}\nunittest\n{\n    alias candidate =\
    \ circular_shift;\n\n    assert(candidate(100L, 2L) == \"001\");\n    assert(candidate(12L,\
    \ 2L) == \"12\");\n    assert(candidate(97L, 8L) == \"79\");\n    assert(candidate(12L,\
    \ 1L) == \"21\");\n    assert(candidate(11L, 101L) == \"11\");\n}\nvoid main(){}"
  status: SyntaxError
  stderr: '/tmp/tmpmvt9mcrz.d(15): Error: template instance `to!string` template `to`
    is not defined, did you mean No?

    Failed: ["dmd", "-unittest", "-v", "-o-", "/tmp/tmpmvt9mcrz.d", "-I/tmp"]

    '
  stdout: ''
  timestamp: 1660164227
- exit_code: 1
  program: "import std.typecons;\nimport std.math;\n/*\nCircular shift the digits\
    \ of the integer x, shift the digits right by shift\n    and return the result\
    \ as a string.\n    If shift > number of digits, return digits reversed.\n   \
    \ >>> circular_shift(12L, 1L)\n    \"21\"\n    >>> circular_shift(12L, 2L)\n \
    \   \"12\"\n    \n*/\nstring circular_shift(long x, long shift) \n{\n    string\
    \ s = to!string(x);\n    if (shift > s.length)\n        return s[$-1..$];\n  \
    \  return s[shift..$] ~ s[0..shift-1];\n}\n/*\n    Return a list of the circular\
    \ shifts of the integer x.\n    >>> circular_shifts(12L)\n    [\"21\", \"12\"\
    ]\n*/\nstring[] circular_shifts(long x) \n{\n    string s = to!string(x);\n  \
    \  string[] result;\n    foreach (i; 0..s.length) \n    {\n        result ~= circular_shift(x,\
    \ i);\n    }\n    return result;\n}\n/*\n    Return a list of the circular shifts\
    \ of the integer x,\n    sorted in ascending order.\n    >>> sorted_circular_shifts(12L)\n\
    \    [\"12\", \"21\"]\n*/\nstring[] sorted_circular_shifts(long x) \n{\n    return\
    \ circular_shifts(x).sort();\n}\n/*\n    Return a list of the circular shifts\
    \ of the integer x,\n    sorted in ascending order,\n    with each shift converted\
    \ to the corresponding integer.\n    >>> sorted_circular_shifts_int(12L)\n   \
    \ [12, 21]\n*/\nlong[] sorted_circular_shifts_int(long x) \n{\n    return sorted_circular_shifts(x).map!(to!long).array;\n\
    }\n/*\n    Return a list of the circular shifts of the integer x,\n    sorted\
    \ in ascending order,\n    with each shift converted to the corresponding integer,\n\
    \    and with duplicates removed.\n    >>> unique_sorted_circular_shifts_int(12L)\n\
    \    [12]\n*/\nlong[] unique_sorted_circular_shifts_int(long x) \n{\n    return\
    \ sorted_circular_shifts_int(x).uniq;\n}\n/*\n    Return a list of the circular\
    \ shifts of the integer x,\n    sorted in ascending order,\n    with each shift\
    \ converted to the corresponding integer,\n    and with duplicates removed.\n\
    \    >>> unique_sorted_circular_shifts_int(12L\nunittest\n{\n    alias candidate\
    \ = circular_shift;\n\n    assert(candidate(100L, 2L) == \"001\");\n    assert(candidate(12L,\
    \ 2L) == \"12\");\n    assert(candidate(97L, 8L) == \"79\");\n    assert(candidate(12L,\
    \ 1L) == \"21\");\n    assert(candidate(11L, 101L) == \"11\");\n}\nvoid main(){}"
  status: SyntaxError
  stderr: '/tmp/tmp3hu8gf7r.d(68): Error: unterminated /* */ comment

    Failed: ["dmd", "-unittest", "-v", "-o-", "/tmp/tmp3hu8gf7r.d", "-I/tmp"]

    '
  stdout: ''
  timestamp: 1660164227
- exit_code: 1
  program: "import std.typecons;\nimport std.math;\n/*\nCircular shift the digits\
    \ of the integer x, shift the digits right by shift\n    and return the result\
    \ as a string.\n    If shift > number of digits, return digits reversed.\n   \
    \ >>> circular_shift(12L, 1L)\n    \"21\"\n    >>> circular_shift(12L, 2L)\n \
    \   \"12\"\n    \n*/\nstring circular_shift(long x, long shift) \n{\n    string\
    \ s = to!string(x);\n    long n = s.length;\n    if (shift > n)\n    {\n     \
    \   return s[$-1..$];\n    }\n    return s[shift..$] ~ s[0..shift-1];\n}\n/*\n\
    Return the number of digits in the integer x.\n    >>> num_digits(12L)\n    2\n\
    \    >>> num_digits(12345L)\n    5\n*/\nlong num_digits(long x) \n{\n    return\
    \ to!string(x).length;\n}\n/*\nReturn the number of digits in the integer x.\n\
    \    >>> num_digits(12L)\n    2\n    >>> num_digits(12345L)\n    5\n*/\nlong num_digits(long\
    \ x) \n{\n    return to!string(x).length;\n}\n/*\nReturn the number of digits\
    \ in the integer x.\n    >>> num_digits(12L)\n    2\n    >>> num_digits(12345L)\n\
    \    5\n*/\nlong num_digits(long x) \n{\n    return to!string(x).length;\n}\n\
    /*\nReturn the number of digits in the integer x.\n    >>> num_digits(12L)\n \
    \   2\n    >>> num_digits(12345L)\n    5\n*/\nlong num_digits(long x) \n{\n  \
    \  return to!string(x).length;\n}\n/*\nReturn the number of digits in the integer\
    \ x.\n    >>> num_digits(12L)\n    2\n    >>> num_digits(12345L)\n    5\n*/\n\
    long num_digits(long x) \n{\n    return to!string(x).length;\n}\n/*\nReturn the\
    \ number of digits in the integer x.\n    >>> num_digits(12L)\n    2\n    >>>\
    \ num_digits(12345L)\n    5\n*/\nlong num_digits(long x) \n{\n    return to!string(x).length;\n\
    }\n/*\nReturn the number of digits in the integer x.\n    >>> num_digits(12L)\n\
    \nunittest\n{\n    alias candidate = circular_shift;\n\n    assert(candidate(100L,\
    \ 2L) == \"001\");\n    assert(candidate(12L, 2L) == \"12\");\n    assert(candidate(97L,\
    \ 8L) == \"79\");\n    assert(candidate(12L, 1L) == \"21\");\n    assert(candidate(11L,\
    \ 101L) == \"11\");\n}\nvoid main(){}"
  status: SyntaxError
  stderr: '/tmp/tmp690a1hnf.d(89): Error: unterminated /* */ comment

    Failed: ["dmd", "-unittest", "-v", "-o-", "/tmp/tmp690a1hnf.d", "-I/tmp"]

    '
  stdout: ''
  timestamp: 1660164227
- exit_code: 1
  program: "import std.typecons;\nimport std.math;\n/*\nCircular shift the digits\
    \ of the integer x, shift the digits right by shift\n    and return the result\
    \ as a string.\n    If shift > number of digits, return digits reversed.\n   \
    \ >>> circular_shift(12L, 1L)\n    \"21\"\n    >>> circular_shift(12L, 2L)\n \
    \   \"12\"\n    \n*/\nstring circular_shift(long x, long shift) \n{\n    string\
    \ s = to!string(x);\n    if (shift > s.length)\n        return s[$-1..0];\n  \
    \  return s[shift..$] ~ s[0..shift-1];\n}\nunittest\n{\n    alias candidate =\
    \ circular_shift;\n\n    assert(candidate(100L, 2L) == \"001\");\n    assert(candidate(12L,\
    \ 2L) == \"12\");\n    assert(candidate(97L, 8L) == \"79\");\n    assert(candidate(12L,\
    \ 1L) == \"21\");\n    assert(candidate(11L, 101L) == \"11\");\n}\nvoid main(){}"
  status: SyntaxError
  stderr: '/tmp/tmpmvt9mcrz.d(15): Error: template instance `to!string` template `to`
    is not defined, did you mean No?

    Failed: ["dmd", "-unittest", "-v", "-o-", "/tmp/tmpmvt9mcrz.d", "-I/tmp"]

    '
  stdout: ''
  timestamp: 1660164227
- exit_code: 1
  program: "import std.typecons;\nimport std.math;\n/*\nCircular shift the digits\
    \ of the integer x, shift the digits right by shift\n    and return the result\
    \ as a string.\n    If shift > number of digits, return digits reversed.\n   \
    \ >>> circular_shift(12L, 1L)\n    \"21\"\n    >>> circular_shift(12L, 2L)\n \
    \   \"12\"\n    \n*/\nstring circular_shift(long x, long shift) \n{\n    string\
    \ s = to!string(x);\n    long len = s.length;\n    if (shift > len)\n    {\n \
    \       return s[$-1 .. $];\n    }\n    else\n    {\n        return s[shift ..\
    \ $] ~ s[0 .. shift - 1];\n    }\n}\n/*\n    Return the digits of the integer\
    \ x as a string.\n    >>> digits(12L)\n    \"12\"\n    >>> digits(123L)\n    \"\
    123\"\n*/\nstring digits(long x) \n{\n    return to!string(x);\n}\n/*\n    Return\
    \ the number of digits in the integer x.\n    >>> num_digits(12L)\n    2\n   \
    \ >>> num_digits(123L)\n    3\n*/\nlong num_digits(long x) \n{\n    return to!string(x).length;\n\
    }\n/*\n    Return the number of digits in the integer x.\n    >>> num_digits(12L)\n\
    \    2\n    >>> num_digits(123L)\n    3\n*/\nlong num_digits(long x) \n{\n   \
    \ return to!string(x).length;\n}\n/*\n    Return the number of digits in the integer\
    \ x.\n    >>> num_digits(12L)\n    2\n    >>> num_digits(123L)\n    3\n*/\nlong\
    \ num_digits(long x) \n{\n    return to!string(x).length;\n}\n/*\n    Return the\
    \ number of digits in the integer x.\n    >>> num_digits(12L)\n    2\n    >>>\
    \ num_digits(123L)\n    3\n*/\nlong num_digits(long x) \n{\n    return to!string(x).length;\n\
    }\n/*\n    Return the number of digits in the integer x.\n    >>> num_digits(12L)\n\
    \    2\n    >>> num_digits(123L)\n    3\n*/\nlong num_digits(long x) \n{\n   \
    \ return to!string(x).length;\n}\n/*\n    Return the number of digits in the integer\
    \ x.\n    >>> num_digits(\nunittest\n{\n    alias candidate = circular_shift;\n\
    \n    assert(candidate(100L, 2L) == \"001\");\n    assert(candidate(12L, 2L) ==\
    \ \"12\");\n    assert(candidate(97L, 8L) == \"79\");\n    assert(candidate(12L,\
    \ 1L) == \"21\");\n    assert(candidate(11L, 101L) == \"11\");\n}\nvoid main(){}"
  status: SyntaxError
  stderr: '/tmp/tmpfvwr89pz.d(92): Error: unterminated /* */ comment

    Failed: ["dmd", "-unittest", "-v", "-o-", "/tmp/tmpfvwr89pz.d", "-I/tmp"]

    '
  stdout: ''
  timestamp: 1660164227
- exit_code: 1
  program: "import std.typecons;\nimport std.math;\n/*\nCircular shift the digits\
    \ of the integer x, shift the digits right by shift\n    and return the result\
    \ as a string.\n    If shift > number of digits, return digits reversed.\n   \
    \ >>> circular_shift(12L, 1L)\n    \"21\"\n    >>> circular_shift(12L, 2L)\n \
    \   \"12\"\n    \n*/\nstring circular_shift(long x, long shift) \n{\n    string\
    \ s = to!string(x);\n    if (shift > s.length)\n        return s[$-1..$];\n  \
    \  return s[shift..$] ~ s[0..shift-1];\n}\nunittest\n{\n    alias candidate =\
    \ circular_shift;\n\n    assert(candidate(100L, 2L) == \"001\");\n    assert(candidate(12L,\
    \ 2L) == \"12\");\n    assert(candidate(97L, 8L) == \"79\");\n    assert(candidate(12L,\
    \ 1L) == \"21\");\n    assert(candidate(11L, 101L) == \"11\");\n}\nvoid main(){}"
  status: SyntaxError
  stderr: '/tmp/tmpul0fy_n4.d(15): Error: template instance `to!string` template `to`
    is not defined, did you mean No?

    Failed: ["dmd", "-unittest", "-v", "-o-", "/tmp/tmpul0fy_n4.d", "-I/tmp"]

    '
  stdout: ''
  timestamp: 1660164227
- exit_code: 1
  program: "import std.typecons;\nimport std.math;\n/*\nCircular shift the digits\
    \ of the integer x, shift the digits right by shift\n    and return the result\
    \ as a string.\n    If shift > number of digits, return digits reversed.\n   \
    \ >>> circular_shift(12L, 1L)\n    \"21\"\n    >>> circular_shift(12L, 2L)\n \
    \   \"12\"\n    \n*/\nstring circular_shift(long x, long shift) \n{\n    string\
    \ s = to!string(x);\n    if (shift > s.length)\n        return s[$-1..0];\n  \
    \  return s[shift..$] ~ s[0..shift-1];\n}\n/*\n    Return the number of digits\
    \ in the integer x.\n    >>> num_digits(123L)\n    3\n    >>> num_digits(0L)\n\
    \    1\n*/\nlong num_digits(long x) \n{\n    return to!string(x).length;\n}\n\
    /*\n    Return the number of digits in the integer x.\n    >>> num_digits(123L)\n\
    \    3\n    >>> num_digits(0L)\n    1\n*/\nlong num_digits(long x) \n{\n    return\
    \ to!string(x).length;\n}\n/*\n    Return the number of digits in the integer\
    \ x.\n    >>> num_digits(123L)\n    3\n    >>> num_digits(0L)\n    1\n*/\nlong\
    \ num_digits(long x) \n{\n    return to!string(x).length;\n}\n/*\n    Return the\
    \ number of digits in the integer x.\n    >>> num_digits(123L)\n    3\n    >>>\
    \ num_digits(0L)\n    1\n*/\nlong num_digits(long x) \n{\n    return to!string(x).length;\n\
    }\n/*\n    Return the number of digits in the integer x.\n    >>> num_digits(123L)\n\
    \    3\n    >>> num_digits(0L)\n    1\n*/\nlong num_digits(long x) \n{\n    return\
    \ to!string(x).length;\n}\n/*\n    Return the number of digits in the integer\
    \ x.\n    >>> num_digits(123L)\n    3\n    >>> num_digits(0L)\n    1\n*/\nlong\
    \ num_digits(long x) \n{\n    return to!string(x).length;\n}\n/*\n    Return the\
    \ number of digits in the integer x.\n    >>> num_digits(123L)\n    3\n    >>>\
    \ num_digits(0L\nunittest\n{\n    alias candidate = circular_shift;\n\n    assert(candidate(100L,\
    \ 2L) == \"001\");\n    assert(candidate(12L, 2L) == \"12\");\n    assert(candidate(97L,\
    \ 8L) == \"79\");\n    assert(candidate(12L, 1L) == \"21\");\n    assert(candidate(11L,\
    \ 101L) == \"11\");\n}\nvoid main(){}"
  status: SyntaxError
  stderr: '/tmp/tmpeu8unbzi.d(86): Error: unterminated /* */ comment

    Failed: ["dmd", "-unittest", "-v", "-o-", "/tmp/tmpeu8unbzi.d", "-I/tmp"]

    '
  stdout: ''
  timestamp: 1660164227
- exit_code: 1
  program: "import std.typecons;\nimport std.math;\n/*\nCircular shift the digits\
    \ of the integer x, shift the digits right by shift\n    and return the result\
    \ as a string.\n    If shift > number of digits, return digits reversed.\n   \
    \ >>> circular_shift(12L, 1L)\n    \"21\"\n    >>> circular_shift(12L, 2L)\n \
    \   \"12\"\n    \n*/\nstring circular_shift(long x, long shift) \n{\n    string\
    \ s = to!string(x);\n    return s[shift..$] ~ s[0..shift];\n}\nunittest\n{\n \
    \   alias candidate = circular_shift;\n\n    assert(candidate(100L, 2L) == \"\
    001\");\n    assert(candidate(12L, 2L) == \"12\");\n    assert(candidate(97L,\
    \ 8L) == \"79\");\n    assert(candidate(12L, 1L) == \"21\");\n    assert(candidate(11L,\
    \ 101L) == \"11\");\n}\nvoid main(){}"
  status: SyntaxError
  stderr: '/tmp/tmpiuxjnhgs.d(15): Error: template instance `to!string` template `to`
    is not defined, did you mean No?

    Failed: ["dmd", "-unittest", "-v", "-o-", "/tmp/tmpiuxjnhgs.d", "-I/tmp"]

    '
  stdout: ''
  timestamp: 1660164227
- exit_code: 1
  program: "import std.typecons;\nimport std.math;\n/*\nCircular shift the digits\
    \ of the integer x, shift the digits right by shift\n    and return the result\
    \ as a string.\n    If shift > number of digits, return digits reversed.\n   \
    \ >>> circular_shift(12L, 1L)\n    \"21\"\n    >>> circular_shift(12L, 2L)\n \
    \   \"12\"\n    \n*/\nstring circular_shift(long x, long shift) \n{\n    string\
    \ s = to!string(x);\n    if (shift > s.length)\n        return s[$-1..0];\n  \
    \  return s[shift..$] ~ s[0..shift-1];\n}\n/*\n    Return the number of digits\
    \ in the integer x.\n    >>> num_digits(0L)\n    1\n    >>> num_digits(1L)\n \
    \   1\n    >>> num_digits(10L)\n    2\n    >>> num_digits(12345L)\n    5\n*/\n\
    long num_digits(long x) \n{\n    return to!string(x).length;\n}\n/*\n    Return\
    \ the number of digits in the integer x.\n    >>> num_digits(0L)\n    1\n    >>>\
    \ num_digits(1L)\n    1\n    >>> num_digits(10L)\n    2\n    >>> num_digits(12345L)\n\
    \    5\n*/\nlong num_digits(long x) \n{\n    return to!string(x).length;\n}\n\
    /*\n    Return the number of digits in the integer x.\n    >>> num_digits(0L)\n\
    \    1\n    >>> num_digits(1L)\n    1\n    >>> num_digits(10L)\n    2\n    >>>\
    \ num_digits(12345L)\n    5\n*/\nlong num_digits(long x) \n{\n    return to!string(x).length;\n\
    }\n/*\n    Return the number of digits in the integer x.\n    >>> num_digits(0L)\n\
    \    1\n    >>> num_digits(1L)\n    1\n    >>> num_digits(10L)\n    2\n    >>>\
    \ num_digits(12345L)\n    5\n*/\nlong num_digits(long x) \n{\n    return to!string(x).length;\n\
    }\n/*\n    Return the number of digits in the integer x.\n    >>> num_digits(0L)\n\
    \    1\n    >>> num_digits(1L)\n    1\n    >>> num_digits(10L)\n    2\n    >>>\
    \ num_dig\nunittest\n{\n    alias candidate = circular_shift;\n\n    assert(candidate(100L,\
    \ 2L) == \"001\");\n    assert(candidate(12L, 2L) == \"12\");\n    assert(candidate(97L,\
    \ 8L) == \"79\");\n    assert(candidate(12L, 1L) == \"21\");\n    assert(candidate(11L,\
    \ 101L) == \"11\");\n}\nvoid main(){}"
  status: SyntaxError
  stderr: '/tmp/tmp6r2zswvc.d(80): Error: unterminated /* */ comment

    Failed: ["dmd", "-unittest", "-v", "-o-", "/tmp/tmp6r2zswvc.d", "-I/tmp"]

    '
  stdout: ''
  timestamp: 1660164227
- exit_code: 1
  program: "import std.typecons;\nimport std.math;\n/*\nCircular shift the digits\
    \ of the integer x, shift the digits right by shift\n    and return the result\
    \ as a string.\n    If shift > number of digits, return digits reversed.\n   \
    \ >>> circular_shift(12L, 1L)\n    \"21\"\n    >>> circular_shift(12L, 2L)\n \
    \   \"12\"\n    \n*/\nstring circular_shift(long x, long shift) \n{\n    string\
    \ s = to!string(x);\n    long n = s.length;\n    if (shift > n)\n    {\n     \
    \   return s[$-1..0];\n    }\n    return s[shift..$] ~ s[0..shift-1];\n}\nunittest\n\
    {\n    alias candidate = circular_shift;\n\n    assert(candidate(100L, 2L) ==\
    \ \"001\");\n    assert(candidate(12L, 2L) == \"12\");\n    assert(candidate(97L,\
    \ 8L) == \"79\");\n    assert(candidate(12L, 1L) == \"21\");\n    assert(candidate(11L,\
    \ 101L) == \"11\");\n}\nvoid main(){}"
  status: SyntaxError
  stderr: '/tmp/tmpf0vak0p2.d(15): Error: template instance `to!string` template `to`
    is not defined, did you mean No?

    Failed: ["dmd", "-unittest", "-v", "-o-", "/tmp/tmpf0vak0p2.d", "-I/tmp"]

    '
  stdout: ''
  timestamp: 1660164228
- exit_code: 1
  program: "import std.typecons;\nimport std.math;\n/*\nCircular shift the digits\
    \ of the integer x, shift the digits right by shift\n    and return the result\
    \ as a string.\n    If shift > number of digits, return digits reversed.\n   \
    \ >>> circular_shift(12L, 1L)\n    \"21\"\n    >>> circular_shift(12L, 2L)\n \
    \   \"12\"\n    \n*/\nstring circular_shift(long x, long shift) \n{\n    string\
    \ s = to!string(x);\n    if (shift > s.length)\n        return s[$-1..0];\n  \
    \  return s[shift..$] ~ s[0..shift-1];\n}\nunittest\n{\n    alias candidate =\
    \ circular_shift;\n\n    assert(candidate(100L, 2L) == \"001\");\n    assert(candidate(12L,\
    \ 2L) == \"12\");\n    assert(candidate(97L, 8L) == \"79\");\n    assert(candidate(12L,\
    \ 1L) == \"21\");\n    assert(candidate(11L, 101L) == \"11\");\n}\nvoid main(){}"
  status: SyntaxError
  stderr: '/tmp/tmpmvt9mcrz.d(15): Error: template instance `to!string` template `to`
    is not defined, did you mean No?

    Failed: ["dmd", "-unittest", "-v", "-o-", "/tmp/tmpmvt9mcrz.d", "-I/tmp"]

    '
  stdout: ''
  timestamp: 1660164227
- exit_code: 1
  program: "import std.typecons;\nimport std.math;\n/*\nCircular shift the digits\
    \ of the integer x, shift the digits right by shift\n    and return the result\
    \ as a string.\n    If shift > number of digits, return digits reversed.\n   \
    \ >>> circular_shift(12L, 1L)\n    \"21\"\n    >>> circular_shift(12L, 2L)\n \
    \   \"12\"\n    \n*/\nstring circular_shift(long x, long shift) \n{\n    string\
    \ s = to!string(x);\n    if (shift > s.length)\n        return s[$-1..0];\n  \
    \  return s[shift..$] ~ s[0..shift-1];\n}\nunittest\n{\n    alias candidate =\
    \ circular_shift;\n\n    assert(candidate(100L, 2L) == \"001\");\n    assert(candidate(12L,\
    \ 2L) == \"12\");\n    assert(candidate(97L, 8L) == \"79\");\n    assert(candidate(12L,\
    \ 1L) == \"21\");\n    assert(candidate(11L, 101L) == \"11\");\n}\nvoid main(){}"
  status: SyntaxError
  stderr: '/tmp/tmpmvt9mcrz.d(15): Error: template instance `to!string` template `to`
    is not defined, did you mean No?

    Failed: ["dmd", "-unittest", "-v", "-o-", "/tmp/tmpmvt9mcrz.d", "-I/tmp"]

    '
  stdout: ''
  timestamp: 1660164227

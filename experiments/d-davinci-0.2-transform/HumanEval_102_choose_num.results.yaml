language: d
name: HumanEval_102_choose_num
results:
- exit_code: 1
  program: "import std.typecons;\nimport std.math;\n/*\nThis function takes two positive\
    \ numbers x and y and returns the\n    biggest even integer number that is in\
    \ the range [x, y] inclusive. If \n    there's no such number, then the function\
    \ should return -1.\n\n    For example:\n    >>> choose_num(12L, 15L)\n    14L\n\
    \    >>> choose_num(13L, 12L)\n    -1L\n    \n*/\nlong choose_num(long x, long\
    \ y) \n{\n    long z = -1;\n    if (x % 2 == 0)\n    {\n        z = x;\n    }\n\
    \    else\n    {\n        z = x + 1;\n    }\n    if (z > y)\n    {\n        z\
    \ = -1;\n    }\n    return z;\n}\nunittest\n{\n    alias candidate = choose_num;\n\
    \n    assert(candidate(12L, 15L) == 14L);\n    assert(candidate(13L, 12L) == -1L);\n\
    \    assert(candidate(33L, 12354L) == 12354L);\n    assert(candidate(5234L, 5233L)\
    \ == -1L);\n    assert(candidate(6L, 29L) == 28L);\n    assert(candidate(27L,\
    \ 10L) == -1L);\n    assert(candidate(7L, 7L) == -1L);\n    assert(candidate(546L,\
    \ 546L) == 546L);\n}\nvoid main(){}"
  status: Exception
  stderr: 'b''core.exception.AssertError@/tmp/tmp_2535mbj.d(36): unittest failure\n----------------\n??:?
    _d_unittestp [0x427e1d]\n??:? void tmp_2535mbj.__unittest_L32_C1() [0x427a79]\n??:?
    void tmp_2535mbj.__modtest() [0x427ba0]\n??:? int core.runtime.runModuleUnitTests().__foreachbody2(object.ModuleInfo*)
    [0x42bb43]\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)).__lambda2(immutable(object.ModuleInfo*))
    [0x42a9d6]\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))).__foreachbody2(ref
    rt.sections_elf_shared.DSO) [0x42fb69]\n??:? int rt.sections_elf_shared.DSO.opApply(scope
    int delegate(ref rt.sections_elf_shared.DSO)) [0x430018]\n??:? int rt.minfo.moduleinfos_apply(scope
    int delegate(immutable(object.ModuleInfo*))) [0x42faf5]\n??:? int object.ModuleInfo.opApply(scope
    int delegate(object.ModuleInfo*)) [0x42a9ad]\n??:? runModuleUnitTests [0x42b919]\n??:?
    void rt.dmain2._d_run_main(int, char**, extern (C) int function(char[][])*).runAll()
    [0x42826c]\n??:? void rt.dmain2._d_run_main(int, char**, extern (C) int function(char[][])*).tryExec(scope
    void delegate()) [0x4281f3]\n??:? _d_run_main [0x42815e]\n??:? main [0x427bb3]\n??:?
    __libc_start_main [0x6d7f3554]\n1/1 unittests FAILED\n'''
  stdout: b''
- exit_code: 1
  program: "import std.typecons;\nimport std.math;\n/*\nThis function takes two positive\
    \ numbers x and y and returns the\n    biggest even integer number that is in\
    \ the range [x, y] inclusive. If \n    there's no such number, then the function\
    \ should return -1.\n\n    For example:\n    >>> choose_num(12L, 15L)\n    14L\n\
    \    >>> choose_num(13L, 12L)\n    -1L\n    \n*/\nlong choose_num(long x, long\
    \ y) \n{\n    if (x > y)\n    {\n        return -1L;\n    }\n    else\n    {\n\
    \        long z = x;\n        while (z <= y)\n        {\n            if (z % 2\
    \ == 0)\n            {\n                return z;\n            }\n           \
    \ else\n            {\n                z++;\n            }\n        }\n      \
    \  return -1L;\n    }\n}\nunittest\n{\n    alias candidate = choose_num;\n\n \
    \   assert(candidate(12L, 15L) == 14L);\n    assert(candidate(13L, 12L) == -1L);\n\
    \    assert(candidate(33L, 12354L) == 12354L);\n    assert(candidate(5234L, 5233L)\
    \ == -1L);\n    assert(candidate(6L, 29L) == 28L);\n    assert(candidate(27L,\
    \ 10L) == -1L);\n    assert(candidate(7L, 7L) == -1L);\n    assert(candidate(546L,\
    \ 546L) == 546L);\n}\nvoid main(){}"
  status: Exception
  stderr: 'b''core.exception.AssertError@/tmp/tmp_ybsob_o.d(42): unittest failure\n----------------\n??:?
    _d_unittestp [0x427e25]\n??:? void tmp_ybsob_o.__unittest_L38_C1() [0x427a7d]\n??:?
    void tmp_ybsob_o.__modtest() [0x427ba4]\n??:? int core.runtime.runModuleUnitTests().__foreachbody2(object.ModuleInfo*)
    [0x42bb4b]\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)).__lambda2(immutable(object.ModuleInfo*))
    [0x42a9de]\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))).__foreachbody2(ref
    rt.sections_elf_shared.DSO) [0x42fb71]\n??:? int rt.sections_elf_shared.DSO.opApply(scope
    int delegate(ref rt.sections_elf_shared.DSO)) [0x430020]\n??:? int rt.minfo.moduleinfos_apply(scope
    int delegate(immutable(object.ModuleInfo*))) [0x42fafd]\n??:? int object.ModuleInfo.opApply(scope
    int delegate(object.ModuleInfo*)) [0x42a9b5]\n??:? runModuleUnitTests [0x42b921]\n??:?
    void rt.dmain2._d_run_main(int, char**, extern (C) int function(char[][])*).runAll()
    [0x428274]\n??:? void rt.dmain2._d_run_main(int, char**, extern (C) int function(char[][])*).tryExec(scope
    void delegate()) [0x4281fb]\n??:? _d_run_main [0x428166]\n??:? main [0x427bb7]\n??:?
    __libc_start_main [0x91ac4554]\n1/1 unittests FAILED\n'''
  stdout: b''
- exit_code: 1
  program: "import std.typecons;\nimport std.math;\n/*\nThis function takes two positive\
    \ numbers x and y and returns the\n    biggest even integer number that is in\
    \ the range [x, y] inclusive. If \n    there's no such number, then the function\
    \ should return -1.\n\n    For example:\n    >>> choose_num(12L, 15L)\n    14L\n\
    \    >>> choose_num(13L, 12L)\n    -1L\n    \n*/\nlong choose_num(long x, long\
    \ y) \n{\n    long result = -1;\n    if (x > y)\n    {\n        return result;\n\
    \    }\n    if (x % 2 == 0)\n    {\n        result = x;\n    }\n    else\n   \
    \ {\n        result = x + 1;\n    }\n    return result;\n}\nunittest\n{\n    alias\
    \ candidate = choose_num;\n\n    assert(candidate(12L, 15L) == 14L);\n    assert(candidate(13L,\
    \ 12L) == -1L);\n    assert(candidate(33L, 12354L) == 12354L);\n    assert(candidate(5234L,\
    \ 5233L) == -1L);\n    assert(candidate(6L, 29L) == 28L);\n    assert(candidate(27L,\
    \ 10L) == -1L);\n    assert(candidate(7L, 7L) == -1L);\n    assert(candidate(546L,\
    \ 546L) == 546L);\n}\nvoid main(){}"
  status: Exception
  stderr: 'b''core.exception.AssertError@/tmp/tmp8xntg2yd.d(36): unittest failure\n----------------\n??:?
    _d_unittestp [0x427e15]\n??:? void tmp8xntg2yd.__unittest_L32_C1() [0x427a71]\n??:?
    void tmp8xntg2yd.__modtest() [0x427b98]\n??:? int core.runtime.runModuleUnitTests().__foreachbody2(object.ModuleInfo*)
    [0x42bb3b]\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)).__lambda2(immutable(object.ModuleInfo*))
    [0x42a9ce]\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))).__foreachbody2(ref
    rt.sections_elf_shared.DSO) [0x42fb61]\n??:? int rt.sections_elf_shared.DSO.opApply(scope
    int delegate(ref rt.sections_elf_shared.DSO)) [0x430010]\n??:? int rt.minfo.moduleinfos_apply(scope
    int delegate(immutable(object.ModuleInfo*))) [0x42faed]\n??:? int object.ModuleInfo.opApply(scope
    int delegate(object.ModuleInfo*)) [0x42a9a5]\n??:? runModuleUnitTests [0x42b911]\n??:?
    void rt.dmain2._d_run_main(int, char**, extern (C) int function(char[][])*).runAll()
    [0x428264]\n??:? void rt.dmain2._d_run_main(int, char**, extern (C) int function(char[][])*).tryExec(scope
    void delegate()) [0x4281eb]\n??:? _d_run_main [0x428156]\n??:? main [0x427bab]\n??:?
    __libc_start_main [0x1b896554]\n1/1 unittests FAILED\n'''
  stdout: b''
- exit_code: 1
  program: "import std.typecons;\nimport std.math;\n/*\nThis function takes two positive\
    \ numbers x and y and returns the\n    biggest even integer number that is in\
    \ the range [x, y] inclusive. If \n    there's no such number, then the function\
    \ should return -1.\n\n    For example:\n    >>> choose_num(12L, 15L)\n    14L\n\
    \    >>> choose_num(13L, 12L)\n    -1L\n    \n*/\nlong choose_num(long x, long\
    \ y) \n{\n    long result = -1;\n    if (x % 2 == 0) {\n        result = x;\n\
    \    } else {\n        result = x + 1;\n    }\n    if (result > y) {\n       \
    \ result = -1;\n    }\n    return result;\n}\nunittest\n{\n    alias candidate\
    \ = choose_num;\n\n    assert(candidate(12L, 15L) == 14L);\n    assert(candidate(13L,\
    \ 12L) == -1L);\n    assert(candidate(33L, 12354L) == 12354L);\n    assert(candidate(5234L,\
    \ 5233L) == -1L);\n    assert(candidate(6L, 29L) == 28L);\n    assert(candidate(27L,\
    \ 10L) == -1L);\n    assert(candidate(7L, 7L) == -1L);\n    assert(candidate(546L,\
    \ 546L) == 546L);\n}\nvoid main(){}"
  status: Exception
  stderr: 'b''core.exception.AssertError@/tmp/tmpkiwx27jy.d(32): unittest failure\n----------------\n??:?
    _d_unittestp [0x427e1d]\n??:? void tmpkiwx27jy.__unittest_L28_C1() [0x427a79]\n??:?
    void tmpkiwx27jy.__modtest() [0x427ba0]\n??:? int core.runtime.runModuleUnitTests().__foreachbody2(object.ModuleInfo*)
    [0x42bb43]\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)).__lambda2(immutable(object.ModuleInfo*))
    [0x42a9d6]\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))).__foreachbody2(ref
    rt.sections_elf_shared.DSO) [0x42fb69]\n??:? int rt.sections_elf_shared.DSO.opApply(scope
    int delegate(ref rt.sections_elf_shared.DSO)) [0x430018]\n??:? int rt.minfo.moduleinfos_apply(scope
    int delegate(immutable(object.ModuleInfo*))) [0x42faf5]\n??:? int object.ModuleInfo.opApply(scope
    int delegate(object.ModuleInfo*)) [0x42a9ad]\n??:? runModuleUnitTests [0x42b919]\n??:?
    void rt.dmain2._d_run_main(int, char**, extern (C) int function(char[][])*).runAll()
    [0x42826c]\n??:? void rt.dmain2._d_run_main(int, char**, extern (C) int function(char[][])*).tryExec(scope
    void delegate()) [0x4281f3]\n??:? _d_run_main [0x42815e]\n??:? main [0x427bb3]\n??:?
    __libc_start_main [0x412cc554]\n1/1 unittests FAILED\n'''
  stdout: b''
- exit_code: 1
  program: "import std.typecons;\nimport std.math;\n/*\nThis function takes two positive\
    \ numbers x and y and returns the\n    biggest even integer number that is in\
    \ the range [x, y] inclusive. If \n    there's no such number, then the function\
    \ should return -1.\n\n    For example:\n    >>> choose_num(12L, 15L)\n    14L\n\
    \    >>> choose_num(13L, 12L)\n    -1L\n    \n*/\nlong choose_num(long x, long\
    \ y) \n{\n    long z = x;\n    while (z <= y)\n    {\n        if (z % 2 == 0)\n\
    \        {\n            return z;\n        }\n        z++;\n    }\n    return\
    \ -1;\n}\nunittest\n{\n    alias candidate = choose_num;\n\n    assert(candidate(12L,\
    \ 15L) == 14L);\n    assert(candidate(13L, 12L) == -1L);\n    assert(candidate(33L,\
    \ 12354L) == 12354L);\n    assert(candidate(5234L, 5233L) == -1L);\n    assert(candidate(6L,\
    \ 29L) == 28L);\n    assert(candidate(27L, 10L) == -1L);\n    assert(candidate(7L,\
    \ 7L) == -1L);\n    assert(candidate(546L, 546L) == 546L);\n}\nvoid main(){}"
  status: Exception
  stderr: 'b''core.exception.AssertError@/tmp/tmp2y0mo5k6.d(32): unittest failure\n----------------\n??:?
    _d_unittestp [0x427e15]\n??:? void tmp2y0mo5k6.__unittest_L28_C1() [0x427a71]\n??:?
    void tmp2y0mo5k6.__modtest() [0x427b98]\n??:? int core.runtime.runModuleUnitTests().__foreachbody2(object.ModuleInfo*)
    [0x42bb3b]\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)).__lambda2(immutable(object.ModuleInfo*))
    [0x42a9ce]\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))).__foreachbody2(ref
    rt.sections_elf_shared.DSO) [0x42fb61]\n??:? int rt.sections_elf_shared.DSO.opApply(scope
    int delegate(ref rt.sections_elf_shared.DSO)) [0x430010]\n??:? int rt.minfo.moduleinfos_apply(scope
    int delegate(immutable(object.ModuleInfo*))) [0x42faed]\n??:? int object.ModuleInfo.opApply(scope
    int delegate(object.ModuleInfo*)) [0x42a9a5]\n??:? runModuleUnitTests [0x42b911]\n??:?
    void rt.dmain2._d_run_main(int, char**, extern (C) int function(char[][])*).runAll()
    [0x428264]\n??:? void rt.dmain2._d_run_main(int, char**, extern (C) int function(char[][])*).tryExec(scope
    void delegate()) [0x4281eb]\n??:? _d_run_main [0x428156]\n??:? main [0x427bab]\n??:?
    __libc_start_main [0x520c1554]\n1/1 unittests FAILED\n'''
  stdout: b''
- exit_code: 1
  program: "import std.typecons;\nimport std.math;\n/*\nThis function takes two positive\
    \ numbers x and y and returns the\n    biggest even integer number that is in\
    \ the range [x, y] inclusive. If \n    there's no such number, then the function\
    \ should return -1.\n\n    For example:\n    >>> choose_num(12L, 15L)\n    14L\n\
    \    >>> choose_num(13L, 12L)\n    -1L\n    \n*/\nlong choose_num(long x, long\
    \ y) \n{\n    static assert(x >= 0L);\n    static assert(y >= 0L);\n    static\
    \ assert(x <= y);\n    long z = y;\n    while (z >= x)\n    {\n        if (z %\
    \ 2L == 0L)\n        {\n            return z;\n        }\n        z--;\n    }\n\
    \    return -1L;\n}\nunittest\n{\n    alias candidate = choose_num;\n\n    assert(candidate(12L,\
    \ 15L) == 14L);\n    assert(candidate(13L, 12L) == -1L);\n    assert(candidate(33L,\
    \ 12354L) == 12354L);\n    assert(candidate(5234L, 5233L) == -1L);\n    assert(candidate(6L,\
    \ 29L) == 28L);\n    assert(candidate(27L, 10L) == -1L);\n    assert(candidate(7L,\
    \ 7L) == -1L);\n    assert(candidate(546L, 546L) == 546L);\n}\nvoid main(){}"
  status: SyntaxError
  stderr: 'b''/tmp/tmp308xjwge.d(17): Error: variable `x` cannot be read at compile
    time\n/tmp/tmp308xjwge.d(17):        while evaluating: `static assert(x >= 0L)`\n/tmp/tmp308xjwge.d(18):
    Error: variable `y` cannot be read at compile time\n/tmp/tmp308xjwge.d(18):        while
    evaluating: `static assert(y >= 0L)`\n/tmp/tmp308xjwge.d(19): Error: variable
    `x` cannot be read at compile time\n/tmp/tmp308xjwge.d(19):        while evaluating:
    `static assert(x <= y)`\nFailed: ["dmd", "-unittest", "-v", "-o-", "/tmp/tmp308xjwge.d",
    "-I/tmp"]\n'''
  stdout: b''
- exit_code: 1
  program: "import std.typecons;\nimport std.math;\n/*\nThis function takes two positive\
    \ numbers x and y and returns the\n    biggest even integer number that is in\
    \ the range [x, y] inclusive. If \n    there's no such number, then the function\
    \ should return -1.\n\n    For example:\n    >>> choose_num(12L, 15L)\n    14L\n\
    \    >>> choose_num(13L, 12L)\n    -1L\n    \n*/\nlong choose_num(long x, long\
    \ y) \n{\n    long result = -1;\n    if (x % 2 == 0)\n    {\n        result =\
    \ x;\n    }\n    else\n    {\n        result = x + 1;\n    }\n    if (result >\
    \ y)\n    {\n        result = -1;\n    }\n    return result;\n}\nunittest\n{\n\
    \    alias candidate = choose_num;\n\n    assert(candidate(12L, 15L) == 14L);\n\
    \    assert(candidate(13L, 12L) == -1L);\n    assert(candidate(33L, 12354L) ==\
    \ 12354L);\n    assert(candidate(5234L, 5233L) == -1L);\n    assert(candidate(6L,\
    \ 29L) == 28L);\n    assert(candidate(27L, 10L) == -1L);\n    assert(candidate(7L,\
    \ 7L) == -1L);\n    assert(candidate(546L, 546L) == 546L);\n}\nvoid main(){}"
  status: Exception
  stderr: 'b''core.exception.AssertError@/tmp/tmpigxyzbx6.d(36): unittest failure\n----------------\n??:?
    _d_unittestp [0x427e1d]\n??:? void tmpigxyzbx6.__unittest_L32_C1() [0x427a79]\n??:?
    void tmpigxyzbx6.__modtest() [0x427ba0]\n??:? int core.runtime.runModuleUnitTests().__foreachbody2(object.ModuleInfo*)
    [0x42bb43]\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)).__lambda2(immutable(object.ModuleInfo*))
    [0x42a9d6]\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))).__foreachbody2(ref
    rt.sections_elf_shared.DSO) [0x42fb69]\n??:? int rt.sections_elf_shared.DSO.opApply(scope
    int delegate(ref rt.sections_elf_shared.DSO)) [0x430018]\n??:? int rt.minfo.moduleinfos_apply(scope
    int delegate(immutable(object.ModuleInfo*))) [0x42faf5]\n??:? int object.ModuleInfo.opApply(scope
    int delegate(object.ModuleInfo*)) [0x42a9ad]\n??:? runModuleUnitTests [0x42b919]\n??:?
    void rt.dmain2._d_run_main(int, char**, extern (C) int function(char[][])*).runAll()
    [0x42826c]\n??:? void rt.dmain2._d_run_main(int, char**, extern (C) int function(char[][])*).tryExec(scope
    void delegate()) [0x4281f3]\n??:? _d_run_main [0x42815e]\n??:? main [0x427bb3]\n??:?
    __libc_start_main [0x528cc554]\n1/1 unittests FAILED\n'''
  stdout: b''
- exit_code: 1
  program: "import std.typecons;\nimport std.math;\n/*\nThis function takes two positive\
    \ numbers x and y and returns the\n    biggest even integer number that is in\
    \ the range [x, y] inclusive. If \n    there's no such number, then the function\
    \ should return -1.\n\n    For example:\n    >>> choose_num(12L, 15L)\n    14L\n\
    \    >>> choose_num(13L, 12L)\n    -1L\n    \n*/\nlong choose_num(long x, long\
    \ y) \n{\n    if (x > y)\n        return -1;\n    else\n    {\n        long z\
    \ = x % 2;\n        if (z == 0)\n            return x;\n        else\n       \
    \     return x + 1;\n    }\n}\nunittest\n{\n    alias candidate = choose_num;\n\
    \n    assert(candidate(12L, 15L) == 14L);\n    assert(candidate(13L, 12L) == -1L);\n\
    \    assert(candidate(33L, 12354L) == 12354L);\n    assert(candidate(5234L, 5233L)\
    \ == -1L);\n    assert(candidate(6L, 29L) == 28L);\n    assert(candidate(27L,\
    \ 10L) == -1L);\n    assert(candidate(7L, 7L) == -1L);\n    assert(candidate(546L,\
    \ 546L) == 546L);\n}\nvoid main(){}"
  status: Exception
  stderr: 'b''core.exception.AssertError@/tmp/tmplws83vdc.d(32): unittest failure\n----------------\n??:?
    _d_unittestp [0x427e05]\n??:? void tmplws83vdc.__unittest_L28_C1() [0x427a61]\n??:?
    void tmplws83vdc.__modtest() [0x427b88]\n??:? int core.runtime.runModuleUnitTests().__foreachbody2(object.ModuleInfo*)
    [0x42bb2b]\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)).__lambda2(immutable(object.ModuleInfo*))
    [0x42a9be]\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))).__foreachbody2(ref
    rt.sections_elf_shared.DSO) [0x42fb51]\n??:? int rt.sections_elf_shared.DSO.opApply(scope
    int delegate(ref rt.sections_elf_shared.DSO)) [0x430000]\n??:? int rt.minfo.moduleinfos_apply(scope
    int delegate(immutable(object.ModuleInfo*))) [0x42fadd]\n??:? int object.ModuleInfo.opApply(scope
    int delegate(object.ModuleInfo*)) [0x42a995]\n??:? runModuleUnitTests [0x42b901]\n??:?
    void rt.dmain2._d_run_main(int, char**, extern (C) int function(char[][])*).runAll()
    [0x428254]\n??:? void rt.dmain2._d_run_main(int, char**, extern (C) int function(char[][])*).tryExec(scope
    void delegate()) [0x4281db]\n??:? _d_run_main [0x428146]\n??:? main [0x427b9b]\n??:?
    __libc_start_main [0x76a9b554]\n1/1 unittests FAILED\n'''
  stdout: b''
- exit_code: 1
  program: "import std.typecons;\nimport std.math;\n/*\nThis function takes two positive\
    \ numbers x and y and returns the\n    biggest even integer number that is in\
    \ the range [x, y] inclusive. If \n    there's no such number, then the function\
    \ should return -1.\n\n    For example:\n    >>> choose_num(12L, 15L)\n    14L\n\
    \    >>> choose_num(13L, 12L)\n    -1L\n    \n*/\nlong choose_num(long x, long\
    \ y) \n{\n    long result = -1;\n    if (x > y)\n    {\n        return result;\n\
    \    }\n    else if (x % 2 == 0)\n    {\n        result = x;\n    }\n    else\n\
    \    {\n        result = x + 1;\n    }\n    return result;\n}\nunittest\n{\n \
    \   alias candidate = choose_num;\n\n    assert(candidate(12L, 15L) == 14L);\n\
    \    assert(candidate(13L, 12L) == -1L);\n    assert(candidate(33L, 12354L) ==\
    \ 12354L);\n    assert(candidate(5234L, 5233L) == -1L);\n    assert(candidate(6L,\
    \ 29L) == 28L);\n    assert(candidate(27L, 10L) == -1L);\n    assert(candidate(7L,\
    \ 7L) == -1L);\n    assert(candidate(546L, 546L) == 546L);\n}\nvoid main(){}"
  status: Exception
  stderr: 'b''core.exception.AssertError@/tmp/tmp2sog97ay.d(36): unittest failure\n----------------\n??:?
    _d_unittestp [0x427e15]\n??:? void tmp2sog97ay.__unittest_L32_C1() [0x427a71]\n??:?
    void tmp2sog97ay.__modtest() [0x427b98]\n??:? int core.runtime.runModuleUnitTests().__foreachbody2(object.ModuleInfo*)
    [0x42bb3b]\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)).__lambda2(immutable(object.ModuleInfo*))
    [0x42a9ce]\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))).__foreachbody2(ref
    rt.sections_elf_shared.DSO) [0x42fb61]\n??:? int rt.sections_elf_shared.DSO.opApply(scope
    int delegate(ref rt.sections_elf_shared.DSO)) [0x430010]\n??:? int rt.minfo.moduleinfos_apply(scope
    int delegate(immutable(object.ModuleInfo*))) [0x42faed]\n??:? int object.ModuleInfo.opApply(scope
    int delegate(object.ModuleInfo*)) [0x42a9a5]\n??:? runModuleUnitTests [0x42b911]\n??:?
    void rt.dmain2._d_run_main(int, char**, extern (C) int function(char[][])*).runAll()
    [0x428264]\n??:? void rt.dmain2._d_run_main(int, char**, extern (C) int function(char[][])*).tryExec(scope
    void delegate()) [0x4281eb]\n??:? _d_run_main [0x428156]\n??:? main [0x427bab]\n??:?
    __libc_start_main [0x2e3e4554]\n1/1 unittests FAILED\n'''
  stdout: b''
- exit_code: 0
  program: "import std.typecons;\nimport std.math;\n/*\nThis function takes two positive\
    \ numbers x and y and returns the\n    biggest even integer number that is in\
    \ the range [x, y] inclusive. If \n    there's no such number, then the function\
    \ should return -1.\n\n    For example:\n    >>> choose_num(12L, 15L)\n    14L\n\
    \    >>> choose_num(13L, 12L)\n    -1L\n    \n*/\nlong choose_num(long x, long\
    \ y) \n{\n    long result = -1;\n    if (x > y)\n    {\n        return result;\n\
    \    }\n    else\n    {\n        for (long i = x; i <= y; i++)\n        {\n  \
    \          if (i % 2 == 0)\n            {\n                result = i;\n     \
    \       }\n        }\n    }\n    return result;\n}\nunittest\n{\n    alias candidate\
    \ = choose_num;\n\n    assert(candidate(12L, 15L) == 14L);\n    assert(candidate(13L,\
    \ 12L) == -1L);\n    assert(candidate(33L, 12354L) == 12354L);\n    assert(candidate(5234L,\
    \ 5233L) == -1L);\n    assert(candidate(6L, 29L) == 28L);\n    assert(candidate(27L,\
    \ 10L) == -1L);\n    assert(candidate(7L, 7L) == -1L);\n    assert(candidate(546L,\
    \ 546L) == 546L);\n}\nvoid main(){}"
  status: OK
  stderr: b''
  stdout: b''
- exit_code: 1
  program: "import std.typecons;\nimport std.math;\n/*\nThis function takes two positive\
    \ numbers x and y and returns the\n    biggest even integer number that is in\
    \ the range [x, y] inclusive. If \n    there's no such number, then the function\
    \ should return -1.\n\n    For example:\n    >>> choose_num(12L, 15L)\n    14L\n\
    \    >>> choose_num(13L, 12L)\n    -1L\n    \n*/\nlong choose_num(long x, long\
    \ y) \n{\n    if (x > y)\n    {\n        return -1L;\n    }\n    else\n    {\n\
    \        long z = x;\n        while (z <= y)\n        {\n            if (z % 2\
    \ == 0)\n            {\n                return z;\n            }\n           \
    \ else\n            {\n                z = z + 1;\n            }\n        }\n\
    \        return -1L;\n    }\n}\nunittest\n{\n    alias candidate = choose_num;\n\
    \n    assert(candidate(12L, 15L) == 14L);\n    assert(candidate(13L, 12L) == -1L);\n\
    \    assert(candidate(33L, 12354L) == 12354L);\n    assert(candidate(5234L, 5233L)\
    \ == -1L);\n    assert(candidate(6L, 29L) == 28L);\n    assert(candidate(27L,\
    \ 10L) == -1L);\n    assert(candidate(7L, 7L) == -1L);\n    assert(candidate(546L,\
    \ 546L) == 546L);\n}\nvoid main(){}"
  status: Exception
  stderr: 'b''core.exception.AssertError@/tmp/tmplgzfu50b.d(42): unittest failure\n----------------\n??:?
    _d_unittestp [0x427e2d]\n??:? void tmplgzfu50b.__unittest_L38_C1() [0x427a85]\n??:?
    void tmplgzfu50b.__modtest() [0x427bac]\n??:? int core.runtime.runModuleUnitTests().__foreachbody2(object.ModuleInfo*)
    [0x42bb53]\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)).__lambda2(immutable(object.ModuleInfo*))
    [0x42a9e6]\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))).__foreachbody2(ref
    rt.sections_elf_shared.DSO) [0x42fb79]\n??:? int rt.sections_elf_shared.DSO.opApply(scope
    int delegate(ref rt.sections_elf_shared.DSO)) [0x430028]\n??:? int rt.minfo.moduleinfos_apply(scope
    int delegate(immutable(object.ModuleInfo*))) [0x42fb05]\n??:? int object.ModuleInfo.opApply(scope
    int delegate(object.ModuleInfo*)) [0x42a9bd]\n??:? runModuleUnitTests [0x42b929]\n??:?
    void rt.dmain2._d_run_main(int, char**, extern (C) int function(char[][])*).runAll()
    [0x42827c]\n??:? void rt.dmain2._d_run_main(int, char**, extern (C) int function(char[][])*).tryExec(scope
    void delegate()) [0x428203]\n??:? _d_run_main [0x42816e]\n??:? main [0x427bbf]\n??:?
    __libc_start_main [0xd72f3554]\n1/1 unittests FAILED\n'''
  stdout: b''
- exit_code: 1
  program: "import std.typecons;\nimport std.math;\n/*\nThis function takes two positive\
    \ numbers x and y and returns the\n    biggest even integer number that is in\
    \ the range [x, y] inclusive. If \n    there's no such number, then the function\
    \ should return -1.\n\n    For example:\n    >>> choose_num(12L, 15L)\n    14L\n\
    \    >>> choose_num(13L, 12L)\n    -1L\n    \n*/\nlong choose_num(long x, long\
    \ y) \n{\n    long result = -1;\n    if (x % 2 == 0) \n    {\n        result =\
    \ x;\n    }\n    else \n    {\n        result = x + 1;\n    }\n    if (result\
    \ > y) \n    {\n        result = -1;\n    }\n    return result;\n}\n/*\nThis function\
    \ takes a positive number x and returns the biggest\n    odd integer number that\
    \ is in the range [1, x] inclusive. If there's no\n    such number, then the function\
    \ should return -1.\nunittest\n{\n    alias candidate = choose_num;\n\n    assert(candidate(12L,\
    \ 15L) == 14L);\n    assert(candidate(13L, 12L) == -1L);\n    assert(candidate(33L,\
    \ 12354L) == 12354L);\n    assert(candidate(5234L, 5233L) == -1L);\n    assert(candidate(6L,\
    \ 29L) == 28L);\n    assert(candidate(27L, 10L) == -1L);\n    assert(candidate(7L,\
    \ 7L) == -1L);\n    assert(candidate(546L, 546L) == 546L);\n}\nvoid main(){}"
  status: SyntaxError
  stderr: 'b''/tmp/tmpvafjpypc.d(32): Error: unterminated /* */ comment\nFailed: ["dmd",
    "-unittest", "-v", "-o-", "/tmp/tmpvafjpypc.d", "-I/tmp"]\n'''
  stdout: b''
- exit_code: 1
  program: "import std.typecons;\nimport std.math;\n/*\nThis function takes two positive\
    \ numbers x and y and returns the\n    biggest even integer number that is in\
    \ the range [x, y] inclusive. If \n    there's no such number, then the function\
    \ should return -1.\n\n    For example:\n    >>> choose_num(12L, 15L)\n    14L\n\
    \    >>> choose_num(13L, 12L)\n    -1L\n    \n*/\nlong choose_num(long x, long\
    \ y) \n{\n    long result = -1;\n    if (x % 2 == 0)\n    {\n        result =\
    \ x;\n    }\n    else if (x+1 <= y)\n    {\n        result = x+1;\n    }\n   \
    \ return result;\n}\nunittest\n{\n    alias candidate = choose_num;\n\n    assert(candidate(12L,\
    \ 15L) == 14L);\n    assert(candidate(13L, 12L) == -1L);\n    assert(candidate(33L,\
    \ 12354L) == 12354L);\n    assert(candidate(5234L, 5233L) == -1L);\n    assert(candidate(6L,\
    \ 29L) == 28L);\n    assert(candidate(27L, 10L) == -1L);\n    assert(candidate(7L,\
    \ 7L) == -1L);\n    assert(candidate(546L, 546L) == 546L);\n}\nvoid main(){}"
  status: Exception
  stderr: 'b''core.exception.AssertError@/tmp/tmp5ym2dh9f.d(32): unittest failure\n----------------\n??:?
    _d_unittestp [0x427e1d]\n??:? void tmp5ym2dh9f.__unittest_L28_C1() [0x427a75]\n??:?
    void tmp5ym2dh9f.__modtest() [0x427b9c]\n??:? int core.runtime.runModuleUnitTests().__foreachbody2(object.ModuleInfo*)
    [0x42bb43]\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)).__lambda2(immutable(object.ModuleInfo*))
    [0x42a9d6]\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))).__foreachbody2(ref
    rt.sections_elf_shared.DSO) [0x42fb69]\n??:? int rt.sections_elf_shared.DSO.opApply(scope
    int delegate(ref rt.sections_elf_shared.DSO)) [0x430018]\n??:? int rt.minfo.moduleinfos_apply(scope
    int delegate(immutable(object.ModuleInfo*))) [0x42faf5]\n??:? int object.ModuleInfo.opApply(scope
    int delegate(object.ModuleInfo*)) [0x42a9ad]\n??:? runModuleUnitTests [0x42b919]\n??:?
    void rt.dmain2._d_run_main(int, char**, extern (C) int function(char[][])*).runAll()
    [0x42826c]\n??:? void rt.dmain2._d_run_main(int, char**, extern (C) int function(char[][])*).tryExec(scope
    void delegate()) [0x4281f3]\n??:? _d_run_main [0x42815e]\n??:? main [0x427baf]\n??:?
    __libc_start_main [0x2835c554]\n1/1 unittests FAILED\n'''
  stdout: b''
- exit_code: 1
  program: "import std.typecons;\nimport std.math;\n/*\nThis function takes two positive\
    \ numbers x and y and returns the\n    biggest even integer number that is in\
    \ the range [x, y] inclusive. If \n    there's no such number, then the function\
    \ should return -1.\n\n    For example:\n    >>> choose_num(12L, 15L)\n    14L\n\
    \    >>> choose_num(13L, 12L)\n    -1L\n    \n*/\nlong choose_num(long x, long\
    \ y) \n{\n    long[] nums = new long[y-x+1];\n    long i = 0;\n    foreach(num;\
    \ x..y+1)\n    {\n        nums[i] = num;\n        i++;\n    }\n    foreach(num;\
    \ nums)\n    {\n        if(num % 2 == 0)\n        {\n            return num;\n\
    \        }\n    }\n    return -1;\n}\nunittest\n{\n    alias candidate = choose_num;\n\
    \n    assert(candidate(12L, 15L) == 14L);\n    assert(candidate(13L, 12L) == -1L);\n\
    \    assert(candidate(33L, 12354L) == 12354L);\n    assert(candidate(5234L, 5233L)\
    \ == -1L);\n    assert(candidate(6L, 29L) == 28L);\n    assert(candidate(27L,\
    \ 10L) == -1L);\n    assert(candidate(7L, 7L) == -1L);\n    assert(candidate(546L,\
    \ 546L) == 546L);\n}\nvoid main(){}"
  status: Exception
  stderr: 'b''core.exception.AssertError@/tmp/tmp27x2oxiy.d(37): unittest failure\n----------------\n??:?
    _d_unittestp [0x42817d]\n??:? void tmp27x2oxiy.__unittest_L33_C1() [0x427dd5]\n??:?
    void tmp27x2oxiy.__modtest() [0x427efc]\n??:? int core.runtime.runModuleUnitTests().__foreachbody2(object.ModuleInfo*)
    [0x42c17b]\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)).__lambda2(immutable(object.ModuleInfo*))
    [0x42b00e]\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))).__foreachbody2(ref
    rt.sections_elf_shared.DSO) [0x430299]\n??:? int rt.sections_elf_shared.DSO.opApply(scope
    int delegate(ref rt.sections_elf_shared.DSO)) [0x430748]\n??:? int rt.minfo.moduleinfos_apply(scope
    int delegate(immutable(object.ModuleInfo*))) [0x430225]\n??:? int object.ModuleInfo.opApply(scope
    int delegate(object.ModuleInfo*)) [0x42afe5]\n??:? runModuleUnitTests [0x42bf51]\n??:?
    void rt.dmain2._d_run_main(int, char**, extern (C) int function(char[][])*).runAll()
    [0x428640]\n??:? void rt.dmain2._d_run_main(int, char**, extern (C) int function(char[][])*).tryExec(scope
    void delegate()) [0x4285c7]\n??:? _d_run_main [0x428532]\n??:? main [0x427f0f]\n??:?
    __libc_start_main [0x96624554]\n1/1 unittests FAILED\n'''
  stdout: b''
- exit_code: 1
  program: "import std.typecons;\nimport std.math;\n/*\nThis function takes two positive\
    \ numbers x and y and returns the\n    biggest even integer number that is in\
    \ the range [x, y] inclusive. If \n    there's no such number, then the function\
    \ should return -1.\n\n    For example:\n    >>> choose_num(12L, 15L)\n    14L\n\
    \    >>> choose_num(13L, 12L)\n    -1L\n    \n*/\nlong choose_num(long x, long\
    \ y) \n{\n    long result = -1;\n    if (x % 2 == 0)\n    {\n        result =\
    \ x;\n    }\n    else\n    {\n        result = x + 1;\n    }\n    if (result >\
    \ y)\n    {\n        result = -1;\n    }\n    return result;\n}\nunittest\n{\n\
    \    alias candidate = choose_num;\n\n    assert(candidate(12L, 15L) == 14L);\n\
    \    assert(candidate(13L, 12L) == -1L);\n    assert(candidate(33L, 12354L) ==\
    \ 12354L);\n    assert(candidate(5234L, 5233L) == -1L);\n    assert(candidate(6L,\
    \ 29L) == 28L);\n    assert(candidate(27L, 10L) == -1L);\n    assert(candidate(7L,\
    \ 7L) == -1L);\n    assert(candidate(546L, 546L) == 546L);\n}\nvoid main(){}"
  status: Exception
  stderr: 'b''core.exception.AssertError@/tmp/tmpigxyzbx6.d(36): unittest failure\n----------------\n??:?
    _d_unittestp [0x427e1d]\n??:? void tmpigxyzbx6.__unittest_L32_C1() [0x427a79]\n??:?
    void tmpigxyzbx6.__modtest() [0x427ba0]\n??:? int core.runtime.runModuleUnitTests().__foreachbody2(object.ModuleInfo*)
    [0x42bb43]\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)).__lambda2(immutable(object.ModuleInfo*))
    [0x42a9d6]\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))).__foreachbody2(ref
    rt.sections_elf_shared.DSO) [0x42fb69]\n??:? int rt.sections_elf_shared.DSO.opApply(scope
    int delegate(ref rt.sections_elf_shared.DSO)) [0x430018]\n??:? int rt.minfo.moduleinfos_apply(scope
    int delegate(immutable(object.ModuleInfo*))) [0x42faf5]\n??:? int object.ModuleInfo.opApply(scope
    int delegate(object.ModuleInfo*)) [0x42a9ad]\n??:? runModuleUnitTests [0x42b919]\n??:?
    void rt.dmain2._d_run_main(int, char**, extern (C) int function(char[][])*).runAll()
    [0x42826c]\n??:? void rt.dmain2._d_run_main(int, char**, extern (C) int function(char[][])*).tryExec(scope
    void delegate()) [0x4281f3]\n??:? _d_run_main [0x42815e]\n??:? main [0x427bb3]\n??:?
    __libc_start_main [0x528cc554]\n1/1 unittests FAILED\n'''
  stdout: b''
- exit_code: 1
  program: "import std.typecons;\nimport std.math;\n/*\nThis function takes two positive\
    \ numbers x and y and returns the\n    biggest even integer number that is in\
    \ the range [x, y] inclusive. If \n    there's no such number, then the function\
    \ should return -1.\n\n    For example:\n    >>> choose_num(12L, 15L)\n    14L\n\
    \    >>> choose_num(13L, 12L)\n    -1L\n    \n*/\nlong choose_num(long x, long\
    \ y) \n{\n    long result = -1;\n    if (x % 2 == 0)\n    {\n        result =\
    \ x;\n    }\n    else\n    {\n        result = x + 1;\n    }\n    if (result >\
    \ y)\n    {\n        result = -1;\n    }\n    return result;\n}\nunittest\n{\n\
    \    alias candidate = choose_num;\n\n    assert(candidate(12L, 15L) == 14L);\n\
    \    assert(candidate(13L, 12L) == -1L);\n    assert(candidate(33L, 12354L) ==\
    \ 12354L);\n    assert(candidate(5234L, 5233L) == -1L);\n    assert(candidate(6L,\
    \ 29L) == 28L);\n    assert(candidate(27L, 10L) == -1L);\n    assert(candidate(7L,\
    \ 7L) == -1L);\n    assert(candidate(546L, 546L) == 546L);\n}\nvoid main(){}"
  status: Exception
  stderr: 'b''core.exception.AssertError@/tmp/tmpigxyzbx6.d(36): unittest failure\n----------------\n??:?
    _d_unittestp [0x427e1d]\n??:? void tmpigxyzbx6.__unittest_L32_C1() [0x427a79]\n??:?
    void tmpigxyzbx6.__modtest() [0x427ba0]\n??:? int core.runtime.runModuleUnitTests().__foreachbody2(object.ModuleInfo*)
    [0x42bb43]\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)).__lambda2(immutable(object.ModuleInfo*))
    [0x42a9d6]\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))).__foreachbody2(ref
    rt.sections_elf_shared.DSO) [0x42fb69]\n??:? int rt.sections_elf_shared.DSO.opApply(scope
    int delegate(ref rt.sections_elf_shared.DSO)) [0x430018]\n??:? int rt.minfo.moduleinfos_apply(scope
    int delegate(immutable(object.ModuleInfo*))) [0x42faf5]\n??:? int object.ModuleInfo.opApply(scope
    int delegate(object.ModuleInfo*)) [0x42a9ad]\n??:? runModuleUnitTests [0x42b919]\n??:?
    void rt.dmain2._d_run_main(int, char**, extern (C) int function(char[][])*).runAll()
    [0x42826c]\n??:? void rt.dmain2._d_run_main(int, char**, extern (C) int function(char[][])*).tryExec(scope
    void delegate()) [0x4281f3]\n??:? _d_run_main [0x42815e]\n??:? main [0x427bb3]\n??:?
    __libc_start_main [0x528cc554]\n1/1 unittests FAILED\n'''
  stdout: b''
- exit_code: 1
  program: "import std.typecons;\nimport std.math;\n/*\nThis function takes two positive\
    \ numbers x and y and returns the\n    biggest even integer number that is in\
    \ the range [x, y] inclusive. If \n    there's no such number, then the function\
    \ should return -1.\n\n    For example:\n    >>> choose_num(12L, 15L)\n    14L\n\
    \    >>> choose_num(13L, 12L)\n    -1L\n    \n*/\nlong choose_num(long x, long\
    \ y) \n{\n    if(x % 2 == 0)\n    {\n        return x;\n    }\n    else if(y %\
    \ 2 == 0)\n    {\n        return y;\n    }\n    else\n    {\n        return -1;\n\
    \    }\n}\nunittest\n{\n    alias candidate = choose_num;\n\n    assert(candidate(12L,\
    \ 15L) == 14L);\n    assert(candidate(13L, 12L) == -1L);\n    assert(candidate(33L,\
    \ 12354L) == 12354L);\n    assert(candidate(5234L, 5233L) == -1L);\n    assert(candidate(6L,\
    \ 29L) == 28L);\n    assert(candidate(27L, 10L) == -1L);\n    assert(candidate(7L,\
    \ 7L) == -1L);\n    assert(candidate(546L, 546L) == 546L);\n}\nvoid main(){}"
  status: Exception
  stderr: 'b''core.exception.AssertError@/tmp/tmp9p1vzxqo.d(34): unittest failure\n----------------\n??:?
    _d_unittestp [0x427e15]\n??:? void tmp9p1vzxqo.__unittest_L30_C1() [0x427a6d]\n??:?
    void tmp9p1vzxqo.__modtest() [0x427b94]\n??:? int core.runtime.runModuleUnitTests().__foreachbody2(object.ModuleInfo*)
    [0x42bb3b]\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)).__lambda2(immutable(object.ModuleInfo*))
    [0x42a9ce]\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))).__foreachbody2(ref
    rt.sections_elf_shared.DSO) [0x42fb61]\n??:? int rt.sections_elf_shared.DSO.opApply(scope
    int delegate(ref rt.sections_elf_shared.DSO)) [0x430010]\n??:? int rt.minfo.moduleinfos_apply(scope
    int delegate(immutable(object.ModuleInfo*))) [0x42faed]\n??:? int object.ModuleInfo.opApply(scope
    int delegate(object.ModuleInfo*)) [0x42a9a5]\n??:? runModuleUnitTests [0x42b911]\n??:?
    void rt.dmain2._d_run_main(int, char**, extern (C) int function(char[][])*).runAll()
    [0x428264]\n??:? void rt.dmain2._d_run_main(int, char**, extern (C) int function(char[][])*).tryExec(scope
    void delegate()) [0x4281eb]\n??:? _d_run_main [0x428156]\n??:? main [0x427ba7]\n??:?
    __libc_start_main [0xe01a3554]\n1/1 unittests FAILED\n'''
  stdout: b''
- exit_code: 1
  program: "import std.typecons;\nimport std.math;\n/*\nThis function takes two positive\
    \ numbers x and y and returns the\n    biggest even integer number that is in\
    \ the range [x, y] inclusive. If \n    there's no such number, then the function\
    \ should return -1.\n\n    For example:\n    >>> choose_num(12L, 15L)\n    14L\n\
    \    >>> choose_num(13L, 12L)\n    -1L\n    \n*/\nlong choose_num(long x, long\
    \ y) \n{\n    // your code here\n    long result = -1;\n    if (x % 2 == 0)\n\
    \    {\n        result = x;\n    }\n    else\n    {\n        result = x + 1;\n\
    \    }\n    if (result > y)\n    {\n        result = -1;\n    }\n    return result;\n\
    }\nunittest\n{\n    alias candidate = choose_num;\n\n    assert(candidate(12L,\
    \ 15L) == 14L);\n    assert(candidate(13L, 12L) == -1L);\n    assert(candidate(33L,\
    \ 12354L) == 12354L);\n    assert(candidate(5234L, 5233L) == -1L);\n    assert(candidate(6L,\
    \ 29L) == 28L);\n    assert(candidate(27L, 10L) == -1L);\n    assert(candidate(7L,\
    \ 7L) == -1L);\n    assert(candidate(546L, 546L) == 546L);\n}\nvoid main(){}"
  status: Exception
  stderr: 'b''core.exception.AssertError@/tmp/tmpsewmhoxw.d(37): unittest failure\n----------------\n??:?
    _d_unittestp [0x427e1d]\n??:? void tmpsewmhoxw.__unittest_L33_C1() [0x427a79]\n??:?
    void tmpsewmhoxw.__modtest() [0x427ba0]\n??:? int core.runtime.runModuleUnitTests().__foreachbody2(object.ModuleInfo*)
    [0x42bb43]\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)).__lambda2(immutable(object.ModuleInfo*))
    [0x42a9d6]\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))).__foreachbody2(ref
    rt.sections_elf_shared.DSO) [0x42fb69]\n??:? int rt.sections_elf_shared.DSO.opApply(scope
    int delegate(ref rt.sections_elf_shared.DSO)) [0x430018]\n??:? int rt.minfo.moduleinfos_apply(scope
    int delegate(immutable(object.ModuleInfo*))) [0x42faf5]\n??:? int object.ModuleInfo.opApply(scope
    int delegate(object.ModuleInfo*)) [0x42a9ad]\n??:? runModuleUnitTests [0x42b919]\n??:?
    void rt.dmain2._d_run_main(int, char**, extern (C) int function(char[][])*).runAll()
    [0x42826c]\n??:? void rt.dmain2._d_run_main(int, char**, extern (C) int function(char[][])*).tryExec(scope
    void delegate()) [0x4281f3]\n??:? _d_run_main [0x42815e]\n??:? main [0x427bb3]\n??:?
    __libc_start_main [0x79b7b554]\n1/1 unittests FAILED\n'''
  stdout: b''
- exit_code: 1
  program: "import std.typecons;\nimport std.math;\n/*\nThis function takes two positive\
    \ numbers x and y and returns the\n    biggest even integer number that is in\
    \ the range [x, y] inclusive. If \n    there's no such number, then the function\
    \ should return -1.\n\n    For example:\n    >>> choose_num(12L, 15L)\n    14L\n\
    \    >>> choose_num(13L, 12L)\n    -1L\n    \n*/\nlong choose_num(long x, long\
    \ y) \n{\n    long z = x;\n    while (z <= y)\n    {\n        if (z % 2 == 0)\n\
    \        {\n            return z;\n        }\n        z++;\n    }\n    return\
    \ -1;\n}\nunittest\n{\n    alias candidate = choose_num;\n\n    assert(candidate(12L,\
    \ 15L) == 14L);\n    assert(candidate(13L, 12L) == -1L);\n    assert(candidate(33L,\
    \ 12354L) == 12354L);\n    assert(candidate(5234L, 5233L) == -1L);\n    assert(candidate(6L,\
    \ 29L) == 28L);\n    assert(candidate(27L, 10L) == -1L);\n    assert(candidate(7L,\
    \ 7L) == -1L);\n    assert(candidate(546L, 546L) == 546L);\n}\nvoid main(){}"
  status: Exception
  stderr: 'b''core.exception.AssertError@/tmp/tmp2y0mo5k6.d(32): unittest failure\n----------------\n??:?
    _d_unittestp [0x427e15]\n??:? void tmp2y0mo5k6.__unittest_L28_C1() [0x427a71]\n??:?
    void tmp2y0mo5k6.__modtest() [0x427b98]\n??:? int core.runtime.runModuleUnitTests().__foreachbody2(object.ModuleInfo*)
    [0x42bb3b]\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)).__lambda2(immutable(object.ModuleInfo*))
    [0x42a9ce]\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))).__foreachbody2(ref
    rt.sections_elf_shared.DSO) [0x42fb61]\n??:? int rt.sections_elf_shared.DSO.opApply(scope
    int delegate(ref rt.sections_elf_shared.DSO)) [0x430010]\n??:? int rt.minfo.moduleinfos_apply(scope
    int delegate(immutable(object.ModuleInfo*))) [0x42faed]\n??:? int object.ModuleInfo.opApply(scope
    int delegate(object.ModuleInfo*)) [0x42a9a5]\n??:? runModuleUnitTests [0x42b911]\n??:?
    void rt.dmain2._d_run_main(int, char**, extern (C) int function(char[][])*).runAll()
    [0x428264]\n??:? void rt.dmain2._d_run_main(int, char**, extern (C) int function(char[][])*).tryExec(scope
    void delegate()) [0x4281eb]\n??:? _d_run_main [0x428156]\n??:? main [0x427bab]\n??:?
    __libc_start_main [0x520c1554]\n1/1 unittests FAILED\n'''
  stdout: b''
- exit_code: 1
  program: "import std.typecons;\nimport std.math;\n/*\nThis function takes two positive\
    \ numbers x and y and returns the\n    biggest even integer number that is in\
    \ the range [x, y] inclusive. If \n    there's no such number, then the function\
    \ should return -1.\n\n    For example:\n    >>> choose_num(12L, 15L)\n    14L\n\
    \    >>> choose_num(13L, 12L)\n    -1L\n    \n*/\nlong choose_num(long x, long\
    \ y) \n{\n    if (x > y)\n    {\n        return -1L;\n    }\n    else\n    {\n\
    \        long z = x % 2;\n        if (z == 0)\n        {\n            return x;\n\
    \        }\n        else\n        {\n            return choose_num(x + 1, y);\n\
    \        }\n    }\n}\nunittest\n{\n    alias candidate = choose_num;\n\n    assert(candidate(12L,\
    \ 15L) == 14L);\n    assert(candidate(13L, 12L) == -1L);\n    assert(candidate(33L,\
    \ 12354L) == 12354L);\n    assert(candidate(5234L, 5233L) == -1L);\n    assert(candidate(6L,\
    \ 29L) == 28L);\n    assert(candidate(27L, 10L) == -1L);\n    assert(candidate(7L,\
    \ 7L) == -1L);\n    assert(candidate(546L, 546L) == 546L);\n}\nvoid main(){}"
  status: Exception
  stderr: 'b''core.exception.AssertError@/tmp/tmpz34_5_yx.d(38): unittest failure\n----------------\n??:?
    _d_unittestp [0x427e05]\n??:? void tmpz34_5_yx.__unittest_L34_C1() [0x427a61]\n??:?
    void tmpz34_5_yx.__modtest() [0x427b88]\n??:? int core.runtime.runModuleUnitTests().__foreachbody2(object.ModuleInfo*)
    [0x42bb2b]\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)).__lambda2(immutable(object.ModuleInfo*))
    [0x42a9be]\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))).__foreachbody2(ref
    rt.sections_elf_shared.DSO) [0x42fb51]\n??:? int rt.sections_elf_shared.DSO.opApply(scope
    int delegate(ref rt.sections_elf_shared.DSO)) [0x430000]\n??:? int rt.minfo.moduleinfos_apply(scope
    int delegate(immutable(object.ModuleInfo*))) [0x42fadd]\n??:? int object.ModuleInfo.opApply(scope
    int delegate(object.ModuleInfo*)) [0x42a995]\n??:? runModuleUnitTests [0x42b901]\n??:?
    void rt.dmain2._d_run_main(int, char**, extern (C) int function(char[][])*).runAll()
    [0x428254]\n??:? void rt.dmain2._d_run_main(int, char**, extern (C) int function(char[][])*).tryExec(scope
    void delegate()) [0x4281db]\n??:? _d_run_main [0x428146]\n??:? main [0x427b9b]\n??:?
    __libc_start_main [0x884ac554]\n1/1 unittests FAILED\n'''
  stdout: b''
- exit_code: 1
  program: "import std.typecons;\nimport std.math;\n/*\nThis function takes two positive\
    \ numbers x and y and returns the\n    biggest even integer number that is in\
    \ the range [x, y] inclusive. If \n    there's no such number, then the function\
    \ should return -1.\n\n    For example:\n    >>> choose_num(12L, 15L)\n    14L\n\
    \    >>> choose_num(13L, 12L)\n    -1L\n    \n*/\nlong choose_num(long x, long\
    \ y) \n{\n    long result = -1;\n    if (x % 2 == 0)\n    {\n        result =\
    \ x;\n    }\n    else\n    {\n        result = x + 1;\n    }\n    if (result >\
    \ y)\n    {\n        result = -1;\n    }\n    return result;\n}\nunittest\n{\n\
    \    alias candidate = choose_num;\n\n    assert(candidate(12L, 15L) == 14L);\n\
    \    assert(candidate(13L, 12L) == -1L);\n    assert(candidate(33L, 12354L) ==\
    \ 12354L);\n    assert(candidate(5234L, 5233L) == -1L);\n    assert(candidate(6L,\
    \ 29L) == 28L);\n    assert(candidate(27L, 10L) == -1L);\n    assert(candidate(7L,\
    \ 7L) == -1L);\n    assert(candidate(546L, 546L) == 546L);\n}\nvoid main(){}"
  status: Exception
  stderr: 'b''core.exception.AssertError@/tmp/tmpigxyzbx6.d(36): unittest failure\n----------------\n??:?
    _d_unittestp [0x427e1d]\n??:? void tmpigxyzbx6.__unittest_L32_C1() [0x427a79]\n??:?
    void tmpigxyzbx6.__modtest() [0x427ba0]\n??:? int core.runtime.runModuleUnitTests().__foreachbody2(object.ModuleInfo*)
    [0x42bb43]\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)).__lambda2(immutable(object.ModuleInfo*))
    [0x42a9d6]\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))).__foreachbody2(ref
    rt.sections_elf_shared.DSO) [0x42fb69]\n??:? int rt.sections_elf_shared.DSO.opApply(scope
    int delegate(ref rt.sections_elf_shared.DSO)) [0x430018]\n??:? int rt.minfo.moduleinfos_apply(scope
    int delegate(immutable(object.ModuleInfo*))) [0x42faf5]\n??:? int object.ModuleInfo.opApply(scope
    int delegate(object.ModuleInfo*)) [0x42a9ad]\n??:? runModuleUnitTests [0x42b919]\n??:?
    void rt.dmain2._d_run_main(int, char**, extern (C) int function(char[][])*).runAll()
    [0x42826c]\n??:? void rt.dmain2._d_run_main(int, char**, extern (C) int function(char[][])*).tryExec(scope
    void delegate()) [0x4281f3]\n??:? _d_run_main [0x42815e]\n??:? main [0x427bb3]\n??:?
    __libc_start_main [0x528cc554]\n1/1 unittests FAILED\n'''
  stdout: b''
- exit_code: 1
  program: "import std.typecons;\nimport std.math;\n/*\nThis function takes two positive\
    \ numbers x and y and returns the\n    biggest even integer number that is in\
    \ the range [x, y] inclusive. If \n    there's no such number, then the function\
    \ should return -1.\n\n    For example:\n    >>> choose_num(12L, 15L)\n    14L\n\
    \    >>> choose_num(13L, 12L)\n    -1L\n    \n*/\nlong choose_num(long x, long\
    \ y) \n{\n    long result = -1;\n    if (x > y)\n    {\n        return result;\n\
    \    }\n    else if (x == y)\n    {\n        if (x % 2 == 0)\n        {\n    \
    \        return x;\n        }\n        else\n        {\n            return result;\n\
    \        }\n    }\n    else\n    {\n        long diff = y - x;\n        if (diff\
    \ % 2 == 0)\n        {\n            return y;\n        }\n        else\n     \
    \   {\n            return y - 1;\n        }\n    }\n}\nunittest\n{\n    alias\
    \ candidate = choose_num;\n\n    assert(candidate(12L, 15L) == 14L);\n    assert(candidate(13L,\
    \ 12L) == -1L);\n    assert(candidate(33L, 12354L) == 12354L);\n    assert(candidate(5234L,\
    \ 5233L) == -1L);\n    assert(candidate(6L, 29L) == 28L);\n    assert(candidate(27L,\
    \ 10L) == -1L);\n    assert(candidate(7L, 7L) == -1L);\n    assert(candidate(546L,\
    \ 546L) == 546L);\n}\nvoid main(){}"
  status: SyntaxError
  stderr: 'b''Error: cannot find source code for runtime library file \''object.d\''\n       dmd
    might not be correctly installed. Run \''dmd -man\'' for installation instructions.\nimport
    path[0] = /tmp\nFailed: ["dmd", "-unittest", "-v", "-o-", "/tmp/tmpg5_k5zug.d",
    "-I/tmp"]\n'''
  stdout: b''
  timestamp: 1659793719
- exit_code: 0
  program: "import std.typecons;\nimport std.math;\n/*\nThis function takes two positive\
    \ numbers x and y and returns the\n    biggest even integer number that is in\
    \ the range [x, y] inclusive. If \n    there's no such number, then the function\
    \ should return -1.\n\n    For example:\n    >>> choose_num(12L, 15L)\n    14L\n\
    \    >>> choose_num(13L, 12L)\n    -1L\n    \n*/\nlong choose_num(long x, long\
    \ y) \n{\n    long result = -1;\n    if (x > y)\n    {\n        return result;\n\
    \    }\n    else\n    {\n        for (long i = x; i <= y; i++)\n        {\n  \
    \          if (i % 2 == 0)\n            {\n                result = i;\n     \
    \       }\n        }\n    }\n    return result;\n}\nunittest\n{\n    alias candidate\
    \ = choose_num;\n\n    assert(candidate(12L, 15L) == 14L);\n    assert(candidate(13L,\
    \ 12L) == -1L);\n    assert(candidate(33L, 12354L) == 12354L);\n    assert(candidate(5234L,\
    \ 5233L) == -1L);\n    assert(candidate(6L, 29L) == 28L);\n    assert(candidate(27L,\
    \ 10L) == -1L);\n    assert(candidate(7L, 7L) == -1L);\n    assert(candidate(546L,\
    \ 546L) == 546L);\n}\nvoid main(){}"
  status: OK
  stderr: b''
  stdout: b''
- exit_code: 1
  program: "import std.typecons;\nimport std.math;\n/*\nThis function takes two positive\
    \ numbers x and y and returns the\n    biggest even integer number that is in\
    \ the range [x, y] inclusive. If \n    there's no such number, then the function\
    \ should return -1.\n\n    For example:\n    >>> choose_num(12L, 15L)\n    14L\n\
    \    >>> choose_num(13L, 12L)\n    -1L\n    \n*/\nlong choose_num(long x, long\
    \ y) \n{\n    if (x > y)\n    {\n        return -1L;\n    }\n    else\n    {\n\
    \        long z = x;\n        while (z <= y)\n        {\n            if (z % 2\
    \ == 0)\n            {\n                return z;\n            }\n           \
    \ else\n            {\n                z++;\n            }\n        }\n      \
    \  return -1L;\n    }\n}\n/*\nThis function takes a positive number n and returns\
    \ the sum of all\n    the digits of n.\nunittest\n{\n    alias candidate = choose_num;\n\
    \n    assert(candidate(12L, 15L) == 14L);\n    assert(candidate(13L, 12L) == -1L);\n\
    \    assert(candidate(33L, 12354L) == 12354L);\n    assert(candidate(5234L, 5233L)\
    \ == -1L);\n    assert(candidate(6L, 29L) == 28L);\n    assert(candidate(27L,\
    \ 10L) == -1L);\n    assert(candidate(7L, 7L) == -1L);\n    assert(candidate(546L,\
    \ 546L) == 546L);\n}\nvoid main(){}"
  status: SyntaxError
  stderr: 'b''/tmp/tmpuylia2_l.d(38): Error: unterminated /* */ comment\nFailed: ["dmd",
    "-unittest", "-v", "-o-", "/tmp/tmpuylia2_l.d", "-I/tmp"]\n'''
  stdout: b''
  timestamp: 1659793719
- exit_code: 1
  program: "import std.typecons;\nimport std.math;\n/*\nThis function takes two positive\
    \ numbers x and y and returns the\n    biggest even integer number that is in\
    \ the range [x, y] inclusive. If \n    there's no such number, then the function\
    \ should return -1.\n\n    For example:\n    >>> choose_num(12L, 15L)\n    14L\n\
    \    >>> choose_num(13L, 12L)\n    -1L\n    \n*/\nlong choose_num(long x, long\
    \ y) \n{\n    if (x > y)\n        return -1;\n    else if (x % 2 == 0)\n     \
    \   return x;\n    else\n        return choose_num(x + 1, y);\n}\nunittest\n{\n\
    \    alias candidate = choose_num;\n\n    assert(candidate(12L, 15L) == 14L);\n\
    \    assert(candidate(13L, 12L) == -1L);\n    assert(candidate(33L, 12354L) ==\
    \ 12354L);\n    assert(candidate(5234L, 5233L) == -1L);\n    assert(candidate(6L,\
    \ 29L) == 28L);\n    assert(candidate(27L, 10L) == -1L);\n    assert(candidate(7L,\
    \ 7L) == -1L);\n    assert(candidate(546L, 546L) == 546L);\n}\nvoid main(){}"
  status: SyntaxError
  stderr: 'b''Error: cannot find source code for runtime library file \''object.d\''\n       dmd
    might not be correctly installed. Run \''dmd -man\'' for installation instructions.\nimport
    path[0] = /tmp\nFailed: ["dmd", "-unittest", "-v", "-o-", "/tmp/tmpgez4y1wt.d",
    "-I/tmp"]\n'''
  stdout: b''
  timestamp: 1659793719
- exit_code: 1
  program: "import std.typecons;\nimport std.math;\n/*\nThis function takes two positive\
    \ numbers x and y and returns the\n    biggest even integer number that is in\
    \ the range [x, y] inclusive. If \n    there's no such number, then the function\
    \ should return -1.\n\n    For example:\n    >>> choose_num(12L, 15L)\n    14L\n\
    \    >>> choose_num(13L, 12L)\n    -1L\n    \n*/\nlong choose_num(long x, long\
    \ y) \n{\n    long z = 0;\n    if (x % 2 == 0)\n    {\n        z = x;\n    }\n\
    \    else\n    {\n        z = x + 1;\n    }\n    if (z > y)\n    {\n        return\
    \ -1;\n    }\n    else\n    {\n        return z;\n    }\n}\nunittest\n{\n    alias\
    \ candidate = choose_num;\n\n    assert(candidate(12L, 15L) == 14L);\n    assert(candidate(13L,\
    \ 12L) == -1L);\n    assert(candidate(33L, 12354L) == 12354L);\n    assert(candidate(5234L,\
    \ 5233L) == -1L);\n    assert(candidate(6L, 29L) == 28L);\n    assert(candidate(27L,\
    \ 10L) == -1L);\n    assert(candidate(7L, 7L) == -1L);\n    assert(candidate(546L,\
    \ 546L) == 546L);\n}\nvoid main(){}"
  status: SyntaxError
  stderr: 'b''Error: cannot find source code for runtime library file \''object.d\''\n       dmd
    might not be correctly installed. Run \''dmd -man\'' for installation instructions.\nimport
    path[0] = /tmp\nFailed: ["dmd", "-unittest", "-v", "-o-", "/tmp/tmp0gbadf5r.d",
    "-I/tmp"]\n'''
  stdout: b''
  timestamp: 1659793719
- exit_code: 1
  program: "import std.typecons;\nimport std.math;\n/*\nThis function takes two positive\
    \ numbers x and y and returns the\n    biggest even integer number that is in\
    \ the range [x, y] inclusive. If \n    there's no such number, then the function\
    \ should return -1.\n\n    For example:\n    >>> choose_num(12L, 15L)\n    14L\n\
    \    >>> choose_num(13L, 12L)\n    -1L\n    \n*/\nlong choose_num(long x, long\
    \ y) \n{\n    long result = -1;\n    if (x % 2 == 0)\n    {\n        result =\
    \ x;\n    }\n    else\n    {\n        result = x + 1;\n    }\n    if (result >\
    \ y)\n    {\n        result = -1;\n    }\n    return result;\n}\nunittest\n{\n\
    \    alias candidate = choose_num;\n\n    assert(candidate(12L, 15L) == 14L);\n\
    \    assert(candidate(13L, 12L) == -1L);\n    assert(candidate(33L, 12354L) ==\
    \ 12354L);\n    assert(candidate(5234L, 5233L) == -1L);\n    assert(candidate(6L,\
    \ 29L) == 28L);\n    assert(candidate(27L, 10L) == -1L);\n    assert(candidate(7L,\
    \ 7L) == -1L);\n    assert(candidate(546L, 546L) == 546L);\n}\nvoid main(){}"
  status: Exception
  stderr: 'b''core.exception.AssertError@/tmp/tmpigxyzbx6.d(36): unittest failure\n----------------\n??:?
    _d_unittestp [0x427e1d]\n??:? void tmpigxyzbx6.__unittest_L32_C1() [0x427a79]\n??:?
    void tmpigxyzbx6.__modtest() [0x427ba0]\n??:? int core.runtime.runModuleUnitTests().__foreachbody2(object.ModuleInfo*)
    [0x42bb43]\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)).__lambda2(immutable(object.ModuleInfo*))
    [0x42a9d6]\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))).__foreachbody2(ref
    rt.sections_elf_shared.DSO) [0x42fb69]\n??:? int rt.sections_elf_shared.DSO.opApply(scope
    int delegate(ref rt.sections_elf_shared.DSO)) [0x430018]\n??:? int rt.minfo.moduleinfos_apply(scope
    int delegate(immutable(object.ModuleInfo*))) [0x42faf5]\n??:? int object.ModuleInfo.opApply(scope
    int delegate(object.ModuleInfo*)) [0x42a9ad]\n??:? runModuleUnitTests [0x42b919]\n??:?
    void rt.dmain2._d_run_main(int, char**, extern (C) int function(char[][])*).runAll()
    [0x42826c]\n??:? void rt.dmain2._d_run_main(int, char**, extern (C) int function(char[][])*).tryExec(scope
    void delegate()) [0x4281f3]\n??:? _d_run_main [0x42815e]\n??:? main [0x427bb3]\n??:?
    __libc_start_main [0x528cc554]\n1/1 unittests FAILED\n'''
  stdout: b''
- exit_code: 1
  program: "import std.typecons;\nimport std.math;\n/*\nThis function takes two positive\
    \ numbers x and y and returns the\n    biggest even integer number that is in\
    \ the range [x, y] inclusive. If \n    there's no such number, then the function\
    \ should return -1.\n\n    For example:\n    >>> choose_num(12L, 15L)\n    14L\n\
    \    >>> choose_num(13L, 12L)\n    -1L\n    \n*/\nlong choose_num(long x, long\
    \ y) \n{\n    long result = -1;\n    if (x % 2 == 0)\n    {\n        result =\
    \ x;\n    }\n    else\n    {\n        result = x + 1;\n    }\n    if (result >\
    \ y)\n    {\n        result = -1;\n    }\n    return result;\n}\nunittest\n{\n\
    \    alias candidate = choose_num;\n\n    assert(candidate(12L, 15L) == 14L);\n\
    \    assert(candidate(13L, 12L) == -1L);\n    assert(candidate(33L, 12354L) ==\
    \ 12354L);\n    assert(candidate(5234L, 5233L) == -1L);\n    assert(candidate(6L,\
    \ 29L) == 28L);\n    assert(candidate(27L, 10L) == -1L);\n    assert(candidate(7L,\
    \ 7L) == -1L);\n    assert(candidate(546L, 546L) == 546L);\n}\nvoid main(){}"
  status: Exception
  stderr: 'b''core.exception.AssertError@/tmp/tmpigxyzbx6.d(36): unittest failure\n----------------\n??:?
    _d_unittestp [0x427e1d]\n??:? void tmpigxyzbx6.__unittest_L32_C1() [0x427a79]\n??:?
    void tmpigxyzbx6.__modtest() [0x427ba0]\n??:? int core.runtime.runModuleUnitTests().__foreachbody2(object.ModuleInfo*)
    [0x42bb43]\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)).__lambda2(immutable(object.ModuleInfo*))
    [0x42a9d6]\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))).__foreachbody2(ref
    rt.sections_elf_shared.DSO) [0x42fb69]\n??:? int rt.sections_elf_shared.DSO.opApply(scope
    int delegate(ref rt.sections_elf_shared.DSO)) [0x430018]\n??:? int rt.minfo.moduleinfos_apply(scope
    int delegate(immutable(object.ModuleInfo*))) [0x42faf5]\n??:? int object.ModuleInfo.opApply(scope
    int delegate(object.ModuleInfo*)) [0x42a9ad]\n??:? runModuleUnitTests [0x42b919]\n??:?
    void rt.dmain2._d_run_main(int, char**, extern (C) int function(char[][])*).runAll()
    [0x42826c]\n??:? void rt.dmain2._d_run_main(int, char**, extern (C) int function(char[][])*).tryExec(scope
    void delegate()) [0x4281f3]\n??:? _d_run_main [0x42815e]\n??:? main [0x427bb3]\n??:?
    __libc_start_main [0x528cc554]\n1/1 unittests FAILED\n'''
  stdout: b''
- exit_code: 1
  program: "import std.typecons;\nimport std.math;\n/*\nThis function takes two positive\
    \ numbers x and y and returns the\n    biggest even integer number that is in\
    \ the range [x, y] inclusive. If \n    there's no such number, then the function\
    \ should return -1.\n\n    For example:\n    >>> choose_num(12L, 15L)\n    14L\n\
    \    >>> choose_num(13L, 12L)\n    -1L\n    \n*/\nlong choose_num(long x, long\
    \ y) \n{\n    long result = -1;\n    if (x > y)\n    {\n        return result;\n\
    \    }\n    if (x % 2 == 0)\n    {\n        result = x;\n    }\n    else\n   \
    \ {\n        result = x + 1;\n    }\n    return result;\n}\n/*\nThis function\
    \ takes a positive number x and returns the smallest \n    positive number that\
    \ is bigger than x and is a power of 2.\nunittest\n{\n    alias candidate = choose_num;\n\
    \n    assert(candidate(12L, 15L) == 14L);\n    assert(candidate(13L, 12L) == -1L);\n\
    \    assert(candidate(33L, 12354L) == 12354L);\n    assert(candidate(5234L, 5233L)\
    \ == -1L);\n    assert(candidate(6L, 29L) == 28L);\n    assert(candidate(27L,\
    \ 10L) == -1L);\n    assert(candidate(7L, 7L) == -1L);\n    assert(candidate(546L,\
    \ 546L) == 546L);\n}\nvoid main(){}"
  status: SyntaxError
  stderr: 'b''/tmp/tmpz_yiuanx.d(32): Error: unterminated /* */ comment\nFailed: ["dmd",
    "-unittest", "-v", "-o-", "/tmp/tmpz_yiuanx.d", "-I/tmp"]\n'''
  stdout: b''
  timestamp: 1659793719
- exit_code: 1
  program: "import std.typecons;\nimport std.math;\n/*\nThis function takes two positive\
    \ numbers x and y and returns the\n    biggest even integer number that is in\
    \ the range [x, y] inclusive. If \n    there's no such number, then the function\
    \ should return -1.\n\n    For example:\n    >>> choose_num(12L, 15L)\n    14L\n\
    \    >>> choose_num(13L, 12L)\n    -1L\n    \n*/\nlong choose_num(long x, long\
    \ y) \n{\n    long result = -1;\n    if (x % 2 == 0) \n    {\n        result =\
    \ x;\n    }\n    else \n    {\n        result = x + 1;\n    }\n    if (result\
    \ > y) \n    {\n        result = -1;\n    }\n    return result;\n}\nunittest\n\
    {\n    alias candidate = choose_num;\n\n    assert(candidate(12L, 15L) == 14L);\n\
    \    assert(candidate(13L, 12L) == -1L);\n    assert(candidate(33L, 12354L) ==\
    \ 12354L);\n    assert(candidate(5234L, 5233L) == -1L);\n    assert(candidate(6L,\
    \ 29L) == 28L);\n    assert(candidate(27L, 10L) == -1L);\n    assert(candidate(7L,\
    \ 7L) == -1L);\n    assert(candidate(546L, 546L) == 546L);\n}\nvoid main(){}"
  status: SyntaxError
  stderr: 'b''Error: cannot find source code for runtime library file \''object.d\''\n       dmd
    might not be correctly installed. Run \''dmd -man\'' for installation instructions.\nimport
    path[0] = /tmp\nFailed: ["dmd", "-unittest", "-v", "-o-", "/tmp/tmpqhiy6qjy.d",
    "-I/tmp"]\n'''
  stdout: b''
  timestamp: 1659793719
- exit_code: 0
  program: "import std.typecons;\nimport std.math;\n/*\nThis function takes two positive\
    \ numbers x and y and returns the\n    biggest even integer number that is in\
    \ the range [x, y] inclusive. If \n    there's no such number, then the function\
    \ should return -1.\n\n    For example:\n    >>> choose_num(12L, 15L)\n    14L\n\
    \    >>> choose_num(13L, 12L)\n    -1L\n    \n*/\nlong choose_num(long x, long\
    \ y) \n{\n    long result = -1;\n    if (x > y)\n    {\n        return result;\n\
    \    }\n    else\n    {\n        for (long i = x; i <= y; i++)\n        {\n  \
    \          if (i % 2 == 0)\n            {\n                result = i;\n     \
    \       }\n        }\n    }\n    return result;\n}\nunittest\n{\n    alias candidate\
    \ = choose_num;\n\n    assert(candidate(12L, 15L) == 14L);\n    assert(candidate(13L,\
    \ 12L) == -1L);\n    assert(candidate(33L, 12354L) == 12354L);\n    assert(candidate(5234L,\
    \ 5233L) == -1L);\n    assert(candidate(6L, 29L) == 28L);\n    assert(candidate(27L,\
    \ 10L) == -1L);\n    assert(candidate(7L, 7L) == -1L);\n    assert(candidate(546L,\
    \ 546L) == 546L);\n}\nvoid main(){}"
  status: OK
  stderr: b''
  stdout: b''
- exit_code: 1
  program: "import std.typecons;\nimport std.math;\n/*\nThis function takes two positive\
    \ numbers x and y and returns the\n    biggest even integer number that is in\
    \ the range [x, y] inclusive. If \n    there's no such number, then the function\
    \ should return -1.\n\n    For example:\n    >>> choose_num(12L, 15L)\n    14L\n\
    \    >>> choose_num(13L, 12L)\n    -1L\n    \n*/\nlong choose_num(long x, long\
    \ y) \n{\n    long result = -1;\n    if (x % 2 == 0)\n    {\n        result =\
    \ x;\n    }\n    else\n    {\n        result = x + 1;\n    }\n    if (result >\
    \ y)\n    {\n        result = -1;\n    }\n    return result;\n}\nunittest\n{\n\
    \    alias candidate = choose_num;\n\n    assert(candidate(12L, 15L) == 14L);\n\
    \    assert(candidate(13L, 12L) == -1L);\n    assert(candidate(33L, 12354L) ==\
    \ 12354L);\n    assert(candidate(5234L, 5233L) == -1L);\n    assert(candidate(6L,\
    \ 29L) == 28L);\n    assert(candidate(27L, 10L) == -1L);\n    assert(candidate(7L,\
    \ 7L) == -1L);\n    assert(candidate(546L, 546L) == 546L);\n}\nvoid main(){}"
  status: Exception
  stderr: 'b''core.exception.AssertError@/tmp/tmpigxyzbx6.d(36): unittest failure\n----------------\n??:?
    _d_unittestp [0x427e1d]\n??:? void tmpigxyzbx6.__unittest_L32_C1() [0x427a79]\n??:?
    void tmpigxyzbx6.__modtest() [0x427ba0]\n??:? int core.runtime.runModuleUnitTests().__foreachbody2(object.ModuleInfo*)
    [0x42bb43]\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)).__lambda2(immutable(object.ModuleInfo*))
    [0x42a9d6]\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))).__foreachbody2(ref
    rt.sections_elf_shared.DSO) [0x42fb69]\n??:? int rt.sections_elf_shared.DSO.opApply(scope
    int delegate(ref rt.sections_elf_shared.DSO)) [0x430018]\n??:? int rt.minfo.moduleinfos_apply(scope
    int delegate(immutable(object.ModuleInfo*))) [0x42faf5]\n??:? int object.ModuleInfo.opApply(scope
    int delegate(object.ModuleInfo*)) [0x42a9ad]\n??:? runModuleUnitTests [0x42b919]\n??:?
    void rt.dmain2._d_run_main(int, char**, extern (C) int function(char[][])*).runAll()
    [0x42826c]\n??:? void rt.dmain2._d_run_main(int, char**, extern (C) int function(char[][])*).tryExec(scope
    void delegate()) [0x4281f3]\n??:? _d_run_main [0x42815e]\n??:? main [0x427bb3]\n??:?
    __libc_start_main [0x528cc554]\n1/1 unittests FAILED\n'''
  stdout: b''
- exit_code: 1
  program: "import std.typecons;\nimport std.math;\n/*\nThis function takes two positive\
    \ numbers x and y and returns the\n    biggest even integer number that is in\
    \ the range [x, y] inclusive. If \n    there's no such number, then the function\
    \ should return -1.\n\n    For example:\n    >>> choose_num(12L, 15L)\n    14L\n\
    \    >>> choose_num(13L, 12L)\n    -1L\n    \n*/\nlong choose_num(long x, long\
    \ y) \n{\n    if (x > y)\n    {\n        return -1L;\n    }\n    else\n    {\n\
    \        long z = x;\n        while (z <= y)\n        {\n            if (z % 2\
    \ == 0)\n            {\n                return z;\n            }\n           \
    \ z++;\n        }\n        return -1L;\n    }\n}\nunittest\n{\n    alias candidate\
    \ = choose_num;\n\n    assert(candidate(12L, 15L) == 14L);\n    assert(candidate(13L,\
    \ 12L) == -1L);\n    assert(candidate(33L, 12354L) == 12354L);\n    assert(candidate(5234L,\
    \ 5233L) == -1L);\n    assert(candidate(6L, 29L) == 28L);\n    assert(candidate(27L,\
    \ 10L) == -1L);\n    assert(candidate(7L, 7L) == -1L);\n    assert(candidate(546L,\
    \ 546L) == 546L);\n}\nvoid main(){}"
  status: SyntaxError
  stderr: 'b''Error: cannot find source code for runtime library file \''object.d\''\n       dmd
    might not be correctly installed. Run \''dmd -man\'' for installation instructions.\nimport
    path[0] = /tmp\nFailed: ["dmd", "-unittest", "-v", "-o-", "/tmp/tmp0o3uq622.d",
    "-I/tmp"]\n'''
  stdout: b''
  timestamp: 1659793719
- exit_code: 1
  program: "import std.typecons;\nimport std.math;\n/*\nThis function takes two positive\
    \ numbers x and y and returns the\n    biggest even integer number that is in\
    \ the range [x, y] inclusive. If \n    there's no such number, then the function\
    \ should return -1.\n\n    For example:\n    >>> choose_num(12L, 15L)\n    14L\n\
    \    >>> choose_num(13L, 12L)\n    -1L\n    \n*/\nlong choose_num(long x, long\
    \ y) \n{\n    long result = -1;\n    if (x % 2 == 0)\n    {\n        result =\
    \ x;\n    }\n    else\n    {\n        result = x + 1;\n    }\n    return result;\n\
    }\nunittest\n{\n    alias candidate = choose_num;\n\n    assert(candidate(12L,\
    \ 15L) == 14L);\n    assert(candidate(13L, 12L) == -1L);\n    assert(candidate(33L,\
    \ 12354L) == 12354L);\n    assert(candidate(5234L, 5233L) == -1L);\n    assert(candidate(6L,\
    \ 29L) == 28L);\n    assert(candidate(27L, 10L) == -1L);\n    assert(candidate(7L,\
    \ 7L) == -1L);\n    assert(candidate(546L, 546L) == 546L);\n}\nvoid main(){}"
  status: SyntaxError
  stderr: 'b''Error: cannot find source code for runtime library file \''object.d\''\n       dmd
    might not be correctly installed. Run \''dmd -man\'' for installation instructions.\nimport
    path[0] = /tmp\nFailed: ["dmd", "-unittest", "-v", "-o-", "/tmp/tmpbg9bbx7t.d",
    "-I/tmp"]\n'''
  stdout: b''
  timestamp: 1659793719
- exit_code: 1
  program: "import std.typecons;\nimport std.math;\n/*\nThis function takes two positive\
    \ numbers x and y and returns the\n    biggest even integer number that is in\
    \ the range [x, y] inclusive. If \n    there's no such number, then the function\
    \ should return -1.\n\n    For example:\n    >>> choose_num(12L, 15L)\n    14L\n\
    \    >>> choose_num(13L, 12L)\n    -1L\n    \n*/\nlong choose_num(long x, long\
    \ y) \n{\n    long result = -1;\n    if (x % 2 == 0)\n    {\n        result =\
    \ x;\n    }\n    else\n    {\n        result = x + 1;\n    }\n    if (result >\
    \ y)\n    {\n        result = -1;\n    }\n    return result;\n}\nunittest\n{\n\
    \    alias candidate = choose_num;\n\n    assert(candidate(12L, 15L) == 14L);\n\
    \    assert(candidate(13L, 12L) == -1L);\n    assert(candidate(33L, 12354L) ==\
    \ 12354L);\n    assert(candidate(5234L, 5233L) == -1L);\n    assert(candidate(6L,\
    \ 29L) == 28L);\n    assert(candidate(27L, 10L) == -1L);\n    assert(candidate(7L,\
    \ 7L) == -1L);\n    assert(candidate(546L, 546L) == 546L);\n}\nvoid main(){}"
  status: Exception
  stderr: 'b''core.exception.AssertError@/tmp/tmpigxyzbx6.d(36): unittest failure\n----------------\n??:?
    _d_unittestp [0x427e1d]\n??:? void tmpigxyzbx6.__unittest_L32_C1() [0x427a79]\n??:?
    void tmpigxyzbx6.__modtest() [0x427ba0]\n??:? int core.runtime.runModuleUnitTests().__foreachbody2(object.ModuleInfo*)
    [0x42bb43]\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)).__lambda2(immutable(object.ModuleInfo*))
    [0x42a9d6]\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))).__foreachbody2(ref
    rt.sections_elf_shared.DSO) [0x42fb69]\n??:? int rt.sections_elf_shared.DSO.opApply(scope
    int delegate(ref rt.sections_elf_shared.DSO)) [0x430018]\n??:? int rt.minfo.moduleinfos_apply(scope
    int delegate(immutable(object.ModuleInfo*))) [0x42faf5]\n??:? int object.ModuleInfo.opApply(scope
    int delegate(object.ModuleInfo*)) [0x42a9ad]\n??:? runModuleUnitTests [0x42b919]\n??:?
    void rt.dmain2._d_run_main(int, char**, extern (C) int function(char[][])*).runAll()
    [0x42826c]\n??:? void rt.dmain2._d_run_main(int, char**, extern (C) int function(char[][])*).tryExec(scope
    void delegate()) [0x4281f3]\n??:? _d_run_main [0x42815e]\n??:? main [0x427bb3]\n??:?
    __libc_start_main [0x528cc554]\n1/1 unittests FAILED\n'''
  stdout: b''
- exit_code: 1
  program: "import std.typecons;\nimport std.math;\n/*\nThis function takes two positive\
    \ numbers x and y and returns the\n    biggest even integer number that is in\
    \ the range [x, y] inclusive. If \n    there's no such number, then the function\
    \ should return -1.\n\n    For example:\n    >>> choose_num(12L, 15L)\n    14L\n\
    \    >>> choose_num(13L, 12L)\n    -1L\n    \n*/\nlong choose_num(long x, long\
    \ y) \n{\n    long result = -1;\n    if (x % 2 == 0)\n    {\n        result =\
    \ x;\n    }\n    else\n    {\n        x++;\n    }\n    if (x > y)\n    {\n   \
    \     return -1;\n    }\n    else\n    {\n        return x;\n    }\n}\nunittest\n\
    {\n    alias candidate = choose_num;\n\n    assert(candidate(12L, 15L) == 14L);\n\
    \    assert(candidate(13L, 12L) == -1L);\n    assert(candidate(33L, 12354L) ==\
    \ 12354L);\n    assert(candidate(5234L, 5233L) == -1L);\n    assert(candidate(6L,\
    \ 29L) == 28L);\n    assert(candidate(27L, 10L) == -1L);\n    assert(candidate(7L,\
    \ 7L) == -1L);\n    assert(candidate(546L, 546L) == 546L);\n}\nvoid main(){}"
  status: SyntaxError
  stderr: 'b''Error: cannot find source code for runtime library file \''object.d\''\n       dmd
    might not be correctly installed. Run \''dmd -man\'' for installation instructions.\nimport
    path[0] = /tmp\nFailed: ["dmd", "-unittest", "-v", "-o-", "/tmp/tmplzahiqwd.d",
    "-I/tmp"]\n'''
  stdout: b''
  timestamp: 1659793719
- exit_code: 1
  program: "import std.typecons;\nimport std.math;\n/*\nThis function takes two positive\
    \ numbers x and y and returns the\n    biggest even integer number that is in\
    \ the range [x, y] inclusive. If \n    there's no such number, then the function\
    \ should return -1.\n\n    For example:\n    >>> choose_num(12L, 15L)\n    14L\n\
    \    >>> choose_num(13L, 12L)\n    -1L\n    \n*/\nlong choose_num(long x, long\
    \ y) \n{\n    long result = -1;\n    if (x > y)\n    {\n        return result;\n\
    \    }\n    else if (x % 2 == 0)\n    {\n        result = x;\n    }\n    else\n\
    \    {\n        result = x + 1;\n    }\n    return result;\n}\nunittest\n{\n \
    \   alias candidate = choose_num;\n\n    assert(candidate(12L, 15L) == 14L);\n\
    \    assert(candidate(13L, 12L) == -1L);\n    assert(candidate(33L, 12354L) ==\
    \ 12354L);\n    assert(candidate(5234L, 5233L) == -1L);\n    assert(candidate(6L,\
    \ 29L) == 28L);\n    assert(candidate(27L, 10L) == -1L);\n    assert(candidate(7L,\
    \ 7L) == -1L);\n    assert(candidate(546L, 546L) == 546L);\n}\nvoid main(){}"
  status: Exception
  stderr: 'b''core.exception.AssertError@/tmp/tmp2sog97ay.d(36): unittest failure\n----------------\n??:?
    _d_unittestp [0x427e15]\n??:? void tmp2sog97ay.__unittest_L32_C1() [0x427a71]\n??:?
    void tmp2sog97ay.__modtest() [0x427b98]\n??:? int core.runtime.runModuleUnitTests().__foreachbody2(object.ModuleInfo*)
    [0x42bb3b]\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)).__lambda2(immutable(object.ModuleInfo*))
    [0x42a9ce]\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))).__foreachbody2(ref
    rt.sections_elf_shared.DSO) [0x42fb61]\n??:? int rt.sections_elf_shared.DSO.opApply(scope
    int delegate(ref rt.sections_elf_shared.DSO)) [0x430010]\n??:? int rt.minfo.moduleinfos_apply(scope
    int delegate(immutable(object.ModuleInfo*))) [0x42faed]\n??:? int object.ModuleInfo.opApply(scope
    int delegate(object.ModuleInfo*)) [0x42a9a5]\n??:? runModuleUnitTests [0x42b911]\n??:?
    void rt.dmain2._d_run_main(int, char**, extern (C) int function(char[][])*).runAll()
    [0x428264]\n??:? void rt.dmain2._d_run_main(int, char**, extern (C) int function(char[][])*).tryExec(scope
    void delegate()) [0x4281eb]\n??:? _d_run_main [0x428156]\n??:? main [0x427bab]\n??:?
    __libc_start_main [0x2e3e4554]\n1/1 unittests FAILED\n'''
  stdout: b''
- exit_code: 1
  program: "import std.typecons;\nimport std.math;\n/*\nThis function takes two positive\
    \ numbers x and y and returns the\n    biggest even integer number that is in\
    \ the range [x, y] inclusive. If \n    there's no such number, then the function\
    \ should return -1.\n\n    For example:\n    >>> choose_num(12L, 15L)\n    14L\n\
    \    >>> choose_num(13L, 12L)\n    -1L\n    \n*/\nlong choose_num(long x, long\
    \ y) \n{\n    long result = -1;\n    if (x > y)\n    {\n        return result;\n\
    \    }\n    else\n    {\n        if (x % 2 == 0)\n        {\n            result\
    \ = x;\n        }\n        else\n        {\n            result = x + 1;\n    \
    \    }\n    }\n    return result;\n}\nunittest\n{\n    alias candidate = choose_num;\n\
    \n    assert(candidate(12L, 15L) == 14L);\n    assert(candidate(13L, 12L) == -1L);\n\
    \    assert(candidate(33L, 12354L) == 12354L);\n    assert(candidate(5234L, 5233L)\
    \ == -1L);\n    assert(candidate(6L, 29L) == 28L);\n    assert(candidate(27L,\
    \ 10L) == -1L);\n    assert(candidate(7L, 7L) == -1L);\n    assert(candidate(546L,\
    \ 546L) == 546L);\n}\nvoid main(){}"
  status: SyntaxError
  stderr: 'b''Error: cannot find source code for runtime library file \''object.d\''\n       dmd
    might not be correctly installed. Run \''dmd -man\'' for installation instructions.\nimport
    path[0] = /tmp\nFailed: ["dmd", "-unittest", "-v", "-o-", "/tmp/tmpuzb9cnav.d",
    "-I/tmp"]\n'''
  stdout: b''
  timestamp: 1659793719
- exit_code: 1
  program: "import std.typecons;\nimport std.math;\n/*\nThis function takes two positive\
    \ numbers x and y and returns the\n    biggest even integer number that is in\
    \ the range [x, y] inclusive. If \n    there's no such number, then the function\
    \ should return -1.\n\n    For example:\n    >>> choose_num(12L, 15L)\n    14L\n\
    \    >>> choose_num(13L, 12L)\n    -1L\n    \n*/\nlong choose_num(long x, long\
    \ y) \n{\n    long result = -1;\n    foreach(i; x..y+1)\n    {\n        if(i %\
    \ 2 == 0)\n        {\n            result = i;\n        }\n    }\n    return result;\n\
    }\nunittest\n{\n    alias candidate = choose_num;\n\n    assert(candidate(12L,\
    \ 15L) == 14L);\n    assert(candidate(13L, 12L) == -1L);\n    assert(candidate(33L,\
    \ 12354L) == 12354L);\n    assert(candidate(5234L, 5233L) == -1L);\n    assert(candidate(6L,\
    \ 29L) == 28L);\n    assert(candidate(27L, 10L) == -1L);\n    assert(candidate(7L,\
    \ 7L) == -1L);\n    assert(candidate(546L, 546L) == 546L);\n}\nvoid main(){}"
  status: SyntaxError
  stderr: 'b''Error: cannot find source code for runtime library file \''object.d\''\n       dmd
    might not be correctly installed. Run \''dmd -man\'' for installation instructions.\nimport
    path[0] = /tmp\nFailed: ["dmd", "-unittest", "-v", "-o-", "/tmp/tmpf89oph2c.d",
    "-I/tmp"]\n'''
  stdout: b''
  timestamp: 1659793719
- exit_code: 1
  program: "import std.typecons;\nimport std.math;\n/*\nThis function takes two positive\
    \ numbers x and y and returns the\n    biggest even integer number that is in\
    \ the range [x, y] inclusive. If \n    there's no such number, then the function\
    \ should return -1.\n\n    For example:\n    >>> choose_num(12L, 15L)\n    14L\n\
    \    >>> choose_num(13L, 12L)\n    -1L\n    \n*/\nlong choose_num(long x, long\
    \ y) \n{\n    if (x > y) \n    {\n        return -1L;\n    }\n    else \n    {\n\
    \        long max = max(x, y);\n        long min = min(x, y);\n        long max_even\
    \ = max - (max % 2);\n        long min_even = min - (min % 2);\n        if (max_even\
    \ >= min_even) \n        {\n            return max_even;\n        }\n        else\
    \ \n        {\n            return -1L;\n        }\n    }\n}\nunittest\n{\n   \
    \ alias candidate = choose_num;\n\n    assert(candidate(12L, 15L) == 14L);\n \
    \   assert(candidate(13L, 12L) == -1L);\n    assert(candidate(33L, 12354L) ==\
    \ 12354L);\n    assert(candidate(5234L, 5233L) == -1L);\n    assert(candidate(6L,\
    \ 29L) == 28L);\n    assert(candidate(27L, 10L) == -1L);\n    assert(candidate(7L,\
    \ 7L) == -1L);\n    assert(candidate(546L, 546L) == 546L);\n}\nvoid main(){}"
  status: SyntaxError
  stderr: 'b''Error: cannot find source code for runtime library file \''object.d\''\n       dmd
    might not be correctly installed. Run \''dmd -man\'' for installation instructions.\nimport
    path[0] = /tmp\nFailed: ["dmd", "-unittest", "-v", "-o-", "/tmp/tmpwatcryqa.d",
    "-I/tmp"]\n'''
  stdout: b''
  timestamp: 1659793719
- exit_code: 1
  program: "import std.typecons;\nimport std.math;\n/*\nThis function takes two positive\
    \ numbers x and y and returns the\n    biggest even integer number that is in\
    \ the range [x, y] inclusive. If \n    there's no such number, then the function\
    \ should return -1.\n\n    For example:\n    >>> choose_num(12L, 15L)\n    14L\n\
    \    >>> choose_num(13L, 12L)\n    -1L\n    \n*/\nlong choose_num(long x, long\
    \ y) \n{\n    if (x > y)\n    {\n        return -1L;\n    }\n    else if (x %\
    \ 2 == 0)\n    {\n        return x;\n    }\n    else\n    {\n        return choose_num(x\
    \ + 1, y);\n    }\n}\nunittest\n{\n    alias candidate = choose_num;\n\n    assert(candidate(12L,\
    \ 15L) == 14L);\n    assert(candidate(13L, 12L) == -1L);\n    assert(candidate(33L,\
    \ 12354L) == 12354L);\n    assert(candidate(5234L, 5233L) == -1L);\n    assert(candidate(6L,\
    \ 29L) == 28L);\n    assert(candidate(27L, 10L) == -1L);\n    assert(candidate(7L,\
    \ 7L) == -1L);\n    assert(candidate(546L, 546L) == 546L);\n}\nvoid main(){}"
  status: SyntaxError
  stderr: 'b''Error: cannot find source code for runtime library file \''object.d\''\n       dmd
    might not be correctly installed. Run \''dmd -man\'' for installation instructions.\nimport
    path[0] = /tmp\nFailed: ["dmd", "-unittest", "-v", "-o-", "/tmp/tmprqxrzaat.d",
    "-I/tmp"]\n'''
  stdout: b''
  timestamp: 1659793719
- exit_code: 1
  program: "import std.typecons;\nimport std.math;\n/*\nThis function takes two positive\
    \ numbers x and y and returns the\n    biggest even integer number that is in\
    \ the range [x, y] inclusive. If \n    there's no such number, then the function\
    \ should return -1.\n\n    For example:\n    >>> choose_num(12L, 15L)\n    14L\n\
    \    >>> choose_num(13L, 12L)\n    -1L\n    \n*/\nlong choose_num(long x, long\
    \ y) \n{\n    long result = -1;\n    if (x % 2 == 0)\n    {\n        result =\
    \ x;\n    }\n    else\n    {\n        x++;\n    }\n    for (; x <= y; x += 2)\n\
    \    {\n        result = x;\n    }\n    return result;\n}\nunittest\n{\n    alias\
    \ candidate = choose_num;\n\n    assert(candidate(12L, 15L) == 14L);\n    assert(candidate(13L,\
    \ 12L) == -1L);\n    assert(candidate(33L, 12354L) == 12354L);\n    assert(candidate(5234L,\
    \ 5233L) == -1L);\n    assert(candidate(6L, 29L) == 28L);\n    assert(candidate(27L,\
    \ 10L) == -1L);\n    assert(candidate(7L, 7L) == -1L);\n    assert(candidate(546L,\
    \ 546L) == 546L);\n}\nvoid main(){}"
  status: SyntaxError
  stderr: 'b''Error: cannot find source code for runtime library file \''object.d\''\n       dmd
    might not be correctly installed. Run \''dmd -man\'' for installation instructions.\nimport
    path[0] = /tmp\nFailed: ["dmd", "-unittest", "-v", "-o-", "/tmp/tmp7xyo97v5.d",
    "-I/tmp"]\n'''
  stdout: b''
  timestamp: 1659793719
- exit_code: 1
  program: "import std.typecons;\nimport std.math;\n/*\nThis function takes two positive\
    \ numbers x and y and returns the\n    biggest even integer number that is in\
    \ the range [x, y] inclusive. If \n    there's no such number, then the function\
    \ should return -1.\n\n    For example:\n    >>> choose_num(12L, 15L)\n    14L\n\
    \    >>> choose_num(13L, 12L)\n    -1L\n    \n*/\nlong choose_num(long x, long\
    \ y) \n{\n    long result = -1;\n    if (x % 2 == 0)\n    {\n        result =\
    \ x;\n    }\n    else\n    {\n        result = x + 1;\n    }\n    if (result >\
    \ y)\n    {\n        result = -1;\n    }\n    return result;\n}\nunittest\n{\n\
    \    alias candidate = choose_num;\n\n    assert(candidate(12L, 15L) == 14L);\n\
    \    assert(candidate(13L, 12L) == -1L);\n    assert(candidate(33L, 12354L) ==\
    \ 12354L);\n    assert(candidate(5234L, 5233L) == -1L);\n    assert(candidate(6L,\
    \ 29L) == 28L);\n    assert(candidate(27L, 10L) == -1L);\n    assert(candidate(7L,\
    \ 7L) == -1L);\n    assert(candidate(546L, 546L) == 546L);\n}\nvoid main(){}"
  status: Exception
  stderr: 'b''core.exception.AssertError@/tmp/tmpigxyzbx6.d(36): unittest failure\n----------------\n??:?
    _d_unittestp [0x427e1d]\n??:? void tmpigxyzbx6.__unittest_L32_C1() [0x427a79]\n??:?
    void tmpigxyzbx6.__modtest() [0x427ba0]\n??:? int core.runtime.runModuleUnitTests().__foreachbody2(object.ModuleInfo*)
    [0x42bb43]\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)).__lambda2(immutable(object.ModuleInfo*))
    [0x42a9d6]\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))).__foreachbody2(ref
    rt.sections_elf_shared.DSO) [0x42fb69]\n??:? int rt.sections_elf_shared.DSO.opApply(scope
    int delegate(ref rt.sections_elf_shared.DSO)) [0x430018]\n??:? int rt.minfo.moduleinfos_apply(scope
    int delegate(immutable(object.ModuleInfo*))) [0x42faf5]\n??:? int object.ModuleInfo.opApply(scope
    int delegate(object.ModuleInfo*)) [0x42a9ad]\n??:? runModuleUnitTests [0x42b919]\n??:?
    void rt.dmain2._d_run_main(int, char**, extern (C) int function(char[][])*).runAll()
    [0x42826c]\n??:? void rt.dmain2._d_run_main(int, char**, extern (C) int function(char[][])*).tryExec(scope
    void delegate()) [0x4281f3]\n??:? _d_run_main [0x42815e]\n??:? main [0x427bb3]\n??:?
    __libc_start_main [0x528cc554]\n1/1 unittests FAILED\n'''
  stdout: b''
- exit_code: 1
  program: "import std.typecons;\nimport std.math;\n/*\nThis function takes two positive\
    \ numbers x and y and returns the\n    biggest even integer number that is in\
    \ the range [x, y] inclusive. If \n    there's no such number, then the function\
    \ should return -1.\n\n    For example:\n    >>> choose_num(12L, 15L)\n    14L\n\
    \    >>> choose_num(13L, 12L)\n    -1L\n    \n*/\nlong choose_num(long x, long\
    \ y) \n{\n    long result = -1;\n    foreach(i; x..y+1)\n    {\n        if(i %\
    \ 2 == 0)\n        {\n            result = i;\n        }\n    }\n    return result;\n\
    }\nunittest\n{\n    alias candidate = choose_num;\n\n    assert(candidate(12L,\
    \ 15L) == 14L);\n    assert(candidate(13L, 12L) == -1L);\n    assert(candidate(33L,\
    \ 12354L) == 12354L);\n    assert(candidate(5234L, 5233L) == -1L);\n    assert(candidate(6L,\
    \ 29L) == 28L);\n    assert(candidate(27L, 10L) == -1L);\n    assert(candidate(7L,\
    \ 7L) == -1L);\n    assert(candidate(546L, 546L) == 546L);\n}\nvoid main(){}"
  status: SyntaxError
  stderr: 'b''Error: cannot find source code for runtime library file \''object.d\''\n       dmd
    might not be correctly installed. Run \''dmd -man\'' for installation instructions.\nimport
    path[0] = /tmp\nFailed: ["dmd", "-unittest", "-v", "-o-", "/tmp/tmpf89oph2c.d",
    "-I/tmp"]\n'''
  stdout: b''
  timestamp: 1659793719
- exit_code: 1
  program: "import std.typecons;\nimport std.math;\n/*\nThis function takes two positive\
    \ numbers x and y and returns the\n    biggest even integer number that is in\
    \ the range [x, y] inclusive. If \n    there's no such number, then the function\
    \ should return -1.\n\n    For example:\n    >>> choose_num(12L, 15L)\n    14L\n\
    \    >>> choose_num(13L, 12L)\n    -1L\n    \n*/\nlong choose_num(long x, long\
    \ y) \n{\n    long result = -1;\n    if (x % 2 == 0)\n    {\n        result =\
    \ x;\n    }\n    else\n    {\n        result = x + 1;\n    }\n    if (result >\
    \ y)\n    {\n        result = -1;\n    }\n    return result;\n}\nunittest\n{\n\
    \    alias candidate = choose_num;\n\n    assert(candidate(12L, 15L) == 14L);\n\
    \    assert(candidate(13L, 12L) == -1L);\n    assert(candidate(33L, 12354L) ==\
    \ 12354L);\n    assert(candidate(5234L, 5233L) == -1L);\n    assert(candidate(6L,\
    \ 29L) == 28L);\n    assert(candidate(27L, 10L) == -1L);\n    assert(candidate(7L,\
    \ 7L) == -1L);\n    assert(candidate(546L, 546L) == 546L);\n}\nvoid main(){}"
  status: Exception
  stderr: 'b''core.exception.AssertError@/tmp/tmpigxyzbx6.d(36): unittest failure\n----------------\n??:?
    _d_unittestp [0x427e1d]\n??:? void tmpigxyzbx6.__unittest_L32_C1() [0x427a79]\n??:?
    void tmpigxyzbx6.__modtest() [0x427ba0]\n??:? int core.runtime.runModuleUnitTests().__foreachbody2(object.ModuleInfo*)
    [0x42bb43]\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)).__lambda2(immutable(object.ModuleInfo*))
    [0x42a9d6]\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))).__foreachbody2(ref
    rt.sections_elf_shared.DSO) [0x42fb69]\n??:? int rt.sections_elf_shared.DSO.opApply(scope
    int delegate(ref rt.sections_elf_shared.DSO)) [0x430018]\n??:? int rt.minfo.moduleinfos_apply(scope
    int delegate(immutable(object.ModuleInfo*))) [0x42faf5]\n??:? int object.ModuleInfo.opApply(scope
    int delegate(object.ModuleInfo*)) [0x42a9ad]\n??:? runModuleUnitTests [0x42b919]\n??:?
    void rt.dmain2._d_run_main(int, char**, extern (C) int function(char[][])*).runAll()
    [0x42826c]\n??:? void rt.dmain2._d_run_main(int, char**, extern (C) int function(char[][])*).tryExec(scope
    void delegate()) [0x4281f3]\n??:? _d_run_main [0x42815e]\n??:? main [0x427bb3]\n??:?
    __libc_start_main [0x528cc554]\n1/1 unittests FAILED\n'''
  stdout: b''
- exit_code: 1
  program: "import std.typecons;\nimport std.math;\n/*\nThis function takes two positive\
    \ numbers x and y and returns the\n    biggest even integer number that is in\
    \ the range [x, y] inclusive. If \n    there's no such number, then the function\
    \ should return -1.\n\n    For example:\n    >>> choose_num(12L, 15L)\n    14L\n\
    \    >>> choose_num(13L, 12L)\n    -1L\n    \n*/\nlong choose_num(long x, long\
    \ y) \n{\n    if (x % 2 == 0)\n    {\n        return x;\n    }\n    else if (x\
    \ % 2 == 1)\n    {\n        return x + 1;\n    }\n    else if (y % 2 == 0)\n \
    \   {\n        return y;\n    }\n    else if (y % 2 == 1)\n    {\n        return\
    \ y - 1;\n    }\n    else\n    {\n        return -1;\n    }\n}\nunittest\n{\n\
    \    alias candidate = choose_num;\n\n    assert(candidate(12L, 15L) == 14L);\n\
    \    assert(candidate(13L, 12L) == -1L);\n    assert(candidate(33L, 12354L) ==\
    \ 12354L);\n    assert(candidate(5234L, 5233L) == -1L);\n    assert(candidate(6L,\
    \ 29L) == 28L);\n    assert(candidate(27L, 10L) == -1L);\n    assert(candidate(7L,\
    \ 7L) == -1L);\n    assert(candidate(546L, 546L) == 546L);\n}\nvoid main(){}"
  status: SyntaxError
  stderr: 'b''Error: cannot find source code for runtime library file \''object.d\''\n       dmd
    might not be correctly installed. Run \''dmd -man\'' for installation instructions.\nimport
    path[0] = /tmp\nFailed: ["dmd", "-unittest", "-v", "-o-", "/tmp/tmp87ribtg2.d",
    "-I/tmp"]\n'''
  stdout: b''
  timestamp: 1659793719
- exit_code: 1
  program: "import std.typecons;\nimport std.math;\n/*\nThis function takes two positive\
    \ numbers x and y and returns the\n    biggest even integer number that is in\
    \ the range [x, y] inclusive. If \n    there's no such number, then the function\
    \ should return -1.\n\n    For example:\n    >>> choose_num(12L, 15L)\n    14L\n\
    \    >>> choose_num(13L, 12L)\n    -1L\n    \n*/\nlong choose_num(long x, long\
    \ y) \n{\n    long result = -1;\n    if (x % 2 == 0)\n    {\n        result =\
    \ x;\n    }\n    else\n    {\n        result = x + 1;\n    }\n    if (result >\
    \ y)\n    {\n        result = -1;\n    }\n    return result;\n}\nunittest\n{\n\
    \    alias candidate = choose_num;\n\n    assert(candidate(12L, 15L) == 14L);\n\
    \    assert(candidate(13L, 12L) == -1L);\n    assert(candidate(33L, 12354L) ==\
    \ 12354L);\n    assert(candidate(5234L, 5233L) == -1L);\n    assert(candidate(6L,\
    \ 29L) == 28L);\n    assert(candidate(27L, 10L) == -1L);\n    assert(candidate(7L,\
    \ 7L) == -1L);\n    assert(candidate(546L, 546L) == 546L);\n}\nvoid main(){}"
  status: Exception
  stderr: 'b''core.exception.AssertError@/tmp/tmpigxyzbx6.d(36): unittest failure\n----------------\n??:?
    _d_unittestp [0x427e1d]\n??:? void tmpigxyzbx6.__unittest_L32_C1() [0x427a79]\n??:?
    void tmpigxyzbx6.__modtest() [0x427ba0]\n??:? int core.runtime.runModuleUnitTests().__foreachbody2(object.ModuleInfo*)
    [0x42bb43]\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)).__lambda2(immutable(object.ModuleInfo*))
    [0x42a9d6]\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))).__foreachbody2(ref
    rt.sections_elf_shared.DSO) [0x42fb69]\n??:? int rt.sections_elf_shared.DSO.opApply(scope
    int delegate(ref rt.sections_elf_shared.DSO)) [0x430018]\n??:? int rt.minfo.moduleinfos_apply(scope
    int delegate(immutable(object.ModuleInfo*))) [0x42faf5]\n??:? int object.ModuleInfo.opApply(scope
    int delegate(object.ModuleInfo*)) [0x42a9ad]\n??:? runModuleUnitTests [0x42b919]\n??:?
    void rt.dmain2._d_run_main(int, char**, extern (C) int function(char[][])*).runAll()
    [0x42826c]\n??:? void rt.dmain2._d_run_main(int, char**, extern (C) int function(char[][])*).tryExec(scope
    void delegate()) [0x4281f3]\n??:? _d_run_main [0x42815e]\n??:? main [0x427bb3]\n??:?
    __libc_start_main [0x528cc554]\n1/1 unittests FAILED\n'''
  stdout: b''
- exit_code: 1
  program: "import std.typecons;\nimport std.math;\n/*\nThis function takes two positive\
    \ numbers x and y and returns the\n    biggest even integer number that is in\
    \ the range [x, y] inclusive. If \n    there's no such number, then the function\
    \ should return -1.\n\n    For example:\n    >>> choose_num(12L, 15L)\n    14L\n\
    \    >>> choose_num(13L, 12L)\n    -1L\n    \n*/\nlong choose_num(long x, long\
    \ y) \n{\n    long result = -1;\n    foreach(i; x..y+1)\n    {\n        if(i %\
    \ 2 == 0)\n        {\n            result = i;\n        }\n    }\n    return result;\n\
    }\nunittest\n{\n    alias candidate = choose_num;\n\n    assert(candidate(12L,\
    \ 15L) == 14L);\n    assert(candidate(13L, 12L) == -1L);\n    assert(candidate(33L,\
    \ 12354L) == 12354L);\n    assert(candidate(5234L, 5233L) == -1L);\n    assert(candidate(6L,\
    \ 29L) == 28L);\n    assert(candidate(27L, 10L) == -1L);\n    assert(candidate(7L,\
    \ 7L) == -1L);\n    assert(candidate(546L, 546L) == 546L);\n}\nvoid main(){}"
  status: SyntaxError
  stderr: 'b''Error: cannot find source code for runtime library file \''object.d\''\n       dmd
    might not be correctly installed. Run \''dmd -man\'' for installation instructions.\nimport
    path[0] = /tmp\nFailed: ["dmd", "-unittest", "-v", "-o-", "/tmp/tmpf89oph2c.d",
    "-I/tmp"]\n'''
  stdout: b''
  timestamp: 1659793719
- exit_code: 1
  program: "import std.typecons;\nimport std.math;\n/*\nThis function takes two positive\
    \ numbers x and y and returns the\n    biggest even integer number that is in\
    \ the range [x, y] inclusive. If \n    there's no such number, then the function\
    \ should return -1.\n\n    For example:\n    >>> choose_num(12L, 15L)\n    14L\n\
    \    >>> choose_num(13L, 12L)\n    -1L\n    \n*/\nlong choose_num(long x, long\
    \ y) \n{\n    if (x > y)\n        return -1;\n    else if (x % 2 == 0)\n     \
    \   return x;\n    else\n        return x + 1;\n}\nunittest\n{\n    alias candidate\
    \ = choose_num;\n\n    assert(candidate(12L, 15L) == 14L);\n    assert(candidate(13L,\
    \ 12L) == -1L);\n    assert(candidate(33L, 12354L) == 12354L);\n    assert(candidate(5234L,\
    \ 5233L) == -1L);\n    assert(candidate(6L, 29L) == 28L);\n    assert(candidate(27L,\
    \ 10L) == -1L);\n    assert(candidate(7L, 7L) == -1L);\n    assert(candidate(546L,\
    \ 546L) == 546L);\n}\nvoid main(){}"
  status: SyntaxError
  stderr: 'b''Error: cannot find source code for runtime library file \''object.d\''\n       dmd
    might not be correctly installed. Run \''dmd -man\'' for installation instructions.\nimport
    path[0] = /tmp\nFailed: ["dmd", "-unittest", "-v", "-o-", "/tmp/tmpzdiug8nr.d",
    "-I/tmp"]\n'''
  stdout: b''
  timestamp: 1659793719
- exit_code: 1
  program: "import std.typecons;\nimport std.math;\n/*\nThis function takes two positive\
    \ numbers x and y and returns the\n    biggest even integer number that is in\
    \ the range [x, y] inclusive. If \n    there's no such number, then the function\
    \ should return -1.\n\n    For example:\n    >>> choose_num(12L, 15L)\n    14L\n\
    \    >>> choose_num(13L, 12L)\n    -1L\n    \n*/\nlong choose_num(long x, long\
    \ y) \n{\n    if (x % 2 == 0)\n    {\n        return x;\n    }\n    else if (x\
    \ + 1 == y)\n    {\n        return -1;\n    }\n    else\n    {\n        return\
    \ choose_num(x + 1, y);\n    }\n}\nunittest\n{\n    alias candidate = choose_num;\n\
    \n    assert(candidate(12L, 15L) == 14L);\n    assert(candidate(13L, 12L) == -1L);\n\
    \    assert(candidate(33L, 12354L) == 12354L);\n    assert(candidate(5234L, 5233L)\
    \ == -1L);\n    assert(candidate(6L, 29L) == 28L);\n    assert(candidate(27L,\
    \ 10L) == -1L);\n    assert(candidate(7L, 7L) == -1L);\n    assert(candidate(546L,\
    \ 546L) == 546L);\n}\nvoid main(){}"
  status: SyntaxError
  stderr: 'b''Error: cannot find source code for runtime library file \''object.d\''\n       dmd
    might not be correctly installed. Run \''dmd -man\'' for installation instructions.\nimport
    path[0] = /tmp\nFailed: ["dmd", "-unittest", "-v", "-o-", "/tmp/tmpzkr__1eu.d",
    "-I/tmp"]\n'''
  stdout: b''
  timestamp: 1659793719
- exit_code: 1
  program: "import std.typecons;\nimport std.math;\n/*\nThis function takes two positive\
    \ numbers x and y and returns the\n    biggest even integer number that is in\
    \ the range [x, y] inclusive. If \n    there's no such number, then the function\
    \ should return -1.\n\n    For example:\n    >>> choose_num(12L, 15L)\n    14L\n\
    \    >>> choose_num(13L, 12L)\n    -1L\n    \n*/\nlong choose_num(long x, long\
    \ y) \n{\n    long result = -1;\n    if (x % 2 == 0)\n    {\n        result =\
    \ x;\n    }\n    else\n    {\n        result = x + 1;\n    }\n    if (result >\
    \ y)\n    {\n        result = -1;\n    }\n    return result;\n}\nunittest\n{\n\
    \    alias candidate = choose_num;\n\n    assert(candidate(12L, 15L) == 14L);\n\
    \    assert(candidate(13L, 12L) == -1L);\n    assert(candidate(33L, 12354L) ==\
    \ 12354L);\n    assert(candidate(5234L, 5233L) == -1L);\n    assert(candidate(6L,\
    \ 29L) == 28L);\n    assert(candidate(27L, 10L) == -1L);\n    assert(candidate(7L,\
    \ 7L) == -1L);\n    assert(candidate(546L, 546L) == 546L);\n}\nvoid main(){}"
  status: Exception
  stderr: 'b''core.exception.AssertError@/tmp/tmpigxyzbx6.d(36): unittest failure\n----------------\n??:?
    _d_unittestp [0x427e1d]\n??:? void tmpigxyzbx6.__unittest_L32_C1() [0x427a79]\n??:?
    void tmpigxyzbx6.__modtest() [0x427ba0]\n??:? int core.runtime.runModuleUnitTests().__foreachbody2(object.ModuleInfo*)
    [0x42bb43]\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)).__lambda2(immutable(object.ModuleInfo*))
    [0x42a9d6]\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))).__foreachbody2(ref
    rt.sections_elf_shared.DSO) [0x42fb69]\n??:? int rt.sections_elf_shared.DSO.opApply(scope
    int delegate(ref rt.sections_elf_shared.DSO)) [0x430018]\n??:? int rt.minfo.moduleinfos_apply(scope
    int delegate(immutable(object.ModuleInfo*))) [0x42faf5]\n??:? int object.ModuleInfo.opApply(scope
    int delegate(object.ModuleInfo*)) [0x42a9ad]\n??:? runModuleUnitTests [0x42b919]\n??:?
    void rt.dmain2._d_run_main(int, char**, extern (C) int function(char[][])*).runAll()
    [0x42826c]\n??:? void rt.dmain2._d_run_main(int, char**, extern (C) int function(char[][])*).tryExec(scope
    void delegate()) [0x4281f3]\n??:? _d_run_main [0x42815e]\n??:? main [0x427bb3]\n??:?
    __libc_start_main [0x528cc554]\n1/1 unittests FAILED\n'''
  stdout: b''
- exit_code: 1
  program: "import std.typecons;\nimport std.math;\n/*\nThis function takes two positive\
    \ numbers x and y and returns the\n    biggest even integer number that is in\
    \ the range [x, y] inclusive. If \n    there's no such number, then the function\
    \ should return -1.\n\n    For example:\n    >>> choose_num(12L, 15L)\n    14L\n\
    \    >>> choose_num(13L, 12L)\n    -1L\n    \n*/\nlong choose_num(long x, long\
    \ y) \n{\n    long result = -1;\n    if (x > y)\n    {\n        return result;\n\
    \    }\n    else\n    {\n        if (x % 2 == 0)\n        {\n            result\
    \ = x;\n        }\n        else\n        {\n            result = x + 1;\n    \
    \    }\n    }\n    return result;\n}\nunittest\n{\n    alias candidate = choose_num;\n\
    \n    assert(candidate(12L, 15L) == 14L);\n    assert(candidate(13L, 12L) == -1L);\n\
    \    assert(candidate(33L, 12354L) == 12354L);\n    assert(candidate(5234L, 5233L)\
    \ == -1L);\n    assert(candidate(6L, 29L) == 28L);\n    assert(candidate(27L,\
    \ 10L) == -1L);\n    assert(candidate(7L, 7L) == -1L);\n    assert(candidate(546L,\
    \ 546L) == 546L);\n}\nvoid main(){}"
  status: SyntaxError
  stderr: 'b''Error: cannot find source code for runtime library file \''object.d\''\n       dmd
    might not be correctly installed. Run \''dmd -man\'' for installation instructions.\nimport
    path[0] = /tmp\nFailed: ["dmd", "-unittest", "-v", "-o-", "/tmp/tmpuzb9cnav.d",
    "-I/tmp"]\n'''
  stdout: b''
  timestamp: 1659793719
- exit_code: 1
  program: "import std.typecons;\nimport std.math;\n/*\nThis function takes two positive\
    \ numbers x and y and returns the\n    biggest even integer number that is in\
    \ the range [x, y] inclusive. If \n    there's no such number, then the function\
    \ should return -1.\n\n    For example:\n    >>> choose_num(12L, 15L)\n    14L\n\
    \    >>> choose_num(13L, 12L)\n    -1L\n    \n*/\nlong choose_num(long x, long\
    \ y) \n{\n    long z = x;\n    while (z <= y)\n    {\n        if (z % 2 == 0)\n\
    \        {\n            return z;\n        }\n        z++;\n    }\n    return\
    \ -1;\n}\nunittest\n{\n    alias candidate = choose_num;\n\n    assert(candidate(12L,\
    \ 15L) == 14L);\n    assert(candidate(13L, 12L) == -1L);\n    assert(candidate(33L,\
    \ 12354L) == 12354L);\n    assert(candidate(5234L, 5233L) == -1L);\n    assert(candidate(6L,\
    \ 29L) == 28L);\n    assert(candidate(27L, 10L) == -1L);\n    assert(candidate(7L,\
    \ 7L) == -1L);\n    assert(candidate(546L, 546L) == 546L);\n}\nvoid main(){}"
  status: Exception
  stderr: 'b''core.exception.AssertError@/tmp/tmp2y0mo5k6.d(32): unittest failure\n----------------\n??:?
    _d_unittestp [0x427e15]\n??:? void tmp2y0mo5k6.__unittest_L28_C1() [0x427a71]\n??:?
    void tmp2y0mo5k6.__modtest() [0x427b98]\n??:? int core.runtime.runModuleUnitTests().__foreachbody2(object.ModuleInfo*)
    [0x42bb3b]\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)).__lambda2(immutable(object.ModuleInfo*))
    [0x42a9ce]\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))).__foreachbody2(ref
    rt.sections_elf_shared.DSO) [0x42fb61]\n??:? int rt.sections_elf_shared.DSO.opApply(scope
    int delegate(ref rt.sections_elf_shared.DSO)) [0x430010]\n??:? int rt.minfo.moduleinfos_apply(scope
    int delegate(immutable(object.ModuleInfo*))) [0x42faed]\n??:? int object.ModuleInfo.opApply(scope
    int delegate(object.ModuleInfo*)) [0x42a9a5]\n??:? runModuleUnitTests [0x42b911]\n??:?
    void rt.dmain2._d_run_main(int, char**, extern (C) int function(char[][])*).runAll()
    [0x428264]\n??:? void rt.dmain2._d_run_main(int, char**, extern (C) int function(char[][])*).tryExec(scope
    void delegate()) [0x4281eb]\n??:? _d_run_main [0x428156]\n??:? main [0x427bab]\n??:?
    __libc_start_main [0x520c1554]\n1/1 unittests FAILED\n'''
  stdout: b''
- exit_code: 1
  program: "import std.typecons;\nimport std.math;\n/*\nThis function takes two positive\
    \ numbers x and y and returns the\n    biggest even integer number that is in\
    \ the range [x, y] inclusive. If \n    there's no such number, then the function\
    \ should return -1.\n\n    For example:\n    >>> choose_num(12L, 15L)\n    14L\n\
    \    >>> choose_num(13L, 12L)\n    -1L\n    \n*/\nlong choose_num(long x, long\
    \ y) \n{\n    long result = -1;\n    if (x > y)\n    {\n        return result;\n\
    \    }\n    else\n    {\n        long i = x;\n        while (i <= y)\n       \
    \ {\n            if (i % 2 == 0)\n            {\n                result = i;\n\
    \            }\n            i++;\n        }\n    }\n    return result;\n}\nunittest\n\
    {\n    alias candidate = choose_num;\n\n    assert(candidate(12L, 15L) == 14L);\n\
    \    assert(candidate(13L, 12L) == -1L);\n    assert(candidate(33L, 12354L) ==\
    \ 12354L);\n    assert(candidate(5234L, 5233L) == -1L);\n    assert(candidate(6L,\
    \ 29L) == 28L);\n    assert(candidate(27L, 10L) == -1L);\n    assert(candidate(7L,\
    \ 7L) == -1L);\n    assert(candidate(546L, 546L) == 546L);\n}\nvoid main(){}"
  status: SyntaxError
  stderr: 'b''Error: cannot find source code for runtime library file \''object.d\''\n       dmd
    might not be correctly installed. Run \''dmd -man\'' for installation instructions.\nimport
    path[0] = /tmp\nFailed: ["dmd", "-unittest", "-v", "-o-", "/tmp/tmpjfm171t2.d",
    "-I/tmp"]\n'''
  stdout: b''
  timestamp: 1659793719
- exit_code: 1
  program: "import std.typecons;\nimport std.math;\n/*\nThis function takes two positive\
    \ numbers x and y and returns the\n    biggest even integer number that is in\
    \ the range [x, y] inclusive. If \n    there's no such number, then the function\
    \ should return -1.\n\n    For example:\n    >>> choose_num(12L, 15L)\n    14L\n\
    \    >>> choose_num(13L, 12L)\n    -1L\n    \n*/\nlong choose_num(long x, long\
    \ y) \n{\n    if (x > y)\n        return -1;\n    long z = x % 2;\n    if (z ==\
    \ 0)\n        return x;\n    else\n        return x + 1;\n}\nunittest\n{\n   \
    \ alias candidate = choose_num;\n\n    assert(candidate(12L, 15L) == 14L);\n \
    \   assert(candidate(13L, 12L) == -1L);\n    assert(candidate(33L, 12354L) ==\
    \ 12354L);\n    assert(candidate(5234L, 5233L) == -1L);\n    assert(candidate(6L,\
    \ 29L) == 28L);\n    assert(candidate(27L, 10L) == -1L);\n    assert(candidate(7L,\
    \ 7L) == -1L);\n    assert(candidate(546L, 546L) == 546L);\n}\nvoid main(){}"
  status: SyntaxError
  stderr: 'b''Error: cannot find source code for runtime library file \''object.d\''\n       dmd
    might not be correctly installed. Run \''dmd -man\'' for installation instructions.\nimport
    path[0] = /tmp\nFailed: ["dmd", "-unittest", "-v", "-o-", "/tmp/tmpe67vf3ok.d",
    "-I/tmp"]\n'''
  stdout: b''
  timestamp: 1659793719
- exit_code: 1
  program: "import std.typecons;\nimport std.math;\n/*\nThis function takes two positive\
    \ numbers x and y and returns the\n    biggest even integer number that is in\
    \ the range [x, y] inclusive. If \n    there's no such number, then the function\
    \ should return -1.\n\n    For example:\n    >>> choose_num(12L, 15L)\n    14L\n\
    \    >>> choose_num(13L, 12L)\n    -1L\n    \n*/\nlong choose_num(long x, long\
    \ y) \n{\n    if (x > y)\n        return -1;\n    else if (x % 2 == 0)\n     \
    \   return x;\n    else\n        return x + 1;\n}\nunittest\n{\n    alias candidate\
    \ = choose_num;\n\n    assert(candidate(12L, 15L) == 14L);\n    assert(candidate(13L,\
    \ 12L) == -1L);\n    assert(candidate(33L, 12354L) == 12354L);\n    assert(candidate(5234L,\
    \ 5233L) == -1L);\n    assert(candidate(6L, 29L) == 28L);\n    assert(candidate(27L,\
    \ 10L) == -1L);\n    assert(candidate(7L, 7L) == -1L);\n    assert(candidate(546L,\
    \ 546L) == 546L);\n}\nvoid main(){}"
  status: SyntaxError
  stderr: 'b''Error: cannot find source code for runtime library file \''object.d\''\n       dmd
    might not be correctly installed. Run \''dmd -man\'' for installation instructions.\nimport
    path[0] = /tmp\nFailed: ["dmd", "-unittest", "-v", "-o-", "/tmp/tmpzdiug8nr.d",
    "-I/tmp"]\n'''
  stdout: b''
  timestamp: 1659793719
- exit_code: 1
  program: "import std.typecons;\nimport std.math;\n/*\nThis function takes two positive\
    \ numbers x and y and returns the\n    biggest even integer number that is in\
    \ the range [x, y] inclusive. If \n    there's no such number, then the function\
    \ should return -1.\n\n    For example:\n    >>> choose_num(12L, 15L)\n    14L\n\
    \    >>> choose_num(13L, 12L)\n    -1L\n    \n*/\nlong choose_num(long x, long\
    \ y) \n{\n    long i = x;\n    while (i <= y) {\n        if (i % 2 == 0) {\n \
    \           return i;\n        }\n        i++;\n    }\n    return -1;\n}\nunittest\n\
    {\n    alias candidate = choose_num;\n\n    assert(candidate(12L, 15L) == 14L);\n\
    \    assert(candidate(13L, 12L) == -1L);\n    assert(candidate(33L, 12354L) ==\
    \ 12354L);\n    assert(candidate(5234L, 5233L) == -1L);\n    assert(candidate(6L,\
    \ 29L) == 28L);\n    assert(candidate(27L, 10L) == -1L);\n    assert(candidate(7L,\
    \ 7L) == -1L);\n    assert(candidate(546L, 546L) == 546L);\n}\nvoid main(){}"
  status: SyntaxError
  stderr: 'b''Error: cannot find source code for runtime library file \''object.d\''\n       dmd
    might not be correctly installed. Run \''dmd -man\'' for installation instructions.\nimport
    path[0] = /tmp\nFailed: ["dmd", "-unittest", "-v", "-o-", "/tmp/tmpqyileluk.d",
    "-I/tmp"]\n'''
  stdout: b''
  timestamp: 1659793719
- exit_code: 1
  program: "import std.typecons;\nimport std.math;\n/*\nThis function takes two positive\
    \ numbers x and y and returns the\n    biggest even integer number that is in\
    \ the range [x, y] inclusive. If \n    there's no such number, then the function\
    \ should return -1.\n\n    For example:\n    >>> choose_num(12L, 15L)\n    14L\n\
    \    >>> choose_num(13L, 12L)\n    -1L\n    \n*/\nlong choose_num(long x, long\
    \ y) \n{\n    long result = -1;\n    long i = x;\n    while (i <= y) {\n     \
    \   if (i % 2 == 0) {\n            result = i;\n        }\n        i++;\n    }\n\
    \    return result;\n}\nunittest\n{\n    alias candidate = choose_num;\n\n   \
    \ assert(candidate(12L, 15L) == 14L);\n    assert(candidate(13L, 12L) == -1L);\n\
    \    assert(candidate(33L, 12354L) == 12354L);\n    assert(candidate(5234L, 5233L)\
    \ == -1L);\n    assert(candidate(6L, 29L) == 28L);\n    assert(candidate(27L,\
    \ 10L) == -1L);\n    assert(candidate(7L, 7L) == -1L);\n    assert(candidate(546L,\
    \ 546L) == 546L);\n}\nvoid main(){}"
  status: SyntaxError
  stderr: 'b''Error: cannot find source code for runtime library file \''object.d\''\n       dmd
    might not be correctly installed. Run \''dmd -man\'' for installation instructions.\nimport
    path[0] = /tmp\nFailed: ["dmd", "-unittest", "-v", "-o-", "/tmp/tmpgzxja1w7.d",
    "-I/tmp"]\n'''
  stdout: b''
  timestamp: 1659793719
- exit_code: 1
  program: "import std.typecons;\nimport std.math;\n/*\nThis function takes two positive\
    \ numbers x and y and returns the\n    biggest even integer number that is in\
    \ the range [x, y] inclusive. If \n    there's no such number, then the function\
    \ should return -1.\n\n    For example:\n    >>> choose_num(12L, 15L)\n    14L\n\
    \    >>> choose_num(13L, 12L)\n    -1L\n    \n*/\nlong choose_num(long x, long\
    \ y) \n{\n    long result;\n    if (x % 2 == 0)\n    {\n        result = x;\n\
    \    }\n    else\n    {\n        result = x + 1;\n    }\n    if (result > y)\n\
    \    {\n        return -1;\n    }\n    else\n    {\n        return result;\n \
    \   }\n}\nunittest\n{\n    alias candidate = choose_num;\n\n    assert(candidate(12L,\
    \ 15L) == 14L);\n    assert(candidate(13L, 12L) == -1L);\n    assert(candidate(33L,\
    \ 12354L) == 12354L);\n    assert(candidate(5234L, 5233L) == -1L);\n    assert(candidate(6L,\
    \ 29L) == 28L);\n    assert(candidate(27L, 10L) == -1L);\n    assert(candidate(7L,\
    \ 7L) == -1L);\n    assert(candidate(546L, 546L) == 546L);\n}\nvoid main(){}"
  status: SyntaxError
  stderr: 'b''Error: cannot find source code for runtime library file \''object.d\''\n       dmd
    might not be correctly installed. Run \''dmd -man\'' for installation instructions.\nimport
    path[0] = /tmp\nFailed: ["dmd", "-unittest", "-v", "-o-", "/tmp/tmpz_k03323.d",
    "-I/tmp"]\n'''
  stdout: b''
  timestamp: 1659793719
- exit_code: 1
  program: "import std.typecons;\nimport std.math;\n/*\nThis function takes two positive\
    \ numbers x and y and returns the\n    biggest even integer number that is in\
    \ the range [x, y] inclusive. If \n    there's no such number, then the function\
    \ should return -1.\n\n    For example:\n    >>> choose_num(12L, 15L)\n    14L\n\
    \    >>> choose_num(13L, 12L)\n    -1L\n    \n*/\nlong choose_num(long x, long\
    \ y) \n{\n    if (x > y)\n    {\n        return -1L;\n    }\n    else\n    {\n\
    \        long z = x;\n        while (z <= y)\n        {\n            if (z % 2\
    \ == 0)\n            {\n                return z;\n            }\n           \
    \ z++;\n        }\n        return -1L;\n    }\n}\nunittest\n{\n    alias candidate\
    \ = choose_num;\n\n    assert(candidate(12L, 15L) == 14L);\n    assert(candidate(13L,\
    \ 12L) == -1L);\n    assert(candidate(33L, 12354L) == 12354L);\n    assert(candidate(5234L,\
    \ 5233L) == -1L);\n    assert(candidate(6L, 29L) == 28L);\n    assert(candidate(27L,\
    \ 10L) == -1L);\n    assert(candidate(7L, 7L) == -1L);\n    assert(candidate(546L,\
    \ 546L) == 546L);\n}\nvoid main(){}"
  status: SyntaxError
  stderr: 'b''Error: cannot find source code for runtime library file \''object.d\''\n       dmd
    might not be correctly installed. Run \''dmd -man\'' for installation instructions.\nimport
    path[0] = /tmp\nFailed: ["dmd", "-unittest", "-v", "-o-", "/tmp/tmp0o3uq622.d",
    "-I/tmp"]\n'''
  stdout: b''
  timestamp: 1659793719
- exit_code: 1
  program: "import std.typecons;\nimport std.math;\n/*\nThis function takes two positive\
    \ numbers x and y and returns the\n    biggest even integer number that is in\
    \ the range [x, y] inclusive. If \n    there's no such number, then the function\
    \ should return -1.\n\n    For example:\n    >>> choose_num(12L, 15L)\n    14L\n\
    \    >>> choose_num(13L, 12L)\n    -1L\n    \n*/\nlong choose_num(long x, long\
    \ y) \n{\n    // your code here\n    long z = 0;\n    if (x > y)\n    {\n    \
    \    z = -1;\n    }\n    else if (x % 2 == 0)\n    {\n        z = x;\n    }\n\
    \    else if (x % 2 != 0)\n    {\n        z = x + 1;\n    }\n    return z;\n}\n\
    unittest\n{\n    alias candidate = choose_num;\n\n    assert(candidate(12L, 15L)\
    \ == 14L);\n    assert(candidate(13L, 12L) == -1L);\n    assert(candidate(33L,\
    \ 12354L) == 12354L);\n    assert(candidate(5234L, 5233L) == -1L);\n    assert(candidate(6L,\
    \ 29L) == 28L);\n    assert(candidate(27L, 10L) == -1L);\n    assert(candidate(7L,\
    \ 7L) == -1L);\n    assert(candidate(546L, 546L) == 546L);\n}\nvoid main(){}"
  status: SyntaxError
  stderr: 'b''Error: cannot find source code for runtime library file \''object.d\''\n       dmd
    might not be correctly installed. Run \''dmd -man\'' for installation instructions.\nimport
    path[0] = /tmp\nFailed: ["dmd", "-unittest", "-v", "-o-", "/tmp/tmp3m62dny4.d",
    "-I/tmp"]\n'''
  stdout: b''
  timestamp: 1659793719
- exit_code: 1
  program: "import std.typecons;\nimport std.math;\n/*\nThis function takes two positive\
    \ numbers x and y and returns the\n    biggest even integer number that is in\
    \ the range [x, y] inclusive. If \n    there's no such number, then the function\
    \ should return -1.\n\n    For example:\n    >>> choose_num(12L, 15L)\n    14L\n\
    \    >>> choose_num(13L, 12L)\n    -1L\n    \n*/\nlong choose_num(long x, long\
    \ y) \n{\n    if (x > y)\n    {\n        return -1L;\n    }\n    else if (x %\
    \ 2 == 0)\n    {\n        return x;\n    }\n    else\n    {\n        return choose_num(x\
    \ + 1, y);\n    }\n}\nunittest\n{\n    alias candidate = choose_num;\n\n    assert(candidate(12L,\
    \ 15L) == 14L);\n    assert(candidate(13L, 12L) == -1L);\n    assert(candidate(33L,\
    \ 12354L) == 12354L);\n    assert(candidate(5234L, 5233L) == -1L);\n    assert(candidate(6L,\
    \ 29L) == 28L);\n    assert(candidate(27L, 10L) == -1L);\n    assert(candidate(7L,\
    \ 7L) == -1L);\n    assert(candidate(546L, 546L) == 546L);\n}\nvoid main(){}"
  status: SyntaxError
  stderr: 'b''Error: cannot find source code for runtime library file \''object.d\''\n       dmd
    might not be correctly installed. Run \''dmd -man\'' for installation instructions.\nimport
    path[0] = /tmp\nFailed: ["dmd", "-unittest", "-v", "-o-", "/tmp/tmprqxrzaat.d",
    "-I/tmp"]\n'''
  stdout: b''
  timestamp: 1659793719
- exit_code: 1
  program: "import std.typecons;\nimport std.math;\n/*\nThis function takes two positive\
    \ numbers x and y and returns the\n    biggest even integer number that is in\
    \ the range [x, y] inclusive. If \n    there's no such number, then the function\
    \ should return -1.\n\n    For example:\n    >>> choose_num(12L, 15L)\n    14L\n\
    \    >>> choose_num(13L, 12L)\n    -1L\n    \n*/\nlong choose_num(long x, long\
    \ y) \n{\n    long result = -1;\n    if (x % 2 == 0)\n    {\n        result =\
    \ x;\n    }\n    else\n    {\n        x++;\n    }\n    if (x <= y)\n    {\n  \
    \      result = x;\n    }\n    return result;\n}\nunittest\n{\n    alias candidate\
    \ = choose_num;\n\n    assert(candidate(12L, 15L) == 14L);\n    assert(candidate(13L,\
    \ 12L) == -1L);\n    assert(candidate(33L, 12354L) == 12354L);\n    assert(candidate(5234L,\
    \ 5233L) == -1L);\n    assert(candidate(6L, 29L) == 28L);\n    assert(candidate(27L,\
    \ 10L) == -1L);\n    assert(candidate(7L, 7L) == -1L);\n    assert(candidate(546L,\
    \ 546L) == 546L);\n}\nvoid main(){}"
  status: SyntaxError
  stderr: 'b''Error: cannot find source code for runtime library file \''object.d\''\n       dmd
    might not be correctly installed. Run \''dmd -man\'' for installation instructions.\nimport
    path[0] = /tmp\nFailed: ["dmd", "-unittest", "-v", "-o-", "/tmp/tmpdutl04ou.d",
    "-I/tmp"]\n'''
  stdout: b''
  timestamp: 1659793719
- exit_code: 1
  program: "import std.typecons;\nimport std.math;\n/*\nThis function takes two positive\
    \ numbers x and y and returns the\n    biggest even integer number that is in\
    \ the range [x, y] inclusive. If \n    there's no such number, then the function\
    \ should return -1.\n\n    For example:\n    >>> choose_num(12L, 15L)\n    14L\n\
    \    >>> choose_num(13L, 12L)\n    -1L\n    \n*/\nlong choose_num(long x, long\
    \ y) \n{\n    long result = -1;\n    if (x > y)\n    {\n        return result;\n\
    \    }\n    else\n    {\n        if (x % 2 == 0)\n        {\n            result\
    \ = x;\n        }\n        else\n        {\n            result = x + 1;\n    \
    \    }\n    }\n    return result;\n}\nunittest\n{\n    alias candidate = choose_num;\n\
    \n    assert(candidate(12L, 15L) == 14L);\n    assert(candidate(13L, 12L) == -1L);\n\
    \    assert(candidate(33L, 12354L) == 12354L);\n    assert(candidate(5234L, 5233L)\
    \ == -1L);\n    assert(candidate(6L, 29L) == 28L);\n    assert(candidate(27L,\
    \ 10L) == -1L);\n    assert(candidate(7L, 7L) == -1L);\n    assert(candidate(546L,\
    \ 546L) == 546L);\n}\nvoid main(){}"
  status: SyntaxError
  stderr: 'b''Error: cannot find source code for runtime library file \''object.d\''\n       dmd
    might not be correctly installed. Run \''dmd -man\'' for installation instructions.\nimport
    path[0] = /tmp\nFailed: ["dmd", "-unittest", "-v", "-o-", "/tmp/tmpuzb9cnav.d",
    "-I/tmp"]\n'''
  stdout: b''
  timestamp: 1659793719
- exit_code: 1
  program: "import std.typecons;\nimport std.math;\n/*\nThis function takes two positive\
    \ numbers x and y and returns the\n    biggest even integer number that is in\
    \ the range [x, y] inclusive. If \n    there's no such number, then the function\
    \ should return -1.\n\n    For example:\n    >>> choose_num(12L, 15L)\n    14L\n\
    \    >>> choose_num(13L, 12L)\n    -1L\n    \n*/\nlong choose_num(long x, long\
    \ y) \n{\n    if (x % 2 == 0)\n    {\n        return x;\n    }\n    else if (x\
    \ + 1 <= y)\n    {\n        return x + 1;\n    }\n    else\n    {\n        return\
    \ -1;\n    }\n}\nunittest\n{\n    alias candidate = choose_num;\n\n    assert(candidate(12L,\
    \ 15L) == 14L);\n    assert(candidate(13L, 12L) == -1L);\n    assert(candidate(33L,\
    \ 12354L) == 12354L);\n    assert(candidate(5234L, 5233L) == -1L);\n    assert(candidate(6L,\
    \ 29L) == 28L);\n    assert(candidate(27L, 10L) == -1L);\n    assert(candidate(7L,\
    \ 7L) == -1L);\n    assert(candidate(546L, 546L) == 546L);\n}\nvoid main(){}"
  status: SyntaxError
  stderr: 'b''Error: cannot find source code for runtime library file \''object.d\''\n       dmd
    might not be correctly installed. Run \''dmd -man\'' for installation instructions.\nimport
    path[0] = /tmp\nFailed: ["dmd", "-unittest", "-v", "-o-", "/tmp/tmpa5b4qe1t.d",
    "-I/tmp"]\n'''
  stdout: b''
  timestamp: 1659793719
- exit_code: 1
  program: "import std.typecons;\nimport std.math;\n/*\nThis function takes two positive\
    \ numbers x and y and returns the\n    biggest even integer number that is in\
    \ the range [x, y] inclusive. If \n    there's no such number, then the function\
    \ should return -1.\n\n    For example:\n    >>> choose_num(12L, 15L)\n    14L\n\
    \    >>> choose_num(13L, 12L)\n    -1L\n    \n*/\nlong choose_num(long x, long\
    \ y) \n{\n    if (x % 2 == 0)\n    {\n        return x;\n    }\n    else if (x\
    \ % 2 == 1)\n    {\n        return choose_num(x + 1, y);\n    }\n    else if (x\
    \ > y)\n    {\n        return -1;\n    }\n}\nunittest\n{\n    alias candidate\
    \ = choose_num;\n\n    assert(candidate(12L, 15L) == 14L);\n    assert(candidate(13L,\
    \ 12L) == -1L);\n    assert(candidate(33L, 12354L) == 12354L);\n    assert(candidate(5234L,\
    \ 5233L) == -1L);\n    assert(candidate(6L, 29L) == 28L);\n    assert(candidate(27L,\
    \ 10L) == -1L);\n    assert(candidate(7L, 7L) == -1L);\n    assert(candidate(546L,\
    \ 546L) == 546L);\n}\nvoid main(){}"
  status: SyntaxError
  stderr: 'b''Error: cannot find source code for runtime library file \''object.d\''\n       dmd
    might not be correctly installed. Run \''dmd -man\'' for installation instructions.\nimport
    path[0] = /tmp\nFailed: ["dmd", "-unittest", "-v", "-o-", "/tmp/tmp1n0kx4k5.d",
    "-I/tmp"]\n'''
  stdout: b''
  timestamp: 1659793719
- exit_code: 1
  program: "import std.typecons;\nimport std.math;\n/*\nThis function takes two positive\
    \ numbers x and y and returns the\n    biggest even integer number that is in\
    \ the range [x, y] inclusive. If \n    there's no such number, then the function\
    \ should return -1.\n\n    For example:\n    >>> choose_num(12L, 15L)\n    14L\n\
    \    >>> choose_num(13L, 12L)\n    -1L\n    \n*/\nlong choose_num(long x, long\
    \ y) \n{\n    long z = 0;\n    if (x % 2 == 0)\n    {\n        z = x;\n    }\n\
    \    else\n    {\n        z = x + 1;\n    }\n    if (z > y)\n    {\n        return\
    \ -1;\n    }\n    else\n    {\n        return z;\n    }\n}\n/*\nThis function\
    \ takes a positive number x and returns the biggest \n    integer number that\
    \ is in the range [1, x] inclusive and is a power of 2. \n    If there's no such\
    \ number, then the function should return -1.\nunittest\n{\n    alias candidate\
    \ = choose_num;\n\n    assert(candidate(12L, 15L) == 14L);\n    assert(candidate(13L,\
    \ 12L) == -1L);\n    assert(candidate(33L, 12354L) == 12354L);\n    assert(candidate(5234L,\
    \ 5233L) == -1L);\n    assert(candidate(6L, 29L) == 28L);\n    assert(candidate(27L,\
    \ 10L) == -1L);\n    assert(candidate(7L, 7L) == -1L);\n    assert(candidate(546L,\
    \ 546L) == 546L);\n}\nvoid main(){}"
  status: SyntaxError
  stderr: 'b''/tmp/tmp_rjl5m8c.d(35): Error: unterminated /* */ comment\nFailed: ["dmd",
    "-unittest", "-v", "-o-", "/tmp/tmp_rjl5m8c.d", "-I/tmp"]\n'''
  stdout: b''
  timestamp: 1659793719
- exit_code: 1
  program: "import std.typecons;\nimport std.math;\n/*\nThis function takes two positive\
    \ numbers x and y and returns the\n    biggest even integer number that is in\
    \ the range [x, y] inclusive. If \n    there's no such number, then the function\
    \ should return -1.\n\n    For example:\n    >>> choose_num(12L, 15L)\n    14L\n\
    \    >>> choose_num(13L, 12L)\n    -1L\n    \n*/\nlong choose_num(long x, long\
    \ y) \n{\n    long result = -1;\n    if (x % 2 == 0)\n    {\n        result =\
    \ x;\n    }\n    else\n    {\n        result = x + 1;\n    }\n    if (result >\
    \ y)\n    {\n        result = -1;\n    }\n    return result;\n}\nunittest\n{\n\
    \    alias candidate = choose_num;\n\n    assert(candidate(12L, 15L) == 14L);\n\
    \    assert(candidate(13L, 12L) == -1L);\n    assert(candidate(33L, 12354L) ==\
    \ 12354L);\n    assert(candidate(5234L, 5233L) == -1L);\n    assert(candidate(6L,\
    \ 29L) == 28L);\n    assert(candidate(27L, 10L) == -1L);\n    assert(candidate(7L,\
    \ 7L) == -1L);\n    assert(candidate(546L, 546L) == 546L);\n}\nvoid main(){}"
  status: Exception
  stderr: 'b''core.exception.AssertError@/tmp/tmpigxyzbx6.d(36): unittest failure\n----------------\n??:?
    _d_unittestp [0x427e1d]\n??:? void tmpigxyzbx6.__unittest_L32_C1() [0x427a79]\n??:?
    void tmpigxyzbx6.__modtest() [0x427ba0]\n??:? int core.runtime.runModuleUnitTests().__foreachbody2(object.ModuleInfo*)
    [0x42bb43]\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)).__lambda2(immutable(object.ModuleInfo*))
    [0x42a9d6]\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))).__foreachbody2(ref
    rt.sections_elf_shared.DSO) [0x42fb69]\n??:? int rt.sections_elf_shared.DSO.opApply(scope
    int delegate(ref rt.sections_elf_shared.DSO)) [0x430018]\n??:? int rt.minfo.moduleinfos_apply(scope
    int delegate(immutable(object.ModuleInfo*))) [0x42faf5]\n??:? int object.ModuleInfo.opApply(scope
    int delegate(object.ModuleInfo*)) [0x42a9ad]\n??:? runModuleUnitTests [0x42b919]\n??:?
    void rt.dmain2._d_run_main(int, char**, extern (C) int function(char[][])*).runAll()
    [0x42826c]\n??:? void rt.dmain2._d_run_main(int, char**, extern (C) int function(char[][])*).tryExec(scope
    void delegate()) [0x4281f3]\n??:? _d_run_main [0x42815e]\n??:? main [0x427bb3]\n??:?
    __libc_start_main [0x528cc554]\n1/1 unittests FAILED\n'''
  stdout: b''
- exit_code: 1
  program: "import std.typecons;\nimport std.math;\n/*\nThis function takes two positive\
    \ numbers x and y and returns the\n    biggest even integer number that is in\
    \ the range [x, y] inclusive. If \n    there's no such number, then the function\
    \ should return -1.\n\n    For example:\n    >>> choose_num(12L, 15L)\n    14L\n\
    \    >>> choose_num(13L, 12L)\n    -1L\n    \n*/\nlong choose_num(long x, long\
    \ y) \n{\n    long result = -1;\n    if (x > y)\n    {\n        return result;\n\
    \    }\n    else\n    {\n        for (long i = y; i >= x; i--)\n        {\n  \
    \          if (i % 2 == 0)\n            {\n                result = i;\n     \
    \           break;\n            }\n        }\n    }\n    return result;\n}\nunittest\n\
    {\n    alias candidate = choose_num;\n\n    assert(candidate(12L, 15L) == 14L);\n\
    \    assert(candidate(13L, 12L) == -1L);\n    assert(candidate(33L, 12354L) ==\
    \ 12354L);\n    assert(candidate(5234L, 5233L) == -1L);\n    assert(candidate(6L,\
    \ 29L) == 28L);\n    assert(candidate(27L, 10L) == -1L);\n    assert(candidate(7L,\
    \ 7L) == -1L);\n    assert(candidate(546L, 546L) == 546L);\n}\nvoid main(){}"
  status: SyntaxError
  stderr: 'b''Error: cannot find source code for runtime library file \''object.d\''\n       dmd
    might not be correctly installed. Run \''dmd -man\'' for installation instructions.\nimport
    path[0] = /tmp\nFailed: ["dmd", "-unittest", "-v", "-o-", "/tmp/tmplud42hfw.d",
    "-I/tmp"]\n'''
  stdout: b''
  timestamp: 1659793719
- exit_code: 1
  program: "import std.typecons;\nimport std.math;\n/*\nThis function takes two positive\
    \ numbers x and y and returns the\n    biggest even integer number that is in\
    \ the range [x, y] inclusive. If \n    there's no such number, then the function\
    \ should return -1.\n\n    For example:\n    >>> choose_num(12L, 15L)\n    14L\n\
    \    >>> choose_num(13L, 12L)\n    -1L\n    \n*/\nlong choose_num(long x, long\
    \ y) \n{\n    if (x > y) \n    {\n        return -1L;\n    }\n    else if (x %\
    \ 2 == 0) \n    {\n        return x;\n    }\n    else \n    {\n        return\
    \ choose_num(x + 1, y);\n    }\n}\nunittest\n{\n    alias candidate = choose_num;\n\
    \n    assert(candidate(12L, 15L) == 14L);\n    assert(candidate(13L, 12L) == -1L);\n\
    \    assert(candidate(33L, 12354L) == 12354L);\n    assert(candidate(5234L, 5233L)\
    \ == -1L);\n    assert(candidate(6L, 29L) == 28L);\n    assert(candidate(27L,\
    \ 10L) == -1L);\n    assert(candidate(7L, 7L) == -1L);\n    assert(candidate(546L,\
    \ 546L) == 546L);\n}\nvoid main(){}"
  status: SyntaxError
  stderr: 'b''Error: cannot find source code for runtime library file \''object.d\''\n       dmd
    might not be correctly installed. Run \''dmd -man\'' for installation instructions.\nimport
    path[0] = /tmp\nFailed: ["dmd", "-unittest", "-v", "-o-", "/tmp/tmpgo2umxcc.d",
    "-I/tmp"]\n'''
  stdout: b''
  timestamp: 1659793719
- exit_code: 1
  program: "import std.typecons;\nimport std.math;\n/*\nThis function takes two positive\
    \ numbers x and y and returns the\n    biggest even integer number that is in\
    \ the range [x, y] inclusive. If \n    there's no such number, then the function\
    \ should return -1.\n\n    For example:\n    >>> choose_num(12L, 15L)\n    14L\n\
    \    >>> choose_num(13L, 12L)\n    -1L\n    \n*/\nlong choose_num(long x, long\
    \ y) \n{\n    long result = -1;\n    if (x % 2 == 0)\n    {\n        result =\
    \ x;\n    }\n    else\n    {\n        result = x + 1;\n    }\n    if (result >\
    \ y)\n    {\n        result = -1;\n    }\n    return result;\n}\nunittest\n{\n\
    \    alias candidate = choose_num;\n\n    assert(candidate(12L, 15L) == 14L);\n\
    \    assert(candidate(13L, 12L) == -1L);\n    assert(candidate(33L, 12354L) ==\
    \ 12354L);\n    assert(candidate(5234L, 5233L) == -1L);\n    assert(candidate(6L,\
    \ 29L) == 28L);\n    assert(candidate(27L, 10L) == -1L);\n    assert(candidate(7L,\
    \ 7L) == -1L);\n    assert(candidate(546L, 546L) == 546L);\n}\nvoid main(){}"
  status: Exception
  stderr: 'b''core.exception.AssertError@/tmp/tmpigxyzbx6.d(36): unittest failure\n----------------\n??:?
    _d_unittestp [0x427e1d]\n??:? void tmpigxyzbx6.__unittest_L32_C1() [0x427a79]\n??:?
    void tmpigxyzbx6.__modtest() [0x427ba0]\n??:? int core.runtime.runModuleUnitTests().__foreachbody2(object.ModuleInfo*)
    [0x42bb43]\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)).__lambda2(immutable(object.ModuleInfo*))
    [0x42a9d6]\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))).__foreachbody2(ref
    rt.sections_elf_shared.DSO) [0x42fb69]\n??:? int rt.sections_elf_shared.DSO.opApply(scope
    int delegate(ref rt.sections_elf_shared.DSO)) [0x430018]\n??:? int rt.minfo.moduleinfos_apply(scope
    int delegate(immutable(object.ModuleInfo*))) [0x42faf5]\n??:? int object.ModuleInfo.opApply(scope
    int delegate(object.ModuleInfo*)) [0x42a9ad]\n??:? runModuleUnitTests [0x42b919]\n??:?
    void rt.dmain2._d_run_main(int, char**, extern (C) int function(char[][])*).runAll()
    [0x42826c]\n??:? void rt.dmain2._d_run_main(int, char**, extern (C) int function(char[][])*).tryExec(scope
    void delegate()) [0x4281f3]\n??:? _d_run_main [0x42815e]\n??:? main [0x427bb3]\n??:?
    __libc_start_main [0x528cc554]\n1/1 unittests FAILED\n'''
  stdout: b''
- exit_code: 1
  program: "import std.typecons;\nimport std.math;\n/*\nThis function takes two positive\
    \ numbers x and y and returns the\n    biggest even integer number that is in\
    \ the range [x, y] inclusive. If \n    there's no such number, then the function\
    \ should return -1.\n\n    For example:\n    >>> choose_num(12L, 15L)\n    14L\n\
    \    >>> choose_num(13L, 12L)\n    -1L\n    \n*/\nlong choose_num(long x, long\
    \ y) \n{\n    long maxEven = -1;\n    foreach(i; x..y+1)\n    {\n        if(i\
    \ % 2 == 0)\n        {\n            maxEven = max(maxEven, i);\n        }\n  \
    \  }\n    return maxEven;\n}\nunittest\n{\n    alias candidate = choose_num;\n\
    \n    assert(candidate(12L, 15L) == 14L);\n    assert(candidate(13L, 12L) == -1L);\n\
    \    assert(candidate(33L, 12354L) == 12354L);\n    assert(candidate(5234L, 5233L)\
    \ == -1L);\n    assert(candidate(6L, 29L) == 28L);\n    assert(candidate(27L,\
    \ 10L) == -1L);\n    assert(candidate(7L, 7L) == -1L);\n    assert(candidate(546L,\
    \ 546L) == 546L);\n}\nvoid main(){}"
  status: SyntaxError
  stderr: 'b''Error: cannot find source code for runtime library file \''object.d\''\n       dmd
    might not be correctly installed. Run \''dmd -man\'' for installation instructions.\nimport
    path[0] = /tmp\nFailed: ["dmd", "-unittest", "-v", "-o-", "/tmp/tmpbpbxo7gv.d",
    "-I/tmp"]\n'''
  stdout: b''
  timestamp: 1659793719
- exit_code: 1
  program: "import std.typecons;\nimport std.math;\n/*\nThis function takes two positive\
    \ numbers x and y and returns the\n    biggest even integer number that is in\
    \ the range [x, y] inclusive. If \n    there's no such number, then the function\
    \ should return -1.\n\n    For example:\n    >>> choose_num(12L, 15L)\n    14L\n\
    \    >>> choose_num(13L, 12L)\n    -1L\n    \n*/\nlong choose_num(long x, long\
    \ y) \n{\n    // your code here\n    if(x % 2 == 0)\n    {\n        return x;\n\
    \    }\n    else if(y % 2 == 0)\n    {\n        return y;\n    }\n    else\n \
    \   {\n        return -1;\n    }\n}\nunittest\n{\n    alias candidate = choose_num;\n\
    \n    assert(candidate(12L, 15L) == 14L);\n    assert(candidate(13L, 12L) == -1L);\n\
    \    assert(candidate(33L, 12354L) == 12354L);\n    assert(candidate(5234L, 5233L)\
    \ == -1L);\n    assert(candidate(6L, 29L) == 28L);\n    assert(candidate(27L,\
    \ 10L) == -1L);\n    assert(candidate(7L, 7L) == -1L);\n    assert(candidate(546L,\
    \ 546L) == 546L);\n}\nvoid main(){}"
  status: SyntaxError
  stderr: 'b''Error: cannot find source code for runtime library file \''object.d\''\n       dmd
    might not be correctly installed. Run \''dmd -man\'' for installation instructions.\nimport
    path[0] = /tmp\nFailed: ["dmd", "-unittest", "-v", "-o-", "/tmp/tmp6so45hve.d",
    "-I/tmp"]\n'''
  stdout: b''
  timestamp: 1659793719
- exit_code: 1
  program: "import std.typecons;\nimport std.math;\n/*\nThis function takes two positive\
    \ numbers x and y and returns the\n    biggest even integer number that is in\
    \ the range [x, y] inclusive. If \n    there's no such number, then the function\
    \ should return -1.\n\n    For example:\n    >>> choose_num(12L, 15L)\n    14L\n\
    \    >>> choose_num(13L, 12L)\n    -1L\n    \n*/\nlong choose_num(long x, long\
    \ y) \n{\n    if (x > y)\n    {\n        return -1L;\n    }\n    else if (x ==\
    \ y)\n    {\n        if (x % 2 == 0)\n        {\n            return x;\n     \
    \   }\n        else\n        {\n            return -1L;\n        }\n    }\n  \
    \  else\n    {\n        long z = x;\n        while (z <= y)\n        {\n     \
    \       if (z % 2 == 0)\n            {\n                return z;\n          \
    \  }\n            z++;\n        }\n        return -1L;\n    }\n}\nunittest\n{\n\
    \    alias candidate = choose_num;\n\n    assert(candidate(12L, 15L) == 14L);\n\
    \    assert(candidate(13L, 12L) == -1L);\n    assert(candidate(33L, 12354L) ==\
    \ 12354L);\n    assert(candidate(5234L, 5233L) == -1L);\n    assert(candidate(6L,\
    \ 29L) == 28L);\n    assert(candidate(27L, 10L) == -1L);\n    assert(candidate(7L,\
    \ 7L) == -1L);\n    assert(candidate(546L, 546L) == 546L);\n}\nvoid main(){}"
  status: SyntaxError
  stderr: 'b''Error: cannot find source code for runtime library file \''object.d\''\n       dmd
    might not be correctly installed. Run \''dmd -man\'' for installation instructions.\nimport
    path[0] = /tmp\nFailed: ["dmd", "-unittest", "-v", "-o-", "/tmp/tmp49rstir6.d",
    "-I/tmp"]\n'''
  stdout: b''
  timestamp: 1659793719
- exit_code: 1
  program: "import std.typecons;\nimport std.math;\n/*\nThis function takes two positive\
    \ numbers x and y and returns the\n    biggest even integer number that is in\
    \ the range [x, y] inclusive. If \n    there's no such number, then the function\
    \ should return -1.\n\n    For example:\n    >>> choose_num(12L, 15L)\n    14L\n\
    \    >>> choose_num(13L, 12L)\n    -1L\n    \n*/\nlong choose_num(long x, long\
    \ y) \n{\n    if (x > y) \n    {\n        return -1L;\n    }\n    else \n    {\n\
    \        long z = x % 2L;\n        if (z == 0L) \n        {\n            return\
    \ x;\n        }\n        else \n        {\n            return choose_num(x + 1L,\
    \ y);\n        }\n    }\n}\nunittest\n{\n    alias candidate = choose_num;\n\n\
    \    assert(candidate(12L, 15L) == 14L);\n    assert(candidate(13L, 12L) == -1L);\n\
    \    assert(candidate(33L, 12354L) == 12354L);\n    assert(candidate(5234L, 5233L)\
    \ == -1L);\n    assert(candidate(6L, 29L) == 28L);\n    assert(candidate(27L,\
    \ 10L) == -1L);\n    assert(candidate(7L, 7L) == -1L);\n    assert(candidate(546L,\
    \ 546L) == 546L);\n}\nvoid main(){}"
  status: SyntaxError
  stderr: 'b''Error: cannot find source code for runtime library file \''object.d\''\n       dmd
    might not be correctly installed. Run \''dmd -man\'' for installation instructions.\nimport
    path[0] = /tmp\nFailed: ["dmd", "-unittest", "-v", "-o-", "/tmp/tmppsd2iduw.d",
    "-I/tmp"]\n'''
  stdout: b''
  timestamp: 1659793719
- exit_code: 1
  program: "import std.typecons;\nimport std.math;\n/*\nThis function takes two positive\
    \ numbers x and y and returns the\n    biggest even integer number that is in\
    \ the range [x, y] inclusive. If \n    there's no such number, then the function\
    \ should return -1.\n\n    For example:\n    >>> choose_num(12L, 15L)\n    14L\n\
    \    >>> choose_num(13L, 12L)\n    -1L\n    \n*/\nlong choose_num(long x, long\
    \ y) \n{\n    if(x > y)\n        return -1;\n    if(x % 2 == 0)\n        return\
    \ x;\n    return choose_num(x + 1, y);\n}\nunittest\n{\n    alias candidate =\
    \ choose_num;\n\n    assert(candidate(12L, 15L) == 14L);\n    assert(candidate(13L,\
    \ 12L) == -1L);\n    assert(candidate(33L, 12354L) == 12354L);\n    assert(candidate(5234L,\
    \ 5233L) == -1L);\n    assert(candidate(6L, 29L) == 28L);\n    assert(candidate(27L,\
    \ 10L) == -1L);\n    assert(candidate(7L, 7L) == -1L);\n    assert(candidate(546L,\
    \ 546L) == 546L);\n}\nvoid main(){}"
  status: SyntaxError
  stderr: 'b''Error: cannot find source code for runtime library file \''object.d\''\n       dmd
    might not be correctly installed. Run \''dmd -man\'' for installation instructions.\nimport
    path[0] = /tmp\nFailed: ["dmd", "-unittest", "-v", "-o-", "/tmp/tmpw9_55lrl.d",
    "-I/tmp"]\n'''
  stdout: b''
  timestamp: 1659793719
- exit_code: 1
  program: "import std.typecons;\nimport std.math;\n/*\nThis function takes two positive\
    \ numbers x and y and returns the\n    biggest even integer number that is in\
    \ the range [x, y] inclusive. If \n    there's no such number, then the function\
    \ should return -1.\n\n    For example:\n    >>> choose_num(12L, 15L)\n    14L\n\
    \    >>> choose_num(13L, 12L)\n    -1L\n    \n*/\nlong choose_num(long x, long\
    \ y) \n{\n    if (x > y)\n    {\n        return -1L;\n    }\n    else\n    {\n\
    \        long z = x;\n        while (z <= y)\n        {\n            if (z % 2\
    \ == 0)\n            {\n                return z;\n            }\n           \
    \ else\n            {\n                z++;\n            }\n        }\n      \
    \  return -1L;\n    }\n}\nunittest\n{\n    alias candidate = choose_num;\n\n \
    \   assert(candidate(12L, 15L) == 14L);\n    assert(candidate(13L, 12L) == -1L);\n\
    \    assert(candidate(33L, 12354L) == 12354L);\n    assert(candidate(5234L, 5233L)\
    \ == -1L);\n    assert(candidate(6L, 29L) == 28L);\n    assert(candidate(27L,\
    \ 10L) == -1L);\n    assert(candidate(7L, 7L) == -1L);\n    assert(candidate(546L,\
    \ 546L) == 546L);\n}\nvoid main(){}"
  status: Exception
  stderr: 'b''core.exception.AssertError@/tmp/tmp_ybsob_o.d(42): unittest failure\n----------------\n??:?
    _d_unittestp [0x427e25]\n??:? void tmp_ybsob_o.__unittest_L38_C1() [0x427a7d]\n??:?
    void tmp_ybsob_o.__modtest() [0x427ba4]\n??:? int core.runtime.runModuleUnitTests().__foreachbody2(object.ModuleInfo*)
    [0x42bb4b]\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)).__lambda2(immutable(object.ModuleInfo*))
    [0x42a9de]\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))).__foreachbody2(ref
    rt.sections_elf_shared.DSO) [0x42fb71]\n??:? int rt.sections_elf_shared.DSO.opApply(scope
    int delegate(ref rt.sections_elf_shared.DSO)) [0x430020]\n??:? int rt.minfo.moduleinfos_apply(scope
    int delegate(immutable(object.ModuleInfo*))) [0x42fafd]\n??:? int object.ModuleInfo.opApply(scope
    int delegate(object.ModuleInfo*)) [0x42a9b5]\n??:? runModuleUnitTests [0x42b921]\n??:?
    void rt.dmain2._d_run_main(int, char**, extern (C) int function(char[][])*).runAll()
    [0x428274]\n??:? void rt.dmain2._d_run_main(int, char**, extern (C) int function(char[][])*).tryExec(scope
    void delegate()) [0x4281fb]\n??:? _d_run_main [0x428166]\n??:? main [0x427bb7]\n??:?
    __libc_start_main [0x91ac4554]\n1/1 unittests FAILED\n'''
  stdout: b''
- exit_code: 1
  program: "import std.typecons;\nimport std.math;\n/*\nThis function takes two positive\
    \ numbers x and y and returns the\n    biggest even integer number that is in\
    \ the range [x, y] inclusive. If \n    there's no such number, then the function\
    \ should return -1.\n\n    For example:\n    >>> choose_num(12L, 15L)\n    14L\n\
    \    >>> choose_num(13L, 12L)\n    -1L\n    \n*/\nlong choose_num(long x, long\
    \ y) \n{\n    if (x > y)\n        return -1;\n    long result = y;\n    while\
    \ (result % 2 != 0)\n        result--;\n    return result;\n}\nunittest\n{\n \
    \   alias candidate = choose_num;\n\n    assert(candidate(12L, 15L) == 14L);\n\
    \    assert(candidate(13L, 12L) == -1L);\n    assert(candidate(33L, 12354L) ==\
    \ 12354L);\n    assert(candidate(5234L, 5233L) == -1L);\n    assert(candidate(6L,\
    \ 29L) == 28L);\n    assert(candidate(27L, 10L) == -1L);\n    assert(candidate(7L,\
    \ 7L) == -1L);\n    assert(candidate(546L, 546L) == 546L);\n}\nvoid main(){}"
  status: SyntaxError
  stderr: 'b''Error: cannot find source code for runtime library file \''object.d\''\n       dmd
    might not be correctly installed. Run \''dmd -man\'' for installation instructions.\nimport
    path[0] = /tmp\nFailed: ["dmd", "-unittest", "-v", "-o-", "/tmp/tmp9h3kost1.d",
    "-I/tmp"]\n'''
  stdout: b''
  timestamp: 1659793719
- exit_code: 1
  program: "import std.typecons;\nimport std.math;\n/*\nThis function takes two positive\
    \ numbers x and y and returns the\n    biggest even integer number that is in\
    \ the range [x, y] inclusive. If \n    there's no such number, then the function\
    \ should return -1.\n\n    For example:\n    >>> choose_num(12L, 15L)\n    14L\n\
    \    >>> choose_num(13L, 12L)\n    -1L\n    \n*/\nlong choose_num(long x, long\
    \ y) \n{\n    long result = -1;\n    foreach(i; x..y+1)\n    {\n        if(i %\
    \ 2 == 0)\n        {\n            result = i;\n        }\n    }\n    return result;\n\
    }\nunittest\n{\n    alias candidate = choose_num;\n\n    assert(candidate(12L,\
    \ 15L) == 14L);\n    assert(candidate(13L, 12L) == -1L);\n    assert(candidate(33L,\
    \ 12354L) == 12354L);\n    assert(candidate(5234L, 5233L) == -1L);\n    assert(candidate(6L,\
    \ 29L) == 28L);\n    assert(candidate(27L, 10L) == -1L);\n    assert(candidate(7L,\
    \ 7L) == -1L);\n    assert(candidate(546L, 546L) == 546L);\n}\nvoid main(){}"
  status: SyntaxError
  stderr: 'b''Error: cannot find source code for runtime library file \''object.d\''\n       dmd
    might not be correctly installed. Run \''dmd -man\'' for installation instructions.\nimport
    path[0] = /tmp\nFailed: ["dmd", "-unittest", "-v", "-o-", "/tmp/tmpf89oph2c.d",
    "-I/tmp"]\n'''
  stdout: b''
  timestamp: 1659793719
- exit_code: 1
  program: "import std.typecons;\nimport std.math;\n/*\nThis function takes two positive\
    \ numbers x and y and returns the\n    biggest even integer number that is in\
    \ the range [x, y] inclusive. If \n    there's no such number, then the function\
    \ should return -1.\n\n    For example:\n    >>> choose_num(12L, 15L)\n    14L\n\
    \    >>> choose_num(13L, 12L)\n    -1L\n    \n*/\nlong choose_num(long x, long\
    \ y) \n{\n    if (x > y)\n        return -1;\n    if (x % 2 == 0)\n        return\
    \ x;\n    return choose_num(x + 1, y);\n}\nunittest\n{\n    alias candidate =\
    \ choose_num;\n\n    assert(candidate(12L, 15L) == 14L);\n    assert(candidate(13L,\
    \ 12L) == -1L);\n    assert(candidate(33L, 12354L) == 12354L);\n    assert(candidate(5234L,\
    \ 5233L) == -1L);\n    assert(candidate(6L, 29L) == 28L);\n    assert(candidate(27L,\
    \ 10L) == -1L);\n    assert(candidate(7L, 7L) == -1L);\n    assert(candidate(546L,\
    \ 546L) == 546L);\n}\nvoid main(){}"
  status: SyntaxError
  stderr: 'b''Error: cannot find source code for runtime library file \''object.d\''\n       dmd
    might not be correctly installed. Run \''dmd -man\'' for installation instructions.\nimport
    path[0] = /tmp\nFailed: ["dmd", "-unittest", "-v", "-o-", "/tmp/tmpc4oyo_pq.d",
    "-I/tmp"]\n'''
  stdout: b''
  timestamp: 1659793719
- exit_code: 1
  program: "import std.typecons;\nimport std.math;\n/*\nThis function takes two positive\
    \ numbers x and y and returns the\n    biggest even integer number that is in\
    \ the range [x, y] inclusive. If \n    there's no such number, then the function\
    \ should return -1.\n\n    For example:\n    >>> choose_num(12L, 15L)\n    14L\n\
    \    >>> choose_num(13L, 12L)\n    -1L\n    \n*/\nlong choose_num(long x, long\
    \ y) \n{\n    if (x > y)\n        return -1;\n    if (x % 2 == 0)\n        return\
    \ x;\n    if (y % 2 == 0)\n        return y;\n    return -1;\n}\nunittest\n{\n\
    \    alias candidate = choose_num;\n\n    assert(candidate(12L, 15L) == 14L);\n\
    \    assert(candidate(13L, 12L) == -1L);\n    assert(candidate(33L, 12354L) ==\
    \ 12354L);\n    assert(candidate(5234L, 5233L) == -1L);\n    assert(candidate(6L,\
    \ 29L) == 28L);\n    assert(candidate(27L, 10L) == -1L);\n    assert(candidate(7L,\
    \ 7L) == -1L);\n    assert(candidate(546L, 546L) == 546L);\n}\nvoid main(){}"
  status: SyntaxError
  stderr: 'b''Error: cannot find source code for runtime library file \''object.d\''\n       dmd
    might not be correctly installed. Run \''dmd -man\'' for installation instructions.\nimport
    path[0] = /tmp\nFailed: ["dmd", "-unittest", "-v", "-o-", "/tmp/tmp_kg6nqfp.d",
    "-I/tmp"]\n'''
  stdout: b''
  timestamp: 1659793719
- exit_code: 1
  program: "import std.typecons;\nimport std.math;\n/*\nThis function takes two positive\
    \ numbers x and y and returns the\n    biggest even integer number that is in\
    \ the range [x, y] inclusive. If \n    there's no such number, then the function\
    \ should return -1.\n\n    For example:\n    >>> choose_num(12L, 15L)\n    14L\n\
    \    >>> choose_num(13L, 12L)\n    -1L\n    \n*/\nlong choose_num(long x, long\
    \ y) \n{\n    if (x > y) \n    {\n        return -1L;\n    }\n    else if (x %\
    \ 2 == 0) \n    {\n        return x;\n    }\n    else \n    {\n        return\
    \ choose_num(x + 1, y);\n    }\n}\nunittest\n{\n    alias candidate = choose_num;\n\
    \n    assert(candidate(12L, 15L) == 14L);\n    assert(candidate(13L, 12L) == -1L);\n\
    \    assert(candidate(33L, 12354L) == 12354L);\n    assert(candidate(5234L, 5233L)\
    \ == -1L);\n    assert(candidate(6L, 29L) == 28L);\n    assert(candidate(27L,\
    \ 10L) == -1L);\n    assert(candidate(7L, 7L) == -1L);\n    assert(candidate(546L,\
    \ 546L) == 546L);\n}\nvoid main(){}"
  status: SyntaxError
  stderr: 'b''Error: cannot find source code for runtime library file \''object.d\''\n       dmd
    might not be correctly installed. Run \''dmd -man\'' for installation instructions.\nimport
    path[0] = /tmp\nFailed: ["dmd", "-unittest", "-v", "-o-", "/tmp/tmpgo2umxcc.d",
    "-I/tmp"]\n'''
  stdout: b''
  timestamp: 1659793719
- exit_code: 1
  program: "import std.typecons;\nimport std.math;\n/*\nThis function takes two positive\
    \ numbers x and y and returns the\n    biggest even integer number that is in\
    \ the range [x, y] inclusive. If \n    there's no such number, then the function\
    \ should return -1.\n\n    For example:\n    >>> choose_num(12L, 15L)\n    14L\n\
    \    >>> choose_num(13L, 12L)\n    -1L\n    \n*/\nlong choose_num(long x, long\
    \ y) \n{\n    long result = -1;\n    if (x % 2 == 0)\n    {\n        result =\
    \ x;\n    }\n    else\n    {\n        result = x + 1;\n    }\n    if (result >\
    \ y)\n    {\n        result = -1;\n    }\n    return result;\n}\nunittest\n{\n\
    \    alias candidate = choose_num;\n\n    assert(candidate(12L, 15L) == 14L);\n\
    \    assert(candidate(13L, 12L) == -1L);\n    assert(candidate(33L, 12354L) ==\
    \ 12354L);\n    assert(candidate(5234L, 5233L) == -1L);\n    assert(candidate(6L,\
    \ 29L) == 28L);\n    assert(candidate(27L, 10L) == -1L);\n    assert(candidate(7L,\
    \ 7L) == -1L);\n    assert(candidate(546L, 546L) == 546L);\n}\nvoid main(){}"
  status: Exception
  stderr: 'b''core.exception.AssertError@/tmp/tmpigxyzbx6.d(36): unittest failure\n----------------\n??:?
    _d_unittestp [0x427e1d]\n??:? void tmpigxyzbx6.__unittest_L32_C1() [0x427a79]\n??:?
    void tmpigxyzbx6.__modtest() [0x427ba0]\n??:? int core.runtime.runModuleUnitTests().__foreachbody2(object.ModuleInfo*)
    [0x42bb43]\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)).__lambda2(immutable(object.ModuleInfo*))
    [0x42a9d6]\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))).__foreachbody2(ref
    rt.sections_elf_shared.DSO) [0x42fb69]\n??:? int rt.sections_elf_shared.DSO.opApply(scope
    int delegate(ref rt.sections_elf_shared.DSO)) [0x430018]\n??:? int rt.minfo.moduleinfos_apply(scope
    int delegate(immutable(object.ModuleInfo*))) [0x42faf5]\n??:? int object.ModuleInfo.opApply(scope
    int delegate(object.ModuleInfo*)) [0x42a9ad]\n??:? runModuleUnitTests [0x42b919]\n??:?
    void rt.dmain2._d_run_main(int, char**, extern (C) int function(char[][])*).runAll()
    [0x42826c]\n??:? void rt.dmain2._d_run_main(int, char**, extern (C) int function(char[][])*).tryExec(scope
    void delegate()) [0x4281f3]\n??:? _d_run_main [0x42815e]\n??:? main [0x427bb3]\n??:?
    __libc_start_main [0x528cc554]\n1/1 unittests FAILED\n'''
  stdout: b''
- exit_code: 1
  program: "import std.typecons;\nimport std.math;\n/*\nThis function takes two positive\
    \ numbers x and y and returns the\n    biggest even integer number that is in\
    \ the range [x, y] inclusive. If \n    there's no such number, then the function\
    \ should return -1.\n\n    For example:\n    >>> choose_num(12L, 15L)\n    14L\n\
    \    >>> choose_num(13L, 12L)\n    -1L\n    \n*/\nlong choose_num(long x, long\
    \ y) \n{\n    long result = -1;\n    if (x > y)\n    {\n        return result;\n\
    \    }\n    else\n    {\n        for (long i = y; i >= x; i--)\n        {\n  \
    \          if (i % 2 == 0)\n            {\n                result = i;\n     \
    \           break;\n            }\n        }\n    }\n    return result;\n}\nunittest\n\
    {\n    alias candidate = choose_num;\n\n    assert(candidate(12L, 15L) == 14L);\n\
    \    assert(candidate(13L, 12L) == -1L);\n    assert(candidate(33L, 12354L) ==\
    \ 12354L);\n    assert(candidate(5234L, 5233L) == -1L);\n    assert(candidate(6L,\
    \ 29L) == 28L);\n    assert(candidate(27L, 10L) == -1L);\n    assert(candidate(7L,\
    \ 7L) == -1L);\n    assert(candidate(546L, 546L) == 546L);\n}\nvoid main(){}"
  status: SyntaxError
  stderr: 'b''Error: cannot find source code for runtime library file \''object.d\''\n       dmd
    might not be correctly installed. Run \''dmd -man\'' for installation instructions.\nimport
    path[0] = /tmp\nFailed: ["dmd", "-unittest", "-v", "-o-", "/tmp/tmplud42hfw.d",
    "-I/tmp"]\n'''
  stdout: b''
  timestamp: 1659793719
- exit_code: 1
  program: "import std.typecons;\nimport std.math;\n/*\nThis function takes two positive\
    \ numbers x and y and returns the\n    biggest even integer number that is in\
    \ the range [x, y] inclusive. If \n    there's no such number, then the function\
    \ should return -1.\n\n    For example:\n    >>> choose_num(12L, 15L)\n    14L\n\
    \    >>> choose_num(13L, 12L)\n    -1L\n    \n*/\nlong choose_num(long x, long\
    \ y) \n{\n    long result = -1;\n    if (x % 2 == 0)\n    {\n        result =\
    \ x;\n    }\n    else\n    {\n        result = x + 1;\n    }\n    if (result >\
    \ y)\n    {\n        result = -1;\n    }\n    return result;\n}\nunittest\n{\n\
    \    alias candidate = choose_num;\n\n    assert(candidate(12L, 15L) == 14L);\n\
    \    assert(candidate(13L, 12L) == -1L);\n    assert(candidate(33L, 12354L) ==\
    \ 12354L);\n    assert(candidate(5234L, 5233L) == -1L);\n    assert(candidate(6L,\
    \ 29L) == 28L);\n    assert(candidate(27L, 10L) == -1L);\n    assert(candidate(7L,\
    \ 7L) == -1L);\n    assert(candidate(546L, 546L) == 546L);\n}\nvoid main(){}"
  status: Exception
  stderr: 'b''core.exception.AssertError@/tmp/tmpigxyzbx6.d(36): unittest failure\n----------------\n??:?
    _d_unittestp [0x427e1d]\n??:? void tmpigxyzbx6.__unittest_L32_C1() [0x427a79]\n??:?
    void tmpigxyzbx6.__modtest() [0x427ba0]\n??:? int core.runtime.runModuleUnitTests().__foreachbody2(object.ModuleInfo*)
    [0x42bb43]\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)).__lambda2(immutable(object.ModuleInfo*))
    [0x42a9d6]\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))).__foreachbody2(ref
    rt.sections_elf_shared.DSO) [0x42fb69]\n??:? int rt.sections_elf_shared.DSO.opApply(scope
    int delegate(ref rt.sections_elf_shared.DSO)) [0x430018]\n??:? int rt.minfo.moduleinfos_apply(scope
    int delegate(immutable(object.ModuleInfo*))) [0x42faf5]\n??:? int object.ModuleInfo.opApply(scope
    int delegate(object.ModuleInfo*)) [0x42a9ad]\n??:? runModuleUnitTests [0x42b919]\n??:?
    void rt.dmain2._d_run_main(int, char**, extern (C) int function(char[][])*).runAll()
    [0x42826c]\n??:? void rt.dmain2._d_run_main(int, char**, extern (C) int function(char[][])*).tryExec(scope
    void delegate()) [0x4281f3]\n??:? _d_run_main [0x42815e]\n??:? main [0x427bb3]\n??:?
    __libc_start_main [0x528cc554]\n1/1 unittests FAILED\n'''
  stdout: b''
- exit_code: 1
  program: "import std.typecons;\nimport std.math;\n/*\nThis function takes two positive\
    \ numbers x and y and returns the\n    biggest even integer number that is in\
    \ the range [x, y] inclusive. If \n    there's no such number, then the function\
    \ should return -1.\n\n    For example:\n    >>> choose_num(12L, 15L)\n    14L\n\
    \    >>> choose_num(13L, 12L)\n    -1L\n    \n*/\nlong choose_num(long x, long\
    \ y) \n{\n    if (x % 2 != 0)\n        x++;\n    if (y % 2 != 0)\n        y--;\n\
    \    return (x <= y) ? y : -1;\n}\nunittest\n{\n    alias candidate = choose_num;\n\
    \n    assert(candidate(12L, 15L) == 14L);\n    assert(candidate(13L, 12L) == -1L);\n\
    \    assert(candidate(33L, 12354L) == 12354L);\n    assert(candidate(5234L, 5233L)\
    \ == -1L);\n    assert(candidate(6L, 29L) == 28L);\n    assert(candidate(27L,\
    \ 10L) == -1L);\n    assert(candidate(7L, 7L) == -1L);\n    assert(candidate(546L,\
    \ 546L) == 546L);\n}\nvoid main(){}"
  status: SyntaxError
  stderr: 'b''Error: cannot find source code for runtime library file \''object.d\''\n       dmd
    might not be correctly installed. Run \''dmd -man\'' for installation instructions.\nimport
    path[0] = /tmp\nFailed: ["dmd", "-unittest", "-v", "-o-", "/tmp/tmpm52r0qkg.d",
    "-I/tmp"]\n'''
  stdout: b''
  timestamp: 1659793719
- exit_code: 1
  program: "import std.typecons;\nimport std.math;\n/*\nThis function takes two positive\
    \ numbers x and y and returns the\n    biggest even integer number that is in\
    \ the range [x, y] inclusive. If \n    there's no such number, then the function\
    \ should return -1.\n\n    For example:\n    >>> choose_num(12L, 15L)\n    14L\n\
    \    >>> choose_num(13L, 12L)\n    -1L\n    \n*/\nlong choose_num(long x, long\
    \ y) \n{\n    long z = -1;\n    if (x % 2 == 0)\n    {\n        z = x;\n    }\n\
    \    else\n    {\n        z = x + 1;\n    }\n    if (z > y)\n    {\n        z\
    \ = -1;\n    }\n    return z;\n}\nunittest\n{\n    alias candidate = choose_num;\n\
    \n    assert(candidate(12L, 15L) == 14L);\n    assert(candidate(13L, 12L) == -1L);\n\
    \    assert(candidate(33L, 12354L) == 12354L);\n    assert(candidate(5234L, 5233L)\
    \ == -1L);\n    assert(candidate(6L, 29L) == 28L);\n    assert(candidate(27L,\
    \ 10L) == -1L);\n    assert(candidate(7L, 7L) == -1L);\n    assert(candidate(546L,\
    \ 546L) == 546L);\n}\nvoid main(){}"
  status: Exception
  stderr: 'b''core.exception.AssertError@/tmp/tmp_2535mbj.d(36): unittest failure\n----------------\n??:?
    _d_unittestp [0x427e1d]\n??:? void tmp_2535mbj.__unittest_L32_C1() [0x427a79]\n??:?
    void tmp_2535mbj.__modtest() [0x427ba0]\n??:? int core.runtime.runModuleUnitTests().__foreachbody2(object.ModuleInfo*)
    [0x42bb43]\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)).__lambda2(immutable(object.ModuleInfo*))
    [0x42a9d6]\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))).__foreachbody2(ref
    rt.sections_elf_shared.DSO) [0x42fb69]\n??:? int rt.sections_elf_shared.DSO.opApply(scope
    int delegate(ref rt.sections_elf_shared.DSO)) [0x430018]\n??:? int rt.minfo.moduleinfos_apply(scope
    int delegate(immutable(object.ModuleInfo*))) [0x42faf5]\n??:? int object.ModuleInfo.opApply(scope
    int delegate(object.ModuleInfo*)) [0x42a9ad]\n??:? runModuleUnitTests [0x42b919]\n??:?
    void rt.dmain2._d_run_main(int, char**, extern (C) int function(char[][])*).runAll()
    [0x42826c]\n??:? void rt.dmain2._d_run_main(int, char**, extern (C) int function(char[][])*).tryExec(scope
    void delegate()) [0x4281f3]\n??:? _d_run_main [0x42815e]\n??:? main [0x427bb3]\n??:?
    __libc_start_main [0x6d7f3554]\n1/1 unittests FAILED\n'''
  stdout: b''
- exit_code: 1
  program: "import std.typecons;\nimport std.math;\n/*\nThis function takes two positive\
    \ numbers x and y and returns the\n    biggest even integer number that is in\
    \ the range [x, y] inclusive. If \n    there's no such number, then the function\
    \ should return -1.\n\n    For example:\n    >>> choose_num(12L, 15L)\n    14L\n\
    \    >>> choose_num(13L, 12L)\n    -1L\n    \n*/\nlong choose_num(long x, long\
    \ y) \n{\n    long z = -1;\n    if (x % 2 == 0)\n    {\n        z = x;\n    }\n\
    \    else if (x % 2 != 0)\n    {\n        x = x + 1;\n        z = x;\n    }\n\
    \    if (y % 2 != 0)\n    {\n        y = y - 1;\n    }\n    if (x > y)\n    {\n\
    \        z = -1;\n    }\n    return z;\n}\nunittest\n{\n    alias candidate =\
    \ choose_num;\n\n    assert(candidate(12L, 15L) == 14L);\n    assert(candidate(13L,\
    \ 12L) == -1L);\n    assert(candidate(33L, 12354L) == 12354L);\n    assert(candidate(5234L,\
    \ 5233L) == -1L);\n    assert(candidate(6L, 29L) == 28L);\n    assert(candidate(27L,\
    \ 10L) == -1L);\n    assert(candidate(7L, 7L) == -1L);\n    assert(candidate(546L,\
    \ 546L) == 546L);\n}\nvoid main(){}"
  status: SyntaxError
  stderr: 'b''Error: cannot find source code for runtime library file \''object.d\''\n       dmd
    might not be correctly installed. Run \''dmd -man\'' for installation instructions.\nimport
    path[0] = /tmp\nFailed: ["dmd", "-unittest", "-v", "-o-", "/tmp/tmp9nfgvpk4.d",
    "-I/tmp"]\n'''
  stdout: b''
  timestamp: 1659793719
- exit_code: 1
  program: "import std.typecons;\nimport std.math;\n/*\nThis function takes two positive\
    \ numbers x and y and returns the\n    biggest even integer number that is in\
    \ the range [x, y] inclusive. If \n    there's no such number, then the function\
    \ should return -1.\n\n    For example:\n    >>> choose_num(12L, 15L)\n    14L\n\
    \    >>> choose_num(13L, 12L)\n    -1L\n    \n*/\nlong choose_num(long x, long\
    \ y) \n{\n    if (x > y)\n        return -1;\n    else if (x % 2 == 0)\n     \
    \   return x;\n    else\n        return choose_num(x + 1, y);\n}\nunittest\n{\n\
    \    alias candidate = choose_num;\n\n    assert(candidate(12L, 15L) == 14L);\n\
    \    assert(candidate(13L, 12L) == -1L);\n    assert(candidate(33L, 12354L) ==\
    \ 12354L);\n    assert(candidate(5234L, 5233L) == -1L);\n    assert(candidate(6L,\
    \ 29L) == 28L);\n    assert(candidate(27L, 10L) == -1L);\n    assert(candidate(7L,\
    \ 7L) == -1L);\n    assert(candidate(546L, 546L) == 546L);\n}\nvoid main(){}"
  status: SyntaxError
  stderr: 'b''Error: cannot find source code for runtime library file \''object.d\''\n       dmd
    might not be correctly installed. Run \''dmd -man\'' for installation instructions.\nimport
    path[0] = /tmp\nFailed: ["dmd", "-unittest", "-v", "-o-", "/tmp/tmpgez4y1wt.d",
    "-I/tmp"]\n'''
  stdout: b''
  timestamp: 1659793719
- exit_code: 1
  program: "import std.typecons;\nimport std.math;\n/*\nThis function takes two positive\
    \ numbers x and y and returns the\n    biggest even integer number that is in\
    \ the range [x, y] inclusive. If \n    there's no such number, then the function\
    \ should return -1.\n\n    For example:\n    >>> choose_num(12L, 15L)\n    14L\n\
    \    >>> choose_num(13L, 12L)\n    -1L\n    \n*/\nlong choose_num(long x, long\
    \ y) \n{\n    long result;\n    if (x % 2 == 0)\n    {\n        result = x;\n\
    \    }\n    else\n    {\n        result = x + 1;\n    }\n    if (result > y)\n\
    \    {\n        return -1;\n    }\n    else\n    {\n        return result;\n \
    \   }\n}\nunittest\n{\n    alias candidate = choose_num;\n\n    assert(candidate(12L,\
    \ 15L) == 14L);\n    assert(candidate(13L, 12L) == -1L);\n    assert(candidate(33L,\
    \ 12354L) == 12354L);\n    assert(candidate(5234L, 5233L) == -1L);\n    assert(candidate(6L,\
    \ 29L) == 28L);\n    assert(candidate(27L, 10L) == -1L);\n    assert(candidate(7L,\
    \ 7L) == -1L);\n    assert(candidate(546L, 546L) == 546L);\n}\nvoid main(){}"
  status: SyntaxError
  stderr: 'b''Error: cannot find source code for runtime library file \''object.d\''\n       dmd
    might not be correctly installed. Run \''dmd -man\'' for installation instructions.\nimport
    path[0] = /tmp\nFailed: ["dmd", "-unittest", "-v", "-o-", "/tmp/tmpz_k03323.d",
    "-I/tmp"]\n'''
  stdout: b''
  timestamp: 1659793719
- exit_code: 1
  program: "import std.typecons;\nimport std.math;\n/*\nThis function takes two positive\
    \ numbers x and y and returns the\n    biggest even integer number that is in\
    \ the range [x, y] inclusive. If \n    there's no such number, then the function\
    \ should return -1.\n\n    For example:\n    >>> choose_num(12L, 15L)\n    14L\n\
    \    >>> choose_num(13L, 12L)\n    -1L\n    \n*/\nlong choose_num(long x, long\
    \ y) \n{\n    if (x > y)\n    {\n        return -1L;\n    }\n    else if (x %\
    \ 2 == 0)\n    {\n        return x;\n    }\n    else\n    {\n        return choose_num(x\
    \ + 1, y);\n    }\n}\nunittest\n{\n    alias candidate = choose_num;\n\n    assert(candidate(12L,\
    \ 15L) == 14L);\n    assert(candidate(13L, 12L) == -1L);\n    assert(candidate(33L,\
    \ 12354L) == 12354L);\n    assert(candidate(5234L, 5233L) == -1L);\n    assert(candidate(6L,\
    \ 29L) == 28L);\n    assert(candidate(27L, 10L) == -1L);\n    assert(candidate(7L,\
    \ 7L) == -1L);\n    assert(candidate(546L, 546L) == 546L);\n}\nvoid main(){}"
  status: SyntaxError
  stderr: 'b''Error: cannot find source code for runtime library file \''object.d\''\n       dmd
    might not be correctly installed. Run \''dmd -man\'' for installation instructions.\nimport
    path[0] = /tmp\nFailed: ["dmd", "-unittest", "-v", "-o-", "/tmp/tmprqxrzaat.d",
    "-I/tmp"]\n'''
  stdout: b''
  timestamp: 1659793719
- exit_code: 1
  program: "import std.typecons;\nimport std.math;\n/*\nThis function takes two positive\
    \ numbers x and y and returns the\n    biggest even integer number that is in\
    \ the range [x, y] inclusive. If \n    there's no such number, then the function\
    \ should return -1.\n\n    For example:\n    >>> choose_num(12L, 15L)\n    14L\n\
    \    >>> choose_num(13L, 12L)\n    -1L\n    \n*/\nlong choose_num(long x, long\
    \ y) \n{\n    static assert(x >= 0L);\n    static assert(y >= 0L);\n    static\
    \ assert(x <= y);\n    long max = -1L;\n    foreach(i; x..y+1)\n    {\n      \
    \  if(i % 2 == 0)\n        {\n            max = i;\n        }\n    }\n    return\
    \ max;\n}\nunittest\n{\n    alias candidate = choose_num;\n\n    assert(candidate(12L,\
    \ 15L) == 14L);\n    assert(candidate(13L, 12L) == -1L);\n    assert(candidate(33L,\
    \ 12354L) == 12354L);\n    assert(candidate(5234L, 5233L) == -1L);\n    assert(candidate(6L,\
    \ 29L) == 28L);\n    assert(candidate(27L, 10L) == -1L);\n    assert(candidate(7L,\
    \ 7L) == -1L);\n    assert(candidate(546L, 546L) == 546L);\n}\nvoid main(){}"
  status: SyntaxError
  stderr: 'b''Error: cannot find source code for runtime library file \''object.d\''\n       dmd
    might not be correctly installed. Run \''dmd -man\'' for installation instructions.\nimport
    path[0] = /tmp\nFailed: ["dmd", "-unittest", "-v", "-o-", "/tmp/tmp_lpg9sn7.d",
    "-I/tmp"]\n'''
  stdout: b''
  timestamp: 1659793719
- exit_code: 1
  program: "import std.typecons;\nimport std.math;\n/*\nThis function takes two positive\
    \ numbers x and y and returns the\n    biggest even integer number that is in\
    \ the range [x, y] inclusive. If \n    there's no such number, then the function\
    \ should return -1.\n\n    For example:\n    >>> choose_num(12L, 15L)\n    14L\n\
    \    >>> choose_num(13L, 12L)\n    -1L\n    \n*/\nlong choose_num(long x, long\
    \ y) \n{\n    long result = -1;\n    if (x % 2 == 0)\n    {\n        result =\
    \ x;\n    }\n    else\n    {\n        result = x + 1;\n    }\n    if (result >\
    \ y)\n    {\n        result = -1;\n    }\n    return result;\n}\nunittest\n{\n\
    \    alias candidate = choose_num;\n\n    assert(candidate(12L, 15L) == 14L);\n\
    \    assert(candidate(13L, 12L) == -1L);\n    assert(candidate(33L, 12354L) ==\
    \ 12354L);\n    assert(candidate(5234L, 5233L) == -1L);\n    assert(candidate(6L,\
    \ 29L) == 28L);\n    assert(candidate(27L, 10L) == -1L);\n    assert(candidate(7L,\
    \ 7L) == -1L);\n    assert(candidate(546L, 546L) == 546L);\n}\nvoid main(){}"
  status: Exception
  stderr: 'b''core.exception.AssertError@/tmp/tmpigxyzbx6.d(36): unittest failure\n----------------\n??:?
    _d_unittestp [0x427e1d]\n??:? void tmpigxyzbx6.__unittest_L32_C1() [0x427a79]\n??:?
    void tmpigxyzbx6.__modtest() [0x427ba0]\n??:? int core.runtime.runModuleUnitTests().__foreachbody2(object.ModuleInfo*)
    [0x42bb43]\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)).__lambda2(immutable(object.ModuleInfo*))
    [0x42a9d6]\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))).__foreachbody2(ref
    rt.sections_elf_shared.DSO) [0x42fb69]\n??:? int rt.sections_elf_shared.DSO.opApply(scope
    int delegate(ref rt.sections_elf_shared.DSO)) [0x430018]\n??:? int rt.minfo.moduleinfos_apply(scope
    int delegate(immutable(object.ModuleInfo*))) [0x42faf5]\n??:? int object.ModuleInfo.opApply(scope
    int delegate(object.ModuleInfo*)) [0x42a9ad]\n??:? runModuleUnitTests [0x42b919]\n??:?
    void rt.dmain2._d_run_main(int, char**, extern (C) int function(char[][])*).runAll()
    [0x42826c]\n??:? void rt.dmain2._d_run_main(int, char**, extern (C) int function(char[][])*).tryExec(scope
    void delegate()) [0x4281f3]\n??:? _d_run_main [0x42815e]\n??:? main [0x427bb3]\n??:?
    __libc_start_main [0x528cc554]\n1/1 unittests FAILED\n'''
  stdout: b''
- exit_code: 1
  program: "import std.typecons;\nimport std.math;\n/*\nThis function takes two positive\
    \ numbers x and y and returns the\n    biggest even integer number that is in\
    \ the range [x, y] inclusive. If \n    there's no such number, then the function\
    \ should return -1.\n\n    For example:\n    >>> choose_num(12L, 15L)\n    14L\n\
    \    >>> choose_num(13L, 12L)\n    -1L\n    \n*/\nlong choose_num(long x, long\
    \ y) \n{\n    long result = -1;\n    if (x % 2 == 0)\n    {\n        result =\
    \ x;\n    }\n    else\n    {\n        result = x + 1;\n    }\n    if (result >\
    \ y)\n    {\n        result = -1;\n    }\n    return result;\n}\nunittest\n{\n\
    \    alias candidate = choose_num;\n\n    assert(candidate(12L, 15L) == 14L);\n\
    \    assert(candidate(13L, 12L) == -1L);\n    assert(candidate(33L, 12354L) ==\
    \ 12354L);\n    assert(candidate(5234L, 5233L) == -1L);\n    assert(candidate(6L,\
    \ 29L) == 28L);\n    assert(candidate(27L, 10L) == -1L);\n    assert(candidate(7L,\
    \ 7L) == -1L);\n    assert(candidate(546L, 546L) == 546L);\n}\nvoid main(){}"
  status: Exception
  stderr: 'b''core.exception.AssertError@/tmp/tmpigxyzbx6.d(36): unittest failure\n----------------\n??:?
    _d_unittestp [0x427e1d]\n??:? void tmpigxyzbx6.__unittest_L32_C1() [0x427a79]\n??:?
    void tmpigxyzbx6.__modtest() [0x427ba0]\n??:? int core.runtime.runModuleUnitTests().__foreachbody2(object.ModuleInfo*)
    [0x42bb43]\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)).__lambda2(immutable(object.ModuleInfo*))
    [0x42a9d6]\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))).__foreachbody2(ref
    rt.sections_elf_shared.DSO) [0x42fb69]\n??:? int rt.sections_elf_shared.DSO.opApply(scope
    int delegate(ref rt.sections_elf_shared.DSO)) [0x430018]\n??:? int rt.minfo.moduleinfos_apply(scope
    int delegate(immutable(object.ModuleInfo*))) [0x42faf5]\n??:? int object.ModuleInfo.opApply(scope
    int delegate(object.ModuleInfo*)) [0x42a9ad]\n??:? runModuleUnitTests [0x42b919]\n??:?
    void rt.dmain2._d_run_main(int, char**, extern (C) int function(char[][])*).runAll()
    [0x42826c]\n??:? void rt.dmain2._d_run_main(int, char**, extern (C) int function(char[][])*).tryExec(scope
    void delegate()) [0x4281f3]\n??:? _d_run_main [0x42815e]\n??:? main [0x427bb3]\n??:?
    __libc_start_main [0x528cc554]\n1/1 unittests FAILED\n'''
  stdout: b''
- exit_code: 1
  program: "import std.typecons;\nimport std.math;\n/*\nThis function takes two positive\
    \ numbers x and y and returns the\n    biggest even integer number that is in\
    \ the range [x, y] inclusive. If \n    there's no such number, then the function\
    \ should return -1.\n\n    For example:\n    >>> choose_num(12L, 15L)\n    14L\n\
    \    >>> choose_num(13L, 12L)\n    -1L\n    \n*/\nlong choose_num(long x, long\
    \ y) \n{\n    long result = -1;\n    foreach(i; x..y+1)\n    {\n        if(i %\
    \ 2 == 0)\n        {\n            result = i;\n        }\n    }\n    return result;\n\
    }\nunittest\n{\n    alias candidate = choose_num;\n\n    assert(candidate(12L,\
    \ 15L) == 14L);\n    assert(candidate(13L, 12L) == -1L);\n    assert(candidate(33L,\
    \ 12354L) == 12354L);\n    assert(candidate(5234L, 5233L) == -1L);\n    assert(candidate(6L,\
    \ 29L) == 28L);\n    assert(candidate(27L, 10L) == -1L);\n    assert(candidate(7L,\
    \ 7L) == -1L);\n    assert(candidate(546L, 546L) == 546L);\n}\nvoid main(){}"
  status: SyntaxError
  stderr: 'b''Error: cannot find source code for runtime library file \''object.d\''\n       dmd
    might not be correctly installed. Run \''dmd -man\'' for installation instructions.\nimport
    path[0] = /tmp\nFailed: ["dmd", "-unittest", "-v", "-o-", "/tmp/tmpf89oph2c.d",
    "-I/tmp"]\n'''
  stdout: b''
  timestamp: 1659793719
- exit_code: 1
  program: "import std.typecons;\nimport std.math;\n/*\nThis function takes two positive\
    \ numbers x and y and returns the\n    biggest even integer number that is in\
    \ the range [x, y] inclusive. If \n    there's no such number, then the function\
    \ should return -1.\n\n    For example:\n    >>> choose_num(12L, 15L)\n    14L\n\
    \    >>> choose_num(13L, 12L)\n    -1L\n    \n*/\nlong choose_num(long x, long\
    \ y) \n{\n    long result = -1;\n    if (x % 2 == 0)\n    {\n        result =\
    \ x;\n    }\n    else\n    {\n        x++;\n    }\n    if (x > y)\n    {\n   \
    \     return -1;\n    }\n    else\n    {\n        return x;\n    }\n}\nunittest\n\
    {\n    alias candidate = choose_num;\n\n    assert(candidate(12L, 15L) == 14L);\n\
    \    assert(candidate(13L, 12L) == -1L);\n    assert(candidate(33L, 12354L) ==\
    \ 12354L);\n    assert(candidate(5234L, 5233L) == -1L);\n    assert(candidate(6L,\
    \ 29L) == 28L);\n    assert(candidate(27L, 10L) == -1L);\n    assert(candidate(7L,\
    \ 7L) == -1L);\n    assert(candidate(546L, 546L) == 546L);\n}\nvoid main(){}"
  status: SyntaxError
  stderr: 'b''Error: cannot find source code for runtime library file \''object.d\''\n       dmd
    might not be correctly installed. Run \''dmd -man\'' for installation instructions.\nimport
    path[0] = /tmp\nFailed: ["dmd", "-unittest", "-v", "-o-", "/tmp/tmplzahiqwd.d",
    "-I/tmp"]\n'''
  stdout: b''
  timestamp: 1659793719
- exit_code: 1
  program: "import std.typecons;\nimport std.math;\n/*\nThis function takes two positive\
    \ numbers x and y and returns the\n    biggest even integer number that is in\
    \ the range [x, y] inclusive. If \n    there's no such number, then the function\
    \ should return -1.\n\n    For example:\n    >>> choose_num(12L, 15L)\n    14L\n\
    \    >>> choose_num(13L, 12L)\n    -1L\n    \n*/\nlong choose_num(long x, long\
    \ y) \n{\n    long result = -1;\n    if (x <= y)\n    {\n        if (x % 2 ==\
    \ 0)\n        {\n            result = x;\n        }\n        else\n        {\n\
    \            result = x + 1;\n        }\n    }\n    return result;\n}\nunittest\n\
    {\n    alias candidate = choose_num;\n\n    assert(candidate(12L, 15L) == 14L);\n\
    \    assert(candidate(13L, 12L) == -1L);\n    assert(candidate(33L, 12354L) ==\
    \ 12354L);\n    assert(candidate(5234L, 5233L) == -1L);\n    assert(candidate(6L,\
    \ 29L) == 28L);\n    assert(candidate(27L, 10L) == -1L);\n    assert(candidate(7L,\
    \ 7L) == -1L);\n    assert(candidate(546L, 546L) == 546L);\n}\nvoid main(){}"
  status: SyntaxError
  stderr: 'b''Error: cannot find source code for runtime library file \''object.d\''\n       dmd
    might not be correctly installed. Run \''dmd -man\'' for installation instructions.\nimport
    path[0] = /tmp\nFailed: ["dmd", "-unittest", "-v", "-o-", "/tmp/tmpht30nzdk.d",
    "-I/tmp"]\n'''
  stdout: b''
  timestamp: 1659793719
- exit_code: 1
  program: "import std.typecons;\nimport std.math;\n/*\nThis function takes two positive\
    \ numbers x and y and returns the\n    biggest even integer number that is in\
    \ the range [x, y] inclusive. If \n    there's no such number, then the function\
    \ should return -1.\n\n    For example:\n    >>> choose_num(12L, 15L)\n    14L\n\
    \    >>> choose_num(13L, 12L)\n    -1L\n    \n*/\nlong choose_num(long x, long\
    \ y) \n{\n    if (x > y) \n    {\n        return -1L;\n    }\n    if (x % 2 ==\
    \ 0) \n    {\n        return x;\n    }\n    else \n    {\n        return choose_num(x\
    \ + 1, y);\n    }\n}\nunittest\n{\n    alias candidate = choose_num;\n\n    assert(candidate(12L,\
    \ 15L) == 14L);\n    assert(candidate(13L, 12L) == -1L);\n    assert(candidate(33L,\
    \ 12354L) == 12354L);\n    assert(candidate(5234L, 5233L) == -1L);\n    assert(candidate(6L,\
    \ 29L) == 28L);\n    assert(candidate(27L, 10L) == -1L);\n    assert(candidate(7L,\
    \ 7L) == -1L);\n    assert(candidate(546L, 546L) == 546L);\n}\nvoid main(){}"
  status: SyntaxError
  stderr: 'b''Error: cannot find source code for runtime library file \''object.d\''\n       dmd
    might not be correctly installed. Run \''dmd -man\'' for installation instructions.\nimport
    path[0] = /tmp\nFailed: ["dmd", "-unittest", "-v", "-o-", "/tmp/tmpvixlfpdf.d",
    "-I/tmp"]\n'''
  stdout: b''
  timestamp: 1659793719
- exit_code: 1
  program: "import std.typecons;\nimport std.math;\n/*\nThis function takes two positive\
    \ numbers x and y and returns the\n    biggest even integer number that is in\
    \ the range [x, y] inclusive. If \n    there's no such number, then the function\
    \ should return -1.\n\n    For example:\n    >>> choose_num(12L, 15L)\n    14L\n\
    \    >>> choose_num(13L, 12L)\n    -1L\n    \n*/\nlong choose_num(long x, long\
    \ y) \n{\n    long result = -1;\n    if (x % 2 == 0)\n    {\n        result =\
    \ x;\n    }\n    else\n    {\n        result = x + 1;\n    }\n    if (result >\
    \ y)\n    {\n        result = -1;\n    }\n    return result;\n}\n/*\nThis function\
    \ takes two positive numbers x and y and returns the\n    biggest odd integer\
    \ number that is in the range [x, y] inclusive. If \n    there's no such number,\
    \ then the function should return -1.\nunittest\n{\n    alias candidate = choose_num;\n\
    \n    assert(candidate(12L, 15L) == 14L);\n    assert(candidate(13L, 12L) == -1L);\n\
    \    assert(candidate(33L, 12354L) == 12354L);\n    assert(candidate(5234L, 5233L)\
    \ == -1L);\n    assert(candidate(6L, 29L) == 28L);\n    assert(candidate(27L,\
    \ 10L) == -1L);\n    assert(candidate(7L, 7L) == -1L);\n    assert(candidate(546L,\
    \ 546L) == 546L);\n}\nvoid main(){}"
  status: SyntaxError
  stderr: 'b''/tmp/tmpwo_v562c.d(32): Error: unterminated /* */ comment\nFailed: ["dmd",
    "-unittest", "-v", "-o-", "/tmp/tmpwo_v562c.d", "-I/tmp"]\n'''
  stdout: b''
  timestamp: 1659793719
- exit_code: 1
  program: "import std.typecons;\nimport std.math;\n/*\nThis function takes two positive\
    \ numbers x and y and returns the\n    biggest even integer number that is in\
    \ the range [x, y] inclusive. If \n    there's no such number, then the function\
    \ should return -1.\n\n    For example:\n    >>> choose_num(12L, 15L)\n    14L\n\
    \    >>> choose_num(13L, 12L)\n    -1L\n    \n*/\nlong choose_num(long x, long\
    \ y) \n{\n    if (x > y)\n    {\n        return -1L;\n    }\n    else if (x %\
    \ 2 == 0)\n    {\n        return x;\n    }\n    else\n    {\n        return choose_num(x\
    \ + 1, y);\n    }\n}\nunittest\n{\n    alias candidate = choose_num;\n\n    assert(candidate(12L,\
    \ 15L) == 14L);\n    assert(candidate(13L, 12L) == -1L);\n    assert(candidate(33L,\
    \ 12354L) == 12354L);\n    assert(candidate(5234L, 5233L) == -1L);\n    assert(candidate(6L,\
    \ 29L) == 28L);\n    assert(candidate(27L, 10L) == -1L);\n    assert(candidate(7L,\
    \ 7L) == -1L);\n    assert(candidate(546L, 546L) == 546L);\n}\nvoid main(){}"
  status: SyntaxError
  stderr: 'b''Error: cannot find source code for runtime library file \''object.d\''\n       dmd
    might not be correctly installed. Run \''dmd -man\'' for installation instructions.\nimport
    path[0] = /tmp\nFailed: ["dmd", "-unittest", "-v", "-o-", "/tmp/tmprqxrzaat.d",
    "-I/tmp"]\n'''
  stdout: b''
  timestamp: 1659793719
- exit_code: 1
  program: "import std.typecons;\nimport std.math;\n/*\nThis function takes two positive\
    \ numbers x and y and returns the\n    biggest even integer number that is in\
    \ the range [x, y] inclusive. If \n    there's no such number, then the function\
    \ should return -1.\n\n    For example:\n    >>> choose_num(12L, 15L)\n    14L\n\
    \    >>> choose_num(13L, 12L)\n    -1L\n    \n*/\nlong choose_num(long x, long\
    \ y) \n{\n    if (x > y)\n    {\n        return -1L;\n    }\n    else\n    {\n\
    \        long result = x;\n        while (result <= y)\n        {\n          \
    \  if (result % 2 == 0)\n            {\n                return result;\n     \
    \       }\n            else\n            {\n                result++;\n      \
    \      }\n        }\n        return -1L;\n    }\n}\nunittest\n{\n    alias candidate\
    \ = choose_num;\n\n    assert(candidate(12L, 15L) == 14L);\n    assert(candidate(13L,\
    \ 12L) == -1L);\n    assert(candidate(33L, 12354L) == 12354L);\n    assert(candidate(5234L,\
    \ 5233L) == -1L);\n    assert(candidate(6L, 29L) == 28L);\n    assert(candidate(27L,\
    \ 10L) == -1L);\n    assert(candidate(7L, 7L) == -1L);\n    assert(candidate(546L,\
    \ 546L) == 546L);\n}\nvoid main(){}"
  status: SyntaxError
  stderr: 'b''Error: cannot find source code for runtime library file \''object.d\''\n       dmd
    might not be correctly installed. Run \''dmd -man\'' for installation instructions.\nimport
    path[0] = /tmp\nFailed: ["dmd", "-unittest", "-v", "-o-", "/tmp/tmp_2b862vp.d",
    "-I/tmp"]\n'''
  stdout: b''
  timestamp: 1659793719
- exit_code: 1
  program: "import std.typecons;\nimport std.math;\n/*\nThis function takes two positive\
    \ numbers x and y and returns the\n    biggest even integer number that is in\
    \ the range [x, y] inclusive. If \n    there's no such number, then the function\
    \ should return -1.\n\n    For example:\n    >>> choose_num(12L, 15L)\n    14L\n\
    \    >>> choose_num(13L, 12L)\n    -1L\n    \n*/\nlong choose_num(long x, long\
    \ y) \n{\n    if (x > y)\n        return -1;\n    else if (x % 2 == 0)\n     \
    \   return x;\n    else\n        return choose_num(x + 1, y);\n}\nunittest\n{\n\
    \    alias candidate = choose_num;\n\n    assert(candidate(12L, 15L) == 14L);\n\
    \    assert(candidate(13L, 12L) == -1L);\n    assert(candidate(33L, 12354L) ==\
    \ 12354L);\n    assert(candidate(5234L, 5233L) == -1L);\n    assert(candidate(6L,\
    \ 29L) == 28L);\n    assert(candidate(27L, 10L) == -1L);\n    assert(candidate(7L,\
    \ 7L) == -1L);\n    assert(candidate(546L, 546L) == 546L);\n}\nvoid main(){}"
  status: SyntaxError
  stderr: 'b''Error: cannot find source code for runtime library file \''object.d\''\n       dmd
    might not be correctly installed. Run \''dmd -man\'' for installation instructions.\nimport
    path[0] = /tmp\nFailed: ["dmd", "-unittest", "-v", "-o-", "/tmp/tmpgez4y1wt.d",
    "-I/tmp"]\n'''
  stdout: b''
  timestamp: 1659793719
- exit_code: 1
  program: "import std.typecons;\nimport std.math;\n/*\nThis function takes two positive\
    \ numbers x and y and returns the\n    biggest even integer number that is in\
    \ the range [x, y] inclusive. If \n    there's no such number, then the function\
    \ should return -1.\n\n    For example:\n    >>> choose_num(12L, 15L)\n    14L\n\
    \    >>> choose_num(13L, 12L)\n    -1L\n    \n*/\nlong choose_num(long x, long\
    \ y) \n{\n    if (x > y)\n        return -1;\n    long result = y;\n    while\
    \ (result % 2 != 0)\n        result--;\n    return result;\n}\nunittest\n{\n \
    \   alias candidate = choose_num;\n\n    assert(candidate(12L, 15L) == 14L);\n\
    \    assert(candidate(13L, 12L) == -1L);\n    assert(candidate(33L, 12354L) ==\
    \ 12354L);\n    assert(candidate(5234L, 5233L) == -1L);\n    assert(candidate(6L,\
    \ 29L) == 28L);\n    assert(candidate(27L, 10L) == -1L);\n    assert(candidate(7L,\
    \ 7L) == -1L);\n    assert(candidate(546L, 546L) == 546L);\n}\nvoid main(){}"
  status: SyntaxError
  stderr: 'b''Error: cannot find source code for runtime library file \''object.d\''\n       dmd
    might not be correctly installed. Run \''dmd -man\'' for installation instructions.\nimport
    path[0] = /tmp\nFailed: ["dmd", "-unittest", "-v", "-o-", "/tmp/tmp9h3kost1.d",
    "-I/tmp"]\n'''
  stdout: b''
  timestamp: 1659793719
- exit_code: 1
  program: "import std.typecons;\nimport std.math;\n/*\nThis function takes two positive\
    \ numbers x and y and returns the\n    biggest even integer number that is in\
    \ the range [x, y] inclusive. If \n    there's no such number, then the function\
    \ should return -1.\n\n    For example:\n    >>> choose_num(12L, 15L)\n    14L\n\
    \    >>> choose_num(13L, 12L)\n    -1L\n    \n*/\nlong choose_num(long x, long\
    \ y) \n{\n    long result = -1;\n    if (x % 2 == 0)\n    {\n        result =\
    \ x;\n    }\n    else\n    {\n        result = x + 1;\n    }\n    if (result >\
    \ y)\n    {\n        result = -1;\n    }\n    return result;\n}\n/*\nThis function\
    \ takes two positive numbers x and y and returns the\n    smallest odd integer\
    \ number that is in the range [x, y] inclusive. If \n    there's no such number,\
    \ then the function should return -1.\nunittest\n{\n    alias candidate = choose_num;\n\
    \n    assert(candidate(12L, 15L) == 14L);\n    assert(candidate(13L, 12L) == -1L);\n\
    \    assert(candidate(33L, 12354L) == 12354L);\n    assert(candidate(5234L, 5233L)\
    \ == -1L);\n    assert(candidate(6L, 29L) == 28L);\n    assert(candidate(27L,\
    \ 10L) == -1L);\n    assert(candidate(7L, 7L) == -1L);\n    assert(candidate(546L,\
    \ 546L) == 546L);\n}\nvoid main(){}"
  status: SyntaxError
  stderr: 'b''/tmp/tmp4x_k4tnf.d(32): Error: unterminated /* */ comment\nFailed: ["dmd",
    "-unittest", "-v", "-o-", "/tmp/tmp4x_k4tnf.d", "-I/tmp"]\n'''
  stdout: b''
  timestamp: 1659793719
- exit_code: 1
  program: "import std.typecons;\nimport std.math;\n/*\nThis function takes two positive\
    \ numbers x and y and returns the\n    biggest even integer number that is in\
    \ the range [x, y] inclusive. If \n    there's no such number, then the function\
    \ should return -1.\n\n    For example:\n    >>> choose_num(12L, 15L)\n    14L\n\
    \    >>> choose_num(13L, 12L)\n    -1L\n    \n*/\nlong choose_num(long x, long\
    \ y) \n{\n    long result = -1;\n    if (x > y)\n    {\n        return result;\n\
    \    }\n    else\n    {\n        long i = x;\n        while (i <= y)\n       \
    \ {\n            if (i % 2 == 0)\n            {\n                result = i;\n\
    \            }\n            i++;\n        }\n    }\n    return result;\n}\nunittest\n\
    {\n    alias candidate = choose_num;\n\n    assert(candidate(12L, 15L) == 14L);\n\
    \    assert(candidate(13L, 12L) == -1L);\n    assert(candidate(33L, 12354L) ==\
    \ 12354L);\n    assert(candidate(5234L, 5233L) == -1L);\n    assert(candidate(6L,\
    \ 29L) == 28L);\n    assert(candidate(27L, 10L) == -1L);\n    assert(candidate(7L,\
    \ 7L) == -1L);\n    assert(candidate(546L, 546L) == 546L);\n}\nvoid main(){}"
  status: SyntaxError
  stderr: 'b''Error: cannot find source code for runtime library file \''object.d\''\n       dmd
    might not be correctly installed. Run \''dmd -man\'' for installation instructions.\nimport
    path[0] = /tmp\nFailed: ["dmd", "-unittest", "-v", "-o-", "/tmp/tmpjfm171t2.d",
    "-I/tmp"]\n'''
  stdout: b''
  timestamp: 1659793719
- exit_code: 1
  program: "import std.typecons;\nimport std.math;\n/*\nThis function takes two positive\
    \ numbers x and y and returns the\n    biggest even integer number that is in\
    \ the range [x, y] inclusive. If \n    there's no such number, then the function\
    \ should return -1.\n\n    For example:\n    >>> choose_num(12L, 15L)\n    14L\n\
    \    >>> choose_num(13L, 12L)\n    -1L\n    \n*/\nlong choose_num(long x, long\
    \ y) \n{\n    if (x > y)\n    {\n        return -1L;\n    }\n    else if (x %\
    \ 2 == 0)\n    {\n        return x;\n    }\n    else\n    {\n        return choose_num(x\
    \ + 1, y);\n    }\n}\nunittest\n{\n    alias candidate = choose_num;\n\n    assert(candidate(12L,\
    \ 15L) == 14L);\n    assert(candidate(13L, 12L) == -1L);\n    assert(candidate(33L,\
    \ 12354L) == 12354L);\n    assert(candidate(5234L, 5233L) == -1L);\n    assert(candidate(6L,\
    \ 29L) == 28L);\n    assert(candidate(27L, 10L) == -1L);\n    assert(candidate(7L,\
    \ 7L) == -1L);\n    assert(candidate(546L, 546L) == 546L);\n}\nvoid main(){}"
  status: SyntaxError
  stderr: 'b''Error: cannot find source code for runtime library file \''object.d\''\n       dmd
    might not be correctly installed. Run \''dmd -man\'' for installation instructions.\nimport
    path[0] = /tmp\nFailed: ["dmd", "-unittest", "-v", "-o-", "/tmp/tmprqxrzaat.d",
    "-I/tmp"]\n'''
  stdout: b''
  timestamp: 1659793719
- exit_code: 1
  program: "import std.typecons;\nimport std.math;\n/*\nThis function takes two positive\
    \ numbers x and y and returns the\n    biggest even integer number that is in\
    \ the range [x, y] inclusive. If \n    there's no such number, then the function\
    \ should return -1.\n\n    For example:\n    >>> choose_num(12L, 15L)\n    14L\n\
    \    >>> choose_num(13L, 12L)\n    -1L\n    \n*/\nlong choose_num(long x, long\
    \ y) \n{\n    long result = -1;\n    foreach(i; x..y+1)\n    {\n        if(i %\
    \ 2 == 0)\n        {\n            result = i;\n        }\n    }\n    return result;\n\
    }\nunittest\n{\n    alias candidate = choose_num;\n\n    assert(candidate(12L,\
    \ 15L) == 14L);\n    assert(candidate(13L, 12L) == -1L);\n    assert(candidate(33L,\
    \ 12354L) == 12354L);\n    assert(candidate(5234L, 5233L) == -1L);\n    assert(candidate(6L,\
    \ 29L) == 28L);\n    assert(candidate(27L, 10L) == -1L);\n    assert(candidate(7L,\
    \ 7L) == -1L);\n    assert(candidate(546L, 546L) == 546L);\n}\nvoid main(){}"
  status: SyntaxError
  stderr: 'b''Error: cannot find source code for runtime library file \''object.d\''\n       dmd
    might not be correctly installed. Run \''dmd -man\'' for installation instructions.\nimport
    path[0] = /tmp\nFailed: ["dmd", "-unittest", "-v", "-o-", "/tmp/tmpf89oph2c.d",
    "-I/tmp"]\n'''
  stdout: b''
  timestamp: 1659793719
- exit_code: 1
  program: "import std.typecons;\nimport std.math;\n/*\nThis function takes two positive\
    \ numbers x and y and returns the\n    biggest even integer number that is in\
    \ the range [x, y] inclusive. If \n    there's no such number, then the function\
    \ should return -1.\n\n    For example:\n    >>> choose_num(12L, 15L)\n    14L\n\
    \    >>> choose_num(13L, 12L)\n    -1L\n    \n*/\nlong choose_num(long x, long\
    \ y) \n{\n    long ret = -1;\n    if (x % 2 == 0)\n    {\n        ret = x;\n \
    \   }\n    else\n    {\n        ret = x + 1;\n    }\n    if (ret > y)\n    {\n\
    \        ret = -1;\n    }\n    return ret;\n}\nunittest\n{\n    alias candidate\
    \ = choose_num;\n\n    assert(candidate(12L, 15L) == 14L);\n    assert(candidate(13L,\
    \ 12L) == -1L);\n    assert(candidate(33L, 12354L) == 12354L);\n    assert(candidate(5234L,\
    \ 5233L) == -1L);\n    assert(candidate(6L, 29L) == 28L);\n    assert(candidate(27L,\
    \ 10L) == -1L);\n    assert(candidate(7L, 7L) == -1L);\n    assert(candidate(546L,\
    \ 546L) == 546L);\n}\nvoid main(){}"
  status: SyntaxError
  stderr: 'b''Error: cannot find source code for runtime library file \''object.d\''\n       dmd
    might not be correctly installed. Run \''dmd -man\'' for installation instructions.\nimport
    path[0] = /tmp\nFailed: ["dmd", "-unittest", "-v", "-o-", "/tmp/tmpfx_bdgef.d",
    "-I/tmp"]\n'''
  stdout: b''
  timestamp: 1659793719
- exit_code: 1
  program: "import std.typecons;\nimport std.math;\n/*\nThis function takes two positive\
    \ numbers x and y and returns the\n    biggest even integer number that is in\
    \ the range [x, y] inclusive. If \n    there's no such number, then the function\
    \ should return -1.\n\n    For example:\n    >>> choose_num(12L, 15L)\n    14L\n\
    \    >>> choose_num(13L, 12L)\n    -1L\n    \n*/\nlong choose_num(long x, long\
    \ y) \n{\n    long result = -1;\n    if (x % 2 == 0)\n    {\n        result =\
    \ x;\n    }\n    else\n    {\n        result = x + 1;\n    }\n    if (result >\
    \ y)\n    {\n        result = -1;\n    }\n    return result;\n}\nunittest\n{\n\
    \    alias candidate = choose_num;\n\n    assert(candidate(12L, 15L) == 14L);\n\
    \    assert(candidate(13L, 12L) == -1L);\n    assert(candidate(33L, 12354L) ==\
    \ 12354L);\n    assert(candidate(5234L, 5233L) == -1L);\n    assert(candidate(6L,\
    \ 29L) == 28L);\n    assert(candidate(27L, 10L) == -1L);\n    assert(candidate(7L,\
    \ 7L) == -1L);\n    assert(candidate(546L, 546L) == 546L);\n}\nvoid main(){}"
  status: Exception
  stderr: 'b''core.exception.AssertError@/tmp/tmpigxyzbx6.d(36): unittest failure\n----------------\n??:?
    _d_unittestp [0x427e1d]\n??:? void tmpigxyzbx6.__unittest_L32_C1() [0x427a79]\n??:?
    void tmpigxyzbx6.__modtest() [0x427ba0]\n??:? int core.runtime.runModuleUnitTests().__foreachbody2(object.ModuleInfo*)
    [0x42bb43]\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)).__lambda2(immutable(object.ModuleInfo*))
    [0x42a9d6]\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))).__foreachbody2(ref
    rt.sections_elf_shared.DSO) [0x42fb69]\n??:? int rt.sections_elf_shared.DSO.opApply(scope
    int delegate(ref rt.sections_elf_shared.DSO)) [0x430018]\n??:? int rt.minfo.moduleinfos_apply(scope
    int delegate(immutable(object.ModuleInfo*))) [0x42faf5]\n??:? int object.ModuleInfo.opApply(scope
    int delegate(object.ModuleInfo*)) [0x42a9ad]\n??:? runModuleUnitTests [0x42b919]\n??:?
    void rt.dmain2._d_run_main(int, char**, extern (C) int function(char[][])*).runAll()
    [0x42826c]\n??:? void rt.dmain2._d_run_main(int, char**, extern (C) int function(char[][])*).tryExec(scope
    void delegate()) [0x4281f3]\n??:? _d_run_main [0x42815e]\n??:? main [0x427bb3]\n??:?
    __libc_start_main [0x528cc554]\n1/1 unittests FAILED\n'''
  stdout: b''
- exit_code: 1
  program: "import std.typecons;\nimport std.math;\n/*\nThis function takes two positive\
    \ numbers x and y and returns the\n    biggest even integer number that is in\
    \ the range [x, y] inclusive. If \n    there's no such number, then the function\
    \ should return -1.\n\n    For example:\n    >>> choose_num(12L, 15L)\n    14L\n\
    \    >>> choose_num(13L, 12L)\n    -1L\n    \n*/\nlong choose_num(long x, long\
    \ y) \n{\n    if (x % 2 == 0)\n    {\n        return x;\n    }\n    else if (x\
    \ + 1 == y)\n    {\n        return -1;\n    }\n    else\n    {\n        return\
    \ choose_num(x + 1, y);\n    }\n}\nunittest\n{\n    alias candidate = choose_num;\n\
    \n    assert(candidate(12L, 15L) == 14L);\n    assert(candidate(13L, 12L) == -1L);\n\
    \    assert(candidate(33L, 12354L) == 12354L);\n    assert(candidate(5234L, 5233L)\
    \ == -1L);\n    assert(candidate(6L, 29L) == 28L);\n    assert(candidate(27L,\
    \ 10L) == -1L);\n    assert(candidate(7L, 7L) == -1L);\n    assert(candidate(546L,\
    \ 546L) == 546L);\n}\nvoid main(){}"
  status: SyntaxError
  stderr: 'b''Error: cannot find source code for runtime library file \''object.d\''\n       dmd
    might not be correctly installed. Run \''dmd -man\'' for installation instructions.\nimport
    path[0] = /tmp\nFailed: ["dmd", "-unittest", "-v", "-o-", "/tmp/tmpzkr__1eu.d",
    "-I/tmp"]\n'''
  stdout: b''
  timestamp: 1659793719
- exit_code: 1
  program: "import std.typecons;\nimport std.math;\n/*\nThis function takes two positive\
    \ numbers x and y and returns the\n    biggest even integer number that is in\
    \ the range [x, y] inclusive. If \n    there's no such number, then the function\
    \ should return -1.\n\n    For example:\n    >>> choose_num(12L, 15L)\n    14L\n\
    \    >>> choose_num(13L, 12L)\n    -1L\n    \n*/\nlong choose_num(long x, long\
    \ y) \n{\n    long result = -1;\n    if (x % 2 == 0)\n    {\n        result =\
    \ x;\n    }\n    else\n    {\n        result = x + 1;\n    }\n    if (result >\
    \ y)\n    {\n        result = -1;\n    }\n    return result;\n}\nunittest\n{\n\
    \    alias candidate = choose_num;\n\n    assert(candidate(12L, 15L) == 14L);\n\
    \    assert(candidate(13L, 12L) == -1L);\n    assert(candidate(33L, 12354L) ==\
    \ 12354L);\n    assert(candidate(5234L, 5233L) == -1L);\n    assert(candidate(6L,\
    \ 29L) == 28L);\n    assert(candidate(27L, 10L) == -1L);\n    assert(candidate(7L,\
    \ 7L) == -1L);\n    assert(candidate(546L, 546L) == 546L);\n}\nvoid main(){}"
  status: Exception
  stderr: 'b''core.exception.AssertError@/tmp/tmpigxyzbx6.d(36): unittest failure\n----------------\n??:?
    _d_unittestp [0x427e1d]\n??:? void tmpigxyzbx6.__unittest_L32_C1() [0x427a79]\n??:?
    void tmpigxyzbx6.__modtest() [0x427ba0]\n??:? int core.runtime.runModuleUnitTests().__foreachbody2(object.ModuleInfo*)
    [0x42bb43]\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)).__lambda2(immutable(object.ModuleInfo*))
    [0x42a9d6]\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))).__foreachbody2(ref
    rt.sections_elf_shared.DSO) [0x42fb69]\n??:? int rt.sections_elf_shared.DSO.opApply(scope
    int delegate(ref rt.sections_elf_shared.DSO)) [0x430018]\n??:? int rt.minfo.moduleinfos_apply(scope
    int delegate(immutable(object.ModuleInfo*))) [0x42faf5]\n??:? int object.ModuleInfo.opApply(scope
    int delegate(object.ModuleInfo*)) [0x42a9ad]\n??:? runModuleUnitTests [0x42b919]\n??:?
    void rt.dmain2._d_run_main(int, char**, extern (C) int function(char[][])*).runAll()
    [0x42826c]\n??:? void rt.dmain2._d_run_main(int, char**, extern (C) int function(char[][])*).tryExec(scope
    void delegate()) [0x4281f3]\n??:? _d_run_main [0x42815e]\n??:? main [0x427bb3]\n??:?
    __libc_start_main [0x528cc554]\n1/1 unittests FAILED\n'''
  stdout: b''
- exit_code: 1
  program: "import std.typecons;\nimport std.math;\n/*\nThis function takes two positive\
    \ numbers x and y and returns the\n    biggest even integer number that is in\
    \ the range [x, y] inclusive. If \n    there's no such number, then the function\
    \ should return -1.\n\n    For example:\n    >>> choose_num(12L, 15L)\n    14L\n\
    \    >>> choose_num(13L, 12L)\n    -1L\n    \n*/\nlong choose_num(long x, long\
    \ y) \n{\n    if (x > y)\n    {\n        return -1L;\n    }\n    else\n    {\n\
    \        long z = x;\n        while (z <= y)\n        {\n            if (z % 2\
    \ == 0)\n            {\n                return z;\n            }\n           \
    \ z++;\n        }\n        return -1L;\n    }\n}\nunittest\n{\n    alias candidate\
    \ = choose_num;\n\n    assert(candidate(12L, 15L) == 14L);\n    assert(candidate(13L,\
    \ 12L) == -1L);\n    assert(candidate(33L, 12354L) == 12354L);\n    assert(candidate(5234L,\
    \ 5233L) == -1L);\n    assert(candidate(6L, 29L) == 28L);\n    assert(candidate(27L,\
    \ 10L) == -1L);\n    assert(candidate(7L, 7L) == -1L);\n    assert(candidate(546L,\
    \ 546L) == 546L);\n}\nvoid main(){}"
  status: SyntaxError
  stderr: 'b''Error: cannot find source code for runtime library file \''object.d\''\n       dmd
    might not be correctly installed. Run \''dmd -man\'' for installation instructions.\nimport
    path[0] = /tmp\nFailed: ["dmd", "-unittest", "-v", "-o-", "/tmp/tmp0o3uq622.d",
    "-I/tmp"]\n'''
  stdout: b''
  timestamp: 1659793719
- exit_code: 1
  program: "import std.typecons;\nimport std.math;\n/*\nThis function takes two positive\
    \ numbers x and y and returns the\n    biggest even integer number that is in\
    \ the range [x, y] inclusive. If \n    there's no such number, then the function\
    \ should return -1.\n\n    For example:\n    >>> choose_num(12L, 15L)\n    14L\n\
    \    >>> choose_num(13L, 12L)\n    -1L\n    \n*/\nlong choose_num(long x, long\
    \ y) \n{\n    long result = -1;\n    if (x % 2 == 0)\n    {\n        result =\
    \ x;\n    }\n    else\n    {\n        result = x + 1;\n    }\n    if (result >\
    \ y)\n    {\n        result = -1;\n    }\n    return result;\n}\nunittest\n{\n\
    \    alias candidate = choose_num;\n\n    assert(candidate(12L, 15L) == 14L);\n\
    \    assert(candidate(13L, 12L) == -1L);\n    assert(candidate(33L, 12354L) ==\
    \ 12354L);\n    assert(candidate(5234L, 5233L) == -1L);\n    assert(candidate(6L,\
    \ 29L) == 28L);\n    assert(candidate(27L, 10L) == -1L);\n    assert(candidate(7L,\
    \ 7L) == -1L);\n    assert(candidate(546L, 546L) == 546L);\n}\nvoid main(){}"
  status: Exception
  stderr: 'b''core.exception.AssertError@/tmp/tmpigxyzbx6.d(36): unittest failure\n----------------\n??:?
    _d_unittestp [0x427e1d]\n??:? void tmpigxyzbx6.__unittest_L32_C1() [0x427a79]\n??:?
    void tmpigxyzbx6.__modtest() [0x427ba0]\n??:? int core.runtime.runModuleUnitTests().__foreachbody2(object.ModuleInfo*)
    [0x42bb43]\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)).__lambda2(immutable(object.ModuleInfo*))
    [0x42a9d6]\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))).__foreachbody2(ref
    rt.sections_elf_shared.DSO) [0x42fb69]\n??:? int rt.sections_elf_shared.DSO.opApply(scope
    int delegate(ref rt.sections_elf_shared.DSO)) [0x430018]\n??:? int rt.minfo.moduleinfos_apply(scope
    int delegate(immutable(object.ModuleInfo*))) [0x42faf5]\n??:? int object.ModuleInfo.opApply(scope
    int delegate(object.ModuleInfo*)) [0x42a9ad]\n??:? runModuleUnitTests [0x42b919]\n??:?
    void rt.dmain2._d_run_main(int, char**, extern (C) int function(char[][])*).runAll()
    [0x42826c]\n??:? void rt.dmain2._d_run_main(int, char**, extern (C) int function(char[][])*).tryExec(scope
    void delegate()) [0x4281f3]\n??:? _d_run_main [0x42815e]\n??:? main [0x427bb3]\n??:?
    __libc_start_main [0x528cc554]\n1/1 unittests FAILED\n'''
  stdout: b''
- exit_code: 1
  program: "import std.typecons;\nimport std.math;\n/*\nThis function takes two positive\
    \ numbers x and y and returns the\n    biggest even integer number that is in\
    \ the range [x, y] inclusive. If \n    there's no such number, then the function\
    \ should return -1.\n\n    For example:\n    >>> choose_num(12L, 15L)\n    14L\n\
    \    >>> choose_num(13L, 12L)\n    -1L\n    \n*/\nlong choose_num(long x, long\
    \ y) \n{\n    long num = -1;\n    long i = x;\n    while (i <= y)\n    {\n   \
    \     if (i % 2 == 0)\n        {\n            num = i;\n        }\n        i++;\n\
    \    }\n    return num;\n}\nunittest\n{\n    alias candidate = choose_num;\n\n\
    \    assert(candidate(12L, 15L) == 14L);\n    assert(candidate(13L, 12L) == -1L);\n\
    \    assert(candidate(33L, 12354L) == 12354L);\n    assert(candidate(5234L, 5233L)\
    \ == -1L);\n    assert(candidate(6L, 29L) == 28L);\n    assert(candidate(27L,\
    \ 10L) == -1L);\n    assert(candidate(7L, 7L) == -1L);\n    assert(candidate(546L,\
    \ 546L) == 546L);\n}\nvoid main(){}"
  status: SyntaxError
  stderr: 'b''Error: cannot find source code for runtime library file \''object.d\''\n       dmd
    might not be correctly installed. Run \''dmd -man\'' for installation instructions.\nimport
    path[0] = /tmp\nFailed: ["dmd", "-unittest", "-v", "-o-", "/tmp/tmpu6x8v5i5.d",
    "-I/tmp"]\n'''
  stdout: b''
  timestamp: 1659793719
- exit_code: 1
  program: "import std.typecons;\nimport std.math;\n/*\nThis function takes two positive\
    \ numbers x and y and returns the\n    biggest even integer number that is in\
    \ the range [x, y] inclusive. If \n    there's no such number, then the function\
    \ should return -1.\n\n    For example:\n    >>> choose_num(12L, 15L)\n    14L\n\
    \    >>> choose_num(13L, 12L)\n    -1L\n    \n*/\nlong choose_num(long x, long\
    \ y) \n{\n    long result = -1;\n    if (x % 2 == 0)\n    {\n        result =\
    \ x;\n    }\n    else\n    {\n        result = x + 1;\n    }\n    if (result >\
    \ y)\n    {\n        result = -1;\n    }\n    return result;\n}\nunittest\n{\n\
    \    alias candidate = choose_num;\n\n    assert(candidate(12L, 15L) == 14L);\n\
    \    assert(candidate(13L, 12L) == -1L);\n    assert(candidate(33L, 12354L) ==\
    \ 12354L);\n    assert(candidate(5234L, 5233L) == -1L);\n    assert(candidate(6L,\
    \ 29L) == 28L);\n    assert(candidate(27L, 10L) == -1L);\n    assert(candidate(7L,\
    \ 7L) == -1L);\n    assert(candidate(546L, 546L) == 546L);\n}\nvoid main(){}"
  status: Exception
  stderr: 'b''core.exception.AssertError@/tmp/tmpigxyzbx6.d(36): unittest failure\n----------------\n??:?
    _d_unittestp [0x427e1d]\n??:? void tmpigxyzbx6.__unittest_L32_C1() [0x427a79]\n??:?
    void tmpigxyzbx6.__modtest() [0x427ba0]\n??:? int core.runtime.runModuleUnitTests().__foreachbody2(object.ModuleInfo*)
    [0x42bb43]\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)).__lambda2(immutable(object.ModuleInfo*))
    [0x42a9d6]\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))).__foreachbody2(ref
    rt.sections_elf_shared.DSO) [0x42fb69]\n??:? int rt.sections_elf_shared.DSO.opApply(scope
    int delegate(ref rt.sections_elf_shared.DSO)) [0x430018]\n??:? int rt.minfo.moduleinfos_apply(scope
    int delegate(immutable(object.ModuleInfo*))) [0x42faf5]\n??:? int object.ModuleInfo.opApply(scope
    int delegate(object.ModuleInfo*)) [0x42a9ad]\n??:? runModuleUnitTests [0x42b919]\n??:?
    void rt.dmain2._d_run_main(int, char**, extern (C) int function(char[][])*).runAll()
    [0x42826c]\n??:? void rt.dmain2._d_run_main(int, char**, extern (C) int function(char[][])*).tryExec(scope
    void delegate()) [0x4281f3]\n??:? _d_run_main [0x42815e]\n??:? main [0x427bb3]\n??:?
    __libc_start_main [0x528cc554]\n1/1 unittests FAILED\n'''
  stdout: b''
- exit_code: 1
  program: "import std.typecons;\nimport std.math;\n/*\nThis function takes two positive\
    \ numbers x and y and returns the\n    biggest even integer number that is in\
    \ the range [x, y] inclusive. If \n    there's no such number, then the function\
    \ should return -1.\n\n    For example:\n    >>> choose_num(12L, 15L)\n    14L\n\
    \    >>> choose_num(13L, 12L)\n    -1L\n    \n*/\nlong choose_num(long x, long\
    \ y) \n{\n    long result = -1;\n    if (x % 2 == 0)\n    {\n        result =\
    \ x;\n    }\n    else\n    {\n        result = x + 1;\n    }\n    if (result >\
    \ y)\n    {\n        result = -1;\n    }\n    return result;\n}\nunittest\n{\n\
    \    alias candidate = choose_num;\n\n    assert(candidate(12L, 15L) == 14L);\n\
    \    assert(candidate(13L, 12L) == -1L);\n    assert(candidate(33L, 12354L) ==\
    \ 12354L);\n    assert(candidate(5234L, 5233L) == -1L);\n    assert(candidate(6L,\
    \ 29L) == 28L);\n    assert(candidate(27L, 10L) == -1L);\n    assert(candidate(7L,\
    \ 7L) == -1L);\n    assert(candidate(546L, 546L) == 546L);\n}\nvoid main(){}"
  status: Exception
  stderr: 'b''core.exception.AssertError@/tmp/tmpigxyzbx6.d(36): unittest failure\n----------------\n??:?
    _d_unittestp [0x427e1d]\n??:? void tmpigxyzbx6.__unittest_L32_C1() [0x427a79]\n??:?
    void tmpigxyzbx6.__modtest() [0x427ba0]\n??:? int core.runtime.runModuleUnitTests().__foreachbody2(object.ModuleInfo*)
    [0x42bb43]\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)).__lambda2(immutable(object.ModuleInfo*))
    [0x42a9d6]\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))).__foreachbody2(ref
    rt.sections_elf_shared.DSO) [0x42fb69]\n??:? int rt.sections_elf_shared.DSO.opApply(scope
    int delegate(ref rt.sections_elf_shared.DSO)) [0x430018]\n??:? int rt.minfo.moduleinfos_apply(scope
    int delegate(immutable(object.ModuleInfo*))) [0x42faf5]\n??:? int object.ModuleInfo.opApply(scope
    int delegate(object.ModuleInfo*)) [0x42a9ad]\n??:? runModuleUnitTests [0x42b919]\n??:?
    void rt.dmain2._d_run_main(int, char**, extern (C) int function(char[][])*).runAll()
    [0x42826c]\n??:? void rt.dmain2._d_run_main(int, char**, extern (C) int function(char[][])*).tryExec(scope
    void delegate()) [0x4281f3]\n??:? _d_run_main [0x42815e]\n??:? main [0x427bb3]\n??:?
    __libc_start_main [0x528cc554]\n1/1 unittests FAILED\n'''
  stdout: b''
- exit_code: 1
  program: "import std.typecons;\nimport std.math;\n/*\nThis function takes two positive\
    \ numbers x and y and returns the\n    biggest even integer number that is in\
    \ the range [x, y] inclusive. If \n    there's no such number, then the function\
    \ should return -1.\n\n    For example:\n    >>> choose_num(12L, 15L)\n    14L\n\
    \    >>> choose_num(13L, 12L)\n    -1L\n    \n*/\nlong choose_num(long x, long\
    \ y) \n{\n    long result = -1;\n    if (x % 2 == 0) {\n        result = x;\n\
    \    } else {\n        result = x + 1;\n    }\n    if (result > y) {\n       \
    \ result = -1;\n    }\n    return result;\n}\nunittest\n{\n    alias candidate\
    \ = choose_num;\n\n    assert(candidate(12L, 15L) == 14L);\n    assert(candidate(13L,\
    \ 12L) == -1L);\n    assert(candidate(33L, 12354L) == 12354L);\n    assert(candidate(5234L,\
    \ 5233L) == -1L);\n    assert(candidate(6L, 29L) == 28L);\n    assert(candidate(27L,\
    \ 10L) == -1L);\n    assert(candidate(7L, 7L) == -1L);\n    assert(candidate(546L,\
    \ 546L) == 546L);\n}\nvoid main(){}"
  status: Exception
  stderr: 'b''core.exception.AssertError@/tmp/tmpkiwx27jy.d(32): unittest failure\n----------------\n??:?
    _d_unittestp [0x427e1d]\n??:? void tmpkiwx27jy.__unittest_L28_C1() [0x427a79]\n??:?
    void tmpkiwx27jy.__modtest() [0x427ba0]\n??:? int core.runtime.runModuleUnitTests().__foreachbody2(object.ModuleInfo*)
    [0x42bb43]\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)).__lambda2(immutable(object.ModuleInfo*))
    [0x42a9d6]\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))).__foreachbody2(ref
    rt.sections_elf_shared.DSO) [0x42fb69]\n??:? int rt.sections_elf_shared.DSO.opApply(scope
    int delegate(ref rt.sections_elf_shared.DSO)) [0x430018]\n??:? int rt.minfo.moduleinfos_apply(scope
    int delegate(immutable(object.ModuleInfo*))) [0x42faf5]\n??:? int object.ModuleInfo.opApply(scope
    int delegate(object.ModuleInfo*)) [0x42a9ad]\n??:? runModuleUnitTests [0x42b919]\n??:?
    void rt.dmain2._d_run_main(int, char**, extern (C) int function(char[][])*).runAll()
    [0x42826c]\n??:? void rt.dmain2._d_run_main(int, char**, extern (C) int function(char[][])*).tryExec(scope
    void delegate()) [0x4281f3]\n??:? _d_run_main [0x42815e]\n??:? main [0x427bb3]\n??:?
    __libc_start_main [0x412cc554]\n1/1 unittests FAILED\n'''
  stdout: b''
- exit_code: 1
  program: "import std.typecons;\nimport std.math;\n/*\nThis function takes two positive\
    \ numbers x and y and returns the\n    biggest even integer number that is in\
    \ the range [x, y] inclusive. If \n    there's no such number, then the function\
    \ should return -1.\n\n    For example:\n    >>> choose_num(12L, 15L)\n    14L\n\
    \    >>> choose_num(13L, 12L)\n    -1L\n    \n*/\nlong choose_num(long x, long\
    \ y) \n{\n    long result = -1;\n    foreach(i; x..y+1)\n    {\n        if(i %\
    \ 2 == 0)\n        {\n            result = i;\n        }\n    }\n    return result;\n\
    }\nunittest\n{\n    alias candidate = choose_num;\n\n    assert(candidate(12L,\
    \ 15L) == 14L);\n    assert(candidate(13L, 12L) == -1L);\n    assert(candidate(33L,\
    \ 12354L) == 12354L);\n    assert(candidate(5234L, 5233L) == -1L);\n    assert(candidate(6L,\
    \ 29L) == 28L);\n    assert(candidate(27L, 10L) == -1L);\n    assert(candidate(7L,\
    \ 7L) == -1L);\n    assert(candidate(546L, 546L) == 546L);\n}\nvoid main(){}"
  status: SyntaxError
  stderr: 'b''Error: cannot find source code for runtime library file \''object.d\''\n       dmd
    might not be correctly installed. Run \''dmd -man\'' for installation instructions.\nimport
    path[0] = /tmp\nFailed: ["dmd", "-unittest", "-v", "-o-", "/tmp/tmpf89oph2c.d",
    "-I/tmp"]\n'''
  stdout: b''
  timestamp: 1659793719
- exit_code: 1
  program: "import std.typecons;\nimport std.math;\n/*\nThis function takes two positive\
    \ numbers x and y and returns the\n    biggest even integer number that is in\
    \ the range [x, y] inclusive. If \n    there's no such number, then the function\
    \ should return -1.\n\n    For example:\n    >>> choose_num(12L, 15L)\n    14L\n\
    \    >>> choose_num(13L, 12L)\n    -1L\n    \n*/\nlong choose_num(long x, long\
    \ y) \n{\n    long result = -1;\n    if (x % 2 == 0)\n    {\n        result =\
    \ x;\n    }\n    else\n    {\n        result = x + 1;\n    }\n    if (result >\
    \ y)\n    {\n        result = -1;\n    }\n    return result;\n}\nunittest\n{\n\
    \    alias candidate = choose_num;\n\n    assert(candidate(12L, 15L) == 14L);\n\
    \    assert(candidate(13L, 12L) == -1L);\n    assert(candidate(33L, 12354L) ==\
    \ 12354L);\n    assert(candidate(5234L, 5233L) == -1L);\n    assert(candidate(6L,\
    \ 29L) == 28L);\n    assert(candidate(27L, 10L) == -1L);\n    assert(candidate(7L,\
    \ 7L) == -1L);\n    assert(candidate(546L, 546L) == 546L);\n}\nvoid main(){}"
  status: Exception
  stderr: 'b''core.exception.AssertError@/tmp/tmpigxyzbx6.d(36): unittest failure\n----------------\n??:?
    _d_unittestp [0x427e1d]\n??:? void tmpigxyzbx6.__unittest_L32_C1() [0x427a79]\n??:?
    void tmpigxyzbx6.__modtest() [0x427ba0]\n??:? int core.runtime.runModuleUnitTests().__foreachbody2(object.ModuleInfo*)
    [0x42bb43]\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)).__lambda2(immutable(object.ModuleInfo*))
    [0x42a9d6]\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))).__foreachbody2(ref
    rt.sections_elf_shared.DSO) [0x42fb69]\n??:? int rt.sections_elf_shared.DSO.opApply(scope
    int delegate(ref rt.sections_elf_shared.DSO)) [0x430018]\n??:? int rt.minfo.moduleinfos_apply(scope
    int delegate(immutable(object.ModuleInfo*))) [0x42faf5]\n??:? int object.ModuleInfo.opApply(scope
    int delegate(object.ModuleInfo*)) [0x42a9ad]\n??:? runModuleUnitTests [0x42b919]\n??:?
    void rt.dmain2._d_run_main(int, char**, extern (C) int function(char[][])*).runAll()
    [0x42826c]\n??:? void rt.dmain2._d_run_main(int, char**, extern (C) int function(char[][])*).tryExec(scope
    void delegate()) [0x4281f3]\n??:? _d_run_main [0x42815e]\n??:? main [0x427bb3]\n??:?
    __libc_start_main [0x528cc554]\n1/1 unittests FAILED\n'''
  stdout: b''
- exit_code: 1
  program: "import std.typecons;\nimport std.math;\n/*\nThis function takes two positive\
    \ numbers x and y and returns the\n    biggest even integer number that is in\
    \ the range [x, y] inclusive. If \n    there's no such number, then the function\
    \ should return -1.\n\n    For example:\n    >>> choose_num(12L, 15L)\n    14L\n\
    \    >>> choose_num(13L, 12L)\n    -1L\n    \n*/\nlong choose_num(long x, long\
    \ y) \n{\n    if (x > y)\n        return -1;\n    if (x % 2 == 0)\n        return\
    \ x;\n    if (y % 2 == 0)\n        return y;\n    return -1;\n}\nunittest\n{\n\
    \    alias candidate = choose_num;\n\n    assert(candidate(12L, 15L) == 14L);\n\
    \    assert(candidate(13L, 12L) == -1L);\n    assert(candidate(33L, 12354L) ==\
    \ 12354L);\n    assert(candidate(5234L, 5233L) == -1L);\n    assert(candidate(6L,\
    \ 29L) == 28L);\n    assert(candidate(27L, 10L) == -1L);\n    assert(candidate(7L,\
    \ 7L) == -1L);\n    assert(candidate(546L, 546L) == 546L);\n}\nvoid main(){}"
  status: SyntaxError
  stderr: 'b''Error: cannot find source code for runtime library file \''object.d\''\n       dmd
    might not be correctly installed. Run \''dmd -man\'' for installation instructions.\nimport
    path[0] = /tmp\nFailed: ["dmd", "-unittest", "-v", "-o-", "/tmp/tmp_kg6nqfp.d",
    "-I/tmp"]\n'''
  stdout: b''
  timestamp: 1659793719
- exit_code: 1
  program: "import std.typecons;\nimport std.math;\n/*\nThis function takes two positive\
    \ numbers x and y and returns the\n    biggest even integer number that is in\
    \ the range [x, y] inclusive. If \n    there's no such number, then the function\
    \ should return -1.\n\n    For example:\n    >>> choose_num(12L, 15L)\n    14L\n\
    \    >>> choose_num(13L, 12L)\n    -1L\n    \n*/\nlong choose_num(long x, long\
    \ y) \n{\n    if (x > y)\n    {\n        return -1L;\n    }\n    else\n    {\n\
    \        long z = x;\n        while (z <= y)\n        {\n            if (z % 2\
    \ == 0)\n            {\n                return z;\n            }\n           \
    \ z++;\n        }\n        return -1L;\n    }\n}\nunittest\n{\n    alias candidate\
    \ = choose_num;\n\n    assert(candidate(12L, 15L) == 14L);\n    assert(candidate(13L,\
    \ 12L) == -1L);\n    assert(candidate(33L, 12354L) == 12354L);\n    assert(candidate(5234L,\
    \ 5233L) == -1L);\n    assert(candidate(6L, 29L) == 28L);\n    assert(candidate(27L,\
    \ 10L) == -1L);\n    assert(candidate(7L, 7L) == -1L);\n    assert(candidate(546L,\
    \ 546L) == 546L);\n}\nvoid main(){}"
  status: SyntaxError
  stderr: 'b''Error: cannot find source code for runtime library file \''object.d\''\n       dmd
    might not be correctly installed. Run \''dmd -man\'' for installation instructions.\nimport
    path[0] = /tmp\nFailed: ["dmd", "-unittest", "-v", "-o-", "/tmp/tmp0o3uq622.d",
    "-I/tmp"]\n'''
  stdout: b''
  timestamp: 1659793719
- exit_code: 1
  program: "import std.typecons;\nimport std.math;\n/*\nThis function takes two positive\
    \ numbers x and y and returns the\n    biggest even integer number that is in\
    \ the range [x, y] inclusive. If \n    there's no such number, then the function\
    \ should return -1.\n\n    For example:\n    >>> choose_num(12L, 15L)\n    14L\n\
    \    >>> choose_num(13L, 12L)\n    -1L\n    \n*/\nlong choose_num(long x, long\
    \ y) \n{\n    long result = -1;\n    if (x > y)\n    {\n        return result;\n\
    \    }\n    else\n    {\n        foreach (i; x..y)\n        {\n            if\
    \ (i % 2 == 0)\n            {\n                result = i;\n            }\n  \
    \      }\n    }\n    return result;\n}\nunittest\n{\n    alias candidate = choose_num;\n\
    \n    assert(candidate(12L, 15L) == 14L);\n    assert(candidate(13L, 12L) == -1L);\n\
    \    assert(candidate(33L, 12354L) == 12354L);\n    assert(candidate(5234L, 5233L)\
    \ == -1L);\n    assert(candidate(6L, 29L) == 28L);\n    assert(candidate(27L,\
    \ 10L) == -1L);\n    assert(candidate(7L, 7L) == -1L);\n    assert(candidate(546L,\
    \ 546L) == 546L);\n}\nvoid main(){}"
  status: SyntaxError
  stderr: 'b''Error: cannot find source code for runtime library file \''object.d\''\n       dmd
    might not be correctly installed. Run \''dmd -man\'' for installation instructions.\nimport
    path[0] = /tmp\nFailed: ["dmd", "-unittest", "-v", "-o-", "/tmp/tmplqx_kwdq.d",
    "-I/tmp"]\n'''
  stdout: b''
  timestamp: 1659793719
- exit_code: 1
  program: "import std.typecons;\nimport std.math;\n/*\nThis function takes two positive\
    \ numbers x and y and returns the\n    biggest even integer number that is in\
    \ the range [x, y] inclusive. If \n    there's no such number, then the function\
    \ should return -1.\n\n    For example:\n    >>> choose_num(12L, 15L)\n    14L\n\
    \    >>> choose_num(13L, 12L)\n    -1L\n    \n*/\nlong choose_num(long x, long\
    \ y) \n{\n    long result = -1;\n    if (x % 2 == 0)\n    {\n        result =\
    \ x;\n    }\n    else\n    {\n        result = x + 1;\n    }\n    if (result >\
    \ y)\n    {\n        result = -1;\n    }\n    return result;\n}\nunittest\n{\n\
    \    alias candidate = choose_num;\n\n    assert(candidate(12L, 15L) == 14L);\n\
    \    assert(candidate(13L, 12L) == -1L);\n    assert(candidate(33L, 12354L) ==\
    \ 12354L);\n    assert(candidate(5234L, 5233L) == -1L);\n    assert(candidate(6L,\
    \ 29L) == 28L);\n    assert(candidate(27L, 10L) == -1L);\n    assert(candidate(7L,\
    \ 7L) == -1L);\n    assert(candidate(546L, 546L) == 546L);\n}\nvoid main(){}"
  status: Exception
  stderr: 'b''core.exception.AssertError@/tmp/tmpigxyzbx6.d(36): unittest failure\n----------------\n??:?
    _d_unittestp [0x427e1d]\n??:? void tmpigxyzbx6.__unittest_L32_C1() [0x427a79]\n??:?
    void tmpigxyzbx6.__modtest() [0x427ba0]\n??:? int core.runtime.runModuleUnitTests().__foreachbody2(object.ModuleInfo*)
    [0x42bb43]\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)).__lambda2(immutable(object.ModuleInfo*))
    [0x42a9d6]\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))).__foreachbody2(ref
    rt.sections_elf_shared.DSO) [0x42fb69]\n??:? int rt.sections_elf_shared.DSO.opApply(scope
    int delegate(ref rt.sections_elf_shared.DSO)) [0x430018]\n??:? int rt.minfo.moduleinfos_apply(scope
    int delegate(immutable(object.ModuleInfo*))) [0x42faf5]\n??:? int object.ModuleInfo.opApply(scope
    int delegate(object.ModuleInfo*)) [0x42a9ad]\n??:? runModuleUnitTests [0x42b919]\n??:?
    void rt.dmain2._d_run_main(int, char**, extern (C) int function(char[][])*).runAll()
    [0x42826c]\n??:? void rt.dmain2._d_run_main(int, char**, extern (C) int function(char[][])*).tryExec(scope
    void delegate()) [0x4281f3]\n??:? _d_run_main [0x42815e]\n??:? main [0x427bb3]\n??:?
    __libc_start_main [0x528cc554]\n1/1 unittests FAILED\n'''
  stdout: b''
- exit_code: 1
  program: "import std.typecons;\nimport std.math;\n/*\nThis function takes two positive\
    \ numbers x and y and returns the\n    biggest even integer number that is in\
    \ the range [x, y] inclusive. If \n    there's no such number, then the function\
    \ should return -1.\n\n    For example:\n    >>> choose_num(12L, 15L)\n    14L\n\
    \    >>> choose_num(13L, 12L)\n    -1L\n    \n*/\nlong choose_num(long x, long\
    \ y) \n{\n    long result = -1;\n    if (x % 2 == 0)\n    {\n        result =\
    \ x;\n    }\n    else\n    {\n        result = x + 1;\n    }\n    if (result >\
    \ y)\n    {\n        result = -1;\n    }\n    return result;\n}\nunittest\n{\n\
    \    alias candidate = choose_num;\n\n    assert(candidate(12L, 15L) == 14L);\n\
    \    assert(candidate(13L, 12L) == -1L);\n    assert(candidate(33L, 12354L) ==\
    \ 12354L);\n    assert(candidate(5234L, 5233L) == -1L);\n    assert(candidate(6L,\
    \ 29L) == 28L);\n    assert(candidate(27L, 10L) == -1L);\n    assert(candidate(7L,\
    \ 7L) == -1L);\n    assert(candidate(546L, 546L) == 546L);\n}\nvoid main(){}"
  status: Exception
  stderr: 'b''core.exception.AssertError@/tmp/tmpigxyzbx6.d(36): unittest failure\n----------------\n??:?
    _d_unittestp [0x427e1d]\n??:? void tmpigxyzbx6.__unittest_L32_C1() [0x427a79]\n??:?
    void tmpigxyzbx6.__modtest() [0x427ba0]\n??:? int core.runtime.runModuleUnitTests().__foreachbody2(object.ModuleInfo*)
    [0x42bb43]\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)).__lambda2(immutable(object.ModuleInfo*))
    [0x42a9d6]\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))).__foreachbody2(ref
    rt.sections_elf_shared.DSO) [0x42fb69]\n??:? int rt.sections_elf_shared.DSO.opApply(scope
    int delegate(ref rt.sections_elf_shared.DSO)) [0x430018]\n??:? int rt.minfo.moduleinfos_apply(scope
    int delegate(immutable(object.ModuleInfo*))) [0x42faf5]\n??:? int object.ModuleInfo.opApply(scope
    int delegate(object.ModuleInfo*)) [0x42a9ad]\n??:? runModuleUnitTests [0x42b919]\n??:?
    void rt.dmain2._d_run_main(int, char**, extern (C) int function(char[][])*).runAll()
    [0x42826c]\n??:? void rt.dmain2._d_run_main(int, char**, extern (C) int function(char[][])*).tryExec(scope
    void delegate()) [0x4281f3]\n??:? _d_run_main [0x42815e]\n??:? main [0x427bb3]\n??:?
    __libc_start_main [0x528cc554]\n1/1 unittests FAILED\n'''
  stdout: b''
- exit_code: 1
  program: "import std.typecons;\nimport std.math;\n/*\nThis function takes two positive\
    \ numbers x and y and returns the\n    biggest even integer number that is in\
    \ the range [x, y] inclusive. If \n    there's no such number, then the function\
    \ should return -1.\n\n    For example:\n    >>> choose_num(12L, 15L)\n    14L\n\
    \    >>> choose_num(13L, 12L)\n    -1L\n    \n*/\nlong choose_num(long x, long\
    \ y) \n{\n    long result = -1;\n    if (x > y) \n    {\n        return result;\n\
    \    }\n    else \n    {\n        for (long i = y; i >= x; i--) \n        {\n\
    \            if (i % 2 == 0) \n            {\n                result = i;\n  \
    \              break;\n            }\n        }\n    }\n    return result;\n}\n\
    unittest\n{\n    alias candidate = choose_num;\n\n    assert(candidate(12L, 15L)\
    \ == 14L);\n    assert(candidate(13L, 12L) == -1L);\n    assert(candidate(33L,\
    \ 12354L) == 12354L);\n    assert(candidate(5234L, 5233L) == -1L);\n    assert(candidate(6L,\
    \ 29L) == 28L);\n    assert(candidate(27L, 10L) == -1L);\n    assert(candidate(7L,\
    \ 7L) == -1L);\n    assert(candidate(546L, 546L) == 546L);\n}\nvoid main(){}"
  status: SyntaxError
  stderr: 'b''Error: cannot find source code for runtime library file \''object.d\''\n       dmd
    might not be correctly installed. Run \''dmd -man\'' for installation instructions.\nimport
    path[0] = /tmp\nFailed: ["dmd", "-unittest", "-v", "-o-", "/tmp/tmp_dlobsbf.d",
    "-I/tmp"]\n'''
  stdout: b''
  timestamp: 1659793719
- exit_code: 1
  program: "import std.typecons;\nimport std.math;\n/*\nThis function takes two positive\
    \ numbers x and y and returns the\n    biggest even integer number that is in\
    \ the range [x, y] inclusive. If \n    there's no such number, then the function\
    \ should return -1.\n\n    For example:\n    >>> choose_num(12L, 15L)\n    14L\n\
    \    >>> choose_num(13L, 12L)\n    -1L\n    \n*/\nlong choose_num(long x, long\
    \ y) \n{\n    // YOUR CODE HERE\n    long result = -1;\n    if (x > y)\n     \
    \   return result;\n    else\n    {\n        for (long i = x; i <= y; i++)\n \
    \       {\n            if (i % 2 == 0)\n                result = i;\n        }\n\
    \    }\n    return result;\n}\nunittest\n{\n    alias candidate = choose_num;\n\
    \n    assert(candidate(12L, 15L) == 14L);\n    assert(candidate(13L, 12L) == -1L);\n\
    \    assert(candidate(33L, 12354L) == 12354L);\n    assert(candidate(5234L, 5233L)\
    \ == -1L);\n    assert(candidate(6L, 29L) == 28L);\n    assert(candidate(27L,\
    \ 10L) == -1L);\n    assert(candidate(7L, 7L) == -1L);\n    assert(candidate(546L,\
    \ 546L) == 546L);\n}\nvoid main(){}"
  status: SyntaxError
  stderr: 'b''Error: cannot find source code for runtime library file \''object.d\''\n       dmd
    might not be correctly installed. Run \''dmd -man\'' for installation instructions.\nimport
    path[0] = /tmp\nFailed: ["dmd", "-unittest", "-v", "-o-", "/tmp/tmpboyrzyiu.d",
    "-I/tmp"]\n'''
  stdout: b''
  timestamp: 1659793719
- exit_code: 1
  program: "import std.typecons;\nimport std.math;\n/*\nThis function takes two positive\
    \ numbers x and y and returns the\n    biggest even integer number that is in\
    \ the range [x, y] inclusive. If \n    there's no such number, then the function\
    \ should return -1.\n\n    For example:\n    >>> choose_num(12L, 15L)\n    14L\n\
    \    >>> choose_num(13L, 12L)\n    -1L\n    \n*/\nlong choose_num(long x, long\
    \ y) \n{\n    long result = -1;\n    if (x % 2 == 0)\n    {\n        result =\
    \ x;\n    }\n    else\n    {\n        result = x + 1;\n    }\n    if (result >\
    \ y)\n    {\n        result = -1;\n    }\n    return result;\n}\nunittest\n{\n\
    \    alias candidate = choose_num;\n\n    assert(candidate(12L, 15L) == 14L);\n\
    \    assert(candidate(13L, 12L) == -1L);\n    assert(candidate(33L, 12354L) ==\
    \ 12354L);\n    assert(candidate(5234L, 5233L) == -1L);\n    assert(candidate(6L,\
    \ 29L) == 28L);\n    assert(candidate(27L, 10L) == -1L);\n    assert(candidate(7L,\
    \ 7L) == -1L);\n    assert(candidate(546L, 546L) == 546L);\n}\nvoid main(){}"
  status: Exception
  stderr: 'b''core.exception.AssertError@/tmp/tmpigxyzbx6.d(36): unittest failure\n----------------\n??:?
    _d_unittestp [0x427e1d]\n??:? void tmpigxyzbx6.__unittest_L32_C1() [0x427a79]\n??:?
    void tmpigxyzbx6.__modtest() [0x427ba0]\n??:? int core.runtime.runModuleUnitTests().__foreachbody2(object.ModuleInfo*)
    [0x42bb43]\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)).__lambda2(immutable(object.ModuleInfo*))
    [0x42a9d6]\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))).__foreachbody2(ref
    rt.sections_elf_shared.DSO) [0x42fb69]\n??:? int rt.sections_elf_shared.DSO.opApply(scope
    int delegate(ref rt.sections_elf_shared.DSO)) [0x430018]\n??:? int rt.minfo.moduleinfos_apply(scope
    int delegate(immutable(object.ModuleInfo*))) [0x42faf5]\n??:? int object.ModuleInfo.opApply(scope
    int delegate(object.ModuleInfo*)) [0x42a9ad]\n??:? runModuleUnitTests [0x42b919]\n??:?
    void rt.dmain2._d_run_main(int, char**, extern (C) int function(char[][])*).runAll()
    [0x42826c]\n??:? void rt.dmain2._d_run_main(int, char**, extern (C) int function(char[][])*).tryExec(scope
    void delegate()) [0x4281f3]\n??:? _d_run_main [0x42815e]\n??:? main [0x427bb3]\n??:?
    __libc_start_main [0x528cc554]\n1/1 unittests FAILED\n'''
  stdout: b''
- exit_code: 1
  program: "import std.typecons;\nimport std.math;\n/*\nThis function takes two positive\
    \ numbers x and y and returns the\n    biggest even integer number that is in\
    \ the range [x, y] inclusive. If \n    there's no such number, then the function\
    \ should return -1.\n\n    For example:\n    >>> choose_num(12L, 15L)\n    14L\n\
    \    >>> choose_num(13L, 12L)\n    -1L\n    \n*/\nlong choose_num(long x, long\
    \ y) \n{\n    long result = -1;\n    if (x % 2 == 0)\n    {\n        result =\
    \ x;\n    }\n    else\n    {\n        result = x + 1;\n    }\n    if (result >\
    \ y)\n    {\n        result = -1;\n    }\n    return result;\n}\nunittest\n{\n\
    \    alias candidate = choose_num;\n\n    assert(candidate(12L, 15L) == 14L);\n\
    \    assert(candidate(13L, 12L) == -1L);\n    assert(candidate(33L, 12354L) ==\
    \ 12354L);\n    assert(candidate(5234L, 5233L) == -1L);\n    assert(candidate(6L,\
    \ 29L) == 28L);\n    assert(candidate(27L, 10L) == -1L);\n    assert(candidate(7L,\
    \ 7L) == -1L);\n    assert(candidate(546L, 546L) == 546L);\n}\nvoid main(){}"
  status: Exception
  stderr: 'b''core.exception.AssertError@/tmp/tmpigxyzbx6.d(36): unittest failure\n----------------\n??:?
    _d_unittestp [0x427e1d]\n??:? void tmpigxyzbx6.__unittest_L32_C1() [0x427a79]\n??:?
    void tmpigxyzbx6.__modtest() [0x427ba0]\n??:? int core.runtime.runModuleUnitTests().__foreachbody2(object.ModuleInfo*)
    [0x42bb43]\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)).__lambda2(immutable(object.ModuleInfo*))
    [0x42a9d6]\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))).__foreachbody2(ref
    rt.sections_elf_shared.DSO) [0x42fb69]\n??:? int rt.sections_elf_shared.DSO.opApply(scope
    int delegate(ref rt.sections_elf_shared.DSO)) [0x430018]\n??:? int rt.minfo.moduleinfos_apply(scope
    int delegate(immutable(object.ModuleInfo*))) [0x42faf5]\n??:? int object.ModuleInfo.opApply(scope
    int delegate(object.ModuleInfo*)) [0x42a9ad]\n??:? runModuleUnitTests [0x42b919]\n??:?
    void rt.dmain2._d_run_main(int, char**, extern (C) int function(char[][])*).runAll()
    [0x42826c]\n??:? void rt.dmain2._d_run_main(int, char**, extern (C) int function(char[][])*).tryExec(scope
    void delegate()) [0x4281f3]\n??:? _d_run_main [0x42815e]\n??:? main [0x427bb3]\n??:?
    __libc_start_main [0x528cc554]\n1/1 unittests FAILED\n'''
  stdout: b''
- exit_code: 1
  program: "import std.typecons;\nimport std.math;\n/*\nThis function takes two positive\
    \ numbers x and y and returns the\n    biggest even integer number that is in\
    \ the range [x, y] inclusive. If \n    there's no such number, then the function\
    \ should return -1.\n\n    For example:\n    >>> choose_num(12L, 15L)\n    14L\n\
    \    >>> choose_num(13L, 12L)\n    -1L\n    \n*/\nlong choose_num(long x, long\
    \ y) \n{\n    long result = -1;\n    if (x > y)\n    {\n        return result;\n\
    \    }\n    else\n    {\n        foreach (i; x..y+1)\n        {\n            if\
    \ (i % 2 == 0)\n            {\n                result = i;\n            }\n  \
    \      }\n    }\n    return result;\n}\nunittest\n{\n    alias candidate = choose_num;\n\
    \n    assert(candidate(12L, 15L) == 14L);\n    assert(candidate(13L, 12L) == -1L);\n\
    \    assert(candidate(33L, 12354L) == 12354L);\n    assert(candidate(5234L, 5233L)\
    \ == -1L);\n    assert(candidate(6L, 29L) == 28L);\n    assert(candidate(27L,\
    \ 10L) == -1L);\n    assert(candidate(7L, 7L) == -1L);\n    assert(candidate(546L,\
    \ 546L) == 546L);\n}\nvoid main(){}"
  status: SyntaxError
  stderr: 'b''Error: cannot find source code for runtime library file \''object.d\''\n       dmd
    might not be correctly installed. Run \''dmd -man\'' for installation instructions.\nimport
    path[0] = /tmp\nFailed: ["dmd", "-unittest", "-v", "-o-", "/tmp/tmpxdidlq1k.d",
    "-I/tmp"]\n'''
  stdout: b''
  timestamp: 1659793719
- exit_code: 1
  program: "import std.typecons;\nimport std.math;\n/*\nThis function takes two positive\
    \ numbers x and y and returns the\n    biggest even integer number that is in\
    \ the range [x, y] inclusive. If \n    there's no such number, then the function\
    \ should return -1.\n\n    For example:\n    >>> choose_num(12L, 15L)\n    14L\n\
    \    >>> choose_num(13L, 12L)\n    -1L\n    \n*/\nlong choose_num(long x, long\
    \ y) \n{\n    if (x > y)\n        return -1;\n    else if (x % 2 == 0)\n     \
    \   return x;\n    else if (y % 2 == 0)\n        return y;\n    else\n       \
    \ return -1;\n}\nunittest\n{\n    alias candidate = choose_num;\n\n    assert(candidate(12L,\
    \ 15L) == 14L);\n    assert(candidate(13L, 12L) == -1L);\n    assert(candidate(33L,\
    \ 12354L) == 12354L);\n    assert(candidate(5234L, 5233L) == -1L);\n    assert(candidate(6L,\
    \ 29L) == 28L);\n    assert(candidate(27L, 10L) == -1L);\n    assert(candidate(7L,\
    \ 7L) == -1L);\n    assert(candidate(546L, 546L) == 546L);\n}\nvoid main(){}"
  status: SyntaxError
  stderr: 'b''Error: cannot find source code for runtime library file \''object.d\''\n       dmd
    might not be correctly installed. Run \''dmd -man\'' for installation instructions.\nimport
    path[0] = /tmp\nFailed: ["dmd", "-unittest", "-v", "-o-", "/tmp/tmpvkxyrgbj.d",
    "-I/tmp"]\n'''
  stdout: b''
  timestamp: 1659793719
- exit_code: 1
  program: "import std.typecons;\nimport std.math;\n/*\nThis function takes two positive\
    \ numbers x and y and returns the\n    biggest even integer number that is in\
    \ the range [x, y] inclusive. If \n    there's no such number, then the function\
    \ should return -1.\n\n    For example:\n    >>> choose_num(12L, 15L)\n    14L\n\
    \    >>> choose_num(13L, 12L)\n    -1L\n    \n*/\nlong choose_num(long x, long\
    \ y) \n{\n    long result = -1;\n    if (x % 2 == 0)\n    {\n        result =\
    \ x;\n    }\n    else\n    {\n        x++;\n    }\n    if (x > y)\n    {\n   \
    \     return -1;\n    }\n    return x;\n}\nunittest\n{\n    alias candidate =\
    \ choose_num;\n\n    assert(candidate(12L, 15L) == 14L);\n    assert(candidate(13L,\
    \ 12L) == -1L);\n    assert(candidate(33L, 12354L) == 12354L);\n    assert(candidate(5234L,\
    \ 5233L) == -1L);\n    assert(candidate(6L, 29L) == 28L);\n    assert(candidate(27L,\
    \ 10L) == -1L);\n    assert(candidate(7L, 7L) == -1L);\n    assert(candidate(546L,\
    \ 546L) == 546L);\n}\nvoid main(){}"
  status: SyntaxError
  stderr: 'b''Error: cannot find source code for runtime library file \''object.d\''\n       dmd
    might not be correctly installed. Run \''dmd -man\'' for installation instructions.\nimport
    path[0] = /tmp\nFailed: ["dmd", "-unittest", "-v", "-o-", "/tmp/tmpcb3cxzbk.d",
    "-I/tmp"]\n'''
  stdout: b''
  timestamp: 1659793719
- exit_code: 1
  program: "import std.typecons;\nimport std.math;\n/*\nThis function takes two positive\
    \ numbers x and y and returns the\n    biggest even integer number that is in\
    \ the range [x, y] inclusive. If \n    there's no such number, then the function\
    \ should return -1.\n\n    For example:\n    >>> choose_num(12L, 15L)\n    14L\n\
    \    >>> choose_num(13L, 12L)\n    -1L\n    \n*/\nlong choose_num(long x, long\
    \ y) \n{\n    long result = -1;\n    if (x % 2 == 0)\n    {\n        result =\
    \ x;\n    }\n    else\n    {\n        result = x + 1;\n    }\n    if (result >\
    \ y)\n    {\n        result = -1;\n    }\n    return result;\n}\nunittest\n{\n\
    \    alias candidate = choose_num;\n\n    assert(candidate(12L, 15L) == 14L);\n\
    \    assert(candidate(13L, 12L) == -1L);\n    assert(candidate(33L, 12354L) ==\
    \ 12354L);\n    assert(candidate(5234L, 5233L) == -1L);\n    assert(candidate(6L,\
    \ 29L) == 28L);\n    assert(candidate(27L, 10L) == -1L);\n    assert(candidate(7L,\
    \ 7L) == -1L);\n    assert(candidate(546L, 546L) == 546L);\n}\nvoid main(){}"
  status: Exception
  stderr: 'b''core.exception.AssertError@/tmp/tmpigxyzbx6.d(36): unittest failure\n----------------\n??:?
    _d_unittestp [0x427e1d]\n??:? void tmpigxyzbx6.__unittest_L32_C1() [0x427a79]\n??:?
    void tmpigxyzbx6.__modtest() [0x427ba0]\n??:? int core.runtime.runModuleUnitTests().__foreachbody2(object.ModuleInfo*)
    [0x42bb43]\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)).__lambda2(immutable(object.ModuleInfo*))
    [0x42a9d6]\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))).__foreachbody2(ref
    rt.sections_elf_shared.DSO) [0x42fb69]\n??:? int rt.sections_elf_shared.DSO.opApply(scope
    int delegate(ref rt.sections_elf_shared.DSO)) [0x430018]\n??:? int rt.minfo.moduleinfos_apply(scope
    int delegate(immutable(object.ModuleInfo*))) [0x42faf5]\n??:? int object.ModuleInfo.opApply(scope
    int delegate(object.ModuleInfo*)) [0x42a9ad]\n??:? runModuleUnitTests [0x42b919]\n??:?
    void rt.dmain2._d_run_main(int, char**, extern (C) int function(char[][])*).runAll()
    [0x42826c]\n??:? void rt.dmain2._d_run_main(int, char**, extern (C) int function(char[][])*).tryExec(scope
    void delegate()) [0x4281f3]\n??:? _d_run_main [0x42815e]\n??:? main [0x427bb3]\n??:?
    __libc_start_main [0x528cc554]\n1/1 unittests FAILED\n'''
  stdout: b''
- exit_code: 1
  program: "import std.typecons;\nimport std.math;\n/*\nThis function takes two positive\
    \ numbers x and y and returns the\n    biggest even integer number that is in\
    \ the range [x, y] inclusive. If \n    there's no such number, then the function\
    \ should return -1.\n\n    For example:\n    >>> choose_num(12L, 15L)\n    14L\n\
    \    >>> choose_num(13L, 12L)\n    -1L\n    \n*/\nlong choose_num(long x, long\
    \ y) \n{\n    long result = -1;\n    if (x > y)\n    {\n        return result;\n\
    \    }\n    else\n    {\n        if (x % 2 == 0)\n        {\n            result\
    \ = x;\n        }\n        else\n        {\n            result = x + 1;\n    \
    \    }\n    }\n    return result;\n}\nunittest\n{\n    alias candidate = choose_num;\n\
    \n    assert(candidate(12L, 15L) == 14L);\n    assert(candidate(13L, 12L) == -1L);\n\
    \    assert(candidate(33L, 12354L) == 12354L);\n    assert(candidate(5234L, 5233L)\
    \ == -1L);\n    assert(candidate(6L, 29L) == 28L);\n    assert(candidate(27L,\
    \ 10L) == -1L);\n    assert(candidate(7L, 7L) == -1L);\n    assert(candidate(546L,\
    \ 546L) == 546L);\n}\nvoid main(){}"
  status: SyntaxError
  stderr: 'b''Error: cannot find source code for runtime library file \''object.d\''\n       dmd
    might not be correctly installed. Run \''dmd -man\'' for installation instructions.\nimport
    path[0] = /tmp\nFailed: ["dmd", "-unittest", "-v", "-o-", "/tmp/tmpuzb9cnav.d",
    "-I/tmp"]\n'''
  stdout: b''
  timestamp: 1659793719
- exit_code: 1
  program: "import std.typecons;\nimport std.math;\n/*\nThis function takes two positive\
    \ numbers x and y and returns the\n    biggest even integer number that is in\
    \ the range [x, y] inclusive. If \n    there's no such number, then the function\
    \ should return -1.\n\n    For example:\n    >>> choose_num(12L, 15L)\n    14L\n\
    \    >>> choose_num(13L, 12L)\n    -1L\n    \n*/\nlong choose_num(long x, long\
    \ y) \n{\n    long result = -1;\n    if (x < y)\n    {\n        if (x % 2 == 0)\n\
    \        {\n            result = x;\n        }\n        else\n        {\n    \
    \        result = x + 1;\n        }\n    }\n    else if (x > y)\n    {\n     \
    \   if (y % 2 == 0)\n        {\n            result = y;\n        }\n        else\n\
    \        {\n            result = y + 1;\n        }\n    }\n    else\n    {\n \
    \       if (x % 2 == 0)\n        {\n            result = x;\n        }\n    }\n\
    \    return result;\n}\nunittest\n{\n    alias candidate = choose_num;\n\n   \
    \ assert(candidate(12L, 15L) == 14L);\n    assert(candidate(13L, 12L) == -1L);\n\
    \    assert(candidate(33L, 12354L) == 12354L);\n    assert(candidate(5234L, 5233L)\
    \ == -1L);\n    assert(candidate(6L, 29L) == 28L);\n    assert(candidate(27L,\
    \ 10L) == -1L);\n    assert(candidate(7L, 7L) == -1L);\n    assert(candidate(546L,\
    \ 546L) == 546L);\n}\nvoid main(){}"
  status: SyntaxError
  stderr: 'b''Error: cannot find source code for runtime library file \''object.d\''\n       dmd
    might not be correctly installed. Run \''dmd -man\'' for installation instructions.\nimport
    path[0] = /tmp\nFailed: ["dmd", "-unittest", "-v", "-o-", "/tmp/tmprmvrkubs.d",
    "-I/tmp"]\n'''
  stdout: b''
  timestamp: 1659793719
- exit_code: 1
  program: "import std.typecons;\nimport std.math;\n/*\nThis function takes two positive\
    \ numbers x and y and returns the\n    biggest even integer number that is in\
    \ the range [x, y] inclusive. If \n    there's no such number, then the function\
    \ should return -1.\n\n    For example:\n    >>> choose_num(12L, 15L)\n    14L\n\
    \    >>> choose_num(13L, 12L)\n    -1L\n    \n*/\nlong choose_num(long x, long\
    \ y) \n{\n    if (x > y)\n    {\n        return -1L;\n    }\n    else\n    {\n\
    \        long z = x;\n        while (z <= y)\n        {\n            if (z % 2\
    \ == 0)\n            {\n                return z;\n            }\n           \
    \ z++;\n        }\n        return -1L;\n    }\n}\nunittest\n{\n    alias candidate\
    \ = choose_num;\n\n    assert(candidate(12L, 15L) == 14L);\n    assert(candidate(13L,\
    \ 12L) == -1L);\n    assert(candidate(33L, 12354L) == 12354L);\n    assert(candidate(5234L,\
    \ 5233L) == -1L);\n    assert(candidate(6L, 29L) == 28L);\n    assert(candidate(27L,\
    \ 10L) == -1L);\n    assert(candidate(7L, 7L) == -1L);\n    assert(candidate(546L,\
    \ 546L) == 546L);\n}\nvoid main(){}"
  status: SyntaxError
  stderr: 'b''Error: cannot find source code for runtime library file \''object.d\''\n       dmd
    might not be correctly installed. Run \''dmd -man\'' for installation instructions.\nimport
    path[0] = /tmp\nFailed: ["dmd", "-unittest", "-v", "-o-", "/tmp/tmp0o3uq622.d",
    "-I/tmp"]\n'''
  stdout: b''
  timestamp: 1659793719
- exit_code: 1
  program: "import std.typecons;\nimport std.math;\n/*\nThis function takes two positive\
    \ numbers x and y and returns the\n    biggest even integer number that is in\
    \ the range [x, y] inclusive. If \n    there's no such number, then the function\
    \ should return -1.\n\n    For example:\n    >>> choose_num(12L, 15L)\n    14L\n\
    \    >>> choose_num(13L, 12L)\n    -1L\n    \n*/\nlong choose_num(long x, long\
    \ y) \n{\n    if(x > y)\n    {\n        return -1L;\n    }\n    else\n    {\n\
    \        long z = x;\n        while(z <= y)\n        {\n            if(z % 2 ==\
    \ 0)\n            {\n                return z;\n            }\n            else\n\
    \            {\n                z++;\n            }\n        }\n        return\
    \ -1L;\n    }\n}\nunittest\n{\n    alias candidate = choose_num;\n\n    assert(candidate(12L,\
    \ 15L) == 14L);\n    assert(candidate(13L, 12L) == -1L);\n    assert(candidate(33L,\
    \ 12354L) == 12354L);\n    assert(candidate(5234L, 5233L) == -1L);\n    assert(candidate(6L,\
    \ 29L) == 28L);\n    assert(candidate(27L, 10L) == -1L);\n    assert(candidate(7L,\
    \ 7L) == -1L);\n    assert(candidate(546L, 546L) == 546L);\n}\nvoid main(){}"
  status: SyntaxError
  stderr: 'b''Error: cannot find source code for runtime library file \''object.d\''\n       dmd
    might not be correctly installed. Run \''dmd -man\'' for installation instructions.\nimport
    path[0] = /tmp\nFailed: ["dmd", "-unittest", "-v", "-o-", "/tmp/tmpjiat6mn8.d",
    "-I/tmp"]\n'''
  stdout: b''
  timestamp: 1659793719
- exit_code: 1
  program: "import std.typecons;\nimport std.math;\n/*\nThis function takes two positive\
    \ numbers x and y and returns the\n    biggest even integer number that is in\
    \ the range [x, y] inclusive. If \n    there's no such number, then the function\
    \ should return -1.\n\n    For example:\n    >>> choose_num(12L, 15L)\n    14L\n\
    \    >>> choose_num(13L, 12L)\n    -1L\n    \n*/\nlong choose_num(long x, long\
    \ y) \n{\n    if (x > y)\n        return -1;\n    else if (x % 2 == 0)\n     \
    \   return x;\n    else\n        return choose_num(x + 1, y);\n}\n/*\nThis function\
    \ takes a positive number x and returns the biggest\n    integer number that is\
    \ in the range [1, x] inclusive and is a power of 2.\n    If there's no such number,\
    \ then the function should return -1.\nunittest\n{\n    alias candidate = choose_num;\n\
    \n    assert(candidate(12L, 15L) == 14L);\n    assert(candidate(13L, 12L) == -1L);\n\
    \    assert(candidate(33L, 12354L) == 12354L);\n    assert(candidate(5234L, 5233L)\
    \ == -1L);\n    assert(candidate(6L, 29L) == 28L);\n    assert(candidate(27L,\
    \ 10L) == -1L);\n    assert(candidate(7L, 7L) == -1L);\n    assert(candidate(546L,\
    \ 546L) == 546L);\n}\nvoid main(){}"
  status: SyntaxError
  stderr: 'b''/tmp/tmptbr3c_qn.d(24): Error: unterminated /* */ comment\nFailed: ["dmd",
    "-unittest", "-v", "-o-", "/tmp/tmptbr3c_qn.d", "-I/tmp"]\n'''
  stdout: b''
  timestamp: 1659793719
- exit_code: 1
  program: "import std.typecons;\nimport std.math;\n/*\nThis function takes two positive\
    \ numbers x and y and returns the\n    biggest even integer number that is in\
    \ the range [x, y] inclusive. If \n    there's no such number, then the function\
    \ should return -1.\n\n    For example:\n    >>> choose_num(12L, 15L)\n    14L\n\
    \    >>> choose_num(13L, 12L)\n    -1L\n    \n*/\nlong choose_num(long x, long\
    \ y) \n{\n    long result = -1;\n    if (x > y)\n    {\n        return result;\n\
    \    }\n    else if (x == y)\n    {\n        if (x % 2 == 0)\n        {\n    \
    \        return x;\n        }\n        else\n        {\n            return result;\n\
    \        }\n    }\n    else\n    {\n        long mid = (x + y) / 2;\n        if\
    \ (mid % 2 == 0)\n        {\n            return mid;\n        }\n        else\n\
    \        {\n            return choose_num(x, mid - 1);\n        }\n    }\n}\n\
    unittest\n{\n    alias candidate = choose_num;\n\n    assert(candidate(12L, 15L)\
    \ == 14L);\n    assert(candidate(13L, 12L) == -1L);\n    assert(candidate(33L,\
    \ 12354L) == 12354L);\n    assert(candidate(5234L, 5233L) == -1L);\n    assert(candidate(6L,\
    \ 29L) == 28L);\n    assert(candidate(27L, 10L) == -1L);\n    assert(candidate(7L,\
    \ 7L) == -1L);\n    assert(candidate(546L, 546L) == 546L);\n}\nvoid main(){}"
  status: SyntaxError
  stderr: 'b''Error: cannot find source code for runtime library file \''object.d\''\n       dmd
    might not be correctly installed. Run \''dmd -man\'' for installation instructions.\nimport
    path[0] = /tmp\nFailed: ["dmd", "-unittest", "-v", "-o-", "/tmp/tmp202zjj1z.d",
    "-I/tmp"]\n'''
  stdout: b''
  timestamp: 1659793719
- exit_code: 1
  program: "import std.typecons;\nimport std.math;\n/*\nThis function takes two positive\
    \ numbers x and y and returns the\n    biggest even integer number that is in\
    \ the range [x, y] inclusive. If \n    there's no such number, then the function\
    \ should return -1.\n\n    For example:\n    >>> choose_num(12L, 15L)\n    14L\n\
    \    >>> choose_num(13L, 12L)\n    -1L\n    \n*/\nlong choose_num(long x, long\
    \ y) \n{\n    long result = -1;\n    if (x % 2 == 0) {\n        result = x;\n\
    \    }\n    else {\n        x++;\n    }\n    if (x > y) {\n        return -1;\n\
    \    }\n    return x;\n}\nunittest\n{\n    alias candidate = choose_num;\n\n \
    \   assert(candidate(12L, 15L) == 14L);\n    assert(candidate(13L, 12L) == -1L);\n\
    \    assert(candidate(33L, 12354L) == 12354L);\n    assert(candidate(5234L, 5233L)\
    \ == -1L);\n    assert(candidate(6L, 29L) == 28L);\n    assert(candidate(27L,\
    \ 10L) == -1L);\n    assert(candidate(7L, 7L) == -1L);\n    assert(candidate(546L,\
    \ 546L) == 546L);\n}\nvoid main(){}"
  status: SyntaxError
  stderr: 'b''Error: cannot find source code for runtime library file \''object.d\''\n       dmd
    might not be correctly installed. Run \''dmd -man\'' for installation instructions.\nimport
    path[0] = /tmp\nFailed: ["dmd", "-unittest", "-v", "-o-", "/tmp/tmpmpr_5kt9.d",
    "-I/tmp"]\n'''
  stdout: b''
  timestamp: 1659793719
- exit_code: 1
  program: "import std.typecons;\nimport std.math;\n/*\nThis function takes two positive\
    \ numbers x and y and returns the\n    biggest even integer number that is in\
    \ the range [x, y] inclusive. If \n    there's no such number, then the function\
    \ should return -1.\n\n    For example:\n    >>> choose_num(12L, 15L)\n    14L\n\
    \    >>> choose_num(13L, 12L)\n    -1L\n    \n*/\nlong choose_num(long x, long\
    \ y) \n{\n    long result = -1;\n    if (x % 2 == 0)\n    {\n        result =\
    \ x;\n    }\n    else\n    {\n        result = x + 1;\n    }\n    if (result >\
    \ y)\n    {\n        result = -1;\n    }\n    return result;\n}\nunittest\n{\n\
    \    alias candidate = choose_num;\n\n    assert(candidate(12L, 15L) == 14L);\n\
    \    assert(candidate(13L, 12L) == -1L);\n    assert(candidate(33L, 12354L) ==\
    \ 12354L);\n    assert(candidate(5234L, 5233L) == -1L);\n    assert(candidate(6L,\
    \ 29L) == 28L);\n    assert(candidate(27L, 10L) == -1L);\n    assert(candidate(7L,\
    \ 7L) == -1L);\n    assert(candidate(546L, 546L) == 546L);\n}\nvoid main(){}"
  status: Exception
  stderr: 'b''core.exception.AssertError@/tmp/tmpigxyzbx6.d(36): unittest failure\n----------------\n??:?
    _d_unittestp [0x427e1d]\n??:? void tmpigxyzbx6.__unittest_L32_C1() [0x427a79]\n??:?
    void tmpigxyzbx6.__modtest() [0x427ba0]\n??:? int core.runtime.runModuleUnitTests().__foreachbody2(object.ModuleInfo*)
    [0x42bb43]\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)).__lambda2(immutable(object.ModuleInfo*))
    [0x42a9d6]\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))).__foreachbody2(ref
    rt.sections_elf_shared.DSO) [0x42fb69]\n??:? int rt.sections_elf_shared.DSO.opApply(scope
    int delegate(ref rt.sections_elf_shared.DSO)) [0x430018]\n??:? int rt.minfo.moduleinfos_apply(scope
    int delegate(immutable(object.ModuleInfo*))) [0x42faf5]\n??:? int object.ModuleInfo.opApply(scope
    int delegate(object.ModuleInfo*)) [0x42a9ad]\n??:? runModuleUnitTests [0x42b919]\n??:?
    void rt.dmain2._d_run_main(int, char**, extern (C) int function(char[][])*).runAll()
    [0x42826c]\n??:? void rt.dmain2._d_run_main(int, char**, extern (C) int function(char[][])*).tryExec(scope
    void delegate()) [0x4281f3]\n??:? _d_run_main [0x42815e]\n??:? main [0x427bb3]\n??:?
    __libc_start_main [0x528cc554]\n1/1 unittests FAILED\n'''
  stdout: b''
- exit_code: 1
  program: "import std.typecons;\nimport std.math;\n/*\nThis function takes two positive\
    \ numbers x and y and returns the\n    biggest even integer number that is in\
    \ the range [x, y] inclusive. If \n    there's no such number, then the function\
    \ should return -1.\n\n    For example:\n    >>> choose_num(12L, 15L)\n    14L\n\
    \    >>> choose_num(13L, 12L)\n    -1L\n    \n*/\nlong choose_num(long x, long\
    \ y) \n{\n    if (x > y)\n        return -1;\n    if (x % 2 == 0)\n        return\
    \ x;\n    else\n        return x + 1;\n}\nunittest\n{\n    alias candidate = choose_num;\n\
    \n    assert(candidate(12L, 15L) == 14L);\n    assert(candidate(13L, 12L) == -1L);\n\
    \    assert(candidate(33L, 12354L) == 12354L);\n    assert(candidate(5234L, 5233L)\
    \ == -1L);\n    assert(candidate(6L, 29L) == 28L);\n    assert(candidate(27L,\
    \ 10L) == -1L);\n    assert(candidate(7L, 7L) == -1L);\n    assert(candidate(546L,\
    \ 546L) == 546L);\n}\nvoid main(){}"
  status: SyntaxError
  stderr: 'b''Error: cannot find source code for runtime library file \''object.d\''\n       dmd
    might not be correctly installed. Run \''dmd -man\'' for installation instructions.\nimport
    path[0] = /tmp\nFailed: ["dmd", "-unittest", "-v", "-o-", "/tmp/tmp_ue9tivs.d",
    "-I/tmp"]\n'''
  stdout: b''
  timestamp: 1659793719
- exit_code: 1
  program: "import std.typecons;\nimport std.math;\n/*\nThis function takes two positive\
    \ numbers x and y and returns the\n    biggest even integer number that is in\
    \ the range [x, y] inclusive. If \n    there's no such number, then the function\
    \ should return -1.\n\n    For example:\n    >>> choose_num(12L, 15L)\n    14L\n\
    \    >>> choose_num(13L, 12L)\n    -1L\n    \n*/\nlong choose_num(long x, long\
    \ y) \n{\n    long result = -1;\n    if (x > y)\n    {\n        return result;\n\
    \    }\n    else\n    {\n        if (x % 2 == 0)\n        {\n            result\
    \ = x;\n        }\n        else\n        {\n            result = x + 1;\n    \
    \    }\n    }\n    return result;\n}\nunittest\n{\n    alias candidate = choose_num;\n\
    \n    assert(candidate(12L, 15L) == 14L);\n    assert(candidate(13L, 12L) == -1L);\n\
    \    assert(candidate(33L, 12354L) == 12354L);\n    assert(candidate(5234L, 5233L)\
    \ == -1L);\n    assert(candidate(6L, 29L) == 28L);\n    assert(candidate(27L,\
    \ 10L) == -1L);\n    assert(candidate(7L, 7L) == -1L);\n    assert(candidate(546L,\
    \ 546L) == 546L);\n}\nvoid main(){}"
  status: SyntaxError
  stderr: 'b''Error: cannot find source code for runtime library file \''object.d\''\n       dmd
    might not be correctly installed. Run \''dmd -man\'' for installation instructions.\nimport
    path[0] = /tmp\nFailed: ["dmd", "-unittest", "-v", "-o-", "/tmp/tmpuzb9cnav.d",
    "-I/tmp"]\n'''
  stdout: b''
  timestamp: 1659793719
- exit_code: 1
  program: "import std.typecons;\nimport std.math;\n/*\nThis function takes two positive\
    \ numbers x and y and returns the\n    biggest even integer number that is in\
    \ the range [x, y] inclusive. If \n    there's no such number, then the function\
    \ should return -1.\n\n    For example:\n    >>> choose_num(12L, 15L)\n    14L\n\
    \    >>> choose_num(13L, 12L)\n    -1L\n    \n*/\nlong choose_num(long x, long\
    \ y) \n{\n    long result = -1;\n    if (x % 2 == 0)\n    {\n        result =\
    \ x;\n    }\n    else\n    {\n        result = x + 1;\n    }\n    if (result >\
    \ y)\n    {\n        result = -1;\n    }\n    return result;\n}\nunittest\n{\n\
    \    alias candidate = choose_num;\n\n    assert(candidate(12L, 15L) == 14L);\n\
    \    assert(candidate(13L, 12L) == -1L);\n    assert(candidate(33L, 12354L) ==\
    \ 12354L);\n    assert(candidate(5234L, 5233L) == -1L);\n    assert(candidate(6L,\
    \ 29L) == 28L);\n    assert(candidate(27L, 10L) == -1L);\n    assert(candidate(7L,\
    \ 7L) == -1L);\n    assert(candidate(546L, 546L) == 546L);\n}\nvoid main(){}"
  status: Exception
  stderr: 'b''core.exception.AssertError@/tmp/tmpigxyzbx6.d(36): unittest failure\n----------------\n??:?
    _d_unittestp [0x427e1d]\n??:? void tmpigxyzbx6.__unittest_L32_C1() [0x427a79]\n??:?
    void tmpigxyzbx6.__modtest() [0x427ba0]\n??:? int core.runtime.runModuleUnitTests().__foreachbody2(object.ModuleInfo*)
    [0x42bb43]\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)).__lambda2(immutable(object.ModuleInfo*))
    [0x42a9d6]\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))).__foreachbody2(ref
    rt.sections_elf_shared.DSO) [0x42fb69]\n??:? int rt.sections_elf_shared.DSO.opApply(scope
    int delegate(ref rt.sections_elf_shared.DSO)) [0x430018]\n??:? int rt.minfo.moduleinfos_apply(scope
    int delegate(immutable(object.ModuleInfo*))) [0x42faf5]\n??:? int object.ModuleInfo.opApply(scope
    int delegate(object.ModuleInfo*)) [0x42a9ad]\n??:? runModuleUnitTests [0x42b919]\n??:?
    void rt.dmain2._d_run_main(int, char**, extern (C) int function(char[][])*).runAll()
    [0x42826c]\n??:? void rt.dmain2._d_run_main(int, char**, extern (C) int function(char[][])*).tryExec(scope
    void delegate()) [0x4281f3]\n??:? _d_run_main [0x42815e]\n??:? main [0x427bb3]\n??:?
    __libc_start_main [0x528cc554]\n1/1 unittests FAILED\n'''
  stdout: b''
- exit_code: 1
  program: "import std.typecons;\nimport std.math;\n/*\nThis function takes two positive\
    \ numbers x and y and returns the\n    biggest even integer number that is in\
    \ the range [x, y] inclusive. If \n    there's no such number, then the function\
    \ should return -1.\n\n    For example:\n    >>> choose_num(12L, 15L)\n    14L\n\
    \    >>> choose_num(13L, 12L)\n    -1L\n    \n*/\nlong choose_num(long x, long\
    \ y) \n{\n    if (x > y) return -1;\n    if (x % 2 == 0) return x;\n    return\
    \ choose_num(x + 1, y);\n}\nunittest\n{\n    alias candidate = choose_num;\n\n\
    \    assert(candidate(12L, 15L) == 14L);\n    assert(candidate(13L, 12L) == -1L);\n\
    \    assert(candidate(33L, 12354L) == 12354L);\n    assert(candidate(5234L, 5233L)\
    \ == -1L);\n    assert(candidate(6L, 29L) == 28L);\n    assert(candidate(27L,\
    \ 10L) == -1L);\n    assert(candidate(7L, 7L) == -1L);\n    assert(candidate(546L,\
    \ 546L) == 546L);\n}\nvoid main(){}"
  status: SyntaxError
  stderr: 'b''Error: cannot find source code for runtime library file \''object.d\''\n       dmd
    might not be correctly installed. Run \''dmd -man\'' for installation instructions.\nimport
    path[0] = /tmp\nFailed: ["dmd", "-unittest", "-v", "-o-", "/tmp/tmp0pi29606.d",
    "-I/tmp"]\n'''
  stdout: b''
  timestamp: 1659793719
- exit_code: 1
  program: "import std.typecons;\nimport std.math;\n/*\nThis function takes two positive\
    \ numbers x and y and returns the\n    biggest even integer number that is in\
    \ the range [x, y] inclusive. If \n    there's no such number, then the function\
    \ should return -1.\n\n    For example:\n    >>> choose_num(12L, 15L)\n    14L\n\
    \    >>> choose_num(13L, 12L)\n    -1L\n    \n*/\nlong choose_num(long x, long\
    \ y) \n{\n    if (x % 2 == 0)\n    {\n        return x;\n    }\n    else if (x\
    \ + 1 <= y)\n    {\n        return x + 1;\n    }\n    else\n    {\n        return\
    \ -1;\n    }\n}\nunittest\n{\n    alias candidate = choose_num;\n\n    assert(candidate(12L,\
    \ 15L) == 14L);\n    assert(candidate(13L, 12L) == -1L);\n    assert(candidate(33L,\
    \ 12354L) == 12354L);\n    assert(candidate(5234L, 5233L) == -1L);\n    assert(candidate(6L,\
    \ 29L) == 28L);\n    assert(candidate(27L, 10L) == -1L);\n    assert(candidate(7L,\
    \ 7L) == -1L);\n    assert(candidate(546L, 546L) == 546L);\n}\nvoid main(){}"
  status: SyntaxError
  stderr: 'b''Error: cannot find source code for runtime library file \''object.d\''\n       dmd
    might not be correctly installed. Run \''dmd -man\'' for installation instructions.\nimport
    path[0] = /tmp\nFailed: ["dmd", "-unittest", "-v", "-o-", "/tmp/tmpa5b4qe1t.d",
    "-I/tmp"]\n'''
  stdout: b''
  timestamp: 1659793719
- exit_code: 1
  program: "import std.typecons;\nimport std.math;\n/*\nThis function takes two positive\
    \ numbers x and y and returns the\n    biggest even integer number that is in\
    \ the range [x, y] inclusive. If \n    there's no such number, then the function\
    \ should return -1.\n\n    For example:\n    >>> choose_num(12L, 15L)\n    14L\n\
    \    >>> choose_num(13L, 12L)\n    -1L\n    \n*/\nlong choose_num(long x, long\
    \ y) \n{\n    long result = -1;\n    if (x > y)\n    {\n        return result;\n\
    \    }\n    else\n    {\n        foreach (i; x..y+1)\n        {\n            if\
    \ (i % 2 == 0)\n            {\n                result = i;\n            }\n  \
    \      }\n    }\n    return result;\n}\nunittest\n{\n    alias candidate = choose_num;\n\
    \n    assert(candidate(12L, 15L) == 14L);\n    assert(candidate(13L, 12L) == -1L);\n\
    \    assert(candidate(33L, 12354L) == 12354L);\n    assert(candidate(5234L, 5233L)\
    \ == -1L);\n    assert(candidate(6L, 29L) == 28L);\n    assert(candidate(27L,\
    \ 10L) == -1L);\n    assert(candidate(7L, 7L) == -1L);\n    assert(candidate(546L,\
    \ 546L) == 546L);\n}\nvoid main(){}"
  status: SyntaxError
  stderr: 'b''Error: cannot find source code for runtime library file \''object.d\''\n       dmd
    might not be correctly installed. Run \''dmd -man\'' for installation instructions.\nimport
    path[0] = /tmp\nFailed: ["dmd", "-unittest", "-v", "-o-", "/tmp/tmpxdidlq1k.d",
    "-I/tmp"]\n'''
  stdout: b''
  timestamp: 1659793719
- exit_code: 1
  program: "import std.typecons;\nimport std.math;\n/*\nThis function takes two positive\
    \ numbers x and y and returns the\n    biggest even integer number that is in\
    \ the range [x, y] inclusive. If \n    there's no such number, then the function\
    \ should return -1.\n\n    For example:\n    >>> choose_num(12L, 15L)\n    14L\n\
    \    >>> choose_num(13L, 12L)\n    -1L\n    \n*/\nlong choose_num(long x, long\
    \ y) \n{\n    if(x > y)\n    {\n        return -1L;\n    }\n    else\n    {\n\
    \        long z = x;\n        while(z <= y)\n        {\n            if(z % 2 ==\
    \ 0)\n            {\n                return z;\n            }\n            z++;\n\
    \        }\n        return -1L;\n    }\n}\nunittest\n{\n    alias candidate =\
    \ choose_num;\n\n    assert(candidate(12L, 15L) == 14L);\n    assert(candidate(13L,\
    \ 12L) == -1L);\n    assert(candidate(33L, 12354L) == 12354L);\n    assert(candidate(5234L,\
    \ 5233L) == -1L);\n    assert(candidate(6L, 29L) == 28L);\n    assert(candidate(27L,\
    \ 10L) == -1L);\n    assert(candidate(7L, 7L) == -1L);\n    assert(candidate(546L,\
    \ 546L) == 546L);\n}\nvoid main(){}"
  status: SyntaxError
  stderr: 'b''Error: cannot find source code for runtime library file \''object.d\''\n       dmd
    might not be correctly installed. Run \''dmd -man\'' for installation instructions.\nimport
    path[0] = /tmp\nFailed: ["dmd", "-unittest", "-v", "-o-", "/tmp/tmpmx7useei.d",
    "-I/tmp"]\n'''
  stdout: b''
  timestamp: 1659793719
- exit_code: 1
  program: "import std.typecons;\nimport std.math;\n/*\nThis function takes two positive\
    \ numbers x and y and returns the\n    biggest even integer number that is in\
    \ the range [x, y] inclusive. If \n    there's no such number, then the function\
    \ should return -1.\n\n    For example:\n    >>> choose_num(12L, 15L)\n    14L\n\
    \    >>> choose_num(13L, 12L)\n    -1L\n    \n*/\nlong choose_num(long x, long\
    \ y) \n{\n    if (x > y)\n    {\n        return -1L;\n    }\n    else\n    {\n\
    \        long z = x % 2;\n        if (z == 0)\n        {\n            return x;\n\
    \        }\n        else\n        {\n            return choose_num(x + 1, y);\n\
    \        }\n    }\n}\nunittest\n{\n    alias candidate = choose_num;\n\n    assert(candidate(12L,\
    \ 15L) == 14L);\n    assert(candidate(13L, 12L) == -1L);\n    assert(candidate(33L,\
    \ 12354L) == 12354L);\n    assert(candidate(5234L, 5233L) == -1L);\n    assert(candidate(6L,\
    \ 29L) == 28L);\n    assert(candidate(27L, 10L) == -1L);\n    assert(candidate(7L,\
    \ 7L) == -1L);\n    assert(candidate(546L, 546L) == 546L);\n}\nvoid main(){}"
  status: Exception
  stderr: 'b''core.exception.AssertError@/tmp/tmpz34_5_yx.d(38): unittest failure\n----------------\n??:?
    _d_unittestp [0x427e05]\n??:? void tmpz34_5_yx.__unittest_L34_C1() [0x427a61]\n??:?
    void tmpz34_5_yx.__modtest() [0x427b88]\n??:? int core.runtime.runModuleUnitTests().__foreachbody2(object.ModuleInfo*)
    [0x42bb2b]\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)).__lambda2(immutable(object.ModuleInfo*))
    [0x42a9be]\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))).__foreachbody2(ref
    rt.sections_elf_shared.DSO) [0x42fb51]\n??:? int rt.sections_elf_shared.DSO.opApply(scope
    int delegate(ref rt.sections_elf_shared.DSO)) [0x430000]\n??:? int rt.minfo.moduleinfos_apply(scope
    int delegate(immutable(object.ModuleInfo*))) [0x42fadd]\n??:? int object.ModuleInfo.opApply(scope
    int delegate(object.ModuleInfo*)) [0x42a995]\n??:? runModuleUnitTests [0x42b901]\n??:?
    void rt.dmain2._d_run_main(int, char**, extern (C) int function(char[][])*).runAll()
    [0x428254]\n??:? void rt.dmain2._d_run_main(int, char**, extern (C) int function(char[][])*).tryExec(scope
    void delegate()) [0x4281db]\n??:? _d_run_main [0x428146]\n??:? main [0x427b9b]\n??:?
    __libc_start_main [0x884ac554]\n1/1 unittests FAILED\n'''
  stdout: b''
- exit_code: 1
  program: "import std.typecons;\nimport std.math;\n/*\nThis function takes two positive\
    \ numbers x and y and returns the\n    biggest even integer number that is in\
    \ the range [x, y] inclusive. If \n    there's no such number, then the function\
    \ should return -1.\n\n    For example:\n    >>> choose_num(12L, 15L)\n    14L\n\
    \    >>> choose_num(13L, 12L)\n    -1L\n    \n*/\nlong choose_num(long x, long\
    \ y) \n{\n    if (x > y)\n    {\n        return -1L;\n    }\n    else if (x %\
    \ 2 == 0)\n    {\n        return x;\n    }\n    else\n    {\n        return choose_num(x\
    \ + 1, y);\n    }\n}\nunittest\n{\n    alias candidate = choose_num;\n\n    assert(candidate(12L,\
    \ 15L) == 14L);\n    assert(candidate(13L, 12L) == -1L);\n    assert(candidate(33L,\
    \ 12354L) == 12354L);\n    assert(candidate(5234L, 5233L) == -1L);\n    assert(candidate(6L,\
    \ 29L) == 28L);\n    assert(candidate(27L, 10L) == -1L);\n    assert(candidate(7L,\
    \ 7L) == -1L);\n    assert(candidate(546L, 546L) == 546L);\n}\nvoid main(){}"
  status: SyntaxError
  stderr: 'b''Error: cannot find source code for runtime library file \''object.d\''\n       dmd
    might not be correctly installed. Run \''dmd -man\'' for installation instructions.\nimport
    path[0] = /tmp\nFailed: ["dmd", "-unittest", "-v", "-o-", "/tmp/tmprqxrzaat.d",
    "-I/tmp"]\n'''
  stdout: b''
  timestamp: 1659793719
- exit_code: 0
  program: "import std.typecons;\nimport std.math;\n/*\nThis function takes two positive\
    \ numbers x and y and returns the\n    biggest even integer number that is in\
    \ the range [x, y] inclusive. If \n    there's no such number, then the function\
    \ should return -1.\n\n    For example:\n    >>> choose_num(12L, 15L)\n    14L\n\
    \    >>> choose_num(13L, 12L)\n    -1L\n    \n*/\nlong choose_num(long x, long\
    \ y) \n{\n    long result = -1;\n    if (x > y)\n    {\n        return result;\n\
    \    }\n    else\n    {\n        for (long i = x; i <= y; i++)\n        {\n  \
    \          if (i % 2 == 0)\n            {\n                result = i;\n     \
    \       }\n        }\n    }\n    return result;\n}\nunittest\n{\n    alias candidate\
    \ = choose_num;\n\n    assert(candidate(12L, 15L) == 14L);\n    assert(candidate(13L,\
    \ 12L) == -1L);\n    assert(candidate(33L, 12354L) == 12354L);\n    assert(candidate(5234L,\
    \ 5233L) == -1L);\n    assert(candidate(6L, 29L) == 28L);\n    assert(candidate(27L,\
    \ 10L) == -1L);\n    assert(candidate(7L, 7L) == -1L);\n    assert(candidate(546L,\
    \ 546L) == 546L);\n}\nvoid main(){}"
  status: OK
  stderr: b''
  stdout: b''
- exit_code: 1
  program: "import std.typecons;\nimport std.math;\n/*\nThis function takes two positive\
    \ numbers x and y and returns the\n    biggest even integer number that is in\
    \ the range [x, y] inclusive. If \n    there's no such number, then the function\
    \ should return -1.\n\n    For example:\n    >>> choose_num(12L, 15L)\n    14L\n\
    \    >>> choose_num(13L, 12L)\n    -1L\n    \n*/\nlong choose_num(long x, long\
    \ y) \n{\n    long result = -1;\n    if (x % 2 == 0)\n    {\n        result =\
    \ x;\n    }\n    else\n    {\n        result = x + 1;\n    }\n    if (result >\
    \ y)\n    {\n        result = -1;\n    }\n    return result;\n}\nunittest\n{\n\
    \    alias candidate = choose_num;\n\n    assert(candidate(12L, 15L) == 14L);\n\
    \    assert(candidate(13L, 12L) == -1L);\n    assert(candidate(33L, 12354L) ==\
    \ 12354L);\n    assert(candidate(5234L, 5233L) == -1L);\n    assert(candidate(6L,\
    \ 29L) == 28L);\n    assert(candidate(27L, 10L) == -1L);\n    assert(candidate(7L,\
    \ 7L) == -1L);\n    assert(candidate(546L, 546L) == 546L);\n}\nvoid main(){}"
  status: Exception
  stderr: 'b''core.exception.AssertError@/tmp/tmpigxyzbx6.d(36): unittest failure\n----------------\n??:?
    _d_unittestp [0x427e1d]\n??:? void tmpigxyzbx6.__unittest_L32_C1() [0x427a79]\n??:?
    void tmpigxyzbx6.__modtest() [0x427ba0]\n??:? int core.runtime.runModuleUnitTests().__foreachbody2(object.ModuleInfo*)
    [0x42bb43]\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)).__lambda2(immutable(object.ModuleInfo*))
    [0x42a9d6]\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))).__foreachbody2(ref
    rt.sections_elf_shared.DSO) [0x42fb69]\n??:? int rt.sections_elf_shared.DSO.opApply(scope
    int delegate(ref rt.sections_elf_shared.DSO)) [0x430018]\n??:? int rt.minfo.moduleinfos_apply(scope
    int delegate(immutable(object.ModuleInfo*))) [0x42faf5]\n??:? int object.ModuleInfo.opApply(scope
    int delegate(object.ModuleInfo*)) [0x42a9ad]\n??:? runModuleUnitTests [0x42b919]\n??:?
    void rt.dmain2._d_run_main(int, char**, extern (C) int function(char[][])*).runAll()
    [0x42826c]\n??:? void rt.dmain2._d_run_main(int, char**, extern (C) int function(char[][])*).tryExec(scope
    void delegate()) [0x4281f3]\n??:? _d_run_main [0x42815e]\n??:? main [0x427bb3]\n??:?
    __libc_start_main [0x528cc554]\n1/1 unittests FAILED\n'''
  stdout: b''
- exit_code: 1
  program: "import std.typecons;\nimport std.math;\n/*\nThis function takes two positive\
    \ numbers x and y and returns the\n    biggest even integer number that is in\
    \ the range [x, y] inclusive. If \n    there's no such number, then the function\
    \ should return -1.\n\n    For example:\n    >>> choose_num(12L, 15L)\n    14L\n\
    \    >>> choose_num(13L, 12L)\n    -1L\n    \n*/\nlong choose_num(long x, long\
    \ y) \n{\n    if (x > y)\n    {\n        return -1L;\n    }\n    else\n    {\n\
    \        long z = x;\n        while (z <= y)\n        {\n            if (z % 2\
    \ == 0)\n            {\n                return z;\n            }\n           \
    \ z++;\n        }\n        return -1L;\n    }\n}\nunittest\n{\n    alias candidate\
    \ = choose_num;\n\n    assert(candidate(12L, 15L) == 14L);\n    assert(candidate(13L,\
    \ 12L) == -1L);\n    assert(candidate(33L, 12354L) == 12354L);\n    assert(candidate(5234L,\
    \ 5233L) == -1L);\n    assert(candidate(6L, 29L) == 28L);\n    assert(candidate(27L,\
    \ 10L) == -1L);\n    assert(candidate(7L, 7L) == -1L);\n    assert(candidate(546L,\
    \ 546L) == 546L);\n}\nvoid main(){}"
  status: SyntaxError
  stderr: 'b''Error: cannot find source code for runtime library file \''object.d\''\n       dmd
    might not be correctly installed. Run \''dmd -man\'' for installation instructions.\nimport
    path[0] = /tmp\nFailed: ["dmd", "-unittest", "-v", "-o-", "/tmp/tmp0o3uq622.d",
    "-I/tmp"]\n'''
  stdout: b''
  timestamp: 1659793719
- exit_code: 1
  program: "import std.typecons;\nimport std.math;\n/*\nThis function takes two positive\
    \ numbers x and y and returns the\n    biggest even integer number that is in\
    \ the range [x, y] inclusive. If \n    there's no such number, then the function\
    \ should return -1.\n\n    For example:\n    >>> choose_num(12L, 15L)\n    14L\n\
    \    >>> choose_num(13L, 12L)\n    -1L\n    \n*/\nlong choose_num(long x, long\
    \ y) \n{\n    long result = -1;\n    if (x % 2 == 0)\n    {\n        result =\
    \ x;\n    }\n    else\n    {\n        result = x + 1;\n    }\n    if (result >\
    \ y)\n    {\n        result = -1;\n    }\n    return result;\n}\nunittest\n{\n\
    \    alias candidate = choose_num;\n\n    assert(candidate(12L, 15L) == 14L);\n\
    \    assert(candidate(13L, 12L) == -1L);\n    assert(candidate(33L, 12354L) ==\
    \ 12354L);\n    assert(candidate(5234L, 5233L) == -1L);\n    assert(candidate(6L,\
    \ 29L) == 28L);\n    assert(candidate(27L, 10L) == -1L);\n    assert(candidate(7L,\
    \ 7L) == -1L);\n    assert(candidate(546L, 546L) == 546L);\n}\nvoid main(){}"
  status: Exception
  stderr: 'b''core.exception.AssertError@/tmp/tmpigxyzbx6.d(36): unittest failure\n----------------\n??:?
    _d_unittestp [0x427e1d]\n??:? void tmpigxyzbx6.__unittest_L32_C1() [0x427a79]\n??:?
    void tmpigxyzbx6.__modtest() [0x427ba0]\n??:? int core.runtime.runModuleUnitTests().__foreachbody2(object.ModuleInfo*)
    [0x42bb43]\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)).__lambda2(immutable(object.ModuleInfo*))
    [0x42a9d6]\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))).__foreachbody2(ref
    rt.sections_elf_shared.DSO) [0x42fb69]\n??:? int rt.sections_elf_shared.DSO.opApply(scope
    int delegate(ref rt.sections_elf_shared.DSO)) [0x430018]\n??:? int rt.minfo.moduleinfos_apply(scope
    int delegate(immutable(object.ModuleInfo*))) [0x42faf5]\n??:? int object.ModuleInfo.opApply(scope
    int delegate(object.ModuleInfo*)) [0x42a9ad]\n??:? runModuleUnitTests [0x42b919]\n??:?
    void rt.dmain2._d_run_main(int, char**, extern (C) int function(char[][])*).runAll()
    [0x42826c]\n??:? void rt.dmain2._d_run_main(int, char**, extern (C) int function(char[][])*).tryExec(scope
    void delegate()) [0x4281f3]\n??:? _d_run_main [0x42815e]\n??:? main [0x427bb3]\n??:?
    __libc_start_main [0x528cc554]\n1/1 unittests FAILED\n'''
  stdout: b''
- exit_code: 1
  program: "import std.typecons;\nimport std.math;\n/*\nThis function takes two positive\
    \ numbers x and y and returns the\n    biggest even integer number that is in\
    \ the range [x, y] inclusive. If \n    there's no such number, then the function\
    \ should return -1.\n\n    For example:\n    >>> choose_num(12L, 15L)\n    14L\n\
    \    >>> choose_num(13L, 12L)\n    -1L\n    \n*/\nlong choose_num(long x, long\
    \ y) \n{\n    long result = -1;\n    foreach(i; x..y+1)\n    {\n        if(i %\
    \ 2 == 0)\n        {\n            result = i;\n        }\n    }\n    return result;\n\
    }\nunittest\n{\n    alias candidate = choose_num;\n\n    assert(candidate(12L,\
    \ 15L) == 14L);\n    assert(candidate(13L, 12L) == -1L);\n    assert(candidate(33L,\
    \ 12354L) == 12354L);\n    assert(candidate(5234L, 5233L) == -1L);\n    assert(candidate(6L,\
    \ 29L) == 28L);\n    assert(candidate(27L, 10L) == -1L);\n    assert(candidate(7L,\
    \ 7L) == -1L);\n    assert(candidate(546L, 546L) == 546L);\n}\nvoid main(){}"
  status: SyntaxError
  stderr: 'b''Error: cannot find source code for runtime library file \''object.d\''\n       dmd
    might not be correctly installed. Run \''dmd -man\'' for installation instructions.\nimport
    path[0] = /tmp\nFailed: ["dmd", "-unittest", "-v", "-o-", "/tmp/tmpf89oph2c.d",
    "-I/tmp"]\n'''
  stdout: b''
  timestamp: 1659793719
- exit_code: 1
  program: "import std.typecons;\nimport std.math;\n/*\nThis function takes two positive\
    \ numbers x and y and returns the\n    biggest even integer number that is in\
    \ the range [x, y] inclusive. If \n    there's no such number, then the function\
    \ should return -1.\n\n    For example:\n    >>> choose_num(12L, 15L)\n    14L\n\
    \    >>> choose_num(13L, 12L)\n    -1L\n    \n*/\nlong choose_num(long x, long\
    \ y) \n{\n    long result = -1;\n    if (x % 2 == 0)\n    {\n        result =\
    \ x;\n    }\n    else\n    {\n        result = x + 1;\n    }\n    if (result >\
    \ y)\n    {\n        result = -1;\n    }\n    return result;\n}\nunittest\n{\n\
    \    alias candidate = choose_num;\n\n    assert(candidate(12L, 15L) == 14L);\n\
    \    assert(candidate(13L, 12L) == -1L);\n    assert(candidate(33L, 12354L) ==\
    \ 12354L);\n    assert(candidate(5234L, 5233L) == -1L);\n    assert(candidate(6L,\
    \ 29L) == 28L);\n    assert(candidate(27L, 10L) == -1L);\n    assert(candidate(7L,\
    \ 7L) == -1L);\n    assert(candidate(546L, 546L) == 546L);\n}\nvoid main(){}"
  status: Exception
  stderr: 'b''core.exception.AssertError@/tmp/tmpigxyzbx6.d(36): unittest failure\n----------------\n??:?
    _d_unittestp [0x427e1d]\n??:? void tmpigxyzbx6.__unittest_L32_C1() [0x427a79]\n??:?
    void tmpigxyzbx6.__modtest() [0x427ba0]\n??:? int core.runtime.runModuleUnitTests().__foreachbody2(object.ModuleInfo*)
    [0x42bb43]\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)).__lambda2(immutable(object.ModuleInfo*))
    [0x42a9d6]\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))).__foreachbody2(ref
    rt.sections_elf_shared.DSO) [0x42fb69]\n??:? int rt.sections_elf_shared.DSO.opApply(scope
    int delegate(ref rt.sections_elf_shared.DSO)) [0x430018]\n??:? int rt.minfo.moduleinfos_apply(scope
    int delegate(immutable(object.ModuleInfo*))) [0x42faf5]\n??:? int object.ModuleInfo.opApply(scope
    int delegate(object.ModuleInfo*)) [0x42a9ad]\n??:? runModuleUnitTests [0x42b919]\n??:?
    void rt.dmain2._d_run_main(int, char**, extern (C) int function(char[][])*).runAll()
    [0x42826c]\n??:? void rt.dmain2._d_run_main(int, char**, extern (C) int function(char[][])*).tryExec(scope
    void delegate()) [0x4281f3]\n??:? _d_run_main [0x42815e]\n??:? main [0x427bb3]\n??:?
    __libc_start_main [0x528cc554]\n1/1 unittests FAILED\n'''
  stdout: b''
- exit_code: 1
  program: "import std.typecons;\nimport std.math;\n/*\nThis function takes two positive\
    \ numbers x and y and returns the\n    biggest even integer number that is in\
    \ the range [x, y] inclusive. If \n    there's no such number, then the function\
    \ should return -1.\n\n    For example:\n    >>> choose_num(12L, 15L)\n    14L\n\
    \    >>> choose_num(13L, 12L)\n    -1L\n    \n*/\nlong choose_num(long x, long\
    \ y) \n{\n    long max = -1;\n    foreach(i; x..y+1)\n    {\n        if(i % 2\
    \ == 0)\n        {\n            max = max(max, i);\n        }\n    }\n    return\
    \ max;\n}\nunittest\n{\n    alias candidate = choose_num;\n\n    assert(candidate(12L,\
    \ 15L) == 14L);\n    assert(candidate(13L, 12L) == -1L);\n    assert(candidate(33L,\
    \ 12354L) == 12354L);\n    assert(candidate(5234L, 5233L) == -1L);\n    assert(candidate(6L,\
    \ 29L) == 28L);\n    assert(candidate(27L, 10L) == -1L);\n    assert(candidate(7L,\
    \ 7L) == -1L);\n    assert(candidate(546L, 546L) == 546L);\n}\nvoid main(){}"
  status: SyntaxError
  stderr: 'b''Error: cannot find source code for runtime library file \''object.d\''\n       dmd
    might not be correctly installed. Run \''dmd -man\'' for installation instructions.\nimport
    path[0] = /tmp\nFailed: ["dmd", "-unittest", "-v", "-o-", "/tmp/tmp6mrccy3b.d",
    "-I/tmp"]\n'''
  stdout: b''
  timestamp: 1659793719
- exit_code: 1
  program: "import std.typecons;\nimport std.math;\n/*\nThis function takes two positive\
    \ numbers x and y and returns the\n    biggest even integer number that is in\
    \ the range [x, y] inclusive. If \n    there's no such number, then the function\
    \ should return -1.\n\n    For example:\n    >>> choose_num(12L, 15L)\n    14L\n\
    \    >>> choose_num(13L, 12L)\n    -1L\n    \n*/\nlong choose_num(long x, long\
    \ y) \n{\n    long result = -1;\n    if (x % 2 == 0)\n    {\n        result =\
    \ x;\n    }\n    else\n    {\n        result = x + 1;\n    }\n    if (result >\
    \ y)\n    {\n        result = -1;\n    }\n    return result;\n}\nunittest\n{\n\
    \    alias candidate = choose_num;\n\n    assert(candidate(12L, 15L) == 14L);\n\
    \    assert(candidate(13L, 12L) == -1L);\n    assert(candidate(33L, 12354L) ==\
    \ 12354L);\n    assert(candidate(5234L, 5233L) == -1L);\n    assert(candidate(6L,\
    \ 29L) == 28L);\n    assert(candidate(27L, 10L) == -1L);\n    assert(candidate(7L,\
    \ 7L) == -1L);\n    assert(candidate(546L, 546L) == 546L);\n}\nvoid main(){}"
  status: Exception
  stderr: 'b''core.exception.AssertError@/tmp/tmpigxyzbx6.d(36): unittest failure\n----------------\n??:?
    _d_unittestp [0x427e1d]\n??:? void tmpigxyzbx6.__unittest_L32_C1() [0x427a79]\n??:?
    void tmpigxyzbx6.__modtest() [0x427ba0]\n??:? int core.runtime.runModuleUnitTests().__foreachbody2(object.ModuleInfo*)
    [0x42bb43]\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)).__lambda2(immutable(object.ModuleInfo*))
    [0x42a9d6]\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))).__foreachbody2(ref
    rt.sections_elf_shared.DSO) [0x42fb69]\n??:? int rt.sections_elf_shared.DSO.opApply(scope
    int delegate(ref rt.sections_elf_shared.DSO)) [0x430018]\n??:? int rt.minfo.moduleinfos_apply(scope
    int delegate(immutable(object.ModuleInfo*))) [0x42faf5]\n??:? int object.ModuleInfo.opApply(scope
    int delegate(object.ModuleInfo*)) [0x42a9ad]\n??:? runModuleUnitTests [0x42b919]\n??:?
    void rt.dmain2._d_run_main(int, char**, extern (C) int function(char[][])*).runAll()
    [0x42826c]\n??:? void rt.dmain2._d_run_main(int, char**, extern (C) int function(char[][])*).tryExec(scope
    void delegate()) [0x4281f3]\n??:? _d_run_main [0x42815e]\n??:? main [0x427bb3]\n??:?
    __libc_start_main [0x528cc554]\n1/1 unittests FAILED\n'''
  stdout: b''
- exit_code: 1
  program: "import std.typecons;\nimport std.math;\n/*\nThis function takes two positive\
    \ numbers x and y and returns the\n    biggest even integer number that is in\
    \ the range [x, y] inclusive. If \n    there's no such number, then the function\
    \ should return -1.\n\n    For example:\n    >>> choose_num(12L, 15L)\n    14L\n\
    \    >>> choose_num(13L, 12L)\n    -1L\n    \n*/\nlong choose_num(long x, long\
    \ y) \n{\n    if (x > y)\n        return -1;\n    if (x % 2 == 0)\n        return\
    \ x;\n    return choose_num(x + 1, y);\n}\nunittest\n{\n    alias candidate =\
    \ choose_num;\n\n    assert(candidate(12L, 15L) == 14L);\n    assert(candidate(13L,\
    \ 12L) == -1L);\n    assert(candidate(33L, 12354L) == 12354L);\n    assert(candidate(5234L,\
    \ 5233L) == -1L);\n    assert(candidate(6L, 29L) == 28L);\n    assert(candidate(27L,\
    \ 10L) == -1L);\n    assert(candidate(7L, 7L) == -1L);\n    assert(candidate(546L,\
    \ 546L) == 546L);\n}\nvoid main(){}"
  status: SyntaxError
  stderr: 'b''Error: cannot find source code for runtime library file \''object.d\''\n       dmd
    might not be correctly installed. Run \''dmd -man\'' for installation instructions.\nimport
    path[0] = /tmp\nFailed: ["dmd", "-unittest", "-v", "-o-", "/tmp/tmpc4oyo_pq.d",
    "-I/tmp"]\n'''
  stdout: b''
  timestamp: 1659793719
- exit_code: 1
  program: "import std.typecons;\nimport std.math;\n/*\nThis function takes two positive\
    \ numbers x and y and returns the\n    biggest even integer number that is in\
    \ the range [x, y] inclusive. If \n    there's no such number, then the function\
    \ should return -1.\n\n    For example:\n    >>> choose_num(12L, 15L)\n    14L\n\
    \    >>> choose_num(13L, 12L)\n    -1L\n    \n*/\nlong choose_num(long x, long\
    \ y) \n{\n    long z = 0;\n    if (x % 2 == 0)\n    {\n        z = x;\n    }\n\
    \    else\n    {\n        z = x + 1;\n    }\n    if (z > y)\n    {\n        return\
    \ -1;\n    }\n    else\n    {\n        return z;\n    }\n}\nunittest\n{\n    alias\
    \ candidate = choose_num;\n\n    assert(candidate(12L, 15L) == 14L);\n    assert(candidate(13L,\
    \ 12L) == -1L);\n    assert(candidate(33L, 12354L) == 12354L);\n    assert(candidate(5234L,\
    \ 5233L) == -1L);\n    assert(candidate(6L, 29L) == 28L);\n    assert(candidate(27L,\
    \ 10L) == -1L);\n    assert(candidate(7L, 7L) == -1L);\n    assert(candidate(546L,\
    \ 546L) == 546L);\n}\nvoid main(){}"
  status: SyntaxError
  stderr: 'b''Error: cannot find source code for runtime library file \''object.d\''\n       dmd
    might not be correctly installed. Run \''dmd -man\'' for installation instructions.\nimport
    path[0] = /tmp\nFailed: ["dmd", "-unittest", "-v", "-o-", "/tmp/tmp0gbadf5r.d",
    "-I/tmp"]\n'''
  stdout: b''
  timestamp: 1659793719
- exit_code: 1
  program: "import std.typecons;\nimport std.math;\n/*\nThis function takes two positive\
    \ numbers x and y and returns the\n    biggest even integer number that is in\
    \ the range [x, y] inclusive. If \n    there's no such number, then the function\
    \ should return -1.\n\n    For example:\n    >>> choose_num(12L, 15L)\n    14L\n\
    \    >>> choose_num(13L, 12L)\n    -1L\n    \n*/\nlong choose_num(long x, long\
    \ y) \n{\n    // YOUR CODE HERE\n    long i = 0;\n    if(x > y)\n    {\n     \
    \   return -1;\n    }\n    else\n    {\n        for(i = y; i >= x; i--)\n    \
    \    {\n            if(i % 2 == 0)\n            {\n                return i;\n\
    \            }\n        }\n    }\n    return -1;\n}\nunittest\n{\n    alias candidate\
    \ = choose_num;\n\n    assert(candidate(12L, 15L) == 14L);\n    assert(candidate(13L,\
    \ 12L) == -1L);\n    assert(candidate(33L, 12354L) == 12354L);\n    assert(candidate(5234L,\
    \ 5233L) == -1L);\n    assert(candidate(6L, 29L) == 28L);\n    assert(candidate(27L,\
    \ 10L) == -1L);\n    assert(candidate(7L, 7L) == -1L);\n    assert(candidate(546L,\
    \ 546L) == 546L);\n}\nvoid main(){}"
  status: SyntaxError
  stderr: 'b''Error: cannot find source code for runtime library file \''object.d\''\n       dmd
    might not be correctly installed. Run \''dmd -man\'' for installation instructions.\nimport
    path[0] = /tmp\nFailed: ["dmd", "-unittest", "-v", "-o-", "/tmp/tmp67p2xqa9.d",
    "-I/tmp"]\n'''
  stdout: b''
  timestamp: 1659793719
- exit_code: 1
  program: "import std.typecons;\nimport std.math;\n/*\nThis function takes two positive\
    \ numbers x and y and returns the\n    biggest even integer number that is in\
    \ the range [x, y] inclusive. If \n    there's no such number, then the function\
    \ should return -1.\n\n    For example:\n    >>> choose_num(12L, 15L)\n    14L\n\
    \    >>> choose_num(13L, 12L)\n    -1L\n    \n*/\nlong choose_num(long x, long\
    \ y) \n{\n    long result = -1;\n    if (x % 2 == 0)\n    {\n        result =\
    \ x;\n    }\n    else\n    {\n        x++;\n    }\n    if (y % 2 == 0)\n    {\n\
    \        result = max(result, y);\n    }\n    else\n    {\n        y--;\n    }\n\
    \    if (x > y)\n    {\n        return -1;\n    }\n    return result;\n}\nunittest\n\
    {\n    alias candidate = choose_num;\n\n    assert(candidate(12L, 15L) == 14L);\n\
    \    assert(candidate(13L, 12L) == -1L);\n    assert(candidate(33L, 12354L) ==\
    \ 12354L);\n    assert(candidate(5234L, 5233L) == -1L);\n    assert(candidate(6L,\
    \ 29L) == 28L);\n    assert(candidate(27L, 10L) == -1L);\n    assert(candidate(7L,\
    \ 7L) == -1L);\n    assert(candidate(546L, 546L) == 546L);\n}\nvoid main(){}"
  status: SyntaxError
  stderr: 'b''Error: cannot find source code for runtime library file \''object.d\''\n       dmd
    might not be correctly installed. Run \''dmd -man\'' for installation instructions.\nimport
    path[0] = /tmp\nFailed: ["dmd", "-unittest", "-v", "-o-", "/tmp/tmp3j1da4bt.d",
    "-I/tmp"]\n'''
  stdout: b''
  timestamp: 1659793719
- exit_code: 1
  program: "import std.typecons;\nimport std.math;\n/*\nThis function takes two positive\
    \ numbers x and y and returns the\n    biggest even integer number that is in\
    \ the range [x, y] inclusive. If \n    there's no such number, then the function\
    \ should return -1.\n\n    For example:\n    >>> choose_num(12L, 15L)\n    14L\n\
    \    >>> choose_num(13L, 12L)\n    -1L\n    \n*/\nlong choose_num(long x, long\
    \ y) \n{\n    long result = -1;\n    if (x % 2 == 0)\n    {\n        result =\
    \ x;\n    }\n    else\n    {\n        result = x + 1;\n    }\n    if (result >\
    \ y)\n    {\n        result = -1;\n    }\n    return result;\n}\n/*\nThis function\
    \ takes a positive integer n and returns the sum of the\n    first n odd numbers.\n\
    unittest\n{\n    alias candidate = choose_num;\n\n    assert(candidate(12L, 15L)\
    \ == 14L);\n    assert(candidate(13L, 12L) == -1L);\n    assert(candidate(33L,\
    \ 12354L) == 12354L);\n    assert(candidate(5234L, 5233L) == -1L);\n    assert(candidate(6L,\
    \ 29L) == 28L);\n    assert(candidate(27L, 10L) == -1L);\n    assert(candidate(7L,\
    \ 7L) == -1L);\n    assert(candidate(546L, 546L) == 546L);\n}\nvoid main(){}"
  status: SyntaxError
  stderr: 'b''/tmp/tmpadutq9jb.d(32): Error: unterminated /* */ comment\nFailed: ["dmd",
    "-unittest", "-v", "-o-", "/tmp/tmpadutq9jb.d", "-I/tmp"]\n'''
  stdout: b''
  timestamp: 1659793719
- exit_code: 1
  program: "import std.typecons;\nimport std.math;\n/*\nThis function takes two positive\
    \ numbers x and y and returns the\n    biggest even integer number that is in\
    \ the range [x, y] inclusive. If \n    there's no such number, then the function\
    \ should return -1.\n\n    For example:\n    >>> choose_num(12L, 15L)\n    14L\n\
    \    >>> choose_num(13L, 12L)\n    -1L\n    \n*/\nlong choose_num(long x, long\
    \ y) \n{\n    long z = -1;\n    if (x % 2 == 0)\n    {\n        z = x;\n    }\n\
    \    else\n    {\n        z = x + 1;\n    }\n    if (z > y)\n    {\n        z\
    \ = -1;\n    }\n    return z;\n}\nunittest\n{\n    alias candidate = choose_num;\n\
    \n    assert(candidate(12L, 15L) == 14L);\n    assert(candidate(13L, 12L) == -1L);\n\
    \    assert(candidate(33L, 12354L) == 12354L);\n    assert(candidate(5234L, 5233L)\
    \ == -1L);\n    assert(candidate(6L, 29L) == 28L);\n    assert(candidate(27L,\
    \ 10L) == -1L);\n    assert(candidate(7L, 7L) == -1L);\n    assert(candidate(546L,\
    \ 546L) == 546L);\n}\nvoid main(){}"
  status: Exception
  stderr: 'b''core.exception.AssertError@/tmp/tmp_2535mbj.d(36): unittest failure\n----------------\n??:?
    _d_unittestp [0x427e1d]\n??:? void tmp_2535mbj.__unittest_L32_C1() [0x427a79]\n??:?
    void tmp_2535mbj.__modtest() [0x427ba0]\n??:? int core.runtime.runModuleUnitTests().__foreachbody2(object.ModuleInfo*)
    [0x42bb43]\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)).__lambda2(immutable(object.ModuleInfo*))
    [0x42a9d6]\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))).__foreachbody2(ref
    rt.sections_elf_shared.DSO) [0x42fb69]\n??:? int rt.sections_elf_shared.DSO.opApply(scope
    int delegate(ref rt.sections_elf_shared.DSO)) [0x430018]\n??:? int rt.minfo.moduleinfos_apply(scope
    int delegate(immutable(object.ModuleInfo*))) [0x42faf5]\n??:? int object.ModuleInfo.opApply(scope
    int delegate(object.ModuleInfo*)) [0x42a9ad]\n??:? runModuleUnitTests [0x42b919]\n??:?
    void rt.dmain2._d_run_main(int, char**, extern (C) int function(char[][])*).runAll()
    [0x42826c]\n??:? void rt.dmain2._d_run_main(int, char**, extern (C) int function(char[][])*).tryExec(scope
    void delegate()) [0x4281f3]\n??:? _d_run_main [0x42815e]\n??:? main [0x427bb3]\n??:?
    __libc_start_main [0x6d7f3554]\n1/1 unittests FAILED\n'''
  stdout: b''
- exit_code: 1
  program: "import std.typecons;\nimport std.math;\n/*\nThis function takes two positive\
    \ numbers x and y and returns the\n    biggest even integer number that is in\
    \ the range [x, y] inclusive. If \n    there's no such number, then the function\
    \ should return -1.\n\n    For example:\n    >>> choose_num(12L, 15L)\n    14L\n\
    \    >>> choose_num(13L, 12L)\n    -1L\n    \n*/\nlong choose_num(long x, long\
    \ y) \n{\n    if(x > y)\n    {\n        return -1L;\n    }\n    else\n    {\n\
    \        long z = x % 2;\n        if(z == 0)\n        {\n            return x;\n\
    \        }\n        else\n        {\n            return choose_num(x + 1, y);\n\
    \        }\n    }\n}\nunittest\n{\n    alias candidate = choose_num;\n\n    assert(candidate(12L,\
    \ 15L) == 14L);\n    assert(candidate(13L, 12L) == -1L);\n    assert(candidate(33L,\
    \ 12354L) == 12354L);\n    assert(candidate(5234L, 5233L) == -1L);\n    assert(candidate(6L,\
    \ 29L) == 28L);\n    assert(candidate(27L, 10L) == -1L);\n    assert(candidate(7L,\
    \ 7L) == -1L);\n    assert(candidate(546L, 546L) == 546L);\n}\nvoid main(){}"
  status: SyntaxError
  stderr: 'b''Error: cannot find source code for runtime library file \''object.d\''\n       dmd
    might not be correctly installed. Run \''dmd -man\'' for installation instructions.\nimport
    path[0] = /tmp\nFailed: ["dmd", "-unittest", "-v", "-o-", "/tmp/tmpq3g9izyr.d",
    "-I/tmp"]\n'''
  stdout: b''
  timestamp: 1659793719
- exit_code: 1
  program: "import std.typecons;\nimport std.math;\n/*\nThis function takes two positive\
    \ numbers x and y and returns the\n    biggest even integer number that is in\
    \ the range [x, y] inclusive. If \n    there's no such number, then the function\
    \ should return -1.\n\n    For example:\n    >>> choose_num(12L, 15L)\n    14L\n\
    \    >>> choose_num(13L, 12L)\n    -1L\n    \n*/\nlong choose_num(long x, long\
    \ y) \n{\n    long result = -1;\n    if (x % 2 == 0)\n    {\n        result =\
    \ x;\n    }\n    else\n    {\n        result = x + 1;\n    }\n    if (result >\
    \ y)\n    {\n        result = -1;\n    }\n    return result;\n}\nunittest\n{\n\
    \    alias candidate = choose_num;\n\n    assert(candidate(12L, 15L) == 14L);\n\
    \    assert(candidate(13L, 12L) == -1L);\n    assert(candidate(33L, 12354L) ==\
    \ 12354L);\n    assert(candidate(5234L, 5233L) == -1L);\n    assert(candidate(6L,\
    \ 29L) == 28L);\n    assert(candidate(27L, 10L) == -1L);\n    assert(candidate(7L,\
    \ 7L) == -1L);\n    assert(candidate(546L, 546L) == 546L);\n}\nvoid main(){}"
  status: Exception
  stderr: 'b''core.exception.AssertError@/tmp/tmpigxyzbx6.d(36): unittest failure\n----------------\n??:?
    _d_unittestp [0x427e1d]\n??:? void tmpigxyzbx6.__unittest_L32_C1() [0x427a79]\n??:?
    void tmpigxyzbx6.__modtest() [0x427ba0]\n??:? int core.runtime.runModuleUnitTests().__foreachbody2(object.ModuleInfo*)
    [0x42bb43]\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)).__lambda2(immutable(object.ModuleInfo*))
    [0x42a9d6]\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))).__foreachbody2(ref
    rt.sections_elf_shared.DSO) [0x42fb69]\n??:? int rt.sections_elf_shared.DSO.opApply(scope
    int delegate(ref rt.sections_elf_shared.DSO)) [0x430018]\n??:? int rt.minfo.moduleinfos_apply(scope
    int delegate(immutable(object.ModuleInfo*))) [0x42faf5]\n??:? int object.ModuleInfo.opApply(scope
    int delegate(object.ModuleInfo*)) [0x42a9ad]\n??:? runModuleUnitTests [0x42b919]\n??:?
    void rt.dmain2._d_run_main(int, char**, extern (C) int function(char[][])*).runAll()
    [0x42826c]\n??:? void rt.dmain2._d_run_main(int, char**, extern (C) int function(char[][])*).tryExec(scope
    void delegate()) [0x4281f3]\n??:? _d_run_main [0x42815e]\n??:? main [0x427bb3]\n??:?
    __libc_start_main [0x528cc554]\n1/1 unittests FAILED\n'''
  stdout: b''
- exit_code: 1
  program: "import std.typecons;\nimport std.math;\n/*\nThis function takes two positive\
    \ numbers x and y and returns the\n    biggest even integer number that is in\
    \ the range [x, y] inclusive. If \n    there's no such number, then the function\
    \ should return -1.\n\n    For example:\n    >>> choose_num(12L, 15L)\n    14L\n\
    \    >>> choose_num(13L, 12L)\n    -1L\n    \n*/\nlong choose_num(long x, long\
    \ y) \n{\n    long result = -1;\n    if (x % 2 == 0)\n    {\n        result =\
    \ x;\n    }\n    else\n    {\n        x++;\n    }\n    if (x <= y)\n    {\n  \
    \      result = x;\n    }\n    return result;\n}\nunittest\n{\n    alias candidate\
    \ = choose_num;\n\n    assert(candidate(12L, 15L) == 14L);\n    assert(candidate(13L,\
    \ 12L) == -1L);\n    assert(candidate(33L, 12354L) == 12354L);\n    assert(candidate(5234L,\
    \ 5233L) == -1L);\n    assert(candidate(6L, 29L) == 28L);\n    assert(candidate(27L,\
    \ 10L) == -1L);\n    assert(candidate(7L, 7L) == -1L);\n    assert(candidate(546L,\
    \ 546L) == 546L);\n}\nvoid main(){}"
  status: SyntaxError
  stderr: 'b''Error: cannot find source code for runtime library file \''object.d\''\n       dmd
    might not be correctly installed. Run \''dmd -man\'' for installation instructions.\nimport
    path[0] = /tmp\nFailed: ["dmd", "-unittest", "-v", "-o-", "/tmp/tmpdutl04ou.d",
    "-I/tmp"]\n'''
  stdout: b''
  timestamp: 1659793719
- exit_code: 1
  program: "import std.typecons;\nimport std.math;\n/*\nThis function takes two positive\
    \ numbers x and y and returns the\n    biggest even integer number that is in\
    \ the range [x, y] inclusive. If \n    there's no such number, then the function\
    \ should return -1.\n\n    For example:\n    >>> choose_num(12L, 15L)\n    14L\n\
    \    >>> choose_num(13L, 12L)\n    -1L\n    \n*/\nlong choose_num(long x, long\
    \ y) \n{\n    long result = -1;\n    if (x % 2 == 0)\n    {\n        result =\
    \ x;\n    }\n    else\n    {\n        result = x + 1;\n    }\n    if (result >\
    \ y)\n    {\n        result = -1;\n    }\n    return result;\n}\nunittest\n{\n\
    \    alias candidate = choose_num;\n\n    assert(candidate(12L, 15L) == 14L);\n\
    \    assert(candidate(13L, 12L) == -1L);\n    assert(candidate(33L, 12354L) ==\
    \ 12354L);\n    assert(candidate(5234L, 5233L) == -1L);\n    assert(candidate(6L,\
    \ 29L) == 28L);\n    assert(candidate(27L, 10L) == -1L);\n    assert(candidate(7L,\
    \ 7L) == -1L);\n    assert(candidate(546L, 546L) == 546L);\n}\nvoid main(){}"
  status: Exception
  stderr: 'b''core.exception.AssertError@/tmp/tmpigxyzbx6.d(36): unittest failure\n----------------\n??:?
    _d_unittestp [0x427e1d]\n??:? void tmpigxyzbx6.__unittest_L32_C1() [0x427a79]\n??:?
    void tmpigxyzbx6.__modtest() [0x427ba0]\n??:? int core.runtime.runModuleUnitTests().__foreachbody2(object.ModuleInfo*)
    [0x42bb43]\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)).__lambda2(immutable(object.ModuleInfo*))
    [0x42a9d6]\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))).__foreachbody2(ref
    rt.sections_elf_shared.DSO) [0x42fb69]\n??:? int rt.sections_elf_shared.DSO.opApply(scope
    int delegate(ref rt.sections_elf_shared.DSO)) [0x430018]\n??:? int rt.minfo.moduleinfos_apply(scope
    int delegate(immutable(object.ModuleInfo*))) [0x42faf5]\n??:? int object.ModuleInfo.opApply(scope
    int delegate(object.ModuleInfo*)) [0x42a9ad]\n??:? runModuleUnitTests [0x42b919]\n??:?
    void rt.dmain2._d_run_main(int, char**, extern (C) int function(char[][])*).runAll()
    [0x42826c]\n??:? void rt.dmain2._d_run_main(int, char**, extern (C) int function(char[][])*).tryExec(scope
    void delegate()) [0x4281f3]\n??:? _d_run_main [0x42815e]\n??:? main [0x427bb3]\n??:?
    __libc_start_main [0x528cc554]\n1/1 unittests FAILED\n'''
  stdout: b''
- exit_code: 1
  program: "import std.typecons;\nimport std.math;\n/*\nThis function takes two positive\
    \ numbers x and y and returns the\n    biggest even integer number that is in\
    \ the range [x, y] inclusive. If \n    there's no such number, then the function\
    \ should return -1.\n\n    For example:\n    >>> choose_num(12L, 15L)\n    14L\n\
    \    >>> choose_num(13L, 12L)\n    -1L\n    \n*/\nlong choose_num(long x, long\
    \ y) \n{\n    long result = -1;\n    long i = x;\n    while (i <= y)\n    {\n\
    \        if (i % 2 == 0)\n        {\n            result = i;\n        }\n    \
    \    i++;\n    }\n    return result;\n}\nunittest\n{\n    alias candidate = choose_num;\n\
    \n    assert(candidate(12L, 15L) == 14L);\n    assert(candidate(13L, 12L) == -1L);\n\
    \    assert(candidate(33L, 12354L) == 12354L);\n    assert(candidate(5234L, 5233L)\
    \ == -1L);\n    assert(candidate(6L, 29L) == 28L);\n    assert(candidate(27L,\
    \ 10L) == -1L);\n    assert(candidate(7L, 7L) == -1L);\n    assert(candidate(546L,\
    \ 546L) == 546L);\n}\nvoid main(){}"
  status: SyntaxError
  stderr: 'b''Error: cannot find source code for runtime library file \''object.d\''\n       dmd
    might not be correctly installed. Run \''dmd -man\'' for installation instructions.\nimport
    path[0] = /tmp\nFailed: ["dmd", "-unittest", "-v", "-o-", "/tmp/tmpw7x56_bi.d",
    "-I/tmp"]\n'''
  stdout: b''
  timestamp: 1659793719
- exit_code: 1
  program: "import std.typecons;\nimport std.math;\n/*\nThis function takes two positive\
    \ numbers x and y and returns the\n    biggest even integer number that is in\
    \ the range [x, y] inclusive. If \n    there's no such number, then the function\
    \ should return -1.\n\n    For example:\n    >>> choose_num(12L, 15L)\n    14L\n\
    \    >>> choose_num(13L, 12L)\n    -1L\n    \n*/\nlong choose_num(long x, long\
    \ y) \n{\n    long result = -1;\n    foreach(i; x..y+1)\n    {\n        if(i %\
    \ 2 == 0)\n        {\n            result = i;\n        }\n    }\n    return result;\n\
    }\nunittest\n{\n    alias candidate = choose_num;\n\n    assert(candidate(12L,\
    \ 15L) == 14L);\n    assert(candidate(13L, 12L) == -1L);\n    assert(candidate(33L,\
    \ 12354L) == 12354L);\n    assert(candidate(5234L, 5233L) == -1L);\n    assert(candidate(6L,\
    \ 29L) == 28L);\n    assert(candidate(27L, 10L) == -1L);\n    assert(candidate(7L,\
    \ 7L) == -1L);\n    assert(candidate(546L, 546L) == 546L);\n}\nvoid main(){}"
  status: SyntaxError
  stderr: 'b''Error: cannot find source code for runtime library file \''object.d\''\n       dmd
    might not be correctly installed. Run \''dmd -man\'' for installation instructions.\nimport
    path[0] = /tmp\nFailed: ["dmd", "-unittest", "-v", "-o-", "/tmp/tmpf89oph2c.d",
    "-I/tmp"]\n'''
  stdout: b''
  timestamp: 1659793719
- exit_code: 1
  program: "import std.typecons;\nimport std.math;\n/*\nThis function takes two positive\
    \ numbers x and y and returns the\n    biggest even integer number that is in\
    \ the range [x, y] inclusive. If \n    there's no such number, then the function\
    \ should return -1.\n\n    For example:\n    >>> choose_num(12L, 15L)\n    14L\n\
    \    >>> choose_num(13L, 12L)\n    -1L\n    \n*/\nlong choose_num(long x, long\
    \ y) \n{\n    if (x > y)\n        return -1;\n    else if (x % 2 == 0)\n     \
    \   return x;\n    else\n        return x + 1;\n}\nunittest\n{\n    alias candidate\
    \ = choose_num;\n\n    assert(candidate(12L, 15L) == 14L);\n    assert(candidate(13L,\
    \ 12L) == -1L);\n    assert(candidate(33L, 12354L) == 12354L);\n    assert(candidate(5234L,\
    \ 5233L) == -1L);\n    assert(candidate(6L, 29L) == 28L);\n    assert(candidate(27L,\
    \ 10L) == -1L);\n    assert(candidate(7L, 7L) == -1L);\n    assert(candidate(546L,\
    \ 546L) == 546L);\n}\nvoid main(){}"
  status: SyntaxError
  stderr: 'b''Error: cannot find source code for runtime library file \''object.d\''\n       dmd
    might not be correctly installed. Run \''dmd -man\'' for installation instructions.\nimport
    path[0] = /tmp\nFailed: ["dmd", "-unittest", "-v", "-o-", "/tmp/tmpzdiug8nr.d",
    "-I/tmp"]\n'''
  stdout: b''
  timestamp: 1659793719
- exit_code: 1
  program: "import std.typecons;\nimport std.math;\n/*\nThis function takes two positive\
    \ numbers x and y and returns the\n    biggest even integer number that is in\
    \ the range [x, y] inclusive. If \n    there's no such number, then the function\
    \ should return -1.\n\n    For example:\n    >>> choose_num(12L, 15L)\n    14L\n\
    \    >>> choose_num(13L, 12L)\n    -1L\n    \n*/\nlong choose_num(long x, long\
    \ y) \n{\n    long result = -1;\n    if (x > y)\n    {\n        return result;\n\
    \    }\n    else\n    {\n        for (long i = y; i >= x; i--)\n        {\n  \
    \          if (i % 2 == 0)\n            {\n                result = i;\n     \
    \           break;\n            }\n        }\n    }\n    return result;\n}\nunittest\n\
    {\n    alias candidate = choose_num;\n\n    assert(candidate(12L, 15L) == 14L);\n\
    \    assert(candidate(13L, 12L) == -1L);\n    assert(candidate(33L, 12354L) ==\
    \ 12354L);\n    assert(candidate(5234L, 5233L) == -1L);\n    assert(candidate(6L,\
    \ 29L) == 28L);\n    assert(candidate(27L, 10L) == -1L);\n    assert(candidate(7L,\
    \ 7L) == -1L);\n    assert(candidate(546L, 546L) == 546L);\n}\nvoid main(){}"
  status: SyntaxError
  stderr: 'b''Error: cannot find source code for runtime library file \''object.d\''\n       dmd
    might not be correctly installed. Run \''dmd -man\'' for installation instructions.\nimport
    path[0] = /tmp\nFailed: ["dmd", "-unittest", "-v", "-o-", "/tmp/tmplud42hfw.d",
    "-I/tmp"]\n'''
  stdout: b''
  timestamp: 1659793719
- exit_code: 1
  program: "import std.typecons;\nimport std.math;\n/*\nThis function takes two positive\
    \ numbers x and y and returns the\n    biggest even integer number that is in\
    \ the range [x, y] inclusive. If \n    there's no such number, then the function\
    \ should return -1.\n\n    For example:\n    >>> choose_num(12L, 15L)\n    14L\n\
    \    >>> choose_num(13L, 12L)\n    -1L\n    \n*/\nlong choose_num(long x, long\
    \ y) \n{\n    long result = -1;\n    if (x % 2 == 0)\n    {\n        result =\
    \ x;\n    }\n    else\n    {\n        result = x + 1;\n    }\n    if (result >\
    \ y)\n    {\n        result = -1;\n    }\n    return result;\n}\nunittest\n{\n\
    \    alias candidate = choose_num;\n\n    assert(candidate(12L, 15L) == 14L);\n\
    \    assert(candidate(13L, 12L) == -1L);\n    assert(candidate(33L, 12354L) ==\
    \ 12354L);\n    assert(candidate(5234L, 5233L) == -1L);\n    assert(candidate(6L,\
    \ 29L) == 28L);\n    assert(candidate(27L, 10L) == -1L);\n    assert(candidate(7L,\
    \ 7L) == -1L);\n    assert(candidate(546L, 546L) == 546L);\n}\nvoid main(){}"
  status: Exception
  stderr: 'b''core.exception.AssertError@/tmp/tmpigxyzbx6.d(36): unittest failure\n----------------\n??:?
    _d_unittestp [0x427e1d]\n??:? void tmpigxyzbx6.__unittest_L32_C1() [0x427a79]\n??:?
    void tmpigxyzbx6.__modtest() [0x427ba0]\n??:? int core.runtime.runModuleUnitTests().__foreachbody2(object.ModuleInfo*)
    [0x42bb43]\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)).__lambda2(immutable(object.ModuleInfo*))
    [0x42a9d6]\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))).__foreachbody2(ref
    rt.sections_elf_shared.DSO) [0x42fb69]\n??:? int rt.sections_elf_shared.DSO.opApply(scope
    int delegate(ref rt.sections_elf_shared.DSO)) [0x430018]\n??:? int rt.minfo.moduleinfos_apply(scope
    int delegate(immutable(object.ModuleInfo*))) [0x42faf5]\n??:? int object.ModuleInfo.opApply(scope
    int delegate(object.ModuleInfo*)) [0x42a9ad]\n??:? runModuleUnitTests [0x42b919]\n??:?
    void rt.dmain2._d_run_main(int, char**, extern (C) int function(char[][])*).runAll()
    [0x42826c]\n??:? void rt.dmain2._d_run_main(int, char**, extern (C) int function(char[][])*).tryExec(scope
    void delegate()) [0x4281f3]\n??:? _d_run_main [0x42815e]\n??:? main [0x427bb3]\n??:?
    __libc_start_main [0x528cc554]\n1/1 unittests FAILED\n'''
  stdout: b''
- exit_code: 1
  program: "import std.typecons;\nimport std.math;\n/*\nThis function takes two positive\
    \ numbers x and y and returns the\n    biggest even integer number that is in\
    \ the range [x, y] inclusive. If \n    there's no such number, then the function\
    \ should return -1.\n\n    For example:\n    >>> choose_num(12L, 15L)\n    14L\n\
    \    >>> choose_num(13L, 12L)\n    -1L\n    \n*/\nlong choose_num(long x, long\
    \ y) \n{\n    long result = -1;\n    if (x % 2 == 0)\n    {\n        result =\
    \ x;\n    }\n    else\n    {\n        result = x + 1;\n    }\n    if (result >\
    \ y)\n    {\n        result = -1;\n    }\n    return result;\n}\nunittest\n{\n\
    \    alias candidate = choose_num;\n\n    assert(candidate(12L, 15L) == 14L);\n\
    \    assert(candidate(13L, 12L) == -1L);\n    assert(candidate(33L, 12354L) ==\
    \ 12354L);\n    assert(candidate(5234L, 5233L) == -1L);\n    assert(candidate(6L,\
    \ 29L) == 28L);\n    assert(candidate(27L, 10L) == -1L);\n    assert(candidate(7L,\
    \ 7L) == -1L);\n    assert(candidate(546L, 546L) == 546L);\n}\nvoid main(){}"
  status: Exception
  stderr: 'b''core.exception.AssertError@/tmp/tmpigxyzbx6.d(36): unittest failure\n----------------\n??:?
    _d_unittestp [0x427e1d]\n??:? void tmpigxyzbx6.__unittest_L32_C1() [0x427a79]\n??:?
    void tmpigxyzbx6.__modtest() [0x427ba0]\n??:? int core.runtime.runModuleUnitTests().__foreachbody2(object.ModuleInfo*)
    [0x42bb43]\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)).__lambda2(immutable(object.ModuleInfo*))
    [0x42a9d6]\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))).__foreachbody2(ref
    rt.sections_elf_shared.DSO) [0x42fb69]\n??:? int rt.sections_elf_shared.DSO.opApply(scope
    int delegate(ref rt.sections_elf_shared.DSO)) [0x430018]\n??:? int rt.minfo.moduleinfos_apply(scope
    int delegate(immutable(object.ModuleInfo*))) [0x42faf5]\n??:? int object.ModuleInfo.opApply(scope
    int delegate(object.ModuleInfo*)) [0x42a9ad]\n??:? runModuleUnitTests [0x42b919]\n??:?
    void rt.dmain2._d_run_main(int, char**, extern (C) int function(char[][])*).runAll()
    [0x42826c]\n??:? void rt.dmain2._d_run_main(int, char**, extern (C) int function(char[][])*).tryExec(scope
    void delegate()) [0x4281f3]\n??:? _d_run_main [0x42815e]\n??:? main [0x427bb3]\n??:?
    __libc_start_main [0x528cc554]\n1/1 unittests FAILED\n'''
  stdout: b''
- exit_code: 1
  program: "import std.typecons;\nimport std.math;\n/*\nThis function takes two positive\
    \ numbers x and y and returns the\n    biggest even integer number that is in\
    \ the range [x, y] inclusive. If \n    there's no such number, then the function\
    \ should return -1.\n\n    For example:\n    >>> choose_num(12L, 15L)\n    14L\n\
    \    >>> choose_num(13L, 12L)\n    -1L\n    \n*/\nlong choose_num(long x, long\
    \ y) \n{\n    if(x > y)\n    {\n        return -1L;\n    }\n    else\n    {\n\
    \        long z = x;\n        while(z <= y)\n        {\n            if(z % 2 ==\
    \ 0)\n            {\n                return z;\n            }\n            z++;\n\
    \        }\n        return -1L;\n    }\n}\nunittest\n{\n    alias candidate =\
    \ choose_num;\n\n    assert(candidate(12L, 15L) == 14L);\n    assert(candidate(13L,\
    \ 12L) == -1L);\n    assert(candidate(33L, 12354L) == 12354L);\n    assert(candidate(5234L,\
    \ 5233L) == -1L);\n    assert(candidate(6L, 29L) == 28L);\n    assert(candidate(27L,\
    \ 10L) == -1L);\n    assert(candidate(7L, 7L) == -1L);\n    assert(candidate(546L,\
    \ 546L) == 546L);\n}\nvoid main(){}"
  status: SyntaxError
  stderr: 'b''Error: cannot find source code for runtime library file \''object.d\''\n       dmd
    might not be correctly installed. Run \''dmd -man\'' for installation instructions.\nimport
    path[0] = /tmp\nFailed: ["dmd", "-unittest", "-v", "-o-", "/tmp/tmpmx7useei.d",
    "-I/tmp"]\n'''
  stdout: b''
  timestamp: 1659793719
- exit_code: 1
  program: "import std.typecons;\nimport std.math;\n/*\nThis function takes two positive\
    \ numbers x and y and returns the\n    biggest even integer number that is in\
    \ the range [x, y] inclusive. If \n    there's no such number, then the function\
    \ should return -1.\n\n    For example:\n    >>> choose_num(12L, 15L)\n    14L\n\
    \    >>> choose_num(13L, 12L)\n    -1L\n    \n*/\nlong choose_num(long x, long\
    \ y) \n{\n    long result = -1;\n    if (x % 2 == 0)\n    {\n        result =\
    \ x;\n    }\n    else\n    {\n        result = x + 1;\n    }\n    if (result >\
    \ y)\n    {\n        result = -1;\n    }\n    return result;\n}\nunittest\n{\n\
    \    alias candidate = choose_num;\n\n    assert(candidate(12L, 15L) == 14L);\n\
    \    assert(candidate(13L, 12L) == -1L);\n    assert(candidate(33L, 12354L) ==\
    \ 12354L);\n    assert(candidate(5234L, 5233L) == -1L);\n    assert(candidate(6L,\
    \ 29L) == 28L);\n    assert(candidate(27L, 10L) == -1L);\n    assert(candidate(7L,\
    \ 7L) == -1L);\n    assert(candidate(546L, 546L) == 546L);\n}\nvoid main(){}"
  status: Exception
  stderr: 'b''core.exception.AssertError@/tmp/tmpigxyzbx6.d(36): unittest failure\n----------------\n??:?
    _d_unittestp [0x427e1d]\n??:? void tmpigxyzbx6.__unittest_L32_C1() [0x427a79]\n??:?
    void tmpigxyzbx6.__modtest() [0x427ba0]\n??:? int core.runtime.runModuleUnitTests().__foreachbody2(object.ModuleInfo*)
    [0x42bb43]\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)).__lambda2(immutable(object.ModuleInfo*))
    [0x42a9d6]\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))).__foreachbody2(ref
    rt.sections_elf_shared.DSO) [0x42fb69]\n??:? int rt.sections_elf_shared.DSO.opApply(scope
    int delegate(ref rt.sections_elf_shared.DSO)) [0x430018]\n??:? int rt.minfo.moduleinfos_apply(scope
    int delegate(immutable(object.ModuleInfo*))) [0x42faf5]\n??:? int object.ModuleInfo.opApply(scope
    int delegate(object.ModuleInfo*)) [0x42a9ad]\n??:? runModuleUnitTests [0x42b919]\n??:?
    void rt.dmain2._d_run_main(int, char**, extern (C) int function(char[][])*).runAll()
    [0x42826c]\n??:? void rt.dmain2._d_run_main(int, char**, extern (C) int function(char[][])*).tryExec(scope
    void delegate()) [0x4281f3]\n??:? _d_run_main [0x42815e]\n??:? main [0x427bb3]\n??:?
    __libc_start_main [0x528cc554]\n1/1 unittests FAILED\n'''
  stdout: b''
- exit_code: 1
  program: "import std.typecons;\nimport std.math;\n/*\nThis function takes two positive\
    \ numbers x and y and returns the\n    biggest even integer number that is in\
    \ the range [x, y] inclusive. If \n    there's no such number, then the function\
    \ should return -1.\n\n    For example:\n    >>> choose_num(12L, 15L)\n    14L\n\
    \    >>> choose_num(13L, 12L)\n    -1L\n    \n*/\nlong choose_num(long x, long\
    \ y) \n{\n    if (x > y)\n    {\n        return -1L;\n    }\n    else if (x %\
    \ 2 == 0)\n    {\n        return x;\n    }\n    else\n    {\n        return choose_num(x\
    \ + 1, y);\n    }\n}\nunittest\n{\n    alias candidate = choose_num;\n\n    assert(candidate(12L,\
    \ 15L) == 14L);\n    assert(candidate(13L, 12L) == -1L);\n    assert(candidate(33L,\
    \ 12354L) == 12354L);\n    assert(candidate(5234L, 5233L) == -1L);\n    assert(candidate(6L,\
    \ 29L) == 28L);\n    assert(candidate(27L, 10L) == -1L);\n    assert(candidate(7L,\
    \ 7L) == -1L);\n    assert(candidate(546L, 546L) == 546L);\n}\nvoid main(){}"
  status: SyntaxError
  stderr: 'b''Error: cannot find source code for runtime library file \''object.d\''\n       dmd
    might not be correctly installed. Run \''dmd -man\'' for installation instructions.\nimport
    path[0] = /tmp\nFailed: ["dmd", "-unittest", "-v", "-o-", "/tmp/tmprqxrzaat.d",
    "-I/tmp"]\n'''
  stdout: b''
  timestamp: 1659793719
- exit_code: 1
  program: "import std.typecons;\nimport std.math;\n/*\nThis function takes two positive\
    \ numbers x and y and returns the\n    biggest even integer number that is in\
    \ the range [x, y] inclusive. If \n    there's no such number, then the function\
    \ should return -1.\n\n    For example:\n    >>> choose_num(12L, 15L)\n    14L\n\
    \    >>> choose_num(13L, 12L)\n    -1L\n    \n*/\nlong choose_num(long x, long\
    \ y) \n{\n    long result = -1;\n    if (x % 2 == 0)\n    {\n        result =\
    \ x;\n    }\n    else\n    {\n        result = x + 1;\n    }\n    if (result >\
    \ y)\n    {\n        result = -1;\n    }\n    return result;\n}\n/*\nThis function\
    \ takes a positive number n and returns the sum of the\n    first n odd numbers.\n\
    unittest\n{\n    alias candidate = choose_num;\n\n    assert(candidate(12L, 15L)\
    \ == 14L);\n    assert(candidate(13L, 12L) == -1L);\n    assert(candidate(33L,\
    \ 12354L) == 12354L);\n    assert(candidate(5234L, 5233L) == -1L);\n    assert(candidate(6L,\
    \ 29L) == 28L);\n    assert(candidate(27L, 10L) == -1L);\n    assert(candidate(7L,\
    \ 7L) == -1L);\n    assert(candidate(546L, 546L) == 546L);\n}\nvoid main(){}"
  status: SyntaxError
  stderr: 'b''/tmp/tmp3wscaaej.d(32): Error: unterminated /* */ comment\nFailed: ["dmd",
    "-unittest", "-v", "-o-", "/tmp/tmp3wscaaej.d", "-I/tmp"]\n'''
  stdout: b''
  timestamp: 1659793719
- exit_code: 1
  program: "import std.typecons;\nimport std.math;\n/*\nThis function takes two positive\
    \ numbers x and y and returns the\n    biggest even integer number that is in\
    \ the range [x, y] inclusive. If \n    there's no such number, then the function\
    \ should return -1.\n\n    For example:\n    >>> choose_num(12L, 15L)\n    14L\n\
    \    >>> choose_num(13L, 12L)\n    -1L\n    \n*/\nlong choose_num(long x, long\
    \ y) \n{\n    long result = -1;\n    if (x % 2 == 0)\n    {\n        result =\
    \ x;\n    }\n    else\n    {\n        result = x + 1;\n    }\n    if (result >\
    \ y)\n    {\n        result = -1;\n    }\n    return result;\n}\nunittest\n{\n\
    \    alias candidate = choose_num;\n\n    assert(candidate(12L, 15L) == 14L);\n\
    \    assert(candidate(13L, 12L) == -1L);\n    assert(candidate(33L, 12354L) ==\
    \ 12354L);\n    assert(candidate(5234L, 5233L) == -1L);\n    assert(candidate(6L,\
    \ 29L) == 28L);\n    assert(candidate(27L, 10L) == -1L);\n    assert(candidate(7L,\
    \ 7L) == -1L);\n    assert(candidate(546L, 546L) == 546L);\n}\nvoid main(){}"
  status: Exception
  stderr: 'b''core.exception.AssertError@/tmp/tmpigxyzbx6.d(36): unittest failure\n----------------\n??:?
    _d_unittestp [0x427e1d]\n??:? void tmpigxyzbx6.__unittest_L32_C1() [0x427a79]\n??:?
    void tmpigxyzbx6.__modtest() [0x427ba0]\n??:? int core.runtime.runModuleUnitTests().__foreachbody2(object.ModuleInfo*)
    [0x42bb43]\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)).__lambda2(immutable(object.ModuleInfo*))
    [0x42a9d6]\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))).__foreachbody2(ref
    rt.sections_elf_shared.DSO) [0x42fb69]\n??:? int rt.sections_elf_shared.DSO.opApply(scope
    int delegate(ref rt.sections_elf_shared.DSO)) [0x430018]\n??:? int rt.minfo.moduleinfos_apply(scope
    int delegate(immutable(object.ModuleInfo*))) [0x42faf5]\n??:? int object.ModuleInfo.opApply(scope
    int delegate(object.ModuleInfo*)) [0x42a9ad]\n??:? runModuleUnitTests [0x42b919]\n??:?
    void rt.dmain2._d_run_main(int, char**, extern (C) int function(char[][])*).runAll()
    [0x42826c]\n??:? void rt.dmain2._d_run_main(int, char**, extern (C) int function(char[][])*).tryExec(scope
    void delegate()) [0x4281f3]\n??:? _d_run_main [0x42815e]\n??:? main [0x427bb3]\n??:?
    __libc_start_main [0x528cc554]\n1/1 unittests FAILED\n'''
  stdout: b''
- exit_code: 1
  program: "import std.typecons;\nimport std.math;\n/*\nThis function takes two positive\
    \ numbers x and y and returns the\n    biggest even integer number that is in\
    \ the range [x, y] inclusive. If \n    there's no such number, then the function\
    \ should return -1.\n\n    For example:\n    >>> choose_num(12L, 15L)\n    14L\n\
    \    >>> choose_num(13L, 12L)\n    -1L\n    \n*/\nlong choose_num(long x, long\
    \ y) \n{\n    if (x > y)\n        return -1;\n    else if (x % 2 == 0)\n     \
    \   return x;\n    else\n        return choose_num(x + 1, y);\n}\nunittest\n{\n\
    \    alias candidate = choose_num;\n\n    assert(candidate(12L, 15L) == 14L);\n\
    \    assert(candidate(13L, 12L) == -1L);\n    assert(candidate(33L, 12354L) ==\
    \ 12354L);\n    assert(candidate(5234L, 5233L) == -1L);\n    assert(candidate(6L,\
    \ 29L) == 28L);\n    assert(candidate(27L, 10L) == -1L);\n    assert(candidate(7L,\
    \ 7L) == -1L);\n    assert(candidate(546L, 546L) == 546L);\n}\nvoid main(){}"
  status: SyntaxError
  stderr: 'b''Error: cannot find source code for runtime library file \''object.d\''\n       dmd
    might not be correctly installed. Run \''dmd -man\'' for installation instructions.\nimport
    path[0] = /tmp\nFailed: ["dmd", "-unittest", "-v", "-o-", "/tmp/tmpgez4y1wt.d",
    "-I/tmp"]\n'''
  stdout: b''
  timestamp: 1659793719
- exit_code: 1
  program: "import std.typecons;\nimport std.math;\n/*\nThis function takes two positive\
    \ numbers x and y and returns the\n    biggest even integer number that is in\
    \ the range [x, y] inclusive. If \n    there's no such number, then the function\
    \ should return -1.\n\n    For example:\n    >>> choose_num(12L, 15L)\n    14L\n\
    \    >>> choose_num(13L, 12L)\n    -1L\n    \n*/\nlong choose_num(long x, long\
    \ y) \n{\n    long result = -1;\n    if (x > y)\n    {\n        return result;\n\
    \    }\n    else\n    {\n        long i = x;\n        while (i <= y)\n       \
    \ {\n            if (i % 2 == 0)\n            {\n                result = i;\n\
    \            }\n            i++;\n        }\n    }\n    return result;\n}\nunittest\n\
    {\n    alias candidate = choose_num;\n\n    assert(candidate(12L, 15L) == 14L);\n\
    \    assert(candidate(13L, 12L) == -1L);\n    assert(candidate(33L, 12354L) ==\
    \ 12354L);\n    assert(candidate(5234L, 5233L) == -1L);\n    assert(candidate(6L,\
    \ 29L) == 28L);\n    assert(candidate(27L, 10L) == -1L);\n    assert(candidate(7L,\
    \ 7L) == -1L);\n    assert(candidate(546L, 546L) == 546L);\n}\nvoid main(){}"
  status: SyntaxError
  stderr: 'b''Error: cannot find source code for runtime library file \''object.d\''\n       dmd
    might not be correctly installed. Run \''dmd -man\'' for installation instructions.\nimport
    path[0] = /tmp\nFailed: ["dmd", "-unittest", "-v", "-o-", "/tmp/tmpjfm171t2.d",
    "-I/tmp"]\n'''
  stdout: b''
  timestamp: 1659793719
- exit_code: 0
  program: "import std.typecons;\nimport std.math;\n/*\nThis function takes two positive\
    \ numbers x and y and returns the\n    biggest even integer number that is in\
    \ the range [x, y] inclusive. If \n    there's no such number, then the function\
    \ should return -1.\n\n    For example:\n    >>> choose_num(12L, 15L)\n    14L\n\
    \    >>> choose_num(13L, 12L)\n    -1L\n    \n*/\nlong choose_num(long x, long\
    \ y) \n{\n    long result = -1;\n    if (x > y)\n    {\n        return result;\n\
    \    }\n    else\n    {\n        for (long i = x; i <= y; i++)\n        {\n  \
    \          if (i % 2 == 0)\n            {\n                result = i;\n     \
    \       }\n        }\n    }\n    return result;\n}\nunittest\n{\n    alias candidate\
    \ = choose_num;\n\n    assert(candidate(12L, 15L) == 14L);\n    assert(candidate(13L,\
    \ 12L) == -1L);\n    assert(candidate(33L, 12354L) == 12354L);\n    assert(candidate(5234L,\
    \ 5233L) == -1L);\n    assert(candidate(6L, 29L) == 28L);\n    assert(candidate(27L,\
    \ 10L) == -1L);\n    assert(candidate(7L, 7L) == -1L);\n    assert(candidate(546L,\
    \ 546L) == 546L);\n}\nvoid main(){}"
  status: OK
  stderr: b''
  stdout: b''
- exit_code: 1
  program: "import std.typecons;\nimport std.math;\n/*\nThis function takes two positive\
    \ numbers x and y and returns the\n    biggest even integer number that is in\
    \ the range [x, y] inclusive. If \n    there's no such number, then the function\
    \ should return -1.\n\n    For example:\n    >>> choose_num(12L, 15L)\n    14L\n\
    \    >>> choose_num(13L, 12L)\n    -1L\n    \n*/\nlong choose_num(long x, long\
    \ y) \n{\n    long result = -1;\n    if (x % 2 == 0)\n    {\n        result =\
    \ x;\n    }\n    else\n    {\n        result = x + 1;\n    }\n    if (result >\
    \ y)\n    {\n        result = -1;\n    }\n    return result;\n}\nunittest\n{\n\
    \    alias candidate = choose_num;\n\n    assert(candidate(12L, 15L) == 14L);\n\
    \    assert(candidate(13L, 12L) == -1L);\n    assert(candidate(33L, 12354L) ==\
    \ 12354L);\n    assert(candidate(5234L, 5233L) == -1L);\n    assert(candidate(6L,\
    \ 29L) == 28L);\n    assert(candidate(27L, 10L) == -1L);\n    assert(candidate(7L,\
    \ 7L) == -1L);\n    assert(candidate(546L, 546L) == 546L);\n}\nvoid main(){}"
  status: Exception
  stderr: 'b''core.exception.AssertError@/tmp/tmpigxyzbx6.d(36): unittest failure\n----------------\n??:?
    _d_unittestp [0x427e1d]\n??:? void tmpigxyzbx6.__unittest_L32_C1() [0x427a79]\n??:?
    void tmpigxyzbx6.__modtest() [0x427ba0]\n??:? int core.runtime.runModuleUnitTests().__foreachbody2(object.ModuleInfo*)
    [0x42bb43]\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)).__lambda2(immutable(object.ModuleInfo*))
    [0x42a9d6]\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))).__foreachbody2(ref
    rt.sections_elf_shared.DSO) [0x42fb69]\n??:? int rt.sections_elf_shared.DSO.opApply(scope
    int delegate(ref rt.sections_elf_shared.DSO)) [0x430018]\n??:? int rt.minfo.moduleinfos_apply(scope
    int delegate(immutable(object.ModuleInfo*))) [0x42faf5]\n??:? int object.ModuleInfo.opApply(scope
    int delegate(object.ModuleInfo*)) [0x42a9ad]\n??:? runModuleUnitTests [0x42b919]\n??:?
    void rt.dmain2._d_run_main(int, char**, extern (C) int function(char[][])*).runAll()
    [0x42826c]\n??:? void rt.dmain2._d_run_main(int, char**, extern (C) int function(char[][])*).tryExec(scope
    void delegate()) [0x4281f3]\n??:? _d_run_main [0x42815e]\n??:? main [0x427bb3]\n??:?
    __libc_start_main [0x528cc554]\n1/1 unittests FAILED\n'''
  stdout: b''
- exit_code: 1
  program: "import std.typecons;\nimport std.math;\n/*\nThis function takes two positive\
    \ numbers x and y and returns the\n    biggest even integer number that is in\
    \ the range [x, y] inclusive. If \n    there's no such number, then the function\
    \ should return -1.\n\n    For example:\n    >>> choose_num(12L, 15L)\n    14L\n\
    \    >>> choose_num(13L, 12L)\n    -1L\n    \n*/\nlong choose_num(long x, long\
    \ y) \n{\n    long result = -1;\n    foreach(i; x..y+1)\n    {\n        if(i %\
    \ 2 == 0)\n        {\n            result = i;\n        }\n    }\n    return result;\n\
    }\nunittest\n{\n    alias candidate = choose_num;\n\n    assert(candidate(12L,\
    \ 15L) == 14L);\n    assert(candidate(13L, 12L) == -1L);\n    assert(candidate(33L,\
    \ 12354L) == 12354L);\n    assert(candidate(5234L, 5233L) == -1L);\n    assert(candidate(6L,\
    \ 29L) == 28L);\n    assert(candidate(27L, 10L) == -1L);\n    assert(candidate(7L,\
    \ 7L) == -1L);\n    assert(candidate(546L, 546L) == 546L);\n}\nvoid main(){}"
  status: SyntaxError
  stderr: 'b''Error: cannot find source code for runtime library file \''object.d\''\n       dmd
    might not be correctly installed. Run \''dmd -man\'' for installation instructions.\nimport
    path[0] = /tmp\nFailed: ["dmd", "-unittest", "-v", "-o-", "/tmp/tmpf89oph2c.d",
    "-I/tmp"]\n'''
  stdout: b''
  timestamp: 1659793719
- exit_code: 1
  program: "import std.typecons;\nimport std.math;\n/*\nThis function takes two positive\
    \ numbers x and y and returns the\n    biggest even integer number that is in\
    \ the range [x, y] inclusive. If \n    there's no such number, then the function\
    \ should return -1.\n\n    For example:\n    >>> choose_num(12L, 15L)\n    14L\n\
    \    >>> choose_num(13L, 12L)\n    -1L\n    \n*/\nlong choose_num(long x, long\
    \ y) \n{\n    if (x > y)\n    {\n        return -1L;\n    }\n    else if (x %\
    \ 2 == 0)\n    {\n        return x;\n    }\n    else if (x % 2 == 1)\n    {\n\
    \        return choose_num(x + 1, y);\n    }\n}\nunittest\n{\n    alias candidate\
    \ = choose_num;\n\n    assert(candidate(12L, 15L) == 14L);\n    assert(candidate(13L,\
    \ 12L) == -1L);\n    assert(candidate(33L, 12354L) == 12354L);\n    assert(candidate(5234L,\
    \ 5233L) == -1L);\n    assert(candidate(6L, 29L) == 28L);\n    assert(candidate(27L,\
    \ 10L) == -1L);\n    assert(candidate(7L, 7L) == -1L);\n    assert(candidate(546L,\
    \ 546L) == 546L);\n}\nvoid main(){}"
  status: SyntaxError
  stderr: 'b''Error: cannot find source code for runtime library file \''object.d\''\n       dmd
    might not be correctly installed. Run \''dmd -man\'' for installation instructions.\nimport
    path[0] = /tmp\nFailed: ["dmd", "-unittest", "-v", "-o-", "/tmp/tmp3luk7hu9.d",
    "-I/tmp"]\n'''
  stdout: b''
  timestamp: 1659793719
- exit_code: 1
  program: "import std.typecons;\nimport std.math;\n/*\nThis function takes two positive\
    \ numbers x and y and returns the\n    biggest even integer number that is in\
    \ the range [x, y] inclusive. If \n    there's no such number, then the function\
    \ should return -1.\n\n    For example:\n    >>> choose_num(12L, 15L)\n    14L\n\
    \    >>> choose_num(13L, 12L)\n    -1L\n    \n*/\nlong choose_num(long x, long\
    \ y) \n{\n    long result = -1;\n    if (x <= y)\n    {\n        if (x % 2 ==\
    \ 0)\n        {\n            result = x;\n        }\n        else\n        {\n\
    \            result = x + 1;\n        }\n    }\n    return result;\n}\nunittest\n\
    {\n    alias candidate = choose_num;\n\n    assert(candidate(12L, 15L) == 14L);\n\
    \    assert(candidate(13L, 12L) == -1L);\n    assert(candidate(33L, 12354L) ==\
    \ 12354L);\n    assert(candidate(5234L, 5233L) == -1L);\n    assert(candidate(6L,\
    \ 29L) == 28L);\n    assert(candidate(27L, 10L) == -1L);\n    assert(candidate(7L,\
    \ 7L) == -1L);\n    assert(candidate(546L, 546L) == 546L);\n}\nvoid main(){}"
  status: SyntaxError
  stderr: 'b''Error: cannot find source code for runtime library file \''object.d\''\n       dmd
    might not be correctly installed. Run \''dmd -man\'' for installation instructions.\nimport
    path[0] = /tmp\nFailed: ["dmd", "-unittest", "-v", "-o-", "/tmp/tmpht30nzdk.d",
    "-I/tmp"]\n'''
  stdout: b''
  timestamp: 1659793719
- exit_code: 1
  program: "import std.typecons;\nimport std.math;\n/*\nThis function takes two positive\
    \ numbers x and y and returns the\n    biggest even integer number that is in\
    \ the range [x, y] inclusive. If \n    there's no such number, then the function\
    \ should return -1.\n\n    For example:\n    >>> choose_num(12L, 15L)\n    14L\n\
    \    >>> choose_num(13L, 12L)\n    -1L\n    \n*/\nlong choose_num(long x, long\
    \ y) \n{\n    long result = -1;\n    if (x % 2 == 0)\n    {\n        result =\
    \ x;\n    }\n    else\n    {\n        result = x + 1;\n    }\n    if (result >\
    \ y)\n    {\n        result = -1;\n    }\n    return result;\n}\nunittest\n{\n\
    \    alias candidate = choose_num;\n\n    assert(candidate(12L, 15L) == 14L);\n\
    \    assert(candidate(13L, 12L) == -1L);\n    assert(candidate(33L, 12354L) ==\
    \ 12354L);\n    assert(candidate(5234L, 5233L) == -1L);\n    assert(candidate(6L,\
    \ 29L) == 28L);\n    assert(candidate(27L, 10L) == -1L);\n    assert(candidate(7L,\
    \ 7L) == -1L);\n    assert(candidate(546L, 546L) == 546L);\n}\nvoid main(){}"
  status: Exception
  stderr: 'b''core.exception.AssertError@/tmp/tmpigxyzbx6.d(36): unittest failure\n----------------\n??:?
    _d_unittestp [0x427e1d]\n??:? void tmpigxyzbx6.__unittest_L32_C1() [0x427a79]\n??:?
    void tmpigxyzbx6.__modtest() [0x427ba0]\n??:? int core.runtime.runModuleUnitTests().__foreachbody2(object.ModuleInfo*)
    [0x42bb43]\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)).__lambda2(immutable(object.ModuleInfo*))
    [0x42a9d6]\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))).__foreachbody2(ref
    rt.sections_elf_shared.DSO) [0x42fb69]\n??:? int rt.sections_elf_shared.DSO.opApply(scope
    int delegate(ref rt.sections_elf_shared.DSO)) [0x430018]\n??:? int rt.minfo.moduleinfos_apply(scope
    int delegate(immutable(object.ModuleInfo*))) [0x42faf5]\n??:? int object.ModuleInfo.opApply(scope
    int delegate(object.ModuleInfo*)) [0x42a9ad]\n??:? runModuleUnitTests [0x42b919]\n??:?
    void rt.dmain2._d_run_main(int, char**, extern (C) int function(char[][])*).runAll()
    [0x42826c]\n??:? void rt.dmain2._d_run_main(int, char**, extern (C) int function(char[][])*).tryExec(scope
    void delegate()) [0x4281f3]\n??:? _d_run_main [0x42815e]\n??:? main [0x427bb3]\n??:?
    __libc_start_main [0x528cc554]\n1/1 unittests FAILED\n'''
  stdout: b''
- exit_code: 1
  program: "import std.typecons;\nimport std.math;\n/*\nThis function takes two positive\
    \ numbers x and y and returns the\n    biggest even integer number that is in\
    \ the range [x, y] inclusive. If \n    there's no such number, then the function\
    \ should return -1.\n\n    For example:\n    >>> choose_num(12L, 15L)\n    14L\n\
    \    >>> choose_num(13L, 12L)\n    -1L\n    \n*/\nlong choose_num(long x, long\
    \ y) \n{\n    long result = -1;\n    if (x % 2 == 0)\n    {\n        result =\
    \ x;\n    }\n    else\n    {\n        result = x + 1;\n    }\n    if (result >\
    \ y)\n    {\n        result = -1;\n    }\n    return result;\n}\nunittest\n{\n\
    \    alias candidate = choose_num;\n\n    assert(candidate(12L, 15L) == 14L);\n\
    \    assert(candidate(13L, 12L) == -1L);\n    assert(candidate(33L, 12354L) ==\
    \ 12354L);\n    assert(candidate(5234L, 5233L) == -1L);\n    assert(candidate(6L,\
    \ 29L) == 28L);\n    assert(candidate(27L, 10L) == -1L);\n    assert(candidate(7L,\
    \ 7L) == -1L);\n    assert(candidate(546L, 546L) == 546L);\n}\nvoid main(){}"
  status: Exception
  stderr: 'b''core.exception.AssertError@/tmp/tmpigxyzbx6.d(36): unittest failure\n----------------\n??:?
    _d_unittestp [0x427e1d]\n??:? void tmpigxyzbx6.__unittest_L32_C1() [0x427a79]\n??:?
    void tmpigxyzbx6.__modtest() [0x427ba0]\n??:? int core.runtime.runModuleUnitTests().__foreachbody2(object.ModuleInfo*)
    [0x42bb43]\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)).__lambda2(immutable(object.ModuleInfo*))
    [0x42a9d6]\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))).__foreachbody2(ref
    rt.sections_elf_shared.DSO) [0x42fb69]\n??:? int rt.sections_elf_shared.DSO.opApply(scope
    int delegate(ref rt.sections_elf_shared.DSO)) [0x430018]\n??:? int rt.minfo.moduleinfos_apply(scope
    int delegate(immutable(object.ModuleInfo*))) [0x42faf5]\n??:? int object.ModuleInfo.opApply(scope
    int delegate(object.ModuleInfo*)) [0x42a9ad]\n??:? runModuleUnitTests [0x42b919]\n??:?
    void rt.dmain2._d_run_main(int, char**, extern (C) int function(char[][])*).runAll()
    [0x42826c]\n??:? void rt.dmain2._d_run_main(int, char**, extern (C) int function(char[][])*).tryExec(scope
    void delegate()) [0x4281f3]\n??:? _d_run_main [0x42815e]\n??:? main [0x427bb3]\n??:?
    __libc_start_main [0x528cc554]\n1/1 unittests FAILED\n'''
  stdout: b''
- exit_code: 1
  program: "import std.typecons;\nimport std.math;\n/*\nThis function takes two positive\
    \ numbers x and y and returns the\n    biggest even integer number that is in\
    \ the range [x, y] inclusive. If \n    there's no such number, then the function\
    \ should return -1.\n\n    For example:\n    >>> choose_num(12L, 15L)\n    14L\n\
    \    >>> choose_num(13L, 12L)\n    -1L\n    \n*/\nlong choose_num(long x, long\
    \ y) \n{\n    if (x > y)\n    {\n        return -1L;\n    }\n    else if (x %\
    \ 2 == 0)\n    {\n        return x;\n    }\n    else\n    {\n        return choose_num(x\
    \ + 1, y);\n    }\n}\nunittest\n{\n    alias candidate = choose_num;\n\n    assert(candidate(12L,\
    \ 15L) == 14L);\n    assert(candidate(13L, 12L) == -1L);\n    assert(candidate(33L,\
    \ 12354L) == 12354L);\n    assert(candidate(5234L, 5233L) == -1L);\n    assert(candidate(6L,\
    \ 29L) == 28L);\n    assert(candidate(27L, 10L) == -1L);\n    assert(candidate(7L,\
    \ 7L) == -1L);\n    assert(candidate(546L, 546L) == 546L);\n}\nvoid main(){}"
  status: SyntaxError
  stderr: 'b''Error: cannot find source code for runtime library file \''object.d\''\n       dmd
    might not be correctly installed. Run \''dmd -man\'' for installation instructions.\nimport
    path[0] = /tmp\nFailed: ["dmd", "-unittest", "-v", "-o-", "/tmp/tmprqxrzaat.d",
    "-I/tmp"]\n'''
  stdout: b''
  timestamp: 1659793719
- exit_code: 1
  program: "import std.typecons;\nimport std.math;\n/*\nThis function takes two positive\
    \ numbers x and y and returns the\n    biggest even integer number that is in\
    \ the range [x, y] inclusive. If \n    there's no such number, then the function\
    \ should return -1.\n\n    For example:\n    >>> choose_num(12L, 15L)\n    14L\n\
    \    >>> choose_num(13L, 12L)\n    -1L\n    \n*/\nlong choose_num(long x, long\
    \ y) \n{\n    long result = -1;\n    if (x % 2 == 0)\n    {\n        result =\
    \ x;\n    }\n    else\n    {\n        result = x + 1;\n    }\n    if (result >\
    \ y)\n    {\n        result = -1;\n    }\n    return result;\n}\nunittest\n{\n\
    \    alias candidate = choose_num;\n\n    assert(candidate(12L, 15L) == 14L);\n\
    \    assert(candidate(13L, 12L) == -1L);\n    assert(candidate(33L, 12354L) ==\
    \ 12354L);\n    assert(candidate(5234L, 5233L) == -1L);\n    assert(candidate(6L,\
    \ 29L) == 28L);\n    assert(candidate(27L, 10L) == -1L);\n    assert(candidate(7L,\
    \ 7L) == -1L);\n    assert(candidate(546L, 546L) == 546L);\n}\nvoid main(){}"
  status: Exception
  stderr: 'b''core.exception.AssertError@/tmp/tmpigxyzbx6.d(36): unittest failure\n----------------\n??:?
    _d_unittestp [0x427e1d]\n??:? void tmpigxyzbx6.__unittest_L32_C1() [0x427a79]\n??:?
    void tmpigxyzbx6.__modtest() [0x427ba0]\n??:? int core.runtime.runModuleUnitTests().__foreachbody2(object.ModuleInfo*)
    [0x42bb43]\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)).__lambda2(immutable(object.ModuleInfo*))
    [0x42a9d6]\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))).__foreachbody2(ref
    rt.sections_elf_shared.DSO) [0x42fb69]\n??:? int rt.sections_elf_shared.DSO.opApply(scope
    int delegate(ref rt.sections_elf_shared.DSO)) [0x430018]\n??:? int rt.minfo.moduleinfos_apply(scope
    int delegate(immutable(object.ModuleInfo*))) [0x42faf5]\n??:? int object.ModuleInfo.opApply(scope
    int delegate(object.ModuleInfo*)) [0x42a9ad]\n??:? runModuleUnitTests [0x42b919]\n??:?
    void rt.dmain2._d_run_main(int, char**, extern (C) int function(char[][])*).runAll()
    [0x42826c]\n??:? void rt.dmain2._d_run_main(int, char**, extern (C) int function(char[][])*).tryExec(scope
    void delegate()) [0x4281f3]\n??:? _d_run_main [0x42815e]\n??:? main [0x427bb3]\n??:?
    __libc_start_main [0x528cc554]\n1/1 unittests FAILED\n'''
  stdout: b''
- exit_code: 1
  program: "import std.typecons;\nimport std.math;\n/*\nThis function takes two positive\
    \ numbers x and y and returns the\n    biggest even integer number that is in\
    \ the range [x, y] inclusive. If \n    there's no such number, then the function\
    \ should return -1.\n\n    For example:\n    >>> choose_num(12L, 15L)\n    14L\n\
    \    >>> choose_num(13L, 12L)\n    -1L\n    \n*/\nlong choose_num(long x, long\
    \ y) \n{\n    long result = -1;\n    if (x % 2 == 0)\n    {\n        result =\
    \ x;\n    }\n    else\n    {\n        result = x + 1;\n    }\n    if (result >\
    \ y)\n    {\n        result = -1;\n    }\n    return result;\n}\nunittest\n{\n\
    \    alias candidate = choose_num;\n\n    assert(candidate(12L, 15L) == 14L);\n\
    \    assert(candidate(13L, 12L) == -1L);\n    assert(candidate(33L, 12354L) ==\
    \ 12354L);\n    assert(candidate(5234L, 5233L) == -1L);\n    assert(candidate(6L,\
    \ 29L) == 28L);\n    assert(candidate(27L, 10L) == -1L);\n    assert(candidate(7L,\
    \ 7L) == -1L);\n    assert(candidate(546L, 546L) == 546L);\n}\nvoid main(){}"
  status: Exception
  stderr: 'b''core.exception.AssertError@/tmp/tmpigxyzbx6.d(36): unittest failure\n----------------\n??:?
    _d_unittestp [0x427e1d]\n??:? void tmpigxyzbx6.__unittest_L32_C1() [0x427a79]\n??:?
    void tmpigxyzbx6.__modtest() [0x427ba0]\n??:? int core.runtime.runModuleUnitTests().__foreachbody2(object.ModuleInfo*)
    [0x42bb43]\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)).__lambda2(immutable(object.ModuleInfo*))
    [0x42a9d6]\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))).__foreachbody2(ref
    rt.sections_elf_shared.DSO) [0x42fb69]\n??:? int rt.sections_elf_shared.DSO.opApply(scope
    int delegate(ref rt.sections_elf_shared.DSO)) [0x430018]\n??:? int rt.minfo.moduleinfos_apply(scope
    int delegate(immutable(object.ModuleInfo*))) [0x42faf5]\n??:? int object.ModuleInfo.opApply(scope
    int delegate(object.ModuleInfo*)) [0x42a9ad]\n??:? runModuleUnitTests [0x42b919]\n??:?
    void rt.dmain2._d_run_main(int, char**, extern (C) int function(char[][])*).runAll()
    [0x42826c]\n??:? void rt.dmain2._d_run_main(int, char**, extern (C) int function(char[][])*).tryExec(scope
    void delegate()) [0x4281f3]\n??:? _d_run_main [0x42815e]\n??:? main [0x427bb3]\n??:?
    __libc_start_main [0x528cc554]\n1/1 unittests FAILED\n'''
  stdout: b''
- exit_code: 1
  program: "import std.typecons;\nimport std.math;\n/*\nThis function takes two positive\
    \ numbers x and y and returns the\n    biggest even integer number that is in\
    \ the range [x, y] inclusive. If \n    there's no such number, then the function\
    \ should return -1.\n\n    For example:\n    >>> choose_num(12L, 15L)\n    14L\n\
    \    >>> choose_num(13L, 12L)\n    -1L\n    \n*/\nlong choose_num(long x, long\
    \ y) \n{\n    long result = -1;\n    if (x % 2 == 0)\n    {\n        result =\
    \ x;\n    }\n    else\n    {\n        result = x + 1;\n    }\n    if (result >\
    \ y)\n    {\n        result = -1;\n    }\n    return result;\n}\nunittest\n{\n\
    \    alias candidate = choose_num;\n\n    assert(candidate(12L, 15L) == 14L);\n\
    \    assert(candidate(13L, 12L) == -1L);\n    assert(candidate(33L, 12354L) ==\
    \ 12354L);\n    assert(candidate(5234L, 5233L) == -1L);\n    assert(candidate(6L,\
    \ 29L) == 28L);\n    assert(candidate(27L, 10L) == -1L);\n    assert(candidate(7L,\
    \ 7L) == -1L);\n    assert(candidate(546L, 546L) == 546L);\n}\nvoid main(){}"
  status: Exception
  stderr: 'b''core.exception.AssertError@/tmp/tmpigxyzbx6.d(36): unittest failure\n----------------\n??:?
    _d_unittestp [0x427e1d]\n??:? void tmpigxyzbx6.__unittest_L32_C1() [0x427a79]\n??:?
    void tmpigxyzbx6.__modtest() [0x427ba0]\n??:? int core.runtime.runModuleUnitTests().__foreachbody2(object.ModuleInfo*)
    [0x42bb43]\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)).__lambda2(immutable(object.ModuleInfo*))
    [0x42a9d6]\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))).__foreachbody2(ref
    rt.sections_elf_shared.DSO) [0x42fb69]\n??:? int rt.sections_elf_shared.DSO.opApply(scope
    int delegate(ref rt.sections_elf_shared.DSO)) [0x430018]\n??:? int rt.minfo.moduleinfos_apply(scope
    int delegate(immutable(object.ModuleInfo*))) [0x42faf5]\n??:? int object.ModuleInfo.opApply(scope
    int delegate(object.ModuleInfo*)) [0x42a9ad]\n??:? runModuleUnitTests [0x42b919]\n??:?
    void rt.dmain2._d_run_main(int, char**, extern (C) int function(char[][])*).runAll()
    [0x42826c]\n??:? void rt.dmain2._d_run_main(int, char**, extern (C) int function(char[][])*).tryExec(scope
    void delegate()) [0x4281f3]\n??:? _d_run_main [0x42815e]\n??:? main [0x427bb3]\n??:?
    __libc_start_main [0x528cc554]\n1/1 unittests FAILED\n'''
  stdout: b''
- exit_code: 1
  program: "import std.typecons;\nimport std.math;\n/*\nThis function takes two positive\
    \ numbers x and y and returns the\n    biggest even integer number that is in\
    \ the range [x, y] inclusive. If \n    there's no such number, then the function\
    \ should return -1.\n\n    For example:\n    >>> choose_num(12L, 15L)\n    14L\n\
    \    >>> choose_num(13L, 12L)\n    -1L\n    \n*/\nlong choose_num(long x, long\
    \ y) \n{\n    if (x % 2 == 0)\n    {\n        if (x <= y)\n        {\n       \
    \     return x;\n        }\n        else\n        {\n            return -1;\n\
    \        }\n    }\n    else\n    {\n        if (x + 1 <= y)\n        {\n     \
    \       return x + 1;\n        }\n        else\n        {\n            return\
    \ -1;\n        }\n    }\n}\nunittest\n{\n    alias candidate = choose_num;\n\n\
    \    assert(candidate(12L, 15L) == 14L);\n    assert(candidate(13L, 12L) == -1L);\n\
    \    assert(candidate(33L, 12354L) == 12354L);\n    assert(candidate(5234L, 5233L)\
    \ == -1L);\n    assert(candidate(6L, 29L) == 28L);\n    assert(candidate(27L,\
    \ 10L) == -1L);\n    assert(candidate(7L, 7L) == -1L);\n    assert(candidate(546L,\
    \ 546L) == 546L);\n}\nvoid main(){}"
  status: SyntaxError
  stderr: 'b''Error: cannot find source code for runtime library file \''object.d\''\n       dmd
    might not be correctly installed. Run \''dmd -man\'' for installation instructions.\nimport
    path[0] = /tmp\nFailed: ["dmd", "-unittest", "-v", "-o-", "/tmp/tmpw8y_l_th.d",
    "-I/tmp"]\n'''
  stdout: b''
  timestamp: 1659793719
- exit_code: 1
  program: "import std.typecons;\nimport std.math;\n/*\nThis function takes two positive\
    \ numbers x and y and returns the\n    biggest even integer number that is in\
    \ the range [x, y] inclusive. If \n    there's no such number, then the function\
    \ should return -1.\n\n    For example:\n    >>> choose_num(12L, 15L)\n    14L\n\
    \    >>> choose_num(13L, 12L)\n    -1L\n    \n*/\nlong choose_num(long x, long\
    \ y) \n{\n    // your code here\n    long result = -1;\n    if (x > y)\n    {\n\
    \        return result;\n    }\n    else\n    {\n        long i = x;\n       \
    \ while (i <= y)\n        {\n            if (i % 2 == 0)\n            {\n    \
    \            result = i;\n                break;\n            }\n            i++;\n\
    \        }\n    }\n    return result;\n}\nunittest\n{\n    alias candidate = choose_num;\n\
    \n    assert(candidate(12L, 15L) == 14L);\n    assert(candidate(13L, 12L) == -1L);\n\
    \    assert(candidate(33L, 12354L) == 12354L);\n    assert(candidate(5234L, 5233L)\
    \ == -1L);\n    assert(candidate(6L, 29L) == 28L);\n    assert(candidate(27L,\
    \ 10L) == -1L);\n    assert(candidate(7L, 7L) == -1L);\n    assert(candidate(546L,\
    \ 546L) == 546L);\n}\nvoid main(){}"
  status: SyntaxError
  stderr: 'b''Error: cannot find source code for runtime library file \''object.d\''\n       dmd
    might not be correctly installed. Run \''dmd -man\'' for installation instructions.\nimport
    path[0] = /tmp\nFailed: ["dmd", "-unittest", "-v", "-o-", "/tmp/tmph0f9u4d0.d",
    "-I/tmp"]\n'''
  stdout: b''
  timestamp: 1659793719
- exit_code: 1
  program: "import std.typecons;\nimport std.math;\n/*\nThis function takes two positive\
    \ numbers x and y and returns the\n    biggest even integer number that is in\
    \ the range [x, y] inclusive. If \n    there's no such number, then the function\
    \ should return -1.\n\n    For example:\n    >>> choose_num(12L, 15L)\n    14L\n\
    \    >>> choose_num(13L, 12L)\n    -1L\n    \n*/\nlong choose_num(long x, long\
    \ y) \n{\n    if (x > y)\n    {\n        return -1L;\n    }\n    else\n    {\n\
    \        long z = x % 2L;\n        if (z == 0L)\n        {\n            return\
    \ x;\n        }\n        else\n        {\n            return choose_num(x + 1L,\
    \ y);\n        }\n    }\n}\nunittest\n{\n    alias candidate = choose_num;\n\n\
    \    assert(candidate(12L, 15L) == 14L);\n    assert(candidate(13L, 12L) == -1L);\n\
    \    assert(candidate(33L, 12354L) == 12354L);\n    assert(candidate(5234L, 5233L)\
    \ == -1L);\n    assert(candidate(6L, 29L) == 28L);\n    assert(candidate(27L,\
    \ 10L) == -1L);\n    assert(candidate(7L, 7L) == -1L);\n    assert(candidate(546L,\
    \ 546L) == 546L);\n}\nvoid main(){}"
  status: SyntaxError
  stderr: 'b''Error: cannot find source code for runtime library file \''object.d\''\n       dmd
    might not be correctly installed. Run \''dmd -man\'' for installation instructions.\nimport
    path[0] = /tmp\nFailed: ["dmd", "-unittest", "-v", "-o-", "/tmp/tmpptsi1p4k.d",
    "-I/tmp"]\n'''
  stdout: b''
  timestamp: 1659793719
- exit_code: 0
  program: "import std.typecons;\nimport std.math;\n/*\nThis function takes two positive\
    \ numbers x and y and returns the\n    biggest even integer number that is in\
    \ the range [x, y] inclusive. If \n    there's no such number, then the function\
    \ should return -1.\n\n    For example:\n    >>> choose_num(12L, 15L)\n    14L\n\
    \    >>> choose_num(13L, 12L)\n    -1L\n    \n*/\nlong choose_num(long x, long\
    \ y) \n{\n    long result = -1;\n    if (x > y)\n    {\n        return result;\n\
    \    }\n    else\n    {\n        for (long i = x; i <= y; i++)\n        {\n  \
    \          if (i % 2 == 0)\n            {\n                result = i;\n     \
    \       }\n        }\n    }\n    return result;\n}\nunittest\n{\n    alias candidate\
    \ = choose_num;\n\n    assert(candidate(12L, 15L) == 14L);\n    assert(candidate(13L,\
    \ 12L) == -1L);\n    assert(candidate(33L, 12354L) == 12354L);\n    assert(candidate(5234L,\
    \ 5233L) == -1L);\n    assert(candidate(6L, 29L) == 28L);\n    assert(candidate(27L,\
    \ 10L) == -1L);\n    assert(candidate(7L, 7L) == -1L);\n    assert(candidate(546L,\
    \ 546L) == 546L);\n}\nvoid main(){}"
  status: OK
  stderr: b''
  stdout: b''
- exit_code: 1
  program: "import std.typecons;\nimport std.math;\n/*\nThis function takes two positive\
    \ numbers x and y and returns the\n    biggest even integer number that is in\
    \ the range [x, y] inclusive. If \n    there's no such number, then the function\
    \ should return -1.\n\n    For example:\n    >>> choose_num(12L, 15L)\n    14L\n\
    \    >>> choose_num(13L, 12L)\n    -1L\n    \n*/\nlong choose_num(long x, long\
    \ y) \n{\n    if (x > y)\n        return -1;\n    if (x % 2 == 0)\n        return\
    \ x;\n    return choose_num(x + 1, y);\n}\nunittest\n{\n    alias candidate =\
    \ choose_num;\n\n    assert(candidate(12L, 15L) == 14L);\n    assert(candidate(13L,\
    \ 12L) == -1L);\n    assert(candidate(33L, 12354L) == 12354L);\n    assert(candidate(5234L,\
    \ 5233L) == -1L);\n    assert(candidate(6L, 29L) == 28L);\n    assert(candidate(27L,\
    \ 10L) == -1L);\n    assert(candidate(7L, 7L) == -1L);\n    assert(candidate(546L,\
    \ 546L) == 546L);\n}\nvoid main(){}"
  status: SyntaxError
  stderr: 'b''Error: cannot find source code for runtime library file \''object.d\''\n       dmd
    might not be correctly installed. Run \''dmd -man\'' for installation instructions.\nimport
    path[0] = /tmp\nFailed: ["dmd", "-unittest", "-v", "-o-", "/tmp/tmpc4oyo_pq.d",
    "-I/tmp"]\n'''
  stdout: b''
  timestamp: 1659793719
- exit_code: 1
  program: "import std.typecons;\nimport std.math;\n/*\nThis function takes two positive\
    \ numbers x and y and returns the\n    biggest even integer number that is in\
    \ the range [x, y] inclusive. If \n    there's no such number, then the function\
    \ should return -1.\n\n    For example:\n    >>> choose_num(12L, 15L)\n    14L\n\
    \    >>> choose_num(13L, 12L)\n    -1L\n    \n*/\nlong choose_num(long x, long\
    \ y) \n{\n    long result = -1;\n    if (x % 2 == 0)\n    {\n        result =\
    \ x;\n    }\n    else\n    {\n        result = x + 1;\n    }\n    if (result >\
    \ y)\n    {\n        result = -1;\n    }\n    return result;\n}\nunittest\n{\n\
    \    alias candidate = choose_num;\n\n    assert(candidate(12L, 15L) == 14L);\n\
    \    assert(candidate(13L, 12L) == -1L);\n    assert(candidate(33L, 12354L) ==\
    \ 12354L);\n    assert(candidate(5234L, 5233L) == -1L);\n    assert(candidate(6L,\
    \ 29L) == 28L);\n    assert(candidate(27L, 10L) == -1L);\n    assert(candidate(7L,\
    \ 7L) == -1L);\n    assert(candidate(546L, 546L) == 546L);\n}\nvoid main(){}"
  status: Exception
  stderr: 'b''core.exception.AssertError@/tmp/tmpigxyzbx6.d(36): unittest failure\n----------------\n??:?
    _d_unittestp [0x427e1d]\n??:? void tmpigxyzbx6.__unittest_L32_C1() [0x427a79]\n??:?
    void tmpigxyzbx6.__modtest() [0x427ba0]\n??:? int core.runtime.runModuleUnitTests().__foreachbody2(object.ModuleInfo*)
    [0x42bb43]\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)).__lambda2(immutable(object.ModuleInfo*))
    [0x42a9d6]\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))).__foreachbody2(ref
    rt.sections_elf_shared.DSO) [0x42fb69]\n??:? int rt.sections_elf_shared.DSO.opApply(scope
    int delegate(ref rt.sections_elf_shared.DSO)) [0x430018]\n??:? int rt.minfo.moduleinfos_apply(scope
    int delegate(immutable(object.ModuleInfo*))) [0x42faf5]\n??:? int object.ModuleInfo.opApply(scope
    int delegate(object.ModuleInfo*)) [0x42a9ad]\n??:? runModuleUnitTests [0x42b919]\n??:?
    void rt.dmain2._d_run_main(int, char**, extern (C) int function(char[][])*).runAll()
    [0x42826c]\n??:? void rt.dmain2._d_run_main(int, char**, extern (C) int function(char[][])*).tryExec(scope
    void delegate()) [0x4281f3]\n??:? _d_run_main [0x42815e]\n??:? main [0x427bb3]\n??:?
    __libc_start_main [0x528cc554]\n1/1 unittests FAILED\n'''
  stdout: b''
- exit_code: 1
  program: "import std.typecons;\nimport std.math;\n/*\nThis function takes two positive\
    \ numbers x and y and returns the\n    biggest even integer number that is in\
    \ the range [x, y] inclusive. If \n    there's no such number, then the function\
    \ should return -1.\n\n    For example:\n    >>> choose_num(12L, 15L)\n    14L\n\
    \    >>> choose_num(13L, 12L)\n    -1L\n    \n*/\nlong choose_num(long x, long\
    \ y) \n{\n    if(x > y)\n    {\n        return -1L;\n    }\n    else\n    {\n\
    \        long max = -1L;\n        for(long i = x; i <= y; i++)\n        {\n  \
    \          if(i % 2 == 0)\n            {\n                max = i;\n         \
    \   }\n        }\n        return max;\n    }\n}\n/*\nThis function takes a positive\
    \ number n and returns the sum of all\n    even numbers in the range [1, n] inclusive.\n\
    unittest\n{\n    alias candidate = choose_num;\n\n    assert(candidate(12L, 15L)\
    \ == 14L);\n    assert(candidate(13L, 12L) == -1L);\n    assert(candidate(33L,\
    \ 12354L) == 12354L);\n    assert(candidate(5234L, 5233L) == -1L);\n    assert(candidate(6L,\
    \ 29L) == 28L);\n    assert(candidate(27L, 10L) == -1L);\n    assert(candidate(7L,\
    \ 7L) == -1L);\n    assert(candidate(546L, 546L) == 546L);\n}\nvoid main(){}"
  status: SyntaxError
  stderr: 'b''/tmp/tmpxd_w2o_d.d(34): Error: unterminated /* */ comment\nFailed: ["dmd",
    "-unittest", "-v", "-o-", "/tmp/tmpxd_w2o_d.d", "-I/tmp"]\n'''
  stdout: b''
  timestamp: 1659793719
- exit_code: 1
  program: "import std.typecons;\nimport std.math;\n/*\nThis function takes two positive\
    \ numbers x and y and returns the\n    biggest even integer number that is in\
    \ the range [x, y] inclusive. If \n    there's no such number, then the function\
    \ should return -1.\n\n    For example:\n    >>> choose_num(12L, 15L)\n    14L\n\
    \    >>> choose_num(13L, 12L)\n    -1L\n    \n*/\nlong choose_num(long x, long\
    \ y) \n{\n    long result = -1;\n    if (x % 2 == 0)\n    {\n        result =\
    \ x;\n    }\n    else\n    {\n        result = x + 1;\n    }\n    if (result >\
    \ y)\n    {\n        result = -1;\n    }\n    return result;\n}\nunittest\n{\n\
    \    alias candidate = choose_num;\n\n    assert(candidate(12L, 15L) == 14L);\n\
    \    assert(candidate(13L, 12L) == -1L);\n    assert(candidate(33L, 12354L) ==\
    \ 12354L);\n    assert(candidate(5234L, 5233L) == -1L);\n    assert(candidate(6L,\
    \ 29L) == 28L);\n    assert(candidate(27L, 10L) == -1L);\n    assert(candidate(7L,\
    \ 7L) == -1L);\n    assert(candidate(546L, 546L) == 546L);\n}\nvoid main(){}"
  status: Exception
  stderr: 'b''core.exception.AssertError@/tmp/tmpigxyzbx6.d(36): unittest failure\n----------------\n??:?
    _d_unittestp [0x427e1d]\n??:? void tmpigxyzbx6.__unittest_L32_C1() [0x427a79]\n??:?
    void tmpigxyzbx6.__modtest() [0x427ba0]\n??:? int core.runtime.runModuleUnitTests().__foreachbody2(object.ModuleInfo*)
    [0x42bb43]\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)).__lambda2(immutable(object.ModuleInfo*))
    [0x42a9d6]\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))).__foreachbody2(ref
    rt.sections_elf_shared.DSO) [0x42fb69]\n??:? int rt.sections_elf_shared.DSO.opApply(scope
    int delegate(ref rt.sections_elf_shared.DSO)) [0x430018]\n??:? int rt.minfo.moduleinfos_apply(scope
    int delegate(immutable(object.ModuleInfo*))) [0x42faf5]\n??:? int object.ModuleInfo.opApply(scope
    int delegate(object.ModuleInfo*)) [0x42a9ad]\n??:? runModuleUnitTests [0x42b919]\n??:?
    void rt.dmain2._d_run_main(int, char**, extern (C) int function(char[][])*).runAll()
    [0x42826c]\n??:? void rt.dmain2._d_run_main(int, char**, extern (C) int function(char[][])*).tryExec(scope
    void delegate()) [0x4281f3]\n??:? _d_run_main [0x42815e]\n??:? main [0x427bb3]\n??:?
    __libc_start_main [0x528cc554]\n1/1 unittests FAILED\n'''
  stdout: b''
- exit_code: 1
  program: "import std.typecons;\nimport std.math;\n/*\nThis function takes two positive\
    \ numbers x and y and returns the\n    biggest even integer number that is in\
    \ the range [x, y] inclusive. If \n    there's no such number, then the function\
    \ should return -1.\n\n    For example:\n    >>> choose_num(12L, 15L)\n    14L\n\
    \    >>> choose_num(13L, 12L)\n    -1L\n    \n*/\nlong choose_num(long x, long\
    \ y) \n{\n    if (x > y)\n        return -1;\n    else if (x % 2 == 0)\n     \
    \   return x;\n    else\n        return x + 1;\n}\nunittest\n{\n    alias candidate\
    \ = choose_num;\n\n    assert(candidate(12L, 15L) == 14L);\n    assert(candidate(13L,\
    \ 12L) == -1L);\n    assert(candidate(33L, 12354L) == 12354L);\n    assert(candidate(5234L,\
    \ 5233L) == -1L);\n    assert(candidate(6L, 29L) == 28L);\n    assert(candidate(27L,\
    \ 10L) == -1L);\n    assert(candidate(7L, 7L) == -1L);\n    assert(candidate(546L,\
    \ 546L) == 546L);\n}\nvoid main(){}"
  status: SyntaxError
  stderr: 'b''Error: cannot find source code for runtime library file \''object.d\''\n       dmd
    might not be correctly installed. Run \''dmd -man\'' for installation instructions.\nimport
    path[0] = /tmp\nFailed: ["dmd", "-unittest", "-v", "-o-", "/tmp/tmpzdiug8nr.d",
    "-I/tmp"]\n'''
  stdout: b''
  timestamp: 1659793719

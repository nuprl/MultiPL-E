name: HumanEval_121_solution
language: d
prompt: "import std.typecons;\nimport std.math;\n/*\nGiven a non-empty list of integers,\
  \ return the sum of all of the odd elements that are in even positions.\n    \n\n\
  \    Examples\n    >>> solution([5L, 8L, 7L, 1L])\n    12L\n    >>> solution([3L,\
  \ 3L, 3L, 3L, 3L])\n    9L\n    >>> solution([30L, 13L, 24L, 321L])\n    0L\n  \
  \  \n*/\nlong solution(long[] lst) \n"
tests: "unittest\n{\n    alias candidate = solution;\n\n    assert(candidate([5L,\
  \ 8L, 7L, 1L]) == 12L);\n    assert(candidate([3L, 3L, 3L, 3L, 3L]) == 9L);\n  \
  \  assert(candidate([30L, 13L, 24L, 321L]) == 0L);\n    assert(candidate([5L, 9L])\
  \ == 5L);\n    assert(candidate([2L, 4L, 8L]) == 0L);\n    assert(candidate([30L,\
  \ 13L, 23L, 32L]) == 23L);\n    assert(candidate([3L, 13L, 2L, 9L]) == 3L);\n}\n\
  void main(){}"
completions: ["{\n    long sum = 0;\n    foreach(i, e; lst)\n    {\n        if(i %\
    \ 2 == 0 && e % 2 != 0)\n        {\n            sum += e;\n        }\n    }\n\
    \    return sum;\n}", "{\n    long sum = 0;\n    for(int i = 0; i < lst.length;\
    \ i++)\n    {\n        if(i % 2 == 0 && lst[i] % 2 != 0)\n        {\n        \
    \    sum += lst[i];\n        }\n    }\n    return sum;\n}", "{\n    long sum =\
    \ 0;\n    for(int i = 0; i < lst.length; i++)\n    {\n        if(i % 2 == 0 &&\
    \ lst[i] % 2 != 0)\n        {\n            sum += lst[i];\n        }\n    }\n\
    \    return sum;\n}", "{\n    long sum = 0;\n    foreach(i, e; lst)\n    {\n \
    \       if(i % 2 == 0 && e % 2 != 0)\n        {\n            sum += e;\n     \
    \   }\n    }\n    return sum;\n}", "{\n    long sum = 0;\n    foreach(i, e; lst)\n\
    \    {\n        if(i % 2 == 0 && e % 2 != 0)\n        {\n            sum += e;\n\
    \        }\n    }\n    return sum;\n}", "{\n    long sum = 0;\n    foreach(i,\
    \ e; lst)\n    {\n        if(i % 2 == 0 && e % 2 != 0)\n        {\n          \
    \  sum += e;\n        }\n    }\n    return sum;\n}", "{\n    long sum = 0;\n \
    \   foreach(i, e; lst)\n    {\n        if(i % 2 == 0 && e % 2 != 0)\n        {\n\
    \            sum += e;\n        }\n    }\n    return sum;\n}", "{\n    return\
    \ lst.filter!(x => x % 2 == 1 && lst.indexOf(x) % 2 == 0).sum;\n}", "{\n    long\
    \ sum = 0;\n    foreach(i, e; lst)\n    {\n        if(i % 2 == 0 && e % 2 != 0)\n\
    \        {\n            sum += e;\n        }\n    }\n    return sum;\n}", "{\n\
    \    long sum = 0;\n    foreach(i, e; lst)\n    {\n        if(i % 2 == 0 && e\
    \ % 2 != 0)\n        {\n            sum += e;\n        }\n    }\n    return sum;\n\
    }", "{\n    long sum = 0;\n    foreach(i, e; lst)\n    {\n        if(i % 2 ==\
    \ 0 && e % 2 != 0)\n        {\n            sum += e;\n        }\n    }\n    return\
    \ sum;\n}", "{\n    long sum = 0;\n    foreach(i, e; lst)\n    {\n        if(i\
    \ % 2 == 0 && e % 2 != 0)\n        {\n            sum += e;\n        }\n    }\n\
    \    return sum;\n}", "{\n    long sum = 0;\n    foreach(i, e; lst)\n    {\n \
    \       if(i % 2 == 0 && e % 2 != 0)\n        {\n            sum += e;\n     \
    \   }\n    }\n    return sum;\n}", "{\n    long sum = 0;\n    for(int i = 0; i\
    \ < lst.length; i++)\n    {\n        if(i % 2 == 0 && lst[i] % 2 != 0)\n     \
    \   {\n            sum += lst[i];\n        }\n    }\n    return sum;\n}", "{\n\
    \    long sum = 0;\n    foreach(i, e; lst)\n    {\n        if(i % 2 == 0 && e\
    \ % 2 != 0)\n        {\n            sum += e;\n        }\n    }\n    return sum;\n\
    }", "{\n    long sum = 0;\n    for(int i = 0; i < lst.length; i++)\n    {\n  \
    \      if(i % 2 == 0 && lst[i] % 2 != 0)\n        {\n            sum += lst[i];\n\
    \        }\n    }\n    return sum;\n}", "{\n    long sum = 0;\n    for(int i =\
    \ 0; i < lst.length; i++)\n    {\n        if(i % 2 == 0 && lst[i] % 2 != 0)\n\
    \        {\n            sum += lst[i];\n        }\n    }\n    return sum;\n}",
  "{\n    long sum = 0;\n    foreach(i, e; lst)\n    {\n        if(i % 2 == 0 && e\
    \ % 2 != 0)\n        {\n            sum += e;\n        }\n    }\n    return sum;\n\
    }", "{\n    long sum = 0;\n    for(int i = 0; i < lst.length; i++)\n    {\n  \
    \      if(i % 2 == 0 && lst[i] % 2 != 0)\n        {\n            sum += lst[i];\n\
    \        }\n    }\n    return sum;\n}", "{\n    long sum = 0;\n    for(int i =\
    \ 0; i < lst.length; i++)\n    {\n        if(i % 2 == 0 && lst[i] % 2 != 0)\n\
    \        {\n            sum += lst[i];\n        }\n    }\n    return sum;\n}"]
stop_tokens:
- "\n\n"
- "\nvoid"
- "\nbool"
- "\nint"

name: HumanEval_122_add_elements
language: d
prompt: "import std.typecons;\nimport std.math;\n/*\n\n    Given a non-empty array\
  \ of integers arr and an integer k, return\n    the sum of the elements with at\
  \ most two digits from the first k elements of arr.\n\n    Example:\n\n    >>> add_elements([111L,\
  \ 21L, 3L, 4000L, 5L, 6L, 7L, 8L, 9L], 4L)\n    24L\n\n    Constraints:\n      \
  \  1. 1 <= len(arr) <= 100\n        2. 1 <= k <= len(arr)\n    \n*/\nlong add_elements(long[]\
  \ arr, long k) \n"
tests: "unittest\n{\n    alias candidate = add_elements;\n\n    assert(candidate([1L,\
  \ -2L, -3L, 41L, 57L, 76L, 87L, 88L, 99L], 3L) == -4L);\n    assert(candidate([111L,\
  \ 121L, 3L, 4000L, 5L, 6L], 2L) == 0L);\n    assert(candidate([11L, 21L, 3L, 90L,\
  \ 5L, 6L, 7L, 8L, 9L], 4L) == 125L);\n    assert(candidate([111L, 21L, 3L, 4000L,\
  \ 5L, 6L, 7L, 8L, 9L], 4L) == 24L);\n    assert(candidate([1L], 1L) == 1L);\n}\n\
  void main(){}"
completions: ["{\n    long sum = 0L;\n    long i = 0L;\n    while (i < k)\n    {\n\
    \        long num = arr[i];\n        if (num < 100L)\n        {\n            sum\
    \ += num;\n        }\n        i++;\n    }\n    return sum;\n}", "{\n    long sum\
    \ = 0L;\n    foreach(i; 0 .. k)\n    {\n        if(i >= arr.length)\n        \
    \    break;\n        if(arr[i] < 100)\n            sum += arr[i];\n    }\n   \
    \ return sum;\n}", "{\n    long sum = 0L;\n    foreach(i; 0 .. k)\n    {\n   \
    \     if(arr[i] < 100L)\n        {\n            sum += arr[i];\n        }\n  \
    \  }\n    return sum;\n}", "{\n    long sum = 0L;\n    foreach(i; 0 .. k)\n  \
    \  {\n        if (arr[i] < 100L)\n        {\n            sum += arr[i];\n    \
    \    }\n    }\n    return sum;\n}", "{\n    long sum = 0L;\n    foreach(i; 0 ..\
    \ k)\n    {\n        if (arr[i] < 100L)\n        {\n            sum += arr[i];\n\
    \        }\n    }\n    return sum;\n}", "{\n    long sum = 0L;\n    foreach(i;\
    \ 0 .. k)\n    {\n        if(arr[i] < 100L)\n        {\n            sum += arr[i];\n\
    \        }\n    }\n    return sum;\n}", "{\n    long sum = 0L;\n    foreach(i;\
    \ 0 .. k)\n    {\n        if(arr[i] < 100L)\n        {\n            sum += arr[i];\n\
    \        }\n    }\n    return sum;\n}", "{\n    long sum = 0L;\n    foreach(i;\
    \ 0..k)\n    {\n        if(arr[i] < 100L)\n        {\n            sum += arr[i];\n\
    \        }\n    }\n    return sum;\n}", "{\n    long sum = 0L;\n    foreach(i;\
    \ 0..k)\n    {\n        if(arr[i] < 100L)\n        {\n            sum += arr[i];\n\
    \        }\n    }\n    return sum;\n}", "{\n    long sum = 0L;\n    foreach(i;\
    \ 0..k)\n    {\n        if(arr[i] < 100L)\n        {\n            sum += arr[i];\n\
    \        }\n    }\n    return sum;\n}", "{\n    long sum = 0L;\n    long[] arr_copy\
    \ = arr.dup;\n    arr_copy.sort;\n    foreach(i; 0..k)\n    {\n        if(arr_copy[i]\
    \ < 100L)\n        {\n            sum += arr_copy[i];\n        }\n    }\n    return\
    \ sum;\n}", "{\n    long sum = 0L;\n    foreach(i; 0..k)\n    {\n        if(arr[i]\
    \ < 100L)\n        {\n            sum += arr[i];\n        }\n    }\n    return\
    \ sum;\n}", "{\n    long result = 0L;\n    foreach(i; 0 .. k)\n    {\n       \
    \ if(arr[i] < 100L)\n        {\n            result += arr[i];\n        }\n   \
    \ }\n    return result;\n}", "{\n    long sum = 0L;\n    foreach(i; 0 .. k)\n\
    \    {\n        if(arr[i] < 100L)\n        {\n            sum += arr[i];\n   \
    \     }\n    }\n    return sum;\n}", "{\n    long sum = 0L;\n    foreach(i; 0\
    \ .. k)\n    {\n        if(arr[i] < 100L)\n        {\n            sum += arr[i];\n\
    \        }\n    }\n    return sum;\n}", "{\n    long sum = 0L;\n    foreach(i;\
    \ 0 .. k)\n    {\n        if(arr[i] < 100L)\n        {\n            sum += arr[i];\n\
    \        }\n    }\n    return sum;\n}", "{\n    long sum = 0L;\n    foreach(i;\
    \ 0 .. k)\n    {\n        if(arr[i] < 100L)\n        {\n            sum += arr[i];\n\
    \        }\n    }\n    return sum;\n}", "{\n    long sum = 0L;\n    long[] arr_copy\
    \ = arr.dup;\n    arr_copy.sort;\n    foreach(i; 0 .. k)\n    {\n        if(arr_copy[i]\
    \ < 100L)\n        {\n            sum += arr_copy[i];\n        }\n    }\n    return\
    \ sum;\n}", "{\n    long sum = 0L;\n    foreach(i; 0 .. k)\n    {\n        if(arr[i]\
    \ < 100L)\n        {\n            sum += arr[i];\n        }\n    }\n    return\
    \ sum;\n}", "{\n    long sum = 0L;\n    foreach(i; 0 .. k)\n    {\n        if(arr[i]\
    \ < 100L)\n        {\n            sum += arr[i];\n        }\n    }\n    return\
    \ sum;\n}", "{\n    long sum = 0L;\n    foreach(i; 0 .. k)\n    {\n        if(arr[i]\
    \ < 100L)\n        {\n            sum += arr[i];\n        }\n    }\n    return\
    \ sum;\n}", "{\n    long sum = 0L;\n    foreach(i; 0 .. k)\n    {\n        if(arr[i]\
    \ < 100L)\n        {\n            sum += arr[i];\n        }\n    }\n    return\
    \ sum;\n}", "{\n    long sum = 0L;\n    long i = 0L;\n    while (i < k) \n   \
    \ {\n        if (arr[i] < 100L) \n        {\n            sum += arr[i];\n    \
    \    }\n        i++;\n    }\n    return sum;\n}", "{\n    long sum = 0L;\n   \
    \ foreach(i; 0 .. k)\n    {\n        if(arr[i] < 100L)\n        {\n          \
    \  sum += arr[i];\n        }\n    }\n    return sum;\n}", "{\n    long sum = 0L;\n\
    \    foreach(i; 0 .. k)\n    {\n        if(arr[i] < 100L)\n        {\n       \
    \     sum += arr[i];\n        }\n    }\n    return sum;\n}", "{\n    long sum\
    \ = 0L;\n    foreach(i; 0 .. k)\n    {\n        if(arr[i] < 100L)\n        {\n\
    \            sum += arr[i];\n        }\n    }\n    return sum;\n}", "{\n    long\
    \ sum = 0L;\n    foreach(i; 0 .. k)\n    {\n        if (arr[i] < 100L)\n     \
    \   {\n            sum += arr[i];\n        }\n    }\n    return sum;\n}", "{\n\
    \    long sum = 0L;\n    long i = 0L;\n    while (i < k)\n    {\n        if (arr[i]\
    \ < 100L)\n        {\n            sum += arr[i];\n        }\n        i++;\n  \
    \  }\n    return sum;\n}", "{\n    long sum = 0L;\n    long i = 0L;\n    while\
    \ (i < k)\n    {\n        if (arr[i] < 100L)\n        {\n            sum += arr[i];\n\
    \        }\n        i++;\n    }\n    return sum;\n}", "{\n    long sum = 0L;\n\
    \    foreach(i; 0 .. k)\n    {\n        if (arr[i] < 100L)\n        {\n      \
    \      sum += arr[i];\n        }\n    }\n    return sum;\n}", "{\n    long sum\
    \ = 0L;\n    foreach(i; 0 .. k)\n    {\n        if(arr[i] < 100L)\n        {\n\
    \            sum += arr[i];\n        }\n    }\n    return sum;\n}", "{\n    long\
    \ sum = 0L;\n    foreach(i; 0..k)\n    {\n        if(arr[i] < 100L)\n        {\n\
    \            sum += arr[i];\n        }\n    }\n    return sum;\n}", "{\n    long\
    \ sum = 0L;\n    foreach(i; 0 .. k) \n    {\n        if (arr[i] < 100L) \n   \
    \     {\n            sum += arr[i];\n        }\n    }\n    return sum;\n}", "{\n\
    \    long sum = 0L;\n    foreach(i; 0 .. k)\n    {\n        if(arr[i] < 100L)\n\
    \        {\n            sum += arr[i];\n        }\n    }\n    return sum;\n}",
  "{\n    long sum = 0L;\n    foreach(i; 0..k)\n    {\n        if(arr[i] < 100L)\n\
    \        {\n            sum += arr[i];\n        }\n    }\n    return sum;\n}",
  "{\n    long sum = 0L;\n    foreach(i; 0 .. k)\n    {\n        if(arr[i] < 100L)\n\
    \        {\n            sum += arr[i];\n        }\n    }\n    return sum;\n}",
  "{\n    long sum = 0L;\n    foreach(i; 0 .. k)\n    {\n        if(arr[i] < 100L)\n\
    \        {\n            sum += arr[i];\n        }\n    }\n    return sum;\n}",
  "{\n    long sum = 0L;\n    foreach(i; 0 .. k)\n    {\n        if (arr[i] < 100L)\n\
    \        {\n            sum += arr[i];\n        }\n    }\n    return sum;\n}",
  "{\n    long sum = 0L;\n    for (long i = 0L; i < k; i++)\n    {\n        if (arr[i]\
    \ < 100L)\n        {\n            sum += arr[i];\n        }\n    }\n    return\
    \ sum;\n}", "{\n    long sum = 0L;\n    foreach(i; 0 .. k)\n    {\n        if(arr[i]\
    \ < 100L)\n        {\n            sum += arr[i];\n        }\n    }\n    return\
    \ sum;\n}", "{\n    long sum = 0L;\n    foreach(i; 0 .. k)\n    {\n        if(arr[i]\
    \ < 100L)\n        {\n            sum += arr[i];\n        }\n    }\n    return\
    \ sum;\n}", "{\n    long sum = 0L;\n    foreach(i; 0 .. k)\n    {\n        if(arr[i]\
    \ < 100L)\n        {\n            sum += arr[i];\n        }\n    }\n    return\
    \ sum;\n}", "{\n    long sum = 0L;\n    for (long i = 0L; i < k; i++)\n    {\n\
    \        if (arr[i] < 100L)\n        {\n            sum += arr[i];\n        }\n\
    \    }\n    return sum;\n}", "{\n    long sum = 0L;\n    foreach(i; 0 .. k)\n\
    \    {\n        if(arr[i] < 100L)\n        {\n            sum += arr[i];\n   \
    \     }\n    }\n    return sum;\n}", "{\n    long sum = 0L;\n    foreach(i; 0\
    \ .. k)\n    {\n        if(arr[i] < 100L)\n        {\n            sum += arr[i];\n\
    \        }\n    }\n    return sum;\n}", "{\n    long sum = 0L;\n    foreach(i;\
    \ 0 .. k)\n    {\n        if(arr[i] < 100L)\n        {\n            sum += arr[i];\n\
    \        }\n    }\n    return sum;\n}", "{\n    long sum = 0L;\n    foreach(long\
    \ i; 0 .. k)\n    {\n        long num = arr[i];\n        if(num < 100L)\n    \
    \    {\n            sum += num;\n        }\n    }\n    return sum;\n}", "{\n \
    \   long sum = 0L;\n    foreach(i; 0 .. k)\n    {\n        if(arr[i] < 100L)\n\
    \        {\n            sum += arr[i];\n        }\n    }\n    return sum;\n}",
  "{\n    long sum = 0L;\n    foreach(i; 0 .. k)\n    {\n        if(arr[i] < 100L)\n\
    \        {\n            sum += arr[i];\n        }\n    }\n    return sum;\n}",
  "{\n    long sum = 0L;\n    foreach(i; 0 .. k)\n    {\n        if(arr[i] < 100L)\n\
    \        {\n            sum += arr[i];\n        }\n    }\n    return sum;\n}",
  "{\n    long sum = 0L;\n    foreach(i; 0 .. k)\n    {\n        if(arr[i] < 100L)\n\
    \        {\n            sum += arr[i];\n        }\n    }\n    return sum;\n}",
  "{\n    long sum = 0L;\n    foreach(i; 0 .. k)\n    {\n        if(arr[i] < 100L)\n\
    \        {\n            sum += arr[i];\n        }\n    }\n    return sum;\n}",
  "{\n    long sum = 0L;\n    long i = 0L;\n    while (i < k)\n    {\n        if (arr[i]\
    \ < 100L)\n        {\n            sum += arr[i];\n        }\n        i++;\n  \
    \  }\n    return sum;\n}", "{\n    long sum = 0L;\n    foreach(i; 0 .. k)\n  \
    \  {\n        if(arr[i] < 100L)\n        {\n            sum += arr[i];\n     \
    \   }\n    }\n    return sum;\n}", "{\n    long sum = 0L;\n    foreach(i; 0 ..\
    \ k)\n    {\n        if(arr[i] < 100L)\n        {\n            sum += arr[i];\n\
    \        }\n    }\n    return sum;\n}", "{\n    long sum = 0L;\n    foreach(i;\
    \ 0 .. k)\n    {\n        if (arr[i] < 100L)\n        {\n            sum += arr[i];\n\
    \        }\n    }\n    return sum;\n}", "{\n    long sum = 0L;\n    long i = 0L;\n\
    \    while (i < k) \n    {\n        if (arr[i] < 100L) \n        {\n         \
    \   sum += arr[i];\n        }\n        i++;\n    }\n    return sum;\n}", "{\n\
    \    long sum = 0L;\n    foreach(i; 0 .. k)\n    {\n        if(arr[i] < 100L)\n\
    \        {\n            sum += arr[i];\n        }\n    }\n    return sum;\n}",
  "{\n    long sum = 0L;\n    foreach(i; 0 .. k)\n    {\n        if (arr[i] < 100L)\n\
    \        {\n            sum += arr[i];\n        }\n    }\n    return sum;\n}",
  "{\n    long sum = 0L;\n    foreach(i; 0 .. k)\n    {\n        if(arr[i] < 100L)\n\
    \        {\n            sum += arr[i];\n        }\n    }\n    return sum;\n}",
  "{\n    long sum = 0L;\n    foreach(i; 0 .. k)\n    {\n        if(arr[i] < 100L)\n\
    \        {\n            sum += arr[i];\n        }\n    }\n    return sum;\n}",
  "{\n    long sum = 0L;\n    foreach(i; 0 .. k)\n    {\n        if(arr[i] < 100L)\n\
    \        {\n            sum += arr[i];\n        }\n    }\n    return sum;\n}",
  "{\n    long sum = 0L;\n    long i = 0L;\n    while (i < k)\n    {\n        if (arr[i]\
    \ < 100L)\n        {\n            sum += arr[i];\n        }\n        i++;\n  \
    \  }\n    return sum;\n}", "{\n    long sum = 0L;\n    foreach(i; 0 .. k)\n  \
    \  {\n        if(arr[i] < 100L)\n        {\n            sum += arr[i];\n     \
    \   }\n    }\n    return sum;\n}", "{\n    long sum = 0L;\n    long i = 0L;\n\
    \    while (i < k)\n    {\n        long num = arr[i];\n        if (num < 100L)\n\
    \        {\n            sum += num;\n        }\n        i++;\n    }\n    return\
    \ sum;\n}", "{\n    long sum = 0L;\n    long[] arr_copy = arr.dup;\n    arr_copy.sort;\n\
    \    foreach(i; 0..k)\n    {\n        if(arr_copy[i] < 100L)\n        {\n    \
    \        sum += arr_copy[i];\n        }\n    }\n    return sum;\n}", "{\n    long\
    \ sum = 0L;\n    foreach(i; 0 .. k)\n    {\n        if(arr[i] < 100L)\n      \
    \  {\n            sum += arr[i];\n        }\n    }\n    return sum;\n}", "{\n\
    \    long sum = 0L;\n    foreach(i; 0..k)\n    {\n        if(arr[i] < 100L)\n\
    \        {\n            sum += arr[i];\n        }\n    }\n    return sum;\n}",
  "{\n    long sum = 0L;\n    long[] arr_copy = arr.dup;\n    arr_copy.sort;\n   \
    \ foreach(i; 0..k)\n    {\n        if(arr_copy[i] < 100L)\n        {\n       \
    \     sum += arr_copy[i];\n        }\n    }\n    return sum;\n}", "{\n    long\
    \ sum = 0L;\n    for (long i = 0L; i < k; i++) \n    {\n        if (arr[i] < 100L)\
    \ \n        {\n            sum += arr[i];\n        }\n    }\n    return sum;\n\
    }", "{\n    long sum = 0L;\n    foreach(i; 0 .. k)\n    {\n        if (arr[i]\
    \ < 100L)\n        {\n            sum += arr[i];\n        }\n    }\n    return\
    \ sum;\n}", "{\n    long sum = 0L;\n    foreach(i; 0 .. k)\n    {\n        if(arr[i]\
    \ < 100L)\n        {\n            sum += arr[i];\n        }\n    }\n    return\
    \ sum;\n}", "{\n    long sum = 0L;\n    foreach(i; 0 .. k)\n    {\n        if(arr[i]\
    \ < 100L)\n        {\n            sum += arr[i];\n        }\n    }\n    return\
    \ sum;\n}", "{\n    long sum = 0L;\n    foreach(i; 0 .. k)\n    {\n        if(arr[i]\
    \ < 100L)\n        {\n            sum += arr[i];\n        }\n    }\n    return\
    \ sum;\n}", "{\n    long sum = 0L;\n    foreach(i; 0..k)\n    {\n        if(arr[i]\
    \ < 100L)\n        {\n            sum += arr[i];\n        }\n    }\n    return\
    \ sum;\n}", "{\n    long sum = 0L;\n    foreach(i; 0 .. k)\n    {\n        if(arr[i]\
    \ < 100L)\n        {\n            sum += arr[i];\n        }\n    }\n    return\
    \ sum;\n}", "{\n    long sum = 0L;\n    foreach(i; 0 .. k)\n    {\n        if(arr[i]\
    \ < 100L)\n        {\n            sum += arr[i];\n        }\n    }\n    return\
    \ sum;\n}", "{\n    long sum = 0L;\n    foreach(i; 0..k)\n    {\n        if (arr[i]\
    \ < 100L)\n        {\n            sum += arr[i];\n        }\n    }\n    return\
    \ sum;\n}", "{\n    long sum = 0L;\n    foreach(i; 0 .. k)\n    {\n        if(arr[i]\
    \ < 100L)\n        {\n            sum += arr[i];\n        }\n    }\n    return\
    \ sum;\n}", "{\n    long sum = 0L;\n    foreach(i; 0 .. k)\n    {\n        if(arr[i]\
    \ < 100L)\n        {\n            sum += arr[i];\n        }\n    }\n    return\
    \ sum;\n}", "{\n    long sum = 0L;\n    foreach(i; 0 .. k)\n    {\n        if(arr[i]\
    \ < 100L)\n        {\n            sum += arr[i];\n        }\n    }\n    return\
    \ sum;\n}", "{\n    long sum = 0L;\n    foreach(i; 0 .. k)\n    {\n        if(arr[i]\
    \ > 9L && arr[i] < 100L)\n        {\n            sum += arr[i];\n        }\n \
    \   }\n    return sum;\n}", "{\n    long sum = 0L;\n    foreach(i; 0 .. k)\n \
    \   {\n        if(arr[i] < 100L)\n        {\n            sum += arr[i];\n    \
    \    }\n    }\n    return sum;\n}", "{\n    long sum = 0L;\n    foreach(i; 0 ..\
    \ k)\n    {\n        if(arr[i] < 100L)\n        {\n            sum += arr[i];\n\
    \        }\n    }\n    return sum;\n}", "{\n    long sum = 0L;\n    foreach(i;\
    \ 0..k)\n    {\n        if(arr[i] < 100L)\n        {\n            sum += arr[i];\n\
    \        }\n    }\n    return sum;\n}", "{\n    long sum = 0L;\n    foreach(i;\
    \ 0 .. k)\n    {\n        if(arr[i] < 100L)\n        {\n            sum += arr[i];\n\
    \        }\n    }\n    return sum;\n}", "{\n    long sum = 0L;\n    foreach(i;\
    \ 0 .. k)\n    {\n        if(arr[i] < 100L)\n        {\n            sum += arr[i];\n\
    \        }\n    }\n    return sum;\n}", "{\n    long sum = 0L;\n    foreach(i;\
    \ 0 .. k)\n    {\n        if(arr[i] < 100L)\n        {\n            sum += arr[i];\n\
    \        }\n    }\n    return sum;\n}", "{\n    long result = 0L;\n    foreach(i;\
    \ 0 .. k)\n    {\n        if(arr[i] < 100L)\n        {\n            result +=\
    \ arr[i];\n        }\n    }\n    return result;\n}", "{\n    long sum = 0L;\n\
    \    foreach(i; 0 .. k)\n    {\n        if(arr[i] < 100L)\n        {\n       \
    \     sum += arr[i];\n        }\n    }\n    return sum;\n}", "{\n    long sum\
    \ = 0L;\n    foreach(i; 0 .. k)\n    {\n        if(arr[i] < 100L)\n        {\n\
    \            sum += arr[i];\n        }\n    }\n    return sum;\n}", "{\n    long\
    \ sum = 0L;\n    foreach(i; 0 .. k)\n    {\n        if(arr[i] < 100L)\n      \
    \  {\n            sum += arr[i];\n        }\n    }\n    return sum;\n}", "{\n\
    \    long sum = 0L;\n    foreach(i; 0 .. k)\n    {\n        if(arr[i] < 100L)\n\
    \        {\n            sum += arr[i];\n        }\n    }\n    return sum;\n}",
  "{\n    long sum = 0L;\n    long[] arr_copy = arr.dup;\n    arr_copy.sort;\n   \
    \ foreach(i; 0..k)\n    {\n        if(arr_copy[i] < 100L)\n        {\n       \
    \     sum += arr_copy[i];\n        }\n    }\n    return sum;\n}", "{\n    long\
    \ sum = 0L;\n    foreach(i; 0..k)\n    {\n        if(arr[i] < 100L)\n        {\n\
    \            sum += arr[i];\n        }\n    }\n    return sum;\n}", "{\n    long\
    \ sum = 0L;\n    foreach(i; 0 .. k)\n    {\n        if (arr[i] < 100L)\n     \
    \   {\n            sum += arr[i];\n        }\n    }\n    return sum;\n}", "{\n\
    \    long sum = 0L;\n    foreach(i; 0 .. k)\n    {\n        if(arr[i] < 100L)\n\
    \        {\n            sum += arr[i];\n        }\n    }\n    return sum;\n}",
  "{\n    long sum = 0L;\n    foreach(i; 0..k)\n    {\n        if(arr[i] < 100L)\n\
    \        {\n            sum += arr[i];\n        }\n    }\n    return sum;\n}",
  "{\n    long sum = 0L;\n    foreach(i; 0 .. k)\n    {\n        if(arr[i] < 100L)\n\
    \        {\n            sum += arr[i];\n        }\n    }\n    return sum;\n}",
  "{\n    long sum = 0L;\n    foreach(i; 0 .. k)\n    {\n        if(arr[i] < 100L)\n\
    \        {\n            sum += arr[i];\n        }\n    }\n    return sum;\n}",
  "{\n    long sum = 0L;\n    foreach(i; 0 .. k)\n    {\n        if(arr[i] < 100L)\n\
    \        {\n            sum += arr[i];\n        }\n    }\n    return sum;\n}",
  "{\n    long sum = 0L;\n    foreach(i; 0 .. k)\n    {\n        if(arr[i] < 100L)\n\
    \        {\n            sum += arr[i];\n        }\n    }\n    return sum;\n}",
  "{\n    long sum = 0L;\n    foreach(i; 0 .. k)\n    {\n        if(arr[i] < 100L)\n\
    \        {\n            sum += arr[i];\n        }\n    }\n    return sum;\n}",
  "{\n    long result = 0L;\n    foreach(i; 0..k)\n    {\n        if(arr[i] < 100L)\n\
    \        {\n            result += arr[i];\n        }\n    }\n    return result;\n\
    }", "{\n    long sum = 0L;\n    foreach(i; 0 .. k)\n    {\n        if(arr[i] <\
    \ 100L)\n        {\n            sum += arr[i];\n        }\n    }\n    return sum;\n\
    }", "{\n    long sum = 0L;\n    foreach(i; 0 .. k)\n    {\n        if(arr[i] <\
    \ 100L)\n        {\n            sum += arr[i];\n        }\n    }\n    return sum;\n\
    }", "{\n    long sum = 0L;\n    foreach(i; 0 .. k)\n    {\n        if(arr[i] <\
    \ 100L)\n        {\n            sum += arr[i];\n        }\n    }\n    return sum;\n\
    }", "{\n    long sum = 0L;\n    long[] digits = new long[2];\n    long[] arr_slice\
    \ = arr[0..k];\n    foreach(elem; arr_slice)\n    {\n        digits = elem.digits;\n\
    \        if(digits.length <= 2)\n        {\n            sum += elem;\n       \
    \ }\n    }\n    return sum;\n}", "{\n    long result = 0L;\n    foreach(i; 0 ..\
    \ k)\n    {\n        if(arr[i] < 100L)\n        {\n            result += arr[i];\n\
    \        }\n    }\n    return result;\n}", "{\n    long sum = 0L;\n    foreach(i;\
    \ 0..k)\n    {\n        if(arr[i] < 100L)\n        {\n            sum += arr[i];\n\
    \        }\n    }\n    return sum;\n}", "{\n    long sum = 0L;\n    foreach(i;\
    \ 0 .. k)\n    {\n        if (arr[i] < 100L)\n        {\n            sum += arr[i];\n\
    \        }\n    }\n    return sum;\n}", "{\n    long sum = 0L;\n    foreach(i;\
    \ 0 .. k)\n    {\n        if(arr[i] < 100L)\n        {\n            sum += arr[i];\n\
    \        }\n    }\n    return sum;\n}", "{\n    long sum = 0L;\n    foreach(i;\
    \ 0 .. k)\n    {\n        if(arr[i] < 100L)\n        {\n            sum += arr[i];\n\
    \        }\n    }\n    return sum;\n}", "{\n    long sum = 0L;\n    foreach(i;\
    \ 0 .. k)\n    {\n        if (arr[i] < 100L)\n        {\n            sum += arr[i];\n\
    \        }\n    }\n    return sum;\n}", "{\n    long sum = 0L;\n    foreach(i;\
    \ 0..k)\n    {\n        if(arr[i] < 100L)\n        {\n            sum += arr[i];\n\
    \        }\n    }\n    return sum;\n}", "{\n    long sum = 0L;\n    foreach(i;\
    \ 0 .. k)\n    {\n        if(arr[i] < 100L)\n        {\n            sum += arr[i];\n\
    \        }\n    }\n    return sum;\n}", "{\n    long sum = 0L;\n    foreach(i;\
    \ 0 .. k)\n    {\n        if(arr[i] < 100L)\n        {\n            sum += arr[i];\n\
    \        }\n    }\n    return sum;\n}", "{\n    long sum = 0L;\n    foreach(i;\
    \ 0 .. k)\n    {\n        if(arr[i] < 100L)\n        {\n            sum += arr[i];\n\
    \        }\n    }\n    return sum;\n}", "{\n    long sum = 0L;\n    long[] arr_copy\
    \ = arr.dup;\n    arr_copy.sort;\n    foreach(i; 0 .. k)\n    {\n        if(arr_copy[i]\
    \ < 100L)\n        {\n            sum += arr_copy[i];\n        }\n    }\n    return\
    \ sum;\n}", "{\n    long sum = 0L;\n    foreach(i; 0 .. k)\n    {\n        if(arr[i]\
    \ < 100L)\n        {\n            sum += arr[i];\n        }\n    }\n    return\
    \ sum;\n}", "{\n    long sum = 0L;\n    foreach(i; 0 .. k)\n    {\n        if(arr[i]\
    \ < 100L)\n        {\n            sum += arr[i];\n        }\n    }\n    return\
    \ sum;\n}", "{\n    long sum = 0L;\n    foreach(i; 0 .. k)\n    {\n        if(arr[i]\
    \ < 100L)\n        {\n            sum += arr[i];\n        }\n    }\n    return\
    \ sum;\n}", "{\n    long sum = 0L;\n    foreach(i; 0 .. k)\n    {\n        if(arr[i]\
    \ < 100L)\n        {\n            sum += arr[i];\n        }\n    }\n    return\
    \ sum;\n}", "{\n    long sum = 0L;\n    long[] arr_copy = arr.dup;\n    arr_copy.sort;\n\
    \    foreach(i; 0 .. k)\n    {\n        if(arr_copy[i] < 100L)\n        {\n  \
    \          sum += arr_copy[i];\n        }\n    }\n    return sum;\n}", "{\n  \
    \  long sum = 0L;\n    foreach(i; 0..k)\n    {\n        if(arr[i] < 100L)\n  \
    \      {\n            sum += arr[i];\n        }\n    }\n    return sum;\n}", "{\n\
    \    long sum = 0L;\n    foreach(i; 0 .. k)\n    {\n        if(arr[i] < 100L)\n\
    \        {\n            sum += arr[i];\n        }\n    }\n    return sum;\n}",
  "{\n    long sum = 0L;\n    foreach(i; 0 .. k)\n    {\n        if(arr[i] < 100L)\n\
    \        {\n            sum += arr[i];\n        }\n    }\n    return sum;\n}",
  "{\n    long sum = 0L;\n    foreach(i; 0 .. k)\n    {\n        if(arr[i] < 100L)\n\
    \        {\n            sum += arr[i];\n        }\n    }\n    return sum;\n}",
  "{\n    long sum = 0L;\n    foreach(i; 0 .. k)\n    {\n        if(arr[i] < 100L)\n\
    \        {\n            sum += arr[i];\n        }\n    }\n    return sum;\n}",
  "{\n    long result = 0L;\n    foreach(i; 0 .. k)\n    {\n        if(arr[i] < 100L)\n\
    \        {\n            result += arr[i];\n        }\n    }\n    return result;\n\
    }", "{\n    long sum = 0L;\n    foreach(i; 0 .. k)\n    {\n        if(arr[i] <\
    \ 100L)\n        {\n            sum += arr[i];\n        }\n    }\n    return sum;\n\
    }", "{\n    long result = 0L;\n    foreach(i; 0..k)\n    {\n        if(arr[i]\
    \ < 100L)\n        {\n            result += arr[i];\n        }\n    }\n    return\
    \ result;\n}", "{\n    long result = 0L;\n    foreach(i; 0 .. k)\n    {\n    \
    \    if(arr[i] < 100L)\n        {\n            result += arr[i];\n        }\n\
    \    }\n    return result;\n}", "{\n    long sum = 0L;\n    foreach(idx, val;\
    \ arr[0 .. k])\n    {\n        if(val < 100L)\n        {\n            sum += val;\n\
    \        }\n    }\n    return sum;\n}", "{\n    long sum = 0L;\n    foreach(i;\
    \ 0 .. k)\n    {\n        if(arr[i] < 100L)\n        {\n            sum += arr[i];\n\
    \        }\n    }\n    return sum;\n}", "{\n    long sum = 0L;\n    foreach(i;\
    \ 0 .. k)\n    {\n        if(arr[i] < 100L)\n        {\n            sum += arr[i];\n\
    \        }\n    }\n    return sum;\n}", "{\n    long result = 0L;\n    foreach(i;\
    \ 0 .. k)\n    {\n        if (arr[i] < 100L)\n        {\n            result +=\
    \ arr[i];\n        }\n    }\n    return result;\n}", "{\n    long sum = 0L;\n\
    \    foreach(i; 0 .. k)\n    {\n        if (arr[i] < 100L)\n        {\n      \
    \      sum += arr[i];\n        }\n    }\n    return sum;\n}", "{\n    long result\
    \ = 0L;\n    foreach(i; 0 .. k)\n    {\n        if(arr[i] < 100L)\n        {\n\
    \            result += arr[i];\n        }\n    }\n    return result;\n}", "{\n\
    \    long sum = 0L;\n    foreach(i; 0..k)\n    {\n        if (arr[i] < 100L)\n\
    \        {\n            sum += arr[i];\n        }\n    }\n    return sum;\n}",
  "{\n    long sum = 0L;\n    long i = 0L;\n    while (i < k)\n    {\n        long\
    \ num = arr[i];\n        if (num < 100L)\n        {\n            sum += num;\n\
    \        }\n        i++;\n    }\n    return sum;\n}", "{\n    long sum = 0L;\n\
    \    foreach(i; 0 .. k)\n    {\n        if(arr[i] < 100L)\n        {\n       \
    \     sum += arr[i];\n        }\n    }\n    return sum;\n}", "{\n    long sum\
    \ = 0L;\n    foreach(i; 0 .. k)\n    {\n        if(arr[i] < 100L)\n        {\n\
    \            sum += arr[i];\n        }\n    }\n    return sum;\n}", "{\n    long\
    \ sum = 0L;\n    foreach(i; 0 .. k)\n    {\n        if (arr[i] < 100L)\n     \
    \   {\n            sum += arr[i];\n        }\n    }\n    return sum;\n}", "{\n\
    \    long result = 0L;\n    foreach(i; 0 .. k)\n    {\n        if(arr[i] < 100L)\n\
    \        {\n            result += arr[i];\n        }\n    }\n    return result;\n\
    }", "{\n    long sum = 0L;\n    foreach(i; 0 .. k)\n    {\n        if(arr[i] <\
    \ 100L)\n        {\n            sum += arr[i];\n        }\n    }\n    return sum;\n\
    }", "{\n    long sum = 0L;\n    foreach(i; 0 .. k)\n    {\n        if(arr[i] <\
    \ 100L)\n        {\n            sum += arr[i];\n        }\n    }\n    return sum;\n\
    }", "{\n    long sum = 0L;\n    foreach(i; 0 .. k)\n    {\n        if (arr[i]\
    \ < 100L)\n        {\n            sum += arr[i];\n        }\n    }\n    return\
    \ sum;\n}", "{\n    long result = 0L;\n    foreach(index, value; arr)\n    {\n\
    \        if(index >= k)\n            break;\n        if(value < 100L)\n      \
    \      result += value;\n    }\n    return result;\n}", "{\n    long sum = 0L;\n\
    \    foreach(i; 0..k)\n    {\n        if(arr[i] < 100L)\n        {\n         \
    \   sum += arr[i];\n        }\n    }\n    return sum;\n}", "{\n    long sum =\
    \ 0L;\n    long i = 0L;\n    while (i < k)\n    {\n        if (arr[i] < 100L)\n\
    \        {\n            sum += arr[i];\n        }\n        i++;\n    }\n    return\
    \ sum;\n}", "{\n    long sum = 0L;\n    foreach(i; 0..k)\n    {\n        if(arr[i]\
    \ < 100L)\n        {\n            sum += arr[i];\n        }\n    }\n    return\
    \ sum;\n}", "{\n    long sum = 0L;\n    foreach(i; 0..k)\n    {\n        if(arr[i]\
    \ < 100L)\n        {\n            sum += arr[i];\n        }\n    }\n    return\
    \ sum;\n}", "{\n    long result = 0L;\n    foreach(i; 0 .. k)\n    {\n       \
    \ if(arr[i] < 100L)\n        {\n            result += arr[i];\n        }\n   \
    \ }\n    return result;\n}", "{\n    long sum = 0L;\n    foreach(i; 0..k)\n  \
    \  {\n        if(arr[i] > 99L)\n        {\n            sum += 99L;\n        }\n\
    \        else\n        {\n            sum += arr[i];\n        }\n    }\n    return\
    \ sum;\n}", "{\n    long sum = 0L;\n    foreach(i; 0 .. k)\n    {\n        long\
    \ num = arr[i];\n        if(num < 100)\n        {\n            sum += num;\n \
    \       }\n    }\n    return sum;\n}", "{\n    long sum = 0L;\n    foreach(i;\
    \ 0 .. k)\n    {\n        if(arr[i] < 100L)\n        {\n            sum += arr[i];\n\
    \        }\n    }\n    return sum;\n}", "{\n    long sum = 0L;\n    foreach(i;\
    \ 0 .. k)\n    {\n        if(arr[i] < 100L)\n        {\n            sum += arr[i];\n\
    \        }\n    }\n    return sum;\n}", "{\n    long sum = 0L;\n    foreach(i;\
    \ 0 .. k)\n    {\n        if(arr[i] < 100L)\n        {\n            sum += arr[i];\n\
    \        }\n    }\n    return sum;\n}", "{\n    long sum = 0L;\n    foreach(i;\
    \ 0 .. k)\n    {\n        if(arr[i] < 100L)\n        {\n            sum += arr[i];\n\
    \        }\n    }\n    return sum;\n}", "{\n    long sum = 0L;\n    foreach(i;\
    \ 0 .. k)\n    {\n        if(arr[i] < 100L)\n        {\n            sum += arr[i];\n\
    \        }\n    }\n    return sum;\n}", "{\n    long sum = 0L;\n    foreach(i;\
    \ 0 .. k)\n    {\n        if(arr[i] < 100L)\n        {\n            sum += arr[i];\n\
    \        }\n    }\n    return sum;\n}", "{\n    long sum = 0L;\n    foreach(i;\
    \ 0 .. k)\n    {\n        if(arr[i] < 100L)\n        {\n            sum += arr[i];\n\
    \        }\n    }\n    return sum;\n}", "{\n    long sum = 0L;\n    foreach(i;\
    \ 0 .. k)\n    {\n        if(arr[i] < 100L)\n        {\n            sum += arr[i];\n\
    \        }\n    }\n    return sum;\n}", "{\n    long sum = 0L;\n    foreach(i;\
    \ 0 .. k)\n    {\n        if(arr[i] < 100L)\n        {\n            sum += arr[i];\n\
    \        }\n    }\n    return sum;\n}", "{\n    long sum = 0L;\n    foreach(i;\
    \ 0 .. k)\n    {\n        if(arr[i] < 100L)\n        {\n            sum += arr[i];\n\
    \        }\n    }\n    return sum;\n}", "{\n    long sum = 0L;\n    foreach(i;\
    \ 0 .. k)\n    {\n        if(arr[i] < 100L)\n        {\n            sum += arr[i];\n\
    \        }\n    }\n    return sum;\n}", "{\n    long sum = 0L;\n    foreach(i;\
    \ 0 .. k)\n    {\n        if(arr[i] < 100L)\n        {\n            sum += arr[i];\n\
    \        }\n    }\n    return sum;\n}", "{\n    long sum = 0L;\n    foreach(i;\
    \ 0 .. k)\n    {\n        if(arr[i] < 100L)\n        {\n            sum += arr[i];\n\
    \        }\n    }\n    return sum;\n}", "{\n    long sum = 0L;\n    foreach(i;\
    \ 0 .. k)\n    {\n        if(arr[i] < 100L)\n        {\n            sum += arr[i];\n\
    \        }\n    }\n    return sum;\n}", "{\n    long sum = 0L;\n    foreach(i;\
    \ 0..k)\n    {\n        if(arr[i] < 100L)\n        {\n            sum += arr[i];\n\
    \        }\n    }\n    return sum;\n}", "{\n    long sum = 0L;\n    foreach(i;\
    \ 0..k) \n    {\n        if (arr[i] < 100L) \n        {\n            sum += arr[i];\n\
    \        }\n    }\n    return sum;\n}", "{\n    long sum = 0L;\n    foreach(i;\
    \ 0 .. k)\n    {\n        if(arr[i] < 100L)\n        {\n            sum += arr[i];\n\
    \        }\n    }\n    return sum;\n}", "{\n    long sum = 0L;\n    foreach(i;\
    \ 0 .. k)\n    {\n        if(arr[i] < 100L)\n        {\n            sum += arr[i];\n\
    \        }\n    }\n    return sum;\n}", "{\n    long sum = 0L;\n    foreach(i;\
    \ 0..k)\n    {\n        if(arr[i] < 100L)\n        {\n            sum += arr[i];\n\
    \        }\n    }\n    return sum;\n}", "{\n    long sum = 0L;\n    foreach(i;\
    \ 0 .. k)\n    {\n        if(arr[i] < 100L)\n        {\n            sum += arr[i];\n\
    \        }\n    }\n    return sum;\n}", "{\n    long sum = 0L;\n    foreach(i;\
    \ 0 .. k)\n    {\n        if(arr[i] < 100L)\n        {\n            sum += arr[i];\n\
    \        }\n    }\n    return sum;\n}", "{\n    long sum = 0L;\n    foreach(i;\
    \ 0 .. k)\n    {\n        if(arr[i] < 100L)\n        {\n            sum += arr[i];\n\
    \        }\n    }\n    return sum;\n}", "{\n    long sum = 0L;\n    foreach(i;\
    \ 0 .. k)\n    {\n        if(arr[i] < 100L)\n        {\n            sum += arr[i];\n\
    \        }\n    }\n    return sum;\n}", "{\n    long sum = 0L;\n    long i = 0L;\n\
    \    while (i < k)\n    {\n        long num = arr[i];\n        if (num < 100L)\n\
    \        {\n            sum += num;\n        }\n        i++;\n    }\n    return\
    \ sum;\n}", "{\n    long sum = 0L;\n    foreach(i; 0 .. k)\n    {\n        if(arr[i]\
    \ < 100L)\n        {\n            sum += arr[i];\n        }\n    }\n    return\
    \ sum;\n}", "{\n    long sum = 0L;\n    foreach(i; 0 .. k)\n    {\n        if(arr[i]\
    \ < 100L)\n        {\n            sum += arr[i];\n        }\n    }\n    return\
    \ sum;\n}", "{\n    long sum = 0L;\n    foreach(i; 0 .. k)\n    {\n        if(arr[i]\
    \ < 100L)\n        {\n            sum += arr[i];\n        }\n    }\n    return\
    \ sum;\n}", "{\n    long sum = 0L;\n    foreach(i; 0 .. k)\n    {\n        if(arr[i]\
    \ < 100L)\n        {\n            sum += arr[i];\n        }\n    }\n    return\
    \ sum;\n}", "{\n    long sum = 0L;\n    foreach(i; 0 .. k)\n    {\n        if(arr[i]\
    \ < 100L)\n        {\n            sum += arr[i];\n        }\n    }\n    return\
    \ sum;\n}", "{\n    long sum = 0L;\n    foreach(i; 0 .. k)\n    {\n        if\
    \ (arr[i] < 100L)\n        {\n            sum += arr[i];\n        }\n    }\n \
    \   return sum;\n}", "{\n    long sum = 0L;\n    foreach(i; 0 .. k)\n    {\n \
    \       if(arr[i] < 100L)\n        {\n            sum += arr[i];\n        }\n\
    \    }\n    return sum;\n}", "{\n    long sum = 0L;\n    foreach(i; 0 .. k)\n\
    \    {\n        if(arr[i] < 100L)\n        {\n            sum += arr[i];\n   \
    \     }\n    }\n    return sum;\n}", "{\n    long sum = 0L;\n    for (long i =\
    \ 0L; i < k; i++) \n    {\n        if (arr[i] < 100L) \n        {\n          \
    \  sum += arr[i];\n        }\n    }\n    return sum;\n}", "{\n    long sum = 0L;\n\
    \    foreach(i; 0 .. k)\n    {\n        if(arr[i] < 100L)\n        {\n       \
    \     sum += arr[i];\n        }\n    }\n    return sum;\n}", "{\n    long result\
    \ = 0L;\n    foreach(i; 0..k)\n    {\n        if(arr[i] < 100L)\n        {\n \
    \           result += arr[i];\n        }\n    }\n    return result;\n}", "{\n\
    \    long sum = 0L;\n    foreach(i; 0 .. k)\n    {\n        if (arr[i] < 100L)\n\
    \        {\n            sum += arr[i];\n        }\n    }\n    return sum;\n}",
  "{\n    long sum = 0L;\n    foreach(i; 0 .. k)\n    {\n        if(arr[i] < 100L)\n\
    \        {\n            sum += arr[i];\n        }\n    }\n    return sum;\n}",
  "{\n    long sum = 0L;\n    foreach(i; 0 .. k)\n    {\n        if(arr[i] < 100L)\n\
    \        {\n            sum += arr[i];\n        }\n    }\n    return sum;\n}",
  "{\n    long sum = 0L;\n    foreach(i; 0 .. k)\n    {\n        if(arr[i] < 100L)\n\
    \        {\n            sum += arr[i];\n        }\n    }\n    return sum;\n}",
  "{\n    long sum = 0L;\n    for (long i = 0L; i < k; i++)\n    {\n        if (arr[i]\
    \ < 100L)\n        {\n            sum += arr[i];\n        }\n    }\n    return\
    \ sum;\n}", "{\n    long sum = 0L;\n    long i = 0L;\n    while (i < k)\n    {\n\
    \        if (arr[i] < 100L)\n        {\n            sum += arr[i];\n        }\n\
    \        i++;\n    }\n    return sum;\n}", "{\n    long sum = 0L;\n    foreach(i;\
    \ 0 .. k)\n    {\n        if(arr[i] < 100L)\n        {\n            sum += arr[i];\n\
    \        }\n    }\n    return sum;\n}", "{\n    long sum = 0L;\n    foreach(i;\
    \ 0..k)\n    {\n        if(arr[i] < 100L)\n        {\n            sum += arr[i];\n\
    \        }\n    }\n    return sum;\n}", "{\n    long sum = 0L;\n    foreach(i;\
    \ 0 .. k)\n    {\n        if(arr[i] < 100L)\n        {\n            sum += arr[i];\n\
    \        }\n    }\n    return sum;\n}"]
stop_tokens:
- "\n\n"
- "\nvoid"
- "\nbool"
- "\nint"

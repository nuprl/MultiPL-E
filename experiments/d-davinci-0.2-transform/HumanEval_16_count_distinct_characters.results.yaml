language: d
name: HumanEval_16_count_distinct_characters
results:
- exit_code: 1
  program: "import std.typecons;\nimport std.math;\n/*\n Given a string, find out\
    \ how many distinct characters (regardless of case) does it consist of\n    >>>\
    \ count_distinct_characters(\"xyzXYZ\")\n    3L\n    >>> count_distinct_characters(\"\
    Jerry\")\n    4L\n    \n*/\nlong count_distinct_characters(string string) \n{\n\
    \    long count = 0;\n    foreach(char c; string)\n    {\n        if(c.isAlpha)\n\
    \        {\n            count++;\n        }\n    }\n    return count;\n}\nunittest\n\
    {\n    alias candidate = count_distinct_characters;\n\n    assert(candidate(\"\
    \") == 0L);\n    assert(candidate(\"abcde\") == 5L);\n    assert(candidate(\"\
    abcdecadeCADE\") == 5L);\n    assert(candidate(\"aaaaAAAAaaaa\") == 1L);\n   \
    \ assert(candidate(\"Jerry jERRY JeRRRY\") == 5L);\n}\nvoid main(){}"
  status: SyntaxError
  stderr: '/tmp/tmpmrkg4h87.d(16): Error: no property `isAlpha` for type `char`

    Failed: ["dmd", "-unittest", "-v", "-o-", "/tmp/tmpmrkg4h87.d", "-I/tmp"]

    '
  stdout: ''
  timestamp: 1660164539
- exit_code: 1
  program: "import std.typecons;\nimport std.math;\n/*\n Given a string, find out\
    \ how many distinct characters (regardless of case) does it consist of\n    >>>\
    \ count_distinct_characters(\"xyzXYZ\")\n    3L\n    >>> count_distinct_characters(\"\
    Jerry\")\n    4L\n    \n*/\nlong count_distinct_characters(string string) \n{\n\
    \    long result = 0;\n    foreach(char c; string)\n    {\n        if(c.isAlpha)\n\
    \        {\n            result++;\n        }\n    }\n    return result;\n}\nunittest\n\
    {\n    alias candidate = count_distinct_characters;\n\n    assert(candidate(\"\
    \") == 0L);\n    assert(candidate(\"abcde\") == 5L);\n    assert(candidate(\"\
    abcdecadeCADE\") == 5L);\n    assert(candidate(\"aaaaAAAAaaaa\") == 1L);\n   \
    \ assert(candidate(\"Jerry jERRY JeRRRY\") == 5L);\n}\nvoid main(){}"
  status: SyntaxError
  stderr: '/tmp/tmpw2ly0j0m.d(16): Error: no property `isAlpha` for type `char`

    Failed: ["dmd", "-unittest", "-v", "-o-", "/tmp/tmpw2ly0j0m.d", "-I/tmp"]

    '
  stdout: ''
  timestamp: 1660164539
- exit_code: 1
  program: "import std.typecons;\nimport std.math;\n/*\n Given a string, find out\
    \ how many distinct characters (regardless of case) does it consist of\n    >>>\
    \ count_distinct_characters(\"xyzXYZ\")\n    3L\n    >>> count_distinct_characters(\"\
    Jerry\")\n    4L\n    \n*/\nlong count_distinct_characters(string string) \n{\n\
    \    return string.toLower().chars.distinct.length;\n}\nunittest\n{\n    alias\
    \ candidate = count_distinct_characters;\n\n    assert(candidate(\"\") == 0L);\n\
    \    assert(candidate(\"abcde\") == 5L);\n    assert(candidate(\"abcdecadeCADE\"\
    ) == 5L);\n    assert(candidate(\"aaaaAAAAaaaa\") == 1L);\n    assert(candidate(\"\
    Jerry jERRY JeRRRY\") == 5L);\n}\nvoid main(){}"
  status: SyntaxError
  stderr: '/tmp/tmpm1yt8kps.d(13): Error: no property `toLower` for type `string`

    Failed: ["dmd", "-unittest", "-v", "-o-", "/tmp/tmpm1yt8kps.d", "-I/tmp"]

    '
  stdout: ''
  timestamp: 1660164539
- exit_code: 1
  program: "import std.typecons;\nimport std.math;\n/*\n Given a string, find out\
    \ how many distinct characters (regardless of case) does it consist of\n    >>>\
    \ count_distinct_characters(\"xyzXYZ\")\n    3L\n    >>> count_distinct_characters(\"\
    Jerry\")\n    4L\n    \n*/\nlong count_distinct_characters(string string) \n{\n\
    \    return string.toLower().toHashSet().length;\n}\nunittest\n{\n    alias candidate\
    \ = count_distinct_characters;\n\n    assert(candidate(\"\") == 0L);\n    assert(candidate(\"\
    abcde\") == 5L);\n    assert(candidate(\"abcdecadeCADE\") == 5L);\n    assert(candidate(\"\
    aaaaAAAAaaaa\") == 1L);\n    assert(candidate(\"Jerry jERRY JeRRRY\") == 5L);\n\
    }\nvoid main(){}"
  status: SyntaxError
  stderr: '/tmp/tmpnmx9hjr5.d(13): Error: no property `toLower` for type `string`

    Failed: ["dmd", "-unittest", "-v", "-o-", "/tmp/tmpnmx9hjr5.d", "-I/tmp"]

    '
  stdout: ''
  timestamp: 1660164539
- exit_code: 1
  program: "import std.typecons;\nimport std.math;\n/*\n Given a string, find out\
    \ how many distinct characters (regardless of case) does it consist of\n    >>>\
    \ count_distinct_characters(\"xyzXYZ\")\n    3L\n    >>> count_distinct_characters(\"\
    Jerry\")\n    4L\n    \n*/\nlong count_distinct_characters(string string) \n{\n\
    \    return set(string.toLower).length;\n}\nunittest\n{\n    alias candidate =\
    \ count_distinct_characters;\n\n    assert(candidate(\"\") == 0L);\n    assert(candidate(\"\
    abcde\") == 5L);\n    assert(candidate(\"abcdecadeCADE\") == 5L);\n    assert(candidate(\"\
    aaaaAAAAaaaa\") == 1L);\n    assert(candidate(\"Jerry jERRY JeRRRY\") == 5L);\n\
    }\nvoid main(){}"
  status: SyntaxError
  stderr: '/tmp/tmpqlde1930.d(13): Error: undefined identifier `set`, did you mean
    template `get(K, V)(inout(V[K]) aa, K key, lazy inout(V) defaultValue)`?

    Failed: ["dmd", "-unittest", "-v", "-o-", "/tmp/tmpqlde1930.d", "-I/tmp"]

    '
  stdout: ''
  timestamp: 1660164539
- exit_code: 1
  program: "import std.typecons;\nimport std.math;\n/*\n Given a string, find out\
    \ how many distinct characters (regardless of case) does it consist of\n    >>>\
    \ count_distinct_characters(\"xyzXYZ\")\n    3L\n    >>> count_distinct_characters(\"\
    Jerry\")\n    4L\n    \n*/\nlong count_distinct_characters(string string) \n{\n\
    \    return string.toLower().toSet().length;\n}\nunittest\n{\n    alias candidate\
    \ = count_distinct_characters;\n\n    assert(candidate(\"\") == 0L);\n    assert(candidate(\"\
    abcde\") == 5L);\n    assert(candidate(\"abcdecadeCADE\") == 5L);\n    assert(candidate(\"\
    aaaaAAAAaaaa\") == 1L);\n    assert(candidate(\"Jerry jERRY JeRRRY\") == 5L);\n\
    }\nvoid main(){}"
  status: SyntaxError
  stderr: '/tmp/tmp0j41705u.d(13): Error: no property `toLower` for type `string`

    Failed: ["dmd", "-unittest", "-v", "-o-", "/tmp/tmp0j41705u.d", "-I/tmp"]

    '
  stdout: ''
  timestamp: 1660164539
- exit_code: 1
  program: "import std.typecons;\nimport std.math;\n/*\n Given a string, find out\
    \ how many distinct characters (regardless of case) does it consist of\n    >>>\
    \ count_distinct_characters(\"xyzXYZ\")\n    3L\n    >>> count_distinct_characters(\"\
    Jerry\")\n    4L\n    \n*/\nlong count_distinct_characters(string string) \n{\n\
    \    return string.toLower().toSet().length;\n}\nunittest\n{\n    alias candidate\
    \ = count_distinct_characters;\n\n    assert(candidate(\"\") == 0L);\n    assert(candidate(\"\
    abcde\") == 5L);\n    assert(candidate(\"abcdecadeCADE\") == 5L);\n    assert(candidate(\"\
    aaaaAAAAaaaa\") == 1L);\n    assert(candidate(\"Jerry jERRY JeRRRY\") == 5L);\n\
    }\nvoid main(){}"
  status: SyntaxError
  stderr: '/tmp/tmp0j41705u.d(13): Error: no property `toLower` for type `string`

    Failed: ["dmd", "-unittest", "-v", "-o-", "/tmp/tmp0j41705u.d", "-I/tmp"]

    '
  stdout: ''
  timestamp: 1660164539
- exit_code: 1
  program: "import std.typecons;\nimport std.math;\n/*\n Given a string, find out\
    \ how many distinct characters (regardless of case) does it consist of\n    >>>\
    \ count_distinct_characters(\"xyzXYZ\")\n    3L\n    >>> count_distinct_characters(\"\
    Jerry\")\n    4L\n    \n*/\nlong count_distinct_characters(string string) \n{\n\
    \    return set(string.toLower).length;\n}\nunittest\n{\n    alias candidate =\
    \ count_distinct_characters;\n\n    assert(candidate(\"\") == 0L);\n    assert(candidate(\"\
    abcde\") == 5L);\n    assert(candidate(\"abcdecadeCADE\") == 5L);\n    assert(candidate(\"\
    aaaaAAAAaaaa\") == 1L);\n    assert(candidate(\"Jerry jERRY JeRRRY\") == 5L);\n\
    }\nvoid main(){}"
  status: SyntaxError
  stderr: '/tmp/tmpqlde1930.d(13): Error: undefined identifier `set`, did you mean
    template `get(K, V)(inout(V[K]) aa, K key, lazy inout(V) defaultValue)`?

    Failed: ["dmd", "-unittest", "-v", "-o-", "/tmp/tmpqlde1930.d", "-I/tmp"]

    '
  stdout: ''
  timestamp: 1660164539
- exit_code: 1
  program: "import std.typecons;\nimport std.math;\n/*\n Given a string, find out\
    \ how many distinct characters (regardless of case) does it consist of\n    >>>\
    \ count_distinct_characters(\"xyzXYZ\")\n    3L\n    >>> count_distinct_characters(\"\
    Jerry\")\n    4L\n    \n*/\nlong count_distinct_characters(string string) \n{\n\
    \    auto char_set = set!char();\n    foreach(char c; string)\n    {\n       \
    \ char_set.insert(c);\n    }\n    return char_set.length;\n}\nunittest\n{\n  \
    \  alias candidate = count_distinct_characters;\n\n    assert(candidate(\"\")\
    \ == 0L);\n    assert(candidate(\"abcde\") == 5L);\n    assert(candidate(\"abcdecadeCADE\"\
    ) == 5L);\n    assert(candidate(\"aaaaAAAAaaaa\") == 1L);\n    assert(candidate(\"\
    Jerry jERRY JeRRRY\") == 5L);\n}\nvoid main(){}"
  status: SyntaxError
  stderr: '/tmp/tmprbgh1a0b.d(13): Error: template instance `set!char` template `set`
    is not defined, did you mean get(K, V)(inout(V[K]) aa, K key, lazy inout(V) defaultValue)?

    Failed: ["dmd", "-unittest", "-v", "-o-", "/tmp/tmprbgh1a0b.d", "-I/tmp"]

    '
  stdout: ''
  timestamp: 1660164539
- exit_code: 1
  program: "import std.typecons;\nimport std.math;\n/*\n Given a string, find out\
    \ how many distinct characters (regardless of case) does it consist of\n    >>>\
    \ count_distinct_characters(\"xyzXYZ\")\n    3L\n    >>> count_distinct_characters(\"\
    Jerry\")\n    4L\n    \n*/\nlong count_distinct_characters(string string) \n{\n\
    \    return string.toLower().toHashSet().length;\n}\n/*\n Given a string, find\
    \ out how many distinct characters (regardless of case) does it consist of\n \
    \   >>> count_distinct_characters(\"xyzXYZ\")\n    3L\n    >>> count_distinct_characters(\"\
    Jerry\")\n    4L\n    \n*/\nlong count_distinct_characters(string string) \n{\n\
    \    return string.toLower().toHashSet().length;\n}\n/*\n Given a string, find\
    \ out how many distinct characters (regardless of case) does it consist of\n \
    \   >>> count_distinct_characters(\"xyzXYZ\")\n    3L\n    >>> count_distinct_characters(\"\
    Jerry\")\n    4L\n    \n*/\nlong count_distinct_characters(string string) \n{\n\
    \    return string.toLower().toHashSet().length;\n}\n/*\n Given a string, find\
    \ out how many distinct characters (regardless of case) does it consist of\n \
    \   >>> count_distinct_characters(\"xyzXYZ\")\n    3L\n    >>> count_distinct_characters(\"\
    Jerry\")\n    4L\n    \n*/\nlong count_distinct_characters(string string) \n{\n\
    \    return string.toLower().toHashSet().length;\n}\n/*\n Given a string, find\
    \ out how many distinct characters (regardless of case) does it consist of\n \
    \   >>> count_distinct_characters(\"xyzXYZ\")\n    3L\n    >>> count_distinct_characters(\"\
    Jerry\")\n    4L\n    \n*/\nlong count_distinct_characters(string string) \n{\n\
    \    return string.toLower().toHashSet().length;\n}\n/*\n Given a string, find\
    \ out how many distinct characters (regardless of case) does it consist of\n \
    \   >>> count_distinct_characters(\"xyzXYZ\")\n    3L\n    >>> count_distinct_characters(\"\
    Jerry\")\n    4L\n    \n*/\nlong count_distinct_characters(string string) \n{\n\
    \    return string.toLower().toHashSet().length;\n}\n/*\n Given a string, find\
    \ out how many distinct characters (\nunittest\n{\n    alias candidate = count_distinct_characters;\n\
    \n    assert(candidate(\"\") == 0L);\n    assert(candidate(\"abcde\") == 5L);\n\
    \    assert(candidate(\"abcdecadeCADE\") == 5L);\n    assert(candidate(\"aaaaAAAAaaaa\"\
    ) == 1L);\n    assert(candidate(\"Jerry jERRY JeRRRY\") == 5L);\n}\nvoid main(){}"
  status: SyntaxError
  stderr: '/tmp/tmp2yo23yur.d(75): Error: unterminated /* */ comment

    Failed: ["dmd", "-unittest", "-v", "-o-", "/tmp/tmp2yo23yur.d", "-I/tmp"]

    '
  stdout: ''
  timestamp: 1660164539
- exit_code: 1
  program: "import std.typecons;\nimport std.math;\n/*\n Given a string, find out\
    \ how many distinct characters (regardless of case) does it consist of\n    >>>\
    \ count_distinct_characters(\"xyzXYZ\")\n    3L\n    >>> count_distinct_characters(\"\
    Jerry\")\n    4L\n    \n*/\nlong count_distinct_characters(string string) \n{\n\
    \    auto result = new HashSet!char;\n    foreach(c; string)\n    {\n        result.insert(c);\n\
    \    }\n    return result.length;\n}\nunittest\n{\n    alias candidate = count_distinct_characters;\n\
    \n    assert(candidate(\"\") == 0L);\n    assert(candidate(\"abcde\") == 5L);\n\
    \    assert(candidate(\"abcdecadeCADE\") == 5L);\n    assert(candidate(\"aaaaAAAAaaaa\"\
    ) == 1L);\n    assert(candidate(\"Jerry jERRY JeRRRY\") == 5L);\n}\nvoid main(){}"
  status: SyntaxError
  stderr: '/tmp/tmp5mgl0mtq.d(13): Error: template instance `HashSet!char` template
    `HashSet` is not defined

    Failed: ["dmd", "-unittest", "-v", "-o-", "/tmp/tmp5mgl0mtq.d", "-I/tmp"]

    '
  stdout: ''
  timestamp: 1660164539
- exit_code: 1
  program: "import std.typecons;\nimport std.math;\n/*\n Given a string, find out\
    \ how many distinct characters (regardless of case) does it consist of\n    >>>\
    \ count_distinct_characters(\"xyzXYZ\")\n    3L\n    >>> count_distinct_characters(\"\
    Jerry\")\n    4L\n    \n*/\nlong count_distinct_characters(string string) \n{\n\
    \    return string.toLower().toHashSet().length;\n}\nunittest\n{\n    alias candidate\
    \ = count_distinct_characters;\n\n    assert(candidate(\"\") == 0L);\n    assert(candidate(\"\
    abcde\") == 5L);\n    assert(candidate(\"abcdecadeCADE\") == 5L);\n    assert(candidate(\"\
    aaaaAAAAaaaa\") == 1L);\n    assert(candidate(\"Jerry jERRY JeRRRY\") == 5L);\n\
    }\nvoid main(){}"
  status: SyntaxError
  stderr: '/tmp/tmpnmx9hjr5.d(13): Error: no property `toLower` for type `string`

    Failed: ["dmd", "-unittest", "-v", "-o-", "/tmp/tmpnmx9hjr5.d", "-I/tmp"]

    '
  stdout: ''
  timestamp: 1660164539
- exit_code: 1
  program: "import std.typecons;\nimport std.math;\n/*\n Given a string, find out\
    \ how many distinct characters (regardless of case) does it consist of\n    >>>\
    \ count_distinct_characters(\"xyzXYZ\")\n    3L\n    >>> count_distinct_characters(\"\
    Jerry\")\n    4L\n    \n*/\nlong count_distinct_characters(string string) \n{\n\
    \    long count = 0;\n    foreach(char c; string)\n    {\n        if(c.isUpper)\n\
    \        {\n            c = c.toLower;\n        }\n        if(!c.isAlpha)\n  \
    \      {\n            continue;\n        }\n        if(!count)\n        {\n  \
    \          count++;\n        }\n        else\n        {\n            bool found\
    \ = false;\n            foreach(char d; string[0..count])\n            {\n   \
    \             if(c == d)\n                {\n                    found = true;\n\
    \                    break;\n                }\n            }\n            if(!found)\n\
    \            {\n                count++;\n            }\n        }\n    }\n  \
    \  return count;\n}\n/*\n Given a string, find out how many distinct characters\
    \ (regardless of case) does it consist of\n    >>> count_distinct_characters(\"\
    xyzXYZ\")\n    3L\n    >>> count_distinct_characters(\"Jerry\")\n    4L\n    \n\
    */\nlong count_distinct_characters_2(string string) \n{\n    long count = 0;\n\
    \    foreach(char c; string)\n    {\n        if(c.isUpper)\n        {\n      \
    \      c = c.toLower;\n        }\n        if(!c.isAlpha)\n        {\n        \
    \    continue;\n        }\n        if(!count)\n        {\n            count++;\n\
    \        }\n        else\n        {\n            bool found = false;\n       \
    \     foreach(char d; string[0..count])\n            {\n                if(c ==\
    \ d)\n                {\n                    found = true;\n                 \
    \   break;\n                }\n            }\n            if(!found)\n       \
    \     {\n                count++;\n            }\n        }\n    }\n    return\
    \ count;\n}\n/*\n Given a string, find out how many distinct characters (regardless\
    \ of case) does it consist of\n    >>> count_distinct_characters(\"xyzXYZ\")\n\
    \    3L\n    >>> count_distinct_characters(\"Jerry\")\n    4L\n    \n*/\nlong\
    \ count_distinct_characters_3(string string) \n{\n    long count = 0;\n\nunittest\n\
    {\n    alias candidate = count_distinct_characters;\n\n    assert(candidate(\"\
    \") == 0L);\n    assert(candidate(\"abcde\") == 5L);\n    assert(candidate(\"\
    abcdecadeCADE\") == 5L);\n    assert(candidate(\"aaaaAAAAaaaa\") == 1L);\n   \
    \ assert(candidate(\"Jerry jERRY JeRRRY\") == 5L);\n}\nvoid main(){}"
  status: SyntaxError
  stderr: '/tmp/tmp2igyqqau.d(103): Error: found `unittest` instead of statement

    Failed: ["dmd", "-unittest", "-v", "-o-", "/tmp/tmp2igyqqau.d", "-I/tmp"]

    '
  stdout: ''
  timestamp: 1660164539
- exit_code: 1
  program: "import std.typecons;\nimport std.math;\n/*\n Given a string, find out\
    \ how many distinct characters (regardless of case) does it consist of\n    >>>\
    \ count_distinct_characters(\"xyzXYZ\")\n    3L\n    >>> count_distinct_characters(\"\
    Jerry\")\n    4L\n    \n*/\nlong count_distinct_characters(string string) \n{\n\
    \    return string.toLower().toHashSet().length;\n}\nunittest\n{\n    alias candidate\
    \ = count_distinct_characters;\n\n    assert(candidate(\"\") == 0L);\n    assert(candidate(\"\
    abcde\") == 5L);\n    assert(candidate(\"abcdecadeCADE\") == 5L);\n    assert(candidate(\"\
    aaaaAAAAaaaa\") == 1L);\n    assert(candidate(\"Jerry jERRY JeRRRY\") == 5L);\n\
    }\nvoid main(){}"
  status: SyntaxError
  stderr: '/tmp/tmpnmx9hjr5.d(13): Error: no property `toLower` for type `string`

    Failed: ["dmd", "-unittest", "-v", "-o-", "/tmp/tmpnmx9hjr5.d", "-I/tmp"]

    '
  stdout: ''
  timestamp: 1660164539
- exit_code: 1
  program: "import std.typecons;\nimport std.math;\n/*\n Given a string, find out\
    \ how many distinct characters (regardless of case) does it consist of\n    >>>\
    \ count_distinct_characters(\"xyzXYZ\")\n    3L\n    >>> count_distinct_characters(\"\
    Jerry\")\n    4L\n    \n*/\nlong count_distinct_characters(string string) \n{\n\
    \    return to!string(string.tolower).distinct.length;\n}\nunittest\n{\n    alias\
    \ candidate = count_distinct_characters;\n\n    assert(candidate(\"\") == 0L);\n\
    \    assert(candidate(\"abcde\") == 5L);\n    assert(candidate(\"abcdecadeCADE\"\
    ) == 5L);\n    assert(candidate(\"aaaaAAAAaaaa\") == 1L);\n    assert(candidate(\"\
    Jerry jERRY JeRRRY\") == 5L);\n}\nvoid main(){}"
  status: SyntaxError
  stderr: '/tmp/tmpxwng_r9h.d(13): Error: template instance `to!string` template `to`
    is not defined, did you mean No?

    Failed: ["dmd", "-unittest", "-v", "-o-", "/tmp/tmpxwng_r9h.d", "-I/tmp"]

    '
  stdout: ''
  timestamp: 1660164539
- exit_code: 1
  program: "import std.typecons;\nimport std.math;\n/*\n Given a string, find out\
    \ how many distinct characters (regardless of case) does it consist of\n    >>>\
    \ count_distinct_characters(\"xyzXYZ\")\n    3L\n    >>> count_distinct_characters(\"\
    Jerry\")\n    4L\n    \n*/\nlong count_distinct_characters(string string) \n{\n\
    \    return to!string(string.toLower()).unique.length;\n}\nunittest\n{\n    alias\
    \ candidate = count_distinct_characters;\n\n    assert(candidate(\"\") == 0L);\n\
    \    assert(candidate(\"abcde\") == 5L);\n    assert(candidate(\"abcdecadeCADE\"\
    ) == 5L);\n    assert(candidate(\"aaaaAAAAaaaa\") == 1L);\n    assert(candidate(\"\
    Jerry jERRY JeRRRY\") == 5L);\n}\nvoid main(){}"
  status: SyntaxError
  stderr: '/tmp/tmpha98djs8.d(13): Error: template instance `to!string` template `to`
    is not defined, did you mean No?

    Failed: ["dmd", "-unittest", "-v", "-o-", "/tmp/tmpha98djs8.d", "-I/tmp"]

    '
  stdout: ''
  timestamp: 1660164539
- exit_code: 1
  program: "import std.typecons;\nimport std.math;\n/*\n Given a string, find out\
    \ how many distinct characters (regardless of case) does it consist of\n    >>>\
    \ count_distinct_characters(\"xyzXYZ\")\n    3L\n    >>> count_distinct_characters(\"\
    Jerry\")\n    4L\n    \n*/\nlong count_distinct_characters(string string) \n{\n\
    \    return std.algorithm.uniq(string.toLower()).length;\n}\nunittest\n{\n   \
    \ alias candidate = count_distinct_characters;\n\n    assert(candidate(\"\") ==\
    \ 0L);\n    assert(candidate(\"abcde\") == 5L);\n    assert(candidate(\"abcdecadeCADE\"\
    ) == 5L);\n    assert(candidate(\"aaaaAAAAaaaa\") == 1L);\n    assert(candidate(\"\
    Jerry jERRY JeRRRY\") == 5L);\n}\nvoid main(){}"
  status: SyntaxError
  stderr: '/tmp/tmpecw4ijjo.d(13): Error: undefined identifier `algorithm` in package
    `std`

    Failed: ["dmd", "-unittest", "-v", "-o-", "/tmp/tmpecw4ijjo.d", "-I/tmp"]

    '
  stdout: ''
  timestamp: 1660164539
- exit_code: 1
  program: "import std.typecons;\nimport std.math;\n/*\n Given a string, find out\
    \ how many distinct characters (regardless of case) does it consist of\n    >>>\
    \ count_distinct_characters(\"xyzXYZ\")\n    3L\n    >>> count_distinct_characters(\"\
    Jerry\")\n    4L\n    \n*/\nlong count_distinct_characters(string string) \n{\n\
    \    return string.toLower().toHashSet().length;\n}\nunittest\n{\n    alias candidate\
    \ = count_distinct_characters;\n\n    assert(candidate(\"\") == 0L);\n    assert(candidate(\"\
    abcde\") == 5L);\n    assert(candidate(\"abcdecadeCADE\") == 5L);\n    assert(candidate(\"\
    aaaaAAAAaaaa\") == 1L);\n    assert(candidate(\"Jerry jERRY JeRRRY\") == 5L);\n\
    }\nvoid main(){}"
  status: SyntaxError
  stderr: '/tmp/tmpnmx9hjr5.d(13): Error: no property `toLower` for type `string`

    Failed: ["dmd", "-unittest", "-v", "-o-", "/tmp/tmpnmx9hjr5.d", "-I/tmp"]

    '
  stdout: ''
  timestamp: 1660164539
- exit_code: 1
  program: "import std.typecons;\nimport std.math;\n/*\n Given a string, find out\
    \ how many distinct characters (regardless of case) does it consist of\n    >>>\
    \ count_distinct_characters(\"xyzXYZ\")\n    3L\n    >>> count_distinct_characters(\"\
    Jerry\")\n    4L\n    \n*/\nlong count_distinct_characters(string string) \n{\n\
    \    return string.toLower().toHashSet().length;\n}\nunittest\n{\n    alias candidate\
    \ = count_distinct_characters;\n\n    assert(candidate(\"\") == 0L);\n    assert(candidate(\"\
    abcde\") == 5L);\n    assert(candidate(\"abcdecadeCADE\") == 5L);\n    assert(candidate(\"\
    aaaaAAAAaaaa\") == 1L);\n    assert(candidate(\"Jerry jERRY JeRRRY\") == 5L);\n\
    }\nvoid main(){}"
  status: SyntaxError
  stderr: '/tmp/tmpnmx9hjr5.d(13): Error: no property `toLower` for type `string`

    Failed: ["dmd", "-unittest", "-v", "-o-", "/tmp/tmpnmx9hjr5.d", "-I/tmp"]

    '
  stdout: ''
  timestamp: 1660164539
- exit_code: 1
  program: "import std.typecons;\nimport std.math;\n/*\n Given a string, find out\
    \ how many distinct characters (regardless of case) does it consist of\n    >>>\
    \ count_distinct_characters(\"xyzXYZ\")\n    3L\n    >>> count_distinct_characters(\"\
    Jerry\")\n    4L\n    \n*/\nlong count_distinct_characters(string string) \n{\n\
    \    long count = 0;\n    foreach(char c; string)\n    {\n        if(c.isAlpha)\n\
    \        {\n            count++;\n        }\n    }\n    return count;\n}\n/*\n\
    \ Given a string, find out how many distinct characters (regardless of case) does\
    \ it consist of\n    >>> count_distinct_characters(\"xyzXYZ\")\n    3L\n    >>>\
    \ count_distinct_characters(\"Jerry\")\n    4L\n    \n*/\nlong count_distinct_characters_2(string\
    \ string) \n{\n    long count = 0;\n    foreach(char c; string)\n    {\n     \
    \   if(c.isAlpha)\n        {\n            count++;\n        }\n    }\n    return\
    \ count;\n}\n/*\n Given a string, find out how many distinct characters (regardless\
    \ of case) does it consist of\n    >>> count_distinct_characters(\"xyzXYZ\")\n\
    \    3L\n    >>> count_distinct_characters(\"Jerry\")\n    4L\n    \n*/\nlong\
    \ count_distinct_characters_3(string string) \n{\n    long count = 0;\n    foreach(char\
    \ c; string)\n    {\n        if(c.isAlpha)\n        {\n            count++;\n\
    \        }\n    }\n    return count;\n}\n/*\n Given a string, find out how many\
    \ distinct characters (regardless of case) does it consist of\n    >>> count_distinct_characters(\"\
    xyzXYZ\")\n    3L\n    >>> count_distinct_characters(\"Jerry\")\n    4L\n    \n\
    */\nlong count_distinct_characters_4(string string) \n{\n    long count = 0;\n\
    \    foreach(char c; string)\n    {\n        if(c.isAlpha)\n        {\n      \
    \      count++;\n        }\n    }\n    return count;\n}\n/*\n Given a string,\
    \ find out how many distinct characters (regardless of case) does it consist of\n\
    \    >>> count_distinct_characters(\"xyzXYZ\")\n    3L\n    >>> count_distinct_characters(\"\
    Jerry\")\n    4L\n    \n*/\nlong count_\nunittest\n{\n    alias candidate = count_distinct_characters;\n\
    \n    assert(candidate(\"\") == 0L);\n    assert(candidate(\"abcde\") == 5L);\n\
    \    assert(candidate(\"abcdecadeCADE\") == 5L);\n    assert(candidate(\"aaaaAAAAaaaa\"\
    ) == 1L);\n    assert(candidate(\"Jerry jERRY JeRRRY\") == 5L);\n}\nvoid main(){}"
  status: SyntaxError
  stderr: '/tmp/tmppyatz3l3.d(92): Error: semicolon expected, not `unittest`

    Failed: ["dmd", "-unittest", "-v", "-o-", "/tmp/tmppyatz3l3.d", "-I/tmp"]

    '
  stdout: ''
  timestamp: 1660164539
- exit_code: 1
  program: "import std.typecons;\nimport std.math;\n/*\n Given a string, find out\
    \ how many distinct characters (regardless of case) does it consist of\n    >>>\
    \ count_distinct_characters(\"xyzXYZ\")\n    3L\n    >>> count_distinct_characters(\"\
    Jerry\")\n    4L\n    \n*/\nlong count_distinct_characters(string string) \n{\n\
    \    auto char_set = set!char();\n    foreach(char c; string)\n    {\n       \
    \ char_set.insert(c);\n    }\n    return char_set.length;\n}\nunittest\n{\n  \
    \  alias candidate = count_distinct_characters;\n\n    assert(candidate(\"\")\
    \ == 0L);\n    assert(candidate(\"abcde\") == 5L);\n    assert(candidate(\"abcdecadeCADE\"\
    ) == 5L);\n    assert(candidate(\"aaaaAAAAaaaa\") == 1L);\n    assert(candidate(\"\
    Jerry jERRY JeRRRY\") == 5L);\n}\nvoid main(){}"
  status: SyntaxError
  stderr: '/tmp/tmprbgh1a0b.d(13): Error: template instance `set!char` template `set`
    is not defined, did you mean get(K, V)(inout(V[K]) aa, K key, lazy inout(V) defaultValue)?

    Failed: ["dmd", "-unittest", "-v", "-o-", "/tmp/tmprbgh1a0b.d", "-I/tmp"]

    '
  stdout: ''
  timestamp: 1660164539
- exit_code: 1
  program: "import std.typecons;\nimport std.math;\n/*\n Given a string, find out\
    \ how many distinct characters (regardless of case) does it consist of\n    >>>\
    \ count_distinct_characters(\"xyzXYZ\")\n    3L\n    >>> count_distinct_characters(\"\
    Jerry\")\n    4L\n    \n*/\nlong count_distinct_characters(string string) \n{\n\
    \    long count = 0;\n    foreach(char c; string)\n    {\n        if(c.tolower()\
    \ in count)\n            continue;\n        count++;\n    }\n    return count;\n\
    }\nunittest\n{\n    alias candidate = count_distinct_characters;\n\n    assert(candidate(\"\
    \") == 0L);\n    assert(candidate(\"abcde\") == 5L);\n    assert(candidate(\"\
    abcdecadeCADE\") == 5L);\n    assert(candidate(\"aaaaAAAAaaaa\") == 1L);\n   \
    \ assert(candidate(\"Jerry jERRY JeRRRY\") == 5L);\n}\nvoid main(){}"
  status: SyntaxError
  stderr: '/tmp/tmpbeaivjcb.d(16): Error: no property `tolower` for type `char`

    Failed: ["dmd", "-unittest", "-v", "-o-", "/tmp/tmpbeaivjcb.d", "-I/tmp"]

    '
  stdout: ''
  timestamp: 1660164539
- exit_code: 1
  program: "import std.typecons;\nimport std.math;\n/*\n Given a string, find out\
    \ how many distinct characters (regardless of case) does it consist of\n    >>>\
    \ count_distinct_characters(\"xyzXYZ\")\n    3L\n    >>> count_distinct_characters(\"\
    Jerry\")\n    4L\n    \n*/\nlong count_distinct_characters(string string) \n{\n\
    \    return to!string(string.toLower()).distinct.length;\n}\nunittest\n{\n   \
    \ alias candidate = count_distinct_characters;\n\n    assert(candidate(\"\") ==\
    \ 0L);\n    assert(candidate(\"abcde\") == 5L);\n    assert(candidate(\"abcdecadeCADE\"\
    ) == 5L);\n    assert(candidate(\"aaaaAAAAaaaa\") == 1L);\n    assert(candidate(\"\
    Jerry jERRY JeRRRY\") == 5L);\n}\nvoid main(){}"
  status: SyntaxError
  stderr: '/tmp/tmppwvco4cu.d(13): Error: template instance `to!string` template `to`
    is not defined, did you mean No?

    Failed: ["dmd", "-unittest", "-v", "-o-", "/tmp/tmppwvco4cu.d", "-I/tmp"]

    '
  stdout: ''
  timestamp: 1660164539
- exit_code: 1
  program: "import std.typecons;\nimport std.math;\n/*\n Given a string, find out\
    \ how many distinct characters (regardless of case) does it consist of\n    >>>\
    \ count_distinct_characters(\"xyzXYZ\")\n    3L\n    >>> count_distinct_characters(\"\
    Jerry\")\n    4L\n    \n*/\nlong count_distinct_characters(string string) \n{\n\
    \    return to!string(string.toLower()).distinct.length;\n}\nunittest\n{\n   \
    \ alias candidate = count_distinct_characters;\n\n    assert(candidate(\"\") ==\
    \ 0L);\n    assert(candidate(\"abcde\") == 5L);\n    assert(candidate(\"abcdecadeCADE\"\
    ) == 5L);\n    assert(candidate(\"aaaaAAAAaaaa\") == 1L);\n    assert(candidate(\"\
    Jerry jERRY JeRRRY\") == 5L);\n}\nvoid main(){}"
  status: SyntaxError
  stderr: '/tmp/tmppwvco4cu.d(13): Error: template instance `to!string` template `to`
    is not defined, did you mean No?

    Failed: ["dmd", "-unittest", "-v", "-o-", "/tmp/tmppwvco4cu.d", "-I/tmp"]

    '
  stdout: ''
  timestamp: 1660164539
- exit_code: 1
  program: "import std.typecons;\nimport std.math;\n/*\n Given a string, find out\
    \ how many distinct characters (regardless of case) does it consist of\n    >>>\
    \ count_distinct_characters(\"xyzXYZ\")\n    3L\n    >>> count_distinct_characters(\"\
    Jerry\")\n    4L\n    \n*/\nlong count_distinct_characters(string string) \n{\n\
    \    return set(string.toLowerCase).length;\n}\nunittest\n{\n    alias candidate\
    \ = count_distinct_characters;\n\n    assert(candidate(\"\") == 0L);\n    assert(candidate(\"\
    abcde\") == 5L);\n    assert(candidate(\"abcdecadeCADE\") == 5L);\n    assert(candidate(\"\
    aaaaAAAAaaaa\") == 1L);\n    assert(candidate(\"Jerry jERRY JeRRRY\") == 5L);\n\
    }\nvoid main(){}"
  status: SyntaxError
  stderr: '/tmp/tmp4lz5kksp.d(13): Error: undefined identifier `set`, did you mean
    template `get(K, V)(inout(V[K]) aa, K key, lazy inout(V) defaultValue)`?

    Failed: ["dmd", "-unittest", "-v", "-o-", "/tmp/tmp4lz5kksp.d", "-I/tmp"]

    '
  stdout: ''
  timestamp: 1660164539
- exit_code: 1
  program: "import std.typecons;\nimport std.math;\n/*\n Given a string, find out\
    \ how many distinct characters (regardless of case) does it consist of\n    >>>\
    \ count_distinct_characters(\"xyzXYZ\")\n    3L\n    >>> count_distinct_characters(\"\
    Jerry\")\n    4L\n    \n*/\nlong count_distinct_characters(string string) \n{\n\
    \    return set(string.toLowerCase).length;\n}\nunittest\n{\n    alias candidate\
    \ = count_distinct_characters;\n\n    assert(candidate(\"\") == 0L);\n    assert(candidate(\"\
    abcde\") == 5L);\n    assert(candidate(\"abcdecadeCADE\") == 5L);\n    assert(candidate(\"\
    aaaaAAAAaaaa\") == 1L);\n    assert(candidate(\"Jerry jERRY JeRRRY\") == 5L);\n\
    }\nvoid main(){}"
  status: SyntaxError
  stderr: '/tmp/tmp4lz5kksp.d(13): Error: undefined identifier `set`, did you mean
    template `get(K, V)(inout(V[K]) aa, K key, lazy inout(V) defaultValue)`?

    Failed: ["dmd", "-unittest", "-v", "-o-", "/tmp/tmp4lz5kksp.d", "-I/tmp"]

    '
  stdout: ''
  timestamp: 1660164539
- exit_code: 1
  program: "import std.typecons;\nimport std.math;\n/*\n Given a string, find out\
    \ how many distinct characters (regardless of case) does it consist of\n    >>>\
    \ count_distinct_characters(\"xyzXYZ\")\n    3L\n    >>> count_distinct_characters(\"\
    Jerry\")\n    4L\n    \n*/\nlong count_distinct_characters(string string) \n{\n\
    \    return string.toLower().toHashSet().length;\n}\nunittest\n{\n    alias candidate\
    \ = count_distinct_characters;\n\n    assert(candidate(\"\") == 0L);\n    assert(candidate(\"\
    abcde\") == 5L);\n    assert(candidate(\"abcdecadeCADE\") == 5L);\n    assert(candidate(\"\
    aaaaAAAAaaaa\") == 1L);\n    assert(candidate(\"Jerry jERRY JeRRRY\") == 5L);\n\
    }\nvoid main(){}"
  status: SyntaxError
  stderr: '/tmp/tmpnmx9hjr5.d(13): Error: no property `toLower` for type `string`

    Failed: ["dmd", "-unittest", "-v", "-o-", "/tmp/tmpnmx9hjr5.d", "-I/tmp"]

    '
  stdout: ''
  timestamp: 1660164539
- exit_code: 1
  program: "import std.typecons;\nimport std.math;\n/*\n Given a string, find out\
    \ how many distinct characters (regardless of case) does it consist of\n    >>>\
    \ count_distinct_characters(\"xyzXYZ\")\n    3L\n    >>> count_distinct_characters(\"\
    Jerry\")\n    4L\n    \n*/\nlong count_distinct_characters(string string) \n{\n\
    \    auto set = new Set!char();\n    foreach(c; string)\n    {\n        set.insert(c);\n\
    \    }\n    return set.length;\n}\nunittest\n{\n    alias candidate = count_distinct_characters;\n\
    \n    assert(candidate(\"\") == 0L);\n    assert(candidate(\"abcde\") == 5L);\n\
    \    assert(candidate(\"abcdecadeCADE\") == 5L);\n    assert(candidate(\"aaaaAAAAaaaa\"\
    ) == 1L);\n    assert(candidate(\"Jerry jERRY JeRRRY\") == 5L);\n}\nvoid main(){}"
  status: SyntaxError
  stderr: '/tmp/tmp75npoeya.d(13): Error: template instance `Set!char` template `Set`
    is not defined, did you mean get(K, V)(inout(V[K]) aa, K key, lazy inout(V) defaultValue)?

    Failed: ["dmd", "-unittest", "-v", "-o-", "/tmp/tmp75npoeya.d", "-I/tmp"]

    '
  stdout: ''
  timestamp: 1660164539
- exit_code: 1
  program: "import std.typecons;\nimport std.math;\n/*\n Given a string, find out\
    \ how many distinct characters (regardless of case) does it consist of\n    >>>\
    \ count_distinct_characters(\"xyzXYZ\")\n    3L\n    >>> count_distinct_characters(\"\
    Jerry\")\n    4L\n    \n*/\nlong count_distinct_characters(string string) \n{\n\
    \    return set!(char)(string).length;\n}\nunittest\n{\n    alias candidate =\
    \ count_distinct_characters;\n\n    assert(candidate(\"\") == 0L);\n    assert(candidate(\"\
    abcde\") == 5L);\n    assert(candidate(\"abcdecadeCADE\") == 5L);\n    assert(candidate(\"\
    aaaaAAAAaaaa\") == 1L);\n    assert(candidate(\"Jerry jERRY JeRRRY\") == 5L);\n\
    }\nvoid main(){}"
  status: SyntaxError
  stderr: '/tmp/tmp9xh7ufsa.d(13): Error: template instance `set!char` template `set`
    is not defined, did you mean get(K, V)(inout(V[K]) aa, K key, lazy inout(V) defaultValue)?

    Failed: ["dmd", "-unittest", "-v", "-o-", "/tmp/tmp9xh7ufsa.d", "-I/tmp"]

    '
  stdout: ''
  timestamp: 1660164539
- exit_code: 1
  program: "import std.typecons;\nimport std.math;\n/*\n Given a string, find out\
    \ how many distinct characters (regardless of case) does it consist of\n    >>>\
    \ count_distinct_characters(\"xyzXYZ\")\n    3L\n    >>> count_distinct_characters(\"\
    Jerry\")\n    4L\n    \n*/\nlong count_distinct_characters(string string) \n{\n\
    \    long result = 0;\n    foreach(char c; string)\n    {\n        if(c.tolower()\
    \ in result)\n        {\n            continue;\n        }\n        result ~= c.tolower();\n\
    \    }\n    return result.length;\n}\nunittest\n{\n    alias candidate = count_distinct_characters;\n\
    \n    assert(candidate(\"\") == 0L);\n    assert(candidate(\"abcde\") == 5L);\n\
    \    assert(candidate(\"abcdecadeCADE\") == 5L);\n    assert(candidate(\"aaaaAAAAaaaa\"\
    ) == 1L);\n    assert(candidate(\"Jerry jERRY JeRRRY\") == 5L);\n}\nvoid main(){}"
  status: SyntaxError
  stderr: '/tmp/tmpmqmv06z9.d(16): Error: no property `tolower` for type `char`

    /tmp/tmpmqmv06z9.d(20): Error: no property `tolower` for type `char`

    /tmp/tmpmqmv06z9.d(22): Error: no property `length` for type `long`

    Failed: ["dmd", "-unittest", "-v", "-o-", "/tmp/tmpmqmv06z9.d", "-I/tmp"]

    '
  stdout: ''
  timestamp: 1660164539
- exit_code: 1
  program: "import std.typecons;\nimport std.math;\n/*\n Given a string, find out\
    \ how many distinct characters (regardless of case) does it consist of\n    >>>\
    \ count_distinct_characters(\"xyzXYZ\")\n    3L\n    >>> count_distinct_characters(\"\
    Jerry\")\n    4L\n    \n*/\nlong count_distinct_characters(string string) \n{\n\
    \    return set!(char)(string).length;\n}\nunittest\n{\n    alias candidate =\
    \ count_distinct_characters;\n\n    assert(candidate(\"\") == 0L);\n    assert(candidate(\"\
    abcde\") == 5L);\n    assert(candidate(\"abcdecadeCADE\") == 5L);\n    assert(candidate(\"\
    aaaaAAAAaaaa\") == 1L);\n    assert(candidate(\"Jerry jERRY JeRRRY\") == 5L);\n\
    }\nvoid main(){}"
  status: SyntaxError
  stderr: '/tmp/tmp9xh7ufsa.d(13): Error: template instance `set!char` template `set`
    is not defined, did you mean get(K, V)(inout(V[K]) aa, K key, lazy inout(V) defaultValue)?

    Failed: ["dmd", "-unittest", "-v", "-o-", "/tmp/tmp9xh7ufsa.d", "-I/tmp"]

    '
  stdout: ''
  timestamp: 1660164539
- exit_code: 1
  program: "import std.typecons;\nimport std.math;\n/*\n Given a string, find out\
    \ how many distinct characters (regardless of case) does it consist of\n    >>>\
    \ count_distinct_characters(\"xyzXYZ\")\n    3L\n    >>> count_distinct_characters(\"\
    Jerry\")\n    4L\n    \n*/\nlong count_distinct_characters(string string) \n{\n\
    \    return to!string(string.toLower()).length;\n}\nunittest\n{\n    alias candidate\
    \ = count_distinct_characters;\n\n    assert(candidate(\"\") == 0L);\n    assert(candidate(\"\
    abcde\") == 5L);\n    assert(candidate(\"abcdecadeCADE\") == 5L);\n    assert(candidate(\"\
    aaaaAAAAaaaa\") == 1L);\n    assert(candidate(\"Jerry jERRY JeRRRY\") == 5L);\n\
    }\nvoid main(){}"
  status: SyntaxError
  stderr: '/tmp/tmphbe_dxa7.d(13): Error: template instance `to!string` template `to`
    is not defined, did you mean No?

    Failed: ["dmd", "-unittest", "-v", "-o-", "/tmp/tmphbe_dxa7.d", "-I/tmp"]

    '
  stdout: ''
  timestamp: 1660164539
- exit_code: 1
  program: "import std.typecons;\nimport std.math;\n/*\n Given a string, find out\
    \ how many distinct characters (regardless of case) does it consist of\n    >>>\
    \ count_distinct_characters(\"xyzXYZ\")\n    3L\n    >>> count_distinct_characters(\"\
    Jerry\")\n    4L\n    \n*/\nlong count_distinct_characters(string string) \n{\n\
    \    return string.toLower().toHashSet().length;\n}\nunittest\n{\n    alias candidate\
    \ = count_distinct_characters;\n\n    assert(candidate(\"\") == 0L);\n    assert(candidate(\"\
    abcde\") == 5L);\n    assert(candidate(\"abcdecadeCADE\") == 5L);\n    assert(candidate(\"\
    aaaaAAAAaaaa\") == 1L);\n    assert(candidate(\"Jerry jERRY JeRRRY\") == 5L);\n\
    }\nvoid main(){}"
  status: SyntaxError
  stderr: '/tmp/tmpnmx9hjr5.d(13): Error: no property `toLower` for type `string`

    Failed: ["dmd", "-unittest", "-v", "-o-", "/tmp/tmpnmx9hjr5.d", "-I/tmp"]

    '
  stdout: ''
  timestamp: 1660164539
- exit_code: 1
  program: "import std.typecons;\nimport std.math;\n/*\n Given a string, find out\
    \ how many distinct characters (regardless of case) does it consist of\n    >>>\
    \ count_distinct_characters(\"xyzXYZ\")\n    3L\n    >>> count_distinct_characters(\"\
    Jerry\")\n    4L\n    \n*/\nlong count_distinct_characters(string string) \n{\n\
    \    return set(string.toLowerCase).length;\n}\nunittest\n{\n    alias candidate\
    \ = count_distinct_characters;\n\n    assert(candidate(\"\") == 0L);\n    assert(candidate(\"\
    abcde\") == 5L);\n    assert(candidate(\"abcdecadeCADE\") == 5L);\n    assert(candidate(\"\
    aaaaAAAAaaaa\") == 1L);\n    assert(candidate(\"Jerry jERRY JeRRRY\") == 5L);\n\
    }\nvoid main(){}"
  status: SyntaxError
  stderr: '/tmp/tmp4lz5kksp.d(13): Error: undefined identifier `set`, did you mean
    template `get(K, V)(inout(V[K]) aa, K key, lazy inout(V) defaultValue)`?

    Failed: ["dmd", "-unittest", "-v", "-o-", "/tmp/tmp4lz5kksp.d", "-I/tmp"]

    '
  stdout: ''
  timestamp: 1660164539
- exit_code: 1
  program: "import std.typecons;\nimport std.math;\n/*\n Given a string, find out\
    \ how many distinct characters (regardless of case) does it consist of\n    >>>\
    \ count_distinct_characters(\"xyzXYZ\")\n    3L\n    >>> count_distinct_characters(\"\
    Jerry\")\n    4L\n    \n*/\nlong count_distinct_characters(string string) \n{\n\
    \    return set(string.toLower()).length;\n}\nunittest\n{\n    alias candidate\
    \ = count_distinct_characters;\n\n    assert(candidate(\"\") == 0L);\n    assert(candidate(\"\
    abcde\") == 5L);\n    assert(candidate(\"abcdecadeCADE\") == 5L);\n    assert(candidate(\"\
    aaaaAAAAaaaa\") == 1L);\n    assert(candidate(\"Jerry jERRY JeRRRY\") == 5L);\n\
    }\nvoid main(){}"
  status: SyntaxError
  stderr: '/tmp/tmp4fc64pj_.d(13): Error: undefined identifier `set`, did you mean
    template `get(K, V)(inout(V[K]) aa, K key, lazy inout(V) defaultValue)`?

    Failed: ["dmd", "-unittest", "-v", "-o-", "/tmp/tmp4fc64pj_.d", "-I/tmp"]

    '
  stdout: ''
  timestamp: 1660164539
- exit_code: 1
  program: "import std.typecons;\nimport std.math;\n/*\n Given a string, find out\
    \ how many distinct characters (regardless of case) does it consist of\n    >>>\
    \ count_distinct_characters(\"xyzXYZ\")\n    3L\n    >>> count_distinct_characters(\"\
    Jerry\")\n    4L\n    \n*/\nlong count_distinct_characters(string string) \n{\n\
    \    return to!string(string.toLower()).length;\n}\nunittest\n{\n    alias candidate\
    \ = count_distinct_characters;\n\n    assert(candidate(\"\") == 0L);\n    assert(candidate(\"\
    abcde\") == 5L);\n    assert(candidate(\"abcdecadeCADE\") == 5L);\n    assert(candidate(\"\
    aaaaAAAAaaaa\") == 1L);\n    assert(candidate(\"Jerry jERRY JeRRRY\") == 5L);\n\
    }\nvoid main(){}"
  status: SyntaxError
  stderr: '/tmp/tmphbe_dxa7.d(13): Error: template instance `to!string` template `to`
    is not defined, did you mean No?

    Failed: ["dmd", "-unittest", "-v", "-o-", "/tmp/tmphbe_dxa7.d", "-I/tmp"]

    '
  stdout: ''
  timestamp: 1660164539
- exit_code: 1
  program: "import std.typecons;\nimport std.math;\n/*\n Given a string, find out\
    \ how many distinct characters (regardless of case) does it consist of\n    >>>\
    \ count_distinct_characters(\"xyzXYZ\")\n    3L\n    >>> count_distinct_characters(\"\
    Jerry\")\n    4L\n    \n*/\nlong count_distinct_characters(string string) \n{\n\
    \    auto result = new HashSet!char();\n    foreach(c; string)\n    {\n      \
    \  result.insert(c);\n    }\n    return result.length;\n}\nunittest\n{\n    alias\
    \ candidate = count_distinct_characters;\n\n    assert(candidate(\"\") == 0L);\n\
    \    assert(candidate(\"abcde\") == 5L);\n    assert(candidate(\"abcdecadeCADE\"\
    ) == 5L);\n    assert(candidate(\"aaaaAAAAaaaa\") == 1L);\n    assert(candidate(\"\
    Jerry jERRY JeRRRY\") == 5L);\n}\nvoid main(){}"
  status: SyntaxError
  stderr: '/tmp/tmpl16vwdp4.d(13): Error: template instance `HashSet!char` template
    `HashSet` is not defined

    Failed: ["dmd", "-unittest", "-v", "-o-", "/tmp/tmpl16vwdp4.d", "-I/tmp"]

    '
  stdout: ''
  timestamp: 1660164539
- exit_code: 1
  program: "import std.typecons;\nimport std.math;\n/*\n Given a string, find out\
    \ how many distinct characters (regardless of case) does it consist of\n    >>>\
    \ count_distinct_characters(\"xyzXYZ\")\n    3L\n    >>> count_distinct_characters(\"\
    Jerry\")\n    4L\n    \n*/\nlong count_distinct_characters(string string) \n{\n\
    \    return string.toLower().toHashSet().length;\n}\nunittest\n{\n    alias candidate\
    \ = count_distinct_characters;\n\n    assert(candidate(\"\") == 0L);\n    assert(candidate(\"\
    abcde\") == 5L);\n    assert(candidate(\"abcdecadeCADE\") == 5L);\n    assert(candidate(\"\
    aaaaAAAAaaaa\") == 1L);\n    assert(candidate(\"Jerry jERRY JeRRRY\") == 5L);\n\
    }\nvoid main(){}"
  status: SyntaxError
  stderr: '/tmp/tmpnmx9hjr5.d(13): Error: no property `toLower` for type `string`

    Failed: ["dmd", "-unittest", "-v", "-o-", "/tmp/tmpnmx9hjr5.d", "-I/tmp"]

    '
  stdout: ''
  timestamp: 1660164539
- exit_code: 1
  program: "import std.typecons;\nimport std.math;\n/*\n Given a string, find out\
    \ how many distinct characters (regardless of case) does it consist of\n    >>>\
    \ count_distinct_characters(\"xyzXYZ\")\n    3L\n    >>> count_distinct_characters(\"\
    Jerry\")\n    4L\n    \n*/\nlong count_distinct_characters(string string) \n{\n\
    \    long count = 0;\n    foreach(char c; string)\n    {\n        if(c.isUpper)\n\
    \        {\n            c = c.toLower;\n        }\n        if(!count.counts.contains(c))\n\
    \        {\n            count.counts[c] = 1;\n            count++;\n        }\n\
    \    }\n    return count;\n}\nunittest\n{\n    alias candidate = count_distinct_characters;\n\
    \n    assert(candidate(\"\") == 0L);\n    assert(candidate(\"abcde\") == 5L);\n\
    \    assert(candidate(\"abcdecadeCADE\") == 5L);\n    assert(candidate(\"aaaaAAAAaaaa\"\
    ) == 1L);\n    assert(candidate(\"Jerry jERRY JeRRRY\") == 5L);\n}\nvoid main(){}"
  status: SyntaxError
  stderr: '/tmp/tmpbhcp794b.d(16): Error: no property `isUpper` for type `char`

    /tmp/tmpbhcp794b.d(18): Error: no property `toLower` for type `char`

    /tmp/tmpbhcp794b.d(20): Error: no property `counts` for type `long`

    /tmp/tmpbhcp794b.d(22): Error: no property `counts` for type `long`

    Failed: ["dmd", "-unittest", "-v", "-o-", "/tmp/tmpbhcp794b.d", "-I/tmp"]

    '
  stdout: ''
  timestamp: 1660164539
- exit_code: 1
  program: "import std.typecons;\nimport std.math;\n/*\n Given a string, find out\
    \ how many distinct characters (regardless of case) does it consist of\n    >>>\
    \ count_distinct_characters(\"xyzXYZ\")\n    3L\n    >>> count_distinct_characters(\"\
    Jerry\")\n    4L\n    \n*/\nlong count_distinct_characters(string string) \n{\n\
    \    return string.toLower().toSet().length;\n}\nunittest\n{\n    alias candidate\
    \ = count_distinct_characters;\n\n    assert(candidate(\"\") == 0L);\n    assert(candidate(\"\
    abcde\") == 5L);\n    assert(candidate(\"abcdecadeCADE\") == 5L);\n    assert(candidate(\"\
    aaaaAAAAaaaa\") == 1L);\n    assert(candidate(\"Jerry jERRY JeRRRY\") == 5L);\n\
    }\nvoid main(){}"
  status: SyntaxError
  stderr: '/tmp/tmp0j41705u.d(13): Error: no property `toLower` for type `string`

    Failed: ["dmd", "-unittest", "-v", "-o-", "/tmp/tmp0j41705u.d", "-I/tmp"]

    '
  stdout: ''
  timestamp: 1660164539
- exit_code: 1
  program: "import std.typecons;\nimport std.math;\n/*\n Given a string, find out\
    \ how many distinct characters (regardless of case) does it consist of\n    >>>\
    \ count_distinct_characters(\"xyzXYZ\")\n    3L\n    >>> count_distinct_characters(\"\
    Jerry\")\n    4L\n    \n*/\nlong count_distinct_characters(string string) \n{\n\
    \    return std.algorithm.uniq(string.toLower()).length;\n}\nunittest\n{\n   \
    \ alias candidate = count_distinct_characters;\n\n    assert(candidate(\"\") ==\
    \ 0L);\n    assert(candidate(\"abcde\") == 5L);\n    assert(candidate(\"abcdecadeCADE\"\
    ) == 5L);\n    assert(candidate(\"aaaaAAAAaaaa\") == 1L);\n    assert(candidate(\"\
    Jerry jERRY JeRRRY\") == 5L);\n}\nvoid main(){}"
  status: SyntaxError
  stderr: '/tmp/tmpecw4ijjo.d(13): Error: undefined identifier `algorithm` in package
    `std`

    Failed: ["dmd", "-unittest", "-v", "-o-", "/tmp/tmpecw4ijjo.d", "-I/tmp"]

    '
  stdout: ''
  timestamp: 1660164539
- exit_code: 1
  program: "import std.typecons;\nimport std.math;\n/*\n Given a string, find out\
    \ how many distinct characters (regardless of case) does it consist of\n    >>>\
    \ count_distinct_characters(\"xyzXYZ\")\n    3L\n    >>> count_distinct_characters(\"\
    Jerry\")\n    4L\n    \n*/\nlong count_distinct_characters(string string) \n{\n\
    \    return std.algorithm.uniq(string.toLower()).length;\n}\nunittest\n{\n   \
    \ alias candidate = count_distinct_characters;\n\n    assert(candidate(\"\") ==\
    \ 0L);\n    assert(candidate(\"abcde\") == 5L);\n    assert(candidate(\"abcdecadeCADE\"\
    ) == 5L);\n    assert(candidate(\"aaaaAAAAaaaa\") == 1L);\n    assert(candidate(\"\
    Jerry jERRY JeRRRY\") == 5L);\n}\nvoid main(){}"
  status: SyntaxError
  stderr: '/tmp/tmpecw4ijjo.d(13): Error: undefined identifier `algorithm` in package
    `std`

    Failed: ["dmd", "-unittest", "-v", "-o-", "/tmp/tmpecw4ijjo.d", "-I/tmp"]

    '
  stdout: ''
  timestamp: 1660164539
- exit_code: 1
  program: "import std.typecons;\nimport std.math;\n/*\n Given a string, find out\
    \ how many distinct characters (regardless of case) does it consist of\n    >>>\
    \ count_distinct_characters(\"xyzXYZ\")\n    3L\n    >>> count_distinct_characters(\"\
    Jerry\")\n    4L\n    \n*/\nlong count_distinct_characters(string string) \n{\n\
    \    return string.toLower().toHashSet().length;\n}\nunittest\n{\n    alias candidate\
    \ = count_distinct_characters;\n\n    assert(candidate(\"\") == 0L);\n    assert(candidate(\"\
    abcde\") == 5L);\n    assert(candidate(\"abcdecadeCADE\") == 5L);\n    assert(candidate(\"\
    aaaaAAAAaaaa\") == 1L);\n    assert(candidate(\"Jerry jERRY JeRRRY\") == 5L);\n\
    }\nvoid main(){}"
  status: SyntaxError
  stderr: '/tmp/tmpnmx9hjr5.d(13): Error: no property `toLower` for type `string`

    Failed: ["dmd", "-unittest", "-v", "-o-", "/tmp/tmpnmx9hjr5.d", "-I/tmp"]

    '
  stdout: ''
  timestamp: 1660164539
- exit_code: 1
  program: "import std.typecons;\nimport std.math;\n/*\n Given a string, find out\
    \ how many distinct characters (regardless of case) does it consist of\n    >>>\
    \ count_distinct_characters(\"xyzXYZ\")\n    3L\n    >>> count_distinct_characters(\"\
    Jerry\")\n    4L\n    \n*/\nlong count_distinct_characters(string string) \n{\n\
    \    return to!string(string.toLower).length;\n}\nunittest\n{\n    alias candidate\
    \ = count_distinct_characters;\n\n    assert(candidate(\"\") == 0L);\n    assert(candidate(\"\
    abcde\") == 5L);\n    assert(candidate(\"abcdecadeCADE\") == 5L);\n    assert(candidate(\"\
    aaaaAAAAaaaa\") == 1L);\n    assert(candidate(\"Jerry jERRY JeRRRY\") == 5L);\n\
    }\nvoid main(){}"
  status: SyntaxError
  stderr: '/tmp/tmp0ehjdvsh.d(13): Error: template instance `to!string` template `to`
    is not defined, did you mean No?

    Failed: ["dmd", "-unittest", "-v", "-o-", "/tmp/tmp0ehjdvsh.d", "-I/tmp"]

    '
  stdout: ''
  timestamp: 1660164539
- exit_code: 1
  program: "import std.typecons;\nimport std.math;\n/*\n Given a string, find out\
    \ how many distinct characters (regardless of case) does it consist of\n    >>>\
    \ count_distinct_characters(\"xyzXYZ\")\n    3L\n    >>> count_distinct_characters(\"\
    Jerry\")\n    4L\n    \n*/\nlong count_distinct_characters(string string) \n{\n\
    \    return set(string.toLowerCase).length;\n}\nunittest\n{\n    alias candidate\
    \ = count_distinct_characters;\n\n    assert(candidate(\"\") == 0L);\n    assert(candidate(\"\
    abcde\") == 5L);\n    assert(candidate(\"abcdecadeCADE\") == 5L);\n    assert(candidate(\"\
    aaaaAAAAaaaa\") == 1L);\n    assert(candidate(\"Jerry jERRY JeRRRY\") == 5L);\n\
    }\nvoid main(){}"
  status: SyntaxError
  stderr: '/tmp/tmp4lz5kksp.d(13): Error: undefined identifier `set`, did you mean
    template `get(K, V)(inout(V[K]) aa, K key, lazy inout(V) defaultValue)`?

    Failed: ["dmd", "-unittest", "-v", "-o-", "/tmp/tmp4lz5kksp.d", "-I/tmp"]

    '
  stdout: ''
  timestamp: 1660164539
- exit_code: 1
  program: "import std.typecons;\nimport std.math;\n/*\n Given a string, find out\
    \ how many distinct characters (regardless of case) does it consist of\n    >>>\
    \ count_distinct_characters(\"xyzXYZ\")\n    3L\n    >>> count_distinct_characters(\"\
    Jerry\")\n    4L\n    \n*/\nlong count_distinct_characters(string string) \n{\n\
    \    return to!Set(string.toLower()).length;\n}\nunittest\n{\n    alias candidate\
    \ = count_distinct_characters;\n\n    assert(candidate(\"\") == 0L);\n    assert(candidate(\"\
    abcde\") == 5L);\n    assert(candidate(\"abcdecadeCADE\") == 5L);\n    assert(candidate(\"\
    aaaaAAAAaaaa\") == 1L);\n    assert(candidate(\"Jerry jERRY JeRRRY\") == 5L);\n\
    }\nvoid main(){}"
  status: SyntaxError
  stderr: '/tmp/tmpbo8vmnh7.d(13): Error: template instance `to!Set` template `to`
    is not defined, did you mean No?

    Failed: ["dmd", "-unittest", "-v", "-o-", "/tmp/tmpbo8vmnh7.d", "-I/tmp"]

    '
  stdout: ''
  timestamp: 1660164539
- exit_code: 1
  program: "import std.typecons;\nimport std.math;\n/*\n Given a string, find out\
    \ how many distinct characters (regardless of case) does it consist of\n    >>>\
    \ count_distinct_characters(\"xyzXYZ\")\n    3L\n    >>> count_distinct_characters(\"\
    Jerry\")\n    4L\n    \n*/\nlong count_distinct_characters(string string) \n{\n\
    \    return string.toLower().unique.length;\n}\nunittest\n{\n    alias candidate\
    \ = count_distinct_characters;\n\n    assert(candidate(\"\") == 0L);\n    assert(candidate(\"\
    abcde\") == 5L);\n    assert(candidate(\"abcdecadeCADE\") == 5L);\n    assert(candidate(\"\
    aaaaAAAAaaaa\") == 1L);\n    assert(candidate(\"Jerry jERRY JeRRRY\") == 5L);\n\
    }\nvoid main(){}"
  status: SyntaxError
  stderr: '/tmp/tmpl5dkqvpj.d(13): Error: no property `toLower` for type `string`

    Failed: ["dmd", "-unittest", "-v", "-o-", "/tmp/tmpl5dkqvpj.d", "-I/tmp"]

    '
  stdout: ''
  timestamp: 1660164539
- exit_code: 1
  program: "import std.typecons;\nimport std.math;\n/*\n Given a string, find out\
    \ how many distinct characters (regardless of case) does it consist of\n    >>>\
    \ count_distinct_characters(\"xyzXYZ\")\n    3L\n    >>> count_distinct_characters(\"\
    Jerry\")\n    4L\n    \n*/\nlong count_distinct_characters(string string) \n{\n\
    \    long count = 0;\n    foreach(char c; string)\n    {\n        if(c.isUpper)\n\
    \        {\n            count++;\n        }\n        else if(c.isLower)\n    \
    \    {\n            count++;\n        }\n    }\n    return count;\n}\nunittest\n\
    {\n    alias candidate = count_distinct_characters;\n\n    assert(candidate(\"\
    \") == 0L);\n    assert(candidate(\"abcde\") == 5L);\n    assert(candidate(\"\
    abcdecadeCADE\") == 5L);\n    assert(candidate(\"aaaaAAAAaaaa\") == 1L);\n   \
    \ assert(candidate(\"Jerry jERRY JeRRRY\") == 5L);\n}\nvoid main(){}"
  status: SyntaxError
  stderr: '/tmp/tmpxl35mddn.d(16): Error: no property `isUpper` for type `char`

    /tmp/tmpxl35mddn.d(20): Error: no property `isLower` for type `char`

    Failed: ["dmd", "-unittest", "-v", "-o-", "/tmp/tmpxl35mddn.d", "-I/tmp"]

    '
  stdout: ''
  timestamp: 1660164539
- exit_code: 1
  program: "import std.typecons;\nimport std.math;\n/*\n Given a string, find out\
    \ how many distinct characters (regardless of case) does it consist of\n    >>>\
    \ count_distinct_characters(\"xyzXYZ\")\n    3L\n    >>> count_distinct_characters(\"\
    Jerry\")\n    4L\n    \n*/\nlong count_distinct_characters(string string) \n{\n\
    \    auto result = new HashSet!char();\n    foreach(c; string)\n    {\n      \
    \  result.insert(c);\n    }\n    return result.length;\n}\nunittest\n{\n    alias\
    \ candidate = count_distinct_characters;\n\n    assert(candidate(\"\") == 0L);\n\
    \    assert(candidate(\"abcde\") == 5L);\n    assert(candidate(\"abcdecadeCADE\"\
    ) == 5L);\n    assert(candidate(\"aaaaAAAAaaaa\") == 1L);\n    assert(candidate(\"\
    Jerry jERRY JeRRRY\") == 5L);\n}\nvoid main(){}"
  status: SyntaxError
  stderr: '/tmp/tmpl16vwdp4.d(13): Error: template instance `HashSet!char` template
    `HashSet` is not defined

    Failed: ["dmd", "-unittest", "-v", "-o-", "/tmp/tmpl16vwdp4.d", "-I/tmp"]

    '
  stdout: ''
  timestamp: 1660164539
- exit_code: 1
  program: "import std.typecons;\nimport std.math;\n/*\n Given a string, find out\
    \ how many distinct characters (regardless of case) does it consist of\n    >>>\
    \ count_distinct_characters(\"xyzXYZ\")\n    3L\n    >>> count_distinct_characters(\"\
    Jerry\")\n    4L\n    \n*/\nlong count_distinct_characters(string string) \n{\n\
    \    return uniq(string.toLower()).length;\n}\nunittest\n{\n    alias candidate\
    \ = count_distinct_characters;\n\n    assert(candidate(\"\") == 0L);\n    assert(candidate(\"\
    abcde\") == 5L);\n    assert(candidate(\"abcdecadeCADE\") == 5L);\n    assert(candidate(\"\
    aaaaAAAAaaaa\") == 1L);\n    assert(candidate(\"Jerry jERRY JeRRRY\") == 5L);\n\
    }\nvoid main(){}"
  status: SyntaxError
  stderr: '/tmp/tmpuo6zhff4.d(13): Error: undefined identifier `uniq`

    Failed: ["dmd", "-unittest", "-v", "-o-", "/tmp/tmpuo6zhff4.d", "-I/tmp"]

    '
  stdout: ''
  timestamp: 1660164539
- exit_code: 1
  program: "import std.typecons;\nimport std.math;\n/*\n Given a string, find out\
    \ how many distinct characters (regardless of case) does it consist of\n    >>>\
    \ count_distinct_characters(\"xyzXYZ\")\n    3L\n    >>> count_distinct_characters(\"\
    Jerry\")\n    4L\n    \n*/\nlong count_distinct_characters(string string) \n{\n\
    \    return to!string(std.algorithm.uniq(string.toLower()));\n}\nunittest\n{\n\
    \    alias candidate = count_distinct_characters;\n\n    assert(candidate(\"\"\
    ) == 0L);\n    assert(candidate(\"abcde\") == 5L);\n    assert(candidate(\"abcdecadeCADE\"\
    ) == 5L);\n    assert(candidate(\"aaaaAAAAaaaa\") == 1L);\n    assert(candidate(\"\
    Jerry jERRY JeRRRY\") == 5L);\n}\nvoid main(){}"
  status: SyntaxError
  stderr: '/tmp/tmpww0rz6ib.d(13): Error: template instance `to!string` template `to`
    is not defined, did you mean No?

    Failed: ["dmd", "-unittest", "-v", "-o-", "/tmp/tmpww0rz6ib.d", "-I/tmp"]

    '
  stdout: ''
  timestamp: 1660164539
- exit_code: 1
  program: "import std.typecons;\nimport std.math;\n/*\n Given a string, find out\
    \ how many distinct characters (regardless of case) does it consist of\n    >>>\
    \ count_distinct_characters(\"xyzXYZ\")\n    3L\n    >>> count_distinct_characters(\"\
    Jerry\")\n    4L\n    \n*/\nlong count_distinct_characters(string string) \n{\n\
    \    long count = 0;\n    foreach(char c; string)\n    {\n        if(c.tolower()\
    \ in count)\n            continue;\n        count++;\n    }\n    return count;\n\
    }\nunittest\n{\n    alias candidate = count_distinct_characters;\n\n    assert(candidate(\"\
    \") == 0L);\n    assert(candidate(\"abcde\") == 5L);\n    assert(candidate(\"\
    abcdecadeCADE\") == 5L);\n    assert(candidate(\"aaaaAAAAaaaa\") == 1L);\n   \
    \ assert(candidate(\"Jerry jERRY JeRRRY\") == 5L);\n}\nvoid main(){}"
  status: SyntaxError
  stderr: '/tmp/tmpbeaivjcb.d(16): Error: no property `tolower` for type `char`

    Failed: ["dmd", "-unittest", "-v", "-o-", "/tmp/tmpbeaivjcb.d", "-I/tmp"]

    '
  stdout: ''
  timestamp: 1660164539
- exit_code: 1
  program: "import std.typecons;\nimport std.math;\n/*\n Given a string, find out\
    \ how many distinct characters (regardless of case) does it consist of\n    >>>\
    \ count_distinct_characters(\"xyzXYZ\")\n    3L\n    >>> count_distinct_characters(\"\
    Jerry\")\n    4L\n    \n*/\nlong count_distinct_characters(string string) \n{\n\
    \    long result = 0;\n    foreach(char c; string)\n    {\n        if(c.tolower()\
    \ !in result)\n        {\n            result ~= c.tolower();\n        }\n    }\n\
    \    return result.length;\n}\nunittest\n{\n    alias candidate = count_distinct_characters;\n\
    \n    assert(candidate(\"\") == 0L);\n    assert(candidate(\"abcde\") == 5L);\n\
    \    assert(candidate(\"abcdecadeCADE\") == 5L);\n    assert(candidate(\"aaaaAAAAaaaa\"\
    ) == 1L);\n    assert(candidate(\"Jerry jERRY JeRRRY\") == 5L);\n}\nvoid main(){}"
  status: SyntaxError
  stderr: '/tmp/tmpd8cmamtt.d(16): Error: no property `tolower` for type `char`

    /tmp/tmpd8cmamtt.d(18): Error: no property `tolower` for type `char`

    /tmp/tmpd8cmamtt.d(21): Error: no property `length` for type `long`

    Failed: ["dmd", "-unittest", "-v", "-o-", "/tmp/tmpd8cmamtt.d", "-I/tmp"]

    '
  stdout: ''
  timestamp: 1660164539
- exit_code: 1
  program: "import std.typecons;\nimport std.math;\n/*\n Given a string, find out\
    \ how many distinct characters (regardless of case) does it consist of\n    >>>\
    \ count_distinct_characters(\"xyzXYZ\")\n    3L\n    >>> count_distinct_characters(\"\
    Jerry\")\n    4L\n    \n*/\nlong count_distinct_characters(string string) \n{\n\
    \    long count = 0;\n    foreach(char c; string) \n    {\n        if(c.isAlpha)\
    \ \n        {\n            count++;\n        }\n    }\n    return count;\n}\n\
    unittest\n{\n    alias candidate = count_distinct_characters;\n\n    assert(candidate(\"\
    \") == 0L);\n    assert(candidate(\"abcde\") == 5L);\n    assert(candidate(\"\
    abcdecadeCADE\") == 5L);\n    assert(candidate(\"aaaaAAAAaaaa\") == 1L);\n   \
    \ assert(candidate(\"Jerry jERRY JeRRRY\") == 5L);\n}\nvoid main(){}"
  status: SyntaxError
  stderr: '/tmp/tmp51u6uwau.d(16): Error: no property `isAlpha` for type `char`

    Failed: ["dmd", "-unittest", "-v", "-o-", "/tmp/tmp51u6uwau.d", "-I/tmp"]

    '
  stdout: ''
  timestamp: 1660164539
- exit_code: 1
  program: "import std.typecons;\nimport std.math;\n/*\n Given a string, find out\
    \ how many distinct characters (regardless of case) does it consist of\n    >>>\
    \ count_distinct_characters(\"xyzXYZ\")\n    3L\n    >>> count_distinct_characters(\"\
    Jerry\")\n    4L\n    \n*/\nlong count_distinct_characters(string string) \n{\n\
    \    long count = 0;\n    foreach(char c; string)\n    {\n        if(c.tolower()\
    \ != c.toupper())\n        {\n            count++;\n        }\n    }\n    return\
    \ count;\n}\nunittest\n{\n    alias candidate = count_distinct_characters;\n\n\
    \    assert(candidate(\"\") == 0L);\n    assert(candidate(\"abcde\") == 5L);\n\
    \    assert(candidate(\"abcdecadeCADE\") == 5L);\n    assert(candidate(\"aaaaAAAAaaaa\"\
    ) == 1L);\n    assert(candidate(\"Jerry jERRY JeRRRY\") == 5L);\n}\nvoid main(){}"
  status: SyntaxError
  stderr: '/tmp/tmpv6ozy0sg.d(16): Error: no property `tolower` for type `char`

    /tmp/tmpv6ozy0sg.d(16): Error: no property `toupper` for type `char`

    Failed: ["dmd", "-unittest", "-v", "-o-", "/tmp/tmpv6ozy0sg.d", "-I/tmp"]

    '
  stdout: ''
  timestamp: 1660164539
- exit_code: 1
  program: "import std.typecons;\nimport std.math;\n/*\n Given a string, find out\
    \ how many distinct characters (regardless of case) does it consist of\n    >>>\
    \ count_distinct_characters(\"xyzXYZ\")\n    3L\n    >>> count_distinct_characters(\"\
    Jerry\")\n    4L\n    \n*/\nlong count_distinct_characters(string string) \n{\n\
    \    auto result = set!char();\n    foreach(c; string)\n    {\n        result.insert(toLower(c));\n\
    \    }\n    return result.length;\n}\nunittest\n{\n    alias candidate = count_distinct_characters;\n\
    \n    assert(candidate(\"\") == 0L);\n    assert(candidate(\"abcde\") == 5L);\n\
    \    assert(candidate(\"abcdecadeCADE\") == 5L);\n    assert(candidate(\"aaaaAAAAaaaa\"\
    ) == 1L);\n    assert(candidate(\"Jerry jERRY JeRRRY\") == 5L);\n}\nvoid main(){}"
  status: SyntaxError
  stderr: '/tmp/tmp0ub56ijl.d(13): Error: template instance `set!char` template `set`
    is not defined, did you mean get(K, V)(inout(V[K]) aa, K key, lazy inout(V) defaultValue)?

    Failed: ["dmd", "-unittest", "-v", "-o-", "/tmp/tmp0ub56ijl.d", "-I/tmp"]

    '
  stdout: ''
  timestamp: 1660164539
- exit_code: 1
  program: "import std.typecons;\nimport std.math;\n/*\n Given a string, find out\
    \ how many distinct characters (regardless of case) does it consist of\n    >>>\
    \ count_distinct_characters(\"xyzXYZ\")\n    3L\n    >>> count_distinct_characters(\"\
    Jerry\")\n    4L\n    \n*/\nlong count_distinct_characters(string string) \n{\n\
    \    return string.toLower().toHashSet().length;\n}\nunittest\n{\n    alias candidate\
    \ = count_distinct_characters;\n\n    assert(candidate(\"\") == 0L);\n    assert(candidate(\"\
    abcde\") == 5L);\n    assert(candidate(\"abcdecadeCADE\") == 5L);\n    assert(candidate(\"\
    aaaaAAAAaaaa\") == 1L);\n    assert(candidate(\"Jerry jERRY JeRRRY\") == 5L);\n\
    }\nvoid main(){}"
  status: SyntaxError
  stderr: '/tmp/tmpnmx9hjr5.d(13): Error: no property `toLower` for type `string`

    Failed: ["dmd", "-unittest", "-v", "-o-", "/tmp/tmpnmx9hjr5.d", "-I/tmp"]

    '
  stdout: ''
  timestamp: 1660164539
- exit_code: 1
  program: "import std.typecons;\nimport std.math;\n/*\n Given a string, find out\
    \ how many distinct characters (regardless of case) does it consist of\n    >>>\
    \ count_distinct_characters(\"xyzXYZ\")\n    3L\n    >>> count_distinct_characters(\"\
    Jerry\")\n    4L\n    \n*/\nlong count_distinct_characters(string string) \n{\n\
    \    return string.toLower().length;\n}\nunittest\n{\n    alias candidate = count_distinct_characters;\n\
    \n    assert(candidate(\"\") == 0L);\n    assert(candidate(\"abcde\") == 5L);\n\
    \    assert(candidate(\"abcdecadeCADE\") == 5L);\n    assert(candidate(\"aaaaAAAAaaaa\"\
    ) == 1L);\n    assert(candidate(\"Jerry jERRY JeRRRY\") == 5L);\n}\nvoid main(){}"
  status: SyntaxError
  stderr: '/tmp/tmphfp3dody.d(13): Error: no property `toLower` for type `string`

    Failed: ["dmd", "-unittest", "-v", "-o-", "/tmp/tmphfp3dody.d", "-I/tmp"]

    '
  stdout: ''
  timestamp: 1660164539
- exit_code: 1
  program: "import std.typecons;\nimport std.math;\n/*\n Given a string, find out\
    \ how many distinct characters (regardless of case) does it consist of\n    >>>\
    \ count_distinct_characters(\"xyzXYZ\")\n    3L\n    >>> count_distinct_characters(\"\
    Jerry\")\n    4L\n    \n*/\nlong count_distinct_characters(string string) \n{\n\
    \    return set(string.toLower()).length;\n}\nunittest\n{\n    alias candidate\
    \ = count_distinct_characters;\n\n    assert(candidate(\"\") == 0L);\n    assert(candidate(\"\
    abcde\") == 5L);\n    assert(candidate(\"abcdecadeCADE\") == 5L);\n    assert(candidate(\"\
    aaaaAAAAaaaa\") == 1L);\n    assert(candidate(\"Jerry jERRY JeRRRY\") == 5L);\n\
    }\nvoid main(){}"
  status: SyntaxError
  stderr: '/tmp/tmp4fc64pj_.d(13): Error: undefined identifier `set`, did you mean
    template `get(K, V)(inout(V[K]) aa, K key, lazy inout(V) defaultValue)`?

    Failed: ["dmd", "-unittest", "-v", "-o-", "/tmp/tmp4fc64pj_.d", "-I/tmp"]

    '
  stdout: ''
  timestamp: 1660164539
- exit_code: 1
  program: "import std.typecons;\nimport std.math;\n/*\n Given a string, find out\
    \ how many distinct characters (regardless of case) does it consist of\n    >>>\
    \ count_distinct_characters(\"xyzXYZ\")\n    3L\n    >>> count_distinct_characters(\"\
    Jerry\")\n    4L\n    \n*/\nlong count_distinct_characters(string string) \n{\n\
    \    auto set = new Set!char();\n    foreach(c; string)\n    {\n        set.insert(c);\n\
    \    }\n    return set.length;\n}\nunittest\n{\n    alias candidate = count_distinct_characters;\n\
    \n    assert(candidate(\"\") == 0L);\n    assert(candidate(\"abcde\") == 5L);\n\
    \    assert(candidate(\"abcdecadeCADE\") == 5L);\n    assert(candidate(\"aaaaAAAAaaaa\"\
    ) == 1L);\n    assert(candidate(\"Jerry jERRY JeRRRY\") == 5L);\n}\nvoid main(){}"
  status: SyntaxError
  stderr: '/tmp/tmp75npoeya.d(13): Error: template instance `Set!char` template `Set`
    is not defined, did you mean get(K, V)(inout(V[K]) aa, K key, lazy inout(V) defaultValue)?

    Failed: ["dmd", "-unittest", "-v", "-o-", "/tmp/tmp75npoeya.d", "-I/tmp"]

    '
  stdout: ''
  timestamp: 1660164539
- exit_code: 1
  program: "import std.typecons;\nimport std.math;\n/*\n Given a string, find out\
    \ how many distinct characters (regardless of case) does it consist of\n    >>>\
    \ count_distinct_characters(\"xyzXYZ\")\n    3L\n    >>> count_distinct_characters(\"\
    Jerry\")\n    4L\n    \n*/\nlong count_distinct_characters(string string) \n{\n\
    \    return string.toLower().chars.distinct.length;\n}\nunittest\n{\n    alias\
    \ candidate = count_distinct_characters;\n\n    assert(candidate(\"\") == 0L);\n\
    \    assert(candidate(\"abcde\") == 5L);\n    assert(candidate(\"abcdecadeCADE\"\
    ) == 5L);\n    assert(candidate(\"aaaaAAAAaaaa\") == 1L);\n    assert(candidate(\"\
    Jerry jERRY JeRRRY\") == 5L);\n}\nvoid main(){}"
  status: SyntaxError
  stderr: '/tmp/tmpm1yt8kps.d(13): Error: no property `toLower` for type `string`

    Failed: ["dmd", "-unittest", "-v", "-o-", "/tmp/tmpm1yt8kps.d", "-I/tmp"]

    '
  stdout: ''
  timestamp: 1660164539
- exit_code: 1
  program: "import std.typecons;\nimport std.math;\n/*\n Given a string, find out\
    \ how many distinct characters (regardless of case) does it consist of\n    >>>\
    \ count_distinct_characters(\"xyzXYZ\")\n    3L\n    >>> count_distinct_characters(\"\
    Jerry\")\n    4L\n    \n*/\nlong count_distinct_characters(string string) \n{\n\
    \    return to!string(string.toLower()).unique.length;\n}\nunittest\n{\n    alias\
    \ candidate = count_distinct_characters;\n\n    assert(candidate(\"\") == 0L);\n\
    \    assert(candidate(\"abcde\") == 5L);\n    assert(candidate(\"abcdecadeCADE\"\
    ) == 5L);\n    assert(candidate(\"aaaaAAAAaaaa\") == 1L);\n    assert(candidate(\"\
    Jerry jERRY JeRRRY\") == 5L);\n}\nvoid main(){}"
  status: SyntaxError
  stderr: '/tmp/tmpha98djs8.d(13): Error: template instance `to!string` template `to`
    is not defined, did you mean No?

    Failed: ["dmd", "-unittest", "-v", "-o-", "/tmp/tmpha98djs8.d", "-I/tmp"]

    '
  stdout: ''
  timestamp: 1660164539
- exit_code: 1
  program: "import std.typecons;\nimport std.math;\n/*\n Given a string, find out\
    \ how many distinct characters (regardless of case) does it consist of\n    >>>\
    \ count_distinct_characters(\"xyzXYZ\")\n    3L\n    >>> count_distinct_characters(\"\
    Jerry\")\n    4L\n    \n*/\nlong count_distinct_characters(string string) \n{\n\
    \    return string.toLower().toHashSet().length;\n}\nunittest\n{\n    alias candidate\
    \ = count_distinct_characters;\n\n    assert(candidate(\"\") == 0L);\n    assert(candidate(\"\
    abcde\") == 5L);\n    assert(candidate(\"abcdecadeCADE\") == 5L);\n    assert(candidate(\"\
    aaaaAAAAaaaa\") == 1L);\n    assert(candidate(\"Jerry jERRY JeRRRY\") == 5L);\n\
    }\nvoid main(){}"
  status: SyntaxError
  stderr: '/tmp/tmpnmx9hjr5.d(13): Error: no property `toLower` for type `string`

    Failed: ["dmd", "-unittest", "-v", "-o-", "/tmp/tmpnmx9hjr5.d", "-I/tmp"]

    '
  stdout: ''
  timestamp: 1660164539
- exit_code: 1
  program: "import std.typecons;\nimport std.math;\n/*\n Given a string, find out\
    \ how many distinct characters (regardless of case) does it consist of\n    >>>\
    \ count_distinct_characters(\"xyzXYZ\")\n    3L\n    >>> count_distinct_characters(\"\
    Jerry\")\n    4L\n    \n*/\nlong count_distinct_characters(string string) \n{\n\
    \    return to!string(string.toLower()).length;\n}\nunittest\n{\n    alias candidate\
    \ = count_distinct_characters;\n\n    assert(candidate(\"\") == 0L);\n    assert(candidate(\"\
    abcde\") == 5L);\n    assert(candidate(\"abcdecadeCADE\") == 5L);\n    assert(candidate(\"\
    aaaaAAAAaaaa\") == 1L);\n    assert(candidate(\"Jerry jERRY JeRRRY\") == 5L);\n\
    }\nvoid main(){}"
  status: SyntaxError
  stderr: '/tmp/tmphbe_dxa7.d(13): Error: template instance `to!string` template `to`
    is not defined, did you mean No?

    Failed: ["dmd", "-unittest", "-v", "-o-", "/tmp/tmphbe_dxa7.d", "-I/tmp"]

    '
  stdout: ''
  timestamp: 1660164539
- exit_code: 1
  program: "import std.typecons;\nimport std.math;\n/*\n Given a string, find out\
    \ how many distinct characters (regardless of case) does it consist of\n    >>>\
    \ count_distinct_characters(\"xyzXYZ\")\n    3L\n    >>> count_distinct_characters(\"\
    Jerry\")\n    4L\n    \n*/\nlong count_distinct_characters(string string) \n{\n\
    \    long count = 0;\n    foreach(char c; string) \n    {\n        if(c.isLetter)\
    \ \n        {\n            count++;\n        }\n    }\n    return count;\n}\n\
    unittest\n{\n    alias candidate = count_distinct_characters;\n\n    assert(candidate(\"\
    \") == 0L);\n    assert(candidate(\"abcde\") == 5L);\n    assert(candidate(\"\
    abcdecadeCADE\") == 5L);\n    assert(candidate(\"aaaaAAAAaaaa\") == 1L);\n   \
    \ assert(candidate(\"Jerry jERRY JeRRRY\") == 5L);\n}\nvoid main(){}"
  status: SyntaxError
  stderr: '/tmp/tmp18txqrne.d(16): Error: no property `isLetter` for type `char`

    Failed: ["dmd", "-unittest", "-v", "-o-", "/tmp/tmp18txqrne.d", "-I/tmp"]

    '
  stdout: ''
  timestamp: 1660164539
- exit_code: 1
  program: "import std.typecons;\nimport std.math;\n/*\n Given a string, find out\
    \ how many distinct characters (regardless of case) does it consist of\n    >>>\
    \ count_distinct_characters(\"xyzXYZ\")\n    3L\n    >>> count_distinct_characters(\"\
    Jerry\")\n    4L\n    \n*/\nlong count_distinct_characters(string string) \n{\n\
    \    long count = 0;\n    foreach(char c; string)\n    {\n        if(c.isAlpha)\n\
    \        {\n            count++;\n        }\n    }\n    return count;\n}\nunittest\n\
    {\n    alias candidate = count_distinct_characters;\n\n    assert(candidate(\"\
    \") == 0L);\n    assert(candidate(\"abcde\") == 5L);\n    assert(candidate(\"\
    abcdecadeCADE\") == 5L);\n    assert(candidate(\"aaaaAAAAaaaa\") == 1L);\n   \
    \ assert(candidate(\"Jerry jERRY JeRRRY\") == 5L);\n}\nvoid main(){}"
  status: SyntaxError
  stderr: '/tmp/tmpmrkg4h87.d(16): Error: no property `isAlpha` for type `char`

    Failed: ["dmd", "-unittest", "-v", "-o-", "/tmp/tmpmrkg4h87.d", "-I/tmp"]

    '
  stdout: ''
  timestamp: 1660164539
- exit_code: 1
  program: "import std.typecons;\nimport std.math;\n/*\n Given a string, find out\
    \ how many distinct characters (regardless of case) does it consist of\n    >>>\
    \ count_distinct_characters(\"xyzXYZ\")\n    3L\n    >>> count_distinct_characters(\"\
    Jerry\")\n    4L\n    \n*/\nlong count_distinct_characters(string string) \n{\n\
    \    return to!(long)(std.algorithm.uniq(string.toLower()).length);\n}\nunittest\n\
    {\n    alias candidate = count_distinct_characters;\n\n    assert(candidate(\"\
    \") == 0L);\n    assert(candidate(\"abcde\") == 5L);\n    assert(candidate(\"\
    abcdecadeCADE\") == 5L);\n    assert(candidate(\"aaaaAAAAaaaa\") == 1L);\n   \
    \ assert(candidate(\"Jerry jERRY JeRRRY\") == 5L);\n}\nvoid main(){}"
  status: SyntaxError
  stderr: '/tmp/tmplsbtdzbh.d(13): Error: template instance `to!long` template `to`
    is not defined, did you mean No?

    Failed: ["dmd", "-unittest", "-v", "-o-", "/tmp/tmplsbtdzbh.d", "-I/tmp"]

    '
  stdout: ''
  timestamp: 1660164539
- exit_code: 1
  program: "import std.typecons;\nimport std.math;\n/*\n Given a string, find out\
    \ how many distinct characters (regardless of case) does it consist of\n    >>>\
    \ count_distinct_characters(\"xyzXYZ\")\n    3L\n    >>> count_distinct_characters(\"\
    Jerry\")\n    4L\n    \n*/\nlong count_distinct_characters(string string) \n{\n\
    \    auto result = 0L;\n    auto chars = new HashSet!char();\n    foreach(c; string)\n\
    \    {\n        chars.insert(c);\n    }\n    return chars.length;\n}\nunittest\n\
    {\n    alias candidate = count_distinct_characters;\n\n    assert(candidate(\"\
    \") == 0L);\n    assert(candidate(\"abcde\") == 5L);\n    assert(candidate(\"\
    abcdecadeCADE\") == 5L);\n    assert(candidate(\"aaaaAAAAaaaa\") == 1L);\n   \
    \ assert(candidate(\"Jerry jERRY JeRRRY\") == 5L);\n}\nvoid main(){}"
  status: SyntaxError
  stderr: '/tmp/tmph432js5u.d(14): Error: template instance `HashSet!char` template
    `HashSet` is not defined

    Failed: ["dmd", "-unittest", "-v", "-o-", "/tmp/tmph432js5u.d", "-I/tmp"]

    '
  stdout: ''
  timestamp: 1660164539
- exit_code: 1
  program: "import std.typecons;\nimport std.math;\n/*\n Given a string, find out\
    \ how many distinct characters (regardless of case) does it consist of\n    >>>\
    \ count_distinct_characters(\"xyzXYZ\")\n    3L\n    >>> count_distinct_characters(\"\
    Jerry\")\n    4L\n    \n*/\nlong count_distinct_characters(string string) \n{\n\
    \    auto result = set!char();\n    foreach(c; string)\n    {\n        result.insert(c);\n\
    \    }\n    return result.length;\n}\nunittest\n{\n    alias candidate = count_distinct_characters;\n\
    \n    assert(candidate(\"\") == 0L);\n    assert(candidate(\"abcde\") == 5L);\n\
    \    assert(candidate(\"abcdecadeCADE\") == 5L);\n    assert(candidate(\"aaaaAAAAaaaa\"\
    ) == 1L);\n    assert(candidate(\"Jerry jERRY JeRRRY\") == 5L);\n}\nvoid main(){}"
  status: SyntaxError
  stderr: '/tmp/tmp10vgyd4k.d(13): Error: template instance `set!char` template `set`
    is not defined, did you mean get(K, V)(inout(V[K]) aa, K key, lazy inout(V) defaultValue)?

    Failed: ["dmd", "-unittest", "-v", "-o-", "/tmp/tmp10vgyd4k.d", "-I/tmp"]

    '
  stdout: ''
  timestamp: 1660164539
- exit_code: 1
  program: "import std.typecons;\nimport std.math;\n/*\n Given a string, find out\
    \ how many distinct characters (regardless of case) does it consist of\n    >>>\
    \ count_distinct_characters(\"xyzXYZ\")\n    3L\n    >>> count_distinct_characters(\"\
    Jerry\")\n    4L\n    \n*/\nlong count_distinct_characters(string string) \n{\n\
    \    long count = 0;\n    foreach(char c; string)\n    {\n        if(c.isLetter)\n\
    \        {\n            count++;\n        }\n    }\n    return count;\n}\n/*\n\
    \ Given a string, find out how many distinct characters (regardless of case) does\
    \ it consist of\n    >>> count_distinct_characters(\"xyzXYZ\")\n    3L\n    >>>\
    \ count_distinct_characters(\"Jerry\")\n    4L\n    \n*/\nlong count_distinct_characters(string\
    \ string) \n{\n    long count = 0;\n    foreach(char c; string)\n    {\n     \
    \   if(c.isLetter)\n        {\n            count++;\n        }\n    }\n    return\
    \ count;\n}\n/*\n Given a string, find out how many distinct characters (regardless\
    \ of case) does it consist of\n    >>> count_distinct_characters(\"xyzXYZ\")\n\
    \    3L\n    >>> count_distinct_characters(\"Jerry\")\n    4L\n    \n*/\nlong\
    \ count_distinct_characters(string string) \n{\n    long count = 0;\n    foreach(char\
    \ c; string)\n    {\n        if(c.isLetter)\n        {\n            count++;\n\
    \        }\n    }\n    return count;\n}\n/*\n Given a string, find out how many\
    \ distinct characters (regardless of case) does it consist of\n    >>> count_distinct_characters(\"\
    xyzXYZ\")\n    3L\n    >>> count_distinct_characters(\"Jerry\")\n    4L\n    \n\
    */\nlong count_distinct_characters(string string) \n{\n    long count = 0;\n \
    \   foreach(char c; string)\n    {\n        if(c.isLetter)\n        {\n      \
    \      count++;\n        }\n    }\n    return count;\n}\n/*\n Given a string,\
    \ find out how many distinct characters (regardless of case) does it consist of\n\
    \    >>> count_distinct_characters(\"xyzXYZ\")\n    3L\n    >>> count_distinct_characters(\"\
    Jerry\")\n    4L\n    \n*/\nlong count_distinct_characters(\nunittest\n{\n   \
    \ alias candidate = count_distinct_characters;\n\n    assert(candidate(\"\") ==\
    \ 0L);\n    assert(candidate(\"abcde\") == 5L);\n    assert(candidate(\"abcdecadeCADE\"\
    ) == 5L);\n    assert(candidate(\"aaaaAAAAaaaa\") == 1L);\n    assert(candidate(\"\
    Jerry jERRY JeRRRY\") == 5L);\n}\nvoid main(){}"
  status: SyntaxError
  stderr: '/tmp/tmpgb5tuom_.d(92): Error: basic type expected, not `unittest`

    /tmp/tmpgb5tuom_.d(92): Error: found `unittest` when expecting `)`

    Failed: ["dmd", "-unittest", "-v", "-o-", "/tmp/tmpgb5tuom_.d", "-I/tmp"]

    '
  stdout: ''
  timestamp: 1660164539
- exit_code: 1
  program: "import std.typecons;\nimport std.math;\n/*\n Given a string, find out\
    \ how many distinct characters (regardless of case) does it consist of\n    >>>\
    \ count_distinct_characters(\"xyzXYZ\")\n    3L\n    >>> count_distinct_characters(\"\
    Jerry\")\n    4L\n    \n*/\nlong count_distinct_characters(string string) \n{\n\
    \    auto char_set = set!char();\n    foreach(char c; string)\n    {\n       \
    \ char_set.insert(c);\n    }\n    return char_set.length;\n}\nunittest\n{\n  \
    \  alias candidate = count_distinct_characters;\n\n    assert(candidate(\"\")\
    \ == 0L);\n    assert(candidate(\"abcde\") == 5L);\n    assert(candidate(\"abcdecadeCADE\"\
    ) == 5L);\n    assert(candidate(\"aaaaAAAAaaaa\") == 1L);\n    assert(candidate(\"\
    Jerry jERRY JeRRRY\") == 5L);\n}\nvoid main(){}"
  status: SyntaxError
  stderr: '/tmp/tmprbgh1a0b.d(13): Error: template instance `set!char` template `set`
    is not defined, did you mean get(K, V)(inout(V[K]) aa, K key, lazy inout(V) defaultValue)?

    Failed: ["dmd", "-unittest", "-v", "-o-", "/tmp/tmprbgh1a0b.d", "-I/tmp"]

    '
  stdout: ''
  timestamp: 1660164539
- exit_code: 1
  program: "import std.typecons;\nimport std.math;\n/*\n Given a string, find out\
    \ how many distinct characters (regardless of case) does it consist of\n    >>>\
    \ count_distinct_characters(\"xyzXYZ\")\n    3L\n    >>> count_distinct_characters(\"\
    Jerry\")\n    4L\n    \n*/\nlong count_distinct_characters(string string) \n{\n\
    \    long result = 0;\n    foreach(char c; string)\n    {\n        if(c.tolower()\
    \ !in result)\n        {\n            result ~= c.tolower();\n        }\n    }\n\
    \    return result.length;\n}\nunittest\n{\n    alias candidate = count_distinct_characters;\n\
    \n    assert(candidate(\"\") == 0L);\n    assert(candidate(\"abcde\") == 5L);\n\
    \    assert(candidate(\"abcdecadeCADE\") == 5L);\n    assert(candidate(\"aaaaAAAAaaaa\"\
    ) == 1L);\n    assert(candidate(\"Jerry jERRY JeRRRY\") == 5L);\n}\nvoid main(){}"
  status: SyntaxError
  stderr: '/tmp/tmpd8cmamtt.d(16): Error: no property `tolower` for type `char`

    /tmp/tmpd8cmamtt.d(18): Error: no property `tolower` for type `char`

    /tmp/tmpd8cmamtt.d(21): Error: no property `length` for type `long`

    Failed: ["dmd", "-unittest", "-v", "-o-", "/tmp/tmpd8cmamtt.d", "-I/tmp"]

    '
  stdout: ''
  timestamp: 1660164539
- exit_code: 1
  program: "import std.typecons;\nimport std.math;\n/*\n Given a string, find out\
    \ how many distinct characters (regardless of case) does it consist of\n    >>>\
    \ count_distinct_characters(\"xyzXYZ\")\n    3L\n    >>> count_distinct_characters(\"\
    Jerry\")\n    4L\n    \n*/\nlong count_distinct_characters(string string) \n{\n\
    \    return to!string(string.toLower()).length;\n}\nunittest\n{\n    alias candidate\
    \ = count_distinct_characters;\n\n    assert(candidate(\"\") == 0L);\n    assert(candidate(\"\
    abcde\") == 5L);\n    assert(candidate(\"abcdecadeCADE\") == 5L);\n    assert(candidate(\"\
    aaaaAAAAaaaa\") == 1L);\n    assert(candidate(\"Jerry jERRY JeRRRY\") == 5L);\n\
    }\nvoid main(){}"
  status: SyntaxError
  stderr: '/tmp/tmphbe_dxa7.d(13): Error: template instance `to!string` template `to`
    is not defined, did you mean No?

    Failed: ["dmd", "-unittest", "-v", "-o-", "/tmp/tmphbe_dxa7.d", "-I/tmp"]

    '
  stdout: ''
  timestamp: 1660164539
- exit_code: 1
  program: "import std.typecons;\nimport std.math;\n/*\n Given a string, find out\
    \ how many distinct characters (regardless of case) does it consist of\n    >>>\
    \ count_distinct_characters(\"xyzXYZ\")\n    3L\n    >>> count_distinct_characters(\"\
    Jerry\")\n    4L\n    \n*/\nlong count_distinct_characters(string string) \n{\n\
    \    long count = 0;\n    foreach(char c; string) \n    {\n        if (c.isLetter)\
    \ \n        {\n            count++;\n        }\n    }\n    return count;\n}\n\
    unittest\n{\n    alias candidate = count_distinct_characters;\n\n    assert(candidate(\"\
    \") == 0L);\n    assert(candidate(\"abcde\") == 5L);\n    assert(candidate(\"\
    abcdecadeCADE\") == 5L);\n    assert(candidate(\"aaaaAAAAaaaa\") == 1L);\n   \
    \ assert(candidate(\"Jerry jERRY JeRRRY\") == 5L);\n}\nvoid main(){}"
  status: SyntaxError
  stderr: '/tmp/tmpq_rmbmmw.d(16): Error: no property `isLetter` for type `char`

    Failed: ["dmd", "-unittest", "-v", "-o-", "/tmp/tmpq_rmbmmw.d", "-I/tmp"]

    '
  stdout: ''
  timestamp: 1660164539
- exit_code: 1
  program: "import std.typecons;\nimport std.math;\n/*\n Given a string, find out\
    \ how many distinct characters (regardless of case) does it consist of\n    >>>\
    \ count_distinct_characters(\"xyzXYZ\")\n    3L\n    >>> count_distinct_characters(\"\
    Jerry\")\n    4L\n    \n*/\nlong count_distinct_characters(string string) \n{\n\
    \    return set(string.toLowerCase).length;\n}\nunittest\n{\n    alias candidate\
    \ = count_distinct_characters;\n\n    assert(candidate(\"\") == 0L);\n    assert(candidate(\"\
    abcde\") == 5L);\n    assert(candidate(\"abcdecadeCADE\") == 5L);\n    assert(candidate(\"\
    aaaaAAAAaaaa\") == 1L);\n    assert(candidate(\"Jerry jERRY JeRRRY\") == 5L);\n\
    }\nvoid main(){}"
  status: SyntaxError
  stderr: '/tmp/tmp4lz5kksp.d(13): Error: undefined identifier `set`, did you mean
    template `get(K, V)(inout(V[K]) aa, K key, lazy inout(V) defaultValue)`?

    Failed: ["dmd", "-unittest", "-v", "-o-", "/tmp/tmp4lz5kksp.d", "-I/tmp"]

    '
  stdout: ''
  timestamp: 1660164539
- exit_code: 1
  program: "import std.typecons;\nimport std.math;\n/*\n Given a string, find out\
    \ how many distinct characters (regardless of case) does it consist of\n    >>>\
    \ count_distinct_characters(\"xyzXYZ\")\n    3L\n    >>> count_distinct_characters(\"\
    Jerry\")\n    4L\n    \n*/\nlong count_distinct_characters(string string) \n{\n\
    \    return to!(long)(std.algorithm.uniq(string.toLower()).length);\n}\nunittest\n\
    {\n    alias candidate = count_distinct_characters;\n\n    assert(candidate(\"\
    \") == 0L);\n    assert(candidate(\"abcde\") == 5L);\n    assert(candidate(\"\
    abcdecadeCADE\") == 5L);\n    assert(candidate(\"aaaaAAAAaaaa\") == 1L);\n   \
    \ assert(candidate(\"Jerry jERRY JeRRRY\") == 5L);\n}\nvoid main(){}"
  status: SyntaxError
  stderr: '/tmp/tmplsbtdzbh.d(13): Error: template instance `to!long` template `to`
    is not defined, did you mean No?

    Failed: ["dmd", "-unittest", "-v", "-o-", "/tmp/tmplsbtdzbh.d", "-I/tmp"]

    '
  stdout: ''
  timestamp: 1660164539
- exit_code: 1
  program: "import std.typecons;\nimport std.math;\n/*\n Given a string, find out\
    \ how many distinct characters (regardless of case) does it consist of\n    >>>\
    \ count_distinct_characters(\"xyzXYZ\")\n    3L\n    >>> count_distinct_characters(\"\
    Jerry\")\n    4L\n    \n*/\nlong count_distinct_characters(string string) \n{\n\
    \    long count = 0;\n    foreach(char c; string)\n    {\n        if(c.tolower()\
    \ in count)\n            continue;\n        count++;\n    }\n    return count;\n\
    }\nunittest\n{\n    alias candidate = count_distinct_characters;\n\n    assert(candidate(\"\
    \") == 0L);\n    assert(candidate(\"abcde\") == 5L);\n    assert(candidate(\"\
    abcdecadeCADE\") == 5L);\n    assert(candidate(\"aaaaAAAAaaaa\") == 1L);\n   \
    \ assert(candidate(\"Jerry jERRY JeRRRY\") == 5L);\n}\nvoid main(){}"
  status: SyntaxError
  stderr: '/tmp/tmpbeaivjcb.d(16): Error: no property `tolower` for type `char`

    Failed: ["dmd", "-unittest", "-v", "-o-", "/tmp/tmpbeaivjcb.d", "-I/tmp"]

    '
  stdout: ''
  timestamp: 1660164539
- exit_code: 1
  program: "import std.typecons;\nimport std.math;\n/*\n Given a string, find out\
    \ how many distinct characters (regardless of case) does it consist of\n    >>>\
    \ count_distinct_characters(\"xyzXYZ\")\n    3L\n    >>> count_distinct_characters(\"\
    Jerry\")\n    4L\n    \n*/\nlong count_distinct_characters(string string) \n{\n\
    \    long count = 0;\n    foreach(char c; string) \n    {\n        if(!count)\
    \ \n        {\n            count++;\n        }\n        else \n        {\n   \
    \         bool found = false;\n            foreach(char c2; string[0..count])\
    \ \n            {\n                if(c == c2) \n                {\n         \
    \           found = true;\n                    break;\n                }\n   \
    \         }\n            if(!found) \n            {\n                count++;\n\
    \            }\n        }\n    }\n    return count;\n}\nunittest\n{\n    alias\
    \ candidate = count_distinct_characters;\n\n    assert(candidate(\"\") == 0L);\n\
    \    assert(candidate(\"abcde\") == 5L);\n    assert(candidate(\"abcdecadeCADE\"\
    ) == 5L);\n    assert(candidate(\"aaaaAAAAaaaa\") == 1L);\n    assert(candidate(\"\
    Jerry jERRY JeRRRY\") == 5L);\n}\nvoid main(){}"
  status: Exception
  stderr: 'core.exception.AssertError@/tmp/tmpyneylwb1.d(45): unittest failure

    ----------------

    ??:? _d_unittestp [0x427e6d]

    ??:? void tmpyneylwb1.__unittest_L39_C1() [0x427b80]

    ??:? void tmpyneylwb1.__modtest() [0x427bec]

    ??:? int core.runtime.runModuleUnitTests().__foreachbody2(object.ModuleInfo*)
    [0x42bc07]

    ??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)).__lambda2(immutable(object.ModuleInfo*))
    [0x42aa9a]

    ??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))).__foreachbody2(ref
    rt.sections_elf_shared.DSO) [0x42fc2d]

    ??:? int rt.sections_elf_shared.DSO.opApply(scope int delegate(ref rt.sections_elf_shared.DSO))
    [0x4300dc]

    ??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*)))
    [0x42fbb9]

    ??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)) [0x42aa71]

    ??:? runModuleUnitTests [0x42b9dd]

    ??:? void rt.dmain2._d_run_main(int, char**, extern (C) int function(char[][])*).runAll()
    [0x428330]

    ??:? void rt.dmain2._d_r'
  stdout: ''
  timestamp: 1660164539
- exit_code: 1
  program: "import std.typecons;\nimport std.math;\n/*\n Given a string, find out\
    \ how many distinct characters (regardless of case) does it consist of\n    >>>\
    \ count_distinct_characters(\"xyzXYZ\")\n    3L\n    >>> count_distinct_characters(\"\
    Jerry\")\n    4L\n    \n*/\nlong count_distinct_characters(string string) \n{\n\
    \    long count = 0;\n    foreach(char c; string)\n    {\n        if(c.isUpper)\n\
    \        {\n            c = c.toLower;\n        }\n        if(!count.in(c))\n\
    \        {\n            count[c] = 1;\n        }\n    }\n    return count.length;\n\
    }\nunittest\n{\n    alias candidate = count_distinct_characters;\n\n    assert(candidate(\"\
    \") == 0L);\n    assert(candidate(\"abcde\") == 5L);\n    assert(candidate(\"\
    abcdecadeCADE\") == 5L);\n    assert(candidate(\"aaaaAAAAaaaa\") == 1L);\n   \
    \ assert(candidate(\"Jerry jERRY JeRRRY\") == 5L);\n}\nvoid main(){}"
  status: SyntaxError
  stderr: '/tmp/tmpxcg6lx6c.d(20): Error: identifier expected following `.`, not `in`

    Failed: ["dmd", "-unittest", "-v", "-o-", "/tmp/tmpxcg6lx6c.d", "-I/tmp"]

    '
  stdout: ''
  timestamp: 1660164539
- exit_code: 1
  program: "import std.typecons;\nimport std.math;\n/*\n Given a string, find out\
    \ how many distinct characters (regardless of case) does it consist of\n    >>>\
    \ count_distinct_characters(\"xyzXYZ\")\n    3L\n    >>> count_distinct_characters(\"\
    Jerry\")\n    4L\n    \n*/\nlong count_distinct_characters(string string) \n{\n\
    \    auto result = new HashSet!(char)();\n    foreach(c; string) \n    {\n   \
    \     result.insert(toLower(c));\n    }\n    return result.length;\n}\nunittest\n\
    {\n    alias candidate = count_distinct_characters;\n\n    assert(candidate(\"\
    \") == 0L);\n    assert(candidate(\"abcde\") == 5L);\n    assert(candidate(\"\
    abcdecadeCADE\") == 5L);\n    assert(candidate(\"aaaaAAAAaaaa\") == 1L);\n   \
    \ assert(candidate(\"Jerry jERRY JeRRRY\") == 5L);\n}\nvoid main(){}"
  status: SyntaxError
  stderr: '/tmp/tmpo27cg1jh.d(13): Error: template instance `HashSet!char` template
    `HashSet` is not defined

    Failed: ["dmd", "-unittest", "-v", "-o-", "/tmp/tmpo27cg1jh.d", "-I/tmp"]

    '
  stdout: ''
  timestamp: 1660164539
- exit_code: 1
  program: "import std.typecons;\nimport std.math;\n/*\n Given a string, find out\
    \ how many distinct characters (regardless of case) does it consist of\n    >>>\
    \ count_distinct_characters(\"xyzXYZ\")\n    3L\n    >>> count_distinct_characters(\"\
    Jerry\")\n    4L\n    \n*/\nlong count_distinct_characters(string string) \n{\n\
    \    long count = 0;\n    foreach(char c; string)\n    {\n        if(c == ' ')\n\
    \            continue;\n        if(c >= 'A' && c <= 'Z')\n            c = tolower(c);\n\
    \        if(!count)\n            count++;\n        else\n        {\n         \
    \   bool found = false;\n            foreach(char c2; string)\n            {\n\
    \                if(c2 == ' ')\n                    continue;\n              \
    \  if(c2 >= 'A' && c2 <= 'Z')\n                    c2 = tolower(c2);\n       \
    \         if(c == c2)\n                {\n                    found = true;\n\
    \                    break;\n                }\n            }\n            if(!found)\n\
    \                count++;\n        }\n    }\n    return count;\n}\nunittest\n\
    {\n    alias candidate = count_distinct_characters;\n\n    assert(candidate(\"\
    \") == 0L);\n    assert(candidate(\"abcde\") == 5L);\n    assert(candidate(\"\
    abcdecadeCADE\") == 5L);\n    assert(candidate(\"aaaaAAAAaaaa\") == 1L);\n   \
    \ assert(candidate(\"Jerry jERRY JeRRRY\") == 5L);\n}\nvoid main(){}"
  status: SyntaxError
  stderr: '/tmp/tmpxrpvu8h5.d(19): Error: undefined identifier `tolower`

    /tmp/tmpxrpvu8h5.d(30): Error: undefined identifier `tolower`

    Failed: ["dmd", "-unittest", "-v", "-o-", "/tmp/tmpxrpvu8h5.d", "-I/tmp"]

    '
  stdout: ''
  timestamp: 1660164539
- exit_code: 1
  program: "import std.typecons;\nimport std.math;\n/*\n Given a string, find out\
    \ how many distinct characters (regardless of case) does it consist of\n    >>>\
    \ count_distinct_characters(\"xyzXYZ\")\n    3L\n    >>> count_distinct_characters(\"\
    Jerry\")\n    4L\n    \n*/\nlong count_distinct_characters(string string) \n{\n\
    \    return string.toLower().toHashSet().length;\n}\nunittest\n{\n    alias candidate\
    \ = count_distinct_characters;\n\n    assert(candidate(\"\") == 0L);\n    assert(candidate(\"\
    abcde\") == 5L);\n    assert(candidate(\"abcdecadeCADE\") == 5L);\n    assert(candidate(\"\
    aaaaAAAAaaaa\") == 1L);\n    assert(candidate(\"Jerry jERRY JeRRRY\") == 5L);\n\
    }\nvoid main(){}"
  status: SyntaxError
  stderr: '/tmp/tmpnmx9hjr5.d(13): Error: no property `toLower` for type `string`

    Failed: ["dmd", "-unittest", "-v", "-o-", "/tmp/tmpnmx9hjr5.d", "-I/tmp"]

    '
  stdout: ''
  timestamp: 1660164539
- exit_code: 1
  program: "import std.typecons;\nimport std.math;\n/*\n Given a string, find out\
    \ how many distinct characters (regardless of case) does it consist of\n    >>>\
    \ count_distinct_characters(\"xyzXYZ\")\n    3L\n    >>> count_distinct_characters(\"\
    Jerry\")\n    4L\n    \n*/\nlong count_distinct_characters(string string) \n{\n\
    \    return to!string(string.toLower()).unique.length;\n}\nunittest\n{\n    alias\
    \ candidate = count_distinct_characters;\n\n    assert(candidate(\"\") == 0L);\n\
    \    assert(candidate(\"abcde\") == 5L);\n    assert(candidate(\"abcdecadeCADE\"\
    ) == 5L);\n    assert(candidate(\"aaaaAAAAaaaa\") == 1L);\n    assert(candidate(\"\
    Jerry jERRY JeRRRY\") == 5L);\n}\nvoid main(){}"
  status: SyntaxError
  stderr: '/tmp/tmpha98djs8.d(13): Error: template instance `to!string` template `to`
    is not defined, did you mean No?

    Failed: ["dmd", "-unittest", "-v", "-o-", "/tmp/tmpha98djs8.d", "-I/tmp"]

    '
  stdout: ''
  timestamp: 1660164539
- exit_code: 1
  program: "import std.typecons;\nimport std.math;\n/*\n Given a string, find out\
    \ how many distinct characters (regardless of case) does it consist of\n    >>>\
    \ count_distinct_characters(\"xyzXYZ\")\n    3L\n    >>> count_distinct_characters(\"\
    Jerry\")\n    4L\n    \n*/\nlong count_distinct_characters(string string) \n{\n\
    \    return set(string.toLower()).length;\n}\nunittest\n{\n    alias candidate\
    \ = count_distinct_characters;\n\n    assert(candidate(\"\") == 0L);\n    assert(candidate(\"\
    abcde\") == 5L);\n    assert(candidate(\"abcdecadeCADE\") == 5L);\n    assert(candidate(\"\
    aaaaAAAAaaaa\") == 1L);\n    assert(candidate(\"Jerry jERRY JeRRRY\") == 5L);\n\
    }\nvoid main(){}"
  status: SyntaxError
  stderr: '/tmp/tmp4fc64pj_.d(13): Error: undefined identifier `set`, did you mean
    template `get(K, V)(inout(V[K]) aa, K key, lazy inout(V) defaultValue)`?

    Failed: ["dmd", "-unittest", "-v", "-o-", "/tmp/tmp4fc64pj_.d", "-I/tmp"]

    '
  stdout: ''
  timestamp: 1660164539
- exit_code: 1
  program: "import std.typecons;\nimport std.math;\n/*\n Given a string, find out\
    \ how many distinct characters (regardless of case) does it consist of\n    >>>\
    \ count_distinct_characters(\"xyzXYZ\")\n    3L\n    >>> count_distinct_characters(\"\
    Jerry\")\n    4L\n    \n*/\nlong count_distinct_characters(string string) \n{\n\
    \    long count = 0;\n    foreach(char c; string)\n    {\n        if(c.isLetter)\n\
    \        {\n            count++;\n        }\n    }\n    return count;\n}\nunittest\n\
    {\n    alias candidate = count_distinct_characters;\n\n    assert(candidate(\"\
    \") == 0L);\n    assert(candidate(\"abcde\") == 5L);\n    assert(candidate(\"\
    abcdecadeCADE\") == 5L);\n    assert(candidate(\"aaaaAAAAaaaa\") == 1L);\n   \
    \ assert(candidate(\"Jerry jERRY JeRRRY\") == 5L);\n}\nvoid main(){}"
  status: SyntaxError
  stderr: '/tmp/tmpq5u3ew14.d(16): Error: no property `isLetter` for type `char`

    Failed: ["dmd", "-unittest", "-v", "-o-", "/tmp/tmpq5u3ew14.d", "-I/tmp"]

    '
  stdout: ''
  timestamp: 1660164539
- exit_code: 1
  program: "import std.typecons;\nimport std.math;\n/*\n Given a string, find out\
    \ how many distinct characters (regardless of case) does it consist of\n    >>>\
    \ count_distinct_characters(\"xyzXYZ\")\n    3L\n    >>> count_distinct_characters(\"\
    Jerry\")\n    4L\n    \n*/\nlong count_distinct_characters(string string) \n{\n\
    \    long count = 0;\n    foreach(char c; string)\n    {\n        if(!count)\n\
    \        {\n            count++;\n        }\n        else\n        {\n       \
    \     bool found = false;\n            foreach(char c2; string[0..$-1])\n    \
    \        {\n                if(tolower(c) == tolower(c2))\n                {\n\
    \                    found = true;\n                    break;\n             \
    \   }\n            }\n            if(!found)\n            {\n                count++;\n\
    \            }\n        }\n    }\n    return count;\n}\nunittest\n{\n    alias\
    \ candidate = count_distinct_characters;\n\n    assert(candidate(\"\") == 0L);\n\
    \    assert(candidate(\"abcde\") == 5L);\n    assert(candidate(\"abcdecadeCADE\"\
    ) == 5L);\n    assert(candidate(\"aaaaAAAAaaaa\") == 1L);\n    assert(candidate(\"\
    Jerry jERRY JeRRRY\") == 5L);\n}\nvoid main(){}"
  status: SyntaxError
  stderr: '/tmp/tmplsn_09ci.d(25): Error: undefined identifier `tolower`

    /tmp/tmplsn_09ci.d(25): Error: undefined identifier `tolower`

    Failed: ["dmd", "-unittest", "-v", "-o-", "/tmp/tmplsn_09ci.d", "-I/tmp"]

    '
  stdout: ''
  timestamp: 1660164539
- exit_code: 1
  program: "import std.typecons;\nimport std.math;\n/*\n Given a string, find out\
    \ how many distinct characters (regardless of case) does it consist of\n    >>>\
    \ count_distinct_characters(\"xyzXYZ\")\n    3L\n    >>> count_distinct_characters(\"\
    Jerry\")\n    4L\n    \n*/\nlong count_distinct_characters(string string) \n{\n\
    \    return string.toLower().chars.distinct.length;\n}\nunittest\n{\n    alias\
    \ candidate = count_distinct_characters;\n\n    assert(candidate(\"\") == 0L);\n\
    \    assert(candidate(\"abcde\") == 5L);\n    assert(candidate(\"abcdecadeCADE\"\
    ) == 5L);\n    assert(candidate(\"aaaaAAAAaaaa\") == 1L);\n    assert(candidate(\"\
    Jerry jERRY JeRRRY\") == 5L);\n}\nvoid main(){}"
  status: SyntaxError
  stderr: '/tmp/tmpm1yt8kps.d(13): Error: no property `toLower` for type `string`

    Failed: ["dmd", "-unittest", "-v", "-o-", "/tmp/tmpm1yt8kps.d", "-I/tmp"]

    '
  stdout: ''
  timestamp: 1660164539
- exit_code: 1
  program: "import std.typecons;\nimport std.math;\n/*\n Given a string, find out\
    \ how many distinct characters (regardless of case) does it consist of\n    >>>\
    \ count_distinct_characters(\"xyzXYZ\")\n    3L\n    >>> count_distinct_characters(\"\
    Jerry\")\n    4L\n    \n*/\nlong count_distinct_characters(string string) \n{\n\
    \    // TODO: implement\n    return 0;\n}\nunittest\n{\n    alias candidate =\
    \ count_distinct_characters;\n\n    assert(candidate(\"\") == 0L);\n    assert(candidate(\"\
    abcde\") == 5L);\n    assert(candidate(\"abcdecadeCADE\") == 5L);\n    assert(candidate(\"\
    aaaaAAAAaaaa\") == 1L);\n    assert(candidate(\"Jerry jERRY JeRRRY\") == 5L);\n\
    }\nvoid main(){}"
  status: Exception
  stderr: 'core.exception.AssertError@/tmp/tmpvioddxvg.d(21): unittest failure

    ----------------

    ??:? _d_unittestp [0x427d85]

    ??:? void tmpvioddxvg.__unittest_L16_C1() [0x427a71]

    ??:? void tmpvioddxvg.__modtest() [0x427b08]

    ??:? int core.runtime.runModuleUnitTests().__foreachbody2(object.ModuleInfo*)
    [0x42baab]

    ??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)).__lambda2(immutable(object.ModuleInfo*))
    [0x42a93e]

    ??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))).__foreachbody2(ref
    rt.sections_elf_shared.DSO) [0x42fad1]

    ??:? int rt.sections_elf_shared.DSO.opApply(scope int delegate(ref rt.sections_elf_shared.DSO))
    [0x42ff80]

    ??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*)))
    [0x42fa5d]

    ??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)) [0x42a915]

    ??:? runModuleUnitTests [0x42b881]

    ??:? void rt.dmain2._d_run_main(int, char**, extern (C) int function(char[][])*).runAll()
    [0x4281d4]

    ??:? void rt.dmain2._d_run_main(int, char**, extern (C) int function(char[][])*).tryExec(scope
    void delegate()) [0x42815b]

    ??:? _d_run_main [0x4280c6]

    ??:? main [0x427b1b]

    ??:? __libc_start_main [0x4505d554]

    1/1 unittests FAILED

    '
  stdout: ''
  timestamp: 1660164540
- exit_code: 1
  program: "import std.typecons;\nimport std.math;\n/*\n Given a string, find out\
    \ how many distinct characters (regardless of case) does it consist of\n    >>>\
    \ count_distinct_characters(\"xyzXYZ\")\n    3L\n    >>> count_distinct_characters(\"\
    Jerry\")\n    4L\n    \n*/\nlong count_distinct_characters(string string) \n{\n\
    \    auto char_count = long[char.max];\n    foreach(char c; string) \n    {\n\
    \        char_count[c]++;\n    }\n    return countUntil!(x => x > 0)(char_count);\n\
    }\nunittest\n{\n    alias candidate = count_distinct_characters;\n\n    assert(candidate(\"\
    \") == 0L);\n    assert(candidate(\"abcde\") == 5L);\n    assert(candidate(\"\
    abcdecadeCADE\") == 5L);\n    assert(candidate(\"aaaaAAAAaaaa\") == 1L);\n   \
    \ assert(candidate(\"Jerry jERRY JeRRRY\") == 5L);\n}\nvoid main(){}"
  status: SyntaxError
  stderr: '/tmp/tmpw4ynpx9f.d(13): Error: found `[` when expecting `.` following long

    /tmp/tmpw4ynpx9f.d(13): Error: found `char` when expecting identifier following
    `long`.

    /tmp/tmpw4ynpx9f.d(13): Error: semicolon expected following auto declaration,
    not `]`

    /tmp/tmpw4ynpx9f.d(13): Error: found `]` instead of statement

    Failed: ["dmd", "-unittest", "-v", "-o-", "/tmp/tmpw4ynpx9f.d", "-I/tmp"]

    '
  stdout: ''
  timestamp: 1660164539
- exit_code: 1
  program: "import std.typecons;\nimport std.math;\n/*\n Given a string, find out\
    \ how many distinct characters (regardless of case) does it consist of\n    >>>\
    \ count_distinct_characters(\"xyzXYZ\")\n    3L\n    >>> count_distinct_characters(\"\
    Jerry\")\n    4L\n    \n*/\nlong count_distinct_characters(string string) \n{\n\
    \    return set(string.toLower()).length;\n}\nunittest\n{\n    alias candidate\
    \ = count_distinct_characters;\n\n    assert(candidate(\"\") == 0L);\n    assert(candidate(\"\
    abcde\") == 5L);\n    assert(candidate(\"abcdecadeCADE\") == 5L);\n    assert(candidate(\"\
    aaaaAAAAaaaa\") == 1L);\n    assert(candidate(\"Jerry jERRY JeRRRY\") == 5L);\n\
    }\nvoid main(){}"
  status: SyntaxError
  stderr: '/tmp/tmp4fc64pj_.d(13): Error: undefined identifier `set`, did you mean
    template `get(K, V)(inout(V[K]) aa, K key, lazy inout(V) defaultValue)`?

    Failed: ["dmd", "-unittest", "-v", "-o-", "/tmp/tmp4fc64pj_.d", "-I/tmp"]

    '
  stdout: ''
  timestamp: 1660164539
- exit_code: 1
  program: "import std.typecons;\nimport std.math;\n/*\n Given a string, find out\
    \ how many distinct characters (regardless of case) does it consist of\n    >>>\
    \ count_distinct_characters(\"xyzXYZ\")\n    3L\n    >>> count_distinct_characters(\"\
    Jerry\")\n    4L\n    \n*/\nlong count_distinct_characters(string string) \n{\n\
    \    return string.toLower().toHashSet().length;\n}\nunittest\n{\n    alias candidate\
    \ = count_distinct_characters;\n\n    assert(candidate(\"\") == 0L);\n    assert(candidate(\"\
    abcde\") == 5L);\n    assert(candidate(\"abcdecadeCADE\") == 5L);\n    assert(candidate(\"\
    aaaaAAAAaaaa\") == 1L);\n    assert(candidate(\"Jerry jERRY JeRRRY\") == 5L);\n\
    }\nvoid main(){}"
  status: SyntaxError
  stderr: '/tmp/tmpnmx9hjr5.d(13): Error: no property `toLower` for type `string`

    Failed: ["dmd", "-unittest", "-v", "-o-", "/tmp/tmpnmx9hjr5.d", "-I/tmp"]

    '
  stdout: ''
  timestamp: 1660164539
- exit_code: 1
  program: "import std.typecons;\nimport std.math;\n/*\n Given a string, find out\
    \ how many distinct characters (regardless of case) does it consist of\n    >>>\
    \ count_distinct_characters(\"xyzXYZ\")\n    3L\n    >>> count_distinct_characters(\"\
    Jerry\")\n    4L\n    \n*/\nlong count_distinct_characters(string string) \n{\n\
    \    auto char_set = new Set!char;\n    foreach(char c; string)\n    {\n     \
    \   char_set.insert(c);\n    }\n    return char_set.length;\n}\nunittest\n{\n\
    \    alias candidate = count_distinct_characters;\n\n    assert(candidate(\"\"\
    ) == 0L);\n    assert(candidate(\"abcde\") == 5L);\n    assert(candidate(\"abcdecadeCADE\"\
    ) == 5L);\n    assert(candidate(\"aaaaAAAAaaaa\") == 1L);\n    assert(candidate(\"\
    Jerry jERRY JeRRRY\") == 5L);\n}\nvoid main(){}"
  status: SyntaxError
  stderr: '/tmp/tmpmuoxx_xs.d(13): Error: template instance `Set!char` template `Set`
    is not defined, did you mean get(K, V)(inout(V[K]) aa, K key, lazy inout(V) defaultValue)?

    Failed: ["dmd", "-unittest", "-v", "-o-", "/tmp/tmpmuoxx_xs.d", "-I/tmp"]

    '
  stdout: ''
  timestamp: 1660164539
- exit_code: 1
  program: "import std.typecons;\nimport std.math;\n/*\n Given a string, find out\
    \ how many distinct characters (regardless of case) does it consist of\n    >>>\
    \ count_distinct_characters(\"xyzXYZ\")\n    3L\n    >>> count_distinct_characters(\"\
    Jerry\")\n    4L\n    \n*/\nlong count_distinct_characters(string string) \n{\n\
    \    long count = 0;\n    foreach(char c; string)\n    {\n        if(c.isLetter)\n\
    \        {\n            count++;\n        }\n    }\n    return count;\n}\nunittest\n\
    {\n    alias candidate = count_distinct_characters;\n\n    assert(candidate(\"\
    \") == 0L);\n    assert(candidate(\"abcde\") == 5L);\n    assert(candidate(\"\
    abcdecadeCADE\") == 5L);\n    assert(candidate(\"aaaaAAAAaaaa\") == 1L);\n   \
    \ assert(candidate(\"Jerry jERRY JeRRRY\") == 5L);\n}\nvoid main(){}"
  status: SyntaxError
  stderr: '/tmp/tmpq5u3ew14.d(16): Error: no property `isLetter` for type `char`

    Failed: ["dmd", "-unittest", "-v", "-o-", "/tmp/tmpq5u3ew14.d", "-I/tmp"]

    '
  stdout: ''
  timestamp: 1660164539
- exit_code: 1
  program: "import std.typecons;\nimport std.math;\n/*\n Given a string, find out\
    \ how many distinct characters (regardless of case) does it consist of\n    >>>\
    \ count_distinct_characters(\"xyzXYZ\")\n    3L\n    >>> count_distinct_characters(\"\
    Jerry\")\n    4L\n    \n*/\nlong count_distinct_characters(string string) \n{\n\
    \    return set(string.toLower).length;\n}\nunittest\n{\n    alias candidate =\
    \ count_distinct_characters;\n\n    assert(candidate(\"\") == 0L);\n    assert(candidate(\"\
    abcde\") == 5L);\n    assert(candidate(\"abcdecadeCADE\") == 5L);\n    assert(candidate(\"\
    aaaaAAAAaaaa\") == 1L);\n    assert(candidate(\"Jerry jERRY JeRRRY\") == 5L);\n\
    }\nvoid main(){}"
  status: SyntaxError
  stderr: '/tmp/tmpqlde1930.d(13): Error: undefined identifier `set`, did you mean
    template `get(K, V)(inout(V[K]) aa, K key, lazy inout(V) defaultValue)`?

    Failed: ["dmd", "-unittest", "-v", "-o-", "/tmp/tmpqlde1930.d", "-I/tmp"]

    '
  stdout: ''
  timestamp: 1660164539
- exit_code: 1
  program: "import std.typecons;\nimport std.math;\n/*\n Given a string, find out\
    \ how many distinct characters (regardless of case) does it consist of\n    >>>\
    \ count_distinct_characters(\"xyzXYZ\")\n    3L\n    >>> count_distinct_characters(\"\
    Jerry\")\n    4L\n    \n*/\nlong count_distinct_characters(string string) \n{\n\
    \    long count = 0;\n    foreach(char c; string)\n    {\n        if(!count)\n\
    \        {\n            count++;\n        }\n        else\n        {\n       \
    \     bool found = false;\n            foreach(char c2; string[0..count])\n  \
    \          {\n                if(c == c2)\n                {\n               \
    \     found = true;\n                    break;\n                }\n         \
    \   }\n            if(!found)\n            {\n                count++;\n     \
    \       }\n        }\n    }\n    return count;\n}\nunittest\n{\n    alias candidate\
    \ = count_distinct_characters;\n\n    assert(candidate(\"\") == 0L);\n    assert(candidate(\"\
    abcde\") == 5L);\n    assert(candidate(\"abcdecadeCADE\") == 5L);\n    assert(candidate(\"\
    aaaaAAAAaaaa\") == 1L);\n    assert(candidate(\"Jerry jERRY JeRRRY\") == 5L);\n\
    }\nvoid main(){}"
  status: Exception
  stderr: 'core.exception.AssertError@/tmp/tmpkjisjm4k.d(45): unittest failure

    ----------------

    ??:? _d_unittestp [0x427e6d]

    ??:? void tmpkjisjm4k.__unittest_L39_C1() [0x427b80]

    ??:? void tmpkjisjm4k.__modtest() [0x427bec]

    ??:? int core.runtime.runModuleUnitTests().__foreachbody2(object.ModuleInfo*)
    [0x42bc07]

    ??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)).__lambda2(immutable(object.ModuleInfo*))
    [0x42aa9a]

    ??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))).__foreachbody2(ref
    rt.sections_elf_shared.DSO) [0x42fc2d]

    ??:? int rt.sections_elf_shared.DSO.opApply(scope int delegate(ref rt.sections_elf_shared.DSO))
    [0x4300dc]

    ??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*)))
    [0x42fbb9]

    ??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)) [0x42aa71]

    ??:? runModuleUnitTests [0x42b9dd]

    ??:? void rt.dmain2._d_run_main(int, char**, extern (C) int function(char[][])*).runAll()
    [0x428330]

    ??:? void rt.dmain2._d_r'
  stdout: ''
  timestamp: 1660164539
- exit_code: 1
  program: "import std.typecons;\nimport std.math;\n/*\n Given a string, find out\
    \ how many distinct characters (regardless of case) does it consist of\n    >>>\
    \ count_distinct_characters(\"xyzXYZ\")\n    3L\n    >>> count_distinct_characters(\"\
    Jerry\")\n    4L\n    \n*/\nlong count_distinct_characters(string string) \n{\n\
    \    return set(string.toLowerCase).length;\n}\nunittest\n{\n    alias candidate\
    \ = count_distinct_characters;\n\n    assert(candidate(\"\") == 0L);\n    assert(candidate(\"\
    abcde\") == 5L);\n    assert(candidate(\"abcdecadeCADE\") == 5L);\n    assert(candidate(\"\
    aaaaAAAAaaaa\") == 1L);\n    assert(candidate(\"Jerry jERRY JeRRRY\") == 5L);\n\
    }\nvoid main(){}"
  status: SyntaxError
  stderr: '/tmp/tmp4lz5kksp.d(13): Error: undefined identifier `set`, did you mean
    template `get(K, V)(inout(V[K]) aa, K key, lazy inout(V) defaultValue)`?

    Failed: ["dmd", "-unittest", "-v", "-o-", "/tmp/tmp4lz5kksp.d", "-I/tmp"]

    '
  stdout: ''
  timestamp: 1660164539
- exit_code: 1
  program: "import std.typecons;\nimport std.math;\n/*\n Given a string, find out\
    \ how many distinct characters (regardless of case) does it consist of\n    >>>\
    \ count_distinct_characters(\"xyzXYZ\")\n    3L\n    >>> count_distinct_characters(\"\
    Jerry\")\n    4L\n    \n*/\nlong count_distinct_characters(string string) \n{\n\
    \    return set!(char)(string).length;\n}\nunittest\n{\n    alias candidate =\
    \ count_distinct_characters;\n\n    assert(candidate(\"\") == 0L);\n    assert(candidate(\"\
    abcde\") == 5L);\n    assert(candidate(\"abcdecadeCADE\") == 5L);\n    assert(candidate(\"\
    aaaaAAAAaaaa\") == 1L);\n    assert(candidate(\"Jerry jERRY JeRRRY\") == 5L);\n\
    }\nvoid main(){}"
  status: SyntaxError
  stderr: '/tmp/tmp9xh7ufsa.d(13): Error: template instance `set!char` template `set`
    is not defined, did you mean get(K, V)(inout(V[K]) aa, K key, lazy inout(V) defaultValue)?

    Failed: ["dmd", "-unittest", "-v", "-o-", "/tmp/tmp9xh7ufsa.d", "-I/tmp"]

    '
  stdout: ''
  timestamp: 1660164539
- exit_code: 1
  program: "import std.typecons;\nimport std.math;\n/*\n Given a string, find out\
    \ how many distinct characters (regardless of case) does it consist of\n    >>>\
    \ count_distinct_characters(\"xyzXYZ\")\n    3L\n    >>> count_distinct_characters(\"\
    Jerry\")\n    4L\n    \n*/\nlong count_distinct_characters(string string) \n{\n\
    \    long count = 0;\n    foreach(char c; string)\n    {\n        if(!count)\n\
    \        {\n            count++;\n        }\n        else\n        {\n       \
    \     bool found = false;\n            foreach(char c2; string[0..count])\n  \
    \          {\n                if(c == c2)\n                {\n               \
    \     found = true;\n                    break;\n                }\n         \
    \   }\n            if(!found)\n            {\n                count++;\n     \
    \       }\n        }\n    }\n    return count;\n}\nunittest\n{\n    alias candidate\
    \ = count_distinct_characters;\n\n    assert(candidate(\"\") == 0L);\n    assert(candidate(\"\
    abcde\") == 5L);\n    assert(candidate(\"abcdecadeCADE\") == 5L);\n    assert(candidate(\"\
    aaaaAAAAaaaa\") == 1L);\n    assert(candidate(\"Jerry jERRY JeRRRY\") == 5L);\n\
    }\nvoid main(){}"
  status: Exception
  stderr: 'core.exception.AssertError@/tmp/tmpkjisjm4k.d(45): unittest failure

    ----------------

    ??:? _d_unittestp [0x427e6d]

    ??:? void tmpkjisjm4k.__unittest_L39_C1() [0x427b80]

    ??:? void tmpkjisjm4k.__modtest() [0x427bec]

    ??:? int core.runtime.runModuleUnitTests().__foreachbody2(object.ModuleInfo*)
    [0x42bc07]

    ??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)).__lambda2(immutable(object.ModuleInfo*))
    [0x42aa9a]

    ??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))).__foreachbody2(ref
    rt.sections_elf_shared.DSO) [0x42fc2d]

    ??:? int rt.sections_elf_shared.DSO.opApply(scope int delegate(ref rt.sections_elf_shared.DSO))
    [0x4300dc]

    ??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*)))
    [0x42fbb9]

    ??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)) [0x42aa71]

    ??:? runModuleUnitTests [0x42b9dd]

    ??:? void rt.dmain2._d_run_main(int, char**, extern (C) int function(char[][])*).runAll()
    [0x428330]

    ??:? void rt.dmain2._d_r'
  stdout: ''
  timestamp: 1660164539
- exit_code: 1
  program: "import std.typecons;\nimport std.math;\n/*\n Given a string, find out\
    \ how many distinct characters (regardless of case) does it consist of\n    >>>\
    \ count_distinct_characters(\"xyzXYZ\")\n    3L\n    >>> count_distinct_characters(\"\
    Jerry\")\n    4L\n    \n*/\nlong count_distinct_characters(string string) \n{\n\
    \    long count = 0;\n    foreach(char c; string)\n    {\n        if(!count)\n\
    \        {\n            count++;\n        }\n        else\n        {\n       \
    \     bool found = false;\n            foreach(char d; string[0..count])\n   \
    \         {\n                if(c == d)\n                {\n                 \
    \   found = true;\n                    break;\n                }\n           \
    \ }\n            if(!found)\n            {\n                count++;\n       \
    \     }\n        }\n    }\n    return count;\n}\nunittest\n{\n    alias candidate\
    \ = count_distinct_characters;\n\n    assert(candidate(\"\") == 0L);\n    assert(candidate(\"\
    abcde\") == 5L);\n    assert(candidate(\"abcdecadeCADE\") == 5L);\n    assert(candidate(\"\
    aaaaAAAAaaaa\") == 1L);\n    assert(candidate(\"Jerry jERRY JeRRRY\") == 5L);\n\
    }\nvoid main(){}"
  status: Exception
  stderr: 'core.exception.AssertError@/tmp/tmpi911na_7.d(45): unittest failure

    ----------------

    ??:? _d_unittestp [0x427e6d]

    ??:? void tmpi911na_7.__unittest_L39_C1() [0x427b80]

    ??:? void tmpi911na_7.__modtest() [0x427bec]

    ??:? int core.runtime.runModuleUnitTests().__foreachbody2(object.ModuleInfo*)
    [0x42bc07]

    ??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)).__lambda2(immutable(object.ModuleInfo*))
    [0x42aa9a]

    ??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))).__foreachbody2(ref
    rt.sections_elf_shared.DSO) [0x42fc2d]

    ??:? int rt.sections_elf_shared.DSO.opApply(scope int delegate(ref rt.sections_elf_shared.DSO))
    [0x4300dc]

    ??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*)))
    [0x42fbb9]

    ??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)) [0x42aa71]

    ??:? runModuleUnitTests [0x42b9dd]

    ??:? void rt.dmain2._d_run_main(int, char**, extern (C) int function(char[][])*).runAll()
    [0x428330]

    ??:? void rt.dmain2._d_r'
  stdout: ''
  timestamp: 1660164540
- exit_code: 1
  program: "import std.typecons;\nimport std.math;\n/*\n Given a string, find out\
    \ how many distinct characters (regardless of case) does it consist of\n    >>>\
    \ count_distinct_characters(\"xyzXYZ\")\n    3L\n    >>> count_distinct_characters(\"\
    Jerry\")\n    4L\n    \n*/\nlong count_distinct_characters(string string) \n{\n\
    \    auto result = new HashSet!char;\n    foreach(char c; string)\n    {\n   \
    \     result.insert(c);\n    }\n    return result.length;\n}\n/*\n Given a string,\
    \ find out how many distinct characters (regardless of case) does it consist of\n\
    \    >>> count_distinct_characters(\"xyzXYZ\")\n    3L\n    >>> count_distinct_characters(\"\
    Jerry\")\n    4L\n    \n*/\nlong count_distinct_characters_2(string string) \n\
    {\n    auto result = new HashSet!char;\n    foreach(char c; string)\n    {\n \
    \       result.insert(c);\n    }\n    return result.length;\n}\n/*\n Given a string,\
    \ find out how many distinct characters (regardless of case) does it consist of\n\
    \    >>> count_distinct_characters(\"xyzXYZ\")\n    3L\n    >>> count_distinct_characters(\"\
    Jerry\")\n    4L\n    \n*/\nlong count_distinct_characters_3(string string) \n\
    {\n    auto result = new HashSet!char;\n    foreach(char c; string)\n    {\n \
    \       result.insert(c);\n    }\n    return result.length;\n}\n/*\n Given a string,\
    \ find out how many distinct characters (regardless of case) does it consist of\n\
    \    >>> count_distinct_characters(\"xyzXYZ\")\n    3L\n    >>> count_distinct_characters(\"\
    Jerry\")\n    4L\n    \n*/\nlong count_distinct_characters_4(string string) \n\
    {\n    auto result = new HashSet!char;\n    foreach(char c; string)\n    {\n \
    \       result.insert(c);\n    }\n    return result.length;\n}\n/*\n Given a string,\
    \ find out how many distinct characters (regardless of case) does it consist of\n\
    \    >>> count_distinct_characters(\"xyzXYZ\")\n    3L\n    >>> count_distinct_characters(\"\
    Jerry\")\n    4L\n    \n*/\nlong count_distinct_characters_5(string string) \n\
    {\n    auto result = new\nunittest\n{\n    alias candidate = count_distinct_characters;\n\
    \n    assert(candidate(\"\") == 0L);\n    assert(candidate(\"abcde\") == 5L);\n\
    \    assert(candidate(\"abcdecadeCADE\") == 5L);\n    assert(candidate(\"aaaaAAAAaaaa\"\
    ) == 1L);\n    assert(candidate(\"Jerry jERRY JeRRRY\") == 5L);\n}\nvoid main(){}"
  status: SyntaxError
  stderr: '/tmp/tmpk05v53fg.d(82): Error: basic type expected, not `unittest`

    /tmp/tmpk05v53fg.d(82): Error: semicolon expected following auto declaration,
    not `unittest`

    /tmp/tmpk05v53fg.d(82): Error: found `unittest` instead of statement

    Failed: ["dmd", "-unittest", "-v", "-o-", "/tmp/tmpk05v53fg.d", "-I/tmp"]

    '
  stdout: ''
  timestamp: 1660164539
- exit_code: 1
  program: "import std.typecons;\nimport std.math;\n/*\n Given a string, find out\
    \ how many distinct characters (regardless of case) does it consist of\n    >>>\
    \ count_distinct_characters(\"xyzXYZ\")\n    3L\n    >>> count_distinct_characters(\"\
    Jerry\")\n    4L\n    \n*/\nlong count_distinct_characters(string string) \n{\n\
    \    return string.toLower().toSet().length;\n}\nunittest\n{\n    alias candidate\
    \ = count_distinct_characters;\n\n    assert(candidate(\"\") == 0L);\n    assert(candidate(\"\
    abcde\") == 5L);\n    assert(candidate(\"abcdecadeCADE\") == 5L);\n    assert(candidate(\"\
    aaaaAAAAaaaa\") == 1L);\n    assert(candidate(\"Jerry jERRY JeRRRY\") == 5L);\n\
    }\nvoid main(){}"
  status: SyntaxError
  stderr: '/tmp/tmp0j41705u.d(13): Error: no property `toLower` for type `string`

    Failed: ["dmd", "-unittest", "-v", "-o-", "/tmp/tmp0j41705u.d", "-I/tmp"]

    '
  stdout: ''
  timestamp: 1660164539
- exit_code: 1
  program: "import std.typecons;\nimport std.math;\n/*\n Given a string, find out\
    \ how many distinct characters (regardless of case) does it consist of\n    >>>\
    \ count_distinct_characters(\"xyzXYZ\")\n    3L\n    >>> count_distinct_characters(\"\
    Jerry\")\n    4L\n    \n*/\nlong count_distinct_characters(string string) \n{\n\
    \    return to!(long)(reduce!((a, b) => a + b, map!((c) => 1, string.toLower())));\n\
    }\nunittest\n{\n    alias candidate = count_distinct_characters;\n\n    assert(candidate(\"\
    \") == 0L);\n    assert(candidate(\"abcde\") == 5L);\n    assert(candidate(\"\
    abcdecadeCADE\") == 5L);\n    assert(candidate(\"aaaaAAAAaaaa\") == 1L);\n   \
    \ assert(candidate(\"Jerry jERRY JeRRRY\") == 5L);\n}\nvoid main(){}"
  status: SyntaxError
  stderr: '/tmp/tmp1qvgpfmc.d(13): Error: template instance `to!long` template `to`
    is not defined, did you mean No?

    Failed: ["dmd", "-unittest", "-v", "-o-", "/tmp/tmp1qvgpfmc.d", "-I/tmp"]

    '
  stdout: ''
  timestamp: 1660164539
- exit_code: 1
  program: "import std.typecons;\nimport std.math;\n/*\n Given a string, find out\
    \ how many distinct characters (regardless of case) does it consist of\n    >>>\
    \ count_distinct_characters(\"xyzXYZ\")\n    3L\n    >>> count_distinct_characters(\"\
    Jerry\")\n    4L\n    \n*/\nlong count_distinct_characters(string string) \n{\n\
    \    return string.toLower().toHashSet().length;\n}\nunittest\n{\n    alias candidate\
    \ = count_distinct_characters;\n\n    assert(candidate(\"\") == 0L);\n    assert(candidate(\"\
    abcde\") == 5L);\n    assert(candidate(\"abcdecadeCADE\") == 5L);\n    assert(candidate(\"\
    aaaaAAAAaaaa\") == 1L);\n    assert(candidate(\"Jerry jERRY JeRRRY\") == 5L);\n\
    }\nvoid main(){}"
  status: SyntaxError
  stderr: '/tmp/tmpnmx9hjr5.d(13): Error: no property `toLower` for type `string`

    Failed: ["dmd", "-unittest", "-v", "-o-", "/tmp/tmpnmx9hjr5.d", "-I/tmp"]

    '
  stdout: ''
  timestamp: 1660164539
- exit_code: 1
  program: "import std.typecons;\nimport std.math;\n/*\n Given a string, find out\
    \ how many distinct characters (regardless of case) does it consist of\n    >>>\
    \ count_distinct_characters(\"xyzXYZ\")\n    3L\n    >>> count_distinct_characters(\"\
    Jerry\")\n    4L\n    \n*/\nlong count_distinct_characters(string string) \n{\n\
    \    return to!string(string.toLower()).length;\n}\nunittest\n{\n    alias candidate\
    \ = count_distinct_characters;\n\n    assert(candidate(\"\") == 0L);\n    assert(candidate(\"\
    abcde\") == 5L);\n    assert(candidate(\"abcdecadeCADE\") == 5L);\n    assert(candidate(\"\
    aaaaAAAAaaaa\") == 1L);\n    assert(candidate(\"Jerry jERRY JeRRRY\") == 5L);\n\
    }\nvoid main(){}"
  status: SyntaxError
  stderr: '/tmp/tmphbe_dxa7.d(13): Error: template instance `to!string` template `to`
    is not defined, did you mean No?

    Failed: ["dmd", "-unittest", "-v", "-o-", "/tmp/tmphbe_dxa7.d", "-I/tmp"]

    '
  stdout: ''
  timestamp: 1660164539
- exit_code: 1
  program: "import std.typecons;\nimport std.math;\n/*\n Given a string, find out\
    \ how many distinct characters (regardless of case) does it consist of\n    >>>\
    \ count_distinct_characters(\"xyzXYZ\")\n    3L\n    >>> count_distinct_characters(\"\
    Jerry\")\n    4L\n    \n*/\nlong count_distinct_characters(string string) \n{\n\
    \    return set(string.toLower).length;\n}\nunittest\n{\n    alias candidate =\
    \ count_distinct_characters;\n\n    assert(candidate(\"\") == 0L);\n    assert(candidate(\"\
    abcde\") == 5L);\n    assert(candidate(\"abcdecadeCADE\") == 5L);\n    assert(candidate(\"\
    aaaaAAAAaaaa\") == 1L);\n    assert(candidate(\"Jerry jERRY JeRRRY\") == 5L);\n\
    }\nvoid main(){}"
  status: SyntaxError
  stderr: '/tmp/tmpqlde1930.d(13): Error: undefined identifier `set`, did you mean
    template `get(K, V)(inout(V[K]) aa, K key, lazy inout(V) defaultValue)`?

    Failed: ["dmd", "-unittest", "-v", "-o-", "/tmp/tmpqlde1930.d", "-I/tmp"]

    '
  stdout: ''
  timestamp: 1660164539
- exit_code: 1
  program: "import std.typecons;\nimport std.math;\n/*\n Given a string, find out\
    \ how many distinct characters (regardless of case) does it consist of\n    >>>\
    \ count_distinct_characters(\"xyzXYZ\")\n    3L\n    >>> count_distinct_characters(\"\
    Jerry\")\n    4L\n    \n*/\nlong count_distinct_characters(string string) \n{\n\
    \    return set(string.toLower).length;\n}\nunittest\n{\n    alias candidate =\
    \ count_distinct_characters;\n\n    assert(candidate(\"\") == 0L);\n    assert(candidate(\"\
    abcde\") == 5L);\n    assert(candidate(\"abcdecadeCADE\") == 5L);\n    assert(candidate(\"\
    aaaaAAAAaaaa\") == 1L);\n    assert(candidate(\"Jerry jERRY JeRRRY\") == 5L);\n\
    }\nvoid main(){}"
  status: SyntaxError
  stderr: '/tmp/tmpqlde1930.d(13): Error: undefined identifier `set`, did you mean
    template `get(K, V)(inout(V[K]) aa, K key, lazy inout(V) defaultValue)`?

    Failed: ["dmd", "-unittest", "-v", "-o-", "/tmp/tmpqlde1930.d", "-I/tmp"]

    '
  stdout: ''
  timestamp: 1660164539
- exit_code: 1
  program: "import std.typecons;\nimport std.math;\n/*\n Given a string, find out\
    \ how many distinct characters (regardless of case) does it consist of\n    >>>\
    \ count_distinct_characters(\"xyzXYZ\")\n    3L\n    >>> count_distinct_characters(\"\
    Jerry\")\n    4L\n    \n*/\nlong count_distinct_characters(string string) \n{\n\
    \    return to!string(string.toLower).length;\n}\nunittest\n{\n    alias candidate\
    \ = count_distinct_characters;\n\n    assert(candidate(\"\") == 0L);\n    assert(candidate(\"\
    abcde\") == 5L);\n    assert(candidate(\"abcdecadeCADE\") == 5L);\n    assert(candidate(\"\
    aaaaAAAAaaaa\") == 1L);\n    assert(candidate(\"Jerry jERRY JeRRRY\") == 5L);\n\
    }\nvoid main(){}"
  status: SyntaxError
  stderr: '/tmp/tmp0ehjdvsh.d(13): Error: template instance `to!string` template `to`
    is not defined, did you mean No?

    Failed: ["dmd", "-unittest", "-v", "-o-", "/tmp/tmp0ehjdvsh.d", "-I/tmp"]

    '
  stdout: ''
  timestamp: 1660164539
- exit_code: 1
  program: "import std.typecons;\nimport std.math;\n/*\n Given a string, find out\
    \ how many distinct characters (regardless of case) does it consist of\n    >>>\
    \ count_distinct_characters(\"xyzXYZ\")\n    3L\n    >>> count_distinct_characters(\"\
    Jerry\")\n    4L\n    \n*/\nlong count_distinct_characters(string string) \n{\n\
    \    auto chars = string.toLower();\n    return chars.length - chars.count(' ');\n\
    }\nunittest\n{\n    alias candidate = count_distinct_characters;\n\n    assert(candidate(\"\
    \") == 0L);\n    assert(candidate(\"abcde\") == 5L);\n    assert(candidate(\"\
    abcdecadeCADE\") == 5L);\n    assert(candidate(\"aaaaAAAAaaaa\") == 1L);\n   \
    \ assert(candidate(\"Jerry jERRY JeRRRY\") == 5L);\n}\nvoid main(){}"
  status: SyntaxError
  stderr: '/tmp/tmp7049kosc.d(13): Error: no property `toLower` for type `string`

    Failed: ["dmd", "-unittest", "-v", "-o-", "/tmp/tmp7049kosc.d", "-I/tmp"]

    '
  stdout: ''
  timestamp: 1660164539
- exit_code: 1
  program: "import std.typecons;\nimport std.math;\n/*\n Given a string, find out\
    \ how many distinct characters (regardless of case) does it consist of\n    >>>\
    \ count_distinct_characters(\"xyzXYZ\")\n    3L\n    >>> count_distinct_characters(\"\
    Jerry\")\n    4L\n    \n*/\nlong count_distinct_characters(string string) \n{\n\
    \    return string.toLower().toHashSet().length;\n}\nunittest\n{\n    alias candidate\
    \ = count_distinct_characters;\n\n    assert(candidate(\"\") == 0L);\n    assert(candidate(\"\
    abcde\") == 5L);\n    assert(candidate(\"abcdecadeCADE\") == 5L);\n    assert(candidate(\"\
    aaaaAAAAaaaa\") == 1L);\n    assert(candidate(\"Jerry jERRY JeRRRY\") == 5L);\n\
    }\nvoid main(){}"
  status: SyntaxError
  stderr: '/tmp/tmpnmx9hjr5.d(13): Error: no property `toLower` for type `string`

    Failed: ["dmd", "-unittest", "-v", "-o-", "/tmp/tmpnmx9hjr5.d", "-I/tmp"]

    '
  stdout: ''
  timestamp: 1660164539
- exit_code: 1
  program: "import std.typecons;\nimport std.math;\n/*\n Given a string, find out\
    \ how many distinct characters (regardless of case) does it consist of\n    >>>\
    \ count_distinct_characters(\"xyzXYZ\")\n    3L\n    >>> count_distinct_characters(\"\
    Jerry\")\n    4L\n    \n*/\nlong count_distinct_characters(string string) \n{\n\
    \    auto result = new Set!char;\n    foreach(c; string)\n    {\n        result.insert(c);\n\
    \    }\n    return result.length;\n}\nunittest\n{\n    alias candidate = count_distinct_characters;\n\
    \n    assert(candidate(\"\") == 0L);\n    assert(candidate(\"abcde\") == 5L);\n\
    \    assert(candidate(\"abcdecadeCADE\") == 5L);\n    assert(candidate(\"aaaaAAAAaaaa\"\
    ) == 1L);\n    assert(candidate(\"Jerry jERRY JeRRRY\") == 5L);\n}\nvoid main(){}"
  status: SyntaxError
  stderr: '/tmp/tmpnag58cum.d(13): Error: template instance `Set!char` template `Set`
    is not defined, did you mean get(K, V)(inout(V[K]) aa, K key, lazy inout(V) defaultValue)?

    Failed: ["dmd", "-unittest", "-v", "-o-", "/tmp/tmpnag58cum.d", "-I/tmp"]

    '
  stdout: ''
  timestamp: 1660164539
- exit_code: 1
  program: "import std.typecons;\nimport std.math;\n/*\n Given a string, find out\
    \ how many distinct characters (regardless of case) does it consist of\n    >>>\
    \ count_distinct_characters(\"xyzXYZ\")\n    3L\n    >>> count_distinct_characters(\"\
    Jerry\")\n    4L\n    \n*/\nlong count_distinct_characters(string string) \n{\n\
    \    auto chars = array(string.toLower());\n    return chars.length - chars.dup.length;\n\
    }\nunittest\n{\n    alias candidate = count_distinct_characters;\n\n    assert(candidate(\"\
    \") == 0L);\n    assert(candidate(\"abcde\") == 5L);\n    assert(candidate(\"\
    abcdecadeCADE\") == 5L);\n    assert(candidate(\"aaaaAAAAaaaa\") == 1L);\n   \
    \ assert(candidate(\"Jerry jERRY JeRRRY\") == 5L);\n}\nvoid main(){}"
  status: SyntaxError
  stderr: '/tmp/tmp3eov84y8.d(13): Error: undefined identifier `array`

    Failed: ["dmd", "-unittest", "-v", "-o-", "/tmp/tmp3eov84y8.d", "-I/tmp"]

    '
  stdout: ''
  timestamp: 1660164539
- exit_code: 1
  program: "import std.typecons;\nimport std.math;\n/*\n Given a string, find out\
    \ how many distinct characters (regardless of case) does it consist of\n    >>>\
    \ count_distinct_characters(\"xyzXYZ\")\n    3L\n    >>> count_distinct_characters(\"\
    Jerry\")\n    4L\n    \n*/\nlong count_distinct_characters(string string) \n{\n\
    \    return string.toLower().toHashSet().length;\n}\nunittest\n{\n    alias candidate\
    \ = count_distinct_characters;\n\n    assert(candidate(\"\") == 0L);\n    assert(candidate(\"\
    abcde\") == 5L);\n    assert(candidate(\"abcdecadeCADE\") == 5L);\n    assert(candidate(\"\
    aaaaAAAAaaaa\") == 1L);\n    assert(candidate(\"Jerry jERRY JeRRRY\") == 5L);\n\
    }\nvoid main(){}"
  status: SyntaxError
  stderr: '/tmp/tmpnmx9hjr5.d(13): Error: no property `toLower` for type `string`

    Failed: ["dmd", "-unittest", "-v", "-o-", "/tmp/tmpnmx9hjr5.d", "-I/tmp"]

    '
  stdout: ''
  timestamp: 1660164539
- exit_code: 1
  program: "import std.typecons;\nimport std.math;\n/*\n Given a string, find out\
    \ how many distinct characters (regardless of case) does it consist of\n    >>>\
    \ count_distinct_characters(\"xyzXYZ\")\n    3L\n    >>> count_distinct_characters(\"\
    Jerry\")\n    4L\n    \n*/\nlong count_distinct_characters(string string) \n{\n\
    \    // TODO: implement\n    return 0;\n}\nunittest\n{\n    alias candidate =\
    \ count_distinct_characters;\n\n    assert(candidate(\"\") == 0L);\n    assert(candidate(\"\
    abcde\") == 5L);\n    assert(candidate(\"abcdecadeCADE\") == 5L);\n    assert(candidate(\"\
    aaaaAAAAaaaa\") == 1L);\n    assert(candidate(\"Jerry jERRY JeRRRY\") == 5L);\n\
    }\nvoid main(){}"
  status: Exception
  stderr: 'core.exception.AssertError@/tmp/tmpvioddxvg.d(21): unittest failure

    ----------------

    ??:? _d_unittestp [0x427d85]

    ??:? void tmpvioddxvg.__unittest_L16_C1() [0x427a71]

    ??:? void tmpvioddxvg.__modtest() [0x427b08]

    ??:? int core.runtime.runModuleUnitTests().__foreachbody2(object.ModuleInfo*)
    [0x42baab]

    ??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)).__lambda2(immutable(object.ModuleInfo*))
    [0x42a93e]

    ??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))).__foreachbody2(ref
    rt.sections_elf_shared.DSO) [0x42fad1]

    ??:? int rt.sections_elf_shared.DSO.opApply(scope int delegate(ref rt.sections_elf_shared.DSO))
    [0x42ff80]

    ??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*)))
    [0x42fa5d]

    ??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)) [0x42a915]

    ??:? runModuleUnitTests [0x42b881]

    ??:? void rt.dmain2._d_run_main(int, char**, extern (C) int function(char[][])*).runAll()
    [0x4281d4]

    ??:? void rt.dmain2._d_run_main(int, char**, extern (C) int function(char[][])*).tryExec(scope
    void delegate()) [0x42815b]

    ??:? _d_run_main [0x4280c6]

    ??:? main [0x427b1b]

    ??:? __libc_start_main [0x4505d554]

    1/1 unittests FAILED

    '
  stdout: ''
  timestamp: 1660164540
- exit_code: 1
  program: "import std.typecons;\nimport std.math;\n/*\n Given a string, find out\
    \ how many distinct characters (regardless of case) does it consist of\n    >>>\
    \ count_distinct_characters(\"xyzXYZ\")\n    3L\n    >>> count_distinct_characters(\"\
    Jerry\")\n    4L\n    \n*/\nlong count_distinct_characters(string string) \n{\n\
    \    long count = 0;\n    foreach(char c; string)\n    {\n        if(c.isLetter)\n\
    \        {\n            count++;\n        }\n    }\n    return count;\n}\nunittest\n\
    {\n    alias candidate = count_distinct_characters;\n\n    assert(candidate(\"\
    \") == 0L);\n    assert(candidate(\"abcde\") == 5L);\n    assert(candidate(\"\
    abcdecadeCADE\") == 5L);\n    assert(candidate(\"aaaaAAAAaaaa\") == 1L);\n   \
    \ assert(candidate(\"Jerry jERRY JeRRRY\") == 5L);\n}\nvoid main(){}"
  status: SyntaxError
  stderr: '/tmp/tmpq5u3ew14.d(16): Error: no property `isLetter` for type `char`

    Failed: ["dmd", "-unittest", "-v", "-o-", "/tmp/tmpq5u3ew14.d", "-I/tmp"]

    '
  stdout: ''
  timestamp: 1660164539
- exit_code: 1
  program: "import std.typecons;\nimport std.math;\n/*\n Given a string, find out\
    \ how many distinct characters (regardless of case) does it consist of\n    >>>\
    \ count_distinct_characters(\"xyzXYZ\")\n    3L\n    >>> count_distinct_characters(\"\
    Jerry\")\n    4L\n    \n*/\nlong count_distinct_characters(string string) \n{\n\
    \    auto result = SortedRange!(char)(string);\n    return result.length;\n}\n\
    unittest\n{\n    alias candidate = count_distinct_characters;\n\n    assert(candidate(\"\
    \") == 0L);\n    assert(candidate(\"abcde\") == 5L);\n    assert(candidate(\"\
    abcdecadeCADE\") == 5L);\n    assert(candidate(\"aaaaAAAAaaaa\") == 1L);\n   \
    \ assert(candidate(\"Jerry jERRY JeRRRY\") == 5L);\n}\nvoid main(){}"
  status: SyntaxError
  stderr: '/tmp/tmpx_3h0jbe.d(13): Error: template instance `SortedRange!char` template
    `SortedRange` is not defined

    Failed: ["dmd", "-unittest", "-v", "-o-", "/tmp/tmpx_3h0jbe.d", "-I/tmp"]

    '
  stdout: ''
  timestamp: 1660164539
- exit_code: 1
  program: "import std.typecons;\nimport std.math;\n/*\n Given a string, find out\
    \ how many distinct characters (regardless of case) does it consist of\n    >>>\
    \ count_distinct_characters(\"xyzXYZ\")\n    3L\n    >>> count_distinct_characters(\"\
    Jerry\")\n    4L\n    \n*/\nlong count_distinct_characters(string string) \n{\n\
    \    // TODO: implement\n    return 0;\n}\nunittest\n{\n    alias candidate =\
    \ count_distinct_characters;\n\n    assert(candidate(\"\") == 0L);\n    assert(candidate(\"\
    abcde\") == 5L);\n    assert(candidate(\"abcdecadeCADE\") == 5L);\n    assert(candidate(\"\
    aaaaAAAAaaaa\") == 1L);\n    assert(candidate(\"Jerry jERRY JeRRRY\") == 5L);\n\
    }\nvoid main(){}"
  status: Exception
  stderr: 'core.exception.AssertError@/tmp/tmpvioddxvg.d(21): unittest failure

    ----------------

    ??:? _d_unittestp [0x427d85]

    ??:? void tmpvioddxvg.__unittest_L16_C1() [0x427a71]

    ??:? void tmpvioddxvg.__modtest() [0x427b08]

    ??:? int core.runtime.runModuleUnitTests().__foreachbody2(object.ModuleInfo*)
    [0x42baab]

    ??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)).__lambda2(immutable(object.ModuleInfo*))
    [0x42a93e]

    ??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))).__foreachbody2(ref
    rt.sections_elf_shared.DSO) [0x42fad1]

    ??:? int rt.sections_elf_shared.DSO.opApply(scope int delegate(ref rt.sections_elf_shared.DSO))
    [0x42ff80]

    ??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*)))
    [0x42fa5d]

    ??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)) [0x42a915]

    ??:? runModuleUnitTests [0x42b881]

    ??:? void rt.dmain2._d_run_main(int, char**, extern (C) int function(char[][])*).runAll()
    [0x4281d4]

    ??:? void rt.dmain2._d_run_main(int, char**, extern (C) int function(char[][])*).tryExec(scope
    void delegate()) [0x42815b]

    ??:? _d_run_main [0x4280c6]

    ??:? main [0x427b1b]

    ??:? __libc_start_main [0x4505d554]

    1/1 unittests FAILED

    '
  stdout: ''
  timestamp: 1660164540
- exit_code: 1
  program: "import std.typecons;\nimport std.math;\n/*\n Given a string, find out\
    \ how many distinct characters (regardless of case) does it consist of\n    >>>\
    \ count_distinct_characters(\"xyzXYZ\")\n    3L\n    >>> count_distinct_characters(\"\
    Jerry\")\n    4L\n    \n*/\nlong count_distinct_characters(string string) \n{\n\
    \    return set(string.toLowerCase).length;\n}\nunittest\n{\n    alias candidate\
    \ = count_distinct_characters;\n\n    assert(candidate(\"\") == 0L);\n    assert(candidate(\"\
    abcde\") == 5L);\n    assert(candidate(\"abcdecadeCADE\") == 5L);\n    assert(candidate(\"\
    aaaaAAAAaaaa\") == 1L);\n    assert(candidate(\"Jerry jERRY JeRRRY\") == 5L);\n\
    }\nvoid main(){}"
  status: SyntaxError
  stderr: '/tmp/tmp4lz5kksp.d(13): Error: undefined identifier `set`, did you mean
    template `get(K, V)(inout(V[K]) aa, K key, lazy inout(V) defaultValue)`?

    Failed: ["dmd", "-unittest", "-v", "-o-", "/tmp/tmp4lz5kksp.d", "-I/tmp"]

    '
  stdout: ''
  timestamp: 1660164539
- exit_code: 1
  program: "import std.typecons;\nimport std.math;\n/*\n Given a string, find out\
    \ how many distinct characters (regardless of case) does it consist of\n    >>>\
    \ count_distinct_characters(\"xyzXYZ\")\n    3L\n    >>> count_distinct_characters(\"\
    Jerry\")\n    4L\n    \n*/\nlong count_distinct_characters(string string) \n{\n\
    \    auto char_set = set!char();\n    foreach(c; string)\n    {\n        char_set.insert(toLower(c));\n\
    \    }\n    return char_set.length;\n}\nunittest\n{\n    alias candidate = count_distinct_characters;\n\
    \n    assert(candidate(\"\") == 0L);\n    assert(candidate(\"abcde\") == 5L);\n\
    \    assert(candidate(\"abcdecadeCADE\") == 5L);\n    assert(candidate(\"aaaaAAAAaaaa\"\
    ) == 1L);\n    assert(candidate(\"Jerry jERRY JeRRRY\") == 5L);\n}\nvoid main(){}"
  status: SyntaxError
  stderr: '/tmp/tmpli0j4gd8.d(13): Error: template instance `set!char` template `set`
    is not defined, did you mean get(K, V)(inout(V[K]) aa, K key, lazy inout(V) defaultValue)?

    Failed: ["dmd", "-unittest", "-v", "-o-", "/tmp/tmpli0j4gd8.d", "-I/tmp"]

    '
  stdout: ''
  timestamp: 1660164539
- exit_code: 1
  program: "import std.typecons;\nimport std.math;\n/*\n Given a string, find out\
    \ how many distinct characters (regardless of case) does it consist of\n    >>>\
    \ count_distinct_characters(\"xyzXYZ\")\n    3L\n    >>> count_distinct_characters(\"\
    Jerry\")\n    4L\n    \n*/\nlong count_distinct_characters(string string) \n{\n\
    \    long count = 0;\n    foreach(char c; string)\n    {\n        if(c.isAlpha)\n\
    \        {\n            count++;\n        }\n    }\n    return count;\n}\nunittest\n\
    {\n    alias candidate = count_distinct_characters;\n\n    assert(candidate(\"\
    \") == 0L);\n    assert(candidate(\"abcde\") == 5L);\n    assert(candidate(\"\
    abcdecadeCADE\") == 5L);\n    assert(candidate(\"aaaaAAAAaaaa\") == 1L);\n   \
    \ assert(candidate(\"Jerry jERRY JeRRRY\") == 5L);\n}\nvoid main(){}"
  status: SyntaxError
  stderr: '/tmp/tmpmrkg4h87.d(16): Error: no property `isAlpha` for type `char`

    Failed: ["dmd", "-unittest", "-v", "-o-", "/tmp/tmpmrkg4h87.d", "-I/tmp"]

    '
  stdout: ''
  timestamp: 1660164539
- exit_code: 1
  program: "import std.typecons;\nimport std.math;\n/*\n Given a string, find out\
    \ how many distinct characters (regardless of case) does it consist of\n    >>>\
    \ count_distinct_characters(\"xyzXYZ\")\n    3L\n    >>> count_distinct_characters(\"\
    Jerry\")\n    4L\n    \n*/\nlong count_distinct_characters(string string) \n{\n\
    \    auto char_set = set!char();\n    foreach(c; string)\n    {\n        char_set.insert(c);\n\
    \    }\n    return char_set.length;\n}\nunittest\n{\n    alias candidate = count_distinct_characters;\n\
    \n    assert(candidate(\"\") == 0L);\n    assert(candidate(\"abcde\") == 5L);\n\
    \    assert(candidate(\"abcdecadeCADE\") == 5L);\n    assert(candidate(\"aaaaAAAAaaaa\"\
    ) == 1L);\n    assert(candidate(\"Jerry jERRY JeRRRY\") == 5L);\n}\nvoid main(){}"
  status: SyntaxError
  stderr: '/tmp/tmpu78p1ssl.d(13): Error: template instance `set!char` template `set`
    is not defined, did you mean get(K, V)(inout(V[K]) aa, K key, lazy inout(V) defaultValue)?

    Failed: ["dmd", "-unittest", "-v", "-o-", "/tmp/tmpu78p1ssl.d", "-I/tmp"]

    '
  stdout: ''
  timestamp: 1660164539
- exit_code: 1
  program: "import std.typecons;\nimport std.math;\n/*\n Given a string, find out\
    \ how many distinct characters (regardless of case) does it consist of\n    >>>\
    \ count_distinct_characters(\"xyzXYZ\")\n    3L\n    >>> count_distinct_characters(\"\
    Jerry\")\n    4L\n    \n*/\nlong count_distinct_characters(string string) \n{\n\
    \    long result = 0;\n    foreach(char c; string)\n    {\n        if(c.isLetter)\n\
    \        {\n            result++;\n        }\n    }\n    return result;\n}\nunittest\n\
    {\n    alias candidate = count_distinct_characters;\n\n    assert(candidate(\"\
    \") == 0L);\n    assert(candidate(\"abcde\") == 5L);\n    assert(candidate(\"\
    abcdecadeCADE\") == 5L);\n    assert(candidate(\"aaaaAAAAaaaa\") == 1L);\n   \
    \ assert(candidate(\"Jerry jERRY JeRRRY\") == 5L);\n}\nvoid main(){}"
  status: SyntaxError
  stderr: '/tmp/tmp4iyai94k.d(16): Error: no property `isLetter` for type `char`

    Failed: ["dmd", "-unittest", "-v", "-o-", "/tmp/tmp4iyai94k.d", "-I/tmp"]

    '
  stdout: ''
  timestamp: 1660164539
- exit_code: 1
  program: "import std.typecons;\nimport std.math;\n/*\n Given a string, find out\
    \ how many distinct characters (regardless of case) does it consist of\n    >>>\
    \ count_distinct_characters(\"xyzXYZ\")\n    3L\n    >>> count_distinct_characters(\"\
    Jerry\")\n    4L\n    \n*/\nlong count_distinct_characters(string string) \n{\n\
    \    long count = 0;\n    foreach(char c; string)\n    {\n        if (c.tolower()\
    \ == c)\n        {\n            count++;\n        }\n    }\n    return count;\n\
    }\nunittest\n{\n    alias candidate = count_distinct_characters;\n\n    assert(candidate(\"\
    \") == 0L);\n    assert(candidate(\"abcde\") == 5L);\n    assert(candidate(\"\
    abcdecadeCADE\") == 5L);\n    assert(candidate(\"aaaaAAAAaaaa\") == 1L);\n   \
    \ assert(candidate(\"Jerry jERRY JeRRRY\") == 5L);\n}\nvoid main(){}"
  status: SyntaxError
  stderr: '/tmp/tmpoaoe3fuo.d(16): Error: no property `tolower` for type `char`

    Failed: ["dmd", "-unittest", "-v", "-o-", "/tmp/tmpoaoe3fuo.d", "-I/tmp"]

    '
  stdout: ''
  timestamp: 1660164539
- exit_code: 1
  program: "import std.typecons;\nimport std.math;\n/*\n Given a string, find out\
    \ how many distinct characters (regardless of case) does it consist of\n    >>>\
    \ count_distinct_characters(\"xyzXYZ\")\n    3L\n    >>> count_distinct_characters(\"\
    Jerry\")\n    4L\n    \n*/\nlong count_distinct_characters(string string) \n{\n\
    \    return string.toLower().toHashSet().length;\n}\nunittest\n{\n    alias candidate\
    \ = count_distinct_characters;\n\n    assert(candidate(\"\") == 0L);\n    assert(candidate(\"\
    abcde\") == 5L);\n    assert(candidate(\"abcdecadeCADE\") == 5L);\n    assert(candidate(\"\
    aaaaAAAAaaaa\") == 1L);\n    assert(candidate(\"Jerry jERRY JeRRRY\") == 5L);\n\
    }\nvoid main(){}"
  status: SyntaxError
  stderr: '/tmp/tmpnmx9hjr5.d(13): Error: no property `toLower` for type `string`

    Failed: ["dmd", "-unittest", "-v", "-o-", "/tmp/tmpnmx9hjr5.d", "-I/tmp"]

    '
  stdout: ''
  timestamp: 1660164539
- exit_code: 1
  program: "import std.typecons;\nimport std.math;\n/*\n Given a string, find out\
    \ how many distinct characters (regardless of case) does it consist of\n    >>>\
    \ count_distinct_characters(\"xyzXYZ\")\n    3L\n    >>> count_distinct_characters(\"\
    Jerry\")\n    4L\n    \n*/\nlong count_distinct_characters(string string) \n{\n\
    \    long count = 0;\n    foreach(char c; string)\n    {\n        if(c.isLetter)\n\
    \        {\n            count++;\n        }\n    }\n    return count;\n}\nunittest\n\
    {\n    alias candidate = count_distinct_characters;\n\n    assert(candidate(\"\
    \") == 0L);\n    assert(candidate(\"abcde\") == 5L);\n    assert(candidate(\"\
    abcdecadeCADE\") == 5L);\n    assert(candidate(\"aaaaAAAAaaaa\") == 1L);\n   \
    \ assert(candidate(\"Jerry jERRY JeRRRY\") == 5L);\n}\nvoid main(){}"
  status: SyntaxError
  stderr: '/tmp/tmpq5u3ew14.d(16): Error: no property `isLetter` for type `char`

    Failed: ["dmd", "-unittest", "-v", "-o-", "/tmp/tmpq5u3ew14.d", "-I/tmp"]

    '
  stdout: ''
  timestamp: 1660164539
- exit_code: 1
  program: "import std.typecons;\nimport std.math;\n/*\n Given a string, find out\
    \ how many distinct characters (regardless of case) does it consist of\n    >>>\
    \ count_distinct_characters(\"xyzXYZ\")\n    3L\n    >>> count_distinct_characters(\"\
    Jerry\")\n    4L\n    \n*/\nlong count_distinct_characters(string string) \n{\n\
    \    return set(string.toLower).length;\n}\nunittest\n{\n    alias candidate =\
    \ count_distinct_characters;\n\n    assert(candidate(\"\") == 0L);\n    assert(candidate(\"\
    abcde\") == 5L);\n    assert(candidate(\"abcdecadeCADE\") == 5L);\n    assert(candidate(\"\
    aaaaAAAAaaaa\") == 1L);\n    assert(candidate(\"Jerry jERRY JeRRRY\") == 5L);\n\
    }\nvoid main(){}"
  status: SyntaxError
  stderr: '/tmp/tmpqlde1930.d(13): Error: undefined identifier `set`, did you mean
    template `get(K, V)(inout(V[K]) aa, K key, lazy inout(V) defaultValue)`?

    Failed: ["dmd", "-unittest", "-v", "-o-", "/tmp/tmpqlde1930.d", "-I/tmp"]

    '
  stdout: ''
  timestamp: 1660164539
- exit_code: 1
  program: "import std.typecons;\nimport std.math;\n/*\n Given a string, find out\
    \ how many distinct characters (regardless of case) does it consist of\n    >>>\
    \ count_distinct_characters(\"xyzXYZ\")\n    3L\n    >>> count_distinct_characters(\"\
    Jerry\")\n    4L\n    \n*/\nlong count_distinct_characters(string string) \n{\n\
    \    long count = 0;\n    foreach(char c; string)\n    {\n        if(c.tolower()\
    \ == c.toupper())\n        {\n            count++;\n        }\n    }\n    return\
    \ count;\n}\n/*\n Given a string, find out how many distinct characters (regardless\
    \ of case) does it consist of\n    >>> count_distinct_characters(\"xyzXYZ\")\n\
    \    3L\n    >>> count_distinct_characters(\"Jerry\")\n    4L\n    \n*/\nlong\
    \ count_distinct_characters2(string string) \n{\n    long count = 0;\n    foreach(char\
    \ c; string)\n    {\n        if(c.tolower() == c.toupper())\n        {\n     \
    \       count++;\n        }\n    }\n    return count;\n}\n/*\n Given a string,\
    \ find out how many distinct characters (regardless of case) does it consist of\n\
    \    >>> count_distinct_characters(\"xyzXYZ\")\n    3L\n    >>> count_distinct_characters(\"\
    Jerry\")\n    4L\n    \n*/\nlong count_distinct_characters3(string string) \n\
    {\n    long count = 0;\n    foreach(char c; string)\n    {\n        if(c.tolower()\
    \ == c.toupper())\n        {\n            count++;\n        }\n    }\n    return\
    \ count;\n}\n/*\n Given a string, find out how many distinct characters (regardless\
    \ of case) does it consist of\n    >>> count_distinct_characters(\"xyzXYZ\")\n\
    \    3L\n    >>> count_distinct_characters(\"Jerry\")\n    4L\n    \n*/\nlong\
    \ count_distinct_characters4(string string) \n{\n    long count = 0;\n    foreach(char\
    \ c; string)\n    {\n        if(c.tolower() == c.toupper())\n        {\n     \
    \       count++;\n        }\n    }\n    return count;\n}\n/*\n Given a string,\
    \ find out how many distinct characters (regardless of case) does it consist of\n\
    \    >>> count_distinct_characters(\"xyzXYZ\")\nunittest\n{\n    alias candidate\
    \ = count_distinct_characters;\n\n    assert(candidate(\"\") == 0L);\n    assert(candidate(\"\
    abcde\") == 5L);\n    assert(candidate(\"abcdecadeCADE\") == 5L);\n    assert(candidate(\"\
    aaaaAAAAaaaa\") == 1L);\n    assert(candidate(\"Jerry jERRY JeRRRY\") == 5L);\n\
    }\nvoid main(){}"
  status: SyntaxError
  stderr: '/tmp/tmpucpdtjc2.d(83): Error: unterminated /* */ comment

    Failed: ["dmd", "-unittest", "-v", "-o-", "/tmp/tmpucpdtjc2.d", "-I/tmp"]

    '
  stdout: ''
  timestamp: 1660164539
- exit_code: 1
  program: "import std.typecons;\nimport std.math;\n/*\n Given a string, find out\
    \ how many distinct characters (regardless of case) does it consist of\n    >>>\
    \ count_distinct_characters(\"xyzXYZ\")\n    3L\n    >>> count_distinct_characters(\"\
    Jerry\")\n    4L\n    \n*/\nlong count_distinct_characters(string string) \n{\n\
    \    return string.toLower().length;\n}\nunittest\n{\n    alias candidate = count_distinct_characters;\n\
    \n    assert(candidate(\"\") == 0L);\n    assert(candidate(\"abcde\") == 5L);\n\
    \    assert(candidate(\"abcdecadeCADE\") == 5L);\n    assert(candidate(\"aaaaAAAAaaaa\"\
    ) == 1L);\n    assert(candidate(\"Jerry jERRY JeRRRY\") == 5L);\n}\nvoid main(){}"
  status: SyntaxError
  stderr: '/tmp/tmphfp3dody.d(13): Error: no property `toLower` for type `string`

    Failed: ["dmd", "-unittest", "-v", "-o-", "/tmp/tmphfp3dody.d", "-I/tmp"]

    '
  stdout: ''
  timestamp: 1660164539
- exit_code: 1
  program: "import std.typecons;\nimport std.math;\n/*\n Given a string, find out\
    \ how many distinct characters (regardless of case) does it consist of\n    >>>\
    \ count_distinct_characters(\"xyzXYZ\")\n    3L\n    >>> count_distinct_characters(\"\
    Jerry\")\n    4L\n    \n*/\nlong count_distinct_characters(string string) \n{\n\
    \    return set(string.toLowerCase).length;\n}\nunittest\n{\n    alias candidate\
    \ = count_distinct_characters;\n\n    assert(candidate(\"\") == 0L);\n    assert(candidate(\"\
    abcde\") == 5L);\n    assert(candidate(\"abcdecadeCADE\") == 5L);\n    assert(candidate(\"\
    aaaaAAAAaaaa\") == 1L);\n    assert(candidate(\"Jerry jERRY JeRRRY\") == 5L);\n\
    }\nvoid main(){}"
  status: SyntaxError
  stderr: '/tmp/tmp4lz5kksp.d(13): Error: undefined identifier `set`, did you mean
    template `get(K, V)(inout(V[K]) aa, K key, lazy inout(V) defaultValue)`?

    Failed: ["dmd", "-unittest", "-v", "-o-", "/tmp/tmp4lz5kksp.d", "-I/tmp"]

    '
  stdout: ''
  timestamp: 1660164539
- exit_code: 1
  program: "import std.typecons;\nimport std.math;\n/*\n Given a string, find out\
    \ how many distinct characters (regardless of case) does it consist of\n    >>>\
    \ count_distinct_characters(\"xyzXYZ\")\n    3L\n    >>> count_distinct_characters(\"\
    Jerry\")\n    4L\n    \n*/\nlong count_distinct_characters(string string) \n{\n\
    \    return string.toLower().toHashSet().length;\n}\n/*\n Given a string, find\
    \ out how many distinct characters (regardless of case) does it consist of\n \
    \   >>> count_distinct_characters(\"xyzXYZ\")\n    3L\n    >>> count_distinct_characters(\"\
    Jerry\")\n    4L\n    \n*/\nlong count_distinct_characters(string string) \n{\n\
    \    return string.toLower().toHashSet().length;\n}\n/*\n Given a string, find\
    \ out how many distinct characters (regardless of case) does it consist of\n \
    \   >>> count_distinct_characters(\"xyzXYZ\")\n    3L\n    >>> count_distinct_characters(\"\
    Jerry\")\n    4L\n    \n*/\nlong count_distinct_characters(string string) \n{\n\
    \    return string.toLower().toHashSet().length;\n}\n/*\n Given a string, find\
    \ out how many distinct characters (regardless of case) does it consist of\n \
    \   >>> count_distinct_characters(\"xyzXYZ\")\n    3L\n    >>> count_distinct_characters(\"\
    Jerry\")\n    4L\n    \n*/\nlong count_distinct_characters(string string) \n{\n\
    \    return string.toLower().toHashSet().length;\n}\n/*\n Given a string, find\
    \ out how many distinct characters (regardless of case) does it consist of\n \
    \   >>> count_distinct_characters(\"xyzXYZ\")\n    3L\n    >>> count_distinct_characters(\"\
    Jerry\")\n    4L\n    \n*/\nlong count_distinct_characters(string string) \n{\n\
    \    return string.toLower().toHashSet().length;\n}\n/*\n Given a string, find\
    \ out how many distinct characters (regardless of case) does it consist of\n \
    \   >>> count_distinct_characters(\"xyzXYZ\")\n    3L\n    >>> count_distinct_characters(\"\
    Jerry\")\n    4L\n    \n*/\nlong count_distinct_characters(string string) \n{\n\
    \    return string.toLower().toHashSet().length;\n}\n/*\n Given a string, find\
    \ out how many distinct characters (\nunittest\n{\n    alias candidate = count_distinct_characters;\n\
    \n    assert(candidate(\"\") == 0L);\n    assert(candidate(\"abcde\") == 5L);\n\
    \    assert(candidate(\"abcdecadeCADE\") == 5L);\n    assert(candidate(\"aaaaAAAAaaaa\"\
    ) == 1L);\n    assert(candidate(\"Jerry jERRY JeRRRY\") == 5L);\n}\nvoid main(){}"
  status: SyntaxError
  stderr: '/tmp/tmp2yo23yur.d(75): Error: unterminated /* */ comment

    Failed: ["dmd", "-unittest", "-v", "-o-", "/tmp/tmp2yo23yur.d", "-I/tmp"]

    '
  stdout: ''
  timestamp: 1660164539
- exit_code: 1
  program: "import std.typecons;\nimport std.math;\n/*\n Given a string, find out\
    \ how many distinct characters (regardless of case) does it consist of\n    >>>\
    \ count_distinct_characters(\"xyzXYZ\")\n    3L\n    >>> count_distinct_characters(\"\
    Jerry\")\n    4L\n    \n*/\nlong count_distinct_characters(string string) \n{\n\
    \    return string.toLower().toHashSet().length;\n}\nunittest\n{\n    alias candidate\
    \ = count_distinct_characters;\n\n    assert(candidate(\"\") == 0L);\n    assert(candidate(\"\
    abcde\") == 5L);\n    assert(candidate(\"abcdecadeCADE\") == 5L);\n    assert(candidate(\"\
    aaaaAAAAaaaa\") == 1L);\n    assert(candidate(\"Jerry jERRY JeRRRY\") == 5L);\n\
    }\nvoid main(){}"
  status: SyntaxError
  stderr: '/tmp/tmpnmx9hjr5.d(13): Error: no property `toLower` for type `string`

    Failed: ["dmd", "-unittest", "-v", "-o-", "/tmp/tmpnmx9hjr5.d", "-I/tmp"]

    '
  stdout: ''
  timestamp: 1660164539
- exit_code: 1
  program: "import std.typecons;\nimport std.math;\n/*\n Given a string, find out\
    \ how many distinct characters (regardless of case) does it consist of\n    >>>\
    \ count_distinct_characters(\"xyzXYZ\")\n    3L\n    >>> count_distinct_characters(\"\
    Jerry\")\n    4L\n    \n*/\nlong count_distinct_characters(string string) \n{\n\
    \    return set(string.toLower).length;\n}\nunittest\n{\n    alias candidate =\
    \ count_distinct_characters;\n\n    assert(candidate(\"\") == 0L);\n    assert(candidate(\"\
    abcde\") == 5L);\n    assert(candidate(\"abcdecadeCADE\") == 5L);\n    assert(candidate(\"\
    aaaaAAAAaaaa\") == 1L);\n    assert(candidate(\"Jerry jERRY JeRRRY\") == 5L);\n\
    }\nvoid main(){}"
  status: SyntaxError
  stderr: '/tmp/tmpqlde1930.d(13): Error: undefined identifier `set`, did you mean
    template `get(K, V)(inout(V[K]) aa, K key, lazy inout(V) defaultValue)`?

    Failed: ["dmd", "-unittest", "-v", "-o-", "/tmp/tmpqlde1930.d", "-I/tmp"]

    '
  stdout: ''
  timestamp: 1660164539
- exit_code: 1
  program: "import std.typecons;\nimport std.math;\n/*\n Given a string, find out\
    \ how many distinct characters (regardless of case) does it consist of\n    >>>\
    \ count_distinct_characters(\"xyzXYZ\")\n    3L\n    >>> count_distinct_characters(\"\
    Jerry\")\n    4L\n    \n*/\nlong count_distinct_characters(string string) \n{\n\
    \    return set(string.toLowerCase).length;\n}\n/*\n Given a string, find out\
    \ how many distinct characters (regardless of case) does it consist of\n    >>>\
    \ count_distinct_characters(\"xyzXYZ\")\n    3L\n    >>> count_distinct_characters(\"\
    Jerry\")\n    4L\n    \n*/\nlong count_distinct_characters(string string) \n{\n\
    \    return set(string.toLowerCase).length;\n}\n/*\n Given a string, find out\
    \ how many distinct characters (regardless of case) does it consist of\n    >>>\
    \ count_distinct_characters(\"xyzXYZ\")\n    3L\n    >>> count_distinct_characters(\"\
    Jerry\")\n    4L\n    \n*/\nlong count_distinct_characters(string string) \n{\n\
    \    return set(string.toLowerCase).length;\n}\n/*\n Given a string, find out\
    \ how many distinct characters (regardless of case) does it consist of\n    >>>\
    \ count_distinct_characters(\"xyzXYZ\")\n    3L\n    >>> count_distinct_characters(\"\
    Jerry\")\n    4L\n    \n*/\nlong count_distinct_characters(string string) \n{\n\
    \    return set(string.toLowerCase).length;\n}\n/*\n Given a string, find out\
    \ how many distinct characters (regardless of case) does it consist of\n    >>>\
    \ count_distinct_characters(\"xyzXYZ\")\n    3L\n    >>> count_distinct_characters(\"\
    Jerry\")\n    4L\n    \n*/\nlong count_distinct_characters(string string) \n{\n\
    \    return set(string.toLowerCase).length;\n}\n/*\n Given a string, find out\
    \ how many distinct characters (regardless of case) does it consist of\n    >>>\
    \ count_distinct_characters(\"xyzXYZ\")\n    3L\n    >>> count_distinct_characters(\"\
    Jerry\")\n    4L\n    \n*/\nlong count_distinct_characters(string string) \n{\n\
    \    return set(string.toLowerCase).length;\n}\n/*\n Given a string, find out\
    \ how many distinct characters (regardless of case) does\nunittest\n{\n    alias\
    \ candidate = count_distinct_characters;\n\n    assert(candidate(\"\") == 0L);\n\
    \    assert(candidate(\"abcde\") == 5L);\n    assert(candidate(\"abcdecadeCADE\"\
    ) == 5L);\n    assert(candidate(\"aaaaAAAAaaaa\") == 1L);\n    assert(candidate(\"\
    Jerry jERRY JeRRRY\") == 5L);\n}\nvoid main(){}"
  status: SyntaxError
  stderr: '/tmp/tmpwuil25vk.d(75): Error: unterminated /* */ comment

    Failed: ["dmd", "-unittest", "-v", "-o-", "/tmp/tmpwuil25vk.d", "-I/tmp"]

    '
  stdout: ''
  timestamp: 1660164539
- exit_code: 1
  program: "import std.typecons;\nimport std.math;\n/*\n Given a string, find out\
    \ how many distinct characters (regardless of case) does it consist of\n    >>>\
    \ count_distinct_characters(\"xyzXYZ\")\n    3L\n    >>> count_distinct_characters(\"\
    Jerry\")\n    4L\n    \n*/\nlong count_distinct_characters(string string) \n{\n\
    \    return string.toLower().chars.uniq.length;\n}\n/*\n Given a string, find\
    \ out how many distinct characters (regardless of case) does it consist of\n \
    \   >>> count_distinct_characters(\"xyzXYZ\")\n    3L\n    >>> count_distinct_characters(\"\
    Jerry\")\n    4L\n    \n*/\nlong count_distinct_characters(string string) \n{\n\
    \    return string.toLower().chars.uniq.length;\n}\n/*\n Given a string, find\
    \ out how many distinct characters (regardless of case) does it consist of\n \
    \   >>> count_distinct_characters(\"xyzXYZ\")\n    3L\n    >>> count_distinct_characters(\"\
    Jerry\")\n    4L\n    \n*/\nlong count_distinct_characters(string string) \n{\n\
    \    return string.toLower().chars.uniq.length;\n}\n/*\n Given a string, find\
    \ out how many distinct characters (regardless of case) does it consist of\n \
    \   >>> count_distinct_characters(\"xyzXYZ\")\n    3L\n    >>> count_distinct_characters(\"\
    Jerry\")\n    4L\n    \n*/\nlong count_distinct_characters(string string) \n{\n\
    \    return string.toLower().chars.uniq.length;\n}\n/*\n Given a string, find\
    \ out how many distinct characters (regardless of case) does it consist of\n \
    \   >>> count_distinct_characters(\"xyzXYZ\")\n    3L\n    >>> count_distinct_characters(\"\
    Jerry\")\n    4L\n    \n*/\nlong count_distinct_characters(string string) \n{\n\
    \    return string.toLower().chars.uniq.length;\n}\n/*\n Given a string, find\
    \ out how many distinct characters (regardless of case) does it consist of\n \
    \   >>> count_distinct_characters(\"xyzXYZ\")\n    3L\n    >>> count_distinct_characters(\"\
    Jerry\")\n    4L\n    \n*/\nlong count_distinct_characters(string string) \n{\n\
    \    return string.toLower().chars.uniq.length;\n}\n/*\nunittest\n{\n    alias\
    \ candidate = count_distinct_characters;\n\n    assert(candidate(\"\") == 0L);\n\
    \    assert(candidate(\"abcde\") == 5L);\n    assert(candidate(\"abcdecadeCADE\"\
    ) == 5L);\n    assert(candidate(\"aaaaAAAAaaaa\") == 1L);\n    assert(candidate(\"\
    Jerry jERRY JeRRRY\") == 5L);\n}\nvoid main(){}"
  status: SyntaxError
  stderr: '/tmp/tmp3wv09ru4.d(75): Error: unterminated /* */ comment

    Failed: ["dmd", "-unittest", "-v", "-o-", "/tmp/tmp3wv09ru4.d", "-I/tmp"]

    '
  stdout: ''
  timestamp: 1660164539
- exit_code: 1
  program: "import std.typecons;\nimport std.math;\n/*\n Given a string, find out\
    \ how many distinct characters (regardless of case) does it consist of\n    >>>\
    \ count_distinct_characters(\"xyzXYZ\")\n    3L\n    >>> count_distinct_characters(\"\
    Jerry\")\n    4L\n    \n*/\nlong count_distinct_characters(string string) \n{\n\
    \    auto distinct_characters = new HashSet!char;\n    foreach(character; string)\n\
    \    {\n        distinct_characters.insert(character);\n    }\n    return distinct_characters.length;\n\
    }\nunittest\n{\n    alias candidate = count_distinct_characters;\n\n    assert(candidate(\"\
    \") == 0L);\n    assert(candidate(\"abcde\") == 5L);\n    assert(candidate(\"\
    abcdecadeCADE\") == 5L);\n    assert(candidate(\"aaaaAAAAaaaa\") == 1L);\n   \
    \ assert(candidate(\"Jerry jERRY JeRRRY\") == 5L);\n}\nvoid main(){}"
  status: SyntaxError
  stderr: '/tmp/tmppcvkgt93.d(13): Error: template instance `HashSet!char` template
    `HashSet` is not defined

    Failed: ["dmd", "-unittest", "-v", "-o-", "/tmp/tmppcvkgt93.d", "-I/tmp"]

    '
  stdout: ''
  timestamp: 1660164539
- exit_code: 1
  program: "import std.typecons;\nimport std.math;\n/*\n Given a string, find out\
    \ how many distinct characters (regardless of case) does it consist of\n    >>>\
    \ count_distinct_characters(\"xyzXYZ\")\n    3L\n    >>> count_distinct_characters(\"\
    Jerry\")\n    4L\n    \n*/\nlong count_distinct_characters(string string) \n{\n\
    \    return set(string.toLower).length;\n}\nunittest\n{\n    alias candidate =\
    \ count_distinct_characters;\n\n    assert(candidate(\"\") == 0L);\n    assert(candidate(\"\
    abcde\") == 5L);\n    assert(candidate(\"abcdecadeCADE\") == 5L);\n    assert(candidate(\"\
    aaaaAAAAaaaa\") == 1L);\n    assert(candidate(\"Jerry jERRY JeRRRY\") == 5L);\n\
    }\nvoid main(){}"
  status: SyntaxError
  stderr: '/tmp/tmpqlde1930.d(13): Error: undefined identifier `set`, did you mean
    template `get(K, V)(inout(V[K]) aa, K key, lazy inout(V) defaultValue)`?

    Failed: ["dmd", "-unittest", "-v", "-o-", "/tmp/tmpqlde1930.d", "-I/tmp"]

    '
  stdout: ''
  timestamp: 1660164539
- exit_code: 1
  program: "import std.typecons;\nimport std.math;\n/*\n Given a string, find out\
    \ how many distinct characters (regardless of case) does it consist of\n    >>>\
    \ count_distinct_characters(\"xyzXYZ\")\n    3L\n    >>> count_distinct_characters(\"\
    Jerry\")\n    4L\n    \n*/\nlong count_distinct_characters(string string) \n{\n\
    \    return to!string(string.toLower()).distinct.length;\n}\nunittest\n{\n   \
    \ alias candidate = count_distinct_characters;\n\n    assert(candidate(\"\") ==\
    \ 0L);\n    assert(candidate(\"abcde\") == 5L);\n    assert(candidate(\"abcdecadeCADE\"\
    ) == 5L);\n    assert(candidate(\"aaaaAAAAaaaa\") == 1L);\n    assert(candidate(\"\
    Jerry jERRY JeRRRY\") == 5L);\n}\nvoid main(){}"
  status: SyntaxError
  stderr: '/tmp/tmppwvco4cu.d(13): Error: template instance `to!string` template `to`
    is not defined, did you mean No?

    Failed: ["dmd", "-unittest", "-v", "-o-", "/tmp/tmppwvco4cu.d", "-I/tmp"]

    '
  stdout: ''
  timestamp: 1660164539
- exit_code: 1
  program: "import std.typecons;\nimport std.math;\n/*\n Given a string, find out\
    \ how many distinct characters (regardless of case) does it consist of\n    >>>\
    \ count_distinct_characters(\"xyzXYZ\")\n    3L\n    >>> count_distinct_characters(\"\
    Jerry\")\n    4L\n    \n*/\nlong count_distinct_characters(string string) \n{\n\
    \    return to!string(string.toLower).length;\n}\nunittest\n{\n    alias candidate\
    \ = count_distinct_characters;\n\n    assert(candidate(\"\") == 0L);\n    assert(candidate(\"\
    abcde\") == 5L);\n    assert(candidate(\"abcdecadeCADE\") == 5L);\n    assert(candidate(\"\
    aaaaAAAAaaaa\") == 1L);\n    assert(candidate(\"Jerry jERRY JeRRRY\") == 5L);\n\
    }\nvoid main(){}"
  status: SyntaxError
  stderr: '/tmp/tmp0ehjdvsh.d(13): Error: template instance `to!string` template `to`
    is not defined, did you mean No?

    Failed: ["dmd", "-unittest", "-v", "-o-", "/tmp/tmp0ehjdvsh.d", "-I/tmp"]

    '
  stdout: ''
  timestamp: 1660164539
- exit_code: 1
  program: "import std.typecons;\nimport std.math;\n/*\n Given a string, find out\
    \ how many distinct characters (regardless of case) does it consist of\n    >>>\
    \ count_distinct_characters(\"xyzXYZ\")\n    3L\n    >>> count_distinct_characters(\"\
    Jerry\")\n    4L\n    \n*/\nlong count_distinct_characters(string string) \n{\n\
    \    return string.toLower().toHashSet().length;\n}\nunittest\n{\n    alias candidate\
    \ = count_distinct_characters;\n\n    assert(candidate(\"\") == 0L);\n    assert(candidate(\"\
    abcde\") == 5L);\n    assert(candidate(\"abcdecadeCADE\") == 5L);\n    assert(candidate(\"\
    aaaaAAAAaaaa\") == 1L);\n    assert(candidate(\"Jerry jERRY JeRRRY\") == 5L);\n\
    }\nvoid main(){}"
  status: SyntaxError
  stderr: '/tmp/tmpnmx9hjr5.d(13): Error: no property `toLower` for type `string`

    Failed: ["dmd", "-unittest", "-v", "-o-", "/tmp/tmpnmx9hjr5.d", "-I/tmp"]

    '
  stdout: ''
  timestamp: 1660164539
- exit_code: 1
  program: "import std.typecons;\nimport std.math;\n/*\n Given a string, find out\
    \ how many distinct characters (regardless of case) does it consist of\n    >>>\
    \ count_distinct_characters(\"xyzXYZ\")\n    3L\n    >>> count_distinct_characters(\"\
    Jerry\")\n    4L\n    \n*/\nlong count_distinct_characters(string string) \n{\n\
    \    return string.toLower().toHashSet().length;\n}\nunittest\n{\n    alias candidate\
    \ = count_distinct_characters;\n\n    assert(candidate(\"\") == 0L);\n    assert(candidate(\"\
    abcde\") == 5L);\n    assert(candidate(\"abcdecadeCADE\") == 5L);\n    assert(candidate(\"\
    aaaaAAAAaaaa\") == 1L);\n    assert(candidate(\"Jerry jERRY JeRRRY\") == 5L);\n\
    }\nvoid main(){}"
  status: SyntaxError
  stderr: '/tmp/tmpnmx9hjr5.d(13): Error: no property `toLower` for type `string`

    Failed: ["dmd", "-unittest", "-v", "-o-", "/tmp/tmpnmx9hjr5.d", "-I/tmp"]

    '
  stdout: ''
  timestamp: 1660164539
- exit_code: 1
  program: "import std.typecons;\nimport std.math;\n/*\n Given a string, find out\
    \ how many distinct characters (regardless of case) does it consist of\n    >>>\
    \ count_distinct_characters(\"xyzXYZ\")\n    3L\n    >>> count_distinct_characters(\"\
    Jerry\")\n    4L\n    \n*/\nlong count_distinct_characters(string string) \n{\n\
    \    return uniq(string.toLower).length;\n}\nunittest\n{\n    alias candidate\
    \ = count_distinct_characters;\n\n    assert(candidate(\"\") == 0L);\n    assert(candidate(\"\
    abcde\") == 5L);\n    assert(candidate(\"abcdecadeCADE\") == 5L);\n    assert(candidate(\"\
    aaaaAAAAaaaa\") == 1L);\n    assert(candidate(\"Jerry jERRY JeRRRY\") == 5L);\n\
    }\nvoid main(){}"
  status: SyntaxError
  stderr: '/tmp/tmpk9a53g6o.d(13): Error: undefined identifier `uniq`

    Failed: ["dmd", "-unittest", "-v", "-o-", "/tmp/tmpk9a53g6o.d", "-I/tmp"]

    '
  stdout: ''
  timestamp: 1660164539
- exit_code: 1
  program: "import std.typecons;\nimport std.math;\n/*\n Given a string, find out\
    \ how many distinct characters (regardless of case) does it consist of\n    >>>\
    \ count_distinct_characters(\"xyzXYZ\")\n    3L\n    >>> count_distinct_characters(\"\
    Jerry\")\n    4L\n    \n*/\nlong count_distinct_characters(string string) \n{\n\
    \    return string.toLower().toHashSet().length;\n}\n/*\n Given a string, find\
    \ out how many distinct characters (regardless of case) does it consist of\n \
    \   >>> count_distinct_characters(\"xyzXYZ\")\n    3L\n    >>> count_distinct_characters(\"\
    Jerry\")\n    4L\n    \n*/\nlong count_distinct_characters(string string) \n{\n\
    \    return string.toLower().toHashSet().length;\n}\n/*\n Given a string, find\
    \ out how many distinct characters (regardless of case) does it consist of\n \
    \   >>> count_distinct_characters(\"xyzXYZ\")\n    3L\n    >>> count_distinct_characters(\"\
    Jerry\")\n    4L\n    \n*/\nlong count_distinct_characters(string string) \n{\n\
    \    return string.toLower().toHashSet().length;\n}\n/*\n Given a string, find\
    \ out how many distinct characters (regardless of case) does it consist of\n \
    \   >>> count_distinct_characters(\"xyzXYZ\")\n    3L\n    >>> count_distinct_characters(\"\
    Jerry\")\n    4L\n    \n*/\nlong count_distinct_characters(string string) \n{\n\
    \    return string.toLower().toHashSet().length;\n}\n/*\n Given a string, find\
    \ out how many distinct characters (regardless of case) does it consist of\n \
    \   >>> count_distinct_characters(\"xyzXYZ\")\n    3L\n    >>> count_distinct_characters(\"\
    Jerry\")\n    4L\n    \n*/\nlong count_distinct_characters(string string) \n{\n\
    \    return string.toLower().toHashSet().length;\n}\n/*\n Given a string, find\
    \ out how many distinct characters (regardless of case) does it consist of\n \
    \   >>> count_distinct_characters(\"xyzXYZ\")\n    3L\n    >>> count_distinct_characters(\"\
    Jerry\")\n    4L\n    \n*/\nlong count_distinct_characters(string string) \n{\n\
    \    return string.toLower().toHashSet().length;\n}\n/*\n Given a string, find\
    \ out how many distinct characters (\nunittest\n{\n    alias candidate = count_distinct_characters;\n\
    \n    assert(candidate(\"\") == 0L);\n    assert(candidate(\"abcde\") == 5L);\n\
    \    assert(candidate(\"abcdecadeCADE\") == 5L);\n    assert(candidate(\"aaaaAAAAaaaa\"\
    ) == 1L);\n    assert(candidate(\"Jerry jERRY JeRRRY\") == 5L);\n}\nvoid main(){}"
  status: SyntaxError
  stderr: '/tmp/tmp2yo23yur.d(75): Error: unterminated /* */ comment

    Failed: ["dmd", "-unittest", "-v", "-o-", "/tmp/tmp2yo23yur.d", "-I/tmp"]

    '
  stdout: ''
  timestamp: 1660164539
- exit_code: 1
  program: "import std.typecons;\nimport std.math;\n/*\n Given a string, find out\
    \ how many distinct characters (regardless of case) does it consist of\n    >>>\
    \ count_distinct_characters(\"xyzXYZ\")\n    3L\n    >>> count_distinct_characters(\"\
    Jerry\")\n    4L\n    \n*/\nlong count_distinct_characters(string string) \n{\n\
    \    return string.toLower().toHashSet().length;\n}\nunittest\n{\n    alias candidate\
    \ = count_distinct_characters;\n\n    assert(candidate(\"\") == 0L);\n    assert(candidate(\"\
    abcde\") == 5L);\n    assert(candidate(\"abcdecadeCADE\") == 5L);\n    assert(candidate(\"\
    aaaaAAAAaaaa\") == 1L);\n    assert(candidate(\"Jerry jERRY JeRRRY\") == 5L);\n\
    }\nvoid main(){}"
  status: SyntaxError
  stderr: '/tmp/tmpnmx9hjr5.d(13): Error: no property `toLower` for type `string`

    Failed: ["dmd", "-unittest", "-v", "-o-", "/tmp/tmpnmx9hjr5.d", "-I/tmp"]

    '
  stdout: ''
  timestamp: 1660164539
- exit_code: 1
  program: "import std.typecons;\nimport std.math;\n/*\n Given a string, find out\
    \ how many distinct characters (regardless of case) does it consist of\n    >>>\
    \ count_distinct_characters(\"xyzXYZ\")\n    3L\n    >>> count_distinct_characters(\"\
    Jerry\")\n    4L\n    \n*/\nlong count_distinct_characters(string string) \n{\n\
    \    long count = 0;\n    foreach(char c; string)\n    {\n        if(!count)\n\
    \        {\n            count++;\n        }\n        else\n        {\n       \
    \     bool flag = true;\n            foreach(char d; string[0..count])\n     \
    \       {\n                if(c == d)\n                {\n                   \
    \ flag = false;\n                    break;\n                }\n            }\n\
    \            if(flag)\n            {\n                count++;\n            }\n\
    \        }\n    }\n    return count;\n}\nunittest\n{\n    alias candidate = count_distinct_characters;\n\
    \n    assert(candidate(\"\") == 0L);\n    assert(candidate(\"abcde\") == 5L);\n\
    \    assert(candidate(\"abcdecadeCADE\") == 5L);\n    assert(candidate(\"aaaaAAAAaaaa\"\
    ) == 1L);\n    assert(candidate(\"Jerry jERRY JeRRRY\") == 5L);\n}\nvoid main(){}"
  status: Exception
  stderr: 'core.exception.AssertError@/tmp/tmp02on_fjd.d(45): unittest failure

    ----------------

    ??:? _d_unittestp [0x427e65]

    ??:? void tmp02on_fjd.__unittest_L39_C1() [0x427b7c]

    ??:? void tmp02on_fjd.__modtest() [0x427be8]

    ??:? int core.runtime.runModuleUnitTests().__foreachbody2(object.ModuleInfo*)
    [0x42bbff]

    ??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)).__lambda2(immutable(object.ModuleInfo*))
    [0x42aa92]

    ??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))).__foreachbody2(ref
    rt.sections_elf_shared.DSO) [0x42fc25]

    ??:? int rt.sections_elf_shared.DSO.opApply(scope int delegate(ref rt.sections_elf_shared.DSO))
    [0x4300d4]

    ??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*)))
    [0x42fbb1]

    ??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)) [0x42aa69]

    ??:? runModuleUnitTests [0x42b9d5]

    ??:? void rt.dmain2._d_run_main(int, char**, extern (C) int function(char[][])*).runAll()
    [0x428328]

    ??:? void rt.dmain2._d_r'
  stdout: ''
  timestamp: 1660164540
- exit_code: 1
  program: "import std.typecons;\nimport std.math;\n/*\n Given a string, find out\
    \ how many distinct characters (regardless of case) does it consist of\n    >>>\
    \ count_distinct_characters(\"xyzXYZ\")\n    3L\n    >>> count_distinct_characters(\"\
    Jerry\")\n    4L\n    \n*/\nlong count_distinct_characters(string string) \n{\n\
    \    return string.toLower().toHashSet().length;\n}\nunittest\n{\n    alias candidate\
    \ = count_distinct_characters;\n\n    assert(candidate(\"\") == 0L);\n    assert(candidate(\"\
    abcde\") == 5L);\n    assert(candidate(\"abcdecadeCADE\") == 5L);\n    assert(candidate(\"\
    aaaaAAAAaaaa\") == 1L);\n    assert(candidate(\"Jerry jERRY JeRRRY\") == 5L);\n\
    }\nvoid main(){}"
  status: SyntaxError
  stderr: '/tmp/tmpnmx9hjr5.d(13): Error: no property `toLower` for type `string`

    Failed: ["dmd", "-unittest", "-v", "-o-", "/tmp/tmpnmx9hjr5.d", "-I/tmp"]

    '
  stdout: ''
  timestamp: 1660164539
- exit_code: 1
  program: "import std.typecons;\nimport std.math;\n/*\n Given a string, find out\
    \ how many distinct characters (regardless of case) does it consist of\n    >>>\
    \ count_distinct_characters(\"xyzXYZ\")\n    3L\n    >>> count_distinct_characters(\"\
    Jerry\")\n    4L\n    \n*/\nlong count_distinct_characters(string string) \n{\n\
    \    long count = 0;\n    foreach(char c; string)\n    {\n        if(c.isAlpha)\n\
    \        {\n            count++;\n        }\n    }\n    return count;\n}\nunittest\n\
    {\n    alias candidate = count_distinct_characters;\n\n    assert(candidate(\"\
    \") == 0L);\n    assert(candidate(\"abcde\") == 5L);\n    assert(candidate(\"\
    abcdecadeCADE\") == 5L);\n    assert(candidate(\"aaaaAAAAaaaa\") == 1L);\n   \
    \ assert(candidate(\"Jerry jERRY JeRRRY\") == 5L);\n}\nvoid main(){}"
  status: SyntaxError
  stderr: '/tmp/tmpmrkg4h87.d(16): Error: no property `isAlpha` for type `char`

    Failed: ["dmd", "-unittest", "-v", "-o-", "/tmp/tmpmrkg4h87.d", "-I/tmp"]

    '
  stdout: ''
  timestamp: 1660164539
- exit_code: 1
  program: "import std.typecons;\nimport std.math;\n/*\n Given a string, find out\
    \ how many distinct characters (regardless of case) does it consist of\n    >>>\
    \ count_distinct_characters(\"xyzXYZ\")\n    3L\n    >>> count_distinct_characters(\"\
    Jerry\")\n    4L\n    \n*/\nlong count_distinct_characters(string string) \n{\n\
    \    long count = 0;\n    foreach(char c; string)\n    {\n        if(c.tolower()\
    \ !in string.tolower())\n        {\n            count++;\n        }\n    }\n \
    \   return count;\n}\nunittest\n{\n    alias candidate = count_distinct_characters;\n\
    \n    assert(candidate(\"\") == 0L);\n    assert(candidate(\"abcde\") == 5L);\n\
    \    assert(candidate(\"abcdecadeCADE\") == 5L);\n    assert(candidate(\"aaaaAAAAaaaa\"\
    ) == 1L);\n    assert(candidate(\"Jerry jERRY JeRRRY\") == 5L);\n}\nvoid main(){}"
  status: SyntaxError
  stderr: '/tmp/tmps27zvag4.d(16): Error: no property `tolower` for type `char`

    /tmp/tmps27zvag4.d(16): Error: no property `tolower` for type `string`

    Failed: ["dmd", "-unittest", "-v", "-o-", "/tmp/tmps27zvag4.d", "-I/tmp"]

    '
  stdout: ''
  timestamp: 1660164539
- exit_code: 1
  program: "import std.typecons;\nimport std.math;\n/*\n Given a string, find out\
    \ how many distinct characters (regardless of case) does it consist of\n    >>>\
    \ count_distinct_characters(\"xyzXYZ\")\n    3L\n    >>> count_distinct_characters(\"\
    Jerry\")\n    4L\n    \n*/\nlong count_distinct_characters(string string) \n{\n\
    \    auto char_set = set!char();\n    foreach(char c; string)\n    {\n       \
    \ char_set.insert(c);\n    }\n    return char_set.length;\n}\nunittest\n{\n  \
    \  alias candidate = count_distinct_characters;\n\n    assert(candidate(\"\")\
    \ == 0L);\n    assert(candidate(\"abcde\") == 5L);\n    assert(candidate(\"abcdecadeCADE\"\
    ) == 5L);\n    assert(candidate(\"aaaaAAAAaaaa\") == 1L);\n    assert(candidate(\"\
    Jerry jERRY JeRRRY\") == 5L);\n}\nvoid main(){}"
  status: SyntaxError
  stderr: '/tmp/tmprbgh1a0b.d(13): Error: template instance `set!char` template `set`
    is not defined, did you mean get(K, V)(inout(V[K]) aa, K key, lazy inout(V) defaultValue)?

    Failed: ["dmd", "-unittest", "-v", "-o-", "/tmp/tmprbgh1a0b.d", "-I/tmp"]

    '
  stdout: ''
  timestamp: 1660164539
- exit_code: 1
  program: "import std.typecons;\nimport std.math;\n/*\n Given a string, find out\
    \ how many distinct characters (regardless of case) does it consist of\n    >>>\
    \ count_distinct_characters(\"xyzXYZ\")\n    3L\n    >>> count_distinct_characters(\"\
    Jerry\")\n    4L\n    \n*/\nlong count_distinct_characters(string string) \n{\n\
    \    long count = 0;\n    foreach(char c; string)\n    {\n        if(!(c in count))\n\
    \        {\n            count[c] = 1;\n        }\n    }\n    return count.length;\n\
    }\nunittest\n{\n    alias candidate = count_distinct_characters;\n\n    assert(candidate(\"\
    \") == 0L);\n    assert(candidate(\"abcde\") == 5L);\n    assert(candidate(\"\
    abcdecadeCADE\") == 5L);\n    assert(candidate(\"aaaaAAAAaaaa\") == 1L);\n   \
    \ assert(candidate(\"Jerry jERRY JeRRRY\") == 5L);\n}\nvoid main(){}"
  status: SyntaxError
  stderr: '/tmp/tmpzg3jhjll.d(16): Error: incompatible types for `(c) in (count)`:
    `char` and `long`

    /tmp/tmpzg3jhjll.d(18): Error: only one index allowed to index `long`

    /tmp/tmpzg3jhjll.d(21): Error: no property `length` for type `long`

    Failed: ["dmd", "-unittest", "-v", "-o-", "/tmp/tmpzg3jhjll.d", "-I/tmp"]

    '
  stdout: ''
  timestamp: 1660164539
- exit_code: 1
  program: "import std.typecons;\nimport std.math;\n/*\n Given a string, find out\
    \ how many distinct characters (regardless of case) does it consist of\n    >>>\
    \ count_distinct_characters(\"xyzXYZ\")\n    3L\n    >>> count_distinct_characters(\"\
    Jerry\")\n    4L\n    \n*/\nlong count_distinct_characters(string string) \n{\n\
    \    auto result = new HashSet!char;\n    foreach(char c; string)\n    {\n   \
    \     result.insert(c);\n    }\n    return result.length;\n}\nunittest\n{\n  \
    \  alias candidate = count_distinct_characters;\n\n    assert(candidate(\"\")\
    \ == 0L);\n    assert(candidate(\"abcde\") == 5L);\n    assert(candidate(\"abcdecadeCADE\"\
    ) == 5L);\n    assert(candidate(\"aaaaAAAAaaaa\") == 1L);\n    assert(candidate(\"\
    Jerry jERRY JeRRRY\") == 5L);\n}\nvoid main(){}"
  status: SyntaxError
  stderr: '/tmp/tmpv2te32us.d(13): Error: template instance `HashSet!char` template
    `HashSet` is not defined

    Failed: ["dmd", "-unittest", "-v", "-o-", "/tmp/tmpv2te32us.d", "-I/tmp"]

    '
  stdout: ''
  timestamp: 1660164539
- exit_code: 1
  program: "import std.typecons;\nimport std.math;\n/*\n Given a string, find out\
    \ how many distinct characters (regardless of case) does it consist of\n    >>>\
    \ count_distinct_characters(\"xyzXYZ\")\n    3L\n    >>> count_distinct_characters(\"\
    Jerry\")\n    4L\n    \n*/\nlong count_distinct_characters(string string) \n{\n\
    \    long result = 0;\n    foreach(char c; string)\n    {\n        if(c.tolower()\
    \ !in result)\n        {\n            result ~= c.tolower();\n        }\n    }\n\
    \    return result.length;\n}\nunittest\n{\n    alias candidate = count_distinct_characters;\n\
    \n    assert(candidate(\"\") == 0L);\n    assert(candidate(\"abcde\") == 5L);\n\
    \    assert(candidate(\"abcdecadeCADE\") == 5L);\n    assert(candidate(\"aaaaAAAAaaaa\"\
    ) == 1L);\n    assert(candidate(\"Jerry jERRY JeRRRY\") == 5L);\n}\nvoid main(){}"
  status: SyntaxError
  stderr: '/tmp/tmpd8cmamtt.d(16): Error: no property `tolower` for type `char`

    /tmp/tmpd8cmamtt.d(18): Error: no property `tolower` for type `char`

    /tmp/tmpd8cmamtt.d(21): Error: no property `length` for type `long`

    Failed: ["dmd", "-unittest", "-v", "-o-", "/tmp/tmpd8cmamtt.d", "-I/tmp"]

    '
  stdout: ''
  timestamp: 1660164539
- exit_code: 1
  program: "import std.typecons;\nimport std.math;\n/*\n Given a string, find out\
    \ how many distinct characters (regardless of case) does it consist of\n    >>>\
    \ count_distinct_characters(\"xyzXYZ\")\n    3L\n    >>> count_distinct_characters(\"\
    Jerry\")\n    4L\n    \n*/\nlong count_distinct_characters(string string) \n{\n\
    \    return string.toLower().length;\n}\n/*\n Given a string, find out how many\
    \ distinct characters (regardless of case) does it consist of\n    >>> count_distinct_characters(\"\
    xyzXYZ\")\n    3L\n    >>> count_distinct_characters(\"Jerry\")\n    4L\n    \n\
    */\nlong count_distinct_characters(string string) \n{\n    return string.toLower().length;\n\
    }\n/*\n Given a string, find out how many distinct characters (regardless of case)\
    \ does it consist of\n    >>> count_distinct_characters(\"xyzXYZ\")\n    3L\n\
    \    >>> count_distinct_characters(\"Jerry\")\n    4L\n    \n*/\nlong count_distinct_characters(string\
    \ string) \n{\n    return string.toLower().length;\n}\n/*\n Given a string, find\
    \ out how many distinct characters (regardless of case) does it consist of\n \
    \   >>> count_distinct_characters(\"xyzXYZ\")\n    3L\n    >>> count_distinct_characters(\"\
    Jerry\")\n    4L\n    \n*/\nlong count_distinct_characters(string string) \n{\n\
    \    return string.toLower().length;\n}\n/*\n Given a string, find out how many\
    \ distinct characters (regardless of case) does it consist of\n    >>> count_distinct_characters(\"\
    xyzXYZ\")\n    3L\n    >>> count_distinct_characters(\"Jerry\")\n    4L\n    \n\
    */\nlong count_distinct_characters(string string) \n{\n    return string.toLower().length;\n\
    }\n/*\n Given a string, find out how many distinct characters (regardless of case)\
    \ does it consist of\n    >>> count_distinct_characters(\"xyzXYZ\")\n    3L\n\
    \    >>> count_distinct_characters(\"Jerry\")\n    4L\n    \n*/\nlong count_distinct_characters(string\
    \ string) \n{\n    return string.toLower().length;\n}\n/*\n Given a string, find\
    \ out how many distinct characters (regardless of case) does it consist of\n \
    \   >>> count_distinct_characters(\"xyzXYZ\nunittest\n{\n    alias candidate =\
    \ count_distinct_characters;\n\n    assert(candidate(\"\") == 0L);\n    assert(candidate(\"\
    abcde\") == 5L);\n    assert(candidate(\"abcdecadeCADE\") == 5L);\n    assert(candidate(\"\
    aaaaAAAAaaaa\") == 1L);\n    assert(candidate(\"Jerry jERRY JeRRRY\") == 5L);\n\
    }\nvoid main(){}"
  status: SyntaxError
  stderr: '/tmp/tmpoywq70l1.d(75): Error: unterminated /* */ comment

    Failed: ["dmd", "-unittest", "-v", "-o-", "/tmp/tmpoywq70l1.d", "-I/tmp"]

    '
  stdout: ''
  timestamp: 1660164539
- exit_code: 1
  program: "import std.typecons;\nimport std.math;\n/*\n Given a string, find out\
    \ how many distinct characters (regardless of case) does it consist of\n    >>>\
    \ count_distinct_characters(\"xyzXYZ\")\n    3L\n    >>> count_distinct_characters(\"\
    Jerry\")\n    4L\n    \n*/\nlong count_distinct_characters(string string) \n{\n\
    \    long count = 0;\n    foreach(char c; string)\n    {\n        if(c.tolower()\
    \ in count)\n            continue;\n        count++;\n    }\n    return count;\n\
    }\n/*\n Given a string, find out how many distinct characters (regardless of case)\
    \ does it consist of\n    >>> count_distinct_characters(\"xyzXYZ\")\n    3L\n\
    \    >>> count_distinct_characters(\"Jerry\")\n    4L\n    \n*/\nlong count_distinct_characters(string\
    \ string) \n{\n    long count = 0;\n    foreach(char c; string)\n    {\n     \
    \   if(c.tolower() in count)\n            continue;\n        count++;\n    }\n\
    \    return count;\n}\n/*\n Given a string, find out how many distinct characters\
    \ (regardless of case) does it consist of\n    >>> count_distinct_characters(\"\
    xyzXYZ\")\n    3L\n    >>> count_distinct_characters(\"Jerry\")\n    4L\n    \n\
    */\nlong count_distinct_characters(string string) \n{\n    long count = 0;\n \
    \   foreach(char c; string)\n    {\n        if(c.tolower() in count)\n       \
    \     continue;\n        count++;\n    }\n    return count;\n}\n/*\n Given a string,\
    \ find out how many distinct characters (regardless of case) does it consist of\n\
    \    >>> count_distinct_characters(\"xyzXYZ\")\n    3L\n    >>> count_distinct_characters(\"\
    Jerry\")\n    4L\n    \n*/\nlong count_distinct_characters(string string) \n{\n\
    \    long count = 0;\n    foreach(char c; string)\n    {\n        if(c.tolower()\
    \ in count)\n            continue;\n        count++;\n    }\n    return count;\n\
    }\n/*\n Given a string, find out how many distinct characters (regardless of case)\
    \ does it consist of\n    >>> count_distinct_characters(\"xyzXYZ\")\n    3L\n\
    \    >>> count_distinct_characters(\"Jerry\")\n    4L\n    \n*/\nlong\nunittest\n\
    {\n    alias candidate = count_distinct_characters;\n\n    assert(candidate(\"\
    \") == 0L);\n    assert(candidate(\"abcde\") == 5L);\n    assert(candidate(\"\
    abcdecadeCADE\") == 5L);\n    assert(candidate(\"aaaaAAAAaaaa\") == 1L);\n   \
    \ assert(candidate(\"Jerry jERRY JeRRRY\") == 5L);\n}\nvoid main(){}"
  status: SyntaxError
  stderr: '/tmp/tmphbpq77qy.d(88): Error: no identifier for declarator `long`

    Failed: ["dmd", "-unittest", "-v", "-o-", "/tmp/tmphbpq77qy.d", "-I/tmp"]

    '
  stdout: ''
  timestamp: 1660164539
- exit_code: 1
  program: "import std.typecons;\nimport std.math;\n/*\n Given a string, find out\
    \ how many distinct characters (regardless of case) does it consist of\n    >>>\
    \ count_distinct_characters(\"xyzXYZ\")\n    3L\n    >>> count_distinct_characters(\"\
    Jerry\")\n    4L\n    \n*/\nlong count_distinct_characters(string string) \n{\n\
    \    return string.toLower().distinct.length;\n}\nunittest\n{\n    alias candidate\
    \ = count_distinct_characters;\n\n    assert(candidate(\"\") == 0L);\n    assert(candidate(\"\
    abcde\") == 5L);\n    assert(candidate(\"abcdecadeCADE\") == 5L);\n    assert(candidate(\"\
    aaaaAAAAaaaa\") == 1L);\n    assert(candidate(\"Jerry jERRY JeRRRY\") == 5L);\n\
    }\nvoid main(){}"
  status: SyntaxError
  stderr: '/tmp/tmpniaaq6vu.d(13): Error: no property `toLower` for type `string`

    Failed: ["dmd", "-unittest", "-v", "-o-", "/tmp/tmpniaaq6vu.d", "-I/tmp"]

    '
  stdout: ''
  timestamp: 1660164539
- exit_code: 1
  program: "import std.typecons;\nimport std.math;\n/*\n Given a string, find out\
    \ how many distinct characters (regardless of case) does it consist of\n    >>>\
    \ count_distinct_characters(\"xyzXYZ\")\n    3L\n    >>> count_distinct_characters(\"\
    Jerry\")\n    4L\n    \n*/\nlong count_distinct_characters(string string) \n{\n\
    \    long count = 0;\n    foreach(char c; string)\n    {\n        if(c.tolower()\
    \ !in count)\n        {\n            count ~= c.tolower();\n        }\n    }\n\
    \    return count.length;\n}\nunittest\n{\n    alias candidate = count_distinct_characters;\n\
    \n    assert(candidate(\"\") == 0L);\n    assert(candidate(\"abcde\") == 5L);\n\
    \    assert(candidate(\"abcdecadeCADE\") == 5L);\n    assert(candidate(\"aaaaAAAAaaaa\"\
    ) == 1L);\n    assert(candidate(\"Jerry jERRY JeRRRY\") == 5L);\n}\nvoid main(){}"
  status: SyntaxError
  stderr: '/tmp/tmpy5ahqs5a.d(16): Error: no property `tolower` for type `char`

    /tmp/tmpy5ahqs5a.d(18): Error: no property `tolower` for type `char`

    /tmp/tmpy5ahqs5a.d(21): Error: no property `length` for type `long`

    Failed: ["dmd", "-unittest", "-v", "-o-", "/tmp/tmpy5ahqs5a.d", "-I/tmp"]

    '
  stdout: ''
  timestamp: 1660164539
- exit_code: 1
  program: "import std.typecons;\nimport std.math;\n/*\n Given a string, find out\
    \ how many distinct characters (regardless of case) does it consist of\n    >>>\
    \ count_distinct_characters(\"xyzXYZ\")\n    3L\n    >>> count_distinct_characters(\"\
    Jerry\")\n    4L\n    \n*/\nlong count_distinct_characters(string string) \n{\n\
    \    long result = 0;\n    foreach(char c; string) \n    {\n        if(c.isLetter)\
    \ \n        {\n            result += 1;\n        }\n    }\n    return result;\n\
    }\nunittest\n{\n    alias candidate = count_distinct_characters;\n\n    assert(candidate(\"\
    \") == 0L);\n    assert(candidate(\"abcde\") == 5L);\n    assert(candidate(\"\
    abcdecadeCADE\") == 5L);\n    assert(candidate(\"aaaaAAAAaaaa\") == 1L);\n   \
    \ assert(candidate(\"Jerry jERRY JeRRRY\") == 5L);\n}\nvoid main(){}"
  status: SyntaxError
  stderr: '/tmp/tmpg9q7v_sr.d(16): Error: no property `isLetter` for type `char`

    Failed: ["dmd", "-unittest", "-v", "-o-", "/tmp/tmpg9q7v_sr.d", "-I/tmp"]

    '
  stdout: ''
  timestamp: 1660164540
- exit_code: 1
  program: "import std.typecons;\nimport std.math;\n/*\n Given a string, find out\
    \ how many distinct characters (regardless of case) does it consist of\n    >>>\
    \ count_distinct_characters(\"xyzXYZ\")\n    3L\n    >>> count_distinct_characters(\"\
    Jerry\")\n    4L\n    \n*/\nlong count_distinct_characters(string string) \n{\n\
    \    return set!(char)(string).length;\n}\nunittest\n{\n    alias candidate =\
    \ count_distinct_characters;\n\n    assert(candidate(\"\") == 0L);\n    assert(candidate(\"\
    abcde\") == 5L);\n    assert(candidate(\"abcdecadeCADE\") == 5L);\n    assert(candidate(\"\
    aaaaAAAAaaaa\") == 1L);\n    assert(candidate(\"Jerry jERRY JeRRRY\") == 5L);\n\
    }\nvoid main(){}"
  status: SyntaxError
  stderr: '/tmp/tmp9xh7ufsa.d(13): Error: template instance `set!char` template `set`
    is not defined, did you mean get(K, V)(inout(V[K]) aa, K key, lazy inout(V) defaultValue)?

    Failed: ["dmd", "-unittest", "-v", "-o-", "/tmp/tmp9xh7ufsa.d", "-I/tmp"]

    '
  stdout: ''
  timestamp: 1660164539
- exit_code: 1
  program: "import std.typecons;\nimport std.math;\n/*\n Given a string, find out\
    \ how many distinct characters (regardless of case) does it consist of\n    >>>\
    \ count_distinct_characters(\"xyzXYZ\")\n    3L\n    >>> count_distinct_characters(\"\
    Jerry\")\n    4L\n    \n*/\nlong count_distinct_characters(string string) \n{\n\
    \    auto char_set = set!char();\n    foreach(char c; string)\n    {\n       \
    \ char_set.insert(c);\n    }\n    return char_set.length;\n}\nunittest\n{\n  \
    \  alias candidate = count_distinct_characters;\n\n    assert(candidate(\"\")\
    \ == 0L);\n    assert(candidate(\"abcde\") == 5L);\n    assert(candidate(\"abcdecadeCADE\"\
    ) == 5L);\n    assert(candidate(\"aaaaAAAAaaaa\") == 1L);\n    assert(candidate(\"\
    Jerry jERRY JeRRRY\") == 5L);\n}\nvoid main(){}"
  status: SyntaxError
  stderr: '/tmp/tmprbgh1a0b.d(13): Error: template instance `set!char` template `set`
    is not defined, did you mean get(K, V)(inout(V[K]) aa, K key, lazy inout(V) defaultValue)?

    Failed: ["dmd", "-unittest", "-v", "-o-", "/tmp/tmprbgh1a0b.d", "-I/tmp"]

    '
  stdout: ''
  timestamp: 1660164539
- exit_code: 1
  program: "import std.typecons;\nimport std.math;\n/*\n Given a string, find out\
    \ how many distinct characters (regardless of case) does it consist of\n    >>>\
    \ count_distinct_characters(\"xyzXYZ\")\n    3L\n    >>> count_distinct_characters(\"\
    Jerry\")\n    4L\n    \n*/\nlong count_distinct_characters(string string) \n{\n\
    \    return string.toLower().toHashSet().length;\n}\nunittest\n{\n    alias candidate\
    \ = count_distinct_characters;\n\n    assert(candidate(\"\") == 0L);\n    assert(candidate(\"\
    abcde\") == 5L);\n    assert(candidate(\"abcdecadeCADE\") == 5L);\n    assert(candidate(\"\
    aaaaAAAAaaaa\") == 1L);\n    assert(candidate(\"Jerry jERRY JeRRRY\") == 5L);\n\
    }\nvoid main(){}"
  status: SyntaxError
  stderr: '/tmp/tmpnmx9hjr5.d(13): Error: no property `toLower` for type `string`

    Failed: ["dmd", "-unittest", "-v", "-o-", "/tmp/tmpnmx9hjr5.d", "-I/tmp"]

    '
  stdout: ''
  timestamp: 1660164539
- exit_code: 1
  program: "import std.typecons;\nimport std.math;\n/*\n Given a string, find out\
    \ how many distinct characters (regardless of case) does it consist of\n    >>>\
    \ count_distinct_characters(\"xyzXYZ\")\n    3L\n    >>> count_distinct_characters(\"\
    Jerry\")\n    4L\n    \n*/\nlong count_distinct_characters(string string) \n{\n\
    \    long count = 0;\n    foreach(char c; string)\n    {\n        if(c.isAlpha)\n\
    \        {\n            count++;\n        }\n    }\n    return count;\n}\nunittest\n\
    {\n    alias candidate = count_distinct_characters;\n\n    assert(candidate(\"\
    \") == 0L);\n    assert(candidate(\"abcde\") == 5L);\n    assert(candidate(\"\
    abcdecadeCADE\") == 5L);\n    assert(candidate(\"aaaaAAAAaaaa\") == 1L);\n   \
    \ assert(candidate(\"Jerry jERRY JeRRRY\") == 5L);\n}\nvoid main(){}"
  status: SyntaxError
  stderr: '/tmp/tmpmrkg4h87.d(16): Error: no property `isAlpha` for type `char`

    Failed: ["dmd", "-unittest", "-v", "-o-", "/tmp/tmpmrkg4h87.d", "-I/tmp"]

    '
  stdout: ''
  timestamp: 1660164539
- exit_code: 1
  program: "import std.typecons;\nimport std.math;\n/*\n Given a string, find out\
    \ how many distinct characters (regardless of case) does it consist of\n    >>>\
    \ count_distinct_characters(\"xyzXYZ\")\n    3L\n    >>> count_distinct_characters(\"\
    Jerry\")\n    4L\n    \n*/\nlong count_distinct_characters(string string) \n{\n\
    \    auto chars = string.toLower().chars;\n    auto set = chars.array.uniq;\n\
    \    return set.length;\n}\nunittest\n{\n    alias candidate = count_distinct_characters;\n\
    \n    assert(candidate(\"\") == 0L);\n    assert(candidate(\"abcde\") == 5L);\n\
    \    assert(candidate(\"abcdecadeCADE\") == 5L);\n    assert(candidate(\"aaaaAAAAaaaa\"\
    ) == 1L);\n    assert(candidate(\"Jerry jERRY JeRRRY\") == 5L);\n}\nvoid main(){}"
  status: SyntaxError
  stderr: '/tmp/tmp1dvq7kks.d(13): Error: no property `toLower` for type `string`

    Failed: ["dmd", "-unittest", "-v", "-o-", "/tmp/tmp1dvq7kks.d", "-I/tmp"]

    '
  stdout: ''
  timestamp: 1660164539
- exit_code: 1
  program: "import std.typecons;\nimport std.math;\n/*\n Given a string, find out\
    \ how many distinct characters (regardless of case) does it consist of\n    >>>\
    \ count_distinct_characters(\"xyzXYZ\")\n    3L\n    >>> count_distinct_characters(\"\
    Jerry\")\n    4L\n    \n*/\nlong count_distinct_characters(string string) \n{\n\
    \    return set(string.toLower()).length;\n}\nunittest\n{\n    alias candidate\
    \ = count_distinct_characters;\n\n    assert(candidate(\"\") == 0L);\n    assert(candidate(\"\
    abcde\") == 5L);\n    assert(candidate(\"abcdecadeCADE\") == 5L);\n    assert(candidate(\"\
    aaaaAAAAaaaa\") == 1L);\n    assert(candidate(\"Jerry jERRY JeRRRY\") == 5L);\n\
    }\nvoid main(){}"
  status: SyntaxError
  stderr: '/tmp/tmp4fc64pj_.d(13): Error: undefined identifier `set`, did you mean
    template `get(K, V)(inout(V[K]) aa, K key, lazy inout(V) defaultValue)`?

    Failed: ["dmd", "-unittest", "-v", "-o-", "/tmp/tmp4fc64pj_.d", "-I/tmp"]

    '
  stdout: ''
  timestamp: 1660164539
- exit_code: 1
  program: "import std.typecons;\nimport std.math;\n/*\n Given a string, find out\
    \ how many distinct characters (regardless of case) does it consist of\n    >>>\
    \ count_distinct_characters(\"xyzXYZ\")\n    3L\n    >>> count_distinct_characters(\"\
    Jerry\")\n    4L\n    \n*/\nlong count_distinct_characters(string string) \n{\n\
    \    return to!(long)(set(string.toLower()).length);\n}\nunittest\n{\n    alias\
    \ candidate = count_distinct_characters;\n\n    assert(candidate(\"\") == 0L);\n\
    \    assert(candidate(\"abcde\") == 5L);\n    assert(candidate(\"abcdecadeCADE\"\
    ) == 5L);\n    assert(candidate(\"aaaaAAAAaaaa\") == 1L);\n    assert(candidate(\"\
    Jerry jERRY JeRRRY\") == 5L);\n}\nvoid main(){}"
  status: SyntaxError
  stderr: '/tmp/tmpec3yyldu.d(13): Error: template instance `to!long` template `to`
    is not defined, did you mean No?

    Failed: ["dmd", "-unittest", "-v", "-o-", "/tmp/tmpec3yyldu.d", "-I/tmp"]

    '
  stdout: ''
  timestamp: 1660164539
- exit_code: 1
  program: "import std.typecons;\nimport std.math;\n/*\n Given a string, find out\
    \ how many distinct characters (regardless of case) does it consist of\n    >>>\
    \ count_distinct_characters(\"xyzXYZ\")\n    3L\n    >>> count_distinct_characters(\"\
    Jerry\")\n    4L\n    \n*/\nlong count_distinct_characters(string string) \n{\n\
    \    return string.toLower().toHashSet().length;\n}\nunittest\n{\n    alias candidate\
    \ = count_distinct_characters;\n\n    assert(candidate(\"\") == 0L);\n    assert(candidate(\"\
    abcde\") == 5L);\n    assert(candidate(\"abcdecadeCADE\") == 5L);\n    assert(candidate(\"\
    aaaaAAAAaaaa\") == 1L);\n    assert(candidate(\"Jerry jERRY JeRRRY\") == 5L);\n\
    }\nvoid main(){}"
  status: SyntaxError
  stderr: '/tmp/tmpnmx9hjr5.d(13): Error: no property `toLower` for type `string`

    Failed: ["dmd", "-unittest", "-v", "-o-", "/tmp/tmpnmx9hjr5.d", "-I/tmp"]

    '
  stdout: ''
  timestamp: 1660164539
- exit_code: 1
  program: "import std.typecons;\nimport std.math;\n/*\n Given a string, find out\
    \ how many distinct characters (regardless of case) does it consist of\n    >>>\
    \ count_distinct_characters(\"xyzXYZ\")\n    3L\n    >>> count_distinct_characters(\"\
    Jerry\")\n    4L\n    \n*/\nlong count_distinct_characters(string string) \n{\n\
    \    long count = 0;\n    foreach(char c; string)\n    {\n        if(c.isAlpha)\n\
    \        {\n            count++;\n        }\n    }\n    return count;\n}\nunittest\n\
    {\n    alias candidate = count_distinct_characters;\n\n    assert(candidate(\"\
    \") == 0L);\n    assert(candidate(\"abcde\") == 5L);\n    assert(candidate(\"\
    abcdecadeCADE\") == 5L);\n    assert(candidate(\"aaaaAAAAaaaa\") == 1L);\n   \
    \ assert(candidate(\"Jerry jERRY JeRRRY\") == 5L);\n}\nvoid main(){}"
  status: SyntaxError
  stderr: '/tmp/tmpmrkg4h87.d(16): Error: no property `isAlpha` for type `char`

    Failed: ["dmd", "-unittest", "-v", "-o-", "/tmp/tmpmrkg4h87.d", "-I/tmp"]

    '
  stdout: ''
  timestamp: 1660164539
- exit_code: 1
  program: "import std.typecons;\nimport std.math;\n/*\n Given a string, find out\
    \ how many distinct characters (regardless of case) does it consist of\n    >>>\
    \ count_distinct_characters(\"xyzXYZ\")\n    3L\n    >>> count_distinct_characters(\"\
    Jerry\")\n    4L\n    \n*/\nlong count_distinct_characters(string string) \n{\n\
    \    return string.toLower().toSet().length;\n}\nunittest\n{\n    alias candidate\
    \ = count_distinct_characters;\n\n    assert(candidate(\"\") == 0L);\n    assert(candidate(\"\
    abcde\") == 5L);\n    assert(candidate(\"abcdecadeCADE\") == 5L);\n    assert(candidate(\"\
    aaaaAAAAaaaa\") == 1L);\n    assert(candidate(\"Jerry jERRY JeRRRY\") == 5L);\n\
    }\nvoid main(){}"
  status: SyntaxError
  stderr: '/tmp/tmp0j41705u.d(13): Error: no property `toLower` for type `string`

    Failed: ["dmd", "-unittest", "-v", "-o-", "/tmp/tmp0j41705u.d", "-I/tmp"]

    '
  stdout: ''
  timestamp: 1660164539
- exit_code: 1
  program: "import std.typecons;\nimport std.math;\n/*\n Given a string, find out\
    \ how many distinct characters (regardless of case) does it consist of\n    >>>\
    \ count_distinct_characters(\"xyzXYZ\")\n    3L\n    >>> count_distinct_characters(\"\
    Jerry\")\n    4L\n    \n*/\nlong count_distinct_characters(string string) \n{\n\
    \    return set(string.toLowerCase).length;\n}\nunittest\n{\n    alias candidate\
    \ = count_distinct_characters;\n\n    assert(candidate(\"\") == 0L);\n    assert(candidate(\"\
    abcde\") == 5L);\n    assert(candidate(\"abcdecadeCADE\") == 5L);\n    assert(candidate(\"\
    aaaaAAAAaaaa\") == 1L);\n    assert(candidate(\"Jerry jERRY JeRRRY\") == 5L);\n\
    }\nvoid main(){}"
  status: SyntaxError
  stderr: '/tmp/tmp4lz5kksp.d(13): Error: undefined identifier `set`, did you mean
    template `get(K, V)(inout(V[K]) aa, K key, lazy inout(V) defaultValue)`?

    Failed: ["dmd", "-unittest", "-v", "-o-", "/tmp/tmp4lz5kksp.d", "-I/tmp"]

    '
  stdout: ''
  timestamp: 1660164539
- exit_code: 1
  program: "import std.typecons;\nimport std.math;\n/*\n Given a string, find out\
    \ how many distinct characters (regardless of case) does it consist of\n    >>>\
    \ count_distinct_characters(\"xyzXYZ\")\n    3L\n    >>> count_distinct_characters(\"\
    Jerry\")\n    4L\n    \n*/\nlong count_distinct_characters(string string) \n{\n\
    \    auto result = new HashSet!char();\n    foreach(c; string)\n    {\n      \
    \  result.insert(c);\n    }\n    return result.length;\n}\nunittest\n{\n    alias\
    \ candidate = count_distinct_characters;\n\n    assert(candidate(\"\") == 0L);\n\
    \    assert(candidate(\"abcde\") == 5L);\n    assert(candidate(\"abcdecadeCADE\"\
    ) == 5L);\n    assert(candidate(\"aaaaAAAAaaaa\") == 1L);\n    assert(candidate(\"\
    Jerry jERRY JeRRRY\") == 5L);\n}\nvoid main(){}"
  status: SyntaxError
  stderr: '/tmp/tmpl16vwdp4.d(13): Error: template instance `HashSet!char` template
    `HashSet` is not defined

    Failed: ["dmd", "-unittest", "-v", "-o-", "/tmp/tmpl16vwdp4.d", "-I/tmp"]

    '
  stdout: ''
  timestamp: 1660164539
- exit_code: 1
  program: "import std.typecons;\nimport std.math;\n/*\n Given a string, find out\
    \ how many distinct characters (regardless of case) does it consist of\n    >>>\
    \ count_distinct_characters(\"xyzXYZ\")\n    3L\n    >>> count_distinct_characters(\"\
    Jerry\")\n    4L\n    \n*/\nlong count_distinct_characters(string string) \n{\n\
    \    return to!string(string.toLower()).unique().length;\n}\nunittest\n{\n   \
    \ alias candidate = count_distinct_characters;\n\n    assert(candidate(\"\") ==\
    \ 0L);\n    assert(candidate(\"abcde\") == 5L);\n    assert(candidate(\"abcdecadeCADE\"\
    ) == 5L);\n    assert(candidate(\"aaaaAAAAaaaa\") == 1L);\n    assert(candidate(\"\
    Jerry jERRY JeRRRY\") == 5L);\n}\nvoid main(){}"
  status: SyntaxError
  stderr: '/tmp/tmpmcatsf2l.d(13): Error: template instance `to!string` template `to`
    is not defined, did you mean No?

    Failed: ["dmd", "-unittest", "-v", "-o-", "/tmp/tmpmcatsf2l.d", "-I/tmp"]

    '
  stdout: ''
  timestamp: 1660164540
- exit_code: 1
  program: "import std.typecons;\nimport std.math;\n/*\n Given a string, find out\
    \ how many distinct characters (regardless of case) does it consist of\n    >>>\
    \ count_distinct_characters(\"xyzXYZ\")\n    3L\n    >>> count_distinct_characters(\"\
    Jerry\")\n    4L\n    \n*/\nlong count_distinct_characters(string string) \n{\n\
    \    long count = 0;\n    foreach(char c; string)\n    {\n        if(c.isUpper)\n\
    \        {\n            count++;\n        }\n        else if(c.isLower)\n    \
    \    {\n            count++;\n        }\n    }\n    return count;\n}\nunittest\n\
    {\n    alias candidate = count_distinct_characters;\n\n    assert(candidate(\"\
    \") == 0L);\n    assert(candidate(\"abcde\") == 5L);\n    assert(candidate(\"\
    abcdecadeCADE\") == 5L);\n    assert(candidate(\"aaaaAAAAaaaa\") == 1L);\n   \
    \ assert(candidate(\"Jerry jERRY JeRRRY\") == 5L);\n}\nvoid main(){}"
  status: SyntaxError
  stderr: '/tmp/tmpxl35mddn.d(16): Error: no property `isUpper` for type `char`

    /tmp/tmpxl35mddn.d(20): Error: no property `isLower` for type `char`

    Failed: ["dmd", "-unittest", "-v", "-o-", "/tmp/tmpxl35mddn.d", "-I/tmp"]

    '
  stdout: ''
  timestamp: 1660164539
- exit_code: 1
  program: "import std.typecons;\nimport std.math;\n/*\n Given a string, find out\
    \ how many distinct characters (regardless of case) does it consist of\n    >>>\
    \ count_distinct_characters(\"xyzXYZ\")\n    3L\n    >>> count_distinct_characters(\"\
    Jerry\")\n    4L\n    \n*/\nlong count_distinct_characters(string string) \n{\n\
    \    return to!string(string.toLower()).length;\n}\nunittest\n{\n    alias candidate\
    \ = count_distinct_characters;\n\n    assert(candidate(\"\") == 0L);\n    assert(candidate(\"\
    abcde\") == 5L);\n    assert(candidate(\"abcdecadeCADE\") == 5L);\n    assert(candidate(\"\
    aaaaAAAAaaaa\") == 1L);\n    assert(candidate(\"Jerry jERRY JeRRRY\") == 5L);\n\
    }\nvoid main(){}"
  status: SyntaxError
  stderr: '/tmp/tmphbe_dxa7.d(13): Error: template instance `to!string` template `to`
    is not defined, did you mean No?

    Failed: ["dmd", "-unittest", "-v", "-o-", "/tmp/tmphbe_dxa7.d", "-I/tmp"]

    '
  stdout: ''
  timestamp: 1660164539
- exit_code: 1
  program: "import std.typecons;\nimport std.math;\n/*\n Given a string, find out\
    \ how many distinct characters (regardless of case) does it consist of\n    >>>\
    \ count_distinct_characters(\"xyzXYZ\")\n    3L\n    >>> count_distinct_characters(\"\
    Jerry\")\n    4L\n    \n*/\nlong count_distinct_characters(string string) \n{\n\
    \    return string.toLower().toHashSet().length;\n}\nunittest\n{\n    alias candidate\
    \ = count_distinct_characters;\n\n    assert(candidate(\"\") == 0L);\n    assert(candidate(\"\
    abcde\") == 5L);\n    assert(candidate(\"abcdecadeCADE\") == 5L);\n    assert(candidate(\"\
    aaaaAAAAaaaa\") == 1L);\n    assert(candidate(\"Jerry jERRY JeRRRY\") == 5L);\n\
    }\nvoid main(){}"
  status: SyntaxError
  stderr: '/tmp/tmpnmx9hjr5.d(13): Error: no property `toLower` for type `string`

    Failed: ["dmd", "-unittest", "-v", "-o-", "/tmp/tmpnmx9hjr5.d", "-I/tmp"]

    '
  stdout: ''
  timestamp: 1660164539
- exit_code: 1
  program: "import std.typecons;\nimport std.math;\n/*\n Given a string, find out\
    \ how many distinct characters (regardless of case) does it consist of\n    >>>\
    \ count_distinct_characters(\"xyzXYZ\")\n    3L\n    >>> count_distinct_characters(\"\
    Jerry\")\n    4L\n    \n*/\nlong count_distinct_characters(string string) \n{\n\
    \    return set(string.toLowerCase).length;\n}\nunittest\n{\n    alias candidate\
    \ = count_distinct_characters;\n\n    assert(candidate(\"\") == 0L);\n    assert(candidate(\"\
    abcde\") == 5L);\n    assert(candidate(\"abcdecadeCADE\") == 5L);\n    assert(candidate(\"\
    aaaaAAAAaaaa\") == 1L);\n    assert(candidate(\"Jerry jERRY JeRRRY\") == 5L);\n\
    }\nvoid main(){}"
  status: SyntaxError
  stderr: '/tmp/tmp4lz5kksp.d(13): Error: undefined identifier `set`, did you mean
    template `get(K, V)(inout(V[K]) aa, K key, lazy inout(V) defaultValue)`?

    Failed: ["dmd", "-unittest", "-v", "-o-", "/tmp/tmp4lz5kksp.d", "-I/tmp"]

    '
  stdout: ''
  timestamp: 1660164539
- exit_code: 1
  program: "import std.typecons;\nimport std.math;\n/*\n Given a string, find out\
    \ how many distinct characters (regardless of case) does it consist of\n    >>>\
    \ count_distinct_characters(\"xyzXYZ\")\n    3L\n    >>> count_distinct_characters(\"\
    Jerry\")\n    4L\n    \n*/\nlong count_distinct_characters(string string) \n{\n\
    \    return set(string.toLowerCase).length;\n}\nunittest\n{\n    alias candidate\
    \ = count_distinct_characters;\n\n    assert(candidate(\"\") == 0L);\n    assert(candidate(\"\
    abcde\") == 5L);\n    assert(candidate(\"abcdecadeCADE\") == 5L);\n    assert(candidate(\"\
    aaaaAAAAaaaa\") == 1L);\n    assert(candidate(\"Jerry jERRY JeRRRY\") == 5L);\n\
    }\nvoid main(){}"
  status: SyntaxError
  stderr: '/tmp/tmp4lz5kksp.d(13): Error: undefined identifier `set`, did you mean
    template `get(K, V)(inout(V[K]) aa, K key, lazy inout(V) defaultValue)`?

    Failed: ["dmd", "-unittest", "-v", "-o-", "/tmp/tmp4lz5kksp.d", "-I/tmp"]

    '
  stdout: ''
  timestamp: 1660164539
- exit_code: 1
  program: "import std.typecons;\nimport std.math;\n/*\n Given a string, find out\
    \ how many distinct characters (regardless of case) does it consist of\n    >>>\
    \ count_distinct_characters(\"xyzXYZ\")\n    3L\n    >>> count_distinct_characters(\"\
    Jerry\")\n    4L\n    \n*/\nlong count_distinct_characters(string string) \n{\n\
    \    return to!(long)(std.algorithm.uniq(string.toLower()).length);\n}\nunittest\n\
    {\n    alias candidate = count_distinct_characters;\n\n    assert(candidate(\"\
    \") == 0L);\n    assert(candidate(\"abcde\") == 5L);\n    assert(candidate(\"\
    abcdecadeCADE\") == 5L);\n    assert(candidate(\"aaaaAAAAaaaa\") == 1L);\n   \
    \ assert(candidate(\"Jerry jERRY JeRRRY\") == 5L);\n}\nvoid main(){}"
  status: SyntaxError
  stderr: '/tmp/tmplsbtdzbh.d(13): Error: template instance `to!long` template `to`
    is not defined, did you mean No?

    Failed: ["dmd", "-unittest", "-v", "-o-", "/tmp/tmplsbtdzbh.d", "-I/tmp"]

    '
  stdout: ''
  timestamp: 1660164539
- exit_code: 1
  program: "import std.typecons;\nimport std.math;\n/*\n Given a string, find out\
    \ how many distinct characters (regardless of case) does it consist of\n    >>>\
    \ count_distinct_characters(\"xyzXYZ\")\n    3L\n    >>> count_distinct_characters(\"\
    Jerry\")\n    4L\n    \n*/\nlong count_distinct_characters(string string) \n{\n\
    \    return set!(char)(string).length;\n}\nunittest\n{\n    alias candidate =\
    \ count_distinct_characters;\n\n    assert(candidate(\"\") == 0L);\n    assert(candidate(\"\
    abcde\") == 5L);\n    assert(candidate(\"abcdecadeCADE\") == 5L);\n    assert(candidate(\"\
    aaaaAAAAaaaa\") == 1L);\n    assert(candidate(\"Jerry jERRY JeRRRY\") == 5L);\n\
    }\nvoid main(){}"
  status: SyntaxError
  stderr: '/tmp/tmp9xh7ufsa.d(13): Error: template instance `set!char` template `set`
    is not defined, did you mean get(K, V)(inout(V[K]) aa, K key, lazy inout(V) defaultValue)?

    Failed: ["dmd", "-unittest", "-v", "-o-", "/tmp/tmp9xh7ufsa.d", "-I/tmp"]

    '
  stdout: ''
  timestamp: 1660164539
- exit_code: 1
  program: "import std.typecons;\nimport std.math;\n/*\n Given a string, find out\
    \ how many distinct characters (regardless of case) does it consist of\n    >>>\
    \ count_distinct_characters(\"xyzXYZ\")\n    3L\n    >>> count_distinct_characters(\"\
    Jerry\")\n    4L\n    \n*/\nlong count_distinct_characters(string string) \n{\n\
    \    return set(string.toLower).length;\n}\nunittest\n{\n    alias candidate =\
    \ count_distinct_characters;\n\n    assert(candidate(\"\") == 0L);\n    assert(candidate(\"\
    abcde\") == 5L);\n    assert(candidate(\"abcdecadeCADE\") == 5L);\n    assert(candidate(\"\
    aaaaAAAAaaaa\") == 1L);\n    assert(candidate(\"Jerry jERRY JeRRRY\") == 5L);\n\
    }\nvoid main(){}"
  status: SyntaxError
  stderr: '/tmp/tmpqlde1930.d(13): Error: undefined identifier `set`, did you mean
    template `get(K, V)(inout(V[K]) aa, K key, lazy inout(V) defaultValue)`?

    Failed: ["dmd", "-unittest", "-v", "-o-", "/tmp/tmpqlde1930.d", "-I/tmp"]

    '
  stdout: ''
  timestamp: 1660164539
- exit_code: 1
  program: "import std.typecons;\nimport std.math;\n/*\n Given a string, find out\
    \ how many distinct characters (regardless of case) does it consist of\n    >>>\
    \ count_distinct_characters(\"xyzXYZ\")\n    3L\n    >>> count_distinct_characters(\"\
    Jerry\")\n    4L\n    \n*/\nlong count_distinct_characters(string string) \n{\n\
    \    return string.toLower().toHashSet().length;\n}\nunittest\n{\n    alias candidate\
    \ = count_distinct_characters;\n\n    assert(candidate(\"\") == 0L);\n    assert(candidate(\"\
    abcde\") == 5L);\n    assert(candidate(\"abcdecadeCADE\") == 5L);\n    assert(candidate(\"\
    aaaaAAAAaaaa\") == 1L);\n    assert(candidate(\"Jerry jERRY JeRRRY\") == 5L);\n\
    }\nvoid main(){}"
  status: SyntaxError
  stderr: '/tmp/tmpnmx9hjr5.d(13): Error: no property `toLower` for type `string`

    Failed: ["dmd", "-unittest", "-v", "-o-", "/tmp/tmpnmx9hjr5.d", "-I/tmp"]

    '
  stdout: ''
  timestamp: 1660164539
- exit_code: 1
  program: "import std.typecons;\nimport std.math;\n/*\n Given a string, find out\
    \ how many distinct characters (regardless of case) does it consist of\n    >>>\
    \ count_distinct_characters(\"xyzXYZ\")\n    3L\n    >>> count_distinct_characters(\"\
    Jerry\")\n    4L\n    \n*/\nlong count_distinct_characters(string string) \n{\n\
    \    return set(string.toLower).length;\n}\nunittest\n{\n    alias candidate =\
    \ count_distinct_characters;\n\n    assert(candidate(\"\") == 0L);\n    assert(candidate(\"\
    abcde\") == 5L);\n    assert(candidate(\"abcdecadeCADE\") == 5L);\n    assert(candidate(\"\
    aaaaAAAAaaaa\") == 1L);\n    assert(candidate(\"Jerry jERRY JeRRRY\") == 5L);\n\
    }\nvoid main(){}"
  status: SyntaxError
  stderr: '/tmp/tmpqlde1930.d(13): Error: undefined identifier `set`, did you mean
    template `get(K, V)(inout(V[K]) aa, K key, lazy inout(V) defaultValue)`?

    Failed: ["dmd", "-unittest", "-v", "-o-", "/tmp/tmpqlde1930.d", "-I/tmp"]

    '
  stdout: ''
  timestamp: 1660164539
- exit_code: 1
  program: "import std.typecons;\nimport std.math;\n/*\n Given a string, find out\
    \ how many distinct characters (regardless of case) does it consist of\n    >>>\
    \ count_distinct_characters(\"xyzXYZ\")\n    3L\n    >>> count_distinct_characters(\"\
    Jerry\")\n    4L\n    \n*/\nlong count_distinct_characters(string string) \n{\n\
    \    return set(string.toLower).length;\n}\nunittest\n{\n    alias candidate =\
    \ count_distinct_characters;\n\n    assert(candidate(\"\") == 0L);\n    assert(candidate(\"\
    abcde\") == 5L);\n    assert(candidate(\"abcdecadeCADE\") == 5L);\n    assert(candidate(\"\
    aaaaAAAAaaaa\") == 1L);\n    assert(candidate(\"Jerry jERRY JeRRRY\") == 5L);\n\
    }\nvoid main(){}"
  status: SyntaxError
  stderr: '/tmp/tmpqlde1930.d(13): Error: undefined identifier `set`, did you mean
    template `get(K, V)(inout(V[K]) aa, K key, lazy inout(V) defaultValue)`?

    Failed: ["dmd", "-unittest", "-v", "-o-", "/tmp/tmpqlde1930.d", "-I/tmp"]

    '
  stdout: ''
  timestamp: 1660164539
- exit_code: 1
  program: "import std.typecons;\nimport std.math;\n/*\n Given a string, find out\
    \ how many distinct characters (regardless of case) does it consist of\n    >>>\
    \ count_distinct_characters(\"xyzXYZ\")\n    3L\n    >>> count_distinct_characters(\"\
    Jerry\")\n    4L\n    \n*/\nlong count_distinct_characters(string string) \n{\n\
    \    return set(string.toLowerCase).length;\n}\nunittest\n{\n    alias candidate\
    \ = count_distinct_characters;\n\n    assert(candidate(\"\") == 0L);\n    assert(candidate(\"\
    abcde\") == 5L);\n    assert(candidate(\"abcdecadeCADE\") == 5L);\n    assert(candidate(\"\
    aaaaAAAAaaaa\") == 1L);\n    assert(candidate(\"Jerry jERRY JeRRRY\") == 5L);\n\
    }\nvoid main(){}"
  status: SyntaxError
  stderr: '/tmp/tmp4lz5kksp.d(13): Error: undefined identifier `set`, did you mean
    template `get(K, V)(inout(V[K]) aa, K key, lazy inout(V) defaultValue)`?

    Failed: ["dmd", "-unittest", "-v", "-o-", "/tmp/tmp4lz5kksp.d", "-I/tmp"]

    '
  stdout: ''
  timestamp: 1660164539
- exit_code: 1
  program: "import std.typecons;\nimport std.math;\n/*\n Given a string, find out\
    \ how many distinct characters (regardless of case) does it consist of\n    >>>\
    \ count_distinct_characters(\"xyzXYZ\")\n    3L\n    >>> count_distinct_characters(\"\
    Jerry\")\n    4L\n    \n*/\nlong count_distinct_characters(string string) \n{\n\
    \    auto set = new Set!(char)();\n    foreach(c; string)\n    {\n        set.insert(c);\n\
    \    }\n    return set.length;\n}\nunittest\n{\n    alias candidate = count_distinct_characters;\n\
    \n    assert(candidate(\"\") == 0L);\n    assert(candidate(\"abcde\") == 5L);\n\
    \    assert(candidate(\"abcdecadeCADE\") == 5L);\n    assert(candidate(\"aaaaAAAAaaaa\"\
    ) == 1L);\n    assert(candidate(\"Jerry jERRY JeRRRY\") == 5L);\n}\nvoid main(){}"
  status: SyntaxError
  stderr: '/tmp/tmppacl_btz.d(13): Error: template instance `Set!char` template `Set`
    is not defined, did you mean get(K, V)(inout(V[K]) aa, K key, lazy inout(V) defaultValue)?

    Failed: ["dmd", "-unittest", "-v", "-o-", "/tmp/tmppacl_btz.d", "-I/tmp"]

    '
  stdout: ''
  timestamp: 1660164540
- exit_code: 1
  program: "import std.typecons;\nimport std.math;\n/*\n Given a string, find out\
    \ how many distinct characters (regardless of case) does it consist of\n    >>>\
    \ count_distinct_characters(\"xyzXYZ\")\n    3L\n    >>> count_distinct_characters(\"\
    Jerry\")\n    4L\n    \n*/\nlong count_distinct_characters(string string) \n{\n\
    \    long count = 0;\n    foreach(char c; string)\n    {\n        if(!count)\n\
    \        {\n            count++;\n        }\n        else\n        {\n       \
    \     bool flag = true;\n            foreach(char c2; string[0..count])\n    \
    \        {\n                if(c2 == c)\n                {\n                 \
    \   flag = false;\n                    break;\n                }\n           \
    \ }\n            if(flag)\n            {\n                count++;\n         \
    \   }\n        }\n    }\n    return count;\n}\nunittest\n{\n    alias candidate\
    \ = count_distinct_characters;\n\n    assert(candidate(\"\") == 0L);\n    assert(candidate(\"\
    abcde\") == 5L);\n    assert(candidate(\"abcdecadeCADE\") == 5L);\n    assert(candidate(\"\
    aaaaAAAAaaaa\") == 1L);\n    assert(candidate(\"Jerry jERRY JeRRRY\") == 5L);\n\
    }\nvoid main(){}"
  status: Exception
  stderr: 'core.exception.AssertError@/tmp/tmpa269oauq.d(45): unittest failure

    ----------------

    ??:? _d_unittestp [0x427e65]

    ??:? void tmpa269oauq.__unittest_L39_C1() [0x427b7c]

    ??:? void tmpa269oauq.__modtest() [0x427be8]

    ??:? int core.runtime.runModuleUnitTests().__foreachbody2(object.ModuleInfo*)
    [0x42bbff]

    ??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)).__lambda2(immutable(object.ModuleInfo*))
    [0x42aa92]

    ??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))).__foreachbody2(ref
    rt.sections_elf_shared.DSO) [0x42fc25]

    ??:? int rt.sections_elf_shared.DSO.opApply(scope int delegate(ref rt.sections_elf_shared.DSO))
    [0x4300d4]

    ??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*)))
    [0x42fbb1]

    ??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)) [0x42aa69]

    ??:? runModuleUnitTests [0x42b9d5]

    ??:? void rt.dmain2._d_run_main(int, char**, extern (C) int function(char[][])*).runAll()
    [0x428328]

    ??:? void rt.dmain2._d_r'
  stdout: ''
  timestamp: 1660164540
- exit_code: 1
  program: "import std.typecons;\nimport std.math;\n/*\n Given a string, find out\
    \ how many distinct characters (regardless of case) does it consist of\n    >>>\
    \ count_distinct_characters(\"xyzXYZ\")\n    3L\n    >>> count_distinct_characters(\"\
    Jerry\")\n    4L\n    \n*/\nlong count_distinct_characters(string string) \n{\n\
    \    long count = 0;\n    foreach(char c; string)\n    {\n        if(c.isLetter)\n\
    \        {\n            count++;\n        }\n    }\n    return count;\n}\n/*\n\
    \ Given a string, find out how many distinct characters (regardless of case) does\
    \ it consist of\n    >>> count_distinct_characters(\"xyzXYZ\")\n    3L\n    >>>\
    \ count_distinct_characters(\"Jerry\")\n    4L\n    \n*/\nlong count_distinct_characters_2(string\
    \ string) \n{\n    long count = 0;\n    foreach(char c; string)\n    {\n     \
    \   if(c.isLetter)\n        {\n            count++;\n        }\n    }\n    return\
    \ count;\n}\n/*\n Given a string, find out how many distinct characters (regardless\
    \ of case) does it consist of\n    >>> count_distinct_characters(\"xyzXYZ\")\n\
    \    3L\n    >>> count_distinct_characters(\"Jerry\")\n    4L\n    \n*/\nlong\
    \ count_distinct_characters_3(string string) \n{\n    long count = 0;\n    foreach(char\
    \ c; string)\n    {\n        if(c.isLetter)\n        {\n            count++;\n\
    \        }\n    }\n    return count;\n}\n/*\n Given a string, find out how many\
    \ distinct characters (regardless of case) does it consist of\n    >>> count_distinct_characters(\"\
    xyzXYZ\")\n    3L\n    >>> count_distinct_characters(\"Jerry\")\n    4L\n    \n\
    */\nlong count_distinct_characters_4(string string) \n{\n    long count = 0;\n\
    \    foreach(char c; string)\n    {\n        if(c.isLetter)\n        {\n     \
    \       count++;\n        }\n    }\n    return count;\n}\n/*\n Given a string,\
    \ find out how many distinct characters (regardless of case) does it consist of\n\
    \    >>> count_distinct_characters(\"xyzXYZ\")\n    3L\n    >>> count_distinct_characters(\"\
    Jerry\")\n    4L\n    \n*/\nlong count_\nunittest\n{\n    alias candidate = count_distinct_characters;\n\
    \n    assert(candidate(\"\") == 0L);\n    assert(candidate(\"abcde\") == 5L);\n\
    \    assert(candidate(\"abcdecadeCADE\") == 5L);\n    assert(candidate(\"aaaaAAAAaaaa\"\
    ) == 1L);\n    assert(candidate(\"Jerry jERRY JeRRRY\") == 5L);\n}\nvoid main(){}"
  status: SyntaxError
  stderr: '/tmp/tmpido410qz.d(92): Error: semicolon expected, not `unittest`

    Failed: ["dmd", "-unittest", "-v", "-o-", "/tmp/tmpido410qz.d", "-I/tmp"]

    '
  stdout: ''
  timestamp: 1660164539
- exit_code: 1
  program: "import std.typecons;\nimport std.math;\n/*\n Given a string, find out\
    \ how many distinct characters (regardless of case) does it consist of\n    >>>\
    \ count_distinct_characters(\"xyzXYZ\")\n    3L\n    >>> count_distinct_characters(\"\
    Jerry\")\n    4L\n    \n*/\nlong count_distinct_characters(string string) \n{\n\
    \    return string.toLower().toHashSet().length;\n}\nunittest\n{\n    alias candidate\
    \ = count_distinct_characters;\n\n    assert(candidate(\"\") == 0L);\n    assert(candidate(\"\
    abcde\") == 5L);\n    assert(candidate(\"abcdecadeCADE\") == 5L);\n    assert(candidate(\"\
    aaaaAAAAaaaa\") == 1L);\n    assert(candidate(\"Jerry jERRY JeRRRY\") == 5L);\n\
    }\nvoid main(){}"
  status: SyntaxError
  stderr: '/tmp/tmpnmx9hjr5.d(13): Error: no property `toLower` for type `string`

    Failed: ["dmd", "-unittest", "-v", "-o-", "/tmp/tmpnmx9hjr5.d", "-I/tmp"]

    '
  stdout: ''
  timestamp: 1660164539
- exit_code: 1
  program: "import std.typecons;\nimport std.math;\n/*\n Given a string, find out\
    \ how many distinct characters (regardless of case) does it consist of\n    >>>\
    \ count_distinct_characters(\"xyzXYZ\")\n    3L\n    >>> count_distinct_characters(\"\
    Jerry\")\n    4L\n    \n*/\nlong count_distinct_characters(string string) \n{\n\
    \    return string.toLower().length;\n}\nunittest\n{\n    alias candidate = count_distinct_characters;\n\
    \n    assert(candidate(\"\") == 0L);\n    assert(candidate(\"abcde\") == 5L);\n\
    \    assert(candidate(\"abcdecadeCADE\") == 5L);\n    assert(candidate(\"aaaaAAAAaaaa\"\
    ) == 1L);\n    assert(candidate(\"Jerry jERRY JeRRRY\") == 5L);\n}\nvoid main(){}"
  status: SyntaxError
  stderr: '/tmp/tmphfp3dody.d(13): Error: no property `toLower` for type `string`

    Failed: ["dmd", "-unittest", "-v", "-o-", "/tmp/tmphfp3dody.d", "-I/tmp"]

    '
  stdout: ''
  timestamp: 1660164539
- exit_code: 1
  program: "import std.typecons;\nimport std.math;\n/*\n Given a string, find out\
    \ how many distinct characters (regardless of case) does it consist of\n    >>>\
    \ count_distinct_characters(\"xyzXYZ\")\n    3L\n    >>> count_distinct_characters(\"\
    Jerry\")\n    4L\n    \n*/\nlong count_distinct_characters(string string) \n{\n\
    \    return string.toLower().length;\n}\nunittest\n{\n    alias candidate = count_distinct_characters;\n\
    \n    assert(candidate(\"\") == 0L);\n    assert(candidate(\"abcde\") == 5L);\n\
    \    assert(candidate(\"abcdecadeCADE\") == 5L);\n    assert(candidate(\"aaaaAAAAaaaa\"\
    ) == 1L);\n    assert(candidate(\"Jerry jERRY JeRRRY\") == 5L);\n}\nvoid main(){}"
  status: SyntaxError
  stderr: '/tmp/tmphfp3dody.d(13): Error: no property `toLower` for type `string`

    Failed: ["dmd", "-unittest", "-v", "-o-", "/tmp/tmphfp3dody.d", "-I/tmp"]

    '
  stdout: ''
  timestamp: 1660164539
- exit_code: 1
  program: "import std.typecons;\nimport std.math;\n/*\n Given a string, find out\
    \ how many distinct characters (regardless of case) does it consist of\n    >>>\
    \ count_distinct_characters(\"xyzXYZ\")\n    3L\n    >>> count_distinct_characters(\"\
    Jerry\")\n    4L\n    \n*/\nlong count_distinct_characters(string string) \n{\n\
    \    return to!string(string.toLower()).distinct.length;\n}\nunittest\n{\n   \
    \ alias candidate = count_distinct_characters;\n\n    assert(candidate(\"\") ==\
    \ 0L);\n    assert(candidate(\"abcde\") == 5L);\n    assert(candidate(\"abcdecadeCADE\"\
    ) == 5L);\n    assert(candidate(\"aaaaAAAAaaaa\") == 1L);\n    assert(candidate(\"\
    Jerry jERRY JeRRRY\") == 5L);\n}\nvoid main(){}"
  status: SyntaxError
  stderr: '/tmp/tmppwvco4cu.d(13): Error: template instance `to!string` template `to`
    is not defined, did you mean No?

    Failed: ["dmd", "-unittest", "-v", "-o-", "/tmp/tmppwvco4cu.d", "-I/tmp"]

    '
  stdout: ''
  timestamp: 1660164539
- exit_code: 1
  program: "import std.typecons;\nimport std.math;\n/*\n Given a string, find out\
    \ how many distinct characters (regardless of case) does it consist of\n    >>>\
    \ count_distinct_characters(\"xyzXYZ\")\n    3L\n    >>> count_distinct_characters(\"\
    Jerry\")\n    4L\n    \n*/\nlong count_distinct_characters(string string) \n{\n\
    \    return set(string.toLowerCase).length;\n}\nunittest\n{\n    alias candidate\
    \ = count_distinct_characters;\n\n    assert(candidate(\"\") == 0L);\n    assert(candidate(\"\
    abcde\") == 5L);\n    assert(candidate(\"abcdecadeCADE\") == 5L);\n    assert(candidate(\"\
    aaaaAAAAaaaa\") == 1L);\n    assert(candidate(\"Jerry jERRY JeRRRY\") == 5L);\n\
    }\nvoid main(){}"
  status: SyntaxError
  stderr: '/tmp/tmp4lz5kksp.d(13): Error: undefined identifier `set`, did you mean
    template `get(K, V)(inout(V[K]) aa, K key, lazy inout(V) defaultValue)`?

    Failed: ["dmd", "-unittest", "-v", "-o-", "/tmp/tmp4lz5kksp.d", "-I/tmp"]

    '
  stdout: ''
  timestamp: 1660164539
- exit_code: 1
  program: "import std.typecons;\nimport std.math;\n/*\n Given a string, find out\
    \ how many distinct characters (regardless of case) does it consist of\n    >>>\
    \ count_distinct_characters(\"xyzXYZ\")\n    3L\n    >>> count_distinct_characters(\"\
    Jerry\")\n    4L\n    \n*/\nlong count_distinct_characters(string string) \n{\n\
    \    return string.toLower().unique.length;\n}\nunittest\n{\n    alias candidate\
    \ = count_distinct_characters;\n\n    assert(candidate(\"\") == 0L);\n    assert(candidate(\"\
    abcde\") == 5L);\n    assert(candidate(\"abcdecadeCADE\") == 5L);\n    assert(candidate(\"\
    aaaaAAAAaaaa\") == 1L);\n    assert(candidate(\"Jerry jERRY JeRRRY\") == 5L);\n\
    }\nvoid main(){}"
  status: SyntaxError
  stderr: '/tmp/tmpl5dkqvpj.d(13): Error: no property `toLower` for type `string`

    Failed: ["dmd", "-unittest", "-v", "-o-", "/tmp/tmpl5dkqvpj.d", "-I/tmp"]

    '
  stdout: ''
  timestamp: 1660164539
- exit_code: 1
  program: "import std.typecons;\nimport std.math;\n/*\n Given a string, find out\
    \ how many distinct characters (regardless of case) does it consist of\n    >>>\
    \ count_distinct_characters(\"xyzXYZ\")\n    3L\n    >>> count_distinct_characters(\"\
    Jerry\")\n    4L\n    \n*/\nlong count_distinct_characters(string string) \n{\n\
    \    return to!string(string.toLower()).length;\n}\nunittest\n{\n    alias candidate\
    \ = count_distinct_characters;\n\n    assert(candidate(\"\") == 0L);\n    assert(candidate(\"\
    abcde\") == 5L);\n    assert(candidate(\"abcdecadeCADE\") == 5L);\n    assert(candidate(\"\
    aaaaAAAAaaaa\") == 1L);\n    assert(candidate(\"Jerry jERRY JeRRRY\") == 5L);\n\
    }\nvoid main(){}"
  status: SyntaxError
  stderr: '/tmp/tmphbe_dxa7.d(13): Error: template instance `to!string` template `to`
    is not defined, did you mean No?

    Failed: ["dmd", "-unittest", "-v", "-o-", "/tmp/tmphbe_dxa7.d", "-I/tmp"]

    '
  stdout: ''
  timestamp: 1660164539
- exit_code: 1
  program: "import std.typecons;\nimport std.math;\n/*\n Given a string, find out\
    \ how many distinct characters (regardless of case) does it consist of\n    >>>\
    \ count_distinct_characters(\"xyzXYZ\")\n    3L\n    >>> count_distinct_characters(\"\
    Jerry\")\n    4L\n    \n*/\nlong count_distinct_characters(string string) \n{\n\
    \    return set(string.toLowerCase).length;\n}\nunittest\n{\n    alias candidate\
    \ = count_distinct_characters;\n\n    assert(candidate(\"\") == 0L);\n    assert(candidate(\"\
    abcde\") == 5L);\n    assert(candidate(\"abcdecadeCADE\") == 5L);\n    assert(candidate(\"\
    aaaaAAAAaaaa\") == 1L);\n    assert(candidate(\"Jerry jERRY JeRRRY\") == 5L);\n\
    }\nvoid main(){}"
  status: SyntaxError
  stderr: '/tmp/tmp4lz5kksp.d(13): Error: undefined identifier `set`, did you mean
    template `get(K, V)(inout(V[K]) aa, K key, lazy inout(V) defaultValue)`?

    Failed: ["dmd", "-unittest", "-v", "-o-", "/tmp/tmp4lz5kksp.d", "-I/tmp"]

    '
  stdout: ''
  timestamp: 1660164539
- exit_code: 1
  program: "import std.typecons;\nimport std.math;\n/*\n Given a string, find out\
    \ how many distinct characters (regardless of case) does it consist of\n    >>>\
    \ count_distinct_characters(\"xyzXYZ\")\n    3L\n    >>> count_distinct_characters(\"\
    Jerry\")\n    4L\n    \n*/\nlong count_distinct_characters(string string) \n{\n\
    \    return set(string.toLowerCase).length;\n}\nunittest\n{\n    alias candidate\
    \ = count_distinct_characters;\n\n    assert(candidate(\"\") == 0L);\n    assert(candidate(\"\
    abcde\") == 5L);\n    assert(candidate(\"abcdecadeCADE\") == 5L);\n    assert(candidate(\"\
    aaaaAAAAaaaa\") == 1L);\n    assert(candidate(\"Jerry jERRY JeRRRY\") == 5L);\n\
    }\nvoid main(){}"
  status: SyntaxError
  stderr: '/tmp/tmp4lz5kksp.d(13): Error: undefined identifier `set`, did you mean
    template `get(K, V)(inout(V[K]) aa, K key, lazy inout(V) defaultValue)`?

    Failed: ["dmd", "-unittest", "-v", "-o-", "/tmp/tmp4lz5kksp.d", "-I/tmp"]

    '
  stdout: ''
  timestamp: 1660164539
- exit_code: 1
  program: "import std.typecons;\nimport std.math;\n/*\n Given a string, find out\
    \ how many distinct characters (regardless of case) does it consist of\n    >>>\
    \ count_distinct_characters(\"xyzXYZ\")\n    3L\n    >>> count_distinct_characters(\"\
    Jerry\")\n    4L\n    \n*/\nlong count_distinct_characters(string string) \n{\n\
    \    return std.algorithm.uniq(string.toLower).length;\n}\nunittest\n{\n    alias\
    \ candidate = count_distinct_characters;\n\n    assert(candidate(\"\") == 0L);\n\
    \    assert(candidate(\"abcde\") == 5L);\n    assert(candidate(\"abcdecadeCADE\"\
    ) == 5L);\n    assert(candidate(\"aaaaAAAAaaaa\") == 1L);\n    assert(candidate(\"\
    Jerry jERRY JeRRRY\") == 5L);\n}\nvoid main(){}"
  status: SyntaxError
  stderr: '/tmp/tmpuat2npys.d(13): Error: undefined identifier `algorithm` in package
    `std`

    Failed: ["dmd", "-unittest", "-v", "-o-", "/tmp/tmpuat2npys.d", "-I/tmp"]

    '
  stdout: ''
  timestamp: 1660164540
- exit_code: 1
  program: "import std.typecons;\nimport std.math;\n/*\n Given a string, find out\
    \ how many distinct characters (regardless of case) does it consist of\n    >>>\
    \ count_distinct_characters(\"xyzXYZ\")\n    3L\n    >>> count_distinct_characters(\"\
    Jerry\")\n    4L\n    \n*/\nlong count_distinct_characters(string string) \n{\n\
    \    return to!string(string.toLower()).length;\n}\nunittest\n{\n    alias candidate\
    \ = count_distinct_characters;\n\n    assert(candidate(\"\") == 0L);\n    assert(candidate(\"\
    abcde\") == 5L);\n    assert(candidate(\"abcdecadeCADE\") == 5L);\n    assert(candidate(\"\
    aaaaAAAAaaaa\") == 1L);\n    assert(candidate(\"Jerry jERRY JeRRRY\") == 5L);\n\
    }\nvoid main(){}"
  status: SyntaxError
  stderr: '/tmp/tmphbe_dxa7.d(13): Error: template instance `to!string` template `to`
    is not defined, did you mean No?

    Failed: ["dmd", "-unittest", "-v", "-o-", "/tmp/tmphbe_dxa7.d", "-I/tmp"]

    '
  stdout: ''
  timestamp: 1660164539
- exit_code: 1
  program: "import std.typecons;\nimport std.math;\n/*\n Given a string, find out\
    \ how many distinct characters (regardless of case) does it consist of\n    >>>\
    \ count_distinct_characters(\"xyzXYZ\")\n    3L\n    >>> count_distinct_characters(\"\
    Jerry\")\n    4L\n    \n*/\nlong count_distinct_characters(string string) \n{\n\
    \    return string.toLower().toSet().length;\n}\nunittest\n{\n    alias candidate\
    \ = count_distinct_characters;\n\n    assert(candidate(\"\") == 0L);\n    assert(candidate(\"\
    abcde\") == 5L);\n    assert(candidate(\"abcdecadeCADE\") == 5L);\n    assert(candidate(\"\
    aaaaAAAAaaaa\") == 1L);\n    assert(candidate(\"Jerry jERRY JeRRRY\") == 5L);\n\
    }\nvoid main(){}"
  status: SyntaxError
  stderr: '/tmp/tmp0j41705u.d(13): Error: no property `toLower` for type `string`

    Failed: ["dmd", "-unittest", "-v", "-o-", "/tmp/tmp0j41705u.d", "-I/tmp"]

    '
  stdout: ''
  timestamp: 1660164539
- exit_code: 1
  program: "import std.typecons;\nimport std.math;\n/*\n Given a string, find out\
    \ how many distinct characters (regardless of case) does it consist of\n    >>>\
    \ count_distinct_characters(\"xyzXYZ\")\n    3L\n    >>> count_distinct_characters(\"\
    Jerry\")\n    4L\n    \n*/\nlong count_distinct_characters(string string) \n{\n\
    \    return string.toLower().toHashSet().length;\n}\nunittest\n{\n    alias candidate\
    \ = count_distinct_characters;\n\n    assert(candidate(\"\") == 0L);\n    assert(candidate(\"\
    abcde\") == 5L);\n    assert(candidate(\"abcdecadeCADE\") == 5L);\n    assert(candidate(\"\
    aaaaAAAAaaaa\") == 1L);\n    assert(candidate(\"Jerry jERRY JeRRRY\") == 5L);\n\
    }\nvoid main(){}"
  status: SyntaxError
  stderr: '/tmp/tmpnmx9hjr5.d(13): Error: no property `toLower` for type `string`

    Failed: ["dmd", "-unittest", "-v", "-o-", "/tmp/tmpnmx9hjr5.d", "-I/tmp"]

    '
  stdout: ''
  timestamp: 1660164539
- exit_code: 1
  program: "import std.typecons;\nimport std.math;\n/*\n Given a string, find out\
    \ how many distinct characters (regardless of case) does it consist of\n    >>>\
    \ count_distinct_characters(\"xyzXYZ\")\n    3L\n    >>> count_distinct_characters(\"\
    Jerry\")\n    4L\n    \n*/\nlong count_distinct_characters(string string) \n{\n\
    \    return set(string.toLowerCase).length;\n}\nunittest\n{\n    alias candidate\
    \ = count_distinct_characters;\n\n    assert(candidate(\"\") == 0L);\n    assert(candidate(\"\
    abcde\") == 5L);\n    assert(candidate(\"abcdecadeCADE\") == 5L);\n    assert(candidate(\"\
    aaaaAAAAaaaa\") == 1L);\n    assert(candidate(\"Jerry jERRY JeRRRY\") == 5L);\n\
    }\nvoid main(){}"
  status: SyntaxError
  stderr: '/tmp/tmp4lz5kksp.d(13): Error: undefined identifier `set`, did you mean
    template `get(K, V)(inout(V[K]) aa, K key, lazy inout(V) defaultValue)`?

    Failed: ["dmd", "-unittest", "-v", "-o-", "/tmp/tmp4lz5kksp.d", "-I/tmp"]

    '
  stdout: ''
  timestamp: 1660164539
- exit_code: 1
  program: "import std.typecons;\nimport std.math;\n/*\n Given a string, find out\
    \ how many distinct characters (regardless of case) does it consist of\n    >>>\
    \ count_distinct_characters(\"xyzXYZ\")\n    3L\n    >>> count_distinct_characters(\"\
    Jerry\")\n    4L\n    \n*/\nlong count_distinct_characters(string string) \n{\n\
    \    return string.toLower().length;\n}\nunittest\n{\n    alias candidate = count_distinct_characters;\n\
    \n    assert(candidate(\"\") == 0L);\n    assert(candidate(\"abcde\") == 5L);\n\
    \    assert(candidate(\"abcdecadeCADE\") == 5L);\n    assert(candidate(\"aaaaAAAAaaaa\"\
    ) == 1L);\n    assert(candidate(\"Jerry jERRY JeRRRY\") == 5L);\n}\nvoid main(){}"
  status: SyntaxError
  stderr: '/tmp/tmphfp3dody.d(13): Error: no property `toLower` for type `string`

    Failed: ["dmd", "-unittest", "-v", "-o-", "/tmp/tmphfp3dody.d", "-I/tmp"]

    '
  stdout: ''
  timestamp: 1660164539
- exit_code: 1
  program: "import std.typecons;\nimport std.math;\n/*\n Given a string, find out\
    \ how many distinct characters (regardless of case) does it consist of\n    >>>\
    \ count_distinct_characters(\"xyzXYZ\")\n    3L\n    >>> count_distinct_characters(\"\
    Jerry\")\n    4L\n    \n*/\nlong count_distinct_characters(string string) \n{\n\
    \    return set(string.toLowerCase).length;\n}\nunittest\n{\n    alias candidate\
    \ = count_distinct_characters;\n\n    assert(candidate(\"\") == 0L);\n    assert(candidate(\"\
    abcde\") == 5L);\n    assert(candidate(\"abcdecadeCADE\") == 5L);\n    assert(candidate(\"\
    aaaaAAAAaaaa\") == 1L);\n    assert(candidate(\"Jerry jERRY JeRRRY\") == 5L);\n\
    }\nvoid main(){}"
  status: SyntaxError
  stderr: '/tmp/tmp4lz5kksp.d(13): Error: undefined identifier `set`, did you mean
    template `get(K, V)(inout(V[K]) aa, K key, lazy inout(V) defaultValue)`?

    Failed: ["dmd", "-unittest", "-v", "-o-", "/tmp/tmp4lz5kksp.d", "-I/tmp"]

    '
  stdout: ''
  timestamp: 1660164539
- exit_code: 1
  program: "import std.typecons;\nimport std.math;\n/*\n Given a string, find out\
    \ how many distinct characters (regardless of case) does it consist of\n    >>>\
    \ count_distinct_characters(\"xyzXYZ\")\n    3L\n    >>> count_distinct_characters(\"\
    Jerry\")\n    4L\n    \n*/\nlong count_distinct_characters(string string) \n{\n\
    \    return set(string.toLower()).length;\n}\nunittest\n{\n    alias candidate\
    \ = count_distinct_characters;\n\n    assert(candidate(\"\") == 0L);\n    assert(candidate(\"\
    abcde\") == 5L);\n    assert(candidate(\"abcdecadeCADE\") == 5L);\n    assert(candidate(\"\
    aaaaAAAAaaaa\") == 1L);\n    assert(candidate(\"Jerry jERRY JeRRRY\") == 5L);\n\
    }\nvoid main(){}"
  status: SyntaxError
  stderr: '/tmp/tmp4fc64pj_.d(13): Error: undefined identifier `set`, did you mean
    template `get(K, V)(inout(V[K]) aa, K key, lazy inout(V) defaultValue)`?

    Failed: ["dmd", "-unittest", "-v", "-o-", "/tmp/tmp4fc64pj_.d", "-I/tmp"]

    '
  stdout: ''
  timestamp: 1660164539

name: HumanEval_105_by_length
language: d
prompt: "import std.typecons;\nimport std.math;\n/*\n\n    Given an array of integers,\
  \ sort the integers that are between 1 and 9 inclusive,\n    reverse the resulting\
  \ array, and then replace each digit by its corresponding name from\n    \"One\"\
  , \"Two\", \"Three\", \"Four\", \"Five\", \"Six\", \"Seven\", \"Eight\", \"Nine\"\
  .\n\n    For example:\n    >>> by_length([2L, 1L, 1L, 4L, 5L, 8L, 2L, 3L])\n   \
  \ [\"Eight\", \"Five\", \"Four\", \"Three\", \"Two\", \"Two\", \"One\", \"One\"\
  ]\n    \n      If the array is empty, return an empty array:\n    >>> by_length([])\n\
  \    []\n    \n      If the array has any strange number ignore it:\n    >>> by_length([1L,\
  \ -1L, 55L])\n    [\"One\"]\n    \n*/\nstring[] by_length(long[] arr) \n"
tests: "unittest\n{\n    alias candidate = by_length;\n\n    assert(candidate([2L,\
  \ 1L, 1L, 4L, 5L, 8L, 2L, 3L]) == [\"Eight\", \"Five\", \"Four\", \"Three\", \"\
  Two\", \"Two\", \"One\", \"One\"]);\n    assert(candidate([]) == []);\n    assert(candidate([1L,\
  \ -1L, 55L]) == [\"One\"]);\n    assert(candidate([1L, -1L, 3L, 2L]) == [\"Three\"\
  , \"Two\", \"One\"]);\n    assert(candidate([9L, 4L, 8L]) == [\"Nine\", \"Eight\"\
  , \"Four\"]);\n}\nvoid main(){}"
completions: ["{\n    // TODO: implement\n    return null;\n}", "{\n    string[] result\
    \ = new string[0];\n    long[] sorted = new long[0];\n    foreach(long i; arr)\n\
    \    {\n        if(i > 0 && i < 10)\n        {\n            sorted ~= i;\n   \
    \     }\n    }\n    sort(sorted);\n    foreach(long i; sorted)\n    {\n      \
    \  switch(i)\n        {\n            case 1:\n                result ~= \"One\"\
    ;\n                break;\n            case 2:\n                result ~= \"Two\"\
    ;\n                break;\n            case 3:\n                result ~= \"Three\"\
    ;\n                break;\n            case 4:\n                result ~= \"Four\"\
    ;\n                break;\n            case 5:\n                result ~= \"Five\"\
    ;\n                break;\n            case 6:\n                result ~= \"Six\"\
    ;\n                break;\n            case 7:\n                result ~= \"Seven\"\
    ;\n                break;\n            case 8:\n                result ~= \"Eight\"\
    ;\n                break;\n            case 9:\n                result ~= \"Nine\"\
    ;\n                break;\n        }\n    }\n    reverse(result);\n    return\
    \ result;\n}\n/*\n    Given an array of integers, sort the integers that are between\
    \ 1 and 9 inclusive,\n    reverse the resulting array, and then replace each digit\
    \ by its corresponding name from\n    \"One\", \"Two\", \"Three\", \"Four\", \"\
    Five\", \"Six\", \"Seven\", \"Eight\", \"Nine\".", "{\n    auto sorted = sort!((a,\
    \ b) => a < b)(arr);\n    auto reversed = sorted.reverse;\n    auto filtered =\
    \ filter!(x => x > 0 && x < 10)(reversed);\n    auto mapped = map!(x => to!string(x))(filtered);\n\
    \    return mapped;\n}", "{\n    string[] result = new string[];\n    foreach(elem;\
    \ arr)\n    {\n        if(elem > 0 && elem < 10)\n        {\n            result\
    \ ~= to!string(elem);\n        }\n    }\n    sort(result);\n    reverse(result);\n\
    \    foreach(elem; result)\n    {\n        switch(elem)\n        {\n         \
    \   case \"1\":\n                elem = \"One\";\n                break;\n   \
    \         case \"2\":\n                elem = \"Two\";\n                break;\n\
    \            case \"3\":\n                elem = \"Three\";\n                break;\n\
    \            case \"4\":\n                elem = \"Four\";\n                break;\n\
    \            case \"5\":\n                elem = \"Five\";\n                break;\n\
    \            case \"6\":\n                elem = \"Six\";\n                break;\n\
    \            case \"7\":\n                elem = \"Seven\";\n                break;\n\
    \            case \"8\":\n                elem = \"Eight\";\n                break;\n\
    \            case \"9\":\n                elem = \"Nine\";\n                break;\n\
    \        }\n    }\n    return result;\n}", "{\n    string[] result = new string[0];\n\
    \    foreach(long i; arr)\n    {\n        if(i > 0 && i < 10)\n        {\n   \
    \         result ~= to!string(i);\n        }\n    }\n    result.sort;\n    result.reverse;\n\
    \    foreach(ref string s; result)\n    {\n        switch(s)\n        {\n    \
    \        case \"1\": s = \"One\"; break;\n            case \"2\": s = \"Two\"\
    ; break;\n            case \"3\": s = \"Three\"; break;\n            case \"4\"\
    : s = \"Four\"; break;\n            case \"5\": s = \"Five\"; break;\n       \
    \     case \"6\": s = \"Six\"; break;\n            case \"7\": s = \"Seven\";\
    \ break;\n            case \"8\": s = \"Eight\"; break;\n            case \"9\"\
    : s = \"Nine\"; break;\n        }\n    }\n    return result;\n}", "{\n    string[]\
    \ result = new string[0];\n    foreach(long i; arr)\n    {\n        if(i > 0 &&\
    \ i < 10)\n        {\n            result ~= to!string(i);\n        }\n    }\n\
    \    sort(result);\n    reverse(result);\n    foreach(ref string i; result)\n\
    \    {\n        switch(i)\n        {\n            case \"1\": i = \"One\"; break;\n\
    \            case \"2\": i = \"Two\"; break;\n            case \"3\": i = \"Three\"\
    ; break;\n            case \"4\": i = \"Four\"; break;\n            case \"5\"\
    : i = \"Five\"; break;\n            case \"6\": i = \"Six\"; break;\n        \
    \    case \"7\": i = \"Seven\"; break;\n            case \"8\": i = \"Eight\"\
    ; break;\n            case \"9\": i = \"Nine\"; break;\n        }\n    }\n   \
    \ return result;\n}", "{\n    string[] result = new string[];\n    foreach(elem;\
    \ arr)\n    {\n        if(elem >= 1 && elem <= 9)\n        {\n            switch(elem)\n\
    \            {\n                case 1:\n                    result ~= \"One\"\
    ;\n                    break;\n                case 2:\n                    result\
    \ ~= \"Two\";\n                    break;\n                case 3:\n         \
    \           result ~= \"Three\";\n                    break;\n               \
    \ case 4:\n                    result ~= \"Four\";\n                    break;\n\
    \                case 5:\n                    result ~= \"Five\";\n          \
    \          break;\n                case 6:\n                    result ~= \"Six\"\
    ;\n                    break;\n                case 7:\n                    result\
    \ ~= \"Seven\";\n                    break;\n                case 8:\n       \
    \             result ~= \"Eight\";\n                    break;\n             \
    \   case 9:\n                    result ~= \"Nine\";\n                    break;\n\
    \            }\n        }\n    }\n    result = result.sort();\n    result = result.reverse();\n\
    \    return result;\n}", "{\n    string[] result = new string[arr.length];\n \
    \   foreach(i, e; arr)\n    {\n        if(e > 0 && e < 10)\n        {\n      \
    \      result[i] = to!string(e);\n        }\n    }\n    result = result.sort();\n\
    \    result = result.reverse();\n    foreach(i, e; result)\n    {\n        switch(e)\n\
    \        {\n            case \"1\":\n                result[i] = \"One\";\n  \
    \              break;\n            case \"2\":\n                result[i] = \"\
    Two\";\n                break;\n            case \"3\":\n                result[i]\
    \ = \"Three\";\n                break;\n            case \"4\":\n            \
    \    result[i] = \"Four\";\n                break;\n            case \"5\":\n\
    \                result[i] = \"Five\";\n                break;\n            case\
    \ \"6\":\n                result[i] = \"Six\";\n                break;\n     \
    \       case \"7\":\n                result[i] = \"Seven\";\n                break;\n\
    \            case \"8\":\n                result[i] = \"Eight\";\n           \
    \     break;\n            case \"9\":\n                result[i] = \"Nine\";\n\
    \                break;\n        }\n    }\n    return result;\n}", "{\n    string[]\
    \ result;\n    long[] sorted = arr.filter!(x => x > 0 && x < 10).sort!q{a > b};\n\
    \    foreach(x; sorted)\n    {\n        switch(x)\n        {\n            case\
    \ 1:\n                result ~= \"One\";\n                break;\n           \
    \ case 2:\n                result ~= \"Two\";\n                break;\n      \
    \      case 3:\n                result ~= \"Three\";\n                break;\n\
    \            case 4:\n                result ~= \"Four\";\n                break;\n\
    \            case 5:\n                result ~= \"Five\";\n                break;\n\
    \            case 6:\n                result ~= \"Six\";\n                break;\n\
    \            case 7:\n                result ~= \"Seven\";\n                break;\n\
    \            case 8:\n                result ~= \"Eight\";\n                break;\n\
    \            case 9:\n                result ~= \"Nine\";\n                break;\n\
    \        }\n    }\n    return result;\n}", "{\n    string[] result;\n    foreach(elem;\
    \ arr)\n    {\n        if(elem > 0 && elem < 10)\n        {\n            result\
    \ ~= to!string(elem);\n        }\n    }\n    sort(result);\n    reverse(result);\n\
    \    return result;\n}", "{\n    string[] result = [];\n    foreach(elem; arr)\n\
    \    {\n        if(elem > 0 && elem < 10)\n        {\n            result ~= to!string(elem);\n\
    \        }\n    }\n    sort(result);\n    reverse(result);\n    foreach(elem;\
    \ result)\n    {\n        switch(to!int(elem))\n        {\n            case 1:\n\
    \                elem = \"One\";\n                break;\n            case 2:\n\
    \                elem = \"Two\";\n                break;\n            case 3:\n\
    \                elem = \"Three\";\n                break;\n            case 4:\n\
    \                elem = \"Four\";\n                break;\n            case 5:\n\
    \                elem = \"Five\";\n                break;\n            case 6:\n\
    \                elem = \"Six\";\n                break;\n            case 7:\n\
    \                elem = \"Seven\";\n                break;\n            case 8:\n\
    \                elem = \"Eight\";\n                break;\n            case 9:\n\
    \                elem = \"Nine\";\n                break;\n        }\n    }\n\
    \    return result;\n}", "{\n    string[] result;\n    long[] sorted = arr.filter!(a\
    \ => a >= 1 && a <= 9).sort;\n    result = sorted.map!(a => to!string(a)).reverse;\n\
    \    return result;\n}", "{\n    string[] result;\n    foreach(elem; arr)\n  \
    \  {\n        if(elem > 0 && elem < 10)\n        {\n            result ~= to!string(elem);\n\
    \        }\n    }\n    result.sort!((a, b) => a.length > b.length);\n    result.reverse;\n\
    \    foreach(elem; result)\n    {\n        switch(elem)\n        {\n         \
    \   case \"1\":\n                elem = \"One\";\n                break;\n   \
    \         case \"2\":\n                elem = \"Two\";\n                break;\n\
    \            case \"3\":\n                elem = \"Three\";\n                break;\n\
    \            case \"4\":\n                elem = \"Four\";\n                break;\n\
    \            case \"5\":\n                elem = \"Five\";\n                break;\n\
    \            case \"6\":\n                elem = \"Six\";\n                break;\n\
    \            case \"7\":\n                elem = \"Seven\";\n                break;\n\
    \            case \"8\":\n                elem = \"Eight\";\n                break;\n\
    \            case \"9\":\n                elem = \"Nine\";\n                break;\n\
    \        }\n    }\n    return result;\n}", "{\n    // TODO: Implement me!\n  \
    \  return null;\n}", "{\n    string[] result = [];\n    if (arr.length == 0)\n\
    \        return result;\n    foreach (elem; arr)\n    {\n        if (elem >= 1\
    \ && elem <= 9)\n            result ~= to!string(elem);\n    }\n    result.sort!((a,\
    \ b) => a.length > b.length);\n    result.reverse;\n    result = result.map!(a\
    \ => a.replace(\"1\", \"One\").replace(\"2\", \"Two\").replace(\"3\", \"Three\"\
    ).replace(\"4\", \"Four\").replace(\"5\", \"Five\").replace(\"6\", \"Six\").replace(\"\
    7\", \"Seven\").replace(\"8\", \"Eight\").replace(\"9\", \"Nine\"));\n    return\
    \ result;\n}", "{\n    string[] result;\n    foreach(i; arr)\n    {\n        if(i\
    \ > 0 && i < 10)\n        {\n            result ~= to!string(i);\n        }\n\
    \    }\n    sort(result);\n    reverse(result);\n    foreach(i; result)\n    {\n\
    \        switch(i)\n        {\n            case \"1\":\n                i = \"\
    One\";\n                break;\n            case \"2\":\n                i = \"\
    Two\";\n                break;\n            case \"3\":\n                i = \"\
    Three\";\n                break;\n            case \"4\":\n                i =\
    \ \"Four\";\n                break;\n            case \"5\":\n               \
    \ i = \"Five\";\n                break;\n            case \"6\":\n           \
    \     i = \"Six\";\n                break;\n            case \"7\":\n        \
    \        i = \"Seven\";\n                break;\n            case \"8\":\n   \
    \             i = \"Eight\";\n                break;\n            case \"9\":\n\
    \                i = \"Nine\";\n                break;\n        }\n    }\n   \
    \ return result;\n}", "{\n    string[] result;\n    foreach(elem; arr)\n    {\n\
    \        if(elem > 0 && elem < 10)\n        {\n            result ~= to!string(elem);\n\
    \        }\n    }\n    sort(result);\n    reverse(result);\n    return result;\n\
    }", "{\n    // your code here\n    return arr.filter!(a => a > 0 && a < 10).sort.reverse.map!(a\
    \ => [\"One\", \"Two\", \"Three\", \"Four\", \"Five\", \"Six\", \"Seven\", \"\
    Eight\", \"Nine\"][a - 1]);\n}", "{\n    string[] result = new string[arr.length];\n\
    \    int j = 0;\n    foreach(i; arr)\n    {\n        if(i > 0 && i < 10)\n   \
    \     {\n            result[j] = to!string(i);\n            j++;\n        }\n\
    \    }\n    result = result[0..j];\n    sort(result);\n    reverse(result);\n\
    \    foreach(i; 0..result.length)\n    {\n        switch(result[i])\n        {\n\
    \            case \"1\":\n                result[i] = \"One\";\n             \
    \   break;\n            case \"2\":\n                result[i] = \"Two\";\n  \
    \              break;\n            case \"3\":\n                result[i] = \"\
    Three\";\n                break;\n            case \"4\":\n                result[i]\
    \ = \"Four\";\n                break;\n            case \"5\":\n             \
    \   result[i] = \"Five\";\n                break;\n            case \"6\":\n \
    \               result[i] = \"Six\";\n                break;\n            case\
    \ \"7\":\n                result[i] = \"Seven\";\n                break;\n   \
    \         case \"8\":\n                result[i] = \"Eight\";\n              \
    \  break;\n            case \"9\":\n                result[i] = \"Nine\";\n  \
    \              break;\n        }\n    }\n    return result;\n}", "{\n    auto\
    \ result = arr.filter!(a => a > 0 && a < 10).sort.reverse;\n    return result.map!(a\
    \ => [\"One\", \"Two\", \"Three\", \"Four\", \"Five\", \"Six\", \"Seven\", \"\
    Eight\", \"Nine\"][a - 1]);\n}"]
stop_tokens:
- "\n\n"
- "\nvoid"
- "\nbool"
- "\nint"

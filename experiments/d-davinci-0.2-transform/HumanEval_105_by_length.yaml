name: HumanEval_105_by_length
language: d
prompt: "import std.typecons;\nimport std.math;\n/*\n\n    Given an array of integers,\
  \ sort the integers that are between 1 and 9 inclusive,\n    reverse the resulting\
  \ array, and then replace each digit by its corresponding name from\n    \"One\"\
  , \"Two\", \"Three\", \"Four\", \"Five\", \"Six\", \"Seven\", \"Eight\", \"Nine\"\
  .\n\n    For example:\n    >>> by_length([2L, 1L, 1L, 4L, 5L, 8L, 2L, 3L])\n   \
  \ [\"Eight\", \"Five\", \"Four\", \"Three\", \"Two\", \"Two\", \"One\", \"One\"\
  ]\n    \n      If the array is empty, return an empty array:\n    >>> by_length([])\n\
  \    []\n    \n      If the array has any strange number ignore it:\n    >>> by_length([1L,\
  \ -1L, 55L])\n    [\"One\"]\n    \n*/\nstring[] by_length(long[] arr) \n"
tests: "unittest\n{\n    alias candidate = by_length;\n\n    assert(candidate([2L,\
  \ 1L, 1L, 4L, 5L, 8L, 2L, 3L]) == [\"Eight\", \"Five\", \"Four\", \"Three\", \"\
  Two\", \"Two\", \"One\", \"One\"]);\n    assert(candidate([]) == []);\n    assert(candidate([1L,\
  \ -1L, 55L]) == [\"One\"]);\n    assert(candidate([1L, -1L, 3L, 2L]) == [\"Three\"\
  , \"Two\", \"One\"]);\n    assert(candidate([9L, 4L, 8L]) == [\"Nine\", \"Eight\"\
  , \"Four\"]);\n}\nvoid main(){}"
completions: ["{\n    // TODO: implement\n    return null;\n}", "{\n    string[] result\
    \ = new string[0];\n    long[] sorted = new long[0];\n    foreach(long i; arr)\n\
    \    {\n        if(i > 0 && i < 10)\n        {\n            sorted ~= i;\n   \
    \     }\n    }\n    sort(sorted);\n    foreach(long i; sorted)\n    {\n      \
    \  switch(i)\n        {\n            case 1:\n                result ~= \"One\"\
    ;\n                break;\n            case 2:\n                result ~= \"Two\"\
    ;\n                break;\n            case 3:\n                result ~= \"Three\"\
    ;\n                break;\n            case 4:\n                result ~= \"Four\"\
    ;\n                break;\n            case 5:\n                result ~= \"Five\"\
    ;\n                break;\n            case 6:\n                result ~= \"Six\"\
    ;\n                break;\n            case 7:\n                result ~= \"Seven\"\
    ;\n                break;\n            case 8:\n                result ~= \"Eight\"\
    ;\n                break;\n            case 9:\n                result ~= \"Nine\"\
    ;\n                break;\n        }\n    }\n    reverse(result);\n    return\
    \ result;\n}\n/*\n    Given an array of integers, sort the integers that are between\
    \ 1 and 9 inclusive,\n    reverse the resulting array, and then replace each digit\
    \ by its corresponding name from\n    \"One\", \"Two\", \"Three\", \"Four\", \"\
    Five\", \"Six\", \"Seven\", \"Eight\", \"Nine\".", "{\n    auto sorted = sort!((a,\
    \ b) => a < b)(arr);\n    auto reversed = sorted.reverse;\n    auto filtered =\
    \ filter!(x => x > 0 && x < 10)(reversed);\n    auto mapped = map!(x => to!string(x))(filtered);\n\
    \    return mapped;\n}", "{\n    string[] result = new string[];\n    foreach(elem;\
    \ arr)\n    {\n        if(elem > 0 && elem < 10)\n        {\n            result\
    \ ~= to!string(elem);\n        }\n    }\n    sort(result);\n    reverse(result);\n\
    \    foreach(elem; result)\n    {\n        switch(elem)\n        {\n         \
    \   case \"1\":\n                elem = \"One\";\n                break;\n   \
    \         case \"2\":\n                elem = \"Two\";\n                break;\n\
    \            case \"3\":\n                elem = \"Three\";\n                break;\n\
    \            case \"4\":\n                elem = \"Four\";\n                break;\n\
    \            case \"5\":\n                elem = \"Five\";\n                break;\n\
    \            case \"6\":\n                elem = \"Six\";\n                break;\n\
    \            case \"7\":\n                elem = \"Seven\";\n                break;\n\
    \            case \"8\":\n                elem = \"Eight\";\n                break;\n\
    \            case \"9\":\n                elem = \"Nine\";\n                break;\n\
    \        }\n    }\n    return result;\n}", "{\n    string[] result = new string[0];\n\
    \    foreach(long i; arr)\n    {\n        if(i > 0 && i < 10)\n        {\n   \
    \         result ~= to!string(i);\n        }\n    }\n    result.sort;\n    result.reverse;\n\
    \    foreach(ref string s; result)\n    {\n        switch(s)\n        {\n    \
    \        case \"1\": s = \"One\"; break;\n            case \"2\": s = \"Two\"\
    ; break;\n            case \"3\": s = \"Three\"; break;\n            case \"4\"\
    : s = \"Four\"; break;\n            case \"5\": s = \"Five\"; break;\n       \
    \     case \"6\": s = \"Six\"; break;\n            case \"7\": s = \"Seven\";\
    \ break;\n            case \"8\": s = \"Eight\"; break;\n            case \"9\"\
    : s = \"Nine\"; break;\n        }\n    }\n    return result;\n}", "{\n    string[]\
    \ result = new string[0];\n    foreach(long i; arr)\n    {\n        if(i > 0 &&\
    \ i < 10)\n        {\n            result ~= to!string(i);\n        }\n    }\n\
    \    sort(result);\n    reverse(result);\n    foreach(ref string i; result)\n\
    \    {\n        switch(i)\n        {\n            case \"1\": i = \"One\"; break;\n\
    \            case \"2\": i = \"Two\"; break;\n            case \"3\": i = \"Three\"\
    ; break;\n            case \"4\": i = \"Four\"; break;\n            case \"5\"\
    : i = \"Five\"; break;\n            case \"6\": i = \"Six\"; break;\n        \
    \    case \"7\": i = \"Seven\"; break;\n            case \"8\": i = \"Eight\"\
    ; break;\n            case \"9\": i = \"Nine\"; break;\n        }\n    }\n   \
    \ return result;\n}", "{\n    string[] result = new string[];\n    foreach(elem;\
    \ arr)\n    {\n        if(elem >= 1 && elem <= 9)\n        {\n            switch(elem)\n\
    \            {\n                case 1:\n                    result ~= \"One\"\
    ;\n                    break;\n                case 2:\n                    result\
    \ ~= \"Two\";\n                    break;\n                case 3:\n         \
    \           result ~= \"Three\";\n                    break;\n               \
    \ case 4:\n                    result ~= \"Four\";\n                    break;\n\
    \                case 5:\n                    result ~= \"Five\";\n          \
    \          break;\n                case 6:\n                    result ~= \"Six\"\
    ;\n                    break;\n                case 7:\n                    result\
    \ ~= \"Seven\";\n                    break;\n                case 8:\n       \
    \             result ~= \"Eight\";\n                    break;\n             \
    \   case 9:\n                    result ~= \"Nine\";\n                    break;\n\
    \            }\n        }\n    }\n    result = result.sort();\n    result = result.reverse();\n\
    \    return result;\n}", "{\n    string[] result = new string[arr.length];\n \
    \   foreach(i, e; arr)\n    {\n        if(e > 0 && e < 10)\n        {\n      \
    \      result[i] = to!string(e);\n        }\n    }\n    result = result.sort();\n\
    \    result = result.reverse();\n    foreach(i, e; result)\n    {\n        switch(e)\n\
    \        {\n            case \"1\":\n                result[i] = \"One\";\n  \
    \              break;\n            case \"2\":\n                result[i] = \"\
    Two\";\n                break;\n            case \"3\":\n                result[i]\
    \ = \"Three\";\n                break;\n            case \"4\":\n            \
    \    result[i] = \"Four\";\n                break;\n            case \"5\":\n\
    \                result[i] = \"Five\";\n                break;\n            case\
    \ \"6\":\n                result[i] = \"Six\";\n                break;\n     \
    \       case \"7\":\n                result[i] = \"Seven\";\n                break;\n\
    \            case \"8\":\n                result[i] = \"Eight\";\n           \
    \     break;\n            case \"9\":\n                result[i] = \"Nine\";\n\
    \                break;\n        }\n    }\n    return result;\n}", "{\n    string[]\
    \ result;\n    long[] sorted = arr.filter!(x => x > 0 && x < 10).sort!q{a > b};\n\
    \    foreach(x; sorted)\n    {\n        switch(x)\n        {\n            case\
    \ 1:\n                result ~= \"One\";\n                break;\n           \
    \ case 2:\n                result ~= \"Two\";\n                break;\n      \
    \      case 3:\n                result ~= \"Three\";\n                break;\n\
    \            case 4:\n                result ~= \"Four\";\n                break;\n\
    \            case 5:\n                result ~= \"Five\";\n                break;\n\
    \            case 6:\n                result ~= \"Six\";\n                break;\n\
    \            case 7:\n                result ~= \"Seven\";\n                break;\n\
    \            case 8:\n                result ~= \"Eight\";\n                break;\n\
    \            case 9:\n                result ~= \"Nine\";\n                break;\n\
    \        }\n    }\n    return result;\n}", "{\n    string[] result;\n    foreach(elem;\
    \ arr)\n    {\n        if(elem > 0 && elem < 10)\n        {\n            result\
    \ ~= to!string(elem);\n        }\n    }\n    sort(result);\n    reverse(result);\n\
    \    return result;\n}", "{\n    string[] result = [];\n    foreach(elem; arr)\n\
    \    {\n        if(elem > 0 && elem < 10)\n        {\n            result ~= to!string(elem);\n\
    \        }\n    }\n    sort(result);\n    reverse(result);\n    foreach(elem;\
    \ result)\n    {\n        switch(to!int(elem))\n        {\n            case 1:\n\
    \                elem = \"One\";\n                break;\n            case 2:\n\
    \                elem = \"Two\";\n                break;\n            case 3:\n\
    \                elem = \"Three\";\n                break;\n            case 4:\n\
    \                elem = \"Four\";\n                break;\n            case 5:\n\
    \                elem = \"Five\";\n                break;\n            case 6:\n\
    \                elem = \"Six\";\n                break;\n            case 7:\n\
    \                elem = \"Seven\";\n                break;\n            case 8:\n\
    \                elem = \"Eight\";\n                break;\n            case 9:\n\
    \                elem = \"Nine\";\n                break;\n        }\n    }\n\
    \    return result;\n}", "{\n    string[] result;\n    long[] sorted = arr.filter!(a\
    \ => a >= 1 && a <= 9).sort;\n    result = sorted.map!(a => to!string(a)).reverse;\n\
    \    return result;\n}", "{\n    string[] result;\n    foreach(elem; arr)\n  \
    \  {\n        if(elem > 0 && elem < 10)\n        {\n            result ~= to!string(elem);\n\
    \        }\n    }\n    result.sort!((a, b) => a.length > b.length);\n    result.reverse;\n\
    \    foreach(elem; result)\n    {\n        switch(elem)\n        {\n         \
    \   case \"1\":\n                elem = \"One\";\n                break;\n   \
    \         case \"2\":\n                elem = \"Two\";\n                break;\n\
    \            case \"3\":\n                elem = \"Three\";\n                break;\n\
    \            case \"4\":\n                elem = \"Four\";\n                break;\n\
    \            case \"5\":\n                elem = \"Five\";\n                break;\n\
    \            case \"6\":\n                elem = \"Six\";\n                break;\n\
    \            case \"7\":\n                elem = \"Seven\";\n                break;\n\
    \            case \"8\":\n                elem = \"Eight\";\n                break;\n\
    \            case \"9\":\n                elem = \"Nine\";\n                break;\n\
    \        }\n    }\n    return result;\n}", "{\n    // TODO: Implement me!\n  \
    \  return null;\n}", "{\n    string[] result = [];\n    if (arr.length == 0)\n\
    \        return result;\n    foreach (elem; arr)\n    {\n        if (elem >= 1\
    \ && elem <= 9)\n            result ~= to!string(elem);\n    }\n    result.sort!((a,\
    \ b) => a.length > b.length);\n    result.reverse;\n    result = result.map!(a\
    \ => a.replace(\"1\", \"One\").replace(\"2\", \"Two\").replace(\"3\", \"Three\"\
    ).replace(\"4\", \"Four\").replace(\"5\", \"Five\").replace(\"6\", \"Six\").replace(\"\
    7\", \"Seven\").replace(\"8\", \"Eight\").replace(\"9\", \"Nine\"));\n    return\
    \ result;\n}", "{\n    string[] result;\n    foreach(i; arr)\n    {\n        if(i\
    \ > 0 && i < 10)\n        {\n            result ~= to!string(i);\n        }\n\
    \    }\n    sort(result);\n    reverse(result);\n    foreach(i; result)\n    {\n\
    \        switch(i)\n        {\n            case \"1\":\n                i = \"\
    One\";\n                break;\n            case \"2\":\n                i = \"\
    Two\";\n                break;\n            case \"3\":\n                i = \"\
    Three\";\n                break;\n            case \"4\":\n                i =\
    \ \"Four\";\n                break;\n            case \"5\":\n               \
    \ i = \"Five\";\n                break;\n            case \"6\":\n           \
    \     i = \"Six\";\n                break;\n            case \"7\":\n        \
    \        i = \"Seven\";\n                break;\n            case \"8\":\n   \
    \             i = \"Eight\";\n                break;\n            case \"9\":\n\
    \                i = \"Nine\";\n                break;\n        }\n    }\n   \
    \ return result;\n}", "{\n    string[] result;\n    foreach(elem; arr)\n    {\n\
    \        if(elem > 0 && elem < 10)\n        {\n            result ~= to!string(elem);\n\
    \        }\n    }\n    sort(result);\n    reverse(result);\n    return result;\n\
    }", "{\n    // your code here\n    return arr.filter!(a => a > 0 && a < 10).sort.reverse.map!(a\
    \ => [\"One\", \"Two\", \"Three\", \"Four\", \"Five\", \"Six\", \"Seven\", \"\
    Eight\", \"Nine\"][a - 1]);\n}", "{\n    string[] result = new string[arr.length];\n\
    \    int j = 0;\n    foreach(i; arr)\n    {\n        if(i > 0 && i < 10)\n   \
    \     {\n            result[j] = to!string(i);\n            j++;\n        }\n\
    \    }\n    result = result[0..j];\n    sort(result);\n    reverse(result);\n\
    \    foreach(i; 0..result.length)\n    {\n        switch(result[i])\n        {\n\
    \            case \"1\":\n                result[i] = \"One\";\n             \
    \   break;\n            case \"2\":\n                result[i] = \"Two\";\n  \
    \              break;\n            case \"3\":\n                result[i] = \"\
    Three\";\n                break;\n            case \"4\":\n                result[i]\
    \ = \"Four\";\n                break;\n            case \"5\":\n             \
    \   result[i] = \"Five\";\n                break;\n            case \"6\":\n \
    \               result[i] = \"Six\";\n                break;\n            case\
    \ \"7\":\n                result[i] = \"Seven\";\n                break;\n   \
    \         case \"8\":\n                result[i] = \"Eight\";\n              \
    \  break;\n            case \"9\":\n                result[i] = \"Nine\";\n  \
    \              break;\n        }\n    }\n    return result;\n}", "{\n    auto\
    \ result = arr.filter!(a => a > 0 && a < 10).sort.reverse;\n    return result.map!(a\
    \ => [\"One\", \"Two\", \"Three\", \"Four\", \"Five\", \"Six\", \"Seven\", \"\
    Eight\", \"Nine\"][a - 1]);\n}", "{\n    string[] result = new string[0];\n  \
    \  foreach(i; arr)\n    {\n        if(i > 0 && i < 10)\n        {\n          \
    \  result ~= to!string(i);\n        }\n    }\n    sort(result);\n    reverse(result);\n\
    \    foreach(i; result)\n    {\n        switch(i)\n        {\n            case\
    \ \"1\":\n                i = \"One\";\n                break;\n            case\
    \ \"2\":\n                i = \"Two\";\n                break;\n            case\
    \ \"3\":\n                i = \"Three\";\n                break;\n           \
    \ case \"4\":\n                i = \"Four\";\n                break;\n       \
    \     case \"5\":\n                i = \"Five\";\n                break;\n   \
    \         case \"6\":\n                i = \"Six\";\n                break;\n\
    \            case \"7\":\n                i = \"Seven\";\n                break;\n\
    \            case \"8\":\n                i = \"Eight\";\n                break;\n\
    \            case \"9\":\n                i = \"Nine\";\n                break;\n\
    \        }\n    }\n    return result;\n}", "{\n    string[] result = new string[0];\n\
    \    foreach(long i; arr)\n    {\n        if(i > 0 && i < 10)\n        {\n   \
    \         result ~= to!string(i);\n        }\n    }\n    sort(result);\n    reverse(result);\n\
    \    foreach(i, ref s; result)\n    {\n        switch(to!long(s))\n        {\n\
    \            case 1:\n                s = \"One\";\n                break;\n \
    \           case 2:\n                s = \"Two\";\n                break;\n  \
    \          case 3:\n                s = \"Three\";\n                break;\n \
    \           case 4:\n                s = \"Four\";\n                break;\n \
    \           case 5:\n                s = \"Five\";\n                break;\n \
    \           case 6:\n                s = \"Six\";\n                break;\n  \
    \          case 7:\n                s = \"Seven\";\n                break;\n \
    \           case 8:\n                s = \"Eight\";\n                break;\n\
    \            case 9:\n                s = \"Nine\";\n                break;\n\
    \        }\n    }\n    return result;\n}", "{\n    string[] res = new string[0];\n\
    \    foreach(i; arr)\n    {\n        if(i >= 1 && i <= 9)\n        {\n       \
    \     res ~= to!string(i);\n        }\n    }\n    res.sort;\n    res.reverse;\n\
    \    foreach(i; 0..res.length)\n    {\n        res[i] = to!string(to!long(res[i]));\n\
    \    }\n    return res;\n}", "{\n    // TODO: implement this function\n    return\
    \ null;\n}", "{\n    string[] result = new string[];\n    foreach(i; arr)\n  \
    \  {\n        if(i > 0 && i < 10)\n        {\n            switch(i)\n        \
    \    {\n                case 1:\n                    result ~= \"One\";\n    \
    \                break;\n                case 2:\n                    result ~=\
    \ \"Two\";\n                    break;\n                case 3:\n            \
    \        result ~= \"Three\";\n                    break;\n                case\
    \ 4:\n                    result ~= \"Four\";\n                    break;\n  \
    \              case 5:\n                    result ~= \"Five\";\n            \
    \        break;\n                case 6:\n                    result ~= \"Six\"\
    ;\n                    break;\n                case 7:\n                    result\
    \ ~= \"Seven\";\n                    break;\n                case 8:\n       \
    \             result ~= \"Eight\";\n                    break;\n             \
    \   case 9:\n                    result ~= \"Nine\";\n                    break;\n\
    \            }\n        }\n    }\n    result.sort;\n    result.reverse;\n    return\
    \ result;\n}", "{\n    string[] result;\n    foreach(i; arr)\n    {\n        if(i\
    \ > 0 && i < 10)\n        {\n            result ~= to!string(i);\n        }\n\
    \    }\n    sort(result);\n    reverse(result);\n    foreach(i; result)\n    {\n\
    \        switch(i)\n        {\n            case \"1\":\n                i = \"\
    One\";\n                break;\n            case \"2\":\n                i = \"\
    Two\";\n                break;\n            case \"3\":\n                i = \"\
    Three\";\n                break;\n            case \"4\":\n                i =\
    \ \"Four\";\n                break;\n            case \"5\":\n               \
    \ i = \"Five\";\n                break;\n            case \"6\":\n           \
    \     i = \"Six\";\n                break;\n            case \"7\":\n        \
    \        i = \"Seven\";\n                break;\n            case \"8\":\n   \
    \             i = \"Eight\";\n                break;\n            case \"9\":\n\
    \                i = \"Nine\";\n                break;\n        }\n    }\n   \
    \ return result;\n}", "{\n    // TODO: implement by_length\n    return null;\n\
    }", "{\n    long[] sorted = arr.filter!(a => a > 0 && a < 10).sort!((a, b) =>\
    \ a > b);\n    string[] result = new string[sorted.length];\n    foreach(i, v;\
    \ sorted)\n    {\n        switch(v)\n        {\n            case 1:\n        \
    \        result[i] = \"One\";\n                break;\n            case 2:\n \
    \               result[i] = \"Two\";\n                break;\n            case\
    \ 3:\n                result[i] = \"Three\";\n                break;\n       \
    \     case 4:\n                result[i] = \"Four\";\n                break;\n\
    \            case 5:\n                result[i] = \"Five\";\n                break;\n\
    \            case 6:\n                result[i] = \"Six\";\n                break;\n\
    \            case 7:\n                result[i] = \"Seven\";\n               \
    \ break;\n            case 8:\n                result[i] = \"Eight\";\n      \
    \          break;\n            case 9:\n                result[i] = \"Nine\";\n\
    \                break;\n        }\n    }\n    return result.reverse;\n}", "{\n\
    \    string[] result;\n    foreach(i; arr)\n    {\n        if(i > 0 && i < 10)\n\
    \        {\n            result ~= to!string(i);\n        }\n    }\n    sort(result);\n\
    \    reverse(result);\n    foreach(i; 0..result.length)\n    {\n        switch(result[i])\n\
    \        {\n            case \"1\":\n                result[i] = \"One\";\n  \
    \              break;\n            case \"2\":\n                result[i] = \"\
    Two\";\n                break;\n            case \"3\":\n                result[i]\
    \ = \"Three\";\n                break;\n            case \"4\":\n            \
    \    result[i] = \"Four\";\n                break;\n            case \"5\":\n\
    \                result[i] = \"Five\";\n                break;\n            case\
    \ \"6\":\n                result[i] = \"Six\";\n                break;\n     \
    \       case \"7\":\n                result[i] = \"Seven\";\n                break;\n\
    \            case \"8\":\n                result[i] = \"Eight\";\n           \
    \     break;\n            case \"9\":\n                result[i] = \"Nine\";\n\
    \                break;\n        }\n    }\n    return result;\n}", "{\n    string[]\
    \ result = new string[0];\n    foreach(elem; arr)\n    {\n        if(elem > 0\
    \ && elem < 10)\n        {\n            result ~= to!string(elem);\n        }\n\
    \    }\n    sort(result);\n    reverse(result);\n    foreach(i, elem; result)\n\
    \    {\n        switch(elem)\n        {\n            case \"1\":\n           \
    \     result[i] = \"One\";\n                break;\n            case \"2\":\n\
    \                result[i] = \"Two\";\n                break;\n            case\
    \ \"3\":\n                result[i] = \"Three\";\n                break;\n   \
    \         case \"4\":\n                result[i] = \"Four\";\n               \
    \ break;\n            case \"5\":\n                result[i] = \"Five\";\n   \
    \             break;\n            case \"6\":\n                result[i] = \"\
    Six\";\n                break;\n            case \"7\":\n                result[i]\
    \ = \"Seven\";\n                break;\n            case \"8\":\n            \
    \    result[i] = \"Eight\";\n                break;\n            case \"9\":\n\
    \                result[i] = \"Nine\";\n                break;\n        }\n  \
    \  }\n    return result;\n}", "{\n    string[] result;\n    foreach(e; arr)\n\
    \    {\n        if(e > 0 && e < 10)\n        {\n            result ~= to!string(e);\n\
    \        }\n    }\n    sort(result);\n    reverse(result);\n    foreach(i, e;\
    \ result)\n    {\n        switch(e)\n        {\n            case \"1\":\n    \
    \            result[i] = \"One\";\n                break;\n            case \"\
    2\":\n                result[i] = \"Two\";\n                break;\n         \
    \   case \"3\":\n                result[i] = \"Three\";\n                break;\n\
    \            case \"4\":\n                result[i] = \"Four\";\n            \
    \    break;\n            case \"5\":\n                result[i] = \"Five\";\n\
    \                break;\n            case \"6\":\n                result[i] =\
    \ \"Six\";\n                break;\n            case \"7\":\n                result[i]\
    \ = \"Seven\";\n                break;\n            case \"8\":\n            \
    \    result[i] = \"Eight\";\n                break;\n            case \"9\":\n\
    \                result[i] = \"Nine\";\n                break;\n        }\n  \
    \  }\n    return result;\n}", "{\n    string[] result = new string[arr.length];\n\
    \    int i = 0;\n    foreach(long l; arr)\n    {\n        if(l > 0 && l < 10)\n\
    \        {\n            result[i] = l.to!string;\n            i++;\n        }\n\
    \    }\n    result = result[0..i];\n    sort(result);\n    reverse(result);\n\
    \    foreach(ref string s; result)\n    {\n        switch(s)\n        {\n    \
    \        case \"1\": s = \"One\"; break;\n            case \"2\": s = \"Two\"\
    ; break;\n            case \"3\": s = \"Three\"; break;\n            case \"4\"\
    : s = \"Four\"; break;\n            case \"5\": s = \"Five\"; break;\n       \
    \     case \"6\": s = \"Six\"; break;\n            case \"7\": s = \"Seven\";\
    \ break;\n            case \"8\": s = \"Eight\"; break;\n            case \"9\"\
    : s = \"Nine\"; break;\n        }\n    }\n    return result;\n}", "{\n    auto\
    \ result = arr.filter!(a => a >= 1 && a <= 9).sort.reverse;\n    return result.map!(a\
    \ => [\"One\", \"Two\", \"Three\", \"Four\", \"Five\", \"Six\", \"Seven\", \"\
    Eight\", \"Nine\"][a - 1]);\n}", "{\n    // write your code here\n    return arr.filter!(a\
    \ => a > 0 && a < 10).sort.reverse.map!(a => a.to!string).array;\n}", "{\n   \
    \ string[] result;\n    foreach(e; arr)\n    {\n        if(e > 0 && e < 10)\n\
    \        {\n            result ~= to!string(e);\n        }\n    }\n    sort(result);\n\
    \    reverse(result);\n    foreach(i, e; result)\n    {\n        switch(e)\n \
    \       {\n            case \"1\":\n                result[i] = \"One\";\n   \
    \             break;\n            case \"2\":\n                result[i] = \"\
    Two\";\n                break;\n            case \"3\":\n                result[i]\
    \ = \"Three\";\n                break;\n            case \"4\":\n            \
    \    result[i] = \"Four\";\n                break;\n            case \"5\":\n\
    \                result[i] = \"Five\";\n                break;\n            case\
    \ \"6\":\n                result[i] = \"Six\";\n                break;\n     \
    \       case \"7\":\n                result[i] = \"Seven\";\n                break;\n\
    \            case \"8\":\n                result[i] = \"Eight\";\n           \
    \     break;\n            case \"9\":\n                result[i] = \"Nine\";\n\
    \                break;\n        }\n    }\n    return result;\n}", "{\n    string[]\
    \ result = new string[];\n    foreach(i; arr)\n    {\n        if(i > 0 && i <\
    \ 10)\n        {\n            result ~= i.to!string;\n        }\n    }\n    sort(result);\n\
    \    reverse(result);\n    foreach(i; result)\n    {\n        switch(i)\n    \
    \    {\n            case \"1\":\n                i = \"One\";\n              \
    \  break;\n            case \"2\":\n                i = \"Two\";\n           \
    \     break;\n            case \"3\":\n                i = \"Three\";\n      \
    \          break;\n            case \"4\":\n                i = \"Four\";\n  \
    \              break;\n            case \"5\":\n                i = \"Five\";\n\
    \                break;\n            case \"6\":\n                i = \"Six\"\
    ;\n                break;\n            case \"7\":\n                i = \"Seven\"\
    ;\n                break;\n            case \"8\":\n                i = \"Eight\"\
    ;\n                break;\n            case \"9\":\n                i = \"Nine\"\
    ;\n                break;\n        }\n    }\n    return result;\n}", "{\n    auto\
    \ result = arr.filter!(a => a > 0 && a < 10).sort.reverse;\n    return result.map!(a\
    \ => [\"One\", \"Two\", \"Three\", \"Four\", \"Five\", \"Six\", \"Seven\", \"\
    Eight\", \"Nine\"][a - 1]);\n}", "{\n    auto tmp = arr.filter!(a => a > 0 &&\
    \ a < 10).sort.reverse;\n    return tmp.map!(a => [\"One\", \"Two\", \"Three\"\
    , \"Four\", \"Five\", \"Six\", \"Seven\", \"Eight\", \"Nine\"][a - 1]);\n}", "{\n\
    \    string[] result = new string[];\n    foreach(elem; arr)\n    {\n        if(elem\
    \ > 0 && elem < 10)\n        {\n            switch(elem)\n            {\n    \
    \            case 1:\n                    result ~= \"One\";\n               \
    \     break;\n                case 2:\n                    result ~= \"Two\";\n\
    \                    break;\n                case 3:\n                    result\
    \ ~= \"Three\";\n                    break;\n                case 4:\n       \
    \             result ~= \"Four\";\n                    break;\n              \
    \  case 5:\n                    result ~= \"Five\";\n                    break;\n\
    \                case 6:\n                    result ~= \"Six\";\n           \
    \         break;\n                case 7:\n                    result ~= \"Seven\"\
    ;\n                    break;\n                case 8:\n                    result\
    \ ~= \"Eight\";\n                    break;\n                case 9:\n       \
    \             result ~= \"Nine\";\n                    break;\n            }\n\
    \        }\n    }\n    result.sort;\n    result.reverse;\n    return result;\n\
    }", "{\n    // Sort the array\n    sort(arr);\n    // Reverse the array\n    reverse(arr);\n\
    \    // Replace each digit by its corresponding name from \"One\", \"Two\", \"\
    Three\", \"Four\", \"Five\", \"Six\", \"Seven\", \"Eight\", \"Nine\"\n    string[]\
    \ result = new string[arr.length];\n    foreach(i, e; arr)\n    {\n        if(e\
    \ < 1 || e > 9)\n            continue;\n        result[i] = [\"One\", \"Two\"\
    , \"Three\", \"Four\", \"Five\", \"Six\", \"Seven\", \"Eight\", \"Nine\"][e -\
    \ 1];\n    }\n    return result;\n}", "{\n    auto result = arr.filter!(a => a\
    \ > 0 && a < 10).sort.reverse;\n    return result.map!(a => [\"One\", \"Two\"\
    , \"Three\", \"Four\", \"Five\", \"Six\", \"Seven\", \"Eight\", \"Nine\"][a -\
    \ 1]);\n}", "{\n    string[] result;\n    foreach(i; arr)\n    {\n        if(i\
    \ > 0 && i < 10)\n        {\n            result ~= to!string(i);\n        }\n\
    \    }\n    sort(result);\n    reverse(result);\n    foreach(i; 0..result.length)\n\
    \    {\n        switch(result[i])\n        {\n            case \"1\":\n      \
    \          result[i] = \"One\";\n                break;\n            case \"2\"\
    :\n                result[i] = \"Two\";\n                break;\n            case\
    \ \"3\":\n                result[i] = \"Three\";\n                break;\n   \
    \         case \"4\":\n                result[i] = \"Four\";\n               \
    \ break;\n            case \"5\":\n                result[i] = \"Five\";\n   \
    \             break;\n            case \"6\":\n                result[i] = \"\
    Six\";\n                break;\n            case \"7\":\n                result[i]\
    \ = \"Seven\";\n                break;\n            case \"8\":\n            \
    \    result[i] = \"Eight\";\n                break;\n            case \"9\":\n\
    \                result[i] = \"Nine\";\n                break;\n        }\n  \
    \  }\n    return result;\n}", "{\n    string[] result;\n    foreach(num; arr)\n\
    \    {\n        if(num > 0 && num < 10)\n        {\n            result ~= num.to!string;\n\
    \        }\n    }\n    result.sort;\n    result.reverse;\n    foreach(i, num;\
    \ result)\n    {\n        switch(num)\n        {\n            case \"1\":\n  \
    \              result[i] = \"One\";\n                break;\n            case\
    \ \"2\":\n                result[i] = \"Two\";\n                break;\n     \
    \       case \"3\":\n                result[i] = \"Three\";\n                break;\n\
    \            case \"4\":\n                result[i] = \"Four\";\n            \
    \    break;\n            case \"5\":\n                result[i] = \"Five\";\n\
    \                break;\n            case \"6\":\n                result[i] =\
    \ \"Six\";\n                break;\n            case \"7\":\n                result[i]\
    \ = \"Seven\";\n                break;\n            case \"8\":\n            \
    \    result[i] = \"Eight\";\n                break;\n            case \"9\":\n\
    \                result[i] = \"Nine\";\n                break;\n        }\n  \
    \  }\n    return result;\n}", "{\n    string[] result;\n    foreach(i; arr)\n\
    \    {\n        if(i > 0 && i < 10)\n        {\n            result ~= to!string(i);\n\
    \        }\n    }\n    result.sort;\n    result.reverse;\n    foreach(i; result)\n\
    \    {\n        switch(i)\n        {\n            case \"1\":\n              \
    \  i = \"One\";\n                break;\n            case \"2\":\n           \
    \     i = \"Two\";\n                break;\n            case \"3\":\n        \
    \        i = \"Three\";\n                break;\n            case \"4\":\n   \
    \             i = \"Four\";\n                break;\n            case \"5\":\n\
    \                i = \"Five\";\n                break;\n            case \"6\"\
    :\n                i = \"Six\";\n                break;\n            case \"7\"\
    :\n                i = \"Seven\";\n                break;\n            case \"\
    8\":\n                i = \"Eight\";\n                break;\n            case\
    \ \"9\":\n                i = \"Nine\";\n                break;\n        }\n \
    \   }\n    return result;\n}", "{\n    string[] result = new string[arr.length];\n\
    \    int[] sorted = new int[arr.length];\n    int j = 0;\n    foreach(i; arr)\n\
    \    {\n        if(i >= 1 && i <= 9)\n        {\n            sorted[j] = i;\n\
    \            j++;\n        }\n    }\n    sorted = sorted[0..j];\n    sort(sorted);\n\
    \    for(int i = 0; i < sorted.length; i++)\n    {\n        switch(sorted[i])\n\
    \        {\n            case 1:\n                result[i] = \"One\";\n      \
    \          break;\n            case 2:\n                result[i] = \"Two\";\n\
    \                break;\n            case 3:\n                result[i] = \"Three\"\
    ;\n                break;\n            case 4:\n                result[i] = \"\
    Four\";\n                break;\n            case 5:\n                result[i]\
    \ = \"Five\";\n                break;\n            case 6:\n                result[i]\
    \ = \"Six\";\n                break;\n            case 7:\n                result[i]\
    \ = \"Seven\";\n                break;\n            case 8:\n                result[i]\
    \ = \"Eight\";\n                break;\n            case 9:\n                result[i]\
    \ = \"Nine\";\n                break;\n        }\n    }\n    return result.reverse;\n\
    }", "{\n    string[] result;\n    foreach(long i; arr)\n    {\n        if(i >\
    \ 0 && i < 10)\n        {\n            result ~= to!string(i);\n        }\n  \
    \  }\n    sort(result);\n    reverse(result);\n    foreach(string s; result)\n\
    \    {\n        switch(s)\n        {\n            case \"1\":\n              \
    \  s = \"One\";\n                break;\n            case \"2\":\n           \
    \     s = \"Two\";\n                break;\n            case \"3\":\n        \
    \        s = \"Three\";\n                break;\n            case \"4\":\n   \
    \             s = \"Four\";\n                break;\n            case \"5\":\n\
    \                s = \"Five\";\n                break;\n            case \"6\"\
    :\n                s = \"Six\";\n                break;\n            case \"7\"\
    :\n                s = \"Seven\";\n                break;\n            case \"\
    8\":\n                s = \"Eight\";\n                break;\n            case\
    \ \"9\":\n                s = \"Nine\";\n                break;\n        }\n \
    \   }\n    return result;\n}", "{\n    string[] result = new string[arr.length];\n\
    \    int[] nums = new int[arr.length];\n    int count = 0;\n    foreach(int i;\
    \ arr)\n    {\n        if(i > 0 && i < 10)\n        {\n            nums[count]\
    \ = i;\n            count++;\n        }\n    }\n    nums = nums[0..count];\n \
    \   nums.sort();\n    nums.reverse();\n    foreach(int i; nums)\n    {\n     \
    \   switch(i)\n        {\n            case 1:\n                result ~= \"One\"\
    ;\n                break;\n            case 2:\n                result ~= \"Two\"\
    ;\n                break;\n            case 3:\n                result ~= \"Three\"\
    ;\n                break;\n            case 4:\n                result ~= \"Four\"\
    ;\n                break;\n            case 5:\n                result ~= \"Five\"\
    ;\n                break;\n            case 6:\n                result ~= \"Six\"\
    ;\n                break;\n            case 7:\n                result ~= \"Seven\"\
    ;\n                break;\n            case 8:\n                result ~= \"Eight\"\
    ;\n                break;\n            case 9:\n                result ~= \"Nine\"\
    ;\n                break;\n        }\n    }\n    return result;\n}", "{\n    string[]\
    \ result;\n    foreach(e; arr)\n    {\n        if(e > 0 && e < 10)\n        {\n\
    \            result ~= to!string(e);\n        }\n    }\n    sort(result);\n  \
    \  reverse(result);\n    foreach(i, e; result)\n    {\n        switch(to!int(e))\n\
    \        {\n            case 1:\n                result[i] = \"One\";\n      \
    \          break;\n            case 2:\n                result[i] = \"Two\";\n\
    \                break;\n            case 3:\n                result[i] = \"Three\"\
    ;\n                break;\n            case 4:\n                result[i] = \"\
    Four\";\n                break;\n            case 5:\n                result[i]\
    \ = \"Five\";\n                break;\n            case 6:\n                result[i]\
    \ = \"Six\";\n                break;\n            case 7:\n                result[i]\
    \ = \"Seven\";\n                break;\n            case 8:\n                result[i]\
    \ = \"Eight\";\n                break;\n            case 9:\n                result[i]\
    \ = \"Nine\";\n                break;\n        }\n    }\n    return result;\n}",
  "{\n    // TODO: implement by_length\n    return arr.filter!(x => x > 0 && x < 10).sort.reverse.map!(x\
    \ => [\"One\", \"Two\", \"Three\", \"Four\", \"Five\", \"Six\", \"Seven\", \"\
    Eight\", \"Nine\"][x - 1]);\n}", "{\n    string[] result = new string[arr.length];\n\
    \    int i = 0;\n    foreach(long x; arr)\n    {\n        if(x > 0 && x < 10)\n\
    \        {\n            switch(x)\n            {\n                case 1:\n  \
    \                  result[i] = \"One\";\n                    break;\n        \
    \        case 2:\n                    result[i] = \"Two\";\n                 \
    \   break;\n                case 3:\n                    result[i] = \"Three\"\
    ;\n                    break;\n                case 4:\n                    result[i]\
    \ = \"Four\";\n                    break;\n                case 5:\n         \
    \           result[i] = \"Five\";\n                    break;\n              \
    \  case 6:\n                    result[i] = \"Six\";\n                    break;\n\
    \                case 7:\n                    result[i] = \"Seven\";\n       \
    \             break;\n                case 8:\n                    result[i] =\
    \ \"Eight\";\n                    break;\n                case 9:\n          \
    \          result[i] = \"Nine\";\n                    break;\n            }\n\
    \            i++;\n        }\n    }\n    result = result[0..i];\n    result.sort;\n\
    \    result.reverse;\n    return result;\n}", "{\n    string[] result;\n    foreach(elem;\
    \ arr)\n    {\n        if(elem > 0 && elem < 10)\n        {\n            result\
    \ ~= to!string(elem);\n        }\n    }\n    sort(result);\n    reverse(result);\n\
    \    return result;\n}", "{\n    // Sort the array\n    sort(arr);\n    // Reverse\
    \ the array\n    reverse(arr);\n    // Replace each digit by its corresponding\
    \ name from \"One\", \"Two\", \"Three\", \"Four\", \"Five\", \"Six\", \"Seven\"\
    , \"Eight\", \"Nine\"\n    string[] result = new string[arr.length];\n    foreach(i,\
    \ e; arr)\n    {\n        if(e == 1)\n            result[i] = \"One\";\n     \
    \   else if(e == 2)\n            result[i] = \"Two\";\n        else if(e == 3)\n\
    \            result[i] = \"Three\";\n        else if(e == 4)\n            result[i]\
    \ = \"Four\";\n        else if(e == 5)\n            result[i] = \"Five\";\n  \
    \      else if(e == 6)\n            result[i] = \"Six\";\n        else if(e ==\
    \ 7)\n            result[i] = \"Seven\";\n        else if(e == 8)\n          \
    \  result[i] = \"Eight\";\n        else if(e == 9)\n            result[i] = \"\
    Nine\";\n    }\n    return result;\n}", "{\n    string[] result = new string[arr.length];\n\
    \    long[] sorted = arr.filter!(x => x > 0 && x < 10).sort;\n    foreach(i, e;\
    \ sorted.reverse)\n    {\n        switch(e)\n        {\n            case 1:\n\
    \                result[i] = \"One\";\n                break;\n            case\
    \ 2:\n                result[i] = \"Two\";\n                break;\n         \
    \   case 3:\n                result[i] = \"Three\";\n                break;\n\
    \            case 4:\n                result[i] = \"Four\";\n                break;\n\
    \            case 5:\n                result[i] = \"Five\";\n                break;\n\
    \            case 6:\n                result[i] = \"Six\";\n                break;\n\
    \            case 7:\n                result[i] = \"Seven\";\n               \
    \ break;\n            case 8:\n                result[i] = \"Eight\";\n      \
    \          break;\n            case 9:\n                result[i] = \"Nine\";\n\
    \                break;\n        }\n    }\n    return result;\n}", "{\n    //\
    \ TODO: implement by_length\n    return null;\n}", "{\n    string[] result = new\
    \ string[0];\n    foreach(long i; arr)\n    {\n        if(i > 0 && i < 10)\n \
    \       {\n            result ~= to!string(i);\n        }\n    }\n    result.sort;\n\
    \    result.reverse;\n    foreach(string i; result)\n    {\n        switch(i)\n\
    \        {\n            case \"1\":\n                i = \"One\";\n          \
    \      break;\n            case \"2\":\n                i = \"Two\";\n       \
    \         break;\n            case \"3\":\n                i = \"Three\";\n  \
    \              break;\n            case \"4\":\n                i = \"Four\";\n\
    \                break;\n            case \"5\":\n                i = \"Five\"\
    ;\n                break;\n            case \"6\":\n                i = \"Six\"\
    ;\n                break;\n            case \"7\":\n                i = \"Seven\"\
    ;\n                break;\n            case \"8\":\n                i = \"Eight\"\
    ;\n                break;\n            case \"9\":\n                i = \"Nine\"\
    ;\n                break;\n        }\n    }\n    return result;\n}", "{\n    //\
    \ TODO: implement this function\n    return null;\n}", "{\n    string[] result\
    \ = new string[0];\n    foreach(long i; arr)\n    {\n        if(i > 0 && i < 10)\n\
    \        {\n            result ~= to!string(i);\n        }\n    }\n    sort(result);\n\
    \    reverse(result);\n    foreach(string i; result)\n    {\n        switch(i)\n\
    \        {\n            case \"1\":\n                i = \"One\";\n          \
    \      break;\n            case \"2\":\n                i = \"Two\";\n       \
    \         break;\n            case \"3\":\n                i = \"Three\";\n  \
    \              break;\n            case \"4\":\n                i = \"Four\";\n\
    \                break;\n            case \"5\":\n                i = \"Five\"\
    ;\n                break;\n            case \"6\":\n                i = \"Six\"\
    ;\n                break;\n            case \"7\":\n                i = \"Seven\"\
    ;\n                break;\n            case \"8\":\n                i = \"Eight\"\
    ;\n                break;\n            case \"9\":\n                i = \"Nine\"\
    ;\n                break;\n        }\n    }\n    return result;\n}", "{\n    string[]\
    \ result = new string[0];\n    int[] sorted = new int[0];\n    foreach(i; arr)\n\
    \    {\n        if(i > 0 && i < 10)\n        {\n            sorted ~= i;\n   \
    \     }\n    }\n    sort(sorted);\n    foreach(i; sorted)\n    {\n        switch(i)\n\
    \        {\n            case 1:\n                result ~= \"One\";\n        \
    \        break;\n            case 2:\n                result ~= \"Two\";\n   \
    \             break;\n            case 3:\n                result ~= \"Three\"\
    ;\n                break;\n            case 4:\n                result ~= \"Four\"\
    ;\n                break;\n            case 5:\n                result ~= \"Five\"\
    ;\n                break;\n            case 6:\n                result ~= \"Six\"\
    ;\n                break;\n            case 7:\n                result ~= \"Seven\"\
    ;\n                break;\n            case 8:\n                result ~= \"Eight\"\
    ;\n                break;\n            case 9:\n                result ~= \"Nine\"\
    ;\n                break;\n        }\n    }\n    return result;\n}", "{\n    //\
    \ TODO: implement by_length\n    return arr.filter!(a => a >= 1 && a <= 9).sort.reverse.map!(a\
    \ => [\"One\", \"Two\", \"Three\", \"Four\", \"Five\", \"Six\", \"Seven\", \"\
    Eight\", \"Nine\"][a - 1]);\n}", "{\n    string[] result;\n    long[] sorted =\
    \ arr.filter!(a => a > 0 && a < 10).sort!((a, b) => a > b);\n    result = sorted.map!(a\
    \ => \"One Two Three Four Five Six Seven Eight Nine\".split(\" \")[a - 1]);\n\
    \    return result.reverse;\n}", "{\n    long[] sorted = arr.filter!(a => a >\
    \ 0 && a < 10).sort;\n    string[] result = sorted.map!(a => to!string(a)).reverse;\n\
    \    return result;\n}", "{\n    string[] result = [];\n    foreach(long i; arr)\n\
    \    {\n        if(i > 0 && i < 10)\n        {\n            result ~= to!string(i);\n\
    \        }\n    }\n    result.sort();\n    result.reverse();\n    foreach(string\
    \ i; result)\n    {\n        switch(i)\n        {\n            case \"1\":\n \
    \               i = \"One\";\n                break;\n            case \"2\":\n\
    \                i = \"Two\";\n                break;\n            case \"3\"\
    :\n                i = \"Three\";\n                break;\n            case \"\
    4\":\n                i = \"Four\";\n                break;\n            case\
    \ \"5\":\n                i = \"Five\";\n                break;\n            case\
    \ \"6\":\n                i = \"Six\";\n                break;\n            case\
    \ \"7\":\n                i = \"Seven\";\n                break;\n           \
    \ case \"8\":\n                i = \"Eight\";\n                break;\n      \
    \      case \"9\":\n                i = \"Nine\";\n                break;\n  \
    \      }\n    }\n    return result;\n}\n/*\n    Given a string, return a new string\
    \ where the first and last chars have been exchanged.", "{\n    // your code here\n\
    \    return null;\n}", "{\n    string[] result;\n    foreach(elem; arr)\n    {\n\
    \        if(elem >= 1 && elem <= 9)\n        {\n            result ~= to!string(elem);\n\
    \        }\n    }\n    result.sort;\n    result.reverse;\n    foreach(elem; result)\n\
    \    {\n        switch(elem)\n        {\n            case \"1\":\n           \
    \     elem = \"One\";\n                break;\n            case \"2\":\n     \
    \           elem = \"Two\";\n                break;\n            case \"3\":\n\
    \                elem = \"Three\";\n                break;\n            case \"\
    4\":\n                elem = \"Four\";\n                break;\n            case\
    \ \"5\":\n                elem = \"Five\";\n                break;\n         \
    \   case \"6\":\n                elem = \"Six\";\n                break;\n   \
    \         case \"7\":\n                elem = \"Seven\";\n                break;\n\
    \            case \"8\":\n                elem = \"Eight\";\n                break;\n\
    \            case \"9\":\n                elem = \"Nine\";\n                break;\n\
    \        }\n    }\n    return result;\n}\n/*\n    Given a string, return true\
    \ if it is a palindrome, and false otherwise.\n    A palindrome is a string that\
    \ reads the same forwards and backwards.", "{\n    string[] result = [];\n   \
    \ foreach(long i; arr)\n    {\n        if(i >= 1 && i <= 9)\n        {\n     \
    \       result ~= to!string(i);\n        }\n    }\n    sort(result);\n    reverse(result);\n\
    \    foreach(string i; result)\n    {\n        switch(i)\n        {\n        \
    \    case \"1\":\n                i = \"One\";\n                break;\n     \
    \       case \"2\":\n                i = \"Two\";\n                break;\n  \
    \          case \"3\":\n                i = \"Three\";\n                break;\n\
    \            case \"4\":\n                i = \"Four\";\n                break;\n\
    \            case \"5\":\n                i = \"Five\";\n                break;\n\
    \            case \"6\":\n                i = \"Six\";\n                break;\n\
    \            case \"7\":\n                i = \"Seven\";\n                break;\n\
    \            case \"8\":\n                i = \"Eight\";\n                break;\n\
    \            case \"9\":\n                i = \"Nine\";\n                break;\n\
    \        }\n    }\n    return result;\n}", "{\n    string[] result = [];\n   \
    \ foreach(elem; arr)\n    {\n        if(elem > 0 && elem < 10)\n        {\n  \
    \          result ~= to!string(elem);\n        }\n    }\n    sort(result);\n \
    \   reverse(result);\n    foreach(elem; result)\n    {\n        switch(elem)\n\
    \        {\n            case \"1\":\n                elem = \"One\";\n       \
    \         break;\n            case \"2\":\n                elem = \"Two\";\n \
    \               break;\n            case \"3\":\n                elem = \"Three\"\
    ;\n                break;\n            case \"4\":\n                elem = \"\
    Four\";\n                break;\n            case \"5\":\n                elem\
    \ = \"Five\";\n                break;\n            case \"6\":\n             \
    \   elem = \"Six\";\n                break;\n            case \"7\":\n       \
    \         elem = \"Seven\";\n                break;\n            case \"8\":\n\
    \                elem = \"Eight\";\n                break;\n            case \"\
    9\":\n                elem = \"Nine\";\n                break;\n        }\n  \
    \  }\n    return result;\n}", "{\n    string[] result = new string[];\n    foreach(long\
    \ num; arr)\n    {\n        if(num > 0 && num < 10)\n        {\n            result\
    \ ~= to!string(num);\n        }\n    }\n    sort(result);\n    reverse(result);\n\
    \    foreach(string num; result)\n    {\n        switch(num)\n        {\n    \
    \        case \"1\":\n                num = \"One\";\n                break;\n\
    \            case \"2\":\n                num = \"Two\";\n                break;\n\
    \            case \"3\":\n                num = \"Three\";\n                break;\n\
    \            case \"4\":\n                num = \"Four\";\n                break;\n\
    \            case \"5\":\n                num = \"Five\";\n                break;\n\
    \            case \"6\":\n                num = \"Six\";\n                break;\n\
    \            case \"7\":\n                num = \"Seven\";\n                break;\n\
    \            case \"8\":\n                num = \"Eight\";\n                break;\n\
    \            case \"9\":\n                num = \"Nine\";\n                break;\n\
    \        }\n    }\n    return result;\n}", "{\n    auto numbers = arr.filter!(a\
    \ => a >= 1 && a <= 9);\n    numbers.sort;\n    numbers.reverse;\n    return numbers.map!(a\
    \ => [\"One\", \"Two\", \"Three\", \"Four\", \"Five\", \"Six\", \"Seven\", \"\
    Eight\", \"Nine\"][a - 1]);\n}", "{\n    string[] result = new string[0];\n  \
    \  foreach(long i; arr)\n    {\n        if(i > 0 && i < 10)\n        {\n     \
    \       result ~= to!string(i);\n        }\n    }\n    result.sort;\n    result.reverse;\n\
    \    foreach(string i; result)\n    {\n        switch(i)\n        {\n        \
    \    case \"1\":\n                i = \"One\";\n                break;\n     \
    \       case \"2\":\n                i = \"Two\";\n                break;\n  \
    \          case \"3\":\n                i = \"Three\";\n                break;\n\
    \            case \"4\":\n                i = \"Four\";\n                break;\n\
    \            case \"5\":\n                i = \"Five\";\n                break;\n\
    \            case \"6\":\n                i = \"Six\";\n                break;\n\
    \            case \"7\":\n                i = \"Seven\";\n                break;\n\
    \            case \"8\":\n                i = \"Eight\";\n                break;\n\
    \            case \"9\":\n                i = \"Nine\";\n                break;\n\
    \        }\n    }\n    return result;\n}", "{\n    string[] result = [];\n   \
    \ foreach(long i; arr)\n    {\n        if(i > 0 && i < 10)\n        {\n      \
    \      result ~= to!string(i);\n        }\n    }\n    sort(result);\n    reverse(result);\n\
    \    foreach(string s; result)\n    {\n        switch(s)\n        {\n        \
    \    case \"1\":\n                s = \"One\";\n                break;\n     \
    \       case \"2\":\n                s = \"Two\";\n                break;\n  \
    \          case \"3\":\n                s = \"Three\";\n                break;\n\
    \            case \"4\":\n                s = \"Four\";\n                break;\n\
    \            case \"5\":\n                s = \"Five\";\n                break;\n\
    \            case \"6\":\n                s = \"Six\";\n                break;\n\
    \            case \"7\":\n                s = \"Seven\";\n                break;\n\
    \            case \"8\":\n                s = \"Eight\";\n                break;\n\
    \            case \"9\":\n                s = \"Nine\";\n                break;\n\
    \        }\n    }\n    return result;\n}", "{\n    string[] result;\n    foreach(elem;\
    \ arr)\n    {\n        if(elem > 0 && elem < 10)\n        {\n            result\
    \ ~= to!string(elem);\n        }\n    }\n    result.sort;\n    result.reverse;\n\
    \    foreach(i, elem; result)\n    {\n        switch(elem)\n        {\n      \
    \      case \"1\":\n                result[i] = \"One\";\n                break;\n\
    \            case \"2\":\n                result[i] = \"Two\";\n             \
    \   break;\n            case \"3\":\n                result[i] = \"Three\";\n\
    \                break;\n            case \"4\":\n                result[i] =\
    \ \"Four\";\n                break;\n            case \"5\":\n               \
    \ result[i] = \"Five\";\n                break;\n            case \"6\":\n   \
    \             result[i] = \"Six\";\n                break;\n            case \"\
    7\":\n                result[i] = \"Seven\";\n                break;\n       \
    \     case \"8\":\n                result[i] = \"Eight\";\n                break;\n\
    \            case \"9\":\n                result[i] = \"Nine\";\n            \
    \    break;\n        }\n    }\n    return result;\n}", "{\n    string[] result\
    \ = new string[0];\n    foreach(elem; arr)\n    {\n        if(elem > 0 && elem\
    \ < 10)\n        {\n            result ~= to!string(elem);\n        }\n    }\n\
    \    sort(result);\n    reverse(result);\n    return result;\n}", "{\n    string[]\
    \ result = [];\n    foreach(l; arr)\n    {\n        if(l > 0 && l < 10)\n    \
    \    {\n            result ~= to!string(l);\n        }\n    }\n    result.sort!((a,\
    \ b) => a.length > b.length);\n    result.reverse;\n    foreach(i, ref s; result)\n\
    \    {\n        switch(s)\n        {\n            case \"1\":\n              \
    \  s = \"One\";\n                break;\n            case \"2\":\n           \
    \     s = \"Two\";\n                break;\n            case \"3\":\n        \
    \        s = \"Three\";\n                break;\n            case \"4\":\n   \
    \             s = \"Four\";\n                break;\n            case \"5\":\n\
    \                s = \"Five\";\n                break;\n            case \"6\"\
    :\n                s = \"Six\";\n                break;\n            case \"7\"\
    :\n                s = \"Seven\";\n                break;\n            case \"\
    8\":\n                s = \"Eight\";\n                break;\n            case\
    \ \"9\":\n                s = \"Nine\";\n                break;\n        }\n \
    \   }\n    return result;\n}", "{\n    int[] arr2 = arr.filter!(a => a >= 1 &&\
    \ a <= 9).sort().reverse();\n    string[] arr3 = arr2.map!(a => [\"One\", \"Two\"\
    , \"Three\", \"Four\", \"Five\", \"Six\", \"Seven\", \"Eight\", \"Nine\"][a -\
    \ 1]);\n    return arr3;\n}", "{\n    string[] result = new string[0];\n    foreach(long\
    \ l; arr)\n    {\n        if(l < 1 || l > 9)\n            continue;\n        result\
    \ ~= to!string(l);\n    }\n    sort(result);\n    reverse(result);\n    return\
    \ result;\n}", "{\n    string[] result = [];\n    foreach(i; arr)\n    {\n   \
    \     if(i > 0 && i < 10)\n        {\n            result ~= to!string(i);\n  \
    \      }\n    }\n    sort(result);\n    reverse(result);\n    foreach(i; result)\n\
    \    {\n        switch(i)\n        {\n            case \"1\": i = \"One\"; break;\n\
    \            case \"2\": i = \"Two\"; break;\n            case \"3\": i = \"Three\"\
    ; break;\n            case \"4\": i = \"Four\"; break;\n            case \"5\"\
    : i = \"Five\"; break;\n            case \"6\": i = \"Six\"; break;\n        \
    \    case \"7\": i = \"Seven\"; break;\n            case \"8\": i = \"Eight\"\
    ; break;\n            case \"9\": i = \"Nine\"; break;\n        }\n    }\n   \
    \ return result;\n}", "{\n    string[] result = new string[0];\n    foreach(i;\
    \ arr)\n    {\n        if(i > 0 && i < 10)\n        {\n            result ~= i.to!string;\n\
    \        }\n    }\n    sort(result);\n    reverse(result);\n    foreach(i; result)\n\
    \    {\n        switch(i)\n        {\n            case \"1\":\n              \
    \  i = \"One\";\n                break;\n            case \"2\":\n           \
    \     i = \"Two\";\n                break;\n            case \"3\":\n        \
    \        i = \"Three\";\n                break;\n            case \"4\":\n   \
    \             i = \"Four\";\n                break;\n            case \"5\":\n\
    \                i = \"Five\";\n                break;\n            case \"6\"\
    :\n                i = \"Six\";\n                break;\n            case \"7\"\
    :\n                i = \"Seven\";\n                break;\n            case \"\
    8\":\n                i = \"Eight\";\n                break;\n            case\
    \ \"9\":\n                i = \"Nine\";\n                break;\n        }\n \
    \   }\n    return result;\n}", "{\n    // TODO: implement by_length\n    return\
    \ null;\n}", "{\n    // TODO: implement by_length\n    return null;\n}", "{\n\
    \    auto result = arr.filter!(a => a > 0 && a < 10).sort.reverse;\n    return\
    \ result.map!(a => [\"One\", \"Two\", \"Three\", \"Four\", \"Five\", \"Six\",\
    \ \"Seven\", \"Eight\", \"Nine\"][a - 1]);\n}", "{\n    string[] result = new\
    \ string[0];\n    foreach(long i; arr)\n    {\n        if(i > 0 && i < 10)\n \
    \       {\n            result ~= to!string(i);\n        }\n    }\n    sort(result);\n\
    \    reverse(result);\n    foreach(string i; result)\n    {\n        switch(i)\n\
    \        {\n            case \"1\":\n                i = \"One\";\n          \
    \      break;\n            case \"2\":\n                i = \"Two\";\n       \
    \         break;\n            case \"3\":\n                i = \"Three\";\n  \
    \              break;\n            case \"4\":\n                i = \"Four\";\n\
    \                break;\n            case \"5\":\n                i = \"Five\"\
    ;\n                break;\n            case \"6\":\n                i = \"Six\"\
    ;\n                break;\n            case \"7\":\n                i = \"Seven\"\
    ;\n                break;\n            case \"8\":\n                i = \"Eight\"\
    ;\n                break;\n            case \"9\":\n                i = \"Nine\"\
    ;\n                break;\n        }\n    }\n    return result;\n}", "{\n    auto\
    \ result = arr.filter!(a => a > 0 && a < 10).sort.reverse;\n    return result.map!(a\
    \ => [\"One\", \"Two\", \"Three\", \"Four\", \"Five\", \"Six\", \"Seven\", \"\
    Eight\", \"Nine\"][a - 1]);\n}", "{\n    string[] result = [];\n    foreach(elem;\
    \ arr)\n    {\n        if(elem > 0 && elem < 10)\n        {\n            result\
    \ ~= to!string(elem);\n        }\n    }\n    sort(result);\n    reverse(result);\n\
    \    foreach(elem; result)\n    {\n        switch(elem)\n        {\n         \
    \   case \"1\":\n                elem = \"One\";\n                break;\n   \
    \         case \"2\":\n                elem = \"Two\";\n                break;\n\
    \            case \"3\":\n                elem = \"Three\";\n                break;\n\
    \            case \"4\":\n                elem = \"Four\";\n                break;\n\
    \            case \"5\":\n                elem = \"Five\";\n                break;\n\
    \            case \"6\":\n                elem = \"Six\";\n                break;\n\
    \            case \"7\":\n                elem = \"Seven\";\n                break;\n\
    \            case \"8\":\n                elem = \"Eight\";\n                break;\n\
    \            case \"9\":\n                elem = \"Nine\";\n                break;\n\
    \        }\n    }\n    return result;\n}", "{\n    string[] result = new string[arr.length];\n\
    \    int count = 0;\n    foreach(long i; arr)\n    {\n        if(i >= 1 && i <=\
    \ 9)\n        {\n            switch(i)\n            {\n                case 1:\n\
    \                    result[count] = \"One\";\n                    break;\n  \
    \              case 2:\n                    result[count] = \"Two\";\n       \
    \             break;\n                case 3:\n                    result[count]\
    \ = \"Three\";\n                    break;\n                case 4:\n        \
    \            result[count] = \"Four\";\n                    break;\n         \
    \       case 5:\n                    result[count] = \"Five\";\n             \
    \       break;\n                case 6:\n                    result[count] = \"\
    Six\";\n                    break;\n                case 7:\n                \
    \    result[count] = \"Seven\";\n                    break;\n                case\
    \ 8:\n                    result[count] = \"Eight\";\n                    break;\n\
    \                case 9:\n                    result[count] = \"Nine\";\n    \
    \                break;\n            }\n            count++;\n        }\n    }\n\
    \    result = result[0..count];\n    result.sort;\n    result.reverse;\n    return\
    \ result;\n}", "{\n    // TODO: implement\n    return null;\n}", "{\n    auto\
    \ result = arr.filter!(a => a > 0 && a < 10).sort.reverse;\n    return result.map!(a\
    \ => [\"One\", \"Two\", \"Three\", \"Four\", \"Five\", \"Six\", \"Seven\", \"\
    Eight\", \"Nine\"][a - 1]);\n}", "{\n    string[] result = new string[arr.length];\n\
    \    string[] nums = [\"One\", \"Two\", \"Three\", \"Four\", \"Five\", \"Six\"\
    , \"Seven\", \"Eight\", \"Nine\"];\n    int i = 0;\n    foreach(e; arr)\n    {\n\
    \        if(e > 0 && e < 10)\n        {\n            result[i] = nums[e - 1];\n\
    \            i++;\n        }\n    }\n    result = result[0..i];\n    result.sort!((a,\
    \ b) => a.length > b.length);\n    result.reverse;\n    return result;\n}", "{\n\
    \    // Write your code here\n    return null;\n}", "{\n    import std.algorithm\
    \ : sort, reverse;\n    import std.array : array;\n    import std.conv : to;\n\
    \    import std.range : iota;\n    import std.string : format;\n    import std.typecons\
    \ : tuple;\n    import std.typecons : Tuple;\n    import std.typecons : tupleof;\n\
    \    import std.typecons : tupleof;\n    import std.typecons : tupleof;\n    import\
    \ std.typecons : tupleof;\n    import std.typecons : tupleof;\n    import std.typecons\
    \ : tupleof;\n    import std.typecons : tupleof;\n    import std.typecons : tupleof;\n\
    \    import std.typecons : tupleof;\n    import std.typecons : tupleof;\n    import\
    \ std.typecons : tupleof;\n    import std.typecons : tupleof;\n    import std.typecons\
    \ : tupleof;\n    import std.typecons : tupleof;\n    import std.typecons : tupleof;\n\
    \    import std.typecons : tupleof;\n    import std.typecons : tupleof;\n    import\
    \ std.typecons : tupleof;\n    import std.typecons : tupleof;\n    import std.typecons\
    \ : tupleof;\n    import std.typecons : tupleof;\n    import std.typecons : tupleof;\n\
    \    import std.typecons : tupleof;\n    import std.typecons : tupleof;\n    import\
    \ std.typecons : tupleof;\n    import std.typecons : tupleof;\n    import std.typecons\
    \ : tupleof;\n    import std.typecons : tupleof;\n    import std.typecons : tupleof;\n\
    \    import std.typecons : tupleof;\n    import std.typecons : tupleof;\n    import\
    \ std.typecons : tupleof;\n    import std.typecons : tupleof;\n    import std.typecons\
    \ : tupleof;\n    import std.typecons : tupleof;\n    import std.typecons : tupleof;\n\
    \    import std.typecons : tupleof;\n    import std.typecons : tupleof;\n    import\
    \ std.typecons : tupleof;\n    import std.typecons : tupleof;", "{\n    string[]\
    \ result = new string[arr.length];\n    int count = 0;\n    foreach(long i; arr)\n\
    \    {\n        if(i > 0 && i < 10)\n        {\n            result[count] = i.to!string;\n\
    \            count++;\n        }\n    }\n    result = result[0..count];\n    sort(result);\n\
    \    reverse(result);\n    foreach(ref string i; result)\n    {\n        switch(i)\n\
    \        {\n            case \"1\":\n                i = \"One\";\n          \
    \      break;\n            case \"2\":\n                i = \"Two\";\n       \
    \         break;\n            case \"3\":\n                i = \"Three\";\n  \
    \              break;\n            case \"4\":\n                i = \"Four\";\n\
    \                break;\n            case \"5\":\n                i = \"Five\"\
    ;\n                break;\n            case \"6\":\n                i = \"Six\"\
    ;\n                break;\n            case \"7\":\n                i = \"Seven\"\
    ;\n                break;\n            case \"8\":\n                i = \"Eight\"\
    ;\n                break;\n            case \"9\":\n                i = \"Nine\"\
    ;\n                break;\n        }\n    }\n    return result;\n}", "{\n    string[]\
    \ result = new string[arr.length];\n    int[] sorted = new int[arr.length];\n\
    \    int count = 0;\n    foreach(long i; arr)\n    {\n        if(i > 0 && i <\
    \ 10)\n        {\n            sorted[count] = i;\n            count++;\n     \
    \   }\n    }\n    sort(sorted[0..count]);\n    for(int i = 0; i < count; i++)\n\
    \    {\n        switch(sorted[i])\n        {\n            case 1:\n          \
    \      result[i] = \"One\";\n                break;\n            case 2:\n   \
    \             result[i] = \"Two\";\n                break;\n            case 3:\n\
    \                result[i] = \"Three\";\n                break;\n            case\
    \ 4:\n                result[i] = \"Four\";\n                break;\n        \
    \    case 5:\n                result[i] = \"Five\";\n                break;\n\
    \            case 6:\n                result[i] = \"Six\";\n                break;\n\
    \            case 7:\n                result[i] = \"Seven\";\n               \
    \ break;\n            case 8:\n                result[i] = \"Eight\";\n      \
    \          break;\n            case 9:\n                result[i] = \"Nine\";\n\
    \                break;\n        }\n    }\n    return result[0..count].reverse;\n\
    }", "{\n    string[] result = [];\n    long[] sorted = sort(arr);\n    foreach(i;\
    \ sorted)\n    {\n        if(i > 0 && i < 10)\n        {\n            switch(i)\n\
    \            {\n                case 1:\n                    result ~= \"One\"\
    ;\n                    break;\n                case 2:\n                    result\
    \ ~= \"Two\";\n                    break;\n                case 3:\n         \
    \           result ~= \"Three\";\n                    break;\n               \
    \ case 4:\n                    result ~= \"Four\";\n                    break;\n\
    \                case 5:\n                    result ~= \"Five\";\n          \
    \          break;\n                case 6:\n                    result ~= \"Six\"\
    ;\n                    break;\n                case 7:\n                    result\
    \ ~= \"Seven\";\n                    break;\n                case 8:\n       \
    \             result ~= \"Eight\";\n                    break;\n             \
    \   case 9:\n                    result ~= \"Nine\";\n                    break;\n\
    \            }\n        }\n    }\n    return result.reverse;\n}", "{\n    string[]\
    \ result;\n    foreach(l; arr)\n    {\n        if(l > 0 && l < 10)\n        {\n\
    \            result ~= to!string(l);\n        }\n    }\n    sort(result);\n  \
    \  reverse(result);\n    foreach(i, ref s; result)\n    {\n        switch(s)\n\
    \        {\n            case \"1\":\n                s = \"One\";\n          \
    \      break;\n            case \"2\":\n                s = \"Two\";\n       \
    \         break;\n            case \"3\":\n                s = \"Three\";\n  \
    \              break;\n            case \"4\":\n                s = \"Four\";\n\
    \                break;\n            case \"5\":\n                s = \"Five\"\
    ;\n                break;\n            case \"6\":\n                s = \"Six\"\
    ;\n                break;\n            case \"7\":\n                s = \"Seven\"\
    ;\n                break;\n            case \"8\":\n                s = \"Eight\"\
    ;\n                break;\n            case \"9\":\n                s = \"Nine\"\
    ;\n                break;\n        }\n    }\n    return result;\n}", "{\n    string[]\
    \ result = new string[];\n    foreach(num; arr)\n    {\n        if(num > 0 &&\
    \ num < 10)\n        {\n            switch(num)\n            {\n             \
    \   case 1:\n                    result ~= \"One\";\n                    break;\n\
    \                case 2:\n                    result ~= \"Two\";\n           \
    \         break;\n                case 3:\n                    result ~= \"Three\"\
    ;\n                    break;\n                case 4:\n                    result\
    \ ~= \"Four\";\n                    break;\n                case 5:\n        \
    \            result ~= \"Five\";\n                    break;\n               \
    \ case 6:\n                    result ~= \"Six\";\n                    break;\n\
    \                case 7:\n                    result ~= \"Seven\";\n         \
    \           break;\n                case 8:\n                    result ~= \"\
    Eight\";\n                    break;\n                case 9:\n              \
    \      result ~= \"Nine\";\n                    break;\n            }\n      \
    \  }\n    }\n    return result.reverse;\n}", "{\n    // TODO: implement this function\n\
    \    return null;\n}", "{\n    string[] res;\n    long[] tmp;\n    foreach(long\
    \ i; arr)\n    {\n        if(i > 0 && i < 10)\n        {\n            tmp ~= i;\n\
    \        }\n    }\n    tmp.sort;\n    tmp.reverse;\n    foreach(long i; tmp)\n\
    \    {\n        switch(i)\n        {\n            case 1:\n                res\
    \ ~= \"One\";\n                break;\n            case 2:\n                res\
    \ ~= \"Two\";\n                break;\n            case 3:\n                res\
    \ ~= \"Three\";\n                break;\n            case 4:\n               \
    \ res ~= \"Four\";\n                break;\n            case 5:\n            \
    \    res ~= \"Five\";\n                break;\n            case 6:\n         \
    \       res ~= \"Six\";\n                break;\n            case 7:\n       \
    \         res ~= \"Seven\";\n                break;\n            case 8:\n   \
    \             res ~= \"Eight\";\n                break;\n            case 9:\n\
    \                res ~= \"Nine\";\n                break;\n        }\n    }\n\
    \    return res;\n}", "{\n    string[] result = [];\n    foreach(elem; arr)\n\
    \    {\n        if(elem >= 1 && elem <= 9)\n        {\n            result ~= to!string(elem);\n\
    \        }\n    }\n    sort(result);\n    reverse(result);\n    foreach(elem;\
    \ result)\n    {\n        switch(elem)\n        {\n            case \"1\":\n \
    \               elem = \"One\";\n                break;\n            case \"2\"\
    :\n                elem = \"Two\";\n                break;\n            case \"\
    3\":\n                elem = \"Three\";\n                break;\n            case\
    \ \"4\":\n                elem = \"Four\";\n                break;\n         \
    \   case \"5\":\n                elem = \"Five\";\n                break;\n  \
    \          case \"6\":\n                elem = \"Six\";\n                break;\n\
    \            case \"7\":\n                elem = \"Seven\";\n                break;\n\
    \            case \"8\":\n                elem = \"Eight\";\n                break;\n\
    \            case \"9\":\n                elem = \"Nine\";\n                break;\n\
    \        }\n    }\n    return result;\n}", "{\n    // write your code here\n \
    \   return null;\n}", "{\n    auto sorted = arr.filter!(x => x > 0 && x < 10).sort;\n\
    \    auto reversed = sorted.reverse;\n    auto result = reversed.map!(x => to!string(x)).map!(x\
    \ => x.toUpper);\n    return result;\n}", "{\n    string[] result;\n    foreach(elem;\
    \ arr)\n    {\n        if(elem > 0 && elem < 10)\n        {\n            result\
    \ ~= to!string(elem);\n        }\n    }\n    sort(result);\n    reverse(result);\n\
    \    return result;\n}", "{\n    string[] result;\n    foreach(elem; arr)\n  \
    \  {\n        if(elem > 0 && elem < 10)\n        {\n            result ~= to!string(elem);\n\
    \        }\n    }\n    sort(result);\n    reverse(result);\n    return result;\n\
    }", "{\n    string[] result;\n    long[] sorted = arr.filter!(a => a > 0 && a\
    \ < 10).sort;\n    result = sorted.map!(a => a.to!string).reverse;\n    return\
    \ result;\n}", "{\n    string[] result;\n    foreach(elem; arr)\n    {\n     \
    \   if(elem > 0 && elem < 10)\n        {\n            result ~= to!string(elem);\n\
    \        }\n    }\n    sort(result);\n    reverse(result);\n    return result;\n\
    }", "{\n    string[] result = new string[arr.length];\n    int count = 0;\n  \
    \  foreach(long i; arr)\n    {\n        if(i >= 1 && i <= 9)\n        {\n    \
    \        result[count] = i.to!string;\n            count++;\n        }\n    }\n\
    \    result = result[0..count];\n    result.sort!((a, b) => a.length - b.length);\n\
    \    result.reverse;\n    foreach(ref string i; result)\n    {\n        switch(i)\n\
    \        {\n            case \"1\":\n                i = \"One\";\n          \
    \      break;\n            case \"2\":\n                i = \"Two\";\n       \
    \         break;\n            case \"3\":\n                i = \"Three\";\n  \
    \              break;\n            case \"4\":\n                i = \"Four\";\n\
    \                break;\n            case \"5\":\n                i = \"Five\"\
    ;\n                break;\n            case \"6\":\n                i = \"Six\"\
    ;\n                break;\n            case \"7\":\n                i = \"Seven\"\
    ;\n                break;\n            case \"8\":\n                i = \"Eight\"\
    ;\n                break;\n            case \"9\":\n                i = \"Nine\"\
    ;\n                break;\n        }\n    }\n    return result;\n}", "{\n    string[]\
    \ result = new string[arr.length];\n    int i = 0;\n    foreach(long x; arr)\n\
    \    {\n        if(x >= 1 && x <= 9)\n        {\n            result[i] = to!string(x);\n\
    \            i++;\n        }\n    }\n    sort(result[0..i]);\n    reverse(result[0..i]);\n\
    \    for(int j = 0; j < i; j++)\n    {\n        switch(result[j])\n        {\n\
    \            case \"1\":\n                result[j] = \"One\";\n             \
    \   break;\n            case \"2\":\n                result[j] = \"Two\";\n  \
    \              break;\n            case \"3\":\n                result[j] = \"\
    Three\";\n                break;\n            case \"4\":\n                result[j]\
    \ = \"Four\";\n                break;\n            case \"5\":\n             \
    \   result[j] = \"Five\";\n                break;\n            case \"6\":\n \
    \               result[j] = \"Six\";\n                break;\n            case\
    \ \"7\":\n                result[j] = \"Seven\";\n                break;\n   \
    \         case \"8\":\n                result[j] = \"Eight\";\n              \
    \  break;\n            case \"9\":\n                result[j] = \"Nine\";\n  \
    \              break;\n        }\n    }\n    return result[0..i];\n}", "{\n  \
    \  string[] result = new string[arr.length];\n    int[] numbers = new int[arr.length];\n\
    \    int j = 0;\n    foreach(i; arr)\n    {\n        if(i > 0 && i < 10)\n   \
    \     {\n            numbers[j] = i;\n            j++;\n        }\n    }\n   \
    \ numbers = numbers[0..j];\n    sort(numbers);\n    numbers = numbers.reverse;\n\
    \    foreach(i; 0..numbers.length)\n    {\n        switch(numbers[i])\n      \
    \  {\n            case 1:\n                result[i] = \"One\";\n            \
    \    break;\n            case 2:\n                result[i] = \"Two\";\n     \
    \           break;\n            case 3:\n                result[i] = \"Three\"\
    ;\n                break;\n            case 4:\n                result[i] = \"\
    Four\";\n                break;\n            case 5:\n                result[i]\
    \ = \"Five\";\n                break;\n            case 6:\n                result[i]\
    \ = \"Six\";\n                break;\n            case 7:\n                result[i]\
    \ = \"Seven\";\n                break;\n            case 8:\n                result[i]\
    \ = \"Eight\";\n                break;\n            case 9:\n                result[i]\
    \ = \"Nine\";\n                break;\n        }\n    }\n    return result;\n}",
  "{\n    auto arr2 = arr.filter!(a => a > 0 && a < 10).sort.reverse;\n    return\
    \ arr2.map!(a => [\"One\", \"Two\", \"Three\", \"Four\", \"Five\", \"Six\", \"\
    Seven\", \"Eight\", \"Nine\"][a - 1]);\n}", "{\n    string[] result = new string[arr.length];\n\
    \    int i = 0;\n    foreach(long num; arr)\n    {\n        if(num > 0 && num\
    \ < 10)\n        {\n            switch(num)\n            {\n                case\
    \ 1:\n                    result[i] = \"One\";\n                    break;\n \
    \               case 2:\n                    result[i] = \"Two\";\n          \
    \          break;\n                case 3:\n                    result[i] = \"\
    Three\";\n                    break;\n                case 4:\n              \
    \      result[i] = \"Four\";\n                    break;\n                case\
    \ 5:\n                    result[i] = \"Five\";\n                    break;\n\
    \                case 6:\n                    result[i] = \"Six\";\n         \
    \           break;\n                case 7:\n                    result[i] = \"\
    Seven\";\n                    break;\n                case 8:\n              \
    \      result[i] = \"Eight\";\n                    break;\n                case\
    \ 9:\n                    result[i] = \"Nine\";\n                    break;\n\
    \            }\n            i++;\n        }\n    }\n    result = result[0..i];\n\
    \    result.sort;\n    result.reverse;\n    return result;\n}", "{\n    // TODO:\
    \ implement\n    return null;\n}", "{\n    // TODO: Implement me!\n    string[]\
    \ result;\n    foreach(i; arr)\n    {\n        if(i > 0 && i < 10)\n        {\n\
    \            result ~= to!string(i);\n        }\n    }\n    sort(result);\n  \
    \  reverse(result);\n    foreach(i; 0..result.length)\n    {\n        switch(result[i])\n\
    \        {\n            case \"1\":\n                result[i] = \"One\";\n  \
    \              break;\n            case \"2\":\n                result[i] = \"\
    Two\";\n                break;\n            case \"3\":\n                result[i]\
    \ = \"Three\";\n                break;\n            case \"4\":\n            \
    \    result[i] = \"Four\";\n                break;\n            case \"5\":\n\
    \                result[i] = \"Five\";\n                break;\n            case\
    \ \"6\":\n                result[i] = \"Six\";\n                break;\n     \
    \       case \"7\":\n                result[i] = \"Seven\";\n                break;\n\
    \            case \"8\":\n                result[i] = \"Eight\";\n           \
    \     break;\n            case \"9\":\n                result[i] = \"Nine\";\n\
    \                break;\n        }\n    }\n    return result;\n}", "{\n    string[]\
    \ result = new string[];\n    foreach(i; arr)\n    {\n        if(i > 0 && i <\
    \ 10)\n        {\n            switch(i)\n            {\n                case 1:\n\
    \                    result ~= \"One\";\n                    break;\n        \
    \        case 2:\n                    result ~= \"Two\";\n                   \
    \ break;\n                case 3:\n                    result ~= \"Three\";\n\
    \                    break;\n                case 4:\n                    result\
    \ ~= \"Four\";\n                    break;\n                case 5:\n        \
    \            result ~= \"Five\";\n                    break;\n               \
    \ case 6:\n                    result ~= \"Six\";\n                    break;\n\
    \                case 7:\n                    result ~= \"Seven\";\n         \
    \           break;\n                case 8:\n                    result ~= \"\
    Eight\";\n                    break;\n                case 9:\n              \
    \      result ~= \"Nine\";\n                    break;\n            }\n      \
    \  }\n    }\n    result.sort!((a, b) => a.length < b.length);\n    result.reverse;\n\
    \    return result;\n}", "{\n    string[] result = new string[0];\n    foreach(int\
    \ i; arr)\n    {\n        if(i > 0 && i < 10)\n        {\n            result ~=\
    \ to!string(i);\n        }\n    }\n    sort(result);\n    reverse(result);\n \
    \   foreach(int i; 0..result.length)\n    {\n        switch(result[i])\n     \
    \   {\n            case \"1\":\n                result[i] = \"One\";\n       \
    \         break;\n            case \"2\":\n                result[i] = \"Two\"\
    ;\n                break;\n            case \"3\":\n                result[i]\
    \ = \"Three\";\n                break;\n            case \"4\":\n            \
    \    result[i] = \"Four\";\n                break;\n            case \"5\":\n\
    \                result[i] = \"Five\";\n                break;\n            case\
    \ \"6\":\n                result[i] = \"Six\";\n                break;\n     \
    \       case \"7\":\n                result[i] = \"Seven\";\n                break;\n\
    \            case \"8\":\n                result[i] = \"Eight\";\n           \
    \     break;\n            case \"9\":\n                result[i] = \"Nine\";\n\
    \                break;\n        }\n    }\n    return result;\n}", "{\n    string[]\
    \ result = new string[arr.length];\n    int[] numbers = new int[arr.length];\n\
    \    int index = 0;\n    foreach(long i; arr)\n    {\n        if(i >= 1 && i <=\
    \ 9)\n        {\n            numbers[index] = i;\n            index++;\n     \
    \   }\n    }\n    numbers = numbers[0..index];\n    sort(numbers);\n    foreach(int\
    \ i; numbers)\n    {\n        switch(i)\n        {\n            case 1:\n    \
    \            result ~= \"One\";\n                break;\n            case 2:\n\
    \                result ~= \"Two\";\n                break;\n            case\
    \ 3:\n                result ~= \"Three\";\n                break;\n         \
    \   case 4:\n                result ~= \"Four\";\n                break;\n   \
    \         case 5:\n                result ~= \"Five\";\n                break;\n\
    \            case 6:\n                result ~= \"Six\";\n                break;\n\
    \            case 7:\n                result ~= \"Seven\";\n                break;\n\
    \            case 8:\n                result ~= \"Eight\";\n                break;\n\
    \            case 9:\n                result ~= \"Nine\";\n                break;\n\
    \        }\n    }\n    return result;\n}", "{\n    string[] result;\n    foreach(i;\
    \ arr)\n    {\n        if(i > 0 && i < 10)\n        {\n            result ~= to!string(i);\n\
    \        }\n    }\n    sort(result);\n    reverse(result);\n    foreach(i; result)\n\
    \    {\n        switch(i)\n        {\n            case \"1\":\n              \
    \  i = \"One\";\n                break;\n            case \"2\":\n           \
    \     i = \"Two\";\n                break;\n            case \"3\":\n        \
    \        i = \"Three\";\n                break;\n            case \"4\":\n   \
    \             i = \"Four\";\n                break;\n            case \"5\":\n\
    \                i = \"Five\";\n                break;\n            case \"6\"\
    :\n                i = \"Six\";\n                break;\n            case \"7\"\
    :\n                i = \"Seven\";\n                break;\n            case \"\
    8\":\n                i = \"Eight\";\n                break;\n            case\
    \ \"9\":\n                i = \"Nine\";\n                break;\n        }\n \
    \   }\n    return result;\n}", "{\n    string[] result = new string[arr.length];\n\
    \    int[] sorted = new int[arr.length];\n    int i = 0;\n    foreach(long l;\
    \ arr)\n    {\n        if(l >= 1 && l <= 9)\n        {\n            sorted[i]\
    \ = cast(int)l;\n            i++;\n        }\n    }\n    sort(sorted[0..i]);\n\
    \    int j = 0;\n    foreach(int l; sorted[0..i])\n    {\n        switch(l)\n\
    \        {\n            case 1:\n                result[j] = \"One\";\n      \
    \          break;\n            case 2:\n                result[j] = \"Two\";\n\
    \                break;\n            case 3:\n                result[j] = \"Three\"\
    ;\n                break;\n            case 4:\n                result[j] = \"\
    Four\";\n                break;\n            case 5:\n                result[j]\
    \ = \"Five\";\n                break;\n            case 6:\n                result[j]\
    \ = \"Six\";\n                break;\n            case 7:\n                result[j]\
    \ = \"Seven\";\n                break;\n            case 8:\n                result[j]\
    \ = \"Eight\";\n                break;\n            case 9:\n                result[j]\
    \ = \"Nine\";\n                break;\n        }\n        j++;\n    }\n    return\
    \ result[0..j].reverse;\n}", "{\n    string[] result = new string[0];\n    long[]\
    \ sorted = new long[0];\n    foreach(long i; arr)\n    {\n        if(i > 0 &&\
    \ i < 10)\n        {\n            sorted ~= i;\n        }\n    }\n    sort(sorted);\n\
    \    foreach(long i; sorted)\n    {\n        switch(i)\n        {\n          \
    \  case 1:\n                result ~= \"One\";\n                break;\n     \
    \       case 2:\n                result ~= \"Two\";\n                break;\n\
    \            case 3:\n                result ~= \"Three\";\n                break;\n\
    \            case 4:\n                result ~= \"Four\";\n                break;\n\
    \            case 5:\n                result ~= \"Five\";\n                break;\n\
    \            case 6:\n                result ~= \"Six\";\n                break;\n\
    \            case 7:\n                result ~= \"Seven\";\n                break;\n\
    \            case 8:\n                result ~= \"Eight\";\n                break;\n\
    \            case 9:\n                result ~= \"Nine\";\n                break;\n\
    \        }\n    }\n    reverse(result);\n    return result;\n}", "{\n    string[]\
    \ result = new string[arr.length];\n    int j = 0;\n    foreach(i; arr)\n    {\n\
    \        if(i > 0 && i < 10)\n        {\n            result[j] = to!string(i);\n\
    \            j++;\n        }\n    }\n    result = result[0..j];\n    sort(result);\n\
    \    reverse(result);\n    foreach(i; 0..result.length)\n    {\n        switch(result[i])\n\
    \        {\n            case \"1\":\n                result[i] = \"One\";\n  \
    \              break;\n            case \"2\":\n                result[i] = \"\
    Two\";\n                break;\n            case \"3\":\n                result[i]\
    \ = \"Three\";\n                break;\n            case \"4\":\n            \
    \    result[i] = \"Four\";\n                break;\n            case \"5\":\n\
    \                result[i] = \"Five\";\n                break;\n            case\
    \ \"6\":\n                result[i] = \"Six\";\n                break;\n     \
    \       case \"7\":\n                result[i] = \"Seven\";\n                break;\n\
    \            case \"8\":\n                result[i] = \"Eight\";\n           \
    \     break;\n            case \"9\":\n                result[i] = \"Nine\";\n\
    \                break;\n        }\n    }\n    return result;\n}", "{\n    //\
    \ Sort the array\n    arr.sort();\n    // Reverse the array\n    arr.reverse();\n\
    \    // Replace each digit by its corresponding name\n    string[] result = new\
    \ string[arr.length];\n    foreach(i, item; arr)\n    {\n        switch(item)\n\
    \        {\n            case 1:\n                result[i] = \"One\";\n      \
    \          break;\n            case 2:\n                result[i] = \"Two\";\n\
    \                break;\n            case 3:\n                result[i] = \"Three\"\
    ;\n                break;\n            case 4:\n                result[i] = \"\
    Four\";\n                break;\n            case 5:\n                result[i]\
    \ = \"Five\";\n                break;\n            case 6:\n                result[i]\
    \ = \"Six\";\n                break;\n            case 7:\n                result[i]\
    \ = \"Seven\";\n                break;\n            case 8:\n                result[i]\
    \ = \"Eight\";\n                break;\n            case 9:\n                result[i]\
    \ = \"Nine\";\n                break;\n        }\n    }\n    return result;\n}",
  "{\n    string[] result = new string[0];\n    foreach(i; arr)\n    {\n        if(i\
    \ > 0 && i < 10)\n        {\n            result ~= i.to!string;\n        }\n \
    \   }\n    sort(result);\n    reverse(result);\n    foreach(i; 0..result.length)\n\
    \    {\n        switch(result[i])\n        {\n            case \"1\":\n      \
    \          result[i] = \"One\";\n                break;\n            case \"2\"\
    :\n                result[i] = \"Two\";\n                break;\n            case\
    \ \"3\":\n                result[i] = \"Three\";\n                break;\n   \
    \         case \"4\":\n                result[i] = \"Four\";\n               \
    \ break;\n            case \"5\":\n                result[i] = \"Five\";\n   \
    \             break;\n            case \"6\":\n                result[i] = \"\
    Six\";\n                break;\n            case \"7\":\n                result[i]\
    \ = \"Seven\";\n                break;\n            case \"8\":\n            \
    \    result[i] = \"Eight\";\n                break;\n            case \"9\":\n\
    \                result[i] = \"Nine\";\n                break;\n        }\n  \
    \  }\n    return result;\n}", "{\n    string[] result = new string[0];\n    if\
    \ (arr.length == 0)\n        return result;\n    long[] sorted = arr.dup;\n  \
    \  sort(sorted);\n    foreach (el; sorted)\n    {\n        if (el > 0 && el <\
    \ 10)\n            result ~= to!string(el);\n    }\n    reverse(result);\n   \
    \ foreach (i, el; result)\n    {\n        switch (el)\n        {\n           \
    \ case \"1\":\n                result[i] = \"One\";\n                break;\n\
    \            case \"2\":\n                result[i] = \"Two\";\n             \
    \   break;\n            case \"3\":\n                result[i] = \"Three\";\n\
    \                break;\n            case \"4\":\n                result[i] =\
    \ \"Four\";\n                break;\n            case \"5\":\n               \
    \ result[i] = \"Five\";\n                break;\n            case \"6\":\n   \
    \             result[i] = \"Six\";\n                break;\n            case \"\
    7\":\n                result[i] = \"Seven\";\n                break;\n       \
    \     case \"8\":\n                result[i] = \"Eight\";\n                break;\n\
    \            case \"9\":\n                result[i] = \"Nine\";\n            \
    \    break;\n        }\n    }\n    return result;\n}", "{\n    // TODO: implement\
    \ this function\n    return null;\n}", "{\n    string[] result = [];\n    foreach(i;\
    \ arr)\n    {\n        if(i > 0 && i < 10)\n        {\n            result ~= to!string(i);\n\
    \        }\n    }\n    sort(result);\n    reverse(result);\n    foreach(i; 0 ..\
    \ result.length)\n    {\n        switch(result[i])\n        {\n            case\
    \ \"1\":\n                result[i] = \"One\";\n                break;\n     \
    \       case \"2\":\n                result[i] = \"Two\";\n                break;\n\
    \            case \"3\":\n                result[i] = \"Three\";\n           \
    \     break;\n            case \"4\":\n                result[i] = \"Four\";\n\
    \                break;\n            case \"5\":\n                result[i] =\
    \ \"Five\";\n                break;\n            case \"6\":\n               \
    \ result[i] = \"Six\";\n                break;\n            case \"7\":\n    \
    \            result[i] = \"Seven\";\n                break;\n            case\
    \ \"8\":\n                result[i] = \"Eight\";\n                break;\n   \
    \         case \"9\":\n                result[i] = \"Nine\";\n               \
    \ break;\n        }\n    }\n    return result;\n}", "{\n    long[] sorted = arr.filter!(a\
    \ => a > 0 && a < 10).sort;\n    string[] result = new string[sorted.length];\n\
    \    foreach(i, v; sorted)\n    {\n        switch(v)\n        {\n            case\
    \ 1:\n                result[i] = \"One\";\n                break;\n         \
    \   case 2:\n                result[i] = \"Two\";\n                break;\n  \
    \          case 3:\n                result[i] = \"Three\";\n                break;\n\
    \            case 4:\n                result[i] = \"Four\";\n                break;\n\
    \            case 5:\n                result[i] = \"Five\";\n                break;\n\
    \            case 6:\n                result[i] = \"Six\";\n                break;\n\
    \            case 7:\n                result[i] = \"Seven\";\n               \
    \ break;\n            case 8:\n                result[i] = \"Eight\";\n      \
    \          break;\n            case 9:\n                result[i] = \"Nine\";\n\
    \                break;\n        }\n    }\n    return result.reverse;\n}", "{\n\
    \    string[] result = new string[0];\n    long[] temp = new long[0];\n    foreach(long\
    \ i; arr)\n    {\n        if(i >= 1 && i <= 9)\n        {\n            temp ~=\
    \ i;\n        }\n    }\n    temp.sort();\n    temp.reverse();\n    foreach(long\
    \ i; temp)\n    {\n        switch(i)\n        {\n            case 1:\n       \
    \         result ~= \"One\";\n                break;\n            case 2:\n  \
    \              result ~= \"Two\";\n                break;\n            case 3:\n\
    \                result ~= \"Three\";\n                break;\n            case\
    \ 4:\n                result ~= \"Four\";\n                break;\n          \
    \  case 5:\n                result ~= \"Five\";\n                break;\n    \
    \        case 6:\n                result ~= \"Six\";\n                break;\n\
    \            case 7:\n                result ~= \"Seven\";\n                break;\n\
    \            case 8:\n                result ~= \"Eight\";\n                break;\n\
    \            case 9:\n                result ~= \"Nine\";\n                break;\n\
    \        }\n    }\n    return result;\n}", "{\n    auto sorted = arr.filter!(a\
    \ => a > 0 && a < 10).sort!((a, b) => a < b);\n    auto reversed = sorted.reverse;\n\
    \    string[] result = new string[reversed.length];\n    foreach (i, v; reversed)\n\
    \    {\n        switch (v)\n        {\n            case 1:\n                result[i]\
    \ = \"One\";\n                break;\n            case 2:\n                result[i]\
    \ = \"Two\";\n                break;\n            case 3:\n                result[i]\
    \ = \"Three\";\n                break;\n            case 4:\n                result[i]\
    \ = \"Four\";\n                break;\n            case 5:\n                result[i]\
    \ = \"Five\";\n                break;\n            case 6:\n                result[i]\
    \ = \"Six\";\n                break;\n            case 7:\n                result[i]\
    \ = \"Seven\";\n                break;\n            case 8:\n                result[i]\
    \ = \"Eight\";\n                break;\n            case 9:\n                result[i]\
    \ = \"Nine\";\n                break;\n        }\n    }\n    return result;\n}",
  "{\n    string[] result = [];\n    foreach(elem; arr)\n    {\n        if(elem >=\
    \ 1 && elem <= 9)\n        {\n            result ~= to!string(elem);\n       \
    \ }\n    }\n    sort(result);\n    reverse(result);\n    return result;\n}", "{\n\
    \    string[] result = new string[arr.length];\n    int i = 0;\n    foreach(long\
    \ n; arr)\n    {\n        if(n >= 1 && n <= 9)\n        {\n            switch(n)\n\
    \            {\n                case 1:\n                    result[i] = \"One\"\
    ;\n                    break;\n                case 2:\n                    result[i]\
    \ = \"Two\";\n                    break;\n                case 3:\n          \
    \          result[i] = \"Three\";\n                    break;\n              \
    \  case 4:\n                    result[i] = \"Four\";\n                    break;\n\
    \                case 5:\n                    result[i] = \"Five\";\n        \
    \            break;\n                case 6:\n                    result[i] =\
    \ \"Six\";\n                    break;\n                case 7:\n            \
    \        result[i] = \"Seven\";\n                    break;\n                case\
    \ 8:\n                    result[i] = \"Eight\";\n                    break;\n\
    \                case 9:\n                    result[i] = \"Nine\";\n        \
    \            break;\n            }\n            i++;\n        }\n    }\n    result\
    \ = result[0..i];\n    sort(result);\n    reverse(result);\n    return result;\n\
    }", "{\n    // TODO: implement by_length\n    return null;\n}", "{\n    string[]\
    \ result = new string[arr.length];\n    int[] temp = new int[arr.length];\n  \
    \  int count = 0;\n    foreach(long i; arr)\n    {\n        if(i >= 1 && i <=\
    \ 9)\n        {\n            temp[count] = cast(int)i;\n            count++;\n\
    \        }\n    }\n    temp = temp[0..count];\n    temp.sort;\n    temp.reverse;\n\
    \    foreach(int i; temp)\n    {\n        switch(i)\n        {\n            case\
    \ 1:\n                result ~= \"One\";\n                break;\n           \
    \ case 2:\n                result ~= \"Two\";\n                break;\n      \
    \      case 3:\n                result ~= \"Three\";\n                break;\n\
    \            case 4:\n                result ~= \"Four\";\n                break;\n\
    \            case 5:\n                result ~= \"Five\";\n                break;\n\
    \            case 6:\n                result ~= \"Six\";\n                break;\n\
    \            case 7:\n                result ~= \"Seven\";\n                break;\n\
    \            case 8:\n                result ~= \"Eight\";\n                break;\n\
    \            case 9:\n                result ~= \"Nine\";\n                break;\n\
    \        }\n    }\n    return result;\n}", "{\n    string[] result = new string[arr.length];\n\
    \    int[] numbers = new int[arr.length];\n    int j = 0;\n    foreach(i; arr)\n\
    \    {\n        if(i >= 1 && i <= 9)\n        {\n            numbers[j] = i;\n\
    \            j++;\n        }\n    }\n    numbers = numbers[0..j];\n    sort(numbers);\n\
    \    foreach(i; numbers)\n    {\n        switch(i)\n        {\n            case\
    \ 1:\n                result ~= \"One\";\n                break;\n           \
    \ case 2:\n                result ~= \"Two\";\n                break;\n      \
    \      case 3:\n                result ~= \"Three\";\n                break;\n\
    \            case 4:\n                result ~= \"Four\";\n                break;\n\
    \            case 5:\n                result ~= \"Five\";\n                break;\n\
    \            case 6:\n                result ~= \"Six\";\n                break;\n\
    \            case 7:\n                result ~= \"Seven\";\n                break;\n\
    \            case 8:\n                result ~= \"Eight\";\n                break;\n\
    \            case 9:\n                result ~= \"Nine\";\n                break;\n\
    \        }\n    }\n    return result;\n}", "{\n    string[] result;\n    foreach(e;\
    \ arr)\n    {\n        if(e > 0 && e < 10)\n        {\n            result ~= to!string(e);\n\
    \        }\n    }\n    sort(result);\n    reverse(result);\n    foreach(i, e;\
    \ result)\n    {\n        switch(to!long(e))\n        {\n            case 1:\n\
    \                result[i] = \"One\";\n                break;\n            case\
    \ 2:\n                result[i] = \"Two\";\n                break;\n         \
    \   case 3:\n                result[i] = \"Three\";\n                break;\n\
    \            case 4:\n                result[i] = \"Four\";\n                break;\n\
    \            case 5:\n                result[i] = \"Five\";\n                break;\n\
    \            case 6:\n                result[i] = \"Six\";\n                break;\n\
    \            case 7:\n                result[i] = \"Seven\";\n               \
    \ break;\n            case 8:\n                result[i] = \"Eight\";\n      \
    \          break;\n            case 9:\n                result[i] = \"Nine\";\n\
    \                break;\n        }\n    }\n    return result;\n}", "{\n    auto\
    \ result = arr.filter!(a => a > 0 && a < 10).sort.reverse;\n    return result.map!(a\
    \ => [\"One\", \"Two\", \"Three\", \"Four\", \"Five\", \"Six\", \"Seven\", \"\
    Eight\", \"Nine\"][a - 1]);\n}", "{\n    // Sort the array\n    sort(arr);\n \
    \   // Reverse the array\n    reverse(arr);\n    // Replace each digit by its\
    \ corresponding name from \"One\", \"Two\", \"Three\", \"Four\", \"Five\", \"\
    Six\", \"Seven\", \"Eight\", \"Nine\"\n    string[] result = new string[arr.length];\n\
    \    foreach(i, v; arr)\n    {\n        switch(v)\n        {\n            case\
    \ 1:\n                result[i] = \"One\";\n                break;\n         \
    \   case 2:\n                result[i] = \"Two\";\n                break;\n  \
    \          case 3:\n                result[i] = \"Three\";\n                break;\n\
    \            case 4:\n                result[i] = \"Four\";\n                break;\n\
    \            case 5:\n                result[i] = \"Five\";\n                break;\n\
    \            case 6:\n                result[i] = \"Six\";\n                break;\n\
    \            case 7:\n                result[i] = \"Seven\";\n               \
    \ break;\n            case 8:\n                result[i] = \"Eight\";\n      \
    \          break;\n            case 9:\n                result[i] = \"Nine\";\n\
    \                break;\n        }\n    }\n    return result;\n}", "{\n    string[]\
    \ result = new string[0];\n    long[] sorted = new long[0];\n    foreach(long\
    \ i; arr)\n    {\n        if(i > 0 && i < 10)\n        {\n            sorted ~=\
    \ i;\n        }\n    }\n    sort(sorted);\n    foreach(long i; sorted)\n    {\n\
    \        switch(i)\n        {\n            case 1:\n                result ~=\
    \ \"One\";\n                break;\n            case 2:\n                result\
    \ ~= \"Two\";\n                break;\n            case 3:\n                result\
    \ ~= \"Three\";\n                break;\n            case 4:\n               \
    \ result ~= \"Four\";\n                break;\n            case 5:\n         \
    \       result ~= \"Five\";\n                break;\n            case 6:\n   \
    \             result ~= \"Six\";\n                break;\n            case 7:\n\
    \                result ~= \"Seven\";\n                break;\n            case\
    \ 8:\n                result ~= \"Eight\";\n                break;\n         \
    \   case 9:\n                result ~= \"Nine\";\n                break;\n   \
    \     }\n    }\n    reverse(result);\n    return result;\n}", "{\n    auto nums\
    \ = arr.filter!(a => a > 0 && a < 10);\n    nums.sort!((a, b) => a > b);\n   \
    \ nums.reverse;\n    return nums.map!(a => [\"One\", \"Two\", \"Three\", \"Four\"\
    , \"Five\", \"Six\", \"Seven\", \"Eight\", \"Nine\"][a - 1]);\n}", "{\n    string[]\
    \ result = new string[0];\n    foreach(i; arr)\n    {\n        if(i > 0 && i <\
    \ 10)\n        {\n            result ~= to!string(i);\n        }\n    }\n    result.sort!((a,\
    \ b) => a.length > b.length);\n    result.reverse;\n    foreach(i; 0 .. result.length)\n\
    \    {\n        switch(result[i])\n        {\n            case \"1\":\n      \
    \          result[i] = \"One\";\n                break;\n            case \"2\"\
    :\n                result[i] = \"Two\";\n                break;\n            case\
    \ \"3\":\n                result[i] = \"Three\";\n                break;\n   \
    \         case \"4\":\n                result[i] = \"Four\";\n               \
    \ break;\n            case \"5\":\n                result[i] = \"Five\";\n   \
    \             break;\n            case \"6\":\n                result[i] = \"\
    Six\";\n                break;\n            case \"7\":\n                result[i]\
    \ = \"Seven\";\n                break;\n            case \"8\":\n            \
    \    result[i] = \"Eight\";\n                break;\n            case \"9\":\n\
    \                result[i] = \"Nine\";\n                break;\n        }\n  \
    \  }\n    return result;\n}", "{\n    string[] result = [];\n    foreach(long\
    \ x; arr)\n    {\n        if(x > 0 && x < 10)\n        {\n            result ~=\
    \ to!string(x);\n        }\n    }\n    sort(result);\n    reverse(result);\n \
    \   foreach(ref string x; result)\n    {\n        switch(x)\n        {\n     \
    \       case \"1\":\n                x = \"One\";\n                break;\n  \
    \          case \"2\":\n                x = \"Two\";\n                break;\n\
    \            case \"3\":\n                x = \"Three\";\n                break;\n\
    \            case \"4\":\n                x = \"Four\";\n                break;\n\
    \            case \"5\":\n                x = \"Five\";\n                break;\n\
    \            case \"6\":\n                x = \"Six\";\n                break;\n\
    \            case \"7\":\n                x = \"Seven\";\n                break;\n\
    \            case \"8\":\n                x = \"Eight\";\n                break;\n\
    \            case \"9\":\n                x = \"Nine\";\n                break;\n\
    \        }\n    }\n    return result;\n}", "{\n    string[] result = new string[arr.length];\n\
    \    int index = 0;\n    foreach(long i; arr)\n    {\n        if(i > 0 && i <\
    \ 10)\n        {\n            switch(i)\n            {\n                case 1:\n\
    \                    result[index] = \"One\";\n                    break;\n  \
    \              case 2:\n                    result[index] = \"Two\";\n       \
    \             break;\n                case 3:\n                    result[index]\
    \ = \"Three\";\n                    break;\n                case 4:\n        \
    \            result[index] = \"Four\";\n                    break;\n         \
    \       case 5:\n                    result[index] = \"Five\";\n             \
    \       break;\n                case 6:\n                    result[index] = \"\
    Six\";\n                    break;\n                case 7:\n                \
    \    result[index] = \"Seven\";\n                    break;\n                case\
    \ 8:\n                    result[index] = \"Eight\";\n                    break;\n\
    \                case 9:\n                    result[index] = \"Nine\";\n    \
    \                break;\n            }\n            index++;\n        }\n    }\n\
    \    result = result[0..index];\n    result.sort;\n    result.reverse;\n    return\
    \ result;\n}", "{\n    auto result = arr.filter!(a => a > 0 && a < 10).sort.reverse;\n\
    \    return result.map!(a => [\"One\", \"Two\", \"Three\", \"Four\", \"Five\"\
    , \"Six\", \"Seven\", \"Eight\", \"Nine\"][a - 1]);\n}", "{\n    // TODO: implement\
    \ this function\n    return null;\n}", "{\n    // Sort the array\n    sort(arr);\n\
    \    // Reverse the array\n    reverse(arr);\n    // Replace each digit by its\
    \ corresponding name from \"One\", \"Two\", \"Three\", \"Four\", \"Five\", \"\
    Six\", \"Seven\", \"Eight\", \"Nine\"\n    string[] result = new string[arr.length];\n\
    \    foreach(i, elem; arr)\n    {\n        if(elem == 1)\n            result[i]\
    \ = \"One\";\n        else if(elem == 2)\n            result[i] = \"Two\";\n \
    \       else if(elem == 3)\n            result[i] = \"Three\";\n        else if(elem\
    \ == 4)\n            result[i] = \"Four\";\n        else if(elem == 5)\n     \
    \       result[i] = \"Five\";\n        else if(elem == 6)\n            result[i]\
    \ = \"Six\";\n        else if(elem == 7)\n            result[i] = \"Seven\";\n\
    \        else if(elem == 8)\n            result[i] = \"Eight\";\n        else\
    \ if(elem == 9)\n            result[i] = \"Nine\";\n    }\n    return result;\n\
    }", "{\n    string[] result = new string[arr.length];\n    int j = 0;\n    foreach(i;\
    \ arr)\n    {\n        if(i > 0 && i < 10)\n        {\n            result[j] =\
    \ to!string(i);\n            j++;\n        }\n    }\n    result = result[0..j];\n\
    \    sort(result);\n    reverse(result);\n    foreach(i; 0..result.length)\n \
    \   {\n        switch(result[i])\n        {\n            case \"1\":\n       \
    \         result[i] = \"One\";\n                break;\n            case \"2\"\
    :\n                result[i] = \"Two\";\n                break;\n            case\
    \ \"3\":\n                result[i] = \"Three\";\n                break;\n   \
    \         case \"4\":\n                result[i] = \"Four\";\n               \
    \ break;\n            case \"5\":\n                result[i] = \"Five\";\n   \
    \             break;\n            case \"6\":\n                result[i] = \"\
    Six\";\n                break;\n            case \"7\":\n                result[i]\
    \ = \"Seven\";\n                break;\n            case \"8\":\n            \
    \    result[i] = \"Eight\";\n                break;\n            case \"9\":\n\
    \                result[i] = \"Nine\";\n                break;\n        }\n  \
    \  }\n    return result;\n}", "{\n    auto arr2 = arr.filter!(x => x >= 1 && x\
    \ <= 9).sort().reverse();\n    return arr2.map!(x => [\"One\", \"Two\", \"Three\"\
    , \"Four\", \"Five\", \"Six\", \"Seven\", \"Eight\", \"Nine\"][x - 1]);\n}", "{\n\
    \    string[] result = new string[arr.length];\n    int[] sorted = new int[arr.length];\n\
    \    int count = 0;\n    foreach(long i; arr)\n    {\n        if(i >= 1 && i <=\
    \ 9)\n        {\n            sorted[count] = i;\n            count++;\n      \
    \  }\n    }\n    sort(sorted[0..count]);\n    foreach(int i; sorted[0..count])\n\
    \    {\n        switch(i)\n        {\n            case 1:\n                result\
    \ ~= \"One\";\n                break;\n            case 2:\n                result\
    \ ~= \"Two\";\n                break;\n            case 3:\n                result\
    \ ~= \"Three\";\n                break;\n            case 4:\n               \
    \ result ~= \"Four\";\n                break;\n            case 5:\n         \
    \       result ~= \"Five\";\n                break;\n            case 6:\n   \
    \             result ~= \"Six\";\n                break;\n            case 7:\n\
    \                result ~= \"Seven\";\n                break;\n            case\
    \ 8:\n                result ~= \"Eight\";\n                break;\n         \
    \   case 9:\n                result ~= \"Nine\";\n                break;\n   \
    \     }\n    }\n    return result;\n}", "{\n    string[] result = new string[0];\n\
    \    foreach(i; arr)\n    {\n        if(i > 0 && i < 10)\n        {\n        \
    \    result ~= to!string(i);\n        }\n    }\n    sort(result);\n    reverse(result);\n\
    \    foreach(i; 0 .. result.length)\n    {\n        switch(result[i])\n      \
    \  {\n            case \"1\":\n                result[i] = \"One\";\n        \
    \        break;\n            case \"2\":\n                result[i] = \"Two\"\
    ;\n                break;\n            case \"3\":\n                result[i]\
    \ = \"Three\";\n                break;\n            case \"4\":\n            \
    \    result[i] = \"Four\";\n                break;\n            case \"5\":\n\
    \                result[i] = \"Five\";\n                break;\n            case\
    \ \"6\":\n                result[i] = \"Six\";\n                break;\n     \
    \       case \"7\":\n                result[i] = \"Seven\";\n                break;\n\
    \            case \"8\":\n                result[i] = \"Eight\";\n           \
    \     break;\n            case \"9\":\n                result[i] = \"Nine\";\n\
    \                break;\n        }\n    }\n    return result;\n}", "{\n    string[]\
    \ result = new string[0];\n    foreach(long i; arr)\n    {\n        if(i > 0 &&\
    \ i < 10)\n        {\n            result ~= to!string(i);\n        }\n    }\n\
    \    sort(result);\n    reverse(result);\n    foreach(string s; result)\n    {\n\
    \        switch(s)\n        {\n            case \"1\":\n                s = \"\
    One\";\n                break;\n            case \"2\":\n                s = \"\
    Two\";\n                break;\n            case \"3\":\n                s = \"\
    Three\";\n                break;\n            case \"4\":\n                s =\
    \ \"Four\";\n                break;\n            case \"5\":\n               \
    \ s = \"Five\";\n                break;\n            case \"6\":\n           \
    \     s = \"Six\";\n                break;\n            case \"7\":\n        \
    \        s = \"Seven\";\n                break;\n            case \"8\":\n   \
    \             s = \"Eight\";\n                break;\n            case \"9\":\n\
    \                s = \"Nine\";\n                break;\n        }\n    }\n   \
    \ return result;\n}", "{\n    string[] result = [];\n    foreach(i; arr)\n   \
    \ {\n        if(i > 0 && i < 10)\n        {\n            result ~= to!string(i);\n\
    \        }\n    }\n    sort(result);\n    reverse(result);\n    foreach(i; result)\n\
    \    {\n        switch(i)\n        {\n            case \"1\":\n              \
    \  i = \"One\";\n                break;\n            case \"2\":\n           \
    \     i = \"Two\";\n                break;\n            case \"3\":\n        \
    \        i = \"Three\";\n                break;\n            case \"4\":\n   \
    \             i = \"Four\";\n                break;\n            case \"5\":\n\
    \                i = \"Five\";\n                break;\n            case \"6\"\
    :\n                i = \"Six\";\n                break;\n            case \"7\"\
    :\n                i = \"Seven\";\n                break;\n            case \"\
    8\":\n                i = \"Eight\";\n                break;\n            case\
    \ \"9\":\n                i = \"Nine\";\n                break;\n        }\n \
    \   }\n    return result;\n}", "{\n    string[] result;\n    foreach(e; arr)\n\
    \    {\n        if(e > 0 && e < 10)\n        {\n            result ~= to!string(e);\n\
    \        }\n    }\n    sort(result);\n    reverse(result);\n    foreach(i, e;\
    \ result)\n    {\n        switch(e)\n        {\n            case \"1\":\n    \
    \            result[i] = \"One\";\n                break;\n            case \"\
    2\":\n                result[i] = \"Two\";\n                break;\n         \
    \   case \"3\":\n                result[i] = \"Three\";\n                break;\n\
    \            case \"4\":\n                result[i] = \"Four\";\n            \
    \    break;\n            case \"5\":\n                result[i] = \"Five\";\n\
    \                break;\n            case \"6\":\n                result[i] =\
    \ \"Six\";\n                break;\n            case \"7\":\n                result[i]\
    \ = \"Seven\";\n                break;\n            case \"8\":\n            \
    \    result[i] = \"Eight\";\n                break;\n            case \"9\":\n\
    \                result[i] = \"Nine\";\n                break;\n        }\n  \
    \  }\n    return result;\n}", "{\n    string[] result;\n    foreach(i; arr)\n\
    \    {\n        if(i > 0 && i < 10)\n        {\n            result ~= to!string(i);\n\
    \        }\n    }\n    result.sort;\n    result.reverse;\n    foreach(i; result)\n\
    \    {\n        switch(i)\n        {\n            case \"1\":\n              \
    \  i = \"One\";\n                break;\n            case \"2\":\n           \
    \     i = \"Two\";\n                break;\n            case \"3\":\n        \
    \        i = \"Three\";\n                break;\n            case \"4\":\n   \
    \             i = \"Four\";\n                break;\n            case \"5\":\n\
    \                i = \"Five\";\n                break;\n            case \"6\"\
    :\n                i = \"Six\";\n                break;\n            case \"7\"\
    :\n                i = \"Seven\";\n                break;\n            case \"\
    8\":\n                i = \"Eight\";\n                break;\n            case\
    \ \"9\":\n                i = \"Nine\";\n                break;\n        }\n \
    \   }\n    return result;\n}", "{\n    string[] result = new string[0];\n    foreach(long\
    \ i; arr)\n    {\n        if(i > 0 && i < 10)\n        {\n            result ~=\
    \ to!string(i);\n        }\n    }\n    result.sort!(a, b => a.length > b.length);\n\
    \    result.reverse;\n    foreach(i, ref str; result)\n    {\n        switch(str)\n\
    \        {\n            case \"1\":\n                str = \"One\";\n        \
    \        break;\n            case \"2\":\n                str = \"Two\";\n   \
    \             break;\n            case \"3\":\n                str = \"Three\"\
    ;\n                break;\n            case \"4\":\n                str = \"Four\"\
    ;\n                break;\n            case \"5\":\n                str = \"Five\"\
    ;\n                break;\n            case \"6\":\n                str = \"Six\"\
    ;\n                break;\n            case \"7\":\n                str = \"Seven\"\
    ;\n                break;\n            case \"8\":\n                str = \"Eight\"\
    ;\n                break;\n            case \"9\":\n                str = \"Nine\"\
    ;\n                break;\n        }\n    }\n    return result;\n}", "{\n    string[]\
    \ result = new string[];\n    foreach(elem; arr)\n    {\n        if(elem > 0 &&\
    \ elem < 10)\n        {\n            switch(elem)\n            {\n           \
    \     case 1:\n                    result ~= \"One\";\n                    break;\n\
    \                case 2:\n                    result ~= \"Two\";\n           \
    \         break;\n                case 3:\n                    result ~= \"Three\"\
    ;\n                    break;\n                case 4:\n                    result\
    \ ~= \"Four\";\n                    break;\n                case 5:\n        \
    \            result ~= \"Five\";\n                    break;\n               \
    \ case 6:\n                    result ~= \"Six\";\n                    break;\n\
    \                case 7:\n                    result ~= \"Seven\";\n         \
    \           break;\n                case 8:\n                    result ~= \"\
    Eight\";\n                    break;\n                case 9:\n              \
    \      result ~= \"Nine\";\n                    break;\n            }\n      \
    \  }\n    }\n    sort(result);\n    reverse(result);\n    return result;\n}",
  "{\n    auto nums = arr.filter!(a => a > 0 && a < 10)().sort().reverse();\n    return\
    \ nums.map!(a => [\"One\", \"Two\", \"Three\", \"Four\", \"Five\", \"Six\", \"\
    Seven\", \"Eight\", \"Nine\"][a - 1])();\n}", "{\n    auto result = arr.filter!(a\
    \ => a > 0 && a < 10).sort.reverse;\n    return result.map!(a => [\"One\", \"\
    Two\", \"Three\", \"Four\", \"Five\", \"Six\", \"Seven\", \"Eight\", \"Nine\"\
    ][a - 1]);\n}", "{\n    string[] result = new string[0];\n    long[] sorted =\
    \ arr.filter!(a => a > 0 && a < 10).sort;\n    foreach(i; sorted.reverse)\n  \
    \  {\n        switch(i)\n        {\n            case 1:\n                result\
    \ ~= \"One\";\n                break;\n            case 2:\n                result\
    \ ~= \"Two\";\n                break;\n            case 3:\n                result\
    \ ~= \"Three\";\n                break;\n            case 4:\n               \
    \ result ~= \"Four\";\n                break;\n            case 5:\n         \
    \       result ~= \"Five\";\n                break;\n            case 6:\n   \
    \             result ~= \"Six\";\n                break;\n            case 7:\n\
    \                result ~= \"Seven\";\n                break;\n            case\
    \ 8:\n                result ~= \"Eight\";\n                break;\n         \
    \   case 9:\n                result ~= \"Nine\";\n                break;\n   \
    \     }\n    }\n    return result;\n}", "{\n    string[] result;\n    foreach(elem;\
    \ arr)\n    {\n        if(elem > 0 && elem < 10)\n        {\n            result\
    \ ~= to!string(elem);\n        }\n    }\n    sort(result);\n    reverse(result);\n\
    \    foreach(elem; result)\n    {\n        switch(elem)\n        {\n         \
    \   case \"1\":\n                elem = \"One\";\n                break;\n   \
    \         case \"2\":\n                elem = \"Two\";\n                break;\n\
    \            case \"3\":\n                elem = \"Three\";\n                break;\n\
    \            case \"4\":\n                elem = \"Four\";\n                break;\n\
    \            case \"5\":\n                elem = \"Five\";\n                break;\n\
    \            case \"6\":\n                elem = \"Six\";\n                break;\n\
    \            case \"7\":\n                elem = \"Seven\";\n                break;\n\
    \            case \"8\":\n                elem = \"Eight\";\n                break;\n\
    \            case \"9\":\n                elem = \"Nine\";\n                break;\n\
    \        }\n    }\n    return result;\n}", "{\n    auto result = arr.filter!(a\
    \ => a > 0 && a < 10).sort.reverse;\n    return result.map!(a => [\"One\", \"\
    Two\", \"Three\", \"Four\", \"Five\", \"Six\", \"Seven\", \"Eight\", \"Nine\"\
    ][a - 1]);\n}", "{\n    string[] result = new string[arr.length];\n    int[] sorted\
    \ = new int[arr.length];\n    int j = 0;\n    foreach(i; arr)\n    {\n       \
    \ if(i >= 1 && i <= 9)\n        {\n            sorted[j] = i;\n            j++;\n\
    \        }\n    }\n    sorted = sorted[0..j];\n    sort(sorted);\n    j = 0;\n\
    \    foreach(i; sorted)\n    {\n        switch(i)\n        {\n            case\
    \ 1:\n                result[j] = \"One\";\n                break;\n         \
    \   case 2:\n                result[j] = \"Two\";\n                break;\n  \
    \          case 3:\n                result[j] = \"Three\";\n                break;\n\
    \            case 4:\n                result[j] = \"Four\";\n                break;\n\
    \            case 5:\n                result[j] = \"Five\";\n                break;\n\
    \            case 6:\n                result[j] = \"Six\";\n                break;\n\
    \            case 7:\n                result[j] = \"Seven\";\n               \
    \ break;\n            case 8:\n                result[j] = \"Eight\";\n      \
    \          break;\n            case 9:\n                result[j] = \"Nine\";\n\
    \                break;\n        }\n        j++;\n    }\n    return result;\n}",
  "{\n    string[] result = [];\n    foreach(elem; arr)\n    {\n        if(elem >=\
    \ 1 && elem <= 9)\n        {\n            result ~= to!string(elem);\n       \
    \ }\n    }\n    sort(result);\n    reverse(result);\n    return result;\n}", "{\n\
    \    string[] result;\n    foreach(i; arr)\n    {\n        if(i > 0 && i < 10)\n\
    \        {\n            result ~= to!string(i);\n        }\n    }\n    sort(result);\n\
    \    reverse(result);\n    foreach(i; result)\n    {\n        switch(i)\n    \
    \    {\n            case \"1\":\n                i = \"One\";\n              \
    \  break;\n            case \"2\":\n                i = \"Two\";\n           \
    \     break;\n            case \"3\":\n                i = \"Three\";\n      \
    \          break;\n            case \"4\":\n                i = \"Four\";\n  \
    \              break;\n            case \"5\":\n                i = \"Five\";\n\
    \                break;\n            case \"6\":\n                i = \"Six\"\
    ;\n                break;\n            case \"7\":\n                i = \"Seven\"\
    ;\n                break;\n            case \"8\":\n                i = \"Eight\"\
    ;\n                break;\n            case \"9\":\n                i = \"Nine\"\
    ;\n                break;\n        }\n    }\n    return result;\n}", "{\n    //\
    \ Sort the array\n    sort(arr);\n    // Reverse the array\n    reverse(arr);\n\
    \    // Replace each digit by its corresponding name from \"One\", \"Two\", \"\
    Three\", \"Four\", \"Five\", \"Six\", \"Seven\", \"Eight\", \"Nine\"\n    string[]\
    \ result = new string[arr.length];\n    foreach(i, v; arr)\n    {\n        switch(v)\n\
    \        {\n            case 1:\n                result[i] = \"One\";\n      \
    \          break;\n            case 2:\n                result[i] = \"Two\";\n\
    \                break;\n            case 3:\n                result[i] = \"Three\"\
    ;\n                break;\n            case 4:\n                result[i] = \"\
    Four\";\n                break;\n            case 5:\n                result[i]\
    \ = \"Five\";\n                break;\n            case 6:\n                result[i]\
    \ = \"Six\";\n                break;\n            case 7:\n                result[i]\
    \ = \"Seven\";\n                break;\n            case 8:\n                result[i]\
    \ = \"Eight\";\n                break;\n            case 9:\n                result[i]\
    \ = \"Nine\";\n                break;\n        }\n    }\n    return result;\n}",
  "{\n    string[] result = [];\n    foreach(i; arr)\n    {\n        if(i > 0 && i\
    \ < 10)\n        {\n            result ~= to!string(i);\n        }\n    }\n  \
    \  sort(result);\n    reverse(result);\n    foreach(i; result)\n    {\n      \
    \  switch(i)\n        {\n            case \"1\":\n                i = \"One\"\
    ;\n                break;\n            case \"2\":\n                i = \"Two\"\
    ;\n                break;\n            case \"3\":\n                i = \"Three\"\
    ;\n                break;\n            case \"4\":\n                i = \"Four\"\
    ;\n                break;\n            case \"5\":\n                i = \"Five\"\
    ;\n                break;\n            case \"6\":\n                i = \"Six\"\
    ;\n                break;\n            case \"7\":\n                i = \"Seven\"\
    ;\n                break;\n            case \"8\":\n                i = \"Eight\"\
    ;\n                break;\n            case \"9\":\n                i = \"Nine\"\
    ;\n                break;\n        }\n    }\n    return result;\n}", "{\n    string[]\
    \ result = [];\n    foreach(i; arr)\n    {\n        if(i >= 1 && i <= 9)\n   \
    \     {\n            result ~= to!string(i);\n        }\n    }\n    sort(result);\n\
    \    reverse(result);\n    foreach(i; result)\n    {\n        switch(i)\n    \
    \    {\n            case \"1\":\n                i = \"One\";\n              \
    \  break;\n            case \"2\":\n                i = \"Two\";\n           \
    \     break;\n            case \"3\":\n                i = \"Three\";\n      \
    \          break;\n            case \"4\":\n                i = \"Four\";\n  \
    \              break;\n            case \"5\":\n                i = \"Five\";\n\
    \                break;\n            case \"6\":\n                i = \"Six\"\
    ;\n                break;\n            case \"7\":\n                i = \"Seven\"\
    ;\n                break;\n            case \"8\":\n                i = \"Eight\"\
    ;\n                break;\n            case \"9\":\n                i = \"Nine\"\
    ;\n                break;\n        }\n    }\n    return result;\n}", "{\n    string[]\
    \ result;\n    foreach(i; arr)\n    {\n        if(i > 0 && i < 10)\n        {\n\
    \            result ~= to!string(i);\n        }\n    }\n    result.sort!((a, b)\
    \ => a.length > b.length);\n    result.reverse;\n    foreach(i; 0 .. result.length)\n\
    \    {\n        switch(result[i])\n        {\n            case \"1\":\n      \
    \          result[i] = \"One\";\n                break;\n            case \"2\"\
    :\n                result[i] = \"Two\";\n                break;\n            case\
    \ \"3\":\n                result[i] = \"Three\";\n                break;\n   \
    \         case \"4\":\n                result[i] = \"Four\";\n               \
    \ break;\n            case \"5\":\n                result[i] = \"Five\";\n   \
    \             break;\n            case \"6\":\n                result[i] = \"\
    Six\";\n                break;\n            case \"7\":\n                result[i]\
    \ = \"Seven\";\n                break;\n            case \"8\":\n            \
    \    result[i] = \"Eight\";\n                break;\n            case \"9\":\n\
    \                result[i] = \"Nine\";\n                break;\n        }\n  \
    \  }\n    return result;\n}", "{\n    string[] result;\n    foreach(i; arr)\n\
    \    {\n        if(i > 0 && i < 10)\n        {\n            result ~= to!string(i);\n\
    \        }\n    }\n    sort(result);\n    reverse(result);\n    foreach(i; 0..result.length)\n\
    \    {\n        switch(result[i])\n        {\n            case \"1\":\n      \
    \          result[i] = \"One\";\n                break;\n            case \"2\"\
    :\n                result[i] = \"Two\";\n                break;\n            case\
    \ \"3\":\n                result[i] = \"Three\";\n                break;\n   \
    \         case \"4\":\n                result[i] = \"Four\";\n               \
    \ break;\n            case \"5\":\n                result[i] = \"Five\";\n   \
    \             break;\n            case \"6\":\n                result[i] = \"\
    Six\";\n                break;\n            case \"7\":\n                result[i]\
    \ = \"Seven\";\n                break;\n            case \"8\":\n            \
    \    result[i] = \"Eight\";\n                break;\n            case \"9\":\n\
    \                result[i] = \"Nine\";\n                break;\n        }\n  \
    \  }\n    return result;\n}", "{\n    // Sort the array\n    sort(arr);\n    //\
    \ Reverse the array\n    reverse(arr);\n    // Replace each digit by its corresponding\
    \ name from \"One\", \"Two\", \"Three\", \"Four\", \"Five\", \"Six\", \"Seven\"\
    , \"Eight\", \"Nine\"\n    string[] result = new string[arr.length];\n    foreach(i,\
    \ e; arr)\n    {\n        if(e == 1)\n            result[i] = \"One\";\n     \
    \   else if(e == 2)\n            result[i] = \"Two\";\n        else if(e == 3)\n\
    \            result[i] = \"Three\";\n        else if(e == 4)\n            result[i]\
    \ = \"Four\";\n        else if(e == 5)\n            result[i] = \"Five\";\n  \
    \      else if(e == 6)\n            result[i] = \"Six\";\n        else if(e ==\
    \ 7)\n            result[i] = \"Seven\";\n        else if(e == 8)\n          \
    \  result[i] = \"Eight\";\n        else if(e == 9)\n            result[i] = \"\
    Nine\";\n    }\n    return result;\n}", "{\n    auto arr2 = arr.filter!(a => a\
    \ >= 1 && a <= 9).sort.reverse;\n    return arr2.map!(a => [\"One\", \"Two\",\
    \ \"Three\", \"Four\", \"Five\", \"Six\", \"Seven\", \"Eight\", \"Nine\"][a-1]);\n\
    }", "{\n    string[] result = [];\n    foreach(i; arr)\n    {\n        if(i >\
    \ 0 && i < 10)\n        {\n            result ~= to!string(i);\n        }\n  \
    \  }\n    sort(result);\n    reverse(result);\n    foreach(i; result)\n    {\n\
    \        switch(i)\n        {\n            case \"1\":\n                i = \"\
    One\";\n                break;\n            case \"2\":\n                i = \"\
    Two\";\n                break;\n            case \"3\":\n                i = \"\
    Three\";\n                break;\n            case \"4\":\n                i =\
    \ \"Four\";\n                break;\n            case \"5\":\n               \
    \ i = \"Five\";\n                break;\n            case \"6\":\n           \
    \     i = \"Six\";\n                break;\n            case \"7\":\n        \
    \        i = \"Seven\";\n                break;\n            case \"8\":\n   \
    \             i = \"Eight\";\n                break;\n            case \"9\":\n\
    \                i = \"Nine\";\n                break;\n        }\n    }\n   \
    \ return result;\n}", "{\n    auto res = arr.filter!(a => a >= 1 && a <= 9).sort.reverse;\n\
    \    return res.map!(a => [\"One\", \"Two\", \"Three\", \"Four\", \"Five\", \"\
    Six\", \"Seven\", \"Eight\", \"Nine\"][a - 1]);\n}", "{\n    string[] result =\
    \ new string[];\n    foreach(i; arr)\n    {\n        if(i > 0 && i < 10)\n   \
    \     {\n            result ~= i.to!string;\n        }\n    }\n    result.sort!((a,\
    \ b) => a.length > b.length);\n    result.reverse;\n    foreach(i; result)\n \
    \   {\n        switch(i)\n        {\n            case \"1\":\n               \
    \ i = \"One\";\n                break;\n            case \"2\":\n            \
    \    i = \"Two\";\n                break;\n            case \"3\":\n         \
    \       i = \"Three\";\n                break;\n            case \"4\":\n    \
    \            i = \"Four\";\n                break;\n            case \"5\":\n\
    \                i = \"Five\";\n                break;\n            case \"6\"\
    :\n                i = \"Six\";\n                break;\n            case \"7\"\
    :\n                i = \"Seven\";\n                break;\n            case \"\
    8\":\n                i = \"Eight\";\n                break;\n            case\
    \ \"9\":\n                i = \"Nine\";\n                break;\n        }\n \
    \   }\n    return result;\n}", "{\n    auto result = arr.filter!(a => a > 0 &&\
    \ a < 10).sort.reverse;\n    return result.map!(a => [\"One\", \"Two\", \"Three\"\
    , \"Four\", \"Five\", \"Six\", \"Seven\", \"Eight\", \"Nine\"][a - 1]);\n}", "{\n\
    \    string[] result = [];\n    foreach(long i; arr)\n    {\n        if(i > 0\
    \ && i < 10)\n        {\n            result ~= to!string(i);\n        }\n    }\n\
    \    sort(result);\n    reverse(result);\n    foreach(string i; result)\n    {\n\
    \        switch(i)\n        {\n            case \"1\":\n                i = \"\
    One\";\n                break;\n            case \"2\":\n                i = \"\
    Two\";\n                break;\n            case \"3\":\n                i = \"\
    Three\";\n                break;\n            case \"4\":\n                i =\
    \ \"Four\";\n                break;\n            case \"5\":\n               \
    \ i = \"Five\";\n                break;\n            case \"6\":\n           \
    \     i = \"Six\";\n                break;\n            case \"7\":\n        \
    \        i = \"Seven\";\n                break;\n            case \"8\":\n   \
    \             i = \"Eight\";\n                break;\n            case \"9\":\n\
    \                i = \"Nine\";\n                break;\n        }\n    }\n   \
    \ return result;\n}", "{\n    auto arr_sorted = arr.sort();\n    auto arr_reversed\
    \ = arr_sorted.reverse();\n    auto arr_filtered = arr_reversed.filter!(a => a\
    \ >= 1 && a <= 9);\n    auto arr_mapped = arr_filtered.map!(a => a == 1 ? \"One\"\
    \ : a == 2 ? \"Two\" : a == 3 ? \"Three\" : a == 4 ? \"Four\" : a == 5 ? \"Five\"\
    \ : a == 6 ? \"Six\" : a == 7 ? \"Seven\" : a == 8 ? \"Eight\" : \"Nine\");\n\
    \    return arr_mapped;\n}", "{\n    string[] result;\n    foreach(i; arr)\n \
    \   {\n        if(i > 0 && i < 10)\n        {\n            result ~= to!string(i);\n\
    \        }\n    }\n    result.sort!((a, b) => a.length > b.length);\n    result.reverse;\n\
    \    foreach(i; 0 .. result.length)\n    {\n        switch(result[i])\n      \
    \  {\n            case \"1\":\n                result[i] = \"One\";\n        \
    \        break;\n            case \"2\":\n                result[i] = \"Two\"\
    ;\n                break;\n            case \"3\":\n                result[i]\
    \ = \"Three\";\n                break;\n            case \"4\":\n            \
    \    result[i] = \"Four\";\n                break;\n            case \"5\":\n\
    \                result[i] = \"Five\";\n                break;\n            case\
    \ \"6\":\n                result[i] = \"Six\";\n                break;\n     \
    \       case \"7\":\n                result[i] = \"Seven\";\n                break;\n\
    \            case \"8\":\n                result[i] = \"Eight\";\n           \
    \     break;\n            case \"9\":\n                result[i] = \"Nine\";\n\
    \                break;\n        }\n    }\n    return result;\n}", "{\n    string[]\
    \ result = [];\n    foreach(elem; arr)\n    {\n        if(elem > 0 && elem < 10)\n\
    \        {\n            result ~= to!string(elem);\n        }\n    }\n    sort(result);\n\
    \    reverse(result);\n    foreach(elem; result)\n    {\n        switch(to!long(elem))\n\
    \        {\n            case 1:\n                elem = \"One\";\n           \
    \     break;\n            case 2:\n                elem = \"Two\";\n         \
    \       break;\n            case 3:\n                elem = \"Three\";\n     \
    \           break;\n            case 4:\n                elem = \"Four\";\n  \
    \              break;\n            case 5:\n                elem = \"Five\";\n\
    \                break;\n            case 6:\n                elem = \"Six\";\n\
    \                break;\n            case 7:\n                elem = \"Seven\"\
    ;\n                break;\n            case 8:\n                elem = \"Eight\"\
    ;\n                break;\n            case 9:\n                elem = \"Nine\"\
    ;\n                break;\n        }\n    }\n    return result;\n}", "{\n    string[]\
    \ result = [];\n    foreach(i; arr)\n    {\n        if(i > 0 && i < 10)\n    \
    \    {\n            result ~= to!string(i);\n        }\n    }\n    sort(result);\n\
    \    reverse(result);\n    foreach(i; result)\n    {\n        switch(i)\n    \
    \    {\n            case \"1\":\n                i = \"One\";\n              \
    \  break;\n            case \"2\":\n                i = \"Two\";\n           \
    \     break;\n            case \"3\":\n                i = \"Three\";\n      \
    \          break;\n            case \"4\":\n                i = \"Four\";\n  \
    \              break;\n            case \"5\":\n                i = \"Five\";\n\
    \                break;\n            case \"6\":\n                i = \"Six\"\
    ;\n                break;\n            case \"7\":\n                i = \"Seven\"\
    ;\n                break;\n            case \"8\":\n                i = \"Eight\"\
    ;\n                break;\n            case \"9\":\n                i = \"Nine\"\
    ;\n                break;\n        }\n    }\n    return result;\n}", "{\n    string[]\
    \ result = [];\n    foreach(i; arr)\n    {\n        if(i >= 1 && i <= 9)\n   \
    \     {\n            result ~= to!string(i);\n        }\n    }\n    sort(result);\n\
    \    reverse(result);\n    foreach(i; 0 .. result.length)\n    {\n        switch(result[i])\n\
    \        {\n            case \"1\":\n                result[i] = \"One\";\n  \
    \              break;\n            case \"2\":\n                result[i] = \"\
    Two\";\n                break;\n            case \"3\":\n                result[i]\
    \ = \"Three\";\n                break;\n            case \"4\":\n            \
    \    result[i] = \"Four\";\n                break;\n            case \"5\":\n\
    \                result[i] = \"Five\";\n                break;\n            case\
    \ \"6\":\n                result[i] = \"Six\";\n                break;\n     \
    \       case \"7\":\n                result[i] = \"Seven\";\n                break;\n\
    \            case \"8\":\n                result[i] = \"Eight\";\n           \
    \     break;\n            case \"9\":\n                result[i] = \"Nine\";\n\
    \                break;\n        }\n    }\n    return result;\n}", "{\n    string[]\
    \ result;\n    foreach(i; arr)\n    {\n        if(i > 0 && i < 10)\n        {\n\
    \            result ~= to!string(i);\n        }\n    }\n    result.sort!((a, b)\
    \ => a.length < b.length);\n    result.reverse;\n    foreach(i; 0 .. result.length)\n\
    \    {\n        switch(result[i])\n        {\n            case \"1\":\n      \
    \          result[i] = \"One\";\n                break;\n            case \"2\"\
    :\n                result[i] = \"Two\";\n                break;\n            case\
    \ \"3\":\n                result[i] = \"Three\";\n                break;\n   \
    \         case \"4\":\n                result[i] = \"Four\";\n               \
    \ break;\n            case \"5\":\n                result[i] = \"Five\";\n   \
    \             break;\n            case \"6\":\n                result[i] = \"\
    Six\";\n                break;\n            case \"7\":\n                result[i]\
    \ = \"Seven\";\n                break;\n            case \"8\":\n            \
    \    result[i] = \"Eight\";\n                break;\n            case \"9\":\n\
    \                result[i] = \"Nine\";\n                break;\n        }\n  \
    \  }\n    return result;\n}", "{\n    string[] res;\n    foreach(e; arr)\n   \
    \ {\n        if(e > 0 && e < 10)\n        {\n            res ~= to!string(e);\n\
    \        }\n    }\n    res.sort;\n    res.reverse;\n    foreach(i, e; res)\n \
    \   {\n        switch(e)\n        {\n            case \"1\":\n               \
    \ res[i] = \"One\";\n                break;\n            case \"2\":\n       \
    \         res[i] = \"Two\";\n                break;\n            case \"3\":\n\
    \                res[i] = \"Three\";\n                break;\n            case\
    \ \"4\":\n                res[i] = \"Four\";\n                break;\n       \
    \     case \"5\":\n                res[i] = \"Five\";\n                break;\n\
    \            case \"6\":\n                res[i] = \"Six\";\n                break;\n\
    \            case \"7\":\n                res[i] = \"Seven\";\n              \
    \  break;\n            case \"8\":\n                res[i] = \"Eight\";\n    \
    \            break;\n            case \"9\":\n                res[i] = \"Nine\"\
    ;\n                break;\n        }\n    }\n    return res;\n}", "{\n    string[]\
    \ res = [];\n    foreach(e; arr)\n    {\n        if(e > 0 && e < 10)\n       \
    \ {\n            res ~= e.to!string;\n        }\n    }\n    sort(res);\n    reverse(res);\n\
    \    return res.map!(a => a.to!string);\n}", "{\n    // TODO: implement\n    return\
    \ null;\n}", "{\n    string[] result = [];\n    foreach(elem; arr)\n    {\n  \
    \      if(elem < 1 || elem > 9)\n            continue;\n        else\n       \
    \     result ~= to!string(elem);\n    }\n    sort(result);\n    reverse(result);\n\
    \    return result;\n}", "{\n    auto result = arr.filter!(x => x > 0 && x < 10).sort.reverse;\n\
    \    return result.map!(x => [\"One\", \"Two\", \"Three\", \"Four\", \"Five\"\
    , \"Six\", \"Seven\", \"Eight\", \"Nine\"][x - 1]);\n}", "{\n    // sort the array\n\
    \    sort(arr);\n    // reverse the array\n    reverse(arr);\n    // replace each\
    \ digit by its corresponding name from \"One\", \"Two\", \"Three\", \"Four\",\
    \ \"Five\", \"Six\", \"Seven\", \"Eight\", \"Nine\"\n    string[] result = new\
    \ string[arr.length];\n    foreach(i, e; arr)\n    {\n        if(e == 1)\n   \
    \         result[i] = \"One\";\n        else if(e == 2)\n            result[i]\
    \ = \"Two\";\n        else if(e == 3)\n            result[i] = \"Three\";\n  \
    \      else if(e == 4)\n            result[i] = \"Four\";\n        else if(e ==\
    \ 5)\n            result[i] = \"Five\";\n        else if(e == 6)\n           \
    \ result[i] = \"Six\";\n        else if(e == 7)\n            result[i] = \"Seven\"\
    ;\n        else if(e == 8)\n            result[i] = \"Eight\";\n        else if(e\
    \ == 9)\n            result[i] = \"Nine\";\n    }\n    return result;\n}", "{\n\
    \    string[] result;\n    long[] sorted = arr.filter!(a => a > 0 && a < 10).sort;\n\
    \    result = sorted.map!(a => a.to!string).reverse;\n    return result;\n}",
  "{\n    string[] result = new string[arr.length];\n    int[] sorted = sort(arr);\n\
    \    int i = 0;\n    foreach(int x; sorted)\n    {\n        if(x == 1)\n     \
    \   {\n            result[i] = \"One\";\n        }\n        else if(x == 2)\n\
    \        {\n            result[i] = \"Two\";\n        }\n        else if(x ==\
    \ 3)\n        {\n            result[i] = \"Three\";\n        }\n        else if(x\
    \ == 4)\n        {\n            result[i] = \"Four\";\n        }\n        else\
    \ if(x == 5)\n        {\n            result[i] = \"Five\";\n        }\n      \
    \  else if(x == 6)\n        {\n            result[i] = \"Six\";\n        }\n \
    \       else if(x == 7)\n        {\n            result[i] = \"Seven\";\n     \
    \   }\n        else if(x == 8)\n        {\n            result[i] = \"Eight\";\n\
    \        }\n        else if(x == 9)\n        {\n            result[i] = \"Nine\"\
    ;\n        }\n        i++;\n    }\n    return result;\n}", "{\n    string[] result\
    \ = new string[arr.length];\n    int i = 0;\n    foreach(long num; arr)\n    {\n\
    \        if(num > 0 && num < 10)\n        {\n            switch(num)\n       \
    \     {\n                case 1:\n                    result[i] = \"One\";\n \
    \                   break;\n                case 2:\n                    result[i]\
    \ = \"Two\";\n                    break;\n                case 3:\n          \
    \          result[i] = \"Three\";\n                    break;\n              \
    \  case 4:\n                    result[i] = \"Four\";\n                    break;\n\
    \                case 5:\n                    result[i] = \"Five\";\n        \
    \            break;\n                case 6:\n                    result[i] =\
    \ \"Six\";\n                    break;\n                case 7:\n            \
    \        result[i] = \"Seven\";\n                    break;\n                case\
    \ 8:\n                    result[i] = \"Eight\";\n                    break;\n\
    \                case 9:\n                    result[i] = \"Nine\";\n        \
    \            break;\n            }\n            i++;\n        }\n    }\n    result\
    \ = result[0..i];\n    result.sort;\n    result.reverse;\n    return result;\n\
    }", "{\n    return arr.filter!(a => a > 0 && a < 10).sort.reverse.map!(a => [\"\
    One\", \"Two\", \"Three\", \"Four\", \"Five\", \"Six\", \"Seven\", \"Eight\",\
    \ \"Nine\"][a - 1]);\n}", "{\n    auto result = arr.filter!(a => a > 0 && a <\
    \ 10).sort.reverse;\n    return result.map!(a => [\"One\", \"Two\", \"Three\"\
    , \"Four\", \"Five\", \"Six\", \"Seven\", \"Eight\", \"Nine\"][a - 1]);\n}", "{\n\
    \    auto sorted = arr.sort!((a, b) => a < b);\n    auto reversed = sorted.reverse;\n\
    \    auto filtered = reversed.filter!(a => a > 0 && a < 10);\n    auto mapped\
    \ = filtered.map!(a => a == 1 ? \"One\" : a == 2 ? \"Two\" : a == 3 ? \"Three\"\
    \ : a == 4 ? \"Four\" : a == 5 ? \"Five\" : a == 6 ? \"Six\" : a == 7 ? \"Seven\"\
    \ : a == 8 ? \"Eight\" : \"Nine\");\n    return mapped;\n}", "{\n    string[]\
    \ result = new string[0];\n    foreach(long i; arr)\n    {\n        if(i > 0 &&\
    \ i < 10)\n        {\n            result ~= to!string(i);\n        }\n    }\n\
    \    sort(result);\n    reverse(result);\n    foreach(ref string s; result)\n\
    \    {\n        switch(s)\n        {\n            case \"1\":\n              \
    \  s = \"One\";\n                break;\n            case \"2\":\n           \
    \     s = \"Two\";\n                break;\n            case \"3\":\n        \
    \        s = \"Three\";\n                break;\n            case \"4\":\n   \
    \             s = \"Four\";\n                break;\n            case \"5\":\n\
    \                s = \"Five\";\n                break;\n            case \"6\"\
    :\n                s = \"Six\";\n                break;\n            case \"7\"\
    :\n                s = \"Seven\";\n                break;\n            case \"\
    8\":\n                s = \"Eight\";\n                break;\n            case\
    \ \"9\":\n                s = \"Nine\";\n                break;\n        }\n \
    \   }\n    return result;\n}", "{\n    string[] result = [];\n    foreach(i; arr)\n\
    \    {\n        if(i > 0 && i < 10)\n        {\n            result ~= to!string(i);\n\
    \        }\n    }\n    sort(result);\n    reverse(result);\n    foreach(i; result)\n\
    \    {\n        switch(i)\n        {\n            case \"1\":\n              \
    \  i = \"One\";\n                break;\n            case \"2\":\n           \
    \     i = \"Two\";\n                break;\n            case \"3\":\n        \
    \        i = \"Three\";\n                break;\n            case \"4\":\n   \
    \             i = \"Four\";\n                break;\n            case \"5\":\n\
    \                i = \"Five\";\n                break;\n            case \"6\"\
    :\n                i = \"Six\";\n                break;\n            case \"7\"\
    :\n                i = \"Seven\";\n                break;\n            case \"\
    8\":\n                i = \"Eight\";\n                break;\n            case\
    \ \"9\":\n                i = \"Nine\";\n                break;\n        }\n \
    \   }\n    return result;\n}", "{\n    string[] result = new string[arr.length];\n\
    \    int i = 0;\n    foreach(long x; arr)\n    {\n        if(x > 0 && x < 10)\n\
    \        {\n            switch(x)\n            {\n                case 1:\n  \
    \                  result[i] = \"One\";\n                    break;\n        \
    \        case 2:\n                    result[i] = \"Two\";\n                 \
    \   break;\n                case 3:\n                    result[i] = \"Three\"\
    ;\n                    break;\n                case 4:\n                    result[i]\
    \ = \"Four\";\n                    break;\n                case 5:\n         \
    \           result[i] = \"Five\";\n                    break;\n              \
    \  case 6:\n                    result[i] = \"Six\";\n                    break;\n\
    \                case 7:\n                    result[i] = \"Seven\";\n       \
    \             break;\n                case 8:\n                    result[i] =\
    \ \"Eight\";\n                    break;\n                case 9:\n          \
    \          result[i] = \"Nine\";\n                    break;\n            }\n\
    \            i++;\n        }\n    }\n    result = result[0..i];\n    result.sort;\n\
    \    result.reverse;\n    return result;\n}", "{\n    // TODO: implement by_length\n\
    \    return null;\n}", "{\n    string[] result;\n    foreach(elem; arr)\n    {\n\
    \        if(elem > 0 && elem < 10)\n        {\n            result ~= to!string(elem);\n\
    \        }\n    }\n    sort(result);\n    reverse(result);\n    foreach(elem;\
    \ result)\n    {\n        switch(elem)\n        {\n            case \"1\":\n \
    \               elem = \"One\";\n                break;\n            case \"2\"\
    :\n                elem = \"Two\";\n                break;\n            case \"\
    3\":\n                elem = \"Three\";\n                break;\n            case\
    \ \"4\":\n                elem = \"Four\";\n                break;\n         \
    \   case \"5\":\n                elem = \"Five\";\n                break;\n  \
    \          case \"6\":\n                elem = \"Six\";\n                break;\n\
    \            case \"7\":\n                elem = \"Seven\";\n                break;\n\
    \            case \"8\":\n                elem = \"Eight\";\n                break;\n\
    \            case \"9\":\n                elem = \"Nine\";\n                break;\n\
    \        }\n    }\n    return result;\n}", "{\n    string[] result = [];\n   \
    \ foreach(elem; arr)\n    {\n        if(elem > 0 && elem < 10)\n        {\n  \
    \          result ~= to!string(elem);\n        }\n    }\n    sort(result);\n \
    \   reverse(result);\n    foreach(elem; result)\n    {\n        switch(elem)\n\
    \        {\n            case \"1\":\n                elem = \"One\";\n       \
    \         break;\n            case \"2\":\n                elem = \"Two\";\n \
    \               break;\n            case \"3\":\n                elem = \"Three\"\
    ;\n                break;\n            case \"4\":\n                elem = \"\
    Four\";\n                break;\n            case \"5\":\n                elem\
    \ = \"Five\";\n                break;\n            case \"6\":\n             \
    \   elem = \"Six\";\n                break;\n            case \"7\":\n       \
    \         elem = \"Seven\";\n                break;\n            case \"8\":\n\
    \                elem = \"Eight\";\n                break;\n            case \"\
    9\":\n                elem = \"Nine\";\n                break;\n        }\n  \
    \  }\n    return result;\n}", "{\n    string[] result = new string[];\n    foreach(elem;\
    \ arr)\n    {\n        if(elem > 0 && elem < 10)\n        {\n            result\
    \ ~= to!string(elem);\n        }\n    }\n    sort(result);\n    reverse(result);\n\
    \    foreach(elem; result)\n    {\n        switch(elem)\n        {\n         \
    \   case \"1\":\n                elem = \"One\";\n                break;\n   \
    \         case \"2\":\n                elem = \"Two\";\n                break;\n\
    \            case \"3\":\n                elem = \"Three\";\n                break;\n\
    \            case \"4\":\n                elem = \"Four\";\n                break;\n\
    \            case \"5\":\n                elem = \"Five\";\n                break;\n\
    \            case \"6\":\n                elem = \"Six\";\n                break;\n\
    \            case \"7\":\n                elem = \"Seven\";\n                break;\n\
    \            case \"8\":\n                elem = \"Eight\";\n                break;\n\
    \            case \"9\":\n                elem = \"Nine\";\n                break;\n\
    \        }\n    }\n    return result;\n}", "{\n    auto numbers = [\n        \"\
    One\", \"Two\", \"Three\", \"Four\", \"Five\", \"Six\", \"Seven\", \"Eight\",\
    \ \"Nine\"\n    ];\n    auto result = arr.filter!(a => a > 0 && a < 10).sort.reverse;\n\
    \    return result.map!(a => numbers[a - 1]).array;\n}", "{\n    string[] result\
    \ = [];\n    foreach(l; arr)\n    {\n        if(l >= 1 && l <= 9)\n        {\n\
    \            result ~= to!string(l);\n        }\n    }\n    sort(result);\n  \
    \  reverse(result);\n    return result.map!(a => to!string(to!long(a)));\n}",
  "{\n    string[] result;\n    long[] sorted = arr.filter!(a => a >= 1 && a <= 9).sort;\n\
    \    foreach(i; sorted.reverse)\n    {\n        result ~= to!string(i);\n    }\n\
    \    return result;\n}", "{\n    long[] sorted = arr.filter!(a => a > 0 && a <\
    \ 10).sort();\n    string[] result = sorted.map!(a => to!string(a)).reverse;\n\
    \    return result;\n}"]
stop_tokens:
- "\n\n"
- "\nvoid"
- "\nbool"
- "\nint"

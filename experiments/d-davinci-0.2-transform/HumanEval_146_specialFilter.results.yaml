language: d
name: HumanEval_146_specialFilter
results:
- exit_code: 1
  program: "import std.typecons;\nimport std.math;\n/*\nWrite a function that takes\
    \ an array of numbers as input and returns \n    the number of elements in the\
    \ array that are greater than 10 and both \n    first and last digits of a number\
    \ are odd (1, 3, 5, 7, 9).\n    For example:\n    >>> specialFilter([15L, -73L,\
    \ 14L, -15L])\n    1L\n    >>> specialFilter([33L, -2L, -3L, 45L, 21L, 109L])\n\
    \    2L\n    \n*/\nlong specialFilter(long[] nums) \n{\n    long count = 0;\n\
    \    foreach(num; nums)\n    {\n        if(num > 10)\n        {\n            long\
    \ first = num / pow(10, floor(log10(num)));\n            long last = num % 10;\n\
    \            if(first % 2 != 0 && last % 2 != 0)\n            {\n            \
    \    count++;\n            }\n        }\n    }\n    return count;\n}\nunittest\n\
    {\n    alias candidate = specialFilter;\n\n    assert(candidate([5L, -2L, 1L,\
    \ -5L]) == 0L);\n    assert(candidate([15L, -73L, 14L, -15L]) == 1L);\n    assert(candidate([33L,\
    \ -2L, -3L, 45L, 21L, 109L]) == 2L);\n    assert(candidate([43L, -12L, 93L, 125L,\
    \ 121L, 109L]) == 4L);\n    assert(candidate([71L, -2L, -33L, 75L, 21L, 19L])\
    \ == 3L);\n    assert(candidate([1L]) == 0L);\n    assert(candidate([]) == 0L);\n\
    }\nvoid main(){}"
  status: SyntaxError
  stderr: 'b''/tmp/tmp2ap37vn7.d(21): Error: cannot implicitly convert expression
    `cast(real)num / pow(10, floor(log10(cast(real)num)))` of type `real` to `long`\nFailed:
    ["dmd", "-unittest", "-v", "-o-", "/tmp/tmp2ap37vn7.d", "-I/tmp"]\n'''
  stdout: b''
- exit_code: 1
  program: "import std.typecons;\nimport std.math;\n/*\nWrite a function that takes\
    \ an array of numbers as input and returns \n    the number of elements in the\
    \ array that are greater than 10 and both \n    first and last digits of a number\
    \ are odd (1, 3, 5, 7, 9).\n    For example:\n    >>> specialFilter([15L, -73L,\
    \ 14L, -15L])\n    1L\n    >>> specialFilter([33L, -2L, -3L, 45L, 21L, 109L])\n\
    \    2L\n    \n*/\nlong specialFilter(long[] nums) \n{\n    long count = 0;\n\
    \    foreach(num; nums)\n    {\n        if(num > 10 && num.front.isOdd && num.back.isOdd)\n\
    \        {\n            count++;\n        }\n    }\n    return count;\n}\nunittest\n\
    {\n    alias candidate = specialFilter;\n\n    assert(candidate([5L, -2L, 1L,\
    \ -5L]) == 0L);\n    assert(candidate([15L, -73L, 14L, -15L]) == 1L);\n    assert(candidate([33L,\
    \ -2L, -3L, 45L, 21L, 109L]) == 2L);\n    assert(candidate([43L, -12L, 93L, 125L,\
    \ 121L, 109L]) == 4L);\n    assert(candidate([71L, -2L, -33L, 75L, 21L, 19L])\
    \ == 3L);\n    assert(candidate([1L]) == 0L);\n    assert(candidate([]) == 0L);\n\
    }\nvoid main(){}"
  status: SyntaxError
  stderr: 'b''/tmp/tmpx89w9gva.d(19): Error: no property `front` for type `long`\n/tmp/tmpx89w9gva.d(19):
    Error: no property `back` for type `long`\nFailed: ["dmd", "-unittest", "-v",
    "-o-", "/tmp/tmpx89w9gva.d", "-I/tmp"]\n'''
  stdout: b''
- exit_code: 1
  program: "import std.typecons;\nimport std.math;\n/*\nWrite a function that takes\
    \ an array of numbers as input and returns \n    the number of elements in the\
    \ array that are greater than 10 and both \n    first and last digits of a number\
    \ are odd (1, 3, 5, 7, 9).\n    For example:\n    >>> specialFilter([15L, -73L,\
    \ 14L, -15L])\n    1L\n    >>> specialFilter([33L, -2L, -3L, 45L, 21L, 109L])\n\
    \    2L\n    \n*/\nlong specialFilter(long[] nums) \n{\n    long count = 0;\n\
    \    foreach(num; nums)\n    {\n        if(num > 10 && num.front.isOdd && num.back.isOdd)\n\
    \        {\n            count++;\n        }\n    }\n    return count;\n}\nunittest\n\
    {\n    alias candidate = specialFilter;\n\n    assert(candidate([5L, -2L, 1L,\
    \ -5L]) == 0L);\n    assert(candidate([15L, -73L, 14L, -15L]) == 1L);\n    assert(candidate([33L,\
    \ -2L, -3L, 45L, 21L, 109L]) == 2L);\n    assert(candidate([43L, -12L, 93L, 125L,\
    \ 121L, 109L]) == 4L);\n    assert(candidate([71L, -2L, -33L, 75L, 21L, 19L])\
    \ == 3L);\n    assert(candidate([1L]) == 0L);\n    assert(candidate([]) == 0L);\n\
    }\nvoid main(){}"
  status: SyntaxError
  stderr: 'b''/tmp/tmpx89w9gva.d(19): Error: no property `front` for type `long`\n/tmp/tmpx89w9gva.d(19):
    Error: no property `back` for type `long`\nFailed: ["dmd", "-unittest", "-v",
    "-o-", "/tmp/tmpx89w9gva.d", "-I/tmp"]\n'''
  stdout: b''
- exit_code: 1
  program: "import std.typecons;\nimport std.math;\n/*\nWrite a function that takes\
    \ an array of numbers as input and returns \n    the number of elements in the\
    \ array that are greater than 10 and both \n    first and last digits of a number\
    \ are odd (1, 3, 5, 7, 9).\n    For example:\n    >>> specialFilter([15L, -73L,\
    \ 14L, -15L])\n    1L\n    >>> specialFilter([33L, -2L, -3L, 45L, 21L, 109L])\n\
    \    2L\n    \n*/\nlong specialFilter(long[] nums) \n{\n    long count = 0;\n\
    \    foreach(num; nums)\n    {\n        if(num > 10 && num.to!string[0] % 2 !=\
    \ 0 && num.to!string[$-1] % 2 != 0)\n        {\n            count++;\n       \
    \ }\n    }\n    return count;\n}\nunittest\n{\n    alias candidate = specialFilter;\n\
    \n    assert(candidate([5L, -2L, 1L, -5L]) == 0L);\n    assert(candidate([15L,\
    \ -73L, 14L, -15L]) == 1L);\n    assert(candidate([33L, -2L, -3L, 45L, 21L, 109L])\
    \ == 2L);\n    assert(candidate([43L, -12L, 93L, 125L, 121L, 109L]) == 4L);\n\
    \    assert(candidate([71L, -2L, -33L, 75L, 21L, 19L]) == 3L);\n    assert(candidate([1L])\
    \ == 0L);\n    assert(candidate([]) == 0L);\n}\nvoid main(){}"
  status: SyntaxError
  stderr: 'b''/tmp/tmp_we4acc7.d(19): Error: no property `to` for type `long`\n/tmp/tmp_we4acc7.d(19):
    Error: no property `to` for type `long`\nFailed: ["dmd", "-unittest", "-v", "-o-",
    "/tmp/tmp_we4acc7.d", "-I/tmp"]\n'''
  stdout: b''
- exit_code: 1
  program: "import std.typecons;\nimport std.math;\n/*\nWrite a function that takes\
    \ an array of numbers as input and returns \n    the number of elements in the\
    \ array that are greater than 10 and both \n    first and last digits of a number\
    \ are odd (1, 3, 5, 7, 9).\n    For example:\n    >>> specialFilter([15L, -73L,\
    \ 14L, -15L])\n    1L\n    >>> specialFilter([33L, -2L, -3L, 45L, 21L, 109L])\n\
    \    2L\n    \n*/\nlong specialFilter(long[] nums) \n{\n    long count = 0;\n\
    \    foreach(num; nums)\n    {\n        if(num > 10 && num % 2 == 1 && num / pow(10,\
    \ floor(log10(num))) % 2 == 1)\n        {\n            count++;\n        }\n \
    \   }\n    return count;\n}\nunittest\n{\n    alias candidate = specialFilter;\n\
    \n    assert(candidate([5L, -2L, 1L, -5L]) == 0L);\n    assert(candidate([15L,\
    \ -73L, 14L, -15L]) == 1L);\n    assert(candidate([33L, -2L, -3L, 45L, 21L, 109L])\
    \ == 2L);\n    assert(candidate([43L, -12L, 93L, 125L, 121L, 109L]) == 4L);\n\
    \    assert(candidate([71L, -2L, -33L, 75L, 21L, 19L]) == 3L);\n    assert(candidate([1L])\
    \ == 0L);\n    assert(candidate([]) == 0L);\n}\nvoid main(){}"
  status: Exception
  stderr: 'b''core.exception.AssertError@/tmp/tmp_1lwdzw3.d(31): unittest failure\n----------------\n??:?
    _d_unittestp [0x428fc5]\n??:? void tmp_1lwdzw3.__unittest_L26_C1() [0x42826a]\n??:?
    void tmp_1lwdzw3.__modtest() [0x428d48]\n??:? int core.runtime.runModuleUnitTests().__foreachbody2(object.ModuleInfo*)
    [0x42d183]\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)).__lambda2(immutable(object.ModuleInfo*))
    [0x42c016]\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))).__foreachbody2(ref
    rt.sections_elf_shared.DSO) [0x4311a9]\n??:? int rt.sections_elf_shared.DSO.opApply(scope
    int delegate(ref rt.sections_elf_shared.DSO)) [0x431658]\n??:? int rt.minfo.moduleinfos_apply(scope
    int delegate(immutable(object.ModuleInfo*))) [0x431135]\n??:? int object.ModuleInfo.opApply(scope
    int delegate(object.ModuleInfo*)) [0x42bfed]\n??:? runModuleUnitTests [0x42cf59]\n??:?
    void rt.dmain2._d_run_main(int, char**, extern (C) int function(char[][])*).runAll()
    [0x429414]\n??:? void rt.dmain2._d_run_main(int, char**, extern (C) int function(char[][])*).tryExec(scope
    void delegate()) [0x42939b]\n??:? _d_run_main [0x429306]\n??:? main [0x428d5b]\n??:?
    __libc_start_main [0x362e0554]\n1/1 unittests FAILED\n'''
  stdout: b''
- exit_code: 1
  program: "import std.typecons;\nimport std.math;\n/*\nWrite a function that takes\
    \ an array of numbers as input and returns \n    the number of elements in the\
    \ array that are greater than 10 and both \n    first and last digits of a number\
    \ are odd (1, 3, 5, 7, 9).\n    For example:\n    >>> specialFilter([15L, -73L,\
    \ 14L, -15L])\n    1L\n    >>> specialFilter([33L, -2L, -3L, 45L, 21L, 109L])\n\
    \    2L\n    \n*/\nlong specialFilter(long[] nums) \n{\n    long count = 0;\n\
    \    foreach(num; nums)\n    {\n        if(num > 10 && num.to!string().front.to!long()\
    \ % 2 != 0 && num.to!string().back.to!long() % 2 != 0)\n        {\n          \
    \  count++;\n        }\n    }\n    return count;\n}\nunittest\n{\n    alias candidate\
    \ = specialFilter;\n\n    assert(candidate([5L, -2L, 1L, -5L]) == 0L);\n    assert(candidate([15L,\
    \ -73L, 14L, -15L]) == 1L);\n    assert(candidate([33L, -2L, -3L, 45L, 21L, 109L])\
    \ == 2L);\n    assert(candidate([43L, -12L, 93L, 125L, 121L, 109L]) == 4L);\n\
    \    assert(candidate([71L, -2L, -33L, 75L, 21L, 19L]) == 3L);\n    assert(candidate([1L])\
    \ == 0L);\n    assert(candidate([]) == 0L);\n}\nvoid main(){}"
  status: SyntaxError
  stderr: 'b''/tmp/tmpffp5xfc9.d(19): Error: no property `to` for type `long`\n/tmp/tmpffp5xfc9.d(19):
    Error: no property `to` for type `long`\nFailed: ["dmd", "-unittest", "-v", "-o-",
    "/tmp/tmpffp5xfc9.d", "-I/tmp"]\n'''
  stdout: b''
- exit_code: 1
  program: "import std.typecons;\nimport std.math;\n/*\nWrite a function that takes\
    \ an array of numbers as input and returns \n    the number of elements in the\
    \ array that are greater than 10 and both \n    first and last digits of a number\
    \ are odd (1, 3, 5, 7, 9).\n    For example:\n    >>> specialFilter([15L, -73L,\
    \ 14L, -15L])\n    1L\n    >>> specialFilter([33L, -2L, -3L, 45L, 21L, 109L])\n\
    \    2L\n    \n*/\nlong specialFilter(long[] nums) \n{\n    long count = 0;\n\
    \    foreach(num; nums)\n    {\n        if(num > 10)\n        {\n            long\
    \ firstDigit = num / 10;\n            long lastDigit = num % 10;\n           \
    \ if(firstDigit % 2 != 0 && lastDigit % 2 != 0)\n            {\n             \
    \   count++;\n            }\n        }\n    }\n    return count;\n}\nunittest\n\
    {\n    alias candidate = specialFilter;\n\n    assert(candidate([5L, -2L, 1L,\
    \ -5L]) == 0L);\n    assert(candidate([15L, -73L, 14L, -15L]) == 1L);\n    assert(candidate([33L,\
    \ -2L, -3L, 45L, 21L, 109L]) == 2L);\n    assert(candidate([43L, -12L, 93L, 125L,\
    \ 121L, 109L]) == 4L);\n    assert(candidate([71L, -2L, -33L, 75L, 21L, 19L])\
    \ == 3L);\n    assert(candidate([1L]) == 0L);\n    assert(candidate([]) == 0L);\n\
    }\nvoid main(){}"
  status: Exception
  stderr: 'b''core.exception.AssertError@/tmp/tmpra6pon5i.d(37): unittest failure\n----------------\n??:?
    _d_unittestp [0x4282a5]\n??:? void tmpra6pon5i.__unittest_L31_C1() [0x427ed1]\n??:?
    void tmpra6pon5i.__modtest() [0x428028]\n??:? int core.runtime.runModuleUnitTests().__foreachbody2(object.ModuleInfo*)
    [0x42c28f]\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)).__lambda2(immutable(object.ModuleInfo*))
    [0x42b122]\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))).__foreachbody2(ref
    rt.sections_elf_shared.DSO) [0x4302b5]\n??:? int rt.sections_elf_shared.DSO.opApply(scope
    int delegate(ref rt.sections_elf_shared.DSO)) [0x430764]\n??:? int rt.minfo.moduleinfos_apply(scope
    int delegate(immutable(object.ModuleInfo*))) [0x430241]\n??:? int object.ModuleInfo.opApply(scope
    int delegate(object.ModuleInfo*)) [0x42b0f9]\n??:? runModuleUnitTests [0x42c065]\n??:?
    void rt.dmain2._d_run_main(int, char**, extern (C) int function(char[][])*).runAll()
    [0x4286f4]\n??:? void rt.dmain2._d_run_main(int, char**, extern (C) int function(char[][])*).tryExec(scope
    void delegate()) [0x42867b]\n??:? _d_run_main [0x4285e6]\n??:? main [0x42803b]\n??:?
    __libc_start_main [0x7a8ea554]\n1/1 unittests FAILED\n'''
  stdout: b''
- exit_code: 1
  program: "import std.typecons;\nimport std.math;\n/*\nWrite a function that takes\
    \ an array of numbers as input and returns \n    the number of elements in the\
    \ array that are greater than 10 and both \n    first and last digits of a number\
    \ are odd (1, 3, 5, 7, 9).\n    For example:\n    >>> specialFilter([15L, -73L,\
    \ 14L, -15L])\n    1L\n    >>> specialFilter([33L, -2L, -3L, 45L, 21L, 109L])\n\
    \    2L\n    \n*/\nlong specialFilter(long[] nums) \n{\n    long count = 0;\n\
    \    foreach(n; nums)\n    {\n        if(n > 10)\n        {\n            long\
    \ first = n / 10;\n            long last = n % 10;\n            if(first % 2 !=\
    \ 0 && last % 2 != 0)\n            {\n                count++;\n            }\n\
    \        }\n    }\n    return count;\n}\nunittest\n{\n    alias candidate = specialFilter;\n\
    \n    assert(candidate([5L, -2L, 1L, -5L]) == 0L);\n    assert(candidate([15L,\
    \ -73L, 14L, -15L]) == 1L);\n    assert(candidate([33L, -2L, -3L, 45L, 21L, 109L])\
    \ == 2L);\n    assert(candidate([43L, -12L, 93L, 125L, 121L, 109L]) == 4L);\n\
    \    assert(candidate([71L, -2L, -33L, 75L, 21L, 19L]) == 3L);\n    assert(candidate([1L])\
    \ == 0L);\n    assert(candidate([]) == 0L);\n}\nvoid main(){}"
  status: Exception
  stderr: 'b''core.exception.AssertError@/tmp/tmp008g4vry.d(37): unittest failure\n----------------\n??:?
    _d_unittestp [0x4282a5]\n??:? void tmp008g4vry.__unittest_L31_C1() [0x427ed1]\n??:?
    void tmp008g4vry.__modtest() [0x428028]\n??:? int core.runtime.runModuleUnitTests().__foreachbody2(object.ModuleInfo*)
    [0x42c28f]\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)).__lambda2(immutable(object.ModuleInfo*))
    [0x42b122]\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))).__foreachbody2(ref
    rt.sections_elf_shared.DSO) [0x4302b5]\n??:? int rt.sections_elf_shared.DSO.opApply(scope
    int delegate(ref rt.sections_elf_shared.DSO)) [0x430764]\n??:? int rt.minfo.moduleinfos_apply(scope
    int delegate(immutable(object.ModuleInfo*))) [0x430241]\n??:? int object.ModuleInfo.opApply(scope
    int delegate(object.ModuleInfo*)) [0x42b0f9]\n??:? runModuleUnitTests [0x42c065]\n??:?
    void rt.dmain2._d_run_main(int, char**, extern (C) int function(char[][])*).runAll()
    [0x4286f4]\n??:? void rt.dmain2._d_run_main(int, char**, extern (C) int function(char[][])*).tryExec(scope
    void delegate()) [0x42867b]\n??:? _d_run_main [0x4285e6]\n??:? main [0x42803b]\n??:?
    __libc_start_main [0xe0ee0554]\n1/1 unittests FAILED\n'''
  stdout: b''
- exit_code: 1
  program: "import std.typecons;\nimport std.math;\n/*\nWrite a function that takes\
    \ an array of numbers as input and returns \n    the number of elements in the\
    \ array that are greater than 10 and both \n    first and last digits of a number\
    \ are odd (1, 3, 5, 7, 9).\n    For example:\n    >>> specialFilter([15L, -73L,\
    \ 14L, -15L])\n    1L\n    >>> specialFilter([33L, -2L, -3L, 45L, 21L, 109L])\n\
    \    2L\n    \n*/\nlong specialFilter(long[] nums) \n{\n    long count = 0;\n\
    \    foreach(num; nums)\n    {\n        if(num > 10)\n        {\n            long\
    \ first = num / 10;\n            long last = num % 10;\n            if(first %\
    \ 2 != 0 && last % 2 != 0)\n            {\n                count++;\n        \
    \    }\n        }\n    }\n    return count;\n}\nunittest\n{\n    alias candidate\
    \ = specialFilter;\n\n    assert(candidate([5L, -2L, 1L, -5L]) == 0L);\n    assert(candidate([15L,\
    \ -73L, 14L, -15L]) == 1L);\n    assert(candidate([33L, -2L, -3L, 45L, 21L, 109L])\
    \ == 2L);\n    assert(candidate([43L, -12L, 93L, 125L, 121L, 109L]) == 4L);\n\
    \    assert(candidate([71L, -2L, -33L, 75L, 21L, 19L]) == 3L);\n    assert(candidate([1L])\
    \ == 0L);\n    assert(candidate([]) == 0L);\n}\nvoid main(){}"
  status: Exception
  stderr: 'b''core.exception.AssertError@/tmp/tmpf2cd1b7m.d(37): unittest failure\n----------------\n??:?
    _d_unittestp [0x4282a5]\n??:? void tmpf2cd1b7m.__unittest_L31_C1() [0x427ed1]\n??:?
    void tmpf2cd1b7m.__modtest() [0x428028]\n??:? int core.runtime.runModuleUnitTests().__foreachbody2(object.ModuleInfo*)
    [0x42c28f]\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)).__lambda2(immutable(object.ModuleInfo*))
    [0x42b122]\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))).__foreachbody2(ref
    rt.sections_elf_shared.DSO) [0x4302b5]\n??:? int rt.sections_elf_shared.DSO.opApply(scope
    int delegate(ref rt.sections_elf_shared.DSO)) [0x430764]\n??:? int rt.minfo.moduleinfos_apply(scope
    int delegate(immutable(object.ModuleInfo*))) [0x430241]\n??:? int object.ModuleInfo.opApply(scope
    int delegate(object.ModuleInfo*)) [0x42b0f9]\n??:? runModuleUnitTests [0x42c065]\n??:?
    void rt.dmain2._d_run_main(int, char**, extern (C) int function(char[][])*).runAll()
    [0x4286f4]\n??:? void rt.dmain2._d_run_main(int, char**, extern (C) int function(char[][])*).tryExec(scope
    void delegate()) [0x42867b]\n??:? _d_run_main [0x4285e6]\n??:? main [0x42803b]\n??:?
    __libc_start_main [0x79aa8554]\n1/1 unittests FAILED\n'''
  stdout: b''
- exit_code: 1
  program: "import std.typecons;\nimport std.math;\n/*\nWrite a function that takes\
    \ an array of numbers as input and returns \n    the number of elements in the\
    \ array that are greater than 10 and both \n    first and last digits of a number\
    \ are odd (1, 3, 5, 7, 9).\n    For example:\n    >>> specialFilter([15L, -73L,\
    \ 14L, -15L])\n    1L\n    >>> specialFilter([33L, -2L, -3L, 45L, 21L, 109L])\n\
    \    2L\n    \n*/\nlong specialFilter(long[] nums) \n{\n    long count = 0;\n\
    \    foreach(num; nums)\n    {\n        if(num > 10 && num % 2 == 1 && num / pow(10,\
    \ floor(log10(num))) % 2 == 1)\n        {\n            count++;\n        }\n \
    \   }\n    return count;\n}\nunittest\n{\n    alias candidate = specialFilter;\n\
    \n    assert(candidate([5L, -2L, 1L, -5L]) == 0L);\n    assert(candidate([15L,\
    \ -73L, 14L, -15L]) == 1L);\n    assert(candidate([33L, -2L, -3L, 45L, 21L, 109L])\
    \ == 2L);\n    assert(candidate([43L, -12L, 93L, 125L, 121L, 109L]) == 4L);\n\
    \    assert(candidate([71L, -2L, -33L, 75L, 21L, 19L]) == 3L);\n    assert(candidate([1L])\
    \ == 0L);\n    assert(candidate([]) == 0L);\n}\nvoid main(){}"
  status: Exception
  stderr: 'b''core.exception.AssertError@/tmp/tmp_1lwdzw3.d(31): unittest failure\n----------------\n??:?
    _d_unittestp [0x428fc5]\n??:? void tmp_1lwdzw3.__unittest_L26_C1() [0x42826a]\n??:?
    void tmp_1lwdzw3.__modtest() [0x428d48]\n??:? int core.runtime.runModuleUnitTests().__foreachbody2(object.ModuleInfo*)
    [0x42d183]\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)).__lambda2(immutable(object.ModuleInfo*))
    [0x42c016]\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))).__foreachbody2(ref
    rt.sections_elf_shared.DSO) [0x4311a9]\n??:? int rt.sections_elf_shared.DSO.opApply(scope
    int delegate(ref rt.sections_elf_shared.DSO)) [0x431658]\n??:? int rt.minfo.moduleinfos_apply(scope
    int delegate(immutable(object.ModuleInfo*))) [0x431135]\n??:? int object.ModuleInfo.opApply(scope
    int delegate(object.ModuleInfo*)) [0x42bfed]\n??:? runModuleUnitTests [0x42cf59]\n??:?
    void rt.dmain2._d_run_main(int, char**, extern (C) int function(char[][])*).runAll()
    [0x429414]\n??:? void rt.dmain2._d_run_main(int, char**, extern (C) int function(char[][])*).tryExec(scope
    void delegate()) [0x42939b]\n??:? _d_run_main [0x429306]\n??:? main [0x428d5b]\n??:?
    __libc_start_main [0x362e0554]\n1/1 unittests FAILED\n'''
  stdout: b''
- exit_code: 1
  program: "import std.typecons;\nimport std.math;\n/*\nWrite a function that takes\
    \ an array of numbers as input and returns \n    the number of elements in the\
    \ array that are greater than 10 and both \n    first and last digits of a number\
    \ are odd (1, 3, 5, 7, 9).\n    For example:\n    >>> specialFilter([15L, -73L,\
    \ 14L, -15L])\n    1L\n    >>> specialFilter([33L, -2L, -3L, 45L, 21L, 109L])\n\
    \    2L\n    \n*/\nlong specialFilter(long[] nums) \n{\n    long count = 0;\n\
    \    foreach(num; nums)\n    {\n        if(num > 10)\n        {\n            long\
    \ first = num / 10;\n            long last = num % 10;\n            if(first %\
    \ 2 != 0 && last % 2 != 0)\n            {\n                count++;\n        \
    \    }\n        }\n    }\n    return count;\n}\nunittest\n{\n    alias candidate\
    \ = specialFilter;\n\n    assert(candidate([5L, -2L, 1L, -5L]) == 0L);\n    assert(candidate([15L,\
    \ -73L, 14L, -15L]) == 1L);\n    assert(candidate([33L, -2L, -3L, 45L, 21L, 109L])\
    \ == 2L);\n    assert(candidate([43L, -12L, 93L, 125L, 121L, 109L]) == 4L);\n\
    \    assert(candidate([71L, -2L, -33L, 75L, 21L, 19L]) == 3L);\n    assert(candidate([1L])\
    \ == 0L);\n    assert(candidate([]) == 0L);\n}\nvoid main(){}"
  status: Exception
  stderr: 'b''core.exception.AssertError@/tmp/tmpf2cd1b7m.d(37): unittest failure\n----------------\n??:?
    _d_unittestp [0x4282a5]\n??:? void tmpf2cd1b7m.__unittest_L31_C1() [0x427ed1]\n??:?
    void tmpf2cd1b7m.__modtest() [0x428028]\n??:? int core.runtime.runModuleUnitTests().__foreachbody2(object.ModuleInfo*)
    [0x42c28f]\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)).__lambda2(immutable(object.ModuleInfo*))
    [0x42b122]\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))).__foreachbody2(ref
    rt.sections_elf_shared.DSO) [0x4302b5]\n??:? int rt.sections_elf_shared.DSO.opApply(scope
    int delegate(ref rt.sections_elf_shared.DSO)) [0x430764]\n??:? int rt.minfo.moduleinfos_apply(scope
    int delegate(immutable(object.ModuleInfo*))) [0x430241]\n??:? int object.ModuleInfo.opApply(scope
    int delegate(object.ModuleInfo*)) [0x42b0f9]\n??:? runModuleUnitTests [0x42c065]\n??:?
    void rt.dmain2._d_run_main(int, char**, extern (C) int function(char[][])*).runAll()
    [0x4286f4]\n??:? void rt.dmain2._d_run_main(int, char**, extern (C) int function(char[][])*).tryExec(scope
    void delegate()) [0x42867b]\n??:? _d_run_main [0x4285e6]\n??:? main [0x42803b]\n??:?
    __libc_start_main [0x79aa8554]\n1/1 unittests FAILED\n'''
  stdout: b''
- exit_code: 1
  program: "import std.typecons;\nimport std.math;\n/*\nWrite a function that takes\
    \ an array of numbers as input and returns \n    the number of elements in the\
    \ array that are greater than 10 and both \n    first and last digits of a number\
    \ are odd (1, 3, 5, 7, 9).\n    For example:\n    >>> specialFilter([15L, -73L,\
    \ 14L, -15L])\n    1L\n    >>> specialFilter([33L, -2L, -3L, 45L, 21L, 109L])\n\
    \    2L\n    \n*/\nlong specialFilter(long[] nums) \n{\n    long count = 0;\n\
    \    foreach(num; nums)\n    {\n        if(num > 10 && num % 2 == 1 && num / pow(10,\
    \ floor(log10(num))) % 2 == 1)\n        {\n            count++;\n        }\n \
    \   }\n    return count;\n}\nunittest\n{\n    alias candidate = specialFilter;\n\
    \n    assert(candidate([5L, -2L, 1L, -5L]) == 0L);\n    assert(candidate([15L,\
    \ -73L, 14L, -15L]) == 1L);\n    assert(candidate([33L, -2L, -3L, 45L, 21L, 109L])\
    \ == 2L);\n    assert(candidate([43L, -12L, 93L, 125L, 121L, 109L]) == 4L);\n\
    \    assert(candidate([71L, -2L, -33L, 75L, 21L, 19L]) == 3L);\n    assert(candidate([1L])\
    \ == 0L);\n    assert(candidate([]) == 0L);\n}\nvoid main(){}"
  status: Exception
  stderr: 'b''core.exception.AssertError@/tmp/tmp_1lwdzw3.d(31): unittest failure\n----------------\n??:?
    _d_unittestp [0x428fc5]\n??:? void tmp_1lwdzw3.__unittest_L26_C1() [0x42826a]\n??:?
    void tmp_1lwdzw3.__modtest() [0x428d48]\n??:? int core.runtime.runModuleUnitTests().__foreachbody2(object.ModuleInfo*)
    [0x42d183]\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)).__lambda2(immutable(object.ModuleInfo*))
    [0x42c016]\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))).__foreachbody2(ref
    rt.sections_elf_shared.DSO) [0x4311a9]\n??:? int rt.sections_elf_shared.DSO.opApply(scope
    int delegate(ref rt.sections_elf_shared.DSO)) [0x431658]\n??:? int rt.minfo.moduleinfos_apply(scope
    int delegate(immutable(object.ModuleInfo*))) [0x431135]\n??:? int object.ModuleInfo.opApply(scope
    int delegate(object.ModuleInfo*)) [0x42bfed]\n??:? runModuleUnitTests [0x42cf59]\n??:?
    void rt.dmain2._d_run_main(int, char**, extern (C) int function(char[][])*).runAll()
    [0x429414]\n??:? void rt.dmain2._d_run_main(int, char**, extern (C) int function(char[][])*).tryExec(scope
    void delegate()) [0x42939b]\n??:? _d_run_main [0x429306]\n??:? main [0x428d5b]\n??:?
    __libc_start_main [0x362e0554]\n1/1 unittests FAILED\n'''
  stdout: b''
- exit_code: 1
  program: "import std.typecons;\nimport std.math;\n/*\nWrite a function that takes\
    \ an array of numbers as input and returns \n    the number of elements in the\
    \ array that are greater than 10 and both \n    first and last digits of a number\
    \ are odd (1, 3, 5, 7, 9).\n    For example:\n    >>> specialFilter([15L, -73L,\
    \ 14L, -15L])\n    1L\n    >>> specialFilter([33L, -2L, -3L, 45L, 21L, 109L])\n\
    \    2L\n    \n*/\nlong specialFilter(long[] nums) \n{\n    long result = 0;\n\
    \    foreach(num; nums)\n    {\n        if(num > 10)\n        {\n            long\
    \ firstDigit = num / 10;\n            long lastDigit = num % 10;\n           \
    \ if(firstDigit % 2 != 0 && lastDigit % 2 != 0)\n            {\n             \
    \   result++;\n            }\n        }\n    }\n    return result;\n}\nunittest\n\
    {\n    alias candidate = specialFilter;\n\n    assert(candidate([5L, -2L, 1L,\
    \ -5L]) == 0L);\n    assert(candidate([15L, -73L, 14L, -15L]) == 1L);\n    assert(candidate([33L,\
    \ -2L, -3L, 45L, 21L, 109L]) == 2L);\n    assert(candidate([43L, -12L, 93L, 125L,\
    \ 121L, 109L]) == 4L);\n    assert(candidate([71L, -2L, -33L, 75L, 21L, 19L])\
    \ == 3L);\n    assert(candidate([1L]) == 0L);\n    assert(candidate([]) == 0L);\n\
    }\nvoid main(){}"
  status: Exception
  stderr: 'b''core.exception.AssertError@/tmp/tmp2o09hiab.d(37): unittest failure\n----------------\n??:?
    _d_unittestp [0x4282a5]\n??:? void tmp2o09hiab.__unittest_L31_C1() [0x427ed1]\n??:?
    void tmp2o09hiab.__modtest() [0x428028]\n??:? int core.runtime.runModuleUnitTests().__foreachbody2(object.ModuleInfo*)
    [0x42c28f]\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)).__lambda2(immutable(object.ModuleInfo*))
    [0x42b122]\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))).__foreachbody2(ref
    rt.sections_elf_shared.DSO) [0x4302b5]\n??:? int rt.sections_elf_shared.DSO.opApply(scope
    int delegate(ref rt.sections_elf_shared.DSO)) [0x430764]\n??:? int rt.minfo.moduleinfos_apply(scope
    int delegate(immutable(object.ModuleInfo*))) [0x430241]\n??:? int object.ModuleInfo.opApply(scope
    int delegate(object.ModuleInfo*)) [0x42b0f9]\n??:? runModuleUnitTests [0x42c065]\n??:?
    void rt.dmain2._d_run_main(int, char**, extern (C) int function(char[][])*).runAll()
    [0x4286f4]\n??:? void rt.dmain2._d_run_main(int, char**, extern (C) int function(char[][])*).tryExec(scope
    void delegate()) [0x42867b]\n??:? _d_run_main [0x4285e6]\n??:? main [0x42803b]\n??:?
    __libc_start_main [0x94db554]\n1/1 unittests FAILED\n'''
  stdout: b''
- exit_code: 1
  program: "import std.typecons;\nimport std.math;\n/*\nWrite a function that takes\
    \ an array of numbers as input and returns \n    the number of elements in the\
    \ array that are greater than 10 and both \n    first and last digits of a number\
    \ are odd (1, 3, 5, 7, 9).\n    For example:\n    >>> specialFilter([15L, -73L,\
    \ 14L, -15L])\n    1L\n    >>> specialFilter([33L, -2L, -3L, 45L, 21L, 109L])\n\
    \    2L\n    \n*/\nlong specialFilter(long[] nums) \n{\n    long count = 0;\n\
    \    foreach(num; nums)\n    {\n        if(num > 10)\n        {\n            long\
    \ firstDigit = num / (long)pow(10, (int)floor(log10(num)));\n            long\
    \ lastDigit = num % 10;\n            if(firstDigit % 2 == 1 && lastDigit % 2 ==\
    \ 1)\n            {\n                count++;\n            }\n        }\n    }\n\
    \    return count;\n}\nunittest\n{\n    alias candidate = specialFilter;\n\n \
    \   assert(candidate([5L, -2L, 1L, -5L]) == 0L);\n    assert(candidate([15L, -73L,\
    \ 14L, -15L]) == 1L);\n    assert(candidate([33L, -2L, -3L, 45L, 21L, 109L]) ==\
    \ 2L);\n    assert(candidate([43L, -12L, 93L, 125L, 121L, 109L]) == 4L);\n   \
    \ assert(candidate([71L, -2L, -33L, 75L, 21L, 19L]) == 3L);\n    assert(candidate([1L])\
    \ == 0L);\n    assert(candidate([]) == 0L);\n}\nvoid main(){}"
  status: SyntaxError
  stderr: 'b''/tmp/tmpn7a6fo4r.d(21): Error: C style cast illegal, use `cast(int)floor(log10(num))`\n/tmp/tmpn7a6fo4r.d(21):
    Error: C style cast illegal, use `cast(long)pow(10, cast(int)floor(log10(num)))`\nFailed:
    ["dmd", "-unittest", "-v", "-o-", "/tmp/tmpn7a6fo4r.d", "-I/tmp"]\n'''
  stdout: b''
- exit_code: 1
  program: "import std.typecons;\nimport std.math;\n/*\nWrite a function that takes\
    \ an array of numbers as input and returns \n    the number of elements in the\
    \ array that are greater than 10 and both \n    first and last digits of a number\
    \ are odd (1, 3, 5, 7, 9).\n    For example:\n    >>> specialFilter([15L, -73L,\
    \ 14L, -15L])\n    1L\n    >>> specialFilter([33L, -2L, -3L, 45L, 21L, 109L])\n\
    \    2L\n    \n*/\nlong specialFilter(long[] nums) \n{\n    long count = 0;\n\
    \    foreach(num; nums)\n    {\n        if(num > 10 && num.to!string().front.to!long()\
    \ % 2 != 0 && num.to!string().back.to!long() % 2 != 0)\n        {\n          \
    \  count++;\n        }\n    }\n    return count;\n}\nunittest\n{\n    alias candidate\
    \ = specialFilter;\n\n    assert(candidate([5L, -2L, 1L, -5L]) == 0L);\n    assert(candidate([15L,\
    \ -73L, 14L, -15L]) == 1L);\n    assert(candidate([33L, -2L, -3L, 45L, 21L, 109L])\
    \ == 2L);\n    assert(candidate([43L, -12L, 93L, 125L, 121L, 109L]) == 4L);\n\
    \    assert(candidate([71L, -2L, -33L, 75L, 21L, 19L]) == 3L);\n    assert(candidate([1L])\
    \ == 0L);\n    assert(candidate([]) == 0L);\n}\nvoid main(){}"
  status: SyntaxError
  stderr: 'b''/tmp/tmpffp5xfc9.d(19): Error: no property `to` for type `long`\n/tmp/tmpffp5xfc9.d(19):
    Error: no property `to` for type `long`\nFailed: ["dmd", "-unittest", "-v", "-o-",
    "/tmp/tmpffp5xfc9.d", "-I/tmp"]\n'''
  stdout: b''
- exit_code: 1
  program: "import std.typecons;\nimport std.math;\n/*\nWrite a function that takes\
    \ an array of numbers as input and returns \n    the number of elements in the\
    \ array that are greater than 10 and both \n    first and last digits of a number\
    \ are odd (1, 3, 5, 7, 9).\n    For example:\n    >>> specialFilter([15L, -73L,\
    \ 14L, -15L])\n    1L\n    >>> specialFilter([33L, -2L, -3L, 45L, 21L, 109L])\n\
    \    2L\n    \n*/\nlong specialFilter(long[] nums) \n{\n    long count = 0;\n\
    \    foreach(num; nums)\n    {\n        if(num > 10 && num % 2 == 1 && num / 10\
    \ % 2 == 1)\n        {\n            count++;\n        }\n    }\n    return count;\n\
    }\nunittest\n{\n    alias candidate = specialFilter;\n\n    assert(candidate([5L,\
    \ -2L, 1L, -5L]) == 0L);\n    assert(candidate([15L, -73L, 14L, -15L]) == 1L);\n\
    \    assert(candidate([33L, -2L, -3L, 45L, 21L, 109L]) == 2L);\n    assert(candidate([43L,\
    \ -12L, 93L, 125L, 121L, 109L]) == 4L);\n    assert(candidate([71L, -2L, -33L,\
    \ 75L, 21L, 19L]) == 3L);\n    assert(candidate([1L]) == 0L);\n    assert(candidate([])\
    \ == 0L);\n}\nvoid main(){}"
  status: Exception
  stderr: 'b''core.exception.AssertError@/tmp/tmpmwz4uszj.d(32): unittest failure\n----------------\n??:?
    _d_unittestp [0x428285]\n??:? void tmpmwz4uszj.__unittest_L26_C1() [0x427eb1]\n??:?
    void tmpmwz4uszj.__modtest() [0x428008]\n??:? int core.runtime.runModuleUnitTests().__foreachbody2(object.ModuleInfo*)
    [0x42c26f]\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)).__lambda2(immutable(object.ModuleInfo*))
    [0x42b102]\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))).__foreachbody2(ref
    rt.sections_elf_shared.DSO) [0x430295]\n??:? int rt.sections_elf_shared.DSO.opApply(scope
    int delegate(ref rt.sections_elf_shared.DSO)) [0x430744]\n??:? int rt.minfo.moduleinfos_apply(scope
    int delegate(immutable(object.ModuleInfo*))) [0x430221]\n??:? int object.ModuleInfo.opApply(scope
    int delegate(object.ModuleInfo*)) [0x42b0d9]\n??:? runModuleUnitTests [0x42c045]\n??:?
    void rt.dmain2._d_run_main(int, char**, extern (C) int function(char[][])*).runAll()
    [0x4286d4]\n??:? void rt.dmain2._d_run_main(int, char**, extern (C) int function(char[][])*).tryExec(scope
    void delegate()) [0x42865b]\n??:? _d_run_main [0x4285c6]\n??:? main [0x42801b]\n??:?
    __libc_start_main [0x20c20554]\n1/1 unittests FAILED\n'''
  stdout: b''
- exit_code: 1
  program: "import std.typecons;\nimport std.math;\n/*\nWrite a function that takes\
    \ an array of numbers as input and returns \n    the number of elements in the\
    \ array that are greater than 10 and both \n    first and last digits of a number\
    \ are odd (1, 3, 5, 7, 9).\n    For example:\n    >>> specialFilter([15L, -73L,\
    \ 14L, -15L])\n    1L\n    >>> specialFilter([33L, -2L, -3L, 45L, 21L, 109L])\n\
    \    2L\n    \n*/\nlong specialFilter(long[] nums) \n{\n    long count = 0;\n\
    \    foreach(num; nums)\n    {\n        if(num > 10 && num.to!string[0] % 2 !=\
    \ 0 && num.to!string[$-1] % 2 != 0)\n        {\n            count++;\n       \
    \ }\n    }\n    return count;\n}\nunittest\n{\n    alias candidate = specialFilter;\n\
    \n    assert(candidate([5L, -2L, 1L, -5L]) == 0L);\n    assert(candidate([15L,\
    \ -73L, 14L, -15L]) == 1L);\n    assert(candidate([33L, -2L, -3L, 45L, 21L, 109L])\
    \ == 2L);\n    assert(candidate([43L, -12L, 93L, 125L, 121L, 109L]) == 4L);\n\
    \    assert(candidate([71L, -2L, -33L, 75L, 21L, 19L]) == 3L);\n    assert(candidate([1L])\
    \ == 0L);\n    assert(candidate([]) == 0L);\n}\nvoid main(){}"
  status: SyntaxError
  stderr: 'b''/tmp/tmp_we4acc7.d(19): Error: no property `to` for type `long`\n/tmp/tmp_we4acc7.d(19):
    Error: no property `to` for type `long`\nFailed: ["dmd", "-unittest", "-v", "-o-",
    "/tmp/tmp_we4acc7.d", "-I/tmp"]\n'''
  stdout: b''
- exit_code: 1
  program: "import std.typecons;\nimport std.math;\n/*\nWrite a function that takes\
    \ an array of numbers as input and returns \n    the number of elements in the\
    \ array that are greater than 10 and both \n    first and last digits of a number\
    \ are odd (1, 3, 5, 7, 9).\n    For example:\n    >>> specialFilter([15L, -73L,\
    \ 14L, -15L])\n    1L\n    >>> specialFilter([33L, -2L, -3L, 45L, 21L, 109L])\n\
    \    2L\n    \n*/\nlong specialFilter(long[] nums) \n{\n    long count = 0;\n\
    \    foreach(num; nums)\n    {\n        if(num > 10 && num % 2 == 1 && num / 10\
    \ % 2 == 1)\n        {\n            count++;\n        }\n    }\n    return count;\n\
    }\nunittest\n{\n    alias candidate = specialFilter;\n\n    assert(candidate([5L,\
    \ -2L, 1L, -5L]) == 0L);\n    assert(candidate([15L, -73L, 14L, -15L]) == 1L);\n\
    \    assert(candidate([33L, -2L, -3L, 45L, 21L, 109L]) == 2L);\n    assert(candidate([43L,\
    \ -12L, 93L, 125L, 121L, 109L]) == 4L);\n    assert(candidate([71L, -2L, -33L,\
    \ 75L, 21L, 19L]) == 3L);\n    assert(candidate([1L]) == 0L);\n    assert(candidate([])\
    \ == 0L);\n}\nvoid main(){}"
  status: Exception
  stderr: 'b''core.exception.AssertError@/tmp/tmpmwz4uszj.d(32): unittest failure\n----------------\n??:?
    _d_unittestp [0x428285]\n??:? void tmpmwz4uszj.__unittest_L26_C1() [0x427eb1]\n??:?
    void tmpmwz4uszj.__modtest() [0x428008]\n??:? int core.runtime.runModuleUnitTests().__foreachbody2(object.ModuleInfo*)
    [0x42c26f]\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)).__lambda2(immutable(object.ModuleInfo*))
    [0x42b102]\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))).__foreachbody2(ref
    rt.sections_elf_shared.DSO) [0x430295]\n??:? int rt.sections_elf_shared.DSO.opApply(scope
    int delegate(ref rt.sections_elf_shared.DSO)) [0x430744]\n??:? int rt.minfo.moduleinfos_apply(scope
    int delegate(immutable(object.ModuleInfo*))) [0x430221]\n??:? int object.ModuleInfo.opApply(scope
    int delegate(object.ModuleInfo*)) [0x42b0d9]\n??:? runModuleUnitTests [0x42c045]\n??:?
    void rt.dmain2._d_run_main(int, char**, extern (C) int function(char[][])*).runAll()
    [0x4286d4]\n??:? void rt.dmain2._d_run_main(int, char**, extern (C) int function(char[][])*).tryExec(scope
    void delegate()) [0x42865b]\n??:? _d_run_main [0x4285c6]\n??:? main [0x42801b]\n??:?
    __libc_start_main [0x20c20554]\n1/1 unittests FAILED\n'''
  stdout: b''
- exit_code: 0
  program: "import std.typecons;\nimport std.math;\n/*\nWrite a function that takes\
    \ an array of numbers as input and returns \n    the number of elements in the\
    \ array that are greater than 10 and both \n    first and last digits of a number\
    \ are odd (1, 3, 5, 7, 9).\n    For example:\n    >>> specialFilter([15L, -73L,\
    \ 14L, -15L])\n    1L\n    >>> specialFilter([33L, -2L, -3L, 45L, 21L, 109L])\n\
    \    2L\n    \n*/\nlong specialFilter(long[] nums) \n{\n    long count = 0;\n\
    \    foreach(num; nums)\n    {\n        if(num > 10)\n        {\n            long\
    \ firstDigit = num / cast(long)pow(10, floor(log10(num)));\n            long lastDigit\
    \ = num % 10;\n            if(firstDigit % 2 != 0 && lastDigit % 2 != 0)\n   \
    \         {\n                count++;\n            }\n        }\n    }\n    return\
    \ count;\n}\nunittest\n{\n    alias candidate = specialFilter;\n\n    assert(candidate([5L,\
    \ -2L, 1L, -5L]) == 0L);\n    assert(candidate([15L, -73L, 14L, -15L]) == 1L);\n\
    \    assert(candidate([33L, -2L, -3L, 45L, 21L, 109L]) == 2L);\n    assert(candidate([43L,\
    \ -12L, 93L, 125L, 121L, 109L]) == 4L);\n    assert(candidate([71L, -2L, -33L,\
    \ 75L, 21L, 19L]) == 3L);\n    assert(candidate([1L]) == 0L);\n    assert(candidate([])\
    \ == 0L);\n}\nvoid main(){}"
  status: OK
  stderr: b''
  stdout: b''
- exit_code: 1
  program: "import std.typecons;\nimport std.math;\n/*\nWrite a function that takes\
    \ an array of numbers as input and returns \n    the number of elements in the\
    \ array that are greater than 10 and both \n    first and last digits of a number\
    \ are odd (1, 3, 5, 7, 9).\n    For example:\n    >>> specialFilter([15L, -73L,\
    \ 14L, -15L])\n    1L\n    >>> specialFilter([33L, -2L, -3L, 45L, 21L, 109L])\n\
    \    2L\n    \n*/\nlong specialFilter(long[] nums) \n{\n    long count = 0;\n\
    \    foreach(num; nums)\n    {\n        if(num > 10 && num % 2 == 1 && num / pow(10,\
    \ floor(log10(num))) % 2 == 1)\n        {\n            count++;\n        }\n \
    \   }\n    return count;\n}\nunittest\n{\n    alias candidate = specialFilter;\n\
    \n    assert(candidate([5L, -2L, 1L, -5L]) == 0L);\n    assert(candidate([15L,\
    \ -73L, 14L, -15L]) == 1L);\n    assert(candidate([33L, -2L, -3L, 45L, 21L, 109L])\
    \ == 2L);\n    assert(candidate([43L, -12L, 93L, 125L, 121L, 109L]) == 4L);\n\
    \    assert(candidate([71L, -2L, -33L, 75L, 21L, 19L]) == 3L);\n    assert(candidate([1L])\
    \ == 0L);\n    assert(candidate([]) == 0L);\n}\nvoid main(){}"
  status: Exception
  stderr: 'b''core.exception.AssertError@/tmp/tmp_1lwdzw3.d(31): unittest failure\n----------------\n??:?
    _d_unittestp [0x428fc5]\n??:? void tmp_1lwdzw3.__unittest_L26_C1() [0x42826a]\n??:?
    void tmp_1lwdzw3.__modtest() [0x428d48]\n??:? int core.runtime.runModuleUnitTests().__foreachbody2(object.ModuleInfo*)
    [0x42d183]\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)).__lambda2(immutable(object.ModuleInfo*))
    [0x42c016]\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))).__foreachbody2(ref
    rt.sections_elf_shared.DSO) [0x4311a9]\n??:? int rt.sections_elf_shared.DSO.opApply(scope
    int delegate(ref rt.sections_elf_shared.DSO)) [0x431658]\n??:? int rt.minfo.moduleinfos_apply(scope
    int delegate(immutable(object.ModuleInfo*))) [0x431135]\n??:? int object.ModuleInfo.opApply(scope
    int delegate(object.ModuleInfo*)) [0x42bfed]\n??:? runModuleUnitTests [0x42cf59]\n??:?
    void rt.dmain2._d_run_main(int, char**, extern (C) int function(char[][])*).runAll()
    [0x429414]\n??:? void rt.dmain2._d_run_main(int, char**, extern (C) int function(char[][])*).tryExec(scope
    void delegate()) [0x42939b]\n??:? _d_run_main [0x429306]\n??:? main [0x428d5b]\n??:?
    __libc_start_main [0x362e0554]\n1/1 unittests FAILED\n'''
  stdout: b''

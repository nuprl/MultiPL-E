name: HumanEval_74_total_match
language: d
prompt: "import std.typecons;\nimport std.math;\n/*\n\n    Write a function that accepts\
  \ two lists of strings and returns the list that has \n    total number of chars\
  \ in the all strings of the list less than the other list.\n\n    if the two lists\
  \ have the same number of chars, return the first list.\n\n    Examples\n    >>>\
  \ total_match([], [])\n    []\n    >>> total_match([\"hi\", \"admin\"], [\"hI\"\
  , \"Hi\"])\n    [\"hI\", \"Hi\"]\n    >>> total_match([\"hi\", \"admin\"], [\"hi\"\
  , \"hi\", \"admin\", \"project\"])\n    [\"hi\", \"admin\"]\n    >>> total_match([\"\
  hi\", \"admin\"], [\"hI\", \"hi\", \"hi\"])\n    [\"hI\", \"hi\", \"hi\"]\n    >>>\
  \ total_match([\"4\"], [\"1\", \"2\", \"3\", \"4\", \"5\"])\n    [\"4\"]\n    \n\
  */\nstring[] total_match(string[] lst1, string[] lst2) \n"
tests: "unittest\n{\n    alias candidate = total_match;\n\n    assert(candidate([],\
  \ []) == []);\n    assert(candidate([\"hi\", \"admin\"], [\"hi\", \"hi\"]) == [\"\
  hi\", \"hi\"]);\n    assert(candidate([\"hi\", \"admin\"], [\"hi\", \"hi\", \"admin\"\
  , \"project\"]) == [\"hi\", \"admin\"]);\n    assert(candidate([\"4\"], [\"1\",\
  \ \"2\", \"3\", \"4\", \"5\"]) == [\"4\"]);\n    assert(candidate([\"hi\", \"admin\"\
  ], [\"hI\", \"Hi\"]) == [\"hI\", \"Hi\"]);\n    assert(candidate([\"hi\", \"admin\"\
  ], [\"hI\", \"hi\", \"hi\"]) == [\"hI\", \"hi\", \"hi\"]);\n    assert(candidate([\"\
  hi\", \"admin\"], [\"hI\", \"hi\", \"hii\"]) == [\"hi\", \"admin\"]);\n    assert(candidate([],\
  \ [\"this\"]) == []);\n    assert(candidate([\"this\"], []) == []);\n}\nvoid main(){}"
completions: ["{\n    int total1 = 0;\n    int total2 = 0;\n    foreach(string s;\
    \ lst1)\n    {\n        total1 += s.length;\n    }\n    foreach(string s; lst2)\n\
    \    {\n        total2 += s.length;\n    }\n    if(total1 < total2)\n    {\n \
    \       return lst1;\n    }\n    else if(total2 < total1)\n    {\n        return\
    \ lst2;\n    }\n    else\n    {\n        return lst1;\n    }\n}", "{\n    int\
    \ total1 = 0;\n    int total2 = 0;\n    foreach(string s; lst1)\n    {\n     \
    \   total1 += s.length;\n    }\n    foreach(string s; lst2)\n    {\n        total2\
    \ += s.length;\n    }\n    if(total1 == total2)\n    {\n        return lst1;\n\
    \    }\n    else if(total1 < total2)\n    {\n        return lst1;\n    }\n   \
    \ else\n    {\n        return lst2;\n    }\n}", "{\n    int total1 = 0;\n    int\
    \ total2 = 0;\n    foreach(string s; lst1)\n    {\n        total1 += s.length;\n\
    \    }\n    foreach(string s; lst2)\n    {\n        total2 += s.length;\n    }\n\
    \    if(total1 == total2)\n    {\n        return lst1;\n    }\n    else if(total1\
    \ < total2)\n    {\n        return lst1;\n    }\n    else\n    {\n        return\
    \ lst2;\n    }\n}", "{\n    int total1 = 0;\n    int total2 = 0;\n    foreach(string\
    \ s; lst1)\n    {\n        total1 += s.length;\n    }\n    foreach(string s; lst2)\n\
    \    {\n        total2 += s.length;\n    }\n    if(total1 == total2)\n    {\n\
    \        return lst1;\n    }\n    else if(total1 < total2)\n    {\n        return\
    \ lst1;\n    }\n    else\n    {\n        return lst2;\n    }\n}", "{\n    int\
    \ total_chars_lst1 = 0;\n    int total_chars_lst2 = 0;\n    foreach(string s;\
    \ lst1)\n    {\n        total_chars_lst1 += s.length;\n    }\n    foreach(string\
    \ s; lst2)\n    {\n        total_chars_lst2 += s.length;\n    }\n    if(total_chars_lst1\
    \ == total_chars_lst2)\n    {\n        return lst1;\n    }\n    else if(total_chars_lst1\
    \ < total_chars_lst2)\n    {\n        return lst1;\n    }\n    else\n    {\n \
    \       return lst2;\n    }\n}", "{\n    int total1 = 0;\n    int total2 = 0;\n\
    \    foreach(string s; lst1)\n    {\n        total1 += s.length;\n    }\n    foreach(string\
    \ s; lst2)\n    {\n        total2 += s.length;\n    }\n    if(total1 < total2)\n\
    \    {\n        return lst1;\n    }\n    else if(total2 < total1)\n    {\n   \
    \     return lst2;\n    }\n    else\n    {\n        return lst1;\n    }\n}", "{\n\
    \    int lst1_total = 0;\n    int lst2_total = 0;\n    foreach(string s; lst1)\n\
    \    {\n        lst1_total += s.length;\n    }\n    foreach(string s; lst2)\n\
    \    {\n        lst2_total += s.length;\n    }\n    if(lst1_total < lst2_total)\n\
    \    {\n        return lst1;\n    }\n    else\n    {\n        return lst2;\n \
    \   }\n}", "{\n    int total1 = 0;\n    int total2 = 0;\n    foreach(string s;\
    \ lst1)\n    {\n        total1 += s.length;\n    }\n    foreach(string s; lst2)\n\
    \    {\n        total2 += s.length;\n    }\n    if(total1 < total2)\n    {\n \
    \       return lst1;\n    }\n    else\n    {\n        return lst2;\n    }\n}",
  "{\n    int total_chars_lst1 = 0;\n    int total_chars_lst2 = 0;\n    foreach(string\
    \ s; lst1)\n    {\n        total_chars_lst1 += s.length;\n    }\n    foreach(string\
    \ s; lst2)\n    {\n        total_chars_lst2 += s.length;\n    }\n    if(total_chars_lst1\
    \ < total_chars_lst2)\n    {\n        return lst1;\n    }\n    else\n    {\n \
    \       return lst2;\n    }\n}", "{\n    int total1 = 0;\n    int total2 = 0;\n\
    \    foreach(string s; lst1)\n    {\n        total1 += s.length;\n    }\n    foreach(string\
    \ s; lst2)\n    {\n        total2 += s.length;\n    }\n    if(total1 == total2)\n\
    \    {\n        return lst1;\n    }\n    else if(total1 < total2)\n    {\n   \
    \     return lst1;\n    }\n    else\n    {\n        return lst2;\n    }\n}", "{\n\
    \    int total1 = 0;\n    int total2 = 0;\n    foreach(string s; lst1)\n    {\n\
    \        total1 += s.length;\n    }\n    foreach(string s; lst2)\n    {\n    \
    \    total2 += s.length;\n    }\n    if(total1 < total2)\n    {\n        return\
    \ lst1;\n    }\n    else if(total2 < total1)\n    {\n        return lst2;\n  \
    \  }\n    else\n    {\n        return lst1;\n    }\n}", "{\n    int total1 = 0;\n\
    \    int total2 = 0;\n    foreach(string s; lst1)\n    {\n        total1 += s.length;\n\
    \    }\n    foreach(string s; lst2)\n    {\n        total2 += s.length;\n    }\n\
    \    if(total1 == total2)\n    {\n        return lst1;\n    }\n    else if(total1\
    \ < total2)\n    {\n        return lst1;\n    }\n    else\n    {\n        return\
    \ lst2;\n    }\n}", "{\n    int lst1_total = 0;\n    int lst2_total = 0;\n   \
    \ foreach(string s; lst1)\n    {\n        lst1_total += s.length;\n    }\n   \
    \ foreach(string s; lst2)\n    {\n        lst2_total += s.length;\n    }\n   \
    \ if(lst1_total < lst2_total)\n    {\n        return lst1;\n    }\n    else\n\
    \    {\n        return lst2;\n    }\n}", "{\n    int total1 = 0;\n    int total2\
    \ = 0;\n    foreach(string s; lst1)\n    {\n        total1 += s.length;\n    }\n\
    \    foreach(string s; lst2)\n    {\n        total2 += s.length;\n    }\n    if(total1\
    \ < total2)\n    {\n        return lst1;\n    }\n    else\n    {\n        return\
    \ lst2;\n    }\n}", "{\n    int total1 = 0;\n    int total2 = 0;\n    foreach(string\
    \ s; lst1)\n    {\n        total1 += s.length;\n    }\n    foreach(string s; lst2)\n\
    \    {\n        total2 += s.length;\n    }\n    if(total1 == total2)\n    {\n\
    \        return lst1;\n    }\n    else if(total1 < total2)\n    {\n        return\
    \ lst1;\n    }\n    else\n    {\n        return lst2;\n    }\n}", "{\n    int\
    \ total1 = 0;\n    int total2 = 0;\n    foreach(string s; lst1)\n    {\n     \
    \   total1 += s.length;\n    }\n    foreach(string s; lst2)\n    {\n        total2\
    \ += s.length;\n    }\n    if(total1 == total2)\n    {\n        return lst1;\n\
    \    }\n    else if(total1 < total2)\n    {\n        return lst1;\n    }\n   \
    \ else\n    {\n        return lst2;\n    }\n}", "{\n    int total_chars_lst1 =\
    \ 0;\n    int total_chars_lst2 = 0;\n    foreach(string s; lst1)\n    {\n    \
    \    total_chars_lst1 += s.length;\n    }\n    foreach(string s; lst2)\n    {\n\
    \        total_chars_lst2 += s.length;\n    }\n    if(total_chars_lst1 < total_chars_lst2)\n\
    \    {\n        return lst1;\n    }\n    else\n    {\n        return lst2;\n \
    \   }\n}", "{\n    int total_chars_lst1 = 0;\n    int total_chars_lst2 = 0;\n\
    \    foreach(string s; lst1)\n    {\n        total_chars_lst1 += s.length;\n \
    \   }\n    foreach(string s; lst2)\n    {\n        total_chars_lst2 += s.length;\n\
    \    }\n    if(total_chars_lst1 < total_chars_lst2)\n    {\n        return lst1;\n\
    \    }\n    else\n    {\n        return lst2;\n    }\n}", "{\n    int total1 =\
    \ 0;\n    int total2 = 0;\n    foreach(string s; lst1)\n    {\n        total1\
    \ += s.length;\n    }\n    foreach(string s; lst2)\n    {\n        total2 += s.length;\n\
    \    }\n    if(total1 == total2)\n    {\n        return lst1;\n    }\n    else\
    \ if(total1 < total2)\n    {\n        return lst1;\n    }\n    else\n    {\n \
    \       return lst2;\n    }\n}", "{\n    int total1 = 0;\n    int total2 = 0;\n\
    \    foreach(string s; lst1)\n    {\n        total1 += s.length;\n    }\n    foreach(string\
    \ s; lst2)\n    {\n        total2 += s.length;\n    }\n    if(total1 == total2)\n\
    \    {\n        return lst1;\n    }\n    else if(total1 < total2)\n    {\n   \
    \     return lst1;\n    }\n    else\n    {\n        return lst2;\n    }\n}"]
stop_tokens:
- "\n\n"
- "\nvoid"
- "\nbool"
- "\nint"

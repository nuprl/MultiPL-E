name: HumanEval_17_parse_music
language: d
prompt: "import std.typecons;\nimport std.math;\n/*\n Input to this function is a\
  \ string representing musical notes in a special ASCII format.\n    Your task is\
  \ to parse this string and return list of integers corresponding to how many beats\
  \ does each\n    not last.\n\n    Here is a legend:\n    'o' - whole note, lasts\
  \ four beats\n    'o|' - half note, lasts two beats\n    '.|' - quater note, lasts\
  \ one beat\n\n    >>> parse_music(\"o o| .| o| o| .| .| .| .| o o\")\n    [4L, 2L,\
  \ 1L, 2L, 2L, 1L, 1L, 1L, 1L, 4L, 4L]\n    \n*/\nlong[] parse_music(string music_string)\
  \ \n"
tests: "unittest\n{\n    alias candidate = parse_music;\n\n    assert(candidate(\"\
  \") == []);\n    assert(candidate(\"o o o o\") == [4L, 4L, 4L, 4L]);\n    assert(candidate(\"\
  .| .| .| .|\") == [1L, 1L, 1L, 1L]);\n    assert(candidate(\"o| o| .| .| o o o o\"\
  ) == [2L, 2L, 1L, 1L, 4L, 4L, 4L, 4L]);\n    assert(candidate(\"o| .| o| .| o o|\
  \ o o|\") == [2L, 1L, 2L, 1L, 4L, 2L, 4L, 2L]);\n}\nvoid main(){}"
completions: ["{\n    long[] result;\n    foreach(c; music_string)\n    {\n      \
    \  switch(c)\n        {\n            case 'o':\n                result ~= 4;\n\
    \                break;\n            case '|':\n                result[$-1] /=\
    \ 2;\n                break;\n            case '.':\n                result[$-1]\
    \ /= 4;\n                break;\n        }\n    }\n    return result;\n}", "{\n\
    \    long[] result;\n    foreach(immutable c; music_string)\n    {\n        if(c\
    \ == 'o')\n            result ~= 4;\n        else if(c == '|')\n            result[$-1]\
    \ /= 2;\n    }\n    return result;\n}", "{\n    long[] result;\n    foreach(char\
    \ c; music_string)\n    {\n        switch(c)\n        {\n            case 'o':\n\
    \                result ~= 4;\n                break;\n            case '|':\n\
    \                result[$-1] /= 2;\n                break;\n            case '.':\n\
    \                result[$-1] /= 4;\n                break;\n        }\n    }\n\
    \    return result;\n}", "{\n    long[] result;\n    foreach(c; music_string)\n\
    \    {\n        switch(c)\n        {\n            case 'o':\n                result\
    \ ~= 4;\n                break;\n            case '|':\n                result[$-1]\
    \ /= 2;\n                break;\n            case '.':\n                break;\n\
    \            default:\n                assert(false);\n        }\n    }\n    return\
    \ result;\n}", "{\n    long[] result;\n    foreach(c; music_string)\n    {\n \
    \       switch(c)\n        {\n            case 'o':\n                result ~=\
    \ 4;\n                break;\n            case '|':\n                result[$-1]\
    \ /= 2;\n                break;\n            case '.':\n                break;\n\
    \            default:\n                assert(false);\n        }\n    }\n    return\
    \ result;\n}", "{\n    long[] result;\n    foreach(c; music_string)\n    {\n \
    \       switch(c)\n        {\n            case 'o':\n                result ~=\
    \ 4;\n                break;\n            case '|':\n                result[$-1]\
    \ /= 2;\n                break;\n            case '.':\n                result[$-1]\
    \ /= 4;\n                break;\n        }\n    }\n    return result;\n}", "{\n\
    \    long[] result;\n    foreach(char c; music_string)\n    {\n        switch(c)\n\
    \        {\n            case 'o':\n                result ~= 4;\n            \
    \    break;\n            case '|':\n                result[$-1] /= 2;\n      \
    \          break;\n            case '.':\n                result[$-1] /= 4;\n\
    \                break;\n        }\n    }\n    return result;\n}", "{\n    long[]\
    \ result;\n    foreach(c; music_string)\n    {\n        switch(c)\n        {\n\
    \            case 'o':\n                result ~= 4;\n                break;\n\
    \            case '|':\n                result[$-1] /= 2;\n                break;\n\
    \            case '.':\n                result[$-1] /= 4;\n                break;\n\
    \        }\n    }\n    return result;\n}", "{\n    long[] result;\n    foreach(c;\
    \ music_string)\n    {\n        switch(c)\n        {\n            case 'o':\n\
    \                result ~= 4;\n                break;\n            case '|':\n\
    \                result[$-1] /= 2;\n                break;\n            case '.':\n\
    \                result[$-1] /= 4;\n                break;\n        }\n    }\n\
    \    return result;\n}", "{\n    long[] result;\n    foreach(c; music_string)\n\
    \    {\n        if(c == 'o')\n        {\n            result ~= 4;\n        }\n\
    \        else if(c == '|')\n        {\n            result[$-1] /= 2;\n       \
    \ }\n    }\n    return result;\n}", "{\n    long[] result;\n    foreach(c; music_string)\n\
    \    {\n        if(c == 'o')\n        {\n            result ~= 4;\n        }\n\
    \        else if(c == '|')\n        {\n            result[$-1] /= 2;\n       \
    \ }\n    }\n    return result;\n}", "{\n    long[] result;\n    int i = 0;\n \
    \   foreach(c; music_string)\n    {\n        if(c == 'o')\n        {\n       \
    \     if(i == 0)\n            {\n                result ~= 4;\n            }\n\
    \            else\n            {\n                if(result[$-1] == 4)\n     \
    \           {\n                    result[$-1] = 8;\n                }\n     \
    \           else\n                {\n                    result ~= 4;\n      \
    \          }\n            }\n        }\n        else if(c == '|')\n        {\n\
    \            if(result[$-1] == 4)\n            {\n                result[$-1]\
    \ = 2;\n            }\n            else\n            {\n                result[$-1]\
    \ = 1;\n            }\n        }\n        i++;\n    }\n    return result;\n}",
  "{\n    long[] result;\n    foreach(c; music_string)\n    {\n        if(c == 'o')\n\
    \        {\n            result ~= 4;\n        }\n        else if(c == '|')\n \
    \       {\n            result[$-1] /= 2;\n        }\n    }\n    return result;\n\
    }", "{\n    long[] result;\n    foreach(c; music_string) \n    {\n        switch(c)\
    \ \n        {\n            case 'o':\n                result ~= 4;\n         \
    \       break;\n            case '|':\n                result[$-1] /= 2;\n   \
    \             break;\n            case '.':\n                break;\n        \
    \    default:\n                assert(false);\n        }\n    }\n    return result;\n\
    }\n/*\n    >>> parse_music(\"o o| .| o| o| .| .| .| .| o o\")\n    [4L, 2L, 1L,\
    \ 2L, 2L, 1L, 1L, 1L, 1L, 4L, 4L]\n*/", "{\n    long[] result;\n    foreach(immutable\
    \ c; music_string)\n    {\n        switch(c)\n        {\n            case 'o':\n\
    \                result ~= 4;\n                break;\n            case '|':\n\
    \                result[$-1] /= 2;\n                break;\n            case '.':\n\
    \                break;\n            default:\n                assert(false);\n\
    \        }\n    }\n    return result;\n}", "{\n    long[] result;\n    foreach(c;\
    \ music_string)\n    {\n        switch(c)\n        {\n            case 'o':\n\
    \                result ~= 4;\n                break;\n            case '|':\n\
    \                result[$-1] /= 2;\n                break;\n            case '.':\n\
    \                result[$-1] /= 4;\n                break;\n        }\n    }\n\
    \    return result;\n}", "{\n    long[] result;\n    foreach(c; music_string)\n\
    \    {\n        switch(c)\n        {\n            case 'o':\n                result\
    \ ~= 4;\n                break;\n            case '|':\n                result[$-1]\
    \ /= 2;\n                break;\n            case '.':\n                result[$-1]\
    \ /= 4;\n                break;\n        }\n    }\n    return result;\n}", "{\n\
    \    long[] result;\n    foreach(c; music_string)\n    {\n        switch(c)\n\
    \        {\n            case 'o':\n                result ~= 4;\n            \
    \    break;\n            case '|':\n                result[$-1] /= 2;\n      \
    \          break;\n            case '.':\n                break;\n           \
    \ default:\n                throw new Exception(\"Invalid character\");\n    \
    \    }\n    }\n    return result;\n}", "{\n    long[] result;\n    foreach(immutable\
    \ char c; music_string)\n    {\n        switch(c)\n        {\n            case\
    \ 'o':\n                result ~= 4;\n                break;\n            case\
    \ '|':\n                result[$-1] /= 2;\n                break;\n          \
    \  case '.':\n                break;\n            default:\n                assert(false);\n\
    \        }\n    }\n    return result;\n}", "{\n    long[] ret;\n    foreach(c;\
    \ music_string)\n    {\n        switch(c)\n        {\n            case 'o':\n\
    \                ret ~= 4;\n                break;\n            case '|':\n  \
    \              ret[$-1] /= 2;\n                break;\n            case '.':\n\
    \                break;\n            default:\n                assert(false);\n\
    \        }\n    }\n    return ret;\n}"]
stop_tokens:
- "\n\n"
- "\nvoid"
- "\nbool"
- "\nint"

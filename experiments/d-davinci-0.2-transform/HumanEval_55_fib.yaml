name: HumanEval_55_fib
language: d
prompt: "import std.math;\n/*\nReturn n-th Fibonacci number.\n    >>> fib(10L)\n \
  \   55L\n    >>> fib(1L)\n    1L\n    >>> fib(8L)\n    21L\n    \n*/\nlong fib(long\
  \ n) \n"
tests: "unittest\n{\n    alias candidate = fib;\n\n    assert(candidate(10L) == 55L);\n\
  \    assert(candidate(1L) == 1L);\n    assert(candidate(8L) == 21L);\n    assert(candidate(11L)\
  \ == 89L);\n    assert(candidate(12L) == 144L);\n}\nvoid main(){}"
completions: ["{\n    if (n < 2)\n        return n;\n    else\n        return fib(n\
    \ - 1) + fib(n - 2);\n}", "{\n    if (n < 2) return n;\n    return fib(n - 1)\
    \ + fib(n - 2);\n}", "{\n    if (n < 2) \n    {\n        return n;\n    }\n  \
    \  else \n    {\n        return fib(n - 1) + fib(n - 2);\n    }\n}", "{\n    if\
    \ (n < 2) \n    {\n        return n;\n    }\n    else \n    {\n        return\
    \ fib(n - 1) + fib(n - 2);\n    }\n}", "{\n    if (n <= 1L) \n    {\n        return\
    \ n;\n    }\n    else \n    {\n        return fib(n - 1L) + fib(n - 2L);\n   \
    \ }\n}", "{\n    if (n < 2)\n        return n;\n    else\n        return fib(n\
    \ - 1) + fib(n - 2);\n}", "{\n    if (n < 2)\n        return n;\n    return fib(n\
    \ - 1) + fib(n - 2);\n}", "{\n    if (n < 2)\n        return n;\n    return fib(n\
    \ - 1) + fib(n - 2);\n}", "{\n    if (n < 2) \n    {\n        return n;\n    }\n\
    \    return fib(n - 1) + fib(n - 2);\n}", "{\n    if (n < 2)\n        return n;\n\
    \    return fib(n - 1) + fib(n - 2);\n}", "{\n    if (n < 2) return n;\n    return\
    \ fib(n - 1) + fib(n - 2);\n}", "{\n    if (n < 2)\n        return n;\n    else\n\
    \        return fib(n - 1) + fib(n - 2);\n}", "{\n    if (n <= 1L)\n        return\
    \ n;\n    else\n        return fib(n - 1L) + fib(n - 2L);\n}", "{\n    if (n <\
    \ 2) \n    {\n        return n;\n    }\n    return fib(n - 1) + fib(n - 2);\n}",
  "{\n    if (n < 2)\n        return n;\n    return fib(n - 1) + fib(n - 2);\n}",
  "{\n    if (n < 2) \n    {\n        return n;\n    }\n    else \n    {\n       \
    \ return fib(n - 1) + fib(n - 2);\n    }\n}", "{\n    if (n <= 1L)\n        return\
    \ n;\n    else\n        return fib(n - 1L) + fib(n - 2L);\n}", "{\n    if (n <\
    \ 2)\n        return n;\n    else\n        return fib(n - 1) + fib(n - 2);\n}",
  "{\n    if (n < 2)\n        return n;\n    return fib(n - 1) + fib(n - 2);\n}",
  "{\n    if (n < 2)\n        return n;\n    else\n        return fib(n - 1) + fib(n\
    \ - 2);\n}"]
stop_tokens:
- "\n\n"
- "\nvoid"
- "\nbool"
- "\nint"

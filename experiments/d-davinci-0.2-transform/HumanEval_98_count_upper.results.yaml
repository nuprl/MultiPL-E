language: d
name: HumanEval_98_count_upper
results:
- exit_code: 1
  program: "import std.math;\n/*\n\n    Given a string s, count the number of uppercase\
    \ vowels in even indices.\n    \n    For example:\n    >>> count_upper(\"aBCdEf\"\
    )\n    1L\n    >>> count_upper(\"abcdefg\")\n    0L\n    >>> count_upper(\"dBBE\"\
    )\n    0L\n    \n*/\nlong count_upper(string s) \n{\n    long count = 0;\n   \
    \ foreach(immutable i, immutable c; s)\n    {\n        if(i % 2 == 0 && c >= 'A'\
    \ && c <= 'Z')\n            count++;\n    }\n    return count;\n}\nunittest\n\
    {\n    alias candidate = count_upper;\n\n    assert(candidate(\"aBCdEf\") == 1L);\n\
    \    assert(candidate(\"abcdefg\") == 0L);\n    assert(candidate(\"dBBE\") ==\
    \ 0L);\n    assert(candidate(\"B\") == 0L);\n    assert(candidate(\"U\") == 1L);\n\
    \    assert(candidate(\"\") == 0L);\n    assert(candidate(\"EEEE\") == 2L);\n\
    }\nvoid main(){}"
  status: Exception
  stderr: 'core.exception.AssertError@/tmp/tmpxs03u9kg.d(29): unittest failure

    ----------------

    ??:? _d_unittestp [0x427e45]

    ??:? void tmpxs03u9kg.__unittest_L25_C1() [0x427ab6]

    ??:? void tmpxs03u9kg.__modtest() [0x427bc4]

    ??:? int core.runtime.runModuleUnitTests().__foreachbody2(object.ModuleInfo*)
    [0x42bb6b]

    ??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)).__lambda2(immutable(object.ModuleInfo*))
    [0x42a9fe]

    ??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))).__foreachbody2(ref
    rt.sections_elf_shared.DSO) [0x42fb91]

    ??:? int rt.sections_elf_shared.DSO.opApply(scope int delegate(ref rt.sections_elf_shared.DSO))
    [0x430040]

    ??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*)))
    [0x42fb1d]

    ??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)) [0x42a9d5]

    ??:? runModuleUnitTests [0x42b941]

    ??:? void rt.dmain2._d_run_main(int, char**, extern (C) int function(char[][])*).runAll()
    [0x428294]

    ??:? void rt.dmain2._d_r'
  stdout: ''
  timestamp: 1660163029
- exit_code: 1
  program: "import std.math;\n/*\n\n    Given a string s, count the number of uppercase\
    \ vowels in even indices.\n    \n    For example:\n    >>> count_upper(\"aBCdEf\"\
    )\n    1L\n    >>> count_upper(\"abcdefg\")\n    0L\n    >>> count_upper(\"dBBE\"\
    )\n    0L\n    \n*/\nlong count_upper(string s) \n{\n    long count = 0;\n   \
    \ foreach(immutable i, immutable c; s)\n    {\n        if(i % 2 == 0 && c >= 'A'\
    \ && c <= 'Z')\n            count++;\n    }\n    return count;\n}\nunittest\n\
    {\n    alias candidate = count_upper;\n\n    assert(candidate(\"aBCdEf\") == 1L);\n\
    \    assert(candidate(\"abcdefg\") == 0L);\n    assert(candidate(\"dBBE\") ==\
    \ 0L);\n    assert(candidate(\"B\") == 0L);\n    assert(candidate(\"U\") == 1L);\n\
    \    assert(candidate(\"\") == 0L);\n    assert(candidate(\"EEEE\") == 2L);\n\
    }\nvoid main(){}"
  status: Exception
  stderr: 'core.exception.AssertError@/tmp/tmpxs03u9kg.d(29): unittest failure

    ----------------

    ??:? _d_unittestp [0x427e45]

    ??:? void tmpxs03u9kg.__unittest_L25_C1() [0x427ab6]

    ??:? void tmpxs03u9kg.__modtest() [0x427bc4]

    ??:? int core.runtime.runModuleUnitTests().__foreachbody2(object.ModuleInfo*)
    [0x42bb6b]

    ??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)).__lambda2(immutable(object.ModuleInfo*))
    [0x42a9fe]

    ??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))).__foreachbody2(ref
    rt.sections_elf_shared.DSO) [0x42fb91]

    ??:? int rt.sections_elf_shared.DSO.opApply(scope int delegate(ref rt.sections_elf_shared.DSO))
    [0x430040]

    ??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*)))
    [0x42fb1d]

    ??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)) [0x42a9d5]

    ??:? runModuleUnitTests [0x42b941]

    ??:? void rt.dmain2._d_run_main(int, char**, extern (C) int function(char[][])*).runAll()
    [0x428294]

    ??:? void rt.dmain2._d_r'
  stdout: ''
  timestamp: 1660163029
- exit_code: 1
  program: "import std.math;\n/*\n\n    Given a string s, count the number of uppercase\
    \ vowels in even indices.\n    \n    For example:\n    >>> count_upper(\"aBCdEf\"\
    )\n    1L\n    >>> count_upper(\"abcdefg\")\n    0L\n    >>> count_upper(\"dBBE\"\
    )\n    0L\n    \n*/\nlong count_upper(string s) \n{\n    long count = 0;\n   \
    \ foreach(i, c; s)\n    {\n        if(i % 2 == 0 && c >= 'A' && c <= 'Z')\n  \
    \          count++;\n    }\n    return count;\n}\nunittest\n{\n    alias candidate\
    \ = count_upper;\n\n    assert(candidate(\"aBCdEf\") == 1L);\n    assert(candidate(\"\
    abcdefg\") == 0L);\n    assert(candidate(\"dBBE\") == 0L);\n    assert(candidate(\"\
    B\") == 0L);\n    assert(candidate(\"U\") == 1L);\n    assert(candidate(\"\")\
    \ == 0L);\n    assert(candidate(\"EEEE\") == 2L);\n}\nvoid main(){}"
  status: Exception
  stderr: 'core.exception.AssertError@/tmp/tmp2l5es36k.d(29): unittest failure

    ----------------

    ??:? _d_unittestp [0x427e3d]

    ??:? void tmp2l5es36k.__unittest_L25_C1() [0x427ab2]

    ??:? void tmp2l5es36k.__modtest() [0x427bc0]

    ??:? int core.runtime.runModuleUnitTests().__foreachbody2(object.ModuleInfo*)
    [0x42bb63]

    ??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)).__lambda2(immutable(object.ModuleInfo*))
    [0x42a9f6]

    ??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))).__foreachbody2(ref
    rt.sections_elf_shared.DSO) [0x42fb89]

    ??:? int rt.sections_elf_shared.DSO.opApply(scope int delegate(ref rt.sections_elf_shared.DSO))
    [0x430038]

    ??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*)))
    [0x42fb15]

    ??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)) [0x42a9cd]

    ??:? runModuleUnitTests [0x42b939]

    ??:? void rt.dmain2._d_run_main(int, char**, extern (C) int function(char[][])*).runAll()
    [0x42828c]

    ??:? void rt.dmain2._d_r'
  stdout: ''
  timestamp: 1660163029
- exit_code: 1
  program: "import std.math;\n/*\n\n    Given a string s, count the number of uppercase\
    \ vowels in even indices.\n    \n    For example:\n    >>> count_upper(\"aBCdEf\"\
    )\n    1L\n    >>> count_upper(\"abcdefg\")\n    0L\n    >>> count_upper(\"dBBE\"\
    )\n    0L\n    \n*/\nlong count_upper(string s) \n{\n    long count = 0;\n   \
    \ foreach(i, c; s)\n    {\n        if(i % 2 == 0 && c == 'A' || c == 'E' || c\
    \ == 'I' || c == 'O' || c == 'U')\n        {\n            count++;\n        }\n\
    \    }\n    return count;\n}\nunittest\n{\n    alias candidate = count_upper;\n\
    \n    assert(candidate(\"aBCdEf\") == 1L);\n    assert(candidate(\"abcdefg\")\
    \ == 0L);\n    assert(candidate(\"dBBE\") == 0L);\n    assert(candidate(\"B\"\
    ) == 0L);\n    assert(candidate(\"U\") == 1L);\n    assert(candidate(\"\") ==\
    \ 0L);\n    assert(candidate(\"EEEE\") == 2L);\n}\nvoid main(){}"
  status: Exception
  stderr: 'core.exception.AssertError@/tmp/tmpq101czay.d(33): unittest failure

    ----------------

    ??:? _d_unittestp [0x427e55]

    ??:? void tmpq101czay.__unittest_L27_C1() [0x427b1a]

    ??:? void tmpq101czay.__modtest() [0x427bd4]

    ??:? int core.runtime.runModuleUnitTests().__foreachbody2(object.ModuleInfo*)
    [0x42bb7b]

    ??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)).__lambda2(immutable(object.ModuleInfo*))
    [0x42aa0e]

    ??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))).__foreachbody2(ref
    rt.sections_elf_shared.DSO) [0x42fba1]

    ??:? int rt.sections_elf_shared.DSO.opApply(scope int delegate(ref rt.sections_elf_shared.DSO))
    [0x430050]

    ??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*)))
    [0x42fb2d]

    ??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)) [0x42a9e5]

    ??:? runModuleUnitTests [0x42b951]

    ??:? void rt.dmain2._d_run_main(int, char**, extern (C) int function(char[][])*).runAll()
    [0x4282a4]

    ??:? void rt.dmain2._d_r'
  stdout: ''
  timestamp: 1660163029
- exit_code: 1
  program: "import std.math;\n/*\n\n    Given a string s, count the number of uppercase\
    \ vowels in even indices.\n    \n    For example:\n    >>> count_upper(\"aBCdEf\"\
    )\n    1L\n    >>> count_upper(\"abcdefg\")\n    0L\n    >>> count_upper(\"dBBE\"\
    )\n    0L\n    \n*/\nlong count_upper(string s) \n{\n    long count = 0;\n   \
    \ foreach(i, c; s)\n    {\n        if(i % 2 == 0 && isupper(c))\n            count++;\n\
    \    }\n    return count;\n}\nunittest\n{\n    alias candidate = count_upper;\n\
    \n    assert(candidate(\"aBCdEf\") == 1L);\n    assert(candidate(\"abcdefg\")\
    \ == 0L);\n    assert(candidate(\"dBBE\") == 0L);\n    assert(candidate(\"B\"\
    ) == 0L);\n    assert(candidate(\"U\") == 1L);\n    assert(candidate(\"\") ==\
    \ 0L);\n    assert(candidate(\"EEEE\") == 2L);\n}\nvoid main(){}"
  status: SyntaxError
  stderr: '/tmp/tmpbnddjpmc.d(20): Error: undefined identifier `isupper`

    Failed: ["dmd", "-unittest", "-v", "-o-", "/tmp/tmpbnddjpmc.d", "-I/tmp"]

    '
  stdout: ''
  timestamp: 1660163028
- exit_code: 1
  program: "import std.math;\n/*\n\n    Given a string s, count the number of uppercase\
    \ vowels in even indices.\n    \n    For example:\n    >>> count_upper(\"aBCdEf\"\
    )\n    1L\n    >>> count_upper(\"abcdefg\")\n    0L\n    >>> count_upper(\"dBBE\"\
    )\n    0L\n    \n*/\nlong count_upper(string s) \n{\n    long count = 0;\n   \
    \ foreach(i, c; s)\n    {\n        if(i % 2 == 0 && c >= 'A' && c <= 'Z')\n  \
    \          count++;\n    }\n    return count;\n}\nunittest\n{\n    alias candidate\
    \ = count_upper;\n\n    assert(candidate(\"aBCdEf\") == 1L);\n    assert(candidate(\"\
    abcdefg\") == 0L);\n    assert(candidate(\"dBBE\") == 0L);\n    assert(candidate(\"\
    B\") == 0L);\n    assert(candidate(\"U\") == 1L);\n    assert(candidate(\"\")\
    \ == 0L);\n    assert(candidate(\"EEEE\") == 2L);\n}\nvoid main(){}"
  status: Exception
  stderr: 'core.exception.AssertError@/tmp/tmp2l5es36k.d(29): unittest failure

    ----------------

    ??:? _d_unittestp [0x427e3d]

    ??:? void tmp2l5es36k.__unittest_L25_C1() [0x427ab2]

    ??:? void tmp2l5es36k.__modtest() [0x427bc0]

    ??:? int core.runtime.runModuleUnitTests().__foreachbody2(object.ModuleInfo*)
    [0x42bb63]

    ??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)).__lambda2(immutable(object.ModuleInfo*))
    [0x42a9f6]

    ??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))).__foreachbody2(ref
    rt.sections_elf_shared.DSO) [0x42fb89]

    ??:? int rt.sections_elf_shared.DSO.opApply(scope int delegate(ref rt.sections_elf_shared.DSO))
    [0x430038]

    ??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*)))
    [0x42fb15]

    ??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)) [0x42a9cd]

    ??:? runModuleUnitTests [0x42b939]

    ??:? void rt.dmain2._d_run_main(int, char**, extern (C) int function(char[][])*).runAll()
    [0x42828c]

    ??:? void rt.dmain2._d_r'
  stdout: ''
  timestamp: 1660163029
- exit_code: 1
  program: "import std.math;\n/*\n\n    Given a string s, count the number of uppercase\
    \ vowels in even indices.\n    \n    For example:\n    >>> count_upper(\"aBCdEf\"\
    )\n    1L\n    >>> count_upper(\"abcdefg\")\n    0L\n    >>> count_upper(\"dBBE\"\
    )\n    0L\n    \n*/\nlong count_upper(string s) \n{\n    long count = 0;\n   \
    \ foreach(i, c; s) \n    {\n        if(i % 2 == 0 && c >= 'A' && c <= 'Z') \n\
    \        {\n            count++;\n        }\n    }\n    return count;\n}\nunittest\n\
    {\n    alias candidate = count_upper;\n\n    assert(candidate(\"aBCdEf\") == 1L);\n\
    \    assert(candidate(\"abcdefg\") == 0L);\n    assert(candidate(\"dBBE\") ==\
    \ 0L);\n    assert(candidate(\"B\") == 0L);\n    assert(candidate(\"U\") == 1L);\n\
    \    assert(candidate(\"\") == 0L);\n    assert(candidate(\"EEEE\") == 2L);\n\
    }\nvoid main(){}"
  status: Exception
  stderr: 'core.exception.AssertError@/tmp/tmpuovgxl6w.d(31): unittest failure

    ----------------

    ??:? _d_unittestp [0x427e3d]

    ??:? void tmpuovgxl6w.__unittest_L27_C1() [0x427ab2]

    ??:? void tmpuovgxl6w.__modtest() [0x427bc0]

    ??:? int core.runtime.runModuleUnitTests().__foreachbody2(object.ModuleInfo*)
    [0x42bb63]

    ??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)).__lambda2(immutable(object.ModuleInfo*))
    [0x42a9f6]

    ??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))).__foreachbody2(ref
    rt.sections_elf_shared.DSO) [0x42fb89]

    ??:? int rt.sections_elf_shared.DSO.opApply(scope int delegate(ref rt.sections_elf_shared.DSO))
    [0x430038]

    ??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*)))
    [0x42fb15]

    ??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)) [0x42a9cd]

    ??:? runModuleUnitTests [0x42b939]

    ??:? void rt.dmain2._d_run_main(int, char**, extern (C) int function(char[][])*).runAll()
    [0x42828c]

    ??:? void rt.dmain2._d_r'
  stdout: ''
  timestamp: 1660163029
- exit_code: 1
  program: "import std.math;\n/*\n\n    Given a string s, count the number of uppercase\
    \ vowels in even indices.\n    \n    For example:\n    >>> count_upper(\"aBCdEf\"\
    )\n    1L\n    >>> count_upper(\"abcdefg\")\n    0L\n    >>> count_upper(\"dBBE\"\
    )\n    0L\n    \n*/\nlong count_upper(string s) \n{\n    long count = 0;\n   \
    \ foreach(i, c; s)\n    {\n        if(i % 2 == 0 && c >= 'A' && c <= 'Z')\n  \
    \          count++;\n    }\n    return count;\n}\nunittest\n{\n    alias candidate\
    \ = count_upper;\n\n    assert(candidate(\"aBCdEf\") == 1L);\n    assert(candidate(\"\
    abcdefg\") == 0L);\n    assert(candidate(\"dBBE\") == 0L);\n    assert(candidate(\"\
    B\") == 0L);\n    assert(candidate(\"U\") == 1L);\n    assert(candidate(\"\")\
    \ == 0L);\n    assert(candidate(\"EEEE\") == 2L);\n}\nvoid main(){}"
  status: Exception
  stderr: 'core.exception.AssertError@/tmp/tmp2l5es36k.d(29): unittest failure

    ----------------

    ??:? _d_unittestp [0x427e3d]

    ??:? void tmp2l5es36k.__unittest_L25_C1() [0x427ab2]

    ??:? void tmp2l5es36k.__modtest() [0x427bc0]

    ??:? int core.runtime.runModuleUnitTests().__foreachbody2(object.ModuleInfo*)
    [0x42bb63]

    ??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)).__lambda2(immutable(object.ModuleInfo*))
    [0x42a9f6]

    ??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))).__foreachbody2(ref
    rt.sections_elf_shared.DSO) [0x42fb89]

    ??:? int rt.sections_elf_shared.DSO.opApply(scope int delegate(ref rt.sections_elf_shared.DSO))
    [0x430038]

    ??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*)))
    [0x42fb15]

    ??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)) [0x42a9cd]

    ??:? runModuleUnitTests [0x42b939]

    ??:? void rt.dmain2._d_run_main(int, char**, extern (C) int function(char[][])*).runAll()
    [0x42828c]

    ??:? void rt.dmain2._d_r'
  stdout: ''
  timestamp: 1660163029
- exit_code: 1
  program: "import std.math;\n/*\n\n    Given a string s, count the number of uppercase\
    \ vowels in even indices.\n    \n    For example:\n    >>> count_upper(\"aBCdEf\"\
    )\n    1L\n    >>> count_upper(\"abcdefg\")\n    0L\n    >>> count_upper(\"dBBE\"\
    )\n    0L\n    \n*/\nlong count_upper(string s) \n{\n    long count = 0;\n   \
    \ foreach(i, c; s)\n    {\n        if(i % 2 == 0 && isupper(c))\n            count++;\n\
    \    }\n    return count;\n}\nunittest\n{\n    alias candidate = count_upper;\n\
    \n    assert(candidate(\"aBCdEf\") == 1L);\n    assert(candidate(\"abcdefg\")\
    \ == 0L);\n    assert(candidate(\"dBBE\") == 0L);\n    assert(candidate(\"B\"\
    ) == 0L);\n    assert(candidate(\"U\") == 1L);\n    assert(candidate(\"\") ==\
    \ 0L);\n    assert(candidate(\"EEEE\") == 2L);\n}\nvoid main(){}"
  status: SyntaxError
  stderr: '/tmp/tmpbnddjpmc.d(20): Error: undefined identifier `isupper`

    Failed: ["dmd", "-unittest", "-v", "-o-", "/tmp/tmpbnddjpmc.d", "-I/tmp"]

    '
  stdout: ''
  timestamp: 1660163028
- exit_code: 1
  program: "import std.math;\n/*\n\n    Given a string s, count the number of uppercase\
    \ vowels in even indices.\n    \n    For example:\n    >>> count_upper(\"aBCdEf\"\
    )\n    1L\n    >>> count_upper(\"abcdefg\")\n    0L\n    >>> count_upper(\"dBBE\"\
    )\n    0L\n    \n*/\nlong count_upper(string s) \n{\n    long count = 0;\n   \
    \ foreach(i, c; s)\n    {\n        if(i % 2 == 0 && isupper(c))\n            count++;\n\
    \    }\n    return count;\n}\nunittest\n{\n    alias candidate = count_upper;\n\
    \n    assert(candidate(\"aBCdEf\") == 1L);\n    assert(candidate(\"abcdefg\")\
    \ == 0L);\n    assert(candidate(\"dBBE\") == 0L);\n    assert(candidate(\"B\"\
    ) == 0L);\n    assert(candidate(\"U\") == 1L);\n    assert(candidate(\"\") ==\
    \ 0L);\n    assert(candidate(\"EEEE\") == 2L);\n}\nvoid main(){}"
  status: SyntaxError
  stderr: '/tmp/tmpbnddjpmc.d(20): Error: undefined identifier `isupper`

    Failed: ["dmd", "-unittest", "-v", "-o-", "/tmp/tmpbnddjpmc.d", "-I/tmp"]

    '
  stdout: ''
  timestamp: 1660163028
- exit_code: 1
  program: "import std.math;\n/*\n\n    Given a string s, count the number of uppercase\
    \ vowels in even indices.\n    \n    For example:\n    >>> count_upper(\"aBCdEf\"\
    )\n    1L\n    >>> count_upper(\"abcdefg\")\n    0L\n    >>> count_upper(\"dBBE\"\
    )\n    0L\n    \n*/\nlong count_upper(string s) \n{\n    long count = 0;\n   \
    \ foreach(immutable i, immutable c; s)\n    {\n        if(i % 2 == 0 && c >= 'A'\
    \ && c <= 'Z')\n            count++;\n    }\n    return count;\n}\nunittest\n\
    {\n    alias candidate = count_upper;\n\n    assert(candidate(\"aBCdEf\") == 1L);\n\
    \    assert(candidate(\"abcdefg\") == 0L);\n    assert(candidate(\"dBBE\") ==\
    \ 0L);\n    assert(candidate(\"B\") == 0L);\n    assert(candidate(\"U\") == 1L);\n\
    \    assert(candidate(\"\") == 0L);\n    assert(candidate(\"EEEE\") == 2L);\n\
    }\nvoid main(){}"
  status: Exception
  stderr: 'core.exception.AssertError@/tmp/tmpxs03u9kg.d(29): unittest failure

    ----------------

    ??:? _d_unittestp [0x427e45]

    ??:? void tmpxs03u9kg.__unittest_L25_C1() [0x427ab6]

    ??:? void tmpxs03u9kg.__modtest() [0x427bc4]

    ??:? int core.runtime.runModuleUnitTests().__foreachbody2(object.ModuleInfo*)
    [0x42bb6b]

    ??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)).__lambda2(immutable(object.ModuleInfo*))
    [0x42a9fe]

    ??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))).__foreachbody2(ref
    rt.sections_elf_shared.DSO) [0x42fb91]

    ??:? int rt.sections_elf_shared.DSO.opApply(scope int delegate(ref rt.sections_elf_shared.DSO))
    [0x430040]

    ??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*)))
    [0x42fb1d]

    ??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)) [0x42a9d5]

    ??:? runModuleUnitTests [0x42b941]

    ??:? void rt.dmain2._d_run_main(int, char**, extern (C) int function(char[][])*).runAll()
    [0x428294]

    ??:? void rt.dmain2._d_r'
  stdout: ''
  timestamp: 1660163029
- exit_code: 1
  program: "import std.math;\n/*\n\n    Given a string s, count the number of uppercase\
    \ vowels in even indices.\n    \n    For example:\n    >>> count_upper(\"aBCdEf\"\
    )\n    1L\n    >>> count_upper(\"abcdefg\")\n    0L\n    >>> count_upper(\"dBBE\"\
    )\n    0L\n    \n*/\nlong count_upper(string s) \n{\n    long count = 0;\n   \
    \ foreach(i, c; s)\n    {\n        if(i % 2 == 0 && c == 'A' || c == 'E' || c\
    \ == 'I' || c == 'O' || c == 'U')\n        {\n            count++;\n        }\n\
    \    }\n    return count;\n}\nunittest\n{\n    alias candidate = count_upper;\n\
    \n    assert(candidate(\"aBCdEf\") == 1L);\n    assert(candidate(\"abcdefg\")\
    \ == 0L);\n    assert(candidate(\"dBBE\") == 0L);\n    assert(candidate(\"B\"\
    ) == 0L);\n    assert(candidate(\"U\") == 1L);\n    assert(candidate(\"\") ==\
    \ 0L);\n    assert(candidate(\"EEEE\") == 2L);\n}\nvoid main(){}"
  status: Exception
  stderr: 'core.exception.AssertError@/tmp/tmpq101czay.d(33): unittest failure

    ----------------

    ??:? _d_unittestp [0x427e55]

    ??:? void tmpq101czay.__unittest_L27_C1() [0x427b1a]

    ??:? void tmpq101czay.__modtest() [0x427bd4]

    ??:? int core.runtime.runModuleUnitTests().__foreachbody2(object.ModuleInfo*)
    [0x42bb7b]

    ??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)).__lambda2(immutable(object.ModuleInfo*))
    [0x42aa0e]

    ??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))).__foreachbody2(ref
    rt.sections_elf_shared.DSO) [0x42fba1]

    ??:? int rt.sections_elf_shared.DSO.opApply(scope int delegate(ref rt.sections_elf_shared.DSO))
    [0x430050]

    ??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*)))
    [0x42fb2d]

    ??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)) [0x42a9e5]

    ??:? runModuleUnitTests [0x42b951]

    ??:? void rt.dmain2._d_run_main(int, char**, extern (C) int function(char[][])*).runAll()
    [0x4282a4]

    ??:? void rt.dmain2._d_r'
  stdout: ''
  timestamp: 1660163029
- exit_code: 1
  program: "import std.math;\n/*\n\n    Given a string s, count the number of uppercase\
    \ vowels in even indices.\n    \n    For example:\n    >>> count_upper(\"aBCdEf\"\
    )\n    1L\n    >>> count_upper(\"abcdefg\")\n    0L\n    >>> count_upper(\"dBBE\"\
    )\n    0L\n    \n*/\nlong count_upper(string s) \n{\n    long count = 0;\n   \
    \ foreach(i, c; s)\n    {\n        if(i % 2 == 0 && isupper(c))\n            count++;\n\
    \    }\n    return count;\n}\nunittest\n{\n    alias candidate = count_upper;\n\
    \n    assert(candidate(\"aBCdEf\") == 1L);\n    assert(candidate(\"abcdefg\")\
    \ == 0L);\n    assert(candidate(\"dBBE\") == 0L);\n    assert(candidate(\"B\"\
    ) == 0L);\n    assert(candidate(\"U\") == 1L);\n    assert(candidate(\"\") ==\
    \ 0L);\n    assert(candidate(\"EEEE\") == 2L);\n}\nvoid main(){}"
  status: SyntaxError
  stderr: '/tmp/tmpbnddjpmc.d(20): Error: undefined identifier `isupper`

    Failed: ["dmd", "-unittest", "-v", "-o-", "/tmp/tmpbnddjpmc.d", "-I/tmp"]

    '
  stdout: ''
  timestamp: 1660163028
- exit_code: 1
  program: "import std.math;\n/*\n\n    Given a string s, count the number of uppercase\
    \ vowels in even indices.\n    \n    For example:\n    >>> count_upper(\"aBCdEf\"\
    )\n    1L\n    >>> count_upper(\"abcdefg\")\n    0L\n    >>> count_upper(\"dBBE\"\
    )\n    0L\n    \n*/\nlong count_upper(string s) \n{\n    long count = 0;\n   \
    \ foreach(i, c; s)\n    {\n        if(i % 2 == 0 && isUpper(c))\n            count++;\n\
    \    }\n    return count;\n}\nunittest\n{\n    alias candidate = count_upper;\n\
    \n    assert(candidate(\"aBCdEf\") == 1L);\n    assert(candidate(\"abcdefg\")\
    \ == 0L);\n    assert(candidate(\"dBBE\") == 0L);\n    assert(candidate(\"B\"\
    ) == 0L);\n    assert(candidate(\"U\") == 1L);\n    assert(candidate(\"\") ==\
    \ 0L);\n    assert(candidate(\"EEEE\") == 2L);\n}\nvoid main(){}"
  status: SyntaxError
  stderr: '/tmp/tmpjziclffi.d(20): Error: undefined identifier `isUpper`

    Failed: ["dmd", "-unittest", "-v", "-o-", "/tmp/tmpjziclffi.d", "-I/tmp"]

    '
  stdout: ''
  timestamp: 1660163028
- exit_code: 1
  program: "import std.math;\n/*\n\n    Given a string s, count the number of uppercase\
    \ vowels in even indices.\n    \n    For example:\n    >>> count_upper(\"aBCdEf\"\
    )\n    1L\n    >>> count_upper(\"abcdefg\")\n    0L\n    >>> count_upper(\"dBBE\"\
    )\n    0L\n    \n*/\nlong count_upper(string s) \n{\n    long count = 0;\n   \
    \ foreach(i, c; s)\n    {\n        if(i % 2 == 0 && isupper(c))\n            count++;\n\
    \    }\n    return count;\n}\nunittest\n{\n    alias candidate = count_upper;\n\
    \n    assert(candidate(\"aBCdEf\") == 1L);\n    assert(candidate(\"abcdefg\")\
    \ == 0L);\n    assert(candidate(\"dBBE\") == 0L);\n    assert(candidate(\"B\"\
    ) == 0L);\n    assert(candidate(\"U\") == 1L);\n    assert(candidate(\"\") ==\
    \ 0L);\n    assert(candidate(\"EEEE\") == 2L);\n}\nvoid main(){}"
  status: SyntaxError
  stderr: '/tmp/tmpbnddjpmc.d(20): Error: undefined identifier `isupper`

    Failed: ["dmd", "-unittest", "-v", "-o-", "/tmp/tmpbnddjpmc.d", "-I/tmp"]

    '
  stdout: ''
  timestamp: 1660163028
- exit_code: 1
  program: "import std.math;\n/*\n\n    Given a string s, count the number of uppercase\
    \ vowels in even indices.\n    \n    For example:\n    >>> count_upper(\"aBCdEf\"\
    )\n    1L\n    >>> count_upper(\"abcdefg\")\n    0L\n    >>> count_upper(\"dBBE\"\
    )\n    0L\n    \n*/\nlong count_upper(string s) \n{\n    long count = 0;\n   \
    \ foreach(immutable i, immutable c; s)\n    {\n        if(i % 2 == 0 && c in \"\
    AEIOU\")\n            count++;\n    }\n    return count;\n}\nunittest\n{\n   \
    \ alias candidate = count_upper;\n\n    assert(candidate(\"aBCdEf\") == 1L);\n\
    \    assert(candidate(\"abcdefg\") == 0L);\n    assert(candidate(\"dBBE\") ==\
    \ 0L);\n    assert(candidate(\"B\") == 0L);\n    assert(candidate(\"U\") == 1L);\n\
    \    assert(candidate(\"\") == 0L);\n    assert(candidate(\"EEEE\") == 2L);\n\
    }\nvoid main(){}"
  status: SyntaxError
  stderr: '/tmp/tmpkskmk_a9.d(20): Error: incompatible types for `(c) in ("AEIOU")`:
    `immutable(char)` and `string`

    Failed: ["dmd", "-unittest", "-v", "-o-", "/tmp/tmpkskmk_a9.d", "-I/tmp"]

    '
  stdout: ''
  timestamp: 1660163028
- exit_code: 1
  program: "import std.math;\n/*\n\n    Given a string s, count the number of uppercase\
    \ vowels in even indices.\n    \n    For example:\n    >>> count_upper(\"aBCdEf\"\
    )\n    1L\n    >>> count_upper(\"abcdefg\")\n    0L\n    >>> count_upper(\"dBBE\"\
    )\n    0L\n    \n*/\nlong count_upper(string s) \n{\n    long count = 0;\n   \
    \ foreach(immutable i, immutable c; s)\n    {\n        if(i % 2 == 0 && isUpper(c))\n\
    \            count++;\n    }\n    return count;\n}\nunittest\n{\n    alias candidate\
    \ = count_upper;\n\n    assert(candidate(\"aBCdEf\") == 1L);\n    assert(candidate(\"\
    abcdefg\") == 0L);\n    assert(candidate(\"dBBE\") == 0L);\n    assert(candidate(\"\
    B\") == 0L);\n    assert(candidate(\"U\") == 1L);\n    assert(candidate(\"\")\
    \ == 0L);\n    assert(candidate(\"EEEE\") == 2L);\n}\nvoid main(){}"
  status: SyntaxError
  stderr: '/tmp/tmpk9ekfx89.d(20): Error: undefined identifier `isUpper`

    Failed: ["dmd", "-unittest", "-v", "-o-", "/tmp/tmpk9ekfx89.d", "-I/tmp"]

    '
  stdout: ''
  timestamp: 1660163028
- exit_code: 1
  program: "import std.math;\n/*\n\n    Given a string s, count the number of uppercase\
    \ vowels in even indices.\n    \n    For example:\n    >>> count_upper(\"aBCdEf\"\
    )\n    1L\n    >>> count_upper(\"abcdefg\")\n    0L\n    >>> count_upper(\"dBBE\"\
    )\n    0L\n    \n*/\nlong count_upper(string s) \n{\n    long count = 0;\n   \
    \ for (size_t i = 0; i < s.length; i++)\n    {\n        if (i % 2 == 0 && s[i]\
    \ == toupper(s[i]))\n        {\n            count++;\n        }\n    }\n    return\
    \ count;\n}\nunittest\n{\n    alias candidate = count_upper;\n\n    assert(candidate(\"\
    aBCdEf\") == 1L);\n    assert(candidate(\"abcdefg\") == 0L);\n    assert(candidate(\"\
    dBBE\") == 0L);\n    assert(candidate(\"B\") == 0L);\n    assert(candidate(\"\
    U\") == 1L);\n    assert(candidate(\"\") == 0L);\n    assert(candidate(\"EEEE\"\
    ) == 2L);\n}\nvoid main(){}"
  status: SyntaxError
  stderr: '/tmp/tmp9qa_ar90.d(20): Error: undefined identifier `toupper`

    Failed: ["dmd", "-unittest", "-v", "-o-", "/tmp/tmp9qa_ar90.d", "-I/tmp"]

    '
  stdout: ''
  timestamp: 1660163028
- exit_code: 1
  program: "import std.math;\n/*\n\n    Given a string s, count the number of uppercase\
    \ vowels in even indices.\n    \n    For example:\n    >>> count_upper(\"aBCdEf\"\
    )\n    1L\n    >>> count_upper(\"abcdefg\")\n    0L\n    >>> count_upper(\"dBBE\"\
    )\n    0L\n    \n*/\nlong count_upper(string s) \n{\n    long count = 0;\n   \
    \ foreach(i, c; s)\n    {\n        if(i % 2 == 0 && c in ['A', 'E', 'I', 'O',\
    \ 'U'])\n            count++;\n    }\n    return count;\n}\nunittest\n{\n    alias\
    \ candidate = count_upper;\n\n    assert(candidate(\"aBCdEf\") == 1L);\n    assert(candidate(\"\
    abcdefg\") == 0L);\n    assert(candidate(\"dBBE\") == 0L);\n    assert(candidate(\"\
    B\") == 0L);\n    assert(candidate(\"U\") == 1L);\n    assert(candidate(\"\")\
    \ == 0L);\n    assert(candidate(\"EEEE\") == 2L);\n}\nvoid main(){}"
  status: SyntaxError
  stderr: '/tmp/tmpkk1wsjki.d(20): Error: incompatible types for `(c) in ([''A'',
    ''E'', ''I'', ''O'', ''U''])`: `immutable(char)` and `char[]`

    Failed: ["dmd", "-unittest", "-v", "-o-", "/tmp/tmpkk1wsjki.d", "-I/tmp"]

    '
  stdout: ''
  timestamp: 1660163028
- exit_code: 1
  program: "import std.math;\n/*\n\n    Given a string s, count the number of uppercase\
    \ vowels in even indices.\n    \n    For example:\n    >>> count_upper(\"aBCdEf\"\
    )\n    1L\n    >>> count_upper(\"abcdefg\")\n    0L\n    >>> count_upper(\"dBBE\"\
    )\n    0L\n    \n*/\nlong count_upper(string s) \n{\n    long count = 0;\n   \
    \ foreach(i, c; s)\n    {\n        if(i % 2 == 0 && isUpper(c))\n            count++;\n\
    \    }\n    return count;\n}\nunittest\n{\n    alias candidate = count_upper;\n\
    \n    assert(candidate(\"aBCdEf\") == 1L);\n    assert(candidate(\"abcdefg\")\
    \ == 0L);\n    assert(candidate(\"dBBE\") == 0L);\n    assert(candidate(\"B\"\
    ) == 0L);\n    assert(candidate(\"U\") == 1L);\n    assert(candidate(\"\") ==\
    \ 0L);\n    assert(candidate(\"EEEE\") == 2L);\n}\nvoid main(){}"
  status: SyntaxError
  stderr: '/tmp/tmpjziclffi.d(20): Error: undefined identifier `isUpper`

    Failed: ["dmd", "-unittest", "-v", "-o-", "/tmp/tmpjziclffi.d", "-I/tmp"]

    '
  stdout: ''
  timestamp: 1660163028
- exit_code: 1
  program: "import std.math;\n/*\n\n    Given a string s, count the number of uppercase\
    \ vowels in even indices.\n    \n    For example:\n    >>> count_upper(\"aBCdEf\"\
    )\n    1L\n    >>> count_upper(\"abcdefg\")\n    0L\n    >>> count_upper(\"dBBE\"\
    )\n    0L\n    \n*/\nlong count_upper(string s) \n{\n    long count = 0;\n   \
    \ foreach(i, c; s)\n    {\n        if(i % 2 == 0 && c in ['A', 'E', 'I', 'O',\
    \ 'U'])\n            count++;\n    }\n    return count;\n}\nunittest\n{\n    alias\
    \ candidate = count_upper;\n\n    assert(candidate(\"aBCdEf\") == 1L);\n    assert(candidate(\"\
    abcdefg\") == 0L);\n    assert(candidate(\"dBBE\") == 0L);\n    assert(candidate(\"\
    B\") == 0L);\n    assert(candidate(\"U\") == 1L);\n    assert(candidate(\"\")\
    \ == 0L);\n    assert(candidate(\"EEEE\") == 2L);\n}\nvoid main(){}"
  status: SyntaxError
  stderr: '/tmp/tmpkk1wsjki.d(20): Error: incompatible types for `(c) in ([''A'',
    ''E'', ''I'', ''O'', ''U''])`: `immutable(char)` and `char[]`

    Failed: ["dmd", "-unittest", "-v", "-o-", "/tmp/tmpkk1wsjki.d", "-I/tmp"]

    '
  stdout: ''
  timestamp: 1660163028
- exit_code: 1
  program: "import std.math;\n/*\n\n    Given a string s, count the number of uppercase\
    \ vowels in even indices.\n    \n    For example:\n    >>> count_upper(\"aBCdEf\"\
    )\n    1L\n    >>> count_upper(\"abcdefg\")\n    0L\n    >>> count_upper(\"dBBE\"\
    )\n    0L\n    \n*/\nlong count_upper(string s) \n{\n    long count = 0;\n   \
    \ foreach(i, c; s)\n    {\n        if(i % 2 == 0 && isupper(c))\n            count++;\n\
    \    }\n    return count;\n}\nunittest\n{\n    alias candidate = count_upper;\n\
    \n    assert(candidate(\"aBCdEf\") == 1L);\n    assert(candidate(\"abcdefg\")\
    \ == 0L);\n    assert(candidate(\"dBBE\") == 0L);\n    assert(candidate(\"B\"\
    ) == 0L);\n    assert(candidate(\"U\") == 1L);\n    assert(candidate(\"\") ==\
    \ 0L);\n    assert(candidate(\"EEEE\") == 2L);\n}\nvoid main(){}"
  status: SyntaxError
  stderr: '/tmp/tmpbnddjpmc.d(20): Error: undefined identifier `isupper`

    Failed: ["dmd", "-unittest", "-v", "-o-", "/tmp/tmpbnddjpmc.d", "-I/tmp"]

    '
  stdout: ''
  timestamp: 1660163028
- exit_code: 1
  program: "import std.math;\n/*\n\n    Given a string s, count the number of uppercase\
    \ vowels in even indices.\n    \n    For example:\n    >>> count_upper(\"aBCdEf\"\
    )\n    1L\n    >>> count_upper(\"abcdefg\")\n    0L\n    >>> count_upper(\"dBBE\"\
    )\n    0L\n    \n*/\nlong count_upper(string s) \n{\n    long count = 0;\n   \
    \ foreach(i, c; s)\n    {\n        if(i % 2 == 0 && isupper(c))\n            count++;\n\
    \    }\n    return count;\n}\nunittest\n{\n    alias candidate = count_upper;\n\
    \n    assert(candidate(\"aBCdEf\") == 1L);\n    assert(candidate(\"abcdefg\")\
    \ == 0L);\n    assert(candidate(\"dBBE\") == 0L);\n    assert(candidate(\"B\"\
    ) == 0L);\n    assert(candidate(\"U\") == 1L);\n    assert(candidate(\"\") ==\
    \ 0L);\n    assert(candidate(\"EEEE\") == 2L);\n}\nvoid main(){}"
  status: SyntaxError
  stderr: '/tmp/tmpbnddjpmc.d(20): Error: undefined identifier `isupper`

    Failed: ["dmd", "-unittest", "-v", "-o-", "/tmp/tmpbnddjpmc.d", "-I/tmp"]

    '
  stdout: ''
  timestamp: 1660163028
- exit_code: 1
  program: "import std.math;\n/*\n\n    Given a string s, count the number of uppercase\
    \ vowels in even indices.\n    \n    For example:\n    >>> count_upper(\"aBCdEf\"\
    )\n    1L\n    >>> count_upper(\"abcdefg\")\n    0L\n    >>> count_upper(\"dBBE\"\
    )\n    0L\n    \n*/\nlong count_upper(string s) \n{\n    long count = 0;\n   \
    \ foreach(i, c; s)\n    {\n        if(i % 2 == 0 && isUpper(c))\n            count++;\n\
    \    }\n    return count;\n}\nunittest\n{\n    alias candidate = count_upper;\n\
    \n    assert(candidate(\"aBCdEf\") == 1L);\n    assert(candidate(\"abcdefg\")\
    \ == 0L);\n    assert(candidate(\"dBBE\") == 0L);\n    assert(candidate(\"B\"\
    ) == 0L);\n    assert(candidate(\"U\") == 1L);\n    assert(candidate(\"\") ==\
    \ 0L);\n    assert(candidate(\"EEEE\") == 2L);\n}\nvoid main(){}"
  status: SyntaxError
  stderr: '/tmp/tmpjziclffi.d(20): Error: undefined identifier `isUpper`

    Failed: ["dmd", "-unittest", "-v", "-o-", "/tmp/tmpjziclffi.d", "-I/tmp"]

    '
  stdout: ''
  timestamp: 1660163028
- exit_code: 1
  program: "import std.math;\n/*\n\n    Given a string s, count the number of uppercase\
    \ vowels in even indices.\n    \n    For example:\n    >>> count_upper(\"aBCdEf\"\
    )\n    1L\n    >>> count_upper(\"abcdefg\")\n    0L\n    >>> count_upper(\"dBBE\"\
    )\n    0L\n    \n*/\nlong count_upper(string s) \n{\n    long count = 0;\n   \
    \ foreach(i, c; s)\n    {\n        if(i % 2 == 0 && isupper(c))\n            count++;\n\
    \    }\n    return count;\n}\nunittest\n{\n    alias candidate = count_upper;\n\
    \n    assert(candidate(\"aBCdEf\") == 1L);\n    assert(candidate(\"abcdefg\")\
    \ == 0L);\n    assert(candidate(\"dBBE\") == 0L);\n    assert(candidate(\"B\"\
    ) == 0L);\n    assert(candidate(\"U\") == 1L);\n    assert(candidate(\"\") ==\
    \ 0L);\n    assert(candidate(\"EEEE\") == 2L);\n}\nvoid main(){}"
  status: SyntaxError
  stderr: '/tmp/tmpbnddjpmc.d(20): Error: undefined identifier `isupper`

    Failed: ["dmd", "-unittest", "-v", "-o-", "/tmp/tmpbnddjpmc.d", "-I/tmp"]

    '
  stdout: ''
  timestamp: 1660163028
- exit_code: 1
  program: "import std.math;\n/*\n\n    Given a string s, count the number of uppercase\
    \ vowels in even indices.\n    \n    For example:\n    >>> count_upper(\"aBCdEf\"\
    )\n    1L\n    >>> count_upper(\"abcdefg\")\n    0L\n    >>> count_upper(\"dBBE\"\
    )\n    0L\n    \n*/\nlong count_upper(string s) \n{\n    long count = 0;\n   \
    \ foreach(i, c; s)\n    {\n        if(i % 2 == 0 && c >= 'A' && c <= 'Z')\n  \
    \          count++;\n    }\n    return count;\n}\nunittest\n{\n    alias candidate\
    \ = count_upper;\n\n    assert(candidate(\"aBCdEf\") == 1L);\n    assert(candidate(\"\
    abcdefg\") == 0L);\n    assert(candidate(\"dBBE\") == 0L);\n    assert(candidate(\"\
    B\") == 0L);\n    assert(candidate(\"U\") == 1L);\n    assert(candidate(\"\")\
    \ == 0L);\n    assert(candidate(\"EEEE\") == 2L);\n}\nvoid main(){}"
  status: Exception
  stderr: 'core.exception.AssertError@/tmp/tmp2l5es36k.d(29): unittest failure

    ----------------

    ??:? _d_unittestp [0x427e3d]

    ??:? void tmp2l5es36k.__unittest_L25_C1() [0x427ab2]

    ??:? void tmp2l5es36k.__modtest() [0x427bc0]

    ??:? int core.runtime.runModuleUnitTests().__foreachbody2(object.ModuleInfo*)
    [0x42bb63]

    ??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)).__lambda2(immutable(object.ModuleInfo*))
    [0x42a9f6]

    ??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))).__foreachbody2(ref
    rt.sections_elf_shared.DSO) [0x42fb89]

    ??:? int rt.sections_elf_shared.DSO.opApply(scope int delegate(ref rt.sections_elf_shared.DSO))
    [0x430038]

    ??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*)))
    [0x42fb15]

    ??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)) [0x42a9cd]

    ??:? runModuleUnitTests [0x42b939]

    ??:? void rt.dmain2._d_run_main(int, char**, extern (C) int function(char[][])*).runAll()
    [0x42828c]

    ??:? void rt.dmain2._d_r'
  stdout: ''
  timestamp: 1660163029
- exit_code: 1
  program: "import std.math;\n/*\n\n    Given a string s, count the number of uppercase\
    \ vowels in even indices.\n    \n    For example:\n    >>> count_upper(\"aBCdEf\"\
    )\n    1L\n    >>> count_upper(\"abcdefg\")\n    0L\n    >>> count_upper(\"dBBE\"\
    )\n    0L\n    \n*/\nlong count_upper(string s) \n{\n    long count = 0;\n   \
    \ foreach(i, c; s)\n    {\n        if(i % 2 == 0 && c >= 'A' && c <= 'Z')\n  \
    \          count++;\n    }\n    return count;\n}\nunittest\n{\n    alias candidate\
    \ = count_upper;\n\n    assert(candidate(\"aBCdEf\") == 1L);\n    assert(candidate(\"\
    abcdefg\") == 0L);\n    assert(candidate(\"dBBE\") == 0L);\n    assert(candidate(\"\
    B\") == 0L);\n    assert(candidate(\"U\") == 1L);\n    assert(candidate(\"\")\
    \ == 0L);\n    assert(candidate(\"EEEE\") == 2L);\n}\nvoid main(){}"
  status: Exception
  stderr: 'core.exception.AssertError@/tmp/tmp2l5es36k.d(29): unittest failure

    ----------------

    ??:? _d_unittestp [0x427e3d]

    ??:? void tmp2l5es36k.__unittest_L25_C1() [0x427ab2]

    ??:? void tmp2l5es36k.__modtest() [0x427bc0]

    ??:? int core.runtime.runModuleUnitTests().__foreachbody2(object.ModuleInfo*)
    [0x42bb63]

    ??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)).__lambda2(immutable(object.ModuleInfo*))
    [0x42a9f6]

    ??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))).__foreachbody2(ref
    rt.sections_elf_shared.DSO) [0x42fb89]

    ??:? int rt.sections_elf_shared.DSO.opApply(scope int delegate(ref rt.sections_elf_shared.DSO))
    [0x430038]

    ??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*)))
    [0x42fb15]

    ??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)) [0x42a9cd]

    ??:? runModuleUnitTests [0x42b939]

    ??:? void rt.dmain2._d_run_main(int, char**, extern (C) int function(char[][])*).runAll()
    [0x42828c]

    ??:? void rt.dmain2._d_r'
  stdout: ''
  timestamp: 1660163029
- exit_code: 1
  program: "import std.math;\n/*\n\n    Given a string s, count the number of uppercase\
    \ vowels in even indices.\n    \n    For example:\n    >>> count_upper(\"aBCdEf\"\
    )\n    1L\n    >>> count_upper(\"abcdefg\")\n    0L\n    >>> count_upper(\"dBBE\"\
    )\n    0L\n    \n*/\nlong count_upper(string s) \n{\n    long count = 0;\n   \
    \ foreach(i, c; s)\n    {\n        if(i % 2 == 0 && isupper(c))\n            count++;\n\
    \    }\n    return count;\n}\nunittest\n{\n    alias candidate = count_upper;\n\
    \n    assert(candidate(\"aBCdEf\") == 1L);\n    assert(candidate(\"abcdefg\")\
    \ == 0L);\n    assert(candidate(\"dBBE\") == 0L);\n    assert(candidate(\"B\"\
    ) == 0L);\n    assert(candidate(\"U\") == 1L);\n    assert(candidate(\"\") ==\
    \ 0L);\n    assert(candidate(\"EEEE\") == 2L);\n}\nvoid main(){}"
  status: SyntaxError
  stderr: '/tmp/tmpbnddjpmc.d(20): Error: undefined identifier `isupper`

    Failed: ["dmd", "-unittest", "-v", "-o-", "/tmp/tmpbnddjpmc.d", "-I/tmp"]

    '
  stdout: ''
  timestamp: 1660163028
- exit_code: 1
  program: "import std.math;\n/*\n\n    Given a string s, count the number of uppercase\
    \ vowels in even indices.\n    \n    For example:\n    >>> count_upper(\"aBCdEf\"\
    )\n    1L\n    >>> count_upper(\"abcdefg\")\n    0L\n    >>> count_upper(\"dBBE\"\
    )\n    0L\n    \n*/\nlong count_upper(string s) \n{\n    long count = 0;\n   \
    \ foreach(i, c; s)\n    {\n        if(i % 2 == 0 && isupper(c))\n            count++;\n\
    \    }\n    return count;\n}\nunittest\n{\n    alias candidate = count_upper;\n\
    \n    assert(candidate(\"aBCdEf\") == 1L);\n    assert(candidate(\"abcdefg\")\
    \ == 0L);\n    assert(candidate(\"dBBE\") == 0L);\n    assert(candidate(\"B\"\
    ) == 0L);\n    assert(candidate(\"U\") == 1L);\n    assert(candidate(\"\") ==\
    \ 0L);\n    assert(candidate(\"EEEE\") == 2L);\n}\nvoid main(){}"
  status: SyntaxError
  stderr: '/tmp/tmpbnddjpmc.d(20): Error: undefined identifier `isupper`

    Failed: ["dmd", "-unittest", "-v", "-o-", "/tmp/tmpbnddjpmc.d", "-I/tmp"]

    '
  stdout: ''
  timestamp: 1660163028
- exit_code: 1
  program: "import std.math;\n/*\n\n    Given a string s, count the number of uppercase\
    \ vowels in even indices.\n    \n    For example:\n    >>> count_upper(\"aBCdEf\"\
    )\n    1L\n    >>> count_upper(\"abcdefg\")\n    0L\n    >>> count_upper(\"dBBE\"\
    )\n    0L\n    \n*/\nlong count_upper(string s) \n{\n    long count = 0;\n   \
    \ foreach(i, c; s)\n    {\n        if(i % 2 == 0 && isUpper(c))\n            count++;\n\
    \    }\n    return count;\n}\nunittest\n{\n    alias candidate = count_upper;\n\
    \n    assert(candidate(\"aBCdEf\") == 1L);\n    assert(candidate(\"abcdefg\")\
    \ == 0L);\n    assert(candidate(\"dBBE\") == 0L);\n    assert(candidate(\"B\"\
    ) == 0L);\n    assert(candidate(\"U\") == 1L);\n    assert(candidate(\"\") ==\
    \ 0L);\n    assert(candidate(\"EEEE\") == 2L);\n}\nvoid main(){}"
  status: SyntaxError
  stderr: '/tmp/tmpjziclffi.d(20): Error: undefined identifier `isUpper`

    Failed: ["dmd", "-unittest", "-v", "-o-", "/tmp/tmpjziclffi.d", "-I/tmp"]

    '
  stdout: ''
  timestamp: 1660163028
- exit_code: 1
  program: "import std.math;\n/*\n\n    Given a string s, count the number of uppercase\
    \ vowels in even indices.\n    \n    For example:\n    >>> count_upper(\"aBCdEf\"\
    )\n    1L\n    >>> count_upper(\"abcdefg\")\n    0L\n    >>> count_upper(\"dBBE\"\
    )\n    0L\n    \n*/\nlong count_upper(string s) \n{\n    long count = 0;\n   \
    \ foreach(i, c; s) \n    {\n        if(i % 2 == 0 && c >= 'A' && c <= 'Z')\n \
    \           count++;\n    }\n    return count;\n}\nunittest\n{\n    alias candidate\
    \ = count_upper;\n\n    assert(candidate(\"aBCdEf\") == 1L);\n    assert(candidate(\"\
    abcdefg\") == 0L);\n    assert(candidate(\"dBBE\") == 0L);\n    assert(candidate(\"\
    B\") == 0L);\n    assert(candidate(\"U\") == 1L);\n    assert(candidate(\"\")\
    \ == 0L);\n    assert(candidate(\"EEEE\") == 2L);\n}\nvoid main(){}"
  status: Exception
  stderr: 'core.exception.AssertError@/tmp/tmplqtfyam0.d(29): unittest failure

    ----------------

    ??:? _d_unittestp [0x427e3d]

    ??:? void tmplqtfyam0.__unittest_L25_C1() [0x427ab2]

    ??:? void tmplqtfyam0.__modtest() [0x427bc0]

    ??:? int core.runtime.runModuleUnitTests().__foreachbody2(object.ModuleInfo*)
    [0x42bb63]

    ??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)).__lambda2(immutable(object.ModuleInfo*))
    [0x42a9f6]

    ??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))).__foreachbody2(ref
    rt.sections_elf_shared.DSO) [0x42fb89]

    ??:? int rt.sections_elf_shared.DSO.opApply(scope int delegate(ref rt.sections_elf_shared.DSO))
    [0x430038]

    ??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*)))
    [0x42fb15]

    ??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)) [0x42a9cd]

    ??:? runModuleUnitTests [0x42b939]

    ??:? void rt.dmain2._d_run_main(int, char**, extern (C) int function(char[][])*).runAll()
    [0x42828c]

    ??:? void rt.dmain2._d_r'
  stdout: ''
  timestamp: 1660163029
- exit_code: 1
  program: "import std.math;\n/*\n\n    Given a string s, count the number of uppercase\
    \ vowels in even indices.\n    \n    For example:\n    >>> count_upper(\"aBCdEf\"\
    )\n    1L\n    >>> count_upper(\"abcdefg\")\n    0L\n    >>> count_upper(\"dBBE\"\
    )\n    0L\n    \n*/\nlong count_upper(string s) \n{\n    long count = 0;\n   \
    \ foreach(i, c; s)\n    {\n        if(i % 2 == 0 && c >= 'A' && c <= 'Z')\n  \
    \          count++;\n    }\n    return count;\n}\nunittest\n{\n    alias candidate\
    \ = count_upper;\n\n    assert(candidate(\"aBCdEf\") == 1L);\n    assert(candidate(\"\
    abcdefg\") == 0L);\n    assert(candidate(\"dBBE\") == 0L);\n    assert(candidate(\"\
    B\") == 0L);\n    assert(candidate(\"U\") == 1L);\n    assert(candidate(\"\")\
    \ == 0L);\n    assert(candidate(\"EEEE\") == 2L);\n}\nvoid main(){}"
  status: Exception
  stderr: 'core.exception.AssertError@/tmp/tmp2l5es36k.d(29): unittest failure

    ----------------

    ??:? _d_unittestp [0x427e3d]

    ??:? void tmp2l5es36k.__unittest_L25_C1() [0x427ab2]

    ??:? void tmp2l5es36k.__modtest() [0x427bc0]

    ??:? int core.runtime.runModuleUnitTests().__foreachbody2(object.ModuleInfo*)
    [0x42bb63]

    ??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)).__lambda2(immutable(object.ModuleInfo*))
    [0x42a9f6]

    ??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))).__foreachbody2(ref
    rt.sections_elf_shared.DSO) [0x42fb89]

    ??:? int rt.sections_elf_shared.DSO.opApply(scope int delegate(ref rt.sections_elf_shared.DSO))
    [0x430038]

    ??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*)))
    [0x42fb15]

    ??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)) [0x42a9cd]

    ??:? runModuleUnitTests [0x42b939]

    ??:? void rt.dmain2._d_run_main(int, char**, extern (C) int function(char[][])*).runAll()
    [0x42828c]

    ??:? void rt.dmain2._d_r'
  stdout: ''
  timestamp: 1660163029
- exit_code: 1
  program: "import std.math;\n/*\n\n    Given a string s, count the number of uppercase\
    \ vowels in even indices.\n    \n    For example:\n    >>> count_upper(\"aBCdEf\"\
    )\n    1L\n    >>> count_upper(\"abcdefg\")\n    0L\n    >>> count_upper(\"dBBE\"\
    )\n    0L\n    \n*/\nlong count_upper(string s) \n{\n    long count = 0;\n   \
    \ foreach(i, c; s)\n    {\n        if(i % 2 == 0 && isUpper(c))\n            count++;\n\
    \    }\n    return count;\n}\nunittest\n{\n    alias candidate = count_upper;\n\
    \n    assert(candidate(\"aBCdEf\") == 1L);\n    assert(candidate(\"abcdefg\")\
    \ == 0L);\n    assert(candidate(\"dBBE\") == 0L);\n    assert(candidate(\"B\"\
    ) == 0L);\n    assert(candidate(\"U\") == 1L);\n    assert(candidate(\"\") ==\
    \ 0L);\n    assert(candidate(\"EEEE\") == 2L);\n}\nvoid main(){}"
  status: SyntaxError
  stderr: '/tmp/tmpjziclffi.d(20): Error: undefined identifier `isUpper`

    Failed: ["dmd", "-unittest", "-v", "-o-", "/tmp/tmpjziclffi.d", "-I/tmp"]

    '
  stdout: ''
  timestamp: 1660163028
- exit_code: 1
  program: "import std.math;\n/*\n\n    Given a string s, count the number of uppercase\
    \ vowels in even indices.\n    \n    For example:\n    >>> count_upper(\"aBCdEf\"\
    )\n    1L\n    >>> count_upper(\"abcdefg\")\n    0L\n    >>> count_upper(\"dBBE\"\
    )\n    0L\n    \n*/\nlong count_upper(string s) \n{\n    long count = 0;\n   \
    \ foreach(i, c; s)\n    {\n        if(i % 2 == 0 && c >= 'A' && c <= 'Z')\n  \
    \          count++;\n    }\n    return count;\n}\nunittest\n{\n    alias candidate\
    \ = count_upper;\n\n    assert(candidate(\"aBCdEf\") == 1L);\n    assert(candidate(\"\
    abcdefg\") == 0L);\n    assert(candidate(\"dBBE\") == 0L);\n    assert(candidate(\"\
    B\") == 0L);\n    assert(candidate(\"U\") == 1L);\n    assert(candidate(\"\")\
    \ == 0L);\n    assert(candidate(\"EEEE\") == 2L);\n}\nvoid main(){}"
  status: Exception
  stderr: 'core.exception.AssertError@/tmp/tmp2l5es36k.d(29): unittest failure

    ----------------

    ??:? _d_unittestp [0x427e3d]

    ??:? void tmp2l5es36k.__unittest_L25_C1() [0x427ab2]

    ??:? void tmp2l5es36k.__modtest() [0x427bc0]

    ??:? int core.runtime.runModuleUnitTests().__foreachbody2(object.ModuleInfo*)
    [0x42bb63]

    ??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)).__lambda2(immutable(object.ModuleInfo*))
    [0x42a9f6]

    ??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))).__foreachbody2(ref
    rt.sections_elf_shared.DSO) [0x42fb89]

    ??:? int rt.sections_elf_shared.DSO.opApply(scope int delegate(ref rt.sections_elf_shared.DSO))
    [0x430038]

    ??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*)))
    [0x42fb15]

    ??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)) [0x42a9cd]

    ??:? runModuleUnitTests [0x42b939]

    ??:? void rt.dmain2._d_run_main(int, char**, extern (C) int function(char[][])*).runAll()
    [0x42828c]

    ??:? void rt.dmain2._d_r'
  stdout: ''
  timestamp: 1660163029
- exit_code: 1
  program: "import std.math;\n/*\n\n    Given a string s, count the number of uppercase\
    \ vowels in even indices.\n    \n    For example:\n    >>> count_upper(\"aBCdEf\"\
    )\n    1L\n    >>> count_upper(\"abcdefg\")\n    0L\n    >>> count_upper(\"dBBE\"\
    )\n    0L\n    \n*/\nlong count_upper(string s) \n{\n    long count = 0;\n   \
    \ foreach(i, c; s)\n    {\n        if(i % 2 == 0 && c == 'A' || c == 'E' || c\
    \ == 'I' || c == 'O' || c == 'U')\n        {\n            count++;\n        }\n\
    \    }\n    return count;\n}\nunittest\n{\n    alias candidate = count_upper;\n\
    \n    assert(candidate(\"aBCdEf\") == 1L);\n    assert(candidate(\"abcdefg\")\
    \ == 0L);\n    assert(candidate(\"dBBE\") == 0L);\n    assert(candidate(\"B\"\
    ) == 0L);\n    assert(candidate(\"U\") == 1L);\n    assert(candidate(\"\") ==\
    \ 0L);\n    assert(candidate(\"EEEE\") == 2L);\n}\nvoid main(){}"
  status: Exception
  stderr: 'core.exception.AssertError@/tmp/tmpq101czay.d(33): unittest failure

    ----------------

    ??:? _d_unittestp [0x427e55]

    ??:? void tmpq101czay.__unittest_L27_C1() [0x427b1a]

    ??:? void tmpq101czay.__modtest() [0x427bd4]

    ??:? int core.runtime.runModuleUnitTests().__foreachbody2(object.ModuleInfo*)
    [0x42bb7b]

    ??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)).__lambda2(immutable(object.ModuleInfo*))
    [0x42aa0e]

    ??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))).__foreachbody2(ref
    rt.sections_elf_shared.DSO) [0x42fba1]

    ??:? int rt.sections_elf_shared.DSO.opApply(scope int delegate(ref rt.sections_elf_shared.DSO))
    [0x430050]

    ??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*)))
    [0x42fb2d]

    ??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)) [0x42a9e5]

    ??:? runModuleUnitTests [0x42b951]

    ??:? void rt.dmain2._d_run_main(int, char**, extern (C) int function(char[][])*).runAll()
    [0x4282a4]

    ??:? void rt.dmain2._d_r'
  stdout: ''
  timestamp: 1660163029
- exit_code: 1
  program: "import std.math;\n/*\n\n    Given a string s, count the number of uppercase\
    \ vowels in even indices.\n    \n    For example:\n    >>> count_upper(\"aBCdEf\"\
    )\n    1L\n    >>> count_upper(\"abcdefg\")\n    0L\n    >>> count_upper(\"dBBE\"\
    )\n    0L\n    \n*/\nlong count_upper(string s) \n{\n    long count = 0;\n   \
    \ foreach(i, c; s)\n    {\n        if(i % 2 == 0 && c in ['A', 'E', 'I', 'O',\
    \ 'U'])\n            count++;\n    }\n    return count;\n}\nunittest\n{\n    alias\
    \ candidate = count_upper;\n\n    assert(candidate(\"aBCdEf\") == 1L);\n    assert(candidate(\"\
    abcdefg\") == 0L);\n    assert(candidate(\"dBBE\") == 0L);\n    assert(candidate(\"\
    B\") == 0L);\n    assert(candidate(\"U\") == 1L);\n    assert(candidate(\"\")\
    \ == 0L);\n    assert(candidate(\"EEEE\") == 2L);\n}\nvoid main(){}"
  status: SyntaxError
  stderr: '/tmp/tmpkk1wsjki.d(20): Error: incompatible types for `(c) in ([''A'',
    ''E'', ''I'', ''O'', ''U''])`: `immutable(char)` and `char[]`

    Failed: ["dmd", "-unittest", "-v", "-o-", "/tmp/tmpkk1wsjki.d", "-I/tmp"]

    '
  stdout: ''
  timestamp: 1660163028
- exit_code: 1
  program: "import std.math;\n/*\n\n    Given a string s, count the number of uppercase\
    \ vowels in even indices.\n    \n    For example:\n    >>> count_upper(\"aBCdEf\"\
    )\n    1L\n    >>> count_upper(\"abcdefg\")\n    0L\n    >>> count_upper(\"dBBE\"\
    )\n    0L\n    \n*/\nlong count_upper(string s) \n{\n    long count = 0;\n   \
    \ foreach(i, c; s)\n    {\n        if(i % 2 == 0 && isupper(c))\n            count++;\n\
    \    }\n    return count;\n}\nunittest\n{\n    alias candidate = count_upper;\n\
    \n    assert(candidate(\"aBCdEf\") == 1L);\n    assert(candidate(\"abcdefg\")\
    \ == 0L);\n    assert(candidate(\"dBBE\") == 0L);\n    assert(candidate(\"B\"\
    ) == 0L);\n    assert(candidate(\"U\") == 1L);\n    assert(candidate(\"\") ==\
    \ 0L);\n    assert(candidate(\"EEEE\") == 2L);\n}\nvoid main(){}"
  status: SyntaxError
  stderr: '/tmp/tmpbnddjpmc.d(20): Error: undefined identifier `isupper`

    Failed: ["dmd", "-unittest", "-v", "-o-", "/tmp/tmpbnddjpmc.d", "-I/tmp"]

    '
  stdout: ''
  timestamp: 1660163028
- exit_code: 1
  program: "import std.math;\n/*\n\n    Given a string s, count the number of uppercase\
    \ vowels in even indices.\n    \n    For example:\n    >>> count_upper(\"aBCdEf\"\
    )\n    1L\n    >>> count_upper(\"abcdefg\")\n    0L\n    >>> count_upper(\"dBBE\"\
    )\n    0L\n    \n*/\nlong count_upper(string s) \n{\n    long count = 0;\n   \
    \ foreach(i, c; s) \n    {\n        if(i % 2 == 0 && isupper(c)) \n        {\n\
    \            count++;\n        }\n    }\n    return count;\n}\nunittest\n{\n \
    \   alias candidate = count_upper;\n\n    assert(candidate(\"aBCdEf\") == 1L);\n\
    \    assert(candidate(\"abcdefg\") == 0L);\n    assert(candidate(\"dBBE\") ==\
    \ 0L);\n    assert(candidate(\"B\") == 0L);\n    assert(candidate(\"U\") == 1L);\n\
    \    assert(candidate(\"\") == 0L);\n    assert(candidate(\"EEEE\") == 2L);\n\
    }\nvoid main(){}"
  status: SyntaxError
  stderr: '/tmp/tmpsa4c82n_.d(20): Error: undefined identifier `isupper`

    Failed: ["dmd", "-unittest", "-v", "-o-", "/tmp/tmpsa4c82n_.d", "-I/tmp"]

    '
  stdout: ''
  timestamp: 1660163028
- exit_code: 1
  program: "import std.math;\n/*\n\n    Given a string s, count the number of uppercase\
    \ vowels in even indices.\n    \n    For example:\n    >>> count_upper(\"aBCdEf\"\
    )\n    1L\n    >>> count_upper(\"abcdefg\")\n    0L\n    >>> count_upper(\"dBBE\"\
    )\n    0L\n    \n*/\nlong count_upper(string s) \n{\n    long count = 0;\n   \
    \ foreach(i, c; s)\n    {\n        if(i % 2 == 0 && c == toupper(c))\n       \
    \ {\n            count++;\n        }\n    }\n    return count;\n}\nunittest\n\
    {\n    alias candidate = count_upper;\n\n    assert(candidate(\"aBCdEf\") == 1L);\n\
    \    assert(candidate(\"abcdefg\") == 0L);\n    assert(candidate(\"dBBE\") ==\
    \ 0L);\n    assert(candidate(\"B\") == 0L);\n    assert(candidate(\"U\") == 1L);\n\
    \    assert(candidate(\"\") == 0L);\n    assert(candidate(\"EEEE\") == 2L);\n\
    }\nvoid main(){}"
  status: SyntaxError
  stderr: '/tmp/tmpbwih8q81.d(20): Error: undefined identifier `toupper`

    Failed: ["dmd", "-unittest", "-v", "-o-", "/tmp/tmpbwih8q81.d", "-I/tmp"]

    '
  stdout: ''
  timestamp: 1660163028
- exit_code: 1
  program: "import std.math;\n/*\n\n    Given a string s, count the number of uppercase\
    \ vowels in even indices.\n    \n    For example:\n    >>> count_upper(\"aBCdEf\"\
    )\n    1L\n    >>> count_upper(\"abcdefg\")\n    0L\n    >>> count_upper(\"dBBE\"\
    )\n    0L\n    \n*/\nlong count_upper(string s) \n{\n    long count = 0;\n   \
    \ foreach(i, c; s)\n    {\n        if(i % 2 == 0 && isupper(c))\n            count++;\n\
    \    }\n    return count;\n}\nunittest\n{\n    alias candidate = count_upper;\n\
    \n    assert(candidate(\"aBCdEf\") == 1L);\n    assert(candidate(\"abcdefg\")\
    \ == 0L);\n    assert(candidate(\"dBBE\") == 0L);\n    assert(candidate(\"B\"\
    ) == 0L);\n    assert(candidate(\"U\") == 1L);\n    assert(candidate(\"\") ==\
    \ 0L);\n    assert(candidate(\"EEEE\") == 2L);\n}\nvoid main(){}"
  status: SyntaxError
  stderr: '/tmp/tmpbnddjpmc.d(20): Error: undefined identifier `isupper`

    Failed: ["dmd", "-unittest", "-v", "-o-", "/tmp/tmpbnddjpmc.d", "-I/tmp"]

    '
  stdout: ''
  timestamp: 1660163028
- exit_code: 1
  program: "import std.math;\n/*\n\n    Given a string s, count the number of uppercase\
    \ vowels in even indices.\n    \n    For example:\n    >>> count_upper(\"aBCdEf\"\
    )\n    1L\n    >>> count_upper(\"abcdefg\")\n    0L\n    >>> count_upper(\"dBBE\"\
    )\n    0L\n    \n*/\nlong count_upper(string s) \n{\n    long count = 0;\n   \
    \ foreach(i, c; s)\n    {\n        if(i % 2 == 0 && isupper(c))\n            count++;\n\
    \    }\n    return count;\n}\nunittest\n{\n    alias candidate = count_upper;\n\
    \n    assert(candidate(\"aBCdEf\") == 1L);\n    assert(candidate(\"abcdefg\")\
    \ == 0L);\n    assert(candidate(\"dBBE\") == 0L);\n    assert(candidate(\"B\"\
    ) == 0L);\n    assert(candidate(\"U\") == 1L);\n    assert(candidate(\"\") ==\
    \ 0L);\n    assert(candidate(\"EEEE\") == 2L);\n}\nvoid main(){}"
  status: SyntaxError
  stderr: '/tmp/tmpbnddjpmc.d(20): Error: undefined identifier `isupper`

    Failed: ["dmd", "-unittest", "-v", "-o-", "/tmp/tmpbnddjpmc.d", "-I/tmp"]

    '
  stdout: ''
  timestamp: 1660163028
- exit_code: 1
  program: "import std.math;\n/*\n\n    Given a string s, count the number of uppercase\
    \ vowels in even indices.\n    \n    For example:\n    >>> count_upper(\"aBCdEf\"\
    )\n    1L\n    >>> count_upper(\"abcdefg\")\n    0L\n    >>> count_upper(\"dBBE\"\
    )\n    0L\n    \n*/\nlong count_upper(string s) \n{\n    long count = 0;\n   \
    \ foreach(i, c; s)\n    {\n        if(i % 2 == 0 && isUpper(c))\n            count++;\n\
    \    }\n    return count;\n}\nunittest\n{\n    alias candidate = count_upper;\n\
    \n    assert(candidate(\"aBCdEf\") == 1L);\n    assert(candidate(\"abcdefg\")\
    \ == 0L);\n    assert(candidate(\"dBBE\") == 0L);\n    assert(candidate(\"B\"\
    ) == 0L);\n    assert(candidate(\"U\") == 1L);\n    assert(candidate(\"\") ==\
    \ 0L);\n    assert(candidate(\"EEEE\") == 2L);\n}\nvoid main(){}"
  status: SyntaxError
  stderr: '/tmp/tmpjziclffi.d(20): Error: undefined identifier `isUpper`

    Failed: ["dmd", "-unittest", "-v", "-o-", "/tmp/tmpjziclffi.d", "-I/tmp"]

    '
  stdout: ''
  timestamp: 1660163028
- exit_code: 1
  program: "import std.math;\n/*\n\n    Given a string s, count the number of uppercase\
    \ vowels in even indices.\n    \n    For example:\n    >>> count_upper(\"aBCdEf\"\
    )\n    1L\n    >>> count_upper(\"abcdefg\")\n    0L\n    >>> count_upper(\"dBBE\"\
    )\n    0L\n    \n*/\nlong count_upper(string s) \n{\n    long count = 0;\n   \
    \ foreach(i, c; s)\n    {\n        if(i % 2 == 0 && c in ['A', 'E', 'I', 'O',\
    \ 'U'])\n            count++;\n    }\n    return count;\n}\nunittest\n{\n    alias\
    \ candidate = count_upper;\n\n    assert(candidate(\"aBCdEf\") == 1L);\n    assert(candidate(\"\
    abcdefg\") == 0L);\n    assert(candidate(\"dBBE\") == 0L);\n    assert(candidate(\"\
    B\") == 0L);\n    assert(candidate(\"U\") == 1L);\n    assert(candidate(\"\")\
    \ == 0L);\n    assert(candidate(\"EEEE\") == 2L);\n}\nvoid main(){}"
  status: SyntaxError
  stderr: '/tmp/tmpkk1wsjki.d(20): Error: incompatible types for `(c) in ([''A'',
    ''E'', ''I'', ''O'', ''U''])`: `immutable(char)` and `char[]`

    Failed: ["dmd", "-unittest", "-v", "-o-", "/tmp/tmpkk1wsjki.d", "-I/tmp"]

    '
  stdout: ''
  timestamp: 1660163028
- exit_code: 1
  program: "import std.math;\n/*\n\n    Given a string s, count the number of uppercase\
    \ vowels in even indices.\n    \n    For example:\n    >>> count_upper(\"aBCdEf\"\
    )\n    1L\n    >>> count_upper(\"abcdefg\")\n    0L\n    >>> count_upper(\"dBBE\"\
    )\n    0L\n    \n*/\nlong count_upper(string s) \n{\n    long count = 0;\n   \
    \ foreach(i, c; s)\n    {\n        if(i % 2 == 0 && isUpper(c))\n            count++;\n\
    \    }\n    return count;\n}\nunittest\n{\n    alias candidate = count_upper;\n\
    \n    assert(candidate(\"aBCdEf\") == 1L);\n    assert(candidate(\"abcdefg\")\
    \ == 0L);\n    assert(candidate(\"dBBE\") == 0L);\n    assert(candidate(\"B\"\
    ) == 0L);\n    assert(candidate(\"U\") == 1L);\n    assert(candidate(\"\") ==\
    \ 0L);\n    assert(candidate(\"EEEE\") == 2L);\n}\nvoid main(){}"
  status: SyntaxError
  stderr: '/tmp/tmpjziclffi.d(20): Error: undefined identifier `isUpper`

    Failed: ["dmd", "-unittest", "-v", "-o-", "/tmp/tmpjziclffi.d", "-I/tmp"]

    '
  stdout: ''
  timestamp: 1660163028
- exit_code: 1
  program: "import std.math;\n/*\n\n    Given a string s, count the number of uppercase\
    \ vowels in even indices.\n    \n    For example:\n    >>> count_upper(\"aBCdEf\"\
    )\n    1L\n    >>> count_upper(\"abcdefg\")\n    0L\n    >>> count_upper(\"dBBE\"\
    )\n    0L\n    \n*/\nlong count_upper(string s) \n{\n    long count = 0;\n   \
    \ foreach(i, c; s) \n    {\n        if (i % 2 == 0 && c in ['A', 'E', 'I', 'O',\
    \ 'U']) \n        {\n            count++;\n        }\n    }\n    return count;\n\
    }\nunittest\n{\n    alias candidate = count_upper;\n\n    assert(candidate(\"\
    aBCdEf\") == 1L);\n    assert(candidate(\"abcdefg\") == 0L);\n    assert(candidate(\"\
    dBBE\") == 0L);\n    assert(candidate(\"B\") == 0L);\n    assert(candidate(\"\
    U\") == 1L);\n    assert(candidate(\"\") == 0L);\n    assert(candidate(\"EEEE\"\
    ) == 2L);\n}\nvoid main(){}"
  status: SyntaxError
  stderr: '/tmp/tmpherwbhc3.d(20): Error: incompatible types for `(c) in ([''A'',
    ''E'', ''I'', ''O'', ''U''])`: `immutable(char)` and `char[]`

    Failed: ["dmd", "-unittest", "-v", "-o-", "/tmp/tmpherwbhc3.d", "-I/tmp"]

    '
  stdout: ''
  timestamp: 1660163028
- exit_code: 1
  program: "import std.math;\n/*\n\n    Given a string s, count the number of uppercase\
    \ vowels in even indices.\n    \n    For example:\n    >>> count_upper(\"aBCdEf\"\
    )\n    1L\n    >>> count_upper(\"abcdefg\")\n    0L\n    >>> count_upper(\"dBBE\"\
    )\n    0L\n    \n*/\nlong count_upper(string s) \n{\n    long count = 0;\n   \
    \ foreach(i, c; s)\n    {\n        if(i % 2 == 0 && c >= 'A' && c <= 'Z')\n  \
    \          count++;\n    }\n    return count;\n}\nunittest\n{\n    alias candidate\
    \ = count_upper;\n\n    assert(candidate(\"aBCdEf\") == 1L);\n    assert(candidate(\"\
    abcdefg\") == 0L);\n    assert(candidate(\"dBBE\") == 0L);\n    assert(candidate(\"\
    B\") == 0L);\n    assert(candidate(\"U\") == 1L);\n    assert(candidate(\"\")\
    \ == 0L);\n    assert(candidate(\"EEEE\") == 2L);\n}\nvoid main(){}"
  status: Exception
  stderr: 'core.exception.AssertError@/tmp/tmp2l5es36k.d(29): unittest failure

    ----------------

    ??:? _d_unittestp [0x427e3d]

    ??:? void tmp2l5es36k.__unittest_L25_C1() [0x427ab2]

    ??:? void tmp2l5es36k.__modtest() [0x427bc0]

    ??:? int core.runtime.runModuleUnitTests().__foreachbody2(object.ModuleInfo*)
    [0x42bb63]

    ??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)).__lambda2(immutable(object.ModuleInfo*))
    [0x42a9f6]

    ??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))).__foreachbody2(ref
    rt.sections_elf_shared.DSO) [0x42fb89]

    ??:? int rt.sections_elf_shared.DSO.opApply(scope int delegate(ref rt.sections_elf_shared.DSO))
    [0x430038]

    ??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*)))
    [0x42fb15]

    ??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)) [0x42a9cd]

    ??:? runModuleUnitTests [0x42b939]

    ??:? void rt.dmain2._d_run_main(int, char**, extern (C) int function(char[][])*).runAll()
    [0x42828c]

    ??:? void rt.dmain2._d_r'
  stdout: ''
  timestamp: 1660163029
- exit_code: 1
  program: "import std.math;\n/*\n\n    Given a string s, count the number of uppercase\
    \ vowels in even indices.\n    \n    For example:\n    >>> count_upper(\"aBCdEf\"\
    )\n    1L\n    >>> count_upper(\"abcdefg\")\n    0L\n    >>> count_upper(\"dBBE\"\
    )\n    0L\n    \n*/\nlong count_upper(string s) \n{\n    long count = 0;\n   \
    \ foreach(i, c; s)\n    {\n        if(i % 2 == 0 && isupper(c))\n            count++;\n\
    \    }\n    return count;\n}\nunittest\n{\n    alias candidate = count_upper;\n\
    \n    assert(candidate(\"aBCdEf\") == 1L);\n    assert(candidate(\"abcdefg\")\
    \ == 0L);\n    assert(candidate(\"dBBE\") == 0L);\n    assert(candidate(\"B\"\
    ) == 0L);\n    assert(candidate(\"U\") == 1L);\n    assert(candidate(\"\") ==\
    \ 0L);\n    assert(candidate(\"EEEE\") == 2L);\n}\nvoid main(){}"
  status: SyntaxError
  stderr: '/tmp/tmpbnddjpmc.d(20): Error: undefined identifier `isupper`

    Failed: ["dmd", "-unittest", "-v", "-o-", "/tmp/tmpbnddjpmc.d", "-I/tmp"]

    '
  stdout: ''
  timestamp: 1660163028
- exit_code: 1
  program: "import std.math;\n/*\n\n    Given a string s, count the number of uppercase\
    \ vowels in even indices.\n    \n    For example:\n    >>> count_upper(\"aBCdEf\"\
    )\n    1L\n    >>> count_upper(\"abcdefg\")\n    0L\n    >>> count_upper(\"dBBE\"\
    )\n    0L\n    \n*/\nlong count_upper(string s) \n{\n    long count = 0;\n   \
    \ foreach(i, c; s)\n    {\n        if(i % 2 == 0 && isupper(c))\n            count++;\n\
    \    }\n    return count;\n}\nunittest\n{\n    alias candidate = count_upper;\n\
    \n    assert(candidate(\"aBCdEf\") == 1L);\n    assert(candidate(\"abcdefg\")\
    \ == 0L);\n    assert(candidate(\"dBBE\") == 0L);\n    assert(candidate(\"B\"\
    ) == 0L);\n    assert(candidate(\"U\") == 1L);\n    assert(candidate(\"\") ==\
    \ 0L);\n    assert(candidate(\"EEEE\") == 2L);\n}\nvoid main(){}"
  status: SyntaxError
  stderr: '/tmp/tmpbnddjpmc.d(20): Error: undefined identifier `isupper`

    Failed: ["dmd", "-unittest", "-v", "-o-", "/tmp/tmpbnddjpmc.d", "-I/tmp"]

    '
  stdout: ''
  timestamp: 1660163028
- exit_code: 1
  program: "import std.math;\n/*\n\n    Given a string s, count the number of uppercase\
    \ vowels in even indices.\n    \n    For example:\n    >>> count_upper(\"aBCdEf\"\
    )\n    1L\n    >>> count_upper(\"abcdefg\")\n    0L\n    >>> count_upper(\"dBBE\"\
    )\n    0L\n    \n*/\nlong count_upper(string s) \n{\n    long count = 0;\n   \
    \ foreach(i, c; s)\n    {\n        if(i % 2 == 0 && c == toupper(c))\n       \
    \ {\n            count++;\n        }\n    }\n    return count;\n}\nunittest\n\
    {\n    alias candidate = count_upper;\n\n    assert(candidate(\"aBCdEf\") == 1L);\n\
    \    assert(candidate(\"abcdefg\") == 0L);\n    assert(candidate(\"dBBE\") ==\
    \ 0L);\n    assert(candidate(\"B\") == 0L);\n    assert(candidate(\"U\") == 1L);\n\
    \    assert(candidate(\"\") == 0L);\n    assert(candidate(\"EEEE\") == 2L);\n\
    }\nvoid main(){}"
  status: SyntaxError
  stderr: '/tmp/tmpbwih8q81.d(20): Error: undefined identifier `toupper`

    Failed: ["dmd", "-unittest", "-v", "-o-", "/tmp/tmpbwih8q81.d", "-I/tmp"]

    '
  stdout: ''
  timestamp: 1660163028
- exit_code: 1
  program: "import std.math;\n/*\n\n    Given a string s, count the number of uppercase\
    \ vowels in even indices.\n    \n    For example:\n    >>> count_upper(\"aBCdEf\"\
    )\n    1L\n    >>> count_upper(\"abcdefg\")\n    0L\n    >>> count_upper(\"dBBE\"\
    )\n    0L\n    \n*/\nlong count_upper(string s) \n{\n    long count = 0;\n   \
    \ foreach(i, c; s)\n    {\n        if(isEven(i) && isUpper(c))\n        {\n  \
    \          count++;\n        }\n    }\n    return count;\n}\nunittest\n{\n   \
    \ alias candidate = count_upper;\n\n    assert(candidate(\"aBCdEf\") == 1L);\n\
    \    assert(candidate(\"abcdefg\") == 0L);\n    assert(candidate(\"dBBE\") ==\
    \ 0L);\n    assert(candidate(\"B\") == 0L);\n    assert(candidate(\"U\") == 1L);\n\
    \    assert(candidate(\"\") == 0L);\n    assert(candidate(\"EEEE\") == 2L);\n\
    }\nvoid main(){}"
  status: SyntaxError
  stderr: '/tmp/tmpkxnnctd1.d(20): Error: undefined identifier `isEven`

    /tmp/tmpkxnnctd1.d(20): Error: undefined identifier `isUpper`

    Failed: ["dmd", "-unittest", "-v", "-o-", "/tmp/tmpkxnnctd1.d", "-I/tmp"]

    '
  stdout: ''
  timestamp: 1660163028
- exit_code: 1
  program: "import std.math;\n/*\n\n    Given a string s, count the number of uppercase\
    \ vowels in even indices.\n    \n    For example:\n    >>> count_upper(\"aBCdEf\"\
    )\n    1L\n    >>> count_upper(\"abcdefg\")\n    0L\n    >>> count_upper(\"dBBE\"\
    )\n    0L\n    \n*/\nlong count_upper(string s) \n{\n    long count = 0;\n   \
    \ foreach(immutable i, immutable c; s)\n    {\n        if(i % 2 == 0 && c in ['A',\
    \ 'E', 'I', 'O', 'U'])\n            count++;\n    }\n    return count;\n}\nunittest\n\
    {\n    alias candidate = count_upper;\n\n    assert(candidate(\"aBCdEf\") == 1L);\n\
    \    assert(candidate(\"abcdefg\") == 0L);\n    assert(candidate(\"dBBE\") ==\
    \ 0L);\n    assert(candidate(\"B\") == 0L);\n    assert(candidate(\"U\") == 1L);\n\
    \    assert(candidate(\"\") == 0L);\n    assert(candidate(\"EEEE\") == 2L);\n\
    }\nvoid main(){}"
  status: SyntaxError
  stderr: '/tmp/tmpryluz_vx.d(20): Error: incompatible types for `(c) in ([''A'',
    ''E'', ''I'', ''O'', ''U''])`: `immutable(char)` and `char[]`

    Failed: ["dmd", "-unittest", "-v", "-o-", "/tmp/tmpryluz_vx.d", "-I/tmp"]

    '
  stdout: ''
  timestamp: 1660163028
- exit_code: 1
  program: "import std.math;\n/*\n\n    Given a string s, count the number of uppercase\
    \ vowels in even indices.\n    \n    For example:\n    >>> count_upper(\"aBCdEf\"\
    )\n    1L\n    >>> count_upper(\"abcdefg\")\n    0L\n    >>> count_upper(\"dBBE\"\
    )\n    0L\n    \n*/\nlong count_upper(string s) \n{\n    long count = 0;\n   \
    \ foreach(i, c; s)\n    {\n        if(i % 2 == 0 && isupper(c))\n            count++;\n\
    \    }\n    return count;\n}\nunittest\n{\n    alias candidate = count_upper;\n\
    \n    assert(candidate(\"aBCdEf\") == 1L);\n    assert(candidate(\"abcdefg\")\
    \ == 0L);\n    assert(candidate(\"dBBE\") == 0L);\n    assert(candidate(\"B\"\
    ) == 0L);\n    assert(candidate(\"U\") == 1L);\n    assert(candidate(\"\") ==\
    \ 0L);\n    assert(candidate(\"EEEE\") == 2L);\n}\nvoid main(){}"
  status: SyntaxError
  stderr: '/tmp/tmpbnddjpmc.d(20): Error: undefined identifier `isupper`

    Failed: ["dmd", "-unittest", "-v", "-o-", "/tmp/tmpbnddjpmc.d", "-I/tmp"]

    '
  stdout: ''
  timestamp: 1660163028
- exit_code: 1
  program: "import std.math;\n/*\n\n    Given a string s, count the number of uppercase\
    \ vowels in even indices.\n    \n    For example:\n    >>> count_upper(\"aBCdEf\"\
    )\n    1L\n    >>> count_upper(\"abcdefg\")\n    0L\n    >>> count_upper(\"dBBE\"\
    )\n    0L\n    \n*/\nlong count_upper(string s) \n{\n    long count = 0;\n   \
    \ foreach(i, c; s)\n    {\n        if(i % 2 == 0 && c in ['A', 'E', 'I', 'O',\
    \ 'U'])\n            count++;\n    }\n    return count;\n}\nunittest\n{\n    alias\
    \ candidate = count_upper;\n\n    assert(candidate(\"aBCdEf\") == 1L);\n    assert(candidate(\"\
    abcdefg\") == 0L);\n    assert(candidate(\"dBBE\") == 0L);\n    assert(candidate(\"\
    B\") == 0L);\n    assert(candidate(\"U\") == 1L);\n    assert(candidate(\"\")\
    \ == 0L);\n    assert(candidate(\"EEEE\") == 2L);\n}\nvoid main(){}"
  status: SyntaxError
  stderr: '/tmp/tmpkk1wsjki.d(20): Error: incompatible types for `(c) in ([''A'',
    ''E'', ''I'', ''O'', ''U''])`: `immutable(char)` and `char[]`

    Failed: ["dmd", "-unittest", "-v", "-o-", "/tmp/tmpkk1wsjki.d", "-I/tmp"]

    '
  stdout: ''
  timestamp: 1660163028
- exit_code: 1
  program: "import std.math;\n/*\n\n    Given a string s, count the number of uppercase\
    \ vowels in even indices.\n    \n    For example:\n    >>> count_upper(\"aBCdEf\"\
    )\n    1L\n    >>> count_upper(\"abcdefg\")\n    0L\n    >>> count_upper(\"dBBE\"\
    )\n    0L\n    \n*/\nlong count_upper(string s) \n{\n    long count = 0;\n   \
    \ foreach(i, c; s)\n    {\n        if(i % 2 == 0 && isupper(c))\n            count++;\n\
    \    }\n    return count;\n}\nunittest\n{\n    alias candidate = count_upper;\n\
    \n    assert(candidate(\"aBCdEf\") == 1L);\n    assert(candidate(\"abcdefg\")\
    \ == 0L);\n    assert(candidate(\"dBBE\") == 0L);\n    assert(candidate(\"B\"\
    ) == 0L);\n    assert(candidate(\"U\") == 1L);\n    assert(candidate(\"\") ==\
    \ 0L);\n    assert(candidate(\"EEEE\") == 2L);\n}\nvoid main(){}"
  status: SyntaxError
  stderr: '/tmp/tmpbnddjpmc.d(20): Error: undefined identifier `isupper`

    Failed: ["dmd", "-unittest", "-v", "-o-", "/tmp/tmpbnddjpmc.d", "-I/tmp"]

    '
  stdout: ''
  timestamp: 1660163028
- exit_code: 1
  program: "import std.math;\n/*\n\n    Given a string s, count the number of uppercase\
    \ vowels in even indices.\n    \n    For example:\n    >>> count_upper(\"aBCdEf\"\
    )\n    1L\n    >>> count_upper(\"abcdefg\")\n    0L\n    >>> count_upper(\"dBBE\"\
    )\n    0L\n    \n*/\nlong count_upper(string s) \n{\n    long count = 0;\n   \
    \ foreach(i, c; s)\n    {\n        if(i % 2 == 0 && isUpper(c))\n            count++;\n\
    \    }\n    return count;\n}\nunittest\n{\n    alias candidate = count_upper;\n\
    \n    assert(candidate(\"aBCdEf\") == 1L);\n    assert(candidate(\"abcdefg\")\
    \ == 0L);\n    assert(candidate(\"dBBE\") == 0L);\n    assert(candidate(\"B\"\
    ) == 0L);\n    assert(candidate(\"U\") == 1L);\n    assert(candidate(\"\") ==\
    \ 0L);\n    assert(candidate(\"EEEE\") == 2L);\n}\nvoid main(){}"
  status: SyntaxError
  stderr: '/tmp/tmpjziclffi.d(20): Error: undefined identifier `isUpper`

    Failed: ["dmd", "-unittest", "-v", "-o-", "/tmp/tmpjziclffi.d", "-I/tmp"]

    '
  stdout: ''
  timestamp: 1660163028
- exit_code: 1
  program: "import std.math;\n/*\n\n    Given a string s, count the number of uppercase\
    \ vowels in even indices.\n    \n    For example:\n    >>> count_upper(\"aBCdEf\"\
    )\n    1L\n    >>> count_upper(\"abcdefg\")\n    0L\n    >>> count_upper(\"dBBE\"\
    )\n    0L\n    \n*/\nlong count_upper(string s) \n{\n    long count = 0;\n   \
    \ foreach(i, c; s)\n    {\n        if(i % 2 == 0 && c >= 'A' && c <= 'Z')\n  \
    \          count++;\n    }\n    return count;\n}\nunittest\n{\n    alias candidate\
    \ = count_upper;\n\n    assert(candidate(\"aBCdEf\") == 1L);\n    assert(candidate(\"\
    abcdefg\") == 0L);\n    assert(candidate(\"dBBE\") == 0L);\n    assert(candidate(\"\
    B\") == 0L);\n    assert(candidate(\"U\") == 1L);\n    assert(candidate(\"\")\
    \ == 0L);\n    assert(candidate(\"EEEE\") == 2L);\n}\nvoid main(){}"
  status: Exception
  stderr: 'core.exception.AssertError@/tmp/tmp2l5es36k.d(29): unittest failure

    ----------------

    ??:? _d_unittestp [0x427e3d]

    ??:? void tmp2l5es36k.__unittest_L25_C1() [0x427ab2]

    ??:? void tmp2l5es36k.__modtest() [0x427bc0]

    ??:? int core.runtime.runModuleUnitTests().__foreachbody2(object.ModuleInfo*)
    [0x42bb63]

    ??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)).__lambda2(immutable(object.ModuleInfo*))
    [0x42a9f6]

    ??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))).__foreachbody2(ref
    rt.sections_elf_shared.DSO) [0x42fb89]

    ??:? int rt.sections_elf_shared.DSO.opApply(scope int delegate(ref rt.sections_elf_shared.DSO))
    [0x430038]

    ??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*)))
    [0x42fb15]

    ??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)) [0x42a9cd]

    ??:? runModuleUnitTests [0x42b939]

    ??:? void rt.dmain2._d_run_main(int, char**, extern (C) int function(char[][])*).runAll()
    [0x42828c]

    ??:? void rt.dmain2._d_r'
  stdout: ''
  timestamp: 1660163029
- exit_code: 1
  program: "import std.math;\n/*\n\n    Given a string s, count the number of uppercase\
    \ vowels in even indices.\n    \n    For example:\n    >>> count_upper(\"aBCdEf\"\
    )\n    1L\n    >>> count_upper(\"abcdefg\")\n    0L\n    >>> count_upper(\"dBBE\"\
    )\n    0L\n    \n*/\nlong count_upper(string s) \n{\n    long count = 0;\n   \
    \ foreach(i, c; s)\n    {\n        if(i % 2 == 0 && isupper(c))\n            count++;\n\
    \    }\n    return count;\n}\nunittest\n{\n    alias candidate = count_upper;\n\
    \n    assert(candidate(\"aBCdEf\") == 1L);\n    assert(candidate(\"abcdefg\")\
    \ == 0L);\n    assert(candidate(\"dBBE\") == 0L);\n    assert(candidate(\"B\"\
    ) == 0L);\n    assert(candidate(\"U\") == 1L);\n    assert(candidate(\"\") ==\
    \ 0L);\n    assert(candidate(\"EEEE\") == 2L);\n}\nvoid main(){}"
  status: SyntaxError
  stderr: '/tmp/tmpbnddjpmc.d(20): Error: undefined identifier `isupper`

    Failed: ["dmd", "-unittest", "-v", "-o-", "/tmp/tmpbnddjpmc.d", "-I/tmp"]

    '
  stdout: ''
  timestamp: 1660163028
- exit_code: 1
  program: "import std.math;\n/*\n\n    Given a string s, count the number of uppercase\
    \ vowels in even indices.\n    \n    For example:\n    >>> count_upper(\"aBCdEf\"\
    )\n    1L\n    >>> count_upper(\"abcdefg\")\n    0L\n    >>> count_upper(\"dBBE\"\
    )\n    0L\n    \n*/\nlong count_upper(string s) \n{\n    long count = 0;\n   \
    \ foreach(i, char c; s)\n    {\n        if(i % 2 == 0 && c == 'A' || c == 'E'\
    \ || c == 'I' || c == 'O' || c == 'U')\n        {\n            count++;\n    \
    \    }\n    }\n    return count;\n}\nunittest\n{\n    alias candidate = count_upper;\n\
    \n    assert(candidate(\"aBCdEf\") == 1L);\n    assert(candidate(\"abcdefg\")\
    \ == 0L);\n    assert(candidate(\"dBBE\") == 0L);\n    assert(candidate(\"B\"\
    ) == 0L);\n    assert(candidate(\"U\") == 1L);\n    assert(candidate(\"\") ==\
    \ 0L);\n    assert(candidate(\"EEEE\") == 2L);\n}\nvoid main(){}"
  status: Exception
  stderr: 'core.exception.AssertError@/tmp/tmphsgg9n3h.d(33): unittest failure

    ----------------

    ??:? _d_unittestp [0x427e55]

    ??:? void tmphsgg9n3h.__unittest_L27_C1() [0x427b1a]

    ??:? void tmphsgg9n3h.__modtest() [0x427bd4]

    ??:? int core.runtime.runModuleUnitTests().__foreachbody2(object.ModuleInfo*)
    [0x42bb7b]

    ??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)).__lambda2(immutable(object.ModuleInfo*))
    [0x42aa0e]

    ??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))).__foreachbody2(ref
    rt.sections_elf_shared.DSO) [0x42fba1]

    ??:? int rt.sections_elf_shared.DSO.opApply(scope int delegate(ref rt.sections_elf_shared.DSO))
    [0x430050]

    ??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*)))
    [0x42fb2d]

    ??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)) [0x42a9e5]

    ??:? runModuleUnitTests [0x42b951]

    ??:? void rt.dmain2._d_run_main(int, char**, extern (C) int function(char[][])*).runAll()
    [0x4282a4]

    ??:? void rt.dmain2._d_r'
  stdout: ''
  timestamp: 1660163029
- exit_code: 1
  program: "import std.math;\n/*\n\n    Given a string s, count the number of uppercase\
    \ vowels in even indices.\n    \n    For example:\n    >>> count_upper(\"aBCdEf\"\
    )\n    1L\n    >>> count_upper(\"abcdefg\")\n    0L\n    >>> count_upper(\"dBBE\"\
    )\n    0L\n    \n*/\nlong count_upper(string s) \n{\n    long count = 0;\n   \
    \ foreach(i, c; s)\n    {\n        if(i % 2 == 0 && c == toupper(c))\n       \
    \ {\n            count++;\n        }\n    }\n    return count;\n}\nunittest\n\
    {\n    alias candidate = count_upper;\n\n    assert(candidate(\"aBCdEf\") == 1L);\n\
    \    assert(candidate(\"abcdefg\") == 0L);\n    assert(candidate(\"dBBE\") ==\
    \ 0L);\n    assert(candidate(\"B\") == 0L);\n    assert(candidate(\"U\") == 1L);\n\
    \    assert(candidate(\"\") == 0L);\n    assert(candidate(\"EEEE\") == 2L);\n\
    }\nvoid main(){}"
  status: SyntaxError
  stderr: '/tmp/tmpbwih8q81.d(20): Error: undefined identifier `toupper`

    Failed: ["dmd", "-unittest", "-v", "-o-", "/tmp/tmpbwih8q81.d", "-I/tmp"]

    '
  stdout: ''
  timestamp: 1660163028
- exit_code: 1
  program: "import std.math;\n/*\n\n    Given a string s, count the number of uppercase\
    \ vowels in even indices.\n    \n    For example:\n    >>> count_upper(\"aBCdEf\"\
    )\n    1L\n    >>> count_upper(\"abcdefg\")\n    0L\n    >>> count_upper(\"dBBE\"\
    )\n    0L\n    \n*/\nlong count_upper(string s) \n{\n    long count = 0;\n   \
    \ foreach(i, c; s) \n    {\n        if(i % 2 == 0 && isUpper(c)) \n        {\n\
    \            count++;\n        }\n    }\n    return count;\n}\nunittest\n{\n \
    \   alias candidate = count_upper;\n\n    assert(candidate(\"aBCdEf\") == 1L);\n\
    \    assert(candidate(\"abcdefg\") == 0L);\n    assert(candidate(\"dBBE\") ==\
    \ 0L);\n    assert(candidate(\"B\") == 0L);\n    assert(candidate(\"U\") == 1L);\n\
    \    assert(candidate(\"\") == 0L);\n    assert(candidate(\"EEEE\") == 2L);\n\
    }\nvoid main(){}"
  status: SyntaxError
  stderr: '/tmp/tmpvln0twoh.d(20): Error: undefined identifier `isUpper`

    Failed: ["dmd", "-unittest", "-v", "-o-", "/tmp/tmpvln0twoh.d", "-I/tmp"]

    '
  stdout: ''
  timestamp: 1660163028
- exit_code: 1
  program: "import std.math;\n/*\n\n    Given a string s, count the number of uppercase\
    \ vowels in even indices.\n    \n    For example:\n    >>> count_upper(\"aBCdEf\"\
    )\n    1L\n    >>> count_upper(\"abcdefg\")\n    0L\n    >>> count_upper(\"dBBE\"\
    )\n    0L\n    \n*/\nlong count_upper(string s) \n{\n    long count = 0;\n   \
    \ foreach(i, c; s)\n    {\n        if(i % 2 == 0 && c >= 'A' && c <= 'Z')\n  \
    \          count++;\n    }\n    return count;\n}\nunittest\n{\n    alias candidate\
    \ = count_upper;\n\n    assert(candidate(\"aBCdEf\") == 1L);\n    assert(candidate(\"\
    abcdefg\") == 0L);\n    assert(candidate(\"dBBE\") == 0L);\n    assert(candidate(\"\
    B\") == 0L);\n    assert(candidate(\"U\") == 1L);\n    assert(candidate(\"\")\
    \ == 0L);\n    assert(candidate(\"EEEE\") == 2L);\n}\nvoid main(){}"
  status: Exception
  stderr: 'core.exception.AssertError@/tmp/tmp2l5es36k.d(29): unittest failure

    ----------------

    ??:? _d_unittestp [0x427e3d]

    ??:? void tmp2l5es36k.__unittest_L25_C1() [0x427ab2]

    ??:? void tmp2l5es36k.__modtest() [0x427bc0]

    ??:? int core.runtime.runModuleUnitTests().__foreachbody2(object.ModuleInfo*)
    [0x42bb63]

    ??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)).__lambda2(immutable(object.ModuleInfo*))
    [0x42a9f6]

    ??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))).__foreachbody2(ref
    rt.sections_elf_shared.DSO) [0x42fb89]

    ??:? int rt.sections_elf_shared.DSO.opApply(scope int delegate(ref rt.sections_elf_shared.DSO))
    [0x430038]

    ??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*)))
    [0x42fb15]

    ??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)) [0x42a9cd]

    ??:? runModuleUnitTests [0x42b939]

    ??:? void rt.dmain2._d_run_main(int, char**, extern (C) int function(char[][])*).runAll()
    [0x42828c]

    ??:? void rt.dmain2._d_r'
  stdout: ''
  timestamp: 1660163029
- exit_code: 1
  program: "import std.math;\n/*\n\n    Given a string s, count the number of uppercase\
    \ vowels in even indices.\n    \n    For example:\n    >>> count_upper(\"aBCdEf\"\
    )\n    1L\n    >>> count_upper(\"abcdefg\")\n    0L\n    >>> count_upper(\"dBBE\"\
    )\n    0L\n    \n*/\nlong count_upper(string s) \n{\n    long count = 0;\n   \
    \ foreach(i, c; s)\n    {\n        if(i % 2 == 0 && isupper(c))\n            count++;\n\
    \    }\n    return count;\n}\nunittest\n{\n    alias candidate = count_upper;\n\
    \n    assert(candidate(\"aBCdEf\") == 1L);\n    assert(candidate(\"abcdefg\")\
    \ == 0L);\n    assert(candidate(\"dBBE\") == 0L);\n    assert(candidate(\"B\"\
    ) == 0L);\n    assert(candidate(\"U\") == 1L);\n    assert(candidate(\"\") ==\
    \ 0L);\n    assert(candidate(\"EEEE\") == 2L);\n}\nvoid main(){}"
  status: SyntaxError
  stderr: '/tmp/tmpbnddjpmc.d(20): Error: undefined identifier `isupper`

    Failed: ["dmd", "-unittest", "-v", "-o-", "/tmp/tmpbnddjpmc.d", "-I/tmp"]

    '
  stdout: ''
  timestamp: 1660163028
- exit_code: 1
  program: "import std.math;\n/*\n\n    Given a string s, count the number of uppercase\
    \ vowels in even indices.\n    \n    For example:\n    >>> count_upper(\"aBCdEf\"\
    )\n    1L\n    >>> count_upper(\"abcdefg\")\n    0L\n    >>> count_upper(\"dBBE\"\
    )\n    0L\n    \n*/\nlong count_upper(string s) \n{\n    long count = 0;\n   \
    \ foreach(i, c; s)\n    {\n        if(i % 2 == 0 && c >= 'A' && c <= 'Z')\n  \
    \          count++;\n    }\n    return count;\n}\nunittest\n{\n    alias candidate\
    \ = count_upper;\n\n    assert(candidate(\"aBCdEf\") == 1L);\n    assert(candidate(\"\
    abcdefg\") == 0L);\n    assert(candidate(\"dBBE\") == 0L);\n    assert(candidate(\"\
    B\") == 0L);\n    assert(candidate(\"U\") == 1L);\n    assert(candidate(\"\")\
    \ == 0L);\n    assert(candidate(\"EEEE\") == 2L);\n}\nvoid main(){}"
  status: Exception
  stderr: 'core.exception.AssertError@/tmp/tmp2l5es36k.d(29): unittest failure

    ----------------

    ??:? _d_unittestp [0x427e3d]

    ??:? void tmp2l5es36k.__unittest_L25_C1() [0x427ab2]

    ??:? void tmp2l5es36k.__modtest() [0x427bc0]

    ??:? int core.runtime.runModuleUnitTests().__foreachbody2(object.ModuleInfo*)
    [0x42bb63]

    ??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)).__lambda2(immutable(object.ModuleInfo*))
    [0x42a9f6]

    ??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))).__foreachbody2(ref
    rt.sections_elf_shared.DSO) [0x42fb89]

    ??:? int rt.sections_elf_shared.DSO.opApply(scope int delegate(ref rt.sections_elf_shared.DSO))
    [0x430038]

    ??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*)))
    [0x42fb15]

    ??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)) [0x42a9cd]

    ??:? runModuleUnitTests [0x42b939]

    ??:? void rt.dmain2._d_run_main(int, char**, extern (C) int function(char[][])*).runAll()
    [0x42828c]

    ??:? void rt.dmain2._d_r'
  stdout: ''
  timestamp: 1660163029
- exit_code: 1
  program: "import std.math;\n/*\n\n    Given a string s, count the number of uppercase\
    \ vowels in even indices.\n    \n    For example:\n    >>> count_upper(\"aBCdEf\"\
    )\n    1L\n    >>> count_upper(\"abcdefg\")\n    0L\n    >>> count_upper(\"dBBE\"\
    )\n    0L\n    \n*/\nlong count_upper(string s) \n{\n    long count = 0;\n   \
    \ foreach(i, c; s) \n    {\n        if(i % 2 == 0 && c.isUpper) \n        {\n\
    \            count++;\n        }\n    }\n    return count;\n}\nunittest\n{\n \
    \   alias candidate = count_upper;\n\n    assert(candidate(\"aBCdEf\") == 1L);\n\
    \    assert(candidate(\"abcdefg\") == 0L);\n    assert(candidate(\"dBBE\") ==\
    \ 0L);\n    assert(candidate(\"B\") == 0L);\n    assert(candidate(\"U\") == 1L);\n\
    \    assert(candidate(\"\") == 0L);\n    assert(candidate(\"EEEE\") == 2L);\n\
    }\nvoid main(){}"
  status: SyntaxError
  stderr: '/tmp/tmpym_f0i0s.d(20): Error: no property `isUpper` for type `immutable(char)`

    Failed: ["dmd", "-unittest", "-v", "-o-", "/tmp/tmpym_f0i0s.d", "-I/tmp"]

    '
  stdout: ''
  timestamp: 1660163028
- exit_code: 1
  program: "import std.math;\n/*\n\n    Given a string s, count the number of uppercase\
    \ vowels in even indices.\n    \n    For example:\n    >>> count_upper(\"aBCdEf\"\
    )\n    1L\n    >>> count_upper(\"abcdefg\")\n    0L\n    >>> count_upper(\"dBBE\"\
    )\n    0L\n    \n*/\nlong count_upper(string s) \n{\n    long count = 0;\n   \
    \ foreach(i, c; s)\n    {\n        if(i % 2 == 0 && c >= 'A' && c <= 'Z')\n  \
    \          count++;\n    }\n    return count;\n}\nunittest\n{\n    alias candidate\
    \ = count_upper;\n\n    assert(candidate(\"aBCdEf\") == 1L);\n    assert(candidate(\"\
    abcdefg\") == 0L);\n    assert(candidate(\"dBBE\") == 0L);\n    assert(candidate(\"\
    B\") == 0L);\n    assert(candidate(\"U\") == 1L);\n    assert(candidate(\"\")\
    \ == 0L);\n    assert(candidate(\"EEEE\") == 2L);\n}\nvoid main(){}"
  status: Exception
  stderr: 'core.exception.AssertError@/tmp/tmp2l5es36k.d(29): unittest failure

    ----------------

    ??:? _d_unittestp [0x427e3d]

    ??:? void tmp2l5es36k.__unittest_L25_C1() [0x427ab2]

    ??:? void tmp2l5es36k.__modtest() [0x427bc0]

    ??:? int core.runtime.runModuleUnitTests().__foreachbody2(object.ModuleInfo*)
    [0x42bb63]

    ??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)).__lambda2(immutable(object.ModuleInfo*))
    [0x42a9f6]

    ??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))).__foreachbody2(ref
    rt.sections_elf_shared.DSO) [0x42fb89]

    ??:? int rt.sections_elf_shared.DSO.opApply(scope int delegate(ref rt.sections_elf_shared.DSO))
    [0x430038]

    ??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*)))
    [0x42fb15]

    ??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)) [0x42a9cd]

    ??:? runModuleUnitTests [0x42b939]

    ??:? void rt.dmain2._d_run_main(int, char**, extern (C) int function(char[][])*).runAll()
    [0x42828c]

    ??:? void rt.dmain2._d_r'
  stdout: ''
  timestamp: 1660163029
- exit_code: 1
  program: "import std.math;\n/*\n\n    Given a string s, count the number of uppercase\
    \ vowels in even indices.\n    \n    For example:\n    >>> count_upper(\"aBCdEf\"\
    )\n    1L\n    >>> count_upper(\"abcdefg\")\n    0L\n    >>> count_upper(\"dBBE\"\
    )\n    0L\n    \n*/\nlong count_upper(string s) \n{\n    long count = 0;\n   \
    \ foreach(i, c; s)\n    {\n        if(i % 2 == 0 && isupper(c))\n            count++;\n\
    \    }\n    return count;\n}\nunittest\n{\n    alias candidate = count_upper;\n\
    \n    assert(candidate(\"aBCdEf\") == 1L);\n    assert(candidate(\"abcdefg\")\
    \ == 0L);\n    assert(candidate(\"dBBE\") == 0L);\n    assert(candidate(\"B\"\
    ) == 0L);\n    assert(candidate(\"U\") == 1L);\n    assert(candidate(\"\") ==\
    \ 0L);\n    assert(candidate(\"EEEE\") == 2L);\n}\nvoid main(){}"
  status: SyntaxError
  stderr: '/tmp/tmpbnddjpmc.d(20): Error: undefined identifier `isupper`

    Failed: ["dmd", "-unittest", "-v", "-o-", "/tmp/tmpbnddjpmc.d", "-I/tmp"]

    '
  stdout: ''
  timestamp: 1660163028
- exit_code: 1
  program: "import std.math;\n/*\n\n    Given a string s, count the number of uppercase\
    \ vowels in even indices.\n    \n    For example:\n    >>> count_upper(\"aBCdEf\"\
    )\n    1L\n    >>> count_upper(\"abcdefg\")\n    0L\n    >>> count_upper(\"dBBE\"\
    )\n    0L\n    \n*/\nlong count_upper(string s) \n{\n    long count = 0;\n   \
    \ foreach(i, c; s)\n    {\n        if(i % 2 == 0 && c >= 'A' && c <= 'Z')\n  \
    \          count++;\n    }\n    return count;\n}\nunittest\n{\n    alias candidate\
    \ = count_upper;\n\n    assert(candidate(\"aBCdEf\") == 1L);\n    assert(candidate(\"\
    abcdefg\") == 0L);\n    assert(candidate(\"dBBE\") == 0L);\n    assert(candidate(\"\
    B\") == 0L);\n    assert(candidate(\"U\") == 1L);\n    assert(candidate(\"\")\
    \ == 0L);\n    assert(candidate(\"EEEE\") == 2L);\n}\nvoid main(){}"
  status: Exception
  stderr: 'core.exception.AssertError@/tmp/tmp2l5es36k.d(29): unittest failure

    ----------------

    ??:? _d_unittestp [0x427e3d]

    ??:? void tmp2l5es36k.__unittest_L25_C1() [0x427ab2]

    ??:? void tmp2l5es36k.__modtest() [0x427bc0]

    ??:? int core.runtime.runModuleUnitTests().__foreachbody2(object.ModuleInfo*)
    [0x42bb63]

    ??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)).__lambda2(immutable(object.ModuleInfo*))
    [0x42a9f6]

    ??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))).__foreachbody2(ref
    rt.sections_elf_shared.DSO) [0x42fb89]

    ??:? int rt.sections_elf_shared.DSO.opApply(scope int delegate(ref rt.sections_elf_shared.DSO))
    [0x430038]

    ??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*)))
    [0x42fb15]

    ??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)) [0x42a9cd]

    ??:? runModuleUnitTests [0x42b939]

    ??:? void rt.dmain2._d_run_main(int, char**, extern (C) int function(char[][])*).runAll()
    [0x42828c]

    ??:? void rt.dmain2._d_r'
  stdout: ''
  timestamp: 1660163029
- exit_code: 1
  program: "import std.math;\n/*\n\n    Given a string s, count the number of uppercase\
    \ vowels in even indices.\n    \n    For example:\n    >>> count_upper(\"aBCdEf\"\
    )\n    1L\n    >>> count_upper(\"abcdefg\")\n    0L\n    >>> count_upper(\"dBBE\"\
    )\n    0L\n    \n*/\nlong count_upper(string s) \n{\n    long count = 0;\n   \
    \ foreach(i, c; s)\n    {\n        if(i % 2 == 0 && c in ['A', 'E', 'I', 'O',\
    \ 'U'])\n            count++;\n    }\n    return count;\n}\nunittest\n{\n    alias\
    \ candidate = count_upper;\n\n    assert(candidate(\"aBCdEf\") == 1L);\n    assert(candidate(\"\
    abcdefg\") == 0L);\n    assert(candidate(\"dBBE\") == 0L);\n    assert(candidate(\"\
    B\") == 0L);\n    assert(candidate(\"U\") == 1L);\n    assert(candidate(\"\")\
    \ == 0L);\n    assert(candidate(\"EEEE\") == 2L);\n}\nvoid main(){}"
  status: SyntaxError
  stderr: '/tmp/tmpkk1wsjki.d(20): Error: incompatible types for `(c) in ([''A'',
    ''E'', ''I'', ''O'', ''U''])`: `immutable(char)` and `char[]`

    Failed: ["dmd", "-unittest", "-v", "-o-", "/tmp/tmpkk1wsjki.d", "-I/tmp"]

    '
  stdout: ''
  timestamp: 1660163028
- exit_code: 1
  program: "import std.math;\n/*\n\n    Given a string s, count the number of uppercase\
    \ vowels in even indices.\n    \n    For example:\n    >>> count_upper(\"aBCdEf\"\
    )\n    1L\n    >>> count_upper(\"abcdefg\")\n    0L\n    >>> count_upper(\"dBBE\"\
    )\n    0L\n    \n*/\nlong count_upper(string s) \n{\n    long count = 0;\n   \
    \ foreach(i, c; s)\n    {\n        if(i % 2 == 0 && isupper(c))\n            count++;\n\
    \    }\n    return count;\n}\nunittest\n{\n    alias candidate = count_upper;\n\
    \n    assert(candidate(\"aBCdEf\") == 1L);\n    assert(candidate(\"abcdefg\")\
    \ == 0L);\n    assert(candidate(\"dBBE\") == 0L);\n    assert(candidate(\"B\"\
    ) == 0L);\n    assert(candidate(\"U\") == 1L);\n    assert(candidate(\"\") ==\
    \ 0L);\n    assert(candidate(\"EEEE\") == 2L);\n}\nvoid main(){}"
  status: SyntaxError
  stderr: '/tmp/tmpbnddjpmc.d(20): Error: undefined identifier `isupper`

    Failed: ["dmd", "-unittest", "-v", "-o-", "/tmp/tmpbnddjpmc.d", "-I/tmp"]

    '
  stdout: ''
  timestamp: 1660163028
- exit_code: 1
  program: "import std.math;\n/*\n\n    Given a string s, count the number of uppercase\
    \ vowels in even indices.\n    \n    For example:\n    >>> count_upper(\"aBCdEf\"\
    )\n    1L\n    >>> count_upper(\"abcdefg\")\n    0L\n    >>> count_upper(\"dBBE\"\
    )\n    0L\n    \n*/\nlong count_upper(string s) \n{\n    long count = 0;\n   \
    \ foreach(i, c; s)\n    {\n        if(i % 2 == 0 && c >= 'A' && c <= 'Z')\n  \
    \          count++;\n    }\n    return count;\n}\nunittest\n{\n    alias candidate\
    \ = count_upper;\n\n    assert(candidate(\"aBCdEf\") == 1L);\n    assert(candidate(\"\
    abcdefg\") == 0L);\n    assert(candidate(\"dBBE\") == 0L);\n    assert(candidate(\"\
    B\") == 0L);\n    assert(candidate(\"U\") == 1L);\n    assert(candidate(\"\")\
    \ == 0L);\n    assert(candidate(\"EEEE\") == 2L);\n}\nvoid main(){}"
  status: Exception
  stderr: 'core.exception.AssertError@/tmp/tmp2l5es36k.d(29): unittest failure

    ----------------

    ??:? _d_unittestp [0x427e3d]

    ??:? void tmp2l5es36k.__unittest_L25_C1() [0x427ab2]

    ??:? void tmp2l5es36k.__modtest() [0x427bc0]

    ??:? int core.runtime.runModuleUnitTests().__foreachbody2(object.ModuleInfo*)
    [0x42bb63]

    ??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)).__lambda2(immutable(object.ModuleInfo*))
    [0x42a9f6]

    ??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))).__foreachbody2(ref
    rt.sections_elf_shared.DSO) [0x42fb89]

    ??:? int rt.sections_elf_shared.DSO.opApply(scope int delegate(ref rt.sections_elf_shared.DSO))
    [0x430038]

    ??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*)))
    [0x42fb15]

    ??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)) [0x42a9cd]

    ??:? runModuleUnitTests [0x42b939]

    ??:? void rt.dmain2._d_run_main(int, char**, extern (C) int function(char[][])*).runAll()
    [0x42828c]

    ??:? void rt.dmain2._d_r'
  stdout: ''
  timestamp: 1660163029
- exit_code: 1
  program: "import std.math;\n/*\n\n    Given a string s, count the number of uppercase\
    \ vowels in even indices.\n    \n    For example:\n    >>> count_upper(\"aBCdEf\"\
    )\n    1L\n    >>> count_upper(\"abcdefg\")\n    0L\n    >>> count_upper(\"dBBE\"\
    )\n    0L\n    \n*/\nlong count_upper(string s) \n{\n    long count = 0;\n   \
    \ foreach(i, c; s)\n    {\n        if(i % 2 == 0 && isUpper(c))\n            count++;\n\
    \    }\n    return count;\n}\nunittest\n{\n    alias candidate = count_upper;\n\
    \n    assert(candidate(\"aBCdEf\") == 1L);\n    assert(candidate(\"abcdefg\")\
    \ == 0L);\n    assert(candidate(\"dBBE\") == 0L);\n    assert(candidate(\"B\"\
    ) == 0L);\n    assert(candidate(\"U\") == 1L);\n    assert(candidate(\"\") ==\
    \ 0L);\n    assert(candidate(\"EEEE\") == 2L);\n}\nvoid main(){}"
  status: SyntaxError
  stderr: '/tmp/tmpjziclffi.d(20): Error: undefined identifier `isUpper`

    Failed: ["dmd", "-unittest", "-v", "-o-", "/tmp/tmpjziclffi.d", "-I/tmp"]

    '
  stdout: ''
  timestamp: 1660163028
- exit_code: 1
  program: "import std.math;\n/*\n\n    Given a string s, count the number of uppercase\
    \ vowels in even indices.\n    \n    For example:\n    >>> count_upper(\"aBCdEf\"\
    )\n    1L\n    >>> count_upper(\"abcdefg\")\n    0L\n    >>> count_upper(\"dBBE\"\
    )\n    0L\n    \n*/\nlong count_upper(string s) \n{\n    long count = 0;\n   \
    \ foreach(i, c; s)\n    {\n        if(i % 2 == 0 && isupper(c))\n            count++;\n\
    \    }\n    return count;\n}\nunittest\n{\n    alias candidate = count_upper;\n\
    \n    assert(candidate(\"aBCdEf\") == 1L);\n    assert(candidate(\"abcdefg\")\
    \ == 0L);\n    assert(candidate(\"dBBE\") == 0L);\n    assert(candidate(\"B\"\
    ) == 0L);\n    assert(candidate(\"U\") == 1L);\n    assert(candidate(\"\") ==\
    \ 0L);\n    assert(candidate(\"EEEE\") == 2L);\n}\nvoid main(){}"
  status: SyntaxError
  stderr: '/tmp/tmpbnddjpmc.d(20): Error: undefined identifier `isupper`

    Failed: ["dmd", "-unittest", "-v", "-o-", "/tmp/tmpbnddjpmc.d", "-I/tmp"]

    '
  stdout: ''
  timestamp: 1660163028
- exit_code: 1
  program: "import std.math;\n/*\n\n    Given a string s, count the number of uppercase\
    \ vowels in even indices.\n    \n    For example:\n    >>> count_upper(\"aBCdEf\"\
    )\n    1L\n    >>> count_upper(\"abcdefg\")\n    0L\n    >>> count_upper(\"dBBE\"\
    )\n    0L\n    \n*/\nlong count_upper(string s) \n{\n    long count = 0;\n   \
    \ foreach(i, c; s)\n    {\n        if(i % 2 == 0 && isupper(c))\n            count++;\n\
    \    }\n    return count;\n}\nunittest\n{\n    alias candidate = count_upper;\n\
    \n    assert(candidate(\"aBCdEf\") == 1L);\n    assert(candidate(\"abcdefg\")\
    \ == 0L);\n    assert(candidate(\"dBBE\") == 0L);\n    assert(candidate(\"B\"\
    ) == 0L);\n    assert(candidate(\"U\") == 1L);\n    assert(candidate(\"\") ==\
    \ 0L);\n    assert(candidate(\"EEEE\") == 2L);\n}\nvoid main(){}"
  status: SyntaxError
  stderr: '/tmp/tmpbnddjpmc.d(20): Error: undefined identifier `isupper`

    Failed: ["dmd", "-unittest", "-v", "-o-", "/tmp/tmpbnddjpmc.d", "-I/tmp"]

    '
  stdout: ''
  timestamp: 1660163028
- exit_code: 1
  program: "import std.math;\n/*\n\n    Given a string s, count the number of uppercase\
    \ vowels in even indices.\n    \n    For example:\n    >>> count_upper(\"aBCdEf\"\
    )\n    1L\n    >>> count_upper(\"abcdefg\")\n    0L\n    >>> count_upper(\"dBBE\"\
    )\n    0L\n    \n*/\nlong count_upper(string s) \n{\n    long count = 0;\n   \
    \ foreach(i, c; s)\n    {\n        if(i % 2 == 0 && isupper(c))\n            count++;\n\
    \    }\n    return count;\n}\nunittest\n{\n    alias candidate = count_upper;\n\
    \n    assert(candidate(\"aBCdEf\") == 1L);\n    assert(candidate(\"abcdefg\")\
    \ == 0L);\n    assert(candidate(\"dBBE\") == 0L);\n    assert(candidate(\"B\"\
    ) == 0L);\n    assert(candidate(\"U\") == 1L);\n    assert(candidate(\"\") ==\
    \ 0L);\n    assert(candidate(\"EEEE\") == 2L);\n}\nvoid main(){}"
  status: SyntaxError
  stderr: '/tmp/tmpbnddjpmc.d(20): Error: undefined identifier `isupper`

    Failed: ["dmd", "-unittest", "-v", "-o-", "/tmp/tmpbnddjpmc.d", "-I/tmp"]

    '
  stdout: ''
  timestamp: 1660163028
- exit_code: 1
  program: "import std.math;\n/*\n\n    Given a string s, count the number of uppercase\
    \ vowels in even indices.\n    \n    For example:\n    >>> count_upper(\"aBCdEf\"\
    )\n    1L\n    >>> count_upper(\"abcdefg\")\n    0L\n    >>> count_upper(\"dBBE\"\
    )\n    0L\n    \n*/\nlong count_upper(string s) \n{\n    long result = 0;\n  \
    \  foreach(i, c; s)\n    {\n        if(i % 2 == 0 && c >= 'A' && c <= 'Z')\n \
    \           result++;\n    }\n    return result;\n}\nunittest\n{\n    alias candidate\
    \ = count_upper;\n\n    assert(candidate(\"aBCdEf\") == 1L);\n    assert(candidate(\"\
    abcdefg\") == 0L);\n    assert(candidate(\"dBBE\") == 0L);\n    assert(candidate(\"\
    B\") == 0L);\n    assert(candidate(\"U\") == 1L);\n    assert(candidate(\"\")\
    \ == 0L);\n    assert(candidate(\"EEEE\") == 2L);\n}\nvoid main(){}"
  status: Exception
  stderr: 'core.exception.AssertError@/tmp/tmpm86hq_og.d(29): unittest failure

    ----------------

    ??:? _d_unittestp [0x427e3d]

    ??:? void tmpm86hq_og.__unittest_L25_C1() [0x427ab2]

    ??:? void tmpm86hq_og.__modtest() [0x427bc0]

    ??:? int core.runtime.runModuleUnitTests().__foreachbody2(object.ModuleInfo*)
    [0x42bb63]

    ??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)).__lambda2(immutable(object.ModuleInfo*))
    [0x42a9f6]

    ??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))).__foreachbody2(ref
    rt.sections_elf_shared.DSO) [0x42fb89]

    ??:? int rt.sections_elf_shared.DSO.opApply(scope int delegate(ref rt.sections_elf_shared.DSO))
    [0x430038]

    ??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*)))
    [0x42fb15]

    ??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)) [0x42a9cd]

    ??:? runModuleUnitTests [0x42b939]

    ??:? void rt.dmain2._d_run_main(int, char**, extern (C) int function(char[][])*).runAll()
    [0x42828c]

    ??:? void rt.dmain2._d_r'
  stdout: ''
  timestamp: 1660163029
- exit_code: 1
  program: "import std.math;\n/*\n\n    Given a string s, count the number of uppercase\
    \ vowels in even indices.\n    \n    For example:\n    >>> count_upper(\"aBCdEf\"\
    )\n    1L\n    >>> count_upper(\"abcdefg\")\n    0L\n    >>> count_upper(\"dBBE\"\
    )\n    0L\n    \n*/\nlong count_upper(string s) \n{\n    long count = 0;\n   \
    \ foreach(i, c; s)\n    {\n        if(i % 2 == 0 && isupper(c))\n            count++;\n\
    \    }\n    return count;\n}\nunittest\n{\n    alias candidate = count_upper;\n\
    \n    assert(candidate(\"aBCdEf\") == 1L);\n    assert(candidate(\"abcdefg\")\
    \ == 0L);\n    assert(candidate(\"dBBE\") == 0L);\n    assert(candidate(\"B\"\
    ) == 0L);\n    assert(candidate(\"U\") == 1L);\n    assert(candidate(\"\") ==\
    \ 0L);\n    assert(candidate(\"EEEE\") == 2L);\n}\nvoid main(){}"
  status: SyntaxError
  stderr: '/tmp/tmpbnddjpmc.d(20): Error: undefined identifier `isupper`

    Failed: ["dmd", "-unittest", "-v", "-o-", "/tmp/tmpbnddjpmc.d", "-I/tmp"]

    '
  stdout: ''
  timestamp: 1660163028
- exit_code: 1
  program: "import std.math;\n/*\n\n    Given a string s, count the number of uppercase\
    \ vowels in even indices.\n    \n    For example:\n    >>> count_upper(\"aBCdEf\"\
    )\n    1L\n    >>> count_upper(\"abcdefg\")\n    0L\n    >>> count_upper(\"dBBE\"\
    )\n    0L\n    \n*/\nlong count_upper(string s) \n{\n    long count = 0;\n   \
    \ foreach(i, c; s)\n    {\n        if(i % 2 == 0 && isupper(c))\n            count++;\n\
    \    }\n    return count;\n}\nunittest\n{\n    alias candidate = count_upper;\n\
    \n    assert(candidate(\"aBCdEf\") == 1L);\n    assert(candidate(\"abcdefg\")\
    \ == 0L);\n    assert(candidate(\"dBBE\") == 0L);\n    assert(candidate(\"B\"\
    ) == 0L);\n    assert(candidate(\"U\") == 1L);\n    assert(candidate(\"\") ==\
    \ 0L);\n    assert(candidate(\"EEEE\") == 2L);\n}\nvoid main(){}"
  status: SyntaxError
  stderr: '/tmp/tmpbnddjpmc.d(20): Error: undefined identifier `isupper`

    Failed: ["dmd", "-unittest", "-v", "-o-", "/tmp/tmpbnddjpmc.d", "-I/tmp"]

    '
  stdout: ''
  timestamp: 1660163028
- exit_code: 1
  program: "import std.math;\n/*\n\n    Given a string s, count the number of uppercase\
    \ vowels in even indices.\n    \n    For example:\n    >>> count_upper(\"aBCdEf\"\
    )\n    1L\n    >>> count_upper(\"abcdefg\")\n    0L\n    >>> count_upper(\"dBBE\"\
    )\n    0L\n    \n*/\nlong count_upper(string s) \n{\n    long count = 0;\n   \
    \ foreach(i, c; s)\n    {\n        if(i % 2 == 0 && c in ['A', 'E', 'I', 'O',\
    \ 'U'])\n            count++;\n    }\n    return count;\n}\nunittest\n{\n    alias\
    \ candidate = count_upper;\n\n    assert(candidate(\"aBCdEf\") == 1L);\n    assert(candidate(\"\
    abcdefg\") == 0L);\n    assert(candidate(\"dBBE\") == 0L);\n    assert(candidate(\"\
    B\") == 0L);\n    assert(candidate(\"U\") == 1L);\n    assert(candidate(\"\")\
    \ == 0L);\n    assert(candidate(\"EEEE\") == 2L);\n}\nvoid main(){}"
  status: SyntaxError
  stderr: '/tmp/tmpkk1wsjki.d(20): Error: incompatible types for `(c) in ([''A'',
    ''E'', ''I'', ''O'', ''U''])`: `immutable(char)` and `char[]`

    Failed: ["dmd", "-unittest", "-v", "-o-", "/tmp/tmpkk1wsjki.d", "-I/tmp"]

    '
  stdout: ''
  timestamp: 1660163028
- exit_code: 1
  program: "import std.math;\n/*\n\n    Given a string s, count the number of uppercase\
    \ vowels in even indices.\n    \n    For example:\n    >>> count_upper(\"aBCdEf\"\
    )\n    1L\n    >>> count_upper(\"abcdefg\")\n    0L\n    >>> count_upper(\"dBBE\"\
    )\n    0L\n    \n*/\nlong count_upper(string s) \n{\n    long count = 0;\n   \
    \ foreach(i, c; s)\n    {\n        if(i % 2 == 0 && isupper(c))\n            count++;\n\
    \    }\n    return count;\n}\nunittest\n{\n    alias candidate = count_upper;\n\
    \n    assert(candidate(\"aBCdEf\") == 1L);\n    assert(candidate(\"abcdefg\")\
    \ == 0L);\n    assert(candidate(\"dBBE\") == 0L);\n    assert(candidate(\"B\"\
    ) == 0L);\n    assert(candidate(\"U\") == 1L);\n    assert(candidate(\"\") ==\
    \ 0L);\n    assert(candidate(\"EEEE\") == 2L);\n}\nvoid main(){}"
  status: SyntaxError
  stderr: '/tmp/tmpbnddjpmc.d(20): Error: undefined identifier `isupper`

    Failed: ["dmd", "-unittest", "-v", "-o-", "/tmp/tmpbnddjpmc.d", "-I/tmp"]

    '
  stdout: ''
  timestamp: 1660163028
- exit_code: 1
  program: "import std.math;\n/*\n\n    Given a string s, count the number of uppercase\
    \ vowels in even indices.\n    \n    For example:\n    >>> count_upper(\"aBCdEf\"\
    )\n    1L\n    >>> count_upper(\"abcdefg\")\n    0L\n    >>> count_upper(\"dBBE\"\
    )\n    0L\n    \n*/\nlong count_upper(string s) \n{\n    long count = 0;\n   \
    \ foreach(immutable i, immutable c; s)\n    {\n        if(i % 2 == 0 && c.isUpper)\n\
    \            count++;\n    }\n    return count;\n}\nunittest\n{\n    alias candidate\
    \ = count_upper;\n\n    assert(candidate(\"aBCdEf\") == 1L);\n    assert(candidate(\"\
    abcdefg\") == 0L);\n    assert(candidate(\"dBBE\") == 0L);\n    assert(candidate(\"\
    B\") == 0L);\n    assert(candidate(\"U\") == 1L);\n    assert(candidate(\"\")\
    \ == 0L);\n    assert(candidate(\"EEEE\") == 2L);\n}\nvoid main(){}"
  status: SyntaxError
  stderr: '/tmp/tmp87mxts9d.d(20): Error: no property `isUpper` for type `immutable(char)`

    Failed: ["dmd", "-unittest", "-v", "-o-", "/tmp/tmp87mxts9d.d", "-I/tmp"]

    '
  stdout: ''
  timestamp: 1660163028
- exit_code: 1
  program: "import std.math;\n/*\n\n    Given a string s, count the number of uppercase\
    \ vowels in even indices.\n    \n    For example:\n    >>> count_upper(\"aBCdEf\"\
    )\n    1L\n    >>> count_upper(\"abcdefg\")\n    0L\n    >>> count_upper(\"dBBE\"\
    )\n    0L\n    \n*/\nlong count_upper(string s) \n{\n    long count = 0;\n   \
    \ foreach(i, c; s)\n    {\n        if (i % 2 == 0 && isUpper(c))\n           \
    \ count++;\n    }\n    return count;\n}\nunittest\n{\n    alias candidate = count_upper;\n\
    \n    assert(candidate(\"aBCdEf\") == 1L);\n    assert(candidate(\"abcdefg\")\
    \ == 0L);\n    assert(candidate(\"dBBE\") == 0L);\n    assert(candidate(\"B\"\
    ) == 0L);\n    assert(candidate(\"U\") == 1L);\n    assert(candidate(\"\") ==\
    \ 0L);\n    assert(candidate(\"EEEE\") == 2L);\n}\nvoid main(){}"
  status: SyntaxError
  stderr: '/tmp/tmpsz2jizva.d(20): Error: undefined identifier `isUpper`

    Failed: ["dmd", "-unittest", "-v", "-o-", "/tmp/tmpsz2jizva.d", "-I/tmp"]

    '
  stdout: ''
  timestamp: 1660163028
- exit_code: 1
  program: "import std.math;\n/*\n\n    Given a string s, count the number of uppercase\
    \ vowels in even indices.\n    \n    For example:\n    >>> count_upper(\"aBCdEf\"\
    )\n    1L\n    >>> count_upper(\"abcdefg\")\n    0L\n    >>> count_upper(\"dBBE\"\
    )\n    0L\n    \n*/\nlong count_upper(string s) \n{\n    long count = 0;\n   \
    \ foreach(i, c; s)\n    {\n        if(i % 2 == 0 && c >= 'A' && c <= 'Z')\n  \
    \          count++;\n    }\n    return count;\n}\nunittest\n{\n    alias candidate\
    \ = count_upper;\n\n    assert(candidate(\"aBCdEf\") == 1L);\n    assert(candidate(\"\
    abcdefg\") == 0L);\n    assert(candidate(\"dBBE\") == 0L);\n    assert(candidate(\"\
    B\") == 0L);\n    assert(candidate(\"U\") == 1L);\n    assert(candidate(\"\")\
    \ == 0L);\n    assert(candidate(\"EEEE\") == 2L);\n}\nvoid main(){}"
  status: Exception
  stderr: 'core.exception.AssertError@/tmp/tmp2l5es36k.d(29): unittest failure

    ----------------

    ??:? _d_unittestp [0x427e3d]

    ??:? void tmp2l5es36k.__unittest_L25_C1() [0x427ab2]

    ??:? void tmp2l5es36k.__modtest() [0x427bc0]

    ??:? int core.runtime.runModuleUnitTests().__foreachbody2(object.ModuleInfo*)
    [0x42bb63]

    ??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)).__lambda2(immutable(object.ModuleInfo*))
    [0x42a9f6]

    ??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))).__foreachbody2(ref
    rt.sections_elf_shared.DSO) [0x42fb89]

    ??:? int rt.sections_elf_shared.DSO.opApply(scope int delegate(ref rt.sections_elf_shared.DSO))
    [0x430038]

    ??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*)))
    [0x42fb15]

    ??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)) [0x42a9cd]

    ??:? runModuleUnitTests [0x42b939]

    ??:? void rt.dmain2._d_run_main(int, char**, extern (C) int function(char[][])*).runAll()
    [0x42828c]

    ??:? void rt.dmain2._d_r'
  stdout: ''
  timestamp: 1660163029
- exit_code: 1
  program: "import std.math;\n/*\n\n    Given a string s, count the number of uppercase\
    \ vowels in even indices.\n    \n    For example:\n    >>> count_upper(\"aBCdEf\"\
    )\n    1L\n    >>> count_upper(\"abcdefg\")\n    0L\n    >>> count_upper(\"dBBE\"\
    )\n    0L\n    \n*/\nlong count_upper(string s) \n{\n    long count = 0;\n   \
    \ foreach(immutable i, immutable c; s)\n    {\n        if(i % 2 == 0 && c in \"\
    AEIOU\")\n            count++;\n    }\n    return count;\n}\nunittest\n{\n   \
    \ alias candidate = count_upper;\n\n    assert(candidate(\"aBCdEf\") == 1L);\n\
    \    assert(candidate(\"abcdefg\") == 0L);\n    assert(candidate(\"dBBE\") ==\
    \ 0L);\n    assert(candidate(\"B\") == 0L);\n    assert(candidate(\"U\") == 1L);\n\
    \    assert(candidate(\"\") == 0L);\n    assert(candidate(\"EEEE\") == 2L);\n\
    }\nvoid main(){}"
  status: SyntaxError
  stderr: '/tmp/tmpkskmk_a9.d(20): Error: incompatible types for `(c) in ("AEIOU")`:
    `immutable(char)` and `string`

    Failed: ["dmd", "-unittest", "-v", "-o-", "/tmp/tmpkskmk_a9.d", "-I/tmp"]

    '
  stdout: ''
  timestamp: 1660163028
- exit_code: 1
  program: "import std.math;\n/*\n\n    Given a string s, count the number of uppercase\
    \ vowels in even indices.\n    \n    For example:\n    >>> count_upper(\"aBCdEf\"\
    )\n    1L\n    >>> count_upper(\"abcdefg\")\n    0L\n    >>> count_upper(\"dBBE\"\
    )\n    0L\n    \n*/\nlong count_upper(string s) \n{\n    long count = 0;\n   \
    \ foreach(i, c; s)\n    {\n        if(i % 2 == 0 && c == toupper(c))\n       \
    \ {\n            count++;\n        }\n    }\n    return count;\n}\nunittest\n\
    {\n    alias candidate = count_upper;\n\n    assert(candidate(\"aBCdEf\") == 1L);\n\
    \    assert(candidate(\"abcdefg\") == 0L);\n    assert(candidate(\"dBBE\") ==\
    \ 0L);\n    assert(candidate(\"B\") == 0L);\n    assert(candidate(\"U\") == 1L);\n\
    \    assert(candidate(\"\") == 0L);\n    assert(candidate(\"EEEE\") == 2L);\n\
    }\nvoid main(){}"
  status: SyntaxError
  stderr: '/tmp/tmpbwih8q81.d(20): Error: undefined identifier `toupper`

    Failed: ["dmd", "-unittest", "-v", "-o-", "/tmp/tmpbwih8q81.d", "-I/tmp"]

    '
  stdout: ''
  timestamp: 1660163028
- exit_code: 1
  program: "import std.math;\n/*\n\n    Given a string s, count the number of uppercase\
    \ vowels in even indices.\n    \n    For example:\n    >>> count_upper(\"aBCdEf\"\
    )\n    1L\n    >>> count_upper(\"abcdefg\")\n    0L\n    >>> count_upper(\"dBBE\"\
    )\n    0L\n    \n*/\nlong count_upper(string s) \n{\n    long count = 0;\n   \
    \ foreach(i, c; s)\n    {\n        if(i % 2 == 0 && isUpper(c))\n            count++;\n\
    \    }\n    return count;\n}\nunittest\n{\n    alias candidate = count_upper;\n\
    \n    assert(candidate(\"aBCdEf\") == 1L);\n    assert(candidate(\"abcdefg\")\
    \ == 0L);\n    assert(candidate(\"dBBE\") == 0L);\n    assert(candidate(\"B\"\
    ) == 0L);\n    assert(candidate(\"U\") == 1L);\n    assert(candidate(\"\") ==\
    \ 0L);\n    assert(candidate(\"EEEE\") == 2L);\n}\nvoid main(){}"
  status: SyntaxError
  stderr: '/tmp/tmpjziclffi.d(20): Error: undefined identifier `isUpper`

    Failed: ["dmd", "-unittest", "-v", "-o-", "/tmp/tmpjziclffi.d", "-I/tmp"]

    '
  stdout: ''
  timestamp: 1660163028
- exit_code: 1
  program: "import std.math;\n/*\n\n    Given a string s, count the number of uppercase\
    \ vowels in even indices.\n    \n    For example:\n    >>> count_upper(\"aBCdEf\"\
    )\n    1L\n    >>> count_upper(\"abcdefg\")\n    0L\n    >>> count_upper(\"dBBE\"\
    )\n    0L\n    \n*/\nlong count_upper(string s) \n{\n    long count = 0;\n   \
    \ foreach(i, c; s)\n    {\n        if(i % 2 == 0 && isupper(c))\n            count++;\n\
    \    }\n    return count;\n}\nunittest\n{\n    alias candidate = count_upper;\n\
    \n    assert(candidate(\"aBCdEf\") == 1L);\n    assert(candidate(\"abcdefg\")\
    \ == 0L);\n    assert(candidate(\"dBBE\") == 0L);\n    assert(candidate(\"B\"\
    ) == 0L);\n    assert(candidate(\"U\") == 1L);\n    assert(candidate(\"\") ==\
    \ 0L);\n    assert(candidate(\"EEEE\") == 2L);\n}\nvoid main(){}"
  status: SyntaxError
  stderr: '/tmp/tmpbnddjpmc.d(20): Error: undefined identifier `isupper`

    Failed: ["dmd", "-unittest", "-v", "-o-", "/tmp/tmpbnddjpmc.d", "-I/tmp"]

    '
  stdout: ''
  timestamp: 1660163028
- exit_code: 1
  program: "import std.math;\n/*\n\n    Given a string s, count the number of uppercase\
    \ vowels in even indices.\n    \n    For example:\n    >>> count_upper(\"aBCdEf\"\
    )\n    1L\n    >>> count_upper(\"abcdefg\")\n    0L\n    >>> count_upper(\"dBBE\"\
    )\n    0L\n    \n*/\nlong count_upper(string s) \n{\n    long count = 0;\n   \
    \ foreach(i, c; s)\n    {\n        if(i % 2 == 0 && c == toupper(c))\n       \
    \ {\n            count++;\n        }\n    }\n    return count;\n}\nunittest\n\
    {\n    alias candidate = count_upper;\n\n    assert(candidate(\"aBCdEf\") == 1L);\n\
    \    assert(candidate(\"abcdefg\") == 0L);\n    assert(candidate(\"dBBE\") ==\
    \ 0L);\n    assert(candidate(\"B\") == 0L);\n    assert(candidate(\"U\") == 1L);\n\
    \    assert(candidate(\"\") == 0L);\n    assert(candidate(\"EEEE\") == 2L);\n\
    }\nvoid main(){}"
  status: SyntaxError
  stderr: '/tmp/tmpbwih8q81.d(20): Error: undefined identifier `toupper`

    Failed: ["dmd", "-unittest", "-v", "-o-", "/tmp/tmpbwih8q81.d", "-I/tmp"]

    '
  stdout: ''
  timestamp: 1660163028
- exit_code: 1
  program: "import std.math;\n/*\n\n    Given a string s, count the number of uppercase\
    \ vowels in even indices.\n    \n    For example:\n    >>> count_upper(\"aBCdEf\"\
    )\n    1L\n    >>> count_upper(\"abcdefg\")\n    0L\n    >>> count_upper(\"dBBE\"\
    )\n    0L\n    \n*/\nlong count_upper(string s) \n{\n    long result = 0;\n  \
    \  foreach(i, c; s)\n    {\n        if(i % 2 == 0 && isupper(c))\n           \
    \ result++;\n    }\n    return result;\n}\nunittest\n{\n    alias candidate =\
    \ count_upper;\n\n    assert(candidate(\"aBCdEf\") == 1L);\n    assert(candidate(\"\
    abcdefg\") == 0L);\n    assert(candidate(\"dBBE\") == 0L);\n    assert(candidate(\"\
    B\") == 0L);\n    assert(candidate(\"U\") == 1L);\n    assert(candidate(\"\")\
    \ == 0L);\n    assert(candidate(\"EEEE\") == 2L);\n}\nvoid main(){}"
  status: SyntaxError
  stderr: '/tmp/tmp1whycbyv.d(20): Error: undefined identifier `isupper`

    Failed: ["dmd", "-unittest", "-v", "-o-", "/tmp/tmp1whycbyv.d", "-I/tmp"]

    '
  stdout: ''
  timestamp: 1660163028
- exit_code: 1
  program: "import std.math;\n/*\n\n    Given a string s, count the number of uppercase\
    \ vowels in even indices.\n    \n    For example:\n    >>> count_upper(\"aBCdEf\"\
    )\n    1L\n    >>> count_upper(\"abcdefg\")\n    0L\n    >>> count_upper(\"dBBE\"\
    )\n    0L\n    \n*/\nlong count_upper(string s) \n{\n    long count = 0;\n   \
    \ foreach(i, c; s)\n    {\n        if(i % 2 == 0 && c >= 'A' && c <= 'Z')\n  \
    \          count++;\n    }\n    return count;\n}\nunittest\n{\n    alias candidate\
    \ = count_upper;\n\n    assert(candidate(\"aBCdEf\") == 1L);\n    assert(candidate(\"\
    abcdefg\") == 0L);\n    assert(candidate(\"dBBE\") == 0L);\n    assert(candidate(\"\
    B\") == 0L);\n    assert(candidate(\"U\") == 1L);\n    assert(candidate(\"\")\
    \ == 0L);\n    assert(candidate(\"EEEE\") == 2L);\n}\nvoid main(){}"
  status: Exception
  stderr: 'core.exception.AssertError@/tmp/tmp2l5es36k.d(29): unittest failure

    ----------------

    ??:? _d_unittestp [0x427e3d]

    ??:? void tmp2l5es36k.__unittest_L25_C1() [0x427ab2]

    ??:? void tmp2l5es36k.__modtest() [0x427bc0]

    ??:? int core.runtime.runModuleUnitTests().__foreachbody2(object.ModuleInfo*)
    [0x42bb63]

    ??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)).__lambda2(immutable(object.ModuleInfo*))
    [0x42a9f6]

    ??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))).__foreachbody2(ref
    rt.sections_elf_shared.DSO) [0x42fb89]

    ??:? int rt.sections_elf_shared.DSO.opApply(scope int delegate(ref rt.sections_elf_shared.DSO))
    [0x430038]

    ??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*)))
    [0x42fb15]

    ??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)) [0x42a9cd]

    ??:? runModuleUnitTests [0x42b939]

    ??:? void rt.dmain2._d_run_main(int, char**, extern (C) int function(char[][])*).runAll()
    [0x42828c]

    ??:? void rt.dmain2._d_r'
  stdout: ''
  timestamp: 1660163029
- exit_code: 1
  program: "import std.math;\n/*\n\n    Given a string s, count the number of uppercase\
    \ vowels in even indices.\n    \n    For example:\n    >>> count_upper(\"aBCdEf\"\
    )\n    1L\n    >>> count_upper(\"abcdefg\")\n    0L\n    >>> count_upper(\"dBBE\"\
    )\n    0L\n    \n*/\nlong count_upper(string s) \n{\n    long count = 0;\n   \
    \ foreach(i, c; s)\n    {\n        if(i % 2 == 0 && c == 'A' || c == 'E' || c\
    \ == 'I' || c == 'O' || c == 'U')\n        {\n            count++;\n        }\n\
    \    }\n    return count;\n}\nunittest\n{\n    alias candidate = count_upper;\n\
    \n    assert(candidate(\"aBCdEf\") == 1L);\n    assert(candidate(\"abcdefg\")\
    \ == 0L);\n    assert(candidate(\"dBBE\") == 0L);\n    assert(candidate(\"B\"\
    ) == 0L);\n    assert(candidate(\"U\") == 1L);\n    assert(candidate(\"\") ==\
    \ 0L);\n    assert(candidate(\"EEEE\") == 2L);\n}\nvoid main(){}"
  status: Exception
  stderr: 'core.exception.AssertError@/tmp/tmpq101czay.d(33): unittest failure

    ----------------

    ??:? _d_unittestp [0x427e55]

    ??:? void tmpq101czay.__unittest_L27_C1() [0x427b1a]

    ??:? void tmpq101czay.__modtest() [0x427bd4]

    ??:? int core.runtime.runModuleUnitTests().__foreachbody2(object.ModuleInfo*)
    [0x42bb7b]

    ??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)).__lambda2(immutable(object.ModuleInfo*))
    [0x42aa0e]

    ??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))).__foreachbody2(ref
    rt.sections_elf_shared.DSO) [0x42fba1]

    ??:? int rt.sections_elf_shared.DSO.opApply(scope int delegate(ref rt.sections_elf_shared.DSO))
    [0x430050]

    ??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*)))
    [0x42fb2d]

    ??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)) [0x42a9e5]

    ??:? runModuleUnitTests [0x42b951]

    ??:? void rt.dmain2._d_run_main(int, char**, extern (C) int function(char[][])*).runAll()
    [0x4282a4]

    ??:? void rt.dmain2._d_r'
  stdout: ''
  timestamp: 1660163029
- exit_code: 1
  program: "import std.math;\n/*\n\n    Given a string s, count the number of uppercase\
    \ vowels in even indices.\n    \n    For example:\n    >>> count_upper(\"aBCdEf\"\
    )\n    1L\n    >>> count_upper(\"abcdefg\")\n    0L\n    >>> count_upper(\"dBBE\"\
    )\n    0L\n    \n*/\nlong count_upper(string s) \n{\n    long count = 0;\n   \
    \ foreach(i, c; s)\n    {\n        if (i % 2 == 0 && isUpper(c))\n           \
    \ count++;\n    }\n    return count;\n}\nunittest\n{\n    alias candidate = count_upper;\n\
    \n    assert(candidate(\"aBCdEf\") == 1L);\n    assert(candidate(\"abcdefg\")\
    \ == 0L);\n    assert(candidate(\"dBBE\") == 0L);\n    assert(candidate(\"B\"\
    ) == 0L);\n    assert(candidate(\"U\") == 1L);\n    assert(candidate(\"\") ==\
    \ 0L);\n    assert(candidate(\"EEEE\") == 2L);\n}\nvoid main(){}"
  status: SyntaxError
  stderr: '/tmp/tmpsz2jizva.d(20): Error: undefined identifier `isUpper`

    Failed: ["dmd", "-unittest", "-v", "-o-", "/tmp/tmpsz2jizva.d", "-I/tmp"]

    '
  stdout: ''
  timestamp: 1660163028
- exit_code: 1
  program: "import std.math;\n/*\n\n    Given a string s, count the number of uppercase\
    \ vowels in even indices.\n    \n    For example:\n    >>> count_upper(\"aBCdEf\"\
    )\n    1L\n    >>> count_upper(\"abcdefg\")\n    0L\n    >>> count_upper(\"dBBE\"\
    )\n    0L\n    \n*/\nlong count_upper(string s) \n{\n    long count = 0;\n   \
    \ foreach(i, c; s)\n    {\n        if(i % 2 == 0 && c >= 'A' && c <= 'Z')\n  \
    \          count++;\n    }\n    return count;\n}\nunittest\n{\n    alias candidate\
    \ = count_upper;\n\n    assert(candidate(\"aBCdEf\") == 1L);\n    assert(candidate(\"\
    abcdefg\") == 0L);\n    assert(candidate(\"dBBE\") == 0L);\n    assert(candidate(\"\
    B\") == 0L);\n    assert(candidate(\"U\") == 1L);\n    assert(candidate(\"\")\
    \ == 0L);\n    assert(candidate(\"EEEE\") == 2L);\n}\nvoid main(){}"
  status: Exception
  stderr: 'core.exception.AssertError@/tmp/tmp2l5es36k.d(29): unittest failure

    ----------------

    ??:? _d_unittestp [0x427e3d]

    ??:? void tmp2l5es36k.__unittest_L25_C1() [0x427ab2]

    ??:? void tmp2l5es36k.__modtest() [0x427bc0]

    ??:? int core.runtime.runModuleUnitTests().__foreachbody2(object.ModuleInfo*)
    [0x42bb63]

    ??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)).__lambda2(immutable(object.ModuleInfo*))
    [0x42a9f6]

    ??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))).__foreachbody2(ref
    rt.sections_elf_shared.DSO) [0x42fb89]

    ??:? int rt.sections_elf_shared.DSO.opApply(scope int delegate(ref rt.sections_elf_shared.DSO))
    [0x430038]

    ??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*)))
    [0x42fb15]

    ??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)) [0x42a9cd]

    ??:? runModuleUnitTests [0x42b939]

    ??:? void rt.dmain2._d_run_main(int, char**, extern (C) int function(char[][])*).runAll()
    [0x42828c]

    ??:? void rt.dmain2._d_r'
  stdout: ''
  timestamp: 1660163029
- exit_code: 1
  program: "import std.math;\n/*\n\n    Given a string s, count the number of uppercase\
    \ vowels in even indices.\n    \n    For example:\n    >>> count_upper(\"aBCdEf\"\
    )\n    1L\n    >>> count_upper(\"abcdefg\")\n    0L\n    >>> count_upper(\"dBBE\"\
    )\n    0L\n    \n*/\nlong count_upper(string s) \n{\n    long count = 0;\n   \
    \ foreach(i, c; s)\n    {\n        if(i % 2 == 0 && isUpper(c))\n            count++;\n\
    \    }\n    return count;\n}\nunittest\n{\n    alias candidate = count_upper;\n\
    \n    assert(candidate(\"aBCdEf\") == 1L);\n    assert(candidate(\"abcdefg\")\
    \ == 0L);\n    assert(candidate(\"dBBE\") == 0L);\n    assert(candidate(\"B\"\
    ) == 0L);\n    assert(candidate(\"U\") == 1L);\n    assert(candidate(\"\") ==\
    \ 0L);\n    assert(candidate(\"EEEE\") == 2L);\n}\nvoid main(){}"
  status: SyntaxError
  stderr: '/tmp/tmpjziclffi.d(20): Error: undefined identifier `isUpper`

    Failed: ["dmd", "-unittest", "-v", "-o-", "/tmp/tmpjziclffi.d", "-I/tmp"]

    '
  stdout: ''
  timestamp: 1660163028
- exit_code: 1
  program: "import std.math;\n/*\n\n    Given a string s, count the number of uppercase\
    \ vowels in even indices.\n    \n    For example:\n    >>> count_upper(\"aBCdEf\"\
    )\n    1L\n    >>> count_upper(\"abcdefg\")\n    0L\n    >>> count_upper(\"dBBE\"\
    )\n    0L\n    \n*/\nlong count_upper(string s) \n{\n    long count = 0;\n   \
    \ foreach(i, c; s) \n    {\n        if (i % 2 == 0 && c >= 'A' && c <= 'Z') \n\
    \        {\n            count++;\n        }\n    }\n    return count;\n}\nunittest\n\
    {\n    alias candidate = count_upper;\n\n    assert(candidate(\"aBCdEf\") == 1L);\n\
    \    assert(candidate(\"abcdefg\") == 0L);\n    assert(candidate(\"dBBE\") ==\
    \ 0L);\n    assert(candidate(\"B\") == 0L);\n    assert(candidate(\"U\") == 1L);\n\
    \    assert(candidate(\"\") == 0L);\n    assert(candidate(\"EEEE\") == 2L);\n\
    }\nvoid main(){}"
  status: Exception
  stderr: 'core.exception.AssertError@/tmp/tmpf91vz8d0.d(31): unittest failure

    ----------------

    ??:? _d_unittestp [0x427e3d]

    ??:? void tmpf91vz8d0.__unittest_L27_C1() [0x427ab2]

    ??:? void tmpf91vz8d0.__modtest() [0x427bc0]

    ??:? int core.runtime.runModuleUnitTests().__foreachbody2(object.ModuleInfo*)
    [0x42bb63]

    ??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)).__lambda2(immutable(object.ModuleInfo*))
    [0x42a9f6]

    ??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))).__foreachbody2(ref
    rt.sections_elf_shared.DSO) [0x42fb89]

    ??:? int rt.sections_elf_shared.DSO.opApply(scope int delegate(ref rt.sections_elf_shared.DSO))
    [0x430038]

    ??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*)))
    [0x42fb15]

    ??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)) [0x42a9cd]

    ??:? runModuleUnitTests [0x42b939]

    ??:? void rt.dmain2._d_run_main(int, char**, extern (C) int function(char[][])*).runAll()
    [0x42828c]

    ??:? void rt.dmain2._d_r'
  stdout: ''
  timestamp: 1660163029
- exit_code: 1
  program: "import std.math;\n/*\n\n    Given a string s, count the number of uppercase\
    \ vowels in even indices.\n    \n    For example:\n    >>> count_upper(\"aBCdEf\"\
    )\n    1L\n    >>> count_upper(\"abcdefg\")\n    0L\n    >>> count_upper(\"dBBE\"\
    )\n    0L\n    \n*/\nlong count_upper(string s) \n{\n    long count = 0;\n   \
    \ foreach(i, c; s) \n    {\n        if(i % 2 == 0 && c >= 'A' && c <= 'Z') \n\
    \        {\n            count++;\n        }\n    }\n    return count;\n}\nunittest\n\
    {\n    alias candidate = count_upper;\n\n    assert(candidate(\"aBCdEf\") == 1L);\n\
    \    assert(candidate(\"abcdefg\") == 0L);\n    assert(candidate(\"dBBE\") ==\
    \ 0L);\n    assert(candidate(\"B\") == 0L);\n    assert(candidate(\"U\") == 1L);\n\
    \    assert(candidate(\"\") == 0L);\n    assert(candidate(\"EEEE\") == 2L);\n\
    }\nvoid main(){}"
  status: Exception
  stderr: 'core.exception.AssertError@/tmp/tmpuovgxl6w.d(31): unittest failure

    ----------------

    ??:? _d_unittestp [0x427e3d]

    ??:? void tmpuovgxl6w.__unittest_L27_C1() [0x427ab2]

    ??:? void tmpuovgxl6w.__modtest() [0x427bc0]

    ??:? int core.runtime.runModuleUnitTests().__foreachbody2(object.ModuleInfo*)
    [0x42bb63]

    ??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)).__lambda2(immutable(object.ModuleInfo*))
    [0x42a9f6]

    ??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))).__foreachbody2(ref
    rt.sections_elf_shared.DSO) [0x42fb89]

    ??:? int rt.sections_elf_shared.DSO.opApply(scope int delegate(ref rt.sections_elf_shared.DSO))
    [0x430038]

    ??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*)))
    [0x42fb15]

    ??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)) [0x42a9cd]

    ??:? runModuleUnitTests [0x42b939]

    ??:? void rt.dmain2._d_run_main(int, char**, extern (C) int function(char[][])*).runAll()
    [0x42828c]

    ??:? void rt.dmain2._d_r'
  stdout: ''
  timestamp: 1660163029
- exit_code: 1
  program: "import std.math;\n/*\n\n    Given a string s, count the number of uppercase\
    \ vowels in even indices.\n    \n    For example:\n    >>> count_upper(\"aBCdEf\"\
    )\n    1L\n    >>> count_upper(\"abcdefg\")\n    0L\n    >>> count_upper(\"dBBE\"\
    )\n    0L\n    \n*/\nlong count_upper(string s) \n{\n    long count = 0;\n   \
    \ foreach(i, c; s)\n    {\n        if(i % 2 == 0 && isupper(c))\n            count++;\n\
    \    }\n    return count;\n}\nunittest\n{\n    alias candidate = count_upper;\n\
    \n    assert(candidate(\"aBCdEf\") == 1L);\n    assert(candidate(\"abcdefg\")\
    \ == 0L);\n    assert(candidate(\"dBBE\") == 0L);\n    assert(candidate(\"B\"\
    ) == 0L);\n    assert(candidate(\"U\") == 1L);\n    assert(candidate(\"\") ==\
    \ 0L);\n    assert(candidate(\"EEEE\") == 2L);\n}\nvoid main(){}"
  status: SyntaxError
  stderr: '/tmp/tmpbnddjpmc.d(20): Error: undefined identifier `isupper`

    Failed: ["dmd", "-unittest", "-v", "-o-", "/tmp/tmpbnddjpmc.d", "-I/tmp"]

    '
  stdout: ''
  timestamp: 1660163028
- exit_code: 1
  program: "import std.math;\n/*\n\n    Given a string s, count the number of uppercase\
    \ vowels in even indices.\n    \n    For example:\n    >>> count_upper(\"aBCdEf\"\
    )\n    1L\n    >>> count_upper(\"abcdefg\")\n    0L\n    >>> count_upper(\"dBBE\"\
    )\n    0L\n    \n*/\nlong count_upper(string s) \n{\n    long count = 0;\n   \
    \ foreach(i, c; s)\n    {\n        if(i % 2 == 0 && c >= 'A' && c <= 'Z')\n  \
    \          count++;\n    }\n    return count;\n}\nunittest\n{\n    alias candidate\
    \ = count_upper;\n\n    assert(candidate(\"aBCdEf\") == 1L);\n    assert(candidate(\"\
    abcdefg\") == 0L);\n    assert(candidate(\"dBBE\") == 0L);\n    assert(candidate(\"\
    B\") == 0L);\n    assert(candidate(\"U\") == 1L);\n    assert(candidate(\"\")\
    \ == 0L);\n    assert(candidate(\"EEEE\") == 2L);\n}\nvoid main(){}"
  status: Exception
  stderr: 'core.exception.AssertError@/tmp/tmp2l5es36k.d(29): unittest failure

    ----------------

    ??:? _d_unittestp [0x427e3d]

    ??:? void tmp2l5es36k.__unittest_L25_C1() [0x427ab2]

    ??:? void tmp2l5es36k.__modtest() [0x427bc0]

    ??:? int core.runtime.runModuleUnitTests().__foreachbody2(object.ModuleInfo*)
    [0x42bb63]

    ??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)).__lambda2(immutable(object.ModuleInfo*))
    [0x42a9f6]

    ??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))).__foreachbody2(ref
    rt.sections_elf_shared.DSO) [0x42fb89]

    ??:? int rt.sections_elf_shared.DSO.opApply(scope int delegate(ref rt.sections_elf_shared.DSO))
    [0x430038]

    ??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*)))
    [0x42fb15]

    ??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)) [0x42a9cd]

    ??:? runModuleUnitTests [0x42b939]

    ??:? void rt.dmain2._d_run_main(int, char**, extern (C) int function(char[][])*).runAll()
    [0x42828c]

    ??:? void rt.dmain2._d_r'
  stdout: ''
  timestamp: 1660163029
- exit_code: 1
  program: "import std.math;\n/*\n\n    Given a string s, count the number of uppercase\
    \ vowels in even indices.\n    \n    For example:\n    >>> count_upper(\"aBCdEf\"\
    )\n    1L\n    >>> count_upper(\"abcdefg\")\n    0L\n    >>> count_upper(\"dBBE\"\
    )\n    0L\n    \n*/\nlong count_upper(string s) \n{\n    long count = 0;\n   \
    \ foreach(i, c; s)\n    {\n        if(i % 2 == 0 && isupper(c))\n            count++;\n\
    \    }\n    return count;\n}\nunittest\n{\n    alias candidate = count_upper;\n\
    \n    assert(candidate(\"aBCdEf\") == 1L);\n    assert(candidate(\"abcdefg\")\
    \ == 0L);\n    assert(candidate(\"dBBE\") == 0L);\n    assert(candidate(\"B\"\
    ) == 0L);\n    assert(candidate(\"U\") == 1L);\n    assert(candidate(\"\") ==\
    \ 0L);\n    assert(candidate(\"EEEE\") == 2L);\n}\nvoid main(){}"
  status: SyntaxError
  stderr: '/tmp/tmpbnddjpmc.d(20): Error: undefined identifier `isupper`

    Failed: ["dmd", "-unittest", "-v", "-o-", "/tmp/tmpbnddjpmc.d", "-I/tmp"]

    '
  stdout: ''
  timestamp: 1660163028
- exit_code: 1
  program: "import std.math;\n/*\n\n    Given a string s, count the number of uppercase\
    \ vowels in even indices.\n    \n    For example:\n    >>> count_upper(\"aBCdEf\"\
    )\n    1L\n    >>> count_upper(\"abcdefg\")\n    0L\n    >>> count_upper(\"dBBE\"\
    )\n    0L\n    \n*/\nlong count_upper(string s) \n{\n    long count = 0;\n   \
    \ for (size_t i = 0; i < s.length; i++)\n    {\n        if (i % 2 == 0 && s[i]\
    \ == 'A' || s[i] == 'E' || s[i] == 'I' || s[i] == 'O' || s[i] == 'U')\n      \
    \  {\n            count++;\n        }\n    }\n    return count;\n}\nunittest\n\
    {\n    alias candidate = count_upper;\n\n    assert(candidate(\"aBCdEf\") == 1L);\n\
    \    assert(candidate(\"abcdefg\") == 0L);\n    assert(candidate(\"dBBE\") ==\
    \ 0L);\n    assert(candidate(\"B\") == 0L);\n    assert(candidate(\"U\") == 1L);\n\
    \    assert(candidate(\"\") == 0L);\n    assert(candidate(\"EEEE\") == 2L);\n\
    }\nvoid main(){}"
  status: Exception
  stderr: 'core.exception.AssertError@/tmp/tmp9h76m563.d(33): unittest failure

    ----------------

    ??:? _d_unittestp [0x427ef5]

    ??:? void tmp9h76m563.__unittest_L27_C1() [0x427bba]

    ??:? void tmp9h76m563.__modtest() [0x427c74]

    ??:? int core.runtime.runModuleUnitTests().__foreachbody2(object.ModuleInfo*)
    [0x42bc8f]

    ??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)).__lambda2(immutable(object.ModuleInfo*))
    [0x42ab22]

    ??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))).__foreachbody2(ref
    rt.sections_elf_shared.DSO) [0x42fcb5]

    ??:? int rt.sections_elf_shared.DSO.opApply(scope int delegate(ref rt.sections_elf_shared.DSO))
    [0x430164]

    ??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*)))
    [0x42fc41]

    ??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)) [0x42aaf9]

    ??:? runModuleUnitTests [0x42ba65]

    ??:? void rt.dmain2._d_run_main(int, char**, extern (C) int function(char[][])*).runAll()
    [0x4283b8]

    ??:? void rt.dmain2._d_r'
  stdout: ''
  timestamp: 1660163029
- exit_code: 1
  program: "import std.math;\n/*\n\n    Given a string s, count the number of uppercase\
    \ vowels in even indices.\n    \n    For example:\n    >>> count_upper(\"aBCdEf\"\
    )\n    1L\n    >>> count_upper(\"abcdefg\")\n    0L\n    >>> count_upper(\"dBBE\"\
    )\n    0L\n    \n*/\nlong count_upper(string s) \n{\n    long count = 0;\n   \
    \ foreach(i, c; s)\n    {\n        if(isEven(i) && isUpper(c))\n        {\n  \
    \          count++;\n        }\n    }\n    return count;\n}\nunittest\n{\n   \
    \ alias candidate = count_upper;\n\n    assert(candidate(\"aBCdEf\") == 1L);\n\
    \    assert(candidate(\"abcdefg\") == 0L);\n    assert(candidate(\"dBBE\") ==\
    \ 0L);\n    assert(candidate(\"B\") == 0L);\n    assert(candidate(\"U\") == 1L);\n\
    \    assert(candidate(\"\") == 0L);\n    assert(candidate(\"EEEE\") == 2L);\n\
    }\nvoid main(){}"
  status: SyntaxError
  stderr: '/tmp/tmpkxnnctd1.d(20): Error: undefined identifier `isEven`

    /tmp/tmpkxnnctd1.d(20): Error: undefined identifier `isUpper`

    Failed: ["dmd", "-unittest", "-v", "-o-", "/tmp/tmpkxnnctd1.d", "-I/tmp"]

    '
  stdout: ''
  timestamp: 1660163028
- exit_code: 1
  program: "import std.math;\n/*\n\n    Given a string s, count the number of uppercase\
    \ vowels in even indices.\n    \n    For example:\n    >>> count_upper(\"aBCdEf\"\
    )\n    1L\n    >>> count_upper(\"abcdefg\")\n    0L\n    >>> count_upper(\"dBBE\"\
    )\n    0L\n    \n*/\nlong count_upper(string s) \n{\n    long count = 0;\n   \
    \ foreach(i, c; s)\n    {\n        if(i % 2 == 0 && c == toupper(c))\n       \
    \ {\n            count++;\n        }\n    }\n    return count;\n}\nunittest\n\
    {\n    alias candidate = count_upper;\n\n    assert(candidate(\"aBCdEf\") == 1L);\n\
    \    assert(candidate(\"abcdefg\") == 0L);\n    assert(candidate(\"dBBE\") ==\
    \ 0L);\n    assert(candidate(\"B\") == 0L);\n    assert(candidate(\"U\") == 1L);\n\
    \    assert(candidate(\"\") == 0L);\n    assert(candidate(\"EEEE\") == 2L);\n\
    }\nvoid main(){}"
  status: SyntaxError
  stderr: '/tmp/tmpbwih8q81.d(20): Error: undefined identifier `toupper`

    Failed: ["dmd", "-unittest", "-v", "-o-", "/tmp/tmpbwih8q81.d", "-I/tmp"]

    '
  stdout: ''
  timestamp: 1660163028
- exit_code: 1
  program: "import std.math;\n/*\n\n    Given a string s, count the number of uppercase\
    \ vowels in even indices.\n    \n    For example:\n    >>> count_upper(\"aBCdEf\"\
    )\n    1L\n    >>> count_upper(\"abcdefg\")\n    0L\n    >>> count_upper(\"dBBE\"\
    )\n    0L\n    \n*/\nlong count_upper(string s) \n{\n    long count = 0;\n   \
    \ foreach(i, c; s)\n    {\n        if(i % 2 == 0 && c >= 'A' && c <= 'Z')\n  \
    \          count++;\n    }\n    return count;\n}\nunittest\n{\n    alias candidate\
    \ = count_upper;\n\n    assert(candidate(\"aBCdEf\") == 1L);\n    assert(candidate(\"\
    abcdefg\") == 0L);\n    assert(candidate(\"dBBE\") == 0L);\n    assert(candidate(\"\
    B\") == 0L);\n    assert(candidate(\"U\") == 1L);\n    assert(candidate(\"\")\
    \ == 0L);\n    assert(candidate(\"EEEE\") == 2L);\n}\nvoid main(){}"
  status: Exception
  stderr: 'core.exception.AssertError@/tmp/tmp2l5es36k.d(29): unittest failure

    ----------------

    ??:? _d_unittestp [0x427e3d]

    ??:? void tmp2l5es36k.__unittest_L25_C1() [0x427ab2]

    ??:? void tmp2l5es36k.__modtest() [0x427bc0]

    ??:? int core.runtime.runModuleUnitTests().__foreachbody2(object.ModuleInfo*)
    [0x42bb63]

    ??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)).__lambda2(immutable(object.ModuleInfo*))
    [0x42a9f6]

    ??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))).__foreachbody2(ref
    rt.sections_elf_shared.DSO) [0x42fb89]

    ??:? int rt.sections_elf_shared.DSO.opApply(scope int delegate(ref rt.sections_elf_shared.DSO))
    [0x430038]

    ??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*)))
    [0x42fb15]

    ??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)) [0x42a9cd]

    ??:? runModuleUnitTests [0x42b939]

    ??:? void rt.dmain2._d_run_main(int, char**, extern (C) int function(char[][])*).runAll()
    [0x42828c]

    ??:? void rt.dmain2._d_r'
  stdout: ''
  timestamp: 1660163029
- exit_code: 1
  program: "import std.math;\n/*\n\n    Given a string s, count the number of uppercase\
    \ vowels in even indices.\n    \n    For example:\n    >>> count_upper(\"aBCdEf\"\
    )\n    1L\n    >>> count_upper(\"abcdefg\")\n    0L\n    >>> count_upper(\"dBBE\"\
    )\n    0L\n    \n*/\nlong count_upper(string s) \n{\n    long count = 0;\n   \
    \ foreach(i, c; s)\n    {\n        if(i % 2 == 0 && c >= 'A' && c <= 'Z')\n  \
    \          count++;\n    }\n    return count;\n}\nunittest\n{\n    alias candidate\
    \ = count_upper;\n\n    assert(candidate(\"aBCdEf\") == 1L);\n    assert(candidate(\"\
    abcdefg\") == 0L);\n    assert(candidate(\"dBBE\") == 0L);\n    assert(candidate(\"\
    B\") == 0L);\n    assert(candidate(\"U\") == 1L);\n    assert(candidate(\"\")\
    \ == 0L);\n    assert(candidate(\"EEEE\") == 2L);\n}\nvoid main(){}"
  status: Exception
  stderr: 'core.exception.AssertError@/tmp/tmp2l5es36k.d(29): unittest failure

    ----------------

    ??:? _d_unittestp [0x427e3d]

    ??:? void tmp2l5es36k.__unittest_L25_C1() [0x427ab2]

    ??:? void tmp2l5es36k.__modtest() [0x427bc0]

    ??:? int core.runtime.runModuleUnitTests().__foreachbody2(object.ModuleInfo*)
    [0x42bb63]

    ??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)).__lambda2(immutable(object.ModuleInfo*))
    [0x42a9f6]

    ??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))).__foreachbody2(ref
    rt.sections_elf_shared.DSO) [0x42fb89]

    ??:? int rt.sections_elf_shared.DSO.opApply(scope int delegate(ref rt.sections_elf_shared.DSO))
    [0x430038]

    ??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*)))
    [0x42fb15]

    ??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)) [0x42a9cd]

    ??:? runModuleUnitTests [0x42b939]

    ??:? void rt.dmain2._d_run_main(int, char**, extern (C) int function(char[][])*).runAll()
    [0x42828c]

    ??:? void rt.dmain2._d_r'
  stdout: ''
  timestamp: 1660163029
- exit_code: 0
  program: "import std.math;\n/*\n\n    Given a string s, count the number of uppercase\
    \ vowels in even indices.\n    \n    For example:\n    >>> count_upper(\"aBCdEf\"\
    )\n    1L\n    >>> count_upper(\"abcdefg\")\n    0L\n    >>> count_upper(\"dBBE\"\
    )\n    0L\n    \n*/\nlong count_upper(string s) \n{\n    long count = 0;\n   \
    \ for (size_t i = 0; i < s.length; i += 2)\n    {\n        if (s[i] == 'A' ||\
    \ s[i] == 'E' || s[i] == 'I' || s[i] == 'O' || s[i] == 'U')\n        {\n     \
    \       count++;\n        }\n    }\n    return count;\n}\nunittest\n{\n    alias\
    \ candidate = count_upper;\n\n    assert(candidate(\"aBCdEf\") == 1L);\n    assert(candidate(\"\
    abcdefg\") == 0L);\n    assert(candidate(\"dBBE\") == 0L);\n    assert(candidate(\"\
    B\") == 0L);\n    assert(candidate(\"U\") == 1L);\n    assert(candidate(\"\")\
    \ == 0L);\n    assert(candidate(\"EEEE\") == 2L);\n}\nvoid main(){}"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660163029
- exit_code: 1
  program: "import std.math;\n/*\n\n    Given a string s, count the number of uppercase\
    \ vowels in even indices.\n    \n    For example:\n    >>> count_upper(\"aBCdEf\"\
    )\n    1L\n    >>> count_upper(\"abcdefg\")\n    0L\n    >>> count_upper(\"dBBE\"\
    )\n    0L\n    \n*/\nlong count_upper(string s) \n{\n    long count = 0;\n   \
    \ foreach(i, c; s)\n    {\n        if(i % 2 == 0 && c == 'A' || c == 'E' || c\
    \ == 'I' || c == 'O' || c == 'U')\n        {\n            count++;\n        }\n\
    \    }\n    return count;\n}\nunittest\n{\n    alias candidate = count_upper;\n\
    \n    assert(candidate(\"aBCdEf\") == 1L);\n    assert(candidate(\"abcdefg\")\
    \ == 0L);\n    assert(candidate(\"dBBE\") == 0L);\n    assert(candidate(\"B\"\
    ) == 0L);\n    assert(candidate(\"U\") == 1L);\n    assert(candidate(\"\") ==\
    \ 0L);\n    assert(candidate(\"EEEE\") == 2L);\n}\nvoid main(){}"
  status: Exception
  stderr: 'core.exception.AssertError@/tmp/tmpq101czay.d(33): unittest failure

    ----------------

    ??:? _d_unittestp [0x427e55]

    ??:? void tmpq101czay.__unittest_L27_C1() [0x427b1a]

    ??:? void tmpq101czay.__modtest() [0x427bd4]

    ??:? int core.runtime.runModuleUnitTests().__foreachbody2(object.ModuleInfo*)
    [0x42bb7b]

    ??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)).__lambda2(immutable(object.ModuleInfo*))
    [0x42aa0e]

    ??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))).__foreachbody2(ref
    rt.sections_elf_shared.DSO) [0x42fba1]

    ??:? int rt.sections_elf_shared.DSO.opApply(scope int delegate(ref rt.sections_elf_shared.DSO))
    [0x430050]

    ??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*)))
    [0x42fb2d]

    ??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)) [0x42a9e5]

    ??:? runModuleUnitTests [0x42b951]

    ??:? void rt.dmain2._d_run_main(int, char**, extern (C) int function(char[][])*).runAll()
    [0x4282a4]

    ??:? void rt.dmain2._d_r'
  stdout: ''
  timestamp: 1660163029
- exit_code: 1
  program: "import std.math;\n/*\n\n    Given a string s, count the number of uppercase\
    \ vowels in even indices.\n    \n    For example:\n    >>> count_upper(\"aBCdEf\"\
    )\n    1L\n    >>> count_upper(\"abcdefg\")\n    0L\n    >>> count_upper(\"dBBE\"\
    )\n    0L\n    \n*/\nlong count_upper(string s) \n{\n    long count = 0;\n   \
    \ foreach(i, c; s)\n    {\n        if(i % 2 == 0 && isupper(c))\n            count++;\n\
    \    }\n    return count;\n}\nunittest\n{\n    alias candidate = count_upper;\n\
    \n    assert(candidate(\"aBCdEf\") == 1L);\n    assert(candidate(\"abcdefg\")\
    \ == 0L);\n    assert(candidate(\"dBBE\") == 0L);\n    assert(candidate(\"B\"\
    ) == 0L);\n    assert(candidate(\"U\") == 1L);\n    assert(candidate(\"\") ==\
    \ 0L);\n    assert(candidate(\"EEEE\") == 2L);\n}\nvoid main(){}"
  status: SyntaxError
  stderr: '/tmp/tmpbnddjpmc.d(20): Error: undefined identifier `isupper`

    Failed: ["dmd", "-unittest", "-v", "-o-", "/tmp/tmpbnddjpmc.d", "-I/tmp"]

    '
  stdout: ''
  timestamp: 1660163028
- exit_code: 1
  program: "import std.math;\n/*\n\n    Given a string s, count the number of uppercase\
    \ vowels in even indices.\n    \n    For example:\n    >>> count_upper(\"aBCdEf\"\
    )\n    1L\n    >>> count_upper(\"abcdefg\")\n    0L\n    >>> count_upper(\"dBBE\"\
    )\n    0L\n    \n*/\nlong count_upper(string s) \n{\n    long count = 0;\n   \
    \ foreach(i, c; s)\n    {\n        if(i % 2 == 0 && c >= 'A' && c <= 'Z')\n  \
    \          count++;\n    }\n    return count;\n}\nunittest\n{\n    alias candidate\
    \ = count_upper;\n\n    assert(candidate(\"aBCdEf\") == 1L);\n    assert(candidate(\"\
    abcdefg\") == 0L);\n    assert(candidate(\"dBBE\") == 0L);\n    assert(candidate(\"\
    B\") == 0L);\n    assert(candidate(\"U\") == 1L);\n    assert(candidate(\"\")\
    \ == 0L);\n    assert(candidate(\"EEEE\") == 2L);\n}\nvoid main(){}"
  status: Exception
  stderr: 'core.exception.AssertError@/tmp/tmp2l5es36k.d(29): unittest failure

    ----------------

    ??:? _d_unittestp [0x427e3d]

    ??:? void tmp2l5es36k.__unittest_L25_C1() [0x427ab2]

    ??:? void tmp2l5es36k.__modtest() [0x427bc0]

    ??:? int core.runtime.runModuleUnitTests().__foreachbody2(object.ModuleInfo*)
    [0x42bb63]

    ??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)).__lambda2(immutable(object.ModuleInfo*))
    [0x42a9f6]

    ??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))).__foreachbody2(ref
    rt.sections_elf_shared.DSO) [0x42fb89]

    ??:? int rt.sections_elf_shared.DSO.opApply(scope int delegate(ref rt.sections_elf_shared.DSO))
    [0x430038]

    ??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*)))
    [0x42fb15]

    ??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)) [0x42a9cd]

    ??:? runModuleUnitTests [0x42b939]

    ??:? void rt.dmain2._d_run_main(int, char**, extern (C) int function(char[][])*).runAll()
    [0x42828c]

    ??:? void rt.dmain2._d_r'
  stdout: ''
  timestamp: 1660163029
- exit_code: 1
  program: "import std.math;\n/*\n\n    Given a string s, count the number of uppercase\
    \ vowels in even indices.\n    \n    For example:\n    >>> count_upper(\"aBCdEf\"\
    )\n    1L\n    >>> count_upper(\"abcdefg\")\n    0L\n    >>> count_upper(\"dBBE\"\
    )\n    0L\n    \n*/\nlong count_upper(string s) \n{\n    long count = 0;\n   \
    \ foreach(i, c; s)\n    {\n        if(i % 2 == 0 && isupper(c))\n            count++;\n\
    \    }\n    return count;\n}\nunittest\n{\n    alias candidate = count_upper;\n\
    \n    assert(candidate(\"aBCdEf\") == 1L);\n    assert(candidate(\"abcdefg\")\
    \ == 0L);\n    assert(candidate(\"dBBE\") == 0L);\n    assert(candidate(\"B\"\
    ) == 0L);\n    assert(candidate(\"U\") == 1L);\n    assert(candidate(\"\") ==\
    \ 0L);\n    assert(candidate(\"EEEE\") == 2L);\n}\nvoid main(){}"
  status: SyntaxError
  stderr: '/tmp/tmpbnddjpmc.d(20): Error: undefined identifier `isupper`

    Failed: ["dmd", "-unittest", "-v", "-o-", "/tmp/tmpbnddjpmc.d", "-I/tmp"]

    '
  stdout: ''
  timestamp: 1660163028
- exit_code: 1
  program: "import std.math;\n/*\n\n    Given a string s, count the number of uppercase\
    \ vowels in even indices.\n    \n    For example:\n    >>> count_upper(\"aBCdEf\"\
    )\n    1L\n    >>> count_upper(\"abcdefg\")\n    0L\n    >>> count_upper(\"dBBE\"\
    )\n    0L\n    \n*/\nlong count_upper(string s) \n{\n    long count = 0;\n   \
    \ foreach(i, c; s)\n    {\n        if(i % 2 == 0 && isupper(c))\n            count++;\n\
    \    }\n    return count;\n}\nunittest\n{\n    alias candidate = count_upper;\n\
    \n    assert(candidate(\"aBCdEf\") == 1L);\n    assert(candidate(\"abcdefg\")\
    \ == 0L);\n    assert(candidate(\"dBBE\") == 0L);\n    assert(candidate(\"B\"\
    ) == 0L);\n    assert(candidate(\"U\") == 1L);\n    assert(candidate(\"\") ==\
    \ 0L);\n    assert(candidate(\"EEEE\") == 2L);\n}\nvoid main(){}"
  status: SyntaxError
  stderr: '/tmp/tmpbnddjpmc.d(20): Error: undefined identifier `isupper`

    Failed: ["dmd", "-unittest", "-v", "-o-", "/tmp/tmpbnddjpmc.d", "-I/tmp"]

    '
  stdout: ''
  timestamp: 1660163028
- exit_code: 1
  program: "import std.math;\n/*\n\n    Given a string s, count the number of uppercase\
    \ vowels in even indices.\n    \n    For example:\n    >>> count_upper(\"aBCdEf\"\
    )\n    1L\n    >>> count_upper(\"abcdefg\")\n    0L\n    >>> count_upper(\"dBBE\"\
    )\n    0L\n    \n*/\nlong count_upper(string s) \n{\n    long count = 0;\n   \
    \ foreach(i, c; s)\n    {\n        if(i % 2 == 0 && c >= 'A' && c <= 'Z')\n  \
    \          count++;\n    }\n    return count;\n}\nunittest\n{\n    alias candidate\
    \ = count_upper;\n\n    assert(candidate(\"aBCdEf\") == 1L);\n    assert(candidate(\"\
    abcdefg\") == 0L);\n    assert(candidate(\"dBBE\") == 0L);\n    assert(candidate(\"\
    B\") == 0L);\n    assert(candidate(\"U\") == 1L);\n    assert(candidate(\"\")\
    \ == 0L);\n    assert(candidate(\"EEEE\") == 2L);\n}\nvoid main(){}"
  status: Exception
  stderr: 'core.exception.AssertError@/tmp/tmp2l5es36k.d(29): unittest failure

    ----------------

    ??:? _d_unittestp [0x427e3d]

    ??:? void tmp2l5es36k.__unittest_L25_C1() [0x427ab2]

    ??:? void tmp2l5es36k.__modtest() [0x427bc0]

    ??:? int core.runtime.runModuleUnitTests().__foreachbody2(object.ModuleInfo*)
    [0x42bb63]

    ??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)).__lambda2(immutable(object.ModuleInfo*))
    [0x42a9f6]

    ??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))).__foreachbody2(ref
    rt.sections_elf_shared.DSO) [0x42fb89]

    ??:? int rt.sections_elf_shared.DSO.opApply(scope int delegate(ref rt.sections_elf_shared.DSO))
    [0x430038]

    ??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*)))
    [0x42fb15]

    ??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)) [0x42a9cd]

    ??:? runModuleUnitTests [0x42b939]

    ??:? void rt.dmain2._d_run_main(int, char**, extern (C) int function(char[][])*).runAll()
    [0x42828c]

    ??:? void rt.dmain2._d_r'
  stdout: ''
  timestamp: 1660163029
- exit_code: 1
  program: "import std.math;\n/*\n\n    Given a string s, count the number of uppercase\
    \ vowels in even indices.\n    \n    For example:\n    >>> count_upper(\"aBCdEf\"\
    )\n    1L\n    >>> count_upper(\"abcdefg\")\n    0L\n    >>> count_upper(\"dBBE\"\
    )\n    0L\n    \n*/\nlong count_upper(string s) \n{\n    long count = 0;\n   \
    \ foreach(i, c; s)\n    {\n        if(i % 2 == 0 && isupper(c))\n            count++;\n\
    \    }\n    return count;\n}\nunittest\n{\n    alias candidate = count_upper;\n\
    \n    assert(candidate(\"aBCdEf\") == 1L);\n    assert(candidate(\"abcdefg\")\
    \ == 0L);\n    assert(candidate(\"dBBE\") == 0L);\n    assert(candidate(\"B\"\
    ) == 0L);\n    assert(candidate(\"U\") == 1L);\n    assert(candidate(\"\") ==\
    \ 0L);\n    assert(candidate(\"EEEE\") == 2L);\n}\nvoid main(){}"
  status: SyntaxError
  stderr: '/tmp/tmpbnddjpmc.d(20): Error: undefined identifier `isupper`

    Failed: ["dmd", "-unittest", "-v", "-o-", "/tmp/tmpbnddjpmc.d", "-I/tmp"]

    '
  stdout: ''
  timestamp: 1660163028
- exit_code: 1
  program: "import std.math;\n/*\n\n    Given a string s, count the number of uppercase\
    \ vowels in even indices.\n    \n    For example:\n    >>> count_upper(\"aBCdEf\"\
    )\n    1L\n    >>> count_upper(\"abcdefg\")\n    0L\n    >>> count_upper(\"dBBE\"\
    )\n    0L\n    \n*/\nlong count_upper(string s) \n{\n    long count = 0;\n   \
    \ for (size_t i = 0; i < s.length; i++)\n    {\n        if (i % 2 == 0 && s[i]\
    \ == 'A' || s[i] == 'E' || s[i] == 'I' || s[i] == 'O' || s[i] == 'U')\n      \
    \  {\n            count++;\n        }\n    }\n    return count;\n}\nunittest\n\
    {\n    alias candidate = count_upper;\n\n    assert(candidate(\"aBCdEf\") == 1L);\n\
    \    assert(candidate(\"abcdefg\") == 0L);\n    assert(candidate(\"dBBE\") ==\
    \ 0L);\n    assert(candidate(\"B\") == 0L);\n    assert(candidate(\"U\") == 1L);\n\
    \    assert(candidate(\"\") == 0L);\n    assert(candidate(\"EEEE\") == 2L);\n\
    }\nvoid main(){}"
  status: Exception
  stderr: 'core.exception.AssertError@/tmp/tmp9h76m563.d(33): unittest failure

    ----------------

    ??:? _d_unittestp [0x427ef5]

    ??:? void tmp9h76m563.__unittest_L27_C1() [0x427bba]

    ??:? void tmp9h76m563.__modtest() [0x427c74]

    ??:? int core.runtime.runModuleUnitTests().__foreachbody2(object.ModuleInfo*)
    [0x42bc8f]

    ??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)).__lambda2(immutable(object.ModuleInfo*))
    [0x42ab22]

    ??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))).__foreachbody2(ref
    rt.sections_elf_shared.DSO) [0x42fcb5]

    ??:? int rt.sections_elf_shared.DSO.opApply(scope int delegate(ref rt.sections_elf_shared.DSO))
    [0x430164]

    ??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*)))
    [0x42fc41]

    ??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)) [0x42aaf9]

    ??:? runModuleUnitTests [0x42ba65]

    ??:? void rt.dmain2._d_run_main(int, char**, extern (C) int function(char[][])*).runAll()
    [0x4283b8]

    ??:? void rt.dmain2._d_r'
  stdout: ''
  timestamp: 1660163029
- exit_code: 1
  program: "import std.math;\n/*\n\n    Given a string s, count the number of uppercase\
    \ vowels in even indices.\n    \n    For example:\n    >>> count_upper(\"aBCdEf\"\
    )\n    1L\n    >>> count_upper(\"abcdefg\")\n    0L\n    >>> count_upper(\"dBBE\"\
    )\n    0L\n    \n*/\nlong count_upper(string s) \n{\n    long count = 0;\n   \
    \ foreach(i, c; s)\n    {\n        if(i % 2 == 0 && c == 'A' || c == 'E' || c\
    \ == 'I' || c == 'O' || c == 'U')\n        {\n            count++;\n        }\n\
    \    }\n    return count;\n}\nunittest\n{\n    alias candidate = count_upper;\n\
    \n    assert(candidate(\"aBCdEf\") == 1L);\n    assert(candidate(\"abcdefg\")\
    \ == 0L);\n    assert(candidate(\"dBBE\") == 0L);\n    assert(candidate(\"B\"\
    ) == 0L);\n    assert(candidate(\"U\") == 1L);\n    assert(candidate(\"\") ==\
    \ 0L);\n    assert(candidate(\"EEEE\") == 2L);\n}\nvoid main(){}"
  status: Exception
  stderr: 'core.exception.AssertError@/tmp/tmpq101czay.d(33): unittest failure

    ----------------

    ??:? _d_unittestp [0x427e55]

    ??:? void tmpq101czay.__unittest_L27_C1() [0x427b1a]

    ??:? void tmpq101czay.__modtest() [0x427bd4]

    ??:? int core.runtime.runModuleUnitTests().__foreachbody2(object.ModuleInfo*)
    [0x42bb7b]

    ??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)).__lambda2(immutable(object.ModuleInfo*))
    [0x42aa0e]

    ??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))).__foreachbody2(ref
    rt.sections_elf_shared.DSO) [0x42fba1]

    ??:? int rt.sections_elf_shared.DSO.opApply(scope int delegate(ref rt.sections_elf_shared.DSO))
    [0x430050]

    ??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*)))
    [0x42fb2d]

    ??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)) [0x42a9e5]

    ??:? runModuleUnitTests [0x42b951]

    ??:? void rt.dmain2._d_run_main(int, char**, extern (C) int function(char[][])*).runAll()
    [0x4282a4]

    ??:? void rt.dmain2._d_r'
  stdout: ''
  timestamp: 1660163029
- exit_code: 1
  program: "import std.math;\n/*\n\n    Given a string s, count the number of uppercase\
    \ vowels in even indices.\n    \n    For example:\n    >>> count_upper(\"aBCdEf\"\
    )\n    1L\n    >>> count_upper(\"abcdefg\")\n    0L\n    >>> count_upper(\"dBBE\"\
    )\n    0L\n    \n*/\nlong count_upper(string s) \n{\n    long count = 0;\n   \
    \ foreach(i, c; s)\n    {\n        if(i % 2 == 0 && c >= 'A' && c <= 'Z')\n  \
    \          count++;\n    }\n    return count;\n}\nunittest\n{\n    alias candidate\
    \ = count_upper;\n\n    assert(candidate(\"aBCdEf\") == 1L);\n    assert(candidate(\"\
    abcdefg\") == 0L);\n    assert(candidate(\"dBBE\") == 0L);\n    assert(candidate(\"\
    B\") == 0L);\n    assert(candidate(\"U\") == 1L);\n    assert(candidate(\"\")\
    \ == 0L);\n    assert(candidate(\"EEEE\") == 2L);\n}\nvoid main(){}"
  status: Exception
  stderr: 'core.exception.AssertError@/tmp/tmp2l5es36k.d(29): unittest failure

    ----------------

    ??:? _d_unittestp [0x427e3d]

    ??:? void tmp2l5es36k.__unittest_L25_C1() [0x427ab2]

    ??:? void tmp2l5es36k.__modtest() [0x427bc0]

    ??:? int core.runtime.runModuleUnitTests().__foreachbody2(object.ModuleInfo*)
    [0x42bb63]

    ??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)).__lambda2(immutable(object.ModuleInfo*))
    [0x42a9f6]

    ??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))).__foreachbody2(ref
    rt.sections_elf_shared.DSO) [0x42fb89]

    ??:? int rt.sections_elf_shared.DSO.opApply(scope int delegate(ref rt.sections_elf_shared.DSO))
    [0x430038]

    ??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*)))
    [0x42fb15]

    ??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)) [0x42a9cd]

    ??:? runModuleUnitTests [0x42b939]

    ??:? void rt.dmain2._d_run_main(int, char**, extern (C) int function(char[][])*).runAll()
    [0x42828c]

    ??:? void rt.dmain2._d_r'
  stdout: ''
  timestamp: 1660163029
- exit_code: 1
  program: "import std.math;\n/*\n\n    Given a string s, count the number of uppercase\
    \ vowels in even indices.\n    \n    For example:\n    >>> count_upper(\"aBCdEf\"\
    )\n    1L\n    >>> count_upper(\"abcdefg\")\n    0L\n    >>> count_upper(\"dBBE\"\
    )\n    0L\n    \n*/\nlong count_upper(string s) \n{\n    long count = 0;\n   \
    \ foreach(i, c; s)\n    {\n        if(i % 2 == 0 && isupper(c))\n            count++;\n\
    \    }\n    return count;\n}\nunittest\n{\n    alias candidate = count_upper;\n\
    \n    assert(candidate(\"aBCdEf\") == 1L);\n    assert(candidate(\"abcdefg\")\
    \ == 0L);\n    assert(candidate(\"dBBE\") == 0L);\n    assert(candidate(\"B\"\
    ) == 0L);\n    assert(candidate(\"U\") == 1L);\n    assert(candidate(\"\") ==\
    \ 0L);\n    assert(candidate(\"EEEE\") == 2L);\n}\nvoid main(){}"
  status: SyntaxError
  stderr: '/tmp/tmpbnddjpmc.d(20): Error: undefined identifier `isupper`

    Failed: ["dmd", "-unittest", "-v", "-o-", "/tmp/tmpbnddjpmc.d", "-I/tmp"]

    '
  stdout: ''
  timestamp: 1660163028
- exit_code: 1
  program: "import std.math;\n/*\n\n    Given a string s, count the number of uppercase\
    \ vowels in even indices.\n    \n    For example:\n    >>> count_upper(\"aBCdEf\"\
    )\n    1L\n    >>> count_upper(\"abcdefg\")\n    0L\n    >>> count_upper(\"dBBE\"\
    )\n    0L\n    \n*/\nlong count_upper(string s) \n{\n    long count = 0;\n   \
    \ foreach(i, c; s)\n    {\n        if(i % 2 == 0 && c in ['A', 'E', 'I', 'O',\
    \ 'U'])\n            count++;\n    }\n    return count;\n}\nunittest\n{\n    alias\
    \ candidate = count_upper;\n\n    assert(candidate(\"aBCdEf\") == 1L);\n    assert(candidate(\"\
    abcdefg\") == 0L);\n    assert(candidate(\"dBBE\") == 0L);\n    assert(candidate(\"\
    B\") == 0L);\n    assert(candidate(\"U\") == 1L);\n    assert(candidate(\"\")\
    \ == 0L);\n    assert(candidate(\"EEEE\") == 2L);\n}\nvoid main(){}"
  status: SyntaxError
  stderr: '/tmp/tmpkk1wsjki.d(20): Error: incompatible types for `(c) in ([''A'',
    ''E'', ''I'', ''O'', ''U''])`: `immutable(char)` and `char[]`

    Failed: ["dmd", "-unittest", "-v", "-o-", "/tmp/tmpkk1wsjki.d", "-I/tmp"]

    '
  stdout: ''
  timestamp: 1660163028
- exit_code: 1
  program: "import std.math;\n/*\n\n    Given a string s, count the number of uppercase\
    \ vowels in even indices.\n    \n    For example:\n    >>> count_upper(\"aBCdEf\"\
    )\n    1L\n    >>> count_upper(\"abcdefg\")\n    0L\n    >>> count_upper(\"dBBE\"\
    )\n    0L\n    \n*/\nlong count_upper(string s) \n{\n    long count = 0;\n   \
    \ foreach(i, c; s)\n    {\n        if(i % 2 == 0 && isupper(c))\n            count++;\n\
    \    }\n    return count;\n}\nunittest\n{\n    alias candidate = count_upper;\n\
    \n    assert(candidate(\"aBCdEf\") == 1L);\n    assert(candidate(\"abcdefg\")\
    \ == 0L);\n    assert(candidate(\"dBBE\") == 0L);\n    assert(candidate(\"B\"\
    ) == 0L);\n    assert(candidate(\"U\") == 1L);\n    assert(candidate(\"\") ==\
    \ 0L);\n    assert(candidate(\"EEEE\") == 2L);\n}\nvoid main(){}"
  status: SyntaxError
  stderr: '/tmp/tmpbnddjpmc.d(20): Error: undefined identifier `isupper`

    Failed: ["dmd", "-unittest", "-v", "-o-", "/tmp/tmpbnddjpmc.d", "-I/tmp"]

    '
  stdout: ''
  timestamp: 1660163028
- exit_code: 1
  program: "import std.math;\n/*\n\n    Given a string s, count the number of uppercase\
    \ vowels in even indices.\n    \n    For example:\n    >>> count_upper(\"aBCdEf\"\
    )\n    1L\n    >>> count_upper(\"abcdefg\")\n    0L\n    >>> count_upper(\"dBBE\"\
    )\n    0L\n    \n*/\nlong count_upper(string s) \n{\n    long count = 0;\n   \
    \ foreach(i, c; s) \n    {\n        if (i % 2 == 0 && isUpper(c)) \n        {\n\
    \            count++;\n        }\n    }\n    return count;\n}\nunittest\n{\n \
    \   alias candidate = count_upper;\n\n    assert(candidate(\"aBCdEf\") == 1L);\n\
    \    assert(candidate(\"abcdefg\") == 0L);\n    assert(candidate(\"dBBE\") ==\
    \ 0L);\n    assert(candidate(\"B\") == 0L);\n    assert(candidate(\"U\") == 1L);\n\
    \    assert(candidate(\"\") == 0L);\n    assert(candidate(\"EEEE\") == 2L);\n\
    }\nvoid main(){}"
  status: SyntaxError
  stderr: '/tmp/tmpfc8hnusd.d(20): Error: undefined identifier `isUpper`

    Failed: ["dmd", "-unittest", "-v", "-o-", "/tmp/tmpfc8hnusd.d", "-I/tmp"]

    '
  stdout: ''
  timestamp: 1660163029
- exit_code: 1
  program: "import std.math;\n/*\n\n    Given a string s, count the number of uppercase\
    \ vowels in even indices.\n    \n    For example:\n    >>> count_upper(\"aBCdEf\"\
    )\n    1L\n    >>> count_upper(\"abcdefg\")\n    0L\n    >>> count_upper(\"dBBE\"\
    )\n    0L\n    \n*/\nlong count_upper(string s) \n{\n    long count = 0;\n   \
    \ foreach(i, c; s)\n    {\n        if(i % 2 == 0 && c >= 'A' && c <= 'Z')\n  \
    \          count++;\n    }\n    return count;\n}\nunittest\n{\n    alias candidate\
    \ = count_upper;\n\n    assert(candidate(\"aBCdEf\") == 1L);\n    assert(candidate(\"\
    abcdefg\") == 0L);\n    assert(candidate(\"dBBE\") == 0L);\n    assert(candidate(\"\
    B\") == 0L);\n    assert(candidate(\"U\") == 1L);\n    assert(candidate(\"\")\
    \ == 0L);\n    assert(candidate(\"EEEE\") == 2L);\n}\nvoid main(){}"
  status: Exception
  stderr: 'core.exception.AssertError@/tmp/tmp2l5es36k.d(29): unittest failure

    ----------------

    ??:? _d_unittestp [0x427e3d]

    ??:? void tmp2l5es36k.__unittest_L25_C1() [0x427ab2]

    ??:? void tmp2l5es36k.__modtest() [0x427bc0]

    ??:? int core.runtime.runModuleUnitTests().__foreachbody2(object.ModuleInfo*)
    [0x42bb63]

    ??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)).__lambda2(immutable(object.ModuleInfo*))
    [0x42a9f6]

    ??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))).__foreachbody2(ref
    rt.sections_elf_shared.DSO) [0x42fb89]

    ??:? int rt.sections_elf_shared.DSO.opApply(scope int delegate(ref rt.sections_elf_shared.DSO))
    [0x430038]

    ??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*)))
    [0x42fb15]

    ??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)) [0x42a9cd]

    ??:? runModuleUnitTests [0x42b939]

    ??:? void rt.dmain2._d_run_main(int, char**, extern (C) int function(char[][])*).runAll()
    [0x42828c]

    ??:? void rt.dmain2._d_r'
  stdout: ''
  timestamp: 1660163029
- exit_code: 1
  program: "import std.math;\n/*\n\n    Given a string s, count the number of uppercase\
    \ vowels in even indices.\n    \n    For example:\n    >>> count_upper(\"aBCdEf\"\
    )\n    1L\n    >>> count_upper(\"abcdefg\")\n    0L\n    >>> count_upper(\"dBBE\"\
    )\n    0L\n    \n*/\nlong count_upper(string s) \n{\n    long count = 0;\n   \
    \ foreach(i, c; s)\n    {\n        if(i % 2 == 0 && isUpper(c))\n            count++;\n\
    \    }\n    return count;\n}\nunittest\n{\n    alias candidate = count_upper;\n\
    \n    assert(candidate(\"aBCdEf\") == 1L);\n    assert(candidate(\"abcdefg\")\
    \ == 0L);\n    assert(candidate(\"dBBE\") == 0L);\n    assert(candidate(\"B\"\
    ) == 0L);\n    assert(candidate(\"U\") == 1L);\n    assert(candidate(\"\") ==\
    \ 0L);\n    assert(candidate(\"EEEE\") == 2L);\n}\nvoid main(){}"
  status: SyntaxError
  stderr: '/tmp/tmpjziclffi.d(20): Error: undefined identifier `isUpper`

    Failed: ["dmd", "-unittest", "-v", "-o-", "/tmp/tmpjziclffi.d", "-I/tmp"]

    '
  stdout: ''
  timestamp: 1660163028
- exit_code: 1
  program: "import std.math;\n/*\n\n    Given a string s, count the number of uppercase\
    \ vowels in even indices.\n    \n    For example:\n    >>> count_upper(\"aBCdEf\"\
    )\n    1L\n    >>> count_upper(\"abcdefg\")\n    0L\n    >>> count_upper(\"dBBE\"\
    )\n    0L\n    \n*/\nlong count_upper(string s) \n{\n    long result = 0;\n  \
    \  foreach(i, c; s)\n    {\n        if(i % 2 == 0 && isupper(c))\n        {\n\
    \            result++;\n        }\n    }\n    return result;\n}\nunittest\n{\n\
    \    alias candidate = count_upper;\n\n    assert(candidate(\"aBCdEf\") == 1L);\n\
    \    assert(candidate(\"abcdefg\") == 0L);\n    assert(candidate(\"dBBE\") ==\
    \ 0L);\n    assert(candidate(\"B\") == 0L);\n    assert(candidate(\"U\") == 1L);\n\
    \    assert(candidate(\"\") == 0L);\n    assert(candidate(\"EEEE\") == 2L);\n\
    }\nvoid main(){}"
  status: SyntaxError
  stderr: '/tmp/tmpgtvhcjs7.d(20): Error: undefined identifier `isupper`

    Failed: ["dmd", "-unittest", "-v", "-o-", "/tmp/tmpgtvhcjs7.d", "-I/tmp"]

    '
  stdout: ''
  timestamp: 1660163029
- exit_code: 1
  program: "import std.math;\n/*\n\n    Given a string s, count the number of uppercase\
    \ vowels in even indices.\n    \n    For example:\n    >>> count_upper(\"aBCdEf\"\
    )\n    1L\n    >>> count_upper(\"abcdefg\")\n    0L\n    >>> count_upper(\"dBBE\"\
    )\n    0L\n    \n*/\nlong count_upper(string s) \n{\n    long count = 0;\n   \
    \ foreach(i, c; s)\n    {\n        if(i % 2 == 0 && isUpper(c))\n            count++;\n\
    \    }\n    return count;\n}\nunittest\n{\n    alias candidate = count_upper;\n\
    \n    assert(candidate(\"aBCdEf\") == 1L);\n    assert(candidate(\"abcdefg\")\
    \ == 0L);\n    assert(candidate(\"dBBE\") == 0L);\n    assert(candidate(\"B\"\
    ) == 0L);\n    assert(candidate(\"U\") == 1L);\n    assert(candidate(\"\") ==\
    \ 0L);\n    assert(candidate(\"EEEE\") == 2L);\n}\nvoid main(){}"
  status: SyntaxError
  stderr: '/tmp/tmpjziclffi.d(20): Error: undefined identifier `isUpper`

    Failed: ["dmd", "-unittest", "-v", "-o-", "/tmp/tmpjziclffi.d", "-I/tmp"]

    '
  stdout: ''
  timestamp: 1660163028
- exit_code: 1
  program: "import std.math;\n/*\n\n    Given a string s, count the number of uppercase\
    \ vowels in even indices.\n    \n    For example:\n    >>> count_upper(\"aBCdEf\"\
    )\n    1L\n    >>> count_upper(\"abcdefg\")\n    0L\n    >>> count_upper(\"dBBE\"\
    )\n    0L\n    \n*/\nlong count_upper(string s) \n{\n    long count = 0;\n   \
    \ foreach(i, c; s)\n    {\n        if(i % 2 == 0 && isupper(c))\n            count++;\n\
    \    }\n    return count;\n}\nunittest\n{\n    alias candidate = count_upper;\n\
    \n    assert(candidate(\"aBCdEf\") == 1L);\n    assert(candidate(\"abcdefg\")\
    \ == 0L);\n    assert(candidate(\"dBBE\") == 0L);\n    assert(candidate(\"B\"\
    ) == 0L);\n    assert(candidate(\"U\") == 1L);\n    assert(candidate(\"\") ==\
    \ 0L);\n    assert(candidate(\"EEEE\") == 2L);\n}\nvoid main(){}"
  status: SyntaxError
  stderr: '/tmp/tmpbnddjpmc.d(20): Error: undefined identifier `isupper`

    Failed: ["dmd", "-unittest", "-v", "-o-", "/tmp/tmpbnddjpmc.d", "-I/tmp"]

    '
  stdout: ''
  timestamp: 1660163028
- exit_code: 1
  program: "import std.math;\n/*\n\n    Given a string s, count the number of uppercase\
    \ vowels in even indices.\n    \n    For example:\n    >>> count_upper(\"aBCdEf\"\
    )\n    1L\n    >>> count_upper(\"abcdefg\")\n    0L\n    >>> count_upper(\"dBBE\"\
    )\n    0L\n    \n*/\nlong count_upper(string s) \n{\n    long count = 0;\n   \
    \ foreach(i, c; s)\n    {\n        if(i % 2 == 0 && isupper(c))\n            count++;\n\
    \    }\n    return count;\n}\nunittest\n{\n    alias candidate = count_upper;\n\
    \n    assert(candidate(\"aBCdEf\") == 1L);\n    assert(candidate(\"abcdefg\")\
    \ == 0L);\n    assert(candidate(\"dBBE\") == 0L);\n    assert(candidate(\"B\"\
    ) == 0L);\n    assert(candidate(\"U\") == 1L);\n    assert(candidate(\"\") ==\
    \ 0L);\n    assert(candidate(\"EEEE\") == 2L);\n}\nvoid main(){}"
  status: SyntaxError
  stderr: '/tmp/tmpbnddjpmc.d(20): Error: undefined identifier `isupper`

    Failed: ["dmd", "-unittest", "-v", "-o-", "/tmp/tmpbnddjpmc.d", "-I/tmp"]

    '
  stdout: ''
  timestamp: 1660163028
- exit_code: 1
  program: "import std.math;\n/*\n\n    Given a string s, count the number of uppercase\
    \ vowels in even indices.\n    \n    For example:\n    >>> count_upper(\"aBCdEf\"\
    )\n    1L\n    >>> count_upper(\"abcdefg\")\n    0L\n    >>> count_upper(\"dBBE\"\
    )\n    0L\n    \n*/\nlong count_upper(string s) \n{\n    long count = 0;\n   \
    \ foreach(i, c; s)\n    {\n        if(i % 2 == 0 && isupper(c))\n            count++;\n\
    \    }\n    return count;\n}\nunittest\n{\n    alias candidate = count_upper;\n\
    \n    assert(candidate(\"aBCdEf\") == 1L);\n    assert(candidate(\"abcdefg\")\
    \ == 0L);\n    assert(candidate(\"dBBE\") == 0L);\n    assert(candidate(\"B\"\
    ) == 0L);\n    assert(candidate(\"U\") == 1L);\n    assert(candidate(\"\") ==\
    \ 0L);\n    assert(candidate(\"EEEE\") == 2L);\n}\nvoid main(){}"
  status: SyntaxError
  stderr: '/tmp/tmpbnddjpmc.d(20): Error: undefined identifier `isupper`

    Failed: ["dmd", "-unittest", "-v", "-o-", "/tmp/tmpbnddjpmc.d", "-I/tmp"]

    '
  stdout: ''
  timestamp: 1660163028
- exit_code: 1
  program: "import std.math;\n/*\n\n    Given a string s, count the number of uppercase\
    \ vowels in even indices.\n    \n    For example:\n    >>> count_upper(\"aBCdEf\"\
    )\n    1L\n    >>> count_upper(\"abcdefg\")\n    0L\n    >>> count_upper(\"dBBE\"\
    )\n    0L\n    \n*/\nlong count_upper(string s) \n{\n    long count = 0;\n   \
    \ foreach(i, c; s)\n    {\n        if(i % 2 == 0 && isUpper(c))\n            count++;\n\
    \    }\n    return count;\n}\nunittest\n{\n    alias candidate = count_upper;\n\
    \n    assert(candidate(\"aBCdEf\") == 1L);\n    assert(candidate(\"abcdefg\")\
    \ == 0L);\n    assert(candidate(\"dBBE\") == 0L);\n    assert(candidate(\"B\"\
    ) == 0L);\n    assert(candidate(\"U\") == 1L);\n    assert(candidate(\"\") ==\
    \ 0L);\n    assert(candidate(\"EEEE\") == 2L);\n}\nvoid main(){}"
  status: SyntaxError
  stderr: '/tmp/tmpjziclffi.d(20): Error: undefined identifier `isUpper`

    Failed: ["dmd", "-unittest", "-v", "-o-", "/tmp/tmpjziclffi.d", "-I/tmp"]

    '
  stdout: ''
  timestamp: 1660163028
- exit_code: 1
  program: "import std.math;\n/*\n\n    Given a string s, count the number of uppercase\
    \ vowels in even indices.\n    \n    For example:\n    >>> count_upper(\"aBCdEf\"\
    )\n    1L\n    >>> count_upper(\"abcdefg\")\n    0L\n    >>> count_upper(\"dBBE\"\
    )\n    0L\n    \n*/\nlong count_upper(string s) \n{\n    long count = 0;\n   \
    \ foreach(immutable i, immutable c; s)\n    {\n        if(i % 2 == 0 && isUpper(c))\n\
    \            count++;\n    }\n    return count;\n}\nunittest\n{\n    alias candidate\
    \ = count_upper;\n\n    assert(candidate(\"aBCdEf\") == 1L);\n    assert(candidate(\"\
    abcdefg\") == 0L);\n    assert(candidate(\"dBBE\") == 0L);\n    assert(candidate(\"\
    B\") == 0L);\n    assert(candidate(\"U\") == 1L);\n    assert(candidate(\"\")\
    \ == 0L);\n    assert(candidate(\"EEEE\") == 2L);\n}\nvoid main(){}"
  status: SyntaxError
  stderr: '/tmp/tmpk9ekfx89.d(20): Error: undefined identifier `isUpper`

    Failed: ["dmd", "-unittest", "-v", "-o-", "/tmp/tmpk9ekfx89.d", "-I/tmp"]

    '
  stdout: ''
  timestamp: 1660163028
- exit_code: 0
  program: "import std.math;\n/*\n\n    Given a string s, count the number of uppercase\
    \ vowels in even indices.\n    \n    For example:\n    >>> count_upper(\"aBCdEf\"\
    )\n    1L\n    >>> count_upper(\"abcdefg\")\n    0L\n    >>> count_upper(\"dBBE\"\
    )\n    0L\n    \n*/\nlong count_upper(string s) \n{\n    long count = 0;\n   \
    \ for (size_t i = 0; i < s.length; i += 2)\n    {\n        if (s[i] == 'A' ||\
    \ s[i] == 'E' || s[i] == 'I' || s[i] == 'O' || s[i] == 'U')\n        {\n     \
    \       count++;\n        }\n    }\n    return count;\n}\nunittest\n{\n    alias\
    \ candidate = count_upper;\n\n    assert(candidate(\"aBCdEf\") == 1L);\n    assert(candidate(\"\
    abcdefg\") == 0L);\n    assert(candidate(\"dBBE\") == 0L);\n    assert(candidate(\"\
    B\") == 0L);\n    assert(candidate(\"U\") == 1L);\n    assert(candidate(\"\")\
    \ == 0L);\n    assert(candidate(\"EEEE\") == 2L);\n}\nvoid main(){}"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660163029
- exit_code: 1
  program: "import std.math;\n/*\n\n    Given a string s, count the number of uppercase\
    \ vowels in even indices.\n    \n    For example:\n    >>> count_upper(\"aBCdEf\"\
    )\n    1L\n    >>> count_upper(\"abcdefg\")\n    0L\n    >>> count_upper(\"dBBE\"\
    )\n    0L\n    \n*/\nlong count_upper(string s) \n{\n    long count = 0;\n   \
    \ foreach(i, c; s)\n    {\n        if(i % 2 == 0 && isUpper(c))\n            count++;\n\
    \    }\n    return count;\n}\nunittest\n{\n    alias candidate = count_upper;\n\
    \n    assert(candidate(\"aBCdEf\") == 1L);\n    assert(candidate(\"abcdefg\")\
    \ == 0L);\n    assert(candidate(\"dBBE\") == 0L);\n    assert(candidate(\"B\"\
    ) == 0L);\n    assert(candidate(\"U\") == 1L);\n    assert(candidate(\"\") ==\
    \ 0L);\n    assert(candidate(\"EEEE\") == 2L);\n}\nvoid main(){}"
  status: SyntaxError
  stderr: '/tmp/tmpjziclffi.d(20): Error: undefined identifier `isUpper`

    Failed: ["dmd", "-unittest", "-v", "-o-", "/tmp/tmpjziclffi.d", "-I/tmp"]

    '
  stdout: ''
  timestamp: 1660163028
- exit_code: 1
  program: "import std.math;\n/*\n\n    Given a string s, count the number of uppercase\
    \ vowels in even indices.\n    \n    For example:\n    >>> count_upper(\"aBCdEf\"\
    )\n    1L\n    >>> count_upper(\"abcdefg\")\n    0L\n    >>> count_upper(\"dBBE\"\
    )\n    0L\n    \n*/\nlong count_upper(string s) \n{\n    long count = 0;\n   \
    \ foreach(i, c; s)\n    {\n        if(isEven(i) && isUpper(c))\n        {\n  \
    \          count++;\n        }\n    }\n    return count;\n}\nunittest\n{\n   \
    \ alias candidate = count_upper;\n\n    assert(candidate(\"aBCdEf\") == 1L);\n\
    \    assert(candidate(\"abcdefg\") == 0L);\n    assert(candidate(\"dBBE\") ==\
    \ 0L);\n    assert(candidate(\"B\") == 0L);\n    assert(candidate(\"U\") == 1L);\n\
    \    assert(candidate(\"\") == 0L);\n    assert(candidate(\"EEEE\") == 2L);\n\
    }\nvoid main(){}"
  status: SyntaxError
  stderr: '/tmp/tmpkxnnctd1.d(20): Error: undefined identifier `isEven`

    /tmp/tmpkxnnctd1.d(20): Error: undefined identifier `isUpper`

    Failed: ["dmd", "-unittest", "-v", "-o-", "/tmp/tmpkxnnctd1.d", "-I/tmp"]

    '
  stdout: ''
  timestamp: 1660163028
- exit_code: 1
  program: "import std.math;\n/*\n\n    Given a string s, count the number of uppercase\
    \ vowels in even indices.\n    \n    For example:\n    >>> count_upper(\"aBCdEf\"\
    )\n    1L\n    >>> count_upper(\"abcdefg\")\n    0L\n    >>> count_upper(\"dBBE\"\
    )\n    0L\n    \n*/\nlong count_upper(string s) \n{\n    long count = 0;\n   \
    \ foreach(i, c; s)\n    {\n        if(i % 2 == 0 && isupper(c))\n            count++;\n\
    \    }\n    return count;\n}\nunittest\n{\n    alias candidate = count_upper;\n\
    \n    assert(candidate(\"aBCdEf\") == 1L);\n    assert(candidate(\"abcdefg\")\
    \ == 0L);\n    assert(candidate(\"dBBE\") == 0L);\n    assert(candidate(\"B\"\
    ) == 0L);\n    assert(candidate(\"U\") == 1L);\n    assert(candidate(\"\") ==\
    \ 0L);\n    assert(candidate(\"EEEE\") == 2L);\n}\nvoid main(){}"
  status: SyntaxError
  stderr: '/tmp/tmpbnddjpmc.d(20): Error: undefined identifier `isupper`

    Failed: ["dmd", "-unittest", "-v", "-o-", "/tmp/tmpbnddjpmc.d", "-I/tmp"]

    '
  stdout: ''
  timestamp: 1660163028
- exit_code: 1
  program: "import std.math;\n/*\n\n    Given a string s, count the number of uppercase\
    \ vowels in even indices.\n    \n    For example:\n    >>> count_upper(\"aBCdEf\"\
    )\n    1L\n    >>> count_upper(\"abcdefg\")\n    0L\n    >>> count_upper(\"dBBE\"\
    )\n    0L\n    \n*/\nlong count_upper(string s) \n{\n    long count = 0;\n   \
    \ foreach(i, c; s)\n    {\n        if(i % 2 == 0 && c == toupper(c))\n       \
    \ {\n            count++;\n        }\n    }\n    return count;\n}\nunittest\n\
    {\n    alias candidate = count_upper;\n\n    assert(candidate(\"aBCdEf\") == 1L);\n\
    \    assert(candidate(\"abcdefg\") == 0L);\n    assert(candidate(\"dBBE\") ==\
    \ 0L);\n    assert(candidate(\"B\") == 0L);\n    assert(candidate(\"U\") == 1L);\n\
    \    assert(candidate(\"\") == 0L);\n    assert(candidate(\"EEEE\") == 2L);\n\
    }\nvoid main(){}"
  status: SyntaxError
  stderr: '/tmp/tmpbwih8q81.d(20): Error: undefined identifier `toupper`

    Failed: ["dmd", "-unittest", "-v", "-o-", "/tmp/tmpbwih8q81.d", "-I/tmp"]

    '
  stdout: ''
  timestamp: 1660163028
- exit_code: 1
  program: "import std.math;\n/*\n\n    Given a string s, count the number of uppercase\
    \ vowels in even indices.\n    \n    For example:\n    >>> count_upper(\"aBCdEf\"\
    )\n    1L\n    >>> count_upper(\"abcdefg\")\n    0L\n    >>> count_upper(\"dBBE\"\
    )\n    0L\n    \n*/\nlong count_upper(string s) \n{\n    long count = 0;\n   \
    \ foreach(i, c; s)\n    {\n        if(i % 2 == 0 && isupper(c))\n            count++;\n\
    \    }\n    return count;\n}\nunittest\n{\n    alias candidate = count_upper;\n\
    \n    assert(candidate(\"aBCdEf\") == 1L);\n    assert(candidate(\"abcdefg\")\
    \ == 0L);\n    assert(candidate(\"dBBE\") == 0L);\n    assert(candidate(\"B\"\
    ) == 0L);\n    assert(candidate(\"U\") == 1L);\n    assert(candidate(\"\") ==\
    \ 0L);\n    assert(candidate(\"EEEE\") == 2L);\n}\nvoid main(){}"
  status: SyntaxError
  stderr: '/tmp/tmpbnddjpmc.d(20): Error: undefined identifier `isupper`

    Failed: ["dmd", "-unittest", "-v", "-o-", "/tmp/tmpbnddjpmc.d", "-I/tmp"]

    '
  stdout: ''
  timestamp: 1660163028
- exit_code: 1
  program: "import std.math;\n/*\n\n    Given a string s, count the number of uppercase\
    \ vowels in even indices.\n    \n    For example:\n    >>> count_upper(\"aBCdEf\"\
    )\n    1L\n    >>> count_upper(\"abcdefg\")\n    0L\n    >>> count_upper(\"dBBE\"\
    )\n    0L\n    \n*/\nlong count_upper(string s) \n{\n    long count = 0;\n   \
    \ foreach(i, c; s)\n    {\n        if (i % 2 == 0 && c in ['A', 'E', 'I', 'O',\
    \ 'U'])\n            count++;\n    }\n    return count;\n}\nunittest\n{\n    alias\
    \ candidate = count_upper;\n\n    assert(candidate(\"aBCdEf\") == 1L);\n    assert(candidate(\"\
    abcdefg\") == 0L);\n    assert(candidate(\"dBBE\") == 0L);\n    assert(candidate(\"\
    B\") == 0L);\n    assert(candidate(\"U\") == 1L);\n    assert(candidate(\"\")\
    \ == 0L);\n    assert(candidate(\"EEEE\") == 2L);\n}\nvoid main(){}"
  status: SyntaxError
  stderr: '/tmp/tmp_3dp720t.d(20): Error: incompatible types for `(c) in ([''A'',
    ''E'', ''I'', ''O'', ''U''])`: `immutable(char)` and `char[]`

    Failed: ["dmd", "-unittest", "-v", "-o-", "/tmp/tmp_3dp720t.d", "-I/tmp"]

    '
  stdout: ''
  timestamp: 1660163029
- exit_code: 1
  program: "import std.math;\n/*\n\n    Given a string s, count the number of uppercase\
    \ vowels in even indices.\n    \n    For example:\n    >>> count_upper(\"aBCdEf\"\
    )\n    1L\n    >>> count_upper(\"abcdefg\")\n    0L\n    >>> count_upper(\"dBBE\"\
    )\n    0L\n    \n*/\nlong count_upper(string s) \n{\n    long count = 0;\n   \
    \ foreach(i, c; s)\n    {\n        if(i % 2 == 0 && isUpper(c))\n            count++;\n\
    \    }\n    return count;\n}\nunittest\n{\n    alias candidate = count_upper;\n\
    \n    assert(candidate(\"aBCdEf\") == 1L);\n    assert(candidate(\"abcdefg\")\
    \ == 0L);\n    assert(candidate(\"dBBE\") == 0L);\n    assert(candidate(\"B\"\
    ) == 0L);\n    assert(candidate(\"U\") == 1L);\n    assert(candidate(\"\") ==\
    \ 0L);\n    assert(candidate(\"EEEE\") == 2L);\n}\nvoid main(){}"
  status: SyntaxError
  stderr: '/tmp/tmpjziclffi.d(20): Error: undefined identifier `isUpper`

    Failed: ["dmd", "-unittest", "-v", "-o-", "/tmp/tmpjziclffi.d", "-I/tmp"]

    '
  stdout: ''
  timestamp: 1660163028
- exit_code: 1
  program: "import std.math;\n/*\n\n    Given a string s, count the number of uppercase\
    \ vowels in even indices.\n    \n    For example:\n    >>> count_upper(\"aBCdEf\"\
    )\n    1L\n    >>> count_upper(\"abcdefg\")\n    0L\n    >>> count_upper(\"dBBE\"\
    )\n    0L\n    \n*/\nlong count_upper(string s) \n{\n    long count = 0;\n   \
    \ foreach(i, c; s)\n    {\n        if(i % 2 == 0 && isupper(c))\n            count++;\n\
    \    }\n    return count;\n}\nunittest\n{\n    alias candidate = count_upper;\n\
    \n    assert(candidate(\"aBCdEf\") == 1L);\n    assert(candidate(\"abcdefg\")\
    \ == 0L);\n    assert(candidate(\"dBBE\") == 0L);\n    assert(candidate(\"B\"\
    ) == 0L);\n    assert(candidate(\"U\") == 1L);\n    assert(candidate(\"\") ==\
    \ 0L);\n    assert(candidate(\"EEEE\") == 2L);\n}\nvoid main(){}"
  status: SyntaxError
  stderr: '/tmp/tmpbnddjpmc.d(20): Error: undefined identifier `isupper`

    Failed: ["dmd", "-unittest", "-v", "-o-", "/tmp/tmpbnddjpmc.d", "-I/tmp"]

    '
  stdout: ''
  timestamp: 1660163028
- exit_code: 1
  program: "import std.math;\n/*\n\n    Given a string s, count the number of uppercase\
    \ vowels in even indices.\n    \n    For example:\n    >>> count_upper(\"aBCdEf\"\
    )\n    1L\n    >>> count_upper(\"abcdefg\")\n    0L\n    >>> count_upper(\"dBBE\"\
    )\n    0L\n    \n*/\nlong count_upper(string s) \n{\n    long count = 0;\n   \
    \ foreach(immutable i, immutable c; s)\n    {\n        if(i % 2 == 0 && c in \"\
    AEIOU\")\n            count++;\n    }\n    return count;\n}\nunittest\n{\n   \
    \ alias candidate = count_upper;\n\n    assert(candidate(\"aBCdEf\") == 1L);\n\
    \    assert(candidate(\"abcdefg\") == 0L);\n    assert(candidate(\"dBBE\") ==\
    \ 0L);\n    assert(candidate(\"B\") == 0L);\n    assert(candidate(\"U\") == 1L);\n\
    \    assert(candidate(\"\") == 0L);\n    assert(candidate(\"EEEE\") == 2L);\n\
    }\nvoid main(){}"
  status: SyntaxError
  stderr: '/tmp/tmpkskmk_a9.d(20): Error: incompatible types for `(c) in ("AEIOU")`:
    `immutable(char)` and `string`

    Failed: ["dmd", "-unittest", "-v", "-o-", "/tmp/tmpkskmk_a9.d", "-I/tmp"]

    '
  stdout: ''
  timestamp: 1660163028
- exit_code: 1
  program: "import std.math;\n/*\n\n    Given a string s, count the number of uppercase\
    \ vowels in even indices.\n    \n    For example:\n    >>> count_upper(\"aBCdEf\"\
    )\n    1L\n    >>> count_upper(\"abcdefg\")\n    0L\n    >>> count_upper(\"dBBE\"\
    )\n    0L\n    \n*/\nlong count_upper(string s) \n{\n    long count = 0;\n   \
    \ foreach(i, c; s)\n    {\n        if(i % 2 == 0 && isupper(c))\n            count++;\n\
    \    }\n    return count;\n}\nunittest\n{\n    alias candidate = count_upper;\n\
    \n    assert(candidate(\"aBCdEf\") == 1L);\n    assert(candidate(\"abcdefg\")\
    \ == 0L);\n    assert(candidate(\"dBBE\") == 0L);\n    assert(candidate(\"B\"\
    ) == 0L);\n    assert(candidate(\"U\") == 1L);\n    assert(candidate(\"\") ==\
    \ 0L);\n    assert(candidate(\"EEEE\") == 2L);\n}\nvoid main(){}"
  status: SyntaxError
  stderr: '/tmp/tmpbnddjpmc.d(20): Error: undefined identifier `isupper`

    Failed: ["dmd", "-unittest", "-v", "-o-", "/tmp/tmpbnddjpmc.d", "-I/tmp"]

    '
  stdout: ''
  timestamp: 1660163028
- exit_code: 1
  program: "import std.math;\n/*\n\n    Given a string s, count the number of uppercase\
    \ vowels in even indices.\n    \n    For example:\n    >>> count_upper(\"aBCdEf\"\
    )\n    1L\n    >>> count_upper(\"abcdefg\")\n    0L\n    >>> count_upper(\"dBBE\"\
    )\n    0L\n    \n*/\nlong count_upper(string s) \n{\n    long count = 0;\n   \
    \ foreach(i, c; s)\n    {\n        if(i % 2 == 0 && c >= 'A' && c <= 'Z')\n  \
    \          count++;\n    }\n    return count;\n}\nunittest\n{\n    alias candidate\
    \ = count_upper;\n\n    assert(candidate(\"aBCdEf\") == 1L);\n    assert(candidate(\"\
    abcdefg\") == 0L);\n    assert(candidate(\"dBBE\") == 0L);\n    assert(candidate(\"\
    B\") == 0L);\n    assert(candidate(\"U\") == 1L);\n    assert(candidate(\"\")\
    \ == 0L);\n    assert(candidate(\"EEEE\") == 2L);\n}\nvoid main(){}"
  status: Exception
  stderr: 'core.exception.AssertError@/tmp/tmp2l5es36k.d(29): unittest failure

    ----------------

    ??:? _d_unittestp [0x427e3d]

    ??:? void tmp2l5es36k.__unittest_L25_C1() [0x427ab2]

    ??:? void tmp2l5es36k.__modtest() [0x427bc0]

    ??:? int core.runtime.runModuleUnitTests().__foreachbody2(object.ModuleInfo*)
    [0x42bb63]

    ??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)).__lambda2(immutable(object.ModuleInfo*))
    [0x42a9f6]

    ??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))).__foreachbody2(ref
    rt.sections_elf_shared.DSO) [0x42fb89]

    ??:? int rt.sections_elf_shared.DSO.opApply(scope int delegate(ref rt.sections_elf_shared.DSO))
    [0x430038]

    ??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*)))
    [0x42fb15]

    ??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)) [0x42a9cd]

    ??:? runModuleUnitTests [0x42b939]

    ??:? void rt.dmain2._d_run_main(int, char**, extern (C) int function(char[][])*).runAll()
    [0x42828c]

    ??:? void rt.dmain2._d_r'
  stdout: ''
  timestamp: 1660163029
- exit_code: 1
  program: "import std.math;\n/*\n\n    Given a string s, count the number of uppercase\
    \ vowels in even indices.\n    \n    For example:\n    >>> count_upper(\"aBCdEf\"\
    )\n    1L\n    >>> count_upper(\"abcdefg\")\n    0L\n    >>> count_upper(\"dBBE\"\
    )\n    0L\n    \n*/\nlong count_upper(string s) \n{\n    long count = 0;\n   \
    \ foreach(i, c; s)\n    {\n        if(i % 2 == 0 && isupper(c))\n            count++;\n\
    \    }\n    return count;\n}\nunittest\n{\n    alias candidate = count_upper;\n\
    \n    assert(candidate(\"aBCdEf\") == 1L);\n    assert(candidate(\"abcdefg\")\
    \ == 0L);\n    assert(candidate(\"dBBE\") == 0L);\n    assert(candidate(\"B\"\
    ) == 0L);\n    assert(candidate(\"U\") == 1L);\n    assert(candidate(\"\") ==\
    \ 0L);\n    assert(candidate(\"EEEE\") == 2L);\n}\nvoid main(){}"
  status: SyntaxError
  stderr: '/tmp/tmpbnddjpmc.d(20): Error: undefined identifier `isupper`

    Failed: ["dmd", "-unittest", "-v", "-o-", "/tmp/tmpbnddjpmc.d", "-I/tmp"]

    '
  stdout: ''
  timestamp: 1660163028
- exit_code: 1
  program: "import std.math;\n/*\n\n    Given a string s, count the number of uppercase\
    \ vowels in even indices.\n    \n    For example:\n    >>> count_upper(\"aBCdEf\"\
    )\n    1L\n    >>> count_upper(\"abcdefg\")\n    0L\n    >>> count_upper(\"dBBE\"\
    )\n    0L\n    \n*/\nlong count_upper(string s) \n{\n    long count = 0;\n   \
    \ foreach(i, c; s)\n    {\n        if(i % 2 == 0 && c in ['A', 'E', 'I', 'O',\
    \ 'U'])\n            count++;\n    }\n    return count;\n}\nunittest\n{\n    alias\
    \ candidate = count_upper;\n\n    assert(candidate(\"aBCdEf\") == 1L);\n    assert(candidate(\"\
    abcdefg\") == 0L);\n    assert(candidate(\"dBBE\") == 0L);\n    assert(candidate(\"\
    B\") == 0L);\n    assert(candidate(\"U\") == 1L);\n    assert(candidate(\"\")\
    \ == 0L);\n    assert(candidate(\"EEEE\") == 2L);\n}\nvoid main(){}"
  status: SyntaxError
  stderr: '/tmp/tmpkk1wsjki.d(20): Error: incompatible types for `(c) in ([''A'',
    ''E'', ''I'', ''O'', ''U''])`: `immutable(char)` and `char[]`

    Failed: ["dmd", "-unittest", "-v", "-o-", "/tmp/tmpkk1wsjki.d", "-I/tmp"]

    '
  stdout: ''
  timestamp: 1660163028
- exit_code: 1
  program: "import std.math;\n/*\n\n    Given a string s, count the number of uppercase\
    \ vowels in even indices.\n    \n    For example:\n    >>> count_upper(\"aBCdEf\"\
    )\n    1L\n    >>> count_upper(\"abcdefg\")\n    0L\n    >>> count_upper(\"dBBE\"\
    )\n    0L\n    \n*/\nlong count_upper(string s) \n{\n    long count = 0;\n   \
    \ foreach(i, c; s)\n    {\n        if (i % 2 == 0 && isupper(c))\n           \
    \ count++;\n    }\n    return count;\n}\nunittest\n{\n    alias candidate = count_upper;\n\
    \n    assert(candidate(\"aBCdEf\") == 1L);\n    assert(candidate(\"abcdefg\")\
    \ == 0L);\n    assert(candidate(\"dBBE\") == 0L);\n    assert(candidate(\"B\"\
    ) == 0L);\n    assert(candidate(\"U\") == 1L);\n    assert(candidate(\"\") ==\
    \ 0L);\n    assert(candidate(\"EEEE\") == 2L);\n}\nvoid main(){}"
  status: SyntaxError
  stderr: '/tmp/tmphl4tr1v5.d(20): Error: undefined identifier `isupper`

    Failed: ["dmd", "-unittest", "-v", "-o-", "/tmp/tmphl4tr1v5.d", "-I/tmp"]

    '
  stdout: ''
  timestamp: 1660163029
- exit_code: 1
  program: "import std.math;\n/*\n\n    Given a string s, count the number of uppercase\
    \ vowels in even indices.\n    \n    For example:\n    >>> count_upper(\"aBCdEf\"\
    )\n    1L\n    >>> count_upper(\"abcdefg\")\n    0L\n    >>> count_upper(\"dBBE\"\
    )\n    0L\n    \n*/\nlong count_upper(string s) \n{\n    long count = 0;\n   \
    \ foreach(i, c; s)\n    {\n        if(i % 2 == 0 && isupper(c))\n            count++;\n\
    \    }\n    return count;\n}\nunittest\n{\n    alias candidate = count_upper;\n\
    \n    assert(candidate(\"aBCdEf\") == 1L);\n    assert(candidate(\"abcdefg\")\
    \ == 0L);\n    assert(candidate(\"dBBE\") == 0L);\n    assert(candidate(\"B\"\
    ) == 0L);\n    assert(candidate(\"U\") == 1L);\n    assert(candidate(\"\") ==\
    \ 0L);\n    assert(candidate(\"EEEE\") == 2L);\n}\nvoid main(){}"
  status: SyntaxError
  stderr: '/tmp/tmpbnddjpmc.d(20): Error: undefined identifier `isupper`

    Failed: ["dmd", "-unittest", "-v", "-o-", "/tmp/tmpbnddjpmc.d", "-I/tmp"]

    '
  stdout: ''
  timestamp: 1660163028
- exit_code: 1
  program: "import std.math;\n/*\n\n    Given a string s, count the number of uppercase\
    \ vowels in even indices.\n    \n    For example:\n    >>> count_upper(\"aBCdEf\"\
    )\n    1L\n    >>> count_upper(\"abcdefg\")\n    0L\n    >>> count_upper(\"dBBE\"\
    )\n    0L\n    \n*/\nlong count_upper(string s) \n{\n    long count = 0;\n   \
    \ foreach(i, c; s)\n    {\n        if(i % 2 == 0 && c == 'A' || c == 'E' || c\
    \ == 'I' || c == 'O' || c == 'U')\n        {\n            count++;\n        }\n\
    \    }\n    return count;\n}\nunittest\n{\n    alias candidate = count_upper;\n\
    \n    assert(candidate(\"aBCdEf\") == 1L);\n    assert(candidate(\"abcdefg\")\
    \ == 0L);\n    assert(candidate(\"dBBE\") == 0L);\n    assert(candidate(\"B\"\
    ) == 0L);\n    assert(candidate(\"U\") == 1L);\n    assert(candidate(\"\") ==\
    \ 0L);\n    assert(candidate(\"EEEE\") == 2L);\n}\nvoid main(){}"
  status: Exception
  stderr: 'core.exception.AssertError@/tmp/tmpq101czay.d(33): unittest failure

    ----------------

    ??:? _d_unittestp [0x427e55]

    ??:? void tmpq101czay.__unittest_L27_C1() [0x427b1a]

    ??:? void tmpq101czay.__modtest() [0x427bd4]

    ??:? int core.runtime.runModuleUnitTests().__foreachbody2(object.ModuleInfo*)
    [0x42bb7b]

    ??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)).__lambda2(immutable(object.ModuleInfo*))
    [0x42aa0e]

    ??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))).__foreachbody2(ref
    rt.sections_elf_shared.DSO) [0x42fba1]

    ??:? int rt.sections_elf_shared.DSO.opApply(scope int delegate(ref rt.sections_elf_shared.DSO))
    [0x430050]

    ??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*)))
    [0x42fb2d]

    ??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)) [0x42a9e5]

    ??:? runModuleUnitTests [0x42b951]

    ??:? void rt.dmain2._d_run_main(int, char**, extern (C) int function(char[][])*).runAll()
    [0x4282a4]

    ??:? void rt.dmain2._d_r'
  stdout: ''
  timestamp: 1660163029
- exit_code: 1
  program: "import std.math;\n/*\n\n    Given a string s, count the number of uppercase\
    \ vowels in even indices.\n    \n    For example:\n    >>> count_upper(\"aBCdEf\"\
    )\n    1L\n    >>> count_upper(\"abcdefg\")\n    0L\n    >>> count_upper(\"dBBE\"\
    )\n    0L\n    \n*/\nlong count_upper(string s) \n{\n    long count = 0;\n   \
    \ foreach(i, c; s)\n    {\n        if(i % 2 == 0 && c in \"AEIOU\")\n        \
    \    count++;\n    }\n    return count;\n}\nunittest\n{\n    alias candidate =\
    \ count_upper;\n\n    assert(candidate(\"aBCdEf\") == 1L);\n    assert(candidate(\"\
    abcdefg\") == 0L);\n    assert(candidate(\"dBBE\") == 0L);\n    assert(candidate(\"\
    B\") == 0L);\n    assert(candidate(\"U\") == 1L);\n    assert(candidate(\"\")\
    \ == 0L);\n    assert(candidate(\"EEEE\") == 2L);\n}\nvoid main(){}"
  status: SyntaxError
  stderr: '/tmp/tmpufozqks9.d(20): Error: incompatible types for `(c) in ("AEIOU")`:
    `immutable(char)` and `string`

    Failed: ["dmd", "-unittest", "-v", "-o-", "/tmp/tmpufozqks9.d", "-I/tmp"]

    '
  stdout: ''
  timestamp: 1660163029
- exit_code: 1
  program: "import std.math;\n/*\n\n    Given a string s, count the number of uppercase\
    \ vowels in even indices.\n    \n    For example:\n    >>> count_upper(\"aBCdEf\"\
    )\n    1L\n    >>> count_upper(\"abcdefg\")\n    0L\n    >>> count_upper(\"dBBE\"\
    )\n    0L\n    \n*/\nlong count_upper(string s) \n{\n    long count = 0;\n   \
    \ foreach(i, c; s)\n    {\n        if(i % 2 == 0 && isupper(c))\n            count++;\n\
    \    }\n    return count;\n}\nunittest\n{\n    alias candidate = count_upper;\n\
    \n    assert(candidate(\"aBCdEf\") == 1L);\n    assert(candidate(\"abcdefg\")\
    \ == 0L);\n    assert(candidate(\"dBBE\") == 0L);\n    assert(candidate(\"B\"\
    ) == 0L);\n    assert(candidate(\"U\") == 1L);\n    assert(candidate(\"\") ==\
    \ 0L);\n    assert(candidate(\"EEEE\") == 2L);\n}\nvoid main(){}"
  status: SyntaxError
  stderr: '/tmp/tmpbnddjpmc.d(20): Error: undefined identifier `isupper`

    Failed: ["dmd", "-unittest", "-v", "-o-", "/tmp/tmpbnddjpmc.d", "-I/tmp"]

    '
  stdout: ''
  timestamp: 1660163028
- exit_code: 1
  program: "import std.math;\n/*\n\n    Given a string s, count the number of uppercase\
    \ vowels in even indices.\n    \n    For example:\n    >>> count_upper(\"aBCdEf\"\
    )\n    1L\n    >>> count_upper(\"abcdefg\")\n    0L\n    >>> count_upper(\"dBBE\"\
    )\n    0L\n    \n*/\nlong count_upper(string s) \n{\n    long count = 0;\n   \
    \ foreach(i, c; s)\n    {\n        if(i % 2 == 0 && isUpper(c))\n            count++;\n\
    \    }\n    return count;\n}\nunittest\n{\n    alias candidate = count_upper;\n\
    \n    assert(candidate(\"aBCdEf\") == 1L);\n    assert(candidate(\"abcdefg\")\
    \ == 0L);\n    assert(candidate(\"dBBE\") == 0L);\n    assert(candidate(\"B\"\
    ) == 0L);\n    assert(candidate(\"U\") == 1L);\n    assert(candidate(\"\") ==\
    \ 0L);\n    assert(candidate(\"EEEE\") == 2L);\n}\nvoid main(){}"
  status: SyntaxError
  stderr: '/tmp/tmpjziclffi.d(20): Error: undefined identifier `isUpper`

    Failed: ["dmd", "-unittest", "-v", "-o-", "/tmp/tmpjziclffi.d", "-I/tmp"]

    '
  stdout: ''
  timestamp: 1660163028
- exit_code: 1
  program: "import std.math;\n/*\n\n    Given a string s, count the number of uppercase\
    \ vowels in even indices.\n    \n    For example:\n    >>> count_upper(\"aBCdEf\"\
    )\n    1L\n    >>> count_upper(\"abcdefg\")\n    0L\n    >>> count_upper(\"dBBE\"\
    )\n    0L\n    \n*/\nlong count_upper(string s) \n{\n    long count = 0;\n   \
    \ foreach(i, c; s)\n    {\n        if(i % 2 == 0 && isUpper(c))\n            count++;\n\
    \    }\n    return count;\n}\nunittest\n{\n    alias candidate = count_upper;\n\
    \n    assert(candidate(\"aBCdEf\") == 1L);\n    assert(candidate(\"abcdefg\")\
    \ == 0L);\n    assert(candidate(\"dBBE\") == 0L);\n    assert(candidate(\"B\"\
    ) == 0L);\n    assert(candidate(\"U\") == 1L);\n    assert(candidate(\"\") ==\
    \ 0L);\n    assert(candidate(\"EEEE\") == 2L);\n}\nvoid main(){}"
  status: SyntaxError
  stderr: '/tmp/tmpjziclffi.d(20): Error: undefined identifier `isUpper`

    Failed: ["dmd", "-unittest", "-v", "-o-", "/tmp/tmpjziclffi.d", "-I/tmp"]

    '
  stdout: ''
  timestamp: 1660163028
- exit_code: 1
  program: "import std.math;\n/*\n\n    Given a string s, count the number of uppercase\
    \ vowels in even indices.\n    \n    For example:\n    >>> count_upper(\"aBCdEf\"\
    )\n    1L\n    >>> count_upper(\"abcdefg\")\n    0L\n    >>> count_upper(\"dBBE\"\
    )\n    0L\n    \n*/\nlong count_upper(string s) \n{\n    long count = 0;\n   \
    \ foreach(i, c; s)\n    {\n        if(i % 2 == 0 && isupper(c))\n            count++;\n\
    \    }\n    return count;\n}\nunittest\n{\n    alias candidate = count_upper;\n\
    \n    assert(candidate(\"aBCdEf\") == 1L);\n    assert(candidate(\"abcdefg\")\
    \ == 0L);\n    assert(candidate(\"dBBE\") == 0L);\n    assert(candidate(\"B\"\
    ) == 0L);\n    assert(candidate(\"U\") == 1L);\n    assert(candidate(\"\") ==\
    \ 0L);\n    assert(candidate(\"EEEE\") == 2L);\n}\nvoid main(){}"
  status: SyntaxError
  stderr: '/tmp/tmpbnddjpmc.d(20): Error: undefined identifier `isupper`

    Failed: ["dmd", "-unittest", "-v", "-o-", "/tmp/tmpbnddjpmc.d", "-I/tmp"]

    '
  stdout: ''
  timestamp: 1660163028
- exit_code: 1
  program: "import std.math;\n/*\n\n    Given a string s, count the number of uppercase\
    \ vowels in even indices.\n    \n    For example:\n    >>> count_upper(\"aBCdEf\"\
    )\n    1L\n    >>> count_upper(\"abcdefg\")\n    0L\n    >>> count_upper(\"dBBE\"\
    )\n    0L\n    \n*/\nlong count_upper(string s) \n{\n    long count = 0;\n   \
    \ foreach(i, c; s)\n    {\n        if(i % 2 == 0 && c == toupper(c))\n       \
    \ {\n            count++;\n        }\n    }\n    return count;\n}\nunittest\n\
    {\n    alias candidate = count_upper;\n\n    assert(candidate(\"aBCdEf\") == 1L);\n\
    \    assert(candidate(\"abcdefg\") == 0L);\n    assert(candidate(\"dBBE\") ==\
    \ 0L);\n    assert(candidate(\"B\") == 0L);\n    assert(candidate(\"U\") == 1L);\n\
    \    assert(candidate(\"\") == 0L);\n    assert(candidate(\"EEEE\") == 2L);\n\
    }\nvoid main(){}"
  status: SyntaxError
  stderr: '/tmp/tmpbwih8q81.d(20): Error: undefined identifier `toupper`

    Failed: ["dmd", "-unittest", "-v", "-o-", "/tmp/tmpbwih8q81.d", "-I/tmp"]

    '
  stdout: ''
  timestamp: 1660163028
- exit_code: 1
  program: "import std.math;\n/*\n\n    Given a string s, count the number of uppercase\
    \ vowels in even indices.\n    \n    For example:\n    >>> count_upper(\"aBCdEf\"\
    )\n    1L\n    >>> count_upper(\"abcdefg\")\n    0L\n    >>> count_upper(\"dBBE\"\
    )\n    0L\n    \n*/\nlong count_upper(string s) \n{\n    long count = 0;\n   \
    \ foreach(immutable i, immutable c; s)\n    {\n        if(i % 2 == 0 && c in \"\
    AEIOU\")\n            count++;\n    }\n    return count;\n}\nunittest\n{\n   \
    \ alias candidate = count_upper;\n\n    assert(candidate(\"aBCdEf\") == 1L);\n\
    \    assert(candidate(\"abcdefg\") == 0L);\n    assert(candidate(\"dBBE\") ==\
    \ 0L);\n    assert(candidate(\"B\") == 0L);\n    assert(candidate(\"U\") == 1L);\n\
    \    assert(candidate(\"\") == 0L);\n    assert(candidate(\"EEEE\") == 2L);\n\
    }\nvoid main(){}"
  status: SyntaxError
  stderr: '/tmp/tmpkskmk_a9.d(20): Error: incompatible types for `(c) in ("AEIOU")`:
    `immutable(char)` and `string`

    Failed: ["dmd", "-unittest", "-v", "-o-", "/tmp/tmpkskmk_a9.d", "-I/tmp"]

    '
  stdout: ''
  timestamp: 1660163028
- exit_code: 1
  program: "import std.math;\n/*\n\n    Given a string s, count the number of uppercase\
    \ vowels in even indices.\n    \n    For example:\n    >>> count_upper(\"aBCdEf\"\
    )\n    1L\n    >>> count_upper(\"abcdefg\")\n    0L\n    >>> count_upper(\"dBBE\"\
    )\n    0L\n    \n*/\nlong count_upper(string s) \n{\n    long count = 0;\n   \
    \ foreach(i, c; s)\n    {\n        if(i % 2 == 0 && isUpper(c))\n            count++;\n\
    \    }\n    return count;\n}\nunittest\n{\n    alias candidate = count_upper;\n\
    \n    assert(candidate(\"aBCdEf\") == 1L);\n    assert(candidate(\"abcdefg\")\
    \ == 0L);\n    assert(candidate(\"dBBE\") == 0L);\n    assert(candidate(\"B\"\
    ) == 0L);\n    assert(candidate(\"U\") == 1L);\n    assert(candidate(\"\") ==\
    \ 0L);\n    assert(candidate(\"EEEE\") == 2L);\n}\nvoid main(){}"
  status: SyntaxError
  stderr: '/tmp/tmpjziclffi.d(20): Error: undefined identifier `isUpper`

    Failed: ["dmd", "-unittest", "-v", "-o-", "/tmp/tmpjziclffi.d", "-I/tmp"]

    '
  stdout: ''
  timestamp: 1660163028
- exit_code: 1
  program: "import std.math;\n/*\n\n    Given a string s, count the number of uppercase\
    \ vowels in even indices.\n    \n    For example:\n    >>> count_upper(\"aBCdEf\"\
    )\n    1L\n    >>> count_upper(\"abcdefg\")\n    0L\n    >>> count_upper(\"dBBE\"\
    )\n    0L\n    \n*/\nlong count_upper(string s) \n{\n    long count = 0;\n   \
    \ foreach(i, c; s)\n    {\n        if(i % 2 == 0 && isUpper(c))\n            count++;\n\
    \    }\n    return count;\n}\nunittest\n{\n    alias candidate = count_upper;\n\
    \n    assert(candidate(\"aBCdEf\") == 1L);\n    assert(candidate(\"abcdefg\")\
    \ == 0L);\n    assert(candidate(\"dBBE\") == 0L);\n    assert(candidate(\"B\"\
    ) == 0L);\n    assert(candidate(\"U\") == 1L);\n    assert(candidate(\"\") ==\
    \ 0L);\n    assert(candidate(\"EEEE\") == 2L);\n}\nvoid main(){}"
  status: SyntaxError
  stderr: '/tmp/tmpjziclffi.d(20): Error: undefined identifier `isUpper`

    Failed: ["dmd", "-unittest", "-v", "-o-", "/tmp/tmpjziclffi.d", "-I/tmp"]

    '
  stdout: ''
  timestamp: 1660163028
- exit_code: 1
  program: "import std.math;\n/*\n\n    Given a string s, count the number of uppercase\
    \ vowels in even indices.\n    \n    For example:\n    >>> count_upper(\"aBCdEf\"\
    )\n    1L\n    >>> count_upper(\"abcdefg\")\n    0L\n    >>> count_upper(\"dBBE\"\
    )\n    0L\n    \n*/\nlong count_upper(string s) \n{\n    long count = 0;\n   \
    \ foreach(i, c; s)\n    {\n        if(i % 2 == 0 && c >= 'A' && c <= 'Z')\n  \
    \          count++;\n    }\n    return count;\n}\nunittest\n{\n    alias candidate\
    \ = count_upper;\n\n    assert(candidate(\"aBCdEf\") == 1L);\n    assert(candidate(\"\
    abcdefg\") == 0L);\n    assert(candidate(\"dBBE\") == 0L);\n    assert(candidate(\"\
    B\") == 0L);\n    assert(candidate(\"U\") == 1L);\n    assert(candidate(\"\")\
    \ == 0L);\n    assert(candidate(\"EEEE\") == 2L);\n}\nvoid main(){}"
  status: Exception
  stderr: 'core.exception.AssertError@/tmp/tmp2l5es36k.d(29): unittest failure

    ----------------

    ??:? _d_unittestp [0x427e3d]

    ??:? void tmp2l5es36k.__unittest_L25_C1() [0x427ab2]

    ??:? void tmp2l5es36k.__modtest() [0x427bc0]

    ??:? int core.runtime.runModuleUnitTests().__foreachbody2(object.ModuleInfo*)
    [0x42bb63]

    ??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)).__lambda2(immutable(object.ModuleInfo*))
    [0x42a9f6]

    ??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))).__foreachbody2(ref
    rt.sections_elf_shared.DSO) [0x42fb89]

    ??:? int rt.sections_elf_shared.DSO.opApply(scope int delegate(ref rt.sections_elf_shared.DSO))
    [0x430038]

    ??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*)))
    [0x42fb15]

    ??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)) [0x42a9cd]

    ??:? runModuleUnitTests [0x42b939]

    ??:? void rt.dmain2._d_run_main(int, char**, extern (C) int function(char[][])*).runAll()
    [0x42828c]

    ??:? void rt.dmain2._d_r'
  stdout: ''
  timestamp: 1660163029
- exit_code: 1
  program: "import std.math;\n/*\n\n    Given a string s, count the number of uppercase\
    \ vowels in even indices.\n    \n    For example:\n    >>> count_upper(\"aBCdEf\"\
    )\n    1L\n    >>> count_upper(\"abcdefg\")\n    0L\n    >>> count_upper(\"dBBE\"\
    )\n    0L\n    \n*/\nlong count_upper(string s) \n{\n    long count = 0;\n   \
    \ foreach(i, c; s)\n    {\n        if(i % 2 == 0 && c >= 'A' && c <= 'Z')\n  \
    \          count++;\n    }\n    return count;\n}\nunittest\n{\n    alias candidate\
    \ = count_upper;\n\n    assert(candidate(\"aBCdEf\") == 1L);\n    assert(candidate(\"\
    abcdefg\") == 0L);\n    assert(candidate(\"dBBE\") == 0L);\n    assert(candidate(\"\
    B\") == 0L);\n    assert(candidate(\"U\") == 1L);\n    assert(candidate(\"\")\
    \ == 0L);\n    assert(candidate(\"EEEE\") == 2L);\n}\nvoid main(){}"
  status: Exception
  stderr: 'core.exception.AssertError@/tmp/tmp2l5es36k.d(29): unittest failure

    ----------------

    ??:? _d_unittestp [0x427e3d]

    ??:? void tmp2l5es36k.__unittest_L25_C1() [0x427ab2]

    ??:? void tmp2l5es36k.__modtest() [0x427bc0]

    ??:? int core.runtime.runModuleUnitTests().__foreachbody2(object.ModuleInfo*)
    [0x42bb63]

    ??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)).__lambda2(immutable(object.ModuleInfo*))
    [0x42a9f6]

    ??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))).__foreachbody2(ref
    rt.sections_elf_shared.DSO) [0x42fb89]

    ??:? int rt.sections_elf_shared.DSO.opApply(scope int delegate(ref rt.sections_elf_shared.DSO))
    [0x430038]

    ??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*)))
    [0x42fb15]

    ??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)) [0x42a9cd]

    ??:? runModuleUnitTests [0x42b939]

    ??:? void rt.dmain2._d_run_main(int, char**, extern (C) int function(char[][])*).runAll()
    [0x42828c]

    ??:? void rt.dmain2._d_r'
  stdout: ''
  timestamp: 1660163029
- exit_code: 1
  program: "import std.math;\n/*\n\n    Given a string s, count the number of uppercase\
    \ vowels in even indices.\n    \n    For example:\n    >>> count_upper(\"aBCdEf\"\
    )\n    1L\n    >>> count_upper(\"abcdefg\")\n    0L\n    >>> count_upper(\"dBBE\"\
    )\n    0L\n    \n*/\nlong count_upper(string s) \n{\n    long count = 0;\n   \
    \ foreach(i, c; s)\n    {\n        if (i % 2 == 0 && isupper(c))\n           \
    \ count++;\n    }\n    return count;\n}\nunittest\n{\n    alias candidate = count_upper;\n\
    \n    assert(candidate(\"aBCdEf\") == 1L);\n    assert(candidate(\"abcdefg\")\
    \ == 0L);\n    assert(candidate(\"dBBE\") == 0L);\n    assert(candidate(\"B\"\
    ) == 0L);\n    assert(candidate(\"U\") == 1L);\n    assert(candidate(\"\") ==\
    \ 0L);\n    assert(candidate(\"EEEE\") == 2L);\n}\nvoid main(){}"
  status: SyntaxError
  stderr: '/tmp/tmphl4tr1v5.d(20): Error: undefined identifier `isupper`

    Failed: ["dmd", "-unittest", "-v", "-o-", "/tmp/tmphl4tr1v5.d", "-I/tmp"]

    '
  stdout: ''
  timestamp: 1660163029
- exit_code: 1
  program: "import std.math;\n/*\n\n    Given a string s, count the number of uppercase\
    \ vowels in even indices.\n    \n    For example:\n    >>> count_upper(\"aBCdEf\"\
    )\n    1L\n    >>> count_upper(\"abcdefg\")\n    0L\n    >>> count_upper(\"dBBE\"\
    )\n    0L\n    \n*/\nlong count_upper(string s) \n{\n    long count = 0;\n   \
    \ foreach(immutable i, immutable c; s)\n    {\n        if(i % 2 == 0 && c in \"\
    AEIOU\")\n            count++;\n    }\n    return count;\n}\nunittest\n{\n   \
    \ alias candidate = count_upper;\n\n    assert(candidate(\"aBCdEf\") == 1L);\n\
    \    assert(candidate(\"abcdefg\") == 0L);\n    assert(candidate(\"dBBE\") ==\
    \ 0L);\n    assert(candidate(\"B\") == 0L);\n    assert(candidate(\"U\") == 1L);\n\
    \    assert(candidate(\"\") == 0L);\n    assert(candidate(\"EEEE\") == 2L);\n\
    }\nvoid main(){}"
  status: SyntaxError
  stderr: '/tmp/tmpkskmk_a9.d(20): Error: incompatible types for `(c) in ("AEIOU")`:
    `immutable(char)` and `string`

    Failed: ["dmd", "-unittest", "-v", "-o-", "/tmp/tmpkskmk_a9.d", "-I/tmp"]

    '
  stdout: ''
  timestamp: 1660163028
- exit_code: 1
  program: "import std.math;\n/*\n\n    Given a string s, count the number of uppercase\
    \ vowels in even indices.\n    \n    For example:\n    >>> count_upper(\"aBCdEf\"\
    )\n    1L\n    >>> count_upper(\"abcdefg\")\n    0L\n    >>> count_upper(\"dBBE\"\
    )\n    0L\n    \n*/\nlong count_upper(string s) \n{\n    long count = 0;\n   \
    \ foreach(i, c; s)\n    {\n        if(i % 2 == 0 && c == 'A' || c == 'E' || c\
    \ == 'I' || c == 'O' || c == 'U')\n        {\n            count++;\n        }\n\
    \    }\n    return count;\n}\nunittest\n{\n    alias candidate = count_upper;\n\
    \n    assert(candidate(\"aBCdEf\") == 1L);\n    assert(candidate(\"abcdefg\")\
    \ == 0L);\n    assert(candidate(\"dBBE\") == 0L);\n    assert(candidate(\"B\"\
    ) == 0L);\n    assert(candidate(\"U\") == 1L);\n    assert(candidate(\"\") ==\
    \ 0L);\n    assert(candidate(\"EEEE\") == 2L);\n}\nvoid main(){}"
  status: Exception
  stderr: 'core.exception.AssertError@/tmp/tmpq101czay.d(33): unittest failure

    ----------------

    ??:? _d_unittestp [0x427e55]

    ??:? void tmpq101czay.__unittest_L27_C1() [0x427b1a]

    ??:? void tmpq101czay.__modtest() [0x427bd4]

    ??:? int core.runtime.runModuleUnitTests().__foreachbody2(object.ModuleInfo*)
    [0x42bb7b]

    ??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)).__lambda2(immutable(object.ModuleInfo*))
    [0x42aa0e]

    ??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))).__foreachbody2(ref
    rt.sections_elf_shared.DSO) [0x42fba1]

    ??:? int rt.sections_elf_shared.DSO.opApply(scope int delegate(ref rt.sections_elf_shared.DSO))
    [0x430050]

    ??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*)))
    [0x42fb2d]

    ??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)) [0x42a9e5]

    ??:? runModuleUnitTests [0x42b951]

    ??:? void rt.dmain2._d_run_main(int, char**, extern (C) int function(char[][])*).runAll()
    [0x4282a4]

    ??:? void rt.dmain2._d_r'
  stdout: ''
  timestamp: 1660163029
- exit_code: 1
  program: "import std.math;\n/*\n\n    Given a string s, count the number of uppercase\
    \ vowels in even indices.\n    \n    For example:\n    >>> count_upper(\"aBCdEf\"\
    )\n    1L\n    >>> count_upper(\"abcdefg\")\n    0L\n    >>> count_upper(\"dBBE\"\
    )\n    0L\n    \n*/\nlong count_upper(string s) \n{\n    long count = 0;\n   \
    \ foreach(i, c; s)\n    {\n        if (i % 2 == 0 && isupper(c))\n           \
    \ count++;\n    }\n    return count;\n}\nunittest\n{\n    alias candidate = count_upper;\n\
    \n    assert(candidate(\"aBCdEf\") == 1L);\n    assert(candidate(\"abcdefg\")\
    \ == 0L);\n    assert(candidate(\"dBBE\") == 0L);\n    assert(candidate(\"B\"\
    ) == 0L);\n    assert(candidate(\"U\") == 1L);\n    assert(candidate(\"\") ==\
    \ 0L);\n    assert(candidate(\"EEEE\") == 2L);\n}\nvoid main(){}"
  status: SyntaxError
  stderr: '/tmp/tmphl4tr1v5.d(20): Error: undefined identifier `isupper`

    Failed: ["dmd", "-unittest", "-v", "-o-", "/tmp/tmphl4tr1v5.d", "-I/tmp"]

    '
  stdout: ''
  timestamp: 1660163029
- exit_code: 1
  program: "import std.math;\n/*\n\n    Given a string s, count the number of uppercase\
    \ vowels in even indices.\n    \n    For example:\n    >>> count_upper(\"aBCdEf\"\
    )\n    1L\n    >>> count_upper(\"abcdefg\")\n    0L\n    >>> count_upper(\"dBBE\"\
    )\n    0L\n    \n*/\nlong count_upper(string s) \n{\n    long count = 0;\n   \
    \ foreach(i, c; s)\n    {\n        if(isEven(i) && isUpper(c))\n        {\n  \
    \          count++;\n        }\n    }\n    return count;\n}\nunittest\n{\n   \
    \ alias candidate = count_upper;\n\n    assert(candidate(\"aBCdEf\") == 1L);\n\
    \    assert(candidate(\"abcdefg\") == 0L);\n    assert(candidate(\"dBBE\") ==\
    \ 0L);\n    assert(candidate(\"B\") == 0L);\n    assert(candidate(\"U\") == 1L);\n\
    \    assert(candidate(\"\") == 0L);\n    assert(candidate(\"EEEE\") == 2L);\n\
    }\nvoid main(){}"
  status: SyntaxError
  stderr: '/tmp/tmpkxnnctd1.d(20): Error: undefined identifier `isEven`

    /tmp/tmpkxnnctd1.d(20): Error: undefined identifier `isUpper`

    Failed: ["dmd", "-unittest", "-v", "-o-", "/tmp/tmpkxnnctd1.d", "-I/tmp"]

    '
  stdout: ''
  timestamp: 1660163028
- exit_code: 1
  program: "import std.math;\n/*\n\n    Given a string s, count the number of uppercase\
    \ vowels in even indices.\n    \n    For example:\n    >>> count_upper(\"aBCdEf\"\
    )\n    1L\n    >>> count_upper(\"abcdefg\")\n    0L\n    >>> count_upper(\"dBBE\"\
    )\n    0L\n    \n*/\nlong count_upper(string s) \n{\n    long count = 0;\n   \
    \ foreach(i, c; s)\n    {\n        if(i % 2 == 0 && isupper(c))\n            count++;\n\
    \    }\n    return count;\n}\nunittest\n{\n    alias candidate = count_upper;\n\
    \n    assert(candidate(\"aBCdEf\") == 1L);\n    assert(candidate(\"abcdefg\")\
    \ == 0L);\n    assert(candidate(\"dBBE\") == 0L);\n    assert(candidate(\"B\"\
    ) == 0L);\n    assert(candidate(\"U\") == 1L);\n    assert(candidate(\"\") ==\
    \ 0L);\n    assert(candidate(\"EEEE\") == 2L);\n}\nvoid main(){}"
  status: SyntaxError
  stderr: '/tmp/tmpbnddjpmc.d(20): Error: undefined identifier `isupper`

    Failed: ["dmd", "-unittest", "-v", "-o-", "/tmp/tmpbnddjpmc.d", "-I/tmp"]

    '
  stdout: ''
  timestamp: 1660163028
- exit_code: 1
  program: "import std.math;\n/*\n\n    Given a string s, count the number of uppercase\
    \ vowels in even indices.\n    \n    For example:\n    >>> count_upper(\"aBCdEf\"\
    )\n    1L\n    >>> count_upper(\"abcdefg\")\n    0L\n    >>> count_upper(\"dBBE\"\
    )\n    0L\n    \n*/\nlong count_upper(string s) \n{\n    long count = 0;\n   \
    \ foreach(i, c; s)\n    {\n        if(i % 2 == 0 && c in \"AEIOU\")\n        \
    \    count++;\n    }\n    return count;\n}\nunittest\n{\n    alias candidate =\
    \ count_upper;\n\n    assert(candidate(\"aBCdEf\") == 1L);\n    assert(candidate(\"\
    abcdefg\") == 0L);\n    assert(candidate(\"dBBE\") == 0L);\n    assert(candidate(\"\
    B\") == 0L);\n    assert(candidate(\"U\") == 1L);\n    assert(candidate(\"\")\
    \ == 0L);\n    assert(candidate(\"EEEE\") == 2L);\n}\nvoid main(){}"
  status: SyntaxError
  stderr: '/tmp/tmpufozqks9.d(20): Error: incompatible types for `(c) in ("AEIOU")`:
    `immutable(char)` and `string`

    Failed: ["dmd", "-unittest", "-v", "-o-", "/tmp/tmpufozqks9.d", "-I/tmp"]

    '
  stdout: ''
  timestamp: 1660163029
- exit_code: 1
  program: "import std.math;\n/*\n\n    Given a string s, count the number of uppercase\
    \ vowels in even indices.\n    \n    For example:\n    >>> count_upper(\"aBCdEf\"\
    )\n    1L\n    >>> count_upper(\"abcdefg\")\n    0L\n    >>> count_upper(\"dBBE\"\
    )\n    0L\n    \n*/\nlong count_upper(string s) \n{\n    long count = 0;\n   \
    \ foreach(i, c; s)\n    {\n        if(i % 2 == 0 && isupper(c))\n            count++;\n\
    \    }\n    return count;\n}\nunittest\n{\n    alias candidate = count_upper;\n\
    \n    assert(candidate(\"aBCdEf\") == 1L);\n    assert(candidate(\"abcdefg\")\
    \ == 0L);\n    assert(candidate(\"dBBE\") == 0L);\n    assert(candidate(\"B\"\
    ) == 0L);\n    assert(candidate(\"U\") == 1L);\n    assert(candidate(\"\") ==\
    \ 0L);\n    assert(candidate(\"EEEE\") == 2L);\n}\nvoid main(){}"
  status: SyntaxError
  stderr: '/tmp/tmpbnddjpmc.d(20): Error: undefined identifier `isupper`

    Failed: ["dmd", "-unittest", "-v", "-o-", "/tmp/tmpbnddjpmc.d", "-I/tmp"]

    '
  stdout: ''
  timestamp: 1660163028
- exit_code: 1
  program: "import std.math;\n/*\n\n    Given a string s, count the number of uppercase\
    \ vowels in even indices.\n    \n    For example:\n    >>> count_upper(\"aBCdEf\"\
    )\n    1L\n    >>> count_upper(\"abcdefg\")\n    0L\n    >>> count_upper(\"dBBE\"\
    )\n    0L\n    \n*/\nlong count_upper(string s) \n{\n    long count = 0;\n   \
    \ foreach(immutable i, immutable c; s)\n    {\n        if(i % 2 == 0 && c == toUpper(c))\n\
    \        {\n            count++;\n        }\n    }\n    return count;\n}\nunittest\n\
    {\n    alias candidate = count_upper;\n\n    assert(candidate(\"aBCdEf\") == 1L);\n\
    \    assert(candidate(\"abcdefg\") == 0L);\n    assert(candidate(\"dBBE\") ==\
    \ 0L);\n    assert(candidate(\"B\") == 0L);\n    assert(candidate(\"U\") == 1L);\n\
    \    assert(candidate(\"\") == 0L);\n    assert(candidate(\"EEEE\") == 2L);\n\
    }\nvoid main(){}"
  status: SyntaxError
  stderr: '/tmp/tmp5e0lf8t0.d(20): Error: undefined identifier `toUpper`

    Failed: ["dmd", "-unittest", "-v", "-o-", "/tmp/tmp5e0lf8t0.d", "-I/tmp"]

    '
  stdout: ''
  timestamp: 1660163029
- exit_code: 1
  program: "import std.math;\n/*\n\n    Given a string s, count the number of uppercase\
    \ vowels in even indices.\n    \n    For example:\n    >>> count_upper(\"aBCdEf\"\
    )\n    1L\n    >>> count_upper(\"abcdefg\")\n    0L\n    >>> count_upper(\"dBBE\"\
    )\n    0L\n    \n*/\nlong count_upper(string s) \n{\n    long count = 0;\n   \
    \ foreach(i, c; s)\n    {\n        if(i % 2 == 0 && isupper(c))\n            count++;\n\
    \    }\n    return count;\n}\nunittest\n{\n    alias candidate = count_upper;\n\
    \n    assert(candidate(\"aBCdEf\") == 1L);\n    assert(candidate(\"abcdefg\")\
    \ == 0L);\n    assert(candidate(\"dBBE\") == 0L);\n    assert(candidate(\"B\"\
    ) == 0L);\n    assert(candidate(\"U\") == 1L);\n    assert(candidate(\"\") ==\
    \ 0L);\n    assert(candidate(\"EEEE\") == 2L);\n}\nvoid main(){}"
  status: SyntaxError
  stderr: '/tmp/tmpbnddjpmc.d(20): Error: undefined identifier `isupper`

    Failed: ["dmd", "-unittest", "-v", "-o-", "/tmp/tmpbnddjpmc.d", "-I/tmp"]

    '
  stdout: ''
  timestamp: 1660163028
- exit_code: 1
  program: "import std.math;\n/*\n\n    Given a string s, count the number of uppercase\
    \ vowels in even indices.\n    \n    For example:\n    >>> count_upper(\"aBCdEf\"\
    )\n    1L\n    >>> count_upper(\"abcdefg\")\n    0L\n    >>> count_upper(\"dBBE\"\
    )\n    0L\n    \n*/\nlong count_upper(string s) \n{\n    long count = 0;\n   \
    \ foreach(i, c; s)\n    {\n        if(i % 2 == 0 && isupper(c))\n            count++;\n\
    \    }\n    return count;\n}\nunittest\n{\n    alias candidate = count_upper;\n\
    \n    assert(candidate(\"aBCdEf\") == 1L);\n    assert(candidate(\"abcdefg\")\
    \ == 0L);\n    assert(candidate(\"dBBE\") == 0L);\n    assert(candidate(\"B\"\
    ) == 0L);\n    assert(candidate(\"U\") == 1L);\n    assert(candidate(\"\") ==\
    \ 0L);\n    assert(candidate(\"EEEE\") == 2L);\n}\nvoid main(){}"
  status: SyntaxError
  stderr: '/tmp/tmpbnddjpmc.d(20): Error: undefined identifier `isupper`

    Failed: ["dmd", "-unittest", "-v", "-o-", "/tmp/tmpbnddjpmc.d", "-I/tmp"]

    '
  stdout: ''
  timestamp: 1660163028
- exit_code: 1
  program: "import std.math;\n/*\n\n    Given a string s, count the number of uppercase\
    \ vowels in even indices.\n    \n    For example:\n    >>> count_upper(\"aBCdEf\"\
    )\n    1L\n    >>> count_upper(\"abcdefg\")\n    0L\n    >>> count_upper(\"dBBE\"\
    )\n    0L\n    \n*/\nlong count_upper(string s) \n{\n    long count = 0;\n   \
    \ foreach(i, c; s)\n    {\n        if (i % 2 == 0 && c == toupper(c))\n      \
    \  {\n            count++;\n        }\n    }\n    return count;\n}\nunittest\n\
    {\n    alias candidate = count_upper;\n\n    assert(candidate(\"aBCdEf\") == 1L);\n\
    \    assert(candidate(\"abcdefg\") == 0L);\n    assert(candidate(\"dBBE\") ==\
    \ 0L);\n    assert(candidate(\"B\") == 0L);\n    assert(candidate(\"U\") == 1L);\n\
    \    assert(candidate(\"\") == 0L);\n    assert(candidate(\"EEEE\") == 2L);\n\
    }\nvoid main(){}"
  status: SyntaxError
  stderr: '/tmp/tmp8_ejkdpm.d(20): Error: undefined identifier `toupper`

    Failed: ["dmd", "-unittest", "-v", "-o-", "/tmp/tmp8_ejkdpm.d", "-I/tmp"]

    '
  stdout: ''
  timestamp: 1660163029
- exit_code: 1
  program: "import std.math;\n/*\n\n    Given a string s, count the number of uppercase\
    \ vowels in even indices.\n    \n    For example:\n    >>> count_upper(\"aBCdEf\"\
    )\n    1L\n    >>> count_upper(\"abcdefg\")\n    0L\n    >>> count_upper(\"dBBE\"\
    )\n    0L\n    \n*/\nlong count_upper(string s) \n{\n    long count = 0;\n   \
    \ foreach(i, c; s)\n    {\n        if(i % 2 == 0 && isupper(c))\n            count++;\n\
    \    }\n    return count;\n}\nunittest\n{\n    alias candidate = count_upper;\n\
    \n    assert(candidate(\"aBCdEf\") == 1L);\n    assert(candidate(\"abcdefg\")\
    \ == 0L);\n    assert(candidate(\"dBBE\") == 0L);\n    assert(candidate(\"B\"\
    ) == 0L);\n    assert(candidate(\"U\") == 1L);\n    assert(candidate(\"\") ==\
    \ 0L);\n    assert(candidate(\"EEEE\") == 2L);\n}\nvoid main(){}"
  status: SyntaxError
  stderr: '/tmp/tmpbnddjpmc.d(20): Error: undefined identifier `isupper`

    Failed: ["dmd", "-unittest", "-v", "-o-", "/tmp/tmpbnddjpmc.d", "-I/tmp"]

    '
  stdout: ''
  timestamp: 1660163028
- exit_code: 1
  program: "import std.math;\n/*\n\n    Given a string s, count the number of uppercase\
    \ vowels in even indices.\n    \n    For example:\n    >>> count_upper(\"aBCdEf\"\
    )\n    1L\n    >>> count_upper(\"abcdefg\")\n    0L\n    >>> count_upper(\"dBBE\"\
    )\n    0L\n    \n*/\nlong count_upper(string s) \n{\n    long count = 0;\n   \
    \ foreach(i, c; s)\n    {\n        if(i % 2 == 0 && isupper(c))\n            count++;\n\
    \    }\n    return count;\n}\nunittest\n{\n    alias candidate = count_upper;\n\
    \n    assert(candidate(\"aBCdEf\") == 1L);\n    assert(candidate(\"abcdefg\")\
    \ == 0L);\n    assert(candidate(\"dBBE\") == 0L);\n    assert(candidate(\"B\"\
    ) == 0L);\n    assert(candidate(\"U\") == 1L);\n    assert(candidate(\"\") ==\
    \ 0L);\n    assert(candidate(\"EEEE\") == 2L);\n}\nvoid main(){}"
  status: SyntaxError
  stderr: '/tmp/tmpbnddjpmc.d(20): Error: undefined identifier `isupper`

    Failed: ["dmd", "-unittest", "-v", "-o-", "/tmp/tmpbnddjpmc.d", "-I/tmp"]

    '
  stdout: ''
  timestamp: 1660163028
- exit_code: 1
  program: "import std.math;\n/*\n\n    Given a string s, count the number of uppercase\
    \ vowels in even indices.\n    \n    For example:\n    >>> count_upper(\"aBCdEf\"\
    )\n    1L\n    >>> count_upper(\"abcdefg\")\n    0L\n    >>> count_upper(\"dBBE\"\
    )\n    0L\n    \n*/\nlong count_upper(string s) \n{\n    long count = 0;\n   \
    \ foreach(i, c; s)\n    {\n        if(i % 2 == 0 && isupper(c))\n            count++;\n\
    \    }\n    return count;\n}\nunittest\n{\n    alias candidate = count_upper;\n\
    \n    assert(candidate(\"aBCdEf\") == 1L);\n    assert(candidate(\"abcdefg\")\
    \ == 0L);\n    assert(candidate(\"dBBE\") == 0L);\n    assert(candidate(\"B\"\
    ) == 0L);\n    assert(candidate(\"U\") == 1L);\n    assert(candidate(\"\") ==\
    \ 0L);\n    assert(candidate(\"EEEE\") == 2L);\n}\nvoid main(){}"
  status: SyntaxError
  stderr: '/tmp/tmpbnddjpmc.d(20): Error: undefined identifier `isupper`

    Failed: ["dmd", "-unittest", "-v", "-o-", "/tmp/tmpbnddjpmc.d", "-I/tmp"]

    '
  stdout: ''
  timestamp: 1660163028
- exit_code: 1
  program: "import std.math;\n/*\n\n    Given a string s, count the number of uppercase\
    \ vowels in even indices.\n    \n    For example:\n    >>> count_upper(\"aBCdEf\"\
    )\n    1L\n    >>> count_upper(\"abcdefg\")\n    0L\n    >>> count_upper(\"dBBE\"\
    )\n    0L\n    \n*/\nlong count_upper(string s) \n{\n    long count = 0;\n   \
    \ foreach(i, c; s)\n    {\n        if(i % 2 == 0 && c >= 'A' && c <= 'Z')\n  \
    \          count++;\n    }\n    return count;\n}\nunittest\n{\n    alias candidate\
    \ = count_upper;\n\n    assert(candidate(\"aBCdEf\") == 1L);\n    assert(candidate(\"\
    abcdefg\") == 0L);\n    assert(candidate(\"dBBE\") == 0L);\n    assert(candidate(\"\
    B\") == 0L);\n    assert(candidate(\"U\") == 1L);\n    assert(candidate(\"\")\
    \ == 0L);\n    assert(candidate(\"EEEE\") == 2L);\n}\nvoid main(){}"
  status: Exception
  stderr: 'core.exception.AssertError@/tmp/tmp2l5es36k.d(29): unittest failure

    ----------------

    ??:? _d_unittestp [0x427e3d]

    ??:? void tmp2l5es36k.__unittest_L25_C1() [0x427ab2]

    ??:? void tmp2l5es36k.__modtest() [0x427bc0]

    ??:? int core.runtime.runModuleUnitTests().__foreachbody2(object.ModuleInfo*)
    [0x42bb63]

    ??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)).__lambda2(immutable(object.ModuleInfo*))
    [0x42a9f6]

    ??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))).__foreachbody2(ref
    rt.sections_elf_shared.DSO) [0x42fb89]

    ??:? int rt.sections_elf_shared.DSO.opApply(scope int delegate(ref rt.sections_elf_shared.DSO))
    [0x430038]

    ??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*)))
    [0x42fb15]

    ??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)) [0x42a9cd]

    ??:? runModuleUnitTests [0x42b939]

    ??:? void rt.dmain2._d_run_main(int, char**, extern (C) int function(char[][])*).runAll()
    [0x42828c]

    ??:? void rt.dmain2._d_r'
  stdout: ''
  timestamp: 1660163029
- exit_code: 1
  program: "import std.math;\n/*\n\n    Given a string s, count the number of uppercase\
    \ vowels in even indices.\n    \n    For example:\n    >>> count_upper(\"aBCdEf\"\
    )\n    1L\n    >>> count_upper(\"abcdefg\")\n    0L\n    >>> count_upper(\"dBBE\"\
    )\n    0L\n    \n*/\nlong count_upper(string s) \n{\n    long count = 0;\n   \
    \ foreach(immutable i, immutable c; s)\n    {\n        if(i % 2 == 0 && c >= 'A'\
    \ && c <= 'Z')\n            count++;\n    }\n    return count;\n}\nunittest\n\
    {\n    alias candidate = count_upper;\n\n    assert(candidate(\"aBCdEf\") == 1L);\n\
    \    assert(candidate(\"abcdefg\") == 0L);\n    assert(candidate(\"dBBE\") ==\
    \ 0L);\n    assert(candidate(\"B\") == 0L);\n    assert(candidate(\"U\") == 1L);\n\
    \    assert(candidate(\"\") == 0L);\n    assert(candidate(\"EEEE\") == 2L);\n\
    }\nvoid main(){}"
  status: Exception
  stderr: 'core.exception.AssertError@/tmp/tmpxs03u9kg.d(29): unittest failure

    ----------------

    ??:? _d_unittestp [0x427e45]

    ??:? void tmpxs03u9kg.__unittest_L25_C1() [0x427ab6]

    ??:? void tmpxs03u9kg.__modtest() [0x427bc4]

    ??:? int core.runtime.runModuleUnitTests().__foreachbody2(object.ModuleInfo*)
    [0x42bb6b]

    ??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)).__lambda2(immutable(object.ModuleInfo*))
    [0x42a9fe]

    ??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))).__foreachbody2(ref
    rt.sections_elf_shared.DSO) [0x42fb91]

    ??:? int rt.sections_elf_shared.DSO.opApply(scope int delegate(ref rt.sections_elf_shared.DSO))
    [0x430040]

    ??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*)))
    [0x42fb1d]

    ??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)) [0x42a9d5]

    ??:? runModuleUnitTests [0x42b941]

    ??:? void rt.dmain2._d_run_main(int, char**, extern (C) int function(char[][])*).runAll()
    [0x428294]

    ??:? void rt.dmain2._d_r'
  stdout: ''
  timestamp: 1660163029
- exit_code: 1
  program: "import std.math;\n/*\n\n    Given a string s, count the number of uppercase\
    \ vowels in even indices.\n    \n    For example:\n    >>> count_upper(\"aBCdEf\"\
    )\n    1L\n    >>> count_upper(\"abcdefg\")\n    0L\n    >>> count_upper(\"dBBE\"\
    )\n    0L\n    \n*/\nlong count_upper(string s) \n{\n    long count = 0;\n   \
    \ foreach(i, c; s)\n    {\n        if(i % 2 == 0 && c in \"AEIOU\")\n        \
    \    count++;\n    }\n    return count;\n}\nunittest\n{\n    alias candidate =\
    \ count_upper;\n\n    assert(candidate(\"aBCdEf\") == 1L);\n    assert(candidate(\"\
    abcdefg\") == 0L);\n    assert(candidate(\"dBBE\") == 0L);\n    assert(candidate(\"\
    B\") == 0L);\n    assert(candidate(\"U\") == 1L);\n    assert(candidate(\"\")\
    \ == 0L);\n    assert(candidate(\"EEEE\") == 2L);\n}\nvoid main(){}"
  status: SyntaxError
  stderr: '/tmp/tmpufozqks9.d(20): Error: incompatible types for `(c) in ("AEIOU")`:
    `immutable(char)` and `string`

    Failed: ["dmd", "-unittest", "-v", "-o-", "/tmp/tmpufozqks9.d", "-I/tmp"]

    '
  stdout: ''
  timestamp: 1660163029
- exit_code: 1
  program: "import std.math;\n/*\n\n    Given a string s, count the number of uppercase\
    \ vowels in even indices.\n    \n    For example:\n    >>> count_upper(\"aBCdEf\"\
    )\n    1L\n    >>> count_upper(\"abcdefg\")\n    0L\n    >>> count_upper(\"dBBE\"\
    )\n    0L\n    \n*/\nlong count_upper(string s) \n{\n    long count = 0;\n   \
    \ foreach(i, c; s)\n    {\n        if(i % 2 == 0 && c == toupper(c))\n       \
    \ {\n            count++;\n        }\n    }\n    return count;\n}\nunittest\n\
    {\n    alias candidate = count_upper;\n\n    assert(candidate(\"aBCdEf\") == 1L);\n\
    \    assert(candidate(\"abcdefg\") == 0L);\n    assert(candidate(\"dBBE\") ==\
    \ 0L);\n    assert(candidate(\"B\") == 0L);\n    assert(candidate(\"U\") == 1L);\n\
    \    assert(candidate(\"\") == 0L);\n    assert(candidate(\"EEEE\") == 2L);\n\
    }\nvoid main(){}"
  status: SyntaxError
  stderr: '/tmp/tmpbwih8q81.d(20): Error: undefined identifier `toupper`

    Failed: ["dmd", "-unittest", "-v", "-o-", "/tmp/tmpbwih8q81.d", "-I/tmp"]

    '
  stdout: ''
  timestamp: 1660163028
- exit_code: 1
  program: "import std.math;\n/*\n\n    Given a string s, count the number of uppercase\
    \ vowels in even indices.\n    \n    For example:\n    >>> count_upper(\"aBCdEf\"\
    )\n    1L\n    >>> count_upper(\"abcdefg\")\n    0L\n    >>> count_upper(\"dBBE\"\
    )\n    0L\n    \n*/\nlong count_upper(string s) \n{\n    long count = 0;\n   \
    \ foreach(i, c; s)\n    {\n        if(i % 2 == 0 && isupper(c))\n            count++;\n\
    \    }\n    return count;\n}\nunittest\n{\n    alias candidate = count_upper;\n\
    \n    assert(candidate(\"aBCdEf\") == 1L);\n    assert(candidate(\"abcdefg\")\
    \ == 0L);\n    assert(candidate(\"dBBE\") == 0L);\n    assert(candidate(\"B\"\
    ) == 0L);\n    assert(candidate(\"U\") == 1L);\n    assert(candidate(\"\") ==\
    \ 0L);\n    assert(candidate(\"EEEE\") == 2L);\n}\nvoid main(){}"
  status: SyntaxError
  stderr: '/tmp/tmpbnddjpmc.d(20): Error: undefined identifier `isupper`

    Failed: ["dmd", "-unittest", "-v", "-o-", "/tmp/tmpbnddjpmc.d", "-I/tmp"]

    '
  stdout: ''
  timestamp: 1660163028
- exit_code: 1
  program: "import std.math;\n/*\n\n    Given a string s, count the number of uppercase\
    \ vowels in even indices.\n    \n    For example:\n    >>> count_upper(\"aBCdEf\"\
    )\n    1L\n    >>> count_upper(\"abcdefg\")\n    0L\n    >>> count_upper(\"dBBE\"\
    )\n    0L\n    \n*/\nlong count_upper(string s) \n{\n    long count = 0;\n   \
    \ foreach(i, c; s)\n    {\n        if(i % 2 == 0 && c in \"AEIOU\")\n        \
    \    count++;\n    }\n    return count;\n}\nunittest\n{\n    alias candidate =\
    \ count_upper;\n\n    assert(candidate(\"aBCdEf\") == 1L);\n    assert(candidate(\"\
    abcdefg\") == 0L);\n    assert(candidate(\"dBBE\") == 0L);\n    assert(candidate(\"\
    B\") == 0L);\n    assert(candidate(\"U\") == 1L);\n    assert(candidate(\"\")\
    \ == 0L);\n    assert(candidate(\"EEEE\") == 2L);\n}\nvoid main(){}"
  status: SyntaxError
  stderr: '/tmp/tmpufozqks9.d(20): Error: incompatible types for `(c) in ("AEIOU")`:
    `immutable(char)` and `string`

    Failed: ["dmd", "-unittest", "-v", "-o-", "/tmp/tmpufozqks9.d", "-I/tmp"]

    '
  stdout: ''
  timestamp: 1660163029
- exit_code: 0
  program: "import std.math;\n/*\n\n    Given a string s, count the number of uppercase\
    \ vowels in even indices.\n    \n    For example:\n    >>> count_upper(\"aBCdEf\"\
    )\n    1L\n    >>> count_upper(\"abcdefg\")\n    0L\n    >>> count_upper(\"dBBE\"\
    )\n    0L\n    \n*/\nlong count_upper(string s) \n{\n    long count = 0;\n   \
    \ for (int i = 0; i < s.length; i++)\n    {\n        if (s[i] == 'A' || s[i] ==\
    \ 'E' || s[i] == 'I' || s[i] == 'O' || s[i] == 'U')\n        {\n            if\
    \ (i % 2 == 0)\n            {\n                count++;\n            }\n     \
    \   }\n    }\n    return count;\n}\nunittest\n{\n    alias candidate = count_upper;\n\
    \n    assert(candidate(\"aBCdEf\") == 1L);\n    assert(candidate(\"abcdefg\")\
    \ == 0L);\n    assert(candidate(\"dBBE\") == 0L);\n    assert(candidate(\"B\"\
    ) == 0L);\n    assert(candidate(\"U\") == 1L);\n    assert(candidate(\"\") ==\
    \ 0L);\n    assert(candidate(\"EEEE\") == 2L);\n}\nvoid main(){}"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660163029
- exit_code: 1
  program: "import std.math;\n/*\n\n    Given a string s, count the number of uppercase\
    \ vowels in even indices.\n    \n    For example:\n    >>> count_upper(\"aBCdEf\"\
    )\n    1L\n    >>> count_upper(\"abcdefg\")\n    0L\n    >>> count_upper(\"dBBE\"\
    )\n    0L\n    \n*/\nlong count_upper(string s) \n{\n    long count = 0;\n   \
    \ foreach(immutable i, immutable c; s)\n    {\n        if(i % 2 == 0 && isUpper(c))\n\
    \            count++;\n    }\n    return count;\n}\nunittest\n{\n    alias candidate\
    \ = count_upper;\n\n    assert(candidate(\"aBCdEf\") == 1L);\n    assert(candidate(\"\
    abcdefg\") == 0L);\n    assert(candidate(\"dBBE\") == 0L);\n    assert(candidate(\"\
    B\") == 0L);\n    assert(candidate(\"U\") == 1L);\n    assert(candidate(\"\")\
    \ == 0L);\n    assert(candidate(\"EEEE\") == 2L);\n}\nvoid main(){}"
  status: SyntaxError
  stderr: '/tmp/tmpk9ekfx89.d(20): Error: undefined identifier `isUpper`

    Failed: ["dmd", "-unittest", "-v", "-o-", "/tmp/tmpk9ekfx89.d", "-I/tmp"]

    '
  stdout: ''
  timestamp: 1660163028
- exit_code: 1
  program: "import std.math;\n/*\n\n    Given a string s, count the number of uppercase\
    \ vowels in even indices.\n    \n    For example:\n    >>> count_upper(\"aBCdEf\"\
    )\n    1L\n    >>> count_upper(\"abcdefg\")\n    0L\n    >>> count_upper(\"dBBE\"\
    )\n    0L\n    \n*/\nlong count_upper(string s) \n{\n    long count = 0;\n   \
    \ foreach(i, c; s)\n    {\n        if (i % 2 == 0 && isupper(c))\n           \
    \ count++;\n    }\n    return count;\n}\nunittest\n{\n    alias candidate = count_upper;\n\
    \n    assert(candidate(\"aBCdEf\") == 1L);\n    assert(candidate(\"abcdefg\")\
    \ == 0L);\n    assert(candidate(\"dBBE\") == 0L);\n    assert(candidate(\"B\"\
    ) == 0L);\n    assert(candidate(\"U\") == 1L);\n    assert(candidate(\"\") ==\
    \ 0L);\n    assert(candidate(\"EEEE\") == 2L);\n}\nvoid main(){}"
  status: SyntaxError
  stderr: '/tmp/tmphl4tr1v5.d(20): Error: undefined identifier `isupper`

    Failed: ["dmd", "-unittest", "-v", "-o-", "/tmp/tmphl4tr1v5.d", "-I/tmp"]

    '
  stdout: ''
  timestamp: 1660163029
- exit_code: 1
  program: "import std.math;\n/*\n\n    Given a string s, count the number of uppercase\
    \ vowels in even indices.\n    \n    For example:\n    >>> count_upper(\"aBCdEf\"\
    )\n    1L\n    >>> count_upper(\"abcdefg\")\n    0L\n    >>> count_upper(\"dBBE\"\
    )\n    0L\n    \n*/\nlong count_upper(string s) \n{\n    long count = 0;\n   \
    \ foreach(i, c; s)\n    {\n        if(i % 2 == 0 && isUpper(c))\n            count++;\n\
    \    }\n    return count;\n}\nunittest\n{\n    alias candidate = count_upper;\n\
    \n    assert(candidate(\"aBCdEf\") == 1L);\n    assert(candidate(\"abcdefg\")\
    \ == 0L);\n    assert(candidate(\"dBBE\") == 0L);\n    assert(candidate(\"B\"\
    ) == 0L);\n    assert(candidate(\"U\") == 1L);\n    assert(candidate(\"\") ==\
    \ 0L);\n    assert(candidate(\"EEEE\") == 2L);\n}\nvoid main(){}"
  status: SyntaxError
  stderr: '/tmp/tmpjziclffi.d(20): Error: undefined identifier `isUpper`

    Failed: ["dmd", "-unittest", "-v", "-o-", "/tmp/tmpjziclffi.d", "-I/tmp"]

    '
  stdout: ''
  timestamp: 1660163028
- exit_code: 1
  program: "import std.math;\n/*\n\n    Given a string s, count the number of uppercase\
    \ vowels in even indices.\n    \n    For example:\n    >>> count_upper(\"aBCdEf\"\
    )\n    1L\n    >>> count_upper(\"abcdefg\")\n    0L\n    >>> count_upper(\"dBBE\"\
    )\n    0L\n    \n*/\nlong count_upper(string s) \n{\n    long count = 0;\n   \
    \ foreach(i, c; s)\n    {\n        if(i % 2 == 0 && isUpper(c))\n            count++;\n\
    \    }\n    return count;\n}\nunittest\n{\n    alias candidate = count_upper;\n\
    \n    assert(candidate(\"aBCdEf\") == 1L);\n    assert(candidate(\"abcdefg\")\
    \ == 0L);\n    assert(candidate(\"dBBE\") == 0L);\n    assert(candidate(\"B\"\
    ) == 0L);\n    assert(candidate(\"U\") == 1L);\n    assert(candidate(\"\") ==\
    \ 0L);\n    assert(candidate(\"EEEE\") == 2L);\n}\nvoid main(){}"
  status: SyntaxError
  stderr: '/tmp/tmpjziclffi.d(20): Error: undefined identifier `isUpper`

    Failed: ["dmd", "-unittest", "-v", "-o-", "/tmp/tmpjziclffi.d", "-I/tmp"]

    '
  stdout: ''
  timestamp: 1660163028
- exit_code: 1
  program: "import std.math;\n/*\n\n    Given a string s, count the number of uppercase\
    \ vowels in even indices.\n    \n    For example:\n    >>> count_upper(\"aBCdEf\"\
    )\n    1L\n    >>> count_upper(\"abcdefg\")\n    0L\n    >>> count_upper(\"dBBE\"\
    )\n    0L\n    \n*/\nlong count_upper(string s) \n{\n    long count = 0;\n   \
    \ foreach(i, c; s)\n    {\n        if(i % 2 == 0 && isupper(c))\n            count++;\n\
    \    }\n    return count;\n}\nunittest\n{\n    alias candidate = count_upper;\n\
    \n    assert(candidate(\"aBCdEf\") == 1L);\n    assert(candidate(\"abcdefg\")\
    \ == 0L);\n    assert(candidate(\"dBBE\") == 0L);\n    assert(candidate(\"B\"\
    ) == 0L);\n    assert(candidate(\"U\") == 1L);\n    assert(candidate(\"\") ==\
    \ 0L);\n    assert(candidate(\"EEEE\") == 2L);\n}\nvoid main(){}"
  status: SyntaxError
  stderr: '/tmp/tmpbnddjpmc.d(20): Error: undefined identifier `isupper`

    Failed: ["dmd", "-unittest", "-v", "-o-", "/tmp/tmpbnddjpmc.d", "-I/tmp"]

    '
  stdout: ''
  timestamp: 1660163028
- exit_code: 1
  program: "import std.math;\n/*\n\n    Given a string s, count the number of uppercase\
    \ vowels in even indices.\n    \n    For example:\n    >>> count_upper(\"aBCdEf\"\
    )\n    1L\n    >>> count_upper(\"abcdefg\")\n    0L\n    >>> count_upper(\"dBBE\"\
    )\n    0L\n    \n*/\nlong count_upper(string s) \n{\n    long count = 0;\n   \
    \ foreach(i, c; s)\n    {\n        if(i % 2 == 0 && isupper(c))\n            count++;\n\
    \    }\n    return count;\n}\nunittest\n{\n    alias candidate = count_upper;\n\
    \n    assert(candidate(\"aBCdEf\") == 1L);\n    assert(candidate(\"abcdefg\")\
    \ == 0L);\n    assert(candidate(\"dBBE\") == 0L);\n    assert(candidate(\"B\"\
    ) == 0L);\n    assert(candidate(\"U\") == 1L);\n    assert(candidate(\"\") ==\
    \ 0L);\n    assert(candidate(\"EEEE\") == 2L);\n}\nvoid main(){}"
  status: SyntaxError
  stderr: '/tmp/tmpbnddjpmc.d(20): Error: undefined identifier `isupper`

    Failed: ["dmd", "-unittest", "-v", "-o-", "/tmp/tmpbnddjpmc.d", "-I/tmp"]

    '
  stdout: ''
  timestamp: 1660163028
- exit_code: 1
  program: "import std.math;\n/*\n\n    Given a string s, count the number of uppercase\
    \ vowels in even indices.\n    \n    For example:\n    >>> count_upper(\"aBCdEf\"\
    )\n    1L\n    >>> count_upper(\"abcdefg\")\n    0L\n    >>> count_upper(\"dBBE\"\
    )\n    0L\n    \n*/\nlong count_upper(string s) \n{\n    long count = 0;\n   \
    \ foreach(i, c; s)\n    {\n        if(i % 2 == 0 && c in \"AEIOU\")\n        \
    \    count++;\n    }\n    return count;\n}\nunittest\n{\n    alias candidate =\
    \ count_upper;\n\n    assert(candidate(\"aBCdEf\") == 1L);\n    assert(candidate(\"\
    abcdefg\") == 0L);\n    assert(candidate(\"dBBE\") == 0L);\n    assert(candidate(\"\
    B\") == 0L);\n    assert(candidate(\"U\") == 1L);\n    assert(candidate(\"\")\
    \ == 0L);\n    assert(candidate(\"EEEE\") == 2L);\n}\nvoid main(){}"
  status: SyntaxError
  stderr: '/tmp/tmpufozqks9.d(20): Error: incompatible types for `(c) in ("AEIOU")`:
    `immutable(char)` and `string`

    Failed: ["dmd", "-unittest", "-v", "-o-", "/tmp/tmpufozqks9.d", "-I/tmp"]

    '
  stdout: ''
  timestamp: 1660163029
- exit_code: 1
  program: "import std.math;\n/*\n\n    Given a string s, count the number of uppercase\
    \ vowels in even indices.\n    \n    For example:\n    >>> count_upper(\"aBCdEf\"\
    )\n    1L\n    >>> count_upper(\"abcdefg\")\n    0L\n    >>> count_upper(\"dBBE\"\
    )\n    0L\n    \n*/\nlong count_upper(string s) \n{\n    long count = 0;\n   \
    \ foreach(i, c; s) \n    {\n        if(i % 2 == 0 && c >= 'A' && c <= 'Z')\n \
    \           count++;\n    }\n    return count;\n}\nunittest\n{\n    alias candidate\
    \ = count_upper;\n\n    assert(candidate(\"aBCdEf\") == 1L);\n    assert(candidate(\"\
    abcdefg\") == 0L);\n    assert(candidate(\"dBBE\") == 0L);\n    assert(candidate(\"\
    B\") == 0L);\n    assert(candidate(\"U\") == 1L);\n    assert(candidate(\"\")\
    \ == 0L);\n    assert(candidate(\"EEEE\") == 2L);\n}\nvoid main(){}"
  status: Exception
  stderr: 'core.exception.AssertError@/tmp/tmplqtfyam0.d(29): unittest failure

    ----------------

    ??:? _d_unittestp [0x427e3d]

    ??:? void tmplqtfyam0.__unittest_L25_C1() [0x427ab2]

    ??:? void tmplqtfyam0.__modtest() [0x427bc0]

    ??:? int core.runtime.runModuleUnitTests().__foreachbody2(object.ModuleInfo*)
    [0x42bb63]

    ??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)).__lambda2(immutable(object.ModuleInfo*))
    [0x42a9f6]

    ??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))).__foreachbody2(ref
    rt.sections_elf_shared.DSO) [0x42fb89]

    ??:? int rt.sections_elf_shared.DSO.opApply(scope int delegate(ref rt.sections_elf_shared.DSO))
    [0x430038]

    ??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*)))
    [0x42fb15]

    ??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)) [0x42a9cd]

    ??:? runModuleUnitTests [0x42b939]

    ??:? void rt.dmain2._d_run_main(int, char**, extern (C) int function(char[][])*).runAll()
    [0x42828c]

    ??:? void rt.dmain2._d_r'
  stdout: ''
  timestamp: 1660163029
- exit_code: 1
  program: "import std.math;\n/*\n\n    Given a string s, count the number of uppercase\
    \ vowels in even indices.\n    \n    For example:\n    >>> count_upper(\"aBCdEf\"\
    )\n    1L\n    >>> count_upper(\"abcdefg\")\n    0L\n    >>> count_upper(\"dBBE\"\
    )\n    0L\n    \n*/\nlong count_upper(string s) \n{\n    long count = 0;\n   \
    \ foreach(i, c; s)\n    {\n        if(i % 2 == 0 && c >= 'A' && c <= 'Z')\n  \
    \          count++;\n    }\n    return count;\n}\nunittest\n{\n    alias candidate\
    \ = count_upper;\n\n    assert(candidate(\"aBCdEf\") == 1L);\n    assert(candidate(\"\
    abcdefg\") == 0L);\n    assert(candidate(\"dBBE\") == 0L);\n    assert(candidate(\"\
    B\") == 0L);\n    assert(candidate(\"U\") == 1L);\n    assert(candidate(\"\")\
    \ == 0L);\n    assert(candidate(\"EEEE\") == 2L);\n}\nvoid main(){}"
  status: Exception
  stderr: 'core.exception.AssertError@/tmp/tmp2l5es36k.d(29): unittest failure

    ----------------

    ??:? _d_unittestp [0x427e3d]

    ??:? void tmp2l5es36k.__unittest_L25_C1() [0x427ab2]

    ??:? void tmp2l5es36k.__modtest() [0x427bc0]

    ??:? int core.runtime.runModuleUnitTests().__foreachbody2(object.ModuleInfo*)
    [0x42bb63]

    ??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)).__lambda2(immutable(object.ModuleInfo*))
    [0x42a9f6]

    ??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))).__foreachbody2(ref
    rt.sections_elf_shared.DSO) [0x42fb89]

    ??:? int rt.sections_elf_shared.DSO.opApply(scope int delegate(ref rt.sections_elf_shared.DSO))
    [0x430038]

    ??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*)))
    [0x42fb15]

    ??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)) [0x42a9cd]

    ??:? runModuleUnitTests [0x42b939]

    ??:? void rt.dmain2._d_run_main(int, char**, extern (C) int function(char[][])*).runAll()
    [0x42828c]

    ??:? void rt.dmain2._d_r'
  stdout: ''
  timestamp: 1660163029
- exit_code: 1
  program: "import std.math;\n/*\n\n    Given a string s, count the number of uppercase\
    \ vowels in even indices.\n    \n    For example:\n    >>> count_upper(\"aBCdEf\"\
    )\n    1L\n    >>> count_upper(\"abcdefg\")\n    0L\n    >>> count_upper(\"dBBE\"\
    )\n    0L\n    \n*/\nlong count_upper(string s) \n{\n    long count = 0;\n   \
    \ foreach(i, c; s)\n    {\n        if (isEven(i) && isUpper(c))\n        {\n \
    \           count++;\n        }\n    }\n    return count;\n}\nunittest\n{\n  \
    \  alias candidate = count_upper;\n\n    assert(candidate(\"aBCdEf\") == 1L);\n\
    \    assert(candidate(\"abcdefg\") == 0L);\n    assert(candidate(\"dBBE\") ==\
    \ 0L);\n    assert(candidate(\"B\") == 0L);\n    assert(candidate(\"U\") == 1L);\n\
    \    assert(candidate(\"\") == 0L);\n    assert(candidate(\"EEEE\") == 2L);\n\
    }\nvoid main(){}"
  status: SyntaxError
  stderr: '/tmp/tmpl8kw02lw.d(20): Error: undefined identifier `isEven`

    /tmp/tmpl8kw02lw.d(20): Error: undefined identifier `isUpper`

    Failed: ["dmd", "-unittest", "-v", "-o-", "/tmp/tmpl8kw02lw.d", "-I/tmp"]

    '
  stdout: ''
  timestamp: 1660163029
- exit_code: 1
  program: "import std.math;\n/*\n\n    Given a string s, count the number of uppercase\
    \ vowels in even indices.\n    \n    For example:\n    >>> count_upper(\"aBCdEf\"\
    )\n    1L\n    >>> count_upper(\"abcdefg\")\n    0L\n    >>> count_upper(\"dBBE\"\
    )\n    0L\n    \n*/\nlong count_upper(string s) \n{\n    long count = 0;\n   \
    \ foreach(i, c; s)\n    {\n        if(i % 2 == 0 && c == toupper(c))\n       \
    \ {\n            count++;\n        }\n    }\n    return count;\n}\nunittest\n\
    {\n    alias candidate = count_upper;\n\n    assert(candidate(\"aBCdEf\") == 1L);\n\
    \    assert(candidate(\"abcdefg\") == 0L);\n    assert(candidate(\"dBBE\") ==\
    \ 0L);\n    assert(candidate(\"B\") == 0L);\n    assert(candidate(\"U\") == 1L);\n\
    \    assert(candidate(\"\") == 0L);\n    assert(candidate(\"EEEE\") == 2L);\n\
    }\nvoid main(){}"
  status: SyntaxError
  stderr: '/tmp/tmpbwih8q81.d(20): Error: undefined identifier `toupper`

    Failed: ["dmd", "-unittest", "-v", "-o-", "/tmp/tmpbwih8q81.d", "-I/tmp"]

    '
  stdout: ''
  timestamp: 1660163028
- exit_code: 1
  program: "import std.math;\n/*\n\n    Given a string s, count the number of uppercase\
    \ vowels in even indices.\n    \n    For example:\n    >>> count_upper(\"aBCdEf\"\
    )\n    1L\n    >>> count_upper(\"abcdefg\")\n    0L\n    >>> count_upper(\"dBBE\"\
    )\n    0L\n    \n*/\nlong count_upper(string s) \n{\n    long count = 0;\n   \
    \ foreach(i, c; s)\n    {\n        if(i % 2 == 0 && isupper(c))\n            count++;\n\
    \    }\n    return count;\n}\nunittest\n{\n    alias candidate = count_upper;\n\
    \n    assert(candidate(\"aBCdEf\") == 1L);\n    assert(candidate(\"abcdefg\")\
    \ == 0L);\n    assert(candidate(\"dBBE\") == 0L);\n    assert(candidate(\"B\"\
    ) == 0L);\n    assert(candidate(\"U\") == 1L);\n    assert(candidate(\"\") ==\
    \ 0L);\n    assert(candidate(\"EEEE\") == 2L);\n}\nvoid main(){}"
  status: SyntaxError
  stderr: '/tmp/tmpbnddjpmc.d(20): Error: undefined identifier `isupper`

    Failed: ["dmd", "-unittest", "-v", "-o-", "/tmp/tmpbnddjpmc.d", "-I/tmp"]

    '
  stdout: ''
  timestamp: 1660163028
- exit_code: 1
  program: "import std.math;\n/*\n\n    Given a string s, count the number of uppercase\
    \ vowels in even indices.\n    \n    For example:\n    >>> count_upper(\"aBCdEf\"\
    )\n    1L\n    >>> count_upper(\"abcdefg\")\n    0L\n    >>> count_upper(\"dBBE\"\
    )\n    0L\n    \n*/\nlong count_upper(string s) \n{\n    long count = 0;\n   \
    \ foreach(i, c; s)\n    {\n        if(i % 2 == 0 && c in ['A', 'E', 'I', 'O',\
    \ 'U'])\n            count++;\n    }\n    return count;\n}\nunittest\n{\n    alias\
    \ candidate = count_upper;\n\n    assert(candidate(\"aBCdEf\") == 1L);\n    assert(candidate(\"\
    abcdefg\") == 0L);\n    assert(candidate(\"dBBE\") == 0L);\n    assert(candidate(\"\
    B\") == 0L);\n    assert(candidate(\"U\") == 1L);\n    assert(candidate(\"\")\
    \ == 0L);\n    assert(candidate(\"EEEE\") == 2L);\n}\nvoid main(){}"
  status: SyntaxError
  stderr: '/tmp/tmpkk1wsjki.d(20): Error: incompatible types for `(c) in ([''A'',
    ''E'', ''I'', ''O'', ''U''])`: `immutable(char)` and `char[]`

    Failed: ["dmd", "-unittest", "-v", "-o-", "/tmp/tmpkk1wsjki.d", "-I/tmp"]

    '
  stdout: ''
  timestamp: 1660163028
- exit_code: 1
  program: "import std.math;\n/*\n\n    Given a string s, count the number of uppercase\
    \ vowels in even indices.\n    \n    For example:\n    >>> count_upper(\"aBCdEf\"\
    )\n    1L\n    >>> count_upper(\"abcdefg\")\n    0L\n    >>> count_upper(\"dBBE\"\
    )\n    0L\n    \n*/\nlong count_upper(string s) \n{\n    long count = 0;\n   \
    \ foreach(i, c; s)\n    {\n        if(i % 2 == 0 && isupper(c))\n            count++;\n\
    \    }\n    return count;\n}\nunittest\n{\n    alias candidate = count_upper;\n\
    \n    assert(candidate(\"aBCdEf\") == 1L);\n    assert(candidate(\"abcdefg\")\
    \ == 0L);\n    assert(candidate(\"dBBE\") == 0L);\n    assert(candidate(\"B\"\
    ) == 0L);\n    assert(candidate(\"U\") == 1L);\n    assert(candidate(\"\") ==\
    \ 0L);\n    assert(candidate(\"EEEE\") == 2L);\n}\nvoid main(){}"
  status: SyntaxError
  stderr: '/tmp/tmpbnddjpmc.d(20): Error: undefined identifier `isupper`

    Failed: ["dmd", "-unittest", "-v", "-o-", "/tmp/tmpbnddjpmc.d", "-I/tmp"]

    '
  stdout: ''
  timestamp: 1660163028
- exit_code: 1
  program: "import std.math;\n/*\n\n    Given a string s, count the number of uppercase\
    \ vowels in even indices.\n    \n    For example:\n    >>> count_upper(\"aBCdEf\"\
    )\n    1L\n    >>> count_upper(\"abcdefg\")\n    0L\n    >>> count_upper(\"dBBE\"\
    )\n    0L\n    \n*/\nlong count_upper(string s) \n{\n    long count = 0;\n   \
    \ foreach(i, c; s)\n    {\n        if(i % 2 == 0 && isupper(c))\n            count++;\n\
    \    }\n    return count;\n}\nunittest\n{\n    alias candidate = count_upper;\n\
    \n    assert(candidate(\"aBCdEf\") == 1L);\n    assert(candidate(\"abcdefg\")\
    \ == 0L);\n    assert(candidate(\"dBBE\") == 0L);\n    assert(candidate(\"B\"\
    ) == 0L);\n    assert(candidate(\"U\") == 1L);\n    assert(candidate(\"\") ==\
    \ 0L);\n    assert(candidate(\"EEEE\") == 2L);\n}\nvoid main(){}"
  status: SyntaxError
  stderr: '/tmp/tmpbnddjpmc.d(20): Error: undefined identifier `isupper`

    Failed: ["dmd", "-unittest", "-v", "-o-", "/tmp/tmpbnddjpmc.d", "-I/tmp"]

    '
  stdout: ''
  timestamp: 1660163028
- exit_code: 1
  program: "import std.math;\n/*\n\n    Given a string s, count the number of uppercase\
    \ vowels in even indices.\n    \n    For example:\n    >>> count_upper(\"aBCdEf\"\
    )\n    1L\n    >>> count_upper(\"abcdefg\")\n    0L\n    >>> count_upper(\"dBBE\"\
    )\n    0L\n    \n*/\nlong count_upper(string s) \n{\n    long count = 0;\n   \
    \ foreach(i, c; s)\n    {\n        if(i % 2 == 0 && c in ['A', 'E', 'I', 'O',\
    \ 'U'])\n            count++;\n    }\n    return count;\n}\nunittest\n{\n    alias\
    \ candidate = count_upper;\n\n    assert(candidate(\"aBCdEf\") == 1L);\n    assert(candidate(\"\
    abcdefg\") == 0L);\n    assert(candidate(\"dBBE\") == 0L);\n    assert(candidate(\"\
    B\") == 0L);\n    assert(candidate(\"U\") == 1L);\n    assert(candidate(\"\")\
    \ == 0L);\n    assert(candidate(\"EEEE\") == 2L);\n}\nvoid main(){}"
  status: SyntaxError
  stderr: '/tmp/tmpkk1wsjki.d(20): Error: incompatible types for `(c) in ([''A'',
    ''E'', ''I'', ''O'', ''U''])`: `immutable(char)` and `char[]`

    Failed: ["dmd", "-unittest", "-v", "-o-", "/tmp/tmpkk1wsjki.d", "-I/tmp"]

    '
  stdout: ''
  timestamp: 1660163028
- exit_code: 1
  program: "import std.math;\n/*\n\n    Given a string s, count the number of uppercase\
    \ vowels in even indices.\n    \n    For example:\n    >>> count_upper(\"aBCdEf\"\
    )\n    1L\n    >>> count_upper(\"abcdefg\")\n    0L\n    >>> count_upper(\"dBBE\"\
    )\n    0L\n    \n*/\nlong count_upper(string s) \n{\n    long count = 0;\n   \
    \ foreach(i, c; s)\n    {\n        if(i % 2 == 0 && c == 'A' || c == 'E' || c\
    \ == 'I' || c == 'O' || c == 'U')\n        {\n            count++;\n        }\n\
    \    }\n    return count;\n}\nunittest\n{\n    alias candidate = count_upper;\n\
    \n    assert(candidate(\"aBCdEf\") == 1L);\n    assert(candidate(\"abcdefg\")\
    \ == 0L);\n    assert(candidate(\"dBBE\") == 0L);\n    assert(candidate(\"B\"\
    ) == 0L);\n    assert(candidate(\"U\") == 1L);\n    assert(candidate(\"\") ==\
    \ 0L);\n    assert(candidate(\"EEEE\") == 2L);\n}\nvoid main(){}"
  status: Exception
  stderr: 'core.exception.AssertError@/tmp/tmpq101czay.d(33): unittest failure

    ----------------

    ??:? _d_unittestp [0x427e55]

    ??:? void tmpq101czay.__unittest_L27_C1() [0x427b1a]

    ??:? void tmpq101czay.__modtest() [0x427bd4]

    ??:? int core.runtime.runModuleUnitTests().__foreachbody2(object.ModuleInfo*)
    [0x42bb7b]

    ??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)).__lambda2(immutable(object.ModuleInfo*))
    [0x42aa0e]

    ??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))).__foreachbody2(ref
    rt.sections_elf_shared.DSO) [0x42fba1]

    ??:? int rt.sections_elf_shared.DSO.opApply(scope int delegate(ref rt.sections_elf_shared.DSO))
    [0x430050]

    ??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*)))
    [0x42fb2d]

    ??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)) [0x42a9e5]

    ??:? runModuleUnitTests [0x42b951]

    ??:? void rt.dmain2._d_run_main(int, char**, extern (C) int function(char[][])*).runAll()
    [0x4282a4]

    ??:? void rt.dmain2._d_r'
  stdout: ''
  timestamp: 1660163029
- exit_code: 1
  program: "import std.math;\n/*\n\n    Given a string s, count the number of uppercase\
    \ vowels in even indices.\n    \n    For example:\n    >>> count_upper(\"aBCdEf\"\
    )\n    1L\n    >>> count_upper(\"abcdefg\")\n    0L\n    >>> count_upper(\"dBBE\"\
    )\n    0L\n    \n*/\nlong count_upper(string s) \n{\n    long count = 0;\n   \
    \ foreach(i, c; s)\n    {\n        if(i % 2 == 0 && isUpper(c))\n            count++;\n\
    \    }\n    return count;\n}\nunittest\n{\n    alias candidate = count_upper;\n\
    \n    assert(candidate(\"aBCdEf\") == 1L);\n    assert(candidate(\"abcdefg\")\
    \ == 0L);\n    assert(candidate(\"dBBE\") == 0L);\n    assert(candidate(\"B\"\
    ) == 0L);\n    assert(candidate(\"U\") == 1L);\n    assert(candidate(\"\") ==\
    \ 0L);\n    assert(candidate(\"EEEE\") == 2L);\n}\nvoid main(){}"
  status: SyntaxError
  stderr: '/tmp/tmpjziclffi.d(20): Error: undefined identifier `isUpper`

    Failed: ["dmd", "-unittest", "-v", "-o-", "/tmp/tmpjziclffi.d", "-I/tmp"]

    '
  stdout: ''
  timestamp: 1660163028
- exit_code: 1
  program: "import std.math;\n/*\n\n    Given a string s, count the number of uppercase\
    \ vowels in even indices.\n    \n    For example:\n    >>> count_upper(\"aBCdEf\"\
    )\n    1L\n    >>> count_upper(\"abcdefg\")\n    0L\n    >>> count_upper(\"dBBE\"\
    )\n    0L\n    \n*/\nlong count_upper(string s) \n{\n    long count = 0;\n   \
    \ foreach(i, c; s)\n    {\n        if(i % 2 == 0 && isupper(c))\n            count++;\n\
    \    }\n    return count;\n}\nunittest\n{\n    alias candidate = count_upper;\n\
    \n    assert(candidate(\"aBCdEf\") == 1L);\n    assert(candidate(\"abcdefg\")\
    \ == 0L);\n    assert(candidate(\"dBBE\") == 0L);\n    assert(candidate(\"B\"\
    ) == 0L);\n    assert(candidate(\"U\") == 1L);\n    assert(candidate(\"\") ==\
    \ 0L);\n    assert(candidate(\"EEEE\") == 2L);\n}\nvoid main(){}"
  status: SyntaxError
  stderr: '/tmp/tmpbnddjpmc.d(20): Error: undefined identifier `isupper`

    Failed: ["dmd", "-unittest", "-v", "-o-", "/tmp/tmpbnddjpmc.d", "-I/tmp"]

    '
  stdout: ''
  timestamp: 1660163028
- exit_code: 1
  program: "import std.math;\n/*\n\n    Given a string s, count the number of uppercase\
    \ vowels in even indices.\n    \n    For example:\n    >>> count_upper(\"aBCdEf\"\
    )\n    1L\n    >>> count_upper(\"abcdefg\")\n    0L\n    >>> count_upper(\"dBBE\"\
    )\n    0L\n    \n*/\nlong count_upper(string s) \n{\n    long count = 0;\n   \
    \ foreach(i, c; s) \n    {\n        if (i % 2 == 0 && c >= 'A' && c <= 'Z') \n\
    \        {\n            count++;\n        }\n    }\n    return count;\n}\nunittest\n\
    {\n    alias candidate = count_upper;\n\n    assert(candidate(\"aBCdEf\") == 1L);\n\
    \    assert(candidate(\"abcdefg\") == 0L);\n    assert(candidate(\"dBBE\") ==\
    \ 0L);\n    assert(candidate(\"B\") == 0L);\n    assert(candidate(\"U\") == 1L);\n\
    \    assert(candidate(\"\") == 0L);\n    assert(candidate(\"EEEE\") == 2L);\n\
    }\nvoid main(){}"
  status: Exception
  stderr: 'core.exception.AssertError@/tmp/tmpf91vz8d0.d(31): unittest failure

    ----------------

    ??:? _d_unittestp [0x427e3d]

    ??:? void tmpf91vz8d0.__unittest_L27_C1() [0x427ab2]

    ??:? void tmpf91vz8d0.__modtest() [0x427bc0]

    ??:? int core.runtime.runModuleUnitTests().__foreachbody2(object.ModuleInfo*)
    [0x42bb63]

    ??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)).__lambda2(immutable(object.ModuleInfo*))
    [0x42a9f6]

    ??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))).__foreachbody2(ref
    rt.sections_elf_shared.DSO) [0x42fb89]

    ??:? int rt.sections_elf_shared.DSO.opApply(scope int delegate(ref rt.sections_elf_shared.DSO))
    [0x430038]

    ??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*)))
    [0x42fb15]

    ??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)) [0x42a9cd]

    ??:? runModuleUnitTests [0x42b939]

    ??:? void rt.dmain2._d_run_main(int, char**, extern (C) int function(char[][])*).runAll()
    [0x42828c]

    ??:? void rt.dmain2._d_r'
  stdout: ''
  timestamp: 1660163029
- exit_code: 1
  program: "import std.math;\n/*\n\n    Given a string s, count the number of uppercase\
    \ vowels in even indices.\n    \n    For example:\n    >>> count_upper(\"aBCdEf\"\
    )\n    1L\n    >>> count_upper(\"abcdefg\")\n    0L\n    >>> count_upper(\"dBBE\"\
    )\n    0L\n    \n*/\nlong count_upper(string s) \n{\n    long count = 0;\n   \
    \ foreach(i, c; s)\n    {\n        if(i % 2 == 0 && c in ['A', 'E', 'I', 'O',\
    \ 'U'])\n            count++;\n    }\n    return count;\n}\nunittest\n{\n    alias\
    \ candidate = count_upper;\n\n    assert(candidate(\"aBCdEf\") == 1L);\n    assert(candidate(\"\
    abcdefg\") == 0L);\n    assert(candidate(\"dBBE\") == 0L);\n    assert(candidate(\"\
    B\") == 0L);\n    assert(candidate(\"U\") == 1L);\n    assert(candidate(\"\")\
    \ == 0L);\n    assert(candidate(\"EEEE\") == 2L);\n}\nvoid main(){}"
  status: SyntaxError
  stderr: '/tmp/tmpkk1wsjki.d(20): Error: incompatible types for `(c) in ([''A'',
    ''E'', ''I'', ''O'', ''U''])`: `immutable(char)` and `char[]`

    Failed: ["dmd", "-unittest", "-v", "-o-", "/tmp/tmpkk1wsjki.d", "-I/tmp"]

    '
  stdout: ''
  timestamp: 1660163028
- exit_code: 1
  program: "import std.math;\n/*\n\n    Given a string s, count the number of uppercase\
    \ vowels in even indices.\n    \n    For example:\n    >>> count_upper(\"aBCdEf\"\
    )\n    1L\n    >>> count_upper(\"abcdefg\")\n    0L\n    >>> count_upper(\"dBBE\"\
    )\n    0L\n    \n*/\nlong count_upper(string s) \n{\n    long count = 0;\n   \
    \ foreach(i, c; s)\n    {\n        if(i % 2 == 0 && c in ['A', 'E', 'I', 'O',\
    \ 'U'])\n            count++;\n    }\n    return count;\n}\nunittest\n{\n    alias\
    \ candidate = count_upper;\n\n    assert(candidate(\"aBCdEf\") == 1L);\n    assert(candidate(\"\
    abcdefg\") == 0L);\n    assert(candidate(\"dBBE\") == 0L);\n    assert(candidate(\"\
    B\") == 0L);\n    assert(candidate(\"U\") == 1L);\n    assert(candidate(\"\")\
    \ == 0L);\n    assert(candidate(\"EEEE\") == 2L);\n}\nvoid main(){}"
  status: SyntaxError
  stderr: '/tmp/tmpkk1wsjki.d(20): Error: incompatible types for `(c) in ([''A'',
    ''E'', ''I'', ''O'', ''U''])`: `immutable(char)` and `char[]`

    Failed: ["dmd", "-unittest", "-v", "-o-", "/tmp/tmpkk1wsjki.d", "-I/tmp"]

    '
  stdout: ''
  timestamp: 1660163028
- exit_code: 1
  program: "import std.math;\n/*\n\n    Given a string s, count the number of uppercase\
    \ vowels in even indices.\n    \n    For example:\n    >>> count_upper(\"aBCdEf\"\
    )\n    1L\n    >>> count_upper(\"abcdefg\")\n    0L\n    >>> count_upper(\"dBBE\"\
    )\n    0L\n    \n*/\nlong count_upper(string s) \n{\n    long count = 0;\n   \
    \ foreach(i, c; s)\n    {\n        if (i % 2 == 0 && isupper(c))\n           \
    \ count++;\n    }\n    return count;\n}\nunittest\n{\n    alias candidate = count_upper;\n\
    \n    assert(candidate(\"aBCdEf\") == 1L);\n    assert(candidate(\"abcdefg\")\
    \ == 0L);\n    assert(candidate(\"dBBE\") == 0L);\n    assert(candidate(\"B\"\
    ) == 0L);\n    assert(candidate(\"U\") == 1L);\n    assert(candidate(\"\") ==\
    \ 0L);\n    assert(candidate(\"EEEE\") == 2L);\n}\nvoid main(){}"
  status: SyntaxError
  stderr: '/tmp/tmphl4tr1v5.d(20): Error: undefined identifier `isupper`

    Failed: ["dmd", "-unittest", "-v", "-o-", "/tmp/tmphl4tr1v5.d", "-I/tmp"]

    '
  stdout: ''
  timestamp: 1660163029

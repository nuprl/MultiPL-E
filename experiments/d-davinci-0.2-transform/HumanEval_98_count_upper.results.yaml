language: d
name: HumanEval_98_count_upper
results:
- exit_code: 1
  program: "import std.math;\n/*\n\n    Given a string s, count the number of uppercase\
    \ vowels in even indices.\n    \n    For example:\n    >>> count_upper(\"aBCdEf\"\
    )\n    1L\n    >>> count_upper(\"abcdefg\")\n    0L\n    >>> count_upper(\"dBBE\"\
    )\n    0L\n    \n*/\nlong count_upper(string s) \n{\n    long count = 0;\n   \
    \ foreach(immutable i, immutable c; s)\n    {\n        if(i % 2 == 0 && c >= 'A'\
    \ && c <= 'Z')\n            count++;\n    }\n    return count;\n}\nunittest\n\
    {\n    alias candidate = count_upper;\n\n    assert(candidate(\"aBCdEf\") == 1L);\n\
    \    assert(candidate(\"abcdefg\") == 0L);\n    assert(candidate(\"dBBE\") ==\
    \ 0L);\n    assert(candidate(\"B\") == 0L);\n    assert(candidate(\"U\") == 1L);\n\
    \    assert(candidate(\"\") == 0L);\n    assert(candidate(\"EEEE\") == 2L);\n\
    }\nvoid main(){}"
  status: Exception
  stderr: 'b''core.exception.AssertError@/tmp/tmps8yotuh2.d(29): unittest failure\n----------------\n??:?
    _d_unittestp [0x427e45]\n??:? void tmps8yotuh2.__unittest_L25_C1() [0x427ab6]\n??:?
    void tmps8yotuh2.__modtest() [0x427bc4]\n??:? int core.runtime.runModuleUnitTests().__foreachbody2(object.ModuleInfo*)
    [0x42bb6b]\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)).__lambda2(immutable(object.ModuleInfo*))
    [0x42a9fe]\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))).__foreachbody2(ref
    rt.sections_elf_shared.DSO) [0x42fb91]\n??:? int rt.sections_elf_shared.DSO.opApply(scope
    int delegate(ref rt.sections_elf_shared.DSO)) [0x430040]\n??:? int rt.minfo.moduleinfos_apply(scope
    int delegate(immutable(object.ModuleInfo*))) [0x42fb1d]\n??:? int object.ModuleInfo.opApply(scope
    int delegate(object.ModuleInfo*)) [0x42a9d5]\n??:? runModuleUnitTests [0x42b941]\n??:?
    void rt.dmain2._d_run_main(int, char**, extern (C) int function(char[][])*).runAll()
    [0x428294]\n??:? void rt.dmain2._d_run_main(int, char**, extern (C) int function(char[][])*).tryExec(scope
    void delegate()) [0x42821b]\n??:? _d_run_main [0x428186]\n??:? main [0x427bd7]\n??:?
    __libc_start_main [0xa7e63554]\n1/1 unittests FAILED\n'''
  stdout: b''
- exit_code: 1
  program: "import std.math;\n/*\n\n    Given a string s, count the number of uppercase\
    \ vowels in even indices.\n    \n    For example:\n    >>> count_upper(\"aBCdEf\"\
    )\n    1L\n    >>> count_upper(\"abcdefg\")\n    0L\n    >>> count_upper(\"dBBE\"\
    )\n    0L\n    \n*/\nlong count_upper(string s) \n{\n    long count = 0;\n   \
    \ foreach(immutable i, immutable c; s)\n    {\n        if(i % 2 == 0 && c >= 'A'\
    \ && c <= 'Z')\n            count++;\n    }\n    return count;\n}\nunittest\n\
    {\n    alias candidate = count_upper;\n\n    assert(candidate(\"aBCdEf\") == 1L);\n\
    \    assert(candidate(\"abcdefg\") == 0L);\n    assert(candidate(\"dBBE\") ==\
    \ 0L);\n    assert(candidate(\"B\") == 0L);\n    assert(candidate(\"U\") == 1L);\n\
    \    assert(candidate(\"\") == 0L);\n    assert(candidate(\"EEEE\") == 2L);\n\
    }\nvoid main(){}"
  status: Exception
  stderr: 'b''core.exception.AssertError@/tmp/tmps8yotuh2.d(29): unittest failure\n----------------\n??:?
    _d_unittestp [0x427e45]\n??:? void tmps8yotuh2.__unittest_L25_C1() [0x427ab6]\n??:?
    void tmps8yotuh2.__modtest() [0x427bc4]\n??:? int core.runtime.runModuleUnitTests().__foreachbody2(object.ModuleInfo*)
    [0x42bb6b]\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)).__lambda2(immutable(object.ModuleInfo*))
    [0x42a9fe]\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))).__foreachbody2(ref
    rt.sections_elf_shared.DSO) [0x42fb91]\n??:? int rt.sections_elf_shared.DSO.opApply(scope
    int delegate(ref rt.sections_elf_shared.DSO)) [0x430040]\n??:? int rt.minfo.moduleinfos_apply(scope
    int delegate(immutable(object.ModuleInfo*))) [0x42fb1d]\n??:? int object.ModuleInfo.opApply(scope
    int delegate(object.ModuleInfo*)) [0x42a9d5]\n??:? runModuleUnitTests [0x42b941]\n??:?
    void rt.dmain2._d_run_main(int, char**, extern (C) int function(char[][])*).runAll()
    [0x428294]\n??:? void rt.dmain2._d_run_main(int, char**, extern (C) int function(char[][])*).tryExec(scope
    void delegate()) [0x42821b]\n??:? _d_run_main [0x428186]\n??:? main [0x427bd7]\n??:?
    __libc_start_main [0xa7e63554]\n1/1 unittests FAILED\n'''
  stdout: b''
- exit_code: 1
  program: "import std.math;\n/*\n\n    Given a string s, count the number of uppercase\
    \ vowels in even indices.\n    \n    For example:\n    >>> count_upper(\"aBCdEf\"\
    )\n    1L\n    >>> count_upper(\"abcdefg\")\n    0L\n    >>> count_upper(\"dBBE\"\
    )\n    0L\n    \n*/\nlong count_upper(string s) \n{\n    long count = 0;\n   \
    \ foreach(i, c; s)\n    {\n        if(i % 2 == 0 && c >= 'A' && c <= 'Z')\n  \
    \          count++;\n    }\n    return count;\n}\nunittest\n{\n    alias candidate\
    \ = count_upper;\n\n    assert(candidate(\"aBCdEf\") == 1L);\n    assert(candidate(\"\
    abcdefg\") == 0L);\n    assert(candidate(\"dBBE\") == 0L);\n    assert(candidate(\"\
    B\") == 0L);\n    assert(candidate(\"U\") == 1L);\n    assert(candidate(\"\")\
    \ == 0L);\n    assert(candidate(\"EEEE\") == 2L);\n}\nvoid main(){}"
  status: Exception
  stderr: 'b''core.exception.AssertError@/tmp/tmpxdg9_3m6.d(29): unittest failure\n----------------\n??:?
    _d_unittestp [0x427e3d]\n??:? void tmpxdg9_3m6.__unittest_L25_C1() [0x427ab2]\n??:?
    void tmpxdg9_3m6.__modtest() [0x427bc0]\n??:? int core.runtime.runModuleUnitTests().__foreachbody2(object.ModuleInfo*)
    [0x42bb63]\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)).__lambda2(immutable(object.ModuleInfo*))
    [0x42a9f6]\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))).__foreachbody2(ref
    rt.sections_elf_shared.DSO) [0x42fb89]\n??:? int rt.sections_elf_shared.DSO.opApply(scope
    int delegate(ref rt.sections_elf_shared.DSO)) [0x430038]\n??:? int rt.minfo.moduleinfos_apply(scope
    int delegate(immutable(object.ModuleInfo*))) [0x42fb15]\n??:? int object.ModuleInfo.opApply(scope
    int delegate(object.ModuleInfo*)) [0x42a9cd]\n??:? runModuleUnitTests [0x42b939]\n??:?
    void rt.dmain2._d_run_main(int, char**, extern (C) int function(char[][])*).runAll()
    [0x42828c]\n??:? void rt.dmain2._d_run_main(int, char**, extern (C) int function(char[][])*).tryExec(scope
    void delegate()) [0x428213]\n??:? _d_run_main [0x42817e]\n??:? main [0x427bd3]\n??:?
    __libc_start_main [0xc0e2e554]\n1/1 unittests FAILED\n'''
  stdout: b''
- exit_code: 1
  program: "import std.math;\n/*\n\n    Given a string s, count the number of uppercase\
    \ vowels in even indices.\n    \n    For example:\n    >>> count_upper(\"aBCdEf\"\
    )\n    1L\n    >>> count_upper(\"abcdefg\")\n    0L\n    >>> count_upper(\"dBBE\"\
    )\n    0L\n    \n*/\nlong count_upper(string s) \n{\n    long count = 0;\n   \
    \ foreach(i, c; s)\n    {\n        if(i % 2 == 0 && c == 'A' || c == 'E' || c\
    \ == 'I' || c == 'O' || c == 'U')\n        {\n            count++;\n        }\n\
    \    }\n    return count;\n}\nunittest\n{\n    alias candidate = count_upper;\n\
    \n    assert(candidate(\"aBCdEf\") == 1L);\n    assert(candidate(\"abcdefg\")\
    \ == 0L);\n    assert(candidate(\"dBBE\") == 0L);\n    assert(candidate(\"B\"\
    ) == 0L);\n    assert(candidate(\"U\") == 1L);\n    assert(candidate(\"\") ==\
    \ 0L);\n    assert(candidate(\"EEEE\") == 2L);\n}\nvoid main(){}"
  status: Exception
  stderr: 'b''core.exception.AssertError@/tmp/tmpvzpffbsa.d(33): unittest failure\n----------------\n??:?
    _d_unittestp [0x427e55]\n??:? void tmpvzpffbsa.__unittest_L27_C1() [0x427b1a]\n??:?
    void tmpvzpffbsa.__modtest() [0x427bd4]\n??:? int core.runtime.runModuleUnitTests().__foreachbody2(object.ModuleInfo*)
    [0x42bb7b]\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)).__lambda2(immutable(object.ModuleInfo*))
    [0x42aa0e]\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))).__foreachbody2(ref
    rt.sections_elf_shared.DSO) [0x42fba1]\n??:? int rt.sections_elf_shared.DSO.opApply(scope
    int delegate(ref rt.sections_elf_shared.DSO)) [0x430050]\n??:? int rt.minfo.moduleinfos_apply(scope
    int delegate(immutable(object.ModuleInfo*))) [0x42fb2d]\n??:? int object.ModuleInfo.opApply(scope
    int delegate(object.ModuleInfo*)) [0x42a9e5]\n??:? runModuleUnitTests [0x42b951]\n??:?
    void rt.dmain2._d_run_main(int, char**, extern (C) int function(char[][])*).runAll()
    [0x4282a4]\n??:? void rt.dmain2._d_run_main(int, char**, extern (C) int function(char[][])*).tryExec(scope
    void delegate()) [0x42822b]\n??:? _d_run_main [0x428196]\n??:? main [0x427be7]\n??:?
    __libc_start_main [0x7964e554]\n1/1 unittests FAILED\n'''
  stdout: b''
- exit_code: 1
  program: "import std.math;\n/*\n\n    Given a string s, count the number of uppercase\
    \ vowels in even indices.\n    \n    For example:\n    >>> count_upper(\"aBCdEf\"\
    )\n    1L\n    >>> count_upper(\"abcdefg\")\n    0L\n    >>> count_upper(\"dBBE\"\
    )\n    0L\n    \n*/\nlong count_upper(string s) \n{\n    long count = 0;\n   \
    \ foreach(i, c; s)\n    {\n        if(i % 2 == 0 && isupper(c))\n            count++;\n\
    \    }\n    return count;\n}\nunittest\n{\n    alias candidate = count_upper;\n\
    \n    assert(candidate(\"aBCdEf\") == 1L);\n    assert(candidate(\"abcdefg\")\
    \ == 0L);\n    assert(candidate(\"dBBE\") == 0L);\n    assert(candidate(\"B\"\
    ) == 0L);\n    assert(candidate(\"U\") == 1L);\n    assert(candidate(\"\") ==\
    \ 0L);\n    assert(candidate(\"EEEE\") == 2L);\n}\nvoid main(){}"
  status: SyntaxError
  stderr: 'b''/tmp/tmpf4o97_sp.d(20): Error: undefined identifier `isupper`\nFailed:
    ["dmd", "-unittest", "-v", "-o-", "/tmp/tmpf4o97_sp.d", "-I/tmp"]\n'''
  stdout: b''
- exit_code: 1
  program: "import std.math;\n/*\n\n    Given a string s, count the number of uppercase\
    \ vowels in even indices.\n    \n    For example:\n    >>> count_upper(\"aBCdEf\"\
    )\n    1L\n    >>> count_upper(\"abcdefg\")\n    0L\n    >>> count_upper(\"dBBE\"\
    )\n    0L\n    \n*/\nlong count_upper(string s) \n{\n    long count = 0;\n   \
    \ foreach(i, c; s)\n    {\n        if(i % 2 == 0 && c >= 'A' && c <= 'Z')\n  \
    \          count++;\n    }\n    return count;\n}\nunittest\n{\n    alias candidate\
    \ = count_upper;\n\n    assert(candidate(\"aBCdEf\") == 1L);\n    assert(candidate(\"\
    abcdefg\") == 0L);\n    assert(candidate(\"dBBE\") == 0L);\n    assert(candidate(\"\
    B\") == 0L);\n    assert(candidate(\"U\") == 1L);\n    assert(candidate(\"\")\
    \ == 0L);\n    assert(candidate(\"EEEE\") == 2L);\n}\nvoid main(){}"
  status: Exception
  stderr: 'b''core.exception.AssertError@/tmp/tmpxdg9_3m6.d(29): unittest failure\n----------------\n??:?
    _d_unittestp [0x427e3d]\n??:? void tmpxdg9_3m6.__unittest_L25_C1() [0x427ab2]\n??:?
    void tmpxdg9_3m6.__modtest() [0x427bc0]\n??:? int core.runtime.runModuleUnitTests().__foreachbody2(object.ModuleInfo*)
    [0x42bb63]\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)).__lambda2(immutable(object.ModuleInfo*))
    [0x42a9f6]\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))).__foreachbody2(ref
    rt.sections_elf_shared.DSO) [0x42fb89]\n??:? int rt.sections_elf_shared.DSO.opApply(scope
    int delegate(ref rt.sections_elf_shared.DSO)) [0x430038]\n??:? int rt.minfo.moduleinfos_apply(scope
    int delegate(immutable(object.ModuleInfo*))) [0x42fb15]\n??:? int object.ModuleInfo.opApply(scope
    int delegate(object.ModuleInfo*)) [0x42a9cd]\n??:? runModuleUnitTests [0x42b939]\n??:?
    void rt.dmain2._d_run_main(int, char**, extern (C) int function(char[][])*).runAll()
    [0x42828c]\n??:? void rt.dmain2._d_run_main(int, char**, extern (C) int function(char[][])*).tryExec(scope
    void delegate()) [0x428213]\n??:? _d_run_main [0x42817e]\n??:? main [0x427bd3]\n??:?
    __libc_start_main [0xc0e2e554]\n1/1 unittests FAILED\n'''
  stdout: b''
- exit_code: 1
  program: "import std.math;\n/*\n\n    Given a string s, count the number of uppercase\
    \ vowels in even indices.\n    \n    For example:\n    >>> count_upper(\"aBCdEf\"\
    )\n    1L\n    >>> count_upper(\"abcdefg\")\n    0L\n    >>> count_upper(\"dBBE\"\
    )\n    0L\n    \n*/\nlong count_upper(string s) \n{\n    long count = 0;\n   \
    \ foreach(i, c; s) \n    {\n        if(i % 2 == 0 && c >= 'A' && c <= 'Z') \n\
    \        {\n            count++;\n        }\n    }\n    return count;\n}\nunittest\n\
    {\n    alias candidate = count_upper;\n\n    assert(candidate(\"aBCdEf\") == 1L);\n\
    \    assert(candidate(\"abcdefg\") == 0L);\n    assert(candidate(\"dBBE\") ==\
    \ 0L);\n    assert(candidate(\"B\") == 0L);\n    assert(candidate(\"U\") == 1L);\n\
    \    assert(candidate(\"\") == 0L);\n    assert(candidate(\"EEEE\") == 2L);\n\
    }\nvoid main(){}"
  status: Exception
  stderr: 'b''core.exception.AssertError@/tmp/tmpu6ng43j2.d(31): unittest failure\n----------------\n??:?
    _d_unittestp [0x427e3d]\n??:? void tmpu6ng43j2.__unittest_L27_C1() [0x427ab2]\n??:?
    void tmpu6ng43j2.__modtest() [0x427bc0]\n??:? int core.runtime.runModuleUnitTests().__foreachbody2(object.ModuleInfo*)
    [0x42bb63]\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)).__lambda2(immutable(object.ModuleInfo*))
    [0x42a9f6]\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))).__foreachbody2(ref
    rt.sections_elf_shared.DSO) [0x42fb89]\n??:? int rt.sections_elf_shared.DSO.opApply(scope
    int delegate(ref rt.sections_elf_shared.DSO)) [0x430038]\n??:? int rt.minfo.moduleinfos_apply(scope
    int delegate(immutable(object.ModuleInfo*))) [0x42fb15]\n??:? int object.ModuleInfo.opApply(scope
    int delegate(object.ModuleInfo*)) [0x42a9cd]\n??:? runModuleUnitTests [0x42b939]\n??:?
    void rt.dmain2._d_run_main(int, char**, extern (C) int function(char[][])*).runAll()
    [0x42828c]\n??:? void rt.dmain2._d_run_main(int, char**, extern (C) int function(char[][])*).tryExec(scope
    void delegate()) [0x428213]\n??:? _d_run_main [0x42817e]\n??:? main [0x427bd3]\n??:?
    __libc_start_main [0x432b5554]\n1/1 unittests FAILED\n'''
  stdout: b''
- exit_code: 1
  program: "import std.math;\n/*\n\n    Given a string s, count the number of uppercase\
    \ vowels in even indices.\n    \n    For example:\n    >>> count_upper(\"aBCdEf\"\
    )\n    1L\n    >>> count_upper(\"abcdefg\")\n    0L\n    >>> count_upper(\"dBBE\"\
    )\n    0L\n    \n*/\nlong count_upper(string s) \n{\n    long count = 0;\n   \
    \ foreach(i, c; s)\n    {\n        if(i % 2 == 0 && c >= 'A' && c <= 'Z')\n  \
    \          count++;\n    }\n    return count;\n}\nunittest\n{\n    alias candidate\
    \ = count_upper;\n\n    assert(candidate(\"aBCdEf\") == 1L);\n    assert(candidate(\"\
    abcdefg\") == 0L);\n    assert(candidate(\"dBBE\") == 0L);\n    assert(candidate(\"\
    B\") == 0L);\n    assert(candidate(\"U\") == 1L);\n    assert(candidate(\"\")\
    \ == 0L);\n    assert(candidate(\"EEEE\") == 2L);\n}\nvoid main(){}"
  status: Exception
  stderr: 'b''core.exception.AssertError@/tmp/tmpxdg9_3m6.d(29): unittest failure\n----------------\n??:?
    _d_unittestp [0x427e3d]\n??:? void tmpxdg9_3m6.__unittest_L25_C1() [0x427ab2]\n??:?
    void tmpxdg9_3m6.__modtest() [0x427bc0]\n??:? int core.runtime.runModuleUnitTests().__foreachbody2(object.ModuleInfo*)
    [0x42bb63]\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)).__lambda2(immutable(object.ModuleInfo*))
    [0x42a9f6]\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))).__foreachbody2(ref
    rt.sections_elf_shared.DSO) [0x42fb89]\n??:? int rt.sections_elf_shared.DSO.opApply(scope
    int delegate(ref rt.sections_elf_shared.DSO)) [0x430038]\n??:? int rt.minfo.moduleinfos_apply(scope
    int delegate(immutable(object.ModuleInfo*))) [0x42fb15]\n??:? int object.ModuleInfo.opApply(scope
    int delegate(object.ModuleInfo*)) [0x42a9cd]\n??:? runModuleUnitTests [0x42b939]\n??:?
    void rt.dmain2._d_run_main(int, char**, extern (C) int function(char[][])*).runAll()
    [0x42828c]\n??:? void rt.dmain2._d_run_main(int, char**, extern (C) int function(char[][])*).tryExec(scope
    void delegate()) [0x428213]\n??:? _d_run_main [0x42817e]\n??:? main [0x427bd3]\n??:?
    __libc_start_main [0xc0e2e554]\n1/1 unittests FAILED\n'''
  stdout: b''
- exit_code: 1
  program: "import std.math;\n/*\n\n    Given a string s, count the number of uppercase\
    \ vowels in even indices.\n    \n    For example:\n    >>> count_upper(\"aBCdEf\"\
    )\n    1L\n    >>> count_upper(\"abcdefg\")\n    0L\n    >>> count_upper(\"dBBE\"\
    )\n    0L\n    \n*/\nlong count_upper(string s) \n{\n    long count = 0;\n   \
    \ foreach(i, c; s)\n    {\n        if(i % 2 == 0 && isupper(c))\n            count++;\n\
    \    }\n    return count;\n}\nunittest\n{\n    alias candidate = count_upper;\n\
    \n    assert(candidate(\"aBCdEf\") == 1L);\n    assert(candidate(\"abcdefg\")\
    \ == 0L);\n    assert(candidate(\"dBBE\") == 0L);\n    assert(candidate(\"B\"\
    ) == 0L);\n    assert(candidate(\"U\") == 1L);\n    assert(candidate(\"\") ==\
    \ 0L);\n    assert(candidate(\"EEEE\") == 2L);\n}\nvoid main(){}"
  status: SyntaxError
  stderr: 'b''/tmp/tmpf4o97_sp.d(20): Error: undefined identifier `isupper`\nFailed:
    ["dmd", "-unittest", "-v", "-o-", "/tmp/tmpf4o97_sp.d", "-I/tmp"]\n'''
  stdout: b''
- exit_code: 1
  program: "import std.math;\n/*\n\n    Given a string s, count the number of uppercase\
    \ vowels in even indices.\n    \n    For example:\n    >>> count_upper(\"aBCdEf\"\
    )\n    1L\n    >>> count_upper(\"abcdefg\")\n    0L\n    >>> count_upper(\"dBBE\"\
    )\n    0L\n    \n*/\nlong count_upper(string s) \n{\n    long count = 0;\n   \
    \ foreach(i, c; s)\n    {\n        if(i % 2 == 0 && isupper(c))\n            count++;\n\
    \    }\n    return count;\n}\nunittest\n{\n    alias candidate = count_upper;\n\
    \n    assert(candidate(\"aBCdEf\") == 1L);\n    assert(candidate(\"abcdefg\")\
    \ == 0L);\n    assert(candidate(\"dBBE\") == 0L);\n    assert(candidate(\"B\"\
    ) == 0L);\n    assert(candidate(\"U\") == 1L);\n    assert(candidate(\"\") ==\
    \ 0L);\n    assert(candidate(\"EEEE\") == 2L);\n}\nvoid main(){}"
  status: SyntaxError
  stderr: 'b''/tmp/tmpf4o97_sp.d(20): Error: undefined identifier `isupper`\nFailed:
    ["dmd", "-unittest", "-v", "-o-", "/tmp/tmpf4o97_sp.d", "-I/tmp"]\n'''
  stdout: b''
- exit_code: 1
  program: "import std.math;\n/*\n\n    Given a string s, count the number of uppercase\
    \ vowels in even indices.\n    \n    For example:\n    >>> count_upper(\"aBCdEf\"\
    )\n    1L\n    >>> count_upper(\"abcdefg\")\n    0L\n    >>> count_upper(\"dBBE\"\
    )\n    0L\n    \n*/\nlong count_upper(string s) \n{\n    long count = 0;\n   \
    \ foreach(immutable i, immutable c; s)\n    {\n        if(i % 2 == 0 && c >= 'A'\
    \ && c <= 'Z')\n            count++;\n    }\n    return count;\n}\nunittest\n\
    {\n    alias candidate = count_upper;\n\n    assert(candidate(\"aBCdEf\") == 1L);\n\
    \    assert(candidate(\"abcdefg\") == 0L);\n    assert(candidate(\"dBBE\") ==\
    \ 0L);\n    assert(candidate(\"B\") == 0L);\n    assert(candidate(\"U\") == 1L);\n\
    \    assert(candidate(\"\") == 0L);\n    assert(candidate(\"EEEE\") == 2L);\n\
    }\nvoid main(){}"
  status: Exception
  stderr: 'b''core.exception.AssertError@/tmp/tmps8yotuh2.d(29): unittest failure\n----------------\n??:?
    _d_unittestp [0x427e45]\n??:? void tmps8yotuh2.__unittest_L25_C1() [0x427ab6]\n??:?
    void tmps8yotuh2.__modtest() [0x427bc4]\n??:? int core.runtime.runModuleUnitTests().__foreachbody2(object.ModuleInfo*)
    [0x42bb6b]\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)).__lambda2(immutable(object.ModuleInfo*))
    [0x42a9fe]\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))).__foreachbody2(ref
    rt.sections_elf_shared.DSO) [0x42fb91]\n??:? int rt.sections_elf_shared.DSO.opApply(scope
    int delegate(ref rt.sections_elf_shared.DSO)) [0x430040]\n??:? int rt.minfo.moduleinfos_apply(scope
    int delegate(immutable(object.ModuleInfo*))) [0x42fb1d]\n??:? int object.ModuleInfo.opApply(scope
    int delegate(object.ModuleInfo*)) [0x42a9d5]\n??:? runModuleUnitTests [0x42b941]\n??:?
    void rt.dmain2._d_run_main(int, char**, extern (C) int function(char[][])*).runAll()
    [0x428294]\n??:? void rt.dmain2._d_run_main(int, char**, extern (C) int function(char[][])*).tryExec(scope
    void delegate()) [0x42821b]\n??:? _d_run_main [0x428186]\n??:? main [0x427bd7]\n??:?
    __libc_start_main [0xa7e63554]\n1/1 unittests FAILED\n'''
  stdout: b''
- exit_code: 1
  program: "import std.math;\n/*\n\n    Given a string s, count the number of uppercase\
    \ vowels in even indices.\n    \n    For example:\n    >>> count_upper(\"aBCdEf\"\
    )\n    1L\n    >>> count_upper(\"abcdefg\")\n    0L\n    >>> count_upper(\"dBBE\"\
    )\n    0L\n    \n*/\nlong count_upper(string s) \n{\n    long count = 0;\n   \
    \ foreach(i, c; s)\n    {\n        if(i % 2 == 0 && c == 'A' || c == 'E' || c\
    \ == 'I' || c == 'O' || c == 'U')\n        {\n            count++;\n        }\n\
    \    }\n    return count;\n}\nunittest\n{\n    alias candidate = count_upper;\n\
    \n    assert(candidate(\"aBCdEf\") == 1L);\n    assert(candidate(\"abcdefg\")\
    \ == 0L);\n    assert(candidate(\"dBBE\") == 0L);\n    assert(candidate(\"B\"\
    ) == 0L);\n    assert(candidate(\"U\") == 1L);\n    assert(candidate(\"\") ==\
    \ 0L);\n    assert(candidate(\"EEEE\") == 2L);\n}\nvoid main(){}"
  status: Exception
  stderr: 'b''core.exception.AssertError@/tmp/tmpvzpffbsa.d(33): unittest failure\n----------------\n??:?
    _d_unittestp [0x427e55]\n??:? void tmpvzpffbsa.__unittest_L27_C1() [0x427b1a]\n??:?
    void tmpvzpffbsa.__modtest() [0x427bd4]\n??:? int core.runtime.runModuleUnitTests().__foreachbody2(object.ModuleInfo*)
    [0x42bb7b]\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)).__lambda2(immutable(object.ModuleInfo*))
    [0x42aa0e]\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))).__foreachbody2(ref
    rt.sections_elf_shared.DSO) [0x42fba1]\n??:? int rt.sections_elf_shared.DSO.opApply(scope
    int delegate(ref rt.sections_elf_shared.DSO)) [0x430050]\n??:? int rt.minfo.moduleinfos_apply(scope
    int delegate(immutable(object.ModuleInfo*))) [0x42fb2d]\n??:? int object.ModuleInfo.opApply(scope
    int delegate(object.ModuleInfo*)) [0x42a9e5]\n??:? runModuleUnitTests [0x42b951]\n??:?
    void rt.dmain2._d_run_main(int, char**, extern (C) int function(char[][])*).runAll()
    [0x4282a4]\n??:? void rt.dmain2._d_run_main(int, char**, extern (C) int function(char[][])*).tryExec(scope
    void delegate()) [0x42822b]\n??:? _d_run_main [0x428196]\n??:? main [0x427be7]\n??:?
    __libc_start_main [0x7964e554]\n1/1 unittests FAILED\n'''
  stdout: b''
- exit_code: 1
  program: "import std.math;\n/*\n\n    Given a string s, count the number of uppercase\
    \ vowels in even indices.\n    \n    For example:\n    >>> count_upper(\"aBCdEf\"\
    )\n    1L\n    >>> count_upper(\"abcdefg\")\n    0L\n    >>> count_upper(\"dBBE\"\
    )\n    0L\n    \n*/\nlong count_upper(string s) \n{\n    long count = 0;\n   \
    \ foreach(i, c; s)\n    {\n        if(i % 2 == 0 && isupper(c))\n            count++;\n\
    \    }\n    return count;\n}\nunittest\n{\n    alias candidate = count_upper;\n\
    \n    assert(candidate(\"aBCdEf\") == 1L);\n    assert(candidate(\"abcdefg\")\
    \ == 0L);\n    assert(candidate(\"dBBE\") == 0L);\n    assert(candidate(\"B\"\
    ) == 0L);\n    assert(candidate(\"U\") == 1L);\n    assert(candidate(\"\") ==\
    \ 0L);\n    assert(candidate(\"EEEE\") == 2L);\n}\nvoid main(){}"
  status: SyntaxError
  stderr: 'b''/tmp/tmpf4o97_sp.d(20): Error: undefined identifier `isupper`\nFailed:
    ["dmd", "-unittest", "-v", "-o-", "/tmp/tmpf4o97_sp.d", "-I/tmp"]\n'''
  stdout: b''
- exit_code: 1
  program: "import std.math;\n/*\n\n    Given a string s, count the number of uppercase\
    \ vowels in even indices.\n    \n    For example:\n    >>> count_upper(\"aBCdEf\"\
    )\n    1L\n    >>> count_upper(\"abcdefg\")\n    0L\n    >>> count_upper(\"dBBE\"\
    )\n    0L\n    \n*/\nlong count_upper(string s) \n{\n    long count = 0;\n   \
    \ foreach(i, c; s)\n    {\n        if(i % 2 == 0 && isUpper(c))\n            count++;\n\
    \    }\n    return count;\n}\nunittest\n{\n    alias candidate = count_upper;\n\
    \n    assert(candidate(\"aBCdEf\") == 1L);\n    assert(candidate(\"abcdefg\")\
    \ == 0L);\n    assert(candidate(\"dBBE\") == 0L);\n    assert(candidate(\"B\"\
    ) == 0L);\n    assert(candidate(\"U\") == 1L);\n    assert(candidate(\"\") ==\
    \ 0L);\n    assert(candidate(\"EEEE\") == 2L);\n}\nvoid main(){}"
  status: SyntaxError
  stderr: 'b''/tmp/tmpbqe7yb5_.d(20): Error: undefined identifier `isUpper`\nFailed:
    ["dmd", "-unittest", "-v", "-o-", "/tmp/tmpbqe7yb5_.d", "-I/tmp"]\n'''
  stdout: b''
- exit_code: 1
  program: "import std.math;\n/*\n\n    Given a string s, count the number of uppercase\
    \ vowels in even indices.\n    \n    For example:\n    >>> count_upper(\"aBCdEf\"\
    )\n    1L\n    >>> count_upper(\"abcdefg\")\n    0L\n    >>> count_upper(\"dBBE\"\
    )\n    0L\n    \n*/\nlong count_upper(string s) \n{\n    long count = 0;\n   \
    \ foreach(i, c; s)\n    {\n        if(i % 2 == 0 && isupper(c))\n            count++;\n\
    \    }\n    return count;\n}\nunittest\n{\n    alias candidate = count_upper;\n\
    \n    assert(candidate(\"aBCdEf\") == 1L);\n    assert(candidate(\"abcdefg\")\
    \ == 0L);\n    assert(candidate(\"dBBE\") == 0L);\n    assert(candidate(\"B\"\
    ) == 0L);\n    assert(candidate(\"U\") == 1L);\n    assert(candidate(\"\") ==\
    \ 0L);\n    assert(candidate(\"EEEE\") == 2L);\n}\nvoid main(){}"
  status: SyntaxError
  stderr: 'b''/tmp/tmpf4o97_sp.d(20): Error: undefined identifier `isupper`\nFailed:
    ["dmd", "-unittest", "-v", "-o-", "/tmp/tmpf4o97_sp.d", "-I/tmp"]\n'''
  stdout: b''
- exit_code: 1
  program: "import std.math;\n/*\n\n    Given a string s, count the number of uppercase\
    \ vowels in even indices.\n    \n    For example:\n    >>> count_upper(\"aBCdEf\"\
    )\n    1L\n    >>> count_upper(\"abcdefg\")\n    0L\n    >>> count_upper(\"dBBE\"\
    )\n    0L\n    \n*/\nlong count_upper(string s) \n{\n    long count = 0;\n   \
    \ foreach(immutable i, immutable c; s)\n    {\n        if(i % 2 == 0 && c in \"\
    AEIOU\")\n            count++;\n    }\n    return count;\n}\nunittest\n{\n   \
    \ alias candidate = count_upper;\n\n    assert(candidate(\"aBCdEf\") == 1L);\n\
    \    assert(candidate(\"abcdefg\") == 0L);\n    assert(candidate(\"dBBE\") ==\
    \ 0L);\n    assert(candidate(\"B\") == 0L);\n    assert(candidate(\"U\") == 1L);\n\
    \    assert(candidate(\"\") == 0L);\n    assert(candidate(\"EEEE\") == 2L);\n\
    }\nvoid main(){}"
  status: SyntaxError
  stderr: 'b''/tmp/tmpksd5urfy.d(20): Error: incompatible types for `(c) in ("AEIOU")`:
    `immutable(char)` and `string`\nFailed: ["dmd", "-unittest", "-v", "-o-", "/tmp/tmpksd5urfy.d",
    "-I/tmp"]\n'''
  stdout: b''
- exit_code: 1
  program: "import std.math;\n/*\n\n    Given a string s, count the number of uppercase\
    \ vowels in even indices.\n    \n    For example:\n    >>> count_upper(\"aBCdEf\"\
    )\n    1L\n    >>> count_upper(\"abcdefg\")\n    0L\n    >>> count_upper(\"dBBE\"\
    )\n    0L\n    \n*/\nlong count_upper(string s) \n{\n    long count = 0;\n   \
    \ foreach(immutable i, immutable c; s)\n    {\n        if(i % 2 == 0 && isUpper(c))\n\
    \            count++;\n    }\n    return count;\n}\nunittest\n{\n    alias candidate\
    \ = count_upper;\n\n    assert(candidate(\"aBCdEf\") == 1L);\n    assert(candidate(\"\
    abcdefg\") == 0L);\n    assert(candidate(\"dBBE\") == 0L);\n    assert(candidate(\"\
    B\") == 0L);\n    assert(candidate(\"U\") == 1L);\n    assert(candidate(\"\")\
    \ == 0L);\n    assert(candidate(\"EEEE\") == 2L);\n}\nvoid main(){}"
  status: SyntaxError
  stderr: 'b''/tmp/tmp2znmfulu.d(20): Error: undefined identifier `isUpper`\nFailed:
    ["dmd", "-unittest", "-v", "-o-", "/tmp/tmp2znmfulu.d", "-I/tmp"]\n'''
  stdout: b''
- exit_code: 1
  program: "import std.math;\n/*\n\n    Given a string s, count the number of uppercase\
    \ vowels in even indices.\n    \n    For example:\n    >>> count_upper(\"aBCdEf\"\
    )\n    1L\n    >>> count_upper(\"abcdefg\")\n    0L\n    >>> count_upper(\"dBBE\"\
    )\n    0L\n    \n*/\nlong count_upper(string s) \n{\n    long count = 0;\n   \
    \ for (size_t i = 0; i < s.length; i++)\n    {\n        if (i % 2 == 0 && s[i]\
    \ == toupper(s[i]))\n        {\n            count++;\n        }\n    }\n    return\
    \ count;\n}\nunittest\n{\n    alias candidate = count_upper;\n\n    assert(candidate(\"\
    aBCdEf\") == 1L);\n    assert(candidate(\"abcdefg\") == 0L);\n    assert(candidate(\"\
    dBBE\") == 0L);\n    assert(candidate(\"B\") == 0L);\n    assert(candidate(\"\
    U\") == 1L);\n    assert(candidate(\"\") == 0L);\n    assert(candidate(\"EEEE\"\
    ) == 2L);\n}\nvoid main(){}"
  status: SyntaxError
  stderr: 'b''/tmp/tmpescegj66.d(20): Error: undefined identifier `toupper`\nFailed:
    ["dmd", "-unittest", "-v", "-o-", "/tmp/tmpescegj66.d", "-I/tmp"]\n'''
  stdout: b''
- exit_code: 1
  program: "import std.math;\n/*\n\n    Given a string s, count the number of uppercase\
    \ vowels in even indices.\n    \n    For example:\n    >>> count_upper(\"aBCdEf\"\
    )\n    1L\n    >>> count_upper(\"abcdefg\")\n    0L\n    >>> count_upper(\"dBBE\"\
    )\n    0L\n    \n*/\nlong count_upper(string s) \n{\n    long count = 0;\n   \
    \ foreach(i, c; s)\n    {\n        if(i % 2 == 0 && c in ['A', 'E', 'I', 'O',\
    \ 'U'])\n            count++;\n    }\n    return count;\n}\nunittest\n{\n    alias\
    \ candidate = count_upper;\n\n    assert(candidate(\"aBCdEf\") == 1L);\n    assert(candidate(\"\
    abcdefg\") == 0L);\n    assert(candidate(\"dBBE\") == 0L);\n    assert(candidate(\"\
    B\") == 0L);\n    assert(candidate(\"U\") == 1L);\n    assert(candidate(\"\")\
    \ == 0L);\n    assert(candidate(\"EEEE\") == 2L);\n}\nvoid main(){}"
  status: SyntaxError
  stderr: 'b''/tmp/tmpfu3d2ukn.d(20): Error: incompatible types for `(c) in ([\''A\'',
    \''E\'', \''I\'', \''O\'', \''U\''])`: `immutable(char)` and `char[]`\nFailed:
    ["dmd", "-unittest", "-v", "-o-", "/tmp/tmpfu3d2ukn.d", "-I/tmp"]\n'''
  stdout: b''
- exit_code: 1
  program: "import std.math;\n/*\n\n    Given a string s, count the number of uppercase\
    \ vowels in even indices.\n    \n    For example:\n    >>> count_upper(\"aBCdEf\"\
    )\n    1L\n    >>> count_upper(\"abcdefg\")\n    0L\n    >>> count_upper(\"dBBE\"\
    )\n    0L\n    \n*/\nlong count_upper(string s) \n{\n    long count = 0;\n   \
    \ foreach(i, c; s)\n    {\n        if(i % 2 == 0 && isUpper(c))\n            count++;\n\
    \    }\n    return count;\n}\nunittest\n{\n    alias candidate = count_upper;\n\
    \n    assert(candidate(\"aBCdEf\") == 1L);\n    assert(candidate(\"abcdefg\")\
    \ == 0L);\n    assert(candidate(\"dBBE\") == 0L);\n    assert(candidate(\"B\"\
    ) == 0L);\n    assert(candidate(\"U\") == 1L);\n    assert(candidate(\"\") ==\
    \ 0L);\n    assert(candidate(\"EEEE\") == 2L);\n}\nvoid main(){}"
  status: SyntaxError
  stderr: 'b''/tmp/tmpbqe7yb5_.d(20): Error: undefined identifier `isUpper`\nFailed:
    ["dmd", "-unittest", "-v", "-o-", "/tmp/tmpbqe7yb5_.d", "-I/tmp"]\n'''
  stdout: b''

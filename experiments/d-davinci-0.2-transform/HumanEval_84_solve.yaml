name: HumanEval_84_solve
language: d
prompt: "import std.typecons;\nimport std.math;\n/*\nGiven a positive integer N, return\
  \ the total sum of its digits in binary.\n    \n    Example\n    >>> solve(1000L)\n\
  \    \"1\"\n    >>> solve(150L)\n    \"110\"\n    >>> solve(147L)\n    \"1100\"\n\
  \    \n    Variables:\n        @N integer\n             Constraints: 0 \u2264 N\
  \ \u2264 10000.\n    Output:\n         a string of binary number\n    \n*/\nstring\
  \ solve(long N) \n"
tests: "unittest\n{\n    alias candidate = solve;\n\n    assert(candidate(1000L) ==\
  \ \"1\");\n    assert(candidate(150L) == \"110\");\n    assert(candidate(147L) ==\
  \ \"1100\");\n    assert(candidate(333L) == \"1001\");\n    assert(candidate(963L)\
  \ == \"10010\");\n}\nvoid main(){}"
completions: ["{\n    string result = \"\";\n    while(N > 0)\n    {\n        result\
    \ = to!string(N % 2) ~ result;\n        N /= 2;\n    }\n    return result;\n}",
  "{\n    string result = \"\";\n    while(N > 0)\n    {\n        result = to!string(N\
    \ % 2) ~ result;\n        N /= 2;\n    }\n    return result;\n}", "{\n    string\
    \ result = \"\";\n    while(N > 0)\n    {\n        result = to!string(N % 2) ~\
    \ result;\n        N /= 2;\n    }\n    return result;\n}", "{\n    string result\
    \ = \"\";\n    while(N > 0)\n    {\n        result = to!string(N % 2) ~ result;\n\
    \        N /= 2;\n    }\n    return result;\n}", "{\n    string result = \"\"\
    ;\n    while(N > 0)\n    {\n        result = to!string(N % 2) ~ result;\n    \
    \    N /= 2;\n    }\n    return result;\n}", "{\n    string result;\n    while(N\
    \ != 0)\n    {\n        result ~= to!string(N % 2);\n        N /= 2;\n    }\n\
    \    return result.reverse;\n}", "{\n    string result = \"\";\n    while(N >\
    \ 0)\n    {\n        result = to!string(N % 2) ~ result;\n        N /= 2;\n  \
    \  }\n    return result;\n}", "{\n    string result = \"\";\n    while(N > 0)\n\
    \    {\n        result = to!string(N % 2) ~ result;\n        N /= 2;\n    }\n\
    \    return result;\n}", "{\n    string s = \"\";\n    while(N > 0)\n    {\n \
    \       s = to!string(N % 2) ~ s;\n        N /= 2;\n    }\n    return s;\n}",
  "{\n    string result = \"\";\n    while(N > 0)\n    {\n        result = to!string(N\
    \ % 2) ~ result;\n        N /= 2;\n    }\n    return result;\n}", "{\n    string\
    \ bin = \"\";\n    while(N != 0)\n    {\n        bin = to!string(N % 2) ~ bin;\n\
    \        N /= 2;\n    }\n    return bin;\n}", "{\n    string result = \"\";\n\
    \    while(N > 0)\n    {\n        result = to!string(N % 2) ~ result;\n      \
    \  N /= 2;\n    }\n    return result;\n}", "{\n    string result = \"\";\n   \
    \ while(N > 0)\n    {\n        result = to!string(N % 2) ~ result;\n        N\
    \ /= 2;\n    }\n    return result;\n}", "{\n    string result = \"\";\n    while(N\
    \ > 0)\n    {\n        result = to!string(N % 2) ~ result;\n        N /= 2;\n\
    \    }\n    return result;\n}", "{\n    string result = \"\";\n    while(N > 0)\n\
    \    {\n        result = to!string(N % 2) ~ result;\n        N /= 2;\n    }\n\
    \    return result;\n}", "{\n    string s = \"\";\n    while(N > 0)\n    {\n \
    \       s = to!string(N % 2) ~ s;\n        N /= 2;\n    }\n    return s;\n}",
  "{\n    string result = \"\";\n    while(N > 0)\n    {\n        result = to!string(N\
    \ % 2) ~ result;\n        N /= 2;\n    }\n    return result;\n}", "{\n    string\
    \ result;\n    while(N > 0)\n    {\n        result ~= to!string(N % 2);\n    \
    \    N /= 2;\n    }\n    return result.reverse;\n}", "{\n    string result = \"\
    \";\n    while(N != 0)\n    {\n        result = to!string(N % 2) ~ result;\n \
    \       N /= 2;\n    }\n    return result;\n}", "{\n    string result = \"\";\n\
    \    while(N > 0)\n    {\n        result = to!string(N % 2) ~ result;\n      \
    \  N /= 2;\n    }\n    return result;\n}"]
stop_tokens:
- "\n\n"
- "\nvoid"
- "\nbool"
- "\nint"

name: HumanEval_80_is_happy
language: d
prompt: "import std.typecons;\nimport std.math;\n/*\nYou are given a string s.\n \
  \   Your task is to check if the string is happy or not.\n    A string is happy\
  \ if its length is at least 3 and every 3 consecutive letters are distinct\n   \
  \ For example:\n    >>> is_happy(a)\n    false\n    >>> is_happy(aa)\n    false\n\
  \    >>> is_happy(abcd)\n    true\n    >>> is_happy(aabb)\n    false\n    >>> is_happy(adb)\n\
  \    true\n    >>> is_happy(xyy)\n    false\n    \n*/\nbool is_happy(string s) \n"
tests: "unittest\n{\n    alias candidate = is_happy;\n\n    assert(candidate(\"a\"\
  ) == false);\n    assert(candidate(\"aa\") == false);\n    assert(candidate(\"abcd\"\
  ) == true);\n    assert(candidate(\"aabb\") == false);\n    assert(candidate(\"\
  adb\") == true);\n    assert(candidate(\"xyy\") == false);\n    assert(candidate(\"\
  iopaxpoi\") == true);\n    assert(candidate(\"iopaxioi\") == false);\n}\nvoid main(){}"
completions: ["{\n    if (s.length < 3) return false;\n    for (int i = 0; i < s.length\
    \ - 2; i++)\n    {\n        if (s[i] == s[i+1] || s[i] == s[i+2] || s[i+1] ==\
    \ s[i+2]) return false;\n    }\n    return true;\n}", "{\n    int len = s.length;\n\
    \    if (len < 3)\n        return false;\n    for (int i = 0; i < len - 2; i++)\n\
    \    {\n        if (s[i] == s[i + 1] || s[i] == s[i + 2] || s[i + 1] == s[i +\
    \ 2])\n            return false;\n    }\n    return true;\n}", "{\n    if (s.length\
    \ < 3)\n        return false;\n    else\n    {\n        for (int i = 0; i < s.length\
    \ - 2; i++)\n        {\n            if (s[i] == s[i + 1] || s[i] == s[i + 2] ||\
    \ s[i + 1] == s[i + 2])\n                return false;\n        }\n        return\
    \ true;\n    }\n}", "{\n    if (s.length < 3)\n        return false;\n    for\
    \ (int i = 0; i < s.length - 2; i++)\n    {\n        if (s[i] == s[i + 1] || s[i]\
    \ == s[i + 2] || s[i + 1] == s[i + 2])\n            return false;\n    }\n   \
    \ return true;\n}", "{\n    if (s.length < 3)\n        return false;\n    for\
    \ (int i = 0; i < s.length - 2; i++)\n    {\n        if (s[i] == s[i + 1] || s[i]\
    \ == s[i + 2] || s[i + 1] == s[i + 2])\n            return false;\n    }\n   \
    \ return true;\n}", "{\n    if (s.length < 3) return false;\n    for (int i =\
    \ 0; i < s.length - 2; i++)\n    {\n        if (s[i] == s[i+1] || s[i] == s[i+2]\
    \ || s[i+1] == s[i+2]) return false;\n    }\n    return true;\n}", "{\n    if\
    \ (s.length < 3)\n        return false;\n    for (int i = 0; i < s.length - 2;\
    \ i++)\n    {\n        if (s[i] == s[i + 1] || s[i] == s[i + 2] || s[i + 1] ==\
    \ s[i + 2])\n            return false;\n    }\n    return true;\n}", "{\n    if\
    \ (s.length < 3)\n        return false;\n    for (int i = 0; i < s.length - 2;\
    \ i++)\n    {\n        if (s[i] == s[i + 1] || s[i] == s[i + 2] || s[i + 1] ==\
    \ s[i + 2])\n            return false;\n    }\n    return true;\n}", "{\n    if\
    \ (s.length < 3) return false;\n    for (int i = 0; i < s.length - 2; i++)\n \
    \   {\n        if (s[i] == s[i+1] || s[i] == s[i+2] || s[i+1] == s[i+2]) return\
    \ false;\n    }\n    return true;\n}", "{\n    if (s.length < 3)\n        return\
    \ false;\n    for (int i = 0; i < s.length - 2; i++)\n    {\n        if (s[i]\
    \ == s[i + 1] || s[i] == s[i + 2] || s[i + 1] == s[i + 2])\n            return\
    \ false;\n    }\n    return true;\n}", "{\n    if (s.length < 3)\n        return\
    \ false;\n    for (int i = 0; i < s.length - 2; i++)\n    {\n        if (s[i]\
    \ == s[i + 1] || s[i] == s[i + 2] || s[i + 1] == s[i + 2])\n            return\
    \ false;\n    }\n    return true;\n}", "{\n    if (s.length < 3) return false;\n\
    \    for (int i = 0; i < s.length - 2; i++)\n    {\n        if (s[i] == s[i+1]\
    \ || s[i] == s[i+2] || s[i+1] == s[i+2]) return false;\n    }\n    return true;\n\
    }", "{\n    if (s.length < 3)\n        return false;\n    for (int i = 0; i <\
    \ s.length - 2; i++)\n    {\n        if (s[i] == s[i + 1] || s[i] == s[i + 2]\
    \ || s[i + 1] == s[i + 2])\n            return false;\n    }\n    return true;\n\
    }", "{\n    if (s.length < 3) return false;\n    for (int i = 0; i < s.length\
    \ - 2; i++)\n    {\n        if (s[i] == s[i+1] || s[i] == s[i+2] || s[i+1] ==\
    \ s[i+2]) return false;\n    }\n    return true;\n}", "{\n    if (s.length < 3)\n\
    \        return false;\n    for (int i = 0; i < s.length - 2; i++)\n    {\n  \
    \      if (s[i] == s[i + 1] || s[i] == s[i + 2] || s[i + 1] == s[i + 2])\n   \
    \         return false;\n    }\n    return true;\n}", "{\n    if (s.length < 3)\
    \ return false;\n    for (int i = 0; i < s.length - 2; i++)\n    {\n        if\
    \ (s[i] == s[i+1] || s[i] == s[i+2] || s[i+1] == s[i+2]) return false;\n    }\n\
    \    return true;\n}", "{\n    if (s.length < 3) return false;\n    for (int i\
    \ = 0; i < s.length - 2; i++)\n    {\n        if (s[i] == s[i+1] || s[i] == s[i+2]\
    \ || s[i+1] == s[i+2])\n            return false;\n    }\n    return true;\n}",
  "{\n    if (s.length < 3) return false;\n    for (size_t i = 0; i < s.length - 2;\
    \ i++)\n    {\n        if (s[i] == s[i + 1] || s[i] == s[i + 2] || s[i + 1] ==\
    \ s[i + 2]) return false;\n    }\n    return true;\n}", "{\n    if (s.length <\
    \ 3) return false;\n    for (int i = 0; i < s.length - 2; i++)\n    {\n      \
    \  if (s[i] == s[i+1] || s[i] == s[i+2] || s[i+1] == s[i+2]) return false;\n \
    \   }\n    return true;\n}", "{\n    bool result = true;\n    if (s.length < 3)\n\
    \        return false;\n    for (int i = 0; i < s.length - 2; i++)\n    {\n  \
    \      if (s[i] == s[i + 1] || s[i] == s[i + 2] || s[i + 1] == s[i + 2])\n   \
    \         result = false;\n    }\n    return result;\n}"]
stop_tokens:
- "\n\n"
- "\nvoid"
- "\nbool"
- "\nint"

language: d
name: HumanEval_97_multiply
results:
- exit_code: 1
  program: "import std.typecons;\nimport std.math;\n/*\nComplete the function that\
    \ takes two integers and returns \n    the product of their unit digits.\n   \
    \ Assume the input is always valid.\n    Examples:\n    >>> multiply(148L, 412L)\n\
    \    16L\n    >>> multiply(19L, 28L)\n    72L\n    >>> multiply(2020L, 1851L)\n\
    \    0L\n    >>> multiply(14L, -15L)\n    20L\n    \n*/\nlong multiply(long a,\
    \ long b) \n{\n    return (a % 10) * (b % 10);\n}\nunittest\n{\n    alias candidate\
    \ = multiply;\n\n    assert(candidate(148L, 412L) == 16L);\n    assert(candidate(19L,\
    \ 28L) == 72L);\n    assert(candidate(2020L, 1851L) == 0L);\n    assert(candidate(14L,\
    \ -15L) == 20L);\n    assert(candidate(76L, 67L) == 42L);\n    assert(candidate(17L,\
    \ 27L) == 49L);\n    assert(candidate(0L, 1L) == 0L);\n    assert(candidate(0L,\
    \ 0L) == 0L);\n}\nvoid main(){}"
  status: Exception
  stderr: 'core.exception.AssertError@/tmp/tmp1saqvwe8.d(29): unittest failure

    ----------------

    ??:? _d_unittestp [0x427de5]

    ??:? void tmp1saqvwe8.__unittest_L22_C1() [0x427ac4]

    ??:? void tmp1saqvwe8.__modtest() [0x427b68]

    ??:? int core.runtime.runModuleUnitTests().__foreachbody2(object.ModuleInfo*)
    [0x42bb0b]

    ??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)).__lambda2(immutable(object.ModuleInfo*))
    [0x42a99e]

    ??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))).__foreachbody2(ref
    rt.sections_elf_shared.DSO) [0x42fb31]

    ??:? int rt.sections_elf_shared.DSO.opApply(scope int delegate(ref rt.sections_elf_shared.DSO))
    [0x42ffe0]

    ??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*)))
    [0x42fabd]

    ??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)) [0x42a975]

    ??:? runModuleUnitTests [0x42b8e1]

    ??:? void rt.dmain2._d_run_main(int, char**, extern (C) int function(char[][])*).runAll()
    [0x428234]

    ??:? void rt.dmain2._d_r'
  stdout: ''
  timestamp: 1660164228
- exit_code: 1
  program: "import std.typecons;\nimport std.math;\n/*\nComplete the function that\
    \ takes two integers and returns \n    the product of their unit digits.\n   \
    \ Assume the input is always valid.\n    Examples:\n    >>> multiply(148L, 412L)\n\
    \    16L\n    >>> multiply(19L, 28L)\n    72L\n    >>> multiply(2020L, 1851L)\n\
    \    0L\n    >>> multiply(14L, -15L)\n    20L\n    \n*/\nlong multiply(long a,\
    \ long b) \n{\n    return (a % 10) * (b % 10);\n}\nunittest\n{\n    alias candidate\
    \ = multiply;\n\n    assert(candidate(148L, 412L) == 16L);\n    assert(candidate(19L,\
    \ 28L) == 72L);\n    assert(candidate(2020L, 1851L) == 0L);\n    assert(candidate(14L,\
    \ -15L) == 20L);\n    assert(candidate(76L, 67L) == 42L);\n    assert(candidate(17L,\
    \ 27L) == 49L);\n    assert(candidate(0L, 1L) == 0L);\n    assert(candidate(0L,\
    \ 0L) == 0L);\n}\nvoid main(){}"
  status: Exception
  stderr: 'core.exception.AssertError@/tmp/tmp1saqvwe8.d(29): unittest failure

    ----------------

    ??:? _d_unittestp [0x427de5]

    ??:? void tmp1saqvwe8.__unittest_L22_C1() [0x427ac4]

    ??:? void tmp1saqvwe8.__modtest() [0x427b68]

    ??:? int core.runtime.runModuleUnitTests().__foreachbody2(object.ModuleInfo*)
    [0x42bb0b]

    ??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)).__lambda2(immutable(object.ModuleInfo*))
    [0x42a99e]

    ??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))).__foreachbody2(ref
    rt.sections_elf_shared.DSO) [0x42fb31]

    ??:? int rt.sections_elf_shared.DSO.opApply(scope int delegate(ref rt.sections_elf_shared.DSO))
    [0x42ffe0]

    ??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*)))
    [0x42fabd]

    ??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)) [0x42a975]

    ??:? runModuleUnitTests [0x42b8e1]

    ??:? void rt.dmain2._d_run_main(int, char**, extern (C) int function(char[][])*).runAll()
    [0x428234]

    ??:? void rt.dmain2._d_r'
  stdout: ''
  timestamp: 1660164228
- exit_code: 1
  program: "import std.typecons;\nimport std.math;\n/*\nComplete the function that\
    \ takes two integers and returns \n    the product of their unit digits.\n   \
    \ Assume the input is always valid.\n    Examples:\n    >>> multiply(148L, 412L)\n\
    \    16L\n    >>> multiply(19L, 28L)\n    72L\n    >>> multiply(2020L, 1851L)\n\
    \    0L\n    >>> multiply(14L, -15L)\n    20L\n    \n*/\nlong multiply(long a,\
    \ long b) \n{\n    return (a % 10) * (b % 10);\n}\nunittest\n{\n    alias candidate\
    \ = multiply;\n\n    assert(candidate(148L, 412L) == 16L);\n    assert(candidate(19L,\
    \ 28L) == 72L);\n    assert(candidate(2020L, 1851L) == 0L);\n    assert(candidate(14L,\
    \ -15L) == 20L);\n    assert(candidate(76L, 67L) == 42L);\n    assert(candidate(17L,\
    \ 27L) == 49L);\n    assert(candidate(0L, 1L) == 0L);\n    assert(candidate(0L,\
    \ 0L) == 0L);\n}\nvoid main(){}"
  status: Exception
  stderr: 'core.exception.AssertError@/tmp/tmp1saqvwe8.d(29): unittest failure

    ----------------

    ??:? _d_unittestp [0x427de5]

    ??:? void tmp1saqvwe8.__unittest_L22_C1() [0x427ac4]

    ??:? void tmp1saqvwe8.__modtest() [0x427b68]

    ??:? int core.runtime.runModuleUnitTests().__foreachbody2(object.ModuleInfo*)
    [0x42bb0b]

    ??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)).__lambda2(immutable(object.ModuleInfo*))
    [0x42a99e]

    ??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))).__foreachbody2(ref
    rt.sections_elf_shared.DSO) [0x42fb31]

    ??:? int rt.sections_elf_shared.DSO.opApply(scope int delegate(ref rt.sections_elf_shared.DSO))
    [0x42ffe0]

    ??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*)))
    [0x42fabd]

    ??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)) [0x42a975]

    ??:? runModuleUnitTests [0x42b8e1]

    ??:? void rt.dmain2._d_run_main(int, char**, extern (C) int function(char[][])*).runAll()
    [0x428234]

    ??:? void rt.dmain2._d_r'
  stdout: ''
  timestamp: 1660164228
- exit_code: 1
  program: "import std.typecons;\nimport std.math;\n/*\nComplete the function that\
    \ takes two integers and returns \n    the product of their unit digits.\n   \
    \ Assume the input is always valid.\n    Examples:\n    >>> multiply(148L, 412L)\n\
    \    16L\n    >>> multiply(19L, 28L)\n    72L\n    >>> multiply(2020L, 1851L)\n\
    \    0L\n    >>> multiply(14L, -15L)\n    20L\n    \n*/\nlong multiply(long a,\
    \ long b) \n{\n    return (a % 10) * (b % 10);\n}\nunittest\n{\n    alias candidate\
    \ = multiply;\n\n    assert(candidate(148L, 412L) == 16L);\n    assert(candidate(19L,\
    \ 28L) == 72L);\n    assert(candidate(2020L, 1851L) == 0L);\n    assert(candidate(14L,\
    \ -15L) == 20L);\n    assert(candidate(76L, 67L) == 42L);\n    assert(candidate(17L,\
    \ 27L) == 49L);\n    assert(candidate(0L, 1L) == 0L);\n    assert(candidate(0L,\
    \ 0L) == 0L);\n}\nvoid main(){}"
  status: Exception
  stderr: 'core.exception.AssertError@/tmp/tmp1saqvwe8.d(29): unittest failure

    ----------------

    ??:? _d_unittestp [0x427de5]

    ??:? void tmp1saqvwe8.__unittest_L22_C1() [0x427ac4]

    ??:? void tmp1saqvwe8.__modtest() [0x427b68]

    ??:? int core.runtime.runModuleUnitTests().__foreachbody2(object.ModuleInfo*)
    [0x42bb0b]

    ??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)).__lambda2(immutable(object.ModuleInfo*))
    [0x42a99e]

    ??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))).__foreachbody2(ref
    rt.sections_elf_shared.DSO) [0x42fb31]

    ??:? int rt.sections_elf_shared.DSO.opApply(scope int delegate(ref rt.sections_elf_shared.DSO))
    [0x42ffe0]

    ??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*)))
    [0x42fabd]

    ??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)) [0x42a975]

    ??:? runModuleUnitTests [0x42b8e1]

    ??:? void rt.dmain2._d_run_main(int, char**, extern (C) int function(char[][])*).runAll()
    [0x428234]

    ??:? void rt.dmain2._d_r'
  stdout: ''
  timestamp: 1660164228
- exit_code: 1
  program: "import std.typecons;\nimport std.math;\n/*\nComplete the function that\
    \ takes two integers and returns \n    the product of their unit digits.\n   \
    \ Assume the input is always valid.\n    Examples:\n    >>> multiply(148L, 412L)\n\
    \    16L\n    >>> multiply(19L, 28L)\n    72L\n    >>> multiply(2020L, 1851L)\n\
    \    0L\n    >>> multiply(14L, -15L)\n    20L\n    \n*/\nlong multiply(long a,\
    \ long b) \n{\n    return (a%10)*(b%10);\n}\nunittest\n{\n    alias candidate\
    \ = multiply;\n\n    assert(candidate(148L, 412L) == 16L);\n    assert(candidate(19L,\
    \ 28L) == 72L);\n    assert(candidate(2020L, 1851L) == 0L);\n    assert(candidate(14L,\
    \ -15L) == 20L);\n    assert(candidate(76L, 67L) == 42L);\n    assert(candidate(17L,\
    \ 27L) == 49L);\n    assert(candidate(0L, 1L) == 0L);\n    assert(candidate(0L,\
    \ 0L) == 0L);\n}\nvoid main(){}"
  status: Exception
  stderr: 'core.exception.AssertError@/tmp/tmpx0vyfebi.d(29): unittest failure

    ----------------

    ??:? _d_unittestp [0x427de5]

    ??:? void tmpx0vyfebi.__unittest_L22_C1() [0x427ac4]

    ??:? void tmpx0vyfebi.__modtest() [0x427b68]

    ??:? int core.runtime.runModuleUnitTests().__foreachbody2(object.ModuleInfo*)
    [0x42bb0b]

    ??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)).__lambda2(immutable(object.ModuleInfo*))
    [0x42a99e]

    ??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))).__foreachbody2(ref
    rt.sections_elf_shared.DSO) [0x42fb31]

    ??:? int rt.sections_elf_shared.DSO.opApply(scope int delegate(ref rt.sections_elf_shared.DSO))
    [0x42ffe0]

    ??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*)))
    [0x42fabd]

    ??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)) [0x42a975]

    ??:? runModuleUnitTests [0x42b8e1]

    ??:? void rt.dmain2._d_run_main(int, char**, extern (C) int function(char[][])*).runAll()
    [0x428234]

    ??:? void rt.dmain2._d_r'
  stdout: ''
  timestamp: 1660164228
- exit_code: 1
  program: "import std.typecons;\nimport std.math;\n/*\nComplete the function that\
    \ takes two integers and returns \n    the product of their unit digits.\n   \
    \ Assume the input is always valid.\n    Examples:\n    >>> multiply(148L, 412L)\n\
    \    16L\n    >>> multiply(19L, 28L)\n    72L\n    >>> multiply(2020L, 1851L)\n\
    \    0L\n    >>> multiply(14L, -15L)\n    20L\n    \n*/\nlong multiply(long a,\
    \ long b) \n{\n    return (a % 10) * (b % 10);\n}\nunittest\n{\n    alias candidate\
    \ = multiply;\n\n    assert(candidate(148L, 412L) == 16L);\n    assert(candidate(19L,\
    \ 28L) == 72L);\n    assert(candidate(2020L, 1851L) == 0L);\n    assert(candidate(14L,\
    \ -15L) == 20L);\n    assert(candidate(76L, 67L) == 42L);\n    assert(candidate(17L,\
    \ 27L) == 49L);\n    assert(candidate(0L, 1L) == 0L);\n    assert(candidate(0L,\
    \ 0L) == 0L);\n}\nvoid main(){}"
  status: Exception
  stderr: 'core.exception.AssertError@/tmp/tmp1saqvwe8.d(29): unittest failure

    ----------------

    ??:? _d_unittestp [0x427de5]

    ??:? void tmp1saqvwe8.__unittest_L22_C1() [0x427ac4]

    ??:? void tmp1saqvwe8.__modtest() [0x427b68]

    ??:? int core.runtime.runModuleUnitTests().__foreachbody2(object.ModuleInfo*)
    [0x42bb0b]

    ??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)).__lambda2(immutable(object.ModuleInfo*))
    [0x42a99e]

    ??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))).__foreachbody2(ref
    rt.sections_elf_shared.DSO) [0x42fb31]

    ??:? int rt.sections_elf_shared.DSO.opApply(scope int delegate(ref rt.sections_elf_shared.DSO))
    [0x42ffe0]

    ??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*)))
    [0x42fabd]

    ??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)) [0x42a975]

    ??:? runModuleUnitTests [0x42b8e1]

    ??:? void rt.dmain2._d_run_main(int, char**, extern (C) int function(char[][])*).runAll()
    [0x428234]

    ??:? void rt.dmain2._d_r'
  stdout: ''
  timestamp: 1660164228
- exit_code: 1
  program: "import std.typecons;\nimport std.math;\n/*\nComplete the function that\
    \ takes two integers and returns \n    the product of their unit digits.\n   \
    \ Assume the input is always valid.\n    Examples:\n    >>> multiply(148L, 412L)\n\
    \    16L\n    >>> multiply(19L, 28L)\n    72L\n    >>> multiply(2020L, 1851L)\n\
    \    0L\n    >>> multiply(14L, -15L)\n    20L\n    \n*/\nlong multiply(long a,\
    \ long b) \n{\n    return (a % 10) * (b % 10);\n}\nunittest\n{\n    alias candidate\
    \ = multiply;\n\n    assert(candidate(148L, 412L) == 16L);\n    assert(candidate(19L,\
    \ 28L) == 72L);\n    assert(candidate(2020L, 1851L) == 0L);\n    assert(candidate(14L,\
    \ -15L) == 20L);\n    assert(candidate(76L, 67L) == 42L);\n    assert(candidate(17L,\
    \ 27L) == 49L);\n    assert(candidate(0L, 1L) == 0L);\n    assert(candidate(0L,\
    \ 0L) == 0L);\n}\nvoid main(){}"
  status: Exception
  stderr: 'core.exception.AssertError@/tmp/tmp1saqvwe8.d(29): unittest failure

    ----------------

    ??:? _d_unittestp [0x427de5]

    ??:? void tmp1saqvwe8.__unittest_L22_C1() [0x427ac4]

    ??:? void tmp1saqvwe8.__modtest() [0x427b68]

    ??:? int core.runtime.runModuleUnitTests().__foreachbody2(object.ModuleInfo*)
    [0x42bb0b]

    ??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)).__lambda2(immutable(object.ModuleInfo*))
    [0x42a99e]

    ??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))).__foreachbody2(ref
    rt.sections_elf_shared.DSO) [0x42fb31]

    ??:? int rt.sections_elf_shared.DSO.opApply(scope int delegate(ref rt.sections_elf_shared.DSO))
    [0x42ffe0]

    ??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*)))
    [0x42fabd]

    ??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)) [0x42a975]

    ??:? runModuleUnitTests [0x42b8e1]

    ??:? void rt.dmain2._d_run_main(int, char**, extern (C) int function(char[][])*).runAll()
    [0x428234]

    ??:? void rt.dmain2._d_r'
  stdout: ''
  timestamp: 1660164228
- exit_code: 1
  program: "import std.typecons;\nimport std.math;\n/*\nComplete the function that\
    \ takes two integers and returns \n    the product of their unit digits.\n   \
    \ Assume the input is always valid.\n    Examples:\n    >>> multiply(148L, 412L)\n\
    \    16L\n    >>> multiply(19L, 28L)\n    72L\n    >>> multiply(2020L, 1851L)\n\
    \    0L\n    >>> multiply(14L, -15L)\n    20L\n    \n*/\nlong multiply(long a,\
    \ long b) \n{\n    return (a % 10) * (b % 10);\n}\nunittest\n{\n    alias candidate\
    \ = multiply;\n\n    assert(candidate(148L, 412L) == 16L);\n    assert(candidate(19L,\
    \ 28L) == 72L);\n    assert(candidate(2020L, 1851L) == 0L);\n    assert(candidate(14L,\
    \ -15L) == 20L);\n    assert(candidate(76L, 67L) == 42L);\n    assert(candidate(17L,\
    \ 27L) == 49L);\n    assert(candidate(0L, 1L) == 0L);\n    assert(candidate(0L,\
    \ 0L) == 0L);\n}\nvoid main(){}"
  status: Exception
  stderr: 'core.exception.AssertError@/tmp/tmp1saqvwe8.d(29): unittest failure

    ----------------

    ??:? _d_unittestp [0x427de5]

    ??:? void tmp1saqvwe8.__unittest_L22_C1() [0x427ac4]

    ??:? void tmp1saqvwe8.__modtest() [0x427b68]

    ??:? int core.runtime.runModuleUnitTests().__foreachbody2(object.ModuleInfo*)
    [0x42bb0b]

    ??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)).__lambda2(immutable(object.ModuleInfo*))
    [0x42a99e]

    ??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))).__foreachbody2(ref
    rt.sections_elf_shared.DSO) [0x42fb31]

    ??:? int rt.sections_elf_shared.DSO.opApply(scope int delegate(ref rt.sections_elf_shared.DSO))
    [0x42ffe0]

    ??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*)))
    [0x42fabd]

    ??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)) [0x42a975]

    ??:? runModuleUnitTests [0x42b8e1]

    ??:? void rt.dmain2._d_run_main(int, char**, extern (C) int function(char[][])*).runAll()
    [0x428234]

    ??:? void rt.dmain2._d_r'
  stdout: ''
  timestamp: 1660164228
- exit_code: 1
  program: "import std.typecons;\nimport std.math;\n/*\nComplete the function that\
    \ takes two integers and returns \n    the product of their unit digits.\n   \
    \ Assume the input is always valid.\n    Examples:\n    >>> multiply(148L, 412L)\n\
    \    16L\n    >>> multiply(19L, 28L)\n    72L\n    >>> multiply(2020L, 1851L)\n\
    \    0L\n    >>> multiply(14L, -15L)\n    20L\n    \n*/\nlong multiply(long a,\
    \ long b) \n{\n    return (a%10)*(b%10);\n}\nunittest\n{\n    alias candidate\
    \ = multiply;\n\n    assert(candidate(148L, 412L) == 16L);\n    assert(candidate(19L,\
    \ 28L) == 72L);\n    assert(candidate(2020L, 1851L) == 0L);\n    assert(candidate(14L,\
    \ -15L) == 20L);\n    assert(candidate(76L, 67L) == 42L);\n    assert(candidate(17L,\
    \ 27L) == 49L);\n    assert(candidate(0L, 1L) == 0L);\n    assert(candidate(0L,\
    \ 0L) == 0L);\n}\nvoid main(){}"
  status: Exception
  stderr: 'core.exception.AssertError@/tmp/tmpx0vyfebi.d(29): unittest failure

    ----------------

    ??:? _d_unittestp [0x427de5]

    ??:? void tmpx0vyfebi.__unittest_L22_C1() [0x427ac4]

    ??:? void tmpx0vyfebi.__modtest() [0x427b68]

    ??:? int core.runtime.runModuleUnitTests().__foreachbody2(object.ModuleInfo*)
    [0x42bb0b]

    ??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)).__lambda2(immutable(object.ModuleInfo*))
    [0x42a99e]

    ??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))).__foreachbody2(ref
    rt.sections_elf_shared.DSO) [0x42fb31]

    ??:? int rt.sections_elf_shared.DSO.opApply(scope int delegate(ref rt.sections_elf_shared.DSO))
    [0x42ffe0]

    ??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*)))
    [0x42fabd]

    ??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)) [0x42a975]

    ??:? runModuleUnitTests [0x42b8e1]

    ??:? void rt.dmain2._d_run_main(int, char**, extern (C) int function(char[][])*).runAll()
    [0x428234]

    ??:? void rt.dmain2._d_r'
  stdout: ''
  timestamp: 1660164228
- exit_code: 1
  program: "import std.typecons;\nimport std.math;\n/*\nComplete the function that\
    \ takes two integers and returns \n    the product of their unit digits.\n   \
    \ Assume the input is always valid.\n    Examples:\n    >>> multiply(148L, 412L)\n\
    \    16L\n    >>> multiply(19L, 28L)\n    72L\n    >>> multiply(2020L, 1851L)\n\
    \    0L\n    >>> multiply(14L, -15L)\n    20L\n    \n*/\nlong multiply(long a,\
    \ long b) \n{\n    return (a % 10) * (b % 10);\n}\nunittest\n{\n    alias candidate\
    \ = multiply;\n\n    assert(candidate(148L, 412L) == 16L);\n    assert(candidate(19L,\
    \ 28L) == 72L);\n    assert(candidate(2020L, 1851L) == 0L);\n    assert(candidate(14L,\
    \ -15L) == 20L);\n    assert(candidate(76L, 67L) == 42L);\n    assert(candidate(17L,\
    \ 27L) == 49L);\n    assert(candidate(0L, 1L) == 0L);\n    assert(candidate(0L,\
    \ 0L) == 0L);\n}\nvoid main(){}"
  status: Exception
  stderr: 'core.exception.AssertError@/tmp/tmp1saqvwe8.d(29): unittest failure

    ----------------

    ??:? _d_unittestp [0x427de5]

    ??:? void tmp1saqvwe8.__unittest_L22_C1() [0x427ac4]

    ??:? void tmp1saqvwe8.__modtest() [0x427b68]

    ??:? int core.runtime.runModuleUnitTests().__foreachbody2(object.ModuleInfo*)
    [0x42bb0b]

    ??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)).__lambda2(immutable(object.ModuleInfo*))
    [0x42a99e]

    ??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))).__foreachbody2(ref
    rt.sections_elf_shared.DSO) [0x42fb31]

    ??:? int rt.sections_elf_shared.DSO.opApply(scope int delegate(ref rt.sections_elf_shared.DSO))
    [0x42ffe0]

    ??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*)))
    [0x42fabd]

    ??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)) [0x42a975]

    ??:? runModuleUnitTests [0x42b8e1]

    ??:? void rt.dmain2._d_run_main(int, char**, extern (C) int function(char[][])*).runAll()
    [0x428234]

    ??:? void rt.dmain2._d_r'
  stdout: ''
  timestamp: 1660164228
- exit_code: 1
  program: "import std.typecons;\nimport std.math;\n/*\nComplete the function that\
    \ takes two integers and returns \n    the product of their unit digits.\n   \
    \ Assume the input is always valid.\n    Examples:\n    >>> multiply(148L, 412L)\n\
    \    16L\n    >>> multiply(19L, 28L)\n    72L\n    >>> multiply(2020L, 1851L)\n\
    \    0L\n    >>> multiply(14L, -15L)\n    20L\n    \n*/\nlong multiply(long a,\
    \ long b) \n{\n    return (a % 10) * (b % 10);\n}\nunittest\n{\n    alias candidate\
    \ = multiply;\n\n    assert(candidate(148L, 412L) == 16L);\n    assert(candidate(19L,\
    \ 28L) == 72L);\n    assert(candidate(2020L, 1851L) == 0L);\n    assert(candidate(14L,\
    \ -15L) == 20L);\n    assert(candidate(76L, 67L) == 42L);\n    assert(candidate(17L,\
    \ 27L) == 49L);\n    assert(candidate(0L, 1L) == 0L);\n    assert(candidate(0L,\
    \ 0L) == 0L);\n}\nvoid main(){}"
  status: Exception
  stderr: 'core.exception.AssertError@/tmp/tmp1saqvwe8.d(29): unittest failure

    ----------------

    ??:? _d_unittestp [0x427de5]

    ??:? void tmp1saqvwe8.__unittest_L22_C1() [0x427ac4]

    ??:? void tmp1saqvwe8.__modtest() [0x427b68]

    ??:? int core.runtime.runModuleUnitTests().__foreachbody2(object.ModuleInfo*)
    [0x42bb0b]

    ??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)).__lambda2(immutable(object.ModuleInfo*))
    [0x42a99e]

    ??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))).__foreachbody2(ref
    rt.sections_elf_shared.DSO) [0x42fb31]

    ??:? int rt.sections_elf_shared.DSO.opApply(scope int delegate(ref rt.sections_elf_shared.DSO))
    [0x42ffe0]

    ??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*)))
    [0x42fabd]

    ??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)) [0x42a975]

    ??:? runModuleUnitTests [0x42b8e1]

    ??:? void rt.dmain2._d_run_main(int, char**, extern (C) int function(char[][])*).runAll()
    [0x428234]

    ??:? void rt.dmain2._d_r'
  stdout: ''
  timestamp: 1660164228
- exit_code: 1
  program: "import std.typecons;\nimport std.math;\n/*\nComplete the function that\
    \ takes two integers and returns \n    the product of their unit digits.\n   \
    \ Assume the input is always valid.\n    Examples:\n    >>> multiply(148L, 412L)\n\
    \    16L\n    >>> multiply(19L, 28L)\n    72L\n    >>> multiply(2020L, 1851L)\n\
    \    0L\n    >>> multiply(14L, -15L)\n    20L\n    \n*/\nlong multiply(long a,\
    \ long b) \n{\n    return (a % 10) * (b % 10);\n}\nunittest\n{\n    alias candidate\
    \ = multiply;\n\n    assert(candidate(148L, 412L) == 16L);\n    assert(candidate(19L,\
    \ 28L) == 72L);\n    assert(candidate(2020L, 1851L) == 0L);\n    assert(candidate(14L,\
    \ -15L) == 20L);\n    assert(candidate(76L, 67L) == 42L);\n    assert(candidate(17L,\
    \ 27L) == 49L);\n    assert(candidate(0L, 1L) == 0L);\n    assert(candidate(0L,\
    \ 0L) == 0L);\n}\nvoid main(){}"
  status: Exception
  stderr: 'core.exception.AssertError@/tmp/tmp1saqvwe8.d(29): unittest failure

    ----------------

    ??:? _d_unittestp [0x427de5]

    ??:? void tmp1saqvwe8.__unittest_L22_C1() [0x427ac4]

    ??:? void tmp1saqvwe8.__modtest() [0x427b68]

    ??:? int core.runtime.runModuleUnitTests().__foreachbody2(object.ModuleInfo*)
    [0x42bb0b]

    ??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)).__lambda2(immutable(object.ModuleInfo*))
    [0x42a99e]

    ??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))).__foreachbody2(ref
    rt.sections_elf_shared.DSO) [0x42fb31]

    ??:? int rt.sections_elf_shared.DSO.opApply(scope int delegate(ref rt.sections_elf_shared.DSO))
    [0x42ffe0]

    ??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*)))
    [0x42fabd]

    ??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)) [0x42a975]

    ??:? runModuleUnitTests [0x42b8e1]

    ??:? void rt.dmain2._d_run_main(int, char**, extern (C) int function(char[][])*).runAll()
    [0x428234]

    ??:? void rt.dmain2._d_r'
  stdout: ''
  timestamp: 1660164228
- exit_code: 1
  program: "import std.typecons;\nimport std.math;\n/*\nComplete the function that\
    \ takes two integers and returns \n    the product of their unit digits.\n   \
    \ Assume the input is always valid.\n    Examples:\n    >>> multiply(148L, 412L)\n\
    \    16L\n    >>> multiply(19L, 28L)\n    72L\n    >>> multiply(2020L, 1851L)\n\
    \    0L\n    >>> multiply(14L, -15L)\n    20L\n    \n*/\nlong multiply(long a,\
    \ long b) \n{\n    return (a % 10) * (b % 10);\n}\nunittest\n{\n    alias candidate\
    \ = multiply;\n\n    assert(candidate(148L, 412L) == 16L);\n    assert(candidate(19L,\
    \ 28L) == 72L);\n    assert(candidate(2020L, 1851L) == 0L);\n    assert(candidate(14L,\
    \ -15L) == 20L);\n    assert(candidate(76L, 67L) == 42L);\n    assert(candidate(17L,\
    \ 27L) == 49L);\n    assert(candidate(0L, 1L) == 0L);\n    assert(candidate(0L,\
    \ 0L) == 0L);\n}\nvoid main(){}"
  status: Exception
  stderr: 'core.exception.AssertError@/tmp/tmp1saqvwe8.d(29): unittest failure

    ----------------

    ??:? _d_unittestp [0x427de5]

    ??:? void tmp1saqvwe8.__unittest_L22_C1() [0x427ac4]

    ??:? void tmp1saqvwe8.__modtest() [0x427b68]

    ??:? int core.runtime.runModuleUnitTests().__foreachbody2(object.ModuleInfo*)
    [0x42bb0b]

    ??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)).__lambda2(immutable(object.ModuleInfo*))
    [0x42a99e]

    ??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))).__foreachbody2(ref
    rt.sections_elf_shared.DSO) [0x42fb31]

    ??:? int rt.sections_elf_shared.DSO.opApply(scope int delegate(ref rt.sections_elf_shared.DSO))
    [0x42ffe0]

    ??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*)))
    [0x42fabd]

    ??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)) [0x42a975]

    ??:? runModuleUnitTests [0x42b8e1]

    ??:? void rt.dmain2._d_run_main(int, char**, extern (C) int function(char[][])*).runAll()
    [0x428234]

    ??:? void rt.dmain2._d_r'
  stdout: ''
  timestamp: 1660164228
- exit_code: 1
  program: "import std.typecons;\nimport std.math;\n/*\nComplete the function that\
    \ takes two integers and returns \n    the product of their unit digits.\n   \
    \ Assume the input is always valid.\n    Examples:\n    >>> multiply(148L, 412L)\n\
    \    16L\n    >>> multiply(19L, 28L)\n    72L\n    >>> multiply(2020L, 1851L)\n\
    \    0L\n    >>> multiply(14L, -15L)\n    20L\n    \n*/\nlong multiply(long a,\
    \ long b) \n{\n    return (a % 10) * (b % 10);\n}\nunittest\n{\n    alias candidate\
    \ = multiply;\n\n    assert(candidate(148L, 412L) == 16L);\n    assert(candidate(19L,\
    \ 28L) == 72L);\n    assert(candidate(2020L, 1851L) == 0L);\n    assert(candidate(14L,\
    \ -15L) == 20L);\n    assert(candidate(76L, 67L) == 42L);\n    assert(candidate(17L,\
    \ 27L) == 49L);\n    assert(candidate(0L, 1L) == 0L);\n    assert(candidate(0L,\
    \ 0L) == 0L);\n}\nvoid main(){}"
  status: Exception
  stderr: 'core.exception.AssertError@/tmp/tmp1saqvwe8.d(29): unittest failure

    ----------------

    ??:? _d_unittestp [0x427de5]

    ??:? void tmp1saqvwe8.__unittest_L22_C1() [0x427ac4]

    ??:? void tmp1saqvwe8.__modtest() [0x427b68]

    ??:? int core.runtime.runModuleUnitTests().__foreachbody2(object.ModuleInfo*)
    [0x42bb0b]

    ??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)).__lambda2(immutable(object.ModuleInfo*))
    [0x42a99e]

    ??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))).__foreachbody2(ref
    rt.sections_elf_shared.DSO) [0x42fb31]

    ??:? int rt.sections_elf_shared.DSO.opApply(scope int delegate(ref rt.sections_elf_shared.DSO))
    [0x42ffe0]

    ??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*)))
    [0x42fabd]

    ??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)) [0x42a975]

    ??:? runModuleUnitTests [0x42b8e1]

    ??:? void rt.dmain2._d_run_main(int, char**, extern (C) int function(char[][])*).runAll()
    [0x428234]

    ??:? void rt.dmain2._d_r'
  stdout: ''
  timestamp: 1660164228
- exit_code: 1
  program: "import std.typecons;\nimport std.math;\n/*\nComplete the function that\
    \ takes two integers and returns \n    the product of their unit digits.\n   \
    \ Assume the input is always valid.\n    Examples:\n    >>> multiply(148L, 412L)\n\
    \    16L\n    >>> multiply(19L, 28L)\n    72L\n    >>> multiply(2020L, 1851L)\n\
    \    0L\n    >>> multiply(14L, -15L)\n    20L\n    \n*/\nlong multiply(long a,\
    \ long b) \n{\n    return (a % 10) * (b % 10);\n}\nunittest\n{\n    alias candidate\
    \ = multiply;\n\n    assert(candidate(148L, 412L) == 16L);\n    assert(candidate(19L,\
    \ 28L) == 72L);\n    assert(candidate(2020L, 1851L) == 0L);\n    assert(candidate(14L,\
    \ -15L) == 20L);\n    assert(candidate(76L, 67L) == 42L);\n    assert(candidate(17L,\
    \ 27L) == 49L);\n    assert(candidate(0L, 1L) == 0L);\n    assert(candidate(0L,\
    \ 0L) == 0L);\n}\nvoid main(){}"
  status: Exception
  stderr: 'core.exception.AssertError@/tmp/tmp1saqvwe8.d(29): unittest failure

    ----------------

    ??:? _d_unittestp [0x427de5]

    ??:? void tmp1saqvwe8.__unittest_L22_C1() [0x427ac4]

    ??:? void tmp1saqvwe8.__modtest() [0x427b68]

    ??:? int core.runtime.runModuleUnitTests().__foreachbody2(object.ModuleInfo*)
    [0x42bb0b]

    ??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)).__lambda2(immutable(object.ModuleInfo*))
    [0x42a99e]

    ??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))).__foreachbody2(ref
    rt.sections_elf_shared.DSO) [0x42fb31]

    ??:? int rt.sections_elf_shared.DSO.opApply(scope int delegate(ref rt.sections_elf_shared.DSO))
    [0x42ffe0]

    ??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*)))
    [0x42fabd]

    ??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)) [0x42a975]

    ??:? runModuleUnitTests [0x42b8e1]

    ??:? void rt.dmain2._d_run_main(int, char**, extern (C) int function(char[][])*).runAll()
    [0x428234]

    ??:? void rt.dmain2._d_r'
  stdout: ''
  timestamp: 1660164228
- exit_code: 1
  program: "import std.typecons;\nimport std.math;\n/*\nComplete the function that\
    \ takes two integers and returns \n    the product of their unit digits.\n   \
    \ Assume the input is always valid.\n    Examples:\n    >>> multiply(148L, 412L)\n\
    \    16L\n    >>> multiply(19L, 28L)\n    72L\n    >>> multiply(2020L, 1851L)\n\
    \    0L\n    >>> multiply(14L, -15L)\n    20L\n    \n*/\nlong multiply(long a,\
    \ long b) \n{\n    return (a % 10) * (b % 10);\n}\nunittest\n{\n    alias candidate\
    \ = multiply;\n\n    assert(candidate(148L, 412L) == 16L);\n    assert(candidate(19L,\
    \ 28L) == 72L);\n    assert(candidate(2020L, 1851L) == 0L);\n    assert(candidate(14L,\
    \ -15L) == 20L);\n    assert(candidate(76L, 67L) == 42L);\n    assert(candidate(17L,\
    \ 27L) == 49L);\n    assert(candidate(0L, 1L) == 0L);\n    assert(candidate(0L,\
    \ 0L) == 0L);\n}\nvoid main(){}"
  status: Exception
  stderr: 'core.exception.AssertError@/tmp/tmp1saqvwe8.d(29): unittest failure

    ----------------

    ??:? _d_unittestp [0x427de5]

    ??:? void tmp1saqvwe8.__unittest_L22_C1() [0x427ac4]

    ??:? void tmp1saqvwe8.__modtest() [0x427b68]

    ??:? int core.runtime.runModuleUnitTests().__foreachbody2(object.ModuleInfo*)
    [0x42bb0b]

    ??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)).__lambda2(immutable(object.ModuleInfo*))
    [0x42a99e]

    ??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))).__foreachbody2(ref
    rt.sections_elf_shared.DSO) [0x42fb31]

    ??:? int rt.sections_elf_shared.DSO.opApply(scope int delegate(ref rt.sections_elf_shared.DSO))
    [0x42ffe0]

    ??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*)))
    [0x42fabd]

    ??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)) [0x42a975]

    ??:? runModuleUnitTests [0x42b8e1]

    ??:? void rt.dmain2._d_run_main(int, char**, extern (C) int function(char[][])*).runAll()
    [0x428234]

    ??:? void rt.dmain2._d_r'
  stdout: ''
  timestamp: 1660164228
- exit_code: 1
  program: "import std.typecons;\nimport std.math;\n/*\nComplete the function that\
    \ takes two integers and returns \n    the product of their unit digits.\n   \
    \ Assume the input is always valid.\n    Examples:\n    >>> multiply(148L, 412L)\n\
    \    16L\n    >>> multiply(19L, 28L)\n    72L\n    >>> multiply(2020L, 1851L)\n\
    \    0L\n    >>> multiply(14L, -15L)\n    20L\n    \n*/\nlong multiply(long a,\
    \ long b) \n{\n    return (a % 10) * (b % 10);\n}\nunittest\n{\n    alias candidate\
    \ = multiply;\n\n    assert(candidate(148L, 412L) == 16L);\n    assert(candidate(19L,\
    \ 28L) == 72L);\n    assert(candidate(2020L, 1851L) == 0L);\n    assert(candidate(14L,\
    \ -15L) == 20L);\n    assert(candidate(76L, 67L) == 42L);\n    assert(candidate(17L,\
    \ 27L) == 49L);\n    assert(candidate(0L, 1L) == 0L);\n    assert(candidate(0L,\
    \ 0L) == 0L);\n}\nvoid main(){}"
  status: Exception
  stderr: 'core.exception.AssertError@/tmp/tmp1saqvwe8.d(29): unittest failure

    ----------------

    ??:? _d_unittestp [0x427de5]

    ??:? void tmp1saqvwe8.__unittest_L22_C1() [0x427ac4]

    ??:? void tmp1saqvwe8.__modtest() [0x427b68]

    ??:? int core.runtime.runModuleUnitTests().__foreachbody2(object.ModuleInfo*)
    [0x42bb0b]

    ??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)).__lambda2(immutable(object.ModuleInfo*))
    [0x42a99e]

    ??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))).__foreachbody2(ref
    rt.sections_elf_shared.DSO) [0x42fb31]

    ??:? int rt.sections_elf_shared.DSO.opApply(scope int delegate(ref rt.sections_elf_shared.DSO))
    [0x42ffe0]

    ??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*)))
    [0x42fabd]

    ??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)) [0x42a975]

    ??:? runModuleUnitTests [0x42b8e1]

    ??:? void rt.dmain2._d_run_main(int, char**, extern (C) int function(char[][])*).runAll()
    [0x428234]

    ??:? void rt.dmain2._d_r'
  stdout: ''
  timestamp: 1660164228
- exit_code: 1
  program: "import std.typecons;\nimport std.math;\n/*\nComplete the function that\
    \ takes two integers and returns \n    the product of their unit digits.\n   \
    \ Assume the input is always valid.\n    Examples:\n    >>> multiply(148L, 412L)\n\
    \    16L\n    >>> multiply(19L, 28L)\n    72L\n    >>> multiply(2020L, 1851L)\n\
    \    0L\n    >>> multiply(14L, -15L)\n    20L\n    \n*/\nlong multiply(long a,\
    \ long b) \n{\n    return (a%10)*(b%10);\n}\nunittest\n{\n    alias candidate\
    \ = multiply;\n\n    assert(candidate(148L, 412L) == 16L);\n    assert(candidate(19L,\
    \ 28L) == 72L);\n    assert(candidate(2020L, 1851L) == 0L);\n    assert(candidate(14L,\
    \ -15L) == 20L);\n    assert(candidate(76L, 67L) == 42L);\n    assert(candidate(17L,\
    \ 27L) == 49L);\n    assert(candidate(0L, 1L) == 0L);\n    assert(candidate(0L,\
    \ 0L) == 0L);\n}\nvoid main(){}"
  status: Exception
  stderr: 'core.exception.AssertError@/tmp/tmpx0vyfebi.d(29): unittest failure

    ----------------

    ??:? _d_unittestp [0x427de5]

    ??:? void tmpx0vyfebi.__unittest_L22_C1() [0x427ac4]

    ??:? void tmpx0vyfebi.__modtest() [0x427b68]

    ??:? int core.runtime.runModuleUnitTests().__foreachbody2(object.ModuleInfo*)
    [0x42bb0b]

    ??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)).__lambda2(immutable(object.ModuleInfo*))
    [0x42a99e]

    ??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))).__foreachbody2(ref
    rt.sections_elf_shared.DSO) [0x42fb31]

    ??:? int rt.sections_elf_shared.DSO.opApply(scope int delegate(ref rt.sections_elf_shared.DSO))
    [0x42ffe0]

    ??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*)))
    [0x42fabd]

    ??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)) [0x42a975]

    ??:? runModuleUnitTests [0x42b8e1]

    ??:? void rt.dmain2._d_run_main(int, char**, extern (C) int function(char[][])*).runAll()
    [0x428234]

    ??:? void rt.dmain2._d_r'
  stdout: ''
  timestamp: 1660164228
- exit_code: 1
  program: "import std.typecons;\nimport std.math;\n/*\nComplete the function that\
    \ takes two integers and returns \n    the product of their unit digits.\n   \
    \ Assume the input is always valid.\n    Examples:\n    >>> multiply(148L, 412L)\n\
    \    16L\n    >>> multiply(19L, 28L)\n    72L\n    >>> multiply(2020L, 1851L)\n\
    \    0L\n    >>> multiply(14L, -15L)\n    20L\n    \n*/\nlong multiply(long a,\
    \ long b) \n{\n    return (a % 10) * (b % 10);\n}\nunittest\n{\n    alias candidate\
    \ = multiply;\n\n    assert(candidate(148L, 412L) == 16L);\n    assert(candidate(19L,\
    \ 28L) == 72L);\n    assert(candidate(2020L, 1851L) == 0L);\n    assert(candidate(14L,\
    \ -15L) == 20L);\n    assert(candidate(76L, 67L) == 42L);\n    assert(candidate(17L,\
    \ 27L) == 49L);\n    assert(candidate(0L, 1L) == 0L);\n    assert(candidate(0L,\
    \ 0L) == 0L);\n}\nvoid main(){}"
  status: Exception
  stderr: 'core.exception.AssertError@/tmp/tmp1saqvwe8.d(29): unittest failure

    ----------------

    ??:? _d_unittestp [0x427de5]

    ??:? void tmp1saqvwe8.__unittest_L22_C1() [0x427ac4]

    ??:? void tmp1saqvwe8.__modtest() [0x427b68]

    ??:? int core.runtime.runModuleUnitTests().__foreachbody2(object.ModuleInfo*)
    [0x42bb0b]

    ??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)).__lambda2(immutable(object.ModuleInfo*))
    [0x42a99e]

    ??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))).__foreachbody2(ref
    rt.sections_elf_shared.DSO) [0x42fb31]

    ??:? int rt.sections_elf_shared.DSO.opApply(scope int delegate(ref rt.sections_elf_shared.DSO))
    [0x42ffe0]

    ??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*)))
    [0x42fabd]

    ??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)) [0x42a975]

    ??:? runModuleUnitTests [0x42b8e1]

    ??:? void rt.dmain2._d_run_main(int, char**, extern (C) int function(char[][])*).runAll()
    [0x428234]

    ??:? void rt.dmain2._d_r'
  stdout: ''
  timestamp: 1660164228
- exit_code: 1
  program: "import std.typecons;\nimport std.math;\n/*\nComplete the function that\
    \ takes two integers and returns \n    the product of their unit digits.\n   \
    \ Assume the input is always valid.\n    Examples:\n    >>> multiply(148L, 412L)\n\
    \    16L\n    >>> multiply(19L, 28L)\n    72L\n    >>> multiply(2020L, 1851L)\n\
    \    0L\n    >>> multiply(14L, -15L)\n    20L\n    \n*/\nlong multiply(long a,\
    \ long b) \n{\n    return (a % 10) * (b % 10);\n}\nunittest\n{\n    alias candidate\
    \ = multiply;\n\n    assert(candidate(148L, 412L) == 16L);\n    assert(candidate(19L,\
    \ 28L) == 72L);\n    assert(candidate(2020L, 1851L) == 0L);\n    assert(candidate(14L,\
    \ -15L) == 20L);\n    assert(candidate(76L, 67L) == 42L);\n    assert(candidate(17L,\
    \ 27L) == 49L);\n    assert(candidate(0L, 1L) == 0L);\n    assert(candidate(0L,\
    \ 0L) == 0L);\n}\nvoid main(){}"
  status: Exception
  stderr: 'core.exception.AssertError@/tmp/tmp1saqvwe8.d(29): unittest failure

    ----------------

    ??:? _d_unittestp [0x427de5]

    ??:? void tmp1saqvwe8.__unittest_L22_C1() [0x427ac4]

    ??:? void tmp1saqvwe8.__modtest() [0x427b68]

    ??:? int core.runtime.runModuleUnitTests().__foreachbody2(object.ModuleInfo*)
    [0x42bb0b]

    ??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)).__lambda2(immutable(object.ModuleInfo*))
    [0x42a99e]

    ??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))).__foreachbody2(ref
    rt.sections_elf_shared.DSO) [0x42fb31]

    ??:? int rt.sections_elf_shared.DSO.opApply(scope int delegate(ref rt.sections_elf_shared.DSO))
    [0x42ffe0]

    ??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*)))
    [0x42fabd]

    ??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)) [0x42a975]

    ??:? runModuleUnitTests [0x42b8e1]

    ??:? void rt.dmain2._d_run_main(int, char**, extern (C) int function(char[][])*).runAll()
    [0x428234]

    ??:? void rt.dmain2._d_r'
  stdout: ''
  timestamp: 1660164228
- exit_code: 1
  program: "import std.typecons;\nimport std.math;\n/*\nComplete the function that\
    \ takes two integers and returns \n    the product of their unit digits.\n   \
    \ Assume the input is always valid.\n    Examples:\n    >>> multiply(148L, 412L)\n\
    \    16L\n    >>> multiply(19L, 28L)\n    72L\n    >>> multiply(2020L, 1851L)\n\
    \    0L\n    >>> multiply(14L, -15L)\n    20L\n    \n*/\nlong multiply(long a,\
    \ long b) \n{\n    return (a % 10) * (b % 10);\n}\nunittest\n{\n    alias candidate\
    \ = multiply;\n\n    assert(candidate(148L, 412L) == 16L);\n    assert(candidate(19L,\
    \ 28L) == 72L);\n    assert(candidate(2020L, 1851L) == 0L);\n    assert(candidate(14L,\
    \ -15L) == 20L);\n    assert(candidate(76L, 67L) == 42L);\n    assert(candidate(17L,\
    \ 27L) == 49L);\n    assert(candidate(0L, 1L) == 0L);\n    assert(candidate(0L,\
    \ 0L) == 0L);\n}\nvoid main(){}"
  status: Exception
  stderr: 'core.exception.AssertError@/tmp/tmp1saqvwe8.d(29): unittest failure

    ----------------

    ??:? _d_unittestp [0x427de5]

    ??:? void tmp1saqvwe8.__unittest_L22_C1() [0x427ac4]

    ??:? void tmp1saqvwe8.__modtest() [0x427b68]

    ??:? int core.runtime.runModuleUnitTests().__foreachbody2(object.ModuleInfo*)
    [0x42bb0b]

    ??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)).__lambda2(immutable(object.ModuleInfo*))
    [0x42a99e]

    ??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))).__foreachbody2(ref
    rt.sections_elf_shared.DSO) [0x42fb31]

    ??:? int rt.sections_elf_shared.DSO.opApply(scope int delegate(ref rt.sections_elf_shared.DSO))
    [0x42ffe0]

    ??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*)))
    [0x42fabd]

    ??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)) [0x42a975]

    ??:? runModuleUnitTests [0x42b8e1]

    ??:? void rt.dmain2._d_run_main(int, char**, extern (C) int function(char[][])*).runAll()
    [0x428234]

    ??:? void rt.dmain2._d_r'
  stdout: ''
  timestamp: 1660164228
- exit_code: 1
  program: "import std.typecons;\nimport std.math;\n/*\nComplete the function that\
    \ takes two integers and returns \n    the product of their unit digits.\n   \
    \ Assume the input is always valid.\n    Examples:\n    >>> multiply(148L, 412L)\n\
    \    16L\n    >>> multiply(19L, 28L)\n    72L\n    >>> multiply(2020L, 1851L)\n\
    \    0L\n    >>> multiply(14L, -15L)\n    20L\n    \n*/\nlong multiply(long a,\
    \ long b) \n{\n    return (a % 10) * (b % 10);\n}\nunittest\n{\n    alias candidate\
    \ = multiply;\n\n    assert(candidate(148L, 412L) == 16L);\n    assert(candidate(19L,\
    \ 28L) == 72L);\n    assert(candidate(2020L, 1851L) == 0L);\n    assert(candidate(14L,\
    \ -15L) == 20L);\n    assert(candidate(76L, 67L) == 42L);\n    assert(candidate(17L,\
    \ 27L) == 49L);\n    assert(candidate(0L, 1L) == 0L);\n    assert(candidate(0L,\
    \ 0L) == 0L);\n}\nvoid main(){}"
  status: Exception
  stderr: 'core.exception.AssertError@/tmp/tmp1saqvwe8.d(29): unittest failure

    ----------------

    ??:? _d_unittestp [0x427de5]

    ??:? void tmp1saqvwe8.__unittest_L22_C1() [0x427ac4]

    ??:? void tmp1saqvwe8.__modtest() [0x427b68]

    ??:? int core.runtime.runModuleUnitTests().__foreachbody2(object.ModuleInfo*)
    [0x42bb0b]

    ??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)).__lambda2(immutable(object.ModuleInfo*))
    [0x42a99e]

    ??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))).__foreachbody2(ref
    rt.sections_elf_shared.DSO) [0x42fb31]

    ??:? int rt.sections_elf_shared.DSO.opApply(scope int delegate(ref rt.sections_elf_shared.DSO))
    [0x42ffe0]

    ??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*)))
    [0x42fabd]

    ??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)) [0x42a975]

    ??:? runModuleUnitTests [0x42b8e1]

    ??:? void rt.dmain2._d_run_main(int, char**, extern (C) int function(char[][])*).runAll()
    [0x428234]

    ??:? void rt.dmain2._d_r'
  stdout: ''
  timestamp: 1660164228
- exit_code: 0
  program: "import std.typecons;\nimport std.math;\n/*\nComplete the function that\
    \ takes two integers and returns \n    the product of their unit digits.\n   \
    \ Assume the input is always valid.\n    Examples:\n    >>> multiply(148L, 412L)\n\
    \    16L\n    >>> multiply(19L, 28L)\n    72L\n    >>> multiply(2020L, 1851L)\n\
    \    0L\n    >>> multiply(14L, -15L)\n    20L\n    \n*/\nlong multiply(long a,\
    \ long b) \n{\n    return abs(a % 10) * abs(b % 10);\n}\nunittest\n{\n    alias\
    \ candidate = multiply;\n\n    assert(candidate(148L, 412L) == 16L);\n    assert(candidate(19L,\
    \ 28L) == 72L);\n    assert(candidate(2020L, 1851L) == 0L);\n    assert(candidate(14L,\
    \ -15L) == 20L);\n    assert(candidate(76L, 67L) == 42L);\n    assert(candidate(17L,\
    \ 27L) == 49L);\n    assert(candidate(0L, 1L) == 0L);\n    assert(candidate(0L,\
    \ 0L) == 0L);\n}\nvoid main(){}"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660164228
- exit_code: 1
  program: "import std.typecons;\nimport std.math;\n/*\nComplete the function that\
    \ takes two integers and returns \n    the product of their unit digits.\n   \
    \ Assume the input is always valid.\n    Examples:\n    >>> multiply(148L, 412L)\n\
    \    16L\n    >>> multiply(19L, 28L)\n    72L\n    >>> multiply(2020L, 1851L)\n\
    \    0L\n    >>> multiply(14L, -15L)\n    20L\n    \n*/\nlong multiply(long a,\
    \ long b) \n{\n    return (a % 10) * (b % 10);\n}\nunittest\n{\n    alias candidate\
    \ = multiply;\n\n    assert(candidate(148L, 412L) == 16L);\n    assert(candidate(19L,\
    \ 28L) == 72L);\n    assert(candidate(2020L, 1851L) == 0L);\n    assert(candidate(14L,\
    \ -15L) == 20L);\n    assert(candidate(76L, 67L) == 42L);\n    assert(candidate(17L,\
    \ 27L) == 49L);\n    assert(candidate(0L, 1L) == 0L);\n    assert(candidate(0L,\
    \ 0L) == 0L);\n}\nvoid main(){}"
  status: Exception
  stderr: 'core.exception.AssertError@/tmp/tmp1saqvwe8.d(29): unittest failure

    ----------------

    ??:? _d_unittestp [0x427de5]

    ??:? void tmp1saqvwe8.__unittest_L22_C1() [0x427ac4]

    ??:? void tmp1saqvwe8.__modtest() [0x427b68]

    ??:? int core.runtime.runModuleUnitTests().__foreachbody2(object.ModuleInfo*)
    [0x42bb0b]

    ??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)).__lambda2(immutable(object.ModuleInfo*))
    [0x42a99e]

    ??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))).__foreachbody2(ref
    rt.sections_elf_shared.DSO) [0x42fb31]

    ??:? int rt.sections_elf_shared.DSO.opApply(scope int delegate(ref rt.sections_elf_shared.DSO))
    [0x42ffe0]

    ??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*)))
    [0x42fabd]

    ??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)) [0x42a975]

    ??:? runModuleUnitTests [0x42b8e1]

    ??:? void rt.dmain2._d_run_main(int, char**, extern (C) int function(char[][])*).runAll()
    [0x428234]

    ??:? void rt.dmain2._d_r'
  stdout: ''
  timestamp: 1660164228
- exit_code: 1
  program: "import std.typecons;\nimport std.math;\n/*\nComplete the function that\
    \ takes two integers and returns \n    the product of their unit digits.\n   \
    \ Assume the input is always valid.\n    Examples:\n    >>> multiply(148L, 412L)\n\
    \    16L\n    >>> multiply(19L, 28L)\n    72L\n    >>> multiply(2020L, 1851L)\n\
    \    0L\n    >>> multiply(14L, -15L)\n    20L\n    \n*/\nlong multiply(long a,\
    \ long b) \n{\n    return (a % 10) * (b % 10);\n}\nunittest\n{\n    alias candidate\
    \ = multiply;\n\n    assert(candidate(148L, 412L) == 16L);\n    assert(candidate(19L,\
    \ 28L) == 72L);\n    assert(candidate(2020L, 1851L) == 0L);\n    assert(candidate(14L,\
    \ -15L) == 20L);\n    assert(candidate(76L, 67L) == 42L);\n    assert(candidate(17L,\
    \ 27L) == 49L);\n    assert(candidate(0L, 1L) == 0L);\n    assert(candidate(0L,\
    \ 0L) == 0L);\n}\nvoid main(){}"
  status: Exception
  stderr: 'core.exception.AssertError@/tmp/tmp1saqvwe8.d(29): unittest failure

    ----------------

    ??:? _d_unittestp [0x427de5]

    ??:? void tmp1saqvwe8.__unittest_L22_C1() [0x427ac4]

    ??:? void tmp1saqvwe8.__modtest() [0x427b68]

    ??:? int core.runtime.runModuleUnitTests().__foreachbody2(object.ModuleInfo*)
    [0x42bb0b]

    ??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)).__lambda2(immutable(object.ModuleInfo*))
    [0x42a99e]

    ??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))).__foreachbody2(ref
    rt.sections_elf_shared.DSO) [0x42fb31]

    ??:? int rt.sections_elf_shared.DSO.opApply(scope int delegate(ref rt.sections_elf_shared.DSO))
    [0x42ffe0]

    ??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*)))
    [0x42fabd]

    ??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)) [0x42a975]

    ??:? runModuleUnitTests [0x42b8e1]

    ??:? void rt.dmain2._d_run_main(int, char**, extern (C) int function(char[][])*).runAll()
    [0x428234]

    ??:? void rt.dmain2._d_r'
  stdout: ''
  timestamp: 1660164228
- exit_code: 1
  program: "import std.typecons;\nimport std.math;\n/*\nComplete the function that\
    \ takes two integers and returns \n    the product of their unit digits.\n   \
    \ Assume the input is always valid.\n    Examples:\n    >>> multiply(148L, 412L)\n\
    \    16L\n    >>> multiply(19L, 28L)\n    72L\n    >>> multiply(2020L, 1851L)\n\
    \    0L\n    >>> multiply(14L, -15L)\n    20L\n    \n*/\nlong multiply(long a,\
    \ long b) \n{\n    return (a % 10) * (b % 10);\n}\nunittest\n{\n    alias candidate\
    \ = multiply;\n\n    assert(candidate(148L, 412L) == 16L);\n    assert(candidate(19L,\
    \ 28L) == 72L);\n    assert(candidate(2020L, 1851L) == 0L);\n    assert(candidate(14L,\
    \ -15L) == 20L);\n    assert(candidate(76L, 67L) == 42L);\n    assert(candidate(17L,\
    \ 27L) == 49L);\n    assert(candidate(0L, 1L) == 0L);\n    assert(candidate(0L,\
    \ 0L) == 0L);\n}\nvoid main(){}"
  status: Exception
  stderr: 'core.exception.AssertError@/tmp/tmp1saqvwe8.d(29): unittest failure

    ----------------

    ??:? _d_unittestp [0x427de5]

    ??:? void tmp1saqvwe8.__unittest_L22_C1() [0x427ac4]

    ??:? void tmp1saqvwe8.__modtest() [0x427b68]

    ??:? int core.runtime.runModuleUnitTests().__foreachbody2(object.ModuleInfo*)
    [0x42bb0b]

    ??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)).__lambda2(immutable(object.ModuleInfo*))
    [0x42a99e]

    ??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))).__foreachbody2(ref
    rt.sections_elf_shared.DSO) [0x42fb31]

    ??:? int rt.sections_elf_shared.DSO.opApply(scope int delegate(ref rt.sections_elf_shared.DSO))
    [0x42ffe0]

    ??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*)))
    [0x42fabd]

    ??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)) [0x42a975]

    ??:? runModuleUnitTests [0x42b8e1]

    ??:? void rt.dmain2._d_run_main(int, char**, extern (C) int function(char[][])*).runAll()
    [0x428234]

    ??:? void rt.dmain2._d_r'
  stdout: ''
  timestamp: 1660164228
- exit_code: 1
  program: "import std.typecons;\nimport std.math;\n/*\nComplete the function that\
    \ takes two integers and returns \n    the product of their unit digits.\n   \
    \ Assume the input is always valid.\n    Examples:\n    >>> multiply(148L, 412L)\n\
    \    16L\n    >>> multiply(19L, 28L)\n    72L\n    >>> multiply(2020L, 1851L)\n\
    \    0L\n    >>> multiply(14L, -15L)\n    20L\n    \n*/\nlong multiply(long a,\
    \ long b) \n{\n    return (a % 10) * (b % 10);\n}\nunittest\n{\n    alias candidate\
    \ = multiply;\n\n    assert(candidate(148L, 412L) == 16L);\n    assert(candidate(19L,\
    \ 28L) == 72L);\n    assert(candidate(2020L, 1851L) == 0L);\n    assert(candidate(14L,\
    \ -15L) == 20L);\n    assert(candidate(76L, 67L) == 42L);\n    assert(candidate(17L,\
    \ 27L) == 49L);\n    assert(candidate(0L, 1L) == 0L);\n    assert(candidate(0L,\
    \ 0L) == 0L);\n}\nvoid main(){}"
  status: Exception
  stderr: 'core.exception.AssertError@/tmp/tmp1saqvwe8.d(29): unittest failure

    ----------------

    ??:? _d_unittestp [0x427de5]

    ??:? void tmp1saqvwe8.__unittest_L22_C1() [0x427ac4]

    ??:? void tmp1saqvwe8.__modtest() [0x427b68]

    ??:? int core.runtime.runModuleUnitTests().__foreachbody2(object.ModuleInfo*)
    [0x42bb0b]

    ??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)).__lambda2(immutable(object.ModuleInfo*))
    [0x42a99e]

    ??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))).__foreachbody2(ref
    rt.sections_elf_shared.DSO) [0x42fb31]

    ??:? int rt.sections_elf_shared.DSO.opApply(scope int delegate(ref rt.sections_elf_shared.DSO))
    [0x42ffe0]

    ??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*)))
    [0x42fabd]

    ??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)) [0x42a975]

    ??:? runModuleUnitTests [0x42b8e1]

    ??:? void rt.dmain2._d_run_main(int, char**, extern (C) int function(char[][])*).runAll()
    [0x428234]

    ??:? void rt.dmain2._d_r'
  stdout: ''
  timestamp: 1660164228
- exit_code: 1
  program: "import std.typecons;\nimport std.math;\n/*\nComplete the function that\
    \ takes two integers and returns \n    the product of their unit digits.\n   \
    \ Assume the input is always valid.\n    Examples:\n    >>> multiply(148L, 412L)\n\
    \    16L\n    >>> multiply(19L, 28L)\n    72L\n    >>> multiply(2020L, 1851L)\n\
    \    0L\n    >>> multiply(14L, -15L)\n    20L\n    \n*/\nlong multiply(long a,\
    \ long b) \n{\n    return (a % 10) * (b % 10);\n}\nunittest\n{\n    alias candidate\
    \ = multiply;\n\n    assert(candidate(148L, 412L) == 16L);\n    assert(candidate(19L,\
    \ 28L) == 72L);\n    assert(candidate(2020L, 1851L) == 0L);\n    assert(candidate(14L,\
    \ -15L) == 20L);\n    assert(candidate(76L, 67L) == 42L);\n    assert(candidate(17L,\
    \ 27L) == 49L);\n    assert(candidate(0L, 1L) == 0L);\n    assert(candidate(0L,\
    \ 0L) == 0L);\n}\nvoid main(){}"
  status: Exception
  stderr: 'core.exception.AssertError@/tmp/tmp1saqvwe8.d(29): unittest failure

    ----------------

    ??:? _d_unittestp [0x427de5]

    ??:? void tmp1saqvwe8.__unittest_L22_C1() [0x427ac4]

    ??:? void tmp1saqvwe8.__modtest() [0x427b68]

    ??:? int core.runtime.runModuleUnitTests().__foreachbody2(object.ModuleInfo*)
    [0x42bb0b]

    ??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)).__lambda2(immutable(object.ModuleInfo*))
    [0x42a99e]

    ??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))).__foreachbody2(ref
    rt.sections_elf_shared.DSO) [0x42fb31]

    ??:? int rt.sections_elf_shared.DSO.opApply(scope int delegate(ref rt.sections_elf_shared.DSO))
    [0x42ffe0]

    ??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*)))
    [0x42fabd]

    ??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)) [0x42a975]

    ??:? runModuleUnitTests [0x42b8e1]

    ??:? void rt.dmain2._d_run_main(int, char**, extern (C) int function(char[][])*).runAll()
    [0x428234]

    ??:? void rt.dmain2._d_r'
  stdout: ''
  timestamp: 1660164228
- exit_code: 1
  program: "import std.typecons;\nimport std.math;\n/*\nComplete the function that\
    \ takes two integers and returns \n    the product of their unit digits.\n   \
    \ Assume the input is always valid.\n    Examples:\n    >>> multiply(148L, 412L)\n\
    \    16L\n    >>> multiply(19L, 28L)\n    72L\n    >>> multiply(2020L, 1851L)\n\
    \    0L\n    >>> multiply(14L, -15L)\n    20L\n    \n*/\nlong multiply(long a,\
    \ long b) \n{\n    return (a % 10) * (b % 10);\n}\nunittest\n{\n    alias candidate\
    \ = multiply;\n\n    assert(candidate(148L, 412L) == 16L);\n    assert(candidate(19L,\
    \ 28L) == 72L);\n    assert(candidate(2020L, 1851L) == 0L);\n    assert(candidate(14L,\
    \ -15L) == 20L);\n    assert(candidate(76L, 67L) == 42L);\n    assert(candidate(17L,\
    \ 27L) == 49L);\n    assert(candidate(0L, 1L) == 0L);\n    assert(candidate(0L,\
    \ 0L) == 0L);\n}\nvoid main(){}"
  status: Exception
  stderr: 'core.exception.AssertError@/tmp/tmp1saqvwe8.d(29): unittest failure

    ----------------

    ??:? _d_unittestp [0x427de5]

    ??:? void tmp1saqvwe8.__unittest_L22_C1() [0x427ac4]

    ??:? void tmp1saqvwe8.__modtest() [0x427b68]

    ??:? int core.runtime.runModuleUnitTests().__foreachbody2(object.ModuleInfo*)
    [0x42bb0b]

    ??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)).__lambda2(immutable(object.ModuleInfo*))
    [0x42a99e]

    ??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))).__foreachbody2(ref
    rt.sections_elf_shared.DSO) [0x42fb31]

    ??:? int rt.sections_elf_shared.DSO.opApply(scope int delegate(ref rt.sections_elf_shared.DSO))
    [0x42ffe0]

    ??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*)))
    [0x42fabd]

    ??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)) [0x42a975]

    ??:? runModuleUnitTests [0x42b8e1]

    ??:? void rt.dmain2._d_run_main(int, char**, extern (C) int function(char[][])*).runAll()
    [0x428234]

    ??:? void rt.dmain2._d_r'
  stdout: ''
  timestamp: 1660164228
- exit_code: 0
  program: "import std.typecons;\nimport std.math;\n/*\nComplete the function that\
    \ takes two integers and returns \n    the product of their unit digits.\n   \
    \ Assume the input is always valid.\n    Examples:\n    >>> multiply(148L, 412L)\n\
    \    16L\n    >>> multiply(19L, 28L)\n    72L\n    >>> multiply(2020L, 1851L)\n\
    \    0L\n    >>> multiply(14L, -15L)\n    20L\n    \n*/\nlong multiply(long a,\
    \ long b) \n{\n    long result = 0;\n    long a_abs = abs(a);\n    long b_abs\
    \ = abs(b);\n    if (a_abs < 10 && b_abs < 10)\n    {\n        result = a_abs\
    \ * b_abs;\n    }\n    else\n    {\n        result = (a_abs % 10) * (b_abs % 10);\n\
    \    }\n    return result;\n}\nunittest\n{\n    alias candidate = multiply;\n\n\
    \    assert(candidate(148L, 412L) == 16L);\n    assert(candidate(19L, 28L) ==\
    \ 72L);\n    assert(candidate(2020L, 1851L) == 0L);\n    assert(candidate(14L,\
    \ -15L) == 20L);\n    assert(candidate(76L, 67L) == 42L);\n    assert(candidate(17L,\
    \ 27L) == 49L);\n    assert(candidate(0L, 1L) == 0L);\n    assert(candidate(0L,\
    \ 0L) == 0L);\n}\nvoid main(){}"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660164228
- exit_code: 1
  program: "import std.typecons;\nimport std.math;\n/*\nComplete the function that\
    \ takes two integers and returns \n    the product of their unit digits.\n   \
    \ Assume the input is always valid.\n    Examples:\n    >>> multiply(148L, 412L)\n\
    \    16L\n    >>> multiply(19L, 28L)\n    72L\n    >>> multiply(2020L, 1851L)\n\
    \    0L\n    >>> multiply(14L, -15L)\n    20L\n    \n*/\nlong multiply(long a,\
    \ long b) \n{\n    return (a % 10) * (b % 10);\n}\nunittest\n{\n    alias candidate\
    \ = multiply;\n\n    assert(candidate(148L, 412L) == 16L);\n    assert(candidate(19L,\
    \ 28L) == 72L);\n    assert(candidate(2020L, 1851L) == 0L);\n    assert(candidate(14L,\
    \ -15L) == 20L);\n    assert(candidate(76L, 67L) == 42L);\n    assert(candidate(17L,\
    \ 27L) == 49L);\n    assert(candidate(0L, 1L) == 0L);\n    assert(candidate(0L,\
    \ 0L) == 0L);\n}\nvoid main(){}"
  status: Exception
  stderr: 'core.exception.AssertError@/tmp/tmp1saqvwe8.d(29): unittest failure

    ----------------

    ??:? _d_unittestp [0x427de5]

    ??:? void tmp1saqvwe8.__unittest_L22_C1() [0x427ac4]

    ??:? void tmp1saqvwe8.__modtest() [0x427b68]

    ??:? int core.runtime.runModuleUnitTests().__foreachbody2(object.ModuleInfo*)
    [0x42bb0b]

    ??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)).__lambda2(immutable(object.ModuleInfo*))
    [0x42a99e]

    ??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))).__foreachbody2(ref
    rt.sections_elf_shared.DSO) [0x42fb31]

    ??:? int rt.sections_elf_shared.DSO.opApply(scope int delegate(ref rt.sections_elf_shared.DSO))
    [0x42ffe0]

    ??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*)))
    [0x42fabd]

    ??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)) [0x42a975]

    ??:? runModuleUnitTests [0x42b8e1]

    ??:? void rt.dmain2._d_run_main(int, char**, extern (C) int function(char[][])*).runAll()
    [0x428234]

    ??:? void rt.dmain2._d_r'
  stdout: ''
  timestamp: 1660164228
- exit_code: 1
  program: "import std.typecons;\nimport std.math;\n/*\nComplete the function that\
    \ takes two integers and returns \n    the product of their unit digits.\n   \
    \ Assume the input is always valid.\n    Examples:\n    >>> multiply(148L, 412L)\n\
    \    16L\n    >>> multiply(19L, 28L)\n    72L\n    >>> multiply(2020L, 1851L)\n\
    \    0L\n    >>> multiply(14L, -15L)\n    20L\n    \n*/\nlong multiply(long a,\
    \ long b) \n{\n    long result = 0;\n    if(a < 0)\n        a = -a;\n    if(b\
    \ < 0)\n        b = -b;\n    result = a % 10 * b % 10;\n    return result;\n}\n\
    unittest\n{\n    alias candidate = multiply;\n\n    assert(candidate(148L, 412L)\
    \ == 16L);\n    assert(candidate(19L, 28L) == 72L);\n    assert(candidate(2020L,\
    \ 1851L) == 0L);\n    assert(candidate(14L, -15L) == 20L);\n    assert(candidate(76L,\
    \ 67L) == 42L);\n    assert(candidate(17L, 27L) == 49L);\n    assert(candidate(0L,\
    \ 1L) == 0L);\n    assert(candidate(0L, 0L) == 0L);\n}\nvoid main(){}"
  status: Exception
  stderr: 'core.exception.AssertError@/tmp/tmp9jqsq4np.d(32): unittest failure

    ----------------

    ??:? _d_unittestp [0x427dfd]

    ??:? void tmp9jqsq4np.__unittest_L28_C1() [0x427a65]

    ??:? void tmp9jqsq4np.__modtest() [0x427b7c]

    ??:? int core.runtime.runModuleUnitTests().__foreachbody2(object.ModuleInfo*)
    [0x42bb23]

    ??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)).__lambda2(immutable(object.ModuleInfo*))
    [0x42a9b6]

    ??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))).__foreachbody2(ref
    rt.sections_elf_shared.DSO) [0x42fb49]

    ??:? int rt.sections_elf_shared.DSO.opApply(scope int delegate(ref rt.sections_elf_shared.DSO))
    [0x42fff8]

    ??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*)))
    [0x42fad5]

    ??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)) [0x42a98d]

    ??:? runModuleUnitTests [0x42b8f9]

    ??:? void rt.dmain2._d_run_main(int, char**, extern (C) int function(char[][])*).runAll()
    [0x42824c]

    ??:? void rt.dmain2._d_r'
  stdout: ''
  timestamp: 1660164228
- exit_code: 1
  program: "import std.typecons;\nimport std.math;\n/*\nComplete the function that\
    \ takes two integers and returns \n    the product of their unit digits.\n   \
    \ Assume the input is always valid.\n    Examples:\n    >>> multiply(148L, 412L)\n\
    \    16L\n    >>> multiply(19L, 28L)\n    72L\n    >>> multiply(2020L, 1851L)\n\
    \    0L\n    >>> multiply(14L, -15L)\n    20L\n    \n*/\nlong multiply(long a,\
    \ long b) \n{\n    return (a % 10) * (b % 10);\n}\nunittest\n{\n    alias candidate\
    \ = multiply;\n\n    assert(candidate(148L, 412L) == 16L);\n    assert(candidate(19L,\
    \ 28L) == 72L);\n    assert(candidate(2020L, 1851L) == 0L);\n    assert(candidate(14L,\
    \ -15L) == 20L);\n    assert(candidate(76L, 67L) == 42L);\n    assert(candidate(17L,\
    \ 27L) == 49L);\n    assert(candidate(0L, 1L) == 0L);\n    assert(candidate(0L,\
    \ 0L) == 0L);\n}\nvoid main(){}"
  status: Exception
  stderr: 'core.exception.AssertError@/tmp/tmp1saqvwe8.d(29): unittest failure

    ----------------

    ??:? _d_unittestp [0x427de5]

    ??:? void tmp1saqvwe8.__unittest_L22_C1() [0x427ac4]

    ??:? void tmp1saqvwe8.__modtest() [0x427b68]

    ??:? int core.runtime.runModuleUnitTests().__foreachbody2(object.ModuleInfo*)
    [0x42bb0b]

    ??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)).__lambda2(immutable(object.ModuleInfo*))
    [0x42a99e]

    ??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))).__foreachbody2(ref
    rt.sections_elf_shared.DSO) [0x42fb31]

    ??:? int rt.sections_elf_shared.DSO.opApply(scope int delegate(ref rt.sections_elf_shared.DSO))
    [0x42ffe0]

    ??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*)))
    [0x42fabd]

    ??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)) [0x42a975]

    ??:? runModuleUnitTests [0x42b8e1]

    ??:? void rt.dmain2._d_run_main(int, char**, extern (C) int function(char[][])*).runAll()
    [0x428234]

    ??:? void rt.dmain2._d_r'
  stdout: ''
  timestamp: 1660164228
- exit_code: 1
  program: "import std.typecons;\nimport std.math;\n/*\nComplete the function that\
    \ takes two integers and returns \n    the product of their unit digits.\n   \
    \ Assume the input is always valid.\n    Examples:\n    >>> multiply(148L, 412L)\n\
    \    16L\n    >>> multiply(19L, 28L)\n    72L\n    >>> multiply(2020L, 1851L)\n\
    \    0L\n    >>> multiply(14L, -15L)\n    20L\n    \n*/\nlong multiply(long a,\
    \ long b) \n{\n    return (a % 10) * (b % 10);\n}\nunittest\n{\n    alias candidate\
    \ = multiply;\n\n    assert(candidate(148L, 412L) == 16L);\n    assert(candidate(19L,\
    \ 28L) == 72L);\n    assert(candidate(2020L, 1851L) == 0L);\n    assert(candidate(14L,\
    \ -15L) == 20L);\n    assert(candidate(76L, 67L) == 42L);\n    assert(candidate(17L,\
    \ 27L) == 49L);\n    assert(candidate(0L, 1L) == 0L);\n    assert(candidate(0L,\
    \ 0L) == 0L);\n}\nvoid main(){}"
  status: Exception
  stderr: 'core.exception.AssertError@/tmp/tmp1saqvwe8.d(29): unittest failure

    ----------------

    ??:? _d_unittestp [0x427de5]

    ??:? void tmp1saqvwe8.__unittest_L22_C1() [0x427ac4]

    ??:? void tmp1saqvwe8.__modtest() [0x427b68]

    ??:? int core.runtime.runModuleUnitTests().__foreachbody2(object.ModuleInfo*)
    [0x42bb0b]

    ??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)).__lambda2(immutable(object.ModuleInfo*))
    [0x42a99e]

    ??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))).__foreachbody2(ref
    rt.sections_elf_shared.DSO) [0x42fb31]

    ??:? int rt.sections_elf_shared.DSO.opApply(scope int delegate(ref rt.sections_elf_shared.DSO))
    [0x42ffe0]

    ??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*)))
    [0x42fabd]

    ??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)) [0x42a975]

    ??:? runModuleUnitTests [0x42b8e1]

    ??:? void rt.dmain2._d_run_main(int, char**, extern (C) int function(char[][])*).runAll()
    [0x428234]

    ??:? void rt.dmain2._d_r'
  stdout: ''
  timestamp: 1660164228
- exit_code: 1
  program: "import std.typecons;\nimport std.math;\n/*\nComplete the function that\
    \ takes two integers and returns \n    the product of their unit digits.\n   \
    \ Assume the input is always valid.\n    Examples:\n    >>> multiply(148L, 412L)\n\
    \    16L\n    >>> multiply(19L, 28L)\n    72L\n    >>> multiply(2020L, 1851L)\n\
    \    0L\n    >>> multiply(14L, -15L)\n    20L\n    \n*/\nlong multiply(long a,\
    \ long b) \n{\n    return (a % 10) * (b % 10);\n}\nunittest\n{\n    alias candidate\
    \ = multiply;\n\n    assert(candidate(148L, 412L) == 16L);\n    assert(candidate(19L,\
    \ 28L) == 72L);\n    assert(candidate(2020L, 1851L) == 0L);\n    assert(candidate(14L,\
    \ -15L) == 20L);\n    assert(candidate(76L, 67L) == 42L);\n    assert(candidate(17L,\
    \ 27L) == 49L);\n    assert(candidate(0L, 1L) == 0L);\n    assert(candidate(0L,\
    \ 0L) == 0L);\n}\nvoid main(){}"
  status: Exception
  stderr: 'core.exception.AssertError@/tmp/tmp1saqvwe8.d(29): unittest failure

    ----------------

    ??:? _d_unittestp [0x427de5]

    ??:? void tmp1saqvwe8.__unittest_L22_C1() [0x427ac4]

    ??:? void tmp1saqvwe8.__modtest() [0x427b68]

    ??:? int core.runtime.runModuleUnitTests().__foreachbody2(object.ModuleInfo*)
    [0x42bb0b]

    ??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)).__lambda2(immutable(object.ModuleInfo*))
    [0x42a99e]

    ??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))).__foreachbody2(ref
    rt.sections_elf_shared.DSO) [0x42fb31]

    ??:? int rt.sections_elf_shared.DSO.opApply(scope int delegate(ref rt.sections_elf_shared.DSO))
    [0x42ffe0]

    ??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*)))
    [0x42fabd]

    ??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)) [0x42a975]

    ??:? runModuleUnitTests [0x42b8e1]

    ??:? void rt.dmain2._d_run_main(int, char**, extern (C) int function(char[][])*).runAll()
    [0x428234]

    ??:? void rt.dmain2._d_r'
  stdout: ''
  timestamp: 1660164228
- exit_code: 1
  program: "import std.typecons;\nimport std.math;\n/*\nComplete the function that\
    \ takes two integers and returns \n    the product of their unit digits.\n   \
    \ Assume the input is always valid.\n    Examples:\n    >>> multiply(148L, 412L)\n\
    \    16L\n    >>> multiply(19L, 28L)\n    72L\n    >>> multiply(2020L, 1851L)\n\
    \    0L\n    >>> multiply(14L, -15L)\n    20L\n    \n*/\nlong multiply(long a,\
    \ long b) \n{\n    return (a % 10) * (b % 10);\n}\nunittest\n{\n    alias candidate\
    \ = multiply;\n\n    assert(candidate(148L, 412L) == 16L);\n    assert(candidate(19L,\
    \ 28L) == 72L);\n    assert(candidate(2020L, 1851L) == 0L);\n    assert(candidate(14L,\
    \ -15L) == 20L);\n    assert(candidate(76L, 67L) == 42L);\n    assert(candidate(17L,\
    \ 27L) == 49L);\n    assert(candidate(0L, 1L) == 0L);\n    assert(candidate(0L,\
    \ 0L) == 0L);\n}\nvoid main(){}"
  status: Exception
  stderr: 'core.exception.AssertError@/tmp/tmp1saqvwe8.d(29): unittest failure

    ----------------

    ??:? _d_unittestp [0x427de5]

    ??:? void tmp1saqvwe8.__unittest_L22_C1() [0x427ac4]

    ??:? void tmp1saqvwe8.__modtest() [0x427b68]

    ??:? int core.runtime.runModuleUnitTests().__foreachbody2(object.ModuleInfo*)
    [0x42bb0b]

    ??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)).__lambda2(immutable(object.ModuleInfo*))
    [0x42a99e]

    ??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))).__foreachbody2(ref
    rt.sections_elf_shared.DSO) [0x42fb31]

    ??:? int rt.sections_elf_shared.DSO.opApply(scope int delegate(ref rt.sections_elf_shared.DSO))
    [0x42ffe0]

    ??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*)))
    [0x42fabd]

    ??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)) [0x42a975]

    ??:? runModuleUnitTests [0x42b8e1]

    ??:? void rt.dmain2._d_run_main(int, char**, extern (C) int function(char[][])*).runAll()
    [0x428234]

    ??:? void rt.dmain2._d_r'
  stdout: ''
  timestamp: 1660164228
- exit_code: 1
  program: "import std.typecons;\nimport std.math;\n/*\nComplete the function that\
    \ takes two integers and returns \n    the product of their unit digits.\n   \
    \ Assume the input is always valid.\n    Examples:\n    >>> multiply(148L, 412L)\n\
    \    16L\n    >>> multiply(19L, 28L)\n    72L\n    >>> multiply(2020L, 1851L)\n\
    \    0L\n    >>> multiply(14L, -15L)\n    20L\n    \n*/\nlong multiply(long a,\
    \ long b) \n{\n    return (a%10)*(b%10);\n}\nunittest\n{\n    alias candidate\
    \ = multiply;\n\n    assert(candidate(148L, 412L) == 16L);\n    assert(candidate(19L,\
    \ 28L) == 72L);\n    assert(candidate(2020L, 1851L) == 0L);\n    assert(candidate(14L,\
    \ -15L) == 20L);\n    assert(candidate(76L, 67L) == 42L);\n    assert(candidate(17L,\
    \ 27L) == 49L);\n    assert(candidate(0L, 1L) == 0L);\n    assert(candidate(0L,\
    \ 0L) == 0L);\n}\nvoid main(){}"
  status: Exception
  stderr: 'core.exception.AssertError@/tmp/tmpx0vyfebi.d(29): unittest failure

    ----------------

    ??:? _d_unittestp [0x427de5]

    ??:? void tmpx0vyfebi.__unittest_L22_C1() [0x427ac4]

    ??:? void tmpx0vyfebi.__modtest() [0x427b68]

    ??:? int core.runtime.runModuleUnitTests().__foreachbody2(object.ModuleInfo*)
    [0x42bb0b]

    ??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)).__lambda2(immutable(object.ModuleInfo*))
    [0x42a99e]

    ??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))).__foreachbody2(ref
    rt.sections_elf_shared.DSO) [0x42fb31]

    ??:? int rt.sections_elf_shared.DSO.opApply(scope int delegate(ref rt.sections_elf_shared.DSO))
    [0x42ffe0]

    ??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*)))
    [0x42fabd]

    ??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)) [0x42a975]

    ??:? runModuleUnitTests [0x42b8e1]

    ??:? void rt.dmain2._d_run_main(int, char**, extern (C) int function(char[][])*).runAll()
    [0x428234]

    ??:? void rt.dmain2._d_r'
  stdout: ''
  timestamp: 1660164228
- exit_code: 1
  program: "import std.typecons;\nimport std.math;\n/*\nComplete the function that\
    \ takes two integers and returns \n    the product of their unit digits.\n   \
    \ Assume the input is always valid.\n    Examples:\n    >>> multiply(148L, 412L)\n\
    \    16L\n    >>> multiply(19L, 28L)\n    72L\n    >>> multiply(2020L, 1851L)\n\
    \    0L\n    >>> multiply(14L, -15L)\n    20L\n    \n*/\nlong multiply(long a,\
    \ long b) \n{\n    return (a % 10) * (b % 10);\n}\nunittest\n{\n    alias candidate\
    \ = multiply;\n\n    assert(candidate(148L, 412L) == 16L);\n    assert(candidate(19L,\
    \ 28L) == 72L);\n    assert(candidate(2020L, 1851L) == 0L);\n    assert(candidate(14L,\
    \ -15L) == 20L);\n    assert(candidate(76L, 67L) == 42L);\n    assert(candidate(17L,\
    \ 27L) == 49L);\n    assert(candidate(0L, 1L) == 0L);\n    assert(candidate(0L,\
    \ 0L) == 0L);\n}\nvoid main(){}"
  status: Exception
  stderr: 'core.exception.AssertError@/tmp/tmp1saqvwe8.d(29): unittest failure

    ----------------

    ??:? _d_unittestp [0x427de5]

    ??:? void tmp1saqvwe8.__unittest_L22_C1() [0x427ac4]

    ??:? void tmp1saqvwe8.__modtest() [0x427b68]

    ??:? int core.runtime.runModuleUnitTests().__foreachbody2(object.ModuleInfo*)
    [0x42bb0b]

    ??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)).__lambda2(immutable(object.ModuleInfo*))
    [0x42a99e]

    ??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))).__foreachbody2(ref
    rt.sections_elf_shared.DSO) [0x42fb31]

    ??:? int rt.sections_elf_shared.DSO.opApply(scope int delegate(ref rt.sections_elf_shared.DSO))
    [0x42ffe0]

    ??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*)))
    [0x42fabd]

    ??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)) [0x42a975]

    ??:? runModuleUnitTests [0x42b8e1]

    ??:? void rt.dmain2._d_run_main(int, char**, extern (C) int function(char[][])*).runAll()
    [0x428234]

    ??:? void rt.dmain2._d_r'
  stdout: ''
  timestamp: 1660164228
- exit_code: 1
  program: "import std.typecons;\nimport std.math;\n/*\nComplete the function that\
    \ takes two integers and returns \n    the product of their unit digits.\n   \
    \ Assume the input is always valid.\n    Examples:\n    >>> multiply(148L, 412L)\n\
    \    16L\n    >>> multiply(19L, 28L)\n    72L\n    >>> multiply(2020L, 1851L)\n\
    \    0L\n    >>> multiply(14L, -15L)\n    20L\n    \n*/\nlong multiply(long a,\
    \ long b) \n{\n    long res = 0;\n    if(a < 0)\n        a = -a;\n    if(b < 0)\n\
    \        b = -b;\n    res = a % 10 * b % 10;\n    return res;\n}\nunittest\n{\n\
    \    alias candidate = multiply;\n\n    assert(candidate(148L, 412L) == 16L);\n\
    \    assert(candidate(19L, 28L) == 72L);\n    assert(candidate(2020L, 1851L) ==\
    \ 0L);\n    assert(candidate(14L, -15L) == 20L);\n    assert(candidate(76L, 67L)\
    \ == 42L);\n    assert(candidate(17L, 27L) == 49L);\n    assert(candidate(0L,\
    \ 1L) == 0L);\n    assert(candidate(0L, 0L) == 0L);\n}\nvoid main(){}"
  status: Exception
  stderr: 'core.exception.AssertError@/tmp/tmpnenojr5a.d(32): unittest failure

    ----------------

    ??:? _d_unittestp [0x427dfd]

    ??:? void tmpnenojr5a.__unittest_L28_C1() [0x427a65]

    ??:? void tmpnenojr5a.__modtest() [0x427b7c]

    ??:? int core.runtime.runModuleUnitTests().__foreachbody2(object.ModuleInfo*)
    [0x42bb23]

    ??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)).__lambda2(immutable(object.ModuleInfo*))
    [0x42a9b6]

    ??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))).__foreachbody2(ref
    rt.sections_elf_shared.DSO) [0x42fb49]

    ??:? int rt.sections_elf_shared.DSO.opApply(scope int delegate(ref rt.sections_elf_shared.DSO))
    [0x42fff8]

    ??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*)))
    [0x42fad5]

    ??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)) [0x42a98d]

    ??:? runModuleUnitTests [0x42b8f9]

    ??:? void rt.dmain2._d_run_main(int, char**, extern (C) int function(char[][])*).runAll()
    [0x42824c]

    ??:? void rt.dmain2._d_r'
  stdout: ''
  timestamp: 1660164228
- exit_code: 1
  program: "import std.typecons;\nimport std.math;\n/*\nComplete the function that\
    \ takes two integers and returns \n    the product of their unit digits.\n   \
    \ Assume the input is always valid.\n    Examples:\n    >>> multiply(148L, 412L)\n\
    \    16L\n    >>> multiply(19L, 28L)\n    72L\n    >>> multiply(2020L, 1851L)\n\
    \    0L\n    >>> multiply(14L, -15L)\n    20L\n    \n*/\nlong multiply(long a,\
    \ long b) \n{\n    return (a % 10) * (b % 10);\n}\nunittest\n{\n    alias candidate\
    \ = multiply;\n\n    assert(candidate(148L, 412L) == 16L);\n    assert(candidate(19L,\
    \ 28L) == 72L);\n    assert(candidate(2020L, 1851L) == 0L);\n    assert(candidate(14L,\
    \ -15L) == 20L);\n    assert(candidate(76L, 67L) == 42L);\n    assert(candidate(17L,\
    \ 27L) == 49L);\n    assert(candidate(0L, 1L) == 0L);\n    assert(candidate(0L,\
    \ 0L) == 0L);\n}\nvoid main(){}"
  status: Exception
  stderr: 'core.exception.AssertError@/tmp/tmp1saqvwe8.d(29): unittest failure

    ----------------

    ??:? _d_unittestp [0x427de5]

    ??:? void tmp1saqvwe8.__unittest_L22_C1() [0x427ac4]

    ??:? void tmp1saqvwe8.__modtest() [0x427b68]

    ??:? int core.runtime.runModuleUnitTests().__foreachbody2(object.ModuleInfo*)
    [0x42bb0b]

    ??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)).__lambda2(immutable(object.ModuleInfo*))
    [0x42a99e]

    ??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))).__foreachbody2(ref
    rt.sections_elf_shared.DSO) [0x42fb31]

    ??:? int rt.sections_elf_shared.DSO.opApply(scope int delegate(ref rt.sections_elf_shared.DSO))
    [0x42ffe0]

    ??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*)))
    [0x42fabd]

    ??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)) [0x42a975]

    ??:? runModuleUnitTests [0x42b8e1]

    ??:? void rt.dmain2._d_run_main(int, char**, extern (C) int function(char[][])*).runAll()
    [0x428234]

    ??:? void rt.dmain2._d_r'
  stdout: ''
  timestamp: 1660164228
- exit_code: 1
  program: "import std.typecons;\nimport std.math;\n/*\nComplete the function that\
    \ takes two integers and returns \n    the product of their unit digits.\n   \
    \ Assume the input is always valid.\n    Examples:\n    >>> multiply(148L, 412L)\n\
    \    16L\n    >>> multiply(19L, 28L)\n    72L\n    >>> multiply(2020L, 1851L)\n\
    \    0L\n    >>> multiply(14L, -15L)\n    20L\n    \n*/\nlong multiply(long a,\
    \ long b) \n{\n    return (a % 10) * (b % 10);\n}\nunittest\n{\n    alias candidate\
    \ = multiply;\n\n    assert(candidate(148L, 412L) == 16L);\n    assert(candidate(19L,\
    \ 28L) == 72L);\n    assert(candidate(2020L, 1851L) == 0L);\n    assert(candidate(14L,\
    \ -15L) == 20L);\n    assert(candidate(76L, 67L) == 42L);\n    assert(candidate(17L,\
    \ 27L) == 49L);\n    assert(candidate(0L, 1L) == 0L);\n    assert(candidate(0L,\
    \ 0L) == 0L);\n}\nvoid main(){}"
  status: Exception
  stderr: 'core.exception.AssertError@/tmp/tmp1saqvwe8.d(29): unittest failure

    ----------------

    ??:? _d_unittestp [0x427de5]

    ??:? void tmp1saqvwe8.__unittest_L22_C1() [0x427ac4]

    ??:? void tmp1saqvwe8.__modtest() [0x427b68]

    ??:? int core.runtime.runModuleUnitTests().__foreachbody2(object.ModuleInfo*)
    [0x42bb0b]

    ??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)).__lambda2(immutable(object.ModuleInfo*))
    [0x42a99e]

    ??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))).__foreachbody2(ref
    rt.sections_elf_shared.DSO) [0x42fb31]

    ??:? int rt.sections_elf_shared.DSO.opApply(scope int delegate(ref rt.sections_elf_shared.DSO))
    [0x42ffe0]

    ??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*)))
    [0x42fabd]

    ??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)) [0x42a975]

    ??:? runModuleUnitTests [0x42b8e1]

    ??:? void rt.dmain2._d_run_main(int, char**, extern (C) int function(char[][])*).runAll()
    [0x428234]

    ??:? void rt.dmain2._d_r'
  stdout: ''
  timestamp: 1660164228
- exit_code: 1
  program: "import std.typecons;\nimport std.math;\n/*\nComplete the function that\
    \ takes two integers and returns \n    the product of their unit digits.\n   \
    \ Assume the input is always valid.\n    Examples:\n    >>> multiply(148L, 412L)\n\
    \    16L\n    >>> multiply(19L, 28L)\n    72L\n    >>> multiply(2020L, 1851L)\n\
    \    0L\n    >>> multiply(14L, -15L)\n    20L\n    \n*/\nlong multiply(long a,\
    \ long b) \n{\n    return (a % 10) * (b % 10);\n}\nunittest\n{\n    alias candidate\
    \ = multiply;\n\n    assert(candidate(148L, 412L) == 16L);\n    assert(candidate(19L,\
    \ 28L) == 72L);\n    assert(candidate(2020L, 1851L) == 0L);\n    assert(candidate(14L,\
    \ -15L) == 20L);\n    assert(candidate(76L, 67L) == 42L);\n    assert(candidate(17L,\
    \ 27L) == 49L);\n    assert(candidate(0L, 1L) == 0L);\n    assert(candidate(0L,\
    \ 0L) == 0L);\n}\nvoid main(){}"
  status: Exception
  stderr: 'core.exception.AssertError@/tmp/tmp1saqvwe8.d(29): unittest failure

    ----------------

    ??:? _d_unittestp [0x427de5]

    ??:? void tmp1saqvwe8.__unittest_L22_C1() [0x427ac4]

    ??:? void tmp1saqvwe8.__modtest() [0x427b68]

    ??:? int core.runtime.runModuleUnitTests().__foreachbody2(object.ModuleInfo*)
    [0x42bb0b]

    ??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)).__lambda2(immutable(object.ModuleInfo*))
    [0x42a99e]

    ??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))).__foreachbody2(ref
    rt.sections_elf_shared.DSO) [0x42fb31]

    ??:? int rt.sections_elf_shared.DSO.opApply(scope int delegate(ref rt.sections_elf_shared.DSO))
    [0x42ffe0]

    ??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*)))
    [0x42fabd]

    ??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)) [0x42a975]

    ??:? runModuleUnitTests [0x42b8e1]

    ??:? void rt.dmain2._d_run_main(int, char**, extern (C) int function(char[][])*).runAll()
    [0x428234]

    ??:? void rt.dmain2._d_r'
  stdout: ''
  timestamp: 1660164228
- exit_code: 1
  program: "import std.typecons;\nimport std.math;\n/*\nComplete the function that\
    \ takes two integers and returns \n    the product of their unit digits.\n   \
    \ Assume the input is always valid.\n    Examples:\n    >>> multiply(148L, 412L)\n\
    \    16L\n    >>> multiply(19L, 28L)\n    72L\n    >>> multiply(2020L, 1851L)\n\
    \    0L\n    >>> multiply(14L, -15L)\n    20L\n    \n*/\nlong multiply(long a,\
    \ long b) \n{\n    return (a % 10) * (b % 10);\n}\nunittest\n{\n    alias candidate\
    \ = multiply;\n\n    assert(candidate(148L, 412L) == 16L);\n    assert(candidate(19L,\
    \ 28L) == 72L);\n    assert(candidate(2020L, 1851L) == 0L);\n    assert(candidate(14L,\
    \ -15L) == 20L);\n    assert(candidate(76L, 67L) == 42L);\n    assert(candidate(17L,\
    \ 27L) == 49L);\n    assert(candidate(0L, 1L) == 0L);\n    assert(candidate(0L,\
    \ 0L) == 0L);\n}\nvoid main(){}"
  status: Exception
  stderr: 'core.exception.AssertError@/tmp/tmp1saqvwe8.d(29): unittest failure

    ----------------

    ??:? _d_unittestp [0x427de5]

    ??:? void tmp1saqvwe8.__unittest_L22_C1() [0x427ac4]

    ??:? void tmp1saqvwe8.__modtest() [0x427b68]

    ??:? int core.runtime.runModuleUnitTests().__foreachbody2(object.ModuleInfo*)
    [0x42bb0b]

    ??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)).__lambda2(immutable(object.ModuleInfo*))
    [0x42a99e]

    ??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))).__foreachbody2(ref
    rt.sections_elf_shared.DSO) [0x42fb31]

    ??:? int rt.sections_elf_shared.DSO.opApply(scope int delegate(ref rt.sections_elf_shared.DSO))
    [0x42ffe0]

    ??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*)))
    [0x42fabd]

    ??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)) [0x42a975]

    ??:? runModuleUnitTests [0x42b8e1]

    ??:? void rt.dmain2._d_run_main(int, char**, extern (C) int function(char[][])*).runAll()
    [0x428234]

    ??:? void rt.dmain2._d_r'
  stdout: ''
  timestamp: 1660164228
- exit_code: 1
  program: "import std.typecons;\nimport std.math;\n/*\nComplete the function that\
    \ takes two integers and returns \n    the product of their unit digits.\n   \
    \ Assume the input is always valid.\n    Examples:\n    >>> multiply(148L, 412L)\n\
    \    16L\n    >>> multiply(19L, 28L)\n    72L\n    >>> multiply(2020L, 1851L)\n\
    \    0L\n    >>> multiply(14L, -15L)\n    20L\n    \n*/\nlong multiply(long a,\
    \ long b) \n{\n    return (a % 10) * (b % 10);\n}\nunittest\n{\n    alias candidate\
    \ = multiply;\n\n    assert(candidate(148L, 412L) == 16L);\n    assert(candidate(19L,\
    \ 28L) == 72L);\n    assert(candidate(2020L, 1851L) == 0L);\n    assert(candidate(14L,\
    \ -15L) == 20L);\n    assert(candidate(76L, 67L) == 42L);\n    assert(candidate(17L,\
    \ 27L) == 49L);\n    assert(candidate(0L, 1L) == 0L);\n    assert(candidate(0L,\
    \ 0L) == 0L);\n}\nvoid main(){}"
  status: Exception
  stderr: 'core.exception.AssertError@/tmp/tmp1saqvwe8.d(29): unittest failure

    ----------------

    ??:? _d_unittestp [0x427de5]

    ??:? void tmp1saqvwe8.__unittest_L22_C1() [0x427ac4]

    ??:? void tmp1saqvwe8.__modtest() [0x427b68]

    ??:? int core.runtime.runModuleUnitTests().__foreachbody2(object.ModuleInfo*)
    [0x42bb0b]

    ??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)).__lambda2(immutable(object.ModuleInfo*))
    [0x42a99e]

    ??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))).__foreachbody2(ref
    rt.sections_elf_shared.DSO) [0x42fb31]

    ??:? int rt.sections_elf_shared.DSO.opApply(scope int delegate(ref rt.sections_elf_shared.DSO))
    [0x42ffe0]

    ??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*)))
    [0x42fabd]

    ??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)) [0x42a975]

    ??:? runModuleUnitTests [0x42b8e1]

    ??:? void rt.dmain2._d_run_main(int, char**, extern (C) int function(char[][])*).runAll()
    [0x428234]

    ??:? void rt.dmain2._d_r'
  stdout: ''
  timestamp: 1660164228
- exit_code: 1
  program: "import std.typecons;\nimport std.math;\n/*\nComplete the function that\
    \ takes two integers and returns \n    the product of their unit digits.\n   \
    \ Assume the input is always valid.\n    Examples:\n    >>> multiply(148L, 412L)\n\
    \    16L\n    >>> multiply(19L, 28L)\n    72L\n    >>> multiply(2020L, 1851L)\n\
    \    0L\n    >>> multiply(14L, -15L)\n    20L\n    \n*/\nlong multiply(long a,\
    \ long b) \n{\n    return (a % 10) * (b % 10);\n}\nunittest\n{\n    alias candidate\
    \ = multiply;\n\n    assert(candidate(148L, 412L) == 16L);\n    assert(candidate(19L,\
    \ 28L) == 72L);\n    assert(candidate(2020L, 1851L) == 0L);\n    assert(candidate(14L,\
    \ -15L) == 20L);\n    assert(candidate(76L, 67L) == 42L);\n    assert(candidate(17L,\
    \ 27L) == 49L);\n    assert(candidate(0L, 1L) == 0L);\n    assert(candidate(0L,\
    \ 0L) == 0L);\n}\nvoid main(){}"
  status: Exception
  stderr: 'core.exception.AssertError@/tmp/tmp1saqvwe8.d(29): unittest failure

    ----------------

    ??:? _d_unittestp [0x427de5]

    ??:? void tmp1saqvwe8.__unittest_L22_C1() [0x427ac4]

    ??:? void tmp1saqvwe8.__modtest() [0x427b68]

    ??:? int core.runtime.runModuleUnitTests().__foreachbody2(object.ModuleInfo*)
    [0x42bb0b]

    ??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)).__lambda2(immutable(object.ModuleInfo*))
    [0x42a99e]

    ??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))).__foreachbody2(ref
    rt.sections_elf_shared.DSO) [0x42fb31]

    ??:? int rt.sections_elf_shared.DSO.opApply(scope int delegate(ref rt.sections_elf_shared.DSO))
    [0x42ffe0]

    ??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*)))
    [0x42fabd]

    ??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)) [0x42a975]

    ??:? runModuleUnitTests [0x42b8e1]

    ??:? void rt.dmain2._d_run_main(int, char**, extern (C) int function(char[][])*).runAll()
    [0x428234]

    ??:? void rt.dmain2._d_r'
  stdout: ''
  timestamp: 1660164228
- exit_code: 1
  program: "import std.typecons;\nimport std.math;\n/*\nComplete the function that\
    \ takes two integers and returns \n    the product of their unit digits.\n   \
    \ Assume the input is always valid.\n    Examples:\n    >>> multiply(148L, 412L)\n\
    \    16L\n    >>> multiply(19L, 28L)\n    72L\n    >>> multiply(2020L, 1851L)\n\
    \    0L\n    >>> multiply(14L, -15L)\n    20L\n    \n*/\nlong multiply(long a,\
    \ long b) \n{\n    return (a % 10) * (b % 10);\n}\nunittest\n{\n    alias candidate\
    \ = multiply;\n\n    assert(candidate(148L, 412L) == 16L);\n    assert(candidate(19L,\
    \ 28L) == 72L);\n    assert(candidate(2020L, 1851L) == 0L);\n    assert(candidate(14L,\
    \ -15L) == 20L);\n    assert(candidate(76L, 67L) == 42L);\n    assert(candidate(17L,\
    \ 27L) == 49L);\n    assert(candidate(0L, 1L) == 0L);\n    assert(candidate(0L,\
    \ 0L) == 0L);\n}\nvoid main(){}"
  status: Exception
  stderr: 'core.exception.AssertError@/tmp/tmp1saqvwe8.d(29): unittest failure

    ----------------

    ??:? _d_unittestp [0x427de5]

    ??:? void tmp1saqvwe8.__unittest_L22_C1() [0x427ac4]

    ??:? void tmp1saqvwe8.__modtest() [0x427b68]

    ??:? int core.runtime.runModuleUnitTests().__foreachbody2(object.ModuleInfo*)
    [0x42bb0b]

    ??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)).__lambda2(immutable(object.ModuleInfo*))
    [0x42a99e]

    ??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))).__foreachbody2(ref
    rt.sections_elf_shared.DSO) [0x42fb31]

    ??:? int rt.sections_elf_shared.DSO.opApply(scope int delegate(ref rt.sections_elf_shared.DSO))
    [0x42ffe0]

    ??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*)))
    [0x42fabd]

    ??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)) [0x42a975]

    ??:? runModuleUnitTests [0x42b8e1]

    ??:? void rt.dmain2._d_run_main(int, char**, extern (C) int function(char[][])*).runAll()
    [0x428234]

    ??:? void rt.dmain2._d_r'
  stdout: ''
  timestamp: 1660164228
- exit_code: 1
  program: "import std.typecons;\nimport std.math;\n/*\nComplete the function that\
    \ takes two integers and returns \n    the product of their unit digits.\n   \
    \ Assume the input is always valid.\n    Examples:\n    >>> multiply(148L, 412L)\n\
    \    16L\n    >>> multiply(19L, 28L)\n    72L\n    >>> multiply(2020L, 1851L)\n\
    \    0L\n    >>> multiply(14L, -15L)\n    20L\n    \n*/\nlong multiply(long a,\
    \ long b) \n{\n    return (a % 10) * (b % 10);\n}\nunittest\n{\n    alias candidate\
    \ = multiply;\n\n    assert(candidate(148L, 412L) == 16L);\n    assert(candidate(19L,\
    \ 28L) == 72L);\n    assert(candidate(2020L, 1851L) == 0L);\n    assert(candidate(14L,\
    \ -15L) == 20L);\n    assert(candidate(76L, 67L) == 42L);\n    assert(candidate(17L,\
    \ 27L) == 49L);\n    assert(candidate(0L, 1L) == 0L);\n    assert(candidate(0L,\
    \ 0L) == 0L);\n}\nvoid main(){}"
  status: Exception
  stderr: 'core.exception.AssertError@/tmp/tmp1saqvwe8.d(29): unittest failure

    ----------------

    ??:? _d_unittestp [0x427de5]

    ??:? void tmp1saqvwe8.__unittest_L22_C1() [0x427ac4]

    ??:? void tmp1saqvwe8.__modtest() [0x427b68]

    ??:? int core.runtime.runModuleUnitTests().__foreachbody2(object.ModuleInfo*)
    [0x42bb0b]

    ??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)).__lambda2(immutable(object.ModuleInfo*))
    [0x42a99e]

    ??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))).__foreachbody2(ref
    rt.sections_elf_shared.DSO) [0x42fb31]

    ??:? int rt.sections_elf_shared.DSO.opApply(scope int delegate(ref rt.sections_elf_shared.DSO))
    [0x42ffe0]

    ??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*)))
    [0x42fabd]

    ??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)) [0x42a975]

    ??:? runModuleUnitTests [0x42b8e1]

    ??:? void rt.dmain2._d_run_main(int, char**, extern (C) int function(char[][])*).runAll()
    [0x428234]

    ??:? void rt.dmain2._d_r'
  stdout: ''
  timestamp: 1660164228
- exit_code: 0
  program: "import std.typecons;\nimport std.math;\n/*\nComplete the function that\
    \ takes two integers and returns \n    the product of their unit digits.\n   \
    \ Assume the input is always valid.\n    Examples:\n    >>> multiply(148L, 412L)\n\
    \    16L\n    >>> multiply(19L, 28L)\n    72L\n    >>> multiply(2020L, 1851L)\n\
    \    0L\n    >>> multiply(14L, -15L)\n    20L\n    \n*/\nlong multiply(long a,\
    \ long b) \n{\n    return abs(a % 10) * abs(b % 10);\n}\nunittest\n{\n    alias\
    \ candidate = multiply;\n\n    assert(candidate(148L, 412L) == 16L);\n    assert(candidate(19L,\
    \ 28L) == 72L);\n    assert(candidate(2020L, 1851L) == 0L);\n    assert(candidate(14L,\
    \ -15L) == 20L);\n    assert(candidate(76L, 67L) == 42L);\n    assert(candidate(17L,\
    \ 27L) == 49L);\n    assert(candidate(0L, 1L) == 0L);\n    assert(candidate(0L,\
    \ 0L) == 0L);\n}\nvoid main(){}"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660164228
- exit_code: 1
  program: "import std.typecons;\nimport std.math;\n/*\nComplete the function that\
    \ takes two integers and returns \n    the product of their unit digits.\n   \
    \ Assume the input is always valid.\n    Examples:\n    >>> multiply(148L, 412L)\n\
    \    16L\n    >>> multiply(19L, 28L)\n    72L\n    >>> multiply(2020L, 1851L)\n\
    \    0L\n    >>> multiply(14L, -15L)\n    20L\n    \n*/\nlong multiply(long a,\
    \ long b) \n{\n    return (a % 10) * (b % 10);\n}\nunittest\n{\n    alias candidate\
    \ = multiply;\n\n    assert(candidate(148L, 412L) == 16L);\n    assert(candidate(19L,\
    \ 28L) == 72L);\n    assert(candidate(2020L, 1851L) == 0L);\n    assert(candidate(14L,\
    \ -15L) == 20L);\n    assert(candidate(76L, 67L) == 42L);\n    assert(candidate(17L,\
    \ 27L) == 49L);\n    assert(candidate(0L, 1L) == 0L);\n    assert(candidate(0L,\
    \ 0L) == 0L);\n}\nvoid main(){}"
  status: Exception
  stderr: 'core.exception.AssertError@/tmp/tmp1saqvwe8.d(29): unittest failure

    ----------------

    ??:? _d_unittestp [0x427de5]

    ??:? void tmp1saqvwe8.__unittest_L22_C1() [0x427ac4]

    ??:? void tmp1saqvwe8.__modtest() [0x427b68]

    ??:? int core.runtime.runModuleUnitTests().__foreachbody2(object.ModuleInfo*)
    [0x42bb0b]

    ??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)).__lambda2(immutable(object.ModuleInfo*))
    [0x42a99e]

    ??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))).__foreachbody2(ref
    rt.sections_elf_shared.DSO) [0x42fb31]

    ??:? int rt.sections_elf_shared.DSO.opApply(scope int delegate(ref rt.sections_elf_shared.DSO))
    [0x42ffe0]

    ??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*)))
    [0x42fabd]

    ??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)) [0x42a975]

    ??:? runModuleUnitTests [0x42b8e1]

    ??:? void rt.dmain2._d_run_main(int, char**, extern (C) int function(char[][])*).runAll()
    [0x428234]

    ??:? void rt.dmain2._d_r'
  stdout: ''
  timestamp: 1660164228
- exit_code: 1
  program: "import std.typecons;\nimport std.math;\n/*\nComplete the function that\
    \ takes two integers and returns \n    the product of their unit digits.\n   \
    \ Assume the input is always valid.\n    Examples:\n    >>> multiply(148L, 412L)\n\
    \    16L\n    >>> multiply(19L, 28L)\n    72L\n    >>> multiply(2020L, 1851L)\n\
    \    0L\n    >>> multiply(14L, -15L)\n    20L\n    \n*/\nlong multiply(long a,\
    \ long b) \n{\n    return (a % 10) * (b % 10);\n}\nunittest\n{\n    alias candidate\
    \ = multiply;\n\n    assert(candidate(148L, 412L) == 16L);\n    assert(candidate(19L,\
    \ 28L) == 72L);\n    assert(candidate(2020L, 1851L) == 0L);\n    assert(candidate(14L,\
    \ -15L) == 20L);\n    assert(candidate(76L, 67L) == 42L);\n    assert(candidate(17L,\
    \ 27L) == 49L);\n    assert(candidate(0L, 1L) == 0L);\n    assert(candidate(0L,\
    \ 0L) == 0L);\n}\nvoid main(){}"
  status: Exception
  stderr: 'core.exception.AssertError@/tmp/tmp1saqvwe8.d(29): unittest failure

    ----------------

    ??:? _d_unittestp [0x427de5]

    ??:? void tmp1saqvwe8.__unittest_L22_C1() [0x427ac4]

    ??:? void tmp1saqvwe8.__modtest() [0x427b68]

    ??:? int core.runtime.runModuleUnitTests().__foreachbody2(object.ModuleInfo*)
    [0x42bb0b]

    ??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)).__lambda2(immutable(object.ModuleInfo*))
    [0x42a99e]

    ??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))).__foreachbody2(ref
    rt.sections_elf_shared.DSO) [0x42fb31]

    ??:? int rt.sections_elf_shared.DSO.opApply(scope int delegate(ref rt.sections_elf_shared.DSO))
    [0x42ffe0]

    ??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*)))
    [0x42fabd]

    ??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)) [0x42a975]

    ??:? runModuleUnitTests [0x42b8e1]

    ??:? void rt.dmain2._d_run_main(int, char**, extern (C) int function(char[][])*).runAll()
    [0x428234]

    ??:? void rt.dmain2._d_r'
  stdout: ''
  timestamp: 1660164228
- exit_code: 0
  program: "import std.typecons;\nimport std.math;\n/*\nComplete the function that\
    \ takes two integers and returns \n    the product of their unit digits.\n   \
    \ Assume the input is always valid.\n    Examples:\n    >>> multiply(148L, 412L)\n\
    \    16L\n    >>> multiply(19L, 28L)\n    72L\n    >>> multiply(2020L, 1851L)\n\
    \    0L\n    >>> multiply(14L, -15L)\n    20L\n    \n*/\nlong multiply(long a,\
    \ long b) \n{\n    return abs(a % 10) * abs(b % 10);\n}\nunittest\n{\n    alias\
    \ candidate = multiply;\n\n    assert(candidate(148L, 412L) == 16L);\n    assert(candidate(19L,\
    \ 28L) == 72L);\n    assert(candidate(2020L, 1851L) == 0L);\n    assert(candidate(14L,\
    \ -15L) == 20L);\n    assert(candidate(76L, 67L) == 42L);\n    assert(candidate(17L,\
    \ 27L) == 49L);\n    assert(candidate(0L, 1L) == 0L);\n    assert(candidate(0L,\
    \ 0L) == 0L);\n}\nvoid main(){}"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660164228
- exit_code: 1
  program: "import std.typecons;\nimport std.math;\n/*\nComplete the function that\
    \ takes two integers and returns \n    the product of their unit digits.\n   \
    \ Assume the input is always valid.\n    Examples:\n    >>> multiply(148L, 412L)\n\
    \    16L\n    >>> multiply(19L, 28L)\n    72L\n    >>> multiply(2020L, 1851L)\n\
    \    0L\n    >>> multiply(14L, -15L)\n    20L\n    \n*/\nlong multiply(long a,\
    \ long b) \n{\n    return (a%10)*(b%10);\n}\nunittest\n{\n    alias candidate\
    \ = multiply;\n\n    assert(candidate(148L, 412L) == 16L);\n    assert(candidate(19L,\
    \ 28L) == 72L);\n    assert(candidate(2020L, 1851L) == 0L);\n    assert(candidate(14L,\
    \ -15L) == 20L);\n    assert(candidate(76L, 67L) == 42L);\n    assert(candidate(17L,\
    \ 27L) == 49L);\n    assert(candidate(0L, 1L) == 0L);\n    assert(candidate(0L,\
    \ 0L) == 0L);\n}\nvoid main(){}"
  status: Exception
  stderr: 'core.exception.AssertError@/tmp/tmpx0vyfebi.d(29): unittest failure

    ----------------

    ??:? _d_unittestp [0x427de5]

    ??:? void tmpx0vyfebi.__unittest_L22_C1() [0x427ac4]

    ??:? void tmpx0vyfebi.__modtest() [0x427b68]

    ??:? int core.runtime.runModuleUnitTests().__foreachbody2(object.ModuleInfo*)
    [0x42bb0b]

    ??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)).__lambda2(immutable(object.ModuleInfo*))
    [0x42a99e]

    ??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))).__foreachbody2(ref
    rt.sections_elf_shared.DSO) [0x42fb31]

    ??:? int rt.sections_elf_shared.DSO.opApply(scope int delegate(ref rt.sections_elf_shared.DSO))
    [0x42ffe0]

    ??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*)))
    [0x42fabd]

    ??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)) [0x42a975]

    ??:? runModuleUnitTests [0x42b8e1]

    ??:? void rt.dmain2._d_run_main(int, char**, extern (C) int function(char[][])*).runAll()
    [0x428234]

    ??:? void rt.dmain2._d_r'
  stdout: ''
  timestamp: 1660164228
- exit_code: 1
  program: "import std.typecons;\nimport std.math;\n/*\nComplete the function that\
    \ takes two integers and returns \n    the product of their unit digits.\n   \
    \ Assume the input is always valid.\n    Examples:\n    >>> multiply(148L, 412L)\n\
    \    16L\n    >>> multiply(19L, 28L)\n    72L\n    >>> multiply(2020L, 1851L)\n\
    \    0L\n    >>> multiply(14L, -15L)\n    20L\n    \n*/\nlong multiply(long a,\
    \ long b) \n{\n    return (a % 10) * (b % 10);\n}\nunittest\n{\n    alias candidate\
    \ = multiply;\n\n    assert(candidate(148L, 412L) == 16L);\n    assert(candidate(19L,\
    \ 28L) == 72L);\n    assert(candidate(2020L, 1851L) == 0L);\n    assert(candidate(14L,\
    \ -15L) == 20L);\n    assert(candidate(76L, 67L) == 42L);\n    assert(candidate(17L,\
    \ 27L) == 49L);\n    assert(candidate(0L, 1L) == 0L);\n    assert(candidate(0L,\
    \ 0L) == 0L);\n}\nvoid main(){}"
  status: Exception
  stderr: 'core.exception.AssertError@/tmp/tmp1saqvwe8.d(29): unittest failure

    ----------------

    ??:? _d_unittestp [0x427de5]

    ??:? void tmp1saqvwe8.__unittest_L22_C1() [0x427ac4]

    ??:? void tmp1saqvwe8.__modtest() [0x427b68]

    ??:? int core.runtime.runModuleUnitTests().__foreachbody2(object.ModuleInfo*)
    [0x42bb0b]

    ??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)).__lambda2(immutable(object.ModuleInfo*))
    [0x42a99e]

    ??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))).__foreachbody2(ref
    rt.sections_elf_shared.DSO) [0x42fb31]

    ??:? int rt.sections_elf_shared.DSO.opApply(scope int delegate(ref rt.sections_elf_shared.DSO))
    [0x42ffe0]

    ??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*)))
    [0x42fabd]

    ??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)) [0x42a975]

    ??:? runModuleUnitTests [0x42b8e1]

    ??:? void rt.dmain2._d_run_main(int, char**, extern (C) int function(char[][])*).runAll()
    [0x428234]

    ??:? void rt.dmain2._d_r'
  stdout: ''
  timestamp: 1660164228
- exit_code: 1
  program: "import std.typecons;\nimport std.math;\n/*\nComplete the function that\
    \ takes two integers and returns \n    the product of their unit digits.\n   \
    \ Assume the input is always valid.\n    Examples:\n    >>> multiply(148L, 412L)\n\
    \    16L\n    >>> multiply(19L, 28L)\n    72L\n    >>> multiply(2020L, 1851L)\n\
    \    0L\n    >>> multiply(14L, -15L)\n    20L\n    \n*/\nlong multiply(long a,\
    \ long b) \n{\n    return (a % 10) * (b % 10);\n}\nunittest\n{\n    alias candidate\
    \ = multiply;\n\n    assert(candidate(148L, 412L) == 16L);\n    assert(candidate(19L,\
    \ 28L) == 72L);\n    assert(candidate(2020L, 1851L) == 0L);\n    assert(candidate(14L,\
    \ -15L) == 20L);\n    assert(candidate(76L, 67L) == 42L);\n    assert(candidate(17L,\
    \ 27L) == 49L);\n    assert(candidate(0L, 1L) == 0L);\n    assert(candidate(0L,\
    \ 0L) == 0L);\n}\nvoid main(){}"
  status: Exception
  stderr: 'core.exception.AssertError@/tmp/tmp1saqvwe8.d(29): unittest failure

    ----------------

    ??:? _d_unittestp [0x427de5]

    ??:? void tmp1saqvwe8.__unittest_L22_C1() [0x427ac4]

    ??:? void tmp1saqvwe8.__modtest() [0x427b68]

    ??:? int core.runtime.runModuleUnitTests().__foreachbody2(object.ModuleInfo*)
    [0x42bb0b]

    ??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)).__lambda2(immutable(object.ModuleInfo*))
    [0x42a99e]

    ??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))).__foreachbody2(ref
    rt.sections_elf_shared.DSO) [0x42fb31]

    ??:? int rt.sections_elf_shared.DSO.opApply(scope int delegate(ref rt.sections_elf_shared.DSO))
    [0x42ffe0]

    ??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*)))
    [0x42fabd]

    ??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)) [0x42a975]

    ??:? runModuleUnitTests [0x42b8e1]

    ??:? void rt.dmain2._d_run_main(int, char**, extern (C) int function(char[][])*).runAll()
    [0x428234]

    ??:? void rt.dmain2._d_r'
  stdout: ''
  timestamp: 1660164228
- exit_code: 1
  program: "import std.typecons;\nimport std.math;\n/*\nComplete the function that\
    \ takes two integers and returns \n    the product of their unit digits.\n   \
    \ Assume the input is always valid.\n    Examples:\n    >>> multiply(148L, 412L)\n\
    \    16L\n    >>> multiply(19L, 28L)\n    72L\n    >>> multiply(2020L, 1851L)\n\
    \    0L\n    >>> multiply(14L, -15L)\n    20L\n    \n*/\nlong multiply(long a,\
    \ long b) \n{\n    return (a%10)*(b%10);\n}\nunittest\n{\n    alias candidate\
    \ = multiply;\n\n    assert(candidate(148L, 412L) == 16L);\n    assert(candidate(19L,\
    \ 28L) == 72L);\n    assert(candidate(2020L, 1851L) == 0L);\n    assert(candidate(14L,\
    \ -15L) == 20L);\n    assert(candidate(76L, 67L) == 42L);\n    assert(candidate(17L,\
    \ 27L) == 49L);\n    assert(candidate(0L, 1L) == 0L);\n    assert(candidate(0L,\
    \ 0L) == 0L);\n}\nvoid main(){}"
  status: Exception
  stderr: 'core.exception.AssertError@/tmp/tmpx0vyfebi.d(29): unittest failure

    ----------------

    ??:? _d_unittestp [0x427de5]

    ??:? void tmpx0vyfebi.__unittest_L22_C1() [0x427ac4]

    ??:? void tmpx0vyfebi.__modtest() [0x427b68]

    ??:? int core.runtime.runModuleUnitTests().__foreachbody2(object.ModuleInfo*)
    [0x42bb0b]

    ??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)).__lambda2(immutable(object.ModuleInfo*))
    [0x42a99e]

    ??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))).__foreachbody2(ref
    rt.sections_elf_shared.DSO) [0x42fb31]

    ??:? int rt.sections_elf_shared.DSO.opApply(scope int delegate(ref rt.sections_elf_shared.DSO))
    [0x42ffe0]

    ??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*)))
    [0x42fabd]

    ??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)) [0x42a975]

    ??:? runModuleUnitTests [0x42b8e1]

    ??:? void rt.dmain2._d_run_main(int, char**, extern (C) int function(char[][])*).runAll()
    [0x428234]

    ??:? void rt.dmain2._d_r'
  stdout: ''
  timestamp: 1660164228
- exit_code: 1
  program: "import std.typecons;\nimport std.math;\n/*\nComplete the function that\
    \ takes two integers and returns \n    the product of their unit digits.\n   \
    \ Assume the input is always valid.\n    Examples:\n    >>> multiply(148L, 412L)\n\
    \    16L\n    >>> multiply(19L, 28L)\n    72L\n    >>> multiply(2020L, 1851L)\n\
    \    0L\n    >>> multiply(14L, -15L)\n    20L\n    \n*/\nlong multiply(long a,\
    \ long b) \n{\n    return (a % 10) * (b % 10);\n}\nunittest\n{\n    alias candidate\
    \ = multiply;\n\n    assert(candidate(148L, 412L) == 16L);\n    assert(candidate(19L,\
    \ 28L) == 72L);\n    assert(candidate(2020L, 1851L) == 0L);\n    assert(candidate(14L,\
    \ -15L) == 20L);\n    assert(candidate(76L, 67L) == 42L);\n    assert(candidate(17L,\
    \ 27L) == 49L);\n    assert(candidate(0L, 1L) == 0L);\n    assert(candidate(0L,\
    \ 0L) == 0L);\n}\nvoid main(){}"
  status: Exception
  stderr: 'core.exception.AssertError@/tmp/tmp1saqvwe8.d(29): unittest failure

    ----------------

    ??:? _d_unittestp [0x427de5]

    ??:? void tmp1saqvwe8.__unittest_L22_C1() [0x427ac4]

    ??:? void tmp1saqvwe8.__modtest() [0x427b68]

    ??:? int core.runtime.runModuleUnitTests().__foreachbody2(object.ModuleInfo*)
    [0x42bb0b]

    ??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)).__lambda2(immutable(object.ModuleInfo*))
    [0x42a99e]

    ??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))).__foreachbody2(ref
    rt.sections_elf_shared.DSO) [0x42fb31]

    ??:? int rt.sections_elf_shared.DSO.opApply(scope int delegate(ref rt.sections_elf_shared.DSO))
    [0x42ffe0]

    ??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*)))
    [0x42fabd]

    ??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)) [0x42a975]

    ??:? runModuleUnitTests [0x42b8e1]

    ??:? void rt.dmain2._d_run_main(int, char**, extern (C) int function(char[][])*).runAll()
    [0x428234]

    ??:? void rt.dmain2._d_r'
  stdout: ''
  timestamp: 1660164228
- exit_code: 1
  program: "import std.typecons;\nimport std.math;\n/*\nComplete the function that\
    \ takes two integers and returns \n    the product of their unit digits.\n   \
    \ Assume the input is always valid.\n    Examples:\n    >>> multiply(148L, 412L)\n\
    \    16L\n    >>> multiply(19L, 28L)\n    72L\n    >>> multiply(2020L, 1851L)\n\
    \    0L\n    >>> multiply(14L, -15L)\n    20L\n    \n*/\nlong multiply(long a,\
    \ long b) \n{\n    return (a%10) * (b%10);\n}\nunittest\n{\n    alias candidate\
    \ = multiply;\n\n    assert(candidate(148L, 412L) == 16L);\n    assert(candidate(19L,\
    \ 28L) == 72L);\n    assert(candidate(2020L, 1851L) == 0L);\n    assert(candidate(14L,\
    \ -15L) == 20L);\n    assert(candidate(76L, 67L) == 42L);\n    assert(candidate(17L,\
    \ 27L) == 49L);\n    assert(candidate(0L, 1L) == 0L);\n    assert(candidate(0L,\
    \ 0L) == 0L);\n}\nvoid main(){}"
  status: Exception
  stderr: 'core.exception.AssertError@/tmp/tmpaskp09_u.d(29): unittest failure

    ----------------

    ??:? _d_unittestp [0x427de5]

    ??:? void tmpaskp09_u.__unittest_L22_C1() [0x427ac4]

    ??:? void tmpaskp09_u.__modtest() [0x427b68]

    ??:? int core.runtime.runModuleUnitTests().__foreachbody2(object.ModuleInfo*)
    [0x42bb0b]

    ??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)).__lambda2(immutable(object.ModuleInfo*))
    [0x42a99e]

    ??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))).__foreachbody2(ref
    rt.sections_elf_shared.DSO) [0x42fb31]

    ??:? int rt.sections_elf_shared.DSO.opApply(scope int delegate(ref rt.sections_elf_shared.DSO))
    [0x42ffe0]

    ??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*)))
    [0x42fabd]

    ??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)) [0x42a975]

    ??:? runModuleUnitTests [0x42b8e1]

    ??:? void rt.dmain2._d_run_main(int, char**, extern (C) int function(char[][])*).runAll()
    [0x428234]

    ??:? void rt.dmain2._d_r'
  stdout: ''
  timestamp: 1660164228
- exit_code: 1
  program: "import std.typecons;\nimport std.math;\n/*\nComplete the function that\
    \ takes two integers and returns \n    the product of their unit digits.\n   \
    \ Assume the input is always valid.\n    Examples:\n    >>> multiply(148L, 412L)\n\
    \    16L\n    >>> multiply(19L, 28L)\n    72L\n    >>> multiply(2020L, 1851L)\n\
    \    0L\n    >>> multiply(14L, -15L)\n    20L\n    \n*/\nlong multiply(long a,\
    \ long b) \n{\n    return (a % 10) * (b % 10);\n}\nunittest\n{\n    alias candidate\
    \ = multiply;\n\n    assert(candidate(148L, 412L) == 16L);\n    assert(candidate(19L,\
    \ 28L) == 72L);\n    assert(candidate(2020L, 1851L) == 0L);\n    assert(candidate(14L,\
    \ -15L) == 20L);\n    assert(candidate(76L, 67L) == 42L);\n    assert(candidate(17L,\
    \ 27L) == 49L);\n    assert(candidate(0L, 1L) == 0L);\n    assert(candidate(0L,\
    \ 0L) == 0L);\n}\nvoid main(){}"
  status: Exception
  stderr: 'core.exception.AssertError@/tmp/tmp1saqvwe8.d(29): unittest failure

    ----------------

    ??:? _d_unittestp [0x427de5]

    ??:? void tmp1saqvwe8.__unittest_L22_C1() [0x427ac4]

    ??:? void tmp1saqvwe8.__modtest() [0x427b68]

    ??:? int core.runtime.runModuleUnitTests().__foreachbody2(object.ModuleInfo*)
    [0x42bb0b]

    ??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)).__lambda2(immutable(object.ModuleInfo*))
    [0x42a99e]

    ??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))).__foreachbody2(ref
    rt.sections_elf_shared.DSO) [0x42fb31]

    ??:? int rt.sections_elf_shared.DSO.opApply(scope int delegate(ref rt.sections_elf_shared.DSO))
    [0x42ffe0]

    ??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*)))
    [0x42fabd]

    ??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)) [0x42a975]

    ??:? runModuleUnitTests [0x42b8e1]

    ??:? void rt.dmain2._d_run_main(int, char**, extern (C) int function(char[][])*).runAll()
    [0x428234]

    ??:? void rt.dmain2._d_r'
  stdout: ''
  timestamp: 1660164228
- exit_code: 1
  program: "import std.typecons;\nimport std.math;\n/*\nComplete the function that\
    \ takes two integers and returns \n    the product of their unit digits.\n   \
    \ Assume the input is always valid.\n    Examples:\n    >>> multiply(148L, 412L)\n\
    \    16L\n    >>> multiply(19L, 28L)\n    72L\n    >>> multiply(2020L, 1851L)\n\
    \    0L\n    >>> multiply(14L, -15L)\n    20L\n    \n*/\nlong multiply(long a,\
    \ long b) \n{\n    return (a % 10) * (b % 10);\n}\nunittest\n{\n    alias candidate\
    \ = multiply;\n\n    assert(candidate(148L, 412L) == 16L);\n    assert(candidate(19L,\
    \ 28L) == 72L);\n    assert(candidate(2020L, 1851L) == 0L);\n    assert(candidate(14L,\
    \ -15L) == 20L);\n    assert(candidate(76L, 67L) == 42L);\n    assert(candidate(17L,\
    \ 27L) == 49L);\n    assert(candidate(0L, 1L) == 0L);\n    assert(candidate(0L,\
    \ 0L) == 0L);\n}\nvoid main(){}"
  status: Exception
  stderr: 'core.exception.AssertError@/tmp/tmp1saqvwe8.d(29): unittest failure

    ----------------

    ??:? _d_unittestp [0x427de5]

    ??:? void tmp1saqvwe8.__unittest_L22_C1() [0x427ac4]

    ??:? void tmp1saqvwe8.__modtest() [0x427b68]

    ??:? int core.runtime.runModuleUnitTests().__foreachbody2(object.ModuleInfo*)
    [0x42bb0b]

    ??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)).__lambda2(immutable(object.ModuleInfo*))
    [0x42a99e]

    ??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))).__foreachbody2(ref
    rt.sections_elf_shared.DSO) [0x42fb31]

    ??:? int rt.sections_elf_shared.DSO.opApply(scope int delegate(ref rt.sections_elf_shared.DSO))
    [0x42ffe0]

    ??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*)))
    [0x42fabd]

    ??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)) [0x42a975]

    ??:? runModuleUnitTests [0x42b8e1]

    ??:? void rt.dmain2._d_run_main(int, char**, extern (C) int function(char[][])*).runAll()
    [0x428234]

    ??:? void rt.dmain2._d_r'
  stdout: ''
  timestamp: 1660164228
- exit_code: 1
  program: "import std.typecons;\nimport std.math;\n/*\nComplete the function that\
    \ takes two integers and returns \n    the product of their unit digits.\n   \
    \ Assume the input is always valid.\n    Examples:\n    >>> multiply(148L, 412L)\n\
    \    16L\n    >>> multiply(19L, 28L)\n    72L\n    >>> multiply(2020L, 1851L)\n\
    \    0L\n    >>> multiply(14L, -15L)\n    20L\n    \n*/\nlong multiply(long a,\
    \ long b) \n{\n    return (a % 10) * (b % 10);\n}\nunittest\n{\n    alias candidate\
    \ = multiply;\n\n    assert(candidate(148L, 412L) == 16L);\n    assert(candidate(19L,\
    \ 28L) == 72L);\n    assert(candidate(2020L, 1851L) == 0L);\n    assert(candidate(14L,\
    \ -15L) == 20L);\n    assert(candidate(76L, 67L) == 42L);\n    assert(candidate(17L,\
    \ 27L) == 49L);\n    assert(candidate(0L, 1L) == 0L);\n    assert(candidate(0L,\
    \ 0L) == 0L);\n}\nvoid main(){}"
  status: Exception
  stderr: 'core.exception.AssertError@/tmp/tmp1saqvwe8.d(29): unittest failure

    ----------------

    ??:? _d_unittestp [0x427de5]

    ??:? void tmp1saqvwe8.__unittest_L22_C1() [0x427ac4]

    ??:? void tmp1saqvwe8.__modtest() [0x427b68]

    ??:? int core.runtime.runModuleUnitTests().__foreachbody2(object.ModuleInfo*)
    [0x42bb0b]

    ??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)).__lambda2(immutable(object.ModuleInfo*))
    [0x42a99e]

    ??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))).__foreachbody2(ref
    rt.sections_elf_shared.DSO) [0x42fb31]

    ??:? int rt.sections_elf_shared.DSO.opApply(scope int delegate(ref rt.sections_elf_shared.DSO))
    [0x42ffe0]

    ??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*)))
    [0x42fabd]

    ??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)) [0x42a975]

    ??:? runModuleUnitTests [0x42b8e1]

    ??:? void rt.dmain2._d_run_main(int, char**, extern (C) int function(char[][])*).runAll()
    [0x428234]

    ??:? void rt.dmain2._d_r'
  stdout: ''
  timestamp: 1660164228
- exit_code: 1
  program: "import std.typecons;\nimport std.math;\n/*\nComplete the function that\
    \ takes two integers and returns \n    the product of their unit digits.\n   \
    \ Assume the input is always valid.\n    Examples:\n    >>> multiply(148L, 412L)\n\
    \    16L\n    >>> multiply(19L, 28L)\n    72L\n    >>> multiply(2020L, 1851L)\n\
    \    0L\n    >>> multiply(14L, -15L)\n    20L\n    \n*/\nlong multiply(long a,\
    \ long b) \n{\n    return (a%10)*(b%10);\n}\nunittest\n{\n    alias candidate\
    \ = multiply;\n\n    assert(candidate(148L, 412L) == 16L);\n    assert(candidate(19L,\
    \ 28L) == 72L);\n    assert(candidate(2020L, 1851L) == 0L);\n    assert(candidate(14L,\
    \ -15L) == 20L);\n    assert(candidate(76L, 67L) == 42L);\n    assert(candidate(17L,\
    \ 27L) == 49L);\n    assert(candidate(0L, 1L) == 0L);\n    assert(candidate(0L,\
    \ 0L) == 0L);\n}\nvoid main(){}"
  status: Exception
  stderr: 'core.exception.AssertError@/tmp/tmpx0vyfebi.d(29): unittest failure

    ----------------

    ??:? _d_unittestp [0x427de5]

    ??:? void tmpx0vyfebi.__unittest_L22_C1() [0x427ac4]

    ??:? void tmpx0vyfebi.__modtest() [0x427b68]

    ??:? int core.runtime.runModuleUnitTests().__foreachbody2(object.ModuleInfo*)
    [0x42bb0b]

    ??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)).__lambda2(immutable(object.ModuleInfo*))
    [0x42a99e]

    ??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))).__foreachbody2(ref
    rt.sections_elf_shared.DSO) [0x42fb31]

    ??:? int rt.sections_elf_shared.DSO.opApply(scope int delegate(ref rt.sections_elf_shared.DSO))
    [0x42ffe0]

    ??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*)))
    [0x42fabd]

    ??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)) [0x42a975]

    ??:? runModuleUnitTests [0x42b8e1]

    ??:? void rt.dmain2._d_run_main(int, char**, extern (C) int function(char[][])*).runAll()
    [0x428234]

    ??:? void rt.dmain2._d_r'
  stdout: ''
  timestamp: 1660164228
- exit_code: 1
  program: "import std.typecons;\nimport std.math;\n/*\nComplete the function that\
    \ takes two integers and returns \n    the product of their unit digits.\n   \
    \ Assume the input is always valid.\n    Examples:\n    >>> multiply(148L, 412L)\n\
    \    16L\n    >>> multiply(19L, 28L)\n    72L\n    >>> multiply(2020L, 1851L)\n\
    \    0L\n    >>> multiply(14L, -15L)\n    20L\n    \n*/\nlong multiply(long a,\
    \ long b) \n{\n    return (a % 10) * (b % 10);\n}\nunittest\n{\n    alias candidate\
    \ = multiply;\n\n    assert(candidate(148L, 412L) == 16L);\n    assert(candidate(19L,\
    \ 28L) == 72L);\n    assert(candidate(2020L, 1851L) == 0L);\n    assert(candidate(14L,\
    \ -15L) == 20L);\n    assert(candidate(76L, 67L) == 42L);\n    assert(candidate(17L,\
    \ 27L) == 49L);\n    assert(candidate(0L, 1L) == 0L);\n    assert(candidate(0L,\
    \ 0L) == 0L);\n}\nvoid main(){}"
  status: Exception
  stderr: 'core.exception.AssertError@/tmp/tmp1saqvwe8.d(29): unittest failure

    ----------------

    ??:? _d_unittestp [0x427de5]

    ??:? void tmp1saqvwe8.__unittest_L22_C1() [0x427ac4]

    ??:? void tmp1saqvwe8.__modtest() [0x427b68]

    ??:? int core.runtime.runModuleUnitTests().__foreachbody2(object.ModuleInfo*)
    [0x42bb0b]

    ??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)).__lambda2(immutable(object.ModuleInfo*))
    [0x42a99e]

    ??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))).__foreachbody2(ref
    rt.sections_elf_shared.DSO) [0x42fb31]

    ??:? int rt.sections_elf_shared.DSO.opApply(scope int delegate(ref rt.sections_elf_shared.DSO))
    [0x42ffe0]

    ??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*)))
    [0x42fabd]

    ??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)) [0x42a975]

    ??:? runModuleUnitTests [0x42b8e1]

    ??:? void rt.dmain2._d_run_main(int, char**, extern (C) int function(char[][])*).runAll()
    [0x428234]

    ??:? void rt.dmain2._d_r'
  stdout: ''
  timestamp: 1660164228
- exit_code: 1
  program: "import std.typecons;\nimport std.math;\n/*\nComplete the function that\
    \ takes two integers and returns \n    the product of their unit digits.\n   \
    \ Assume the input is always valid.\n    Examples:\n    >>> multiply(148L, 412L)\n\
    \    16L\n    >>> multiply(19L, 28L)\n    72L\n    >>> multiply(2020L, 1851L)\n\
    \    0L\n    >>> multiply(14L, -15L)\n    20L\n    \n*/\nlong multiply(long a,\
    \ long b) \n{\n    return (a%10)*(b%10);\n}\nunittest\n{\n    alias candidate\
    \ = multiply;\n\n    assert(candidate(148L, 412L) == 16L);\n    assert(candidate(19L,\
    \ 28L) == 72L);\n    assert(candidate(2020L, 1851L) == 0L);\n    assert(candidate(14L,\
    \ -15L) == 20L);\n    assert(candidate(76L, 67L) == 42L);\n    assert(candidate(17L,\
    \ 27L) == 49L);\n    assert(candidate(0L, 1L) == 0L);\n    assert(candidate(0L,\
    \ 0L) == 0L);\n}\nvoid main(){}"
  status: Exception
  stderr: 'core.exception.AssertError@/tmp/tmpx0vyfebi.d(29): unittest failure

    ----------------

    ??:? _d_unittestp [0x427de5]

    ??:? void tmpx0vyfebi.__unittest_L22_C1() [0x427ac4]

    ??:? void tmpx0vyfebi.__modtest() [0x427b68]

    ??:? int core.runtime.runModuleUnitTests().__foreachbody2(object.ModuleInfo*)
    [0x42bb0b]

    ??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)).__lambda2(immutable(object.ModuleInfo*))
    [0x42a99e]

    ??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))).__foreachbody2(ref
    rt.sections_elf_shared.DSO) [0x42fb31]

    ??:? int rt.sections_elf_shared.DSO.opApply(scope int delegate(ref rt.sections_elf_shared.DSO))
    [0x42ffe0]

    ??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*)))
    [0x42fabd]

    ??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)) [0x42a975]

    ??:? runModuleUnitTests [0x42b8e1]

    ??:? void rt.dmain2._d_run_main(int, char**, extern (C) int function(char[][])*).runAll()
    [0x428234]

    ??:? void rt.dmain2._d_r'
  stdout: ''
  timestamp: 1660164228
- exit_code: 1
  program: "import std.typecons;\nimport std.math;\n/*\nComplete the function that\
    \ takes two integers and returns \n    the product of their unit digits.\n   \
    \ Assume the input is always valid.\n    Examples:\n    >>> multiply(148L, 412L)\n\
    \    16L\n    >>> multiply(19L, 28L)\n    72L\n    >>> multiply(2020L, 1851L)\n\
    \    0L\n    >>> multiply(14L, -15L)\n    20L\n    \n*/\nlong multiply(long a,\
    \ long b) \n{\n    return (a % 10) * (b % 10);\n}\nunittest\n{\n    alias candidate\
    \ = multiply;\n\n    assert(candidate(148L, 412L) == 16L);\n    assert(candidate(19L,\
    \ 28L) == 72L);\n    assert(candidate(2020L, 1851L) == 0L);\n    assert(candidate(14L,\
    \ -15L) == 20L);\n    assert(candidate(76L, 67L) == 42L);\n    assert(candidate(17L,\
    \ 27L) == 49L);\n    assert(candidate(0L, 1L) == 0L);\n    assert(candidate(0L,\
    \ 0L) == 0L);\n}\nvoid main(){}"
  status: Exception
  stderr: 'core.exception.AssertError@/tmp/tmp1saqvwe8.d(29): unittest failure

    ----------------

    ??:? _d_unittestp [0x427de5]

    ??:? void tmp1saqvwe8.__unittest_L22_C1() [0x427ac4]

    ??:? void tmp1saqvwe8.__modtest() [0x427b68]

    ??:? int core.runtime.runModuleUnitTests().__foreachbody2(object.ModuleInfo*)
    [0x42bb0b]

    ??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)).__lambda2(immutable(object.ModuleInfo*))
    [0x42a99e]

    ??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))).__foreachbody2(ref
    rt.sections_elf_shared.DSO) [0x42fb31]

    ??:? int rt.sections_elf_shared.DSO.opApply(scope int delegate(ref rt.sections_elf_shared.DSO))
    [0x42ffe0]

    ??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*)))
    [0x42fabd]

    ??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)) [0x42a975]

    ??:? runModuleUnitTests [0x42b8e1]

    ??:? void rt.dmain2._d_run_main(int, char**, extern (C) int function(char[][])*).runAll()
    [0x428234]

    ??:? void rt.dmain2._d_r'
  stdout: ''
  timestamp: 1660164228
- exit_code: 1
  program: "import std.typecons;\nimport std.math;\n/*\nComplete the function that\
    \ takes two integers and returns \n    the product of their unit digits.\n   \
    \ Assume the input is always valid.\n    Examples:\n    >>> multiply(148L, 412L)\n\
    \    16L\n    >>> multiply(19L, 28L)\n    72L\n    >>> multiply(2020L, 1851L)\n\
    \    0L\n    >>> multiply(14L, -15L)\n    20L\n    \n*/\nlong multiply(long a,\
    \ long b) \n{\n    return (a % 10) * (b % 10);\n}\nunittest\n{\n    alias candidate\
    \ = multiply;\n\n    assert(candidate(148L, 412L) == 16L);\n    assert(candidate(19L,\
    \ 28L) == 72L);\n    assert(candidate(2020L, 1851L) == 0L);\n    assert(candidate(14L,\
    \ -15L) == 20L);\n    assert(candidate(76L, 67L) == 42L);\n    assert(candidate(17L,\
    \ 27L) == 49L);\n    assert(candidate(0L, 1L) == 0L);\n    assert(candidate(0L,\
    \ 0L) == 0L);\n}\nvoid main(){}"
  status: Exception
  stderr: 'core.exception.AssertError@/tmp/tmp1saqvwe8.d(29): unittest failure

    ----------------

    ??:? _d_unittestp [0x427de5]

    ??:? void tmp1saqvwe8.__unittest_L22_C1() [0x427ac4]

    ??:? void tmp1saqvwe8.__modtest() [0x427b68]

    ??:? int core.runtime.runModuleUnitTests().__foreachbody2(object.ModuleInfo*)
    [0x42bb0b]

    ??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)).__lambda2(immutable(object.ModuleInfo*))
    [0x42a99e]

    ??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))).__foreachbody2(ref
    rt.sections_elf_shared.DSO) [0x42fb31]

    ??:? int rt.sections_elf_shared.DSO.opApply(scope int delegate(ref rt.sections_elf_shared.DSO))
    [0x42ffe0]

    ??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*)))
    [0x42fabd]

    ??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)) [0x42a975]

    ??:? runModuleUnitTests [0x42b8e1]

    ??:? void rt.dmain2._d_run_main(int, char**, extern (C) int function(char[][])*).runAll()
    [0x428234]

    ??:? void rt.dmain2._d_r'
  stdout: ''
  timestamp: 1660164228
- exit_code: 0
  program: "import std.typecons;\nimport std.math;\n/*\nComplete the function that\
    \ takes two integers and returns \n    the product of their unit digits.\n   \
    \ Assume the input is always valid.\n    Examples:\n    >>> multiply(148L, 412L)\n\
    \    16L\n    >>> multiply(19L, 28L)\n    72L\n    >>> multiply(2020L, 1851L)\n\
    \    0L\n    >>> multiply(14L, -15L)\n    20L\n    \n*/\nlong multiply(long a,\
    \ long b) \n{\n    return abs(a % 10) * abs(b % 10);\n}\nunittest\n{\n    alias\
    \ candidate = multiply;\n\n    assert(candidate(148L, 412L) == 16L);\n    assert(candidate(19L,\
    \ 28L) == 72L);\n    assert(candidate(2020L, 1851L) == 0L);\n    assert(candidate(14L,\
    \ -15L) == 20L);\n    assert(candidate(76L, 67L) == 42L);\n    assert(candidate(17L,\
    \ 27L) == 49L);\n    assert(candidate(0L, 1L) == 0L);\n    assert(candidate(0L,\
    \ 0L) == 0L);\n}\nvoid main(){}"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660164228
- exit_code: 0
  program: "import std.typecons;\nimport std.math;\n/*\nComplete the function that\
    \ takes two integers and returns \n    the product of their unit digits.\n   \
    \ Assume the input is always valid.\n    Examples:\n    >>> multiply(148L, 412L)\n\
    \    16L\n    >>> multiply(19L, 28L)\n    72L\n    >>> multiply(2020L, 1851L)\n\
    \    0L\n    >>> multiply(14L, -15L)\n    20L\n    \n*/\nlong multiply(long a,\
    \ long b) \n{\n    return abs(a % 10) * abs(b % 10);\n}\nunittest\n{\n    alias\
    \ candidate = multiply;\n\n    assert(candidate(148L, 412L) == 16L);\n    assert(candidate(19L,\
    \ 28L) == 72L);\n    assert(candidate(2020L, 1851L) == 0L);\n    assert(candidate(14L,\
    \ -15L) == 20L);\n    assert(candidate(76L, 67L) == 42L);\n    assert(candidate(17L,\
    \ 27L) == 49L);\n    assert(candidate(0L, 1L) == 0L);\n    assert(candidate(0L,\
    \ 0L) == 0L);\n}\nvoid main(){}"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660164228
- exit_code: 1
  program: "import std.typecons;\nimport std.math;\n/*\nComplete the function that\
    \ takes two integers and returns \n    the product of their unit digits.\n   \
    \ Assume the input is always valid.\n    Examples:\n    >>> multiply(148L, 412L)\n\
    \    16L\n    >>> multiply(19L, 28L)\n    72L\n    >>> multiply(2020L, 1851L)\n\
    \    0L\n    >>> multiply(14L, -15L)\n    20L\n    \n*/\nlong multiply(long a,\
    \ long b) \n{\n    return (a % 10) * (b % 10);\n}\nunittest\n{\n    alias candidate\
    \ = multiply;\n\n    assert(candidate(148L, 412L) == 16L);\n    assert(candidate(19L,\
    \ 28L) == 72L);\n    assert(candidate(2020L, 1851L) == 0L);\n    assert(candidate(14L,\
    \ -15L) == 20L);\n    assert(candidate(76L, 67L) == 42L);\n    assert(candidate(17L,\
    \ 27L) == 49L);\n    assert(candidate(0L, 1L) == 0L);\n    assert(candidate(0L,\
    \ 0L) == 0L);\n}\nvoid main(){}"
  status: Exception
  stderr: 'core.exception.AssertError@/tmp/tmp1saqvwe8.d(29): unittest failure

    ----------------

    ??:? _d_unittestp [0x427de5]

    ??:? void tmp1saqvwe8.__unittest_L22_C1() [0x427ac4]

    ??:? void tmp1saqvwe8.__modtest() [0x427b68]

    ??:? int core.runtime.runModuleUnitTests().__foreachbody2(object.ModuleInfo*)
    [0x42bb0b]

    ??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)).__lambda2(immutable(object.ModuleInfo*))
    [0x42a99e]

    ??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))).__foreachbody2(ref
    rt.sections_elf_shared.DSO) [0x42fb31]

    ??:? int rt.sections_elf_shared.DSO.opApply(scope int delegate(ref rt.sections_elf_shared.DSO))
    [0x42ffe0]

    ??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*)))
    [0x42fabd]

    ??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)) [0x42a975]

    ??:? runModuleUnitTests [0x42b8e1]

    ??:? void rt.dmain2._d_run_main(int, char**, extern (C) int function(char[][])*).runAll()
    [0x428234]

    ??:? void rt.dmain2._d_r'
  stdout: ''
  timestamp: 1660164228
- exit_code: 1
  program: "import std.typecons;\nimport std.math;\n/*\nComplete the function that\
    \ takes two integers and returns \n    the product of their unit digits.\n   \
    \ Assume the input is always valid.\n    Examples:\n    >>> multiply(148L, 412L)\n\
    \    16L\n    >>> multiply(19L, 28L)\n    72L\n    >>> multiply(2020L, 1851L)\n\
    \    0L\n    >>> multiply(14L, -15L)\n    20L\n    \n*/\nlong multiply(long a,\
    \ long b) \n{\n    return (a % 10) * (b % 10);\n}\nunittest\n{\n    alias candidate\
    \ = multiply;\n\n    assert(candidate(148L, 412L) == 16L);\n    assert(candidate(19L,\
    \ 28L) == 72L);\n    assert(candidate(2020L, 1851L) == 0L);\n    assert(candidate(14L,\
    \ -15L) == 20L);\n    assert(candidate(76L, 67L) == 42L);\n    assert(candidate(17L,\
    \ 27L) == 49L);\n    assert(candidate(0L, 1L) == 0L);\n    assert(candidate(0L,\
    \ 0L) == 0L);\n}\nvoid main(){}"
  status: Exception
  stderr: 'core.exception.AssertError@/tmp/tmp1saqvwe8.d(29): unittest failure

    ----------------

    ??:? _d_unittestp [0x427de5]

    ??:? void tmp1saqvwe8.__unittest_L22_C1() [0x427ac4]

    ??:? void tmp1saqvwe8.__modtest() [0x427b68]

    ??:? int core.runtime.runModuleUnitTests().__foreachbody2(object.ModuleInfo*)
    [0x42bb0b]

    ??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)).__lambda2(immutable(object.ModuleInfo*))
    [0x42a99e]

    ??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))).__foreachbody2(ref
    rt.sections_elf_shared.DSO) [0x42fb31]

    ??:? int rt.sections_elf_shared.DSO.opApply(scope int delegate(ref rt.sections_elf_shared.DSO))
    [0x42ffe0]

    ??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*)))
    [0x42fabd]

    ??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)) [0x42a975]

    ??:? runModuleUnitTests [0x42b8e1]

    ??:? void rt.dmain2._d_run_main(int, char**, extern (C) int function(char[][])*).runAll()
    [0x428234]

    ??:? void rt.dmain2._d_r'
  stdout: ''
  timestamp: 1660164228
- exit_code: 1
  program: "import std.typecons;\nimport std.math;\n/*\nComplete the function that\
    \ takes two integers and returns \n    the product of their unit digits.\n   \
    \ Assume the input is always valid.\n    Examples:\n    >>> multiply(148L, 412L)\n\
    \    16L\n    >>> multiply(19L, 28L)\n    72L\n    >>> multiply(2020L, 1851L)\n\
    \    0L\n    >>> multiply(14L, -15L)\n    20L\n    \n*/\nlong multiply(long a,\
    \ long b) \n{\n    return (a % 10) * (b % 10);\n}\nunittest\n{\n    alias candidate\
    \ = multiply;\n\n    assert(candidate(148L, 412L) == 16L);\n    assert(candidate(19L,\
    \ 28L) == 72L);\n    assert(candidate(2020L, 1851L) == 0L);\n    assert(candidate(14L,\
    \ -15L) == 20L);\n    assert(candidate(76L, 67L) == 42L);\n    assert(candidate(17L,\
    \ 27L) == 49L);\n    assert(candidate(0L, 1L) == 0L);\n    assert(candidate(0L,\
    \ 0L) == 0L);\n}\nvoid main(){}"
  status: Exception
  stderr: 'core.exception.AssertError@/tmp/tmp1saqvwe8.d(29): unittest failure

    ----------------

    ??:? _d_unittestp [0x427de5]

    ??:? void tmp1saqvwe8.__unittest_L22_C1() [0x427ac4]

    ??:? void tmp1saqvwe8.__modtest() [0x427b68]

    ??:? int core.runtime.runModuleUnitTests().__foreachbody2(object.ModuleInfo*)
    [0x42bb0b]

    ??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)).__lambda2(immutable(object.ModuleInfo*))
    [0x42a99e]

    ??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))).__foreachbody2(ref
    rt.sections_elf_shared.DSO) [0x42fb31]

    ??:? int rt.sections_elf_shared.DSO.opApply(scope int delegate(ref rt.sections_elf_shared.DSO))
    [0x42ffe0]

    ??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*)))
    [0x42fabd]

    ??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)) [0x42a975]

    ??:? runModuleUnitTests [0x42b8e1]

    ??:? void rt.dmain2._d_run_main(int, char**, extern (C) int function(char[][])*).runAll()
    [0x428234]

    ??:? void rt.dmain2._d_r'
  stdout: ''
  timestamp: 1660164228
- exit_code: 1
  program: "import std.typecons;\nimport std.math;\n/*\nComplete the function that\
    \ takes two integers and returns \n    the product of their unit digits.\n   \
    \ Assume the input is always valid.\n    Examples:\n    >>> multiply(148L, 412L)\n\
    \    16L\n    >>> multiply(19L, 28L)\n    72L\n    >>> multiply(2020L, 1851L)\n\
    \    0L\n    >>> multiply(14L, -15L)\n    20L\n    \n*/\nlong multiply(long a,\
    \ long b) \n{\n    return (a % 10) * (b % 10);\n}\nunittest\n{\n    alias candidate\
    \ = multiply;\n\n    assert(candidate(148L, 412L) == 16L);\n    assert(candidate(19L,\
    \ 28L) == 72L);\n    assert(candidate(2020L, 1851L) == 0L);\n    assert(candidate(14L,\
    \ -15L) == 20L);\n    assert(candidate(76L, 67L) == 42L);\n    assert(candidate(17L,\
    \ 27L) == 49L);\n    assert(candidate(0L, 1L) == 0L);\n    assert(candidate(0L,\
    \ 0L) == 0L);\n}\nvoid main(){}"
  status: Exception
  stderr: 'core.exception.AssertError@/tmp/tmp1saqvwe8.d(29): unittest failure

    ----------------

    ??:? _d_unittestp [0x427de5]

    ??:? void tmp1saqvwe8.__unittest_L22_C1() [0x427ac4]

    ??:? void tmp1saqvwe8.__modtest() [0x427b68]

    ??:? int core.runtime.runModuleUnitTests().__foreachbody2(object.ModuleInfo*)
    [0x42bb0b]

    ??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)).__lambda2(immutable(object.ModuleInfo*))
    [0x42a99e]

    ??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))).__foreachbody2(ref
    rt.sections_elf_shared.DSO) [0x42fb31]

    ??:? int rt.sections_elf_shared.DSO.opApply(scope int delegate(ref rt.sections_elf_shared.DSO))
    [0x42ffe0]

    ??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*)))
    [0x42fabd]

    ??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)) [0x42a975]

    ??:? runModuleUnitTests [0x42b8e1]

    ??:? void rt.dmain2._d_run_main(int, char**, extern (C) int function(char[][])*).runAll()
    [0x428234]

    ??:? void rt.dmain2._d_r'
  stdout: ''
  timestamp: 1660164228
- exit_code: 1
  program: "import std.typecons;\nimport std.math;\n/*\nComplete the function that\
    \ takes two integers and returns \n    the product of their unit digits.\n   \
    \ Assume the input is always valid.\n    Examples:\n    >>> multiply(148L, 412L)\n\
    \    16L\n    >>> multiply(19L, 28L)\n    72L\n    >>> multiply(2020L, 1851L)\n\
    \    0L\n    >>> multiply(14L, -15L)\n    20L\n    \n*/\nlong multiply(long a,\
    \ long b) \n{\n    return (a % 10) * (b % 10);\n}\nunittest\n{\n    alias candidate\
    \ = multiply;\n\n    assert(candidate(148L, 412L) == 16L);\n    assert(candidate(19L,\
    \ 28L) == 72L);\n    assert(candidate(2020L, 1851L) == 0L);\n    assert(candidate(14L,\
    \ -15L) == 20L);\n    assert(candidate(76L, 67L) == 42L);\n    assert(candidate(17L,\
    \ 27L) == 49L);\n    assert(candidate(0L, 1L) == 0L);\n    assert(candidate(0L,\
    \ 0L) == 0L);\n}\nvoid main(){}"
  status: Exception
  stderr: 'core.exception.AssertError@/tmp/tmp1saqvwe8.d(29): unittest failure

    ----------------

    ??:? _d_unittestp [0x427de5]

    ??:? void tmp1saqvwe8.__unittest_L22_C1() [0x427ac4]

    ??:? void tmp1saqvwe8.__modtest() [0x427b68]

    ??:? int core.runtime.runModuleUnitTests().__foreachbody2(object.ModuleInfo*)
    [0x42bb0b]

    ??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)).__lambda2(immutable(object.ModuleInfo*))
    [0x42a99e]

    ??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))).__foreachbody2(ref
    rt.sections_elf_shared.DSO) [0x42fb31]

    ??:? int rt.sections_elf_shared.DSO.opApply(scope int delegate(ref rt.sections_elf_shared.DSO))
    [0x42ffe0]

    ??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*)))
    [0x42fabd]

    ??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)) [0x42a975]

    ??:? runModuleUnitTests [0x42b8e1]

    ??:? void rt.dmain2._d_run_main(int, char**, extern (C) int function(char[][])*).runAll()
    [0x428234]

    ??:? void rt.dmain2._d_r'
  stdout: ''
  timestamp: 1660164228
- exit_code: 1
  program: "import std.typecons;\nimport std.math;\n/*\nComplete the function that\
    \ takes two integers and returns \n    the product of their unit digits.\n   \
    \ Assume the input is always valid.\n    Examples:\n    >>> multiply(148L, 412L)\n\
    \    16L\n    >>> multiply(19L, 28L)\n    72L\n    >>> multiply(2020L, 1851L)\n\
    \    0L\n    >>> multiply(14L, -15L)\n    20L\n    \n*/\nlong multiply(long a,\
    \ long b) \n{\n    return (a % 10) * (b % 10);\n}\nunittest\n{\n    alias candidate\
    \ = multiply;\n\n    assert(candidate(148L, 412L) == 16L);\n    assert(candidate(19L,\
    \ 28L) == 72L);\n    assert(candidate(2020L, 1851L) == 0L);\n    assert(candidate(14L,\
    \ -15L) == 20L);\n    assert(candidate(76L, 67L) == 42L);\n    assert(candidate(17L,\
    \ 27L) == 49L);\n    assert(candidate(0L, 1L) == 0L);\n    assert(candidate(0L,\
    \ 0L) == 0L);\n}\nvoid main(){}"
  status: Exception
  stderr: 'core.exception.AssertError@/tmp/tmp1saqvwe8.d(29): unittest failure

    ----------------

    ??:? _d_unittestp [0x427de5]

    ??:? void tmp1saqvwe8.__unittest_L22_C1() [0x427ac4]

    ??:? void tmp1saqvwe8.__modtest() [0x427b68]

    ??:? int core.runtime.runModuleUnitTests().__foreachbody2(object.ModuleInfo*)
    [0x42bb0b]

    ??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)).__lambda2(immutable(object.ModuleInfo*))
    [0x42a99e]

    ??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))).__foreachbody2(ref
    rt.sections_elf_shared.DSO) [0x42fb31]

    ??:? int rt.sections_elf_shared.DSO.opApply(scope int delegate(ref rt.sections_elf_shared.DSO))
    [0x42ffe0]

    ??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*)))
    [0x42fabd]

    ??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)) [0x42a975]

    ??:? runModuleUnitTests [0x42b8e1]

    ??:? void rt.dmain2._d_run_main(int, char**, extern (C) int function(char[][])*).runAll()
    [0x428234]

    ??:? void rt.dmain2._d_r'
  stdout: ''
  timestamp: 1660164228
- exit_code: 1
  program: "import std.typecons;\nimport std.math;\n/*\nComplete the function that\
    \ takes two integers and returns \n    the product of their unit digits.\n   \
    \ Assume the input is always valid.\n    Examples:\n    >>> multiply(148L, 412L)\n\
    \    16L\n    >>> multiply(19L, 28L)\n    72L\n    >>> multiply(2020L, 1851L)\n\
    \    0L\n    >>> multiply(14L, -15L)\n    20L\n    \n*/\nlong multiply(long a,\
    \ long b) \n{\n    return (a % 10) * (b % 10);\n}\nunittest\n{\n    alias candidate\
    \ = multiply;\n\n    assert(candidate(148L, 412L) == 16L);\n    assert(candidate(19L,\
    \ 28L) == 72L);\n    assert(candidate(2020L, 1851L) == 0L);\n    assert(candidate(14L,\
    \ -15L) == 20L);\n    assert(candidate(76L, 67L) == 42L);\n    assert(candidate(17L,\
    \ 27L) == 49L);\n    assert(candidate(0L, 1L) == 0L);\n    assert(candidate(0L,\
    \ 0L) == 0L);\n}\nvoid main(){}"
  status: Exception
  stderr: 'core.exception.AssertError@/tmp/tmp1saqvwe8.d(29): unittest failure

    ----------------

    ??:? _d_unittestp [0x427de5]

    ??:? void tmp1saqvwe8.__unittest_L22_C1() [0x427ac4]

    ??:? void tmp1saqvwe8.__modtest() [0x427b68]

    ??:? int core.runtime.runModuleUnitTests().__foreachbody2(object.ModuleInfo*)
    [0x42bb0b]

    ??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)).__lambda2(immutable(object.ModuleInfo*))
    [0x42a99e]

    ??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))).__foreachbody2(ref
    rt.sections_elf_shared.DSO) [0x42fb31]

    ??:? int rt.sections_elf_shared.DSO.opApply(scope int delegate(ref rt.sections_elf_shared.DSO))
    [0x42ffe0]

    ??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*)))
    [0x42fabd]

    ??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)) [0x42a975]

    ??:? runModuleUnitTests [0x42b8e1]

    ??:? void rt.dmain2._d_run_main(int, char**, extern (C) int function(char[][])*).runAll()
    [0x428234]

    ??:? void rt.dmain2._d_r'
  stdout: ''
  timestamp: 1660164228
- exit_code: 1
  program: "import std.typecons;\nimport std.math;\n/*\nComplete the function that\
    \ takes two integers and returns \n    the product of their unit digits.\n   \
    \ Assume the input is always valid.\n    Examples:\n    >>> multiply(148L, 412L)\n\
    \    16L\n    >>> multiply(19L, 28L)\n    72L\n    >>> multiply(2020L, 1851L)\n\
    \    0L\n    >>> multiply(14L, -15L)\n    20L\n    \n*/\nlong multiply(long a,\
    \ long b) \n{\n    return (a % 10) * (b % 10);\n}\nunittest\n{\n    alias candidate\
    \ = multiply;\n\n    assert(candidate(148L, 412L) == 16L);\n    assert(candidate(19L,\
    \ 28L) == 72L);\n    assert(candidate(2020L, 1851L) == 0L);\n    assert(candidate(14L,\
    \ -15L) == 20L);\n    assert(candidate(76L, 67L) == 42L);\n    assert(candidate(17L,\
    \ 27L) == 49L);\n    assert(candidate(0L, 1L) == 0L);\n    assert(candidate(0L,\
    \ 0L) == 0L);\n}\nvoid main(){}"
  status: Exception
  stderr: 'core.exception.AssertError@/tmp/tmp1saqvwe8.d(29): unittest failure

    ----------------

    ??:? _d_unittestp [0x427de5]

    ??:? void tmp1saqvwe8.__unittest_L22_C1() [0x427ac4]

    ??:? void tmp1saqvwe8.__modtest() [0x427b68]

    ??:? int core.runtime.runModuleUnitTests().__foreachbody2(object.ModuleInfo*)
    [0x42bb0b]

    ??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)).__lambda2(immutable(object.ModuleInfo*))
    [0x42a99e]

    ??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))).__foreachbody2(ref
    rt.sections_elf_shared.DSO) [0x42fb31]

    ??:? int rt.sections_elf_shared.DSO.opApply(scope int delegate(ref rt.sections_elf_shared.DSO))
    [0x42ffe0]

    ??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*)))
    [0x42fabd]

    ??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)) [0x42a975]

    ??:? runModuleUnitTests [0x42b8e1]

    ??:? void rt.dmain2._d_run_main(int, char**, extern (C) int function(char[][])*).runAll()
    [0x428234]

    ??:? void rt.dmain2._d_r'
  stdout: ''
  timestamp: 1660164228
- exit_code: 0
  program: "import std.typecons;\nimport std.math;\n/*\nComplete the function that\
    \ takes two integers and returns \n    the product of their unit digits.\n   \
    \ Assume the input is always valid.\n    Examples:\n    >>> multiply(148L, 412L)\n\
    \    16L\n    >>> multiply(19L, 28L)\n    72L\n    >>> multiply(2020L, 1851L)\n\
    \    0L\n    >>> multiply(14L, -15L)\n    20L\n    \n*/\nlong multiply(long a,\
    \ long b) \n{\n    return abs(a % 10) * abs(b % 10);\n}\nunittest\n{\n    alias\
    \ candidate = multiply;\n\n    assert(candidate(148L, 412L) == 16L);\n    assert(candidate(19L,\
    \ 28L) == 72L);\n    assert(candidate(2020L, 1851L) == 0L);\n    assert(candidate(14L,\
    \ -15L) == 20L);\n    assert(candidate(76L, 67L) == 42L);\n    assert(candidate(17L,\
    \ 27L) == 49L);\n    assert(candidate(0L, 1L) == 0L);\n    assert(candidate(0L,\
    \ 0L) == 0L);\n}\nvoid main(){}"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660164228
- exit_code: 1
  program: "import std.typecons;\nimport std.math;\n/*\nComplete the function that\
    \ takes two integers and returns \n    the product of their unit digits.\n   \
    \ Assume the input is always valid.\n    Examples:\n    >>> multiply(148L, 412L)\n\
    \    16L\n    >>> multiply(19L, 28L)\n    72L\n    >>> multiply(2020L, 1851L)\n\
    \    0L\n    >>> multiply(14L, -15L)\n    20L\n    \n*/\nlong multiply(long a,\
    \ long b) \n{\n    return (a % 10) * (b % 10);\n}\nunittest\n{\n    alias candidate\
    \ = multiply;\n\n    assert(candidate(148L, 412L) == 16L);\n    assert(candidate(19L,\
    \ 28L) == 72L);\n    assert(candidate(2020L, 1851L) == 0L);\n    assert(candidate(14L,\
    \ -15L) == 20L);\n    assert(candidate(76L, 67L) == 42L);\n    assert(candidate(17L,\
    \ 27L) == 49L);\n    assert(candidate(0L, 1L) == 0L);\n    assert(candidate(0L,\
    \ 0L) == 0L);\n}\nvoid main(){}"
  status: Exception
  stderr: 'core.exception.AssertError@/tmp/tmp1saqvwe8.d(29): unittest failure

    ----------------

    ??:? _d_unittestp [0x427de5]

    ??:? void tmp1saqvwe8.__unittest_L22_C1() [0x427ac4]

    ??:? void tmp1saqvwe8.__modtest() [0x427b68]

    ??:? int core.runtime.runModuleUnitTests().__foreachbody2(object.ModuleInfo*)
    [0x42bb0b]

    ??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)).__lambda2(immutable(object.ModuleInfo*))
    [0x42a99e]

    ??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))).__foreachbody2(ref
    rt.sections_elf_shared.DSO) [0x42fb31]

    ??:? int rt.sections_elf_shared.DSO.opApply(scope int delegate(ref rt.sections_elf_shared.DSO))
    [0x42ffe0]

    ??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*)))
    [0x42fabd]

    ??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)) [0x42a975]

    ??:? runModuleUnitTests [0x42b8e1]

    ??:? void rt.dmain2._d_run_main(int, char**, extern (C) int function(char[][])*).runAll()
    [0x428234]

    ??:? void rt.dmain2._d_r'
  stdout: ''
  timestamp: 1660164228
- exit_code: 0
  program: "import std.typecons;\nimport std.math;\n/*\nComplete the function that\
    \ takes two integers and returns \n    the product of their unit digits.\n   \
    \ Assume the input is always valid.\n    Examples:\n    >>> multiply(148L, 412L)\n\
    \    16L\n    >>> multiply(19L, 28L)\n    72L\n    >>> multiply(2020L, 1851L)\n\
    \    0L\n    >>> multiply(14L, -15L)\n    20L\n    \n*/\nlong multiply(long a,\
    \ long b) \n{\n    return abs(a % 10) * abs(b % 10);\n}\nunittest\n{\n    alias\
    \ candidate = multiply;\n\n    assert(candidate(148L, 412L) == 16L);\n    assert(candidate(19L,\
    \ 28L) == 72L);\n    assert(candidate(2020L, 1851L) == 0L);\n    assert(candidate(14L,\
    \ -15L) == 20L);\n    assert(candidate(76L, 67L) == 42L);\n    assert(candidate(17L,\
    \ 27L) == 49L);\n    assert(candidate(0L, 1L) == 0L);\n    assert(candidate(0L,\
    \ 0L) == 0L);\n}\nvoid main(){}"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660164228
- exit_code: 1
  program: "import std.typecons;\nimport std.math;\n/*\nComplete the function that\
    \ takes two integers and returns \n    the product of their unit digits.\n   \
    \ Assume the input is always valid.\n    Examples:\n    >>> multiply(148L, 412L)\n\
    \    16L\n    >>> multiply(19L, 28L)\n    72L\n    >>> multiply(2020L, 1851L)\n\
    \    0L\n    >>> multiply(14L, -15L)\n    20L\n    \n*/\nlong multiply(long a,\
    \ long b) \n{\n    return (a % 10) * (b % 10);\n}\nunittest\n{\n    alias candidate\
    \ = multiply;\n\n    assert(candidate(148L, 412L) == 16L);\n    assert(candidate(19L,\
    \ 28L) == 72L);\n    assert(candidate(2020L, 1851L) == 0L);\n    assert(candidate(14L,\
    \ -15L) == 20L);\n    assert(candidate(76L, 67L) == 42L);\n    assert(candidate(17L,\
    \ 27L) == 49L);\n    assert(candidate(0L, 1L) == 0L);\n    assert(candidate(0L,\
    \ 0L) == 0L);\n}\nvoid main(){}"
  status: Exception
  stderr: 'core.exception.AssertError@/tmp/tmp1saqvwe8.d(29): unittest failure

    ----------------

    ??:? _d_unittestp [0x427de5]

    ??:? void tmp1saqvwe8.__unittest_L22_C1() [0x427ac4]

    ??:? void tmp1saqvwe8.__modtest() [0x427b68]

    ??:? int core.runtime.runModuleUnitTests().__foreachbody2(object.ModuleInfo*)
    [0x42bb0b]

    ??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)).__lambda2(immutable(object.ModuleInfo*))
    [0x42a99e]

    ??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))).__foreachbody2(ref
    rt.sections_elf_shared.DSO) [0x42fb31]

    ??:? int rt.sections_elf_shared.DSO.opApply(scope int delegate(ref rt.sections_elf_shared.DSO))
    [0x42ffe0]

    ??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*)))
    [0x42fabd]

    ??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)) [0x42a975]

    ??:? runModuleUnitTests [0x42b8e1]

    ??:? void rt.dmain2._d_run_main(int, char**, extern (C) int function(char[][])*).runAll()
    [0x428234]

    ??:? void rt.dmain2._d_r'
  stdout: ''
  timestamp: 1660164228
- exit_code: 1
  program: "import std.typecons;\nimport std.math;\n/*\nComplete the function that\
    \ takes two integers and returns \n    the product of their unit digits.\n   \
    \ Assume the input is always valid.\n    Examples:\n    >>> multiply(148L, 412L)\n\
    \    16L\n    >>> multiply(19L, 28L)\n    72L\n    >>> multiply(2020L, 1851L)\n\
    \    0L\n    >>> multiply(14L, -15L)\n    20L\n    \n*/\nlong multiply(long a,\
    \ long b) \n{\n    return (a % 10) * (b % 10);\n}\nunittest\n{\n    alias candidate\
    \ = multiply;\n\n    assert(candidate(148L, 412L) == 16L);\n    assert(candidate(19L,\
    \ 28L) == 72L);\n    assert(candidate(2020L, 1851L) == 0L);\n    assert(candidate(14L,\
    \ -15L) == 20L);\n    assert(candidate(76L, 67L) == 42L);\n    assert(candidate(17L,\
    \ 27L) == 49L);\n    assert(candidate(0L, 1L) == 0L);\n    assert(candidate(0L,\
    \ 0L) == 0L);\n}\nvoid main(){}"
  status: Exception
  stderr: 'core.exception.AssertError@/tmp/tmp1saqvwe8.d(29): unittest failure

    ----------------

    ??:? _d_unittestp [0x427de5]

    ??:? void tmp1saqvwe8.__unittest_L22_C1() [0x427ac4]

    ??:? void tmp1saqvwe8.__modtest() [0x427b68]

    ??:? int core.runtime.runModuleUnitTests().__foreachbody2(object.ModuleInfo*)
    [0x42bb0b]

    ??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)).__lambda2(immutable(object.ModuleInfo*))
    [0x42a99e]

    ??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))).__foreachbody2(ref
    rt.sections_elf_shared.DSO) [0x42fb31]

    ??:? int rt.sections_elf_shared.DSO.opApply(scope int delegate(ref rt.sections_elf_shared.DSO))
    [0x42ffe0]

    ??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*)))
    [0x42fabd]

    ??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)) [0x42a975]

    ??:? runModuleUnitTests [0x42b8e1]

    ??:? void rt.dmain2._d_run_main(int, char**, extern (C) int function(char[][])*).runAll()
    [0x428234]

    ??:? void rt.dmain2._d_r'
  stdout: ''
  timestamp: 1660164228
- exit_code: 1
  program: "import std.typecons;\nimport std.math;\n/*\nComplete the function that\
    \ takes two integers and returns \n    the product of their unit digits.\n   \
    \ Assume the input is always valid.\n    Examples:\n    >>> multiply(148L, 412L)\n\
    \    16L\n    >>> multiply(19L, 28L)\n    72L\n    >>> multiply(2020L, 1851L)\n\
    \    0L\n    >>> multiply(14L, -15L)\n    20L\n    \n*/\nlong multiply(long a,\
    \ long b) \n{\n    return (a % 10) * (b % 10);\n}\nunittest\n{\n    alias candidate\
    \ = multiply;\n\n    assert(candidate(148L, 412L) == 16L);\n    assert(candidate(19L,\
    \ 28L) == 72L);\n    assert(candidate(2020L, 1851L) == 0L);\n    assert(candidate(14L,\
    \ -15L) == 20L);\n    assert(candidate(76L, 67L) == 42L);\n    assert(candidate(17L,\
    \ 27L) == 49L);\n    assert(candidate(0L, 1L) == 0L);\n    assert(candidate(0L,\
    \ 0L) == 0L);\n}\nvoid main(){}"
  status: Exception
  stderr: 'core.exception.AssertError@/tmp/tmp1saqvwe8.d(29): unittest failure

    ----------------

    ??:? _d_unittestp [0x427de5]

    ??:? void tmp1saqvwe8.__unittest_L22_C1() [0x427ac4]

    ??:? void tmp1saqvwe8.__modtest() [0x427b68]

    ??:? int core.runtime.runModuleUnitTests().__foreachbody2(object.ModuleInfo*)
    [0x42bb0b]

    ??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)).__lambda2(immutable(object.ModuleInfo*))
    [0x42a99e]

    ??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))).__foreachbody2(ref
    rt.sections_elf_shared.DSO) [0x42fb31]

    ??:? int rt.sections_elf_shared.DSO.opApply(scope int delegate(ref rt.sections_elf_shared.DSO))
    [0x42ffe0]

    ??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*)))
    [0x42fabd]

    ??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)) [0x42a975]

    ??:? runModuleUnitTests [0x42b8e1]

    ??:? void rt.dmain2._d_run_main(int, char**, extern (C) int function(char[][])*).runAll()
    [0x428234]

    ??:? void rt.dmain2._d_r'
  stdout: ''
  timestamp: 1660164228
- exit_code: 1
  program: "import std.typecons;\nimport std.math;\n/*\nComplete the function that\
    \ takes two integers and returns \n    the product of their unit digits.\n   \
    \ Assume the input is always valid.\n    Examples:\n    >>> multiply(148L, 412L)\n\
    \    16L\n    >>> multiply(19L, 28L)\n    72L\n    >>> multiply(2020L, 1851L)\n\
    \    0L\n    >>> multiply(14L, -15L)\n    20L\n    \n*/\nlong multiply(long a,\
    \ long b) \n{\n    return (a % 10) * (b % 10);\n}\nunittest\n{\n    alias candidate\
    \ = multiply;\n\n    assert(candidate(148L, 412L) == 16L);\n    assert(candidate(19L,\
    \ 28L) == 72L);\n    assert(candidate(2020L, 1851L) == 0L);\n    assert(candidate(14L,\
    \ -15L) == 20L);\n    assert(candidate(76L, 67L) == 42L);\n    assert(candidate(17L,\
    \ 27L) == 49L);\n    assert(candidate(0L, 1L) == 0L);\n    assert(candidate(0L,\
    \ 0L) == 0L);\n}\nvoid main(){}"
  status: Exception
  stderr: 'core.exception.AssertError@/tmp/tmp1saqvwe8.d(29): unittest failure

    ----------------

    ??:? _d_unittestp [0x427de5]

    ??:? void tmp1saqvwe8.__unittest_L22_C1() [0x427ac4]

    ??:? void tmp1saqvwe8.__modtest() [0x427b68]

    ??:? int core.runtime.runModuleUnitTests().__foreachbody2(object.ModuleInfo*)
    [0x42bb0b]

    ??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)).__lambda2(immutable(object.ModuleInfo*))
    [0x42a99e]

    ??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))).__foreachbody2(ref
    rt.sections_elf_shared.DSO) [0x42fb31]

    ??:? int rt.sections_elf_shared.DSO.opApply(scope int delegate(ref rt.sections_elf_shared.DSO))
    [0x42ffe0]

    ??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*)))
    [0x42fabd]

    ??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)) [0x42a975]

    ??:? runModuleUnitTests [0x42b8e1]

    ??:? void rt.dmain2._d_run_main(int, char**, extern (C) int function(char[][])*).runAll()
    [0x428234]

    ??:? void rt.dmain2._d_r'
  stdout: ''
  timestamp: 1660164228
- exit_code: 1
  program: "import std.typecons;\nimport std.math;\n/*\nComplete the function that\
    \ takes two integers and returns \n    the product of their unit digits.\n   \
    \ Assume the input is always valid.\n    Examples:\n    >>> multiply(148L, 412L)\n\
    \    16L\n    >>> multiply(19L, 28L)\n    72L\n    >>> multiply(2020L, 1851L)\n\
    \    0L\n    >>> multiply(14L, -15L)\n    20L\n    \n*/\nlong multiply(long a,\
    \ long b) \n{\n    return (a % 10) * (b % 10);\n}\nunittest\n{\n    alias candidate\
    \ = multiply;\n\n    assert(candidate(148L, 412L) == 16L);\n    assert(candidate(19L,\
    \ 28L) == 72L);\n    assert(candidate(2020L, 1851L) == 0L);\n    assert(candidate(14L,\
    \ -15L) == 20L);\n    assert(candidate(76L, 67L) == 42L);\n    assert(candidate(17L,\
    \ 27L) == 49L);\n    assert(candidate(0L, 1L) == 0L);\n    assert(candidate(0L,\
    \ 0L) == 0L);\n}\nvoid main(){}"
  status: Exception
  stderr: 'core.exception.AssertError@/tmp/tmp1saqvwe8.d(29): unittest failure

    ----------------

    ??:? _d_unittestp [0x427de5]

    ??:? void tmp1saqvwe8.__unittest_L22_C1() [0x427ac4]

    ??:? void tmp1saqvwe8.__modtest() [0x427b68]

    ??:? int core.runtime.runModuleUnitTests().__foreachbody2(object.ModuleInfo*)
    [0x42bb0b]

    ??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)).__lambda2(immutable(object.ModuleInfo*))
    [0x42a99e]

    ??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))).__foreachbody2(ref
    rt.sections_elf_shared.DSO) [0x42fb31]

    ??:? int rt.sections_elf_shared.DSO.opApply(scope int delegate(ref rt.sections_elf_shared.DSO))
    [0x42ffe0]

    ??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*)))
    [0x42fabd]

    ??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)) [0x42a975]

    ??:? runModuleUnitTests [0x42b8e1]

    ??:? void rt.dmain2._d_run_main(int, char**, extern (C) int function(char[][])*).runAll()
    [0x428234]

    ??:? void rt.dmain2._d_r'
  stdout: ''
  timestamp: 1660164228
- exit_code: 1
  program: "import std.typecons;\nimport std.math;\n/*\nComplete the function that\
    \ takes two integers and returns \n    the product of their unit digits.\n   \
    \ Assume the input is always valid.\n    Examples:\n    >>> multiply(148L, 412L)\n\
    \    16L\n    >>> multiply(19L, 28L)\n    72L\n    >>> multiply(2020L, 1851L)\n\
    \    0L\n    >>> multiply(14L, -15L)\n    20L\n    \n*/\nlong multiply(long a,\
    \ long b) \n{\n    return (a % 10) * (b % 10);\n}\nunittest\n{\n    alias candidate\
    \ = multiply;\n\n    assert(candidate(148L, 412L) == 16L);\n    assert(candidate(19L,\
    \ 28L) == 72L);\n    assert(candidate(2020L, 1851L) == 0L);\n    assert(candidate(14L,\
    \ -15L) == 20L);\n    assert(candidate(76L, 67L) == 42L);\n    assert(candidate(17L,\
    \ 27L) == 49L);\n    assert(candidate(0L, 1L) == 0L);\n    assert(candidate(0L,\
    \ 0L) == 0L);\n}\nvoid main(){}"
  status: Exception
  stderr: 'core.exception.AssertError@/tmp/tmp1saqvwe8.d(29): unittest failure

    ----------------

    ??:? _d_unittestp [0x427de5]

    ??:? void tmp1saqvwe8.__unittest_L22_C1() [0x427ac4]

    ??:? void tmp1saqvwe8.__modtest() [0x427b68]

    ??:? int core.runtime.runModuleUnitTests().__foreachbody2(object.ModuleInfo*)
    [0x42bb0b]

    ??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)).__lambda2(immutable(object.ModuleInfo*))
    [0x42a99e]

    ??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))).__foreachbody2(ref
    rt.sections_elf_shared.DSO) [0x42fb31]

    ??:? int rt.sections_elf_shared.DSO.opApply(scope int delegate(ref rt.sections_elf_shared.DSO))
    [0x42ffe0]

    ??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*)))
    [0x42fabd]

    ??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)) [0x42a975]

    ??:? runModuleUnitTests [0x42b8e1]

    ??:? void rt.dmain2._d_run_main(int, char**, extern (C) int function(char[][])*).runAll()
    [0x428234]

    ??:? void rt.dmain2._d_r'
  stdout: ''
  timestamp: 1660164228
- exit_code: 1
  program: "import std.typecons;\nimport std.math;\n/*\nComplete the function that\
    \ takes two integers and returns \n    the product of their unit digits.\n   \
    \ Assume the input is always valid.\n    Examples:\n    >>> multiply(148L, 412L)\n\
    \    16L\n    >>> multiply(19L, 28L)\n    72L\n    >>> multiply(2020L, 1851L)\n\
    \    0L\n    >>> multiply(14L, -15L)\n    20L\n    \n*/\nlong multiply(long a,\
    \ long b) \n{\n    return (a % 10) * (b % 10);\n}\nunittest\n{\n    alias candidate\
    \ = multiply;\n\n    assert(candidate(148L, 412L) == 16L);\n    assert(candidate(19L,\
    \ 28L) == 72L);\n    assert(candidate(2020L, 1851L) == 0L);\n    assert(candidate(14L,\
    \ -15L) == 20L);\n    assert(candidate(76L, 67L) == 42L);\n    assert(candidate(17L,\
    \ 27L) == 49L);\n    assert(candidate(0L, 1L) == 0L);\n    assert(candidate(0L,\
    \ 0L) == 0L);\n}\nvoid main(){}"
  status: Exception
  stderr: 'core.exception.AssertError@/tmp/tmp1saqvwe8.d(29): unittest failure

    ----------------

    ??:? _d_unittestp [0x427de5]

    ??:? void tmp1saqvwe8.__unittest_L22_C1() [0x427ac4]

    ??:? void tmp1saqvwe8.__modtest() [0x427b68]

    ??:? int core.runtime.runModuleUnitTests().__foreachbody2(object.ModuleInfo*)
    [0x42bb0b]

    ??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)).__lambda2(immutable(object.ModuleInfo*))
    [0x42a99e]

    ??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))).__foreachbody2(ref
    rt.sections_elf_shared.DSO) [0x42fb31]

    ??:? int rt.sections_elf_shared.DSO.opApply(scope int delegate(ref rt.sections_elf_shared.DSO))
    [0x42ffe0]

    ??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*)))
    [0x42fabd]

    ??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)) [0x42a975]

    ??:? runModuleUnitTests [0x42b8e1]

    ??:? void rt.dmain2._d_run_main(int, char**, extern (C) int function(char[][])*).runAll()
    [0x428234]

    ??:? void rt.dmain2._d_r'
  stdout: ''
  timestamp: 1660164228
- exit_code: 1
  program: "import std.typecons;\nimport std.math;\n/*\nComplete the function that\
    \ takes two integers and returns \n    the product of their unit digits.\n   \
    \ Assume the input is always valid.\n    Examples:\n    >>> multiply(148L, 412L)\n\
    \    16L\n    >>> multiply(19L, 28L)\n    72L\n    >>> multiply(2020L, 1851L)\n\
    \    0L\n    >>> multiply(14L, -15L)\n    20L\n    \n*/\nlong multiply(long a,\
    \ long b) \n{\n    long a1 = a % 10;\n    long b1 = b % 10;\n    return a1 * b1;\n\
    }\nunittest\n{\n    alias candidate = multiply;\n\n    assert(candidate(148L,\
    \ 412L) == 16L);\n    assert(candidate(19L, 28L) == 72L);\n    assert(candidate(2020L,\
    \ 1851L) == 0L);\n    assert(candidate(14L, -15L) == 20L);\n    assert(candidate(76L,\
    \ 67L) == 42L);\n    assert(candidate(17L, 27L) == 49L);\n    assert(candidate(0L,\
    \ 1L) == 0L);\n    assert(candidate(0L, 0L) == 0L);\n}\nvoid main(){}"
  status: Exception
  stderr: 'core.exception.AssertError@/tmp/tmpnsrb48w7.d(31): unittest failure

    ----------------

    ??:? _d_unittestp [0x427ddd]

    ??:? void tmpnsrb48w7.__unittest_L24_C1() [0x427ab8]

    ??:? void tmpnsrb48w7.__modtest() [0x427b5c]

    ??:? int core.runtime.runModuleUnitTests().__foreachbody2(object.ModuleInfo*)
    [0x42bb03]

    ??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)).__lambda2(immutable(object.ModuleInfo*))
    [0x42a996]

    ??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))).__foreachbody2(ref
    rt.sections_elf_shared.DSO) [0x42fb29]

    ??:? int rt.sections_elf_shared.DSO.opApply(scope int delegate(ref rt.sections_elf_shared.DSO))
    [0x42ffd8]

    ??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*)))
    [0x42fab5]

    ??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)) [0x42a96d]

    ??:? runModuleUnitTests [0x42b8d9]

    ??:? void rt.dmain2._d_run_main(int, char**, extern (C) int function(char[][])*).runAll()
    [0x42822c]

    ??:? void rt.dmain2._d_r'
  stdout: ''
  timestamp: 1660164228
- exit_code: 1
  program: "import std.typecons;\nimport std.math;\n/*\nComplete the function that\
    \ takes two integers and returns \n    the product of their unit digits.\n   \
    \ Assume the input is always valid.\n    Examples:\n    >>> multiply(148L, 412L)\n\
    \    16L\n    >>> multiply(19L, 28L)\n    72L\n    >>> multiply(2020L, 1851L)\n\
    \    0L\n    >>> multiply(14L, -15L)\n    20L\n    \n*/\nlong multiply(long a,\
    \ long b) \n{\n    return (a % 10) * (b % 10);\n}\nunittest\n{\n    alias candidate\
    \ = multiply;\n\n    assert(candidate(148L, 412L) == 16L);\n    assert(candidate(19L,\
    \ 28L) == 72L);\n    assert(candidate(2020L, 1851L) == 0L);\n    assert(candidate(14L,\
    \ -15L) == 20L);\n    assert(candidate(76L, 67L) == 42L);\n    assert(candidate(17L,\
    \ 27L) == 49L);\n    assert(candidate(0L, 1L) == 0L);\n    assert(candidate(0L,\
    \ 0L) == 0L);\n}\nvoid main(){}"
  status: Exception
  stderr: 'core.exception.AssertError@/tmp/tmp1saqvwe8.d(29): unittest failure

    ----------------

    ??:? _d_unittestp [0x427de5]

    ??:? void tmp1saqvwe8.__unittest_L22_C1() [0x427ac4]

    ??:? void tmp1saqvwe8.__modtest() [0x427b68]

    ??:? int core.runtime.runModuleUnitTests().__foreachbody2(object.ModuleInfo*)
    [0x42bb0b]

    ??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)).__lambda2(immutable(object.ModuleInfo*))
    [0x42a99e]

    ??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))).__foreachbody2(ref
    rt.sections_elf_shared.DSO) [0x42fb31]

    ??:? int rt.sections_elf_shared.DSO.opApply(scope int delegate(ref rt.sections_elf_shared.DSO))
    [0x42ffe0]

    ??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*)))
    [0x42fabd]

    ??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)) [0x42a975]

    ??:? runModuleUnitTests [0x42b8e1]

    ??:? void rt.dmain2._d_run_main(int, char**, extern (C) int function(char[][])*).runAll()
    [0x428234]

    ??:? void rt.dmain2._d_r'
  stdout: ''
  timestamp: 1660164228
- exit_code: 1
  program: "import std.typecons;\nimport std.math;\n/*\nComplete the function that\
    \ takes two integers and returns \n    the product of their unit digits.\n   \
    \ Assume the input is always valid.\n    Examples:\n    >>> multiply(148L, 412L)\n\
    \    16L\n    >>> multiply(19L, 28L)\n    72L\n    >>> multiply(2020L, 1851L)\n\
    \    0L\n    >>> multiply(14L, -15L)\n    20L\n    \n*/\nlong multiply(long a,\
    \ long b) \n{\n    return (a % 10) * (b % 10);\n}\nunittest\n{\n    alias candidate\
    \ = multiply;\n\n    assert(candidate(148L, 412L) == 16L);\n    assert(candidate(19L,\
    \ 28L) == 72L);\n    assert(candidate(2020L, 1851L) == 0L);\n    assert(candidate(14L,\
    \ -15L) == 20L);\n    assert(candidate(76L, 67L) == 42L);\n    assert(candidate(17L,\
    \ 27L) == 49L);\n    assert(candidate(0L, 1L) == 0L);\n    assert(candidate(0L,\
    \ 0L) == 0L);\n}\nvoid main(){}"
  status: Exception
  stderr: 'core.exception.AssertError@/tmp/tmp1saqvwe8.d(29): unittest failure

    ----------------

    ??:? _d_unittestp [0x427de5]

    ??:? void tmp1saqvwe8.__unittest_L22_C1() [0x427ac4]

    ??:? void tmp1saqvwe8.__modtest() [0x427b68]

    ??:? int core.runtime.runModuleUnitTests().__foreachbody2(object.ModuleInfo*)
    [0x42bb0b]

    ??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)).__lambda2(immutable(object.ModuleInfo*))
    [0x42a99e]

    ??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))).__foreachbody2(ref
    rt.sections_elf_shared.DSO) [0x42fb31]

    ??:? int rt.sections_elf_shared.DSO.opApply(scope int delegate(ref rt.sections_elf_shared.DSO))
    [0x42ffe0]

    ??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*)))
    [0x42fabd]

    ??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)) [0x42a975]

    ??:? runModuleUnitTests [0x42b8e1]

    ??:? void rt.dmain2._d_run_main(int, char**, extern (C) int function(char[][])*).runAll()
    [0x428234]

    ??:? void rt.dmain2._d_r'
  stdout: ''
  timestamp: 1660164228
- exit_code: 1
  program: "import std.typecons;\nimport std.math;\n/*\nComplete the function that\
    \ takes two integers and returns \n    the product of their unit digits.\n   \
    \ Assume the input is always valid.\n    Examples:\n    >>> multiply(148L, 412L)\n\
    \    16L\n    >>> multiply(19L, 28L)\n    72L\n    >>> multiply(2020L, 1851L)\n\
    \    0L\n    >>> multiply(14L, -15L)\n    20L\n    \n*/\nlong multiply(long a,\
    \ long b) \n{\n    return (a % 10) * (b % 10);\n}\nunittest\n{\n    alias candidate\
    \ = multiply;\n\n    assert(candidate(148L, 412L) == 16L);\n    assert(candidate(19L,\
    \ 28L) == 72L);\n    assert(candidate(2020L, 1851L) == 0L);\n    assert(candidate(14L,\
    \ -15L) == 20L);\n    assert(candidate(76L, 67L) == 42L);\n    assert(candidate(17L,\
    \ 27L) == 49L);\n    assert(candidate(0L, 1L) == 0L);\n    assert(candidate(0L,\
    \ 0L) == 0L);\n}\nvoid main(){}"
  status: Exception
  stderr: 'core.exception.AssertError@/tmp/tmp1saqvwe8.d(29): unittest failure

    ----------------

    ??:? _d_unittestp [0x427de5]

    ??:? void tmp1saqvwe8.__unittest_L22_C1() [0x427ac4]

    ??:? void tmp1saqvwe8.__modtest() [0x427b68]

    ??:? int core.runtime.runModuleUnitTests().__foreachbody2(object.ModuleInfo*)
    [0x42bb0b]

    ??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)).__lambda2(immutable(object.ModuleInfo*))
    [0x42a99e]

    ??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))).__foreachbody2(ref
    rt.sections_elf_shared.DSO) [0x42fb31]

    ??:? int rt.sections_elf_shared.DSO.opApply(scope int delegate(ref rt.sections_elf_shared.DSO))
    [0x42ffe0]

    ??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*)))
    [0x42fabd]

    ??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)) [0x42a975]

    ??:? runModuleUnitTests [0x42b8e1]

    ??:? void rt.dmain2._d_run_main(int, char**, extern (C) int function(char[][])*).runAll()
    [0x428234]

    ??:? void rt.dmain2._d_r'
  stdout: ''
  timestamp: 1660164228
- exit_code: 1
  program: "import std.typecons;\nimport std.math;\n/*\nComplete the function that\
    \ takes two integers and returns \n    the product of their unit digits.\n   \
    \ Assume the input is always valid.\n    Examples:\n    >>> multiply(148L, 412L)\n\
    \    16L\n    >>> multiply(19L, 28L)\n    72L\n    >>> multiply(2020L, 1851L)\n\
    \    0L\n    >>> multiply(14L, -15L)\n    20L\n    \n*/\nlong multiply(long a,\
    \ long b) \n{\n    return (a % 10) * (b % 10);\n}\nunittest\n{\n    alias candidate\
    \ = multiply;\n\n    assert(candidate(148L, 412L) == 16L);\n    assert(candidate(19L,\
    \ 28L) == 72L);\n    assert(candidate(2020L, 1851L) == 0L);\n    assert(candidate(14L,\
    \ -15L) == 20L);\n    assert(candidate(76L, 67L) == 42L);\n    assert(candidate(17L,\
    \ 27L) == 49L);\n    assert(candidate(0L, 1L) == 0L);\n    assert(candidate(0L,\
    \ 0L) == 0L);\n}\nvoid main(){}"
  status: Exception
  stderr: 'core.exception.AssertError@/tmp/tmp1saqvwe8.d(29): unittest failure

    ----------------

    ??:? _d_unittestp [0x427de5]

    ??:? void tmp1saqvwe8.__unittest_L22_C1() [0x427ac4]

    ??:? void tmp1saqvwe8.__modtest() [0x427b68]

    ??:? int core.runtime.runModuleUnitTests().__foreachbody2(object.ModuleInfo*)
    [0x42bb0b]

    ??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)).__lambda2(immutable(object.ModuleInfo*))
    [0x42a99e]

    ??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))).__foreachbody2(ref
    rt.sections_elf_shared.DSO) [0x42fb31]

    ??:? int rt.sections_elf_shared.DSO.opApply(scope int delegate(ref rt.sections_elf_shared.DSO))
    [0x42ffe0]

    ??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*)))
    [0x42fabd]

    ??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)) [0x42a975]

    ??:? runModuleUnitTests [0x42b8e1]

    ??:? void rt.dmain2._d_run_main(int, char**, extern (C) int function(char[][])*).runAll()
    [0x428234]

    ??:? void rt.dmain2._d_r'
  stdout: ''
  timestamp: 1660164228
- exit_code: 1
  program: "import std.typecons;\nimport std.math;\n/*\nComplete the function that\
    \ takes two integers and returns \n    the product of their unit digits.\n   \
    \ Assume the input is always valid.\n    Examples:\n    >>> multiply(148L, 412L)\n\
    \    16L\n    >>> multiply(19L, 28L)\n    72L\n    >>> multiply(2020L, 1851L)\n\
    \    0L\n    >>> multiply(14L, -15L)\n    20L\n    \n*/\nlong multiply(long a,\
    \ long b) \n{\n    return (a%10)*(b%10);\n}\nunittest\n{\n    alias candidate\
    \ = multiply;\n\n    assert(candidate(148L, 412L) == 16L);\n    assert(candidate(19L,\
    \ 28L) == 72L);\n    assert(candidate(2020L, 1851L) == 0L);\n    assert(candidate(14L,\
    \ -15L) == 20L);\n    assert(candidate(76L, 67L) == 42L);\n    assert(candidate(17L,\
    \ 27L) == 49L);\n    assert(candidate(0L, 1L) == 0L);\n    assert(candidate(0L,\
    \ 0L) == 0L);\n}\nvoid main(){}"
  status: Exception
  stderr: 'core.exception.AssertError@/tmp/tmpx0vyfebi.d(29): unittest failure

    ----------------

    ??:? _d_unittestp [0x427de5]

    ??:? void tmpx0vyfebi.__unittest_L22_C1() [0x427ac4]

    ??:? void tmpx0vyfebi.__modtest() [0x427b68]

    ??:? int core.runtime.runModuleUnitTests().__foreachbody2(object.ModuleInfo*)
    [0x42bb0b]

    ??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)).__lambda2(immutable(object.ModuleInfo*))
    [0x42a99e]

    ??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))).__foreachbody2(ref
    rt.sections_elf_shared.DSO) [0x42fb31]

    ??:? int rt.sections_elf_shared.DSO.opApply(scope int delegate(ref rt.sections_elf_shared.DSO))
    [0x42ffe0]

    ??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*)))
    [0x42fabd]

    ??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)) [0x42a975]

    ??:? runModuleUnitTests [0x42b8e1]

    ??:? void rt.dmain2._d_run_main(int, char**, extern (C) int function(char[][])*).runAll()
    [0x428234]

    ??:? void rt.dmain2._d_r'
  stdout: ''
  timestamp: 1660164228
- exit_code: 1
  program: "import std.typecons;\nimport std.math;\n/*\nComplete the function that\
    \ takes two integers and returns \n    the product of their unit digits.\n   \
    \ Assume the input is always valid.\n    Examples:\n    >>> multiply(148L, 412L)\n\
    \    16L\n    >>> multiply(19L, 28L)\n    72L\n    >>> multiply(2020L, 1851L)\n\
    \    0L\n    >>> multiply(14L, -15L)\n    20L\n    \n*/\nlong multiply(long a,\
    \ long b) \n{\n    return (a % 10) * (b % 10);\n}\nunittest\n{\n    alias candidate\
    \ = multiply;\n\n    assert(candidate(148L, 412L) == 16L);\n    assert(candidate(19L,\
    \ 28L) == 72L);\n    assert(candidate(2020L, 1851L) == 0L);\n    assert(candidate(14L,\
    \ -15L) == 20L);\n    assert(candidate(76L, 67L) == 42L);\n    assert(candidate(17L,\
    \ 27L) == 49L);\n    assert(candidate(0L, 1L) == 0L);\n    assert(candidate(0L,\
    \ 0L) == 0L);\n}\nvoid main(){}"
  status: Exception
  stderr: 'core.exception.AssertError@/tmp/tmp1saqvwe8.d(29): unittest failure

    ----------------

    ??:? _d_unittestp [0x427de5]

    ??:? void tmp1saqvwe8.__unittest_L22_C1() [0x427ac4]

    ??:? void tmp1saqvwe8.__modtest() [0x427b68]

    ??:? int core.runtime.runModuleUnitTests().__foreachbody2(object.ModuleInfo*)
    [0x42bb0b]

    ??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)).__lambda2(immutable(object.ModuleInfo*))
    [0x42a99e]

    ??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))).__foreachbody2(ref
    rt.sections_elf_shared.DSO) [0x42fb31]

    ??:? int rt.sections_elf_shared.DSO.opApply(scope int delegate(ref rt.sections_elf_shared.DSO))
    [0x42ffe0]

    ??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*)))
    [0x42fabd]

    ??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)) [0x42a975]

    ??:? runModuleUnitTests [0x42b8e1]

    ??:? void rt.dmain2._d_run_main(int, char**, extern (C) int function(char[][])*).runAll()
    [0x428234]

    ??:? void rt.dmain2._d_r'
  stdout: ''
  timestamp: 1660164228
- exit_code: 1
  program: "import std.typecons;\nimport std.math;\n/*\nComplete the function that\
    \ takes two integers and returns \n    the product of their unit digits.\n   \
    \ Assume the input is always valid.\n    Examples:\n    >>> multiply(148L, 412L)\n\
    \    16L\n    >>> multiply(19L, 28L)\n    72L\n    >>> multiply(2020L, 1851L)\n\
    \    0L\n    >>> multiply(14L, -15L)\n    20L\n    \n*/\nlong multiply(long a,\
    \ long b) \n{\n    return (a % 10) * (b % 10);\n}\nunittest\n{\n    alias candidate\
    \ = multiply;\n\n    assert(candidate(148L, 412L) == 16L);\n    assert(candidate(19L,\
    \ 28L) == 72L);\n    assert(candidate(2020L, 1851L) == 0L);\n    assert(candidate(14L,\
    \ -15L) == 20L);\n    assert(candidate(76L, 67L) == 42L);\n    assert(candidate(17L,\
    \ 27L) == 49L);\n    assert(candidate(0L, 1L) == 0L);\n    assert(candidate(0L,\
    \ 0L) == 0L);\n}\nvoid main(){}"
  status: Exception
  stderr: 'core.exception.AssertError@/tmp/tmp1saqvwe8.d(29): unittest failure

    ----------------

    ??:? _d_unittestp [0x427de5]

    ??:? void tmp1saqvwe8.__unittest_L22_C1() [0x427ac4]

    ??:? void tmp1saqvwe8.__modtest() [0x427b68]

    ??:? int core.runtime.runModuleUnitTests().__foreachbody2(object.ModuleInfo*)
    [0x42bb0b]

    ??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)).__lambda2(immutable(object.ModuleInfo*))
    [0x42a99e]

    ??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))).__foreachbody2(ref
    rt.sections_elf_shared.DSO) [0x42fb31]

    ??:? int rt.sections_elf_shared.DSO.opApply(scope int delegate(ref rt.sections_elf_shared.DSO))
    [0x42ffe0]

    ??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*)))
    [0x42fabd]

    ??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)) [0x42a975]

    ??:? runModuleUnitTests [0x42b8e1]

    ??:? void rt.dmain2._d_run_main(int, char**, extern (C) int function(char[][])*).runAll()
    [0x428234]

    ??:? void rt.dmain2._d_r'
  stdout: ''
  timestamp: 1660164228
- exit_code: 1
  program: "import std.typecons;\nimport std.math;\n/*\nComplete the function that\
    \ takes two integers and returns \n    the product of their unit digits.\n   \
    \ Assume the input is always valid.\n    Examples:\n    >>> multiply(148L, 412L)\n\
    \    16L\n    >>> multiply(19L, 28L)\n    72L\n    >>> multiply(2020L, 1851L)\n\
    \    0L\n    >>> multiply(14L, -15L)\n    20L\n    \n*/\nlong multiply(long a,\
    \ long b) \n{\n    return (a % 10) * (b % 10);\n}\nunittest\n{\n    alias candidate\
    \ = multiply;\n\n    assert(candidate(148L, 412L) == 16L);\n    assert(candidate(19L,\
    \ 28L) == 72L);\n    assert(candidate(2020L, 1851L) == 0L);\n    assert(candidate(14L,\
    \ -15L) == 20L);\n    assert(candidate(76L, 67L) == 42L);\n    assert(candidate(17L,\
    \ 27L) == 49L);\n    assert(candidate(0L, 1L) == 0L);\n    assert(candidate(0L,\
    \ 0L) == 0L);\n}\nvoid main(){}"
  status: Exception
  stderr: 'core.exception.AssertError@/tmp/tmp1saqvwe8.d(29): unittest failure

    ----------------

    ??:? _d_unittestp [0x427de5]

    ??:? void tmp1saqvwe8.__unittest_L22_C1() [0x427ac4]

    ??:? void tmp1saqvwe8.__modtest() [0x427b68]

    ??:? int core.runtime.runModuleUnitTests().__foreachbody2(object.ModuleInfo*)
    [0x42bb0b]

    ??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)).__lambda2(immutable(object.ModuleInfo*))
    [0x42a99e]

    ??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))).__foreachbody2(ref
    rt.sections_elf_shared.DSO) [0x42fb31]

    ??:? int rt.sections_elf_shared.DSO.opApply(scope int delegate(ref rt.sections_elf_shared.DSO))
    [0x42ffe0]

    ??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*)))
    [0x42fabd]

    ??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)) [0x42a975]

    ??:? runModuleUnitTests [0x42b8e1]

    ??:? void rt.dmain2._d_run_main(int, char**, extern (C) int function(char[][])*).runAll()
    [0x428234]

    ??:? void rt.dmain2._d_r'
  stdout: ''
  timestamp: 1660164228
- exit_code: 1
  program: "import std.typecons;\nimport std.math;\n/*\nComplete the function that\
    \ takes two integers and returns \n    the product of their unit digits.\n   \
    \ Assume the input is always valid.\n    Examples:\n    >>> multiply(148L, 412L)\n\
    \    16L\n    >>> multiply(19L, 28L)\n    72L\n    >>> multiply(2020L, 1851L)\n\
    \    0L\n    >>> multiply(14L, -15L)\n    20L\n    \n*/\nlong multiply(long a,\
    \ long b) \n{\n    return (a % 10) * (b % 10);\n}\nunittest\n{\n    alias candidate\
    \ = multiply;\n\n    assert(candidate(148L, 412L) == 16L);\n    assert(candidate(19L,\
    \ 28L) == 72L);\n    assert(candidate(2020L, 1851L) == 0L);\n    assert(candidate(14L,\
    \ -15L) == 20L);\n    assert(candidate(76L, 67L) == 42L);\n    assert(candidate(17L,\
    \ 27L) == 49L);\n    assert(candidate(0L, 1L) == 0L);\n    assert(candidate(0L,\
    \ 0L) == 0L);\n}\nvoid main(){}"
  status: Exception
  stderr: 'core.exception.AssertError@/tmp/tmp1saqvwe8.d(29): unittest failure

    ----------------

    ??:? _d_unittestp [0x427de5]

    ??:? void tmp1saqvwe8.__unittest_L22_C1() [0x427ac4]

    ??:? void tmp1saqvwe8.__modtest() [0x427b68]

    ??:? int core.runtime.runModuleUnitTests().__foreachbody2(object.ModuleInfo*)
    [0x42bb0b]

    ??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)).__lambda2(immutable(object.ModuleInfo*))
    [0x42a99e]

    ??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))).__foreachbody2(ref
    rt.sections_elf_shared.DSO) [0x42fb31]

    ??:? int rt.sections_elf_shared.DSO.opApply(scope int delegate(ref rt.sections_elf_shared.DSO))
    [0x42ffe0]

    ??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*)))
    [0x42fabd]

    ??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)) [0x42a975]

    ??:? runModuleUnitTests [0x42b8e1]

    ??:? void rt.dmain2._d_run_main(int, char**, extern (C) int function(char[][])*).runAll()
    [0x428234]

    ??:? void rt.dmain2._d_r'
  stdout: ''
  timestamp: 1660164228
- exit_code: 1
  program: "import std.typecons;\nimport std.math;\n/*\nComplete the function that\
    \ takes two integers and returns \n    the product of their unit digits.\n   \
    \ Assume the input is always valid.\n    Examples:\n    >>> multiply(148L, 412L)\n\
    \    16L\n    >>> multiply(19L, 28L)\n    72L\n    >>> multiply(2020L, 1851L)\n\
    \    0L\n    >>> multiply(14L, -15L)\n    20L\n    \n*/\nlong multiply(long a,\
    \ long b) \n{\n    return (a % 10) * (b % 10);\n}\nunittest\n{\n    alias candidate\
    \ = multiply;\n\n    assert(candidate(148L, 412L) == 16L);\n    assert(candidate(19L,\
    \ 28L) == 72L);\n    assert(candidate(2020L, 1851L) == 0L);\n    assert(candidate(14L,\
    \ -15L) == 20L);\n    assert(candidate(76L, 67L) == 42L);\n    assert(candidate(17L,\
    \ 27L) == 49L);\n    assert(candidate(0L, 1L) == 0L);\n    assert(candidate(0L,\
    \ 0L) == 0L);\n}\nvoid main(){}"
  status: Exception
  stderr: 'core.exception.AssertError@/tmp/tmp1saqvwe8.d(29): unittest failure

    ----------------

    ??:? _d_unittestp [0x427de5]

    ??:? void tmp1saqvwe8.__unittest_L22_C1() [0x427ac4]

    ??:? void tmp1saqvwe8.__modtest() [0x427b68]

    ??:? int core.runtime.runModuleUnitTests().__foreachbody2(object.ModuleInfo*)
    [0x42bb0b]

    ??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)).__lambda2(immutable(object.ModuleInfo*))
    [0x42a99e]

    ??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))).__foreachbody2(ref
    rt.sections_elf_shared.DSO) [0x42fb31]

    ??:? int rt.sections_elf_shared.DSO.opApply(scope int delegate(ref rt.sections_elf_shared.DSO))
    [0x42ffe0]

    ??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*)))
    [0x42fabd]

    ??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)) [0x42a975]

    ??:? runModuleUnitTests [0x42b8e1]

    ??:? void rt.dmain2._d_run_main(int, char**, extern (C) int function(char[][])*).runAll()
    [0x428234]

    ??:? void rt.dmain2._d_r'
  stdout: ''
  timestamp: 1660164228
- exit_code: 1
  program: "import std.typecons;\nimport std.math;\n/*\nComplete the function that\
    \ takes two integers and returns \n    the product of their unit digits.\n   \
    \ Assume the input is always valid.\n    Examples:\n    >>> multiply(148L, 412L)\n\
    \    16L\n    >>> multiply(19L, 28L)\n    72L\n    >>> multiply(2020L, 1851L)\n\
    \    0L\n    >>> multiply(14L, -15L)\n    20L\n    \n*/\nlong multiply(long a,\
    \ long b) \n{\n    return (a % 10) * (b % 10);\n}\nunittest\n{\n    alias candidate\
    \ = multiply;\n\n    assert(candidate(148L, 412L) == 16L);\n    assert(candidate(19L,\
    \ 28L) == 72L);\n    assert(candidate(2020L, 1851L) == 0L);\n    assert(candidate(14L,\
    \ -15L) == 20L);\n    assert(candidate(76L, 67L) == 42L);\n    assert(candidate(17L,\
    \ 27L) == 49L);\n    assert(candidate(0L, 1L) == 0L);\n    assert(candidate(0L,\
    \ 0L) == 0L);\n}\nvoid main(){}"
  status: Exception
  stderr: 'core.exception.AssertError@/tmp/tmp1saqvwe8.d(29): unittest failure

    ----------------

    ??:? _d_unittestp [0x427de5]

    ??:? void tmp1saqvwe8.__unittest_L22_C1() [0x427ac4]

    ??:? void tmp1saqvwe8.__modtest() [0x427b68]

    ??:? int core.runtime.runModuleUnitTests().__foreachbody2(object.ModuleInfo*)
    [0x42bb0b]

    ??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)).__lambda2(immutable(object.ModuleInfo*))
    [0x42a99e]

    ??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))).__foreachbody2(ref
    rt.sections_elf_shared.DSO) [0x42fb31]

    ??:? int rt.sections_elf_shared.DSO.opApply(scope int delegate(ref rt.sections_elf_shared.DSO))
    [0x42ffe0]

    ??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*)))
    [0x42fabd]

    ??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)) [0x42a975]

    ??:? runModuleUnitTests [0x42b8e1]

    ??:? void rt.dmain2._d_run_main(int, char**, extern (C) int function(char[][])*).runAll()
    [0x428234]

    ??:? void rt.dmain2._d_r'
  stdout: ''
  timestamp: 1660164228
- exit_code: 1
  program: "import std.typecons;\nimport std.math;\n/*\nComplete the function that\
    \ takes two integers and returns \n    the product of their unit digits.\n   \
    \ Assume the input is always valid.\n    Examples:\n    >>> multiply(148L, 412L)\n\
    \    16L\n    >>> multiply(19L, 28L)\n    72L\n    >>> multiply(2020L, 1851L)\n\
    \    0L\n    >>> multiply(14L, -15L)\n    20L\n    \n*/\nlong multiply(long a,\
    \ long b) \n{\n    return (a % 10) * (b % 10);\n}\nunittest\n{\n    alias candidate\
    \ = multiply;\n\n    assert(candidate(148L, 412L) == 16L);\n    assert(candidate(19L,\
    \ 28L) == 72L);\n    assert(candidate(2020L, 1851L) == 0L);\n    assert(candidate(14L,\
    \ -15L) == 20L);\n    assert(candidate(76L, 67L) == 42L);\n    assert(candidate(17L,\
    \ 27L) == 49L);\n    assert(candidate(0L, 1L) == 0L);\n    assert(candidate(0L,\
    \ 0L) == 0L);\n}\nvoid main(){}"
  status: Exception
  stderr: 'core.exception.AssertError@/tmp/tmp1saqvwe8.d(29): unittest failure

    ----------------

    ??:? _d_unittestp [0x427de5]

    ??:? void tmp1saqvwe8.__unittest_L22_C1() [0x427ac4]

    ??:? void tmp1saqvwe8.__modtest() [0x427b68]

    ??:? int core.runtime.runModuleUnitTests().__foreachbody2(object.ModuleInfo*)
    [0x42bb0b]

    ??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)).__lambda2(immutable(object.ModuleInfo*))
    [0x42a99e]

    ??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))).__foreachbody2(ref
    rt.sections_elf_shared.DSO) [0x42fb31]

    ??:? int rt.sections_elf_shared.DSO.opApply(scope int delegate(ref rt.sections_elf_shared.DSO))
    [0x42ffe0]

    ??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*)))
    [0x42fabd]

    ??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)) [0x42a975]

    ??:? runModuleUnitTests [0x42b8e1]

    ??:? void rt.dmain2._d_run_main(int, char**, extern (C) int function(char[][])*).runAll()
    [0x428234]

    ??:? void rt.dmain2._d_r'
  stdout: ''
  timestamp: 1660164228
- exit_code: 1
  program: "import std.typecons;\nimport std.math;\n/*\nComplete the function that\
    \ takes two integers and returns \n    the product of their unit digits.\n   \
    \ Assume the input is always valid.\n    Examples:\n    >>> multiply(148L, 412L)\n\
    \    16L\n    >>> multiply(19L, 28L)\n    72L\n    >>> multiply(2020L, 1851L)\n\
    \    0L\n    >>> multiply(14L, -15L)\n    20L\n    \n*/\nlong multiply(long a,\
    \ long b) \n{\n    return (a % 10) * (b % 10);\n}\nunittest\n{\n    alias candidate\
    \ = multiply;\n\n    assert(candidate(148L, 412L) == 16L);\n    assert(candidate(19L,\
    \ 28L) == 72L);\n    assert(candidate(2020L, 1851L) == 0L);\n    assert(candidate(14L,\
    \ -15L) == 20L);\n    assert(candidate(76L, 67L) == 42L);\n    assert(candidate(17L,\
    \ 27L) == 49L);\n    assert(candidate(0L, 1L) == 0L);\n    assert(candidate(0L,\
    \ 0L) == 0L);\n}\nvoid main(){}"
  status: Exception
  stderr: 'core.exception.AssertError@/tmp/tmp1saqvwe8.d(29): unittest failure

    ----------------

    ??:? _d_unittestp [0x427de5]

    ??:? void tmp1saqvwe8.__unittest_L22_C1() [0x427ac4]

    ??:? void tmp1saqvwe8.__modtest() [0x427b68]

    ??:? int core.runtime.runModuleUnitTests().__foreachbody2(object.ModuleInfo*)
    [0x42bb0b]

    ??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)).__lambda2(immutable(object.ModuleInfo*))
    [0x42a99e]

    ??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))).__foreachbody2(ref
    rt.sections_elf_shared.DSO) [0x42fb31]

    ??:? int rt.sections_elf_shared.DSO.opApply(scope int delegate(ref rt.sections_elf_shared.DSO))
    [0x42ffe0]

    ??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*)))
    [0x42fabd]

    ??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)) [0x42a975]

    ??:? runModuleUnitTests [0x42b8e1]

    ??:? void rt.dmain2._d_run_main(int, char**, extern (C) int function(char[][])*).runAll()
    [0x428234]

    ??:? void rt.dmain2._d_r'
  stdout: ''
  timestamp: 1660164228
- exit_code: 1
  program: "import std.typecons;\nimport std.math;\n/*\nComplete the function that\
    \ takes two integers and returns \n    the product of their unit digits.\n   \
    \ Assume the input is always valid.\n    Examples:\n    >>> multiply(148L, 412L)\n\
    \    16L\n    >>> multiply(19L, 28L)\n    72L\n    >>> multiply(2020L, 1851L)\n\
    \    0L\n    >>> multiply(14L, -15L)\n    20L\n    \n*/\nlong multiply(long a,\
    \ long b) \n{\n    return (a % 10) * (b % 10);\n}\nunittest\n{\n    alias candidate\
    \ = multiply;\n\n    assert(candidate(148L, 412L) == 16L);\n    assert(candidate(19L,\
    \ 28L) == 72L);\n    assert(candidate(2020L, 1851L) == 0L);\n    assert(candidate(14L,\
    \ -15L) == 20L);\n    assert(candidate(76L, 67L) == 42L);\n    assert(candidate(17L,\
    \ 27L) == 49L);\n    assert(candidate(0L, 1L) == 0L);\n    assert(candidate(0L,\
    \ 0L) == 0L);\n}\nvoid main(){}"
  status: Exception
  stderr: 'core.exception.AssertError@/tmp/tmp1saqvwe8.d(29): unittest failure

    ----------------

    ??:? _d_unittestp [0x427de5]

    ??:? void tmp1saqvwe8.__unittest_L22_C1() [0x427ac4]

    ??:? void tmp1saqvwe8.__modtest() [0x427b68]

    ??:? int core.runtime.runModuleUnitTests().__foreachbody2(object.ModuleInfo*)
    [0x42bb0b]

    ??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)).__lambda2(immutable(object.ModuleInfo*))
    [0x42a99e]

    ??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))).__foreachbody2(ref
    rt.sections_elf_shared.DSO) [0x42fb31]

    ??:? int rt.sections_elf_shared.DSO.opApply(scope int delegate(ref rt.sections_elf_shared.DSO))
    [0x42ffe0]

    ??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*)))
    [0x42fabd]

    ??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)) [0x42a975]

    ??:? runModuleUnitTests [0x42b8e1]

    ??:? void rt.dmain2._d_run_main(int, char**, extern (C) int function(char[][])*).runAll()
    [0x428234]

    ??:? void rt.dmain2._d_r'
  stdout: ''
  timestamp: 1660164228
- exit_code: 1
  program: "import std.typecons;\nimport std.math;\n/*\nComplete the function that\
    \ takes two integers and returns \n    the product of their unit digits.\n   \
    \ Assume the input is always valid.\n    Examples:\n    >>> multiply(148L, 412L)\n\
    \    16L\n    >>> multiply(19L, 28L)\n    72L\n    >>> multiply(2020L, 1851L)\n\
    \    0L\n    >>> multiply(14L, -15L)\n    20L\n    \n*/\nlong multiply(long a,\
    \ long b) \n{\n    return (a % 10) * (b % 10);\n}\nunittest\n{\n    alias candidate\
    \ = multiply;\n\n    assert(candidate(148L, 412L) == 16L);\n    assert(candidate(19L,\
    \ 28L) == 72L);\n    assert(candidate(2020L, 1851L) == 0L);\n    assert(candidate(14L,\
    \ -15L) == 20L);\n    assert(candidate(76L, 67L) == 42L);\n    assert(candidate(17L,\
    \ 27L) == 49L);\n    assert(candidate(0L, 1L) == 0L);\n    assert(candidate(0L,\
    \ 0L) == 0L);\n}\nvoid main(){}"
  status: Exception
  stderr: 'core.exception.AssertError@/tmp/tmp1saqvwe8.d(29): unittest failure

    ----------------

    ??:? _d_unittestp [0x427de5]

    ??:? void tmp1saqvwe8.__unittest_L22_C1() [0x427ac4]

    ??:? void tmp1saqvwe8.__modtest() [0x427b68]

    ??:? int core.runtime.runModuleUnitTests().__foreachbody2(object.ModuleInfo*)
    [0x42bb0b]

    ??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)).__lambda2(immutable(object.ModuleInfo*))
    [0x42a99e]

    ??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))).__foreachbody2(ref
    rt.sections_elf_shared.DSO) [0x42fb31]

    ??:? int rt.sections_elf_shared.DSO.opApply(scope int delegate(ref rt.sections_elf_shared.DSO))
    [0x42ffe0]

    ??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*)))
    [0x42fabd]

    ??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)) [0x42a975]

    ??:? runModuleUnitTests [0x42b8e1]

    ??:? void rt.dmain2._d_run_main(int, char**, extern (C) int function(char[][])*).runAll()
    [0x428234]

    ??:? void rt.dmain2._d_r'
  stdout: ''
  timestamp: 1660164228
- exit_code: 1
  program: "import std.typecons;\nimport std.math;\n/*\nComplete the function that\
    \ takes two integers and returns \n    the product of their unit digits.\n   \
    \ Assume the input is always valid.\n    Examples:\n    >>> multiply(148L, 412L)\n\
    \    16L\n    >>> multiply(19L, 28L)\n    72L\n    >>> multiply(2020L, 1851L)\n\
    \    0L\n    >>> multiply(14L, -15L)\n    20L\n    \n*/\nlong multiply(long a,\
    \ long b) \n{\n    return (a % 10) * (b % 10);\n}\nunittest\n{\n    alias candidate\
    \ = multiply;\n\n    assert(candidate(148L, 412L) == 16L);\n    assert(candidate(19L,\
    \ 28L) == 72L);\n    assert(candidate(2020L, 1851L) == 0L);\n    assert(candidate(14L,\
    \ -15L) == 20L);\n    assert(candidate(76L, 67L) == 42L);\n    assert(candidate(17L,\
    \ 27L) == 49L);\n    assert(candidate(0L, 1L) == 0L);\n    assert(candidate(0L,\
    \ 0L) == 0L);\n}\nvoid main(){}"
  status: Exception
  stderr: 'core.exception.AssertError@/tmp/tmp1saqvwe8.d(29): unittest failure

    ----------------

    ??:? _d_unittestp [0x427de5]

    ??:? void tmp1saqvwe8.__unittest_L22_C1() [0x427ac4]

    ??:? void tmp1saqvwe8.__modtest() [0x427b68]

    ??:? int core.runtime.runModuleUnitTests().__foreachbody2(object.ModuleInfo*)
    [0x42bb0b]

    ??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)).__lambda2(immutable(object.ModuleInfo*))
    [0x42a99e]

    ??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))).__foreachbody2(ref
    rt.sections_elf_shared.DSO) [0x42fb31]

    ??:? int rt.sections_elf_shared.DSO.opApply(scope int delegate(ref rt.sections_elf_shared.DSO))
    [0x42ffe0]

    ??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*)))
    [0x42fabd]

    ??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)) [0x42a975]

    ??:? runModuleUnitTests [0x42b8e1]

    ??:? void rt.dmain2._d_run_main(int, char**, extern (C) int function(char[][])*).runAll()
    [0x428234]

    ??:? void rt.dmain2._d_r'
  stdout: ''
  timestamp: 1660164228
- exit_code: 1
  program: "import std.typecons;\nimport std.math;\n/*\nComplete the function that\
    \ takes two integers and returns \n    the product of their unit digits.\n   \
    \ Assume the input is always valid.\n    Examples:\n    >>> multiply(148L, 412L)\n\
    \    16L\n    >>> multiply(19L, 28L)\n    72L\n    >>> multiply(2020L, 1851L)\n\
    \    0L\n    >>> multiply(14L, -15L)\n    20L\n    \n*/\nlong multiply(long a,\
    \ long b) \n{\n    return (a%10)*(b%10);\n}\nunittest\n{\n    alias candidate\
    \ = multiply;\n\n    assert(candidate(148L, 412L) == 16L);\n    assert(candidate(19L,\
    \ 28L) == 72L);\n    assert(candidate(2020L, 1851L) == 0L);\n    assert(candidate(14L,\
    \ -15L) == 20L);\n    assert(candidate(76L, 67L) == 42L);\n    assert(candidate(17L,\
    \ 27L) == 49L);\n    assert(candidate(0L, 1L) == 0L);\n    assert(candidate(0L,\
    \ 0L) == 0L);\n}\nvoid main(){}"
  status: Exception
  stderr: 'core.exception.AssertError@/tmp/tmpx0vyfebi.d(29): unittest failure

    ----------------

    ??:? _d_unittestp [0x427de5]

    ??:? void tmpx0vyfebi.__unittest_L22_C1() [0x427ac4]

    ??:? void tmpx0vyfebi.__modtest() [0x427b68]

    ??:? int core.runtime.runModuleUnitTests().__foreachbody2(object.ModuleInfo*)
    [0x42bb0b]

    ??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)).__lambda2(immutable(object.ModuleInfo*))
    [0x42a99e]

    ??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))).__foreachbody2(ref
    rt.sections_elf_shared.DSO) [0x42fb31]

    ??:? int rt.sections_elf_shared.DSO.opApply(scope int delegate(ref rt.sections_elf_shared.DSO))
    [0x42ffe0]

    ??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*)))
    [0x42fabd]

    ??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)) [0x42a975]

    ??:? runModuleUnitTests [0x42b8e1]

    ??:? void rt.dmain2._d_run_main(int, char**, extern (C) int function(char[][])*).runAll()
    [0x428234]

    ??:? void rt.dmain2._d_r'
  stdout: ''
  timestamp: 1660164228
- exit_code: 1
  program: "import std.typecons;\nimport std.math;\n/*\nComplete the function that\
    \ takes two integers and returns \n    the product of their unit digits.\n   \
    \ Assume the input is always valid.\n    Examples:\n    >>> multiply(148L, 412L)\n\
    \    16L\n    >>> multiply(19L, 28L)\n    72L\n    >>> multiply(2020L, 1851L)\n\
    \    0L\n    >>> multiply(14L, -15L)\n    20L\n    \n*/\nlong multiply(long a,\
    \ long b) \n{\n    return (a % 10) * (b % 10);\n}\nunittest\n{\n    alias candidate\
    \ = multiply;\n\n    assert(candidate(148L, 412L) == 16L);\n    assert(candidate(19L,\
    \ 28L) == 72L);\n    assert(candidate(2020L, 1851L) == 0L);\n    assert(candidate(14L,\
    \ -15L) == 20L);\n    assert(candidate(76L, 67L) == 42L);\n    assert(candidate(17L,\
    \ 27L) == 49L);\n    assert(candidate(0L, 1L) == 0L);\n    assert(candidate(0L,\
    \ 0L) == 0L);\n}\nvoid main(){}"
  status: Exception
  stderr: 'core.exception.AssertError@/tmp/tmp1saqvwe8.d(29): unittest failure

    ----------------

    ??:? _d_unittestp [0x427de5]

    ??:? void tmp1saqvwe8.__unittest_L22_C1() [0x427ac4]

    ??:? void tmp1saqvwe8.__modtest() [0x427b68]

    ??:? int core.runtime.runModuleUnitTests().__foreachbody2(object.ModuleInfo*)
    [0x42bb0b]

    ??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)).__lambda2(immutable(object.ModuleInfo*))
    [0x42a99e]

    ??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))).__foreachbody2(ref
    rt.sections_elf_shared.DSO) [0x42fb31]

    ??:? int rt.sections_elf_shared.DSO.opApply(scope int delegate(ref rt.sections_elf_shared.DSO))
    [0x42ffe0]

    ??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*)))
    [0x42fabd]

    ??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)) [0x42a975]

    ??:? runModuleUnitTests [0x42b8e1]

    ??:? void rt.dmain2._d_run_main(int, char**, extern (C) int function(char[][])*).runAll()
    [0x428234]

    ??:? void rt.dmain2._d_r'
  stdout: ''
  timestamp: 1660164228
- exit_code: 1
  program: "import std.typecons;\nimport std.math;\n/*\nComplete the function that\
    \ takes two integers and returns \n    the product of their unit digits.\n   \
    \ Assume the input is always valid.\n    Examples:\n    >>> multiply(148L, 412L)\n\
    \    16L\n    >>> multiply(19L, 28L)\n    72L\n    >>> multiply(2020L, 1851L)\n\
    \    0L\n    >>> multiply(14L, -15L)\n    20L\n    \n*/\nlong multiply(long a,\
    \ long b) \n{\n    return (a % 10) * (b % 10);\n}\nunittest\n{\n    alias candidate\
    \ = multiply;\n\n    assert(candidate(148L, 412L) == 16L);\n    assert(candidate(19L,\
    \ 28L) == 72L);\n    assert(candidate(2020L, 1851L) == 0L);\n    assert(candidate(14L,\
    \ -15L) == 20L);\n    assert(candidate(76L, 67L) == 42L);\n    assert(candidate(17L,\
    \ 27L) == 49L);\n    assert(candidate(0L, 1L) == 0L);\n    assert(candidate(0L,\
    \ 0L) == 0L);\n}\nvoid main(){}"
  status: Exception
  stderr: 'core.exception.AssertError@/tmp/tmp1saqvwe8.d(29): unittest failure

    ----------------

    ??:? _d_unittestp [0x427de5]

    ??:? void tmp1saqvwe8.__unittest_L22_C1() [0x427ac4]

    ??:? void tmp1saqvwe8.__modtest() [0x427b68]

    ??:? int core.runtime.runModuleUnitTests().__foreachbody2(object.ModuleInfo*)
    [0x42bb0b]

    ??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)).__lambda2(immutable(object.ModuleInfo*))
    [0x42a99e]

    ??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))).__foreachbody2(ref
    rt.sections_elf_shared.DSO) [0x42fb31]

    ??:? int rt.sections_elf_shared.DSO.opApply(scope int delegate(ref rt.sections_elf_shared.DSO))
    [0x42ffe0]

    ??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*)))
    [0x42fabd]

    ??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)) [0x42a975]

    ??:? runModuleUnitTests [0x42b8e1]

    ??:? void rt.dmain2._d_run_main(int, char**, extern (C) int function(char[][])*).runAll()
    [0x428234]

    ??:? void rt.dmain2._d_r'
  stdout: ''
  timestamp: 1660164228
- exit_code: 1
  program: "import std.typecons;\nimport std.math;\n/*\nComplete the function that\
    \ takes two integers and returns \n    the product of their unit digits.\n   \
    \ Assume the input is always valid.\n    Examples:\n    >>> multiply(148L, 412L)\n\
    \    16L\n    >>> multiply(19L, 28L)\n    72L\n    >>> multiply(2020L, 1851L)\n\
    \    0L\n    >>> multiply(14L, -15L)\n    20L\n    \n*/\nlong multiply(long a,\
    \ long b) \n{\n    return (a % 10) * (b % 10);\n}\nunittest\n{\n    alias candidate\
    \ = multiply;\n\n    assert(candidate(148L, 412L) == 16L);\n    assert(candidate(19L,\
    \ 28L) == 72L);\n    assert(candidate(2020L, 1851L) == 0L);\n    assert(candidate(14L,\
    \ -15L) == 20L);\n    assert(candidate(76L, 67L) == 42L);\n    assert(candidate(17L,\
    \ 27L) == 49L);\n    assert(candidate(0L, 1L) == 0L);\n    assert(candidate(0L,\
    \ 0L) == 0L);\n}\nvoid main(){}"
  status: Exception
  stderr: 'core.exception.AssertError@/tmp/tmp1saqvwe8.d(29): unittest failure

    ----------------

    ??:? _d_unittestp [0x427de5]

    ??:? void tmp1saqvwe8.__unittest_L22_C1() [0x427ac4]

    ??:? void tmp1saqvwe8.__modtest() [0x427b68]

    ??:? int core.runtime.runModuleUnitTests().__foreachbody2(object.ModuleInfo*)
    [0x42bb0b]

    ??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)).__lambda2(immutable(object.ModuleInfo*))
    [0x42a99e]

    ??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))).__foreachbody2(ref
    rt.sections_elf_shared.DSO) [0x42fb31]

    ??:? int rt.sections_elf_shared.DSO.opApply(scope int delegate(ref rt.sections_elf_shared.DSO))
    [0x42ffe0]

    ??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*)))
    [0x42fabd]

    ??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)) [0x42a975]

    ??:? runModuleUnitTests [0x42b8e1]

    ??:? void rt.dmain2._d_run_main(int, char**, extern (C) int function(char[][])*).runAll()
    [0x428234]

    ??:? void rt.dmain2._d_r'
  stdout: ''
  timestamp: 1660164228
- exit_code: 1
  program: "import std.typecons;\nimport std.math;\n/*\nComplete the function that\
    \ takes two integers and returns \n    the product of their unit digits.\n   \
    \ Assume the input is always valid.\n    Examples:\n    >>> multiply(148L, 412L)\n\
    \    16L\n    >>> multiply(19L, 28L)\n    72L\n    >>> multiply(2020L, 1851L)\n\
    \    0L\n    >>> multiply(14L, -15L)\n    20L\n    \n*/\nlong multiply(long a,\
    \ long b) \n{\n    return (a % 10) * (b % 10);\n}\nunittest\n{\n    alias candidate\
    \ = multiply;\n\n    assert(candidate(148L, 412L) == 16L);\n    assert(candidate(19L,\
    \ 28L) == 72L);\n    assert(candidate(2020L, 1851L) == 0L);\n    assert(candidate(14L,\
    \ -15L) == 20L);\n    assert(candidate(76L, 67L) == 42L);\n    assert(candidate(17L,\
    \ 27L) == 49L);\n    assert(candidate(0L, 1L) == 0L);\n    assert(candidate(0L,\
    \ 0L) == 0L);\n}\nvoid main(){}"
  status: Exception
  stderr: 'core.exception.AssertError@/tmp/tmp1saqvwe8.d(29): unittest failure

    ----------------

    ??:? _d_unittestp [0x427de5]

    ??:? void tmp1saqvwe8.__unittest_L22_C1() [0x427ac4]

    ??:? void tmp1saqvwe8.__modtest() [0x427b68]

    ??:? int core.runtime.runModuleUnitTests().__foreachbody2(object.ModuleInfo*)
    [0x42bb0b]

    ??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)).__lambda2(immutable(object.ModuleInfo*))
    [0x42a99e]

    ??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))).__foreachbody2(ref
    rt.sections_elf_shared.DSO) [0x42fb31]

    ??:? int rt.sections_elf_shared.DSO.opApply(scope int delegate(ref rt.sections_elf_shared.DSO))
    [0x42ffe0]

    ??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*)))
    [0x42fabd]

    ??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)) [0x42a975]

    ??:? runModuleUnitTests [0x42b8e1]

    ??:? void rt.dmain2._d_run_main(int, char**, extern (C) int function(char[][])*).runAll()
    [0x428234]

    ??:? void rt.dmain2._d_r'
  stdout: ''
  timestamp: 1660164228
- exit_code: 1
  program: "import std.typecons;\nimport std.math;\n/*\nComplete the function that\
    \ takes two integers and returns \n    the product of their unit digits.\n   \
    \ Assume the input is always valid.\n    Examples:\n    >>> multiply(148L, 412L)\n\
    \    16L\n    >>> multiply(19L, 28L)\n    72L\n    >>> multiply(2020L, 1851L)\n\
    \    0L\n    >>> multiply(14L, -15L)\n    20L\n    \n*/\nlong multiply(long a,\
    \ long b) \n{\n    return (a % 10) * (b % 10);\n}\nunittest\n{\n    alias candidate\
    \ = multiply;\n\n    assert(candidate(148L, 412L) == 16L);\n    assert(candidate(19L,\
    \ 28L) == 72L);\n    assert(candidate(2020L, 1851L) == 0L);\n    assert(candidate(14L,\
    \ -15L) == 20L);\n    assert(candidate(76L, 67L) == 42L);\n    assert(candidate(17L,\
    \ 27L) == 49L);\n    assert(candidate(0L, 1L) == 0L);\n    assert(candidate(0L,\
    \ 0L) == 0L);\n}\nvoid main(){}"
  status: Exception
  stderr: 'core.exception.AssertError@/tmp/tmp1saqvwe8.d(29): unittest failure

    ----------------

    ??:? _d_unittestp [0x427de5]

    ??:? void tmp1saqvwe8.__unittest_L22_C1() [0x427ac4]

    ??:? void tmp1saqvwe8.__modtest() [0x427b68]

    ??:? int core.runtime.runModuleUnitTests().__foreachbody2(object.ModuleInfo*)
    [0x42bb0b]

    ??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)).__lambda2(immutable(object.ModuleInfo*))
    [0x42a99e]

    ??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))).__foreachbody2(ref
    rt.sections_elf_shared.DSO) [0x42fb31]

    ??:? int rt.sections_elf_shared.DSO.opApply(scope int delegate(ref rt.sections_elf_shared.DSO))
    [0x42ffe0]

    ??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*)))
    [0x42fabd]

    ??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)) [0x42a975]

    ??:? runModuleUnitTests [0x42b8e1]

    ??:? void rt.dmain2._d_run_main(int, char**, extern (C) int function(char[][])*).runAll()
    [0x428234]

    ??:? void rt.dmain2._d_r'
  stdout: ''
  timestamp: 1660164228
- exit_code: 1
  program: "import std.typecons;\nimport std.math;\n/*\nComplete the function that\
    \ takes two integers and returns \n    the product of their unit digits.\n   \
    \ Assume the input is always valid.\n    Examples:\n    >>> multiply(148L, 412L)\n\
    \    16L\n    >>> multiply(19L, 28L)\n    72L\n    >>> multiply(2020L, 1851L)\n\
    \    0L\n    >>> multiply(14L, -15L)\n    20L\n    \n*/\nlong multiply(long a,\
    \ long b) \n{\n    return (a % 10) * (b % 10);\n}\nunittest\n{\n    alias candidate\
    \ = multiply;\n\n    assert(candidate(148L, 412L) == 16L);\n    assert(candidate(19L,\
    \ 28L) == 72L);\n    assert(candidate(2020L, 1851L) == 0L);\n    assert(candidate(14L,\
    \ -15L) == 20L);\n    assert(candidate(76L, 67L) == 42L);\n    assert(candidate(17L,\
    \ 27L) == 49L);\n    assert(candidate(0L, 1L) == 0L);\n    assert(candidate(0L,\
    \ 0L) == 0L);\n}\nvoid main(){}"
  status: Exception
  stderr: 'core.exception.AssertError@/tmp/tmp1saqvwe8.d(29): unittest failure

    ----------------

    ??:? _d_unittestp [0x427de5]

    ??:? void tmp1saqvwe8.__unittest_L22_C1() [0x427ac4]

    ??:? void tmp1saqvwe8.__modtest() [0x427b68]

    ??:? int core.runtime.runModuleUnitTests().__foreachbody2(object.ModuleInfo*)
    [0x42bb0b]

    ??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)).__lambda2(immutable(object.ModuleInfo*))
    [0x42a99e]

    ??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))).__foreachbody2(ref
    rt.sections_elf_shared.DSO) [0x42fb31]

    ??:? int rt.sections_elf_shared.DSO.opApply(scope int delegate(ref rt.sections_elf_shared.DSO))
    [0x42ffe0]

    ??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*)))
    [0x42fabd]

    ??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)) [0x42a975]

    ??:? runModuleUnitTests [0x42b8e1]

    ??:? void rt.dmain2._d_run_main(int, char**, extern (C) int function(char[][])*).runAll()
    [0x428234]

    ??:? void rt.dmain2._d_r'
  stdout: ''
  timestamp: 1660164228
- exit_code: 1
  program: "import std.typecons;\nimport std.math;\n/*\nComplete the function that\
    \ takes two integers and returns \n    the product of their unit digits.\n   \
    \ Assume the input is always valid.\n    Examples:\n    >>> multiply(148L, 412L)\n\
    \    16L\n    >>> multiply(19L, 28L)\n    72L\n    >>> multiply(2020L, 1851L)\n\
    \    0L\n    >>> multiply(14L, -15L)\n    20L\n    \n*/\nlong multiply(long a,\
    \ long b) \n{\n    return (a % 10) * (b % 10);\n}\nunittest\n{\n    alias candidate\
    \ = multiply;\n\n    assert(candidate(148L, 412L) == 16L);\n    assert(candidate(19L,\
    \ 28L) == 72L);\n    assert(candidate(2020L, 1851L) == 0L);\n    assert(candidate(14L,\
    \ -15L) == 20L);\n    assert(candidate(76L, 67L) == 42L);\n    assert(candidate(17L,\
    \ 27L) == 49L);\n    assert(candidate(0L, 1L) == 0L);\n    assert(candidate(0L,\
    \ 0L) == 0L);\n}\nvoid main(){}"
  status: Exception
  stderr: 'core.exception.AssertError@/tmp/tmp1saqvwe8.d(29): unittest failure

    ----------------

    ??:? _d_unittestp [0x427de5]

    ??:? void tmp1saqvwe8.__unittest_L22_C1() [0x427ac4]

    ??:? void tmp1saqvwe8.__modtest() [0x427b68]

    ??:? int core.runtime.runModuleUnitTests().__foreachbody2(object.ModuleInfo*)
    [0x42bb0b]

    ??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)).__lambda2(immutable(object.ModuleInfo*))
    [0x42a99e]

    ??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))).__foreachbody2(ref
    rt.sections_elf_shared.DSO) [0x42fb31]

    ??:? int rt.sections_elf_shared.DSO.opApply(scope int delegate(ref rt.sections_elf_shared.DSO))
    [0x42ffe0]

    ??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*)))
    [0x42fabd]

    ??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)) [0x42a975]

    ??:? runModuleUnitTests [0x42b8e1]

    ??:? void rt.dmain2._d_run_main(int, char**, extern (C) int function(char[][])*).runAll()
    [0x428234]

    ??:? void rt.dmain2._d_r'
  stdout: ''
  timestamp: 1660164228
- exit_code: 1
  program: "import std.typecons;\nimport std.math;\n/*\nComplete the function that\
    \ takes two integers and returns \n    the product of their unit digits.\n   \
    \ Assume the input is always valid.\n    Examples:\n    >>> multiply(148L, 412L)\n\
    \    16L\n    >>> multiply(19L, 28L)\n    72L\n    >>> multiply(2020L, 1851L)\n\
    \    0L\n    >>> multiply(14L, -15L)\n    20L\n    \n*/\nlong multiply(long a,\
    \ long b) \n{\n    return (a % 10) * (b % 10);\n}\nunittest\n{\n    alias candidate\
    \ = multiply;\n\n    assert(candidate(148L, 412L) == 16L);\n    assert(candidate(19L,\
    \ 28L) == 72L);\n    assert(candidate(2020L, 1851L) == 0L);\n    assert(candidate(14L,\
    \ -15L) == 20L);\n    assert(candidate(76L, 67L) == 42L);\n    assert(candidate(17L,\
    \ 27L) == 49L);\n    assert(candidate(0L, 1L) == 0L);\n    assert(candidate(0L,\
    \ 0L) == 0L);\n}\nvoid main(){}"
  status: Exception
  stderr: 'core.exception.AssertError@/tmp/tmp1saqvwe8.d(29): unittest failure

    ----------------

    ??:? _d_unittestp [0x427de5]

    ??:? void tmp1saqvwe8.__unittest_L22_C1() [0x427ac4]

    ??:? void tmp1saqvwe8.__modtest() [0x427b68]

    ??:? int core.runtime.runModuleUnitTests().__foreachbody2(object.ModuleInfo*)
    [0x42bb0b]

    ??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)).__lambda2(immutable(object.ModuleInfo*))
    [0x42a99e]

    ??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))).__foreachbody2(ref
    rt.sections_elf_shared.DSO) [0x42fb31]

    ??:? int rt.sections_elf_shared.DSO.opApply(scope int delegate(ref rt.sections_elf_shared.DSO))
    [0x42ffe0]

    ??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*)))
    [0x42fabd]

    ??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)) [0x42a975]

    ??:? runModuleUnitTests [0x42b8e1]

    ??:? void rt.dmain2._d_run_main(int, char**, extern (C) int function(char[][])*).runAll()
    [0x428234]

    ??:? void rt.dmain2._d_r'
  stdout: ''
  timestamp: 1660164228
- exit_code: 1
  program: "import std.typecons;\nimport std.math;\n/*\nComplete the function that\
    \ takes two integers and returns \n    the product of their unit digits.\n   \
    \ Assume the input is always valid.\n    Examples:\n    >>> multiply(148L, 412L)\n\
    \    16L\n    >>> multiply(19L, 28L)\n    72L\n    >>> multiply(2020L, 1851L)\n\
    \    0L\n    >>> multiply(14L, -15L)\n    20L\n    \n*/\nlong multiply(long a,\
    \ long b) \n{\n    return (a % 10) * (b % 10);\n}\nunittest\n{\n    alias candidate\
    \ = multiply;\n\n    assert(candidate(148L, 412L) == 16L);\n    assert(candidate(19L,\
    \ 28L) == 72L);\n    assert(candidate(2020L, 1851L) == 0L);\n    assert(candidate(14L,\
    \ -15L) == 20L);\n    assert(candidate(76L, 67L) == 42L);\n    assert(candidate(17L,\
    \ 27L) == 49L);\n    assert(candidate(0L, 1L) == 0L);\n    assert(candidate(0L,\
    \ 0L) == 0L);\n}\nvoid main(){}"
  status: Exception
  stderr: 'core.exception.AssertError@/tmp/tmp1saqvwe8.d(29): unittest failure

    ----------------

    ??:? _d_unittestp [0x427de5]

    ??:? void tmp1saqvwe8.__unittest_L22_C1() [0x427ac4]

    ??:? void tmp1saqvwe8.__modtest() [0x427b68]

    ??:? int core.runtime.runModuleUnitTests().__foreachbody2(object.ModuleInfo*)
    [0x42bb0b]

    ??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)).__lambda2(immutable(object.ModuleInfo*))
    [0x42a99e]

    ??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))).__foreachbody2(ref
    rt.sections_elf_shared.DSO) [0x42fb31]

    ??:? int rt.sections_elf_shared.DSO.opApply(scope int delegate(ref rt.sections_elf_shared.DSO))
    [0x42ffe0]

    ??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*)))
    [0x42fabd]

    ??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)) [0x42a975]

    ??:? runModuleUnitTests [0x42b8e1]

    ??:? void rt.dmain2._d_run_main(int, char**, extern (C) int function(char[][])*).runAll()
    [0x428234]

    ??:? void rt.dmain2._d_r'
  stdout: ''
  timestamp: 1660164228
- exit_code: 1
  program: "import std.typecons;\nimport std.math;\n/*\nComplete the function that\
    \ takes two integers and returns \n    the product of their unit digits.\n   \
    \ Assume the input is always valid.\n    Examples:\n    >>> multiply(148L, 412L)\n\
    \    16L\n    >>> multiply(19L, 28L)\n    72L\n    >>> multiply(2020L, 1851L)\n\
    \    0L\n    >>> multiply(14L, -15L)\n    20L\n    \n*/\nlong multiply(long a,\
    \ long b) \n{\n    return (a % 10) * (b % 10);\n}\nunittest\n{\n    alias candidate\
    \ = multiply;\n\n    assert(candidate(148L, 412L) == 16L);\n    assert(candidate(19L,\
    \ 28L) == 72L);\n    assert(candidate(2020L, 1851L) == 0L);\n    assert(candidate(14L,\
    \ -15L) == 20L);\n    assert(candidate(76L, 67L) == 42L);\n    assert(candidate(17L,\
    \ 27L) == 49L);\n    assert(candidate(0L, 1L) == 0L);\n    assert(candidate(0L,\
    \ 0L) == 0L);\n}\nvoid main(){}"
  status: Exception
  stderr: 'core.exception.AssertError@/tmp/tmp1saqvwe8.d(29): unittest failure

    ----------------

    ??:? _d_unittestp [0x427de5]

    ??:? void tmp1saqvwe8.__unittest_L22_C1() [0x427ac4]

    ??:? void tmp1saqvwe8.__modtest() [0x427b68]

    ??:? int core.runtime.runModuleUnitTests().__foreachbody2(object.ModuleInfo*)
    [0x42bb0b]

    ??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)).__lambda2(immutable(object.ModuleInfo*))
    [0x42a99e]

    ??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))).__foreachbody2(ref
    rt.sections_elf_shared.DSO) [0x42fb31]

    ??:? int rt.sections_elf_shared.DSO.opApply(scope int delegate(ref rt.sections_elf_shared.DSO))
    [0x42ffe0]

    ??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*)))
    [0x42fabd]

    ??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)) [0x42a975]

    ??:? runModuleUnitTests [0x42b8e1]

    ??:? void rt.dmain2._d_run_main(int, char**, extern (C) int function(char[][])*).runAll()
    [0x428234]

    ??:? void rt.dmain2._d_r'
  stdout: ''
  timestamp: 1660164228
- exit_code: 1
  program: "import std.typecons;\nimport std.math;\n/*\nComplete the function that\
    \ takes two integers and returns \n    the product of their unit digits.\n   \
    \ Assume the input is always valid.\n    Examples:\n    >>> multiply(148L, 412L)\n\
    \    16L\n    >>> multiply(19L, 28L)\n    72L\n    >>> multiply(2020L, 1851L)\n\
    \    0L\n    >>> multiply(14L, -15L)\n    20L\n    \n*/\nlong multiply(long a,\
    \ long b) \n{\n    long a1 = a % 10;\n    long b1 = b % 10;\n    return a1 * b1;\n\
    }\nunittest\n{\n    alias candidate = multiply;\n\n    assert(candidate(148L,\
    \ 412L) == 16L);\n    assert(candidate(19L, 28L) == 72L);\n    assert(candidate(2020L,\
    \ 1851L) == 0L);\n    assert(candidate(14L, -15L) == 20L);\n    assert(candidate(76L,\
    \ 67L) == 42L);\n    assert(candidate(17L, 27L) == 49L);\n    assert(candidate(0L,\
    \ 1L) == 0L);\n    assert(candidate(0L, 0L) == 0L);\n}\nvoid main(){}"
  status: Exception
  stderr: 'core.exception.AssertError@/tmp/tmpnsrb48w7.d(31): unittest failure

    ----------------

    ??:? _d_unittestp [0x427ddd]

    ??:? void tmpnsrb48w7.__unittest_L24_C1() [0x427ab8]

    ??:? void tmpnsrb48w7.__modtest() [0x427b5c]

    ??:? int core.runtime.runModuleUnitTests().__foreachbody2(object.ModuleInfo*)
    [0x42bb03]

    ??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)).__lambda2(immutable(object.ModuleInfo*))
    [0x42a996]

    ??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))).__foreachbody2(ref
    rt.sections_elf_shared.DSO) [0x42fb29]

    ??:? int rt.sections_elf_shared.DSO.opApply(scope int delegate(ref rt.sections_elf_shared.DSO))
    [0x42ffd8]

    ??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*)))
    [0x42fab5]

    ??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)) [0x42a96d]

    ??:? runModuleUnitTests [0x42b8d9]

    ??:? void rt.dmain2._d_run_main(int, char**, extern (C) int function(char[][])*).runAll()
    [0x42822c]

    ??:? void rt.dmain2._d_r'
  stdout: ''
  timestamp: 1660164228
- exit_code: 1
  program: "import std.typecons;\nimport std.math;\n/*\nComplete the function that\
    \ takes two integers and returns \n    the product of their unit digits.\n   \
    \ Assume the input is always valid.\n    Examples:\n    >>> multiply(148L, 412L)\n\
    \    16L\n    >>> multiply(19L, 28L)\n    72L\n    >>> multiply(2020L, 1851L)\n\
    \    0L\n    >>> multiply(14L, -15L)\n    20L\n    \n*/\nlong multiply(long a,\
    \ long b) \n{\n    return (a % 10) * (b % 10);\n}\nunittest\n{\n    alias candidate\
    \ = multiply;\n\n    assert(candidate(148L, 412L) == 16L);\n    assert(candidate(19L,\
    \ 28L) == 72L);\n    assert(candidate(2020L, 1851L) == 0L);\n    assert(candidate(14L,\
    \ -15L) == 20L);\n    assert(candidate(76L, 67L) == 42L);\n    assert(candidate(17L,\
    \ 27L) == 49L);\n    assert(candidate(0L, 1L) == 0L);\n    assert(candidate(0L,\
    \ 0L) == 0L);\n}\nvoid main(){}"
  status: Exception
  stderr: 'core.exception.AssertError@/tmp/tmp1saqvwe8.d(29): unittest failure

    ----------------

    ??:? _d_unittestp [0x427de5]

    ??:? void tmp1saqvwe8.__unittest_L22_C1() [0x427ac4]

    ??:? void tmp1saqvwe8.__modtest() [0x427b68]

    ??:? int core.runtime.runModuleUnitTests().__foreachbody2(object.ModuleInfo*)
    [0x42bb0b]

    ??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)).__lambda2(immutable(object.ModuleInfo*))
    [0x42a99e]

    ??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))).__foreachbody2(ref
    rt.sections_elf_shared.DSO) [0x42fb31]

    ??:? int rt.sections_elf_shared.DSO.opApply(scope int delegate(ref rt.sections_elf_shared.DSO))
    [0x42ffe0]

    ??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*)))
    [0x42fabd]

    ??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)) [0x42a975]

    ??:? runModuleUnitTests [0x42b8e1]

    ??:? void rt.dmain2._d_run_main(int, char**, extern (C) int function(char[][])*).runAll()
    [0x428234]

    ??:? void rt.dmain2._d_r'
  stdout: ''
  timestamp: 1660164228
- exit_code: 1
  program: "import std.typecons;\nimport std.math;\n/*\nComplete the function that\
    \ takes two integers and returns \n    the product of their unit digits.\n   \
    \ Assume the input is always valid.\n    Examples:\n    >>> multiply(148L, 412L)\n\
    \    16L\n    >>> multiply(19L, 28L)\n    72L\n    >>> multiply(2020L, 1851L)\n\
    \    0L\n    >>> multiply(14L, -15L)\n    20L\n    \n*/\nlong multiply(long a,\
    \ long b) \n{\n    return (a % 10) * (b % 10);\n}\nunittest\n{\n    alias candidate\
    \ = multiply;\n\n    assert(candidate(148L, 412L) == 16L);\n    assert(candidate(19L,\
    \ 28L) == 72L);\n    assert(candidate(2020L, 1851L) == 0L);\n    assert(candidate(14L,\
    \ -15L) == 20L);\n    assert(candidate(76L, 67L) == 42L);\n    assert(candidate(17L,\
    \ 27L) == 49L);\n    assert(candidate(0L, 1L) == 0L);\n    assert(candidate(0L,\
    \ 0L) == 0L);\n}\nvoid main(){}"
  status: Exception
  stderr: 'core.exception.AssertError@/tmp/tmp1saqvwe8.d(29): unittest failure

    ----------------

    ??:? _d_unittestp [0x427de5]

    ??:? void tmp1saqvwe8.__unittest_L22_C1() [0x427ac4]

    ??:? void tmp1saqvwe8.__modtest() [0x427b68]

    ??:? int core.runtime.runModuleUnitTests().__foreachbody2(object.ModuleInfo*)
    [0x42bb0b]

    ??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)).__lambda2(immutable(object.ModuleInfo*))
    [0x42a99e]

    ??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))).__foreachbody2(ref
    rt.sections_elf_shared.DSO) [0x42fb31]

    ??:? int rt.sections_elf_shared.DSO.opApply(scope int delegate(ref rt.sections_elf_shared.DSO))
    [0x42ffe0]

    ??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*)))
    [0x42fabd]

    ??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)) [0x42a975]

    ??:? runModuleUnitTests [0x42b8e1]

    ??:? void rt.dmain2._d_run_main(int, char**, extern (C) int function(char[][])*).runAll()
    [0x428234]

    ??:? void rt.dmain2._d_r'
  stdout: ''
  timestamp: 1660164228
- exit_code: 1
  program: "import std.typecons;\nimport std.math;\n/*\nComplete the function that\
    \ takes two integers and returns \n    the product of their unit digits.\n   \
    \ Assume the input is always valid.\n    Examples:\n    >>> multiply(148L, 412L)\n\
    \    16L\n    >>> multiply(19L, 28L)\n    72L\n    >>> multiply(2020L, 1851L)\n\
    \    0L\n    >>> multiply(14L, -15L)\n    20L\n    \n*/\nlong multiply(long a,\
    \ long b) \n{\n    return (a % 10) * (b % 10);\n}\nunittest\n{\n    alias candidate\
    \ = multiply;\n\n    assert(candidate(148L, 412L) == 16L);\n    assert(candidate(19L,\
    \ 28L) == 72L);\n    assert(candidate(2020L, 1851L) == 0L);\n    assert(candidate(14L,\
    \ -15L) == 20L);\n    assert(candidate(76L, 67L) == 42L);\n    assert(candidate(17L,\
    \ 27L) == 49L);\n    assert(candidate(0L, 1L) == 0L);\n    assert(candidate(0L,\
    \ 0L) == 0L);\n}\nvoid main(){}"
  status: Exception
  stderr: 'core.exception.AssertError@/tmp/tmp1saqvwe8.d(29): unittest failure

    ----------------

    ??:? _d_unittestp [0x427de5]

    ??:? void tmp1saqvwe8.__unittest_L22_C1() [0x427ac4]

    ??:? void tmp1saqvwe8.__modtest() [0x427b68]

    ??:? int core.runtime.runModuleUnitTests().__foreachbody2(object.ModuleInfo*)
    [0x42bb0b]

    ??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)).__lambda2(immutable(object.ModuleInfo*))
    [0x42a99e]

    ??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))).__foreachbody2(ref
    rt.sections_elf_shared.DSO) [0x42fb31]

    ??:? int rt.sections_elf_shared.DSO.opApply(scope int delegate(ref rt.sections_elf_shared.DSO))
    [0x42ffe0]

    ??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*)))
    [0x42fabd]

    ??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)) [0x42a975]

    ??:? runModuleUnitTests [0x42b8e1]

    ??:? void rt.dmain2._d_run_main(int, char**, extern (C) int function(char[][])*).runAll()
    [0x428234]

    ??:? void rt.dmain2._d_r'
  stdout: ''
  timestamp: 1660164228
- exit_code: 1
  program: "import std.typecons;\nimport std.math;\n/*\nComplete the function that\
    \ takes two integers and returns \n    the product of their unit digits.\n   \
    \ Assume the input is always valid.\n    Examples:\n    >>> multiply(148L, 412L)\n\
    \    16L\n    >>> multiply(19L, 28L)\n    72L\n    >>> multiply(2020L, 1851L)\n\
    \    0L\n    >>> multiply(14L, -15L)\n    20L\n    \n*/\nlong multiply(long a,\
    \ long b) \n{\n    return (a % 10) * (b % 10);\n}\nunittest\n{\n    alias candidate\
    \ = multiply;\n\n    assert(candidate(148L, 412L) == 16L);\n    assert(candidate(19L,\
    \ 28L) == 72L);\n    assert(candidate(2020L, 1851L) == 0L);\n    assert(candidate(14L,\
    \ -15L) == 20L);\n    assert(candidate(76L, 67L) == 42L);\n    assert(candidate(17L,\
    \ 27L) == 49L);\n    assert(candidate(0L, 1L) == 0L);\n    assert(candidate(0L,\
    \ 0L) == 0L);\n}\nvoid main(){}"
  status: Exception
  stderr: 'core.exception.AssertError@/tmp/tmp1saqvwe8.d(29): unittest failure

    ----------------

    ??:? _d_unittestp [0x427de5]

    ??:? void tmp1saqvwe8.__unittest_L22_C1() [0x427ac4]

    ??:? void tmp1saqvwe8.__modtest() [0x427b68]

    ??:? int core.runtime.runModuleUnitTests().__foreachbody2(object.ModuleInfo*)
    [0x42bb0b]

    ??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)).__lambda2(immutable(object.ModuleInfo*))
    [0x42a99e]

    ??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))).__foreachbody2(ref
    rt.sections_elf_shared.DSO) [0x42fb31]

    ??:? int rt.sections_elf_shared.DSO.opApply(scope int delegate(ref rt.sections_elf_shared.DSO))
    [0x42ffe0]

    ??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*)))
    [0x42fabd]

    ??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)) [0x42a975]

    ??:? runModuleUnitTests [0x42b8e1]

    ??:? void rt.dmain2._d_run_main(int, char**, extern (C) int function(char[][])*).runAll()
    [0x428234]

    ??:? void rt.dmain2._d_r'
  stdout: ''
  timestamp: 1660164228
- exit_code: 1
  program: "import std.typecons;\nimport std.math;\n/*\nComplete the function that\
    \ takes two integers and returns \n    the product of their unit digits.\n   \
    \ Assume the input is always valid.\n    Examples:\n    >>> multiply(148L, 412L)\n\
    \    16L\n    >>> multiply(19L, 28L)\n    72L\n    >>> multiply(2020L, 1851L)\n\
    \    0L\n    >>> multiply(14L, -15L)\n    20L\n    \n*/\nlong multiply(long a,\
    \ long b) \n{\n    return (a % 10) * (b % 10);\n}\nunittest\n{\n    alias candidate\
    \ = multiply;\n\n    assert(candidate(148L, 412L) == 16L);\n    assert(candidate(19L,\
    \ 28L) == 72L);\n    assert(candidate(2020L, 1851L) == 0L);\n    assert(candidate(14L,\
    \ -15L) == 20L);\n    assert(candidate(76L, 67L) == 42L);\n    assert(candidate(17L,\
    \ 27L) == 49L);\n    assert(candidate(0L, 1L) == 0L);\n    assert(candidate(0L,\
    \ 0L) == 0L);\n}\nvoid main(){}"
  status: Exception
  stderr: 'core.exception.AssertError@/tmp/tmp1saqvwe8.d(29): unittest failure

    ----------------

    ??:? _d_unittestp [0x427de5]

    ??:? void tmp1saqvwe8.__unittest_L22_C1() [0x427ac4]

    ??:? void tmp1saqvwe8.__modtest() [0x427b68]

    ??:? int core.runtime.runModuleUnitTests().__foreachbody2(object.ModuleInfo*)
    [0x42bb0b]

    ??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)).__lambda2(immutable(object.ModuleInfo*))
    [0x42a99e]

    ??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))).__foreachbody2(ref
    rt.sections_elf_shared.DSO) [0x42fb31]

    ??:? int rt.sections_elf_shared.DSO.opApply(scope int delegate(ref rt.sections_elf_shared.DSO))
    [0x42ffe0]

    ??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*)))
    [0x42fabd]

    ??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)) [0x42a975]

    ??:? runModuleUnitTests [0x42b8e1]

    ??:? void rt.dmain2._d_run_main(int, char**, extern (C) int function(char[][])*).runAll()
    [0x428234]

    ??:? void rt.dmain2._d_r'
  stdout: ''
  timestamp: 1660164228
- exit_code: 1
  program: "import std.typecons;\nimport std.math;\n/*\nComplete the function that\
    \ takes two integers and returns \n    the product of their unit digits.\n   \
    \ Assume the input is always valid.\n    Examples:\n    >>> multiply(148L, 412L)\n\
    \    16L\n    >>> multiply(19L, 28L)\n    72L\n    >>> multiply(2020L, 1851L)\n\
    \    0L\n    >>> multiply(14L, -15L)\n    20L\n    \n*/\nlong multiply(long a,\
    \ long b) \n{\n    return (a % 10) * (b % 10);\n}\nunittest\n{\n    alias candidate\
    \ = multiply;\n\n    assert(candidate(148L, 412L) == 16L);\n    assert(candidate(19L,\
    \ 28L) == 72L);\n    assert(candidate(2020L, 1851L) == 0L);\n    assert(candidate(14L,\
    \ -15L) == 20L);\n    assert(candidate(76L, 67L) == 42L);\n    assert(candidate(17L,\
    \ 27L) == 49L);\n    assert(candidate(0L, 1L) == 0L);\n    assert(candidate(0L,\
    \ 0L) == 0L);\n}\nvoid main(){}"
  status: Exception
  stderr: 'core.exception.AssertError@/tmp/tmp1saqvwe8.d(29): unittest failure

    ----------------

    ??:? _d_unittestp [0x427de5]

    ??:? void tmp1saqvwe8.__unittest_L22_C1() [0x427ac4]

    ??:? void tmp1saqvwe8.__modtest() [0x427b68]

    ??:? int core.runtime.runModuleUnitTests().__foreachbody2(object.ModuleInfo*)
    [0x42bb0b]

    ??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)).__lambda2(immutable(object.ModuleInfo*))
    [0x42a99e]

    ??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))).__foreachbody2(ref
    rt.sections_elf_shared.DSO) [0x42fb31]

    ??:? int rt.sections_elf_shared.DSO.opApply(scope int delegate(ref rt.sections_elf_shared.DSO))
    [0x42ffe0]

    ??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*)))
    [0x42fabd]

    ??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)) [0x42a975]

    ??:? runModuleUnitTests [0x42b8e1]

    ??:? void rt.dmain2._d_run_main(int, char**, extern (C) int function(char[][])*).runAll()
    [0x428234]

    ??:? void rt.dmain2._d_r'
  stdout: ''
  timestamp: 1660164228
- exit_code: 1
  program: "import std.typecons;\nimport std.math;\n/*\nComplete the function that\
    \ takes two integers and returns \n    the product of their unit digits.\n   \
    \ Assume the input is always valid.\n    Examples:\n    >>> multiply(148L, 412L)\n\
    \    16L\n    >>> multiply(19L, 28L)\n    72L\n    >>> multiply(2020L, 1851L)\n\
    \    0L\n    >>> multiply(14L, -15L)\n    20L\n    \n*/\nlong multiply(long a,\
    \ long b) \n{\n    return (a % 10) * (b % 10);\n}\nunittest\n{\n    alias candidate\
    \ = multiply;\n\n    assert(candidate(148L, 412L) == 16L);\n    assert(candidate(19L,\
    \ 28L) == 72L);\n    assert(candidate(2020L, 1851L) == 0L);\n    assert(candidate(14L,\
    \ -15L) == 20L);\n    assert(candidate(76L, 67L) == 42L);\n    assert(candidate(17L,\
    \ 27L) == 49L);\n    assert(candidate(0L, 1L) == 0L);\n    assert(candidate(0L,\
    \ 0L) == 0L);\n}\nvoid main(){}"
  status: Exception
  stderr: 'core.exception.AssertError@/tmp/tmp1saqvwe8.d(29): unittest failure

    ----------------

    ??:? _d_unittestp [0x427de5]

    ??:? void tmp1saqvwe8.__unittest_L22_C1() [0x427ac4]

    ??:? void tmp1saqvwe8.__modtest() [0x427b68]

    ??:? int core.runtime.runModuleUnitTests().__foreachbody2(object.ModuleInfo*)
    [0x42bb0b]

    ??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)).__lambda2(immutable(object.ModuleInfo*))
    [0x42a99e]

    ??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))).__foreachbody2(ref
    rt.sections_elf_shared.DSO) [0x42fb31]

    ??:? int rt.sections_elf_shared.DSO.opApply(scope int delegate(ref rt.sections_elf_shared.DSO))
    [0x42ffe0]

    ??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*)))
    [0x42fabd]

    ??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)) [0x42a975]

    ??:? runModuleUnitTests [0x42b8e1]

    ??:? void rt.dmain2._d_run_main(int, char**, extern (C) int function(char[][])*).runAll()
    [0x428234]

    ??:? void rt.dmain2._d_r'
  stdout: ''
  timestamp: 1660164228
- exit_code: 1
  program: "import std.typecons;\nimport std.math;\n/*\nComplete the function that\
    \ takes two integers and returns \n    the product of their unit digits.\n   \
    \ Assume the input is always valid.\n    Examples:\n    >>> multiply(148L, 412L)\n\
    \    16L\n    >>> multiply(19L, 28L)\n    72L\n    >>> multiply(2020L, 1851L)\n\
    \    0L\n    >>> multiply(14L, -15L)\n    20L\n    \n*/\nlong multiply(long a,\
    \ long b) \n{\n    return (a % 10) * (b % 10);\n}\nunittest\n{\n    alias candidate\
    \ = multiply;\n\n    assert(candidate(148L, 412L) == 16L);\n    assert(candidate(19L,\
    \ 28L) == 72L);\n    assert(candidate(2020L, 1851L) == 0L);\n    assert(candidate(14L,\
    \ -15L) == 20L);\n    assert(candidate(76L, 67L) == 42L);\n    assert(candidate(17L,\
    \ 27L) == 49L);\n    assert(candidate(0L, 1L) == 0L);\n    assert(candidate(0L,\
    \ 0L) == 0L);\n}\nvoid main(){}"
  status: Exception
  stderr: 'core.exception.AssertError@/tmp/tmp1saqvwe8.d(29): unittest failure

    ----------------

    ??:? _d_unittestp [0x427de5]

    ??:? void tmp1saqvwe8.__unittest_L22_C1() [0x427ac4]

    ??:? void tmp1saqvwe8.__modtest() [0x427b68]

    ??:? int core.runtime.runModuleUnitTests().__foreachbody2(object.ModuleInfo*)
    [0x42bb0b]

    ??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)).__lambda2(immutable(object.ModuleInfo*))
    [0x42a99e]

    ??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))).__foreachbody2(ref
    rt.sections_elf_shared.DSO) [0x42fb31]

    ??:? int rt.sections_elf_shared.DSO.opApply(scope int delegate(ref rt.sections_elf_shared.DSO))
    [0x42ffe0]

    ??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*)))
    [0x42fabd]

    ??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)) [0x42a975]

    ??:? runModuleUnitTests [0x42b8e1]

    ??:? void rt.dmain2._d_run_main(int, char**, extern (C) int function(char[][])*).runAll()
    [0x428234]

    ??:? void rt.dmain2._d_r'
  stdout: ''
  timestamp: 1660164228
- exit_code: 1
  program: "import std.typecons;\nimport std.math;\n/*\nComplete the function that\
    \ takes two integers and returns \n    the product of their unit digits.\n   \
    \ Assume the input is always valid.\n    Examples:\n    >>> multiply(148L, 412L)\n\
    \    16L\n    >>> multiply(19L, 28L)\n    72L\n    >>> multiply(2020L, 1851L)\n\
    \    0L\n    >>> multiply(14L, -15L)\n    20L\n    \n*/\nlong multiply(long a,\
    \ long b) \n{\n    return (a % 10) * (b % 10);\n}\nunittest\n{\n    alias candidate\
    \ = multiply;\n\n    assert(candidate(148L, 412L) == 16L);\n    assert(candidate(19L,\
    \ 28L) == 72L);\n    assert(candidate(2020L, 1851L) == 0L);\n    assert(candidate(14L,\
    \ -15L) == 20L);\n    assert(candidate(76L, 67L) == 42L);\n    assert(candidate(17L,\
    \ 27L) == 49L);\n    assert(candidate(0L, 1L) == 0L);\n    assert(candidate(0L,\
    \ 0L) == 0L);\n}\nvoid main(){}"
  status: Exception
  stderr: 'core.exception.AssertError@/tmp/tmp1saqvwe8.d(29): unittest failure

    ----------------

    ??:? _d_unittestp [0x427de5]

    ??:? void tmp1saqvwe8.__unittest_L22_C1() [0x427ac4]

    ??:? void tmp1saqvwe8.__modtest() [0x427b68]

    ??:? int core.runtime.runModuleUnitTests().__foreachbody2(object.ModuleInfo*)
    [0x42bb0b]

    ??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)).__lambda2(immutable(object.ModuleInfo*))
    [0x42a99e]

    ??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))).__foreachbody2(ref
    rt.sections_elf_shared.DSO) [0x42fb31]

    ??:? int rt.sections_elf_shared.DSO.opApply(scope int delegate(ref rt.sections_elf_shared.DSO))
    [0x42ffe0]

    ??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*)))
    [0x42fabd]

    ??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)) [0x42a975]

    ??:? runModuleUnitTests [0x42b8e1]

    ??:? void rt.dmain2._d_run_main(int, char**, extern (C) int function(char[][])*).runAll()
    [0x428234]

    ??:? void rt.dmain2._d_r'
  stdout: ''
  timestamp: 1660164228
- exit_code: 1
  program: "import std.typecons;\nimport std.math;\n/*\nComplete the function that\
    \ takes two integers and returns \n    the product of their unit digits.\n   \
    \ Assume the input is always valid.\n    Examples:\n    >>> multiply(148L, 412L)\n\
    \    16L\n    >>> multiply(19L, 28L)\n    72L\n    >>> multiply(2020L, 1851L)\n\
    \    0L\n    >>> multiply(14L, -15L)\n    20L\n    \n*/\nlong multiply(long a,\
    \ long b) \n{\n    return (a % 10) * (b % 10);\n}\nunittest\n{\n    alias candidate\
    \ = multiply;\n\n    assert(candidate(148L, 412L) == 16L);\n    assert(candidate(19L,\
    \ 28L) == 72L);\n    assert(candidate(2020L, 1851L) == 0L);\n    assert(candidate(14L,\
    \ -15L) == 20L);\n    assert(candidate(76L, 67L) == 42L);\n    assert(candidate(17L,\
    \ 27L) == 49L);\n    assert(candidate(0L, 1L) == 0L);\n    assert(candidate(0L,\
    \ 0L) == 0L);\n}\nvoid main(){}"
  status: Exception
  stderr: 'core.exception.AssertError@/tmp/tmp1saqvwe8.d(29): unittest failure

    ----------------

    ??:? _d_unittestp [0x427de5]

    ??:? void tmp1saqvwe8.__unittest_L22_C1() [0x427ac4]

    ??:? void tmp1saqvwe8.__modtest() [0x427b68]

    ??:? int core.runtime.runModuleUnitTests().__foreachbody2(object.ModuleInfo*)
    [0x42bb0b]

    ??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)).__lambda2(immutable(object.ModuleInfo*))
    [0x42a99e]

    ??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))).__foreachbody2(ref
    rt.sections_elf_shared.DSO) [0x42fb31]

    ??:? int rt.sections_elf_shared.DSO.opApply(scope int delegate(ref rt.sections_elf_shared.DSO))
    [0x42ffe0]

    ??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*)))
    [0x42fabd]

    ??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)) [0x42a975]

    ??:? runModuleUnitTests [0x42b8e1]

    ??:? void rt.dmain2._d_run_main(int, char**, extern (C) int function(char[][])*).runAll()
    [0x428234]

    ??:? void rt.dmain2._d_r'
  stdout: ''
  timestamp: 1660164228
- exit_code: 1
  program: "import std.typecons;\nimport std.math;\n/*\nComplete the function that\
    \ takes two integers and returns \n    the product of their unit digits.\n   \
    \ Assume the input is always valid.\n    Examples:\n    >>> multiply(148L, 412L)\n\
    \    16L\n    >>> multiply(19L, 28L)\n    72L\n    >>> multiply(2020L, 1851L)\n\
    \    0L\n    >>> multiply(14L, -15L)\n    20L\n    \n*/\nlong multiply(long a,\
    \ long b) \n{\n    return (a % 10) * (b % 10);\n}\nunittest\n{\n    alias candidate\
    \ = multiply;\n\n    assert(candidate(148L, 412L) == 16L);\n    assert(candidate(19L,\
    \ 28L) == 72L);\n    assert(candidate(2020L, 1851L) == 0L);\n    assert(candidate(14L,\
    \ -15L) == 20L);\n    assert(candidate(76L, 67L) == 42L);\n    assert(candidate(17L,\
    \ 27L) == 49L);\n    assert(candidate(0L, 1L) == 0L);\n    assert(candidate(0L,\
    \ 0L) == 0L);\n}\nvoid main(){}"
  status: Exception
  stderr: 'core.exception.AssertError@/tmp/tmp1saqvwe8.d(29): unittest failure

    ----------------

    ??:? _d_unittestp [0x427de5]

    ??:? void tmp1saqvwe8.__unittest_L22_C1() [0x427ac4]

    ??:? void tmp1saqvwe8.__modtest() [0x427b68]

    ??:? int core.runtime.runModuleUnitTests().__foreachbody2(object.ModuleInfo*)
    [0x42bb0b]

    ??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)).__lambda2(immutable(object.ModuleInfo*))
    [0x42a99e]

    ??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))).__foreachbody2(ref
    rt.sections_elf_shared.DSO) [0x42fb31]

    ??:? int rt.sections_elf_shared.DSO.opApply(scope int delegate(ref rt.sections_elf_shared.DSO))
    [0x42ffe0]

    ??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*)))
    [0x42fabd]

    ??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)) [0x42a975]

    ??:? runModuleUnitTests [0x42b8e1]

    ??:? void rt.dmain2._d_run_main(int, char**, extern (C) int function(char[][])*).runAll()
    [0x428234]

    ??:? void rt.dmain2._d_r'
  stdout: ''
  timestamp: 1660164228
- exit_code: 0
  program: "import std.typecons;\nimport std.math;\n/*\nComplete the function that\
    \ takes two integers and returns \n    the product of their unit digits.\n   \
    \ Assume the input is always valid.\n    Examples:\n    >>> multiply(148L, 412L)\n\
    \    16L\n    >>> multiply(19L, 28L)\n    72L\n    >>> multiply(2020L, 1851L)\n\
    \    0L\n    >>> multiply(14L, -15L)\n    20L\n    \n*/\nlong multiply(long a,\
    \ long b) \n{\n    return abs(a % 10) * abs(b % 10);\n}\nunittest\n{\n    alias\
    \ candidate = multiply;\n\n    assert(candidate(148L, 412L) == 16L);\n    assert(candidate(19L,\
    \ 28L) == 72L);\n    assert(candidate(2020L, 1851L) == 0L);\n    assert(candidate(14L,\
    \ -15L) == 20L);\n    assert(candidate(76L, 67L) == 42L);\n    assert(candidate(17L,\
    \ 27L) == 49L);\n    assert(candidate(0L, 1L) == 0L);\n    assert(candidate(0L,\
    \ 0L) == 0L);\n}\nvoid main(){}"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660164228
- exit_code: 1
  program: "import std.typecons;\nimport std.math;\n/*\nComplete the function that\
    \ takes two integers and returns \n    the product of their unit digits.\n   \
    \ Assume the input is always valid.\n    Examples:\n    >>> multiply(148L, 412L)\n\
    \    16L\n    >>> multiply(19L, 28L)\n    72L\n    >>> multiply(2020L, 1851L)\n\
    \    0L\n    >>> multiply(14L, -15L)\n    20L\n    \n*/\nlong multiply(long a,\
    \ long b) \n{\n    return (a % 10) * (b % 10);\n}\nunittest\n{\n    alias candidate\
    \ = multiply;\n\n    assert(candidate(148L, 412L) == 16L);\n    assert(candidate(19L,\
    \ 28L) == 72L);\n    assert(candidate(2020L, 1851L) == 0L);\n    assert(candidate(14L,\
    \ -15L) == 20L);\n    assert(candidate(76L, 67L) == 42L);\n    assert(candidate(17L,\
    \ 27L) == 49L);\n    assert(candidate(0L, 1L) == 0L);\n    assert(candidate(0L,\
    \ 0L) == 0L);\n}\nvoid main(){}"
  status: Exception
  stderr: 'core.exception.AssertError@/tmp/tmp1saqvwe8.d(29): unittest failure

    ----------------

    ??:? _d_unittestp [0x427de5]

    ??:? void tmp1saqvwe8.__unittest_L22_C1() [0x427ac4]

    ??:? void tmp1saqvwe8.__modtest() [0x427b68]

    ??:? int core.runtime.runModuleUnitTests().__foreachbody2(object.ModuleInfo*)
    [0x42bb0b]

    ??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)).__lambda2(immutable(object.ModuleInfo*))
    [0x42a99e]

    ??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))).__foreachbody2(ref
    rt.sections_elf_shared.DSO) [0x42fb31]

    ??:? int rt.sections_elf_shared.DSO.opApply(scope int delegate(ref rt.sections_elf_shared.DSO))
    [0x42ffe0]

    ??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*)))
    [0x42fabd]

    ??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)) [0x42a975]

    ??:? runModuleUnitTests [0x42b8e1]

    ??:? void rt.dmain2._d_run_main(int, char**, extern (C) int function(char[][])*).runAll()
    [0x428234]

    ??:? void rt.dmain2._d_r'
  stdout: ''
  timestamp: 1660164228
- exit_code: 1
  program: "import std.typecons;\nimport std.math;\n/*\nComplete the function that\
    \ takes two integers and returns \n    the product of their unit digits.\n   \
    \ Assume the input is always valid.\n    Examples:\n    >>> multiply(148L, 412L)\n\
    \    16L\n    >>> multiply(19L, 28L)\n    72L\n    >>> multiply(2020L, 1851L)\n\
    \    0L\n    >>> multiply(14L, -15L)\n    20L\n    \n*/\nlong multiply(long a,\
    \ long b) \n{\n    return (a%10)*(b%10);\n}\nunittest\n{\n    alias candidate\
    \ = multiply;\n\n    assert(candidate(148L, 412L) == 16L);\n    assert(candidate(19L,\
    \ 28L) == 72L);\n    assert(candidate(2020L, 1851L) == 0L);\n    assert(candidate(14L,\
    \ -15L) == 20L);\n    assert(candidate(76L, 67L) == 42L);\n    assert(candidate(17L,\
    \ 27L) == 49L);\n    assert(candidate(0L, 1L) == 0L);\n    assert(candidate(0L,\
    \ 0L) == 0L);\n}\nvoid main(){}"
  status: Exception
  stderr: 'core.exception.AssertError@/tmp/tmpx0vyfebi.d(29): unittest failure

    ----------------

    ??:? _d_unittestp [0x427de5]

    ??:? void tmpx0vyfebi.__unittest_L22_C1() [0x427ac4]

    ??:? void tmpx0vyfebi.__modtest() [0x427b68]

    ??:? int core.runtime.runModuleUnitTests().__foreachbody2(object.ModuleInfo*)
    [0x42bb0b]

    ??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)).__lambda2(immutable(object.ModuleInfo*))
    [0x42a99e]

    ??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))).__foreachbody2(ref
    rt.sections_elf_shared.DSO) [0x42fb31]

    ??:? int rt.sections_elf_shared.DSO.opApply(scope int delegate(ref rt.sections_elf_shared.DSO))
    [0x42ffe0]

    ??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*)))
    [0x42fabd]

    ??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)) [0x42a975]

    ??:? runModuleUnitTests [0x42b8e1]

    ??:? void rt.dmain2._d_run_main(int, char**, extern (C) int function(char[][])*).runAll()
    [0x428234]

    ??:? void rt.dmain2._d_r'
  stdout: ''
  timestamp: 1660164228
- exit_code: 0
  program: "import std.typecons;\nimport std.math;\n/*\nComplete the function that\
    \ takes two integers and returns \n    the product of their unit digits.\n   \
    \ Assume the input is always valid.\n    Examples:\n    >>> multiply(148L, 412L)\n\
    \    16L\n    >>> multiply(19L, 28L)\n    72L\n    >>> multiply(2020L, 1851L)\n\
    \    0L\n    >>> multiply(14L, -15L)\n    20L\n    \n*/\nlong multiply(long a,\
    \ long b) \n{\n    return abs(a % 10) * abs(b % 10);\n}\nunittest\n{\n    alias\
    \ candidate = multiply;\n\n    assert(candidate(148L, 412L) == 16L);\n    assert(candidate(19L,\
    \ 28L) == 72L);\n    assert(candidate(2020L, 1851L) == 0L);\n    assert(candidate(14L,\
    \ -15L) == 20L);\n    assert(candidate(76L, 67L) == 42L);\n    assert(candidate(17L,\
    \ 27L) == 49L);\n    assert(candidate(0L, 1L) == 0L);\n    assert(candidate(0L,\
    \ 0L) == 0L);\n}\nvoid main(){}"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660164228
- exit_code: 1
  program: "import std.typecons;\nimport std.math;\n/*\nComplete the function that\
    \ takes two integers and returns \n    the product of their unit digits.\n   \
    \ Assume the input is always valid.\n    Examples:\n    >>> multiply(148L, 412L)\n\
    \    16L\n    >>> multiply(19L, 28L)\n    72L\n    >>> multiply(2020L, 1851L)\n\
    \    0L\n    >>> multiply(14L, -15L)\n    20L\n    \n*/\nlong multiply(long a,\
    \ long b) \n{\n    return (a % 10) * (b % 10);\n}\nunittest\n{\n    alias candidate\
    \ = multiply;\n\n    assert(candidate(148L, 412L) == 16L);\n    assert(candidate(19L,\
    \ 28L) == 72L);\n    assert(candidate(2020L, 1851L) == 0L);\n    assert(candidate(14L,\
    \ -15L) == 20L);\n    assert(candidate(76L, 67L) == 42L);\n    assert(candidate(17L,\
    \ 27L) == 49L);\n    assert(candidate(0L, 1L) == 0L);\n    assert(candidate(0L,\
    \ 0L) == 0L);\n}\nvoid main(){}"
  status: Exception
  stderr: 'core.exception.AssertError@/tmp/tmp1saqvwe8.d(29): unittest failure

    ----------------

    ??:? _d_unittestp [0x427de5]

    ??:? void tmp1saqvwe8.__unittest_L22_C1() [0x427ac4]

    ??:? void tmp1saqvwe8.__modtest() [0x427b68]

    ??:? int core.runtime.runModuleUnitTests().__foreachbody2(object.ModuleInfo*)
    [0x42bb0b]

    ??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)).__lambda2(immutable(object.ModuleInfo*))
    [0x42a99e]

    ??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))).__foreachbody2(ref
    rt.sections_elf_shared.DSO) [0x42fb31]

    ??:? int rt.sections_elf_shared.DSO.opApply(scope int delegate(ref rt.sections_elf_shared.DSO))
    [0x42ffe0]

    ??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*)))
    [0x42fabd]

    ??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)) [0x42a975]

    ??:? runModuleUnitTests [0x42b8e1]

    ??:? void rt.dmain2._d_run_main(int, char**, extern (C) int function(char[][])*).runAll()
    [0x428234]

    ??:? void rt.dmain2._d_r'
  stdout: ''
  timestamp: 1660164228
- exit_code: 1
  program: "import std.typecons;\nimport std.math;\n/*\nComplete the function that\
    \ takes two integers and returns \n    the product of their unit digits.\n   \
    \ Assume the input is always valid.\n    Examples:\n    >>> multiply(148L, 412L)\n\
    \    16L\n    >>> multiply(19L, 28L)\n    72L\n    >>> multiply(2020L, 1851L)\n\
    \    0L\n    >>> multiply(14L, -15L)\n    20L\n    \n*/\nlong multiply(long a,\
    \ long b) \n{\n    return (a%10)*(b%10);\n}\nunittest\n{\n    alias candidate\
    \ = multiply;\n\n    assert(candidate(148L, 412L) == 16L);\n    assert(candidate(19L,\
    \ 28L) == 72L);\n    assert(candidate(2020L, 1851L) == 0L);\n    assert(candidate(14L,\
    \ -15L) == 20L);\n    assert(candidate(76L, 67L) == 42L);\n    assert(candidate(17L,\
    \ 27L) == 49L);\n    assert(candidate(0L, 1L) == 0L);\n    assert(candidate(0L,\
    \ 0L) == 0L);\n}\nvoid main(){}"
  status: Exception
  stderr: 'core.exception.AssertError@/tmp/tmpx0vyfebi.d(29): unittest failure

    ----------------

    ??:? _d_unittestp [0x427de5]

    ??:? void tmpx0vyfebi.__unittest_L22_C1() [0x427ac4]

    ??:? void tmpx0vyfebi.__modtest() [0x427b68]

    ??:? int core.runtime.runModuleUnitTests().__foreachbody2(object.ModuleInfo*)
    [0x42bb0b]

    ??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)).__lambda2(immutable(object.ModuleInfo*))
    [0x42a99e]

    ??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))).__foreachbody2(ref
    rt.sections_elf_shared.DSO) [0x42fb31]

    ??:? int rt.sections_elf_shared.DSO.opApply(scope int delegate(ref rt.sections_elf_shared.DSO))
    [0x42ffe0]

    ??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*)))
    [0x42fabd]

    ??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)) [0x42a975]

    ??:? runModuleUnitTests [0x42b8e1]

    ??:? void rt.dmain2._d_run_main(int, char**, extern (C) int function(char[][])*).runAll()
    [0x428234]

    ??:? void rt.dmain2._d_r'
  stdout: ''
  timestamp: 1660164228
- exit_code: 1
  program: "import std.typecons;\nimport std.math;\n/*\nComplete the function that\
    \ takes two integers and returns \n    the product of their unit digits.\n   \
    \ Assume the input is always valid.\n    Examples:\n    >>> multiply(148L, 412L)\n\
    \    16L\n    >>> multiply(19L, 28L)\n    72L\n    >>> multiply(2020L, 1851L)\n\
    \    0L\n    >>> multiply(14L, -15L)\n    20L\n    \n*/\nlong multiply(long a,\
    \ long b) \n{\n    return (a % 10) * (b % 10);\n}\nunittest\n{\n    alias candidate\
    \ = multiply;\n\n    assert(candidate(148L, 412L) == 16L);\n    assert(candidate(19L,\
    \ 28L) == 72L);\n    assert(candidate(2020L, 1851L) == 0L);\n    assert(candidate(14L,\
    \ -15L) == 20L);\n    assert(candidate(76L, 67L) == 42L);\n    assert(candidate(17L,\
    \ 27L) == 49L);\n    assert(candidate(0L, 1L) == 0L);\n    assert(candidate(0L,\
    \ 0L) == 0L);\n}\nvoid main(){}"
  status: Exception
  stderr: 'core.exception.AssertError@/tmp/tmp1saqvwe8.d(29): unittest failure

    ----------------

    ??:? _d_unittestp [0x427de5]

    ??:? void tmp1saqvwe8.__unittest_L22_C1() [0x427ac4]

    ??:? void tmp1saqvwe8.__modtest() [0x427b68]

    ??:? int core.runtime.runModuleUnitTests().__foreachbody2(object.ModuleInfo*)
    [0x42bb0b]

    ??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)).__lambda2(immutable(object.ModuleInfo*))
    [0x42a99e]

    ??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))).__foreachbody2(ref
    rt.sections_elf_shared.DSO) [0x42fb31]

    ??:? int rt.sections_elf_shared.DSO.opApply(scope int delegate(ref rt.sections_elf_shared.DSO))
    [0x42ffe0]

    ??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*)))
    [0x42fabd]

    ??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)) [0x42a975]

    ??:? runModuleUnitTests [0x42b8e1]

    ??:? void rt.dmain2._d_run_main(int, char**, extern (C) int function(char[][])*).runAll()
    [0x428234]

    ??:? void rt.dmain2._d_r'
  stdout: ''
  timestamp: 1660164228
- exit_code: 1
  program: "import std.typecons;\nimport std.math;\n/*\nComplete the function that\
    \ takes two integers and returns \n    the product of their unit digits.\n   \
    \ Assume the input is always valid.\n    Examples:\n    >>> multiply(148L, 412L)\n\
    \    16L\n    >>> multiply(19L, 28L)\n    72L\n    >>> multiply(2020L, 1851L)\n\
    \    0L\n    >>> multiply(14L, -15L)\n    20L\n    \n*/\nlong multiply(long a,\
    \ long b) \n{\n    return a % 10 * b % 10;\n}\nunittest\n{\n    alias candidate\
    \ = multiply;\n\n    assert(candidate(148L, 412L) == 16L);\n    assert(candidate(19L,\
    \ 28L) == 72L);\n    assert(candidate(2020L, 1851L) == 0L);\n    assert(candidate(14L,\
    \ -15L) == 20L);\n    assert(candidate(76L, 67L) == 42L);\n    assert(candidate(17L,\
    \ 27L) == 49L);\n    assert(candidate(0L, 1L) == 0L);\n    assert(candidate(0L,\
    \ 0L) == 0L);\n}\nvoid main(){}"
  status: Exception
  stderr: 'core.exception.AssertError@/tmp/tmp_yl7hsrp.d(26): unittest failure

    ----------------

    ??:? _d_unittestp [0x427ddd]

    ??:? void tmp_yl7hsrp.__unittest_L22_C1() [0x427a45]

    ??:? void tmp_yl7hsrp.__modtest() [0x427b5c]

    ??:? int core.runtime.runModuleUnitTests().__foreachbody2(object.ModuleInfo*)
    [0x42bb03]

    ??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)).__lambda2(immutable(object.ModuleInfo*))
    [0x42a996]

    ??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))).__foreachbody2(ref
    rt.sections_elf_shared.DSO) [0x42fb29]

    ??:? int rt.sections_elf_shared.DSO.opApply(scope int delegate(ref rt.sections_elf_shared.DSO))
    [0x42ffd8]

    ??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*)))
    [0x42fab5]

    ??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)) [0x42a96d]

    ??:? runModuleUnitTests [0x42b8d9]

    ??:? void rt.dmain2._d_run_main(int, char**, extern (C) int function(char[][])*).runAll()
    [0x42822c]

    ??:? void rt.dmain2._d_r'
  stdout: ''
  timestamp: 1660164228
- exit_code: 1
  program: "import std.typecons;\nimport std.math;\n/*\nComplete the function that\
    \ takes two integers and returns \n    the product of their unit digits.\n   \
    \ Assume the input is always valid.\n    Examples:\n    >>> multiply(148L, 412L)\n\
    \    16L\n    >>> multiply(19L, 28L)\n    72L\n    >>> multiply(2020L, 1851L)\n\
    \    0L\n    >>> multiply(14L, -15L)\n    20L\n    \n*/\nlong multiply(long a,\
    \ long b) \n{\n    return (a % 10) * (b % 10);\n}\nunittest\n{\n    alias candidate\
    \ = multiply;\n\n    assert(candidate(148L, 412L) == 16L);\n    assert(candidate(19L,\
    \ 28L) == 72L);\n    assert(candidate(2020L, 1851L) == 0L);\n    assert(candidate(14L,\
    \ -15L) == 20L);\n    assert(candidate(76L, 67L) == 42L);\n    assert(candidate(17L,\
    \ 27L) == 49L);\n    assert(candidate(0L, 1L) == 0L);\n    assert(candidate(0L,\
    \ 0L) == 0L);\n}\nvoid main(){}"
  status: Exception
  stderr: 'core.exception.AssertError@/tmp/tmp1saqvwe8.d(29): unittest failure

    ----------------

    ??:? _d_unittestp [0x427de5]

    ??:? void tmp1saqvwe8.__unittest_L22_C1() [0x427ac4]

    ??:? void tmp1saqvwe8.__modtest() [0x427b68]

    ??:? int core.runtime.runModuleUnitTests().__foreachbody2(object.ModuleInfo*)
    [0x42bb0b]

    ??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)).__lambda2(immutable(object.ModuleInfo*))
    [0x42a99e]

    ??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))).__foreachbody2(ref
    rt.sections_elf_shared.DSO) [0x42fb31]

    ??:? int rt.sections_elf_shared.DSO.opApply(scope int delegate(ref rt.sections_elf_shared.DSO))
    [0x42ffe0]

    ??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*)))
    [0x42fabd]

    ??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)) [0x42a975]

    ??:? runModuleUnitTests [0x42b8e1]

    ??:? void rt.dmain2._d_run_main(int, char**, extern (C) int function(char[][])*).runAll()
    [0x428234]

    ??:? void rt.dmain2._d_r'
  stdout: ''
  timestamp: 1660164228
- exit_code: 1
  program: "import std.typecons;\nimport std.math;\n/*\nComplete the function that\
    \ takes two integers and returns \n    the product of their unit digits.\n   \
    \ Assume the input is always valid.\n    Examples:\n    >>> multiply(148L, 412L)\n\
    \    16L\n    >>> multiply(19L, 28L)\n    72L\n    >>> multiply(2020L, 1851L)\n\
    \    0L\n    >>> multiply(14L, -15L)\n    20L\n    \n*/\nlong multiply(long a,\
    \ long b) \n{\n    return (a % 10) * (b % 10);\n}\nunittest\n{\n    alias candidate\
    \ = multiply;\n\n    assert(candidate(148L, 412L) == 16L);\n    assert(candidate(19L,\
    \ 28L) == 72L);\n    assert(candidate(2020L, 1851L) == 0L);\n    assert(candidate(14L,\
    \ -15L) == 20L);\n    assert(candidate(76L, 67L) == 42L);\n    assert(candidate(17L,\
    \ 27L) == 49L);\n    assert(candidate(0L, 1L) == 0L);\n    assert(candidate(0L,\
    \ 0L) == 0L);\n}\nvoid main(){}"
  status: Exception
  stderr: 'core.exception.AssertError@/tmp/tmp1saqvwe8.d(29): unittest failure

    ----------------

    ??:? _d_unittestp [0x427de5]

    ??:? void tmp1saqvwe8.__unittest_L22_C1() [0x427ac4]

    ??:? void tmp1saqvwe8.__modtest() [0x427b68]

    ??:? int core.runtime.runModuleUnitTests().__foreachbody2(object.ModuleInfo*)
    [0x42bb0b]

    ??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)).__lambda2(immutable(object.ModuleInfo*))
    [0x42a99e]

    ??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))).__foreachbody2(ref
    rt.sections_elf_shared.DSO) [0x42fb31]

    ??:? int rt.sections_elf_shared.DSO.opApply(scope int delegate(ref rt.sections_elf_shared.DSO))
    [0x42ffe0]

    ??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*)))
    [0x42fabd]

    ??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)) [0x42a975]

    ??:? runModuleUnitTests [0x42b8e1]

    ??:? void rt.dmain2._d_run_main(int, char**, extern (C) int function(char[][])*).runAll()
    [0x428234]

    ??:? void rt.dmain2._d_r'
  stdout: ''
  timestamp: 1660164228
- exit_code: 1
  program: "import std.typecons;\nimport std.math;\n/*\nComplete the function that\
    \ takes two integers and returns \n    the product of their unit digits.\n   \
    \ Assume the input is always valid.\n    Examples:\n    >>> multiply(148L, 412L)\n\
    \    16L\n    >>> multiply(19L, 28L)\n    72L\n    >>> multiply(2020L, 1851L)\n\
    \    0L\n    >>> multiply(14L, -15L)\n    20L\n    \n*/\nlong multiply(long a,\
    \ long b) \n{\n    return (a % 10) * (b % 10);\n}\nunittest\n{\n    alias candidate\
    \ = multiply;\n\n    assert(candidate(148L, 412L) == 16L);\n    assert(candidate(19L,\
    \ 28L) == 72L);\n    assert(candidate(2020L, 1851L) == 0L);\n    assert(candidate(14L,\
    \ -15L) == 20L);\n    assert(candidate(76L, 67L) == 42L);\n    assert(candidate(17L,\
    \ 27L) == 49L);\n    assert(candidate(0L, 1L) == 0L);\n    assert(candidate(0L,\
    \ 0L) == 0L);\n}\nvoid main(){}"
  status: Exception
  stderr: 'core.exception.AssertError@/tmp/tmp1saqvwe8.d(29): unittest failure

    ----------------

    ??:? _d_unittestp [0x427de5]

    ??:? void tmp1saqvwe8.__unittest_L22_C1() [0x427ac4]

    ??:? void tmp1saqvwe8.__modtest() [0x427b68]

    ??:? int core.runtime.runModuleUnitTests().__foreachbody2(object.ModuleInfo*)
    [0x42bb0b]

    ??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)).__lambda2(immutable(object.ModuleInfo*))
    [0x42a99e]

    ??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))).__foreachbody2(ref
    rt.sections_elf_shared.DSO) [0x42fb31]

    ??:? int rt.sections_elf_shared.DSO.opApply(scope int delegate(ref rt.sections_elf_shared.DSO))
    [0x42ffe0]

    ??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*)))
    [0x42fabd]

    ??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)) [0x42a975]

    ??:? runModuleUnitTests [0x42b8e1]

    ??:? void rt.dmain2._d_run_main(int, char**, extern (C) int function(char[][])*).runAll()
    [0x428234]

    ??:? void rt.dmain2._d_r'
  stdout: ''
  timestamp: 1660164228
- exit_code: 1
  program: "import std.typecons;\nimport std.math;\n/*\nComplete the function that\
    \ takes two integers and returns \n    the product of their unit digits.\n   \
    \ Assume the input is always valid.\n    Examples:\n    >>> multiply(148L, 412L)\n\
    \    16L\n    >>> multiply(19L, 28L)\n    72L\n    >>> multiply(2020L, 1851L)\n\
    \    0L\n    >>> multiply(14L, -15L)\n    20L\n    \n*/\nlong multiply(long a,\
    \ long b) \n{\n    return (a%10)*(b%10);\n}\nunittest\n{\n    alias candidate\
    \ = multiply;\n\n    assert(candidate(148L, 412L) == 16L);\n    assert(candidate(19L,\
    \ 28L) == 72L);\n    assert(candidate(2020L, 1851L) == 0L);\n    assert(candidate(14L,\
    \ -15L) == 20L);\n    assert(candidate(76L, 67L) == 42L);\n    assert(candidate(17L,\
    \ 27L) == 49L);\n    assert(candidate(0L, 1L) == 0L);\n    assert(candidate(0L,\
    \ 0L) == 0L);\n}\nvoid main(){}"
  status: Exception
  stderr: 'core.exception.AssertError@/tmp/tmpx0vyfebi.d(29): unittest failure

    ----------------

    ??:? _d_unittestp [0x427de5]

    ??:? void tmpx0vyfebi.__unittest_L22_C1() [0x427ac4]

    ??:? void tmpx0vyfebi.__modtest() [0x427b68]

    ??:? int core.runtime.runModuleUnitTests().__foreachbody2(object.ModuleInfo*)
    [0x42bb0b]

    ??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)).__lambda2(immutable(object.ModuleInfo*))
    [0x42a99e]

    ??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))).__foreachbody2(ref
    rt.sections_elf_shared.DSO) [0x42fb31]

    ??:? int rt.sections_elf_shared.DSO.opApply(scope int delegate(ref rt.sections_elf_shared.DSO))
    [0x42ffe0]

    ??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*)))
    [0x42fabd]

    ??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)) [0x42a975]

    ??:? runModuleUnitTests [0x42b8e1]

    ??:? void rt.dmain2._d_run_main(int, char**, extern (C) int function(char[][])*).runAll()
    [0x428234]

    ??:? void rt.dmain2._d_r'
  stdout: ''
  timestamp: 1660164228
- exit_code: 1
  program: "import std.typecons;\nimport std.math;\n/*\nComplete the function that\
    \ takes two integers and returns \n    the product of their unit digits.\n   \
    \ Assume the input is always valid.\n    Examples:\n    >>> multiply(148L, 412L)\n\
    \    16L\n    >>> multiply(19L, 28L)\n    72L\n    >>> multiply(2020L, 1851L)\n\
    \    0L\n    >>> multiply(14L, -15L)\n    20L\n    \n*/\nlong multiply(long a,\
    \ long b) \n{\n    return (a%10)*(b%10);\n}\nunittest\n{\n    alias candidate\
    \ = multiply;\n\n    assert(candidate(148L, 412L) == 16L);\n    assert(candidate(19L,\
    \ 28L) == 72L);\n    assert(candidate(2020L, 1851L) == 0L);\n    assert(candidate(14L,\
    \ -15L) == 20L);\n    assert(candidate(76L, 67L) == 42L);\n    assert(candidate(17L,\
    \ 27L) == 49L);\n    assert(candidate(0L, 1L) == 0L);\n    assert(candidate(0L,\
    \ 0L) == 0L);\n}\nvoid main(){}"
  status: Exception
  stderr: 'core.exception.AssertError@/tmp/tmpx0vyfebi.d(29): unittest failure

    ----------------

    ??:? _d_unittestp [0x427de5]

    ??:? void tmpx0vyfebi.__unittest_L22_C1() [0x427ac4]

    ??:? void tmpx0vyfebi.__modtest() [0x427b68]

    ??:? int core.runtime.runModuleUnitTests().__foreachbody2(object.ModuleInfo*)
    [0x42bb0b]

    ??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)).__lambda2(immutable(object.ModuleInfo*))
    [0x42a99e]

    ??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))).__foreachbody2(ref
    rt.sections_elf_shared.DSO) [0x42fb31]

    ??:? int rt.sections_elf_shared.DSO.opApply(scope int delegate(ref rt.sections_elf_shared.DSO))
    [0x42ffe0]

    ??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*)))
    [0x42fabd]

    ??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)) [0x42a975]

    ??:? runModuleUnitTests [0x42b8e1]

    ??:? void rt.dmain2._d_run_main(int, char**, extern (C) int function(char[][])*).runAll()
    [0x428234]

    ??:? void rt.dmain2._d_r'
  stdout: ''
  timestamp: 1660164228
- exit_code: 1
  program: "import std.typecons;\nimport std.math;\n/*\nComplete the function that\
    \ takes two integers and returns \n    the product of their unit digits.\n   \
    \ Assume the input is always valid.\n    Examples:\n    >>> multiply(148L, 412L)\n\
    \    16L\n    >>> multiply(19L, 28L)\n    72L\n    >>> multiply(2020L, 1851L)\n\
    \    0L\n    >>> multiply(14L, -15L)\n    20L\n    \n*/\nlong multiply(long a,\
    \ long b) \n{\n    return (a % 10) * (b % 10);\n}\nunittest\n{\n    alias candidate\
    \ = multiply;\n\n    assert(candidate(148L, 412L) == 16L);\n    assert(candidate(19L,\
    \ 28L) == 72L);\n    assert(candidate(2020L, 1851L) == 0L);\n    assert(candidate(14L,\
    \ -15L) == 20L);\n    assert(candidate(76L, 67L) == 42L);\n    assert(candidate(17L,\
    \ 27L) == 49L);\n    assert(candidate(0L, 1L) == 0L);\n    assert(candidate(0L,\
    \ 0L) == 0L);\n}\nvoid main(){}"
  status: Exception
  stderr: 'core.exception.AssertError@/tmp/tmp1saqvwe8.d(29): unittest failure

    ----------------

    ??:? _d_unittestp [0x427de5]

    ??:? void tmp1saqvwe8.__unittest_L22_C1() [0x427ac4]

    ??:? void tmp1saqvwe8.__modtest() [0x427b68]

    ??:? int core.runtime.runModuleUnitTests().__foreachbody2(object.ModuleInfo*)
    [0x42bb0b]

    ??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)).__lambda2(immutable(object.ModuleInfo*))
    [0x42a99e]

    ??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))).__foreachbody2(ref
    rt.sections_elf_shared.DSO) [0x42fb31]

    ??:? int rt.sections_elf_shared.DSO.opApply(scope int delegate(ref rt.sections_elf_shared.DSO))
    [0x42ffe0]

    ??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*)))
    [0x42fabd]

    ??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)) [0x42a975]

    ??:? runModuleUnitTests [0x42b8e1]

    ??:? void rt.dmain2._d_run_main(int, char**, extern (C) int function(char[][])*).runAll()
    [0x428234]

    ??:? void rt.dmain2._d_r'
  stdout: ''
  timestamp: 1660164228
- exit_code: 1
  program: "import std.typecons;\nimport std.math;\n/*\nComplete the function that\
    \ takes two integers and returns \n    the product of their unit digits.\n   \
    \ Assume the input is always valid.\n    Examples:\n    >>> multiply(148L, 412L)\n\
    \    16L\n    >>> multiply(19L, 28L)\n    72L\n    >>> multiply(2020L, 1851L)\n\
    \    0L\n    >>> multiply(14L, -15L)\n    20L\n    \n*/\nlong multiply(long a,\
    \ long b) \n{\n    return (a % 10) * (b % 10);\n}\nunittest\n{\n    alias candidate\
    \ = multiply;\n\n    assert(candidate(148L, 412L) == 16L);\n    assert(candidate(19L,\
    \ 28L) == 72L);\n    assert(candidate(2020L, 1851L) == 0L);\n    assert(candidate(14L,\
    \ -15L) == 20L);\n    assert(candidate(76L, 67L) == 42L);\n    assert(candidate(17L,\
    \ 27L) == 49L);\n    assert(candidate(0L, 1L) == 0L);\n    assert(candidate(0L,\
    \ 0L) == 0L);\n}\nvoid main(){}"
  status: Exception
  stderr: 'core.exception.AssertError@/tmp/tmp1saqvwe8.d(29): unittest failure

    ----------------

    ??:? _d_unittestp [0x427de5]

    ??:? void tmp1saqvwe8.__unittest_L22_C1() [0x427ac4]

    ??:? void tmp1saqvwe8.__modtest() [0x427b68]

    ??:? int core.runtime.runModuleUnitTests().__foreachbody2(object.ModuleInfo*)
    [0x42bb0b]

    ??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)).__lambda2(immutable(object.ModuleInfo*))
    [0x42a99e]

    ??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))).__foreachbody2(ref
    rt.sections_elf_shared.DSO) [0x42fb31]

    ??:? int rt.sections_elf_shared.DSO.opApply(scope int delegate(ref rt.sections_elf_shared.DSO))
    [0x42ffe0]

    ??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*)))
    [0x42fabd]

    ??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)) [0x42a975]

    ??:? runModuleUnitTests [0x42b8e1]

    ??:? void rt.dmain2._d_run_main(int, char**, extern (C) int function(char[][])*).runAll()
    [0x428234]

    ??:? void rt.dmain2._d_r'
  stdout: ''
  timestamp: 1660164228
- exit_code: 1
  program: "import std.typecons;\nimport std.math;\n/*\nComplete the function that\
    \ takes two integers and returns \n    the product of their unit digits.\n   \
    \ Assume the input is always valid.\n    Examples:\n    >>> multiply(148L, 412L)\n\
    \    16L\n    >>> multiply(19L, 28L)\n    72L\n    >>> multiply(2020L, 1851L)\n\
    \    0L\n    >>> multiply(14L, -15L)\n    20L\n    \n*/\nlong multiply(long a,\
    \ long b) \n{\n    return (a % 10) * (b % 10);\n}\nunittest\n{\n    alias candidate\
    \ = multiply;\n\n    assert(candidate(148L, 412L) == 16L);\n    assert(candidate(19L,\
    \ 28L) == 72L);\n    assert(candidate(2020L, 1851L) == 0L);\n    assert(candidate(14L,\
    \ -15L) == 20L);\n    assert(candidate(76L, 67L) == 42L);\n    assert(candidate(17L,\
    \ 27L) == 49L);\n    assert(candidate(0L, 1L) == 0L);\n    assert(candidate(0L,\
    \ 0L) == 0L);\n}\nvoid main(){}"
  status: Exception
  stderr: 'core.exception.AssertError@/tmp/tmp1saqvwe8.d(29): unittest failure

    ----------------

    ??:? _d_unittestp [0x427de5]

    ??:? void tmp1saqvwe8.__unittest_L22_C1() [0x427ac4]

    ??:? void tmp1saqvwe8.__modtest() [0x427b68]

    ??:? int core.runtime.runModuleUnitTests().__foreachbody2(object.ModuleInfo*)
    [0x42bb0b]

    ??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)).__lambda2(immutable(object.ModuleInfo*))
    [0x42a99e]

    ??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))).__foreachbody2(ref
    rt.sections_elf_shared.DSO) [0x42fb31]

    ??:? int rt.sections_elf_shared.DSO.opApply(scope int delegate(ref rt.sections_elf_shared.DSO))
    [0x42ffe0]

    ??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*)))
    [0x42fabd]

    ??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)) [0x42a975]

    ??:? runModuleUnitTests [0x42b8e1]

    ??:? void rt.dmain2._d_run_main(int, char**, extern (C) int function(char[][])*).runAll()
    [0x428234]

    ??:? void rt.dmain2._d_r'
  stdout: ''
  timestamp: 1660164228
- exit_code: 1
  program: "import std.typecons;\nimport std.math;\n/*\nComplete the function that\
    \ takes two integers and returns \n    the product of their unit digits.\n   \
    \ Assume the input is always valid.\n    Examples:\n    >>> multiply(148L, 412L)\n\
    \    16L\n    >>> multiply(19L, 28L)\n    72L\n    >>> multiply(2020L, 1851L)\n\
    \    0L\n    >>> multiply(14L, -15L)\n    20L\n    \n*/\nlong multiply(long a,\
    \ long b) \n{\n    return (a % 10) * (b % 10);\n}\nunittest\n{\n    alias candidate\
    \ = multiply;\n\n    assert(candidate(148L, 412L) == 16L);\n    assert(candidate(19L,\
    \ 28L) == 72L);\n    assert(candidate(2020L, 1851L) == 0L);\n    assert(candidate(14L,\
    \ -15L) == 20L);\n    assert(candidate(76L, 67L) == 42L);\n    assert(candidate(17L,\
    \ 27L) == 49L);\n    assert(candidate(0L, 1L) == 0L);\n    assert(candidate(0L,\
    \ 0L) == 0L);\n}\nvoid main(){}"
  status: Exception
  stderr: 'core.exception.AssertError@/tmp/tmp1saqvwe8.d(29): unittest failure

    ----------------

    ??:? _d_unittestp [0x427de5]

    ??:? void tmp1saqvwe8.__unittest_L22_C1() [0x427ac4]

    ??:? void tmp1saqvwe8.__modtest() [0x427b68]

    ??:? int core.runtime.runModuleUnitTests().__foreachbody2(object.ModuleInfo*)
    [0x42bb0b]

    ??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)).__lambda2(immutable(object.ModuleInfo*))
    [0x42a99e]

    ??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))).__foreachbody2(ref
    rt.sections_elf_shared.DSO) [0x42fb31]

    ??:? int rt.sections_elf_shared.DSO.opApply(scope int delegate(ref rt.sections_elf_shared.DSO))
    [0x42ffe0]

    ??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*)))
    [0x42fabd]

    ??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)) [0x42a975]

    ??:? runModuleUnitTests [0x42b8e1]

    ??:? void rt.dmain2._d_run_main(int, char**, extern (C) int function(char[][])*).runAll()
    [0x428234]

    ??:? void rt.dmain2._d_r'
  stdout: ''
  timestamp: 1660164228
- exit_code: 1
  program: "import std.typecons;\nimport std.math;\n/*\nComplete the function that\
    \ takes two integers and returns \n    the product of their unit digits.\n   \
    \ Assume the input is always valid.\n    Examples:\n    >>> multiply(148L, 412L)\n\
    \    16L\n    >>> multiply(19L, 28L)\n    72L\n    >>> multiply(2020L, 1851L)\n\
    \    0L\n    >>> multiply(14L, -15L)\n    20L\n    \n*/\nlong multiply(long a,\
    \ long b) \n{\n    return a.abs.digits.front * b.abs.digits.front;\n}\nunittest\n\
    {\n    alias candidate = multiply;\n\n    assert(candidate(148L, 412L) == 16L);\n\
    \    assert(candidate(19L, 28L) == 72L);\n    assert(candidate(2020L, 1851L) ==\
    \ 0L);\n    assert(candidate(14L, -15L) == 20L);\n    assert(candidate(76L, 67L)\
    \ == 42L);\n    assert(candidate(17L, 27L) == 49L);\n    assert(candidate(0L,\
    \ 1L) == 0L);\n    assert(candidate(0L, 0L) == 0L);\n}\nvoid main(){}"
  status: SyntaxError
  stderr: '/tmp/tmpys12hn0y.d(20): Error: no property `digits` for type `long`

    /tmp/tmpys12hn0y.d(20): Error: no property `digits` for type `long`

    Failed: ["dmd", "-unittest", "-v", "-o-", "/tmp/tmpys12hn0y.d", "-I/tmp"]

    '
  stdout: ''
  timestamp: 1660164227
- exit_code: 1
  program: "import std.typecons;\nimport std.math;\n/*\nComplete the function that\
    \ takes two integers and returns \n    the product of their unit digits.\n   \
    \ Assume the input is always valid.\n    Examples:\n    >>> multiply(148L, 412L)\n\
    \    16L\n    >>> multiply(19L, 28L)\n    72L\n    >>> multiply(2020L, 1851L)\n\
    \    0L\n    >>> multiply(14L, -15L)\n    20L\n    \n*/\nlong multiply(long a,\
    \ long b) \n{\n    return (a%10)*(b%10);\n}\nunittest\n{\n    alias candidate\
    \ = multiply;\n\n    assert(candidate(148L, 412L) == 16L);\n    assert(candidate(19L,\
    \ 28L) == 72L);\n    assert(candidate(2020L, 1851L) == 0L);\n    assert(candidate(14L,\
    \ -15L) == 20L);\n    assert(candidate(76L, 67L) == 42L);\n    assert(candidate(17L,\
    \ 27L) == 49L);\n    assert(candidate(0L, 1L) == 0L);\n    assert(candidate(0L,\
    \ 0L) == 0L);\n}\nvoid main(){}"
  status: Exception
  stderr: 'core.exception.AssertError@/tmp/tmpx0vyfebi.d(29): unittest failure

    ----------------

    ??:? _d_unittestp [0x427de5]

    ??:? void tmpx0vyfebi.__unittest_L22_C1() [0x427ac4]

    ??:? void tmpx0vyfebi.__modtest() [0x427b68]

    ??:? int core.runtime.runModuleUnitTests().__foreachbody2(object.ModuleInfo*)
    [0x42bb0b]

    ??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)).__lambda2(immutable(object.ModuleInfo*))
    [0x42a99e]

    ??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))).__foreachbody2(ref
    rt.sections_elf_shared.DSO) [0x42fb31]

    ??:? int rt.sections_elf_shared.DSO.opApply(scope int delegate(ref rt.sections_elf_shared.DSO))
    [0x42ffe0]

    ??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*)))
    [0x42fabd]

    ??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)) [0x42a975]

    ??:? runModuleUnitTests [0x42b8e1]

    ??:? void rt.dmain2._d_run_main(int, char**, extern (C) int function(char[][])*).runAll()
    [0x428234]

    ??:? void rt.dmain2._d_r'
  stdout: ''
  timestamp: 1660164228
- exit_code: 1
  program: "import std.typecons;\nimport std.math;\n/*\nComplete the function that\
    \ takes two integers and returns \n    the product of their unit digits.\n   \
    \ Assume the input is always valid.\n    Examples:\n    >>> multiply(148L, 412L)\n\
    \    16L\n    >>> multiply(19L, 28L)\n    72L\n    >>> multiply(2020L, 1851L)\n\
    \    0L\n    >>> multiply(14L, -15L)\n    20L\n    \n*/\nlong multiply(long a,\
    \ long b) \n{\n    return (a%10)*(b%10);\n}\nunittest\n{\n    alias candidate\
    \ = multiply;\n\n    assert(candidate(148L, 412L) == 16L);\n    assert(candidate(19L,\
    \ 28L) == 72L);\n    assert(candidate(2020L, 1851L) == 0L);\n    assert(candidate(14L,\
    \ -15L) == 20L);\n    assert(candidate(76L, 67L) == 42L);\n    assert(candidate(17L,\
    \ 27L) == 49L);\n    assert(candidate(0L, 1L) == 0L);\n    assert(candidate(0L,\
    \ 0L) == 0L);\n}\nvoid main(){}"
  status: Exception
  stderr: 'core.exception.AssertError@/tmp/tmpx0vyfebi.d(29): unittest failure

    ----------------

    ??:? _d_unittestp [0x427de5]

    ??:? void tmpx0vyfebi.__unittest_L22_C1() [0x427ac4]

    ??:? void tmpx0vyfebi.__modtest() [0x427b68]

    ??:? int core.runtime.runModuleUnitTests().__foreachbody2(object.ModuleInfo*)
    [0x42bb0b]

    ??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)).__lambda2(immutable(object.ModuleInfo*))
    [0x42a99e]

    ??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))).__foreachbody2(ref
    rt.sections_elf_shared.DSO) [0x42fb31]

    ??:? int rt.sections_elf_shared.DSO.opApply(scope int delegate(ref rt.sections_elf_shared.DSO))
    [0x42ffe0]

    ??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*)))
    [0x42fabd]

    ??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)) [0x42a975]

    ??:? runModuleUnitTests [0x42b8e1]

    ??:? void rt.dmain2._d_run_main(int, char**, extern (C) int function(char[][])*).runAll()
    [0x428234]

    ??:? void rt.dmain2._d_r'
  stdout: ''
  timestamp: 1660164228
- exit_code: 1
  program: "import std.typecons;\nimport std.math;\n/*\nComplete the function that\
    \ takes two integers and returns \n    the product of their unit digits.\n   \
    \ Assume the input is always valid.\n    Examples:\n    >>> multiply(148L, 412L)\n\
    \    16L\n    >>> multiply(19L, 28L)\n    72L\n    >>> multiply(2020L, 1851L)\n\
    \    0L\n    >>> multiply(14L, -15L)\n    20L\n    \n*/\nlong multiply(long a,\
    \ long b) \n{\n    return (a % 10) * (b % 10);\n}\nunittest\n{\n    alias candidate\
    \ = multiply;\n\n    assert(candidate(148L, 412L) == 16L);\n    assert(candidate(19L,\
    \ 28L) == 72L);\n    assert(candidate(2020L, 1851L) == 0L);\n    assert(candidate(14L,\
    \ -15L) == 20L);\n    assert(candidate(76L, 67L) == 42L);\n    assert(candidate(17L,\
    \ 27L) == 49L);\n    assert(candidate(0L, 1L) == 0L);\n    assert(candidate(0L,\
    \ 0L) == 0L);\n}\nvoid main(){}"
  status: Exception
  stderr: 'core.exception.AssertError@/tmp/tmp1saqvwe8.d(29): unittest failure

    ----------------

    ??:? _d_unittestp [0x427de5]

    ??:? void tmp1saqvwe8.__unittest_L22_C1() [0x427ac4]

    ??:? void tmp1saqvwe8.__modtest() [0x427b68]

    ??:? int core.runtime.runModuleUnitTests().__foreachbody2(object.ModuleInfo*)
    [0x42bb0b]

    ??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)).__lambda2(immutable(object.ModuleInfo*))
    [0x42a99e]

    ??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))).__foreachbody2(ref
    rt.sections_elf_shared.DSO) [0x42fb31]

    ??:? int rt.sections_elf_shared.DSO.opApply(scope int delegate(ref rt.sections_elf_shared.DSO))
    [0x42ffe0]

    ??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*)))
    [0x42fabd]

    ??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)) [0x42a975]

    ??:? runModuleUnitTests [0x42b8e1]

    ??:? void rt.dmain2._d_run_main(int, char**, extern (C) int function(char[][])*).runAll()
    [0x428234]

    ??:? void rt.dmain2._d_r'
  stdout: ''
  timestamp: 1660164228
- exit_code: 1
  program: "import std.typecons;\nimport std.math;\n/*\nComplete the function that\
    \ takes two integers and returns \n    the product of their unit digits.\n   \
    \ Assume the input is always valid.\n    Examples:\n    >>> multiply(148L, 412L)\n\
    \    16L\n    >>> multiply(19L, 28L)\n    72L\n    >>> multiply(2020L, 1851L)\n\
    \    0L\n    >>> multiply(14L, -15L)\n    20L\n    \n*/\nlong multiply(long a,\
    \ long b) \n{\n    return (a % 10) * (b % 10);\n}\nunittest\n{\n    alias candidate\
    \ = multiply;\n\n    assert(candidate(148L, 412L) == 16L);\n    assert(candidate(19L,\
    \ 28L) == 72L);\n    assert(candidate(2020L, 1851L) == 0L);\n    assert(candidate(14L,\
    \ -15L) == 20L);\n    assert(candidate(76L, 67L) == 42L);\n    assert(candidate(17L,\
    \ 27L) == 49L);\n    assert(candidate(0L, 1L) == 0L);\n    assert(candidate(0L,\
    \ 0L) == 0L);\n}\nvoid main(){}"
  status: Exception
  stderr: 'core.exception.AssertError@/tmp/tmp1saqvwe8.d(29): unittest failure

    ----------------

    ??:? _d_unittestp [0x427de5]

    ??:? void tmp1saqvwe8.__unittest_L22_C1() [0x427ac4]

    ??:? void tmp1saqvwe8.__modtest() [0x427b68]

    ??:? int core.runtime.runModuleUnitTests().__foreachbody2(object.ModuleInfo*)
    [0x42bb0b]

    ??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)).__lambda2(immutable(object.ModuleInfo*))
    [0x42a99e]

    ??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))).__foreachbody2(ref
    rt.sections_elf_shared.DSO) [0x42fb31]

    ??:? int rt.sections_elf_shared.DSO.opApply(scope int delegate(ref rt.sections_elf_shared.DSO))
    [0x42ffe0]

    ??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*)))
    [0x42fabd]

    ??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)) [0x42a975]

    ??:? runModuleUnitTests [0x42b8e1]

    ??:? void rt.dmain2._d_run_main(int, char**, extern (C) int function(char[][])*).runAll()
    [0x428234]

    ??:? void rt.dmain2._d_r'
  stdout: ''
  timestamp: 1660164228
- exit_code: 1
  program: "import std.typecons;\nimport std.math;\n/*\nComplete the function that\
    \ takes two integers and returns \n    the product of their unit digits.\n   \
    \ Assume the input is always valid.\n    Examples:\n    >>> multiply(148L, 412L)\n\
    \    16L\n    >>> multiply(19L, 28L)\n    72L\n    >>> multiply(2020L, 1851L)\n\
    \    0L\n    >>> multiply(14L, -15L)\n    20L\n    \n*/\nlong multiply(long a,\
    \ long b) \n{\n    return (a % 10) * (b % 10);\n}\nunittest\n{\n    alias candidate\
    \ = multiply;\n\n    assert(candidate(148L, 412L) == 16L);\n    assert(candidate(19L,\
    \ 28L) == 72L);\n    assert(candidate(2020L, 1851L) == 0L);\n    assert(candidate(14L,\
    \ -15L) == 20L);\n    assert(candidate(76L, 67L) == 42L);\n    assert(candidate(17L,\
    \ 27L) == 49L);\n    assert(candidate(0L, 1L) == 0L);\n    assert(candidate(0L,\
    \ 0L) == 0L);\n}\nvoid main(){}"
  status: Exception
  stderr: 'core.exception.AssertError@/tmp/tmp1saqvwe8.d(29): unittest failure

    ----------------

    ??:? _d_unittestp [0x427de5]

    ??:? void tmp1saqvwe8.__unittest_L22_C1() [0x427ac4]

    ??:? void tmp1saqvwe8.__modtest() [0x427b68]

    ??:? int core.runtime.runModuleUnitTests().__foreachbody2(object.ModuleInfo*)
    [0x42bb0b]

    ??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)).__lambda2(immutable(object.ModuleInfo*))
    [0x42a99e]

    ??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))).__foreachbody2(ref
    rt.sections_elf_shared.DSO) [0x42fb31]

    ??:? int rt.sections_elf_shared.DSO.opApply(scope int delegate(ref rt.sections_elf_shared.DSO))
    [0x42ffe0]

    ??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*)))
    [0x42fabd]

    ??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)) [0x42a975]

    ??:? runModuleUnitTests [0x42b8e1]

    ??:? void rt.dmain2._d_run_main(int, char**, extern (C) int function(char[][])*).runAll()
    [0x428234]

    ??:? void rt.dmain2._d_r'
  stdout: ''
  timestamp: 1660164228
- exit_code: 1
  program: "import std.typecons;\nimport std.math;\n/*\nComplete the function that\
    \ takes two integers and returns \n    the product of their unit digits.\n   \
    \ Assume the input is always valid.\n    Examples:\n    >>> multiply(148L, 412L)\n\
    \    16L\n    >>> multiply(19L, 28L)\n    72L\n    >>> multiply(2020L, 1851L)\n\
    \    0L\n    >>> multiply(14L, -15L)\n    20L\n    \n*/\nlong multiply(long a,\
    \ long b) \n{\n    return (a % 10) * (b % 10);\n}\nunittest\n{\n    alias candidate\
    \ = multiply;\n\n    assert(candidate(148L, 412L) == 16L);\n    assert(candidate(19L,\
    \ 28L) == 72L);\n    assert(candidate(2020L, 1851L) == 0L);\n    assert(candidate(14L,\
    \ -15L) == 20L);\n    assert(candidate(76L, 67L) == 42L);\n    assert(candidate(17L,\
    \ 27L) == 49L);\n    assert(candidate(0L, 1L) == 0L);\n    assert(candidate(0L,\
    \ 0L) == 0L);\n}\nvoid main(){}"
  status: Exception
  stderr: 'core.exception.AssertError@/tmp/tmp1saqvwe8.d(29): unittest failure

    ----------------

    ??:? _d_unittestp [0x427de5]

    ??:? void tmp1saqvwe8.__unittest_L22_C1() [0x427ac4]

    ??:? void tmp1saqvwe8.__modtest() [0x427b68]

    ??:? int core.runtime.runModuleUnitTests().__foreachbody2(object.ModuleInfo*)
    [0x42bb0b]

    ??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)).__lambda2(immutable(object.ModuleInfo*))
    [0x42a99e]

    ??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))).__foreachbody2(ref
    rt.sections_elf_shared.DSO) [0x42fb31]

    ??:? int rt.sections_elf_shared.DSO.opApply(scope int delegate(ref rt.sections_elf_shared.DSO))
    [0x42ffe0]

    ??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*)))
    [0x42fabd]

    ??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)) [0x42a975]

    ??:? runModuleUnitTests [0x42b8e1]

    ??:? void rt.dmain2._d_run_main(int, char**, extern (C) int function(char[][])*).runAll()
    [0x428234]

    ??:? void rt.dmain2._d_r'
  stdout: ''
  timestamp: 1660164228
- exit_code: 1
  program: "import std.typecons;\nimport std.math;\n/*\nComplete the function that\
    \ takes two integers and returns \n    the product of their unit digits.\n   \
    \ Assume the input is always valid.\n    Examples:\n    >>> multiply(148L, 412L)\n\
    \    16L\n    >>> multiply(19L, 28L)\n    72L\n    >>> multiply(2020L, 1851L)\n\
    \    0L\n    >>> multiply(14L, -15L)\n    20L\n    \n*/\nlong multiply(long a,\
    \ long b) \n{\n    return (a%10)*(b%10);\n}\nunittest\n{\n    alias candidate\
    \ = multiply;\n\n    assert(candidate(148L, 412L) == 16L);\n    assert(candidate(19L,\
    \ 28L) == 72L);\n    assert(candidate(2020L, 1851L) == 0L);\n    assert(candidate(14L,\
    \ -15L) == 20L);\n    assert(candidate(76L, 67L) == 42L);\n    assert(candidate(17L,\
    \ 27L) == 49L);\n    assert(candidate(0L, 1L) == 0L);\n    assert(candidate(0L,\
    \ 0L) == 0L);\n}\nvoid main(){}"
  status: Exception
  stderr: 'core.exception.AssertError@/tmp/tmpx0vyfebi.d(29): unittest failure

    ----------------

    ??:? _d_unittestp [0x427de5]

    ??:? void tmpx0vyfebi.__unittest_L22_C1() [0x427ac4]

    ??:? void tmpx0vyfebi.__modtest() [0x427b68]

    ??:? int core.runtime.runModuleUnitTests().__foreachbody2(object.ModuleInfo*)
    [0x42bb0b]

    ??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)).__lambda2(immutable(object.ModuleInfo*))
    [0x42a99e]

    ??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))).__foreachbody2(ref
    rt.sections_elf_shared.DSO) [0x42fb31]

    ??:? int rt.sections_elf_shared.DSO.opApply(scope int delegate(ref rt.sections_elf_shared.DSO))
    [0x42ffe0]

    ??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*)))
    [0x42fabd]

    ??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)) [0x42a975]

    ??:? runModuleUnitTests [0x42b8e1]

    ??:? void rt.dmain2._d_run_main(int, char**, extern (C) int function(char[][])*).runAll()
    [0x428234]

    ??:? void rt.dmain2._d_r'
  stdout: ''
  timestamp: 1660164228
- exit_code: 1
  program: "import std.typecons;\nimport std.math;\n/*\nComplete the function that\
    \ takes two integers and returns \n    the product of their unit digits.\n   \
    \ Assume the input is always valid.\n    Examples:\n    >>> multiply(148L, 412L)\n\
    \    16L\n    >>> multiply(19L, 28L)\n    72L\n    >>> multiply(2020L, 1851L)\n\
    \    0L\n    >>> multiply(14L, -15L)\n    20L\n    \n*/\nlong multiply(long a,\
    \ long b) \n{\n    return (a % 10) * (b % 10);\n}\nunittest\n{\n    alias candidate\
    \ = multiply;\n\n    assert(candidate(148L, 412L) == 16L);\n    assert(candidate(19L,\
    \ 28L) == 72L);\n    assert(candidate(2020L, 1851L) == 0L);\n    assert(candidate(14L,\
    \ -15L) == 20L);\n    assert(candidate(76L, 67L) == 42L);\n    assert(candidate(17L,\
    \ 27L) == 49L);\n    assert(candidate(0L, 1L) == 0L);\n    assert(candidate(0L,\
    \ 0L) == 0L);\n}\nvoid main(){}"
  status: Exception
  stderr: 'core.exception.AssertError@/tmp/tmp1saqvwe8.d(29): unittest failure

    ----------------

    ??:? _d_unittestp [0x427de5]

    ??:? void tmp1saqvwe8.__unittest_L22_C1() [0x427ac4]

    ??:? void tmp1saqvwe8.__modtest() [0x427b68]

    ??:? int core.runtime.runModuleUnitTests().__foreachbody2(object.ModuleInfo*)
    [0x42bb0b]

    ??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)).__lambda2(immutable(object.ModuleInfo*))
    [0x42a99e]

    ??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))).__foreachbody2(ref
    rt.sections_elf_shared.DSO) [0x42fb31]

    ??:? int rt.sections_elf_shared.DSO.opApply(scope int delegate(ref rt.sections_elf_shared.DSO))
    [0x42ffe0]

    ??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*)))
    [0x42fabd]

    ??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)) [0x42a975]

    ??:? runModuleUnitTests [0x42b8e1]

    ??:? void rt.dmain2._d_run_main(int, char**, extern (C) int function(char[][])*).runAll()
    [0x428234]

    ??:? void rt.dmain2._d_r'
  stdout: ''
  timestamp: 1660164228
- exit_code: 0
  program: "import std.typecons;\nimport std.math;\n/*\nComplete the function that\
    \ takes two integers and returns \n    the product of their unit digits.\n   \
    \ Assume the input is always valid.\n    Examples:\n    >>> multiply(148L, 412L)\n\
    \    16L\n    >>> multiply(19L, 28L)\n    72L\n    >>> multiply(2020L, 1851L)\n\
    \    0L\n    >>> multiply(14L, -15L)\n    20L\n    \n*/\nlong multiply(long a,\
    \ long b) \n{\n    return abs(a % 10) * abs(b % 10);\n}\nunittest\n{\n    alias\
    \ candidate = multiply;\n\n    assert(candidate(148L, 412L) == 16L);\n    assert(candidate(19L,\
    \ 28L) == 72L);\n    assert(candidate(2020L, 1851L) == 0L);\n    assert(candidate(14L,\
    \ -15L) == 20L);\n    assert(candidate(76L, 67L) == 42L);\n    assert(candidate(17L,\
    \ 27L) == 49L);\n    assert(candidate(0L, 1L) == 0L);\n    assert(candidate(0L,\
    \ 0L) == 0L);\n}\nvoid main(){}"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660164228
- exit_code: 0
  program: "import std.typecons;\nimport std.math;\n/*\nComplete the function that\
    \ takes two integers and returns \n    the product of their unit digits.\n   \
    \ Assume the input is always valid.\n    Examples:\n    >>> multiply(148L, 412L)\n\
    \    16L\n    >>> multiply(19L, 28L)\n    72L\n    >>> multiply(2020L, 1851L)\n\
    \    0L\n    >>> multiply(14L, -15L)\n    20L\n    \n*/\nlong multiply(long a,\
    \ long b) \n{\n    return abs(a % 10) * abs(b % 10);\n}\nunittest\n{\n    alias\
    \ candidate = multiply;\n\n    assert(candidate(148L, 412L) == 16L);\n    assert(candidate(19L,\
    \ 28L) == 72L);\n    assert(candidate(2020L, 1851L) == 0L);\n    assert(candidate(14L,\
    \ -15L) == 20L);\n    assert(candidate(76L, 67L) == 42L);\n    assert(candidate(17L,\
    \ 27L) == 49L);\n    assert(candidate(0L, 1L) == 0L);\n    assert(candidate(0L,\
    \ 0L) == 0L);\n}\nvoid main(){}"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660164228
- exit_code: 1
  program: "import std.typecons;\nimport std.math;\n/*\nComplete the function that\
    \ takes two integers and returns \n    the product of their unit digits.\n   \
    \ Assume the input is always valid.\n    Examples:\n    >>> multiply(148L, 412L)\n\
    \    16L\n    >>> multiply(19L, 28L)\n    72L\n    >>> multiply(2020L, 1851L)\n\
    \    0L\n    >>> multiply(14L, -15L)\n    20L\n    \n*/\nlong multiply(long a,\
    \ long b) \n{\n    return (a % 10) * (b % 10);\n}\nunittest\n{\n    alias candidate\
    \ = multiply;\n\n    assert(candidate(148L, 412L) == 16L);\n    assert(candidate(19L,\
    \ 28L) == 72L);\n    assert(candidate(2020L, 1851L) == 0L);\n    assert(candidate(14L,\
    \ -15L) == 20L);\n    assert(candidate(76L, 67L) == 42L);\n    assert(candidate(17L,\
    \ 27L) == 49L);\n    assert(candidate(0L, 1L) == 0L);\n    assert(candidate(0L,\
    \ 0L) == 0L);\n}\nvoid main(){}"
  status: Exception
  stderr: 'core.exception.AssertError@/tmp/tmp1saqvwe8.d(29): unittest failure

    ----------------

    ??:? _d_unittestp [0x427de5]

    ??:? void tmp1saqvwe8.__unittest_L22_C1() [0x427ac4]

    ??:? void tmp1saqvwe8.__modtest() [0x427b68]

    ??:? int core.runtime.runModuleUnitTests().__foreachbody2(object.ModuleInfo*)
    [0x42bb0b]

    ??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)).__lambda2(immutable(object.ModuleInfo*))
    [0x42a99e]

    ??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))).__foreachbody2(ref
    rt.sections_elf_shared.DSO) [0x42fb31]

    ??:? int rt.sections_elf_shared.DSO.opApply(scope int delegate(ref rt.sections_elf_shared.DSO))
    [0x42ffe0]

    ??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*)))
    [0x42fabd]

    ??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)) [0x42a975]

    ??:? runModuleUnitTests [0x42b8e1]

    ??:? void rt.dmain2._d_run_main(int, char**, extern (C) int function(char[][])*).runAll()
    [0x428234]

    ??:? void rt.dmain2._d_r'
  stdout: ''
  timestamp: 1660164228
- exit_code: 1
  program: "import std.typecons;\nimport std.math;\n/*\nComplete the function that\
    \ takes two integers and returns \n    the product of their unit digits.\n   \
    \ Assume the input is always valid.\n    Examples:\n    >>> multiply(148L, 412L)\n\
    \    16L\n    >>> multiply(19L, 28L)\n    72L\n    >>> multiply(2020L, 1851L)\n\
    \    0L\n    >>> multiply(14L, -15L)\n    20L\n    \n*/\nlong multiply(long a,\
    \ long b) \n{\n    return (a%10)*(b%10);\n}\nunittest\n{\n    alias candidate\
    \ = multiply;\n\n    assert(candidate(148L, 412L) == 16L);\n    assert(candidate(19L,\
    \ 28L) == 72L);\n    assert(candidate(2020L, 1851L) == 0L);\n    assert(candidate(14L,\
    \ -15L) == 20L);\n    assert(candidate(76L, 67L) == 42L);\n    assert(candidate(17L,\
    \ 27L) == 49L);\n    assert(candidate(0L, 1L) == 0L);\n    assert(candidate(0L,\
    \ 0L) == 0L);\n}\nvoid main(){}"
  status: Exception
  stderr: 'core.exception.AssertError@/tmp/tmpx0vyfebi.d(29): unittest failure

    ----------------

    ??:? _d_unittestp [0x427de5]

    ??:? void tmpx0vyfebi.__unittest_L22_C1() [0x427ac4]

    ??:? void tmpx0vyfebi.__modtest() [0x427b68]

    ??:? int core.runtime.runModuleUnitTests().__foreachbody2(object.ModuleInfo*)
    [0x42bb0b]

    ??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)).__lambda2(immutable(object.ModuleInfo*))
    [0x42a99e]

    ??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))).__foreachbody2(ref
    rt.sections_elf_shared.DSO) [0x42fb31]

    ??:? int rt.sections_elf_shared.DSO.opApply(scope int delegate(ref rt.sections_elf_shared.DSO))
    [0x42ffe0]

    ??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*)))
    [0x42fabd]

    ??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)) [0x42a975]

    ??:? runModuleUnitTests [0x42b8e1]

    ??:? void rt.dmain2._d_run_main(int, char**, extern (C) int function(char[][])*).runAll()
    [0x428234]

    ??:? void rt.dmain2._d_r'
  stdout: ''
  timestamp: 1660164228
- exit_code: 1
  program: "import std.typecons;\nimport std.math;\n/*\nComplete the function that\
    \ takes two integers and returns \n    the product of their unit digits.\n   \
    \ Assume the input is always valid.\n    Examples:\n    >>> multiply(148L, 412L)\n\
    \    16L\n    >>> multiply(19L, 28L)\n    72L\n    >>> multiply(2020L, 1851L)\n\
    \    0L\n    >>> multiply(14L, -15L)\n    20L\n    \n*/\nlong multiply(long a,\
    \ long b) \n{\n    return (a % 10) * (b % 10);\n}\nunittest\n{\n    alias candidate\
    \ = multiply;\n\n    assert(candidate(148L, 412L) == 16L);\n    assert(candidate(19L,\
    \ 28L) == 72L);\n    assert(candidate(2020L, 1851L) == 0L);\n    assert(candidate(14L,\
    \ -15L) == 20L);\n    assert(candidate(76L, 67L) == 42L);\n    assert(candidate(17L,\
    \ 27L) == 49L);\n    assert(candidate(0L, 1L) == 0L);\n    assert(candidate(0L,\
    \ 0L) == 0L);\n}\nvoid main(){}"
  status: Exception
  stderr: 'core.exception.AssertError@/tmp/tmp1saqvwe8.d(29): unittest failure

    ----------------

    ??:? _d_unittestp [0x427de5]

    ??:? void tmp1saqvwe8.__unittest_L22_C1() [0x427ac4]

    ??:? void tmp1saqvwe8.__modtest() [0x427b68]

    ??:? int core.runtime.runModuleUnitTests().__foreachbody2(object.ModuleInfo*)
    [0x42bb0b]

    ??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)).__lambda2(immutable(object.ModuleInfo*))
    [0x42a99e]

    ??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))).__foreachbody2(ref
    rt.sections_elf_shared.DSO) [0x42fb31]

    ??:? int rt.sections_elf_shared.DSO.opApply(scope int delegate(ref rt.sections_elf_shared.DSO))
    [0x42ffe0]

    ??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*)))
    [0x42fabd]

    ??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)) [0x42a975]

    ??:? runModuleUnitTests [0x42b8e1]

    ??:? void rt.dmain2._d_run_main(int, char**, extern (C) int function(char[][])*).runAll()
    [0x428234]

    ??:? void rt.dmain2._d_r'
  stdout: ''
  timestamp: 1660164228
- exit_code: 1
  program: "import std.typecons;\nimport std.math;\n/*\nComplete the function that\
    \ takes two integers and returns \n    the product of their unit digits.\n   \
    \ Assume the input is always valid.\n    Examples:\n    >>> multiply(148L, 412L)\n\
    \    16L\n    >>> multiply(19L, 28L)\n    72L\n    >>> multiply(2020L, 1851L)\n\
    \    0L\n    >>> multiply(14L, -15L)\n    20L\n    \n*/\nlong multiply(long a,\
    \ long b) \n{\n    return (a%10)*(b%10);\n}\nunittest\n{\n    alias candidate\
    \ = multiply;\n\n    assert(candidate(148L, 412L) == 16L);\n    assert(candidate(19L,\
    \ 28L) == 72L);\n    assert(candidate(2020L, 1851L) == 0L);\n    assert(candidate(14L,\
    \ -15L) == 20L);\n    assert(candidate(76L, 67L) == 42L);\n    assert(candidate(17L,\
    \ 27L) == 49L);\n    assert(candidate(0L, 1L) == 0L);\n    assert(candidate(0L,\
    \ 0L) == 0L);\n}\nvoid main(){}"
  status: Exception
  stderr: 'core.exception.AssertError@/tmp/tmpx0vyfebi.d(29): unittest failure

    ----------------

    ??:? _d_unittestp [0x427de5]

    ??:? void tmpx0vyfebi.__unittest_L22_C1() [0x427ac4]

    ??:? void tmpx0vyfebi.__modtest() [0x427b68]

    ??:? int core.runtime.runModuleUnitTests().__foreachbody2(object.ModuleInfo*)
    [0x42bb0b]

    ??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)).__lambda2(immutable(object.ModuleInfo*))
    [0x42a99e]

    ??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))).__foreachbody2(ref
    rt.sections_elf_shared.DSO) [0x42fb31]

    ??:? int rt.sections_elf_shared.DSO.opApply(scope int delegate(ref rt.sections_elf_shared.DSO))
    [0x42ffe0]

    ??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*)))
    [0x42fabd]

    ??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)) [0x42a975]

    ??:? runModuleUnitTests [0x42b8e1]

    ??:? void rt.dmain2._d_run_main(int, char**, extern (C) int function(char[][])*).runAll()
    [0x428234]

    ??:? void rt.dmain2._d_r'
  stdout: ''
  timestamp: 1660164228
- exit_code: 1
  program: "import std.typecons;\nimport std.math;\n/*\nComplete the function that\
    \ takes two integers and returns \n    the product of their unit digits.\n   \
    \ Assume the input is always valid.\n    Examples:\n    >>> multiply(148L, 412L)\n\
    \    16L\n    >>> multiply(19L, 28L)\n    72L\n    >>> multiply(2020L, 1851L)\n\
    \    0L\n    >>> multiply(14L, -15L)\n    20L\n    \n*/\nlong multiply(long a,\
    \ long b) \n{\n    return (a % 10) * (b % 10);\n}\nunittest\n{\n    alias candidate\
    \ = multiply;\n\n    assert(candidate(148L, 412L) == 16L);\n    assert(candidate(19L,\
    \ 28L) == 72L);\n    assert(candidate(2020L, 1851L) == 0L);\n    assert(candidate(14L,\
    \ -15L) == 20L);\n    assert(candidate(76L, 67L) == 42L);\n    assert(candidate(17L,\
    \ 27L) == 49L);\n    assert(candidate(0L, 1L) == 0L);\n    assert(candidate(0L,\
    \ 0L) == 0L);\n}\nvoid main(){}"
  status: Exception
  stderr: 'core.exception.AssertError@/tmp/tmp1saqvwe8.d(29): unittest failure

    ----------------

    ??:? _d_unittestp [0x427de5]

    ??:? void tmp1saqvwe8.__unittest_L22_C1() [0x427ac4]

    ??:? void tmp1saqvwe8.__modtest() [0x427b68]

    ??:? int core.runtime.runModuleUnitTests().__foreachbody2(object.ModuleInfo*)
    [0x42bb0b]

    ??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)).__lambda2(immutable(object.ModuleInfo*))
    [0x42a99e]

    ??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))).__foreachbody2(ref
    rt.sections_elf_shared.DSO) [0x42fb31]

    ??:? int rt.sections_elf_shared.DSO.opApply(scope int delegate(ref rt.sections_elf_shared.DSO))
    [0x42ffe0]

    ??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*)))
    [0x42fabd]

    ??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)) [0x42a975]

    ??:? runModuleUnitTests [0x42b8e1]

    ??:? void rt.dmain2._d_run_main(int, char**, extern (C) int function(char[][])*).runAll()
    [0x428234]

    ??:? void rt.dmain2._d_r'
  stdout: ''
  timestamp: 1660164228
- exit_code: 1
  program: "import std.typecons;\nimport std.math;\n/*\nComplete the function that\
    \ takes two integers and returns \n    the product of their unit digits.\n   \
    \ Assume the input is always valid.\n    Examples:\n    >>> multiply(148L, 412L)\n\
    \    16L\n    >>> multiply(19L, 28L)\n    72L\n    >>> multiply(2020L, 1851L)\n\
    \    0L\n    >>> multiply(14L, -15L)\n    20L\n    \n*/\nlong multiply(long a,\
    \ long b) \n{\n    return (a % 10) * (b % 10);\n}\nunittest\n{\n    alias candidate\
    \ = multiply;\n\n    assert(candidate(148L, 412L) == 16L);\n    assert(candidate(19L,\
    \ 28L) == 72L);\n    assert(candidate(2020L, 1851L) == 0L);\n    assert(candidate(14L,\
    \ -15L) == 20L);\n    assert(candidate(76L, 67L) == 42L);\n    assert(candidate(17L,\
    \ 27L) == 49L);\n    assert(candidate(0L, 1L) == 0L);\n    assert(candidate(0L,\
    \ 0L) == 0L);\n}\nvoid main(){}"
  status: Exception
  stderr: 'core.exception.AssertError@/tmp/tmp1saqvwe8.d(29): unittest failure

    ----------------

    ??:? _d_unittestp [0x427de5]

    ??:? void tmp1saqvwe8.__unittest_L22_C1() [0x427ac4]

    ??:? void tmp1saqvwe8.__modtest() [0x427b68]

    ??:? int core.runtime.runModuleUnitTests().__foreachbody2(object.ModuleInfo*)
    [0x42bb0b]

    ??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)).__lambda2(immutable(object.ModuleInfo*))
    [0x42a99e]

    ??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))).__foreachbody2(ref
    rt.sections_elf_shared.DSO) [0x42fb31]

    ??:? int rt.sections_elf_shared.DSO.opApply(scope int delegate(ref rt.sections_elf_shared.DSO))
    [0x42ffe0]

    ??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*)))
    [0x42fabd]

    ??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)) [0x42a975]

    ??:? runModuleUnitTests [0x42b8e1]

    ??:? void rt.dmain2._d_run_main(int, char**, extern (C) int function(char[][])*).runAll()
    [0x428234]

    ??:? void rt.dmain2._d_r'
  stdout: ''
  timestamp: 1660164228
- exit_code: 1
  program: "import std.typecons;\nimport std.math;\n/*\nComplete the function that\
    \ takes two integers and returns \n    the product of their unit digits.\n   \
    \ Assume the input is always valid.\n    Examples:\n    >>> multiply(148L, 412L)\n\
    \    16L\n    >>> multiply(19L, 28L)\n    72L\n    >>> multiply(2020L, 1851L)\n\
    \    0L\n    >>> multiply(14L, -15L)\n    20L\n    \n*/\nlong multiply(long a,\
    \ long b) \n{\n    return (a % 10) * (b % 10);\n}\nunittest\n{\n    alias candidate\
    \ = multiply;\n\n    assert(candidate(148L, 412L) == 16L);\n    assert(candidate(19L,\
    \ 28L) == 72L);\n    assert(candidate(2020L, 1851L) == 0L);\n    assert(candidate(14L,\
    \ -15L) == 20L);\n    assert(candidate(76L, 67L) == 42L);\n    assert(candidate(17L,\
    \ 27L) == 49L);\n    assert(candidate(0L, 1L) == 0L);\n    assert(candidate(0L,\
    \ 0L) == 0L);\n}\nvoid main(){}"
  status: Exception
  stderr: 'core.exception.AssertError@/tmp/tmp1saqvwe8.d(29): unittest failure

    ----------------

    ??:? _d_unittestp [0x427de5]

    ??:? void tmp1saqvwe8.__unittest_L22_C1() [0x427ac4]

    ??:? void tmp1saqvwe8.__modtest() [0x427b68]

    ??:? int core.runtime.runModuleUnitTests().__foreachbody2(object.ModuleInfo*)
    [0x42bb0b]

    ??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)).__lambda2(immutable(object.ModuleInfo*))
    [0x42a99e]

    ??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))).__foreachbody2(ref
    rt.sections_elf_shared.DSO) [0x42fb31]

    ??:? int rt.sections_elf_shared.DSO.opApply(scope int delegate(ref rt.sections_elf_shared.DSO))
    [0x42ffe0]

    ??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*)))
    [0x42fabd]

    ??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)) [0x42a975]

    ??:? runModuleUnitTests [0x42b8e1]

    ??:? void rt.dmain2._d_run_main(int, char**, extern (C) int function(char[][])*).runAll()
    [0x428234]

    ??:? void rt.dmain2._d_r'
  stdout: ''
  timestamp: 1660164228
- exit_code: 1
  program: "import std.typecons;\nimport std.math;\n/*\nComplete the function that\
    \ takes two integers and returns \n    the product of their unit digits.\n   \
    \ Assume the input is always valid.\n    Examples:\n    >>> multiply(148L, 412L)\n\
    \    16L\n    >>> multiply(19L, 28L)\n    72L\n    >>> multiply(2020L, 1851L)\n\
    \    0L\n    >>> multiply(14L, -15L)\n    20L\n    \n*/\nlong multiply(long a,\
    \ long b) \n{\n    return (a%10)*(b%10);\n}\nunittest\n{\n    alias candidate\
    \ = multiply;\n\n    assert(candidate(148L, 412L) == 16L);\n    assert(candidate(19L,\
    \ 28L) == 72L);\n    assert(candidate(2020L, 1851L) == 0L);\n    assert(candidate(14L,\
    \ -15L) == 20L);\n    assert(candidate(76L, 67L) == 42L);\n    assert(candidate(17L,\
    \ 27L) == 49L);\n    assert(candidate(0L, 1L) == 0L);\n    assert(candidate(0L,\
    \ 0L) == 0L);\n}\nvoid main(){}"
  status: Exception
  stderr: 'core.exception.AssertError@/tmp/tmpx0vyfebi.d(29): unittest failure

    ----------------

    ??:? _d_unittestp [0x427de5]

    ??:? void tmpx0vyfebi.__unittest_L22_C1() [0x427ac4]

    ??:? void tmpx0vyfebi.__modtest() [0x427b68]

    ??:? int core.runtime.runModuleUnitTests().__foreachbody2(object.ModuleInfo*)
    [0x42bb0b]

    ??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)).__lambda2(immutable(object.ModuleInfo*))
    [0x42a99e]

    ??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))).__foreachbody2(ref
    rt.sections_elf_shared.DSO) [0x42fb31]

    ??:? int rt.sections_elf_shared.DSO.opApply(scope int delegate(ref rt.sections_elf_shared.DSO))
    [0x42ffe0]

    ??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*)))
    [0x42fabd]

    ??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)) [0x42a975]

    ??:? runModuleUnitTests [0x42b8e1]

    ??:? void rt.dmain2._d_run_main(int, char**, extern (C) int function(char[][])*).runAll()
    [0x428234]

    ??:? void rt.dmain2._d_r'
  stdout: ''
  timestamp: 1660164228
- exit_code: 1
  program: "import std.typecons;\nimport std.math;\n/*\nComplete the function that\
    \ takes two integers and returns \n    the product of their unit digits.\n   \
    \ Assume the input is always valid.\n    Examples:\n    >>> multiply(148L, 412L)\n\
    \    16L\n    >>> multiply(19L, 28L)\n    72L\n    >>> multiply(2020L, 1851L)\n\
    \    0L\n    >>> multiply(14L, -15L)\n    20L\n    \n*/\nlong multiply(long a,\
    \ long b) \n{\n    return (a % 10) * (b % 10);\n}\nunittest\n{\n    alias candidate\
    \ = multiply;\n\n    assert(candidate(148L, 412L) == 16L);\n    assert(candidate(19L,\
    \ 28L) == 72L);\n    assert(candidate(2020L, 1851L) == 0L);\n    assert(candidate(14L,\
    \ -15L) == 20L);\n    assert(candidate(76L, 67L) == 42L);\n    assert(candidate(17L,\
    \ 27L) == 49L);\n    assert(candidate(0L, 1L) == 0L);\n    assert(candidate(0L,\
    \ 0L) == 0L);\n}\nvoid main(){}"
  status: Exception
  stderr: 'core.exception.AssertError@/tmp/tmp1saqvwe8.d(29): unittest failure

    ----------------

    ??:? _d_unittestp [0x427de5]

    ??:? void tmp1saqvwe8.__unittest_L22_C1() [0x427ac4]

    ??:? void tmp1saqvwe8.__modtest() [0x427b68]

    ??:? int core.runtime.runModuleUnitTests().__foreachbody2(object.ModuleInfo*)
    [0x42bb0b]

    ??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)).__lambda2(immutable(object.ModuleInfo*))
    [0x42a99e]

    ??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))).__foreachbody2(ref
    rt.sections_elf_shared.DSO) [0x42fb31]

    ??:? int rt.sections_elf_shared.DSO.opApply(scope int delegate(ref rt.sections_elf_shared.DSO))
    [0x42ffe0]

    ??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*)))
    [0x42fabd]

    ??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)) [0x42a975]

    ??:? runModuleUnitTests [0x42b8e1]

    ??:? void rt.dmain2._d_run_main(int, char**, extern (C) int function(char[][])*).runAll()
    [0x428234]

    ??:? void rt.dmain2._d_r'
  stdout: ''
  timestamp: 1660164228
- exit_code: 1
  program: "import std.typecons;\nimport std.math;\n/*\nComplete the function that\
    \ takes two integers and returns \n    the product of their unit digits.\n   \
    \ Assume the input is always valid.\n    Examples:\n    >>> multiply(148L, 412L)\n\
    \    16L\n    >>> multiply(19L, 28L)\n    72L\n    >>> multiply(2020L, 1851L)\n\
    \    0L\n    >>> multiply(14L, -15L)\n    20L\n    \n*/\nlong multiply(long a,\
    \ long b) \n{\n    return (a % 10) * (b % 10);\n}\nunittest\n{\n    alias candidate\
    \ = multiply;\n\n    assert(candidate(148L, 412L) == 16L);\n    assert(candidate(19L,\
    \ 28L) == 72L);\n    assert(candidate(2020L, 1851L) == 0L);\n    assert(candidate(14L,\
    \ -15L) == 20L);\n    assert(candidate(76L, 67L) == 42L);\n    assert(candidate(17L,\
    \ 27L) == 49L);\n    assert(candidate(0L, 1L) == 0L);\n    assert(candidate(0L,\
    \ 0L) == 0L);\n}\nvoid main(){}"
  status: Exception
  stderr: 'core.exception.AssertError@/tmp/tmp1saqvwe8.d(29): unittest failure

    ----------------

    ??:? _d_unittestp [0x427de5]

    ??:? void tmp1saqvwe8.__unittest_L22_C1() [0x427ac4]

    ??:? void tmp1saqvwe8.__modtest() [0x427b68]

    ??:? int core.runtime.runModuleUnitTests().__foreachbody2(object.ModuleInfo*)
    [0x42bb0b]

    ??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)).__lambda2(immutable(object.ModuleInfo*))
    [0x42a99e]

    ??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))).__foreachbody2(ref
    rt.sections_elf_shared.DSO) [0x42fb31]

    ??:? int rt.sections_elf_shared.DSO.opApply(scope int delegate(ref rt.sections_elf_shared.DSO))
    [0x42ffe0]

    ??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*)))
    [0x42fabd]

    ??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)) [0x42a975]

    ??:? runModuleUnitTests [0x42b8e1]

    ??:? void rt.dmain2._d_run_main(int, char**, extern (C) int function(char[][])*).runAll()
    [0x428234]

    ??:? void rt.dmain2._d_r'
  stdout: ''
  timestamp: 1660164228
- exit_code: 1
  program: "import std.typecons;\nimport std.math;\n/*\nComplete the function that\
    \ takes two integers and returns \n    the product of their unit digits.\n   \
    \ Assume the input is always valid.\n    Examples:\n    >>> multiply(148L, 412L)\n\
    \    16L\n    >>> multiply(19L, 28L)\n    72L\n    >>> multiply(2020L, 1851L)\n\
    \    0L\n    >>> multiply(14L, -15L)\n    20L\n    \n*/\nlong multiply(long a,\
    \ long b) \n{\n    return (a % 10) * (b % 10);\n}\nunittest\n{\n    alias candidate\
    \ = multiply;\n\n    assert(candidate(148L, 412L) == 16L);\n    assert(candidate(19L,\
    \ 28L) == 72L);\n    assert(candidate(2020L, 1851L) == 0L);\n    assert(candidate(14L,\
    \ -15L) == 20L);\n    assert(candidate(76L, 67L) == 42L);\n    assert(candidate(17L,\
    \ 27L) == 49L);\n    assert(candidate(0L, 1L) == 0L);\n    assert(candidate(0L,\
    \ 0L) == 0L);\n}\nvoid main(){}"
  status: Exception
  stderr: 'core.exception.AssertError@/tmp/tmp1saqvwe8.d(29): unittest failure

    ----------------

    ??:? _d_unittestp [0x427de5]

    ??:? void tmp1saqvwe8.__unittest_L22_C1() [0x427ac4]

    ??:? void tmp1saqvwe8.__modtest() [0x427b68]

    ??:? int core.runtime.runModuleUnitTests().__foreachbody2(object.ModuleInfo*)
    [0x42bb0b]

    ??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)).__lambda2(immutable(object.ModuleInfo*))
    [0x42a99e]

    ??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))).__foreachbody2(ref
    rt.sections_elf_shared.DSO) [0x42fb31]

    ??:? int rt.sections_elf_shared.DSO.opApply(scope int delegate(ref rt.sections_elf_shared.DSO))
    [0x42ffe0]

    ??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*)))
    [0x42fabd]

    ??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)) [0x42a975]

    ??:? runModuleUnitTests [0x42b8e1]

    ??:? void rt.dmain2._d_run_main(int, char**, extern (C) int function(char[][])*).runAll()
    [0x428234]

    ??:? void rt.dmain2._d_r'
  stdout: ''
  timestamp: 1660164228
- exit_code: 1
  program: "import std.typecons;\nimport std.math;\n/*\nComplete the function that\
    \ takes two integers and returns \n    the product of their unit digits.\n   \
    \ Assume the input is always valid.\n    Examples:\n    >>> multiply(148L, 412L)\n\
    \    16L\n    >>> multiply(19L, 28L)\n    72L\n    >>> multiply(2020L, 1851L)\n\
    \    0L\n    >>> multiply(14L, -15L)\n    20L\n    \n*/\nlong multiply(long a,\
    \ long b) \n{\n    return (a % 10) * (b % 10);\n}\nunittest\n{\n    alias candidate\
    \ = multiply;\n\n    assert(candidate(148L, 412L) == 16L);\n    assert(candidate(19L,\
    \ 28L) == 72L);\n    assert(candidate(2020L, 1851L) == 0L);\n    assert(candidate(14L,\
    \ -15L) == 20L);\n    assert(candidate(76L, 67L) == 42L);\n    assert(candidate(17L,\
    \ 27L) == 49L);\n    assert(candidate(0L, 1L) == 0L);\n    assert(candidate(0L,\
    \ 0L) == 0L);\n}\nvoid main(){}"
  status: Exception
  stderr: 'core.exception.AssertError@/tmp/tmp1saqvwe8.d(29): unittest failure

    ----------------

    ??:? _d_unittestp [0x427de5]

    ??:? void tmp1saqvwe8.__unittest_L22_C1() [0x427ac4]

    ??:? void tmp1saqvwe8.__modtest() [0x427b68]

    ??:? int core.runtime.runModuleUnitTests().__foreachbody2(object.ModuleInfo*)
    [0x42bb0b]

    ??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)).__lambda2(immutable(object.ModuleInfo*))
    [0x42a99e]

    ??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))).__foreachbody2(ref
    rt.sections_elf_shared.DSO) [0x42fb31]

    ??:? int rt.sections_elf_shared.DSO.opApply(scope int delegate(ref rt.sections_elf_shared.DSO))
    [0x42ffe0]

    ??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*)))
    [0x42fabd]

    ??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)) [0x42a975]

    ??:? runModuleUnitTests [0x42b8e1]

    ??:? void rt.dmain2._d_run_main(int, char**, extern (C) int function(char[][])*).runAll()
    [0x428234]

    ??:? void rt.dmain2._d_r'
  stdout: ''
  timestamp: 1660164228
- exit_code: 1
  program: "import std.typecons;\nimport std.math;\n/*\nComplete the function that\
    \ takes two integers and returns \n    the product of their unit digits.\n   \
    \ Assume the input is always valid.\n    Examples:\n    >>> multiply(148L, 412L)\n\
    \    16L\n    >>> multiply(19L, 28L)\n    72L\n    >>> multiply(2020L, 1851L)\n\
    \    0L\n    >>> multiply(14L, -15L)\n    20L\n    \n*/\nlong multiply(long a,\
    \ long b) \n{\n    return (a % 10) * (b % 10);\n}\nunittest\n{\n    alias candidate\
    \ = multiply;\n\n    assert(candidate(148L, 412L) == 16L);\n    assert(candidate(19L,\
    \ 28L) == 72L);\n    assert(candidate(2020L, 1851L) == 0L);\n    assert(candidate(14L,\
    \ -15L) == 20L);\n    assert(candidate(76L, 67L) == 42L);\n    assert(candidate(17L,\
    \ 27L) == 49L);\n    assert(candidate(0L, 1L) == 0L);\n    assert(candidate(0L,\
    \ 0L) == 0L);\n}\nvoid main(){}"
  status: Exception
  stderr: 'core.exception.AssertError@/tmp/tmp1saqvwe8.d(29): unittest failure

    ----------------

    ??:? _d_unittestp [0x427de5]

    ??:? void tmp1saqvwe8.__unittest_L22_C1() [0x427ac4]

    ??:? void tmp1saqvwe8.__modtest() [0x427b68]

    ??:? int core.runtime.runModuleUnitTests().__foreachbody2(object.ModuleInfo*)
    [0x42bb0b]

    ??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)).__lambda2(immutable(object.ModuleInfo*))
    [0x42a99e]

    ??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))).__foreachbody2(ref
    rt.sections_elf_shared.DSO) [0x42fb31]

    ??:? int rt.sections_elf_shared.DSO.opApply(scope int delegate(ref rt.sections_elf_shared.DSO))
    [0x42ffe0]

    ??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*)))
    [0x42fabd]

    ??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)) [0x42a975]

    ??:? runModuleUnitTests [0x42b8e1]

    ??:? void rt.dmain2._d_run_main(int, char**, extern (C) int function(char[][])*).runAll()
    [0x428234]

    ??:? void rt.dmain2._d_r'
  stdout: ''
  timestamp: 1660164228
- exit_code: 1
  program: "import std.typecons;\nimport std.math;\n/*\nComplete the function that\
    \ takes two integers and returns \n    the product of their unit digits.\n   \
    \ Assume the input is always valid.\n    Examples:\n    >>> multiply(148L, 412L)\n\
    \    16L\n    >>> multiply(19L, 28L)\n    72L\n    >>> multiply(2020L, 1851L)\n\
    \    0L\n    >>> multiply(14L, -15L)\n    20L\n    \n*/\nlong multiply(long a,\
    \ long b) \n{\n    return (a % 10) * (b % 10);\n}\nunittest\n{\n    alias candidate\
    \ = multiply;\n\n    assert(candidate(148L, 412L) == 16L);\n    assert(candidate(19L,\
    \ 28L) == 72L);\n    assert(candidate(2020L, 1851L) == 0L);\n    assert(candidate(14L,\
    \ -15L) == 20L);\n    assert(candidate(76L, 67L) == 42L);\n    assert(candidate(17L,\
    \ 27L) == 49L);\n    assert(candidate(0L, 1L) == 0L);\n    assert(candidate(0L,\
    \ 0L) == 0L);\n}\nvoid main(){}"
  status: Exception
  stderr: 'core.exception.AssertError@/tmp/tmp1saqvwe8.d(29): unittest failure

    ----------------

    ??:? _d_unittestp [0x427de5]

    ??:? void tmp1saqvwe8.__unittest_L22_C1() [0x427ac4]

    ??:? void tmp1saqvwe8.__modtest() [0x427b68]

    ??:? int core.runtime.runModuleUnitTests().__foreachbody2(object.ModuleInfo*)
    [0x42bb0b]

    ??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)).__lambda2(immutable(object.ModuleInfo*))
    [0x42a99e]

    ??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))).__foreachbody2(ref
    rt.sections_elf_shared.DSO) [0x42fb31]

    ??:? int rt.sections_elf_shared.DSO.opApply(scope int delegate(ref rt.sections_elf_shared.DSO))
    [0x42ffe0]

    ??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*)))
    [0x42fabd]

    ??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)) [0x42a975]

    ??:? runModuleUnitTests [0x42b8e1]

    ??:? void rt.dmain2._d_run_main(int, char**, extern (C) int function(char[][])*).runAll()
    [0x428234]

    ??:? void rt.dmain2._d_r'
  stdout: ''
  timestamp: 1660164228
- exit_code: 1
  program: "import std.typecons;\nimport std.math;\n/*\nComplete the function that\
    \ takes two integers and returns \n    the product of their unit digits.\n   \
    \ Assume the input is always valid.\n    Examples:\n    >>> multiply(148L, 412L)\n\
    \    16L\n    >>> multiply(19L, 28L)\n    72L\n    >>> multiply(2020L, 1851L)\n\
    \    0L\n    >>> multiply(14L, -15L)\n    20L\n    \n*/\nlong multiply(long a,\
    \ long b) \n{\n    return (a % 10) * (b % 10);\n}\nunittest\n{\n    alias candidate\
    \ = multiply;\n\n    assert(candidate(148L, 412L) == 16L);\n    assert(candidate(19L,\
    \ 28L) == 72L);\n    assert(candidate(2020L, 1851L) == 0L);\n    assert(candidate(14L,\
    \ -15L) == 20L);\n    assert(candidate(76L, 67L) == 42L);\n    assert(candidate(17L,\
    \ 27L) == 49L);\n    assert(candidate(0L, 1L) == 0L);\n    assert(candidate(0L,\
    \ 0L) == 0L);\n}\nvoid main(){}"
  status: Exception
  stderr: 'core.exception.AssertError@/tmp/tmp1saqvwe8.d(29): unittest failure

    ----------------

    ??:? _d_unittestp [0x427de5]

    ??:? void tmp1saqvwe8.__unittest_L22_C1() [0x427ac4]

    ??:? void tmp1saqvwe8.__modtest() [0x427b68]

    ??:? int core.runtime.runModuleUnitTests().__foreachbody2(object.ModuleInfo*)
    [0x42bb0b]

    ??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)).__lambda2(immutable(object.ModuleInfo*))
    [0x42a99e]

    ??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))).__foreachbody2(ref
    rt.sections_elf_shared.DSO) [0x42fb31]

    ??:? int rt.sections_elf_shared.DSO.opApply(scope int delegate(ref rt.sections_elf_shared.DSO))
    [0x42ffe0]

    ??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*)))
    [0x42fabd]

    ??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)) [0x42a975]

    ??:? runModuleUnitTests [0x42b8e1]

    ??:? void rt.dmain2._d_run_main(int, char**, extern (C) int function(char[][])*).runAll()
    [0x428234]

    ??:? void rt.dmain2._d_r'
  stdout: ''
  timestamp: 1660164228
- exit_code: 1
  program: "import std.typecons;\nimport std.math;\n/*\nComplete the function that\
    \ takes two integers and returns \n    the product of their unit digits.\n   \
    \ Assume the input is always valid.\n    Examples:\n    >>> multiply(148L, 412L)\n\
    \    16L\n    >>> multiply(19L, 28L)\n    72L\n    >>> multiply(2020L, 1851L)\n\
    \    0L\n    >>> multiply(14L, -15L)\n    20L\n    \n*/\nlong multiply(long a,\
    \ long b) \n{\n    return (a % 10) * (b % 10);\n}\nunittest\n{\n    alias candidate\
    \ = multiply;\n\n    assert(candidate(148L, 412L) == 16L);\n    assert(candidate(19L,\
    \ 28L) == 72L);\n    assert(candidate(2020L, 1851L) == 0L);\n    assert(candidate(14L,\
    \ -15L) == 20L);\n    assert(candidate(76L, 67L) == 42L);\n    assert(candidate(17L,\
    \ 27L) == 49L);\n    assert(candidate(0L, 1L) == 0L);\n    assert(candidate(0L,\
    \ 0L) == 0L);\n}\nvoid main(){}"
  status: Exception
  stderr: 'core.exception.AssertError@/tmp/tmp1saqvwe8.d(29): unittest failure

    ----------------

    ??:? _d_unittestp [0x427de5]

    ??:? void tmp1saqvwe8.__unittest_L22_C1() [0x427ac4]

    ??:? void tmp1saqvwe8.__modtest() [0x427b68]

    ??:? int core.runtime.runModuleUnitTests().__foreachbody2(object.ModuleInfo*)
    [0x42bb0b]

    ??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)).__lambda2(immutable(object.ModuleInfo*))
    [0x42a99e]

    ??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))).__foreachbody2(ref
    rt.sections_elf_shared.DSO) [0x42fb31]

    ??:? int rt.sections_elf_shared.DSO.opApply(scope int delegate(ref rt.sections_elf_shared.DSO))
    [0x42ffe0]

    ??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*)))
    [0x42fabd]

    ??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)) [0x42a975]

    ??:? runModuleUnitTests [0x42b8e1]

    ??:? void rt.dmain2._d_run_main(int, char**, extern (C) int function(char[][])*).runAll()
    [0x428234]

    ??:? void rt.dmain2._d_r'
  stdout: ''
  timestamp: 1660164228
- exit_code: 1
  program: "import std.typecons;\nimport std.math;\n/*\nComplete the function that\
    \ takes two integers and returns \n    the product of their unit digits.\n   \
    \ Assume the input is always valid.\n    Examples:\n    >>> multiply(148L, 412L)\n\
    \    16L\n    >>> multiply(19L, 28L)\n    72L\n    >>> multiply(2020L, 1851L)\n\
    \    0L\n    >>> multiply(14L, -15L)\n    20L\n    \n*/\nlong multiply(long a,\
    \ long b) \n{\n    return (a % 10) * (b % 10);\n}\nunittest\n{\n    alias candidate\
    \ = multiply;\n\n    assert(candidate(148L, 412L) == 16L);\n    assert(candidate(19L,\
    \ 28L) == 72L);\n    assert(candidate(2020L, 1851L) == 0L);\n    assert(candidate(14L,\
    \ -15L) == 20L);\n    assert(candidate(76L, 67L) == 42L);\n    assert(candidate(17L,\
    \ 27L) == 49L);\n    assert(candidate(0L, 1L) == 0L);\n    assert(candidate(0L,\
    \ 0L) == 0L);\n}\nvoid main(){}"
  status: Exception
  stderr: 'core.exception.AssertError@/tmp/tmp1saqvwe8.d(29): unittest failure

    ----------------

    ??:? _d_unittestp [0x427de5]

    ??:? void tmp1saqvwe8.__unittest_L22_C1() [0x427ac4]

    ??:? void tmp1saqvwe8.__modtest() [0x427b68]

    ??:? int core.runtime.runModuleUnitTests().__foreachbody2(object.ModuleInfo*)
    [0x42bb0b]

    ??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)).__lambda2(immutable(object.ModuleInfo*))
    [0x42a99e]

    ??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))).__foreachbody2(ref
    rt.sections_elf_shared.DSO) [0x42fb31]

    ??:? int rt.sections_elf_shared.DSO.opApply(scope int delegate(ref rt.sections_elf_shared.DSO))
    [0x42ffe0]

    ??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*)))
    [0x42fabd]

    ??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)) [0x42a975]

    ??:? runModuleUnitTests [0x42b8e1]

    ??:? void rt.dmain2._d_run_main(int, char**, extern (C) int function(char[][])*).runAll()
    [0x428234]

    ??:? void rt.dmain2._d_r'
  stdout: ''
  timestamp: 1660164228
- exit_code: 1
  program: "import std.typecons;\nimport std.math;\n/*\nComplete the function that\
    \ takes two integers and returns \n    the product of their unit digits.\n   \
    \ Assume the input is always valid.\n    Examples:\n    >>> multiply(148L, 412L)\n\
    \    16L\n    >>> multiply(19L, 28L)\n    72L\n    >>> multiply(2020L, 1851L)\n\
    \    0L\n    >>> multiply(14L, -15L)\n    20L\n    \n*/\nlong multiply(long a,\
    \ long b) \n{\n    return (a%10)*(b%10);\n}\nunittest\n{\n    alias candidate\
    \ = multiply;\n\n    assert(candidate(148L, 412L) == 16L);\n    assert(candidate(19L,\
    \ 28L) == 72L);\n    assert(candidate(2020L, 1851L) == 0L);\n    assert(candidate(14L,\
    \ -15L) == 20L);\n    assert(candidate(76L, 67L) == 42L);\n    assert(candidate(17L,\
    \ 27L) == 49L);\n    assert(candidate(0L, 1L) == 0L);\n    assert(candidate(0L,\
    \ 0L) == 0L);\n}\nvoid main(){}"
  status: Exception
  stderr: 'core.exception.AssertError@/tmp/tmpx0vyfebi.d(29): unittest failure

    ----------------

    ??:? _d_unittestp [0x427de5]

    ??:? void tmpx0vyfebi.__unittest_L22_C1() [0x427ac4]

    ??:? void tmpx0vyfebi.__modtest() [0x427b68]

    ??:? int core.runtime.runModuleUnitTests().__foreachbody2(object.ModuleInfo*)
    [0x42bb0b]

    ??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)).__lambda2(immutable(object.ModuleInfo*))
    [0x42a99e]

    ??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))).__foreachbody2(ref
    rt.sections_elf_shared.DSO) [0x42fb31]

    ??:? int rt.sections_elf_shared.DSO.opApply(scope int delegate(ref rt.sections_elf_shared.DSO))
    [0x42ffe0]

    ??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*)))
    [0x42fabd]

    ??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)) [0x42a975]

    ??:? runModuleUnitTests [0x42b8e1]

    ??:? void rt.dmain2._d_run_main(int, char**, extern (C) int function(char[][])*).runAll()
    [0x428234]

    ??:? void rt.dmain2._d_r'
  stdout: ''
  timestamp: 1660164228
- exit_code: 1
  program: "import std.typecons;\nimport std.math;\n/*\nComplete the function that\
    \ takes two integers and returns \n    the product of their unit digits.\n   \
    \ Assume the input is always valid.\n    Examples:\n    >>> multiply(148L, 412L)\n\
    \    16L\n    >>> multiply(19L, 28L)\n    72L\n    >>> multiply(2020L, 1851L)\n\
    \    0L\n    >>> multiply(14L, -15L)\n    20L\n    \n*/\nlong multiply(long a,\
    \ long b) \n{\n    return (a % 10) * (b % 10);\n}\nunittest\n{\n    alias candidate\
    \ = multiply;\n\n    assert(candidate(148L, 412L) == 16L);\n    assert(candidate(19L,\
    \ 28L) == 72L);\n    assert(candidate(2020L, 1851L) == 0L);\n    assert(candidate(14L,\
    \ -15L) == 20L);\n    assert(candidate(76L, 67L) == 42L);\n    assert(candidate(17L,\
    \ 27L) == 49L);\n    assert(candidate(0L, 1L) == 0L);\n    assert(candidate(0L,\
    \ 0L) == 0L);\n}\nvoid main(){}"
  status: Exception
  stderr: 'core.exception.AssertError@/tmp/tmp1saqvwe8.d(29): unittest failure

    ----------------

    ??:? _d_unittestp [0x427de5]

    ??:? void tmp1saqvwe8.__unittest_L22_C1() [0x427ac4]

    ??:? void tmp1saqvwe8.__modtest() [0x427b68]

    ??:? int core.runtime.runModuleUnitTests().__foreachbody2(object.ModuleInfo*)
    [0x42bb0b]

    ??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)).__lambda2(immutable(object.ModuleInfo*))
    [0x42a99e]

    ??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))).__foreachbody2(ref
    rt.sections_elf_shared.DSO) [0x42fb31]

    ??:? int rt.sections_elf_shared.DSO.opApply(scope int delegate(ref rt.sections_elf_shared.DSO))
    [0x42ffe0]

    ??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*)))
    [0x42fabd]

    ??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)) [0x42a975]

    ??:? runModuleUnitTests [0x42b8e1]

    ??:? void rt.dmain2._d_run_main(int, char**, extern (C) int function(char[][])*).runAll()
    [0x428234]

    ??:? void rt.dmain2._d_r'
  stdout: ''
  timestamp: 1660164228
- exit_code: 1
  program: "import std.typecons;\nimport std.math;\n/*\nComplete the function that\
    \ takes two integers and returns \n    the product of their unit digits.\n   \
    \ Assume the input is always valid.\n    Examples:\n    >>> multiply(148L, 412L)\n\
    \    16L\n    >>> multiply(19L, 28L)\n    72L\n    >>> multiply(2020L, 1851L)\n\
    \    0L\n    >>> multiply(14L, -15L)\n    20L\n    \n*/\nlong multiply(long a,\
    \ long b) \n{\n    return (a % 10) * (b % 10);\n}\nunittest\n{\n    alias candidate\
    \ = multiply;\n\n    assert(candidate(148L, 412L) == 16L);\n    assert(candidate(19L,\
    \ 28L) == 72L);\n    assert(candidate(2020L, 1851L) == 0L);\n    assert(candidate(14L,\
    \ -15L) == 20L);\n    assert(candidate(76L, 67L) == 42L);\n    assert(candidate(17L,\
    \ 27L) == 49L);\n    assert(candidate(0L, 1L) == 0L);\n    assert(candidate(0L,\
    \ 0L) == 0L);\n}\nvoid main(){}"
  status: Exception
  stderr: 'core.exception.AssertError@/tmp/tmp1saqvwe8.d(29): unittest failure

    ----------------

    ??:? _d_unittestp [0x427de5]

    ??:? void tmp1saqvwe8.__unittest_L22_C1() [0x427ac4]

    ??:? void tmp1saqvwe8.__modtest() [0x427b68]

    ??:? int core.runtime.runModuleUnitTests().__foreachbody2(object.ModuleInfo*)
    [0x42bb0b]

    ??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)).__lambda2(immutable(object.ModuleInfo*))
    [0x42a99e]

    ??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))).__foreachbody2(ref
    rt.sections_elf_shared.DSO) [0x42fb31]

    ??:? int rt.sections_elf_shared.DSO.opApply(scope int delegate(ref rt.sections_elf_shared.DSO))
    [0x42ffe0]

    ??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*)))
    [0x42fabd]

    ??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)) [0x42a975]

    ??:? runModuleUnitTests [0x42b8e1]

    ??:? void rt.dmain2._d_run_main(int, char**, extern (C) int function(char[][])*).runAll()
    [0x428234]

    ??:? void rt.dmain2._d_r'
  stdout: ''
  timestamp: 1660164228
- exit_code: 1
  program: "import std.typecons;\nimport std.math;\n/*\nComplete the function that\
    \ takes two integers and returns \n    the product of their unit digits.\n   \
    \ Assume the input is always valid.\n    Examples:\n    >>> multiply(148L, 412L)\n\
    \    16L\n    >>> multiply(19L, 28L)\n    72L\n    >>> multiply(2020L, 1851L)\n\
    \    0L\n    >>> multiply(14L, -15L)\n    20L\n    \n*/\nlong multiply(long a,\
    \ long b) \n{\n    return (a % 10) * (b % 10);\n}\nunittest\n{\n    alias candidate\
    \ = multiply;\n\n    assert(candidate(148L, 412L) == 16L);\n    assert(candidate(19L,\
    \ 28L) == 72L);\n    assert(candidate(2020L, 1851L) == 0L);\n    assert(candidate(14L,\
    \ -15L) == 20L);\n    assert(candidate(76L, 67L) == 42L);\n    assert(candidate(17L,\
    \ 27L) == 49L);\n    assert(candidate(0L, 1L) == 0L);\n    assert(candidate(0L,\
    \ 0L) == 0L);\n}\nvoid main(){}"
  status: Exception
  stderr: 'core.exception.AssertError@/tmp/tmp1saqvwe8.d(29): unittest failure

    ----------------

    ??:? _d_unittestp [0x427de5]

    ??:? void tmp1saqvwe8.__unittest_L22_C1() [0x427ac4]

    ??:? void tmp1saqvwe8.__modtest() [0x427b68]

    ??:? int core.runtime.runModuleUnitTests().__foreachbody2(object.ModuleInfo*)
    [0x42bb0b]

    ??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)).__lambda2(immutable(object.ModuleInfo*))
    [0x42a99e]

    ??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))).__foreachbody2(ref
    rt.sections_elf_shared.DSO) [0x42fb31]

    ??:? int rt.sections_elf_shared.DSO.opApply(scope int delegate(ref rt.sections_elf_shared.DSO))
    [0x42ffe0]

    ??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*)))
    [0x42fabd]

    ??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)) [0x42a975]

    ??:? runModuleUnitTests [0x42b8e1]

    ??:? void rt.dmain2._d_run_main(int, char**, extern (C) int function(char[][])*).runAll()
    [0x428234]

    ??:? void rt.dmain2._d_r'
  stdout: ''
  timestamp: 1660164228
- exit_code: 1
  program: "import std.typecons;\nimport std.math;\n/*\nComplete the function that\
    \ takes two integers and returns \n    the product of their unit digits.\n   \
    \ Assume the input is always valid.\n    Examples:\n    >>> multiply(148L, 412L)\n\
    \    16L\n    >>> multiply(19L, 28L)\n    72L\n    >>> multiply(2020L, 1851L)\n\
    \    0L\n    >>> multiply(14L, -15L)\n    20L\n    \n*/\nlong multiply(long a,\
    \ long b) \n{\n    return (a % 10) * (b % 10);\n}\nunittest\n{\n    alias candidate\
    \ = multiply;\n\n    assert(candidate(148L, 412L) == 16L);\n    assert(candidate(19L,\
    \ 28L) == 72L);\n    assert(candidate(2020L, 1851L) == 0L);\n    assert(candidate(14L,\
    \ -15L) == 20L);\n    assert(candidate(76L, 67L) == 42L);\n    assert(candidate(17L,\
    \ 27L) == 49L);\n    assert(candidate(0L, 1L) == 0L);\n    assert(candidate(0L,\
    \ 0L) == 0L);\n}\nvoid main(){}"
  status: Exception
  stderr: 'core.exception.AssertError@/tmp/tmp1saqvwe8.d(29): unittest failure

    ----------------

    ??:? _d_unittestp [0x427de5]

    ??:? void tmp1saqvwe8.__unittest_L22_C1() [0x427ac4]

    ??:? void tmp1saqvwe8.__modtest() [0x427b68]

    ??:? int core.runtime.runModuleUnitTests().__foreachbody2(object.ModuleInfo*)
    [0x42bb0b]

    ??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)).__lambda2(immutable(object.ModuleInfo*))
    [0x42a99e]

    ??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))).__foreachbody2(ref
    rt.sections_elf_shared.DSO) [0x42fb31]

    ??:? int rt.sections_elf_shared.DSO.opApply(scope int delegate(ref rt.sections_elf_shared.DSO))
    [0x42ffe0]

    ??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*)))
    [0x42fabd]

    ??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)) [0x42a975]

    ??:? runModuleUnitTests [0x42b8e1]

    ??:? void rt.dmain2._d_run_main(int, char**, extern (C) int function(char[][])*).runAll()
    [0x428234]

    ??:? void rt.dmain2._d_r'
  stdout: ''
  timestamp: 1660164228
- exit_code: 1
  program: "import std.typecons;\nimport std.math;\n/*\nComplete the function that\
    \ takes two integers and returns \n    the product of their unit digits.\n   \
    \ Assume the input is always valid.\n    Examples:\n    >>> multiply(148L, 412L)\n\
    \    16L\n    >>> multiply(19L, 28L)\n    72L\n    >>> multiply(2020L, 1851L)\n\
    \    0L\n    >>> multiply(14L, -15L)\n    20L\n    \n*/\nlong multiply(long a,\
    \ long b) \n{\n    return (a % 10) * (b % 10);\n}\nunittest\n{\n    alias candidate\
    \ = multiply;\n\n    assert(candidate(148L, 412L) == 16L);\n    assert(candidate(19L,\
    \ 28L) == 72L);\n    assert(candidate(2020L, 1851L) == 0L);\n    assert(candidate(14L,\
    \ -15L) == 20L);\n    assert(candidate(76L, 67L) == 42L);\n    assert(candidate(17L,\
    \ 27L) == 49L);\n    assert(candidate(0L, 1L) == 0L);\n    assert(candidate(0L,\
    \ 0L) == 0L);\n}\nvoid main(){}"
  status: Exception
  stderr: 'core.exception.AssertError@/tmp/tmp1saqvwe8.d(29): unittest failure

    ----------------

    ??:? _d_unittestp [0x427de5]

    ??:? void tmp1saqvwe8.__unittest_L22_C1() [0x427ac4]

    ??:? void tmp1saqvwe8.__modtest() [0x427b68]

    ??:? int core.runtime.runModuleUnitTests().__foreachbody2(object.ModuleInfo*)
    [0x42bb0b]

    ??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)).__lambda2(immutable(object.ModuleInfo*))
    [0x42a99e]

    ??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))).__foreachbody2(ref
    rt.sections_elf_shared.DSO) [0x42fb31]

    ??:? int rt.sections_elf_shared.DSO.opApply(scope int delegate(ref rt.sections_elf_shared.DSO))
    [0x42ffe0]

    ??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*)))
    [0x42fabd]

    ??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)) [0x42a975]

    ??:? runModuleUnitTests [0x42b8e1]

    ??:? void rt.dmain2._d_run_main(int, char**, extern (C) int function(char[][])*).runAll()
    [0x428234]

    ??:? void rt.dmain2._d_r'
  stdout: ''
  timestamp: 1660164228
- exit_code: 1
  program: "import std.typecons;\nimport std.math;\n/*\nComplete the function that\
    \ takes two integers and returns \n    the product of their unit digits.\n   \
    \ Assume the input is always valid.\n    Examples:\n    >>> multiply(148L, 412L)\n\
    \    16L\n    >>> multiply(19L, 28L)\n    72L\n    >>> multiply(2020L, 1851L)\n\
    \    0L\n    >>> multiply(14L, -15L)\n    20L\n    \n*/\nlong multiply(long a,\
    \ long b) \n{\n    return (a % 10) * (b % 10);\n}\nunittest\n{\n    alias candidate\
    \ = multiply;\n\n    assert(candidate(148L, 412L) == 16L);\n    assert(candidate(19L,\
    \ 28L) == 72L);\n    assert(candidate(2020L, 1851L) == 0L);\n    assert(candidate(14L,\
    \ -15L) == 20L);\n    assert(candidate(76L, 67L) == 42L);\n    assert(candidate(17L,\
    \ 27L) == 49L);\n    assert(candidate(0L, 1L) == 0L);\n    assert(candidate(0L,\
    \ 0L) == 0L);\n}\nvoid main(){}"
  status: Exception
  stderr: 'core.exception.AssertError@/tmp/tmp1saqvwe8.d(29): unittest failure

    ----------------

    ??:? _d_unittestp [0x427de5]

    ??:? void tmp1saqvwe8.__unittest_L22_C1() [0x427ac4]

    ??:? void tmp1saqvwe8.__modtest() [0x427b68]

    ??:? int core.runtime.runModuleUnitTests().__foreachbody2(object.ModuleInfo*)
    [0x42bb0b]

    ??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)).__lambda2(immutable(object.ModuleInfo*))
    [0x42a99e]

    ??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))).__foreachbody2(ref
    rt.sections_elf_shared.DSO) [0x42fb31]

    ??:? int rt.sections_elf_shared.DSO.opApply(scope int delegate(ref rt.sections_elf_shared.DSO))
    [0x42ffe0]

    ??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*)))
    [0x42fabd]

    ??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)) [0x42a975]

    ??:? runModuleUnitTests [0x42b8e1]

    ??:? void rt.dmain2._d_run_main(int, char**, extern (C) int function(char[][])*).runAll()
    [0x428234]

    ??:? void rt.dmain2._d_r'
  stdout: ''
  timestamp: 1660164228
- exit_code: 1
  program: "import std.typecons;\nimport std.math;\n/*\nComplete the function that\
    \ takes two integers and returns \n    the product of their unit digits.\n   \
    \ Assume the input is always valid.\n    Examples:\n    >>> multiply(148L, 412L)\n\
    \    16L\n    >>> multiply(19L, 28L)\n    72L\n    >>> multiply(2020L, 1851L)\n\
    \    0L\n    >>> multiply(14L, -15L)\n    20L\n    \n*/\nlong multiply(long a,\
    \ long b) \n{\n    return (a % 10) * (b % 10);\n}\nunittest\n{\n    alias candidate\
    \ = multiply;\n\n    assert(candidate(148L, 412L) == 16L);\n    assert(candidate(19L,\
    \ 28L) == 72L);\n    assert(candidate(2020L, 1851L) == 0L);\n    assert(candidate(14L,\
    \ -15L) == 20L);\n    assert(candidate(76L, 67L) == 42L);\n    assert(candidate(17L,\
    \ 27L) == 49L);\n    assert(candidate(0L, 1L) == 0L);\n    assert(candidate(0L,\
    \ 0L) == 0L);\n}\nvoid main(){}"
  status: Exception
  stderr: 'core.exception.AssertError@/tmp/tmp1saqvwe8.d(29): unittest failure

    ----------------

    ??:? _d_unittestp [0x427de5]

    ??:? void tmp1saqvwe8.__unittest_L22_C1() [0x427ac4]

    ??:? void tmp1saqvwe8.__modtest() [0x427b68]

    ??:? int core.runtime.runModuleUnitTests().__foreachbody2(object.ModuleInfo*)
    [0x42bb0b]

    ??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)).__lambda2(immutable(object.ModuleInfo*))
    [0x42a99e]

    ??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))).__foreachbody2(ref
    rt.sections_elf_shared.DSO) [0x42fb31]

    ??:? int rt.sections_elf_shared.DSO.opApply(scope int delegate(ref rt.sections_elf_shared.DSO))
    [0x42ffe0]

    ??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*)))
    [0x42fabd]

    ??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)) [0x42a975]

    ??:? runModuleUnitTests [0x42b8e1]

    ??:? void rt.dmain2._d_run_main(int, char**, extern (C) int function(char[][])*).runAll()
    [0x428234]

    ??:? void rt.dmain2._d_r'
  stdout: ''
  timestamp: 1660164228
- exit_code: 1
  program: "import std.typecons;\nimport std.math;\n/*\nComplete the function that\
    \ takes two integers and returns \n    the product of their unit digits.\n   \
    \ Assume the input is always valid.\n    Examples:\n    >>> multiply(148L, 412L)\n\
    \    16L\n    >>> multiply(19L, 28L)\n    72L\n    >>> multiply(2020L, 1851L)\n\
    \    0L\n    >>> multiply(14L, -15L)\n    20L\n    \n*/\nlong multiply(long a,\
    \ long b) \n{\n    return (a % 10) * (b % 10);\n}\nunittest\n{\n    alias candidate\
    \ = multiply;\n\n    assert(candidate(148L, 412L) == 16L);\n    assert(candidate(19L,\
    \ 28L) == 72L);\n    assert(candidate(2020L, 1851L) == 0L);\n    assert(candidate(14L,\
    \ -15L) == 20L);\n    assert(candidate(76L, 67L) == 42L);\n    assert(candidate(17L,\
    \ 27L) == 49L);\n    assert(candidate(0L, 1L) == 0L);\n    assert(candidate(0L,\
    \ 0L) == 0L);\n}\nvoid main(){}"
  status: Exception
  stderr: 'core.exception.AssertError@/tmp/tmp1saqvwe8.d(29): unittest failure

    ----------------

    ??:? _d_unittestp [0x427de5]

    ??:? void tmp1saqvwe8.__unittest_L22_C1() [0x427ac4]

    ??:? void tmp1saqvwe8.__modtest() [0x427b68]

    ??:? int core.runtime.runModuleUnitTests().__foreachbody2(object.ModuleInfo*)
    [0x42bb0b]

    ??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)).__lambda2(immutable(object.ModuleInfo*))
    [0x42a99e]

    ??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))).__foreachbody2(ref
    rt.sections_elf_shared.DSO) [0x42fb31]

    ??:? int rt.sections_elf_shared.DSO.opApply(scope int delegate(ref rt.sections_elf_shared.DSO))
    [0x42ffe0]

    ??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*)))
    [0x42fabd]

    ??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)) [0x42a975]

    ??:? runModuleUnitTests [0x42b8e1]

    ??:? void rt.dmain2._d_run_main(int, char**, extern (C) int function(char[][])*).runAll()
    [0x428234]

    ??:? void rt.dmain2._d_r'
  stdout: ''
  timestamp: 1660164228
- exit_code: 1
  program: "import std.typecons;\nimport std.math;\n/*\nComplete the function that\
    \ takes two integers and returns \n    the product of their unit digits.\n   \
    \ Assume the input is always valid.\n    Examples:\n    >>> multiply(148L, 412L)\n\
    \    16L\n    >>> multiply(19L, 28L)\n    72L\n    >>> multiply(2020L, 1851L)\n\
    \    0L\n    >>> multiply(14L, -15L)\n    20L\n    \n*/\nlong multiply(long a,\
    \ long b) \n{\n    return (a % 10) * (b % 10);\n}\nunittest\n{\n    alias candidate\
    \ = multiply;\n\n    assert(candidate(148L, 412L) == 16L);\n    assert(candidate(19L,\
    \ 28L) == 72L);\n    assert(candidate(2020L, 1851L) == 0L);\n    assert(candidate(14L,\
    \ -15L) == 20L);\n    assert(candidate(76L, 67L) == 42L);\n    assert(candidate(17L,\
    \ 27L) == 49L);\n    assert(candidate(0L, 1L) == 0L);\n    assert(candidate(0L,\
    \ 0L) == 0L);\n}\nvoid main(){}"
  status: Exception
  stderr: 'core.exception.AssertError@/tmp/tmp1saqvwe8.d(29): unittest failure

    ----------------

    ??:? _d_unittestp [0x427de5]

    ??:? void tmp1saqvwe8.__unittest_L22_C1() [0x427ac4]

    ??:? void tmp1saqvwe8.__modtest() [0x427b68]

    ??:? int core.runtime.runModuleUnitTests().__foreachbody2(object.ModuleInfo*)
    [0x42bb0b]

    ??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)).__lambda2(immutable(object.ModuleInfo*))
    [0x42a99e]

    ??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))).__foreachbody2(ref
    rt.sections_elf_shared.DSO) [0x42fb31]

    ??:? int rt.sections_elf_shared.DSO.opApply(scope int delegate(ref rt.sections_elf_shared.DSO))
    [0x42ffe0]

    ??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*)))
    [0x42fabd]

    ??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)) [0x42a975]

    ??:? runModuleUnitTests [0x42b8e1]

    ??:? void rt.dmain2._d_run_main(int, char**, extern (C) int function(char[][])*).runAll()
    [0x428234]

    ??:? void rt.dmain2._d_r'
  stdout: ''
  timestamp: 1660164228
- exit_code: 1
  program: "import std.typecons;\nimport std.math;\n/*\nComplete the function that\
    \ takes two integers and returns \n    the product of their unit digits.\n   \
    \ Assume the input is always valid.\n    Examples:\n    >>> multiply(148L, 412L)\n\
    \    16L\n    >>> multiply(19L, 28L)\n    72L\n    >>> multiply(2020L, 1851L)\n\
    \    0L\n    >>> multiply(14L, -15L)\n    20L\n    \n*/\nlong multiply(long a,\
    \ long b) \n{\n    return (a % 10) * (b % 10);\n}\nunittest\n{\n    alias candidate\
    \ = multiply;\n\n    assert(candidate(148L, 412L) == 16L);\n    assert(candidate(19L,\
    \ 28L) == 72L);\n    assert(candidate(2020L, 1851L) == 0L);\n    assert(candidate(14L,\
    \ -15L) == 20L);\n    assert(candidate(76L, 67L) == 42L);\n    assert(candidate(17L,\
    \ 27L) == 49L);\n    assert(candidate(0L, 1L) == 0L);\n    assert(candidate(0L,\
    \ 0L) == 0L);\n}\nvoid main(){}"
  status: Exception
  stderr: 'core.exception.AssertError@/tmp/tmp1saqvwe8.d(29): unittest failure

    ----------------

    ??:? _d_unittestp [0x427de5]

    ??:? void tmp1saqvwe8.__unittest_L22_C1() [0x427ac4]

    ??:? void tmp1saqvwe8.__modtest() [0x427b68]

    ??:? int core.runtime.runModuleUnitTests().__foreachbody2(object.ModuleInfo*)
    [0x42bb0b]

    ??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)).__lambda2(immutable(object.ModuleInfo*))
    [0x42a99e]

    ??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))).__foreachbody2(ref
    rt.sections_elf_shared.DSO) [0x42fb31]

    ??:? int rt.sections_elf_shared.DSO.opApply(scope int delegate(ref rt.sections_elf_shared.DSO))
    [0x42ffe0]

    ??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*)))
    [0x42fabd]

    ??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)) [0x42a975]

    ??:? runModuleUnitTests [0x42b8e1]

    ??:? void rt.dmain2._d_run_main(int, char**, extern (C) int function(char[][])*).runAll()
    [0x428234]

    ??:? void rt.dmain2._d_r'
  stdout: ''
  timestamp: 1660164228
- exit_code: 1
  program: "import std.typecons;\nimport std.math;\n/*\nComplete the function that\
    \ takes two integers and returns \n    the product of their unit digits.\n   \
    \ Assume the input is always valid.\n    Examples:\n    >>> multiply(148L, 412L)\n\
    \    16L\n    >>> multiply(19L, 28L)\n    72L\n    >>> multiply(2020L, 1851L)\n\
    \    0L\n    >>> multiply(14L, -15L)\n    20L\n    \n*/\nlong multiply(long a,\
    \ long b) \n{\n    return (a % 10) * (b % 10);\n}\nunittest\n{\n    alias candidate\
    \ = multiply;\n\n    assert(candidate(148L, 412L) == 16L);\n    assert(candidate(19L,\
    \ 28L) == 72L);\n    assert(candidate(2020L, 1851L) == 0L);\n    assert(candidate(14L,\
    \ -15L) == 20L);\n    assert(candidate(76L, 67L) == 42L);\n    assert(candidate(17L,\
    \ 27L) == 49L);\n    assert(candidate(0L, 1L) == 0L);\n    assert(candidate(0L,\
    \ 0L) == 0L);\n}\nvoid main(){}"
  status: Exception
  stderr: 'core.exception.AssertError@/tmp/tmp1saqvwe8.d(29): unittest failure

    ----------------

    ??:? _d_unittestp [0x427de5]

    ??:? void tmp1saqvwe8.__unittest_L22_C1() [0x427ac4]

    ??:? void tmp1saqvwe8.__modtest() [0x427b68]

    ??:? int core.runtime.runModuleUnitTests().__foreachbody2(object.ModuleInfo*)
    [0x42bb0b]

    ??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)).__lambda2(immutable(object.ModuleInfo*))
    [0x42a99e]

    ??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))).__foreachbody2(ref
    rt.sections_elf_shared.DSO) [0x42fb31]

    ??:? int rt.sections_elf_shared.DSO.opApply(scope int delegate(ref rt.sections_elf_shared.DSO))
    [0x42ffe0]

    ??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*)))
    [0x42fabd]

    ??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)) [0x42a975]

    ??:? runModuleUnitTests [0x42b8e1]

    ??:? void rt.dmain2._d_run_main(int, char**, extern (C) int function(char[][])*).runAll()
    [0x428234]

    ??:? void rt.dmain2._d_r'
  stdout: ''
  timestamp: 1660164228
- exit_code: 1
  program: "import std.typecons;\nimport std.math;\n/*\nComplete the function that\
    \ takes two integers and returns \n    the product of their unit digits.\n   \
    \ Assume the input is always valid.\n    Examples:\n    >>> multiply(148L, 412L)\n\
    \    16L\n    >>> multiply(19L, 28L)\n    72L\n    >>> multiply(2020L, 1851L)\n\
    \    0L\n    >>> multiply(14L, -15L)\n    20L\n    \n*/\nlong multiply(long a,\
    \ long b) \n{\n    return (a % 10) * (b % 10);\n}\nunittest\n{\n    alias candidate\
    \ = multiply;\n\n    assert(candidate(148L, 412L) == 16L);\n    assert(candidate(19L,\
    \ 28L) == 72L);\n    assert(candidate(2020L, 1851L) == 0L);\n    assert(candidate(14L,\
    \ -15L) == 20L);\n    assert(candidate(76L, 67L) == 42L);\n    assert(candidate(17L,\
    \ 27L) == 49L);\n    assert(candidate(0L, 1L) == 0L);\n    assert(candidate(0L,\
    \ 0L) == 0L);\n}\nvoid main(){}"
  status: Exception
  stderr: 'core.exception.AssertError@/tmp/tmp1saqvwe8.d(29): unittest failure

    ----------------

    ??:? _d_unittestp [0x427de5]

    ??:? void tmp1saqvwe8.__unittest_L22_C1() [0x427ac4]

    ??:? void tmp1saqvwe8.__modtest() [0x427b68]

    ??:? int core.runtime.runModuleUnitTests().__foreachbody2(object.ModuleInfo*)
    [0x42bb0b]

    ??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)).__lambda2(immutable(object.ModuleInfo*))
    [0x42a99e]

    ??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))).__foreachbody2(ref
    rt.sections_elf_shared.DSO) [0x42fb31]

    ??:? int rt.sections_elf_shared.DSO.opApply(scope int delegate(ref rt.sections_elf_shared.DSO))
    [0x42ffe0]

    ??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*)))
    [0x42fabd]

    ??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)) [0x42a975]

    ??:? runModuleUnitTests [0x42b8e1]

    ??:? void rt.dmain2._d_run_main(int, char**, extern (C) int function(char[][])*).runAll()
    [0x428234]

    ??:? void rt.dmain2._d_r'
  stdout: ''
  timestamp: 1660164228
- exit_code: 1
  program: "import std.typecons;\nimport std.math;\n/*\nComplete the function that\
    \ takes two integers and returns \n    the product of their unit digits.\n   \
    \ Assume the input is always valid.\n    Examples:\n    >>> multiply(148L, 412L)\n\
    \    16L\n    >>> multiply(19L, 28L)\n    72L\n    >>> multiply(2020L, 1851L)\n\
    \    0L\n    >>> multiply(14L, -15L)\n    20L\n    \n*/\nlong multiply(long a,\
    \ long b) \n{\n    return (a % 10) * (b % 10);\n}\nunittest\n{\n    alias candidate\
    \ = multiply;\n\n    assert(candidate(148L, 412L) == 16L);\n    assert(candidate(19L,\
    \ 28L) == 72L);\n    assert(candidate(2020L, 1851L) == 0L);\n    assert(candidate(14L,\
    \ -15L) == 20L);\n    assert(candidate(76L, 67L) == 42L);\n    assert(candidate(17L,\
    \ 27L) == 49L);\n    assert(candidate(0L, 1L) == 0L);\n    assert(candidate(0L,\
    \ 0L) == 0L);\n}\nvoid main(){}"
  status: Exception
  stderr: 'core.exception.AssertError@/tmp/tmp1saqvwe8.d(29): unittest failure

    ----------------

    ??:? _d_unittestp [0x427de5]

    ??:? void tmp1saqvwe8.__unittest_L22_C1() [0x427ac4]

    ??:? void tmp1saqvwe8.__modtest() [0x427b68]

    ??:? int core.runtime.runModuleUnitTests().__foreachbody2(object.ModuleInfo*)
    [0x42bb0b]

    ??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)).__lambda2(immutable(object.ModuleInfo*))
    [0x42a99e]

    ??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))).__foreachbody2(ref
    rt.sections_elf_shared.DSO) [0x42fb31]

    ??:? int rt.sections_elf_shared.DSO.opApply(scope int delegate(ref rt.sections_elf_shared.DSO))
    [0x42ffe0]

    ??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*)))
    [0x42fabd]

    ??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)) [0x42a975]

    ??:? runModuleUnitTests [0x42b8e1]

    ??:? void rt.dmain2._d_run_main(int, char**, extern (C) int function(char[][])*).runAll()
    [0x428234]

    ??:? void rt.dmain2._d_r'
  stdout: ''
  timestamp: 1660164228
- exit_code: 1
  program: "import std.typecons;\nimport std.math;\n/*\nComplete the function that\
    \ takes two integers and returns \n    the product of their unit digits.\n   \
    \ Assume the input is always valid.\n    Examples:\n    >>> multiply(148L, 412L)\n\
    \    16L\n    >>> multiply(19L, 28L)\n    72L\n    >>> multiply(2020L, 1851L)\n\
    \    0L\n    >>> multiply(14L, -15L)\n    20L\n    \n*/\nlong multiply(long a,\
    \ long b) \n{\n    return (a % 10) * (b % 10);\n}\nunittest\n{\n    alias candidate\
    \ = multiply;\n\n    assert(candidate(148L, 412L) == 16L);\n    assert(candidate(19L,\
    \ 28L) == 72L);\n    assert(candidate(2020L, 1851L) == 0L);\n    assert(candidate(14L,\
    \ -15L) == 20L);\n    assert(candidate(76L, 67L) == 42L);\n    assert(candidate(17L,\
    \ 27L) == 49L);\n    assert(candidate(0L, 1L) == 0L);\n    assert(candidate(0L,\
    \ 0L) == 0L);\n}\nvoid main(){}"
  status: Exception
  stderr: 'core.exception.AssertError@/tmp/tmp1saqvwe8.d(29): unittest failure

    ----------------

    ??:? _d_unittestp [0x427de5]

    ??:? void tmp1saqvwe8.__unittest_L22_C1() [0x427ac4]

    ??:? void tmp1saqvwe8.__modtest() [0x427b68]

    ??:? int core.runtime.runModuleUnitTests().__foreachbody2(object.ModuleInfo*)
    [0x42bb0b]

    ??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)).__lambda2(immutable(object.ModuleInfo*))
    [0x42a99e]

    ??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))).__foreachbody2(ref
    rt.sections_elf_shared.DSO) [0x42fb31]

    ??:? int rt.sections_elf_shared.DSO.opApply(scope int delegate(ref rt.sections_elf_shared.DSO))
    [0x42ffe0]

    ??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*)))
    [0x42fabd]

    ??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)) [0x42a975]

    ??:? runModuleUnitTests [0x42b8e1]

    ??:? void rt.dmain2._d_run_main(int, char**, extern (C) int function(char[][])*).runAll()
    [0x428234]

    ??:? void rt.dmain2._d_r'
  stdout: ''
  timestamp: 1660164228
- exit_code: 1
  program: "import std.typecons;\nimport std.math;\n/*\nComplete the function that\
    \ takes two integers and returns \n    the product of their unit digits.\n   \
    \ Assume the input is always valid.\n    Examples:\n    >>> multiply(148L, 412L)\n\
    \    16L\n    >>> multiply(19L, 28L)\n    72L\n    >>> multiply(2020L, 1851L)\n\
    \    0L\n    >>> multiply(14L, -15L)\n    20L\n    \n*/\nlong multiply(long a,\
    \ long b) \n{\n    return (a % 10) * (b % 10);\n}\nunittest\n{\n    alias candidate\
    \ = multiply;\n\n    assert(candidate(148L, 412L) == 16L);\n    assert(candidate(19L,\
    \ 28L) == 72L);\n    assert(candidate(2020L, 1851L) == 0L);\n    assert(candidate(14L,\
    \ -15L) == 20L);\n    assert(candidate(76L, 67L) == 42L);\n    assert(candidate(17L,\
    \ 27L) == 49L);\n    assert(candidate(0L, 1L) == 0L);\n    assert(candidate(0L,\
    \ 0L) == 0L);\n}\nvoid main(){}"
  status: Exception
  stderr: 'core.exception.AssertError@/tmp/tmp1saqvwe8.d(29): unittest failure

    ----------------

    ??:? _d_unittestp [0x427de5]

    ??:? void tmp1saqvwe8.__unittest_L22_C1() [0x427ac4]

    ??:? void tmp1saqvwe8.__modtest() [0x427b68]

    ??:? int core.runtime.runModuleUnitTests().__foreachbody2(object.ModuleInfo*)
    [0x42bb0b]

    ??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)).__lambda2(immutable(object.ModuleInfo*))
    [0x42a99e]

    ??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))).__foreachbody2(ref
    rt.sections_elf_shared.DSO) [0x42fb31]

    ??:? int rt.sections_elf_shared.DSO.opApply(scope int delegate(ref rt.sections_elf_shared.DSO))
    [0x42ffe0]

    ??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*)))
    [0x42fabd]

    ??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)) [0x42a975]

    ??:? runModuleUnitTests [0x42b8e1]

    ??:? void rt.dmain2._d_run_main(int, char**, extern (C) int function(char[][])*).runAll()
    [0x428234]

    ??:? void rt.dmain2._d_r'
  stdout: ''
  timestamp: 1660164228
- exit_code: 1
  program: "import std.typecons;\nimport std.math;\n/*\nComplete the function that\
    \ takes two integers and returns \n    the product of their unit digits.\n   \
    \ Assume the input is always valid.\n    Examples:\n    >>> multiply(148L, 412L)\n\
    \    16L\n    >>> multiply(19L, 28L)\n    72L\n    >>> multiply(2020L, 1851L)\n\
    \    0L\n    >>> multiply(14L, -15L)\n    20L\n    \n*/\nlong multiply(long a,\
    \ long b) \n{\n    return (a % 10) * (b % 10);\n}\nunittest\n{\n    alias candidate\
    \ = multiply;\n\n    assert(candidate(148L, 412L) == 16L);\n    assert(candidate(19L,\
    \ 28L) == 72L);\n    assert(candidate(2020L, 1851L) == 0L);\n    assert(candidate(14L,\
    \ -15L) == 20L);\n    assert(candidate(76L, 67L) == 42L);\n    assert(candidate(17L,\
    \ 27L) == 49L);\n    assert(candidate(0L, 1L) == 0L);\n    assert(candidate(0L,\
    \ 0L) == 0L);\n}\nvoid main(){}"
  status: Exception
  stderr: 'core.exception.AssertError@/tmp/tmp1saqvwe8.d(29): unittest failure

    ----------------

    ??:? _d_unittestp [0x427de5]

    ??:? void tmp1saqvwe8.__unittest_L22_C1() [0x427ac4]

    ??:? void tmp1saqvwe8.__modtest() [0x427b68]

    ??:? int core.runtime.runModuleUnitTests().__foreachbody2(object.ModuleInfo*)
    [0x42bb0b]

    ??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)).__lambda2(immutable(object.ModuleInfo*))
    [0x42a99e]

    ??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))).__foreachbody2(ref
    rt.sections_elf_shared.DSO) [0x42fb31]

    ??:? int rt.sections_elf_shared.DSO.opApply(scope int delegate(ref rt.sections_elf_shared.DSO))
    [0x42ffe0]

    ??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*)))
    [0x42fabd]

    ??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)) [0x42a975]

    ??:? runModuleUnitTests [0x42b8e1]

    ??:? void rt.dmain2._d_run_main(int, char**, extern (C) int function(char[][])*).runAll()
    [0x428234]

    ??:? void rt.dmain2._d_r'
  stdout: ''
  timestamp: 1660164228
- exit_code: 1
  program: "import std.typecons;\nimport std.math;\n/*\nComplete the function that\
    \ takes two integers and returns \n    the product of their unit digits.\n   \
    \ Assume the input is always valid.\n    Examples:\n    >>> multiply(148L, 412L)\n\
    \    16L\n    >>> multiply(19L, 28L)\n    72L\n    >>> multiply(2020L, 1851L)\n\
    \    0L\n    >>> multiply(14L, -15L)\n    20L\n    \n*/\nlong multiply(long a,\
    \ long b) \n{\n    return (a % 10) * (b % 10);\n}\nunittest\n{\n    alias candidate\
    \ = multiply;\n\n    assert(candidate(148L, 412L) == 16L);\n    assert(candidate(19L,\
    \ 28L) == 72L);\n    assert(candidate(2020L, 1851L) == 0L);\n    assert(candidate(14L,\
    \ -15L) == 20L);\n    assert(candidate(76L, 67L) == 42L);\n    assert(candidate(17L,\
    \ 27L) == 49L);\n    assert(candidate(0L, 1L) == 0L);\n    assert(candidate(0L,\
    \ 0L) == 0L);\n}\nvoid main(){}"
  status: Exception
  stderr: 'core.exception.AssertError@/tmp/tmp1saqvwe8.d(29): unittest failure

    ----------------

    ??:? _d_unittestp [0x427de5]

    ??:? void tmp1saqvwe8.__unittest_L22_C1() [0x427ac4]

    ??:? void tmp1saqvwe8.__modtest() [0x427b68]

    ??:? int core.runtime.runModuleUnitTests().__foreachbody2(object.ModuleInfo*)
    [0x42bb0b]

    ??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)).__lambda2(immutable(object.ModuleInfo*))
    [0x42a99e]

    ??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))).__foreachbody2(ref
    rt.sections_elf_shared.DSO) [0x42fb31]

    ??:? int rt.sections_elf_shared.DSO.opApply(scope int delegate(ref rt.sections_elf_shared.DSO))
    [0x42ffe0]

    ??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*)))
    [0x42fabd]

    ??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)) [0x42a975]

    ??:? runModuleUnitTests [0x42b8e1]

    ??:? void rt.dmain2._d_run_main(int, char**, extern (C) int function(char[][])*).runAll()
    [0x428234]

    ??:? void rt.dmain2._d_r'
  stdout: ''
  timestamp: 1660164228
- exit_code: 1
  program: "import std.typecons;\nimport std.math;\n/*\nComplete the function that\
    \ takes two integers and returns \n    the product of their unit digits.\n   \
    \ Assume the input is always valid.\n    Examples:\n    >>> multiply(148L, 412L)\n\
    \    16L\n    >>> multiply(19L, 28L)\n    72L\n    >>> multiply(2020L, 1851L)\n\
    \    0L\n    >>> multiply(14L, -15L)\n    20L\n    \n*/\nlong multiply(long a,\
    \ long b) \n{\n    return (a % 10) * (b % 10);\n}\nunittest\n{\n    alias candidate\
    \ = multiply;\n\n    assert(candidate(148L, 412L) == 16L);\n    assert(candidate(19L,\
    \ 28L) == 72L);\n    assert(candidate(2020L, 1851L) == 0L);\n    assert(candidate(14L,\
    \ -15L) == 20L);\n    assert(candidate(76L, 67L) == 42L);\n    assert(candidate(17L,\
    \ 27L) == 49L);\n    assert(candidate(0L, 1L) == 0L);\n    assert(candidate(0L,\
    \ 0L) == 0L);\n}\nvoid main(){}"
  status: Exception
  stderr: 'core.exception.AssertError@/tmp/tmp1saqvwe8.d(29): unittest failure

    ----------------

    ??:? _d_unittestp [0x427de5]

    ??:? void tmp1saqvwe8.__unittest_L22_C1() [0x427ac4]

    ??:? void tmp1saqvwe8.__modtest() [0x427b68]

    ??:? int core.runtime.runModuleUnitTests().__foreachbody2(object.ModuleInfo*)
    [0x42bb0b]

    ??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)).__lambda2(immutable(object.ModuleInfo*))
    [0x42a99e]

    ??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))).__foreachbody2(ref
    rt.sections_elf_shared.DSO) [0x42fb31]

    ??:? int rt.sections_elf_shared.DSO.opApply(scope int delegate(ref rt.sections_elf_shared.DSO))
    [0x42ffe0]

    ??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*)))
    [0x42fabd]

    ??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)) [0x42a975]

    ??:? runModuleUnitTests [0x42b8e1]

    ??:? void rt.dmain2._d_run_main(int, char**, extern (C) int function(char[][])*).runAll()
    [0x428234]

    ??:? void rt.dmain2._d_r'
  stdout: ''
  timestamp: 1660164228
- exit_code: 1
  program: "import std.typecons;\nimport std.math;\n/*\nComplete the function that\
    \ takes two integers and returns \n    the product of their unit digits.\n   \
    \ Assume the input is always valid.\n    Examples:\n    >>> multiply(148L, 412L)\n\
    \    16L\n    >>> multiply(19L, 28L)\n    72L\n    >>> multiply(2020L, 1851L)\n\
    \    0L\n    >>> multiply(14L, -15L)\n    20L\n    \n*/\nlong multiply(long a,\
    \ long b) \n{\n    return (a%10)*(b%10);\n}\nunittest\n{\n    alias candidate\
    \ = multiply;\n\n    assert(candidate(148L, 412L) == 16L);\n    assert(candidate(19L,\
    \ 28L) == 72L);\n    assert(candidate(2020L, 1851L) == 0L);\n    assert(candidate(14L,\
    \ -15L) == 20L);\n    assert(candidate(76L, 67L) == 42L);\n    assert(candidate(17L,\
    \ 27L) == 49L);\n    assert(candidate(0L, 1L) == 0L);\n    assert(candidate(0L,\
    \ 0L) == 0L);\n}\nvoid main(){}"
  status: Exception
  stderr: 'core.exception.AssertError@/tmp/tmpx0vyfebi.d(29): unittest failure

    ----------------

    ??:? _d_unittestp [0x427de5]

    ??:? void tmpx0vyfebi.__unittest_L22_C1() [0x427ac4]

    ??:? void tmpx0vyfebi.__modtest() [0x427b68]

    ??:? int core.runtime.runModuleUnitTests().__foreachbody2(object.ModuleInfo*)
    [0x42bb0b]

    ??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)).__lambda2(immutable(object.ModuleInfo*))
    [0x42a99e]

    ??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))).__foreachbody2(ref
    rt.sections_elf_shared.DSO) [0x42fb31]

    ??:? int rt.sections_elf_shared.DSO.opApply(scope int delegate(ref rt.sections_elf_shared.DSO))
    [0x42ffe0]

    ??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*)))
    [0x42fabd]

    ??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)) [0x42a975]

    ??:? runModuleUnitTests [0x42b8e1]

    ??:? void rt.dmain2._d_run_main(int, char**, extern (C) int function(char[][])*).runAll()
    [0x428234]

    ??:? void rt.dmain2._d_r'
  stdout: ''
  timestamp: 1660164228
- exit_code: 1
  program: "import std.typecons;\nimport std.math;\n/*\nComplete the function that\
    \ takes two integers and returns \n    the product of their unit digits.\n   \
    \ Assume the input is always valid.\n    Examples:\n    >>> multiply(148L, 412L)\n\
    \    16L\n    >>> multiply(19L, 28L)\n    72L\n    >>> multiply(2020L, 1851L)\n\
    \    0L\n    >>> multiply(14L, -15L)\n    20L\n    \n*/\nlong multiply(long a,\
    \ long b) \n{\n    return (a%10) * (b%10);\n}\nunittest\n{\n    alias candidate\
    \ = multiply;\n\n    assert(candidate(148L, 412L) == 16L);\n    assert(candidate(19L,\
    \ 28L) == 72L);\n    assert(candidate(2020L, 1851L) == 0L);\n    assert(candidate(14L,\
    \ -15L) == 20L);\n    assert(candidate(76L, 67L) == 42L);\n    assert(candidate(17L,\
    \ 27L) == 49L);\n    assert(candidate(0L, 1L) == 0L);\n    assert(candidate(0L,\
    \ 0L) == 0L);\n}\nvoid main(){}"
  status: Exception
  stderr: 'core.exception.AssertError@/tmp/tmpaskp09_u.d(29): unittest failure

    ----------------

    ??:? _d_unittestp [0x427de5]

    ??:? void tmpaskp09_u.__unittest_L22_C1() [0x427ac4]

    ??:? void tmpaskp09_u.__modtest() [0x427b68]

    ??:? int core.runtime.runModuleUnitTests().__foreachbody2(object.ModuleInfo*)
    [0x42bb0b]

    ??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)).__lambda2(immutable(object.ModuleInfo*))
    [0x42a99e]

    ??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))).__foreachbody2(ref
    rt.sections_elf_shared.DSO) [0x42fb31]

    ??:? int rt.sections_elf_shared.DSO.opApply(scope int delegate(ref rt.sections_elf_shared.DSO))
    [0x42ffe0]

    ??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*)))
    [0x42fabd]

    ??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)) [0x42a975]

    ??:? runModuleUnitTests [0x42b8e1]

    ??:? void rt.dmain2._d_run_main(int, char**, extern (C) int function(char[][])*).runAll()
    [0x428234]

    ??:? void rt.dmain2._d_r'
  stdout: ''
  timestamp: 1660164228
- exit_code: 1
  program: "import std.typecons;\nimport std.math;\n/*\nComplete the function that\
    \ takes two integers and returns \n    the product of their unit digits.\n   \
    \ Assume the input is always valid.\n    Examples:\n    >>> multiply(148L, 412L)\n\
    \    16L\n    >>> multiply(19L, 28L)\n    72L\n    >>> multiply(2020L, 1851L)\n\
    \    0L\n    >>> multiply(14L, -15L)\n    20L\n    \n*/\nlong multiply(long a,\
    \ long b) \n{\n    return (a % 10) * (b % 10);\n}\nunittest\n{\n    alias candidate\
    \ = multiply;\n\n    assert(candidate(148L, 412L) == 16L);\n    assert(candidate(19L,\
    \ 28L) == 72L);\n    assert(candidate(2020L, 1851L) == 0L);\n    assert(candidate(14L,\
    \ -15L) == 20L);\n    assert(candidate(76L, 67L) == 42L);\n    assert(candidate(17L,\
    \ 27L) == 49L);\n    assert(candidate(0L, 1L) == 0L);\n    assert(candidate(0L,\
    \ 0L) == 0L);\n}\nvoid main(){}"
  status: Exception
  stderr: 'core.exception.AssertError@/tmp/tmp1saqvwe8.d(29): unittest failure

    ----------------

    ??:? _d_unittestp [0x427de5]

    ??:? void tmp1saqvwe8.__unittest_L22_C1() [0x427ac4]

    ??:? void tmp1saqvwe8.__modtest() [0x427b68]

    ??:? int core.runtime.runModuleUnitTests().__foreachbody2(object.ModuleInfo*)
    [0x42bb0b]

    ??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)).__lambda2(immutable(object.ModuleInfo*))
    [0x42a99e]

    ??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))).__foreachbody2(ref
    rt.sections_elf_shared.DSO) [0x42fb31]

    ??:? int rt.sections_elf_shared.DSO.opApply(scope int delegate(ref rt.sections_elf_shared.DSO))
    [0x42ffe0]

    ??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*)))
    [0x42fabd]

    ??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)) [0x42a975]

    ??:? runModuleUnitTests [0x42b8e1]

    ??:? void rt.dmain2._d_run_main(int, char**, extern (C) int function(char[][])*).runAll()
    [0x428234]

    ??:? void rt.dmain2._d_r'
  stdout: ''
  timestamp: 1660164228
- exit_code: 1
  program: "import std.typecons;\nimport std.math;\n/*\nComplete the function that\
    \ takes two integers and returns \n    the product of their unit digits.\n   \
    \ Assume the input is always valid.\n    Examples:\n    >>> multiply(148L, 412L)\n\
    \    16L\n    >>> multiply(19L, 28L)\n    72L\n    >>> multiply(2020L, 1851L)\n\
    \    0L\n    >>> multiply(14L, -15L)\n    20L\n    \n*/\nlong multiply(long a,\
    \ long b) \n{\n    return (a % 10) * (b % 10);\n}\nunittest\n{\n    alias candidate\
    \ = multiply;\n\n    assert(candidate(148L, 412L) == 16L);\n    assert(candidate(19L,\
    \ 28L) == 72L);\n    assert(candidate(2020L, 1851L) == 0L);\n    assert(candidate(14L,\
    \ -15L) == 20L);\n    assert(candidate(76L, 67L) == 42L);\n    assert(candidate(17L,\
    \ 27L) == 49L);\n    assert(candidate(0L, 1L) == 0L);\n    assert(candidate(0L,\
    \ 0L) == 0L);\n}\nvoid main(){}"
  status: Exception
  stderr: 'core.exception.AssertError@/tmp/tmp1saqvwe8.d(29): unittest failure

    ----------------

    ??:? _d_unittestp [0x427de5]

    ??:? void tmp1saqvwe8.__unittest_L22_C1() [0x427ac4]

    ??:? void tmp1saqvwe8.__modtest() [0x427b68]

    ??:? int core.runtime.runModuleUnitTests().__foreachbody2(object.ModuleInfo*)
    [0x42bb0b]

    ??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)).__lambda2(immutable(object.ModuleInfo*))
    [0x42a99e]

    ??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))).__foreachbody2(ref
    rt.sections_elf_shared.DSO) [0x42fb31]

    ??:? int rt.sections_elf_shared.DSO.opApply(scope int delegate(ref rt.sections_elf_shared.DSO))
    [0x42ffe0]

    ??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*)))
    [0x42fabd]

    ??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)) [0x42a975]

    ??:? runModuleUnitTests [0x42b8e1]

    ??:? void rt.dmain2._d_run_main(int, char**, extern (C) int function(char[][])*).runAll()
    [0x428234]

    ??:? void rt.dmain2._d_r'
  stdout: ''
  timestamp: 1660164228
- exit_code: 1
  program: "import std.typecons;\nimport std.math;\n/*\nComplete the function that\
    \ takes two integers and returns \n    the product of their unit digits.\n   \
    \ Assume the input is always valid.\n    Examples:\n    >>> multiply(148L, 412L)\n\
    \    16L\n    >>> multiply(19L, 28L)\n    72L\n    >>> multiply(2020L, 1851L)\n\
    \    0L\n    >>> multiply(14L, -15L)\n    20L\n    \n*/\nlong multiply(long a,\
    \ long b) \n{\n    return (a % 10) * (b % 10);\n}\nunittest\n{\n    alias candidate\
    \ = multiply;\n\n    assert(candidate(148L, 412L) == 16L);\n    assert(candidate(19L,\
    \ 28L) == 72L);\n    assert(candidate(2020L, 1851L) == 0L);\n    assert(candidate(14L,\
    \ -15L) == 20L);\n    assert(candidate(76L, 67L) == 42L);\n    assert(candidate(17L,\
    \ 27L) == 49L);\n    assert(candidate(0L, 1L) == 0L);\n    assert(candidate(0L,\
    \ 0L) == 0L);\n}\nvoid main(){}"
  status: Exception
  stderr: 'core.exception.AssertError@/tmp/tmp1saqvwe8.d(29): unittest failure

    ----------------

    ??:? _d_unittestp [0x427de5]

    ??:? void tmp1saqvwe8.__unittest_L22_C1() [0x427ac4]

    ??:? void tmp1saqvwe8.__modtest() [0x427b68]

    ??:? int core.runtime.runModuleUnitTests().__foreachbody2(object.ModuleInfo*)
    [0x42bb0b]

    ??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)).__lambda2(immutable(object.ModuleInfo*))
    [0x42a99e]

    ??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))).__foreachbody2(ref
    rt.sections_elf_shared.DSO) [0x42fb31]

    ??:? int rt.sections_elf_shared.DSO.opApply(scope int delegate(ref rt.sections_elf_shared.DSO))
    [0x42ffe0]

    ??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*)))
    [0x42fabd]

    ??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)) [0x42a975]

    ??:? runModuleUnitTests [0x42b8e1]

    ??:? void rt.dmain2._d_run_main(int, char**, extern (C) int function(char[][])*).runAll()
    [0x428234]

    ??:? void rt.dmain2._d_r'
  stdout: ''
  timestamp: 1660164228
- exit_code: 1
  program: "import std.typecons;\nimport std.math;\n/*\nComplete the function that\
    \ takes two integers and returns \n    the product of their unit digits.\n   \
    \ Assume the input is always valid.\n    Examples:\n    >>> multiply(148L, 412L)\n\
    \    16L\n    >>> multiply(19L, 28L)\n    72L\n    >>> multiply(2020L, 1851L)\n\
    \    0L\n    >>> multiply(14L, -15L)\n    20L\n    \n*/\nlong multiply(long a,\
    \ long b) \n{\n    return (a % 10) * (b % 10);\n}\nunittest\n{\n    alias candidate\
    \ = multiply;\n\n    assert(candidate(148L, 412L) == 16L);\n    assert(candidate(19L,\
    \ 28L) == 72L);\n    assert(candidate(2020L, 1851L) == 0L);\n    assert(candidate(14L,\
    \ -15L) == 20L);\n    assert(candidate(76L, 67L) == 42L);\n    assert(candidate(17L,\
    \ 27L) == 49L);\n    assert(candidate(0L, 1L) == 0L);\n    assert(candidate(0L,\
    \ 0L) == 0L);\n}\nvoid main(){}"
  status: Exception
  stderr: 'core.exception.AssertError@/tmp/tmp1saqvwe8.d(29): unittest failure

    ----------------

    ??:? _d_unittestp [0x427de5]

    ??:? void tmp1saqvwe8.__unittest_L22_C1() [0x427ac4]

    ??:? void tmp1saqvwe8.__modtest() [0x427b68]

    ??:? int core.runtime.runModuleUnitTests().__foreachbody2(object.ModuleInfo*)
    [0x42bb0b]

    ??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)).__lambda2(immutable(object.ModuleInfo*))
    [0x42a99e]

    ??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))).__foreachbody2(ref
    rt.sections_elf_shared.DSO) [0x42fb31]

    ??:? int rt.sections_elf_shared.DSO.opApply(scope int delegate(ref rt.sections_elf_shared.DSO))
    [0x42ffe0]

    ??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*)))
    [0x42fabd]

    ??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)) [0x42a975]

    ??:? runModuleUnitTests [0x42b8e1]

    ??:? void rt.dmain2._d_run_main(int, char**, extern (C) int function(char[][])*).runAll()
    [0x428234]

    ??:? void rt.dmain2._d_r'
  stdout: ''
  timestamp: 1660164228
- exit_code: 1
  program: "import std.typecons;\nimport std.math;\n/*\nComplete the function that\
    \ takes two integers and returns \n    the product of their unit digits.\n   \
    \ Assume the input is always valid.\n    Examples:\n    >>> multiply(148L, 412L)\n\
    \    16L\n    >>> multiply(19L, 28L)\n    72L\n    >>> multiply(2020L, 1851L)\n\
    \    0L\n    >>> multiply(14L, -15L)\n    20L\n    \n*/\nlong multiply(long a,\
    \ long b) \n{\n    return (a % 10) * (b % 10);\n}\nunittest\n{\n    alias candidate\
    \ = multiply;\n\n    assert(candidate(148L, 412L) == 16L);\n    assert(candidate(19L,\
    \ 28L) == 72L);\n    assert(candidate(2020L, 1851L) == 0L);\n    assert(candidate(14L,\
    \ -15L) == 20L);\n    assert(candidate(76L, 67L) == 42L);\n    assert(candidate(17L,\
    \ 27L) == 49L);\n    assert(candidate(0L, 1L) == 0L);\n    assert(candidate(0L,\
    \ 0L) == 0L);\n}\nvoid main(){}"
  status: Exception
  stderr: 'core.exception.AssertError@/tmp/tmp1saqvwe8.d(29): unittest failure

    ----------------

    ??:? _d_unittestp [0x427de5]

    ??:? void tmp1saqvwe8.__unittest_L22_C1() [0x427ac4]

    ??:? void tmp1saqvwe8.__modtest() [0x427b68]

    ??:? int core.runtime.runModuleUnitTests().__foreachbody2(object.ModuleInfo*)
    [0x42bb0b]

    ??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)).__lambda2(immutable(object.ModuleInfo*))
    [0x42a99e]

    ??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))).__foreachbody2(ref
    rt.sections_elf_shared.DSO) [0x42fb31]

    ??:? int rt.sections_elf_shared.DSO.opApply(scope int delegate(ref rt.sections_elf_shared.DSO))
    [0x42ffe0]

    ??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*)))
    [0x42fabd]

    ??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)) [0x42a975]

    ??:? runModuleUnitTests [0x42b8e1]

    ??:? void rt.dmain2._d_run_main(int, char**, extern (C) int function(char[][])*).runAll()
    [0x428234]

    ??:? void rt.dmain2._d_r'
  stdout: ''
  timestamp: 1660164228
- exit_code: 1
  program: "import std.typecons;\nimport std.math;\n/*\nComplete the function that\
    \ takes two integers and returns \n    the product of their unit digits.\n   \
    \ Assume the input is always valid.\n    Examples:\n    >>> multiply(148L, 412L)\n\
    \    16L\n    >>> multiply(19L, 28L)\n    72L\n    >>> multiply(2020L, 1851L)\n\
    \    0L\n    >>> multiply(14L, -15L)\n    20L\n    \n*/\nlong multiply(long a,\
    \ long b) \n{\n    return (a % 10) * (b % 10);\n}\nunittest\n{\n    alias candidate\
    \ = multiply;\n\n    assert(candidate(148L, 412L) == 16L);\n    assert(candidate(19L,\
    \ 28L) == 72L);\n    assert(candidate(2020L, 1851L) == 0L);\n    assert(candidate(14L,\
    \ -15L) == 20L);\n    assert(candidate(76L, 67L) == 42L);\n    assert(candidate(17L,\
    \ 27L) == 49L);\n    assert(candidate(0L, 1L) == 0L);\n    assert(candidate(0L,\
    \ 0L) == 0L);\n}\nvoid main(){}"
  status: Exception
  stderr: 'core.exception.AssertError@/tmp/tmp1saqvwe8.d(29): unittest failure

    ----------------

    ??:? _d_unittestp [0x427de5]

    ??:? void tmp1saqvwe8.__unittest_L22_C1() [0x427ac4]

    ??:? void tmp1saqvwe8.__modtest() [0x427b68]

    ??:? int core.runtime.runModuleUnitTests().__foreachbody2(object.ModuleInfo*)
    [0x42bb0b]

    ??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)).__lambda2(immutable(object.ModuleInfo*))
    [0x42a99e]

    ??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))).__foreachbody2(ref
    rt.sections_elf_shared.DSO) [0x42fb31]

    ??:? int rt.sections_elf_shared.DSO.opApply(scope int delegate(ref rt.sections_elf_shared.DSO))
    [0x42ffe0]

    ??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*)))
    [0x42fabd]

    ??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)) [0x42a975]

    ??:? runModuleUnitTests [0x42b8e1]

    ??:? void rt.dmain2._d_run_main(int, char**, extern (C) int function(char[][])*).runAll()
    [0x428234]

    ??:? void rt.dmain2._d_r'
  stdout: ''
  timestamp: 1660164228
- exit_code: 1
  program: "import std.typecons;\nimport std.math;\n/*\nComplete the function that\
    \ takes two integers and returns \n    the product of their unit digits.\n   \
    \ Assume the input is always valid.\n    Examples:\n    >>> multiply(148L, 412L)\n\
    \    16L\n    >>> multiply(19L, 28L)\n    72L\n    >>> multiply(2020L, 1851L)\n\
    \    0L\n    >>> multiply(14L, -15L)\n    20L\n    \n*/\nlong multiply(long a,\
    \ long b) \n{\n    return (a % 10) * (b % 10);\n}\nunittest\n{\n    alias candidate\
    \ = multiply;\n\n    assert(candidate(148L, 412L) == 16L);\n    assert(candidate(19L,\
    \ 28L) == 72L);\n    assert(candidate(2020L, 1851L) == 0L);\n    assert(candidate(14L,\
    \ -15L) == 20L);\n    assert(candidate(76L, 67L) == 42L);\n    assert(candidate(17L,\
    \ 27L) == 49L);\n    assert(candidate(0L, 1L) == 0L);\n    assert(candidate(0L,\
    \ 0L) == 0L);\n}\nvoid main(){}"
  status: Exception
  stderr: 'core.exception.AssertError@/tmp/tmp1saqvwe8.d(29): unittest failure

    ----------------

    ??:? _d_unittestp [0x427de5]

    ??:? void tmp1saqvwe8.__unittest_L22_C1() [0x427ac4]

    ??:? void tmp1saqvwe8.__modtest() [0x427b68]

    ??:? int core.runtime.runModuleUnitTests().__foreachbody2(object.ModuleInfo*)
    [0x42bb0b]

    ??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)).__lambda2(immutable(object.ModuleInfo*))
    [0x42a99e]

    ??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))).__foreachbody2(ref
    rt.sections_elf_shared.DSO) [0x42fb31]

    ??:? int rt.sections_elf_shared.DSO.opApply(scope int delegate(ref rt.sections_elf_shared.DSO))
    [0x42ffe0]

    ??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*)))
    [0x42fabd]

    ??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)) [0x42a975]

    ??:? runModuleUnitTests [0x42b8e1]

    ??:? void rt.dmain2._d_run_main(int, char**, extern (C) int function(char[][])*).runAll()
    [0x428234]

    ??:? void rt.dmain2._d_r'
  stdout: ''
  timestamp: 1660164228
- exit_code: 1
  program: "import std.typecons;\nimport std.math;\n/*\nComplete the function that\
    \ takes two integers and returns \n    the product of their unit digits.\n   \
    \ Assume the input is always valid.\n    Examples:\n    >>> multiply(148L, 412L)\n\
    \    16L\n    >>> multiply(19L, 28L)\n    72L\n    >>> multiply(2020L, 1851L)\n\
    \    0L\n    >>> multiply(14L, -15L)\n    20L\n    \n*/\nlong multiply(long a,\
    \ long b) \n{\n    return (a % 10) * (b % 10);\n}\nunittest\n{\n    alias candidate\
    \ = multiply;\n\n    assert(candidate(148L, 412L) == 16L);\n    assert(candidate(19L,\
    \ 28L) == 72L);\n    assert(candidate(2020L, 1851L) == 0L);\n    assert(candidate(14L,\
    \ -15L) == 20L);\n    assert(candidate(76L, 67L) == 42L);\n    assert(candidate(17L,\
    \ 27L) == 49L);\n    assert(candidate(0L, 1L) == 0L);\n    assert(candidate(0L,\
    \ 0L) == 0L);\n}\nvoid main(){}"
  status: Exception
  stderr: 'core.exception.AssertError@/tmp/tmp1saqvwe8.d(29): unittest failure

    ----------------

    ??:? _d_unittestp [0x427de5]

    ??:? void tmp1saqvwe8.__unittest_L22_C1() [0x427ac4]

    ??:? void tmp1saqvwe8.__modtest() [0x427b68]

    ??:? int core.runtime.runModuleUnitTests().__foreachbody2(object.ModuleInfo*)
    [0x42bb0b]

    ??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)).__lambda2(immutable(object.ModuleInfo*))
    [0x42a99e]

    ??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))).__foreachbody2(ref
    rt.sections_elf_shared.DSO) [0x42fb31]

    ??:? int rt.sections_elf_shared.DSO.opApply(scope int delegate(ref rt.sections_elf_shared.DSO))
    [0x42ffe0]

    ??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*)))
    [0x42fabd]

    ??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)) [0x42a975]

    ??:? runModuleUnitTests [0x42b8e1]

    ??:? void rt.dmain2._d_run_main(int, char**, extern (C) int function(char[][])*).runAll()
    [0x428234]

    ??:? void rt.dmain2._d_r'
  stdout: ''
  timestamp: 1660164228
- exit_code: 1
  program: "import std.typecons;\nimport std.math;\n/*\nComplete the function that\
    \ takes two integers and returns \n    the product of their unit digits.\n   \
    \ Assume the input is always valid.\n    Examples:\n    >>> multiply(148L, 412L)\n\
    \    16L\n    >>> multiply(19L, 28L)\n    72L\n    >>> multiply(2020L, 1851L)\n\
    \    0L\n    >>> multiply(14L, -15L)\n    20L\n    \n*/\nlong multiply(long a,\
    \ long b) \n{\n    return (a % 10) * (b % 10);\n}\nunittest\n{\n    alias candidate\
    \ = multiply;\n\n    assert(candidate(148L, 412L) == 16L);\n    assert(candidate(19L,\
    \ 28L) == 72L);\n    assert(candidate(2020L, 1851L) == 0L);\n    assert(candidate(14L,\
    \ -15L) == 20L);\n    assert(candidate(76L, 67L) == 42L);\n    assert(candidate(17L,\
    \ 27L) == 49L);\n    assert(candidate(0L, 1L) == 0L);\n    assert(candidate(0L,\
    \ 0L) == 0L);\n}\nvoid main(){}"
  status: Exception
  stderr: 'core.exception.AssertError@/tmp/tmp1saqvwe8.d(29): unittest failure

    ----------------

    ??:? _d_unittestp [0x427de5]

    ??:? void tmp1saqvwe8.__unittest_L22_C1() [0x427ac4]

    ??:? void tmp1saqvwe8.__modtest() [0x427b68]

    ??:? int core.runtime.runModuleUnitTests().__foreachbody2(object.ModuleInfo*)
    [0x42bb0b]

    ??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)).__lambda2(immutable(object.ModuleInfo*))
    [0x42a99e]

    ??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))).__foreachbody2(ref
    rt.sections_elf_shared.DSO) [0x42fb31]

    ??:? int rt.sections_elf_shared.DSO.opApply(scope int delegate(ref rt.sections_elf_shared.DSO))
    [0x42ffe0]

    ??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*)))
    [0x42fabd]

    ??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)) [0x42a975]

    ??:? runModuleUnitTests [0x42b8e1]

    ??:? void rt.dmain2._d_run_main(int, char**, extern (C) int function(char[][])*).runAll()
    [0x428234]

    ??:? void rt.dmain2._d_r'
  stdout: ''
  timestamp: 1660164228

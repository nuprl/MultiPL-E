language: d
name: HumanEval_19_sort_numbers
results:
- exit_code: 1
  program: "import std.typecons;\nimport std.math;\n/*\n Input is a space-delimited\
    \ string of numberals from 'zero' to 'nine'.\n    Valid choices are 'zero', 'one',\
    \ 'two', 'three', 'four', 'five', 'six', 'seven', 'eight' and 'nine'.\n    Return\
    \ the string with numbers sorted from smallest to largest\n    >>> sort_numbers(\"\
    three one five\")\n    \"one three five\"\n    \n*/\nstring sort_numbers(string\
    \ numbers) \n{\n    string[] nums = numbers.split(\" \");\n    int[] nums_int\
    \ = new int[nums.length];\n    int i = 0;\n    foreach(string num; nums)\n   \
    \ {\n        nums_int[i] = to!int(num);\n        i++;\n    }\n    sort(nums_int);\n\
    \    string result = \"\";\n    foreach(int num; nums_int)\n    {\n        result\
    \ ~= num.to!string ~ \" \";\n    }\n    return result;\n}\nunittest\n{\n    alias\
    \ candidate = sort_numbers;\n\n    assert(candidate(\"\") == \"\");\n    assert(candidate(\"\
    three\") == \"three\");\n    assert(candidate(\"three five nine\") == \"three\
    \ five nine\");\n    assert(candidate(\"five zero four seven nine eight\") ==\
    \ \"zero four five seven eight nine\");\n    assert(candidate(\"six five four\
    \ three two one zero\") == \"zero one two three four five six\");\n}\nvoid main(){}"
  status: SyntaxError
  stderr: 'b''/tmp/tmpzwkw357r.d(13): Error: no property `split` for type `string`\n/tmp/tmpzwkw357r.d(18):
    Error: template instance `to!int` template `to` is not defined, did you mean No?\n/tmp/tmpzwkw357r.d(21):
    Error: undefined identifier `sort`, did you mean function `sqrt`?\n/tmp/tmpzwkw357r.d(25):
    Error: no property `to` for type `int`\nFailed: ["dmd", "-unittest", "-v", "-o-",
    "/tmp/tmpzwkw357r.d", "-I/tmp"]\n'''
  stdout: b''
- exit_code: 1
  program: "import std.typecons;\nimport std.math;\n/*\n Input is a space-delimited\
    \ string of numberals from 'zero' to 'nine'.\n    Valid choices are 'zero', 'one',\
    \ 'two', 'three', 'four', 'five', 'six', 'seven', 'eight' and 'nine'.\n    Return\
    \ the string with numbers sorted from smallest to largest\n    >>> sort_numbers(\"\
    three one five\")\n    \"one three five\"\n    \n*/\nstring sort_numbers(string\
    \ numbers) \n{\n    string[] nums = numbers.split(\" \");\n    int[] nums_int\
    \ = new int[nums.length];\n    foreach(i, num; nums)\n    {\n        switch(num)\n\
    \        {\n            case \"zero\":\n                nums_int[i] = 0;\n   \
    \             break;\n            case \"one\":\n                nums_int[i] =\
    \ 1;\n                break;\n            case \"two\":\n                nums_int[i]\
    \ = 2;\n                break;\n            case \"three\":\n                nums_int[i]\
    \ = 3;\n                break;\n            case \"four\":\n                nums_int[i]\
    \ = 4;\n                break;\n            case \"five\":\n                nums_int[i]\
    \ = 5;\n                break;\n            case \"six\":\n                nums_int[i]\
    \ = 6;\n                break;\n            case \"seven\":\n                nums_int[i]\
    \ = 7;\n                break;\n            case \"eight\":\n                nums_int[i]\
    \ = 8;\n                break;\n            case \"nine\":\n                nums_int[i]\
    \ = 9;\n                break;\n        }\n    }\n    nums_int.sort();\n    foreach(i,\
    \ num; nums_int)\n    {\n        switch(num)\n        {\n            case 0:\n\
    \                nums[i] = \"zero\";\n                break;\n            case\
    \ 1:\n                nums[i] = \"one\";\n                break;\n           \
    \ case 2:\n                nums[i] = \"two\";\n                break;\n      \
    \      case 3:\n                nums[i] = \"three\";\n                break;\n\
    \            case 4:\n                nums[i] = \"four\";\n                break;\n\
    \            case 5:\n                nums[i] = \"five\";\n                break;\n\
    \            case 6:\n                nums[i] = \"six\";\n                break;\n\
    \            case 7:\n                nums[i] = \"seven\";\n                break;\n\
    \            case 8:\n                nums[i] = \"eight\";\n                break;\n\
    \            case 9:\n                nums[i] = \"nine\nunittest\n{\n    alias\
    \ candidate = sort_numbers;\n\n    assert(candidate(\"\") == \"\");\n    assert(candidate(\"\
    three\") == \"three\");\n    assert(candidate(\"three five nine\") == \"three\
    \ five nine\");\n    assert(candidate(\"five zero four seven nine eight\") ==\
    \ \"zero four five seven eight nine\");\n    assert(candidate(\"six five four\
    \ three two one zero\") == \"zero one two three four five six\");\n}\nvoid main(){}"
  status: SyntaxError
  stderr: 'b''/tmp/tmp4qlkkvbk.d(89): Error: Implicit string concatenation is deprecated,
    use "nine\\x0aunittest\\x0a{\\x0a    alias candidate = sort_numbers;\\x0a\\x0a    assert(candidate("
    ~ ") == " instead\n/tmp/tmp4qlkkvbk.d(89): Error: Implicit string concatenation
    is deprecated, use ") == " ~ ");\\x0a    assert(candidate(" instead\n/tmp/tmp4qlkkvbk.d(90):
    Error: found `three` when expecting `;` following statement\n/tmp/tmp4qlkkvbk.d(90):
    Error: found `three` when expecting `;` following statement\n/tmp/tmp4qlkkvbk.d(91):
    Error: found `three` when expecting `;` following statement\n/tmp/tmp4qlkkvbk.d(91):
    Error: found `nine` when expecting `;` following statement\n/tmp/tmp4qlkkvbk.d(91):
    Error: found `three` when expecting `;` following statement\n/tmp/tmp4qlkkvbk.d(91):
    Error: found `nine` when expecting `;` following statement\n/tmp/tmp4qlkkvbk.d(92):
    Error: found `five` when expecting `;` following statement\n/tmp/tmp4qlkkvbk.d(92):
    Error: found `four` when expecting `;` following statement\n/tmp/tmp4qlkkvbk.d(92):
    Error: found `nine` when expecting `;` following statement\n/tmp/tmp4qlkkvbk.d(92):
    Error: found `") == "` when expecting `;` following statement\n/tmp/tmp4qlkkvbk.d(92):
    Error: found `four` when expecting `;` following statement\n/tmp/tmp4qlkkvbk.d(92):
    Error: found `seven` when expecting `;` following statement\n/tmp/tmp4qlkkvbk.d(92):
    Error: found `nine` when expecting `;` following statement\n/tmp/tmp4qlkkvbk.d(93):
    Error: found `six` when expecting `;` following statement\n/tmp/tmp4qlkkvbk.d(93):
    Error: found `four` when expecting `;` following statement\n/tmp/tmp4qlkkvbk.d(93):
    Error: found `two` when expecting `;` following statement\n/tmp/tmp4qlkkvbk.d(93):
    Error: found `zero` when expecting `;` following statement\n/tmp/tmp4qlkkvbk.d(93):
    Error: found `zero` when expecting `;` following statement\nFailed: ["dmd", "-unittest",
    "-v", "-o-", "/tmp/tmp4qlkkvbk.d", "-I/tmp"]\n'''
  stdout: b''
- exit_code: 1
  program: "import std.typecons;\nimport std.math;\n/*\n Input is a space-delimited\
    \ string of numberals from 'zero' to 'nine'.\n    Valid choices are 'zero', 'one',\
    \ 'two', 'three', 'four', 'five', 'six', 'seven', 'eight' and 'nine'.\n    Return\
    \ the string with numbers sorted from smallest to largest\n    >>> sort_numbers(\"\
    three one five\")\n    \"one three five\"\n    \n*/\nstring sort_numbers(string\
    \ numbers) \n{\n    string[] nums = numbers.split(\" \");\n    int[] nums_int\
    \ = new int[nums.length];\n    foreach(i, n; nums)\n    {\n        nums_int[i]\
    \ = to!int(n);\n    }\n    sort(nums_int);\n    string result = \"\";\n    foreach(n;\
    \ nums_int)\n    {\n        result ~= to!string(n) ~ \" \";\n    }\n    return\
    \ result.stripRight;\n}\nunittest\n{\n    alias candidate = sort_numbers;\n\n\
    \    assert(candidate(\"\") == \"\");\n    assert(candidate(\"three\") == \"three\"\
    );\n    assert(candidate(\"three five nine\") == \"three five nine\");\n    assert(candidate(\"\
    five zero four seven nine eight\") == \"zero four five seven eight nine\");\n\
    \    assert(candidate(\"six five four three two one zero\") == \"zero one two\
    \ three four five six\");\n}\nvoid main(){}"
  status: SyntaxError
  stderr: 'b''/tmp/tmpprsq5y3h.d(13): Error: no property `split` for type `string`\n/tmp/tmpprsq5y3h.d(17):
    Error: template instance `to!int` template `to` is not defined, did you mean No?\n/tmp/tmpprsq5y3h.d(19):
    Error: undefined identifier `sort`, did you mean function `sqrt`?\n/tmp/tmpprsq5y3h.d(23):
    Error: template instance `to!string` template `to` is not defined, did you mean
    No?\n/tmp/tmpprsq5y3h.d(25): Error: no property `stripRight` for type `string`\nFailed:
    ["dmd", "-unittest", "-v", "-o-", "/tmp/tmpprsq5y3h.d", "-I/tmp"]\n'''
  stdout: b''
- exit_code: 1
  program: "import std.typecons;\nimport std.math;\n/*\n Input is a space-delimited\
    \ string of numberals from 'zero' to 'nine'.\n    Valid choices are 'zero', 'one',\
    \ 'two', 'three', 'four', 'five', 'six', 'seven', 'eight' and 'nine'.\n    Return\
    \ the string with numbers sorted from smallest to largest\n    >>> sort_numbers(\"\
    three one five\")\n    \"one three five\"\n    \n*/\nstring sort_numbers(string\
    \ numbers) \n{\n    string[] nums = numbers.split(\" \");\n    int[] nums_int\
    \ = new int[nums.length];\n    foreach(i, num; nums)\n    {\n        nums_int[i]\
    \ = to!int(num);\n    }\n    nums_int.sort;\n    foreach(i, num; nums_int)\n \
    \   {\n        nums[i] = to!string(num);\n    }\n    return nums.join(\" \");\n\
    }\nunittest\n{\n    alias candidate = sort_numbers;\n\n    assert(candidate(\"\
    \") == \"\");\n    assert(candidate(\"three\") == \"three\");\n    assert(candidate(\"\
    three five nine\") == \"three five nine\");\n    assert(candidate(\"five zero\
    \ four seven nine eight\") == \"zero four five seven eight nine\");\n    assert(candidate(\"\
    six five four three two one zero\") == \"zero one two three four five six\");\n\
    }\nvoid main(){}"
  status: SyntaxError
  stderr: 'b''/tmp/tmpb_0z0g7e.d(13): Error: no property `split` for type `string`\n/tmp/tmpb_0z0g7e.d(17):
    Error: template instance `to!int` template `to` is not defined, did you mean No?\n/tmp/tmpb_0z0g7e.d(19):
    Error: no property `sort` for type `int[]`\n/tmp/tmpb_0z0g7e.d(22): Error: template
    instance `to!string` template `to` is not defined, did you mean No?\n/tmp/tmpb_0z0g7e.d(24):
    Error: no property `join` for type `string[]`\nFailed: ["dmd", "-unittest", "-v",
    "-o-", "/tmp/tmpb_0z0g7e.d", "-I/tmp"]\n'''
  stdout: b''
- exit_code: 1
  program: "import std.typecons;\nimport std.math;\n/*\n Input is a space-delimited\
    \ string of numberals from 'zero' to 'nine'.\n    Valid choices are 'zero', 'one',\
    \ 'two', 'three', 'four', 'five', 'six', 'seven', 'eight' and 'nine'.\n    Return\
    \ the string with numbers sorted from smallest to largest\n    >>> sort_numbers(\"\
    three one five\")\n    \"one three five\"\n    \n*/\nstring sort_numbers(string\
    \ numbers) \n{\n    string[] nums = numbers.split(\" \");\n    int[] nums_int\
    \ = new int[nums.length];\n    foreach(i, num; nums)\n    {\n        nums_int[i]\
    \ = to!int(num);\n    }\n    sort(nums_int);\n    string result = \"\";\n    foreach(num;\
    \ nums_int)\n    {\n        result ~= to!string(num) ~ \" \";\n    }\n    return\
    \ result.trimRight();\n}\nunittest\n{\n    alias candidate = sort_numbers;\n\n\
    \    assert(candidate(\"\") == \"\");\n    assert(candidate(\"three\") == \"three\"\
    );\n    assert(candidate(\"three five nine\") == \"three five nine\");\n    assert(candidate(\"\
    five zero four seven nine eight\") == \"zero four five seven eight nine\");\n\
    \    assert(candidate(\"six five four three two one zero\") == \"zero one two\
    \ three four five six\");\n}\nvoid main(){}"
  status: SyntaxError
  stderr: 'b''/tmp/tmpdivxo2hv.d(13): Error: no property `split` for type `string`\n/tmp/tmpdivxo2hv.d(17):
    Error: template instance `to!int` template `to` is not defined, did you mean No?\n/tmp/tmpdivxo2hv.d(19):
    Error: undefined identifier `sort`, did you mean function `sqrt`?\n/tmp/tmpdivxo2hv.d(23):
    Error: template instance `to!string` template `to` is not defined, did you mean
    No?\n/tmp/tmpdivxo2hv.d(25): Error: no property `trimRight` for type `string`\nFailed:
    ["dmd", "-unittest", "-v", "-o-", "/tmp/tmpdivxo2hv.d", "-I/tmp"]\n'''
  stdout: b''
- exit_code: 1
  program: "import std.typecons;\nimport std.math;\n/*\n Input is a space-delimited\
    \ string of numberals from 'zero' to 'nine'.\n    Valid choices are 'zero', 'one',\
    \ 'two', 'three', 'four', 'five', 'six', 'seven', 'eight' and 'nine'.\n    Return\
    \ the string with numbers sorted from smallest to largest\n    >>> sort_numbers(\"\
    three one five\")\n    \"one three five\"\n    \n*/\nstring sort_numbers(string\
    \ numbers) \n{\n    string[] nums = numbers.split(\" \");\n    int[] nums_int\
    \ = new int[nums.length];\n    foreach(i, num; nums)\n    {\n        switch(num)\n\
    \        {\n            case \"zero\": nums_int[i] = 0; break;\n            case\
    \ \"one\": nums_int[i] = 1; break;\n            case \"two\": nums_int[i] = 2;\
    \ break;\n            case \"three\": nums_int[i] = 3; break;\n            case\
    \ \"four\": nums_int[i] = 4; break;\n            case \"five\": nums_int[i] =\
    \ 5; break;\n            case \"six\": nums_int[i] = 6; break;\n            case\
    \ \"seven\": nums_int[i] = 7; break;\n            case \"eight\": nums_int[i]\
    \ = 8; break;\n            case \"nine\": nums_int[i] = 9; break;\n        }\n\
    \    }\n    nums_int.sort;\n    foreach(i, num; nums_int)\n    {\n        switch(num)\n\
    \        {\n            case 0: nums[i] = \"zero\"; break;\n            case 1:\
    \ nums[i] = \"one\"; break;\n            case 2: nums[i] = \"two\"; break;\n \
    \           case 3: nums[i] = \"three\"; break;\n            case 4: nums[i] =\
    \ \"four\"; break;\n            case 5: nums[i] = \"five\"; break;\n         \
    \   case 6: nums[i] = \"six\"; break;\n            case 7: nums[i] = \"seven\"\
    ; break;\n            case 8: nums[i] = \"eight\"; break;\n            case 9:\
    \ nums[i] = \"nine\"; break;\n        }\n    }\n    return nums.join(\" \");\n\
    }\nunittest\n{\n    alias candidate = sort_numbers;\n\n    assert(candidate(\"\
    \") == \"\");\n    assert(candidate(\"three\") == \"three\");\n    assert(candidate(\"\
    three five nine\") == \"three five nine\");\n    assert(candidate(\"five zero\
    \ four seven nine eight\") == \"zero four five seven eight nine\");\n    assert(candidate(\"\
    six five four three two one zero\") == \"zero one two three four five six\");\n\
    }\nvoid main(){}"
  status: SyntaxError
  stderr: 'b''/tmp/tmpf61a4wfd.d(13): Error: no property `split` for type `string`\n/tmp/tmpf61a4wfd.d(17):
    Error: `switch` statement without a `default`; use `final switch` or add `default:
    assert(0);` or add `default: break;`\n/tmp/tmpf61a4wfd.d(31): Error: no property
    `sort` for type `int[]`\n/tmp/tmpf61a4wfd.d(34): Error: `switch` statement without
    a `default`; use `final switch` or add `default: assert(0);` or add `default:
    break;`\n/tmp/tmpf61a4wfd.d(48): Error: no property `join` for type `string[]`\nFailed:
    ["dmd", "-unittest", "-v", "-o-", "/tmp/tmpf61a4wfd.d", "-I/tmp"]\n'''
  stdout: b''
- exit_code: 1
  program: "import std.typecons;\nimport std.math;\n/*\n Input is a space-delimited\
    \ string of numberals from 'zero' to 'nine'.\n    Valid choices are 'zero', 'one',\
    \ 'two', 'three', 'four', 'five', 'six', 'seven', 'eight' and 'nine'.\n    Return\
    \ the string with numbers sorted from smallest to largest\n    >>> sort_numbers(\"\
    three one five\")\n    \"one three five\"\n    \n*/\nstring sort_numbers(string\
    \ numbers) \n{\n    string[] nums = numbers.split(\" \");\n    int[] nums_int\
    \ = new int[nums.length];\n    foreach(int i, string num; nums)\n    {\n     \
    \   switch(num)\n        {\n            case \"zero\":\n                nums_int[i]\
    \ = 0;\n                break;\n            case \"one\":\n                nums_int[i]\
    \ = 1;\n                break;\n            case \"two\":\n                nums_int[i]\
    \ = 2;\n                break;\n            case \"three\":\n                nums_int[i]\
    \ = 3;\n                break;\n            case \"four\":\n                nums_int[i]\
    \ = 4;\n                break;\n            case \"five\":\n                nums_int[i]\
    \ = 5;\n                break;\n            case \"six\":\n                nums_int[i]\
    \ = 6;\n                break;\n            case \"seven\":\n                nums_int[i]\
    \ = 7;\n                break;\n            case \"eight\":\n                nums_int[i]\
    \ = 8;\n                break;\n            case \"nine\":\n                nums_int[i]\
    \ = 9;\n                break;\n        }\n    }\n    nums_int.sort();\n    foreach(int\
    \ i, int num; nums_int)\n    {\n        switch(num)\n        {\n            case\
    \ 0:\n                nums[i] = \"zero\";\n                break;\n          \
    \  case 1:\n                nums[i] = \"one\";\n                break;\n     \
    \       case 2:\n                nums[i] = \"two\";\n                break;\n\
    \            case 3:\n                nums[i] = \"three\";\n                break;\n\
    \            case 4:\n                nums[i] = \"four\";\n                break;\n\
    \            case 5:\n                nums[i] = \"five\";\n                break;\n\
    \            case 6:\n                nums[i] = \"six\";\n                break;\n\
    \            case 7:\n                nums[i] = \"seven\";\n                break;\n\
    \            case 8:\n                nums[i] = \"eight\";\n                break;\n\
    \            case 9:\n                nums[i\nunittest\n{\n    alias candidate\
    \ = sort_numbers;\n\n    assert(candidate(\"\") == \"\");\n    assert(candidate(\"\
    three\") == \"three\");\n    assert(candidate(\"three five nine\") == \"three\
    \ five nine\");\n    assert(candidate(\"five zero four seven nine eight\") ==\
    \ \"zero four five seven eight nine\");\n    assert(candidate(\"six five four\
    \ three two one zero\") == \"zero one two three four five six\");\n}\nvoid main(){}"
  status: SyntaxError
  stderr: 'b''/tmp/tmpvmmn9j_i.d(85): Error: found `unittest` when expecting `,`\n/tmp/tmpvmmn9j_i.d(95):
    Error: found `void` when expecting `,`\n/tmp/tmpvmmn9j_i.d(95): Error: found `{`
    when expecting `,`\n/tmp/tmpvmmn9j_i.d(95): Error: expression expected, not `}`\n/tmp/tmpvmmn9j_i.d(95):
    Error: found `End of File` when expecting `,`\n/tmp/tmpvmmn9j_i.d(95): Error:
    found `End of File` when expecting `]`\n/tmp/tmpvmmn9j_i.d(95): Error: found `End
    of File` when expecting `;` following statement\n/tmp/tmpvmmn9j_i.d(95): Error:
    found `End of File` when expecting `}` following compound statement\n/tmp/tmpvmmn9j_i.d(95):
    Error: found `End of File` when expecting `}` following compound statement\n/tmp/tmpvmmn9j_i.d(95):
    Error: found `End of File` when expecting `}` following compound statement\nFailed:
    ["dmd", "-unittest", "-v", "-o-", "/tmp/tmpvmmn9j_i.d", "-I/tmp"]\n'''
  stdout: b''
- exit_code: 1
  program: "import std.typecons;\nimport std.math;\n/*\n Input is a space-delimited\
    \ string of numberals from 'zero' to 'nine'.\n    Valid choices are 'zero', 'one',\
    \ 'two', 'three', 'four', 'five', 'six', 'seven', 'eight' and 'nine'.\n    Return\
    \ the string with numbers sorted from smallest to largest\n    >>> sort_numbers(\"\
    three one five\")\n    \"one three five\"\n    \n*/\nstring sort_numbers(string\
    \ numbers) \n{\n    string[] nums = numbers.split(\" \");\n    int[] nums_int\
    \ = new int[nums.length];\n    foreach(i, num; nums)\n    {\n        nums_int[i]\
    \ = num_to_int(num);\n    }\n    nums_int.sort;\n    foreach(i, num; nums_int)\n\
    \    {\n        nums[i] = int_to_num(num);\n    }\n    return nums.join(\" \"\
    );\n}\nunittest\n{\n    alias candidate = sort_numbers;\n\n    assert(candidate(\"\
    \") == \"\");\n    assert(candidate(\"three\") == \"three\");\n    assert(candidate(\"\
    three five nine\") == \"three five nine\");\n    assert(candidate(\"five zero\
    \ four seven nine eight\") == \"zero four five seven eight nine\");\n    assert(candidate(\"\
    six five four three two one zero\") == \"zero one two three four five six\");\n\
    }\nvoid main(){}"
  status: SyntaxError
  stderr: 'b''/tmp/tmphyfenz3v.d(13): Error: no property `split` for type `string`\n/tmp/tmphyfenz3v.d(17):
    Error: undefined identifier `num_to_int`\n/tmp/tmphyfenz3v.d(19): Error: no property
    `sort` for type `int[]`\n/tmp/tmphyfenz3v.d(22): Error: undefined identifier `int_to_num`\n/tmp/tmphyfenz3v.d(24):
    Error: no property `join` for type `string[]`\nFailed: ["dmd", "-unittest", "-v",
    "-o-", "/tmp/tmphyfenz3v.d", "-I/tmp"]\n'''
  stdout: b''
- exit_code: 1
  program: "import std.typecons;\nimport std.math;\n/*\n Input is a space-delimited\
    \ string of numberals from 'zero' to 'nine'.\n    Valid choices are 'zero', 'one',\
    \ 'two', 'three', 'four', 'five', 'six', 'seven', 'eight' and 'nine'.\n    Return\
    \ the string with numbers sorted from smallest to largest\n    >>> sort_numbers(\"\
    three one five\")\n    \"one three five\"\n    \n*/\nstring sort_numbers(string\
    \ numbers) \n{\n    string[] nums = numbers.split(\" \");\n    int[] nums_int\
    \ = new int[nums.length];\n    foreach(int i, string num; nums)\n    {\n     \
    \   nums_int[i] = num_to_int(num);\n    }\n    sort(nums_int);\n    string result\
    \ = \"\";\n    foreach(int i, int num; nums_int)\n    {\n        result ~= int_to_num(num)\
    \ ~ \" \";\n    }\n    return result.stripRight();\n}\nunittest\n{\n    alias\
    \ candidate = sort_numbers;\n\n    assert(candidate(\"\") == \"\");\n    assert(candidate(\"\
    three\") == \"three\");\n    assert(candidate(\"three five nine\") == \"three\
    \ five nine\");\n    assert(candidate(\"five zero four seven nine eight\") ==\
    \ \"zero four five seven eight nine\");\n    assert(candidate(\"six five four\
    \ three two one zero\") == \"zero one two three four five six\");\n}\nvoid main(){}"
  status: SyntaxError
  stderr: 'b''/tmp/tmphyvf5a9w.d(13): Error: no property `split` for type `string`\n/tmp/tmphyvf5a9w.d(17):
    Error: undefined identifier `num_to_int`\n/tmp/tmphyvf5a9w.d(19): Error: undefined
    identifier `sort`, did you mean function `sqrt`?\n/tmp/tmphyvf5a9w.d(23): Error:
    undefined identifier `int_to_num`\n/tmp/tmphyvf5a9w.d(25): Error: no property
    `stripRight` for type `string`\nFailed: ["dmd", "-unittest", "-v", "-o-", "/tmp/tmphyvf5a9w.d",
    "-I/tmp"]\n'''
  stdout: b''
- exit_code: 1
  program: "import std.typecons;\nimport std.math;\n/*\n Input is a space-delimited\
    \ string of numberals from 'zero' to 'nine'.\n    Valid choices are 'zero', 'one',\
    \ 'two', 'three', 'four', 'five', 'six', 'seven', 'eight' and 'nine'.\n    Return\
    \ the string with numbers sorted from smallest to largest\n    >>> sort_numbers(\"\
    three one five\")\n    \"one three five\"\n    \n*/\nstring sort_numbers(string\
    \ numbers) \n{\n    string[] nums = numbers.split(\" \");\n    int[] nums_int\
    \ = new int[nums.length];\n    for (int i = 0; i < nums.length; i++)\n    {\n\
    \        nums_int[i] = to!int(nums[i]);\n    }\n    sort(nums_int);\n    string\
    \ result = \"\";\n    foreach (int i; nums_int)\n    {\n        result ~= to!string(i)\
    \ ~ \" \";\n    }\n    return result.trimRight();\n}\nunittest\n{\n    alias candidate\
    \ = sort_numbers;\n\n    assert(candidate(\"\") == \"\");\n    assert(candidate(\"\
    three\") == \"three\");\n    assert(candidate(\"three five nine\") == \"three\
    \ five nine\");\n    assert(candidate(\"five zero four seven nine eight\") ==\
    \ \"zero four five seven eight nine\");\n    assert(candidate(\"six five four\
    \ three two one zero\") == \"zero one two three four five six\");\n}\nvoid main(){}"
  status: SyntaxError
  stderr: 'b''/tmp/tmppxqqeq3t.d(13): Error: no property `split` for type `string`\n/tmp/tmppxqqeq3t.d(17):
    Error: template instance `to!int` template `to` is not defined, did you mean No?\n/tmp/tmppxqqeq3t.d(19):
    Error: undefined identifier `sort`, did you mean function `sqrt`?\n/tmp/tmppxqqeq3t.d(23):
    Error: template instance `to!string` template `to` is not defined, did you mean
    No?\n/tmp/tmppxqqeq3t.d(25): Error: no property `trimRight` for type `string`\nFailed:
    ["dmd", "-unittest", "-v", "-o-", "/tmp/tmppxqqeq3t.d", "-I/tmp"]\n'''
  stdout: b''
- exit_code: 1
  program: "import std.typecons;\nimport std.math;\n/*\n Input is a space-delimited\
    \ string of numberals from 'zero' to 'nine'.\n    Valid choices are 'zero', 'one',\
    \ 'two', 'three', 'four', 'five', 'six', 'seven', 'eight' and 'nine'.\n    Return\
    \ the string with numbers sorted from smallest to largest\n    >>> sort_numbers(\"\
    three one five\")\n    \"one three five\"\n    \n*/\nstring sort_numbers(string\
    \ numbers) \n{\n    import std.algorithm.comparison : sort;\n    import std.conv\
    \ : to;\n    import std.range : map;\n    import std.array : array;\n    import\
    \ std.string : split;\n    import std.typecons : tuple;\n    import std.math :\
    \ min;\n    import std.stdio : writeln;\n    import std.traits : isIntegral;\n\
    \    import std.typecons : tuple;\n    import std.algorithm : sort;\n    import\
    \ std.range : map;\n    import std.array : array;\n    import std.string : split;\n\
    \    import std.typecons : tuple;\n    import std.math : min;\n    import std.stdio\
    \ : writeln;\n    import std.traits : isIntegral;\n    import std.typecons : tuple;\n\
    \    import std.algorithm : sort;\n    import std.range : map;\n    import std.array\
    \ : array;\n    import std.string : split;\n    import std.typecons : tuple;\n\
    \    import std.math : min;\n    import std.stdio : writeln;\n    import std.traits\
    \ : isIntegral;\n    import std.typecons : tuple;\n    import std.algorithm :\
    \ sort;\n    import std.range : map;\n    import std.array : array;\n    import\
    \ std.string : split;\n    import std.typecons : tuple;\n    import std.math :\
    \ min;\n    import std.stdio : writeln;\n    import std.traits : isIntegral;\n\
    \    import std.typecons : tuple;\n    import std.algorithm : sort;\n    import\
    \ std.range : map;\n    import std.array : array;\n    import std.string : split;\n\
    \    import std.typecons : tuple;\n    import std.math : min;\n    import std.stdio\
    \ : writeln;\n    import std.traits : isIntegral;\n    import std.typecons : tuple;\n\
    \    import std.algorithm : sort;\n    import std.range : map;\n    import std.array\
    \ : array;\n    import std.string : split;\n    import std.typecons : tuple;\n\
    \    import std.\nunittest\n{\n    alias candidate = sort_numbers;\n\n    assert(candidate(\"\
    \") == \"\");\n    assert(candidate(\"three\") == \"three\");\n    assert(candidate(\"\
    three five nine\") == \"three five nine\");\n    assert(candidate(\"five zero\
    \ four seven nine eight\") == \"zero four five seven eight nine\");\n    assert(candidate(\"\
    six five four three two one zero\") == \"zero one two three four five six\");\n\
    }\nvoid main(){}"
  status: SyntaxError
  stderr: 'b''/tmp/tmpoyd_4qpa.d(65): Error: identifier expected following `package`\n/tmp/tmpoyd_4qpa.d(65):
    Error: `;` expected\n/tmp/tmpoyd_4qpa.d(75): Error: found `End of File` when expecting
    `}` following compound statement\nFailed: ["dmd", "-unittest", "-v", "-o-", "/tmp/tmpoyd_4qpa.d",
    "-I/tmp"]\n'''
  stdout: b''
- exit_code: 1
  program: "import std.typecons;\nimport std.math;\n/*\n Input is a space-delimited\
    \ string of numberals from 'zero' to 'nine'.\n    Valid choices are 'zero', 'one',\
    \ 'two', 'three', 'four', 'five', 'six', 'seven', 'eight' and 'nine'.\n    Return\
    \ the string with numbers sorted from smallest to largest\n    >>> sort_numbers(\"\
    three one five\")\n    \"one three five\"\n    \n*/\nstring sort_numbers(string\
    \ numbers) \n{\n    string[] nums = numbers.split(\" \");\n    int[] num_ints\
    \ = new int[nums.length];\n    foreach(i, num; nums)\n    {\n        switch(num)\n\
    \        {\n            case \"zero\": num_ints[i] = 0; break;\n            case\
    \ \"one\": num_ints[i] = 1; break;\n            case \"two\": num_ints[i] = 2;\
    \ break;\n            case \"three\": num_ints[i] = 3; break;\n            case\
    \ \"four\": num_ints[i] = 4; break;\n            case \"five\": num_ints[i] =\
    \ 5; break;\n            case \"six\": num_ints[i] = 6; break;\n            case\
    \ \"seven\": num_ints[i] = 7; break;\n            case \"eight\": num_ints[i]\
    \ = 8; break;\n            case \"nine\": num_ints[i] = 9; break;\n        }\n\
    \    }\n    num_ints.sort();\n    foreach(i, num; num_ints)\n    {\n        switch(num)\n\
    \        {\n            case 0: nums[i] = \"zero\"; break;\n            case 1:\
    \ nums[i] = \"one\"; break;\n            case 2: nums[i] = \"two\"; break;\n \
    \           case 3: nums[i] = \"three\"; break;\n            case 4: nums[i] =\
    \ \"four\"; break;\n            case 5: nums[i] = \"five\"; break;\n         \
    \   case 6: nums[i] = \"six\"; break;\n            case 7: nums[i] = \"seven\"\
    ; break;\n            case 8: nums[i] = \"eight\"; break;\n            case 9:\
    \ nums[i] = \"nine\"; break;\n        }\n    }\n    return nums.join(\" \");\n\
    }\nunittest\n{\n    alias candidate = sort_numbers;\n\n    assert(candidate(\"\
    \") == \"\");\n    assert(candidate(\"three\") == \"three\");\n    assert(candidate(\"\
    three five nine\") == \"three five nine\");\n    assert(candidate(\"five zero\
    \ four seven nine eight\") == \"zero four five seven eight nine\");\n    assert(candidate(\"\
    six five four three two one zero\") == \"zero one two three four five six\");\n\
    }\nvoid main(){}"
  status: SyntaxError
  stderr: 'b''/tmp/tmpt_h8u_9r.d(13): Error: no property `split` for type `string`\n/tmp/tmpt_h8u_9r.d(17):
    Error: `switch` statement without a `default`; use `final switch` or add `default:
    assert(0);` or add `default: break;`\n/tmp/tmpt_h8u_9r.d(31): Error: no property
    `sort` for type `int[]`\n/tmp/tmpt_h8u_9r.d(34): Error: `switch` statement without
    a `default`; use `final switch` or add `default: assert(0);` or add `default:
    break;`\n/tmp/tmpt_h8u_9r.d(48): Error: no property `join` for type `string[]`\nFailed:
    ["dmd", "-unittest", "-v", "-o-", "/tmp/tmpt_h8u_9r.d", "-I/tmp"]\n'''
  stdout: b''
- exit_code: 1
  program: "import std.typecons;\nimport std.math;\n/*\n Input is a space-delimited\
    \ string of numberals from 'zero' to 'nine'.\n    Valid choices are 'zero', 'one',\
    \ 'two', 'three', 'four', 'five', 'six', 'seven', 'eight' and 'nine'.\n    Return\
    \ the string with numbers sorted from smallest to largest\n    >>> sort_numbers(\"\
    three one five\")\n    \"one three five\"\n    \n*/\nstring sort_numbers(string\
    \ numbers) \n{\n    string[] nums = numbers.split(\" \");\n    int[] nums_int\
    \ = new int[nums.length];\n    foreach(i, num; nums)\n    {\n        switch(num)\n\
    \        {\n            case \"zero\":\n                nums_int[i] = 0;\n   \
    \             break;\n            case \"one\":\n                nums_int[i] =\
    \ 1;\n                break;\n            case \"two\":\n                nums_int[i]\
    \ = 2;\n                break;\n            case \"three\":\n                nums_int[i]\
    \ = 3;\n                break;\n            case \"four\":\n                nums_int[i]\
    \ = 4;\n                break;\n            case \"five\":\n                nums_int[i]\
    \ = 5;\n                break;\n            case \"six\":\n                nums_int[i]\
    \ = 6;\n                break;\n            case \"seven\":\n                nums_int[i]\
    \ = 7;\n                break;\n            case \"eight\":\n                nums_int[i]\
    \ = 8;\n                break;\n            case \"nine\":\n                nums_int[i]\
    \ = 9;\n                break;\n        }\n    }\n    nums_int.sort();\n    foreach(i,\
    \ num; nums_int)\n    {\n        switch(num)\n        {\n            case 0:\n\
    \                nums[i] = \"zero\";\n                break;\n            case\
    \ 1:\n                nums[i] = \"one\";\n                break;\n           \
    \ case 2:\n                nums[i] = \"two\";\n                break;\n      \
    \      case 3:\n                nums[i] = \"three\";\n                break;\n\
    \            case 4:\n                nums[i] = \"four\";\n                break;\n\
    \            case 5:\n                nums[i] = \"five\";\n                break;\n\
    \            case 6:\n                nums[i] = \"six\";\n                break;\n\
    \            case 7:\n                nums[i] = \"seven\";\n                break;\n\
    \            case 8:\n                nums[i] = \"eight\";\n                break;\n\
    \            case 9:\n                nums[i] = \"nine\nunittest\n{\n    alias\
    \ candidate = sort_numbers;\n\n    assert(candidate(\"\") == \"\");\n    assert(candidate(\"\
    three\") == \"three\");\n    assert(candidate(\"three five nine\") == \"three\
    \ five nine\");\n    assert(candidate(\"five zero four seven nine eight\") ==\
    \ \"zero four five seven eight nine\");\n    assert(candidate(\"six five four\
    \ three two one zero\") == \"zero one two three four five six\");\n}\nvoid main(){}"
  status: SyntaxError
  stderr: 'b''/tmp/tmp4qlkkvbk.d(89): Error: Implicit string concatenation is deprecated,
    use "nine\\x0aunittest\\x0a{\\x0a    alias candidate = sort_numbers;\\x0a\\x0a    assert(candidate("
    ~ ") == " instead\n/tmp/tmp4qlkkvbk.d(89): Error: Implicit string concatenation
    is deprecated, use ") == " ~ ");\\x0a    assert(candidate(" instead\n/tmp/tmp4qlkkvbk.d(90):
    Error: found `three` when expecting `;` following statement\n/tmp/tmp4qlkkvbk.d(90):
    Error: found `three` when expecting `;` following statement\n/tmp/tmp4qlkkvbk.d(91):
    Error: found `three` when expecting `;` following statement\n/tmp/tmp4qlkkvbk.d(91):
    Error: found `nine` when expecting `;` following statement\n/tmp/tmp4qlkkvbk.d(91):
    Error: found `three` when expecting `;` following statement\n/tmp/tmp4qlkkvbk.d(91):
    Error: found `nine` when expecting `;` following statement\n/tmp/tmp4qlkkvbk.d(92):
    Error: found `five` when expecting `;` following statement\n/tmp/tmp4qlkkvbk.d(92):
    Error: found `four` when expecting `;` following statement\n/tmp/tmp4qlkkvbk.d(92):
    Error: found `nine` when expecting `;` following statement\n/tmp/tmp4qlkkvbk.d(92):
    Error: found `") == "` when expecting `;` following statement\n/tmp/tmp4qlkkvbk.d(92):
    Error: found `four` when expecting `;` following statement\n/tmp/tmp4qlkkvbk.d(92):
    Error: found `seven` when expecting `;` following statement\n/tmp/tmp4qlkkvbk.d(92):
    Error: found `nine` when expecting `;` following statement\n/tmp/tmp4qlkkvbk.d(93):
    Error: found `six` when expecting `;` following statement\n/tmp/tmp4qlkkvbk.d(93):
    Error: found `four` when expecting `;` following statement\n/tmp/tmp4qlkkvbk.d(93):
    Error: found `two` when expecting `;` following statement\n/tmp/tmp4qlkkvbk.d(93):
    Error: found `zero` when expecting `;` following statement\n/tmp/tmp4qlkkvbk.d(93):
    Error: found `zero` when expecting `;` following statement\nFailed: ["dmd", "-unittest",
    "-v", "-o-", "/tmp/tmp4qlkkvbk.d", "-I/tmp"]\n'''
  stdout: b''
- exit_code: 1
  program: "import std.typecons;\nimport std.math;\n/*\n Input is a space-delimited\
    \ string of numberals from 'zero' to 'nine'.\n    Valid choices are 'zero', 'one',\
    \ 'two', 'three', 'four', 'five', 'six', 'seven', 'eight' and 'nine'.\n    Return\
    \ the string with numbers sorted from smallest to largest\n    >>> sort_numbers(\"\
    three one five\")\n    \"one three five\"\n    \n*/\nstring sort_numbers(string\
    \ numbers) \n{\n    string[] nums = numbers.split(\" \");\n    int[] nums_int\
    \ = new int[nums.length];\n    foreach(i, num; nums)\n    {\n        switch(num)\n\
    \        {\n            case \"zero\":\n                nums_int[i] = 0;\n   \
    \             break;\n            case \"one\":\n                nums_int[i] =\
    \ 1;\n                break;\n            case \"two\":\n                nums_int[i]\
    \ = 2;\n                break;\n            case \"three\":\n                nums_int[i]\
    \ = 3;\n                break;\n            case \"four\":\n                nums_int[i]\
    \ = 4;\n                break;\n            case \"five\":\n                nums_int[i]\
    \ = 5;\n                break;\n            case \"six\":\n                nums_int[i]\
    \ = 6;\n                break;\n            case \"seven\":\n                nums_int[i]\
    \ = 7;\n                break;\n            case \"eight\":\n                nums_int[i]\
    \ = 8;\n                break;\n            case \"nine\":\n                nums_int[i]\
    \ = 9;\n                break;\n        }\n    }\n    nums_int.sort;\n    foreach(i,\
    \ num; nums_int)\n    {\n        switch(num)\n        {\n            case 0:\n\
    \                nums[i] = \"zero\";\n                break;\n            case\
    \ 1:\n                nums[i] = \"one\";\n                break;\n           \
    \ case 2:\n                nums[i] = \"two\";\n                break;\n      \
    \      case 3:\n                nums[i] = \"three\";\n                break;\n\
    \            case 4:\n                nums[i] = \"four\";\n                break;\n\
    \            case 5:\n                nums[i] = \"five\";\n                break;\n\
    \            case 6:\n                nums[i] = \"six\";\n                break;\n\
    \            case 7:\n                nums[i] = \"seven\";\n                break;\n\
    \            case 8:\n                nums[i] = \"eight\";\n                break;\n\
    \            case 9:\n                nums[i] = \"nine\nunittest\n{\n    alias\
    \ candidate = sort_numbers;\n\n    assert(candidate(\"\") == \"\");\n    assert(candidate(\"\
    three\") == \"three\");\n    assert(candidate(\"three five nine\") == \"three\
    \ five nine\");\n    assert(candidate(\"five zero four seven nine eight\") ==\
    \ \"zero four five seven eight nine\");\n    assert(candidate(\"six five four\
    \ three two one zero\") == \"zero one two three four five six\");\n}\nvoid main(){}"
  status: SyntaxError
  stderr: 'b''/tmp/tmp742ktu8s.d(89): Error: Implicit string concatenation is deprecated,
    use "nine\\x0aunittest\\x0a{\\x0a    alias candidate = sort_numbers;\\x0a\\x0a    assert(candidate("
    ~ ") == " instead\n/tmp/tmp742ktu8s.d(89): Error: Implicit string concatenation
    is deprecated, use ") == " ~ ");\\x0a    assert(candidate(" instead\n/tmp/tmp742ktu8s.d(90):
    Error: found `three` when expecting `;` following statement\n/tmp/tmp742ktu8s.d(90):
    Error: found `three` when expecting `;` following statement\n/tmp/tmp742ktu8s.d(91):
    Error: found `three` when expecting `;` following statement\n/tmp/tmp742ktu8s.d(91):
    Error: found `nine` when expecting `;` following statement\n/tmp/tmp742ktu8s.d(91):
    Error: found `three` when expecting `;` following statement\n/tmp/tmp742ktu8s.d(91):
    Error: found `nine` when expecting `;` following statement\n/tmp/tmp742ktu8s.d(92):
    Error: found `five` when expecting `;` following statement\n/tmp/tmp742ktu8s.d(92):
    Error: found `four` when expecting `;` following statement\n/tmp/tmp742ktu8s.d(92):
    Error: found `nine` when expecting `;` following statement\n/tmp/tmp742ktu8s.d(92):
    Error: found `") == "` when expecting `;` following statement\n/tmp/tmp742ktu8s.d(92):
    Error: found `four` when expecting `;` following statement\n/tmp/tmp742ktu8s.d(92):
    Error: found `seven` when expecting `;` following statement\n/tmp/tmp742ktu8s.d(92):
    Error: found `nine` when expecting `;` following statement\n/tmp/tmp742ktu8s.d(93):
    Error: found `six` when expecting `;` following statement\n/tmp/tmp742ktu8s.d(93):
    Error: found `four` when expecting `;` following statement\n/tmp/tmp742ktu8s.d(93):
    Error: found `two` when expecting `;` following statement\n/tmp/tmp742ktu8s.d(93):
    Error: found `zero` when expecting `;` following statement\n/tmp/tmp742ktu8s.d(93):
    Error: found `zero` when expecting `;` following statement\nFailed: ["dmd", "-unittest",
    "-v", "-o-", "/tmp/tmp742ktu8s.d", "-I/tmp"]\n'''
  stdout: b''
- exit_code: 1
  program: "import std.typecons;\nimport std.math;\n/*\n Input is a space-delimited\
    \ string of numberals from 'zero' to 'nine'.\n    Valid choices are 'zero', 'one',\
    \ 'two', 'three', 'four', 'five', 'six', 'seven', 'eight' and 'nine'.\n    Return\
    \ the string with numbers sorted from smallest to largest\n    >>> sort_numbers(\"\
    three one five\")\n    \"one three five\"\n    \n*/\nstring sort_numbers(string\
    \ numbers) \n{\n    string[] nums = numbers.split(\" \");\n    string[] nums_sorted\
    \ = nums.dup;\n    nums_sorted.sort;\n    string ret = \"\";\n    foreach(string\
    \ num; nums_sorted)\n    {\n        ret ~= num ~ \" \";\n    }\n    return ret.stripRight;\n\
    }\nunittest\n{\n    alias candidate = sort_numbers;\n\n    assert(candidate(\"\
    \") == \"\");\n    assert(candidate(\"three\") == \"three\");\n    assert(candidate(\"\
    three five nine\") == \"three five nine\");\n    assert(candidate(\"five zero\
    \ four seven nine eight\") == \"zero four five seven eight nine\");\n    assert(candidate(\"\
    six five four three two one zero\") == \"zero one two three four five six\");\n\
    }\nvoid main(){}"
  status: SyntaxError
  stderr: 'b''/tmp/tmpqpt9_296.d(13): Error: no property `split` for type `string`\n/tmp/tmpqpt9_296.d(15):
    Error: no property `sort` for type `string[]`\n/tmp/tmpqpt9_296.d(21): Error:
    no property `stripRight` for type `string`\nFailed: ["dmd", "-unittest", "-v",
    "-o-", "/tmp/tmpqpt9_296.d", "-I/tmp"]\n'''
  stdout: b''
- exit_code: 1
  program: "import std.typecons;\nimport std.math;\n/*\n Input is a space-delimited\
    \ string of numberals from 'zero' to 'nine'.\n    Valid choices are 'zero', 'one',\
    \ 'two', 'three', 'four', 'five', 'six', 'seven', 'eight' and 'nine'.\n    Return\
    \ the string with numbers sorted from smallest to largest\n    >>> sort_numbers(\"\
    three one five\")\n    \"one three five\"\n    \n*/\nstring sort_numbers(string\
    \ numbers) \n{\n    string[] words = numbers.split(\" \");\n    int[] nums = new\
    \ int[words.length];\n    foreach(int i, string word; words)\n    {\n        nums[i]\
    \ = word_to_num(word);\n    }\n    nums.sort();\n    foreach(int i, int num; nums)\n\
    \    {\n        words[i] = num_to_word(num);\n    }\n    return words.join(\"\
    \ \");\n}\nunittest\n{\n    alias candidate = sort_numbers;\n\n    assert(candidate(\"\
    \") == \"\");\n    assert(candidate(\"three\") == \"three\");\n    assert(candidate(\"\
    three five nine\") == \"three five nine\");\n    assert(candidate(\"five zero\
    \ four seven nine eight\") == \"zero four five seven eight nine\");\n    assert(candidate(\"\
    six five four three two one zero\") == \"zero one two three four five six\");\n\
    }\nvoid main(){}"
  status: SyntaxError
  stderr: 'b''/tmp/tmp89y9s26d.d(13): Error: no property `split` for type `string`\n/tmp/tmp89y9s26d.d(17):
    Error: undefined identifier `word_to_num`\n/tmp/tmp89y9s26d.d(19): Error: no property
    `sort` for type `int[]`\n/tmp/tmp89y9s26d.d(22): Error: undefined identifier `num_to_word`\n/tmp/tmp89y9s26d.d(24):
    Error: no property `join` for type `string[]`\nFailed: ["dmd", "-unittest", "-v",
    "-o-", "/tmp/tmp89y9s26d.d", "-I/tmp"]\n'''
  stdout: b''
- exit_code: 1
  program: "import std.typecons;\nimport std.math;\n/*\n Input is a space-delimited\
    \ string of numberals from 'zero' to 'nine'.\n    Valid choices are 'zero', 'one',\
    \ 'two', 'three', 'four', 'five', 'six', 'seven', 'eight' and 'nine'.\n    Return\
    \ the string with numbers sorted from smallest to largest\n    >>> sort_numbers(\"\
    three one five\")\n    \"one three five\"\n    \n*/\nstring sort_numbers(string\
    \ numbers) \n{\n    import std.algorithm.comparison : sort;\n    import std.conv\
    \ : to;\n    import std.range : map;\n    import std.string : split;\n    import\
    \ std.traits : isIntegral;\n    import std.typecons : tuple;\n    import std.typecons\
    \ : Tuple;\n    import std.typecons : tuple;\n    import std.typecons : Tuple;\n\
    \    import std.typecons : tuple;\n    import std.typecons : Tuple;\n    import\
    \ std.typecons : tuple;\n    import std.typecons : Tuple;\n    import std.typecons\
    \ : tuple;\n    import std.typecons : Tuple;\n    import std.typecons : tuple;\n\
    \    import std.typecons : Tuple;\n    import std.typecons : tuple;\n    import\
    \ std.typecons : Tuple;\n    import std.typecons : tuple;\n    import std.typecons\
    \ : Tuple;\n    import std.typecons : tuple;\n    import std.typecons : Tuple;\n\
    \    import std.typecons : tuple;\n    import std.typecons : Tuple;\n    import\
    \ std.typecons : tuple;\n    import std.typecons : Tuple;\n    import std.typecons\
    \ : tuple;\n    import std.typecons : Tuple;\n    import std.typecons : tuple;\n\
    \    import std.typecons : Tuple;\n    import std.typecons : tuple;\n    import\
    \ std.typecons : Tuple;\n    import std.typecons : tuple;\n    import std.typecons\
    \ : Tuple;\n    import std.typecons : tuple;\n    import std.typecons : Tuple;\n\
    \    import std.typecons : tuple;\n    import std.typecons : Tuple;\n    import\
    \ std.typecons : tuple;\n    import std.typecons : Tuple;\n    import std.typecons\
    \ : tuple;\n    import std.typecons : Tuple;\n    import std.typecons : tuple;\n\
    \    import std.typecons : Tuple;\n    import std.typecons : tuple;\n    import\
    \ std.typecons : Tuple;\n    import std.typecons : tuple;\n    import std.type\n\
    unittest\n{\n    alias candidate = sort_numbers;\n\n    assert(candidate(\"\"\
    ) == \"\");\n    assert(candidate(\"three\") == \"three\");\n    assert(candidate(\"\
    three five nine\") == \"three five nine\");\n    assert(candidate(\"five zero\
    \ four seven nine eight\") == \"zero four five seven eight nine\");\n    assert(candidate(\"\
    six five four three two one zero\") == \"zero one two three four five six\");\n\
    }\nvoid main(){}"
  status: SyntaxError
  stderr: 'b''/tmp/tmpzg6p2dke.d(62): Error: `;` expected\n/tmp/tmpzg6p2dke.d(72):
    Error: found `End of File` when expecting `}` following compound statement\nFailed:
    ["dmd", "-unittest", "-v", "-o-", "/tmp/tmpzg6p2dke.d", "-I/tmp"]\n'''
  stdout: b''
- exit_code: 1
  program: "import std.typecons;\nimport std.math;\n/*\n Input is a space-delimited\
    \ string of numberals from 'zero' to 'nine'.\n    Valid choices are 'zero', 'one',\
    \ 'two', 'three', 'four', 'five', 'six', 'seven', 'eight' and 'nine'.\n    Return\
    \ the string with numbers sorted from smallest to largest\n    >>> sort_numbers(\"\
    three one five\")\n    \"one three five\"\n    \n*/\nstring sort_numbers(string\
    \ numbers) \n{\n    string[] nums = numbers.split(\" \");\n    int[] nums_int\
    \ = new int[nums.length];\n    foreach(int i, string num; nums)\n    {\n     \
    \   nums_int[i] = num_to_int(num);\n    }\n    nums_int.sort();\n    foreach(int\
    \ i, int num; nums_int)\n    {\n        nums[i] = int_to_num(num);\n    }\n  \
    \  return nums.join(\" \");\n}\nunittest\n{\n    alias candidate = sort_numbers;\n\
    \n    assert(candidate(\"\") == \"\");\n    assert(candidate(\"three\") == \"\
    three\");\n    assert(candidate(\"three five nine\") == \"three five nine\");\n\
    \    assert(candidate(\"five zero four seven nine eight\") == \"zero four five\
    \ seven eight nine\");\n    assert(candidate(\"six five four three two one zero\"\
    ) == \"zero one two three four five six\");\n}\nvoid main(){}"
  status: SyntaxError
  stderr: 'b''/tmp/tmpkk9_6232.d(13): Error: no property `split` for type `string`\n/tmp/tmpkk9_6232.d(17):
    Error: undefined identifier `num_to_int`\n/tmp/tmpkk9_6232.d(19): Error: no property
    `sort` for type `int[]`\n/tmp/tmpkk9_6232.d(22): Error: undefined identifier `int_to_num`\n/tmp/tmpkk9_6232.d(24):
    Error: no property `join` for type `string[]`\nFailed: ["dmd", "-unittest", "-v",
    "-o-", "/tmp/tmpkk9_6232.d", "-I/tmp"]\n'''
  stdout: b''
- exit_code: 1
  program: "import std.typecons;\nimport std.math;\n/*\n Input is a space-delimited\
    \ string of numberals from 'zero' to 'nine'.\n    Valid choices are 'zero', 'one',\
    \ 'two', 'three', 'four', 'five', 'six', 'seven', 'eight' and 'nine'.\n    Return\
    \ the string with numbers sorted from smallest to largest\n    >>> sort_numbers(\"\
    three one five\")\n    \"one three five\"\n    \n*/\nstring sort_numbers(string\
    \ numbers) \n{\n    string[] nums = numbers.split(\" \");\n    int[] nums_int\
    \ = new int[nums.length];\n    foreach(i, num; nums)\n    {\n        nums_int[i]\
    \ = to!int(num);\n    }\n    sort(nums_int);\n    string result = \"\";\n    foreach(num;\
    \ nums_int)\n    {\n        result ~= to!string(num) ~ \" \";\n    }\n    return\
    \ result.stripRight();\n}\nunittest\n{\n    alias candidate = sort_numbers;\n\n\
    \    assert(candidate(\"\") == \"\");\n    assert(candidate(\"three\") == \"three\"\
    );\n    assert(candidate(\"three five nine\") == \"three five nine\");\n    assert(candidate(\"\
    five zero four seven nine eight\") == \"zero four five seven eight nine\");\n\
    \    assert(candidate(\"six five four three two one zero\") == \"zero one two\
    \ three four five six\");\n}\nvoid main(){}"
  status: SyntaxError
  stderr: 'b''/tmp/tmp66qlkckl.d(13): Error: no property `split` for type `string`\n/tmp/tmp66qlkckl.d(17):
    Error: template instance `to!int` template `to` is not defined, did you mean No?\n/tmp/tmp66qlkckl.d(19):
    Error: undefined identifier `sort`, did you mean function `sqrt`?\n/tmp/tmp66qlkckl.d(23):
    Error: template instance `to!string` template `to` is not defined, did you mean
    No?\n/tmp/tmp66qlkckl.d(25): Error: no property `stripRight` for type `string`\nFailed:
    ["dmd", "-unittest", "-v", "-o-", "/tmp/tmp66qlkckl.d", "-I/tmp"]\n'''
  stdout: b''
- exit_code: 1
  program: "import std.typecons;\nimport std.math;\n/*\n Input is a space-delimited\
    \ string of numberals from 'zero' to 'nine'.\n    Valid choices are 'zero', 'one',\
    \ 'two', 'three', 'four', 'five', 'six', 'seven', 'eight' and 'nine'.\n    Return\
    \ the string with numbers sorted from smallest to largest\n    >>> sort_numbers(\"\
    three one five\")\n    \"one three five\"\n    \n*/\nstring sort_numbers(string\
    \ numbers) \n{\n    string[] nums = numbers.split(\" \");\n    int[] nums_int\
    \ = new int[nums.length];\n    foreach(i, num; nums)\n    {\n        nums_int[i]\
    \ = to!int(num);\n    }\n    sort(nums_int);\n    string result = \"\";\n    foreach(i,\
    \ num; nums_int)\n    {\n        result ~= num.to!string ~ \" \";\n    }\n   \
    \ return result.stripRight();\n}\nunittest\n{\n    alias candidate = sort_numbers;\n\
    \n    assert(candidate(\"\") == \"\");\n    assert(candidate(\"three\") == \"\
    three\");\n    assert(candidate(\"three five nine\") == \"three five nine\");\n\
    \    assert(candidate(\"five zero four seven nine eight\") == \"zero four five\
    \ seven eight nine\");\n    assert(candidate(\"six five four three two one zero\"\
    ) == \"zero one two three four five six\");\n}\nvoid main(){}"
  status: SyntaxError
  stderr: 'b''/tmp/tmp9qtfh4bm.d(13): Error: no property `split` for type `string`\n/tmp/tmp9qtfh4bm.d(17):
    Error: template instance `to!int` template `to` is not defined, did you mean No?\n/tmp/tmp9qtfh4bm.d(19):
    Error: undefined identifier `sort`, did you mean function `sqrt`?\n/tmp/tmp9qtfh4bm.d(23):
    Error: no property `to` for type `int`\n/tmp/tmp9qtfh4bm.d(25): Error: no property
    `stripRight` for type `string`\nFailed: ["dmd", "-unittest", "-v", "-o-", "/tmp/tmp9qtfh4bm.d",
    "-I/tmp"]\n'''
  stdout: b''

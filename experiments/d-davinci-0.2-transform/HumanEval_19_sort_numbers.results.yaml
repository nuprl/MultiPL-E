language: d
name: HumanEval_19_sort_numbers
results:
- exit_code: 1
  program: "import std.typecons;\nimport std.math;\n/*\n Input is a space-delimited\
    \ string of numberals from 'zero' to 'nine'.\n    Valid choices are 'zero', 'one',\
    \ 'two', 'three', 'four', 'five', 'six', 'seven', 'eight' and 'nine'.\n    Return\
    \ the string with numbers sorted from smallest to largest\n    >>> sort_numbers(\"\
    three one five\")\n    \"one three five\"\n    \n*/\nstring sort_numbers(string\
    \ numbers) \n{\n    string[] nums = numbers.split(\" \");\n    int[] nums_int\
    \ = new int[nums.length];\n    int i = 0;\n    foreach(string num; nums)\n   \
    \ {\n        nums_int[i] = to!int(num);\n        i++;\n    }\n    sort(nums_int);\n\
    \    string result = \"\";\n    foreach(int num; nums_int)\n    {\n        result\
    \ ~= num.to!string ~ \" \";\n    }\n    return result;\n}\nunittest\n{\n    alias\
    \ candidate = sort_numbers;\n\n    assert(candidate(\"\") == \"\");\n    assert(candidate(\"\
    three\") == \"three\");\n    assert(candidate(\"three five nine\") == \"three\
    \ five nine\");\n    assert(candidate(\"five zero four seven nine eight\") ==\
    \ \"zero four five seven eight nine\");\n    assert(candidate(\"six five four\
    \ three two one zero\") == \"zero one two three four five six\");\n}\nvoid main(){}"
  status: SyntaxError
  stderr: '/tmp/tmp00tp8_0g.d(13): Error: no property `split` for type `string`

    /tmp/tmp00tp8_0g.d(18): Error: template instance `to!int` template `to` is not
    defined, did you mean No?

    /tmp/tmp00tp8_0g.d(21): Error: undefined identifier `sort`, did you mean function
    `sqrt`?

    /tmp/tmp00tp8_0g.d(25): Error: no property `to` for type `int`

    Failed: ["dmd", "-unittest", "-v", "-o-", "/tmp/tmp00tp8_0g.d", "-I/tmp"]

    '
  stdout: ''
  timestamp: 1660163090
- exit_code: 1
  program: "import std.typecons;\nimport std.math;\n/*\n Input is a space-delimited\
    \ string of numberals from 'zero' to 'nine'.\n    Valid choices are 'zero', 'one',\
    \ 'two', 'three', 'four', 'five', 'six', 'seven', 'eight' and 'nine'.\n    Return\
    \ the string with numbers sorted from smallest to largest\n    >>> sort_numbers(\"\
    three one five\")\n    \"one three five\"\n    \n*/\nstring sort_numbers(string\
    \ numbers) \n{\n    string[] nums = numbers.split(\" \");\n    int[] nums_int\
    \ = new int[nums.length];\n    foreach(i, num; nums)\n    {\n        switch(num)\n\
    \        {\n            case \"zero\":\n                nums_int[i] = 0;\n   \
    \             break;\n            case \"one\":\n                nums_int[i] =\
    \ 1;\n                break;\n            case \"two\":\n                nums_int[i]\
    \ = 2;\n                break;\n            case \"three\":\n                nums_int[i]\
    \ = 3;\n                break;\n            case \"four\":\n                nums_int[i]\
    \ = 4;\n                break;\n            case \"five\":\n                nums_int[i]\
    \ = 5;\n                break;\n            case \"six\":\n                nums_int[i]\
    \ = 6;\n                break;\n            case \"seven\":\n                nums_int[i]\
    \ = 7;\n                break;\n            case \"eight\":\n                nums_int[i]\
    \ = 8;\n                break;\n            case \"nine\":\n                nums_int[i]\
    \ = 9;\n                break;\n        }\n    }\n    nums_int.sort();\n    foreach(i,\
    \ num; nums_int)\n    {\n        switch(num)\n        {\n            case 0:\n\
    \                nums[i] = \"zero\";\n                break;\n            case\
    \ 1:\n                nums[i] = \"one\";\n                break;\n           \
    \ case 2:\n                nums[i] = \"two\";\n                break;\n      \
    \      case 3:\n                nums[i] = \"three\";\n                break;\n\
    \            case 4:\n                nums[i] = \"four\";\n                break;\n\
    \            case 5:\n                nums[i] = \"five\";\n                break;\n\
    \            case 6:\n                nums[i] = \"six\";\n                break;\n\
    \            case 7:\n                nums[i] = \"seven\";\n                break;\n\
    \            case 8:\n                nums[i] = \"eight\";\n                break;\n\
    \            case 9:\n                nums[i] = \"nine\nunittest\n{\n    alias\
    \ candidate = sort_numbers;\n\n    assert(candidate(\"\") == \"\");\n    assert(candidate(\"\
    three\") == \"three\");\n    assert(candidate(\"three five nine\") == \"three\
    \ five nine\");\n    assert(candidate(\"five zero four seven nine eight\") ==\
    \ \"zero four five seven eight nine\");\n    assert(candidate(\"six five four\
    \ three two one zero\") == \"zero one two three four five six\");\n}\nvoid main(){}"
  status: SyntaxError
  stderr: '/tmp/tmpq_hzlrvp.d(89): Error: Implicit string concatenation is deprecated,
    use "nine\x0aunittest\x0a{\x0a    alias candidate = sort_numbers;\x0a\x0a    assert(candidate("
    ~ ") == " instead

    /tmp/tmpq_hzlrvp.d(89): Error: Implicit string concatenation is deprecated, use
    ") == " ~ ");\x0a    assert(candidate(" instead

    /tmp/tmpq_hzlrvp.d(90): Error: found `three` when expecting `;` following statement

    /tmp/tmpq_hzlrvp.d(90): Error: found `three` when expecting `;` following statement

    /tmp/tmpq_hzlrvp.d(91): Error: found `three` when expecting `;` following statement

    /tmp/tmpq_hzlrvp.d(91): Error: found `nine` when expecting `;` following statement

    /tmp/tmpq_hzlrvp.d(91): Error: found `three` when expecting `;` following statement

    /tmp/tmpq_hzlrvp.d(91): Error: found `nine` when expecting `;` following statement

    /tmp/tmpq_hzlrvp.d(92): Error: found `five` when expecting `;` following statement

    /tmp/tmpq_hzlrvp.d(92): Error: found `four` when expecting `;` following statement

    /tmp/tmpq_hzlrvp.d(92): Error: found `'
  stdout: ''
  timestamp: 1660163090
- exit_code: 1
  program: "import std.typecons;\nimport std.math;\n/*\n Input is a space-delimited\
    \ string of numberals from 'zero' to 'nine'.\n    Valid choices are 'zero', 'one',\
    \ 'two', 'three', 'four', 'five', 'six', 'seven', 'eight' and 'nine'.\n    Return\
    \ the string with numbers sorted from smallest to largest\n    >>> sort_numbers(\"\
    three one five\")\n    \"one three five\"\n    \n*/\nstring sort_numbers(string\
    \ numbers) \n{\n    string[] nums = numbers.split(\" \");\n    int[] nums_int\
    \ = new int[nums.length];\n    foreach(i, n; nums)\n    {\n        nums_int[i]\
    \ = to!int(n);\n    }\n    sort(nums_int);\n    string result = \"\";\n    foreach(n;\
    \ nums_int)\n    {\n        result ~= to!string(n) ~ \" \";\n    }\n    return\
    \ result.stripRight;\n}\nunittest\n{\n    alias candidate = sort_numbers;\n\n\
    \    assert(candidate(\"\") == \"\");\n    assert(candidate(\"three\") == \"three\"\
    );\n    assert(candidate(\"three five nine\") == \"three five nine\");\n    assert(candidate(\"\
    five zero four seven nine eight\") == \"zero four five seven eight nine\");\n\
    \    assert(candidate(\"six five four three two one zero\") == \"zero one two\
    \ three four five six\");\n}\nvoid main(){}"
  status: SyntaxError
  stderr: '/tmp/tmp1ne6mukn.d(13): Error: no property `split` for type `string`

    /tmp/tmp1ne6mukn.d(17): Error: template instance `to!int` template `to` is not
    defined, did you mean No?

    /tmp/tmp1ne6mukn.d(19): Error: undefined identifier `sort`, did you mean function
    `sqrt`?

    /tmp/tmp1ne6mukn.d(23): Error: template instance `to!string` template `to` is
    not defined, did you mean No?

    /tmp/tmp1ne6mukn.d(25): Error: no property `stripRight` for type `string`

    Failed: ["dmd", "-unittest", "-v", "-o-", "/tmp/tmp1ne6mukn.d", "-I/tmp"]

    '
  stdout: ''
  timestamp: 1660163090
- exit_code: 1
  program: "import std.typecons;\nimport std.math;\n/*\n Input is a space-delimited\
    \ string of numberals from 'zero' to 'nine'.\n    Valid choices are 'zero', 'one',\
    \ 'two', 'three', 'four', 'five', 'six', 'seven', 'eight' and 'nine'.\n    Return\
    \ the string with numbers sorted from smallest to largest\n    >>> sort_numbers(\"\
    three one five\")\n    \"one three five\"\n    \n*/\nstring sort_numbers(string\
    \ numbers) \n{\n    string[] nums = numbers.split(\" \");\n    int[] nums_int\
    \ = new int[nums.length];\n    foreach(i, num; nums)\n    {\n        nums_int[i]\
    \ = to!int(num);\n    }\n    nums_int.sort;\n    foreach(i, num; nums_int)\n \
    \   {\n        nums[i] = to!string(num);\n    }\n    return nums.join(\" \");\n\
    }\nunittest\n{\n    alias candidate = sort_numbers;\n\n    assert(candidate(\"\
    \") == \"\");\n    assert(candidate(\"three\") == \"three\");\n    assert(candidate(\"\
    three five nine\") == \"three five nine\");\n    assert(candidate(\"five zero\
    \ four seven nine eight\") == \"zero four five seven eight nine\");\n    assert(candidate(\"\
    six five four three two one zero\") == \"zero one two three four five six\");\n\
    }\nvoid main(){}"
  status: SyntaxError
  stderr: '/tmp/tmpiq89aqc2.d(13): Error: no property `split` for type `string`

    /tmp/tmpiq89aqc2.d(17): Error: template instance `to!int` template `to` is not
    defined, did you mean No?

    /tmp/tmpiq89aqc2.d(19): Error: no property `sort` for type `int[]`

    /tmp/tmpiq89aqc2.d(22): Error: template instance `to!string` template `to` is
    not defined, did you mean No?

    /tmp/tmpiq89aqc2.d(24): Error: no property `join` for type `string[]`

    Failed: ["dmd", "-unittest", "-v", "-o-", "/tmp/tmpiq89aqc2.d", "-I/tmp"]

    '
  stdout: ''
  timestamp: 1660163090
- exit_code: 1
  program: "import std.typecons;\nimport std.math;\n/*\n Input is a space-delimited\
    \ string of numberals from 'zero' to 'nine'.\n    Valid choices are 'zero', 'one',\
    \ 'two', 'three', 'four', 'five', 'six', 'seven', 'eight' and 'nine'.\n    Return\
    \ the string with numbers sorted from smallest to largest\n    >>> sort_numbers(\"\
    three one five\")\n    \"one three five\"\n    \n*/\nstring sort_numbers(string\
    \ numbers) \n{\n    string[] nums = numbers.split(\" \");\n    int[] nums_int\
    \ = new int[nums.length];\n    foreach(i, num; nums)\n    {\n        nums_int[i]\
    \ = to!int(num);\n    }\n    sort(nums_int);\n    string result = \"\";\n    foreach(num;\
    \ nums_int)\n    {\n        result ~= to!string(num) ~ \" \";\n    }\n    return\
    \ result.trimRight();\n}\nunittest\n{\n    alias candidate = sort_numbers;\n\n\
    \    assert(candidate(\"\") == \"\");\n    assert(candidate(\"three\") == \"three\"\
    );\n    assert(candidate(\"three five nine\") == \"three five nine\");\n    assert(candidate(\"\
    five zero four seven nine eight\") == \"zero four five seven eight nine\");\n\
    \    assert(candidate(\"six five four three two one zero\") == \"zero one two\
    \ three four five six\");\n}\nvoid main(){}"
  status: SyntaxError
  stderr: '/tmp/tmp2urhl4pu.d(13): Error: no property `split` for type `string`

    /tmp/tmp2urhl4pu.d(17): Error: template instance `to!int` template `to` is not
    defined, did you mean No?

    /tmp/tmp2urhl4pu.d(19): Error: undefined identifier `sort`, did you mean function
    `sqrt`?

    /tmp/tmp2urhl4pu.d(23): Error: template instance `to!string` template `to` is
    not defined, did you mean No?

    /tmp/tmp2urhl4pu.d(25): Error: no property `trimRight` for type `string`

    Failed: ["dmd", "-unittest", "-v", "-o-", "/tmp/tmp2urhl4pu.d", "-I/tmp"]

    '
  stdout: ''
  timestamp: 1660163090
- exit_code: 1
  program: "import std.typecons;\nimport std.math;\n/*\n Input is a space-delimited\
    \ string of numberals from 'zero' to 'nine'.\n    Valid choices are 'zero', 'one',\
    \ 'two', 'three', 'four', 'five', 'six', 'seven', 'eight' and 'nine'.\n    Return\
    \ the string with numbers sorted from smallest to largest\n    >>> sort_numbers(\"\
    three one five\")\n    \"one three five\"\n    \n*/\nstring sort_numbers(string\
    \ numbers) \n{\n    string[] nums = numbers.split(\" \");\n    int[] nums_int\
    \ = new int[nums.length];\n    foreach(i, num; nums)\n    {\n        switch(num)\n\
    \        {\n            case \"zero\": nums_int[i] = 0; break;\n            case\
    \ \"one\": nums_int[i] = 1; break;\n            case \"two\": nums_int[i] = 2;\
    \ break;\n            case \"three\": nums_int[i] = 3; break;\n            case\
    \ \"four\": nums_int[i] = 4; break;\n            case \"five\": nums_int[i] =\
    \ 5; break;\n            case \"six\": nums_int[i] = 6; break;\n            case\
    \ \"seven\": nums_int[i] = 7; break;\n            case \"eight\": nums_int[i]\
    \ = 8; break;\n            case \"nine\": nums_int[i] = 9; break;\n        }\n\
    \    }\n    nums_int.sort;\n    foreach(i, num; nums_int)\n    {\n        switch(num)\n\
    \        {\n            case 0: nums[i] = \"zero\"; break;\n            case 1:\
    \ nums[i] = \"one\"; break;\n            case 2: nums[i] = \"two\"; break;\n \
    \           case 3: nums[i] = \"three\"; break;\n            case 4: nums[i] =\
    \ \"four\"; break;\n            case 5: nums[i] = \"five\"; break;\n         \
    \   case 6: nums[i] = \"six\"; break;\n            case 7: nums[i] = \"seven\"\
    ; break;\n            case 8: nums[i] = \"eight\"; break;\n            case 9:\
    \ nums[i] = \"nine\"; break;\n        }\n    }\n    return nums.join(\" \");\n\
    }\nunittest\n{\n    alias candidate = sort_numbers;\n\n    assert(candidate(\"\
    \") == \"\");\n    assert(candidate(\"three\") == \"three\");\n    assert(candidate(\"\
    three five nine\") == \"three five nine\");\n    assert(candidate(\"five zero\
    \ four seven nine eight\") == \"zero four five seven eight nine\");\n    assert(candidate(\"\
    six five four three two one zero\") == \"zero one two three four five six\");\n\
    }\nvoid main(){}"
  status: SyntaxError
  stderr: '/tmp/tmph_uyccm7.d(13): Error: no property `split` for type `string`

    /tmp/tmph_uyccm7.d(17): Error: `switch` statement without a `default`; use `final
    switch` or add `default: assert(0);` or add `default: break;`

    /tmp/tmph_uyccm7.d(31): Error: no property `sort` for type `int[]`

    /tmp/tmph_uyccm7.d(34): Error: `switch` statement without a `default`; use `final
    switch` or add `default: assert(0);` or add `default: break;`

    /tmp/tmph_uyccm7.d(48): Error: no property `join` for type `string[]`

    Failed: ["dmd", "-unittest", "-v", "-o-", "/tmp/tmph_uyccm7.d", "-I/tmp"]

    '
  stdout: ''
  timestamp: 1660163090
- exit_code: 1
  program: "import std.typecons;\nimport std.math;\n/*\n Input is a space-delimited\
    \ string of numberals from 'zero' to 'nine'.\n    Valid choices are 'zero', 'one',\
    \ 'two', 'three', 'four', 'five', 'six', 'seven', 'eight' and 'nine'.\n    Return\
    \ the string with numbers sorted from smallest to largest\n    >>> sort_numbers(\"\
    three one five\")\n    \"one three five\"\n    \n*/\nstring sort_numbers(string\
    \ numbers) \n{\n    string[] nums = numbers.split(\" \");\n    int[] nums_int\
    \ = new int[nums.length];\n    foreach(int i, string num; nums)\n    {\n     \
    \   switch(num)\n        {\n            case \"zero\":\n                nums_int[i]\
    \ = 0;\n                break;\n            case \"one\":\n                nums_int[i]\
    \ = 1;\n                break;\n            case \"two\":\n                nums_int[i]\
    \ = 2;\n                break;\n            case \"three\":\n                nums_int[i]\
    \ = 3;\n                break;\n            case \"four\":\n                nums_int[i]\
    \ = 4;\n                break;\n            case \"five\":\n                nums_int[i]\
    \ = 5;\n                break;\n            case \"six\":\n                nums_int[i]\
    \ = 6;\n                break;\n            case \"seven\":\n                nums_int[i]\
    \ = 7;\n                break;\n            case \"eight\":\n                nums_int[i]\
    \ = 8;\n                break;\n            case \"nine\":\n                nums_int[i]\
    \ = 9;\n                break;\n        }\n    }\n    nums_int.sort();\n    foreach(int\
    \ i, int num; nums_int)\n    {\n        switch(num)\n        {\n            case\
    \ 0:\n                nums[i] = \"zero\";\n                break;\n          \
    \  case 1:\n                nums[i] = \"one\";\n                break;\n     \
    \       case 2:\n                nums[i] = \"two\";\n                break;\n\
    \            case 3:\n                nums[i] = \"three\";\n                break;\n\
    \            case 4:\n                nums[i] = \"four\";\n                break;\n\
    \            case 5:\n                nums[i] = \"five\";\n                break;\n\
    \            case 6:\n                nums[i] = \"six\";\n                break;\n\
    \            case 7:\n                nums[i] = \"seven\";\n                break;\n\
    \            case 8:\n                nums[i] = \"eight\";\n                break;\n\
    \            case 9:\n                nums[i\nunittest\n{\n    alias candidate\
    \ = sort_numbers;\n\n    assert(candidate(\"\") == \"\");\n    assert(candidate(\"\
    three\") == \"three\");\n    assert(candidate(\"three five nine\") == \"three\
    \ five nine\");\n    assert(candidate(\"five zero four seven nine eight\") ==\
    \ \"zero four five seven eight nine\");\n    assert(candidate(\"six five four\
    \ three two one zero\") == \"zero one two three four five six\");\n}\nvoid main(){}"
  status: SyntaxError
  stderr: '/tmp/tmp_zvn61ob.d(85): Error: found `unittest` when expecting `,`

    /tmp/tmp_zvn61ob.d(95): Error: found `void` when expecting `,`

    /tmp/tmp_zvn61ob.d(95): Error: found `{` when expecting `,`

    /tmp/tmp_zvn61ob.d(95): Error: expression expected, not `}`

    /tmp/tmp_zvn61ob.d(95): Error: found `End of File` when expecting `,`

    /tmp/tmp_zvn61ob.d(95): Error: found `End of File` when expecting `]`

    /tmp/tmp_zvn61ob.d(95): Error: found `End of File` when expecting `;` following
    statement

    /tmp/tmp_zvn61ob.d(95): Error: found `End of File` when expecting `}` following
    compound statement

    /tmp/tmp_zvn61ob.d(95): Error: found `End of File` when expecting `}` following
    compound statement

    /tmp/tmp_zvn61ob.d(95): Error: found `End of File` when expecting `}` following
    compound statement

    Failed: ["dmd", "-unittest", "-v", "-o-", "/tmp/tmp_zvn61ob.d", "-I/tmp"]

    '
  stdout: ''
  timestamp: 1660163090
- exit_code: 1
  program: "import std.typecons;\nimport std.math;\n/*\n Input is a space-delimited\
    \ string of numberals from 'zero' to 'nine'.\n    Valid choices are 'zero', 'one',\
    \ 'two', 'three', 'four', 'five', 'six', 'seven', 'eight' and 'nine'.\n    Return\
    \ the string with numbers sorted from smallest to largest\n    >>> sort_numbers(\"\
    three one five\")\n    \"one three five\"\n    \n*/\nstring sort_numbers(string\
    \ numbers) \n{\n    string[] nums = numbers.split(\" \");\n    int[] nums_int\
    \ = new int[nums.length];\n    foreach(i, num; nums)\n    {\n        nums_int[i]\
    \ = num_to_int(num);\n    }\n    nums_int.sort;\n    foreach(i, num; nums_int)\n\
    \    {\n        nums[i] = int_to_num(num);\n    }\n    return nums.join(\" \"\
    );\n}\nunittest\n{\n    alias candidate = sort_numbers;\n\n    assert(candidate(\"\
    \") == \"\");\n    assert(candidate(\"three\") == \"three\");\n    assert(candidate(\"\
    three five nine\") == \"three five nine\");\n    assert(candidate(\"five zero\
    \ four seven nine eight\") == \"zero four five seven eight nine\");\n    assert(candidate(\"\
    six five four three two one zero\") == \"zero one two three four five six\");\n\
    }\nvoid main(){}"
  status: SyntaxError
  stderr: '/tmp/tmp7jfw0jvs.d(13): Error: no property `split` for type `string`

    /tmp/tmp7jfw0jvs.d(17): Error: undefined identifier `num_to_int`

    /tmp/tmp7jfw0jvs.d(19): Error: no property `sort` for type `int[]`

    /tmp/tmp7jfw0jvs.d(22): Error: undefined identifier `int_to_num`

    /tmp/tmp7jfw0jvs.d(24): Error: no property `join` for type `string[]`

    Failed: ["dmd", "-unittest", "-v", "-o-", "/tmp/tmp7jfw0jvs.d", "-I/tmp"]

    '
  stdout: ''
  timestamp: 1660163090
- exit_code: 1
  program: "import std.typecons;\nimport std.math;\n/*\n Input is a space-delimited\
    \ string of numberals from 'zero' to 'nine'.\n    Valid choices are 'zero', 'one',\
    \ 'two', 'three', 'four', 'five', 'six', 'seven', 'eight' and 'nine'.\n    Return\
    \ the string with numbers sorted from smallest to largest\n    >>> sort_numbers(\"\
    three one five\")\n    \"one three five\"\n    \n*/\nstring sort_numbers(string\
    \ numbers) \n{\n    string[] nums = numbers.split(\" \");\n    int[] nums_int\
    \ = new int[nums.length];\n    foreach(int i, string num; nums)\n    {\n     \
    \   nums_int[i] = num_to_int(num);\n    }\n    sort(nums_int);\n    string result\
    \ = \"\";\n    foreach(int i, int num; nums_int)\n    {\n        result ~= int_to_num(num)\
    \ ~ \" \";\n    }\n    return result.stripRight();\n}\nunittest\n{\n    alias\
    \ candidate = sort_numbers;\n\n    assert(candidate(\"\") == \"\");\n    assert(candidate(\"\
    three\") == \"three\");\n    assert(candidate(\"three five nine\") == \"three\
    \ five nine\");\n    assert(candidate(\"five zero four seven nine eight\") ==\
    \ \"zero four five seven eight nine\");\n    assert(candidate(\"six five four\
    \ three two one zero\") == \"zero one two three four five six\");\n}\nvoid main(){}"
  status: SyntaxError
  stderr: '/tmp/tmpj4zk37s2.d(13): Error: no property `split` for type `string`

    /tmp/tmpj4zk37s2.d(17): Error: undefined identifier `num_to_int`

    /tmp/tmpj4zk37s2.d(19): Error: undefined identifier `sort`, did you mean function
    `sqrt`?

    /tmp/tmpj4zk37s2.d(23): Error: undefined identifier `int_to_num`

    /tmp/tmpj4zk37s2.d(25): Error: no property `stripRight` for type `string`

    Failed: ["dmd", "-unittest", "-v", "-o-", "/tmp/tmpj4zk37s2.d", "-I/tmp"]

    '
  stdout: ''
  timestamp: 1660163090
- exit_code: 1
  program: "import std.typecons;\nimport std.math;\n/*\n Input is a space-delimited\
    \ string of numberals from 'zero' to 'nine'.\n    Valid choices are 'zero', 'one',\
    \ 'two', 'three', 'four', 'five', 'six', 'seven', 'eight' and 'nine'.\n    Return\
    \ the string with numbers sorted from smallest to largest\n    >>> sort_numbers(\"\
    three one five\")\n    \"one three five\"\n    \n*/\nstring sort_numbers(string\
    \ numbers) \n{\n    string[] nums = numbers.split(\" \");\n    int[] nums_int\
    \ = new int[nums.length];\n    for (int i = 0; i < nums.length; i++)\n    {\n\
    \        nums_int[i] = to!int(nums[i]);\n    }\n    sort(nums_int);\n    string\
    \ result = \"\";\n    foreach (int i; nums_int)\n    {\n        result ~= to!string(i)\
    \ ~ \" \";\n    }\n    return result.trimRight();\n}\nunittest\n{\n    alias candidate\
    \ = sort_numbers;\n\n    assert(candidate(\"\") == \"\");\n    assert(candidate(\"\
    three\") == \"three\");\n    assert(candidate(\"three five nine\") == \"three\
    \ five nine\");\n    assert(candidate(\"five zero four seven nine eight\") ==\
    \ \"zero four five seven eight nine\");\n    assert(candidate(\"six five four\
    \ three two one zero\") == \"zero one two three four five six\");\n}\nvoid main(){}"
  status: SyntaxError
  stderr: '/tmp/tmp13ogl0s6.d(13): Error: no property `split` for type `string`

    /tmp/tmp13ogl0s6.d(17): Error: template instance `to!int` template `to` is not
    defined, did you mean No?

    /tmp/tmp13ogl0s6.d(19): Error: undefined identifier `sort`, did you mean function
    `sqrt`?

    /tmp/tmp13ogl0s6.d(23): Error: template instance `to!string` template `to` is
    not defined, did you mean No?

    /tmp/tmp13ogl0s6.d(25): Error: no property `trimRight` for type `string`

    Failed: ["dmd", "-unittest", "-v", "-o-", "/tmp/tmp13ogl0s6.d", "-I/tmp"]

    '
  stdout: ''
  timestamp: 1660163090
- exit_code: 1
  program: "import std.typecons;\nimport std.math;\n/*\n Input is a space-delimited\
    \ string of numberals from 'zero' to 'nine'.\n    Valid choices are 'zero', 'one',\
    \ 'two', 'three', 'four', 'five', 'six', 'seven', 'eight' and 'nine'.\n    Return\
    \ the string with numbers sorted from smallest to largest\n    >>> sort_numbers(\"\
    three one five\")\n    \"one three five\"\n    \n*/\nstring sort_numbers(string\
    \ numbers) \n{\n    import std.algorithm.comparison : sort;\n    import std.conv\
    \ : to;\n    import std.range : map;\n    import std.array : array;\n    import\
    \ std.string : split;\n    import std.typecons : tuple;\n    import std.math :\
    \ min;\n    import std.stdio : writeln;\n    import std.traits : isIntegral;\n\
    \    import std.typecons : tuple;\n    import std.algorithm : sort;\n    import\
    \ std.range : map;\n    import std.array : array;\n    import std.string : split;\n\
    \    import std.typecons : tuple;\n    import std.math : min;\n    import std.stdio\
    \ : writeln;\n    import std.traits : isIntegral;\n    import std.typecons : tuple;\n\
    \    import std.algorithm : sort;\n    import std.range : map;\n    import std.array\
    \ : array;\n    import std.string : split;\n    import std.typecons : tuple;\n\
    \    import std.math : min;\n    import std.stdio : writeln;\n    import std.traits\
    \ : isIntegral;\n    import std.typecons : tuple;\n    import std.algorithm :\
    \ sort;\n    import std.range : map;\n    import std.array : array;\n    import\
    \ std.string : split;\n    import std.typecons : tuple;\n    import std.math :\
    \ min;\n    import std.stdio : writeln;\n    import std.traits : isIntegral;\n\
    \    import std.typecons : tuple;\n    import std.algorithm : sort;\n    import\
    \ std.range : map;\n    import std.array : array;\n    import std.string : split;\n\
    \    import std.typecons : tuple;\n    import std.math : min;\n    import std.stdio\
    \ : writeln;\n    import std.traits : isIntegral;\n    import std.typecons : tuple;\n\
    \    import std.algorithm : sort;\n    import std.range : map;\n    import std.array\
    \ : array;\n    import std.string : split;\n    import std.typecons : tuple;\n\
    \    import std.\nunittest\n{\n    alias candidate = sort_numbers;\n\n    assert(candidate(\"\
    \") == \"\");\n    assert(candidate(\"three\") == \"three\");\n    assert(candidate(\"\
    three five nine\") == \"three five nine\");\n    assert(candidate(\"five zero\
    \ four seven nine eight\") == \"zero four five seven eight nine\");\n    assert(candidate(\"\
    six five four three two one zero\") == \"zero one two three four five six\");\n\
    }\nvoid main(){}"
  status: SyntaxError
  stderr: '/tmp/tmpu0lc0kcd.d(65): Error: identifier expected following `package`

    /tmp/tmpu0lc0kcd.d(65): Error: `;` expected

    /tmp/tmpu0lc0kcd.d(75): Error: found `End of File` when expecting `}` following
    compound statement

    Failed: ["dmd", "-unittest", "-v", "-o-", "/tmp/tmpu0lc0kcd.d", "-I/tmp"]

    '
  stdout: ''
  timestamp: 1660163090
- exit_code: 1
  program: "import std.typecons;\nimport std.math;\n/*\n Input is a space-delimited\
    \ string of numberals from 'zero' to 'nine'.\n    Valid choices are 'zero', 'one',\
    \ 'two', 'three', 'four', 'five', 'six', 'seven', 'eight' and 'nine'.\n    Return\
    \ the string with numbers sorted from smallest to largest\n    >>> sort_numbers(\"\
    three one five\")\n    \"one three five\"\n    \n*/\nstring sort_numbers(string\
    \ numbers) \n{\n    string[] nums = numbers.split(\" \");\n    int[] num_ints\
    \ = new int[nums.length];\n    foreach(i, num; nums)\n    {\n        switch(num)\n\
    \        {\n            case \"zero\": num_ints[i] = 0; break;\n            case\
    \ \"one\": num_ints[i] = 1; break;\n            case \"two\": num_ints[i] = 2;\
    \ break;\n            case \"three\": num_ints[i] = 3; break;\n            case\
    \ \"four\": num_ints[i] = 4; break;\n            case \"five\": num_ints[i] =\
    \ 5; break;\n            case \"six\": num_ints[i] = 6; break;\n            case\
    \ \"seven\": num_ints[i] = 7; break;\n            case \"eight\": num_ints[i]\
    \ = 8; break;\n            case \"nine\": num_ints[i] = 9; break;\n        }\n\
    \    }\n    num_ints.sort();\n    foreach(i, num; num_ints)\n    {\n        switch(num)\n\
    \        {\n            case 0: nums[i] = \"zero\"; break;\n            case 1:\
    \ nums[i] = \"one\"; break;\n            case 2: nums[i] = \"two\"; break;\n \
    \           case 3: nums[i] = \"three\"; break;\n            case 4: nums[i] =\
    \ \"four\"; break;\n            case 5: nums[i] = \"five\"; break;\n         \
    \   case 6: nums[i] = \"six\"; break;\n            case 7: nums[i] = \"seven\"\
    ; break;\n            case 8: nums[i] = \"eight\"; break;\n            case 9:\
    \ nums[i] = \"nine\"; break;\n        }\n    }\n    return nums.join(\" \");\n\
    }\nunittest\n{\n    alias candidate = sort_numbers;\n\n    assert(candidate(\"\
    \") == \"\");\n    assert(candidate(\"three\") == \"three\");\n    assert(candidate(\"\
    three five nine\") == \"three five nine\");\n    assert(candidate(\"five zero\
    \ four seven nine eight\") == \"zero four five seven eight nine\");\n    assert(candidate(\"\
    six five four three two one zero\") == \"zero one two three four five six\");\n\
    }\nvoid main(){}"
  status: SyntaxError
  stderr: '/tmp/tmpinglchqr.d(13): Error: no property `split` for type `string`

    /tmp/tmpinglchqr.d(17): Error: `switch` statement without a `default`; use `final
    switch` or add `default: assert(0);` or add `default: break;`

    /tmp/tmpinglchqr.d(31): Error: no property `sort` for type `int[]`

    /tmp/tmpinglchqr.d(34): Error: `switch` statement without a `default`; use `final
    switch` or add `default: assert(0);` or add `default: break;`

    /tmp/tmpinglchqr.d(48): Error: no property `join` for type `string[]`

    Failed: ["dmd", "-unittest", "-v", "-o-", "/tmp/tmpinglchqr.d", "-I/tmp"]

    '
  stdout: ''
  timestamp: 1660163090
- exit_code: 1
  program: "import std.typecons;\nimport std.math;\n/*\n Input is a space-delimited\
    \ string of numberals from 'zero' to 'nine'.\n    Valid choices are 'zero', 'one',\
    \ 'two', 'three', 'four', 'five', 'six', 'seven', 'eight' and 'nine'.\n    Return\
    \ the string with numbers sorted from smallest to largest\n    >>> sort_numbers(\"\
    three one five\")\n    \"one three five\"\n    \n*/\nstring sort_numbers(string\
    \ numbers) \n{\n    string[] nums = numbers.split(\" \");\n    int[] nums_int\
    \ = new int[nums.length];\n    foreach(i, num; nums)\n    {\n        switch(num)\n\
    \        {\n            case \"zero\":\n                nums_int[i] = 0;\n   \
    \             break;\n            case \"one\":\n                nums_int[i] =\
    \ 1;\n                break;\n            case \"two\":\n                nums_int[i]\
    \ = 2;\n                break;\n            case \"three\":\n                nums_int[i]\
    \ = 3;\n                break;\n            case \"four\":\n                nums_int[i]\
    \ = 4;\n                break;\n            case \"five\":\n                nums_int[i]\
    \ = 5;\n                break;\n            case \"six\":\n                nums_int[i]\
    \ = 6;\n                break;\n            case \"seven\":\n                nums_int[i]\
    \ = 7;\n                break;\n            case \"eight\":\n                nums_int[i]\
    \ = 8;\n                break;\n            case \"nine\":\n                nums_int[i]\
    \ = 9;\n                break;\n        }\n    }\n    nums_int.sort();\n    foreach(i,\
    \ num; nums_int)\n    {\n        switch(num)\n        {\n            case 0:\n\
    \                nums[i] = \"zero\";\n                break;\n            case\
    \ 1:\n                nums[i] = \"one\";\n                break;\n           \
    \ case 2:\n                nums[i] = \"two\";\n                break;\n      \
    \      case 3:\n                nums[i] = \"three\";\n                break;\n\
    \            case 4:\n                nums[i] = \"four\";\n                break;\n\
    \            case 5:\n                nums[i] = \"five\";\n                break;\n\
    \            case 6:\n                nums[i] = \"six\";\n                break;\n\
    \            case 7:\n                nums[i] = \"seven\";\n                break;\n\
    \            case 8:\n                nums[i] = \"eight\";\n                break;\n\
    \            case 9:\n                nums[i] = \"nine\nunittest\n{\n    alias\
    \ candidate = sort_numbers;\n\n    assert(candidate(\"\") == \"\");\n    assert(candidate(\"\
    three\") == \"three\");\n    assert(candidate(\"three five nine\") == \"three\
    \ five nine\");\n    assert(candidate(\"five zero four seven nine eight\") ==\
    \ \"zero four five seven eight nine\");\n    assert(candidate(\"six five four\
    \ three two one zero\") == \"zero one two three four five six\");\n}\nvoid main(){}"
  status: SyntaxError
  stderr: '/tmp/tmpq_hzlrvp.d(89): Error: Implicit string concatenation is deprecated,
    use "nine\x0aunittest\x0a{\x0a    alias candidate = sort_numbers;\x0a\x0a    assert(candidate("
    ~ ") == " instead

    /tmp/tmpq_hzlrvp.d(89): Error: Implicit string concatenation is deprecated, use
    ") == " ~ ");\x0a    assert(candidate(" instead

    /tmp/tmpq_hzlrvp.d(90): Error: found `three` when expecting `;` following statement

    /tmp/tmpq_hzlrvp.d(90): Error: found `three` when expecting `;` following statement

    /tmp/tmpq_hzlrvp.d(91): Error: found `three` when expecting `;` following statement

    /tmp/tmpq_hzlrvp.d(91): Error: found `nine` when expecting `;` following statement

    /tmp/tmpq_hzlrvp.d(91): Error: found `three` when expecting `;` following statement

    /tmp/tmpq_hzlrvp.d(91): Error: found `nine` when expecting `;` following statement

    /tmp/tmpq_hzlrvp.d(92): Error: found `five` when expecting `;` following statement

    /tmp/tmpq_hzlrvp.d(92): Error: found `four` when expecting `;` following statement

    /tmp/tmpq_hzlrvp.d(92): Error: found `'
  stdout: ''
  timestamp: 1660163090
- exit_code: 1
  program: "import std.typecons;\nimport std.math;\n/*\n Input is a space-delimited\
    \ string of numberals from 'zero' to 'nine'.\n    Valid choices are 'zero', 'one',\
    \ 'two', 'three', 'four', 'five', 'six', 'seven', 'eight' and 'nine'.\n    Return\
    \ the string with numbers sorted from smallest to largest\n    >>> sort_numbers(\"\
    three one five\")\n    \"one three five\"\n    \n*/\nstring sort_numbers(string\
    \ numbers) \n{\n    string[] nums = numbers.split(\" \");\n    int[] nums_int\
    \ = new int[nums.length];\n    foreach(i, num; nums)\n    {\n        switch(num)\n\
    \        {\n            case \"zero\":\n                nums_int[i] = 0;\n   \
    \             break;\n            case \"one\":\n                nums_int[i] =\
    \ 1;\n                break;\n            case \"two\":\n                nums_int[i]\
    \ = 2;\n                break;\n            case \"three\":\n                nums_int[i]\
    \ = 3;\n                break;\n            case \"four\":\n                nums_int[i]\
    \ = 4;\n                break;\n            case \"five\":\n                nums_int[i]\
    \ = 5;\n                break;\n            case \"six\":\n                nums_int[i]\
    \ = 6;\n                break;\n            case \"seven\":\n                nums_int[i]\
    \ = 7;\n                break;\n            case \"eight\":\n                nums_int[i]\
    \ = 8;\n                break;\n            case \"nine\":\n                nums_int[i]\
    \ = 9;\n                break;\n        }\n    }\n    nums_int.sort;\n    foreach(i,\
    \ num; nums_int)\n    {\n        switch(num)\n        {\n            case 0:\n\
    \                nums[i] = \"zero\";\n                break;\n            case\
    \ 1:\n                nums[i] = \"one\";\n                break;\n           \
    \ case 2:\n                nums[i] = \"two\";\n                break;\n      \
    \      case 3:\n                nums[i] = \"three\";\n                break;\n\
    \            case 4:\n                nums[i] = \"four\";\n                break;\n\
    \            case 5:\n                nums[i] = \"five\";\n                break;\n\
    \            case 6:\n                nums[i] = \"six\";\n                break;\n\
    \            case 7:\n                nums[i] = \"seven\";\n                break;\n\
    \            case 8:\n                nums[i] = \"eight\";\n                break;\n\
    \            case 9:\n                nums[i] = \"nine\nunittest\n{\n    alias\
    \ candidate = sort_numbers;\n\n    assert(candidate(\"\") == \"\");\n    assert(candidate(\"\
    three\") == \"three\");\n    assert(candidate(\"three five nine\") == \"three\
    \ five nine\");\n    assert(candidate(\"five zero four seven nine eight\") ==\
    \ \"zero four five seven eight nine\");\n    assert(candidate(\"six five four\
    \ three two one zero\") == \"zero one two three four five six\");\n}\nvoid main(){}"
  status: SyntaxError
  stderr: '/tmp/tmpc1u9yce3.d(89): Error: Implicit string concatenation is deprecated,
    use "nine\x0aunittest\x0a{\x0a    alias candidate = sort_numbers;\x0a\x0a    assert(candidate("
    ~ ") == " instead

    /tmp/tmpc1u9yce3.d(89): Error: Implicit string concatenation is deprecated, use
    ") == " ~ ");\x0a    assert(candidate(" instead

    /tmp/tmpc1u9yce3.d(90): Error: found `three` when expecting `;` following statement

    /tmp/tmpc1u9yce3.d(90): Error: found `three` when expecting `;` following statement

    /tmp/tmpc1u9yce3.d(91): Error: found `three` when expecting `;` following statement

    /tmp/tmpc1u9yce3.d(91): Error: found `nine` when expecting `;` following statement

    /tmp/tmpc1u9yce3.d(91): Error: found `three` when expecting `;` following statement

    /tmp/tmpc1u9yce3.d(91): Error: found `nine` when expecting `;` following statement

    /tmp/tmpc1u9yce3.d(92): Error: found `five` when expecting `;` following statement

    /tmp/tmpc1u9yce3.d(92): Error: found `four` when expecting `;` following statement

    /tmp/tmpc1u9yce3.d(92): Error: found `'
  stdout: ''
  timestamp: 1660163090
- exit_code: 1
  program: "import std.typecons;\nimport std.math;\n/*\n Input is a space-delimited\
    \ string of numberals from 'zero' to 'nine'.\n    Valid choices are 'zero', 'one',\
    \ 'two', 'three', 'four', 'five', 'six', 'seven', 'eight' and 'nine'.\n    Return\
    \ the string with numbers sorted from smallest to largest\n    >>> sort_numbers(\"\
    three one five\")\n    \"one three five\"\n    \n*/\nstring sort_numbers(string\
    \ numbers) \n{\n    string[] nums = numbers.split(\" \");\n    string[] nums_sorted\
    \ = nums.dup;\n    nums_sorted.sort;\n    string ret = \"\";\n    foreach(string\
    \ num; nums_sorted)\n    {\n        ret ~= num ~ \" \";\n    }\n    return ret.stripRight;\n\
    }\nunittest\n{\n    alias candidate = sort_numbers;\n\n    assert(candidate(\"\
    \") == \"\");\n    assert(candidate(\"three\") == \"three\");\n    assert(candidate(\"\
    three five nine\") == \"three five nine\");\n    assert(candidate(\"five zero\
    \ four seven nine eight\") == \"zero four five seven eight nine\");\n    assert(candidate(\"\
    six five four three two one zero\") == \"zero one two three four five six\");\n\
    }\nvoid main(){}"
  status: SyntaxError
  stderr: '/tmp/tmpp3j3hqro.d(13): Error: no property `split` for type `string`

    /tmp/tmpp3j3hqro.d(15): Error: no property `sort` for type `string[]`

    /tmp/tmpp3j3hqro.d(21): Error: no property `stripRight` for type `string`

    Failed: ["dmd", "-unittest", "-v", "-o-", "/tmp/tmpp3j3hqro.d", "-I/tmp"]

    '
  stdout: ''
  timestamp: 1660163090
- exit_code: 1
  program: "import std.typecons;\nimport std.math;\n/*\n Input is a space-delimited\
    \ string of numberals from 'zero' to 'nine'.\n    Valid choices are 'zero', 'one',\
    \ 'two', 'three', 'four', 'five', 'six', 'seven', 'eight' and 'nine'.\n    Return\
    \ the string with numbers sorted from smallest to largest\n    >>> sort_numbers(\"\
    three one five\")\n    \"one three five\"\n    \n*/\nstring sort_numbers(string\
    \ numbers) \n{\n    string[] words = numbers.split(\" \");\n    int[] nums = new\
    \ int[words.length];\n    foreach(int i, string word; words)\n    {\n        nums[i]\
    \ = word_to_num(word);\n    }\n    nums.sort();\n    foreach(int i, int num; nums)\n\
    \    {\n        words[i] = num_to_word(num);\n    }\n    return words.join(\"\
    \ \");\n}\nunittest\n{\n    alias candidate = sort_numbers;\n\n    assert(candidate(\"\
    \") == \"\");\n    assert(candidate(\"three\") == \"three\");\n    assert(candidate(\"\
    three five nine\") == \"three five nine\");\n    assert(candidate(\"five zero\
    \ four seven nine eight\") == \"zero four five seven eight nine\");\n    assert(candidate(\"\
    six five four three two one zero\") == \"zero one two three four five six\");\n\
    }\nvoid main(){}"
  status: SyntaxError
  stderr: '/tmp/tmpctubroxg.d(13): Error: no property `split` for type `string`

    /tmp/tmpctubroxg.d(17): Error: undefined identifier `word_to_num`

    /tmp/tmpctubroxg.d(19): Error: no property `sort` for type `int[]`

    /tmp/tmpctubroxg.d(22): Error: undefined identifier `num_to_word`

    /tmp/tmpctubroxg.d(24): Error: no property `join` for type `string[]`

    Failed: ["dmd", "-unittest", "-v", "-o-", "/tmp/tmpctubroxg.d", "-I/tmp"]

    '
  stdout: ''
  timestamp: 1660163090
- exit_code: 1
  program: "import std.typecons;\nimport std.math;\n/*\n Input is a space-delimited\
    \ string of numberals from 'zero' to 'nine'.\n    Valid choices are 'zero', 'one',\
    \ 'two', 'three', 'four', 'five', 'six', 'seven', 'eight' and 'nine'.\n    Return\
    \ the string with numbers sorted from smallest to largest\n    >>> sort_numbers(\"\
    three one five\")\n    \"one three five\"\n    \n*/\nstring sort_numbers(string\
    \ numbers) \n{\n    import std.algorithm.comparison : sort;\n    import std.conv\
    \ : to;\n    import std.range : map;\n    import std.string : split;\n    import\
    \ std.traits : isIntegral;\n    import std.typecons : tuple;\n    import std.typecons\
    \ : Tuple;\n    import std.typecons : tuple;\n    import std.typecons : Tuple;\n\
    \    import std.typecons : tuple;\n    import std.typecons : Tuple;\n    import\
    \ std.typecons : tuple;\n    import std.typecons : Tuple;\n    import std.typecons\
    \ : tuple;\n    import std.typecons : Tuple;\n    import std.typecons : tuple;\n\
    \    import std.typecons : Tuple;\n    import std.typecons : tuple;\n    import\
    \ std.typecons : Tuple;\n    import std.typecons : tuple;\n    import std.typecons\
    \ : Tuple;\n    import std.typecons : tuple;\n    import std.typecons : Tuple;\n\
    \    import std.typecons : tuple;\n    import std.typecons : Tuple;\n    import\
    \ std.typecons : tuple;\n    import std.typecons : Tuple;\n    import std.typecons\
    \ : tuple;\n    import std.typecons : Tuple;\n    import std.typecons : tuple;\n\
    \    import std.typecons : Tuple;\n    import std.typecons : tuple;\n    import\
    \ std.typecons : Tuple;\n    import std.typecons : tuple;\n    import std.typecons\
    \ : Tuple;\n    import std.typecons : tuple;\n    import std.typecons : Tuple;\n\
    \    import std.typecons : tuple;\n    import std.typecons : Tuple;\n    import\
    \ std.typecons : tuple;\n    import std.typecons : Tuple;\n    import std.typecons\
    \ : tuple;\n    import std.typecons : Tuple;\n    import std.typecons : tuple;\n\
    \    import std.typecons : Tuple;\n    import std.typecons : tuple;\n    import\
    \ std.typecons : Tuple;\n    import std.typecons : tuple;\n    import std.type\n\
    unittest\n{\n    alias candidate = sort_numbers;\n\n    assert(candidate(\"\"\
    ) == \"\");\n    assert(candidate(\"three\") == \"three\");\n    assert(candidate(\"\
    three five nine\") == \"three five nine\");\n    assert(candidate(\"five zero\
    \ four seven nine eight\") == \"zero four five seven eight nine\");\n    assert(candidate(\"\
    six five four three two one zero\") == \"zero one two three four five six\");\n\
    }\nvoid main(){}"
  status: SyntaxError
  stderr: '/tmp/tmpe_cafdtu.d(62): Error: `;` expected

    /tmp/tmpe_cafdtu.d(72): Error: found `End of File` when expecting `}` following
    compound statement

    Failed: ["dmd", "-unittest", "-v", "-o-", "/tmp/tmpe_cafdtu.d", "-I/tmp"]

    '
  stdout: ''
  timestamp: 1660163090
- exit_code: 1
  program: "import std.typecons;\nimport std.math;\n/*\n Input is a space-delimited\
    \ string of numberals from 'zero' to 'nine'.\n    Valid choices are 'zero', 'one',\
    \ 'two', 'three', 'four', 'five', 'six', 'seven', 'eight' and 'nine'.\n    Return\
    \ the string with numbers sorted from smallest to largest\n    >>> sort_numbers(\"\
    three one five\")\n    \"one three five\"\n    \n*/\nstring sort_numbers(string\
    \ numbers) \n{\n    string[] nums = numbers.split(\" \");\n    int[] nums_int\
    \ = new int[nums.length];\n    foreach(int i, string num; nums)\n    {\n     \
    \   nums_int[i] = num_to_int(num);\n    }\n    nums_int.sort();\n    foreach(int\
    \ i, int num; nums_int)\n    {\n        nums[i] = int_to_num(num);\n    }\n  \
    \  return nums.join(\" \");\n}\nunittest\n{\n    alias candidate = sort_numbers;\n\
    \n    assert(candidate(\"\") == \"\");\n    assert(candidate(\"three\") == \"\
    three\");\n    assert(candidate(\"three five nine\") == \"three five nine\");\n\
    \    assert(candidate(\"five zero four seven nine eight\") == \"zero four five\
    \ seven eight nine\");\n    assert(candidate(\"six five four three two one zero\"\
    ) == \"zero one two three four five six\");\n}\nvoid main(){}"
  status: SyntaxError
  stderr: '/tmp/tmpbo5uhcxh.d(13): Error: no property `split` for type `string`

    /tmp/tmpbo5uhcxh.d(17): Error: undefined identifier `num_to_int`

    /tmp/tmpbo5uhcxh.d(19): Error: no property `sort` for type `int[]`

    /tmp/tmpbo5uhcxh.d(22): Error: undefined identifier `int_to_num`

    /tmp/tmpbo5uhcxh.d(24): Error: no property `join` for type `string[]`

    Failed: ["dmd", "-unittest", "-v", "-o-", "/tmp/tmpbo5uhcxh.d", "-I/tmp"]

    '
  stdout: ''
  timestamp: 1660163090
- exit_code: 1
  program: "import std.typecons;\nimport std.math;\n/*\n Input is a space-delimited\
    \ string of numberals from 'zero' to 'nine'.\n    Valid choices are 'zero', 'one',\
    \ 'two', 'three', 'four', 'five', 'six', 'seven', 'eight' and 'nine'.\n    Return\
    \ the string with numbers sorted from smallest to largest\n    >>> sort_numbers(\"\
    three one five\")\n    \"one three five\"\n    \n*/\nstring sort_numbers(string\
    \ numbers) \n{\n    string[] nums = numbers.split(\" \");\n    int[] nums_int\
    \ = new int[nums.length];\n    foreach(i, num; nums)\n    {\n        nums_int[i]\
    \ = to!int(num);\n    }\n    sort(nums_int);\n    string result = \"\";\n    foreach(num;\
    \ nums_int)\n    {\n        result ~= to!string(num) ~ \" \";\n    }\n    return\
    \ result.stripRight();\n}\nunittest\n{\n    alias candidate = sort_numbers;\n\n\
    \    assert(candidate(\"\") == \"\");\n    assert(candidate(\"three\") == \"three\"\
    );\n    assert(candidate(\"three five nine\") == \"three five nine\");\n    assert(candidate(\"\
    five zero four seven nine eight\") == \"zero four five seven eight nine\");\n\
    \    assert(candidate(\"six five four three two one zero\") == \"zero one two\
    \ three four five six\");\n}\nvoid main(){}"
  status: SyntaxError
  stderr: '/tmp/tmpuj2nx7js.d(13): Error: no property `split` for type `string`

    /tmp/tmpuj2nx7js.d(17): Error: template instance `to!int` template `to` is not
    defined, did you mean No?

    /tmp/tmpuj2nx7js.d(19): Error: undefined identifier `sort`, did you mean function
    `sqrt`?

    /tmp/tmpuj2nx7js.d(23): Error: template instance `to!string` template `to` is
    not defined, did you mean No?

    /tmp/tmpuj2nx7js.d(25): Error: no property `stripRight` for type `string`

    Failed: ["dmd", "-unittest", "-v", "-o-", "/tmp/tmpuj2nx7js.d", "-I/tmp"]

    '
  stdout: ''
  timestamp: 1660163090
- exit_code: 1
  program: "import std.typecons;\nimport std.math;\n/*\n Input is a space-delimited\
    \ string of numberals from 'zero' to 'nine'.\n    Valid choices are 'zero', 'one',\
    \ 'two', 'three', 'four', 'five', 'six', 'seven', 'eight' and 'nine'.\n    Return\
    \ the string with numbers sorted from smallest to largest\n    >>> sort_numbers(\"\
    three one five\")\n    \"one three five\"\n    \n*/\nstring sort_numbers(string\
    \ numbers) \n{\n    string[] nums = numbers.split(\" \");\n    int[] nums_int\
    \ = new int[nums.length];\n    foreach(i, num; nums)\n    {\n        nums_int[i]\
    \ = to!int(num);\n    }\n    sort(nums_int);\n    string result = \"\";\n    foreach(i,\
    \ num; nums_int)\n    {\n        result ~= num.to!string ~ \" \";\n    }\n   \
    \ return result.stripRight();\n}\nunittest\n{\n    alias candidate = sort_numbers;\n\
    \n    assert(candidate(\"\") == \"\");\n    assert(candidate(\"three\") == \"\
    three\");\n    assert(candidate(\"three five nine\") == \"three five nine\");\n\
    \    assert(candidate(\"five zero four seven nine eight\") == \"zero four five\
    \ seven eight nine\");\n    assert(candidate(\"six five four three two one zero\"\
    ) == \"zero one two three four five six\");\n}\nvoid main(){}"
  status: SyntaxError
  stderr: '/tmp/tmpc4rmb6bb.d(13): Error: no property `split` for type `string`

    /tmp/tmpc4rmb6bb.d(17): Error: template instance `to!int` template `to` is not
    defined, did you mean No?

    /tmp/tmpc4rmb6bb.d(19): Error: undefined identifier `sort`, did you mean function
    `sqrt`?

    /tmp/tmpc4rmb6bb.d(23): Error: no property `to` for type `int`

    /tmp/tmpc4rmb6bb.d(25): Error: no property `stripRight` for type `string`

    Failed: ["dmd", "-unittest", "-v", "-o-", "/tmp/tmpc4rmb6bb.d", "-I/tmp"]

    '
  stdout: ''
  timestamp: 1660163090
- exit_code: 1
  program: "import std.typecons;\nimport std.math;\n/*\n Input is a space-delimited\
    \ string of numberals from 'zero' to 'nine'.\n    Valid choices are 'zero', 'one',\
    \ 'two', 'three', 'four', 'five', 'six', 'seven', 'eight' and 'nine'.\n    Return\
    \ the string with numbers sorted from smallest to largest\n    >>> sort_numbers(\"\
    three one five\")\n    \"one three five\"\n    \n*/\nstring sort_numbers(string\
    \ numbers) \n{\n    string[] nums = numbers.split(\" \");\n    int[] nums_int\
    \ = new int[nums.length];\n    foreach(i, num; nums)\n    {\n        nums_int[i]\
    \ = to!int(num);\n    }\n    nums_int.sort;\n    foreach(i, num; nums_int)\n \
    \   {\n        nums[i] = to!string(num);\n    }\n    return nums.join(\" \");\n\
    }\nunittest\n{\n    alias candidate = sort_numbers;\n\n    assert(candidate(\"\
    \") == \"\");\n    assert(candidate(\"three\") == \"three\");\n    assert(candidate(\"\
    three five nine\") == \"three five nine\");\n    assert(candidate(\"five zero\
    \ four seven nine eight\") == \"zero four five seven eight nine\");\n    assert(candidate(\"\
    six five four three two one zero\") == \"zero one two three four five six\");\n\
    }\nvoid main(){}"
  status: SyntaxError
  stderr: '/tmp/tmpiq89aqc2.d(13): Error: no property `split` for type `string`

    /tmp/tmpiq89aqc2.d(17): Error: template instance `to!int` template `to` is not
    defined, did you mean No?

    /tmp/tmpiq89aqc2.d(19): Error: no property `sort` for type `int[]`

    /tmp/tmpiq89aqc2.d(22): Error: template instance `to!string` template `to` is
    not defined, did you mean No?

    /tmp/tmpiq89aqc2.d(24): Error: no property `join` for type `string[]`

    Failed: ["dmd", "-unittest", "-v", "-o-", "/tmp/tmpiq89aqc2.d", "-I/tmp"]

    '
  stdout: ''
  timestamp: 1660163090
- exit_code: 1
  program: "import std.typecons;\nimport std.math;\n/*\n Input is a space-delimited\
    \ string of numberals from 'zero' to 'nine'.\n    Valid choices are 'zero', 'one',\
    \ 'two', 'three', 'four', 'five', 'six', 'seven', 'eight' and 'nine'.\n    Return\
    \ the string with numbers sorted from smallest to largest\n    >>> sort_numbers(\"\
    three one five\")\n    \"one three five\"\n    \n*/\nstring sort_numbers(string\
    \ numbers) \n{\n    string[] nums = numbers.split();\n    string[] nums_sorted\
    \ = nums.dup;\n    nums_sorted.sort;\n    return nums_sorted.join(\" \");\n}\n\
    unittest\n{\n    alias candidate = sort_numbers;\n\n    assert(candidate(\"\"\
    ) == \"\");\n    assert(candidate(\"three\") == \"three\");\n    assert(candidate(\"\
    three five nine\") == \"three five nine\");\n    assert(candidate(\"five zero\
    \ four seven nine eight\") == \"zero four five seven eight nine\");\n    assert(candidate(\"\
    six five four three two one zero\") == \"zero one two three four five six\");\n\
    }\nvoid main(){}"
  status: SyntaxError
  stderr: '/tmp/tmp8pdppbw9.d(13): Error: no property `split` for type `string`

    /tmp/tmp8pdppbw9.d(15): Error: no property `sort` for type `string[]`

    /tmp/tmp8pdppbw9.d(16): Error: no property `join` for type `string[]`

    Failed: ["dmd", "-unittest", "-v", "-o-", "/tmp/tmp8pdppbw9.d", "-I/tmp"]

    '
  stdout: ''
  timestamp: 1660163090
- exit_code: 1
  program: "import std.typecons;\nimport std.math;\n/*\n Input is a space-delimited\
    \ string of numberals from 'zero' to 'nine'.\n    Valid choices are 'zero', 'one',\
    \ 'two', 'three', 'four', 'five', 'six', 'seven', 'eight' and 'nine'.\n    Return\
    \ the string with numbers sorted from smallest to largest\n    >>> sort_numbers(\"\
    three one five\")\n    \"one three five\"\n    \n*/\nstring sort_numbers(string\
    \ numbers) \n{\n    string[] nums = numbers.split(\" \");\n    int[] nums_int\
    \ = new int[nums.length];\n    foreach(i, num; nums)\n    {\n        nums_int[i]\
    \ = to!int(num);\n    }\n    nums_int.sort;\n    string result = \"\";\n    foreach(num;\
    \ nums_int)\n    {\n        result ~= num.to!string ~ \" \";\n    }\n    return\
    \ result.stripRight;\n}\nunittest\n{\n    alias candidate = sort_numbers;\n\n\
    \    assert(candidate(\"\") == \"\");\n    assert(candidate(\"three\") == \"three\"\
    );\n    assert(candidate(\"three five nine\") == \"three five nine\");\n    assert(candidate(\"\
    five zero four seven nine eight\") == \"zero four five seven eight nine\");\n\
    \    assert(candidate(\"six five four three two one zero\") == \"zero one two\
    \ three four five six\");\n}\nvoid main(){}"
  status: SyntaxError
  stderr: '/tmp/tmpvjadrtj6.d(13): Error: no property `split` for type `string`

    /tmp/tmpvjadrtj6.d(17): Error: template instance `to!int` template `to` is not
    defined, did you mean No?

    /tmp/tmpvjadrtj6.d(19): Error: no property `sort` for type `int[]`

    /tmp/tmpvjadrtj6.d(23): Error: no property `to` for type `int`

    /tmp/tmpvjadrtj6.d(25): Error: no property `stripRight` for type `string`

    Failed: ["dmd", "-unittest", "-v", "-o-", "/tmp/tmpvjadrtj6.d", "-I/tmp"]

    '
  stdout: ''
  timestamp: 1660163090
- exit_code: 1
  program: "import std.typecons;\nimport std.math;\n/*\n Input is a space-delimited\
    \ string of numberals from 'zero' to 'nine'.\n    Valid choices are 'zero', 'one',\
    \ 'two', 'three', 'four', 'five', 'six', 'seven', 'eight' and 'nine'.\n    Return\
    \ the string with numbers sorted from smallest to largest\n    >>> sort_numbers(\"\
    three one five\")\n    \"one three five\"\n    \n*/\nstring sort_numbers(string\
    \ numbers) \n{\n    string[] nums = numbers.split(\" \");\n    int[] num_ints\
    \ = new int[nums.length];\n    foreach(i, num; nums)\n    {\n        num_ints[i]\
    \ = numeral_to_int(num);\n    }\n    sort(num_ints);\n    foreach(i, num; num_ints)\n\
    \    {\n        nums[i] = int_to_numeral(num);\n    }\n    return nums.join(\"\
    \ \");\n}\nunittest\n{\n    alias candidate = sort_numbers;\n\n    assert(candidate(\"\
    \") == \"\");\n    assert(candidate(\"three\") == \"three\");\n    assert(candidate(\"\
    three five nine\") == \"three five nine\");\n    assert(candidate(\"five zero\
    \ four seven nine eight\") == \"zero four five seven eight nine\");\n    assert(candidate(\"\
    six five four three two one zero\") == \"zero one two three four five six\");\n\
    }\nvoid main(){}"
  status: SyntaxError
  stderr: '/tmp/tmp__uget8_.d(13): Error: no property `split` for type `string`

    /tmp/tmp__uget8_.d(17): Error: undefined identifier `numeral_to_int`

    /tmp/tmp__uget8_.d(19): Error: undefined identifier `sort`, did you mean function
    `sqrt`?

    /tmp/tmp__uget8_.d(22): Error: undefined identifier `int_to_numeral`

    /tmp/tmp__uget8_.d(24): Error: no property `join` for type `string[]`

    Failed: ["dmd", "-unittest", "-v", "-o-", "/tmp/tmp__uget8_.d", "-I/tmp"]

    '
  stdout: ''
  timestamp: 1660163090
- exit_code: 1
  program: "import std.typecons;\nimport std.math;\n/*\n Input is a space-delimited\
    \ string of numberals from 'zero' to 'nine'.\n    Valid choices are 'zero', 'one',\
    \ 'two', 'three', 'four', 'five', 'six', 'seven', 'eight' and 'nine'.\n    Return\
    \ the string with numbers sorted from smallest to largest\n    >>> sort_numbers(\"\
    three one five\")\n    \"one three five\"\n    \n*/\nstring sort_numbers(string\
    \ numbers) \n{\n    string[] nums = numbers.split(\" \");\n    int[] nums_int\
    \ = new int[nums.length];\n    foreach(i, num; nums)\n    {\n        nums_int[i]\
    \ = to!int(num);\n    }\n    sort(nums_int);\n    string result = \"\";\n    foreach(num;\
    \ nums_int)\n    {\n        result ~= to!string(num) ~ \" \";\n    }\n    return\
    \ result.trim();\n}\nunittest\n{\n    alias candidate = sort_numbers;\n\n    assert(candidate(\"\
    \") == \"\");\n    assert(candidate(\"three\") == \"three\");\n    assert(candidate(\"\
    three five nine\") == \"three five nine\");\n    assert(candidate(\"five zero\
    \ four seven nine eight\") == \"zero four five seven eight nine\");\n    assert(candidate(\"\
    six five four three two one zero\") == \"zero one two three four five six\");\n\
    }\nvoid main(){}"
  status: SyntaxError
  stderr: '/tmp/tmpayi9pmir.d(13): Error: no property `split` for type `string`

    /tmp/tmpayi9pmir.d(17): Error: template instance `to!int` template `to` is not
    defined, did you mean No?

    /tmp/tmpayi9pmir.d(19): Error: undefined identifier `sort`, did you mean function
    `sqrt`?

    /tmp/tmpayi9pmir.d(23): Error: template instance `to!string` template `to` is
    not defined, did you mean No?

    /tmp/tmpayi9pmir.d(25): Error: no property `trim` for type `string`

    Failed: ["dmd", "-unittest", "-v", "-o-", "/tmp/tmpayi9pmir.d", "-I/tmp"]

    '
  stdout: ''
  timestamp: 1660163090
- exit_code: 1
  program: "import std.typecons;\nimport std.math;\n/*\n Input is a space-delimited\
    \ string of numberals from 'zero' to 'nine'.\n    Valid choices are 'zero', 'one',\
    \ 'two', 'three', 'four', 'five', 'six', 'seven', 'eight' and 'nine'.\n    Return\
    \ the string with numbers sorted from smallest to largest\n    >>> sort_numbers(\"\
    three one five\")\n    \"one three five\"\n    \n*/\nstring sort_numbers(string\
    \ numbers) \n{\n    string[] nums = numbers.split(\" \");\n    int[] nums_int\
    \ = new int[nums.length];\n    foreach(i, num; nums)\n    {\n        switch(num)\n\
    \        {\n            case \"zero\":\n                nums_int[i] = 0;\n   \
    \             break;\n            case \"one\":\n                nums_int[i] =\
    \ 1;\n                break;\n            case \"two\":\n                nums_int[i]\
    \ = 2;\n                break;\n            case \"three\":\n                nums_int[i]\
    \ = 3;\n                break;\n            case \"four\":\n                nums_int[i]\
    \ = 4;\n                break;\n            case \"five\":\n                nums_int[i]\
    \ = 5;\n                break;\n            case \"six\":\n                nums_int[i]\
    \ = 6;\n                break;\n            case \"seven\":\n                nums_int[i]\
    \ = 7;\n                break;\n            case \"eight\":\n                nums_int[i]\
    \ = 8;\n                break;\n            case \"nine\":\n                nums_int[i]\
    \ = 9;\n                break;\n        }\n    }\n    nums_int.sort();\n    foreach(i,\
    \ num; nums_int)\n    {\n        switch(num)\n        {\n            case 0:\n\
    \                nums[i] = \"zero\";\n                break;\n            case\
    \ 1:\n                nums[i] = \"one\";\n                break;\n           \
    \ case 2:\n                nums[i] = \"two\";\n                break;\n      \
    \      case 3:\n                nums[i] = \"three\";\n                break;\n\
    \            case 4:\n                nums[i] = \"four\";\n                break;\n\
    \            case 5:\n                nums[i] = \"five\";\n                break;\n\
    \            case 6:\n                nums[i] = \"six\";\n                break;\n\
    \            case 7:\n                nums[i] = \"seven\";\n                break;\n\
    \            case 8:\n                nums[i] = \"eight\";\n                break;\n\
    \            case 9:\n                nums[i] = \"nine\nunittest\n{\n    alias\
    \ candidate = sort_numbers;\n\n    assert(candidate(\"\") == \"\");\n    assert(candidate(\"\
    three\") == \"three\");\n    assert(candidate(\"three five nine\") == \"three\
    \ five nine\");\n    assert(candidate(\"five zero four seven nine eight\") ==\
    \ \"zero four five seven eight nine\");\n    assert(candidate(\"six five four\
    \ three two one zero\") == \"zero one two three four five six\");\n}\nvoid main(){}"
  status: SyntaxError
  stderr: '/tmp/tmpq_hzlrvp.d(89): Error: Implicit string concatenation is deprecated,
    use "nine\x0aunittest\x0a{\x0a    alias candidate = sort_numbers;\x0a\x0a    assert(candidate("
    ~ ") == " instead

    /tmp/tmpq_hzlrvp.d(89): Error: Implicit string concatenation is deprecated, use
    ") == " ~ ");\x0a    assert(candidate(" instead

    /tmp/tmpq_hzlrvp.d(90): Error: found `three` when expecting `;` following statement

    /tmp/tmpq_hzlrvp.d(90): Error: found `three` when expecting `;` following statement

    /tmp/tmpq_hzlrvp.d(91): Error: found `three` when expecting `;` following statement

    /tmp/tmpq_hzlrvp.d(91): Error: found `nine` when expecting `;` following statement

    /tmp/tmpq_hzlrvp.d(91): Error: found `three` when expecting `;` following statement

    /tmp/tmpq_hzlrvp.d(91): Error: found `nine` when expecting `;` following statement

    /tmp/tmpq_hzlrvp.d(92): Error: found `five` when expecting `;` following statement

    /tmp/tmpq_hzlrvp.d(92): Error: found `four` when expecting `;` following statement

    /tmp/tmpq_hzlrvp.d(92): Error: found `'
  stdout: ''
  timestamp: 1660163090
- exit_code: 1
  program: "import std.typecons;\nimport std.math;\n/*\n Input is a space-delimited\
    \ string of numberals from 'zero' to 'nine'.\n    Valid choices are 'zero', 'one',\
    \ 'two', 'three', 'four', 'five', 'six', 'seven', 'eight' and 'nine'.\n    Return\
    \ the string with numbers sorted from smallest to largest\n    >>> sort_numbers(\"\
    three one five\")\n    \"one three five\"\n    \n*/\nstring sort_numbers(string\
    \ numbers) \n{\n    string[] nums = numbers.split(\" \");\n    int[] nums_int\
    \ = new int[nums.length];\n    foreach(i, num; nums)\n    {\n        switch(num)\n\
    \        {\n            case \"zero\": nums_int[i] = 0; break;\n            case\
    \ \"one\": nums_int[i] = 1; break;\n            case \"two\": nums_int[i] = 2;\
    \ break;\n            case \"three\": nums_int[i] = 3; break;\n            case\
    \ \"four\": nums_int[i] = 4; break;\n            case \"five\": nums_int[i] =\
    \ 5; break;\n            case \"six\": nums_int[i] = 6; break;\n            case\
    \ \"seven\": nums_int[i] = 7; break;\n            case \"eight\": nums_int[i]\
    \ = 8; break;\n            case \"nine\": nums_int[i] = 9; break;\n        }\n\
    \    }\n    nums_int.sort;\n    foreach(i, num; nums_int)\n    {\n        switch(num)\n\
    \        {\n            case 0: nums[i] = \"zero\"; break;\n            case 1:\
    \ nums[i] = \"one\"; break;\n            case 2: nums[i] = \"two\"; break;\n \
    \           case 3: nums[i] = \"three\"; break;\n            case 4: nums[i] =\
    \ \"four\"; break;\n            case 5: nums[i] = \"five\"; break;\n         \
    \   case 6: nums[i] = \"six\"; break;\n            case 7: nums[i] = \"seven\"\
    ; break;\n            case 8: nums[i] = \"eight\"; break;\n            case 9:\
    \ nums[i] = \"nine\"; break;\n        }\n    }\n    return nums.join(\" \");\n\
    }\nunittest\n{\n    alias candidate = sort_numbers;\n\n    assert(candidate(\"\
    \") == \"\");\n    assert(candidate(\"three\") == \"three\");\n    assert(candidate(\"\
    three five nine\") == \"three five nine\");\n    assert(candidate(\"five zero\
    \ four seven nine eight\") == \"zero four five seven eight nine\");\n    assert(candidate(\"\
    six five four three two one zero\") == \"zero one two three four five six\");\n\
    }\nvoid main(){}"
  status: SyntaxError
  stderr: '/tmp/tmph_uyccm7.d(13): Error: no property `split` for type `string`

    /tmp/tmph_uyccm7.d(17): Error: `switch` statement without a `default`; use `final
    switch` or add `default: assert(0);` or add `default: break;`

    /tmp/tmph_uyccm7.d(31): Error: no property `sort` for type `int[]`

    /tmp/tmph_uyccm7.d(34): Error: `switch` statement without a `default`; use `final
    switch` or add `default: assert(0);` or add `default: break;`

    /tmp/tmph_uyccm7.d(48): Error: no property `join` for type `string[]`

    Failed: ["dmd", "-unittest", "-v", "-o-", "/tmp/tmph_uyccm7.d", "-I/tmp"]

    '
  stdout: ''
  timestamp: 1660163090
- exit_code: 1
  program: "import std.typecons;\nimport std.math;\n/*\n Input is a space-delimited\
    \ string of numberals from 'zero' to 'nine'.\n    Valid choices are 'zero', 'one',\
    \ 'two', 'three', 'four', 'five', 'six', 'seven', 'eight' and 'nine'.\n    Return\
    \ the string with numbers sorted from smallest to largest\n    >>> sort_numbers(\"\
    three one five\")\n    \"one three five\"\n    \n*/\nstring sort_numbers(string\
    \ numbers) \n{\n    string[] nums = numbers.split(\" \");\n    int[] nums_int\
    \ = new int[nums.length];\n    foreach(int i, string num; nums)\n    {\n     \
    \   nums_int[i] = to!int(num);\n    }\n    sort(nums_int);\n    string result\
    \ = \"\";\n    foreach(int i, int num; nums_int)\n    {\n        result ~= to!string(num)\
    \ ~ \" \";\n    }\n    return result.stripRight();\n}\nunittest\n{\n    alias\
    \ candidate = sort_numbers;\n\n    assert(candidate(\"\") == \"\");\n    assert(candidate(\"\
    three\") == \"three\");\n    assert(candidate(\"three five nine\") == \"three\
    \ five nine\");\n    assert(candidate(\"five zero four seven nine eight\") ==\
    \ \"zero four five seven eight nine\");\n    assert(candidate(\"six five four\
    \ three two one zero\") == \"zero one two three four five six\");\n}\nvoid main(){}"
  status: SyntaxError
  stderr: '/tmp/tmp_1dgm_eh.d(13): Error: no property `split` for type `string`

    /tmp/tmp_1dgm_eh.d(17): Error: template instance `to!int` template `to` is not
    defined, did you mean No?

    /tmp/tmp_1dgm_eh.d(19): Error: undefined identifier `sort`, did you mean function
    `sqrt`?

    /tmp/tmp_1dgm_eh.d(23): Error: template instance `to!string` template `to` is
    not defined, did you mean No?

    /tmp/tmp_1dgm_eh.d(25): Error: no property `stripRight` for type `string`

    Failed: ["dmd", "-unittest", "-v", "-o-", "/tmp/tmp_1dgm_eh.d", "-I/tmp"]

    '
  stdout: ''
  timestamp: 1660163090
- exit_code: 1
  program: "import std.typecons;\nimport std.math;\n/*\n Input is a space-delimited\
    \ string of numberals from 'zero' to 'nine'.\n    Valid choices are 'zero', 'one',\
    \ 'two', 'three', 'four', 'five', 'six', 'seven', 'eight' and 'nine'.\n    Return\
    \ the string with numbers sorted from smallest to largest\n    >>> sort_numbers(\"\
    three one five\")\n    \"one three five\"\n    \n*/\nstring sort_numbers(string\
    \ numbers) \n{\n    string[] nums = numbers.split(\" \");\n    int[] nums_int\
    \ = new int[nums.length];\n    foreach(i, num; nums)\n    {\n        nums_int[i]\
    \ = num.to!int;\n    }\n    sort(nums_int);\n    string result = \"\";\n    foreach(i,\
    \ num; nums_int)\n    {\n        result ~= num.to!string ~ \" \";\n    }\n   \
    \ return result;\n}\nunittest\n{\n    alias candidate = sort_numbers;\n\n    assert(candidate(\"\
    \") == \"\");\n    assert(candidate(\"three\") == \"three\");\n    assert(candidate(\"\
    three five nine\") == \"three five nine\");\n    assert(candidate(\"five zero\
    \ four seven nine eight\") == \"zero four five seven eight nine\");\n    assert(candidate(\"\
    six five four three two one zero\") == \"zero one two three four five six\");\n\
    }\nvoid main(){}"
  status: SyntaxError
  stderr: '/tmp/tmpn90cgbwo.d(13): Error: no property `split` for type `string`

    /tmp/tmpn90cgbwo.d(17): Error: no property `to` for type `string`

    /tmp/tmpn90cgbwo.d(19): Error: undefined identifier `sort`, did you mean function
    `sqrt`?

    /tmp/tmpn90cgbwo.d(23): Error: no property `to` for type `int`

    Failed: ["dmd", "-unittest", "-v", "-o-", "/tmp/tmpn90cgbwo.d", "-I/tmp"]

    '
  stdout: ''
  timestamp: 1660163090
- exit_code: 1
  program: "import std.typecons;\nimport std.math;\n/*\n Input is a space-delimited\
    \ string of numberals from 'zero' to 'nine'.\n    Valid choices are 'zero', 'one',\
    \ 'two', 'three', 'four', 'five', 'six', 'seven', 'eight' and 'nine'.\n    Return\
    \ the string with numbers sorted from smallest to largest\n    >>> sort_numbers(\"\
    three one five\")\n    \"one three five\"\n    \n*/\nstring sort_numbers(string\
    \ numbers) \n{\n    string[] nums = numbers.split(\" \");\n    int[] nums_int\
    \ = new int[nums.length];\n    foreach(i, num; nums)\n    {\n        nums_int[i]\
    \ = to!int(num);\n    }\n    sort(nums_int);\n    foreach(i, num; nums_int)\n\
    \    {\n        nums[i] = to!string(num);\n    }\n    return join(nums, \" \"\
    );\n}\nunittest\n{\n    alias candidate = sort_numbers;\n\n    assert(candidate(\"\
    \") == \"\");\n    assert(candidate(\"three\") == \"three\");\n    assert(candidate(\"\
    three five nine\") == \"three five nine\");\n    assert(candidate(\"five zero\
    \ four seven nine eight\") == \"zero four five seven eight nine\");\n    assert(candidate(\"\
    six five four three two one zero\") == \"zero one two three four five six\");\n\
    }\nvoid main(){}"
  status: SyntaxError
  stderr: '/tmp/tmp7zskc53q.d(13): Error: no property `split` for type `string`

    /tmp/tmp7zskc53q.d(17): Error: template instance `to!int` template `to` is not
    defined, did you mean No?

    /tmp/tmp7zskc53q.d(19): Error: undefined identifier `sort`, did you mean function
    `sqrt`?

    /tmp/tmp7zskc53q.d(22): Error: template instance `to!string` template `to` is
    not defined, did you mean No?

    /tmp/tmp7zskc53q.d(24): Error: undefined identifier `join`, did you mean function
    `main`?

    Failed: ["dmd", "-unittest", "-v", "-o-", "/tmp/tmp7zskc53q.d", "-I/tmp"]

    '
  stdout: ''
  timestamp: 1660163090
- exit_code: 1
  program: "import std.typecons;\nimport std.math;\n/*\n Input is a space-delimited\
    \ string of numberals from 'zero' to 'nine'.\n    Valid choices are 'zero', 'one',\
    \ 'two', 'three', 'four', 'five', 'six', 'seven', 'eight' and 'nine'.\n    Return\
    \ the string with numbers sorted from smallest to largest\n    >>> sort_numbers(\"\
    three one five\")\n    \"one three five\"\n    \n*/\nstring sort_numbers(string\
    \ numbers) \n{\n    string[] nums = numbers.split;\n    string[] nums_sorted =\
    \ nums.sort;\n    return nums_sorted.join(\" \");\n}\nunittest\n{\n    alias candidate\
    \ = sort_numbers;\n\n    assert(candidate(\"\") == \"\");\n    assert(candidate(\"\
    three\") == \"three\");\n    assert(candidate(\"three five nine\") == \"three\
    \ five nine\");\n    assert(candidate(\"five zero four seven nine eight\") ==\
    \ \"zero four five seven eight nine\");\n    assert(candidate(\"six five four\
    \ three two one zero\") == \"zero one two three four five six\");\n}\nvoid main(){}"
  status: SyntaxError
  stderr: '/tmp/tmp7w0o282i.d(13): Error: no property `split` for type `string`

    /tmp/tmp7w0o282i.d(14): Error: no property `sort` for type `string[]`

    /tmp/tmp7w0o282i.d(15): Error: no property `join` for type `string[]`

    Failed: ["dmd", "-unittest", "-v", "-o-", "/tmp/tmp7w0o282i.d", "-I/tmp"]

    '
  stdout: ''
  timestamp: 1660163090
- exit_code: 1
  program: "import std.typecons;\nimport std.math;\n/*\n Input is a space-delimited\
    \ string of numberals from 'zero' to 'nine'.\n    Valid choices are 'zero', 'one',\
    \ 'two', 'three', 'four', 'five', 'six', 'seven', 'eight' and 'nine'.\n    Return\
    \ the string with numbers sorted from smallest to largest\n    >>> sort_numbers(\"\
    three one five\")\n    \"one three five\"\n    \n*/\nstring sort_numbers(string\
    \ numbers) \n{\n    string[] nums = numbers.split(\" \");\n    int[] nums_int\
    \ = new int[nums.length];\n    for (int i = 0; i < nums.length; i++)\n    {\n\
    \        nums_int[i] = to!int(nums[i]);\n    }\n    sort(nums_int);\n    string\
    \ result = \"\";\n    foreach (int num; nums_int)\n    {\n        result ~= to!string(num)\
    \ ~ \" \";\n    }\n    return result.trim();\n}\nunittest\n{\n    alias candidate\
    \ = sort_numbers;\n\n    assert(candidate(\"\") == \"\");\n    assert(candidate(\"\
    three\") == \"three\");\n    assert(candidate(\"three five nine\") == \"three\
    \ five nine\");\n    assert(candidate(\"five zero four seven nine eight\") ==\
    \ \"zero four five seven eight nine\");\n    assert(candidate(\"six five four\
    \ three two one zero\") == \"zero one two three four five six\");\n}\nvoid main(){}"
  status: SyntaxError
  stderr: '/tmp/tmp8v0tyvfh.d(13): Error: no property `split` for type `string`

    /tmp/tmp8v0tyvfh.d(17): Error: template instance `to!int` template `to` is not
    defined, did you mean No?

    /tmp/tmp8v0tyvfh.d(19): Error: undefined identifier `sort`, did you mean function
    `sqrt`?

    /tmp/tmp8v0tyvfh.d(23): Error: template instance `to!string` template `to` is
    not defined, did you mean No?

    /tmp/tmp8v0tyvfh.d(25): Error: no property `trim` for type `string`

    Failed: ["dmd", "-unittest", "-v", "-o-", "/tmp/tmp8v0tyvfh.d", "-I/tmp"]

    '
  stdout: ''
  timestamp: 1660163090
- exit_code: 1
  program: "import std.typecons;\nimport std.math;\n/*\n Input is a space-delimited\
    \ string of numberals from 'zero' to 'nine'.\n    Valid choices are 'zero', 'one',\
    \ 'two', 'three', 'four', 'five', 'six', 'seven', 'eight' and 'nine'.\n    Return\
    \ the string with numbers sorted from smallest to largest\n    >>> sort_numbers(\"\
    three one five\")\n    \"one three five\"\n    \n*/\nstring sort_numbers(string\
    \ numbers) \n{\n    string[] nums = numbers.split(\" \");\n    int[] nums_int\
    \ = new int[nums.length];\n    foreach(i, num; nums)\n    {\n        nums_int[i]\
    \ = to!int(num);\n    }\n    sort(nums_int);\n    foreach(i, num; nums_int)\n\
    \    {\n        nums[i] = to!string(num);\n    }\n    return join(nums, \" \"\
    );\n}\nunittest\n{\n    alias candidate = sort_numbers;\n\n    assert(candidate(\"\
    \") == \"\");\n    assert(candidate(\"three\") == \"three\");\n    assert(candidate(\"\
    three five nine\") == \"three five nine\");\n    assert(candidate(\"five zero\
    \ four seven nine eight\") == \"zero four five seven eight nine\");\n    assert(candidate(\"\
    six five four three two one zero\") == \"zero one two three four five six\");\n\
    }\nvoid main(){}"
  status: SyntaxError
  stderr: '/tmp/tmp7zskc53q.d(13): Error: no property `split` for type `string`

    /tmp/tmp7zskc53q.d(17): Error: template instance `to!int` template `to` is not
    defined, did you mean No?

    /tmp/tmp7zskc53q.d(19): Error: undefined identifier `sort`, did you mean function
    `sqrt`?

    /tmp/tmp7zskc53q.d(22): Error: template instance `to!string` template `to` is
    not defined, did you mean No?

    /tmp/tmp7zskc53q.d(24): Error: undefined identifier `join`, did you mean function
    `main`?

    Failed: ["dmd", "-unittest", "-v", "-o-", "/tmp/tmp7zskc53q.d", "-I/tmp"]

    '
  stdout: ''
  timestamp: 1660163090
- exit_code: 1
  program: "import std.typecons;\nimport std.math;\n/*\n Input is a space-delimited\
    \ string of numberals from 'zero' to 'nine'.\n    Valid choices are 'zero', 'one',\
    \ 'two', 'three', 'four', 'five', 'six', 'seven', 'eight' and 'nine'.\n    Return\
    \ the string with numbers sorted from smallest to largest\n    >>> sort_numbers(\"\
    three one five\")\n    \"one three five\"\n    \n*/\nstring sort_numbers(string\
    \ numbers) \n{\n    string[] nums = numbers.split(\" \");\n    int[] nums_int\
    \ = new int[nums.length];\n    foreach(i, num; nums)\n    {\n        switch(num)\n\
    \        {\n            case \"zero\": nums_int[i] = 0; break;\n            case\
    \ \"one\": nums_int[i] = 1; break;\n            case \"two\": nums_int[i] = 2;\
    \ break;\n            case \"three\": nums_int[i] = 3; break;\n            case\
    \ \"four\": nums_int[i] = 4; break;\n            case \"five\": nums_int[i] =\
    \ 5; break;\n            case \"six\": nums_int[i] = 6; break;\n            case\
    \ \"seven\": nums_int[i] = 7; break;\n            case \"eight\": nums_int[i]\
    \ = 8; break;\n            case \"nine\": nums_int[i] = 9; break;\n        }\n\
    \    }\n    nums_int.sort();\n    string[] nums_sorted = new string[nums.length];\n\
    \    foreach(i, num; nums_int)\n    {\n        switch(num)\n        {\n      \
    \      case 0: nums_sorted[i] = \"zero\"; break;\n            case 1: nums_sorted[i]\
    \ = \"one\"; break;\n            case 2: nums_sorted[i] = \"two\"; break;\n  \
    \          case 3: nums_sorted[i] = \"three\"; break;\n            case 4: nums_sorted[i]\
    \ = \"four\"; break;\n            case 5: nums_sorted[i] = \"five\"; break;\n\
    \            case 6: nums_sorted[i] = \"six\"; break;\n            case 7: nums_sorted[i]\
    \ = \"seven\"; break;\n            case 8: nums_sorted[i] = \"eight\"; break;\n\
    \            case 9: nums_sorted[i] = \"nine\"; break;\n        }\n    }\n   \
    \ return nums_sorted.join(\" \");\n}\nunittest\n{\n    alias candidate = sort_numbers;\n\
    \n    assert(candidate(\"\") == \"\");\n    assert(candidate(\"three\") == \"\
    three\");\n    assert(candidate(\"three five nine\") == \"three five nine\");\n\
    \    assert(candidate(\"five zero four seven nine eight\") == \"zero four five\
    \ seven eight nine\");\n    assert(candidate(\"six five four three two one zero\"\
    ) == \"zero one two three four five six\");\n}\nvoid main(){}"
  status: SyntaxError
  stderr: '/tmp/tmp0hqh4nex.d(13): Error: no property `split` for type `string`

    /tmp/tmp0hqh4nex.d(17): Error: `switch` statement without a `default`; use `final
    switch` or add `default: assert(0);` or add `default: break;`

    /tmp/tmp0hqh4nex.d(31): Error: no property `sort` for type `int[]`

    /tmp/tmp0hqh4nex.d(35): Error: `switch` statement without a `default`; use `final
    switch` or add `default: assert(0);` or add `default: break;`

    /tmp/tmp0hqh4nex.d(49): Error: no property `join` for type `string[]`

    Failed: ["dmd", "-unittest", "-v", "-o-", "/tmp/tmp0hqh4nex.d", "-I/tmp"]

    '
  stdout: ''
  timestamp: 1660163090
- exit_code: 1
  program: "import std.typecons;\nimport std.math;\n/*\n Input is a space-delimited\
    \ string of numberals from 'zero' to 'nine'.\n    Valid choices are 'zero', 'one',\
    \ 'two', 'three', 'four', 'five', 'six', 'seven', 'eight' and 'nine'.\n    Return\
    \ the string with numbers sorted from smallest to largest\n    >>> sort_numbers(\"\
    three one five\")\n    \"one three five\"\n    \n*/\nstring sort_numbers(string\
    \ numbers) \n{\n    string[] nums = numbers.split(\" \");\n    int[] nums_int\
    \ = new int[nums.length];\n    foreach(i, num; nums)\n    {\n        switch(num)\n\
    \        {\n            case \"zero\":\n                nums_int[i] = 0;\n   \
    \             break;\n            case \"one\":\n                nums_int[i] =\
    \ 1;\n                break;\n            case \"two\":\n                nums_int[i]\
    \ = 2;\n                break;\n            case \"three\":\n                nums_int[i]\
    \ = 3;\n                break;\n            case \"four\":\n                nums_int[i]\
    \ = 4;\n                break;\n            case \"five\":\n                nums_int[i]\
    \ = 5;\n                break;\n            case \"six\":\n                nums_int[i]\
    \ = 6;\n                break;\n            case \"seven\":\n                nums_int[i]\
    \ = 7;\n                break;\n            case \"eight\":\n                nums_int[i]\
    \ = 8;\n                break;\n            case \"nine\":\n                nums_int[i]\
    \ = 9;\n                break;\n        }\n    }\n    nums_int.sort();\n    foreach(i,\
    \ num; nums_int)\n    {\n        switch(num)\n        {\n            case 0:\n\
    \                nums[i] = \"zero\";\n                break;\n            case\
    \ 1:\n                nums[i] = \"one\";\n                break;\n           \
    \ case 2:\n                nums[i] = \"two\";\n                break;\n      \
    \      case 3:\n                nums[i] = \"three\";\n                break;\n\
    \            case 4:\n                nums[i] = \"four\";\n                break;\n\
    \            case 5:\n                nums[i] = \"five\";\n                break;\n\
    \            case 6:\n                nums[i] = \"six\";\n                break;\n\
    \            case 7:\n                nums[i] = \"seven\";\n                break;\n\
    \            case 8:\n                nums[i] = \"eight\";\n                break;\n\
    \            case 9:\n                nums[i] = \"nine\nunittest\n{\n    alias\
    \ candidate = sort_numbers;\n\n    assert(candidate(\"\") == \"\");\n    assert(candidate(\"\
    three\") == \"three\");\n    assert(candidate(\"three five nine\") == \"three\
    \ five nine\");\n    assert(candidate(\"five zero four seven nine eight\") ==\
    \ \"zero four five seven eight nine\");\n    assert(candidate(\"six five four\
    \ three two one zero\") == \"zero one two three four five six\");\n}\nvoid main(){}"
  status: SyntaxError
  stderr: '/tmp/tmpq_hzlrvp.d(89): Error: Implicit string concatenation is deprecated,
    use "nine\x0aunittest\x0a{\x0a    alias candidate = sort_numbers;\x0a\x0a    assert(candidate("
    ~ ") == " instead

    /tmp/tmpq_hzlrvp.d(89): Error: Implicit string concatenation is deprecated, use
    ") == " ~ ");\x0a    assert(candidate(" instead

    /tmp/tmpq_hzlrvp.d(90): Error: found `three` when expecting `;` following statement

    /tmp/tmpq_hzlrvp.d(90): Error: found `three` when expecting `;` following statement

    /tmp/tmpq_hzlrvp.d(91): Error: found `three` when expecting `;` following statement

    /tmp/tmpq_hzlrvp.d(91): Error: found `nine` when expecting `;` following statement

    /tmp/tmpq_hzlrvp.d(91): Error: found `three` when expecting `;` following statement

    /tmp/tmpq_hzlrvp.d(91): Error: found `nine` when expecting `;` following statement

    /tmp/tmpq_hzlrvp.d(92): Error: found `five` when expecting `;` following statement

    /tmp/tmpq_hzlrvp.d(92): Error: found `four` when expecting `;` following statement

    /tmp/tmpq_hzlrvp.d(92): Error: found `'
  stdout: ''
  timestamp: 1660163090
- exit_code: 1
  program: "import std.typecons;\nimport std.math;\n/*\n Input is a space-delimited\
    \ string of numberals from 'zero' to 'nine'.\n    Valid choices are 'zero', 'one',\
    \ 'two', 'three', 'four', 'five', 'six', 'seven', 'eight' and 'nine'.\n    Return\
    \ the string with numbers sorted from smallest to largest\n    >>> sort_numbers(\"\
    three one five\")\n    \"one three five\"\n    \n*/\nstring sort_numbers(string\
    \ numbers) \n{\n    string[] nums = numbers.split(\" \");\n    int[] nums_int\
    \ = new int[nums.length];\n    foreach(int i, string num; nums)\n    {\n     \
    \   switch(num)\n        {\n            case \"zero\":\n                nums_int[i]\
    \ = 0;\n                break;\n            case \"one\":\n                nums_int[i]\
    \ = 1;\n                break;\n            case \"two\":\n                nums_int[i]\
    \ = 2;\n                break;\n            case \"three\":\n                nums_int[i]\
    \ = 3;\n                break;\n            case \"four\":\n                nums_int[i]\
    \ = 4;\n                break;\n            case \"five\":\n                nums_int[i]\
    \ = 5;\n                break;\n            case \"six\":\n                nums_int[i]\
    \ = 6;\n                break;\n            case \"seven\":\n                nums_int[i]\
    \ = 7;\n                break;\n            case \"eight\":\n                nums_int[i]\
    \ = 8;\n                break;\n            case \"nine\":\n                nums_int[i]\
    \ = 9;\n                break;\n        }\n    }\n    nums_int.sort();\n    foreach(int\
    \ i, int num; nums_int)\n    {\n        switch(num)\n        {\n            case\
    \ 0:\n                nums[i] = \"zero\";\n                break;\n          \
    \  case 1:\n                nums[i] = \"one\";\n                break;\n     \
    \       case 2:\n                nums[i] = \"two\";\n                break;\n\
    \            case 3:\n                nums[i] = \"three\";\n                break;\n\
    \            case 4:\n                nums[i] = \"four\";\n                break;\n\
    \            case 5:\n                nums[i] = \"five\";\n                break;\n\
    \            case 6:\n                nums[i] = \"six\";\n                break;\n\
    \            case 7:\n                nums[i] = \"seven\";\n                break;\n\
    \            case 8:\n                nums[i] = \"eight\";\n                break;\n\
    \            case 9:\n                nums[i\nunittest\n{\n    alias candidate\
    \ = sort_numbers;\n\n    assert(candidate(\"\") == \"\");\n    assert(candidate(\"\
    three\") == \"three\");\n    assert(candidate(\"three five nine\") == \"three\
    \ five nine\");\n    assert(candidate(\"five zero four seven nine eight\") ==\
    \ \"zero four five seven eight nine\");\n    assert(candidate(\"six five four\
    \ three two one zero\") == \"zero one two three four five six\");\n}\nvoid main(){}"
  status: SyntaxError
  stderr: '/tmp/tmp_zvn61ob.d(85): Error: found `unittest` when expecting `,`

    /tmp/tmp_zvn61ob.d(95): Error: found `void` when expecting `,`

    /tmp/tmp_zvn61ob.d(95): Error: found `{` when expecting `,`

    /tmp/tmp_zvn61ob.d(95): Error: expression expected, not `}`

    /tmp/tmp_zvn61ob.d(95): Error: found `End of File` when expecting `,`

    /tmp/tmp_zvn61ob.d(95): Error: found `End of File` when expecting `]`

    /tmp/tmp_zvn61ob.d(95): Error: found `End of File` when expecting `;` following
    statement

    /tmp/tmp_zvn61ob.d(95): Error: found `End of File` when expecting `}` following
    compound statement

    /tmp/tmp_zvn61ob.d(95): Error: found `End of File` when expecting `}` following
    compound statement

    /tmp/tmp_zvn61ob.d(95): Error: found `End of File` when expecting `}` following
    compound statement

    Failed: ["dmd", "-unittest", "-v", "-o-", "/tmp/tmp_zvn61ob.d", "-I/tmp"]

    '
  stdout: ''
  timestamp: 1660163090
- exit_code: 1
  program: "import std.typecons;\nimport std.math;\n/*\n Input is a space-delimited\
    \ string of numberals from 'zero' to 'nine'.\n    Valid choices are 'zero', 'one',\
    \ 'two', 'three', 'four', 'five', 'six', 'seven', 'eight' and 'nine'.\n    Return\
    \ the string with numbers sorted from smallest to largest\n    >>> sort_numbers(\"\
    three one five\")\n    \"one three five\"\n    \n*/\nstring sort_numbers(string\
    \ numbers) \n{\n    string[] nums = numbers.split(\" \");\n    int[] nums_int\
    \ = new int[nums.length];\n    foreach(i, n; nums)\n    {\n        nums_int[i]\
    \ = to!int(n);\n    }\n    sort(nums_int);\n    foreach(i, n; nums_int)\n    {\n\
    \        nums[i] = to!string(n);\n    }\n    return join(nums, \" \");\n}\nunittest\n\
    {\n    alias candidate = sort_numbers;\n\n    assert(candidate(\"\") == \"\");\n\
    \    assert(candidate(\"three\") == \"three\");\n    assert(candidate(\"three\
    \ five nine\") == \"three five nine\");\n    assert(candidate(\"five zero four\
    \ seven nine eight\") == \"zero four five seven eight nine\");\n    assert(candidate(\"\
    six five four three two one zero\") == \"zero one two three four five six\");\n\
    }\nvoid main(){}"
  status: SyntaxError
  stderr: '/tmp/tmp_nrc46cs.d(13): Error: no property `split` for type `string`

    /tmp/tmp_nrc46cs.d(17): Error: template instance `to!int` template `to` is not
    defined, did you mean No?

    /tmp/tmp_nrc46cs.d(19): Error: undefined identifier `sort`, did you mean function
    `sqrt`?

    /tmp/tmp_nrc46cs.d(22): Error: template instance `to!string` template `to` is
    not defined, did you mean No?

    /tmp/tmp_nrc46cs.d(24): Error: undefined identifier `join`, did you mean function
    `main`?

    Failed: ["dmd", "-unittest", "-v", "-o-", "/tmp/tmp_nrc46cs.d", "-I/tmp"]

    '
  stdout: ''
  timestamp: 1660163090
- exit_code: 1
  program: "import std.typecons;\nimport std.math;\n/*\n Input is a space-delimited\
    \ string of numberals from 'zero' to 'nine'.\n    Valid choices are 'zero', 'one',\
    \ 'two', 'three', 'four', 'five', 'six', 'seven', 'eight' and 'nine'.\n    Return\
    \ the string with numbers sorted from smallest to largest\n    >>> sort_numbers(\"\
    three one five\")\n    \"one three five\"\n    \n*/\nstring sort_numbers(string\
    \ numbers) \n{\n    auto nums = numbers.split(\" \");\n    nums.sort!((a, b) =>\
    \ numeral_to_int(a) < numeral_to_int(b));\n    return nums.join(\" \");\n}\nunittest\n\
    {\n    alias candidate = sort_numbers;\n\n    assert(candidate(\"\") == \"\");\n\
    \    assert(candidate(\"three\") == \"three\");\n    assert(candidate(\"three\
    \ five nine\") == \"three five nine\");\n    assert(candidate(\"five zero four\
    \ seven nine eight\") == \"zero four five seven eight nine\");\n    assert(candidate(\"\
    six five four three two one zero\") == \"zero one two three four five six\");\n\
    }\nvoid main(){}"
  status: SyntaxError
  stderr: '/tmp/tmpi1_w9ofn.d(13): Error: no property `split` for type `string`

    Failed: ["dmd", "-unittest", "-v", "-o-", "/tmp/tmpi1_w9ofn.d", "-I/tmp"]

    '
  stdout: ''
  timestamp: 1660163090
- exit_code: 1
  program: "import std.typecons;\nimport std.math;\n/*\n Input is a space-delimited\
    \ string of numberals from 'zero' to 'nine'.\n    Valid choices are 'zero', 'one',\
    \ 'two', 'three', 'four', 'five', 'six', 'seven', 'eight' and 'nine'.\n    Return\
    \ the string with numbers sorted from smallest to largest\n    >>> sort_numbers(\"\
    three one five\")\n    \"one three five\"\n    \n*/\nstring sort_numbers(string\
    \ numbers) \n{\n    string[] nums = numbers.split(\" \");\n    int[] nums_int\
    \ = new int[nums.length];\n    for (int i = 0; i < nums.length; i++)\n    {\n\
    \        nums_int[i] = to!int(nums[i]);\n    }\n    sort(nums_int);\n    string\
    \ result = \"\";\n    foreach (int i; nums_int)\n    {\n        result ~= to!string(i)\
    \ ~ \" \";\n    }\n    return result;\n}\nunittest\n{\n    alias candidate = sort_numbers;\n\
    \n    assert(candidate(\"\") == \"\");\n    assert(candidate(\"three\") == \"\
    three\");\n    assert(candidate(\"three five nine\") == \"three five nine\");\n\
    \    assert(candidate(\"five zero four seven nine eight\") == \"zero four five\
    \ seven eight nine\");\n    assert(candidate(\"six five four three two one zero\"\
    ) == \"zero one two three four five six\");\n}\nvoid main(){}"
  status: SyntaxError
  stderr: '/tmp/tmp5_14cl6_.d(13): Error: no property `split` for type `string`

    /tmp/tmp5_14cl6_.d(17): Error: template instance `to!int` template `to` is not
    defined, did you mean No?

    /tmp/tmp5_14cl6_.d(19): Error: undefined identifier `sort`, did you mean function
    `sqrt`?

    /tmp/tmp5_14cl6_.d(23): Error: template instance `to!string` template `to` is
    not defined, did you mean No?

    Failed: ["dmd", "-unittest", "-v", "-o-", "/tmp/tmp5_14cl6_.d", "-I/tmp"]

    '
  stdout: ''
  timestamp: 1660163090
- exit_code: 1
  program: "import std.typecons;\nimport std.math;\n/*\n Input is a space-delimited\
    \ string of numberals from 'zero' to 'nine'.\n    Valid choices are 'zero', 'one',\
    \ 'two', 'three', 'four', 'five', 'six', 'seven', 'eight' and 'nine'.\n    Return\
    \ the string with numbers sorted from smallest to largest\n    >>> sort_numbers(\"\
    three one five\")\n    \"one three five\"\n    \n*/\nstring sort_numbers(string\
    \ numbers) \n{\n    string[] nums = numbers.split(\" \");\n    int[] nums_int\
    \ = new int[nums.length];\n    foreach(i, num; nums)\n    {\n        nums_int[i]\
    \ = to!int(num);\n    }\n    sort(nums_int);\n    string result = \"\";\n    foreach(num;\
    \ nums_int)\n    {\n        result ~= to!string(num) ~ \" \";\n    }\n    return\
    \ result.stripRight();\n}\nunittest\n{\n    alias candidate = sort_numbers;\n\n\
    \    assert(candidate(\"\") == \"\");\n    assert(candidate(\"three\") == \"three\"\
    );\n    assert(candidate(\"three five nine\") == \"three five nine\");\n    assert(candidate(\"\
    five zero four seven nine eight\") == \"zero four five seven eight nine\");\n\
    \    assert(candidate(\"six five four three two one zero\") == \"zero one two\
    \ three four five six\");\n}\nvoid main(){}"
  status: SyntaxError
  stderr: '/tmp/tmpuj2nx7js.d(13): Error: no property `split` for type `string`

    /tmp/tmpuj2nx7js.d(17): Error: template instance `to!int` template `to` is not
    defined, did you mean No?

    /tmp/tmpuj2nx7js.d(19): Error: undefined identifier `sort`, did you mean function
    `sqrt`?

    /tmp/tmpuj2nx7js.d(23): Error: template instance `to!string` template `to` is
    not defined, did you mean No?

    /tmp/tmpuj2nx7js.d(25): Error: no property `stripRight` for type `string`

    Failed: ["dmd", "-unittest", "-v", "-o-", "/tmp/tmpuj2nx7js.d", "-I/tmp"]

    '
  stdout: ''
  timestamp: 1660163090
- exit_code: 1
  program: "import std.typecons;\nimport std.math;\n/*\n Input is a space-delimited\
    \ string of numberals from 'zero' to 'nine'.\n    Valid choices are 'zero', 'one',\
    \ 'two', 'three', 'four', 'five', 'six', 'seven', 'eight' and 'nine'.\n    Return\
    \ the string with numbers sorted from smallest to largest\n    >>> sort_numbers(\"\
    three one five\")\n    \"one three five\"\n    \n*/\nstring sort_numbers(string\
    \ numbers) \n{\n    string[] nums = numbers.split(\" \");\n    int[] nums_int\
    \ = new int[nums.length];\n    foreach(i, num; nums)\n    {\n        nums_int[i]\
    \ = to!int(num);\n    }\n    nums_int.sort;\n    foreach(i, num; nums_int)\n \
    \   {\n        nums[i] = to!string(num);\n    }\n    return nums.join(\" \");\n\
    }\nunittest\n{\n    alias candidate = sort_numbers;\n\n    assert(candidate(\"\
    \") == \"\");\n    assert(candidate(\"three\") == \"three\");\n    assert(candidate(\"\
    three five nine\") == \"three five nine\");\n    assert(candidate(\"five zero\
    \ four seven nine eight\") == \"zero four five seven eight nine\");\n    assert(candidate(\"\
    six five four three two one zero\") == \"zero one two three four five six\");\n\
    }\nvoid main(){}"
  status: SyntaxError
  stderr: '/tmp/tmpiq89aqc2.d(13): Error: no property `split` for type `string`

    /tmp/tmpiq89aqc2.d(17): Error: template instance `to!int` template `to` is not
    defined, did you mean No?

    /tmp/tmpiq89aqc2.d(19): Error: no property `sort` for type `int[]`

    /tmp/tmpiq89aqc2.d(22): Error: template instance `to!string` template `to` is
    not defined, did you mean No?

    /tmp/tmpiq89aqc2.d(24): Error: no property `join` for type `string[]`

    Failed: ["dmd", "-unittest", "-v", "-o-", "/tmp/tmpiq89aqc2.d", "-I/tmp"]

    '
  stdout: ''
  timestamp: 1660163090
- exit_code: 1
  program: "import std.typecons;\nimport std.math;\n/*\n Input is a space-delimited\
    \ string of numberals from 'zero' to 'nine'.\n    Valid choices are 'zero', 'one',\
    \ 'two', 'three', 'four', 'five', 'six', 'seven', 'eight' and 'nine'.\n    Return\
    \ the string with numbers sorted from smallest to largest\n    >>> sort_numbers(\"\
    three one five\")\n    \"one three five\"\n    \n*/\nstring sort_numbers(string\
    \ numbers) \n{\n    string[] nums = numbers.split(\" \");\n    int[] num_ints\
    \ = new int[nums.length];\n    foreach(i, num; nums)\n    {\n        switch(num)\n\
    \        {\n            case \"zero\":\n                num_ints[i] = 0;\n   \
    \             break;\n            case \"one\":\n                num_ints[i] =\
    \ 1;\n                break;\n            case \"two\":\n                num_ints[i]\
    \ = 2;\n                break;\n            case \"three\":\n                num_ints[i]\
    \ = 3;\n                break;\n            case \"four\":\n                num_ints[i]\
    \ = 4;\n                break;\n            case \"five\":\n                num_ints[i]\
    \ = 5;\n                break;\n            case \"six\":\n                num_ints[i]\
    \ = 6;\n                break;\n            case \"seven\":\n                num_ints[i]\
    \ = 7;\n                break;\n            case \"eight\":\n                num_ints[i]\
    \ = 8;\n                break;\n            case \"nine\":\n                num_ints[i]\
    \ = 9;\n                break;\n        }\n    }\n    num_ints.sort;\n    foreach(i,\
    \ num; num_ints)\n    {\n        switch(num)\n        {\n            case 0:\n\
    \                nums[i] = \"zero\";\n                break;\n            case\
    \ 1:\n                nums[i] = \"one\";\n                break;\n           \
    \ case 2:\n                nums[i] = \"two\";\n                break;\n      \
    \      case 3:\n                nums[i] = \"three\";\n                break;\n\
    \            case 4:\n                nums[i] = \"four\";\n                break;\n\
    \            case 5:\n                nums[i] = \"five\";\n                break;\n\
    \            case 6:\n                nums[i] = \"six\";\n                break;\n\
    \            case 7:\n                nums[i] = \"seven\";\n                break;\n\
    \            case 8:\n                nums[i] = \"eight\";\n                break;\n\
    \            case 9:\n                nums[i] = \"nine\";\n                break;\n\
    \        }\n    }\n   \nunittest\n{\n    alias candidate = sort_numbers;\n\n \
    \   assert(candidate(\"\") == \"\");\n    assert(candidate(\"three\") == \"three\"\
    );\n    assert(candidate(\"three five nine\") == \"three five nine\");\n    assert(candidate(\"\
    five zero four seven nine eight\") == \"zero four five seven eight nine\");\n\
    \    assert(candidate(\"six five four three two one zero\") == \"zero one two\
    \ three four five six\");\n}\nvoid main(){}"
  status: SyntaxError
  stderr: '/tmp/tmpj68g6zfs.d(89): Error: found `unittest` instead of statement

    Failed: ["dmd", "-unittest", "-v", "-o-", "/tmp/tmpj68g6zfs.d", "-I/tmp"]

    '
  stdout: ''
  timestamp: 1660163090
- exit_code: 1
  program: "import std.typecons;\nimport std.math;\n/*\n Input is a space-delimited\
    \ string of numberals from 'zero' to 'nine'.\n    Valid choices are 'zero', 'one',\
    \ 'two', 'three', 'four', 'five', 'six', 'seven', 'eight' and 'nine'.\n    Return\
    \ the string with numbers sorted from smallest to largest\n    >>> sort_numbers(\"\
    three one five\")\n    \"one three five\"\n    \n*/\nstring sort_numbers(string\
    \ numbers) \n{\n    string[] nums = numbers.split(\" \");\n    int[] nums_int\
    \ = new int[nums.length];\n    foreach(int i, string num; nums)\n    {\n     \
    \   nums_int[i] = to!int(num);\n    }\n    sort(nums_int);\n    string result\
    \ = \"\";\n    foreach(int num; nums_int)\n    {\n        result ~= num.to!string\
    \ ~ \" \";\n    }\n    return result.trimRight();\n}\nunittest\n{\n    alias candidate\
    \ = sort_numbers;\n\n    assert(candidate(\"\") == \"\");\n    assert(candidate(\"\
    three\") == \"three\");\n    assert(candidate(\"three five nine\") == \"three\
    \ five nine\");\n    assert(candidate(\"five zero four seven nine eight\") ==\
    \ \"zero four five seven eight nine\");\n    assert(candidate(\"six five four\
    \ three two one zero\") == \"zero one two three four five six\");\n}\nvoid main(){}"
  status: SyntaxError
  stderr: '/tmp/tmpg5u0_w96.d(13): Error: no property `split` for type `string`

    /tmp/tmpg5u0_w96.d(17): Error: template instance `to!int` template `to` is not
    defined, did you mean No?

    /tmp/tmpg5u0_w96.d(19): Error: undefined identifier `sort`, did you mean function
    `sqrt`?

    /tmp/tmpg5u0_w96.d(23): Error: no property `to` for type `int`

    /tmp/tmpg5u0_w96.d(25): Error: no property `trimRight` for type `string`

    Failed: ["dmd", "-unittest", "-v", "-o-", "/tmp/tmpg5u0_w96.d", "-I/tmp"]

    '
  stdout: ''
  timestamp: 1660163090
- exit_code: 1
  program: "import std.typecons;\nimport std.math;\n/*\n Input is a space-delimited\
    \ string of numberals from 'zero' to 'nine'.\n    Valid choices are 'zero', 'one',\
    \ 'two', 'three', 'four', 'five', 'six', 'seven', 'eight' and 'nine'.\n    Return\
    \ the string with numbers sorted from smallest to largest\n    >>> sort_numbers(\"\
    three one five\")\n    \"one three five\"\n    \n*/\nstring sort_numbers(string\
    \ numbers) \n{\n    string[] nums = numbers.split(\" \");\n    int[] nums_int\
    \ = new int[nums.length];\n    foreach(i, num; nums)\n    {\n        nums_int[i]\
    \ = to!int(num);\n    }\n    sort(nums_int);\n    string result = \"\";\n    foreach(i,\
    \ num; nums_int)\n    {\n        result ~= to!string(num) ~ \" \";\n    }\n  \
    \  return result.stripRight();\n}\nunittest\n{\n    alias candidate = sort_numbers;\n\
    \n    assert(candidate(\"\") == \"\");\n    assert(candidate(\"three\") == \"\
    three\");\n    assert(candidate(\"three five nine\") == \"three five nine\");\n\
    \    assert(candidate(\"five zero four seven nine eight\") == \"zero four five\
    \ seven eight nine\");\n    assert(candidate(\"six five four three two one zero\"\
    ) == \"zero one two three four five six\");\n}\nvoid main(){}"
  status: SyntaxError
  stderr: '/tmp/tmpv2fax3hy.d(13): Error: no property `split` for type `string`

    /tmp/tmpv2fax3hy.d(17): Error: template instance `to!int` template `to` is not
    defined, did you mean No?

    /tmp/tmpv2fax3hy.d(19): Error: undefined identifier `sort`, did you mean function
    `sqrt`?

    /tmp/tmpv2fax3hy.d(23): Error: template instance `to!string` template `to` is
    not defined, did you mean No?

    /tmp/tmpv2fax3hy.d(25): Error: no property `stripRight` for type `string`

    Failed: ["dmd", "-unittest", "-v", "-o-", "/tmp/tmpv2fax3hy.d", "-I/tmp"]

    '
  stdout: ''
  timestamp: 1660163090
- exit_code: 1
  program: "import std.typecons;\nimport std.math;\n/*\n Input is a space-delimited\
    \ string of numberals from 'zero' to 'nine'.\n    Valid choices are 'zero', 'one',\
    \ 'two', 'three', 'four', 'five', 'six', 'seven', 'eight' and 'nine'.\n    Return\
    \ the string with numbers sorted from smallest to largest\n    >>> sort_numbers(\"\
    three one five\")\n    \"one three five\"\n    \n*/\nstring sort_numbers(string\
    \ numbers) \n{\n    string[] nums = numbers.split(\" \");\n    int[] num_ints\
    \ = new int[nums.length];\n    foreach(i, num; nums)\n    {\n        num_ints[i]\
    \ = to!int(num);\n    }\n    sort(num_ints);\n    string result = \"\";\n    foreach(num;\
    \ num_ints)\n    {\n        result ~= to!string(num) ~ \" \";\n    }\n    return\
    \ result.trimRight();\n}\nunittest\n{\n    alias candidate = sort_numbers;\n\n\
    \    assert(candidate(\"\") == \"\");\n    assert(candidate(\"three\") == \"three\"\
    );\n    assert(candidate(\"three five nine\") == \"three five nine\");\n    assert(candidate(\"\
    five zero four seven nine eight\") == \"zero four five seven eight nine\");\n\
    \    assert(candidate(\"six five four three two one zero\") == \"zero one two\
    \ three four five six\");\n}\nvoid main(){}"
  status: SyntaxError
  stderr: '/tmp/tmpw29_ane8.d(13): Error: no property `split` for type `string`

    /tmp/tmpw29_ane8.d(17): Error: template instance `to!int` template `to` is not
    defined, did you mean No?

    /tmp/tmpw29_ane8.d(19): Error: undefined identifier `sort`, did you mean function
    `sqrt`?

    /tmp/tmpw29_ane8.d(23): Error: template instance `to!string` template `to` is
    not defined, did you mean No?

    /tmp/tmpw29_ane8.d(25): Error: no property `trimRight` for type `string`

    Failed: ["dmd", "-unittest", "-v", "-o-", "/tmp/tmpw29_ane8.d", "-I/tmp"]

    '
  stdout: ''
  timestamp: 1660163090
- exit_code: 1
  program: "import std.typecons;\nimport std.math;\n/*\n Input is a space-delimited\
    \ string of numberals from 'zero' to 'nine'.\n    Valid choices are 'zero', 'one',\
    \ 'two', 'three', 'four', 'five', 'six', 'seven', 'eight' and 'nine'.\n    Return\
    \ the string with numbers sorted from smallest to largest\n    >>> sort_numbers(\"\
    three one five\")\n    \"one three five\"\n    \n*/\nstring sort_numbers(string\
    \ numbers) \n{\n    string[] nums = numbers.split();\n    int[] nums_int = new\
    \ int[nums.length];\n    int i = 0;\n    foreach(string num; nums)\n    {\n  \
    \      nums_int[i] = to!int(num);\n        i++;\n    }\n    sort(nums_int);\n\
    \    string result = \"\";\n    foreach(int num; nums_int)\n    {\n        result\
    \ ~= to!string(num) ~ \" \";\n    }\n    return result.trim();\n}\nunittest\n\
    {\n    alias candidate = sort_numbers;\n\n    assert(candidate(\"\") == \"\");\n\
    \    assert(candidate(\"three\") == \"three\");\n    assert(candidate(\"three\
    \ five nine\") == \"three five nine\");\n    assert(candidate(\"five zero four\
    \ seven nine eight\") == \"zero four five seven eight nine\");\n    assert(candidate(\"\
    six five four three two one zero\") == \"zero one two three four five six\");\n\
    }\nvoid main(){}"
  status: SyntaxError
  stderr: '/tmp/tmp_1lrvjwi.d(13): Error: no property `split` for type `string`

    /tmp/tmp_1lrvjwi.d(18): Error: template instance `to!int` template `to` is not
    defined, did you mean No?

    /tmp/tmp_1lrvjwi.d(21): Error: undefined identifier `sort`, did you mean function
    `sqrt`?

    /tmp/tmp_1lrvjwi.d(25): Error: template instance `to!string` template `to` is
    not defined, did you mean No?

    /tmp/tmp_1lrvjwi.d(27): Error: no property `trim` for type `string`

    Failed: ["dmd", "-unittest", "-v", "-o-", "/tmp/tmp_1lrvjwi.d", "-I/tmp"]

    '
  stdout: ''
  timestamp: 1660163090
- exit_code: 1
  program: "import std.typecons;\nimport std.math;\n/*\n Input is a space-delimited\
    \ string of numberals from 'zero' to 'nine'.\n    Valid choices are 'zero', 'one',\
    \ 'two', 'three', 'four', 'five', 'six', 'seven', 'eight' and 'nine'.\n    Return\
    \ the string with numbers sorted from smallest to largest\n    >>> sort_numbers(\"\
    three one five\")\n    \"one three five\"\n    \n*/\nstring sort_numbers(string\
    \ numbers) \n{\n    string[] nums = numbers.split(\" \");\n    int[] nums_int\
    \ = new int[nums.length];\n    foreach(i, num; nums)\n    {\n        nums_int[i]\
    \ = num_to_int(num);\n    }\n    sort(nums_int);\n    foreach(i, num; nums_int)\n\
    \    {\n        nums[i] = int_to_num(num);\n    }\n    return nums.join(\" \"\
    );\n}\nunittest\n{\n    alias candidate = sort_numbers;\n\n    assert(candidate(\"\
    \") == \"\");\n    assert(candidate(\"three\") == \"three\");\n    assert(candidate(\"\
    three five nine\") == \"three five nine\");\n    assert(candidate(\"five zero\
    \ four seven nine eight\") == \"zero four five seven eight nine\");\n    assert(candidate(\"\
    six five four three two one zero\") == \"zero one two three four five six\");\n\
    }\nvoid main(){}"
  status: SyntaxError
  stderr: '/tmp/tmpuzh2jjb4.d(13): Error: no property `split` for type `string`

    /tmp/tmpuzh2jjb4.d(17): Error: undefined identifier `num_to_int`

    /tmp/tmpuzh2jjb4.d(19): Error: undefined identifier `sort`, did you mean function
    `sqrt`?

    /tmp/tmpuzh2jjb4.d(22): Error: undefined identifier `int_to_num`

    /tmp/tmpuzh2jjb4.d(24): Error: no property `join` for type `string[]`

    Failed: ["dmd", "-unittest", "-v", "-o-", "/tmp/tmpuzh2jjb4.d", "-I/tmp"]

    '
  stdout: ''
  timestamp: 1660163090
- exit_code: 1
  program: "import std.typecons;\nimport std.math;\n/*\n Input is a space-delimited\
    \ string of numberals from 'zero' to 'nine'.\n    Valid choices are 'zero', 'one',\
    \ 'two', 'three', 'four', 'five', 'six', 'seven', 'eight' and 'nine'.\n    Return\
    \ the string with numbers sorted from smallest to largest\n    >>> sort_numbers(\"\
    three one five\")\n    \"one three five\"\n    \n*/\nstring sort_numbers(string\
    \ numbers) \n{\n    string[] nums = numbers.split(\" \");\n    int[] nums_int\
    \ = new int[nums.length];\n    for (int i = 0; i < nums.length; i++)\n    {\n\
    \        nums_int[i] = num_to_int(nums[i]);\n    }\n    nums_int.sort();\n   \
    \ for (int i = 0; i < nums.length; i++)\n    {\n        nums[i] = int_to_num(nums_int[i]);\n\
    \    }\n    return nums.join(\" \");\n}\nunittest\n{\n    alias candidate = sort_numbers;\n\
    \n    assert(candidate(\"\") == \"\");\n    assert(candidate(\"three\") == \"\
    three\");\n    assert(candidate(\"three five nine\") == \"three five nine\");\n\
    \    assert(candidate(\"five zero four seven nine eight\") == \"zero four five\
    \ seven eight nine\");\n    assert(candidate(\"six five four three two one zero\"\
    ) == \"zero one two three four five six\");\n}\nvoid main(){}"
  status: SyntaxError
  stderr: '/tmp/tmp7lzxqelh.d(13): Error: no property `split` for type `string`

    /tmp/tmp7lzxqelh.d(17): Error: undefined identifier `num_to_int`

    /tmp/tmp7lzxqelh.d(19): Error: no property `sort` for type `int[]`

    /tmp/tmp7lzxqelh.d(22): Error: undefined identifier `int_to_num`

    /tmp/tmp7lzxqelh.d(24): Error: no property `join` for type `string[]`

    Failed: ["dmd", "-unittest", "-v", "-o-", "/tmp/tmp7lzxqelh.d", "-I/tmp"]

    '
  stdout: ''
  timestamp: 1660163090
- exit_code: 1
  program: "import std.typecons;\nimport std.math;\n/*\n Input is a space-delimited\
    \ string of numberals from 'zero' to 'nine'.\n    Valid choices are 'zero', 'one',\
    \ 'two', 'three', 'four', 'five', 'six', 'seven', 'eight' and 'nine'.\n    Return\
    \ the string with numbers sorted from smallest to largest\n    >>> sort_numbers(\"\
    three one five\")\n    \"one three five\"\n    \n*/\nstring sort_numbers(string\
    \ numbers) \n{\n    string[] nums = numbers.split(\" \");\n    string[] nums_sorted\
    \ = nums.dup;\n    nums_sorted.sort;\n    string result = \"\";\n    foreach(string\
    \ num; nums_sorted)\n    {\n        result ~= num ~ \" \";\n    }\n    return\
    \ result.stripRight;\n}\nunittest\n{\n    alias candidate = sort_numbers;\n\n\
    \    assert(candidate(\"\") == \"\");\n    assert(candidate(\"three\") == \"three\"\
    );\n    assert(candidate(\"three five nine\") == \"three five nine\");\n    assert(candidate(\"\
    five zero four seven nine eight\") == \"zero four five seven eight nine\");\n\
    \    assert(candidate(\"six five four three two one zero\") == \"zero one two\
    \ three four five six\");\n}\nvoid main(){}"
  status: SyntaxError
  stderr: '/tmp/tmp9ntca_v9.d(13): Error: no property `split` for type `string`

    /tmp/tmp9ntca_v9.d(15): Error: no property `sort` for type `string[]`

    /tmp/tmp9ntca_v9.d(21): Error: no property `stripRight` for type `string`

    Failed: ["dmd", "-unittest", "-v", "-o-", "/tmp/tmp9ntca_v9.d", "-I/tmp"]

    '
  stdout: ''
  timestamp: 1660163090
- exit_code: 1
  program: "import std.typecons;\nimport std.math;\n/*\n Input is a space-delimited\
    \ string of numberals from 'zero' to 'nine'.\n    Valid choices are 'zero', 'one',\
    \ 'two', 'three', 'four', 'five', 'six', 'seven', 'eight' and 'nine'.\n    Return\
    \ the string with numbers sorted from smallest to largest\n    >>> sort_numbers(\"\
    three one five\")\n    \"one three five\"\n    \n*/\nstring sort_numbers(string\
    \ numbers) \n{\n    string[] nums = numbers.split(\" \");\n    int[] nums_int\
    \ = new int[nums.length];\n    foreach(i, num; nums)\n    {\n        nums_int[i]\
    \ = to!int(num);\n    }\n    nums_int.sort;\n    foreach(i, num; nums_int)\n \
    \   {\n        nums[i] = to!string(num);\n    }\n    return nums.join(\" \");\n\
    }\nunittest\n{\n    alias candidate = sort_numbers;\n\n    assert(candidate(\"\
    \") == \"\");\n    assert(candidate(\"three\") == \"three\");\n    assert(candidate(\"\
    three five nine\") == \"three five nine\");\n    assert(candidate(\"five zero\
    \ four seven nine eight\") == \"zero four five seven eight nine\");\n    assert(candidate(\"\
    six five four three two one zero\") == \"zero one two three four five six\");\n\
    }\nvoid main(){}"
  status: SyntaxError
  stderr: '/tmp/tmpiq89aqc2.d(13): Error: no property `split` for type `string`

    /tmp/tmpiq89aqc2.d(17): Error: template instance `to!int` template `to` is not
    defined, did you mean No?

    /tmp/tmpiq89aqc2.d(19): Error: no property `sort` for type `int[]`

    /tmp/tmpiq89aqc2.d(22): Error: template instance `to!string` template `to` is
    not defined, did you mean No?

    /tmp/tmpiq89aqc2.d(24): Error: no property `join` for type `string[]`

    Failed: ["dmd", "-unittest", "-v", "-o-", "/tmp/tmpiq89aqc2.d", "-I/tmp"]

    '
  stdout: ''
  timestamp: 1660163090
- exit_code: 1
  program: "import std.typecons;\nimport std.math;\n/*\n Input is a space-delimited\
    \ string of numberals from 'zero' to 'nine'.\n    Valid choices are 'zero', 'one',\
    \ 'two', 'three', 'four', 'five', 'six', 'seven', 'eight' and 'nine'.\n    Return\
    \ the string with numbers sorted from smallest to largest\n    >>> sort_numbers(\"\
    three one five\")\n    \"one three five\"\n    \n*/\nstring sort_numbers(string\
    \ numbers) \n{\n    string[] nums = numbers.split(\" \");\n    int[] nums_int\
    \ = new int[nums.length];\n    foreach(i, num; nums)\n    {\n        nums_int[i]\
    \ = num_to_int(num);\n    }\n    sort(nums_int);\n    foreach(i, num; nums_int)\n\
    \    {\n        nums[i] = int_to_num(num);\n    }\n    return nums.join(\" \"\
    );\n}\nunittest\n{\n    alias candidate = sort_numbers;\n\n    assert(candidate(\"\
    \") == \"\");\n    assert(candidate(\"three\") == \"three\");\n    assert(candidate(\"\
    three five nine\") == \"three five nine\");\n    assert(candidate(\"five zero\
    \ four seven nine eight\") == \"zero four five seven eight nine\");\n    assert(candidate(\"\
    six five four three two one zero\") == \"zero one two three four five six\");\n\
    }\nvoid main(){}"
  status: SyntaxError
  stderr: '/tmp/tmpuzh2jjb4.d(13): Error: no property `split` for type `string`

    /tmp/tmpuzh2jjb4.d(17): Error: undefined identifier `num_to_int`

    /tmp/tmpuzh2jjb4.d(19): Error: undefined identifier `sort`, did you mean function
    `sqrt`?

    /tmp/tmpuzh2jjb4.d(22): Error: undefined identifier `int_to_num`

    /tmp/tmpuzh2jjb4.d(24): Error: no property `join` for type `string[]`

    Failed: ["dmd", "-unittest", "-v", "-o-", "/tmp/tmpuzh2jjb4.d", "-I/tmp"]

    '
  stdout: ''
  timestamp: 1660163090
- exit_code: 1
  program: "import std.typecons;\nimport std.math;\n/*\n Input is a space-delimited\
    \ string of numberals from 'zero' to 'nine'.\n    Valid choices are 'zero', 'one',\
    \ 'two', 'three', 'four', 'five', 'six', 'seven', 'eight' and 'nine'.\n    Return\
    \ the string with numbers sorted from smallest to largest\n    >>> sort_numbers(\"\
    three one five\")\n    \"one three five\"\n    \n*/\nstring sort_numbers(string\
    \ numbers) \n{\n    int[] nums;\n    foreach(n; numbers.split(\" \"))\n    {\n\
    \        nums ~= to!int(n);\n    }\n    nums.sort;\n    string result;\n    foreach(n;\
    \ nums)\n    {\n        result ~= to!string(n) ~ \" \";\n    }\n    return result.stripRight;\n\
    }\nunittest\n{\n    alias candidate = sort_numbers;\n\n    assert(candidate(\"\
    \") == \"\");\n    assert(candidate(\"three\") == \"three\");\n    assert(candidate(\"\
    three five nine\") == \"three five nine\");\n    assert(candidate(\"five zero\
    \ four seven nine eight\") == \"zero four five seven eight nine\");\n    assert(candidate(\"\
    six five four three two one zero\") == \"zero one two three four five six\");\n\
    }\nvoid main(){}"
  status: SyntaxError
  stderr: '/tmp/tmp7m_vba7f.d(14): Error: no property `split` for type `string`

    /tmp/tmp7m_vba7f.d(18): Error: no property `sort` for type `int[]`

    /tmp/tmp7m_vba7f.d(22): Error: template instance `to!string` template `to` is
    not defined, did you mean No?

    /tmp/tmp7m_vba7f.d(24): Error: no property `stripRight` for type `string`

    Failed: ["dmd", "-unittest", "-v", "-o-", "/tmp/tmp7m_vba7f.d", "-I/tmp"]

    '
  stdout: ''
  timestamp: 1660163090
- exit_code: 1
  program: "import std.typecons;\nimport std.math;\n/*\n Input is a space-delimited\
    \ string of numberals from 'zero' to 'nine'.\n    Valid choices are 'zero', 'one',\
    \ 'two', 'three', 'four', 'five', 'six', 'seven', 'eight' and 'nine'.\n    Return\
    \ the string with numbers sorted from smallest to largest\n    >>> sort_numbers(\"\
    three one five\")\n    \"one three five\"\n    \n*/\nstring sort_numbers(string\
    \ numbers) \n{\n    string[] nums = numbers.split(\" \");\n    int[] nums_int\
    \ = new int[nums.length];\n    foreach(i, num; nums)\n    {\n        nums_int[i]\
    \ = num_to_int(num);\n    }\n    sort(nums_int);\n    foreach(i, num; nums_int)\n\
    \    {\n        nums[i] = int_to_num(num);\n    }\n    return join(nums, \" \"\
    );\n}\nunittest\n{\n    alias candidate = sort_numbers;\n\n    assert(candidate(\"\
    \") == \"\");\n    assert(candidate(\"three\") == \"three\");\n    assert(candidate(\"\
    three five nine\") == \"three five nine\");\n    assert(candidate(\"five zero\
    \ four seven nine eight\") == \"zero four five seven eight nine\");\n    assert(candidate(\"\
    six five four three two one zero\") == \"zero one two three four five six\");\n\
    }\nvoid main(){}"
  status: SyntaxError
  stderr: '/tmp/tmphrzyu1es.d(13): Error: no property `split` for type `string`

    /tmp/tmphrzyu1es.d(17): Error: undefined identifier `num_to_int`

    /tmp/tmphrzyu1es.d(19): Error: undefined identifier `sort`, did you mean function
    `sqrt`?

    /tmp/tmphrzyu1es.d(22): Error: undefined identifier `int_to_num`

    /tmp/tmphrzyu1es.d(24): Error: undefined identifier `join`, did you mean function
    `main`?

    Failed: ["dmd", "-unittest", "-v", "-o-", "/tmp/tmphrzyu1es.d", "-I/tmp"]

    '
  stdout: ''
  timestamp: 1660163090
- exit_code: 1
  program: "import std.typecons;\nimport std.math;\n/*\n Input is a space-delimited\
    \ string of numberals from 'zero' to 'nine'.\n    Valid choices are 'zero', 'one',\
    \ 'two', 'three', 'four', 'five', 'six', 'seven', 'eight' and 'nine'.\n    Return\
    \ the string with numbers sorted from smallest to largest\n    >>> sort_numbers(\"\
    three one five\")\n    \"one three five\"\n    \n*/\nstring sort_numbers(string\
    \ numbers) \n{\n    string[] nums = numbers.split();\n    int[] nums_int = new\
    \ int[nums.length];\n    foreach(i, num; nums)\n    {\n        switch(num)\n \
    \       {\n            case \"zero\":\n                nums_int[i] = 0;\n    \
    \            break;\n            case \"one\":\n                nums_int[i] =\
    \ 1;\n                break;\n            case \"two\":\n                nums_int[i]\
    \ = 2;\n                break;\n            case \"three\":\n                nums_int[i]\
    \ = 3;\n                break;\n            case \"four\":\n                nums_int[i]\
    \ = 4;\n                break;\n            case \"five\":\n                nums_int[i]\
    \ = 5;\n                break;\n            case \"six\":\n                nums_int[i]\
    \ = 6;\n                break;\n            case \"seven\":\n                nums_int[i]\
    \ = 7;\n                break;\n            case \"eight\":\n                nums_int[i]\
    \ = 8;\n                break;\n            case \"nine\":\n                nums_int[i]\
    \ = 9;\n                break;\n        }\n    }\n    nums_int.sort();\n    foreach(i,\
    \ num; nums_int)\n    {\n        switch(num)\n        {\n            case 0:\n\
    \                nums[i] = \"zero\";\n                break;\n            case\
    \ 1:\n                nums[i] = \"one\";\n                break;\n           \
    \ case 2:\n                nums[i] = \"two\";\n                break;\n      \
    \      case 3:\n                nums[i] = \"three\";\n                break;\n\
    \            case 4:\n                nums[i] = \"four\";\n                break;\n\
    \            case 5:\n                nums[i] = \"five\";\n                break;\n\
    \            case 6:\n                nums[i] = \"six\";\n                break;\n\
    \            case 7:\n                nums[i] = \"seven\";\n                break;\n\
    \            case 8:\n                nums[i] = \"eight\";\n                break;\n\
    \            case 9:\n                nums[i] = \"nine\";\n\nunittest\n{\n   \
    \ alias candidate = sort_numbers;\n\n    assert(candidate(\"\") == \"\");\n  \
    \  assert(candidate(\"three\") == \"three\");\n    assert(candidate(\"three five\
    \ nine\") == \"three five nine\");\n    assert(candidate(\"five zero four seven\
    \ nine eight\") == \"zero four five seven eight nine\");\n    assert(candidate(\"\
    six five four three two one zero\") == \"zero one two three four five six\");\n\
    }\nvoid main(){}"
  status: SyntaxError
  stderr: '/tmp/tmp_yzj2kiv.d(86): Error: found `unittest` instead of statement

    /tmp/tmp_yzj2kiv.d(96): Error: found `End of File` when expecting `}` following
    compound statement

    /tmp/tmp_yzj2kiv.d(96): Error: found `End of File` when expecting `}` following
    compound statement

    Failed: ["dmd", "-unittest", "-v", "-o-", "/tmp/tmp_yzj2kiv.d", "-I/tmp"]

    '
  stdout: ''
  timestamp: 1660163090
- exit_code: 1
  program: "import std.typecons;\nimport std.math;\n/*\n Input is a space-delimited\
    \ string of numberals from 'zero' to 'nine'.\n    Valid choices are 'zero', 'one',\
    \ 'two', 'three', 'four', 'five', 'six', 'seven', 'eight' and 'nine'.\n    Return\
    \ the string with numbers sorted from smallest to largest\n    >>> sort_numbers(\"\
    three one five\")\n    \"one three five\"\n    \n*/\nstring sort_numbers(string\
    \ numbers) \n{\n    string[] nums = numbers.split(\" \");\n    int[] nums_int\
    \ = new int[nums.length];\n    foreach(i, num; nums)\n    {\n        nums_int[i]\
    \ = num_to_int(num);\n    }\n    nums_int.sort;\n    foreach(i, num; nums_int)\n\
    \    {\n        nums[i] = int_to_num(num);\n    }\n    return nums.join(\" \"\
    );\n}\nunittest\n{\n    alias candidate = sort_numbers;\n\n    assert(candidate(\"\
    \") == \"\");\n    assert(candidate(\"three\") == \"three\");\n    assert(candidate(\"\
    three five nine\") == \"three five nine\");\n    assert(candidate(\"five zero\
    \ four seven nine eight\") == \"zero four five seven eight nine\");\n    assert(candidate(\"\
    six five four three two one zero\") == \"zero one two three four five six\");\n\
    }\nvoid main(){}"
  status: SyntaxError
  stderr: '/tmp/tmp7jfw0jvs.d(13): Error: no property `split` for type `string`

    /tmp/tmp7jfw0jvs.d(17): Error: undefined identifier `num_to_int`

    /tmp/tmp7jfw0jvs.d(19): Error: no property `sort` for type `int[]`

    /tmp/tmp7jfw0jvs.d(22): Error: undefined identifier `int_to_num`

    /tmp/tmp7jfw0jvs.d(24): Error: no property `join` for type `string[]`

    Failed: ["dmd", "-unittest", "-v", "-o-", "/tmp/tmp7jfw0jvs.d", "-I/tmp"]

    '
  stdout: ''
  timestamp: 1660163090
- exit_code: 1
  program: "import std.typecons;\nimport std.math;\n/*\n Input is a space-delimited\
    \ string of numberals from 'zero' to 'nine'.\n    Valid choices are 'zero', 'one',\
    \ 'two', 'three', 'four', 'five', 'six', 'seven', 'eight' and 'nine'.\n    Return\
    \ the string with numbers sorted from smallest to largest\n    >>> sort_numbers(\"\
    three one five\")\n    \"one three five\"\n    \n*/\nstring sort_numbers(string\
    \ numbers) \n{\n    string[] nums = numbers.split(\" \");\n    int[] nums_int\
    \ = new int[nums.length];\n    foreach(i, num; nums)\n    {\n        switch(num)\n\
    \        {\n            case \"zero\": nums_int[i] = 0; break;\n            case\
    \ \"one\": nums_int[i] = 1; break;\n            case \"two\": nums_int[i] = 2;\
    \ break;\n            case \"three\": nums_int[i] = 3; break;\n            case\
    \ \"four\": nums_int[i] = 4; break;\n            case \"five\": nums_int[i] =\
    \ 5; break;\n            case \"six\": nums_int[i] = 6; break;\n            case\
    \ \"seven\": nums_int[i] = 7; break;\n            case \"eight\": nums_int[i]\
    \ = 8; break;\n            case \"nine\": nums_int[i] = 9; break;\n        }\n\
    \    }\n    nums_int.sort;\n    string[] nums_string = new string[nums.length];\n\
    \    foreach(i, num; nums_int)\n    {\n        switch(num)\n        {\n      \
    \      case 0: nums_string[i] = \"zero\"; break;\n            case 1: nums_string[i]\
    \ = \"one\"; break;\n            case 2: nums_string[i] = \"two\"; break;\n  \
    \          case 3: nums_string[i] = \"three\"; break;\n            case 4: nums_string[i]\
    \ = \"four\"; break;\n            case 5: nums_string[i] = \"five\"; break;\n\
    \            case 6: nums_string[i] = \"six\"; break;\n            case 7: nums_string[i]\
    \ = \"seven\"; break;\n            case 8: nums_string[i] = \"eight\"; break;\n\
    \            case 9: nums_string[i] = \"nine\"; break;\n        }\n    }\n   \
    \ return nums_string.join(\" \");\n}\nunittest\n{\n    alias candidate = sort_numbers;\n\
    \n    assert(candidate(\"\") == \"\");\n    assert(candidate(\"three\") == \"\
    three\");\n    assert(candidate(\"three five nine\") == \"three five nine\");\n\
    \    assert(candidate(\"five zero four seven nine eight\") == \"zero four five\
    \ seven eight nine\");\n    assert(candidate(\"six five four three two one zero\"\
    ) == \"zero one two three four five six\");\n}\nvoid main(){}"
  status: SyntaxError
  stderr: '/tmp/tmpjbxhjut2.d(13): Error: no property `split` for type `string`

    /tmp/tmpjbxhjut2.d(17): Error: `switch` statement without a `default`; use `final
    switch` or add `default: assert(0);` or add `default: break;`

    /tmp/tmpjbxhjut2.d(31): Error: no property `sort` for type `int[]`

    /tmp/tmpjbxhjut2.d(35): Error: `switch` statement without a `default`; use `final
    switch` or add `default: assert(0);` or add `default: break;`

    /tmp/tmpjbxhjut2.d(49): Error: no property `join` for type `string[]`

    Failed: ["dmd", "-unittest", "-v", "-o-", "/tmp/tmpjbxhjut2.d", "-I/tmp"]

    '
  stdout: ''
  timestamp: 1660163090
- exit_code: 1
  program: "import std.typecons;\nimport std.math;\n/*\n Input is a space-delimited\
    \ string of numberals from 'zero' to 'nine'.\n    Valid choices are 'zero', 'one',\
    \ 'two', 'three', 'four', 'five', 'six', 'seven', 'eight' and 'nine'.\n    Return\
    \ the string with numbers sorted from smallest to largest\n    >>> sort_numbers(\"\
    three one five\")\n    \"one three five\"\n    \n*/\nstring sort_numbers(string\
    \ numbers) \n{\n    string[] nums = numbers.split(\" \");\n    int[] nums_int\
    \ = new int[nums.length];\n    foreach(i, num; nums)\n    {\n        nums_int[i]\
    \ = to!int(num);\n    }\n    nums_int.sort;\n    foreach(i, num; nums_int)\n \
    \   {\n        nums[i] = to!string(num);\n    }\n    return nums.join(\" \");\n\
    }\nunittest\n{\n    alias candidate = sort_numbers;\n\n    assert(candidate(\"\
    \") == \"\");\n    assert(candidate(\"three\") == \"three\");\n    assert(candidate(\"\
    three five nine\") == \"three five nine\");\n    assert(candidate(\"five zero\
    \ four seven nine eight\") == \"zero four five seven eight nine\");\n    assert(candidate(\"\
    six five four three two one zero\") == \"zero one two three four five six\");\n\
    }\nvoid main(){}"
  status: SyntaxError
  stderr: '/tmp/tmpiq89aqc2.d(13): Error: no property `split` for type `string`

    /tmp/tmpiq89aqc2.d(17): Error: template instance `to!int` template `to` is not
    defined, did you mean No?

    /tmp/tmpiq89aqc2.d(19): Error: no property `sort` for type `int[]`

    /tmp/tmpiq89aqc2.d(22): Error: template instance `to!string` template `to` is
    not defined, did you mean No?

    /tmp/tmpiq89aqc2.d(24): Error: no property `join` for type `string[]`

    Failed: ["dmd", "-unittest", "-v", "-o-", "/tmp/tmpiq89aqc2.d", "-I/tmp"]

    '
  stdout: ''
  timestamp: 1660163090
- exit_code: 1
  program: "import std.typecons;\nimport std.math;\n/*\n Input is a space-delimited\
    \ string of numberals from 'zero' to 'nine'.\n    Valid choices are 'zero', 'one',\
    \ 'two', 'three', 'four', 'five', 'six', 'seven', 'eight' and 'nine'.\n    Return\
    \ the string with numbers sorted from smallest to largest\n    >>> sort_numbers(\"\
    three one five\")\n    \"one three five\"\n    \n*/\nstring sort_numbers(string\
    \ numbers) \n{\n    string[] nums = numbers.split(\" \");\n    string[] nums_sorted\
    \ = nums.dup;\n    nums_sorted.sort();\n    return nums_sorted.join(\" \");\n\
    }\nunittest\n{\n    alias candidate = sort_numbers;\n\n    assert(candidate(\"\
    \") == \"\");\n    assert(candidate(\"three\") == \"three\");\n    assert(candidate(\"\
    three five nine\") == \"three five nine\");\n    assert(candidate(\"five zero\
    \ four seven nine eight\") == \"zero four five seven eight nine\");\n    assert(candidate(\"\
    six five four three two one zero\") == \"zero one two three four five six\");\n\
    }\nvoid main(){}"
  status: SyntaxError
  stderr: '/tmp/tmpzbpva9w2.d(13): Error: no property `split` for type `string`

    /tmp/tmpzbpva9w2.d(15): Error: no property `sort` for type `string[]`

    /tmp/tmpzbpva9w2.d(16): Error: no property `join` for type `string[]`

    Failed: ["dmd", "-unittest", "-v", "-o-", "/tmp/tmpzbpva9w2.d", "-I/tmp"]

    '
  stdout: ''
  timestamp: 1660163090
- exit_code: 1
  program: "import std.typecons;\nimport std.math;\n/*\n Input is a space-delimited\
    \ string of numberals from 'zero' to 'nine'.\n    Valid choices are 'zero', 'one',\
    \ 'two', 'three', 'four', 'five', 'six', 'seven', 'eight' and 'nine'.\n    Return\
    \ the string with numbers sorted from smallest to largest\n    >>> sort_numbers(\"\
    three one five\")\n    \"one three five\"\n    \n*/\nstring sort_numbers(string\
    \ numbers) \n{\n    string[] nums = numbers.split(\" \");\n    int[] nums_int\
    \ = new int[nums.length];\n    foreach(i, num; nums)\n    {\n        nums_int[i]\
    \ = to!int(num);\n    }\n    sort(nums_int);\n    string result = \"\";\n    foreach(num;\
    \ nums_int)\n    {\n        result ~= to!string(num) ~ \" \";\n    }\n    return\
    \ result.stripRight();\n}\nunittest\n{\n    alias candidate = sort_numbers;\n\n\
    \    assert(candidate(\"\") == \"\");\n    assert(candidate(\"three\") == \"three\"\
    );\n    assert(candidate(\"three five nine\") == \"three five nine\");\n    assert(candidate(\"\
    five zero four seven nine eight\") == \"zero four five seven eight nine\");\n\
    \    assert(candidate(\"six five four three two one zero\") == \"zero one two\
    \ three four five six\");\n}\nvoid main(){}"
  status: SyntaxError
  stderr: '/tmp/tmpuj2nx7js.d(13): Error: no property `split` for type `string`

    /tmp/tmpuj2nx7js.d(17): Error: template instance `to!int` template `to` is not
    defined, did you mean No?

    /tmp/tmpuj2nx7js.d(19): Error: undefined identifier `sort`, did you mean function
    `sqrt`?

    /tmp/tmpuj2nx7js.d(23): Error: template instance `to!string` template `to` is
    not defined, did you mean No?

    /tmp/tmpuj2nx7js.d(25): Error: no property `stripRight` for type `string`

    Failed: ["dmd", "-unittest", "-v", "-o-", "/tmp/tmpuj2nx7js.d", "-I/tmp"]

    '
  stdout: ''
  timestamp: 1660163090
- exit_code: 1
  program: "import std.typecons;\nimport std.math;\n/*\n Input is a space-delimited\
    \ string of numberals from 'zero' to 'nine'.\n    Valid choices are 'zero', 'one',\
    \ 'two', 'three', 'four', 'five', 'six', 'seven', 'eight' and 'nine'.\n    Return\
    \ the string with numbers sorted from smallest to largest\n    >>> sort_numbers(\"\
    three one five\")\n    \"one three five\"\n    \n*/\nstring sort_numbers(string\
    \ numbers) \n{\n    string[] nums = numbers.split(\" \");\n    int[] nums_int\
    \ = new int[nums.length];\n    foreach(int i, string num; nums)\n    {\n     \
    \   nums_int[i] = to!int(num);\n    }\n    sort(nums_int);\n    foreach(int i,\
    \ int num; nums_int)\n    {\n        nums[i] = to!string(num);\n    }\n    return\
    \ join(nums, \" \");\n}\nunittest\n{\n    alias candidate = sort_numbers;\n\n\
    \    assert(candidate(\"\") == \"\");\n    assert(candidate(\"three\") == \"three\"\
    );\n    assert(candidate(\"three five nine\") == \"three five nine\");\n    assert(candidate(\"\
    five zero four seven nine eight\") == \"zero four five seven eight nine\");\n\
    \    assert(candidate(\"six five four three two one zero\") == \"zero one two\
    \ three four five six\");\n}\nvoid main(){}"
  status: SyntaxError
  stderr: '/tmp/tmpci0dh84r.d(13): Error: no property `split` for type `string`

    /tmp/tmpci0dh84r.d(17): Error: template instance `to!int` template `to` is not
    defined, did you mean No?

    /tmp/tmpci0dh84r.d(19): Error: undefined identifier `sort`, did you mean function
    `sqrt`?

    /tmp/tmpci0dh84r.d(22): Error: template instance `to!string` template `to` is
    not defined, did you mean No?

    /tmp/tmpci0dh84r.d(24): Error: undefined identifier `join`, did you mean function
    `main`?

    Failed: ["dmd", "-unittest", "-v", "-o-", "/tmp/tmpci0dh84r.d", "-I/tmp"]

    '
  stdout: ''
  timestamp: 1660163090
- exit_code: 1
  program: "import std.typecons;\nimport std.math;\n/*\n Input is a space-delimited\
    \ string of numberals from 'zero' to 'nine'.\n    Valid choices are 'zero', 'one',\
    \ 'two', 'three', 'four', 'five', 'six', 'seven', 'eight' and 'nine'.\n    Return\
    \ the string with numbers sorted from smallest to largest\n    >>> sort_numbers(\"\
    three one five\")\n    \"one three five\"\n    \n*/\nstring sort_numbers(string\
    \ numbers) \n{\n    string[] nums = numbers.split(\" \");\n    int[] nums_int\
    \ = new int[nums.length];\n    foreach(i, num; nums)\n    {\n        nums_int[i]\
    \ = num_to_int(num);\n    }\n    nums_int.sort;\n    foreach(i, num; nums_int)\n\
    \    {\n        nums[i] = int_to_num(num);\n    }\n    return nums.join(\" \"\
    );\n}\nunittest\n{\n    alias candidate = sort_numbers;\n\n    assert(candidate(\"\
    \") == \"\");\n    assert(candidate(\"three\") == \"three\");\n    assert(candidate(\"\
    three five nine\") == \"three five nine\");\n    assert(candidate(\"five zero\
    \ four seven nine eight\") == \"zero four five seven eight nine\");\n    assert(candidate(\"\
    six five four three two one zero\") == \"zero one two three four five six\");\n\
    }\nvoid main(){}"
  status: SyntaxError
  stderr: '/tmp/tmp7jfw0jvs.d(13): Error: no property `split` for type `string`

    /tmp/tmp7jfw0jvs.d(17): Error: undefined identifier `num_to_int`

    /tmp/tmp7jfw0jvs.d(19): Error: no property `sort` for type `int[]`

    /tmp/tmp7jfw0jvs.d(22): Error: undefined identifier `int_to_num`

    /tmp/tmp7jfw0jvs.d(24): Error: no property `join` for type `string[]`

    Failed: ["dmd", "-unittest", "-v", "-o-", "/tmp/tmp7jfw0jvs.d", "-I/tmp"]

    '
  stdout: ''
  timestamp: 1660163090
- exit_code: 1
  program: "import std.typecons;\nimport std.math;\n/*\n Input is a space-delimited\
    \ string of numberals from 'zero' to 'nine'.\n    Valid choices are 'zero', 'one',\
    \ 'two', 'three', 'four', 'five', 'six', 'seven', 'eight' and 'nine'.\n    Return\
    \ the string with numbers sorted from smallest to largest\n    >>> sort_numbers(\"\
    three one five\")\n    \"one three five\"\n    \n*/\nstring sort_numbers(string\
    \ numbers) \n{\n    string[] nums = numbers.split(\" \");\n    int[] nums_int\
    \ = new int[nums.length];\n    foreach(i, num; nums)\n    {\n        nums_int[i]\
    \ = num_to_int(num);\n    }\n    sort(nums_int);\n    foreach(i, num; nums_int)\n\
    \    {\n        nums[i] = int_to_num(num);\n    }\n    return join(nums, \" \"\
    );\n}\nunittest\n{\n    alias candidate = sort_numbers;\n\n    assert(candidate(\"\
    \") == \"\");\n    assert(candidate(\"three\") == \"three\");\n    assert(candidate(\"\
    three five nine\") == \"three five nine\");\n    assert(candidate(\"five zero\
    \ four seven nine eight\") == \"zero four five seven eight nine\");\n    assert(candidate(\"\
    six five four three two one zero\") == \"zero one two three four five six\");\n\
    }\nvoid main(){}"
  status: SyntaxError
  stderr: '/tmp/tmphrzyu1es.d(13): Error: no property `split` for type `string`

    /tmp/tmphrzyu1es.d(17): Error: undefined identifier `num_to_int`

    /tmp/tmphrzyu1es.d(19): Error: undefined identifier `sort`, did you mean function
    `sqrt`?

    /tmp/tmphrzyu1es.d(22): Error: undefined identifier `int_to_num`

    /tmp/tmphrzyu1es.d(24): Error: undefined identifier `join`, did you mean function
    `main`?

    Failed: ["dmd", "-unittest", "-v", "-o-", "/tmp/tmphrzyu1es.d", "-I/tmp"]

    '
  stdout: ''
  timestamp: 1660163090
- exit_code: 1
  program: "import std.typecons;\nimport std.math;\n/*\n Input is a space-delimited\
    \ string of numberals from 'zero' to 'nine'.\n    Valid choices are 'zero', 'one',\
    \ 'two', 'three', 'four', 'five', 'six', 'seven', 'eight' and 'nine'.\n    Return\
    \ the string with numbers sorted from smallest to largest\n    >>> sort_numbers(\"\
    three one five\")\n    \"one three five\"\n    \n*/\nstring sort_numbers(string\
    \ numbers) \n{\n    int[] nums;\n    foreach(n; numbers.split)\n    {\n      \
    \  nums ~= to!int(n);\n    }\n    nums.sort;\n    string result;\n    foreach(n;\
    \ nums)\n    {\n        result ~= to!string(n) ~ \" \";\n    }\n    return result.stripRight;\n\
    }\nunittest\n{\n    alias candidate = sort_numbers;\n\n    assert(candidate(\"\
    \") == \"\");\n    assert(candidate(\"three\") == \"three\");\n    assert(candidate(\"\
    three five nine\") == \"three five nine\");\n    assert(candidate(\"five zero\
    \ four seven nine eight\") == \"zero four five seven eight nine\");\n    assert(candidate(\"\
    six five four three two one zero\") == \"zero one two three four five six\");\n\
    }\nvoid main(){}"
  status: SyntaxError
  stderr: '/tmp/tmpyorzw1ip.d(14): Error: no property `split` for type `string`

    /tmp/tmpyorzw1ip.d(18): Error: no property `sort` for type `int[]`

    /tmp/tmpyorzw1ip.d(22): Error: template instance `to!string` template `to` is
    not defined, did you mean No?

    /tmp/tmpyorzw1ip.d(24): Error: no property `stripRight` for type `string`

    Failed: ["dmd", "-unittest", "-v", "-o-", "/tmp/tmpyorzw1ip.d", "-I/tmp"]

    '
  stdout: ''
  timestamp: 1660163090
- exit_code: 1
  program: "import std.typecons;\nimport std.math;\n/*\n Input is a space-delimited\
    \ string of numberals from 'zero' to 'nine'.\n    Valid choices are 'zero', 'one',\
    \ 'two', 'three', 'four', 'five', 'six', 'seven', 'eight' and 'nine'.\n    Return\
    \ the string with numbers sorted from smallest to largest\n    >>> sort_numbers(\"\
    three one five\")\n    \"one three five\"\n    \n*/\nstring sort_numbers(string\
    \ numbers) \n{\n    string[] nums = numbers.split(\" \");\n    int[] nums_int\
    \ = new int[nums.length];\n    foreach(i, num; nums)\n    {\n        switch(num)\n\
    \        {\n            case \"zero\":\n                nums_int[i] = 0;\n   \
    \             break;\n            case \"one\":\n                nums_int[i] =\
    \ 1;\n                break;\n            case \"two\":\n                nums_int[i]\
    \ = 2;\n                break;\n            case \"three\":\n                nums_int[i]\
    \ = 3;\n                break;\n            case \"four\":\n                nums_int[i]\
    \ = 4;\n                break;\n            case \"five\":\n                nums_int[i]\
    \ = 5;\n                break;\n            case \"six\":\n                nums_int[i]\
    \ = 6;\n                break;\n            case \"seven\":\n                nums_int[i]\
    \ = 7;\n                break;\n            case \"eight\":\n                nums_int[i]\
    \ = 8;\n                break;\n            case \"nine\":\n                nums_int[i]\
    \ = 9;\n                break;\n        }\n    }\n    nums_int.sort();\n    foreach(i,\
    \ num; nums_int)\n    {\n        switch(num)\n        {\n            case 0:\n\
    \                nums[i] = \"zero\";\n                break;\n            case\
    \ 1:\n                nums[i] = \"one\";\n                break;\n           \
    \ case 2:\n                nums[i] = \"two\";\n                break;\n      \
    \      case 3:\n                nums[i] = \"three\";\n                break;\n\
    \            case 4:\n                nums[i] = \"four\";\n                break;\n\
    \            case 5:\n                nums[i] = \"five\";\n                break;\n\
    \            case 6:\n                nums[i] = \"six\";\n                break;\n\
    \            case 7:\n                nums[i] = \"seven\";\n                break;\n\
    \            case 8:\n                nums[i] = \"eight\";\n                break;\n\
    \            case 9:\n                nums[i] = \"nine\nunittest\n{\n    alias\
    \ candidate = sort_numbers;\n\n    assert(candidate(\"\") == \"\");\n    assert(candidate(\"\
    three\") == \"three\");\n    assert(candidate(\"three five nine\") == \"three\
    \ five nine\");\n    assert(candidate(\"five zero four seven nine eight\") ==\
    \ \"zero four five seven eight nine\");\n    assert(candidate(\"six five four\
    \ three two one zero\") == \"zero one two three four five six\");\n}\nvoid main(){}"
  status: SyntaxError
  stderr: '/tmp/tmpq_hzlrvp.d(89): Error: Implicit string concatenation is deprecated,
    use "nine\x0aunittest\x0a{\x0a    alias candidate = sort_numbers;\x0a\x0a    assert(candidate("
    ~ ") == " instead

    /tmp/tmpq_hzlrvp.d(89): Error: Implicit string concatenation is deprecated, use
    ") == " ~ ");\x0a    assert(candidate(" instead

    /tmp/tmpq_hzlrvp.d(90): Error: found `three` when expecting `;` following statement

    /tmp/tmpq_hzlrvp.d(90): Error: found `three` when expecting `;` following statement

    /tmp/tmpq_hzlrvp.d(91): Error: found `three` when expecting `;` following statement

    /tmp/tmpq_hzlrvp.d(91): Error: found `nine` when expecting `;` following statement

    /tmp/tmpq_hzlrvp.d(91): Error: found `three` when expecting `;` following statement

    /tmp/tmpq_hzlrvp.d(91): Error: found `nine` when expecting `;` following statement

    /tmp/tmpq_hzlrvp.d(92): Error: found `five` when expecting `;` following statement

    /tmp/tmpq_hzlrvp.d(92): Error: found `four` when expecting `;` following statement

    /tmp/tmpq_hzlrvp.d(92): Error: found `'
  stdout: ''
  timestamp: 1660163090
- exit_code: 1
  program: "import std.typecons;\nimport std.math;\n/*\n Input is a space-delimited\
    \ string of numberals from 'zero' to 'nine'.\n    Valid choices are 'zero', 'one',\
    \ 'two', 'three', 'four', 'five', 'six', 'seven', 'eight' and 'nine'.\n    Return\
    \ the string with numbers sorted from smallest to largest\n    >>> sort_numbers(\"\
    three one five\")\n    \"one three five\"\n    \n*/\nstring sort_numbers(string\
    \ numbers) \n{\n    string[] nums = numbers.split(\" \");\n    int[] nums_int\
    \ = new int[nums.length];\n    foreach(i, num; nums)\n    {\n        switch(num)\n\
    \        {\n            case \"zero\":\n                nums_int[i] = 0;\n   \
    \             break;\n            case \"one\":\n                nums_int[i] =\
    \ 1;\n                break;\n            case \"two\":\n                nums_int[i]\
    \ = 2;\n                break;\n            case \"three\":\n                nums_int[i]\
    \ = 3;\n                break;\n            case \"four\":\n                nums_int[i]\
    \ = 4;\n                break;\n            case \"five\":\n                nums_int[i]\
    \ = 5;\n                break;\n            case \"six\":\n                nums_int[i]\
    \ = 6;\n                break;\n            case \"seven\":\n                nums_int[i]\
    \ = 7;\n                break;\n            case \"eight\":\n                nums_int[i]\
    \ = 8;\n                break;\n            case \"nine\":\n                nums_int[i]\
    \ = 9;\n                break;\n        }\n    }\n    nums_int.sort;\n    foreach(i,\
    \ num; nums_int)\n    {\n        switch(num)\n        {\n            case 0:\n\
    \                nums[i] = \"zero\";\n                break;\n            case\
    \ 1:\n                nums[i] = \"one\";\n                break;\n           \
    \ case 2:\n                nums[i] = \"two\";\n                break;\n      \
    \      case 3:\n                nums[i] = \"three\";\n                break;\n\
    \            case 4:\n                nums[i] = \"four\";\n                break;\n\
    \            case 5:\n                nums[i] = \"five\";\n                break;\n\
    \            case 6:\n                nums[i] = \"six\";\n                break;\n\
    \            case 7:\n                nums[i] = \"seven\";\n                break;\n\
    \            case 8:\n                nums[i] = \"eight\";\n                break;\n\
    \            case 9:\n                nums[i] = \"nine\nunittest\n{\n    alias\
    \ candidate = sort_numbers;\n\n    assert(candidate(\"\") == \"\");\n    assert(candidate(\"\
    three\") == \"three\");\n    assert(candidate(\"three five nine\") == \"three\
    \ five nine\");\n    assert(candidate(\"five zero four seven nine eight\") ==\
    \ \"zero four five seven eight nine\");\n    assert(candidate(\"six five four\
    \ three two one zero\") == \"zero one two three four five six\");\n}\nvoid main(){}"
  status: SyntaxError
  stderr: '/tmp/tmpc1u9yce3.d(89): Error: Implicit string concatenation is deprecated,
    use "nine\x0aunittest\x0a{\x0a    alias candidate = sort_numbers;\x0a\x0a    assert(candidate("
    ~ ") == " instead

    /tmp/tmpc1u9yce3.d(89): Error: Implicit string concatenation is deprecated, use
    ") == " ~ ");\x0a    assert(candidate(" instead

    /tmp/tmpc1u9yce3.d(90): Error: found `three` when expecting `;` following statement

    /tmp/tmpc1u9yce3.d(90): Error: found `three` when expecting `;` following statement

    /tmp/tmpc1u9yce3.d(91): Error: found `three` when expecting `;` following statement

    /tmp/tmpc1u9yce3.d(91): Error: found `nine` when expecting `;` following statement

    /tmp/tmpc1u9yce3.d(91): Error: found `three` when expecting `;` following statement

    /tmp/tmpc1u9yce3.d(91): Error: found `nine` when expecting `;` following statement

    /tmp/tmpc1u9yce3.d(92): Error: found `five` when expecting `;` following statement

    /tmp/tmpc1u9yce3.d(92): Error: found `four` when expecting `;` following statement

    /tmp/tmpc1u9yce3.d(92): Error: found `'
  stdout: ''
  timestamp: 1660163090
- exit_code: 1
  program: "import std.typecons;\nimport std.math;\n/*\n Input is a space-delimited\
    \ string of numberals from 'zero' to 'nine'.\n    Valid choices are 'zero', 'one',\
    \ 'two', 'three', 'four', 'five', 'six', 'seven', 'eight' and 'nine'.\n    Return\
    \ the string with numbers sorted from smallest to largest\n    >>> sort_numbers(\"\
    three one five\")\n    \"one three five\"\n    \n*/\nstring sort_numbers(string\
    \ numbers) \n{\n    string[] nums = numbers.split(\" \");\n    string[] nums_sorted\
    \ = nums.dup;\n    nums_sorted.sort!(a, b => a.to!int < b.to!int);\n    return\
    \ nums_sorted.join(\" \");\n}\nunittest\n{\n    alias candidate = sort_numbers;\n\
    \n    assert(candidate(\"\") == \"\");\n    assert(candidate(\"three\") == \"\
    three\");\n    assert(candidate(\"three five nine\") == \"three five nine\");\n\
    \    assert(candidate(\"five zero four seven nine eight\") == \"zero four five\
    \ seven eight nine\");\n    assert(candidate(\"six five four three two one zero\"\
    ) == \"zero one two three four five six\");\n}\nvoid main(){}"
  status: SyntaxError
  stderr: '/tmp/tmpc5it5omq.d(13): Error: no property `split` for type `string`

    /tmp/tmpc5it5omq.d(15): Error: no property `sort` for type `string[]`

    /tmp/tmpc5it5omq.d(16): Error: no property `join` for type `string[]`

    Failed: ["dmd", "-unittest", "-v", "-o-", "/tmp/tmpc5it5omq.d", "-I/tmp"]

    '
  stdout: ''
  timestamp: 1660163090
- exit_code: 1
  program: "import std.typecons;\nimport std.math;\n/*\n Input is a space-delimited\
    \ string of numberals from 'zero' to 'nine'.\n    Valid choices are 'zero', 'one',\
    \ 'two', 'three', 'four', 'five', 'six', 'seven', 'eight' and 'nine'.\n    Return\
    \ the string with numbers sorted from smallest to largest\n    >>> sort_numbers(\"\
    three one five\")\n    \"one three five\"\n    \n*/\nstring sort_numbers(string\
    \ numbers) \n{\n    string[] nums = numbers.split(\" \");\n    string[] nums_sorted\
    \ = nums.dup;\n    nums_sorted.sort;\n    string ret = \"\";\n    foreach(string\
    \ num; nums_sorted)\n    {\n        ret ~= num ~ \" \";\n    }\n    ret = ret.chomp;\n\
    \    return ret;\n}\nunittest\n{\n    alias candidate = sort_numbers;\n\n    assert(candidate(\"\
    \") == \"\");\n    assert(candidate(\"three\") == \"three\");\n    assert(candidate(\"\
    three five nine\") == \"three five nine\");\n    assert(candidate(\"five zero\
    \ four seven nine eight\") == \"zero four five seven eight nine\");\n    assert(candidate(\"\
    six five four three two one zero\") == \"zero one two three four five six\");\n\
    }\nvoid main(){}"
  status: SyntaxError
  stderr: '/tmp/tmp_p5rjskj.d(13): Error: no property `split` for type `string`

    /tmp/tmp_p5rjskj.d(15): Error: no property `sort` for type `string[]`

    /tmp/tmp_p5rjskj.d(21): Error: no property `chomp` for type `string`

    Failed: ["dmd", "-unittest", "-v", "-o-", "/tmp/tmp_p5rjskj.d", "-I/tmp"]

    '
  stdout: ''
  timestamp: 1660163090
- exit_code: 1
  program: "import std.typecons;\nimport std.math;\n/*\n Input is a space-delimited\
    \ string of numberals from 'zero' to 'nine'.\n    Valid choices are 'zero', 'one',\
    \ 'two', 'three', 'four', 'five', 'six', 'seven', 'eight' and 'nine'.\n    Return\
    \ the string with numbers sorted from smallest to largest\n    >>> sort_numbers(\"\
    three one five\")\n    \"one three five\"\n    \n*/\nstring sort_numbers(string\
    \ numbers) \n{\n    string[] nums = numbers.split();\n    int[] num_ints = new\
    \ int[nums.length];\n    foreach(i, num; nums)\n    {\n        num_ints[i] = to!int(num);\n\
    \    }\n    sort(num_ints);\n    foreach(i, num; num_ints)\n    {\n        nums[i]\
    \ = to!string(num);\n    }\n    return nums.join(\" \");\n}\nunittest\n{\n   \
    \ alias candidate = sort_numbers;\n\n    assert(candidate(\"\") == \"\");\n  \
    \  assert(candidate(\"three\") == \"three\");\n    assert(candidate(\"three five\
    \ nine\") == \"three five nine\");\n    assert(candidate(\"five zero four seven\
    \ nine eight\") == \"zero four five seven eight nine\");\n    assert(candidate(\"\
    six five four three two one zero\") == \"zero one two three four five six\");\n\
    }\nvoid main(){}"
  status: SyntaxError
  stderr: '/tmp/tmpvw6u0c2s.d(13): Error: no property `split` for type `string`

    /tmp/tmpvw6u0c2s.d(17): Error: template instance `to!int` template `to` is not
    defined, did you mean No?

    /tmp/tmpvw6u0c2s.d(19): Error: undefined identifier `sort`, did you mean function
    `sqrt`?

    /tmp/tmpvw6u0c2s.d(22): Error: template instance `to!string` template `to` is
    not defined, did you mean No?

    /tmp/tmpvw6u0c2s.d(24): Error: no property `join` for type `string[]`

    Failed: ["dmd", "-unittest", "-v", "-o-", "/tmp/tmpvw6u0c2s.d", "-I/tmp"]

    '
  stdout: ''
  timestamp: 1660163090
- exit_code: 1
  program: "import std.typecons;\nimport std.math;\n/*\n Input is a space-delimited\
    \ string of numberals from 'zero' to 'nine'.\n    Valid choices are 'zero', 'one',\
    \ 'two', 'three', 'four', 'five', 'six', 'seven', 'eight' and 'nine'.\n    Return\
    \ the string with numbers sorted from smallest to largest\n    >>> sort_numbers(\"\
    three one five\")\n    \"one three five\"\n    \n*/\nstring sort_numbers(string\
    \ numbers) \n{\n    string[] nums = numbers.split(\" \");\n    string[] nums_sorted\
    \ = nums.dup;\n    nums_sorted.sort();\n    return nums_sorted.join(\" \");\n\
    }\nunittest\n{\n    alias candidate = sort_numbers;\n\n    assert(candidate(\"\
    \") == \"\");\n    assert(candidate(\"three\") == \"three\");\n    assert(candidate(\"\
    three five nine\") == \"three five nine\");\n    assert(candidate(\"five zero\
    \ four seven nine eight\") == \"zero four five seven eight nine\");\n    assert(candidate(\"\
    six five four three two one zero\") == \"zero one two three four five six\");\n\
    }\nvoid main(){}"
  status: SyntaxError
  stderr: '/tmp/tmpzbpva9w2.d(13): Error: no property `split` for type `string`

    /tmp/tmpzbpva9w2.d(15): Error: no property `sort` for type `string[]`

    /tmp/tmpzbpva9w2.d(16): Error: no property `join` for type `string[]`

    Failed: ["dmd", "-unittest", "-v", "-o-", "/tmp/tmpzbpva9w2.d", "-I/tmp"]

    '
  stdout: ''
  timestamp: 1660163090
- exit_code: 1
  program: "import std.typecons;\nimport std.math;\n/*\n Input is a space-delimited\
    \ string of numberals from 'zero' to 'nine'.\n    Valid choices are 'zero', 'one',\
    \ 'two', 'three', 'four', 'five', 'six', 'seven', 'eight' and 'nine'.\n    Return\
    \ the string with numbers sorted from smallest to largest\n    >>> sort_numbers(\"\
    three one five\")\n    \"one three five\"\n    \n*/\nstring sort_numbers(string\
    \ numbers) \n{\n    string[] nums = numbers.split(\" \");\n    int[] nums_int\
    \ = new int[nums.length];\n    foreach(i, num; nums)\n    {\n        nums_int[i]\
    \ = num_to_int(num);\n    }\n    sort(nums_int);\n    foreach(i, num; nums_int)\n\
    \    {\n        nums[i] = int_to_num(num);\n    }\n    return nums.join(\" \"\
    );\n}\nunittest\n{\n    alias candidate = sort_numbers;\n\n    assert(candidate(\"\
    \") == \"\");\n    assert(candidate(\"three\") == \"three\");\n    assert(candidate(\"\
    three five nine\") == \"three five nine\");\n    assert(candidate(\"five zero\
    \ four seven nine eight\") == \"zero four five seven eight nine\");\n    assert(candidate(\"\
    six five four three two one zero\") == \"zero one two three four five six\");\n\
    }\nvoid main(){}"
  status: SyntaxError
  stderr: '/tmp/tmpuzh2jjb4.d(13): Error: no property `split` for type `string`

    /tmp/tmpuzh2jjb4.d(17): Error: undefined identifier `num_to_int`

    /tmp/tmpuzh2jjb4.d(19): Error: undefined identifier `sort`, did you mean function
    `sqrt`?

    /tmp/tmpuzh2jjb4.d(22): Error: undefined identifier `int_to_num`

    /tmp/tmpuzh2jjb4.d(24): Error: no property `join` for type `string[]`

    Failed: ["dmd", "-unittest", "-v", "-o-", "/tmp/tmpuzh2jjb4.d", "-I/tmp"]

    '
  stdout: ''
  timestamp: 1660163090
- exit_code: 1
  program: "import std.typecons;\nimport std.math;\n/*\n Input is a space-delimited\
    \ string of numberals from 'zero' to 'nine'.\n    Valid choices are 'zero', 'one',\
    \ 'two', 'three', 'four', 'five', 'six', 'seven', 'eight' and 'nine'.\n    Return\
    \ the string with numbers sorted from smallest to largest\n    >>> sort_numbers(\"\
    three one five\")\n    \"one three five\"\n    \n*/\nstring sort_numbers(string\
    \ numbers) \n{\n    string[] nums = numbers.split(\" \");\n    int[] nums_int\
    \ = new int[nums.length];\n    foreach(i, num; nums)\n    {\n        nums_int[i]\
    \ = to!int(num);\n    }\n    nums_int.sort;\n    foreach(i, num; nums_int)\n \
    \   {\n        nums[i] = to!string(num);\n    }\n    return nums.join(\" \");\n\
    }\nunittest\n{\n    alias candidate = sort_numbers;\n\n    assert(candidate(\"\
    \") == \"\");\n    assert(candidate(\"three\") == \"three\");\n    assert(candidate(\"\
    three five nine\") == \"three five nine\");\n    assert(candidate(\"five zero\
    \ four seven nine eight\") == \"zero four five seven eight nine\");\n    assert(candidate(\"\
    six five four three two one zero\") == \"zero one two three four five six\");\n\
    }\nvoid main(){}"
  status: SyntaxError
  stderr: '/tmp/tmpiq89aqc2.d(13): Error: no property `split` for type `string`

    /tmp/tmpiq89aqc2.d(17): Error: template instance `to!int` template `to` is not
    defined, did you mean No?

    /tmp/tmpiq89aqc2.d(19): Error: no property `sort` for type `int[]`

    /tmp/tmpiq89aqc2.d(22): Error: template instance `to!string` template `to` is
    not defined, did you mean No?

    /tmp/tmpiq89aqc2.d(24): Error: no property `join` for type `string[]`

    Failed: ["dmd", "-unittest", "-v", "-o-", "/tmp/tmpiq89aqc2.d", "-I/tmp"]

    '
  stdout: ''
  timestamp: 1660163090
- exit_code: 1
  program: "import std.typecons;\nimport std.math;\n/*\n Input is a space-delimited\
    \ string of numberals from 'zero' to 'nine'.\n    Valid choices are 'zero', 'one',\
    \ 'two', 'three', 'four', 'five', 'six', 'seven', 'eight' and 'nine'.\n    Return\
    \ the string with numbers sorted from smallest to largest\n    >>> sort_numbers(\"\
    three one five\")\n    \"one three five\"\n    \n*/\nstring sort_numbers(string\
    \ numbers) \n{\n    string[] nums = numbers.split(\" \");\n    int[] nums_int\
    \ = new int[nums.length];\n    foreach(i, num; nums)\n    {\n        nums_int[i]\
    \ = to!int(num);\n    }\n    nums_int.sort;\n    foreach(i, num; nums_int)\n \
    \   {\n        nums[i] = to!string(num);\n    }\n    return nums.join(\" \");\n\
    }\nunittest\n{\n    alias candidate = sort_numbers;\n\n    assert(candidate(\"\
    \") == \"\");\n    assert(candidate(\"three\") == \"three\");\n    assert(candidate(\"\
    three five nine\") == \"three five nine\");\n    assert(candidate(\"five zero\
    \ four seven nine eight\") == \"zero four five seven eight nine\");\n    assert(candidate(\"\
    six five four three two one zero\") == \"zero one two three four five six\");\n\
    }\nvoid main(){}"
  status: SyntaxError
  stderr: '/tmp/tmpiq89aqc2.d(13): Error: no property `split` for type `string`

    /tmp/tmpiq89aqc2.d(17): Error: template instance `to!int` template `to` is not
    defined, did you mean No?

    /tmp/tmpiq89aqc2.d(19): Error: no property `sort` for type `int[]`

    /tmp/tmpiq89aqc2.d(22): Error: template instance `to!string` template `to` is
    not defined, did you mean No?

    /tmp/tmpiq89aqc2.d(24): Error: no property `join` for type `string[]`

    Failed: ["dmd", "-unittest", "-v", "-o-", "/tmp/tmpiq89aqc2.d", "-I/tmp"]

    '
  stdout: ''
  timestamp: 1660163090
- exit_code: 1
  program: "import std.typecons;\nimport std.math;\n/*\n Input is a space-delimited\
    \ string of numberals from 'zero' to 'nine'.\n    Valid choices are 'zero', 'one',\
    \ 'two', 'three', 'four', 'five', 'six', 'seven', 'eight' and 'nine'.\n    Return\
    \ the string with numbers sorted from smallest to largest\n    >>> sort_numbers(\"\
    three one five\")\n    \"one three five\"\n    \n*/\nstring sort_numbers(string\
    \ numbers) \n{\n    string[] nums = numbers.split(\" \");\n    string[] nums_sorted\
    \ = nums.sort();\n    return nums_sorted.join(\" \");\n}\nunittest\n{\n    alias\
    \ candidate = sort_numbers;\n\n    assert(candidate(\"\") == \"\");\n    assert(candidate(\"\
    three\") == \"three\");\n    assert(candidate(\"three five nine\") == \"three\
    \ five nine\");\n    assert(candidate(\"five zero four seven nine eight\") ==\
    \ \"zero four five seven eight nine\");\n    assert(candidate(\"six five four\
    \ three two one zero\") == \"zero one two three four five six\");\n}\nvoid main(){}"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660163090
- exit_code: 1
  program: "import std.typecons;\nimport std.math;\n/*\n Input is a space-delimited\
    \ string of numberals from 'zero' to 'nine'.\n    Valid choices are 'zero', 'one',\
    \ 'two', 'three', 'four', 'five', 'six', 'seven', 'eight' and 'nine'.\n    Return\
    \ the string with numbers sorted from smallest to largest\n    >>> sort_numbers(\"\
    three one five\")\n    \"one three five\"\n    \n*/\nstring sort_numbers(string\
    \ numbers) \n{\n    string[] nums = numbers.split(\" \");\n    int[] nums_int\
    \ = new int[nums.length];\n    foreach(i, num; nums)\n    {\n        nums_int[i]\
    \ = to!int(num);\n    }\n    sort(nums_int);\n    foreach(i, num; nums_int)\n\
    \    {\n        nums[i] = to!string(num);\n    }\n    return join(nums, \" \"\
    );\n}\nunittest\n{\n    alias candidate = sort_numbers;\n\n    assert(candidate(\"\
    \") == \"\");\n    assert(candidate(\"three\") == \"three\");\n    assert(candidate(\"\
    three five nine\") == \"three five nine\");\n    assert(candidate(\"five zero\
    \ four seven nine eight\") == \"zero four five seven eight nine\");\n    assert(candidate(\"\
    six five four three two one zero\") == \"zero one two three four five six\");\n\
    }\nvoid main(){}"
  status: SyntaxError
  stderr: '/tmp/tmp7zskc53q.d(13): Error: no property `split` for type `string`

    /tmp/tmp7zskc53q.d(17): Error: template instance `to!int` template `to` is not
    defined, did you mean No?

    /tmp/tmp7zskc53q.d(19): Error: undefined identifier `sort`, did you mean function
    `sqrt`?

    /tmp/tmp7zskc53q.d(22): Error: template instance `to!string` template `to` is
    not defined, did you mean No?

    /tmp/tmp7zskc53q.d(24): Error: undefined identifier `join`, did you mean function
    `main`?

    Failed: ["dmd", "-unittest", "-v", "-o-", "/tmp/tmp7zskc53q.d", "-I/tmp"]

    '
  stdout: ''
  timestamp: 1660163090
- exit_code: 1
  program: "import std.typecons;\nimport std.math;\n/*\n Input is a space-delimited\
    \ string of numberals from 'zero' to 'nine'.\n    Valid choices are 'zero', 'one',\
    \ 'two', 'three', 'four', 'five', 'six', 'seven', 'eight' and 'nine'.\n    Return\
    \ the string with numbers sorted from smallest to largest\n    >>> sort_numbers(\"\
    three one five\")\n    \"one three five\"\n    \n*/\nstring sort_numbers(string\
    \ numbers) \n{\n    string[] nums = numbers.split(\" \");\n    string[] nums_sorted\
    \ = nums.dup;\n    nums_sorted.sort;\n    return nums_sorted.join(\" \");\n}\n\
    unittest\n{\n    alias candidate = sort_numbers;\n\n    assert(candidate(\"\"\
    ) == \"\");\n    assert(candidate(\"three\") == \"three\");\n    assert(candidate(\"\
    three five nine\") == \"three five nine\");\n    assert(candidate(\"five zero\
    \ four seven nine eight\") == \"zero four five seven eight nine\");\n    assert(candidate(\"\
    six five four three two one zero\") == \"zero one two three four five six\");\n\
    }\nvoid main(){}"
  status: SyntaxError
  stderr: '/tmp/tmpzgx7rljb.d(13): Error: no property `split` for type `string`

    /tmp/tmpzgx7rljb.d(15): Error: no property `sort` for type `string[]`

    /tmp/tmpzgx7rljb.d(16): Error: no property `join` for type `string[]`

    Failed: ["dmd", "-unittest", "-v", "-o-", "/tmp/tmpzgx7rljb.d", "-I/tmp"]

    '
  stdout: ''
  timestamp: 1660163090
- exit_code: 1
  program: "import std.typecons;\nimport std.math;\n/*\n Input is a space-delimited\
    \ string of numberals from 'zero' to 'nine'.\n    Valid choices are 'zero', 'one',\
    \ 'two', 'three', 'four', 'five', 'six', 'seven', 'eight' and 'nine'.\n    Return\
    \ the string with numbers sorted from smallest to largest\n    >>> sort_numbers(\"\
    three one five\")\n    \"one three five\"\n    \n*/\nstring sort_numbers(string\
    \ numbers) \n{\n    string[] nums = numbers.split;\n    int[] nums_int = nums.map!(a\
    \ => to!int(a)).array;\n    nums_int.sort;\n    return nums_int.map!(a => to!string(a)).join(\"\
    \ \");\n}\nunittest\n{\n    alias candidate = sort_numbers;\n\n    assert(candidate(\"\
    \") == \"\");\n    assert(candidate(\"three\") == \"three\");\n    assert(candidate(\"\
    three five nine\") == \"three five nine\");\n    assert(candidate(\"five zero\
    \ four seven nine eight\") == \"zero four five seven eight nine\");\n    assert(candidate(\"\
    six five four three two one zero\") == \"zero one two three four five six\");\n\
    }\nvoid main(){}"
  status: SyntaxError
  stderr: '/tmp/tmp_6hcpzri.d(13): Error: no property `split` for type `string`

    /tmp/tmp_6hcpzri.d(14): Error: no property `map` for type `string[]`

    /tmp/tmp_6hcpzri.d(15): Error: no property `sort` for type `int[]`

    /tmp/tmp_6hcpzri.d(16): Error: no property `map` for type `int[]`

    Failed: ["dmd", "-unittest", "-v", "-o-", "/tmp/tmp_6hcpzri.d", "-I/tmp"]

    '
  stdout: ''
  timestamp: 1660163090
- exit_code: 1
  program: "import std.typecons;\nimport std.math;\n/*\n Input is a space-delimited\
    \ string of numberals from 'zero' to 'nine'.\n    Valid choices are 'zero', 'one',\
    \ 'two', 'three', 'four', 'five', 'six', 'seven', 'eight' and 'nine'.\n    Return\
    \ the string with numbers sorted from smallest to largest\n    >>> sort_numbers(\"\
    three one five\")\n    \"one three five\"\n    \n*/\nstring sort_numbers(string\
    \ numbers) \n{\n    string[] nums = numbers.split();\n    int[] nums_int = new\
    \ int[nums.length];\n    foreach(i, num; nums)\n    {\n        switch(num)\n \
    \       {\n            case \"zero\":\n                nums_int[i] = 0;\n    \
    \            break;\n            case \"one\":\n                nums_int[i] =\
    \ 1;\n                break;\n            case \"two\":\n                nums_int[i]\
    \ = 2;\n                break;\n            case \"three\":\n                nums_int[i]\
    \ = 3;\n                break;\n            case \"four\":\n                nums_int[i]\
    \ = 4;\n                break;\n            case \"five\":\n                nums_int[i]\
    \ = 5;\n                break;\n            case \"six\":\n                nums_int[i]\
    \ = 6;\n                break;\n            case \"seven\":\n                nums_int[i]\
    \ = 7;\n                break;\n            case \"eight\":\n                nums_int[i]\
    \ = 8;\n                break;\n            case \"nine\":\n                nums_int[i]\
    \ = 9;\n                break;\n        }\n    }\n    nums_int.sort();\n    foreach(i,\
    \ num; nums_int)\n    {\n        switch(num)\n        {\n            case 0:\n\
    \                nums[i] = \"zero\";\n                break;\n            case\
    \ 1:\n                nums[i] = \"one\";\n                break;\n           \
    \ case 2:\n                nums[i] = \"two\";\n                break;\n      \
    \      case 3:\n                nums[i] = \"three\";\n                break;\n\
    \            case 4:\n                nums[i] = \"four\";\n                break;\n\
    \            case 5:\n                nums[i] = \"five\";\n                break;\n\
    \            case 6:\n                nums[i] = \"six\";\n                break;\n\
    \            case 7:\n                nums[i] = \"seven\";\n                break;\n\
    \            case 8:\n                nums[i] = \"eight\";\n                break;\n\
    \            case 9:\n                nums[i] = \"nine\";\n\nunittest\n{\n   \
    \ alias candidate = sort_numbers;\n\n    assert(candidate(\"\") == \"\");\n  \
    \  assert(candidate(\"three\") == \"three\");\n    assert(candidate(\"three five\
    \ nine\") == \"three five nine\");\n    assert(candidate(\"five zero four seven\
    \ nine eight\") == \"zero four five seven eight nine\");\n    assert(candidate(\"\
    six five four three two one zero\") == \"zero one two three four five six\");\n\
    }\nvoid main(){}"
  status: SyntaxError
  stderr: '/tmp/tmp_yzj2kiv.d(86): Error: found `unittest` instead of statement

    /tmp/tmp_yzj2kiv.d(96): Error: found `End of File` when expecting `}` following
    compound statement

    /tmp/tmp_yzj2kiv.d(96): Error: found `End of File` when expecting `}` following
    compound statement

    Failed: ["dmd", "-unittest", "-v", "-o-", "/tmp/tmp_yzj2kiv.d", "-I/tmp"]

    '
  stdout: ''
  timestamp: 1660163090
- exit_code: 1
  program: "import std.typecons;\nimport std.math;\n/*\n Input is a space-delimited\
    \ string of numberals from 'zero' to 'nine'.\n    Valid choices are 'zero', 'one',\
    \ 'two', 'three', 'four', 'five', 'six', 'seven', 'eight' and 'nine'.\n    Return\
    \ the string with numbers sorted from smallest to largest\n    >>> sort_numbers(\"\
    three one five\")\n    \"one three five\"\n    \n*/\nstring sort_numbers(string\
    \ numbers) \n{\n    int[] nums;\n    foreach(string num; numbers.split(\" \"))\n\
    \    {\n        switch(num)\n        {\n            case \"zero\":\n         \
    \       nums ~= 0;\n                break;\n            case \"one\":\n      \
    \          nums ~= 1;\n                break;\n            case \"two\":\n   \
    \             nums ~= 2;\n                break;\n            case \"three\":\n\
    \                nums ~= 3;\n                break;\n            case \"four\"\
    :\n                nums ~= 4;\n                break;\n            case \"five\"\
    :\n                nums ~= 5;\n                break;\n            case \"six\"\
    :\n                nums ~= 6;\n                break;\n            case \"seven\"\
    :\n                nums ~= 7;\n                break;\n            case \"eight\"\
    :\n                nums ~= 8;\n                break;\n            case \"nine\"\
    :\n                nums ~= 9;\n                break;\n        }\n    }\n    nums.sort();\n\
    \    string ret;\n    foreach(int num; nums)\n    {\n        switch(num)\n   \
    \     {\n            case 0:\n                ret ~= \"zero \";\n            \
    \    break;\n            case 1:\n                ret ~= \"one \";\n         \
    \       break;\n            case 2:\n                ret ~= \"two \";\n      \
    \          break;\n            case 3:\n                ret ~= \"three \";\n \
    \               break;\n            case 4:\n                ret ~= \"four \"\
    ;\n                break;\n            case 5:\n                ret ~= \"five\
    \ \";\n                break;\n            case 6:\n                ret ~= \"\
    six \";\n                break;\n            case 7:\n                ret ~= \"\
    seven \";\n                break;\n            case 8:\n                ret ~=\
    \ \"eight \";\n                break;\n            case 9:\n                ret\
    \ ~= \"nine \";\n                break;\n        }\n    }\n    return ret.idup;\n\
    }\nunittest\n{\n    alias candidate = sort_numbers;\n\n    assert(candidate(\"\
    \") == \"\");\n    assert(candidate(\"three\") == \"three\");\n    assert(candidate(\"\
    three five nine\") == \"three five nine\");\n    assert(candidate(\"five zero\
    \ four seven nine eight\") == \"zero four five seven eight nine\");\n    assert(candidate(\"\
    six five four three two one zero\") == \"zero one two three four five six\");\n\
    }\nvoid main(){}"
  status: SyntaxError
  stderr: '/tmp/tmp51nh8hz8.d(14): Error: no property `split` for type `string`

    /tmp/tmp51nh8hz8.d(50): Error: no property `sort` for type `int[]`

    /tmp/tmp51nh8hz8.d(54): Error: `switch` statement without a `default`; use `final
    switch` or add `default: assert(0);` or add `default: break;`

    Failed: ["dmd", "-unittest", "-v", "-o-", "/tmp/tmp51nh8hz8.d", "-I/tmp"]

    '
  stdout: ''
  timestamp: 1660163090
- exit_code: 1
  program: "import std.typecons;\nimport std.math;\n/*\n Input is a space-delimited\
    \ string of numberals from 'zero' to 'nine'.\n    Valid choices are 'zero', 'one',\
    \ 'two', 'three', 'four', 'five', 'six', 'seven', 'eight' and 'nine'.\n    Return\
    \ the string with numbers sorted from smallest to largest\n    >>> sort_numbers(\"\
    three one five\")\n    \"one three five\"\n    \n*/\nstring sort_numbers(string\
    \ numbers) \n{\n    string[] nums = numbers.split(\" \");\n    int[] nums_int\
    \ = new int[nums.length];\n    foreach(i, num; nums)\n    {\n        nums_int[i]\
    \ = to!int(num);\n    }\n    sort(nums_int);\n    string result = \"\";\n    foreach(num;\
    \ nums_int)\n    {\n        result ~= to!string(num) ~ \" \";\n    }\n    return\
    \ result.stripRight();\n}\nunittest\n{\n    alias candidate = sort_numbers;\n\n\
    \    assert(candidate(\"\") == \"\");\n    assert(candidate(\"three\") == \"three\"\
    );\n    assert(candidate(\"three five nine\") == \"three five nine\");\n    assert(candidate(\"\
    five zero four seven nine eight\") == \"zero four five seven eight nine\");\n\
    \    assert(candidate(\"six five four three two one zero\") == \"zero one two\
    \ three four five six\");\n}\nvoid main(){}"
  status: SyntaxError
  stderr: '/tmp/tmpuj2nx7js.d(13): Error: no property `split` for type `string`

    /tmp/tmpuj2nx7js.d(17): Error: template instance `to!int` template `to` is not
    defined, did you mean No?

    /tmp/tmpuj2nx7js.d(19): Error: undefined identifier `sort`, did you mean function
    `sqrt`?

    /tmp/tmpuj2nx7js.d(23): Error: template instance `to!string` template `to` is
    not defined, did you mean No?

    /tmp/tmpuj2nx7js.d(25): Error: no property `stripRight` for type `string`

    Failed: ["dmd", "-unittest", "-v", "-o-", "/tmp/tmpuj2nx7js.d", "-I/tmp"]

    '
  stdout: ''
  timestamp: 1660163090
- exit_code: 1
  program: "import std.typecons;\nimport std.math;\n/*\n Input is a space-delimited\
    \ string of numberals from 'zero' to 'nine'.\n    Valid choices are 'zero', 'one',\
    \ 'two', 'three', 'four', 'five', 'six', 'seven', 'eight' and 'nine'.\n    Return\
    \ the string with numbers sorted from smallest to largest\n    >>> sort_numbers(\"\
    three one five\")\n    \"one three five\"\n    \n*/\nstring sort_numbers(string\
    \ numbers) \n{\n    string[] nums = numbers.split(\" \");\n    int[] nums_int\
    \ = new int[nums.length];\n    foreach(i, num; nums)\n    {\n        nums_int[i]\
    \ = to!int(num);\n    }\n    sort(nums_int);\n    string result = \"\";\n    foreach(i,\
    \ num; nums_int)\n    {\n        result ~= to!string(num) ~ \" \";\n    }\n  \
    \  return result.stripRight;\n}\nunittest\n{\n    alias candidate = sort_numbers;\n\
    \n    assert(candidate(\"\") == \"\");\n    assert(candidate(\"three\") == \"\
    three\");\n    assert(candidate(\"three five nine\") == \"three five nine\");\n\
    \    assert(candidate(\"five zero four seven nine eight\") == \"zero four five\
    \ seven eight nine\");\n    assert(candidate(\"six five four three two one zero\"\
    ) == \"zero one two three four five six\");\n}\nvoid main(){}"
  status: SyntaxError
  stderr: '/tmp/tmpmlwza7_p.d(13): Error: no property `split` for type `string`

    /tmp/tmpmlwza7_p.d(17): Error: template instance `to!int` template `to` is not
    defined, did you mean No?

    /tmp/tmpmlwza7_p.d(19): Error: undefined identifier `sort`, did you mean function
    `sqrt`?

    /tmp/tmpmlwza7_p.d(23): Error: template instance `to!string` template `to` is
    not defined, did you mean No?

    /tmp/tmpmlwza7_p.d(25): Error: no property `stripRight` for type `string`

    Failed: ["dmd", "-unittest", "-v", "-o-", "/tmp/tmpmlwza7_p.d", "-I/tmp"]

    '
  stdout: ''
  timestamp: 1660163090
- exit_code: 1
  program: "import std.typecons;\nimport std.math;\n/*\n Input is a space-delimited\
    \ string of numberals from 'zero' to 'nine'.\n    Valid choices are 'zero', 'one',\
    \ 'two', 'three', 'four', 'five', 'six', 'seven', 'eight' and 'nine'.\n    Return\
    \ the string with numbers sorted from smallest to largest\n    >>> sort_numbers(\"\
    three one five\")\n    \"one three five\"\n    \n*/\nstring sort_numbers(string\
    \ numbers) \n{\n    string[] nums = numbers.split(\" \");\n    int[] nums_int\
    \ = new int[nums.length];\n    foreach(i, num; nums)\n    {\n        nums_int[i]\
    \ = to!int(num);\n    }\n    sort(nums_int);\n    string result = \"\";\n    foreach(num;\
    \ nums_int)\n    {\n        result ~= num ~ \" \";\n    }\n    return result.stripRight();\n\
    }\nunittest\n{\n    alias candidate = sort_numbers;\n\n    assert(candidate(\"\
    \") == \"\");\n    assert(candidate(\"three\") == \"three\");\n    assert(candidate(\"\
    three five nine\") == \"three five nine\");\n    assert(candidate(\"five zero\
    \ four seven nine eight\") == \"zero four five seven eight nine\");\n    assert(candidate(\"\
    six five four three two one zero\") == \"zero one two three four five six\");\n\
    }\nvoid main(){}"
  status: SyntaxError
  stderr: '/tmp/tmpamhbcqv2.d(13): Error: no property `split` for type `string`

    /tmp/tmpamhbcqv2.d(17): Error: template instance `to!int` template `to` is not
    defined, did you mean No?

    /tmp/tmpamhbcqv2.d(19): Error: undefined identifier `sort`, did you mean function
    `sqrt`?

    /tmp/tmpamhbcqv2.d(23): Error: incompatible types for `(num) ~ (" ")`: `int` and
    `string`

    /tmp/tmpamhbcqv2.d(25): Error: no property `stripRight` for type `string`

    Failed: ["dmd", "-unittest", "-v", "-o-", "/tmp/tmpamhbcqv2.d", "-I/tmp"]

    '
  stdout: ''
  timestamp: 1660163090
- exit_code: 1
  program: "import std.typecons;\nimport std.math;\n/*\n Input is a space-delimited\
    \ string of numberals from 'zero' to 'nine'.\n    Valid choices are 'zero', 'one',\
    \ 'two', 'three', 'four', 'five', 'six', 'seven', 'eight' and 'nine'.\n    Return\
    \ the string with numbers sorted from smallest to largest\n    >>> sort_numbers(\"\
    three one five\")\n    \"one three five\"\n    \n*/\nstring sort_numbers(string\
    \ numbers) \n{\n    string[] nums = numbers.split();\n    int[] nums_int = new\
    \ int[nums.length];\n    foreach(int i, string num; nums)\n    {\n        nums_int[i]\
    \ = num_to_int(num);\n    }\n    sort(nums_int);\n    foreach(int i, int num;\
    \ nums_int)\n    {\n        nums[i] = int_to_num(num);\n    }\n    return join(nums,\
    \ \" \");\n}\nunittest\n{\n    alias candidate = sort_numbers;\n\n    assert(candidate(\"\
    \") == \"\");\n    assert(candidate(\"three\") == \"three\");\n    assert(candidate(\"\
    three five nine\") == \"three five nine\");\n    assert(candidate(\"five zero\
    \ four seven nine eight\") == \"zero four five seven eight nine\");\n    assert(candidate(\"\
    six five four three two one zero\") == \"zero one two three four five six\");\n\
    }\nvoid main(){}"
  status: SyntaxError
  stderr: '/tmp/tmpjy454kd3.d(13): Error: no property `split` for type `string`

    /tmp/tmpjy454kd3.d(17): Error: undefined identifier `num_to_int`

    /tmp/tmpjy454kd3.d(19): Error: undefined identifier `sort`, did you mean function
    `sqrt`?

    /tmp/tmpjy454kd3.d(22): Error: undefined identifier `int_to_num`

    /tmp/tmpjy454kd3.d(24): Error: undefined identifier `join`, did you mean function
    `main`?

    Failed: ["dmd", "-unittest", "-v", "-o-", "/tmp/tmpjy454kd3.d", "-I/tmp"]

    '
  stdout: ''
  timestamp: 1660163090
- exit_code: 1
  program: "import std.typecons;\nimport std.math;\n/*\n Input is a space-delimited\
    \ string of numberals from 'zero' to 'nine'.\n    Valid choices are 'zero', 'one',\
    \ 'two', 'three', 'four', 'five', 'six', 'seven', 'eight' and 'nine'.\n    Return\
    \ the string with numbers sorted from smallest to largest\n    >>> sort_numbers(\"\
    three one five\")\n    \"one three five\"\n    \n*/\nstring sort_numbers(string\
    \ numbers) \n{\n    string[] nums = numbers.split(\" \");\n    int[] nums_int\
    \ = new int[nums.length];\n    foreach(i, num; nums)\n    {\n        nums_int[i]\
    \ = num_to_int(num);\n    }\n    nums_int.sort;\n    foreach(i, num; nums_int)\n\
    \    {\n        nums[i] = int_to_num(num);\n    }\n    return nums.join(\" \"\
    );\n}\nunittest\n{\n    alias candidate = sort_numbers;\n\n    assert(candidate(\"\
    \") == \"\");\n    assert(candidate(\"three\") == \"three\");\n    assert(candidate(\"\
    three five nine\") == \"three five nine\");\n    assert(candidate(\"five zero\
    \ four seven nine eight\") == \"zero four five seven eight nine\");\n    assert(candidate(\"\
    six five four three two one zero\") == \"zero one two three four five six\");\n\
    }\nvoid main(){}"
  status: SyntaxError
  stderr: '/tmp/tmp7jfw0jvs.d(13): Error: no property `split` for type `string`

    /tmp/tmp7jfw0jvs.d(17): Error: undefined identifier `num_to_int`

    /tmp/tmp7jfw0jvs.d(19): Error: no property `sort` for type `int[]`

    /tmp/tmp7jfw0jvs.d(22): Error: undefined identifier `int_to_num`

    /tmp/tmp7jfw0jvs.d(24): Error: no property `join` for type `string[]`

    Failed: ["dmd", "-unittest", "-v", "-o-", "/tmp/tmp7jfw0jvs.d", "-I/tmp"]

    '
  stdout: ''
  timestamp: 1660163090
- exit_code: 1
  program: "import std.typecons;\nimport std.math;\n/*\n Input is a space-delimited\
    \ string of numberals from 'zero' to 'nine'.\n    Valid choices are 'zero', 'one',\
    \ 'two', 'three', 'four', 'five', 'six', 'seven', 'eight' and 'nine'.\n    Return\
    \ the string with numbers sorted from smallest to largest\n    >>> sort_numbers(\"\
    three one five\")\n    \"one three five\"\n    \n*/\nstring sort_numbers(string\
    \ numbers) \n{\n    string[] nums = numbers.split(\" \");\n    int[] nums_int\
    \ = new int[nums.length];\n    foreach(i, num; nums)\n    {\n        nums_int[i]\
    \ = num_to_int(num);\n    }\n    sort(nums_int);\n    foreach(i, num; nums_int)\n\
    \    {\n        nums[i] = int_to_num(num);\n    }\n    return nums.join(\" \"\
    );\n}\nunittest\n{\n    alias candidate = sort_numbers;\n\n    assert(candidate(\"\
    \") == \"\");\n    assert(candidate(\"three\") == \"three\");\n    assert(candidate(\"\
    three five nine\") == \"three five nine\");\n    assert(candidate(\"five zero\
    \ four seven nine eight\") == \"zero four five seven eight nine\");\n    assert(candidate(\"\
    six five four three two one zero\") == \"zero one two three four five six\");\n\
    }\nvoid main(){}"
  status: SyntaxError
  stderr: '/tmp/tmpuzh2jjb4.d(13): Error: no property `split` for type `string`

    /tmp/tmpuzh2jjb4.d(17): Error: undefined identifier `num_to_int`

    /tmp/tmpuzh2jjb4.d(19): Error: undefined identifier `sort`, did you mean function
    `sqrt`?

    /tmp/tmpuzh2jjb4.d(22): Error: undefined identifier `int_to_num`

    /tmp/tmpuzh2jjb4.d(24): Error: no property `join` for type `string[]`

    Failed: ["dmd", "-unittest", "-v", "-o-", "/tmp/tmpuzh2jjb4.d", "-I/tmp"]

    '
  stdout: ''
  timestamp: 1660163090
- exit_code: 1
  program: "import std.typecons;\nimport std.math;\n/*\n Input is a space-delimited\
    \ string of numberals from 'zero' to 'nine'.\n    Valid choices are 'zero', 'one',\
    \ 'two', 'three', 'four', 'five', 'six', 'seven', 'eight' and 'nine'.\n    Return\
    \ the string with numbers sorted from smallest to largest\n    >>> sort_numbers(\"\
    three one five\")\n    \"one three five\"\n    \n*/\nstring sort_numbers(string\
    \ numbers) \n{\n    string[] nums = numbers.split(\" \");\n    int[] nums_int\
    \ = new int[nums.length];\n    foreach(i, num; nums)\n    {\n        nums_int[i]\
    \ = to!int(num);\n    }\n    sort(nums_int);\n    foreach(i, num; nums_int)\n\
    \    {\n        nums[i] = to!string(num);\n    }\n    return join(nums, \" \"\
    );\n}\nunittest\n{\n    alias candidate = sort_numbers;\n\n    assert(candidate(\"\
    \") == \"\");\n    assert(candidate(\"three\") == \"three\");\n    assert(candidate(\"\
    three five nine\") == \"three five nine\");\n    assert(candidate(\"five zero\
    \ four seven nine eight\") == \"zero four five seven eight nine\");\n    assert(candidate(\"\
    six five four three two one zero\") == \"zero one two three four five six\");\n\
    }\nvoid main(){}"
  status: SyntaxError
  stderr: '/tmp/tmp7zskc53q.d(13): Error: no property `split` for type `string`

    /tmp/tmp7zskc53q.d(17): Error: template instance `to!int` template `to` is not
    defined, did you mean No?

    /tmp/tmp7zskc53q.d(19): Error: undefined identifier `sort`, did you mean function
    `sqrt`?

    /tmp/tmp7zskc53q.d(22): Error: template instance `to!string` template `to` is
    not defined, did you mean No?

    /tmp/tmp7zskc53q.d(24): Error: undefined identifier `join`, did you mean function
    `main`?

    Failed: ["dmd", "-unittest", "-v", "-o-", "/tmp/tmp7zskc53q.d", "-I/tmp"]

    '
  stdout: ''
  timestamp: 1660163090
- exit_code: 1
  program: "import std.typecons;\nimport std.math;\n/*\n Input is a space-delimited\
    \ string of numberals from 'zero' to 'nine'.\n    Valid choices are 'zero', 'one',\
    \ 'two', 'three', 'four', 'five', 'six', 'seven', 'eight' and 'nine'.\n    Return\
    \ the string with numbers sorted from smallest to largest\n    >>> sort_numbers(\"\
    three one five\")\n    \"one three five\"\n    \n*/\nstring sort_numbers(string\
    \ numbers) \n{\n    string[] nums = numbers.split(\" \");\n    int[] nums_int\
    \ = new int[nums.length];\n    foreach(i, n; nums)\n    {\n        nums_int[i]\
    \ = to!int(n);\n    }\n    sort(nums_int);\n    foreach(i, n; nums_int)\n    {\n\
    \        nums[i] = to!string(n);\n    }\n    return join(nums, \" \");\n}\nunittest\n\
    {\n    alias candidate = sort_numbers;\n\n    assert(candidate(\"\") == \"\");\n\
    \    assert(candidate(\"three\") == \"three\");\n    assert(candidate(\"three\
    \ five nine\") == \"three five nine\");\n    assert(candidate(\"five zero four\
    \ seven nine eight\") == \"zero four five seven eight nine\");\n    assert(candidate(\"\
    six five four three two one zero\") == \"zero one two three four five six\");\n\
    }\nvoid main(){}"
  status: SyntaxError
  stderr: '/tmp/tmp_nrc46cs.d(13): Error: no property `split` for type `string`

    /tmp/tmp_nrc46cs.d(17): Error: template instance `to!int` template `to` is not
    defined, did you mean No?

    /tmp/tmp_nrc46cs.d(19): Error: undefined identifier `sort`, did you mean function
    `sqrt`?

    /tmp/tmp_nrc46cs.d(22): Error: template instance `to!string` template `to` is
    not defined, did you mean No?

    /tmp/tmp_nrc46cs.d(24): Error: undefined identifier `join`, did you mean function
    `main`?

    Failed: ["dmd", "-unittest", "-v", "-o-", "/tmp/tmp_nrc46cs.d", "-I/tmp"]

    '
  stdout: ''
  timestamp: 1660163090
- exit_code: 1
  program: "import std.typecons;\nimport std.math;\n/*\n Input is a space-delimited\
    \ string of numberals from 'zero' to 'nine'.\n    Valid choices are 'zero', 'one',\
    \ 'two', 'three', 'four', 'five', 'six', 'seven', 'eight' and 'nine'.\n    Return\
    \ the string with numbers sorted from smallest to largest\n    >>> sort_numbers(\"\
    three one five\")\n    \"one three five\"\n    \n*/\nstring sort_numbers(string\
    \ numbers) \n{\n    int[] nums;\n    foreach(num; numbers.split)\n    {\n    \
    \    switch(num)\n        {\n            case \"zero\": nums ~= 0; break;\n  \
    \          case \"one\": nums ~= 1; break;\n            case \"two\": nums ~=\
    \ 2; break;\n            case \"three\": nums ~= 3; break;\n            case \"\
    four\": nums ~= 4; break;\n            case \"five\": nums ~= 5; break;\n    \
    \        case \"six\": nums ~= 6; break;\n            case \"seven\": nums ~=\
    \ 7; break;\n            case \"eight\": nums ~= 8; break;\n            case \"\
    nine\": nums ~= 9; break;\n        }\n    }\n    nums.sort;\n    string[] nums_str;\n\
    \    foreach(num; nums)\n    {\n        switch(num)\n        {\n            case\
    \ 0: nums_str ~= \"zero\"; break;\n            case 1: nums_str ~= \"one\"; break;\n\
    \            case 2: nums_str ~= \"two\"; break;\n            case 3: nums_str\
    \ ~= \"three\"; break;\n            case 4: nums_str ~= \"four\"; break;\n   \
    \         case 5: nums_str ~= \"five\"; break;\n            case 6: nums_str ~=\
    \ \"six\"; break;\n            case 7: nums_str ~= \"seven\"; break;\n       \
    \     case 8: nums_str ~= \"eight\"; break;\n            case 9: nums_str ~= \"\
    nine\"; break;\n        }\n    }\n    return nums_str.join(\" \");\n}\nunittest\n\
    {\n    alias candidate = sort_numbers;\n\n    assert(candidate(\"\") == \"\");\n\
    \    assert(candidate(\"three\") == \"three\");\n    assert(candidate(\"three\
    \ five nine\") == \"three five nine\");\n    assert(candidate(\"five zero four\
    \ seven nine eight\") == \"zero four five seven eight nine\");\n    assert(candidate(\"\
    six five four three two one zero\") == \"zero one two three four five six\");\n\
    }\nvoid main(){}"
  status: SyntaxError
  stderr: '/tmp/tmp2hdb4zmu.d(14): Error: no property `split` for type `string`

    /tmp/tmp2hdb4zmu.d(30): Error: no property `sort` for type `int[]`

    /tmp/tmp2hdb4zmu.d(34): Error: `switch` statement without a `default`; use `final
    switch` or add `default: assert(0);` or add `default: break;`

    /tmp/tmp2hdb4zmu.d(48): Error: no property `join` for type `string[]`

    Failed: ["dmd", "-unittest", "-v", "-o-", "/tmp/tmp2hdb4zmu.d", "-I/tmp"]

    '
  stdout: ''
  timestamp: 1660163090
- exit_code: 1
  program: "import std.typecons;\nimport std.math;\n/*\n Input is a space-delimited\
    \ string of numberals from 'zero' to 'nine'.\n    Valid choices are 'zero', 'one',\
    \ 'two', 'three', 'four', 'five', 'six', 'seven', 'eight' and 'nine'.\n    Return\
    \ the string with numbers sorted from smallest to largest\n    >>> sort_numbers(\"\
    three one five\")\n    \"one three five\"\n    \n*/\nstring sort_numbers(string\
    \ numbers) \n{\n    // TODO: Implement this function\n    auto nums = numbers.split(\"\
    \ \");\n    nums.sort!((a, b) => numeralToInt(a) < numeralToInt(b));\n    return\
    \ nums.join(\" \");\n}\nunittest\n{\n    alias candidate = sort_numbers;\n\n \
    \   assert(candidate(\"\") == \"\");\n    assert(candidate(\"three\") == \"three\"\
    );\n    assert(candidate(\"three five nine\") == \"three five nine\");\n    assert(candidate(\"\
    five zero four seven nine eight\") == \"zero four five seven eight nine\");\n\
    \    assert(candidate(\"six five four three two one zero\") == \"zero one two\
    \ three four five six\");\n}\nvoid main(){}"
  status: SyntaxError
  stderr: '/tmp/tmp38e_4x3c.d(14): Error: no property `split` for type `string`

    Failed: ["dmd", "-unittest", "-v", "-o-", "/tmp/tmp38e_4x3c.d", "-I/tmp"]

    '
  stdout: ''
  timestamp: 1660163090
- exit_code: 1
  program: "import std.typecons;\nimport std.math;\n/*\n Input is a space-delimited\
    \ string of numberals from 'zero' to 'nine'.\n    Valid choices are 'zero', 'one',\
    \ 'two', 'three', 'four', 'five', 'six', 'seven', 'eight' and 'nine'.\n    Return\
    \ the string with numbers sorted from smallest to largest\n    >>> sort_numbers(\"\
    three one five\")\n    \"one three five\"\n    \n*/\nstring sort_numbers(string\
    \ numbers) \n{\n    string[] nums = numbers.split(\" \");\n    int[] nums_int\
    \ = new int[nums.length];\n    foreach(i, num; nums)\n    {\n        nums_int[i]\
    \ = num_to_int(num);\n    }\n    sort(nums_int);\n    foreach(i, num; nums_int)\n\
    \    {\n        nums[i] = int_to_num(num);\n    }\n    return nums.join(\" \"\
    );\n}\nunittest\n{\n    alias candidate = sort_numbers;\n\n    assert(candidate(\"\
    \") == \"\");\n    assert(candidate(\"three\") == \"three\");\n    assert(candidate(\"\
    three five nine\") == \"three five nine\");\n    assert(candidate(\"five zero\
    \ four seven nine eight\") == \"zero four five seven eight nine\");\n    assert(candidate(\"\
    six five four three two one zero\") == \"zero one two three four five six\");\n\
    }\nvoid main(){}"
  status: SyntaxError
  stderr: '/tmp/tmpuzh2jjb4.d(13): Error: no property `split` for type `string`

    /tmp/tmpuzh2jjb4.d(17): Error: undefined identifier `num_to_int`

    /tmp/tmpuzh2jjb4.d(19): Error: undefined identifier `sort`, did you mean function
    `sqrt`?

    /tmp/tmpuzh2jjb4.d(22): Error: undefined identifier `int_to_num`

    /tmp/tmpuzh2jjb4.d(24): Error: no property `join` for type `string[]`

    Failed: ["dmd", "-unittest", "-v", "-o-", "/tmp/tmpuzh2jjb4.d", "-I/tmp"]

    '
  stdout: ''
  timestamp: 1660163090
- exit_code: 1
  program: "import std.typecons;\nimport std.math;\n/*\n Input is a space-delimited\
    \ string of numberals from 'zero' to 'nine'.\n    Valid choices are 'zero', 'one',\
    \ 'two', 'three', 'four', 'five', 'six', 'seven', 'eight' and 'nine'.\n    Return\
    \ the string with numbers sorted from smallest to largest\n    >>> sort_numbers(\"\
    three one five\")\n    \"one three five\"\n    \n*/\nstring sort_numbers(string\
    \ numbers) \n{\n    string[] nums = numbers.split(\" \");\n    int[] nums_int\
    \ = new int[nums.length];\n    foreach(i, num; nums)\n    {\n        nums_int[i]\
    \ = to!int(num);\n    }\n    nums_int.sort;\n    foreach(i, num; nums_int)\n \
    \   {\n        nums[i] = to!string(num);\n    }\n    return nums.join(\" \");\n\
    }\nunittest\n{\n    alias candidate = sort_numbers;\n\n    assert(candidate(\"\
    \") == \"\");\n    assert(candidate(\"three\") == \"three\");\n    assert(candidate(\"\
    three five nine\") == \"three five nine\");\n    assert(candidate(\"five zero\
    \ four seven nine eight\") == \"zero four five seven eight nine\");\n    assert(candidate(\"\
    six five four three two one zero\") == \"zero one two three four five six\");\n\
    }\nvoid main(){}"
  status: SyntaxError
  stderr: '/tmp/tmpiq89aqc2.d(13): Error: no property `split` for type `string`

    /tmp/tmpiq89aqc2.d(17): Error: template instance `to!int` template `to` is not
    defined, did you mean No?

    /tmp/tmpiq89aqc2.d(19): Error: no property `sort` for type `int[]`

    /tmp/tmpiq89aqc2.d(22): Error: template instance `to!string` template `to` is
    not defined, did you mean No?

    /tmp/tmpiq89aqc2.d(24): Error: no property `join` for type `string[]`

    Failed: ["dmd", "-unittest", "-v", "-o-", "/tmp/tmpiq89aqc2.d", "-I/tmp"]

    '
  stdout: ''
  timestamp: 1660163090
- exit_code: 1
  program: "import std.typecons;\nimport std.math;\n/*\n Input is a space-delimited\
    \ string of numberals from 'zero' to 'nine'.\n    Valid choices are 'zero', 'one',\
    \ 'two', 'three', 'four', 'five', 'six', 'seven', 'eight' and 'nine'.\n    Return\
    \ the string with numbers sorted from smallest to largest\n    >>> sort_numbers(\"\
    three one five\")\n    \"one three five\"\n    \n*/\nstring sort_numbers(string\
    \ numbers) \n{\n    string[] nums = numbers.split(\" \");\n    int[] num_ints\
    \ = new int[nums.length];\n    foreach(i, num; nums)\n    {\n        num_ints[i]\
    \ = numeral_to_int(num);\n    }\n    sort(num_ints);\n    string[] num_strings\
    \ = new string[nums.length];\n    foreach(i, num; num_ints)\n    {\n        num_strings[i]\
    \ = int_to_numeral(num);\n    }\n    return join(num_strings, \" \");\n}\nunittest\n\
    {\n    alias candidate = sort_numbers;\n\n    assert(candidate(\"\") == \"\");\n\
    \    assert(candidate(\"three\") == \"three\");\n    assert(candidate(\"three\
    \ five nine\") == \"three five nine\");\n    assert(candidate(\"five zero four\
    \ seven nine eight\") == \"zero four five seven eight nine\");\n    assert(candidate(\"\
    six five four three two one zero\") == \"zero one two three four five six\");\n\
    }\nvoid main(){}"
  status: SyntaxError
  stderr: '/tmp/tmpax_41em7.d(13): Error: no property `split` for type `string`

    /tmp/tmpax_41em7.d(17): Error: undefined identifier `numeral_to_int`

    /tmp/tmpax_41em7.d(19): Error: undefined identifier `sort`, did you mean function
    `sqrt`?

    /tmp/tmpax_41em7.d(23): Error: undefined identifier `int_to_numeral`

    /tmp/tmpax_41em7.d(25): Error: undefined identifier `join`, did you mean function
    `main`?

    Failed: ["dmd", "-unittest", "-v", "-o-", "/tmp/tmpax_41em7.d", "-I/tmp"]

    '
  stdout: ''
  timestamp: 1660163090
- exit_code: 1
  program: "import std.typecons;\nimport std.math;\n/*\n Input is a space-delimited\
    \ string of numberals from 'zero' to 'nine'.\n    Valid choices are 'zero', 'one',\
    \ 'two', 'three', 'four', 'five', 'six', 'seven', 'eight' and 'nine'.\n    Return\
    \ the string with numbers sorted from smallest to largest\n    >>> sort_numbers(\"\
    three one five\")\n    \"one three five\"\n    \n*/\nstring sort_numbers(string\
    \ numbers) \n{\n    string[] nums = numbers.split(\" \");\n    int[] nums_int\
    \ = new int[nums.length];\n    foreach(i, num; nums)\n    {\n        nums_int[i]\
    \ = to!int(num);\n    }\n    sort(nums_int);\n    foreach(i, num; nums_int)\n\
    \    {\n        nums[i] = to!string(num);\n    }\n    return join(nums, \" \"\
    );\n}\nunittest\n{\n    alias candidate = sort_numbers;\n\n    assert(candidate(\"\
    \") == \"\");\n    assert(candidate(\"three\") == \"three\");\n    assert(candidate(\"\
    three five nine\") == \"three five nine\");\n    assert(candidate(\"five zero\
    \ four seven nine eight\") == \"zero four five seven eight nine\");\n    assert(candidate(\"\
    six five four three two one zero\") == \"zero one two three four five six\");\n\
    }\nvoid main(){}"
  status: SyntaxError
  stderr: '/tmp/tmp7zskc53q.d(13): Error: no property `split` for type `string`

    /tmp/tmp7zskc53q.d(17): Error: template instance `to!int` template `to` is not
    defined, did you mean No?

    /tmp/tmp7zskc53q.d(19): Error: undefined identifier `sort`, did you mean function
    `sqrt`?

    /tmp/tmp7zskc53q.d(22): Error: template instance `to!string` template `to` is
    not defined, did you mean No?

    /tmp/tmp7zskc53q.d(24): Error: undefined identifier `join`, did you mean function
    `main`?

    Failed: ["dmd", "-unittest", "-v", "-o-", "/tmp/tmp7zskc53q.d", "-I/tmp"]

    '
  stdout: ''
  timestamp: 1660163090
- exit_code: 1
  program: "import std.typecons;\nimport std.math;\n/*\n Input is a space-delimited\
    \ string of numberals from 'zero' to 'nine'.\n    Valid choices are 'zero', 'one',\
    \ 'two', 'three', 'four', 'five', 'six', 'seven', 'eight' and 'nine'.\n    Return\
    \ the string with numbers sorted from smallest to largest\n    >>> sort_numbers(\"\
    three one five\")\n    \"one three five\"\n    \n*/\nstring sort_numbers(string\
    \ numbers) \n{\n    string[] nums = numbers.split(\" \");\n    string[] nums_sorted\
    \ = nums.dup;\n    nums_sorted.sort!((a, b) => a.compare(b));\n    return nums_sorted.join(\"\
    \ \");\n}\nunittest\n{\n    alias candidate = sort_numbers;\n\n    assert(candidate(\"\
    \") == \"\");\n    assert(candidate(\"three\") == \"three\");\n    assert(candidate(\"\
    three five nine\") == \"three five nine\");\n    assert(candidate(\"five zero\
    \ four seven nine eight\") == \"zero four five seven eight nine\");\n    assert(candidate(\"\
    six five four three two one zero\") == \"zero one two three four five six\");\n\
    }\nvoid main(){}"
  status: SyntaxError
  stderr: '/tmp/tmpdr8_zdsz.d(13): Error: no property `split` for type `string`

    /tmp/tmpdr8_zdsz.d(15): Error: no property `sort` for type `string[]`

    /tmp/tmpdr8_zdsz.d(16): Error: no property `join` for type `string[]`

    Failed: ["dmd", "-unittest", "-v", "-o-", "/tmp/tmpdr8_zdsz.d", "-I/tmp"]

    '
  stdout: ''
  timestamp: 1660163090
- exit_code: 1
  program: "import std.typecons;\nimport std.math;\n/*\n Input is a space-delimited\
    \ string of numberals from 'zero' to 'nine'.\n    Valid choices are 'zero', 'one',\
    \ 'two', 'three', 'four', 'five', 'six', 'seven', 'eight' and 'nine'.\n    Return\
    \ the string with numbers sorted from smallest to largest\n    >>> sort_numbers(\"\
    three one five\")\n    \"one three five\"\n    \n*/\nstring sort_numbers(string\
    \ numbers) \n{\n    string[] nums = numbers.split(\" \");\n    int[] nums_int\
    \ = new int[nums.length];\n    foreach(int i, string s; nums)\n    {\n       \
    \ nums_int[i] = to!int(s);\n    }\n    sort(nums_int);\n    string result = \"\
    \";\n    foreach(int i, int n; nums_int)\n    {\n        result ~= to!string(n)\
    \ ~ \" \";\n    }\n    return result.trim();\n}\nunittest\n{\n    alias candidate\
    \ = sort_numbers;\n\n    assert(candidate(\"\") == \"\");\n    assert(candidate(\"\
    three\") == \"three\");\n    assert(candidate(\"three five nine\") == \"three\
    \ five nine\");\n    assert(candidate(\"five zero four seven nine eight\") ==\
    \ \"zero four five seven eight nine\");\n    assert(candidate(\"six five four\
    \ three two one zero\") == \"zero one two three four five six\");\n}\nvoid main(){}"
  status: SyntaxError
  stderr: '/tmp/tmp3cq8ywv3.d(13): Error: no property `split` for type `string`

    /tmp/tmp3cq8ywv3.d(17): Error: template instance `to!int` template `to` is not
    defined, did you mean No?

    /tmp/tmp3cq8ywv3.d(19): Error: undefined identifier `sort`, did you mean function
    `sqrt`?

    /tmp/tmp3cq8ywv3.d(23): Error: template instance `to!string` template `to` is
    not defined, did you mean No?

    /tmp/tmp3cq8ywv3.d(25): Error: no property `trim` for type `string`

    Failed: ["dmd", "-unittest", "-v", "-o-", "/tmp/tmp3cq8ywv3.d", "-I/tmp"]

    '
  stdout: ''
  timestamp: 1660163090
- exit_code: 1
  program: "import std.typecons;\nimport std.math;\n/*\n Input is a space-delimited\
    \ string of numberals from 'zero' to 'nine'.\n    Valid choices are 'zero', 'one',\
    \ 'two', 'three', 'four', 'five', 'six', 'seven', 'eight' and 'nine'.\n    Return\
    \ the string with numbers sorted from smallest to largest\n    >>> sort_numbers(\"\
    three one five\")\n    \"one three five\"\n    \n*/\nstring sort_numbers(string\
    \ numbers) \n{\n    auto nums = numbers.split(\" \");\n    nums.sort!((a, b) =>\
    \ numeralToInt(a) < numeralToInt(b));\n    return nums.join(\" \");\n}\nunittest\n\
    {\n    alias candidate = sort_numbers;\n\n    assert(candidate(\"\") == \"\");\n\
    \    assert(candidate(\"three\") == \"three\");\n    assert(candidate(\"three\
    \ five nine\") == \"three five nine\");\n    assert(candidate(\"five zero four\
    \ seven nine eight\") == \"zero four five seven eight nine\");\n    assert(candidate(\"\
    six five four three two one zero\") == \"zero one two three four five six\");\n\
    }\nvoid main(){}"
  status: SyntaxError
  stderr: '/tmp/tmpw6jd4il2.d(13): Error: no property `split` for type `string`

    Failed: ["dmd", "-unittest", "-v", "-o-", "/tmp/tmpw6jd4il2.d", "-I/tmp"]

    '
  stdout: ''
  timestamp: 1660163090
- exit_code: 1
  program: "import std.typecons;\nimport std.math;\n/*\n Input is a space-delimited\
    \ string of numberals from 'zero' to 'nine'.\n    Valid choices are 'zero', 'one',\
    \ 'two', 'three', 'four', 'five', 'six', 'seven', 'eight' and 'nine'.\n    Return\
    \ the string with numbers sorted from smallest to largest\n    >>> sort_numbers(\"\
    three one five\")\n    \"one three five\"\n    \n*/\nstring sort_numbers(string\
    \ numbers) \n{\n    int[] nums;\n    foreach(n; numbers.split())\n    {\n    \
    \    switch(n)\n        {\n            case \"zero\": nums ~= 0; break;\n    \
    \        case \"one\": nums ~= 1; break;\n            case \"two\": nums ~= 2;\
    \ break;\n            case \"three\": nums ~= 3; break;\n            case \"four\"\
    : nums ~= 4; break;\n            case \"five\": nums ~= 5; break;\n          \
    \  case \"six\": nums ~= 6; break;\n            case \"seven\": nums ~= 7; break;\n\
    \            case \"eight\": nums ~= 8; break;\n            case \"nine\": nums\
    \ ~= 9; break;\n        }\n    }\n    nums.sort();\n    string[] num_strings;\n\
    \    foreach(n; nums)\n    {\n        switch(n)\n        {\n            case 0:\
    \ num_strings ~= \"zero\"; break;\n            case 1: num_strings ~= \"one\"\
    ; break;\n            case 2: num_strings ~= \"two\"; break;\n            case\
    \ 3: num_strings ~= \"three\"; break;\n            case 4: num_strings ~= \"four\"\
    ; break;\n            case 5: num_strings ~= \"five\"; break;\n            case\
    \ 6: num_strings ~= \"six\"; break;\n            case 7: num_strings ~= \"seven\"\
    ; break;\n            case 8: num_strings ~= \"eight\"; break;\n            case\
    \ 9: num_strings ~= \"nine\"; break;\n        }\n    }\n    return num_strings.join(\"\
    \ \");\n}\nunittest\n{\n    alias candidate = sort_numbers;\n\n    assert(candidate(\"\
    \") == \"\");\n    assert(candidate(\"three\") == \"three\");\n    assert(candidate(\"\
    three five nine\") == \"three five nine\");\n    assert(candidate(\"five zero\
    \ four seven nine eight\") == \"zero four five seven eight nine\");\n    assert(candidate(\"\
    six five four three two one zero\") == \"zero one two three four five six\");\n\
    }\nvoid main(){}"
  status: SyntaxError
  stderr: '/tmp/tmpiuwbjz3z.d(14): Error: no property `split` for type `string`

    /tmp/tmpiuwbjz3z.d(30): Error: no property `sort` for type `int[]`

    /tmp/tmpiuwbjz3z.d(34): Error: `switch` statement without a `default`; use `final
    switch` or add `default: assert(0);` or add `default: break;`

    /tmp/tmpiuwbjz3z.d(48): Error: no property `join` for type `string[]`

    Failed: ["dmd", "-unittest", "-v", "-o-", "/tmp/tmpiuwbjz3z.d", "-I/tmp"]

    '
  stdout: ''
  timestamp: 1660163090
- exit_code: 1
  program: "import std.typecons;\nimport std.math;\n/*\n Input is a space-delimited\
    \ string of numberals from 'zero' to 'nine'.\n    Valid choices are 'zero', 'one',\
    \ 'two', 'three', 'four', 'five', 'six', 'seven', 'eight' and 'nine'.\n    Return\
    \ the string with numbers sorted from smallest to largest\n    >>> sort_numbers(\"\
    three one five\")\n    \"one three five\"\n    \n*/\nstring sort_numbers(string\
    \ numbers) \n{\n    string[] nums = numbers.split(\" \");\n    int[] nums_int\
    \ = new int[nums.length];\n    foreach(i, num; nums)\n    {\n        nums_int[i]\
    \ = to!int(num);\n    }\n    sort(nums_int);\n    string result = \"\";\n    foreach(i,\
    \ num; nums_int)\n    {\n        result ~= num.to!string ~ \" \";\n    }\n   \
    \ return result.stripRight;\n}\nunittest\n{\n    alias candidate = sort_numbers;\n\
    \n    assert(candidate(\"\") == \"\");\n    assert(candidate(\"three\") == \"\
    three\");\n    assert(candidate(\"three five nine\") == \"three five nine\");\n\
    \    assert(candidate(\"five zero four seven nine eight\") == \"zero four five\
    \ seven eight nine\");\n    assert(candidate(\"six five four three two one zero\"\
    ) == \"zero one two three four five six\");\n}\nvoid main(){}"
  status: SyntaxError
  stderr: '/tmp/tmp515izub4.d(13): Error: no property `split` for type `string`

    /tmp/tmp515izub4.d(17): Error: template instance `to!int` template `to` is not
    defined, did you mean No?

    /tmp/tmp515izub4.d(19): Error: undefined identifier `sort`, did you mean function
    `sqrt`?

    /tmp/tmp515izub4.d(23): Error: no property `to` for type `int`

    /tmp/tmp515izub4.d(25): Error: no property `stripRight` for type `string`

    Failed: ["dmd", "-unittest", "-v", "-o-", "/tmp/tmp515izub4.d", "-I/tmp"]

    '
  stdout: ''
  timestamp: 1660163090
- exit_code: 1
  program: "import std.typecons;\nimport std.math;\n/*\n Input is a space-delimited\
    \ string of numberals from 'zero' to 'nine'.\n    Valid choices are 'zero', 'one',\
    \ 'two', 'three', 'four', 'five', 'six', 'seven', 'eight' and 'nine'.\n    Return\
    \ the string with numbers sorted from smallest to largest\n    >>> sort_numbers(\"\
    three one five\")\n    \"one three five\"\n    \n*/\nstring sort_numbers(string\
    \ numbers) \n{\n    string[] nums = numbers.split(\" \");\n    int[] nums_int\
    \ = new int[nums.length];\n    foreach(int i, string num; nums) {\n        nums_int[i]\
    \ = to!int(num);\n    }\n    sort(nums_int);\n    foreach(int i, int num; nums_int)\
    \ {\n        nums[i] = to!string(num);\n    }\n    return join(nums, \" \");\n\
    }\nunittest\n{\n    alias candidate = sort_numbers;\n\n    assert(candidate(\"\
    \") == \"\");\n    assert(candidate(\"three\") == \"three\");\n    assert(candidate(\"\
    three five nine\") == \"three five nine\");\n    assert(candidate(\"five zero\
    \ four seven nine eight\") == \"zero four five seven eight nine\");\n    assert(candidate(\"\
    six five four three two one zero\") == \"zero one two three four five six\");\n\
    }\nvoid main(){}"
  status: SyntaxError
  stderr: '/tmp/tmpf4_exupo.d(13): Error: no property `split` for type `string`

    /tmp/tmpf4_exupo.d(16): Error: template instance `to!int` template `to` is not
    defined, did you mean No?

    /tmp/tmpf4_exupo.d(18): Error: undefined identifier `sort`, did you mean function
    `sqrt`?

    /tmp/tmpf4_exupo.d(20): Error: template instance `to!string` template `to` is
    not defined, did you mean No?

    /tmp/tmpf4_exupo.d(22): Error: undefined identifier `join`, did you mean function
    `main`?

    Failed: ["dmd", "-unittest", "-v", "-o-", "/tmp/tmpf4_exupo.d", "-I/tmp"]

    '
  stdout: ''
  timestamp: 1660163090
- exit_code: 1
  program: "import std.typecons;\nimport std.math;\n/*\n Input is a space-delimited\
    \ string of numberals from 'zero' to 'nine'.\n    Valid choices are 'zero', 'one',\
    \ 'two', 'three', 'four', 'five', 'six', 'seven', 'eight' and 'nine'.\n    Return\
    \ the string with numbers sorted from smallest to largest\n    >>> sort_numbers(\"\
    three one five\")\n    \"one three five\"\n    \n*/\nstring sort_numbers(string\
    \ numbers) \n{\n    int[] nums;\n    string[] numeral = [\"zero\", \"one\", \"\
    two\", \"three\", \"four\", \"five\", \"six\", \"seven\", \"eight\", \"nine\"\
    ];\n    foreach(string num; numbers.split())\n    {\n        nums ~= numeral.indexOf(num);\n\
    \    }\n    sort(nums);\n    string result;\n    foreach(int num; nums)\n    {\n\
    \        result ~= numeral[num] ~ \" \";\n    }\n    return result.stripRight();\n\
    }\nunittest\n{\n    alias candidate = sort_numbers;\n\n    assert(candidate(\"\
    \") == \"\");\n    assert(candidate(\"three\") == \"three\");\n    assert(candidate(\"\
    three five nine\") == \"three five nine\");\n    assert(candidate(\"five zero\
    \ four seven nine eight\") == \"zero four five seven eight nine\");\n    assert(candidate(\"\
    six five four three two one zero\") == \"zero one two three four five six\");\n\
    }\nvoid main(){}"
  status: SyntaxError
  stderr: '/tmp/tmpb43tu68u.d(15): Error: no property `split` for type `string`

    /tmp/tmpb43tu68u.d(19): Error: undefined identifier `sort`, did you mean function
    `sqrt`?

    /tmp/tmpb43tu68u.d(25): Error: no property `stripRight` for type `string`

    Failed: ["dmd", "-unittest", "-v", "-o-", "/tmp/tmpb43tu68u.d", "-I/tmp"]

    '
  stdout: ''
  timestamp: 1660163090
- exit_code: 1
  program: "import std.typecons;\nimport std.math;\n/*\n Input is a space-delimited\
    \ string of numberals from 'zero' to 'nine'.\n    Valid choices are 'zero', 'one',\
    \ 'two', 'three', 'four', 'five', 'six', 'seven', 'eight' and 'nine'.\n    Return\
    \ the string with numbers sorted from smallest to largest\n    >>> sort_numbers(\"\
    three one five\")\n    \"one three five\"\n    \n*/\nstring sort_numbers(string\
    \ numbers) \n{\n    string[] nums = numbers.split(\" \");\n    int[] nums_int\
    \ = new int[nums.length];\n    foreach(int i, string num; nums)\n    {\n     \
    \   nums_int[i] = num_to_int(num);\n    }\n    sort(nums_int);\n    foreach(int\
    \ i, int num; nums_int)\n    {\n        nums[i] = int_to_num(num);\n    }\n  \
    \  return join(nums, \" \");\n}\nunittest\n{\n    alias candidate = sort_numbers;\n\
    \n    assert(candidate(\"\") == \"\");\n    assert(candidate(\"three\") == \"\
    three\");\n    assert(candidate(\"three five nine\") == \"three five nine\");\n\
    \    assert(candidate(\"five zero four seven nine eight\") == \"zero four five\
    \ seven eight nine\");\n    assert(candidate(\"six five four three two one zero\"\
    ) == \"zero one two three four five six\");\n}\nvoid main(){}"
  status: SyntaxError
  stderr: '/tmp/tmpa_wv76e_.d(13): Error: no property `split` for type `string`

    /tmp/tmpa_wv76e_.d(17): Error: undefined identifier `num_to_int`

    /tmp/tmpa_wv76e_.d(19): Error: undefined identifier `sort`, did you mean function
    `sqrt`?

    /tmp/tmpa_wv76e_.d(22): Error: undefined identifier `int_to_num`

    /tmp/tmpa_wv76e_.d(24): Error: undefined identifier `join`, did you mean function
    `main`?

    Failed: ["dmd", "-unittest", "-v", "-o-", "/tmp/tmpa_wv76e_.d", "-I/tmp"]

    '
  stdout: ''
  timestamp: 1660163090
- exit_code: 1
  program: "import std.typecons;\nimport std.math;\n/*\n Input is a space-delimited\
    \ string of numberals from 'zero' to 'nine'.\n    Valid choices are 'zero', 'one',\
    \ 'two', 'three', 'four', 'five', 'six', 'seven', 'eight' and 'nine'.\n    Return\
    \ the string with numbers sorted from smallest to largest\n    >>> sort_numbers(\"\
    three one five\")\n    \"one three five\"\n    \n*/\nstring sort_numbers(string\
    \ numbers) \n{\n    string[] nums = numbers.split();\n    int[] nums_int = new\
    \ int[nums.length];\n    foreach(int i, string num; nums)\n    {\n        nums_int[i]\
    \ = num_to_int(num);\n    }\n    sort(nums_int);\n    foreach(int i, int num;\
    \ nums_int)\n    {\n        nums[i] = int_to_num(num);\n    }\n    return join(nums,\
    \ \" \");\n}\nunittest\n{\n    alias candidate = sort_numbers;\n\n    assert(candidate(\"\
    \") == \"\");\n    assert(candidate(\"three\") == \"three\");\n    assert(candidate(\"\
    three five nine\") == \"three five nine\");\n    assert(candidate(\"five zero\
    \ four seven nine eight\") == \"zero four five seven eight nine\");\n    assert(candidate(\"\
    six five four three two one zero\") == \"zero one two three four five six\");\n\
    }\nvoid main(){}"
  status: SyntaxError
  stderr: '/tmp/tmpjy454kd3.d(13): Error: no property `split` for type `string`

    /tmp/tmpjy454kd3.d(17): Error: undefined identifier `num_to_int`

    /tmp/tmpjy454kd3.d(19): Error: undefined identifier `sort`, did you mean function
    `sqrt`?

    /tmp/tmpjy454kd3.d(22): Error: undefined identifier `int_to_num`

    /tmp/tmpjy454kd3.d(24): Error: undefined identifier `join`, did you mean function
    `main`?

    Failed: ["dmd", "-unittest", "-v", "-o-", "/tmp/tmpjy454kd3.d", "-I/tmp"]

    '
  stdout: ''
  timestamp: 1660163090
- exit_code: 1
  program: "import std.typecons;\nimport std.math;\n/*\n Input is a space-delimited\
    \ string of numberals from 'zero' to 'nine'.\n    Valid choices are 'zero', 'one',\
    \ 'two', 'three', 'four', 'five', 'six', 'seven', 'eight' and 'nine'.\n    Return\
    \ the string with numbers sorted from smallest to largest\n    >>> sort_numbers(\"\
    three one five\")\n    \"one three five\"\n    \n*/\nstring sort_numbers(string\
    \ numbers) \n{\n    string[] nums = numbers.split(\" \");\n    int[] nums_int\
    \ = new int[nums.length];\n    for (int i = 0; i < nums.length; i++)\n    {\n\
    \        nums_int[i] = to!int(nums[i]);\n    }\n    nums_int.sort;\n    string\
    \ result = \"\";\n    foreach (int i; nums_int)\n    {\n        result ~= to!string(i)\
    \ ~ \" \";\n    }\n    return result.trimRight;\n}\nunittest\n{\n    alias candidate\
    \ = sort_numbers;\n\n    assert(candidate(\"\") == \"\");\n    assert(candidate(\"\
    three\") == \"three\");\n    assert(candidate(\"three five nine\") == \"three\
    \ five nine\");\n    assert(candidate(\"five zero four seven nine eight\") ==\
    \ \"zero four five seven eight nine\");\n    assert(candidate(\"six five four\
    \ three two one zero\") == \"zero one two three four five six\");\n}\nvoid main(){}"
  status: SyntaxError
  stderr: '/tmp/tmpptvpmkos.d(13): Error: no property `split` for type `string`

    /tmp/tmpptvpmkos.d(17): Error: template instance `to!int` template `to` is not
    defined, did you mean No?

    /tmp/tmpptvpmkos.d(19): Error: no property `sort` for type `int[]`

    /tmp/tmpptvpmkos.d(23): Error: template instance `to!string` template `to` is
    not defined, did you mean No?

    /tmp/tmpptvpmkos.d(25): Error: no property `trimRight` for type `string`

    Failed: ["dmd", "-unittest", "-v", "-o-", "/tmp/tmpptvpmkos.d", "-I/tmp"]

    '
  stdout: ''
  timestamp: 1660163090
- exit_code: 1
  program: "import std.typecons;\nimport std.math;\n/*\n Input is a space-delimited\
    \ string of numberals from 'zero' to 'nine'.\n    Valid choices are 'zero', 'one',\
    \ 'two', 'three', 'four', 'five', 'six', 'seven', 'eight' and 'nine'.\n    Return\
    \ the string with numbers sorted from smallest to largest\n    >>> sort_numbers(\"\
    three one five\")\n    \"one three five\"\n    \n*/\nstring sort_numbers(string\
    \ numbers) \n{\n    // Split the string into an array of strings\n    string[]\
    \ nums = numbers.split(\" \");\n    // Convert the array of strings to an array\
    \ of ints\n    int[] nums_int = nums.map!(a => to!int(a)).array;\n    // Sort\
    \ the array of ints\n    sort(nums_int);\n    // Convert the array of ints to\
    \ an array of strings\n    nums = nums_int.map!(a => to!string(a)).array;\n  \
    \  // Join the array of strings into a single string\n    return nums.join(\"\
    \ \");\n}\nunittest\n{\n    alias candidate = sort_numbers;\n\n    assert(candidate(\"\
    \") == \"\");\n    assert(candidate(\"three\") == \"three\");\n    assert(candidate(\"\
    three five nine\") == \"three five nine\");\n    assert(candidate(\"five zero\
    \ four seven nine eight\") == \"zero four five seven eight nine\");\n    assert(candidate(\"\
    six five four three two one zero\") == \"zero one two three four five six\");\n\
    }\nvoid main(){}"
  status: SyntaxError
  stderr: '/tmp/tmppa1sa3h2.d(14): Error: no property `split` for type `string`

    /tmp/tmppa1sa3h2.d(16): Error: no property `map` for type `string[]`

    /tmp/tmppa1sa3h2.d(18): Error: undefined identifier `sort`, did you mean function
    `sqrt`?

    /tmp/tmppa1sa3h2.d(20): Error: no property `map` for type `int[]`

    /tmp/tmppa1sa3h2.d(22): Error: no property `join` for type `string[]`

    Failed: ["dmd", "-unittest", "-v", "-o-", "/tmp/tmppa1sa3h2.d", "-I/tmp"]

    '
  stdout: ''
  timestamp: 1660163090
- exit_code: 1
  program: "import std.typecons;\nimport std.math;\n/*\n Input is a space-delimited\
    \ string of numberals from 'zero' to 'nine'.\n    Valid choices are 'zero', 'one',\
    \ 'two', 'three', 'four', 'five', 'six', 'seven', 'eight' and 'nine'.\n    Return\
    \ the string with numbers sorted from smallest to largest\n    >>> sort_numbers(\"\
    three one five\")\n    \"one three five\"\n    \n*/\nstring sort_numbers(string\
    \ numbers) \n{\n    int[] nums;\n    foreach(n; numbers.split)\n    {\n      \
    \  switch(n)\n        {\n            case \"zero\":\n                nums ~= 0;\n\
    \                break;\n            case \"one\":\n                nums ~= 1;\n\
    \                break;\n            case \"two\":\n                nums ~= 2;\n\
    \                break;\n            case \"three\":\n                nums ~=\
    \ 3;\n                break;\n            case \"four\":\n                nums\
    \ ~= 4;\n                break;\n            case \"five\":\n                nums\
    \ ~= 5;\n                break;\n            case \"six\":\n                nums\
    \ ~= 6;\n                break;\n            case \"seven\":\n               \
    \ nums ~= 7;\n                break;\n            case \"eight\":\n          \
    \      nums ~= 8;\n                break;\n            case \"nine\":\n      \
    \          nums ~= 9;\n                break;\n        }\n    }\n    nums.sort;\n\
    \    string result;\n    foreach(n; nums)\n    {\n        switch(n)\n        {\n\
    \            case 0:\n                result ~= \"zero \";\n                break;\n\
    \            case 1:\n                result ~= \"one \";\n                break;\n\
    \            case 2:\n                result ~= \"two \";\n                break;\n\
    \            case 3:\n                result ~= \"three \";\n                break;\n\
    \            case 4:\n                result ~= \"four \";\n                break;\n\
    \            case 5:\n                result ~= \"five \";\n                break;\n\
    \            case 6:\n                result ~= \"six \";\n                break;\n\
    \            case 7:\n                result ~= \"seven \";\n                break;\n\
    \            case 8:\n                result ~= \"eight \";\n                break;\n\
    \            case 9:\n                result ~= \"nine \";\n                break;\n\
    \        }\n    }\n    return result;\n}\n/*\n    Input is a string of numbers\
    \ from 'zero' to 'nine'.\n    Return the string with numbers sorted from smallest\
    \ to largest\n    >>> sort_numbers(\"three one five\")\n    \"one three five\"\
    \n    \n*/\nstring sort_numbers(string numbers) \n{\n\nunittest\n{\n    alias\
    \ candidate = sort_numbers;\n\n    assert(candidate(\"\") == \"\");\n    assert(candidate(\"\
    three\") == \"three\");\n    assert(candidate(\"three five nine\") == \"three\
    \ five nine\");\n    assert(candidate(\"five zero four seven nine eight\") ==\
    \ \"zero four five seven eight nine\");\n    assert(candidate(\"six five four\
    \ three two one zero\") == \"zero one two three four five six\");\n}\nvoid main(){}"
  status: SyntaxError
  stderr: '/tmp/tmp0o5mqoeo.d(100): Error: found `unittest` instead of statement

    Failed: ["dmd", "-unittest", "-v", "-o-", "/tmp/tmp0o5mqoeo.d", "-I/tmp"]

    '
  stdout: ''
  timestamp: 1660163090
- exit_code: 1
  program: "import std.typecons;\nimport std.math;\n/*\n Input is a space-delimited\
    \ string of numberals from 'zero' to 'nine'.\n    Valid choices are 'zero', 'one',\
    \ 'two', 'three', 'four', 'five', 'six', 'seven', 'eight' and 'nine'.\n    Return\
    \ the string with numbers sorted from smallest to largest\n    >>> sort_numbers(\"\
    three one five\")\n    \"one three five\"\n    \n*/\nstring sort_numbers(string\
    \ numbers) \n{\n    string[] nums = numbers.split(\" \");\n    int[] nums_int\
    \ = new int[nums.length];\n    foreach(i, num; nums)\n    {\n        switch(num)\n\
    \        {\n            case \"zero\":\n                nums_int[i] = 0;\n   \
    \             break;\n            case \"one\":\n                nums_int[i] =\
    \ 1;\n                break;\n            case \"two\":\n                nums_int[i]\
    \ = 2;\n                break;\n            case \"three\":\n                nums_int[i]\
    \ = 3;\n                break;\n            case \"four\":\n                nums_int[i]\
    \ = 4;\n                break;\n            case \"five\":\n                nums_int[i]\
    \ = 5;\n                break;\n            case \"six\":\n                nums_int[i]\
    \ = 6;\n                break;\n            case \"seven\":\n                nums_int[i]\
    \ = 7;\n                break;\n            case \"eight\":\n                nums_int[i]\
    \ = 8;\n                break;\n            case \"nine\":\n                nums_int[i]\
    \ = 9;\n                break;\n        }\n    }\n    nums_int.sort();\n    foreach(i,\
    \ num; nums_int)\n    {\n        switch(num)\n        {\n            case 0:\n\
    \                nums[i] = \"zero\";\n                break;\n            case\
    \ 1:\n                nums[i] = \"one\";\n                break;\n           \
    \ case 2:\n                nums[i] = \"two\";\n                break;\n      \
    \      case 3:\n                nums[i] = \"three\";\n                break;\n\
    \            case 4:\n                nums[i] = \"four\";\n                break;\n\
    \            case 5:\n                nums[i] = \"five\";\n                break;\n\
    \            case 6:\n                nums[i] = \"six\";\n                break;\n\
    \            case 7:\n                nums[i] = \"seven\";\n                break;\n\
    \            case 8:\n                nums[i] = \"eight\";\n                break;\n\
    \            case 9:\n                nums[i] = \"nine\nunittest\n{\n    alias\
    \ candidate = sort_numbers;\n\n    assert(candidate(\"\") == \"\");\n    assert(candidate(\"\
    three\") == \"three\");\n    assert(candidate(\"three five nine\") == \"three\
    \ five nine\");\n    assert(candidate(\"five zero four seven nine eight\") ==\
    \ \"zero four five seven eight nine\");\n    assert(candidate(\"six five four\
    \ three two one zero\") == \"zero one two three four five six\");\n}\nvoid main(){}"
  status: SyntaxError
  stderr: '/tmp/tmpq_hzlrvp.d(89): Error: Implicit string concatenation is deprecated,
    use "nine\x0aunittest\x0a{\x0a    alias candidate = sort_numbers;\x0a\x0a    assert(candidate("
    ~ ") == " instead

    /tmp/tmpq_hzlrvp.d(89): Error: Implicit string concatenation is deprecated, use
    ") == " ~ ");\x0a    assert(candidate(" instead

    /tmp/tmpq_hzlrvp.d(90): Error: found `three` when expecting `;` following statement

    /tmp/tmpq_hzlrvp.d(90): Error: found `three` when expecting `;` following statement

    /tmp/tmpq_hzlrvp.d(91): Error: found `three` when expecting `;` following statement

    /tmp/tmpq_hzlrvp.d(91): Error: found `nine` when expecting `;` following statement

    /tmp/tmpq_hzlrvp.d(91): Error: found `three` when expecting `;` following statement

    /tmp/tmpq_hzlrvp.d(91): Error: found `nine` when expecting `;` following statement

    /tmp/tmpq_hzlrvp.d(92): Error: found `five` when expecting `;` following statement

    /tmp/tmpq_hzlrvp.d(92): Error: found `four` when expecting `;` following statement

    /tmp/tmpq_hzlrvp.d(92): Error: found `'
  stdout: ''
  timestamp: 1660163090
- exit_code: 1
  program: "import std.typecons;\nimport std.math;\n/*\n Input is a space-delimited\
    \ string of numberals from 'zero' to 'nine'.\n    Valid choices are 'zero', 'one',\
    \ 'two', 'three', 'four', 'five', 'six', 'seven', 'eight' and 'nine'.\n    Return\
    \ the string with numbers sorted from smallest to largest\n    >>> sort_numbers(\"\
    three one five\")\n    \"one three five\"\n    \n*/\nstring sort_numbers(string\
    \ numbers) \n{\n    int[] nums;\n    foreach(num; numbers.split(\" \"))\n    {\n\
    \        switch(num)\n        {\n            case \"zero\": nums ~= 0; break;\n\
    \            case \"one\": nums ~= 1; break;\n            case \"two\": nums ~=\
    \ 2; break;\n            case \"three\": nums ~= 3; break;\n            case \"\
    four\": nums ~= 4; break;\n            case \"five\": nums ~= 5; break;\n    \
    \        case \"six\": nums ~= 6; break;\n            case \"seven\": nums ~=\
    \ 7; break;\n            case \"eight\": nums ~= 8; break;\n            case \"\
    nine\": nums ~= 9; break;\n        }\n    }\n    nums.sort;\n    string[] nums_str;\n\
    \    foreach(num; nums)\n    {\n        switch(num)\n        {\n            case\
    \ 0: nums_str ~= \"zero\"; break;\n            case 1: nums_str ~= \"one\"; break;\n\
    \            case 2: nums_str ~= \"two\"; break;\n            case 3: nums_str\
    \ ~= \"three\"; break;\n            case 4: nums_str ~= \"four\"; break;\n   \
    \         case 5: nums_str ~= \"five\"; break;\n            case 6: nums_str ~=\
    \ \"six\"; break;\n            case 7: nums_str ~= \"seven\"; break;\n       \
    \     case 8: nums_str ~= \"eight\"; break;\n            case 9: nums_str ~= \"\
    nine\"; break;\n        }\n    }\n    return nums_str.join(\" \");\n}\nunittest\n\
    {\n    alias candidate = sort_numbers;\n\n    assert(candidate(\"\") == \"\");\n\
    \    assert(candidate(\"three\") == \"three\");\n    assert(candidate(\"three\
    \ five nine\") == \"three five nine\");\n    assert(candidate(\"five zero four\
    \ seven nine eight\") == \"zero four five seven eight nine\");\n    assert(candidate(\"\
    six five four three two one zero\") == \"zero one two three four five six\");\n\
    }\nvoid main(){}"
  status: SyntaxError
  stderr: '/tmp/tmp_gzcg5tr.d(14): Error: no property `split` for type `string`

    /tmp/tmp_gzcg5tr.d(30): Error: no property `sort` for type `int[]`

    /tmp/tmp_gzcg5tr.d(34): Error: `switch` statement without a `default`; use `final
    switch` or add `default: assert(0);` or add `default: break;`

    /tmp/tmp_gzcg5tr.d(48): Error: no property `join` for type `string[]`

    Failed: ["dmd", "-unittest", "-v", "-o-", "/tmp/tmp_gzcg5tr.d", "-I/tmp"]

    '
  stdout: ''
  timestamp: 1660163090
- exit_code: 1
  program: "import std.typecons;\nimport std.math;\n/*\n Input is a space-delimited\
    \ string of numberals from 'zero' to 'nine'.\n    Valid choices are 'zero', 'one',\
    \ 'two', 'three', 'four', 'five', 'six', 'seven', 'eight' and 'nine'.\n    Return\
    \ the string with numbers sorted from smallest to largest\n    >>> sort_numbers(\"\
    three one five\")\n    \"one three five\"\n    \n*/\nstring sort_numbers(string\
    \ numbers) \n{\n    string[] nums = numbers.split(\" \");\n    int[] nums_int\
    \ = new int[nums.length];\n    foreach(i, num; nums)\n    {\n        nums_int[i]\
    \ = num_to_int(num);\n    }\n    sort(nums_int);\n    foreach(i, num; nums_int)\n\
    \    {\n        nums[i] = int_to_num(num);\n    }\n    return join(nums, \" \"\
    );\n}\nunittest\n{\n    alias candidate = sort_numbers;\n\n    assert(candidate(\"\
    \") == \"\");\n    assert(candidate(\"three\") == \"three\");\n    assert(candidate(\"\
    three five nine\") == \"three five nine\");\n    assert(candidate(\"five zero\
    \ four seven nine eight\") == \"zero four five seven eight nine\");\n    assert(candidate(\"\
    six five four three two one zero\") == \"zero one two three four five six\");\n\
    }\nvoid main(){}"
  status: SyntaxError
  stderr: '/tmp/tmphrzyu1es.d(13): Error: no property `split` for type `string`

    /tmp/tmphrzyu1es.d(17): Error: undefined identifier `num_to_int`

    /tmp/tmphrzyu1es.d(19): Error: undefined identifier `sort`, did you mean function
    `sqrt`?

    /tmp/tmphrzyu1es.d(22): Error: undefined identifier `int_to_num`

    /tmp/tmphrzyu1es.d(24): Error: undefined identifier `join`, did you mean function
    `main`?

    Failed: ["dmd", "-unittest", "-v", "-o-", "/tmp/tmphrzyu1es.d", "-I/tmp"]

    '
  stdout: ''
  timestamp: 1660163090
- exit_code: 1
  program: "import std.typecons;\nimport std.math;\n/*\n Input is a space-delimited\
    \ string of numberals from 'zero' to 'nine'.\n    Valid choices are 'zero', 'one',\
    \ 'two', 'three', 'four', 'five', 'six', 'seven', 'eight' and 'nine'.\n    Return\
    \ the string with numbers sorted from smallest to largest\n    >>> sort_numbers(\"\
    three one five\")\n    \"one three five\"\n    \n*/\nstring sort_numbers(string\
    \ numbers) \n{\n    string[] nums = numbers.split(\" \");\n    string[] nums_sorted\
    \ = nums.sort();\n    return nums_sorted.join(\" \");\n}\nunittest\n{\n    alias\
    \ candidate = sort_numbers;\n\n    assert(candidate(\"\") == \"\");\n    assert(candidate(\"\
    three\") == \"three\");\n    assert(candidate(\"three five nine\") == \"three\
    \ five nine\");\n    assert(candidate(\"five zero four seven nine eight\") ==\
    \ \"zero four five seven eight nine\");\n    assert(candidate(\"six five four\
    \ three two one zero\") == \"zero one two three four five six\");\n}\nvoid main(){}"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660163090
- exit_code: 1
  program: "import std.typecons;\nimport std.math;\n/*\n Input is a space-delimited\
    \ string of numberals from 'zero' to 'nine'.\n    Valid choices are 'zero', 'one',\
    \ 'two', 'three', 'four', 'five', 'six', 'seven', 'eight' and 'nine'.\n    Return\
    \ the string with numbers sorted from smallest to largest\n    >>> sort_numbers(\"\
    three one five\")\n    \"one three five\"\n    \n*/\nstring sort_numbers(string\
    \ numbers) \n{\n    string[] nums = numbers.split(\" \");\n    int[] nums_int\
    \ = new int[nums.length];\n    foreach(i, num; nums)\n    {\n        nums_int[i]\
    \ = to!int(num);\n    }\n    sort(nums_int);\n    nums = new string[nums_int.length];\n\
    \    foreach(i, num; nums_int)\n    {\n        nums[i] = to!string(num);\n   \
    \ }\n    return join(nums, \" \");\n}\nunittest\n{\n    alias candidate = sort_numbers;\n\
    \n    assert(candidate(\"\") == \"\");\n    assert(candidate(\"three\") == \"\
    three\");\n    assert(candidate(\"three five nine\") == \"three five nine\");\n\
    \    assert(candidate(\"five zero four seven nine eight\") == \"zero four five\
    \ seven eight nine\");\n    assert(candidate(\"six five four three two one zero\"\
    ) == \"zero one two three four five six\");\n}\nvoid main(){}"
  status: SyntaxError
  stderr: '/tmp/tmphttr_xs6.d(13): Error: no property `split` for type `string`

    /tmp/tmphttr_xs6.d(17): Error: template instance `to!int` template `to` is not
    defined, did you mean No?

    /tmp/tmphttr_xs6.d(19): Error: undefined identifier `sort`, did you mean function
    `sqrt`?

    /tmp/tmphttr_xs6.d(23): Error: template instance `to!string` template `to` is
    not defined, did you mean No?

    /tmp/tmphttr_xs6.d(25): Error: undefined identifier `join`, did you mean function
    `main`?

    Failed: ["dmd", "-unittest", "-v", "-o-", "/tmp/tmphttr_xs6.d", "-I/tmp"]

    '
  stdout: ''
  timestamp: 1660163091
- exit_code: 1
  program: "import std.typecons;\nimport std.math;\n/*\n Input is a space-delimited\
    \ string of numberals from 'zero' to 'nine'.\n    Valid choices are 'zero', 'one',\
    \ 'two', 'three', 'four', 'five', 'six', 'seven', 'eight' and 'nine'.\n    Return\
    \ the string with numbers sorted from smallest to largest\n    >>> sort_numbers(\"\
    three one five\")\n    \"one three five\"\n    \n*/\nstring sort_numbers(string\
    \ numbers) \n{\n    import std.algorithm;\n    import std.array;\n    import std.conv;\n\
    \    import std.range;\n    import std.string;\n    import std.typecons;\n   \
    \ import std.math;\n    // split the string into an array of strings\n    string[]\
    \ nums = numbers.split(\" \");\n    // create a map of the numberals to the numbers\n\
    \    auto numeral_map = [\n        \"zero\": 0,\n        \"one\": 1,\n       \
    \ \"two\": 2,\n        \"three\": 3,\n        \"four\": 4,\n        \"five\":\
    \ 5,\n        \"six\": 6,\n        \"seven\": 7,\n        \"eight\": 8,\n    \
    \    \"nine\": 9\n    ];\n    // create a map of the numbers to the numberals\n\
    \    auto number_map = [\n        0: \"zero\",\n        1: \"one\",\n        2:\
    \ \"two\",\n        3: \"three\",\n        4: \"four\",\n        5: \"five\",\n\
    \        6: \"six\",\n        7: \"seven\",\n        8: \"eight\",\n        9:\
    \ \"nine\"\n    ];\n    // create an array of ints from the array of strings\n\
    \    int[] num_ints = nums.map!(a => numeral_map[a]);\n    // sort the array of\
    \ ints\n    num_ints.sort;\n    // create an array of strings from the array of\
    \ ints\n    string[] num_strings = num_ints.map!(a => number_map[a]);\n    //\
    \ join the array of strings into a single string\n    return num_strings.join(\"\
    \ \");\n}\nunittest\n{\n    alias candidate = sort_numbers;\n\n    assert(candidate(\"\
    \") == \"\");\n    assert(candidate(\"three\") == \"three\");\n    assert(candidate(\"\
    three five nine\") == \"three five nine\");\n    assert(candidate(\"five zero\
    \ four seven nine eight\") == \"zero four five seven eight nine\");\n    assert(candidate(\"\
    six five four three two one zero\") == \"zero one two three four five six\");\n\
    }\nvoid main(){}"
  status: SyntaxError
  stderr: '/tmp/tmpz296clnp.d(49): Error: cannot implicitly convert expression `map(nums)`
    of type `MapResult!(__lambda2, string[])` to `int[]`

    /tmp/tmpz296clnp.d(53): Error: cannot implicitly convert expression `map(num_ints)`
    of type `MapResult!(__lambda3, int[])` to `string[]`

    Failed: ["dmd", "-unittest", "-v", "-o-", "/tmp/tmpz296clnp.d", "-I/tmp"]

    '
  stdout: ''
  timestamp: 1660163091
- exit_code: 1
  program: "import std.typecons;\nimport std.math;\n/*\n Input is a space-delimited\
    \ string of numberals from 'zero' to 'nine'.\n    Valid choices are 'zero', 'one',\
    \ 'two', 'three', 'four', 'five', 'six', 'seven', 'eight' and 'nine'.\n    Return\
    \ the string with numbers sorted from smallest to largest\n    >>> sort_numbers(\"\
    three one five\")\n    \"one three five\"\n    \n*/\nstring sort_numbers(string\
    \ numbers) \n{\n    string[] nums = numbers.split(\" \");\n    string[] nums_sorted\
    \ = nums.dup;\n    nums_sorted.sort;\n    string result = \"\";\n    foreach(string\
    \ num; nums_sorted)\n    {\n        result ~= num ~ \" \";\n    }\n    return\
    \ result.stripRight;\n}\nunittest\n{\n    alias candidate = sort_numbers;\n\n\
    \    assert(candidate(\"\") == \"\");\n    assert(candidate(\"three\") == \"three\"\
    );\n    assert(candidate(\"three five nine\") == \"three five nine\");\n    assert(candidate(\"\
    five zero four seven nine eight\") == \"zero four five seven eight nine\");\n\
    \    assert(candidate(\"six five four three two one zero\") == \"zero one two\
    \ three four five six\");\n}\nvoid main(){}"
  status: SyntaxError
  stderr: '/tmp/tmp9ntca_v9.d(13): Error: no property `split` for type `string`

    /tmp/tmp9ntca_v9.d(15): Error: no property `sort` for type `string[]`

    /tmp/tmp9ntca_v9.d(21): Error: no property `stripRight` for type `string`

    Failed: ["dmd", "-unittest", "-v", "-o-", "/tmp/tmp9ntca_v9.d", "-I/tmp"]

    '
  stdout: ''
  timestamp: 1660163090
- exit_code: 1
  program: "import std.typecons;\nimport std.math;\n/*\n Input is a space-delimited\
    \ string of numberals from 'zero' to 'nine'.\n    Valid choices are 'zero', 'one',\
    \ 'two', 'three', 'four', 'five', 'six', 'seven', 'eight' and 'nine'.\n    Return\
    \ the string with numbers sorted from smallest to largest\n    >>> sort_numbers(\"\
    three one five\")\n    \"one three five\"\n    \n*/\nstring sort_numbers(string\
    \ numbers) \n{\n    string[] nums = numbers.split(\" \");\n    int[] nums_int\
    \ = new int[nums.length];\n    foreach(i, num; nums)\n    {\n        switch(num)\n\
    \        {\n            case \"zero\":\n                nums_int[i] = 0;\n   \
    \             break;\n            case \"one\":\n                nums_int[i] =\
    \ 1;\n                break;\n            case \"two\":\n                nums_int[i]\
    \ = 2;\n                break;\n            case \"three\":\n                nums_int[i]\
    \ = 3;\n                break;\n            case \"four\":\n                nums_int[i]\
    \ = 4;\n                break;\n            case \"five\":\n                nums_int[i]\
    \ = 5;\n                break;\n            case \"six\":\n                nums_int[i]\
    \ = 6;\n                break;\n            case \"seven\":\n                nums_int[i]\
    \ = 7;\n                break;\n            case \"eight\":\n                nums_int[i]\
    \ = 8;\n                break;\n            case \"nine\":\n                nums_int[i]\
    \ = 9;\n                break;\n        }\n    }\n    nums_int.sort();\n    foreach(i,\
    \ num; nums_int)\n    {\n        switch(num)\n        {\n            case 0:\n\
    \                nums[i] = \"zero\";\n                break;\n            case\
    \ 1:\n                nums[i] = \"one\";\n                break;\n           \
    \ case 2:\n                nums[i] = \"two\";\n                break;\n      \
    \      case 3:\n                nums[i] = \"three\";\n                break;\n\
    \            case 4:\n                nums[i] = \"four\";\n                break;\n\
    \            case 5:\n                nums[i] = \"five\";\n                break;\n\
    \            case 6:\n                nums[i] = \"six\";\n                break;\n\
    \            case 7:\n                nums[i] = \"seven\";\n                break;\n\
    \            case 8:\n                nums[i] = \"eight\";\n                break;\n\
    \            case 9:\n                nums[i] = \"nine\nunittest\n{\n    alias\
    \ candidate = sort_numbers;\n\n    assert(candidate(\"\") == \"\");\n    assert(candidate(\"\
    three\") == \"three\");\n    assert(candidate(\"three five nine\") == \"three\
    \ five nine\");\n    assert(candidate(\"five zero four seven nine eight\") ==\
    \ \"zero four five seven eight nine\");\n    assert(candidate(\"six five four\
    \ three two one zero\") == \"zero one two three four five six\");\n}\nvoid main(){}"
  status: SyntaxError
  stderr: '/tmp/tmpq_hzlrvp.d(89): Error: Implicit string concatenation is deprecated,
    use "nine\x0aunittest\x0a{\x0a    alias candidate = sort_numbers;\x0a\x0a    assert(candidate("
    ~ ") == " instead

    /tmp/tmpq_hzlrvp.d(89): Error: Implicit string concatenation is deprecated, use
    ") == " ~ ");\x0a    assert(candidate(" instead

    /tmp/tmpq_hzlrvp.d(90): Error: found `three` when expecting `;` following statement

    /tmp/tmpq_hzlrvp.d(90): Error: found `three` when expecting `;` following statement

    /tmp/tmpq_hzlrvp.d(91): Error: found `three` when expecting `;` following statement

    /tmp/tmpq_hzlrvp.d(91): Error: found `nine` when expecting `;` following statement

    /tmp/tmpq_hzlrvp.d(91): Error: found `three` when expecting `;` following statement

    /tmp/tmpq_hzlrvp.d(91): Error: found `nine` when expecting `;` following statement

    /tmp/tmpq_hzlrvp.d(92): Error: found `five` when expecting `;` following statement

    /tmp/tmpq_hzlrvp.d(92): Error: found `four` when expecting `;` following statement

    /tmp/tmpq_hzlrvp.d(92): Error: found `'
  stdout: ''
  timestamp: 1660163090
- exit_code: 1
  program: "import std.typecons;\nimport std.math;\n/*\n Input is a space-delimited\
    \ string of numberals from 'zero' to 'nine'.\n    Valid choices are 'zero', 'one',\
    \ 'two', 'three', 'four', 'five', 'six', 'seven', 'eight' and 'nine'.\n    Return\
    \ the string with numbers sorted from smallest to largest\n    >>> sort_numbers(\"\
    three one five\")\n    \"one three five\"\n    \n*/\nstring sort_numbers(string\
    \ numbers) \n{\n    string[] nums = numbers.split();\n    int[] nums_int = new\
    \ int[nums.length];\n    foreach(i, num; nums)\n    {\n        nums_int[i] = num_to_int(num);\n\
    \    }\n    nums_int.sort;\n    foreach(i, num; nums_int)\n    {\n        nums[i]\
    \ = int_to_num(num);\n    }\n    return nums.join(\" \");\n}\nunittest\n{\n  \
    \  alias candidate = sort_numbers;\n\n    assert(candidate(\"\") == \"\");\n \
    \   assert(candidate(\"three\") == \"three\");\n    assert(candidate(\"three five\
    \ nine\") == \"three five nine\");\n    assert(candidate(\"five zero four seven\
    \ nine eight\") == \"zero four five seven eight nine\");\n    assert(candidate(\"\
    six five four three two one zero\") == \"zero one two three four five six\");\n\
    }\nvoid main(){}"
  status: SyntaxError
  stderr: '/tmp/tmpno7xda06.d(13): Error: no property `split` for type `string`

    /tmp/tmpno7xda06.d(17): Error: undefined identifier `num_to_int`

    /tmp/tmpno7xda06.d(19): Error: no property `sort` for type `int[]`

    /tmp/tmpno7xda06.d(22): Error: undefined identifier `int_to_num`

    /tmp/tmpno7xda06.d(24): Error: no property `join` for type `string[]`

    Failed: ["dmd", "-unittest", "-v", "-o-", "/tmp/tmpno7xda06.d", "-I/tmp"]

    '
  stdout: ''
  timestamp: 1660163091
- exit_code: 1
  program: "import std.typecons;\nimport std.math;\n/*\n Input is a space-delimited\
    \ string of numberals from 'zero' to 'nine'.\n    Valid choices are 'zero', 'one',\
    \ 'two', 'three', 'four', 'five', 'six', 'seven', 'eight' and 'nine'.\n    Return\
    \ the string with numbers sorted from smallest to largest\n    >>> sort_numbers(\"\
    three one five\")\n    \"one three five\"\n    \n*/\nstring sort_numbers(string\
    \ numbers) \n{\n    string[] nums = numbers.split(\" \");\n    int[] nums_int\
    \ = new int[nums.length];\n    foreach(i, num; nums)\n    {\n        switch(num)\n\
    \        {\n            case \"zero\":\n                nums_int[i] = 0;\n   \
    \             break;\n            case \"one\":\n                nums_int[i] =\
    \ 1;\n                break;\n            case \"two\":\n                nums_int[i]\
    \ = 2;\n                break;\n            case \"three\":\n                nums_int[i]\
    \ = 3;\n                break;\n            case \"four\":\n                nums_int[i]\
    \ = 4;\n                break;\n            case \"five\":\n                nums_int[i]\
    \ = 5;\n                break;\n            case \"six\":\n                nums_int[i]\
    \ = 6;\n                break;\n            case \"seven\":\n                nums_int[i]\
    \ = 7;\n                break;\n            case \"eight\":\n                nums_int[i]\
    \ = 8;\n                break;\n            case \"nine\":\n                nums_int[i]\
    \ = 9;\n                break;\n        }\n    }\n    nums_int.sort();\n    foreach(i,\
    \ num; nums_int)\n    {\n        switch(num)\n        {\n            case 0:\n\
    \                nums[i] = \"zero\";\n                break;\n            case\
    \ 1:\n                nums[i] = \"one\";\n                break;\n           \
    \ case 2:\n                nums[i] = \"two\";\n                break;\n      \
    \      case 3:\n                nums[i] = \"three\";\n                break;\n\
    \            case 4:\n                nums[i] = \"four\";\n                break;\n\
    \            case 5:\n                nums[i] = \"five\";\n                break;\n\
    \            case 6:\n                nums[i] = \"six\";\n                break;\n\
    \            case 7:\n                nums[i] = \"seven\";\n                break;\n\
    \            case 8:\n                nums[i] = \"eight\";\n                break;\n\
    \            case 9:\n                nums[i] = \"nine\nunittest\n{\n    alias\
    \ candidate = sort_numbers;\n\n    assert(candidate(\"\") == \"\");\n    assert(candidate(\"\
    three\") == \"three\");\n    assert(candidate(\"three five nine\") == \"three\
    \ five nine\");\n    assert(candidate(\"five zero four seven nine eight\") ==\
    \ \"zero four five seven eight nine\");\n    assert(candidate(\"six five four\
    \ three two one zero\") == \"zero one two three four five six\");\n}\nvoid main(){}"
  status: SyntaxError
  stderr: '/tmp/tmpq_hzlrvp.d(89): Error: Implicit string concatenation is deprecated,
    use "nine\x0aunittest\x0a{\x0a    alias candidate = sort_numbers;\x0a\x0a    assert(candidate("
    ~ ") == " instead

    /tmp/tmpq_hzlrvp.d(89): Error: Implicit string concatenation is deprecated, use
    ") == " ~ ");\x0a    assert(candidate(" instead

    /tmp/tmpq_hzlrvp.d(90): Error: found `three` when expecting `;` following statement

    /tmp/tmpq_hzlrvp.d(90): Error: found `three` when expecting `;` following statement

    /tmp/tmpq_hzlrvp.d(91): Error: found `three` when expecting `;` following statement

    /tmp/tmpq_hzlrvp.d(91): Error: found `nine` when expecting `;` following statement

    /tmp/tmpq_hzlrvp.d(91): Error: found `three` when expecting `;` following statement

    /tmp/tmpq_hzlrvp.d(91): Error: found `nine` when expecting `;` following statement

    /tmp/tmpq_hzlrvp.d(92): Error: found `five` when expecting `;` following statement

    /tmp/tmpq_hzlrvp.d(92): Error: found `four` when expecting `;` following statement

    /tmp/tmpq_hzlrvp.d(92): Error: found `'
  stdout: ''
  timestamp: 1660163090
- exit_code: 1
  program: "import std.typecons;\nimport std.math;\n/*\n Input is a space-delimited\
    \ string of numberals from 'zero' to 'nine'.\n    Valid choices are 'zero', 'one',\
    \ 'two', 'three', 'four', 'five', 'six', 'seven', 'eight' and 'nine'.\n    Return\
    \ the string with numbers sorted from smallest to largest\n    >>> sort_numbers(\"\
    three one five\")\n    \"one three five\"\n    \n*/\nstring sort_numbers(string\
    \ numbers) \n{\n    int[] nums;\n    foreach(n; numbers.split())\n    {\n    \
    \    nums ~= to!int(n);\n    }\n    sort(nums);\n    string ret;\n    foreach(n;\
    \ nums)\n    {\n        ret ~= to!string(n) ~ \" \";\n    }\n    return ret.stripRight();\n\
    }\nunittest\n{\n    alias candidate = sort_numbers;\n\n    assert(candidate(\"\
    \") == \"\");\n    assert(candidate(\"three\") == \"three\");\n    assert(candidate(\"\
    three five nine\") == \"three five nine\");\n    assert(candidate(\"five zero\
    \ four seven nine eight\") == \"zero four five seven eight nine\");\n    assert(candidate(\"\
    six five four three two one zero\") == \"zero one two three four five six\");\n\
    }\nvoid main(){}"
  status: SyntaxError
  stderr: '/tmp/tmpkl88veyx.d(14): Error: no property `split` for type `string`

    /tmp/tmpkl88veyx.d(18): Error: undefined identifier `sort`, did you mean function
    `sqrt`?

    /tmp/tmpkl88veyx.d(22): Error: template instance `to!string` template `to` is
    not defined, did you mean No?

    /tmp/tmpkl88veyx.d(24): Error: no property `stripRight` for type `string`

    Failed: ["dmd", "-unittest", "-v", "-o-", "/tmp/tmpkl88veyx.d", "-I/tmp"]

    '
  stdout: ''
  timestamp: 1660163091
- exit_code: 1
  program: "import std.typecons;\nimport std.math;\n/*\n Input is a space-delimited\
    \ string of numberals from 'zero' to 'nine'.\n    Valid choices are 'zero', 'one',\
    \ 'two', 'three', 'four', 'five', 'six', 'seven', 'eight' and 'nine'.\n    Return\
    \ the string with numbers sorted from smallest to largest\n    >>> sort_numbers(\"\
    three one five\")\n    \"one three five\"\n    \n*/\nstring sort_numbers(string\
    \ numbers) \n{\n    string[] nums = numbers.split(\" \");\n    int[] nums_int\
    \ = new int[nums.length];\n    foreach(int i, string num; nums)\n    {\n     \
    \   switch(num)\n        {\n            case \"zero\":\n                nums_int[i]\
    \ = 0;\n                break;\n            case \"one\":\n                nums_int[i]\
    \ = 1;\n                break;\n            case \"two\":\n                nums_int[i]\
    \ = 2;\n                break;\n            case \"three\":\n                nums_int[i]\
    \ = 3;\n                break;\n            case \"four\":\n                nums_int[i]\
    \ = 4;\n                break;\n            case \"five\":\n                nums_int[i]\
    \ = 5;\n                break;\n            case \"six\":\n                nums_int[i]\
    \ = 6;\n                break;\n            case \"seven\":\n                nums_int[i]\
    \ = 7;\n                break;\n            case \"eight\":\n                nums_int[i]\
    \ = 8;\n                break;\n            case \"nine\":\n                nums_int[i]\
    \ = 9;\n                break;\n        }\n    }\n    nums_int.sort();\n    foreach(int\
    \ i, int num; nums_int)\n    {\n        switch(num)\n        {\n            case\
    \ 0:\n                nums[i] = \"zero\";\n                break;\n          \
    \  case 1:\n                nums[i] = \"one\";\n                break;\n     \
    \       case 2:\n                nums[i] = \"two\";\n                break;\n\
    \            case 3:\n                nums[i] = \"three\";\n                break;\n\
    \            case 4:\n                nums[i] = \"four\";\n                break;\n\
    \            case 5:\n                nums[i] = \"five\";\n                break;\n\
    \            case 6:\n                nums[i] = \"six\";\n                break;\n\
    \            case 7:\n                nums[i] = \"seven\";\n                break;\n\
    \            case 8:\n                nums[i] = \"eight\";\n                break;\n\
    \            case 9:\n                nums[i\nunittest\n{\n    alias candidate\
    \ = sort_numbers;\n\n    assert(candidate(\"\") == \"\");\n    assert(candidate(\"\
    three\") == \"three\");\n    assert(candidate(\"three five nine\") == \"three\
    \ five nine\");\n    assert(candidate(\"five zero four seven nine eight\") ==\
    \ \"zero four five seven eight nine\");\n    assert(candidate(\"six five four\
    \ three two one zero\") == \"zero one two three four five six\");\n}\nvoid main(){}"
  status: SyntaxError
  stderr: '/tmp/tmp_zvn61ob.d(85): Error: found `unittest` when expecting `,`

    /tmp/tmp_zvn61ob.d(95): Error: found `void` when expecting `,`

    /tmp/tmp_zvn61ob.d(95): Error: found `{` when expecting `,`

    /tmp/tmp_zvn61ob.d(95): Error: expression expected, not `}`

    /tmp/tmp_zvn61ob.d(95): Error: found `End of File` when expecting `,`

    /tmp/tmp_zvn61ob.d(95): Error: found `End of File` when expecting `]`

    /tmp/tmp_zvn61ob.d(95): Error: found `End of File` when expecting `;` following
    statement

    /tmp/tmp_zvn61ob.d(95): Error: found `End of File` when expecting `}` following
    compound statement

    /tmp/tmp_zvn61ob.d(95): Error: found `End of File` when expecting `}` following
    compound statement

    /tmp/tmp_zvn61ob.d(95): Error: found `End of File` when expecting `}` following
    compound statement

    Failed: ["dmd", "-unittest", "-v", "-o-", "/tmp/tmp_zvn61ob.d", "-I/tmp"]

    '
  stdout: ''
  timestamp: 1660163090
- exit_code: 1
  program: "import std.typecons;\nimport std.math;\n/*\n Input is a space-delimited\
    \ string of numberals from 'zero' to 'nine'.\n    Valid choices are 'zero', 'one',\
    \ 'two', 'three', 'four', 'five', 'six', 'seven', 'eight' and 'nine'.\n    Return\
    \ the string with numbers sorted from smallest to largest\n    >>> sort_numbers(\"\
    three one five\")\n    \"one three five\"\n    \n*/\nstring sort_numbers(string\
    \ numbers) \n{\n    string[] nums = numbers.split(\" \");\n    int[] nums_int\
    \ = new int[nums.length];\n    foreach(i, num; nums)\n    {\n        switch(num)\n\
    \        {\n            case \"zero\":\n                nums_int[i] = 0;\n   \
    \             break;\n            case \"one\":\n                nums_int[i] =\
    \ 1;\n                break;\n            case \"two\":\n                nums_int[i]\
    \ = 2;\n                break;\n            case \"three\":\n                nums_int[i]\
    \ = 3;\n                break;\n            case \"four\":\n                nums_int[i]\
    \ = 4;\n                break;\n            case \"five\":\n                nums_int[i]\
    \ = 5;\n                break;\n            case \"six\":\n                nums_int[i]\
    \ = 6;\n                break;\n            case \"seven\":\n                nums_int[i]\
    \ = 7;\n                break;\n            case \"eight\":\n                nums_int[i]\
    \ = 8;\n                break;\n            case \"nine\":\n                nums_int[i]\
    \ = 9;\n                break;\n        }\n    }\n    nums_int.sort;\n    foreach(i,\
    \ num; nums_int)\n    {\n        switch(num)\n        {\n            case 0:\n\
    \                nums[i] = \"zero\";\n                break;\n            case\
    \ 1:\n                nums[i] = \"one\";\n                break;\n           \
    \ case 2:\n                nums[i] = \"two\";\n                break;\n      \
    \      case 3:\n                nums[i] = \"three\";\n                break;\n\
    \            case 4:\n                nums[i] = \"four\";\n                break;\n\
    \            case 5:\n                nums[i] = \"five\";\n                break;\n\
    \            case 6:\n                nums[i] = \"six\";\n                break;\n\
    \            case 7:\n                nums[i] = \"seven\";\n                break;\n\
    \            case 8:\n                nums[i] = \"eight\";\n                break;\n\
    \            case 9:\n                nums[i] = \"nine\nunittest\n{\n    alias\
    \ candidate = sort_numbers;\n\n    assert(candidate(\"\") == \"\");\n    assert(candidate(\"\
    three\") == \"three\");\n    assert(candidate(\"three five nine\") == \"three\
    \ five nine\");\n    assert(candidate(\"five zero four seven nine eight\") ==\
    \ \"zero four five seven eight nine\");\n    assert(candidate(\"six five four\
    \ three two one zero\") == \"zero one two three four five six\");\n}\nvoid main(){}"
  status: SyntaxError
  stderr: '/tmp/tmpc1u9yce3.d(89): Error: Implicit string concatenation is deprecated,
    use "nine\x0aunittest\x0a{\x0a    alias candidate = sort_numbers;\x0a\x0a    assert(candidate("
    ~ ") == " instead

    /tmp/tmpc1u9yce3.d(89): Error: Implicit string concatenation is deprecated, use
    ") == " ~ ");\x0a    assert(candidate(" instead

    /tmp/tmpc1u9yce3.d(90): Error: found `three` when expecting `;` following statement

    /tmp/tmpc1u9yce3.d(90): Error: found `three` when expecting `;` following statement

    /tmp/tmpc1u9yce3.d(91): Error: found `three` when expecting `;` following statement

    /tmp/tmpc1u9yce3.d(91): Error: found `nine` when expecting `;` following statement

    /tmp/tmpc1u9yce3.d(91): Error: found `three` when expecting `;` following statement

    /tmp/tmpc1u9yce3.d(91): Error: found `nine` when expecting `;` following statement

    /tmp/tmpc1u9yce3.d(92): Error: found `five` when expecting `;` following statement

    /tmp/tmpc1u9yce3.d(92): Error: found `four` when expecting `;` following statement

    /tmp/tmpc1u9yce3.d(92): Error: found `'
  stdout: ''
  timestamp: 1660163090
- exit_code: 1
  program: "import std.typecons;\nimport std.math;\n/*\n Input is a space-delimited\
    \ string of numberals from 'zero' to 'nine'.\n    Valid choices are 'zero', 'one',\
    \ 'two', 'three', 'four', 'five', 'six', 'seven', 'eight' and 'nine'.\n    Return\
    \ the string with numbers sorted from smallest to largest\n    >>> sort_numbers(\"\
    three one five\")\n    \"one three five\"\n    \n*/\nstring sort_numbers(string\
    \ numbers) \n{\n    string[] nums = numbers.split(\" \");\n    int[] nums_int\
    \ = new int[nums.length];\n    foreach(i, num; nums)\n    {\n        nums_int[i]\
    \ = to!int(num);\n    }\n    sort(nums_int);\n    string result = \"\";\n    foreach(i,\
    \ num; nums_int)\n    {\n        result ~= to!string(num) ~ \" \";\n    }\n  \
    \  return result.stripRight();\n}\nunittest\n{\n    alias candidate = sort_numbers;\n\
    \n    assert(candidate(\"\") == \"\");\n    assert(candidate(\"three\") == \"\
    three\");\n    assert(candidate(\"three five nine\") == \"three five nine\");\n\
    \    assert(candidate(\"five zero four seven nine eight\") == \"zero four five\
    \ seven eight nine\");\n    assert(candidate(\"six five four three two one zero\"\
    ) == \"zero one two three four five six\");\n}\nvoid main(){}"
  status: SyntaxError
  stderr: '/tmp/tmpv2fax3hy.d(13): Error: no property `split` for type `string`

    /tmp/tmpv2fax3hy.d(17): Error: template instance `to!int` template `to` is not
    defined, did you mean No?

    /tmp/tmpv2fax3hy.d(19): Error: undefined identifier `sort`, did you mean function
    `sqrt`?

    /tmp/tmpv2fax3hy.d(23): Error: template instance `to!string` template `to` is
    not defined, did you mean No?

    /tmp/tmpv2fax3hy.d(25): Error: no property `stripRight` for type `string`

    Failed: ["dmd", "-unittest", "-v", "-o-", "/tmp/tmpv2fax3hy.d", "-I/tmp"]

    '
  stdout: ''
  timestamp: 1660163090
- exit_code: 1
  program: "import std.typecons;\nimport std.math;\n/*\n Input is a space-delimited\
    \ string of numberals from 'zero' to 'nine'.\n    Valid choices are 'zero', 'one',\
    \ 'two', 'three', 'four', 'five', 'six', 'seven', 'eight' and 'nine'.\n    Return\
    \ the string with numbers sorted from smallest to largest\n    >>> sort_numbers(\"\
    three one five\")\n    \"one three five\"\n    \n*/\nstring sort_numbers(string\
    \ numbers) \n{\n    int[] nums;\n    foreach(num; numbers.split())\n    {\n  \
    \      switch(num)\n        {\n            case \"zero\": nums ~= 0; break;\n\
    \            case \"one\": nums ~= 1; break;\n            case \"two\": nums ~=\
    \ 2; break;\n            case \"three\": nums ~= 3; break;\n            case \"\
    four\": nums ~= 4; break;\n            case \"five\": nums ~= 5; break;\n    \
    \        case \"six\": nums ~= 6; break;\n            case \"seven\": nums ~=\
    \ 7; break;\n            case \"eight\": nums ~= 8; break;\n            case \"\
    nine\": nums ~= 9; break;\n        }\n    }\n    nums.sort();\n    string result;\n\
    \    foreach(num; nums)\n    {\n        switch(num)\n        {\n            case\
    \ 0: result ~= \"zero \"; break;\n            case 1: result ~= \"one \"; break;\n\
    \            case 2: result ~= \"two \"; break;\n            case 3: result ~=\
    \ \"three \"; break;\n            case 4: result ~= \"four \"; break;\n      \
    \      case 5: result ~= \"five \"; break;\n            case 6: result ~= \"six\
    \ \"; break;\n            case 7: result ~= \"seven \"; break;\n            case\
    \ 8: result ~= \"eight \"; break;\n            case 9: result ~= \"nine \"; break;\n\
    \        }\n    }\n    return result.stripRight();\n}\nunittest\n{\n    alias\
    \ candidate = sort_numbers;\n\n    assert(candidate(\"\") == \"\");\n    assert(candidate(\"\
    three\") == \"three\");\n    assert(candidate(\"three five nine\") == \"three\
    \ five nine\");\n    assert(candidate(\"five zero four seven nine eight\") ==\
    \ \"zero four five seven eight nine\");\n    assert(candidate(\"six five four\
    \ three two one zero\") == \"zero one two three four five six\");\n}\nvoid main(){}"
  status: SyntaxError
  stderr: '/tmp/tmp2h0h9d2w.d(14): Error: no property `split` for type `string`

    /tmp/tmp2h0h9d2w.d(30): Error: no property `sort` for type `int[]`

    /tmp/tmp2h0h9d2w.d(34): Error: `switch` statement without a `default`; use `final
    switch` or add `default: assert(0);` or add `default: break;`

    /tmp/tmp2h0h9d2w.d(48): Error: no property `stripRight` for type `string`

    Failed: ["dmd", "-unittest", "-v", "-o-", "/tmp/tmp2h0h9d2w.d", "-I/tmp"]

    '
  stdout: ''
  timestamp: 1660163090
- exit_code: 1
  program: "import std.typecons;\nimport std.math;\n/*\n Input is a space-delimited\
    \ string of numberals from 'zero' to 'nine'.\n    Valid choices are 'zero', 'one',\
    \ 'two', 'three', 'four', 'five', 'six', 'seven', 'eight' and 'nine'.\n    Return\
    \ the string with numbers sorted from smallest to largest\n    >>> sort_numbers(\"\
    three one five\")\n    \"one three five\"\n    \n*/\nstring sort_numbers(string\
    \ numbers) \n{\n    string[] nums = numbers.split;\n    int[] num_ints = nums.map!(a\
    \ => to!int(a)).array;\n    num_ints.sort;\n    return num_ints.map!(a => to!string(a)).join(\"\
    \ \");\n}\nunittest\n{\n    alias candidate = sort_numbers;\n\n    assert(candidate(\"\
    \") == \"\");\n    assert(candidate(\"three\") == \"three\");\n    assert(candidate(\"\
    three five nine\") == \"three five nine\");\n    assert(candidate(\"five zero\
    \ four seven nine eight\") == \"zero four five seven eight nine\");\n    assert(candidate(\"\
    six five four three two one zero\") == \"zero one two three four five six\");\n\
    }\nvoid main(){}"
  status: SyntaxError
  stderr: '/tmp/tmpzkco5kcg.d(13): Error: no property `split` for type `string`

    /tmp/tmpzkco5kcg.d(14): Error: no property `map` for type `string[]`

    /tmp/tmpzkco5kcg.d(15): Error: no property `sort` for type `int[]`

    /tmp/tmpzkco5kcg.d(16): Error: no property `map` for type `int[]`

    Failed: ["dmd", "-unittest", "-v", "-o-", "/tmp/tmpzkco5kcg.d", "-I/tmp"]

    '
  stdout: ''
  timestamp: 1660163091
- exit_code: 1
  program: "import std.typecons;\nimport std.math;\n/*\n Input is a space-delimited\
    \ string of numberals from 'zero' to 'nine'.\n    Valid choices are 'zero', 'one',\
    \ 'two', 'three', 'four', 'five', 'six', 'seven', 'eight' and 'nine'.\n    Return\
    \ the string with numbers sorted from smallest to largest\n    >>> sort_numbers(\"\
    three one five\")\n    \"one three five\"\n    \n*/\nstring sort_numbers(string\
    \ numbers) \n{\n    string[] nums = numbers.split(\" \");\n    int[] nums_int\
    \ = new int[nums.length];\n    foreach(int i, string num; nums)\n    {\n     \
    \   nums_int[i] = to!int(num);\n    }\n    sort(nums_int);\n    foreach(int i,\
    \ int num; nums_int)\n    {\n        nums[i] = to!string(num);\n    }\n    return\
    \ join(nums, \" \");\n}\nunittest\n{\n    alias candidate = sort_numbers;\n\n\
    \    assert(candidate(\"\") == \"\");\n    assert(candidate(\"three\") == \"three\"\
    );\n    assert(candidate(\"three five nine\") == \"three five nine\");\n    assert(candidate(\"\
    five zero four seven nine eight\") == \"zero four five seven eight nine\");\n\
    \    assert(candidate(\"six five four three two one zero\") == \"zero one two\
    \ three four five six\");\n}\nvoid main(){}"
  status: SyntaxError
  stderr: '/tmp/tmpci0dh84r.d(13): Error: no property `split` for type `string`

    /tmp/tmpci0dh84r.d(17): Error: template instance `to!int` template `to` is not
    defined, did you mean No?

    /tmp/tmpci0dh84r.d(19): Error: undefined identifier `sort`, did you mean function
    `sqrt`?

    /tmp/tmpci0dh84r.d(22): Error: template instance `to!string` template `to` is
    not defined, did you mean No?

    /tmp/tmpci0dh84r.d(24): Error: undefined identifier `join`, did you mean function
    `main`?

    Failed: ["dmd", "-unittest", "-v", "-o-", "/tmp/tmpci0dh84r.d", "-I/tmp"]

    '
  stdout: ''
  timestamp: 1660163090
- exit_code: 1
  program: "import std.typecons;\nimport std.math;\n/*\n Input is a space-delimited\
    \ string of numberals from 'zero' to 'nine'.\n    Valid choices are 'zero', 'one',\
    \ 'two', 'three', 'four', 'five', 'six', 'seven', 'eight' and 'nine'.\n    Return\
    \ the string with numbers sorted from smallest to largest\n    >>> sort_numbers(\"\
    three one five\")\n    \"one three five\"\n    \n*/\nstring sort_numbers(string\
    \ numbers) \n{\n    string[] nums = numbers.split(\" \");\n    string[] nums_sorted\
    \ = sort(nums);\n    return join(nums_sorted, \" \");\n}\nunittest\n{\n    alias\
    \ candidate = sort_numbers;\n\n    assert(candidate(\"\") == \"\");\n    assert(candidate(\"\
    three\") == \"three\");\n    assert(candidate(\"three five nine\") == \"three\
    \ five nine\");\n    assert(candidate(\"five zero four seven nine eight\") ==\
    \ \"zero four five seven eight nine\");\n    assert(candidate(\"six five four\
    \ three two one zero\") == \"zero one two three four five six\");\n}\nvoid main(){}"
  status: SyntaxError
  stderr: '/tmp/tmp36dkpxiq.d(13): Error: no property `split` for type `string`

    /tmp/tmp36dkpxiq.d(14): Error: undefined identifier `sort`, did you mean function
    `sqrt`?

    /tmp/tmp36dkpxiq.d(15): Error: undefined identifier `join`, did you mean function
    `main`?

    Failed: ["dmd", "-unittest", "-v", "-o-", "/tmp/tmp36dkpxiq.d", "-I/tmp"]

    '
  stdout: ''
  timestamp: 1660163091
- exit_code: 1
  program: "import std.typecons;\nimport std.math;\n/*\n Input is a space-delimited\
    \ string of numberals from 'zero' to 'nine'.\n    Valid choices are 'zero', 'one',\
    \ 'two', 'three', 'four', 'five', 'six', 'seven', 'eight' and 'nine'.\n    Return\
    \ the string with numbers sorted from smallest to largest\n    >>> sort_numbers(\"\
    three one five\")\n    \"one three five\"\n    \n*/\nstring sort_numbers(string\
    \ numbers) \n{\n    string[] nums = numbers.split(\" \");\n    string[] nums_sorted\
    \ = nums.dup;\n    nums_sorted.sort;\n    string result = \"\";\n    foreach(string\
    \ num; nums_sorted)\n    {\n        result ~= num ~ \" \";\n    }\n    return\
    \ result.stripRight;\n}\nunittest\n{\n    alias candidate = sort_numbers;\n\n\
    \    assert(candidate(\"\") == \"\");\n    assert(candidate(\"three\") == \"three\"\
    );\n    assert(candidate(\"three five nine\") == \"three five nine\");\n    assert(candidate(\"\
    five zero four seven nine eight\") == \"zero four five seven eight nine\");\n\
    \    assert(candidate(\"six five four three two one zero\") == \"zero one two\
    \ three four five six\");\n}\nvoid main(){}"
  status: SyntaxError
  stderr: '/tmp/tmp9ntca_v9.d(13): Error: no property `split` for type `string`

    /tmp/tmp9ntca_v9.d(15): Error: no property `sort` for type `string[]`

    /tmp/tmp9ntca_v9.d(21): Error: no property `stripRight` for type `string`

    Failed: ["dmd", "-unittest", "-v", "-o-", "/tmp/tmp9ntca_v9.d", "-I/tmp"]

    '
  stdout: ''
  timestamp: 1660163090
- exit_code: 1
  program: "import std.typecons;\nimport std.math;\n/*\n Input is a space-delimited\
    \ string of numberals from 'zero' to 'nine'.\n    Valid choices are 'zero', 'one',\
    \ 'two', 'three', 'four', 'five', 'six', 'seven', 'eight' and 'nine'.\n    Return\
    \ the string with numbers sorted from smallest to largest\n    >>> sort_numbers(\"\
    three one five\")\n    \"one three five\"\n    \n*/\nstring sort_numbers(string\
    \ numbers) \n{\n    string[] nums = numbers.split(\" \");\n    int[] nums_int\
    \ = new int[nums.length];\n    foreach(i, num; nums)\n    {\n        nums_int[i]\
    \ = to!int(num);\n    }\n    sort(nums_int);\n    foreach(i, num; nums_int)\n\
    \    {\n        nums[i] = to!string(num);\n    }\n    return nums.join(\" \");\n\
    }\nunittest\n{\n    alias candidate = sort_numbers;\n\n    assert(candidate(\"\
    \") == \"\");\n    assert(candidate(\"three\") == \"three\");\n    assert(candidate(\"\
    three five nine\") == \"three five nine\");\n    assert(candidate(\"five zero\
    \ four seven nine eight\") == \"zero four five seven eight nine\");\n    assert(candidate(\"\
    six five four three two one zero\") == \"zero one two three four five six\");\n\
    }\nvoid main(){}"
  status: SyntaxError
  stderr: '/tmp/tmpbv32ak6p.d(13): Error: no property `split` for type `string`

    /tmp/tmpbv32ak6p.d(17): Error: template instance `to!int` template `to` is not
    defined, did you mean No?

    /tmp/tmpbv32ak6p.d(19): Error: undefined identifier `sort`, did you mean function
    `sqrt`?

    /tmp/tmpbv32ak6p.d(22): Error: template instance `to!string` template `to` is
    not defined, did you mean No?

    /tmp/tmpbv32ak6p.d(24): Error: no property `join` for type `string[]`

    Failed: ["dmd", "-unittest", "-v", "-o-", "/tmp/tmpbv32ak6p.d", "-I/tmp"]

    '
  stdout: ''
  timestamp: 1660163091
- exit_code: 1
  program: "import std.typecons;\nimport std.math;\n/*\n Input is a space-delimited\
    \ string of numberals from 'zero' to 'nine'.\n    Valid choices are 'zero', 'one',\
    \ 'two', 'three', 'four', 'five', 'six', 'seven', 'eight' and 'nine'.\n    Return\
    \ the string with numbers sorted from smallest to largest\n    >>> sort_numbers(\"\
    three one five\")\n    \"one three five\"\n    \n*/\nstring sort_numbers(string\
    \ numbers) \n{\n    string[] nums = numbers.split(\" \");\n    int[] nums_int\
    \ = new int[nums.length];\n    foreach(i, num; nums)\n    {\n        nums_int[i]\
    \ = to!int(num);\n    }\n    sort(nums_int);\n    foreach(i, num; nums_int)\n\
    \    {\n        nums[i] = to!string(num);\n    }\n    return nums.join(\" \");\n\
    }\nunittest\n{\n    alias candidate = sort_numbers;\n\n    assert(candidate(\"\
    \") == \"\");\n    assert(candidate(\"three\") == \"three\");\n    assert(candidate(\"\
    three five nine\") == \"three five nine\");\n    assert(candidate(\"five zero\
    \ four seven nine eight\") == \"zero four five seven eight nine\");\n    assert(candidate(\"\
    six five four three two one zero\") == \"zero one two three four five six\");\n\
    }\nvoid main(){}"
  status: SyntaxError
  stderr: '/tmp/tmpbv32ak6p.d(13): Error: no property `split` for type `string`

    /tmp/tmpbv32ak6p.d(17): Error: template instance `to!int` template `to` is not
    defined, did you mean No?

    /tmp/tmpbv32ak6p.d(19): Error: undefined identifier `sort`, did you mean function
    `sqrt`?

    /tmp/tmpbv32ak6p.d(22): Error: template instance `to!string` template `to` is
    not defined, did you mean No?

    /tmp/tmpbv32ak6p.d(24): Error: no property `join` for type `string[]`

    Failed: ["dmd", "-unittest", "-v", "-o-", "/tmp/tmpbv32ak6p.d", "-I/tmp"]

    '
  stdout: ''
  timestamp: 1660163091
- exit_code: 1
  program: "import std.typecons;\nimport std.math;\n/*\n Input is a space-delimited\
    \ string of numberals from 'zero' to 'nine'.\n    Valid choices are 'zero', 'one',\
    \ 'two', 'three', 'four', 'five', 'six', 'seven', 'eight' and 'nine'.\n    Return\
    \ the string with numbers sorted from smallest to largest\n    >>> sort_numbers(\"\
    three one five\")\n    \"one three five\"\n    \n*/\nstring sort_numbers(string\
    \ numbers) \n{\n    string[] nums = numbers.split(\" \");\n    string[] nums_sorted\
    \ = nums.sort();\n    return nums_sorted.join(\" \");\n}\nunittest\n{\n    alias\
    \ candidate = sort_numbers;\n\n    assert(candidate(\"\") == \"\");\n    assert(candidate(\"\
    three\") == \"three\");\n    assert(candidate(\"three five nine\") == \"three\
    \ five nine\");\n    assert(candidate(\"five zero four seven nine eight\") ==\
    \ \"zero four five seven eight nine\");\n    assert(candidate(\"six five four\
    \ three two one zero\") == \"zero one two three four five six\");\n}\nvoid main(){}"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660163090
- exit_code: 1
  program: "import std.typecons;\nimport std.math;\n/*\n Input is a space-delimited\
    \ string of numberals from 'zero' to 'nine'.\n    Valid choices are 'zero', 'one',\
    \ 'two', 'three', 'four', 'five', 'six', 'seven', 'eight' and 'nine'.\n    Return\
    \ the string with numbers sorted from smallest to largest\n    >>> sort_numbers(\"\
    three one five\")\n    \"one three five\"\n    \n*/\nstring sort_numbers(string\
    \ numbers) \n{\n    string[] nums = numbers.split(\" \");\n    int[] nums_int\
    \ = new int[nums.length];\n    foreach(i, num; nums)\n    {\n        switch(num)\n\
    \        {\n            case \"zero\":\n                nums_int[i] = 0;\n   \
    \             break;\n            case \"one\":\n                nums_int[i] =\
    \ 1;\n                break;\n            case \"two\":\n                nums_int[i]\
    \ = 2;\n                break;\n            case \"three\":\n                nums_int[i]\
    \ = 3;\n                break;\n            case \"four\":\n                nums_int[i]\
    \ = 4;\n                break;\n            case \"five\":\n                nums_int[i]\
    \ = 5;\n                break;\n            case \"six\":\n                nums_int[i]\
    \ = 6;\n                break;\n            case \"seven\":\n                nums_int[i]\
    \ = 7;\n                break;\n            case \"eight\":\n                nums_int[i]\
    \ = 8;\n                break;\n            case \"nine\":\n                nums_int[i]\
    \ = 9;\n                break;\n        }\n    }\n    nums_int.sort();\n    foreach(i,\
    \ num; nums_int)\n    {\n        switch(num)\n        {\n            case 0:\n\
    \                nums[i] = \"zero\";\n                break;\n            case\
    \ 1:\n                nums[i] = \"one\";\n                break;\n           \
    \ case 2:\n                nums[i] = \"two\";\n                break;\n      \
    \      case 3:\n                nums[i] = \"three\";\n                break;\n\
    \            case 4:\n                nums[i] = \"four\";\n                break;\n\
    \            case 5:\n                nums[i] = \"five\";\n                break;\n\
    \            case 6:\n                nums[i] = \"six\";\n                break;\n\
    \            case 7:\n                nums[i] = \"seven\";\n                break;\n\
    \            case 8:\n                nums[i] = \"eight\";\n                break;\n\
    \            case 9:\n                nums[i] = \"nine\nunittest\n{\n    alias\
    \ candidate = sort_numbers;\n\n    assert(candidate(\"\") == \"\");\n    assert(candidate(\"\
    three\") == \"three\");\n    assert(candidate(\"three five nine\") == \"three\
    \ five nine\");\n    assert(candidate(\"five zero four seven nine eight\") ==\
    \ \"zero four five seven eight nine\");\n    assert(candidate(\"six five four\
    \ three two one zero\") == \"zero one two three four five six\");\n}\nvoid main(){}"
  status: SyntaxError
  stderr: '/tmp/tmpq_hzlrvp.d(89): Error: Implicit string concatenation is deprecated,
    use "nine\x0aunittest\x0a{\x0a    alias candidate = sort_numbers;\x0a\x0a    assert(candidate("
    ~ ") == " instead

    /tmp/tmpq_hzlrvp.d(89): Error: Implicit string concatenation is deprecated, use
    ") == " ~ ");\x0a    assert(candidate(" instead

    /tmp/tmpq_hzlrvp.d(90): Error: found `three` when expecting `;` following statement

    /tmp/tmpq_hzlrvp.d(90): Error: found `three` when expecting `;` following statement

    /tmp/tmpq_hzlrvp.d(91): Error: found `three` when expecting `;` following statement

    /tmp/tmpq_hzlrvp.d(91): Error: found `nine` when expecting `;` following statement

    /tmp/tmpq_hzlrvp.d(91): Error: found `three` when expecting `;` following statement

    /tmp/tmpq_hzlrvp.d(91): Error: found `nine` when expecting `;` following statement

    /tmp/tmpq_hzlrvp.d(92): Error: found `five` when expecting `;` following statement

    /tmp/tmpq_hzlrvp.d(92): Error: found `four` when expecting `;` following statement

    /tmp/tmpq_hzlrvp.d(92): Error: found `'
  stdout: ''
  timestamp: 1660163090
- exit_code: 1
  program: "import std.typecons;\nimport std.math;\n/*\n Input is a space-delimited\
    \ string of numberals from 'zero' to 'nine'.\n    Valid choices are 'zero', 'one',\
    \ 'two', 'three', 'four', 'five', 'six', 'seven', 'eight' and 'nine'.\n    Return\
    \ the string with numbers sorted from smallest to largest\n    >>> sort_numbers(\"\
    three one five\")\n    \"one three five\"\n    \n*/\nstring sort_numbers(string\
    \ numbers) \n{\n    string[] nums = numbers.split(\" \");\n    int[] nums_int\
    \ = new int[nums.length];\n    for (int i = 0; i < nums.length; i++)\n    {\n\
    \        switch (nums[i])\n        {\n            case \"zero\":\n           \
    \     nums_int[i] = 0;\n                break;\n            case \"one\":\n  \
    \              nums_int[i] = 1;\n                break;\n            case \"two\"\
    :\n                nums_int[i] = 2;\n                break;\n            case\
    \ \"three\":\n                nums_int[i] = 3;\n                break;\n     \
    \       case \"four\":\n                nums_int[i] = 4;\n                break;\n\
    \            case \"five\":\n                nums_int[i] = 5;\n              \
    \  break;\n            case \"six\":\n                nums_int[i] = 6;\n     \
    \           break;\n            case \"seven\":\n                nums_int[i] =\
    \ 7;\n                break;\n            case \"eight\":\n                nums_int[i]\
    \ = 8;\n                break;\n            case \"nine\":\n                nums_int[i]\
    \ = 9;\n                break;\n        }\n    }\n    nums_int.sort();\n    for\
    \ (int i = 0; i < nums.length; i++)\n    {\n        switch (nums_int[i])\n   \
    \     {\n            case 0:\n                nums[i] = \"zero\";\n          \
    \      break;\n            case 1:\n                nums[i] = \"one\";\n     \
    \           break;\n            case 2:\n                nums[i] = \"two\";\n\
    \                break;\n            case 3:\n                nums[i] = \"three\"\
    ;\n                break;\n            case 4:\n                nums[i] = \"four\"\
    ;\n                break;\n            case 5:\n                nums[i] = \"five\"\
    ;\n                break;\n            case 6:\n                nums[i] = \"six\"\
    ;\n                break;\n            case 7:\n                nums[i] = \"seven\"\
    ;\n                break;\n            case 8:\n                nums[i] = \"eight\"\
    ;\n\nunittest\n{\n    alias candidate = sort_numbers;\n\n    assert(candidate(\"\
    \") == \"\");\n    assert(candidate(\"three\") == \"three\");\n    assert(candidate(\"\
    three five nine\") == \"three five nine\");\n    assert(candidate(\"five zero\
    \ four seven nine eight\") == \"zero four five seven eight nine\");\n    assert(candidate(\"\
    six five four three two one zero\") == \"zero one two three four five six\");\n\
    }\nvoid main(){}"
  status: SyntaxError
  stderr: '/tmp/tmp9fmtm4eq.d(83): Error: found `unittest` instead of statement

    /tmp/tmp9fmtm4eq.d(93): Error: found `End of File` when expecting `}` following
    compound statement

    /tmp/tmp9fmtm4eq.d(93): Error: found `End of File` when expecting `}` following
    compound statement

    Failed: ["dmd", "-unittest", "-v", "-o-", "/tmp/tmp9fmtm4eq.d", "-I/tmp"]

    '
  stdout: ''
  timestamp: 1660163091
- exit_code: 1
  program: "import std.typecons;\nimport std.math;\n/*\n Input is a space-delimited\
    \ string of numberals from 'zero' to 'nine'.\n    Valid choices are 'zero', 'one',\
    \ 'two', 'three', 'four', 'five', 'six', 'seven', 'eight' and 'nine'.\n    Return\
    \ the string with numbers sorted from smallest to largest\n    >>> sort_numbers(\"\
    three one five\")\n    \"one three five\"\n    \n*/\nstring sort_numbers(string\
    \ numbers) \n{\n    import std.algorithm.sorting;\n    import std.array;\n   \
    \ import std.conv;\n    import std.range;\n    import std.string;\n    import\
    \ std.typecons;\n    import std.math;\n    string[] nums = numbers.split(\" \"\
    );\n    int[] nums_int = nums.map!(a => to!int(a)).array;\n    nums_int.sort;\n\
    \    return nums_int.map!(a => to!string(a)).join(\" \");\n}\nunittest\n{\n  \
    \  alias candidate = sort_numbers;\n\n    assert(candidate(\"\") == \"\");\n \
    \   assert(candidate(\"three\") == \"three\");\n    assert(candidate(\"three five\
    \ nine\") == \"three five nine\");\n    assert(candidate(\"five zero four seven\
    \ nine eight\") == \"zero four five seven eight nine\");\n    assert(candidate(\"\
    six five four three two one zero\") == \"zero one two three four five six\");\n\
    }\nvoid main(){}"
  status: SyntaxError
  stderr: '/tmp/tmpsct945vo.d(21): Error: no property `map` for type `string[]`

    /tmp/tmpsct945vo.d(23): Error: no property `map` for type `int[]`

    Failed: ["dmd", "-unittest", "-v", "-o-", "/tmp/tmpsct945vo.d", "-I/tmp"]

    '
  stdout: ''
  timestamp: 1660163091
- exit_code: 1
  program: "import std.typecons;\nimport std.math;\n/*\n Input is a space-delimited\
    \ string of numberals from 'zero' to 'nine'.\n    Valid choices are 'zero', 'one',\
    \ 'two', 'three', 'four', 'five', 'six', 'seven', 'eight' and 'nine'.\n    Return\
    \ the string with numbers sorted from smallest to largest\n    >>> sort_numbers(\"\
    three one five\")\n    \"one three five\"\n    \n*/\nstring sort_numbers(string\
    \ numbers) \n{\n    string[] nums = numbers.split(\" \");\n    int[] nums_int\
    \ = new int[nums.length];\n    foreach(i, num; nums)\n    {\n        nums_int[i]\
    \ = to!int(num);\n    }\n    sort(nums_int);\n    string result = \"\";\n    foreach(num;\
    \ nums_int)\n    {\n        result ~= to!string(num) ~ \" \";\n    }\n    return\
    \ result.stripRight();\n}\nunittest\n{\n    alias candidate = sort_numbers;\n\n\
    \    assert(candidate(\"\") == \"\");\n    assert(candidate(\"three\") == \"three\"\
    );\n    assert(candidate(\"three five nine\") == \"three five nine\");\n    assert(candidate(\"\
    five zero four seven nine eight\") == \"zero four five seven eight nine\");\n\
    \    assert(candidate(\"six five four three two one zero\") == \"zero one two\
    \ three four five six\");\n}\nvoid main(){}"
  status: SyntaxError
  stderr: '/tmp/tmpuj2nx7js.d(13): Error: no property `split` for type `string`

    /tmp/tmpuj2nx7js.d(17): Error: template instance `to!int` template `to` is not
    defined, did you mean No?

    /tmp/tmpuj2nx7js.d(19): Error: undefined identifier `sort`, did you mean function
    `sqrt`?

    /tmp/tmpuj2nx7js.d(23): Error: template instance `to!string` template `to` is
    not defined, did you mean No?

    /tmp/tmpuj2nx7js.d(25): Error: no property `stripRight` for type `string`

    Failed: ["dmd", "-unittest", "-v", "-o-", "/tmp/tmpuj2nx7js.d", "-I/tmp"]

    '
  stdout: ''
  timestamp: 1660163090
- exit_code: 1
  program: "import std.typecons;\nimport std.math;\n/*\n Input is a space-delimited\
    \ string of numberals from 'zero' to 'nine'.\n    Valid choices are 'zero', 'one',\
    \ 'two', 'three', 'four', 'five', 'six', 'seven', 'eight' and 'nine'.\n    Return\
    \ the string with numbers sorted from smallest to largest\n    >>> sort_numbers(\"\
    three one five\")\n    \"one three five\"\n    \n*/\nstring sort_numbers(string\
    \ numbers) \n{\n    string[] nums = numbers.split(\" \");\n    string[] nums_sorted\
    \ = nums.sort;\n    return nums_sorted.join(\" \");\n}\nunittest\n{\n    alias\
    \ candidate = sort_numbers;\n\n    assert(candidate(\"\") == \"\");\n    assert(candidate(\"\
    three\") == \"three\");\n    assert(candidate(\"three five nine\") == \"three\
    \ five nine\");\n    assert(candidate(\"five zero four seven nine eight\") ==\
    \ \"zero four five seven eight nine\");\n    assert(candidate(\"six five four\
    \ three two one zero\") == \"zero one two three four five six\");\n}\nvoid main(){}"
  status: SyntaxError
  stderr: '/tmp/tmp3m5veexf.d(13): Error: no property `split` for type `string`

    /tmp/tmp3m5veexf.d(14): Error: no property `sort` for type `string[]`

    /tmp/tmp3m5veexf.d(15): Error: no property `join` for type `string[]`

    Failed: ["dmd", "-unittest", "-v", "-o-", "/tmp/tmp3m5veexf.d", "-I/tmp"]

    '
  stdout: ''
  timestamp: 1660163091
- exit_code: 1
  program: "import std.typecons;\nimport std.math;\n/*\n Input is a space-delimited\
    \ string of numberals from 'zero' to 'nine'.\n    Valid choices are 'zero', 'one',\
    \ 'two', 'three', 'four', 'five', 'six', 'seven', 'eight' and 'nine'.\n    Return\
    \ the string with numbers sorted from smallest to largest\n    >>> sort_numbers(\"\
    three one five\")\n    \"one three five\"\n    \n*/\nstring sort_numbers(string\
    \ numbers) \n{\n    string[] nums = numbers.split(\" \");\n    int[] nums_int\
    \ = new int[nums.length];\n    foreach(i, num; nums)\n    {\n        switch(num)\n\
    \        {\n            case \"zero\":\n                nums_int[i] = 0;\n   \
    \             break;\n            case \"one\":\n                nums_int[i] =\
    \ 1;\n                break;\n            case \"two\":\n                nums_int[i]\
    \ = 2;\n                break;\n            case \"three\":\n                nums_int[i]\
    \ = 3;\n                break;\n            case \"four\":\n                nums_int[i]\
    \ = 4;\n                break;\n            case \"five\":\n                nums_int[i]\
    \ = 5;\n                break;\n            case \"six\":\n                nums_int[i]\
    \ = 6;\n                break;\n            case \"seven\":\n                nums_int[i]\
    \ = 7;\n                break;\n            case \"eight\":\n                nums_int[i]\
    \ = 8;\n                break;\n            case \"nine\":\n                nums_int[i]\
    \ = 9;\n                break;\n        }\n    }\n    nums_int.sort();\n    foreach(i,\
    \ num; nums_int)\n    {\n        switch(num)\n        {\n            case 0:\n\
    \                nums[i] = \"zero\";\n                break;\n            case\
    \ 1:\n                nums[i] = \"one\";\n                break;\n           \
    \ case 2:\n                nums[i] = \"two\";\n                break;\n      \
    \      case 3:\n                nums[i] = \"three\";\n                break;\n\
    \            case 4:\n                nums[i] = \"four\";\n                break;\n\
    \            case 5:\n                nums[i] = \"five\";\n                break;\n\
    \            case 6:\n                nums[i] = \"six\";\n                break;\n\
    \            case 7:\n                nums[i] = \"seven\";\n                break;\n\
    \            case 8:\n                nums[i] = \"eight\";\n                break;\n\
    \            case 9:\n                nums[i] = \"nine\nunittest\n{\n    alias\
    \ candidate = sort_numbers;\n\n    assert(candidate(\"\") == \"\");\n    assert(candidate(\"\
    three\") == \"three\");\n    assert(candidate(\"three five nine\") == \"three\
    \ five nine\");\n    assert(candidate(\"five zero four seven nine eight\") ==\
    \ \"zero four five seven eight nine\");\n    assert(candidate(\"six five four\
    \ three two one zero\") == \"zero one two three four five six\");\n}\nvoid main(){}"
  status: SyntaxError
  stderr: '/tmp/tmpq_hzlrvp.d(89): Error: Implicit string concatenation is deprecated,
    use "nine\x0aunittest\x0a{\x0a    alias candidate = sort_numbers;\x0a\x0a    assert(candidate("
    ~ ") == " instead

    /tmp/tmpq_hzlrvp.d(89): Error: Implicit string concatenation is deprecated, use
    ") == " ~ ");\x0a    assert(candidate(" instead

    /tmp/tmpq_hzlrvp.d(90): Error: found `three` when expecting `;` following statement

    /tmp/tmpq_hzlrvp.d(90): Error: found `three` when expecting `;` following statement

    /tmp/tmpq_hzlrvp.d(91): Error: found `three` when expecting `;` following statement

    /tmp/tmpq_hzlrvp.d(91): Error: found `nine` when expecting `;` following statement

    /tmp/tmpq_hzlrvp.d(91): Error: found `three` when expecting `;` following statement

    /tmp/tmpq_hzlrvp.d(91): Error: found `nine` when expecting `;` following statement

    /tmp/tmpq_hzlrvp.d(92): Error: found `five` when expecting `;` following statement

    /tmp/tmpq_hzlrvp.d(92): Error: found `four` when expecting `;` following statement

    /tmp/tmpq_hzlrvp.d(92): Error: found `'
  stdout: ''
  timestamp: 1660163090
- exit_code: 1
  program: "import std.typecons;\nimport std.math;\n/*\n Input is a space-delimited\
    \ string of numberals from 'zero' to 'nine'.\n    Valid choices are 'zero', 'one',\
    \ 'two', 'three', 'four', 'five', 'six', 'seven', 'eight' and 'nine'.\n    Return\
    \ the string with numbers sorted from smallest to largest\n    >>> sort_numbers(\"\
    three one five\")\n    \"one three five\"\n    \n*/\nstring sort_numbers(string\
    \ numbers) \n{\n    string[] nums = numbers.split(\" \");\n    string[] nums_sorted\
    \ = nums.sort();\n    return nums_sorted.join(\" \");\n}\nunittest\n{\n    alias\
    \ candidate = sort_numbers;\n\n    assert(candidate(\"\") == \"\");\n    assert(candidate(\"\
    three\") == \"three\");\n    assert(candidate(\"three five nine\") == \"three\
    \ five nine\");\n    assert(candidate(\"five zero four seven nine eight\") ==\
    \ \"zero four five seven eight nine\");\n    assert(candidate(\"six five four\
    \ three two one zero\") == \"zero one two three four five six\");\n}\nvoid main(){}"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660163090
- exit_code: 1
  program: "import std.typecons;\nimport std.math;\n/*\n Input is a space-delimited\
    \ string of numberals from 'zero' to 'nine'.\n    Valid choices are 'zero', 'one',\
    \ 'two', 'three', 'four', 'five', 'six', 'seven', 'eight' and 'nine'.\n    Return\
    \ the string with numbers sorted from smallest to largest\n    >>> sort_numbers(\"\
    three one five\")\n    \"one three five\"\n    \n*/\nstring sort_numbers(string\
    \ numbers) \n{\n    int[] nums;\n    foreach(num; numbers.split)\n    {\n    \
    \    switch(num)\n        {\n            case \"zero\": nums ~= 0; break;\n  \
    \          case \"one\": nums ~= 1; break;\n            case \"two\": nums ~=\
    \ 2; break;\n            case \"three\": nums ~= 3; break;\n            case \"\
    four\": nums ~= 4; break;\n            case \"five\": nums ~= 5; break;\n    \
    \        case \"six\": nums ~= 6; break;\n            case \"seven\": nums ~=\
    \ 7; break;\n            case \"eight\": nums ~= 8; break;\n            case \"\
    nine\": nums ~= 9; break;\n        }\n    }\n    nums.sort;\n    string ret;\n\
    \    foreach(num; nums)\n    {\n        switch(num)\n        {\n            case\
    \ 0: ret ~= \"zero \"; break;\n            case 1: ret ~= \"one \"; break;\n \
    \           case 2: ret ~= \"two \"; break;\n            case 3: ret ~= \"three\
    \ \"; break;\n            case 4: ret ~= \"four \"; break;\n            case 5:\
    \ ret ~= \"five \"; break;\n            case 6: ret ~= \"six \"; break;\n    \
    \        case 7: ret ~= \"seven \"; break;\n            case 8: ret ~= \"eight\
    \ \"; break;\n            case 9: ret ~= \"nine \"; break;\n        }\n    }\n\
    \    return ret.stripRight;\n}\nunittest\n{\n    alias candidate = sort_numbers;\n\
    \n    assert(candidate(\"\") == \"\");\n    assert(candidate(\"three\") == \"\
    three\");\n    assert(candidate(\"three five nine\") == \"three five nine\");\n\
    \    assert(candidate(\"five zero four seven nine eight\") == \"zero four five\
    \ seven eight nine\");\n    assert(candidate(\"six five four three two one zero\"\
    ) == \"zero one two three four five six\");\n}\nvoid main(){}"
  status: SyntaxError
  stderr: '/tmp/tmpjke4_gfa.d(14): Error: no property `split` for type `string`

    /tmp/tmpjke4_gfa.d(30): Error: no property `sort` for type `int[]`

    /tmp/tmpjke4_gfa.d(34): Error: `switch` statement without a `default`; use `final
    switch` or add `default: assert(0);` or add `default: break;`

    /tmp/tmpjke4_gfa.d(48): Error: no property `stripRight` for type `string`

    Failed: ["dmd", "-unittest", "-v", "-o-", "/tmp/tmpjke4_gfa.d", "-I/tmp"]

    '
  stdout: ''
  timestamp: 1660163091
- exit_code: 1
  program: "import std.typecons;\nimport std.math;\n/*\n Input is a space-delimited\
    \ string of numberals from 'zero' to 'nine'.\n    Valid choices are 'zero', 'one',\
    \ 'two', 'three', 'four', 'five', 'six', 'seven', 'eight' and 'nine'.\n    Return\
    \ the string with numbers sorted from smallest to largest\n    >>> sort_numbers(\"\
    three one five\")\n    \"one three five\"\n    \n*/\nstring sort_numbers(string\
    \ numbers) \n{\n    string[] nums = numbers.split(\" \");\n    int[] nums_int\
    \ = new int[nums.length];\n    foreach(int i, string n; nums)\n    {\n       \
    \ switch(n)\n        {\n            case \"zero\":\n                nums_int[i]\
    \ = 0;\n                break;\n            case \"one\":\n                nums_int[i]\
    \ = 1;\n                break;\n            case \"two\":\n                nums_int[i]\
    \ = 2;\n                break;\n            case \"three\":\n                nums_int[i]\
    \ = 3;\n                break;\n            case \"four\":\n                nums_int[i]\
    \ = 4;\n                break;\n            case \"five\":\n                nums_int[i]\
    \ = 5;\n                break;\n            case \"six\":\n                nums_int[i]\
    \ = 6;\n                break;\n            case \"seven\":\n                nums_int[i]\
    \ = 7;\n                break;\n            case \"eight\":\n                nums_int[i]\
    \ = 8;\n                break;\n            case \"nine\":\n                nums_int[i]\
    \ = 9;\n                break;\n        }\n    }\n    nums_int.sort;\n    foreach(int\
    \ i, int n; nums_int)\n    {\n        switch(n)\n        {\n            case 0:\n\
    \                nums[i] = \"zero\";\n                break;\n            case\
    \ 1:\n                nums[i] = \"one\";\n                break;\n           \
    \ case 2:\n                nums[i] = \"two\";\n                break;\n      \
    \      case 3:\n                nums[i] = \"three\";\n                break;\n\
    \            case 4:\n                nums[i] = \"four\";\n                break;\n\
    \            case 5:\n                nums[i] = \"five\";\n                break;\n\
    \            case 6:\n                nums[i] = \"six\";\n                break;\n\
    \            case 7:\n                nums[i] = \"seven\";\n                break;\n\
    \            case 8:\n                nums[i] = \"eight\";\n                break;\n\
    \            case 9:\n                nums[i\nunittest\n{\n    alias candidate\
    \ = sort_numbers;\n\n    assert(candidate(\"\") == \"\");\n    assert(candidate(\"\
    three\") == \"three\");\n    assert(candidate(\"three five nine\") == \"three\
    \ five nine\");\n    assert(candidate(\"five zero four seven nine eight\") ==\
    \ \"zero four five seven eight nine\");\n    assert(candidate(\"six five four\
    \ three two one zero\") == \"zero one two three four five six\");\n}\nvoid main(){}"
  status: SyntaxError
  stderr: '/tmp/tmpy_ih0vvu.d(85): Error: found `unittest` when expecting `,`

    /tmp/tmpy_ih0vvu.d(95): Error: found `void` when expecting `,`

    /tmp/tmpy_ih0vvu.d(95): Error: found `{` when expecting `,`

    /tmp/tmpy_ih0vvu.d(95): Error: expression expected, not `}`

    /tmp/tmpy_ih0vvu.d(95): Error: found `End of File` when expecting `,`

    /tmp/tmpy_ih0vvu.d(95): Error: found `End of File` when expecting `]`

    /tmp/tmpy_ih0vvu.d(95): Error: found `End of File` when expecting `;` following
    statement

    /tmp/tmpy_ih0vvu.d(95): Error: found `End of File` when expecting `}` following
    compound statement

    /tmp/tmpy_ih0vvu.d(95): Error: found `End of File` when expecting `}` following
    compound statement

    /tmp/tmpy_ih0vvu.d(95): Error: found `End of File` when expecting `}` following
    compound statement

    Failed: ["dmd", "-unittest", "-v", "-o-", "/tmp/tmpy_ih0vvu.d", "-I/tmp"]

    '
  stdout: ''
  timestamp: 1660163090
- exit_code: 1
  program: "import std.typecons;\nimport std.math;\n/*\n Input is a space-delimited\
    \ string of numberals from 'zero' to 'nine'.\n    Valid choices are 'zero', 'one',\
    \ 'two', 'three', 'four', 'five', 'six', 'seven', 'eight' and 'nine'.\n    Return\
    \ the string with numbers sorted from smallest to largest\n    >>> sort_numbers(\"\
    three one five\")\n    \"one three five\"\n    \n*/\nstring sort_numbers(string\
    \ numbers) \n{\n    string[] nums = numbers.split(\" \");\n    int[] nums_int\
    \ = new int[nums.length];\n    foreach(i, num; nums)\n    {\n        switch(num)\n\
    \        {\n            case \"zero\":\n                nums_int[i] = 0;\n   \
    \             break;\n            case \"one\":\n                nums_int[i] =\
    \ 1;\n                break;\n            case \"two\":\n                nums_int[i]\
    \ = 2;\n                break;\n            case \"three\":\n                nums_int[i]\
    \ = 3;\n                break;\n            case \"four\":\n                nums_int[i]\
    \ = 4;\n                break;\n            case \"five\":\n                nums_int[i]\
    \ = 5;\n                break;\n            case \"six\":\n                nums_int[i]\
    \ = 6;\n                break;\n            case \"seven\":\n                nums_int[i]\
    \ = 7;\n                break;\n            case \"eight\":\n                nums_int[i]\
    \ = 8;\n                break;\n            case \"nine\":\n                nums_int[i]\
    \ = 9;\n                break;\n        }\n    }\n    nums_int.sort();\n    foreach(i,\
    \ num; nums_int)\n    {\n        switch(num)\n        {\n            case 0:\n\
    \                nums[i] = \"zero\";\n                break;\n            case\
    \ 1:\n                nums[i] = \"one\";\n                break;\n           \
    \ case 2:\n                nums[i] = \"two\";\n                break;\n      \
    \      case 3:\n                nums[i] = \"three\";\n                break;\n\
    \            case 4:\n                nums[i] = \"four\";\n                break;\n\
    \            case 5:\n                nums[i] = \"five\";\n                break;\n\
    \            case 6:\n                nums[i] = \"six\";\n                break;\n\
    \            case 7:\n                nums[i] = \"seven\";\n                break;\n\
    \            case 8:\n                nums[i] = \"eight\";\n                break;\n\
    \            case 9:\n                nums[i] = \"nine\nunittest\n{\n    alias\
    \ candidate = sort_numbers;\n\n    assert(candidate(\"\") == \"\");\n    assert(candidate(\"\
    three\") == \"three\");\n    assert(candidate(\"three five nine\") == \"three\
    \ five nine\");\n    assert(candidate(\"five zero four seven nine eight\") ==\
    \ \"zero four five seven eight nine\");\n    assert(candidate(\"six five four\
    \ three two one zero\") == \"zero one two three four five six\");\n}\nvoid main(){}"
  status: SyntaxError
  stderr: '/tmp/tmpq_hzlrvp.d(89): Error: Implicit string concatenation is deprecated,
    use "nine\x0aunittest\x0a{\x0a    alias candidate = sort_numbers;\x0a\x0a    assert(candidate("
    ~ ") == " instead

    /tmp/tmpq_hzlrvp.d(89): Error: Implicit string concatenation is deprecated, use
    ") == " ~ ");\x0a    assert(candidate(" instead

    /tmp/tmpq_hzlrvp.d(90): Error: found `three` when expecting `;` following statement

    /tmp/tmpq_hzlrvp.d(90): Error: found `three` when expecting `;` following statement

    /tmp/tmpq_hzlrvp.d(91): Error: found `three` when expecting `;` following statement

    /tmp/tmpq_hzlrvp.d(91): Error: found `nine` when expecting `;` following statement

    /tmp/tmpq_hzlrvp.d(91): Error: found `three` when expecting `;` following statement

    /tmp/tmpq_hzlrvp.d(91): Error: found `nine` when expecting `;` following statement

    /tmp/tmpq_hzlrvp.d(92): Error: found `five` when expecting `;` following statement

    /tmp/tmpq_hzlrvp.d(92): Error: found `four` when expecting `;` following statement

    /tmp/tmpq_hzlrvp.d(92): Error: found `'
  stdout: ''
  timestamp: 1660163090
- exit_code: 1
  program: "import std.typecons;\nimport std.math;\n/*\n Input is a space-delimited\
    \ string of numberals from 'zero' to 'nine'.\n    Valid choices are 'zero', 'one',\
    \ 'two', 'three', 'four', 'five', 'six', 'seven', 'eight' and 'nine'.\n    Return\
    \ the string with numbers sorted from smallest to largest\n    >>> sort_numbers(\"\
    three one five\")\n    \"one three five\"\n    \n*/\nstring sort_numbers(string\
    \ numbers) \n{\n    string[] nums = numbers.split(\" \");\n    string[] nums_sorted\
    \ = nums.dup;\n    nums_sorted.sort;\n    string result = \"\";\n    foreach(string\
    \ num; nums_sorted)\n    {\n        result ~= num ~ \" \";\n    }\n    return\
    \ result;\n}\nunittest\n{\n    alias candidate = sort_numbers;\n\n    assert(candidate(\"\
    \") == \"\");\n    assert(candidate(\"three\") == \"three\");\n    assert(candidate(\"\
    three five nine\") == \"three five nine\");\n    assert(candidate(\"five zero\
    \ four seven nine eight\") == \"zero four five seven eight nine\");\n    assert(candidate(\"\
    six five four three two one zero\") == \"zero one two three four five six\");\n\
    }\nvoid main(){}"
  status: SyntaxError
  stderr: '/tmp/tmp93u82hr2.d(13): Error: no property `split` for type `string`

    /tmp/tmp93u82hr2.d(15): Error: no property `sort` for type `string[]`

    Failed: ["dmd", "-unittest", "-v", "-o-", "/tmp/tmp93u82hr2.d", "-I/tmp"]

    '
  stdout: ''
  timestamp: 1660163091
- exit_code: 1
  program: "import std.typecons;\nimport std.math;\n/*\n Input is a space-delimited\
    \ string of numberals from 'zero' to 'nine'.\n    Valid choices are 'zero', 'one',\
    \ 'two', 'three', 'four', 'five', 'six', 'seven', 'eight' and 'nine'.\n    Return\
    \ the string with numbers sorted from smallest to largest\n    >>> sort_numbers(\"\
    three one five\")\n    \"one three five\"\n    \n*/\nstring sort_numbers(string\
    \ numbers) \n{\n    string[] nums = numbers.split(\" \");\n    int[] nums_int\
    \ = new int[nums.length];\n    foreach(int i, string num; nums)\n    {\n     \
    \   nums_int[i] = parse_numeral(num);\n    }\n    nums_int.sort();\n    foreach(int\
    \ i, int num; nums_int)\n    {\n        nums[i] = numeral_to_string(num);\n  \
    \  }\n    return nums.join(\" \");\n}\nunittest\n{\n    alias candidate = sort_numbers;\n\
    \n    assert(candidate(\"\") == \"\");\n    assert(candidate(\"three\") == \"\
    three\");\n    assert(candidate(\"three five nine\") == \"three five nine\");\n\
    \    assert(candidate(\"five zero four seven nine eight\") == \"zero four five\
    \ seven eight nine\");\n    assert(candidate(\"six five four three two one zero\"\
    ) == \"zero one two three four five six\");\n}\nvoid main(){}"
  status: SyntaxError
  stderr: '/tmp/tmppj8s7298.d(13): Error: no property `split` for type `string`

    /tmp/tmppj8s7298.d(17): Error: undefined identifier `parse_numeral`

    /tmp/tmppj8s7298.d(19): Error: no property `sort` for type `int[]`

    /tmp/tmppj8s7298.d(22): Error: undefined identifier `numeral_to_string`

    /tmp/tmppj8s7298.d(24): Error: no property `join` for type `string[]`

    Failed: ["dmd", "-unittest", "-v", "-o-", "/tmp/tmppj8s7298.d", "-I/tmp"]

    '
  stdout: ''
  timestamp: 1660163091
- exit_code: 1
  program: "import std.typecons;\nimport std.math;\n/*\n Input is a space-delimited\
    \ string of numberals from 'zero' to 'nine'.\n    Valid choices are 'zero', 'one',\
    \ 'two', 'three', 'four', 'five', 'six', 'seven', 'eight' and 'nine'.\n    Return\
    \ the string with numbers sorted from smallest to largest\n    >>> sort_numbers(\"\
    three one five\")\n    \"one three five\"\n    \n*/\nstring sort_numbers(string\
    \ numbers) \n{\n    string[] nums = numbers.split(\" \");\n    int[] nums_int\
    \ = new int[nums.length];\n    foreach(i, num; nums)\n    {\n        nums_int[i]\
    \ = to!int(num);\n    }\n    sort(nums_int);\n    string result = \"\";\n    foreach(num;\
    \ nums_int)\n    {\n        result ~= to!string(num) ~ \" \";\n    }\n    return\
    \ result;\n}\nunittest\n{\n    alias candidate = sort_numbers;\n\n    assert(candidate(\"\
    \") == \"\");\n    assert(candidate(\"three\") == \"three\");\n    assert(candidate(\"\
    three five nine\") == \"three five nine\");\n    assert(candidate(\"five zero\
    \ four seven nine eight\") == \"zero four five seven eight nine\");\n    assert(candidate(\"\
    six five four three two one zero\") == \"zero one two three four five six\");\n\
    }\nvoid main(){}"
  status: SyntaxError
  stderr: '/tmp/tmpxi8td3kf.d(13): Error: no property `split` for type `string`

    /tmp/tmpxi8td3kf.d(17): Error: template instance `to!int` template `to` is not
    defined, did you mean No?

    /tmp/tmpxi8td3kf.d(19): Error: undefined identifier `sort`, did you mean function
    `sqrt`?

    /tmp/tmpxi8td3kf.d(23): Error: template instance `to!string` template `to` is
    not defined, did you mean No?

    Failed: ["dmd", "-unittest", "-v", "-o-", "/tmp/tmpxi8td3kf.d", "-I/tmp"]

    '
  stdout: ''
  timestamp: 1660163091
- exit_code: 1
  program: "import std.typecons;\nimport std.math;\n/*\n Input is a space-delimited\
    \ string of numberals from 'zero' to 'nine'.\n    Valid choices are 'zero', 'one',\
    \ 'two', 'three', 'four', 'five', 'six', 'seven', 'eight' and 'nine'.\n    Return\
    \ the string with numbers sorted from smallest to largest\n    >>> sort_numbers(\"\
    three one five\")\n    \"one three five\"\n    \n*/\nstring sort_numbers(string\
    \ numbers) \n{\n    string[] nums = numbers.split(\" \");\n    string[] nums_sorted\
    \ = nums.sort();\n    return nums_sorted.join(\" \");\n}\nunittest\n{\n    alias\
    \ candidate = sort_numbers;\n\n    assert(candidate(\"\") == \"\");\n    assert(candidate(\"\
    three\") == \"three\");\n    assert(candidate(\"three five nine\") == \"three\
    \ five nine\");\n    assert(candidate(\"five zero four seven nine eight\") ==\
    \ \"zero four five seven eight nine\");\n    assert(candidate(\"six five four\
    \ three two one zero\") == \"zero one two three four five six\");\n}\nvoid main(){}"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660163090
- exit_code: 1
  program: "import std.typecons;\nimport std.math;\n/*\n Input is a space-delimited\
    \ string of numberals from 'zero' to 'nine'.\n    Valid choices are 'zero', 'one',\
    \ 'two', 'three', 'four', 'five', 'six', 'seven', 'eight' and 'nine'.\n    Return\
    \ the string with numbers sorted from smallest to largest\n    >>> sort_numbers(\"\
    three one five\")\n    \"one three five\"\n    \n*/\nstring sort_numbers(string\
    \ numbers) \n{\n    string[] nums = numbers.split(\" \");\n    int[] nums_int\
    \ = new int[nums.length];\n    foreach(i, num; nums)\n    {\n        switch(num)\n\
    \        {\n            case \"zero\":\n                nums_int[i] = 0;\n   \
    \             break;\n            case \"one\":\n                nums_int[i] =\
    \ 1;\n                break;\n            case \"two\":\n                nums_int[i]\
    \ = 2;\n                break;\n            case \"three\":\n                nums_int[i]\
    \ = 3;\n                break;\n            case \"four\":\n                nums_int[i]\
    \ = 4;\n                break;\n            case \"five\":\n                nums_int[i]\
    \ = 5;\n                break;\n            case \"six\":\n                nums_int[i]\
    \ = 6;\n                break;\n            case \"seven\":\n                nums_int[i]\
    \ = 7;\n                break;\n            case \"eight\":\n                nums_int[i]\
    \ = 8;\n                break;\n            case \"nine\":\n                nums_int[i]\
    \ = 9;\n                break;\n        }\n    }\n    nums_int.sort();\n    foreach(i,\
    \ num; nums_int)\n    {\n        switch(num)\n        {\n            case 0:\n\
    \                nums[i] = \"zero\";\n                break;\n            case\
    \ 1:\n                nums[i] = \"one\";\n                break;\n           \
    \ case 2:\n                nums[i] = \"two\";\n                break;\n      \
    \      case 3:\n                nums[i] = \"three\";\n                break;\n\
    \            case 4:\n                nums[i] = \"four\";\n                break;\n\
    \            case 5:\n                nums[i] = \"five\";\n                break;\n\
    \            case 6:\n                nums[i] = \"six\";\n                break;\n\
    \            case 7:\n                nums[i] = \"seven\";\n                break;\n\
    \            case 8:\n                nums[i] = \"eight\";\n                break;\n\
    \            case 9:\n                nums[i] = \"nine\nunittest\n{\n    alias\
    \ candidate = sort_numbers;\n\n    assert(candidate(\"\") == \"\");\n    assert(candidate(\"\
    three\") == \"three\");\n    assert(candidate(\"three five nine\") == \"three\
    \ five nine\");\n    assert(candidate(\"five zero four seven nine eight\") ==\
    \ \"zero four five seven eight nine\");\n    assert(candidate(\"six five four\
    \ three two one zero\") == \"zero one two three four five six\");\n}\nvoid main(){}"
  status: SyntaxError
  stderr: '/tmp/tmpq_hzlrvp.d(89): Error: Implicit string concatenation is deprecated,
    use "nine\x0aunittest\x0a{\x0a    alias candidate = sort_numbers;\x0a\x0a    assert(candidate("
    ~ ") == " instead

    /tmp/tmpq_hzlrvp.d(89): Error: Implicit string concatenation is deprecated, use
    ") == " ~ ");\x0a    assert(candidate(" instead

    /tmp/tmpq_hzlrvp.d(90): Error: found `three` when expecting `;` following statement

    /tmp/tmpq_hzlrvp.d(90): Error: found `three` when expecting `;` following statement

    /tmp/tmpq_hzlrvp.d(91): Error: found `three` when expecting `;` following statement

    /tmp/tmpq_hzlrvp.d(91): Error: found `nine` when expecting `;` following statement

    /tmp/tmpq_hzlrvp.d(91): Error: found `three` when expecting `;` following statement

    /tmp/tmpq_hzlrvp.d(91): Error: found `nine` when expecting `;` following statement

    /tmp/tmpq_hzlrvp.d(92): Error: found `five` when expecting `;` following statement

    /tmp/tmpq_hzlrvp.d(92): Error: found `four` when expecting `;` following statement

    /tmp/tmpq_hzlrvp.d(92): Error: found `'
  stdout: ''
  timestamp: 1660163090
- exit_code: 1
  program: "import std.typecons;\nimport std.math;\n/*\n Input is a space-delimited\
    \ string of numberals from 'zero' to 'nine'.\n    Valid choices are 'zero', 'one',\
    \ 'two', 'three', 'four', 'five', 'six', 'seven', 'eight' and 'nine'.\n    Return\
    \ the string with numbers sorted from smallest to largest\n    >>> sort_numbers(\"\
    three one five\")\n    \"one three five\"\n    \n*/\nstring sort_numbers(string\
    \ numbers) \n{\n    string[] nums = numbers.split(\" \");\n    int[] nums_int\
    \ = new int[nums.length];\n    for (int i = 0; i < nums.length; i++)\n    {\n\
    \        nums_int[i] = to!int(nums[i]);\n    }\n    sort(nums_int);\n    string\
    \ result = \"\";\n    foreach (int i; nums_int)\n    {\n        result ~= to!string(i)\
    \ ~ \" \";\n    }\n    return result;\n}\nunittest\n{\n    alias candidate = sort_numbers;\n\
    \n    assert(candidate(\"\") == \"\");\n    assert(candidate(\"three\") == \"\
    three\");\n    assert(candidate(\"three five nine\") == \"three five nine\");\n\
    \    assert(candidate(\"five zero four seven nine eight\") == \"zero four five\
    \ seven eight nine\");\n    assert(candidate(\"six five four three two one zero\"\
    ) == \"zero one two three four five six\");\n}\nvoid main(){}"
  status: SyntaxError
  stderr: '/tmp/tmp5_14cl6_.d(13): Error: no property `split` for type `string`

    /tmp/tmp5_14cl6_.d(17): Error: template instance `to!int` template `to` is not
    defined, did you mean No?

    /tmp/tmp5_14cl6_.d(19): Error: undefined identifier `sort`, did you mean function
    `sqrt`?

    /tmp/tmp5_14cl6_.d(23): Error: template instance `to!string` template `to` is
    not defined, did you mean No?

    Failed: ["dmd", "-unittest", "-v", "-o-", "/tmp/tmp5_14cl6_.d", "-I/tmp"]

    '
  stdout: ''
  timestamp: 1660163090
- exit_code: 1
  program: "import std.typecons;\nimport std.math;\n/*\n Input is a space-delimited\
    \ string of numberals from 'zero' to 'nine'.\n    Valid choices are 'zero', 'one',\
    \ 'two', 'three', 'four', 'five', 'six', 'seven', 'eight' and 'nine'.\n    Return\
    \ the string with numbers sorted from smallest to largest\n    >>> sort_numbers(\"\
    three one five\")\n    \"one three five\"\n    \n*/\nstring sort_numbers(string\
    \ numbers) \n{\n    string[] nums = numbers.split(\" \");\n    int[] nums_int\
    \ = new int[nums.length];\n    foreach(i, num; nums)\n    {\n        nums_int[i]\
    \ = to!int(num);\n    }\n    sort(nums_int);\n    string[] nums_str = new string[nums.length];\n\
    \    foreach(i, num; nums_int)\n    {\n        nums_str[i] = to!string(num);\n\
    \    }\n    return join(nums_str, \" \");\n}\nunittest\n{\n    alias candidate\
    \ = sort_numbers;\n\n    assert(candidate(\"\") == \"\");\n    assert(candidate(\"\
    three\") == \"three\");\n    assert(candidate(\"three five nine\") == \"three\
    \ five nine\");\n    assert(candidate(\"five zero four seven nine eight\") ==\
    \ \"zero four five seven eight nine\");\n    assert(candidate(\"six five four\
    \ three two one zero\") == \"zero one two three four five six\");\n}\nvoid main(){}"
  status: SyntaxError
  stderr: '/tmp/tmpwdq_g0vl.d(13): Error: no property `split` for type `string`

    /tmp/tmpwdq_g0vl.d(17): Error: template instance `to!int` template `to` is not
    defined, did you mean No?

    /tmp/tmpwdq_g0vl.d(19): Error: undefined identifier `sort`, did you mean function
    `sqrt`?

    /tmp/tmpwdq_g0vl.d(23): Error: template instance `to!string` template `to` is
    not defined, did you mean No?

    /tmp/tmpwdq_g0vl.d(25): Error: undefined identifier `join`, did you mean function
    `main`?

    Failed: ["dmd", "-unittest", "-v", "-o-", "/tmp/tmpwdq_g0vl.d", "-I/tmp"]

    '
  stdout: ''
  timestamp: 1660163091
- exit_code: 1
  program: "import std.typecons;\nimport std.math;\n/*\n Input is a space-delimited\
    \ string of numberals from 'zero' to 'nine'.\n    Valid choices are 'zero', 'one',\
    \ 'two', 'three', 'four', 'five', 'six', 'seven', 'eight' and 'nine'.\n    Return\
    \ the string with numbers sorted from smallest to largest\n    >>> sort_numbers(\"\
    three one five\")\n    \"one three five\"\n    \n*/\nstring sort_numbers(string\
    \ numbers) \n{\n    string[] nums = numbers.split(\" \");\n    int[] nums_int\
    \ = new int[nums.length];\n    foreach(i, num; nums)\n    {\n        nums_int[i]\
    \ = num_to_int(num);\n    }\n    sort(nums_int);\n    string[] nums_sorted = new\
    \ string[nums.length];\n    foreach(i, num; nums_int)\n    {\n        nums_sorted[i]\
    \ = int_to_num(num);\n    }\n    return nums_sorted.join(\" \");\n}\nunittest\n\
    {\n    alias candidate = sort_numbers;\n\n    assert(candidate(\"\") == \"\");\n\
    \    assert(candidate(\"three\") == \"three\");\n    assert(candidate(\"three\
    \ five nine\") == \"three five nine\");\n    assert(candidate(\"five zero four\
    \ seven nine eight\") == \"zero four five seven eight nine\");\n    assert(candidate(\"\
    six five four three two one zero\") == \"zero one two three four five six\");\n\
    }\nvoid main(){}"
  status: SyntaxError
  stderr: '/tmp/tmp8d1edpob.d(13): Error: no property `split` for type `string`

    /tmp/tmp8d1edpob.d(17): Error: undefined identifier `num_to_int`

    /tmp/tmp8d1edpob.d(19): Error: undefined identifier `sort`, did you mean function
    `sqrt`?

    /tmp/tmp8d1edpob.d(23): Error: undefined identifier `int_to_num`

    /tmp/tmp8d1edpob.d(25): Error: no property `join` for type `string[]`

    Failed: ["dmd", "-unittest", "-v", "-o-", "/tmp/tmp8d1edpob.d", "-I/tmp"]

    '
  stdout: ''
  timestamp: 1660163091
- exit_code: 1
  program: "import std.typecons;\nimport std.math;\n/*\n Input is a space-delimited\
    \ string of numberals from 'zero' to 'nine'.\n    Valid choices are 'zero', 'one',\
    \ 'two', 'three', 'four', 'five', 'six', 'seven', 'eight' and 'nine'.\n    Return\
    \ the string with numbers sorted from smallest to largest\n    >>> sort_numbers(\"\
    three one five\")\n    \"one three five\"\n    \n*/\nstring sort_numbers(string\
    \ numbers) \n{\n    string[] nums = numbers.split(\" \");\n    int[] nums_int\
    \ = new int[nums.length];\n    foreach(i, num; nums)\n    {\n        switch(num)\n\
    \        {\n            case \"zero\":\n                nums_int[i] = 0;\n   \
    \             break;\n            case \"one\":\n                nums_int[i] =\
    \ 1;\n                break;\n            case \"two\":\n                nums_int[i]\
    \ = 2;\n                break;\n            case \"three\":\n                nums_int[i]\
    \ = 3;\n                break;\n            case \"four\":\n                nums_int[i]\
    \ = 4;\n                break;\n            case \"five\":\n                nums_int[i]\
    \ = 5;\n                break;\n            case \"six\":\n                nums_int[i]\
    \ = 6;\n                break;\n            case \"seven\":\n                nums_int[i]\
    \ = 7;\n                break;\n            case \"eight\":\n                nums_int[i]\
    \ = 8;\n                break;\n            case \"nine\":\n                nums_int[i]\
    \ = 9;\n                break;\n        }\n    }\n    nums_int.sort;\n    string[]\
    \ nums_sorted = new string[nums.length];\n    foreach(i, num; nums_int)\n    {\n\
    \        switch(num)\n        {\n            case 0:\n                nums_sorted[i]\
    \ = \"zero\";\n                break;\n            case 1:\n                nums_sorted[i]\
    \ = \"one\";\n                break;\n            case 2:\n                nums_sorted[i]\
    \ = \"two\";\n                break;\n            case 3:\n                nums_sorted[i]\
    \ = \"three\";\n                break;\n            case 4:\n                nums_sorted[i]\
    \ = \"four\";\n                break;\n            case 5:\n                nums_sorted[i]\
    \ = \"five\";\n                break;\n            case 6:\n                nums_sorted[i]\
    \ = \"six\";\n                break;\n            case 7:\n                nums_sorted[i]\
    \ =\nunittest\n{\n    alias candidate = sort_numbers;\n\n    assert(candidate(\"\
    \") == \"\");\n    assert(candidate(\"three\") == \"three\");\n    assert(candidate(\"\
    three five nine\") == \"three five nine\");\n    assert(candidate(\"five zero\
    \ four seven nine eight\") == \"zero four five seven eight nine\");\n    assert(candidate(\"\
    six five four three two one zero\") == \"zero one two three four five six\");\n\
    }\nvoid main(){}"
  status: SyntaxError
  stderr: '/tmp/tmpm193hdk3.d(80): Error: expression expected, not `unittest`

    /tmp/tmpm193hdk3.d(81): Error: found `{` when expecting `;` following statement

    /tmp/tmpm193hdk3.d(90): Error: found `End of File` when expecting `}` following
    compound statement

    /tmp/tmpm193hdk3.d(90): Error: found `End of File` when expecting `}` following
    compound statement

    Failed: ["dmd", "-unittest", "-v", "-o-", "/tmp/tmpm193hdk3.d", "-I/tmp"]

    '
  stdout: ''
  timestamp: 1660163091
- exit_code: 1
  program: "import std.typecons;\nimport std.math;\n/*\n Input is a space-delimited\
    \ string of numberals from 'zero' to 'nine'.\n    Valid choices are 'zero', 'one',\
    \ 'two', 'three', 'four', 'five', 'six', 'seven', 'eight' and 'nine'.\n    Return\
    \ the string with numbers sorted from smallest to largest\n    >>> sort_numbers(\"\
    three one five\")\n    \"one three five\"\n    \n*/\nstring sort_numbers(string\
    \ numbers) \n{\n    auto nums = numbers.split(\" \");\n    nums.sort!((a, b) =>\
    \ numeralToInt(a) < numeralToInt(b));\n    return nums.join(\" \");\n}\nunittest\n\
    {\n    alias candidate = sort_numbers;\n\n    assert(candidate(\"\") == \"\");\n\
    \    assert(candidate(\"three\") == \"three\");\n    assert(candidate(\"three\
    \ five nine\") == \"three five nine\");\n    assert(candidate(\"five zero four\
    \ seven nine eight\") == \"zero four five seven eight nine\");\n    assert(candidate(\"\
    six five four three two one zero\") == \"zero one two three four five six\");\n\
    }\nvoid main(){}"
  status: SyntaxError
  stderr: '/tmp/tmpw6jd4il2.d(13): Error: no property `split` for type `string`

    Failed: ["dmd", "-unittest", "-v", "-o-", "/tmp/tmpw6jd4il2.d", "-I/tmp"]

    '
  stdout: ''
  timestamp: 1660163090
- exit_code: 1
  program: "import std.typecons;\nimport std.math;\n/*\n Input is a space-delimited\
    \ string of numberals from 'zero' to 'nine'.\n    Valid choices are 'zero', 'one',\
    \ 'two', 'three', 'four', 'five', 'six', 'seven', 'eight' and 'nine'.\n    Return\
    \ the string with numbers sorted from smallest to largest\n    >>> sort_numbers(\"\
    three one five\")\n    \"one three five\"\n    \n*/\nstring sort_numbers(string\
    \ numbers) \n{\n    string[] nums = numbers.split(\" \");\n    string[] nums_sorted\
    \ = nums.dup;\n    nums_sorted.sort;\n    return nums_sorted.join(\" \");\n}\n\
    unittest\n{\n    alias candidate = sort_numbers;\n\n    assert(candidate(\"\"\
    ) == \"\");\n    assert(candidate(\"three\") == \"three\");\n    assert(candidate(\"\
    three five nine\") == \"three five nine\");\n    assert(candidate(\"five zero\
    \ four seven nine eight\") == \"zero four five seven eight nine\");\n    assert(candidate(\"\
    six five four three two one zero\") == \"zero one two three four five six\");\n\
    }\nvoid main(){}"
  status: SyntaxError
  stderr: '/tmp/tmpzgx7rljb.d(13): Error: no property `split` for type `string`

    /tmp/tmpzgx7rljb.d(15): Error: no property `sort` for type `string[]`

    /tmp/tmpzgx7rljb.d(16): Error: no property `join` for type `string[]`

    Failed: ["dmd", "-unittest", "-v", "-o-", "/tmp/tmpzgx7rljb.d", "-I/tmp"]

    '
  stdout: ''
  timestamp: 1660163090
- exit_code: 1
  program: "import std.typecons;\nimport std.math;\n/*\n Input is a space-delimited\
    \ string of numberals from 'zero' to 'nine'.\n    Valid choices are 'zero', 'one',\
    \ 'two', 'three', 'four', 'five', 'six', 'seven', 'eight' and 'nine'.\n    Return\
    \ the string with numbers sorted from smallest to largest\n    >>> sort_numbers(\"\
    three one five\")\n    \"one three five\"\n    \n*/\nstring sort_numbers(string\
    \ numbers) \n{\n    string[] nums = numbers.split(\" \");\n    int[] nums_int\
    \ = new int[nums.length];\n    foreach(int i, string num; nums)\n    {\n     \
    \   switch(num)\n        {\n            case \"zero\":\n                nums_int[i]\
    \ = 0;\n                break;\n            case \"one\":\n                nums_int[i]\
    \ = 1;\n                break;\n            case \"two\":\n                nums_int[i]\
    \ = 2;\n                break;\n            case \"three\":\n                nums_int[i]\
    \ = 3;\n                break;\n            case \"four\":\n                nums_int[i]\
    \ = 4;\n                break;\n            case \"five\":\n                nums_int[i]\
    \ = 5;\n                break;\n            case \"six\":\n                nums_int[i]\
    \ = 6;\n                break;\n            case \"seven\":\n                nums_int[i]\
    \ = 7;\n                break;\n            case \"eight\":\n                nums_int[i]\
    \ = 8;\n                break;\n            case \"nine\":\n                nums_int[i]\
    \ = 9;\n                break;\n        }\n    }\n    nums_int.sort();\n    foreach(int\
    \ i, int num; nums_int)\n    {\n        switch(num)\n        {\n            case\
    \ 0:\n                nums[i] = \"zero\";\n                break;\n          \
    \  case 1:\n                nums[i] = \"one\";\n                break;\n     \
    \       case 2:\n                nums[i] = \"two\";\n                break;\n\
    \            case 3:\n                nums[i] = \"three\";\n                break;\n\
    \            case 4:\n                nums[i] = \"four\";\n                break;\n\
    \            case 5:\n                nums[i] = \"five\";\n                break;\n\
    \            case 6:\n                nums[i] = \"six\";\n                break;\n\
    \            case 7:\n                nums[i] = \"seven\";\n                break;\n\
    \            case 8:\n                nums[i] = \"eight\";\n                break;\n\
    \            case 9:\n                nums[i\nunittest\n{\n    alias candidate\
    \ = sort_numbers;\n\n    assert(candidate(\"\") == \"\");\n    assert(candidate(\"\
    three\") == \"three\");\n    assert(candidate(\"three five nine\") == \"three\
    \ five nine\");\n    assert(candidate(\"five zero four seven nine eight\") ==\
    \ \"zero four five seven eight nine\");\n    assert(candidate(\"six five four\
    \ three two one zero\") == \"zero one two three four five six\");\n}\nvoid main(){}"
  status: SyntaxError
  stderr: '/tmp/tmp_zvn61ob.d(85): Error: found `unittest` when expecting `,`

    /tmp/tmp_zvn61ob.d(95): Error: found `void` when expecting `,`

    /tmp/tmp_zvn61ob.d(95): Error: found `{` when expecting `,`

    /tmp/tmp_zvn61ob.d(95): Error: expression expected, not `}`

    /tmp/tmp_zvn61ob.d(95): Error: found `End of File` when expecting `,`

    /tmp/tmp_zvn61ob.d(95): Error: found `End of File` when expecting `]`

    /tmp/tmp_zvn61ob.d(95): Error: found `End of File` when expecting `;` following
    statement

    /tmp/tmp_zvn61ob.d(95): Error: found `End of File` when expecting `}` following
    compound statement

    /tmp/tmp_zvn61ob.d(95): Error: found `End of File` when expecting `}` following
    compound statement

    /tmp/tmp_zvn61ob.d(95): Error: found `End of File` when expecting `}` following
    compound statement

    Failed: ["dmd", "-unittest", "-v", "-o-", "/tmp/tmp_zvn61ob.d", "-I/tmp"]

    '
  stdout: ''
  timestamp: 1660163090
- exit_code: 1
  program: "import std.typecons;\nimport std.math;\n/*\n Input is a space-delimited\
    \ string of numberals from 'zero' to 'nine'.\n    Valid choices are 'zero', 'one',\
    \ 'two', 'three', 'four', 'five', 'six', 'seven', 'eight' and 'nine'.\n    Return\
    \ the string with numbers sorted from smallest to largest\n    >>> sort_numbers(\"\
    three one five\")\n    \"one three five\"\n    \n*/\nstring sort_numbers(string\
    \ numbers) \n{\n    string[] nums = numbers.split;\n    int[] nums_int = nums.map!(a\
    \ => to!int(a)).array;\n    nums_int.sort;\n    return nums_int.map!(a => to!string(a)).join(\"\
    \ \");\n}\nunittest\n{\n    alias candidate = sort_numbers;\n\n    assert(candidate(\"\
    \") == \"\");\n    assert(candidate(\"three\") == \"three\");\n    assert(candidate(\"\
    three five nine\") == \"three five nine\");\n    assert(candidate(\"five zero\
    \ four seven nine eight\") == \"zero four five seven eight nine\");\n    assert(candidate(\"\
    six five four three two one zero\") == \"zero one two three four five six\");\n\
    }\nvoid main(){}"
  status: SyntaxError
  stderr: '/tmp/tmp_6hcpzri.d(13): Error: no property `split` for type `string`

    /tmp/tmp_6hcpzri.d(14): Error: no property `map` for type `string[]`

    /tmp/tmp_6hcpzri.d(15): Error: no property `sort` for type `int[]`

    /tmp/tmp_6hcpzri.d(16): Error: no property `map` for type `int[]`

    Failed: ["dmd", "-unittest", "-v", "-o-", "/tmp/tmp_6hcpzri.d", "-I/tmp"]

    '
  stdout: ''
  timestamp: 1660163090
- exit_code: 1
  program: "import std.typecons;\nimport std.math;\n/*\n Input is a space-delimited\
    \ string of numberals from 'zero' to 'nine'.\n    Valid choices are 'zero', 'one',\
    \ 'two', 'three', 'four', 'five', 'six', 'seven', 'eight' and 'nine'.\n    Return\
    \ the string with numbers sorted from smallest to largest\n    >>> sort_numbers(\"\
    three one five\")\n    \"one three five\"\n    \n*/\nstring sort_numbers(string\
    \ numbers) \n{\n    string[] nums = numbers.split(\" \");\n    int[] nums_int\
    \ = new int[nums.length];\n    foreach(i, num; nums)\n    {\n        nums_int[i]\
    \ = to!int(num);\n    }\n    sort(nums_int);\n    foreach(i, num; nums_int)\n\
    \    {\n        nums[i] = to!string(num);\n    }\n    return join(nums, \" \"\
    );\n}\nunittest\n{\n    alias candidate = sort_numbers;\n\n    assert(candidate(\"\
    \") == \"\");\n    assert(candidate(\"three\") == \"three\");\n    assert(candidate(\"\
    three five nine\") == \"three five nine\");\n    assert(candidate(\"five zero\
    \ four seven nine eight\") == \"zero four five seven eight nine\");\n    assert(candidate(\"\
    six five four three two one zero\") == \"zero one two three four five six\");\n\
    }\nvoid main(){}"
  status: SyntaxError
  stderr: '/tmp/tmp7zskc53q.d(13): Error: no property `split` for type `string`

    /tmp/tmp7zskc53q.d(17): Error: template instance `to!int` template `to` is not
    defined, did you mean No?

    /tmp/tmp7zskc53q.d(19): Error: undefined identifier `sort`, did you mean function
    `sqrt`?

    /tmp/tmp7zskc53q.d(22): Error: template instance `to!string` template `to` is
    not defined, did you mean No?

    /tmp/tmp7zskc53q.d(24): Error: undefined identifier `join`, did you mean function
    `main`?

    Failed: ["dmd", "-unittest", "-v", "-o-", "/tmp/tmp7zskc53q.d", "-I/tmp"]

    '
  stdout: ''
  timestamp: 1660163090
- exit_code: 1
  program: "import std.typecons;\nimport std.math;\n/*\n Input is a space-delimited\
    \ string of numberals from 'zero' to 'nine'.\n    Valid choices are 'zero', 'one',\
    \ 'two', 'three', 'four', 'five', 'six', 'seven', 'eight' and 'nine'.\n    Return\
    \ the string with numbers sorted from smallest to largest\n    >>> sort_numbers(\"\
    three one five\")\n    \"one three five\"\n    \n*/\nstring sort_numbers(string\
    \ numbers) \n{\n    string[] nums = numbers.split(\" \");\n    int[] nums2 = new\
    \ int[nums.length];\n    foreach(i, num; nums)\n    {\n        nums2[i] = to!int(num);\n\
    \    }\n    sort(nums2);\n    foreach(i, num; nums2)\n    {\n        nums[i] =\
    \ to!string(num);\n    }\n    return join(nums, \" \");\n}\nunittest\n{\n    alias\
    \ candidate = sort_numbers;\n\n    assert(candidate(\"\") == \"\");\n    assert(candidate(\"\
    three\") == \"three\");\n    assert(candidate(\"three five nine\") == \"three\
    \ five nine\");\n    assert(candidate(\"five zero four seven nine eight\") ==\
    \ \"zero four five seven eight nine\");\n    assert(candidate(\"six five four\
    \ three two one zero\") == \"zero one two three four five six\");\n}\nvoid main(){}"
  status: SyntaxError
  stderr: '/tmp/tmp2apzgoqs.d(13): Error: no property `split` for type `string`

    /tmp/tmp2apzgoqs.d(17): Error: template instance `to!int` template `to` is not
    defined, did you mean No?

    /tmp/tmp2apzgoqs.d(19): Error: undefined identifier `sort`, did you mean function
    `sqrt`?

    /tmp/tmp2apzgoqs.d(22): Error: template instance `to!string` template `to` is
    not defined, did you mean No?

    /tmp/tmp2apzgoqs.d(24): Error: undefined identifier `join`, did you mean function
    `main`?

    Failed: ["dmd", "-unittest", "-v", "-o-", "/tmp/tmp2apzgoqs.d", "-I/tmp"]

    '
  stdout: ''
  timestamp: 1660163091
- exit_code: 1
  program: "import std.typecons;\nimport std.math;\n/*\n Input is a space-delimited\
    \ string of numberals from 'zero' to 'nine'.\n    Valid choices are 'zero', 'one',\
    \ 'two', 'three', 'four', 'five', 'six', 'seven', 'eight' and 'nine'.\n    Return\
    \ the string with numbers sorted from smallest to largest\n    >>> sort_numbers(\"\
    three one five\")\n    \"one three five\"\n    \n*/\nstring sort_numbers(string\
    \ numbers) \n{\n    string[] nums = numbers.split(\" \");\n    int[] num_ints\
    \ = new int[nums.length];\n    foreach(i, num; nums)\n    {\n        num_ints[i]\
    \ = numeralToInt(num);\n    }\n    sort(num_ints);\n    foreach(i, num; num_ints)\n\
    \    {\n        nums[i] = intToNumeral(num);\n    }\n    return nums.join(\" \"\
    );\n}\nunittest\n{\n    alias candidate = sort_numbers;\n\n    assert(candidate(\"\
    \") == \"\");\n    assert(candidate(\"three\") == \"three\");\n    assert(candidate(\"\
    three five nine\") == \"three five nine\");\n    assert(candidate(\"five zero\
    \ four seven nine eight\") == \"zero four five seven eight nine\");\n    assert(candidate(\"\
    six five four three two one zero\") == \"zero one two three four five six\");\n\
    }\nvoid main(){}"
  status: SyntaxError
  stderr: '/tmp/tmp8oolm4rg.d(13): Error: no property `split` for type `string`

    /tmp/tmp8oolm4rg.d(17): Error: undefined identifier `numeralToInt`

    /tmp/tmp8oolm4rg.d(19): Error: undefined identifier `sort`, did you mean function
    `sqrt`?

    /tmp/tmp8oolm4rg.d(22): Error: undefined identifier `intToNumeral`

    /tmp/tmp8oolm4rg.d(24): Error: no property `join` for type `string[]`

    Failed: ["dmd", "-unittest", "-v", "-o-", "/tmp/tmp8oolm4rg.d", "-I/tmp"]

    '
  stdout: ''
  timestamp: 1660163091
- exit_code: 1
  program: "import std.typecons;\nimport std.math;\n/*\n Input is a space-delimited\
    \ string of numberals from 'zero' to 'nine'.\n    Valid choices are 'zero', 'one',\
    \ 'two', 'three', 'four', 'five', 'six', 'seven', 'eight' and 'nine'.\n    Return\
    \ the string with numbers sorted from smallest to largest\n    >>> sort_numbers(\"\
    three one five\")\n    \"one three five\"\n    \n*/\nstring sort_numbers(string\
    \ numbers) \n{\n    string[] nums = numbers.split(\" \");\n    int[] num_ints\
    \ = new int[nums.length];\n    foreach(i, num; nums)\n    {\n        num_ints[i]\
    \ = numeralToInt(num);\n    }\n    num_ints.sort;\n    foreach(i, num; num_ints)\n\
    \    {\n        nums[i] = intToNumeral(num);\n    }\n    return nums.join(\" \"\
    );\n}\nunittest\n{\n    alias candidate = sort_numbers;\n\n    assert(candidate(\"\
    \") == \"\");\n    assert(candidate(\"three\") == \"three\");\n    assert(candidate(\"\
    three five nine\") == \"three five nine\");\n    assert(candidate(\"five zero\
    \ four seven nine eight\") == \"zero four five seven eight nine\");\n    assert(candidate(\"\
    six five four three two one zero\") == \"zero one two three four five six\");\n\
    }\nvoid main(){}"
  status: SyntaxError
  stderr: '/tmp/tmpvk05oggv.d(13): Error: no property `split` for type `string`

    /tmp/tmpvk05oggv.d(17): Error: undefined identifier `numeralToInt`

    /tmp/tmpvk05oggv.d(19): Error: no property `sort` for type `int[]`

    /tmp/tmpvk05oggv.d(22): Error: undefined identifier `intToNumeral`

    /tmp/tmpvk05oggv.d(24): Error: no property `join` for type `string[]`

    Failed: ["dmd", "-unittest", "-v", "-o-", "/tmp/tmpvk05oggv.d", "-I/tmp"]

    '
  stdout: ''
  timestamp: 1660163091
- exit_code: 1
  program: "import std.typecons;\nimport std.math;\n/*\n Input is a space-delimited\
    \ string of numberals from 'zero' to 'nine'.\n    Valid choices are 'zero', 'one',\
    \ 'two', 'three', 'four', 'five', 'six', 'seven', 'eight' and 'nine'.\n    Return\
    \ the string with numbers sorted from smallest to largest\n    >>> sort_numbers(\"\
    three one five\")\n    \"one three five\"\n    \n*/\nstring sort_numbers(string\
    \ numbers) \n{\n    string[] nums = numbers.split(\" \");\n    int[] nums_int\
    \ = new int[nums.length];\n    foreach(i, num; nums)\n    {\n        switch(num)\n\
    \        {\n            case \"zero\":\n                nums_int[i] = 0;\n   \
    \             break;\n            case \"one\":\n                nums_int[i] =\
    \ 1;\n                break;\n            case \"two\":\n                nums_int[i]\
    \ = 2;\n                break;\n            case \"three\":\n                nums_int[i]\
    \ = 3;\n                break;\n            case \"four\":\n                nums_int[i]\
    \ = 4;\n                break;\n            case \"five\":\n                nums_int[i]\
    \ = 5;\n                break;\n            case \"six\":\n                nums_int[i]\
    \ = 6;\n                break;\n            case \"seven\":\n                nums_int[i]\
    \ = 7;\n                break;\n            case \"eight\":\n                nums_int[i]\
    \ = 8;\n                break;\n            case \"nine\":\n                nums_int[i]\
    \ = 9;\n                break;\n        }\n    }\n    nums_int.sort;\n    foreach(i,\
    \ num; nums_int)\n    {\n        switch(num)\n        {\n            case 0:\n\
    \                nums[i] = \"zero\";\n                break;\n            case\
    \ 1:\n                nums[i] = \"one\";\n                break;\n           \
    \ case 2:\n                nums[i] = \"two\";\n                break;\n      \
    \      case 3:\n                nums[i] = \"three\";\n                break;\n\
    \            case 4:\n                nums[i] = \"four\";\n                break;\n\
    \            case 5:\n                nums[i] = \"five\";\n                break;\n\
    \            case 6:\n                nums[i] = \"six\";\n                break;\n\
    \            case 7:\n                nums[i] = \"seven\";\n                break;\n\
    \            case 8:\n                nums[i] = \"eight\";\n                break;\n\
    \            case 9:\n                nums[i] = \"nine\nunittest\n{\n    alias\
    \ candidate = sort_numbers;\n\n    assert(candidate(\"\") == \"\");\n    assert(candidate(\"\
    three\") == \"three\");\n    assert(candidate(\"three five nine\") == \"three\
    \ five nine\");\n    assert(candidate(\"five zero four seven nine eight\") ==\
    \ \"zero four five seven eight nine\");\n    assert(candidate(\"six five four\
    \ three two one zero\") == \"zero one two three four five six\");\n}\nvoid main(){}"
  status: SyntaxError
  stderr: '/tmp/tmpc1u9yce3.d(89): Error: Implicit string concatenation is deprecated,
    use "nine\x0aunittest\x0a{\x0a    alias candidate = sort_numbers;\x0a\x0a    assert(candidate("
    ~ ") == " instead

    /tmp/tmpc1u9yce3.d(89): Error: Implicit string concatenation is deprecated, use
    ") == " ~ ");\x0a    assert(candidate(" instead

    /tmp/tmpc1u9yce3.d(90): Error: found `three` when expecting `;` following statement

    /tmp/tmpc1u9yce3.d(90): Error: found `three` when expecting `;` following statement

    /tmp/tmpc1u9yce3.d(91): Error: found `three` when expecting `;` following statement

    /tmp/tmpc1u9yce3.d(91): Error: found `nine` when expecting `;` following statement

    /tmp/tmpc1u9yce3.d(91): Error: found `three` when expecting `;` following statement

    /tmp/tmpc1u9yce3.d(91): Error: found `nine` when expecting `;` following statement

    /tmp/tmpc1u9yce3.d(92): Error: found `five` when expecting `;` following statement

    /tmp/tmpc1u9yce3.d(92): Error: found `four` when expecting `;` following statement

    /tmp/tmpc1u9yce3.d(92): Error: found `'
  stdout: ''
  timestamp: 1660163090
- exit_code: 1
  program: "import std.typecons;\nimport std.math;\n/*\n Input is a space-delimited\
    \ string of numberals from 'zero' to 'nine'.\n    Valid choices are 'zero', 'one',\
    \ 'two', 'three', 'four', 'five', 'six', 'seven', 'eight' and 'nine'.\n    Return\
    \ the string with numbers sorted from smallest to largest\n    >>> sort_numbers(\"\
    three one five\")\n    \"one three five\"\n    \n*/\nstring sort_numbers(string\
    \ numbers) \n{\n    string[] nums = numbers.split(\" \");\n    int[] nums_int\
    \ = new int[nums.length];\n    foreach(i, num; nums)\n    {\n        nums_int[i]\
    \ = num_to_int(num);\n    }\n    sort(nums_int);\n    foreach(i, num; nums_int)\n\
    \    {\n        nums[i] = int_to_num(num);\n    }\n    return nums.join(\" \"\
    );\n}\nunittest\n{\n    alias candidate = sort_numbers;\n\n    assert(candidate(\"\
    \") == \"\");\n    assert(candidate(\"three\") == \"three\");\n    assert(candidate(\"\
    three five nine\") == \"three five nine\");\n    assert(candidate(\"five zero\
    \ four seven nine eight\") == \"zero four five seven eight nine\");\n    assert(candidate(\"\
    six five four three two one zero\") == \"zero one two three four five six\");\n\
    }\nvoid main(){}"
  status: SyntaxError
  stderr: '/tmp/tmpuzh2jjb4.d(13): Error: no property `split` for type `string`

    /tmp/tmpuzh2jjb4.d(17): Error: undefined identifier `num_to_int`

    /tmp/tmpuzh2jjb4.d(19): Error: undefined identifier `sort`, did you mean function
    `sqrt`?

    /tmp/tmpuzh2jjb4.d(22): Error: undefined identifier `int_to_num`

    /tmp/tmpuzh2jjb4.d(24): Error: no property `join` for type `string[]`

    Failed: ["dmd", "-unittest", "-v", "-o-", "/tmp/tmpuzh2jjb4.d", "-I/tmp"]

    '
  stdout: ''
  timestamp: 1660163090
- exit_code: 1
  program: "import std.typecons;\nimport std.math;\n/*\n Input is a space-delimited\
    \ string of numberals from 'zero' to 'nine'.\n    Valid choices are 'zero', 'one',\
    \ 'two', 'three', 'four', 'five', 'six', 'seven', 'eight' and 'nine'.\n    Return\
    \ the string with numbers sorted from smallest to largest\n    >>> sort_numbers(\"\
    three one five\")\n    \"one three five\"\n    \n*/\nstring sort_numbers(string\
    \ numbers) \n{\n    string[] nums = numbers.split(\" \");\n    int[] nums_int\
    \ = new int[nums.length];\n    for (int i = 0; i < nums.length; i++)\n    {\n\
    \        nums_int[i] = to!int(nums[i]);\n    }\n    sort(nums_int);\n    string\
    \ result = \"\";\n    foreach (int i; nums_int)\n    {\n        result ~= to!string(i)\
    \ ~ \" \";\n    }\n    return result;\n}\nunittest\n{\n    alias candidate = sort_numbers;\n\
    \n    assert(candidate(\"\") == \"\");\n    assert(candidate(\"three\") == \"\
    three\");\n    assert(candidate(\"three five nine\") == \"three five nine\");\n\
    \    assert(candidate(\"five zero four seven nine eight\") == \"zero four five\
    \ seven eight nine\");\n    assert(candidate(\"six five four three two one zero\"\
    ) == \"zero one two three four five six\");\n}\nvoid main(){}"
  status: SyntaxError
  stderr: '/tmp/tmp5_14cl6_.d(13): Error: no property `split` for type `string`

    /tmp/tmp5_14cl6_.d(17): Error: template instance `to!int` template `to` is not
    defined, did you mean No?

    /tmp/tmp5_14cl6_.d(19): Error: undefined identifier `sort`, did you mean function
    `sqrt`?

    /tmp/tmp5_14cl6_.d(23): Error: template instance `to!string` template `to` is
    not defined, did you mean No?

    Failed: ["dmd", "-unittest", "-v", "-o-", "/tmp/tmp5_14cl6_.d", "-I/tmp"]

    '
  stdout: ''
  timestamp: 1660163090
- exit_code: 1
  program: "import std.typecons;\nimport std.math;\n/*\n Input is a space-delimited\
    \ string of numberals from 'zero' to 'nine'.\n    Valid choices are 'zero', 'one',\
    \ 'two', 'three', 'four', 'five', 'six', 'seven', 'eight' and 'nine'.\n    Return\
    \ the string with numbers sorted from smallest to largest\n    >>> sort_numbers(\"\
    three one five\")\n    \"one three five\"\n    \n*/\nstring sort_numbers(string\
    \ numbers) \n{\n    string[] nums = numbers.split(\" \");\n    int[] nums_int\
    \ = new int[nums.length];\n    for (int i = 0; i < nums.length; i++)\n    {\n\
    \        nums_int[i] = to!int(nums[i]);\n    }\n    sort(nums_int);\n    string\
    \ result = \"\";\n    foreach (int num; nums_int)\n    {\n        result ~= to!string(num)\
    \ ~ \" \";\n    }\n    return result.trimRight();\n}\nunittest\n{\n    alias candidate\
    \ = sort_numbers;\n\n    assert(candidate(\"\") == \"\");\n    assert(candidate(\"\
    three\") == \"three\");\n    assert(candidate(\"three five nine\") == \"three\
    \ five nine\");\n    assert(candidate(\"five zero four seven nine eight\") ==\
    \ \"zero four five seven eight nine\");\n    assert(candidate(\"six five four\
    \ three two one zero\") == \"zero one two three four five six\");\n}\nvoid main(){}"
  status: SyntaxError
  stderr: '/tmp/tmpwjaqedem.d(13): Error: no property `split` for type `string`

    /tmp/tmpwjaqedem.d(17): Error: template instance `to!int` template `to` is not
    defined, did you mean No?

    /tmp/tmpwjaqedem.d(19): Error: undefined identifier `sort`, did you mean function
    `sqrt`?

    /tmp/tmpwjaqedem.d(23): Error: template instance `to!string` template `to` is
    not defined, did you mean No?

    /tmp/tmpwjaqedem.d(25): Error: no property `trimRight` for type `string`

    Failed: ["dmd", "-unittest", "-v", "-o-", "/tmp/tmpwjaqedem.d", "-I/tmp"]

    '
  stdout: ''
  timestamp: 1660163091
- exit_code: 1
  program: "import std.typecons;\nimport std.math;\n/*\n Input is a space-delimited\
    \ string of numberals from 'zero' to 'nine'.\n    Valid choices are 'zero', 'one',\
    \ 'two', 'three', 'four', 'five', 'six', 'seven', 'eight' and 'nine'.\n    Return\
    \ the string with numbers sorted from smallest to largest\n    >>> sort_numbers(\"\
    three one five\")\n    \"one three five\"\n    \n*/\nstring sort_numbers(string\
    \ numbers) \n{\n    string[] nums = numbers.split(\" \");\n    int[] nums_int\
    \ = new int[nums.length];\n    foreach(int i, string num; nums)\n    {\n     \
    \   nums_int[i] = to!int(num);\n    }\n    sort(nums_int);\n    string result\
    \ = \"\";\n    foreach(int num; nums_int)\n    {\n        result ~= to!string(num)\
    \ ~ \" \";\n    }\n    return result.stripRight();\n}\nunittest\n{\n    alias\
    \ candidate = sort_numbers;\n\n    assert(candidate(\"\") == \"\");\n    assert(candidate(\"\
    three\") == \"three\");\n    assert(candidate(\"three five nine\") == \"three\
    \ five nine\");\n    assert(candidate(\"five zero four seven nine eight\") ==\
    \ \"zero four five seven eight nine\");\n    assert(candidate(\"six five four\
    \ three two one zero\") == \"zero one two three four five six\");\n}\nvoid main(){}"
  status: SyntaxError
  stderr: '/tmp/tmpnnafl3tn.d(13): Error: no property `split` for type `string`

    /tmp/tmpnnafl3tn.d(17): Error: template instance `to!int` template `to` is not
    defined, did you mean No?

    /tmp/tmpnnafl3tn.d(19): Error: undefined identifier `sort`, did you mean function
    `sqrt`?

    /tmp/tmpnnafl3tn.d(23): Error: template instance `to!string` template `to` is
    not defined, did you mean No?

    /tmp/tmpnnafl3tn.d(25): Error: no property `stripRight` for type `string`

    Failed: ["dmd", "-unittest", "-v", "-o-", "/tmp/tmpnnafl3tn.d", "-I/tmp"]

    '
  stdout: ''
  timestamp: 1660163091
- exit_code: 1
  program: "import std.typecons;\nimport std.math;\n/*\n Input is a space-delimited\
    \ string of numberals from 'zero' to 'nine'.\n    Valid choices are 'zero', 'one',\
    \ 'two', 'three', 'four', 'five', 'six', 'seven', 'eight' and 'nine'.\n    Return\
    \ the string with numbers sorted from smallest to largest\n    >>> sort_numbers(\"\
    three one five\")\n    \"one three five\"\n    \n*/\nstring sort_numbers(string\
    \ numbers) \n{\n    string[] nums = numbers.split(\" \");\n    int[] nums_int\
    \ = new int[nums.length];\n    foreach(i, n; nums)\n    {\n        nums_int[i]\
    \ = to!int(n);\n    }\n    sort(nums_int);\n    foreach(i, n; nums_int)\n    {\n\
    \        nums[i] = to!string(n);\n    }\n    return join(nums, \" \");\n}\nunittest\n\
    {\n    alias candidate = sort_numbers;\n\n    assert(candidate(\"\") == \"\");\n\
    \    assert(candidate(\"three\") == \"three\");\n    assert(candidate(\"three\
    \ five nine\") == \"three five nine\");\n    assert(candidate(\"five zero four\
    \ seven nine eight\") == \"zero four five seven eight nine\");\n    assert(candidate(\"\
    six five four three two one zero\") == \"zero one two three four five six\");\n\
    }\nvoid main(){}"
  status: SyntaxError
  stderr: '/tmp/tmp_nrc46cs.d(13): Error: no property `split` for type `string`

    /tmp/tmp_nrc46cs.d(17): Error: template instance `to!int` template `to` is not
    defined, did you mean No?

    /tmp/tmp_nrc46cs.d(19): Error: undefined identifier `sort`, did you mean function
    `sqrt`?

    /tmp/tmp_nrc46cs.d(22): Error: template instance `to!string` template `to` is
    not defined, did you mean No?

    /tmp/tmp_nrc46cs.d(24): Error: undefined identifier `join`, did you mean function
    `main`?

    Failed: ["dmd", "-unittest", "-v", "-o-", "/tmp/tmp_nrc46cs.d", "-I/tmp"]

    '
  stdout: ''
  timestamp: 1660163090
- exit_code: 1
  program: "import std.typecons;\nimport std.math;\n/*\n Input is a space-delimited\
    \ string of numberals from 'zero' to 'nine'.\n    Valid choices are 'zero', 'one',\
    \ 'two', 'three', 'four', 'five', 'six', 'seven', 'eight' and 'nine'.\n    Return\
    \ the string with numbers sorted from smallest to largest\n    >>> sort_numbers(\"\
    three one five\")\n    \"one three five\"\n    \n*/\nstring sort_numbers(string\
    \ numbers) \n{\n    string[] nums = numbers.split(\" \");\n    string[] nums_sorted\
    \ = nums.dup;\n    nums_sorted.sort;\n    string result = \"\";\n    foreach(string\
    \ num; nums_sorted)\n    {\n        result ~= num ~ \" \";\n    }\n    return\
    \ result.stripRight;\n}\nunittest\n{\n    alias candidate = sort_numbers;\n\n\
    \    assert(candidate(\"\") == \"\");\n    assert(candidate(\"three\") == \"three\"\
    );\n    assert(candidate(\"three five nine\") == \"three five nine\");\n    assert(candidate(\"\
    five zero four seven nine eight\") == \"zero four five seven eight nine\");\n\
    \    assert(candidate(\"six five four three two one zero\") == \"zero one two\
    \ three four five six\");\n}\nvoid main(){}"
  status: SyntaxError
  stderr: '/tmp/tmp9ntca_v9.d(13): Error: no property `split` for type `string`

    /tmp/tmp9ntca_v9.d(15): Error: no property `sort` for type `string[]`

    /tmp/tmp9ntca_v9.d(21): Error: no property `stripRight` for type `string`

    Failed: ["dmd", "-unittest", "-v", "-o-", "/tmp/tmp9ntca_v9.d", "-I/tmp"]

    '
  stdout: ''
  timestamp: 1660163090
- exit_code: 1
  program: "import std.typecons;\nimport std.math;\n/*\n Input is a space-delimited\
    \ string of numberals from 'zero' to 'nine'.\n    Valid choices are 'zero', 'one',\
    \ 'two', 'three', 'four', 'five', 'six', 'seven', 'eight' and 'nine'.\n    Return\
    \ the string with numbers sorted from smallest to largest\n    >>> sort_numbers(\"\
    three one five\")\n    \"one three five\"\n    \n*/\nstring sort_numbers(string\
    \ numbers) \n{\n    string[] nums = numbers.split(\" \");\n    int[] nums_int\
    \ = new int[nums.length];\n    foreach(i, num; nums)\n    {\n        nums_int[i]\
    \ = to!int(num);\n    }\n    sort(nums_int);\n    string result = \"\";\n    foreach(i,\
    \ num; nums_int)\n    {\n        result ~= num ~ \" \";\n    }\n    return result.trimRight();\n\
    }\nunittest\n{\n    alias candidate = sort_numbers;\n\n    assert(candidate(\"\
    \") == \"\");\n    assert(candidate(\"three\") == \"three\");\n    assert(candidate(\"\
    three five nine\") == \"three five nine\");\n    assert(candidate(\"five zero\
    \ four seven nine eight\") == \"zero four five seven eight nine\");\n    assert(candidate(\"\
    six five four three two one zero\") == \"zero one two three four five six\");\n\
    }\nvoid main(){}"
  status: SyntaxError
  stderr: '/tmp/tmpwh8t3y1f.d(13): Error: no property `split` for type `string`

    /tmp/tmpwh8t3y1f.d(17): Error: template instance `to!int` template `to` is not
    defined, did you mean No?

    /tmp/tmpwh8t3y1f.d(19): Error: undefined identifier `sort`, did you mean function
    `sqrt`?

    /tmp/tmpwh8t3y1f.d(23): Error: incompatible types for `(num) ~ (" ")`: `int` and
    `string`

    /tmp/tmpwh8t3y1f.d(25): Error: no property `trimRight` for type `string`

    Failed: ["dmd", "-unittest", "-v", "-o-", "/tmp/tmpwh8t3y1f.d", "-I/tmp"]

    '
  stdout: ''
  timestamp: 1660163091
- exit_code: 1
  program: "import std.typecons;\nimport std.math;\n/*\n Input is a space-delimited\
    \ string of numberals from 'zero' to 'nine'.\n    Valid choices are 'zero', 'one',\
    \ 'two', 'three', 'four', 'five', 'six', 'seven', 'eight' and 'nine'.\n    Return\
    \ the string with numbers sorted from smallest to largest\n    >>> sort_numbers(\"\
    three one five\")\n    \"one three five\"\n    \n*/\nstring sort_numbers(string\
    \ numbers) \n{\n    string[] nums = numbers.split(\" \");\n    string[] nums2\
    \ = new string[nums.length];\n    int[] nums3 = new int[nums.length];\n    int[]\
    \ nums4 = new int[nums.length];\n    int[] nums5 = new int[nums.length];\n   \
    \ int i = 0;\n    foreach(string num; nums)\n    {\n        nums2[i] = num;\n\
    \        i++;\n    }\n    i = 0;\n    foreach(string num; nums2)\n    {\n    \
    \    switch(num)\n        {\n            case \"zero\":\n                nums3[i]\
    \ = 0;\n                break;\n            case \"one\":\n                nums3[i]\
    \ = 1;\n                break;\n            case \"two\":\n                nums3[i]\
    \ = 2;\n                break;\n            case \"three\":\n                nums3[i]\
    \ = 3;\n                break;\n            case \"four\":\n                nums3[i]\
    \ = 4;\n                break;\n            case \"five\":\n                nums3[i]\
    \ = 5;\n                break;\n            case \"six\":\n                nums3[i]\
    \ = 6;\n                break;\n            case \"seven\":\n                nums3[i]\
    \ = 7;\n                break;\n            case \"eight\":\n                nums3[i]\
    \ = 8;\n                break;\n            case \"nine\":\n                nums3[i]\
    \ = 9;\n                break;\n        }\n        i++;\n    }\n    i = 0;\n \
    \   foreach(int num; nums3)\n    {\n        nums4[i] = num;\n        i++;\n  \
    \  }\n    nums5 = nums4.sort();\n    i = 0;\n    foreach(int num; nums5)\n   \
    \ {\n        switch(num)\n        {\n            case 0:\n                nums2[i]\
    \ = \"zero\";\n                break;\n            case 1:\n                nums2[i]\
    \ = \"one\";\n                break;\n            case 2:\n                nums2[i]\
    \ = \"two\";\n                break;\nunittest\n{\n    alias candidate = sort_numbers;\n\
    \n    assert(candidate(\"\") == \"\");\n    assert(candidate(\"three\") == \"\
    three\");\n    assert(candidate(\"three five nine\") == \"three five nine\");\n\
    \    assert(candidate(\"five zero four seven nine eight\") == \"zero four five\
    \ seven eight nine\");\n    assert(candidate(\"six five four three two one zero\"\
    ) == \"zero one two three four five six\");\n}\nvoid main(){}"
  status: SyntaxError
  stderr: '/tmp/tmp8xerd2ty.d(83): Error: found `unittest` instead of statement

    /tmp/tmp8xerd2ty.d(93): Error: found `End of File` when expecting `}` following
    compound statement

    /tmp/tmp8xerd2ty.d(93): Error: found `End of File` when expecting `}` following
    compound statement

    Failed: ["dmd", "-unittest", "-v", "-o-", "/tmp/tmp8xerd2ty.d", "-I/tmp"]

    '
  stdout: ''
  timestamp: 1660163091
- exit_code: 1
  program: "import std.typecons;\nimport std.math;\n/*\n Input is a space-delimited\
    \ string of numberals from 'zero' to 'nine'.\n    Valid choices are 'zero', 'one',\
    \ 'two', 'three', 'four', 'five', 'six', 'seven', 'eight' and 'nine'.\n    Return\
    \ the string with numbers sorted from smallest to largest\n    >>> sort_numbers(\"\
    three one five\")\n    \"one three five\"\n    \n*/\nstring sort_numbers(string\
    \ numbers) \n{\n    int[] nums;\n    foreach(n; numbers.split())\n    {\n    \
    \    switch(n)\n        {\n            case \"zero\": nums ~= 0; break;\n    \
    \        case \"one\": nums ~= 1; break;\n            case \"two\": nums ~= 2;\
    \ break;\n            case \"three\": nums ~= 3; break;\n            case \"four\"\
    : nums ~= 4; break;\n            case \"five\": nums ~= 5; break;\n          \
    \  case \"six\": nums ~= 6; break;\n            case \"seven\": nums ~= 7; break;\n\
    \            case \"eight\": nums ~= 8; break;\n            case \"nine\": nums\
    \ ~= 9; break;\n        }\n    }\n    nums.sort();\n    string result;\n    foreach(n;\
    \ nums)\n    {\n        switch(n)\n        {\n            case 0: result ~= \"\
    zero \"; break;\n            case 1: result ~= \"one \"; break;\n            case\
    \ 2: result ~= \"two \"; break;\n            case 3: result ~= \"three \"; break;\n\
    \            case 4: result ~= \"four \"; break;\n            case 5: result ~=\
    \ \"five \"; break;\n            case 6: result ~= \"six \"; break;\n        \
    \    case 7: result ~= \"seven \"; break;\n            case 8: result ~= \"eight\
    \ \"; break;\n            case 9: result ~= \"nine \"; break;\n        }\n   \
    \ }\n    return result.stripRight;\n}\nunittest\n{\n    alias candidate = sort_numbers;\n\
    \n    assert(candidate(\"\") == \"\");\n    assert(candidate(\"three\") == \"\
    three\");\n    assert(candidate(\"three five nine\") == \"three five nine\");\n\
    \    assert(candidate(\"five zero four seven nine eight\") == \"zero four five\
    \ seven eight nine\");\n    assert(candidate(\"six five four three two one zero\"\
    ) == \"zero one two three four five six\");\n}\nvoid main(){}"
  status: SyntaxError
  stderr: '/tmp/tmp_w1i7bgl.d(14): Error: no property `split` for type `string`

    /tmp/tmp_w1i7bgl.d(30): Error: no property `sort` for type `int[]`

    /tmp/tmp_w1i7bgl.d(34): Error: `switch` statement without a `default`; use `final
    switch` or add `default: assert(0);` or add `default: break;`

    /tmp/tmp_w1i7bgl.d(48): Error: no property `stripRight` for type `string`

    Failed: ["dmd", "-unittest", "-v", "-o-", "/tmp/tmp_w1i7bgl.d", "-I/tmp"]

    '
  stdout: ''
  timestamp: 1660163091
- exit_code: 1
  program: "import std.typecons;\nimport std.math;\n/*\n Input is a space-delimited\
    \ string of numberals from 'zero' to 'nine'.\n    Valid choices are 'zero', 'one',\
    \ 'two', 'three', 'four', 'five', 'six', 'seven', 'eight' and 'nine'.\n    Return\
    \ the string with numbers sorted from smallest to largest\n    >>> sort_numbers(\"\
    three one five\")\n    \"one three five\"\n    \n*/\nstring sort_numbers(string\
    \ numbers) \n{\n    auto nums = numbers.split(\" \");\n    nums.sort!((a, b) =>\
    \ to!int(a) < to!int(b));\n    return nums.join(\" \");\n}\nunittest\n{\n    alias\
    \ candidate = sort_numbers;\n\n    assert(candidate(\"\") == \"\");\n    assert(candidate(\"\
    three\") == \"three\");\n    assert(candidate(\"three five nine\") == \"three\
    \ five nine\");\n    assert(candidate(\"five zero four seven nine eight\") ==\
    \ \"zero four five seven eight nine\");\n    assert(candidate(\"six five four\
    \ three two one zero\") == \"zero one two three four five six\");\n}\nvoid main(){}"
  status: SyntaxError
  stderr: '/tmp/tmpdb01nip2.d(13): Error: no property `split` for type `string`

    Failed: ["dmd", "-unittest", "-v", "-o-", "/tmp/tmpdb01nip2.d", "-I/tmp"]

    '
  stdout: ''
  timestamp: 1660163091
- exit_code: 1
  program: "import std.typecons;\nimport std.math;\n/*\n Input is a space-delimited\
    \ string of numberals from 'zero' to 'nine'.\n    Valid choices are 'zero', 'one',\
    \ 'two', 'three', 'four', 'five', 'six', 'seven', 'eight' and 'nine'.\n    Return\
    \ the string with numbers sorted from smallest to largest\n    >>> sort_numbers(\"\
    three one five\")\n    \"one three five\"\n    \n*/\nstring sort_numbers(string\
    \ numbers) \n{\n    string[] nums = numbers.split(\" \");\n    string[] nums_sorted\
    \ = nums.dup;\n    nums_sorted.sort;\n    string result = \"\";\n    foreach(string\
    \ num; nums_sorted)\n    {\n        result ~= num ~ \" \";\n    }\n    return\
    \ result.stripRight;\n}\nunittest\n{\n    alias candidate = sort_numbers;\n\n\
    \    assert(candidate(\"\") == \"\");\n    assert(candidate(\"three\") == \"three\"\
    );\n    assert(candidate(\"three five nine\") == \"three five nine\");\n    assert(candidate(\"\
    five zero four seven nine eight\") == \"zero four five seven eight nine\");\n\
    \    assert(candidate(\"six five four three two one zero\") == \"zero one two\
    \ three four five six\");\n}\nvoid main(){}"
  status: SyntaxError
  stderr: '/tmp/tmp9ntca_v9.d(13): Error: no property `split` for type `string`

    /tmp/tmp9ntca_v9.d(15): Error: no property `sort` for type `string[]`

    /tmp/tmp9ntca_v9.d(21): Error: no property `stripRight` for type `string`

    Failed: ["dmd", "-unittest", "-v", "-o-", "/tmp/tmp9ntca_v9.d", "-I/tmp"]

    '
  stdout: ''
  timestamp: 1660163090
- exit_code: 1
  program: "import std.typecons;\nimport std.math;\n/*\n Input is a space-delimited\
    \ string of numberals from 'zero' to 'nine'.\n    Valid choices are 'zero', 'one',\
    \ 'two', 'three', 'four', 'five', 'six', 'seven', 'eight' and 'nine'.\n    Return\
    \ the string with numbers sorted from smallest to largest\n    >>> sort_numbers(\"\
    three one five\")\n    \"one three five\"\n    \n*/\nstring sort_numbers(string\
    \ numbers) \n{\n    string[] nums = numbers.split(\" \");\n    int[] nums_int\
    \ = new int[nums.length];\n    foreach(int i, string num; nums)\n    {\n     \
    \   nums_int[i] = to!int(num);\n    }\n    sort(nums_int);\n    foreach(int i,\
    \ int num; nums_int)\n    {\n        nums[i] = to!string(num);\n    }\n    return\
    \ join(nums, \" \");\n}\nunittest\n{\n    alias candidate = sort_numbers;\n\n\
    \    assert(candidate(\"\") == \"\");\n    assert(candidate(\"three\") == \"three\"\
    );\n    assert(candidate(\"three five nine\") == \"three five nine\");\n    assert(candidate(\"\
    five zero four seven nine eight\") == \"zero four five seven eight nine\");\n\
    \    assert(candidate(\"six five four three two one zero\") == \"zero one two\
    \ three four five six\");\n}\nvoid main(){}"
  status: SyntaxError
  stderr: '/tmp/tmpci0dh84r.d(13): Error: no property `split` for type `string`

    /tmp/tmpci0dh84r.d(17): Error: template instance `to!int` template `to` is not
    defined, did you mean No?

    /tmp/tmpci0dh84r.d(19): Error: undefined identifier `sort`, did you mean function
    `sqrt`?

    /tmp/tmpci0dh84r.d(22): Error: template instance `to!string` template `to` is
    not defined, did you mean No?

    /tmp/tmpci0dh84r.d(24): Error: undefined identifier `join`, did you mean function
    `main`?

    Failed: ["dmd", "-unittest", "-v", "-o-", "/tmp/tmpci0dh84r.d", "-I/tmp"]

    '
  stdout: ''
  timestamp: 1660163090
- exit_code: 1
  program: "import std.typecons;\nimport std.math;\n/*\n Input is a space-delimited\
    \ string of numberals from 'zero' to 'nine'.\n    Valid choices are 'zero', 'one',\
    \ 'two', 'three', 'four', 'five', 'six', 'seven', 'eight' and 'nine'.\n    Return\
    \ the string with numbers sorted from smallest to largest\n    >>> sort_numbers(\"\
    three one five\")\n    \"one three five\"\n    \n*/\nstring sort_numbers(string\
    \ numbers) \n{\n    string[] nums = numbers.split(\" \");\n    int[] nums_int\
    \ = new int[nums.length];\n    foreach(int i, string num; nums)\n    {\n     \
    \   switch(num)\n        {\n            case \"zero\":\n                nums_int[i]\
    \ = 0;\n                break;\n            case \"one\":\n                nums_int[i]\
    \ = 1;\n                break;\n            case \"two\":\n                nums_int[i]\
    \ = 2;\n                break;\n            case \"three\":\n                nums_int[i]\
    \ = 3;\n                break;\n            case \"four\":\n                nums_int[i]\
    \ = 4;\n                break;\n            case \"five\":\n                nums_int[i]\
    \ = 5;\n                break;\n            case \"six\":\n                nums_int[i]\
    \ = 6;\n                break;\n            case \"seven\":\n                nums_int[i]\
    \ = 7;\n                break;\n            case \"eight\":\n                nums_int[i]\
    \ = 8;\n                break;\n            case \"nine\":\n                nums_int[i]\
    \ = 9;\n                break;\n        }\n    }\n    nums_int.sort();\n    foreach(int\
    \ i, int num; nums_int)\n    {\n        switch(num)\n        {\n            case\
    \ 0:\n                nums[i] = \"zero\";\n                break;\n          \
    \  case 1:\n                nums[i] = \"one\";\n                break;\n     \
    \       case 2:\n                nums[i] = \"two\";\n                break;\n\
    \            case 3:\n                nums[i] = \"three\";\n                break;\n\
    \            case 4:\n                nums[i] = \"four\";\n                break;\n\
    \            case 5:\n                nums[i] = \"five\";\n                break;\n\
    \            case 6:\n                nums[i] = \"six\";\n                break;\n\
    \            case 7:\n                nums[i] = \"seven\";\n                break;\n\
    \            case 8:\n                nums[i] = \"eight\";\n                break;\n\
    \            case 9:\n                nums[i\nunittest\n{\n    alias candidate\
    \ = sort_numbers;\n\n    assert(candidate(\"\") == \"\");\n    assert(candidate(\"\
    three\") == \"three\");\n    assert(candidate(\"three five nine\") == \"three\
    \ five nine\");\n    assert(candidate(\"five zero four seven nine eight\") ==\
    \ \"zero four five seven eight nine\");\n    assert(candidate(\"six five four\
    \ three two one zero\") == \"zero one two three four five six\");\n}\nvoid main(){}"
  status: SyntaxError
  stderr: '/tmp/tmp_zvn61ob.d(85): Error: found `unittest` when expecting `,`

    /tmp/tmp_zvn61ob.d(95): Error: found `void` when expecting `,`

    /tmp/tmp_zvn61ob.d(95): Error: found `{` when expecting `,`

    /tmp/tmp_zvn61ob.d(95): Error: expression expected, not `}`

    /tmp/tmp_zvn61ob.d(95): Error: found `End of File` when expecting `,`

    /tmp/tmp_zvn61ob.d(95): Error: found `End of File` when expecting `]`

    /tmp/tmp_zvn61ob.d(95): Error: found `End of File` when expecting `;` following
    statement

    /tmp/tmp_zvn61ob.d(95): Error: found `End of File` when expecting `}` following
    compound statement

    /tmp/tmp_zvn61ob.d(95): Error: found `End of File` when expecting `}` following
    compound statement

    /tmp/tmp_zvn61ob.d(95): Error: found `End of File` when expecting `}` following
    compound statement

    Failed: ["dmd", "-unittest", "-v", "-o-", "/tmp/tmp_zvn61ob.d", "-I/tmp"]

    '
  stdout: ''
  timestamp: 1660163090
- exit_code: 1
  program: "import std.typecons;\nimport std.math;\n/*\n Input is a space-delimited\
    \ string of numberals from 'zero' to 'nine'.\n    Valid choices are 'zero', 'one',\
    \ 'two', 'three', 'four', 'five', 'six', 'seven', 'eight' and 'nine'.\n    Return\
    \ the string with numbers sorted from smallest to largest\n    >>> sort_numbers(\"\
    three one five\")\n    \"one three five\"\n    \n*/\nstring sort_numbers(string\
    \ numbers) \n{\n    string[] nums = numbers.split(\" \");\n    int[] nums_int\
    \ = new int[nums.length];\n    for (int i = 0; i < nums.length; i++)\n    {\n\
    \        nums_int[i] = to!int(nums[i]);\n    }\n    sort(nums_int);\n    string\
    \ result = \"\";\n    foreach (int i; nums_int)\n    {\n        result ~= to!string(i)\
    \ ~ \" \";\n    }\n    return result.stripRight();\n}\nunittest\n{\n    alias\
    \ candidate = sort_numbers;\n\n    assert(candidate(\"\") == \"\");\n    assert(candidate(\"\
    three\") == \"three\");\n    assert(candidate(\"three five nine\") == \"three\
    \ five nine\");\n    assert(candidate(\"five zero four seven nine eight\") ==\
    \ \"zero four five seven eight nine\");\n    assert(candidate(\"six five four\
    \ three two one zero\") == \"zero one two three four five six\");\n}\nvoid main(){}"
  status: SyntaxError
  stderr: '/tmp/tmp_fnqcpbx.d(13): Error: no property `split` for type `string`

    /tmp/tmp_fnqcpbx.d(17): Error: template instance `to!int` template `to` is not
    defined, did you mean No?

    /tmp/tmp_fnqcpbx.d(19): Error: undefined identifier `sort`, did you mean function
    `sqrt`?

    /tmp/tmp_fnqcpbx.d(23): Error: template instance `to!string` template `to` is
    not defined, did you mean No?

    /tmp/tmp_fnqcpbx.d(25): Error: no property `stripRight` for type `string`

    Failed: ["dmd", "-unittest", "-v", "-o-", "/tmp/tmp_fnqcpbx.d", "-I/tmp"]

    '
  stdout: ''
  timestamp: 1660163091
- exit_code: 1
  program: "import std.typecons;\nimport std.math;\n/*\n Input is a space-delimited\
    \ string of numberals from 'zero' to 'nine'.\n    Valid choices are 'zero', 'one',\
    \ 'two', 'three', 'four', 'five', 'six', 'seven', 'eight' and 'nine'.\n    Return\
    \ the string with numbers sorted from smallest to largest\n    >>> sort_numbers(\"\
    three one five\")\n    \"one three five\"\n    \n*/\nstring sort_numbers(string\
    \ numbers) \n{\n    string[] nums = numbers.split(\" \");\n    int[] nums_int\
    \ = new int[nums.length];\n    foreach(i, num; nums)\n    {\n        nums_int[i]\
    \ = to!int(num);\n    }\n    sort(nums_int);\n    string result = \"\";\n    foreach(num;\
    \ nums_int)\n    {\n        result ~= to!string(num) ~ \" \";\n    }\n    return\
    \ result.stripRight();\n}\nunittest\n{\n    alias candidate = sort_numbers;\n\n\
    \    assert(candidate(\"\") == \"\");\n    assert(candidate(\"three\") == \"three\"\
    );\n    assert(candidate(\"three five nine\") == \"three five nine\");\n    assert(candidate(\"\
    five zero four seven nine eight\") == \"zero four five seven eight nine\");\n\
    \    assert(candidate(\"six five four three two one zero\") == \"zero one two\
    \ three four five six\");\n}\nvoid main(){}"
  status: SyntaxError
  stderr: '/tmp/tmpuj2nx7js.d(13): Error: no property `split` for type `string`

    /tmp/tmpuj2nx7js.d(17): Error: template instance `to!int` template `to` is not
    defined, did you mean No?

    /tmp/tmpuj2nx7js.d(19): Error: undefined identifier `sort`, did you mean function
    `sqrt`?

    /tmp/tmpuj2nx7js.d(23): Error: template instance `to!string` template `to` is
    not defined, did you mean No?

    /tmp/tmpuj2nx7js.d(25): Error: no property `stripRight` for type `string`

    Failed: ["dmd", "-unittest", "-v", "-o-", "/tmp/tmpuj2nx7js.d", "-I/tmp"]

    '
  stdout: ''
  timestamp: 1660163090
- exit_code: 1
  program: "import std.typecons;\nimport std.math;\n/*\n Input is a space-delimited\
    \ string of numberals from 'zero' to 'nine'.\n    Valid choices are 'zero', 'one',\
    \ 'two', 'three', 'four', 'five', 'six', 'seven', 'eight' and 'nine'.\n    Return\
    \ the string with numbers sorted from smallest to largest\n    >>> sort_numbers(\"\
    three one five\")\n    \"one three five\"\n    \n*/\nstring sort_numbers(string\
    \ numbers) \n{\n    string[] nums = numbers.split();\n    string[] nums_sorted\
    \ = nums.sort();\n    return nums_sorted.join(\" \");\n}\nunittest\n{\n    alias\
    \ candidate = sort_numbers;\n\n    assert(candidate(\"\") == \"\");\n    assert(candidate(\"\
    three\") == \"three\");\n    assert(candidate(\"three five nine\") == \"three\
    \ five nine\");\n    assert(candidate(\"five zero four seven nine eight\") ==\
    \ \"zero four five seven eight nine\");\n    assert(candidate(\"six five four\
    \ three two one zero\") == \"zero one two three four five six\");\n}\nvoid main(){}"
  status: SyntaxError
  stderr: '/tmp/tmp93uhnzk3.d(13): Error: no property `split` for type `string`

    /tmp/tmp93uhnzk3.d(14): Error: no property `sort` for type `string[]`

    /tmp/tmp93uhnzk3.d(15): Error: no property `join` for type `string[]`

    Failed: ["dmd", "-unittest", "-v", "-o-", "/tmp/tmp93uhnzk3.d", "-I/tmp"]

    '
  stdout: ''
  timestamp: 1660163091
- exit_code: 1
  program: "import std.typecons;\nimport std.math;\n/*\n Input is a space-delimited\
    \ string of numberals from 'zero' to 'nine'.\n    Valid choices are 'zero', 'one',\
    \ 'two', 'three', 'four', 'five', 'six', 'seven', 'eight' and 'nine'.\n    Return\
    \ the string with numbers sorted from smallest to largest\n    >>> sort_numbers(\"\
    three one five\")\n    \"one three five\"\n    \n*/\nstring sort_numbers(string\
    \ numbers) \n{\n    string[] nums = numbers.split(\" \");\n    int[] nums_int\
    \ = new int[nums.length];\n    foreach(i, num; nums)\n    {\n        nums_int[i]\
    \ = to!int(num);\n    }\n    sort(nums_int);\n    foreach(i, num; nums_int)\n\
    \    {\n        nums[i] = to!string(num);\n    }\n    return join(nums, \" \"\
    );\n}\nunittest\n{\n    alias candidate = sort_numbers;\n\n    assert(candidate(\"\
    \") == \"\");\n    assert(candidate(\"three\") == \"three\");\n    assert(candidate(\"\
    three five nine\") == \"three five nine\");\n    assert(candidate(\"five zero\
    \ four seven nine eight\") == \"zero four five seven eight nine\");\n    assert(candidate(\"\
    six five four three two one zero\") == \"zero one two three four five six\");\n\
    }\nvoid main(){}"
  status: SyntaxError
  stderr: '/tmp/tmp7zskc53q.d(13): Error: no property `split` for type `string`

    /tmp/tmp7zskc53q.d(17): Error: template instance `to!int` template `to` is not
    defined, did you mean No?

    /tmp/tmp7zskc53q.d(19): Error: undefined identifier `sort`, did you mean function
    `sqrt`?

    /tmp/tmp7zskc53q.d(22): Error: template instance `to!string` template `to` is
    not defined, did you mean No?

    /tmp/tmp7zskc53q.d(24): Error: undefined identifier `join`, did you mean function
    `main`?

    Failed: ["dmd", "-unittest", "-v", "-o-", "/tmp/tmp7zskc53q.d", "-I/tmp"]

    '
  stdout: ''
  timestamp: 1660163090
- exit_code: 1
  program: "import std.typecons;\nimport std.math;\n/*\n Input is a space-delimited\
    \ string of numberals from 'zero' to 'nine'.\n    Valid choices are 'zero', 'one',\
    \ 'two', 'three', 'four', 'five', 'six', 'seven', 'eight' and 'nine'.\n    Return\
    \ the string with numbers sorted from smallest to largest\n    >>> sort_numbers(\"\
    three one five\")\n    \"one three five\"\n    \n*/\nstring sort_numbers(string\
    \ numbers) \n{\n    string[] nums = numbers.split(\" \");\n    int[] nums_int\
    \ = new int[nums.length];\n    foreach(i, num; nums)\n    {\n        nums_int[i]\
    \ = get_number(num);\n    }\n    nums_int.sort();\n    string result = \"\";\n\
    \    foreach(num; nums_int)\n    {\n        result ~= get_numeral(num) ~ \" \"\
    ;\n    }\n    return result.trimRight();\n}\nunittest\n{\n    alias candidate\
    \ = sort_numbers;\n\n    assert(candidate(\"\") == \"\");\n    assert(candidate(\"\
    three\") == \"three\");\n    assert(candidate(\"three five nine\") == \"three\
    \ five nine\");\n    assert(candidate(\"five zero four seven nine eight\") ==\
    \ \"zero four five seven eight nine\");\n    assert(candidate(\"six five four\
    \ three two one zero\") == \"zero one two three four five six\");\n}\nvoid main(){}"
  status: SyntaxError
  stderr: '/tmp/tmp026d4s81.d(13): Error: no property `split` for type `string`

    /tmp/tmp026d4s81.d(17): Error: undefined identifier `get_number`

    /tmp/tmp026d4s81.d(19): Error: no property `sort` for type `int[]`

    /tmp/tmp026d4s81.d(23): Error: undefined identifier `get_numeral`

    /tmp/tmp026d4s81.d(25): Error: no property `trimRight` for type `string`

    Failed: ["dmd", "-unittest", "-v", "-o-", "/tmp/tmp026d4s81.d", "-I/tmp"]

    '
  stdout: ''
  timestamp: 1660163091
- exit_code: 1
  program: "import std.typecons;\nimport std.math;\n/*\n Input is a space-delimited\
    \ string of numberals from 'zero' to 'nine'.\n    Valid choices are 'zero', 'one',\
    \ 'two', 'three', 'four', 'five', 'six', 'seven', 'eight' and 'nine'.\n    Return\
    \ the string with numbers sorted from smallest to largest\n    >>> sort_numbers(\"\
    three one five\")\n    \"one three five\"\n    \n*/\nstring sort_numbers(string\
    \ numbers) \n{\n    string[] nums = numbers.split(\" \");\n    int[] nums_int\
    \ = new int[nums.length];\n    for (int i = 0; i < nums.length; i++)\n    {\n\
    \        nums_int[i] = to!int(nums[i]);\n    }\n    nums_int.sort();\n    for\
    \ (int i = 0; i < nums.length; i++)\n    {\n        nums[i] = to!string(nums_int[i]);\n\
    \    }\n    return join(nums, \" \");\n}\nunittest\n{\n    alias candidate = sort_numbers;\n\
    \n    assert(candidate(\"\") == \"\");\n    assert(candidate(\"three\") == \"\
    three\");\n    assert(candidate(\"three five nine\") == \"three five nine\");\n\
    \    assert(candidate(\"five zero four seven nine eight\") == \"zero four five\
    \ seven eight nine\");\n    assert(candidate(\"six five four three two one zero\"\
    ) == \"zero one two three four five six\");\n}\nvoid main(){}"
  status: SyntaxError
  stderr: '/tmp/tmpx88p_pu4.d(13): Error: no property `split` for type `string`

    /tmp/tmpx88p_pu4.d(17): Error: template instance `to!int` template `to` is not
    defined, did you mean No?

    /tmp/tmpx88p_pu4.d(19): Error: no property `sort` for type `int[]`

    /tmp/tmpx88p_pu4.d(22): Error: template instance `to!string` template `to` is
    not defined, did you mean No?

    /tmp/tmpx88p_pu4.d(24): Error: undefined identifier `join`, did you mean function
    `main`?

    Failed: ["dmd", "-unittest", "-v", "-o-", "/tmp/tmpx88p_pu4.d", "-I/tmp"]

    '
  stdout: ''
  timestamp: 1660163091
- exit_code: 1
  program: "import std.typecons;\nimport std.math;\n/*\n Input is a space-delimited\
    \ string of numberals from 'zero' to 'nine'.\n    Valid choices are 'zero', 'one',\
    \ 'two', 'three', 'four', 'five', 'six', 'seven', 'eight' and 'nine'.\n    Return\
    \ the string with numbers sorted from smallest to largest\n    >>> sort_numbers(\"\
    three one five\")\n    \"one three five\"\n    \n*/\nstring sort_numbers(string\
    \ numbers) \n{\n    int[] nums;\n    foreach(string num; numbers.split(\" \"))\n\
    \    {\n        nums ~= numeralToInt(num);\n    }\n    nums.sort();\n    string\
    \ result;\n    foreach(int num; nums)\n    {\n        result ~= intToNumeral(num)\
    \ ~ \" \";\n    }\n    return result.stripRight();\n}\nunittest\n{\n    alias\
    \ candidate = sort_numbers;\n\n    assert(candidate(\"\") == \"\");\n    assert(candidate(\"\
    three\") == \"three\");\n    assert(candidate(\"three five nine\") == \"three\
    \ five nine\");\n    assert(candidate(\"five zero four seven nine eight\") ==\
    \ \"zero four five seven eight nine\");\n    assert(candidate(\"six five four\
    \ three two one zero\") == \"zero one two three four five six\");\n}\nvoid main(){}"
  status: SyntaxError
  stderr: '/tmp/tmpoayiny8a.d(14): Error: no property `split` for type `string`

    /tmp/tmpoayiny8a.d(18): Error: no property `sort` for type `int[]`

    /tmp/tmpoayiny8a.d(22): Error: undefined identifier `intToNumeral`

    /tmp/tmpoayiny8a.d(24): Error: no property `stripRight` for type `string`

    Failed: ["dmd", "-unittest", "-v", "-o-", "/tmp/tmpoayiny8a.d", "-I/tmp"]

    '
  stdout: ''
  timestamp: 1660163091
- exit_code: 1
  program: "import std.typecons;\nimport std.math;\n/*\n Input is a space-delimited\
    \ string of numberals from 'zero' to 'nine'.\n    Valid choices are 'zero', 'one',\
    \ 'two', 'three', 'four', 'five', 'six', 'seven', 'eight' and 'nine'.\n    Return\
    \ the string with numbers sorted from smallest to largest\n    >>> sort_numbers(\"\
    three one five\")\n    \"one three five\"\n    \n*/\nstring sort_numbers(string\
    \ numbers) \n{\n    string[] nums = numbers.split(\" \");\n    int[] nums_int\
    \ = new int[nums.length];\n    foreach(i, num; nums)\n    {\n        switch(num)\n\
    \        {\n            case \"zero\":\n                nums_int[i] = 0;\n   \
    \             break;\n            case \"one\":\n                nums_int[i] =\
    \ 1;\n                break;\n            case \"two\":\n                nums_int[i]\
    \ = 2;\n                break;\n            case \"three\":\n                nums_int[i]\
    \ = 3;\n                break;\n            case \"four\":\n                nums_int[i]\
    \ = 4;\n                break;\n            case \"five\":\n                nums_int[i]\
    \ = 5;\n                break;\n            case \"six\":\n                nums_int[i]\
    \ = 6;\n                break;\n            case \"seven\":\n                nums_int[i]\
    \ = 7;\n                break;\n            case \"eight\":\n                nums_int[i]\
    \ = 8;\n                break;\n            case \"nine\":\n                nums_int[i]\
    \ = 9;\n                break;\n        }\n    }\n    nums_int.sort;\n    foreach(i,\
    \ num; nums_int)\n    {\n        switch(num)\n        {\n            case 0:\n\
    \                nums[i] = \"zero\";\n                break;\n            case\
    \ 1:\n                nums[i] = \"one\";\n                break;\n           \
    \ case 2:\n                nums[i] = \"two\";\n                break;\n      \
    \      case 3:\n                nums[i] = \"three\";\n                break;\n\
    \            case 4:\n                nums[i] = \"four\";\n                break;\n\
    \            case 5:\n                nums[i] = \"five\";\n                break;\n\
    \            case 6:\n                nums[i] = \"six\";\n                break;\n\
    \            case 7:\n                nums[i] = \"seven\";\n                break;\n\
    \            case 8:\n                nums[i] = \"eight\";\n                break;\n\
    \            case 9:\n                nums[i] = \"nine\nunittest\n{\n    alias\
    \ candidate = sort_numbers;\n\n    assert(candidate(\"\") == \"\");\n    assert(candidate(\"\
    three\") == \"three\");\n    assert(candidate(\"three five nine\") == \"three\
    \ five nine\");\n    assert(candidate(\"five zero four seven nine eight\") ==\
    \ \"zero four five seven eight nine\");\n    assert(candidate(\"six five four\
    \ three two one zero\") == \"zero one two three four five six\");\n}\nvoid main(){}"
  status: SyntaxError
  stderr: '/tmp/tmpc1u9yce3.d(89): Error: Implicit string concatenation is deprecated,
    use "nine\x0aunittest\x0a{\x0a    alias candidate = sort_numbers;\x0a\x0a    assert(candidate("
    ~ ") == " instead

    /tmp/tmpc1u9yce3.d(89): Error: Implicit string concatenation is deprecated, use
    ") == " ~ ");\x0a    assert(candidate(" instead

    /tmp/tmpc1u9yce3.d(90): Error: found `three` when expecting `;` following statement

    /tmp/tmpc1u9yce3.d(90): Error: found `three` when expecting `;` following statement

    /tmp/tmpc1u9yce3.d(91): Error: found `three` when expecting `;` following statement

    /tmp/tmpc1u9yce3.d(91): Error: found `nine` when expecting `;` following statement

    /tmp/tmpc1u9yce3.d(91): Error: found `three` when expecting `;` following statement

    /tmp/tmpc1u9yce3.d(91): Error: found `nine` when expecting `;` following statement

    /tmp/tmpc1u9yce3.d(92): Error: found `five` when expecting `;` following statement

    /tmp/tmpc1u9yce3.d(92): Error: found `four` when expecting `;` following statement

    /tmp/tmpc1u9yce3.d(92): Error: found `'
  stdout: ''
  timestamp: 1660163090
- exit_code: 1
  program: "import std.typecons;\nimport std.math;\n/*\n Input is a space-delimited\
    \ string of numberals from 'zero' to 'nine'.\n    Valid choices are 'zero', 'one',\
    \ 'two', 'three', 'four', 'five', 'six', 'seven', 'eight' and 'nine'.\n    Return\
    \ the string with numbers sorted from smallest to largest\n    >>> sort_numbers(\"\
    three one five\")\n    \"one three five\"\n    \n*/\nstring sort_numbers(string\
    \ numbers) \n{\n    int[] nums;\n    foreach(num; numbers.split())\n    {\n  \
    \      switch(num)\n        {\n            case \"zero\": nums ~= 0; break;\n\
    \            case \"one\": nums ~= 1; break;\n            case \"two\": nums ~=\
    \ 2; break;\n            case \"three\": nums ~= 3; break;\n            case \"\
    four\": nums ~= 4; break;\n            case \"five\": nums ~= 5; break;\n    \
    \        case \"six\": nums ~= 6; break;\n            case \"seven\": nums ~=\
    \ 7; break;\n            case \"eight\": nums ~= 8; break;\n            case \"\
    nine\": nums ~= 9; break;\n        }\n    }\n    nums.sort();\n    string result;\n\
    \    foreach(num; nums)\n    {\n        switch(num)\n        {\n            case\
    \ 0: result ~= \"zero \"; break;\n            case 1: result ~= \"one \"; break;\n\
    \            case 2: result ~= \"two \"; break;\n            case 3: result ~=\
    \ \"three \"; break;\n            case 4: result ~= \"four \"; break;\n      \
    \      case 5: result ~= \"five \"; break;\n            case 6: result ~= \"six\
    \ \"; break;\n            case 7: result ~= \"seven \"; break;\n            case\
    \ 8: result ~= \"eight \"; break;\n            case 9: result ~= \"nine \"; break;\n\
    \        }\n    }\n    return result.stripRight;\n}\nunittest\n{\n    alias candidate\
    \ = sort_numbers;\n\n    assert(candidate(\"\") == \"\");\n    assert(candidate(\"\
    three\") == \"three\");\n    assert(candidate(\"three five nine\") == \"three\
    \ five nine\");\n    assert(candidate(\"five zero four seven nine eight\") ==\
    \ \"zero four five seven eight nine\");\n    assert(candidate(\"six five four\
    \ three two one zero\") == \"zero one two three four five six\");\n}\nvoid main(){}"
  status: SyntaxError
  stderr: '/tmp/tmptghwpw09.d(14): Error: no property `split` for type `string`

    /tmp/tmptghwpw09.d(30): Error: no property `sort` for type `int[]`

    /tmp/tmptghwpw09.d(34): Error: `switch` statement without a `default`; use `final
    switch` or add `default: assert(0);` or add `default: break;`

    '
  stdout: ''
  timestamp: 1660163091
- exit_code: 1
  program: "import std.typecons;\nimport std.math;\n/*\n Input is a space-delimited\
    \ string of numberals from 'zero' to 'nine'.\n    Valid choices are 'zero', 'one',\
    \ 'two', 'three', 'four', 'five', 'six', 'seven', 'eight' and 'nine'.\n    Return\
    \ the string with numbers sorted from smallest to largest\n    >>> sort_numbers(\"\
    three one five\")\n    \"one three five\"\n    \n*/\nstring sort_numbers(string\
    \ numbers) \n{\n    int[] nums;\n    foreach(n; numbers.split())\n    {\n    \
    \    nums ~= to!int(n);\n    }\n    sort(nums);\n    string result;\n    foreach(n;\
    \ nums)\n    {\n        result ~= to!string(n) ~ \" \";\n    }\n    return result.stripRight;\n\
    }\nunittest\n{\n    alias candidate = sort_numbers;\n\n    assert(candidate(\"\
    \") == \"\");\n    assert(candidate(\"three\") == \"three\");\n    assert(candidate(\"\
    three five nine\") == \"three five nine\");\n    assert(candidate(\"five zero\
    \ four seven nine eight\") == \"zero four five seven eight nine\");\n    assert(candidate(\"\
    six five four three two one zero\") == \"zero one two three four five six\");\n\
    }\nvoid main(){}"
  status: SyntaxError
  stderr: '/tmp/tmp41bthjlt.d(14): Error: no property `split` for type `string`

    /tmp/tmp41bthjlt.d(18): Error: undefined identifier `sort`, did you mean function
    `sqrt`?

    /tmp/tmp41bthjlt.d(22): Error: template instance `to!string` template `to` is
    not defined, did you mean No?

    /tmp/tmp41bthjlt.d(24): Error: no property `stripRight` for type `string`

    Failed: ["dmd", "-unittest", "-v", "-o-", "/tmp/tmp41bthjlt.d", "-I/tmp"]

    '
  stdout: ''
  timestamp: 1660163091
- exit_code: 1
  program: "import std.typecons;\nimport std.math;\n/*\n Input is a space-delimited\
    \ string of numberals from 'zero' to 'nine'.\n    Valid choices are 'zero', 'one',\
    \ 'two', 'three', 'four', 'five', 'six', 'seven', 'eight' and 'nine'.\n    Return\
    \ the string with numbers sorted from smallest to largest\n    >>> sort_numbers(\"\
    three one five\")\n    \"one three five\"\n    \n*/\nstring sort_numbers(string\
    \ numbers) \n{\n    string[] nums = numbers.split(\" \");\n    int[] nums_int\
    \ = new int[nums.length];\n    foreach(i, num; nums)\n    {\n        nums_int[i]\
    \ = numeral_to_int(num);\n    }\n    sort(nums_int);\n    foreach(i, num; nums_int)\n\
    \    {\n        nums[i] = int_to_numeral(num);\n    }\n    return nums.join(\"\
    \ \");\n}\nunittest\n{\n    alias candidate = sort_numbers;\n\n    assert(candidate(\"\
    \") == \"\");\n    assert(candidate(\"three\") == \"three\");\n    assert(candidate(\"\
    three five nine\") == \"three five nine\");\n    assert(candidate(\"five zero\
    \ four seven nine eight\") == \"zero four five seven eight nine\");\n    assert(candidate(\"\
    six five four three two one zero\") == \"zero one two three four five six\");\n\
    }\nvoid main(){}"
  status: SyntaxError
  stderr: '/tmp/tmpk5w56aqe.d(13): Error: no property `split` for type `string`

    /tmp/tmpk5w56aqe.d(17): Error: undefined identifier `numeral_to_int`

    /tmp/tmpk5w56aqe.d(19): Error: undefined identifier `sort`, did you mean function
    `sqrt`?

    /tmp/tmpk5w56aqe.d(22): Error: undefined identifier `int_to_numeral`

    /tmp/tmpk5w56aqe.d(24): Error: no property `join` for type `string[]`

    Failed: ["dmd", "-unittest", "-v", "-o-", "/tmp/tmpk5w56aqe.d", "-I/tmp"]

    '
  stdout: ''
  timestamp: 1660163091
- exit_code: 1
  program: "import std.typecons;\nimport std.math;\n/*\n Input is a space-delimited\
    \ string of numberals from 'zero' to 'nine'.\n    Valid choices are 'zero', 'one',\
    \ 'two', 'three', 'four', 'five', 'six', 'seven', 'eight' and 'nine'.\n    Return\
    \ the string with numbers sorted from smallest to largest\n    >>> sort_numbers(\"\
    three one five\")\n    \"one three five\"\n    \n*/\nstring sort_numbers(string\
    \ numbers) \n{\n    string[] nums = numbers.split(\" \");\n    int[] nums_int\
    \ = new int[nums.length];\n    foreach(int i, string num; nums)\n    {\n     \
    \   nums_int[i] = to!int(num);\n    }\n    sort(nums_int);\n    string result\
    \ = \"\";\n    foreach(int num; nums_int)\n    {\n        result ~= to!string(num)\
    \ ~ \" \";\n    }\n    return result.stripRight();\n}\nunittest\n{\n    alias\
    \ candidate = sort_numbers;\n\n    assert(candidate(\"\") == \"\");\n    assert(candidate(\"\
    three\") == \"three\");\n    assert(candidate(\"three five nine\") == \"three\
    \ five nine\");\n    assert(candidate(\"five zero four seven nine eight\") ==\
    \ \"zero four five seven eight nine\");\n    assert(candidate(\"six five four\
    \ three two one zero\") == \"zero one two three four five six\");\n}\nvoid main(){}"
  status: SyntaxError
  stderr: '/tmp/tmpnnafl3tn.d(13): Error: no property `split` for type `string`

    /tmp/tmpnnafl3tn.d(17): Error: template instance `to!int` template `to` is not
    defined, did you mean No?

    /tmp/tmpnnafl3tn.d(19): Error: undefined identifier `sort`, did you mean function
    `sqrt`?

    /tmp/tmpnnafl3tn.d(23): Error: template instance `to!string` template `to` is
    not defined, did you mean No?

    /tmp/tmpnnafl3tn.d(25): Error: no property `stripRight` for type `string`

    Failed: ["dmd", "-unittest", "-v", "-o-", "/tmp/tmpnnafl3tn.d", "-I/tmp"]

    '
  stdout: ''
  timestamp: 1660163091
- exit_code: 1
  program: "import std.typecons;\nimport std.math;\n/*\n Input is a space-delimited\
    \ string of numberals from 'zero' to 'nine'.\n    Valid choices are 'zero', 'one',\
    \ 'two', 'three', 'four', 'five', 'six', 'seven', 'eight' and 'nine'.\n    Return\
    \ the string with numbers sorted from smallest to largest\n    >>> sort_numbers(\"\
    three one five\")\n    \"one three five\"\n    \n*/\nstring sort_numbers(string\
    \ numbers) \n{\n    string[] nums = numbers.split(\" \");\n    string[] nums_sorted\
    \ = nums.dup;\n    nums_sorted.sort;\n    string result = \"\";\n    foreach(num;\
    \ nums)\n    {\n        int index = nums_sorted.indexOf(num);\n        result\
    \ ~= nums[index] ~ \" \";\n    }\n    return result.stripRight;\n}\nunittest\n\
    {\n    alias candidate = sort_numbers;\n\n    assert(candidate(\"\") == \"\");\n\
    \    assert(candidate(\"three\") == \"three\");\n    assert(candidate(\"three\
    \ five nine\") == \"three five nine\");\n    assert(candidate(\"five zero four\
    \ seven nine eight\") == \"zero four five seven eight nine\");\n    assert(candidate(\"\
    six five four three two one zero\") == \"zero one two three four five six\");\n\
    }\nvoid main(){}"
  status: SyntaxError
  stderr: '/tmp/tmpklksq49n.d(13): Error: no property `split` for type `string`

    /tmp/tmpklksq49n.d(15): Error: no property `sort` for type `string[]`

    /tmp/tmpklksq49n.d(19): Error: no property `indexOf` for type `string[]`

    /tmp/tmpklksq49n.d(22): Error: no property `stripRight` for type `string`

    Failed: ["dmd", "-unittest", "-v", "-o-", "/tmp/tmpklksq49n.d", "-I/tmp"]

    '
  stdout: ''
  timestamp: 1660163091
- exit_code: 1
  program: "import std.typecons;\nimport std.math;\n/*\n Input is a space-delimited\
    \ string of numberals from 'zero' to 'nine'.\n    Valid choices are 'zero', 'one',\
    \ 'two', 'three', 'four', 'five', 'six', 'seven', 'eight' and 'nine'.\n    Return\
    \ the string with numbers sorted from smallest to largest\n    >>> sort_numbers(\"\
    three one five\")\n    \"one three five\"\n    \n*/\nstring sort_numbers(string\
    \ numbers) \n{\n    string[] nums = numbers.split();\n    int[] num_ints = new\
    \ int[nums.length];\n    foreach(i, num; nums)\n    {\n        switch(num)\n \
    \       {\n            case \"zero\":\n                num_ints[i] = 0;\n    \
    \            break;\n            case \"one\":\n                num_ints[i] =\
    \ 1;\n                break;\n            case \"two\":\n                num_ints[i]\
    \ = 2;\n                break;\n            case \"three\":\n                num_ints[i]\
    \ = 3;\n                break;\n            case \"four\":\n                num_ints[i]\
    \ = 4;\n                break;\n            case \"five\":\n                num_ints[i]\
    \ = 5;\n                break;\n            case \"six\":\n                num_ints[i]\
    \ = 6;\n                break;\n            case \"seven\":\n                num_ints[i]\
    \ = 7;\n                break;\n            case \"eight\":\n                num_ints[i]\
    \ = 8;\n                break;\n            case \"nine\":\n                num_ints[i]\
    \ = 9;\n                break;\n        }\n    }\n    num_ints.sort();\n    foreach(i,\
    \ num; num_ints)\n    {\n        switch(num)\n        {\n            case 0:\n\
    \                nums[i] = \"zero\";\n                break;\n            case\
    \ 1:\n                nums[i] = \"one\";\n                break;\n           \
    \ case 2:\n                nums[i] = \"two\";\n                break;\n      \
    \      case 3:\n                nums[i] = \"three\";\n                break;\n\
    \            case 4:\n                nums[i] = \"four\";\n                break;\n\
    \            case 5:\n                nums[i] = \"five\";\n                break;\n\
    \            case 6:\n                nums[i] = \"six\";\n                break;\n\
    \            case 7:\n                nums[i] = \"seven\";\n                break;\n\
    \            case 8:\n                nums[i] = \"eight\";\n                break;\n\
    \            case 9:\n                nums[i] = \"nine\";\n                break;\n\
    \        }\n    }\n    return num\nunittest\n{\n    alias candidate = sort_numbers;\n\
    \n    assert(candidate(\"\") == \"\");\n    assert(candidate(\"three\") == \"\
    three\");\n    assert(candidate(\"three five nine\") == \"three five nine\");\n\
    \    assert(candidate(\"five zero four seven nine eight\") == \"zero four five\
    \ seven eight nine\");\n    assert(candidate(\"six five four three two one zero\"\
    ) == \"zero one two three four five six\");\n}\nvoid main(){}"
  status: SyntaxError
  stderr: '/tmp/tmpmcrovtz4.d(89): Error: found `unittest` when expecting `;` following
    `return` statement

    /tmp/tmpmcrovtz4.d(99): Error: found `End of File` when expecting `}` following
    compound statement

    Failed: ["dmd", "-unittest", "-v", "-o-", "/tmp/tmpmcrovtz4.d", "-I/tmp"]

    '
  stdout: ''
  timestamp: 1660163091
- exit_code: 1
  program: "import std.typecons;\nimport std.math;\n/*\n Input is a space-delimited\
    \ string of numberals from 'zero' to 'nine'.\n    Valid choices are 'zero', 'one',\
    \ 'two', 'three', 'four', 'five', 'six', 'seven', 'eight' and 'nine'.\n    Return\
    \ the string with numbers sorted from smallest to largest\n    >>> sort_numbers(\"\
    three one five\")\n    \"one three five\"\n    \n*/\nstring sort_numbers(string\
    \ numbers) \n{\n    string[] nums = numbers.split(\" \");\n    int[] num_ints\
    \ = new int[nums.length];\n    foreach(i, num; nums)\n    {\n        num_ints[i]\
    \ = num_to_int(num);\n    }\n    sort(num_ints);\n    foreach(i, num; num_ints)\n\
    \    {\n        nums[i] = int_to_num(num);\n    }\n    return nums.join(\" \"\
    );\n}\nunittest\n{\n    alias candidate = sort_numbers;\n\n    assert(candidate(\"\
    \") == \"\");\n    assert(candidate(\"three\") == \"three\");\n    assert(candidate(\"\
    three five nine\") == \"three five nine\");\n    assert(candidate(\"five zero\
    \ four seven nine eight\") == \"zero four five seven eight nine\");\n    assert(candidate(\"\
    six five four three two one zero\") == \"zero one two three four five six\");\n\
    }\nvoid main(){}"
  status: SyntaxError
  stderr: '/tmp/tmpnhuv_w12.d(13): Error: no property `split` for type `string`

    /tmp/tmpnhuv_w12.d(17): Error: undefined identifier `num_to_int`

    /tmp/tmpnhuv_w12.d(19): Error: undefined identifier `sort`, did you mean function
    `sqrt`?

    /tmp/tmpnhuv_w12.d(22): Error: undefined identifier `int_to_num`

    /tmp/tmpnhuv_w12.d(24): Error: no property `join` for type `string[]`

    Failed: ["dmd", "-unittest", "-v", "-o-", "/tmp/tmpnhuv_w12.d", "-I/tmp"]

    '
  stdout: ''
  timestamp: 1660163091
- exit_code: 1
  program: "import std.typecons;\nimport std.math;\n/*\n Input is a space-delimited\
    \ string of numberals from 'zero' to 'nine'.\n    Valid choices are 'zero', 'one',\
    \ 'two', 'three', 'four', 'five', 'six', 'seven', 'eight' and 'nine'.\n    Return\
    \ the string with numbers sorted from smallest to largest\n    >>> sort_numbers(\"\
    three one five\")\n    \"one three five\"\n    \n*/\nstring sort_numbers(string\
    \ numbers) \n{\n    string[] nums = numbers.split(\" \");\n    int[] nums_int\
    \ = new int[nums.length];\n    for (int i = 0; i < nums.length; i++) {\n     \
    \   nums_int[i] = num_to_int(nums[i]);\n    }\n    sort(nums_int);\n    string[]\
    \ nums_sorted = new string[nums.length];\n    for (int i = 0; i < nums.length;\
    \ i++) {\n        nums_sorted[i] = int_to_num(nums_int[i]);\n    }\n    return\
    \ join(nums_sorted, \" \");\n}\nunittest\n{\n    alias candidate = sort_numbers;\n\
    \n    assert(candidate(\"\") == \"\");\n    assert(candidate(\"three\") == \"\
    three\");\n    assert(candidate(\"three five nine\") == \"three five nine\");\n\
    \    assert(candidate(\"five zero four seven nine eight\") == \"zero four five\
    \ seven eight nine\");\n    assert(candidate(\"six five four three two one zero\"\
    ) == \"zero one two three four five six\");\n}\nvoid main(){}"
  status: SyntaxError
  stderr: '/tmp/tmp_zmzyk8b.d(13): Error: no property `split` for type `string`

    /tmp/tmp_zmzyk8b.d(16): Error: undefined identifier `num_to_int`

    /tmp/tmp_zmzyk8b.d(18): Error: undefined identifier `sort`, did you mean function
    `sqrt`?

    /tmp/tmp_zmzyk8b.d(21): Error: undefined identifier `int_to_num`

    /tmp/tmp_zmzyk8b.d(23): Error: undefined identifier `join`, did you mean function
    `main`?

    Failed: ["dmd", "-unittest", "-v", "-o-", "/tmp/tmp_zmzyk8b.d", "-I/tmp"]

    '
  stdout: ''
  timestamp: 1660163091
- exit_code: 1
  program: "import std.typecons;\nimport std.math;\n/*\n Input is a space-delimited\
    \ string of numberals from 'zero' to 'nine'.\n    Valid choices are 'zero', 'one',\
    \ 'two', 'three', 'four', 'five', 'six', 'seven', 'eight' and 'nine'.\n    Return\
    \ the string with numbers sorted from smallest to largest\n    >>> sort_numbers(\"\
    three one five\")\n    \"one three five\"\n    \n*/\nstring sort_numbers(string\
    \ numbers) \n{\n    string[] nums = numbers.split(\" \");\n    int[] nums_int\
    \ = new int[nums.length];\n    foreach(int i, string num; nums)\n    {\n     \
    \   nums_int[i] = num_to_int(num);\n    }\n    sort(nums_int);\n    foreach(int\
    \ i, int num; nums_int)\n    {\n        nums[i] = int_to_num(num);\n    }\n  \
    \  return nums.join(\" \");\n}\nunittest\n{\n    alias candidate = sort_numbers;\n\
    \n    assert(candidate(\"\") == \"\");\n    assert(candidate(\"three\") == \"\
    three\");\n    assert(candidate(\"three five nine\") == \"three five nine\");\n\
    \    assert(candidate(\"five zero four seven nine eight\") == \"zero four five\
    \ seven eight nine\");\n    assert(candidate(\"six five four three two one zero\"\
    ) == \"zero one two three four five six\");\n}\nvoid main(){}"
  status: SyntaxError
  stderr: '/tmp/tmpyrmd__au.d(13): Error: no property `split` for type `string`

    /tmp/tmpyrmd__au.d(17): Error: undefined identifier `num_to_int`

    /tmp/tmpyrmd__au.d(19): Error: undefined identifier `sort`, did you mean function
    `sqrt`?

    /tmp/tmpyrmd__au.d(22): Error: undefined identifier `int_to_num`

    /tmp/tmpyrmd__au.d(24): Error: no property `join` for type `string[]`

    Failed: ["dmd", "-unittest", "-v", "-o-", "/tmp/tmpyrmd__au.d", "-I/tmp"]

    '
  stdout: ''
  timestamp: 1660163091
- exit_code: 1
  program: "import std.typecons;\nimport std.math;\n/*\n Input is a space-delimited\
    \ string of numberals from 'zero' to 'nine'.\n    Valid choices are 'zero', 'one',\
    \ 'two', 'three', 'four', 'five', 'six', 'seven', 'eight' and 'nine'.\n    Return\
    \ the string with numbers sorted from smallest to largest\n    >>> sort_numbers(\"\
    three one five\")\n    \"one three five\"\n    \n*/\nstring sort_numbers(string\
    \ numbers) \n{\n    string[] nums = numbers.split(\" \");\n    int[] nums_int\
    \ = new int[nums.length];\n    foreach(i, num; nums)\n    {\n        nums_int[i]\
    \ = to!int(num);\n    }\n    nums_int.sort();\n    foreach(i, num; nums_int)\n\
    \    {\n        nums[i] = to!string(num);\n    }\n    return nums.join(\" \");\n\
    }\nunittest\n{\n    alias candidate = sort_numbers;\n\n    assert(candidate(\"\
    \") == \"\");\n    assert(candidate(\"three\") == \"three\");\n    assert(candidate(\"\
    three five nine\") == \"three five nine\");\n    assert(candidate(\"five zero\
    \ four seven nine eight\") == \"zero four five seven eight nine\");\n    assert(candidate(\"\
    six five four three two one zero\") == \"zero one two three four five six\");\n\
    }\nvoid main(){}"
  status: SyntaxError
  stderr: '/tmp/tmp76ti86s2.d(13): Error: no property `split` for type `string`

    /tmp/tmp76ti86s2.d(17): Error: template instance `to!int` template `to` is not
    defined, did you mean No?

    /tmp/tmp76ti86s2.d(19): Error: no property `sort` for type `int[]`

    /tmp/tmp76ti86s2.d(22): Error: template instance `to!string` template `to` is
    not defined, did you mean No?

    /tmp/tmp76ti86s2.d(24): Error: no property `join` for type `string[]`

    Failed: ["dmd", "-unittest", "-v", "-o-", "/tmp/tmp76ti86s2.d", "-I/tmp"]

    '
  stdout: ''
  timestamp: 1660163091
- exit_code: 1
  program: "import std.typecons;\nimport std.math;\n/*\n Input is a space-delimited\
    \ string of numberals from 'zero' to 'nine'.\n    Valid choices are 'zero', 'one',\
    \ 'two', 'three', 'four', 'five', 'six', 'seven', 'eight' and 'nine'.\n    Return\
    \ the string with numbers sorted from smallest to largest\n    >>> sort_numbers(\"\
    three one five\")\n    \"one three five\"\n    \n*/\nstring sort_numbers(string\
    \ numbers) \n{\n    string[] nums = numbers.split(\" \");\n    int[] nums_int\
    \ = new int[nums.length];\n    foreach(i, num; nums)\n    {\n        switch(num)\n\
    \        {\n            case \"zero\":\n                nums_int[i] = 0;\n   \
    \             break;\n            case \"one\":\n                nums_int[i] =\
    \ 1;\n                break;\n            case \"two\":\n                nums_int[i]\
    \ = 2;\n                break;\n            case \"three\":\n                nums_int[i]\
    \ = 3;\n                break;\n            case \"four\":\n                nums_int[i]\
    \ = 4;\n                break;\n            case \"five\":\n                nums_int[i]\
    \ = 5;\n                break;\n            case \"six\":\n                nums_int[i]\
    \ = 6;\n                break;\n            case \"seven\":\n                nums_int[i]\
    \ = 7;\n                break;\n            case \"eight\":\n                nums_int[i]\
    \ = 8;\n                break;\n            case \"nine\":\n                nums_int[i]\
    \ = 9;\n                break;\n        }\n    }\n    nums_int.sort();\n    foreach(i,\
    \ num; nums_int)\n    {\n        switch(num)\n        {\n            case 0:\n\
    \                nums[i] = \"zero\";\n                break;\n            case\
    \ 1:\n                nums[i] = \"one\";\n                break;\n           \
    \ case 2:\n                nums[i] = \"two\";\n                break;\n      \
    \      case 3:\n                nums[i] = \"three\";\n                break;\n\
    \            case 4:\n                nums[i] = \"four\";\n                break;\n\
    \            case 5:\n                nums[i] = \"five\";\n                break;\n\
    \            case 6:\n                nums[i] = \"six\";\n                break;\n\
    \            case 7:\n                nums[i] = \"seven\";\n                break;\n\
    \            case 8:\n                nums[i] = \"eight\";\n                break;\n\
    \            case 9:\n                nums[i] = \"nine\nunittest\n{\n    alias\
    \ candidate = sort_numbers;\n\n    assert(candidate(\"\") == \"\");\n    assert(candidate(\"\
    three\") == \"three\");\n    assert(candidate(\"three five nine\") == \"three\
    \ five nine\");\n    assert(candidate(\"five zero four seven nine eight\") ==\
    \ \"zero four five seven eight nine\");\n    assert(candidate(\"six five four\
    \ three two one zero\") == \"zero one two three four five six\");\n}\nvoid main(){}"
  status: SyntaxError
  stderr: '/tmp/tmpq_hzlrvp.d(89): Error: Implicit string concatenation is deprecated,
    use "nine\x0aunittest\x0a{\x0a    alias candidate = sort_numbers;\x0a\x0a    assert(candidate("
    ~ ") == " instead

    /tmp/tmpq_hzlrvp.d(89): Error: Implicit string concatenation is deprecated, use
    ") == " ~ ");\x0a    assert(candidate(" instead

    /tmp/tmpq_hzlrvp.d(90): Error: found `three` when expecting `;` following statement

    /tmp/tmpq_hzlrvp.d(90): Error: found `three` when expecting `;` following statement

    /tmp/tmpq_hzlrvp.d(91): Error: found `three` when expecting `;` following statement

    /tmp/tmpq_hzlrvp.d(91): Error: found `nine` when expecting `;` following statement

    /tmp/tmpq_hzlrvp.d(91): Error: found `three` when expecting `;` following statement

    /tmp/tmpq_hzlrvp.d(91): Error: found `nine` when expecting `;` following statement

    /tmp/tmpq_hzlrvp.d(92): Error: found `five` when expecting `;` following statement

    /tmp/tmpq_hzlrvp.d(92): Error: found `four` when expecting `;` following statement

    /tmp/tmpq_hzlrvp.d(92): Error: found `'
  stdout: ''
  timestamp: 1660163090
- exit_code: 1
  program: "import std.typecons;\nimport std.math;\n/*\n Input is a space-delimited\
    \ string of numberals from 'zero' to 'nine'.\n    Valid choices are 'zero', 'one',\
    \ 'two', 'three', 'four', 'five', 'six', 'seven', 'eight' and 'nine'.\n    Return\
    \ the string with numbers sorted from smallest to largest\n    >>> sort_numbers(\"\
    three one five\")\n    \"one three five\"\n    \n*/\nstring sort_numbers(string\
    \ numbers) \n{\n    string[] nums = numbers.split(\" \");\n    int[] nums_int\
    \ = new int[nums.length];\n    foreach(i, num; nums)\n    {\n        nums_int[i]\
    \ = to!int(num);\n    }\n    sort(nums_int);\n    string result = \"\";\n    foreach(num;\
    \ nums_int)\n    {\n        result ~= to!string(num) ~ \" \";\n    }\n    return\
    \ result.trimRight();\n}\nunittest\n{\n    alias candidate = sort_numbers;\n\n\
    \    assert(candidate(\"\") == \"\");\n    assert(candidate(\"three\") == \"three\"\
    );\n    assert(candidate(\"three five nine\") == \"three five nine\");\n    assert(candidate(\"\
    five zero four seven nine eight\") == \"zero four five seven eight nine\");\n\
    \    assert(candidate(\"six five four three two one zero\") == \"zero one two\
    \ three four five six\");\n}\nvoid main(){}"
  status: SyntaxError
  stderr: '/tmp/tmp2urhl4pu.d(13): Error: no property `split` for type `string`

    /tmp/tmp2urhl4pu.d(17): Error: template instance `to!int` template `to` is not
    defined, did you mean No?

    /tmp/tmp2urhl4pu.d(19): Error: undefined identifier `sort`, did you mean function
    `sqrt`?

    /tmp/tmp2urhl4pu.d(23): Error: template instance `to!string` template `to` is
    not defined, did you mean No?

    /tmp/tmp2urhl4pu.d(25): Error: no property `trimRight` for type `string`

    Failed: ["dmd", "-unittest", "-v", "-o-", "/tmp/tmp2urhl4pu.d", "-I/tmp"]

    '
  stdout: ''
  timestamp: 1660163090
- exit_code: 1
  program: "import std.typecons;\nimport std.math;\n/*\n Input is a space-delimited\
    \ string of numberals from 'zero' to 'nine'.\n    Valid choices are 'zero', 'one',\
    \ 'two', 'three', 'four', 'five', 'six', 'seven', 'eight' and 'nine'.\n    Return\
    \ the string with numbers sorted from smallest to largest\n    >>> sort_numbers(\"\
    three one five\")\n    \"one three five\"\n    \n*/\nstring sort_numbers(string\
    \ numbers) \n{\n    string[] nums = numbers.split(\" \");\n    string[] nums_sorted\
    \ = nums.sort;\n    return nums_sorted.join(\" \");\n}\nunittest\n{\n    alias\
    \ candidate = sort_numbers;\n\n    assert(candidate(\"\") == \"\");\n    assert(candidate(\"\
    three\") == \"three\");\n    assert(candidate(\"three five nine\") == \"three\
    \ five nine\");\n    assert(candidate(\"five zero four seven nine eight\") ==\
    \ \"zero four five seven eight nine\");\n    assert(candidate(\"six five four\
    \ three two one zero\") == \"zero one two three four five six\");\n}\nvoid main(){}"
  status: SyntaxError
  stderr: '/tmp/tmp3m5veexf.d(13): Error: no property `split` for type `string`

    /tmp/tmp3m5veexf.d(14): Error: no property `sort` for type `string[]`

    /tmp/tmp3m5veexf.d(15): Error: no property `join` for type `string[]`

    Failed: ["dmd", "-unittest", "-v", "-o-", "/tmp/tmp3m5veexf.d", "-I/tmp"]

    '
  stdout: ''
  timestamp: 1660163091
- exit_code: 1
  program: "import std.typecons;\nimport std.math;\n/*\n Input is a space-delimited\
    \ string of numberals from 'zero' to 'nine'.\n    Valid choices are 'zero', 'one',\
    \ 'two', 'three', 'four', 'five', 'six', 'seven', 'eight' and 'nine'.\n    Return\
    \ the string with numbers sorted from smallest to largest\n    >>> sort_numbers(\"\
    three one five\")\n    \"one three five\"\n    \n*/\nstring sort_numbers(string\
    \ numbers) \n{\n    string[] nums = numbers.split(\" \");\n    int[] nums_int\
    \ = new int[nums.length];\n    foreach(int i, string num; nums)\n    {\n     \
    \   nums_int[i] = num_to_int(num);\n    }\n    sort(nums_int);\n    foreach(int\
    \ i, int num; nums_int)\n    {\n        nums[i] = int_to_num(num);\n    }\n  \
    \  return join(nums, \" \");\n}\nunittest\n{\n    alias candidate = sort_numbers;\n\
    \n    assert(candidate(\"\") == \"\");\n    assert(candidate(\"three\") == \"\
    three\");\n    assert(candidate(\"three five nine\") == \"three five nine\");\n\
    \    assert(candidate(\"five zero four seven nine eight\") == \"zero four five\
    \ seven eight nine\");\n    assert(candidate(\"six five four three two one zero\"\
    ) == \"zero one two three four five six\");\n}\nvoid main(){}"
  status: SyntaxError
  stderr: '/tmp/tmpa_wv76e_.d(13): Error: no property `split` for type `string`

    /tmp/tmpa_wv76e_.d(17): Error: undefined identifier `num_to_int`

    /tmp/tmpa_wv76e_.d(19): Error: undefined identifier `sort`, did you mean function
    `sqrt`?

    /tmp/tmpa_wv76e_.d(22): Error: undefined identifier `int_to_num`

    /tmp/tmpa_wv76e_.d(24): Error: undefined identifier `join`, did you mean function
    `main`?

    Failed: ["dmd", "-unittest", "-v", "-o-", "/tmp/tmpa_wv76e_.d", "-I/tmp"]

    '
  stdout: ''
  timestamp: 1660163090
- exit_code: 1
  program: "import std.typecons;\nimport std.math;\n/*\n Input is a space-delimited\
    \ string of numberals from 'zero' to 'nine'.\n    Valid choices are 'zero', 'one',\
    \ 'two', 'three', 'four', 'five', 'six', 'seven', 'eight' and 'nine'.\n    Return\
    \ the string with numbers sorted from smallest to largest\n    >>> sort_numbers(\"\
    three one five\")\n    \"one three five\"\n    \n*/\nstring sort_numbers(string\
    \ numbers) \n{\n    string[] nums = numbers.split(\" \");\n    int[] nums_int\
    \ = new int[nums.length];\n    foreach(i, num; nums)\n    {\n        switch(num)\n\
    \        {\n            case \"zero\":\n                nums_int[i] = 0;\n   \
    \             break;\n            case \"one\":\n                nums_int[i] =\
    \ 1;\n                break;\n            case \"two\":\n                nums_int[i]\
    \ = 2;\n                break;\n            case \"three\":\n                nums_int[i]\
    \ = 3;\n                break;\n            case \"four\":\n                nums_int[i]\
    \ = 4;\n                break;\n            case \"five\":\n                nums_int[i]\
    \ = 5;\n                break;\n            case \"six\":\n                nums_int[i]\
    \ = 6;\n                break;\n            case \"seven\":\n                nums_int[i]\
    \ = 7;\n                break;\n            case \"eight\":\n                nums_int[i]\
    \ = 8;\n                break;\n            case \"nine\":\n                nums_int[i]\
    \ = 9;\n                break;\n        }\n    }\n    nums_int.sort();\n    foreach(i,\
    \ num; nums_int)\n    {\n        switch(num)\n        {\n            case 0:\n\
    \                nums[i] = \"zero\";\n                break;\n            case\
    \ 1:\n                nums[i] = \"one\";\n                break;\n           \
    \ case 2:\n                nums[i] = \"two\";\n                break;\n      \
    \      case 3:\n                nums[i] = \"three\";\n                break;\n\
    \            case 4:\n                nums[i] = \"four\";\n                break;\n\
    \            case 5:\n                nums[i] = \"five\";\n                break;\n\
    \            case 6:\n                nums[i] = \"six\";\n                break;\n\
    \            case 7:\n                nums[i] = \"seven\";\n                break;\n\
    \            case 8:\n                nums[i] = \"eight\";\n                break;\n\
    \            case 9:\n                nums[i] = \"nine\nunittest\n{\n    alias\
    \ candidate = sort_numbers;\n\n    assert(candidate(\"\") == \"\");\n    assert(candidate(\"\
    three\") == \"three\");\n    assert(candidate(\"three five nine\") == \"three\
    \ five nine\");\n    assert(candidate(\"five zero four seven nine eight\") ==\
    \ \"zero four five seven eight nine\");\n    assert(candidate(\"six five four\
    \ three two one zero\") == \"zero one two three four five six\");\n}\nvoid main(){}"
  status: SyntaxError
  stderr: '/tmp/tmpq_hzlrvp.d(89): Error: Implicit string concatenation is deprecated,
    use "nine\x0aunittest\x0a{\x0a    alias candidate = sort_numbers;\x0a\x0a    assert(candidate("
    ~ ") == " instead

    /tmp/tmpq_hzlrvp.d(89): Error: Implicit string concatenation is deprecated, use
    ") == " ~ ");\x0a    assert(candidate(" instead

    /tmp/tmpq_hzlrvp.d(90): Error: found `three` when expecting `;` following statement

    /tmp/tmpq_hzlrvp.d(90): Error: found `three` when expecting `;` following statement

    /tmp/tmpq_hzlrvp.d(91): Error: found `three` when expecting `;` following statement

    /tmp/tmpq_hzlrvp.d(91): Error: found `nine` when expecting `;` following statement

    /tmp/tmpq_hzlrvp.d(91): Error: found `three` when expecting `;` following statement

    /tmp/tmpq_hzlrvp.d(91): Error: found `nine` when expecting `;` following statement

    /tmp/tmpq_hzlrvp.d(92): Error: found `five` when expecting `;` following statement

    /tmp/tmpq_hzlrvp.d(92): Error: found `four` when expecting `;` following statement

    /tmp/tmpq_hzlrvp.d(92): Error: found `'
  stdout: ''
  timestamp: 1660163090
- exit_code: 1
  program: "import std.typecons;\nimport std.math;\n/*\n Input is a space-delimited\
    \ string of numberals from 'zero' to 'nine'.\n    Valid choices are 'zero', 'one',\
    \ 'two', 'three', 'four', 'five', 'six', 'seven', 'eight' and 'nine'.\n    Return\
    \ the string with numbers sorted from smallest to largest\n    >>> sort_numbers(\"\
    three one five\")\n    \"one three five\"\n    \n*/\nstring sort_numbers(string\
    \ numbers) \n{\n    string[] nums = numbers.split(\" \");\n    int[] nums_int\
    \ = new int[nums.length];\n    foreach(i, num; nums)\n    {\n        switch(num)\n\
    \        {\n            case \"zero\":\n                nums_int[i] = 0;\n   \
    \             break;\n            case \"one\":\n                nums_int[i] =\
    \ 1;\n                break;\n            case \"two\":\n                nums_int[i]\
    \ = 2;\n                break;\n            case \"three\":\n                nums_int[i]\
    \ = 3;\n                break;\n            case \"four\":\n                nums_int[i]\
    \ = 4;\n                break;\n            case \"five\":\n                nums_int[i]\
    \ = 5;\n                break;\n            case \"six\":\n                nums_int[i]\
    \ = 6;\n                break;\n            case \"seven\":\n                nums_int[i]\
    \ = 7;\n                break;\n            case \"eight\":\n                nums_int[i]\
    \ = 8;\n                break;\n            case \"nine\":\n                nums_int[i]\
    \ = 9;\n                break;\n        }\n    }\n    nums_int.sort();\n    foreach(i,\
    \ num; nums_int)\n    {\n        switch(num)\n        {\n            case 0:\n\
    \                nums[i] = \"zero\";\n                break;\n            case\
    \ 1:\n                nums[i] = \"one\";\n                break;\n           \
    \ case 2:\n                nums[i] = \"two\";\n                break;\n      \
    \      case 3:\n                nums[i] = \"three\";\n                break;\n\
    \            case 4:\n                nums[i] = \"four\";\n                break;\n\
    \            case 5:\n                nums[i] = \"five\";\n                break;\n\
    \            case 6:\n                nums[i] = \"six\";\n                break;\n\
    \            case 7:\n                nums[i] = \"seven\";\n                break;\n\
    \            case 8:\n                nums[i] = \"eight\";\n                break;\n\
    \            case 9:\n                nums[i] = \"nine\nunittest\n{\n    alias\
    \ candidate = sort_numbers;\n\n    assert(candidate(\"\") == \"\");\n    assert(candidate(\"\
    three\") == \"three\");\n    assert(candidate(\"three five nine\") == \"three\
    \ five nine\");\n    assert(candidate(\"five zero four seven nine eight\") ==\
    \ \"zero four five seven eight nine\");\n    assert(candidate(\"six five four\
    \ three two one zero\") == \"zero one two three four five six\");\n}\nvoid main(){}"
  status: SyntaxError
  stderr: '/tmp/tmpq_hzlrvp.d(89): Error: Implicit string concatenation is deprecated,
    use "nine\x0aunittest\x0a{\x0a    alias candidate = sort_numbers;\x0a\x0a    assert(candidate("
    ~ ") == " instead

    /tmp/tmpq_hzlrvp.d(89): Error: Implicit string concatenation is deprecated, use
    ") == " ~ ");\x0a    assert(candidate(" instead

    /tmp/tmpq_hzlrvp.d(90): Error: found `three` when expecting `;` following statement

    /tmp/tmpq_hzlrvp.d(90): Error: found `three` when expecting `;` following statement

    /tmp/tmpq_hzlrvp.d(91): Error: found `three` when expecting `;` following statement

    /tmp/tmpq_hzlrvp.d(91): Error: found `nine` when expecting `;` following statement

    /tmp/tmpq_hzlrvp.d(91): Error: found `three` when expecting `;` following statement

    /tmp/tmpq_hzlrvp.d(91): Error: found `nine` when expecting `;` following statement

    /tmp/tmpq_hzlrvp.d(92): Error: found `five` when expecting `;` following statement

    /tmp/tmpq_hzlrvp.d(92): Error: found `four` when expecting `;` following statement

    /tmp/tmpq_hzlrvp.d(92): Error: found `'
  stdout: ''
  timestamp: 1660163090
- exit_code: 1
  program: "import std.typecons;\nimport std.math;\n/*\n Input is a space-delimited\
    \ string of numberals from 'zero' to 'nine'.\n    Valid choices are 'zero', 'one',\
    \ 'two', 'three', 'four', 'five', 'six', 'seven', 'eight' and 'nine'.\n    Return\
    \ the string with numbers sorted from smallest to largest\n    >>> sort_numbers(\"\
    three one five\")\n    \"one three five\"\n    \n*/\nstring sort_numbers(string\
    \ numbers) \n{\n    int[] nums;\n    foreach(n; numbers.split())\n    {\n    \
    \    switch(n)\n        {\n            case \"zero\":\n                nums ~=\
    \ 0;\n                break;\n            case \"one\":\n                nums\
    \ ~= 1;\n                break;\n            case \"two\":\n                nums\
    \ ~= 2;\n                break;\n            case \"three\":\n               \
    \ nums ~= 3;\n                break;\n            case \"four\":\n           \
    \     nums ~= 4;\n                break;\n            case \"five\":\n       \
    \         nums ~= 5;\n                break;\n            case \"six\":\n    \
    \            nums ~= 6;\n                break;\n            case \"seven\":\n\
    \                nums ~= 7;\n                break;\n            case \"eight\"\
    :\n                nums ~= 8;\n                break;\n            case \"nine\"\
    :\n                nums ~= 9;\n                break;\n        }\n    }\n    nums.sort();\n\
    \    string result;\n    foreach(n; nums)\n    {\n        switch(n)\n        {\n\
    \            case 0:\n                result ~= \"zero \";\n                break;\n\
    \            case 1:\n                result ~= \"one \";\n                break;\n\
    \            case 2:\n                result ~= \"two \";\n                break;\n\
    \            case 3:\n                result ~= \"three \";\n                break;\n\
    \            case 4:\n                result ~= \"four \";\n                break;\n\
    \            case 5:\n                result ~= \"five \";\n                break;\n\
    \            case 6:\n                result ~= \"six \";\n                break;\n\
    \            case 7:\n                result ~= \"seven \";\n                break;\n\
    \            case 8:\n                result ~= \"eight \";\n                break;\n\
    \            case 9:\n                result ~= \"nine \";\n                break;\n\
    \        }\n    }\n    return result.stripRight;\n}\nunittest\n{\n    alias candidate\
    \ = sort_numbers;\n\n    assert(candidate(\"\") == \"\");\n    assert(candidate(\"\
    three\") == \"three\");\n    assert(candidate(\"three five nine\") == \"three\
    \ five nine\");\n    assert(candidate(\"five zero four seven nine eight\") ==\
    \ \"zero four five seven eight nine\");\n    assert(candidate(\"six five four\
    \ three two one zero\") == \"zero one two three four five six\");\n}\nvoid main(){}"
  status: SyntaxError
  stderr: '/tmp/tmpf2jdn0iw.d(14): Error: no property `split` for type `string`

    /tmp/tmpf2jdn0iw.d(50): Error: no property `sort` for type `int[]`

    /tmp/tmpf2jdn0iw.d(54): Error: `switch` statement without a `default`; use `final
    switch` or add `default: assert(0);` or add `default: break;`

    /tmp/tmpf2jdn0iw.d(88): Error: no property `stripRight` for type `string`

    Failed: ["dmd", "-unittest", "-v", "-o-", "/tmp/tmpf2jdn0iw.d", "-I/tmp"]

    '
  stdout: ''
  timestamp: 1660163091
- exit_code: 1
  program: "import std.typecons;\nimport std.math;\n/*\n Input is a space-delimited\
    \ string of numberals from 'zero' to 'nine'.\n    Valid choices are 'zero', 'one',\
    \ 'two', 'three', 'four', 'five', 'six', 'seven', 'eight' and 'nine'.\n    Return\
    \ the string with numbers sorted from smallest to largest\n    >>> sort_numbers(\"\
    three one five\")\n    \"one three five\"\n    \n*/\nstring sort_numbers(string\
    \ numbers) \n{\n    string[] nums = numbers.split(\" \");\n    int[] nums_int\
    \ = new int[nums.length];\n    foreach(int i, string num; nums)\n    {\n     \
    \   nums_int[i] = to!int(num);\n    }\n    sort(nums_int);\n    string result\
    \ = \"\";\n    foreach(int num; nums_int)\n    {\n        result ~= to!string(num)\
    \ ~ \" \";\n    }\n    return result.trimRight();\n}\nunittest\n{\n    alias candidate\
    \ = sort_numbers;\n\n    assert(candidate(\"\") == \"\");\n    assert(candidate(\"\
    three\") == \"three\");\n    assert(candidate(\"three five nine\") == \"three\
    \ five nine\");\n    assert(candidate(\"five zero four seven nine eight\") ==\
    \ \"zero four five seven eight nine\");\n    assert(candidate(\"six five four\
    \ three two one zero\") == \"zero one two three four five six\");\n}\nvoid main(){}"
  status: SyntaxError
  stderr: '/tmp/tmpa8ovnocg.d(13): Error: no property `split` for type `string`

    /tmp/tmpa8ovnocg.d(17): Error: template instance `to!int` template `to` is not
    defined, did you mean No?

    /tmp/tmpa8ovnocg.d(19): Error: undefined identifier `sort`, did you mean function
    `sqrt`?

    /tmp/tmpa8ovnocg.d(23): Error: template instance `to!string` template `to` is
    not defined, did you mean No?

    /tmp/tmpa8ovnocg.d(25): Error: no property `trimRight` for type `string`

    Failed: ["dmd", "-unittest", "-v", "-o-", "/tmp/tmpa8ovnocg.d", "-I/tmp"]

    '
  stdout: ''
  timestamp: 1660163091
- exit_code: 1
  program: "import std.typecons;\nimport std.math;\n/*\n Input is a space-delimited\
    \ string of numberals from 'zero' to 'nine'.\n    Valid choices are 'zero', 'one',\
    \ 'two', 'three', 'four', 'five', 'six', 'seven', 'eight' and 'nine'.\n    Return\
    \ the string with numbers sorted from smallest to largest\n    >>> sort_numbers(\"\
    three one five\")\n    \"one three five\"\n    \n*/\nstring sort_numbers(string\
    \ numbers) \n{\n    int[] nums;\n    foreach(n; numbers.split())\n    {\n    \
    \    nums ~= to!int(n);\n    }\n    sort(nums);\n    string result;\n    foreach(n;\
    \ nums)\n    {\n        result ~= to!string(n) ~ \" \";\n    }\n    return result.stripRight();\n\
    }\nunittest\n{\n    alias candidate = sort_numbers;\n\n    assert(candidate(\"\
    \") == \"\");\n    assert(candidate(\"three\") == \"three\");\n    assert(candidate(\"\
    three five nine\") == \"three five nine\");\n    assert(candidate(\"five zero\
    \ four seven nine eight\") == \"zero four five seven eight nine\");\n    assert(candidate(\"\
    six five four three two one zero\") == \"zero one two three four five six\");\n\
    }\nvoid main(){}"
  status: SyntaxError
  stderr: '/tmp/tmpo96nsotu.d(14): Error: no property `split` for type `string`

    /tmp/tmpo96nsotu.d(18): Error: undefined identifier `sort`, did you mean function
    `sqrt`?

    /tmp/tmpo96nsotu.d(22): Error: template instance `to!string` template `to` is
    not defined, did you mean No?

    /tmp/tmpo96nsotu.d(24): Error: no property `stripRight` for type `string`

    Failed: ["dmd", "-unittest", "-v", "-o-", "/tmp/tmpo96nsotu.d", "-I/tmp"]

    '
  stdout: ''
  timestamp: 1660163091
- exit_code: 1
  program: "import std.typecons;\nimport std.math;\n/*\n Input is a space-delimited\
    \ string of numberals from 'zero' to 'nine'.\n    Valid choices are 'zero', 'one',\
    \ 'two', 'three', 'four', 'five', 'six', 'seven', 'eight' and 'nine'.\n    Return\
    \ the string with numbers sorted from smallest to largest\n    >>> sort_numbers(\"\
    three one five\")\n    \"one three five\"\n    \n*/\nstring sort_numbers(string\
    \ numbers) \n{\n    string[] nums = numbers.split(\" \");\n    string[] nums2\
    \ = new string[nums.length];\n    int[] nums3 = new int[nums.length];\n    int[]\
    \ nums4 = new int[nums.length];\n    int i = 0;\n    foreach(string num; nums)\n\
    \    {\n        nums2[i] = num;\n        i++;\n    }\n    i = 0;\n    foreach(string\
    \ num; nums2)\n    {\n        switch(num)\n        {\n            case \"zero\"\
    :\n                nums3[i] = 0;\n                break;\n            case \"\
    one\":\n                nums3[i] = 1;\n                break;\n            case\
    \ \"two\":\n                nums3[i] = 2;\n                break;\n          \
    \  case \"three\":\n                nums3[i] = 3;\n                break;\n  \
    \          case \"four\":\n                nums3[i] = 4;\n                break;\n\
    \            case \"five\":\n                nums3[i] = 5;\n                break;\n\
    \            case \"six\":\n                nums3[i] = 6;\n                break;\n\
    \            case \"seven\":\n                nums3[i] = 7;\n                break;\n\
    \            case \"eight\":\n                nums3[i] = 8;\n                break;\n\
    \            case \"nine\":\n                nums3[i] = 9;\n                break;\n\
    \        }\n        i++;\n    }\n    i = 0;\n    foreach(int num; nums3)\n   \
    \ {\n        nums4[i] = num;\n        i++;\n    }\n    nums4.sort();\n    i =\
    \ 0;\n    foreach(int num; nums4)\n    {\n        switch(num)\n        {\n   \
    \         case 0:\n                nums2[i] = \"zero\";\n                break;\n\
    \            case 1:\n                nums2[i] = \"one\";\n                break;\n\
    \            case 2:\n                nums2[i] = \"two\";\n                break;\n\
    \            case 3:\n                nums2[i] = \"three\";\n                break\n\
    unittest\n{\n    alias candidate = sort_numbers;\n\n    assert(candidate(\"\"\
    ) == \"\");\n    assert(candidate(\"three\") == \"three\");\n    assert(candidate(\"\
    three five nine\") == \"three five nine\");\n    assert(candidate(\"five zero\
    \ four seven nine eight\") == \"zero four five seven eight nine\");\n    assert(candidate(\"\
    six five four three two one zero\") == \"zero one two three four five six\");\n\
    }\nvoid main(){}"
  status: SyntaxError
  stderr: '/tmp/tmpzxy1h9u5.d(85): Error: found `unittest` when expecting `;` following
    `break` statement

    /tmp/tmpzxy1h9u5.d(95): Error: found `End of File` when expecting `}` following
    compound statement

    /tmp/tmpzxy1h9u5.d(95): Error: found `End of File` when expecting `}` following
    compound statement

    /tmp/tmpzxy1h9u5.d(95): Error: found `End of File` when expecting `}` following
    compound statement

    Failed: ["dmd", "-unittest", "-v", "-o-", "/tmp/tmpzxy1h9u5.d", "-I/tmp"]

    '
  stdout: ''
  timestamp: 1660163091
- exit_code: 1
  program: "import std.typecons;\nimport std.math;\n/*\n Input is a space-delimited\
    \ string of numberals from 'zero' to 'nine'.\n    Valid choices are 'zero', 'one',\
    \ 'two', 'three', 'four', 'five', 'six', 'seven', 'eight' and 'nine'.\n    Return\
    \ the string with numbers sorted from smallest to largest\n    >>> sort_numbers(\"\
    three one five\")\n    \"one three five\"\n    \n*/\nstring sort_numbers(string\
    \ numbers) \n{\n    string[] nums = numbers.split(\" \");\n    int[] nums_int\
    \ = new int[nums.length];\n    foreach(i, num; nums)\n    {\n        nums_int[i]\
    \ = to!int(num);\n    }\n    sort(nums_int);\n    string result = \"\";\n    foreach(num;\
    \ nums_int)\n    {\n        result ~= num ~ \" \";\n    }\n    return result.idup;\n\
    }\nunittest\n{\n    alias candidate = sort_numbers;\n\n    assert(candidate(\"\
    \") == \"\");\n    assert(candidate(\"three\") == \"three\");\n    assert(candidate(\"\
    three five nine\") == \"three five nine\");\n    assert(candidate(\"five zero\
    \ four seven nine eight\") == \"zero four five seven eight nine\");\n    assert(candidate(\"\
    six five four three two one zero\") == \"zero one two three four five six\");\n\
    }\nvoid main(){}"
  status: SyntaxError
  stderr: '/tmp/tmpp4o64_js.d(13): Error: no property `split` for type `string`

    /tmp/tmpp4o64_js.d(17): Error: template instance `to!int` template `to` is not
    defined, did you mean No?

    /tmp/tmpp4o64_js.d(19): Error: undefined identifier `sort`, did you mean function
    `sqrt`?

    /tmp/tmpp4o64_js.d(23): Error: incompatible types for `(num) ~ (" ")`: `int` and
    `string`

    Failed: ["dmd", "-unittest", "-v", "-o-", "/tmp/tmpp4o64_js.d", "-I/tmp"]

    '
  stdout: ''
  timestamp: 1660163091
- exit_code: 1
  program: "import std.typecons;\nimport std.math;\n/*\n Input is a space-delimited\
    \ string of numberals from 'zero' to 'nine'.\n    Valid choices are 'zero', 'one',\
    \ 'two', 'three', 'four', 'five', 'six', 'seven', 'eight' and 'nine'.\n    Return\
    \ the string with numbers sorted from smallest to largest\n    >>> sort_numbers(\"\
    three one five\")\n    \"one three five\"\n    \n*/\nstring sort_numbers(string\
    \ numbers) \n{\n    string[] nums = numbers.split(\" \");\n    int[] nums_int\
    \ = new int[nums.length];\n    foreach(i, num; nums)\n    {\n        nums_int[i]\
    \ = to!int(num);\n    }\n    sort(nums_int);\n    foreach(i, num; nums_int)\n\
    \    {\n        nums[i] = to!string(num);\n    }\n    return join(nums, \" \"\
    );\n}\nunittest\n{\n    alias candidate = sort_numbers;\n\n    assert(candidate(\"\
    \") == \"\");\n    assert(candidate(\"three\") == \"three\");\n    assert(candidate(\"\
    three five nine\") == \"three five nine\");\n    assert(candidate(\"five zero\
    \ four seven nine eight\") == \"zero four five seven eight nine\");\n    assert(candidate(\"\
    six five four three two one zero\") == \"zero one two three four five six\");\n\
    }\nvoid main(){}"
  status: SyntaxError
  stderr: '/tmp/tmp7zskc53q.d(13): Error: no property `split` for type `string`

    /tmp/tmp7zskc53q.d(17): Error: template instance `to!int` template `to` is not
    defined, did you mean No?

    /tmp/tmp7zskc53q.d(19): Error: undefined identifier `sort`, did you mean function
    `sqrt`?

    /tmp/tmp7zskc53q.d(22): Error: template instance `to!string` template `to` is
    not defined, did you mean No?

    /tmp/tmp7zskc53q.d(24): Error: undefined identifier `join`, did you mean function
    `main`?

    Failed: ["dmd", "-unittest", "-v", "-o-", "/tmp/tmp7zskc53q.d", "-I/tmp"]

    '
  stdout: ''
  timestamp: 1660163090
- exit_code: 1
  program: "import std.typecons;\nimport std.math;\n/*\n Input is a space-delimited\
    \ string of numberals from 'zero' to 'nine'.\n    Valid choices are 'zero', 'one',\
    \ 'two', 'three', 'four', 'five', 'six', 'seven', 'eight' and 'nine'.\n    Return\
    \ the string with numbers sorted from smallest to largest\n    >>> sort_numbers(\"\
    three one five\")\n    \"one three five\"\n    \n*/\nstring sort_numbers(string\
    \ numbers) \n{\n    int[] nums;\n    foreach(num; numbers.split())\n    {\n  \
    \      nums ~= to!int(num);\n    }\n    sort(nums);\n    string result;\n    foreach(num;\
    \ nums)\n    {\n        result ~= to!string(num) ~ \" \";\n    }\n    return result.stripRight();\n\
    }\nunittest\n{\n    alias candidate = sort_numbers;\n\n    assert(candidate(\"\
    \") == \"\");\n    assert(candidate(\"three\") == \"three\");\n    assert(candidate(\"\
    three five nine\") == \"three five nine\");\n    assert(candidate(\"five zero\
    \ four seven nine eight\") == \"zero four five seven eight nine\");\n    assert(candidate(\"\
    six five four three two one zero\") == \"zero one two three four five six\");\n\
    }\nvoid main(){}"
  status: SyntaxError
  stderr: '/tmp/tmpwqg07mnm.d(14): Error: no property `split` for type `string`

    /tmp/tmpwqg07mnm.d(18): Error: undefined identifier `sort`, did you mean function
    `sqrt`?

    /tmp/tmpwqg07mnm.d(22): Error: template instance `to!string` template `to` is
    not defined, did you mean No?

    /tmp/tmpwqg07mnm.d(24): Error: no property `stripRight` for type `string`

    Failed: ["dmd", "-unittest", "-v", "-o-", "/tmp/tmpwqg07mnm.d", "-I/tmp"]

    '
  stdout: ''
  timestamp: 1660163091
- exit_code: 1
  program: "import std.typecons;\nimport std.math;\n/*\n Input is a space-delimited\
    \ string of numberals from 'zero' to 'nine'.\n    Valid choices are 'zero', 'one',\
    \ 'two', 'three', 'four', 'five', 'six', 'seven', 'eight' and 'nine'.\n    Return\
    \ the string with numbers sorted from smallest to largest\n    >>> sort_numbers(\"\
    three one five\")\n    \"one three five\"\n    \n*/\nstring sort_numbers(string\
    \ numbers) \n{\n    string[] nums = numbers.split(\" \");\n    int[] nums_int\
    \ = new int[nums.length];\n    foreach(i, num; nums)\n    {\n        switch(num)\n\
    \        {\n            case \"zero\":\n                nums_int[i] = 0;\n   \
    \             break;\n            case \"one\":\n                nums_int[i] =\
    \ 1;\n                break;\n            case \"two\":\n                nums_int[i]\
    \ = 2;\n                break;\n            case \"three\":\n                nums_int[i]\
    \ = 3;\n                break;\n            case \"four\":\n                nums_int[i]\
    \ = 4;\n                break;\n            case \"five\":\n                nums_int[i]\
    \ = 5;\n                break;\n            case \"six\":\n                nums_int[i]\
    \ = 6;\n                break;\n            case \"seven\":\n                nums_int[i]\
    \ = 7;\n                break;\n            case \"eight\":\n                nums_int[i]\
    \ = 8;\n                break;\n            case \"nine\":\n                nums_int[i]\
    \ = 9;\n                break;\n        }\n    }\n    nums_int.sort();\n    foreach(i,\
    \ num; nums_int)\n    {\n        switch(num)\n        {\n            case 0:\n\
    \                nums[i] = \"zero\";\n                break;\n            case\
    \ 1:\n                nums[i] = \"one\";\n                break;\n           \
    \ case 2:\n                nums[i] = \"two\";\n                break;\n      \
    \      case 3:\n                nums[i] = \"three\";\n                break;\n\
    \            case 4:\n                nums[i] = \"four\";\n                break;\n\
    \            case 5:\n                nums[i] = \"five\";\n                break;\n\
    \            case 6:\n                nums[i] = \"six\";\n                break;\n\
    \            case 7:\n                nums[i] = \"seven\";\n                break;\n\
    \            case 8:\n                nums[i] = \"eight\";\n                break;\n\
    \            case 9:\n                nums[i] = \"nine\nunittest\n{\n    alias\
    \ candidate = sort_numbers;\n\n    assert(candidate(\"\") == \"\");\n    assert(candidate(\"\
    three\") == \"three\");\n    assert(candidate(\"three five nine\") == \"three\
    \ five nine\");\n    assert(candidate(\"five zero four seven nine eight\") ==\
    \ \"zero four five seven eight nine\");\n    assert(candidate(\"six five four\
    \ three two one zero\") == \"zero one two three four five six\");\n}\nvoid main(){}"
  status: SyntaxError
  stderr: '/tmp/tmpq_hzlrvp.d(89): Error: Implicit string concatenation is deprecated,
    use "nine\x0aunittest\x0a{\x0a    alias candidate = sort_numbers;\x0a\x0a    assert(candidate("
    ~ ") == " instead

    /tmp/tmpq_hzlrvp.d(89): Error: Implicit string concatenation is deprecated, use
    ") == " ~ ");\x0a    assert(candidate(" instead

    /tmp/tmpq_hzlrvp.d(90): Error: found `three` when expecting `;` following statement

    /tmp/tmpq_hzlrvp.d(90): Error: found `three` when expecting `;` following statement

    /tmp/tmpq_hzlrvp.d(91): Error: found `three` when expecting `;` following statement

    /tmp/tmpq_hzlrvp.d(91): Error: found `nine` when expecting `;` following statement

    /tmp/tmpq_hzlrvp.d(91): Error: found `three` when expecting `;` following statement

    /tmp/tmpq_hzlrvp.d(91): Error: found `nine` when expecting `;` following statement

    /tmp/tmpq_hzlrvp.d(92): Error: found `five` when expecting `;` following statement

    /tmp/tmpq_hzlrvp.d(92): Error: found `four` when expecting `;` following statement

    /tmp/tmpq_hzlrvp.d(92): Error: found `'
  stdout: ''
  timestamp: 1660163090
- exit_code: 1
  program: "import std.typecons;\nimport std.math;\n/*\n Input is a space-delimited\
    \ string of numberals from 'zero' to 'nine'.\n    Valid choices are 'zero', 'one',\
    \ 'two', 'three', 'four', 'five', 'six', 'seven', 'eight' and 'nine'.\n    Return\
    \ the string with numbers sorted from smallest to largest\n    >>> sort_numbers(\"\
    three one five\")\n    \"one three five\"\n    \n*/\nstring sort_numbers(string\
    \ numbers) \n{\n    string[] nums = numbers.split(\" \");\n    string[] nums_sorted\
    \ = nums.dup;\n    nums_sorted.sort();\n    return nums_sorted.join(\" \");\n\
    }\nunittest\n{\n    alias candidate = sort_numbers;\n\n    assert(candidate(\"\
    \") == \"\");\n    assert(candidate(\"three\") == \"three\");\n    assert(candidate(\"\
    three five nine\") == \"three five nine\");\n    assert(candidate(\"five zero\
    \ four seven nine eight\") == \"zero four five seven eight nine\");\n    assert(candidate(\"\
    six five four three two one zero\") == \"zero one two three four five six\");\n\
    }\nvoid main(){}"
  status: SyntaxError
  stderr: '/tmp/tmpzbpva9w2.d(13): Error: no property `split` for type `string`

    /tmp/tmpzbpva9w2.d(15): Error: no property `sort` for type `string[]`

    /tmp/tmpzbpva9w2.d(16): Error: no property `join` for type `string[]`

    Failed: ["dmd", "-unittest", "-v", "-o-", "/tmp/tmpzbpva9w2.d", "-I/tmp"]

    '
  stdout: ''
  timestamp: 1660163090

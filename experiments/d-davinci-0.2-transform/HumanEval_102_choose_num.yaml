name: HumanEval_102_choose_num
language: d
prompt: "import std.typecons;\nimport std.math;\n/*\nThis function takes two positive\
  \ numbers x and y and returns the\n    biggest even integer number that is in the\
  \ range [x, y] inclusive. If \n    there's no such number, then the function should\
  \ return -1.\n\n    For example:\n    >>> choose_num(12L, 15L)\n    14L\n    >>>\
  \ choose_num(13L, 12L)\n    -1L\n    \n*/\nlong choose_num(long x, long y) \n"
tests: "unittest\n{\n    alias candidate = choose_num;\n\n    assert(candidate(12L,\
  \ 15L) == 14L);\n    assert(candidate(13L, 12L) == -1L);\n    assert(candidate(33L,\
  \ 12354L) == 12354L);\n    assert(candidate(5234L, 5233L) == -1L);\n    assert(candidate(6L,\
  \ 29L) == 28L);\n    assert(candidate(27L, 10L) == -1L);\n    assert(candidate(7L,\
  \ 7L) == -1L);\n    assert(candidate(546L, 546L) == 546L);\n}\nvoid main(){}"
completions: ["{\n    long z = -1;\n    if (x % 2 == 0)\n    {\n        z = x;\n \
    \   }\n    else\n    {\n        z = x + 1;\n    }\n    if (z > y)\n    {\n   \
    \     z = -1;\n    }\n    return z;\n}", "{\n    if (x > y)\n    {\n        return\
    \ -1L;\n    }\n    else\n    {\n        long z = x;\n        while (z <= y)\n\
    \        {\n            if (z % 2 == 0)\n            {\n                return\
    \ z;\n            }\n            else\n            {\n                z++;\n \
    \           }\n        }\n        return -1L;\n    }\n}", "{\n    long result\
    \ = -1;\n    if (x > y)\n    {\n        return result;\n    }\n    if (x % 2 ==\
    \ 0)\n    {\n        result = x;\n    }\n    else\n    {\n        result = x +\
    \ 1;\n    }\n    return result;\n}", "{\n    long result = -1;\n    if (x % 2\
    \ == 0) {\n        result = x;\n    } else {\n        result = x + 1;\n    }\n\
    \    if (result > y) {\n        result = -1;\n    }\n    return result;\n}", "{\n\
    \    long z = x;\n    while (z <= y)\n    {\n        if (z % 2 == 0)\n       \
    \ {\n            return z;\n        }\n        z++;\n    }\n    return -1;\n}",
  "{\n    static assert(x >= 0L);\n    static assert(y >= 0L);\n    static assert(x\
    \ <= y);\n    long z = y;\n    while (z >= x)\n    {\n        if (z % 2L == 0L)\n\
    \        {\n            return z;\n        }\n        z--;\n    }\n    return\
    \ -1L;\n}", "{\n    long result = -1;\n    if (x % 2 == 0)\n    {\n        result\
    \ = x;\n    }\n    else\n    {\n        result = x + 1;\n    }\n    if (result\
    \ > y)\n    {\n        result = -1;\n    }\n    return result;\n}", "{\n    if\
    \ (x > y)\n        return -1;\n    else\n    {\n        long z = x % 2;\n    \
    \    if (z == 0)\n            return x;\n        else\n            return x +\
    \ 1;\n    }\n}", "{\n    long result = -1;\n    if (x > y)\n    {\n        return\
    \ result;\n    }\n    else if (x % 2 == 0)\n    {\n        result = x;\n    }\n\
    \    else\n    {\n        result = x + 1;\n    }\n    return result;\n}", "{\n\
    \    long result = -1;\n    if (x > y)\n    {\n        return result;\n    }\n\
    \    else\n    {\n        for (long i = x; i <= y; i++)\n        {\n         \
    \   if (i % 2 == 0)\n            {\n                result = i;\n            }\n\
    \        }\n    }\n    return result;\n}", "{\n    if (x > y)\n    {\n       \
    \ return -1L;\n    }\n    else\n    {\n        long z = x;\n        while (z <=\
    \ y)\n        {\n            if (z % 2 == 0)\n            {\n                return\
    \ z;\n            }\n            else\n            {\n                z = z +\
    \ 1;\n            }\n        }\n        return -1L;\n    }\n}", "{\n    long result\
    \ = -1;\n    if (x % 2 == 0) \n    {\n        result = x;\n    }\n    else \n\
    \    {\n        result = x + 1;\n    }\n    if (result > y) \n    {\n        result\
    \ = -1;\n    }\n    return result;\n}\n/*\nThis function takes a positive number\
    \ x and returns the biggest\n    odd integer number that is in the range [1, x]\
    \ inclusive. If there's no\n    such number, then the function should return -1.",
  "{\n    long result = -1;\n    if (x % 2 == 0)\n    {\n        result = x;\n   \
    \ }\n    else if (x+1 <= y)\n    {\n        result = x+1;\n    }\n    return result;\n\
    }", "{\n    long[] nums = new long[y-x+1];\n    long i = 0;\n    foreach(num;\
    \ x..y+1)\n    {\n        nums[i] = num;\n        i++;\n    }\n    foreach(num;\
    \ nums)\n    {\n        if(num % 2 == 0)\n        {\n            return num;\n\
    \        }\n    }\n    return -1;\n}", "{\n    long result = -1;\n    if (x %\
    \ 2 == 0)\n    {\n        result = x;\n    }\n    else\n    {\n        result\
    \ = x + 1;\n    }\n    if (result > y)\n    {\n        result = -1;\n    }\n \
    \   return result;\n}", "{\n    long result = -1;\n    if (x % 2 == 0)\n    {\n\
    \        result = x;\n    }\n    else\n    {\n        result = x + 1;\n    }\n\
    \    if (result > y)\n    {\n        result = -1;\n    }\n    return result;\n\
    }", "{\n    if(x % 2 == 0)\n    {\n        return x;\n    }\n    else if(y % 2\
    \ == 0)\n    {\n        return y;\n    }\n    else\n    {\n        return -1;\n\
    \    }\n}", "{\n    // your code here\n    long result = -1;\n    if (x % 2 ==\
    \ 0)\n    {\n        result = x;\n    }\n    else\n    {\n        result = x +\
    \ 1;\n    }\n    if (result > y)\n    {\n        result = -1;\n    }\n    return\
    \ result;\n}", "{\n    long z = x;\n    while (z <= y)\n    {\n        if (z %\
    \ 2 == 0)\n        {\n            return z;\n        }\n        z++;\n    }\n\
    \    return -1;\n}", "{\n    if (x > y)\n    {\n        return -1L;\n    }\n \
    \   else\n    {\n        long z = x % 2;\n        if (z == 0)\n        {\n   \
    \         return x;\n        }\n        else\n        {\n            return choose_num(x\
    \ + 1, y);\n        }\n    }\n}", "{\n    long result = -1;\n    if (x % 2 ==\
    \ 0)\n    {\n        result = x;\n    }\n    else\n    {\n        result = x +\
    \ 1;\n    }\n    if (result > y)\n    {\n        result = -1;\n    }\n    return\
    \ result;\n}", "{\n    long result = -1;\n    if (x > y)\n    {\n        return\
    \ result;\n    }\n    else if (x == y)\n    {\n        if (x % 2 == 0)\n     \
    \   {\n            return x;\n        }\n        else\n        {\n           \
    \ return result;\n        }\n    }\n    else\n    {\n        long diff = y - x;\n\
    \        if (diff % 2 == 0)\n        {\n            return y;\n        }\n   \
    \     else\n        {\n            return y - 1;\n        }\n    }\n}", "{\n \
    \   long result = -1;\n    if (x > y)\n    {\n        return result;\n    }\n\
    \    else\n    {\n        for (long i = x; i <= y; i++)\n        {\n         \
    \   if (i % 2 == 0)\n            {\n                result = i;\n            }\n\
    \        }\n    }\n    return result;\n}", "{\n    if (x > y)\n    {\n       \
    \ return -1L;\n    }\n    else\n    {\n        long z = x;\n        while (z <=\
    \ y)\n        {\n            if (z % 2 == 0)\n            {\n                return\
    \ z;\n            }\n            else\n            {\n                z++;\n \
    \           }\n        }\n        return -1L;\n    }\n}\n/*\nThis function takes\
    \ a positive number n and returns the sum of all\n    the digits of n.", "{\n\
    \    if (x > y)\n        return -1;\n    else if (x % 2 == 0)\n        return\
    \ x;\n    else\n        return choose_num(x + 1, y);\n}", "{\n    long z = 0;\n\
    \    if (x % 2 == 0)\n    {\n        z = x;\n    }\n    else\n    {\n        z\
    \ = x + 1;\n    }\n    if (z > y)\n    {\n        return -1;\n    }\n    else\n\
    \    {\n        return z;\n    }\n}", "{\n    long result = -1;\n    if (x % 2\
    \ == 0)\n    {\n        result = x;\n    }\n    else\n    {\n        result =\
    \ x + 1;\n    }\n    if (result > y)\n    {\n        result = -1;\n    }\n   \
    \ return result;\n}", "{\n    long result = -1;\n    if (x % 2 == 0)\n    {\n\
    \        result = x;\n    }\n    else\n    {\n        result = x + 1;\n    }\n\
    \    if (result > y)\n    {\n        result = -1;\n    }\n    return result;\n\
    }", "{\n    long result = -1;\n    if (x > y)\n    {\n        return result;\n\
    \    }\n    if (x % 2 == 0)\n    {\n        result = x;\n    }\n    else\n   \
    \ {\n        result = x + 1;\n    }\n    return result;\n}\n/*\nThis function\
    \ takes a positive number x and returns the smallest \n    positive number that\
    \ is bigger than x and is a power of 2.", "{\n    long result = -1;\n    if (x\
    \ % 2 == 0) \n    {\n        result = x;\n    }\n    else \n    {\n        result\
    \ = x + 1;\n    }\n    if (result > y) \n    {\n        result = -1;\n    }\n\
    \    return result;\n}", "{\n    long result = -1;\n    if (x > y)\n    {\n  \
    \      return result;\n    }\n    else\n    {\n        for (long i = x; i <= y;\
    \ i++)\n        {\n            if (i % 2 == 0)\n            {\n              \
    \  result = i;\n            }\n        }\n    }\n    return result;\n}", "{\n\
    \    long result = -1;\n    if (x % 2 == 0)\n    {\n        result = x;\n    }\n\
    \    else\n    {\n        result = x + 1;\n    }\n    if (result > y)\n    {\n\
    \        result = -1;\n    }\n    return result;\n}", "{\n    if (x > y)\n   \
    \ {\n        return -1L;\n    }\n    else\n    {\n        long z = x;\n      \
    \  while (z <= y)\n        {\n            if (z % 2 == 0)\n            {\n   \
    \             return z;\n            }\n            z++;\n        }\n        return\
    \ -1L;\n    }\n}", "{\n    long result = -1;\n    if (x % 2 == 0)\n    {\n   \
    \     result = x;\n    }\n    else\n    {\n        result = x + 1;\n    }\n  \
    \  return result;\n}", "{\n    long result = -1;\n    if (x % 2 == 0)\n    {\n\
    \        result = x;\n    }\n    else\n    {\n        result = x + 1;\n    }\n\
    \    if (result > y)\n    {\n        result = -1;\n    }\n    return result;\n\
    }", "{\n    long result = -1;\n    if (x % 2 == 0)\n    {\n        result = x;\n\
    \    }\n    else\n    {\n        x++;\n    }\n    if (x > y)\n    {\n        return\
    \ -1;\n    }\n    else\n    {\n        return x;\n    }\n}", "{\n    long result\
    \ = -1;\n    if (x > y)\n    {\n        return result;\n    }\n    else if (x\
    \ % 2 == 0)\n    {\n        result = x;\n    }\n    else\n    {\n        result\
    \ = x + 1;\n    }\n    return result;\n}", "{\n    long result = -1;\n    if (x\
    \ > y)\n    {\n        return result;\n    }\n    else\n    {\n        if (x %\
    \ 2 == 0)\n        {\n            result = x;\n        }\n        else\n     \
    \   {\n            result = x + 1;\n        }\n    }\n    return result;\n}",
  "{\n    long result = -1;\n    foreach(i; x..y+1)\n    {\n        if(i % 2 == 0)\n\
    \        {\n            result = i;\n        }\n    }\n    return result;\n}",
  "{\n    if (x > y) \n    {\n        return -1L;\n    }\n    else \n    {\n     \
    \   long max = max(x, y);\n        long min = min(x, y);\n        long max_even\
    \ = max - (max % 2);\n        long min_even = min - (min % 2);\n        if (max_even\
    \ >= min_even) \n        {\n            return max_even;\n        }\n        else\
    \ \n        {\n            return -1L;\n        }\n    }\n}", "{\n    if (x >\
    \ y)\n    {\n        return -1L;\n    }\n    else if (x % 2 == 0)\n    {\n   \
    \     return x;\n    }\n    else\n    {\n        return choose_num(x + 1, y);\n\
    \    }\n}", "{\n    long result = -1;\n    if (x % 2 == 0)\n    {\n        result\
    \ = x;\n    }\n    else\n    {\n        x++;\n    }\n    for (; x <= y; x += 2)\n\
    \    {\n        result = x;\n    }\n    return result;\n}", "{\n    long result\
    \ = -1;\n    if (x % 2 == 0)\n    {\n        result = x;\n    }\n    else\n  \
    \  {\n        result = x + 1;\n    }\n    if (result > y)\n    {\n        result\
    \ = -1;\n    }\n    return result;\n}", "{\n    long result = -1;\n    foreach(i;\
    \ x..y+1)\n    {\n        if(i % 2 == 0)\n        {\n            result = i;\n\
    \        }\n    }\n    return result;\n}", "{\n    long result = -1;\n    if (x\
    \ % 2 == 0)\n    {\n        result = x;\n    }\n    else\n    {\n        result\
    \ = x + 1;\n    }\n    if (result > y)\n    {\n        result = -1;\n    }\n \
    \   return result;\n}", "{\n    if (x % 2 == 0)\n    {\n        return x;\n  \
    \  }\n    else if (x % 2 == 1)\n    {\n        return x + 1;\n    }\n    else\
    \ if (y % 2 == 0)\n    {\n        return y;\n    }\n    else if (y % 2 == 1)\n\
    \    {\n        return y - 1;\n    }\n    else\n    {\n        return -1;\n  \
    \  }\n}", "{\n    long result = -1;\n    if (x % 2 == 0)\n    {\n        result\
    \ = x;\n    }\n    else\n    {\n        result = x + 1;\n    }\n    if (result\
    \ > y)\n    {\n        result = -1;\n    }\n    return result;\n}", "{\n    long\
    \ result = -1;\n    foreach(i; x..y+1)\n    {\n        if(i % 2 == 0)\n      \
    \  {\n            result = i;\n        }\n    }\n    return result;\n}", "{\n\
    \    if (x > y)\n        return -1;\n    else if (x % 2 == 0)\n        return\
    \ x;\n    else\n        return x + 1;\n}", "{\n    if (x % 2 == 0)\n    {\n  \
    \      return x;\n    }\n    else if (x + 1 == y)\n    {\n        return -1;\n\
    \    }\n    else\n    {\n        return choose_num(x + 1, y);\n    }\n}", "{\n\
    \    long result = -1;\n    if (x % 2 == 0)\n    {\n        result = x;\n    }\n\
    \    else\n    {\n        result = x + 1;\n    }\n    if (result > y)\n    {\n\
    \        result = -1;\n    }\n    return result;\n}", "{\n    long result = -1;\n\
    \    if (x > y)\n    {\n        return result;\n    }\n    else\n    {\n     \
    \   if (x % 2 == 0)\n        {\n            result = x;\n        }\n        else\n\
    \        {\n            result = x + 1;\n        }\n    }\n    return result;\n\
    }", "{\n    long z = x;\n    while (z <= y)\n    {\n        if (z % 2 == 0)\n\
    \        {\n            return z;\n        }\n        z++;\n    }\n    return\
    \ -1;\n}", "{\n    long result = -1;\n    if (x > y)\n    {\n        return result;\n\
    \    }\n    else\n    {\n        long i = x;\n        while (i <= y)\n       \
    \ {\n            if (i % 2 == 0)\n            {\n                result = i;\n\
    \            }\n            i++;\n        }\n    }\n    return result;\n}", "{\n\
    \    if (x > y)\n        return -1;\n    long z = x % 2;\n    if (z == 0)\n  \
    \      return x;\n    else\n        return x + 1;\n}", "{\n    if (x > y)\n  \
    \      return -1;\n    else if (x % 2 == 0)\n        return x;\n    else\n   \
    \     return x + 1;\n}", "{\n    long i = x;\n    while (i <= y) {\n        if\
    \ (i % 2 == 0) {\n            return i;\n        }\n        i++;\n    }\n    return\
    \ -1;\n}", "{\n    long result = -1;\n    long i = x;\n    while (i <= y) {\n\
    \        if (i % 2 == 0) {\n            result = i;\n        }\n        i++;\n\
    \    }\n    return result;\n}", "{\n    long result;\n    if (x % 2 == 0)\n  \
    \  {\n        result = x;\n    }\n    else\n    {\n        result = x + 1;\n \
    \   }\n    if (result > y)\n    {\n        return -1;\n    }\n    else\n    {\n\
    \        return result;\n    }\n}", "{\n    if (x > y)\n    {\n        return\
    \ -1L;\n    }\n    else\n    {\n        long z = x;\n        while (z <= y)\n\
    \        {\n            if (z % 2 == 0)\n            {\n                return\
    \ z;\n            }\n            z++;\n        }\n        return -1L;\n    }\n\
    }", "{\n    // your code here\n    long z = 0;\n    if (x > y)\n    {\n      \
    \  z = -1;\n    }\n    else if (x % 2 == 0)\n    {\n        z = x;\n    }\n  \
    \  else if (x % 2 != 0)\n    {\n        z = x + 1;\n    }\n    return z;\n}",
  "{\n    if (x > y)\n    {\n        return -1L;\n    }\n    else if (x % 2 == 0)\n\
    \    {\n        return x;\n    }\n    else\n    {\n        return choose_num(x\
    \ + 1, y);\n    }\n}", "{\n    long result = -1;\n    if (x % 2 == 0)\n    {\n\
    \        result = x;\n    }\n    else\n    {\n        x++;\n    }\n    if (x <=\
    \ y)\n    {\n        result = x;\n    }\n    return result;\n}", "{\n    long\
    \ result = -1;\n    if (x > y)\n    {\n        return result;\n    }\n    else\n\
    \    {\n        if (x % 2 == 0)\n        {\n            result = x;\n        }\n\
    \        else\n        {\n            result = x + 1;\n        }\n    }\n    return\
    \ result;\n}", "{\n    if (x % 2 == 0)\n    {\n        return x;\n    }\n    else\
    \ if (x + 1 <= y)\n    {\n        return x + 1;\n    }\n    else\n    {\n    \
    \    return -1;\n    }\n}", "{\n    if (x % 2 == 0)\n    {\n        return x;\n\
    \    }\n    else if (x % 2 == 1)\n    {\n        return choose_num(x + 1, y);\n\
    \    }\n    else if (x > y)\n    {\n        return -1;\n    }\n}", "{\n    long\
    \ z = 0;\n    if (x % 2 == 0)\n    {\n        z = x;\n    }\n    else\n    {\n\
    \        z = x + 1;\n    }\n    if (z > y)\n    {\n        return -1;\n    }\n\
    \    else\n    {\n        return z;\n    }\n}\n/*\nThis function takes a positive\
    \ number x and returns the biggest \n    integer number that is in the range [1,\
    \ x] inclusive and is a power of 2. \n    If there's no such number, then the\
    \ function should return -1.", "{\n    long result = -1;\n    if (x % 2 == 0)\n\
    \    {\n        result = x;\n    }\n    else\n    {\n        result = x + 1;\n\
    \    }\n    if (result > y)\n    {\n        result = -1;\n    }\n    return result;\n\
    }", "{\n    long result = -1;\n    if (x > y)\n    {\n        return result;\n\
    \    }\n    else\n    {\n        for (long i = y; i >= x; i--)\n        {\n  \
    \          if (i % 2 == 0)\n            {\n                result = i;\n     \
    \           break;\n            }\n        }\n    }\n    return result;\n}", "{\n\
    \    if (x > y) \n    {\n        return -1L;\n    }\n    else if (x % 2 == 0)\
    \ \n    {\n        return x;\n    }\n    else \n    {\n        return choose_num(x\
    \ + 1, y);\n    }\n}", "{\n    long result = -1;\n    if (x % 2 == 0)\n    {\n\
    \        result = x;\n    }\n    else\n    {\n        result = x + 1;\n    }\n\
    \    if (result > y)\n    {\n        result = -1;\n    }\n    return result;\n\
    }", "{\n    long maxEven = -1;\n    foreach(i; x..y+1)\n    {\n        if(i %\
    \ 2 == 0)\n        {\n            maxEven = max(maxEven, i);\n        }\n    }\n\
    \    return maxEven;\n}", "{\n    // your code here\n    if(x % 2 == 0)\n    {\n\
    \        return x;\n    }\n    else if(y % 2 == 0)\n    {\n        return y;\n\
    \    }\n    else\n    {\n        return -1;\n    }\n}", "{\n    if (x > y)\n \
    \   {\n        return -1L;\n    }\n    else if (x == y)\n    {\n        if (x\
    \ % 2 == 0)\n        {\n            return x;\n        }\n        else\n     \
    \   {\n            return -1L;\n        }\n    }\n    else\n    {\n        long\
    \ z = x;\n        while (z <= y)\n        {\n            if (z % 2 == 0)\n   \
    \         {\n                return z;\n            }\n            z++;\n    \
    \    }\n        return -1L;\n    }\n}", "{\n    if (x > y) \n    {\n        return\
    \ -1L;\n    }\n    else \n    {\n        long z = x % 2L;\n        if (z == 0L)\
    \ \n        {\n            return x;\n        }\n        else \n        {\n  \
    \          return choose_num(x + 1L, y);\n        }\n    }\n}", "{\n    if(x >\
    \ y)\n        return -1;\n    if(x % 2 == 0)\n        return x;\n    return choose_num(x\
    \ + 1, y);\n}", "{\n    if (x > y)\n    {\n        return -1L;\n    }\n    else\n\
    \    {\n        long z = x;\n        while (z <= y)\n        {\n            if\
    \ (z % 2 == 0)\n            {\n                return z;\n            }\n    \
    \        else\n            {\n                z++;\n            }\n        }\n\
    \        return -1L;\n    }\n}", "{\n    if (x > y)\n        return -1;\n    long\
    \ result = y;\n    while (result % 2 != 0)\n        result--;\n    return result;\n\
    }", "{\n    long result = -1;\n    foreach(i; x..y+1)\n    {\n        if(i % 2\
    \ == 0)\n        {\n            result = i;\n        }\n    }\n    return result;\n\
    }", "{\n    if (x > y)\n        return -1;\n    if (x % 2 == 0)\n        return\
    \ x;\n    return choose_num(x + 1, y);\n}", "{\n    if (x > y)\n        return\
    \ -1;\n    if (x % 2 == 0)\n        return x;\n    if (y % 2 == 0)\n        return\
    \ y;\n    return -1;\n}", "{\n    if (x > y) \n    {\n        return -1L;\n  \
    \  }\n    else if (x % 2 == 0) \n    {\n        return x;\n    }\n    else \n\
    \    {\n        return choose_num(x + 1, y);\n    }\n}", "{\n    long result =\
    \ -1;\n    if (x % 2 == 0)\n    {\n        result = x;\n    }\n    else\n    {\n\
    \        result = x + 1;\n    }\n    if (result > y)\n    {\n        result =\
    \ -1;\n    }\n    return result;\n}", "{\n    long result = -1;\n    if (x > y)\n\
    \    {\n        return result;\n    }\n    else\n    {\n        for (long i =\
    \ y; i >= x; i--)\n        {\n            if (i % 2 == 0)\n            {\n   \
    \             result = i;\n                break;\n            }\n        }\n\
    \    }\n    return result;\n}", "{\n    long result = -1;\n    if (x % 2 == 0)\n\
    \    {\n        result = x;\n    }\n    else\n    {\n        result = x + 1;\n\
    \    }\n    if (result > y)\n    {\n        result = -1;\n    }\n    return result;\n\
    }", "{\n    if (x % 2 != 0)\n        x++;\n    if (y % 2 != 0)\n        y--;\n\
    \    return (x <= y) ? y : -1;\n}", "{\n    long z = -1;\n    if (x % 2 == 0)\n\
    \    {\n        z = x;\n    }\n    else\n    {\n        z = x + 1;\n    }\n  \
    \  if (z > y)\n    {\n        z = -1;\n    }\n    return z;\n}", "{\n    long\
    \ z = -1;\n    if (x % 2 == 0)\n    {\n        z = x;\n    }\n    else if (x %\
    \ 2 != 0)\n    {\n        x = x + 1;\n        z = x;\n    }\n    if (y % 2 !=\
    \ 0)\n    {\n        y = y - 1;\n    }\n    if (x > y)\n    {\n        z = -1;\n\
    \    }\n    return z;\n}", "{\n    if (x > y)\n        return -1;\n    else if\
    \ (x % 2 == 0)\n        return x;\n    else\n        return choose_num(x + 1,\
    \ y);\n}", "{\n    long result;\n    if (x % 2 == 0)\n    {\n        result =\
    \ x;\n    }\n    else\n    {\n        result = x + 1;\n    }\n    if (result >\
    \ y)\n    {\n        return -1;\n    }\n    else\n    {\n        return result;\n\
    \    }\n}", "{\n    if (x > y)\n    {\n        return -1L;\n    }\n    else if\
    \ (x % 2 == 0)\n    {\n        return x;\n    }\n    else\n    {\n        return\
    \ choose_num(x + 1, y);\n    }\n}", "{\n    static assert(x >= 0L);\n    static\
    \ assert(y >= 0L);\n    static assert(x <= y);\n    long max = -1L;\n    foreach(i;\
    \ x..y+1)\n    {\n        if(i % 2 == 0)\n        {\n            max = i;\n  \
    \      }\n    }\n    return max;\n}", "{\n    long result = -1;\n    if (x % 2\
    \ == 0)\n    {\n        result = x;\n    }\n    else\n    {\n        result =\
    \ x + 1;\n    }\n    if (result > y)\n    {\n        result = -1;\n    }\n   \
    \ return result;\n}", "{\n    long result = -1;\n    if (x % 2 == 0)\n    {\n\
    \        result = x;\n    }\n    else\n    {\n        result = x + 1;\n    }\n\
    \    if (result > y)\n    {\n        result = -1;\n    }\n    return result;\n\
    }", "{\n    long result = -1;\n    foreach(i; x..y+1)\n    {\n        if(i % 2\
    \ == 0)\n        {\n            result = i;\n        }\n    }\n    return result;\n\
    }", "{\n    long result = -1;\n    if (x % 2 == 0)\n    {\n        result = x;\n\
    \    }\n    else\n    {\n        x++;\n    }\n    if (x > y)\n    {\n        return\
    \ -1;\n    }\n    else\n    {\n        return x;\n    }\n}", "{\n    long result\
    \ = -1;\n    if (x <= y)\n    {\n        if (x % 2 == 0)\n        {\n        \
    \    result = x;\n        }\n        else\n        {\n            result = x +\
    \ 1;\n        }\n    }\n    return result;\n}", "{\n    if (x > y) \n    {\n \
    \       return -1L;\n    }\n    if (x % 2 == 0) \n    {\n        return x;\n \
    \   }\n    else \n    {\n        return choose_num(x + 1, y);\n    }\n}", "{\n\
    \    long result = -1;\n    if (x % 2 == 0)\n    {\n        result = x;\n    }\n\
    \    else\n    {\n        result = x + 1;\n    }\n    if (result > y)\n    {\n\
    \        result = -1;\n    }\n    return result;\n}\n/*\nThis function takes two\
    \ positive numbers x and y and returns the\n    biggest odd integer number that\
    \ is in the range [x, y] inclusive. If \n    there's no such number, then the\
    \ function should return -1.", "{\n    if (x > y)\n    {\n        return -1L;\n\
    \    }\n    else if (x % 2 == 0)\n    {\n        return x;\n    }\n    else\n\
    \    {\n        return choose_num(x + 1, y);\n    }\n}", "{\n    if (x > y)\n\
    \    {\n        return -1L;\n    }\n    else\n    {\n        long result = x;\n\
    \        while (result <= y)\n        {\n            if (result % 2 == 0)\n  \
    \          {\n                return result;\n            }\n            else\n\
    \            {\n                result++;\n            }\n        }\n        return\
    \ -1L;\n    }\n}", "{\n    if (x > y)\n        return -1;\n    else if (x % 2\
    \ == 0)\n        return x;\n    else\n        return choose_num(x + 1, y);\n}",
  "{\n    if (x > y)\n        return -1;\n    long result = y;\n    while (result\
    \ % 2 != 0)\n        result--;\n    return result;\n}", "{\n    long result =\
    \ -1;\n    if (x % 2 == 0)\n    {\n        result = x;\n    }\n    else\n    {\n\
    \        result = x + 1;\n    }\n    if (result > y)\n    {\n        result =\
    \ -1;\n    }\n    return result;\n}\n/*\nThis function takes two positive numbers\
    \ x and y and returns the\n    smallest odd integer number that is in the range\
    \ [x, y] inclusive. If \n    there's no such number, then the function should\
    \ return -1.", "{\n    long result = -1;\n    if (x > y)\n    {\n        return\
    \ result;\n    }\n    else\n    {\n        long i = x;\n        while (i <= y)\n\
    \        {\n            if (i % 2 == 0)\n            {\n                result\
    \ = i;\n            }\n            i++;\n        }\n    }\n    return result;\n\
    }", "{\n    if (x > y)\n    {\n        return -1L;\n    }\n    else if (x % 2\
    \ == 0)\n    {\n        return x;\n    }\n    else\n    {\n        return choose_num(x\
    \ + 1, y);\n    }\n}", "{\n    long result = -1;\n    foreach(i; x..y+1)\n   \
    \ {\n        if(i % 2 == 0)\n        {\n            result = i;\n        }\n \
    \   }\n    return result;\n}", "{\n    long ret = -1;\n    if (x % 2 == 0)\n \
    \   {\n        ret = x;\n    }\n    else\n    {\n        ret = x + 1;\n    }\n\
    \    if (ret > y)\n    {\n        ret = -1;\n    }\n    return ret;\n}", "{\n\
    \    long result = -1;\n    if (x % 2 == 0)\n    {\n        result = x;\n    }\n\
    \    else\n    {\n        result = x + 1;\n    }\n    if (result > y)\n    {\n\
    \        result = -1;\n    }\n    return result;\n}", "{\n    if (x % 2 == 0)\n\
    \    {\n        return x;\n    }\n    else if (x + 1 == y)\n    {\n        return\
    \ -1;\n    }\n    else\n    {\n        return choose_num(x + 1, y);\n    }\n}",
  "{\n    long result = -1;\n    if (x % 2 == 0)\n    {\n        result = x;\n   \
    \ }\n    else\n    {\n        result = x + 1;\n    }\n    if (result > y)\n  \
    \  {\n        result = -1;\n    }\n    return result;\n}", "{\n    if (x > y)\n\
    \    {\n        return -1L;\n    }\n    else\n    {\n        long z = x;\n   \
    \     while (z <= y)\n        {\n            if (z % 2 == 0)\n            {\n\
    \                return z;\n            }\n            z++;\n        }\n     \
    \   return -1L;\n    }\n}", "{\n    long result = -1;\n    if (x % 2 == 0)\n \
    \   {\n        result = x;\n    }\n    else\n    {\n        result = x + 1;\n\
    \    }\n    if (result > y)\n    {\n        result = -1;\n    }\n    return result;\n\
    }", "{\n    long num = -1;\n    long i = x;\n    while (i <= y)\n    {\n     \
    \   if (i % 2 == 0)\n        {\n            num = i;\n        }\n        i++;\n\
    \    }\n    return num;\n}", "{\n    long result = -1;\n    if (x % 2 == 0)\n\
    \    {\n        result = x;\n    }\n    else\n    {\n        result = x + 1;\n\
    \    }\n    if (result > y)\n    {\n        result = -1;\n    }\n    return result;\n\
    }", "{\n    long result = -1;\n    if (x % 2 == 0)\n    {\n        result = x;\n\
    \    }\n    else\n    {\n        result = x + 1;\n    }\n    if (result > y)\n\
    \    {\n        result = -1;\n    }\n    return result;\n}", "{\n    long result\
    \ = -1;\n    if (x % 2 == 0) {\n        result = x;\n    } else {\n        result\
    \ = x + 1;\n    }\n    if (result > y) {\n        result = -1;\n    }\n    return\
    \ result;\n}", "{\n    long result = -1;\n    foreach(i; x..y+1)\n    {\n    \
    \    if(i % 2 == 0)\n        {\n            result = i;\n        }\n    }\n  \
    \  return result;\n}", "{\n    long result = -1;\n    if (x % 2 == 0)\n    {\n\
    \        result = x;\n    }\n    else\n    {\n        result = x + 1;\n    }\n\
    \    if (result > y)\n    {\n        result = -1;\n    }\n    return result;\n\
    }", "{\n    if (x > y)\n        return -1;\n    if (x % 2 == 0)\n        return\
    \ x;\n    if (y % 2 == 0)\n        return y;\n    return -1;\n}", "{\n    if (x\
    \ > y)\n    {\n        return -1L;\n    }\n    else\n    {\n        long z = x;\n\
    \        while (z <= y)\n        {\n            if (z % 2 == 0)\n            {\n\
    \                return z;\n            }\n            z++;\n        }\n     \
    \   return -1L;\n    }\n}", "{\n    long result = -1;\n    if (x > y)\n    {\n\
    \        return result;\n    }\n    else\n    {\n        foreach (i; x..y)\n \
    \       {\n            if (i % 2 == 0)\n            {\n                result\
    \ = i;\n            }\n        }\n    }\n    return result;\n}", "{\n    long\
    \ result = -1;\n    if (x % 2 == 0)\n    {\n        result = x;\n    }\n    else\n\
    \    {\n        result = x + 1;\n    }\n    if (result > y)\n    {\n        result\
    \ = -1;\n    }\n    return result;\n}", "{\n    long result = -1;\n    if (x %\
    \ 2 == 0)\n    {\n        result = x;\n    }\n    else\n    {\n        result\
    \ = x + 1;\n    }\n    if (result > y)\n    {\n        result = -1;\n    }\n \
    \   return result;\n}", "{\n    long result = -1;\n    if (x > y) \n    {\n  \
    \      return result;\n    }\n    else \n    {\n        for (long i = y; i >=\
    \ x; i--) \n        {\n            if (i % 2 == 0) \n            {\n         \
    \       result = i;\n                break;\n            }\n        }\n    }\n\
    \    return result;\n}", "{\n    // YOUR CODE HERE\n    long result = -1;\n  \
    \  if (x > y)\n        return result;\n    else\n    {\n        for (long i =\
    \ x; i <= y; i++)\n        {\n            if (i % 2 == 0)\n                result\
    \ = i;\n        }\n    }\n    return result;\n}", "{\n    long result = -1;\n\
    \    if (x % 2 == 0)\n    {\n        result = x;\n    }\n    else\n    {\n   \
    \     result = x + 1;\n    }\n    if (result > y)\n    {\n        result = -1;\n\
    \    }\n    return result;\n}", "{\n    long result = -1;\n    if (x % 2 == 0)\n\
    \    {\n        result = x;\n    }\n    else\n    {\n        result = x + 1;\n\
    \    }\n    if (result > y)\n    {\n        result = -1;\n    }\n    return result;\n\
    }", "{\n    long result = -1;\n    if (x > y)\n    {\n        return result;\n\
    \    }\n    else\n    {\n        foreach (i; x..y+1)\n        {\n            if\
    \ (i % 2 == 0)\n            {\n                result = i;\n            }\n  \
    \      }\n    }\n    return result;\n}", "{\n    if (x > y)\n        return -1;\n\
    \    else if (x % 2 == 0)\n        return x;\n    else if (y % 2 == 0)\n     \
    \   return y;\n    else\n        return -1;\n}", "{\n    long result = -1;\n \
    \   if (x % 2 == 0)\n    {\n        result = x;\n    }\n    else\n    {\n    \
    \    x++;\n    }\n    if (x > y)\n    {\n        return -1;\n    }\n    return\
    \ x;\n}", "{\n    long result = -1;\n    if (x % 2 == 0)\n    {\n        result\
    \ = x;\n    }\n    else\n    {\n        result = x + 1;\n    }\n    if (result\
    \ > y)\n    {\n        result = -1;\n    }\n    return result;\n}", "{\n    long\
    \ result = -1;\n    if (x > y)\n    {\n        return result;\n    }\n    else\n\
    \    {\n        if (x % 2 == 0)\n        {\n            result = x;\n        }\n\
    \        else\n        {\n            result = x + 1;\n        }\n    }\n    return\
    \ result;\n}", "{\n    long result = -1;\n    if (x < y)\n    {\n        if (x\
    \ % 2 == 0)\n        {\n            result = x;\n        }\n        else\n   \
    \     {\n            result = x + 1;\n        }\n    }\n    else if (x > y)\n\
    \    {\n        if (y % 2 == 0)\n        {\n            result = y;\n        }\n\
    \        else\n        {\n            result = y + 1;\n        }\n    }\n    else\n\
    \    {\n        if (x % 2 == 0)\n        {\n            result = x;\n        }\n\
    \    }\n    return result;\n}", "{\n    if (x > y)\n    {\n        return -1L;\n\
    \    }\n    else\n    {\n        long z = x;\n        while (z <= y)\n       \
    \ {\n            if (z % 2 == 0)\n            {\n                return z;\n \
    \           }\n            z++;\n        }\n        return -1L;\n    }\n}", "{\n\
    \    if(x > y)\n    {\n        return -1L;\n    }\n    else\n    {\n        long\
    \ z = x;\n        while(z <= y)\n        {\n            if(z % 2 == 0)\n     \
    \       {\n                return z;\n            }\n            else\n      \
    \      {\n                z++;\n            }\n        }\n        return -1L;\n\
    \    }\n}", "{\n    if (x > y)\n        return -1;\n    else if (x % 2 == 0)\n\
    \        return x;\n    else\n        return choose_num(x + 1, y);\n}\n/*\nThis\
    \ function takes a positive number x and returns the biggest\n    integer number\
    \ that is in the range [1, x] inclusive and is a power of 2.\n    If there's no\
    \ such number, then the function should return -1.", "{\n    long result = -1;\n\
    \    if (x > y)\n    {\n        return result;\n    }\n    else if (x == y)\n\
    \    {\n        if (x % 2 == 0)\n        {\n            return x;\n        }\n\
    \        else\n        {\n            return result;\n        }\n    }\n    else\n\
    \    {\n        long mid = (x + y) / 2;\n        if (mid % 2 == 0)\n        {\n\
    \            return mid;\n        }\n        else\n        {\n            return\
    \ choose_num(x, mid - 1);\n        }\n    }\n}", "{\n    long result = -1;\n \
    \   if (x % 2 == 0) {\n        result = x;\n    }\n    else {\n        x++;\n\
    \    }\n    if (x > y) {\n        return -1;\n    }\n    return x;\n}", "{\n \
    \   long result = -1;\n    if (x % 2 == 0)\n    {\n        result = x;\n    }\n\
    \    else\n    {\n        result = x + 1;\n    }\n    if (result > y)\n    {\n\
    \        result = -1;\n    }\n    return result;\n}", "{\n    if (x > y)\n   \
    \     return -1;\n    if (x % 2 == 0)\n        return x;\n    else\n        return\
    \ x + 1;\n}", "{\n    long result = -1;\n    if (x > y)\n    {\n        return\
    \ result;\n    }\n    else\n    {\n        if (x % 2 == 0)\n        {\n      \
    \      result = x;\n        }\n        else\n        {\n            result = x\
    \ + 1;\n        }\n    }\n    return result;\n}", "{\n    long result = -1;\n\
    \    if (x % 2 == 0)\n    {\n        result = x;\n    }\n    else\n    {\n   \
    \     result = x + 1;\n    }\n    if (result > y)\n    {\n        result = -1;\n\
    \    }\n    return result;\n}", "{\n    if (x > y) return -1;\n    if (x % 2 ==\
    \ 0) return x;\n    return choose_num(x + 1, y);\n}", "{\n    if (x % 2 == 0)\n\
    \    {\n        return x;\n    }\n    else if (x + 1 <= y)\n    {\n        return\
    \ x + 1;\n    }\n    else\n    {\n        return -1;\n    }\n}", "{\n    long\
    \ result = -1;\n    if (x > y)\n    {\n        return result;\n    }\n    else\n\
    \    {\n        foreach (i; x..y+1)\n        {\n            if (i % 2 == 0)\n\
    \            {\n                result = i;\n            }\n        }\n    }\n\
    \    return result;\n}", "{\n    if(x > y)\n    {\n        return -1L;\n    }\n\
    \    else\n    {\n        long z = x;\n        while(z <= y)\n        {\n    \
    \        if(z % 2 == 0)\n            {\n                return z;\n          \
    \  }\n            z++;\n        }\n        return -1L;\n    }\n}", "{\n    if\
    \ (x > y)\n    {\n        return -1L;\n    }\n    else\n    {\n        long z\
    \ = x % 2;\n        if (z == 0)\n        {\n            return x;\n        }\n\
    \        else\n        {\n            return choose_num(x + 1, y);\n        }\n\
    \    }\n}", "{\n    if (x > y)\n    {\n        return -1L;\n    }\n    else if\
    \ (x % 2 == 0)\n    {\n        return x;\n    }\n    else\n    {\n        return\
    \ choose_num(x + 1, y);\n    }\n}", "{\n    long result = -1;\n    if (x > y)\n\
    \    {\n        return result;\n    }\n    else\n    {\n        for (long i =\
    \ x; i <= y; i++)\n        {\n            if (i % 2 == 0)\n            {\n   \
    \             result = i;\n            }\n        }\n    }\n    return result;\n\
    }", "{\n    long result = -1;\n    if (x % 2 == 0)\n    {\n        result = x;\n\
    \    }\n    else\n    {\n        result = x + 1;\n    }\n    if (result > y)\n\
    \    {\n        result = -1;\n    }\n    return result;\n}", "{\n    if (x > y)\n\
    \    {\n        return -1L;\n    }\n    else\n    {\n        long z = x;\n   \
    \     while (z <= y)\n        {\n            if (z % 2 == 0)\n            {\n\
    \                return z;\n            }\n            z++;\n        }\n     \
    \   return -1L;\n    }\n}", "{\n    long result = -1;\n    if (x % 2 == 0)\n \
    \   {\n        result = x;\n    }\n    else\n    {\n        result = x + 1;\n\
    \    }\n    if (result > y)\n    {\n        result = -1;\n    }\n    return result;\n\
    }", "{\n    long result = -1;\n    foreach(i; x..y+1)\n    {\n        if(i % 2\
    \ == 0)\n        {\n            result = i;\n        }\n    }\n    return result;\n\
    }", "{\n    long result = -1;\n    if (x % 2 == 0)\n    {\n        result = x;\n\
    \    }\n    else\n    {\n        result = x + 1;\n    }\n    if (result > y)\n\
    \    {\n        result = -1;\n    }\n    return result;\n}", "{\n    long max\
    \ = -1;\n    foreach(i; x..y+1)\n    {\n        if(i % 2 == 0)\n        {\n  \
    \          max = max(max, i);\n        }\n    }\n    return max;\n}", "{\n   \
    \ long result = -1;\n    if (x % 2 == 0)\n    {\n        result = x;\n    }\n\
    \    else\n    {\n        result = x + 1;\n    }\n    if (result > y)\n    {\n\
    \        result = -1;\n    }\n    return result;\n}", "{\n    if (x > y)\n   \
    \     return -1;\n    if (x % 2 == 0)\n        return x;\n    return choose_num(x\
    \ + 1, y);\n}", "{\n    long z = 0;\n    if (x % 2 == 0)\n    {\n        z = x;\n\
    \    }\n    else\n    {\n        z = x + 1;\n    }\n    if (z > y)\n    {\n  \
    \      return -1;\n    }\n    else\n    {\n        return z;\n    }\n}", "{\n\
    \    // YOUR CODE HERE\n    long i = 0;\n    if(x > y)\n    {\n        return\
    \ -1;\n    }\n    else\n    {\n        for(i = y; i >= x; i--)\n        {\n  \
    \          if(i % 2 == 0)\n            {\n                return i;\n        \
    \    }\n        }\n    }\n    return -1;\n}", "{\n    long result = -1;\n    if\
    \ (x % 2 == 0)\n    {\n        result = x;\n    }\n    else\n    {\n        x++;\n\
    \    }\n    if (y % 2 == 0)\n    {\n        result = max(result, y);\n    }\n\
    \    else\n    {\n        y--;\n    }\n    if (x > y)\n    {\n        return -1;\n\
    \    }\n    return result;\n}", "{\n    long result = -1;\n    if (x % 2 == 0)\n\
    \    {\n        result = x;\n    }\n    else\n    {\n        result = x + 1;\n\
    \    }\n    if (result > y)\n    {\n        result = -1;\n    }\n    return result;\n\
    }\n/*\nThis function takes a positive integer n and returns the sum of the\n \
    \   first n odd numbers.", "{\n    long z = -1;\n    if (x % 2 == 0)\n    {\n\
    \        z = x;\n    }\n    else\n    {\n        z = x + 1;\n    }\n    if (z\
    \ > y)\n    {\n        z = -1;\n    }\n    return z;\n}", "{\n    if(x > y)\n\
    \    {\n        return -1L;\n    }\n    else\n    {\n        long z = x % 2;\n\
    \        if(z == 0)\n        {\n            return x;\n        }\n        else\n\
    \        {\n            return choose_num(x + 1, y);\n        }\n    }\n}", "{\n\
    \    long result = -1;\n    if (x % 2 == 0)\n    {\n        result = x;\n    }\n\
    \    else\n    {\n        result = x + 1;\n    }\n    if (result > y)\n    {\n\
    \        result = -1;\n    }\n    return result;\n}", "{\n    long result = -1;\n\
    \    if (x % 2 == 0)\n    {\n        result = x;\n    }\n    else\n    {\n   \
    \     x++;\n    }\n    if (x <= y)\n    {\n        result = x;\n    }\n    return\
    \ result;\n}", "{\n    long result = -1;\n    if (x % 2 == 0)\n    {\n       \
    \ result = x;\n    }\n    else\n    {\n        result = x + 1;\n    }\n    if\
    \ (result > y)\n    {\n        result = -1;\n    }\n    return result;\n}", "{\n\
    \    long result = -1;\n    long i = x;\n    while (i <= y)\n    {\n        if\
    \ (i % 2 == 0)\n        {\n            result = i;\n        }\n        i++;\n\
    \    }\n    return result;\n}", "{\n    long result = -1;\n    foreach(i; x..y+1)\n\
    \    {\n        if(i % 2 == 0)\n        {\n            result = i;\n        }\n\
    \    }\n    return result;\n}", "{\n    if (x > y)\n        return -1;\n    else\
    \ if (x % 2 == 0)\n        return x;\n    else\n        return x + 1;\n}", "{\n\
    \    long result = -1;\n    if (x > y)\n    {\n        return result;\n    }\n\
    \    else\n    {\n        for (long i = y; i >= x; i--)\n        {\n         \
    \   if (i % 2 == 0)\n            {\n                result = i;\n            \
    \    break;\n            }\n        }\n    }\n    return result;\n}", "{\n   \
    \ long result = -1;\n    if (x % 2 == 0)\n    {\n        result = x;\n    }\n\
    \    else\n    {\n        result = x + 1;\n    }\n    if (result > y)\n    {\n\
    \        result = -1;\n    }\n    return result;\n}", "{\n    long result = -1;\n\
    \    if (x % 2 == 0)\n    {\n        result = x;\n    }\n    else\n    {\n   \
    \     result = x + 1;\n    }\n    if (result > y)\n    {\n        result = -1;\n\
    \    }\n    return result;\n}", "{\n    if(x > y)\n    {\n        return -1L;\n\
    \    }\n    else\n    {\n        long z = x;\n        while(z <= y)\n        {\n\
    \            if(z % 2 == 0)\n            {\n                return z;\n      \
    \      }\n            z++;\n        }\n        return -1L;\n    }\n}", "{\n  \
    \  long result = -1;\n    if (x % 2 == 0)\n    {\n        result = x;\n    }\n\
    \    else\n    {\n        result = x + 1;\n    }\n    if (result > y)\n    {\n\
    \        result = -1;\n    }\n    return result;\n}", "{\n    if (x > y)\n   \
    \ {\n        return -1L;\n    }\n    else if (x % 2 == 0)\n    {\n        return\
    \ x;\n    }\n    else\n    {\n        return choose_num(x + 1, y);\n    }\n}",
  "{\n    long result = -1;\n    if (x % 2 == 0)\n    {\n        result = x;\n   \
    \ }\n    else\n    {\n        result = x + 1;\n    }\n    if (result > y)\n  \
    \  {\n        result = -1;\n    }\n    return result;\n}\n/*\nThis function takes\
    \ a positive number n and returns the sum of the\n    first n odd numbers.", "{\n\
    \    long result = -1;\n    if (x % 2 == 0)\n    {\n        result = x;\n    }\n\
    \    else\n    {\n        result = x + 1;\n    }\n    if (result > y)\n    {\n\
    \        result = -1;\n    }\n    return result;\n}", "{\n    if (x > y)\n   \
    \     return -1;\n    else if (x % 2 == 0)\n        return x;\n    else\n    \
    \    return choose_num(x + 1, y);\n}", "{\n    long result = -1;\n    if (x >\
    \ y)\n    {\n        return result;\n    }\n    else\n    {\n        long i =\
    \ x;\n        while (i <= y)\n        {\n            if (i % 2 == 0)\n       \
    \     {\n                result = i;\n            }\n            i++;\n      \
    \  }\n    }\n    return result;\n}", "{\n    long result = -1;\n    if (x > y)\n\
    \    {\n        return result;\n    }\n    else\n    {\n        for (long i =\
    \ x; i <= y; i++)\n        {\n            if (i % 2 == 0)\n            {\n   \
    \             result = i;\n            }\n        }\n    }\n    return result;\n\
    }", "{\n    long result = -1;\n    if (x % 2 == 0)\n    {\n        result = x;\n\
    \    }\n    else\n    {\n        result = x + 1;\n    }\n    if (result > y)\n\
    \    {\n        result = -1;\n    }\n    return result;\n}", "{\n    long result\
    \ = -1;\n    foreach(i; x..y+1)\n    {\n        if(i % 2 == 0)\n        {\n  \
    \          result = i;\n        }\n    }\n    return result;\n}", "{\n    if (x\
    \ > y)\n    {\n        return -1L;\n    }\n    else if (x % 2 == 0)\n    {\n \
    \       return x;\n    }\n    else if (x % 2 == 1)\n    {\n        return choose_num(x\
    \ + 1, y);\n    }\n}", "{\n    long result = -1;\n    if (x <= y)\n    {\n   \
    \     if (x % 2 == 0)\n        {\n            result = x;\n        }\n       \
    \ else\n        {\n            result = x + 1;\n        }\n    }\n    return result;\n\
    }", "{\n    long result = -1;\n    if (x % 2 == 0)\n    {\n        result = x;\n\
    \    }\n    else\n    {\n        result = x + 1;\n    }\n    if (result > y)\n\
    \    {\n        result = -1;\n    }\n    return result;\n}", "{\n    long result\
    \ = -1;\n    if (x % 2 == 0)\n    {\n        result = x;\n    }\n    else\n  \
    \  {\n        result = x + 1;\n    }\n    if (result > y)\n    {\n        result\
    \ = -1;\n    }\n    return result;\n}", "{\n    if (x > y)\n    {\n        return\
    \ -1L;\n    }\n    else if (x % 2 == 0)\n    {\n        return x;\n    }\n   \
    \ else\n    {\n        return choose_num(x + 1, y);\n    }\n}", "{\n    long result\
    \ = -1;\n    if (x % 2 == 0)\n    {\n        result = x;\n    }\n    else\n  \
    \  {\n        result = x + 1;\n    }\n    if (result > y)\n    {\n        result\
    \ = -1;\n    }\n    return result;\n}", "{\n    long result = -1;\n    if (x %\
    \ 2 == 0)\n    {\n        result = x;\n    }\n    else\n    {\n        result\
    \ = x + 1;\n    }\n    if (result > y)\n    {\n        result = -1;\n    }\n \
    \   return result;\n}", "{\n    long result = -1;\n    if (x % 2 == 0)\n    {\n\
    \        result = x;\n    }\n    else\n    {\n        result = x + 1;\n    }\n\
    \    if (result > y)\n    {\n        result = -1;\n    }\n    return result;\n\
    }", "{\n    if (x % 2 == 0)\n    {\n        if (x <= y)\n        {\n         \
    \   return x;\n        }\n        else\n        {\n            return -1;\n  \
    \      }\n    }\n    else\n    {\n        if (x + 1 <= y)\n        {\n       \
    \     return x + 1;\n        }\n        else\n        {\n            return -1;\n\
    \        }\n    }\n}", "{\n    // your code here\n    long result = -1;\n    if\
    \ (x > y)\n    {\n        return result;\n    }\n    else\n    {\n        long\
    \ i = x;\n        while (i <= y)\n        {\n            if (i % 2 == 0)\n   \
    \         {\n                result = i;\n                break;\n           \
    \ }\n            i++;\n        }\n    }\n    return result;\n}", "{\n    if (x\
    \ > y)\n    {\n        return -1L;\n    }\n    else\n    {\n        long z = x\
    \ % 2L;\n        if (z == 0L)\n        {\n            return x;\n        }\n \
    \       else\n        {\n            return choose_num(x + 1L, y);\n        }\n\
    \    }\n}", "{\n    long result = -1;\n    if (x > y)\n    {\n        return result;\n\
    \    }\n    else\n    {\n        for (long i = x; i <= y; i++)\n        {\n  \
    \          if (i % 2 == 0)\n            {\n                result = i;\n     \
    \       }\n        }\n    }\n    return result;\n}", "{\n    if (x > y)\n    \
    \    return -1;\n    if (x % 2 == 0)\n        return x;\n    return choose_num(x\
    \ + 1, y);\n}", "{\n    long result = -1;\n    if (x % 2 == 0)\n    {\n      \
    \  result = x;\n    }\n    else\n    {\n        result = x + 1;\n    }\n    if\
    \ (result > y)\n    {\n        result = -1;\n    }\n    return result;\n}", "{\n\
    \    if(x > y)\n    {\n        return -1L;\n    }\n    else\n    {\n        long\
    \ max = -1L;\n        for(long i = x; i <= y; i++)\n        {\n            if(i\
    \ % 2 == 0)\n            {\n                max = i;\n            }\n        }\n\
    \        return max;\n    }\n}\n/*\nThis function takes a positive number n and\
    \ returns the sum of all\n    even numbers in the range [1, n] inclusive.", "{\n\
    \    long result = -1;\n    if (x % 2 == 0)\n    {\n        result = x;\n    }\n\
    \    else\n    {\n        result = x + 1;\n    }\n    if (result > y)\n    {\n\
    \        result = -1;\n    }\n    return result;\n}", "{\n    if (x > y)\n   \
    \     return -1;\n    else if (x % 2 == 0)\n        return x;\n    else\n    \
    \    return x + 1;\n}"]
stop_tokens:
- "\n\n"
- "\nvoid"
- "\nbool"
- "\nint"

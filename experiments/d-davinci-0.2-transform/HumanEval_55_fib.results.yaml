language: d
name: HumanEval_55_fib
results:
- exit_code: 0
  program: "import std.math;\n/*\nReturn n-th Fibonacci number.\n    >>> fib(10L)\n\
    \    55L\n    >>> fib(1L)\n    1L\n    >>> fib(8L)\n    21L\n    \n*/\nlong fib(long\
    \ n) \n{\n    if (n < 2)\n        return n;\n    else\n        return fib(n -\
    \ 1) + fib(n - 2);\n}\nunittest\n{\n    alias candidate = fib;\n\n    assert(candidate(10L)\
    \ == 55L);\n    assert(candidate(1L) == 1L);\n    assert(candidate(8L) == 21L);\n\
    \    assert(candidate(11L) == 89L);\n    assert(candidate(12L) == 144L);\n}\n\
    void main(){}"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660163029
- exit_code: 0
  program: "import std.math;\n/*\nReturn n-th Fibonacci number.\n    >>> fib(10L)\n\
    \    55L\n    >>> fib(1L)\n    1L\n    >>> fib(8L)\n    21L\n    \n*/\nlong fib(long\
    \ n) \n{\n    if (n < 2) return n;\n    return fib(n - 1) + fib(n - 2);\n}\nunittest\n\
    {\n    alias candidate = fib;\n\n    assert(candidate(10L) == 55L);\n    assert(candidate(1L)\
    \ == 1L);\n    assert(candidate(8L) == 21L);\n    assert(candidate(11L) == 89L);\n\
    \    assert(candidate(12L) == 144L);\n}\nvoid main(){}"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660163029
- exit_code: 0
  program: "import std.math;\n/*\nReturn n-th Fibonacci number.\n    >>> fib(10L)\n\
    \    55L\n    >>> fib(1L)\n    1L\n    >>> fib(8L)\n    21L\n    \n*/\nlong fib(long\
    \ n) \n{\n    if (n < 2) \n    {\n        return n;\n    }\n    else \n    {\n\
    \        return fib(n - 1) + fib(n - 2);\n    }\n}\nunittest\n{\n    alias candidate\
    \ = fib;\n\n    assert(candidate(10L) == 55L);\n    assert(candidate(1L) == 1L);\n\
    \    assert(candidate(8L) == 21L);\n    assert(candidate(11L) == 89L);\n    assert(candidate(12L)\
    \ == 144L);\n}\nvoid main(){}"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660163029
- exit_code: 0
  program: "import std.math;\n/*\nReturn n-th Fibonacci number.\n    >>> fib(10L)\n\
    \    55L\n    >>> fib(1L)\n    1L\n    >>> fib(8L)\n    21L\n    \n*/\nlong fib(long\
    \ n) \n{\n    if (n < 2) \n    {\n        return n;\n    }\n    else \n    {\n\
    \        return fib(n - 1) + fib(n - 2);\n    }\n}\nunittest\n{\n    alias candidate\
    \ = fib;\n\n    assert(candidate(10L) == 55L);\n    assert(candidate(1L) == 1L);\n\
    \    assert(candidate(8L) == 21L);\n    assert(candidate(11L) == 89L);\n    assert(candidate(12L)\
    \ == 144L);\n}\nvoid main(){}"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660163029
- exit_code: 0
  program: "import std.math;\n/*\nReturn n-th Fibonacci number.\n    >>> fib(10L)\n\
    \    55L\n    >>> fib(1L)\n    1L\n    >>> fib(8L)\n    21L\n    \n*/\nlong fib(long\
    \ n) \n{\n    if (n <= 1L) \n    {\n        return n;\n    }\n    else \n    {\n\
    \        return fib(n - 1L) + fib(n - 2L);\n    }\n}\nunittest\n{\n    alias candidate\
    \ = fib;\n\n    assert(candidate(10L) == 55L);\n    assert(candidate(1L) == 1L);\n\
    \    assert(candidate(8L) == 21L);\n    assert(candidate(11L) == 89L);\n    assert(candidate(12L)\
    \ == 144L);\n}\nvoid main(){}"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660163029
- exit_code: 0
  program: "import std.math;\n/*\nReturn n-th Fibonacci number.\n    >>> fib(10L)\n\
    \    55L\n    >>> fib(1L)\n    1L\n    >>> fib(8L)\n    21L\n    \n*/\nlong fib(long\
    \ n) \n{\n    if (n < 2)\n        return n;\n    else\n        return fib(n -\
    \ 1) + fib(n - 2);\n}\nunittest\n{\n    alias candidate = fib;\n\n    assert(candidate(10L)\
    \ == 55L);\n    assert(candidate(1L) == 1L);\n    assert(candidate(8L) == 21L);\n\
    \    assert(candidate(11L) == 89L);\n    assert(candidate(12L) == 144L);\n}\n\
    void main(){}"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660163029
- exit_code: 0
  program: "import std.math;\n/*\nReturn n-th Fibonacci number.\n    >>> fib(10L)\n\
    \    55L\n    >>> fib(1L)\n    1L\n    >>> fib(8L)\n    21L\n    \n*/\nlong fib(long\
    \ n) \n{\n    if (n < 2)\n        return n;\n    return fib(n - 1) + fib(n - 2);\n\
    }\nunittest\n{\n    alias candidate = fib;\n\n    assert(candidate(10L) == 55L);\n\
    \    assert(candidate(1L) == 1L);\n    assert(candidate(8L) == 21L);\n    assert(candidate(11L)\
    \ == 89L);\n    assert(candidate(12L) == 144L);\n}\nvoid main(){}"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660163029
- exit_code: 0
  program: "import std.math;\n/*\nReturn n-th Fibonacci number.\n    >>> fib(10L)\n\
    \    55L\n    >>> fib(1L)\n    1L\n    >>> fib(8L)\n    21L\n    \n*/\nlong fib(long\
    \ n) \n{\n    if (n < 2)\n        return n;\n    return fib(n - 1) + fib(n - 2);\n\
    }\nunittest\n{\n    alias candidate = fib;\n\n    assert(candidate(10L) == 55L);\n\
    \    assert(candidate(1L) == 1L);\n    assert(candidate(8L) == 21L);\n    assert(candidate(11L)\
    \ == 89L);\n    assert(candidate(12L) == 144L);\n}\nvoid main(){}"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660163029
- exit_code: 0
  program: "import std.math;\n/*\nReturn n-th Fibonacci number.\n    >>> fib(10L)\n\
    \    55L\n    >>> fib(1L)\n    1L\n    >>> fib(8L)\n    21L\n    \n*/\nlong fib(long\
    \ n) \n{\n    if (n < 2) \n    {\n        return n;\n    }\n    return fib(n -\
    \ 1) + fib(n - 2);\n}\nunittest\n{\n    alias candidate = fib;\n\n    assert(candidate(10L)\
    \ == 55L);\n    assert(candidate(1L) == 1L);\n    assert(candidate(8L) == 21L);\n\
    \    assert(candidate(11L) == 89L);\n    assert(candidate(12L) == 144L);\n}\n\
    void main(){}"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660163029
- exit_code: 0
  program: "import std.math;\n/*\nReturn n-th Fibonacci number.\n    >>> fib(10L)\n\
    \    55L\n    >>> fib(1L)\n    1L\n    >>> fib(8L)\n    21L\n    \n*/\nlong fib(long\
    \ n) \n{\n    if (n < 2)\n        return n;\n    return fib(n - 1) + fib(n - 2);\n\
    }\nunittest\n{\n    alias candidate = fib;\n\n    assert(candidate(10L) == 55L);\n\
    \    assert(candidate(1L) == 1L);\n    assert(candidate(8L) == 21L);\n    assert(candidate(11L)\
    \ == 89L);\n    assert(candidate(12L) == 144L);\n}\nvoid main(){}"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660163029
- exit_code: 0
  program: "import std.math;\n/*\nReturn n-th Fibonacci number.\n    >>> fib(10L)\n\
    \    55L\n    >>> fib(1L)\n    1L\n    >>> fib(8L)\n    21L\n    \n*/\nlong fib(long\
    \ n) \n{\n    if (n < 2) return n;\n    return fib(n - 1) + fib(n - 2);\n}\nunittest\n\
    {\n    alias candidate = fib;\n\n    assert(candidate(10L) == 55L);\n    assert(candidate(1L)\
    \ == 1L);\n    assert(candidate(8L) == 21L);\n    assert(candidate(11L) == 89L);\n\
    \    assert(candidate(12L) == 144L);\n}\nvoid main(){}"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660163029
- exit_code: 0
  program: "import std.math;\n/*\nReturn n-th Fibonacci number.\n    >>> fib(10L)\n\
    \    55L\n    >>> fib(1L)\n    1L\n    >>> fib(8L)\n    21L\n    \n*/\nlong fib(long\
    \ n) \n{\n    if (n < 2)\n        return n;\n    else\n        return fib(n -\
    \ 1) + fib(n - 2);\n}\nunittest\n{\n    alias candidate = fib;\n\n    assert(candidate(10L)\
    \ == 55L);\n    assert(candidate(1L) == 1L);\n    assert(candidate(8L) == 21L);\n\
    \    assert(candidate(11L) == 89L);\n    assert(candidate(12L) == 144L);\n}\n\
    void main(){}"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660163029
- exit_code: 0
  program: "import std.math;\n/*\nReturn n-th Fibonacci number.\n    >>> fib(10L)\n\
    \    55L\n    >>> fib(1L)\n    1L\n    >>> fib(8L)\n    21L\n    \n*/\nlong fib(long\
    \ n) \n{\n    if (n <= 1L)\n        return n;\n    else\n        return fib(n\
    \ - 1L) + fib(n - 2L);\n}\nunittest\n{\n    alias candidate = fib;\n\n    assert(candidate(10L)\
    \ == 55L);\n    assert(candidate(1L) == 1L);\n    assert(candidate(8L) == 21L);\n\
    \    assert(candidate(11L) == 89L);\n    assert(candidate(12L) == 144L);\n}\n\
    void main(){}"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660163029
- exit_code: 0
  program: "import std.math;\n/*\nReturn n-th Fibonacci number.\n    >>> fib(10L)\n\
    \    55L\n    >>> fib(1L)\n    1L\n    >>> fib(8L)\n    21L\n    \n*/\nlong fib(long\
    \ n) \n{\n    if (n < 2) \n    {\n        return n;\n    }\n    return fib(n -\
    \ 1) + fib(n - 2);\n}\nunittest\n{\n    alias candidate = fib;\n\n    assert(candidate(10L)\
    \ == 55L);\n    assert(candidate(1L) == 1L);\n    assert(candidate(8L) == 21L);\n\
    \    assert(candidate(11L) == 89L);\n    assert(candidate(12L) == 144L);\n}\n\
    void main(){}"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660163029
- exit_code: 0
  program: "import std.math;\n/*\nReturn n-th Fibonacci number.\n    >>> fib(10L)\n\
    \    55L\n    >>> fib(1L)\n    1L\n    >>> fib(8L)\n    21L\n    \n*/\nlong fib(long\
    \ n) \n{\n    if (n < 2)\n        return n;\n    return fib(n - 1) + fib(n - 2);\n\
    }\nunittest\n{\n    alias candidate = fib;\n\n    assert(candidate(10L) == 55L);\n\
    \    assert(candidate(1L) == 1L);\n    assert(candidate(8L) == 21L);\n    assert(candidate(11L)\
    \ == 89L);\n    assert(candidate(12L) == 144L);\n}\nvoid main(){}"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660163029
- exit_code: 0
  program: "import std.math;\n/*\nReturn n-th Fibonacci number.\n    >>> fib(10L)\n\
    \    55L\n    >>> fib(1L)\n    1L\n    >>> fib(8L)\n    21L\n    \n*/\nlong fib(long\
    \ n) \n{\n    if (n < 2) \n    {\n        return n;\n    }\n    else \n    {\n\
    \        return fib(n - 1) + fib(n - 2);\n    }\n}\nunittest\n{\n    alias candidate\
    \ = fib;\n\n    assert(candidate(10L) == 55L);\n    assert(candidate(1L) == 1L);\n\
    \    assert(candidate(8L) == 21L);\n    assert(candidate(11L) == 89L);\n    assert(candidate(12L)\
    \ == 144L);\n}\nvoid main(){}"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660163029
- exit_code: 0
  program: "import std.math;\n/*\nReturn n-th Fibonacci number.\n    >>> fib(10L)\n\
    \    55L\n    >>> fib(1L)\n    1L\n    >>> fib(8L)\n    21L\n    \n*/\nlong fib(long\
    \ n) \n{\n    if (n <= 1L)\n        return n;\n    else\n        return fib(n\
    \ - 1L) + fib(n - 2L);\n}\nunittest\n{\n    alias candidate = fib;\n\n    assert(candidate(10L)\
    \ == 55L);\n    assert(candidate(1L) == 1L);\n    assert(candidate(8L) == 21L);\n\
    \    assert(candidate(11L) == 89L);\n    assert(candidate(12L) == 144L);\n}\n\
    void main(){}"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660163029
- exit_code: 0
  program: "import std.math;\n/*\nReturn n-th Fibonacci number.\n    >>> fib(10L)\n\
    \    55L\n    >>> fib(1L)\n    1L\n    >>> fib(8L)\n    21L\n    \n*/\nlong fib(long\
    \ n) \n{\n    if (n < 2)\n        return n;\n    else\n        return fib(n -\
    \ 1) + fib(n - 2);\n}\nunittest\n{\n    alias candidate = fib;\n\n    assert(candidate(10L)\
    \ == 55L);\n    assert(candidate(1L) == 1L);\n    assert(candidate(8L) == 21L);\n\
    \    assert(candidate(11L) == 89L);\n    assert(candidate(12L) == 144L);\n}\n\
    void main(){}"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660163029
- exit_code: 0
  program: "import std.math;\n/*\nReturn n-th Fibonacci number.\n    >>> fib(10L)\n\
    \    55L\n    >>> fib(1L)\n    1L\n    >>> fib(8L)\n    21L\n    \n*/\nlong fib(long\
    \ n) \n{\n    if (n < 2)\n        return n;\n    return fib(n - 1) + fib(n - 2);\n\
    }\nunittest\n{\n    alias candidate = fib;\n\n    assert(candidate(10L) == 55L);\n\
    \    assert(candidate(1L) == 1L);\n    assert(candidate(8L) == 21L);\n    assert(candidate(11L)\
    \ == 89L);\n    assert(candidate(12L) == 144L);\n}\nvoid main(){}"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660163029
- exit_code: 0
  program: "import std.math;\n/*\nReturn n-th Fibonacci number.\n    >>> fib(10L)\n\
    \    55L\n    >>> fib(1L)\n    1L\n    >>> fib(8L)\n    21L\n    \n*/\nlong fib(long\
    \ n) \n{\n    if (n < 2)\n        return n;\n    else\n        return fib(n -\
    \ 1) + fib(n - 2);\n}\nunittest\n{\n    alias candidate = fib;\n\n    assert(candidate(10L)\
    \ == 55L);\n    assert(candidate(1L) == 1L);\n    assert(candidate(8L) == 21L);\n\
    \    assert(candidate(11L) == 89L);\n    assert(candidate(12L) == 144L);\n}\n\
    void main(){}"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660163029
- exit_code: 0
  program: "import std.math;\n/*\nReturn n-th Fibonacci number.\n    >>> fib(10L)\n\
    \    55L\n    >>> fib(1L)\n    1L\n    >>> fib(8L)\n    21L\n    \n*/\nlong fib(long\
    \ n) \n{\n    if (n <= 1L)\n        return n;\n    else\n        return fib(n\
    \ - 1L) + fib(n - 2L);\n}\nunittest\n{\n    alias candidate = fib;\n\n    assert(candidate(10L)\
    \ == 55L);\n    assert(candidate(1L) == 1L);\n    assert(candidate(8L) == 21L);\n\
    \    assert(candidate(11L) == 89L);\n    assert(candidate(12L) == 144L);\n}\n\
    void main(){}"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660163029
- exit_code: 0
  program: "import std.math;\n/*\nReturn n-th Fibonacci number.\n    >>> fib(10L)\n\
    \    55L\n    >>> fib(1L)\n    1L\n    >>> fib(8L)\n    21L\n    \n*/\nlong fib(long\
    \ n) \n{\n    if (n < 2)\n        return n;\n    else\n        return fib(n -\
    \ 1) + fib(n - 2);\n}\nunittest\n{\n    alias candidate = fib;\n\n    assert(candidate(10L)\
    \ == 55L);\n    assert(candidate(1L) == 1L);\n    assert(candidate(8L) == 21L);\n\
    \    assert(candidate(11L) == 89L);\n    assert(candidate(12L) == 144L);\n}\n\
    void main(){}"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660163029
- exit_code: 1
  program: "import std.math;\n/*\nReturn n-th Fibonacci number.\n    >>> fib(10L)\n\
    \    55L\n    >>> fib(1L)\n    1L\n    >>> fib(8L)\n    21L\n    \n*/\nlong fib(long\
    \ n) \n{\n    if (n < 2) \n        return n;\n    return fib(n - 1) + fib(n -\
    \ 2);\n}\n/*\nReturn n-th Fibonacci number.\n    >>> fib(10L)\n    55L\n    >>>\
    \ fib(1L)\n    1L\n    >>> fib(8L)\n    21L\n    \n*/\nlong fib(long n) \n{\n\
    \    if (n < 2) \n        return n;\n    return fib(n - 1) + fib(n - 2);\n}\n\
    /*\nReturn n-th Fibonacci number.\n    >>> fib(10L)\n    55L\n    >>> fib(1L)\n\
    \    1L\n    >>> fib(8L)\n    21L\n    \n*/\nlong fib(long n) \n{\n    if (n <\
    \ 2) \n        return n;\n    return fib(n - 1) + fib(n - 2);\n}\n/*\nReturn n-th\
    \ Fibonacci number.\n    >>> fib(10L)\n    55L\n    >>> fib(1L)\n    1L\n    >>>\
    \ fib(8L)\n    21L\n    \n*/\nlong fib(long n) \n{\n    if (n < 2) \n        return\
    \ n;\n    return fib(n - 1) + fib(n - 2);\n}\n/*\nReturn n-th Fibonacci number.\n\
    \    >>> fib(10L)\n    55L\n    >>> fib(1L)\n    1L\n    >>> fib(8L)\n    21L\n\
    \    \n*/\nlong fib(long n) \n{\n    if (n < 2) \n        return n;\n    return\
    \ fib(n - 1) + fib(n - 2);\n}\n/*\nReturn n-th Fibonacci number.\n    >>> fib(10L)\n\
    \    55L\n    >>> fib(1L)\n    1L\n    >>> fib(8L)\n    21L\n    \n*/\nlong fib(long\
    \ n) \n{\n    if (n < 2) \n        return n;\n    return fib(n - 1) + fib(n -\
    \ 2);\n}\n/*\nReturn n-th Fib\nunittest\n{\n    alias candidate = fib;\n\n   \
    \ assert(candidate(10L) == 55L);\n    assert(candidate(1L) == 1L);\n    assert(candidate(8L)\
    \ == 21L);\n    assert(candidate(11L) == 89L);\n    assert(candidate(12L) == 144L);\n\
    }\nvoid main(){}"
  status: SyntaxError
  stderr: '/tmp/tmpszjffxoa.d(98): Error: unterminated /* */ comment

    Failed: ["dmd", "-unittest", "-v", "-o-", "/tmp/tmpszjffxoa.d", "-I/tmp"]

    '
  stdout: ''
  timestamp: 1660163029
- exit_code: 0
  program: "import std.math;\n/*\nReturn n-th Fibonacci number.\n    >>> fib(10L)\n\
    \    55L\n    >>> fib(1L)\n    1L\n    >>> fib(8L)\n    21L\n    \n*/\nlong fib(long\
    \ n) \n{\n    if (n <= 1L)\n        return n;\n    else\n        return fib(n\
    \ - 1L) + fib(n - 2L);\n}\nunittest\n{\n    alias candidate = fib;\n\n    assert(candidate(10L)\
    \ == 55L);\n    assert(candidate(1L) == 1L);\n    assert(candidate(8L) == 21L);\n\
    \    assert(candidate(11L) == 89L);\n    assert(candidate(12L) == 144L);\n}\n\
    void main(){}"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660163029
- exit_code: 0
  program: "import std.math;\n/*\nReturn n-th Fibonacci number.\n    >>> fib(10L)\n\
    \    55L\n    >>> fib(1L)\n    1L\n    >>> fib(8L)\n    21L\n    \n*/\nlong fib(long\
    \ n) \n{\n    if (n < 2) \n    {\n        return n;\n    }\n    else \n    {\n\
    \        return fib(n - 1) + fib(n - 2);\n    }\n}\nunittest\n{\n    alias candidate\
    \ = fib;\n\n    assert(candidate(10L) == 55L);\n    assert(candidate(1L) == 1L);\n\
    \    assert(candidate(8L) == 21L);\n    assert(candidate(11L) == 89L);\n    assert(candidate(12L)\
    \ == 144L);\n}\nvoid main(){}"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660163029
- exit_code: 0
  program: "import std.math;\n/*\nReturn n-th Fibonacci number.\n    >>> fib(10L)\n\
    \    55L\n    >>> fib(1L)\n    1L\n    >>> fib(8L)\n    21L\n    \n*/\nlong fib(long\
    \ n) \n{\n    if (n < 2)\n        return n;\n    else\n        return fib(n -\
    \ 1) + fib(n - 2);\n}\nunittest\n{\n    alias candidate = fib;\n\n    assert(candidate(10L)\
    \ == 55L);\n    assert(candidate(1L) == 1L);\n    assert(candidate(8L) == 21L);\n\
    \    assert(candidate(11L) == 89L);\n    assert(candidate(12L) == 144L);\n}\n\
    void main(){}"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660163029
- exit_code: 0
  program: "import std.math;\n/*\nReturn n-th Fibonacci number.\n    >>> fib(10L)\n\
    \    55L\n    >>> fib(1L)\n    1L\n    >>> fib(8L)\n    21L\n    \n*/\nlong fib(long\
    \ n) \n{\n    if (n <= 2L) \n        return 1L;\n    else \n        return fib(n\
    \ - 1L) + fib(n - 2L);\n}\nunittest\n{\n    alias candidate = fib;\n\n    assert(candidate(10L)\
    \ == 55L);\n    assert(candidate(1L) == 1L);\n    assert(candidate(8L) == 21L);\n\
    \    assert(candidate(11L) == 89L);\n    assert(candidate(12L) == 144L);\n}\n\
    void main(){}"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660163029
- exit_code: 0
  program: "import std.math;\n/*\nReturn n-th Fibonacci number.\n    >>> fib(10L)\n\
    \    55L\n    >>> fib(1L)\n    1L\n    >>> fib(8L)\n    21L\n    \n*/\nlong fib(long\
    \ n) \n{\n    if (n < 2) \n    {\n        return n;\n    }\n    return fib(n -\
    \ 1) + fib(n - 2);\n}\nunittest\n{\n    alias candidate = fib;\n\n    assert(candidate(10L)\
    \ == 55L);\n    assert(candidate(1L) == 1L);\n    assert(candidate(8L) == 21L);\n\
    \    assert(candidate(11L) == 89L);\n    assert(candidate(12L) == 144L);\n}\n\
    void main(){}"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660163029
- exit_code: 0
  program: "import std.math;\n/*\nReturn n-th Fibonacci number.\n    >>> fib(10L)\n\
    \    55L\n    >>> fib(1L)\n    1L\n    >>> fib(8L)\n    21L\n    \n*/\nlong fib(long\
    \ n) \n{\n    if (n < 2)\n        return n;\n    return fib(n - 1) + fib(n - 2);\n\
    }\nunittest\n{\n    alias candidate = fib;\n\n    assert(candidate(10L) == 55L);\n\
    \    assert(candidate(1L) == 1L);\n    assert(candidate(8L) == 21L);\n    assert(candidate(11L)\
    \ == 89L);\n    assert(candidate(12L) == 144L);\n}\nvoid main(){}"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660163029
- exit_code: 0
  program: "import std.math;\n/*\nReturn n-th Fibonacci number.\n    >>> fib(10L)\n\
    \    55L\n    >>> fib(1L)\n    1L\n    >>> fib(8L)\n    21L\n    \n*/\nlong fib(long\
    \ n) \n{\n    if (n < 2)\n        return n;\n    else\n        return fib(n -\
    \ 1) + fib(n - 2);\n}\nunittest\n{\n    alias candidate = fib;\n\n    assert(candidate(10L)\
    \ == 55L);\n    assert(candidate(1L) == 1L);\n    assert(candidate(8L) == 21L);\n\
    \    assert(candidate(11L) == 89L);\n    assert(candidate(12L) == 144L);\n}\n\
    void main(){}"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660163029
- exit_code: 0
  program: "import std.math;\n/*\nReturn n-th Fibonacci number.\n    >>> fib(10L)\n\
    \    55L\n    >>> fib(1L)\n    1L\n    >>> fib(8L)\n    21L\n    \n*/\nlong fib(long\
    \ n) \n{\n    if (n < 2)\n        return n;\n    else\n        return fib(n -\
    \ 1) + fib(n - 2);\n}\nunittest\n{\n    alias candidate = fib;\n\n    assert(candidate(10L)\
    \ == 55L);\n    assert(candidate(1L) == 1L);\n    assert(candidate(8L) == 21L);\n\
    \    assert(candidate(11L) == 89L);\n    assert(candidate(12L) == 144L);\n}\n\
    void main(){}"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660163029
- exit_code: 0
  program: "import std.math;\n/*\nReturn n-th Fibonacci number.\n    >>> fib(10L)\n\
    \    55L\n    >>> fib(1L)\n    1L\n    >>> fib(8L)\n    21L\n    \n*/\nlong fib(long\
    \ n) \n{\n    if (n < 2)\n        return n;\n    return fib(n - 1) + fib(n - 2);\n\
    }\nunittest\n{\n    alias candidate = fib;\n\n    assert(candidate(10L) == 55L);\n\
    \    assert(candidate(1L) == 1L);\n    assert(candidate(8L) == 21L);\n    assert(candidate(11L)\
    \ == 89L);\n    assert(candidate(12L) == 144L);\n}\nvoid main(){}"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660163029
- exit_code: 0
  program: "import std.math;\n/*\nReturn n-th Fibonacci number.\n    >>> fib(10L)\n\
    \    55L\n    >>> fib(1L)\n    1L\n    >>> fib(8L)\n    21L\n    \n*/\nlong fib(long\
    \ n) \n{\n    if (n < 2) \n    {\n        return n;\n    }\n    return fib(n -\
    \ 1) + fib(n - 2);\n}\nunittest\n{\n    alias candidate = fib;\n\n    assert(candidate(10L)\
    \ == 55L);\n    assert(candidate(1L) == 1L);\n    assert(candidate(8L) == 21L);\n\
    \    assert(candidate(11L) == 89L);\n    assert(candidate(12L) == 144L);\n}\n\
    void main(){}"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660163029
- exit_code: 0
  program: "import std.math;\n/*\nReturn n-th Fibonacci number.\n    >>> fib(10L)\n\
    \    55L\n    >>> fib(1L)\n    1L\n    >>> fib(8L)\n    21L\n    \n*/\nlong fib(long\
    \ n) \n{\n    if (n <= 1L)\n        return n;\n    else\n        return fib(n\
    \ - 1L) + fib(n - 2L);\n}\nunittest\n{\n    alias candidate = fib;\n\n    assert(candidate(10L)\
    \ == 55L);\n    assert(candidate(1L) == 1L);\n    assert(candidate(8L) == 21L);\n\
    \    assert(candidate(11L) == 89L);\n    assert(candidate(12L) == 144L);\n}\n\
    void main(){}"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660163029
- exit_code: 0
  program: "import std.math;\n/*\nReturn n-th Fibonacci number.\n    >>> fib(10L)\n\
    \    55L\n    >>> fib(1L)\n    1L\n    >>> fib(8L)\n    21L\n    \n*/\nlong fib(long\
    \ n) \n{\n    if (n < 2)\n        return n;\n    else\n        return fib(n -\
    \ 1) + fib(n - 2);\n}\nunittest\n{\n    alias candidate = fib;\n\n    assert(candidate(10L)\
    \ == 55L);\n    assert(candidate(1L) == 1L);\n    assert(candidate(8L) == 21L);\n\
    \    assert(candidate(11L) == 89L);\n    assert(candidate(12L) == 144L);\n}\n\
    void main(){}"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660163029
- exit_code: 0
  program: "import std.math;\n/*\nReturn n-th Fibonacci number.\n    >>> fib(10L)\n\
    \    55L\n    >>> fib(1L)\n    1L\n    >>> fib(8L)\n    21L\n    \n*/\nlong fib(long\
    \ n) \n{\n    if (n < 2)\n        return n;\n    return fib(n - 1) + fib(n - 2);\n\
    }\nunittest\n{\n    alias candidate = fib;\n\n    assert(candidate(10L) == 55L);\n\
    \    assert(candidate(1L) == 1L);\n    assert(candidate(8L) == 21L);\n    assert(candidate(11L)\
    \ == 89L);\n    assert(candidate(12L) == 144L);\n}\nvoid main(){}"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660163029
- exit_code: 0
  program: "import std.math;\n/*\nReturn n-th Fibonacci number.\n    >>> fib(10L)\n\
    \    55L\n    >>> fib(1L)\n    1L\n    >>> fib(8L)\n    21L\n    \n*/\nlong fib(long\
    \ n) \n{\n    if (n <= 1L)\n        return n;\n    else\n        return fib(n\
    \ - 1L) + fib(n - 2L);\n}\nunittest\n{\n    alias candidate = fib;\n\n    assert(candidate(10L)\
    \ == 55L);\n    assert(candidate(1L) == 1L);\n    assert(candidate(8L) == 21L);\n\
    \    assert(candidate(11L) == 89L);\n    assert(candidate(12L) == 144L);\n}\n\
    void main(){}"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660163029
- exit_code: 0
  program: "import std.math;\n/*\nReturn n-th Fibonacci number.\n    >>> fib(10L)\n\
    \    55L\n    >>> fib(1L)\n    1L\n    >>> fib(8L)\n    21L\n    \n*/\nlong fib(long\
    \ n) \n{\n    if (n <= 2L) \n    {\n        return 1L;\n    }\n    return fib(n\
    \ - 1L) + fib(n - 2L);\n}\nunittest\n{\n    alias candidate = fib;\n\n    assert(candidate(10L)\
    \ == 55L);\n    assert(candidate(1L) == 1L);\n    assert(candidate(8L) == 21L);\n\
    \    assert(candidate(11L) == 89L);\n    assert(candidate(12L) == 144L);\n}\n\
    void main(){}"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660163029
- exit_code: 0
  program: "import std.math;\n/*\nReturn n-th Fibonacci number.\n    >>> fib(10L)\n\
    \    55L\n    >>> fib(1L)\n    1L\n    >>> fib(8L)\n    21L\n    \n*/\nlong fib(long\
    \ n) \n{\n    if (n <= 2L) \n    {\n        return 1L;\n    }\n    return fib(n\
    \ - 1L) + fib(n - 2L);\n}\nunittest\n{\n    alias candidate = fib;\n\n    assert(candidate(10L)\
    \ == 55L);\n    assert(candidate(1L) == 1L);\n    assert(candidate(8L) == 21L);\n\
    \    assert(candidate(11L) == 89L);\n    assert(candidate(12L) == 144L);\n}\n\
    void main(){}"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660163029
- exit_code: 0
  program: "import std.math;\n/*\nReturn n-th Fibonacci number.\n    >>> fib(10L)\n\
    \    55L\n    >>> fib(1L)\n    1L\n    >>> fib(8L)\n    21L\n    \n*/\nlong fib(long\
    \ n) \n{\n    if (n < 2)\n        return n;\n    else\n        return fib(n -\
    \ 1) + fib(n - 2);\n}\nunittest\n{\n    alias candidate = fib;\n\n    assert(candidate(10L)\
    \ == 55L);\n    assert(candidate(1L) == 1L);\n    assert(candidate(8L) == 21L);\n\
    \    assert(candidate(11L) == 89L);\n    assert(candidate(12L) == 144L);\n}\n\
    void main(){}"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660163029
- exit_code: 0
  program: "import std.math;\n/*\nReturn n-th Fibonacci number.\n    >>> fib(10L)\n\
    \    55L\n    >>> fib(1L)\n    1L\n    >>> fib(8L)\n    21L\n    \n*/\nlong fib(long\
    \ n) \n{\n    if (n < 2)\n        return n;\n    else\n        return fib(n -\
    \ 1) + fib(n - 2);\n}\nunittest\n{\n    alias candidate = fib;\n\n    assert(candidate(10L)\
    \ == 55L);\n    assert(candidate(1L) == 1L);\n    assert(candidate(8L) == 21L);\n\
    \    assert(candidate(11L) == 89L);\n    assert(candidate(12L) == 144L);\n}\n\
    void main(){}"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660163029
- exit_code: 0
  program: "import std.math;\n/*\nReturn n-th Fibonacci number.\n    >>> fib(10L)\n\
    \    55L\n    >>> fib(1L)\n    1L\n    >>> fib(8L)\n    21L\n    \n*/\nlong fib(long\
    \ n) \n{\n    if (n <= 1L) \n    {\n        return n;\n    }\n    return fib(n\
    \ - 1L) + fib(n - 2L);\n}\nunittest\n{\n    alias candidate = fib;\n\n    assert(candidate(10L)\
    \ == 55L);\n    assert(candidate(1L) == 1L);\n    assert(candidate(8L) == 21L);\n\
    \    assert(candidate(11L) == 89L);\n    assert(candidate(12L) == 144L);\n}\n\
    void main(){}"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660163029
- exit_code: 0
  program: "import std.math;\n/*\nReturn n-th Fibonacci number.\n    >>> fib(10L)\n\
    \    55L\n    >>> fib(1L)\n    1L\n    >>> fib(8L)\n    21L\n    \n*/\nlong fib(long\
    \ n) \n{\n    if (n < 2) \n    {\n        return n;\n    }\n    return fib(n -\
    \ 1) + fib(n - 2);\n}\nunittest\n{\n    alias candidate = fib;\n\n    assert(candidate(10L)\
    \ == 55L);\n    assert(candidate(1L) == 1L);\n    assert(candidate(8L) == 21L);\n\
    \    assert(candidate(11L) == 89L);\n    assert(candidate(12L) == 144L);\n}\n\
    void main(){}"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660163029
- exit_code: 0
  program: "import std.math;\n/*\nReturn n-th Fibonacci number.\n    >>> fib(10L)\n\
    \    55L\n    >>> fib(1L)\n    1L\n    >>> fib(8L)\n    21L\n    \n*/\nlong fib(long\
    \ n) \n{\n    if (n < 2) \n    {\n        return n;\n    }\n    else \n    {\n\
    \        return fib(n - 1) + fib(n - 2);\n    }\n}\nunittest\n{\n    alias candidate\
    \ = fib;\n\n    assert(candidate(10L) == 55L);\n    assert(candidate(1L) == 1L);\n\
    \    assert(candidate(8L) == 21L);\n    assert(candidate(11L) == 89L);\n    assert(candidate(12L)\
    \ == 144L);\n}\nvoid main(){}"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660163029
- exit_code: 0
  program: "import std.math;\n/*\nReturn n-th Fibonacci number.\n    >>> fib(10L)\n\
    \    55L\n    >>> fib(1L)\n    1L\n    >>> fib(8L)\n    21L\n    \n*/\nlong fib(long\
    \ n) \n{\n    if (n < 2)\n        return n;\n    else\n        return fib(n -\
    \ 1) + fib(n - 2);\n}\nunittest\n{\n    alias candidate = fib;\n\n    assert(candidate(10L)\
    \ == 55L);\n    assert(candidate(1L) == 1L);\n    assert(candidate(8L) == 21L);\n\
    \    assert(candidate(11L) == 89L);\n    assert(candidate(12L) == 144L);\n}\n\
    void main(){}"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660163029
- exit_code: 0
  program: "import std.math;\n/*\nReturn n-th Fibonacci number.\n    >>> fib(10L)\n\
    \    55L\n    >>> fib(1L)\n    1L\n    >>> fib(8L)\n    21L\n    \n*/\nlong fib(long\
    \ n) \n{\n    if (n < 2)\n        return n;\n    return fib(n - 1) + fib(n - 2);\n\
    }\nunittest\n{\n    alias candidate = fib;\n\n    assert(candidate(10L) == 55L);\n\
    \    assert(candidate(1L) == 1L);\n    assert(candidate(8L) == 21L);\n    assert(candidate(11L)\
    \ == 89L);\n    assert(candidate(12L) == 144L);\n}\nvoid main(){}"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660163029
- exit_code: 0
  program: "import std.math;\n/*\nReturn n-th Fibonacci number.\n    >>> fib(10L)\n\
    \    55L\n    >>> fib(1L)\n    1L\n    >>> fib(8L)\n    21L\n    \n*/\nlong fib(long\
    \ n) \n{\n    if (n < 2) \n        return n;\n    else \n        return fib(n\
    \ - 1) + fib(n - 2);\n}\nunittest\n{\n    alias candidate = fib;\n\n    assert(candidate(10L)\
    \ == 55L);\n    assert(candidate(1L) == 1L);\n    assert(candidate(8L) == 21L);\n\
    \    assert(candidate(11L) == 89L);\n    assert(candidate(12L) == 144L);\n}\n\
    void main(){}"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660163029
- exit_code: 0
  program: "import std.math;\n/*\nReturn n-th Fibonacci number.\n    >>> fib(10L)\n\
    \    55L\n    >>> fib(1L)\n    1L\n    >>> fib(8L)\n    21L\n    \n*/\nlong fib(long\
    \ n) \n{\n    if (n < 2)\n        return n;\n    else\n        return fib(n -\
    \ 1) + fib(n - 2);\n}\nunittest\n{\n    alias candidate = fib;\n\n    assert(candidate(10L)\
    \ == 55L);\n    assert(candidate(1L) == 1L);\n    assert(candidate(8L) == 21L);\n\
    \    assert(candidate(11L) == 89L);\n    assert(candidate(12L) == 144L);\n}\n\
    void main(){}"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660163029
- exit_code: 0
  program: "import std.math;\n/*\nReturn n-th Fibonacci number.\n    >>> fib(10L)\n\
    \    55L\n    >>> fib(1L)\n    1L\n    >>> fib(8L)\n    21L\n    \n*/\nlong fib(long\
    \ n) \n{\n    if (n < 2) \n        return n;\n    else \n        return fib(n\
    \ - 1) + fib(n - 2);\n}\nunittest\n{\n    alias candidate = fib;\n\n    assert(candidate(10L)\
    \ == 55L);\n    assert(candidate(1L) == 1L);\n    assert(candidate(8L) == 21L);\n\
    \    assert(candidate(11L) == 89L);\n    assert(candidate(12L) == 144L);\n}\n\
    void main(){}"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660163029
- exit_code: 0
  program: "import std.math;\n/*\nReturn n-th Fibonacci number.\n    >>> fib(10L)\n\
    \    55L\n    >>> fib(1L)\n    1L\n    >>> fib(8L)\n    21L\n    \n*/\nlong fib(long\
    \ n) \n{\n    if (n <= 1L) \n    {\n        return n;\n    }\n    return fib(n\
    \ - 1L) + fib(n - 2L);\n}\nunittest\n{\n    alias candidate = fib;\n\n    assert(candidate(10L)\
    \ == 55L);\n    assert(candidate(1L) == 1L);\n    assert(candidate(8L) == 21L);\n\
    \    assert(candidate(11L) == 89L);\n    assert(candidate(12L) == 144L);\n}\n\
    void main(){}"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660163029
- exit_code: 0
  program: "import std.math;\n/*\nReturn n-th Fibonacci number.\n    >>> fib(10L)\n\
    \    55L\n    >>> fib(1L)\n    1L\n    >>> fib(8L)\n    21L\n    \n*/\nlong fib(long\
    \ n) \n{\n    if (n < 2)\n        return n;\n    else\n        return fib(n -\
    \ 1) + fib(n - 2);\n}\nunittest\n{\n    alias candidate = fib;\n\n    assert(candidate(10L)\
    \ == 55L);\n    assert(candidate(1L) == 1L);\n    assert(candidate(8L) == 21L);\n\
    \    assert(candidate(11L) == 89L);\n    assert(candidate(12L) == 144L);\n}\n\
    void main(){}"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660163029
- exit_code: 0
  program: "import std.math;\n/*\nReturn n-th Fibonacci number.\n    >>> fib(10L)\n\
    \    55L\n    >>> fib(1L)\n    1L\n    >>> fib(8L)\n    21L\n    \n*/\nlong fib(long\
    \ n) \n{\n    if (n <= 1L)\n        return n;\n    else\n        return fib(n\
    \ - 1L) + fib(n - 2L);\n}\nunittest\n{\n    alias candidate = fib;\n\n    assert(candidate(10L)\
    \ == 55L);\n    assert(candidate(1L) == 1L);\n    assert(candidate(8L) == 21L);\n\
    \    assert(candidate(11L) == 89L);\n    assert(candidate(12L) == 144L);\n}\n\
    void main(){}"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660163029
- exit_code: 0
  program: "import std.math;\n/*\nReturn n-th Fibonacci number.\n    >>> fib(10L)\n\
    \    55L\n    >>> fib(1L)\n    1L\n    >>> fib(8L)\n    21L\n    \n*/\nlong fib(long\
    \ n) \n{\n    if (n <= 1L)\n        return n;\n    else\n        return fib(n\
    \ - 1L) + fib(n - 2L);\n}\nunittest\n{\n    alias candidate = fib;\n\n    assert(candidate(10L)\
    \ == 55L);\n    assert(candidate(1L) == 1L);\n    assert(candidate(8L) == 21L);\n\
    \    assert(candidate(11L) == 89L);\n    assert(candidate(12L) == 144L);\n}\n\
    void main(){}"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660163029
- exit_code: 0
  program: "import std.math;\n/*\nReturn n-th Fibonacci number.\n    >>> fib(10L)\n\
    \    55L\n    >>> fib(1L)\n    1L\n    >>> fib(8L)\n    21L\n    \n*/\nlong fib(long\
    \ n) \n{\n    if (n <= 1L)\n        return n;\n    else\n        return fib(n\
    \ - 1L) + fib(n - 2L);\n}\nunittest\n{\n    alias candidate = fib;\n\n    assert(candidate(10L)\
    \ == 55L);\n    assert(candidate(1L) == 1L);\n    assert(candidate(8L) == 21L);\n\
    \    assert(candidate(11L) == 89L);\n    assert(candidate(12L) == 144L);\n}\n\
    void main(){}"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660163029
- exit_code: 0
  program: "import std.math;\n/*\nReturn n-th Fibonacci number.\n    >>> fib(10L)\n\
    \    55L\n    >>> fib(1L)\n    1L\n    >>> fib(8L)\n    21L\n    \n*/\nlong fib(long\
    \ n) \n{\n    if (n <= 2L)\n        return 1L;\n    else\n        return fib(n\
    \ - 1L) + fib(n - 2L);\n}\nunittest\n{\n    alias candidate = fib;\n\n    assert(candidate(10L)\
    \ == 55L);\n    assert(candidate(1L) == 1L);\n    assert(candidate(8L) == 21L);\n\
    \    assert(candidate(11L) == 89L);\n    assert(candidate(12L) == 144L);\n}\n\
    void main(){}"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660163029
- exit_code: 0
  program: "import std.math;\n/*\nReturn n-th Fibonacci number.\n    >>> fib(10L)\n\
    \    55L\n    >>> fib(1L)\n    1L\n    >>> fib(8L)\n    21L\n    \n*/\nlong fib(long\
    \ n) \n{\n    if (n <= 1L)\n        return n;\n    else\n        return fib(n\
    \ - 1L) + fib(n - 2L);\n}\nunittest\n{\n    alias candidate = fib;\n\n    assert(candidate(10L)\
    \ == 55L);\n    assert(candidate(1L) == 1L);\n    assert(candidate(8L) == 21L);\n\
    \    assert(candidate(11L) == 89L);\n    assert(candidate(12L) == 144L);\n}\n\
    void main(){}"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660163029
- exit_code: 0
  program: "import std.math;\n/*\nReturn n-th Fibonacci number.\n    >>> fib(10L)\n\
    \    55L\n    >>> fib(1L)\n    1L\n    >>> fib(8L)\n    21L\n    \n*/\nlong fib(long\
    \ n) \n{\n    if (n <= 1L) \n        return n;\n    else \n        return fib(n\
    \ - 1L) + fib(n - 2L);\n}\nunittest\n{\n    alias candidate = fib;\n\n    assert(candidate(10L)\
    \ == 55L);\n    assert(candidate(1L) == 1L);\n    assert(candidate(8L) == 21L);\n\
    \    assert(candidate(11L) == 89L);\n    assert(candidate(12L) == 144L);\n}\n\
    void main(){}"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660163029
- exit_code: 0
  program: "import std.math;\n/*\nReturn n-th Fibonacci number.\n    >>> fib(10L)\n\
    \    55L\n    >>> fib(1L)\n    1L\n    >>> fib(8L)\n    21L\n    \n*/\nlong fib(long\
    \ n) \n{\n    if (n <= 1L) \n    {\n        return n;\n    }\n    return fib(n\
    \ - 1L) + fib(n - 2L);\n}\nunittest\n{\n    alias candidate = fib;\n\n    assert(candidate(10L)\
    \ == 55L);\n    assert(candidate(1L) == 1L);\n    assert(candidate(8L) == 21L);\n\
    \    assert(candidate(11L) == 89L);\n    assert(candidate(12L) == 144L);\n}\n\
    void main(){}"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660163029
- exit_code: 0
  program: "import std.math;\n/*\nReturn n-th Fibonacci number.\n    >>> fib(10L)\n\
    \    55L\n    >>> fib(1L)\n    1L\n    >>> fib(8L)\n    21L\n    \n*/\nlong fib(long\
    \ n) \n{\n    if (n == 0L)\n        return 0L;\n    else if (n == 1L)\n      \
    \  return 1L;\n    else\n        return fib(n - 1L) + fib(n - 2L);\n}\nunittest\n\
    {\n    alias candidate = fib;\n\n    assert(candidate(10L) == 55L);\n    assert(candidate(1L)\
    \ == 1L);\n    assert(candidate(8L) == 21L);\n    assert(candidate(11L) == 89L);\n\
    \    assert(candidate(12L) == 144L);\n}\nvoid main(){}"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660163029
- exit_code: 0
  program: "import std.math;\n/*\nReturn n-th Fibonacci number.\n    >>> fib(10L)\n\
    \    55L\n    >>> fib(1L)\n    1L\n    >>> fib(8L)\n    21L\n    \n*/\nlong fib(long\
    \ n) \n{\n    if (n < 2)\n        return n;\n    else\n        return fib(n -\
    \ 1) + fib(n - 2);\n}\nunittest\n{\n    alias candidate = fib;\n\n    assert(candidate(10L)\
    \ == 55L);\n    assert(candidate(1L) == 1L);\n    assert(candidate(8L) == 21L);\n\
    \    assert(candidate(11L) == 89L);\n    assert(candidate(12L) == 144L);\n}\n\
    void main(){}"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660163029
- exit_code: 0
  program: "import std.math;\n/*\nReturn n-th Fibonacci number.\n    >>> fib(10L)\n\
    \    55L\n    >>> fib(1L)\n    1L\n    >>> fib(8L)\n    21L\n    \n*/\nlong fib(long\
    \ n) \n{\n    if (n < 2)\n        return n;\n    return fib(n - 1) + fib(n - 2);\n\
    }\nunittest\n{\n    alias candidate = fib;\n\n    assert(candidate(10L) == 55L);\n\
    \    assert(candidate(1L) == 1L);\n    assert(candidate(8L) == 21L);\n    assert(candidate(11L)\
    \ == 89L);\n    assert(candidate(12L) == 144L);\n}\nvoid main(){}"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660163029
- exit_code: 0
  program: "import std.math;\n/*\nReturn n-th Fibonacci number.\n    >>> fib(10L)\n\
    \    55L\n    >>> fib(1L)\n    1L\n    >>> fib(8L)\n    21L\n    \n*/\nlong fib(long\
    \ n) \n{\n    if (n < 2) return n;\n    return fib(n - 1) + fib(n - 2);\n}\nunittest\n\
    {\n    alias candidate = fib;\n\n    assert(candidate(10L) == 55L);\n    assert(candidate(1L)\
    \ == 1L);\n    assert(candidate(8L) == 21L);\n    assert(candidate(11L) == 89L);\n\
    \    assert(candidate(12L) == 144L);\n}\nvoid main(){}"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660163029
- exit_code: 0
  program: "import std.math;\n/*\nReturn n-th Fibonacci number.\n    >>> fib(10L)\n\
    \    55L\n    >>> fib(1L)\n    1L\n    >>> fib(8L)\n    21L\n    \n*/\nlong fib(long\
    \ n) \n{\n    if (n < 2) \n    {\n        return n;\n    }\n    else \n    {\n\
    \        return fib(n - 1) + fib(n - 2);\n    }\n}\nunittest\n{\n    alias candidate\
    \ = fib;\n\n    assert(candidate(10L) == 55L);\n    assert(candidate(1L) == 1L);\n\
    \    assert(candidate(8L) == 21L);\n    assert(candidate(11L) == 89L);\n    assert(candidate(12L)\
    \ == 144L);\n}\nvoid main(){}"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660163029
- exit_code: 0
  program: "import std.math;\n/*\nReturn n-th Fibonacci number.\n    >>> fib(10L)\n\
    \    55L\n    >>> fib(1L)\n    1L\n    >>> fib(8L)\n    21L\n    \n*/\nlong fib(long\
    \ n) \n{\n    if (n < 2)\n        return n;\n    else\n        return fib(n -\
    \ 1) + fib(n - 2);\n}\nunittest\n{\n    alias candidate = fib;\n\n    assert(candidate(10L)\
    \ == 55L);\n    assert(candidate(1L) == 1L);\n    assert(candidate(8L) == 21L);\n\
    \    assert(candidate(11L) == 89L);\n    assert(candidate(12L) == 144L);\n}\n\
    void main(){}"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660163029
- exit_code: 0
  program: "import std.math;\n/*\nReturn n-th Fibonacci number.\n    >>> fib(10L)\n\
    \    55L\n    >>> fib(1L)\n    1L\n    >>> fib(8L)\n    21L\n    \n*/\nlong fib(long\
    \ n) \n{\n    if (n <= 1L) \n    {\n        return n;\n    } \n    else \n   \
    \ {\n        return fib(n - 1L) + fib(n - 2L);\n    }\n}\nunittest\n{\n    alias\
    \ candidate = fib;\n\n    assert(candidate(10L) == 55L);\n    assert(candidate(1L)\
    \ == 1L);\n    assert(candidate(8L) == 21L);\n    assert(candidate(11L) == 89L);\n\
    \    assert(candidate(12L) == 144L);\n}\nvoid main(){}"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660163029
- exit_code: 0
  program: "import std.math;\n/*\nReturn n-th Fibonacci number.\n    >>> fib(10L)\n\
    \    55L\n    >>> fib(1L)\n    1L\n    >>> fib(8L)\n    21L\n    \n*/\nlong fib(long\
    \ n) \n{\n    if (n < 2)\n        return n;\n    else\n        return fib(n -\
    \ 1) + fib(n - 2);\n}\nunittest\n{\n    alias candidate = fib;\n\n    assert(candidate(10L)\
    \ == 55L);\n    assert(candidate(1L) == 1L);\n    assert(candidate(8L) == 21L);\n\
    \    assert(candidate(11L) == 89L);\n    assert(candidate(12L) == 144L);\n}\n\
    void main(){}"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660163029
- exit_code: 0
  program: "import std.math;\n/*\nReturn n-th Fibonacci number.\n    >>> fib(10L)\n\
    \    55L\n    >>> fib(1L)\n    1L\n    >>> fib(8L)\n    21L\n    \n*/\nlong fib(long\
    \ n) \n{\n    if (n < 2)\n        return n;\n    else\n        return fib(n -\
    \ 1) + fib(n - 2);\n}\nunittest\n{\n    alias candidate = fib;\n\n    assert(candidate(10L)\
    \ == 55L);\n    assert(candidate(1L) == 1L);\n    assert(candidate(8L) == 21L);\n\
    \    assert(candidate(11L) == 89L);\n    assert(candidate(12L) == 144L);\n}\n\
    void main(){}"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660163029
- exit_code: 0
  program: "import std.math;\n/*\nReturn n-th Fibonacci number.\n    >>> fib(10L)\n\
    \    55L\n    >>> fib(1L)\n    1L\n    >>> fib(8L)\n    21L\n    \n*/\nlong fib(long\
    \ n) \n{\n    if (n < 2)\n        return n;\n    return fib(n - 1) + fib(n - 2);\n\
    }\nunittest\n{\n    alias candidate = fib;\n\n    assert(candidate(10L) == 55L);\n\
    \    assert(candidate(1L) == 1L);\n    assert(candidate(8L) == 21L);\n    assert(candidate(11L)\
    \ == 89L);\n    assert(candidate(12L) == 144L);\n}\nvoid main(){}"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660163029
- exit_code: 0
  program: "import std.math;\n/*\nReturn n-th Fibonacci number.\n    >>> fib(10L)\n\
    \    55L\n    >>> fib(1L)\n    1L\n    >>> fib(8L)\n    21L\n    \n*/\nlong fib(long\
    \ n) \n{\n    if (n < 2)\n        return n;\n    else\n        return fib(n -\
    \ 1) + fib(n - 2);\n}\nunittest\n{\n    alias candidate = fib;\n\n    assert(candidate(10L)\
    \ == 55L);\n    assert(candidate(1L) == 1L);\n    assert(candidate(8L) == 21L);\n\
    \    assert(candidate(11L) == 89L);\n    assert(candidate(12L) == 144L);\n}\n\
    void main(){}"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660163029
- exit_code: 0
  program: "import std.math;\n/*\nReturn n-th Fibonacci number.\n    >>> fib(10L)\n\
    \    55L\n    >>> fib(1L)\n    1L\n    >>> fib(8L)\n    21L\n    \n*/\nlong fib(long\
    \ n) \n{\n    if (n <= 1L)\n        return n;\n    else\n        return fib(n\
    \ - 1L) + fib(n - 2L);\n}\nunittest\n{\n    alias candidate = fib;\n\n    assert(candidate(10L)\
    \ == 55L);\n    assert(candidate(1L) == 1L);\n    assert(candidate(8L) == 21L);\n\
    \    assert(candidate(11L) == 89L);\n    assert(candidate(12L) == 144L);\n}\n\
    void main(){}"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660163029
- exit_code: 0
  program: "import std.math;\n/*\nReturn n-th Fibonacci number.\n    >>> fib(10L)\n\
    \    55L\n    >>> fib(1L)\n    1L\n    >>> fib(8L)\n    21L\n    \n*/\nlong fib(long\
    \ n) \n{\n    if (n < 2)\n        return n;\n    else\n        return fib(n -\
    \ 1) + fib(n - 2);\n}\nunittest\n{\n    alias candidate = fib;\n\n    assert(candidate(10L)\
    \ == 55L);\n    assert(candidate(1L) == 1L);\n    assert(candidate(8L) == 21L);\n\
    \    assert(candidate(11L) == 89L);\n    assert(candidate(12L) == 144L);\n}\n\
    void main(){}"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660163029
- exit_code: 0
  program: "import std.math;\n/*\nReturn n-th Fibonacci number.\n    >>> fib(10L)\n\
    \    55L\n    >>> fib(1L)\n    1L\n    >>> fib(8L)\n    21L\n    \n*/\nlong fib(long\
    \ n) \n{\n    if (n < 2)\n        return n;\n    else\n        return fib(n -\
    \ 1) + fib(n - 2);\n}\nunittest\n{\n    alias candidate = fib;\n\n    assert(candidate(10L)\
    \ == 55L);\n    assert(candidate(1L) == 1L);\n    assert(candidate(8L) == 21L);\n\
    \    assert(candidate(11L) == 89L);\n    assert(candidate(12L) == 144L);\n}\n\
    void main(){}"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660163029
- exit_code: 0
  program: "import std.math;\n/*\nReturn n-th Fibonacci number.\n    >>> fib(10L)\n\
    \    55L\n    >>> fib(1L)\n    1L\n    >>> fib(8L)\n    21L\n    \n*/\nlong fib(long\
    \ n) \n{\n    if (n < 2) \n    {\n        return n;\n    }\n    else \n    {\n\
    \        return fib(n - 1) + fib(n - 2);\n    }\n}\nunittest\n{\n    alias candidate\
    \ = fib;\n\n    assert(candidate(10L) == 55L);\n    assert(candidate(1L) == 1L);\n\
    \    assert(candidate(8L) == 21L);\n    assert(candidate(11L) == 89L);\n    assert(candidate(12L)\
    \ == 144L);\n}\nvoid main(){}"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660163029
- exit_code: 0
  program: "import std.math;\n/*\nReturn n-th Fibonacci number.\n    >>> fib(10L)\n\
    \    55L\n    >>> fib(1L)\n    1L\n    >>> fib(8L)\n    21L\n    \n*/\nlong fib(long\
    \ n) \n{\n    if (n <= 1L)\n        return n;\n    else\n        return fib(n\
    \ - 1L) + fib(n - 2L);\n}\nunittest\n{\n    alias candidate = fib;\n\n    assert(candidate(10L)\
    \ == 55L);\n    assert(candidate(1L) == 1L);\n    assert(candidate(8L) == 21L);\n\
    \    assert(candidate(11L) == 89L);\n    assert(candidate(12L) == 144L);\n}\n\
    void main(){}"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660163029
- exit_code: 0
  program: "import std.math;\n/*\nReturn n-th Fibonacci number.\n    >>> fib(10L)\n\
    \    55L\n    >>> fib(1L)\n    1L\n    >>> fib(8L)\n    21L\n    \n*/\nlong fib(long\
    \ n) \n{\n    if (n <= 1L)\n        return n;\n    else\n        return fib(n\
    \ - 1L) + fib(n - 2L);\n}\nunittest\n{\n    alias candidate = fib;\n\n    assert(candidate(10L)\
    \ == 55L);\n    assert(candidate(1L) == 1L);\n    assert(candidate(8L) == 21L);\n\
    \    assert(candidate(11L) == 89L);\n    assert(candidate(12L) == 144L);\n}\n\
    void main(){}"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660163029
- exit_code: 0
  program: "import std.math;\n/*\nReturn n-th Fibonacci number.\n    >>> fib(10L)\n\
    \    55L\n    >>> fib(1L)\n    1L\n    >>> fib(8L)\n    21L\n    \n*/\nlong fib(long\
    \ n) \n{\n    if (n < 2) \n        return n;\n    return fib(n - 1) + fib(n -\
    \ 2);\n}\nunittest\n{\n    alias candidate = fib;\n\n    assert(candidate(10L)\
    \ == 55L);\n    assert(candidate(1L) == 1L);\n    assert(candidate(8L) == 21L);\n\
    \    assert(candidate(11L) == 89L);\n    assert(candidate(12L) == 144L);\n}\n\
    void main(){}"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660163029
- exit_code: 0
  program: "import std.math;\n/*\nReturn n-th Fibonacci number.\n    >>> fib(10L)\n\
    \    55L\n    >>> fib(1L)\n    1L\n    >>> fib(8L)\n    21L\n    \n*/\nlong fib(long\
    \ n) \n{\n    if (n < 2)\n        return n;\n    return fib(n - 1) + fib(n - 2);\n\
    }\nunittest\n{\n    alias candidate = fib;\n\n    assert(candidate(10L) == 55L);\n\
    \    assert(candidate(1L) == 1L);\n    assert(candidate(8L) == 21L);\n    assert(candidate(11L)\
    \ == 89L);\n    assert(candidate(12L) == 144L);\n}\nvoid main(){}"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660163029
- exit_code: 0
  program: "import std.math;\n/*\nReturn n-th Fibonacci number.\n    >>> fib(10L)\n\
    \    55L\n    >>> fib(1L)\n    1L\n    >>> fib(8L)\n    21L\n    \n*/\nlong fib(long\
    \ n) \n{\n    if (n < 2)\n        return n;\n    else\n        return fib(n -\
    \ 1) + fib(n - 2);\n}\nunittest\n{\n    alias candidate = fib;\n\n    assert(candidate(10L)\
    \ == 55L);\n    assert(candidate(1L) == 1L);\n    assert(candidate(8L) == 21L);\n\
    \    assert(candidate(11L) == 89L);\n    assert(candidate(12L) == 144L);\n}\n\
    void main(){}"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660163029
- exit_code: 0
  program: "import std.math;\n/*\nReturn n-th Fibonacci number.\n    >>> fib(10L)\n\
    \    55L\n    >>> fib(1L)\n    1L\n    >>> fib(8L)\n    21L\n    \n*/\nlong fib(long\
    \ n) \n{\n    if (n < 2)\n        return n;\n    else\n        return fib(n -\
    \ 1) + fib(n - 2);\n}\nunittest\n{\n    alias candidate = fib;\n\n    assert(candidate(10L)\
    \ == 55L);\n    assert(candidate(1L) == 1L);\n    assert(candidate(8L) == 21L);\n\
    \    assert(candidate(11L) == 89L);\n    assert(candidate(12L) == 144L);\n}\n\
    void main(){}"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660163029
- exit_code: 0
  program: "import std.math;\n/*\nReturn n-th Fibonacci number.\n    >>> fib(10L)\n\
    \    55L\n    >>> fib(1L)\n    1L\n    >>> fib(8L)\n    21L\n    \n*/\nlong fib(long\
    \ n) \n{\n    if (n < 2)\n        return n;\n    else\n        return fib(n -\
    \ 1) + fib(n - 2);\n}\nunittest\n{\n    alias candidate = fib;\n\n    assert(candidate(10L)\
    \ == 55L);\n    assert(candidate(1L) == 1L);\n    assert(candidate(8L) == 21L);\n\
    \    assert(candidate(11L) == 89L);\n    assert(candidate(12L) == 144L);\n}\n\
    void main(){}"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660163029
- exit_code: 0
  program: "import std.math;\n/*\nReturn n-th Fibonacci number.\n    >>> fib(10L)\n\
    \    55L\n    >>> fib(1L)\n    1L\n    >>> fib(8L)\n    21L\n    \n*/\nlong fib(long\
    \ n) \n{\n    if (n <= 1L) \n    {\n        return n;\n    }\n    else \n    {\n\
    \        return fib(n - 1L) + fib(n - 2L);\n    }\n}\nunittest\n{\n    alias candidate\
    \ = fib;\n\n    assert(candidate(10L) == 55L);\n    assert(candidate(1L) == 1L);\n\
    \    assert(candidate(8L) == 21L);\n    assert(candidate(11L) == 89L);\n    assert(candidate(12L)\
    \ == 144L);\n}\nvoid main(){}"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660163029
- exit_code: 0
  program: "import std.math;\n/*\nReturn n-th Fibonacci number.\n    >>> fib(10L)\n\
    \    55L\n    >>> fib(1L)\n    1L\n    >>> fib(8L)\n    21L\n    \n*/\nlong fib(long\
    \ n) \n{\n    if (n <= 1L) \n    {\n        return n;\n    }\n    else \n    {\n\
    \        return fib(n - 1L) + fib(n - 2L);\n    }\n}\nunittest\n{\n    alias candidate\
    \ = fib;\n\n    assert(candidate(10L) == 55L);\n    assert(candidate(1L) == 1L);\n\
    \    assert(candidate(8L) == 21L);\n    assert(candidate(11L) == 89L);\n    assert(candidate(12L)\
    \ == 144L);\n}\nvoid main(){}"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660163029
- exit_code: 0
  program: "import std.math;\n/*\nReturn n-th Fibonacci number.\n    >>> fib(10L)\n\
    \    55L\n    >>> fib(1L)\n    1L\n    >>> fib(8L)\n    21L\n    \n*/\nlong fib(long\
    \ n) \n{\n    if (n <= 1L) \n        return n;\n    else \n        return fib(n\
    \ - 1L) + fib(n - 2L);\n}\nunittest\n{\n    alias candidate = fib;\n\n    assert(candidate(10L)\
    \ == 55L);\n    assert(candidate(1L) == 1L);\n    assert(candidate(8L) == 21L);\n\
    \    assert(candidate(11L) == 89L);\n    assert(candidate(12L) == 144L);\n}\n\
    void main(){}"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660163029
- exit_code: 0
  program: "import std.math;\n/*\nReturn n-th Fibonacci number.\n    >>> fib(10L)\n\
    \    55L\n    >>> fib(1L)\n    1L\n    >>> fib(8L)\n    21L\n    \n*/\nlong fib(long\
    \ n) \n{\n    if (n <= 1L)\n        return n;\n    else\n        return fib(n\
    \ - 1L) + fib(n - 2L);\n}\nunittest\n{\n    alias candidate = fib;\n\n    assert(candidate(10L)\
    \ == 55L);\n    assert(candidate(1L) == 1L);\n    assert(candidate(8L) == 21L);\n\
    \    assert(candidate(11L) == 89L);\n    assert(candidate(12L) == 144L);\n}\n\
    void main(){}"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660163029
- exit_code: 0
  program: "import std.math;\n/*\nReturn n-th Fibonacci number.\n    >>> fib(10L)\n\
    \    55L\n    >>> fib(1L)\n    1L\n    >>> fib(8L)\n    21L\n    \n*/\nlong fib(long\
    \ n) \n{\n    if (n < 2)\n        return n;\n    return fib(n - 1) + fib(n - 2);\n\
    }\nunittest\n{\n    alias candidate = fib;\n\n    assert(candidate(10L) == 55L);\n\
    \    assert(candidate(1L) == 1L);\n    assert(candidate(8L) == 21L);\n    assert(candidate(11L)\
    \ == 89L);\n    assert(candidate(12L) == 144L);\n}\nvoid main(){}"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660163029
- exit_code: 0
  program: "import std.math;\n/*\nReturn n-th Fibonacci number.\n    >>> fib(10L)\n\
    \    55L\n    >>> fib(1L)\n    1L\n    >>> fib(8L)\n    21L\n    \n*/\nlong fib(long\
    \ n) \n{\n    if (n <= 1L)\n        return n;\n    else\n        return fib(n\
    \ - 1L) + fib(n - 2L);\n}\nunittest\n{\n    alias candidate = fib;\n\n    assert(candidate(10L)\
    \ == 55L);\n    assert(candidate(1L) == 1L);\n    assert(candidate(8L) == 21L);\n\
    \    assert(candidate(11L) == 89L);\n    assert(candidate(12L) == 144L);\n}\n\
    void main(){}"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660163029
- exit_code: 0
  program: "import std.math;\n/*\nReturn n-th Fibonacci number.\n    >>> fib(10L)\n\
    \    55L\n    >>> fib(1L)\n    1L\n    >>> fib(8L)\n    21L\n    \n*/\nlong fib(long\
    \ n) \n{\n    long a = 0L;\n    long b = 1L;\n    long i = 0L;\n    while (i <\
    \ n) {\n        long temp = a;\n        a = b;\n        b = temp + b;\n      \
    \  i = i + 1L;\n    }\n    return a;\n}\nunittest\n{\n    alias candidate = fib;\n\
    \n    assert(candidate(10L) == 55L);\n    assert(candidate(1L) == 1L);\n    assert(candidate(8L)\
    \ == 21L);\n    assert(candidate(11L) == 89L);\n    assert(candidate(12L) == 144L);\n\
    }\nvoid main(){}"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660163029
- exit_code: 0
  program: "import std.math;\n/*\nReturn n-th Fibonacci number.\n    >>> fib(10L)\n\
    \    55L\n    >>> fib(1L)\n    1L\n    >>> fib(8L)\n    21L\n    \n*/\nlong fib(long\
    \ n) \n{\n    if (n < 2)\n        return n;\n    else\n        return fib(n -\
    \ 1) + fib(n - 2);\n}\nunittest\n{\n    alias candidate = fib;\n\n    assert(candidate(10L)\
    \ == 55L);\n    assert(candidate(1L) == 1L);\n    assert(candidate(8L) == 21L);\n\
    \    assert(candidate(11L) == 89L);\n    assert(candidate(12L) == 144L);\n}\n\
    void main(){}"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660163029
- exit_code: 0
  program: "import std.math;\n/*\nReturn n-th Fibonacci number.\n    >>> fib(10L)\n\
    \    55L\n    >>> fib(1L)\n    1L\n    >>> fib(8L)\n    21L\n    \n*/\nlong fib(long\
    \ n) \n{\n    if (n < 2) \n    {\n        return n;\n    }\n    return fib(n -\
    \ 1) + fib(n - 2);\n}\nunittest\n{\n    alias candidate = fib;\n\n    assert(candidate(10L)\
    \ == 55L);\n    assert(candidate(1L) == 1L);\n    assert(candidate(8L) == 21L);\n\
    \    assert(candidate(11L) == 89L);\n    assert(candidate(12L) == 144L);\n}\n\
    void main(){}"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660163029
- exit_code: 0
  program: "import std.math;\n/*\nReturn n-th Fibonacci number.\n    >>> fib(10L)\n\
    \    55L\n    >>> fib(1L)\n    1L\n    >>> fib(8L)\n    21L\n    \n*/\nlong fib(long\
    \ n) \n{\n    if (n < 2) \n    {\n        return n;\n    }\n    else \n    {\n\
    \        return fib(n - 1) + fib(n - 2);\n    }\n}\nunittest\n{\n    alias candidate\
    \ = fib;\n\n    assert(candidate(10L) == 55L);\n    assert(candidate(1L) == 1L);\n\
    \    assert(candidate(8L) == 21L);\n    assert(candidate(11L) == 89L);\n    assert(candidate(12L)\
    \ == 144L);\n}\nvoid main(){}"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660163029
- exit_code: 0
  program: "import std.math;\n/*\nReturn n-th Fibonacci number.\n    >>> fib(10L)\n\
    \    55L\n    >>> fib(1L)\n    1L\n    >>> fib(8L)\n    21L\n    \n*/\nlong fib(long\
    \ n) \n{\n    if (n < 2)\n        return n;\n    return fib(n - 1) + fib(n - 2);\n\
    }\nunittest\n{\n    alias candidate = fib;\n\n    assert(candidate(10L) == 55L);\n\
    \    assert(candidate(1L) == 1L);\n    assert(candidate(8L) == 21L);\n    assert(candidate(11L)\
    \ == 89L);\n    assert(candidate(12L) == 144L);\n}\nvoid main(){}"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660163029
- exit_code: 0
  program: "import std.math;\n/*\nReturn n-th Fibonacci number.\n    >>> fib(10L)\n\
    \    55L\n    >>> fib(1L)\n    1L\n    >>> fib(8L)\n    21L\n    \n*/\nlong fib(long\
    \ n) \n{\n    if (n <= 1L)\n        return n;\n    else\n        return fib(n\
    \ - 1L) + fib(n - 2L);\n}\nunittest\n{\n    alias candidate = fib;\n\n    assert(candidate(10L)\
    \ == 55L);\n    assert(candidate(1L) == 1L);\n    assert(candidate(8L) == 21L);\n\
    \    assert(candidate(11L) == 89L);\n    assert(candidate(12L) == 144L);\n}\n\
    void main(){}"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660163029
- exit_code: 0
  program: "import std.math;\n/*\nReturn n-th Fibonacci number.\n    >>> fib(10L)\n\
    \    55L\n    >>> fib(1L)\n    1L\n    >>> fib(8L)\n    21L\n    \n*/\nlong fib(long\
    \ n) \n{\n    if (n <= 1L)\n        return n;\n    else\n        return fib(n\
    \ - 1L) + fib(n - 2L);\n}\nunittest\n{\n    alias candidate = fib;\n\n    assert(candidate(10L)\
    \ == 55L);\n    assert(candidate(1L) == 1L);\n    assert(candidate(8L) == 21L);\n\
    \    assert(candidate(11L) == 89L);\n    assert(candidate(12L) == 144L);\n}\n\
    void main(){}"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660163029
- exit_code: 0
  program: "import std.math;\n/*\nReturn n-th Fibonacci number.\n    >>> fib(10L)\n\
    \    55L\n    >>> fib(1L)\n    1L\n    >>> fib(8L)\n    21L\n    \n*/\nlong fib(long\
    \ n) \n{\n    if (n <= 2L) return 1L;\n    return fib(n - 1L) + fib(n - 2L);\n\
    }\nunittest\n{\n    alias candidate = fib;\n\n    assert(candidate(10L) == 55L);\n\
    \    assert(candidate(1L) == 1L);\n    assert(candidate(8L) == 21L);\n    assert(candidate(11L)\
    \ == 89L);\n    assert(candidate(12L) == 144L);\n}\nvoid main(){}"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660163029
- exit_code: 0
  program: "import std.math;\n/*\nReturn n-th Fibonacci number.\n    >>> fib(10L)\n\
    \    55L\n    >>> fib(1L)\n    1L\n    >>> fib(8L)\n    21L\n    \n*/\nlong fib(long\
    \ n) \n{\n    if (n < 2)\n        return n;\n    else\n        return fib(n -\
    \ 1) + fib(n - 2);\n}\nunittest\n{\n    alias candidate = fib;\n\n    assert(candidate(10L)\
    \ == 55L);\n    assert(candidate(1L) == 1L);\n    assert(candidate(8L) == 21L);\n\
    \    assert(candidate(11L) == 89L);\n    assert(candidate(12L) == 144L);\n}\n\
    void main(){}"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660163029
- exit_code: 0
  program: "import std.math;\n/*\nReturn n-th Fibonacci number.\n    >>> fib(10L)\n\
    \    55L\n    >>> fib(1L)\n    1L\n    >>> fib(8L)\n    21L\n    \n*/\nlong fib(long\
    \ n) \n{\n    if (n < 2) \n    {\n        return n;\n    }\n    else \n    {\n\
    \        return fib(n - 1) + fib(n - 2);\n    }\n}\nunittest\n{\n    alias candidate\
    \ = fib;\n\n    assert(candidate(10L) == 55L);\n    assert(candidate(1L) == 1L);\n\
    \    assert(candidate(8L) == 21L);\n    assert(candidate(11L) == 89L);\n    assert(candidate(12L)\
    \ == 144L);\n}\nvoid main(){}"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660163029
- exit_code: 0
  program: "import std.math;\n/*\nReturn n-th Fibonacci number.\n    >>> fib(10L)\n\
    \    55L\n    >>> fib(1L)\n    1L\n    >>> fib(8L)\n    21L\n    \n*/\nlong fib(long\
    \ n) \n{\n    if (n <= 1L)\n        return n;\n    else\n        return fib(n\
    \ - 1L) + fib(n - 2L);\n}\nunittest\n{\n    alias candidate = fib;\n\n    assert(candidate(10L)\
    \ == 55L);\n    assert(candidate(1L) == 1L);\n    assert(candidate(8L) == 21L);\n\
    \    assert(candidate(11L) == 89L);\n    assert(candidate(12L) == 144L);\n}\n\
    void main(){}"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660163029
- exit_code: 0
  program: "import std.math;\n/*\nReturn n-th Fibonacci number.\n    >>> fib(10L)\n\
    \    55L\n    >>> fib(1L)\n    1L\n    >>> fib(8L)\n    21L\n    \n*/\nlong fib(long\
    \ n) \n{\n    if (n < 2) \n    {\n        return n;\n    }\n    else \n    {\n\
    \        return fib(n - 1) + fib(n - 2);\n    }\n}\nunittest\n{\n    alias candidate\
    \ = fib;\n\n    assert(candidate(10L) == 55L);\n    assert(candidate(1L) == 1L);\n\
    \    assert(candidate(8L) == 21L);\n    assert(candidate(11L) == 89L);\n    assert(candidate(12L)\
    \ == 144L);\n}\nvoid main(){}"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660163029
- exit_code: 0
  program: "import std.math;\n/*\nReturn n-th Fibonacci number.\n    >>> fib(10L)\n\
    \    55L\n    >>> fib(1L)\n    1L\n    >>> fib(8L)\n    21L\n    \n*/\nlong fib(long\
    \ n) \n{\n    if (n < 2) \n    {\n        return n;\n    }\n    else \n    {\n\
    \        return fib(n - 1) + fib(n - 2);\n    }\n}\nunittest\n{\n    alias candidate\
    \ = fib;\n\n    assert(candidate(10L) == 55L);\n    assert(candidate(1L) == 1L);\n\
    \    assert(candidate(8L) == 21L);\n    assert(candidate(11L) == 89L);\n    assert(candidate(12L)\
    \ == 144L);\n}\nvoid main(){}"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660163029
- exit_code: 0
  program: "import std.math;\n/*\nReturn n-th Fibonacci number.\n    >>> fib(10L)\n\
    \    55L\n    >>> fib(1L)\n    1L\n    >>> fib(8L)\n    21L\n    \n*/\nlong fib(long\
    \ n) \n{\n    if (n < 2)\n    {\n        return n;\n    }\n    else\n    {\n \
    \       return fib(n - 1) + fib(n - 2);\n    }\n}\nunittest\n{\n    alias candidate\
    \ = fib;\n\n    assert(candidate(10L) == 55L);\n    assert(candidate(1L) == 1L);\n\
    \    assert(candidate(8L) == 21L);\n    assert(candidate(11L) == 89L);\n    assert(candidate(12L)\
    \ == 144L);\n}\nvoid main(){}"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660163029
- exit_code: 0
  program: "import std.math;\n/*\nReturn n-th Fibonacci number.\n    >>> fib(10L)\n\
    \    55L\n    >>> fib(1L)\n    1L\n    >>> fib(8L)\n    21L\n    \n*/\nlong fib(long\
    \ n) \n{\n    if (n <= 1L) \n    {\n        return n;\n    }\n    else \n    {\n\
    \        return fib(n - 1L) + fib(n - 2L);\n    }\n}\nunittest\n{\n    alias candidate\
    \ = fib;\n\n    assert(candidate(10L) == 55L);\n    assert(candidate(1L) == 1L);\n\
    \    assert(candidate(8L) == 21L);\n    assert(candidate(11L) == 89L);\n    assert(candidate(12L)\
    \ == 144L);\n}\nvoid main(){}"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660163029
- exit_code: 0
  program: "import std.math;\n/*\nReturn n-th Fibonacci number.\n    >>> fib(10L)\n\
    \    55L\n    >>> fib(1L)\n    1L\n    >>> fib(8L)\n    21L\n    \n*/\nlong fib(long\
    \ n) \n{\n    if (n <= 1L)\n        return n;\n    else\n        return fib(n\
    \ - 1L) + fib(n - 2L);\n}\nunittest\n{\n    alias candidate = fib;\n\n    assert(candidate(10L)\
    \ == 55L);\n    assert(candidate(1L) == 1L);\n    assert(candidate(8L) == 21L);\n\
    \    assert(candidate(11L) == 89L);\n    assert(candidate(12L) == 144L);\n}\n\
    void main(){}"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660163029
- exit_code: 0
  program: "import std.math;\n/*\nReturn n-th Fibonacci number.\n    >>> fib(10L)\n\
    \    55L\n    >>> fib(1L)\n    1L\n    >>> fib(8L)\n    21L\n    \n*/\nlong fib(long\
    \ n) \n{\n    if (n <= 1L) \n    {\n        return n;\n    }\n    else \n    {\n\
    \        return fib(n - 1L) + fib(n - 2L);\n    }\n}\nunittest\n{\n    alias candidate\
    \ = fib;\n\n    assert(candidate(10L) == 55L);\n    assert(candidate(1L) == 1L);\n\
    \    assert(candidate(8L) == 21L);\n    assert(candidate(11L) == 89L);\n    assert(candidate(12L)\
    \ == 144L);\n}\nvoid main(){}"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660163029
- exit_code: 0
  program: "import std.math;\n/*\nReturn n-th Fibonacci number.\n    >>> fib(10L)\n\
    \    55L\n    >>> fib(1L)\n    1L\n    >>> fib(8L)\n    21L\n    \n*/\nlong fib(long\
    \ n) \n{\n    if (n < 2)\n        return n;\n    else\n        return fib(n -\
    \ 1) + fib(n - 2);\n}\nunittest\n{\n    alias candidate = fib;\n\n    assert(candidate(10L)\
    \ == 55L);\n    assert(candidate(1L) == 1L);\n    assert(candidate(8L) == 21L);\n\
    \    assert(candidate(11L) == 89L);\n    assert(candidate(12L) == 144L);\n}\n\
    void main(){}"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660163029
- exit_code: 0
  program: "import std.math;\n/*\nReturn n-th Fibonacci number.\n    >>> fib(10L)\n\
    \    55L\n    >>> fib(1L)\n    1L\n    >>> fib(8L)\n    21L\n    \n*/\nlong fib(long\
    \ n) \n{\n    if (n < 2) \n    {\n        return n;\n    }\n    else \n    {\n\
    \        return fib(n - 1) + fib(n - 2);\n    }\n}\nunittest\n{\n    alias candidate\
    \ = fib;\n\n    assert(candidate(10L) == 55L);\n    assert(candidate(1L) == 1L);\n\
    \    assert(candidate(8L) == 21L);\n    assert(candidate(11L) == 89L);\n    assert(candidate(12L)\
    \ == 144L);\n}\nvoid main(){}"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660163029
- exit_code: 0
  program: "import std.math;\n/*\nReturn n-th Fibonacci number.\n    >>> fib(10L)\n\
    \    55L\n    >>> fib(1L)\n    1L\n    >>> fib(8L)\n    21L\n    \n*/\nlong fib(long\
    \ n) \n{\n    if (n <= 1L)\n        return n;\n    else\n        return fib(n\
    \ - 1L) + fib(n - 2L);\n}\nunittest\n{\n    alias candidate = fib;\n\n    assert(candidate(10L)\
    \ == 55L);\n    assert(candidate(1L) == 1L);\n    assert(candidate(8L) == 21L);\n\
    \    assert(candidate(11L) == 89L);\n    assert(candidate(12L) == 144L);\n}\n\
    void main(){}"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660163029
- exit_code: 0
  program: "import std.math;\n/*\nReturn n-th Fibonacci number.\n    >>> fib(10L)\n\
    \    55L\n    >>> fib(1L)\n    1L\n    >>> fib(8L)\n    21L\n    \n*/\nlong fib(long\
    \ n) \n{\n    if (n < 2) \n    {\n        return n;\n    }\n    else \n    {\n\
    \        return fib(n - 1) + fib(n - 2);\n    }\n}\nunittest\n{\n    alias candidate\
    \ = fib;\n\n    assert(candidate(10L) == 55L);\n    assert(candidate(1L) == 1L);\n\
    \    assert(candidate(8L) == 21L);\n    assert(candidate(11L) == 89L);\n    assert(candidate(12L)\
    \ == 144L);\n}\nvoid main(){}"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660163029
- exit_code: 0
  program: "import std.math;\n/*\nReturn n-th Fibonacci number.\n    >>> fib(10L)\n\
    \    55L\n    >>> fib(1L)\n    1L\n    >>> fib(8L)\n    21L\n    \n*/\nlong fib(long\
    \ n) \n{\n    if (n < 2)\n        return n;\n    else\n        return fib(n -\
    \ 1) + fib(n - 2);\n}\nunittest\n{\n    alias candidate = fib;\n\n    assert(candidate(10L)\
    \ == 55L);\n    assert(candidate(1L) == 1L);\n    assert(candidate(8L) == 21L);\n\
    \    assert(candidate(11L) == 89L);\n    assert(candidate(12L) == 144L);\n}\n\
    void main(){}"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660163029
- exit_code: 0
  program: "import std.math;\n/*\nReturn n-th Fibonacci number.\n    >>> fib(10L)\n\
    \    55L\n    >>> fib(1L)\n    1L\n    >>> fib(8L)\n    21L\n    \n*/\nlong fib(long\
    \ n) \n{\n    if (n < 2) \n    {\n        return n;\n    }\n    else \n    {\n\
    \        return fib(n - 1) + fib(n - 2);\n    }\n}\nunittest\n{\n    alias candidate\
    \ = fib;\n\n    assert(candidate(10L) == 55L);\n    assert(candidate(1L) == 1L);\n\
    \    assert(candidate(8L) == 21L);\n    assert(candidate(11L) == 89L);\n    assert(candidate(12L)\
    \ == 144L);\n}\nvoid main(){}"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660163029
- exit_code: 0
  program: "import std.math;\n/*\nReturn n-th Fibonacci number.\n    >>> fib(10L)\n\
    \    55L\n    >>> fib(1L)\n    1L\n    >>> fib(8L)\n    21L\n    \n*/\nlong fib(long\
    \ n) \n{\n    if (n <= 1L)\n        return n;\n    return fib(n - 1L) + fib(n\
    \ - 2L);\n}\nunittest\n{\n    alias candidate = fib;\n\n    assert(candidate(10L)\
    \ == 55L);\n    assert(candidate(1L) == 1L);\n    assert(candidate(8L) == 21L);\n\
    \    assert(candidate(11L) == 89L);\n    assert(candidate(12L) == 144L);\n}\n\
    void main(){}"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660163029
- exit_code: 0
  program: "import std.math;\n/*\nReturn n-th Fibonacci number.\n    >>> fib(10L)\n\
    \    55L\n    >>> fib(1L)\n    1L\n    >>> fib(8L)\n    21L\n    \n*/\nlong fib(long\
    \ n) \n{\n    if (n < 2) return n;\n    return fib(n - 1) + fib(n - 2);\n}\nunittest\n\
    {\n    alias candidate = fib;\n\n    assert(candidate(10L) == 55L);\n    assert(candidate(1L)\
    \ == 1L);\n    assert(candidate(8L) == 21L);\n    assert(candidate(11L) == 89L);\n\
    \    assert(candidate(12L) == 144L);\n}\nvoid main(){}"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660163029
- exit_code: 0
  program: "import std.math;\n/*\nReturn n-th Fibonacci number.\n    >>> fib(10L)\n\
    \    55L\n    >>> fib(1L)\n    1L\n    >>> fib(8L)\n    21L\n    \n*/\nlong fib(long\
    \ n) \n{\n    if (n <= 1L)\n        return n;\n    return fib(n - 1L) + fib(n\
    \ - 2L);\n}\nunittest\n{\n    alias candidate = fib;\n\n    assert(candidate(10L)\
    \ == 55L);\n    assert(candidate(1L) == 1L);\n    assert(candidate(8L) == 21L);\n\
    \    assert(candidate(11L) == 89L);\n    assert(candidate(12L) == 144L);\n}\n\
    void main(){}"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660163029
- exit_code: 0
  program: "import std.math;\n/*\nReturn n-th Fibonacci number.\n    >>> fib(10L)\n\
    \    55L\n    >>> fib(1L)\n    1L\n    >>> fib(8L)\n    21L\n    \n*/\nlong fib(long\
    \ n) \n{\n    if (n < 2)\n        return n;\n    else\n        return fib(n -\
    \ 1) + fib(n - 2);\n}\nunittest\n{\n    alias candidate = fib;\n\n    assert(candidate(10L)\
    \ == 55L);\n    assert(candidate(1L) == 1L);\n    assert(candidate(8L) == 21L);\n\
    \    assert(candidate(11L) == 89L);\n    assert(candidate(12L) == 144L);\n}\n\
    void main(){}"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660163029
- exit_code: 0
  program: "import std.math;\n/*\nReturn n-th Fibonacci number.\n    >>> fib(10L)\n\
    \    55L\n    >>> fib(1L)\n    1L\n    >>> fib(8L)\n    21L\n    \n*/\nlong fib(long\
    \ n) \n{\n    if (n == 0L)\n    {\n        return 0L;\n    }\n    else if (n ==\
    \ 1L)\n    {\n        return 1L;\n    }\n    else\n    {\n        return fib(n\
    \ - 1L) + fib(n - 2L);\n    }\n}\nunittest\n{\n    alias candidate = fib;\n\n\
    \    assert(candidate(10L) == 55L);\n    assert(candidate(1L) == 1L);\n    assert(candidate(8L)\
    \ == 21L);\n    assert(candidate(11L) == 89L);\n    assert(candidate(12L) == 144L);\n\
    }\nvoid main(){}"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660163029
- exit_code: 0
  program: "import std.math;\n/*\nReturn n-th Fibonacci number.\n    >>> fib(10L)\n\
    \    55L\n    >>> fib(1L)\n    1L\n    >>> fib(8L)\n    21L\n    \n*/\nlong fib(long\
    \ n) \n{\n    if (n < 2)\n        return n;\n    else\n        return fib(n -\
    \ 1) + fib(n - 2);\n}\nunittest\n{\n    alias candidate = fib;\n\n    assert(candidate(10L)\
    \ == 55L);\n    assert(candidate(1L) == 1L);\n    assert(candidate(8L) == 21L);\n\
    \    assert(candidate(11L) == 89L);\n    assert(candidate(12L) == 144L);\n}\n\
    void main(){}"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660163029
- exit_code: 0
  program: "import std.math;\n/*\nReturn n-th Fibonacci number.\n    >>> fib(10L)\n\
    \    55L\n    >>> fib(1L)\n    1L\n    >>> fib(8L)\n    21L\n    \n*/\nlong fib(long\
    \ n) \n{\n    if (n < 2)\n        return n;\n    else\n        return fib(n -\
    \ 1) + fib(n - 2);\n}\nunittest\n{\n    alias candidate = fib;\n\n    assert(candidate(10L)\
    \ == 55L);\n    assert(candidate(1L) == 1L);\n    assert(candidate(8L) == 21L);\n\
    \    assert(candidate(11L) == 89L);\n    assert(candidate(12L) == 144L);\n}\n\
    void main(){}"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660163029
- exit_code: 0
  program: "import std.math;\n/*\nReturn n-th Fibonacci number.\n    >>> fib(10L)\n\
    \    55L\n    >>> fib(1L)\n    1L\n    >>> fib(8L)\n    21L\n    \n*/\nlong fib(long\
    \ n) \n{\n    if (n < 2)\n        return n;\n    else\n        return fib(n -\
    \ 1) + fib(n - 2);\n}\nunittest\n{\n    alias candidate = fib;\n\n    assert(candidate(10L)\
    \ == 55L);\n    assert(candidate(1L) == 1L);\n    assert(candidate(8L) == 21L);\n\
    \    assert(candidate(11L) == 89L);\n    assert(candidate(12L) == 144L);\n}\n\
    void main(){}"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660163029
- exit_code: 0
  program: "import std.math;\n/*\nReturn n-th Fibonacci number.\n    >>> fib(10L)\n\
    \    55L\n    >>> fib(1L)\n    1L\n    >>> fib(8L)\n    21L\n    \n*/\nlong fib(long\
    \ n) \n{\n    if (n < 2)\n        return n;\n    else\n        return fib(n -\
    \ 1) + fib(n - 2);\n}\nunittest\n{\n    alias candidate = fib;\n\n    assert(candidate(10L)\
    \ == 55L);\n    assert(candidate(1L) == 1L);\n    assert(candidate(8L) == 21L);\n\
    \    assert(candidate(11L) == 89L);\n    assert(candidate(12L) == 144L);\n}\n\
    void main(){}"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660163029
- exit_code: 0
  program: "import std.math;\n/*\nReturn n-th Fibonacci number.\n    >>> fib(10L)\n\
    \    55L\n    >>> fib(1L)\n    1L\n    >>> fib(8L)\n    21L\n    \n*/\nlong fib(long\
    \ n) \n{\n    if (n <= 2L) return 1L;\n    return fib(n - 1L) + fib(n - 2L);\n\
    }\nunittest\n{\n    alias candidate = fib;\n\n    assert(candidate(10L) == 55L);\n\
    \    assert(candidate(1L) == 1L);\n    assert(candidate(8L) == 21L);\n    assert(candidate(11L)\
    \ == 89L);\n    assert(candidate(12L) == 144L);\n}\nvoid main(){}"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660163029
- exit_code: 0
  program: "import std.math;\n/*\nReturn n-th Fibonacci number.\n    >>> fib(10L)\n\
    \    55L\n    >>> fib(1L)\n    1L\n    >>> fib(8L)\n    21L\n    \n*/\nlong fib(long\
    \ n) \n{\n    if (n < 2)\n        return n;\n    else\n        return fib(n -\
    \ 1) + fib(n - 2);\n}\nunittest\n{\n    alias candidate = fib;\n\n    assert(candidate(10L)\
    \ == 55L);\n    assert(candidate(1L) == 1L);\n    assert(candidate(8L) == 21L);\n\
    \    assert(candidate(11L) == 89L);\n    assert(candidate(12L) == 144L);\n}\n\
    void main(){}"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660163029
- exit_code: 0
  program: "import std.math;\n/*\nReturn n-th Fibonacci number.\n    >>> fib(10L)\n\
    \    55L\n    >>> fib(1L)\n    1L\n    >>> fib(8L)\n    21L\n    \n*/\nlong fib(long\
    \ n) \n{\n    if (n < 2)\n        return n;\n    else\n        return fib(n -\
    \ 1) + fib(n - 2);\n}\nunittest\n{\n    alias candidate = fib;\n\n    assert(candidate(10L)\
    \ == 55L);\n    assert(candidate(1L) == 1L);\n    assert(candidate(8L) == 21L);\n\
    \    assert(candidate(11L) == 89L);\n    assert(candidate(12L) == 144L);\n}\n\
    void main(){}"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660163029
- exit_code: 0
  program: "import std.math;\n/*\nReturn n-th Fibonacci number.\n    >>> fib(10L)\n\
    \    55L\n    >>> fib(1L)\n    1L\n    >>> fib(8L)\n    21L\n    \n*/\nlong fib(long\
    \ n) \n{\n    if (n <= 2L) \n        return 1L;\n    else \n        return fib(n\
    \ - 1L) + fib(n - 2L);\n}\nunittest\n{\n    alias candidate = fib;\n\n    assert(candidate(10L)\
    \ == 55L);\n    assert(candidate(1L) == 1L);\n    assert(candidate(8L) == 21L);\n\
    \    assert(candidate(11L) == 89L);\n    assert(candidate(12L) == 144L);\n}\n\
    void main(){}"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660163029
- exit_code: 0
  program: "import std.math;\n/*\nReturn n-th Fibonacci number.\n    >>> fib(10L)\n\
    \    55L\n    >>> fib(1L)\n    1L\n    >>> fib(8L)\n    21L\n    \n*/\nlong fib(long\
    \ n) \n{\n    if (n < 2)\n        return n;\n    else\n        return fib(n -\
    \ 1) + fib(n - 2);\n}\nunittest\n{\n    alias candidate = fib;\n\n    assert(candidate(10L)\
    \ == 55L);\n    assert(candidate(1L) == 1L);\n    assert(candidate(8L) == 21L);\n\
    \    assert(candidate(11L) == 89L);\n    assert(candidate(12L) == 144L);\n}\n\
    void main(){}"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660163029
- exit_code: 0
  program: "import std.math;\n/*\nReturn n-th Fibonacci number.\n    >>> fib(10L)\n\
    \    55L\n    >>> fib(1L)\n    1L\n    >>> fib(8L)\n    21L\n    \n*/\nlong fib(long\
    \ n) \n{\n    if (n < 2)\n        return n;\n    else\n        return fib(n -\
    \ 1) + fib(n - 2);\n}\nunittest\n{\n    alias candidate = fib;\n\n    assert(candidate(10L)\
    \ == 55L);\n    assert(candidate(1L) == 1L);\n    assert(candidate(8L) == 21L);\n\
    \    assert(candidate(11L) == 89L);\n    assert(candidate(12L) == 144L);\n}\n\
    void main(){}"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660163029
- exit_code: 0
  program: "import std.math;\n/*\nReturn n-th Fibonacci number.\n    >>> fib(10L)\n\
    \    55L\n    >>> fib(1L)\n    1L\n    >>> fib(8L)\n    21L\n    \n*/\nlong fib(long\
    \ n) \n{\n    if (n < 2)\n        return n;\n    else\n        return fib(n -\
    \ 1) + fib(n - 2);\n}\nunittest\n{\n    alias candidate = fib;\n\n    assert(candidate(10L)\
    \ == 55L);\n    assert(candidate(1L) == 1L);\n    assert(candidate(8L) == 21L);\n\
    \    assert(candidate(11L) == 89L);\n    assert(candidate(12L) == 144L);\n}\n\
    void main(){}"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660163029
- exit_code: 0
  program: "import std.math;\n/*\nReturn n-th Fibonacci number.\n    >>> fib(10L)\n\
    \    55L\n    >>> fib(1L)\n    1L\n    >>> fib(8L)\n    21L\n    \n*/\nlong fib(long\
    \ n) \n{\n    if (n < 2)\n        return n;\n    else\n        return fib(n -\
    \ 1) + fib(n - 2);\n}\nunittest\n{\n    alias candidate = fib;\n\n    assert(candidate(10L)\
    \ == 55L);\n    assert(candidate(1L) == 1L);\n    assert(candidate(8L) == 21L);\n\
    \    assert(candidate(11L) == 89L);\n    assert(candidate(12L) == 144L);\n}\n\
    void main(){}"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660163029
- exit_code: 0
  program: "import std.math;\n/*\nReturn n-th Fibonacci number.\n    >>> fib(10L)\n\
    \    55L\n    >>> fib(1L)\n    1L\n    >>> fib(8L)\n    21L\n    \n*/\nlong fib(long\
    \ n) \n{\n    if (n <= 2L) \n        return 1L;\n    return fib(n - 1L) + fib(n\
    \ - 2L);\n}\nunittest\n{\n    alias candidate = fib;\n\n    assert(candidate(10L)\
    \ == 55L);\n    assert(candidate(1L) == 1L);\n    assert(candidate(8L) == 21L);\n\
    \    assert(candidate(11L) == 89L);\n    assert(candidate(12L) == 144L);\n}\n\
    void main(){}"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660163029
- exit_code: 0
  program: "import std.math;\n/*\nReturn n-th Fibonacci number.\n    >>> fib(10L)\n\
    \    55L\n    >>> fib(1L)\n    1L\n    >>> fib(8L)\n    21L\n    \n*/\nlong fib(long\
    \ n) \n{\n    if (n < 2) \n    {\n        return n;\n    }\n    else \n    {\n\
    \        return fib(n - 1) + fib(n - 2);\n    }\n}\nunittest\n{\n    alias candidate\
    \ = fib;\n\n    assert(candidate(10L) == 55L);\n    assert(candidate(1L) == 1L);\n\
    \    assert(candidate(8L) == 21L);\n    assert(candidate(11L) == 89L);\n    assert(candidate(12L)\
    \ == 144L);\n}\nvoid main(){}"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660163029
- exit_code: 0
  program: "import std.math;\n/*\nReturn n-th Fibonacci number.\n    >>> fib(10L)\n\
    \    55L\n    >>> fib(1L)\n    1L\n    >>> fib(8L)\n    21L\n    \n*/\nlong fib(long\
    \ n) \n{\n    if (n < 2)\n        return n;\n    else\n        return fib(n -\
    \ 1) + fib(n - 2);\n}\nunittest\n{\n    alias candidate = fib;\n\n    assert(candidate(10L)\
    \ == 55L);\n    assert(candidate(1L) == 1L);\n    assert(candidate(8L) == 21L);\n\
    \    assert(candidate(11L) == 89L);\n    assert(candidate(12L) == 144L);\n}\n\
    void main(){}"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660163029
- exit_code: 0
  program: "import std.math;\n/*\nReturn n-th Fibonacci number.\n    >>> fib(10L)\n\
    \    55L\n    >>> fib(1L)\n    1L\n    >>> fib(8L)\n    21L\n    \n*/\nlong fib(long\
    \ n) \n{\n    if (n < 2) \n        return n;\n    return fib(n - 1) + fib(n -\
    \ 2);\n}\nunittest\n{\n    alias candidate = fib;\n\n    assert(candidate(10L)\
    \ == 55L);\n    assert(candidate(1L) == 1L);\n    assert(candidate(8L) == 21L);\n\
    \    assert(candidate(11L) == 89L);\n    assert(candidate(12L) == 144L);\n}\n\
    void main(){}"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660163029
- exit_code: 0
  program: "import std.math;\n/*\nReturn n-th Fibonacci number.\n    >>> fib(10L)\n\
    \    55L\n    >>> fib(1L)\n    1L\n    >>> fib(8L)\n    21L\n    \n*/\nlong fib(long\
    \ n) \n{\n    if (n < 2) \n        return n;\n    else \n        return fib(n\
    \ - 1) + fib(n - 2);\n}\nunittest\n{\n    alias candidate = fib;\n\n    assert(candidate(10L)\
    \ == 55L);\n    assert(candidate(1L) == 1L);\n    assert(candidate(8L) == 21L);\n\
    \    assert(candidate(11L) == 89L);\n    assert(candidate(12L) == 144L);\n}\n\
    void main(){}"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660163029
- exit_code: 0
  program: "import std.math;\n/*\nReturn n-th Fibonacci number.\n    >>> fib(10L)\n\
    \    55L\n    >>> fib(1L)\n    1L\n    >>> fib(8L)\n    21L\n    \n*/\nlong fib(long\
    \ n) \n{\n    if (n <= 1L)\n        return n;\n    else\n        return fib(n\
    \ - 1L) + fib(n - 2L);\n}\nunittest\n{\n    alias candidate = fib;\n\n    assert(candidate(10L)\
    \ == 55L);\n    assert(candidate(1L) == 1L);\n    assert(candidate(8L) == 21L);\n\
    \    assert(candidate(11L) == 89L);\n    assert(candidate(12L) == 144L);\n}\n\
    void main(){}"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660163029
- exit_code: 0
  program: "import std.math;\n/*\nReturn n-th Fibonacci number.\n    >>> fib(10L)\n\
    \    55L\n    >>> fib(1L)\n    1L\n    >>> fib(8L)\n    21L\n    \n*/\nlong fib(long\
    \ n) \n{\n    if (n < 2) \n    {\n        return n;\n    }\n    else \n    {\n\
    \        return fib(n - 1) + fib(n - 2);\n    }\n}\nunittest\n{\n    alias candidate\
    \ = fib;\n\n    assert(candidate(10L) == 55L);\n    assert(candidate(1L) == 1L);\n\
    \    assert(candidate(8L) == 21L);\n    assert(candidate(11L) == 89L);\n    assert(candidate(12L)\
    \ == 144L);\n}\nvoid main(){}"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660163029
- exit_code: 0
  program: "import std.math;\n/*\nReturn n-th Fibonacci number.\n    >>> fib(10L)\n\
    \    55L\n    >>> fib(1L)\n    1L\n    >>> fib(8L)\n    21L\n    \n*/\nlong fib(long\
    \ n) \n{\n    if (n <= 1L) \n    {\n        return n;\n    }\n    else \n    {\n\
    \        return fib(n - 1L) + fib(n - 2L);\n    }\n}\nunittest\n{\n    alias candidate\
    \ = fib;\n\n    assert(candidate(10L) == 55L);\n    assert(candidate(1L) == 1L);\n\
    \    assert(candidate(8L) == 21L);\n    assert(candidate(11L) == 89L);\n    assert(candidate(12L)\
    \ == 144L);\n}\nvoid main(){}"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660163029
- exit_code: 0
  program: "import std.math;\n/*\nReturn n-th Fibonacci number.\n    >>> fib(10L)\n\
    \    55L\n    >>> fib(1L)\n    1L\n    >>> fib(8L)\n    21L\n    \n*/\nlong fib(long\
    \ n) \n{\n    if (n < 2) \n        return n;\n    else \n        return fib(n\
    \ - 1) + fib(n - 2);\n}\nunittest\n{\n    alias candidate = fib;\n\n    assert(candidate(10L)\
    \ == 55L);\n    assert(candidate(1L) == 1L);\n    assert(candidate(8L) == 21L);\n\
    \    assert(candidate(11L) == 89L);\n    assert(candidate(12L) == 144L);\n}\n\
    void main(){}"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660163029
- exit_code: 0
  program: "import std.math;\n/*\nReturn n-th Fibonacci number.\n    >>> fib(10L)\n\
    \    55L\n    >>> fib(1L)\n    1L\n    >>> fib(8L)\n    21L\n    \n*/\nlong fib(long\
    \ n) \n{\n    if (n <= 1L)\n        return n;\n    else\n        return fib(n\
    \ - 1L) + fib(n - 2L);\n}\nunittest\n{\n    alias candidate = fib;\n\n    assert(candidate(10L)\
    \ == 55L);\n    assert(candidate(1L) == 1L);\n    assert(candidate(8L) == 21L);\n\
    \    assert(candidate(11L) == 89L);\n    assert(candidate(12L) == 144L);\n}\n\
    void main(){}"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660163029
- exit_code: 0
  program: "import std.math;\n/*\nReturn n-th Fibonacci number.\n    >>> fib(10L)\n\
    \    55L\n    >>> fib(1L)\n    1L\n    >>> fib(8L)\n    21L\n    \n*/\nlong fib(long\
    \ n) \n{\n    if (n <= 1L)\n        return n;\n    else\n        return fib(n\
    \ - 1L) + fib(n - 2L);\n}\nunittest\n{\n    alias candidate = fib;\n\n    assert(candidate(10L)\
    \ == 55L);\n    assert(candidate(1L) == 1L);\n    assert(candidate(8L) == 21L);\n\
    \    assert(candidate(11L) == 89L);\n    assert(candidate(12L) == 144L);\n}\n\
    void main(){}"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660163029
- exit_code: 0
  program: "import std.math;\n/*\nReturn n-th Fibonacci number.\n    >>> fib(10L)\n\
    \    55L\n    >>> fib(1L)\n    1L\n    >>> fib(8L)\n    21L\n    \n*/\nlong fib(long\
    \ n) \n{\n    if (n < 2)\n        return n;\n    else\n        return fib(n -\
    \ 1) + fib(n - 2);\n}\nunittest\n{\n    alias candidate = fib;\n\n    assert(candidate(10L)\
    \ == 55L);\n    assert(candidate(1L) == 1L);\n    assert(candidate(8L) == 21L);\n\
    \    assert(candidate(11L) == 89L);\n    assert(candidate(12L) == 144L);\n}\n\
    void main(){}"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660163029
- exit_code: 0
  program: "import std.math;\n/*\nReturn n-th Fibonacci number.\n    >>> fib(10L)\n\
    \    55L\n    >>> fib(1L)\n    1L\n    >>> fib(8L)\n    21L\n    \n*/\nlong fib(long\
    \ n) \n{\n    if (n < 2)\n        return n;\n    else\n        return fib(n -\
    \ 1) + fib(n - 2);\n}\nunittest\n{\n    alias candidate = fib;\n\n    assert(candidate(10L)\
    \ == 55L);\n    assert(candidate(1L) == 1L);\n    assert(candidate(8L) == 21L);\n\
    \    assert(candidate(11L) == 89L);\n    assert(candidate(12L) == 144L);\n}\n\
    void main(){}"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660163029
- exit_code: 0
  program: "import std.math;\n/*\nReturn n-th Fibonacci number.\n    >>> fib(10L)\n\
    \    55L\n    >>> fib(1L)\n    1L\n    >>> fib(8L)\n    21L\n    \n*/\nlong fib(long\
    \ n) \n{\n    if (n < 2)\n        return n;\n    else\n        return fib(n -\
    \ 1) + fib(n - 2);\n}\nunittest\n{\n    alias candidate = fib;\n\n    assert(candidate(10L)\
    \ == 55L);\n    assert(candidate(1L) == 1L);\n    assert(candidate(8L) == 21L);\n\
    \    assert(candidate(11L) == 89L);\n    assert(candidate(12L) == 144L);\n}\n\
    void main(){}"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660163029
- exit_code: 0
  program: "import std.math;\n/*\nReturn n-th Fibonacci number.\n    >>> fib(10L)\n\
    \    55L\n    >>> fib(1L)\n    1L\n    >>> fib(8L)\n    21L\n    \n*/\nlong fib(long\
    \ n) \n{\n    if (n <= 1L)\n        return n;\n    return fib(n - 1L) + fib(n\
    \ - 2L);\n}\nunittest\n{\n    alias candidate = fib;\n\n    assert(candidate(10L)\
    \ == 55L);\n    assert(candidate(1L) == 1L);\n    assert(candidate(8L) == 21L);\n\
    \    assert(candidate(11L) == 89L);\n    assert(candidate(12L) == 144L);\n}\n\
    void main(){}"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660163029
- exit_code: 0
  program: "import std.math;\n/*\nReturn n-th Fibonacci number.\n    >>> fib(10L)\n\
    \    55L\n    >>> fib(1L)\n    1L\n    >>> fib(8L)\n    21L\n    \n*/\nlong fib(long\
    \ n) \n{\n    if (n < 2)\n        return n;\n    else\n        return fib(n -\
    \ 1) + fib(n - 2);\n}\nunittest\n{\n    alias candidate = fib;\n\n    assert(candidate(10L)\
    \ == 55L);\n    assert(candidate(1L) == 1L);\n    assert(candidate(8L) == 21L);\n\
    \    assert(candidate(11L) == 89L);\n    assert(candidate(12L) == 144L);\n}\n\
    void main(){}"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660163029
- exit_code: 0
  program: "import std.math;\n/*\nReturn n-th Fibonacci number.\n    >>> fib(10L)\n\
    \    55L\n    >>> fib(1L)\n    1L\n    >>> fib(8L)\n    21L\n    \n*/\nlong fib(long\
    \ n) \n{\n    if (n < 2)\n        return n;\n    else\n        return fib(n -\
    \ 1) + fib(n - 2);\n}\nunittest\n{\n    alias candidate = fib;\n\n    assert(candidate(10L)\
    \ == 55L);\n    assert(candidate(1L) == 1L);\n    assert(candidate(8L) == 21L);\n\
    \    assert(candidate(11L) == 89L);\n    assert(candidate(12L) == 144L);\n}\n\
    void main(){}"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660163029
- exit_code: 0
  program: "import std.math;\n/*\nReturn n-th Fibonacci number.\n    >>> fib(10L)\n\
    \    55L\n    >>> fib(1L)\n    1L\n    >>> fib(8L)\n    21L\n    \n*/\nlong fib(long\
    \ n) \n{\n    if (n < 2) \n        return n;\n    else \n        return fib(n\
    \ - 1) + fib(n - 2);\n}\nunittest\n{\n    alias candidate = fib;\n\n    assert(candidate(10L)\
    \ == 55L);\n    assert(candidate(1L) == 1L);\n    assert(candidate(8L) == 21L);\n\
    \    assert(candidate(11L) == 89L);\n    assert(candidate(12L) == 144L);\n}\n\
    void main(){}"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660163029
- exit_code: 0
  program: "import std.math;\n/*\nReturn n-th Fibonacci number.\n    >>> fib(10L)\n\
    \    55L\n    >>> fib(1L)\n    1L\n    >>> fib(8L)\n    21L\n    \n*/\nlong fib(long\
    \ n) \n{\n    if (n <= 1L)\n        return n;\n    else\n        return fib(n\
    \ - 1L) + fib(n - 2L);\n}\nunittest\n{\n    alias candidate = fib;\n\n    assert(candidate(10L)\
    \ == 55L);\n    assert(candidate(1L) == 1L);\n    assert(candidate(8L) == 21L);\n\
    \    assert(candidate(11L) == 89L);\n    assert(candidate(12L) == 144L);\n}\n\
    void main(){}"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660163029
- exit_code: 0
  program: "import std.math;\n/*\nReturn n-th Fibonacci number.\n    >>> fib(10L)\n\
    \    55L\n    >>> fib(1L)\n    1L\n    >>> fib(8L)\n    21L\n    \n*/\nlong fib(long\
    \ n) \n{\n    if (n <= 1L)\n        return n;\n    else\n        return fib(n\
    \ - 1L) + fib(n - 2L);\n}\nunittest\n{\n    alias candidate = fib;\n\n    assert(candidate(10L)\
    \ == 55L);\n    assert(candidate(1L) == 1L);\n    assert(candidate(8L) == 21L);\n\
    \    assert(candidate(11L) == 89L);\n    assert(candidate(12L) == 144L);\n}\n\
    void main(){}"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660163029
- exit_code: 0
  program: "import std.math;\n/*\nReturn n-th Fibonacci number.\n    >>> fib(10L)\n\
    \    55L\n    >>> fib(1L)\n    1L\n    >>> fib(8L)\n    21L\n    \n*/\nlong fib(long\
    \ n) \n{\n    if (n < 2)\n        return n;\n    else\n        return fib(n -\
    \ 1) + fib(n - 2);\n}\nunittest\n{\n    alias candidate = fib;\n\n    assert(candidate(10L)\
    \ == 55L);\n    assert(candidate(1L) == 1L);\n    assert(candidate(8L) == 21L);\n\
    \    assert(candidate(11L) == 89L);\n    assert(candidate(12L) == 144L);\n}\n\
    void main(){}"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660163029
- exit_code: 0
  program: "import std.math;\n/*\nReturn n-th Fibonacci number.\n    >>> fib(10L)\n\
    \    55L\n    >>> fib(1L)\n    1L\n    >>> fib(8L)\n    21L\n    \n*/\nlong fib(long\
    \ n) \n{\n    if (n <= 1L)\n        return n;\n    else\n        return fib(n\
    \ - 1L) + fib(n - 2L);\n}\nunittest\n{\n    alias candidate = fib;\n\n    assert(candidate(10L)\
    \ == 55L);\n    assert(candidate(1L) == 1L);\n    assert(candidate(8L) == 21L);\n\
    \    assert(candidate(11L) == 89L);\n    assert(candidate(12L) == 144L);\n}\n\
    void main(){}"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660163029
- exit_code: 0
  program: "import std.math;\n/*\nReturn n-th Fibonacci number.\n    >>> fib(10L)\n\
    \    55L\n    >>> fib(1L)\n    1L\n    >>> fib(8L)\n    21L\n    \n*/\nlong fib(long\
    \ n) \n{\n    if (n < 2)\n        return n;\n    else\n        return fib(n -\
    \ 1) + fib(n - 2);\n}\nunittest\n{\n    alias candidate = fib;\n\n    assert(candidate(10L)\
    \ == 55L);\n    assert(candidate(1L) == 1L);\n    assert(candidate(8L) == 21L);\n\
    \    assert(candidate(11L) == 89L);\n    assert(candidate(12L) == 144L);\n}\n\
    void main(){}"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660163029
- exit_code: 0
  program: "import std.math;\n/*\nReturn n-th Fibonacci number.\n    >>> fib(10L)\n\
    \    55L\n    >>> fib(1L)\n    1L\n    >>> fib(8L)\n    21L\n    \n*/\nlong fib(long\
    \ n) \n{\n    if (n < 2)\n        return n;\n    else\n        return fib(n -\
    \ 1) + fib(n - 2);\n}\nunittest\n{\n    alias candidate = fib;\n\n    assert(candidate(10L)\
    \ == 55L);\n    assert(candidate(1L) == 1L);\n    assert(candidate(8L) == 21L);\n\
    \    assert(candidate(11L) == 89L);\n    assert(candidate(12L) == 144L);\n}\n\
    void main(){}"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660163029
- exit_code: 0
  program: "import std.math;\n/*\nReturn n-th Fibonacci number.\n    >>> fib(10L)\n\
    \    55L\n    >>> fib(1L)\n    1L\n    >>> fib(8L)\n    21L\n    \n*/\nlong fib(long\
    \ n) \n{\n    if (n <= 1L)\n        return n;\n    else\n        return fib(n\
    \ - 1L) + fib(n - 2L);\n}\nunittest\n{\n    alias candidate = fib;\n\n    assert(candidate(10L)\
    \ == 55L);\n    assert(candidate(1L) == 1L);\n    assert(candidate(8L) == 21L);\n\
    \    assert(candidate(11L) == 89L);\n    assert(candidate(12L) == 144L);\n}\n\
    void main(){}"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660163029
- exit_code: 0
  program: "import std.math;\n/*\nReturn n-th Fibonacci number.\n    >>> fib(10L)\n\
    \    55L\n    >>> fib(1L)\n    1L\n    >>> fib(8L)\n    21L\n    \n*/\nlong fib(long\
    \ n) \n{\n    if (n < 2) \n        return n;\n    return fib(n - 1) + fib(n -\
    \ 2);\n}\nunittest\n{\n    alias candidate = fib;\n\n    assert(candidate(10L)\
    \ == 55L);\n    assert(candidate(1L) == 1L);\n    assert(candidate(8L) == 21L);\n\
    \    assert(candidate(11L) == 89L);\n    assert(candidate(12L) == 144L);\n}\n\
    void main(){}"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660163029
- exit_code: 0
  program: "import std.math;\n/*\nReturn n-th Fibonacci number.\n    >>> fib(10L)\n\
    \    55L\n    >>> fib(1L)\n    1L\n    >>> fib(8L)\n    21L\n    \n*/\nlong fib(long\
    \ n) \n{\n    if (n < 2)\n        return n;\n    else\n        return fib(n -\
    \ 1) + fib(n - 2);\n}\nunittest\n{\n    alias candidate = fib;\n\n    assert(candidate(10L)\
    \ == 55L);\n    assert(candidate(1L) == 1L);\n    assert(candidate(8L) == 21L);\n\
    \    assert(candidate(11L) == 89L);\n    assert(candidate(12L) == 144L);\n}\n\
    void main(){}"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660163029
- exit_code: 0
  program: "import std.math;\n/*\nReturn n-th Fibonacci number.\n    >>> fib(10L)\n\
    \    55L\n    >>> fib(1L)\n    1L\n    >>> fib(8L)\n    21L\n    \n*/\nlong fib(long\
    \ n) \n{\n    if (n <= 1L)\n        return n;\n    else\n        return fib(n\
    \ - 1L) + fib(n - 2L);\n}\nunittest\n{\n    alias candidate = fib;\n\n    assert(candidate(10L)\
    \ == 55L);\n    assert(candidate(1L) == 1L);\n    assert(candidate(8L) == 21L);\n\
    \    assert(candidate(11L) == 89L);\n    assert(candidate(12L) == 144L);\n}\n\
    void main(){}"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660163029
- exit_code: 0
  program: "import std.math;\n/*\nReturn n-th Fibonacci number.\n    >>> fib(10L)\n\
    \    55L\n    >>> fib(1L)\n    1L\n    >>> fib(8L)\n    21L\n    \n*/\nlong fib(long\
    \ n) \n{\n    if (n < 2) \n        return n;\n    else \n        return fib(n\
    \ - 1) + fib(n - 2);\n}\nunittest\n{\n    alias candidate = fib;\n\n    assert(candidate(10L)\
    \ == 55L);\n    assert(candidate(1L) == 1L);\n    assert(candidate(8L) == 21L);\n\
    \    assert(candidate(11L) == 89L);\n    assert(candidate(12L) == 144L);\n}\n\
    void main(){}"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660163029
- exit_code: 0
  program: "import std.math;\n/*\nReturn n-th Fibonacci number.\n    >>> fib(10L)\n\
    \    55L\n    >>> fib(1L)\n    1L\n    >>> fib(8L)\n    21L\n    \n*/\nlong fib(long\
    \ n) \n{\n    if (n < 2)\n        return n;\n    else\n        return fib(n -\
    \ 1) + fib(n - 2);\n}\nunittest\n{\n    alias candidate = fib;\n\n    assert(candidate(10L)\
    \ == 55L);\n    assert(candidate(1L) == 1L);\n    assert(candidate(8L) == 21L);\n\
    \    assert(candidate(11L) == 89L);\n    assert(candidate(12L) == 144L);\n}\n\
    void main(){}"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660163029
- exit_code: 0
  program: "import std.math;\n/*\nReturn n-th Fibonacci number.\n    >>> fib(10L)\n\
    \    55L\n    >>> fib(1L)\n    1L\n    >>> fib(8L)\n    21L\n    \n*/\nlong fib(long\
    \ n) \n{\n    if (n < 2)\n        return n;\n    else\n        return fib(n -\
    \ 1) + fib(n - 2);\n}\nunittest\n{\n    alias candidate = fib;\n\n    assert(candidate(10L)\
    \ == 55L);\n    assert(candidate(1L) == 1L);\n    assert(candidate(8L) == 21L);\n\
    \    assert(candidate(11L) == 89L);\n    assert(candidate(12L) == 144L);\n}\n\
    void main(){}"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660163029
- exit_code: 0
  program: "import std.math;\n/*\nReturn n-th Fibonacci number.\n    >>> fib(10L)\n\
    \    55L\n    >>> fib(1L)\n    1L\n    >>> fib(8L)\n    21L\n    \n*/\nlong fib(long\
    \ n) \n{\n    if (n < 2)\n        return n;\n    else\n        return fib(n -\
    \ 1) + fib(n - 2);\n}\nunittest\n{\n    alias candidate = fib;\n\n    assert(candidate(10L)\
    \ == 55L);\n    assert(candidate(1L) == 1L);\n    assert(candidate(8L) == 21L);\n\
    \    assert(candidate(11L) == 89L);\n    assert(candidate(12L) == 144L);\n}\n\
    void main(){}"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660163029
- exit_code: 0
  program: "import std.math;\n/*\nReturn n-th Fibonacci number.\n    >>> fib(10L)\n\
    \    55L\n    >>> fib(1L)\n    1L\n    >>> fib(8L)\n    21L\n    \n*/\nlong fib(long\
    \ n) \n{\n    if (n < 2)\n        return n;\n    return fib(n - 1) + fib(n - 2);\n\
    }\nunittest\n{\n    alias candidate = fib;\n\n    assert(candidate(10L) == 55L);\n\
    \    assert(candidate(1L) == 1L);\n    assert(candidate(8L) == 21L);\n    assert(candidate(11L)\
    \ == 89L);\n    assert(candidate(12L) == 144L);\n}\nvoid main(){}"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660163029
- exit_code: 0
  program: "import std.math;\n/*\nReturn n-th Fibonacci number.\n    >>> fib(10L)\n\
    \    55L\n    >>> fib(1L)\n    1L\n    >>> fib(8L)\n    21L\n    \n*/\nlong fib(long\
    \ n) \n{\n    if (n <= 1L)\n        return n;\n    return fib(n - 1L) + fib(n\
    \ - 2L);\n}\nunittest\n{\n    alias candidate = fib;\n\n    assert(candidate(10L)\
    \ == 55L);\n    assert(candidate(1L) == 1L);\n    assert(candidate(8L) == 21L);\n\
    \    assert(candidate(11L) == 89L);\n    assert(candidate(12L) == 144L);\n}\n\
    void main(){}"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660163029
- exit_code: 0
  program: "import std.math;\n/*\nReturn n-th Fibonacci number.\n    >>> fib(10L)\n\
    \    55L\n    >>> fib(1L)\n    1L\n    >>> fib(8L)\n    21L\n    \n*/\nlong fib(long\
    \ n) \n{\n    if (n < 2) \n    {\n        return n;\n    }\n    else \n    {\n\
    \        return fib(n - 1) + fib(n - 2);\n    }\n}\nunittest\n{\n    alias candidate\
    \ = fib;\n\n    assert(candidate(10L) == 55L);\n    assert(candidate(1L) == 1L);\n\
    \    assert(candidate(8L) == 21L);\n    assert(candidate(11L) == 89L);\n    assert(candidate(12L)\
    \ == 144L);\n}\nvoid main(){}"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660163029
- exit_code: 0
  program: "import std.math;\n/*\nReturn n-th Fibonacci number.\n    >>> fib(10L)\n\
    \    55L\n    >>> fib(1L)\n    1L\n    >>> fib(8L)\n    21L\n    \n*/\nlong fib(long\
    \ n) \n{\n    if (n <= 1L) \n    {\n        return n;\n    }\n    return fib(n\
    \ - 1L) + fib(n - 2L);\n}\nunittest\n{\n    alias candidate = fib;\n\n    assert(candidate(10L)\
    \ == 55L);\n    assert(candidate(1L) == 1L);\n    assert(candidate(8L) == 21L);\n\
    \    assert(candidate(11L) == 89L);\n    assert(candidate(12L) == 144L);\n}\n\
    void main(){}"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660163029
- exit_code: 0
  program: "import std.math;\n/*\nReturn n-th Fibonacci number.\n    >>> fib(10L)\n\
    \    55L\n    >>> fib(1L)\n    1L\n    >>> fib(8L)\n    21L\n    \n*/\nlong fib(long\
    \ n) \n{\n    if (n < 2)\n        return n;\n    return fib(n - 1) + fib(n - 2);\n\
    }\nunittest\n{\n    alias candidate = fib;\n\n    assert(candidate(10L) == 55L);\n\
    \    assert(candidate(1L) == 1L);\n    assert(candidate(8L) == 21L);\n    assert(candidate(11L)\
    \ == 89L);\n    assert(candidate(12L) == 144L);\n}\nvoid main(){}"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660163029
- exit_code: 0
  program: "import std.math;\n/*\nReturn n-th Fibonacci number.\n    >>> fib(10L)\n\
    \    55L\n    >>> fib(1L)\n    1L\n    >>> fib(8L)\n    21L\n    \n*/\nlong fib(long\
    \ n) \n{\n    if (n < 2) \n    {\n        return n;\n    }\n    else \n    {\n\
    \        return fib(n - 1) + fib(n - 2);\n    }\n}\nunittest\n{\n    alias candidate\
    \ = fib;\n\n    assert(candidate(10L) == 55L);\n    assert(candidate(1L) == 1L);\n\
    \    assert(candidate(8L) == 21L);\n    assert(candidate(11L) == 89L);\n    assert(candidate(12L)\
    \ == 144L);\n}\nvoid main(){}"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660163029
- exit_code: 0
  program: "import std.math;\n/*\nReturn n-th Fibonacci number.\n    >>> fib(10L)\n\
    \    55L\n    >>> fib(1L)\n    1L\n    >>> fib(8L)\n    21L\n    \n*/\nlong fib(long\
    \ n) \n{\n    if (n <= 1L)\n        return n;\n    else\n        return fib(n\
    \ - 1L) + fib(n - 2L);\n}\nunittest\n{\n    alias candidate = fib;\n\n    assert(candidate(10L)\
    \ == 55L);\n    assert(candidate(1L) == 1L);\n    assert(candidate(8L) == 21L);\n\
    \    assert(candidate(11L) == 89L);\n    assert(candidate(12L) == 144L);\n}\n\
    void main(){}"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660163029
- exit_code: 0
  program: "import std.math;\n/*\nReturn n-th Fibonacci number.\n    >>> fib(10L)\n\
    \    55L\n    >>> fib(1L)\n    1L\n    >>> fib(8L)\n    21L\n    \n*/\nlong fib(long\
    \ n) \n{\n    if (n < 2)\n        return n;\n    return fib(n - 1) + fib(n - 2);\n\
    }\nunittest\n{\n    alias candidate = fib;\n\n    assert(candidate(10L) == 55L);\n\
    \    assert(candidate(1L) == 1L);\n    assert(candidate(8L) == 21L);\n    assert(candidate(11L)\
    \ == 89L);\n    assert(candidate(12L) == 144L);\n}\nvoid main(){}"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660163029
- exit_code: 0
  program: "import std.math;\n/*\nReturn n-th Fibonacci number.\n    >>> fib(10L)\n\
    \    55L\n    >>> fib(1L)\n    1L\n    >>> fib(8L)\n    21L\n    \n*/\nlong fib(long\
    \ n) \n{\n    if (n < 2) \n        return n;\n    else \n        return fib(n\
    \ - 1) + fib(n - 2);\n}\nunittest\n{\n    alias candidate = fib;\n\n    assert(candidate(10L)\
    \ == 55L);\n    assert(candidate(1L) == 1L);\n    assert(candidate(8L) == 21L);\n\
    \    assert(candidate(11L) == 89L);\n    assert(candidate(12L) == 144L);\n}\n\
    void main(){}"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660163029
- exit_code: 0
  program: "import std.math;\n/*\nReturn n-th Fibonacci number.\n    >>> fib(10L)\n\
    \    55L\n    >>> fib(1L)\n    1L\n    >>> fib(8L)\n    21L\n    \n*/\nlong fib(long\
    \ n) \n{\n    if (n < 2)\n        return n;\n    else\n        return fib(n -\
    \ 1) + fib(n - 2);\n}\nunittest\n{\n    alias candidate = fib;\n\n    assert(candidate(10L)\
    \ == 55L);\n    assert(candidate(1L) == 1L);\n    assert(candidate(8L) == 21L);\n\
    \    assert(candidate(11L) == 89L);\n    assert(candidate(12L) == 144L);\n}\n\
    void main(){}"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660163029
- exit_code: 0
  program: "import std.math;\n/*\nReturn n-th Fibonacci number.\n    >>> fib(10L)\n\
    \    55L\n    >>> fib(1L)\n    1L\n    >>> fib(8L)\n    21L\n    \n*/\nlong fib(long\
    \ n) \n{\n    if (n < 2)\n        return n;\n    else\n        return fib(n -\
    \ 1) + fib(n - 2);\n}\nunittest\n{\n    alias candidate = fib;\n\n    assert(candidate(10L)\
    \ == 55L);\n    assert(candidate(1L) == 1L);\n    assert(candidate(8L) == 21L);\n\
    \    assert(candidate(11L) == 89L);\n    assert(candidate(12L) == 144L);\n}\n\
    void main(){}"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660163029
- exit_code: 0
  program: "import std.math;\n/*\nReturn n-th Fibonacci number.\n    >>> fib(10L)\n\
    \    55L\n    >>> fib(1L)\n    1L\n    >>> fib(8L)\n    21L\n    \n*/\nlong fib(long\
    \ n) \n{\n    if (n < 2)\n        return n;\n    else\n        return fib(n -\
    \ 1) + fib(n - 2);\n}\nunittest\n{\n    alias candidate = fib;\n\n    assert(candidate(10L)\
    \ == 55L);\n    assert(candidate(1L) == 1L);\n    assert(candidate(8L) == 21L);\n\
    \    assert(candidate(11L) == 89L);\n    assert(candidate(12L) == 144L);\n}\n\
    void main(){}"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660163029
- exit_code: 0
  program: "import std.math;\n/*\nReturn n-th Fibonacci number.\n    >>> fib(10L)\n\
    \    55L\n    >>> fib(1L)\n    1L\n    >>> fib(8L)\n    21L\n    \n*/\nlong fib(long\
    \ n) \n{\n    if (n < 2) \n        return n;\n    else \n        return fib(n\
    \ - 1) + fib(n - 2);\n}\nunittest\n{\n    alias candidate = fib;\n\n    assert(candidate(10L)\
    \ == 55L);\n    assert(candidate(1L) == 1L);\n    assert(candidate(8L) == 21L);\n\
    \    assert(candidate(11L) == 89L);\n    assert(candidate(12L) == 144L);\n}\n\
    void main(){}"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660163029
- exit_code: 0
  program: "import std.math;\n/*\nReturn n-th Fibonacci number.\n    >>> fib(10L)\n\
    \    55L\n    >>> fib(1L)\n    1L\n    >>> fib(8L)\n    21L\n    \n*/\nlong fib(long\
    \ n) \n{\n    if (n <= 1L)\n        return n;\n    else\n        return fib(n\
    \ - 1L) + fib(n - 2L);\n}\nunittest\n{\n    alias candidate = fib;\n\n    assert(candidate(10L)\
    \ == 55L);\n    assert(candidate(1L) == 1L);\n    assert(candidate(8L) == 21L);\n\
    \    assert(candidate(11L) == 89L);\n    assert(candidate(12L) == 144L);\n}\n\
    void main(){}"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660163029
- exit_code: 0
  program: "import std.math;\n/*\nReturn n-th Fibonacci number.\n    >>> fib(10L)\n\
    \    55L\n    >>> fib(1L)\n    1L\n    >>> fib(8L)\n    21L\n    \n*/\nlong fib(long\
    \ n) \n{\n    if (n < 2)\n        return n;\n    else\n        return fib(n -\
    \ 1) + fib(n - 2);\n}\nunittest\n{\n    alias candidate = fib;\n\n    assert(candidate(10L)\
    \ == 55L);\n    assert(candidate(1L) == 1L);\n    assert(candidate(8L) == 21L);\n\
    \    assert(candidate(11L) == 89L);\n    assert(candidate(12L) == 144L);\n}\n\
    void main(){}"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660163029
- exit_code: 0
  program: "import std.math;\n/*\nReturn n-th Fibonacci number.\n    >>> fib(10L)\n\
    \    55L\n    >>> fib(1L)\n    1L\n    >>> fib(8L)\n    21L\n    \n*/\nlong fib(long\
    \ n) \n{\n    if (n <= 1L)\n        return n;\n    else\n        return fib(n\
    \ - 1L) + fib(n - 2L);\n}\nunittest\n{\n    alias candidate = fib;\n\n    assert(candidate(10L)\
    \ == 55L);\n    assert(candidate(1L) == 1L);\n    assert(candidate(8L) == 21L);\n\
    \    assert(candidate(11L) == 89L);\n    assert(candidate(12L) == 144L);\n}\n\
    void main(){}"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660163029
- exit_code: 0
  program: "import std.math;\n/*\nReturn n-th Fibonacci number.\n    >>> fib(10L)\n\
    \    55L\n    >>> fib(1L)\n    1L\n    >>> fib(8L)\n    21L\n    \n*/\nlong fib(long\
    \ n) \n{\n    if (n == 0L)\n        return 0L;\n    if (n == 1L)\n        return\
    \ 1L;\n    return fib(n - 1L) + fib(n - 2L);\n}\nunittest\n{\n    alias candidate\
    \ = fib;\n\n    assert(candidate(10L) == 55L);\n    assert(candidate(1L) == 1L);\n\
    \    assert(candidate(8L) == 21L);\n    assert(candidate(11L) == 89L);\n    assert(candidate(12L)\
    \ == 144L);\n}\nvoid main(){}"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660163029
- exit_code: 0
  program: "import std.math;\n/*\nReturn n-th Fibonacci number.\n    >>> fib(10L)\n\
    \    55L\n    >>> fib(1L)\n    1L\n    >>> fib(8L)\n    21L\n    \n*/\nlong fib(long\
    \ n) \n{\n    if (n <= 1L) \n    {\n        return n;\n    }\n    else \n    {\n\
    \        return fib(n - 1L) + fib(n - 2L);\n    }\n}\nunittest\n{\n    alias candidate\
    \ = fib;\n\n    assert(candidate(10L) == 55L);\n    assert(candidate(1L) == 1L);\n\
    \    assert(candidate(8L) == 21L);\n    assert(candidate(11L) == 89L);\n    assert(candidate(12L)\
    \ == 144L);\n}\nvoid main(){}"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660163029
- exit_code: 0
  program: "import std.math;\n/*\nReturn n-th Fibonacci number.\n    >>> fib(10L)\n\
    \    55L\n    >>> fib(1L)\n    1L\n    >>> fib(8L)\n    21L\n    \n*/\nlong fib(long\
    \ n) \n{\n    if (n < 2)\n        return n;\n    return fib(n - 1) + fib(n - 2);\n\
    }\nunittest\n{\n    alias candidate = fib;\n\n    assert(candidate(10L) == 55L);\n\
    \    assert(candidate(1L) == 1L);\n    assert(candidate(8L) == 21L);\n    assert(candidate(11L)\
    \ == 89L);\n    assert(candidate(12L) == 144L);\n}\nvoid main(){}"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660163029
- exit_code: 0
  program: "import std.math;\n/*\nReturn n-th Fibonacci number.\n    >>> fib(10L)\n\
    \    55L\n    >>> fib(1L)\n    1L\n    >>> fib(8L)\n    21L\n    \n*/\nlong fib(long\
    \ n) \n{\n    if (n <= 1L)\n        return n;\n    return fib(n - 1L) + fib(n\
    \ - 2L);\n}\nunittest\n{\n    alias candidate = fib;\n\n    assert(candidate(10L)\
    \ == 55L);\n    assert(candidate(1L) == 1L);\n    assert(candidate(8L) == 21L);\n\
    \    assert(candidate(11L) == 89L);\n    assert(candidate(12L) == 144L);\n}\n\
    void main(){}"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660163029
- exit_code: 0
  program: "import std.math;\n/*\nReturn n-th Fibonacci number.\n    >>> fib(10L)\n\
    \    55L\n    >>> fib(1L)\n    1L\n    >>> fib(8L)\n    21L\n    \n*/\nlong fib(long\
    \ n) \n{\n    if (n < 2)\n        return n;\n    else\n        return fib(n -\
    \ 1) + fib(n - 2);\n}\nunittest\n{\n    alias candidate = fib;\n\n    assert(candidate(10L)\
    \ == 55L);\n    assert(candidate(1L) == 1L);\n    assert(candidate(8L) == 21L);\n\
    \    assert(candidate(11L) == 89L);\n    assert(candidate(12L) == 144L);\n}\n\
    void main(){}"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660163029
- exit_code: 0
  program: "import std.math;\n/*\nReturn n-th Fibonacci number.\n    >>> fib(10L)\n\
    \    55L\n    >>> fib(1L)\n    1L\n    >>> fib(8L)\n    21L\n    \n*/\nlong fib(long\
    \ n) \n{\n    if (n <= 1L)\n    {\n        return n;\n    }\n    else\n    {\n\
    \        return fib(n - 1L) + fib(n - 2L);\n    }\n}\nunittest\n{\n    alias candidate\
    \ = fib;\n\n    assert(candidate(10L) == 55L);\n    assert(candidate(1L) == 1L);\n\
    \    assert(candidate(8L) == 21L);\n    assert(candidate(11L) == 89L);\n    assert(candidate(12L)\
    \ == 144L);\n}\nvoid main(){}"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660163030
- exit_code: 0
  program: "import std.math;\n/*\nReturn n-th Fibonacci number.\n    >>> fib(10L)\n\
    \    55L\n    >>> fib(1L)\n    1L\n    >>> fib(8L)\n    21L\n    \n*/\nlong fib(long\
    \ n) \n{\n    if (n < 2) return n;\n    return fib(n - 1) + fib(n - 2);\n}\nunittest\n\
    {\n    alias candidate = fib;\n\n    assert(candidate(10L) == 55L);\n    assert(candidate(1L)\
    \ == 1L);\n    assert(candidate(8L) == 21L);\n    assert(candidate(11L) == 89L);\n\
    \    assert(candidate(12L) == 144L);\n}\nvoid main(){}"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660163029
- exit_code: 0
  program: "import std.math;\n/*\nReturn n-th Fibonacci number.\n    >>> fib(10L)\n\
    \    55L\n    >>> fib(1L)\n    1L\n    >>> fib(8L)\n    21L\n    \n*/\nlong fib(long\
    \ n) \n{\n    if (n < 2)\n        return n;\n    else\n        return fib(n -\
    \ 1) + fib(n - 2);\n}\nunittest\n{\n    alias candidate = fib;\n\n    assert(candidate(10L)\
    \ == 55L);\n    assert(candidate(1L) == 1L);\n    assert(candidate(8L) == 21L);\n\
    \    assert(candidate(11L) == 89L);\n    assert(candidate(12L) == 144L);\n}\n\
    void main(){}"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660163029
- exit_code: 0
  program: "import std.math;\n/*\nReturn n-th Fibonacci number.\n    >>> fib(10L)\n\
    \    55L\n    >>> fib(1L)\n    1L\n    >>> fib(8L)\n    21L\n    \n*/\nlong fib(long\
    \ n) \n{\n    if (n <= 1L)\n        return n;\n    else\n        return fib(n\
    \ - 1L) + fib(n - 2L);\n}\nunittest\n{\n    alias candidate = fib;\n\n    assert(candidate(10L)\
    \ == 55L);\n    assert(candidate(1L) == 1L);\n    assert(candidate(8L) == 21L);\n\
    \    assert(candidate(11L) == 89L);\n    assert(candidate(12L) == 144L);\n}\n\
    void main(){}"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660163029
- exit_code: 0
  program: "import std.math;\n/*\nReturn n-th Fibonacci number.\n    >>> fib(10L)\n\
    \    55L\n    >>> fib(1L)\n    1L\n    >>> fib(8L)\n    21L\n    \n*/\nlong fib(long\
    \ n) \n{\n    if (n < 2) \n    {\n        return n;\n    }\n    else \n    {\n\
    \        return fib(n - 1) + fib(n - 2);\n    }\n}\nunittest\n{\n    alias candidate\
    \ = fib;\n\n    assert(candidate(10L) == 55L);\n    assert(candidate(1L) == 1L);\n\
    \    assert(candidate(8L) == 21L);\n    assert(candidate(11L) == 89L);\n    assert(candidate(12L)\
    \ == 144L);\n}\nvoid main(){}"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660163029
- exit_code: 0
  program: "import std.math;\n/*\nReturn n-th Fibonacci number.\n    >>> fib(10L)\n\
    \    55L\n    >>> fib(1L)\n    1L\n    >>> fib(8L)\n    21L\n    \n*/\nlong fib(long\
    \ n) \n{\n    if (n <= 2L)\n        return 1L;\n    else\n        return fib(n\
    \ - 1L) + fib(n - 2L);\n}\nunittest\n{\n    alias candidate = fib;\n\n    assert(candidate(10L)\
    \ == 55L);\n    assert(candidate(1L) == 1L);\n    assert(candidate(8L) == 21L);\n\
    \    assert(candidate(11L) == 89L);\n    assert(candidate(12L) == 144L);\n}\n\
    void main(){}"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660163029
- exit_code: 0
  program: "import std.math;\n/*\nReturn n-th Fibonacci number.\n    >>> fib(10L)\n\
    \    55L\n    >>> fib(1L)\n    1L\n    >>> fib(8L)\n    21L\n    \n*/\nlong fib(long\
    \ n) \n{\n    if (n == 0L)\n    {\n        return 0L;\n    }\n    else if (n ==\
    \ 1L)\n    {\n        return 1L;\n    }\n    else\n    {\n        return fib(n\
    \ - 1L) + fib(n - 2L);\n    }\n}\nunittest\n{\n    alias candidate = fib;\n\n\
    \    assert(candidate(10L) == 55L);\n    assert(candidate(1L) == 1L);\n    assert(candidate(8L)\
    \ == 21L);\n    assert(candidate(11L) == 89L);\n    assert(candidate(12L) == 144L);\n\
    }\nvoid main(){}"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660163029
- exit_code: 0
  program: "import std.math;\n/*\nReturn n-th Fibonacci number.\n    >>> fib(10L)\n\
    \    55L\n    >>> fib(1L)\n    1L\n    >>> fib(8L)\n    21L\n    \n*/\nlong fib(long\
    \ n) \n{\n    if (n <= 1L)\n        return n;\n    else\n        return fib(n\
    \ - 1L) + fib(n - 2L);\n}\nunittest\n{\n    alias candidate = fib;\n\n    assert(candidate(10L)\
    \ == 55L);\n    assert(candidate(1L) == 1L);\n    assert(candidate(8L) == 21L);\n\
    \    assert(candidate(11L) == 89L);\n    assert(candidate(12L) == 144L);\n}\n\
    void main(){}"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660163029
- exit_code: 0
  program: "import std.math;\n/*\nReturn n-th Fibonacci number.\n    >>> fib(10L)\n\
    \    55L\n    >>> fib(1L)\n    1L\n    >>> fib(8L)\n    21L\n    \n*/\nlong fib(long\
    \ n) \n{\n    if (n == 0L)\n        return 0L;\n    if (n == 1L)\n        return\
    \ 1L;\n    return fib(n - 1L) + fib(n - 2L);\n}\nunittest\n{\n    alias candidate\
    \ = fib;\n\n    assert(candidate(10L) == 55L);\n    assert(candidate(1L) == 1L);\n\
    \    assert(candidate(8L) == 21L);\n    assert(candidate(11L) == 89L);\n    assert(candidate(12L)\
    \ == 144L);\n}\nvoid main(){}"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660163029
- exit_code: 0
  program: "import std.math;\n/*\nReturn n-th Fibonacci number.\n    >>> fib(10L)\n\
    \    55L\n    >>> fib(1L)\n    1L\n    >>> fib(8L)\n    21L\n    \n*/\nlong fib(long\
    \ n) \n{\n    if (n < 2)\n        return n;\n    else\n        return fib(n -\
    \ 1) + fib(n - 2);\n}\nunittest\n{\n    alias candidate = fib;\n\n    assert(candidate(10L)\
    \ == 55L);\n    assert(candidate(1L) == 1L);\n    assert(candidate(8L) == 21L);\n\
    \    assert(candidate(11L) == 89L);\n    assert(candidate(12L) == 144L);\n}\n\
    void main(){}"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660163029
- exit_code: 0
  program: "import std.math;\n/*\nReturn n-th Fibonacci number.\n    >>> fib(10L)\n\
    \    55L\n    >>> fib(1L)\n    1L\n    >>> fib(8L)\n    21L\n    \n*/\nlong fib(long\
    \ n) \n{\n    if (n < 2)\n        return n;\n    else\n        return fib(n -\
    \ 1) + fib(n - 2);\n}\nunittest\n{\n    alias candidate = fib;\n\n    assert(candidate(10L)\
    \ == 55L);\n    assert(candidate(1L) == 1L);\n    assert(candidate(8L) == 21L);\n\
    \    assert(candidate(11L) == 89L);\n    assert(candidate(12L) == 144L);\n}\n\
    void main(){}"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660163029
- exit_code: 0
  program: "import std.math;\n/*\nReturn n-th Fibonacci number.\n    >>> fib(10L)\n\
    \    55L\n    >>> fib(1L)\n    1L\n    >>> fib(8L)\n    21L\n    \n*/\nlong fib(long\
    \ n) \n{\n    if (n < 2)\n        return n;\n    else\n        return fib(n -\
    \ 1) + fib(n - 2);\n}\nunittest\n{\n    alias candidate = fib;\n\n    assert(candidate(10L)\
    \ == 55L);\n    assert(candidate(1L) == 1L);\n    assert(candidate(8L) == 21L);\n\
    \    assert(candidate(11L) == 89L);\n    assert(candidate(12L) == 144L);\n}\n\
    void main(){}"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660163029
- exit_code: 0
  program: "import std.math;\n/*\nReturn n-th Fibonacci number.\n    >>> fib(10L)\n\
    \    55L\n    >>> fib(1L)\n    1L\n    >>> fib(8L)\n    21L\n    \n*/\nlong fib(long\
    \ n) \n{\n    if (n <= 1L) \n        return n;\n    else \n        return fib(n\
    \ - 1L) + fib(n - 2L);\n}\nunittest\n{\n    alias candidate = fib;\n\n    assert(candidate(10L)\
    \ == 55L);\n    assert(candidate(1L) == 1L);\n    assert(candidate(8L) == 21L);\n\
    \    assert(candidate(11L) == 89L);\n    assert(candidate(12L) == 144L);\n}\n\
    void main(){}"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660163029
- exit_code: 0
  program: "import std.math;\n/*\nReturn n-th Fibonacci number.\n    >>> fib(10L)\n\
    \    55L\n    >>> fib(1L)\n    1L\n    >>> fib(8L)\n    21L\n    \n*/\nlong fib(long\
    \ n) \n{\n    if (n <= 1L)\n        return n;\n    else\n        return fib(n\
    \ - 1L) + fib(n - 2L);\n}\nunittest\n{\n    alias candidate = fib;\n\n    assert(candidate(10L)\
    \ == 55L);\n    assert(candidate(1L) == 1L);\n    assert(candidate(8L) == 21L);\n\
    \    assert(candidate(11L) == 89L);\n    assert(candidate(12L) == 144L);\n}\n\
    void main(){}"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660163029
- exit_code: 0
  program: "import std.math;\n/*\nReturn n-th Fibonacci number.\n    >>> fib(10L)\n\
    \    55L\n    >>> fib(1L)\n    1L\n    >>> fib(8L)\n    21L\n    \n*/\nlong fib(long\
    \ n) \n{\n    if (n <= 1L)\n        return n;\n    else\n        return fib(n\
    \ - 1L) + fib(n - 2L);\n}\nunittest\n{\n    alias candidate = fib;\n\n    assert(candidate(10L)\
    \ == 55L);\n    assert(candidate(1L) == 1L);\n    assert(candidate(8L) == 21L);\n\
    \    assert(candidate(11L) == 89L);\n    assert(candidate(12L) == 144L);\n}\n\
    void main(){}"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660163029
- exit_code: 0
  program: "import std.math;\n/*\nReturn n-th Fibonacci number.\n    >>> fib(10L)\n\
    \    55L\n    >>> fib(1L)\n    1L\n    >>> fib(8L)\n    21L\n    \n*/\nlong fib(long\
    \ n) \n{\n    if (n < 2) \n    {\n        return n;\n    }\n    else \n    {\n\
    \        return fib(n - 1) + fib(n - 2);\n    }\n}\nunittest\n{\n    alias candidate\
    \ = fib;\n\n    assert(candidate(10L) == 55L);\n    assert(candidate(1L) == 1L);\n\
    \    assert(candidate(8L) == 21L);\n    assert(candidate(11L) == 89L);\n    assert(candidate(12L)\
    \ == 144L);\n}\nvoid main(){}"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660163029
- exit_code: 0
  program: "import std.math;\n/*\nReturn n-th Fibonacci number.\n    >>> fib(10L)\n\
    \    55L\n    >>> fib(1L)\n    1L\n    >>> fib(8L)\n    21L\n    \n*/\nlong fib(long\
    \ n) \n{\n    if (n < 2)\n        return n;\n    else\n        return fib(n -\
    \ 1) + fib(n - 2);\n}\nunittest\n{\n    alias candidate = fib;\n\n    assert(candidate(10L)\
    \ == 55L);\n    assert(candidate(1L) == 1L);\n    assert(candidate(8L) == 21L);\n\
    \    assert(candidate(11L) == 89L);\n    assert(candidate(12L) == 144L);\n}\n\
    void main(){}"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660163029
- exit_code: 0
  program: "import std.math;\n/*\nReturn n-th Fibonacci number.\n    >>> fib(10L)\n\
    \    55L\n    >>> fib(1L)\n    1L\n    >>> fib(8L)\n    21L\n    \n*/\nlong fib(long\
    \ n) \n{\n    if (n < 2) \n    {\n        return n;\n    }\n    return fib(n -\
    \ 1) + fib(n - 2);\n}\nunittest\n{\n    alias candidate = fib;\n\n    assert(candidate(10L)\
    \ == 55L);\n    assert(candidate(1L) == 1L);\n    assert(candidate(8L) == 21L);\n\
    \    assert(candidate(11L) == 89L);\n    assert(candidate(12L) == 144L);\n}\n\
    void main(){}"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660163029
- exit_code: 0
  program: "import std.math;\n/*\nReturn n-th Fibonacci number.\n    >>> fib(10L)\n\
    \    55L\n    >>> fib(1L)\n    1L\n    >>> fib(8L)\n    21L\n    \n*/\nlong fib(long\
    \ n) \n{\n    if (n < 2)\n        return n;\n    else\n        return fib(n -\
    \ 1) + fib(n - 2);\n}\nunittest\n{\n    alias candidate = fib;\n\n    assert(candidate(10L)\
    \ == 55L);\n    assert(candidate(1L) == 1L);\n    assert(candidate(8L) == 21L);\n\
    \    assert(candidate(11L) == 89L);\n    assert(candidate(12L) == 144L);\n}\n\
    void main(){}"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660163029
- exit_code: 0
  program: "import std.math;\n/*\nReturn n-th Fibonacci number.\n    >>> fib(10L)\n\
    \    55L\n    >>> fib(1L)\n    1L\n    >>> fib(8L)\n    21L\n    \n*/\nlong fib(long\
    \ n) \n{\n    if (n < 2)\n        return n;\n    return fib(n - 1) + fib(n - 2);\n\
    }\nunittest\n{\n    alias candidate = fib;\n\n    assert(candidate(10L) == 55L);\n\
    \    assert(candidate(1L) == 1L);\n    assert(candidate(8L) == 21L);\n    assert(candidate(11L)\
    \ == 89L);\n    assert(candidate(12L) == 144L);\n}\nvoid main(){}"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660163029
- exit_code: 0
  program: "import std.math;\n/*\nReturn n-th Fibonacci number.\n    >>> fib(10L)\n\
    \    55L\n    >>> fib(1L)\n    1L\n    >>> fib(8L)\n    21L\n    \n*/\nlong fib(long\
    \ n) \n{\n    if (n <= 1L)\n    {\n        return n;\n    }\n    else\n    {\n\
    \        return fib(n - 1L) + fib(n - 2L);\n    }\n}\nunittest\n{\n    alias candidate\
    \ = fib;\n\n    assert(candidate(10L) == 55L);\n    assert(candidate(1L) == 1L);\n\
    \    assert(candidate(8L) == 21L);\n    assert(candidate(11L) == 89L);\n    assert(candidate(12L)\
    \ == 144L);\n}\nvoid main(){}"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660163030

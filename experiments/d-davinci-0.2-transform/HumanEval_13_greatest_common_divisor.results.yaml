language: d
name: HumanEval_13_greatest_common_divisor
results:
- exit_code: 1
  program: "import std.typecons;\nimport std.math;\n/*\n Return a greatest common\
    \ divisor of two integers a and b\n    >>> greatest_common_divisor(3L, 5L)\n \
    \   1L\n    >>> greatest_common_divisor(25L, 15L)\n    5L\n    \n*/\nlong greatest_common_divisor(long\
    \ a, long b) \n{\n    if (a < b)\n        return greatest_common_divisor(b, a);\n\
    \    if (b == 0)\n        return a;\n    return greatest_common_divisor(b, a %\
    \ b);\n}\n/*\n Return a least common multiple of two integers a and b\n    >>>\
    \ least_common_multiple(3L, 5L)\n    15L\n    >>> least_common_multiple(25L, 15L)\n\
    \    75L\n*/\nlong least_common_multiple(long a, long b) \n{\n    return a * b\
    \ / greatest_common_divisor(a, b);\n}\n/*\n Return a least common multiple of\
    \ a list of integers\n    >>> least_common_multiple_list([3L, 5L])\n    15L\n\
    \    >>> least_common_multiple_list([25L, 15L])\n    75L\n*/\nlong least_common_multiple_list(long[]\
    \ a) \n{\n    long result = 1L;\n    foreach (i; a)\n        result = least_common_multiple(result,\
    \ i);\n    return result;\n}\n/*\n Return a greatest common divisor of a list\
    \ of integers\n    >>> greatest_common_divisor_list([3L, 5L])\n    1L\n    >>>\
    \ greatest_common_divisor_list([25L, 15L])\n    5L\n*/\nlong greatest_common_divisor_list(long[]\
    \ a) \n{\n    long result = a[0];\n    foreach (i; a)\n        result = greatest_common_divisor(result,\
    \ i);\n    return result;\n}\n/*\n Return a list of prime numbers less than n\n\
    \    >>> prime_numbers(10L)\n    [2L, 3L, 5L, 7L]\n*/\nlong[] prime_numbers(long\
    \ n) \n{\n    long[] result = [];\n    for (long i = 2L; i < n; i++) \n    {\n\
    \        bool is_prime = true;\n        foreach (j; result) \n        {\n    \
    \        if (i % j == 0) \n            {\n                is_prime = false;\n\
    \                break\nunittest\n{\n    alias candidate = greatest_common_divisor;\n\
    \n    assert(candidate(3L, 7L) == 1L);\n    assert(candidate(10L, 15L) == 5L);\n\
    \    assert(candidate(49L, 14L) == 7L);\n    assert(candidate(144L, 60L) == 12L);\n\
    }\nvoid main(){}"
  status: SyntaxError
  stderr: 'b''/tmp/tmpdwga32at.d(75): Error: found `unittest` when expecting `;` following
    `break` statement\n/tmp/tmpdwga32at.d(84): Error: found `End of File` when expecting
    `}` following compound statement\n/tmp/tmpdwga32at.d(84): Error: found `End of
    File` when expecting `}` following compound statement\n/tmp/tmpdwga32at.d(84):
    Error: found `End of File` when expecting `}` following compound statement\n/tmp/tmpdwga32at.d(84):
    Error: found `End of File` when expecting `}` following compound statement\nFailed:
    ["dmd", "-unittest", "-v", "-o-", "/tmp/tmpdwga32at.d", "-I/tmp"]\n'''
  stdout: b''
- exit_code: 0
  program: "import std.typecons;\nimport std.math;\n/*\n Return a greatest common\
    \ divisor of two integers a and b\n    >>> greatest_common_divisor(3L, 5L)\n \
    \   1L\n    >>> greatest_common_divisor(25L, 15L)\n    5L\n    \n*/\nlong greatest_common_divisor(long\
    \ a, long b) \n{\n    if (a < b)\n        return greatest_common_divisor(b, a);\n\
    \    if (b == 0)\n        return a;\n    return greatest_common_divisor(b, a %\
    \ b);\n}\nunittest\n{\n    alias candidate = greatest_common_divisor;\n\n    assert(candidate(3L,\
    \ 7L) == 1L);\n    assert(candidate(10L, 15L) == 5L);\n    assert(candidate(49L,\
    \ 14L) == 7L);\n    assert(candidate(144L, 60L) == 12L);\n}\nvoid main(){}"
  status: OK
  stderr: b''
  stdout: b''
- exit_code: 0
  program: "import std.typecons;\nimport std.math;\n/*\n Return a greatest common\
    \ divisor of two integers a and b\n    >>> greatest_common_divisor(3L, 5L)\n \
    \   1L\n    >>> greatest_common_divisor(25L, 15L)\n    5L\n    \n*/\nlong greatest_common_divisor(long\
    \ a, long b) \n{\n    if (a == 0L) \n    {\n        return b;\n    } \n    else\
    \ if (b == 0L) \n    {\n        return a;\n    } \n    else \n    {\n        return\
    \ greatest_common_divisor(b, a % b);\n    }\n}\nunittest\n{\n    alias candidate\
    \ = greatest_common_divisor;\n\n    assert(candidate(3L, 7L) == 1L);\n    assert(candidate(10L,\
    \ 15L) == 5L);\n    assert(candidate(49L, 14L) == 7L);\n    assert(candidate(144L,\
    \ 60L) == 12L);\n}\nvoid main(){}"
  status: OK
  stderr: b''
  stdout: b''
- exit_code: 0
  program: "import std.typecons;\nimport std.math;\n/*\n Return a greatest common\
    \ divisor of two integers a and b\n    >>> greatest_common_divisor(3L, 5L)\n \
    \   1L\n    >>> greatest_common_divisor(25L, 15L)\n    5L\n    \n*/\nlong greatest_common_divisor(long\
    \ a, long b) \n{\n    if (a < b) \n    {\n        return greatest_common_divisor(b,\
    \ a);\n    }\n    if (b == 0) \n    {\n        return a;\n    }\n    return greatest_common_divisor(b,\
    \ a % b);\n}\nunittest\n{\n    alias candidate = greatest_common_divisor;\n\n\
    \    assert(candidate(3L, 7L) == 1L);\n    assert(candidate(10L, 15L) == 5L);\n\
    \    assert(candidate(49L, 14L) == 7L);\n    assert(candidate(144L, 60L) == 12L);\n\
    }\nvoid main(){}"
  status: OK
  stderr: b''
  stdout: b''
- exit_code: 0
  program: "import std.typecons;\nimport std.math;\n/*\n Return a greatest common\
    \ divisor of two integers a and b\n    >>> greatest_common_divisor(3L, 5L)\n \
    \   1L\n    >>> greatest_common_divisor(25L, 15L)\n    5L\n    \n*/\nlong greatest_common_divisor(long\
    \ a, long b) \n{\n    if (a < b)\n        return greatest_common_divisor(b, a);\n\
    \    if (b == 0)\n        return a;\n    return greatest_common_divisor(b, a %\
    \ b);\n}\nunittest\n{\n    alias candidate = greatest_common_divisor;\n\n    assert(candidate(3L,\
    \ 7L) == 1L);\n    assert(candidate(10L, 15L) == 5L);\n    assert(candidate(49L,\
    \ 14L) == 7L);\n    assert(candidate(144L, 60L) == 12L);\n}\nvoid main(){}"
  status: OK
  stderr: b''
  stdout: b''
- exit_code: 0
  program: "import std.typecons;\nimport std.math;\n/*\n Return a greatest common\
    \ divisor of two integers a and b\n    >>> greatest_common_divisor(3L, 5L)\n \
    \   1L\n    >>> greatest_common_divisor(25L, 15L)\n    5L\n    \n*/\nlong greatest_common_divisor(long\
    \ a, long b) \n{\n    while (b != 0) {\n        auto t = b;\n        b = a % b;\n\
    \        a = t;\n    }\n    return a;\n}\nunittest\n{\n    alias candidate = greatest_common_divisor;\n\
    \n    assert(candidate(3L, 7L) == 1L);\n    assert(candidate(10L, 15L) == 5L);\n\
    \    assert(candidate(49L, 14L) == 7L);\n    assert(candidate(144L, 60L) == 12L);\n\
    }\nvoid main(){}"
  status: OK
  stderr: b''
  stdout: b''
- exit_code: 0
  program: "import std.typecons;\nimport std.math;\n/*\n Return a greatest common\
    \ divisor of two integers a and b\n    >>> greatest_common_divisor(3L, 5L)\n \
    \   1L\n    >>> greatest_common_divisor(25L, 15L)\n    5L\n    \n*/\nlong greatest_common_divisor(long\
    \ a, long b) \n{\n    if (a < b) \n    {\n        return greatest_common_divisor(b,\
    \ a);\n    }\n    if (b == 0) \n    {\n        return a;\n    }\n    return greatest_common_divisor(b,\
    \ a % b);\n}\nunittest\n{\n    alias candidate = greatest_common_divisor;\n\n\
    \    assert(candidate(3L, 7L) == 1L);\n    assert(candidate(10L, 15L) == 5L);\n\
    \    assert(candidate(49L, 14L) == 7L);\n    assert(candidate(144L, 60L) == 12L);\n\
    }\nvoid main(){}"
  status: OK
  stderr: b''
  stdout: b''
- exit_code: 0
  program: "import std.typecons;\nimport std.math;\n/*\n Return a greatest common\
    \ divisor of two integers a and b\n    >>> greatest_common_divisor(3L, 5L)\n \
    \   1L\n    >>> greatest_common_divisor(25L, 15L)\n    5L\n    \n*/\nlong greatest_common_divisor(long\
    \ a, long b) \n{\n    if (a < b) \n    {\n        return greatest_common_divisor(b,\
    \ a);\n    }\n    if (b == 0) \n    {\n        return a;\n    }\n    return greatest_common_divisor(b,\
    \ a % b);\n}\nunittest\n{\n    alias candidate = greatest_common_divisor;\n\n\
    \    assert(candidate(3L, 7L) == 1L);\n    assert(candidate(10L, 15L) == 5L);\n\
    \    assert(candidate(49L, 14L) == 7L);\n    assert(candidate(144L, 60L) == 12L);\n\
    }\nvoid main(){}"
  status: OK
  stderr: b''
  stdout: b''
- exit_code: 1
  program: "import std.typecons;\nimport std.math;\n/*\n Return a greatest common\
    \ divisor of two integers a and b\n    >>> greatest_common_divisor(3L, 5L)\n \
    \   1L\n    >>> greatest_common_divisor(25L, 15L)\n    5L\n    \n*/\nlong greatest_common_divisor(long\
    \ a, long b) \n{\n    if (a == 0) return b;\n    if (b == 0) return a;\n    if\
    \ (a == b) return a;\n    if (a == 1 || b == 1) return 1;\n    if (a == 2 || b\
    \ == 2) return 1;\n    if (a % 2 == 0 && b % 2 == 0) return 2 * greatest_common_divisor(a\
    \ / 2, b / 2);\n    if (a % 2 == 0) return greatest_common_divisor(a / 2, b);\n\
    \    if (b % 2 == 0) return greatest_common_divisor(a, b / 2);\n    return greatest_common_divisor(abs(a\
    \ - b), min(a, b));\n}\nunittest\n{\n    alias candidate = greatest_common_divisor;\n\
    \n    assert(candidate(3L, 7L) == 1L);\n    assert(candidate(10L, 15L) == 5L);\n\
    \    assert(candidate(49L, 14L) == 7L);\n    assert(candidate(144L, 60L) == 12L);\n\
    }\nvoid main(){}"
  status: SyntaxError
  stderr: 'b''/tmp/tmp9x6woewp.d(21): Error: undefined identifier `min`, did you mean
    function `main`?\nFailed: ["dmd", "-unittest", "-v", "-o-", "/tmp/tmp9x6woewp.d",
    "-I/tmp"]\n'''
  stdout: b''
- exit_code: 0
  program: "import std.typecons;\nimport std.math;\n/*\n Return a greatest common\
    \ divisor of two integers a and b\n    >>> greatest_common_divisor(3L, 5L)\n \
    \   1L\n    >>> greatest_common_divisor(25L, 15L)\n    5L\n    \n*/\nlong greatest_common_divisor(long\
    \ a, long b) \n{\n    if (a == 0L)\n        return b;\n    if (b == 0L)\n    \
    \    return a;\n    return greatest_common_divisor(b, a % b);\n}\nunittest\n{\n\
    \    alias candidate = greatest_common_divisor;\n\n    assert(candidate(3L, 7L)\
    \ == 1L);\n    assert(candidate(10L, 15L) == 5L);\n    assert(candidate(49L, 14L)\
    \ == 7L);\n    assert(candidate(144L, 60L) == 12L);\n}\nvoid main(){}"
  status: OK
  stderr: b''
  stdout: b''
- exit_code: 0
  program: "import std.typecons;\nimport std.math;\n/*\n Return a greatest common\
    \ divisor of two integers a and b\n    >>> greatest_common_divisor(3L, 5L)\n \
    \   1L\n    >>> greatest_common_divisor(25L, 15L)\n    5L\n    \n*/\nlong greatest_common_divisor(long\
    \ a, long b) \n{\n    if (a == 0L)\n        return b;\n    if (b == 0L)\n    \
    \    return a;\n    if (a == b)\n        return a;\n    if (a == 1L || b == 1L)\n\
    \        return 1L;\n    if (a % 2L == 0L && b % 2L == 0L)\n        return 2L\
    \ * greatest_common_divisor(a / 2L, b / 2L);\n    if (a % 2L == 0L && b % 2L !=\
    \ 0L)\n        return greatest_common_divisor(a / 2L, b);\n    if (a % 2L != 0L\
    \ && b % 2L == 0L)\n        return greatest_common_divisor(a, b / 2L);\n    if\
    \ (a % 2L != 0L && b % 2L != 0L && a < b)\n        return greatest_common_divisor((b\
    \ - a) / 2L, a);\n    if (a % 2L != 0L && b % 2L != 0L && a > b)\n        return\
    \ greatest_common_divisor((a - b) / 2L, b);\n    return 1L;\n}\nunittest\n{\n\
    \    alias candidate = greatest_common_divisor;\n\n    assert(candidate(3L, 7L)\
    \ == 1L);\n    assert(candidate(10L, 15L) == 5L);\n    assert(candidate(49L, 14L)\
    \ == 7L);\n    assert(candidate(144L, 60L) == 12L);\n}\nvoid main(){}"
  status: OK
  stderr: b''
  stdout: b''
- exit_code: 1
  program: "import std.typecons;\nimport std.math;\n/*\n Return a greatest common\
    \ divisor of two integers a and b\n    >>> greatest_common_divisor(3L, 5L)\n \
    \   1L\n    >>> greatest_common_divisor(25L, 15L)\n    5L\n    \n*/\nlong greatest_common_divisor(long\
    \ a, long b) \n{\n    if (a == 0)\n        return b;\n    if (b == 0)\n      \
    \  return a;\n    if (a == b)\n        return a;\n    if (a == 1 || b == 1)\n\
    \        return 1;\n    if ((a & 1) == 0)\n        return (b & 1) != 0 ? greatest_common_divisor(a\
    \ >> 1, b) : (greatest_common_divisor(a >> 1, b) << 1);\n    if ((b & 1) == 0)\n\
    \        return greatest_common_divisor(a, b >> 1);\n    if (a > b)\n        return\
    \ greatest_common_divisor((a - b) >> 1, b);\n    return greatest_common_divisor((b\
    \ - a) >> 1, a);\n}\nunittest\n{\n    alias candidate = greatest_common_divisor;\n\
    \n    assert(candidate(3L, 7L) == 1L);\n    assert(candidate(10L, 15L) == 5L);\n\
    \    assert(candidate(49L, 14L) == 7L);\n    assert(candidate(144L, 60L) == 12L);\n\
    }\nvoid main(){}"
  status: Exception
  stderr: 'b''core.exception.AssertError@/tmp/tmp801v4hqy.d(36): unittest failure\n----------------\n??:?
    _d_unittestp [0x427dfd]\n??:? void tmp801v4hqy.__unittest_L29_C1() [0x427b6b]\n??:?
    void tmp801v4hqy.__modtest() [0x427b80]\n??:? int core.runtime.runModuleUnitTests().__foreachbody2(object.ModuleInfo*)
    [0x42bb23]\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)).__lambda2(immutable(object.ModuleInfo*))
    [0x42a9b6]\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))).__foreachbody2(ref
    rt.sections_elf_shared.DSO) [0x42fb49]\n??:? int rt.sections_elf_shared.DSO.opApply(scope
    int delegate(ref rt.sections_elf_shared.DSO)) [0x42fff8]\n??:? int rt.minfo.moduleinfos_apply(scope
    int delegate(immutable(object.ModuleInfo*))) [0x42fad5]\n??:? int object.ModuleInfo.opApply(scope
    int delegate(object.ModuleInfo*)) [0x42a98d]\n??:? runModuleUnitTests [0x42b8f9]\n??:?
    void rt.dmain2._d_run_main(int, char**, extern (C) int function(char[][])*).runAll()
    [0x42824c]\n??:? void rt.dmain2._d_run_main(int, char**, extern (C) int function(char[][])*).tryExec(scope
    void delegate()) [0x4281d3]\n??:? _d_run_main [0x42813e]\n??:? main [0x427b93]\n??:?
    __libc_start_main [0xf44a3554]\n1/1 unittests FAILED\n'''
  stdout: b''
- exit_code: 0
  program: "import std.typecons;\nimport std.math;\n/*\n Return a greatest common\
    \ divisor of two integers a and b\n    >>> greatest_common_divisor(3L, 5L)\n \
    \   1L\n    >>> greatest_common_divisor(25L, 15L)\n    5L\n    \n*/\nlong greatest_common_divisor(long\
    \ a, long b) \n{\n    if (a == 0)\n        return b;\n    if (b == 0)\n      \
    \  return a;\n    if (a == b)\n        return a;\n    if (a == 1 || b == 1)\n\
    \        return 1;\n    if ((a & 1) == 0)\n        return ((b & 1) == 0) ? greatest_common_divisor(a\
    \ >> 1, b >> 1) << 1 : greatest_common_divisor(a >> 1, b);\n    else\n       \
    \ return ((b & 1) == 0) ? greatest_common_divisor(a, b >> 1) : greatest_common_divisor(b,\
    \ abs(a - b));\n}\nunittest\n{\n    alias candidate = greatest_common_divisor;\n\
    \n    assert(candidate(3L, 7L) == 1L);\n    assert(candidate(10L, 15L) == 5L);\n\
    \    assert(candidate(49L, 14L) == 7L);\n    assert(candidate(144L, 60L) == 12L);\n\
    }\nvoid main(){}"
  status: OK
  stderr: b''
  stdout: b''
- exit_code: 0
  program: "import std.typecons;\nimport std.math;\n/*\n Return a greatest common\
    \ divisor of two integers a and b\n    >>> greatest_common_divisor(3L, 5L)\n \
    \   1L\n    >>> greatest_common_divisor(25L, 15L)\n    5L\n    \n*/\nlong greatest_common_divisor(long\
    \ a, long b) \n{\n    if (a == 0L)\n        return b;\n    if (b == 0L)\n    \
    \    return a;\n    return greatest_common_divisor(b, a % b);\n}\nunittest\n{\n\
    \    alias candidate = greatest_common_divisor;\n\n    assert(candidate(3L, 7L)\
    \ == 1L);\n    assert(candidate(10L, 15L) == 5L);\n    assert(candidate(49L, 14L)\
    \ == 7L);\n    assert(candidate(144L, 60L) == 12L);\n}\nvoid main(){}"
  status: OK
  stderr: b''
  stdout: b''
- exit_code: 0
  program: "import std.typecons;\nimport std.math;\n/*\n Return a greatest common\
    \ divisor of two integers a and b\n    >>> greatest_common_divisor(3L, 5L)\n \
    \   1L\n    >>> greatest_common_divisor(25L, 15L)\n    5L\n    \n*/\nlong greatest_common_divisor(long\
    \ a, long b) \n{\n    if (a == 0L)\n        return b;\n    if (b == 0L)\n    \
    \    return a;\n    if (a < 0L)\n        a = -a;\n    if (b < 0L)\n        b =\
    \ -b;\n    while (a != b)\n    {\n        if (a > b)\n            a -= b;\n  \
    \      else\n            b -= a;\n    }\n    return a;\n}\nunittest\n{\n    alias\
    \ candidate = greatest_common_divisor;\n\n    assert(candidate(3L, 7L) == 1L);\n\
    \    assert(candidate(10L, 15L) == 5L);\n    assert(candidate(49L, 14L) == 7L);\n\
    \    assert(candidate(144L, 60L) == 12L);\n}\nvoid main(){}"
  status: OK
  stderr: b''
  stdout: b''
- exit_code: 0
  program: "import std.typecons;\nimport std.math;\n/*\n Return a greatest common\
    \ divisor of two integers a and b\n    >>> greatest_common_divisor(3L, 5L)\n \
    \   1L\n    >>> greatest_common_divisor(25L, 15L)\n    5L\n    \n*/\nlong greatest_common_divisor(long\
    \ a, long b) \n{\n    if (a == 0L)\n        return b;\n    if (b == 0L)\n    \
    \    return a;\n    if (a == b)\n        return a;\n    if (a > b)\n        return\
    \ greatest_common_divisor(a - b, b);\n    return greatest_common_divisor(a, b\
    \ - a);\n}\nunittest\n{\n    alias candidate = greatest_common_divisor;\n\n  \
    \  assert(candidate(3L, 7L) == 1L);\n    assert(candidate(10L, 15L) == 5L);\n\
    \    assert(candidate(49L, 14L) == 7L);\n    assert(candidate(144L, 60L) == 12L);\n\
    }\nvoid main(){}"
  status: OK
  stderr: b''
  stdout: b''
- exit_code: 1
  program: "import std.typecons;\nimport std.math;\n/*\n Return a greatest common\
    \ divisor of two integers a and b\n    >>> greatest_common_divisor(3L, 5L)\n \
    \   1L\n    >>> greatest_common_divisor(25L, 15L)\n    5L\n    \n*/\nlong greatest_common_divisor(long\
    \ a, long b) \n{\n    if (a == 0L) \n    {\n        return b;\n    }\n    if (b\
    \ == 0L) \n    {\n        return a;\n    }\n    if (a == b) \n    {\n        return\
    \ a;\n    }\n    if (a == 1L || b == 1L) \n    {\n        return 1L;\n    }\n\
    \    if (a % 2L == 0L && b % 2L == 0L) \n    {\n        return 2L * greatest_common_divisor(a\
    \ / 2L, b / 2L);\n    }\n    if (a % 2L == 0L && b % 2L != 0L) \n    {\n     \
    \   return greatest_common_divisor(a / 2L, b);\n    }\n    if (a % 2L != 0L &&\
    \ b % 2L == 0L) \n    {\n        return greatest_common_divisor(a, b / 2L);\n\
    \    }\n    return greatest_common_divisor(abs(a - b), min(a, b));\n}\n/*\n Return\
    \ a least common multiple of two integers a and b\n    >>> least_common_multiple(3L,\
    \ 5L)\n    15L\n    >>> least_common_multiple(25L, 15L)\n    75L\n*/\nlong least_common_multiple(long\
    \ a, long b) \n{\n    return (a * b) / greatest_common_divisor(a, b);\n}\n/*\n\
    \ Return a least common multiple of a list of integers\n    >>> least_common_multiple_list([3L,\
    \ 5L, 7L])\n    105L\n    >>> least_common_multiple_list([25L, 15L, 75L])\n  \
    \  375L\n*/\nlong least_common_multiple_list(long[] a) \n{\n    long result =\
    \ 1L;\n    foreach (i; a) \n    {\n        result = least_common_multiple(result,\
    \ i);\n    }\n    return result;\n}\n/*\n Return a greatest common divisor of\
    \ a list of integers\n    >>> greatest_common_divisor_list([3L, 5L, 7L\nunittest\n\
    {\n    alias candidate = greatest_common_divisor;\n\n    assert(candidate(3L,\
    \ 7L) == 1L);\n    assert(candidate(10L, 15L) == 5L);\n    assert(candidate(49L,\
    \ 14L) == 7L);\n    assert(candidate(144L, 60L) == 12L);\n}\nvoid main(){}"
  status: SyntaxError
  stderr: 'b''/tmp/tmpn86qo0xl.d(70): Error: unterminated /* */ comment\nFailed: ["dmd",
    "-unittest", "-v", "-o-", "/tmp/tmpn86qo0xl.d", "-I/tmp"]\n'''
  stdout: b''
- exit_code: 0
  program: "import std.typecons;\nimport std.math;\n/*\n Return a greatest common\
    \ divisor of two integers a and b\n    >>> greatest_common_divisor(3L, 5L)\n \
    \   1L\n    >>> greatest_common_divisor(25L, 15L)\n    5L\n    \n*/\nlong greatest_common_divisor(long\
    \ a, long b) \n{\n    if (a == 0L)\n        return b;\n    if (b == 0L)\n    \
    \    return a;\n    if (a == b)\n        return a;\n    if (a == 1L || b == 1L)\n\
    \        return 1L;\n    if (a % 2L == 0L && b % 2L == 0L)\n        return 2L\
    \ * greatest_common_divisor(a / 2L, b / 2L);\n    if (a % 2L == 0L && b % 2L !=\
    \ 0L)\n        return greatest_common_divisor(a / 2L, b);\n    if (a % 2L != 0L\
    \ && b % 2L == 0L)\n        return greatest_common_divisor(a, b / 2L);\n    if\
    \ (a % 2L != 0L && b % 2L != 0L && a < b)\n        return greatest_common_divisor((b\
    \ - a) / 2L, a);\n    if (a % 2L != 0L && b % 2L != 0L && a > b)\n        return\
    \ greatest_common_divisor((a - b) / 2L, b);\n    return 0L;\n}\nunittest\n{\n\
    \    alias candidate = greatest_common_divisor;\n\n    assert(candidate(3L, 7L)\
    \ == 1L);\n    assert(candidate(10L, 15L) == 5L);\n    assert(candidate(49L, 14L)\
    \ == 7L);\n    assert(candidate(144L, 60L) == 12L);\n}\nvoid main(){}"
  status: OK
  stderr: b''
  stdout: b''
- exit_code: 0
  program: "import std.typecons;\nimport std.math;\n/*\n Return a greatest common\
    \ divisor of two integers a and b\n    >>> greatest_common_divisor(3L, 5L)\n \
    \   1L\n    >>> greatest_common_divisor(25L, 15L)\n    5L\n    \n*/\nlong greatest_common_divisor(long\
    \ a, long b) \n{\n    if (a == 0L)\n        return b;\n    if (b == 0L)\n    \
    \    return a;\n    return greatest_common_divisor(b, a % b);\n}\nunittest\n{\n\
    \    alias candidate = greatest_common_divisor;\n\n    assert(candidate(3L, 7L)\
    \ == 1L);\n    assert(candidate(10L, 15L) == 5L);\n    assert(candidate(49L, 14L)\
    \ == 7L);\n    assert(candidate(144L, 60L) == 12L);\n}\nvoid main(){}"
  status: OK
  stderr: b''
  stdout: b''
- exit_code: 0
  program: "import std.typecons;\nimport std.math;\n/*\n Return a greatest common\
    \ divisor of two integers a and b\n    >>> greatest_common_divisor(3L, 5L)\n \
    \   1L\n    >>> greatest_common_divisor(25L, 15L)\n    5L\n    \n*/\nlong greatest_common_divisor(long\
    \ a, long b) \n{\n    if (a == 0L)\n        return b;\n    if (b == 0L)\n    \
    \    return a;\n    return greatest_common_divisor(b, a % b);\n}\nunittest\n{\n\
    \    alias candidate = greatest_common_divisor;\n\n    assert(candidate(3L, 7L)\
    \ == 1L);\n    assert(candidate(10L, 15L) == 5L);\n    assert(candidate(49L, 14L)\
    \ == 7L);\n    assert(candidate(144L, 60L) == 12L);\n}\nvoid main(){}"
  status: OK
  stderr: b''
  stdout: b''
- exit_code: 1
  program: "import std.typecons;\nimport std.math;\n/*\n Return a greatest common\
    \ divisor of two integers a and b\n    >>> greatest_common_divisor(3L, 5L)\n \
    \   1L\n    >>> greatest_common_divisor(25L, 15L)\n    5L\n    \n*/\nlong greatest_common_divisor(long\
    \ a, long b) \n{\n    if (a == 0L)\n        return b;\n    if (b == 0L)\n    \
    \    return a;\n    if (a == b)\n        return a;\n    if (a == 1L || b == 1L)\n\
    \        return 1L;\n    if (a % 2L == 0L && b % 2L == 0L)\n        return 2L\
    \ * greatest_common_divisor(a / 2L, b / 2L);\n    if (a % 2L == 0L && b % 2L !=\
    \ 0L)\n        return greatest_common_divisor(a / 2L, b);\n    if (a % 2L != 0L\
    \ && b % 2L == 0L)\n        return greatest_common_divisor(a, b / 2L);\n    return\
    \ greatest_common_divisor(abs(a - b), min(a, b));\n}\nunittest\n{\n    alias candidate\
    \ = greatest_common_divisor;\n\n    assert(candidate(3L, 7L) == 1L);\n    assert(candidate(10L,\
    \ 15L) == 5L);\n    assert(candidate(49L, 14L) == 7L);\n    assert(candidate(144L,\
    \ 60L) == 12L);\n}\nvoid main(){}"
  status: SyntaxError
  stderr: 'b''Error: cannot find source code for runtime library file \''object.d\''\n       dmd
    might not be correctly installed. Run \''dmd -man\'' for installation instructions.\nimport
    path[0] = /tmp\nFailed: ["dmd", "-unittest", "-v", "-o-", "/tmp/tmpk0hvzr40.d",
    "-I/tmp"]\n'''
  stdout: b''
  timestamp: 1659794497
- exit_code: 1
  program: "import std.typecons;\nimport std.math;\n/*\n Return a greatest common\
    \ divisor of two integers a and b\n    >>> greatest_common_divisor(3L, 5L)\n \
    \   1L\n    >>> greatest_common_divisor(25L, 15L)\n    5L\n    \n*/\nlong greatest_common_divisor(long\
    \ a, long b) \n{\n    if (a == 0L)\n        return b;\n    if (b == 0L)\n    \
    \    return a;\n    return greatest_common_divisor(b, a % b);\n}\n/*\n Return\
    \ a least common multiple of two integers a and b\n    >>> least_common_multiple(3L,\
    \ 5L)\n    15L\n    >>> least_common_multiple(25L, 15L)\n    75L\n*/\nlong least_common_multiple(long\
    \ a, long b) \n{\n    return (a * b) / greatest_common_divisor(a, b);\n}\n/*\n\
    \ Return a least common multiple of a list of integers\n    >>> least_common_multiple_of_list([3L,\
    \ 5L])\n    15L\n    >>> least_common_multiple_of_list([25L, 15L])\n    75L\n\
    */\nlong least_common_multiple_of_list(long[] list) \n{\n    long result = 1L;\n\
    \    foreach (long i; list) \n    {\n        result = least_common_multiple(result,\
    \ i);\n    }\n    return result;\n}\n/*\n Return a greatest common divisor of\
    \ a list of integers\n    >>> greatest_common_divisor_of_list([3L, 5L])\n    1L\n\
    \    >>> greatest_common_divisor_of_list([25L, 15L])\n    5L\n*/\nlong greatest_common_divisor_of_list(long[]\
    \ list) \n{\n    long result = 0L;\n    foreach (long i; list) \n    {\n     \
    \   if (result == 0L)\n            result = i;\n        else\n            result\
    \ = greatest_common_divisor(result, i);\n    }\n    return result;\n}\n/*\n Return\
    \ a greatest common divisor of a list of integers\n    >>> greatest_common_divisor_of_list([3L,\
    \ 5L])\n    1L\n    >>> greatest_common_divisor_of_list([25L, 15L])\n    5L\n\
    */\nlong greatest_common_divisor_of_list(long[] list) \n{\n\nunittest\n{\n   \
    \ alias candidate = greatest_common_divisor;\n\n    assert(candidate(3L, 7L) ==\
    \ 1L);\n    assert(candidate(10L, 15L) == 5L);\n    assert(candidate(49L, 14L)\
    \ == 7L);\n    assert(candidate(144L, 60L) == 12L);\n}\nvoid main(){}"
  status: SyntaxError
  stderr: 'b''/tmp/tmp5gjlxhp2.d(75): Error: found \''unittest\'' instead of statement\nFailed:
    ["dmd", "-unittest", "-v", "-o-", "/tmp/tmp5gjlxhp2.d", "-I/tmp"]\n'''
  stdout: b''
  timestamp: 1659794497
- exit_code: 0
  program: "import std.typecons;\nimport std.math;\n/*\n Return a greatest common\
    \ divisor of two integers a and b\n    >>> greatest_common_divisor(3L, 5L)\n \
    \   1L\n    >>> greatest_common_divisor(25L, 15L)\n    5L\n    \n*/\nlong greatest_common_divisor(long\
    \ a, long b) \n{\n    if (a < b)\n        return greatest_common_divisor(b, a);\n\
    \    if (b == 0)\n        return a;\n    return greatest_common_divisor(b, a %\
    \ b);\n}\nunittest\n{\n    alias candidate = greatest_common_divisor;\n\n    assert(candidate(3L,\
    \ 7L) == 1L);\n    assert(candidate(10L, 15L) == 5L);\n    assert(candidate(49L,\
    \ 14L) == 7L);\n    assert(candidate(144L, 60L) == 12L);\n}\nvoid main(){}"
  status: OK
  stderr: b''
  stdout: b''
- exit_code: 1
  program: "import std.typecons;\nimport std.math;\n/*\n Return a greatest common\
    \ divisor of two integers a and b\n    >>> greatest_common_divisor(3L, 5L)\n \
    \   1L\n    >>> greatest_common_divisor(25L, 15L)\n    5L\n    \n*/\nlong greatest_common_divisor(long\
    \ a, long b) \n{\n    return b == 0 ? a : greatest_common_divisor(b, a % b);\n\
    }\nunittest\n{\n    alias candidate = greatest_common_divisor;\n\n    assert(candidate(3L,\
    \ 7L) == 1L);\n    assert(candidate(10L, 15L) == 5L);\n    assert(candidate(49L,\
    \ 14L) == 7L);\n    assert(candidate(144L, 60L) == 12L);\n}\nvoid main(){}"
  status: SyntaxError
  stderr: 'b''Error: cannot find source code for runtime library file \''object.d\''\n       dmd
    might not be correctly installed. Run \''dmd -man\'' for installation instructions.\nimport
    path[0] = /tmp\nFailed: ["dmd", "-unittest", "-v", "-o-", "/tmp/tmp8uif3rxd.d",
    "-I/tmp"]\n'''
  stdout: b''
  timestamp: 1659794497
- exit_code: 1
  program: "import std.typecons;\nimport std.math;\n/*\n Return a greatest common\
    \ divisor of two integers a and b\n    >>> greatest_common_divisor(3L, 5L)\n \
    \   1L\n    >>> greatest_common_divisor(25L, 15L)\n    5L\n    \n*/\nlong greatest_common_divisor(long\
    \ a, long b) \n{\n    if (a == 0)\n        return b;\n    if (b == 0)\n      \
    \  return a;\n    if (a > b)\n        return greatest_common_divisor(a % b, b);\n\
    \    else\n        return greatest_common_divisor(a, b % a);\n}\nunittest\n{\n\
    \    alias candidate = greatest_common_divisor;\n\n    assert(candidate(3L, 7L)\
    \ == 1L);\n    assert(candidate(10L, 15L) == 5L);\n    assert(candidate(49L, 14L)\
    \ == 7L);\n    assert(candidate(144L, 60L) == 12L);\n}\nvoid main(){}"
  status: SyntaxError
  stderr: 'b''Error: cannot find source code for runtime library file \''object.d\''\n       dmd
    might not be correctly installed. Run \''dmd -man\'' for installation instructions.\nimport
    path[0] = /tmp\nFailed: ["dmd", "-unittest", "-v", "-o-", "/tmp/tmp5fzs3zge.d",
    "-I/tmp"]\n'''
  stdout: b''
  timestamp: 1659794497
- exit_code: 1
  program: "import std.typecons;\nimport std.math;\n/*\n Return a greatest common\
    \ divisor of two integers a and b\n    >>> greatest_common_divisor(3L, 5L)\n \
    \   1L\n    >>> greatest_common_divisor(25L, 15L)\n    5L\n    \n*/\nlong greatest_common_divisor(long\
    \ a, long b) \n{\n    if (a == 0L)\n        return b;\n    if (b == 0L)\n    \
    \    return a;\n    if (a == b)\n        return a;\n    if (a == 1L || b == 1L)\n\
    \        return 1L;\n    if (a % 2L == 0L && b % 2L == 0L)\n        return 2L\
    \ * greatest_common_divisor(a / 2L, b / 2L);\n    if (a % 2L == 0L && b % 2L !=\
    \ 0L)\n        return greatest_common_divisor(a / 2L, b);\n    if (a % 2L != 0L\
    \ && b % 2L == 0L)\n        return greatest_common_divisor(a, b / 2L);\n    return\
    \ greatest_common_divisor(abs(a - b), min(a, b));\n}\nunittest\n{\n    alias candidate\
    \ = greatest_common_divisor;\n\n    assert(candidate(3L, 7L) == 1L);\n    assert(candidate(10L,\
    \ 15L) == 5L);\n    assert(candidate(49L, 14L) == 7L);\n    assert(candidate(144L,\
    \ 60L) == 12L);\n}\nvoid main(){}"
  status: SyntaxError
  stderr: 'b''Error: cannot find source code for runtime library file \''object.d\''\n       dmd
    might not be correctly installed. Run \''dmd -man\'' for installation instructions.\nimport
    path[0] = /tmp\nFailed: ["dmd", "-unittest", "-v", "-o-", "/tmp/tmpk0hvzr40.d",
    "-I/tmp"]\n'''
  stdout: b''
  timestamp: 1659794497
- exit_code: 1
  program: "import std.typecons;\nimport std.math;\n/*\n Return a greatest common\
    \ divisor of two integers a and b\n    >>> greatest_common_divisor(3L, 5L)\n \
    \   1L\n    >>> greatest_common_divisor(25L, 15L)\n    5L\n    \n*/\nlong greatest_common_divisor(long\
    \ a, long b) \n{\n    if (a == 0L)\n        return b;\n    if (b == 0L)\n    \
    \    return a;\n    if (a == b)\n        return a;\n    if (a == 1L || b == 1L)\n\
    \        return 1L;\n    if (a % 2L == 0L && b % 2L == 0L)\n        return 2L\
    \ * greatest_common_divisor(a / 2L, b / 2L);\n    if (a % 2L == 0L && b % 2L !=\
    \ 0L)\n        return greatest_common_divisor(a / 2L, b);\n    if (a % 2L != 0L\
    \ && b % 2L == 0L)\n        return greatest_common_divisor(a, b / 2L);\n    return\
    \ greatest_common_divisor(abs(a - b), min(a, b));\n}\n/*\n Return a least common\
    \ multiple of two integers a and b\n    >>> least_common_multiple(3L, 5L)\n  \
    \  15L\n    >>> least_common_multiple(25L, 15L)\n    75L\n    \n*/\nlong least_common_multiple(long\
    \ a, long b) \n{\n    return a * b / greatest_common_divisor(a, b);\n}\n/*\n Return\
    \ a greatest common divisor of a list of integers\n    >>> greatest_common_divisor_list([3L,\
    \ 5L, 7L])\n    1L\n    >>> greatest_common_divisor_list([25L, 15L, 75L])\n  \
    \  5L\n    \n*/\nlong greatest_common_divisor_list(long[] a) \n{\n    long result\
    \ = a[0];\n    foreach (i; 1 .. a.length)\n        result = greatest_common_divisor(result,\
    \ a[i]);\n    return result;\n}\n/*\n Return a least common multiple of a list\
    \ of integers\n    >>> least_common_multiple_list([3L, 5L, 7L])\n    105L\n  \
    \  >>> least_common_multiple_list([25L, 15L, 75L])\n    225L\n    \n*/\nlong least_common_multiple_\n\
    unittest\n{\n    alias candidate = greatest_common_divisor;\n\n    assert(candidate(3L,\
    \ 7L) == 1L);\n    assert(candidate(10L, 15L) == 5L);\n    assert(candidate(49L,\
    \ 14L) == 7L);\n    assert(candidate(144L, 60L) == 12L);\n}\nvoid main(){}"
  status: SyntaxError
  stderr: 'b''/tmp/tmpv5wp53vw.d(65): Error: semicolon expected, not \''unittest\''\nFailed:
    ["dmd", "-unittest", "-v", "-o-", "/tmp/tmpv5wp53vw.d", "-I/tmp"]\n'''
  stdout: b''
  timestamp: 1659794497
- exit_code: 1
  program: "import std.typecons;\nimport std.math;\n/*\n Return a greatest common\
    \ divisor of two integers a and b\n    >>> greatest_common_divisor(3L, 5L)\n \
    \   1L\n    >>> greatest_common_divisor(25L, 15L)\n    5L\n    \n*/\nlong greatest_common_divisor(long\
    \ a, long b) \n{\n    if (a == 0L)\n        return b;\n    if (b == 0L)\n    \
    \    return a;\n    if (a == b)\n        return a;\n    if (a == 1L || b == 1L)\n\
    \        return 1L;\n    if (a % 2L == 0L && b % 2L == 0L)\n        return 2L\
    \ * greatest_common_divisor(a / 2L, b / 2L);\n    if (a % 2L == 0L && b % 2L !=\
    \ 0L)\n        return greatest_common_divisor(a / 2L, b);\n    if (a % 2L != 0L\
    \ && b % 2L == 0L)\n        return greatest_common_divisor(a, b / 2L);\n    if\
    \ (a > b)\n        return greatest_common_divisor((a - b) / 2L, b);\n    else\n\
    \        return greatest_common_divisor((b - a) / 2L, a);\n}\nunittest\n{\n  \
    \  alias candidate = greatest_common_divisor;\n\n    assert(candidate(3L, 7L)\
    \ == 1L);\n    assert(candidate(10L, 15L) == 5L);\n    assert(candidate(49L, 14L)\
    \ == 7L);\n    assert(candidate(144L, 60L) == 12L);\n}\nvoid main(){}"
  status: SyntaxError
  stderr: 'b''Error: cannot find source code for runtime library file \''object.d\''\n       dmd
    might not be correctly installed. Run \''dmd -man\'' for installation instructions.\nimport
    path[0] = /tmp\nFailed: ["dmd", "-unittest", "-v", "-o-", "/tmp/tmpky8pktcj.d",
    "-I/tmp"]\n'''
  stdout: b''
  timestamp: 1659794497
- exit_code: 1
  program: "import std.typecons;\nimport std.math;\n/*\n Return a greatest common\
    \ divisor of two integers a and b\n    >>> greatest_common_divisor(3L, 5L)\n \
    \   1L\n    >>> greatest_common_divisor(25L, 15L)\n    5L\n    \n*/\nlong greatest_common_divisor(long\
    \ a, long b) \n{\n    if (a < b)\n        return greatest_common_divisor(b, a);\n\
    \    while (b != 0)\n    {\n        long t = b;\n        b = a % b;\n        a\
    \ = t;\n    }\n    return a;\n}\nunittest\n{\n    alias candidate = greatest_common_divisor;\n\
    \n    assert(candidate(3L, 7L) == 1L);\n    assert(candidate(10L, 15L) == 5L);\n\
    \    assert(candidate(49L, 14L) == 7L);\n    assert(candidate(144L, 60L) == 12L);\n\
    }\nvoid main(){}"
  status: SyntaxError
  stderr: 'b''Error: cannot find source code for runtime library file \''object.d\''\n       dmd
    might not be correctly installed. Run \''dmd -man\'' for installation instructions.\nimport
    path[0] = /tmp\nFailed: ["dmd", "-unittest", "-v", "-o-", "/tmp/tmph3ffypl0.d",
    "-I/tmp"]\n'''
  stdout: b''
  timestamp: 1659794497
- exit_code: 0
  program: "import std.typecons;\nimport std.math;\n/*\n Return a greatest common\
    \ divisor of two integers a and b\n    >>> greatest_common_divisor(3L, 5L)\n \
    \   1L\n    >>> greatest_common_divisor(25L, 15L)\n    5L\n    \n*/\nlong greatest_common_divisor(long\
    \ a, long b) \n{\n    if (a < b)\n        return greatest_common_divisor(b, a);\n\
    \    if (b == 0)\n        return a;\n    return greatest_common_divisor(b, a %\
    \ b);\n}\nunittest\n{\n    alias candidate = greatest_common_divisor;\n\n    assert(candidate(3L,\
    \ 7L) == 1L);\n    assert(candidate(10L, 15L) == 5L);\n    assert(candidate(49L,\
    \ 14L) == 7L);\n    assert(candidate(144L, 60L) == 12L);\n}\nvoid main(){}"
  status: OK
  stderr: b''
  stdout: b''
- exit_code: 1
  program: "import std.typecons;\nimport std.math;\n/*\n Return a greatest common\
    \ divisor of two integers a and b\n    >>> greatest_common_divisor(3L, 5L)\n \
    \   1L\n    >>> greatest_common_divisor(25L, 15L)\n    5L\n    \n*/\nlong greatest_common_divisor(long\
    \ a, long b) \n{\n    if (a == 0L)\n        return b;\n    else if (b == 0L)\n\
    \        return a;\n    else\n        return greatest_common_divisor(b, a % b);\n\
    }\nunittest\n{\n    alias candidate = greatest_common_divisor;\n\n    assert(candidate(3L,\
    \ 7L) == 1L);\n    assert(candidate(10L, 15L) == 5L);\n    assert(candidate(49L,\
    \ 14L) == 7L);\n    assert(candidate(144L, 60L) == 12L);\n}\nvoid main(){}"
  status: SyntaxError
  stderr: 'b''Error: cannot find source code for runtime library file \''object.d\''\n       dmd
    might not be correctly installed. Run \''dmd -man\'' for installation instructions.\nimport
    path[0] = /tmp\nFailed: ["dmd", "-unittest", "-v", "-o-", "/tmp/tmprikuhc0p.d",
    "-I/tmp"]\n'''
  stdout: b''
  timestamp: 1659794497
- exit_code: 1
  program: "import std.typecons;\nimport std.math;\n/*\n Return a greatest common\
    \ divisor of two integers a and b\n    >>> greatest_common_divisor(3L, 5L)\n \
    \   1L\n    >>> greatest_common_divisor(25L, 15L)\n    5L\n    \n*/\nlong greatest_common_divisor(long\
    \ a, long b) \n{\n    while (b != 0) \n    {\n        long t = b;\n        b =\
    \ a % b;\n        a = t;\n    }\n    return a;\n}\nunittest\n{\n    alias candidate\
    \ = greatest_common_divisor;\n\n    assert(candidate(3L, 7L) == 1L);\n    assert(candidate(10L,\
    \ 15L) == 5L);\n    assert(candidate(49L, 14L) == 7L);\n    assert(candidate(144L,\
    \ 60L) == 12L);\n}\nvoid main(){}"
  status: SyntaxError
  stderr: 'b''Error: cannot find source code for runtime library file \''object.d\''\n       dmd
    might not be correctly installed. Run \''dmd -man\'' for installation instructions.\nimport
    path[0] = /tmp\nFailed: ["dmd", "-unittest", "-v", "-o-", "/tmp/tmpxppmwc1c.d",
    "-I/tmp"]\n'''
  stdout: b''
  timestamp: 1659794497
- exit_code: 1
  program: "import std.typecons;\nimport std.math;\n/*\n Return a greatest common\
    \ divisor of two integers a and b\n    >>> greatest_common_divisor(3L, 5L)\n \
    \   1L\n    >>> greatest_common_divisor(25L, 15L)\n    5L\n    \n*/\nlong greatest_common_divisor(long\
    \ a, long b) \n{\n    return b == 0 ? a : greatest_common_divisor(b, a % b);\n\
    }\nunittest\n{\n    alias candidate = greatest_common_divisor;\n\n    assert(candidate(3L,\
    \ 7L) == 1L);\n    assert(candidate(10L, 15L) == 5L);\n    assert(candidate(49L,\
    \ 14L) == 7L);\n    assert(candidate(144L, 60L) == 12L);\n}\nvoid main(){}"
  status: SyntaxError
  stderr: 'b''Error: cannot find source code for runtime library file \''object.d\''\n       dmd
    might not be correctly installed. Run \''dmd -man\'' for installation instructions.\nimport
    path[0] = /tmp\nFailed: ["dmd", "-unittest", "-v", "-o-", "/tmp/tmp8uif3rxd.d",
    "-I/tmp"]\n'''
  stdout: b''
  timestamp: 1659794497
- exit_code: 1
  program: "import std.typecons;\nimport std.math;\n/*\n Return a greatest common\
    \ divisor of two integers a and b\n    >>> greatest_common_divisor(3L, 5L)\n \
    \   1L\n    >>> greatest_common_divisor(25L, 15L)\n    5L\n    \n*/\nlong greatest_common_divisor(long\
    \ a, long b) \n{\n    if (a == 0)\n        return b;\n    if (b == 0)\n      \
    \  return a;\n    if (a == b)\n        return a;\n    if (a == 1 || b == 1)\n\
    \        return 1;\n    if ((a & 1) == 0)\n        return (b & 1) != 0 ? greatest_common_divisor(a\
    \ >> 1, b) : greatest_common_divisor(a >> 1, b >> 1) << 1;\n    if ((b & 1) ==\
    \ 0)\n        return greatest_common_divisor(a, b >> 1);\n    if (a > b)\n   \
    \     return greatest_common_divisor((a - b) >> 1, b);\n    return greatest_common_divisor((b\
    \ - a) >> 1, a);\n}\nunittest\n{\n    alias candidate = greatest_common_divisor;\n\
    \n    assert(candidate(3L, 7L) == 1L);\n    assert(candidate(10L, 15L) == 5L);\n\
    \    assert(candidate(49L, 14L) == 7L);\n    assert(candidate(144L, 60L) == 12L);\n\
    }\nvoid main(){}"
  status: SyntaxError
  stderr: 'b''Error: cannot find source code for runtime library file \''object.d\''\n       dmd
    might not be correctly installed. Run \''dmd -man\'' for installation instructions.\nimport
    path[0] = /tmp\nFailed: ["dmd", "-unittest", "-v", "-o-", "/tmp/tmp01xcvsha.d",
    "-I/tmp"]\n'''
  stdout: b''
  timestamp: 1659794497
- exit_code: 1
  program: "import std.typecons;\nimport std.math;\n/*\n Return a greatest common\
    \ divisor of two integers a and b\n    >>> greatest_common_divisor(3L, 5L)\n \
    \   1L\n    >>> greatest_common_divisor(25L, 15L)\n    5L\n    \n*/\nlong greatest_common_divisor(long\
    \ a, long b) \n{\n    return b == 0 ? a : greatest_common_divisor(b, a % b);\n\
    }\n/*\n Return a least common multiple of two integers a and b\n    >>> least_common_multiple(3L,\
    \ 5L)\n    15L\n    >>> least_common_multiple(25L, 15L)\n    75L\n*/\nlong least_common_multiple(long\
    \ a, long b) \n{\n    return a * b / greatest_common_divisor(a, b);\n}\n/*\n Return\
    \ a greatest common divisor of a list of integers\n    >>> greatest_common_divisor([3L,\
    \ 5L, 7L])\n    1L\n    >>> greatest_common_divisor([25L, 15L, 75L])\n    5L\n\
    */\nlong greatest_common_divisor(in long[] a) \n{\n    return a.length == 1 ?\
    \ a[0] : greatest_common_divisor(a[0], greatest_common_divisor(a[1 .. $]));\n\
    }\n/*\n Return a least common multiple of a list of integers\n    >>> least_common_multiple([3L,\
    \ 5L, 7L])\n    105L\n    >>> least_common_multiple([25L, 15L, 75L])\n    375L\n\
    */\nlong least_common_multiple(in long[] a) \n{\n    return a.length == 1 ? a[0]\
    \ : least_common_multiple(a[0], least_common_multiple(a[1 .. $]));\n}\n/*\n Return\
    \ a greatest common divisor of a list of integers\n    >>> greatest_common_divisor([3L,\
    \ 5L, 7L])\n    1L\n    >>> greatest_common_divisor([25L, 15L, 75L])\n    5L\n\
    */\nlong greatest_common_divisor(in int[] a) \n{\n    return a.length == 1 ? a[0]\
    \ : greatest_common_divisor(a[0], greatest_common_divisor(a[1 .. $]));\n}\n/*\n\
    \ Return a least common multiple of a list of integers\n    >>> least_common_multiple([3L,\
    \ 5L\nunittest\n{\n    alias candidate = greatest_common_divisor;\n\n    assert(candidate(3L,\
    \ 7L) == 1L);\n    assert(candidate(10L, 15L) == 5L);\n    assert(candidate(49L,\
    \ 14L) == 7L);\n    assert(candidate(144L, 60L) == 12L);\n}\nvoid main(){}"
  status: SyntaxError
  stderr: 'b''/tmp/tmp6wok86ph.d(59): Error: unterminated /* */ comment\nFailed: ["dmd",
    "-unittest", "-v", "-o-", "/tmp/tmp6wok86ph.d", "-I/tmp"]\n'''
  stdout: b''
  timestamp: 1659794497
- exit_code: 1
  program: "import std.typecons;\nimport std.math;\n/*\n Return a greatest common\
    \ divisor of two integers a and b\n    >>> greatest_common_divisor(3L, 5L)\n \
    \   1L\n    >>> greatest_common_divisor(25L, 15L)\n    5L\n    \n*/\nlong greatest_common_divisor(long\
    \ a, long b) \n{\n    if (b == 0)\n        return a;\n    else\n        return\
    \ greatest_common_divisor(b, a % b);\n}\nunittest\n{\n    alias candidate = greatest_common_divisor;\n\
    \n    assert(candidate(3L, 7L) == 1L);\n    assert(candidate(10L, 15L) == 5L);\n\
    \    assert(candidate(49L, 14L) == 7L);\n    assert(candidate(144L, 60L) == 12L);\n\
    }\nvoid main(){}"
  status: SyntaxError
  stderr: 'b''Error: cannot find source code for runtime library file \''object.d\''\n       dmd
    might not be correctly installed. Run \''dmd -man\'' for installation instructions.\nimport
    path[0] = /tmp\nFailed: ["dmd", "-unittest", "-v", "-o-", "/tmp/tmpd2a_90wj.d",
    "-I/tmp"]\n'''
  stdout: b''
  timestamp: 1659794497
- exit_code: 1
  program: "import std.typecons;\nimport std.math;\n/*\n Return a greatest common\
    \ divisor of two integers a and b\n    >>> greatest_common_divisor(3L, 5L)\n \
    \   1L\n    >>> greatest_common_divisor(25L, 15L)\n    5L\n    \n*/\nlong greatest_common_divisor(long\
    \ a, long b) \n{\n    if (a == 0)\n        return b;\n    if (b == 0)\n      \
    \  return a;\n    return greatest_common_divisor(b, a % b);\n}\nunittest\n{\n\
    \    alias candidate = greatest_common_divisor;\n\n    assert(candidate(3L, 7L)\
    \ == 1L);\n    assert(candidate(10L, 15L) == 5L);\n    assert(candidate(49L, 14L)\
    \ == 7L);\n    assert(candidate(144L, 60L) == 12L);\n}\nvoid main(){}"
  status: SyntaxError
  stderr: 'b''Error: cannot find source code for runtime library file \''object.d\''\n       dmd
    might not be correctly installed. Run \''dmd -man\'' for installation instructions.\nimport
    path[0] = /tmp\nFailed: ["dmd", "-unittest", "-v", "-o-", "/tmp/tmpe8uutz0o.d",
    "-I/tmp"]\n'''
  stdout: b''
  timestamp: 1659794497
- exit_code: 1
  program: "import std.typecons;\nimport std.math;\n/*\n Return a greatest common\
    \ divisor of two integers a and b\n    >>> greatest_common_divisor(3L, 5L)\n \
    \   1L\n    >>> greatest_common_divisor(25L, 15L)\n    5L\n    \n*/\nlong greatest_common_divisor(long\
    \ a, long b) \n{\n    if (a == 0 || b == 0)\n    {\n        return 0;\n    }\n\
    \    else if (a == b)\n    {\n        return a;\n    }\n    else if (a > b)\n\
    \    {\n        return greatest_common_divisor(a - b, b);\n    }\n    else\n \
    \   {\n        return greatest_common_divisor(a, b - a);\n    }\n}\nunittest\n\
    {\n    alias candidate = greatest_common_divisor;\n\n    assert(candidate(3L,\
    \ 7L) == 1L);\n    assert(candidate(10L, 15L) == 5L);\n    assert(candidate(49L,\
    \ 14L) == 7L);\n    assert(candidate(144L, 60L) == 12L);\n}\nvoid main(){}"
  status: SyntaxError
  stderr: 'b''Error: cannot find source code for runtime library file \''object.d\''\n       dmd
    might not be correctly installed. Run \''dmd -man\'' for installation instructions.\nimport
    path[0] = /tmp\nFailed: ["dmd", "-unittest", "-v", "-o-", "/tmp/tmpx4rnh5xn.d",
    "-I/tmp"]\n'''
  stdout: b''
  timestamp: 1659794497
- exit_code: 1
  program: "import std.typecons;\nimport std.math;\n/*\n Return a greatest common\
    \ divisor of two integers a and b\n    >>> greatest_common_divisor(3L, 5L)\n \
    \   1L\n    >>> greatest_common_divisor(25L, 15L)\n    5L\n    \n*/\nlong greatest_common_divisor(long\
    \ a, long b) \n{\n    if (a == 0L)\n        return b;\n    if (b == 0L)\n    \
    \    return a;\n    if (a == b)\n        return a;\n    if (a == 1L || b == 1L)\n\
    \        return 1L;\n    if (a % 2L == 0L && b % 2L == 0L)\n        return 2L\
    \ * greatest_common_divisor(a / 2L, b / 2L);\n    if (a % 2L == 0L && b % 2L !=\
    \ 0L)\n        return greatest_common_divisor(a / 2L, b);\n    if (a % 2L != 0L\
    \ && b % 2L == 0L)\n        return greatest_common_divisor(a, b / 2L);\n    return\
    \ greatest_common_divisor(abs(a - b), min(a, b));\n}\nunittest\n{\n    alias candidate\
    \ = greatest_common_divisor;\n\n    assert(candidate(3L, 7L) == 1L);\n    assert(candidate(10L,\
    \ 15L) == 5L);\n    assert(candidate(49L, 14L) == 7L);\n    assert(candidate(144L,\
    \ 60L) == 12L);\n}\nvoid main(){}"
  status: SyntaxError
  stderr: 'b''Error: cannot find source code for runtime library file \''object.d\''\n       dmd
    might not be correctly installed. Run \''dmd -man\'' for installation instructions.\nimport
    path[0] = /tmp\nFailed: ["dmd", "-unittest", "-v", "-o-", "/tmp/tmpk0hvzr40.d",
    "-I/tmp"]\n'''
  stdout: b''
  timestamp: 1659794497
- exit_code: 0
  program: "import std.typecons;\nimport std.math;\n/*\n Return a greatest common\
    \ divisor of two integers a and b\n    >>> greatest_common_divisor(3L, 5L)\n \
    \   1L\n    >>> greatest_common_divisor(25L, 15L)\n    5L\n    \n*/\nlong greatest_common_divisor(long\
    \ a, long b) \n{\n    if (a == 0L)\n        return b;\n    if (b == 0L)\n    \
    \    return a;\n    return greatest_common_divisor(b, a % b);\n}\nunittest\n{\n\
    \    alias candidate = greatest_common_divisor;\n\n    assert(candidate(3L, 7L)\
    \ == 1L);\n    assert(candidate(10L, 15L) == 5L);\n    assert(candidate(49L, 14L)\
    \ == 7L);\n    assert(candidate(144L, 60L) == 12L);\n}\nvoid main(){}"
  status: OK
  stderr: b''
  stdout: b''
- exit_code: 0
  program: "import std.typecons;\nimport std.math;\n/*\n Return a greatest common\
    \ divisor of two integers a and b\n    >>> greatest_common_divisor(3L, 5L)\n \
    \   1L\n    >>> greatest_common_divisor(25L, 15L)\n    5L\n    \n*/\nlong greatest_common_divisor(long\
    \ a, long b) \n{\n    if (a < b)\n        return greatest_common_divisor(b, a);\n\
    \    if (b == 0)\n        return a;\n    return greatest_common_divisor(b, a %\
    \ b);\n}\nunittest\n{\n    alias candidate = greatest_common_divisor;\n\n    assert(candidate(3L,\
    \ 7L) == 1L);\n    assert(candidate(10L, 15L) == 5L);\n    assert(candidate(49L,\
    \ 14L) == 7L);\n    assert(candidate(144L, 60L) == 12L);\n}\nvoid main(){}"
  status: OK
  stderr: b''
  stdout: b''
- exit_code: 0
  program: "import std.typecons;\nimport std.math;\n/*\n Return a greatest common\
    \ divisor of two integers a and b\n    >>> greatest_common_divisor(3L, 5L)\n \
    \   1L\n    >>> greatest_common_divisor(25L, 15L)\n    5L\n    \n*/\nlong greatest_common_divisor(long\
    \ a, long b) \n{\n    if (a < b) \n    {\n        return greatest_common_divisor(b,\
    \ a);\n    }\n    if (b == 0) \n    {\n        return a;\n    }\n    return greatest_common_divisor(b,\
    \ a % b);\n}\nunittest\n{\n    alias candidate = greatest_common_divisor;\n\n\
    \    assert(candidate(3L, 7L) == 1L);\n    assert(candidate(10L, 15L) == 5L);\n\
    \    assert(candidate(49L, 14L) == 7L);\n    assert(candidate(144L, 60L) == 12L);\n\
    }\nvoid main(){}"
  status: OK
  stderr: b''
  stdout: b''
- exit_code: 1
  program: "import std.typecons;\nimport std.math;\n/*\n Return a greatest common\
    \ divisor of two integers a and b\n    >>> greatest_common_divisor(3L, 5L)\n \
    \   1L\n    >>> greatest_common_divisor(25L, 15L)\n    5L\n    \n*/\nlong greatest_common_divisor(long\
    \ a, long b) \n{\n    if (b == 0)\n        return a;\n    return greatest_common_divisor(b,\
    \ a % b);\n}\nunittest\n{\n    alias candidate = greatest_common_divisor;\n\n\
    \    assert(candidate(3L, 7L) == 1L);\n    assert(candidate(10L, 15L) == 5L);\n\
    \    assert(candidate(49L, 14L) == 7L);\n    assert(candidate(144L, 60L) == 12L);\n\
    }\nvoid main(){}"
  status: SyntaxError
  stderr: 'b''Error: cannot find source code for runtime library file \''object.d\''\n       dmd
    might not be correctly installed. Run \''dmd -man\'' for installation instructions.\nimport
    path[0] = /tmp\nFailed: ["dmd", "-unittest", "-v", "-o-", "/tmp/tmpjfp9l1y3.d",
    "-I/tmp"]\n'''
  stdout: b''
  timestamp: 1659794497
- exit_code: 0
  program: "import std.typecons;\nimport std.math;\n/*\n Return a greatest common\
    \ divisor of two integers a and b\n    >>> greatest_common_divisor(3L, 5L)\n \
    \   1L\n    >>> greatest_common_divisor(25L, 15L)\n    5L\n    \n*/\nlong greatest_common_divisor(long\
    \ a, long b) \n{\n    if (a == 0L)\n        return b;\n    if (b == 0L)\n    \
    \    return a;\n    return greatest_common_divisor(b, a % b);\n}\nunittest\n{\n\
    \    alias candidate = greatest_common_divisor;\n\n    assert(candidate(3L, 7L)\
    \ == 1L);\n    assert(candidate(10L, 15L) == 5L);\n    assert(candidate(49L, 14L)\
    \ == 7L);\n    assert(candidate(144L, 60L) == 12L);\n}\nvoid main(){}"
  status: OK
  stderr: b''
  stdout: b''
- exit_code: 1
  program: "import std.typecons;\nimport std.math;\n/*\n Return a greatest common\
    \ divisor of two integers a and b\n    >>> greatest_common_divisor(3L, 5L)\n \
    \   1L\n    >>> greatest_common_divisor(25L, 15L)\n    5L\n    \n*/\nlong greatest_common_divisor(long\
    \ a, long b) \n{\n    if (b == 0)\n        return a;\n    else\n        return\
    \ greatest_common_divisor(b, a % b);\n}\nunittest\n{\n    alias candidate = greatest_common_divisor;\n\
    \n    assert(candidate(3L, 7L) == 1L);\n    assert(candidate(10L, 15L) == 5L);\n\
    \    assert(candidate(49L, 14L) == 7L);\n    assert(candidate(144L, 60L) == 12L);\n\
    }\nvoid main(){}"
  status: SyntaxError
  stderr: 'b''Error: cannot find source code for runtime library file \''object.d\''\n       dmd
    might not be correctly installed. Run \''dmd -man\'' for installation instructions.\nimport
    path[0] = /tmp\nFailed: ["dmd", "-unittest", "-v", "-o-", "/tmp/tmpd2a_90wj.d",
    "-I/tmp"]\n'''
  stdout: b''
  timestamp: 1659794497
- exit_code: 1
  program: "import std.typecons;\nimport std.math;\n/*\n Return a greatest common\
    \ divisor of two integers a and b\n    >>> greatest_common_divisor(3L, 5L)\n \
    \   1L\n    >>> greatest_common_divisor(25L, 15L)\n    5L\n    \n*/\nlong greatest_common_divisor(long\
    \ a, long b) \n{\n    if (a == 0L)\n        return b;\n    if (b == 0L)\n    \
    \    return a;\n    if (a > b)\n        return greatest_common_divisor(a % b,\
    \ b);\n    else\n        return greatest_common_divisor(a, b % a);\n}\n/*\n Return\
    \ a least common multiple of two integers a and b\n    >>> least_common_multiple(3L,\
    \ 5L)\n    15L\n    >>> least_common_multiple(25L, 15L)\n    75L\n*/\nlong least_common_multiple(long\
    \ a, long b) \n{\n    return a * b / greatest_common_divisor(a, b);\n}\n/*\n Return\
    \ a least common multiple of a list of integers\n    >>> least_common_multiple_list([3L,\
    \ 5L])\n    15L\n    >>> least_common_multiple_list([25L, 15L])\n    75L\n*/\n\
    long least_common_multiple_list(in long[] a) \n{\n    long result = a[0];\n  \
    \  foreach (i; 1 .. a.length)\n        result = least_common_multiple(result,\
    \ a[i]);\n    return result;\n}\n/*\n Return a least common multiple of a range\
    \ of integers\n    >>> least_common_multiple_range(1L, 5L)\n    60L\n    >>> least_common_multiple_range(1L,\
    \ 10L)\n    2520L\n*/\nlong least_common_multiple_range(long a, long b) \n{\n\
    \    long result = a;\n    foreach (i; a + 1 .. b + 1)\n        result = least_common_multiple(result,\
    \ i);\n    return result;\n}\n/*\n Return a list of prime numbers less than a\
    \ given integer\n    >>> prime_numbers(10L)\n    [2L, 3L, 5L, 7L]\n    >>> prime_numbers(20L)\n\
    \    [2L, 3L, 5L, 7L, 11L, 13L, 17L, 19L]\n*/\nlong[] prime_numbers(long n) \n\
    {\n    long[] result = [];\n   \nunittest\n{\n    alias candidate = greatest_common_divisor;\n\
    \n    assert(candidate(3L, 7L) == 1L);\n    assert(candidate(10L, 15L) == 5L);\n\
    \    assert(candidate(49L, 14L) == 7L);\n    assert(candidate(144L, 60L) == 12L);\n\
    }\nvoid main(){}"
  status: SyntaxError
  stderr: 'b''/tmp/tmplkkmi867.d(72): Error: found \''unittest\'' instead of statement\nFailed:
    ["dmd", "-unittest", "-v", "-o-", "/tmp/tmplkkmi867.d", "-I/tmp"]\n'''
  stdout: b''
  timestamp: 1659794497
- exit_code: 1
  program: "import std.typecons;\nimport std.math;\n/*\n Return a greatest common\
    \ divisor of two integers a and b\n    >>> greatest_common_divisor(3L, 5L)\n \
    \   1L\n    >>> greatest_common_divisor(25L, 15L)\n    5L\n    \n*/\nlong greatest_common_divisor(long\
    \ a, long b) \n{\n    while (b != 0) \n    {\n        long t = b;\n        b =\
    \ a % b;\n        a = t;\n    }\n    return a;\n}\nunittest\n{\n    alias candidate\
    \ = greatest_common_divisor;\n\n    assert(candidate(3L, 7L) == 1L);\n    assert(candidate(10L,\
    \ 15L) == 5L);\n    assert(candidate(49L, 14L) == 7L);\n    assert(candidate(144L,\
    \ 60L) == 12L);\n}\nvoid main(){}"
  status: SyntaxError
  stderr: 'b''Error: cannot find source code for runtime library file \''object.d\''\n       dmd
    might not be correctly installed. Run \''dmd -man\'' for installation instructions.\nimport
    path[0] = /tmp\nFailed: ["dmd", "-unittest", "-v", "-o-", "/tmp/tmpxppmwc1c.d",
    "-I/tmp"]\n'''
  stdout: b''
  timestamp: 1659794497
- exit_code: 1
  program: "import std.typecons;\nimport std.math;\n/*\n Return a greatest common\
    \ divisor of two integers a and b\n    >>> greatest_common_divisor(3L, 5L)\n \
    \   1L\n    >>> greatest_common_divisor(25L, 15L)\n    5L\n    \n*/\nlong greatest_common_divisor(long\
    \ a, long b) \n{\n    if (a == 0L)\n        return b;\n    if (b == 0L)\n    \
    \    return a;\n    if (a < 0L)\n        a = -a;\n    if (b < 0L)\n        b =\
    \ -b;\n    if (a < b)\n        return greatest_common_divisor(b, a);\n    return\
    \ greatest_common_divisor(b, a % b);\n}\nunittest\n{\n    alias candidate = greatest_common_divisor;\n\
    \n    assert(candidate(3L, 7L) == 1L);\n    assert(candidate(10L, 15L) == 5L);\n\
    \    assert(candidate(49L, 14L) == 7L);\n    assert(candidate(144L, 60L) == 12L);\n\
    }\nvoid main(){}"
  status: SyntaxError
  stderr: 'b''Error: cannot find source code for runtime library file \''object.d\''\n       dmd
    might not be correctly installed. Run \''dmd -man\'' for installation instructions.\nimport
    path[0] = /tmp\nFailed: ["dmd", "-unittest", "-v", "-o-", "/tmp/tmp1n405bs9.d",
    "-I/tmp"]\n'''
  stdout: b''
  timestamp: 1659794497
- exit_code: 1
  program: "import std.typecons;\nimport std.math;\n/*\n Return a greatest common\
    \ divisor of two integers a and b\n    >>> greatest_common_divisor(3L, 5L)\n \
    \   1L\n    >>> greatest_common_divisor(25L, 15L)\n    5L\n    \n*/\nlong greatest_common_divisor(long\
    \ a, long b) \n{\n    if (a == 0L) \n    {\n        return b;\n    }\n    if (b\
    \ == 0L) \n    {\n        return a;\n    }\n    return greatest_common_divisor(b,\
    \ a % b);\n}\nunittest\n{\n    alias candidate = greatest_common_divisor;\n\n\
    \    assert(candidate(3L, 7L) == 1L);\n    assert(candidate(10L, 15L) == 5L);\n\
    \    assert(candidate(49L, 14L) == 7L);\n    assert(candidate(144L, 60L) == 12L);\n\
    }\nvoid main(){}"
  status: SyntaxError
  stderr: 'b''Error: cannot find source code for runtime library file \''object.d\''\n       dmd
    might not be correctly installed. Run \''dmd -man\'' for installation instructions.\nimport
    path[0] = /tmp\nFailed: ["dmd", "-unittest", "-v", "-o-", "/tmp/tmp5ov_zpmg.d",
    "-I/tmp"]\n'''
  stdout: b''
  timestamp: 1659794497
- exit_code: 1
  program: "import std.typecons;\nimport std.math;\n/*\n Return a greatest common\
    \ divisor of two integers a and b\n    >>> greatest_common_divisor(3L, 5L)\n \
    \   1L\n    >>> greatest_common_divisor(25L, 15L)\n    5L\n    \n*/\nlong greatest_common_divisor(long\
    \ a, long b) \n{\n    if (a == 0L)\n        return b;\n    if (b == 0L)\n    \
    \    return a;\n    if (a == b)\n        return a;\n    if (a == 1L || b == 1L)\n\
    \        return 1L;\n    if (a % 2L == 0L && b % 2L == 0L)\n        return 2L\
    \ * greatest_common_divisor(a / 2L, b / 2L);\n    if (a % 2L == 0L && b % 2L !=\
    \ 0L)\n        return greatest_common_divisor(a / 2L, b);\n    if (a % 2L != 0L\
    \ && b % 2L == 0L)\n        return greatest_common_divisor(a, b / 2L);\n    if\
    \ (a > b)\n        return greatest_common_divisor((a - b) / 2L, b);\n    return\
    \ greatest_common_divisor((b - a) / 2L, a);\n}\nunittest\n{\n    alias candidate\
    \ = greatest_common_divisor;\n\n    assert(candidate(3L, 7L) == 1L);\n    assert(candidate(10L,\
    \ 15L) == 5L);\n    assert(candidate(49L, 14L) == 7L);\n    assert(candidate(144L,\
    \ 60L) == 12L);\n}\nvoid main(){}"
  status: SyntaxError
  stderr: 'b''Error: cannot find source code for runtime library file \''object.d\''\n       dmd
    might not be correctly installed. Run \''dmd -man\'' for installation instructions.\nimport
    path[0] = /tmp\nFailed: ["dmd", "-unittest", "-v", "-o-", "/tmp/tmp6nzy57d4.d",
    "-I/tmp"]\n'''
  stdout: b''
  timestamp: 1659794497
- exit_code: 0
  program: "import std.typecons;\nimport std.math;\n/*\n Return a greatest common\
    \ divisor of two integers a and b\n    >>> greatest_common_divisor(3L, 5L)\n \
    \   1L\n    >>> greatest_common_divisor(25L, 15L)\n    5L\n    \n*/\nlong greatest_common_divisor(long\
    \ a, long b) \n{\n    if (a == 0L)\n        return b;\n    if (b == 0L)\n    \
    \    return a;\n    if (a == b)\n        return a;\n    if (a == 1L || b == 1L)\n\
    \        return 1L;\n    if (a % 2L == 0L && b % 2L == 0L)\n        return 2L\
    \ * greatest_common_divisor(a / 2L, b / 2L);\n    if (a % 2L == 0L && b % 2L !=\
    \ 0L)\n        return greatest_common_divisor(a / 2L, b);\n    if (a % 2L != 0L\
    \ && b % 2L == 0L)\n        return greatest_common_divisor(a, b / 2L);\n    if\
    \ (a % 2L != 0L && b % 2L != 0L && a < b)\n        return greatest_common_divisor((b\
    \ - a) / 2L, a);\n    if (a % 2L != 0L && b % 2L != 0L && a > b)\n        return\
    \ greatest_common_divisor((a - b) / 2L, b);\n    return 0L;\n}\nunittest\n{\n\
    \    alias candidate = greatest_common_divisor;\n\n    assert(candidate(3L, 7L)\
    \ == 1L);\n    assert(candidate(10L, 15L) == 5L);\n    assert(candidate(49L, 14L)\
    \ == 7L);\n    assert(candidate(144L, 60L) == 12L);\n}\nvoid main(){}"
  status: OK
  stderr: b''
  stdout: b''
- exit_code: 0
  program: "import std.typecons;\nimport std.math;\n/*\n Return a greatest common\
    \ divisor of two integers a and b\n    >>> greatest_common_divisor(3L, 5L)\n \
    \   1L\n    >>> greatest_common_divisor(25L, 15L)\n    5L\n    \n*/\nlong greatest_common_divisor(long\
    \ a, long b) \n{\n    if (a < b)\n        return greatest_common_divisor(b, a);\n\
    \    if (b == 0)\n        return a;\n    return greatest_common_divisor(b, a %\
    \ b);\n}\nunittest\n{\n    alias candidate = greatest_common_divisor;\n\n    assert(candidate(3L,\
    \ 7L) == 1L);\n    assert(candidate(10L, 15L) == 5L);\n    assert(candidate(49L,\
    \ 14L) == 7L);\n    assert(candidate(144L, 60L) == 12L);\n}\nvoid main(){}"
  status: OK
  stderr: b''
  stdout: b''
- exit_code: 0
  program: "import std.typecons;\nimport std.math;\n/*\n Return a greatest common\
    \ divisor of two integers a and b\n    >>> greatest_common_divisor(3L, 5L)\n \
    \   1L\n    >>> greatest_common_divisor(25L, 15L)\n    5L\n    \n*/\nlong greatest_common_divisor(long\
    \ a, long b) \n{\n    if (a < b) \n    {\n        return greatest_common_divisor(b,\
    \ a);\n    }\n    if (b == 0) \n    {\n        return a;\n    }\n    return greatest_common_divisor(b,\
    \ a % b);\n}\nunittest\n{\n    alias candidate = greatest_common_divisor;\n\n\
    \    assert(candidate(3L, 7L) == 1L);\n    assert(candidate(10L, 15L) == 5L);\n\
    \    assert(candidate(49L, 14L) == 7L);\n    assert(candidate(144L, 60L) == 12L);\n\
    }\nvoid main(){}"
  status: OK
  stderr: b''
  stdout: b''
- exit_code: 0
  program: "import std.typecons;\nimport std.math;\n/*\n Return a greatest common\
    \ divisor of two integers a and b\n    >>> greatest_common_divisor(3L, 5L)\n \
    \   1L\n    >>> greatest_common_divisor(25L, 15L)\n    5L\n    \n*/\nlong greatest_common_divisor(long\
    \ a, long b) \n{\n    if (a == 0L)\n        return b;\n    if (b == 0L)\n    \
    \    return a;\n    return greatest_common_divisor(b, a % b);\n}\nunittest\n{\n\
    \    alias candidate = greatest_common_divisor;\n\n    assert(candidate(3L, 7L)\
    \ == 1L);\n    assert(candidate(10L, 15L) == 5L);\n    assert(candidate(49L, 14L)\
    \ == 7L);\n    assert(candidate(144L, 60L) == 12L);\n}\nvoid main(){}"
  status: OK
  stderr: b''
  stdout: b''
- exit_code: 1
  program: "import std.typecons;\nimport std.math;\n/*\n Return a greatest common\
    \ divisor of two integers a and b\n    >>> greatest_common_divisor(3L, 5L)\n \
    \   1L\n    >>> greatest_common_divisor(25L, 15L)\n    5L\n    \n*/\nlong greatest_common_divisor(long\
    \ a, long b) \n{\n    if (a == 0L)\n        return b;\n    if (b == 0L)\n    \
    \    return a;\n    if (a == b)\n        return a;\n    if (a == 1L || b == 1L)\n\
    \        return 1L;\n    if (a % 2L == 0L && b % 2L == 0L)\n        return 2L\
    \ * greatest_common_divisor(a / 2L, b / 2L);\n    if (a % 2L == 0L && b % 2L !=\
    \ 0L)\n        return greatest_common_divisor(a / 2L, b);\n    if (a % 2L != 0L\
    \ && b % 2L == 0L)\n        return greatest_common_divisor(a, b / 2L);\n    return\
    \ greatest_common_divisor(abs(a - b), min(a, b));\n}\nunittest\n{\n    alias candidate\
    \ = greatest_common_divisor;\n\n    assert(candidate(3L, 7L) == 1L);\n    assert(candidate(10L,\
    \ 15L) == 5L);\n    assert(candidate(49L, 14L) == 7L);\n    assert(candidate(144L,\
    \ 60L) == 12L);\n}\nvoid main(){}"
  status: SyntaxError
  stderr: 'b''Error: cannot find source code for runtime library file \''object.d\''\n       dmd
    might not be correctly installed. Run \''dmd -man\'' for installation instructions.\nimport
    path[0] = /tmp\nFailed: ["dmd", "-unittest", "-v", "-o-", "/tmp/tmpk0hvzr40.d",
    "-I/tmp"]\n'''
  stdout: b''
  timestamp: 1659794497
- exit_code: 1
  program: "import std.typecons;\nimport std.math;\n/*\n Return a greatest common\
    \ divisor of two integers a and b\n    >>> greatest_common_divisor(3L, 5L)\n \
    \   1L\n    >>> greatest_common_divisor(25L, 15L)\n    5L\n    \n*/\nlong greatest_common_divisor(long\
    \ a, long b) \n{\n    if (a == 0L) \n    {\n        return b;\n    }\n    if (b\
    \ == 0L) \n    {\n        return a;\n    }\n    return greatest_common_divisor(b,\
    \ a % b);\n}\nunittest\n{\n    alias candidate = greatest_common_divisor;\n\n\
    \    assert(candidate(3L, 7L) == 1L);\n    assert(candidate(10L, 15L) == 5L);\n\
    \    assert(candidate(49L, 14L) == 7L);\n    assert(candidate(144L, 60L) == 12L);\n\
    }\nvoid main(){}"
  status: SyntaxError
  stderr: 'b''Error: cannot find source code for runtime library file \''object.d\''\n       dmd
    might not be correctly installed. Run \''dmd -man\'' for installation instructions.\nimport
    path[0] = /tmp\nFailed: ["dmd", "-unittest", "-v", "-o-", "/tmp/tmp5ov_zpmg.d",
    "-I/tmp"]\n'''
  stdout: b''
  timestamp: 1659794497
- exit_code: 0
  program: "import std.typecons;\nimport std.math;\n/*\n Return a greatest common\
    \ divisor of two integers a and b\n    >>> greatest_common_divisor(3L, 5L)\n \
    \   1L\n    >>> greatest_common_divisor(25L, 15L)\n    5L\n    \n*/\nlong greatest_common_divisor(long\
    \ a, long b) \n{\n    if (a < b)\n        return greatest_common_divisor(b, a);\n\
    \    if (b == 0)\n        return a;\n    return greatest_common_divisor(b, a %\
    \ b);\n}\nunittest\n{\n    alias candidate = greatest_common_divisor;\n\n    assert(candidate(3L,\
    \ 7L) == 1L);\n    assert(candidate(10L, 15L) == 5L);\n    assert(candidate(49L,\
    \ 14L) == 7L);\n    assert(candidate(144L, 60L) == 12L);\n}\nvoid main(){}"
  status: OK
  stderr: b''
  stdout: b''
- exit_code: 1
  program: "import std.typecons;\nimport std.math;\n/*\n Return a greatest common\
    \ divisor of two integers a and b\n    >>> greatest_common_divisor(3L, 5L)\n \
    \   1L\n    >>> greatest_common_divisor(25L, 15L)\n    5L\n    \n*/\nlong greatest_common_divisor(long\
    \ a, long b) \n{\n    if (a < b)\n        return greatest_common_divisor(b, a);\n\
    \    if (b == 0)\n        return a;\n    return greatest_common_divisor(b, a %\
    \ b);\n}\n/*\n Return a least common multiple of two integers a and b\n    >>>\
    \ least_common_multiple(3L, 5L)\n    15L\n    >>> least_common_multiple(25L, 15L)\n\
    \    75L\n*/\nlong least_common_multiple(long a, long b) \n{\n    return a * b\
    \ / greatest_common_divisor(a, b);\n}\n/*\n Return a least common multiple of\
    \ a list of integers\n    >>> least_common_multiple_list([3L, 5L])\n    15L\n\
    \    >>> least_common_multiple_list([25L, 15L])\n    75L\n*/\nlong least_common_multiple_list(long[]\
    \ a) \n{\n    long result = a[0];\n    foreach (long i; a)\n        result = least_common_multiple(result,\
    \ i);\n    return result;\n}\n/*\n Return a greatest common divisor of a list\
    \ of integers\n    >>> greatest_common_divisor_list([3L, 5L])\n    1L\n    >>>\
    \ greatest_common_divisor_list([25L, 15L])\n    5L\n*/\nlong greatest_common_divisor_list(long[]\
    \ a) \n{\n    long result = a[0];\n    foreach (long i; a)\n        result = greatest_common_divisor(result,\
    \ i);\n    return result;\n}\n/*\n Return a greatest common divisor of a list\
    \ of integers\n    >>> greatest_common_divisor_list([3L, 5L])\n    1L\n    >>>\
    \ greatest_common_divisor_list([25L, 15L])\n    5L\n*/\nlong greatest_common_divisor_list(long[]\
    \ a) \n{\n    long result = a[0];\n    foreach (long i; a)\n        result = greatest_common_divisor(result,\
    \ i);\n    return result;\n}\n\nunittest\n{\n    alias candidate = greatest_common_divisor;\n\
    \n    assert(candidate(3L, 7L) == 1L);\n    assert(candidate(10L, 15L) == 5L);\n\
    \    assert(candidate(49L, 14L) == 7L);\n    assert(candidate(144L, 60L) == 12L);\n\
    }\nvoid main(){}"
  status: SyntaxError
  stderr: 'b''Error: cannot find source code for runtime library file \''object.d\''\n       dmd
    might not be correctly installed. Run \''dmd -man\'' for installation instructions.\nimport
    path[0] = /tmp\nFailed: ["dmd", "-unittest", "-v", "-o-", "/tmp/tmp9ohjmoez.d",
    "-I/tmp"]\n'''
  stdout: b''
  timestamp: 1659794497
- exit_code: 1
  program: "import std.typecons;\nimport std.math;\n/*\n Return a greatest common\
    \ divisor of two integers a and b\n    >>> greatest_common_divisor(3L, 5L)\n \
    \   1L\n    >>> greatest_common_divisor(25L, 15L)\n    5L\n    \n*/\nlong greatest_common_divisor(long\
    \ a, long b) \n{\n    if (a == 0L) return b;\n    if (b == 0L) return a;\n   \
    \ if (a == b) return a;\n    if (a == 1L || b == 1L) return 1L;\n    if (a % 2L\
    \ == 0L && b % 2L == 0L) return 2L * greatest_common_divisor(a / 2L, b / 2L);\n\
    \    if (a % 2L == 0L && b % 2L != 0L) return greatest_common_divisor(a / 2L,\
    \ b);\n    if (a % 2L != 0L && b % 2L == 0L) return greatest_common_divisor(a,\
    \ b / 2L);\n    return greatest_common_divisor(abs(a - b), min(a, b));\n}\nunittest\n\
    {\n    alias candidate = greatest_common_divisor;\n\n    assert(candidate(3L,\
    \ 7L) == 1L);\n    assert(candidate(10L, 15L) == 5L);\n    assert(candidate(49L,\
    \ 14L) == 7L);\n    assert(candidate(144L, 60L) == 12L);\n}\nvoid main(){}"
  status: SyntaxError
  stderr: 'b''Error: cannot find source code for runtime library file \''object.d\''\n       dmd
    might not be correctly installed. Run \''dmd -man\'' for installation instructions.\nimport
    path[0] = /tmp\nFailed: ["dmd", "-unittest", "-v", "-o-", "/tmp/tmp26qqyfdm.d",
    "-I/tmp"]\n'''
  stdout: b''
  timestamp: 1659794497
- exit_code: 1
  program: "import std.typecons;\nimport std.math;\n/*\n Return a greatest common\
    \ divisor of two integers a and b\n    >>> greatest_common_divisor(3L, 5L)\n \
    \   1L\n    >>> greatest_common_divisor(25L, 15L)\n    5L\n    \n*/\nlong greatest_common_divisor(long\
    \ a, long b) \n{\n    if (a == 0L)\n        return b;\n    if (b == 0L)\n    \
    \    return a;\n    if (a > b)\n        return greatest_common_divisor(a % b,\
    \ b);\n    else\n        return greatest_common_divisor(a, b % a);\n}\n/*\n Return\
    \ a least common multiple of two integers a and b\n    >>> least_common_multiple(3L,\
    \ 5L)\n    15L\n    >>> least_common_multiple(25L, 15L)\n    75L\n*/\nlong least_common_multiple(long\
    \ a, long b) \n{\n    return a * b / greatest_common_divisor(a, b);\n}\n/*\n Return\
    \ a least common multiple of a list of integers\n    >>> least_common_multiple_of_list([3L,\
    \ 5L])\n    15L\n    >>> least_common_multiple_of_list([25L, 15L])\n    75L\n\
    */\nlong least_common_multiple_of_list(long[] a) \n{\n    long result = 1L;\n\
    \    foreach (i; a)\n        result = least_common_multiple(result, i);\n    return\
    \ result;\n}\n/*\n Return a least common multiple of a list of integers\n    >>>\
    \ least_common_multiple_of_list([3L, 5L])\n    15L\n    >>> least_common_multiple_of_list([25L,\
    \ 15L])\n    75L\n*/\nlong least_common_multiple_of_list(long[] a) \n{\n    long\
    \ result = 1L;\n    foreach (i; a)\n        result = least_common_multiple(result,\
    \ i);\n    return result;\n}\n/*\n Return a least common multiple of a list of\
    \ integers\n    >>> least_common_multiple_of_list([3L, 5L])\n    15L\n    >>>\
    \ least_common_multiple_of_list([25L, 15L])\n    75L\n*/\nlong least_common_multiple_of_list(long[]\
    \ a) \n{\n    long result = 1L;\n    foreach (i; a)\n        result = least_common_multiple(\n\
    unittest\n{\n    alias candidate = greatest_common_divisor;\n\n    assert(candidate(3L,\
    \ 7L) == 1L);\n    assert(candidate(10L, 15L) == 5L);\n    assert(candidate(49L,\
    \ 14L) == 7L);\n    assert(candidate(144L, 60L) == 12L);\n}\nvoid main(){}"
  status: SyntaxError
  stderr: 'b''/tmp/tmp25mrg2pm.d(73): Error: expression expected, not \''unittest\''\n/tmp/tmp25mrg2pm.d(74):
    Error: found \''{\'' when expecting \'',\''\n/tmp/tmp25mrg2pm.d(75): Error: expression
    expected, not \''alias\''\n/tmp/tmp25mrg2pm.d(75): Error: found \''candidate\''
    when expecting \'',\''\n/tmp/tmp25mrg2pm.d(75): Error: expression expected, not
    \''=\''\n/tmp/tmp25mrg2pm.d(75): Error: found \''greatest_common_divisor\'' when
    expecting \'',\''\n/tmp/tmp25mrg2pm.d(75): Error: expression expected, not \'';\''\n/tmp/tmp25mrg2pm.d(77):
    Error: found \''assert\'' when expecting \'',\''\n/tmp/tmp25mrg2pm.d(77): Error:
    found \'';\'' when expecting \'',\''\n/tmp/tmp25mrg2pm.d(78): Error: found \'';\''
    when expecting \'',\''\n/tmp/tmp25mrg2pm.d(79): Error: found \'';\'' when expecting
    \'',\''\n/tmp/tmp25mrg2pm.d(80): Error: found \'';\'' when expecting \'',\''\n/tmp/tmp25mrg2pm.d(81):
    Error: expression expected, not \''}\''\n/tmp/tmp25mrg2pm.d(82): Error: found
    \''void\'' when expecting \'',\''\n/tmp/tmp25mrg2pm.d(82): Error: found \''{\''
    when expecting \'',\''\n/tmp/tmp25mrg2pm.d(82): Error: expression expected, not
    \''}\''\n/tmp/tmp25mrg2pm.d(82): Error: found \''EOF\'' when expecting \'',\''\n/tmp/tmp25mrg2pm.d(82):
    Error: found \''EOF\'' when expecting \'')\''\n/tmp/tmp25mrg2pm.d(82): Error:
    found \''EOF\'' when expecting \'';\'' following statement\n/tmp/tmp25mrg2pm.d(82):
    Error: found \''EOF\'' when expecting \''}\'' following compound statement\nFailed:
    ["dmd", "-unittest", "-v", "-o-", "/tmp/tmp25mrg2pm.d", "-I/tmp"]\n'''
  stdout: b''
  timestamp: 1659794497
- exit_code: 1
  program: "import std.typecons;\nimport std.math;\n/*\n Return a greatest common\
    \ divisor of two integers a and b\n    >>> greatest_common_divisor(3L, 5L)\n \
    \   1L\n    >>> greatest_common_divisor(25L, 15L)\n    5L\n    \n*/\nlong greatest_common_divisor(long\
    \ a, long b) \n{\n    if (a == 0L) \n    {\n        return b;\n    }\n    if (b\
    \ == 0L) \n    {\n        return a;\n    }\n    if (a == b) \n    {\n        return\
    \ a;\n    }\n    if (a == 1L || b == 1L) \n    {\n        return 1L;\n    }\n\
    \    if (a % 2L == 0L && b % 2L == 0L) \n    {\n        return 2L * greatest_common_divisor(a\
    \ / 2L, b / 2L);\n    }\n    if (a % 2L == 0L) \n    {\n        return greatest_common_divisor(a\
    \ / 2L, b);\n    }\n    if (b % 2L == 0L) \n    {\n        return greatest_common_divisor(a,\
    \ b / 2L);\n    }\n    return greatest_common_divisor(abs(a - b), min(a, b));\n\
    }\n/*\n Return a least common multiple of two integers a and b\n    >>> least_common_multiple(3L,\
    \ 5L)\n    15L\n    >>> least_common_multiple(25L, 15L)\n    75L\n*/\nlong least_common_multiple(long\
    \ a, long b) \n{\n    return a * b / greatest_common_divisor(a, b);\n}\n/*\n Return\
    \ a least common multiple of a list of integers\n    >>> least_common_multiple_list([3L,\
    \ 5L, 7L])\n    105L\n    >>> least_common_multiple_list([25L, 15L, 75L])\n  \
    \  75L\n*/\nlong least_common_multiple_list(long[] a) \n{\n    long result = 1L;\n\
    \    foreach (i; a) \n    {\n        result = least_common_multiple(result, i);\n\
    \    }\n    return result;\n}\n/*\n Return a greatest common divisor of a list\
    \ of integers\n    >>> greatest_common_divisor_list([3L, 5L, 7L])\n    1L\n  \
    \  >>> greatest_common_divisor_list([\nunittest\n{\n    alias candidate = greatest_common_divisor;\n\
    \n    assert(candidate(3L, 7L) == 1L);\n    assert(candidate(10L, 15L) == 5L);\n\
    \    assert(candidate(49L, 14L) == 7L);\n    assert(candidate(144L, 60L) == 12L);\n\
    }\nvoid main(){}"
  status: SyntaxError
  stderr: 'b''/tmp/tmp2pw462mz.d(70): Error: unterminated /* */ comment\nFailed: ["dmd",
    "-unittest", "-v", "-o-", "/tmp/tmp2pw462mz.d", "-I/tmp"]\n'''
  stdout: b''
  timestamp: 1659794497
- exit_code: 0
  program: "import std.typecons;\nimport std.math;\n/*\n Return a greatest common\
    \ divisor of two integers a and b\n    >>> greatest_common_divisor(3L, 5L)\n \
    \   1L\n    >>> greatest_common_divisor(25L, 15L)\n    5L\n    \n*/\nlong greatest_common_divisor(long\
    \ a, long b) \n{\n    if (a == 0L)\n        return b;\n    if (b == 0L)\n    \
    \    return a;\n    return greatest_common_divisor(b, a % b);\n}\nunittest\n{\n\
    \    alias candidate = greatest_common_divisor;\n\n    assert(candidate(3L, 7L)\
    \ == 1L);\n    assert(candidate(10L, 15L) == 5L);\n    assert(candidate(49L, 14L)\
    \ == 7L);\n    assert(candidate(144L, 60L) == 12L);\n}\nvoid main(){}"
  status: OK
  stderr: b''
  stdout: b''
- exit_code: 1
  program: "import std.typecons;\nimport std.math;\n/*\n Return a greatest common\
    \ divisor of two integers a and b\n    >>> greatest_common_divisor(3L, 5L)\n \
    \   1L\n    >>> greatest_common_divisor(25L, 15L)\n    5L\n    \n*/\nlong greatest_common_divisor(long\
    \ a, long b) \n{\n    while (b != 0) {\n        long t = b;\n        b = a % b;\n\
    \        a = t;\n    }\n    return a;\n}\nunittest\n{\n    alias candidate = greatest_common_divisor;\n\
    \n    assert(candidate(3L, 7L) == 1L);\n    assert(candidate(10L, 15L) == 5L);\n\
    \    assert(candidate(49L, 14L) == 7L);\n    assert(candidate(144L, 60L) == 12L);\n\
    }\nvoid main(){}"
  status: SyntaxError
  stderr: 'b''Error: cannot find source code for runtime library file \''object.d\''\n       dmd
    might not be correctly installed. Run \''dmd -man\'' for installation instructions.\nimport
    path[0] = /tmp\nFailed: ["dmd", "-unittest", "-v", "-o-", "/tmp/tmpsufqk2py.d",
    "-I/tmp"]\n'''
  stdout: b''
  timestamp: 1659794497
- exit_code: 0
  program: "import std.typecons;\nimport std.math;\n/*\n Return a greatest common\
    \ divisor of two integers a and b\n    >>> greatest_common_divisor(3L, 5L)\n \
    \   1L\n    >>> greatest_common_divisor(25L, 15L)\n    5L\n    \n*/\nlong greatest_common_divisor(long\
    \ a, long b) \n{\n    if (a == 0L)\n        return b;\n    if (b == 0L)\n    \
    \    return a;\n    return greatest_common_divisor(b, a % b);\n}\nunittest\n{\n\
    \    alias candidate = greatest_common_divisor;\n\n    assert(candidate(3L, 7L)\
    \ == 1L);\n    assert(candidate(10L, 15L) == 5L);\n    assert(candidate(49L, 14L)\
    \ == 7L);\n    assert(candidate(144L, 60L) == 12L);\n}\nvoid main(){}"
  status: OK
  stderr: b''
  stdout: b''
- exit_code: 1
  program: "import std.typecons;\nimport std.math;\n/*\n Return a greatest common\
    \ divisor of two integers a and b\n    >>> greatest_common_divisor(3L, 5L)\n \
    \   1L\n    >>> greatest_common_divisor(25L, 15L)\n    5L\n    \n*/\nlong greatest_common_divisor(long\
    \ a, long b) \n{\n    while (b != 0) {\n        long t = b;\n        b = a % b;\n\
    \        a = t;\n    }\n    return a;\n}\nunittest\n{\n    alias candidate = greatest_common_divisor;\n\
    \n    assert(candidate(3L, 7L) == 1L);\n    assert(candidate(10L, 15L) == 5L);\n\
    \    assert(candidate(49L, 14L) == 7L);\n    assert(candidate(144L, 60L) == 12L);\n\
    }\nvoid main(){}"
  status: SyntaxError
  stderr: 'b''Error: cannot find source code for runtime library file \''object.d\''\n       dmd
    might not be correctly installed. Run \''dmd -man\'' for installation instructions.\nimport
    path[0] = /tmp\nFailed: ["dmd", "-unittest", "-v", "-o-", "/tmp/tmpsufqk2py.d",
    "-I/tmp"]\n'''
  stdout: b''
  timestamp: 1659794497
- exit_code: 1
  program: "import std.typecons;\nimport std.math;\n/*\n Return a greatest common\
    \ divisor of two integers a and b\n    >>> greatest_common_divisor(3L, 5L)\n \
    \   1L\n    >>> greatest_common_divisor(25L, 15L)\n    5L\n    \n*/\nlong greatest_common_divisor(long\
    \ a, long b) \n{\n    if (a == 0)\n        return b;\n    if (b == 0)\n      \
    \  return a;\n    if (a == b)\n        return a;\n    if (a == 1 || b == 1)\n\
    \        return 1;\n    if ((a & 1) == 0)\n        return (b & 1) != 0 ? greatest_common_divisor(a\
    \ >> 1, b) : greatest_common_divisor(a >> 1, b >> 1) << 1;\n    if ((b & 1) ==\
    \ 0)\n        return greatest_common_divisor(a, b >> 1);\n    if (a > b)\n   \
    \     return greatest_common_divisor((a - b) >> 1, b);\n    return greatest_common_divisor((b\
    \ - a) >> 1, a);\n}\nunittest\n{\n    alias candidate = greatest_common_divisor;\n\
    \n    assert(candidate(3L, 7L) == 1L);\n    assert(candidate(10L, 15L) == 5L);\n\
    \    assert(candidate(49L, 14L) == 7L);\n    assert(candidate(144L, 60L) == 12L);\n\
    }\nvoid main(){}"
  status: SyntaxError
  stderr: 'b''Error: cannot find source code for runtime library file \''object.d\''\n       dmd
    might not be correctly installed. Run \''dmd -man\'' for installation instructions.\nimport
    path[0] = /tmp\nFailed: ["dmd", "-unittest", "-v", "-o-", "/tmp/tmp01xcvsha.d",
    "-I/tmp"]\n'''
  stdout: b''
  timestamp: 1659794497
- exit_code: 1
  program: "import std.typecons;\nimport std.math;\n/*\n Return a greatest common\
    \ divisor of two integers a and b\n    >>> greatest_common_divisor(3L, 5L)\n \
    \   1L\n    >>> greatest_common_divisor(25L, 15L)\n    5L\n    \n*/\nlong greatest_common_divisor(long\
    \ a, long b) \n{\n    if (a == 0L)\n        return b;\n    if (b == 0L)\n    \
    \    return a;\n    return greatest_common_divisor(b, a % b);\n}\n/*\n Return\
    \ a least common multiple of two integers a and b\n    >>> least_common_multiple(3L,\
    \ 5L)\n    15L\n    >>> least_common_multiple(25L, 15L)\n    75L\n*/\nlong least_common_multiple(long\
    \ a, long b) \n{\n    return (a * b) / greatest_common_divisor(a, b);\n}\n/*\n\
    \ Return a least common multiple of a sequence of integers\n    >>> least_common_multiple_of_sequence([3L,\
    \ 5L])\n    15L\n    >>> least_common_multiple_of_sequence([25L, 15L])\n    75L\n\
    */\nlong least_common_multiple_of_sequence(long[] sequence) \n{\n    if (sequence.length\
    \ == 0L)\n        return 1L;\n    if (sequence.length == 1L)\n        return sequence[0L];\n\
    \    return least_common_multiple(sequence[0L], least_common_multiple_of_sequence(sequence[1L..$]));\n\
    }\n/*\n Return a least common multiple of a sequence of integers\n    >>> least_common_multiple_of_sequence([3L,\
    \ 5L])\n    15L\n    >>> least_common_multiple_of_sequence([25L, 15L])\n    75L\n\
    */\nlong least_common_multiple_of_sequence(long[] sequence) \n{\n    if (sequence.length\
    \ == 0L)\n        return 1L;\n    if (sequence.length == 1L)\n        return sequence[0L];\n\
    \    return least_common_multiple(sequence[0L], least_common_multiple_of_sequence(sequence[1L..$]));\n\
    }\n/*\n Return a least common multiple of a sequence of integers\n    >>> least_common_multiple_of_sequence([3L,\
    \ 5L])\n    15L\n    >>> least_common_multiple_of_sequence([25L, 15L])\n    75L\n\
    */\nlong least_common_multiple_\nunittest\n{\n    alias candidate = greatest_common_divisor;\n\
    \n    assert(candidate(3L, 7L) == 1L);\n    assert(candidate(10L, 15L) == 5L);\n\
    \    assert(candidate(49L, 14L) == 7L);\n    assert(candidate(144L, 60L) == 12L);\n\
    }\nvoid main(){}"
  status: SyntaxError
  stderr: 'b''/tmp/tmpxtdzr6ho.d(68): Error: semicolon expected, not \''unittest\''\nFailed:
    ["dmd", "-unittest", "-v", "-o-", "/tmp/tmpxtdzr6ho.d", "-I/tmp"]\n'''
  stdout: b''
  timestamp: 1659794497
- exit_code: 0
  program: "import std.typecons;\nimport std.math;\n/*\n Return a greatest common\
    \ divisor of two integers a and b\n    >>> greatest_common_divisor(3L, 5L)\n \
    \   1L\n    >>> greatest_common_divisor(25L, 15L)\n    5L\n    \n*/\nlong greatest_common_divisor(long\
    \ a, long b) \n{\n    if (a == 0L)\n        return b;\n    if (b == 0L)\n    \
    \    return a;\n    return greatest_common_divisor(b, a % b);\n}\nunittest\n{\n\
    \    alias candidate = greatest_common_divisor;\n\n    assert(candidate(3L, 7L)\
    \ == 1L);\n    assert(candidate(10L, 15L) == 5L);\n    assert(candidate(49L, 14L)\
    \ == 7L);\n    assert(candidate(144L, 60L) == 12L);\n}\nvoid main(){}"
  status: OK
  stderr: b''
  stdout: b''
- exit_code: 0
  program: "import std.typecons;\nimport std.math;\n/*\n Return a greatest common\
    \ divisor of two integers a and b\n    >>> greatest_common_divisor(3L, 5L)\n \
    \   1L\n    >>> greatest_common_divisor(25L, 15L)\n    5L\n    \n*/\nlong greatest_common_divisor(long\
    \ a, long b) \n{\n    if (a == 0L)\n        return b;\n    if (b == 0L)\n    \
    \    return a;\n    if (a == b)\n        return a;\n    if (a > b)\n        return\
    \ greatest_common_divisor(a - b, b);\n    return greatest_common_divisor(a, b\
    \ - a);\n}\nunittest\n{\n    alias candidate = greatest_common_divisor;\n\n  \
    \  assert(candidate(3L, 7L) == 1L);\n    assert(candidate(10L, 15L) == 5L);\n\
    \    assert(candidate(49L, 14L) == 7L);\n    assert(candidate(144L, 60L) == 12L);\n\
    }\nvoid main(){}"
  status: OK
  stderr: b''
  stdout: b''
- exit_code: 1
  program: "import std.typecons;\nimport std.math;\n/*\n Return a greatest common\
    \ divisor of two integers a and b\n    >>> greatest_common_divisor(3L, 5L)\n \
    \   1L\n    >>> greatest_common_divisor(25L, 15L)\n    5L\n    \n*/\nlong greatest_common_divisor(long\
    \ a, long b) \n{\n    if (a == 0)\n        return b;\n    if (b == 0)\n      \
    \  return a;\n    if (a == b)\n        return a;\n    if (a == 1 || b == 1)\n\
    \        return 1;\n    if ((a & 1) == 0)\n        return (b & 1) != 0 ? greatest_common_divisor(a\
    \ >> 1, b) : (greatest_common_divisor(a >> 1, b) << 1);\n    if ((b & 1) == 0)\n\
    \        return greatest_common_divisor(a, b >> 1);\n    if (a > b)\n        return\
    \ greatest_common_divisor((a - b) >> 1, b);\n    return greatest_common_divisor((b\
    \ - a) >> 1, a);\n}\nunittest\n{\n    alias candidate = greatest_common_divisor;\n\
    \n    assert(candidate(3L, 7L) == 1L);\n    assert(candidate(10L, 15L) == 5L);\n\
    \    assert(candidate(49L, 14L) == 7L);\n    assert(candidate(144L, 60L) == 12L);\n\
    }\nvoid main(){}"
  status: Exception
  stderr: 'b''core.exception.AssertError@/tmp/tmp801v4hqy.d(36): unittest failure\n----------------\n??:?
    _d_unittestp [0x427dfd]\n??:? void tmp801v4hqy.__unittest_L29_C1() [0x427b6b]\n??:?
    void tmp801v4hqy.__modtest() [0x427b80]\n??:? int core.runtime.runModuleUnitTests().__foreachbody2(object.ModuleInfo*)
    [0x42bb23]\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)).__lambda2(immutable(object.ModuleInfo*))
    [0x42a9b6]\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))).__foreachbody2(ref
    rt.sections_elf_shared.DSO) [0x42fb49]\n??:? int rt.sections_elf_shared.DSO.opApply(scope
    int delegate(ref rt.sections_elf_shared.DSO)) [0x42fff8]\n??:? int rt.minfo.moduleinfos_apply(scope
    int delegate(immutable(object.ModuleInfo*))) [0x42fad5]\n??:? int object.ModuleInfo.opApply(scope
    int delegate(object.ModuleInfo*)) [0x42a98d]\n??:? runModuleUnitTests [0x42b8f9]\n??:?
    void rt.dmain2._d_run_main(int, char**, extern (C) int function(char[][])*).runAll()
    [0x42824c]\n??:? void rt.dmain2._d_run_main(int, char**, extern (C) int function(char[][])*).tryExec(scope
    void delegate()) [0x4281d3]\n??:? _d_run_main [0x42813e]\n??:? main [0x427b93]\n??:?
    __libc_start_main [0xf44a3554]\n1/1 unittests FAILED\n'''
  stdout: b''
- exit_code: 1
  program: "import std.typecons;\nimport std.math;\n/*\n Return a greatest common\
    \ divisor of two integers a and b\n    >>> greatest_common_divisor(3L, 5L)\n \
    \   1L\n    >>> greatest_common_divisor(25L, 15L)\n    5L\n    \n*/\nlong greatest_common_divisor(long\
    \ a, long b) \n{\n    long c;\n    while (a != 0) {\n        c = a;\n        a\
    \ = b % a;\n        b = c;\n    }\n    return b;\n}\nunittest\n{\n    alias candidate\
    \ = greatest_common_divisor;\n\n    assert(candidate(3L, 7L) == 1L);\n    assert(candidate(10L,\
    \ 15L) == 5L);\n    assert(candidate(49L, 14L) == 7L);\n    assert(candidate(144L,\
    \ 60L) == 12L);\n}\nvoid main(){}"
  status: SyntaxError
  stderr: 'b''Error: cannot find source code for runtime library file \''object.d\''\n       dmd
    might not be correctly installed. Run \''dmd -man\'' for installation instructions.\nimport
    path[0] = /tmp\nFailed: ["dmd", "-unittest", "-v", "-o-", "/tmp/tmpwhaxk_oj.d",
    "-I/tmp"]\n'''
  stdout: b''
  timestamp: 1659794497
- exit_code: 1
  program: "import std.typecons;\nimport std.math;\n/*\n Return a greatest common\
    \ divisor of two integers a and b\n    >>> greatest_common_divisor(3L, 5L)\n \
    \   1L\n    >>> greatest_common_divisor(25L, 15L)\n    5L\n    \n*/\nlong greatest_common_divisor(long\
    \ a, long b) \n{\n    if (a == 0)\n        return b;\n    if (b == 0)\n      \
    \  return a;\n    if (a < 0)\n        a = -a;\n    if (b < 0)\n        b = -b;\n\
    \    while (a != b)\n    {\n        if (a > b)\n            a -= b;\n        else\n\
    \            b -= a;\n    }\n    return a;\n}\nunittest\n{\n    alias candidate\
    \ = greatest_common_divisor;\n\n    assert(candidate(3L, 7L) == 1L);\n    assert(candidate(10L,\
    \ 15L) == 5L);\n    assert(candidate(49L, 14L) == 7L);\n    assert(candidate(144L,\
    \ 60L) == 12L);\n}\nvoid main(){}"
  status: SyntaxError
  stderr: 'b''Error: cannot find source code for runtime library file \''object.d\''\n       dmd
    might not be correctly installed. Run \''dmd -man\'' for installation instructions.\nimport
    path[0] = /tmp\nFailed: ["dmd", "-unittest", "-v", "-o-", "/tmp/tmptweh6df5.d",
    "-I/tmp"]\n'''
  stdout: b''
  timestamp: 1659794497
- exit_code: 1
  program: "import std.typecons;\nimport std.math;\n/*\n Return a greatest common\
    \ divisor of two integers a and b\n    >>> greatest_common_divisor(3L, 5L)\n \
    \   1L\n    >>> greatest_common_divisor(25L, 15L)\n    5L\n    \n*/\nlong greatest_common_divisor(long\
    \ a, long b) \n{\n    if (a == 0L)\n        return b;\n    if (b == 0L)\n    \
    \    return a;\n    if (a == b)\n        return a;\n    if (a == 1L || b == 1L)\n\
    \        return 1L;\n    if (a % 2L == 0L && b % 2L == 0L)\n        return 2L\
    \ * greatest_common_divisor(a / 2L, b / 2L);\n    if (a % 2L == 0L && b % 2L !=\
    \ 0L)\n        return greatest_common_divisor(a / 2L, b);\n    if (a % 2L != 0L\
    \ && b % 2L == 0L)\n        return greatest_common_divisor(a, b / 2L);\n    if\
    \ (a > b)\n        return greatest_common_divisor((a - b) / 2L, b);\n    return\
    \ greatest_common_divisor((b - a) / 2L, a);\n}\nunittest\n{\n    alias candidate\
    \ = greatest_common_divisor;\n\n    assert(candidate(3L, 7L) == 1L);\n    assert(candidate(10L,\
    \ 15L) == 5L);\n    assert(candidate(49L, 14L) == 7L);\n    assert(candidate(144L,\
    \ 60L) == 12L);\n}\nvoid main(){}"
  status: SyntaxError
  stderr: 'b''Error: cannot find source code for runtime library file \''object.d\''\n       dmd
    might not be correctly installed. Run \''dmd -man\'' for installation instructions.\nimport
    path[0] = /tmp\nFailed: ["dmd", "-unittest", "-v", "-o-", "/tmp/tmp6nzy57d4.d",
    "-I/tmp"]\n'''
  stdout: b''
  timestamp: 1659794497
- exit_code: 0
  program: "import std.typecons;\nimport std.math;\n/*\n Return a greatest common\
    \ divisor of two integers a and b\n    >>> greatest_common_divisor(3L, 5L)\n \
    \   1L\n    >>> greatest_common_divisor(25L, 15L)\n    5L\n    \n*/\nlong greatest_common_divisor(long\
    \ a, long b) \n{\n    if (a == 0L)\n        return b;\n    if (b == 0L)\n    \
    \    return a;\n    if (a == b)\n        return a;\n    if (a == 1L || b == 1L)\n\
    \        return 1L;\n    if (a % 2L == 0L && b % 2L == 0L)\n        return 2L\
    \ * greatest_common_divisor(a / 2L, b / 2L);\n    if (a % 2L == 0L && b % 2L !=\
    \ 0L)\n        return greatest_common_divisor(a / 2L, b);\n    if (a % 2L != 0L\
    \ && b % 2L == 0L)\n        return greatest_common_divisor(a, b / 2L);\n    if\
    \ (a % 2L != 0L && b % 2L != 0L && a < b)\n        return greatest_common_divisor((b\
    \ - a) / 2L, a);\n    if (a % 2L != 0L && b % 2L != 0L && a > b)\n        return\
    \ greatest_common_divisor((a - b) / 2L, b);\n    return 0L;\n}\nunittest\n{\n\
    \    alias candidate = greatest_common_divisor;\n\n    assert(candidate(3L, 7L)\
    \ == 1L);\n    assert(candidate(10L, 15L) == 5L);\n    assert(candidate(49L, 14L)\
    \ == 7L);\n    assert(candidate(144L, 60L) == 12L);\n}\nvoid main(){}"
  status: OK
  stderr: b''
  stdout: b''
- exit_code: 0
  program: "import std.typecons;\nimport std.math;\n/*\n Return a greatest common\
    \ divisor of two integers a and b\n    >>> greatest_common_divisor(3L, 5L)\n \
    \   1L\n    >>> greatest_common_divisor(25L, 15L)\n    5L\n    \n*/\nlong greatest_common_divisor(long\
    \ a, long b) \n{\n    if (a == 0L)\n        return b;\n    if (b == 0L)\n    \
    \    return a;\n    return greatest_common_divisor(b, a % b);\n}\nunittest\n{\n\
    \    alias candidate = greatest_common_divisor;\n\n    assert(candidate(3L, 7L)\
    \ == 1L);\n    assert(candidate(10L, 15L) == 5L);\n    assert(candidate(49L, 14L)\
    \ == 7L);\n    assert(candidate(144L, 60L) == 12L);\n}\nvoid main(){}"
  status: OK
  stderr: b''
  stdout: b''
- exit_code: 1
  program: "import std.typecons;\nimport std.math;\n/*\n Return a greatest common\
    \ divisor of two integers a and b\n    >>> greatest_common_divisor(3L, 5L)\n \
    \   1L\n    >>> greatest_common_divisor(25L, 15L)\n    5L\n    \n*/\nlong greatest_common_divisor(long\
    \ a, long b) \n{\n    if (a == 0L)\n        return b;\n    if (b == 0L)\n    \
    \    return a;\n    return greatest_common_divisor(b, a % b);\n}\n/*\n Return\
    \ a least common multiple of two integers a and b\n    >>> least_common_multiple(3L,\
    \ 5L)\n    15L\n    >>> least_common_multiple(25L, 15L)\n    75L\n    \n*/\nlong\
    \ least_common_multiple(long a, long b) \n{\n    return a * b / greatest_common_divisor(a,\
    \ b);\n}\n/*\n Return a least common multiple of a list of integers\n    >>> least_common_multiple_list([3L,\
    \ 5L])\n    15L\n    >>> least_common_multiple_list([25L, 15L])\n    75L\n   \
    \ >>> least_common_multiple_list([25L, 15L, 2L])\n    150L\n    \n*/\nlong least_common_multiple_list(long[]\
    \ a) \n{\n    long lcm = 1L;\n    foreach (i; a)\n        lcm = least_common_multiple(lcm,\
    \ i);\n    return lcm;\n}\n/*\n Return a least common multiple of a list of integers\n\
    \    >>> least_common_multiple_list([3L, 5L])\n    15L\n    >>> least_common_multiple_list([25L,\
    \ 15L])\n    75L\n    >>> least_common_multiple_list([25L, 15L, 2L])\n    150L\n\
    \    \n*/\nlong least_common_multiple_list(long[] a) \n{\n    long lcm = 1L;\n\
    \    foreach (i; a)\n        lcm = least_common_multiple(lcm, i);\n    return\
    \ lcm;\n}\n/*\n Return a least common multiple of a list of integers\n    >>>\
    \ least_common_multiple_list([3L, 5L])\n    15L\n    >>> least_common_multiple_list([25L,\
    \ 15L])\n    75L\n    >>> least_common_multiple_list([25L, 15L, 2L])\n    150L\n\
    \    \n*/\nlong\nunittest\n{\n    alias candidate = greatest_common_divisor;\n\
    \n    assert(candidate(3L, 7L) == 1L);\n    assert(candidate(10L, 15L) == 5L);\n\
    \    assert(candidate(49L, 14L) == 7L);\n    assert(candidate(144L, 60L) == 12L);\n\
    }\nvoid main(){}"
  status: SyntaxError
  stderr: 'b''/tmp/tmpniasi8j8.d(76): Error: no identifier for declarator long\nFailed:
    ["dmd", "-unittest", "-v", "-o-", "/tmp/tmpniasi8j8.d", "-I/tmp"]\n'''
  stdout: b''
  timestamp: 1659794497
- exit_code: 1
  program: "import std.typecons;\nimport std.math;\n/*\n Return a greatest common\
    \ divisor of two integers a and b\n    >>> greatest_common_divisor(3L, 5L)\n \
    \   1L\n    >>> greatest_common_divisor(25L, 15L)\n    5L\n    \n*/\nlong greatest_common_divisor(long\
    \ a, long b) \n{\n    if (a == 0L)\n        return b;\n    else if (b == 0L)\n\
    \        return a;\n    else\n        return greatest_common_divisor(b, a % b);\n\
    }\nunittest\n{\n    alias candidate = greatest_common_divisor;\n\n    assert(candidate(3L,\
    \ 7L) == 1L);\n    assert(candidate(10L, 15L) == 5L);\n    assert(candidate(49L,\
    \ 14L) == 7L);\n    assert(candidate(144L, 60L) == 12L);\n}\nvoid main(){}"
  status: SyntaxError
  stderr: 'b''Error: cannot find source code for runtime library file \''object.d\''\n       dmd
    might not be correctly installed. Run \''dmd -man\'' for installation instructions.\nimport
    path[0] = /tmp\nFailed: ["dmd", "-unittest", "-v", "-o-", "/tmp/tmprikuhc0p.d",
    "-I/tmp"]\n'''
  stdout: b''
  timestamp: 1659794497
- exit_code: 1
  program: "import std.typecons;\nimport std.math;\n/*\n Return a greatest common\
    \ divisor of two integers a and b\n    >>> greatest_common_divisor(3L, 5L)\n \
    \   1L\n    >>> greatest_common_divisor(25L, 15L)\n    5L\n    \n*/\nlong greatest_common_divisor(long\
    \ a, long b) \n{\n    return b == 0 ? a : greatest_common_divisor(b, a % b);\n\
    }\nunittest\n{\n    alias candidate = greatest_common_divisor;\n\n    assert(candidate(3L,\
    \ 7L) == 1L);\n    assert(candidate(10L, 15L) == 5L);\n    assert(candidate(49L,\
    \ 14L) == 7L);\n    assert(candidate(144L, 60L) == 12L);\n}\nvoid main(){}"
  status: SyntaxError
  stderr: 'b''Error: cannot find source code for runtime library file \''object.d\''\n       dmd
    might not be correctly installed. Run \''dmd -man\'' for installation instructions.\nimport
    path[0] = /tmp\nFailed: ["dmd", "-unittest", "-v", "-o-", "/tmp/tmp8uif3rxd.d",
    "-I/tmp"]\n'''
  stdout: b''
  timestamp: 1659794497
- exit_code: 1
  program: "import std.typecons;\nimport std.math;\n/*\n Return a greatest common\
    \ divisor of two integers a and b\n    >>> greatest_common_divisor(3L, 5L)\n \
    \   1L\n    >>> greatest_common_divisor(25L, 15L)\n    5L\n    \n*/\nlong greatest_common_divisor(long\
    \ a, long b) \n{\n    if (a == 0L)\n        return b;\n    else if (b == 0L)\n\
    \        return a;\n    else\n        return greatest_common_divisor(b, a % b);\n\
    }\nunittest\n{\n    alias candidate = greatest_common_divisor;\n\n    assert(candidate(3L,\
    \ 7L) == 1L);\n    assert(candidate(10L, 15L) == 5L);\n    assert(candidate(49L,\
    \ 14L) == 7L);\n    assert(candidate(144L, 60L) == 12L);\n}\nvoid main(){}"
  status: SyntaxError
  stderr: 'b''Error: cannot find source code for runtime library file \''object.d\''\n       dmd
    might not be correctly installed. Run \''dmd -man\'' for installation instructions.\nimport
    path[0] = /tmp\nFailed: ["dmd", "-unittest", "-v", "-o-", "/tmp/tmprikuhc0p.d",
    "-I/tmp"]\n'''
  stdout: b''
  timestamp: 1659794497
- exit_code: 0
  program: "import std.typecons;\nimport std.math;\n/*\n Return a greatest common\
    \ divisor of two integers a and b\n    >>> greatest_common_divisor(3L, 5L)\n \
    \   1L\n    >>> greatest_common_divisor(25L, 15L)\n    5L\n    \n*/\nlong greatest_common_divisor(long\
    \ a, long b) \n{\n    if (a == 0L)\n        return b;\n    if (b == 0L)\n    \
    \    return a;\n    return greatest_common_divisor(b, a % b);\n}\nunittest\n{\n\
    \    alias candidate = greatest_common_divisor;\n\n    assert(candidate(3L, 7L)\
    \ == 1L);\n    assert(candidate(10L, 15L) == 5L);\n    assert(candidate(49L, 14L)\
    \ == 7L);\n    assert(candidate(144L, 60L) == 12L);\n}\nvoid main(){}"
  status: OK
  stderr: b''
  stdout: b''
- exit_code: 1
  program: "import std.typecons;\nimport std.math;\n/*\n Return a greatest common\
    \ divisor of two integers a and b\n    >>> greatest_common_divisor(3L, 5L)\n \
    \   1L\n    >>> greatest_common_divisor(25L, 15L)\n    5L\n    \n*/\nlong greatest_common_divisor(long\
    \ a, long b) \n{\n    long c;\n    while (a != 0) {\n        c = a;\n        a\
    \ = b % a;\n        b = c;\n    }\n    return b;\n}\nunittest\n{\n    alias candidate\
    \ = greatest_common_divisor;\n\n    assert(candidate(3L, 7L) == 1L);\n    assert(candidate(10L,\
    \ 15L) == 5L);\n    assert(candidate(49L, 14L) == 7L);\n    assert(candidate(144L,\
    \ 60L) == 12L);\n}\nvoid main(){}"
  status: SyntaxError
  stderr: 'b''Error: cannot find source code for runtime library file \''object.d\''\n       dmd
    might not be correctly installed. Run \''dmd -man\'' for installation instructions.\nimport
    path[0] = /tmp\nFailed: ["dmd", "-unittest", "-v", "-o-", "/tmp/tmpwhaxk_oj.d",
    "-I/tmp"]\n'''
  stdout: b''
  timestamp: 1659794497
- exit_code: 0
  program: "import std.typecons;\nimport std.math;\n/*\n Return a greatest common\
    \ divisor of two integers a and b\n    >>> greatest_common_divisor(3L, 5L)\n \
    \   1L\n    >>> greatest_common_divisor(25L, 15L)\n    5L\n    \n*/\nlong greatest_common_divisor(long\
    \ a, long b) \n{\n    if (a < b)\n        return greatest_common_divisor(b, a);\n\
    \    if (b == 0)\n        return a;\n    return greatest_common_divisor(b, a %\
    \ b);\n}\nunittest\n{\n    alias candidate = greatest_common_divisor;\n\n    assert(candidate(3L,\
    \ 7L) == 1L);\n    assert(candidate(10L, 15L) == 5L);\n    assert(candidate(49L,\
    \ 14L) == 7L);\n    assert(candidate(144L, 60L) == 12L);\n}\nvoid main(){}"
  status: OK
  stderr: b''
  stdout: b''
- exit_code: 0
  program: "import std.typecons;\nimport std.math;\n/*\n Return a greatest common\
    \ divisor of two integers a and b\n    >>> greatest_common_divisor(3L, 5L)\n \
    \   1L\n    >>> greatest_common_divisor(25L, 15L)\n    5L\n    \n*/\nlong greatest_common_divisor(long\
    \ a, long b) \n{\n    if (a == 0L)\n        return b;\n    if (b == 0L)\n    \
    \    return a;\n    return greatest_common_divisor(b, a % b);\n}\nunittest\n{\n\
    \    alias candidate = greatest_common_divisor;\n\n    assert(candidate(3L, 7L)\
    \ == 1L);\n    assert(candidate(10L, 15L) == 5L);\n    assert(candidate(49L, 14L)\
    \ == 7L);\n    assert(candidate(144L, 60L) == 12L);\n}\nvoid main(){}"
  status: OK
  stderr: b''
  stdout: b''
- exit_code: 1
  program: "import std.typecons;\nimport std.math;\n/*\n Return a greatest common\
    \ divisor of two integers a and b\n    >>> greatest_common_divisor(3L, 5L)\n \
    \   1L\n    >>> greatest_common_divisor(25L, 15L)\n    5L\n    \n*/\nlong greatest_common_divisor(long\
    \ a, long b) \n{\n    if (a == 0L) \n    {\n        return b;\n    }\n    if (b\
    \ == 0L) \n    {\n        return a;\n    }\n    if (a == b) \n    {\n        return\
    \ a;\n    }\n    if (a == 1L || b == 1L) \n    {\n        return 1L;\n    }\n\
    \    if (a % 2L == 0L && b % 2L == 0L) \n    {\n        return 2L * greatest_common_divisor(a\
    \ / 2L, b / 2L);\n    }\n    if (a % 2L == 0L) \n    {\n        return greatest_common_divisor(a\
    \ / 2L, b);\n    }\n    if (b % 2L == 0L) \n    {\n        return greatest_common_divisor(a,\
    \ b / 2L);\n    }\n    return greatest_common_divisor(abs(a - b), min(a, b));\n\
    }\nunittest\n{\n    alias candidate = greatest_common_divisor;\n\n    assert(candidate(3L,\
    \ 7L) == 1L);\n    assert(candidate(10L, 15L) == 5L);\n    assert(candidate(49L,\
    \ 14L) == 7L);\n    assert(candidate(144L, 60L) == 12L);\n}\nvoid main(){}"
  status: SyntaxError
  stderr: 'b''Error: cannot find source code for runtime library file \''object.d\''\n       dmd
    might not be correctly installed. Run \''dmd -man\'' for installation instructions.\nimport
    path[0] = /tmp\nFailed: ["dmd", "-unittest", "-v", "-o-", "/tmp/tmpfz07_xte.d",
    "-I/tmp"]\n'''
  stdout: b''
  timestamp: 1659794497
- exit_code: 0
  program: "import std.typecons;\nimport std.math;\n/*\n Return a greatest common\
    \ divisor of two integers a and b\n    >>> greatest_common_divisor(3L, 5L)\n \
    \   1L\n    >>> greatest_common_divisor(25L, 15L)\n    5L\n    \n*/\nlong greatest_common_divisor(long\
    \ a, long b) \n{\n    if (a < b)\n        return greatest_common_divisor(b, a);\n\
    \    if (b == 0)\n        return a;\n    return greatest_common_divisor(b, a %\
    \ b);\n}\nunittest\n{\n    alias candidate = greatest_common_divisor;\n\n    assert(candidate(3L,\
    \ 7L) == 1L);\n    assert(candidate(10L, 15L) == 5L);\n    assert(candidate(49L,\
    \ 14L) == 7L);\n    assert(candidate(144L, 60L) == 12L);\n}\nvoid main(){}"
  status: OK
  stderr: b''
  stdout: b''
- exit_code: 1
  program: "import std.typecons;\nimport std.math;\n/*\n Return a greatest common\
    \ divisor of two integers a and b\n    >>> greatest_common_divisor(3L, 5L)\n \
    \   1L\n    >>> greatest_common_divisor(25L, 15L)\n    5L\n    \n*/\nlong greatest_common_divisor(long\
    \ a, long b) \n{\n    while (b != 0) {\n        long t = b;\n        b = a % b;\n\
    \        a = t;\n    }\n    return a;\n}\nunittest\n{\n    alias candidate = greatest_common_divisor;\n\
    \n    assert(candidate(3L, 7L) == 1L);\n    assert(candidate(10L, 15L) == 5L);\n\
    \    assert(candidate(49L, 14L) == 7L);\n    assert(candidate(144L, 60L) == 12L);\n\
    }\nvoid main(){}"
  status: SyntaxError
  stderr: 'b''Error: cannot find source code for runtime library file \''object.d\''\n       dmd
    might not be correctly installed. Run \''dmd -man\'' for installation instructions.\nimport
    path[0] = /tmp\nFailed: ["dmd", "-unittest", "-v", "-o-", "/tmp/tmpsufqk2py.d",
    "-I/tmp"]\n'''
  stdout: b''
  timestamp: 1659794497
- exit_code: 0
  program: "import std.typecons;\nimport std.math;\n/*\n Return a greatest common\
    \ divisor of two integers a and b\n    >>> greatest_common_divisor(3L, 5L)\n \
    \   1L\n    >>> greatest_common_divisor(25L, 15L)\n    5L\n    \n*/\nlong greatest_common_divisor(long\
    \ a, long b) \n{\n    if (a == 0L)\n        return b;\n    if (b == 0L)\n    \
    \    return a;\n    return greatest_common_divisor(b, a % b);\n}\nunittest\n{\n\
    \    alias candidate = greatest_common_divisor;\n\n    assert(candidate(3L, 7L)\
    \ == 1L);\n    assert(candidate(10L, 15L) == 5L);\n    assert(candidate(49L, 14L)\
    \ == 7L);\n    assert(candidate(144L, 60L) == 12L);\n}\nvoid main(){}"
  status: OK
  stderr: b''
  stdout: b''
- exit_code: 1
  program: "import std.typecons;\nimport std.math;\n/*\n Return a greatest common\
    \ divisor of two integers a and b\n    >>> greatest_common_divisor(3L, 5L)\n \
    \   1L\n    >>> greatest_common_divisor(25L, 15L)\n    5L\n    \n*/\nlong greatest_common_divisor(long\
    \ a, long b) \n{\n    while (b != 0) \n    {\n        long t = b;\n        b =\
    \ a % b;\n        a = t;\n    }\n    return a;\n}\nunittest\n{\n    alias candidate\
    \ = greatest_common_divisor;\n\n    assert(candidate(3L, 7L) == 1L);\n    assert(candidate(10L,\
    \ 15L) == 5L);\n    assert(candidate(49L, 14L) == 7L);\n    assert(candidate(144L,\
    \ 60L) == 12L);\n}\nvoid main(){}"
  status: SyntaxError
  stderr: 'b''Error: cannot find source code for runtime library file \''object.d\''\n       dmd
    might not be correctly installed. Run \''dmd -man\'' for installation instructions.\nimport
    path[0] = /tmp\nFailed: ["dmd", "-unittest", "-v", "-o-", "/tmp/tmpxppmwc1c.d",
    "-I/tmp"]\n'''
  stdout: b''
  timestamp: 1659794497
- exit_code: 1
  program: "import std.typecons;\nimport std.math;\n/*\n Return a greatest common\
    \ divisor of two integers a and b\n    >>> greatest_common_divisor(3L, 5L)\n \
    \   1L\n    >>> greatest_common_divisor(25L, 15L)\n    5L\n    \n*/\nlong greatest_common_divisor(long\
    \ a, long b) \n{\n    if (a == 0L)\n        return b;\n    if (b == 0L)\n    \
    \    return a;\n    while (a != b)\n    {\n        if (a > b)\n            a -=\
    \ b;\n        else\n            b -= a;\n    }\n    return a;\n}\nunittest\n{\n\
    \    alias candidate = greatest_common_divisor;\n\n    assert(candidate(3L, 7L)\
    \ == 1L);\n    assert(candidate(10L, 15L) == 5L);\n    assert(candidate(49L, 14L)\
    \ == 7L);\n    assert(candidate(144L, 60L) == 12L);\n}\nvoid main(){}"
  status: SyntaxError
  stderr: 'b''Error: cannot find source code for runtime library file \''object.d\''\n       dmd
    might not be correctly installed. Run \''dmd -man\'' for installation instructions.\nimport
    path[0] = /tmp\nFailed: ["dmd", "-unittest", "-v", "-o-", "/tmp/tmp7sflrian.d",
    "-I/tmp"]\n'''
  stdout: b''
  timestamp: 1659794497
- exit_code: 1
  program: "import std.typecons;\nimport std.math;\n/*\n Return a greatest common\
    \ divisor of two integers a and b\n    >>> greatest_common_divisor(3L, 5L)\n \
    \   1L\n    >>> greatest_common_divisor(25L, 15L)\n    5L\n    \n*/\nlong greatest_common_divisor(long\
    \ a, long b) \n{\n    if (a == 0L) \n    {\n        return b;\n    }\n    else\
    \ if (b == 0L) \n    {\n        return a;\n    }\n    else \n    {\n        return\
    \ greatest_common_divisor(b, a % b);\n    }\n}\nunittest\n{\n    alias candidate\
    \ = greatest_common_divisor;\n\n    assert(candidate(3L, 7L) == 1L);\n    assert(candidate(10L,\
    \ 15L) == 5L);\n    assert(candidate(49L, 14L) == 7L);\n    assert(candidate(144L,\
    \ 60L) == 12L);\n}\nvoid main(){}"
  status: SyntaxError
  stderr: 'b''Error: cannot find source code for runtime library file \''object.d\''\n       dmd
    might not be correctly installed. Run \''dmd -man\'' for installation instructions.\nimport
    path[0] = /tmp\nFailed: ["dmd", "-unittest", "-v", "-o-", "/tmp/tmpkym7qjmq.d",
    "-I/tmp"]\n'''
  stdout: b''
  timestamp: 1659794497
- exit_code: 0
  program: "import std.typecons;\nimport std.math;\n/*\n Return a greatest common\
    \ divisor of two integers a and b\n    >>> greatest_common_divisor(3L, 5L)\n \
    \   1L\n    >>> greatest_common_divisor(25L, 15L)\n    5L\n    \n*/\nlong greatest_common_divisor(long\
    \ a, long b) \n{\n    if (a < b) \n    {\n        return greatest_common_divisor(b,\
    \ a);\n    }\n    if (b == 0) \n    {\n        return a;\n    }\n    return greatest_common_divisor(b,\
    \ a % b);\n}\nunittest\n{\n    alias candidate = greatest_common_divisor;\n\n\
    \    assert(candidate(3L, 7L) == 1L);\n    assert(candidate(10L, 15L) == 5L);\n\
    \    assert(candidate(49L, 14L) == 7L);\n    assert(candidate(144L, 60L) == 12L);\n\
    }\nvoid main(){}"
  status: OK
  stderr: b''
  stdout: b''
- exit_code: 1
  program: "import std.typecons;\nimport std.math;\n/*\n Return a greatest common\
    \ divisor of two integers a and b\n    >>> greatest_common_divisor(3L, 5L)\n \
    \   1L\n    >>> greatest_common_divisor(25L, 15L)\n    5L\n    \n*/\nlong greatest_common_divisor(long\
    \ a, long b) \n{\n    if (a == 0)\n        return b;\n    if (b == 0)\n      \
    \  return a;\n    if (a == b)\n        return a;\n    if (a == 1 || b == 1)\n\
    \        return 1;\n    if ((a & 1) == 0)\n        return (b & 1) != 0 ? greatest_common_divisor(a\
    \ >> 1, b) : greatest_common_divisor(a >> 1, b >> 1) << 1;\n    if ((b & 1) ==\
    \ 0)\n        return greatest_common_divisor(a, b >> 1);\n    if (a > b)\n   \
    \     return greatest_common_divisor((a - b) >> 1, b);\n    return greatest_common_divisor((b\
    \ - a) >> 1, a);\n}\nunittest\n{\n    alias candidate = greatest_common_divisor;\n\
    \n    assert(candidate(3L, 7L) == 1L);\n    assert(candidate(10L, 15L) == 5L);\n\
    \    assert(candidate(49L, 14L) == 7L);\n    assert(candidate(144L, 60L) == 12L);\n\
    }\nvoid main(){}"
  status: SyntaxError
  stderr: 'b''Error: cannot find source code for runtime library file \''object.d\''\n       dmd
    might not be correctly installed. Run \''dmd -man\'' for installation instructions.\nimport
    path[0] = /tmp\nFailed: ["dmd", "-unittest", "-v", "-o-", "/tmp/tmp01xcvsha.d",
    "-I/tmp"]\n'''
  stdout: b''
  timestamp: 1659794497
- exit_code: 0
  program: "import std.typecons;\nimport std.math;\n/*\n Return a greatest common\
    \ divisor of two integers a and b\n    >>> greatest_common_divisor(3L, 5L)\n \
    \   1L\n    >>> greatest_common_divisor(25L, 15L)\n    5L\n    \n*/\nlong greatest_common_divisor(long\
    \ a, long b) \n{\n    if (a < b)\n        return greatest_common_divisor(b, a);\n\
    \    if (b == 0)\n        return a;\n    return greatest_common_divisor(b, a %\
    \ b);\n}\nunittest\n{\n    alias candidate = greatest_common_divisor;\n\n    assert(candidate(3L,\
    \ 7L) == 1L);\n    assert(candidate(10L, 15L) == 5L);\n    assert(candidate(49L,\
    \ 14L) == 7L);\n    assert(candidate(144L, 60L) == 12L);\n}\nvoid main(){}"
  status: OK
  stderr: b''
  stdout: b''
- exit_code: 1
  program: "import std.typecons;\nimport std.math;\n/*\n Return a greatest common\
    \ divisor of two integers a and b\n    >>> greatest_common_divisor(3L, 5L)\n \
    \   1L\n    >>> greatest_common_divisor(25L, 15L)\n    5L\n    \n*/\nlong greatest_common_divisor(long\
    \ a, long b) \n{\n    if (a == 0L)\n        return b;\n    if (b == 0L)\n    \
    \    return a;\n    if (a == b)\n        return a;\n    if (a == 1L || b == 1L)\n\
    \        return 1L;\n    if (a % 2L == 0L && b % 2L == 0L)\n        return 2L\
    \ * greatest_common_divisor(a / 2L, b / 2L);\n    if (a % 2L == 0L && b % 2L !=\
    \ 0L)\n        return greatest_common_divisor(a / 2L, b);\n    if (a % 2L != 0L\
    \ && b % 2L == 0L)\n        return greatest_common_divisor(a, b / 2L);\n    if\
    \ (a > b)\n        return greatest_common_divisor((a - b) / 2L, b);\n    return\
    \ greatest_common_divisor((b - a) / 2L, a);\n}\nunittest\n{\n    alias candidate\
    \ = greatest_common_divisor;\n\n    assert(candidate(3L, 7L) == 1L);\n    assert(candidate(10L,\
    \ 15L) == 5L);\n    assert(candidate(49L, 14L) == 7L);\n    assert(candidate(144L,\
    \ 60L) == 12L);\n}\nvoid main(){}"
  status: SyntaxError
  stderr: 'b''Error: cannot find source code for runtime library file \''object.d\''\n       dmd
    might not be correctly installed. Run \''dmd -man\'' for installation instructions.\nimport
    path[0] = /tmp\nFailed: ["dmd", "-unittest", "-v", "-o-", "/tmp/tmp6nzy57d4.d",
    "-I/tmp"]\n'''
  stdout: b''
  timestamp: 1659794497
- exit_code: 1
  program: "import std.typecons;\nimport std.math;\n/*\n Return a greatest common\
    \ divisor of two integers a and b\n    >>> greatest_common_divisor(3L, 5L)\n \
    \   1L\n    >>> greatest_common_divisor(25L, 15L)\n    5L\n    \n*/\nlong greatest_common_divisor(long\
    \ a, long b) \n{\n    long c;\n    while (a != 0) {\n        c = a; a = b % a;\
    \  b = c;\n    }\n    return b;\n}\nunittest\n{\n    alias candidate = greatest_common_divisor;\n\
    \n    assert(candidate(3L, 7L) == 1L);\n    assert(candidate(10L, 15L) == 5L);\n\
    \    assert(candidate(49L, 14L) == 7L);\n    assert(candidate(144L, 60L) == 12L);\n\
    }\nvoid main(){}"
  status: SyntaxError
  stderr: 'b''Error: cannot find source code for runtime library file \''object.d\''\n       dmd
    might not be correctly installed. Run \''dmd -man\'' for installation instructions.\nimport
    path[0] = /tmp\nFailed: ["dmd", "-unittest", "-v", "-o-", "/tmp/tmp0tgu9uhl.d",
    "-I/tmp"]\n'''
  stdout: b''
  timestamp: 1659794497
- exit_code: 1
  program: "import std.typecons;\nimport std.math;\n/*\n Return a greatest common\
    \ divisor of two integers a and b\n    >>> greatest_common_divisor(3L, 5L)\n \
    \   1L\n    >>> greatest_common_divisor(25L, 15L)\n    5L\n    \n*/\nlong greatest_common_divisor(long\
    \ a, long b) \n{\n    if(a == 0L) return b;\n    if(b == 0L) return a;\n    return\
    \ greatest_common_divisor(b, a % b);\n}\nunittest\n{\n    alias candidate = greatest_common_divisor;\n\
    \n    assert(candidate(3L, 7L) == 1L);\n    assert(candidate(10L, 15L) == 5L);\n\
    \    assert(candidate(49L, 14L) == 7L);\n    assert(candidate(144L, 60L) == 12L);\n\
    }\nvoid main(){}"
  status: SyntaxError
  stderr: 'b''Error: cannot find source code for runtime library file \''object.d\''\n       dmd
    might not be correctly installed. Run \''dmd -man\'' for installation instructions.\nimport
    path[0] = /tmp\nFailed: ["dmd", "-unittest", "-v", "-o-", "/tmp/tmpcx3w3zg6.d",
    "-I/tmp"]\n'''
  stdout: b''
  timestamp: 1659794497
- exit_code: 0
  program: "import std.typecons;\nimport std.math;\n/*\n Return a greatest common\
    \ divisor of two integers a and b\n    >>> greatest_common_divisor(3L, 5L)\n \
    \   1L\n    >>> greatest_common_divisor(25L, 15L)\n    5L\n    \n*/\nlong greatest_common_divisor(long\
    \ a, long b) \n{\n    if (a < b) \n    {\n        return greatest_common_divisor(b,\
    \ a);\n    }\n    if (b == 0) \n    {\n        return a;\n    }\n    return greatest_common_divisor(b,\
    \ a % b);\n}\nunittest\n{\n    alias candidate = greatest_common_divisor;\n\n\
    \    assert(candidate(3L, 7L) == 1L);\n    assert(candidate(10L, 15L) == 5L);\n\
    \    assert(candidate(49L, 14L) == 7L);\n    assert(candidate(144L, 60L) == 12L);\n\
    }\nvoid main(){}"
  status: OK
  stderr: b''
  stdout: b''
- exit_code: 0
  program: "import std.typecons;\nimport std.math;\n/*\n Return a greatest common\
    \ divisor of two integers a and b\n    >>> greatest_common_divisor(3L, 5L)\n \
    \   1L\n    >>> greatest_common_divisor(25L, 15L)\n    5L\n    \n*/\nlong greatest_common_divisor(long\
    \ a, long b) \n{\n    if (a == 0L)\n        return b;\n    if (b == 0L)\n    \
    \    return a;\n    if (a == b)\n        return a;\n    if (a > b)\n        return\
    \ greatest_common_divisor(a - b, b);\n    return greatest_common_divisor(a, b\
    \ - a);\n}\nunittest\n{\n    alias candidate = greatest_common_divisor;\n\n  \
    \  assert(candidate(3L, 7L) == 1L);\n    assert(candidate(10L, 15L) == 5L);\n\
    \    assert(candidate(49L, 14L) == 7L);\n    assert(candidate(144L, 60L) == 12L);\n\
    }\nvoid main(){}"
  status: OK
  stderr: b''
  stdout: b''
- exit_code: 1
  program: "import std.typecons;\nimport std.math;\n/*\n Return a greatest common\
    \ divisor of two integers a and b\n    >>> greatest_common_divisor(3L, 5L)\n \
    \   1L\n    >>> greatest_common_divisor(25L, 15L)\n    5L\n    \n*/\nlong greatest_common_divisor(long\
    \ a, long b) \n{\n    if (a == 0L)\n    {\n        return b;\n    }\n    else\
    \ if (b == 0L)\n    {\n        return a;\n    }\n    else\n    {\n        return\
    \ greatest_common_divisor(b, a % b);\n    }\n}\nunittest\n{\n    alias candidate\
    \ = greatest_common_divisor;\n\n    assert(candidate(3L, 7L) == 1L);\n    assert(candidate(10L,\
    \ 15L) == 5L);\n    assert(candidate(49L, 14L) == 7L);\n    assert(candidate(144L,\
    \ 60L) == 12L);\n}\nvoid main(){}"
  status: SyntaxError
  stderr: 'b''Error: cannot find source code for runtime library file \''object.d\''\n       dmd
    might not be correctly installed. Run \''dmd -man\'' for installation instructions.\nimport
    path[0] = /tmp\nFailed: ["dmd", "-unittest", "-v", "-o-", "/tmp/tmps13hzby6.d",
    "-I/tmp"]\n'''
  stdout: b''
  timestamp: 1659794497
- exit_code: 0
  program: "import std.typecons;\nimport std.math;\n/*\n Return a greatest common\
    \ divisor of two integers a and b\n    >>> greatest_common_divisor(3L, 5L)\n \
    \   1L\n    >>> greatest_common_divisor(25L, 15L)\n    5L\n    \n*/\nlong greatest_common_divisor(long\
    \ a, long b) \n{\n    if (a < b)\n        return greatest_common_divisor(b, a);\n\
    \    if (b == 0)\n        return a;\n    return greatest_common_divisor(b, a %\
    \ b);\n}\nunittest\n{\n    alias candidate = greatest_common_divisor;\n\n    assert(candidate(3L,\
    \ 7L) == 1L);\n    assert(candidate(10L, 15L) == 5L);\n    assert(candidate(49L,\
    \ 14L) == 7L);\n    assert(candidate(144L, 60L) == 12L);\n}\nvoid main(){}"
  status: OK
  stderr: b''
  stdout: b''
- exit_code: 1
  program: "import std.typecons;\nimport std.math;\n/*\n Return a greatest common\
    \ divisor of two integers a and b\n    >>> greatest_common_divisor(3L, 5L)\n \
    \   1L\n    >>> greatest_common_divisor(25L, 15L)\n    5L\n    \n*/\nlong greatest_common_divisor(long\
    \ a, long b) \n{\n    if (a == 0L)\n        return b;\n    if (b == 0L)\n    \
    \    return a;\n    return greatest_common_divisor(b, a % b);\n}\n/*\n Return\
    \ a least common multiple of two integers a and b\n    >>> least_common_multiple(3L,\
    \ 5L)\n    15L\n    >>> least_common_multiple(25L, 15L)\n    75L\n*/\nlong least_common_multiple(long\
    \ a, long b) \n{\n    return a * b / greatest_common_divisor(a, b);\n}\n/*\n Return\
    \ a least common multiple of a list of integers\n    >>> least_common_multiple_list([3L,\
    \ 5L])\n    15L\n    >>> least_common_multiple_list([25L, 15L])\n    75L\n*/\n\
    long least_common_multiple_list(long[] a) \n{\n    long result = 1L;\n    foreach\
    \ (i; a)\n        result = least_common_multiple(result, i);\n    return result;\n\
    }\n/*\n Return a greatest common divisor of a list of integers\n    >>> greatest_common_divisor_list([3L,\
    \ 5L])\n    1L\n    >>> greatest_common_divisor_list([25L, 15L])\n    5L\n*/\n\
    long greatest_common_divisor_list(long[] a) \n{\n    long result = 0L;\n    foreach\
    \ (i; a)\n        result = greatest_common_divisor(result, i);\n    return result;\n\
    }\n/*\n Return a greatest common divisor of a list of integers\n    >>> greatest_common_divisor_list([3L,\
    \ 5L])\n    1L\n    >>> greatest_common_divisor_list([25L, 15L])\n    5L\n*/\n\
    long greatest_common_divisor_list(long[] a) \n{\n    long result = 0L;\n    foreach\
    \ (i; a)\n        result = greatest_common_divisor(result, i);\n    return result;\n\
    }\n/*\n Return a least common multiple of a list of integers\n   \nunittest\n\
    {\n    alias candidate = greatest_common_divisor;\n\n    assert(candidate(3L,\
    \ 7L) == 1L);\n    assert(candidate(10L, 15L) == 5L);\n    assert(candidate(49L,\
    \ 14L) == 7L);\n    assert(candidate(144L, 60L) == 12L);\n}\nvoid main(){}"
  status: SyntaxError
  stderr: 'b''/tmp/tmpb5de9e9a.d(72): Error: unterminated /* */ comment\nFailed: ["dmd",
    "-unittest", "-v", "-o-", "/tmp/tmpb5de9e9a.d", "-I/tmp"]\n'''
  stdout: b''
  timestamp: 1659794497
- exit_code: 1
  program: "import std.typecons;\nimport std.math;\n/*\n Return a greatest common\
    \ divisor of two integers a and b\n    >>> greatest_common_divisor(3L, 5L)\n \
    \   1L\n    >>> greatest_common_divisor(25L, 15L)\n    5L\n    \n*/\nlong greatest_common_divisor(long\
    \ a, long b) \n{\n    if (b == 0)\n        return a;\n    else\n        return\
    \ greatest_common_divisor(b, a % b);\n}\nunittest\n{\n    alias candidate = greatest_common_divisor;\n\
    \n    assert(candidate(3L, 7L) == 1L);\n    assert(candidate(10L, 15L) == 5L);\n\
    \    assert(candidate(49L, 14L) == 7L);\n    assert(candidate(144L, 60L) == 12L);\n\
    }\nvoid main(){}"
  status: SyntaxError
  stderr: 'b''Error: cannot find source code for runtime library file \''object.d\''\n       dmd
    might not be correctly installed. Run \''dmd -man\'' for installation instructions.\nimport
    path[0] = /tmp\nFailed: ["dmd", "-unittest", "-v", "-o-", "/tmp/tmpd2a_90wj.d",
    "-I/tmp"]\n'''
  stdout: b''
  timestamp: 1659794497
- exit_code: 1
  program: "import std.typecons;\nimport std.math;\n/*\n Return a greatest common\
    \ divisor of two integers a and b\n    >>> greatest_common_divisor(3L, 5L)\n \
    \   1L\n    >>> greatest_common_divisor(25L, 15L)\n    5L\n    \n*/\nlong greatest_common_divisor(long\
    \ a, long b) \n{\n    if (a < b)\n    {\n        return greatest_common_divisor(b,\
    \ a);\n    }\n    else if (b == 0)\n    {\n        return a;\n    }\n    else\n\
    \    {\n        return greatest_common_divisor(b, a % b);\n    }\n}\nunittest\n\
    {\n    alias candidate = greatest_common_divisor;\n\n    assert(candidate(3L,\
    \ 7L) == 1L);\n    assert(candidate(10L, 15L) == 5L);\n    assert(candidate(49L,\
    \ 14L) == 7L);\n    assert(candidate(144L, 60L) == 12L);\n}\nvoid main(){}"
  status: SyntaxError
  stderr: 'b''Error: cannot find source code for runtime library file \''object.d\''\n       dmd
    might not be correctly installed. Run \''dmd -man\'' for installation instructions.\nimport
    path[0] = /tmp\nFailed: ["dmd", "-unittest", "-v", "-o-", "/tmp/tmpwtyumtr4.d",
    "-I/tmp"]\n'''
  stdout: b''
  timestamp: 1659794497
- exit_code: 0
  program: "import std.typecons;\nimport std.math;\n/*\n Return a greatest common\
    \ divisor of two integers a and b\n    >>> greatest_common_divisor(3L, 5L)\n \
    \   1L\n    >>> greatest_common_divisor(25L, 15L)\n    5L\n    \n*/\nlong greatest_common_divisor(long\
    \ a, long b) \n{\n    if (a < b) \n    {\n        return greatest_common_divisor(b,\
    \ a);\n    }\n    if (b == 0) \n    {\n        return a;\n    }\n    return greatest_common_divisor(b,\
    \ a % b);\n}\nunittest\n{\n    alias candidate = greatest_common_divisor;\n\n\
    \    assert(candidate(3L, 7L) == 1L);\n    assert(candidate(10L, 15L) == 5L);\n\
    \    assert(candidate(49L, 14L) == 7L);\n    assert(candidate(144L, 60L) == 12L);\n\
    }\nvoid main(){}"
  status: OK
  stderr: b''
  stdout: b''
- exit_code: 1
  program: "import std.typecons;\nimport std.math;\n/*\n Return a greatest common\
    \ divisor of two integers a and b\n    >>> greatest_common_divisor(3L, 5L)\n \
    \   1L\n    >>> greatest_common_divisor(25L, 15L)\n    5L\n    \n*/\nlong greatest_common_divisor(long\
    \ a, long b) \n{\n    if (a < b) \n        return greatest_common_divisor(b, a);\n\
    \    if (b == 0) \n        return a;\n    return greatest_common_divisor(b, a\
    \ % b);\n}\n/*\n Return a least common multiple of two integers a and b\n    >>>\
    \ least_common_multiple(3L, 5L)\n    15L\n    >>> least_common_multiple(25L, 15L)\n\
    \    75L\n    \n*/\nlong least_common_multiple(long a, long b) \n{\n    return\
    \ a * b / greatest_common_divisor(a, b);\n}\n/*\n Return a least common multiple\
    \ of a list of integers\n    >>> least_common_multiple_of_list([3L, 5L])\n   \
    \ 15L\n    >>> least_common_multiple_of_list([25L, 15L])\n    75L\n    \n*/\n\
    long least_common_multiple_of_list(long[] a) \n{\n    long result = 1L;\n    foreach\
    \ (i; a) \n        result = least_common_multiple(result, i);\n    return result;\n\
    }\n/*\n Return a greatest common divisor of a list of integers\n    >>> greatest_common_divisor_of_list([3L,\
    \ 5L])\n    1L\n    >>> greatest_common_divisor_of_list([25L, 15L])\n    5L\n\
    \    \n*/\nlong greatest_common_divisor_of_list(long[] a) \n{\n    long result\
    \ = a[0];\n    foreach (i; a) \n        result = greatest_common_divisor(result,\
    \ i);\n    return result;\n}\n/*\n Return a least common multiple of a list of\
    \ integers\n    >>> least_common_multiple_of_list([3L, 5L])\n    15L\n    >>>\
    \ least_common_multiple_of_list([25L, 15L])\n    75L\n    \n*/\nlong least_common_multiple_of_list(long[]\
    \ a) \n{\n    long result = 1L;\n    foreach (i; a) \n        result = least_\n\
    unittest\n{\n    alias candidate = greatest_common_divisor;\n\n    assert(candidate(3L,\
    \ 7L) == 1L);\n    assert(candidate(10L, 15L) == 5L);\n    assert(candidate(49L,\
    \ 14L) == 7L);\n    assert(candidate(144L, 60L) == 12L);\n}\nvoid main(){}"
  status: SyntaxError
  stderr: 'b''/tmp/tmpe1zt7cy7.d(74): Error: found \''unittest\'' when expecting \'';\''
    following statement\n/tmp/tmpe1zt7cy7.d(83): Error: found \''EOF\'' when expecting
    \''}\'' following compound statement\nFailed: ["dmd", "-unittest", "-v", "-o-",
    "/tmp/tmpe1zt7cy7.d", "-I/tmp"]\n'''
  stdout: b''
  timestamp: 1659794497
- exit_code: 0
  program: "import std.typecons;\nimport std.math;\n/*\n Return a greatest common\
    \ divisor of two integers a and b\n    >>> greatest_common_divisor(3L, 5L)\n \
    \   1L\n    >>> greatest_common_divisor(25L, 15L)\n    5L\n    \n*/\nlong greatest_common_divisor(long\
    \ a, long b) \n{\n    if (a == 0L)\n        return b;\n    if (b == 0L)\n    \
    \    return a;\n    return greatest_common_divisor(b, a % b);\n}\nunittest\n{\n\
    \    alias candidate = greatest_common_divisor;\n\n    assert(candidate(3L, 7L)\
    \ == 1L);\n    assert(candidate(10L, 15L) == 5L);\n    assert(candidate(49L, 14L)\
    \ == 7L);\n    assert(candidate(144L, 60L) == 12L);\n}\nvoid main(){}"
  status: OK
  stderr: b''
  stdout: b''
- exit_code: 1
  program: "import std.typecons;\nimport std.math;\n/*\n Return a greatest common\
    \ divisor of two integers a and b\n    >>> greatest_common_divisor(3L, 5L)\n \
    \   1L\n    >>> greatest_common_divisor(25L, 15L)\n    5L\n    \n*/\nlong greatest_common_divisor(long\
    \ a, long b) \n{\n    long c;\n    while (b != 0) \n    {\n        c = a % b;\n\
    \        a = b;\n        b = c;\n    }\n    return a;\n}\nunittest\n{\n    alias\
    \ candidate = greatest_common_divisor;\n\n    assert(candidate(3L, 7L) == 1L);\n\
    \    assert(candidate(10L, 15L) == 5L);\n    assert(candidate(49L, 14L) == 7L);\n\
    \    assert(candidate(144L, 60L) == 12L);\n}\nvoid main(){}"
  status: SyntaxError
  stderr: 'b''Error: cannot find source code for runtime library file \''object.d\''\n       dmd
    might not be correctly installed. Run \''dmd -man\'' for installation instructions.\nimport
    path[0] = /tmp\nFailed: ["dmd", "-unittest", "-v", "-o-", "/tmp/tmp53kq8q0a.d",
    "-I/tmp"]\n'''
  stdout: b''
  timestamp: 1659794497
- exit_code: 0
  program: "import std.typecons;\nimport std.math;\n/*\n Return a greatest common\
    \ divisor of two integers a and b\n    >>> greatest_common_divisor(3L, 5L)\n \
    \   1L\n    >>> greatest_common_divisor(25L, 15L)\n    5L\n    \n*/\nlong greatest_common_divisor(long\
    \ a, long b) \n{\n    if (a == 0L)\n        return b;\n    if (b == 0L)\n    \
    \    return a;\n    return greatest_common_divisor(b, a % b);\n}\nunittest\n{\n\
    \    alias candidate = greatest_common_divisor;\n\n    assert(candidate(3L, 7L)\
    \ == 1L);\n    assert(candidate(10L, 15L) == 5L);\n    assert(candidate(49L, 14L)\
    \ == 7L);\n    assert(candidate(144L, 60L) == 12L);\n}\nvoid main(){}"
  status: OK
  stderr: b''
  stdout: b''
- exit_code: 1
  program: "import std.typecons;\nimport std.math;\n/*\n Return a greatest common\
    \ divisor of two integers a and b\n    >>> greatest_common_divisor(3L, 5L)\n \
    \   1L\n    >>> greatest_common_divisor(25L, 15L)\n    5L\n    \n*/\nlong greatest_common_divisor(long\
    \ a, long b) \n{\n    while (b != 0) \n    {\n        long t = b;\n        b =\
    \ a % b;\n        a = t;\n    }\n    return a;\n}\nunittest\n{\n    alias candidate\
    \ = greatest_common_divisor;\n\n    assert(candidate(3L, 7L) == 1L);\n    assert(candidate(10L,\
    \ 15L) == 5L);\n    assert(candidate(49L, 14L) == 7L);\n    assert(candidate(144L,\
    \ 60L) == 12L);\n}\nvoid main(){}"
  status: SyntaxError
  stderr: 'b''Error: cannot find source code for runtime library file \''object.d\''\n       dmd
    might not be correctly installed. Run \''dmd -man\'' for installation instructions.\nimport
    path[0] = /tmp\nFailed: ["dmd", "-unittest", "-v", "-o-", "/tmp/tmpxppmwc1c.d",
    "-I/tmp"]\n'''
  stdout: b''
  timestamp: 1659794497
- exit_code: 0
  program: "import std.typecons;\nimport std.math;\n/*\n Return a greatest common\
    \ divisor of two integers a and b\n    >>> greatest_common_divisor(3L, 5L)\n \
    \   1L\n    >>> greatest_common_divisor(25L, 15L)\n    5L\n    \n*/\nlong greatest_common_divisor(long\
    \ a, long b) \n{\n    if (a == 0L)\n        return b;\n    if (b == 0L)\n    \
    \    return a;\n    return greatest_common_divisor(b, a % b);\n}\nunittest\n{\n\
    \    alias candidate = greatest_common_divisor;\n\n    assert(candidate(3L, 7L)\
    \ == 1L);\n    assert(candidate(10L, 15L) == 5L);\n    assert(candidate(49L, 14L)\
    \ == 7L);\n    assert(candidate(144L, 60L) == 12L);\n}\nvoid main(){}"
  status: OK
  stderr: b''
  stdout: b''
- exit_code: 1
  program: "import std.typecons;\nimport std.math;\n/*\n Return a greatest common\
    \ divisor of two integers a and b\n    >>> greatest_common_divisor(3L, 5L)\n \
    \   1L\n    >>> greatest_common_divisor(25L, 15L)\n    5L\n    \n*/\nlong greatest_common_divisor(long\
    \ a, long b) \n{\n    if (a == 0L)\n        return b;\n    if (b == 0L)\n    \
    \    return a;\n    if (a > b)\n        return greatest_common_divisor(a % b,\
    \ b);\n    else\n        return greatest_common_divisor(a, b % a);\n}\n/*\n Return\
    \ a least common multiple of two integers a and b\n    >>> least_common_multiple(3L,\
    \ 5L)\n    15L\n    >>> least_common_multiple(25L, 15L)\n    75L\n    \n*/\nlong\
    \ least_common_multiple(long a, long b) \n{\n    return a * b / greatest_common_divisor(a,\
    \ b);\n}\n/*\n Return a least common multiple of a list of integers\n    >>> least_common_multiple_list([3L,\
    \ 5L])\n    15L\n    >>> least_common_multiple_list([25L, 15L])\n    75L\n   \
    \ >>> least_common_multiple_list([25L, 15L, 10L])\n    150L\n*/\nlong least_common_multiple_list(long[]\
    \ numbers) \n{\n    long result = 1L;\n    foreach (number; numbers)\n       \
    \ result = least_common_multiple(result, number);\n    return result;\n}\n/*\n\
    \ Return a greatest common divisor of a list of integers\n    >>> greatest_common_divisor_list([3L,\
    \ 5L])\n    1L\n    >>> greatest_common_divisor_list([25L, 15L])\n    5L\n   \
    \ >>> greatest_common_divisor_list([25L, 15L, 10L])\n    5L\n*/\nlong greatest_common_divisor_list(long[]\
    \ numbers) \n{\n    long result = numbers[0];\n    foreach (number; numbers)\n\
    \        result = greatest_common_divisor(result, number);\n    return result;\n\
    }\n/*\n Return a least common multiple of a list of integers\n    >>> least_common_multiple_list([3L,\
    \ 5L])\n    15L\n    >>> least_common_multiple_list([25L, 15L])\n    75L\n\nunittest\n\
    {\n    alias candidate = greatest_common_divisor;\n\n    assert(candidate(3L,\
    \ 7L) == 1L);\n    assert(candidate(10L, 15L) == 5L);\n    assert(candidate(49L,\
    \ 14L) == 7L);\n    assert(candidate(144L, 60L) == 12L);\n}\nvoid main(){}"
  status: SyntaxError
  stderr: 'b''/tmp/tmpa9wk2k3b.d(66): Error: unterminated /* */ comment\nFailed: ["dmd",
    "-unittest", "-v", "-o-", "/tmp/tmpa9wk2k3b.d", "-I/tmp"]\n'''
  stdout: b''
  timestamp: 1659794497
- exit_code: 1
  program: "import std.typecons;\nimport std.math;\n/*\n Return a greatest common\
    \ divisor of two integers a and b\n    >>> greatest_common_divisor(3L, 5L)\n \
    \   1L\n    >>> greatest_common_divisor(25L, 15L)\n    5L\n    \n*/\nlong greatest_common_divisor(long\
    \ a, long b) \n{\n    if (a == 0L)\n        return b;\n    if (b == 0L)\n    \
    \    return a;\n    if (a > b)\n        return greatest_common_divisor(a % b,\
    \ b);\n    else\n        return greatest_common_divisor(a, b % a);\n}\nunittest\n\
    {\n    alias candidate = greatest_common_divisor;\n\n    assert(candidate(3L,\
    \ 7L) == 1L);\n    assert(candidate(10L, 15L) == 5L);\n    assert(candidate(49L,\
    \ 14L) == 7L);\n    assert(candidate(144L, 60L) == 12L);\n}\nvoid main(){}"
  status: SyntaxError
  stderr: 'b''Error: cannot find source code for runtime library file \''object.d\''\n       dmd
    might not be correctly installed. Run \''dmd -man\'' for installation instructions.\nimport
    path[0] = /tmp\nFailed: ["dmd", "-unittest", "-v", "-o-", "/tmp/tmp3844selc.d",
    "-I/tmp"]\n'''
  stdout: b''
  timestamp: 1659794497
- exit_code: 1
  program: "import std.typecons;\nimport std.math;\n/*\n Return a greatest common\
    \ divisor of two integers a and b\n    >>> greatest_common_divisor(3L, 5L)\n \
    \   1L\n    >>> greatest_common_divisor(25L, 15L)\n    5L\n    \n*/\nlong greatest_common_divisor(long\
    \ a, long b) \n{\n    if (a == 0L)\n        return b;\n    if (b == 0L)\n    \
    \    return a;\n    if (a == b)\n        return a;\n    if (a > b)\n        return\
    \ greatest_common_divisor(a - b, b);\n    else\n        return greatest_common_divisor(a,\
    \ b - a);\n}\nunittest\n{\n    alias candidate = greatest_common_divisor;\n\n\
    \    assert(candidate(3L, 7L) == 1L);\n    assert(candidate(10L, 15L) == 5L);\n\
    \    assert(candidate(49L, 14L) == 7L);\n    assert(candidate(144L, 60L) == 12L);\n\
    }\nvoid main(){}"
  status: SyntaxError
  stderr: 'b''Error: cannot find source code for runtime library file \''object.d\''\n       dmd
    might not be correctly installed. Run \''dmd -man\'' for installation instructions.\nimport
    path[0] = /tmp\nFailed: ["dmd", "-unittest", "-v", "-o-", "/tmp/tmpuw4zy5dy.d",
    "-I/tmp"]\n'''
  stdout: b''
  timestamp: 1659794497
- exit_code: 1
  program: "import std.typecons;\nimport std.math;\n/*\n Return a greatest common\
    \ divisor of two integers a and b\n    >>> greatest_common_divisor(3L, 5L)\n \
    \   1L\n    >>> greatest_common_divisor(25L, 15L)\n    5L\n    \n*/\nlong greatest_common_divisor(long\
    \ a, long b) \n{\n    if (a == 0L)\n    {\n        return b;\n    }\n    if (b\
    \ == 0L)\n    {\n        return a;\n    }\n    if (a == b)\n    {\n        return\
    \ a;\n    }\n    if (a == 1L || b == 1L)\n    {\n        return 1L;\n    }\n \
    \   if (a % 2L == 0L && b % 2L == 0L)\n    {\n        return 2L * greatest_common_divisor(a\
    \ / 2L, b / 2L);\n    }\n    if (a % 2L == 0L)\n    {\n        return greatest_common_divisor(a\
    \ / 2L, b);\n    }\n    if (b % 2L == 0L)\n    {\n        return greatest_common_divisor(a,\
    \ b / 2L);\n    }\n    return greatest_common_divisor(abs(a - b), min(a, b));\n\
    }\nunittest\n{\n    alias candidate = greatest_common_divisor;\n\n    assert(candidate(3L,\
    \ 7L) == 1L);\n    assert(candidate(10L, 15L) == 5L);\n    assert(candidate(49L,\
    \ 14L) == 7L);\n    assert(candidate(144L, 60L) == 12L);\n}\nvoid main(){}"
  status: SyntaxError
  stderr: 'b''Error: cannot find source code for runtime library file \''object.d\''\n       dmd
    might not be correctly installed. Run \''dmd -man\'' for installation instructions.\nimport
    path[0] = /tmp\nFailed: ["dmd", "-unittest", "-v", "-o-", "/tmp/tmpkql6tf77.d",
    "-I/tmp"]\n'''
  stdout: b''
  timestamp: 1659794497
- exit_code: 1
  program: "import std.typecons;\nimport std.math;\n/*\n Return a greatest common\
    \ divisor of two integers a and b\n    >>> greatest_common_divisor(3L, 5L)\n \
    \   1L\n    >>> greatest_common_divisor(25L, 15L)\n    5L\n    \n*/\nlong greatest_common_divisor(long\
    \ a, long b) \n{\n    if (a == 0)\n        return b;\n    if (b == 0)\n      \
    \  return a;\n    return greatest_common_divisor(b, a % b);\n}\nunittest\n{\n\
    \    alias candidate = greatest_common_divisor;\n\n    assert(candidate(3L, 7L)\
    \ == 1L);\n    assert(candidate(10L, 15L) == 5L);\n    assert(candidate(49L, 14L)\
    \ == 7L);\n    assert(candidate(144L, 60L) == 12L);\n}\nvoid main(){}"
  status: SyntaxError
  stderr: 'b''Error: cannot find source code for runtime library file \''object.d\''\n       dmd
    might not be correctly installed. Run \''dmd -man\'' for installation instructions.\nimport
    path[0] = /tmp\nFailed: ["dmd", "-unittest", "-v", "-o-", "/tmp/tmpe8uutz0o.d",
    "-I/tmp"]\n'''
  stdout: b''
  timestamp: 1659794497
- exit_code: 1
  program: "import std.typecons;\nimport std.math;\n/*\n Return a greatest common\
    \ divisor of two integers a and b\n    >>> greatest_common_divisor(3L, 5L)\n \
    \   1L\n    >>> greatest_common_divisor(25L, 15L)\n    5L\n    \n*/\nlong greatest_common_divisor(long\
    \ a, long b) \n{\n    if (a == 0L)\n        return b;\n    if (b == 0L)\n    \
    \    return a;\n    if (a > b)\n        return greatest_common_divisor(a % b,\
    \ b);\n    else\n        return greatest_common_divisor(a, b % a);\n}\nunittest\n\
    {\n    alias candidate = greatest_common_divisor;\n\n    assert(candidate(3L,\
    \ 7L) == 1L);\n    assert(candidate(10L, 15L) == 5L);\n    assert(candidate(49L,\
    \ 14L) == 7L);\n    assert(candidate(144L, 60L) == 12L);\n}\nvoid main(){}"
  status: SyntaxError
  stderr: 'b''Error: cannot find source code for runtime library file \''object.d\''\n       dmd
    might not be correctly installed. Run \''dmd -man\'' for installation instructions.\nimport
    path[0] = /tmp\nFailed: ["dmd", "-unittest", "-v", "-o-", "/tmp/tmp3844selc.d",
    "-I/tmp"]\n'''
  stdout: b''
  timestamp: 1659794497
- exit_code: 1
  program: "import std.typecons;\nimport std.math;\n/*\n Return a greatest common\
    \ divisor of two integers a and b\n    >>> greatest_common_divisor(3L, 5L)\n \
    \   1L\n    >>> greatest_common_divisor(25L, 15L)\n    5L\n    \n*/\nlong greatest_common_divisor(long\
    \ a, long b) \n{\n    if (a < b)\n        return greatest_common_divisor(b, a);\n\
    \    if (b == 0)\n        return a;\n    return greatest_common_divisor(b, a %\
    \ b);\n}\n/*\n Return a least common multiple of two integers a and b\n    >>>\
    \ least_common_multiple(3L, 5L)\n    15L\n    >>> least_common_multiple(25L, 15L)\n\
    \    75L\n*/\nlong least_common_multiple(long a, long b) \n{\n    return a * b\
    \ / greatest_common_divisor(a, b);\n}\n/*\n Return a least common multiple of\
    \ a list of integers\n    >>> least_common_multiple_list([3L, 5L])\n    15L\n\
    \    >>> least_common_multiple_list([25L, 15L])\n    75L\n    >>> least_common_multiple_list([25L,\
    \ 15L, 5L])\n    75L\n    >>> least_common_multiple_list([25L, 15L, 5L, 3L])\n\
    \    75L\n*/\nlong least_common_multiple_list(long[] a) \n{\n    long result =\
    \ a[0];\n    foreach (i; 1 .. a.length)\n        result = least_common_multiple(result,\
    \ a[i]);\n    return result;\n}\n/*\n Return a least common multiple of a list\
    \ of integers\n    >>> least_common_multiple_list([3L, 5L])\n    15L\n    >>>\
    \ least_common_multiple_list([25L, 15L])\n    75L\n    >>> least_common_multiple_list([25L,\
    \ 15L, 5L])\n    75L\n    >>> least_common_multiple_list([25L, 15L, 5L, 3L])\n\
    \    75L\n*/\nlong least_common_multiple_list(long[] a) \n{\n    long result =\
    \ a[0];\n    foreach (i; 1 .. a.length)\n        result = least_common_multiple(result,\
    \ a[i]);\n    return result;\n}\n/*\n Return a least common multiple of a list\
    \ of integers\n    >>> least_common_multiple_list\nunittest\n{\n    alias candidate\
    \ = greatest_common_divisor;\n\n    assert(candidate(3L, 7L) == 1L);\n    assert(candidate(10L,\
    \ 15L) == 5L);\n    assert(candidate(49L, 14L) == 7L);\n    assert(candidate(144L,\
    \ 60L) == 12L);\n}\nvoid main(){}"
  status: SyntaxError
  stderr: 'b''/tmp/tmp2nsn96n_.d(66): Error: unterminated /* */ comment\nFailed: ["dmd",
    "-unittest", "-v", "-o-", "/tmp/tmp2nsn96n_.d", "-I/tmp"]\n'''
  stdout: b''
  timestamp: 1659794497
- exit_code: 1
  program: "import std.typecons;\nimport std.math;\n/*\n Return a greatest common\
    \ divisor of two integers a and b\n    >>> greatest_common_divisor(3L, 5L)\n \
    \   1L\n    >>> greatest_common_divisor(25L, 15L)\n    5L\n    \n*/\nlong greatest_common_divisor(long\
    \ a, long b) \n{\n    if (a == 0L)\n    {\n        return b;\n    }\n    if (b\
    \ == 0L)\n    {\n        return a;\n    }\n    return greatest_common_divisor(b,\
    \ a % b);\n}\nunittest\n{\n    alias candidate = greatest_common_divisor;\n\n\
    \    assert(candidate(3L, 7L) == 1L);\n    assert(candidate(10L, 15L) == 5L);\n\
    \    assert(candidate(49L, 14L) == 7L);\n    assert(candidate(144L, 60L) == 12L);\n\
    }\nvoid main(){}"
  status: SyntaxError
  stderr: 'b''Error: cannot find source code for runtime library file \''object.d\''\n       dmd
    might not be correctly installed. Run \''dmd -man\'' for installation instructions.\nimport
    path[0] = /tmp\nFailed: ["dmd", "-unittest", "-v", "-o-", "/tmp/tmp3sobxh36.d",
    "-I/tmp"]\n'''
  stdout: b''
  timestamp: 1659794497
- exit_code: 1
  program: "import std.typecons;\nimport std.math;\n/*\n Return a greatest common\
    \ divisor of two integers a and b\n    >>> greatest_common_divisor(3L, 5L)\n \
    \   1L\n    >>> greatest_common_divisor(25L, 15L)\n    5L\n    \n*/\nlong greatest_common_divisor(long\
    \ a, long b) \n{\n    if (a == 0L) \n    {\n        return b;\n    }\n    else\
    \ if (b == 0L) \n    {\n        return a;\n    }\n    else \n    {\n        return\
    \ greatest_common_divisor(b, a % b);\n    }\n}\nunittest\n{\n    alias candidate\
    \ = greatest_common_divisor;\n\n    assert(candidate(3L, 7L) == 1L);\n    assert(candidate(10L,\
    \ 15L) == 5L);\n    assert(candidate(49L, 14L) == 7L);\n    assert(candidate(144L,\
    \ 60L) == 12L);\n}\nvoid main(){}"
  status: SyntaxError
  stderr: 'b''Error: cannot find source code for runtime library file \''object.d\''\n       dmd
    might not be correctly installed. Run \''dmd -man\'' for installation instructions.\nimport
    path[0] = /tmp\nFailed: ["dmd", "-unittest", "-v", "-o-", "/tmp/tmpkym7qjmq.d",
    "-I/tmp"]\n'''
  stdout: b''
  timestamp: 1659794497
- exit_code: 1
  program: "import std.typecons;\nimport std.math;\n/*\n Return a greatest common\
    \ divisor of two integers a and b\n    >>> greatest_common_divisor(3L, 5L)\n \
    \   1L\n    >>> greatest_common_divisor(25L, 15L)\n    5L\n    \n*/\nlong greatest_common_divisor(long\
    \ a, long b) \n{\n    while (b != 0) \n    {\n        long t = b;\n        b =\
    \ a % b;\n        a = t;\n    }\n    return a;\n}\n/*\n Return a least common\
    \ multiple of two integers a and b\n    >>> least_common_multiple(3L, 5L)\n  \
    \  15L\n    >>> least_common_multiple(25L, 15L)\n    75L\n    \n*/\nlong least_common_multiple(long\
    \ a, long b) \n{\n    return a * b / greatest_common_divisor(a, b);\n}\n/*\n Return\
    \ a least common multiple of a list of integers\n    >>> least_common_multiple_list([3L,\
    \ 5L])\n    15L\n    >>> least_common_multiple_list([25L, 15L])\n    75L\n   \
    \ >>> least_common_multiple_list([3L, 5L, 7L])\n    105L\n    >>> least_common_multiple_list([3L,\
    \ 5L, 7L, 11L])\n    2310L\n*/\nlong least_common_multiple_list(long[] a) \n{\n\
    \    long result = a[0];\n    foreach (long i; a[1..$]) \n    {\n        result\
    \ = least_common_multiple(result, i);\n    }\n    return result;\n}\n/*\n Return\
    \ a least common multiple of a list of integers\n    >>> least_common_multiple_list([3L,\
    \ 5L])\n    15L\n    >>> least_common_multiple_list([25L, 15L])\n    75L\n   \
    \ >>> least_common_multiple_list([3L, 5L, 7L])\n    105L\n    >>> least_common_multiple_list([3L,\
    \ 5L, 7L, 11L])\n    2310L\n*/\nlong least_common_multiple_list(Tuple!(long[])\
    \ a) \n{\n    long result = a[0];\n    foreach (long i; a[1..$]) \n    {\n   \
    \     result = least_common_multiple(result, i);\n    }\n    return result;\n\
    }\n/*\n Return a least common multiple of a list of integers\n\nunittest\n{\n\
    \    alias candidate = greatest_common_divisor;\n\n    assert(candidate(3L, 7L)\
    \ == 1L);\n    assert(candidate(10L, 15L) == 5L);\n    assert(candidate(49L, 14L)\
    \ == 7L);\n    assert(candidate(144L, 60L) == 12L);\n}\nvoid main(){}"
  status: SyntaxError
  stderr: 'b''/tmp/tmpvfd7b171.d(73): Error: unterminated /* */ comment\nFailed: ["dmd",
    "-unittest", "-v", "-o-", "/tmp/tmpvfd7b171.d", "-I/tmp"]\n'''
  stdout: b''
  timestamp: 1659794497
- exit_code: 1
  program: "import std.typecons;\nimport std.math;\n/*\n Return a greatest common\
    \ divisor of two integers a and b\n    >>> greatest_common_divisor(3L, 5L)\n \
    \   1L\n    >>> greatest_common_divisor(25L, 15L)\n    5L\n    \n*/\nlong greatest_common_divisor(long\
    \ a, long b) \n{\n    while (b != 0) \n    {\n        long t = b;\n        b =\
    \ a % b;\n        a = t;\n    }\n    return a;\n}\n/*\n Return a least common\
    \ multiple of two integers a and b\n    >>> least_common_multiple(3L, 5L)\n  \
    \  15L\n    >>> least_common_multiple(25L, 15L)\n    75L\n    \n*/\nlong least_common_multiple(long\
    \ a, long b) \n{\n    return (a * b) / greatest_common_divisor(a, b);\n}\n/*\n\
    \ Return a least common multiple of a tuple of integers\n    >>> least_common_multiple(tuple(3L,\
    \ 5L, 7L))\n    105L\n    >>> least_common_multiple(tuple(25L, 15L, 75L))\n  \
    \  375L\n    \n*/\nlong least_common_multiple(tuple!(long[]) t) \n{\n    long\
    \ result = 1L;\n    foreach (i; t) \n    {\n        result = least_common_multiple(result,\
    \ i);\n    }\n    return result;\n}\n/*\n Return a least common multiple of a\
    \ tuple of integers\n    >>> least_common_multiple(3L, 5L, 7L)\n    105L\n   \
    \ >>> least_common_multiple(25L, 15L, 75L)\n    375L\n    \n*/\nlong least_common_multiple(long\
    \ a, long b, long c) \n{\n    return least_common_multiple(tuple(a, b, c));\n\
    }\n/*\n Return a least common multiple of a tuple of integers\n    >>> least_common_multiple(3L,\
    \ 5L, 7L, 9L)\n    945L\n    >>> least_common_multiple(25L, 15L, 75L, 125L)\n\
    \    1875L\n    \n*/\nlong least_common_multiple(long a, long b, long c, long\
    \ d) \n{\n    return least_common_multiple(tuple(a, b, c, d));\n}\n/*\n Return\
    \ a least common multiple of a tuple of integers\n    >>> least_common_multiple(3L\n\
    unittest\n{\n    alias candidate = greatest_common_divisor;\n\n    assert(candidate(3L,\
    \ 7L) == 1L);\n    assert(candidate(10L, 15L) == 5L);\n    assert(candidate(49L,\
    \ 14L) == 7L);\n    assert(candidate(144L, 60L) == 12L);\n}\nvoid main(){}"
  status: SyntaxError
  stderr: 'b''/tmp/tmpgvzcs304.d(74): Error: unterminated /* */ comment\nFailed: ["dmd",
    "-unittest", "-v", "-o-", "/tmp/tmpgvzcs304.d", "-I/tmp"]\n'''
  stdout: b''
  timestamp: 1659794497
- exit_code: 0
  program: "import std.typecons;\nimport std.math;\n/*\n Return a greatest common\
    \ divisor of two integers a and b\n    >>> greatest_common_divisor(3L, 5L)\n \
    \   1L\n    >>> greatest_common_divisor(25L, 15L)\n    5L\n    \n*/\nlong greatest_common_divisor(long\
    \ a, long b) \n{\n    if (a < b)\n        return greatest_common_divisor(b, a);\n\
    \    if (b == 0)\n        return a;\n    return greatest_common_divisor(b, a %\
    \ b);\n}\nunittest\n{\n    alias candidate = greatest_common_divisor;\n\n    assert(candidate(3L,\
    \ 7L) == 1L);\n    assert(candidate(10L, 15L) == 5L);\n    assert(candidate(49L,\
    \ 14L) == 7L);\n    assert(candidate(144L, 60L) == 12L);\n}\nvoid main(){}"
  status: OK
  stderr: b''
  stdout: b''
- exit_code: 1
  program: "import std.typecons;\nimport std.math;\n/*\n Return a greatest common\
    \ divisor of two integers a and b\n    >>> greatest_common_divisor(3L, 5L)\n \
    \   1L\n    >>> greatest_common_divisor(25L, 15L)\n    5L\n    \n*/\nlong greatest_common_divisor(long\
    \ a, long b) \n{\n    long c;\n    while (a != 0) {\n        c = a;\n        a\
    \ = b % a;\n        b = c;\n    }\n    return b;\n}\nunittest\n{\n    alias candidate\
    \ = greatest_common_divisor;\n\n    assert(candidate(3L, 7L) == 1L);\n    assert(candidate(10L,\
    \ 15L) == 5L);\n    assert(candidate(49L, 14L) == 7L);\n    assert(candidate(144L,\
    \ 60L) == 12L);\n}\nvoid main(){}"
  status: SyntaxError
  stderr: 'b''Error: cannot find source code for runtime library file \''object.d\''\n       dmd
    might not be correctly installed. Run \''dmd -man\'' for installation instructions.\nimport
    path[0] = /tmp\nFailed: ["dmd", "-unittest", "-v", "-o-", "/tmp/tmpwhaxk_oj.d",
    "-I/tmp"]\n'''
  stdout: b''
  timestamp: 1659794497
- exit_code: 1
  program: "import std.typecons;\nimport std.math;\n/*\n Return a greatest common\
    \ divisor of two integers a and b\n    >>> greatest_common_divisor(3L, 5L)\n \
    \   1L\n    >>> greatest_common_divisor(25L, 15L)\n    5L\n    \n*/\nlong greatest_common_divisor(long\
    \ a, long b) \n{\n    if (b == 0)\n        return a;\n    else\n        return\
    \ greatest_common_divisor(b, a % b);\n}\nunittest\n{\n    alias candidate = greatest_common_divisor;\n\
    \n    assert(candidate(3L, 7L) == 1L);\n    assert(candidate(10L, 15L) == 5L);\n\
    \    assert(candidate(49L, 14L) == 7L);\n    assert(candidate(144L, 60L) == 12L);\n\
    }\nvoid main(){}"
  status: SyntaxError
  stderr: 'b''Error: cannot find source code for runtime library file \''object.d\''\n       dmd
    might not be correctly installed. Run \''dmd -man\'' for installation instructions.\nimport
    path[0] = /tmp\nFailed: ["dmd", "-unittest", "-v", "-o-", "/tmp/tmpd2a_90wj.d",
    "-I/tmp"]\n'''
  stdout: b''
  timestamp: 1659794497
- exit_code: 0
  program: "import std.typecons;\nimport std.math;\n/*\n Return a greatest common\
    \ divisor of two integers a and b\n    >>> greatest_common_divisor(3L, 5L)\n \
    \   1L\n    >>> greatest_common_divisor(25L, 15L)\n    5L\n    \n*/\nlong greatest_common_divisor(long\
    \ a, long b) \n{\n    if (a < b) \n    {\n        return greatest_common_divisor(b,\
    \ a);\n    }\n    if (b == 0) \n    {\n        return a;\n    }\n    return greatest_common_divisor(b,\
    \ a % b);\n}\nunittest\n{\n    alias candidate = greatest_common_divisor;\n\n\
    \    assert(candidate(3L, 7L) == 1L);\n    assert(candidate(10L, 15L) == 5L);\n\
    \    assert(candidate(49L, 14L) == 7L);\n    assert(candidate(144L, 60L) == 12L);\n\
    }\nvoid main(){}"
  status: OK
  stderr: b''
  stdout: b''
- exit_code: 0
  program: "import std.typecons;\nimport std.math;\n/*\n Return a greatest common\
    \ divisor of two integers a and b\n    >>> greatest_common_divisor(3L, 5L)\n \
    \   1L\n    >>> greatest_common_divisor(25L, 15L)\n    5L\n    \n*/\nlong greatest_common_divisor(long\
    \ a, long b) \n{\n    if (a < b)\n        return greatest_common_divisor(b, a);\n\
    \    if (b == 0)\n        return a;\n    return greatest_common_divisor(b, a %\
    \ b);\n}\nunittest\n{\n    alias candidate = greatest_common_divisor;\n\n    assert(candidate(3L,\
    \ 7L) == 1L);\n    assert(candidate(10L, 15L) == 5L);\n    assert(candidate(49L,\
    \ 14L) == 7L);\n    assert(candidate(144L, 60L) == 12L);\n}\nvoid main(){}"
  status: OK
  stderr: b''
  stdout: b''
- exit_code: 0
  program: "import std.typecons;\nimport std.math;\n/*\n Return a greatest common\
    \ divisor of two integers a and b\n    >>> greatest_common_divisor(3L, 5L)\n \
    \   1L\n    >>> greatest_common_divisor(25L, 15L)\n    5L\n    \n*/\nlong greatest_common_divisor(long\
    \ a, long b) \n{\n    if (a == 0L)\n        return b;\n    if (b == 0L)\n    \
    \    return a;\n    return greatest_common_divisor(b, a % b);\n}\nunittest\n{\n\
    \    alias candidate = greatest_common_divisor;\n\n    assert(candidate(3L, 7L)\
    \ == 1L);\n    assert(candidate(10L, 15L) == 5L);\n    assert(candidate(49L, 14L)\
    \ == 7L);\n    assert(candidate(144L, 60L) == 12L);\n}\nvoid main(){}"
  status: OK
  stderr: b''
  stdout: b''
- exit_code: 1
  program: "import std.typecons;\nimport std.math;\n/*\n Return a greatest common\
    \ divisor of two integers a and b\n    >>> greatest_common_divisor(3L, 5L)\n \
    \   1L\n    >>> greatest_common_divisor(25L, 15L)\n    5L\n    \n*/\nlong greatest_common_divisor(long\
    \ a, long b) \n{\n    if (a == 0L)\n        return b;\n    if (b == 0L)\n    \
    \    return a;\n    if (a > b)\n        return greatest_common_divisor(a % b,\
    \ b);\n    else\n        return greatest_common_divisor(a, b % a);\n}\nunittest\n\
    {\n    alias candidate = greatest_common_divisor;\n\n    assert(candidate(3L,\
    \ 7L) == 1L);\n    assert(candidate(10L, 15L) == 5L);\n    assert(candidate(49L,\
    \ 14L) == 7L);\n    assert(candidate(144L, 60L) == 12L);\n}\nvoid main(){}"
  status: SyntaxError
  stderr: 'b''Error: cannot find source code for runtime library file \''object.d\''\n       dmd
    might not be correctly installed. Run \''dmd -man\'' for installation instructions.\nimport
    path[0] = /tmp\nFailed: ["dmd", "-unittest", "-v", "-o-", "/tmp/tmp3844selc.d",
    "-I/tmp"]\n'''
  stdout: b''
  timestamp: 1659794497
- exit_code: 0
  program: "import std.typecons;\nimport std.math;\n/*\n Return a greatest common\
    \ divisor of two integers a and b\n    >>> greatest_common_divisor(3L, 5L)\n \
    \   1L\n    >>> greatest_common_divisor(25L, 15L)\n    5L\n    \n*/\nlong greatest_common_divisor(long\
    \ a, long b) \n{\n    if (a == 0L)\n        return b;\n    if (b == 0L)\n    \
    \    return a;\n    return greatest_common_divisor(b, a % b);\n}\nunittest\n{\n\
    \    alias candidate = greatest_common_divisor;\n\n    assert(candidate(3L, 7L)\
    \ == 1L);\n    assert(candidate(10L, 15L) == 5L);\n    assert(candidate(49L, 14L)\
    \ == 7L);\n    assert(candidate(144L, 60L) == 12L);\n}\nvoid main(){}"
  status: OK
  stderr: b''
  stdout: b''
- exit_code: 1
  program: "import std.typecons;\nimport std.math;\n/*\n Return a greatest common\
    \ divisor of two integers a and b\n    >>> greatest_common_divisor(3L, 5L)\n \
    \   1L\n    >>> greatest_common_divisor(25L, 15L)\n    5L\n    \n*/\nlong greatest_common_divisor(long\
    \ a, long b) \n{\n    while (b != 0) \n    {\n        long t = b;\n        b =\
    \ a % b;\n        a = t;\n    }\n    return a;\n}\nunittest\n{\n    alias candidate\
    \ = greatest_common_divisor;\n\n    assert(candidate(3L, 7L) == 1L);\n    assert(candidate(10L,\
    \ 15L) == 5L);\n    assert(candidate(49L, 14L) == 7L);\n    assert(candidate(144L,\
    \ 60L) == 12L);\n}\nvoid main(){}"
  status: SyntaxError
  stderr: 'b''Error: cannot find source code for runtime library file \''object.d\''\n       dmd
    might not be correctly installed. Run \''dmd -man\'' for installation instructions.\nimport
    path[0] = /tmp\nFailed: ["dmd", "-unittest", "-v", "-o-", "/tmp/tmpxppmwc1c.d",
    "-I/tmp"]\n'''
  stdout: b''
  timestamp: 1659794497
- exit_code: 1
  program: "import std.typecons;\nimport std.math;\n/*\n Return a greatest common\
    \ divisor of two integers a and b\n    >>> greatest_common_divisor(3L, 5L)\n \
    \   1L\n    >>> greatest_common_divisor(25L, 15L)\n    5L\n    \n*/\nlong greatest_common_divisor(long\
    \ a, long b) \n{\n    if (a < b) \n        return greatest_common_divisor(b, a);\n\
    \    if (b == 0) \n        return a;\n    return greatest_common_divisor(b, a\
    \ % b);\n}\nunittest\n{\n    alias candidate = greatest_common_divisor;\n\n  \
    \  assert(candidate(3L, 7L) == 1L);\n    assert(candidate(10L, 15L) == 5L);\n\
    \    assert(candidate(49L, 14L) == 7L);\n    assert(candidate(144L, 60L) == 12L);\n\
    }\nvoid main(){}"
  status: SyntaxError
  stderr: 'b''Error: cannot find source code for runtime library file \''object.d\''\n       dmd
    might not be correctly installed. Run \''dmd -man\'' for installation instructions.\nimport
    path[0] = /tmp\nFailed: ["dmd", "-unittest", "-v", "-o-", "/tmp/tmpwb459pm_.d",
    "-I/tmp"]\n'''
  stdout: b''
  timestamp: 1659794497
- exit_code: 1
  program: "import std.typecons;\nimport std.math;\n/*\n Return a greatest common\
    \ divisor of two integers a and b\n    >>> greatest_common_divisor(3L, 5L)\n \
    \   1L\n    >>> greatest_common_divisor(25L, 15L)\n    5L\n    \n*/\nlong greatest_common_divisor(long\
    \ a, long b) \n{\n    if (a == 0L)\n        return b;\n    if (b == 0L)\n    \
    \    return a;\n    if (a == b)\n        return a;\n    if (a == 1L || b == 1L)\n\
    \        return 1L;\n    if (a % 2L == 0L && b % 2L == 0L)\n        return 2L\
    \ * greatest_common_divisor(a / 2L, b / 2L);\n    if (a % 2L == 0L && b % 2L !=\
    \ 0L)\n        return greatest_common_divisor(a / 2L, b);\n    if (a % 2L != 0L\
    \ && b % 2L == 0L)\n        return greatest_common_divisor(a, b / 2L);\n    if\
    \ (a > b)\n        return greatest_common_divisor((a - b) / 2L, b);\n    return\
    \ greatest_common_divisor((b - a) / 2L, a);\n}\nunittest\n{\n    alias candidate\
    \ = greatest_common_divisor;\n\n    assert(candidate(3L, 7L) == 1L);\n    assert(candidate(10L,\
    \ 15L) == 5L);\n    assert(candidate(49L, 14L) == 7L);\n    assert(candidate(144L,\
    \ 60L) == 12L);\n}\nvoid main(){}"
  status: SyntaxError
  stderr: 'b''Error: cannot find source code for runtime library file \''object.d\''\n       dmd
    might not be correctly installed. Run \''dmd -man\'' for installation instructions.\nimport
    path[0] = /tmp\nFailed: ["dmd", "-unittest", "-v", "-o-", "/tmp/tmp6nzy57d4.d",
    "-I/tmp"]\n'''
  stdout: b''
  timestamp: 1659794497
- exit_code: 1
  program: "import std.typecons;\nimport std.math;\n/*\n Return a greatest common\
    \ divisor of two integers a and b\n    >>> greatest_common_divisor(3L, 5L)\n \
    \   1L\n    >>> greatest_common_divisor(25L, 15L)\n    5L\n    \n*/\nlong greatest_common_divisor(long\
    \ a, long b) \n{\n    if (a == 0L) \n        return b;\n    if (b == 0L) \n  \
    \      return a;\n    if (a == b) \n        return a;\n    if (a == 1L || b ==\
    \ 1L) \n        return 1L;\n    if (a % 2L == 0L && b % 2L == 0L) \n        return\
    \ 2L * greatest_common_divisor(a / 2L, b / 2L);\n    if (a % 2L == 0L && b % 2L\
    \ != 0L) \n        return greatest_common_divisor(a / 2L, b);\n    if (a % 2L\
    \ != 0L && b % 2L == 0L) \n        return greatest_common_divisor(a, b / 2L);\n\
    \    return greatest_common_divisor(abs(a - b), min(a, b));\n}\nunittest\n{\n\
    \    alias candidate = greatest_common_divisor;\n\n    assert(candidate(3L, 7L)\
    \ == 1L);\n    assert(candidate(10L, 15L) == 5L);\n    assert(candidate(49L, 14L)\
    \ == 7L);\n    assert(candidate(144L, 60L) == 12L);\n}\nvoid main(){}"
  status: SyntaxError
  stderr: 'b''Error: cannot find source code for runtime library file \''object.d\''\n       dmd
    might not be correctly installed. Run \''dmd -man\'' for installation instructions.\nimport
    path[0] = /tmp\nFailed: ["dmd", "-unittest", "-v", "-o-", "/tmp/tmp_fkxei46.d",
    "-I/tmp"]\n'''
  stdout: b''
  timestamp: 1659794497
- exit_code: 0
  program: "import std.typecons;\nimport std.math;\n/*\n Return a greatest common\
    \ divisor of two integers a and b\n    >>> greatest_common_divisor(3L, 5L)\n \
    \   1L\n    >>> greatest_common_divisor(25L, 15L)\n    5L\n    \n*/\nlong greatest_common_divisor(long\
    \ a, long b) \n{\n    if (a == 0L)\n        return b;\n    if (b == 0L)\n    \
    \    return a;\n    return greatest_common_divisor(b, a % b);\n}\nunittest\n{\n\
    \    alias candidate = greatest_common_divisor;\n\n    assert(candidate(3L, 7L)\
    \ == 1L);\n    assert(candidate(10L, 15L) == 5L);\n    assert(candidate(49L, 14L)\
    \ == 7L);\n    assert(candidate(144L, 60L) == 12L);\n}\nvoid main(){}"
  status: OK
  stderr: b''
  stdout: b''
- exit_code: 0
  program: "import std.typecons;\nimport std.math;\n/*\n Return a greatest common\
    \ divisor of two integers a and b\n    >>> greatest_common_divisor(3L, 5L)\n \
    \   1L\n    >>> greatest_common_divisor(25L, 15L)\n    5L\n    \n*/\nlong greatest_common_divisor(long\
    \ a, long b) \n{\n    if (a < b)\n        return greatest_common_divisor(b, a);\n\
    \    if (b == 0)\n        return a;\n    return greatest_common_divisor(b, a %\
    \ b);\n}\nunittest\n{\n    alias candidate = greatest_common_divisor;\n\n    assert(candidate(3L,\
    \ 7L) == 1L);\n    assert(candidate(10L, 15L) == 5L);\n    assert(candidate(49L,\
    \ 14L) == 7L);\n    assert(candidate(144L, 60L) == 12L);\n}\nvoid main(){}"
  status: OK
  stderr: b''
  stdout: b''
- exit_code: 1
  program: "import std.typecons;\nimport std.math;\n/*\n Return a greatest common\
    \ divisor of two integers a and b\n    >>> greatest_common_divisor(3L, 5L)\n \
    \   1L\n    >>> greatest_common_divisor(25L, 15L)\n    5L\n    \n*/\nlong greatest_common_divisor(long\
    \ a, long b) \n{\n    if (a == 0L)\n        return b;\n    if (b == 0L)\n    \
    \    return a;\n    if (a == b)\n        return a;\n    if (a == 1L || b == 1L)\n\
    \        return 1L;\n    if (a % 2L == 0L && b % 2L == 0L)\n        return 2L\
    \ * greatest_common_divisor(a / 2L, b / 2L);\n    if (a % 2L == 0L && b % 2L !=\
    \ 0L)\n        return greatest_common_divisor(a / 2L, b);\n    if (a % 2L != 0L\
    \ && b % 2L == 0L)\n        return greatest_common_divisor(a, b / 2L);\n    return\
    \ greatest_common_divisor(abs(a - b), min(a, b));\n}\nunittest\n{\n    alias candidate\
    \ = greatest_common_divisor;\n\n    assert(candidate(3L, 7L) == 1L);\n    assert(candidate(10L,\
    \ 15L) == 5L);\n    assert(candidate(49L, 14L) == 7L);\n    assert(candidate(144L,\
    \ 60L) == 12L);\n}\nvoid main(){}"
  status: SyntaxError
  stderr: 'b''Error: cannot find source code for runtime library file \''object.d\''\n       dmd
    might not be correctly installed. Run \''dmd -man\'' for installation instructions.\nimport
    path[0] = /tmp\nFailed: ["dmd", "-unittest", "-v", "-o-", "/tmp/tmpk0hvzr40.d",
    "-I/tmp"]\n'''
  stdout: b''
  timestamp: 1659794497
- exit_code: 1
  program: "import std.typecons;\nimport std.math;\n/*\n Return a greatest common\
    \ divisor of two integers a and b\n    >>> greatest_common_divisor(3L, 5L)\n \
    \   1L\n    >>> greatest_common_divisor(25L, 15L)\n    5L\n    \n*/\nlong greatest_common_divisor(long\
    \ a, long b) \n{\n    long c;\n    while (b != 0) {\n        c = a % b;\n    \
    \    a = b;\n        b = c;\n    }\n    return a;\n}\nunittest\n{\n    alias candidate\
    \ = greatest_common_divisor;\n\n    assert(candidate(3L, 7L) == 1L);\n    assert(candidate(10L,\
    \ 15L) == 5L);\n    assert(candidate(49L, 14L) == 7L);\n    assert(candidate(144L,\
    \ 60L) == 12L);\n}\nvoid main(){}"
  status: SyntaxError
  stderr: 'b''Error: cannot find source code for runtime library file \''object.d\''\n       dmd
    might not be correctly installed. Run \''dmd -man\'' for installation instructions.\nimport
    path[0] = /tmp\nFailed: ["dmd", "-unittest", "-v", "-o-", "/tmp/tmp50rmvoei.d",
    "-I/tmp"]\n'''
  stdout: b''
  timestamp: 1659794497
- exit_code: 1
  program: "import std.typecons;\nimport std.math;\n/*\n Return a greatest common\
    \ divisor of two integers a and b\n    >>> greatest_common_divisor(3L, 5L)\n \
    \   1L\n    >>> greatest_common_divisor(25L, 15L)\n    5L\n    \n*/\nlong greatest_common_divisor(long\
    \ a, long b) \n{\n    if (a == 0)\n        return b;\n    else if (b == 0)\n \
    \       return a;\n    else\n        return greatest_common_divisor(b, a % b);\n\
    }\nunittest\n{\n    alias candidate = greatest_common_divisor;\n\n    assert(candidate(3L,\
    \ 7L) == 1L);\n    assert(candidate(10L, 15L) == 5L);\n    assert(candidate(49L,\
    \ 14L) == 7L);\n    assert(candidate(144L, 60L) == 12L);\n}\nvoid main(){}"
  status: SyntaxError
  stderr: 'b''Error: cannot find source code for runtime library file \''object.d\''\n       dmd
    might not be correctly installed. Run \''dmd -man\'' for installation instructions.\nimport
    path[0] = /tmp\nFailed: ["dmd", "-unittest", "-v", "-o-", "/tmp/tmpls5o8zpr.d",
    "-I/tmp"]\n'''
  stdout: b''
  timestamp: 1659794497
- exit_code: 1
  program: "import std.typecons;\nimport std.math;\n/*\n Return a greatest common\
    \ divisor of two integers a and b\n    >>> greatest_common_divisor(3L, 5L)\n \
    \   1L\n    >>> greatest_common_divisor(25L, 15L)\n    5L\n    \n*/\nlong greatest_common_divisor(long\
    \ a, long b) \n{\n    long c;\n    while (a != 0) \n    {\n        c = a; \n \
    \       a = b % a;  \n        b = c;\n    }\n    return b;\n}\nunittest\n{\n \
    \   alias candidate = greatest_common_divisor;\n\n    assert(candidate(3L, 7L)\
    \ == 1L);\n    assert(candidate(10L, 15L) == 5L);\n    assert(candidate(49L, 14L)\
    \ == 7L);\n    assert(candidate(144L, 60L) == 12L);\n}\nvoid main(){}"
  status: SyntaxError
  stderr: 'b''Error: cannot find source code for runtime library file \''object.d\''\n       dmd
    might not be correctly installed. Run \''dmd -man\'' for installation instructions.\nimport
    path[0] = /tmp\nFailed: ["dmd", "-unittest", "-v", "-o-", "/tmp/tmp65k90wfb.d",
    "-I/tmp"]\n'''
  stdout: b''
  timestamp: 1659794497
- exit_code: 1
  program: "import std.typecons;\nimport std.math;\n/*\n Return a greatest common\
    \ divisor of two integers a and b\n    >>> greatest_common_divisor(3L, 5L)\n \
    \   1L\n    >>> greatest_common_divisor(25L, 15L)\n    5L\n    \n*/\nlong greatest_common_divisor(long\
    \ a, long b) \n{\n    if (b == 0)\n        return a;\n    else\n        return\
    \ greatest_common_divisor(b, a % b);\n}\nunittest\n{\n    alias candidate = greatest_common_divisor;\n\
    \n    assert(candidate(3L, 7L) == 1L);\n    assert(candidate(10L, 15L) == 5L);\n\
    \    assert(candidate(49L, 14L) == 7L);\n    assert(candidate(144L, 60L) == 12L);\n\
    }\nvoid main(){}"
  status: SyntaxError
  stderr: 'b''Error: cannot find source code for runtime library file \''object.d\''\n       dmd
    might not be correctly installed. Run \''dmd -man\'' for installation instructions.\nimport
    path[0] = /tmp\nFailed: ["dmd", "-unittest", "-v", "-o-", "/tmp/tmpd2a_90wj.d",
    "-I/tmp"]\n'''
  stdout: b''
  timestamp: 1659794497
- exit_code: 0
  program: "import std.typecons;\nimport std.math;\n/*\n Return a greatest common\
    \ divisor of two integers a and b\n    >>> greatest_common_divisor(3L, 5L)\n \
    \   1L\n    >>> greatest_common_divisor(25L, 15L)\n    5L\n    \n*/\nlong greatest_common_divisor(long\
    \ a, long b) \n{\n    if (a == 0L)\n        return b;\n    if (b == 0L)\n    \
    \    return a;\n    if (a == b)\n        return a;\n    if (a == 1L || b == 1L)\n\
    \        return 1L;\n    if (a % 2L == 0L && b % 2L == 0L)\n        return 2L\
    \ * greatest_common_divisor(a / 2L, b / 2L);\n    if (a % 2L == 0L && b % 2L !=\
    \ 0L)\n        return greatest_common_divisor(a / 2L, b);\n    if (a % 2L != 0L\
    \ && b % 2L == 0L)\n        return greatest_common_divisor(a, b / 2L);\n    if\
    \ (a % 2L != 0L && b % 2L != 0L && a < b)\n        return greatest_common_divisor((b\
    \ - a) / 2L, a);\n    if (a % 2L != 0L && b % 2L != 0L && a > b)\n        return\
    \ greatest_common_divisor((a - b) / 2L, b);\n    return 1L;\n}\nunittest\n{\n\
    \    alias candidate = greatest_common_divisor;\n\n    assert(candidate(3L, 7L)\
    \ == 1L);\n    assert(candidate(10L, 15L) == 5L);\n    assert(candidate(49L, 14L)\
    \ == 7L);\n    assert(candidate(144L, 60L) == 12L);\n}\nvoid main(){}"
  status: OK
  stderr: b''
  stdout: b''
- exit_code: 0
  program: "import std.typecons;\nimport std.math;\n/*\n Return a greatest common\
    \ divisor of two integers a and b\n    >>> greatest_common_divisor(3L, 5L)\n \
    \   1L\n    >>> greatest_common_divisor(25L, 15L)\n    5L\n    \n*/\nlong greatest_common_divisor(long\
    \ a, long b) \n{\n    if (a < b)\n        return greatest_common_divisor(b, a);\n\
    \    if (b == 0)\n        return a;\n    return greatest_common_divisor(b, a %\
    \ b);\n}\nunittest\n{\n    alias candidate = greatest_common_divisor;\n\n    assert(candidate(3L,\
    \ 7L) == 1L);\n    assert(candidate(10L, 15L) == 5L);\n    assert(candidate(49L,\
    \ 14L) == 7L);\n    assert(candidate(144L, 60L) == 12L);\n}\nvoid main(){}"
  status: OK
  stderr: b''
  stdout: b''
- exit_code: 1
  program: "import std.typecons;\nimport std.math;\n/*\n Return a greatest common\
    \ divisor of two integers a and b\n    >>> greatest_common_divisor(3L, 5L)\n \
    \   1L\n    >>> greatest_common_divisor(25L, 15L)\n    5L\n    \n*/\nlong greatest_common_divisor(long\
    \ a, long b) \n{\n    if (a == 0L)\n        return b;\n    if (b == 0L)\n    \
    \    return a;\n    if (a == b)\n        return a;\n    if (a == 1L || b == 1L)\n\
    \        return 1L;\n    if (a % 2L == 0L && b % 2L == 0L)\n        return 2L\
    \ * greatest_common_divisor(a / 2L, b / 2L);\n    if (a % 2L == 0L && b % 2L !=\
    \ 0L)\n        return greatest_common_divisor(a / 2L, b);\n    if (a % 2L != 0L\
    \ && b % 2L == 0L)\n        return greatest_common_divisor(a, b / 2L);\n    if\
    \ (a > b)\n        return greatest_common_divisor((a - b) / 2L, b);\n    return\
    \ greatest_common_divisor((b - a) / 2L, a);\n}\nunittest\n{\n    alias candidate\
    \ = greatest_common_divisor;\n\n    assert(candidate(3L, 7L) == 1L);\n    assert(candidate(10L,\
    \ 15L) == 5L);\n    assert(candidate(49L, 14L) == 7L);\n    assert(candidate(144L,\
    \ 60L) == 12L);\n}\nvoid main(){}"
  status: SyntaxError
  stderr: 'b''Error: cannot find source code for runtime library file \''object.d\''\n       dmd
    might not be correctly installed. Run \''dmd -man\'' for installation instructions.\nimport
    path[0] = /tmp\nFailed: ["dmd", "-unittest", "-v", "-o-", "/tmp/tmp6nzy57d4.d",
    "-I/tmp"]\n'''
  stdout: b''
  timestamp: 1659794497
- exit_code: 0
  program: "import std.typecons;\nimport std.math;\n/*\n Return a greatest common\
    \ divisor of two integers a and b\n    >>> greatest_common_divisor(3L, 5L)\n \
    \   1L\n    >>> greatest_common_divisor(25L, 15L)\n    5L\n    \n*/\nlong greatest_common_divisor(long\
    \ a, long b) \n{\n    if (a == 0L)\n        return b;\n    if (b == 0L)\n    \
    \    return a;\n    if (a == b)\n        return a;\n    if (a > b)\n        return\
    \ greatest_common_divisor(a - b, b);\n    return greatest_common_divisor(a, b\
    \ - a);\n}\nunittest\n{\n    alias candidate = greatest_common_divisor;\n\n  \
    \  assert(candidate(3L, 7L) == 1L);\n    assert(candidate(10L, 15L) == 5L);\n\
    \    assert(candidate(49L, 14L) == 7L);\n    assert(candidate(144L, 60L) == 12L);\n\
    }\nvoid main(){}"
  status: OK
  stderr: b''
  stdout: b''
- exit_code: 1
  program: "import std.typecons;\nimport std.math;\n/*\n Return a greatest common\
    \ divisor of two integers a and b\n    >>> greatest_common_divisor(3L, 5L)\n \
    \   1L\n    >>> greatest_common_divisor(25L, 15L)\n    5L\n    \n*/\nlong greatest_common_divisor(long\
    \ a, long b) \n{\n    if (a == 0L)\n        return b;\n    if (b == 0L)\n    \
    \    return a;\n    if (a > b)\n        return greatest_common_divisor(a % b,\
    \ b);\n    else\n        return greatest_common_divisor(a, b % a);\n}\nunittest\n\
    {\n    alias candidate = greatest_common_divisor;\n\n    assert(candidate(3L,\
    \ 7L) == 1L);\n    assert(candidate(10L, 15L) == 5L);\n    assert(candidate(49L,\
    \ 14L) == 7L);\n    assert(candidate(144L, 60L) == 12L);\n}\nvoid main(){}"
  status: SyntaxError
  stderr: 'b''Error: cannot find source code for runtime library file \''object.d\''\n       dmd
    might not be correctly installed. Run \''dmd -man\'' for installation instructions.\nimport
    path[0] = /tmp\nFailed: ["dmd", "-unittest", "-v", "-o-", "/tmp/tmp3844selc.d",
    "-I/tmp"]\n'''
  stdout: b''
  timestamp: 1659794497
- exit_code: 1
  program: "import std.typecons;\nimport std.math;\n/*\n Return a greatest common\
    \ divisor of two integers a and b\n    >>> greatest_common_divisor(3L, 5L)\n \
    \   1L\n    >>> greatest_common_divisor(25L, 15L)\n    5L\n    \n*/\nlong greatest_common_divisor(long\
    \ a, long b) \n{\n    while (b != 0) \n    {\n        long t = b;\n        b =\
    \ a % b;\n        a = t;\n    }\n    return a;\n}\nunittest\n{\n    alias candidate\
    \ = greatest_common_divisor;\n\n    assert(candidate(3L, 7L) == 1L);\n    assert(candidate(10L,\
    \ 15L) == 5L);\n    assert(candidate(49L, 14L) == 7L);\n    assert(candidate(144L,\
    \ 60L) == 12L);\n}\nvoid main(){}"
  status: SyntaxError
  stderr: 'b''Error: cannot find source code for runtime library file \''object.d\''\n       dmd
    might not be correctly installed. Run \''dmd -man\'' for installation instructions.\nimport
    path[0] = /tmp\nFailed: ["dmd", "-unittest", "-v", "-o-", "/tmp/tmpxppmwc1c.d",
    "-I/tmp"]\n'''
  stdout: b''
  timestamp: 1659794497
- exit_code: 1
  program: "import std.typecons;\nimport std.math;\n/*\n Return a greatest common\
    \ divisor of two integers a and b\n    >>> greatest_common_divisor(3L, 5L)\n \
    \   1L\n    >>> greatest_common_divisor(25L, 15L)\n    5L\n    \n*/\nlong greatest_common_divisor(long\
    \ a, long b) \n{\n    if (a == 0L)\n        return b;\n    if (b == 0L)\n    \
    \    return a;\n    if (a == b)\n        return a;\n    if (a == 1L || b == 1L)\n\
    \        return 1L;\n    if (a % 2L == 0L && b % 2L == 0L)\n        return 2L\
    \ * greatest_common_divisor(a / 2L, b / 2L);\n    if (a % 2L == 0L && b % 2L !=\
    \ 0L)\n        return greatest_common_divisor(a / 2L, b);\n    if (a % 2L != 0L\
    \ && b % 2L == 0L)\n        return greatest_common_divisor(a, b / 2L);\n    if\
    \ (a > b)\n        return greatest_common_divisor((a - b) / 2L, b);\n    return\
    \ greatest_common_divisor((b - a) / 2L, a);\n}\nunittest\n{\n    alias candidate\
    \ = greatest_common_divisor;\n\n    assert(candidate(3L, 7L) == 1L);\n    assert(candidate(10L,\
    \ 15L) == 5L);\n    assert(candidate(49L, 14L) == 7L);\n    assert(candidate(144L,\
    \ 60L) == 12L);\n}\nvoid main(){}"
  status: SyntaxError
  stderr: 'b''Error: cannot find source code for runtime library file \''object.d\''\n       dmd
    might not be correctly installed. Run \''dmd -man\'' for installation instructions.\nimport
    path[0] = /tmp\nFailed: ["dmd", "-unittest", "-v", "-o-", "/tmp/tmp6nzy57d4.d",
    "-I/tmp"]\n'''
  stdout: b''
  timestamp: 1659794497
- exit_code: 1
  program: "import std.typecons;\nimport std.math;\n/*\n Return a greatest common\
    \ divisor of two integers a and b\n    >>> greatest_common_divisor(3L, 5L)\n \
    \   1L\n    >>> greatest_common_divisor(25L, 15L)\n    5L\n    \n*/\nlong greatest_common_divisor(long\
    \ a, long b) \n{\n    if (a == 0)\n        return b;\n    if (b == 0)\n      \
    \  return a;\n    if (a == b)\n        return a;\n    if (a == 1 || b == 1)\n\
    \        return 1;\n    if ((a & 1) == 0)\n        return (b & 1) != 0 ? greatest_common_divisor(a\
    \ >> 1, b) : greatest_common_divisor(a >> 1, b >> 1) << 1;\n    else if ((b &\
    \ 1) == 0)\n        return greatest_common_divisor(a, b >> 1);\n    else\n   \
    \     return a > b ? greatest_common_divisor((a - b) >> 1, b) : greatest_common_divisor((b\
    \ - a) >> 1, a);\n}\nunittest\n{\n    alias candidate = greatest_common_divisor;\n\
    \n    assert(candidate(3L, 7L) == 1L);\n    assert(candidate(10L, 15L) == 5L);\n\
    \    assert(candidate(49L, 14L) == 7L);\n    assert(candidate(144L, 60L) == 12L);\n\
    }\nvoid main(){}"
  status: SyntaxError
  stderr: 'b''Error: cannot find source code for runtime library file \''object.d\''\n       dmd
    might not be correctly installed. Run \''dmd -man\'' for installation instructions.\nimport
    path[0] = /tmp\nFailed: ["dmd", "-unittest", "-v", "-o-", "/tmp/tmp0ewc06r3.d",
    "-I/tmp"]\n'''
  stdout: b''
  timestamp: 1659794497
- exit_code: 1
  program: "import std.typecons;\nimport std.math;\n/*\n Return a greatest common\
    \ divisor of two integers a and b\n    >>> greatest_common_divisor(3L, 5L)\n \
    \   1L\n    >>> greatest_common_divisor(25L, 15L)\n    5L\n    \n*/\nlong greatest_common_divisor(long\
    \ a, long b) \n{\n    long c;\n    while (a != 0) \n    {\n        c = a; \n \
    \       a = b % a;  \n        b = c;\n    }\n    return b;\n}\nunittest\n{\n \
    \   alias candidate = greatest_common_divisor;\n\n    assert(candidate(3L, 7L)\
    \ == 1L);\n    assert(candidate(10L, 15L) == 5L);\n    assert(candidate(49L, 14L)\
    \ == 7L);\n    assert(candidate(144L, 60L) == 12L);\n}\nvoid main(){}"
  status: SyntaxError
  stderr: 'b''Error: cannot find source code for runtime library file \''object.d\''\n       dmd
    might not be correctly installed. Run \''dmd -man\'' for installation instructions.\nimport
    path[0] = /tmp\nFailed: ["dmd", "-unittest", "-v", "-o-", "/tmp/tmp65k90wfb.d",
    "-I/tmp"]\n'''
  stdout: b''
  timestamp: 1659794497
- exit_code: 0
  program: "import std.typecons;\nimport std.math;\n/*\n Return a greatest common\
    \ divisor of two integers a and b\n    >>> greatest_common_divisor(3L, 5L)\n \
    \   1L\n    >>> greatest_common_divisor(25L, 15L)\n    5L\n    \n*/\nlong greatest_common_divisor(long\
    \ a, long b) \n{\n    if (a == 0L)\n        return b;\n    if (b == 0L)\n    \
    \    return a;\n    return greatest_common_divisor(b, a % b);\n}\nunittest\n{\n\
    \    alias candidate = greatest_common_divisor;\n\n    assert(candidate(3L, 7L)\
    \ == 1L);\n    assert(candidate(10L, 15L) == 5L);\n    assert(candidate(49L, 14L)\
    \ == 7L);\n    assert(candidate(144L, 60L) == 12L);\n}\nvoid main(){}"
  status: OK
  stderr: b''
  stdout: b''
- exit_code: 0
  program: "import std.typecons;\nimport std.math;\n/*\n Return a greatest common\
    \ divisor of two integers a and b\n    >>> greatest_common_divisor(3L, 5L)\n \
    \   1L\n    >>> greatest_common_divisor(25L, 15L)\n    5L\n    \n*/\nlong greatest_common_divisor(long\
    \ a, long b) \n{\n    if (a < b) \n    {\n        return greatest_common_divisor(b,\
    \ a);\n    }\n    if (b == 0) \n    {\n        return a;\n    }\n    return greatest_common_divisor(b,\
    \ a % b);\n}\nunittest\n{\n    alias candidate = greatest_common_divisor;\n\n\
    \    assert(candidate(3L, 7L) == 1L);\n    assert(candidate(10L, 15L) == 5L);\n\
    \    assert(candidate(49L, 14L) == 7L);\n    assert(candidate(144L, 60L) == 12L);\n\
    }\nvoid main(){}"
  status: OK
  stderr: b''
  stdout: b''
- exit_code: 1
  program: "import std.typecons;\nimport std.math;\n/*\n Return a greatest common\
    \ divisor of two integers a and b\n    >>> greatest_common_divisor(3L, 5L)\n \
    \   1L\n    >>> greatest_common_divisor(25L, 15L)\n    5L\n    \n*/\nlong greatest_common_divisor(long\
    \ a, long b) \n{\n    if (a == 0L)\n        return b;\n    if (b == 0L)\n    \
    \    return a;\n    if (a == b)\n        return a;\n    if (a == 1L || b == 1L)\n\
    \        return 1L;\n    if (a % 2L == 0L && b % 2L == 0L)\n        return 2L\
    \ * greatest_common_divisor(a / 2L, b / 2L);\n    if (a % 2L == 0L && b % 2L !=\
    \ 0L)\n        return greatest_common_divisor(a / 2L, b);\n    if (a % 2L != 0L\
    \ && b % 2L == 0L)\n        return greatest_common_divisor(a, b / 2L);\n    return\
    \ greatest_common_divisor(abs(a - b), min(a, b));\n}\nunittest\n{\n    alias candidate\
    \ = greatest_common_divisor;\n\n    assert(candidate(3L, 7L) == 1L);\n    assert(candidate(10L,\
    \ 15L) == 5L);\n    assert(candidate(49L, 14L) == 7L);\n    assert(candidate(144L,\
    \ 60L) == 12L);\n}\nvoid main(){}"
  status: SyntaxError
  stderr: 'b''Error: cannot find source code for runtime library file \''object.d\''\n       dmd
    might not be correctly installed. Run \''dmd -man\'' for installation instructions.\nimport
    path[0] = /tmp\nFailed: ["dmd", "-unittest", "-v", "-o-", "/tmp/tmpk0hvzr40.d",
    "-I/tmp"]\n'''
  stdout: b''
  timestamp: 1659794497
- exit_code: 1
  program: "import std.typecons;\nimport std.math;\n/*\n Return a greatest common\
    \ divisor of two integers a and b\n    >>> greatest_common_divisor(3L, 5L)\n \
    \   1L\n    >>> greatest_common_divisor(25L, 15L)\n    5L\n    \n*/\nlong greatest_common_divisor(long\
    \ a, long b) \n{\n    if (a == 0L)\n        return b;\n    if (b == 0L)\n    \
    \    return a;\n    if (a == b)\n        return a;\n    if (a == 1L || b == 1L)\n\
    \        return 1L;\n    if (a % 2L == 0L && b % 2L == 0L)\n        return 2L\
    \ * greatest_common_divisor(a / 2L, b / 2L);\n    if (a % 2L == 0L && b % 2L !=\
    \ 0L)\n        return greatest_common_divisor(a / 2L, b);\n    if (a % 2L != 0L\
    \ && b % 2L == 0L)\n        return greatest_common_divisor(a, b / 2L);\n    if\
    \ (a > b)\n        return greatest_common_divisor((a - b) / 2L, b);\n    else\n\
    \        return greatest_common_divisor((b - a) / 2L, a);\n}\nunittest\n{\n  \
    \  alias candidate = greatest_common_divisor;\n\n    assert(candidate(3L, 7L)\
    \ == 1L);\n    assert(candidate(10L, 15L) == 5L);\n    assert(candidate(49L, 14L)\
    \ == 7L);\n    assert(candidate(144L, 60L) == 12L);\n}\nvoid main(){}"
  status: SyntaxError
  stderr: 'b''Error: cannot find source code for runtime library file \''object.d\''\n       dmd
    might not be correctly installed. Run \''dmd -man\'' for installation instructions.\nimport
    path[0] = /tmp\nFailed: ["dmd", "-unittest", "-v", "-o-", "/tmp/tmpky8pktcj.d",
    "-I/tmp"]\n'''
  stdout: b''
  timestamp: 1659794497
- exit_code: 1
  program: "import std.typecons;\nimport std.math;\n/*\n Return a greatest common\
    \ divisor of two integers a and b\n    >>> greatest_common_divisor(3L, 5L)\n \
    \   1L\n    >>> greatest_common_divisor(25L, 15L)\n    5L\n    \n*/\nlong greatest_common_divisor(long\
    \ a, long b) \n{\n    if (a == 0L) return b;\n    if (b == 0L) return a;\n   \
    \ if (a < 0L) a = -a;\n    if (b < 0L) b = -b;\n    while (a != b) {\n       \
    \ if (a > b) a -= b;\n        else b -= a;\n    }\n    return a;\n}\nunittest\n\
    {\n    alias candidate = greatest_common_divisor;\n\n    assert(candidate(3L,\
    \ 7L) == 1L);\n    assert(candidate(10L, 15L) == 5L);\n    assert(candidate(49L,\
    \ 14L) == 7L);\n    assert(candidate(144L, 60L) == 12L);\n}\nvoid main(){}"
  status: SyntaxError
  stderr: 'b''Error: cannot find source code for runtime library file \''object.d\''\n       dmd
    might not be correctly installed. Run \''dmd -man\'' for installation instructions.\nimport
    path[0] = /tmp\nFailed: ["dmd", "-unittest", "-v", "-o-", "/tmp/tmp1cb92tvd.d",
    "-I/tmp"]\n'''
  stdout: b''
  timestamp: 1659794497
- exit_code: 1
  program: "import std.typecons;\nimport std.math;\n/*\n Return a greatest common\
    \ divisor of two integers a and b\n    >>> greatest_common_divisor(3L, 5L)\n \
    \   1L\n    >>> greatest_common_divisor(25L, 15L)\n    5L\n    \n*/\nlong greatest_common_divisor(long\
    \ a, long b) \n{\n    if (a == 0L)\n        return b;\n    if (b == 0L)\n    \
    \    return a;\n    if (a == b)\n        return a;\n    if (a == 1L || b == 1L)\n\
    \        return 1L;\n    if (a % 2L == 0L && b % 2L == 0L)\n        return 2L\
    \ * greatest_common_divisor(a / 2L, b / 2L);\n    if (a % 2L == 0L && b % 2L !=\
    \ 0L)\n        return greatest_common_divisor(a / 2L, b);\n    if (a % 2L != 0L\
    \ && b % 2L == 0L)\n        return greatest_common_divisor(a, b / 2L);\n    if\
    \ (a % 2L != 0L && b % 2L != 0L && a < b)\n        return greatest_common_divisor((b\
    \ - a) / 2L, a);\n    if (a % 2L != 0L && b % 2L != 0L && a > b)\n        return\
    \ greatest_common_divisor((a - b) / 2L, b);\n    return 1L;\n}\n/*\n Return a\
    \ least common multiple of two integers a and b\n    >>> least_common_multiple(3L,\
    \ 5L)\n    15L\n    >>> least_common_multiple(25L, 15L)\n    75L\n    \n*/\nlong\
    \ least_common_multiple(long a, long b) \n{\n    return a * b / greatest_common_divisor(a,\
    \ b);\n}\n/*\n Return a greatest common divisor of two integers a and b\n    >>>\
    \ greatest_common_divisor(3L, 5L)\n    1L\n    >>> greatest_common_divisor(25L,\
    \ 15L)\n    5L\n    \n*/\nlong greatest_common_divisor(long a, long b) \n{\n \
    \   if (a == 0L)\n        return b;\n    if (b == 0L)\n        return a;\n   \
    \ if (a == b)\n        return a;\n    if (a == 1L || b == 1L)\n\nunittest\n{\n\
    \    alias candidate = greatest_common_divisor;\n\n    assert(candidate(3L, 7L)\
    \ == 1L);\n    assert(candidate(10L, 15L) == 5L);\n    assert(candidate(49L, 14L)\
    \ == 7L);\n    assert(candidate(144L, 60L) == 12L);\n}\nvoid main(){}"
  status: SyntaxError
  stderr: 'b''/tmp/tmpys7o87da.d(63): Error: found \''unittest\'' instead of statement\nFailed:
    ["dmd", "-unittest", "-v", "-o-", "/tmp/tmpys7o87da.d", "-I/tmp"]\n'''
  stdout: b''
  timestamp: 1659794497
- exit_code: 1
  program: "import std.typecons;\nimport std.math;\n/*\n Return a greatest common\
    \ divisor of two integers a and b\n    >>> greatest_common_divisor(3L, 5L)\n \
    \   1L\n    >>> greatest_common_divisor(25L, 15L)\n    5L\n    \n*/\nlong greatest_common_divisor(long\
    \ a, long b) \n{\n    if (a == 0L)\n        return b;\n    if (b == 0L)\n    \
    \    return a;\n    if (a == b)\n        return a;\n    if (a == 1L || b == 1L)\n\
    \        return 1L;\n    if (a % 2L == 0L && b % 2L == 0L)\n        return 2L\
    \ * greatest_common_divisor(a / 2L, b / 2L);\n    if (a % 2L == 0L && b % 2L !=\
    \ 0L)\n        return greatest_common_divisor(a / 2L, b);\n    if (a % 2L != 0L\
    \ && b % 2L == 0L)\n        return greatest_common_divisor(a, b / 2L);\n    if\
    \ (a % 2L != 0L && b % 2L != 0L && a < b)\n        return greatest_common_divisor((b\
    \ - a) / 2L, a);\n    if (a % 2L != 0L && b % 2L != 0L && a > b)\n        return\
    \ greatest_common_divisor((a - b) / 2L, b);\n    return 0L;\n}\n/*\n Return a\
    \ least common multiple of two integers a and b\n    >>> least_common_multiple(3L,\
    \ 5L)\n    15L\n    >>> least_common_multiple(25L, 15L)\n    75L\n*/\nlong least_common_multiple(long\
    \ a, long b) \n{\n    return a * b / greatest_common_divisor(a, b);\n}\n/*\n Return\
    \ a least common multiple of a list of integers\n    >>> least_common_multiple([3L,\
    \ 5L, 7L])\n    105L\n    >>> least_common_multiple([25L, 15L, 75L])\n    225L\n\
    */\nlong least_common_multiple(in long[] a) \n{\n    long result = 1L;\n    foreach\
    \ (i; a)\n        result = least_common_multiple(result, i);\n    return result;\n\
    }\n/*\n Return a greatest common divisor of a list of integers\n    >>> greatest_common_divisor([\n\
    unittest\n{\n    alias candidate = greatest_common_divisor;\n\n    assert(candidate(3L,\
    \ 7L) == 1L);\n    assert(candidate(10L, 15L) == 5L);\n    assert(candidate(49L,\
    \ 14L) == 7L);\n    assert(candidate(144L, 60L) == 12L);\n}\nvoid main(){}"
  status: SyntaxError
  stderr: 'b''/tmp/tmpw0m8t5si.d(58): Error: unterminated /* */ comment\nFailed: ["dmd",
    "-unittest", "-v", "-o-", "/tmp/tmpw0m8t5si.d", "-I/tmp"]\n'''
  stdout: b''
  timestamp: 1659794497
- exit_code: 1
  program: "import std.typecons;\nimport std.math;\n/*\n Return a greatest common\
    \ divisor of two integers a and b\n    >>> greatest_common_divisor(3L, 5L)\n \
    \   1L\n    >>> greatest_common_divisor(25L, 15L)\n    5L\n    \n*/\nlong greatest_common_divisor(long\
    \ a, long b) \n{\n    while (b != 0) \n    {\n        long t = b;\n        b =\
    \ a % b;\n        a = t;\n    }\n    return a;\n}\nunittest\n{\n    alias candidate\
    \ = greatest_common_divisor;\n\n    assert(candidate(3L, 7L) == 1L);\n    assert(candidate(10L,\
    \ 15L) == 5L);\n    assert(candidate(49L, 14L) == 7L);\n    assert(candidate(144L,\
    \ 60L) == 12L);\n}\nvoid main(){}"
  status: SyntaxError
  stderr: 'b''Error: cannot find source code for runtime library file \''object.d\''\n       dmd
    might not be correctly installed. Run \''dmd -man\'' for installation instructions.\nimport
    path[0] = /tmp\nFailed: ["dmd", "-unittest", "-v", "-o-", "/tmp/tmpxppmwc1c.d",
    "-I/tmp"]\n'''
  stdout: b''
  timestamp: 1659794497
- exit_code: 1
  program: "import std.typecons;\nimport std.math;\n/*\n Return a greatest common\
    \ divisor of two integers a and b\n    >>> greatest_common_divisor(3L, 5L)\n \
    \   1L\n    >>> greatest_common_divisor(25L, 15L)\n    5L\n    \n*/\nlong greatest_common_divisor(long\
    \ a, long b) \n{\n    if (a == 0L)\n        return b;\n    if (b == 0L)\n    \
    \    return a;\n    if (a == b)\n        return a;\n    if (a == 1L || b == 1L)\n\
    \        return 1L;\n    if (a == 2L || b == 2L)\n        return 1L;\n    if (a\
    \ % 2L == 0L && b % 2L == 0L)\n        return 2L * greatest_common_divisor(a /\
    \ 2L, b / 2L);\n    if (a % 2L == 0L)\n        return greatest_common_divisor(a\
    \ / 2L, b);\n    if (b % 2L == 0L)\n        return greatest_common_divisor(a,\
    \ b / 2L);\n    return greatest_common_divisor(abs(a - b), min(a, b));\n}\nunittest\n\
    {\n    alias candidate = greatest_common_divisor;\n\n    assert(candidate(3L,\
    \ 7L) == 1L);\n    assert(candidate(10L, 15L) == 5L);\n    assert(candidate(49L,\
    \ 14L) == 7L);\n    assert(candidate(144L, 60L) == 12L);\n}\nvoid main(){}"
  status: SyntaxError
  stderr: 'b''Error: cannot find source code for runtime library file \''object.d\''\n       dmd
    might not be correctly installed. Run \''dmd -man\'' for installation instructions.\nimport
    path[0] = /tmp\nFailed: ["dmd", "-unittest", "-v", "-o-", "/tmp/tmpif8m57_4.d",
    "-I/tmp"]\n'''
  stdout: b''
  timestamp: 1659794497
- exit_code: 1
  program: "import std.typecons;\nimport std.math;\n/*\n Return a greatest common\
    \ divisor of two integers a and b\n    >>> greatest_common_divisor(3L, 5L)\n \
    \   1L\n    >>> greatest_common_divisor(25L, 15L)\n    5L\n    \n*/\nlong greatest_common_divisor(long\
    \ a, long b) \n{\n    while (a != 0 && b != 0) \n    {\n        if (a > b) \n\
    \        {\n            a %= b;\n        } \n        else \n        {\n      \
    \      b %= a;\n        }\n    }\n    return a + b;\n}\nunittest\n{\n    alias\
    \ candidate = greatest_common_divisor;\n\n    assert(candidate(3L, 7L) == 1L);\n\
    \    assert(candidate(10L, 15L) == 5L);\n    assert(candidate(49L, 14L) == 7L);\n\
    \    assert(candidate(144L, 60L) == 12L);\n}\nvoid main(){}"
  status: SyntaxError
  stderr: 'b''Error: cannot find source code for runtime library file \''object.d\''\n       dmd
    might not be correctly installed. Run \''dmd -man\'' for installation instructions.\nimport
    path[0] = /tmp\nFailed: ["dmd", "-unittest", "-v", "-o-", "/tmp/tmp7pl_9dqq.d",
    "-I/tmp"]\n'''
  stdout: b''
  timestamp: 1659794497
- exit_code: 1
  program: "import std.typecons;\nimport std.math;\n/*\n Return a greatest common\
    \ divisor of two integers a and b\n    >>> greatest_common_divisor(3L, 5L)\n \
    \   1L\n    >>> greatest_common_divisor(25L, 15L)\n    5L\n    \n*/\nlong greatest_common_divisor(long\
    \ a, long b) \n{\n    if (a == 0L)\n        return b;\n    if (b == 0L)\n    \
    \    return a;\n    if (a == b)\n        return a;\n    if (a == 1L || b == 1L)\n\
    \        return 1L;\n    if (a % 2L == 0L && b % 2L == 0L)\n        return 2L\
    \ * greatest_common_divisor(a / 2L, b / 2L);\n    if (a % 2L == 0L && b % 2L !=\
    \ 0L)\n        return greatest_common_divisor(a / 2L, b);\n    if (a % 2L != 0L\
    \ && b % 2L == 0L)\n        return greatest_common_divisor(a, b / 2L);\n    if\
    \ (a > b)\n        return greatest_common_divisor((a - b) / 2L, b);\n    return\
    \ greatest_common_divisor((b - a) / 2L, a);\n}\nunittest\n{\n    alias candidate\
    \ = greatest_common_divisor;\n\n    assert(candidate(3L, 7L) == 1L);\n    assert(candidate(10L,\
    \ 15L) == 5L);\n    assert(candidate(49L, 14L) == 7L);\n    assert(candidate(144L,\
    \ 60L) == 12L);\n}\nvoid main(){}"
  status: SyntaxError
  stderr: 'b''Error: cannot find source code for runtime library file \''object.d\''\n       dmd
    might not be correctly installed. Run \''dmd -man\'' for installation instructions.\nimport
    path[0] = /tmp\nFailed: ["dmd", "-unittest", "-v", "-o-", "/tmp/tmp6nzy57d4.d",
    "-I/tmp"]\n'''
  stdout: b''
  timestamp: 1659794497
- exit_code: 0
  program: "import std.typecons;\nimport std.math;\n/*\n Return a greatest common\
    \ divisor of two integers a and b\n    >>> greatest_common_divisor(3L, 5L)\n \
    \   1L\n    >>> greatest_common_divisor(25L, 15L)\n    5L\n    \n*/\nlong greatest_common_divisor(long\
    \ a, long b) \n{\n    if (a < b)\n        return greatest_common_divisor(b, a);\n\
    \    if (b == 0)\n        return a;\n    return greatest_common_divisor(b, a %\
    \ b);\n}\nunittest\n{\n    alias candidate = greatest_common_divisor;\n\n    assert(candidate(3L,\
    \ 7L) == 1L);\n    assert(candidate(10L, 15L) == 5L);\n    assert(candidate(49L,\
    \ 14L) == 7L);\n    assert(candidate(144L, 60L) == 12L);\n}\nvoid main(){}"
  status: OK
  stderr: b''
  stdout: b''
- exit_code: 0
  program: "import std.typecons;\nimport std.math;\n/*\n Return a greatest common\
    \ divisor of two integers a and b\n    >>> greatest_common_divisor(3L, 5L)\n \
    \   1L\n    >>> greatest_common_divisor(25L, 15L)\n    5L\n    \n*/\nlong greatest_common_divisor(long\
    \ a, long b) \n{\n    if (a < b)\n        return greatest_common_divisor(b, a);\n\
    \    if (b == 0)\n        return a;\n    return greatest_common_divisor(b, a %\
    \ b);\n}\nunittest\n{\n    alias candidate = greatest_common_divisor;\n\n    assert(candidate(3L,\
    \ 7L) == 1L);\n    assert(candidate(10L, 15L) == 5L);\n    assert(candidate(49L,\
    \ 14L) == 7L);\n    assert(candidate(144L, 60L) == 12L);\n}\nvoid main(){}"
  status: OK
  stderr: b''
  stdout: b''
- exit_code: 1
  program: "import std.typecons;\nimport std.math;\n/*\n Return a greatest common\
    \ divisor of two integers a and b\n    >>> greatest_common_divisor(3L, 5L)\n \
    \   1L\n    >>> greatest_common_divisor(25L, 15L)\n    5L\n    \n*/\nlong greatest_common_divisor(long\
    \ a, long b) \n{\n    if (a == 0L)\n        return b;\n    if (b == 0L)\n    \
    \    return a;\n    if (a == b)\n        return a;\n    if (a == 1L || b == 1L)\n\
    \        return 1L;\n    if (a % 2L == 0L && b % 2L == 0L)\n        return 2L\
    \ * greatest_common_divisor(a / 2L, b / 2L);\n    if (a % 2L == 0L && b % 2L !=\
    \ 0L)\n        return greatest_common_divisor(a / 2L, b);\n    if (a % 2L != 0L\
    \ && b % 2L == 0L)\n        return greatest_common_divisor(a, b / 2L);\n    if\
    \ (a % 2L != 0L && b % 2L != 0L && a < b)\n        return greatest_common_divisor((b\
    \ - a) / 2L, a);\n    if (a % 2L != 0L && b % 2L != 0L && a > b)\n        return\
    \ greatest_common_divisor((a - b) / 2L, b);\n    return 1L;\n}\n/*\n Return a\
    \ least common multiple of two integers a and b\n    >>> least_common_multiple(3L,\
    \ 5L)\n    15L\n    >>> least_common_multiple(25L, 15L)\n    75L\n    \n*/\nlong\
    \ least_common_multiple(long a, long b) \n{\n    return a * b / greatest_common_divisor(a,\
    \ b);\n}\n/*\n Return a least common multiple of a list of integers\n    >>> least_common_multiple_list([3L,\
    \ 5L])\n    15L\n    >>> least_common_multiple_list([25L, 15L])\n    75L\n   \
    \ >>> least_common_multiple_list([25L, 15L, 10L])\n    150L\n    \n*/\nlong least_common_multiple_list(long[]\
    \ a) \n{\n    if (a.length == 0)\n        return 1L;\n    if (a.length == 1)\n\
    \        return a[0];\n    long result\nunittest\n{\n    alias candidate = greatest_common_divisor;\n\
    \n    assert(candidate(3L, 7L) == 1L);\n    assert(candidate(10L, 15L) == 5L);\n\
    \    assert(candidate(49L, 14L) == 7L);\n    assert(candidate(144L, 60L) == 12L);\n\
    }\nvoid main(){}"
  status: SyntaxError
  stderr: 'b''/tmp/tmpgp38fu2_.d(62): Error: semicolon expected, not \''unittest\''\n/tmp/tmpgp38fu2_.d(62):
    Error: found \''unittest\'' instead of statement\nFailed: ["dmd", "-unittest",
    "-v", "-o-", "/tmp/tmpgp38fu2_.d", "-I/tmp"]\n'''
  stdout: b''
  timestamp: 1659794497
- exit_code: 0
  program: "import std.typecons;\nimport std.math;\n/*\n Return a greatest common\
    \ divisor of two integers a and b\n    >>> greatest_common_divisor(3L, 5L)\n \
    \   1L\n    >>> greatest_common_divisor(25L, 15L)\n    5L\n    \n*/\nlong greatest_common_divisor(long\
    \ a, long b) \n{\n    if (a < b) \n    {\n        return greatest_common_divisor(b,\
    \ a);\n    }\n    if (b == 0) \n    {\n        return a;\n    }\n    return greatest_common_divisor(b,\
    \ a % b);\n}\nunittest\n{\n    alias candidate = greatest_common_divisor;\n\n\
    \    assert(candidate(3L, 7L) == 1L);\n    assert(candidate(10L, 15L) == 5L);\n\
    \    assert(candidate(49L, 14L) == 7L);\n    assert(candidate(144L, 60L) == 12L);\n\
    }\nvoid main(){}"
  status: OK
  stderr: b''
  stdout: b''
- exit_code: 0
  program: "import std.typecons;\nimport std.math;\n/*\n Return a greatest common\
    \ divisor of two integers a and b\n    >>> greatest_common_divisor(3L, 5L)\n \
    \   1L\n    >>> greatest_common_divisor(25L, 15L)\n    5L\n    \n*/\nlong greatest_common_divisor(long\
    \ a, long b) \n{\n    if (a < b)\n        return greatest_common_divisor(b, a);\n\
    \    if (b == 0)\n        return a;\n    return greatest_common_divisor(b, a %\
    \ b);\n}\nunittest\n{\n    alias candidate = greatest_common_divisor;\n\n    assert(candidate(3L,\
    \ 7L) == 1L);\n    assert(candidate(10L, 15L) == 5L);\n    assert(candidate(49L,\
    \ 14L) == 7L);\n    assert(candidate(144L, 60L) == 12L);\n}\nvoid main(){}"
  status: OK
  stderr: b''
  stdout: b''
- exit_code: 1
  program: "import std.typecons;\nimport std.math;\n/*\n Return a greatest common\
    \ divisor of two integers a and b\n    >>> greatest_common_divisor(3L, 5L)\n \
    \   1L\n    >>> greatest_common_divisor(25L, 15L)\n    5L\n    \n*/\nlong greatest_common_divisor(long\
    \ a, long b) \n{\n    long c;\n    while (a != 0) \n    {\n        c = a;\n  \
    \      a = b % a;\n        b = c;\n    }\n    return b;\n}\nunittest\n{\n    alias\
    \ candidate = greatest_common_divisor;\n\n    assert(candidate(3L, 7L) == 1L);\n\
    \    assert(candidate(10L, 15L) == 5L);\n    assert(candidate(49L, 14L) == 7L);\n\
    \    assert(candidate(144L, 60L) == 12L);\n}\nvoid main(){}"
  status: SyntaxError
  stderr: 'b''Error: cannot find source code for runtime library file \''object.d\''\n       dmd
    might not be correctly installed. Run \''dmd -man\'' for installation instructions.\nimport
    path[0] = /tmp\nFailed: ["dmd", "-unittest", "-v", "-o-", "/tmp/tmpe3brn2ro.d",
    "-I/tmp"]\n'''
  stdout: b''
  timestamp: 1659794497
- exit_code: 1
  program: "import std.typecons;\nimport std.math;\n/*\n Return a greatest common\
    \ divisor of two integers a and b\n    >>> greatest_common_divisor(3L, 5L)\n \
    \   1L\n    >>> greatest_common_divisor(25L, 15L)\n    5L\n    \n*/\nlong greatest_common_divisor(long\
    \ a, long b) \n{\n    if (a == 0L)\n        return b;\n    if (b == 0L)\n    \
    \    return a;\n    if (a == b)\n        return a;\n    if (a > b)\n        return\
    \ greatest_common_divisor(a - b, b);\n    else\n        return greatest_common_divisor(a,\
    \ b - a);\n}\nunittest\n{\n    alias candidate = greatest_common_divisor;\n\n\
    \    assert(candidate(3L, 7L) == 1L);\n    assert(candidate(10L, 15L) == 5L);\n\
    \    assert(candidate(49L, 14L) == 7L);\n    assert(candidate(144L, 60L) == 12L);\n\
    }\nvoid main(){}"
  status: SyntaxError
  stderr: 'b''Error: cannot find source code for runtime library file \''object.d\''\n       dmd
    might not be correctly installed. Run \''dmd -man\'' for installation instructions.\nimport
    path[0] = /tmp\nFailed: ["dmd", "-unittest", "-v", "-o-", "/tmp/tmpuw4zy5dy.d",
    "-I/tmp"]\n'''
  stdout: b''
  timestamp: 1659794497
- exit_code: 1
  program: "import std.typecons;\nimport std.math;\n/*\n Return a greatest common\
    \ divisor of two integers a and b\n    >>> greatest_common_divisor(3L, 5L)\n \
    \   1L\n    >>> greatest_common_divisor(25L, 15L)\n    5L\n    \n*/\nlong greatest_common_divisor(long\
    \ a, long b) \n{\n    if (a < b) \n    {\n        return greatest_common_divisor(b,\
    \ a);\n    }\n    while (b != 0) \n    {\n        long t = b;\n        b = a %\
    \ b;\n        a = t;\n    }\n    return a;\n}\nunittest\n{\n    alias candidate\
    \ = greatest_common_divisor;\n\n    assert(candidate(3L, 7L) == 1L);\n    assert(candidate(10L,\
    \ 15L) == 5L);\n    assert(candidate(49L, 14L) == 7L);\n    assert(candidate(144L,\
    \ 60L) == 12L);\n}\nvoid main(){}"
  status: SyntaxError
  stderr: 'b''Error: cannot find source code for runtime library file \''object.d\''\n       dmd
    might not be correctly installed. Run \''dmd -man\'' for installation instructions.\nimport
    path[0] = /tmp\nFailed: ["dmd", "-unittest", "-v", "-o-", "/tmp/tmpp1181l73.d",
    "-I/tmp"]\n'''
  stdout: b''
  timestamp: 1659794497
- exit_code: 0
  program: "import std.typecons;\nimport std.math;\n/*\n Return a greatest common\
    \ divisor of two integers a and b\n    >>> greatest_common_divisor(3L, 5L)\n \
    \   1L\n    >>> greatest_common_divisor(25L, 15L)\n    5L\n    \n*/\nlong greatest_common_divisor(long\
    \ a, long b) \n{\n    if (a == 0L)\n        return b;\n    if (b == 0L)\n    \
    \    return a;\n    return greatest_common_divisor(b, a % b);\n}\nunittest\n{\n\
    \    alias candidate = greatest_common_divisor;\n\n    assert(candidate(3L, 7L)\
    \ == 1L);\n    assert(candidate(10L, 15L) == 5L);\n    assert(candidate(49L, 14L)\
    \ == 7L);\n    assert(candidate(144L, 60L) == 12L);\n}\nvoid main(){}"
  status: OK
  stderr: b''
  stdout: b''
- exit_code: 0
  program: "import std.typecons;\nimport std.math;\n/*\n Return a greatest common\
    \ divisor of two integers a and b\n    >>> greatest_common_divisor(3L, 5L)\n \
    \   1L\n    >>> greatest_common_divisor(25L, 15L)\n    5L\n    \n*/\nlong greatest_common_divisor(long\
    \ a, long b) \n{\n    if (a < b)\n        return greatest_common_divisor(b, a);\n\
    \    if (b == 0)\n        return a;\n    return greatest_common_divisor(b, a %\
    \ b);\n}\nunittest\n{\n    alias candidate = greatest_common_divisor;\n\n    assert(candidate(3L,\
    \ 7L) == 1L);\n    assert(candidate(10L, 15L) == 5L);\n    assert(candidate(49L,\
    \ 14L) == 7L);\n    assert(candidate(144L, 60L) == 12L);\n}\nvoid main(){}"
  status: OK
  stderr: b''
  stdout: b''
- exit_code: 1
  program: "import std.typecons;\nimport std.math;\n/*\n Return a greatest common\
    \ divisor of two integers a and b\n    >>> greatest_common_divisor(3L, 5L)\n \
    \   1L\n    >>> greatest_common_divisor(25L, 15L)\n    5L\n    \n*/\nlong greatest_common_divisor(long\
    \ a, long b) \n{\n    if (a < b)\n    {\n        return greatest_common_divisor(b,\
    \ a);\n    }\n    if (b == 0)\n    {\n        return a;\n    }\n    return greatest_common_divisor(b,\
    \ a % b);\n}\nunittest\n{\n    alias candidate = greatest_common_divisor;\n\n\
    \    assert(candidate(3L, 7L) == 1L);\n    assert(candidate(10L, 15L) == 5L);\n\
    \    assert(candidate(49L, 14L) == 7L);\n    assert(candidate(144L, 60L) == 12L);\n\
    }\nvoid main(){}"
  status: SyntaxError
  stderr: 'b''Error: cannot find source code for runtime library file \''object.d\''\n       dmd
    might not be correctly installed. Run \''dmd -man\'' for installation instructions.\nimport
    path[0] = /tmp\nFailed: ["dmd", "-unittest", "-v", "-o-", "/tmp/tmpym97hqb6.d",
    "-I/tmp"]\n'''
  stdout: b''
  timestamp: 1659794497
- exit_code: 1
  program: "import std.typecons;\nimport std.math;\n/*\n Return a greatest common\
    \ divisor of two integers a and b\n    >>> greatest_common_divisor(3L, 5L)\n \
    \   1L\n    >>> greatest_common_divisor(25L, 15L)\n    5L\n    \n*/\nlong greatest_common_divisor(long\
    \ a, long b) \n{\n    if (a == 0L) \n    {\n        return b;\n    }\n    if (b\
    \ == 0L) \n    {\n        return a;\n    }\n    if (a == b) \n    {\n        return\
    \ a;\n    }\n    if (a == 1L || b == 1L) \n    {\n        return 1L;\n    }\n\
    \    if (a % 2L == 0L && b % 2L == 0L) \n    {\n        return 2L * greatest_common_divisor(a\
    \ / 2L, b / 2L);\n    }\n    if (a % 2L == 0L && b % 2L != 0L) \n    {\n     \
    \   return greatest_common_divisor(a / 2L, b);\n    }\n    if (a % 2L != 0L &&\
    \ b % 2L == 0L) \n    {\n        return greatest_common_divisor(a, b / 2L);\n\
    \    }\n    return greatest_common_divisor(abs(a - b), min(a, b));\n}\nunittest\n\
    {\n    alias candidate = greatest_common_divisor;\n\n    assert(candidate(3L,\
    \ 7L) == 1L);\n    assert(candidate(10L, 15L) == 5L);\n    assert(candidate(49L,\
    \ 14L) == 7L);\n    assert(candidate(144L, 60L) == 12L);\n}\nvoid main(){}"
  status: SyntaxError
  stderr: 'b''Error: cannot find source code for runtime library file \''object.d\''\n       dmd
    might not be correctly installed. Run \''dmd -man\'' for installation instructions.\nimport
    path[0] = /tmp\nFailed: ["dmd", "-unittest", "-v", "-o-", "/tmp/tmp8sxs4z0r.d",
    "-I/tmp"]\n'''
  stdout: b''
  timestamp: 1659794497
- exit_code: 1
  program: "import std.typecons;\nimport std.math;\n/*\n Return a greatest common\
    \ divisor of two integers a and b\n    >>> greatest_common_divisor(3L, 5L)\n \
    \   1L\n    >>> greatest_common_divisor(25L, 15L)\n    5L\n    \n*/\nlong greatest_common_divisor(long\
    \ a, long b) \n{\n    if (a == 0L)\n        return b;\n    else if (b == 0L)\n\
    \        return a;\n    else\n        return greatest_common_divisor(b, a % b);\n\
    }\nunittest\n{\n    alias candidate = greatest_common_divisor;\n\n    assert(candidate(3L,\
    \ 7L) == 1L);\n    assert(candidate(10L, 15L) == 5L);\n    assert(candidate(49L,\
    \ 14L) == 7L);\n    assert(candidate(144L, 60L) == 12L);\n}\nvoid main(){}"
  status: SyntaxError
  stderr: 'b''Error: cannot find source code for runtime library file \''object.d\''\n       dmd
    might not be correctly installed. Run \''dmd -man\'' for installation instructions.\nimport
    path[0] = /tmp\nFailed: ["dmd", "-unittest", "-v", "-o-", "/tmp/tmprikuhc0p.d",
    "-I/tmp"]\n'''
  stdout: b''
  timestamp: 1659794497
- exit_code: 1
  program: "import std.typecons;\nimport std.math;\n/*\n Return a greatest common\
    \ divisor of two integers a and b\n    >>> greatest_common_divisor(3L, 5L)\n \
    \   1L\n    >>> greatest_common_divisor(25L, 15L)\n    5L\n    \n*/\nlong greatest_common_divisor(long\
    \ a, long b) \n{\n    if (a == 0L)\n        return b;\n    if (b == 0L)\n    \
    \    return a;\n    if (a > b)\n        return greatest_common_divisor(a % b,\
    \ b);\n    else\n        return greatest_common_divisor(a, b % a);\n}\nunittest\n\
    {\n    alias candidate = greatest_common_divisor;\n\n    assert(candidate(3L,\
    \ 7L) == 1L);\n    assert(candidate(10L, 15L) == 5L);\n    assert(candidate(49L,\
    \ 14L) == 7L);\n    assert(candidate(144L, 60L) == 12L);\n}\nvoid main(){}"
  status: SyntaxError
  stderr: 'b''Error: cannot find source code for runtime library file \''object.d\''\n       dmd
    might not be correctly installed. Run \''dmd -man\'' for installation instructions.\nimport
    path[0] = /tmp\nFailed: ["dmd", "-unittest", "-v", "-o-", "/tmp/tmp3844selc.d",
    "-I/tmp"]\n'''
  stdout: b''
  timestamp: 1659794497
- exit_code: 1
  program: "import std.typecons;\nimport std.math;\n/*\n Return a greatest common\
    \ divisor of two integers a and b\n    >>> greatest_common_divisor(3L, 5L)\n \
    \   1L\n    >>> greatest_common_divisor(25L, 15L)\n    5L\n    \n*/\nlong greatest_common_divisor(long\
    \ a, long b) \n{\n    if (a == 0L)\n        return b;\n    if (b == 0L)\n    \
    \    return a;\n    if (a == b)\n        return a;\n    if (a == 1L || b == 1L)\n\
    \        return 1L;\n    if (a % 2L == 0L && b % 2L == 0L)\n        return 2L\
    \ * greatest_common_divisor(a / 2L, b / 2L);\n    if (a % 2L == 0L && b % 2L !=\
    \ 0L)\n        return greatest_common_divisor(a / 2L, b);\n    if (a % 2L != 0L\
    \ && b % 2L == 0L)\n        return greatest_common_divisor(a, b / 2L);\n    if\
    \ (a > b)\n        return greatest_common_divisor((a - b) / 2L, b);\n    return\
    \ greatest_common_divisor((b - a) / 2L, a);\n}\n/*\n Return a least common multiple\
    \ of two integers a and b\n    >>> least_common_multiple(3L, 5L)\n    15L\n  \
    \  >>> least_common_multiple(25L, 15L)\n    75L\n    \n*/\nlong least_common_multiple(long\
    \ a, long b) \n{\n    return a * b / greatest_common_divisor(a, b);\n}\n/*\n Return\
    \ a greatest common divisor of a list of integers\n    >>> greatest_common_divisor([3L,\
    \ 5L, 7L])\n    1L\n    >>> greatest_common_divisor([25L, 15L, 75L])\n    5L\n\
    \    \n*/\nlong greatest_common_divisor(long[] a) \n{\n    if (a.length == 0L)\n\
    \        return 0L;\n    if (a.length == 1L)\n        return a[0L];\n    long\
    \ result = greatest_common_divisor(a[0L], a[1L]);\n    for (long i = 2L; i < a.length;\
    \ i++)\n        result = greatest_common_divisor(result, a[i]);\n    return result\n\
    unittest\n{\n    alias candidate = greatest_common_divisor;\n\n    assert(candidate(3L,\
    \ 7L) == 1L);\n    assert(candidate(10L, 15L) == 5L);\n    assert(candidate(49L,\
    \ 14L) == 7L);\n    assert(candidate(144L, 60L) == 12L);\n}\nvoid main(){}"
  status: SyntaxError
  stderr: 'b''/tmp/tmp1hmzo_kc.d(61): Error: found \''unittest\'' when expecting \'';\''
    following return statement\n/tmp/tmp1hmzo_kc.d(70): Error: found \''EOF\'' when
    expecting \''}\'' following compound statement\nFailed: ["dmd", "-unittest", "-v",
    "-o-", "/tmp/tmp1hmzo_kc.d", "-I/tmp"]\n'''
  stdout: b''
  timestamp: 1659794497
- exit_code: 0
  program: "import std.typecons;\nimport std.math;\n/*\n Return a greatest common\
    \ divisor of two integers a and b\n    >>> greatest_common_divisor(3L, 5L)\n \
    \   1L\n    >>> greatest_common_divisor(25L, 15L)\n    5L\n    \n*/\nlong greatest_common_divisor(long\
    \ a, long b) \n{\n    if (a < b) \n    {\n        return greatest_common_divisor(b,\
    \ a);\n    }\n    if (b == 0) \n    {\n        return a;\n    }\n    return greatest_common_divisor(b,\
    \ a % b);\n}\nunittest\n{\n    alias candidate = greatest_common_divisor;\n\n\
    \    assert(candidate(3L, 7L) == 1L);\n    assert(candidate(10L, 15L) == 5L);\n\
    \    assert(candidate(49L, 14L) == 7L);\n    assert(candidate(144L, 60L) == 12L);\n\
    }\nvoid main(){}"
  status: OK
  stderr: b''
  stdout: b''
- exit_code: 1
  program: "import std.typecons;\nimport std.math;\n/*\n Return a greatest common\
    \ divisor of two integers a and b\n    >>> greatest_common_divisor(3L, 5L)\n \
    \   1L\n    >>> greatest_common_divisor(25L, 15L)\n    5L\n    \n*/\nlong greatest_common_divisor(long\
    \ a, long b) \n{\n    if (a < b) \n    {\n        return greatest_common_divisor(b,\
    \ a);\n    }\n    if (a % b == 0) \n    {\n        return b;\n    }\n    return\
    \ greatest_common_divisor(b, a % b);\n}\nunittest\n{\n    alias candidate = greatest_common_divisor;\n\
    \n    assert(candidate(3L, 7L) == 1L);\n    assert(candidate(10L, 15L) == 5L);\n\
    \    assert(candidate(49L, 14L) == 7L);\n    assert(candidate(144L, 60L) == 12L);\n\
    }\nvoid main(){}"
  status: SyntaxError
  stderr: 'b''Error: cannot find source code for runtime library file \''object.d\''\n       dmd
    might not be correctly installed. Run \''dmd -man\'' for installation instructions.\nimport
    path[0] = /tmp\nFailed: ["dmd", "-unittest", "-v", "-o-", "/tmp/tmpb_9gx5i3.d",
    "-I/tmp"]\n'''
  stdout: b''
  timestamp: 1659794497
- exit_code: 1
  program: "import std.typecons;\nimport std.math;\n/*\n Return a greatest common\
    \ divisor of two integers a and b\n    >>> greatest_common_divisor(3L, 5L)\n \
    \   1L\n    >>> greatest_common_divisor(25L, 15L)\n    5L\n    \n*/\nlong greatest_common_divisor(long\
    \ a, long b) \n{\n    if (a == 0L)\n        return b;\n    if (b == 0L)\n    \
    \    return a;\n    if (a == b)\n        return a;\n    if (a == 1L || b == 1L)\n\
    \        return 1L;\n    if (a % 2L == 0L && b % 2L == 0L)\n        return 2L\
    \ * greatest_common_divisor(a / 2L, b / 2L);\n    if (a % 2L == 0L && b % 2L !=\
    \ 0L)\n        return greatest_common_divisor(a / 2L, b);\n    if (a % 2L != 0L\
    \ && b % 2L == 0L)\n        return greatest_common_divisor(a, b / 2L);\n    return\
    \ greatest_common_divisor(abs(a - b), min(a, b));\n}\nunittest\n{\n    alias candidate\
    \ = greatest_common_divisor;\n\n    assert(candidate(3L, 7L) == 1L);\n    assert(candidate(10L,\
    \ 15L) == 5L);\n    assert(candidate(49L, 14L) == 7L);\n    assert(candidate(144L,\
    \ 60L) == 12L);\n}\nvoid main(){}"
  status: SyntaxError
  stderr: 'b''Error: cannot find source code for runtime library file \''object.d\''\n       dmd
    might not be correctly installed. Run \''dmd -man\'' for installation instructions.\nimport
    path[0] = /tmp\nFailed: ["dmd", "-unittest", "-v", "-o-", "/tmp/tmpk0hvzr40.d",
    "-I/tmp"]\n'''
  stdout: b''
  timestamp: 1659794497
- exit_code: 1
  program: "import std.typecons;\nimport std.math;\n/*\n Return a greatest common\
    \ divisor of two integers a and b\n    >>> greatest_common_divisor(3L, 5L)\n \
    \   1L\n    >>> greatest_common_divisor(25L, 15L)\n    5L\n    \n*/\nlong greatest_common_divisor(long\
    \ a, long b) \n{\n    while (b != 0) {\n        long t = b;\n        b = a % b;\n\
    \        a = t;\n    }\n    return a;\n}\nunittest\n{\n    alias candidate = greatest_common_divisor;\n\
    \n    assert(candidate(3L, 7L) == 1L);\n    assert(candidate(10L, 15L) == 5L);\n\
    \    assert(candidate(49L, 14L) == 7L);\n    assert(candidate(144L, 60L) == 12L);\n\
    }\nvoid main(){}"
  status: SyntaxError
  stderr: 'b''Error: cannot find source code for runtime library file \''object.d\''\n       dmd
    might not be correctly installed. Run \''dmd -man\'' for installation instructions.\nimport
    path[0] = /tmp\nFailed: ["dmd", "-unittest", "-v", "-o-", "/tmp/tmpsufqk2py.d",
    "-I/tmp"]\n'''
  stdout: b''
  timestamp: 1659794497
- exit_code: 1
  program: "import std.typecons;\nimport std.math;\n/*\n Return a greatest common\
    \ divisor of two integers a and b\n    >>> greatest_common_divisor(3L, 5L)\n \
    \   1L\n    >>> greatest_common_divisor(25L, 15L)\n    5L\n    \n*/\nlong greatest_common_divisor(long\
    \ a, long b) \n{\n    if (a == 0L)\n        return b;\n    if (b == 0L)\n    \
    \    return a;\n    if (a > b)\n        return greatest_common_divisor(a % b,\
    \ b);\n    else\n        return greatest_common_divisor(a, b % a);\n}\nunittest\n\
    {\n    alias candidate = greatest_common_divisor;\n\n    assert(candidate(3L,\
    \ 7L) == 1L);\n    assert(candidate(10L, 15L) == 5L);\n    assert(candidate(49L,\
    \ 14L) == 7L);\n    assert(candidate(144L, 60L) == 12L);\n}\nvoid main(){}"
  status: SyntaxError
  stderr: 'b''Error: cannot find source code for runtime library file \''object.d\''\n       dmd
    might not be correctly installed. Run \''dmd -man\'' for installation instructions.\nimport
    path[0] = /tmp\nFailed: ["dmd", "-unittest", "-v", "-o-", "/tmp/tmp3844selc.d",
    "-I/tmp"]\n'''
  stdout: b''
  timestamp: 1659794497
- exit_code: 0
  program: "import std.typecons;\nimport std.math;\n/*\n Return a greatest common\
    \ divisor of two integers a and b\n    >>> greatest_common_divisor(3L, 5L)\n \
    \   1L\n    >>> greatest_common_divisor(25L, 15L)\n    5L\n    \n*/\nlong greatest_common_divisor(long\
    \ a, long b) \n{\n    if (a == 0L)\n        return b;\n    if (b == 0L)\n    \
    \    return a;\n    return greatest_common_divisor(b, a % b);\n}\nunittest\n{\n\
    \    alias candidate = greatest_common_divisor;\n\n    assert(candidate(3L, 7L)\
    \ == 1L);\n    assert(candidate(10L, 15L) == 5L);\n    assert(candidate(49L, 14L)\
    \ == 7L);\n    assert(candidate(144L, 60L) == 12L);\n}\nvoid main(){}"
  status: OK
  stderr: b''
  stdout: b''
- exit_code: 1
  program: "import std.typecons;\nimport std.math;\n/*\n Return a greatest common\
    \ divisor of two integers a and b\n    >>> greatest_common_divisor(3L, 5L)\n \
    \   1L\n    >>> greatest_common_divisor(25L, 15L)\n    5L\n    \n*/\nlong greatest_common_divisor(long\
    \ a, long b) \n{\n    if (a == 0L)\n        return b;\n    if (b == 0L)\n    \
    \    return a;\n    if (a == b)\n        return a;\n    if (a == 1L || b == 1L)\n\
    \        return 1L;\n    if (a % 2L == 0L && b % 2L == 0L)\n        return 2L\
    \ * greatest_common_divisor(a / 2L, b / 2L);\n    if (a % 2L == 0L && b % 2L !=\
    \ 0L)\n        return greatest_common_divisor(a / 2L, b);\n    if (a % 2L != 0L\
    \ && b % 2L == 0L)\n        return greatest_common_divisor(a, b / 2L);\n    return\
    \ greatest_common_divisor(abs(a - b), min(a, b));\n}\nunittest\n{\n    alias candidate\
    \ = greatest_common_divisor;\n\n    assert(candidate(3L, 7L) == 1L);\n    assert(candidate(10L,\
    \ 15L) == 5L);\n    assert(candidate(49L, 14L) == 7L);\n    assert(candidate(144L,\
    \ 60L) == 12L);\n}\nvoid main(){}"
  status: SyntaxError
  stderr: 'b''Error: cannot find source code for runtime library file \''object.d\''\n       dmd
    might not be correctly installed. Run \''dmd -man\'' for installation instructions.\nimport
    path[0] = /tmp\nFailed: ["dmd", "-unittest", "-v", "-o-", "/tmp/tmpk0hvzr40.d",
    "-I/tmp"]\n'''
  stdout: b''
  timestamp: 1659794497
- exit_code: 1
  program: "import std.typecons;\nimport std.math;\n/*\n Return a greatest common\
    \ divisor of two integers a and b\n    >>> greatest_common_divisor(3L, 5L)\n \
    \   1L\n    >>> greatest_common_divisor(25L, 15L)\n    5L\n    \n*/\nlong greatest_common_divisor(long\
    \ a, long b) \n{\n    if (a == 0L)\n        return b;\n    if (b == 0L)\n    \
    \    return a;\n    if (a == b)\n        return a;\n    if (a == 1L || b == 1L)\n\
    \        return 1L;\n    if (a % 2L == 0L && b % 2L == 0L)\n        return 2L\
    \ * greatest_common_divisor(a / 2L, b / 2L);\n    if (a % 2L == 0L && b % 2L !=\
    \ 0L)\n        return greatest_common_divisor(a / 2L, b);\n    if (a % 2L != 0L\
    \ && b % 2L == 0L)\n        return greatest_common_divisor(a, b / 2L);\n    return\
    \ greatest_common_divisor(abs(a - b), min(a, b));\n}\nunittest\n{\n    alias candidate\
    \ = greatest_common_divisor;\n\n    assert(candidate(3L, 7L) == 1L);\n    assert(candidate(10L,\
    \ 15L) == 5L);\n    assert(candidate(49L, 14L) == 7L);\n    assert(candidate(144L,\
    \ 60L) == 12L);\n}\nvoid main(){}"
  status: SyntaxError
  stderr: 'b''Error: cannot find source code for runtime library file \''object.d\''\n       dmd
    might not be correctly installed. Run \''dmd -man\'' for installation instructions.\nimport
    path[0] = /tmp\nFailed: ["dmd", "-unittest", "-v", "-o-", "/tmp/tmpk0hvzr40.d",
    "-I/tmp"]\n'''
  stdout: b''
  timestamp: 1659794497
- exit_code: 1
  program: "import std.typecons;\nimport std.math;\n/*\n Return a greatest common\
    \ divisor of two integers a and b\n    >>> greatest_common_divisor(3L, 5L)\n \
    \   1L\n    >>> greatest_common_divisor(25L, 15L)\n    5L\n    \n*/\nlong greatest_common_divisor(long\
    \ a, long b) \n{\n    if (a == 0)\n        return b;\n    if (b == 0)\n      \
    \  return a;\n    if (a == b)\n        return a;\n    if (a == 1 || b == 1)\n\
    \        return 1;\n    if ((a & 1) == 0)\n        return ((b & 1) == 0) ? (2\
    \ * greatest_common_divisor(a >> 1, b >> 1)) : greatest_common_divisor(a >> 1,\
    \ b);\n    else\n        return ((b & 1) == 0) ? greatest_common_divisor(a, b\
    \ >> 1) : greatest_common_divisor(b, abs(a - b));\n}\nunittest\n{\n    alias candidate\
    \ = greatest_common_divisor;\n\n    assert(candidate(3L, 7L) == 1L);\n    assert(candidate(10L,\
    \ 15L) == 5L);\n    assert(candidate(49L, 14L) == 7L);\n    assert(candidate(144L,\
    \ 60L) == 12L);\n}\nvoid main(){}"
  status: SyntaxError
  stderr: 'b''Error: cannot find source code for runtime library file \''object.d\''\n       dmd
    might not be correctly installed. Run \''dmd -man\'' for installation instructions.\nimport
    path[0] = /tmp\nFailed: ["dmd", "-unittest", "-v", "-o-", "/tmp/tmpa9suj44g.d",
    "-I/tmp"]\n'''
  stdout: b''
  timestamp: 1659794497
- exit_code: 0
  program: "import std.typecons;\nimport std.math;\n/*\n Return a greatest common\
    \ divisor of two integers a and b\n    >>> greatest_common_divisor(3L, 5L)\n \
    \   1L\n    >>> greatest_common_divisor(25L, 15L)\n    5L\n    \n*/\nlong greatest_common_divisor(long\
    \ a, long b) \n{\n    if (a < b) \n    {\n        return greatest_common_divisor(b,\
    \ a);\n    }\n    if (b == 0) \n    {\n        return a;\n    }\n    return greatest_common_divisor(b,\
    \ a % b);\n}\nunittest\n{\n    alias candidate = greatest_common_divisor;\n\n\
    \    assert(candidate(3L, 7L) == 1L);\n    assert(candidate(10L, 15L) == 5L);\n\
    \    assert(candidate(49L, 14L) == 7L);\n    assert(candidate(144L, 60L) == 12L);\n\
    }\nvoid main(){}"
  status: OK
  stderr: b''
  stdout: b''
- exit_code: 0
  program: "import std.typecons;\nimport std.math;\n/*\n Return a greatest common\
    \ divisor of two integers a and b\n    >>> greatest_common_divisor(3L, 5L)\n \
    \   1L\n    >>> greatest_common_divisor(25L, 15L)\n    5L\n    \n*/\nlong greatest_common_divisor(long\
    \ a, long b) \n{\n    if (a < b)\n        return greatest_common_divisor(b, a);\n\
    \    if (b == 0)\n        return a;\n    return greatest_common_divisor(b, a %\
    \ b);\n}\nunittest\n{\n    alias candidate = greatest_common_divisor;\n\n    assert(candidate(3L,\
    \ 7L) == 1L);\n    assert(candidate(10L, 15L) == 5L);\n    assert(candidate(49L,\
    \ 14L) == 7L);\n    assert(candidate(144L, 60L) == 12L);\n}\nvoid main(){}"
  status: OK
  stderr: b''
  stdout: b''
- exit_code: 1
  program: "import std.typecons;\nimport std.math;\n/*\n Return a greatest common\
    \ divisor of two integers a and b\n    >>> greatest_common_divisor(3L, 5L)\n \
    \   1L\n    >>> greatest_common_divisor(25L, 15L)\n    5L\n    \n*/\nlong greatest_common_divisor(long\
    \ a, long b) \n{\n    if (a == 0L)\n        return b;\n    if (b == 0L)\n    \
    \    return a;\n    if (a == b)\n        return a;\n    if (a == 1L || b == 1L)\n\
    \        return 1L;\n    if (a % 2L == 0L && b % 2L == 0L)\n        return 2L\
    \ * greatest_common_divisor(a / 2L, b / 2L);\n    if (a % 2L == 0L && b % 2L !=\
    \ 0L)\n        return greatest_common_divisor(a / 2L, b);\n    if (a % 2L != 0L\
    \ && b % 2L == 0L)\n        return greatest_common_divisor(a, b / 2L);\n    if\
    \ (a > b)\n        return greatest_common_divisor((a - b) / 2L, b);\n    return\
    \ greatest_common_divisor((b - a) / 2L, a);\n}\nunittest\n{\n    alias candidate\
    \ = greatest_common_divisor;\n\n    assert(candidate(3L, 7L) == 1L);\n    assert(candidate(10L,\
    \ 15L) == 5L);\n    assert(candidate(49L, 14L) == 7L);\n    assert(candidate(144L,\
    \ 60L) == 12L);\n}\nvoid main(){}"
  status: SyntaxError
  stderr: 'b''Error: cannot find source code for runtime library file \''object.d\''\n       dmd
    might not be correctly installed. Run \''dmd -man\'' for installation instructions.\nimport
    path[0] = /tmp\nFailed: ["dmd", "-unittest", "-v", "-o-", "/tmp/tmp6nzy57d4.d",
    "-I/tmp"]\n'''
  stdout: b''
  timestamp: 1659794497
- exit_code: 0
  program: "import std.typecons;\nimport std.math;\n/*\n Return a greatest common\
    \ divisor of two integers a and b\n    >>> greatest_common_divisor(3L, 5L)\n \
    \   1L\n    >>> greatest_common_divisor(25L, 15L)\n    5L\n    \n*/\nlong greatest_common_divisor(long\
    \ a, long b) \n{\n    if (a == 0L)\n        return b;\n    if (b == 0L)\n    \
    \    return a;\n    if (a == b)\n        return a;\n    if (a > b)\n        return\
    \ greatest_common_divisor(a - b, b);\n    return greatest_common_divisor(a, b\
    \ - a);\n}\nunittest\n{\n    alias candidate = greatest_common_divisor;\n\n  \
    \  assert(candidate(3L, 7L) == 1L);\n    assert(candidate(10L, 15L) == 5L);\n\
    \    assert(candidate(49L, 14L) == 7L);\n    assert(candidate(144L, 60L) == 12L);\n\
    }\nvoid main(){}"
  status: OK
  stderr: b''
  stdout: b''
- exit_code: 1
  program: "import std.typecons;\nimport std.math;\n/*\n Return a greatest common\
    \ divisor of two integers a and b\n    >>> greatest_common_divisor(3L, 5L)\n \
    \   1L\n    >>> greatest_common_divisor(25L, 15L)\n    5L\n    \n*/\nlong greatest_common_divisor(long\
    \ a, long b) \n{\n    if (a == 0L)\n        return b;\n    else if (b == 0L)\n\
    \        return a;\n    else\n        return greatest_common_divisor(b, a % b);\n\
    }\nunittest\n{\n    alias candidate = greatest_common_divisor;\n\n    assert(candidate(3L,\
    \ 7L) == 1L);\n    assert(candidate(10L, 15L) == 5L);\n    assert(candidate(49L,\
    \ 14L) == 7L);\n    assert(candidate(144L, 60L) == 12L);\n}\nvoid main(){}"
  status: SyntaxError
  stderr: 'b''Error: cannot find source code for runtime library file \''object.d\''\n       dmd
    might not be correctly installed. Run \''dmd -man\'' for installation instructions.\nimport
    path[0] = /tmp\nFailed: ["dmd", "-unittest", "-v", "-o-", "/tmp/tmprikuhc0p.d",
    "-I/tmp"]\n'''
  stdout: b''
  timestamp: 1659794497
- exit_code: 0
  program: "import std.typecons;\nimport std.math;\n/*\n Return a greatest common\
    \ divisor of two integers a and b\n    >>> greatest_common_divisor(3L, 5L)\n \
    \   1L\n    >>> greatest_common_divisor(25L, 15L)\n    5L\n    \n*/\nlong greatest_common_divisor(long\
    \ a, long b) \n{\n    if (a == 0L)\n        return b;\n    if (b == 0L)\n    \
    \    return a;\n    return greatest_common_divisor(b, a % b);\n}\nunittest\n{\n\
    \    alias candidate = greatest_common_divisor;\n\n    assert(candidate(3L, 7L)\
    \ == 1L);\n    assert(candidate(10L, 15L) == 5L);\n    assert(candidate(49L, 14L)\
    \ == 7L);\n    assert(candidate(144L, 60L) == 12L);\n}\nvoid main(){}"
  status: OK
  stderr: b''
  stdout: b''
- exit_code: 0
  program: "import std.typecons;\nimport std.math;\n/*\n Return a greatest common\
    \ divisor of two integers a and b\n    >>> greatest_common_divisor(3L, 5L)\n \
    \   1L\n    >>> greatest_common_divisor(25L, 15L)\n    5L\n    \n*/\nlong greatest_common_divisor(long\
    \ a, long b) \n{\n    if (a < b)\n        return greatest_common_divisor(b, a);\n\
    \    if (b == 0)\n        return a;\n    return greatest_common_divisor(b, a %\
    \ b);\n}\nunittest\n{\n    alias candidate = greatest_common_divisor;\n\n    assert(candidate(3L,\
    \ 7L) == 1L);\n    assert(candidate(10L, 15L) == 5L);\n    assert(candidate(49L,\
    \ 14L) == 7L);\n    assert(candidate(144L, 60L) == 12L);\n}\nvoid main(){}"
  status: OK
  stderr: b''
  stdout: b''
- exit_code: 1
  program: "import std.typecons;\nimport std.math;\n/*\n Return a greatest common\
    \ divisor of two integers a and b\n    >>> greatest_common_divisor(3L, 5L)\n \
    \   1L\n    >>> greatest_common_divisor(25L, 15L)\n    5L\n    \n*/\nlong greatest_common_divisor(long\
    \ a, long b) \n{\n    if (a == 0L)\n        return b;\n    if (b == 0L)\n    \
    \    return a;\n    if (a == b)\n        return a;\n    if (a == 1L || b == 1L)\n\
    \        return 1L;\n    if (a % 2L == 0L && b % 2L == 0L)\n        return 2L\
    \ * greatest_common_divisor(a / 2L, b / 2L);\n    if (a % 2L == 0L && b % 2L !=\
    \ 0L)\n        return greatest_common_divisor(a / 2L, b);\n    if (a % 2L != 0L\
    \ && b % 2L == 0L)\n        return greatest_common_divisor(a, b / 2L);\n    return\
    \ greatest_common_divisor(abs(a - b), min(a, b));\n}\nunittest\n{\n    alias candidate\
    \ = greatest_common_divisor;\n\n    assert(candidate(3L, 7L) == 1L);\n    assert(candidate(10L,\
    \ 15L) == 5L);\n    assert(candidate(49L, 14L) == 7L);\n    assert(candidate(144L,\
    \ 60L) == 12L);\n}\nvoid main(){}"
  status: SyntaxError
  stderr: 'b''Error: cannot find source code for runtime library file \''object.d\''\n       dmd
    might not be correctly installed. Run \''dmd -man\'' for installation instructions.\nimport
    path[0] = /tmp\nFailed: ["dmd", "-unittest", "-v", "-o-", "/tmp/tmpk0hvzr40.d",
    "-I/tmp"]\n'''
  stdout: b''
  timestamp: 1659794497
- exit_code: 1
  program: "import std.typecons;\nimport std.math;\n/*\n Return a greatest common\
    \ divisor of two integers a and b\n    >>> greatest_common_divisor(3L, 5L)\n \
    \   1L\n    >>> greatest_common_divisor(25L, 15L)\n    5L\n    \n*/\nlong greatest_common_divisor(long\
    \ a, long b) \n{\n    if (a == 0L)\n        return b;\n    if (b == 0L)\n    \
    \    return a;\n    return greatest_common_divisor(b, a % b);\n}\n/*\n Return\
    \ a least common multiple of two integers a and b\n    >>> least_common_multiple(3L,\
    \ 5L)\n    15L\n    >>> least_common_multiple(25L, 15L)\n    75L\n    >>> least_common_multiple(1L,\
    \ 1L)\n    1L\n*/\nlong least_common_multiple(long a, long b) \n{\n    return\
    \ (a * b) / greatest_common_divisor(a, b);\n}\n/*\n Return a least common multiple\
    \ of a list of integers\n    >>> least_common_multiple_list([3L, 5L])\n    15L\n\
    \    >>> least_common_multiple_list([25L, 15L])\n    75L\n    >>> least_common_multiple_list([1L,\
    \ 1L])\n    1L\n*/\nlong least_common_multiple_list(long[] a) \n{\n    long result\
    \ = a[0];\n    foreach (i; 1 .. a.length) \n    {\n        result = least_common_multiple(result,\
    \ a[i]);\n    }\n    return result;\n}\n/*\n Return a least common multiple of\
    \ a list of integers\n    >>> least_common_multiple_list([3L, 5L])\n    15L\n\
    \    >>> least_common_multiple_list([25L, 15L])\n    75L\n    >>> least_common_multiple_list([1L,\
    \ 1L])\n    1L\n*/\nlong least_common_multiple_list(long[] a) \n{\n    long result\
    \ = a[0];\n    foreach (i; 1 .. a.length) \n    {\n        result = least_common_multiple(result,\
    \ a[i]);\n    }\n    return result;\n}\n/*\n Return a least common multiple of\
    \ a list of integers\n    >>> least_common_multiple_list([3L, 5L])\n    15L\n\
    \    >>> least_common_multiple_list([25L, 15L])\n    75L\n\nunittest\n{\n    alias\
    \ candidate = greatest_common_divisor;\n\n    assert(candidate(3L, 7L) == 1L);\n\
    \    assert(candidate(10L, 15L) == 5L);\n    assert(candidate(49L, 14L) == 7L);\n\
    \    assert(candidate(144L, 60L) == 12L);\n}\nvoid main(){}"
  status: SyntaxError
  stderr: 'b''/tmp/tmp8vg1h1pj.d(68): Error: unterminated /* */ comment\nFailed: ["dmd",
    "-unittest", "-v", "-o-", "/tmp/tmp8vg1h1pj.d", "-I/tmp"]\n'''
  stdout: b''
  timestamp: 1659794497
- exit_code: 1
  program: "import std.typecons;\nimport std.math;\n/*\n Return a greatest common\
    \ divisor of two integers a and b\n    >>> greatest_common_divisor(3L, 5L)\n \
    \   1L\n    >>> greatest_common_divisor(25L, 15L)\n    5L\n    \n*/\nlong greatest_common_divisor(long\
    \ a, long b) \n{\n    if (a == 0L) \n    {\n        return b;\n    }\n    if (b\
    \ == 0L) \n    {\n        return a;\n    }\n    if (a == b) \n    {\n        return\
    \ a;\n    }\n    if (a == 1L || b == 1L) \n    {\n        return 1L;\n    }\n\
    \    if (a % 2L == 0L && b % 2L == 0L) \n    {\n        return 2L * greatest_common_divisor(a\
    \ / 2L, b / 2L);\n    }\n    if (a % 2L == 0L && b % 2L != 0L) \n    {\n     \
    \   return greatest_common_divisor(a / 2L, b);\n    }\n    if (a % 2L != 0L &&\
    \ b % 2L == 0L) \n    {\n        return greatest_common_divisor(a, b / 2L);\n\
    \    }\n    return greatest_common_divisor(abs(a - b), min(a, b));\n}\nunittest\n\
    {\n    alias candidate = greatest_common_divisor;\n\n    assert(candidate(3L,\
    \ 7L) == 1L);\n    assert(candidate(10L, 15L) == 5L);\n    assert(candidate(49L,\
    \ 14L) == 7L);\n    assert(candidate(144L, 60L) == 12L);\n}\nvoid main(){}"
  status: SyntaxError
  stderr: 'b''Error: cannot find source code for runtime library file \''object.d\''\n       dmd
    might not be correctly installed. Run \''dmd -man\'' for installation instructions.\nimport
    path[0] = /tmp\nFailed: ["dmd", "-unittest", "-v", "-o-", "/tmp/tmp8sxs4z0r.d",
    "-I/tmp"]\n'''
  stdout: b''
  timestamp: 1659794497
- exit_code: 1
  program: "import std.typecons;\nimport std.math;\n/*\n Return a greatest common\
    \ divisor of two integers a and b\n    >>> greatest_common_divisor(3L, 5L)\n \
    \   1L\n    >>> greatest_common_divisor(25L, 15L)\n    5L\n    \n*/\nlong greatest_common_divisor(long\
    \ a, long b) \n{\n    if (a == 0L)\n        return b;\n    if (b == 0L)\n    \
    \    return a;\n    if (a == b)\n        return a;\n    if (a == 1L || b == 1L)\n\
    \        return 1L;\n    if (a % 2L == 0L && b % 2L == 0L)\n        return 2L\
    \ * greatest_common_divisor(a / 2L, b / 2L);\n    if (a % 2L == 0L && b % 2L !=\
    \ 0L)\n        return greatest_common_divisor(a / 2L, b);\n    if (a % 2L != 0L\
    \ && b % 2L == 0L)\n        return greatest_common_divisor(a, b / 2L);\n    if\
    \ (a > b)\n        return greatest_common_divisor((a - b) / 2L, b);\n    return\
    \ greatest_common_divisor((b - a) / 2L, a);\n}\nunittest\n{\n    alias candidate\
    \ = greatest_common_divisor;\n\n    assert(candidate(3L, 7L) == 1L);\n    assert(candidate(10L,\
    \ 15L) == 5L);\n    assert(candidate(49L, 14L) == 7L);\n    assert(candidate(144L,\
    \ 60L) == 12L);\n}\nvoid main(){}"
  status: SyntaxError
  stderr: 'b''Error: cannot find source code for runtime library file \''object.d\''\n       dmd
    might not be correctly installed. Run \''dmd -man\'' for installation instructions.\nimport
    path[0] = /tmp\nFailed: ["dmd", "-unittest", "-v", "-o-", "/tmp/tmp6nzy57d4.d",
    "-I/tmp"]\n'''
  stdout: b''
  timestamp: 1659794497
- exit_code: 0
  program: "import std.typecons;\nimport std.math;\n/*\n Return a greatest common\
    \ divisor of two integers a and b\n    >>> greatest_common_divisor(3L, 5L)\n \
    \   1L\n    >>> greatest_common_divisor(25L, 15L)\n    5L\n    \n*/\nlong greatest_common_divisor(long\
    \ a, long b) \n{\n    if (a < b) \n    {\n        return greatest_common_divisor(b,\
    \ a);\n    }\n    if (b == 0) \n    {\n        return a;\n    }\n    return greatest_common_divisor(b,\
    \ a % b);\n}\nunittest\n{\n    alias candidate = greatest_common_divisor;\n\n\
    \    assert(candidate(3L, 7L) == 1L);\n    assert(candidate(10L, 15L) == 5L);\n\
    \    assert(candidate(49L, 14L) == 7L);\n    assert(candidate(144L, 60L) == 12L);\n\
    }\nvoid main(){}"
  status: OK
  stderr: b''
  stdout: b''
- exit_code: 1
  program: "import std.typecons;\nimport std.math;\n/*\n Return a greatest common\
    \ divisor of two integers a and b\n    >>> greatest_common_divisor(3L, 5L)\n \
    \   1L\n    >>> greatest_common_divisor(25L, 15L)\n    5L\n    \n*/\nlong greatest_common_divisor(long\
    \ a, long b) \n{\n    if (a == 0L)\n        return b;\n    if (b == 0L)\n    \
    \    return a;\n    if (a == b)\n        return a;\n    if (a == 1L || b == 1L)\n\
    \        return 1L;\n    if (a % 2L == 0L && b % 2L == 0L)\n        return 2L\
    \ * greatest_common_divisor(a / 2L, b / 2L);\n    if (a % 2L == 0L && b % 2L !=\
    \ 0L)\n        return greatest_common_divisor(a / 2L, b);\n    if (a % 2L != 0L\
    \ && b % 2L == 0L)\n        return greatest_common_divisor(a, b / 2L);\n    return\
    \ greatest_common_divisor(abs(a - b), min(a, b));\n}\nunittest\n{\n    alias candidate\
    \ = greatest_common_divisor;\n\n    assert(candidate(3L, 7L) == 1L);\n    assert(candidate(10L,\
    \ 15L) == 5L);\n    assert(candidate(49L, 14L) == 7L);\n    assert(candidate(144L,\
    \ 60L) == 12L);\n}\nvoid main(){}"
  status: SyntaxError
  stderr: 'b''Error: cannot find source code for runtime library file \''object.d\''\n       dmd
    might not be correctly installed. Run \''dmd -man\'' for installation instructions.\nimport
    path[0] = /tmp\nFailed: ["dmd", "-unittest", "-v", "-o-", "/tmp/tmpk0hvzr40.d",
    "-I/tmp"]\n'''
  stdout: b''
  timestamp: 1659794497
- exit_code: 1
  program: "import std.typecons;\nimport std.math;\n/*\n Return a greatest common\
    \ divisor of two integers a and b\n    >>> greatest_common_divisor(3L, 5L)\n \
    \   1L\n    >>> greatest_common_divisor(25L, 15L)\n    5L\n    \n*/\nlong greatest_common_divisor(long\
    \ a, long b) \n{\n    long c;\n    while (a != 0) {\n        c = a;\n        a\
    \ = b % a;\n        b = c;\n    }\n    return b;\n}\nunittest\n{\n    alias candidate\
    \ = greatest_common_divisor;\n\n    assert(candidate(3L, 7L) == 1L);\n    assert(candidate(10L,\
    \ 15L) == 5L);\n    assert(candidate(49L, 14L) == 7L);\n    assert(candidate(144L,\
    \ 60L) == 12L);\n}\nvoid main(){}"
  status: SyntaxError
  stderr: 'b''Error: cannot find source code for runtime library file \''object.d\''\n       dmd
    might not be correctly installed. Run \''dmd -man\'' for installation instructions.\nimport
    path[0] = /tmp\nFailed: ["dmd", "-unittest", "-v", "-o-", "/tmp/tmpwhaxk_oj.d",
    "-I/tmp"]\n'''
  stdout: b''
  timestamp: 1659794497
- exit_code: 1
  program: "import std.typecons;\nimport std.math;\n/*\n Return a greatest common\
    \ divisor of two integers a and b\n    >>> greatest_common_divisor(3L, 5L)\n \
    \   1L\n    >>> greatest_common_divisor(25L, 15L)\n    5L\n    \n*/\nlong greatest_common_divisor(long\
    \ a, long b) \n{\n    if (b == 0)\n        return a;\n    else\n        return\
    \ greatest_common_divisor(b, a % b);\n}\nunittest\n{\n    alias candidate = greatest_common_divisor;\n\
    \n    assert(candidate(3L, 7L) == 1L);\n    assert(candidate(10L, 15L) == 5L);\n\
    \    assert(candidate(49L, 14L) == 7L);\n    assert(candidate(144L, 60L) == 12L);\n\
    }\nvoid main(){}"
  status: SyntaxError
  stderr: 'b''Error: cannot find source code for runtime library file \''object.d\''\n       dmd
    might not be correctly installed. Run \''dmd -man\'' for installation instructions.\nimport
    path[0] = /tmp\nFailed: ["dmd", "-unittest", "-v", "-o-", "/tmp/tmpd2a_90wj.d",
    "-I/tmp"]\n'''
  stdout: b''
  timestamp: 1659794497
- exit_code: 1
  program: "import std.typecons;\nimport std.math;\n/*\n Return a greatest common\
    \ divisor of two integers a and b\n    >>> greatest_common_divisor(3L, 5L)\n \
    \   1L\n    >>> greatest_common_divisor(25L, 15L)\n    5L\n    \n*/\nlong greatest_common_divisor(long\
    \ a, long b) \n{\n    if (a == 0)\n        return b;\n    if (b == 0)\n      \
    \  return a;\n    if (a == b)\n        return a;\n    if (a == 1 || b == 1)\n\
    \        return 1;\n    if ((a & 1) == 0)\n        return (b & 1) != 0 ? greatest_common_divisor(a\
    \ >> 1, b) : greatest_common_divisor(a >> 1, b >> 1) << 1;\n    if ((b & 1) ==\
    \ 0)\n        return greatest_common_divisor(a, b >> 1);\n    if (a > b)\n   \
    \     return greatest_common_divisor((a - b) >> 1, b);\n    return greatest_common_divisor((b\
    \ - a) >> 1, a);\n}\nunittest\n{\n    alias candidate = greatest_common_divisor;\n\
    \n    assert(candidate(3L, 7L) == 1L);\n    assert(candidate(10L, 15L) == 5L);\n\
    \    assert(candidate(49L, 14L) == 7L);\n    assert(candidate(144L, 60L) == 12L);\n\
    }\nvoid main(){}"
  status: SyntaxError
  stderr: 'b''Error: cannot find source code for runtime library file \''object.d\''\n       dmd
    might not be correctly installed. Run \''dmd -man\'' for installation instructions.\nimport
    path[0] = /tmp\nFailed: ["dmd", "-unittest", "-v", "-o-", "/tmp/tmp01xcvsha.d",
    "-I/tmp"]\n'''
  stdout: b''
  timestamp: 1659794497

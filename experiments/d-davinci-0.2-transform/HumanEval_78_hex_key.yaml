name: HumanEval_78_hex_key
language: d
prompt: "import std.typecons;\nimport std.math;\n/*\nYou have been tasked to write\
  \ a function that receives \n    a hexadecimal number as a string and counts the\
  \ number of hexadecimal \n    digits that are primes (prime number, or a prime,\
  \ is a natural number \n    greater than 1 that is not a product of two smaller\
  \ natural numbers).\n    Hexadecimal digits are 0, 1, 2, 3, 4, 5, 6, 7, 8, 9, A,\
  \ B, C, D, E, F.\n    Prime numbers are 2, 3, 5, 7, 11, 13, 17,...\n    So you have\
  \ to determine a number of the following digits: 2, 3, 5, 7, \n    B (=decimal 11),\
  \ D (=decimal 13).\n    Note: you may assume the input is always correct or empty\
  \ string, \n    and symbols A,B,C,D,E,F are always uppercase.\n    Examples:\n \
  \   >>> hex_key(\"AB\")\n    1L\n    >>> hex_key(\"1077E\")\n    2L\n    >>> hex_key(\"\
  ABED1A33\")\n    4L\n    >>> hex_key(\"123456789ABCDEF0\")\n    6L\n    >>> hex_key(\"\
  2020\")\n    2L\n    \n*/\nlong hex_key(string num) \n"
tests: "unittest\n{\n    alias candidate = hex_key;\n\n    assert(candidate(\"AB\"\
  ) == 1L);\n    assert(candidate(\"1077E\") == 2L);\n    assert(candidate(\"ABED1A33\"\
  ) == 4L);\n    assert(candidate(\"2020\") == 2L);\n    assert(candidate(\"123456789ABCDEF0\"\
  ) == 6L);\n    assert(candidate(\"112233445566778899AABBCCDDEEFF00\") == 12L);\n\
  }\nvoid main(){}"
completions: ["{\n    long count = 0;\n    foreach(immutable c; num)\n    {\n    \
    \    if(c == '2' || c == '3' || c == '5' || c == '7' || c == 'B' || c == 'D')\n\
    \        {\n            count++;\n        }\n    }\n    return count;\n}", "{\n\
    \    long count = 0;\n    foreach(char c; num)\n    {\n        if(c == '2' ||\
    \ c == '3' || c == '5' || c == '7' || c == 'B' || c == 'D')\n        {\n     \
    \       count++;\n        }\n    }\n    return count;\n}", "{\n    long count\
    \ = 0;\n    foreach(immutable c; num)\n    {\n        if(c == '2' || c == '3'\
    \ || c == '5' || c == '7' || c == 'B' || c == 'D')\n        {\n            count++;\n\
    \        }\n    }\n    return count;\n}", "{\n    long count = 0;\n    foreach(i;\
    \ num)\n    {\n        switch(i)\n        {\n            case '2':\n         \
    \   case '3':\n            case '5':\n            case '7':\n            case\
    \ 'B':\n            case 'D':\n                count++;\n                break;\n\
    \        }\n    }\n    return count;\n}", "{\n    long count = 0;\n    foreach(i;\
    \ num)\n    {\n        if(i == '2' || i == '3' || i == '5' || i == '7' || i ==\
    \ 'B' || i == 'D')\n        {\n            count++;\n        }\n    }\n    return\
    \ count;\n}\n/*\nYou have been tasked to write a function that receives a string\
    \ and \n    returns a string that contains the same characters as the input string,\
    \ \n    but in a reversed order.\n    Examples:\n    >>> reverse_string(\"Hello\
    \ World!\")\n    \"!dlroW olleH\"\n    >>> reverse_string(\"\")\n    \"\"\n  \
    \  >>> reverse_string(\"a\")\n    \"a\"\n    >>> reverse_string(\"ab\")\n    \"\
    ba\"\n    >>> reverse_string(\"abc\")\n    \"cba\"\n    >>> reverse_string(\"\
    abcdefghijklmnopqrstuvwxyz\")\n    \"zyxwvutsrqponmlkjihgfedcba\"\n*/\nstring\
    \ reverse_string(string str) \n{\n    string result = \"\";\n    foreach(i; str)\n\
    \    {\n        result = i ~ result;\n    }\n    return result;\n}\n/*\nYou have\
    \ been tasked to write a function that receives a string and \n    returns a string\
    \ that contains the same characters as the input string, \n    but in a reversed\
    \ order.\n    Examples:\n    >>> reverse_string(\"Hello World!\")\n    \"!dlroW\
    \ olleH\"\n    >>> reverse_string(\"\")\n    \"\"\n    >>> reverse_string(\"a\"\
    )\n    \"a\"\n    >>> reverse_string(\"ab\")\n    \"ba\"\n    >>> reverse_string(\"\
    abc\")\n    \"cba\"\n    >>> reverse_string(\"abcdefghijklmnopqrstuvwxyz\")\n\
    \    \"zyxwvutsrqponmlkjihgfedcba\"\n*/\nstring reverse_string(string str) \n\
    {\n    string result = \"\";\n    foreach(i; str)\n    {\n        result = i ~\
    \ result;\n    }\n    return result;\n}\n/*\nYou", "{\n    long result = 0;\n\
    \    string hex = \"0123456789ABCDEF\";\n    foreach(i; 0 .. num.length)\n   \
    \ {\n        if(hex[num[i]] == '2' || hex[num[i]] == '3' || hex[num[i]] == '5'\
    \ || hex[num[i]] == '7' || hex[num[i]] == 'B' || hex[num[i]] == 'D')\n       \
    \ {\n            result++;\n        }\n    }\n    return result;\n}", "{\n   \
    \ long count = 0;\n    foreach(i; num)\n    {\n        if(i == '2' || i == '3'\
    \ || i == '5' || i == '7' || i == 'B' || i == 'D')\n        {\n            count++;\n\
    \        }\n    }\n    return count;\n}", "{\n    long count = 0;\n    foreach(i;\
    \ num)\n    {\n        if(i == '2' || i == '3' || i == '5' || i == '7' || i ==\
    \ 'B' || i == 'D')\n        {\n            count++;\n        }\n    }\n    return\
    \ count;\n}", "{\n    long count = 0;\n    foreach(c; num)\n    {\n        if(c\
    \ == '2' || c == '3' || c == '5' || c == '7' || c == 'B' || c == 'D')\n      \
    \  {\n            count++;\n        }\n    }\n    return count;\n}", "{\n    long\
    \ count = 0;\n    foreach(char c; num)\n    {\n        if(c == '2' || c == '3'\
    \ || c == '5' || c == '7' || c == 'B' || c == 'D')\n        {\n            count++;\n\
    \        }\n    }\n    return count;\n}", "{\n    long count = 0;\n    foreach(immutable\
    \ c; num)\n    {\n        if(c == '2' || c == '3' || c == '5' || c == '7' || c\
    \ == 'B' || c == 'D')\n        {\n            count++;\n        }\n    }\n   \
    \ return count;\n}", "{\n    long result = 0;\n    foreach(i; num)\n    {\n  \
    \      if(i == '2' || i == '3' || i == '5' || i == '7' || i == 'B' || i == 'D')\n\
    \        {\n            result++;\n        }\n    }\n    return result;\n}", "{\n\
    \    long count = 0;\n    foreach(c; num)\n    {\n        if(c == '2' || c ==\
    \ '3' || c == '5' || c == '7' || c == 'B' || c == 'D')\n        {\n          \
    \  count++;\n        }\n    }\n    return count;\n}", "{\n    int[] primes = [2,\
    \ 3, 5, 7, 11, 13];\n    int[] hex_digits = [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10,\
    \ 11, 12, 13, 14, 15];\n    int[] hex_primes = [2, 3, 5, 7, 11, 13];\n    int[]\
    \ hex_non_primes = [0, 1, 4, 6, 8, 9, 10, 12, 14, 15];\n    int[] hex_digits_in_num\
    \ = [];\n    int[] hex_primes_in_num = [];\n    int[] hex_non_primes_in_num =\
    \ [];\n    int[] hex_primes_in_num_count = [];\n    int[] hex_non_primes_in_num_count\
    \ = [];\n    int[] hex_primes_in_num_count_sum = [];\n    int[] hex_non_primes_in_num_count_sum\
    \ = [];\n    int[] hex_primes_in_num_count_sum_sum = [];\n    int[] hex_non_primes_in_num_count_sum_sum\
    \ = [];\n    int[] hex_primes_in_num_count_sum_sum_sum = [];\n    int[] hex_non_primes_in_num_count_sum_sum_sum\
    \ = [];\n    int[] hex_primes_in_num_count_sum_sum_sum_sum = [];\n    int[] hex_non_primes_in_num_count_sum_sum_sum_sum\
    \ = [];\n    int[] hex_primes_in_num_count_sum_sum_sum_sum_sum = [];\n    int[]\
    \ hex_non_primes_in_num_count_sum_sum_sum_sum_sum = [];\n    int[] hex_primes_in_num_count_sum_sum_sum_sum_sum_sum\
    \ = [];\n    int[] hex_non_primes_in_num_count_sum_sum_sum_sum_sum_sum = [];\n\
    \    int[] hex_primes_in_num_count_sum_sum_sum_sum_sum_sum_sum", "{\n    long\
    \ count = 0;\n    foreach(char c; num)\n    {\n        if(c == '2' || c == '3'\
    \ || c == '5' || c == '7' || c == 'B' || c == 'D')\n        {\n            count++;\n\
    \        }\n    }\n    return count;\n}", "{\n    long count = 0;\n    foreach(char\
    \ c; num)\n    {\n        if(c == '2' || c == '3' || c == '5' || c == '7' || c\
    \ == 'B' || c == 'D')\n        {\n            count++;\n        }\n    }\n   \
    \ return count;\n}", "{\n    long result = 0;\n    foreach(immutable char c; num)\n\
    \    {\n        if(c == '2' || c == '3' || c == '5' || c == '7' || c == 'B' ||\
    \ c == 'D')\n        {\n            result++;\n        }\n    }\n    return result;\n\
    }", "{\n    long count = 0;\n    foreach(char c; num)\n    {\n        if(c ==\
    \ '2' || c == '3' || c == '5' || c == '7' || c == 'B' || c == 'D')\n        {\n\
    \            count++;\n        }\n    }\n    return count;\n}", "{\n    long count\
    \ = 0;\n    foreach(char c; num)\n    {\n        if(c == '2' || c == '3' || c\
    \ == '5' || c == '7' || c == 'B' || c == 'D')\n        {\n            count++;\n\
    \        }\n    }\n    return count;\n}", "{\n    long count = 0;\n    foreach(char\
    \ c; num)\n    {\n        if(c == '2' || c == '3' || c == '5' || c == '7' || c\
    \ == 'B' || c == 'D')\n        {\n            count++;\n        }\n    }\n   \
    \ return count;\n}", "{\n    long count = 0;\n    foreach(char c; num)\n    {\n\
    \        if(c == '2' || c == '3' || c == '5' || c == '7' || c == 'B' || c == 'D')\n\
    \        {\n            count++;\n        }\n    }\n    return count;\n}", "{\n\
    \    long result = 0;\n    foreach(char c; num)\n    {\n        if(c == '2' ||\
    \ c == '3' || c == '5' || c == '7' || c == 'B' || c == 'D')\n            result++;\n\
    \    }\n    return result;\n}", "{\n    long count = 0;\n    foreach(char c; num)\n\
    \    {\n        if(c == '2' || c == '3' || c == '5' || c == '7' || c == 'B' ||\
    \ c == 'D')\n        {\n            count++;\n        }\n    }\n    return count;\n\
    }", "{\n    long count = 0;\n    foreach(i; num)\n    {\n        if (i == '2'\
    \ || i == '3' || i == '5' || i == '7' || i == 'B' || i == 'D')\n        {\n  \
    \          count++;\n        }\n    }\n    return count;\n}\n/*\nYou have been\
    \ tasked to write a function that receives a string of \n    hexadecimal digits\
    \ and returns a string of binary digits.\n    Hexadecimal digits are 0, 1, 2,\
    \ 3, 4, 5, 6, 7, 8, 9, A, B, C, D, E, F.\n    Binary digits are 0, 1.\n    Note:\
    \ you may assume the input is always correct or empty string, \n    and symbols\
    \ A,B,C,D,E,F are always uppercase.\n    Examples:\n    >>> hex_to_bin(\"AB\"\
    )\n    \"10101011\"\n    >>> hex_to_bin(\"1077E\")\n    \"00010000011101111110\"\
    \n    >>> hex_to_bin(\"ABED1A33\")\n    \"1010101111011010001010001110011\"\n\
    \    >>> hex_to_bin(\"123456789ABCDEF0\")\n    \"0001001000110100010101100111100010011010101111001101111011110000\"\
    \n    >>> hex_to_bin(\"2020\")\n    \"0010000000100000\"\n*/\nstring hex_to_bin(string\
    \ num) \n{\n    string result = \"\";\n    foreach(i; num)\n    {\n        switch(i)\n\
    \        {\n            case '0':\n                result ~= \"0000\";\n     \
    \           break;\n            case '1':\n                result ~= \"0001\"\
    ;\n                break;\n            case '2':\n                result ~= \"\
    0010\";\n                break;\n            case '3':\n                result\
    \ ~= \"0011\";\n                break;\n            case '4':\n              \
    \  result ~= \"0100\";\n                break;\n            case '5':\n      \
    \          result ~= \"0101\";\n                break;\n            case '6':\n\
    \                result ~= \"0110\";\n                break;", "{\n    long result\
    \ = 0;\n    long[] primes = [2, 3, 5, 7, 11, 13];\n    foreach(i; 0 .. num.length)\n\
    \    {\n        if(primes.canFind(to!long(num[i], 16)))\n        {\n         \
    \   result++;\n        }\n    }\n    return result;\n}", "{\n    long count =\
    \ 0;\n    foreach(char c; num)\n    {\n        if(c == '2' || c == '3' || c ==\
    \ '5' || c == '7' || c == 'B' || c == 'D')\n        {\n            count++;\n\
    \        }\n    }\n    return count;\n}", "{\n    long count = 0;\n    foreach(c;\
    \ num)\n    {\n        if(c == '2' || c == '3' || c == '5' || c == '7' || c ==\
    \ 'B' || c == 'D')\n        {\n            count++;\n        }\n    }\n    return\
    \ count;\n}", "{\n    long count = 0;\n    foreach(i; num)\n    {\n        if(i\
    \ == '2' || i == '3' || i == '5' || i == '7' || i == 'B' || i == 'D')\n      \
    \  {\n            count++;\n        }\n    }\n    return count;\n}", "{\n    long\
    \ result = 0;\n    foreach(char c; num) \n    {\n        if(c == '2' || c == '3'\
    \ || c == '5' || c == '7' || c == 'B' || c == 'D') \n        {\n            result++;\n\
    \        }\n    }\n    return result;\n}", "{\n    long count = 0;\n    foreach(i;\
    \ num)\n    {\n        if(i == '2' || i == '3' || i == '5' || i == '7' || i ==\
    \ 'B' || i == 'D')\n        {\n            count++;\n        }\n    }\n    return\
    \ count;\n}", "{\n    long count = 0;\n    foreach(char c; num)\n    {\n     \
    \   if(c == '2' || c == '3' || c == '5' || c == '7' || c == 'B' || c == 'D')\n\
    \        {\n            count++;\n        }\n    }\n    return count;\n}", "{\n\
    \    long result = 0;\n    foreach(char c; num)\n    {\n        if(c == '2' ||\
    \ c == '3' || c == '5' || c == '7' || c == 'B' || c == 'D')\n            result++;\n\
    \    }\n    return result;\n}", "{\n    long count = 0;\n    foreach(c; num)\n\
    \    {\n        if(c == '2' || c == '3' || c == '5' || c == '7' || c == 'B' ||\
    \ c == 'D')\n        {\n            count++;\n        }\n    }\n    return count;\n\
    }", "{\n    long count = 0;\n    foreach(char c; num)\n    {\n        if(c ==\
    \ '2' || c == '3' || c == '5' || c == '7' || c == 'B' || c == 'D')\n        {\n\
    \            count++;\n        }\n    }\n    return count;\n}", "{\n    long count\
    \ = 0;\n    foreach(i; num)\n    {\n        if(i == '2' || i == '3' || i == '5'\
    \ || i == '7' || i == 'B' || i == 'D')\n        {\n            count++;\n    \
    \    }\n    }\n    return count;\n}", "{\n    long count = 0;\n    foreach(c;\
    \ num)\n    {\n        if(c == '2' || c == '3' || c == '5' || c == '7' || c ==\
    \ 'B' || c == 'D')\n        {\n            count++;\n        }\n    }\n    return\
    \ count;\n}", "{\n    long count = 0;\n    foreach(char c; num)\n    {\n     \
    \   if(c == '2' || c == '3' || c == '5' || c == '7' || c == 'B' || c == 'D')\n\
    \        {\n            count++;\n        }\n    }\n    return count;\n}", "{\n\
    \    long result = 0;\n    foreach(char c; num)\n    {\n        if(c == '2' ||\
    \ c == '3' || c == '5' || c == '7' || c == 'B' || c == 'D')\n            result++;\n\
    \    }\n    return result;\n}", "{\n    long count = 0;\n    foreach(i; num)\n\
    \    {\n        if(i == '2' || i == '3' || i == '5' || i == '7' || i == 'B' ||\
    \ i == 'D')\n        {\n            count++;\n        }\n    }\n    return count;\n\
    }", "{\n    long count = 0;\n    foreach(i; num)\n    {\n        if(i == '2' ||\
    \ i == '3' || i == '5' || i == '7' || i == 'B' || i == 'D')\n        {\n     \
    \       count++;\n        }\n    }\n    return count;\n}", "{\n    long count\
    \ = 0;\n    foreach(char c; num)\n    {\n        if(c == '2' || c == '3' || c\
    \ == '5' || c == '7' || c == 'B' || c == 'D')\n        {\n            count++;\n\
    \        }\n    }\n    return count;\n}", "{\n    long count = 0;\n    foreach(c;\
    \ num)\n    {\n        if(c == '2' || c == '3' || c == '5' || c == '7' || c ==\
    \ 'B' || c == 'D')\n        {\n            count++;\n        }\n    }\n    return\
    \ count;\n}", "{\n    long result = 0;\n    foreach(c; num)\n    {\n        if(c\
    \ == '2' || c == '3' || c == '5' || c == '7' || c == 'B' || c == 'D')\n      \
    \  {\n            result++;\n        }\n    }\n    return result;\n}", "{\n  \
    \  long count = 0;\n    foreach(char c; num)\n    {\n        if(c == '2' || c\
    \ == '3' || c == '5' || c == '7' || c == 'B' || c == 'D')\n        {\n       \
    \     count++;\n        }\n    }\n    return count;\n}", "{\n    long count =\
    \ 0;\n    foreach(char c; num)\n    {\n        if(c == '2' || c == '3' || c ==\
    \ '5' || c == '7' || c == 'B' || c == 'D')\n        {\n            count++;\n\
    \        }\n    }\n    return count;\n}", "{\n    long count = 0;\n    foreach(i;\
    \ num)\n    {\n        if(i == '2' || i == '3' || i == '5' || i == '7' || i ==\
    \ 'B' || i == 'D')\n        {\n            count++;\n        }\n    }\n    return\
    \ count;\n}", "{\n    long count = 0;\n    foreach(char c; num)\n    {\n     \
    \   if(c == '2' || c == '3' || c == '5' || c == '7' || c == 'B' || c == 'D')\n\
    \        {\n            count++;\n        }\n    }\n    return count;\n}", "{\n\
    \    long result = 0;\n    foreach(immutable c; num)\n    {\n        if (c ==\
    \ '2' || c == '3' || c == '5' || c == '7' || c == 'B' || c == 'D')\n         \
    \   result++;\n    }\n    return result;\n}", "{\n    long count = 0;\n    string\
    \ hex = \"2357BDF\";\n    foreach(char c; num)\n    {\n        if(hex.find(c)\
    \ != -1)\n            count++;\n    }\n    return count;\n}", "{\n    long count\
    \ = 0;\n    foreach(char c; num)\n    {\n        if(c == '2' || c == '3' || c\
    \ == '5' || c == '7' || c == 'B' || c == 'D')\n        {\n            count++;\n\
    \        }\n    }\n    return count;\n}", "{\n    long result = 0;\n    foreach(char\
    \ c; num)\n    {\n        if(c == '2' || c == '3' || c == '5' || c == '7' || c\
    \ == 'B' || c == 'D')\n            result++;\n    }\n    return result;\n}", "{\n\
    \    long count = 0;\n    foreach(char c; num)\n    {\n        if(c == '2' ||\
    \ c == '3' || c == '5' || c == '7' || c == 'B' || c == 'D')\n        {\n     \
    \       count++;\n        }\n    }\n    return count;\n}\n/*\n    You have been\
    \ tasked to write a function that receives a string \n    and returns the number\
    \ of vowels in it.\n    Vowels are: a, e, i, o, u, y.\n    Note: you may assume\
    \ the input is always correct or empty string.\n    Examples:\n    >>> vowels_count(\"\
    abc\")\n    1L\n    >>> vowels_count(\"abcde\")\n    2L\n    >>> vowels_count(\"\
    abcdea\")\n    3L\n    >>> vowels_count(\"abcdeaA\")\n    4L\n    >>> vowels_count(\"\
    \")\n    0L\n*/\nlong vowels_count(string s)\n{\n    long count = 0;\n    foreach(char\
    \ c; s)\n    {\n        if(c == 'a' || c == 'e' || c == 'i' || c == 'o' || c ==\
    \ 'u' || c == 'y')\n        {\n            count++;\n        }\n    }\n    return\
    \ count;\n}\n/*\n    You have been tasked to write a function that receives a\
    \ string \n    and returns the number of consonants in it.\n    Consonants are:\
    \ b, c, d, f, g, h, j, k, l, m, n, p, q, r, s, t, v, w, x, z.\n    Note: you may\
    \ assume the input is always correct or empty string.\n    Examples:\n    >>>\
    \ consonants_count(\"abc\")\n    2L\n    >>> consonants_count(\"abcde\")\n   \
    \ 3L\n    >>> consonants_count(\"abcdea\")\n    4L\n    >>> consonants_count(\"\
    abcdeaA\")\n    4L\n    >>> consonants_count(\"\")\n    0L\n*/\nlong consonants_count(string\
    \ s)\n{\n    long count = 0;\n    fore", "{\n    long result = 0;\n    foreach(char\
    \ c; num)\n    {\n        if(c == '2' || c == '3' || c == '5' || c == '7' || c\
    \ == 'B' || c == 'D')\n            result++;\n    }\n    return result;\n}", "{\n\
    \    long count = 0;\n    foreach(i; num)\n    {\n        if(i == '2' || i ==\
    \ '3' || i == '5' || i == '7' || i == 'B' || i == 'D')\n        {\n          \
    \  count++;\n        }\n    }\n    return count;\n}", "{\n    long count = 0;\n\
    \    foreach(char c; num)\n    {\n        if(c == '2' || c == '3' || c == '5'\
    \ || c == '7' || c == 'B' || c == 'D')\n        {\n            count++;\n    \
    \    }\n    }\n    return count;\n}", "{\n    long count = 0;\n    foreach(i;\
    \ num)\n    {\n        if(i == '2' || i == '3' || i == '5' || i == '7' || i ==\
    \ 'B' || i == 'D')\n        {\n            count++;\n        }\n    }\n    return\
    \ count;\n}", "{\n    long count = 0;\n    foreach(c; num)\n    {\n        if\
    \ (c == '2' || c == '3' || c == '5' || c == '7' || c == 'B' || c == 'D')\n   \
    \         count++;\n    }\n    return count;\n}", "{\n    long count = 0;\n  \
    \  foreach(c; num)\n    {\n        if(c == '2' || c == '3' || c == '5' || c ==\
    \ '7' || c == 'B' || c == 'D')\n        {\n            count++;\n        }\n \
    \   }\n    return count;\n}", "{\n    long count = 0;\n    foreach(i; num)\n \
    \   {\n        if(i == '2' || i == '3' || i == '5' || i == '7' || i == 'B' ||\
    \ i == 'D')\n        {\n            count++;\n        }\n    }\n    return count;\n\
    }", "{\n    long count = 0;\n    foreach(char c; num)\n    {\n        if(c ==\
    \ '2' || c == '3' || c == '5' || c == '7' || c == 'B' || c == 'D')\n        {\n\
    \            count++;\n        }\n    }\n    return count;\n}", "{\n    long count\
    \ = 0;\n    foreach(i; num)\n    {\n        if(i == '2' || i == '3' || i == '5'\
    \ || i == '7' || i == 'B' || i == 'D')\n        {\n            count++;\n    \
    \    }\n    }\n    return count;\n}", "{\n    long count = 0;\n    foreach(hex;\
    \ num)\n    {\n        if(hex == '2' || hex == '3' || hex == '5' || hex == '7'\
    \ || hex == 'B' || hex == 'D')\n        {\n            count++;\n        }\n \
    \   }\n    return count;\n}", "{\n    long count = 0;\n    foreach(char c; num)\n\
    \    {\n        if(c == '2' || c == '3' || c == '5' || c == '7' || c == 'B' ||\
    \ c == 'D')\n        {\n            count++;\n        }\n    }\n    return count;\n\
    }", "{\n    long count = 0;\n    foreach(char c; num)\n    {\n        switch(c)\n\
    \        {\n            case '2':\n            case '3':\n            case '5':\n\
    \            case '7':\n            case 'B':\n            case 'D':\n       \
    \         count++;\n                break;\n        }\n    }\n    return count;\n\
    }", "{\n    long count = 0;\n    foreach(i; num)\n    {\n        if(i == '2' ||\
    \ i == '3' || i == '5' || i == '7' || i == 'B' || i == 'D')\n        {\n     \
    \       count++;\n        }\n    }\n    return count;\n}", "{\n    long count\
    \ = 0;\n    foreach(char c; num)\n    {\n        if(c == '2' || c == '3' || c\
    \ == '5' || c == '7' || c == 'B' || c == 'D')\n        {\n            count++;\n\
    \        }\n    }\n    return count;\n}", "{\n    long count = 0;\n    foreach(c;\
    \ num)\n    {\n        if(c == '2' || c == '3' || c == '5' || c == '7' || c ==\
    \ 'B' || c == 'D')\n        {\n            count++;\n        }\n    }\n    return\
    \ count;\n}", "{\n    long result = 0;\n    foreach(char c; num)\n    {\n    \
    \    if(c == '2' || c == '3' || c == '5' || c == '7' || c == 'B' || c == 'D')\n\
    \            result++;\n    }\n    return result;\n}", "{\n    long result = 0;\n\
    \    foreach(c; num)\n    {\n        if(c == '2' || c == '3' || c == '5' || c\
    \ == '7' || c == 'B' || c == 'D')\n        {\n            result++;\n        }\n\
    \    }\n    return result;\n}", "{\n    long count = 0;\n    foreach(immutable\
    \ c; num)\n    {\n        if(c == '2' || c == '3' || c == '5' || c == '7' || c\
    \ == 'B' || c == 'D')\n        {\n            count++;\n        }\n    }\n   \
    \ return count;\n}", "{\n    long count = 0;\n    foreach(char c; num)\n    {\n\
    \        if(c == '2' || c == '3' || c == '5' || c == '7' || c == 'B' || c == 'D')\n\
    \        {\n            count++;\n        }\n    }\n    return count;\n}", "{\n\
    \    long result = 0;\n    foreach(c; num)\n    {\n        if(c == '2' || c ==\
    \ '3' || c == '5' || c == '7' || c == 'B' || c == 'D')\n        {\n          \
    \  result++;\n        }\n    }\n    return result;\n}", "{\n    long count = 0;\n\
    \    foreach(i; 0 .. num.length)\n    {\n        if(num[i] == '2' || num[i] ==\
    \ '3' || num[i] == '5' || num[i] == '7' || num[i] == 'B' || num[i] == 'D')\n \
    \       {\n            count++;\n        }\n    }\n    return count;\n}", "{\n\
    \    long count = 0;\n    long[] primes = [2, 3, 5, 7, 11, 13];\n    foreach(i;\
    \ primes)\n    {\n        foreach(j; num)\n        {\n            if(i == j)\n\
    \            {\n                count++;\n            }\n        }\n    }\n  \
    \  return count;\n}", "{\n    long count = 0;\n    foreach(i; num)\n    {\n  \
    \      if(i == '2' || i == '3' || i == '5' || i == '7' || i == 'B' || i == 'D')\n\
    \        {\n            count++;\n        }\n    }\n    return count;\n}", "{\n\
    \    long count = 0;\n    foreach(c; num)\n    {\n        if(c == '2' || c ==\
    \ '3' || c == '5' || c == '7' || c == 'B' || c == 'D')\n        {\n          \
    \  count++;\n        }\n    }\n    return count;\n}", "{\n    long result = 0;\n\
    \    foreach(c; num)\n    {\n        if(c == '2' || c == '3' || c == '5' || c\
    \ == '7' || c == 'B' || c == 'D')\n        {\n            result++;\n        }\n\
    \    }\n    return result;\n}", "{\n    long result = 0;\n    foreach(immutable\
    \ c; num)\n    {\n        if(c == '2' || c == '3' || c == '5' || c == '7' || c\
    \ == 'B' || c == 'D')\n        {\n            result++;\n        }\n    }\n  \
    \  return result;\n}", "{\n    long count = 0;\n    foreach(c; num)\n    {\n \
    \       switch(c)\n        {\n            case '2':\n            case '3':\n \
    \           case '5':\n            case '7':\n            case 'B':\n        \
    \    case 'D':\n                count++;\n                break;\n        }\n\
    \    }\n    return count;\n}", "{\n    long count = 0;\n    foreach(c; num)\n\
    \    {\n        if(c == '2' || c == '3' || c == '5' || c == '7' || c == 'B' ||\
    \ c == 'D')\n        {\n            count++;\n        }\n    }\n    return count;\n\
    }", "{\n    long count = 0;\n    foreach(char c; num)\n    {\n        if(c ==\
    \ '2' || c == '3' || c == '5' || c == '7' || c == 'B' || c == 'D')\n        {\n\
    \            count++;\n        }\n    }\n    return count;\n}", "{\n    long count\
    \ = 0;\n    foreach(char c; num)\n    {\n        if(c == '2' || c == '3' || c\
    \ == '5' || c == '7' || c == 'B' || c == 'D')\n        {\n            count++;\n\
    \        }\n    }\n    return count;\n}", "{\n    long count = 0;\n    foreach(char\
    \ c; num)\n    {\n        if(c == '2' || c == '3' || c == '5' || c == '7' || c\
    \ == 'B' || c == 'D')\n        {\n            count++;\n        }\n    }\n   \
    \ return count;\n}", "{\n    long count = 0;\n    foreach(char c; num)\n    {\n\
    \        if(c == '2' || c == '3' || c == '5' || c == '7' || c == 'B' || c == 'D')\n\
    \        {\n            count++;\n        }\n    }\n    return count;\n}", "{\n\
    \    long count = 0;\n    foreach(i; num)\n    {\n        if(i == '2' || i ==\
    \ '3' || i == '5' || i == '7' || i == 'B' || i == 'D')\n        {\n          \
    \  count++;\n        }\n    }\n    return count;\n}", "{\n    long count = 0;\n\
    \    int[] primes = [2, 3, 5, 7, 11, 13];\n    foreach(char c; num)\n    {\n \
    \       if(c >= '0' && c <= '9')\n        {\n            if(primes.canFind(c -\
    \ '0'))\n                count++;\n        }\n        else if(c >= 'A' && c <=\
    \ 'F')\n        {\n            if(primes.canFind(c - 'A' + 10))\n            \
    \    count++;\n        }\n    }\n    return count;\n}", "{\n    long count = 0;\n\
    \    foreach(i; num)\n    {\n        if(i == '2' || i == '3' || i == '5' || i\
    \ == '7' || i == 'B' || i == 'D')\n        {\n            count++;\n        }\n\
    \    }\n    return count;\n}", "{\n    long result = 0;\n    foreach(char c; num)\n\
    \    {\n        if(c == '2' || c == '3' || c == '5' || c == '7' || c == 'B' ||\
    \ c == 'D')\n            result++;\n    }\n    return result;\n}", "{\n    long\
    \ result = 0;\n    foreach(immutable char c; num)\n    {\n        if(c == '2'\
    \ || c == '3' || c == '5' || c == '7' || c == 'B' || c == 'D')\n        {\n  \
    \          result++;\n        }\n    }\n    return result;\n}", "{\n    long count\
    \ = 0;\n    long[] primes = [2, 3, 5, 7, 11, 13];\n    foreach(char c; num)\n\
    \    {\n        if(c >= '0' && c <= '9')\n        {\n            if(primes.canFind(c\
    \ - '0'))\n                count++;\n        }\n        else if(c >= 'A' && c\
    \ <= 'F')\n        {\n            if(primes.canFind(c - 'A' + 10))\n         \
    \       count++;\n        }\n    }\n    return count;\n}", "{\n    long count\
    \ = 0;\n    foreach(immutable char c; num)\n    {\n        if(c == '2' || c ==\
    \ '3' || c == '5' || c == '7' || c == 'B' || c == 'D')\n        {\n          \
    \  count++;\n        }\n    }\n    return count;\n}", "{\n    long result = 0;\n\
    \    foreach(i; 0 .. num.length)\n    {\n        if(num[i] == '2' || num[i] ==\
    \ '3' || num[i] == '5' || num[i] == '7' || num[i] == 'B' || num[i] == 'D')\n \
    \       {\n            result++;\n        }\n    }\n    return result;\n}", "{\n\
    \    long count = 0;\n    foreach(i; num)\n    {\n        if(i == '2' || i ==\
    \ '3' || i == '5' || i == '7' || i == 'B' || i == 'D')\n        {\n          \
    \  count++;\n        }\n    }\n    return count;\n}", "{\n    long count = 0;\n\
    \    foreach(immutable char c; num)\n    {\n        if(c == '2' || c == '3' ||\
    \ c == '5' || c == '7' || c == 'B' || c == 'D')\n        {\n            count++;\n\
    \        }\n    }\n    return count;\n}", "{\n    long result = 0;\n    foreach(c;\
    \ num)\n    {\n        if(c == '2' || c == '3' || c == '5' || c == '7' || c ==\
    \ 'B' || c == 'D')\n        {\n            result++;\n        }\n    }\n    return\
    \ result;\n}", "{\n    long count = 0;\n    foreach(char c; num)\n    {\n    \
    \    if(c == '2' || c == '3' || c == '5' || c == '7' || c == 'B' || c == 'D')\n\
    \        {\n            count++;\n        }\n    }\n    return count;\n}", "{\n\
    \    long count = 0;\n    foreach(c; num)\n    {\n        if(c == '2' || c ==\
    \ '3' || c == '5' || c == '7' || c == 'B' || c == 'D')\n        {\n          \
    \  count++;\n        }\n    }\n    return count;\n}", "{\n    long result = 0;\n\
    \    foreach(i; num)\n    {\n        if(i == '2' || i == '3' || i == '5' || i\
    \ == '7' || i == 'B' || i == 'D')\n        {\n            result++;\n        }\n\
    \    }\n    return result;\n}", "{\n    long count = 0;\n    foreach(c; num)\n\
    \    {\n        if(c == '2' || c == '3' || c == '5' || c == '7' || c == 'B' ||\
    \ c == 'D')\n        {\n            count++;\n        }\n    }\n    return count;\n\
    }", "{\n    long result = 0;\n    foreach(char c; num)\n    {\n        if(c ==\
    \ '2' || c == '3' || c == '5' || c == '7' || c == 'B' || c == 'D')\n        {\n\
    \            result++;\n        }\n    }\n    return result;\n}", "{\n    long\
    \ count = 0;\n    foreach(char c; num)\n    {\n        if(c == '2' || c == '3'\
    \ || c == '5' || c == '7' || c == 'B' || c == 'D')\n        {\n            count++;\n\
    \        }\n    }\n    return count;\n}", "{\n    long count = 0;\n    foreach(char\
    \ c; num)\n    {\n        if(c == '2' || c == '3' || c == '5' || c == '7' || c\
    \ == 'B' || c == 'D')\n        {\n            count++;\n        }\n    }\n   \
    \ return count;\n}", "{\n    long count = 0;\n    foreach(i; num)\n    {\n   \
    \     if(i == '2' || i == '3' || i == '5' || i == '7' || i == 'B' || i == 'D')\n\
    \        {\n            count++;\n        }\n    }\n    return count;\n}", "{\n\
    \    long count = 0;\n    foreach(c; num)\n    {\n        long n = c.to!long(16);\n\
    \        if(n == 2 || n == 3 || n == 5 || n == 7 || n == 11 || n == 13)\n    \
    \        count++;\n    }\n    return count;\n}", "{\n    long result = 0;\n  \
    \  long[] primes = [2, 3, 5, 7, 11, 13];\n    foreach(i; 0 .. num.length)\n  \
    \  {\n        if(primes.canFind(num[i]))\n            result++;\n    }\n    return\
    \ result;\n}", "{\n    long count = 0;\n    foreach(char c; num)\n    {\n    \
    \    if(c == '2' || c == '3' || c == '5' || c == '7' || c == 'B' || c == 'D')\n\
    \        {\n            count++;\n        }\n    }\n    return count;\n}", "{\n\
    \    long result = 0;\n    long[] primes = [2, 3, 5, 7, 11, 13];\n    foreach(char\
    \ c; num)\n    {\n        long n = c.to!long(16);\n        if(n in primes)\n \
    \           result++;\n    }\n    return result;\n}", "{\n    long count = 0;\n\
    \    foreach(char c; num)\n    {\n        if(c == '2' || c == '3' || c == '5'\
    \ || c == '7' || c == 'B' || c == 'D')\n        {\n            count++;\n    \
    \    }\n    }\n    return count;\n}", "{\n    long count = 0;\n    foreach(char\
    \ c; num)\n    {\n        if(c == '2' || c == '3' || c == '5' || c == '7' || c\
    \ == 'B' || c == 'D')\n        {\n            count++;\n        }\n    }\n   \
    \ return count;\n}", "{\n    long count = 0;\n    foreach(immutable c; num)\n\
    \    {\n        if(c == '2' || c == '3' || c == '5' || c == '7' || c == 'B' ||\
    \ c == 'D')\n        {\n            count++;\n        }\n    }\n    return count;\n\
    }", "{\n    long result = 0;\n    foreach(char c; num)\n    {\n        if(c ==\
    \ '2' || c == '3' || c == '5' || c == '7' || c == 'B' || c == 'D')\n         \
    \   result++;\n    }\n    return result;\n}", "{\n    long count = 0;\n    foreach(c;\
    \ num)\n    {\n        if(c == '2' || c == '3' || c == '5' || c == '7' || c ==\
    \ 'B' || c == 'D')\n        {\n            count++;\n        }\n    }\n    return\
    \ count;\n}", "{\n    long result = 0;\n    foreach(char c; num)\n    {\n    \
    \    if(c == '2' || c == '3' || c == '5' || c == '7' || c == 'B' || c == 'D')\n\
    \            result++;\n    }\n    return result;\n}", "{\n    long count = 0;\n\
    \    foreach(i; num)\n    {\n        if(i == '2' || i == '3' || i == '5' || i\
    \ == '7' || i == 'B' || i == 'D')\n        {\n            count++;\n        }\n\
    \    }\n    return count;\n}", "{\n    long count = 0;\n    foreach(char c; num)\n\
    \    {\n        if(c == '2' || c == '3' || c == '5' || c == '7' || c == 'B' ||\
    \ c == 'D')\n        {\n            count++;\n        }\n    }\n    return count;\n\
    }", "{\n    long count = 0;\n    foreach(char c; num)\n    {\n        if(c ==\
    \ '2' || c == '3' || c == '5' || c == '7' || c == 'B' || c == 'D')\n        {\n\
    \            count++;\n        }\n    }\n    return count;\n}", "{\n    long count\
    \ = 0;\n    foreach(c; num)\n    {\n        if(c == '2' || c == '3' || c == '5'\
    \ || c == '7' || c == 'B' || c == 'D')\n        {\n            count++;\n    \
    \    }\n    }\n    return count;\n}", "{\n    long count = 0;\n    foreach(char\
    \ c; num)\n    {\n        if(c == '2' || c == '3' || c == '5' || c == '7' || c\
    \ == 'B' || c == 'D')\n        {\n            count++;\n        }\n    }\n   \
    \ return count;\n}", "{\n    long result = 0;\n    foreach(immutable c; num)\n\
    \    {\n        if(c == '2' || c == '3' || c == '5' || c == '7' || c == 'B' ||\
    \ c == 'D')\n        {\n            result++;\n        }\n    }\n    return result;\n\
    }", "{\n    long count = 0;\n    foreach(char c; num)\n    {\n        if(c ==\
    \ '2' || c == '3' || c == '5' || c == '7' || c == 'B' || c == 'D')\n        {\n\
    \            count++;\n        }\n    }\n    return count;\n}", "{\n    long count\
    \ = 0;\n    foreach(char c; num)\n    {\n        if(c == '2' || c == '3' || c\
    \ == '5' || c == '7' || c == 'B' || c == 'D')\n        {\n            count++;\n\
    \        }\n    }\n    return count;\n}", "{\n    long count = 0;\n    foreach(i;\
    \ num)\n    {\n        if(i == '2' || i == '3' || i == '5' || i == '7' || i ==\
    \ 'B' || i == 'D')\n        {\n            count++;\n        }\n    }\n    return\
    \ count;\n}", "{\n    long count = 0;\n    foreach(char c; num)\n    {\n     \
    \   if(c == '2' || c == '3' || c == '5' || c == '7' || c == 'B' || c == 'D')\n\
    \        {\n            count++;\n        }\n    }\n    return count;\n}", "{\n\
    \    long result = 0;\n    foreach(char c; num)\n    {\n        if(c == '2' ||\
    \ c == '3' || c == '5' || c == '7' || c == 'B' || c == 'D')\n            result++;\n\
    \    }\n    return result;\n}", "{\n    long count = 0;\n    foreach(char c; num)\n\
    \    {\n        if(c == '2' || c == '3' || c == '5' || c == '7' || c == 'B' ||\
    \ c == 'D')\n        {\n            count++;\n        }\n    }\n    return count;\n\
    }", "{\n    long count = 0;\n    foreach(c; num)\n    {\n        if(c == '2' ||\
    \ c == '3' || c == '5' || c == '7' || c == 'B' || c == 'D')\n        {\n     \
    \       count++;\n        }\n    }\n    return count;\n}", "{\n    long count\
    \ = 0;\n    foreach(char c; num)\n    {\n        if(c == '2' || c == '3' || c\
    \ == '5' || c == '7' || c == 'B' || c == 'D')\n        {\n            count++;\n\
    \        }\n    }\n    return count;\n}", "{\n    long count = 0;\n    foreach(char\
    \ c; num)\n    {\n        if(c == '2' || c == '3' || c == '5' || c == '7' || c\
    \ == 'B' || c == 'D')\n        {\n            count++;\n        }\n    }\n   \
    \ return count;\n}", "{\n    long count = 0;\n    long[] primes = [2, 3, 5, 7,\
    \ 11, 13];\n    foreach(i; primes)\n    {\n        if(num.count(i.to!string(16).toUpper))\n\
    \        {\n            count++;\n        }\n    }\n    return count;\n}", "{\n\
    \    long count = 0;\n    foreach(c; num)\n    {\n        if(c == '2' || c ==\
    \ '3' || c == '5' || c == '7' || c == 'B' || c == 'D')\n        {\n          \
    \  count++;\n        }\n    }\n    return count;\n}", "{\n    long count = 0;\n\
    \    foreach(char c; num)\n    {\n        if(c == '2' || c == '3' || c == '5'\
    \ || c == '7' || c == 'B' || c == 'D')\n        {\n            count++;\n    \
    \    }\n    }\n    return count;\n}", "{\n    long count = 0;\n    foreach(c;\
    \ num)\n    {\n        if(c == '2' || c == '3' || c == '5' || c == '7' || c ==\
    \ 'B' || c == 'D')\n        {\n            count++;\n        }\n    }\n    return\
    \ count;\n}", "{\n    long count = 0;\n    foreach(immutable char c; num)\n  \
    \  {\n        if(c == '2' || c == '3' || c == '5' || c == '7' || c == 'B' || c\
    \ == 'D')\n        {\n            count++;\n        }\n    }\n    return count;\n\
    }", "{\n    long result = 0;\n    foreach(i; num)\n    {\n        if(i == '2'\
    \ || i == '3' || i == '5' || i == '7' || i == 'B' || i == 'D')\n        {\n  \
    \          result++;\n        }\n    }\n    return result;\n}", "{\n    long count\
    \ = 0;\n    foreach(i; num)\n    {\n        if(i == '2' || i == '3' || i == '5'\
    \ || i == '7' || i == 'B' || i == 'D')\n        {\n            count++;\n    \
    \    }\n    }\n    return count;\n}", "{\n    long count = 0;\n    foreach(c;\
    \ num)\n    {\n        if(c == '2' || c == '3' || c == '5' || c == '7' || c ==\
    \ 'B' || c == 'D')\n        {\n            count++;\n        }\n    }\n    return\
    \ count;\n}", "{\n    long count = 0;\n    long[] primes = [2, 3, 5, 7, 11, 13];\n\
    \    foreach(i; primes)\n    {\n        if(num.canFind(i.to!string(16).toUpper))\n\
    \        {\n            count++;\n        }\n    }\n    return count;\n}", "{\n\
    \    long count = 0;\n    foreach(char c; num)\n    {\n        if(c == '2' ||\
    \ c == '3' || c == '5' || c == '7' || c == 'B' || c == 'D')\n        {\n     \
    \       count++;\n        }\n    }\n    return count;\n}", "{\n    long count\
    \ = 0;\n    foreach(char c; num)\n    {\n        if(c == '2' || c == '3' || c\
    \ == '5' || c == '7' || c == 'B' || c == 'D')\n        {\n            count++;\n\
    \        }\n    }\n    return count;\n}", "{\n    long count = 0;\n    foreach(immutable\
    \ char c; num)\n    {\n        if(c == '2' || c == '3' || c == '5' || c == '7'\
    \ || c == 'B' || c == 'D')\n        {\n            count++;\n        }\n    }\n\
    \    return count;\n}", "{\n    long count = 0;\n    foreach(immutable c; num)\n\
    \    {\n        if(c == '2' || c == '3' || c == '5' || c == '7' || c == 'B' ||\
    \ c == 'D')\n        {\n            count++;\n        }\n    }\n    return count;\n\
    }", "{\n    long count = 0;\n    foreach(c; num)\n    {\n        switch(c)\n \
    \       {\n            case '2':\n            case '3':\n            case '5':\n\
    \            case '7':\n            case 'B':\n            case 'D':\n       \
    \         count++;\n                break;\n        }\n    }\n    return count;\n\
    }", "{\n    long count = 0;\n    foreach(char c; num)\n    {\n        if(c ==\
    \ '2' || c == '3' || c == '5' || c == '7' || c == 'B' || c == 'D')\n        {\n\
    \            count++;\n        }\n    }\n    return count;\n}", "{\n    long count\
    \ = 0;\n    foreach(char c; num)\n    {\n        if(c == '2' || c == '3' || c\
    \ == '5' || c == '7' || c == 'B' || c == 'D')\n        {\n            count++;\n\
    \        }\n    }\n    return count;\n}", "{\n    long count = 0;\n    foreach(char\
    \ c; num)\n    {\n        if(c == '2' || c == '3' || c == '5' || c == '7' || c\
    \ == 'B' || c == 'D')\n        {\n            count++;\n        }\n    }\n   \
    \ return count;\n}", "{\n    long count = 0;\n    foreach(c; num)\n    {\n   \
    \     if(c == '2' || c == '3' || c == '5' || c == '7' || c == 'B' || c == 'D')\n\
    \        {\n            count++;\n        }\n    }\n    return count;\n}", "{\n\
    \    long count = 0;\n    foreach(c; num)\n    {\n        if(c == '2' || c ==\
    \ '3' || c == '5' || c == '7' || c == 'B' || c == 'D')\n        {\n          \
    \  count++;\n        }\n    }\n    return count;\n}", "{\n    long count = 0;\n\
    \    foreach(c; num)\n    {\n        if(c == '2' || c == '3' || c == '5' || c\
    \ == '7' || c == 'B' || c == 'D')\n        {\n            count++;\n        }\n\
    \    }\n    return count;\n}", "{\n    long count = 0;\n    foreach(char c; num)\n\
    \    {\n        if(c == '2' || c == '3' || c == '5' || c == '7' || c == 'B' ||\
    \ c == 'D')\n        {\n            count++;\n        }\n    }\n    return count;\n\
    }", "{\n    long count = 0;\n    foreach(char c; num)\n    {\n        if(c ==\
    \ '2' || c == '3' || c == '5' || c == '7' || c == 'B' || c == 'D')\n        {\n\
    \            count++;\n        }\n    }\n    return count;\n}", "{\n    long count\
    \ = 0;\n    long[] primes = [2, 3, 5, 7, 11, 13];\n    foreach(i; primes)\n  \
    \  {\n        if(num.count(i.to!string(16).toUpper))\n        {\n            count++;\n\
    \        }\n    }\n    return count;\n}", "{\n    long count = 0;\n    foreach(c;\
    \ num)\n    {\n        if(c == '2' || c == '3' || c == '5' || c == '7' || c ==\
    \ 'B' || c == 'D')\n        {\n            count++;\n        }\n    }\n    return\
    \ count;\n}", "{\n    long count = 0;\n    foreach(char c; num)\n    {\n     \
    \   if(c == '2' || c == '3' || c == '5' || c == '7' || c == 'B' || c == 'D')\n\
    \        {\n            count++;\n        }\n    }\n    return count;\n}", "{\n\
    \    long count = 0;\n    foreach(i; num)\n    {\n        if(i == '2' || i ==\
    \ '3' || i == '5' || i == '7' || i == 'B' || i == 'D')\n        {\n          \
    \  count++;\n        }\n    }\n    return count;\n}", "{\n    long count = 0;\n\
    \    foreach(char c; num)\n    {\n        if(c == '2' || c == '3' || c == '5'\
    \ || c == '7' || c == 'B' || c == 'D')\n        {\n            count++;\n    \
    \    }\n    }\n    return count;\n}", "{\n    long count = 0;\n    foreach(char\
    \ c; num)\n    {\n        if(c == '2' || c == '3' || c == '5' || c == '7' || c\
    \ == 'B' || c == 'D')\n        {\n            count++;\n        }\n    }\n   \
    \ return count;\n}", "{\n    long count = 0;\n    foreach(char c; num)\n    {\n\
    \        if(c == '2' || c == '3' || c == '5' || c == '7' || c == 'B' || c == 'D')\n\
    \        {\n            count++;\n        }\n    }\n    return count;\n}", "{\n\
    \    long count = 0;\n    foreach(c; num)\n    {\n        if(c == '2' || c ==\
    \ '3' || c == '5' || c == '7' || c == 'B' || c == 'D')\n        {\n          \
    \  count++;\n        }\n    }\n    return count;\n}", "{\n    long count = 0;\n\
    \    foreach(char c; num)\n    {\n        if(c == '2' || c == '3' || c == '5'\
    \ || c == '7' || c == 'B' || c == 'D')\n        {\n            count++;\n    \
    \    }\n    }\n    return count;\n}", "{\n    long count = 0;\n    foreach(char\
    \ c; num)\n    {\n        if(c == '2' || c == '3' || c == '5' || c == '7' || c\
    \ == 'B' || c == 'D')\n        {\n            count++;\n        }\n    }\n   \
    \ return count;\n}", "{\n    long count = 0;\n    foreach(char c; num)\n    {\n\
    \        if(c == '2' || c == '3' || c == '5' || c == '7' || c == 'B' || c == 'D')\n\
    \        {\n            count++;\n        }\n    }\n    return count;\n}", "{\n\
    \    long count = 0;\n    foreach(c; num) \n    {\n        if(c == '2' || c ==\
    \ '3' || c == '5' || c == '7' || c == 'B' || c == 'D') \n        {\n         \
    \   count++;\n        }\n    }\n    return count;\n}", "{\n    long count = 0;\n\
    \    foreach(char c; num)\n    {\n        if(c == '2' || c == '3' || c == '5'\
    \ || c == '7' || c == 'B' || c == 'D')\n        {\n            count++;\n    \
    \    }\n    }\n    return count;\n}", "{\n    long count = 0;\n    foreach(c;\
    \ num)\n    {\n        if(c == '2' || c == '3' || c == '5' || c == '7' || c ==\
    \ 'B' || c == 'D')\n        {\n            count++;\n        }\n    }\n    return\
    \ count;\n}", "{\n    long cnt = 0;\n    foreach(immutable c; num)\n    {\n  \
    \      if(c == '2' || c == '3' || c == '5' || c == '7' || c == 'B' || c == 'D')\n\
    \            cnt++;\n    }\n    return cnt;\n}", "{\n    long count = 0;\n   \
    \ foreach(char c; num)\n    {\n        if(c == '2' || c == '3' || c == '5' ||\
    \ c == '7' || c == 'B' || c == 'D')\n        {\n            count++;\n       \
    \ }\n    }\n    return count;\n}", "{\n    long count = 0;\n    foreach(char c;\
    \ num)\n    {\n        if(c == '2' || c == '3' || c == '5' || c == '7' || c ==\
    \ 'B' || c == 'D')\n        {\n            count++;\n        }\n    }\n    return\
    \ count;\n}", "{\n    long count = 0;\n    foreach(c; num)\n    {\n        if(c\
    \ == '2' || c == '3' || c == '5' || c == '7' || c == 'B' || c == 'D')\n      \
    \  {\n            count++;\n        }\n    }\n    return count;\n}", "{\n    long\
    \ result = 0;\n    foreach(i; 0 .. num.length)\n    {\n        if(num[i] == '2'\
    \ || num[i] == '3' || num[i] == '5' || num[i] == '7' || num[i] == 'B' || num[i]\
    \ == 'D')\n        {\n            result++;\n        }\n    }\n    return result;\n\
    }", "{\n    long count = 0;\n    foreach(char c; num)\n    {\n        if(c ==\
    \ '2' || c == '3' || c == '5' || c == '7' || c == 'B' || c == 'D')\n        {\n\
    \            count++;\n        }\n    }\n    return count;\n}", "{\n    long count\
    \ = 0;\n    foreach(char c; num)\n    {\n        if (c == '2' || c == '3' || c\
    \ == '5' || c == '7' || c == 'B' || c == 'D')\n            count++;\n    }\n \
    \   return count;\n}", "{\n    long count = 0;\n    foreach(i; num)\n    {\n \
    \       if(i == '2' || i == '3' || i == '5' || i == '7' || i == 'B' || i == 'D')\n\
    \        {\n            count++;\n        }\n    }\n    return count;\n}", "{\n\
    \    long result = 0;\n    foreach(char c; num)\n    {\n        if(c == '2' ||\
    \ c == '3' || c == '5' || c == '7' || c == 'B' || c == 'D')\n            result++;\n\
    \    }\n    return result;\n}", "{\n    long count = 0;\n    foreach(i; num)\n\
    \    {\n        if(i == '2' || i == '3' || i == '5' || i == '7' || i == 'B' ||\
    \ i == 'D')\n        {\n            count++;\n        }\n    }\n    return count;\n\
    }", "{\n    long result = 0;\n    foreach(c; num)\n    {\n        if(c == '2'\
    \ || c == '3' || c == '5' || c == '7' || c == 'B' || c == 'D')\n        {\n  \
    \          result++;\n        }\n    }\n    return result;\n}", "{\n    long result\
    \ = 0;\n    foreach(immutable char c; num)\n    {\n        if(c == '2' || c ==\
    \ '3' || c == '5' || c == '7' || c == 'B' || c == 'D')\n        {\n          \
    \  result++;\n        }\n    }\n    return result;\n}", "{\n    long count = 0;\n\
    \    foreach(char c; num)\n    {\n        if(c == '2' || c == '3' || c == '5'\
    \ || c == '7' || c == 'B' || c == 'D')\n        {\n            count++;\n    \
    \    }\n    }\n    return count;\n}", "{\n    long count = 0;\n    foreach(char\
    \ c; num)\n    {\n        if(c == '2' || c == '3' || c == '5' || c == '7' || c\
    \ == 'B' || c == 'D')\n        {\n            count++;\n        }\n    }\n   \
    \ return count;\n}", "{\n    long count = 0;\n    foreach(c; num)\n    {\n   \
    \     if(c == '2' || c == '3' || c == '5' || c == '7' || c == 'B' || c == 'D')\n\
    \        {\n            count++;\n        }\n    }\n    return count;\n}", "{\n\
    \    long count = 0;\n    foreach(i; num)\n    {\n        if(i == '2' || i ==\
    \ '3' || i == '5' || i == '7' || i == 'B' || i == 'D')\n        {\n          \
    \  count++;\n        }\n    }\n    return count;\n}", "{\n    long count = 0;\n\
    \    foreach(char c; num)\n    {\n        if(c == '2' || c == '3' || c == '5'\
    \ || c == '7' || c == 'B' || c == 'D')\n        {\n            count++;\n    \
    \    }\n    }\n    return count;\n}", "{\n    long count = 0;\n    foreach(immutable\
    \ char c; num)\n    {\n        if(c == '2' || c == '3' || c == '5' || c == '7'\
    \ || c == 'B' || c == 'D')\n        {\n            count++;\n        }\n    }\n\
    \    return count;\n}", "{\n    long count = 0;\n    foreach(char c; num)\n  \
    \  {\n        if(c == '2' || c == '3' || c == '5' || c == '7' || c == 'B' || c\
    \ == 'D')\n        {\n            count++;\n        }\n    }\n    return count;\n\
    }", "{\n    long count = 0;\n    foreach(char c; num)\n    {\n        if(c ==\
    \ '2' || c == '3' || c == '5' || c == '7' || c == 'B' || c == 'D')\n        {\n\
    \            count++;\n        }\n    }\n    return count;\n}", "{\n    long count\
    \ = 0;\n    foreach(char c; num)\n    {\n        if(c == '2' || c == '3' || c\
    \ == '5' || c == '7' || c == 'B' || c == 'D')\n        {\n            count++;\n\
    \        }\n    }\n    return count;\n}\n/*\nYou have been tasked to write a function\
    \ that receives a string and \n    returns a string with the same characters but\
    \ in reversed order.\n    Examples:\n    >>> reverse_string(\"Hello, World!\"\
    )\n    \"!dlroW ,olleH\"\n    >>> reverse_string(\"\")\n    \"\"\n    >>> reverse_string(\"\
    a\")\n    \"a\"\n    >>> reverse_string(\"aa\")\n    \"aa\"\n    >>> reverse_string(\"\
    ab\")\n    \"ba\"\n    >>> reverse_string(\"abc\")\n    \"cba\"\n    >>> reverse_string(\"\
    abcd\")\n    \"dcba\"\n    >>> reverse_string(\"abcde\")\n    \"edcba\"\n    >>>\
    \ reverse_string(\"abcdef\")\n    \"fedcba\"\n    >>> reverse_string(\"abcdefg\"\
    )\n    \"gfedcba\"\n    >>> reverse_string(\"abcdefgh\")\n    \"hgfedcba\"\n \
    \   >>> reverse_string(\"abcdefghi\")\n    \"ihgfedcba\"\n    >>> reverse_string(\"\
    abcdefghij\")\n    \"jihgfedcba\"\n    >>> reverse_string(\"abcdefghijk\")\n \
    \   \"kjihgfedcba\"\n    >>> reverse_string(\"abcdefghijkl\")\n    \"lkjihgfedcba\"\
    \n    >>> reverse_string(\"abcdefghijklm\")\n    \"mlkjihgfedcba\"\n    >>> reverse_string(\"\
    abcdefghijklmn\")\n    \"nmlkjihgfedcba\"\n    >>> reverse_string(\"abcdefghijklmno\"\
    )\n    \"onmlkjihgfedcba\"\n    >>> reverse_string(\"abcdefghijklmnop\")\n   \
    \ \"ponmlkjihgfedcba\"\n    >>> reverse_string(\"abcdefghijklmnopq\")\n    \"q",
  "{\n    long count = 0;\n    foreach(char c; num)\n    {\n        if(c == '2' ||\
    \ c == '3' || c == '5' || c == '7' || c == 'B' || c == 'D')\n        {\n     \
    \       count++;\n        }\n    }\n    return count;\n}", "{\n    long count\
    \ = 0;\n    foreach(char c; num)\n    {\n        if(c == '2' || c == '3' || c\
    \ == '5' || c == '7' || c == 'B' || c == 'D')\n        {\n            count++;\n\
    \        }\n    }\n    return count;\n}", "{\n    long count = 0;\n    foreach(i;\
    \ num)\n    {\n        if(i == '2' || i == '3' || i == '5' || i == '7' || i ==\
    \ 'B' || i == 'D')\n        {\n            count++;\n        }\n    }\n    return\
    \ count;\n}", "{\n    long count = 0;\n    foreach(char c; num)\n    {\n     \
    \   if(c == '2' || c == '3' || c == '5' || c == '7' || c == 'B' || c == 'D')\n\
    \        {\n            count++;\n        }\n    }\n    return count;\n}", "{\n\
    \    long count = 0;\n    foreach(char c; num)\n    {\n        if(c == '2' ||\
    \ c == '3' || c == '5' || c == '7' || c == 'B' || c == 'D')\n        {\n     \
    \       count++;\n        }\n    }\n    return count;\n}", "{\n    long count\
    \ = 0;\n    foreach(c; num)\n    {\n        if(c == '2' || c == '3' || c == '5'\
    \ || c == '7' || c == 'B' || c == 'D')\n        {\n            count++;\n    \
    \    }\n    }\n    return count;\n}", "{\n    long count = 0;\n    foreach(i;\
    \ num)\n    {\n        if(i == '2' || i == '3' || i == '5' || i == '7' || i ==\
    \ 'B' || i == 'D')\n        {\n            count++;\n        }\n    }\n    return\
    \ count;\n}", "{\n    long count = 0;\n    foreach(char c; num)\n    {\n     \
    \   if(c == '2' || c == '3' || c == '5' || c == '7' || c == 'B' || c == 'D')\n\
    \        {\n            count++;\n        }\n    }\n    return count;\n}", "{\n\
    \    long count = 0;\n    foreach(i; num)\n    {\n        if(i == '2' || i ==\
    \ '3' || i == '5' || i == '7' || i == 'B' || i == 'D')\n        {\n          \
    \  count++;\n        }\n    }\n    return count;\n}", "{\n    long count = 0;\n\
    \    foreach(i; num)\n    {\n        if(i == '2' || i == '3' || i == '5' || i\
    \ == '7' || i == 'B' || i == 'D')\n        {\n            count++;\n        }\n\
    \    }\n    return count;\n}", "{\n    long count = 0;\n    foreach(char c; num)\n\
    \    {\n        if(c == '2' || c == '3' || c == '5' || c == '7' || c == 'B' ||\
    \ c == 'D')\n        {\n            count++;\n        }\n    }\n    return count;\n\
    }", "{\n    long count = 0;\n    foreach(i; num)\n    {\n        if(i == '2' ||\
    \ i == '3' || i == '5' || i == '7' || i == 'B' || i == 'D')\n        {\n     \
    \       count++;\n        }\n    }\n    return count;\n}", "{\n    long result\
    \ = 0;\n    foreach(c; num)\n    {\n        if(c == '2' || c == '3' || c == '5'\
    \ || c == '7' || c == 'B' || c == 'D')\n        {\n            result++;\n   \
    \     }\n    }\n    return result;\n}", "{\n    long count = 0;\n    foreach(char\
    \ c; num)\n    {\n        if(c == '2' || c == '3' || c == '5' || c == '7' || c\
    \ == 'B' || c == 'D')\n        {\n            count++;\n        }\n    }\n   \
    \ return count;\n}", "{\n    long count = 0;\n    foreach(c; num)\n    {\n   \
    \     if(c == '2' || c == '3' || c == '5' || c == '7' || c == 'B' || c == 'D')\n\
    \        {\n            count++;\n        }\n    }\n    return count;\n}"]
stop_tokens:
- "\n\n"
- "\nvoid"
- "\nbool"
- "\nint"

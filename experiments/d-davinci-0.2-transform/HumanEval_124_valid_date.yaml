name: HumanEval_124_valid_date
language: d
prompt: "import std.typecons;\nimport std.math;\n/*\nYou have to write a function\
  \ which validates a given date string and\n    returns True if the date is valid\
  \ otherwise False.\n    The date is valid if all of the following rules are satisfied:\n\
  \    1. The date string is not empty.\n    2. The number of days is not less than\
  \ 1 or higher than 31 days for months 1,3,5,7,8,10,12. And the number of days is\
  \ not less than 1 or higher than 30 days for months 4,6,9,11. And, the number of\
  \ days is not less than 1 or higher than 29 for the month 2.\n    3. The months\
  \ should not be less than 1 or higher than 12.\n    4. The date should be in the\
  \ format: mm-dd-yyyy\n\n    >>> valid_date(\"03-11-2000\")\n    true\n\n    >>>\
  \ valid_date(\"15-01-2012\")\n    false\n\n    >>> valid_date(\"04-0-2040\")\n \
  \   false\n\n    >>> valid_date(\"06-04-2020\")\n    true\n\n    >>> valid_date(\"\
  06/04/2020\")\n    false\n    \n*/\nbool valid_date(string date) \n"
tests: "unittest\n{\n    alias candidate = valid_date;\n\n    assert(candidate(\"\
  03-11-2000\") == true);\n    assert(candidate(\"15-01-2012\") == false);\n    assert(candidate(\"\
  04-0-2040\") == false);\n    assert(candidate(\"06-04-2020\") == true);\n    assert(candidate(\"\
  01-01-2007\") == true);\n    assert(candidate(\"03-32-2011\") == false);\n    assert(candidate(\"\
  \") == false);\n    assert(candidate(\"04-31-3000\") == false);\n    assert(candidate(\"\
  06-06-2005\") == true);\n    assert(candidate(\"21-31-2000\") == false);\n    assert(candidate(\"\
  04-12-2003\") == true);\n    assert(candidate(\"04122003\") == false);\n    assert(candidate(\"\
  20030412\") == false);\n    assert(candidate(\"2003-04\") == false);\n    assert(candidate(\"\
  2003-04-12\") == false);\n    assert(candidate(\"04-2003\") == false);\n}\nvoid\
  \ main(){}"
completions: ["{\n    import std.algorithm : map;\n    import std.array : array;\n\
    \    import std.conv : to;\n    import std.range : isInputRange;\n    import std.string\
    \ : split;\n    import std.typecons : tuple;\n    import std.math : isNaN;\n \
    \   import std.typecons : tuple;\n    import std.typecons : Tuple;\n    import\
    \ std.typecons : tuple;\n    import std.typecons : Tuple;\n    import std.typecons\
    \ : tuple;\n    import std.typecons : Tuple;\n    import std.typecons : tuple;\n\
    \    import std.typecons : Tuple;\n    import std.typecons : tuple;\n    import\
    \ std.typecons : Tuple;\n    import std.typecons : tuple;\n    import std.typecons\
    \ : Tuple;\n    import std.typecons : tuple;\n    import std.typecons : Tuple;\n\
    \    import std.typecons : tuple;\n    import std.typecons : Tuple;\n    import\
    \ std.typecons : tuple;\n    import std.typecons : Tuple;\n    import std.typecons\
    \ : tuple;\n    import std.typecons : Tuple;\n    import std.typecons : tuple;\n\
    \    import std.typecons : Tuple;\n    import std.typecons : tuple;\n    import\
    \ std.typecons : Tuple;\n    import std.typecons : tuple;\n    import std.typecons\
    \ : Tuple;\n    import std.typecons : tuple;\n    import std.typecons : Tuple;\n\
    \    import std.typecons : tuple;\n    import std.typecons : Tuple;\n    import\
    \ std.typecons : tuple;\n    import std.typecons : Tuple;\n    import std.typecons\
    \ : tuple;\n    import std.typecons : Tuple;\n    import std.typecons : tuple;\n\
    \    import std.typecons : Tuple;\n    import std.typecons : tuple;\n    import\
    \ std.typecons : Tuple;\n    import std.typecons : tuple;\n    import std.typecons\
    \ : Tuple;\n    import std.typecons : tuple;\n    import std.typecons : Tuple;",
  "{\n    string[] date_arr = date.split(\"-\");\n    if (date_arr.length != 3)\n\
    \        return false;\n    int month = to!int(date_arr[0]);\n    int day = to!int(date_arr[1]);\n\
    \    int year = to!int(date_arr[2]);\n    if (month < 1 || month > 12)\n     \
    \   return false;\n    if (day < 1 || day > 31)\n        return false;\n    if\
    \ (month == 2)\n    {\n        if (day > 29)\n            return false;\n    \
    \    if (day == 29)\n        {\n            if (year % 4 != 0)\n             \
    \   return false;\n            if (year % 100 == 0 && year % 400 != 0)\n     \
    \           return false;\n        }\n    }\n    else if (month == 4 || month\
    \ == 6 || month == 9 || month == 11)\n    {\n        if (day > 30)\n         \
    \   return false;\n    }\n    return true;\n}", "{\n    string[] parts = date.split(\"\
    -\");\n    if (parts.length != 3) return false;\n    int month = to!int(parts[0]);\n\
    \    int day = to!int(parts[1]);\n    int year = to!int(parts[2]);\n    if (month\
    \ < 1 || month > 12) return false;\n    if (day < 1 || day > 31) return false;\n\
    \    if (month == 2) {\n        if (year % 4 == 0) {\n            if (day > 29)\
    \ return false;\n        } else {\n            if (day > 28) return false;\n \
    \       }\n    } else if (month == 4 || month == 6 || month == 9 || month == 11)\
    \ {\n        if (day > 30) return false;\n    }\n    return true;\n}", "{\n  \
    \  import std.regex;\n    import std.conv;\n    import std.string;\n    import\
    \ std.array;\n    import std.algorithm;\n    import std.range;\n    import std.math;\n\
    \    import std.typecons;\n    import std.datetime;\n    import std.stdio;\n \
    \   import std.traits;\n    import std.meta;\n    import std.typecons;\n    import\
    \ std.math;\n    import std.range;\n    import std.algorithm;\n    import std.array;\n\
    \    import std.conv;\n    import std.regex;\n    import std.string;\n    import\
    \ std.stdio;\n    import std.traits;\n    import std.meta;\n    import std.typecons;\n\
    \    import std.math;\n    import std.range;\n    import std.algorithm;\n    import\
    \ std.array;\n    import std.conv;\n    import std.regex;\n    import std.string;\n\
    \    import std.stdio;\n    import std.traits;\n    import std.meta;\n    import\
    \ std.typecons;\n    import std.math;\n    import std.range;\n    import std.algorithm;\n\
    \    import std.array;\n    import std.conv;\n    import std.regex;\n    import\
    \ std.string;\n    import std.stdio;\n    import std.traits;\n    import std.meta;\n\
    \    import std.typecons;\n    import std.math;\n    import std.range;\n    import\
    \ std.algorithm;\n    import std.array;\n    import std.conv;\n    import std.regex;\n\
    \    import std.string;\n    import std.stdio;\n    import std.traits;\n    import\
    \ std.meta;\n    import std.typecons;\n    import std.math;\n    import std.range;\n\
    \    import std.algorithm;\n    import std.array;\n    import std.conv;\n    import\
    \ std.regex;\n    import std.string;\n    import std.stdio;\n    import std.traits;\n\
    \    import std.meta;\n    import std.typecons;\n   ", "{\n    auto date_split\
    \ = date.split(\"-\");\n    if (date_split.length != 3)\n        return false;\n\
    \    int month = to!int(date_split[0]);\n    int day = to!int(date_split[1]);\n\
    \    int year = to!int(date_split[2]);\n    if (month < 1 || month > 12)\n   \
    \     return false;\n    if (day < 1 || day > 31)\n        return false;\n   \
    \ if (month == 2)\n    {\n        if (day > 29)\n            return false;\n \
    \       if (day == 29)\n        {\n            if (year % 4 != 0)\n          \
    \      return false;\n            if (year % 100 == 0 && year % 400 != 0)\n  \
    \              return false;\n        }\n    }\n    else if (month == 4 || month\
    \ == 6 || month == 9 || month == 11)\n    {\n        if (day > 30)\n         \
    \   return false;\n    }\n    return true;\n}", "{\n    int[] months = [31, 28,\
    \ 31, 30, 31, 30, 31, 31, 30, 31, 30, 31];\n    int[] date_arr = date.split(\"\
    -\").map!(to!int);\n    if (date_arr.length != 3) return false;\n    if (date_arr[0]\
    \ < 1 || date_arr[0] > 12) return false;\n    if (date_arr[1] < 1 || date_arr[1]\
    \ > months[date_arr[0] - 1]) return false;\n    if (date_arr[0] == 2 && date_arr[1]\
    \ == 29) {\n        if (date_arr[2] % 4 != 0) return false;\n        if (date_arr[2]\
    \ % 100 == 0 && date_arr[2] % 400 != 0) return false;\n    }\n    return true;\n\
    }", "{\n    auto parts = date.split(\"-\");\n    if (parts.length != 3) return\
    \ false;\n    auto month = to!int(parts[0]);\n    auto day = to!int(parts[1]);\n\
    \    auto year = to!int(parts[2]);\n    if (month < 1 || month > 12) return false;\n\
    \    if (day < 1) return false;\n    if (month == 2) {\n        if (day > 29)\
    \ return false;\n        if (day == 29) {\n            if (year % 4 != 0) return\
    \ false;\n            if (year % 100 == 0 && year % 400 != 0) return false;\n\
    \        }\n    } else if (month == 4 || month == 6 || month == 9 || month ==\
    \ 11) {\n        if (day > 30) return false;\n    } else {\n        if (day >\
    \ 31) return false;\n    }\n    return true;\n}", "{\n    int[] months = [31,\
    \ 28, 31, 30, 31, 30, 31, 31, 30, 31, 30, 31];\n    string[] date_split = date.split(\"\
    -\");\n    if (date_split.length != 3)\n        return false;\n    int month =\
    \ date_split[0].to!int;\n    int day = date_split[1].to!int;\n    int year = date_split[2].to!int;\n\
    \    if (month < 1 || month > 12)\n        return false;\n    if (day < 1 || day\
    \ > months[month - 1])\n        return false;\n    if (month == 2 && day == 29\
    \ && !isLeapYear(year))\n        return false;\n    return true;\n}", "{\n   \
    \ int[] days_in_month = [31, 28, 31, 30, 31, 30, 31, 31, 30, 31, 30, 31];\n  \
    \  auto parts = date.split(\"-\");\n    if (parts.length != 3)\n        return\
    \ false;\n    int month = to!int(parts[0]);\n    int day = to!int(parts[1]);\n\
    \    int year = to!int(parts[2]);\n    if (month < 1 || month > 12)\n        return\
    \ false;\n    if (day < 1 || day > days_in_month[month - 1])\n        return false;\n\
    \    if (month == 2 && day == 29 && !isLeapYear(year))\n        return false;\n\
    \    return true;\n}", "{\n    import std.algorithm : map;\n    import std.array\
    \ : array;\n    import std.conv : to;\n    import std.range : take, drop;\n  \
    \  import std.string : split;\n    import std.typecons : tuple;\n    import std.math\
    \ : isNaN;\n    import std.stdio : writeln;\n    import std.traits : isIntegral;\n\
    \    import std.typecons : tuple;\n    import std.typecons : tuple;\n    import\
    \ std.typecons : tuple;\n    import std.typecons : tuple;\n    import std.typecons\
    \ : tuple;\n    import std.typecons : tuple;\n    import std.typecons : tuple;\n\
    \    import std.typecons : tuple;\n    import std.typecons : tuple;\n    import\
    \ std.typecons : tuple;\n    import std.typecons : tuple;\n    import std.typecons\
    \ : tuple;\n    import std.typecons : tuple;\n    import std.typecons : tuple;\n\
    \    import std.typecons : tuple;\n    import std.typecons : tuple;\n    import\
    \ std.typecons : tuple;\n    import std.typecons : tuple;\n    import std.typecons\
    \ : tuple;\n    import std.typecons : tuple;\n    import std.typecons : tuple;\n\
    \    import std.typecons : tuple;\n    import std.typecons : tuple;\n    import\
    \ std.typecons : tuple;\n    import std.typecons : tuple;\n    import std.typecons\
    \ : tuple;\n    import std.typecons : tuple;\n    import std.typecons : tuple;\n\
    \    import std.typecons : tuple;\n    import std.typecons : tuple;\n    import\
    \ std.typecons : tuple;\n    import std.typecons : tuple;\n    import std.typecons\
    \ : tuple;\n    import std.typecons : tuple;\n    import std.typecons : tuple;\n\
    \    import std.typecons : tuple;\n    import std.typecons : tuple;\n    import\
    \ std.typecons : tuple;\n    import std.typecons : tuple;\n    import std.typecons\
    \ : tuple;\n    import std.typecons : tuple;\n    import std.typecons :", "{\n\
    \    auto date_tuple = tuple(date.split(\"-\"));\n    if (date_tuple.length !=\
    \ 3)\n        return false;\n    int month = to!int(date_tuple[0]);\n    int day\
    \ = to!int(date_tuple[1]);\n    int year = to!int(date_tuple[2]);\n    if (year\
    \ < 0)\n        return false;\n    if (month < 1 || month > 12)\n        return\
    \ false;\n    if (day < 1)\n        return false;\n    if (month == 2)\n    {\n\
    \        if (year % 4 == 0)\n        {\n            if (day > 29)\n          \
    \      return false;\n        }\n        else\n        {\n            if (day\
    \ > 28)\n                return false;\n        }\n    }\n    else if (month ==\
    \ 1 || month == 3 || month == 5 || month == 7 || month == 8 || month == 10 ||\
    \ month == 12)\n    {\n        if (day > 31)\n            return false;\n    }\n\
    \    else\n    {\n        if (day > 30)\n            return false;\n    }\n  \
    \  return true;\n}", "{\n    int[] days = [31, 28, 31, 30, 31, 30, 31, 31, 30,\
    \ 31, 30, 31];\n    if (date.length == 0)\n        return false;\n    if (date.find(\"\
    -\") == -1)\n        return false;\n    auto date_arr = date.split(\"-\");\n \
    \   if (date_arr.length != 3)\n        return false;\n    int month = to!int(date_arr[0]);\n\
    \    int day = to!int(date_arr[1]);\n    int year = to!int(date_arr[2]);\n   \
    \ if (month < 1 || month > 12)\n        return false;\n    if (day < 1 || day\
    \ > days[month - 1])\n        return false;\n    if (month == 2 && day == 29)\n\
    \    {\n        if (year % 4 != 0)\n            return false;\n        if (year\
    \ % 100 == 0 && year % 400 != 0)\n            return false;\n    }\n    return\
    \ true;\n}", "{\n    if(date.length == 0)\n        return false;\n    int[] months\
    \ = [31, 29, 31, 30, 31, 30, 31, 31, 30, 31, 30, 31];\n    int[] date_arr = date.split(\"\
    -\").map!(a => to!int(a)).array;\n    if(date_arr.length != 3)\n        return\
    \ false;\n    if(date_arr[0] > 12 || date_arr[0] < 1)\n        return false;\n\
    \    if(date_arr[1] > months[date_arr[0]-1] || date_arr[1] < 1)\n        return\
    \ false;\n    if(date_arr[2] < 1)\n        return false;\n    return true;\n}",
  "{\n    auto date_parts = date.split(\"-\");\n    if (date_parts.length != 3) return\
    \ false;\n    auto day = to!int(date_parts[1]);\n    auto month = to!int(date_parts[0]);\n\
    \    auto year = to!int(date_parts[2]);\n    if (year < 0) return false;\n   \
    \ if (month < 1 || month > 12) return false;\n    if (day < 1) return false;\n\
    \    if (month == 2) {\n        if (isLeapYear(year)) {\n            if (day >\
    \ 29) return false;\n        } else {\n            if (day > 28) return false;\n\
    \        }\n    } else if (month == 4 || month == 6 || month == 9 || month ==\
    \ 11) {\n        if (day > 30) return false;\n    } else {\n        if (day >\
    \ 31) return false;\n    }\n    return true;\n}", "{\n    int[] months = [31,\
    \ 28, 31, 30, 31, 30, 31, 31, 30, 31, 30, 31];\n    int[] date_split = date.split(\"\
    -\").map!(a => to!int(a)).array;\n    if (date_split.length != 3)\n        return\
    \ false;\n    if (date_split[0] < 1 || date_split[0] > 12)\n        return false;\n\
    \    if (date_split[1] < 1 || date_split[1] > months[date_split[0] - 1])\n   \
    \     return false;\n    if (date_split[0] == 2 && date_split[1] == 29)\n    {\n\
    \        if (date_split[2] % 4 != 0)\n            return false;\n        if (date_split[2]\
    \ % 100 == 0 && date_split[2] % 400 != 0)\n            return false;\n    }\n\
    \    return true;\n}", "{\n    import std.algorithm;\n    import std.array;\n\
    \    import std.conv;\n    import std.range;\n    import std.stdio;\n    import\
    \ std.string;\n    import std.typecons;\n    import std.math;\n    auto date_arr\
    \ = date.split(\"-\");\n    if (date_arr.length != 3)\n        return false;\n\
    \    int month = to!int(date_arr[0]);\n    int day = to!int(date_arr[1]);\n  \
    \  int year = to!int(date_arr[2]);\n    if (month < 1 || month > 12)\n       \
    \ return false;\n    if (day < 1 || day > 31)\n        return false;\n    if (month\
    \ == 2)\n    {\n        if (day > 29)\n            return false;\n        if (day\
    \ == 29)\n        {\n            if (year % 4 != 0)\n                return false;\n\
    \            if (year % 100 == 0 && year % 400 != 0)\n                return false;\n\
    \        }\n    }\n    else if (month == 4 || month == 6 || month == 9 || month\
    \ == 11)\n    {\n        if (day > 30)\n            return false;\n    }\n   \
    \ return true;\n}", "{\n    int[] months = [1,3,5,7,8,10,12];\n    int[] months2\
    \ = [4,6,9,11];\n    int[] months3 = [2];\n    string[] date_split = date.split(\"\
    -\");\n    if(date_split.length != 3)\n        return false;\n    int day = to!int(date_split[1]);\n\
    \    int month = to!int(date_split[0]);\n    int year = to!int(date_split[2]);\n\
    \    if(day < 1 || day > 31)\n        return false;\n    if(month < 1 || month\
    \ > 12)\n        return false;\n    if(year < 1)\n        return false;\n    if(month.canFind(months))\n\
    \    {\n        if(day > 31)\n            return false;\n    }\n    else if(month.canFind(months2))\n\
    \    {\n        if(day > 30)\n            return false;\n    }\n    else if(month.canFind(months3))\n\
    \    {\n        if(day > 29)\n            return false;\n    }\n    return true;\n\
    }", "{\n    auto date_tuple = split(date, \"-\");\n    if (date_tuple.length !=\
    \ 3)\n        return false;\n    int month = to!int(date_tuple[0]);\n    int day\
    \ = to!int(date_tuple[1]);\n    int year = to!int(date_tuple[2]);\n    if (month\
    \ < 1 || month > 12)\n        return false;\n    if (day < 1 || day > 31)\n  \
    \      return false;\n    if (month == 2)\n    {\n        if (day > 29)\n    \
    \        return false;\n        if (day == 29)\n        {\n            if (year\
    \ % 4 != 0)\n                return false;\n            if (year % 100 == 0 &&\
    \ year % 400 != 0)\n                return false;\n        }\n    }\n    else\
    \ if (month == 4 || month == 6 || month == 9 || month == 11)\n    {\n        if\
    \ (day > 30)\n            return false;\n    }\n    return true;\n}", "{\n   \
    \ if (date.length == 0)\n        return false;\n    int month = to!int(date[0..1]);\n\
    \    int day = to!int(date[3..4]);\n    int year = to!int(date[6..9]);\n    if\
    \ (month < 1 || month > 12)\n        return false;\n    if (day < 1 || day > 31)\n\
    \        return false;\n    if (month == 2)\n    {\n        if (day > 29)\n  \
    \          return false;\n        if (day == 29)\n        {\n            if (year\
    \ % 4 != 0)\n                return false;\n            if (year % 100 == 0 &&\
    \ year % 400 != 0)\n                return false;\n        }\n    }\n    else\
    \ if (month == 4 || month == 6 || month == 9 || month == 11)\n    {\n        if\
    \ (day > 30)\n            return false;\n    }\n    return true;\n}", "{\n   \
    \ auto date_parts = date.split(\"-\");\n    if (date_parts.length != 3)\n    \
    \    return false;\n    int month = to!int(date_parts[0]);\n    int day = to!int(date_parts[1]);\n\
    \    int year = to!int(date_parts[2]);\n    if (day < 1 || day > 31)\n       \
    \ return false;\n    if (month < 1 || month > 12)\n        return false;\n   \
    \ if (year < 0)\n        return false;\n    if (day > 30 && (month == 4 || month\
    \ == 6 || month == 9 || month == 11))\n        return false;\n    if (day > 29\
    \ && month == 2)\n        return false;\n    if (day == 29 && month == 2 && !isLeapYear(year))\n\
    \        return false;\n    return true;\n}", "{\n    import std.algorithm : map;\n\
    \    import std.conv : to;\n    import std.range : take, drop;\n    import std.string\
    \ : split;\n    import std.array : array;\n    import std.typecons : tuple;\n\
    \    import std.math : isNaN;\n    import std.stdio : writeln;\n    import std.traits\
    \ : isIntegral;\n    import std.typecons : tuple;\n    import std.array : array;\n\
    \    import std.range : take, drop;\n    import std.conv : to;\n    import std.algorithm\
    \ : map;\n    import std.string : split;\n    import std.stdio : writeln;\n  \
    \  import std.traits : isIntegral;\n    import std.math : isNaN;\n    import std.typecons\
    \ : tuple;\n    import std.array : array;\n    import std.range : take, drop;\n\
    \    import std.conv : to;\n    import std.algorithm : map;\n    import std.string\
    \ : split;\n    import std.stdio : writeln;\n    import std.traits : isIntegral;\n\
    \    import std.math : isNaN;\n    import std.typecons : tuple;\n    import std.array\
    \ : array;\n    import std.range : take, drop;\n    import std.conv : to;\n  \
    \  import std.algorithm : map;\n    import std.string : split;\n    import std.stdio\
    \ : writeln;\n    import std.traits : isIntegral;\n    import std.math : isNaN;\n\
    \    import std.typecons : tuple;\n    import std.array : array;\n    import std.range\
    \ : take, drop;\n    import std.conv : to;\n    import std.algorithm : map;\n\
    \    import std.string : split;\n    import std.stdio : writeln;\n    import std.traits\
    \ : isIntegral;\n    import std.math : isNaN;\n    import std.typecons : tuple;\n\
    \    import std.array : array;\n    import std.range : take, drop;\n    import\
    \ std.conv : to;\n    import std.algorithm : map;\n", "{\n    int[] days = [31,\
    \ 28, 31, 30, 31, 30, 31, 31, 30, 31, 30, 31];\n    auto parts = date.split(\"\
    -\");\n    if (parts.length != 3)\n        return false;\n    int month = to!int(parts[0]);\n\
    \    int day = to!int(parts[1]);\n    int year = to!int(parts[2]);\n    if (month\
    \ < 1 || month > 12)\n        return false;\n    if (day < 1 || day > days[month\
    \ - 1])\n        return false;\n    if (month == 2 && day == 29 && !isLeapYear(year))\n\
    \        return false;\n    return true;\n}", "{\n    if (date.length == 0)\n\
    \        return false;\n    auto date_split = date.split(\"-\");\n    if (date_split.length\
    \ != 3)\n        return false;\n    auto month = to!int(date_split[0]);\n    auto\
    \ day = to!int(date_split[1]);\n    auto year = to!int(date_split[2]);\n    if\
    \ (month < 1 || month > 12)\n        return false;\n    if (day < 1 || day > 31)\n\
    \        return false;\n    if (month == 2)\n    {\n        if (day > 29)\n  \
    \          return false;\n        if (day == 29)\n        {\n            if (year\
    \ % 4 != 0)\n                return false;\n            if (year % 100 == 0 &&\
    \ year % 400 != 0)\n                return false;\n        }\n    }\n    else\
    \ if (month == 4 || month == 6 || month == 9 || month == 11)\n    {\n        if\
    \ (day > 30)\n            return false;\n    }\n    return true;\n}", "{\n   \
    \ if (date.length == 0)\n        return false;\n    auto date_parts = date.split(\"\
    -\");\n    if (date_parts.length != 3)\n        return false;\n    auto month\
    \ = to!int(date_parts[0]);\n    auto day = to!int(date_parts[1]);\n    auto year\
    \ = to!int(date_parts[2]);\n    if (month < 1 || month > 12)\n        return false;\n\
    \    if (month == 2)\n    {\n        if (day < 1 || day > 29)\n            return\
    \ false;\n    }\n    else if (month == 4 || month == 6 || month == 9 || month\
    \ == 11)\n    {\n        if (day < 1 || day > 30)\n            return false;\n\
    \    }\n    else\n    {\n        if (day < 1 || day > 31)\n            return\
    \ false;\n    }\n    return true;\n}", "{\n    import std.algorithm : map;\n \
    \   import std.conv : to;\n    import std.range : isInputRange;\n    import std.array\
    \ : array;\n    import std.typecons : tuple;\n    import std.math : isNaN;\n \
    \   import std.string : split;\n    import std.typecons : tuple;\n    import std.typecons\
    \ : Tuple;\n    import std.typecons : tuple;\n    import std.typecons : Tuple;\n\
    \    import std.typecons : tuple;\n    import std.typecons : Tuple;\n    import\
    \ std.typecons : tuple;\n    import std.typecons : Tuple;\n    import std.typecons\
    \ : tuple;\n    import std.typecons : Tuple;\n    import std.typecons : tuple;\n\
    \    import std.typecons : Tuple;\n    import std.typecons : tuple;\n    import\
    \ std.typecons : Tuple;\n    import std.typecons : tuple;\n    import std.typecons\
    \ : Tuple;\n    import std.typecons : tuple;\n    import std.typecons : Tuple;\n\
    \    import std.typecons : tuple;\n    import std.typecons : Tuple;\n    import\
    \ std.typecons : tuple;\n    import std.typecons : Tuple;\n    import std.typecons\
    \ : tuple;\n    import std.typecons : Tuple;\n    import std.typecons : tuple;\n\
    \    import std.typecons : Tuple;\n    import std.typecons : tuple;\n    import\
    \ std.typecons : Tuple;\n    import std.typecons : tuple;\n    import std.typecons\
    \ : Tuple;\n    import std.typecons : tuple;\n    import std.typecons : Tuple;\n\
    \    import std.typecons : tuple;\n    import std.typecons : Tuple;\n    import\
    \ std.typecons : tuple;\n    import std.typecons : Tuple;\n    import std.typecons\
    \ : tuple;\n    import std.typecons : Tuple;\n    import std.typecons : tuple;\n\
    \    import std.typecons : Tuple;\n    import std.typecons : tuple;\n    import\
    \ std.typecons : Tuple;", "{\n    if(date.length == 0) return false;\n    auto\
    \ d = split(date, \"-\");\n    if(d.length != 3) return false;\n    if(d[0].length\
    \ != 2 || d[1].length != 2 || d[2].length != 4) return false;\n    int month =\
    \ to!int(d[0]);\n    int day = to!int(d[1]);\n    int year = to!int(d[2]);\n \
    \   if(month < 1 || month > 12) return false;\n    if(day < 1 || day > 31) return\
    \ false;\n    if(month == 2)\n    {\n        if(day > 29) return false;\n    \
    \    if(day == 29)\n        {\n            if(year % 4 != 0) return false;\n \
    \           if(year % 100 == 0 && year % 400 != 0) return false;\n        }\n\
    \    }\n    else if(month == 4 || month == 6 || month == 9 || month == 11)\n \
    \   {\n        if(day > 30) return false;\n    }\n    return true;\n}", "{\n \
    \   import std.algorithm : map;\n    import std.conv : to;\n    import std.array\
    \ : array;\n    import std.range : iota;\n    import std.typecons : tuple;\n \
    \   import std.math : isNaN;\n    import std.string : split;\n    import std.typecons\
    \ : tuple;\n    import std.typecons : tuple;\n    import std.typecons : tuple;\n\
    \    import std.typecons : tuple;\n    import std.typecons : tuple;\n    import\
    \ std.typecons : tuple;\n    import std.typecons : tuple;\n    import std.typecons\
    \ : tuple;\n    import std.typecons : tuple;\n    import std.typecons : tuple;\n\
    \    import std.typecons : tuple;\n    import std.typecons : tuple;\n    import\
    \ std.typecons : tuple;\n    import std.typecons : tuple;\n    import std.typecons\
    \ : tuple;\n    import std.typecons : tuple;\n    import std.typecons : tuple;\n\
    \    import std.typecons : tuple;\n    import std.typecons : tuple;\n    import\
    \ std.typecons : tuple;\n    import std.typecons : tuple;\n    import std.typecons\
    \ : tuple;\n    import std.typecons : tuple;\n    import std.typecons : tuple;\n\
    \    import std.typecons : tuple;\n    import std.typecons : tuple;\n    import\
    \ std.typecons : tuple;\n    import std.typecons : tuple;\n    import std.typecons\
    \ : tuple;\n    import std.typecons : tuple;\n    import std.typecons : tuple;\n\
    \    import std.typecons : tuple;\n    import std.typecons : tuple;\n    import\
    \ std.typecons : tuple;\n    import std.typecons : tuple;\n    import std.typecons\
    \ : tuple;\n    import std.typecons : tuple;\n    import std.typecons : tuple;\n\
    \    import std.typecons : tuple;\n    import std.typecons : tuple;\n    import\
    \ std.typecons : tuple;\n    import std.typecons : tuple;\n    import std.typecons\
    \ : tuple;\n    import std.typecons : tuple;\n   ", "{\n    import std.array;\n\
    \    import std.conv;\n    import std.range;\n    import std.algorithm;\n    import\
    \ std.math;\n    import std.typecons;\n    import std.string;\n    import std.format;\n\
    \    import std.stdio;\n    import std.exception;\n    import std.traits;\n  \
    \  import std.typecons;\n    import std.math;\n    import std.algorithm;\n   \
    \ import std.array;\n    import std.conv;\n    import std.range;\n    import std.regex;\n\
    \    import std.string;\n    import std.typecons;\n    import std.math;\n    import\
    \ std.algorithm;\n    import std.array;\n    import std.conv;\n    import std.range;\n\
    \    import std.regex;\n    import std.string;\n    import std.typecons;\n   \
    \ import std.math;\n    import std.algorithm;\n    import std.array;\n    import\
    \ std.conv;\n    import std.range;\n    import std.regex;\n    import std.string;\n\
    \    import std.typecons;\n    import std.math;\n    import std.algorithm;\n \
    \   import std.array;\n    import std.conv;\n    import std.range;\n    import\
    \ std.regex;\n    import std.string;\n    import std.typecons;\n    import std.math;\n\
    \    import std.algorithm;\n    import std.array;\n    import std.conv;\n    import\
    \ std.range;\n    import std.regex;\n    import std.string;\n    import std.typecons;\n\
    \    import std.math;\n    import std.algorithm;\n    import std.array;\n    import\
    \ std.conv;\n    import std.range;\n    import std.regex;\n    import std.string;\n\
    \    import std.typecons;\n    import std.math;\n    import std.algorithm;\n \
    \   import std.array;\n    import std.conv;\n    import std.range;\n    import\
    \ std.regex;\n    import std.string;\n    import std.typecons;\n    import std.math;",
  "{\n    int[] months = [31, 28, 31, 30, 31, 30, 31, 31, 30, 31, 30, 31];\n    if\
    \ (date.length != 10) return false;\n    if (date[2] != '-' || date[5] != '-')\
    \ return false;\n    int month = to!int(date[0..1]);\n    int day = to!int(date[3..4]);\n\
    \    int year = to!int(date[6..9]);\n    if (month < 1 || month > 12) return false;\n\
    \    if (day < 1 || day > months[month - 1]) return false;\n    if (month == 2\
    \ && day == 29 && !isLeapYear(year)) return false;\n    return true;\n}", "{\n\
    \    int[] months = [1,3,5,7,8,10,12];\n    int[] months2 = [4,6,9,11];\n    int[]\
    \ months3 = [2];\n    int day = 0;\n    int month = 0;\n    int year = 0;\n  \
    \  if (date.length == 0)\n        return false;\n    if (date.length != 10)\n\
    \        return false;\n    if (date[2] != '-' || date[5] != '-')\n        return\
    \ false;\n    day = to!int(date[0..1]);\n    month = to!int(date[3..4]);\n   \
    \ year = to!int(date[6..9]);\n    if (day < 1 || day > 31)\n        return false;\n\
    \    if (month < 1 || month > 12)\n        return false;\n    if (year < 1)\n\
    \        return false;\n    if (months.find(month) != -1)\n    {\n        if (day\
    \ > 31)\n            return false;\n    }\n    if (months2.find(month) != -1)\n\
    \    {\n        if (day > 30)\n            return false;\n    }\n    if (months3.find(month)\
    \ != -1)\n    {\n        if (day > 29)\n            return false;\n    }\n   \
    \ return true;\n}", "{\n    if (date.length == 0) return false;\n    auto d =\
    \ split(date, '-');\n    if (d.length != 3) return false;\n    int month = to!int(d[0]);\n\
    \    int day = to!int(d[1]);\n    int year = to!int(d[2]);\n    if (month < 1\
    \ || month > 12) return false;\n    if (day < 1 || day > 31) return false;\n \
    \   if (month == 2) return day <= 29;\n    if (month == 4 || month == 6 || month\
    \ == 9 || month == 11) return day <= 30;\n    return true;\n}", "{\n    int[]\
    \ months = [31, 29, 31, 30, 31, 30, 31, 31, 30, 31, 30, 31];\n    string[] parts\
    \ = date.split(\"-\");\n    if (parts.length != 3) return false;\n    int month\
    \ = to!int(parts[0]);\n    int day = to!int(parts[1]);\n    int year = to!int(parts[2]);\n\
    \    if (month < 1 || month > 12) return false;\n    if (day < 1 || day > months[month\
    \ - 1]) return false;\n    if (month == 2 && day == 29 && !isLeapYear(year)) return\
    \ false;\n    return true;\n}", "{\n    auto d = date.split(\"-\");\n    if (d.length\
    \ != 3) return false;\n    int year = to!int(d[2]);\n    int month = to!int(d[0]);\n\
    \    int day = to!int(d[1]);\n    if (year < 0 || month < 1 || month > 12 || day\
    \ < 1) return false;\n    if (month == 2) {\n        if (year % 4 == 0 && (year\
    \ % 100 != 0 || year % 400 == 0)) {\n            return day <= 29;\n        }\
    \ else {\n            return day <= 28;\n        }\n    } else if (month == 4\
    \ || month == 6 || month == 9 || month == 11) {\n        return day <= 30;\n \
    \   } else {\n        return day <= 31;\n    }\n}", "{\n    string[] date_parts\
    \ = date.split(\"-\");\n    if (date_parts.length != 3) return false;\n    int\
    \ month = to!int(date_parts[0]);\n    int day = to!int(date_parts[1]);\n    int\
    \ year = to!int(date_parts[2]);\n    if (month < 1 || month > 12) return false;\n\
    \    if (day < 1 || day > 31) return false;\n    if (month == 2) {\n        if\
    \ (day > 29) return false;\n        if (day == 29) {\n            if (year % 4\
    \ != 0) return false;\n            if (year % 100 == 0 && year % 400 != 0) return\
    \ false;\n        }\n    }\n    if (month == 4 || month == 6 || month == 9 ||\
    \ month == 11) {\n        if (day > 30) return false;\n    }\n    return true;\n\
    }", "{\n    auto parts = split(date, '-');\n    if (parts.length != 3)\n     \
    \   return false;\n    auto day = to!int(parts[1]);\n    auto month = to!int(parts[0]);\n\
    \    auto year = to!int(parts[2]);\n    if (day < 1 || day > 31)\n        return\
    \ false;\n    if (month < 1 || month > 12)\n        return false;\n    if (month\
    \ == 2)\n    {\n        if (day > 29)\n            return false;\n        if (day\
    \ == 29)\n        {\n            if (year % 4 != 0)\n                return false;\n\
    \            if (year % 100 == 0 && year % 400 != 0)\n                return false;\n\
    \        }\n    }\n    else if (month == 4 || month == 6 || month == 9 || month\
    \ == 11)\n    {\n        if (day > 30)\n            return false;\n    }\n   \
    \ return true;\n}", "{\n    auto split = date.split(\"-\");\n    if (split.length\
    \ != 3) return false;\n    int month = to!int(split[0]);\n    int day = to!int(split[1]);\n\
    \    int year = to!int(split[2]);\n    if (month < 1 || month > 12) return false;\n\
    \    if (day < 1 || day > 31) return false;\n    if (month == 2) {\n        if\
    \ (year % 4 == 0) {\n            if (day > 29) return false;\n        } else {\n\
    \            if (day > 28) return false;\n        }\n    } else if (month == 4\
    \ || month == 6 || month == 9 || month == 11) {\n        if (day > 30) return\
    \ false;\n    }\n    return true;\n}", "{\n    int[] days = [31, 28, 31, 30, 31,\
    \ 30, 31, 31, 30, 31, 30, 31];\n    int[] date_arr = date.split(\"-\").map!int.array;\n\
    \    if(date_arr.length != 3)\n        return false;\n    if(date_arr[0] < 1 ||\
    \ date_arr[0] > 12)\n        return false;\n    if(date_arr[1] < 1 || date_arr[1]\
    \ > days[date_arr[0] - 1])\n        return false;\n    if(date_arr[0] == 2 &&\
    \ date_arr[1] == 29)\n    {\n        if(date_arr[2] % 4 != 0)\n            return\
    \ false;\n        if(date_arr[2] % 100 == 0 && date_arr[2] % 400 != 0)\n     \
    \       return false;\n    }\n    return true;\n}", "{\n    if (date.length ==\
    \ 0) return false;\n    int[] months = [31, 28, 31, 30, 31, 30, 31, 31, 30, 31,\
    \ 30, 31];\n    int[] date_arr = date.split(\"-\").map!(a => to!int(a)).array;\n\
    \    if (date_arr.length != 3) return false;\n    if (date_arr[0] < 1 || date_arr[0]\
    \ > 12) return false;\n    if (date_arr[1] < 1 || date_arr[1] > months[date_arr[0]\
    \ - 1]) return false;\n    if (date_arr[0] == 2 && date_arr[1] == 29) \n    {\n\
    \        if (date_arr[2] % 4 != 0) return false;\n        if (date_arr[2] % 100\
    \ == 0 && date_arr[2] % 400 != 0) return false;\n    }\n    return true;\n}",
  "{\n    auto date_parts = split(date, \"-\");\n    if (date_parts.length != 3) return\
    \ false;\n    int month = to!int(date_parts[0]);\n    int day = to!int(date_parts[1]);\n\
    \    int year = to!int(date_parts[2]);\n    if (month < 1 || month > 12) return\
    \ false;\n    if (day < 1 || day > 31) return false;\n    if (month == 2) {\n\
    \        if (day > 29) return false;\n        if (day == 29) {\n            if\
    \ (year % 4 != 0) return false;\n            if (year % 100 == 0 && year % 400\
    \ != 0) return false;\n        }\n    } else if (month == 4 || month == 6 || month\
    \ == 9 || month == 11) {\n        if (day > 30) return false;\n    }\n    return\
    \ true;\n}", "{\n    int[] months = [1,3,5,7,8,10,12];\n    int[] months2 = [4,6,9,11];\n\
    \    int[] months3 = [2];\n    int[] days = [1,2,3,4,5,6,7,8,9,10,11,12,13,14,15,16,17,18,19,20,21,22,23,24,25,26,27,28,29,30,31];\n\
    \    int[] days2 = [1,2,3,4,5,6,7,8,9,10,11,12,13,14,15,16,17,18,19,20,21,22,23,24,25,26,27,28,29,30];\n\
    \    int[] days3 = [1,2,3,4,5,6,7,8,9,10,11,12,13,14,15,16,17,18,19,20,21,22,23,24,25,26,27,28];\n\
    \    int[] years = [2000,2001,2002,2003,2004,2005,2006,2007,2008,2009,2010,2011,2012,2013,2014,2015,2016,2017,2018,2019,2020,2021,2022,2023,2024,2025,2026,2027,2028,2029,2030,2031,2032,2033,2034,2035,2036,2037,2038,2039,2040,2041,2042,2043,2044,2045,2046,2047,2048,2049,2050,2051,2052,2053,2054,2055,2056,2057,2058,2059,2060,2061,2062,2063,2064,2065,2066,2067,2068,2069,2070,2071,2072,2073,2074,2075,2076,2077,2078,2079,2080,2081,2082,2083,2084,2085,2086,2087,2088,2089,2090,2091,",
  "{\n    auto parts = split(date, '-');\n    if (parts.length != 3) return false;\n\
    \    int month = to!int(parts[0]);\n    int day = to!int(parts[1]);\n    int year\
    \ = to!int(parts[2]);\n    if (year < 0) return false;\n    if (month < 1 || month\
    \ > 12) return false;\n    if (day < 1) return false;\n    if (month == 2) {\n\
    \        if (day > 29) return false;\n        if (day == 29) {\n            if\
    \ (year % 4 != 0) return false;\n            if (year % 100 == 0 && year % 400\
    \ != 0) return false;\n        }\n    } else if (month == 4 || month == 6 || month\
    \ == 9 || month == 11) {\n        if (day > 30) return false;\n    } else {\n\
    \        if (day > 31) return false;\n    }\n    return true;\n}", "{\n    auto\
    \ date_tuple = tuple(date.split(\"-\"));\n    if (date_tuple.length != 3) return\
    \ false;\n    int month = to!int(date_tuple[0]);\n    int day = to!int(date_tuple[1]);\n\
    \    int year = to!int(date_tuple[2]);\n    if (year < 0) return false;\n    if\
    \ (month < 1 || month > 12) return false;\n    if (day < 1) return false;\n  \
    \  if (month == 2) {\n        if (year % 4 == 0) {\n            if (day > 29)\
    \ return false;\n        } else {\n            if (day > 28) return false;\n \
    \       }\n    } else if (month == 4 || month == 6 || month == 9 || month == 11)\
    \ {\n        if (day > 30) return false;\n    } else {\n        if (day > 31)\
    \ return false;\n    }\n    return true;\n}", "{\n    auto parts = date.split(\"\
    -\");\n    if (parts.length != 3)\n        return false;\n    int month = to!int(parts[0]);\n\
    \    int day = to!int(parts[1]);\n    int year = to!int(parts[2]);\n    if (month\
    \ < 1 || month > 12)\n        return false;\n    if (day < 1 || day > 31)\n  \
    \      return false;\n    if (month == 2)\n    {\n        if (day > 29)\n    \
    \        return false;\n        if (day == 29)\n        {\n            if (year\
    \ % 4 != 0)\n                return false;\n            if (year % 100 == 0 &&\
    \ year % 400 != 0)\n                return false;\n        }\n    }\n    else\
    \ if (month == 4 || month == 6 || month == 9 || month == 11)\n    {\n        if\
    \ (day > 30)\n            return false;\n    }\n    return true;\n}", "{\n   \
    \ import std.algorithm : map;\n    import std.array : array;\n    import std.conv\
    \ : to;\n    import std.range : isInputRange;\n    import std.string : split;\n\
    \    import std.typecons : tuple;\n    import std.typecons : Tuple;\n    import\
    \ std.typecons : Tuple;\n    import std.typecons : Tuple;\n    import std.typecons\
    \ : Tuple;\n    import std.typecons : Tuple;\n    import std.typecons : Tuple;\n\
    \    import std.typecons : Tuple;\n    import std.typecons : Tuple;\n    import\
    \ std.typecons : Tuple;\n    import std.typecons : Tuple;\n    import std.typecons\
    \ : Tuple;\n    import std.typecons : Tuple;\n    import std.typecons : Tuple;\n\
    \    import std.typecons : Tuple;\n    import std.typecons : Tuple;\n    import\
    \ std.typecons : Tuple;\n    import std.typecons : Tuple;\n    import std.typecons\
    \ : Tuple;\n    import std.typecons : Tuple;\n    import std.typecons : Tuple;\n\
    \    import std.typecons : Tuple;\n    import std.typecons : Tuple;\n    import\
    \ std.typecons : Tuple;\n    import std.typecons : Tuple;\n    import std.typecons\
    \ : Tuple;\n    import std.typecons : Tuple;\n    import std.typecons : Tuple;\n\
    \    import std.typecons : Tuple;\n    import std.typecons : Tuple;\n    import\
    \ std.typecons : Tuple;\n    import std.typecons : Tuple;\n    import std.typecons\
    \ : Tuple;\n    import std.typecons : Tuple;\n    import std.typecons : Tuple;\n\
    \    import std.typecons : Tuple;\n    import std.typecons : Tuple;\n    import\
    \ std.typecons : Tuple;\n    import std.typecons : Tuple;\n    import std.typecons\
    \ : Tuple;\n    import std.typecons : Tuple;\n    import std.typecons : Tuple;\n",
  "{\n    if(date.length == 0)\n        return false;\n    auto date_split = date.split(\"\
    -\");\n    if(date_split.length != 3)\n        return false;\n    int month =\
    \ to!int(date_split[0]);\n    int day = to!int(date_split[1]);\n    int year =\
    \ to!int(date_split[2]);\n    if(month < 1 || month > 12)\n        return false;\n\
    \    if(day < 1 || day > 31)\n        return false;\n    if(month == 2)\n    {\n\
    \        if(isLeapYear(year))\n        {\n            if(day > 29)\n         \
    \       return false;\n        }\n        else\n        {\n            if(day\
    \ > 28)\n                return false;\n        }\n    }\n    else if(month ==\
    \ 4 || month == 6 || month == 9 || month == 11)\n    {\n        if(day > 30)\n\
    \            return false;\n    }\n    return true;\n}", "{\n    auto date_tuple\
    \ = tuple(date.split(\"-\"));\n    auto month = to!int(date_tuple[0]);\n    auto\
    \ day = to!int(date_tuple[1]);\n    auto year = to!int(date_tuple[2]);\n    if\
    \ (month < 1 || month > 12) return false;\n    if (day < 1 || day > 31) return\
    \ false;\n    if (month == 2) {\n        if (year % 4 == 0) {\n            if\
    \ (day > 29) return false;\n        } else {\n            if (day > 28) return\
    \ false;\n        }\n    } else if (month == 4 || month == 6 || month == 9 ||\
    \ month == 11) {\n        if (day > 30) return false;\n    }\n    return true;\n\
    }", "{\n    // your code here\n    int[] months = [31, 28, 31, 30, 31, 30, 31,\
    \ 31, 30, 31, 30, 31];\n    if (date.length == 0)\n        return false;\n   \
    \ if (date.find(\"/\") != -1)\n        return false;\n    auto parts = date.split(\"\
    -\");\n    if (parts.length != 3)\n        return false;\n    int month = to!int(parts[0]);\n\
    \    int day = to!int(parts[1]);\n    int year = to!int(parts[2]);\n    if (month\
    \ < 1 || month > 12)\n        return false;\n    if (day < 1 || day > months[month\
    \ - 1])\n        return false;\n    if (month == 2 && day == 29)\n    {\n    \
    \    if (year % 4 != 0)\n            return false;\n        if (year % 100 ==\
    \ 0 && year % 400 != 0)\n            return false;\n    }\n    return true;\n}",
  "{\n    if (date.length != 10)\n        return false;\n    if (date[2] != '-' ||\
    \ date[5] != '-')\n        return false;\n    int month = to!int(date[0..1]);\n\
    \    int day = to!int(date[3..4]);\n    int year = to!int(date[6..9]);\n    if\
    \ (month < 1 || month > 12)\n        return false;\n    if (day < 1 || day > 31)\n\
    \        return false;\n    if (month == 2)\n    {\n        if (day > 29)\n  \
    \          return false;\n        if (day == 29)\n        {\n            if (year\
    \ % 4 != 0)\n                return false;\n            if (year % 100 == 0 &&\
    \ year % 400 != 0)\n                return false;\n        }\n    }\n    else\
    \ if (month == 4 || month == 6 || month == 9 || month == 11)\n    {\n        if\
    \ (day > 30)\n            return false;\n    }\n    return true;\n}", "{\n   \
    \ if(date.length == 0) return false;\n    auto date_arr = date.split(\"-\");\n\
    \    if(date_arr.length != 3) return false;\n    int month = date_arr[0].to!int;\n\
    \    int day = date_arr[1].to!int;\n    int year = date_arr[2].to!int;\n    if(month\
    \ < 1 || month > 12) return false;\n    if(day < 1 || day > 31) return false;\n\
    \    if(month == 2)\n    {\n        if(year % 4 == 0)\n        {\n           \
    \ if(day > 29) return false;\n        }\n        else\n        {\n           \
    \ if(day > 28) return false;\n        }\n    }\n    else if(month == 4 || month\
    \ == 6 || month == 9 || month == 11)\n    {\n        if(day > 30) return false;\n\
    \    }\n    return true;\n}", "{\n    import std.string;\n    import std.algorithm;\n\
    \    import std.conv;\n    import std.array;\n    import std.typecons;\n    import\
    \ std.math;\n    if(date.length == 0)\n        return false;\n    auto date_arr\
    \ = date.split(\"-\");\n    if(date_arr.length != 3)\n        return false;\n\
    \    if(date_arr[0].length != 2 || date_arr[1].length != 2 || date_arr[2].length\
    \ != 4)\n        return false;\n    int month = to!int(date_arr[0]);\n    int\
    \ day = to!int(date_arr[1]);\n    int year = to!int(date_arr[2]);\n    if(month\
    \ < 1 || month > 12)\n        return false;\n    if(day < 1 || day > 31)\n   \
    \     return false;\n    if(month == 2)\n    {\n        if(year % 4 == 0)\n  \
    \      {\n            if(day > 29)\n                return false;\n        }\n\
    \        else\n        {\n            if(day > 28)\n                return false;\n\
    \        }\n    }\n    if(month == 4 || month == 6 || month == 9 || month == 11)\n\
    \    {\n        if(day > 30)\n            return false;\n    }\n    return true;\n\
    }", "{\n    int[] months = [31, 29, 31, 30, 31, 30, 31, 31, 30, 31, 30, 31];\n\
    \    int[] days = [0, 0, 0];\n    int i = 0;\n    foreach(c; date)\n    {\n  \
    \      if(c == '-')\n        {\n            i++;\n            continue;\n    \
    \    }\n        if(!isdigit(c))\n            return false;\n        days[i] =\
    \ days[i] * 10 + c - '0';\n    }\n    if(days[0] == 0 || days[1] == 0 || days[2]\
    \ == 0)\n        return false;\n    if(days[0] > 12 || days[0] < 1)\n        return\
    \ false;\n    if(days[1] > months[days[0] - 1] || days[1] < 1)\n        return\
    \ false;\n    return true;\n}", "{\n    // Your code here\n    if(date.length\
    \ < 10)\n        return false;\n    if(date[2] != '-' || date[5] != '-')\n   \
    \     return false;\n    int month = to!int(date[0..1]);\n    int day = to!int(date[3..4]);\n\
    \    int year = to!int(date[6..9]);\n    if(month < 1 || month > 12)\n       \
    \ return false;\n    if(month == 2)\n    {\n        if(day < 1 || day > 29)\n\
    \            return false;\n        if(day == 29)\n        {\n            if(year\
    \ % 4 != 0)\n                return false;\n            if(year % 100 == 0 &&\
    \ year % 400 != 0)\n                return false;\n        }\n    }\n    else\
    \ if(month == 4 || month == 6 || month == 9 || month == 11)\n    {\n        if(day\
    \ < 1 || day > 30)\n            return false;\n    }\n    else\n    {\n      \
    \  if(day < 1 || day > 31)\n            return false;\n    }\n    return true;\n\
    }", "{\n    import std.conv;\n    import std.algorithm;\n    import std.array;\n\
    \    import std.range;\n    import std.typecons;\n    import std.math;\n    if\
    \ (date.length == 0) return false;\n    auto date_arr = date.split(\"-\");\n \
    \   if (date_arr.length != 3) return false;\n    auto day = to!int(date_arr[0]);\n\
    \    auto month = to!int(date_arr[1]);\n    auto year = to!int(date_arr[2]);\n\
    \    if (day < 1 || day > 31) return false;\n    if (month < 1 || month > 12)\
    \ return false;\n    if (year < 1) return false;\n    if (month == 2) {\n    \
    \    if (day > 29) return false;\n        if (day == 29) {\n            if (year\
    \ % 4 != 0) return false;\n            if (year % 100 == 0 && year % 400 != 0)\
    \ return false;\n        }\n    }\n    else if (month == 4 || month == 6 || month\
    \ == 9 || month == 11) {\n        if (day > 30) return false;\n    }\n    return\
    \ true;\n}", "{\n    if (date.length == 0) return false;\n    int[] days = [31,\
    \ 28, 31, 30, 31, 30, 31, 31, 30, 31, 30, 31];\n    int[] date_arr = date.split(\"\
    -\").map!(to!int).array;\n    if (date_arr.length != 3) return false;\n    if\
    \ (date_arr[0] < 1 || date_arr[0] > 12) return false;\n    if (date_arr[1] < 1\
    \ || date_arr[1] > days[date_arr[0] - 1]) return false;\n    if (date_arr[0] ==\
    \ 2 && date_arr[1] == 29) {\n        if (date_arr[2] % 4 != 0) return false;\n\
    \        if (date_arr[2] % 100 == 0 && date_arr[2] % 400 != 0) return false;\n\
    \    }\n    return true;\n}", "{\n    if (date.length == 0) return false;\n  \
    \  auto parts = date.split(\"-\");\n    if (parts.length != 3) return false;\n\
    \    int month = to!int(parts[0]);\n    int day = to!int(parts[1]);\n    int year\
    \ = to!int(parts[2]);\n    if (month < 1 || month > 12) return false;\n    if\
    \ (day < 1 || day > 31) return false;\n    if (month == 2) {\n        if (day\
    \ > 29) return false;\n        if (day == 29) {\n            if (year % 4 != 0)\
    \ return false;\n            if (year % 100 == 0 && year % 400 != 0) return false;\n\
    \        }\n    } else if (month == 4 || month == 6 || month == 9 || month ==\
    \ 11) {\n        if (day > 30) return false;\n    }\n    return true;\n}", "{\n\
    \    int[] months = [31, 28, 31, 30, 31, 30, 31, 31, 30, 31, 30, 31];\n    if\
    \ (date.length < 10)\n        return false;\n    int month = to!int(date[0..1]);\n\
    \    int day = to!int(date[3..4]);\n    int year = to!int(date[6..9]);\n    if\
    \ (date[2] != '-' || date[5] != '-')\n        return false;\n    if (month < 1\
    \ || month > 12)\n        return false;\n    if (day < 1 || day > months[month\
    \ - 1])\n        return false;\n    if (month == 2 && day == 29 && !isLeapYear(year))\n\
    \        return false;\n    return true;\n}", "{\n    auto date_parts = date.split(\"\
    -\");\n    if (date_parts.length != 3)\n        return false;\n    int month =\
    \ to!int(date_parts[0]);\n    int day = to!int(date_parts[1]);\n    int year =\
    \ to!int(date_parts[2]);\n    if (month < 1 || month > 12)\n        return false;\n\
    \    if (day < 1 || day > 31)\n        return false;\n    if (month == 2)\n  \
    \  {\n        if (day > 29)\n            return false;\n        if (day == 29)\n\
    \        {\n            if (year % 4 != 0)\n                return false;\n  \
    \          if (year % 100 == 0 && year % 400 != 0)\n                return false;\n\
    \        }\n    }\n    else if (month == 4 || month == 6 || month == 9 || month\
    \ == 11)\n    {\n        if (day > 30)\n            return false;\n    }\n   \
    \ return true;\n}", "{\n    if(date.length == 0)\n        return false;\n    auto\
    \ date_arr = date.split(\"-\");\n    if(date_arr.length != 3)\n        return\
    \ false;\n    int month = to!int(date_arr[0]);\n    int day = to!int(date_arr[1]);\n\
    \    int year = to!int(date_arr[2]);\n    if(month < 1 || month > 12)\n      \
    \  return false;\n    if(day < 1 || day > 31)\n        return false;\n    if(month\
    \ == 2)\n    {\n        if(day > 29)\n            return false;\n        if(day\
    \ == 29)\n        {\n            if(year % 4 != 0)\n                return false;\n\
    \            if(year % 100 == 0 && year % 400 != 0)\n                return false;\n\
    \        }\n    }\n    else if(month == 4 || month == 6 || month == 9 || month\
    \ == 11)\n    {\n        if(day > 30)\n            return false;\n    }\n    return\
    \ true;\n}", "{\n    if(date.length == 0)\n        return false;\n    auto d =\
    \ split(date, \"-\");\n    if(d.length != 3)\n        return false;\n    int month\
    \ = to!int(d[0]);\n    int day = to!int(d[1]);\n    int year = to!int(d[2]);\n\
    \    if(month < 1 || month > 12)\n        return false;\n    if(day < 1 || day\
    \ > 31)\n        return false;\n    if(month == 2)\n    {\n        if(day > 29)\n\
    \            return false;\n        if(day == 29)\n        {\n            if(year\
    \ % 4 != 0)\n                return false;\n            if(year % 100 == 0 &&\
    \ year % 400 != 0)\n                return false;\n        }\n    }\n    else\
    \ if(month == 4 || month == 6 || month == 9 || month == 11)\n    {\n        if(day\
    \ > 30)\n            return false;\n    }\n    return true;\n}", "{\n    if (date.length\
    \ == 0) return false;\n    auto date_split = date.split(\"-\");\n    if (date_split.length\
    \ != 3) return false;\n    auto month = to!int(date_split[0]);\n    auto day =\
    \ to!int(date_split[1]);\n    auto year = to!int(date_split[2]);\n    if (month\
    \ < 1 || month > 12) return false;\n    if (day < 1 || day > 31) return false;\n\
    \    if (month == 2) {\n        if (day > 29) return false;\n        if (day ==\
    \ 29) {\n            if (year % 4 != 0) return false;\n            if (year %\
    \ 100 == 0 && year % 400 != 0) return false;\n        }\n    }\n    if (month\
    \ == 4 || month == 6 || month == 9 || month == 11) {\n        if (day > 30) return\
    \ false;\n    }\n    return true;\n}", "{\n    if (date.length == 0)\n       \
    \ return false;\n    auto date_split = date.split(\"-\");\n    if (date_split.length\
    \ != 3)\n        return false;\n    int month = to!int(date_split[0]);\n    int\
    \ day = to!int(date_split[1]);\n    int year = to!int(date_split[2]);\n    if\
    \ (month < 1 || month > 12)\n        return false;\n    if (day < 1 || day > 31)\n\
    \        return false;\n    if (month == 2)\n    {\n        if (day > 29)\n  \
    \          return false;\n        if (day == 29)\n        {\n            if (year\
    \ % 4 != 0)\n                return false;\n            if (year % 100 == 0 &&\
    \ year % 400 != 0)\n                return false;\n        }\n    }\n    else\
    \ if (month == 4 || month == 6 || month == 9 || month == 11)\n    {\n        if\
    \ (day > 30)\n            return false;\n    }\n    return true;\n}", "{\n   \
    \ import std.conv;\n    import std.algorithm;\n    import std.array;\n    import\
    \ std.range;\n    import std.string;\n    import std.typecons;\n    import std.math;\n\
    \    auto date_arr = date.split(\"-\");\n    if(date_arr.length != 3) return false;\n\
    \    if(date_arr[0].length != 2 || date_arr[1].length != 2 || date_arr[2].length\
    \ != 4) return false;\n    int month = to!int(date_arr[0]);\n    int day = to!int(date_arr[1]);\n\
    \    int year = to!int(date_arr[2]);\n    if(month < 1 || month > 12) return false;\n\
    \    if(day < 1 || day > 31) return false;\n    if(month == 2 && day > 29) return\
    \ false;\n    if(month == 2 && day == 29 && !isLeapYear(year)) return false;\n\
    \    if(month == 4 || month == 6 || month == 9 || month == 11)\n    {\n      \
    \  if(day > 30) return false;\n    }\n    return true;\n}", "{\n    string[] parts\
    \ = date.split(\"-\");\n    if (parts.length != 3) return false;\n    int month\
    \ = to!int(parts[0]);\n    int day = to!int(parts[1]);\n    int year = to!int(parts[2]);\n\
    \    if (year < 0) return false;\n    if (month < 1 || month > 12) return false;\n\
    \    if (day < 1) return false;\n    if (month == 2)\n    {\n        if (isLeapYear(year))\n\
    \        {\n            if (day > 29) return false;\n        }\n        else\n\
    \        {\n            if (day > 28) return false;\n        }\n    }\n    else\
    \ if (month == 4 || month == 6 || month == 9 || month == 11)\n    {\n        if\
    \ (day > 30) return false;\n    }\n    else\n    {\n        if (day > 31) return\
    \ false;\n    }\n    return true;\n}", "{\n    auto date_arr = date.split(\"-\"\
    );\n    if (date_arr.length != 3)\n        return false;\n    int month = to!int(date_arr[0]);\n\
    \    int day = to!int(date_arr[1]);\n    int year = to!int(date_arr[2]);\n   \
    \ if (month < 1 || month > 12)\n        return false;\n    if (day < 1 || day\
    \ > 31)\n        return false;\n    if (month == 2)\n    {\n        if (day >\
    \ 29)\n            return false;\n        if (day == 29)\n        {\n        \
    \    if (year % 4 != 0)\n                return false;\n            if (year %\
    \ 100 == 0 && year % 400 != 0)\n                return false;\n        }\n   \
    \ }\n    else if (month == 4 || month == 6 || month == 9 || month == 11)\n   \
    \ {\n        if (day > 30)\n            return false;\n    }\n    return true;\n\
    }", "{\n    if(date.length == 0)\n        return false;\n    if(date.length !=\
    \ 10)\n        return false;\n    if(date[2] != '-' || date[5] != '-')\n     \
    \   return false;\n    int month = to!int(date[0..1]);\n    int day = to!int(date[3..4]);\n\
    \    int year = to!int(date[6..9]);\n    if(month < 1 || month > 12)\n       \
    \ return false;\n    if(day < 1 || day > 31)\n        return false;\n    if(month\
    \ == 2 && day > 29)\n        return false;\n    if(month == 4 || month == 6 ||\
    \ month == 9 || month == 11)\n    {\n        if(day > 30)\n            return\
    \ false;\n    }\n    return true;\n}", "{\n    int[] months = [31, 28, 31, 30,\
    \ 31, 30, 31, 31, 30, 31, 30, 31];\n    auto date_split = date.split(\"-\");\n\
    \    if (date_split.length != 3) return false;\n    int month = to!int(date_split[0]);\n\
    \    int day = to!int(date_split[1]);\n    int year = to!int(date_split[2]);\n\
    \    if (month < 1 || month > 12) return false;\n    if (day < 1 || day > months[month\
    \ - 1]) return false;\n    if (month == 2 && day == 29 && !isLeapYear(year)) return\
    \ false;\n    return true;\n}", "{\n    auto parts = split(date, \"-\");\n   \
    \ if (parts.length != 3)\n        return false;\n    auto month = to!int(parts[0]);\n\
    \    auto day = to!int(parts[1]);\n    auto year = to!int(parts[2]);\n    if (month\
    \ < 1 || month > 12)\n        return false;\n    if (day < 1)\n        return\
    \ false;\n    if (month == 2)\n    {\n        if (day > 29)\n            return\
    \ false;\n        if (day == 29)\n        {\n            if (year % 4 != 0)\n\
    \                return false;\n            if (year % 100 == 0 && year % 400\
    \ != 0)\n                return false;\n        }\n    }\n    else if (month ==\
    \ 4 || month == 6 || month == 9 || month == 11)\n    {\n        if (day > 30)\n\
    \            return false;\n    }\n    else\n    {\n        if (day > 31)\n  \
    \          return false;\n    }\n    return true;\n}", "{\n    import std.algorithm\
    \ : map;\n    import std.conv : to;\n    import std.range : isInputRange;\n  \
    \  import std.string : split;\n    import std.typecons : tuple;\n    import std.typecons\
    \ : Tuple;\n    import std.typecons : Tuple;\n    import std.typecons : tuple;\n\
    \    import std.typecons : Tuple;\n    import std.typecons : Tuple;\n    import\
    \ std.typecons : tuple;\n    import std.typecons : Tuple;\n    import std.typecons\
    \ : Tuple;\n    import std.typecons : tuple;\n    import std.typecons : Tuple;\n\
    \    import std.typecons : Tuple;\n    import std.typecons : tuple;\n    import\
    \ std.typecons : Tuple;\n    import std.typecons : Tuple;\n    import std.typecons\
    \ : tuple;\n    import std.typecons : Tuple;\n    import std.typecons : Tuple;\n\
    \    import std.typecons : tuple;\n    import std.typecons : Tuple;\n    import\
    \ std.typecons : Tuple;\n    import std.typecons : tuple;\n    import std.typecons\
    \ : Tuple;\n    import std.typecons : Tuple;\n    import std.typecons : tuple;\n\
    \    import std.typecons : Tuple;\n    import std.typecons : Tuple;\n    import\
    \ std.typecons : tuple;\n    import std.typecons : Tuple;\n    import std.typecons\
    \ : Tuple;\n    import std.typecons : tuple;\n    import std.typecons : Tuple;\n\
    \    import std.typecons : Tuple;\n    import std.typecons : tuple;\n    import\
    \ std.typecons : Tuple;\n    import std.typecons : Tuple;\n    import std.typecons\
    \ : tuple;\n    import std.typecons : Tuple;\n    import std.typecons : Tuple;\n\
    \    import std.typecons : tuple;\n    import std.typecons : Tuple;\n    import\
    \ std.typecons : Tuple;\n    import std.typecons : tuple;\n    import std.typecons\
    \ : Tuple;\n   ", "{\n    auto date_parts = date.split(\"-\");\n    if (date_parts.length\
    \ != 3)\n        return false;\n    int month = to!int(date_parts[0]);\n    int\
    \ day = to!int(date_parts[1]);\n    int year = to!int(date_parts[2]);\n    if\
    \ (month < 1 || month > 12)\n        return false;\n    if (day < 1 || day > 31)\n\
    \        return false;\n    if (month == 2)\n    {\n        if (day > 29)\n  \
    \          return false;\n        if (day == 29)\n        {\n            if (year\
    \ % 4 != 0)\n                return false;\n            if (year % 100 == 0 &&\
    \ year % 400 != 0)\n                return false;\n        }\n    }\n    else\
    \ if (month == 4 || month == 6 || month == 9 || month == 11)\n    {\n        if\
    \ (day > 30)\n            return false;\n    }\n    return true;\n}", "{\n   \
    \ if(date.length == 0)\n        return false;\n    string[] date_arr = date.split(\"\
    -\");\n    if(date_arr.length != 3)\n        return false;\n    int month = to!int(date_arr[0]);\n\
    \    int day = to!int(date_arr[1]);\n    int year = to!int(date_arr[2]);\n   \
    \ if(month < 1 || month > 12)\n        return false;\n    if(day < 1 || day >\
    \ 31)\n        return false;\n    if(month == 2 && day > 29)\n        return false;\n\
    \    if(month == 2 && day == 29 && !isLeapYear(year))\n        return false;\n\
    \    if(month == 4 || month == 6 || month == 9 || month == 11)\n    {\n      \
    \  if(day > 30)\n            return false;\n    }\n    return true;\n}", "{\n\
    \    import std.algorithm : map;\n    import std.array : array;\n    import std.conv\
    \ : to;\n    import std.range : isInputRange;\n    import std.string : split;\n\
    \    import std.typecons : tuple;\n    import std.typecons : Tuple;\n    import\
    \ std.typecons : Tuple;\n    import std.typecons : Tuple;\n    import std.typecons\
    \ : Tuple;\n    import std.typecons : Tuple;\n    import std.typecons : Tuple;\n\
    \    import std.typecons : Tuple;\n    import std.typecons : Tuple;\n    import\
    \ std.typecons : Tuple;\n    import std.typecons : Tuple;\n    import std.typecons\
    \ : Tuple;\n    import std.typecons : Tuple;\n    import std.typecons : Tuple;\n\
    \    import std.typecons : Tuple;\n    import std.typecons : Tuple;\n    import\
    \ std.typecons : Tuple;\n    import std.typecons : Tuple;\n    import std.typecons\
    \ : Tuple;\n    import std.typecons : Tuple;\n    import std.typecons : Tuple;\n\
    \    import std.typecons : Tuple;\n    import std.typecons : Tuple;\n    import\
    \ std.typecons : Tuple;\n    import std.typecons : Tuple;\n    import std.typecons\
    \ : Tuple;\n    import std.typecons : Tuple;\n    import std.typecons : Tuple;\n\
    \    import std.typecons : Tuple;\n    import std.typecons : Tuple;\n    import\
    \ std.typecons : Tuple;\n    import std.typecons : Tuple;\n    import std.typecons\
    \ : Tuple;\n    import std.typecons : Tuple;\n    import std.typecons : Tuple;\n\
    \    import std.typecons : Tuple;\n    import std.typecons : Tuple;\n    import\
    \ std.typecons : Tuple;\n    import std.typecons : Tuple;\n    import std.typecons\
    \ : Tuple;\n    import std.typecons : Tuple;\n    import std.typecons : Tuple;\n",
  "{\n    if (date.length == 0)\n        return false;\n    int month = to!int(date[0..1]);\n\
    \    int day = to!int(date[3..4]);\n    int year = to!int(date[6..9]);\n    if\
    \ (month < 1 || month > 12)\n        return false;\n    if (day < 1 || day > 31)\n\
    \        return false;\n    if (month == 2)\n    {\n        if (day > 29)\n  \
    \          return false;\n        if (day == 29)\n        {\n            if (year\
    \ % 4 != 0)\n                return false;\n            if (year % 100 == 0 &&\
    \ year % 400 != 0)\n                return false;\n        }\n    }\n    else\
    \ if (month == 4 || month == 6 || month == 9 || month == 11)\n    {\n        if\
    \ (day > 30)\n            return false;\n    }\n    return true;\n}", "{\n   \
    \ int[] days = [31, 28, 31, 30, 31, 30, 31, 31, 30, 31, 30, 31];\n    if (date.length\
    \ == 0) return false;\n    auto parts = date.split(\"-\");\n    if (parts.length\
    \ != 3) return false;\n    int month = to!int(parts[0]);\n    int day = to!int(parts[1]);\n\
    \    int year = to!int(parts[2]);\n    if (month < 1 || month > 12) return false;\n\
    \    if (day < 1 || day > days[month-1]) return false;\n    if (month == 2 &&\
    \ day == 29) {\n        if (year % 4 != 0) return false;\n        if (year % 100\
    \ == 0 && year % 400 != 0) return false;\n    }\n    return true;\n}", "{\n  \
    \  int[] months = [31, 28, 31, 30, 31, 30, 31, 31, 30, 31, 30, 31];\n    int[]\
    \ days = [0, 0, 0];\n    int i = 0;\n    int j = 0;\n    int k = 0;\n    int l\
    \ = 0;\n    int m = 0;\n    int n = 0;\n    int o = 0;\n    int p = 0;\n    int\
    \ q = 0;\n    int r = 0;\n    int s = 0;\n    int t = 0;\n    int u = 0;\n   \
    \ int v = 0;\n    int w = 0;\n    int x = 0;\n    int y = 0;\n    int z = 0;\n\
    \    int aa = 0;\n    int bb = 0;\n    int cc = 0;\n    int dd = 0;\n    int ee\
    \ = 0;\n    int ff = 0;\n    int gg = 0;\n    int hh = 0;\n    int ii = 0;\n \
    \   int jj = 0;\n    int kk = 0;\n    int ll = 0;\n    int mm = 0;\n    int nn\
    \ = 0;\n    int oo = 0;\n    int pp = 0;\n    int qq = 0;\n    int rr = 0;\n \
    \   int ss = 0;\n    int tt = 0;\n    int uu = 0;\n    int vv = 0;\n    int ww\
    \ = 0;\n    int xx = 0;\n    int yy = 0;\n    int zz = 0;\n    int aaa = 0;\n\
    \    int bbb = 0;\n    int ccc = 0;\n    int ddd = 0;\n    int eee = 0;\n    int\
    \ fff = 0;\n    int ggg = 0;\n    int hhh = 0;\n    int iii = 0;\n    int jjj\
    \ = 0;\n    int kkk = 0;\n    int lll = 0;\n    int mmm = 0;\n    int nnn = 0;\n\
    \    int ooo = 0;\n    int ppp = 0;\n    int qqq = 0;\n    int rrr =", "{\n  \
    \  int[] months = [1,3,5,7,8,10,12];\n    int[] months2 = [4,6,9,11];\n    int[]\
    \ months3 = [2];\n    int[] days = [1,2,3,4,5,6,7,8,9,10,11,12,13,14,15,16,17,18,19,20,21,22,23,24,25,26,27,28,29,30,31];\n\
    \    int[] days2 = [1,2,3,4,5,6,7,8,9,10,11,12,13,14,15,16,17,18,19,20,21,22,23,24,25,26,27,28,29,30];\n\
    \    int[] days3 = [1,2,3,4,5,6,7,8,9,10,11,12,13,14,15,16,17,18,19,20,21,22,23,24,25,26,27,28];\n\
    \    int[] years = [2000,2001,2002,2003,2004,2005,2006,2007,2008,2009,2010,2011,2012,2013,2014,2015,2016,2017,2018,2019,2020,2021,2022,2023,2024,2025,2026,2027,2028,2029,2030,2031,2032,2033,2034,2035,2036,2037,2038,2039,2040,2041,2042,2043,2044,2045,2046,2047,2048,2049,2050,2051,2052,2053,2054,2055,2056,2057,2058,2059,2060,2061,2062,2063,2064,2065,2066,2067,2068,2069,2070,2071,2072,2073,2074,2075,2076,2077,2078,2079,2080,2081,2082,2083,2084,2085,2086,2087,2088,2089,2090,2091,",
  "{\n    auto parts = split(date, \"-\");\n    if (parts.length != 3) return false;\n\
    \    int month = to!int(parts[0]);\n    int day = to!int(parts[1]);\n    int year\
    \ = to!int(parts[2]);\n    if (year < 0) return false;\n    if (month < 1 || month\
    \ > 12) return false;\n    if (day < 1) return false;\n    if (month == 2)\n \
    \   {\n        if (year % 4 == 0 && year % 100 != 0 || year % 400 == 0)\n    \
    \    {\n            if (day > 29) return false;\n        }\n        else\n   \
    \     {\n            if (day > 28) return false;\n        }\n    }\n    else if\
    \ (month == 4 || month == 6 || month == 9 || month == 11)\n    {\n        if (day\
    \ > 30) return false;\n    }\n    else\n    {\n        if (day > 31) return false;\n\
    \    }\n    return true;\n}", "{\n    if (date.length == 0)\n        return false;\n\
    \    if (date.length != 10)\n        return false;\n    if (date[2] != '-' ||\
    \ date[5] != '-')\n        return false;\n    if (date[0] < '0' || date[0] > '9'\
    \ || date[1] < '0' || date[1] > '9' || date[3] < '0' || date[3] > '9' || date[4]\
    \ < '0' || date[4] > '9' || date[6] < '0' || date[6] > '9' || date[7] < '0' ||\
    \ date[7] > '9' || date[8] < '0' || date[8] > '9' || date[9] < '0' || date[9]\
    \ > '9')\n        return false;\n    int month = (date[0] - '0') * 10 + (date[1]\
    \ - '0');\n    int day = (date[3] - '0') * 10 + (date[4] - '0');\n    if (month\
    \ < 1 || month > 12)\n        return false;\n    if (month == 2)\n    {\n    \
    \    if (day < 1 || day > 29)\n            return false;\n    }\n    else if (month\
    \ == 4 || month == 6 || month == 9 || month == 11)\n    {\n        if (day < 1\
    \ || day > 30)\n            return false;\n    }\n    else\n    {\n        if\
    \ (day < 1 || day > 31)\n            return false;\n    }\n    return true;\n}",
  "{\n    // write your code here\n    string[] date_array = date.split(\"-\");\n\
    \    if(date_array.length != 3)\n        return false;\n    int month = to!int(date_array[0]);\n\
    \    int day = to!int(date_array[1]);\n    int year = to!int(date_array[2]);\n\
    \    if(month < 1 || month > 12)\n        return false;\n    if(day < 1 || day\
    \ > 31)\n        return false;\n    if(month == 2)\n    {\n        if(day > 29)\n\
    \            return false;\n        else if(day == 29)\n        {\n          \
    \  if(year % 4 != 0)\n                return false;\n            else if(year\
    \ % 100 == 0 && year % 400 != 0)\n                return false;\n        }\n \
    \   }\n    else if(month == 4 || month == 6 || month == 9 || month == 11)\n  \
    \  {\n        if(day > 30)\n            return false;\n    }\n    return true;\n\
    }", "{\n    int[] months = [31, 28, 31, 30, 31, 30, 31, 31, 30, 31, 30, 31];\n\
    \    int[] date_arr = date.split(\"-\").map!(a => a.to!int).array;\n    if (date_arr.length\
    \ != 3) return false;\n    if (date_arr[0] < 1 || date_arr[0] > 12) return false;\n\
    \    if (date_arr[1] < 1 || date_arr[1] > months[date_arr[0] - 1]) return false;\n\
    \    if (date_arr[0] == 2 && date_arr[1] == 29) {\n        if (date_arr[2] % 4\
    \ != 0) return false;\n        if (date_arr[2] % 100 == 0 && date_arr[2] % 400\
    \ != 0) return false;\n    }\n    return true;\n}", "{\n    import std.algorithm\
    \ : map;\n    import std.conv : to;\n    import std.range : take, drop;\n    import\
    \ std.string : split;\n    import std.array : array;\n    import std.typecons\
    \ : tuple;\n    import std.math : max;\n    import std.typecons : tuple;\n   \
    \ import std.array : array;\n    import std.algorithm : map;\n    import std.conv\
    \ : to;\n    import std.range : take, drop;\n    import std.string : split;\n\
    \    import std.math : max;\n    import std.typecons : tuple;\n    import std.array\
    \ : array;\n    import std.algorithm : map;\n    import std.conv : to;\n    import\
    \ std.range : take, drop;\n    import std.string : split;\n    import std.math\
    \ : max;\n    import std.typecons : tuple;\n    import std.array : array;\n  \
    \  import std.algorithm : map;\n    import std.conv : to;\n    import std.range\
    \ : take, drop;\n    import std.string : split;\n    import std.math : max;\n\
    \    import std.typecons : tuple;\n    import std.array : array;\n    import std.algorithm\
    \ : map;\n    import std.conv : to;\n    import std.range : take, drop;\n    import\
    \ std.string : split;\n    import std.math : max;\n    import std.typecons : tuple;\n\
    \    import std.array : array;\n    import std.algorithm : map;\n    import std.conv\
    \ : to;\n    import std.range : take, drop;\n    import std.string : split;\n\
    \    import std.math : max;\n    import std.typecons : tuple;\n    import std.array\
    \ : array;\n    import std.algorithm : map;\n    import std.conv : to;\n    import\
    \ std.range : take, drop;\n    import std.string : split;\n    import std.math\
    \ : max;\n    import std.typecons : tuple;\n    import std.array : array;\n  \
    \  import std.algorithm : map;\n    import std.conv : to;\n    import", "{\n \
    \   auto parts = date.split(\"-\");\n    if (parts.length != 3) return false;\n\
    \    int month = to!int(parts[0]);\n    int day = to!int(parts[1]);\n    int year\
    \ = to!int(parts[2]);\n    if (month < 1 || month > 12) return false;\n    if\
    \ (day < 1 || day > 31) return false;\n    if (month == 2) {\n        if (day\
    \ > 29) return false;\n        if (day == 29) {\n            if (year % 4 != 0)\
    \ return false;\n            if (year % 100 == 0 && year % 400 != 0) return false;\n\
    \        }\n    } else if (month == 4 || month == 6 || month == 9 || month ==\
    \ 11) {\n        if (day > 30) return false;\n    }\n    return true;\n}", "{\n\
    \    if (date.length == 0)\n        return false;\n    auto date_split = date.split(\"\
    -\");\n    if (date_split.length != 3)\n        return false;\n    int month =\
    \ to!int(date_split[0]);\n    int day = to!int(date_split[1]);\n    int year =\
    \ to!int(date_split[2]);\n    if (month > 12 || month < 1)\n        return false;\n\
    \    if (day > 31 || day < 1)\n        return false;\n    if (month == 2)\n  \
    \  {\n        if (year % 4 == 0)\n        {\n            if (day > 29)\n     \
    \           return false;\n        }\n        else\n        {\n            if\
    \ (day > 28)\n                return false;\n        }\n    }\n    else if (month\
    \ == 4 || month == 6 || month == 9 || month == 11)\n    {\n        if (day > 30)\n\
    \            return false;\n    }\n    return true;\n}", "{\n    import std.algorithm\
    \ : map;\n    import std.array : array;\n    import std.conv : to;\n    import\
    \ std.range : isInputRange;\n    import std.string : split;\n    import std.typecons\
    \ : tuple;\n    import std.math : isNaN;\n    import std.stdio : writeln;\n  \
    \  import std.traits : isIntegral;\n    import std.typecons : tuple;\n    import\
    \ std.typecons : tuple;\n    import std.typecons : tuple;\n    import std.typecons\
    \ : tuple;\n    import std.typecons : tuple;\n    import std.typecons : tuple;\n\
    \    import std.typecons : tuple;\n    import std.typecons : tuple;\n    import\
    \ std.typecons : tuple;\n    import std.typecons : tuple;\n    import std.typecons\
    \ : tuple;\n    import std.typecons : tuple;\n    import std.typecons : tuple;\n\
    \    import std.typecons : tuple;\n    import std.typecons : tuple;\n    import\
    \ std.typecons : tuple;\n    import std.typecons : tuple;\n    import std.typecons\
    \ : tuple;\n    import std.typecons : tuple;\n    import std.typecons : tuple;\n\
    \    import std.typecons : tuple;\n    import std.typecons : tuple;\n    import\
    \ std.typecons : tuple;\n    import std.typecons : tuple;\n    import std.typecons\
    \ : tuple;\n    import std.typecons : tuple;\n    import std.typecons : tuple;\n\
    \    import std.typecons : tuple;\n    import std.typecons : tuple;\n    import\
    \ std.typecons : tuple;\n    import std.typecons : tuple;\n    import std.typecons\
    \ : tuple;\n    import std.typecons : tuple;\n    import std.typecons : tuple;\n\
    \    import std.typecons : tuple;\n    import std.typecons : tuple;\n    import\
    \ std.typecons : tuple;\n    import std.typecons : tuple;\n    import std.typecons\
    \ : tuple;\n    import std.typecons : tuple;\n    import std.typecons : tuple;\n\
    \    import std.typecons :", "{\n    if(date.length == 0)\n        return false;\n\
    \    auto date_split = date.split(\"-\");\n    if(date_split.length != 3)\n  \
    \      return false;\n    int month = to!int(date_split[0]);\n    int day = to!int(date_split[1]);\n\
    \    int year = to!int(date_split[2]);\n    if(month < 1 || month > 12)\n    \
    \    return false;\n    if(day < 1 || day > 31)\n        return false;\n    if(month\
    \ == 2)\n    {\n        if(day > 29)\n            return false;\n        if(day\
    \ == 29)\n        {\n            if(year % 4 != 0)\n                return false;\n\
    \            if(year % 100 == 0 && year % 400 != 0)\n                return false;\n\
    \        }\n    }\n    else if(month == 4 || month == 6 || month == 9 || month\
    \ == 11)\n    {\n        if(day > 30)\n            return false;\n    }\n    return\
    \ true;\n}", "{\n    auto parts = split(date, \"-\");\n    if (parts.length !=\
    \ 3)\n        return false;\n    int month = to!int(parts[0]);\n    int day =\
    \ to!int(parts[1]);\n    int year = to!int(parts[2]);\n    if (month < 1 || month\
    \ > 12)\n        return false;\n    if (day < 1)\n        return false;\n    if\
    \ (month == 2)\n    {\n        if (day > 29)\n            return false;\n    \
    \    if (day == 29)\n        {\n            if (year % 4 != 0)\n             \
    \   return false;\n            if (year % 100 == 0 && year % 400 != 0)\n     \
    \           return false;\n        }\n    }\n    else if (month == 4 || month\
    \ == 6 || month == 9 || month == 11)\n    {\n        if (day > 30)\n         \
    \   return false;\n    }\n    else\n    {\n        if (day > 31)\n           \
    \ return false;\n    }\n    return true;\n}", "{\n    string[] parts = date.split(\"\
    -\");\n    if (parts.length != 3) return false;\n    int month = to!int(parts[0]);\n\
    \    int day = to!int(parts[1]);\n    int year = to!int(parts[2]);\n    if (year\
    \ < 0) return false;\n    if (month < 1 || month > 12) return false;\n    if (day\
    \ < 1) return false;\n    if (month == 2)\n    {\n        if (year % 4 == 0 &&\
    \ (year % 100 != 0 || year % 400 == 0))\n        {\n            if (day > 29)\
    \ return false;\n        }\n        else\n        {\n            if (day > 28)\
    \ return false;\n        }\n    }\n    else if (month == 4 || month == 6 || month\
    \ == 9 || month == 11)\n    {\n        if (day > 30) return false;\n    }\n  \
    \  else\n    {\n        if (day > 31) return false;\n    }\n    return true;\n\
    }", "{\n    import std.algorithm : map;\n    import std.conv : to;\n    import\
    \ std.range : isInputRange;\n    import std.string : split;\n    import std.typecons\
    \ : Tuple;\n    import std.traits : isIntegral;\n    import std.math : isNaN;\n\
    \    import std.array : array;\n    import std.typecons : tuple;\n    import std.stdio\
    \ : writeln;\n    import std.range : iota;\n    import std.traits : isUnsigned;\n\
    \    import std.typecons : tuple;\n    import std.algorithm : map;\n    import\
    \ std.conv : to;\n    import std.range : isInputRange;\n    import std.string\
    \ : split;\n    import std.typecons : Tuple;\n    import std.traits : isIntegral;\n\
    \    import std.math : isNaN;\n    import std.array : array;\n    import std.typecons\
    \ : tuple;\n    import std.stdio : writeln;\n    import std.range : iota;\n  \
    \  import std.traits : isUnsigned;\n    import std.typecons : tuple;\n    import\
    \ std.algorithm : map;\n    import std.conv : to;\n    import std.range : isInputRange;\n\
    \    import std.string : split;\n    import std.typecons : Tuple;\n    import\
    \ std.traits : isIntegral;\n    import std.math : isNaN;\n    import std.array\
    \ : array;\n    import std.typecons : tuple;\n    import std.stdio : writeln;\n\
    \    import std.range : iota;\n    import std.traits : isUnsigned;\n    import\
    \ std.typecons : tuple;\n    import std.algorithm : map;\n    import std.conv\
    \ : to;\n    import std.range : isInputRange;\n    import std.string : split;\n\
    \    import std.typecons : Tuple;\n    import std.traits : isIntegral;\n    import\
    \ std.math : isNaN;\n    import std.array : array;\n    import std.typecons :\
    \ tuple;\n    import std.stdio : writeln;\n   ", "{\n    int[] days = [31, 28,\
    \ 31, 30, 31, 30, 31, 31, 30, 31, 30, 31];\n    auto parts = date.split(\"-\"\
    );\n    if (parts.length != 3) return false;\n    int month = to!int(parts[0]);\n\
    \    int day = to!int(parts[1]);\n    int year = to!int(parts[2]);\n    if (month\
    \ < 1 || month > 12) return false;\n    if (day < 1 || day > days[month-1]) return\
    \ false;\n    if (month == 2 && day == 29 && !isLeapYear(year)) return false;\n\
    \    return true;\n}", "{\n    auto parts = date.split(\"-\");\n    if (parts.length\
    \ != 3) return false;\n    auto day = to!int(parts[0]);\n    auto month = to!int(parts[1]);\n\
    \    auto year = to!int(parts[2]);\n    if (day < 1 || day > 31) return false;\n\
    \    if (month < 1 || month > 12) return false;\n    if (year < 1) return false;\n\
    \    if (month == 2) {\n        if (year % 4 == 0) {\n            if (day > 29)\
    \ return false;\n        } else {\n            if (day > 28) return false;\n \
    \       }\n    } else if (month == 4 || month == 6 || month == 9 || month == 11)\
    \ {\n        if (day > 30) return false;\n    }\n    return true;\n}", "{\n  \
    \  auto parts = date.split(\"-\");\n    if (parts.length != 3) return false;\n\
    \    int day = to!int(parts[0]);\n    int month = to!int(parts[1]);\n    int year\
    \ = to!int(parts[2]);\n    if (day < 1 || day > 31) return false;\n    if (month\
    \ < 1 || month > 12) return false;\n    if (month == 2) return day <= 29;\n  \
    \  if (month == 4 || month == 6 || month == 9 || month == 11) return day <= 30;\n\
    \    return true;\n}", "{\n    import std.stdio;\n    import std.string;\n   \
    \ import std.algorithm;\n    import std.conv;\n    import std.range;\n    import\
    \ std.array;\n    import std.typecons;\n    import std.math;\n    import std.format;\n\
    \    import std.datetime;\n    import std.traits;\n    import std.typecons;\n\
    \    import std.math;\n    import std.algorithm;\n    import std.array;\n    import\
    \ std.conv;\n    import std.range;\n    import std.string;\n    import std.typecons;\n\
    \    import std.math;\n    import std.typecons;\n    import std.math;\n    import\
    \ std.algorithm;\n    import std.array;\n    import std.conv;\n    import std.range;\n\
    \    import std.string;\n    import std.typecons;\n    import std.math;\n    import\
    \ std.typecons;\n    import std.math;\n    import std.algorithm;\n    import std.array;\n\
    \    import std.conv;\n    import std.range;\n    import std.string;\n    import\
    \ std.typecons;\n    import std.math;\n    import std.typecons;\n    import std.math;\n\
    \    import std.algorithm;\n    import std.array;\n    import std.conv;\n    import\
    \ std.range;\n    import std.string;\n    import std.typecons;\n    import std.math;\n\
    \    import std.typecons;\n    import std.math;\n    import std.algorithm;\n \
    \   import std.array;\n    import std.conv;\n    import std.range;\n    import\
    \ std.string;\n    import std.typecons;\n    import std.math;\n    import std.typecons;\n\
    \    import std.math;\n    import std.algorithm;\n    import std.array;\n    import\
    \ std.conv;\n    import std.range;\n    import std.string;\n    import std.typecons;\n\
    \    import std.math;\n    import std.typecons;\n    import std.math;\n    import\
    \ std.algorithm;\n    import std.array;\n   ", "{\n    import std.algorithm :\
    \ split;\n    import std.conv : to;\n    import std.array : array;\n    import\
    \ std.range : take;\n    import std.string : toLower;\n    import std.typecons\
    \ : tuple;\n    import std.math : isNaN;\n    import std.stdio : writeln;\n  \
    \  import std.typecons : tuple;\n    import std.algorithm : map;\n    import std.range\
    \ : take;\n    import std.array : array;\n    import std.typecons : tuple;\n \
    \   import std.math : isNaN;\n    import std.stdio : writeln;\n    import std.typecons\
    \ : tuple;\n    import std.algorithm : map;\n    import std.range : take;\n  \
    \  import std.array : array;\n    import std.typecons : tuple;\n    import std.math\
    \ : isNaN;\n    import std.stdio : writeln;\n    import std.typecons : tuple;\n\
    \    import std.algorithm : map;\n    import std.range : take;\n    import std.array\
    \ : array;\n    import std.typecons : tuple;\n    import std.math : isNaN;\n \
    \   import std.stdio : writeln;\n    import std.typecons : tuple;\n    import\
    \ std.algorithm : map;\n    import std.range : take;\n    import std.array : array;\n\
    \    import std.typecons : tuple;\n    import std.math : isNaN;\n    import std.stdio\
    \ : writeln;\n    import std.typecons : tuple;\n    import std.algorithm : map;\n\
    \    import std.range : take;\n    import std.array : array;\n    import std.typecons\
    \ : tuple;\n    import std.math : isNaN;\n    import std.stdio : writeln;\n  \
    \  import std.typecons : tuple;\n    import std.algorithm : map;\n    import std.range\
    \ : take;\n    import std.array : array;\n    import std.typecons : tuple;\n \
    \   import std.math : isNaN;\n    import std.stdio : writeln;\n    import std.typecons\
    \ : tuple;\n", "{\n    int[] days = [31, 28, 31, 30, 31, 30, 31, 31, 30, 31, 30,\
    \ 31];\n    if (date.length == 0) return false;\n    auto parts = date.split(\"\
    -\");\n    if (parts.length != 3) return false;\n    int month = to!int(parts[0]);\n\
    \    int day = to!int(parts[1]);\n    int year = to!int(parts[2]);\n    if (month\
    \ < 1 || month > 12) return false;\n    if (day < 1 || day > days[month - 1])\
    \ return false;\n    if (month == 2 && day == 29 && !isLeapYear(year)) return\
    \ false;\n    return true;\n}", "{\n    int[] months = [31, 28, 31, 30, 31, 30,\
    \ 31, 31, 30, 31, 30, 31];\n    int[] date_arr = date.split(\"-\").map!(to!int).array;\n\
    \    if (date_arr.length != 3)\n        return false;\n    if (date_arr[0] < 1\
    \ || date_arr[0] > 12)\n        return false;\n    if (date_arr[1] < 1 || date_arr[1]\
    \ > months[date_arr[0] - 1])\n        return false;\n    if (date_arr[0] == 2\
    \ && date_arr[1] == 29 && !isLeapYear(date_arr[2]))\n        return false;\n \
    \   return true;\n}", "{\n    return date.length > 0 && date.length == 10 && date[2]\
    \ == '-' && date[5] == '-' && date[0..1].to!int > 0 && date[0..1].to!int < 13\
    \ && date[3..4].to!int > 0 && date[3..4].to!int < 32 && date[6..9].to!int > 0;\n\
    }", "{\n    import std.algorithm : map;\n    import std.array : array;\n    import\
    \ std.conv : to;\n    import std.range : take;\n    import std.string : split;\n\
    \    import std.typecons : tuple;\n    import std.math : isNaN;\n    import std.typecons\
    \ : tuple;\n    import std.typecons : Tuple;\n    import std.typecons : tuple;\n\
    \    import std.typecons : Tuple;\n    import std.typecons : tuple;\n    import\
    \ std.typecons : Tuple;\n    import std.typecons : tuple;\n    import std.typecons\
    \ : Tuple;\n    import std.typecons : tuple;\n    import std.typecons : Tuple;\n\
    \    import std.typecons : tuple;\n    import std.typecons : Tuple;\n    import\
    \ std.typecons : tuple;\n    import std.typecons : Tuple;\n    import std.typecons\
    \ : tuple;\n    import std.typecons : Tuple;\n    import std.typecons : tuple;\n\
    \    import std.typecons : Tuple;\n    import std.typecons : tuple;\n    import\
    \ std.typecons : Tuple;\n    import std.typecons : tuple;\n    import std.typecons\
    \ : Tuple;\n    import std.typecons : tuple;\n    import std.typecons : Tuple;\n\
    \    import std.typecons : tuple;\n    import std.typecons : Tuple;\n    import\
    \ std.typecons : tuple;\n    import std.typecons : Tuple;\n    import std.typecons\
    \ : tuple;\n    import std.typecons : Tuple;\n    import std.typecons : tuple;\n\
    \    import std.typecons : Tuple;\n    import std.typecons : tuple;\n    import\
    \ std.typecons : Tuple;\n    import std.typecons : tuple;\n    import std.typecons\
    \ : Tuple;\n    import std.typecons : tuple;\n    import std.typecons : Tuple;\n\
    \    import std.typecons : tuple;\n    import std.typecons : Tuple;\n    import\
    \ std.typecons : tuple;\n    import std.typecons : Tuple;\n   ", "{\n    if (date.length\
    \ == 0)\n        return false;\n    auto date_split = date.split(\"-\");\n   \
    \ if (date_split.length != 3)\n        return false;\n    auto month = to!int(date_split[0]);\n\
    \    auto day = to!int(date_split[1]);\n    auto year = to!int(date_split[2]);\n\
    \    if (month < 1 || month > 12)\n        return false;\n    if (day < 1 || day\
    \ > 31)\n        return false;\n    if (month == 2)\n    {\n        if (day >\
    \ 29)\n            return false;\n        if (day == 29)\n        {\n        \
    \    if (year % 4 != 0)\n                return false;\n            if (year %\
    \ 100 == 0 && year % 400 != 0)\n                return false;\n        }\n   \
    \ }\n    else if (month == 4 || month == 6 || month == 9 || month == 11)\n   \
    \ {\n        if (day > 30)\n            return false;\n    }\n    return true;\n\
    }", "{\n    if (date.length == 0) return false;\n    auto parts = date.split(\"\
    -\");\n    if (parts.length != 3) return false;\n    int month = to!int(parts[0]);\n\
    \    int day = to!int(parts[1]);\n    int year = to!int(parts[2]);\n    if (month\
    \ < 1 || month > 12) return false;\n    if (day < 1 || day > 31) return false;\n\
    \    if (month == 2) {\n        if (day > 29) return false;\n        if (day ==\
    \ 29) {\n            if (year % 4 != 0) return false;\n            if (year %\
    \ 100 == 0 && year % 400 != 0) return false;\n        }\n    } else if (month\
    \ == 4 || month == 6 || month == 9 || month == 11) {\n        if (day > 30) return\
    \ false;\n    }\n    return true;\n}", "{\n    if (date.length == 0)\n       \
    \ return false;\n    auto date_arr = date.split(\"-\");\n    if (date_arr.length\
    \ != 3)\n        return false;\n    int month = to!int(date_arr[0]);\n    int\
    \ day = to!int(date_arr[1]);\n    int year = to!int(date_arr[2]);\n    if (month\
    \ < 1 || month > 12)\n        return false;\n    if (day < 1 || day > 31)\n  \
    \      return false;\n    if (month == 2)\n    {\n        if (day > 29)\n    \
    \        return false;\n        if (day == 29)\n        {\n            if (year\
    \ % 4 != 0)\n                return false;\n            if (year % 100 == 0 &&\
    \ year % 400 != 0)\n                return false;\n        }\n    }\n    else\
    \ if (month == 4 || month == 6 || month == 9 || month == 11)\n    {\n        if\
    \ (day > 30)\n            return false;\n    }\n    return true;\n}", "{\n   \
    \ auto parts = date.split(\"-\");\n    if (parts.length != 3) return false;\n\
    \    auto day = to!int(parts[0]);\n    auto month = to!int(parts[1]);\n    auto\
    \ year = to!int(parts[2]);\n    if (day < 1 || day > 31) return false;\n    if\
    \ (month < 1 || month > 12) return false;\n    if (month == 2 && day > 29) return\
    \ false;\n    if (month == 2 && day == 29 && !isLeapYear(year)) return false;\n\
    \    if (month == 4 || month == 6 || month == 9 || month == 11) {\n        if\
    \ (day > 30) return false;\n    }\n    return true;\n}", "{\n    import std.array;\n\
    \    import std.conv;\n    import std.algorithm;\n    import std.range;\n    import\
    \ std.typecons;\n    import std.math;\n    auto date_array = date.split(\"-\"\
    );\n    if (date_array.length != 3)\n        return false;\n    auto month = to!int(date_array[0]);\n\
    \    auto day = to!int(date_array[1]);\n    auto year = to!int(date_array[2]);\n\
    \    if (month < 1 || month > 12)\n        return false;\n    if (day < 1 || day\
    \ > 31)\n        return false;\n    if (month == 2)\n    {\n        if (day >\
    \ 29)\n            return false;\n        if (day == 29)\n        {\n        \
    \    if (year % 4 != 0)\n                return false;\n            if (year %\
    \ 100 == 0 && year % 400 != 0)\n                return false;\n        }\n   \
    \ }\n    else if (month == 4 || month == 6 || month == 9 || month == 11)\n   \
    \ {\n        if (day > 30)\n            return false;\n    }\n    return true;\n\
    }", "{\n    if(date.length == 0)\n        return false;\n    auto date_split =\
    \ date.split(\"-\");\n    if(date_split.length != 3)\n        return false;\n\
    \    int month = to!int(date_split[0]);\n    int day = to!int(date_split[1]);\n\
    \    int year = to!int(date_split[2]);\n    if(month < 1 || month > 12)\n    \
    \    return false;\n    if(day < 1 || day > 31)\n        return false;\n    if(month\
    \ == 2)\n    {\n        if(day > 29)\n            return false;\n        if(day\
    \ == 29)\n        {\n            if(year % 4 != 0)\n                return false;\n\
    \            if(year % 100 == 0 && year % 400 != 0)\n                return false;\n\
    \        }\n    }\n    else if(month == 4 || month == 6 || month == 9 || month\
    \ == 11)\n    {\n        if(day > 30)\n            return false;\n    }\n    return\
    \ true;\n}", "{\n    import std.conv : to;\n    import std.array : split;\n  \
    \  import std.algorithm : map;\n    import std.range : take;\n    import std.math\
    \ : min;\n    import std.typecons : tuple;\n    import std.traits : isIntegral;\n\
    \    import std.meta : AliasSeq;\n    import std.meta : AliasSeqOf;\n    import\
    \ std.meta : AliasSeqOfInts;\n    import std.meta : AliasSeqOfTuples;\n    import\
    \ std.meta : AliasSeqOfTuplesOfInts;\n    import std.meta : AliasSeqOfTuplesOfIntegrals;\n\
    \    import std.meta : AliasSeqOfIntegrals;\n    import std.meta : AliasSeqOfIntegralsOf;\n\
    \    import std.meta : AliasSeqOfIntegralsOfInts;\n    import std.meta : AliasSeqOfIntegralsOfTuples;\n\
    \    import std.meta : AliasSeqOfIntegralsOfTuplesOf;\n    import std.meta : AliasSeqOfIntegralsOfTuplesOfInts;\n\
    \    import std.meta : AliasSeqOfIntegralsOfTuplesOfIntegrals;\n    import std.meta\
    \ : AliasSeqOfTuplesOfIntegrals;\n    import std.meta : AliasSeqOfTuplesOfIntegralsOf;\n\
    \    import std.meta : AliasSeqOfTuplesOfIntegralsOfInts;\n    import std.meta\
    \ : AliasSeqOfTuplesOfIntegralsOfTuples;\n    import std.meta : AliasSeqOfTuplesOfIntegralsOfTuplesOf;\n\
    \    import std.meta : AliasSeqOfTuplesOfIntegralsOfTuplesOfInts;\n    import\
    \ std.meta : AliasSeqOfTuplesOfIntegralsOfTuplesOfIntegrals;\n    import std.meta\
    \ : AliasSeqOfTuplesOfTuples;\n    import std.meta : AliasSeqOfTuplesOfTuplesOf;\n\
    \    import std.meta : AliasSeqOfTuplesOfTuplesOfInts;\n    import std.meta :\
    \ AliasSeqOfTuplesOfTu", "{\n    if (date.length == 0)\n        return false;\n\
    \    auto date_arr = date.split(\"-\");\n    if (date_arr.length != 3)\n     \
    \   return false;\n    int month = to!int(date_arr[0]);\n    int day = to!int(date_arr[1]);\n\
    \    int year = to!int(date_arr[2]);\n    if (month < 1 || month > 12)\n     \
    \   return false;\n    if (day < 1 || day > 31)\n        return false;\n    if\
    \ (month == 2)\n    {\n        if (day > 29)\n            return false;\n    \
    \    if (day == 29)\n        {\n            if (year % 4 != 0)\n             \
    \   return false;\n            if (year % 100 == 0 && year % 400 != 0)\n     \
    \           return false;\n        }\n    }\n    else if (month == 4 || month\
    \ == 6 || month == 9 || month == 11)\n    {\n        if (day > 30)\n         \
    \   return false;\n    }\n    return true;\n}", "{\n    auto date_parts = date.split(\"\
    -\");\n    if (date_parts.length != 3)\n        return false;\n    int day = to!int(date_parts[0]);\n\
    \    int month = to!int(date_parts[1]);\n    int year = to!int(date_parts[2]);\n\
    \    if (day < 1 || day > 31)\n        return false;\n    if (month < 1 || month\
    \ > 12)\n        return false;\n    if (month == 2 && day > 29)\n        return\
    \ false;\n    if (month == 2 && day == 29 && !isLeapYear(year))\n        return\
    \ false;\n    if (month == 4 || month == 6 || month == 9 || month == 11)\n   \
    \     if (day > 30)\n            return false;\n    return true;\n}", "{\n   \
    \ import std.algorithm : map;\n    import std.array : array;\n    import std.conv\
    \ : to;\n    import std.string : split;\n    import std.typecons : tuple;\n  \
    \  import std.math : abs;\n    import std.range : iota;\n    import std.typecons\
    \ : tuple;\n    import std.typecons : tuple;\n    import std.typecons : tuple;\n\
    \    import std.typecons : tuple;\n    import std.typecons : tuple;\n    import\
    \ std.typecons : tuple;\n    import std.typecons : tuple;\n    import std.typecons\
    \ : tuple;\n    import std.typecons : tuple;\n    import std.typecons : tuple;\n\
    \    import std.typecons : tuple;\n    import std.typecons : tuple;\n    import\
    \ std.typecons : tuple;\n    import std.typecons : tuple;\n    import std.typecons\
    \ : tuple;\n    import std.typecons : tuple;\n    import std.typecons : tuple;\n\
    \    import std.typecons : tuple;\n    import std.typecons : tuple;\n    import\
    \ std.typecons : tuple;\n    import std.typecons : tuple;\n    import std.typecons\
    \ : tuple;\n    import std.typecons : tuple;\n    import std.typecons : tuple;\n\
    \    import std.typecons : tuple;\n    import std.typecons : tuple;\n    import\
    \ std.typecons : tuple;\n    import std.typecons : tuple;\n    import std.typecons\
    \ : tuple;\n    import std.typecons : tuple;\n    import std.typecons : tuple;\n\
    \    import std.typecons : tuple;\n    import std.typecons : tuple;\n    import\
    \ std.typecons : tuple;\n    import std.typecons : tuple;\n    import std.typecons\
    \ : tuple;\n    import std.typecons : tuple;\n    import std.typecons : tuple;\n\
    \    import std.typecons : tuple;\n    import std.typecons : tuple;\n    import\
    \ std.typecons : tuple;\n    import std.typecons : tuple;\n    import std.typecons\
    \ : tuple;\n    import std.typecons : tuple;\n    import std", "{\n    if (date.length\
    \ == 0)\n        return false;\n    auto date_split = date.split(\"-\");\n   \
    \ if (date_split.length != 3)\n        return false;\n    int month = to!int(date_split[0]);\n\
    \    int day = to!int(date_split[1]);\n    int year = to!int(date_split[2]);\n\
    \    if (month < 1 || month > 12)\n        return false;\n    if (day < 1 || day\
    \ > 31)\n        return false;\n    if (month == 2)\n    {\n        if (day >\
    \ 29)\n            return false;\n        if (day == 29)\n        {\n        \
    \    if (year % 4 != 0)\n                return false;\n            if (year %\
    \ 100 == 0 && year % 400 != 0)\n                return false;\n        }\n   \
    \ }\n    else if (month == 4 || month == 6 || month == 9 || month == 11)\n   \
    \ {\n        if (day > 30)\n            return false;\n    }\n    return true;\n\
    }", "{\n    auto date_split = date.split(\"-\");\n    if (date_split.length !=\
    \ 3) return false;\n    int month = to!int(date_split[0]);\n    int day = to!int(date_split[1]);\n\
    \    int year = to!int(date_split[2]);\n    if (month < 1 || month > 12) return\
    \ false;\n    if (day < 1 || day > 31) return false;\n    if (month == 2) {\n\
    \        if (day > 29) return false;\n        if (day == 29) {\n            if\
    \ (year % 4 != 0) return false;\n            if (year % 100 == 0 && year % 400\
    \ != 0) return false;\n        }\n    }\n    else if (month == 4 || month == 6\
    \ || month == 9 || month == 11) {\n        if (day > 30) return false;\n    }\n\
    \    return true;\n}", "{\n    string[] date_parts = date.split(\"-\");\n    if\
    \ (date_parts.length != 3)\n        return false;\n    int month = to!int(date_parts[0]);\n\
    \    int day = to!int(date_parts[1]);\n    int year = to!int(date_parts[2]);\n\
    \    if (month < 1 || month > 12)\n        return false;\n    if (day < 1 || day\
    \ > 31)\n        return false;\n    if (month == 2)\n    {\n        if (isLeapYear(year))\n\
    \        {\n            if (day > 29)\n                return false;\n       \
    \ }\n        else\n        {\n            if (day > 28)\n                return\
    \ false;\n        }\n    }\n    else if (month == 4 || month == 6 || month ==\
    \ 9 || month == 11)\n    {\n        if (day > 30)\n            return false;\n\
    \    }\n    return true;\n}", "{\n    int[] months = [31, 28, 31, 30, 31, 30,\
    \ 31, 31, 30, 31, 30, 31];\n    int[] days = [0, 0, 0];\n    int i = 0;\n    foreach(c;\
    \ date)\n    {\n        if(c == '-')\n        {\n            i++;\n          \
    \  continue;\n        }\n        if(c < '0' || c > '9')\n            return false;\n\
    \        days[i] = days[i] * 10 + (c - '0');\n    }\n    if(days[0] < 1 || days[0]\
    \ > 12)\n        return false;\n    if(days[2] < 1 || days[2] > 31)\n        return\
    \ false;\n    if(days[1] < 1 || days[1] > months[days[0] - 1])\n        return\
    \ false;\n    if(days[0] == 2 && days[1] == 29 && !isLeapYear(days[2]))\n    \
    \    return false;\n    return true;\n}", "{\n    if (date.length == 0) return\
    \ false;\n    auto date_parts = date.split(\"-\");\n    if (date_parts.length\
    \ != 3) return false;\n    int month = to!int(date_parts[0]);\n    int day = to!int(date_parts[1]);\n\
    \    int year = to!int(date_parts[2]);\n    if (month < 1 || month > 12) return\
    \ false;\n    if (day < 1 || day > 31) return false;\n    if (month == 2) {\n\
    \        if (day > 29) return false;\n        if (day == 29) {\n            if\
    \ (year % 4 != 0) return false;\n            if (year % 100 == 0 && year % 400\
    \ != 0) return false;\n        }\n    }\n    else if (month == 4 || month == 6\
    \ || month == 9 || month == 11) {\n        if (day > 30) return false;\n    }\n\
    \    return true;\n}", "{\n    import std.algorithm : map;\n    import std.array\
    \ : array;\n    import std.conv : to;\n    import std.range : isInputRange;\n\
    \    import std.string : split;\n    import std.typecons : tuple;\n    import\
    \ std.typecons : Tuple;\n    import std.typecons : tuple;\n    import std.typecons\
    \ : Tuple;\n    import std.typecons : tuple;\n    import std.typecons : Tuple;\n\
    \    import std.typecons : tuple;\n    import std.typecons : Tuple;\n    import\
    \ std.typecons : tuple;\n    import std.typecons : Tuple;\n    import std.typecons\
    \ : tuple;\n    import std.typecons : Tuple;\n    import std.typecons : tuple;\n\
    \    import std.typecons : Tuple;\n    import std.typecons : tuple;\n    import\
    \ std.typecons : Tuple;\n    import std.typecons : tuple;\n    import std.typecons\
    \ : Tuple;\n    import std.typecons : tuple;\n    import std.typecons : Tuple;\n\
    \    import std.typecons : tuple;\n    import std.typecons : Tuple;\n    import\
    \ std.typecons : tuple;\n    import std.typecons : Tuple;\n    import std.typecons\
    \ : tuple;\n    import std.typecons : Tuple;\n    import std.typecons : tuple;\n\
    \    import std.typecons : Tuple;\n    import std.typecons : tuple;\n    import\
    \ std.typecons : Tuple;\n    import std.typecons : tuple;\n    import std.typecons\
    \ : Tuple;\n    import std.typecons : tuple;\n    import std.typecons : Tuple;\n\
    \    import std.typecons : tuple;\n    import std.typecons : Tuple;\n    import\
    \ std.typecons : tuple;\n    import std.typecons : Tuple;\n    import std.typecons\
    \ : tuple;\n    import std.typecons : Tuple;\n    import std.typecons : tuple;\n\
    \    import std.typecons : Tuple;\n    import std.typecons : tuple;\n    import\
    \ std.typecons : Tuple;", "{\n    import std.string;\n    import std.algorithm;\n\
    \    import std.conv;\n    import std.array;\n    import std.range;\n    import\
    \ std.math;\n    import std.typecons;\n    import std.traits;\n    import std.typecons;\n\
    \    import std.math;\n    import std.algorithm;\n    import std.array;\n    import\
    \ std.range;\n    import std.conv;\n    import std.string;\n    import std.traits;\n\
    \    import std.typecons;\n    import std.math;\n    import std.algorithm;\n \
    \   import std.array;\n    import std.range;\n    import std.conv;\n    import\
    \ std.string;\n    import std.traits;\n    import std.typecons;\n    import std.math;\n\
    \    import std.algorithm;\n    import std.array;\n    import std.range;\n   \
    \ import std.conv;\n    import std.string;\n    import std.traits;\n    import\
    \ std.typecons;\n    import std.math;\n    import std.algorithm;\n    import std.array;\n\
    \    import std.range;\n    import std.conv;\n    import std.string;\n    import\
    \ std.traits;\n    import std.typecons;\n    import std.math;\n    import std.algorithm;\n\
    \    import std.array;\n    import std.range;\n    import std.conv;\n    import\
    \ std.string;\n    import std.traits;\n    import std.typecons;\n    import std.math;\n\
    \    import std.algorithm;\n    import std.array;\n    import std.range;\n   \
    \ import std.conv;\n    import std.string;\n    import std.traits;\n    import\
    \ std.typecons;\n    import std.math;\n    import std.algorithm;\n    import std.array;\n\
    \    import std.range;\n    import std.conv;\n    import std.string;\n    import\
    \ std.traits;\n    import std.typecons;\n    import std.math;\n    import std.algorithm;\n\
    \    import std.array;\n    import std.range;\n", "{\n    string[] date_split\
    \ = date.split(\"-\");\n    if (date_split.length != 3)\n        return false;\n\
    \    int month = to!int(date_split[0]);\n    int day = to!int(date_split[1]);\n\
    \    int year = to!int(date_split[2]);\n    if (month < 1 || month > 12)\n   \
    \     return false;\n    if (day < 1 || day > 31)\n        return false;\n   \
    \ if (month == 2)\n    {\n        if (day > 29)\n            return false;\n \
    \       if (day == 29)\n        {\n            if (year % 4 != 0)\n          \
    \      return false;\n            if (year % 100 == 0 && year % 400 != 0)\n  \
    \              return false;\n        }\n    }\n    else if (month == 4 || month\
    \ == 6 || month == 9 || month == 11)\n    {\n        if (day > 30)\n         \
    \   return false;\n    }\n    return true;\n}", "{\n    if (date.length == 0)\
    \ return false;\n    int[] months = [31, 28, 31, 30, 31, 30, 31, 31, 30, 31, 30,\
    \ 31];\n    auto parts = date.split(\"-\");\n    if (parts.length != 3) return\
    \ false;\n    int month = to!int(parts[0]);\n    int day = to!int(parts[1]);\n\
    \    int year = to!int(parts[2]);\n    if (month < 1 || month > 12) return false;\n\
    \    if (day < 1 || day > months[month - 1]) return false;\n    if (month == 2\
    \ && day == 29 && !isLeapYear(year)) return false;\n    return true;\n}", "{\n\
    \    auto parts = date.split(\"-\");\n    if (parts.length != 3)\n        return\
    \ false;\n    auto month = to!int(parts[0]);\n    auto day = to!int(parts[1]);\n\
    \    auto year = to!int(parts[2]);\n    if (year < 0)\n        return false;\n\
    \    if (month < 1 || month > 12)\n        return false;\n    if (day < 1)\n \
    \       return false;\n    if (month == 2)\n    {\n        if (day > 29)\n   \
    \         return false;\n        if (day == 29)\n        {\n            if (year\
    \ % 4 != 0)\n                return false;\n            if (year % 100 == 0 &&\
    \ year % 400 != 0)\n                return false;\n        }\n    }\n    else\
    \ if (month == 4 || month == 6 || month == 9 || month == 11)\n    {\n        if\
    \ (day > 30)\n            return false;\n    }\n    else\n    {\n        if (day\
    \ > 31)\n            return false;\n    }\n    return true;\n}", "{\n    auto\
    \ date_tuple = tuple(date.split(\"-\"));\n    if (date_tuple.length != 3)\n  \
    \      return false;\n    int month = to!int(date_tuple[0]);\n    int day = to!int(date_tuple[1]);\n\
    \    int year = to!int(date_tuple[2]);\n    if (month < 1 || month > 12)\n   \
    \     return false;\n    if (day < 1 || day > 31)\n        return false;\n   \
    \ if (month == 2)\n    {\n        if (day > 29)\n            return false;\n \
    \       if (day == 29)\n        {\n            if (year % 4 != 0)\n          \
    \      return false;\n            if (year % 100 == 0 && year % 400 != 0)\n  \
    \              return false;\n        }\n    }\n    else if (month == 4 || month\
    \ == 6 || month == 9 || month == 11)\n    {\n        if (day > 30)\n         \
    \   return false;\n    }\n    return true;\n}", "{\n    int[] months = [31, 28,\
    \ 31, 30, 31, 30, 31, 31, 30, 31, 30, 31];\n    int[] days = [0, 31, 59, 90, 120,\
    \ 151, 181, 212, 243, 273, 304, 334, 365];\n    int[] leap_days = [0, 31, 60,\
    \ 91, 121, 152, 182, 213, 244, 274, 305, 335, 366];\n    int[] date_array = date.split(\"\
    -\").map!int.array;\n    if (date_array.length != 3) return false;\n    int month\
    \ = date_array[0];\n    int day = date_array[1];\n    int year = date_array[2];\n\
    \    if (month < 1 || month > 12) return false;\n    if (day < 1 || day > months[month\
    \ - 1]) return false;\n    if (month == 2 && day == 29)\n    {\n        if (year\
    \ % 4 != 0) return false;\n        if (year % 100 == 0 && year % 400 != 0) return\
    \ false;\n    }\n    return true;\n}", "{\n    bool result = true;\n    if (date.length\
    \ == 0)\n        return false;\n    if (date.find(\"/\") != -1)\n        return\
    \ false;\n    auto date_parts = date.split(\"-\");\n    if (date_parts.length\
    \ != 3)\n        return false;\n    int month = to!int(date_parts[0]);\n    int\
    \ day = to!int(date_parts[1]);\n    int year = to!int(date_parts[2]);\n    if\
    \ (year < 0)\n        return false;\n    if (month < 1 || month > 12)\n      \
    \  return false;\n    if (day < 1)\n        return false;\n    if (month == 2)\n\
    \    {\n        if (day > 29)\n            return false;\n        if (day == 29)\n\
    \        {\n            if (year % 4 != 0)\n                return false;\n  \
    \          if (year % 100 == 0 && year % 400 != 0)\n                return false;\n\
    \        }\n    }\n    else if (month == 4 || month == 6 || month == 9 || month\
    \ == 11)\n    {\n        if (day > 30)\n            return false;\n    }\n   \
    \ else\n    {\n        if (day > 31)\n            return false;\n    }\n    return\
    \ result;\n}", "{\n    auto date_parts = date.split(\"-\");\n    if (date_parts.length\
    \ != 3)\n        return false;\n    auto month = to!int(date_parts[0]);\n    auto\
    \ day = to!int(date_parts[1]);\n    auto year = to!int(date_parts[2]);\n    if\
    \ (year < 0)\n        return false;\n    if (month < 1 || month > 12)\n      \
    \  return false;\n    if (day < 1)\n        return false;\n    if (month == 2)\n\
    \    {\n        if (year % 4 == 0 && (year % 100 != 0 || year % 400 == 0))\n \
    \       {\n            if (day > 29)\n                return false;\n        }\n\
    \        else\n        {\n            if (day > 28)\n                return false;\n\
    \        }\n    }\n    else if (month == 4 || month == 6 || month == 9 || month\
    \ == 11)\n    {\n        if (day > 30)\n            return false;\n    }\n   \
    \ else\n    {\n        if (day > 31)\n            return false;\n    }\n    return\
    \ true;\n}", "{\n    int[] days_in_month = [31, 28, 31, 30, 31, 30, 31, 31, 30,\
    \ 31, 30, 31];\n    int[] date_arr = date.split(\"-\").map!(a => a.to!int).array;\n\
    \    if (date_arr.length != 3) return false;\n    if (date_arr[0] < 1 || date_arr[0]\
    \ > 12) return false;\n    if (date_arr[1] < 1 || date_arr[1] > days_in_month[date_arr[0]\
    \ - 1]) return false;\n    if (date_arr[0] == 2 && date_arr[1] == 29) {\n    \
    \    if (date_arr[2] % 4 != 0) return false;\n        if (date_arr[2] % 100 ==\
    \ 0 && date_arr[2] % 400 != 0) return false;\n    }\n    return true;\n}", "{\n\
    \    if(date.length == 0)\n        return false;\n    auto date_array = date.split(\"\
    -\");\n    if(date_array.length != 3)\n        return false;\n    int month =\
    \ to!int(date_array[0]);\n    int day = to!int(date_array[1]);\n    int year =\
    \ to!int(date_array[2]);\n    if(month < 1 || month > 12)\n        return false;\n\
    \    if(day < 1 || day > 31)\n        return false;\n    if(month == 2)\n    {\n\
    \        if(day > 29)\n            return false;\n        if(day == 29)\n    \
    \    {\n            if(year % 4 != 0)\n                return false;\n       \
    \     if(year % 100 == 0 && year % 400 != 0)\n                return false;\n\
    \        }\n    }\n    else if(month == 4 || month == 6 || month == 9 || month\
    \ == 11)\n    {\n        if(day > 30)\n            return false;\n    }\n    return\
    \ true;\n}", "{\n    if(date.length == 0)\n        return false;\n    auto date_arr\
    \ = date.split(\"-\");\n    if(date_arr.length != 3)\n        return false;\n\
    \    int month = to!int(date_arr[0]);\n    int day = to!int(date_arr[1]);\n  \
    \  int year = to!int(date_arr[2]);\n    if(month < 1 || month > 12)\n        return\
    \ false;\n    if(day < 1 || day > 31)\n        return false;\n    if(month ==\
    \ 2)\n    {\n        if(day > 29)\n            return false;\n        if(day ==\
    \ 29)\n        {\n            if(year % 4 != 0)\n                return false;\n\
    \            if(year % 100 == 0 && year % 400 != 0)\n                return false;\n\
    \        }\n    }\n    else if(month == 4 || month == 6 || month == 9 || month\
    \ == 11)\n    {\n        if(day > 30)\n            return false;\n    }\n    return\
    \ true;\n}", "{\n    if (date.length == 0) return false;\n    int month = to!int(date[0..1]);\n\
    \    int day = to!int(date[3..4]);\n    int year = to!int(date[6..9]);\n    if\
    \ (month < 1 || month > 12) return false;\n    if (day < 1 || day > 31) return\
    \ false;\n    if (month == 2)\n    {\n        if (day > 29) return false;\n  \
    \      if (day == 29)\n        {\n            if (year % 4 != 0) return false;\n\
    \            if (year % 100 == 0 && year % 400 != 0) return false;\n        }\n\
    \    }\n    else if (month == 4 || month == 6 || month == 9 || month == 11)\n\
    \    {\n        if (day > 30) return false;\n    }\n    return true;\n}", "{\n\
    \    int[] days = [31, 28, 31, 30, 31, 30, 31, 31, 30, 31, 30, 31];\n    int month\
    \ = to!int(date[0..1]);\n    int day = to!int(date[3..4]);\n    int year = to!int(date[6..9]);\n\
    \    if (date.length != 10) return false;\n    if (month < 1 || month > 12) return\
    \ false;\n    if (day < 1 || day > days[month - 1]) return false;\n    if (month\
    \ == 2 && day == 29 && !isLeapYear(year)) return false;\n    return true;\n}",
  "{\n    auto parts = date.split(\"-\");\n    if (parts.length != 3) return false;\n\
    \    int month = parts[0].to!int;\n    int day = parts[1].to!int;\n    int year\
    \ = parts[2].to!int;\n    if (month < 1 || month > 12) return false;\n    if (day\
    \ < 1 || day > 31) return false;\n    if (month == 2) {\n        if (day > 29)\
    \ return false;\n        if (day == 29) {\n            if (year % 4 != 0) return\
    \ false;\n            if (year % 100 == 0 && year % 400 != 0) return false;\n\
    \        }\n    } else if (month == 4 || month == 6 || month == 9 || month ==\
    \ 11) {\n        if (day > 30) return false;\n    }\n    return true;\n}", "{\n\
    \    auto parts = split(date, \"-\");\n    if (parts.length != 3)\n        return\
    \ false;\n    auto month = to!int(parts[0]);\n    auto day = to!int(parts[1]);\n\
    \    auto year = to!int(parts[2]);\n    if (month < 1 || month > 12)\n       \
    \ return false;\n    if (day < 1)\n        return false;\n    if (month == 2)\n\
    \    {\n        if (day > 29)\n            return false;\n        if (day == 29)\n\
    \        {\n            if (year % 4 != 0)\n                return false;\n  \
    \          if (year % 100 == 0 && year % 400 != 0)\n                return false;\n\
    \        }\n    }\n    else if (month == 4 || month == 6 || month == 9 || month\
    \ == 11)\n    {\n        if (day > 30)\n            return false;\n    }\n   \
    \ else\n    {\n        if (day > 31)\n            return false;\n    }\n    return\
    \ true;\n}", "{\n    if (date.length == 0) return false;\n    if (date.length\
    \ != 10) return false;\n    if (date[2] != '-' || date[5] != '-') return false;\n\
    \    int month = to!int(date[0..1]);\n    int day = to!int(date[3..4]);\n    int\
    \ year = to!int(date[6..9]);\n    if (month < 1 || month > 12) return false;\n\
    \    if (month == 2) {\n        if (year % 4 == 0) {\n            if (day < 1\
    \ || day > 29) return false;\n        } else {\n            if (day < 1 || day\
    \ > 28) return false;\n        }\n    } else if (month == 1 || month == 3 || month\
    \ == 5 || month == 7 || month == 8 || month == 10 || month == 12) {\n        if\
    \ (day < 1 || day > 31) return false;\n    } else {\n        if (day < 1 || day\
    \ > 30) return false;\n    }\n    return true;\n}", "{\n    if (date.length ==\
    \ 0)\n        return false;\n    auto date_tuple = split(date, \"-\");\n    if\
    \ (date_tuple.length != 3)\n        return false;\n    int month = to!int(date_tuple[0]);\n\
    \    int day = to!int(date_tuple[1]);\n    int year = to!int(date_tuple[2]);\n\
    \    if (month < 1 || month > 12)\n        return false;\n    if (day < 1 || day\
    \ > 31)\n        return false;\n    if (month == 2)\n    {\n        if (day >\
    \ 29)\n            return false;\n        if (day == 29)\n        {\n        \
    \    if (year % 4 == 0)\n            {\n                if (year % 100 == 0)\n\
    \                {\n                    if (year % 400 == 0)\n               \
    \         return true;\n                    else\n                        return\
    \ false;\n                }\n                else\n                    return\
    \ true;\n            }\n            else\n                return false;\n    \
    \    }\n    }\n    else if (month == 4 || month == 6 || month == 9 || month ==\
    \ 11)\n    {\n        if (day > 30)\n            return false;\n    }\n    return\
    \ true;\n}", "{\n    bool result = true;\n    string[] date_arr = date.split(\"\
    -\");\n    if (date_arr.length != 3)\n    {\n        result = false;\n    }\n\
    \    else\n    {\n        int month = to!int(date_arr[0]);\n        int day =\
    \ to!int(date_arr[1]);\n        int year = to!int(date_arr[2]);\n        if (month\
    \ < 1 || month > 12)\n        {\n            result = false;\n        }\n    \
    \    else\n        {\n            if (month == 2)\n            {\n           \
    \     if (day < 1 || day > 29)\n                {\n                    result\
    \ = false;\n                }\n            }\n            else if (month == 4\
    \ || month == 6 || month == 9 || month == 11)\n            {\n               \
    \ if (day < 1 || day > 30)\n                {\n                    result = false;\n\
    \                }\n            }\n            else\n            {\n         \
    \       if (day < 1 || day > 31)\n                {\n                    result\
    \ = false;\n                }\n            }\n        }\n    }\n    return result;\n\
    }", "{\n    if (date.length == 0)\n        return false;\n    auto date_split\
    \ = date.split(\"-\");\n    if (date_split.length != 3)\n        return false;\n\
    \    int month = to!int(date_split[0]);\n    int day = to!int(date_split[1]);\n\
    \    int year = to!int(date_split[2]);\n    if (month < 1 || month > 12)\n   \
    \     return false;\n    if (day < 1 || day > 31)\n        return false;\n   \
    \ if (month == 2)\n    {\n        if (day > 29)\n            return false;\n \
    \       if (day == 29)\n        {\n            if (year % 4 != 0)\n          \
    \      return false;\n            if (year % 100 == 0 && year % 400 != 0)\n  \
    \              return false;\n        }\n    }\n    else if (month == 4 || month\
    \ == 6 || month == 9 || month == 11)\n    {\n        if (day > 30)\n         \
    \   return false;\n    }\n    return true;\n}", "{\n    if (date.length == 0)\n\
    \        return false;\n    auto date_split = date.split(\"-\");\n    if (date_split.length\
    \ != 3)\n        return false;\n    int month = to!int(date_split[0]);\n    int\
    \ day = to!int(date_split[1]);\n    int year = to!int(date_split[2]);\n    if\
    \ (month < 1 || month > 12)\n        return false;\n    if (day < 1 || day > 31)\n\
    \        return false;\n    if (month == 2)\n    {\n        if (day > 29)\n  \
    \          return false;\n        if (day == 29)\n        {\n            if (year\
    \ % 4 != 0)\n                return false;\n            if (year % 100 == 0 &&\
    \ year % 400 != 0)\n                return false;\n        }\n    }\n    else\
    \ if (month == 4 || month == 6 || month == 9 || month == 11)\n    {\n        if\
    \ (day > 30)\n            return false;\n    }\n    return true;\n}", "{\n   \
    \ import std.algorithm : map;\n    import std.array : array;\n    import std.conv\
    \ : to;\n    import std.range : isInputRange;\n    import std.string : split;\n\
    \    import std.typecons : tuple;\n    import std.math : isNaN;\n    import std.traits\
    \ : isIntegral;\n    import std.typecons : tuple;\n    import std.array : array;\n\
    \    import std.algorithm : map;\n    import std.range : isInputRange;\n    import\
    \ std.conv : to;\n    import std.string : split;\n    import std.math : isNaN;\n\
    \    import std.traits : isIntegral;\n    import std.typecons : tuple;\n    import\
    \ std.array : array;\n    import std.algorithm : map;\n    import std.range :\
    \ isInputRange;\n    import std.conv : to;\n    import std.string : split;\n \
    \   import std.math : isNaN;\n    import std.traits : isIntegral;\n    import\
    \ std.typecons : tuple;\n    import std.array : array;\n    import std.algorithm\
    \ : map;\n    import std.range : isInputRange;\n    import std.conv : to;\n  \
    \  import std.string : split;\n    import std.math : isNaN;\n    import std.traits\
    \ : isIntegral;\n    import std.typecons : tuple;\n    import std.array : array;\n\
    \    import std.algorithm : map;\n    import std.range : isInputRange;\n    import\
    \ std.conv : to;\n    import std.string : split;\n    import std.math : isNaN;\n\
    \    import std.traits : isIntegral;\n    import std.typecons : tuple;\n    import\
    \ std.array : array;\n    import std.algorithm : map;\n    import std.range :\
    \ isInputRange;\n    import std.conv : to;\n    import std.string : split;\n \
    \   import std.math : isNaN;\n    import std.traits : isIntegral;\n    import\
    \ std.typecons : tuple;\n    import std.array : array;\n    import std.", "{\n\
    \    import std.algorithm : split;\n    import std.conv : to;\n    import std.range\
    \ : empty;\n    import std.string : strip;\n    import std.typecons : tuple;\n\
    \    import std.math : max, min;\n    import std.array : array;\n    import std.traits\
    \ : isIntegral;\n    import std.meta : AliasSeq;\n    import std.meta : staticMap;\n\
    \    import std.meta : staticIndexOf;\n    import std.meta : staticIndexOf;\n\
    \    import std.meta : staticIndexOf;\n    import std.meta : staticIndexOf;\n\
    \    import std.meta : staticIndexOf;\n    import std.meta : staticIndexOf;\n\
    \    import std.meta : staticIndexOf;\n    import std.meta : staticIndexOf;\n\
    \    import std.meta : staticIndexOf;\n    import std.meta : staticIndexOf;\n\
    \    import std.meta : staticIndexOf;\n    import std.meta : staticIndexOf;\n\
    \    import std.meta : staticIndexOf;\n    import std.meta : staticIndexOf;\n\
    \    import std.meta : staticIndexOf;\n    import std.meta : staticIndexOf;\n\
    \    import std.meta : staticIndexOf;\n    import std.meta : staticIndexOf;\n\
    \    import std.meta : staticIndexOf;\n    import std.meta : staticIndexOf;\n\
    \    import std.meta : staticIndexOf;\n    import std.meta : staticIndexOf;\n\
    \    import std.meta : staticIndexOf;\n    import std.meta : staticIndexOf;\n\
    \    import std.meta : staticIndexOf;\n    import std.meta : staticIndexOf;\n\
    \    import std.meta : staticIndexOf;\n    import std.meta : staticIndexOf;\n\
    \    import std.meta : staticIndexOf;\n    import std.meta : staticIndexOf;\n\
    \    import std.meta : staticIndexOf;\n    import std.meta : staticIndexOf;\n\
    \    import std.meta : staticIndexOf;\n    import std.meta : staticIndexOf;\n\
    \    import std.meta : staticIndexOf;\n    import std.meta : staticIndexOf;\n\
    \    import std.meta : staticIndexOf;\n   ", "{\n    string[] parts = date.split(\"\
    -\");\n    if (parts.length != 3)\n        return false;\n    int month = to!int(parts[0]);\n\
    \    int day = to!int(parts[1]);\n    int year = to!int(parts[2]);\n    if (month\
    \ < 1 || month > 12)\n        return false;\n    if (day < 1)\n        return\
    \ false;\n    if (month == 2)\n    {\n        if (isLeapYear(year))\n        {\n\
    \            if (day > 29)\n                return false;\n        }\n       \
    \ else\n        {\n            if (day > 28)\n                return false;\n\
    \        }\n    }\n    else if (month == 4 || month == 6 || month == 9 || month\
    \ == 11)\n    {\n        if (day > 30)\n            return false;\n    }\n   \
    \ else\n    {\n        if (day > 31)\n            return false;\n    }\n    return\
    \ true;\n}", "{\n    if (date.length == 0)\n        return false;\n    auto date_arr\
    \ = date.split(\"-\");\n    if (date_arr.length != 3)\n        return false;\n\
    \    auto month = to!int(date_arr[0]);\n    auto day = to!int(date_arr[1]);\n\
    \    auto year = to!int(date_arr[2]);\n    if (month < 1 || month > 12)\n    \
    \    return false;\n    if (day < 1 || day > 31)\n        return false;\n    if\
    \ (month == 2)\n    {\n        if (day > 29)\n            return false;\n    \
    \    if (day == 29)\n        {\n            if (year % 4 != 0)\n             \
    \   return false;\n            if (year % 100 == 0 && year % 400 != 0)\n     \
    \           return false;\n        }\n    }\n    else if (month == 4 || month\
    \ == 6 || month == 9 || month == 11)\n    {\n        if (day > 30)\n         \
    \   return false;\n    }\n    return true;\n}", "{\n    int[] months = [31,28,31,30,31,30,31,31,30,31,30,31];\n\
    \    int[] date_arr = date.split(\"-\").map!(to!int).array;\n    if (date_arr.length\
    \ != 3) return false;\n    if (date_arr[0] < 1 || date_arr[0] > 12) return false;\n\
    \    if (date_arr[1] < 1 || date_arr[1] > months[date_arr[0]-1]) return false;\n\
    \    if (date_arr[0] == 2 && date_arr[1] == 29 && !isLeapYear(date_arr[2])) return\
    \ false;\n    return true;\n}", "{\n    if (date.length == 0)\n        return\
    \ false;\n    auto date_split = date.split(\"-\");\n    if (date_split.length\
    \ != 3)\n        return false;\n    int month = to!int(date_split[0]);\n    int\
    \ day = to!int(date_split[1]);\n    int year = to!int(date_split[2]);\n    if\
    \ (month < 1 || month > 12)\n        return false;\n    if (day < 1 || day > 31)\n\
    \        return false;\n    if (month == 2)\n    {\n        if (isLeapYear(year))\n\
    \        {\n            if (day > 29)\n                return false;\n       \
    \ }\n        else\n        {\n            if (day > 28)\n                return\
    \ false;\n        }\n    }\n    else if (month == 4 || month == 6 || month ==\
    \ 9 || month == 11)\n    {\n        if (day > 30)\n            return false;\n\
    \    }\n    return true;\n}", "{\n    import std.array;\n    import std.algorithm;\n\
    \    import std.conv;\n    import std.range;\n    import std.typecons;\n    import\
    \ std.math;\n    auto date_arr = date.split(\"-\");\n    if (date_arr.length !=\
    \ 3)\n        return false;\n    auto month = to!int(date_arr[0]);\n    auto day\
    \ = to!int(date_arr[1]);\n    auto year = to!int(date_arr[2]);\n    if (year <\
    \ 0)\n        return false;\n    if (month < 1 || month > 12)\n        return\
    \ false;\n    if (day < 1)\n        return false;\n    if (month == 2)\n    {\n\
    \        if (isLeapYear(year))\n        {\n            if (day > 29)\n       \
    \         return false;\n        }\n        else\n        {\n            if (day\
    \ > 28)\n                return false;\n        }\n    }\n    else if (month ==\
    \ 1 || month == 3 || month == 5 || month == 7 || month == 8 || month == 10 ||\
    \ month == 12)\n    {\n        if (day > 31)\n            return false;\n    }\n\
    \    else\n    {\n        if (day > 30)\n            return false;\n    }\n  \
    \  return true;\n}", "{\n    import std.algorithm : map;\n    import std.array\
    \ : array;\n    import std.conv : to;\n    import std.range : isInputRange;\n\
    \    import std.string : split;\n    import std.typecons : tuple;\n    import\
    \ std.math : isNaN;\n    import std.stdio : writeln;\n    import std.traits :\
    \ isIntegral;\n    import std.typecons : tuple;\n    import std.typecons : Tuple;\n\
    \    import std.typecons : tuple;\n    import std.typecons : Tuple;\n    import\
    \ std.typecons : tuple;\n    import std.typecons : Tuple;\n    import std.typecons\
    \ : tuple;\n    import std.typecons : Tuple;\n    import std.typecons : tuple;\n\
    \    import std.typecons : Tuple;\n    import std.typecons : tuple;\n    import\
    \ std.typecons : Tuple;\n    import std.typecons : tuple;\n    import std.typecons\
    \ : Tuple;\n    import std.typecons : tuple;\n    import std.typecons : Tuple;\n\
    \    import std.typecons : tuple;\n    import std.typecons : Tuple;\n    import\
    \ std.typecons : tuple;\n    import std.typecons : Tuple;\n    import std.typecons\
    \ : tuple;\n    import std.typecons : Tuple;\n    import std.typecons : tuple;\n\
    \    import std.typecons : Tuple;\n    import std.typecons : tuple;\n    import\
    \ std.typecons : Tuple;\n    import std.typecons : tuple;\n    import std.typecons\
    \ : Tuple;\n    import std.typecons : tuple;\n    import std.typecons : Tuple;\n\
    \    import std.typecons : tuple;\n    import std.typecons : Tuple;\n    import\
    \ std.typecons : tuple;\n    import std.typecons : Tuple;\n    import std.typecons\
    \ : tuple;\n    import std.typecons : Tuple;\n    import std.typecons : tuple;\n\
    \    import std.typecons : Tuple;\n    import std.typecons : tuple;\n    import\
    \ std.typecons : T", "{\n    import std.algorithm : map;\n    import std.array\
    \ : array;\n    import std.conv : to;\n    import std.range : isInputRange;\n\
    \    import std.string : split;\n    import std.typecons : tuple;\n    import\
    \ std.typecons : Tuple;\n    import std.typecons : Tuple;\n    import std.typecons\
    \ : Tuple;\n    import std.typecons : Tuple;\n    import std.typecons : Tuple;\n\
    \    import std.typecons : Tuple;\n    import std.typecons : Tuple;\n    import\
    \ std.typecons : Tuple;\n    import std.typecons : Tuple;\n    import std.typecons\
    \ : Tuple;\n    import std.typecons : Tuple;\n    import std.typecons : Tuple;\n\
    \    import std.typecons : Tuple;\n    import std.typecons : Tuple;\n    import\
    \ std.typecons : Tuple;\n    import std.typecons : Tuple;\n    import std.typecons\
    \ : Tuple;\n    import std.typecons : Tuple;\n    import std.typecons : Tuple;\n\
    \    import std.typecons : Tuple;\n    import std.typecons : Tuple;\n    import\
    \ std.typecons : Tuple;\n    import std.typecons : Tuple;\n    import std.typecons\
    \ : Tuple;\n    import std.typecons : Tuple;\n    import std.typecons : Tuple;\n\
    \    import std.typecons : Tuple;\n    import std.typecons : Tuple;\n    import\
    \ std.typecons : Tuple;\n    import std.typecons : Tuple;\n    import std.typecons\
    \ : Tuple;\n    import std.typecons : Tuple;\n    import std.typecons : Tuple;\n\
    \    import std.typecons : Tuple;\n    import std.typecons : Tuple;\n    import\
    \ std.typecons : Tuple;\n    import std.typecons : Tuple;\n    import std.typecons\
    \ : Tuple;\n    import std.typecons : Tuple;\n    import std.typecons : Tuple;\n\
    \    import std.typecons : Tuple;\n", "{\n    auto parts = date.split(\"-\");\n\
    \    if (parts.length != 3) return false;\n    auto month = parts[0].to!int;\n\
    \    auto day = parts[1].to!int;\n    auto year = parts[2].to!int;\n    if (month\
    \ < 1 || month > 12) return false;\n    if (day < 1 || day > 31) return false;\n\
    \    if (month == 2) {\n        if (day > 29) return false;\n        if (day ==\
    \ 29) {\n            if (year % 4 != 0) return false;\n            if (year %\
    \ 100 == 0 && year % 400 != 0) return false;\n        }\n    } else if (month\
    \ == 4 || month == 6 || month == 9 || month == 11) {\n        if (day > 30) return\
    \ false;\n    }\n    return true;\n}", "{\n    int[] months = [1,3,5,7,8,10,12];\n\
    \    int[] months2 = [4,6,9,11];\n    int[] months3 = [2];\n    string[] date_split\
    \ = date.split(\"-\");\n    int day = to!int(date_split[0]);\n    int month =\
    \ to!int(date_split[1]);\n    int year = to!int(date_split[2]);\n    if(date.length\
    \ == 0)\n        return false;\n    if(day < 1 || day > 31)\n        return false;\n\
    \    if(month < 1 || month > 12)\n        return false;\n    if(year < 1)\n  \
    \      return false;\n    if(month in months)\n    {\n        if(day > 31)\n \
    \           return false;\n    }\n    if(month in months2)\n    {\n        if(day\
    \ > 30)\n            return false;\n    }\n    if(month in months3)\n    {\n \
    \       if(day > 29)\n            return false;\n    }\n    return true;\n}",
  "{\n    auto date_tuple = tuple(date.split(\"-\"));\n    if (date_tuple.length !=\
    \ 3)\n        return false;\n    auto day = to!int(date_tuple[1]);\n    auto month\
    \ = to!int(date_tuple[0]);\n    auto year = to!int(date_tuple[2]);\n    if (day\
    \ < 1 || day > 31)\n        return false;\n    if (month < 1 || month > 12)\n\
    \        return false;\n    if (month == 2)\n    {\n        if (day > 29)\n  \
    \          return false;\n        if (day == 29)\n        {\n            if (year\
    \ % 4 != 0)\n                return false;\n            if (year % 100 == 0 &&\
    \ year % 400 != 0)\n                return false;\n        }\n    }\n    if (month\
    \ == 4 || month == 6 || month == 9 || month == 11)\n    {\n        if (day > 30)\n\
    \            return false;\n    }\n    return true;\n}", "{\n    auto date_parts\
    \ = date.split(\"-\");\n    if (date_parts.length != 3)\n        return false;\n\
    \    int day = to!int(date_parts[0]);\n    int month = to!int(date_parts[1]);\n\
    \    int year = to!int(date_parts[2]);\n    if (year < 0)\n        return false;\n\
    \    if (month < 1 || month > 12)\n        return false;\n    if (day < 1)\n \
    \       return false;\n    if (month == 2)\n    {\n        if (day > 29)\n   \
    \         return false;\n        if (day == 29)\n        {\n            if (year\
    \ % 4 != 0)\n                return false;\n            if (year % 100 == 0 &&\
    \ year % 400 != 0)\n                return false;\n        }\n    }\n    else\
    \ if (month == 4 || month == 6 || month == 9 || month == 11)\n    {\n        if\
    \ (day > 30)\n            return false;\n    }\n    else if (day > 31)\n     \
    \   return false;\n    return true;\n}", "{\n    if(date.length == 0) return false;\n\
    \    auto parts = date.split(\"-\");\n    if(parts.length != 3) return false;\n\
    \    int month = to!int(parts[0]);\n    int day = to!int(parts[1]);\n    int year\
    \ = to!int(parts[2]);\n    if(month < 1 || month > 12) return false;\n    if(year\
    \ < 1) return false;\n    if(day < 1) return false;\n    if(month == 2)\n    {\n\
    \        if(isLeapYear(year))\n        {\n            if(day > 29) return false;\n\
    \        }\n        else\n        {\n            if(day > 28) return false;\n\
    \        }\n    }\n    else if(month == 1 || month == 3 || month == 5 || month\
    \ == 7 || month == 8 || month == 10 || month == 12)\n    {\n        if(day > 31)\
    \ return false;\n    }\n    else\n    {\n        if(day > 30) return false;\n\
    \    }\n    return true;\n}", "{\n    auto parts = split(date, '-');\n    if (parts.length\
    \ != 3) return false;\n    int month = to!int(parts[0]);\n    int day = to!int(parts[1]);\n\
    \    int year = to!int(parts[2]);\n    if (month < 1 || month > 12) return false;\n\
    \    if (day < 1 || day > 31) return false;\n    if (month == 2) return day <=\
    \ 29;\n    if (month == 4 || month == 6 || month == 9 || month == 11) return day\
    \ <= 30;\n    return true;\n}", "{\n    if (date.length == 0) return false;\n\
    \    auto date_split = date.split(\"-\");\n    if (date_split.length != 3) return\
    \ false;\n    int month = to!int(date_split[0]);\n    int day = to!int(date_split[1]);\n\
    \    int year = to!int(date_split[2]);\n    if (month < 1 || month > 12) return\
    \ false;\n    if (day < 1 || day > 31) return false;\n    if (month == 2) {\n\
    \        if (day > 29) return false;\n        if (day == 29) {\n            if\
    \ (year % 4 != 0) return false;\n            if (year % 100 == 0 && year % 400\
    \ != 0) return false;\n        }\n    }\n    if (month == 4 || month == 6 || month\
    \ == 9 || month == 11) {\n        if (day > 30) return false;\n    }\n    return\
    \ true;\n}", "{\n    enum months = [\"January\", \"February\", \"March\", \"April\"\
    , \"May\", \"June\", \"July\", \"August\", \"September\", \"October\", \"November\"\
    , \"December\"];\n    auto date_split = date.split(\"-\");\n    if (date_split.length\
    \ != 3) return false;\n    if (date_split[0].length != 2 || date_split[1].length\
    \ != 2 || date_split[2].length != 4) return false;\n    int month = to!int(date_split[0]);\n\
    \    int day = to!int(date_split[1]);\n    int year = to!int(date_split[2]);\n\
    \    if (month < 1 || month > 12) return false;\n    if (day < 1 || day > 31)\
    \ return false;\n    if (month == 2) {\n        if (year % 4 == 0) {\n       \
    \     if (day > 29) return false;\n        } else {\n            if (day > 28)\
    \ return false;\n        }\n    } else if (month == 4 || month == 6 || month ==\
    \ 9 || month == 11) {\n        if (day > 30) return false;\n    }\n    return\
    \ true;\n}", "{\n    import std.algorithm : map;\n    import std.conv : to;\n\
    \    import std.range : isInputRange;\n    import std.string : split;\n    import\
    \ std.typecons : tuple;\n    import std.typecons : Tuple;\n    import std.typecons\
    \ : tuple;\n    import std.typecons : Tuple;\n    import std.typecons : tuple;\n\
    \    import std.typecons : Tuple;\n    import std.typecons : tuple;\n    import\
    \ std.typecons : Tuple;\n    import std.typecons : tuple;\n    import std.typecons\
    \ : Tuple;\n    import std.typecons : tuple;\n    import std.typecons : Tuple;\n\
    \    import std.typecons : tuple;\n    import std.typecons : Tuple;\n    import\
    \ std.typecons : tuple;\n    import std.typecons : Tuple;\n    import std.typecons\
    \ : tuple;\n    import std.typecons : Tuple;\n    import std.typecons : tuple;\n\
    \    import std.typecons : Tuple;\n    import std.typecons : tuple;\n    import\
    \ std.typecons : Tuple;\n    import std.typecons : tuple;\n    import std.typecons\
    \ : Tuple;\n    import std.typecons : tuple;\n    import std.typecons : Tuple;\n\
    \    import std.typecons : tuple;\n    import std.typecons : Tuple;\n    import\
    \ std.typecons : tuple;\n    import std.typecons : Tuple;\n    import std.typecons\
    \ : tuple;\n    import std.typecons : Tuple;\n    import std.typecons : tuple;\n\
    \    import std.typecons : Tuple;\n    import std.typecons : tuple;\n    import\
    \ std.typecons : Tuple;\n    import std.typecons : tuple;\n    import std.typecons\
    \ : Tuple;\n    import std.typecons : tuple;\n    import std.typecons : Tuple;\n\
    \    import std.typecons : tuple;\n    import std.typecons : Tuple;\n    import\
    \ std.typecons : tuple;\n    import std.typecons : Tuple;\n    import std.typecons\
    \ : tuple", "{\n    if (date.length == 0) return false;\n    auto date_arr = date.split(\"\
    -\");\n    if (date_arr.length != 3) return false;\n    auto month = date_arr[0].to!int;\n\
    \    auto day = date_arr[1].to!int;\n    auto year = date_arr[2].to!int;\n   \
    \ if (month < 1 || month > 12) return false;\n    if (month == 2) {\n        if\
    \ (year % 4 == 0) {\n            if (day < 1 || day > 29) return false;\n    \
    \    } else {\n            if (day < 1 || day > 28) return false;\n        }\n\
    \    } else if (month == 1 || month == 3 || month == 5 || month == 7 || month\
    \ == 8 || month == 10 || month == 12) {\n        if (day < 1 || day > 31) return\
    \ false;\n    } else {\n        if (day < 1 || day > 30) return false;\n    }\n\
    \    return true;\n}", "{\n    auto date_split = date.split(\"-\");\n    if (date_split.length\
    \ != 3)\n        return false;\n    auto month = to!int(date_split[0]);\n    auto\
    \ day = to!int(date_split[1]);\n    auto year = to!int(date_split[2]);\n    if\
    \ (year < 0)\n        return false;\n    if (month < 1 || month > 12)\n      \
    \  return false;\n    if (day < 1)\n        return false;\n    if (month == 2)\n\
    \    {\n        if (year % 4 == 0)\n        {\n            if (day > 29)\n   \
    \             return false;\n        }\n        else\n        {\n            if\
    \ (day > 28)\n                return false;\n        }\n    }\n    else if (month\
    \ == 1 || month == 3 || month == 5 || month == 7 || month == 8 || month == 10\
    \ || month == 12)\n    {\n        if (day > 31)\n            return false;\n \
    \   }\n    else\n    {\n        if (day > 30)\n            return false;\n   \
    \ }\n    return true;\n}", "{\n    auto parts = split(date, \"-\");\n    if (parts.length\
    \ != 3) return false;\n    auto day = to!int(parts[1]);\n    auto month = to!int(parts[0]);\n\
    \    auto year = to!int(parts[2]);\n    if (day < 1 || day > 31) return false;\n\
    \    if (month < 1 || month > 12) return false;\n    if (month == 2)\n    {\n\
    \        if (isLeapYear(year))\n        {\n            if (day > 29) return false;\n\
    \        }\n        else\n        {\n            if (day > 28) return false;\n\
    \        }\n    }\n    else if (month == 4 || month == 6 || month == 9 || month\
    \ == 11)\n    {\n        if (day > 30) return false;\n    }\n    return true;\n\
    }", "{\n    auto date_parts = split(date, \"-\");\n    if (date_parts.length !=\
    \ 3) return false;\n    if (date_parts[0].length != 2 || date_parts[1].length\
    \ != 2 || date_parts[2].length != 4) return false;\n    int month = to!int(date_parts[0]);\n\
    \    int day = to!int(date_parts[1]);\n    int year = to!int(date_parts[2]);\n\
    \    if (year < 0) return false;\n    if (month < 1 || month > 12) return false;\n\
    \    if (day < 1) return false;\n    if (month == 2)\n    {\n        if (isLeapYear(year))\n\
    \        {\n            if (day > 29) return false;\n        }\n        else\n\
    \        {\n            if (day > 28) return false;\n        }\n    }\n    else\
    \ if (month == 4 || month == 6 || month == 9 || month == 11)\n    {\n        if\
    \ (day > 30) return false;\n    }\n    else\n    {\n        if (day > 31) return\
    \ false;\n    }\n    return true;\n}", "{\n    import std.algorithm : split;\n\
    \    import std.conv : to;\n    import std.range : take;\n    import std.array\
    \ : array;\n    import std.typecons : tuple;\n    import std.math : isNaN;\n \
    \   import std.string : format;\n    import std.stdio : writeln;\n    import std.exception\
    \ : assertThrown;\n    import std.exception : enforce;\n    import std.typecons\
    \ : tuple;\n    import std.typecons : Tuple;\n    import std.typecons : tupleof;\n\
    \    import std.typecons : TupleOf;\n    import std.typecons : FieldTypeTuple;\n\
    \    import std.typecons : FieldTypeTuple;\n    import std.typecons : Tuple;\n\
    \    import std.typecons : Tuple;\n    import std.typecons : Tuple;\n    import\
    \ std.typecons : Tuple;\n    import std.typecons : Tuple;\n    import std.typecons\
    \ : Tuple;\n    import std.typecons : Tuple;\n    import std.typecons : Tuple;\n\
    \    import std.typecons : Tuple;\n    import std.typecons : Tuple;\n    import\
    \ std.typecons : Tuple;\n    import std.typecons : Tuple;\n    import std.typecons\
    \ : Tuple;\n    import std.typecons : Tuple;\n    import std.typecons : Tuple;\n\
    \    import std.typecons : Tuple;\n    import std.typecons : Tuple;\n    import\
    \ std.typecons : Tuple;\n    import std.typecons : Tuple;\n    import std.typecons\
    \ : Tuple;\n    import std.typecons : Tuple;\n    import std.typecons : Tuple;\n\
    \    import std.typecons : Tuple;\n    import std.typecons : Tuple;\n    import\
    \ std.typecons : Tuple;\n    import std.typecons : Tuple;\n    import std.typecons\
    \ : Tuple;\n    import std.typecons : Tuple;\n    import std.typecons : Tuple;\n\
    \    import std.typecons : Tuple;\n    import std.typecons : Tuple", "{\n    if(date.length\
    \ == 0)\n        return false;\n    auto date_array = date.split(\"-\");\n   \
    \ if(date_array.length != 3)\n        return false;\n    int month = to!int(date_array[0]);\n\
    \    int day = to!int(date_array[1]);\n    int year = to!int(date_array[2]);\n\
    \    if(month < 1 || month > 12)\n        return false;\n    if(day < 1 || day\
    \ > 31)\n        return false;\n    if(month == 2)\n    {\n        if(day > 29)\n\
    \            return false;\n        if(day == 29)\n        {\n            if(year\
    \ % 4 != 0)\n                return false;\n            if(year % 100 == 0 &&\
    \ year % 400 != 0)\n                return false;\n        }\n    }\n    else\
    \ if(month == 4 || month == 6 || month == 9 || month == 11)\n    {\n        if(day\
    \ > 30)\n            return false;\n    }\n    return true;\n}", "{\n    auto\
    \ parts = split(date, \"-\");\n    if (parts.length != 3) return false;\n    int\
    \ month = to!int(parts[0]);\n    int day = to!int(parts[1]);\n    int year = to!int(parts[2]);\n\
    \    if (year < 0) return false;\n    if (month < 1 || month > 12) return false;\n\
    \    if (day < 1) return false;\n    if (month == 2)\n    {\n        if (isLeapYear(year))\n\
    \        {\n            if (day > 29) return false;\n        }\n        else\n\
    \        {\n            if (day > 28) return false;\n        }\n    }\n    else\
    \ if (month == 4 || month == 6 || month == 9 || month == 11)\n    {\n        if\
    \ (day > 30) return false;\n    }\n    else\n    {\n        if (day > 31) return\
    \ false;\n    }\n    return true;\n}", "{\n    if (date.length == 0) return false;\n\
    \    string[] date_parts = date.split(\"-\");\n    if (date_parts.length != 3)\
    \ return false;\n    int month = to!int(date_parts[0]);\n    int day = to!int(date_parts[1]);\n\
    \    int year = to!int(date_parts[2]);\n    if (month < 1 || month > 12) return\
    \ false;\n    if (day < 1 || day > 31) return false;\n    if (month == 2) {\n\
    \        if (day > 29) return false;\n        if (day == 29) {\n            if\
    \ (year % 4 != 0) return false;\n            if (year % 100 == 0 && year % 400\
    \ != 0) return false;\n        }\n    }\n    if (month == 4 || month == 6 || month\
    \ == 9 || month == 11) {\n        if (day > 30) return false;\n    }\n    return\
    \ true;\n}", "{\n    // check if date is empty\n    if(date.empty)\n        return\
    \ false;\n    \n    // check if date is in the format mm-dd-yyyy\n    if(date.count('-')\
    \ != 2)\n        return false;\n    \n    // split date into month, day, year\n\
    \    auto date_split = date.split('-');\n    if(date_split.length != 3)\n    \
    \    return false;\n    \n    // convert month, day, year to int\n    int month\
    \ = to!int(date_split[0]);\n    int day = to!int(date_split[1]);\n    int year\
    \ = to!int(date_split[2]);\n    \n    // check if month is in range 1-12\n   \
    \ if(month < 1 || month > 12)\n        return false;\n    \n    // check if day\
    \ is in range 1-31 for months 1,3,5,7,8,10,12\n    if(month == 1 || month == 3\
    \ || month == 5 || month == 7 || month == 8 || month == 10 || month == 12)\n \
    \   {\n        if(day < 1 || day > 31)\n            return false;\n    }\n   \
    \ // check if day is in range 1-30 for months 4,6,9,11\n    else if(month == 4\
    \ || month == 6 || month == 9 || month == 11)\n    {\n        if(day < 1 || day\
    \ > 30)\n            return false;\n    }\n    // check if day is in range 1-29\
    \ for month 2\n    else if(month == 2)\n    {\n        if(day < 1 || day > 29)\n\
    \            return false;\n    }\n    \n    // check if day is in range 1-28\
    \ for month 2 if year is not a leap year\n    if(month == 2 && !isLeapYear(year))\n\
    \    {\n        if(day < 1 || day > 28)\n            return false;\n    }\n  \
    \  \n    return true;\n}", "{\n    auto parts = split(date, \"-\");\n    if (parts.length\
    \ != 3) return false;\n    int month = to!int(parts[0]);\n    int day = to!int(parts[1]);\n\
    \    int year = to!int(parts[2]);\n    if (year < 0) return false;\n    if (month\
    \ < 1 || month > 12) return false;\n    if (day < 1) return false;\n    if (month\
    \ == 2) return day <= 29;\n    if (month == 4 || month == 6 || month == 9 || month\
    \ == 11) return day <= 30;\n    return day <= 31;\n}", "{\n    auto date_parts\
    \ = date.split(\"-\");\n    if (date_parts.length != 3)\n        return false;\n\
    \    int month = to!int(date_parts[0]);\n    int day = to!int(date_parts[1]);\n\
    \    int year = to!int(date_parts[2]);\n    if (month < 1 || month > 12)\n   \
    \     return false;\n    if (day < 1 || day > 31)\n        return false;\n   \
    \ if (month == 2)\n    {\n        if (day > 29)\n            return false;\n \
    \       if (day == 29)\n        {\n            if (year % 4 != 0)\n          \
    \      return false;\n            if (year % 100 == 0 && year % 400 != 0)\n  \
    \              return false;\n        }\n    }\n    else if (month == 4 || month\
    \ == 6 || month == 9 || month == 11)\n    {\n        if (day > 30)\n         \
    \   return false;\n    }\n    return true;\n}", "{\n    return date.length > 0\
    \ && date.length == 10 && date[2] == '-' && date[5] == '-' && date[0..1].to!int\
    \ > 0 && date[0..1].to!int < 13 && date[3..4].to!int > 0 && date[3..4].to!int\
    \ < 32 && date[6..9].to!int > 0;\n}", "{\n    import std.algorithm : map;\n  \
    \  import std.array : array;\n    import std.conv : to;\n    import std.range\
    \ : isInputRange;\n    import std.string : split;\n    import std.typecons : tuple;\n\
    \    import std.typecons : Tuple;\n    import std.typetuple : TypeTuple;\n   \
    \ import std.meta : AliasSeq;\n    import std.meta : AliasSeqOf;\n    import std.meta\
    \ : AliasSeqOfTypeTuple;\n    import std.meta : AliasSeqOfTuple;\n    import std.meta\
    \ : AliasSeqOfTypeTuple;\n    import std.meta : AliasSeqOfTuple;\n    import std.meta\
    \ : AliasSeqOfTypeTuple;\n    import std.meta : AliasSeqOfTuple;\n    import std.meta\
    \ : AliasSeqOfTypeTuple;\n    import std.meta : AliasSeqOfTuple;\n    import std.meta\
    \ : AliasSeqOfTypeTuple;\n    import std.meta : AliasSeqOfTuple;\n    import std.meta\
    \ : AliasSeqOfTypeTuple;\n    import std.meta : AliasSeqOfTuple;\n    import std.meta\
    \ : AliasSeqOfTypeTuple;\n    import std.meta : AliasSeqOfTuple;\n    import std.meta\
    \ : AliasSeqOfTypeTuple;\n    import std.meta : AliasSeqOfTuple;\n    import std.meta\
    \ : AliasSeqOfTypeTuple;\n    import std.meta : AliasSeqOfTuple;\n    import std.meta\
    \ : AliasSeqOfTypeTuple;\n    import std.meta : AliasSeqOfTuple;\n    import std.meta\
    \ : AliasSeqOfTypeTuple;\n    import std.meta : AliasSeqOfTuple;\n    import std.meta\
    \ : AliasSeqOfTypeTuple;\n    import std.meta : AliasSeqOfTuple;\n    import std.meta\
    \ : AliasSeqOfTypeTuple;\n    import std.meta : AliasSeqOfTuple;", "{\n    if(date.length\
    \ == 0)\n        return false;\n    auto date_split = date.split(\"-\");\n   \
    \ if(date_split.length != 3)\n        return false;\n    int month = to!int(date_split[0]);\n\
    \    int day = to!int(date_split[1]);\n    int year = to!int(date_split[2]);\n\
    \    if(month < 1 || month > 12)\n        return false;\n    if(day < 1 || day\
    \ > 31)\n        return false;\n    if(month == 2)\n    {\n        if(isLeapYear(year))\n\
    \        {\n            if(day > 29)\n                return false;\n        }\n\
    \        else\n        {\n            if(day > 28)\n                return false;\n\
    \        }\n    }\n    else if(month == 4 || month == 6 || month == 9 || month\
    \ == 11)\n    {\n        if(day > 30)\n            return false;\n    }\n    return\
    \ true;\n}", "{\n    if (date.length == 0) return false;\n    string[] date_arr\
    \ = date.split(\"-\");\n    if (date_arr.length != 3) return false;\n    int month\
    \ = to!int(date_arr[0]);\n    int day = to!int(date_arr[1]);\n    int year = to!int(date_arr[2]);\n\
    \    if (month < 1 || month > 12) return false;\n    if (day < 1 || day > 31)\
    \ return false;\n    if (month == 2) {\n        if (day > 29) return false;\n\
    \        if (day == 29) {\n            if (year % 4 != 0) return false;\n    \
    \        if (year % 100 == 0 && year % 400 != 0) return false;\n        }\n  \
    \  }\n    if (month == 4 || month == 6 || month == 9 || month == 11) {\n     \
    \   if (day > 30) return false;\n    }\n    return true;\n}", "{\n    import std.algorithm\
    \ : map;\n    import std.conv : to;\n    import std.range : isInputRange;\n  \
    \  import std.string : split;\n    import std.typecons : tuple;\n    import std.typecons\
    \ : Tuple;\n    import std.typecons : Tuple;\n    import std.typecons : Tuple;\n\
    \    import std.typecons : Tuple;\n    import std.typecons : Tuple;\n    import\
    \ std.typecons : Tuple;\n    import std.typecons : Tuple;\n    import std.typecons\
    \ : Tuple;\n    import std.typecons : Tuple;\n    import std.typecons : Tuple;\n\
    \    import std.typecons : Tuple;\n    import std.typecons : Tuple;\n    import\
    \ std.typecons : Tuple;\n    import std.typecons : Tuple;\n    import std.typecons\
    \ : Tuple;\n    import std.typecons : Tuple;\n    import std.typecons : Tuple;\n\
    \    import std.typecons : Tuple;\n    import std.typecons : Tuple;\n    import\
    \ std.typecons : Tuple;\n    import std.typecons : Tuple;\n    import std.typecons\
    \ : Tuple;\n    import std.typecons : Tuple;\n    import std.typecons : Tuple;\n\
    \    import std.typecons : Tuple;\n    import std.typecons : Tuple;\n    import\
    \ std.typecons : Tuple;\n    import std.typecons : Tuple;\n    import std.typecons\
    \ : Tuple;\n    import std.typecons : Tuple;\n    import std.typecons : Tuple;\n\
    \    import std.typecons : Tuple;\n    import std.typecons : Tuple;\n    import\
    \ std.typecons : Tuple;\n    import std.typecons : Tuple;\n    import std.typecons\
    \ : Tuple;\n    import std.typecons : Tuple;\n    import std.typecons : Tuple;\n\
    \    import std.typecons : Tuple;\n    import std.typecons : Tuple;\n    import\
    \ std.typecons : Tuple;\n    import std.typecons : Tuple", "{\n    if (date.length\
    \ == 0)\n        return false;\n    auto date_split = date.split(\"-\");\n   \
    \ if (date_split.length != 3)\n        return false;\n    int month = to!int(date_split[0]);\n\
    \    int day = to!int(date_split[1]);\n    int year = to!int(date_split[2]);\n\
    \    if (month < 1 || month > 12)\n        return false;\n    if (day < 1 || day\
    \ > 31)\n        return false;\n    if (month == 2)\n    {\n        if (day >\
    \ 29)\n            return false;\n        if (day == 29)\n        {\n        \
    \    if (year % 4 != 0)\n                return false;\n            if (year %\
    \ 100 == 0 && year % 400 != 0)\n                return false;\n        }\n   \
    \ }\n    else if (month == 4 || month == 6 || month == 9 || month == 11)\n   \
    \ {\n        if (day > 30)\n            return false;\n    }\n    return true;\n\
    }", "{\n    int[] months = [31, 28, 31, 30, 31, 30, 31, 31, 30, 31, 30, 31];\n\
    \    string[] date_split = date.split(\"-\");\n    if (date_split.length != 3)\n\
    \        return false;\n    int month = to!int(date_split[0]);\n    int day =\
    \ to!int(date_split[1]);\n    int year = to!int(date_split[2]);\n    if (month\
    \ < 1 || month > 12)\n        return false;\n    if (day < 1 || day > months[month\
    \ - 1])\n        return false;\n    if (month == 2 && day == 29 && !isLeapYear(year))\n\
    \        return false;\n    return true;\n}", "{\n    if(date.length == 0)\n \
    \       return false;\n    auto date_split = date.split(\"-\");\n    if(date_split.length\
    \ != 3)\n        return false;\n    auto month = date_split[0].to!int;\n    auto\
    \ day = date_split[1].to!int;\n    auto year = date_split[2].to!int;\n    if(month\
    \ < 1 || month > 12)\n        return false;\n    if(day < 1 || day > 31)\n   \
    \     return false;\n    if(month == 2)\n    {\n        if(isLeapYear(year))\n\
    \        {\n            if(day > 29)\n                return false;\n        }\n\
    \        else\n        {\n            if(day > 28)\n                return false;\n\
    \        }\n    }\n    if(month == 4 || month == 6 || month == 9 || month == 11)\n\
    \    {\n        if(day > 30)\n            return false;\n    }\n    return true;\n\
    }", "{\n    auto date_arr = date.split(\"-\");\n    if (date_arr.length != 3)\n\
    \        return false;\n    int month = date_arr[0].to!int;\n    int day = date_arr[1].to!int;\n\
    \    int year = date_arr[2].to!int;\n    if (month < 1 || month > 12)\n      \
    \  return false;\n    if (day < 1 || day > 31)\n        return false;\n    if\
    \ (month == 2)\n    {\n        if (isLeapYear(year))\n        {\n            if\
    \ (day > 29)\n                return false;\n        }\n        else\n       \
    \ {\n            if (day > 28)\n                return false;\n        }\n   \
    \ }\n    if (month == 4 || month == 6 || month == 9 || month == 11)\n    {\n \
    \       if (day > 30)\n            return false;\n    }\n    return true;\n}",
  "{\n    int[] months = [31, 28, 31, 30, 31, 30, 31, 31, 30, 31, 30, 31];\n    auto\
    \ parts = date.split(\"-\");\n    if (parts.length != 3) return false;\n    int\
    \ month = to!int(parts[0]);\n    int day = to!int(parts[1]);\n    int year = to!int(parts[2]);\n\
    \    if (year < 0) return false;\n    if (month < 1 || month > 12) return false;\n\
    \    if (day < 1 || day > months[month - 1]) return false;\n    if (month == 2\
    \ && day == 29) {\n        if (year % 4 != 0) return false;\n        if (year\
    \ % 100 == 0 && year % 400 != 0) return false;\n    }\n    return true;\n}", "{\n\
    \    int[] days_in_month = [31, 28, 31, 30, 31, 30, 31, 31, 30, 31, 30, 31];\n\
    \    int[] date_parts = date.split(\"-\").map!(a => to!int(a)).array;\n    if\
    \ (date_parts.length != 3) return false;\n    if (date_parts[0] < 1 || date_parts[0]\
    \ > 12) return false;\n    if (date_parts[1] < 1 || date_parts[1] > days_in_month[date_parts[0]\
    \ - 1]) return false;\n    return true;\n}", "{\n    import std.algorithm : map;\n\
    \    import std.array : array;\n    import std.conv : to;\n    import std.range\
    \ : take, drop;\n    import std.typecons : tuple;\n    import std.math : max;\n\
    \    import std.string : split;\n    import std.typecons : tuple;\n    import\
    \ std.traits : isIntegral;\n    import std.typecons : tuple;\n    import std.traits\
    \ : isIntegral;\n    import std.typecons : tuple;\n    import std.traits : isIntegral;\n\
    \    import std.typecons : tuple;\n    import std.traits : isIntegral;\n    import\
    \ std.typecons : tuple;\n    import std.traits : isIntegral;\n    import std.typecons\
    \ : tuple;\n    import std.traits : isIntegral;\n    import std.typecons : tuple;\n\
    \    import std.traits : isIntegral;\n    import std.typecons : tuple;\n    import\
    \ std.traits : isIntegral;\n    import std.typecons : tuple;\n    import std.traits\
    \ : isIntegral;\n    import std.typecons : tuple;\n    import std.traits : isIntegral;\n\
    \    import std.typecons : tuple;\n    import std.traits : isIntegral;\n    import\
    \ std.typecons : tuple;\n    import std.traits : isIntegral;\n    import std.typecons\
    \ : tuple;\n    import std.traits : isIntegral;\n    import std.typecons : tuple;\n\
    \    import std.traits : isIntegral;\n    import std.typecons : tuple;\n    import\
    \ std.traits : isIntegral;\n    import std.typecons : tuple;\n    import std.traits\
    \ : isIntegral;\n    import std.typecons : tuple;\n    import std.traits : isIntegral;\n\
    \    import std.typecons : tuple;\n    import std.traits : isIntegral;\n    import\
    \ std.typecons : tuple;\n    import std.traits : isIntegral;\n    import std.typecons\
    \ : tuple;\n    import std.traits : isIntegral;\n    import", "{\n    import std.algorithm;\n\
    \    import std.array;\n    import std.conv;\n    import std.range;\n    import\
    \ std.string;\n    import std.typecons;\n    import std.math;\n    auto date_arr\
    \ = date.split(\"-\");\n    if (date_arr.length != 3)\n        return false;\n\
    \    int month = to!int(date_arr[0]);\n    int day = to!int(date_arr[1]);\n  \
    \  int year = to!int(date_arr[2]);\n    if (month < 1 || month > 12)\n       \
    \ return false;\n    if (day < 1 || day > 31)\n        return false;\n    if (month\
    \ == 2)\n    {\n        if (day > 29)\n            return false;\n        if (day\
    \ == 29)\n        {\n            if (year % 4 != 0)\n                return false;\n\
    \            if (year % 100 == 0 && year % 400 != 0)\n                return false;\n\
    \        }\n    }\n    else if (month == 4 || month == 6 || month == 9 || month\
    \ == 11)\n    {\n        if (day > 30)\n            return false;\n    }\n   \
    \ return true;\n}", "{\n    auto parts = split(date, \"-\");\n    if (parts.length\
    \ != 3) return false;\n    int month = to!int(parts[0]);\n    int day = to!int(parts[1]);\n\
    \    int year = to!int(parts[2]);\n    if (month < 1 || month > 12) return false;\n\
    \    if (day < 1) return false;\n    if (month == 2) {\n        if (day > 29)\
    \ return false;\n        if (day == 29) {\n            if (year % 4 != 0) return\
    \ false;\n            if (year % 100 == 0 && year % 400 != 0) return false;\n\
    \        }\n    } else if (month == 4 || month == 6 || month == 9 || month ==\
    \ 11) {\n        if (day > 30) return false;\n    } else {\n        if (day >\
    \ 31) return false;\n    }\n    return true;\n}", "{\n    int[] days = [31, 28,\
    \ 31, 30, 31, 30, 31, 31, 30, 31, 30, 31];\n    string[] date_split = date.split(\"\
    -\");\n    if (date_split.length != 3)\n        return false;\n    int month =\
    \ to!int(date_split[0]);\n    int day = to!int(date_split[1]);\n    int year =\
    \ to!int(date_split[2]);\n    if (month < 1 || month > 12)\n        return false;\n\
    \    if (day < 1 || day > days[month - 1])\n        return false;\n    if (month\
    \ == 2 && day == 29 && !isLeapYear(year))\n        return false;\n    return true;\n\
    }", "{\n    import std.array;\n    import std.conv;\n    import std.math;\n  \
    \  import std.string;\n    import std.typecons;\n    import std.algorithm;\n \
    \   import std.range;\n    import std.stdio;\n    import std.traits;\n    import\
    \ std.typecons;\n    import std.math;\n    import std.range;\n    import std.algorithm;\n\
    \    import std.string;\n    import std.conv;\n    import std.array;\n    import\
    \ std.typecons;\n    import std.math;\n    import std.range;\n    import std.algorithm;\n\
    \    import std.string;\n    import std.conv;\n    import std.array;\n    import\
    \ std.typecons;\n    import std.math;\n    import std.range;\n    import std.algorithm;\n\
    \    import std.string;\n    import std.conv;\n    import std.array;\n    import\
    \ std.typecons;\n    import std.math;\n    import std.range;\n    import std.algorithm;\n\
    \    import std.string;\n    import std.conv;\n    import std.array;\n    import\
    \ std.typecons;\n    import std.math;\n    import std.range;\n    import std.algorithm;\n\
    \    import std.string;\n    import std.conv;\n    import std.array;\n    import\
    \ std.typecons;\n    import std.math;\n    import std.range;\n    import std.algorithm;\n\
    \    import std.string;\n    import std.conv;\n    import std.array;\n    import\
    \ std.typecons;\n    import std.math;\n    import std.range;\n    import std.algorithm;\n\
    \    import std.string;\n    import std.conv;\n    import std.array;\n    import\
    \ std.typecons;\n    import std.math;\n    import std.range;\n    import std.algorithm;\n\
    \    import std.string;\n    import std.conv;\n    import std.array;\n    import\
    \ std.typecons;\n    import std.math;\n    import std.range;\n    import std.algorithm;\n\
    \    import std.", "{\n    int[] months = [31, 28, 31, 30, 31, 30, 31, 31, 30,\
    \ 31, 30, 31];\n    int[] date_arr = date.split(\"-\").map!(a => a.to!int).array;\n\
    \    if (date_arr.length != 3) return false;\n    if (date_arr[0] < 1 || date_arr[0]\
    \ > 12) return false;\n    if (date_arr[1] < 1 || date_arr[1] > months[date_arr[0]\
    \ - 1]) return false;\n    if (date_arr[0] == 2 && date_arr[1] == 29) {\n    \
    \    if (date_arr[2] % 4 != 0) return false;\n        if (date_arr[2] % 100 ==\
    \ 0 && date_arr[2] % 400 != 0) return false;\n    }\n    return true;\n}", "{\n\
    \    auto date_split = date.split(\"-\");\n    if (date_split.length != 3)\n \
    \       return false;\n    int month = to!int(date_split[0]);\n    int day = to!int(date_split[1]);\n\
    \    int year = to!int(date_split[2]);\n    if (month < 1 || month > 12)\n   \
    \     return false;\n    if (day < 1 || day > 31)\n        return false;\n   \
    \ if (month == 2)\n    {\n        if (day > 29)\n            return false;\n \
    \       if (day == 29)\n        {\n            if (year % 4 != 0)\n          \
    \      return false;\n            if (year % 100 == 0 && year % 400 != 0)\n  \
    \              return false;\n        }\n    }\n    else if (month == 4 || month\
    \ == 6 || month == 9 || month == 11)\n    {\n        if (day > 30)\n         \
    \   return false;\n    }\n    return true;\n}", "{\n    if (date.length == 0)\n\
    \        return false;\n    auto date_parts = date.split(\"-\");\n    if (date_parts.length\
    \ != 3)\n        return false;\n    int month = to!int(date_parts[0]);\n    int\
    \ day = to!int(date_parts[1]);\n    int year = to!int(date_parts[2]);\n    if\
    \ (month < 1 || month > 12)\n        return false;\n    if (day < 1 || day > 31)\n\
    \        return false;\n    if (month == 2)\n    {\n        if (day > 29)\n  \
    \          return false;\n        if (day == 29)\n        {\n            if (year\
    \ % 4 != 0)\n                return false;\n            if (year % 100 == 0 &&\
    \ year % 400 != 0)\n                return false;\n        }\n    }\n    else\
    \ if (month == 4 || month == 6 || month == 9 || month == 11)\n    {\n        if\
    \ (day > 30)\n            return false;\n    }\n    return true;\n}", "{\n   \
    \ auto date_tuple = tuple(date.split(\"-\"));\n    if (date_tuple.length != 3)\n\
    \        return false;\n    int day = to!int(date_tuple[1]);\n    int month =\
    \ to!int(date_tuple[0]);\n    int year = to!int(date_tuple[2]);\n    if (day <\
    \ 1 || day > 31)\n        return false;\n    if (month < 1 || month > 12)\n  \
    \      return false;\n    if (year < 1)\n        return false;\n    if (month\
    \ == 2)\n    {\n        if (day > 29)\n            return false;\n        if (day\
    \ == 29)\n        {\n            if (year % 4 != 0)\n                return false;\n\
    \            if (year % 100 == 0 && year % 400 != 0)\n                return false;\n\
    \        }\n    }\n    else if (month == 4 || month == 6 || month == 9 || month\
    \ == 11)\n    {\n        if (day > 30)\n            return false;\n    }\n   \
    \ return true;\n}", "{\n    if(date.length == 0) return false;\n    auto splitted\
    \ = date.split(\"-\");\n    if(splitted.length != 3) return false;\n    int month\
    \ = to!int(splitted[0]);\n    int day = to!int(splitted[1]);\n    int year = to!int(splitted[2]);\n\
    \    if(month < 1 || month > 12) return false;\n    if(day < 1 || day > 31) return\
    \ false;\n    if(month == 2)\n    {\n        if(day > 29) return false;\n    \
    \    if(day == 29)\n        {\n            if(year % 4 != 0) return false;\n \
    \           if(year % 100 == 0 && year % 400 != 0) return false;\n        }\n\
    \    }\n    else if(month == 4 || month == 6 || month == 9 || month == 11)\n \
    \   {\n        if(day > 30) return false;\n    }\n    return true;\n}", "{\n \
    \   import std.algorithm;\n    import std.array;\n    import std.conv;\n    import\
    \ std.range;\n    import std.string;\n    import std.typecons;\n    import std.math;\n\
    \    bool result = true;\n    if (date.length == 0)\n        return false;\n \
    \   auto date_array = date.split(\"-\");\n    if (date_array.length != 3)\n  \
    \      return false;\n    auto month = to!int(date_array[0]);\n    auto day =\
    \ to!int(date_array[1]);\n    auto year = to!int(date_array[2]);\n    if (month\
    \ < 1 || month > 12)\n        return false;\n    if (day < 1 || day > 31)\n  \
    \      return false;\n    if (month == 2)\n    {\n        if (day > 29)\n    \
    \        return false;\n        if (day == 29)\n        {\n            if (year\
    \ % 4 != 0)\n                return false;\n            if (year % 100 == 0 &&\
    \ year % 400 != 0)\n                return false;\n        }\n    }\n    if (month\
    \ == 4 || month == 6 || month == 9 || month == 11)\n    {\n        if (day > 30)\n\
    \            return false;\n    }\n    return result;\n}", "{\n    //split date\
    \ into parts\n    auto parts = split(date, \"-\");\n    //check if parts are valid\n\
    \    if(parts.length != 3)\n        return false;\n    //check if date is valid\n\
    \    if(parts[0].length != 2 || parts[1].length != 2 || parts[2].length != 4)\n\
    \        return false;\n    //check if month is valid\n    if(to!int(parts[0])\
    \ < 1 || to!int(parts[0]) > 12)\n        return false;\n    //check if day is\
    \ valid\n    if(to!int(parts[1]) < 1 || to!int(parts[1]) > 31)\n        return\
    \ false;\n    //check if year is valid\n    if(to!int(parts[2]) < 1)\n       \
    \ return false;\n    //check if day is valid for month\n    if(to!int(parts[0])\
    \ == 2)\n    {\n        if(to!int(parts[1]) > 29)\n            return false;\n\
    \    }\n    else if(to!int(parts[0]) == 4 || to!int(parts[0]) == 6 || to!int(parts[0])\
    \ == 9 || to!int(parts[0]) == 11)\n    {\n        if(to!int(parts[1]) > 30)\n\
    \            return false;\n    }\n    return true;\n}", "{\n    int[] months\
    \ = [31, 28, 31, 30, 31, 30, 31, 31, 30, 31, 30, 31];\n    int[] date_arr = date.split(\"\
    -\").map!(to!int).array;\n    if (date_arr.length != 3) return false;\n    if\
    \ (date_arr[0] < 1 || date_arr[0] > 12) return false;\n    if (date_arr[1] < 1\
    \ || date_arr[1] > months[date_arr[0] - 1]) return false;\n    if (date_arr[0]\
    \ == 2 && date_arr[1] == 29)\n    {\n        if (date_arr[2] % 4 != 0) return\
    \ false;\n        if (date_arr[2] % 100 == 0 && date_arr[2] % 400 != 0) return\
    \ false;\n    }\n    return true;\n}", "{\n    if (date.length == 0)\n       \
    \ return false;\n    auto parts = date.split(\"-\");\n    if (parts.length !=\
    \ 3)\n        return false;\n    int month = to!int(parts[0]);\n    int day =\
    \ to!int(parts[1]);\n    int year = to!int(parts[2]);\n    if (month < 1 || month\
    \ > 12)\n        return false;\n    if (day < 1 || day > 31)\n        return false;\n\
    \    if (month == 2)\n    {\n        if (day > 29)\n            return false;\n\
    \        if (day == 29)\n        {\n            if (year % 4 != 0)\n         \
    \       return false;\n            if (year % 100 == 0 && year % 400 != 0)\n \
    \               return false;\n        }\n    }\n    else if (month == 4 || month\
    \ == 6 || month == 9 || month == 11)\n    {\n        if (day > 30)\n         \
    \   return false;\n    }\n    return true;\n}", "{\n    import std.array;\n  \
    \  import std.conv;\n    import std.algorithm;\n    import std.range;\n    import\
    \ std.string;\n    import std.typecons;\n    import std.math;\n    auto date_split\
    \ = date.split(\"-\");\n    if (date_split.length != 3) return false;\n    auto\
    \ month = to!int(date_split[0]);\n    auto day = to!int(date_split[1]);\n    auto\
    \ year = to!int(date_split[2]);\n    if (month < 1 || month > 12) return false;\n\
    \    if (day < 1 || day > 31) return false;\n    if (month == 2) {\n        if\
    \ (day > 29) return false;\n        if (day == 29) {\n            if (year % 4\
    \ != 0) return false;\n            if (year % 100 == 0 && year % 400 != 0) return\
    \ false;\n        }\n    }\n    if (month == 4 || month == 6 || month == 9 ||\
    \ month == 11) {\n        if (day > 30) return false;\n    }\n    return true;\n\
    }", "{\n    int[] months = [31, 28, 31, 30, 31, 30, 31, 31, 30, 31, 30, 31];\n\
    \    int[] date_arr = date.split(\"-\").map!int.array;\n    if (date_arr.length\
    \ != 3) return false;\n    int month = date_arr[0];\n    int day = date_arr[1];\n\
    \    int year = date_arr[2];\n    if (month < 1 || month > 12) return false;\n\
    \    if (day < 1 || day > months[month - 1]) return false;\n    if (month == 2\
    \ && day == 29 && !isLeapYear(year)) return false;\n    return true;\n}", "{\n\
    \    auto parts = split(date, \"-\");\n    if (parts.length != 3) return false;\n\
    \    auto month = to!int(parts[0]);\n    auto day = to!int(parts[1]);\n    auto\
    \ year = to!int(parts[2]);\n    if (month < 1 || month > 12) return false;\n \
    \   if (day < 1 || day > 31) return false;\n    if (month == 2) {\n        if\
    \ (day > 29) return false;\n        if (day == 29) {\n            if (year % 4\
    \ != 0) return false;\n            if (year % 100 == 0 && year % 400 != 0) return\
    \ false;\n        }\n    } else if (month == 4 || month == 6 || month == 9 ||\
    \ month == 11) {\n        if (day > 30) return false;\n    }\n    return true;\n\
    }", "{\n    import std.algorithm : map;\n    import std.conv : to;\n    import\
    \ std.range : split;\n    import std.string : strip;\n    import std.typecons\
    \ : tuple;\n    import std.math : isNaN;\n    import std.array : array;\n    import\
    \ std.stdio : writeln;\n    import std.range : isInputRange;\n    import std.typecons\
    \ : tuple;\n    import std.typecons : Tuple;\n    import std.typecons : tuple;\n\
    \    import std.typecons : Tuple;\n    import std.typecons : tuple;\n    import\
    \ std.typecons : Tuple;\n    import std.typecons : tuple;\n    import std.typecons\
    \ : Tuple;\n    import std.typecons : tuple;\n    import std.typecons : Tuple;\n\
    \    import std.typecons : tuple;\n    import std.typecons : Tuple;\n    import\
    \ std.typecons : tuple;\n    import std.typecons : Tuple;\n    import std.typecons\
    \ : tuple;\n    import std.typecons : Tuple;\n    import std.typecons : tuple;\n\
    \    import std.typecons : Tuple;\n    import std.typecons : tuple;\n    import\
    \ std.typecons : Tuple;\n    import std.typecons : tuple;\n    import std.typecons\
    \ : Tuple;\n    import std.typecons : tuple;\n    import std.typecons : Tuple;\n\
    \    import std.typecons : tuple;\n    import std.typecons : Tuple;\n    import\
    \ std.typecons : tuple;\n    import std.typecons : Tuple;\n    import std.typecons\
    \ : tuple;\n    import std.typecons : Tuple;\n    import std.typecons : tuple;\n\
    \    import std.typecons : Tuple;\n    import std.typecons : tuple;\n    import\
    \ std.typecons : Tuple;\n    import std.typecons : tuple;\n    import std.typecons\
    \ : Tuple;\n    import std.typecons : tuple;\n    import std.typecons : Tuple;\n\
    \    import std.typecons : tuple;\n    import std.typecons : Tuple;\n", "{\n \
    \   int[] months = [31, 28, 31, 30, 31, 30, 31, 31, 30, 31, 30, 31];\n    int[]\
    \ date_parts = date.split(\"-\").map!(to!int).array;\n    if (date_parts.length\
    \ != 3)\n        return false;\n    int day = date_parts[0];\n    int month =\
    \ date_parts[1];\n    int year = date_parts[2];\n    if (year % 4 == 0 && year\
    \ % 100 != 0 || year % 400 == 0)\n        months[1] = 29;\n    if (month < 1 ||\
    \ month > 12)\n        return false;\n    if (day < 1 || day > months[month -\
    \ 1])\n        return false;\n    return true;\n}", "{\n    auto date_parts =\
    \ date.split(\"-\");\n    if (date_parts.length != 3)\n        return false;\n\
    \    int month = to!int(date_parts[0]);\n    int day = to!int(date_parts[1]);\n\
    \    int year = to!int(date_parts[2]);\n    if (month < 1 || month > 12)\n   \
    \     return false;\n    if (day < 1 || day > 31)\n        return false;\n   \
    \ if (month == 2)\n    {\n        if (day > 29)\n            return false;\n \
    \       if (day == 29)\n        {\n            if (year % 4 != 0)\n          \
    \      return false;\n            if (year % 100 == 0 && year % 400 != 0)\n  \
    \              return false;\n        }\n    }\n    else if (month == 4 || month\
    \ == 6 || month == 9 || month == 11)\n    {\n        if (day > 30)\n         \
    \   return false;\n    }\n    return true;\n}", "{\n    import std.algorithm :\
    \ all;\n    import std.conv : to;\n    import std.range : split;\n    import std.array\
    \ : array;\n    import std.string : strip;\n    import std.typecons : tuple;\n\
    \    import std.math : isNaN;\n    import std.stdio : writeln;\n    import std.format\
    \ : format;\n    import std.traits : isIntegral;\n    import std.typecons : tuple;\n\
    \    import std.array : array;\n    import std.typecons : tuple;\n    import std.array\
    \ : array;\n    import std.typecons : tuple;\n    import std.array : array;\n\
    \    import std.typecons : tuple;\n    import std.array : array;\n    import std.typecons\
    \ : tuple;\n    import std.array : array;\n    import std.typecons : tuple;\n\
    \    import std.array : array;\n    import std.typecons : tuple;\n    import std.array\
    \ : array;\n    import std.typecons : tuple;\n    import std.array : array;\n\
    \    import std.typecons : tuple;\n    import std.array : array;\n    import std.typecons\
    \ : tuple;\n    import std.array : array;\n    import std.typecons : tuple;\n\
    \    import std.array : array;\n    import std.typecons : tuple;\n    import std.array\
    \ : array;\n    import std.typecons : tuple;\n    import std.array : array;\n\
    \    import std.typecons : tuple;\n    import std.array : array;\n    import std.typecons\
    \ : tuple;\n    import std.array : array;\n    import std.typecons : tuple;\n\
    \    import std.array : array;\n    import std.typecons : tuple;\n    import std.array\
    \ : array;\n    import std.typecons : tuple;\n    import std.array : array;\n\
    \    import std.typecons : tuple;\n    import std.array : array;\n    import std.typecons\
    \ : tuple;\n    import std.array : array;\n    import std.typecons : tuple;\n\
    \    import std.array : array;\n    import std.typecons : tuple;\n   ", "{\n \
    \   if (date.length == 0) return false;\n    auto parts = date.split(\"-\");\n\
    \    if (parts.length != 3) return false;\n    int month = to!int(parts[0]);\n\
    \    int day = to!int(parts[1]);\n    int year = to!int(parts[2]);\n    if (month\
    \ < 1 || month > 12) return false;\n    if (day < 1 || day > 31) return false;\n\
    \    if (month == 2)\n    {\n        if (day > 29) return false;\n        if (day\
    \ == 29)\n        {\n            if (year % 4 != 0) return false;\n          \
    \  if (year % 100 == 0 && year % 400 != 0) return false;\n        }\n    }\n \
    \   else if (month == 4 || month == 6 || month == 9 || month == 11)\n    {\n \
    \       if (day > 30) return false;\n    }\n    return true;\n}", "{\n    if (date.length\
    \ == 0)\n        return false;\n    auto date_arr = date.split(\"-\");\n    if\
    \ (date_arr.length != 3)\n        return false;\n    int month = to!int(date_arr[0]);\n\
    \    int day = to!int(date_arr[1]);\n    int year = to!int(date_arr[2]);\n   \
    \ if (year < 0)\n        return false;\n    if (month < 1 || month > 12)\n   \
    \     return false;\n    if (day < 1)\n        return false;\n    if (month ==\
    \ 2)\n    {\n        if (day > 29)\n            return false;\n        if (day\
    \ == 29)\n        {\n            if (year % 4 != 0)\n                return false;\n\
    \            if (year % 100 == 0 && year % 400 != 0)\n                return false;\n\
    \        }\n    }\n    else if (month == 4 || month == 6 || month == 9 || month\
    \ == 11)\n    {\n        if (day > 30)\n            return false;\n    }\n   \
    \ else\n    {\n        if (day > 31)\n            return false;\n    }\n    return\
    \ true;\n}", "{\n    if (date.length == 0) return false;\n    if (date.length\
    \ != 10) return false;\n    if (date[2] != '-' || date[5] != '-') return false;\n\
    \    int month = to!int(date[0..1]);\n    int day = to!int(date[3..4]);\n    int\
    \ year = to!int(date[6..9]);\n    if (month < 1 || month > 12) return false;\n\
    \    if (day < 1 || day > 31) return false;\n    if (month == 2) {\n        if\
    \ (day > 29) return false;\n        if (day == 29) {\n            if (year % 4\
    \ != 0) return false;\n            if (year % 100 == 0 && year % 400 != 0) return\
    \ false;\n        }\n    }\n    if (month == 4 || month == 6 || month == 9 ||\
    \ month == 11) {\n        if (day > 30) return false;\n    }\n    return true;\n\
    }", "{\n    if (date.length == 0) return false;\n    auto date_split = date.split(\"\
    -\");\n    if (date_split.length != 3) return false;\n    auto month = to!int(date_split[0]);\n\
    \    auto day = to!int(date_split[1]);\n    auto year = to!int(date_split[2]);\n\
    \    if (month < 1 || month > 12) return false;\n    if (day < 1 || day > 31)\
    \ return false;\n    if (month == 2) {\n        if (day > 29) return false;\n\
    \        if (day == 29) {\n            if (year % 4 != 0) return false;\n    \
    \        if (year % 100 == 0 && year % 400 != 0) return false;\n        }\n  \
    \  }\n    else if (month == 4 || month == 6 || month == 9 || month == 11) {\n\
    \        if (day > 30) return false;\n    }\n    return true;\n}", "{\n    import\
    \ std.algorithm : map;\n    import std.array : array;\n    import std.conv : to;\n\
    \    import std.range : isInputRange;\n    import std.typecons : tuple;\n    import\
    \ std.math : isNaN;\n    import std.string : split;\n    import std.typecons :\
    \ tuple;\n    import std.traits : isIntegral;\n    import std.typecons : tuple;\n\
    \    import std.traits : isIntegral;\n    import std.array : array;\n    import\
    \ std.range : isInputRange;\n    import std.conv : to;\n    import std.math :\
    \ isNaN;\n    import std.traits : isIntegral;\n    import std.typecons : tuple;\n\
    \    import std.array : array;\n    import std.range : isInputRange;\n    import\
    \ std.conv : to;\n    import std.math : isNaN;\n    import std.traits : isIntegral;\n\
    \    import std.typecons : tuple;\n    import std.array : array;\n    import std.range\
    \ : isInputRange;\n    import std.conv : to;\n    import std.math : isNaN;\n \
    \   import std.traits : isIntegral;\n    import std.typecons : tuple;\n    import\
    \ std.array : array;\n    import std.range : isInputRange;\n    import std.conv\
    \ : to;\n    import std.math : isNaN;\n    import std.traits : isIntegral;\n \
    \   import std.typecons : tuple;\n    import std.array : array;\n    import std.range\
    \ : isInputRange;\n    import std.conv : to;\n    import std.math : isNaN;\n \
    \   import std.traits : isIntegral;\n    import std.typecons : tuple;\n    import\
    \ std.array : array;\n    import std.range : isInputRange;\n    import std.conv\
    \ : to;\n    import std.math : isNaN;\n    import std.traits : isIntegral;\n \
    \   import std.typecons : tuple;\n    import std.array : array;\n    import std.range\
    \ : isInputRange;\n    import std.", "{\n    if (date.length == 0)\n        return\
    \ false;\n    auto date_parts = date.split(\"-\");\n    if (date_parts.length\
    \ != 3)\n        return false;\n    auto month = to!int(date_parts[0]);\n    auto\
    \ day = to!int(date_parts[1]);\n    auto year = to!int(date_parts[2]);\n    if\
    \ (month < 1 || month > 12)\n        return false;\n    if (day < 1 || day > 31)\n\
    \        return false;\n    if (month == 2)\n    {\n        if (day > 29)\n  \
    \          return false;\n        if (day == 29)\n        {\n            if (year\
    \ % 4 != 0)\n                return false;\n            if (year % 100 == 0 &&\
    \ year % 400 != 0)\n                return false;\n        }\n    }\n    else\
    \ if (month == 4 || month == 6 || month == 9 || month == 11)\n    {\n        if\
    \ (day > 30)\n            return false;\n    }\n    return true;\n}", "{\n   \
    \ auto parts = split(date, \"-\");\n    if (parts.length != 3)\n        return\
    \ false;\n    int month = to!int(parts[0]);\n    int day = to!int(parts[1]);\n\
    \    int year = to!int(parts[2]);\n    if (month < 1 || month > 12)\n        return\
    \ false;\n    if (day < 1)\n        return false;\n    if (month == 2)\n    {\n\
    \        if (isLeapYear(year))\n        {\n            if (day > 29)\n       \
    \         return false;\n        }\n        else\n        {\n            if (day\
    \ > 28)\n                return false;\n        }\n    }\n    else if (month ==\
    \ 4 || month == 6 || month == 9 || month == 11)\n    {\n        if (day > 30)\n\
    \            return false;\n    }\n    else\n    {\n        if (day > 31)\n  \
    \          return false;\n    }\n    return true;\n}"]
stop_tokens:
- "\n\n"
- "\nvoid"
- "\nbool"
- "\nint"

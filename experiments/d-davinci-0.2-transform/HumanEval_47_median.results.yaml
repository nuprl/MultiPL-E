language: d
name: HumanEval_47_median
results:
- exit_code: 1
  program: "import std.math;\n/*\nReturn median of elements in the list l.\n    >>>\
    \ median([3L, 1L, 2L, 4L, 5L])\n    3L\n    >>> median([-10L, 4L, 6L, 1000L, 10L,\
    \ 20L])\n    15.0\n    \n*/\nfloat median(long[] l) \n{\n    long[] sorted = l.dup;\n\
    \    sorted.sort;\n    if (sorted.length % 2 == 1)\n        return sorted[sorted.length\
    \ / 2];\n    else\n        return (sorted[sorted.length / 2 - 1] + sorted[sorted.length\
    \ / 2]) / 2.0;\n}\nunittest\n{\n    alias candidate = median;\n\n    assert(candidate([3L,\
    \ 1L, 2L, 4L, 5L]) == 3L);\n    assert(candidate([-10L, 4L, 6L, 1000L, 10L, 20L])\
    \ == 8.0);\n    assert(candidate([5L]) == 5L);\n    assert(candidate([6L, 5L])\
    \ == 5.5);\n    assert(candidate([8L, 1L, 3L, 9L, 9L, 2L, 7L]) == 7L);\n}\nvoid\
    \ main(){}"
  status: SyntaxError
  stderr: '/tmp/tmpx89ezo5q.d(13): Error: no property `sort` for type `long[]`

    Failed: ["dmd", "-unittest", "-v", "-o-", "/tmp/tmpx89ezo5q.d", "-I/tmp"]

    '
  stdout: ''
  timestamp: 1660160691
- exit_code: 1
  program: "import std.math;\n/*\nReturn median of elements in the list l.\n    >>>\
    \ median([3L, 1L, 2L, 4L, 5L])\n    3L\n    >>> median([-10L, 4L, 6L, 1000L, 10L,\
    \ 20L])\n    15.0\n    \n*/\nfloat median(long[] l) \n{\n    long[] temp = l.dup;\n\
    \    temp.sort;\n    int len = temp.length;\n    if (len % 2 == 0)\n    {\n  \
    \      return (temp[len / 2] + temp[len / 2 - 1]) / 2.0;\n    }\n    else\n  \
    \  {\n        return temp[len / 2];\n    }\n}\nunittest\n{\n    alias candidate\
    \ = median;\n\n    assert(candidate([3L, 1L, 2L, 4L, 5L]) == 3L);\n    assert(candidate([-10L,\
    \ 4L, 6L, 1000L, 10L, 20L]) == 8.0);\n    assert(candidate([5L]) == 5L);\n   \
    \ assert(candidate([6L, 5L]) == 5.5);\n    assert(candidate([8L, 1L, 3L, 9L, 9L,\
    \ 2L, 7L]) == 7L);\n}\nvoid main(){}"
  status: SyntaxError
  stderr: '/tmp/tmp_ada7al4.d(13): Error: no property `sort` for type `long[]`

    /tmp/tmp_ada7al4.d(14): Error: cannot implicitly convert expression `temp.length`
    of type `ulong` to `int`

    Failed: ["dmd", "-unittest", "-v", "-o-", "/tmp/tmp_ada7al4.d", "-I/tmp"]

    '
  stdout: ''
  timestamp: 1660160691
- exit_code: 1
  program: "import std.math;\n/*\nReturn median of elements in the list l.\n    >>>\
    \ median([3L, 1L, 2L, 4L, 5L])\n    3L\n    >>> median([-10L, 4L, 6L, 1000L, 10L,\
    \ 20L])\n    15.0\n    \n*/\nfloat median(long[] l) \n{\n    long[] sorted = l.dup;\n\
    \    sorted.sort;\n    if (sorted.length % 2 == 1)\n        return sorted[sorted.length\
    \ / 2];\n    else\n        return (sorted[sorted.length / 2 - 1] + sorted[sorted.length\
    \ / 2]) / 2.0;\n}\nunittest\n{\n    alias candidate = median;\n\n    assert(candidate([3L,\
    \ 1L, 2L, 4L, 5L]) == 3L);\n    assert(candidate([-10L, 4L, 6L, 1000L, 10L, 20L])\
    \ == 8.0);\n    assert(candidate([5L]) == 5L);\n    assert(candidate([6L, 5L])\
    \ == 5.5);\n    assert(candidate([8L, 1L, 3L, 9L, 9L, 2L, 7L]) == 7L);\n}\nvoid\
    \ main(){}"
  status: SyntaxError
  stderr: '/tmp/tmpx89ezo5q.d(13): Error: no property `sort` for type `long[]`

    Failed: ["dmd", "-unittest", "-v", "-o-", "/tmp/tmpx89ezo5q.d", "-I/tmp"]

    '
  stdout: ''
  timestamp: 1660160691
- exit_code: 1
  program: "import std.math;\n/*\nReturn median of elements in the list l.\n    >>>\
    \ median([3L, 1L, 2L, 4L, 5L])\n    3L\n    >>> median([-10L, 4L, 6L, 1000L, 10L,\
    \ 20L])\n    15.0\n    \n*/\nfloat median(long[] l) \n{\n    long[] sorted = l.dup;\n\
    \    sorted.sort;\n    if (sorted.length % 2 == 1) \n    {\n        return sorted[sorted.length\
    \ / 2];\n    } \n    else \n    {\n        return (sorted[sorted.length / 2 -\
    \ 1] + sorted[sorted.length / 2]) / 2.0;\n    }\n}\nunittest\n{\n    alias candidate\
    \ = median;\n\n    assert(candidate([3L, 1L, 2L, 4L, 5L]) == 3L);\n    assert(candidate([-10L,\
    \ 4L, 6L, 1000L, 10L, 20L]) == 8.0);\n    assert(candidate([5L]) == 5L);\n   \
    \ assert(candidate([6L, 5L]) == 5.5);\n    assert(candidate([8L, 1L, 3L, 9L, 9L,\
    \ 2L, 7L]) == 7L);\n}\nvoid main(){}"
  status: SyntaxError
  stderr: '/tmp/tmp14nivz02.d(13): Error: no property `sort` for type `long[]`

    Failed: ["dmd", "-unittest", "-v", "-o-", "/tmp/tmp14nivz02.d", "-I/tmp"]

    '
  stdout: ''
  timestamp: 1660160691
- exit_code: 1
  program: "import std.math;\n/*\nReturn median of elements in the list l.\n    >>>\
    \ median([3L, 1L, 2L, 4L, 5L])\n    3L\n    >>> median([-10L, 4L, 6L, 1000L, 10L,\
    \ 20L])\n    15.0\n    \n*/\nfloat median(long[] l) \n{\n    long[] temp = l.dup;\n\
    \    temp.sort;\n    int len = temp.length;\n    if (len % 2 == 0) \n    {\n \
    \       return (temp[len / 2 - 1] + temp[len / 2]) / 2.0;\n    } \n    else \n\
    \    {\n        return temp[len / 2];\n    }\n}\nunittest\n{\n    alias candidate\
    \ = median;\n\n    assert(candidate([3L, 1L, 2L, 4L, 5L]) == 3L);\n    assert(candidate([-10L,\
    \ 4L, 6L, 1000L, 10L, 20L]) == 8.0);\n    assert(candidate([5L]) == 5L);\n   \
    \ assert(candidate([6L, 5L]) == 5.5);\n    assert(candidate([8L, 1L, 3L, 9L, 9L,\
    \ 2L, 7L]) == 7L);\n}\nvoid main(){}"
  status: SyntaxError
  stderr: '/tmp/tmpk5qho0l8.d(13): Error: no property `sort` for type `long[]`

    /tmp/tmpk5qho0l8.d(14): Error: cannot implicitly convert expression `temp.length`
    of type `ulong` to `int`

    Failed: ["dmd", "-unittest", "-v", "-o-", "/tmp/tmpk5qho0l8.d", "-I/tmp"]

    '
  stdout: ''
  timestamp: 1660160691
- exit_code: 1
  program: "import std.math;\n/*\nReturn median of elements in the list l.\n    >>>\
    \ median([3L, 1L, 2L, 4L, 5L])\n    3L\n    >>> median([-10L, 4L, 6L, 1000L, 10L,\
    \ 20L])\n    15.0\n    \n*/\nfloat median(long[] l) \n{\n    int n = l.length;\n\
    \    if (n == 0) \n    {\n        return 0.0;\n    }\n    else if (n == 1) \n\
    \    {\n        return l[0];\n    }\n    else if (n == 2) \n    {\n        return\
    \ (l[0] + l[1]) / 2.0;\n    }\n    else \n    {\n        long[] l2 = l[0..n];\n\
    \        sort(l2);\n        if (n % 2 == 0) \n        {\n            return (l2[n\
    \ / 2 - 1] + l2[n / 2]) / 2.0;\n        }\n        else \n        {\n        \
    \    return l2[n / 2];\n        }\n    }\n}\nunittest\n{\n    alias candidate\
    \ = median;\n\n    assert(candidate([3L, 1L, 2L, 4L, 5L]) == 3L);\n    assert(candidate([-10L,\
    \ 4L, 6L, 1000L, 10L, 20L]) == 8.0);\n    assert(candidate([5L]) == 5L);\n   \
    \ assert(candidate([6L, 5L]) == 5.5);\n    assert(candidate([8L, 1L, 3L, 9L, 9L,\
    \ 2L, 7L]) == 7L);\n}\nvoid main(){}"
  status: SyntaxError
  stderr: '/tmp/tmp9_lko459.d(12): Error: cannot implicitly convert expression `l.length`
    of type `ulong` to `int`

    /tmp/tmp9_lko459.d(28): Error: undefined identifier `sort`, did you mean function
    `sqrt`?

    Failed: ["dmd", "-unittest", "-v", "-o-", "/tmp/tmp9_lko459.d", "-I/tmp"]

    '
  stdout: ''
  timestamp: 1660160691
- exit_code: 1
  program: "import std.math;\n/*\nReturn median of elements in the list l.\n    >>>\
    \ median([3L, 1L, 2L, 4L, 5L])\n    3L\n    >>> median([-10L, 4L, 6L, 1000L, 10L,\
    \ 20L])\n    15.0\n    \n*/\nfloat median(long[] l) \n{\n    long[] sorted = l.sort();\n\
    \    int mid = sorted.length / 2;\n    if (sorted.length % 2 == 0)\n    {\n  \
    \      return (sorted[mid] + sorted[mid - 1]) / 2.0;\n    }\n    else\n    {\n\
    \        return sorted[mid];\n    }\n}\nunittest\n{\n    alias candidate = median;\n\
    \n    assert(candidate([3L, 1L, 2L, 4L, 5L]) == 3L);\n    assert(candidate([-10L,\
    \ 4L, 6L, 1000L, 10L, 20L]) == 8.0);\n    assert(candidate([5L]) == 5L);\n   \
    \ assert(candidate([6L, 5L]) == 5.5);\n    assert(candidate([8L, 1L, 3L, 9L, 9L,\
    \ 2L, 7L]) == 7L);\n}\nvoid main(){}"
  status: SyntaxError
  stderr: '/tmp/tmp0ohs6lat.d(12): Error: no property `sort` for type `long[]`

    /tmp/tmp0ohs6lat.d(13): Error: cannot implicitly convert expression `sorted.length
    / 2LU` of type `ulong` to `int`

    Failed: ["dmd", "-unittest", "-v", "-o-", "/tmp/tmp0ohs6lat.d", "-I/tmp"]

    '
  stdout: ''
  timestamp: 1660160691
- exit_code: 1
  program: "import std.math;\n/*\nReturn median of elements in the list l.\n    >>>\
    \ median([3L, 1L, 2L, 4L, 5L])\n    3L\n    >>> median([-10L, 4L, 6L, 1000L, 10L,\
    \ 20L])\n    15.0\n    \n*/\nfloat median(long[] l) \n{\n    long[] sorted = l.dup;\n\
    \    sorted.sort;\n    int len = sorted.length;\n    if (len % 2 == 0) \n    {\n\
    \        return (sorted[len / 2 - 1] + sorted[len / 2]) / 2.0;\n    }\n    else\
    \ \n    {\n        return sorted[len / 2];\n    }\n}\nunittest\n{\n    alias candidate\
    \ = median;\n\n    assert(candidate([3L, 1L, 2L, 4L, 5L]) == 3L);\n    assert(candidate([-10L,\
    \ 4L, 6L, 1000L, 10L, 20L]) == 8.0);\n    assert(candidate([5L]) == 5L);\n   \
    \ assert(candidate([6L, 5L]) == 5.5);\n    assert(candidate([8L, 1L, 3L, 9L, 9L,\
    \ 2L, 7L]) == 7L);\n}\nvoid main(){}"
  status: SyntaxError
  stderr: '/tmp/tmphi_a8gcb.d(13): Error: no property `sort` for type `long[]`

    /tmp/tmphi_a8gcb.d(14): Error: cannot implicitly convert expression `sorted.length`
    of type `ulong` to `int`

    Failed: ["dmd", "-unittest", "-v", "-o-", "/tmp/tmphi_a8gcb.d", "-I/tmp"]

    '
  stdout: ''
  timestamp: 1660160691
- exit_code: 1
  program: "import std.math;\n/*\nReturn median of elements in the list l.\n    >>>\
    \ median([3L, 1L, 2L, 4L, 5L])\n    3L\n    >>> median([-10L, 4L, 6L, 1000L, 10L,\
    \ 20L])\n    15.0\n    \n*/\nfloat median(long[] l) \n{\n    l.sort();\n    int\
    \ n = l.length;\n    if (n % 2 == 1)\n        return l[n / 2];\n    else\n   \
    \     return (l[n / 2 - 1] + l[n / 2]) / 2.0;\n}\nunittest\n{\n    alias candidate\
    \ = median;\n\n    assert(candidate([3L, 1L, 2L, 4L, 5L]) == 3L);\n    assert(candidate([-10L,\
    \ 4L, 6L, 1000L, 10L, 20L]) == 8.0);\n    assert(candidate([5L]) == 5L);\n   \
    \ assert(candidate([6L, 5L]) == 5.5);\n    assert(candidate([8L, 1L, 3L, 9L, 9L,\
    \ 2L, 7L]) == 7L);\n}\nvoid main(){}"
  status: SyntaxError
  stderr: '/tmp/tmp73xq321a.d(12): Error: no property `sort` for type `long[]`

    /tmp/tmp73xq321a.d(13): Error: cannot implicitly convert expression `l.length`
    of type `ulong` to `int`

    Failed: ["dmd", "-unittest", "-v", "-o-", "/tmp/tmp73xq321a.d", "-I/tmp"]

    '
  stdout: ''
  timestamp: 1660160691
- exit_code: 1
  program: "import std.math;\n/*\nReturn median of elements in the list l.\n    >>>\
    \ median([3L, 1L, 2L, 4L, 5L])\n    3L\n    >>> median([-10L, 4L, 6L, 1000L, 10L,\
    \ 20L])\n    15.0\n    \n*/\nfloat median(long[] l) \n{\n    long[] sorted = l.dup.sort;\n\
    \    int mid = sorted.length / 2;\n    if (sorted.length % 2 == 0)\n        return\
    \ (sorted[mid - 1] + sorted[mid]) / 2.0;\n    else\n        return sorted[mid];\n\
    }\nunittest\n{\n    alias candidate = median;\n\n    assert(candidate([3L, 1L,\
    \ 2L, 4L, 5L]) == 3L);\n    assert(candidate([-10L, 4L, 6L, 1000L, 10L, 20L])\
    \ == 8.0);\n    assert(candidate([5L]) == 5L);\n    assert(candidate([6L, 5L])\
    \ == 5.5);\n    assert(candidate([8L, 1L, 3L, 9L, 9L, 2L, 7L]) == 7L);\n}\nvoid\
    \ main(){}"
  status: SyntaxError
  stderr: '/tmp/tmp1m75ls0r.d(12): Error: no property `sort` for type `long[]`

    /tmp/tmp1m75ls0r.d(13): Error: cannot implicitly convert expression `sorted.length
    / 2LU` of type `ulong` to `int`

    Failed: ["dmd", "-unittest", "-v", "-o-", "/tmp/tmp1m75ls0r.d", "-I/tmp"]

    '
  stdout: ''
  timestamp: 1660160691
- exit_code: 1
  program: "import std.math;\n/*\nReturn median of elements in the list l.\n    >>>\
    \ median([3L, 1L, 2L, 4L, 5L])\n    3L\n    >>> median([-10L, 4L, 6L, 1000L, 10L,\
    \ 20L])\n    15.0\n    \n*/\nfloat median(long[] l) \n{\n    int n = l.length;\n\
    \    if (n == 0) \n    {\n        return 0.0;\n    }\n    if (n == 1) \n    {\n\
    \        return l[0];\n    }\n    sort(l);\n    if (n % 2 == 0) \n    {\n    \
    \    return (l[n / 2 - 1] + l[n / 2]) / 2.0;\n    }\n    else \n    {\n      \
    \  return l[n / 2];\n    }\n}\nunittest\n{\n    alias candidate = median;\n\n\
    \    assert(candidate([3L, 1L, 2L, 4L, 5L]) == 3L);\n    assert(candidate([-10L,\
    \ 4L, 6L, 1000L, 10L, 20L]) == 8.0);\n    assert(candidate([5L]) == 5L);\n   \
    \ assert(candidate([6L, 5L]) == 5.5);\n    assert(candidate([8L, 1L, 3L, 9L, 9L,\
    \ 2L, 7L]) == 7L);\n}\nvoid main(){}"
  status: SyntaxError
  stderr: '/tmp/tmp6l24y0l7.d(12): Error: cannot implicitly convert expression `l.length`
    of type `ulong` to `int`

    /tmp/tmp6l24y0l7.d(21): Error: undefined identifier `sort`, did you mean function
    `sqrt`?

    Failed: ["dmd", "-unittest", "-v", "-o-", "/tmp/tmp6l24y0l7.d", "-I/tmp"]

    '
  stdout: ''
  timestamp: 1660160691
- exit_code: 1
  program: "import std.math;\n/*\nReturn median of elements in the list l.\n    >>>\
    \ median([3L, 1L, 2L, 4L, 5L])\n    3L\n    >>> median([-10L, 4L, 6L, 1000L, 10L,\
    \ 20L])\n    15.0\n    \n*/\nfloat median(long[] l) \n{\n    long[] sorted = l.dup;\n\
    \    sorted.sort;\n    if (sorted.length % 2 == 1) \n    {\n        return sorted[sorted.length\
    \ / 2];\n    }\n    else \n    {\n        return (sorted[sorted.length / 2 - 1]\
    \ + sorted[sorted.length / 2]) / 2.0;\n    }\n}\nunittest\n{\n    alias candidate\
    \ = median;\n\n    assert(candidate([3L, 1L, 2L, 4L, 5L]) == 3L);\n    assert(candidate([-10L,\
    \ 4L, 6L, 1000L, 10L, 20L]) == 8.0);\n    assert(candidate([5L]) == 5L);\n   \
    \ assert(candidate([6L, 5L]) == 5.5);\n    assert(candidate([8L, 1L, 3L, 9L, 9L,\
    \ 2L, 7L]) == 7L);\n}\nvoid main(){}"
  status: SyntaxError
  stderr: '/tmp/tmptqh64tlm.d(13): Error: no property `sort` for type `long[]`

    Failed: ["dmd", "-unittest", "-v", "-o-", "/tmp/tmptqh64tlm.d", "-I/tmp"]

    '
  stdout: ''
  timestamp: 1660160691
- exit_code: 1
  program: "import std.math;\n/*\nReturn median of elements in the list l.\n    >>>\
    \ median([3L, 1L, 2L, 4L, 5L])\n    3L\n    >>> median([-10L, 4L, 6L, 1000L, 10L,\
    \ 20L])\n    15.0\n    \n*/\nfloat median(long[] l) \n{\n    long[] sorted = l.dup;\n\
    \    sorted.sort;\n    int n = sorted.length;\n    if (n % 2 == 1)\n        return\
    \ sorted[n / 2];\n    else\n        return (sorted[n / 2 - 1] + sorted[n / 2])\
    \ / 2.0;\n}\nunittest\n{\n    alias candidate = median;\n\n    assert(candidate([3L,\
    \ 1L, 2L, 4L, 5L]) == 3L);\n    assert(candidate([-10L, 4L, 6L, 1000L, 10L, 20L])\
    \ == 8.0);\n    assert(candidate([5L]) == 5L);\n    assert(candidate([6L, 5L])\
    \ == 5.5);\n    assert(candidate([8L, 1L, 3L, 9L, 9L, 2L, 7L]) == 7L);\n}\nvoid\
    \ main(){}"
  status: SyntaxError
  stderr: '/tmp/tmpwnuehx69.d(13): Error: no property `sort` for type `long[]`

    /tmp/tmpwnuehx69.d(14): Error: cannot implicitly convert expression `sorted.length`
    of type `ulong` to `int`

    Failed: ["dmd", "-unittest", "-v", "-o-", "/tmp/tmpwnuehx69.d", "-I/tmp"]

    '
  stdout: ''
  timestamp: 1660160691
- exit_code: 1
  program: "import std.math;\n/*\nReturn median of elements in the list l.\n    >>>\
    \ median([3L, 1L, 2L, 4L, 5L])\n    3L\n    >>> median([-10L, 4L, 6L, 1000L, 10L,\
    \ 20L])\n    15.0\n    \n*/\nfloat median(long[] l) \n{\n    long[] sorted = l.dup;\n\
    \    sorted.sort;\n    if (sorted.length % 2 == 1)\n    {\n        return sorted[sorted.length\
    \ / 2];\n    }\n    else\n    {\n        return (sorted[sorted.length / 2 - 1]\
    \ + sorted[sorted.length / 2]) / 2.0;\n    }\n}\nunittest\n{\n    alias candidate\
    \ = median;\n\n    assert(candidate([3L, 1L, 2L, 4L, 5L]) == 3L);\n    assert(candidate([-10L,\
    \ 4L, 6L, 1000L, 10L, 20L]) == 8.0);\n    assert(candidate([5L]) == 5L);\n   \
    \ assert(candidate([6L, 5L]) == 5.5);\n    assert(candidate([8L, 1L, 3L, 9L, 9L,\
    \ 2L, 7L]) == 7L);\n}\nvoid main(){}"
  status: SyntaxError
  stderr: '/tmp/tmp87rzp2qr.d(13): Error: no property `sort` for type `long[]`

    Failed: ["dmd", "-unittest", "-v", "-o-", "/tmp/tmp87rzp2qr.d", "-I/tmp"]

    '
  stdout: ''
  timestamp: 1660160691
- exit_code: 1
  program: "import std.math;\n/*\nReturn median of elements in the list l.\n    >>>\
    \ median([3L, 1L, 2L, 4L, 5L])\n    3L\n    >>> median([-10L, 4L, 6L, 1000L, 10L,\
    \ 20L])\n    15.0\n    \n*/\nfloat median(long[] l) \n{\n    long[] sorted = l.dup;\n\
    \    sorted.sort;\n    if (sorted.length % 2 == 1)\n        return sorted[sorted.length\
    \ / 2];\n    else\n        return (sorted[sorted.length / 2 - 1] + sorted[sorted.length\
    \ / 2]) / 2.0;\n}\nunittest\n{\n    alias candidate = median;\n\n    assert(candidate([3L,\
    \ 1L, 2L, 4L, 5L]) == 3L);\n    assert(candidate([-10L, 4L, 6L, 1000L, 10L, 20L])\
    \ == 8.0);\n    assert(candidate([5L]) == 5L);\n    assert(candidate([6L, 5L])\
    \ == 5.5);\n    assert(candidate([8L, 1L, 3L, 9L, 9L, 2L, 7L]) == 7L);\n}\nvoid\
    \ main(){}"
  status: SyntaxError
  stderr: '/tmp/tmpx89ezo5q.d(13): Error: no property `sort` for type `long[]`

    Failed: ["dmd", "-unittest", "-v", "-o-", "/tmp/tmpx89ezo5q.d", "-I/tmp"]

    '
  stdout: ''
  timestamp: 1660160691
- exit_code: 1
  program: "import std.math;\n/*\nReturn median of elements in the list l.\n    >>>\
    \ median([3L, 1L, 2L, 4L, 5L])\n    3L\n    >>> median([-10L, 4L, 6L, 1000L, 10L,\
    \ 20L])\n    15.0\n    \n*/\nfloat median(long[] l) \n{\n    long[] sorted = sort(l);\n\
    \    int len = l.length;\n    if (len % 2 == 1)\n    {\n        return sorted[len\
    \ / 2];\n    }\n    else\n    {\n        return (sorted[len / 2 - 1] + sorted[len\
    \ / 2]) / 2.0;\n    }\n}\nunittest\n{\n    alias candidate = median;\n\n    assert(candidate([3L,\
    \ 1L, 2L, 4L, 5L]) == 3L);\n    assert(candidate([-10L, 4L, 6L, 1000L, 10L, 20L])\
    \ == 8.0);\n    assert(candidate([5L]) == 5L);\n    assert(candidate([6L, 5L])\
    \ == 5.5);\n    assert(candidate([8L, 1L, 3L, 9L, 9L, 2L, 7L]) == 7L);\n}\nvoid\
    \ main(){}"
  status: SyntaxError
  stderr: '/tmp/tmpi1yjfnx_.d(12): Error: undefined identifier `sort`, did you mean
    function `sqrt`?

    /tmp/tmpi1yjfnx_.d(13): Error: cannot implicitly convert expression `l.length`
    of type `ulong` to `int`

    Failed: ["dmd", "-unittest", "-v", "-o-", "/tmp/tmpi1yjfnx_.d", "-I/tmp"]

    '
  stdout: ''
  timestamp: 1660160691
- exit_code: 1
  program: "import std.math;\n/*\nReturn median of elements in the list l.\n    >>>\
    \ median([3L, 1L, 2L, 4L, 5L])\n    3L\n    >>> median([-10L, 4L, 6L, 1000L, 10L,\
    \ 20L])\n    15.0\n    \n*/\nfloat median(long[] l) \n{\n    long[] sorted = l.dup;\n\
    \    sorted.sort;\n    if (sorted.length % 2 == 1)\n        return sorted[sorted.length\
    \ / 2];\n    else\n        return (sorted[sorted.length / 2 - 1] + sorted[sorted.length\
    \ / 2]) / 2.0;\n}\nunittest\n{\n    alias candidate = median;\n\n    assert(candidate([3L,\
    \ 1L, 2L, 4L, 5L]) == 3L);\n    assert(candidate([-10L, 4L, 6L, 1000L, 10L, 20L])\
    \ == 8.0);\n    assert(candidate([5L]) == 5L);\n    assert(candidate([6L, 5L])\
    \ == 5.5);\n    assert(candidate([8L, 1L, 3L, 9L, 9L, 2L, 7L]) == 7L);\n}\nvoid\
    \ main(){}"
  status: SyntaxError
  stderr: '/tmp/tmpx89ezo5q.d(13): Error: no property `sort` for type `long[]`

    Failed: ["dmd", "-unittest", "-v", "-o-", "/tmp/tmpx89ezo5q.d", "-I/tmp"]

    '
  stdout: ''
  timestamp: 1660160691
- exit_code: 1
  program: "import std.math;\n/*\nReturn median of elements in the list l.\n    >>>\
    \ median([3L, 1L, 2L, 4L, 5L])\n    3L\n    >>> median([-10L, 4L, 6L, 1000L, 10L,\
    \ 20L])\n    15.0\n    \n*/\nfloat median(long[] l) \n{\n    long[] temp = l.dup;\n\
    \    temp.sort;\n    int n = temp.length;\n    if (n % 2 == 0)\n    {\n      \
    \  return (temp[n/2] + temp[n/2-1])/2.0;\n    }\n    else\n    {\n        return\
    \ temp[n/2];\n    }\n}\nunittest\n{\n    alias candidate = median;\n\n    assert(candidate([3L,\
    \ 1L, 2L, 4L, 5L]) == 3L);\n    assert(candidate([-10L, 4L, 6L, 1000L, 10L, 20L])\
    \ == 8.0);\n    assert(candidate([5L]) == 5L);\n    assert(candidate([6L, 5L])\
    \ == 5.5);\n    assert(candidate([8L, 1L, 3L, 9L, 9L, 2L, 7L]) == 7L);\n}\nvoid\
    \ main(){}"
  status: SyntaxError
  stderr: '/tmp/tmp28ivz0b5.d(13): Error: no property `sort` for type `long[]`

    /tmp/tmp28ivz0b5.d(14): Error: cannot implicitly convert expression `temp.length`
    of type `ulong` to `int`

    Failed: ["dmd", "-unittest", "-v", "-o-", "/tmp/tmp28ivz0b5.d", "-I/tmp"]

    '
  stdout: ''
  timestamp: 1660160691
- exit_code: 1
  program: "import std.math;\n/*\nReturn median of elements in the list l.\n    >>>\
    \ median([3L, 1L, 2L, 4L, 5L])\n    3L\n    >>> median([-10L, 4L, 6L, 1000L, 10L,\
    \ 20L])\n    15.0\n    \n*/\nfloat median(long[] l) \n{\n    long[] l2 = l.dup;\n\
    \    l2.sort;\n    int len = l2.length;\n    if (len % 2 == 0) \n    {\n     \
    \   return (l2[len / 2 - 1] + l2[len / 2]) / 2.0;\n    } \n    else \n    {\n\
    \        return l2[len / 2];\n    }\n}\nunittest\n{\n    alias candidate = median;\n\
    \n    assert(candidate([3L, 1L, 2L, 4L, 5L]) == 3L);\n    assert(candidate([-10L,\
    \ 4L, 6L, 1000L, 10L, 20L]) == 8.0);\n    assert(candidate([5L]) == 5L);\n   \
    \ assert(candidate([6L, 5L]) == 5.5);\n    assert(candidate([8L, 1L, 3L, 9L, 9L,\
    \ 2L, 7L]) == 7L);\n}\nvoid main(){}"
  status: SyntaxError
  stderr: '/tmp/tmpyt23gca_.d(13): Error: no property `sort` for type `long[]`

    /tmp/tmpyt23gca_.d(14): Error: cannot implicitly convert expression `l2.length`
    of type `ulong` to `int`

    Failed: ["dmd", "-unittest", "-v", "-o-", "/tmp/tmpyt23gca_.d", "-I/tmp"]

    '
  stdout: ''
  timestamp: 1660160691
- exit_code: 1
  program: "import std.math;\n/*\nReturn median of elements in the list l.\n    >>>\
    \ median([3L, 1L, 2L, 4L, 5L])\n    3L\n    >>> median([-10L, 4L, 6L, 1000L, 10L,\
    \ 20L])\n    15.0\n    \n*/\nfloat median(long[] l) \n{\n    long[] sorted = l.dup;\n\
    \    sorted.sort;\n    int n = sorted.length;\n    if (n % 2 == 1)\n        return\
    \ sorted[n / 2];\n    else\n        return (sorted[n / 2 - 1] + sorted[n / 2])\
    \ / 2.0;\n}\nunittest\n{\n    alias candidate = median;\n\n    assert(candidate([3L,\
    \ 1L, 2L, 4L, 5L]) == 3L);\n    assert(candidate([-10L, 4L, 6L, 1000L, 10L, 20L])\
    \ == 8.0);\n    assert(candidate([5L]) == 5L);\n    assert(candidate([6L, 5L])\
    \ == 5.5);\n    assert(candidate([8L, 1L, 3L, 9L, 9L, 2L, 7L]) == 7L);\n}\nvoid\
    \ main(){}"
  status: SyntaxError
  stderr: '/tmp/tmpwnuehx69.d(13): Error: no property `sort` for type `long[]`

    /tmp/tmpwnuehx69.d(14): Error: cannot implicitly convert expression `sorted.length`
    of type `ulong` to `int`

    Failed: ["dmd", "-unittest", "-v", "-o-", "/tmp/tmpwnuehx69.d", "-I/tmp"]

    '
  stdout: ''
  timestamp: 1660160691
- exit_code: 1
  program: "import std.math;\n/*\nReturn median of elements in the list l.\n    >>>\
    \ median([3L, 1L, 2L, 4L, 5L])\n    3L\n    >>> median([-10L, 4L, 6L, 1000L, 10L,\
    \ 20L])\n    15.0\n    \n*/\nfloat median(long[] l) \n{\n    long[] sorted = l.dup;\n\
    \    sorted.sort;\n    if (sorted.length % 2 == 1) \n    {\n        return sorted[sorted.length\
    \ / 2];\n    } \n    else \n    {\n        return (sorted[sorted.length / 2 -\
    \ 1] + sorted[sorted.length / 2]) / 2.0;\n    }\n}\nunittest\n{\n    alias candidate\
    \ = median;\n\n    assert(candidate([3L, 1L, 2L, 4L, 5L]) == 3L);\n    assert(candidate([-10L,\
    \ 4L, 6L, 1000L, 10L, 20L]) == 8.0);\n    assert(candidate([5L]) == 5L);\n   \
    \ assert(candidate([6L, 5L]) == 5.5);\n    assert(candidate([8L, 1L, 3L, 9L, 9L,\
    \ 2L, 7L]) == 7L);\n}\nvoid main(){}"
  status: SyntaxError
  stderr: '/tmp/tmp14nivz02.d(13): Error: no property `sort` for type `long[]`

    Failed: ["dmd", "-unittest", "-v", "-o-", "/tmp/tmp14nivz02.d", "-I/tmp"]

    '
  stdout: ''
  timestamp: 1660160691
- exit_code: 1
  program: "import std.math;\n/*\nReturn median of elements in the list l.\n    >>>\
    \ median([3L, 1L, 2L, 4L, 5L])\n    3L\n    >>> median([-10L, 4L, 6L, 1000L, 10L,\
    \ 20L])\n    15.0\n    \n*/\nfloat median(long[] l) \n{\n    long[] sorted = l.dup;\n\
    \    sorted.sort;\n    int n = sorted.length;\n    if (n % 2 == 1) \n    {\n \
    \       return sorted[n / 2];\n    } \n    else \n    {\n        return (sorted[n\
    \ / 2 - 1] + sorted[n / 2]) / 2.0;\n    }\n}\nunittest\n{\n    alias candidate\
    \ = median;\n\n    assert(candidate([3L, 1L, 2L, 4L, 5L]) == 3L);\n    assert(candidate([-10L,\
    \ 4L, 6L, 1000L, 10L, 20L]) == 8.0);\n    assert(candidate([5L]) == 5L);\n   \
    \ assert(candidate([6L, 5L]) == 5.5);\n    assert(candidate([8L, 1L, 3L, 9L, 9L,\
    \ 2L, 7L]) == 7L);\n}\nvoid main(){}"
  status: SyntaxError
  stderr: '/tmp/tmp6g5nvd39.d(13): Error: no property `sort` for type `long[]`

    /tmp/tmp6g5nvd39.d(14): Error: cannot implicitly convert expression `sorted.length`
    of type `ulong` to `int`

    Failed: ["dmd", "-unittest", "-v", "-o-", "/tmp/tmp6g5nvd39.d", "-I/tmp"]

    '
  stdout: ''
  timestamp: 1660160691
- exit_code: 1
  program: "import std.math;\n/*\nReturn median of elements in the list l.\n    >>>\
    \ median([3L, 1L, 2L, 4L, 5L])\n    3L\n    >>> median([-10L, 4L, 6L, 1000L, 10L,\
    \ 20L])\n    15.0\n    \n*/\nfloat median(long[] l) \n{\n    long[] sorted = l.dup.sort;\n\
    \    int mid = l.length / 2;\n    if (l.length % 2 == 0) {\n        return (sorted[mid]\
    \ + sorted[mid - 1]) / 2.0;\n    } else {\n        return sorted[mid];\n    }\n\
    }\nunittest\n{\n    alias candidate = median;\n\n    assert(candidate([3L, 1L,\
    \ 2L, 4L, 5L]) == 3L);\n    assert(candidate([-10L, 4L, 6L, 1000L, 10L, 20L])\
    \ == 8.0);\n    assert(candidate([5L]) == 5L);\n    assert(candidate([6L, 5L])\
    \ == 5.5);\n    assert(candidate([8L, 1L, 3L, 9L, 9L, 2L, 7L]) == 7L);\n}\nvoid\
    \ main(){}"
  status: SyntaxError
  stderr: '/tmp/tmpg0imisoa.d(12): Error: no property `sort` for type `long[]`

    /tmp/tmpg0imisoa.d(13): Error: cannot implicitly convert expression `l.length
    / 2LU` of type `ulong` to `int`

    Failed: ["dmd", "-unittest", "-v", "-o-", "/tmp/tmpg0imisoa.d", "-I/tmp"]

    '
  stdout: ''
  timestamp: 1660160691
- exit_code: 1
  program: "import std.math;\n/*\nReturn median of elements in the list l.\n    >>>\
    \ median([3L, 1L, 2L, 4L, 5L])\n    3L\n    >>> median([-10L, 4L, 6L, 1000L, 10L,\
    \ 20L])\n    15.0\n    \n*/\nfloat median(long[] l) \n{\n    long[] sorted = l.dup;\n\
    \    sorted.sort;\n    if (sorted.length % 2 == 1)\n    {\n        return sorted[sorted.length\
    \ / 2];\n    }\n    else\n    {\n        return (sorted[sorted.length / 2 - 1]\
    \ + sorted[sorted.length / 2]) / 2.0;\n    }\n}\nunittest\n{\n    alias candidate\
    \ = median;\n\n    assert(candidate([3L, 1L, 2L, 4L, 5L]) == 3L);\n    assert(candidate([-10L,\
    \ 4L, 6L, 1000L, 10L, 20L]) == 8.0);\n    assert(candidate([5L]) == 5L);\n   \
    \ assert(candidate([6L, 5L]) == 5.5);\n    assert(candidate([8L, 1L, 3L, 9L, 9L,\
    \ 2L, 7L]) == 7L);\n}\nvoid main(){}"
  status: SyntaxError
  stderr: '/tmp/tmp87rzp2qr.d(13): Error: no property `sort` for type `long[]`

    Failed: ["dmd", "-unittest", "-v", "-o-", "/tmp/tmp87rzp2qr.d", "-I/tmp"]

    '
  stdout: ''
  timestamp: 1660160691
- exit_code: 1
  program: "import std.math;\n/*\nReturn median of elements in the list l.\n    >>>\
    \ median([3L, 1L, 2L, 4L, 5L])\n    3L\n    >>> median([-10L, 4L, 6L, 1000L, 10L,\
    \ 20L])\n    15.0\n    \n*/\nfloat median(long[] l) \n{\n    long[] sorted = l.dup;\n\
    \    sorted.sort;\n    if (sorted.length % 2 == 1)\n        return sorted[sorted.length\
    \ / 2];\n    else\n        return (sorted[sorted.length / 2 - 1] + sorted[sorted.length\
    \ / 2]) / 2.0;\n}\nunittest\n{\n    alias candidate = median;\n\n    assert(candidate([3L,\
    \ 1L, 2L, 4L, 5L]) == 3L);\n    assert(candidate([-10L, 4L, 6L, 1000L, 10L, 20L])\
    \ == 8.0);\n    assert(candidate([5L]) == 5L);\n    assert(candidate([6L, 5L])\
    \ == 5.5);\n    assert(candidate([8L, 1L, 3L, 9L, 9L, 2L, 7L]) == 7L);\n}\nvoid\
    \ main(){}"
  status: SyntaxError
  stderr: '/tmp/tmpx89ezo5q.d(13): Error: no property `sort` for type `long[]`

    Failed: ["dmd", "-unittest", "-v", "-o-", "/tmp/tmpx89ezo5q.d", "-I/tmp"]

    '
  stdout: ''
  timestamp: 1660160691
- exit_code: 1
  program: "import std.math;\n/*\nReturn median of elements in the list l.\n    >>>\
    \ median([3L, 1L, 2L, 4L, 5L])\n    3L\n    >>> median([-10L, 4L, 6L, 1000L, 10L,\
    \ 20L])\n    15.0\n    \n*/\nfloat median(long[] l) \n{\n    long[] sorted = l.dup;\n\
    \    sorted.sort;\n    int n = sorted.length;\n    if (n % 2 == 1)\n    {\n  \
    \      return sorted[n / 2];\n    }\n    else\n    {\n        return (sorted[n\
    \ / 2 - 1] + sorted[n / 2]) / 2.0;\n    }\n}\nunittest\n{\n    alias candidate\
    \ = median;\n\n    assert(candidate([3L, 1L, 2L, 4L, 5L]) == 3L);\n    assert(candidate([-10L,\
    \ 4L, 6L, 1000L, 10L, 20L]) == 8.0);\n    assert(candidate([5L]) == 5L);\n   \
    \ assert(candidate([6L, 5L]) == 5.5);\n    assert(candidate([8L, 1L, 3L, 9L, 9L,\
    \ 2L, 7L]) == 7L);\n}\nvoid main(){}"
  status: SyntaxError
  stderr: '/tmp/tmpsq9xmnob.d(13): Error: no property `sort` for type `long[]`

    /tmp/tmpsq9xmnob.d(14): Error: cannot implicitly convert expression `sorted.length`
    of type `ulong` to `int`

    Failed: ["dmd", "-unittest", "-v", "-o-", "/tmp/tmpsq9xmnob.d", "-I/tmp"]

    '
  stdout: ''
  timestamp: 1660160691
- exit_code: 1
  program: "import std.math;\n/*\nReturn median of elements in the list l.\n    >>>\
    \ median([3L, 1L, 2L, 4L, 5L])\n    3L\n    >>> median([-10L, 4L, 6L, 1000L, 10L,\
    \ 20L])\n    15.0\n    \n*/\nfloat median(long[] l) \n{\n    long[] sorted = l.dup.sort;\n\
    \    int n = sorted.length;\n    if (n % 2 == 1) {\n        return sorted[n /\
    \ 2];\n    } else {\n        return (sorted[n / 2 - 1] + sorted[n / 2]) / 2.0;\n\
    \    }\n}\nunittest\n{\n    alias candidate = median;\n\n    assert(candidate([3L,\
    \ 1L, 2L, 4L, 5L]) == 3L);\n    assert(candidate([-10L, 4L, 6L, 1000L, 10L, 20L])\
    \ == 8.0);\n    assert(candidate([5L]) == 5L);\n    assert(candidate([6L, 5L])\
    \ == 5.5);\n    assert(candidate([8L, 1L, 3L, 9L, 9L, 2L, 7L]) == 7L);\n}\nvoid\
    \ main(){}"
  status: SyntaxError
  stderr: '/tmp/tmpdjxuw47q.d(12): Error: no property `sort` for type `long[]`

    /tmp/tmpdjxuw47q.d(13): Error: cannot implicitly convert expression `sorted.length`
    of type `ulong` to `int`

    Failed: ["dmd", "-unittest", "-v", "-o-", "/tmp/tmpdjxuw47q.d", "-I/tmp"]

    '
  stdout: ''
  timestamp: 1660160691
- exit_code: 1
  program: "import std.math;\n/*\nReturn median of elements in the list l.\n    >>>\
    \ median([3L, 1L, 2L, 4L, 5L])\n    3L\n    >>> median([-10L, 4L, 6L, 1000L, 10L,\
    \ 20L])\n    15.0\n    \n*/\nfloat median(long[] l) \n{\n    long[] sorted = l.dup;\n\
    \    sorted.sort;\n    if (sorted.length % 2 == 1)\n    {\n        return sorted[sorted.length\
    \ / 2];\n    }\n    else\n    {\n        return (sorted[sorted.length / 2 - 1]\
    \ + sorted[sorted.length / 2]) / 2.0;\n    }\n}\nunittest\n{\n    alias candidate\
    \ = median;\n\n    assert(candidate([3L, 1L, 2L, 4L, 5L]) == 3L);\n    assert(candidate([-10L,\
    \ 4L, 6L, 1000L, 10L, 20L]) == 8.0);\n    assert(candidate([5L]) == 5L);\n   \
    \ assert(candidate([6L, 5L]) == 5.5);\n    assert(candidate([8L, 1L, 3L, 9L, 9L,\
    \ 2L, 7L]) == 7L);\n}\nvoid main(){}"
  status: SyntaxError
  stderr: '/tmp/tmp87rzp2qr.d(13): Error: no property `sort` for type `long[]`

    Failed: ["dmd", "-unittest", "-v", "-o-", "/tmp/tmp87rzp2qr.d", "-I/tmp"]

    '
  stdout: ''
  timestamp: 1660160691
- exit_code: 1
  program: "import std.math;\n/*\nReturn median of elements in the list l.\n    >>>\
    \ median([3L, 1L, 2L, 4L, 5L])\n    3L\n    >>> median([-10L, 4L, 6L, 1000L, 10L,\
    \ 20L])\n    15.0\n    \n*/\nfloat median(long[] l) \n{\n    long[] sorted = l.dup;\n\
    \    sorted.sort;\n    size_t n = sorted.length;\n    if (n % 2 == 1) \n    {\n\
    \        return sorted[n / 2];\n    } \n    else \n    {\n        return (sorted[n\
    \ / 2 - 1] + sorted[n / 2]) / 2.0;\n    }\n}\nunittest\n{\n    alias candidate\
    \ = median;\n\n    assert(candidate([3L, 1L, 2L, 4L, 5L]) == 3L);\n    assert(candidate([-10L,\
    \ 4L, 6L, 1000L, 10L, 20L]) == 8.0);\n    assert(candidate([5L]) == 5L);\n   \
    \ assert(candidate([6L, 5L]) == 5.5);\n    assert(candidate([8L, 1L, 3L, 9L, 9L,\
    \ 2L, 7L]) == 7L);\n}\nvoid main(){}"
  status: SyntaxError
  stderr: '/tmp/tmpjg2g1ztn.d(13): Error: no property `sort` for type `long[]`

    Failed: ["dmd", "-unittest", "-v", "-o-", "/tmp/tmpjg2g1ztn.d", "-I/tmp"]

    '
  stdout: ''
  timestamp: 1660160691
- exit_code: 1
  program: "import std.math;\n/*\nReturn median of elements in the list l.\n    >>>\
    \ median([3L, 1L, 2L, 4L, 5L])\n    3L\n    >>> median([-10L, 4L, 6L, 1000L, 10L,\
    \ 20L])\n    15.0\n    \n*/\nfloat median(long[] l) \n{\n    long[] sorted = l.dup;\n\
    \    sorted.sort;\n    if (sorted.length % 2 == 1)\n    {\n        return sorted[sorted.length\
    \ / 2];\n    }\n    else\n    {\n        return (sorted[sorted.length / 2 - 1]\
    \ + sorted[sorted.length / 2]) / 2.0;\n    }\n}\nunittest\n{\n    alias candidate\
    \ = median;\n\n    assert(candidate([3L, 1L, 2L, 4L, 5L]) == 3L);\n    assert(candidate([-10L,\
    \ 4L, 6L, 1000L, 10L, 20L]) == 8.0);\n    assert(candidate([5L]) == 5L);\n   \
    \ assert(candidate([6L, 5L]) == 5.5);\n    assert(candidate([8L, 1L, 3L, 9L, 9L,\
    \ 2L, 7L]) == 7L);\n}\nvoid main(){}"
  status: SyntaxError
  stderr: '/tmp/tmp87rzp2qr.d(13): Error: no property `sort` for type `long[]`

    Failed: ["dmd", "-unittest", "-v", "-o-", "/tmp/tmp87rzp2qr.d", "-I/tmp"]

    '
  stdout: ''
  timestamp: 1660160691
- exit_code: 1
  program: "import std.math;\n/*\nReturn median of elements in the list l.\n    >>>\
    \ median([3L, 1L, 2L, 4L, 5L])\n    3L\n    >>> median([-10L, 4L, 6L, 1000L, 10L,\
    \ 20L])\n    15.0\n    \n*/\nfloat median(long[] l) \n{\n    long[] sorted = sort(l);\n\
    \    int len = l.length;\n    if (len % 2 == 1) \n    {\n        return sorted[len\
    \ / 2];\n    } \n    else \n    {\n        return (sorted[len / 2 - 1] + sorted[len\
    \ / 2]) / 2.0;\n    }\n}\nunittest\n{\n    alias candidate = median;\n\n    assert(candidate([3L,\
    \ 1L, 2L, 4L, 5L]) == 3L);\n    assert(candidate([-10L, 4L, 6L, 1000L, 10L, 20L])\
    \ == 8.0);\n    assert(candidate([5L]) == 5L);\n    assert(candidate([6L, 5L])\
    \ == 5.5);\n    assert(candidate([8L, 1L, 3L, 9L, 9L, 2L, 7L]) == 7L);\n}\nvoid\
    \ main(){}"
  status: SyntaxError
  stderr: '/tmp/tmped6bq3vi.d(12): Error: undefined identifier `sort`, did you mean
    function `sqrt`?

    /tmp/tmped6bq3vi.d(13): Error: cannot implicitly convert expression `l.length`
    of type `ulong` to `int`

    Failed: ["dmd", "-unittest", "-v", "-o-", "/tmp/tmped6bq3vi.d", "-I/tmp"]

    '
  stdout: ''
  timestamp: 1660160691
- exit_code: 1
  program: "import std.math;\n/*\nReturn median of elements in the list l.\n    >>>\
    \ median([3L, 1L, 2L, 4L, 5L])\n    3L\n    >>> median([-10L, 4L, 6L, 1000L, 10L,\
    \ 20L])\n    15.0\n    \n*/\nfloat median(long[] l) \n{\n    int len = l.length;\n\
    \    if (len == 0) \n    {\n        return 0.0;\n    }\n    else if (len == 1)\
    \ \n    {\n        return l[0];\n    }\n    else \n    {\n        long[] sorted\
    \ = sort(l);\n        int mid = len / 2;\n        if (len % 2 == 0) \n       \
    \ {\n            return (sorted[mid - 1] + sorted[mid]) / 2.0;\n        }\n  \
    \      else \n        {\n            return sorted[mid];\n        }\n    }\n}\n\
    unittest\n{\n    alias candidate = median;\n\n    assert(candidate([3L, 1L, 2L,\
    \ 4L, 5L]) == 3L);\n    assert(candidate([-10L, 4L, 6L, 1000L, 10L, 20L]) == 8.0);\n\
    \    assert(candidate([5L]) == 5L);\n    assert(candidate([6L, 5L]) == 5.5);\n\
    \    assert(candidate([8L, 1L, 3L, 9L, 9L, 2L, 7L]) == 7L);\n}\nvoid main(){}"
  status: SyntaxError
  stderr: '/tmp/tmpoqe4f7qr.d(12): Error: cannot implicitly convert expression `l.length`
    of type `ulong` to `int`

    /tmp/tmpoqe4f7qr.d(23): Error: undefined identifier `sort`, did you mean function
    `sqrt`?

    Failed: ["dmd", "-unittest", "-v", "-o-", "/tmp/tmpoqe4f7qr.d", "-I/tmp"]

    '
  stdout: ''
  timestamp: 1660160691
- exit_code: 1
  program: "import std.math;\n/*\nReturn median of elements in the list l.\n    >>>\
    \ median([3L, 1L, 2L, 4L, 5L])\n    3L\n    >>> median([-10L, 4L, 6L, 1000L, 10L,\
    \ 20L])\n    15.0\n    \n*/\nfloat median(long[] l) \n{\n    long[] sorted = l.dup;\n\
    \    sorted.sort;\n    if (sorted.length % 2 == 1)\n        return sorted[sorted.length\
    \ / 2];\n    else\n        return (sorted[sorted.length / 2 - 1] + sorted[sorted.length\
    \ / 2]) / 2.0;\n}\nunittest\n{\n    alias candidate = median;\n\n    assert(candidate([3L,\
    \ 1L, 2L, 4L, 5L]) == 3L);\n    assert(candidate([-10L, 4L, 6L, 1000L, 10L, 20L])\
    \ == 8.0);\n    assert(candidate([5L]) == 5L);\n    assert(candidate([6L, 5L])\
    \ == 5.5);\n    assert(candidate([8L, 1L, 3L, 9L, 9L, 2L, 7L]) == 7L);\n}\nvoid\
    \ main(){}"
  status: SyntaxError
  stderr: '/tmp/tmpx89ezo5q.d(13): Error: no property `sort` for type `long[]`

    Failed: ["dmd", "-unittest", "-v", "-o-", "/tmp/tmpx89ezo5q.d", "-I/tmp"]

    '
  stdout: ''
  timestamp: 1660160691
- exit_code: 1
  program: "import std.math;\n/*\nReturn median of elements in the list l.\n    >>>\
    \ median([3L, 1L, 2L, 4L, 5L])\n    3L\n    >>> median([-10L, 4L, 6L, 1000L, 10L,\
    \ 20L])\n    15.0\n    \n*/\nfloat median(long[] l) \n{\n    long[] sorted = l.dup;\n\
    \    sorted.sort;\n    int n = sorted.length;\n    if (n % 2 == 1)\n        return\
    \ sorted[n / 2];\n    else\n        return (sorted[n / 2 - 1] + sorted[n / 2])\
    \ / 2.0;\n}\nunittest\n{\n    alias candidate = median;\n\n    assert(candidate([3L,\
    \ 1L, 2L, 4L, 5L]) == 3L);\n    assert(candidate([-10L, 4L, 6L, 1000L, 10L, 20L])\
    \ == 8.0);\n    assert(candidate([5L]) == 5L);\n    assert(candidate([6L, 5L])\
    \ == 5.5);\n    assert(candidate([8L, 1L, 3L, 9L, 9L, 2L, 7L]) == 7L);\n}\nvoid\
    \ main(){}"
  status: SyntaxError
  stderr: '/tmp/tmpwnuehx69.d(13): Error: no property `sort` for type `long[]`

    /tmp/tmpwnuehx69.d(14): Error: cannot implicitly convert expression `sorted.length`
    of type `ulong` to `int`

    Failed: ["dmd", "-unittest", "-v", "-o-", "/tmp/tmpwnuehx69.d", "-I/tmp"]

    '
  stdout: ''
  timestamp: 1660160691
- exit_code: 1
  program: "import std.math;\n/*\nReturn median of elements in the list l.\n    >>>\
    \ median([3L, 1L, 2L, 4L, 5L])\n    3L\n    >>> median([-10L, 4L, 6L, 1000L, 10L,\
    \ 20L])\n    15.0\n    \n*/\nfloat median(long[] l) \n{\n    if (l.length == 0)\
    \ \n    {\n        return 0.0;\n    }\n    else \n    {\n        long[] sorted\
    \ = l.dup;\n        sorted.sort;\n        if (sorted.length % 2 == 0) \n     \
    \   {\n            return (sorted[sorted.length / 2 - 1] + sorted[sorted.length\
    \ / 2]) / 2.0;\n        }\n        else \n        {\n            return sorted[sorted.length\
    \ / 2];\n        }\n    }\n}\nunittest\n{\n    alias candidate = median;\n\n \
    \   assert(candidate([3L, 1L, 2L, 4L, 5L]) == 3L);\n    assert(candidate([-10L,\
    \ 4L, 6L, 1000L, 10L, 20L]) == 8.0);\n    assert(candidate([5L]) == 5L);\n   \
    \ assert(candidate([6L, 5L]) == 5.5);\n    assert(candidate([8L, 1L, 3L, 9L, 9L,\
    \ 2L, 7L]) == 7L);\n}\nvoid main(){}"
  status: SyntaxError
  stderr: '/tmp/tmpvddqc_nd.d(19): Error: no property `sort` for type `long[]`

    Failed: ["dmd", "-unittest", "-v", "-o-", "/tmp/tmpvddqc_nd.d", "-I/tmp"]

    '
  stdout: ''
  timestamp: 1660160691
- exit_code: 1
  program: "import std.math;\n/*\nReturn median of elements in the list l.\n    >>>\
    \ median([3L, 1L, 2L, 4L, 5L])\n    3L\n    >>> median([-10L, 4L, 6L, 1000L, 10L,\
    \ 20L])\n    15.0\n    \n*/\nfloat median(long[] l) \n{\n    long[] sorted = l.dup;\n\
    \    sorted.sort;\n    int n = sorted.length;\n    if (n % 2 == 1)\n        return\
    \ sorted[n / 2];\n    else\n        return (sorted[n / 2 - 1] + sorted[n / 2])\
    \ / 2.0;\n}\nunittest\n{\n    alias candidate = median;\n\n    assert(candidate([3L,\
    \ 1L, 2L, 4L, 5L]) == 3L);\n    assert(candidate([-10L, 4L, 6L, 1000L, 10L, 20L])\
    \ == 8.0);\n    assert(candidate([5L]) == 5L);\n    assert(candidate([6L, 5L])\
    \ == 5.5);\n    assert(candidate([8L, 1L, 3L, 9L, 9L, 2L, 7L]) == 7L);\n}\nvoid\
    \ main(){}"
  status: SyntaxError
  stderr: '/tmp/tmpwnuehx69.d(13): Error: no property `sort` for type `long[]`

    /tmp/tmpwnuehx69.d(14): Error: cannot implicitly convert expression `sorted.length`
    of type `ulong` to `int`

    Failed: ["dmd", "-unittest", "-v", "-o-", "/tmp/tmpwnuehx69.d", "-I/tmp"]

    '
  stdout: ''
  timestamp: 1660160691
- exit_code: 1
  program: "import std.math;\n/*\nReturn median of elements in the list l.\n    >>>\
    \ median([3L, 1L, 2L, 4L, 5L])\n    3L\n    >>> median([-10L, 4L, 6L, 1000L, 10L,\
    \ 20L])\n    15.0\n    \n*/\nfloat median(long[] l) \n{\n    long[] sorted = l.dup;\n\
    \    sorted.sort;\n    int n = sorted.length;\n    if (n % 2 == 1)\n        return\
    \ sorted[n / 2];\n    else\n        return (sorted[n / 2 - 1] + sorted[n / 2])\
    \ / 2.0;\n}\nunittest\n{\n    alias candidate = median;\n\n    assert(candidate([3L,\
    \ 1L, 2L, 4L, 5L]) == 3L);\n    assert(candidate([-10L, 4L, 6L, 1000L, 10L, 20L])\
    \ == 8.0);\n    assert(candidate([5L]) == 5L);\n    assert(candidate([6L, 5L])\
    \ == 5.5);\n    assert(candidate([8L, 1L, 3L, 9L, 9L, 2L, 7L]) == 7L);\n}\nvoid\
    \ main(){}"
  status: SyntaxError
  stderr: '/tmp/tmpwnuehx69.d(13): Error: no property `sort` for type `long[]`

    /tmp/tmpwnuehx69.d(14): Error: cannot implicitly convert expression `sorted.length`
    of type `ulong` to `int`

    Failed: ["dmd", "-unittest", "-v", "-o-", "/tmp/tmpwnuehx69.d", "-I/tmp"]

    '
  stdout: ''
  timestamp: 1660160691
- exit_code: 1
  program: "import std.math;\n/*\nReturn median of elements in the list l.\n    >>>\
    \ median([3L, 1L, 2L, 4L, 5L])\n    3L\n    >>> median([-10L, 4L, 6L, 1000L, 10L,\
    \ 20L])\n    15.0\n    \n*/\nfloat median(long[] l) \n{\n    long[] sorted = l.sort();\n\
    \    int n = sorted.length;\n    if (n % 2 == 1)\n        return sorted[n / 2];\n\
    \    else\n        return (sorted[n / 2 - 1] + sorted[n / 2]) / 2.0;\n}\nunittest\n\
    {\n    alias candidate = median;\n\n    assert(candidate([3L, 1L, 2L, 4L, 5L])\
    \ == 3L);\n    assert(candidate([-10L, 4L, 6L, 1000L, 10L, 20L]) == 8.0);\n  \
    \  assert(candidate([5L]) == 5L);\n    assert(candidate([6L, 5L]) == 5.5);\n \
    \   assert(candidate([8L, 1L, 3L, 9L, 9L, 2L, 7L]) == 7L);\n}\nvoid main(){}"
  status: SyntaxError
  stderr: '/tmp/tmpmtssliji.d(12): Error: no property `sort` for type `long[]`

    /tmp/tmpmtssliji.d(13): Error: cannot implicitly convert expression `sorted.length`
    of type `ulong` to `int`

    Failed: ["dmd", "-unittest", "-v", "-o-", "/tmp/tmpmtssliji.d", "-I/tmp"]

    '
  stdout: ''
  timestamp: 1660160691
- exit_code: 1
  program: "import std.math;\n/*\nReturn median of elements in the list l.\n    >>>\
    \ median([3L, 1L, 2L, 4L, 5L])\n    3L\n    >>> median([-10L, 4L, 6L, 1000L, 10L,\
    \ 20L])\n    15.0\n    \n*/\nfloat median(long[] l) \n{\n    long[] sorted = l.dup;\n\
    \    sorted.sort;\n    long len = sorted.length;\n    if (len % 2 == 1)\n    {\n\
    \        return sorted[len / 2];\n    }\n    else\n    {\n        return (sorted[len\
    \ / 2 - 1] + sorted[len / 2]) / 2.0;\n    }\n}\nunittest\n{\n    alias candidate\
    \ = median;\n\n    assert(candidate([3L, 1L, 2L, 4L, 5L]) == 3L);\n    assert(candidate([-10L,\
    \ 4L, 6L, 1000L, 10L, 20L]) == 8.0);\n    assert(candidate([5L]) == 5L);\n   \
    \ assert(candidate([6L, 5L]) == 5.5);\n    assert(candidate([8L, 1L, 3L, 9L, 9L,\
    \ 2L, 7L]) == 7L);\n}\nvoid main(){}"
  status: SyntaxError
  stderr: '/tmp/tmp69e3vlvt.d(13): Error: no property `sort` for type `long[]`

    Failed: ["dmd", "-unittest", "-v", "-o-", "/tmp/tmp69e3vlvt.d", "-I/tmp"]

    '
  stdout: ''
  timestamp: 1660160691
- exit_code: 1
  program: "import std.math;\n/*\nReturn median of elements in the list l.\n    >>>\
    \ median([3L, 1L, 2L, 4L, 5L])\n    3L\n    >>> median([-10L, 4L, 6L, 1000L, 10L,\
    \ 20L])\n    15.0\n    \n*/\nfloat median(long[] l) \n{\n    int n = l.length;\n\
    \    if (n == 0) \n    {\n        return 0.0;\n    }\n    else if (n == 1) \n\
    \    {\n        return l[0];\n    }\n    else if (n == 2) \n    {\n        return\
    \ (l[0] + l[1]) / 2.0;\n    }\n    else \n    {\n        long[] l2 = l[0..n];\n\
    \        sort(l2);\n        if (n % 2 == 1) \n        {\n            return l2[n\
    \ / 2];\n        }\n        else \n        {\n            return (l2[n / 2 - 1]\
    \ + l2[n / 2]) / 2.0;\n        }\n    }\n}\nunittest\n{\n    alias candidate =\
    \ median;\n\n    assert(candidate([3L, 1L, 2L, 4L, 5L]) == 3L);\n    assert(candidate([-10L,\
    \ 4L, 6L, 1000L, 10L, 20L]) == 8.0);\n    assert(candidate([5L]) == 5L);\n   \
    \ assert(candidate([6L, 5L]) == 5.5);\n    assert(candidate([8L, 1L, 3L, 9L, 9L,\
    \ 2L, 7L]) == 7L);\n}\nvoid main(){}"
  status: SyntaxError
  stderr: '/tmp/tmp5xqv_7x2.d(12): Error: cannot implicitly convert expression `l.length`
    of type `ulong` to `int`

    /tmp/tmp5xqv_7x2.d(28): Error: undefined identifier `sort`, did you mean function
    `sqrt`?

    Failed: ["dmd", "-unittest", "-v", "-o-", "/tmp/tmp5xqv_7x2.d", "-I/tmp"]

    '
  stdout: ''
  timestamp: 1660160691
- exit_code: 1
  program: "import std.math;\n/*\nReturn median of elements in the list l.\n    >>>\
    \ median([3L, 1L, 2L, 4L, 5L])\n    3L\n    >>> median([-10L, 4L, 6L, 1000L, 10L,\
    \ 20L])\n    15.0\n    \n*/\nfloat median(long[] l) \n{\n    long[] sorted = l.dup.sort;\n\
    \    int mid = sorted.length / 2;\n    if (sorted.length % 2 == 0) {\n       \
    \ return (sorted[mid - 1] + sorted[mid]) / 2.0;\n    }\n    else {\n        return\
    \ sorted[mid];\n    }\n}\nunittest\n{\n    alias candidate = median;\n\n    assert(candidate([3L,\
    \ 1L, 2L, 4L, 5L]) == 3L);\n    assert(candidate([-10L, 4L, 6L, 1000L, 10L, 20L])\
    \ == 8.0);\n    assert(candidate([5L]) == 5L);\n    assert(candidate([6L, 5L])\
    \ == 5.5);\n    assert(candidate([8L, 1L, 3L, 9L, 9L, 2L, 7L]) == 7L);\n}\nvoid\
    \ main(){}"
  status: SyntaxError
  stderr: '/tmp/tmpww18zzpi.d(12): Error: no property `sort` for type `long[]`

    /tmp/tmpww18zzpi.d(13): Error: cannot implicitly convert expression `sorted.length
    / 2LU` of type `ulong` to `int`

    Failed: ["dmd", "-unittest", "-v", "-o-", "/tmp/tmpww18zzpi.d", "-I/tmp"]

    '
  stdout: ''
  timestamp: 1660160691
- exit_code: 1
  program: "import std.math;\n/*\nReturn median of elements in the list l.\n    >>>\
    \ median([3L, 1L, 2L, 4L, 5L])\n    3L\n    >>> median([-10L, 4L, 6L, 1000L, 10L,\
    \ 20L])\n    15.0\n    \n*/\nfloat median(long[] l) \n{\n    long[] sorted = l.dup;\n\
    \    sorted.sort;\n    int mid = sorted.length / 2;\n    if (sorted.length % 2\
    \ == 0) \n    {\n        return (sorted[mid - 1] + sorted[mid]) / 2.0;\n    }\n\
    \    else \n    {\n        return sorted[mid];\n    }\n}\nunittest\n{\n    alias\
    \ candidate = median;\n\n    assert(candidate([3L, 1L, 2L, 4L, 5L]) == 3L);\n\
    \    assert(candidate([-10L, 4L, 6L, 1000L, 10L, 20L]) == 8.0);\n    assert(candidate([5L])\
    \ == 5L);\n    assert(candidate([6L, 5L]) == 5.5);\n    assert(candidate([8L,\
    \ 1L, 3L, 9L, 9L, 2L, 7L]) == 7L);\n}\nvoid main(){}"
  status: SyntaxError
  stderr: '/tmp/tmp1r_nfwo0.d(13): Error: no property `sort` for type `long[]`

    /tmp/tmp1r_nfwo0.d(14): Error: cannot implicitly convert expression `sorted.length
    / 2LU` of type `ulong` to `int`

    Failed: ["dmd", "-unittest", "-v", "-o-", "/tmp/tmp1r_nfwo0.d", "-I/tmp"]

    '
  stdout: ''
  timestamp: 1660160691
- exit_code: 1
  program: "import std.math;\n/*\nReturn median of elements in the list l.\n    >>>\
    \ median([3L, 1L, 2L, 4L, 5L])\n    3L\n    >>> median([-10L, 4L, 6L, 1000L, 10L,\
    \ 20L])\n    15.0\n    \n*/\nfloat median(long[] l) \n{\n    long[] sorted = l.dup.sort;\n\
    \    int n = l.length;\n    if (n % 2 == 1) \n    {\n        return sorted[n /\
    \ 2];\n    } \n    else \n    {\n        return (sorted[n / 2 - 1] + sorted[n\
    \ / 2]) / 2.0;\n    }\n}\nunittest\n{\n    alias candidate = median;\n\n    assert(candidate([3L,\
    \ 1L, 2L, 4L, 5L]) == 3L);\n    assert(candidate([-10L, 4L, 6L, 1000L, 10L, 20L])\
    \ == 8.0);\n    assert(candidate([5L]) == 5L);\n    assert(candidate([6L, 5L])\
    \ == 5.5);\n    assert(candidate([8L, 1L, 3L, 9L, 9L, 2L, 7L]) == 7L);\n}\nvoid\
    \ main(){}"
  status: SyntaxError
  stderr: '/tmp/tmp8dqntla2.d(12): Error: no property `sort` for type `long[]`

    /tmp/tmp8dqntla2.d(13): Error: cannot implicitly convert expression `l.length`
    of type `ulong` to `int`

    Failed: ["dmd", "-unittest", "-v", "-o-", "/tmp/tmp8dqntla2.d", "-I/tmp"]

    '
  stdout: ''
  timestamp: 1660160691
- exit_code: 1
  program: "import std.math;\n/*\nReturn median of elements in the list l.\n    >>>\
    \ median([3L, 1L, 2L, 4L, 5L])\n    3L\n    >>> median([-10L, 4L, 6L, 1000L, 10L,\
    \ 20L])\n    15.0\n    \n*/\nfloat median(long[] l) \n{\n    long[] sorted = l.dup;\n\
    \    sorted.sort;\n    int len = sorted.length;\n    if (len % 2 == 0)\n    {\n\
    \        return (sorted[len / 2 - 1] + sorted[len / 2]) / 2.0;\n    }\n    else\n\
    \    {\n        return sorted[len / 2];\n    }\n}\nunittest\n{\n    alias candidate\
    \ = median;\n\n    assert(candidate([3L, 1L, 2L, 4L, 5L]) == 3L);\n    assert(candidate([-10L,\
    \ 4L, 6L, 1000L, 10L, 20L]) == 8.0);\n    assert(candidate([5L]) == 5L);\n   \
    \ assert(candidate([6L, 5L]) == 5.5);\n    assert(candidate([8L, 1L, 3L, 9L, 9L,\
    \ 2L, 7L]) == 7L);\n}\nvoid main(){}"
  status: SyntaxError
  stderr: '/tmp/tmpxjc4vgto.d(13): Error: no property `sort` for type `long[]`

    /tmp/tmpxjc4vgto.d(14): Error: cannot implicitly convert expression `sorted.length`
    of type `ulong` to `int`

    Failed: ["dmd", "-unittest", "-v", "-o-", "/tmp/tmpxjc4vgto.d", "-I/tmp"]

    '
  stdout: ''
  timestamp: 1660160691
- exit_code: 1
  program: "import std.math;\n/*\nReturn median of elements in the list l.\n    >>>\
    \ median([3L, 1L, 2L, 4L, 5L])\n    3L\n    >>> median([-10L, 4L, 6L, 1000L, 10L,\
    \ 20L])\n    15.0\n    \n*/\nfloat median(long[] l) \n{\n    long[] sorted = l.dup;\n\
    \    sorted.sort;\n    if (sorted.length % 2 == 1) \n    {\n        return sorted[sorted.length\
    \ / 2];\n    } \n    else \n    {\n        return (sorted[sorted.length / 2 -\
    \ 1] + sorted[sorted.length / 2]) / 2.0;\n    }\n}\nunittest\n{\n    alias candidate\
    \ = median;\n\n    assert(candidate([3L, 1L, 2L, 4L, 5L]) == 3L);\n    assert(candidate([-10L,\
    \ 4L, 6L, 1000L, 10L, 20L]) == 8.0);\n    assert(candidate([5L]) == 5L);\n   \
    \ assert(candidate([6L, 5L]) == 5.5);\n    assert(candidate([8L, 1L, 3L, 9L, 9L,\
    \ 2L, 7L]) == 7L);\n}\nvoid main(){}"
  status: SyntaxError
  stderr: '/tmp/tmp14nivz02.d(13): Error: no property `sort` for type `long[]`

    Failed: ["dmd", "-unittest", "-v", "-o-", "/tmp/tmp14nivz02.d", "-I/tmp"]

    '
  stdout: ''
  timestamp: 1660160691
- exit_code: 1
  program: "import std.math;\n/*\nReturn median of elements in the list l.\n    >>>\
    \ median([3L, 1L, 2L, 4L, 5L])\n    3L\n    >>> median([-10L, 4L, 6L, 1000L, 10L,\
    \ 20L])\n    15.0\n    \n*/\nfloat median(long[] l) \n{\n    long[] sorted = l.dup;\n\
    \    sorted.sort;\n    int len = sorted.length;\n    if (len % 2 == 0) \n    {\n\
    \        return (sorted[len / 2 - 1] + sorted[len / 2]) / 2.0;\n    } \n    else\
    \ \n    {\n        return sorted[len / 2];\n    }\n}\nunittest\n{\n    alias candidate\
    \ = median;\n\n    assert(candidate([3L, 1L, 2L, 4L, 5L]) == 3L);\n    assert(candidate([-10L,\
    \ 4L, 6L, 1000L, 10L, 20L]) == 8.0);\n    assert(candidate([5L]) == 5L);\n   \
    \ assert(candidate([6L, 5L]) == 5.5);\n    assert(candidate([8L, 1L, 3L, 9L, 9L,\
    \ 2L, 7L]) == 7L);\n}\nvoid main(){}"
  status: SyntaxError
  stderr: '/tmp/tmp2d8pw0z5.d(13): Error: no property `sort` for type `long[]`

    /tmp/tmp2d8pw0z5.d(14): Error: cannot implicitly convert expression `sorted.length`
    of type `ulong` to `int`

    Failed: ["dmd", "-unittest", "-v", "-o-", "/tmp/tmp2d8pw0z5.d", "-I/tmp"]

    '
  stdout: ''
  timestamp: 1660160691
- exit_code: 1
  program: "import std.math;\n/*\nReturn median of elements in the list l.\n    >>>\
    \ median([3L, 1L, 2L, 4L, 5L])\n    3L\n    >>> median([-10L, 4L, 6L, 1000L, 10L,\
    \ 20L])\n    15.0\n    \n*/\nfloat median(long[] l) \n{\n    long[] sorted = l.dup;\n\
    \    sorted.sort;\n    long n = sorted.length;\n    if (n % 2 == 1) \n    {\n\
    \        return sorted[n / 2];\n    } \n    else \n    {\n        return (sorted[n\
    \ / 2 - 1] + sorted[n / 2]) / 2.0;\n    }\n}\nunittest\n{\n    alias candidate\
    \ = median;\n\n    assert(candidate([3L, 1L, 2L, 4L, 5L]) == 3L);\n    assert(candidate([-10L,\
    \ 4L, 6L, 1000L, 10L, 20L]) == 8.0);\n    assert(candidate([5L]) == 5L);\n   \
    \ assert(candidate([6L, 5L]) == 5.5);\n    assert(candidate([8L, 1L, 3L, 9L, 9L,\
    \ 2L, 7L]) == 7L);\n}\nvoid main(){}"
  status: SyntaxError
  stderr: '/tmp/tmpdiyck9r2.d(13): Error: no property `sort` for type `long[]`

    Failed: ["dmd", "-unittest", "-v", "-o-", "/tmp/tmpdiyck9r2.d", "-I/tmp"]

    '
  stdout: ''
  timestamp: 1660160691
- exit_code: 1
  program: "import std.math;\n/*\nReturn median of elements in the list l.\n    >>>\
    \ median([3L, 1L, 2L, 4L, 5L])\n    3L\n    >>> median([-10L, 4L, 6L, 1000L, 10L,\
    \ 20L])\n    15.0\n    \n*/\nfloat median(long[] l) \n{\n    long[] sorted = l.sort();\n\
    \    int n = sorted.length;\n    if (n % 2 == 1) \n    {\n        return sorted[n\
    \ / 2];\n    } \n    else \n    {\n        return (sorted[n / 2 - 1] + sorted[n\
    \ / 2]) / 2.0;\n    }\n}\nunittest\n{\n    alias candidate = median;\n\n    assert(candidate([3L,\
    \ 1L, 2L, 4L, 5L]) == 3L);\n    assert(candidate([-10L, 4L, 6L, 1000L, 10L, 20L])\
    \ == 8.0);\n    assert(candidate([5L]) == 5L);\n    assert(candidate([6L, 5L])\
    \ == 5.5);\n    assert(candidate([8L, 1L, 3L, 9L, 9L, 2L, 7L]) == 7L);\n}\nvoid\
    \ main(){}"
  status: SyntaxError
  stderr: '/tmp/tmphwa0kg83.d(12): Error: no property `sort` for type `long[]`

    /tmp/tmphwa0kg83.d(13): Error: cannot implicitly convert expression `sorted.length`
    of type `ulong` to `int`

    Failed: ["dmd", "-unittest", "-v", "-o-", "/tmp/tmphwa0kg83.d", "-I/tmp"]

    '
  stdout: ''
  timestamp: 1660160691
- exit_code: 1
  program: "import std.math;\n/*\nReturn median of elements in the list l.\n    >>>\
    \ median([3L, 1L, 2L, 4L, 5L])\n    3L\n    >>> median([-10L, 4L, 6L, 1000L, 10L,\
    \ 20L])\n    15.0\n    \n*/\nfloat median(long[] l) \n{\n    long[] sorted = l.dup;\n\
    \    sorted.sort;\n    int n = sorted.length;\n    if (n % 2 == 1) {\n       \
    \ return sorted[n / 2];\n    } else {\n        return (sorted[n / 2 - 1] + sorted[n\
    \ / 2]) / 2.0;\n    }\n}\nunittest\n{\n    alias candidate = median;\n\n    assert(candidate([3L,\
    \ 1L, 2L, 4L, 5L]) == 3L);\n    assert(candidate([-10L, 4L, 6L, 1000L, 10L, 20L])\
    \ == 8.0);\n    assert(candidate([5L]) == 5L);\n    assert(candidate([6L, 5L])\
    \ == 5.5);\n    assert(candidate([8L, 1L, 3L, 9L, 9L, 2L, 7L]) == 7L);\n}\nvoid\
    \ main(){}"
  status: SyntaxError
  stderr: '/tmp/tmp0t9cz4t1.d(13): Error: no property `sort` for type `long[]`

    /tmp/tmp0t9cz4t1.d(14): Error: cannot implicitly convert expression `sorted.length`
    of type `ulong` to `int`

    Failed: ["dmd", "-unittest", "-v", "-o-", "/tmp/tmp0t9cz4t1.d", "-I/tmp"]

    '
  stdout: ''
  timestamp: 1660160691
- exit_code: 1
  program: "import std.math;\n/*\nReturn median of elements in the list l.\n    >>>\
    \ median([3L, 1L, 2L, 4L, 5L])\n    3L\n    >>> median([-10L, 4L, 6L, 1000L, 10L,\
    \ 20L])\n    15.0\n    \n*/\nfloat median(long[] l) \n{\n    long[] l2 = l.dup;\n\
    \    l2.sort;\n    int n = l2.length;\n    if (n % 2 == 1) \n    {\n        return\
    \ l2[n / 2];\n    } \n    else \n    {\n        return (l2[n / 2 - 1] + l2[n /\
    \ 2]) / 2.0;\n    }\n}\nunittest\n{\n    alias candidate = median;\n\n    assert(candidate([3L,\
    \ 1L, 2L, 4L, 5L]) == 3L);\n    assert(candidate([-10L, 4L, 6L, 1000L, 10L, 20L])\
    \ == 8.0);\n    assert(candidate([5L]) == 5L);\n    assert(candidate([6L, 5L])\
    \ == 5.5);\n    assert(candidate([8L, 1L, 3L, 9L, 9L, 2L, 7L]) == 7L);\n}\nvoid\
    \ main(){}"
  status: SyntaxError
  stderr: '/tmp/tmpmcop16ad.d(13): Error: no property `sort` for type `long[]`

    /tmp/tmpmcop16ad.d(14): Error: cannot implicitly convert expression `l2.length`
    of type `ulong` to `int`

    Failed: ["dmd", "-unittest", "-v", "-o-", "/tmp/tmpmcop16ad.d", "-I/tmp"]

    '
  stdout: ''
  timestamp: 1660160691
- exit_code: 1
  program: "import std.math;\n/*\nReturn median of elements in the list l.\n    >>>\
    \ median([3L, 1L, 2L, 4L, 5L])\n    3L\n    >>> median([-10L, 4L, 6L, 1000L, 10L,\
    \ 20L])\n    15.0\n    \n*/\nfloat median(long[] l) \n{\n    long[] sorted = l.dup;\n\
    \    sorted.sort;\n    int n = sorted.length;\n    if (n % 2 == 1)\n        return\
    \ sorted[n / 2];\n    else\n        return (sorted[n / 2 - 1] + sorted[n / 2])\
    \ / 2.0;\n}\nunittest\n{\n    alias candidate = median;\n\n    assert(candidate([3L,\
    \ 1L, 2L, 4L, 5L]) == 3L);\n    assert(candidate([-10L, 4L, 6L, 1000L, 10L, 20L])\
    \ == 8.0);\n    assert(candidate([5L]) == 5L);\n    assert(candidate([6L, 5L])\
    \ == 5.5);\n    assert(candidate([8L, 1L, 3L, 9L, 9L, 2L, 7L]) == 7L);\n}\nvoid\
    \ main(){}"
  status: SyntaxError
  stderr: '/tmp/tmpwnuehx69.d(13): Error: no property `sort` for type `long[]`

    /tmp/tmpwnuehx69.d(14): Error: cannot implicitly convert expression `sorted.length`
    of type `ulong` to `int`

    Failed: ["dmd", "-unittest", "-v", "-o-", "/tmp/tmpwnuehx69.d", "-I/tmp"]

    '
  stdout: ''
  timestamp: 1660160691
- exit_code: 1
  program: "import std.math;\n/*\nReturn median of elements in the list l.\n    >>>\
    \ median([3L, 1L, 2L, 4L, 5L])\n    3L\n    >>> median([-10L, 4L, 6L, 1000L, 10L,\
    \ 20L])\n    15.0\n    \n*/\nfloat median(long[] l) \n{\n    long[] sorted = l.dup;\n\
    \    sorted.sort;\n    int len = sorted.length;\n    if (len % 2 == 1)\n     \
    \   return sorted[len / 2];\n    else\n        return (sorted[len / 2 - 1] + sorted[len\
    \ / 2]) / 2.0;\n}\nunittest\n{\n    alias candidate = median;\n\n    assert(candidate([3L,\
    \ 1L, 2L, 4L, 5L]) == 3L);\n    assert(candidate([-10L, 4L, 6L, 1000L, 10L, 20L])\
    \ == 8.0);\n    assert(candidate([5L]) == 5L);\n    assert(candidate([6L, 5L])\
    \ == 5.5);\n    assert(candidate([8L, 1L, 3L, 9L, 9L, 2L, 7L]) == 7L);\n}\nvoid\
    \ main(){}"
  status: SyntaxError
  stderr: '/tmp/tmpexp_u46_.d(13): Error: no property `sort` for type `long[]`

    /tmp/tmpexp_u46_.d(14): Error: cannot implicitly convert expression `sorted.length`
    of type `ulong` to `int`

    Failed: ["dmd", "-unittest", "-v", "-o-", "/tmp/tmpexp_u46_.d", "-I/tmp"]

    '
  stdout: ''
  timestamp: 1660160691
- exit_code: 1
  program: "import std.math;\n/*\nReturn median of elements in the list l.\n    >>>\
    \ median([3L, 1L, 2L, 4L, 5L])\n    3L\n    >>> median([-10L, 4L, 6L, 1000L, 10L,\
    \ 20L])\n    15.0\n    \n*/\nfloat median(long[] l) \n{\n    long[] sorted = l.dup;\n\
    \    sorted.sort;\n    if (sorted.length % 2 == 1)\n        return sorted[sorted.length\
    \ / 2];\n    else\n        return (sorted[sorted.length / 2 - 1] + sorted[sorted.length\
    \ / 2]) / 2.0;\n}\nunittest\n{\n    alias candidate = median;\n\n    assert(candidate([3L,\
    \ 1L, 2L, 4L, 5L]) == 3L);\n    assert(candidate([-10L, 4L, 6L, 1000L, 10L, 20L])\
    \ == 8.0);\n    assert(candidate([5L]) == 5L);\n    assert(candidate([6L, 5L])\
    \ == 5.5);\n    assert(candidate([8L, 1L, 3L, 9L, 9L, 2L, 7L]) == 7L);\n}\nvoid\
    \ main(){}"
  status: SyntaxError
  stderr: '/tmp/tmpx89ezo5q.d(13): Error: no property `sort` for type `long[]`

    Failed: ["dmd", "-unittest", "-v", "-o-", "/tmp/tmpx89ezo5q.d", "-I/tmp"]

    '
  stdout: ''
  timestamp: 1660160691
- exit_code: 1
  program: "import std.math;\n/*\nReturn median of elements in the list l.\n    >>>\
    \ median([3L, 1L, 2L, 4L, 5L])\n    3L\n    >>> median([-10L, 4L, 6L, 1000L, 10L,\
    \ 20L])\n    15.0\n    \n*/\nfloat median(long[] l) \n{\n    long[] sorted = l.dup;\n\
    \    sorted.sort;\n    int n = sorted.length;\n    if (n % 2 == 1) \n    {\n \
    \       return sorted[n / 2];\n    } \n    else \n    {\n        return (sorted[n\
    \ / 2 - 1] + sorted[n / 2]) / 2.0;\n    }\n}\nunittest\n{\n    alias candidate\
    \ = median;\n\n    assert(candidate([3L, 1L, 2L, 4L, 5L]) == 3L);\n    assert(candidate([-10L,\
    \ 4L, 6L, 1000L, 10L, 20L]) == 8.0);\n    assert(candidate([5L]) == 5L);\n   \
    \ assert(candidate([6L, 5L]) == 5.5);\n    assert(candidate([8L, 1L, 3L, 9L, 9L,\
    \ 2L, 7L]) == 7L);\n}\nvoid main(){}"
  status: SyntaxError
  stderr: '/tmp/tmp6g5nvd39.d(13): Error: no property `sort` for type `long[]`

    /tmp/tmp6g5nvd39.d(14): Error: cannot implicitly convert expression `sorted.length`
    of type `ulong` to `int`

    Failed: ["dmd", "-unittest", "-v", "-o-", "/tmp/tmp6g5nvd39.d", "-I/tmp"]

    '
  stdout: ''
  timestamp: 1660160691
- exit_code: 1
  program: "import std.math;\n/*\nReturn median of elements in the list l.\n    >>>\
    \ median([3L, 1L, 2L, 4L, 5L])\n    3L\n    >>> median([-10L, 4L, 6L, 1000L, 10L,\
    \ 20L])\n    15.0\n    \n*/\nfloat median(long[] l) \n{\n    long[] sorted = l.dup;\n\
    \    sorted.sort;\n    if (sorted.length % 2 == 1)\n    {\n        return sorted[sorted.length\
    \ / 2];\n    }\n    else\n    {\n        return (sorted[sorted.length / 2 - 1]\
    \ + sorted[sorted.length / 2]) / 2.0;\n    }\n}\nunittest\n{\n    alias candidate\
    \ = median;\n\n    assert(candidate([3L, 1L, 2L, 4L, 5L]) == 3L);\n    assert(candidate([-10L,\
    \ 4L, 6L, 1000L, 10L, 20L]) == 8.0);\n    assert(candidate([5L]) == 5L);\n   \
    \ assert(candidate([6L, 5L]) == 5.5);\n    assert(candidate([8L, 1L, 3L, 9L, 9L,\
    \ 2L, 7L]) == 7L);\n}\nvoid main(){}"
  status: SyntaxError
  stderr: '/tmp/tmp87rzp2qr.d(13): Error: no property `sort` for type `long[]`

    Failed: ["dmd", "-unittest", "-v", "-o-", "/tmp/tmp87rzp2qr.d", "-I/tmp"]

    '
  stdout: ''
  timestamp: 1660160691
- exit_code: 1
  program: "import std.math;\n/*\nReturn median of elements in the list l.\n    >>>\
    \ median([3L, 1L, 2L, 4L, 5L])\n    3L\n    >>> median([-10L, 4L, 6L, 1000L, 10L,\
    \ 20L])\n    15.0\n    \n*/\nfloat median(long[] l) \n{\n    long[] sorted = l.dup;\n\
    \    sorted.sort;\n    if (sorted.length % 2 == 1) {\n        return sorted[sorted.length\
    \ / 2];\n    } else {\n        return (sorted[sorted.length / 2 - 1] + sorted[sorted.length\
    \ / 2]) / 2.0;\n    }\n}\nunittest\n{\n    alias candidate = median;\n\n    assert(candidate([3L,\
    \ 1L, 2L, 4L, 5L]) == 3L);\n    assert(candidate([-10L, 4L, 6L, 1000L, 10L, 20L])\
    \ == 8.0);\n    assert(candidate([5L]) == 5L);\n    assert(candidate([6L, 5L])\
    \ == 5.5);\n    assert(candidate([8L, 1L, 3L, 9L, 9L, 2L, 7L]) == 7L);\n}\nvoid\
    \ main(){}"
  status: SyntaxError
  stderr: '/tmp/tmpkqzslih2.d(13): Error: no property `sort` for type `long[]`

    Failed: ["dmd", "-unittest", "-v", "-o-", "/tmp/tmpkqzslih2.d", "-I/tmp"]

    '
  stdout: ''
  timestamp: 1660160691
- exit_code: 1
  program: "import std.math;\n/*\nReturn median of elements in the list l.\n    >>>\
    \ median([3L, 1L, 2L, 4L, 5L])\n    3L\n    >>> median([-10L, 4L, 6L, 1000L, 10L,\
    \ 20L])\n    15.0\n    \n*/\nfloat median(long[] l) \n{\n    long[] sorted = l.dup;\n\
    \    sorted.sort;\n    if (sorted.length % 2 == 1)\n        return sorted[sorted.length\
    \ / 2];\n    else\n        return (sorted[sorted.length / 2 - 1] + sorted[sorted.length\
    \ / 2]) / 2.0;\n}\nunittest\n{\n    alias candidate = median;\n\n    assert(candidate([3L,\
    \ 1L, 2L, 4L, 5L]) == 3L);\n    assert(candidate([-10L, 4L, 6L, 1000L, 10L, 20L])\
    \ == 8.0);\n    assert(candidate([5L]) == 5L);\n    assert(candidate([6L, 5L])\
    \ == 5.5);\n    assert(candidate([8L, 1L, 3L, 9L, 9L, 2L, 7L]) == 7L);\n}\nvoid\
    \ main(){}"
  status: SyntaxError
  stderr: '/tmp/tmpx89ezo5q.d(13): Error: no property `sort` for type `long[]`

    Failed: ["dmd", "-unittest", "-v", "-o-", "/tmp/tmpx89ezo5q.d", "-I/tmp"]

    '
  stdout: ''
  timestamp: 1660160691
- exit_code: 1
  program: "import std.math;\n/*\nReturn median of elements in the list l.\n    >>>\
    \ median([3L, 1L, 2L, 4L, 5L])\n    3L\n    >>> median([-10L, 4L, 6L, 1000L, 10L,\
    \ 20L])\n    15.0\n    \n*/\nfloat median(long[] l) \n{\n    long[] sorted = l.sort();\n\
    \    int mid = sorted.length / 2;\n    if (sorted.length % 2 == 0) {\n       \
    \ return (sorted[mid] + sorted[mid - 1]) / 2.0;\n    } else {\n        return\
    \ sorted[mid];\n    }\n}\nunittest\n{\n    alias candidate = median;\n\n    assert(candidate([3L,\
    \ 1L, 2L, 4L, 5L]) == 3L);\n    assert(candidate([-10L, 4L, 6L, 1000L, 10L, 20L])\
    \ == 8.0);\n    assert(candidate([5L]) == 5L);\n    assert(candidate([6L, 5L])\
    \ == 5.5);\n    assert(candidate([8L, 1L, 3L, 9L, 9L, 2L, 7L]) == 7L);\n}\nvoid\
    \ main(){}"
  status: SyntaxError
  stderr: '/tmp/tmp0d8vidwk.d(12): Error: no property `sort` for type `long[]`

    /tmp/tmp0d8vidwk.d(13): Error: cannot implicitly convert expression `sorted.length
    / 2LU` of type `ulong` to `int`

    Failed: ["dmd", "-unittest", "-v", "-o-", "/tmp/tmp0d8vidwk.d", "-I/tmp"]

    '
  stdout: ''
  timestamp: 1660160691
- exit_code: 1
  program: "import std.math;\n/*\nReturn median of elements in the list l.\n    >>>\
    \ median([3L, 1L, 2L, 4L, 5L])\n    3L\n    >>> median([-10L, 4L, 6L, 1000L, 10L,\
    \ 20L])\n    15.0\n    \n*/\nfloat median(long[] l) \n{\n    long[] sorted = l.dup;\n\
    \    sorted.sort;\n    int n = sorted.length;\n    if (n % 2 == 1) \n    {\n \
    \       return sorted[n / 2];\n    } \n    else \n    {\n        return (sorted[n\
    \ / 2 - 1] + sorted[n / 2]) / 2.0;\n    }\n}\nunittest\n{\n    alias candidate\
    \ = median;\n\n    assert(candidate([3L, 1L, 2L, 4L, 5L]) == 3L);\n    assert(candidate([-10L,\
    \ 4L, 6L, 1000L, 10L, 20L]) == 8.0);\n    assert(candidate([5L]) == 5L);\n   \
    \ assert(candidate([6L, 5L]) == 5.5);\n    assert(candidate([8L, 1L, 3L, 9L, 9L,\
    \ 2L, 7L]) == 7L);\n}\nvoid main(){}"
  status: SyntaxError
  stderr: '/tmp/tmp6g5nvd39.d(13): Error: no property `sort` for type `long[]`

    /tmp/tmp6g5nvd39.d(14): Error: cannot implicitly convert expression `sorted.length`
    of type `ulong` to `int`

    Failed: ["dmd", "-unittest", "-v", "-o-", "/tmp/tmp6g5nvd39.d", "-I/tmp"]

    '
  stdout: ''
  timestamp: 1660160691
- exit_code: 1
  program: "import std.math;\n/*\nReturn median of elements in the list l.\n    >>>\
    \ median([3L, 1L, 2L, 4L, 5L])\n    3L\n    >>> median([-10L, 4L, 6L, 1000L, 10L,\
    \ 20L])\n    15.0\n    \n*/\nfloat median(long[] l) \n{\n    long[] l2 = l.dup;\n\
    \    l2.sort;\n    int n = l2.length;\n    if (n % 2 == 1)\n        return l2[n\
    \ / 2];\n    else\n        return (l2[n / 2 - 1] + l2[n / 2]) / 2.0;\n}\nunittest\n\
    {\n    alias candidate = median;\n\n    assert(candidate([3L, 1L, 2L, 4L, 5L])\
    \ == 3L);\n    assert(candidate([-10L, 4L, 6L, 1000L, 10L, 20L]) == 8.0);\n  \
    \  assert(candidate([5L]) == 5L);\n    assert(candidate([6L, 5L]) == 5.5);\n \
    \   assert(candidate([8L, 1L, 3L, 9L, 9L, 2L, 7L]) == 7L);\n}\nvoid main(){}"
  status: SyntaxError
  stderr: '/tmp/tmp8ukvdyvi.d(13): Error: no property `sort` for type `long[]`

    /tmp/tmp8ukvdyvi.d(14): Error: cannot implicitly convert expression `l2.length`
    of type `ulong` to `int`

    Failed: ["dmd", "-unittest", "-v", "-o-", "/tmp/tmp8ukvdyvi.d", "-I/tmp"]

    '
  stdout: ''
  timestamp: 1660160691
- exit_code: 1
  program: "import std.math;\n/*\nReturn median of elements in the list l.\n    >>>\
    \ median([3L, 1L, 2L, 4L, 5L])\n    3L\n    >>> median([-10L, 4L, 6L, 1000L, 10L,\
    \ 20L])\n    15.0\n    \n*/\nfloat median(long[] l) \n{\n    int n = l.length;\n\
    \    if (n == 0) \n    {\n        return 0.0;\n    }\n    else if (n == 1) \n\
    \    {\n        return l[0];\n    }\n    else if (n % 2 == 0) \n    {\n      \
    \  return (l[n / 2 - 1] + l[n / 2]) / 2.0;\n    }\n    else \n    {\n        return\
    \ l[n / 2];\n    }\n}\nunittest\n{\n    alias candidate = median;\n\n    assert(candidate([3L,\
    \ 1L, 2L, 4L, 5L]) == 3L);\n    assert(candidate([-10L, 4L, 6L, 1000L, 10L, 20L])\
    \ == 8.0);\n    assert(candidate([5L]) == 5L);\n    assert(candidate([6L, 5L])\
    \ == 5.5);\n    assert(candidate([8L, 1L, 3L, 9L, 9L, 2L, 7L]) == 7L);\n}\nvoid\
    \ main(){}"
  status: SyntaxError
  stderr: '/tmp/tmpp414tti7.d(12): Error: cannot implicitly convert expression `l.length`
    of type `ulong` to `int`

    Failed: ["dmd", "-unittest", "-v", "-o-", "/tmp/tmpp414tti7.d", "-I/tmp"]

    '
  stdout: ''
  timestamp: 1660160691
- exit_code: 1
  program: "import std.math;\n/*\nReturn median of elements in the list l.\n    >>>\
    \ median([3L, 1L, 2L, 4L, 5L])\n    3L\n    >>> median([-10L, 4L, 6L, 1000L, 10L,\
    \ 20L])\n    15.0\n    \n*/\nfloat median(long[] l) \n{\n    long[] l2 = l.dup;\n\
    \    l2.sort;\n    int len = l2.length;\n    if (len % 2 == 0) \n    {\n     \
    \   return (l2[len / 2 - 1] + l2[len / 2]) / 2.0;\n    } \n    else \n    {\n\
    \        return l2[len / 2];\n    }\n}\nunittest\n{\n    alias candidate = median;\n\
    \n    assert(candidate([3L, 1L, 2L, 4L, 5L]) == 3L);\n    assert(candidate([-10L,\
    \ 4L, 6L, 1000L, 10L, 20L]) == 8.0);\n    assert(candidate([5L]) == 5L);\n   \
    \ assert(candidate([6L, 5L]) == 5.5);\n    assert(candidate([8L, 1L, 3L, 9L, 9L,\
    \ 2L, 7L]) == 7L);\n}\nvoid main(){}"
  status: SyntaxError
  stderr: '/tmp/tmpyt23gca_.d(13): Error: no property `sort` for type `long[]`

    /tmp/tmpyt23gca_.d(14): Error: cannot implicitly convert expression `l2.length`
    of type `ulong` to `int`

    Failed: ["dmd", "-unittest", "-v", "-o-", "/tmp/tmpyt23gca_.d", "-I/tmp"]

    '
  stdout: ''
  timestamp: 1660160691
- exit_code: 1
  program: "import std.math;\n/*\nReturn median of elements in the list l.\n    >>>\
    \ median([3L, 1L, 2L, 4L, 5L])\n    3L\n    >>> median([-10L, 4L, 6L, 1000L, 10L,\
    \ 20L])\n    15.0\n    \n*/\nfloat median(long[] l) \n{\n    long[] sorted = l.dup;\n\
    \    sorted.sort;\n    if (sorted.length % 2 == 1)\n        return sorted[sorted.length\
    \ / 2];\n    else\n        return (sorted[sorted.length / 2 - 1] + sorted[sorted.length\
    \ / 2]) / 2.0;\n}\nunittest\n{\n    alias candidate = median;\n\n    assert(candidate([3L,\
    \ 1L, 2L, 4L, 5L]) == 3L);\n    assert(candidate([-10L, 4L, 6L, 1000L, 10L, 20L])\
    \ == 8.0);\n    assert(candidate([5L]) == 5L);\n    assert(candidate([6L, 5L])\
    \ == 5.5);\n    assert(candidate([8L, 1L, 3L, 9L, 9L, 2L, 7L]) == 7L);\n}\nvoid\
    \ main(){}"
  status: SyntaxError
  stderr: '/tmp/tmpx89ezo5q.d(13): Error: no property `sort` for type `long[]`

    Failed: ["dmd", "-unittest", "-v", "-o-", "/tmp/tmpx89ezo5q.d", "-I/tmp"]

    '
  stdout: ''
  timestamp: 1660160691
- exit_code: 1
  program: "import std.math;\n/*\nReturn median of elements in the list l.\n    >>>\
    \ median([3L, 1L, 2L, 4L, 5L])\n    3L\n    >>> median([-10L, 4L, 6L, 1000L, 10L,\
    \ 20L])\n    15.0\n    \n*/\nfloat median(long[] l) \n{\n    long[] sorted = l.dup;\n\
    \    sorted.sort;\n    if (sorted.length % 2 == 1)\n    {\n        return sorted[sorted.length\
    \ / 2];\n    }\n    else\n    {\n        return (sorted[sorted.length / 2 - 1]\
    \ + sorted[sorted.length / 2]) / 2.0;\n    }\n}\nunittest\n{\n    alias candidate\
    \ = median;\n\n    assert(candidate([3L, 1L, 2L, 4L, 5L]) == 3L);\n    assert(candidate([-10L,\
    \ 4L, 6L, 1000L, 10L, 20L]) == 8.0);\n    assert(candidate([5L]) == 5L);\n   \
    \ assert(candidate([6L, 5L]) == 5.5);\n    assert(candidate([8L, 1L, 3L, 9L, 9L,\
    \ 2L, 7L]) == 7L);\n}\nvoid main(){}"
  status: SyntaxError
  stderr: '/tmp/tmp87rzp2qr.d(13): Error: no property `sort` for type `long[]`

    Failed: ["dmd", "-unittest", "-v", "-o-", "/tmp/tmp87rzp2qr.d", "-I/tmp"]

    '
  stdout: ''
  timestamp: 1660160691
- exit_code: 1
  program: "import std.math;\n/*\nReturn median of elements in the list l.\n    >>>\
    \ median([3L, 1L, 2L, 4L, 5L])\n    3L\n    >>> median([-10L, 4L, 6L, 1000L, 10L,\
    \ 20L])\n    15.0\n    \n*/\nfloat median(long[] l) \n{\n    int n = l.length;\n\
    \    if (n == 0)\n    {\n        return 0.0;\n    }\n    else if (n == 1)\n  \
    \  {\n        return l[0];\n    }\n    else if (n == 2)\n    {\n        return\
    \ (l[0] + l[1]) / 2.0;\n    }\n    else\n    {\n        long[] l2 = l[0..n];\n\
    \        l2.sort();\n        if (n % 2 == 0)\n        {\n            return (l2[n\
    \ / 2 - 1] + l2[n / 2]) / 2.0;\n        }\n        else\n        {\n         \
    \   return l2[n / 2];\n        }\n    }\n}\nunittest\n{\n    alias candidate =\
    \ median;\n\n    assert(candidate([3L, 1L, 2L, 4L, 5L]) == 3L);\n    assert(candidate([-10L,\
    \ 4L, 6L, 1000L, 10L, 20L]) == 8.0);\n    assert(candidate([5L]) == 5L);\n   \
    \ assert(candidate([6L, 5L]) == 5.5);\n    assert(candidate([8L, 1L, 3L, 9L, 9L,\
    \ 2L, 7L]) == 7L);\n}\nvoid main(){}"
  status: SyntaxError
  stderr: '/tmp/tmpvi2bhudt.d(12): Error: cannot implicitly convert expression `l.length`
    of type `ulong` to `int`

    /tmp/tmpvi2bhudt.d(28): Error: no property `sort` for type `long[]`

    Failed: ["dmd", "-unittest", "-v", "-o-", "/tmp/tmpvi2bhudt.d", "-I/tmp"]

    '
  stdout: ''
  timestamp: 1660160691
- exit_code: 1
  program: "import std.math;\n/*\nReturn median of elements in the list l.\n    >>>\
    \ median([3L, 1L, 2L, 4L, 5L])\n    3L\n    >>> median([-10L, 4L, 6L, 1000L, 10L,\
    \ 20L])\n    15.0\n    \n*/\nfloat median(long[] l) \n{\n    int n = l.length;\n\
    \    if (n == 0) \n    {\n        return 0;\n    }\n    else if (n == 1) \n  \
    \  {\n        return l[0];\n    }\n    else if (n == 2) \n    {\n        return\
    \ (l[0] + l[1]) / 2.0;\n    }\n    else \n    {\n        long[] l2 = l[0..n];\n\
    \        sort(l2);\n        if (n % 2 == 0) \n        {\n            return (l2[n\
    \ / 2 - 1] + l2[n / 2]) / 2.0;\n        }\n        else \n        {\n        \
    \    return l2[n / 2];\n        }\n    }\n}\nunittest\n{\n    alias candidate\
    \ = median;\n\n    assert(candidate([3L, 1L, 2L, 4L, 5L]) == 3L);\n    assert(candidate([-10L,\
    \ 4L, 6L, 1000L, 10L, 20L]) == 8.0);\n    assert(candidate([5L]) == 5L);\n   \
    \ assert(candidate([6L, 5L]) == 5.5);\n    assert(candidate([8L, 1L, 3L, 9L, 9L,\
    \ 2L, 7L]) == 7L);\n}\nvoid main(){}"
  status: SyntaxError
  stderr: '/tmp/tmp2eolmbrh.d(12): Error: cannot implicitly convert expression `l.length`
    of type `ulong` to `int`

    /tmp/tmp2eolmbrh.d(28): Error: undefined identifier `sort`, did you mean function
    `sqrt`?

    Failed: ["dmd", "-unittest", "-v", "-o-", "/tmp/tmp2eolmbrh.d", "-I/tmp"]

    '
  stdout: ''
  timestamp: 1660160691
- exit_code: 1
  program: "import std.math;\n/*\nReturn median of elements in the list l.\n    >>>\
    \ median([3L, 1L, 2L, 4L, 5L])\n    3L\n    >>> median([-10L, 4L, 6L, 1000L, 10L,\
    \ 20L])\n    15.0\n    \n*/\nfloat median(long[] l) \n{\n    long[] sorted = l.dup;\n\
    \    sorted.sort;\n    int n = sorted.length;\n    if (n % 2 == 1) {\n       \
    \ return sorted[n / 2];\n    } else {\n        return (sorted[n / 2 - 1] + sorted[n\
    \ / 2]) / 2.0;\n    }\n}\nunittest\n{\n    alias candidate = median;\n\n    assert(candidate([3L,\
    \ 1L, 2L, 4L, 5L]) == 3L);\n    assert(candidate([-10L, 4L, 6L, 1000L, 10L, 20L])\
    \ == 8.0);\n    assert(candidate([5L]) == 5L);\n    assert(candidate([6L, 5L])\
    \ == 5.5);\n    assert(candidate([8L, 1L, 3L, 9L, 9L, 2L, 7L]) == 7L);\n}\nvoid\
    \ main(){}"
  status: SyntaxError
  stderr: '/tmp/tmp0t9cz4t1.d(13): Error: no property `sort` for type `long[]`

    /tmp/tmp0t9cz4t1.d(14): Error: cannot implicitly convert expression `sorted.length`
    of type `ulong` to `int`

    Failed: ["dmd", "-unittest", "-v", "-o-", "/tmp/tmp0t9cz4t1.d", "-I/tmp"]

    '
  stdout: ''
  timestamp: 1660160691
- exit_code: 1
  program: "import std.math;\n/*\nReturn median of elements in the list l.\n    >>>\
    \ median([3L, 1L, 2L, 4L, 5L])\n    3L\n    >>> median([-10L, 4L, 6L, 1000L, 10L,\
    \ 20L])\n    15.0\n    \n*/\nfloat median(long[] l) \n{\n    long[] l2 = l.dup;\n\
    \    l2.sort;\n    int n = l2.length;\n    if (n % 2 == 1) \n    {\n        return\
    \ l2[n / 2];\n    } \n    else \n    {\n        return (l2[n / 2 - 1] + l2[n /\
    \ 2]) / 2.0;\n    }\n}\nunittest\n{\n    alias candidate = median;\n\n    assert(candidate([3L,\
    \ 1L, 2L, 4L, 5L]) == 3L);\n    assert(candidate([-10L, 4L, 6L, 1000L, 10L, 20L])\
    \ == 8.0);\n    assert(candidate([5L]) == 5L);\n    assert(candidate([6L, 5L])\
    \ == 5.5);\n    assert(candidate([8L, 1L, 3L, 9L, 9L, 2L, 7L]) == 7L);\n}\nvoid\
    \ main(){}"
  status: SyntaxError
  stderr: '/tmp/tmpmcop16ad.d(13): Error: no property `sort` for type `long[]`

    /tmp/tmpmcop16ad.d(14): Error: cannot implicitly convert expression `l2.length`
    of type `ulong` to `int`

    Failed: ["dmd", "-unittest", "-v", "-o-", "/tmp/tmpmcop16ad.d", "-I/tmp"]

    '
  stdout: ''
  timestamp: 1660160691
- exit_code: 1
  program: "import std.math;\n/*\nReturn median of elements in the list l.\n    >>>\
    \ median([3L, 1L, 2L, 4L, 5L])\n    3L\n    >>> median([-10L, 4L, 6L, 1000L, 10L,\
    \ 20L])\n    15.0\n    \n*/\nfloat median(long[] l) \n{\n    int n = l.length;\n\
    \    if (n == 0) \n    {\n        return 0;\n    }\n    else if (n == 1) \n  \
    \  {\n        return l[0];\n    }\n    else if (n == 2) \n    {\n        return\
    \ (l[0] + l[1]) / 2.0;\n    }\n    else if (n % 2 == 1) \n    {\n        return\
    \ sort(l)[n / 2];\n    }\n    else \n    {\n        return (sort(l)[n / 2 - 1]\
    \ + sort(l)[n / 2]) / 2.0;\n    }\n}\nunittest\n{\n    alias candidate = median;\n\
    \n    assert(candidate([3L, 1L, 2L, 4L, 5L]) == 3L);\n    assert(candidate([-10L,\
    \ 4L, 6L, 1000L, 10L, 20L]) == 8.0);\n    assert(candidate([5L]) == 5L);\n   \
    \ assert(candidate([6L, 5L]) == 5.5);\n    assert(candidate([8L, 1L, 3L, 9L, 9L,\
    \ 2L, 7L]) == 7L);\n}\nvoid main(){}"
  status: SyntaxError
  stderr: '/tmp/tmpy_r1g7uj.d(12): Error: cannot implicitly convert expression `l.length`
    of type `ulong` to `int`

    /tmp/tmpy_r1g7uj.d(27): Error: undefined identifier `sort`, did you mean function
    `sqrt`?

    /tmp/tmpy_r1g7uj.d(31): Error: undefined identifier `sort`, did you mean function
    `sqrt`?

    /tmp/tmpy_r1g7uj.d(31): Error: undefined identifier `sort`, did you mean function
    `sqrt`?

    Failed: ["dmd", "-unittest", "-v", "-o-", "/tmp/tmpy_r1g7uj.d", "-I/tmp"]

    '
  stdout: ''
  timestamp: 1660160691
- exit_code: 1
  program: "import std.math;\n/*\nReturn median of elements in the list l.\n    >>>\
    \ median([3L, 1L, 2L, 4L, 5L])\n    3L\n    >>> median([-10L, 4L, 6L, 1000L, 10L,\
    \ 20L])\n    15.0\n    \n*/\nfloat median(long[] l) \n{\n    long[] sorted = l.dup;\n\
    \    sorted.sort;\n    if (sorted.length % 2 == 1) \n    {\n        return sorted[sorted.length\
    \ / 2];\n    } \n    else \n    {\n        return (sorted[sorted.length / 2 -\
    \ 1] + sorted[sorted.length / 2]) / 2.0;\n    }\n}\nunittest\n{\n    alias candidate\
    \ = median;\n\n    assert(candidate([3L, 1L, 2L, 4L, 5L]) == 3L);\n    assert(candidate([-10L,\
    \ 4L, 6L, 1000L, 10L, 20L]) == 8.0);\n    assert(candidate([5L]) == 5L);\n   \
    \ assert(candidate([6L, 5L]) == 5.5);\n    assert(candidate([8L, 1L, 3L, 9L, 9L,\
    \ 2L, 7L]) == 7L);\n}\nvoid main(){}"
  status: SyntaxError
  stderr: '/tmp/tmp14nivz02.d(13): Error: no property `sort` for type `long[]`

    Failed: ["dmd", "-unittest", "-v", "-o-", "/tmp/tmp14nivz02.d", "-I/tmp"]

    '
  stdout: ''
  timestamp: 1660160691
- exit_code: 1
  program: "import std.math;\n/*\nReturn median of elements in the list l.\n    >>>\
    \ median([3L, 1L, 2L, 4L, 5L])\n    3L\n    >>> median([-10L, 4L, 6L, 1000L, 10L,\
    \ 20L])\n    15.0\n    \n*/\nfloat median(long[] l) \n{\n    long[] sorted = l.dup.sort;\n\
    \    int mid = l.length / 2;\n    if (l.length % 2 == 0) {\n        return (sorted[mid]\
    \ + sorted[mid-1]) / 2.0;\n    } else {\n        return sorted[mid];\n    }\n\
    }\nunittest\n{\n    alias candidate = median;\n\n    assert(candidate([3L, 1L,\
    \ 2L, 4L, 5L]) == 3L);\n    assert(candidate([-10L, 4L, 6L, 1000L, 10L, 20L])\
    \ == 8.0);\n    assert(candidate([5L]) == 5L);\n    assert(candidate([6L, 5L])\
    \ == 5.5);\n    assert(candidate([8L, 1L, 3L, 9L, 9L, 2L, 7L]) == 7L);\n}\nvoid\
    \ main(){}"
  status: SyntaxError
  stderr: '/tmp/tmpwz8n3wrb.d(12): Error: no property `sort` for type `long[]`

    /tmp/tmpwz8n3wrb.d(13): Error: cannot implicitly convert expression `l.length
    / 2LU` of type `ulong` to `int`

    Failed: ["dmd", "-unittest", "-v", "-o-", "/tmp/tmpwz8n3wrb.d", "-I/tmp"]

    '
  stdout: ''
  timestamp: 1660160691
- exit_code: 1
  program: "import std.math;\n/*\nReturn median of elements in the list l.\n    >>>\
    \ median([3L, 1L, 2L, 4L, 5L])\n    3L\n    >>> median([-10L, 4L, 6L, 1000L, 10L,\
    \ 20L])\n    15.0\n    \n*/\nfloat median(long[] l) \n{\n    long[] sorted = l.dup;\n\
    \    sorted.sort;\n    long len = sorted.length;\n    if (len % 2 == 1)\n    \
    \    return sorted[len / 2];\n    else\n        return (sorted[len / 2 - 1] +\
    \ sorted[len / 2]) / 2.0;\n}\nunittest\n{\n    alias candidate = median;\n\n \
    \   assert(candidate([3L, 1L, 2L, 4L, 5L]) == 3L);\n    assert(candidate([-10L,\
    \ 4L, 6L, 1000L, 10L, 20L]) == 8.0);\n    assert(candidate([5L]) == 5L);\n   \
    \ assert(candidate([6L, 5L]) == 5.5);\n    assert(candidate([8L, 1L, 3L, 9L, 9L,\
    \ 2L, 7L]) == 7L);\n}\nvoid main(){}"
  status: SyntaxError
  stderr: '/tmp/tmp5z09j23o.d(13): Error: no property `sort` for type `long[]`

    Failed: ["dmd", "-unittest", "-v", "-o-", "/tmp/tmp5z09j23o.d", "-I/tmp"]

    '
  stdout: ''
  timestamp: 1660160691
- exit_code: 1
  program: "import std.math;\n/*\nReturn median of elements in the list l.\n    >>>\
    \ median([3L, 1L, 2L, 4L, 5L])\n    3L\n    >>> median([-10L, 4L, 6L, 1000L, 10L,\
    \ 20L])\n    15.0\n    \n*/\nfloat median(long[] l) \n{\n    long[] t = l.dup;\n\
    \    t.sort;\n    int n = t.length;\n    if (n % 2 == 1)\n        return t[n /\
    \ 2];\n    else\n        return (t[n / 2 - 1] + t[n / 2]) / 2.0;\n}\nunittest\n\
    {\n    alias candidate = median;\n\n    assert(candidate([3L, 1L, 2L, 4L, 5L])\
    \ == 3L);\n    assert(candidate([-10L, 4L, 6L, 1000L, 10L, 20L]) == 8.0);\n  \
    \  assert(candidate([5L]) == 5L);\n    assert(candidate([6L, 5L]) == 5.5);\n \
    \   assert(candidate([8L, 1L, 3L, 9L, 9L, 2L, 7L]) == 7L);\n}\nvoid main(){}"
  status: SyntaxError
  stderr: '/tmp/tmp82syl17v.d(13): Error: no property `sort` for type `long[]`

    /tmp/tmp82syl17v.d(14): Error: cannot implicitly convert expression `t.length`
    of type `ulong` to `int`

    Failed: ["dmd", "-unittest", "-v", "-o-", "/tmp/tmp82syl17v.d", "-I/tmp"]

    '
  stdout: ''
  timestamp: 1660160691
- exit_code: 1
  program: "import std.math;\n/*\nReturn median of elements in the list l.\n    >>>\
    \ median([3L, 1L, 2L, 4L, 5L])\n    3L\n    >>> median([-10L, 4L, 6L, 1000L, 10L,\
    \ 20L])\n    15.0\n    \n*/\nfloat median(long[] l) \n{\n    long[] sorted = l.dup;\n\
    \    sorted.sort;\n    if (sorted.length % 2 == 1)\n    {\n        return sorted[sorted.length\
    \ / 2];\n    }\n    else\n    {\n        return (sorted[sorted.length / 2 - 1]\
    \ + sorted[sorted.length / 2]) / 2.0;\n    }\n}\nunittest\n{\n    alias candidate\
    \ = median;\n\n    assert(candidate([3L, 1L, 2L, 4L, 5L]) == 3L);\n    assert(candidate([-10L,\
    \ 4L, 6L, 1000L, 10L, 20L]) == 8.0);\n    assert(candidate([5L]) == 5L);\n   \
    \ assert(candidate([6L, 5L]) == 5.5);\n    assert(candidate([8L, 1L, 3L, 9L, 9L,\
    \ 2L, 7L]) == 7L);\n}\nvoid main(){}"
  status: SyntaxError
  stderr: '/tmp/tmp87rzp2qr.d(13): Error: no property `sort` for type `long[]`

    Failed: ["dmd", "-unittest", "-v", "-o-", "/tmp/tmp87rzp2qr.d", "-I/tmp"]

    '
  stdout: ''
  timestamp: 1660160691
- exit_code: 1
  program: "import std.math;\n/*\nReturn median of elements in the list l.\n    >>>\
    \ median([3L, 1L, 2L, 4L, 5L])\n    3L\n    >>> median([-10L, 4L, 6L, 1000L, 10L,\
    \ 20L])\n    15.0\n    \n*/\nfloat median(long[] l) \n{\n    long[] sorted = l.dup;\n\
    \    sorted.sort;\n    if (sorted.length % 2 == 1)\n    {\n        return sorted[sorted.length\
    \ / 2];\n    }\n    else\n    {\n        return (sorted[sorted.length / 2 - 1]\
    \ + sorted[sorted.length / 2]) / 2.0;\n    }\n}\nunittest\n{\n    alias candidate\
    \ = median;\n\n    assert(candidate([3L, 1L, 2L, 4L, 5L]) == 3L);\n    assert(candidate([-10L,\
    \ 4L, 6L, 1000L, 10L, 20L]) == 8.0);\n    assert(candidate([5L]) == 5L);\n   \
    \ assert(candidate([6L, 5L]) == 5.5);\n    assert(candidate([8L, 1L, 3L, 9L, 9L,\
    \ 2L, 7L]) == 7L);\n}\nvoid main(){}"
  status: SyntaxError
  stderr: '/tmp/tmp87rzp2qr.d(13): Error: no property `sort` for type `long[]`

    Failed: ["dmd", "-unittest", "-v", "-o-", "/tmp/tmp87rzp2qr.d", "-I/tmp"]

    '
  stdout: ''
  timestamp: 1660160691
- exit_code: 1
  program: "import std.math;\n/*\nReturn median of elements in the list l.\n    >>>\
    \ median([3L, 1L, 2L, 4L, 5L])\n    3L\n    >>> median([-10L, 4L, 6L, 1000L, 10L,\
    \ 20L])\n    15.0\n    \n*/\nfloat median(long[] l) \n{\n    long[] sorted = l.sort();\n\
    \    int n = l.length;\n    if (n % 2 == 1)\n        return sorted[n / 2];\n \
    \   else\n        return (sorted[n / 2 - 1] + sorted[n / 2]) / 2.0;\n}\nunittest\n\
    {\n    alias candidate = median;\n\n    assert(candidate([3L, 1L, 2L, 4L, 5L])\
    \ == 3L);\n    assert(candidate([-10L, 4L, 6L, 1000L, 10L, 20L]) == 8.0);\n  \
    \  assert(candidate([5L]) == 5L);\n    assert(candidate([6L, 5L]) == 5.5);\n \
    \   assert(candidate([8L, 1L, 3L, 9L, 9L, 2L, 7L]) == 7L);\n}\nvoid main(){}"
  status: SyntaxError
  stderr: '/tmp/tmpuhr99mjv.d(12): Error: no property `sort` for type `long[]`

    /tmp/tmpuhr99mjv.d(13): Error: cannot implicitly convert expression `l.length`
    of type `ulong` to `int`

    Failed: ["dmd", "-unittest", "-v", "-o-", "/tmp/tmpuhr99mjv.d", "-I/tmp"]

    '
  stdout: ''
  timestamp: 1660160691
- exit_code: 1
  program: "import std.math;\n/*\nReturn median of elements in the list l.\n    >>>\
    \ median([3L, 1L, 2L, 4L, 5L])\n    3L\n    >>> median([-10L, 4L, 6L, 1000L, 10L,\
    \ 20L])\n    15.0\n    \n*/\nfloat median(long[] l) \n{\n    long[] sorted = l.dup;\n\
    \    sorted.sort;\n    int n = sorted.length;\n    if (n % 2 == 1) \n    {\n \
    \       return sorted[n / 2];\n    } \n    else \n    {\n        return (sorted[n\
    \ / 2 - 1] + sorted[n / 2]) / 2.0;\n    }\n}\nunittest\n{\n    alias candidate\
    \ = median;\n\n    assert(candidate([3L, 1L, 2L, 4L, 5L]) == 3L);\n    assert(candidate([-10L,\
    \ 4L, 6L, 1000L, 10L, 20L]) == 8.0);\n    assert(candidate([5L]) == 5L);\n   \
    \ assert(candidate([6L, 5L]) == 5.5);\n    assert(candidate([8L, 1L, 3L, 9L, 9L,\
    \ 2L, 7L]) == 7L);\n}\nvoid main(){}"
  status: SyntaxError
  stderr: '/tmp/tmp6g5nvd39.d(13): Error: no property `sort` for type `long[]`

    /tmp/tmp6g5nvd39.d(14): Error: cannot implicitly convert expression `sorted.length`
    of type `ulong` to `int`

    Failed: ["dmd", "-unittest", "-v", "-o-", "/tmp/tmp6g5nvd39.d", "-I/tmp"]

    '
  stdout: ''
  timestamp: 1660160691
- exit_code: 1
  program: "import std.math;\n/*\nReturn median of elements in the list l.\n    >>>\
    \ median([3L, 1L, 2L, 4L, 5L])\n    3L\n    >>> median([-10L, 4L, 6L, 1000L, 10L,\
    \ 20L])\n    15.0\n    \n*/\nfloat median(long[] l) \n{\n    int n = l.length;\n\
    \    if (n == 0) \n    {\n        return 0.0;\n    }\n    else \n    {\n     \
    \   long[] l2 = l.dup;\n        l2.sort;\n        if (n % 2 == 0) \n        {\n\
    \            return (l2[n / 2 - 1] + l2[n / 2]) / 2.0;\n        }\n        else\
    \ \n        {\n            return l2[n / 2];\n        }\n    }\n}\nunittest\n\
    {\n    alias candidate = median;\n\n    assert(candidate([3L, 1L, 2L, 4L, 5L])\
    \ == 3L);\n    assert(candidate([-10L, 4L, 6L, 1000L, 10L, 20L]) == 8.0);\n  \
    \  assert(candidate([5L]) == 5L);\n    assert(candidate([6L, 5L]) == 5.5);\n \
    \   assert(candidate([8L, 1L, 3L, 9L, 9L, 2L, 7L]) == 7L);\n}\nvoid main(){}"
  status: SyntaxError
  stderr: '/tmp/tmp9ma2ik_x.d(12): Error: cannot implicitly convert expression `l.length`
    of type `ulong` to `int`

    /tmp/tmp9ma2ik_x.d(20): Error: no property `sort` for type `long[]`

    Failed: ["dmd", "-unittest", "-v", "-o-", "/tmp/tmp9ma2ik_x.d", "-I/tmp"]

    '
  stdout: ''
  timestamp: 1660160691
- exit_code: 1
  program: "import std.math;\n/*\nReturn median of elements in the list l.\n    >>>\
    \ median([3L, 1L, 2L, 4L, 5L])\n    3L\n    >>> median([-10L, 4L, 6L, 1000L, 10L,\
    \ 20L])\n    15.0\n    \n*/\nfloat median(long[] l) \n{\n    int n = l.length;\n\
    \    if (n == 0) \n    {\n        return 0.0;\n    }\n    else if (n == 1) \n\
    \    {\n        return l[0];\n    }\n    else \n    {\n        sort(l);\n    \
    \    if (n % 2 == 0) \n        {\n            return (l[n / 2 - 1] + l[n / 2])\
    \ / 2.0;\n        }\n        else \n        {\n            return l[n / 2];\n\
    \        }\n    }\n}\nunittest\n{\n    alias candidate = median;\n\n    assert(candidate([3L,\
    \ 1L, 2L, 4L, 5L]) == 3L);\n    assert(candidate([-10L, 4L, 6L, 1000L, 10L, 20L])\
    \ == 8.0);\n    assert(candidate([5L]) == 5L);\n    assert(candidate([6L, 5L])\
    \ == 5.5);\n    assert(candidate([8L, 1L, 3L, 9L, 9L, 2L, 7L]) == 7L);\n}\nvoid\
    \ main(){}"
  status: SyntaxError
  stderr: '/tmp/tmpra0n92j4.d(12): Error: cannot implicitly convert expression `l.length`
    of type `ulong` to `int`

    /tmp/tmpra0n92j4.d(23): Error: undefined identifier `sort`, did you mean function
    `sqrt`?

    Failed: ["dmd", "-unittest", "-v", "-o-", "/tmp/tmpra0n92j4.d", "-I/tmp"]

    '
  stdout: ''
  timestamp: 1660160691
- exit_code: 1
  program: "import std.math;\n/*\nReturn median of elements in the list l.\n    >>>\
    \ median([3L, 1L, 2L, 4L, 5L])\n    3L\n    >>> median([-10L, 4L, 6L, 1000L, 10L,\
    \ 20L])\n    15.0\n    \n*/\nfloat median(long[] l) \n{\n    long[] sorted = l.dup;\n\
    \    sorted.sort;\n    int n = sorted.length;\n    if (n % 2 == 1)\n        return\
    \ sorted[n / 2];\n    else\n        return (sorted[n / 2 - 1] + sorted[n / 2])\
    \ / 2.0;\n}\nunittest\n{\n    alias candidate = median;\n\n    assert(candidate([3L,\
    \ 1L, 2L, 4L, 5L]) == 3L);\n    assert(candidate([-10L, 4L, 6L, 1000L, 10L, 20L])\
    \ == 8.0);\n    assert(candidate([5L]) == 5L);\n    assert(candidate([6L, 5L])\
    \ == 5.5);\n    assert(candidate([8L, 1L, 3L, 9L, 9L, 2L, 7L]) == 7L);\n}\nvoid\
    \ main(){}"
  status: SyntaxError
  stderr: '/tmp/tmpwnuehx69.d(13): Error: no property `sort` for type `long[]`

    /tmp/tmpwnuehx69.d(14): Error: cannot implicitly convert expression `sorted.length`
    of type `ulong` to `int`

    Failed: ["dmd", "-unittest", "-v", "-o-", "/tmp/tmpwnuehx69.d", "-I/tmp"]

    '
  stdout: ''
  timestamp: 1660160691
- exit_code: 1
  program: "import std.math;\n/*\nReturn median of elements in the list l.\n    >>>\
    \ median([3L, 1L, 2L, 4L, 5L])\n    3L\n    >>> median([-10L, 4L, 6L, 1000L, 10L,\
    \ 20L])\n    15.0\n    \n*/\nfloat median(long[] l) \n{\n    long[] sorted = l.dup.sort;\n\
    \    int n = l.length;\n    if (n % 2 == 1)\n        return sorted[n / 2];\n \
    \   else\n        return (sorted[n / 2 - 1] + sorted[n / 2]) / 2.0;\n}\nunittest\n\
    {\n    alias candidate = median;\n\n    assert(candidate([3L, 1L, 2L, 4L, 5L])\
    \ == 3L);\n    assert(candidate([-10L, 4L, 6L, 1000L, 10L, 20L]) == 8.0);\n  \
    \  assert(candidate([5L]) == 5L);\n    assert(candidate([6L, 5L]) == 5.5);\n \
    \   assert(candidate([8L, 1L, 3L, 9L, 9L, 2L, 7L]) == 7L);\n}\nvoid main(){}"
  status: SyntaxError
  stderr: '/tmp/tmphwkhegbq.d(12): Error: no property `sort` for type `long[]`

    /tmp/tmphwkhegbq.d(13): Error: cannot implicitly convert expression `l.length`
    of type `ulong` to `int`

    Failed: ["dmd", "-unittest", "-v", "-o-", "/tmp/tmphwkhegbq.d", "-I/tmp"]

    '
  stdout: ''
  timestamp: 1660160691
- exit_code: 1
  program: "import std.math;\n/*\nReturn median of elements in the list l.\n    >>>\
    \ median([3L, 1L, 2L, 4L, 5L])\n    3L\n    >>> median([-10L, 4L, 6L, 1000L, 10L,\
    \ 20L])\n    15.0\n    \n*/\nfloat median(long[] l) \n{\n    long[] sorted = l.dup;\n\
    \    sorted.sort;\n    int n = sorted.length;\n    if (n % 2 == 1)\n        return\
    \ sorted[n / 2];\n    else\n        return (sorted[n / 2 - 1] + sorted[n / 2])\
    \ / 2.0;\n}\nunittest\n{\n    alias candidate = median;\n\n    assert(candidate([3L,\
    \ 1L, 2L, 4L, 5L]) == 3L);\n    assert(candidate([-10L, 4L, 6L, 1000L, 10L, 20L])\
    \ == 8.0);\n    assert(candidate([5L]) == 5L);\n    assert(candidate([6L, 5L])\
    \ == 5.5);\n    assert(candidate([8L, 1L, 3L, 9L, 9L, 2L, 7L]) == 7L);\n}\nvoid\
    \ main(){}"
  status: SyntaxError
  stderr: '/tmp/tmpwnuehx69.d(13): Error: no property `sort` for type `long[]`

    /tmp/tmpwnuehx69.d(14): Error: cannot implicitly convert expression `sorted.length`
    of type `ulong` to `int`

    Failed: ["dmd", "-unittest", "-v", "-o-", "/tmp/tmpwnuehx69.d", "-I/tmp"]

    '
  stdout: ''
  timestamp: 1660160691
- exit_code: 1
  program: "import std.math;\n/*\nReturn median of elements in the list l.\n    >>>\
    \ median([3L, 1L, 2L, 4L, 5L])\n    3L\n    >>> median([-10L, 4L, 6L, 1000L, 10L,\
    \ 20L])\n    15.0\n    \n*/\nfloat median(long[] l) \n{\n    long[] sorted = l.dup;\n\
    \    sorted.sort;\n    if (sorted.length % 2 == 1) \n    {\n        return sorted[sorted.length\
    \ / 2];\n    } \n    else \n    {\n        return (sorted[sorted.length / 2 -\
    \ 1] + sorted[sorted.length / 2]) / 2.0;\n    }\n}\nunittest\n{\n    alias candidate\
    \ = median;\n\n    assert(candidate([3L, 1L, 2L, 4L, 5L]) == 3L);\n    assert(candidate([-10L,\
    \ 4L, 6L, 1000L, 10L, 20L]) == 8.0);\n    assert(candidate([5L]) == 5L);\n   \
    \ assert(candidate([6L, 5L]) == 5.5);\n    assert(candidate([8L, 1L, 3L, 9L, 9L,\
    \ 2L, 7L]) == 7L);\n}\nvoid main(){}"
  status: SyntaxError
  stderr: '/tmp/tmp14nivz02.d(13): Error: no property `sort` for type `long[]`

    Failed: ["dmd", "-unittest", "-v", "-o-", "/tmp/tmp14nivz02.d", "-I/tmp"]

    '
  stdout: ''
  timestamp: 1660160691
- exit_code: 1
  program: "import std.math;\n/*\nReturn median of elements in the list l.\n    >>>\
    \ median([3L, 1L, 2L, 4L, 5L])\n    3L\n    >>> median([-10L, 4L, 6L, 1000L, 10L,\
    \ 20L])\n    15.0\n    \n*/\nfloat median(long[] l) \n{\n    long[] sorted = l.dup;\n\
    \    sorted.sort;\n    int len = sorted.length;\n    if (len % 2 == 0) \n    {\n\
    \        return (sorted[len / 2 - 1] + sorted[len / 2]) / 2.0;\n    } \n    else\
    \ \n    {\n        return sorted[len / 2];\n    }\n}\nunittest\n{\n    alias candidate\
    \ = median;\n\n    assert(candidate([3L, 1L, 2L, 4L, 5L]) == 3L);\n    assert(candidate([-10L,\
    \ 4L, 6L, 1000L, 10L, 20L]) == 8.0);\n    assert(candidate([5L]) == 5L);\n   \
    \ assert(candidate([6L, 5L]) == 5.5);\n    assert(candidate([8L, 1L, 3L, 9L, 9L,\
    \ 2L, 7L]) == 7L);\n}\nvoid main(){}"
  status: SyntaxError
  stderr: '/tmp/tmp2d8pw0z5.d(13): Error: no property `sort` for type `long[]`

    /tmp/tmp2d8pw0z5.d(14): Error: cannot implicitly convert expression `sorted.length`
    of type `ulong` to `int`

    Failed: ["dmd", "-unittest", "-v", "-o-", "/tmp/tmp2d8pw0z5.d", "-I/tmp"]

    '
  stdout: ''
  timestamp: 1660160691
- exit_code: 1
  program: "import std.math;\n/*\nReturn median of elements in the list l.\n    >>>\
    \ median([3L, 1L, 2L, 4L, 5L])\n    3L\n    >>> median([-10L, 4L, 6L, 1000L, 10L,\
    \ 20L])\n    15.0\n    \n*/\nfloat median(long[] l) \n{\n    long[] sorted = l[];\n\
    \    sort(sorted);\n    int n = l.length;\n    if (n % 2 == 1)\n        return\
    \ sorted[n / 2];\n    else\n        return (sorted[n / 2 - 1] + sorted[n / 2])\
    \ / 2.0;\n}\nunittest\n{\n    alias candidate = median;\n\n    assert(candidate([3L,\
    \ 1L, 2L, 4L, 5L]) == 3L);\n    assert(candidate([-10L, 4L, 6L, 1000L, 10L, 20L])\
    \ == 8.0);\n    assert(candidate([5L]) == 5L);\n    assert(candidate([6L, 5L])\
    \ == 5.5);\n    assert(candidate([8L, 1L, 3L, 9L, 9L, 2L, 7L]) == 7L);\n}\nvoid\
    \ main(){}"
  status: SyntaxError
  stderr: '/tmp/tmpe3yo_oyf.d(13): Error: undefined identifier `sort`, did you mean
    function `sqrt`?

    /tmp/tmpe3yo_oyf.d(14): Error: cannot implicitly convert expression `l.length`
    of type `ulong` to `int`

    Failed: ["dmd", "-unittest", "-v", "-o-", "/tmp/tmpe3yo_oyf.d", "-I/tmp"]

    '
  stdout: ''
  timestamp: 1660160691
- exit_code: 1
  program: "import std.math;\n/*\nReturn median of elements in the list l.\n    >>>\
    \ median([3L, 1L, 2L, 4L, 5L])\n    3L\n    >>> median([-10L, 4L, 6L, 1000L, 10L,\
    \ 20L])\n    15.0\n    \n*/\nfloat median(long[] l) \n{\n    if (l.length == 0)\
    \ \n    {\n        return 0.0;\n    }\n    else \n    {\n        long[] sorted\
    \ = l.dup;\n        sorted.sort;\n        if (sorted.length % 2 == 0) \n     \
    \   {\n            return (sorted[sorted.length / 2 - 1] + sorted[sorted.length\
    \ / 2]) / 2.0;\n        }\n        else \n        {\n            return sorted[sorted.length\
    \ / 2];\n        }\n    }\n}\nunittest\n{\n    alias candidate = median;\n\n \
    \   assert(candidate([3L, 1L, 2L, 4L, 5L]) == 3L);\n    assert(candidate([-10L,\
    \ 4L, 6L, 1000L, 10L, 20L]) == 8.0);\n    assert(candidate([5L]) == 5L);\n   \
    \ assert(candidate([6L, 5L]) == 5.5);\n    assert(candidate([8L, 1L, 3L, 9L, 9L,\
    \ 2L, 7L]) == 7L);\n}\nvoid main(){}"
  status: SyntaxError
  stderr: '/tmp/tmpvddqc_nd.d(19): Error: no property `sort` for type `long[]`

    Failed: ["dmd", "-unittest", "-v", "-o-", "/tmp/tmpvddqc_nd.d", "-I/tmp"]

    '
  stdout: ''
  timestamp: 1660160691
- exit_code: 1
  program: "import std.math;\n/*\nReturn median of elements in the list l.\n    >>>\
    \ median([3L, 1L, 2L, 4L, 5L])\n    3L\n    >>> median([-10L, 4L, 6L, 1000L, 10L,\
    \ 20L])\n    15.0\n    \n*/\nfloat median(long[] l) \n{\n    long[] sorted = l.dup;\n\
    \    sorted.sort;\n    int n = sorted.length;\n    if (n % 2 == 1)\n        return\
    \ sorted[n / 2];\n    else\n        return (sorted[n / 2 - 1] + sorted[n / 2])\
    \ / 2.0;\n}\nunittest\n{\n    alias candidate = median;\n\n    assert(candidate([3L,\
    \ 1L, 2L, 4L, 5L]) == 3L);\n    assert(candidate([-10L, 4L, 6L, 1000L, 10L, 20L])\
    \ == 8.0);\n    assert(candidate([5L]) == 5L);\n    assert(candidate([6L, 5L])\
    \ == 5.5);\n    assert(candidate([8L, 1L, 3L, 9L, 9L, 2L, 7L]) == 7L);\n}\nvoid\
    \ main(){}"
  status: SyntaxError
  stderr: '/tmp/tmpwnuehx69.d(13): Error: no property `sort` for type `long[]`

    /tmp/tmpwnuehx69.d(14): Error: cannot implicitly convert expression `sorted.length`
    of type `ulong` to `int`

    Failed: ["dmd", "-unittest", "-v", "-o-", "/tmp/tmpwnuehx69.d", "-I/tmp"]

    '
  stdout: ''
  timestamp: 1660160691
- exit_code: 1
  program: "import std.math;\n/*\nReturn median of elements in the list l.\n    >>>\
    \ median([3L, 1L, 2L, 4L, 5L])\n    3L\n    >>> median([-10L, 4L, 6L, 1000L, 10L,\
    \ 20L])\n    15.0\n    \n*/\nfloat median(long[] l) \n{\n    long[] sorted = l.dup;\n\
    \    sorted.sort;\n    if (sorted.length % 2 == 1)\n    {\n        return sorted[sorted.length\
    \ / 2];\n    }\n    else\n    {\n        return (sorted[sorted.length / 2 - 1]\
    \ + sorted[sorted.length / 2]) / 2.0;\n    }\n}\nunittest\n{\n    alias candidate\
    \ = median;\n\n    assert(candidate([3L, 1L, 2L, 4L, 5L]) == 3L);\n    assert(candidate([-10L,\
    \ 4L, 6L, 1000L, 10L, 20L]) == 8.0);\n    assert(candidate([5L]) == 5L);\n   \
    \ assert(candidate([6L, 5L]) == 5.5);\n    assert(candidate([8L, 1L, 3L, 9L, 9L,\
    \ 2L, 7L]) == 7L);\n}\nvoid main(){}"
  status: SyntaxError
  stderr: '/tmp/tmp87rzp2qr.d(13): Error: no property `sort` for type `long[]`

    Failed: ["dmd", "-unittest", "-v", "-o-", "/tmp/tmp87rzp2qr.d", "-I/tmp"]

    '
  stdout: ''
  timestamp: 1660160691
- exit_code: 1
  program: "import std.math;\n/*\nReturn median of elements in the list l.\n    >>>\
    \ median([3L, 1L, 2L, 4L, 5L])\n    3L\n    >>> median([-10L, 4L, 6L, 1000L, 10L,\
    \ 20L])\n    15.0\n    \n*/\nfloat median(long[] l) \n{\n    long[] sorted = l.dup;\n\
    \    sorted.sort;\n    long len = sorted.length;\n    if (len % 2 == 1)\n    \
    \    return sorted[len / 2];\n    else\n        return (sorted[len / 2 - 1] +\
    \ sorted[len / 2]) / 2.0;\n}\nunittest\n{\n    alias candidate = median;\n\n \
    \   assert(candidate([3L, 1L, 2L, 4L, 5L]) == 3L);\n    assert(candidate([-10L,\
    \ 4L, 6L, 1000L, 10L, 20L]) == 8.0);\n    assert(candidate([5L]) == 5L);\n   \
    \ assert(candidate([6L, 5L]) == 5.5);\n    assert(candidate([8L, 1L, 3L, 9L, 9L,\
    \ 2L, 7L]) == 7L);\n}\nvoid main(){}"
  status: SyntaxError
  stderr: '/tmp/tmp5z09j23o.d(13): Error: no property `sort` for type `long[]`

    Failed: ["dmd", "-unittest", "-v", "-o-", "/tmp/tmp5z09j23o.d", "-I/tmp"]

    '
  stdout: ''
  timestamp: 1660160691
- exit_code: 1
  program: "import std.math;\n/*\nReturn median of elements in the list l.\n    >>>\
    \ median([3L, 1L, 2L, 4L, 5L])\n    3L\n    >>> median([-10L, 4L, 6L, 1000L, 10L,\
    \ 20L])\n    15.0\n    \n*/\nfloat median(long[] l) \n{\n    long[] sorted = l.sort();\n\
    \    int n = l.length;\n    if (n % 2 == 1) \n    {\n        return sorted[n /\
    \ 2];\n    } \n    else \n    {\n        return (sorted[n / 2 - 1] + sorted[n\
    \ / 2]) / 2.0;\n    }\n}\nunittest\n{\n    alias candidate = median;\n\n    assert(candidate([3L,\
    \ 1L, 2L, 4L, 5L]) == 3L);\n    assert(candidate([-10L, 4L, 6L, 1000L, 10L, 20L])\
    \ == 8.0);\n    assert(candidate([5L]) == 5L);\n    assert(candidate([6L, 5L])\
    \ == 5.5);\n    assert(candidate([8L, 1L, 3L, 9L, 9L, 2L, 7L]) == 7L);\n}\nvoid\
    \ main(){}"
  status: SyntaxError
  stderr: '/tmp/tmpa_lgrkyc.d(12): Error: no property `sort` for type `long[]`

    /tmp/tmpa_lgrkyc.d(13): Error: cannot implicitly convert expression `l.length`
    of type `ulong` to `int`

    Failed: ["dmd", "-unittest", "-v", "-o-", "/tmp/tmpa_lgrkyc.d", "-I/tmp"]

    '
  stdout: ''
  timestamp: 1660160691
- exit_code: 1
  program: "import std.math;\n/*\nReturn median of elements in the list l.\n    >>>\
    \ median([3L, 1L, 2L, 4L, 5L])\n    3L\n    >>> median([-10L, 4L, 6L, 1000L, 10L,\
    \ 20L])\n    15.0\n    \n*/\nfloat median(long[] l) \n{\n    long[] sorted = l.dup;\n\
    \    sorted.sort;\n    if (sorted.length % 2 == 1)\n        return sorted[sorted.length\
    \ / 2];\n    else\n        return (sorted[sorted.length / 2 - 1] + sorted[sorted.length\
    \ / 2]) / 2.0;\n}\nunittest\n{\n    alias candidate = median;\n\n    assert(candidate([3L,\
    \ 1L, 2L, 4L, 5L]) == 3L);\n    assert(candidate([-10L, 4L, 6L, 1000L, 10L, 20L])\
    \ == 8.0);\n    assert(candidate([5L]) == 5L);\n    assert(candidate([6L, 5L])\
    \ == 5.5);\n    assert(candidate([8L, 1L, 3L, 9L, 9L, 2L, 7L]) == 7L);\n}\nvoid\
    \ main(){}"
  status: SyntaxError
  stderr: '/tmp/tmpx89ezo5q.d(13): Error: no property `sort` for type `long[]`

    Failed: ["dmd", "-unittest", "-v", "-o-", "/tmp/tmpx89ezo5q.d", "-I/tmp"]

    '
  stdout: ''
  timestamp: 1660160691
- exit_code: 1
  program: "import std.math;\n/*\nReturn median of elements in the list l.\n    >>>\
    \ median([3L, 1L, 2L, 4L, 5L])\n    3L\n    >>> median([-10L, 4L, 6L, 1000L, 10L,\
    \ 20L])\n    15.0\n    \n*/\nfloat median(long[] l) \n{\n    long[] sorted = l.dup;\n\
    \    sorted.sort;\n    if (sorted.length % 2 == 1)\n        return sorted[sorted.length\
    \ / 2];\n    else\n        return (sorted[sorted.length / 2 - 1] + sorted[sorted.length\
    \ / 2]) / 2.0;\n}\nunittest\n{\n    alias candidate = median;\n\n    assert(candidate([3L,\
    \ 1L, 2L, 4L, 5L]) == 3L);\n    assert(candidate([-10L, 4L, 6L, 1000L, 10L, 20L])\
    \ == 8.0);\n    assert(candidate([5L]) == 5L);\n    assert(candidate([6L, 5L])\
    \ == 5.5);\n    assert(candidate([8L, 1L, 3L, 9L, 9L, 2L, 7L]) == 7L);\n}\nvoid\
    \ main(){}"
  status: SyntaxError
  stderr: '/tmp/tmpx89ezo5q.d(13): Error: no property `sort` for type `long[]`

    Failed: ["dmd", "-unittest", "-v", "-o-", "/tmp/tmpx89ezo5q.d", "-I/tmp"]

    '
  stdout: ''
  timestamp: 1660160691
- exit_code: 1
  program: "import std.math;\n/*\nReturn median of elements in the list l.\n    >>>\
    \ median([3L, 1L, 2L, 4L, 5L])\n    3L\n    >>> median([-10L, 4L, 6L, 1000L, 10L,\
    \ 20L])\n    15.0\n    \n*/\nfloat median(long[] l) \n{\n    long[] sorted = l.dup;\n\
    \    sorted.sort;\n    if (sorted.length % 2 == 1) \n    {\n        return sorted[sorted.length\
    \ / 2];\n    } \n    else \n    {\n        return (sorted[sorted.length / 2 -\
    \ 1] + sorted[sorted.length / 2]) / 2.0;\n    }\n}\nunittest\n{\n    alias candidate\
    \ = median;\n\n    assert(candidate([3L, 1L, 2L, 4L, 5L]) == 3L);\n    assert(candidate([-10L,\
    \ 4L, 6L, 1000L, 10L, 20L]) == 8.0);\n    assert(candidate([5L]) == 5L);\n   \
    \ assert(candidate([6L, 5L]) == 5.5);\n    assert(candidate([8L, 1L, 3L, 9L, 9L,\
    \ 2L, 7L]) == 7L);\n}\nvoid main(){}"
  status: SyntaxError
  stderr: '/tmp/tmp14nivz02.d(13): Error: no property `sort` for type `long[]`

    Failed: ["dmd", "-unittest", "-v", "-o-", "/tmp/tmp14nivz02.d", "-I/tmp"]

    '
  stdout: ''
  timestamp: 1660160691
- exit_code: 1
  program: "import std.math;\n/*\nReturn median of elements in the list l.\n    >>>\
    \ median([3L, 1L, 2L, 4L, 5L])\n    3L\n    >>> median([-10L, 4L, 6L, 1000L, 10L,\
    \ 20L])\n    15.0\n    \n*/\nfloat median(long[] l) \n{\n    long[] sorted = l.dup;\n\
    \    sorted.sort;\n    long len = sorted.length;\n    if (len % 2 == 1) \n   \
    \ {\n        return sorted[len / 2];\n    }\n    else \n    {\n        return\
    \ (sorted[len / 2 - 1] + sorted[len / 2]) / 2.0;\n    }\n}\nunittest\n{\n    alias\
    \ candidate = median;\n\n    assert(candidate([3L, 1L, 2L, 4L, 5L]) == 3L);\n\
    \    assert(candidate([-10L, 4L, 6L, 1000L, 10L, 20L]) == 8.0);\n    assert(candidate([5L])\
    \ == 5L);\n    assert(candidate([6L, 5L]) == 5.5);\n    assert(candidate([8L,\
    \ 1L, 3L, 9L, 9L, 2L, 7L]) == 7L);\n}\nvoid main(){}"
  status: SyntaxError
  stderr: '/tmp/tmpkm1xjtjl.d(13): Error: no property `sort` for type `long[]`

    Failed: ["dmd", "-unittest", "-v", "-o-", "/tmp/tmpkm1xjtjl.d", "-I/tmp"]

    '
  stdout: ''
  timestamp: 1660160691
- exit_code: 1
  program: "import std.math;\n/*\nReturn median of elements in the list l.\n    >>>\
    \ median([3L, 1L, 2L, 4L, 5L])\n    3L\n    >>> median([-10L, 4L, 6L, 1000L, 10L,\
    \ 20L])\n    15.0\n    \n*/\nfloat median(long[] l) \n{\n    long[] sorted = l.dup;\n\
    \    sorted.sort;\n    if (sorted.length % 2 == 1) {\n        return sorted[sorted.length\
    \ / 2];\n    } else {\n        return (sorted[sorted.length / 2 - 1] + sorted[sorted.length\
    \ / 2]) / 2.0;\n    }\n}\nunittest\n{\n    alias candidate = median;\n\n    assert(candidate([3L,\
    \ 1L, 2L, 4L, 5L]) == 3L);\n    assert(candidate([-10L, 4L, 6L, 1000L, 10L, 20L])\
    \ == 8.0);\n    assert(candidate([5L]) == 5L);\n    assert(candidate([6L, 5L])\
    \ == 5.5);\n    assert(candidate([8L, 1L, 3L, 9L, 9L, 2L, 7L]) == 7L);\n}\nvoid\
    \ main(){}"
  status: SyntaxError
  stderr: '/tmp/tmpkqzslih2.d(13): Error: no property `sort` for type `long[]`

    Failed: ["dmd", "-unittest", "-v", "-o-", "/tmp/tmpkqzslih2.d", "-I/tmp"]

    '
  stdout: ''
  timestamp: 1660160691
- exit_code: 1
  program: "import std.math;\n/*\nReturn median of elements in the list l.\n    >>>\
    \ median([3L, 1L, 2L, 4L, 5L])\n    3L\n    >>> median([-10L, 4L, 6L, 1000L, 10L,\
    \ 20L])\n    15.0\n    \n*/\nfloat median(long[] l) \n{\n    long[] temp = l.dup;\n\
    \    temp.sort;\n    int len = temp.length;\n    if (len % 2 == 0)\n    {\n  \
    \      return (temp[len / 2] + temp[len / 2 - 1]) / 2.0;\n    }\n    else\n  \
    \  {\n        return temp[len / 2];\n    }\n}\nunittest\n{\n    alias candidate\
    \ = median;\n\n    assert(candidate([3L, 1L, 2L, 4L, 5L]) == 3L);\n    assert(candidate([-10L,\
    \ 4L, 6L, 1000L, 10L, 20L]) == 8.0);\n    assert(candidate([5L]) == 5L);\n   \
    \ assert(candidate([6L, 5L]) == 5.5);\n    assert(candidate([8L, 1L, 3L, 9L, 9L,\
    \ 2L, 7L]) == 7L);\n}\nvoid main(){}"
  status: SyntaxError
  stderr: '/tmp/tmp_ada7al4.d(13): Error: no property `sort` for type `long[]`

    /tmp/tmp_ada7al4.d(14): Error: cannot implicitly convert expression `temp.length`
    of type `ulong` to `int`

    Failed: ["dmd", "-unittest", "-v", "-o-", "/tmp/tmp_ada7al4.d", "-I/tmp"]

    '
  stdout: ''
  timestamp: 1660160691
- exit_code: 1
  program: "import std.math;\n/*\nReturn median of elements in the list l.\n    >>>\
    \ median([3L, 1L, 2L, 4L, 5L])\n    3L\n    >>> median([-10L, 4L, 6L, 1000L, 10L,\
    \ 20L])\n    15.0\n    \n*/\nfloat median(long[] l) \n{\n    long[] sorted = l.dup;\n\
    \    sorted.sort;\n    int n = sorted.length;\n    if (n % 2 == 1) {\n       \
    \ return sorted[n / 2];\n    } else {\n        return (sorted[n / 2 - 1] + sorted[n\
    \ / 2]) / 2.0;\n    }\n}\nunittest\n{\n    alias candidate = median;\n\n    assert(candidate([3L,\
    \ 1L, 2L, 4L, 5L]) == 3L);\n    assert(candidate([-10L, 4L, 6L, 1000L, 10L, 20L])\
    \ == 8.0);\n    assert(candidate([5L]) == 5L);\n    assert(candidate([6L, 5L])\
    \ == 5.5);\n    assert(candidate([8L, 1L, 3L, 9L, 9L, 2L, 7L]) == 7L);\n}\nvoid\
    \ main(){}"
  status: SyntaxError
  stderr: '/tmp/tmp0t9cz4t1.d(13): Error: no property `sort` for type `long[]`

    /tmp/tmp0t9cz4t1.d(14): Error: cannot implicitly convert expression `sorted.length`
    of type `ulong` to `int`

    Failed: ["dmd", "-unittest", "-v", "-o-", "/tmp/tmp0t9cz4t1.d", "-I/tmp"]

    '
  stdout: ''
  timestamp: 1660160691
- exit_code: 1
  program: "import std.math;\n/*\nReturn median of elements in the list l.\n    >>>\
    \ median([3L, 1L, 2L, 4L, 5L])\n    3L\n    >>> median([-10L, 4L, 6L, 1000L, 10L,\
    \ 20L])\n    15.0\n    \n*/\nfloat median(long[] l) \n{ \n    long[] l2 = l.dup;\n\
    \    l2.sort;\n    int len = l2.length;\n    if (len % 2 == 0) \n    {\n     \
    \   return (l2[len / 2 - 1] + l2[len / 2]) / 2.0;\n    } \n    else \n    {\n\
    \        return l2[len / 2];\n    }\n}\nunittest\n{\n    alias candidate = median;\n\
    \n    assert(candidate([3L, 1L, 2L, 4L, 5L]) == 3L);\n    assert(candidate([-10L,\
    \ 4L, 6L, 1000L, 10L, 20L]) == 8.0);\n    assert(candidate([5L]) == 5L);\n   \
    \ assert(candidate([6L, 5L]) == 5.5);\n    assert(candidate([8L, 1L, 3L, 9L, 9L,\
    \ 2L, 7L]) == 7L);\n}\nvoid main(){}"
  status: SyntaxError
  stderr: '/tmp/tmpox4ltshw.d(13): Error: no property `sort` for type `long[]`

    /tmp/tmpox4ltshw.d(14): Error: cannot implicitly convert expression `l2.length`
    of type `ulong` to `int`

    Failed: ["dmd", "-unittest", "-v", "-o-", "/tmp/tmpox4ltshw.d", "-I/tmp"]

    '
  stdout: ''
  timestamp: 1660160691
- exit_code: 1
  program: "import std.math;\n/*\nReturn median of elements in the list l.\n    >>>\
    \ median([3L, 1L, 2L, 4L, 5L])\n    3L\n    >>> median([-10L, 4L, 6L, 1000L, 10L,\
    \ 20L])\n    15.0\n    \n*/\nfloat median(long[] l) \n{\n    long[] sorted = l.dup;\n\
    \    sorted.sort;\n    int n = sorted.length;\n    if (n % 2 == 1)\n        return\
    \ sorted[n / 2];\n    else\n        return (sorted[n / 2 - 1] + sorted[n / 2])\
    \ / 2.0;\n}\nunittest\n{\n    alias candidate = median;\n\n    assert(candidate([3L,\
    \ 1L, 2L, 4L, 5L]) == 3L);\n    assert(candidate([-10L, 4L, 6L, 1000L, 10L, 20L])\
    \ == 8.0);\n    assert(candidate([5L]) == 5L);\n    assert(candidate([6L, 5L])\
    \ == 5.5);\n    assert(candidate([8L, 1L, 3L, 9L, 9L, 2L, 7L]) == 7L);\n}\nvoid\
    \ main(){}"
  status: SyntaxError
  stderr: '/tmp/tmpwnuehx69.d(13): Error: no property `sort` for type `long[]`

    /tmp/tmpwnuehx69.d(14): Error: cannot implicitly convert expression `sorted.length`
    of type `ulong` to `int`

    Failed: ["dmd", "-unittest", "-v", "-o-", "/tmp/tmpwnuehx69.d", "-I/tmp"]

    '
  stdout: ''
  timestamp: 1660160691
- exit_code: 1
  program: "import std.math;\n/*\nReturn median of elements in the list l.\n    >>>\
    \ median([3L, 1L, 2L, 4L, 5L])\n    3L\n    >>> median([-10L, 4L, 6L, 1000L, 10L,\
    \ 20L])\n    15.0\n    \n*/\nfloat median(long[] l) \n{\n    long[] sorted = l.dup;\n\
    \    sorted.sort;\n    int n = sorted.length;\n    if (n % 2 == 1) \n    {\n \
    \       return sorted[n / 2];\n    } \n    else \n    {\n        return (sorted[n\
    \ / 2 - 1] + sorted[n / 2]) / 2.0;\n    }\n}\nunittest\n{\n    alias candidate\
    \ = median;\n\n    assert(candidate([3L, 1L, 2L, 4L, 5L]) == 3L);\n    assert(candidate([-10L,\
    \ 4L, 6L, 1000L, 10L, 20L]) == 8.0);\n    assert(candidate([5L]) == 5L);\n   \
    \ assert(candidate([6L, 5L]) == 5.5);\n    assert(candidate([8L, 1L, 3L, 9L, 9L,\
    \ 2L, 7L]) == 7L);\n}\nvoid main(){}"
  status: SyntaxError
  stderr: '/tmp/tmp6g5nvd39.d(13): Error: no property `sort` for type `long[]`

    /tmp/tmp6g5nvd39.d(14): Error: cannot implicitly convert expression `sorted.length`
    of type `ulong` to `int`

    Failed: ["dmd", "-unittest", "-v", "-o-", "/tmp/tmp6g5nvd39.d", "-I/tmp"]

    '
  stdout: ''
  timestamp: 1660160691
- exit_code: 1
  program: "import std.math;\n/*\nReturn median of elements in the list l.\n    >>>\
    \ median([3L, 1L, 2L, 4L, 5L])\n    3L\n    >>> median([-10L, 4L, 6L, 1000L, 10L,\
    \ 20L])\n    15.0\n    \n*/\nfloat median(long[] l) \n{\n    long[] sorted = l.dup;\n\
    \    sorted.sort;\n    int n = sorted.length;\n    if (n % 2 == 1)\n        return\
    \ sorted[n / 2];\n    else\n        return (sorted[n / 2 - 1] + sorted[n / 2])\
    \ / 2.0;\n}\nunittest\n{\n    alias candidate = median;\n\n    assert(candidate([3L,\
    \ 1L, 2L, 4L, 5L]) == 3L);\n    assert(candidate([-10L, 4L, 6L, 1000L, 10L, 20L])\
    \ == 8.0);\n    assert(candidate([5L]) == 5L);\n    assert(candidate([6L, 5L])\
    \ == 5.5);\n    assert(candidate([8L, 1L, 3L, 9L, 9L, 2L, 7L]) == 7L);\n}\nvoid\
    \ main(){}"
  status: SyntaxError
  stderr: '/tmp/tmpwnuehx69.d(13): Error: no property `sort` for type `long[]`

    /tmp/tmpwnuehx69.d(14): Error: cannot implicitly convert expression `sorted.length`
    of type `ulong` to `int`

    Failed: ["dmd", "-unittest", "-v", "-o-", "/tmp/tmpwnuehx69.d", "-I/tmp"]

    '
  stdout: ''
  timestamp: 1660160691
- exit_code: 1
  program: "import std.math;\n/*\nReturn median of elements in the list l.\n    >>>\
    \ median([3L, 1L, 2L, 4L, 5L])\n    3L\n    >>> median([-10L, 4L, 6L, 1000L, 10L,\
    \ 20L])\n    15.0\n    \n*/\nfloat median(long[] l) \n{\n    long[] sorted = l.dup.sort;\n\
    \    int mid = l.length / 2;\n    if (l.length % 2 == 0) {\n        return (sorted[mid]\
    \ + sorted[mid - 1]) / 2.0;\n    }\n    else {\n        return sorted[mid];\n\
    \    }\n}\nunittest\n{\n    alias candidate = median;\n\n    assert(candidate([3L,\
    \ 1L, 2L, 4L, 5L]) == 3L);\n    assert(candidate([-10L, 4L, 6L, 1000L, 10L, 20L])\
    \ == 8.0);\n    assert(candidate([5L]) == 5L);\n    assert(candidate([6L, 5L])\
    \ == 5.5);\n    assert(candidate([8L, 1L, 3L, 9L, 9L, 2L, 7L]) == 7L);\n}\nvoid\
    \ main(){}"
  status: SyntaxError
  stderr: '/tmp/tmp_pg1xnex.d(12): Error: no property `sort` for type `long[]`

    /tmp/tmp_pg1xnex.d(13): Error: cannot implicitly convert expression `l.length
    / 2LU` of type `ulong` to `int`

    Failed: ["dmd", "-unittest", "-v", "-o-", "/tmp/tmp_pg1xnex.d", "-I/tmp"]

    '
  stdout: ''
  timestamp: 1660160692
- exit_code: 1
  program: "import std.math;\n/*\nReturn median of elements in the list l.\n    >>>\
    \ median([3L, 1L, 2L, 4L, 5L])\n    3L\n    >>> median([-10L, 4L, 6L, 1000L, 10L,\
    \ 20L])\n    15.0\n    \n*/\nfloat median(long[] l) \n{\n    long[] s = l.dup;\n\
    \    s.sort;\n    if (s.length % 2 == 0) \n    {\n        return (s[s.length /\
    \ 2 - 1] + s[s.length / 2]) / 2.0;\n    }\n    else \n    {\n        return s[s.length\
    \ / 2];\n    }\n}\nunittest\n{\n    alias candidate = median;\n\n    assert(candidate([3L,\
    \ 1L, 2L, 4L, 5L]) == 3L);\n    assert(candidate([-10L, 4L, 6L, 1000L, 10L, 20L])\
    \ == 8.0);\n    assert(candidate([5L]) == 5L);\n    assert(candidate([6L, 5L])\
    \ == 5.5);\n    assert(candidate([8L, 1L, 3L, 9L, 9L, 2L, 7L]) == 7L);\n}\nvoid\
    \ main(){}"
  status: SyntaxError
  stderr: '/tmp/tmpaancmwkb.d(13): Error: no property `sort` for type `long[]`

    Failed: ["dmd", "-unittest", "-v", "-o-", "/tmp/tmpaancmwkb.d", "-I/tmp"]

    '
  stdout: ''
  timestamp: 1660160692
- exit_code: 1
  program: "import std.math;\n/*\nReturn median of elements in the list l.\n    >>>\
    \ median([3L, 1L, 2L, 4L, 5L])\n    3L\n    >>> median([-10L, 4L, 6L, 1000L, 10L,\
    \ 20L])\n    15.0\n    \n*/\nfloat median(long[] l) \n{\n    long[] sorted = l.dup.sort;\n\
    \    int n = sorted.length;\n    if (n % 2 == 1)\n    {\n        return sorted[n\
    \ / 2];\n    }\n    else\n    {\n        return (sorted[n / 2 - 1] + sorted[n\
    \ / 2]) / 2.0;\n    }\n}\nunittest\n{\n    alias candidate = median;\n\n    assert(candidate([3L,\
    \ 1L, 2L, 4L, 5L]) == 3L);\n    assert(candidate([-10L, 4L, 6L, 1000L, 10L, 20L])\
    \ == 8.0);\n    assert(candidate([5L]) == 5L);\n    assert(candidate([6L, 5L])\
    \ == 5.5);\n    assert(candidate([8L, 1L, 3L, 9L, 9L, 2L, 7L]) == 7L);\n}\nvoid\
    \ main(){}"
  status: SyntaxError
  stderr: '/tmp/tmp_rcv1ca_.d(12): Error: no property `sort` for type `long[]`

    /tmp/tmp_rcv1ca_.d(13): Error: cannot implicitly convert expression `sorted.length`
    of type `ulong` to `int`

    Failed: ["dmd", "-unittest", "-v", "-o-", "/tmp/tmp_rcv1ca_.d", "-I/tmp"]

    '
  stdout: ''
  timestamp: 1660160692
- exit_code: 1
  program: "import std.math;\n/*\nReturn median of elements in the list l.\n    >>>\
    \ median([3L, 1L, 2L, 4L, 5L])\n    3L\n    >>> median([-10L, 4L, 6L, 1000L, 10L,\
    \ 20L])\n    15.0\n    \n*/\nfloat median(long[] l) \n{\n    long[] sorted = l.dup.sort;\n\
    \    int n = l.length;\n    if (n % 2 == 1)\n        return sorted[n / 2];\n \
    \   else\n        return (sorted[n / 2 - 1] + sorted[n / 2]) / 2.0;\n}\nunittest\n\
    {\n    alias candidate = median;\n\n    assert(candidate([3L, 1L, 2L, 4L, 5L])\
    \ == 3L);\n    assert(candidate([-10L, 4L, 6L, 1000L, 10L, 20L]) == 8.0);\n  \
    \  assert(candidate([5L]) == 5L);\n    assert(candidate([6L, 5L]) == 5.5);\n \
    \   assert(candidate([8L, 1L, 3L, 9L, 9L, 2L, 7L]) == 7L);\n}\nvoid main(){}"
  status: SyntaxError
  stderr: '/tmp/tmphwkhegbq.d(12): Error: no property `sort` for type `long[]`

    /tmp/tmphwkhegbq.d(13): Error: cannot implicitly convert expression `l.length`
    of type `ulong` to `int`

    Failed: ["dmd", "-unittest", "-v", "-o-", "/tmp/tmphwkhegbq.d", "-I/tmp"]

    '
  stdout: ''
  timestamp: 1660160691
- exit_code: 1
  program: "import std.math;\n/*\nReturn median of elements in the list l.\n    >>>\
    \ median([3L, 1L, 2L, 4L, 5L])\n    3L\n    >>> median([-10L, 4L, 6L, 1000L, 10L,\
    \ 20L])\n    15.0\n    \n*/\nfloat median(long[] l) \n{\n    long[] sorted = l.dup.sort;\n\
    \    int mid = sorted.length / 2;\n    if (sorted.length % 2 == 0) \n    {\n \
    \       return (sorted[mid] + sorted[mid - 1]) / 2.0;\n    } \n    else \n   \
    \ {\n        return sorted[mid];\n    }\n}\nunittest\n{\n    alias candidate =\
    \ median;\n\n    assert(candidate([3L, 1L, 2L, 4L, 5L]) == 3L);\n    assert(candidate([-10L,\
    \ 4L, 6L, 1000L, 10L, 20L]) == 8.0);\n    assert(candidate([5L]) == 5L);\n   \
    \ assert(candidate([6L, 5L]) == 5.5);\n    assert(candidate([8L, 1L, 3L, 9L, 9L,\
    \ 2L, 7L]) == 7L);\n}\nvoid main(){}"
  status: SyntaxError
  stderr: '/tmp/tmpqko_puzt.d(12): Error: no property `sort` for type `long[]`

    /tmp/tmpqko_puzt.d(13): Error: cannot implicitly convert expression `sorted.length
    / 2LU` of type `ulong` to `int`

    Failed: ["dmd", "-unittest", "-v", "-o-", "/tmp/tmpqko_puzt.d", "-I/tmp"]

    '
  stdout: ''
  timestamp: 1660160692
- exit_code: 1
  program: "import std.math;\n/*\nReturn median of elements in the list l.\n    >>>\
    \ median([3L, 1L, 2L, 4L, 5L])\n    3L\n    >>> median([-10L, 4L, 6L, 1000L, 10L,\
    \ 20L])\n    15.0\n    \n*/\nfloat median(long[] l) \n{\n    long[] sorted = sort(l);\n\
    \    int n = sorted.length;\n    if (n % 2 == 1) \n    {\n        return sorted[n\
    \ / 2];\n    } \n    else \n    {\n        return (sorted[n / 2 - 1] + sorted[n\
    \ / 2]) / 2.0;\n    }\n}\nunittest\n{\n    alias candidate = median;\n\n    assert(candidate([3L,\
    \ 1L, 2L, 4L, 5L]) == 3L);\n    assert(candidate([-10L, 4L, 6L, 1000L, 10L, 20L])\
    \ == 8.0);\n    assert(candidate([5L]) == 5L);\n    assert(candidate([6L, 5L])\
    \ == 5.5);\n    assert(candidate([8L, 1L, 3L, 9L, 9L, 2L, 7L]) == 7L);\n}\nvoid\
    \ main(){}"
  status: SyntaxError
  stderr: '/tmp/tmpn_cmp_kl.d(12): Error: undefined identifier `sort`, did you mean
    function `sqrt`?

    /tmp/tmpn_cmp_kl.d(13): Error: cannot implicitly convert expression `sorted.length`
    of type `ulong` to `int`

    Failed: ["dmd", "-unittest", "-v", "-o-", "/tmp/tmpn_cmp_kl.d", "-I/tmp"]

    '
  stdout: ''
  timestamp: 1660160692
- exit_code: 1
  program: "import std.math;\n/*\nReturn median of elements in the list l.\n    >>>\
    \ median([3L, 1L, 2L, 4L, 5L])\n    3L\n    >>> median([-10L, 4L, 6L, 1000L, 10L,\
    \ 20L])\n    15.0\n    \n*/\nfloat median(long[] l) \n{\n    long[] sorted = l.dup;\n\
    \    sorted.sort;\n    if (sorted.length % 2 == 1) {\n        return sorted[sorted.length\
    \ / 2];\n    } else {\n        return (sorted[sorted.length / 2 - 1] + sorted[sorted.length\
    \ / 2]) / 2.0;\n    }\n}\nunittest\n{\n    alias candidate = median;\n\n    assert(candidate([3L,\
    \ 1L, 2L, 4L, 5L]) == 3L);\n    assert(candidate([-10L, 4L, 6L, 1000L, 10L, 20L])\
    \ == 8.0);\n    assert(candidate([5L]) == 5L);\n    assert(candidate([6L, 5L])\
    \ == 5.5);\n    assert(candidate([8L, 1L, 3L, 9L, 9L, 2L, 7L]) == 7L);\n}\nvoid\
    \ main(){}"
  status: SyntaxError
  stderr: '/tmp/tmpkqzslih2.d(13): Error: no property `sort` for type `long[]`

    Failed: ["dmd", "-unittest", "-v", "-o-", "/tmp/tmpkqzslih2.d", "-I/tmp"]

    '
  stdout: ''
  timestamp: 1660160691
- exit_code: 1
  program: "import std.math;\n/*\nReturn median of elements in the list l.\n    >>>\
    \ median([3L, 1L, 2L, 4L, 5L])\n    3L\n    >>> median([-10L, 4L, 6L, 1000L, 10L,\
    \ 20L])\n    15.0\n    \n*/\nfloat median(long[] l) \n{\n    long[] sorted = l.sort();\n\
    \    int mid = l.length / 2;\n    if (l.length % 2 == 0) \n    {\n        return\
    \ (sorted[mid] + sorted[mid - 1]) / 2.0;\n    } \n    else \n    {\n        return\
    \ sorted[mid];\n    }\n}\nunittest\n{\n    alias candidate = median;\n\n    assert(candidate([3L,\
    \ 1L, 2L, 4L, 5L]) == 3L);\n    assert(candidate([-10L, 4L, 6L, 1000L, 10L, 20L])\
    \ == 8.0);\n    assert(candidate([5L]) == 5L);\n    assert(candidate([6L, 5L])\
    \ == 5.5);\n    assert(candidate([8L, 1L, 3L, 9L, 9L, 2L, 7L]) == 7L);\n}\nvoid\
    \ main(){}"
  status: SyntaxError
  stderr: '/tmp/tmpcwy5wbf2.d(12): Error: no property `sort` for type `long[]`

    /tmp/tmpcwy5wbf2.d(13): Error: cannot implicitly convert expression `l.length
    / 2LU` of type `ulong` to `int`

    Failed: ["dmd", "-unittest", "-v", "-o-", "/tmp/tmpcwy5wbf2.d", "-I/tmp"]

    '
  stdout: ''
  timestamp: 1660160692
- exit_code: 1
  program: "import std.math;\n/*\nReturn median of elements in the list l.\n    >>>\
    \ median([3L, 1L, 2L, 4L, 5L])\n    3L\n    >>> median([-10L, 4L, 6L, 1000L, 10L,\
    \ 20L])\n    15.0\n    \n*/\nfloat median(long[] l) \n{\n    long[] sorted = l.dup;\n\
    \    sorted.sort;\n    int n = sorted.length;\n    if (n % 2 == 1) \n    {\n \
    \       return sorted[n / 2];\n    } \n    else \n    {\n        return (sorted[n\
    \ / 2 - 1] + sorted[n / 2]) / 2.0;\n    }\n}\nunittest\n{\n    alias candidate\
    \ = median;\n\n    assert(candidate([3L, 1L, 2L, 4L, 5L]) == 3L);\n    assert(candidate([-10L,\
    \ 4L, 6L, 1000L, 10L, 20L]) == 8.0);\n    assert(candidate([5L]) == 5L);\n   \
    \ assert(candidate([6L, 5L]) == 5.5);\n    assert(candidate([8L, 1L, 3L, 9L, 9L,\
    \ 2L, 7L]) == 7L);\n}\nvoid main(){}"
  status: SyntaxError
  stderr: '/tmp/tmp6g5nvd39.d(13): Error: no property `sort` for type `long[]`

    /tmp/tmp6g5nvd39.d(14): Error: cannot implicitly convert expression `sorted.length`
    of type `ulong` to `int`

    Failed: ["dmd", "-unittest", "-v", "-o-", "/tmp/tmp6g5nvd39.d", "-I/tmp"]

    '
  stdout: ''
  timestamp: 1660160691
- exit_code: 1
  program: "import std.math;\n/*\nReturn median of elements in the list l.\n    >>>\
    \ median([3L, 1L, 2L, 4L, 5L])\n    3L\n    >>> median([-10L, 4L, 6L, 1000L, 10L,\
    \ 20L])\n    15.0\n    \n*/\nfloat median(long[] l) \n{\n    long[] sorted = l.dup;\n\
    \    sorted.sort;\n    int n = sorted.length;\n    if (n % 2 == 1)\n        return\
    \ sorted[n / 2];\n    else\n        return (sorted[n / 2 - 1] + sorted[n / 2])\
    \ / 2.0;\n}\nunittest\n{\n    alias candidate = median;\n\n    assert(candidate([3L,\
    \ 1L, 2L, 4L, 5L]) == 3L);\n    assert(candidate([-10L, 4L, 6L, 1000L, 10L, 20L])\
    \ == 8.0);\n    assert(candidate([5L]) == 5L);\n    assert(candidate([6L, 5L])\
    \ == 5.5);\n    assert(candidate([8L, 1L, 3L, 9L, 9L, 2L, 7L]) == 7L);\n}\nvoid\
    \ main(){}"
  status: SyntaxError
  stderr: '/tmp/tmpwnuehx69.d(13): Error: no property `sort` for type `long[]`

    /tmp/tmpwnuehx69.d(14): Error: cannot implicitly convert expression `sorted.length`
    of type `ulong` to `int`

    Failed: ["dmd", "-unittest", "-v", "-o-", "/tmp/tmpwnuehx69.d", "-I/tmp"]

    '
  stdout: ''
  timestamp: 1660160691
- exit_code: 1
  program: "import std.math;\n/*\nReturn median of elements in the list l.\n    >>>\
    \ median([3L, 1L, 2L, 4L, 5L])\n    3L\n    >>> median([-10L, 4L, 6L, 1000L, 10L,\
    \ 20L])\n    15.0\n    \n*/\nfloat median(long[] l) \n{\n    long[] sorted = l.sort();\n\
    \    int n = sorted.length;\n    if (n % 2 == 1) {\n        return sorted[n /\
    \ 2];\n    } else {\n        return (sorted[n / 2 - 1] + sorted[n / 2]) / 2.0;\n\
    \    }\n}\nunittest\n{\n    alias candidate = median;\n\n    assert(candidate([3L,\
    \ 1L, 2L, 4L, 5L]) == 3L);\n    assert(candidate([-10L, 4L, 6L, 1000L, 10L, 20L])\
    \ == 8.0);\n    assert(candidate([5L]) == 5L);\n    assert(candidate([6L, 5L])\
    \ == 5.5);\n    assert(candidate([8L, 1L, 3L, 9L, 9L, 2L, 7L]) == 7L);\n}\nvoid\
    \ main(){}"
  status: SyntaxError
  stderr: '/tmp/tmpxmw_k6sa.d(12): Error: no property `sort` for type `long[]`

    /tmp/tmpxmw_k6sa.d(13): Error: cannot implicitly convert expression `sorted.length`
    of type `ulong` to `int`

    Failed: ["dmd", "-unittest", "-v", "-o-", "/tmp/tmpxmw_k6sa.d", "-I/tmp"]

    '
  stdout: ''
  timestamp: 1660160692
- exit_code: 1
  program: "import std.math;\n/*\nReturn median of elements in the list l.\n    >>>\
    \ median([3L, 1L, 2L, 4L, 5L])\n    3L\n    >>> median([-10L, 4L, 6L, 1000L, 10L,\
    \ 20L])\n    15.0\n    \n*/\nfloat median(long[] l) \n{\n    int n = l.length;\n\
    \    if (n == 0) \n    {\n        return 0.0;\n    }\n    else \n    {\n     \
    \   long[] sorted = sort(l);\n        if (n % 2 == 0) \n        {\n          \
    \  return (sorted[n / 2 - 1] + sorted[n / 2]) / 2.0;\n        }\n        else\
    \ \n        {\n            return sorted[n / 2];\n        }\n    }\n}\nunittest\n\
    {\n    alias candidate = median;\n\n    assert(candidate([3L, 1L, 2L, 4L, 5L])\
    \ == 3L);\n    assert(candidate([-10L, 4L, 6L, 1000L, 10L, 20L]) == 8.0);\n  \
    \  assert(candidate([5L]) == 5L);\n    assert(candidate([6L, 5L]) == 5.5);\n \
    \   assert(candidate([8L, 1L, 3L, 9L, 9L, 2L, 7L]) == 7L);\n}\nvoid main(){}"
  status: SyntaxError
  stderr: '/tmp/tmpkqrddfxw.d(12): Error: cannot implicitly convert expression `l.length`
    of type `ulong` to `int`

    /tmp/tmpkqrddfxw.d(19): Error: undefined identifier `sort`, did you mean function
    `sqrt`?

    Failed: ["dmd", "-unittest", "-v", "-o-", "/tmp/tmpkqrddfxw.d", "-I/tmp"]

    '
  stdout: ''
  timestamp: 1660160692
- exit_code: 1
  program: "import std.math;\n/*\nReturn median of elements in the list l.\n    >>>\
    \ median([3L, 1L, 2L, 4L, 5L])\n    3L\n    >>> median([-10L, 4L, 6L, 1000L, 10L,\
    \ 20L])\n    15.0\n    \n*/\nfloat median(long[] l) \n{\n    long[] sorted = l.sort();\n\
    \    int len = sorted.length;\n    if (len % 2 == 1)\n    {\n        return sorted[len\
    \ / 2];\n    }\n    else\n    {\n        return (sorted[len / 2 - 1] + sorted[len\
    \ / 2]) / 2.0;\n    }\n}\nunittest\n{\n    alias candidate = median;\n\n    assert(candidate([3L,\
    \ 1L, 2L, 4L, 5L]) == 3L);\n    assert(candidate([-10L, 4L, 6L, 1000L, 10L, 20L])\
    \ == 8.0);\n    assert(candidate([5L]) == 5L);\n    assert(candidate([6L, 5L])\
    \ == 5.5);\n    assert(candidate([8L, 1L, 3L, 9L, 9L, 2L, 7L]) == 7L);\n}\nvoid\
    \ main(){}"
  status: SyntaxError
  stderr: '/tmp/tmprq0ycs4b.d(12): Error: no property `sort` for type `long[]`

    /tmp/tmprq0ycs4b.d(13): Error: cannot implicitly convert expression `sorted.length`
    of type `ulong` to `int`

    Failed: ["dmd", "-unittest", "-v", "-o-", "/tmp/tmprq0ycs4b.d", "-I/tmp"]

    '
  stdout: ''
  timestamp: 1660160692
- exit_code: 1
  program: "import std.math;\n/*\nReturn median of elements in the list l.\n    >>>\
    \ median([3L, 1L, 2L, 4L, 5L])\n    3L\n    >>> median([-10L, 4L, 6L, 1000L, 10L,\
    \ 20L])\n    15.0\n    \n*/\nfloat median(long[] l) \n{\n    long[] sorted = l.sort();\n\
    \    long len = sorted.length;\n    if (len % 2 == 1)\n        return sorted[len\
    \ / 2];\n    else\n        return (sorted[len / 2 - 1] + sorted[len / 2]) / 2.0;\n\
    }\nunittest\n{\n    alias candidate = median;\n\n    assert(candidate([3L, 1L,\
    \ 2L, 4L, 5L]) == 3L);\n    assert(candidate([-10L, 4L, 6L, 1000L, 10L, 20L])\
    \ == 8.0);\n    assert(candidate([5L]) == 5L);\n    assert(candidate([6L, 5L])\
    \ == 5.5);\n    assert(candidate([8L, 1L, 3L, 9L, 9L, 2L, 7L]) == 7L);\n}\nvoid\
    \ main(){}"
  status: SyntaxError
  stderr: '/tmp/tmp_w2ezrp1.d(12): Error: no property `sort` for type `long[]`

    Failed: ["dmd", "-unittest", "-v", "-o-", "/tmp/tmp_w2ezrp1.d", "-I/tmp"]

    '
  stdout: ''
  timestamp: 1660160692
- exit_code: 1
  program: "import std.math;\n/*\nReturn median of elements in the list l.\n    >>>\
    \ median([3L, 1L, 2L, 4L, 5L])\n    3L\n    >>> median([-10L, 4L, 6L, 1000L, 10L,\
    \ 20L])\n    15.0\n    \n*/\nfloat median(long[] l) \n{\n    long[] sorted = l.dup;\n\
    \    sorted.sort;\n    int n = sorted.length;\n    if (n % 2 == 1)\n        return\
    \ sorted[n / 2];\n    else\n        return (sorted[n / 2 - 1] + sorted[n / 2])\
    \ / 2.0;\n}\nunittest\n{\n    alias candidate = median;\n\n    assert(candidate([3L,\
    \ 1L, 2L, 4L, 5L]) == 3L);\n    assert(candidate([-10L, 4L, 6L, 1000L, 10L, 20L])\
    \ == 8.0);\n    assert(candidate([5L]) == 5L);\n    assert(candidate([6L, 5L])\
    \ == 5.5);\n    assert(candidate([8L, 1L, 3L, 9L, 9L, 2L, 7L]) == 7L);\n}\nvoid\
    \ main(){}"
  status: SyntaxError
  stderr: '/tmp/tmpwnuehx69.d(13): Error: no property `sort` for type `long[]`

    /tmp/tmpwnuehx69.d(14): Error: cannot implicitly convert expression `sorted.length`
    of type `ulong` to `int`

    Failed: ["dmd", "-unittest", "-v", "-o-", "/tmp/tmpwnuehx69.d", "-I/tmp"]

    '
  stdout: ''
  timestamp: 1660160691
- exit_code: 1
  program: "import std.math;\n/*\nReturn median of elements in the list l.\n    >>>\
    \ median([3L, 1L, 2L, 4L, 5L])\n    3L\n    >>> median([-10L, 4L, 6L, 1000L, 10L,\
    \ 20L])\n    15.0\n    \n*/\nfloat median(long[] l) \n{\n    long[] temp = l.dup;\n\
    \    temp.sort;\n    int n = temp.length;\n    if (n % 2 == 0)\n    {\n      \
    \  return (temp[n/2] + temp[n/2 - 1]) / 2.0;\n    }\n    else\n    {\n       \
    \ return temp[n/2];\n    }\n}\nunittest\n{\n    alias candidate = median;\n\n\
    \    assert(candidate([3L, 1L, 2L, 4L, 5L]) == 3L);\n    assert(candidate([-10L,\
    \ 4L, 6L, 1000L, 10L, 20L]) == 8.0);\n    assert(candidate([5L]) == 5L);\n   \
    \ assert(candidate([6L, 5L]) == 5.5);\n    assert(candidate([8L, 1L, 3L, 9L, 9L,\
    \ 2L, 7L]) == 7L);\n}\nvoid main(){}"
  status: SyntaxError
  stderr: '/tmp/tmp2ogh20_8.d(13): Error: no property `sort` for type `long[]`

    /tmp/tmp2ogh20_8.d(14): Error: cannot implicitly convert expression `temp.length`
    of type `ulong` to `int`

    Failed: ["dmd", "-unittest", "-v", "-o-", "/tmp/tmp2ogh20_8.d", "-I/tmp"]

    '
  stdout: ''
  timestamp: 1660160692
- exit_code: 1
  program: "import std.math;\n/*\nReturn median of elements in the list l.\n    >>>\
    \ median([3L, 1L, 2L, 4L, 5L])\n    3L\n    >>> median([-10L, 4L, 6L, 1000L, 10L,\
    \ 20L])\n    15.0\n    \n*/\nfloat median(long[] l) \n{\n    long[] sorted = l.dup;\n\
    \    sorted.sort;\n    if (sorted.length % 2 == 1)\n        return sorted[sorted.length\
    \ / 2];\n    else\n        return (sorted[sorted.length / 2 - 1] + sorted[sorted.length\
    \ / 2]) / 2.0;\n}\nunittest\n{\n    alias candidate = median;\n\n    assert(candidate([3L,\
    \ 1L, 2L, 4L, 5L]) == 3L);\n    assert(candidate([-10L, 4L, 6L, 1000L, 10L, 20L])\
    \ == 8.0);\n    assert(candidate([5L]) == 5L);\n    assert(candidate([6L, 5L])\
    \ == 5.5);\n    assert(candidate([8L, 1L, 3L, 9L, 9L, 2L, 7L]) == 7L);\n}\nvoid\
    \ main(){}"
  status: SyntaxError
  stderr: '/tmp/tmpx89ezo5q.d(13): Error: no property `sort` for type `long[]`

    Failed: ["dmd", "-unittest", "-v", "-o-", "/tmp/tmpx89ezo5q.d", "-I/tmp"]

    '
  stdout: ''
  timestamp: 1660160691
- exit_code: 1
  program: "import std.math;\n/*\nReturn median of elements in the list l.\n    >>>\
    \ median([3L, 1L, 2L, 4L, 5L])\n    3L\n    >>> median([-10L, 4L, 6L, 1000L, 10L,\
    \ 20L])\n    15.0\n    \n*/\nfloat median(long[] l) \n{\n    long[] sorted = l.sort();\n\
    \    int mid = sorted.length / 2;\n    if (sorted.length % 2 == 0)\n    {\n  \
    \      return (sorted[mid] + sorted[mid - 1]) / 2.0;\n    }\n    else\n    {\n\
    \        return sorted[mid];\n    }\n}\nunittest\n{\n    alias candidate = median;\n\
    \n    assert(candidate([3L, 1L, 2L, 4L, 5L]) == 3L);\n    assert(candidate([-10L,\
    \ 4L, 6L, 1000L, 10L, 20L]) == 8.0);\n    assert(candidate([5L]) == 5L);\n   \
    \ assert(candidate([6L, 5L]) == 5.5);\n    assert(candidate([8L, 1L, 3L, 9L, 9L,\
    \ 2L, 7L]) == 7L);\n}\nvoid main(){}"
  status: SyntaxError
  stderr: '/tmp/tmp0ohs6lat.d(12): Error: no property `sort` for type `long[]`

    /tmp/tmp0ohs6lat.d(13): Error: cannot implicitly convert expression `sorted.length
    / 2LU` of type `ulong` to `int`

    Failed: ["dmd", "-unittest", "-v", "-o-", "/tmp/tmp0ohs6lat.d", "-I/tmp"]

    '
  stdout: ''
  timestamp: 1660160691
- exit_code: 1
  program: "import std.math;\n/*\nReturn median of elements in the list l.\n    >>>\
    \ median([3L, 1L, 2L, 4L, 5L])\n    3L\n    >>> median([-10L, 4L, 6L, 1000L, 10L,\
    \ 20L])\n    15.0\n    \n*/\nfloat median(long[] l) \n{\n    long[] sorted = l.dup;\n\
    \    sorted.sort;\n    if (sorted.length % 2 == 1) {\n        return sorted[sorted.length\
    \ / 2];\n    } else {\n        return (sorted[sorted.length / 2 - 1] + sorted[sorted.length\
    \ / 2]) / 2.0;\n    }\n}\nunittest\n{\n    alias candidate = median;\n\n    assert(candidate([3L,\
    \ 1L, 2L, 4L, 5L]) == 3L);\n    assert(candidate([-10L, 4L, 6L, 1000L, 10L, 20L])\
    \ == 8.0);\n    assert(candidate([5L]) == 5L);\n    assert(candidate([6L, 5L])\
    \ == 5.5);\n    assert(candidate([8L, 1L, 3L, 9L, 9L, 2L, 7L]) == 7L);\n}\nvoid\
    \ main(){}"
  status: SyntaxError
  stderr: '/tmp/tmpkqzslih2.d(13): Error: no property `sort` for type `long[]`

    Failed: ["dmd", "-unittest", "-v", "-o-", "/tmp/tmpkqzslih2.d", "-I/tmp"]

    '
  stdout: ''
  timestamp: 1660160691
- exit_code: 1
  program: "import std.math;\n/*\nReturn median of elements in the list l.\n    >>>\
    \ median([3L, 1L, 2L, 4L, 5L])\n    3L\n    >>> median([-10L, 4L, 6L, 1000L, 10L,\
    \ 20L])\n    15.0\n    \n*/\nfloat median(long[] l) \n{\n    long[] m = l.dup;\n\
    \    m.sort;\n    if (m.length % 2 == 0)\n        return (m[m.length / 2 - 1]\
    \ + m[m.length / 2]) / 2.0;\n    else\n        return m[m.length / 2];\n}\nunittest\n\
    {\n    alias candidate = median;\n\n    assert(candidate([3L, 1L, 2L, 4L, 5L])\
    \ == 3L);\n    assert(candidate([-10L, 4L, 6L, 1000L, 10L, 20L]) == 8.0);\n  \
    \  assert(candidate([5L]) == 5L);\n    assert(candidate([6L, 5L]) == 5.5);\n \
    \   assert(candidate([8L, 1L, 3L, 9L, 9L, 2L, 7L]) == 7L);\n}\nvoid main(){}"
  status: SyntaxError
  stderr: '/tmp/tmpid6bhbhk.d(13): Error: no property `sort` for type `long[]`

    Failed: ["dmd", "-unittest", "-v", "-o-", "/tmp/tmpid6bhbhk.d", "-I/tmp"]

    '
  stdout: ''
  timestamp: 1660160692
- exit_code: 1
  program: "import std.math;\n/*\nReturn median of elements in the list l.\n    >>>\
    \ median([3L, 1L, 2L, 4L, 5L])\n    3L\n    >>> median([-10L, 4L, 6L, 1000L, 10L,\
    \ 20L])\n    15.0\n    \n*/\nfloat median(long[] l) \n{\n    long[] l2 = l.dup;\n\
    \    l2.sort;\n    int n = l2.length;\n    if (n % 2 == 1) \n    {\n        return\
    \ l2[n / 2];\n    } \n    else \n    {\n        return (l2[n / 2 - 1] + l2[n /\
    \ 2]) / 2.0;\n    }\n}\nunittest\n{\n    alias candidate = median;\n\n    assert(candidate([3L,\
    \ 1L, 2L, 4L, 5L]) == 3L);\n    assert(candidate([-10L, 4L, 6L, 1000L, 10L, 20L])\
    \ == 8.0);\n    assert(candidate([5L]) == 5L);\n    assert(candidate([6L, 5L])\
    \ == 5.5);\n    assert(candidate([8L, 1L, 3L, 9L, 9L, 2L, 7L]) == 7L);\n}\nvoid\
    \ main(){}"
  status: SyntaxError
  stderr: '/tmp/tmpmcop16ad.d(13): Error: no property `sort` for type `long[]`

    /tmp/tmpmcop16ad.d(14): Error: cannot implicitly convert expression `l2.length`
    of type `ulong` to `int`

    Failed: ["dmd", "-unittest", "-v", "-o-", "/tmp/tmpmcop16ad.d", "-I/tmp"]

    '
  stdout: ''
  timestamp: 1660160691
- exit_code: 1
  program: "import std.math;\n/*\nReturn median of elements in the list l.\n    >>>\
    \ median([3L, 1L, 2L, 4L, 5L])\n    3L\n    >>> median([-10L, 4L, 6L, 1000L, 10L,\
    \ 20L])\n    15.0\n    \n*/\nfloat median(long[] l) \n{\n    long[] sorted = sort(l);\n\
    \    int n = l.length;\n    if (n % 2 == 1) \n    {\n        return sorted[n /\
    \ 2];\n    } \n    else \n    {\n        return (sorted[n / 2 - 1] + sorted[n\
    \ / 2]) / 2.0;\n    }\n}\nunittest\n{\n    alias candidate = median;\n\n    assert(candidate([3L,\
    \ 1L, 2L, 4L, 5L]) == 3L);\n    assert(candidate([-10L, 4L, 6L, 1000L, 10L, 20L])\
    \ == 8.0);\n    assert(candidate([5L]) == 5L);\n    assert(candidate([6L, 5L])\
    \ == 5.5);\n    assert(candidate([8L, 1L, 3L, 9L, 9L, 2L, 7L]) == 7L);\n}\nvoid\
    \ main(){}"
  status: SyntaxError
  stderr: '/tmp/tmpb5_qu77d.d(12): Error: undefined identifier `sort`, did you mean
    function `sqrt`?

    /tmp/tmpb5_qu77d.d(13): Error: cannot implicitly convert expression `l.length`
    of type `ulong` to `int`

    Failed: ["dmd", "-unittest", "-v", "-o-", "/tmp/tmpb5_qu77d.d", "-I/tmp"]

    '
  stdout: ''
  timestamp: 1660160692
- exit_code: 1
  program: "import std.math;\n/*\nReturn median of elements in the list l.\n    >>>\
    \ median([3L, 1L, 2L, 4L, 5L])\n    3L\n    >>> median([-10L, 4L, 6L, 1000L, 10L,\
    \ 20L])\n    15.0\n    \n*/\nfloat median(long[] l) \n{\n    long[] sorted = l.dup.sort;\n\
    \    long len = sorted.length;\n    if (len % 2 == 1) \n    {\n        return\
    \ sorted[len / 2];\n    } \n    else \n    {\n        return (sorted[len / 2 -\
    \ 1] + sorted[len / 2]) / 2.0;\n    }\n}\nunittest\n{\n    alias candidate = median;\n\
    \n    assert(candidate([3L, 1L, 2L, 4L, 5L]) == 3L);\n    assert(candidate([-10L,\
    \ 4L, 6L, 1000L, 10L, 20L]) == 8.0);\n    assert(candidate([5L]) == 5L);\n   \
    \ assert(candidate([6L, 5L]) == 5.5);\n    assert(candidate([8L, 1L, 3L, 9L, 9L,\
    \ 2L, 7L]) == 7L);\n}\nvoid main(){}"
  status: SyntaxError
  stderr: '/tmp/tmpf_ox52u5.d(12): Error: no property `sort` for type `long[]`

    Failed: ["dmd", "-unittest", "-v", "-o-", "/tmp/tmpf_ox52u5.d", "-I/tmp"]

    '
  stdout: ''
  timestamp: 1660160692
- exit_code: 1
  program: "import std.math;\n/*\nReturn median of elements in the list l.\n    >>>\
    \ median([3L, 1L, 2L, 4L, 5L])\n    3L\n    >>> median([-10L, 4L, 6L, 1000L, 10L,\
    \ 20L])\n    15.0\n    \n*/\nfloat median(long[] l) \n{\n    long[] sorted = l.dup;\n\
    \    sorted.sort;\n    if (sorted.length % 2 == 1)\n    {\n        return sorted[sorted.length\
    \ / 2];\n    }\n    else\n    {\n        return (sorted[sorted.length / 2 - 1]\
    \ + sorted[sorted.length / 2]) / 2.0;\n    }\n}\nunittest\n{\n    alias candidate\
    \ = median;\n\n    assert(candidate([3L, 1L, 2L, 4L, 5L]) == 3L);\n    assert(candidate([-10L,\
    \ 4L, 6L, 1000L, 10L, 20L]) == 8.0);\n    assert(candidate([5L]) == 5L);\n   \
    \ assert(candidate([6L, 5L]) == 5.5);\n    assert(candidate([8L, 1L, 3L, 9L, 9L,\
    \ 2L, 7L]) == 7L);\n}\nvoid main(){}"
  status: SyntaxError
  stderr: '/tmp/tmp87rzp2qr.d(13): Error: no property `sort` for type `long[]`

    Failed: ["dmd", "-unittest", "-v", "-o-", "/tmp/tmp87rzp2qr.d", "-I/tmp"]

    '
  stdout: ''
  timestamp: 1660160691
- exit_code: 1
  program: "import std.math;\n/*\nReturn median of elements in the list l.\n    >>>\
    \ median([3L, 1L, 2L, 4L, 5L])\n    3L\n    >>> median([-10L, 4L, 6L, 1000L, 10L,\
    \ 20L])\n    15.0\n    \n*/\nfloat median(long[] l) \n{\n    long[] sorted = l.dup;\n\
    \    sorted.sort;\n    int len = sorted.length;\n    if (len % 2 == 0) \n    {\n\
    \        return (sorted[len / 2 - 1] + sorted[len / 2]) / 2.0;\n    }\n    else\
    \ \n    {\n        return sorted[len / 2];\n    }\n}\nunittest\n{\n    alias candidate\
    \ = median;\n\n    assert(candidate([3L, 1L, 2L, 4L, 5L]) == 3L);\n    assert(candidate([-10L,\
    \ 4L, 6L, 1000L, 10L, 20L]) == 8.0);\n    assert(candidate([5L]) == 5L);\n   \
    \ assert(candidate([6L, 5L]) == 5.5);\n    assert(candidate([8L, 1L, 3L, 9L, 9L,\
    \ 2L, 7L]) == 7L);\n}\nvoid main(){}"
  status: SyntaxError
  stderr: '/tmp/tmphi_a8gcb.d(13): Error: no property `sort` for type `long[]`

    /tmp/tmphi_a8gcb.d(14): Error: cannot implicitly convert expression `sorted.length`
    of type `ulong` to `int`

    Failed: ["dmd", "-unittest", "-v", "-o-", "/tmp/tmphi_a8gcb.d", "-I/tmp"]

    '
  stdout: ''
  timestamp: 1660160691
- exit_code: 1
  program: "import std.math;\n/*\nReturn median of elements in the list l.\n    >>>\
    \ median([3L, 1L, 2L, 4L, 5L])\n    3L\n    >>> median([-10L, 4L, 6L, 1000L, 10L,\
    \ 20L])\n    15.0\n    \n*/\nfloat median(long[] l) \n{\n    long[] ll = l.dup;\n\
    \    ll.sort;\n    return ll[ll.length / 2];\n}\nunittest\n{\n    alias candidate\
    \ = median;\n\n    assert(candidate([3L, 1L, 2L, 4L, 5L]) == 3L);\n    assert(candidate([-10L,\
    \ 4L, 6L, 1000L, 10L, 20L]) == 8.0);\n    assert(candidate([5L]) == 5L);\n   \
    \ assert(candidate([6L, 5L]) == 5.5);\n    assert(candidate([8L, 1L, 3L, 9L, 9L,\
    \ 2L, 7L]) == 7L);\n}\nvoid main(){}"
  status: SyntaxError
  stderr: '/tmp/tmp_qht_o_5.d(13): Error: no property `sort` for type `long[]`

    Failed: ["dmd", "-unittest", "-v", "-o-", "/tmp/tmp_qht_o_5.d", "-I/tmp"]

    '
  stdout: ''
  timestamp: 1660160692
- exit_code: 1
  program: "import std.math;\n/*\nReturn median of elements in the list l.\n    >>>\
    \ median([3L, 1L, 2L, 4L, 5L])\n    3L\n    >>> median([-10L, 4L, 6L, 1000L, 10L,\
    \ 20L])\n    15.0\n    \n*/\nfloat median(long[] l) \n{\n    long[] sorted = l.dup;\n\
    \    sorted.sort;\n    int n = sorted.length;\n    if (n % 2 == 1) {\n       \
    \ return sorted[n / 2];\n    } else {\n        return (sorted[n / 2 - 1] + sorted[n\
    \ / 2]) / 2.0;\n    }\n}\nunittest\n{\n    alias candidate = median;\n\n    assert(candidate([3L,\
    \ 1L, 2L, 4L, 5L]) == 3L);\n    assert(candidate([-10L, 4L, 6L, 1000L, 10L, 20L])\
    \ == 8.0);\n    assert(candidate([5L]) == 5L);\n    assert(candidate([6L, 5L])\
    \ == 5.5);\n    assert(candidate([8L, 1L, 3L, 9L, 9L, 2L, 7L]) == 7L);\n}\nvoid\
    \ main(){}"
  status: SyntaxError
  stderr: '/tmp/tmp0t9cz4t1.d(13): Error: no property `sort` for type `long[]`

    /tmp/tmp0t9cz4t1.d(14): Error: cannot implicitly convert expression `sorted.length`
    of type `ulong` to `int`

    Failed: ["dmd", "-unittest", "-v", "-o-", "/tmp/tmp0t9cz4t1.d", "-I/tmp"]

    '
  stdout: ''
  timestamp: 1660160691
- exit_code: 1
  program: "import std.math;\n/*\nReturn median of elements in the list l.\n    >>>\
    \ median([3L, 1L, 2L, 4L, 5L])\n    3L\n    >>> median([-10L, 4L, 6L, 1000L, 10L,\
    \ 20L])\n    15.0\n    \n*/\nfloat median(long[] l) \n{\n    long[] sorted = l.dup;\n\
    \    sorted.sort;\n    int n = sorted.length;\n    if (n % 2 == 1)\n        return\
    \ sorted[n / 2];\n    else\n        return (sorted[n / 2 - 1] + sorted[n / 2])\
    \ / 2.0;\n}\nunittest\n{\n    alias candidate = median;\n\n    assert(candidate([3L,\
    \ 1L, 2L, 4L, 5L]) == 3L);\n    assert(candidate([-10L, 4L, 6L, 1000L, 10L, 20L])\
    \ == 8.0);\n    assert(candidate([5L]) == 5L);\n    assert(candidate([6L, 5L])\
    \ == 5.5);\n    assert(candidate([8L, 1L, 3L, 9L, 9L, 2L, 7L]) == 7L);\n}\nvoid\
    \ main(){}"
  status: SyntaxError
  stderr: '/tmp/tmpwnuehx69.d(13): Error: no property `sort` for type `long[]`

    /tmp/tmpwnuehx69.d(14): Error: cannot implicitly convert expression `sorted.length`
    of type `ulong` to `int`

    Failed: ["dmd", "-unittest", "-v", "-o-", "/tmp/tmpwnuehx69.d", "-I/tmp"]

    '
  stdout: ''
  timestamp: 1660160691
- exit_code: 1
  program: "import std.math;\n/*\nReturn median of elements in the list l.\n    >>>\
    \ median([3L, 1L, 2L, 4L, 5L])\n    3L\n    >>> median([-10L, 4L, 6L, 1000L, 10L,\
    \ 20L])\n    15.0\n    \n*/\nfloat median(long[] l) \n{\n    long[] sorted = l.dup.sort;\n\
    \    int mid = l.length / 2;\n    if (l.length % 2 == 0)\n        return (sorted[mid]\
    \ + sorted[mid - 1]) / 2.0;\n    else\n        return sorted[mid];\n}\nunittest\n\
    {\n    alias candidate = median;\n\n    assert(candidate([3L, 1L, 2L, 4L, 5L])\
    \ == 3L);\n    assert(candidate([-10L, 4L, 6L, 1000L, 10L, 20L]) == 8.0);\n  \
    \  assert(candidate([5L]) == 5L);\n    assert(candidate([6L, 5L]) == 5.5);\n \
    \   assert(candidate([8L, 1L, 3L, 9L, 9L, 2L, 7L]) == 7L);\n}\nvoid main(){}"
  status: SyntaxError
  stderr: '/tmp/tmpiun4v6to.d(12): Error: no property `sort` for type `long[]`

    /tmp/tmpiun4v6to.d(13): Error: cannot implicitly convert expression `l.length
    / 2LU` of type `ulong` to `int`

    Failed: ["dmd", "-unittest", "-v", "-o-", "/tmp/tmpiun4v6to.d", "-I/tmp"]

    '
  stdout: ''
  timestamp: 1660160692
- exit_code: 1
  program: "import std.math;\n/*\nReturn median of elements in the list l.\n    >>>\
    \ median([3L, 1L, 2L, 4L, 5L])\n    3L\n    >>> median([-10L, 4L, 6L, 1000L, 10L,\
    \ 20L])\n    15.0\n    \n*/\nfloat median(long[] l) \n{\n    long[] sorted = l.dup;\n\
    \    sorted.sort;\n    int n = sorted.length;\n    if (n % 2 == 1) \n    {\n \
    \       return sorted[n / 2];\n    }\n    else \n    {\n        return (sorted[n\
    \ / 2 - 1] + sorted[n / 2]) / 2.0;\n    }\n}\nunittest\n{\n    alias candidate\
    \ = median;\n\n    assert(candidate([3L, 1L, 2L, 4L, 5L]) == 3L);\n    assert(candidate([-10L,\
    \ 4L, 6L, 1000L, 10L, 20L]) == 8.0);\n    assert(candidate([5L]) == 5L);\n   \
    \ assert(candidate([6L, 5L]) == 5.5);\n    assert(candidate([8L, 1L, 3L, 9L, 9L,\
    \ 2L, 7L]) == 7L);\n}\nvoid main(){}"
  status: SyntaxError
  stderr: '/tmp/tmp_29yzyn1.d(13): Error: no property `sort` for type `long[]`

    /tmp/tmp_29yzyn1.d(14): Error: cannot implicitly convert expression `sorted.length`
    of type `ulong` to `int`

    Failed: ["dmd", "-unittest", "-v", "-o-", "/tmp/tmp_29yzyn1.d", "-I/tmp"]

    '
  stdout: ''
  timestamp: 1660160692
- exit_code: 1
  program: "import std.math;\n/*\nReturn median of elements in the list l.\n    >>>\
    \ median([3L, 1L, 2L, 4L, 5L])\n    3L\n    >>> median([-10L, 4L, 6L, 1000L, 10L,\
    \ 20L])\n    15.0\n    \n*/\nfloat median(long[] l) \n{\n    long[] sorted = l.dup;\n\
    \    sorted.sort;\n    if (sorted.length % 2 == 1)\n        return sorted[sorted.length\
    \ / 2];\n    else\n        return (sorted[sorted.length / 2 - 1] + sorted[sorted.length\
    \ / 2]) / 2.0;\n}\nunittest\n{\n    alias candidate = median;\n\n    assert(candidate([3L,\
    \ 1L, 2L, 4L, 5L]) == 3L);\n    assert(candidate([-10L, 4L, 6L, 1000L, 10L, 20L])\
    \ == 8.0);\n    assert(candidate([5L]) == 5L);\n    assert(candidate([6L, 5L])\
    \ == 5.5);\n    assert(candidate([8L, 1L, 3L, 9L, 9L, 2L, 7L]) == 7L);\n}\nvoid\
    \ main(){}"
  status: SyntaxError
  stderr: '/tmp/tmpx89ezo5q.d(13): Error: no property `sort` for type `long[]`

    Failed: ["dmd", "-unittest", "-v", "-o-", "/tmp/tmpx89ezo5q.d", "-I/tmp"]

    '
  stdout: ''
  timestamp: 1660160691
- exit_code: 1
  program: "import std.math;\n/*\nReturn median of elements in the list l.\n    >>>\
    \ median([3L, 1L, 2L, 4L, 5L])\n    3L\n    >>> median([-10L, 4L, 6L, 1000L, 10L,\
    \ 20L])\n    15.0\n    \n*/\nfloat median(long[] l) \n{\n    long[] l2 = l[0..$];\n\
    \    sort(l2);\n    int n = l2.length;\n    if (n % 2 == 1)\n        return l2[n\
    \ / 2];\n    else\n        return (l2[n / 2 - 1] + l2[n / 2]) / 2.0;\n}\nunittest\n\
    {\n    alias candidate = median;\n\n    assert(candidate([3L, 1L, 2L, 4L, 5L])\
    \ == 3L);\n    assert(candidate([-10L, 4L, 6L, 1000L, 10L, 20L]) == 8.0);\n  \
    \  assert(candidate([5L]) == 5L);\n    assert(candidate([6L, 5L]) == 5.5);\n \
    \   assert(candidate([8L, 1L, 3L, 9L, 9L, 2L, 7L]) == 7L);\n}\nvoid main(){}"
  status: SyntaxError
  stderr: '/tmp/tmp9455jgcr.d(13): Error: undefined identifier `sort`, did you mean
    function `sqrt`?

    /tmp/tmp9455jgcr.d(14): Error: cannot implicitly convert expression `l2.length`
    of type `ulong` to `int`

    Failed: ["dmd", "-unittest", "-v", "-o-", "/tmp/tmp9455jgcr.d", "-I/tmp"]

    '
  stdout: ''
  timestamp: 1660160692
- exit_code: 1
  program: "import std.math;\n/*\nReturn median of elements in the list l.\n    >>>\
    \ median([3L, 1L, 2L, 4L, 5L])\n    3L\n    >>> median([-10L, 4L, 6L, 1000L, 10L,\
    \ 20L])\n    15.0\n    \n*/\nfloat median(long[] l) \n{\n    long[] sorted = l.dup;\n\
    \    sorted.sort;\n    if (sorted.length % 2 == 1)\n        return sorted[sorted.length\
    \ / 2];\n    else\n        return (sorted[sorted.length / 2 - 1] + sorted[sorted.length\
    \ / 2]) / 2.0;\n}\n/*\nReturn the mean of elements in the list l.\n    >>> mean([3L,\
    \ 1L, 2L, 4L, 5L])\n    3.0\n    >>> mean([-10L, 4L, 6L, 1000L, 10L, 20L])\n \
    \   145.0\n*/\nfloat mean(long[] l) \n{\n    long sum = 0;\n    foreach (long\
    \ i; l)\n        sum += i;\n    return sum / l.length;\n}\n/*\nReturn the standard\
    \ deviation of elements in the list l.\n    >>> stddev([3L, 1L, 2L, 4L, 5L])\n\
    \    1.5811388300841898\n    >>> stddev([-10L, 4L, 6L, 1000L, 10L, 20L])\n   \
    \ 538.8166538263927\n*/\nfloat stddev(long[] l) \n{\n    float m = mean(l);\n\
    \    float sum = 0;\n    foreach (long i; l)\n        sum += (i - m) * (i - m);\n\
    \    return sqrt(sum / l.length);\n}\n/*\nReturn the variance of elements in the\
    \ list l.\n    >>> variance([3L, 1L, 2L, 4L, 5L])\n    2.5\n    >>> variance([-10L,\
    \ 4L, 6L, 1000L, 10L, 20L])\n    290555.55555555557\n*/\nfloat variance(long[]\
    \ l) \n{\n    float m = mean(l);\n    float sum = 0;\n    foreach (long i; l)\n\
    \        sum += (i - m) * (i - m);\n    return sum / l.length;\n}\n/*\nReturn\
    \ the standard error of elements in the list l.\n    >>> stderr([3L,\nunittest\n\
    {\n    alias candidate = median;\n\n    assert(candidate([3L, 1L, 2L, 4L, 5L])\
    \ == 3L);\n    assert(candidate([-10L, 4L, 6L, 1000L, 10L, 20L]) == 8.0);\n  \
    \  assert(candidate([5L]) == 5L);\n    assert(candidate([6L, 5L]) == 5.5);\n \
    \   assert(candidate([8L, 1L, 3L, 9L, 9L, 2L, 7L]) == 7L);\n}\nvoid main(){}"
  status: SyntaxError
  stderr: '/tmp/tmpskvzyx38.d(63): Error: unterminated /* */ comment

    Failed: ["dmd", "-unittest", "-v", "-o-", "/tmp/tmpskvzyx38.d", "-I/tmp"]

    '
  stdout: ''
  timestamp: 1660160692
- exit_code: 1
  program: "import std.math;\n/*\nReturn median of elements in the list l.\n    >>>\
    \ median([3L, 1L, 2L, 4L, 5L])\n    3L\n    >>> median([-10L, 4L, 6L, 1000L, 10L,\
    \ 20L])\n    15.0\n    \n*/\nfloat median(long[] l) \n{\n    long[] sorted = l.dup;\n\
    \    sorted.sort;\n    int n = sorted.length;\n    if (n % 2 == 1) {\n       \
    \ return sorted[n / 2];\n    } else {\n        return (sorted[n / 2 - 1] + sorted[n\
    \ / 2]) / 2.0;\n    }\n}\nunittest\n{\n    alias candidate = median;\n\n    assert(candidate([3L,\
    \ 1L, 2L, 4L, 5L]) == 3L);\n    assert(candidate([-10L, 4L, 6L, 1000L, 10L, 20L])\
    \ == 8.0);\n    assert(candidate([5L]) == 5L);\n    assert(candidate([6L, 5L])\
    \ == 5.5);\n    assert(candidate([8L, 1L, 3L, 9L, 9L, 2L, 7L]) == 7L);\n}\nvoid\
    \ main(){}"
  status: SyntaxError
  stderr: '/tmp/tmp0t9cz4t1.d(13): Error: no property `sort` for type `long[]`

    /tmp/tmp0t9cz4t1.d(14): Error: cannot implicitly convert expression `sorted.length`
    of type `ulong` to `int`

    Failed: ["dmd", "-unittest", "-v", "-o-", "/tmp/tmp0t9cz4t1.d", "-I/tmp"]

    '
  stdout: ''
  timestamp: 1660160691
- exit_code: 1
  program: "import std.math;\n/*\nReturn median of elements in the list l.\n    >>>\
    \ median([3L, 1L, 2L, 4L, 5L])\n    3L\n    >>> median([-10L, 4L, 6L, 1000L, 10L,\
    \ 20L])\n    15.0\n    \n*/\nfloat median(long[] l) \n{\n    long[] sorted = l.dup;\n\
    \    sorted.sort;\n    int len = sorted.length;\n    if (len % 2 == 0)\n    {\n\
    \        return (sorted[len / 2 - 1] + sorted[len / 2]) / 2.0;\n    }\n    else\n\
    \    {\n        return sorted[len / 2];\n    }\n}\nunittest\n{\n    alias candidate\
    \ = median;\n\n    assert(candidate([3L, 1L, 2L, 4L, 5L]) == 3L);\n    assert(candidate([-10L,\
    \ 4L, 6L, 1000L, 10L, 20L]) == 8.0);\n    assert(candidate([5L]) == 5L);\n   \
    \ assert(candidate([6L, 5L]) == 5.5);\n    assert(candidate([8L, 1L, 3L, 9L, 9L,\
    \ 2L, 7L]) == 7L);\n}\nvoid main(){}"
  status: SyntaxError
  stderr: '/tmp/tmpxjc4vgto.d(13): Error: no property `sort` for type `long[]`

    /tmp/tmpxjc4vgto.d(14): Error: cannot implicitly convert expression `sorted.length`
    of type `ulong` to `int`

    Failed: ["dmd", "-unittest", "-v", "-o-", "/tmp/tmpxjc4vgto.d", "-I/tmp"]

    '
  stdout: ''
  timestamp: 1660160691
- exit_code: 1
  program: "import std.math;\n/*\nReturn median of elements in the list l.\n    >>>\
    \ median([3L, 1L, 2L, 4L, 5L])\n    3L\n    >>> median([-10L, 4L, 6L, 1000L, 10L,\
    \ 20L])\n    15.0\n    \n*/\nfloat median(long[] l) \n{\n    long[] sorted = l.dup.sort;\n\
    \    int len = sorted.length;\n    if (len % 2 == 1)\n        return sorted[len\
    \ / 2];\n    else\n        return (sorted[len / 2 - 1] + sorted[len / 2]) / 2.0;\n\
    }\nunittest\n{\n    alias candidate = median;\n\n    assert(candidate([3L, 1L,\
    \ 2L, 4L, 5L]) == 3L);\n    assert(candidate([-10L, 4L, 6L, 1000L, 10L, 20L])\
    \ == 8.0);\n    assert(candidate([5L]) == 5L);\n    assert(candidate([6L, 5L])\
    \ == 5.5);\n    assert(candidate([8L, 1L, 3L, 9L, 9L, 2L, 7L]) == 7L);\n}\nvoid\
    \ main(){}"
  status: SyntaxError
  stderr: '/tmp/tmp6er9x_48.d(12): Error: no property `sort` for type `long[]`

    /tmp/tmp6er9x_48.d(13): Error: cannot implicitly convert expression `sorted.length`
    of type `ulong` to `int`

    Failed: ["dmd", "-unittest", "-v", "-o-", "/tmp/tmp6er9x_48.d", "-I/tmp"]

    '
  stdout: ''
  timestamp: 1660160692
- exit_code: 1
  program: "import std.math;\n/*\nReturn median of elements in the list l.\n    >>>\
    \ median([3L, 1L, 2L, 4L, 5L])\n    3L\n    >>> median([-10L, 4L, 6L, 1000L, 10L,\
    \ 20L])\n    15.0\n    \n*/\nfloat median(long[] l) \n{\n    long[] sorted = l.dup.sort;\n\
    \    int mid = l.length / 2;\n    if (l.length % 2 == 0) {\n        return (sorted[mid]\
    \ + sorted[mid-1]) / 2.0;\n    }\n    else {\n        return sorted[mid];\n  \
    \  }\n}\nunittest\n{\n    alias candidate = median;\n\n    assert(candidate([3L,\
    \ 1L, 2L, 4L, 5L]) == 3L);\n    assert(candidate([-10L, 4L, 6L, 1000L, 10L, 20L])\
    \ == 8.0);\n    assert(candidate([5L]) == 5L);\n    assert(candidate([6L, 5L])\
    \ == 5.5);\n    assert(candidate([8L, 1L, 3L, 9L, 9L, 2L, 7L]) == 7L);\n}\nvoid\
    \ main(){}"
  status: SyntaxError
  stderr: '/tmp/tmp50iont7v.d(12): Error: no property `sort` for type `long[]`

    /tmp/tmp50iont7v.d(13): Error: cannot implicitly convert expression `l.length
    / 2LU` of type `ulong` to `int`

    Failed: ["dmd", "-unittest", "-v", "-o-", "/tmp/tmp50iont7v.d", "-I/tmp"]

    '
  stdout: ''
  timestamp: 1660160692
- exit_code: 1
  program: "import std.math;\n/*\nReturn median of elements in the list l.\n    >>>\
    \ median([3L, 1L, 2L, 4L, 5L])\n    3L\n    >>> median([-10L, 4L, 6L, 1000L, 10L,\
    \ 20L])\n    15.0\n    \n*/\nfloat median(long[] l) \n{\n    long[] sorted = l.dup;\n\
    \    sorted.sort;\n    if (sorted.length % 2 == 1)\n        return sorted[sorted.length\
    \ / 2];\n    else\n        return (sorted[sorted.length / 2 - 1] + sorted[sorted.length\
    \ / 2]) / 2.0;\n}\nunittest\n{\n    alias candidate = median;\n\n    assert(candidate([3L,\
    \ 1L, 2L, 4L, 5L]) == 3L);\n    assert(candidate([-10L, 4L, 6L, 1000L, 10L, 20L])\
    \ == 8.0);\n    assert(candidate([5L]) == 5L);\n    assert(candidate([6L, 5L])\
    \ == 5.5);\n    assert(candidate([8L, 1L, 3L, 9L, 9L, 2L, 7L]) == 7L);\n}\nvoid\
    \ main(){}"
  status: SyntaxError
  stderr: '/tmp/tmpx89ezo5q.d(13): Error: no property `sort` for type `long[]`

    Failed: ["dmd", "-unittest", "-v", "-o-", "/tmp/tmpx89ezo5q.d", "-I/tmp"]

    '
  stdout: ''
  timestamp: 1660160691
- exit_code: 1
  program: "import std.math;\n/*\nReturn median of elements in the list l.\n    >>>\
    \ median([3L, 1L, 2L, 4L, 5L])\n    3L\n    >>> median([-10L, 4L, 6L, 1000L, 10L,\
    \ 20L])\n    15.0\n    \n*/\nfloat median(long[] l) \n{\n    long[] sorted = l.dup;\n\
    \    sorted.sort;\n    if(sorted.length % 2 == 0)\n    {\n        return (sorted[sorted.length\
    \ / 2] + sorted[sorted.length / 2 - 1]) / 2.0;\n    }\n    else\n    {\n     \
    \   return sorted[sorted.length / 2];\n    }\n}\nunittest\n{\n    alias candidate\
    \ = median;\n\n    assert(candidate([3L, 1L, 2L, 4L, 5L]) == 3L);\n    assert(candidate([-10L,\
    \ 4L, 6L, 1000L, 10L, 20L]) == 8.0);\n    assert(candidate([5L]) == 5L);\n   \
    \ assert(candidate([6L, 5L]) == 5.5);\n    assert(candidate([8L, 1L, 3L, 9L, 9L,\
    \ 2L, 7L]) == 7L);\n}\nvoid main(){}"
  status: SyntaxError
  stderr: '/tmp/tmp8063w_ou.d(13): Error: no property `sort` for type `long[]`

    Failed: ["dmd", "-unittest", "-v", "-o-", "/tmp/tmp8063w_ou.d", "-I/tmp"]

    '
  stdout: ''
  timestamp: 1660160692
- exit_code: 1
  program: "import std.math;\n/*\nReturn median of elements in the list l.\n    >>>\
    \ median([3L, 1L, 2L, 4L, 5L])\n    3L\n    >>> median([-10L, 4L, 6L, 1000L, 10L,\
    \ 20L])\n    15.0\n    \n*/\nfloat median(long[] l) \n{\n    long[] sorted = l.dup;\n\
    \    sorted.sort;\n    if (sorted.length % 2 == 1)\n        return sorted[sorted.length\
    \ / 2];\n    else\n        return (sorted[sorted.length / 2 - 1] + sorted[sorted.length\
    \ / 2]) / 2.0;\n}\nunittest\n{\n    alias candidate = median;\n\n    assert(candidate([3L,\
    \ 1L, 2L, 4L, 5L]) == 3L);\n    assert(candidate([-10L, 4L, 6L, 1000L, 10L, 20L])\
    \ == 8.0);\n    assert(candidate([5L]) == 5L);\n    assert(candidate([6L, 5L])\
    \ == 5.5);\n    assert(candidate([8L, 1L, 3L, 9L, 9L, 2L, 7L]) == 7L);\n}\nvoid\
    \ main(){}"
  status: SyntaxError
  stderr: '/tmp/tmpx89ezo5q.d(13): Error: no property `sort` for type `long[]`

    Failed: ["dmd", "-unittest", "-v", "-o-", "/tmp/tmpx89ezo5q.d", "-I/tmp"]

    '
  stdout: ''
  timestamp: 1660160691
- exit_code: 1
  program: "import std.math;\n/*\nReturn median of elements in the list l.\n    >>>\
    \ median([3L, 1L, 2L, 4L, 5L])\n    3L\n    >>> median([-10L, 4L, 6L, 1000L, 10L,\
    \ 20L])\n    15.0\n    \n*/\nfloat median(long[] l) \n{\n    long[] sorted = l.dup.sort;\n\
    \    long n = l.length;\n    if (n % 2 == 1)\n    {\n        return sorted[n /\
    \ 2];\n    }\n    else\n    {\n        return (sorted[n / 2 - 1] + sorted[n /\
    \ 2]) / 2.0;\n    }\n}\nunittest\n{\n    alias candidate = median;\n\n    assert(candidate([3L,\
    \ 1L, 2L, 4L, 5L]) == 3L);\n    assert(candidate([-10L, 4L, 6L, 1000L, 10L, 20L])\
    \ == 8.0);\n    assert(candidate([5L]) == 5L);\n    assert(candidate([6L, 5L])\
    \ == 5.5);\n    assert(candidate([8L, 1L, 3L, 9L, 9L, 2L, 7L]) == 7L);\n}\nvoid\
    \ main(){}"
  status: SyntaxError
  stderr: '/tmp/tmp28euvlxj.d(12): Error: no property `sort` for type `long[]`

    Failed: ["dmd", "-unittest", "-v", "-o-", "/tmp/tmp28euvlxj.d", "-I/tmp"]

    '
  stdout: ''
  timestamp: 1660160692
- exit_code: 1
  program: "import std.math;\n/*\nReturn median of elements in the list l.\n    >>>\
    \ median([3L, 1L, 2L, 4L, 5L])\n    3L\n    >>> median([-10L, 4L, 6L, 1000L, 10L,\
    \ 20L])\n    15.0\n    \n*/\nfloat median(long[] l) \n{\n    long[] sorted = l.dup;\n\
    \    sorted.sort;\n    if (sorted.length % 2 == 1) \n    {\n        return sorted[sorted.length\
    \ / 2];\n    } \n    else \n    {\n        return (sorted[sorted.length / 2 -\
    \ 1] + sorted[sorted.length / 2]) / 2.0;\n    }\n}\nunittest\n{\n    alias candidate\
    \ = median;\n\n    assert(candidate([3L, 1L, 2L, 4L, 5L]) == 3L);\n    assert(candidate([-10L,\
    \ 4L, 6L, 1000L, 10L, 20L]) == 8.0);\n    assert(candidate([5L]) == 5L);\n   \
    \ assert(candidate([6L, 5L]) == 5.5);\n    assert(candidate([8L, 1L, 3L, 9L, 9L,\
    \ 2L, 7L]) == 7L);\n}\nvoid main(){}"
  status: SyntaxError
  stderr: '/tmp/tmp14nivz02.d(13): Error: no property `sort` for type `long[]`

    Failed: ["dmd", "-unittest", "-v", "-o-", "/tmp/tmp14nivz02.d", "-I/tmp"]

    '
  stdout: ''
  timestamp: 1660160691
- exit_code: 1
  program: "import std.math;\n/*\nReturn median of elements in the list l.\n    >>>\
    \ median([3L, 1L, 2L, 4L, 5L])\n    3L\n    >>> median([-10L, 4L, 6L, 1000L, 10L,\
    \ 20L])\n    15.0\n    \n*/\nfloat median(long[] l) \n{\n    long[] sorted = l.dup;\n\
    \    sorted.sort;\n    int n = sorted.length;\n    if (n % 2 == 1) \n    {\n \
    \       return sorted[n / 2];\n    }\n    else \n    {\n        return (sorted[n\
    \ / 2 - 1] + sorted[n / 2]) / 2.0;\n    }\n}\nunittest\n{\n    alias candidate\
    \ = median;\n\n    assert(candidate([3L, 1L, 2L, 4L, 5L]) == 3L);\n    assert(candidate([-10L,\
    \ 4L, 6L, 1000L, 10L, 20L]) == 8.0);\n    assert(candidate([5L]) == 5L);\n   \
    \ assert(candidate([6L, 5L]) == 5.5);\n    assert(candidate([8L, 1L, 3L, 9L, 9L,\
    \ 2L, 7L]) == 7L);\n}\nvoid main(){}"
  status: SyntaxError
  stderr: '/tmp/tmp_29yzyn1.d(13): Error: no property `sort` for type `long[]`

    /tmp/tmp_29yzyn1.d(14): Error: cannot implicitly convert expression `sorted.length`
    of type `ulong` to `int`

    Failed: ["dmd", "-unittest", "-v", "-o-", "/tmp/tmp_29yzyn1.d", "-I/tmp"]

    '
  stdout: ''
  timestamp: 1660160692
- exit_code: 1
  program: "import std.math;\n/*\nReturn median of elements in the list l.\n    >>>\
    \ median([3L, 1L, 2L, 4L, 5L])\n    3L\n    >>> median([-10L, 4L, 6L, 1000L, 10L,\
    \ 20L])\n    15.0\n    \n*/\nfloat median(long[] l) \n{\n    long[] sorted = l[];\n\
    \    sort(sorted);\n    int mid = l.length / 2;\n    if (l.length % 2 == 0) \n\
    \    {\n        return (sorted[mid] + sorted[mid - 1]) / 2.0;\n    } \n    else\
    \ \n    {\n        return sorted[mid];\n    }\n}\nunittest\n{\n    alias candidate\
    \ = median;\n\n    assert(candidate([3L, 1L, 2L, 4L, 5L]) == 3L);\n    assert(candidate([-10L,\
    \ 4L, 6L, 1000L, 10L, 20L]) == 8.0);\n    assert(candidate([5L]) == 5L);\n   \
    \ assert(candidate([6L, 5L]) == 5.5);\n    assert(candidate([8L, 1L, 3L, 9L, 9L,\
    \ 2L, 7L]) == 7L);\n}\nvoid main(){}"
  status: SyntaxError
  stderr: '/tmp/tmpksmyruuh.d(13): Error: undefined identifier `sort`, did you mean
    function `sqrt`?

    /tmp/tmpksmyruuh.d(14): Error: cannot implicitly convert expression `l.length
    / 2LU` of type `ulong` to `int`

    Failed: ["dmd", "-unittest", "-v", "-o-", "/tmp/tmpksmyruuh.d", "-I/tmp"]

    '
  stdout: ''
  timestamp: 1660160692
- exit_code: 1
  program: "import std.math;\n/*\nReturn median of elements in the list l.\n    >>>\
    \ median([3L, 1L, 2L, 4L, 5L])\n    3L\n    >>> median([-10L, 4L, 6L, 1000L, 10L,\
    \ 20L])\n    15.0\n    \n*/\nfloat median(long[] l) \n{\n    long[] sorted = l.dup;\n\
    \    sorted.sort;\n    int n = sorted.length;\n    if (n % 2 == 1)\n        return\
    \ sorted[n / 2];\n    else\n        return (sorted[n / 2 - 1] + sorted[n / 2])\
    \ / 2.0;\n}\nunittest\n{\n    alias candidate = median;\n\n    assert(candidate([3L,\
    \ 1L, 2L, 4L, 5L]) == 3L);\n    assert(candidate([-10L, 4L, 6L, 1000L, 10L, 20L])\
    \ == 8.0);\n    assert(candidate([5L]) == 5L);\n    assert(candidate([6L, 5L])\
    \ == 5.5);\n    assert(candidate([8L, 1L, 3L, 9L, 9L, 2L, 7L]) == 7L);\n}\nvoid\
    \ main(){}"
  status: SyntaxError
  stderr: '/tmp/tmpwnuehx69.d(13): Error: no property `sort` for type `long[]`

    /tmp/tmpwnuehx69.d(14): Error: cannot implicitly convert expression `sorted.length`
    of type `ulong` to `int`

    Failed: ["dmd", "-unittest", "-v", "-o-", "/tmp/tmpwnuehx69.d", "-I/tmp"]

    '
  stdout: ''
  timestamp: 1660160691
- exit_code: 1
  program: "import std.math;\n/*\nReturn median of elements in the list l.\n    >>>\
    \ median([3L, 1L, 2L, 4L, 5L])\n    3L\n    >>> median([-10L, 4L, 6L, 1000L, 10L,\
    \ 20L])\n    15.0\n    \n*/\nfloat median(long[] l) \n{\n    long[] sorted = sort(l);\n\
    \    int n = l.length;\n    if (n % 2 == 1) \n    {\n        return sorted[n /\
    \ 2];\n    }\n    else \n    {\n        return (sorted[n / 2 - 1] + sorted[n /\
    \ 2]) / 2.0;\n    }\n}\n/*\nReturn mean of elements in the list l.\n    >>> mean([3L,\
    \ 1L, 2L, 4L, 5L])\n    3.0\n    >>> mean([-10L, 4L, 6L, 1000L, 10L, 20L])\n \
    \   156.66666666666666\n*/\nfloat mean(long[] l) \n{\n    long sum = 0;\n    foreach\
    \ (long x; l) \n    {\n        sum += x;\n    }\n    return sum / (float)l.length;\n\
    }\n/*\nReturn mode of elements in the list l.\n    >>> mode([3L, 1L, 2L, 4L, 5L])\n\
    \    [1L, 2L, 3L, 4L, 5L]\n    >>> mode([-10L, 4L, 6L, 1000L, 10L, 20L, -10L,\
    \ 4L, 6L, 1000L, 10L, 20L])\n    [-10L, 4L, 6L, 10L, 20L, 1000L]\n*/\nlong[] mode(long[]\
    \ l) \n{\n    long[] count = new long[l.length];\n    long[] mode = new long[l.length];\n\
    \    int modeCount = 0;\n    foreach (long x; l) \n    {\n        int i = 0;\n\
    \        foreach (long y; l) \n        {\n            if (x == y) \n         \
    \   {\n                count[i]++;\n            }\n            i++;\n        }\n\
    \    }\n    int max = 0;\n    foreach (long x; count) \n    {\n        if (x >\
    \ max) \n        {\n            max = x;\n        }\n    }\n    int i = 0;\n \
    \   foreach (long x; l) \n    {\n        if (count[i]\nunittest\n{\n    alias\
    \ candidate = median;\n\n    assert(candidate([3L, 1L, 2L, 4L, 5L]) == 3L);\n\
    \    assert(candidate([-10L, 4L, 6L, 1000L, 10L, 20L]) == 8.0);\n    assert(candidate([5L])\
    \ == 5L);\n    assert(candidate([6L, 5L]) == 5.5);\n    assert(candidate([8L,\
    \ 1L, 3L, 9L, 9L, 2L, 7L]) == 7L);\n}\nvoid main(){}"
  status: SyntaxError
  stderr: '/tmp/tmpmxkkd6ml.d(37): Error: C style cast illegal, use `cast(float)l.length`

    /tmp/tmpmxkkd6ml.d(75): Error: found `unittest` when expecting `)`

    /tmp/tmpmxkkd6ml.d(85): Error: found `End of File` when expecting `}` following
    compound statement

    /tmp/tmpmxkkd6ml.d(85): Error: found `End of File` when expecting `}` following
    compound statement

    Failed: ["dmd", "-unittest", "-v", "-o-", "/tmp/tmpmxkkd6ml.d", "-I/tmp"]

    '
  stdout: ''
  timestamp: 1660160692
- exit_code: 1
  program: "import std.math;\n/*\nReturn median of elements in the list l.\n    >>>\
    \ median([3L, 1L, 2L, 4L, 5L])\n    3L\n    >>> median([-10L, 4L, 6L, 1000L, 10L,\
    \ 20L])\n    15.0\n    \n*/\nfloat median(long[] l) \n{\n    long[] temp = l.dup;\n\
    \    temp.sort;\n    int len = temp.length;\n    if (len % 2 == 0) \n    {\n \
    \       return (temp[len / 2 - 1] + temp[len / 2]) / 2.0;\n    } \n    else \n\
    \    {\n        return temp[len / 2];\n    }\n}\nunittest\n{\n    alias candidate\
    \ = median;\n\n    assert(candidate([3L, 1L, 2L, 4L, 5L]) == 3L);\n    assert(candidate([-10L,\
    \ 4L, 6L, 1000L, 10L, 20L]) == 8.0);\n    assert(candidate([5L]) == 5L);\n   \
    \ assert(candidate([6L, 5L]) == 5.5);\n    assert(candidate([8L, 1L, 3L, 9L, 9L,\
    \ 2L, 7L]) == 7L);\n}\nvoid main(){}"
  status: SyntaxError
  stderr: '/tmp/tmpk5qho0l8.d(13): Error: no property `sort` for type `long[]`

    /tmp/tmpk5qho0l8.d(14): Error: cannot implicitly convert expression `temp.length`
    of type `ulong` to `int`

    Failed: ["dmd", "-unittest", "-v", "-o-", "/tmp/tmpk5qho0l8.d", "-I/tmp"]

    '
  stdout: ''
  timestamp: 1660160691
- exit_code: 1
  program: "import std.math;\n/*\nReturn median of elements in the list l.\n    >>>\
    \ median([3L, 1L, 2L, 4L, 5L])\n    3L\n    >>> median([-10L, 4L, 6L, 1000L, 10L,\
    \ 20L])\n    15.0\n    \n*/\nfloat median(long[] l) \n{\n    long[] sorted = l.dup;\n\
    \    sorted.sort;\n    int n = sorted.length;\n    if (n % 2 == 1) \n    {\n \
    \       return sorted[n / 2];\n    } \n    else \n    {\n        return (sorted[n\
    \ / 2 - 1] + sorted[n / 2]) / 2.0;\n    }\n}\nunittest\n{\n    alias candidate\
    \ = median;\n\n    assert(candidate([3L, 1L, 2L, 4L, 5L]) == 3L);\n    assert(candidate([-10L,\
    \ 4L, 6L, 1000L, 10L, 20L]) == 8.0);\n    assert(candidate([5L]) == 5L);\n   \
    \ assert(candidate([6L, 5L]) == 5.5);\n    assert(candidate([8L, 1L, 3L, 9L, 9L,\
    \ 2L, 7L]) == 7L);\n}\nvoid main(){}"
  status: SyntaxError
  stderr: '/tmp/tmp6g5nvd39.d(13): Error: no property `sort` for type `long[]`

    /tmp/tmp6g5nvd39.d(14): Error: cannot implicitly convert expression `sorted.length`
    of type `ulong` to `int`

    Failed: ["dmd", "-unittest", "-v", "-o-", "/tmp/tmp6g5nvd39.d", "-I/tmp"]

    '
  stdout: ''
  timestamp: 1660160691
- exit_code: 1
  program: "import std.math;\n/*\nReturn median of elements in the list l.\n    >>>\
    \ median([3L, 1L, 2L, 4L, 5L])\n    3L\n    >>> median([-10L, 4L, 6L, 1000L, 10L,\
    \ 20L])\n    15.0\n    \n*/\nfloat median(long[] l) \n{\n    int n = l.length;\n\
    \    if (n == 0) \n    {\n        return 0.0;\n    }\n    else \n    {\n     \
    \   long[] sorted = l.dup;\n        sorted.sort;\n        if (n % 2 == 1) \n \
    \       {\n            return sorted[n / 2];\n        }\n        else \n     \
    \   {\n            return (sorted[n / 2 - 1] + sorted[n / 2]) / 2.0;\n       \
    \ }\n    }\n}\nunittest\n{\n    alias candidate = median;\n\n    assert(candidate([3L,\
    \ 1L, 2L, 4L, 5L]) == 3L);\n    assert(candidate([-10L, 4L, 6L, 1000L, 10L, 20L])\
    \ == 8.0);\n    assert(candidate([5L]) == 5L);\n    assert(candidate([6L, 5L])\
    \ == 5.5);\n    assert(candidate([8L, 1L, 3L, 9L, 9L, 2L, 7L]) == 7L);\n}\nvoid\
    \ main(){}"
  status: SyntaxError
  stderr: '/tmp/tmpr4r_dpqq.d(12): Error: cannot implicitly convert expression `l.length`
    of type `ulong` to `int`

    /tmp/tmpr4r_dpqq.d(20): Error: no property `sort` for type `long[]`

    Failed: ["dmd", "-unittest", "-v", "-o-", "/tmp/tmpr4r_dpqq.d", "-I/tmp"]

    '
  stdout: ''
  timestamp: 1660160692
- exit_code: 1
  program: "import std.math;\n/*\nReturn median of elements in the list l.\n    >>>\
    \ median([3L, 1L, 2L, 4L, 5L])\n    3L\n    >>> median([-10L, 4L, 6L, 1000L, 10L,\
    \ 20L])\n    15.0\n    \n*/\nfloat median(long[] l) \n{\n    long[] sorted = l.dup;\n\
    \    sorted.sort;\n    if (sorted.length % 2 == 1)\n        return sorted[sorted.length\
    \ / 2];\n    else\n        return (sorted[sorted.length / 2 - 1] + sorted[sorted.length\
    \ / 2]) / 2.0;\n}\nunittest\n{\n    alias candidate = median;\n\n    assert(candidate([3L,\
    \ 1L, 2L, 4L, 5L]) == 3L);\n    assert(candidate([-10L, 4L, 6L, 1000L, 10L, 20L])\
    \ == 8.0);\n    assert(candidate([5L]) == 5L);\n    assert(candidate([6L, 5L])\
    \ == 5.5);\n    assert(candidate([8L, 1L, 3L, 9L, 9L, 2L, 7L]) == 7L);\n}\nvoid\
    \ main(){}"
  status: SyntaxError
  stderr: '/tmp/tmpx89ezo5q.d(13): Error: no property `sort` for type `long[]`

    Failed: ["dmd", "-unittest", "-v", "-o-", "/tmp/tmpx89ezo5q.d", "-I/tmp"]

    '
  stdout: ''
  timestamp: 1660160691
- exit_code: 1
  program: "import std.math;\n/*\nReturn median of elements in the list l.\n    >>>\
    \ median([3L, 1L, 2L, 4L, 5L])\n    3L\n    >>> median([-10L, 4L, 6L, 1000L, 10L,\
    \ 20L])\n    15.0\n    \n*/\nfloat median(long[] l) \n{\n    long[] sorted = l.dup;\n\
    \    sorted.sort;\n    int len = sorted.length;\n    if (len % 2 == 1)\n     \
    \   return sorted[len / 2];\n    else\n        return (sorted[len / 2 - 1] + sorted[len\
    \ / 2]) / 2.0;\n}\nunittest\n{\n    alias candidate = median;\n\n    assert(candidate([3L,\
    \ 1L, 2L, 4L, 5L]) == 3L);\n    assert(candidate([-10L, 4L, 6L, 1000L, 10L, 20L])\
    \ == 8.0);\n    assert(candidate([5L]) == 5L);\n    assert(candidate([6L, 5L])\
    \ == 5.5);\n    assert(candidate([8L, 1L, 3L, 9L, 9L, 2L, 7L]) == 7L);\n}\nvoid\
    \ main(){}"
  status: SyntaxError
  stderr: '/tmp/tmpexp_u46_.d(13): Error: no property `sort` for type `long[]`

    /tmp/tmpexp_u46_.d(14): Error: cannot implicitly convert expression `sorted.length`
    of type `ulong` to `int`

    Failed: ["dmd", "-unittest", "-v", "-o-", "/tmp/tmpexp_u46_.d", "-I/tmp"]

    '
  stdout: ''
  timestamp: 1660160691
- exit_code: 1
  program: "import std.math;\n/*\nReturn median of elements in the list l.\n    >>>\
    \ median([3L, 1L, 2L, 4L, 5L])\n    3L\n    >>> median([-10L, 4L, 6L, 1000L, 10L,\
    \ 20L])\n    15.0\n    \n*/\nfloat median(long[] l) \n{\n    long[] sorted = l.dup;\n\
    \    sorted.sort;\n    if (sorted.length % 2 == 1)\n    {\n        return sorted[sorted.length\
    \ / 2];\n    }\n    else\n    {\n        return (sorted[sorted.length / 2 - 1]\
    \ + sorted[sorted.length / 2]) / 2.0;\n    }\n}\nunittest\n{\n    alias candidate\
    \ = median;\n\n    assert(candidate([3L, 1L, 2L, 4L, 5L]) == 3L);\n    assert(candidate([-10L,\
    \ 4L, 6L, 1000L, 10L, 20L]) == 8.0);\n    assert(candidate([5L]) == 5L);\n   \
    \ assert(candidate([6L, 5L]) == 5.5);\n    assert(candidate([8L, 1L, 3L, 9L, 9L,\
    \ 2L, 7L]) == 7L);\n}\nvoid main(){}"
  status: SyntaxError
  stderr: '/tmp/tmp87rzp2qr.d(13): Error: no property `sort` for type `long[]`

    Failed: ["dmd", "-unittest", "-v", "-o-", "/tmp/tmp87rzp2qr.d", "-I/tmp"]

    '
  stdout: ''
  timestamp: 1660160691
- exit_code: 1
  program: "import std.math;\n/*\nReturn median of elements in the list l.\n    >>>\
    \ median([3L, 1L, 2L, 4L, 5L])\n    3L\n    >>> median([-10L, 4L, 6L, 1000L, 10L,\
    \ 20L])\n    15.0\n    \n*/\nfloat median(long[] l) \n{\n    long[] sorted = l.dup;\n\
    \    sorted.sort;\n    if (sorted.length % 2 == 1)\n    {\n        return sorted[sorted.length\
    \ / 2];\n    }\n    else\n    {\n        return (sorted[sorted.length / 2 - 1]\
    \ + sorted[sorted.length / 2]) / 2.0;\n    }\n}\nunittest\n{\n    alias candidate\
    \ = median;\n\n    assert(candidate([3L, 1L, 2L, 4L, 5L]) == 3L);\n    assert(candidate([-10L,\
    \ 4L, 6L, 1000L, 10L, 20L]) == 8.0);\n    assert(candidate([5L]) == 5L);\n   \
    \ assert(candidate([6L, 5L]) == 5.5);\n    assert(candidate([8L, 1L, 3L, 9L, 9L,\
    \ 2L, 7L]) == 7L);\n}\nvoid main(){}"
  status: SyntaxError
  stderr: '/tmp/tmp87rzp2qr.d(13): Error: no property `sort` for type `long[]`

    Failed: ["dmd", "-unittest", "-v", "-o-", "/tmp/tmp87rzp2qr.d", "-I/tmp"]

    '
  stdout: ''
  timestamp: 1660160691
- exit_code: 1
  program: "import std.math;\n/*\nReturn median of elements in the list l.\n    >>>\
    \ median([3L, 1L, 2L, 4L, 5L])\n    3L\n    >>> median([-10L, 4L, 6L, 1000L, 10L,\
    \ 20L])\n    15.0\n    \n*/\nfloat median(long[] l) \n{\n    long[] sorted = l.dup;\n\
    \    sorted.sort;\n    return (sorted[l.length / 2] + sorted[(l.length - 1) /\
    \ 2]) / 2.0;\n}\nunittest\n{\n    alias candidate = median;\n\n    assert(candidate([3L,\
    \ 1L, 2L, 4L, 5L]) == 3L);\n    assert(candidate([-10L, 4L, 6L, 1000L, 10L, 20L])\
    \ == 8.0);\n    assert(candidate([5L]) == 5L);\n    assert(candidate([6L, 5L])\
    \ == 5.5);\n    assert(candidate([8L, 1L, 3L, 9L, 9L, 2L, 7L]) == 7L);\n}\nvoid\
    \ main(){}"
  status: SyntaxError
  stderr: '/tmp/tmpsew7j0ei.d(13): Error: no property `sort` for type `long[]`

    Failed: ["dmd", "-unittest", "-v", "-o-", "/tmp/tmpsew7j0ei.d", "-I/tmp"]

    '
  stdout: ''
  timestamp: 1660160692
- exit_code: 1
  program: "import std.math;\n/*\nReturn median of elements in the list l.\n    >>>\
    \ median([3L, 1L, 2L, 4L, 5L])\n    3L\n    >>> median([-10L, 4L, 6L, 1000L, 10L,\
    \ 20L])\n    15.0\n    \n*/\nfloat median(long[] l) \n{\n    long[] sorted = l.dup;\n\
    \    sorted.sort;\n    if (sorted.length % 2 == 1) {\n        return sorted[sorted.length\
    \ / 2];\n    } else {\n        return (sorted[sorted.length / 2 - 1] + sorted[sorted.length\
    \ / 2]) / 2.0;\n    }\n}\nunittest\n{\n    alias candidate = median;\n\n    assert(candidate([3L,\
    \ 1L, 2L, 4L, 5L]) == 3L);\n    assert(candidate([-10L, 4L, 6L, 1000L, 10L, 20L])\
    \ == 8.0);\n    assert(candidate([5L]) == 5L);\n    assert(candidate([6L, 5L])\
    \ == 5.5);\n    assert(candidate([8L, 1L, 3L, 9L, 9L, 2L, 7L]) == 7L);\n}\nvoid\
    \ main(){}"
  status: SyntaxError
  stderr: '/tmp/tmpkqzslih2.d(13): Error: no property `sort` for type `long[]`

    Failed: ["dmd", "-unittest", "-v", "-o-", "/tmp/tmpkqzslih2.d", "-I/tmp"]

    '
  stdout: ''
  timestamp: 1660160691
- exit_code: 1
  program: "import std.math;\n/*\nReturn median of elements in the list l.\n    >>>\
    \ median([3L, 1L, 2L, 4L, 5L])\n    3L\n    >>> median([-10L, 4L, 6L, 1000L, 10L,\
    \ 20L])\n    15.0\n    \n*/\nfloat median(long[] l) \n{\n    long[] sorted = l.dup;\n\
    \    sorted.sort;\n    if (sorted.length % 2 == 1) {\n        return sorted[sorted.length\
    \ / 2];\n    } else {\n        return (sorted[sorted.length / 2 - 1] + sorted[sorted.length\
    \ / 2]) / 2.0;\n    }\n}\nunittest\n{\n    alias candidate = median;\n\n    assert(candidate([3L,\
    \ 1L, 2L, 4L, 5L]) == 3L);\n    assert(candidate([-10L, 4L, 6L, 1000L, 10L, 20L])\
    \ == 8.0);\n    assert(candidate([5L]) == 5L);\n    assert(candidate([6L, 5L])\
    \ == 5.5);\n    assert(candidate([8L, 1L, 3L, 9L, 9L, 2L, 7L]) == 7L);\n}\nvoid\
    \ main(){}"
  status: SyntaxError
  stderr: '/tmp/tmpkqzslih2.d(13): Error: no property `sort` for type `long[]`

    Failed: ["dmd", "-unittest", "-v", "-o-", "/tmp/tmpkqzslih2.d", "-I/tmp"]

    '
  stdout: ''
  timestamp: 1660160691
- exit_code: 1
  program: "import std.math;\n/*\nReturn median of elements in the list l.\n    >>>\
    \ median([3L, 1L, 2L, 4L, 5L])\n    3L\n    >>> median([-10L, 4L, 6L, 1000L, 10L,\
    \ 20L])\n    15.0\n    \n*/\nfloat median(long[] l) \n{\n    long[] sorted = l.dup.sort;\n\
    \    int mid = l.length / 2;\n    if (l.length % 2 == 0)\n        return (sorted[mid]\
    \ + sorted[mid-1]) / 2.0;\n    else\n        return sorted[mid];\n}\nunittest\n\
    {\n    alias candidate = median;\n\n    assert(candidate([3L, 1L, 2L, 4L, 5L])\
    \ == 3L);\n    assert(candidate([-10L, 4L, 6L, 1000L, 10L, 20L]) == 8.0);\n  \
    \  assert(candidate([5L]) == 5L);\n    assert(candidate([6L, 5L]) == 5.5);\n \
    \   assert(candidate([8L, 1L, 3L, 9L, 9L, 2L, 7L]) == 7L);\n}\nvoid main(){}"
  status: SyntaxError
  stderr: '/tmp/tmp317p8ydv.d(12): Error: no property `sort` for type `long[]`

    /tmp/tmp317p8ydv.d(13): Error: cannot implicitly convert expression `l.length
    / 2LU` of type `ulong` to `int`

    Failed: ["dmd", "-unittest", "-v", "-o-", "/tmp/tmp317p8ydv.d", "-I/tmp"]

    '
  stdout: ''
  timestamp: 1660160692
- exit_code: 1
  program: "import std.math;\n/*\nReturn median of elements in the list l.\n    >>>\
    \ median([3L, 1L, 2L, 4L, 5L])\n    3L\n    >>> median([-10L, 4L, 6L, 1000L, 10L,\
    \ 20L])\n    15.0\n    \n*/\nfloat median(long[] l) \n{\n    long[] sorted = l.dup;\n\
    \    sorted.sort;\n    if (sorted.length % 2 == 1)\n    {\n        return sorted[sorted.length\
    \ / 2];\n    }\n    else\n    {\n        return (sorted[sorted.length / 2 - 1]\
    \ + sorted[sorted.length / 2]) / 2.0;\n    }\n}\nunittest\n{\n    alias candidate\
    \ = median;\n\n    assert(candidate([3L, 1L, 2L, 4L, 5L]) == 3L);\n    assert(candidate([-10L,\
    \ 4L, 6L, 1000L, 10L, 20L]) == 8.0);\n    assert(candidate([5L]) == 5L);\n   \
    \ assert(candidate([6L, 5L]) == 5.5);\n    assert(candidate([8L, 1L, 3L, 9L, 9L,\
    \ 2L, 7L]) == 7L);\n}\nvoid main(){}"
  status: SyntaxError
  stderr: '/tmp/tmp87rzp2qr.d(13): Error: no property `sort` for type `long[]`

    Failed: ["dmd", "-unittest", "-v", "-o-", "/tmp/tmp87rzp2qr.d", "-I/tmp"]

    '
  stdout: ''
  timestamp: 1660160691
- exit_code: 1
  program: "import std.math;\n/*\nReturn median of elements in the list l.\n    >>>\
    \ median([3L, 1L, 2L, 4L, 5L])\n    3L\n    >>> median([-10L, 4L, 6L, 1000L, 10L,\
    \ 20L])\n    15.0\n    \n*/\nfloat median(long[] l) \n{\n    long[] sorted = l.sort();\n\
    \    int len = sorted.length;\n    if (len % 2 == 1)\n        return sorted[len\
    \ / 2];\n    else\n        return (sorted[len / 2 - 1] + sorted[len / 2]) / 2.0;\n\
    }\nunittest\n{\n    alias candidate = median;\n\n    assert(candidate([3L, 1L,\
    \ 2L, 4L, 5L]) == 3L);\n    assert(candidate([-10L, 4L, 6L, 1000L, 10L, 20L])\
    \ == 8.0);\n    assert(candidate([5L]) == 5L);\n    assert(candidate([6L, 5L])\
    \ == 5.5);\n    assert(candidate([8L, 1L, 3L, 9L, 9L, 2L, 7L]) == 7L);\n}\nvoid\
    \ main(){}"
  status: SyntaxError
  stderr: '/tmp/tmprpkml11j.d(12): Error: no property `sort` for type `long[]`

    /tmp/tmprpkml11j.d(13): Error: cannot implicitly convert expression `sorted.length`
    of type `ulong` to `int`

    Failed: ["dmd", "-unittest", "-v", "-o-", "/tmp/tmprpkml11j.d", "-I/tmp"]

    '
  stdout: ''
  timestamp: 1660160692
- exit_code: 1
  program: "import std.math;\n/*\nReturn median of elements in the list l.\n    >>>\
    \ median([3L, 1L, 2L, 4L, 5L])\n    3L\n    >>> median([-10L, 4L, 6L, 1000L, 10L,\
    \ 20L])\n    15.0\n    \n*/\nfloat median(long[] l) \n{\n    l.sort();\n    int\
    \ n = l.length;\n    if (n % 2 == 1)\n        return l[n / 2];\n    else\n   \
    \     return (l[n / 2 - 1] + l[n / 2]) / 2.0;\n}\nunittest\n{\n    alias candidate\
    \ = median;\n\n    assert(candidate([3L, 1L, 2L, 4L, 5L]) == 3L);\n    assert(candidate([-10L,\
    \ 4L, 6L, 1000L, 10L, 20L]) == 8.0);\n    assert(candidate([5L]) == 5L);\n   \
    \ assert(candidate([6L, 5L]) == 5.5);\n    assert(candidate([8L, 1L, 3L, 9L, 9L,\
    \ 2L, 7L]) == 7L);\n}\nvoid main(){}"
  status: SyntaxError
  stderr: '/tmp/tmp73xq321a.d(12): Error: no property `sort` for type `long[]`

    /tmp/tmp73xq321a.d(13): Error: cannot implicitly convert expression `l.length`
    of type `ulong` to `int`

    Failed: ["dmd", "-unittest", "-v", "-o-", "/tmp/tmp73xq321a.d", "-I/tmp"]

    '
  stdout: ''
  timestamp: 1660160691
- exit_code: 1
  program: "import std.math;\n/*\nReturn median of elements in the list l.\n    >>>\
    \ median([3L, 1L, 2L, 4L, 5L])\n    3L\n    >>> median([-10L, 4L, 6L, 1000L, 10L,\
    \ 20L])\n    15.0\n    \n*/\nfloat median(long[] l) \n{\n    long[] sorted = sort(l);\n\
    \    int n = l.length;\n    if (n % 2 == 1)\n        return sorted[n / 2];\n \
    \   else\n        return (sorted[n / 2 - 1] + sorted[n / 2]) / 2.0;\n}\nunittest\n\
    {\n    alias candidate = median;\n\n    assert(candidate([3L, 1L, 2L, 4L, 5L])\
    \ == 3L);\n    assert(candidate([-10L, 4L, 6L, 1000L, 10L, 20L]) == 8.0);\n  \
    \  assert(candidate([5L]) == 5L);\n    assert(candidate([6L, 5L]) == 5.5);\n \
    \   assert(candidate([8L, 1L, 3L, 9L, 9L, 2L, 7L]) == 7L);\n}\nvoid main(){}"
  status: SyntaxError
  stderr: '/tmp/tmpqkkghh0l.d(12): Error: undefined identifier `sort`, did you mean
    function `sqrt`?

    /tmp/tmpqkkghh0l.d(13): Error: cannot implicitly convert expression `l.length`
    of type `ulong` to `int`

    Failed: ["dmd", "-unittest", "-v", "-o-", "/tmp/tmpqkkghh0l.d", "-I/tmp"]

    '
  stdout: ''
  timestamp: 1660160692
- exit_code: 1
  program: "import std.math;\n/*\nReturn median of elements in the list l.\n    >>>\
    \ median([3L, 1L, 2L, 4L, 5L])\n    3L\n    >>> median([-10L, 4L, 6L, 1000L, 10L,\
    \ 20L])\n    15.0\n    \n*/\nfloat median(long[] l) \n{\n    long[] sorted = l.dup;\n\
    \    sorted.sort;\n    int mid = sorted.length / 2;\n    if (sorted.length % 2\
    \ == 0) \n    {\n        return (sorted[mid - 1] + sorted[mid]) / 2.0;\n    }\n\
    \    else \n    {\n        return sorted[mid];\n    }\n}\nunittest\n{\n    alias\
    \ candidate = median;\n\n    assert(candidate([3L, 1L, 2L, 4L, 5L]) == 3L);\n\
    \    assert(candidate([-10L, 4L, 6L, 1000L, 10L, 20L]) == 8.0);\n    assert(candidate([5L])\
    \ == 5L);\n    assert(candidate([6L, 5L]) == 5.5);\n    assert(candidate([8L,\
    \ 1L, 3L, 9L, 9L, 2L, 7L]) == 7L);\n}\nvoid main(){}"
  status: SyntaxError
  stderr: '/tmp/tmp1r_nfwo0.d(13): Error: no property `sort` for type `long[]`

    /tmp/tmp1r_nfwo0.d(14): Error: cannot implicitly convert expression `sorted.length
    / 2LU` of type `ulong` to `int`

    Failed: ["dmd", "-unittest", "-v", "-o-", "/tmp/tmp1r_nfwo0.d", "-I/tmp"]

    '
  stdout: ''
  timestamp: 1660160691
- exit_code: 1
  program: "import std.math;\n/*\nReturn median of elements in the list l.\n    >>>\
    \ median([3L, 1L, 2L, 4L, 5L])\n    3L\n    >>> median([-10L, 4L, 6L, 1000L, 10L,\
    \ 20L])\n    15.0\n    \n*/\nfloat median(long[] l) \n{\n    long[] s = l.dup;\n\
    \    s.sort;\n    int n = s.length;\n    if (n % 2 == 1)\n        return s[n /\
    \ 2];\n    else\n        return (s[n / 2 - 1] + s[n / 2]) / 2.0;\n}\nunittest\n\
    {\n    alias candidate = median;\n\n    assert(candidate([3L, 1L, 2L, 4L, 5L])\
    \ == 3L);\n    assert(candidate([-10L, 4L, 6L, 1000L, 10L, 20L]) == 8.0);\n  \
    \  assert(candidate([5L]) == 5L);\n    assert(candidate([6L, 5L]) == 5.5);\n \
    \   assert(candidate([8L, 1L, 3L, 9L, 9L, 2L, 7L]) == 7L);\n}\nvoid main(){}"
  status: SyntaxError
  stderr: '/tmp/tmp2v5qqg2t.d(13): Error: no property `sort` for type `long[]`

    /tmp/tmp2v5qqg2t.d(14): Error: cannot implicitly convert expression `s.length`
    of type `ulong` to `int`

    Failed: ["dmd", "-unittest", "-v", "-o-", "/tmp/tmp2v5qqg2t.d", "-I/tmp"]

    '
  stdout: ''
  timestamp: 1660160692
- exit_code: 1
  program: "import std.math;\n/*\nReturn median of elements in the list l.\n    >>>\
    \ median([3L, 1L, 2L, 4L, 5L])\n    3L\n    >>> median([-10L, 4L, 6L, 1000L, 10L,\
    \ 20L])\n    15.0\n    \n*/\nfloat median(long[] l) \n{\n    long[] sorted = l.dup;\n\
    \    sorted.sort;\n    int n = sorted.length;\n    if (n % 2 == 1) \n    {\n \
    \       return sorted[n / 2];\n    } \n    else \n    {\n        return (sorted[n\
    \ / 2 - 1] + sorted[n / 2]) / 2.0;\n    }\n}\nunittest\n{\n    alias candidate\
    \ = median;\n\n    assert(candidate([3L, 1L, 2L, 4L, 5L]) == 3L);\n    assert(candidate([-10L,\
    \ 4L, 6L, 1000L, 10L, 20L]) == 8.0);\n    assert(candidate([5L]) == 5L);\n   \
    \ assert(candidate([6L, 5L]) == 5.5);\n    assert(candidate([8L, 1L, 3L, 9L, 9L,\
    \ 2L, 7L]) == 7L);\n}\nvoid main(){}"
  status: SyntaxError
  stderr: '/tmp/tmp6g5nvd39.d(13): Error: no property `sort` for type `long[]`

    /tmp/tmp6g5nvd39.d(14): Error: cannot implicitly convert expression `sorted.length`
    of type `ulong` to `int`

    Failed: ["dmd", "-unittest", "-v", "-o-", "/tmp/tmp6g5nvd39.d", "-I/tmp"]

    '
  stdout: ''
  timestamp: 1660160691
- exit_code: 1
  program: "import std.math;\n/*\nReturn median of elements in the list l.\n    >>>\
    \ median([3L, 1L, 2L, 4L, 5L])\n    3L\n    >>> median([-10L, 4L, 6L, 1000L, 10L,\
    \ 20L])\n    15.0\n    \n*/\nfloat median(long[] l) \n{\n    long[] sorted = l.dup.sort;\n\
    \    int mid = sorted.length / 2;\n    if (sorted.length % 2 == 0) \n    {\n \
    \       return (sorted[mid] + sorted[mid-1]) / 2.0;\n    }\n    else \n    {\n\
    \        return sorted[mid];\n    }\n}\n/*\nReturn the mode of elements in the\
    \ list l.\n    >>> mode([3L, 1L, 2L, 4L, 5L])\n    [1L, 2L, 3L, 4L, 5L]\n    >>>\
    \ mode([-10L, 4L, 6L, 1000L, 10L, 20L, -10L, 4L, 6L, 1000L, 10L, 20L])\n    [-10L,\
    \ 4L, 6L, 10L, 20L, 1000L]\n*/\nlong[] mode(long[] l) \n{\n    long[] sorted =\
    \ l.dup.sort;\n    long[] result = [];\n    long[] current = [];\n    long maxCount\
    \ = 0L;\n    long currentCount = 0L;\n    foreach (long i; sorted) \n    {\n \
    \       if (current.length == 0 || current[0] == i) \n        {\n            current\
    \ ~= i;\n            currentCount++;\n        }\n        else \n        {\n  \
    \          if (currentCount > maxCount) \n            {\n                result\
    \ = current;\n                maxCount = currentCount;\n            }\n      \
    \      current = [i];\n            currentCount = 1L;\n        }\n    }\n    if\
    \ (currentCount > maxCount) \n    {\n        result = current;\n    }\n    return\
    \ result;\n}\n/*\nReturn the standard deviation of elements in the list l.\n \
    \   >>> stddev([3L, 1L, 2L, 4L, 5L])\n    1.5811388300841898\n    >>> stddev([-10L,\
    \ 4L, 6L, 1000L, 10L, 20L])\n    531.9586776859504\n*/\nfloat stddev(long[] l)\
    \ \n{\n    long sum = 0L;\n    long sumS\nunittest\n{\n    alias candidate = median;\n\
    \n    assert(candidate([3L, 1L, 2L, 4L, 5L]) == 3L);\n    assert(candidate([-10L,\
    \ 4L, 6L, 1000L, 10L, 20L]) == 8.0);\n    assert(candidate([5L]) == 5L);\n   \
    \ assert(candidate([6L, 5L]) == 5.5);\n    assert(candidate([8L, 1L, 3L, 9L, 9L,\
    \ 2L, 7L]) == 7L);\n}\nvoid main(){}"
  status: SyntaxError
  stderr: '/tmp/tmpx417wtva.d(72): Error: semicolon expected, not `unittest`

    /tmp/tmpx417wtva.d(72): Error: found `unittest` instead of statement

    Failed: ["dmd", "-unittest", "-v", "-o-", "/tmp/tmpx417wtva.d", "-I/tmp"]

    '
  stdout: ''
  timestamp: 1660160692
- exit_code: 1
  program: "import std.math;\n/*\nReturn median of elements in the list l.\n    >>>\
    \ median([3L, 1L, 2L, 4L, 5L])\n    3L\n    >>> median([-10L, 4L, 6L, 1000L, 10L,\
    \ 20L])\n    15.0\n    \n*/\nfloat median(long[] l) \n{\n    long[] sorted = l.dup;\n\
    \    sorted.sort;\n    if (sorted.length % 2 == 1) {\n        return sorted[sorted.length\
    \ / 2];\n    } else {\n        return (sorted[sorted.length / 2 - 1] + sorted[sorted.length\
    \ / 2]) / 2.0;\n    }\n}\nunittest\n{\n    alias candidate = median;\n\n    assert(candidate([3L,\
    \ 1L, 2L, 4L, 5L]) == 3L);\n    assert(candidate([-10L, 4L, 6L, 1000L, 10L, 20L])\
    \ == 8.0);\n    assert(candidate([5L]) == 5L);\n    assert(candidate([6L, 5L])\
    \ == 5.5);\n    assert(candidate([8L, 1L, 3L, 9L, 9L, 2L, 7L]) == 7L);\n}\nvoid\
    \ main(){}"
  status: SyntaxError
  stderr: '/tmp/tmpkqzslih2.d(13): Error: no property `sort` for type `long[]`

    Failed: ["dmd", "-unittest", "-v", "-o-", "/tmp/tmpkqzslih2.d", "-I/tmp"]

    '
  stdout: ''
  timestamp: 1660160691
- exit_code: 1
  program: "import std.math;\n/*\nReturn median of elements in the list l.\n    >>>\
    \ median([3L, 1L, 2L, 4L, 5L])\n    3L\n    >>> median([-10L, 4L, 6L, 1000L, 10L,\
    \ 20L])\n    15.0\n    \n*/\nfloat median(long[] l) \n{\n    int n = l.length;\n\
    \    if (n == 0) \n    {\n        return 0.0;\n    }\n    else if (n % 2 == 1)\
    \ \n    {\n        return l[n / 2];\n    }\n    else \n    {\n        return (l[n\
    \ / 2 - 1] + l[n / 2]) / 2.0;\n    }\n}\nunittest\n{\n    alias candidate = median;\n\
    \n    assert(candidate([3L, 1L, 2L, 4L, 5L]) == 3L);\n    assert(candidate([-10L,\
    \ 4L, 6L, 1000L, 10L, 20L]) == 8.0);\n    assert(candidate([5L]) == 5L);\n   \
    \ assert(candidate([6L, 5L]) == 5.5);\n    assert(candidate([8L, 1L, 3L, 9L, 9L,\
    \ 2L, 7L]) == 7L);\n}\nvoid main(){}"
  status: SyntaxError
  stderr: '/tmp/tmpabz29yuf.d(12): Error: cannot implicitly convert expression `l.length`
    of type `ulong` to `int`

    Failed: ["dmd", "-unittest", "-v", "-o-", "/tmp/tmpabz29yuf.d", "-I/tmp"]

    '
  stdout: ''
  timestamp: 1660160692
- exit_code: 1
  program: "import std.math;\n/*\nReturn median of elements in the list l.\n    >>>\
    \ median([3L, 1L, 2L, 4L, 5L])\n    3L\n    >>> median([-10L, 4L, 6L, 1000L, 10L,\
    \ 20L])\n    15.0\n    \n*/\nfloat median(long[] l) \n{\n    long[] sorted = l.dup;\n\
    \    sorted.sort;\n    int len = sorted.length;\n    if (len % 2 == 0)\n    {\n\
    \        return (sorted[len / 2 - 1] + sorted[len / 2]) / 2.0;\n    }\n    else\n\
    \    {\n        return sorted[len / 2];\n    }\n}\nunittest\n{\n    alias candidate\
    \ = median;\n\n    assert(candidate([3L, 1L, 2L, 4L, 5L]) == 3L);\n    assert(candidate([-10L,\
    \ 4L, 6L, 1000L, 10L, 20L]) == 8.0);\n    assert(candidate([5L]) == 5L);\n   \
    \ assert(candidate([6L, 5L]) == 5.5);\n    assert(candidate([8L, 1L, 3L, 9L, 9L,\
    \ 2L, 7L]) == 7L);\n}\nvoid main(){}"
  status: SyntaxError
  stderr: '/tmp/tmpxjc4vgto.d(13): Error: no property `sort` for type `long[]`

    /tmp/tmpxjc4vgto.d(14): Error: cannot implicitly convert expression `sorted.length`
    of type `ulong` to `int`

    Failed: ["dmd", "-unittest", "-v", "-o-", "/tmp/tmpxjc4vgto.d", "-I/tmp"]

    '
  stdout: ''
  timestamp: 1660160691
- exit_code: 1
  program: "import std.math;\n/*\nReturn median of elements in the list l.\n    >>>\
    \ median([3L, 1L, 2L, 4L, 5L])\n    3L\n    >>> median([-10L, 4L, 6L, 1000L, 10L,\
    \ 20L])\n    15.0\n    \n*/\nfloat median(long[] l) \n{\n    long[] sorted = l.dup;\n\
    \    sorted.sort;\n    int len = sorted.length;\n    if (len % 2 == 0) \n    {\n\
    \        return (sorted[len / 2 - 1] + sorted[len / 2]) / 2.0;\n    }\n    else\
    \ \n    {\n        return sorted[len / 2];\n    }\n}\nunittest\n{\n    alias candidate\
    \ = median;\n\n    assert(candidate([3L, 1L, 2L, 4L, 5L]) == 3L);\n    assert(candidate([-10L,\
    \ 4L, 6L, 1000L, 10L, 20L]) == 8.0);\n    assert(candidate([5L]) == 5L);\n   \
    \ assert(candidate([6L, 5L]) == 5.5);\n    assert(candidate([8L, 1L, 3L, 9L, 9L,\
    \ 2L, 7L]) == 7L);\n}\nvoid main(){}"
  status: SyntaxError
  stderr: '/tmp/tmphi_a8gcb.d(13): Error: no property `sort` for type `long[]`

    /tmp/tmphi_a8gcb.d(14): Error: cannot implicitly convert expression `sorted.length`
    of type `ulong` to `int`

    Failed: ["dmd", "-unittest", "-v", "-o-", "/tmp/tmphi_a8gcb.d", "-I/tmp"]

    '
  stdout: ''
  timestamp: 1660160691
- exit_code: 1
  program: "import std.math;\n/*\nReturn median of elements in the list l.\n    >>>\
    \ median([3L, 1L, 2L, 4L, 5L])\n    3L\n    >>> median([-10L, 4L, 6L, 1000L, 10L,\
    \ 20L])\n    15.0\n    \n*/\nfloat median(long[] l) \n{\n    long[] sorted = l.dup;\n\
    \    sorted.sort;\n    int len = sorted.length;\n    if (len % 2 == 0) \n    {\n\
    \        return (sorted[len / 2 - 1] + sorted[len / 2]) / 2.0;\n    }\n    else\
    \ \n    {\n        return sorted[len / 2];\n    }\n}\nunittest\n{\n    alias candidate\
    \ = median;\n\n    assert(candidate([3L, 1L, 2L, 4L, 5L]) == 3L);\n    assert(candidate([-10L,\
    \ 4L, 6L, 1000L, 10L, 20L]) == 8.0);\n    assert(candidate([5L]) == 5L);\n   \
    \ assert(candidate([6L, 5L]) == 5.5);\n    assert(candidate([8L, 1L, 3L, 9L, 9L,\
    \ 2L, 7L]) == 7L);\n}\nvoid main(){}"
  status: SyntaxError
  stderr: '/tmp/tmphi_a8gcb.d(13): Error: no property `sort` for type `long[]`

    /tmp/tmphi_a8gcb.d(14): Error: cannot implicitly convert expression `sorted.length`
    of type `ulong` to `int`

    Failed: ["dmd", "-unittest", "-v", "-o-", "/tmp/tmphi_a8gcb.d", "-I/tmp"]

    '
  stdout: ''
  timestamp: 1660160691
- exit_code: 1
  program: "import std.math;\n/*\nReturn median of elements in the list l.\n    >>>\
    \ median([3L, 1L, 2L, 4L, 5L])\n    3L\n    >>> median([-10L, 4L, 6L, 1000L, 10L,\
    \ 20L])\n    15.0\n    \n*/\nfloat median(long[] l) \n{\n    long[] l2 = l.dup;\n\
    \    l2.sort;\n    return l2[l2.length / 2];\n}\nunittest\n{\n    alias candidate\
    \ = median;\n\n    assert(candidate([3L, 1L, 2L, 4L, 5L]) == 3L);\n    assert(candidate([-10L,\
    \ 4L, 6L, 1000L, 10L, 20L]) == 8.0);\n    assert(candidate([5L]) == 5L);\n   \
    \ assert(candidate([6L, 5L]) == 5.5);\n    assert(candidate([8L, 1L, 3L, 9L, 9L,\
    \ 2L, 7L]) == 7L);\n}\nvoid main(){}"
  status: SyntaxError
  stderr: '/tmp/tmpb4202jvy.d(13): Error: no property `sort` for type `long[]`

    Failed: ["dmd", "-unittest", "-v", "-o-", "/tmp/tmpb4202jvy.d", "-I/tmp"]

    '
  stdout: ''
  timestamp: 1660160692
- exit_code: 1
  program: "import std.math;\n/*\nReturn median of elements in the list l.\n    >>>\
    \ median([3L, 1L, 2L, 4L, 5L])\n    3L\n    >>> median([-10L, 4L, 6L, 1000L, 10L,\
    \ 20L])\n    15.0\n    \n*/\nfloat median(long[] l) \n{\n    if (l.length == 0)\
    \ \n    {\n        return 0.0;\n    }\n    else \n    {\n        long[] sorted\
    \ = l.sort();\n        int mid = sorted.length / 2;\n        if (sorted.length\
    \ % 2 == 0) \n        {\n            return (sorted[mid] + sorted[mid - 1]) /\
    \ 2.0;\n        }\n        else \n        {\n            return sorted[mid];\n\
    \        }\n    }\n}\nunittest\n{\n    alias candidate = median;\n\n    assert(candidate([3L,\
    \ 1L, 2L, 4L, 5L]) == 3L);\n    assert(candidate([-10L, 4L, 6L, 1000L, 10L, 20L])\
    \ == 8.0);\n    assert(candidate([5L]) == 5L);\n    assert(candidate([6L, 5L])\
    \ == 5.5);\n    assert(candidate([8L, 1L, 3L, 9L, 9L, 2L, 7L]) == 7L);\n}\nvoid\
    \ main(){}"
  status: SyntaxError
  stderr: '/tmp/tmpjxd8u4p3.d(18): Error: no property `sort` for type `long[]`

    /tmp/tmpjxd8u4p3.d(19): Error: cannot implicitly convert expression `sorted.length
    / 2LU` of type `ulong` to `int`

    Failed: ["dmd", "-unittest", "-v", "-o-", "/tmp/tmpjxd8u4p3.d", "-I/tmp"]

    '
  stdout: ''
  timestamp: 1660160692
- exit_code: 1
  program: "import std.math;\n/*\nReturn median of elements in the list l.\n    >>>\
    \ median([3L, 1L, 2L, 4L, 5L])\n    3L\n    >>> median([-10L, 4L, 6L, 1000L, 10L,\
    \ 20L])\n    15.0\n    \n*/\nfloat median(long[] l) \n{\n    long[] sorted = l.dup;\n\
    \    sorted.sort;\n    if (sorted.length % 2 == 1) \n    {\n        return sorted[sorted.length\
    \ / 2];\n    } \n    else \n    {\n        return (sorted[sorted.length / 2 -\
    \ 1] + sorted[sorted.length / 2]) / 2.0;\n    }\n}\nunittest\n{\n    alias candidate\
    \ = median;\n\n    assert(candidate([3L, 1L, 2L, 4L, 5L]) == 3L);\n    assert(candidate([-10L,\
    \ 4L, 6L, 1000L, 10L, 20L]) == 8.0);\n    assert(candidate([5L]) == 5L);\n   \
    \ assert(candidate([6L, 5L]) == 5.5);\n    assert(candidate([8L, 1L, 3L, 9L, 9L,\
    \ 2L, 7L]) == 7L);\n}\nvoid main(){}"
  status: SyntaxError
  stderr: '/tmp/tmp14nivz02.d(13): Error: no property `sort` for type `long[]`

    Failed: ["dmd", "-unittest", "-v", "-o-", "/tmp/tmp14nivz02.d", "-I/tmp"]

    '
  stdout: ''
  timestamp: 1660160691
- exit_code: 1
  program: "import std.math;\n/*\nReturn median of elements in the list l.\n    >>>\
    \ median([3L, 1L, 2L, 4L, 5L])\n    3L\n    >>> median([-10L, 4L, 6L, 1000L, 10L,\
    \ 20L])\n    15.0\n    \n*/\nfloat median(long[] l) \n{\n    long[] sorted = l.dup;\n\
    \    sorted.sort;\n    if (sorted.length % 2 == 1) \n    {\n        return sorted[sorted.length\
    \ / 2];\n    } \n    else \n    {\n        return (sorted[sorted.length / 2 -\
    \ 1] + sorted[sorted.length / 2]) / 2.0;\n    }\n}\nunittest\n{\n    alias candidate\
    \ = median;\n\n    assert(candidate([3L, 1L, 2L, 4L, 5L]) == 3L);\n    assert(candidate([-10L,\
    \ 4L, 6L, 1000L, 10L, 20L]) == 8.0);\n    assert(candidate([5L]) == 5L);\n   \
    \ assert(candidate([6L, 5L]) == 5.5);\n    assert(candidate([8L, 1L, 3L, 9L, 9L,\
    \ 2L, 7L]) == 7L);\n}\nvoid main(){}"
  status: SyntaxError
  stderr: '/tmp/tmp14nivz02.d(13): Error: no property `sort` for type `long[]`

    Failed: ["dmd", "-unittest", "-v", "-o-", "/tmp/tmp14nivz02.d", "-I/tmp"]

    '
  stdout: ''
  timestamp: 1660160691
- exit_code: 1
  program: "import std.math;\n/*\nReturn median of elements in the list l.\n    >>>\
    \ median([3L, 1L, 2L, 4L, 5L])\n    3L\n    >>> median([-10L, 4L, 6L, 1000L, 10L,\
    \ 20L])\n    15.0\n    \n*/\nfloat median(long[] l) \n{\n    long[] sorted = l.sort();\n\
    \    int len = sorted.length;\n    if (len % 2 == 1)\n    {\n        return sorted[len\
    \ / 2];\n    }\n    else\n    {\n        return (sorted[len / 2 - 1] + sorted[len\
    \ / 2]) / 2.0;\n    }\n}\nunittest\n{\n    alias candidate = median;\n\n    assert(candidate([3L,\
    \ 1L, 2L, 4L, 5L]) == 3L);\n    assert(candidate([-10L, 4L, 6L, 1000L, 10L, 20L])\
    \ == 8.0);\n    assert(candidate([5L]) == 5L);\n    assert(candidate([6L, 5L])\
    \ == 5.5);\n    assert(candidate([8L, 1L, 3L, 9L, 9L, 2L, 7L]) == 7L);\n}\nvoid\
    \ main(){}"
  status: SyntaxError
  stderr: '/tmp/tmprq0ycs4b.d(12): Error: no property `sort` for type `long[]`

    /tmp/tmprq0ycs4b.d(13): Error: cannot implicitly convert expression `sorted.length`
    of type `ulong` to `int`

    Failed: ["dmd", "-unittest", "-v", "-o-", "/tmp/tmprq0ycs4b.d", "-I/tmp"]

    '
  stdout: ''
  timestamp: 1660160692
- exit_code: 1
  program: "import std.math;\n/*\nReturn median of elements in the list l.\n    >>>\
    \ median([3L, 1L, 2L, 4L, 5L])\n    3L\n    >>> median([-10L, 4L, 6L, 1000L, 10L,\
    \ 20L])\n    15.0\n    \n*/\nfloat median(long[] l) \n{\n    long[] l2 = l.dup;\n\
    \    l2.sort;\n    int len = l2.length;\n    if (len % 2 == 0)\n    {\n      \
    \  return (l2[len / 2 - 1] + l2[len / 2]) / 2.0;\n    }\n    else\n    {\n   \
    \     return l2[len / 2];\n    }\n}\nunittest\n{\n    alias candidate = median;\n\
    \n    assert(candidate([3L, 1L, 2L, 4L, 5L]) == 3L);\n    assert(candidate([-10L,\
    \ 4L, 6L, 1000L, 10L, 20L]) == 8.0);\n    assert(candidate([5L]) == 5L);\n   \
    \ assert(candidate([6L, 5L]) == 5.5);\n    assert(candidate([8L, 1L, 3L, 9L, 9L,\
    \ 2L, 7L]) == 7L);\n}\nvoid main(){}"
  status: SyntaxError
  stderr: '/tmp/tmpp56yfnre.d(13): Error: no property `sort` for type `long[]`

    /tmp/tmpp56yfnre.d(14): Error: cannot implicitly convert expression `l2.length`
    of type `ulong` to `int`

    Failed: ["dmd", "-unittest", "-v", "-o-", "/tmp/tmpp56yfnre.d", "-I/tmp"]

    '
  stdout: ''
  timestamp: 1660160692
- exit_code: 1
  program: "import std.math;\n/*\nReturn median of elements in the list l.\n    >>>\
    \ median([3L, 1L, 2L, 4L, 5L])\n    3L\n    >>> median([-10L, 4L, 6L, 1000L, 10L,\
    \ 20L])\n    15.0\n    \n*/\nfloat median(long[] l) \n{\n    long[] temp = l.dup;\n\
    \    temp.sort;\n    int len = temp.length;\n    if (len % 2 == 0) \n    {\n \
    \       return (temp[len / 2 - 1] + temp[len / 2]) / 2.0;\n    } \n    else \n\
    \    {\n        return temp[len / 2];\n    }\n}\nunittest\n{\n    alias candidate\
    \ = median;\n\n    assert(candidate([3L, 1L, 2L, 4L, 5L]) == 3L);\n    assert(candidate([-10L,\
    \ 4L, 6L, 1000L, 10L, 20L]) == 8.0);\n    assert(candidate([5L]) == 5L);\n   \
    \ assert(candidate([6L, 5L]) == 5.5);\n    assert(candidate([8L, 1L, 3L, 9L, 9L,\
    \ 2L, 7L]) == 7L);\n}\nvoid main(){}"
  status: SyntaxError
  stderr: '/tmp/tmpk5qho0l8.d(13): Error: no property `sort` for type `long[]`

    /tmp/tmpk5qho0l8.d(14): Error: cannot implicitly convert expression `temp.length`
    of type `ulong` to `int`

    Failed: ["dmd", "-unittest", "-v", "-o-", "/tmp/tmpk5qho0l8.d", "-I/tmp"]

    '
  stdout: ''
  timestamp: 1660160691
- exit_code: 1
  program: "import std.math;\n/*\nReturn median of elements in the list l.\n    >>>\
    \ median([3L, 1L, 2L, 4L, 5L])\n    3L\n    >>> median([-10L, 4L, 6L, 1000L, 10L,\
    \ 20L])\n    15.0\n    \n*/\nfloat median(long[] l) \n{\n    long[] sorted = l.dup;\n\
    \    sorted.sort;\n    if (sorted.length % 2 == 1)\n        return sorted[sorted.length\
    \ / 2];\n    else\n        return (sorted[sorted.length / 2 - 1] + sorted[sorted.length\
    \ / 2]) / 2.0;\n}\nunittest\n{\n    alias candidate = median;\n\n    assert(candidate([3L,\
    \ 1L, 2L, 4L, 5L]) == 3L);\n    assert(candidate([-10L, 4L, 6L, 1000L, 10L, 20L])\
    \ == 8.0);\n    assert(candidate([5L]) == 5L);\n    assert(candidate([6L, 5L])\
    \ == 5.5);\n    assert(candidate([8L, 1L, 3L, 9L, 9L, 2L, 7L]) == 7L);\n}\nvoid\
    \ main(){}"
  status: SyntaxError
  stderr: '/tmp/tmpx89ezo5q.d(13): Error: no property `sort` for type `long[]`

    Failed: ["dmd", "-unittest", "-v", "-o-", "/tmp/tmpx89ezo5q.d", "-I/tmp"]

    '
  stdout: ''
  timestamp: 1660160691
- exit_code: 1
  program: "import std.math;\n/*\nReturn median of elements in the list l.\n    >>>\
    \ median([3L, 1L, 2L, 4L, 5L])\n    3L\n    >>> median([-10L, 4L, 6L, 1000L, 10L,\
    \ 20L])\n    15.0\n    \n*/\nfloat median(long[] l) \n{\n    long[] sorted = l.dup;\n\
    \    sorted.sort;\n    if (sorted.length % 2 == 1)\n        return sorted[sorted.length\
    \ / 2];\n    else\n        return (sorted[sorted.length / 2 - 1] + sorted[sorted.length\
    \ / 2]) / 2.0;\n}\nunittest\n{\n    alias candidate = median;\n\n    assert(candidate([3L,\
    \ 1L, 2L, 4L, 5L]) == 3L);\n    assert(candidate([-10L, 4L, 6L, 1000L, 10L, 20L])\
    \ == 8.0);\n    assert(candidate([5L]) == 5L);\n    assert(candidate([6L, 5L])\
    \ == 5.5);\n    assert(candidate([8L, 1L, 3L, 9L, 9L, 2L, 7L]) == 7L);\n}\nvoid\
    \ main(){}"
  status: SyntaxError
  stderr: '/tmp/tmpx89ezo5q.d(13): Error: no property `sort` for type `long[]`

    Failed: ["dmd", "-unittest", "-v", "-o-", "/tmp/tmpx89ezo5q.d", "-I/tmp"]

    '
  stdout: ''
  timestamp: 1660160691
- exit_code: 1
  program: "import std.math;\n/*\nReturn median of elements in the list l.\n    >>>\
    \ median([3L, 1L, 2L, 4L, 5L])\n    3L\n    >>> median([-10L, 4L, 6L, 1000L, 10L,\
    \ 20L])\n    15.0\n    \n*/\nfloat median(long[] l) \n{\n    long[] sorted = l.dup;\n\
    \    sorted.sort;\n    int len = sorted.length;\n    if (len % 2 == 0)\n    {\n\
    \        return (sorted[len / 2 - 1] + sorted[len / 2]) / 2.0;\n    }\n    else\n\
    \    {\n        return sorted[len / 2];\n    }\n}\nunittest\n{\n    alias candidate\
    \ = median;\n\n    assert(candidate([3L, 1L, 2L, 4L, 5L]) == 3L);\n    assert(candidate([-10L,\
    \ 4L, 6L, 1000L, 10L, 20L]) == 8.0);\n    assert(candidate([5L]) == 5L);\n   \
    \ assert(candidate([6L, 5L]) == 5.5);\n    assert(candidate([8L, 1L, 3L, 9L, 9L,\
    \ 2L, 7L]) == 7L);\n}\nvoid main(){}"
  status: SyntaxError
  stderr: '/tmp/tmpxjc4vgto.d(13): Error: no property `sort` for type `long[]`

    /tmp/tmpxjc4vgto.d(14): Error: cannot implicitly convert expression `sorted.length`
    of type `ulong` to `int`

    Failed: ["dmd", "-unittest", "-v", "-o-", "/tmp/tmpxjc4vgto.d", "-I/tmp"]

    '
  stdout: ''
  timestamp: 1660160691
- exit_code: 1
  program: "import std.math;\n/*\nReturn median of elements in the list l.\n    >>>\
    \ median([3L, 1L, 2L, 4L, 5L])\n    3L\n    >>> median([-10L, 4L, 6L, 1000L, 10L,\
    \ 20L])\n    15.0\n    \n*/\nfloat median(long[] l) \n{\n    long[] sorted = l.dup;\n\
    \    sorted.sort;\n    long len = sorted.length;\n    if (len % 2 == 1) {\n  \
    \      return sorted[len / 2];\n    } else {\n        return (sorted[len / 2 -\
    \ 1] + sorted[len / 2]) / 2.0;\n    }\n}\nunittest\n{\n    alias candidate = median;\n\
    \n    assert(candidate([3L, 1L, 2L, 4L, 5L]) == 3L);\n    assert(candidate([-10L,\
    \ 4L, 6L, 1000L, 10L, 20L]) == 8.0);\n    assert(candidate([5L]) == 5L);\n   \
    \ assert(candidate([6L, 5L]) == 5.5);\n    assert(candidate([8L, 1L, 3L, 9L, 9L,\
    \ 2L, 7L]) == 7L);\n}\nvoid main(){}"
  status: SyntaxError
  stderr: '/tmp/tmph81m9h8j.d(13): Error: no property `sort` for type `long[]`

    Failed: ["dmd", "-unittest", "-v", "-o-", "/tmp/tmph81m9h8j.d", "-I/tmp"]

    '
  stdout: ''
  timestamp: 1660160692
- exit_code: 1
  program: "import std.math;\n/*\nReturn median of elements in the list l.\n    >>>\
    \ median([3L, 1L, 2L, 4L, 5L])\n    3L\n    >>> median([-10L, 4L, 6L, 1000L, 10L,\
    \ 20L])\n    15.0\n    \n*/\nfloat median(long[] l) \n{\n    long[] sorted = l.dup;\n\
    \    sorted.sort;\n    int len = sorted.length;\n    if (len % 2 == 0)\n    {\n\
    \        return (sorted[len / 2 - 1] + sorted[len / 2]) / 2.0;\n    }\n    else\n\
    \    {\n        return sorted[len / 2];\n    }\n}\nunittest\n{\n    alias candidate\
    \ = median;\n\n    assert(candidate([3L, 1L, 2L, 4L, 5L]) == 3L);\n    assert(candidate([-10L,\
    \ 4L, 6L, 1000L, 10L, 20L]) == 8.0);\n    assert(candidate([5L]) == 5L);\n   \
    \ assert(candidate([6L, 5L]) == 5.5);\n    assert(candidate([8L, 1L, 3L, 9L, 9L,\
    \ 2L, 7L]) == 7L);\n}\nvoid main(){}"
  status: SyntaxError
  stderr: '/tmp/tmpxjc4vgto.d(13): Error: no property `sort` for type `long[]`

    /tmp/tmpxjc4vgto.d(14): Error: cannot implicitly convert expression `sorted.length`
    of type `ulong` to `int`

    Failed: ["dmd", "-unittest", "-v", "-o-", "/tmp/tmpxjc4vgto.d", "-I/tmp"]

    '
  stdout: ''
  timestamp: 1660160691
- exit_code: 1
  program: "import std.math;\n/*\nReturn median of elements in the list l.\n    >>>\
    \ median([3L, 1L, 2L, 4L, 5L])\n    3L\n    >>> median([-10L, 4L, 6L, 1000L, 10L,\
    \ 20L])\n    15.0\n    \n*/\nfloat median(long[] l) \n{\n    int n = l.length;\n\
    \    if (n == 0) \n    {\n        return 0.0;\n    }\n    else if (n == 1) \n\
    \    {\n        return l[0];\n    }\n    else \n    {\n        long[] sorted =\
    \ l.dup;\n        sorted.sort;\n        if (n % 2 == 0) \n        {\n        \
    \    return (sorted[n / 2 - 1] + sorted[n / 2]) / 2.0;\n        }\n        else\
    \ \n        {\n            return sorted[n / 2];\n        }\n    }\n}\nunittest\n\
    {\n    alias candidate = median;\n\n    assert(candidate([3L, 1L, 2L, 4L, 5L])\
    \ == 3L);\n    assert(candidate([-10L, 4L, 6L, 1000L, 10L, 20L]) == 8.0);\n  \
    \  assert(candidate([5L]) == 5L);\n    assert(candidate([6L, 5L]) == 5.5);\n \
    \   assert(candidate([8L, 1L, 3L, 9L, 9L, 2L, 7L]) == 7L);\n}\nvoid main(){}"
  status: SyntaxError
  stderr: '/tmp/tmpytt1igwm.d(12): Error: cannot implicitly convert expression `l.length`
    of type `ulong` to `int`

    /tmp/tmpytt1igwm.d(24): Error: no property `sort` for type `long[]`

    Failed: ["dmd", "-unittest", "-v", "-o-", "/tmp/tmpytt1igwm.d", "-I/tmp"]

    '
  stdout: ''
  timestamp: 1660160692
- exit_code: 1
  program: "import std.math;\n/*\nReturn median of elements in the list l.\n    >>>\
    \ median([3L, 1L, 2L, 4L, 5L])\n    3L\n    >>> median([-10L, 4L, 6L, 1000L, 10L,\
    \ 20L])\n    15.0\n    \n*/\nfloat median(long[] l) \n{\n    long[] sorted = l.dup;\n\
    \    sorted.sort;\n    int n = sorted.length;\n    if (n % 2 == 1)\n        return\
    \ sorted[n / 2];\n    else\n        return (sorted[n / 2 - 1] + sorted[n / 2])\
    \ / 2.0;\n}\nunittest\n{\n    alias candidate = median;\n\n    assert(candidate([3L,\
    \ 1L, 2L, 4L, 5L]) == 3L);\n    assert(candidate([-10L, 4L, 6L, 1000L, 10L, 20L])\
    \ == 8.0);\n    assert(candidate([5L]) == 5L);\n    assert(candidate([6L, 5L])\
    \ == 5.5);\n    assert(candidate([8L, 1L, 3L, 9L, 9L, 2L, 7L]) == 7L);\n}\nvoid\
    \ main(){}"
  status: SyntaxError
  stderr: '/tmp/tmpwnuehx69.d(13): Error: no property `sort` for type `long[]`

    /tmp/tmpwnuehx69.d(14): Error: cannot implicitly convert expression `sorted.length`
    of type `ulong` to `int`

    Failed: ["dmd", "-unittest", "-v", "-o-", "/tmp/tmpwnuehx69.d", "-I/tmp"]

    '
  stdout: ''
  timestamp: 1660160691
- exit_code: 1
  program: "import std.math;\n/*\nReturn median of elements in the list l.\n    >>>\
    \ median([3L, 1L, 2L, 4L, 5L])\n    3L\n    >>> median([-10L, 4L, 6L, 1000L, 10L,\
    \ 20L])\n    15.0\n    \n*/\nfloat median(long[] l) \n{\n    long[] sorted = l.sort();\n\
    \    int mid = l.length / 2;\n    if (l.length % 2 == 0) \n    {\n        return\
    \ (sorted[mid - 1] + sorted[mid]) / 2.0;\n    }\n    else \n    {\n        return\
    \ sorted[mid];\n    }\n}\nunittest\n{\n    alias candidate = median;\n\n    assert(candidate([3L,\
    \ 1L, 2L, 4L, 5L]) == 3L);\n    assert(candidate([-10L, 4L, 6L, 1000L, 10L, 20L])\
    \ == 8.0);\n    assert(candidate([5L]) == 5L);\n    assert(candidate([6L, 5L])\
    \ == 5.5);\n    assert(candidate([8L, 1L, 3L, 9L, 9L, 2L, 7L]) == 7L);\n}\nvoid\
    \ main(){}"
  status: SyntaxError
  stderr: '/tmp/tmp0_jyr707.d(12): Error: no property `sort` for type `long[]`

    /tmp/tmp0_jyr707.d(13): Error: cannot implicitly convert expression `l.length
    / 2LU` of type `ulong` to `int`

    Failed: ["dmd", "-unittest", "-v", "-o-", "/tmp/tmp0_jyr707.d", "-I/tmp"]

    '
  stdout: ''
  timestamp: 1660160692
- exit_code: 1
  program: "import std.math;\n/*\nReturn median of elements in the list l.\n    >>>\
    \ median([3L, 1L, 2L, 4L, 5L])\n    3L\n    >>> median([-10L, 4L, 6L, 1000L, 10L,\
    \ 20L])\n    15.0\n    \n*/\nfloat median(long[] l) \n{\n    long[] sorted = l.sort();\n\
    \    int n = l.length;\n    if (n % 2 == 1)\n        return sorted[n / 2];\n \
    \   else\n        return (sorted[n / 2 - 1] + sorted[n / 2]) / 2.0;\n}\nunittest\n\
    {\n    alias candidate = median;\n\n    assert(candidate([3L, 1L, 2L, 4L, 5L])\
    \ == 3L);\n    assert(candidate([-10L, 4L, 6L, 1000L, 10L, 20L]) == 8.0);\n  \
    \  assert(candidate([5L]) == 5L);\n    assert(candidate([6L, 5L]) == 5.5);\n \
    \   assert(candidate([8L, 1L, 3L, 9L, 9L, 2L, 7L]) == 7L);\n}\nvoid main(){}"
  status: SyntaxError
  stderr: '/tmp/tmpuhr99mjv.d(12): Error: no property `sort` for type `long[]`

    /tmp/tmpuhr99mjv.d(13): Error: cannot implicitly convert expression `l.length`
    of type `ulong` to `int`

    Failed: ["dmd", "-unittest", "-v", "-o-", "/tmp/tmpuhr99mjv.d", "-I/tmp"]

    '
  stdout: ''
  timestamp: 1660160691
- exit_code: 1
  program: "import std.math;\n/*\nReturn median of elements in the list l.\n    >>>\
    \ median([3L, 1L, 2L, 4L, 5L])\n    3L\n    >>> median([-10L, 4L, 6L, 1000L, 10L,\
    \ 20L])\n    15.0\n    \n*/\nfloat median(long[] l) \n{\n    long[] sorted = l.dup;\n\
    \    sorted.sort;\n    int n = sorted.length;\n    if (n % 2 == 1) \n    {\n \
    \       return sorted[n / 2];\n    }\n    else \n    {\n        return (sorted[n\
    \ / 2 - 1] + sorted[n / 2]) / 2.0;\n    }\n}\nunittest\n{\n    alias candidate\
    \ = median;\n\n    assert(candidate([3L, 1L, 2L, 4L, 5L]) == 3L);\n    assert(candidate([-10L,\
    \ 4L, 6L, 1000L, 10L, 20L]) == 8.0);\n    assert(candidate([5L]) == 5L);\n   \
    \ assert(candidate([6L, 5L]) == 5.5);\n    assert(candidate([8L, 1L, 3L, 9L, 9L,\
    \ 2L, 7L]) == 7L);\n}\nvoid main(){}"
  status: SyntaxError
  stderr: '/tmp/tmp_29yzyn1.d(13): Error: no property `sort` for type `long[]`

    /tmp/tmp_29yzyn1.d(14): Error: cannot implicitly convert expression `sorted.length`
    of type `ulong` to `int`

    Failed: ["dmd", "-unittest", "-v", "-o-", "/tmp/tmp_29yzyn1.d", "-I/tmp"]

    '
  stdout: ''
  timestamp: 1660160692
- exit_code: 1
  program: "import std.math;\n/*\nReturn median of elements in the list l.\n    >>>\
    \ median([3L, 1L, 2L, 4L, 5L])\n    3L\n    >>> median([-10L, 4L, 6L, 1000L, 10L,\
    \ 20L])\n    15.0\n    \n*/\nfloat median(long[] l) \n{\n    long[] s = l.dup;\n\
    \    s.sort;\n    int n = s.length;\n    if (n % 2 == 1)\n        return s[n /\
    \ 2];\n    else\n        return (s[n / 2 - 1] + s[n / 2]) / 2.0;\n}\n/*\nReturn\
    \ the mode of elements in the list l.\n    >>> mode([3L, 1L, 2L, 4L, 5L])\n  \
    \  [1L, 2L, 3L, 4L, 5L]\n    >>> mode([-10L, 4L, 6L, 1000L, 10L, 20L])\n    [4L,\
    \ 6L, 10L, 20L, 1000L]\n*/\nlong[] mode(long[] l) \n{\n    long[] s = l.dup;\n\
    \    s.sort;\n    int n = s.length;\n    long[] m = new long[];\n    long[] c\
    \ = new long[];\n    long last = s[0];\n    int count = 1;\n    foreach (long\
    \ x; s)\n    {\n        if (x == last)\n            count++;\n        else\n \
    \       {\n            m ~= last;\n            c ~= count;\n            last =\
    \ x;\n            count = 1;\n        }\n    }\n    m ~= last;\n    c ~= count;\n\
    \    long max = c[0];\n    foreach (long x; c)\n        if (x > max)\n       \
    \     max = x;\n    long[] r = new long[];\n    foreach (long x; m)\n        if\
    \ (c[x] == max)\n            r ~= x;\n    return r;\n}\n/*\nReturn the range of\
    \ elements in the list l.\n    >>> range([3L, 1L, 2L, 4L, 5L])\n    4L\n    >>>\
    \ range([-10L, 4L, 6L, 1000L, 10L, 20L])\n    1010L\n*/\nlong range(long[] l)\
    \ \n{\n    long[] s = l.dup;\n    s.sort;\n    return s[s.length - 1] - s[0];\n\
    unittest\n{\n    alias candidate = median;\n\n    assert(candidate([3L, 1L, 2L,\
    \ 4L, 5L]) == 3L);\n    assert(candidate([-10L, 4L, 6L, 1000L, 10L, 20L]) == 8.0);\n\
    \    assert(candidate([5L]) == 5L);\n    assert(candidate([6L, 5L]) == 5.5);\n\
    \    assert(candidate([8L, 1L, 3L, 9L, 9L, 2L, 7L]) == 7L);\n}\nvoid main(){}"
  status: SyntaxError
  stderr: '/tmp/tmpxslrdv7b.d(72): Error: found `unittest` instead of statement

    Failed: ["dmd", "-unittest", "-v", "-o-", "/tmp/tmpxslrdv7b.d", "-I/tmp"]

    '
  stdout: ''
  timestamp: 1660160692
- exit_code: 1
  program: "import std.math;\n/*\nReturn median of elements in the list l.\n    >>>\
    \ median([3L, 1L, 2L, 4L, 5L])\n    3L\n    >>> median([-10L, 4L, 6L, 1000L, 10L,\
    \ 20L])\n    15.0\n    \n*/\nfloat median(long[] l) \n{\n    long[] sorted = l.sort();\n\
    \    int n = l.length;\n    if (n % 2 == 1) \n    {\n        return sorted[n /\
    \ 2];\n    } \n    else \n    {\n        return (sorted[n / 2 - 1] + sorted[n\
    \ / 2]) / 2.0;\n    }\n}\nunittest\n{\n    alias candidate = median;\n\n    assert(candidate([3L,\
    \ 1L, 2L, 4L, 5L]) == 3L);\n    assert(candidate([-10L, 4L, 6L, 1000L, 10L, 20L])\
    \ == 8.0);\n    assert(candidate([5L]) == 5L);\n    assert(candidate([6L, 5L])\
    \ == 5.5);\n    assert(candidate([8L, 1L, 3L, 9L, 9L, 2L, 7L]) == 7L);\n}\nvoid\
    \ main(){}"
  status: SyntaxError
  stderr: '/tmp/tmpa_lgrkyc.d(12): Error: no property `sort` for type `long[]`

    /tmp/tmpa_lgrkyc.d(13): Error: cannot implicitly convert expression `l.length`
    of type `ulong` to `int`

    Failed: ["dmd", "-unittest", "-v", "-o-", "/tmp/tmpa_lgrkyc.d", "-I/tmp"]

    '
  stdout: ''
  timestamp: 1660160691
- exit_code: 1
  program: "import std.math;\n/*\nReturn median of elements in the list l.\n    >>>\
    \ median([3L, 1L, 2L, 4L, 5L])\n    3L\n    >>> median([-10L, 4L, 6L, 1000L, 10L,\
    \ 20L])\n    15.0\n    \n*/\nfloat median(long[] l) \n{\n    long[] sorted = l.dup;\n\
    \    sorted.sort;\n    int n = sorted.length;\n    if (n % 2 == 1)\n        return\
    \ sorted[n / 2];\n    else\n        return (sorted[n / 2 - 1] + sorted[n / 2])\
    \ / 2.0;\n}\nunittest\n{\n    alias candidate = median;\n\n    assert(candidate([3L,\
    \ 1L, 2L, 4L, 5L]) == 3L);\n    assert(candidate([-10L, 4L, 6L, 1000L, 10L, 20L])\
    \ == 8.0);\n    assert(candidate([5L]) == 5L);\n    assert(candidate([6L, 5L])\
    \ == 5.5);\n    assert(candidate([8L, 1L, 3L, 9L, 9L, 2L, 7L]) == 7L);\n}\nvoid\
    \ main(){}"
  status: SyntaxError
  stderr: '/tmp/tmpwnuehx69.d(13): Error: no property `sort` for type `long[]`

    /tmp/tmpwnuehx69.d(14): Error: cannot implicitly convert expression `sorted.length`
    of type `ulong` to `int`

    Failed: ["dmd", "-unittest", "-v", "-o-", "/tmp/tmpwnuehx69.d", "-I/tmp"]

    '
  stdout: ''
  timestamp: 1660160691
- exit_code: 1
  program: "import std.math;\n/*\nReturn median of elements in the list l.\n    >>>\
    \ median([3L, 1L, 2L, 4L, 5L])\n    3L\n    >>> median([-10L, 4L, 6L, 1000L, 10L,\
    \ 20L])\n    15.0\n    \n*/\nfloat median(long[] l) \n{\n    long[] l2 = l.dup;\n\
    \    l2.sort;\n    int n = l2.length;\n    if (n % 2 == 1)\n        return l2[n\
    \ / 2];\n    else\n        return (l2[n / 2 - 1] + l2[n / 2]) / 2.0;\n}\nunittest\n\
    {\n    alias candidate = median;\n\n    assert(candidate([3L, 1L, 2L, 4L, 5L])\
    \ == 3L);\n    assert(candidate([-10L, 4L, 6L, 1000L, 10L, 20L]) == 8.0);\n  \
    \  assert(candidate([5L]) == 5L);\n    assert(candidate([6L, 5L]) == 5.5);\n \
    \   assert(candidate([8L, 1L, 3L, 9L, 9L, 2L, 7L]) == 7L);\n}\nvoid main(){}"
  status: SyntaxError
  stderr: '/tmp/tmp8ukvdyvi.d(13): Error: no property `sort` for type `long[]`

    /tmp/tmp8ukvdyvi.d(14): Error: cannot implicitly convert expression `l2.length`
    of type `ulong` to `int`

    Failed: ["dmd", "-unittest", "-v", "-o-", "/tmp/tmp8ukvdyvi.d", "-I/tmp"]

    '
  stdout: ''
  timestamp: 1660160691
- exit_code: 1
  program: "import std.math;\n/*\nReturn median of elements in the list l.\n    >>>\
    \ median([3L, 1L, 2L, 4L, 5L])\n    3L\n    >>> median([-10L, 4L, 6L, 1000L, 10L,\
    \ 20L])\n    15.0\n    \n*/\nfloat median(long[] l) \n{\n    long[] sorted = l.dup;\n\
    \    sorted.sort;\n    int n = sorted.length;\n    if (n % 2 == 1) \n    {\n \
    \       return sorted[n / 2];\n    } \n    else \n    {\n        return (sorted[n\
    \ / 2 - 1] + sorted[n / 2]) / 2.0;\n    }\n}\nunittest\n{\n    alias candidate\
    \ = median;\n\n    assert(candidate([3L, 1L, 2L, 4L, 5L]) == 3L);\n    assert(candidate([-10L,\
    \ 4L, 6L, 1000L, 10L, 20L]) == 8.0);\n    assert(candidate([5L]) == 5L);\n   \
    \ assert(candidate([6L, 5L]) == 5.5);\n    assert(candidate([8L, 1L, 3L, 9L, 9L,\
    \ 2L, 7L]) == 7L);\n}\nvoid main(){}"
  status: SyntaxError
  stderr: '/tmp/tmp6g5nvd39.d(13): Error: no property `sort` for type `long[]`

    /tmp/tmp6g5nvd39.d(14): Error: cannot implicitly convert expression `sorted.length`
    of type `ulong` to `int`

    Failed: ["dmd", "-unittest", "-v", "-o-", "/tmp/tmp6g5nvd39.d", "-I/tmp"]

    '
  stdout: ''
  timestamp: 1660160691
- exit_code: 1
  program: "import std.math;\n/*\nReturn median of elements in the list l.\n    >>>\
    \ median([3L, 1L, 2L, 4L, 5L])\n    3L\n    >>> median([-10L, 4L, 6L, 1000L, 10L,\
    \ 20L])\n    15.0\n    \n*/\nfloat median(long[] l) \n{\n    long[] sorted = l.dup;\n\
    \    sorted.sort;\n    int n = sorted.length;\n    if (n % 2 == 1) {\n       \
    \ return sorted[n / 2];\n    } else {\n        return (sorted[n / 2 - 1] + sorted[n\
    \ / 2]) / 2.0;\n    }\n}\nunittest\n{\n    alias candidate = median;\n\n    assert(candidate([3L,\
    \ 1L, 2L, 4L, 5L]) == 3L);\n    assert(candidate([-10L, 4L, 6L, 1000L, 10L, 20L])\
    \ == 8.0);\n    assert(candidate([5L]) == 5L);\n    assert(candidate([6L, 5L])\
    \ == 5.5);\n    assert(candidate([8L, 1L, 3L, 9L, 9L, 2L, 7L]) == 7L);\n}\nvoid\
    \ main(){}"
  status: SyntaxError
  stderr: '/tmp/tmp0t9cz4t1.d(13): Error: no property `sort` for type `long[]`

    /tmp/tmp0t9cz4t1.d(14): Error: cannot implicitly convert expression `sorted.length`
    of type `ulong` to `int`

    Failed: ["dmd", "-unittest", "-v", "-o-", "/tmp/tmp0t9cz4t1.d", "-I/tmp"]

    '
  stdout: ''
  timestamp: 1660160691
- exit_code: 1
  program: "import std.math;\n/*\nReturn median of elements in the list l.\n    >>>\
    \ median([3L, 1L, 2L, 4L, 5L])\n    3L\n    >>> median([-10L, 4L, 6L, 1000L, 10L,\
    \ 20L])\n    15.0\n    \n*/\nfloat median(long[] l) \n{\n    long[] sorted = l.dup;\n\
    \    sorted.sort;\n    int n = sorted.length;\n    if (n % 2 == 1) \n    {\n \
    \       return sorted[n / 2];\n    }\n    else \n    {\n        return (sorted[n\
    \ / 2 - 1] + sorted[n / 2]) / 2.0;\n    }\n}\nunittest\n{\n    alias candidate\
    \ = median;\n\n    assert(candidate([3L, 1L, 2L, 4L, 5L]) == 3L);\n    assert(candidate([-10L,\
    \ 4L, 6L, 1000L, 10L, 20L]) == 8.0);\n    assert(candidate([5L]) == 5L);\n   \
    \ assert(candidate([6L, 5L]) == 5.5);\n    assert(candidate([8L, 1L, 3L, 9L, 9L,\
    \ 2L, 7L]) == 7L);\n}\nvoid main(){}"
  status: SyntaxError
  stderr: '/tmp/tmp_29yzyn1.d(13): Error: no property `sort` for type `long[]`

    /tmp/tmp_29yzyn1.d(14): Error: cannot implicitly convert expression `sorted.length`
    of type `ulong` to `int`

    Failed: ["dmd", "-unittest", "-v", "-o-", "/tmp/tmp_29yzyn1.d", "-I/tmp"]

    '
  stdout: ''
  timestamp: 1660160692
- exit_code: 1
  program: "import std.math;\n/*\nReturn median of elements in the list l.\n    >>>\
    \ median([3L, 1L, 2L, 4L, 5L])\n    3L\n    >>> median([-10L, 4L, 6L, 1000L, 10L,\
    \ 20L])\n    15.0\n    \n*/\nfloat median(long[] l) \n{\n    l.sort();\n    int\
    \ n = l.length;\n    if (n % 2 == 1)\n        return l[n / 2];\n    else\n   \
    \     return (l[n / 2 - 1] + l[n / 2]) / 2.0;\n}\nunittest\n{\n    alias candidate\
    \ = median;\n\n    assert(candidate([3L, 1L, 2L, 4L, 5L]) == 3L);\n    assert(candidate([-10L,\
    \ 4L, 6L, 1000L, 10L, 20L]) == 8.0);\n    assert(candidate([5L]) == 5L);\n   \
    \ assert(candidate([6L, 5L]) == 5.5);\n    assert(candidate([8L, 1L, 3L, 9L, 9L,\
    \ 2L, 7L]) == 7L);\n}\nvoid main(){}"
  status: SyntaxError
  stderr: '/tmp/tmp73xq321a.d(12): Error: no property `sort` for type `long[]`

    /tmp/tmp73xq321a.d(13): Error: cannot implicitly convert expression `l.length`
    of type `ulong` to `int`

    Failed: ["dmd", "-unittest", "-v", "-o-", "/tmp/tmp73xq321a.d", "-I/tmp"]

    '
  stdout: ''
  timestamp: 1660160691
- exit_code: 1
  program: "import std.math;\n/*\nReturn median of elements in the list l.\n    >>>\
    \ median([3L, 1L, 2L, 4L, 5L])\n    3L\n    >>> median([-10L, 4L, 6L, 1000L, 10L,\
    \ 20L])\n    15.0\n    \n*/\nfloat median(long[] l) \n{\n    long[] sorted = l.dup;\n\
    \    sorted.sort;\n    if (sorted.length % 2 == 1) \n    {\n        return sorted[sorted.length\
    \ / 2];\n    } \n    else \n    {\n        return (sorted[sorted.length / 2 -\
    \ 1] + sorted[sorted.length / 2]) / 2.0;\n    }\n}\nunittest\n{\n    alias candidate\
    \ = median;\n\n    assert(candidate([3L, 1L, 2L, 4L, 5L]) == 3L);\n    assert(candidate([-10L,\
    \ 4L, 6L, 1000L, 10L, 20L]) == 8.0);\n    assert(candidate([5L]) == 5L);\n   \
    \ assert(candidate([6L, 5L]) == 5.5);\n    assert(candidate([8L, 1L, 3L, 9L, 9L,\
    \ 2L, 7L]) == 7L);\n}\nvoid main(){}"
  status: SyntaxError
  stderr: '/tmp/tmp14nivz02.d(13): Error: no property `sort` for type `long[]`

    Failed: ["dmd", "-unittest", "-v", "-o-", "/tmp/tmp14nivz02.d", "-I/tmp"]

    '
  stdout: ''
  timestamp: 1660160691
- exit_code: 1
  program: "import std.math;\n/*\nReturn median of elements in the list l.\n    >>>\
    \ median([3L, 1L, 2L, 4L, 5L])\n    3L\n    >>> median([-10L, 4L, 6L, 1000L, 10L,\
    \ 20L])\n    15.0\n    \n*/\nfloat median(long[] l) \n{\n    int n = l.length;\n\
    \    if (n == 0) \n    {\n        return 0.0;\n    }\n    else if (n % 2 == 1)\
    \ \n    {\n        return l[n / 2];\n    }\n    else \n    {\n        return (l[n\
    \ / 2 - 1] + l[n / 2]) / 2.0;\n    }\n}\nunittest\n{\n    alias candidate = median;\n\
    \n    assert(candidate([3L, 1L, 2L, 4L, 5L]) == 3L);\n    assert(candidate([-10L,\
    \ 4L, 6L, 1000L, 10L, 20L]) == 8.0);\n    assert(candidate([5L]) == 5L);\n   \
    \ assert(candidate([6L, 5L]) == 5.5);\n    assert(candidate([8L, 1L, 3L, 9L, 9L,\
    \ 2L, 7L]) == 7L);\n}\nvoid main(){}"
  status: SyntaxError
  stderr: '/tmp/tmpabz29yuf.d(12): Error: cannot implicitly convert expression `l.length`
    of type `ulong` to `int`

    Failed: ["dmd", "-unittest", "-v", "-o-", "/tmp/tmpabz29yuf.d", "-I/tmp"]

    '
  stdout: ''
  timestamp: 1660160692
- exit_code: 1
  program: "import std.math;\n/*\nReturn median of elements in the list l.\n    >>>\
    \ median([3L, 1L, 2L, 4L, 5L])\n    3L\n    >>> median([-10L, 4L, 6L, 1000L, 10L,\
    \ 20L])\n    15.0\n    \n*/\nfloat median(long[] l) \n{\n    long[] sorted = l.dup;\n\
    \    sorted.sort;\n    int n = sorted.length;\n    if (n % 2 == 1)\n    {\n  \
    \      return sorted[n / 2];\n    }\n    else\n    {\n        return (sorted[n\
    \ / 2 - 1] + sorted[n / 2]) / 2.0;\n    }\n}\nunittest\n{\n    alias candidate\
    \ = median;\n\n    assert(candidate([3L, 1L, 2L, 4L, 5L]) == 3L);\n    assert(candidate([-10L,\
    \ 4L, 6L, 1000L, 10L, 20L]) == 8.0);\n    assert(candidate([5L]) == 5L);\n   \
    \ assert(candidate([6L, 5L]) == 5.5);\n    assert(candidate([8L, 1L, 3L, 9L, 9L,\
    \ 2L, 7L]) == 7L);\n}\nvoid main(){}"
  status: SyntaxError
  stderr: '/tmp/tmpsq9xmnob.d(13): Error: no property `sort` for type `long[]`

    /tmp/tmpsq9xmnob.d(14): Error: cannot implicitly convert expression `sorted.length`
    of type `ulong` to `int`

    Failed: ["dmd", "-unittest", "-v", "-o-", "/tmp/tmpsq9xmnob.d", "-I/tmp"]

    '
  stdout: ''
  timestamp: 1660160691
- exit_code: 1
  program: "import std.math;\n/*\nReturn median of elements in the list l.\n    >>>\
    \ median([3L, 1L, 2L, 4L, 5L])\n    3L\n    >>> median([-10L, 4L, 6L, 1000L, 10L,\
    \ 20L])\n    15.0\n    \n*/\nfloat median(long[] l) \n{\n    long[] sorted = l.dup.sort;\n\
    \    int n = l.length;\n    if (n % 2 == 1) {\n        return sorted[n / 2];\n\
    \    } else {\n        return (sorted[n / 2 - 1] + sorted[n / 2]) / 2.0;\n   \
    \ }\n}\nunittest\n{\n    alias candidate = median;\n\n    assert(candidate([3L,\
    \ 1L, 2L, 4L, 5L]) == 3L);\n    assert(candidate([-10L, 4L, 6L, 1000L, 10L, 20L])\
    \ == 8.0);\n    assert(candidate([5L]) == 5L);\n    assert(candidate([6L, 5L])\
    \ == 5.5);\n    assert(candidate([8L, 1L, 3L, 9L, 9L, 2L, 7L]) == 7L);\n}\nvoid\
    \ main(){}"
  status: SyntaxError
  stderr: '/tmp/tmpziujfpe5.d(12): Error: no property `sort` for type `long[]`

    /tmp/tmpziujfpe5.d(13): Error: cannot implicitly convert expression `l.length`
    of type `ulong` to `int`

    Failed: ["dmd", "-unittest", "-v", "-o-", "/tmp/tmpziujfpe5.d", "-I/tmp"]

    '
  stdout: ''
  timestamp: 1660160692

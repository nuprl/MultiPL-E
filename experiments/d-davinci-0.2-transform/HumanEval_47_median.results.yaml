language: d
name: HumanEval_47_median
results:
- exit_code: 1
  program: "import std.math;\n/*\nReturn median of elements in the list l.\n    >>>\
    \ median([3L, 1L, 2L, 4L, 5L])\n    3L\n    >>> median([-10L, 4L, 6L, 1000L, 10L,\
    \ 20L])\n    15.0\n    \n*/\nfloat median(long[] l) \n{\n    long[] sorted = l.dup;\n\
    \    sorted.sort;\n    if (sorted.length % 2 == 1)\n        return sorted[sorted.length\
    \ / 2];\n    else\n        return (sorted[sorted.length / 2 - 1] + sorted[sorted.length\
    \ / 2]) / 2.0;\n}\nunittest\n{\n    alias candidate = median;\n\n    assert(candidate([3L,\
    \ 1L, 2L, 4L, 5L]) == 3L);\n    assert(candidate([-10L, 4L, 6L, 1000L, 10L, 20L])\
    \ == 8.0);\n    assert(candidate([5L]) == 5L);\n    assert(candidate([6L, 5L])\
    \ == 5.5);\n    assert(candidate([8L, 1L, 3L, 9L, 9L, 2L, 7L]) == 7L);\n}\nvoid\
    \ main(){}"
  status: SyntaxError
  stderr: 'b''/tmp/tmppz79ph_1.d(13): Error: no property `sort` for type `long[]`\nFailed:
    ["dmd", "-unittest", "-v", "-o-", "/tmp/tmppz79ph_1.d", "-I/tmp"]\n'''
  stdout: b''
- exit_code: 1
  program: "import std.math;\n/*\nReturn median of elements in the list l.\n    >>>\
    \ median([3L, 1L, 2L, 4L, 5L])\n    3L\n    >>> median([-10L, 4L, 6L, 1000L, 10L,\
    \ 20L])\n    15.0\n    \n*/\nfloat median(long[] l) \n{\n    long[] temp = l.dup;\n\
    \    temp.sort;\n    int len = temp.length;\n    if (len % 2 == 0)\n    {\n  \
    \      return (temp[len / 2] + temp[len / 2 - 1]) / 2.0;\n    }\n    else\n  \
    \  {\n        return temp[len / 2];\n    }\n}\nunittest\n{\n    alias candidate\
    \ = median;\n\n    assert(candidate([3L, 1L, 2L, 4L, 5L]) == 3L);\n    assert(candidate([-10L,\
    \ 4L, 6L, 1000L, 10L, 20L]) == 8.0);\n    assert(candidate([5L]) == 5L);\n   \
    \ assert(candidate([6L, 5L]) == 5.5);\n    assert(candidate([8L, 1L, 3L, 9L, 9L,\
    \ 2L, 7L]) == 7L);\n}\nvoid main(){}"
  status: SyntaxError
  stderr: 'b''/tmp/tmplvh3tb6r.d(13): Error: no property `sort` for type `long[]`\n/tmp/tmplvh3tb6r.d(14):
    Error: cannot implicitly convert expression `temp.length` of type `ulong` to `int`\nFailed:
    ["dmd", "-unittest", "-v", "-o-", "/tmp/tmplvh3tb6r.d", "-I/tmp"]\n'''
  stdout: b''
- exit_code: 1
  program: "import std.math;\n/*\nReturn median of elements in the list l.\n    >>>\
    \ median([3L, 1L, 2L, 4L, 5L])\n    3L\n    >>> median([-10L, 4L, 6L, 1000L, 10L,\
    \ 20L])\n    15.0\n    \n*/\nfloat median(long[] l) \n{\n    long[] sorted = l.dup;\n\
    \    sorted.sort;\n    if (sorted.length % 2 == 1)\n        return sorted[sorted.length\
    \ / 2];\n    else\n        return (sorted[sorted.length / 2 - 1] + sorted[sorted.length\
    \ / 2]) / 2.0;\n}\nunittest\n{\n    alias candidate = median;\n\n    assert(candidate([3L,\
    \ 1L, 2L, 4L, 5L]) == 3L);\n    assert(candidate([-10L, 4L, 6L, 1000L, 10L, 20L])\
    \ == 8.0);\n    assert(candidate([5L]) == 5L);\n    assert(candidate([6L, 5L])\
    \ == 5.5);\n    assert(candidate([8L, 1L, 3L, 9L, 9L, 2L, 7L]) == 7L);\n}\nvoid\
    \ main(){}"
  status: SyntaxError
  stderr: 'b''/tmp/tmppz79ph_1.d(13): Error: no property `sort` for type `long[]`\nFailed:
    ["dmd", "-unittest", "-v", "-o-", "/tmp/tmppz79ph_1.d", "-I/tmp"]\n'''
  stdout: b''
- exit_code: 1
  program: "import std.math;\n/*\nReturn median of elements in the list l.\n    >>>\
    \ median([3L, 1L, 2L, 4L, 5L])\n    3L\n    >>> median([-10L, 4L, 6L, 1000L, 10L,\
    \ 20L])\n    15.0\n    \n*/\nfloat median(long[] l) \n{\n    long[] sorted = l.dup;\n\
    \    sorted.sort;\n    if (sorted.length % 2 == 1) \n    {\n        return sorted[sorted.length\
    \ / 2];\n    } \n    else \n    {\n        return (sorted[sorted.length / 2 -\
    \ 1] + sorted[sorted.length / 2]) / 2.0;\n    }\n}\nunittest\n{\n    alias candidate\
    \ = median;\n\n    assert(candidate([3L, 1L, 2L, 4L, 5L]) == 3L);\n    assert(candidate([-10L,\
    \ 4L, 6L, 1000L, 10L, 20L]) == 8.0);\n    assert(candidate([5L]) == 5L);\n   \
    \ assert(candidate([6L, 5L]) == 5.5);\n    assert(candidate([8L, 1L, 3L, 9L, 9L,\
    \ 2L, 7L]) == 7L);\n}\nvoid main(){}"
  status: SyntaxError
  stderr: 'b''/tmp/tmp6pv_y0us.d(13): Error: no property `sort` for type `long[]`\nFailed:
    ["dmd", "-unittest", "-v", "-o-", "/tmp/tmp6pv_y0us.d", "-I/tmp"]\n'''
  stdout: b''
- exit_code: 1
  program: "import std.math;\n/*\nReturn median of elements in the list l.\n    >>>\
    \ median([3L, 1L, 2L, 4L, 5L])\n    3L\n    >>> median([-10L, 4L, 6L, 1000L, 10L,\
    \ 20L])\n    15.0\n    \n*/\nfloat median(long[] l) \n{\n    long[] temp = l.dup;\n\
    \    temp.sort;\n    int len = temp.length;\n    if (len % 2 == 0) \n    {\n \
    \       return (temp[len / 2 - 1] + temp[len / 2]) / 2.0;\n    } \n    else \n\
    \    {\n        return temp[len / 2];\n    }\n}\nunittest\n{\n    alias candidate\
    \ = median;\n\n    assert(candidate([3L, 1L, 2L, 4L, 5L]) == 3L);\n    assert(candidate([-10L,\
    \ 4L, 6L, 1000L, 10L, 20L]) == 8.0);\n    assert(candidate([5L]) == 5L);\n   \
    \ assert(candidate([6L, 5L]) == 5.5);\n    assert(candidate([8L, 1L, 3L, 9L, 9L,\
    \ 2L, 7L]) == 7L);\n}\nvoid main(){}"
  status: SyntaxError
  stderr: 'b''/tmp/tmpxrkro0k5.d(13): Error: no property `sort` for type `long[]`\n/tmp/tmpxrkro0k5.d(14):
    Error: cannot implicitly convert expression `temp.length` of type `ulong` to `int`\nFailed:
    ["dmd", "-unittest", "-v", "-o-", "/tmp/tmpxrkro0k5.d", "-I/tmp"]\n'''
  stdout: b''
- exit_code: 1
  program: "import std.math;\n/*\nReturn median of elements in the list l.\n    >>>\
    \ median([3L, 1L, 2L, 4L, 5L])\n    3L\n    >>> median([-10L, 4L, 6L, 1000L, 10L,\
    \ 20L])\n    15.0\n    \n*/\nfloat median(long[] l) \n{\n    int n = l.length;\n\
    \    if (n == 0) \n    {\n        return 0.0;\n    }\n    else if (n == 1) \n\
    \    {\n        return l[0];\n    }\n    else if (n == 2) \n    {\n        return\
    \ (l[0] + l[1]) / 2.0;\n    }\n    else \n    {\n        long[] l2 = l[0..n];\n\
    \        sort(l2);\n        if (n % 2 == 0) \n        {\n            return (l2[n\
    \ / 2 - 1] + l2[n / 2]) / 2.0;\n        }\n        else \n        {\n        \
    \    return l2[n / 2];\n        }\n    }\n}\nunittest\n{\n    alias candidate\
    \ = median;\n\n    assert(candidate([3L, 1L, 2L, 4L, 5L]) == 3L);\n    assert(candidate([-10L,\
    \ 4L, 6L, 1000L, 10L, 20L]) == 8.0);\n    assert(candidate([5L]) == 5L);\n   \
    \ assert(candidate([6L, 5L]) == 5.5);\n    assert(candidate([8L, 1L, 3L, 9L, 9L,\
    \ 2L, 7L]) == 7L);\n}\nvoid main(){}"
  status: SyntaxError
  stderr: 'b''/tmp/tmpfsaea2hr.d(12): Error: cannot implicitly convert expression
    `l.length` of type `ulong` to `int`\n/tmp/tmpfsaea2hr.d(28): Error: undefined
    identifier `sort`, did you mean function `sqrt`?\nFailed: ["dmd", "-unittest",
    "-v", "-o-", "/tmp/tmpfsaea2hr.d", "-I/tmp"]\n'''
  stdout: b''
- exit_code: 1
  program: "import std.math;\n/*\nReturn median of elements in the list l.\n    >>>\
    \ median([3L, 1L, 2L, 4L, 5L])\n    3L\n    >>> median([-10L, 4L, 6L, 1000L, 10L,\
    \ 20L])\n    15.0\n    \n*/\nfloat median(long[] l) \n{\n    long[] sorted = l.sort();\n\
    \    int mid = sorted.length / 2;\n    if (sorted.length % 2 == 0)\n    {\n  \
    \      return (sorted[mid] + sorted[mid - 1]) / 2.0;\n    }\n    else\n    {\n\
    \        return sorted[mid];\n    }\n}\nunittest\n{\n    alias candidate = median;\n\
    \n    assert(candidate([3L, 1L, 2L, 4L, 5L]) == 3L);\n    assert(candidate([-10L,\
    \ 4L, 6L, 1000L, 10L, 20L]) == 8.0);\n    assert(candidate([5L]) == 5L);\n   \
    \ assert(candidate([6L, 5L]) == 5.5);\n    assert(candidate([8L, 1L, 3L, 9L, 9L,\
    \ 2L, 7L]) == 7L);\n}\nvoid main(){}"
  status: SyntaxError
  stderr: 'b''/tmp/tmpr_gmur8z.d(12): Error: no property `sort` for type `long[]`\n/tmp/tmpr_gmur8z.d(13):
    Error: cannot implicitly convert expression `sorted.length / 2LU` of type `ulong`
    to `int`\nFailed: ["dmd", "-unittest", "-v", "-o-", "/tmp/tmpr_gmur8z.d", "-I/tmp"]\n'''
  stdout: b''
- exit_code: 1
  program: "import std.math;\n/*\nReturn median of elements in the list l.\n    >>>\
    \ median([3L, 1L, 2L, 4L, 5L])\n    3L\n    >>> median([-10L, 4L, 6L, 1000L, 10L,\
    \ 20L])\n    15.0\n    \n*/\nfloat median(long[] l) \n{\n    long[] sorted = l.dup;\n\
    \    sorted.sort;\n    int len = sorted.length;\n    if (len % 2 == 0) \n    {\n\
    \        return (sorted[len / 2 - 1] + sorted[len / 2]) / 2.0;\n    }\n    else\
    \ \n    {\n        return sorted[len / 2];\n    }\n}\nunittest\n{\n    alias candidate\
    \ = median;\n\n    assert(candidate([3L, 1L, 2L, 4L, 5L]) == 3L);\n    assert(candidate([-10L,\
    \ 4L, 6L, 1000L, 10L, 20L]) == 8.0);\n    assert(candidate([5L]) == 5L);\n   \
    \ assert(candidate([6L, 5L]) == 5.5);\n    assert(candidate([8L, 1L, 3L, 9L, 9L,\
    \ 2L, 7L]) == 7L);\n}\nvoid main(){}"
  status: SyntaxError
  stderr: 'b''/tmp/tmpclggzp1f.d(13): Error: no property `sort` for type `long[]`\n/tmp/tmpclggzp1f.d(14):
    Error: cannot implicitly convert expression `sorted.length` of type `ulong` to
    `int`\nFailed: ["dmd", "-unittest", "-v", "-o-", "/tmp/tmpclggzp1f.d", "-I/tmp"]\n'''
  stdout: b''
- exit_code: 1
  program: "import std.math;\n/*\nReturn median of elements in the list l.\n    >>>\
    \ median([3L, 1L, 2L, 4L, 5L])\n    3L\n    >>> median([-10L, 4L, 6L, 1000L, 10L,\
    \ 20L])\n    15.0\n    \n*/\nfloat median(long[] l) \n{\n    l.sort();\n    int\
    \ n = l.length;\n    if (n % 2 == 1)\n        return l[n / 2];\n    else\n   \
    \     return (l[n / 2 - 1] + l[n / 2]) / 2.0;\n}\nunittest\n{\n    alias candidate\
    \ = median;\n\n    assert(candidate([3L, 1L, 2L, 4L, 5L]) == 3L);\n    assert(candidate([-10L,\
    \ 4L, 6L, 1000L, 10L, 20L]) == 8.0);\n    assert(candidate([5L]) == 5L);\n   \
    \ assert(candidate([6L, 5L]) == 5.5);\n    assert(candidate([8L, 1L, 3L, 9L, 9L,\
    \ 2L, 7L]) == 7L);\n}\nvoid main(){}"
  status: SyntaxError
  stderr: 'b''/tmp/tmpqiqvw_oa.d(12): Error: no property `sort` for type `long[]`\n/tmp/tmpqiqvw_oa.d(13):
    Error: cannot implicitly convert expression `l.length` of type `ulong` to `int`\nFailed:
    ["dmd", "-unittest", "-v", "-o-", "/tmp/tmpqiqvw_oa.d", "-I/tmp"]\n'''
  stdout: b''
- exit_code: 1
  program: "import std.math;\n/*\nReturn median of elements in the list l.\n    >>>\
    \ median([3L, 1L, 2L, 4L, 5L])\n    3L\n    >>> median([-10L, 4L, 6L, 1000L, 10L,\
    \ 20L])\n    15.0\n    \n*/\nfloat median(long[] l) \n{\n    long[] sorted = l.dup.sort;\n\
    \    int mid = sorted.length / 2;\n    if (sorted.length % 2 == 0)\n        return\
    \ (sorted[mid - 1] + sorted[mid]) / 2.0;\n    else\n        return sorted[mid];\n\
    }\nunittest\n{\n    alias candidate = median;\n\n    assert(candidate([3L, 1L,\
    \ 2L, 4L, 5L]) == 3L);\n    assert(candidate([-10L, 4L, 6L, 1000L, 10L, 20L])\
    \ == 8.0);\n    assert(candidate([5L]) == 5L);\n    assert(candidate([6L, 5L])\
    \ == 5.5);\n    assert(candidate([8L, 1L, 3L, 9L, 9L, 2L, 7L]) == 7L);\n}\nvoid\
    \ main(){}"
  status: SyntaxError
  stderr: 'b''/tmp/tmpomogvyi_.d(12): Error: no property `sort` for type `long[]`\n/tmp/tmpomogvyi_.d(13):
    Error: cannot implicitly convert expression `sorted.length / 2LU` of type `ulong`
    to `int`\nFailed: ["dmd", "-unittest", "-v", "-o-", "/tmp/tmpomogvyi_.d", "-I/tmp"]\n'''
  stdout: b''
- exit_code: 1
  program: "import std.math;\n/*\nReturn median of elements in the list l.\n    >>>\
    \ median([3L, 1L, 2L, 4L, 5L])\n    3L\n    >>> median([-10L, 4L, 6L, 1000L, 10L,\
    \ 20L])\n    15.0\n    \n*/\nfloat median(long[] l) \n{\n    int n = l.length;\n\
    \    if (n == 0) \n    {\n        return 0.0;\n    }\n    if (n == 1) \n    {\n\
    \        return l[0];\n    }\n    sort(l);\n    if (n % 2 == 0) \n    {\n    \
    \    return (l[n / 2 - 1] + l[n / 2]) / 2.0;\n    }\n    else \n    {\n      \
    \  return l[n / 2];\n    }\n}\nunittest\n{\n    alias candidate = median;\n\n\
    \    assert(candidate([3L, 1L, 2L, 4L, 5L]) == 3L);\n    assert(candidate([-10L,\
    \ 4L, 6L, 1000L, 10L, 20L]) == 8.0);\n    assert(candidate([5L]) == 5L);\n   \
    \ assert(candidate([6L, 5L]) == 5.5);\n    assert(candidate([8L, 1L, 3L, 9L, 9L,\
    \ 2L, 7L]) == 7L);\n}\nvoid main(){}"
  status: SyntaxError
  stderr: 'b''/tmp/tmph_68w9g7.d(12): Error: cannot implicitly convert expression
    `l.length` of type `ulong` to `int`\n/tmp/tmph_68w9g7.d(21): Error: undefined
    identifier `sort`, did you mean function `sqrt`?\nFailed: ["dmd", "-unittest",
    "-v", "-o-", "/tmp/tmph_68w9g7.d", "-I/tmp"]\n'''
  stdout: b''
- exit_code: 1
  program: "import std.math;\n/*\nReturn median of elements in the list l.\n    >>>\
    \ median([3L, 1L, 2L, 4L, 5L])\n    3L\n    >>> median([-10L, 4L, 6L, 1000L, 10L,\
    \ 20L])\n    15.0\n    \n*/\nfloat median(long[] l) \n{\n    long[] sorted = l.dup;\n\
    \    sorted.sort;\n    if (sorted.length % 2 == 1) \n    {\n        return sorted[sorted.length\
    \ / 2];\n    }\n    else \n    {\n        return (sorted[sorted.length / 2 - 1]\
    \ + sorted[sorted.length / 2]) / 2.0;\n    }\n}\nunittest\n{\n    alias candidate\
    \ = median;\n\n    assert(candidate([3L, 1L, 2L, 4L, 5L]) == 3L);\n    assert(candidate([-10L,\
    \ 4L, 6L, 1000L, 10L, 20L]) == 8.0);\n    assert(candidate([5L]) == 5L);\n   \
    \ assert(candidate([6L, 5L]) == 5.5);\n    assert(candidate([8L, 1L, 3L, 9L, 9L,\
    \ 2L, 7L]) == 7L);\n}\nvoid main(){}"
  status: SyntaxError
  stderr: 'b''/tmp/tmpe722hlt0.d(13): Error: no property `sort` for type `long[]`\nFailed:
    ["dmd", "-unittest", "-v", "-o-", "/tmp/tmpe722hlt0.d", "-I/tmp"]\n'''
  stdout: b''
- exit_code: 1
  program: "import std.math;\n/*\nReturn median of elements in the list l.\n    >>>\
    \ median([3L, 1L, 2L, 4L, 5L])\n    3L\n    >>> median([-10L, 4L, 6L, 1000L, 10L,\
    \ 20L])\n    15.0\n    \n*/\nfloat median(long[] l) \n{\n    long[] sorted = l.dup;\n\
    \    sorted.sort;\n    int n = sorted.length;\n    if (n % 2 == 1)\n        return\
    \ sorted[n / 2];\n    else\n        return (sorted[n / 2 - 1] + sorted[n / 2])\
    \ / 2.0;\n}\nunittest\n{\n    alias candidate = median;\n\n    assert(candidate([3L,\
    \ 1L, 2L, 4L, 5L]) == 3L);\n    assert(candidate([-10L, 4L, 6L, 1000L, 10L, 20L])\
    \ == 8.0);\n    assert(candidate([5L]) == 5L);\n    assert(candidate([6L, 5L])\
    \ == 5.5);\n    assert(candidate([8L, 1L, 3L, 9L, 9L, 2L, 7L]) == 7L);\n}\nvoid\
    \ main(){}"
  status: SyntaxError
  stderr: 'b''/tmp/tmpyxbvzgf9.d(13): Error: no property `sort` for type `long[]`\n/tmp/tmpyxbvzgf9.d(14):
    Error: cannot implicitly convert expression `sorted.length` of type `ulong` to
    `int`\nFailed: ["dmd", "-unittest", "-v", "-o-", "/tmp/tmpyxbvzgf9.d", "-I/tmp"]\n'''
  stdout: b''
- exit_code: 1
  program: "import std.math;\n/*\nReturn median of elements in the list l.\n    >>>\
    \ median([3L, 1L, 2L, 4L, 5L])\n    3L\n    >>> median([-10L, 4L, 6L, 1000L, 10L,\
    \ 20L])\n    15.0\n    \n*/\nfloat median(long[] l) \n{\n    long[] sorted = l.dup;\n\
    \    sorted.sort;\n    if (sorted.length % 2 == 1)\n    {\n        return sorted[sorted.length\
    \ / 2];\n    }\n    else\n    {\n        return (sorted[sorted.length / 2 - 1]\
    \ + sorted[sorted.length / 2]) / 2.0;\n    }\n}\nunittest\n{\n    alias candidate\
    \ = median;\n\n    assert(candidate([3L, 1L, 2L, 4L, 5L]) == 3L);\n    assert(candidate([-10L,\
    \ 4L, 6L, 1000L, 10L, 20L]) == 8.0);\n    assert(candidate([5L]) == 5L);\n   \
    \ assert(candidate([6L, 5L]) == 5.5);\n    assert(candidate([8L, 1L, 3L, 9L, 9L,\
    \ 2L, 7L]) == 7L);\n}\nvoid main(){}"
  status: SyntaxError
  stderr: 'b''/tmp/tmpcsg9lgss.d(13): Error: no property `sort` for type `long[]`\nFailed:
    ["dmd", "-unittest", "-v", "-o-", "/tmp/tmpcsg9lgss.d", "-I/tmp"]\n'''
  stdout: b''
- exit_code: 1
  program: "import std.math;\n/*\nReturn median of elements in the list l.\n    >>>\
    \ median([3L, 1L, 2L, 4L, 5L])\n    3L\n    >>> median([-10L, 4L, 6L, 1000L, 10L,\
    \ 20L])\n    15.0\n    \n*/\nfloat median(long[] l) \n{\n    long[] sorted = l.dup;\n\
    \    sorted.sort;\n    if (sorted.length % 2 == 1)\n        return sorted[sorted.length\
    \ / 2];\n    else\n        return (sorted[sorted.length / 2 - 1] + sorted[sorted.length\
    \ / 2]) / 2.0;\n}\nunittest\n{\n    alias candidate = median;\n\n    assert(candidate([3L,\
    \ 1L, 2L, 4L, 5L]) == 3L);\n    assert(candidate([-10L, 4L, 6L, 1000L, 10L, 20L])\
    \ == 8.0);\n    assert(candidate([5L]) == 5L);\n    assert(candidate([6L, 5L])\
    \ == 5.5);\n    assert(candidate([8L, 1L, 3L, 9L, 9L, 2L, 7L]) == 7L);\n}\nvoid\
    \ main(){}"
  status: SyntaxError
  stderr: 'b''/tmp/tmppz79ph_1.d(13): Error: no property `sort` for type `long[]`\nFailed:
    ["dmd", "-unittest", "-v", "-o-", "/tmp/tmppz79ph_1.d", "-I/tmp"]\n'''
  stdout: b''
- exit_code: 1
  program: "import std.math;\n/*\nReturn median of elements in the list l.\n    >>>\
    \ median([3L, 1L, 2L, 4L, 5L])\n    3L\n    >>> median([-10L, 4L, 6L, 1000L, 10L,\
    \ 20L])\n    15.0\n    \n*/\nfloat median(long[] l) \n{\n    long[] sorted = sort(l);\n\
    \    int len = l.length;\n    if (len % 2 == 1)\n    {\n        return sorted[len\
    \ / 2];\n    }\n    else\n    {\n        return (sorted[len / 2 - 1] + sorted[len\
    \ / 2]) / 2.0;\n    }\n}\nunittest\n{\n    alias candidate = median;\n\n    assert(candidate([3L,\
    \ 1L, 2L, 4L, 5L]) == 3L);\n    assert(candidate([-10L, 4L, 6L, 1000L, 10L, 20L])\
    \ == 8.0);\n    assert(candidate([5L]) == 5L);\n    assert(candidate([6L, 5L])\
    \ == 5.5);\n    assert(candidate([8L, 1L, 3L, 9L, 9L, 2L, 7L]) == 7L);\n}\nvoid\
    \ main(){}"
  status: SyntaxError
  stderr: 'b''/tmp/tmpc0xq6wrl.d(12): Error: undefined identifier `sort`, did you
    mean function `sqrt`?\n/tmp/tmpc0xq6wrl.d(13): Error: cannot implicitly convert
    expression `l.length` of type `ulong` to `int`\nFailed: ["dmd", "-unittest", "-v",
    "-o-", "/tmp/tmpc0xq6wrl.d", "-I/tmp"]\n'''
  stdout: b''
- exit_code: 1
  program: "import std.math;\n/*\nReturn median of elements in the list l.\n    >>>\
    \ median([3L, 1L, 2L, 4L, 5L])\n    3L\n    >>> median([-10L, 4L, 6L, 1000L, 10L,\
    \ 20L])\n    15.0\n    \n*/\nfloat median(long[] l) \n{\n    long[] sorted = l.dup;\n\
    \    sorted.sort;\n    if (sorted.length % 2 == 1)\n        return sorted[sorted.length\
    \ / 2];\n    else\n        return (sorted[sorted.length / 2 - 1] + sorted[sorted.length\
    \ / 2]) / 2.0;\n}\nunittest\n{\n    alias candidate = median;\n\n    assert(candidate([3L,\
    \ 1L, 2L, 4L, 5L]) == 3L);\n    assert(candidate([-10L, 4L, 6L, 1000L, 10L, 20L])\
    \ == 8.0);\n    assert(candidate([5L]) == 5L);\n    assert(candidate([6L, 5L])\
    \ == 5.5);\n    assert(candidate([8L, 1L, 3L, 9L, 9L, 2L, 7L]) == 7L);\n}\nvoid\
    \ main(){}"
  status: SyntaxError
  stderr: 'b''/tmp/tmppz79ph_1.d(13): Error: no property `sort` for type `long[]`\nFailed:
    ["dmd", "-unittest", "-v", "-o-", "/tmp/tmppz79ph_1.d", "-I/tmp"]\n'''
  stdout: b''
- exit_code: 1
  program: "import std.math;\n/*\nReturn median of elements in the list l.\n    >>>\
    \ median([3L, 1L, 2L, 4L, 5L])\n    3L\n    >>> median([-10L, 4L, 6L, 1000L, 10L,\
    \ 20L])\n    15.0\n    \n*/\nfloat median(long[] l) \n{\n    long[] temp = l.dup;\n\
    \    temp.sort;\n    int n = temp.length;\n    if (n % 2 == 0)\n    {\n      \
    \  return (temp[n/2] + temp[n/2-1])/2.0;\n    }\n    else\n    {\n        return\
    \ temp[n/2];\n    }\n}\nunittest\n{\n    alias candidate = median;\n\n    assert(candidate([3L,\
    \ 1L, 2L, 4L, 5L]) == 3L);\n    assert(candidate([-10L, 4L, 6L, 1000L, 10L, 20L])\
    \ == 8.0);\n    assert(candidate([5L]) == 5L);\n    assert(candidate([6L, 5L])\
    \ == 5.5);\n    assert(candidate([8L, 1L, 3L, 9L, 9L, 2L, 7L]) == 7L);\n}\nvoid\
    \ main(){}"
  status: SyntaxError
  stderr: 'b''/tmp/tmpht6wj19z.d(13): Error: no property `sort` for type `long[]`\n/tmp/tmpht6wj19z.d(14):
    Error: cannot implicitly convert expression `temp.length` of type `ulong` to `int`\nFailed:
    ["dmd", "-unittest", "-v", "-o-", "/tmp/tmpht6wj19z.d", "-I/tmp"]\n'''
  stdout: b''
- exit_code: 1
  program: "import std.math;\n/*\nReturn median of elements in the list l.\n    >>>\
    \ median([3L, 1L, 2L, 4L, 5L])\n    3L\n    >>> median([-10L, 4L, 6L, 1000L, 10L,\
    \ 20L])\n    15.0\n    \n*/\nfloat median(long[] l) \n{\n    long[] l2 = l.dup;\n\
    \    l2.sort;\n    int len = l2.length;\n    if (len % 2 == 0) \n    {\n     \
    \   return (l2[len / 2 - 1] + l2[len / 2]) / 2.0;\n    } \n    else \n    {\n\
    \        return l2[len / 2];\n    }\n}\nunittest\n{\n    alias candidate = median;\n\
    \n    assert(candidate([3L, 1L, 2L, 4L, 5L]) == 3L);\n    assert(candidate([-10L,\
    \ 4L, 6L, 1000L, 10L, 20L]) == 8.0);\n    assert(candidate([5L]) == 5L);\n   \
    \ assert(candidate([6L, 5L]) == 5.5);\n    assert(candidate([8L, 1L, 3L, 9L, 9L,\
    \ 2L, 7L]) == 7L);\n}\nvoid main(){}"
  status: SyntaxError
  stderr: 'b''/tmp/tmpbnb2k1yk.d(13): Error: no property `sort` for type `long[]`\n/tmp/tmpbnb2k1yk.d(14):
    Error: cannot implicitly convert expression `l2.length` of type `ulong` to `int`\nFailed:
    ["dmd", "-unittest", "-v", "-o-", "/tmp/tmpbnb2k1yk.d", "-I/tmp"]\n'''
  stdout: b''
- exit_code: 1
  program: "import std.math;\n/*\nReturn median of elements in the list l.\n    >>>\
    \ median([3L, 1L, 2L, 4L, 5L])\n    3L\n    >>> median([-10L, 4L, 6L, 1000L, 10L,\
    \ 20L])\n    15.0\n    \n*/\nfloat median(long[] l) \n{\n    long[] sorted = l.dup;\n\
    \    sorted.sort;\n    int n = sorted.length;\n    if (n % 2 == 1)\n        return\
    \ sorted[n / 2];\n    else\n        return (sorted[n / 2 - 1] + sorted[n / 2])\
    \ / 2.0;\n}\nunittest\n{\n    alias candidate = median;\n\n    assert(candidate([3L,\
    \ 1L, 2L, 4L, 5L]) == 3L);\n    assert(candidate([-10L, 4L, 6L, 1000L, 10L, 20L])\
    \ == 8.0);\n    assert(candidate([5L]) == 5L);\n    assert(candidate([6L, 5L])\
    \ == 5.5);\n    assert(candidate([8L, 1L, 3L, 9L, 9L, 2L, 7L]) == 7L);\n}\nvoid\
    \ main(){}"
  status: SyntaxError
  stderr: 'b''/tmp/tmpyxbvzgf9.d(13): Error: no property `sort` for type `long[]`\n/tmp/tmpyxbvzgf9.d(14):
    Error: cannot implicitly convert expression `sorted.length` of type `ulong` to
    `int`\nFailed: ["dmd", "-unittest", "-v", "-o-", "/tmp/tmpyxbvzgf9.d", "-I/tmp"]\n'''
  stdout: b''

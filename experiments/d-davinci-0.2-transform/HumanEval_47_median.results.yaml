language: d
name: HumanEval_47_median
results:
- exit_code: 1
  program: "import std.math;\n/*\nReturn median of elements in the list l.\n    >>>\
    \ median([3L, 1L, 2L, 4L, 5L])\n    3L\n    >>> median([-10L, 4L, 6L, 1000L, 10L,\
    \ 20L])\n    15.0\n    \n*/\nfloat median(long[] l) \n{\n    long[] sorted = l.dup;\n\
    \    sorted.sort;\n    if (sorted.length % 2 == 1)\n        return sorted[sorted.length\
    \ / 2];\n    else\n        return (sorted[sorted.length / 2 - 1] + sorted[sorted.length\
    \ / 2]) / 2.0;\n}\nunittest\n{\n    alias candidate = median;\n\n    assert(candidate([3L,\
    \ 1L, 2L, 4L, 5L]) == 3L);\n    assert(candidate([-10L, 4L, 6L, 1000L, 10L, 20L])\
    \ == 8.0);\n    assert(candidate([5L]) == 5L);\n    assert(candidate([6L, 5L])\
    \ == 5.5);\n    assert(candidate([8L, 1L, 3L, 9L, 9L, 2L, 7L]) == 7L);\n}\nvoid\
    \ main(){}"
  status: SyntaxError
  stderr: 'b''Error: cannot find source code for runtime library file \''object.d\''\n       dmd
    might not be correctly installed. Run \''dmd -man\'' for installation instructions.\nimport
    path[0] = /tmp\nFailed: ["dmd", "-unittest", "-v", "-o-", "/tmp/tmprjc273gp.d",
    "-I/tmp"]\n'''
  stdout: b''
  timestamp: 1659792379
- exit_code: 1
  program: "import std.math;\n/*\nReturn median of elements in the list l.\n    >>>\
    \ median([3L, 1L, 2L, 4L, 5L])\n    3L\n    >>> median([-10L, 4L, 6L, 1000L, 10L,\
    \ 20L])\n    15.0\n    \n*/\nfloat median(long[] l) \n{\n    long[] temp = l.dup;\n\
    \    temp.sort;\n    int len = temp.length;\n    if (len % 2 == 0)\n    {\n  \
    \      return (temp[len / 2] + temp[len / 2 - 1]) / 2.0;\n    }\n    else\n  \
    \  {\n        return temp[len / 2];\n    }\n}\nunittest\n{\n    alias candidate\
    \ = median;\n\n    assert(candidate([3L, 1L, 2L, 4L, 5L]) == 3L);\n    assert(candidate([-10L,\
    \ 4L, 6L, 1000L, 10L, 20L]) == 8.0);\n    assert(candidate([5L]) == 5L);\n   \
    \ assert(candidate([6L, 5L]) == 5.5);\n    assert(candidate([8L, 1L, 3L, 9L, 9L,\
    \ 2L, 7L]) == 7L);\n}\nvoid main(){}"
  status: SyntaxError
  stderr: 'b''Error: cannot find source code for runtime library file \''object.d\''\n       dmd
    might not be correctly installed. Run \''dmd -man\'' for installation instructions.\nimport
    path[0] = /tmp\nFailed: ["dmd", "-unittest", "-v", "-o-", "/tmp/tmp6x3d3o2b.d",
    "-I/tmp"]\n'''
  stdout: b''
  timestamp: 1659792379
- exit_code: 1
  program: "import std.math;\n/*\nReturn median of elements in the list l.\n    >>>\
    \ median([3L, 1L, 2L, 4L, 5L])\n    3L\n    >>> median([-10L, 4L, 6L, 1000L, 10L,\
    \ 20L])\n    15.0\n    \n*/\nfloat median(long[] l) \n{\n    long[] sorted = l.dup;\n\
    \    sorted.sort;\n    if (sorted.length % 2 == 1)\n        return sorted[sorted.length\
    \ / 2];\n    else\n        return (sorted[sorted.length / 2 - 1] + sorted[sorted.length\
    \ / 2]) / 2.0;\n}\nunittest\n{\n    alias candidate = median;\n\n    assert(candidate([3L,\
    \ 1L, 2L, 4L, 5L]) == 3L);\n    assert(candidate([-10L, 4L, 6L, 1000L, 10L, 20L])\
    \ == 8.0);\n    assert(candidate([5L]) == 5L);\n    assert(candidate([6L, 5L])\
    \ == 5.5);\n    assert(candidate([8L, 1L, 3L, 9L, 9L, 2L, 7L]) == 7L);\n}\nvoid\
    \ main(){}"
  status: SyntaxError
  stderr: 'b''Error: cannot find source code for runtime library file \''object.d\''\n       dmd
    might not be correctly installed. Run \''dmd -man\'' for installation instructions.\nimport
    path[0] = /tmp\nFailed: ["dmd", "-unittest", "-v", "-o-", "/tmp/tmprjc273gp.d",
    "-I/tmp"]\n'''
  stdout: b''
  timestamp: 1659792379
- exit_code: 1
  program: "import std.math;\n/*\nReturn median of elements in the list l.\n    >>>\
    \ median([3L, 1L, 2L, 4L, 5L])\n    3L\n    >>> median([-10L, 4L, 6L, 1000L, 10L,\
    \ 20L])\n    15.0\n    \n*/\nfloat median(long[] l) \n{\n    long[] sorted = l.dup;\n\
    \    sorted.sort;\n    if (sorted.length % 2 == 1) \n    {\n        return sorted[sorted.length\
    \ / 2];\n    } \n    else \n    {\n        return (sorted[sorted.length / 2 -\
    \ 1] + sorted[sorted.length / 2]) / 2.0;\n    }\n}\nunittest\n{\n    alias candidate\
    \ = median;\n\n    assert(candidate([3L, 1L, 2L, 4L, 5L]) == 3L);\n    assert(candidate([-10L,\
    \ 4L, 6L, 1000L, 10L, 20L]) == 8.0);\n    assert(candidate([5L]) == 5L);\n   \
    \ assert(candidate([6L, 5L]) == 5.5);\n    assert(candidate([8L, 1L, 3L, 9L, 9L,\
    \ 2L, 7L]) == 7L);\n}\nvoid main(){}"
  status: SyntaxError
  stderr: 'b''Error: cannot find source code for runtime library file \''object.d\''\n       dmd
    might not be correctly installed. Run \''dmd -man\'' for installation instructions.\nimport
    path[0] = /tmp\nFailed: ["dmd", "-unittest", "-v", "-o-", "/tmp/tmpm0etr6b5.d",
    "-I/tmp"]\n'''
  stdout: b''
  timestamp: 1659792379
- exit_code: 1
  program: "import std.math;\n/*\nReturn median of elements in the list l.\n    >>>\
    \ median([3L, 1L, 2L, 4L, 5L])\n    3L\n    >>> median([-10L, 4L, 6L, 1000L, 10L,\
    \ 20L])\n    15.0\n    \n*/\nfloat median(long[] l) \n{\n    long[] temp = l.dup;\n\
    \    temp.sort;\n    int len = temp.length;\n    if (len % 2 == 0) \n    {\n \
    \       return (temp[len / 2 - 1] + temp[len / 2]) / 2.0;\n    } \n    else \n\
    \    {\n        return temp[len / 2];\n    }\n}\nunittest\n{\n    alias candidate\
    \ = median;\n\n    assert(candidate([3L, 1L, 2L, 4L, 5L]) == 3L);\n    assert(candidate([-10L,\
    \ 4L, 6L, 1000L, 10L, 20L]) == 8.0);\n    assert(candidate([5L]) == 5L);\n   \
    \ assert(candidate([6L, 5L]) == 5.5);\n    assert(candidate([8L, 1L, 3L, 9L, 9L,\
    \ 2L, 7L]) == 7L);\n}\nvoid main(){}"
  status: SyntaxError
  stderr: 'b''Error: cannot find source code for runtime library file \''object.d\''\n       dmd
    might not be correctly installed. Run \''dmd -man\'' for installation instructions.\nimport
    path[0] = /tmp\nFailed: ["dmd", "-unittest", "-v", "-o-", "/tmp/tmpi08a_8pr.d",
    "-I/tmp"]\n'''
  stdout: b''
  timestamp: 1659792379
- exit_code: 1
  program: "import std.math;\n/*\nReturn median of elements in the list l.\n    >>>\
    \ median([3L, 1L, 2L, 4L, 5L])\n    3L\n    >>> median([-10L, 4L, 6L, 1000L, 10L,\
    \ 20L])\n    15.0\n    \n*/\nfloat median(long[] l) \n{\n    int n = l.length;\n\
    \    if (n == 0) \n    {\n        return 0.0;\n    }\n    else if (n == 1) \n\
    \    {\n        return l[0];\n    }\n    else if (n == 2) \n    {\n        return\
    \ (l[0] + l[1]) / 2.0;\n    }\n    else \n    {\n        long[] l2 = l[0..n];\n\
    \        sort(l2);\n        if (n % 2 == 0) \n        {\n            return (l2[n\
    \ / 2 - 1] + l2[n / 2]) / 2.0;\n        }\n        else \n        {\n        \
    \    return l2[n / 2];\n        }\n    }\n}\nunittest\n{\n    alias candidate\
    \ = median;\n\n    assert(candidate([3L, 1L, 2L, 4L, 5L]) == 3L);\n    assert(candidate([-10L,\
    \ 4L, 6L, 1000L, 10L, 20L]) == 8.0);\n    assert(candidate([5L]) == 5L);\n   \
    \ assert(candidate([6L, 5L]) == 5.5);\n    assert(candidate([8L, 1L, 3L, 9L, 9L,\
    \ 2L, 7L]) == 7L);\n}\nvoid main(){}"
  status: SyntaxError
  stderr: 'b''Error: cannot find source code for runtime library file \''object.d\''\n       dmd
    might not be correctly installed. Run \''dmd -man\'' for installation instructions.\nimport
    path[0] = /tmp\nFailed: ["dmd", "-unittest", "-v", "-o-", "/tmp/tmpecjs77n0.d",
    "-I/tmp"]\n'''
  stdout: b''
  timestamp: 1659792379
- exit_code: 1
  program: "import std.math;\n/*\nReturn median of elements in the list l.\n    >>>\
    \ median([3L, 1L, 2L, 4L, 5L])\n    3L\n    >>> median([-10L, 4L, 6L, 1000L, 10L,\
    \ 20L])\n    15.0\n    \n*/\nfloat median(long[] l) \n{\n    long[] sorted = l.sort();\n\
    \    int mid = sorted.length / 2;\n    if (sorted.length % 2 == 0)\n    {\n  \
    \      return (sorted[mid] + sorted[mid - 1]) / 2.0;\n    }\n    else\n    {\n\
    \        return sorted[mid];\n    }\n}\nunittest\n{\n    alias candidate = median;\n\
    \n    assert(candidate([3L, 1L, 2L, 4L, 5L]) == 3L);\n    assert(candidate([-10L,\
    \ 4L, 6L, 1000L, 10L, 20L]) == 8.0);\n    assert(candidate([5L]) == 5L);\n   \
    \ assert(candidate([6L, 5L]) == 5.5);\n    assert(candidate([8L, 1L, 3L, 9L, 9L,\
    \ 2L, 7L]) == 7L);\n}\nvoid main(){}"
  status: SyntaxError
  stderr: 'b''Error: cannot find source code for runtime library file \''object.d\''\n       dmd
    might not be correctly installed. Run \''dmd -man\'' for installation instructions.\nimport
    path[0] = /tmp\nFailed: ["dmd", "-unittest", "-v", "-o-", "/tmp/tmp6a4hyf12.d",
    "-I/tmp"]\n'''
  stdout: b''
  timestamp: 1659792379
- exit_code: 1
  program: "import std.math;\n/*\nReturn median of elements in the list l.\n    >>>\
    \ median([3L, 1L, 2L, 4L, 5L])\n    3L\n    >>> median([-10L, 4L, 6L, 1000L, 10L,\
    \ 20L])\n    15.0\n    \n*/\nfloat median(long[] l) \n{\n    long[] sorted = l.dup;\n\
    \    sorted.sort;\n    int len = sorted.length;\n    if (len % 2 == 0) \n    {\n\
    \        return (sorted[len / 2 - 1] + sorted[len / 2]) / 2.0;\n    }\n    else\
    \ \n    {\n        return sorted[len / 2];\n    }\n}\nunittest\n{\n    alias candidate\
    \ = median;\n\n    assert(candidate([3L, 1L, 2L, 4L, 5L]) == 3L);\n    assert(candidate([-10L,\
    \ 4L, 6L, 1000L, 10L, 20L]) == 8.0);\n    assert(candidate([5L]) == 5L);\n   \
    \ assert(candidate([6L, 5L]) == 5.5);\n    assert(candidate([8L, 1L, 3L, 9L, 9L,\
    \ 2L, 7L]) == 7L);\n}\nvoid main(){}"
  status: SyntaxError
  stderr: 'b''Error: cannot find source code for runtime library file \''object.d\''\n       dmd
    might not be correctly installed. Run \''dmd -man\'' for installation instructions.\nimport
    path[0] = /tmp\nFailed: ["dmd", "-unittest", "-v", "-o-", "/tmp/tmp4aokkq3o.d",
    "-I/tmp"]\n'''
  stdout: b''
  timestamp: 1659792379
- exit_code: 1
  program: "import std.math;\n/*\nReturn median of elements in the list l.\n    >>>\
    \ median([3L, 1L, 2L, 4L, 5L])\n    3L\n    >>> median([-10L, 4L, 6L, 1000L, 10L,\
    \ 20L])\n    15.0\n    \n*/\nfloat median(long[] l) \n{\n    l.sort();\n    int\
    \ n = l.length;\n    if (n % 2 == 1)\n        return l[n / 2];\n    else\n   \
    \     return (l[n / 2 - 1] + l[n / 2]) / 2.0;\n}\nunittest\n{\n    alias candidate\
    \ = median;\n\n    assert(candidate([3L, 1L, 2L, 4L, 5L]) == 3L);\n    assert(candidate([-10L,\
    \ 4L, 6L, 1000L, 10L, 20L]) == 8.0);\n    assert(candidate([5L]) == 5L);\n   \
    \ assert(candidate([6L, 5L]) == 5.5);\n    assert(candidate([8L, 1L, 3L, 9L, 9L,\
    \ 2L, 7L]) == 7L);\n}\nvoid main(){}"
  status: SyntaxError
  stderr: 'b''Error: cannot find source code for runtime library file \''object.d\''\n       dmd
    might not be correctly installed. Run \''dmd -man\'' for installation instructions.\nimport
    path[0] = /tmp\nFailed: ["dmd", "-unittest", "-v", "-o-", "/tmp/tmp6h_6lqs2.d",
    "-I/tmp"]\n'''
  stdout: b''
  timestamp: 1659792379
- exit_code: 1
  program: "import std.math;\n/*\nReturn median of elements in the list l.\n    >>>\
    \ median([3L, 1L, 2L, 4L, 5L])\n    3L\n    >>> median([-10L, 4L, 6L, 1000L, 10L,\
    \ 20L])\n    15.0\n    \n*/\nfloat median(long[] l) \n{\n    long[] sorted = l.dup.sort;\n\
    \    int mid = sorted.length / 2;\n    if (sorted.length % 2 == 0)\n        return\
    \ (sorted[mid - 1] + sorted[mid]) / 2.0;\n    else\n        return sorted[mid];\n\
    }\nunittest\n{\n    alias candidate = median;\n\n    assert(candidate([3L, 1L,\
    \ 2L, 4L, 5L]) == 3L);\n    assert(candidate([-10L, 4L, 6L, 1000L, 10L, 20L])\
    \ == 8.0);\n    assert(candidate([5L]) == 5L);\n    assert(candidate([6L, 5L])\
    \ == 5.5);\n    assert(candidate([8L, 1L, 3L, 9L, 9L, 2L, 7L]) == 7L);\n}\nvoid\
    \ main(){}"
  status: SyntaxError
  stderr: 'b''Error: cannot find source code for runtime library file \''object.d\''\n       dmd
    might not be correctly installed. Run \''dmd -man\'' for installation instructions.\nimport
    path[0] = /tmp\nFailed: ["dmd", "-unittest", "-v", "-o-", "/tmp/tmpu9wrwy65.d",
    "-I/tmp"]\n'''
  stdout: b''
  timestamp: 1659792379
- exit_code: 1
  program: "import std.math;\n/*\nReturn median of elements in the list l.\n    >>>\
    \ median([3L, 1L, 2L, 4L, 5L])\n    3L\n    >>> median([-10L, 4L, 6L, 1000L, 10L,\
    \ 20L])\n    15.0\n    \n*/\nfloat median(long[] l) \n{\n    int n = l.length;\n\
    \    if (n == 0) \n    {\n        return 0.0;\n    }\n    if (n == 1) \n    {\n\
    \        return l[0];\n    }\n    sort(l);\n    if (n % 2 == 0) \n    {\n    \
    \    return (l[n / 2 - 1] + l[n / 2]) / 2.0;\n    }\n    else \n    {\n      \
    \  return l[n / 2];\n    }\n}\nunittest\n{\n    alias candidate = median;\n\n\
    \    assert(candidate([3L, 1L, 2L, 4L, 5L]) == 3L);\n    assert(candidate([-10L,\
    \ 4L, 6L, 1000L, 10L, 20L]) == 8.0);\n    assert(candidate([5L]) == 5L);\n   \
    \ assert(candidate([6L, 5L]) == 5.5);\n    assert(candidate([8L, 1L, 3L, 9L, 9L,\
    \ 2L, 7L]) == 7L);\n}\nvoid main(){}"
  status: SyntaxError
  stderr: 'b''Error: cannot find source code for runtime library file \''object.d\''\n       dmd
    might not be correctly installed. Run \''dmd -man\'' for installation instructions.\nimport
    path[0] = /tmp\nFailed: ["dmd", "-unittest", "-v", "-o-", "/tmp/tmpl0k40w7n.d",
    "-I/tmp"]\n'''
  stdout: b''
  timestamp: 1659792379
- exit_code: 1
  program: "import std.math;\n/*\nReturn median of elements in the list l.\n    >>>\
    \ median([3L, 1L, 2L, 4L, 5L])\n    3L\n    >>> median([-10L, 4L, 6L, 1000L, 10L,\
    \ 20L])\n    15.0\n    \n*/\nfloat median(long[] l) \n{\n    long[] sorted = l.dup;\n\
    \    sorted.sort;\n    if (sorted.length % 2 == 1) \n    {\n        return sorted[sorted.length\
    \ / 2];\n    }\n    else \n    {\n        return (sorted[sorted.length / 2 - 1]\
    \ + sorted[sorted.length / 2]) / 2.0;\n    }\n}\nunittest\n{\n    alias candidate\
    \ = median;\n\n    assert(candidate([3L, 1L, 2L, 4L, 5L]) == 3L);\n    assert(candidate([-10L,\
    \ 4L, 6L, 1000L, 10L, 20L]) == 8.0);\n    assert(candidate([5L]) == 5L);\n   \
    \ assert(candidate([6L, 5L]) == 5.5);\n    assert(candidate([8L, 1L, 3L, 9L, 9L,\
    \ 2L, 7L]) == 7L);\n}\nvoid main(){}"
  status: SyntaxError
  stderr: 'b''Error: cannot find source code for runtime library file \''object.d\''\n       dmd
    might not be correctly installed. Run \''dmd -man\'' for installation instructions.\nimport
    path[0] = /tmp\nFailed: ["dmd", "-unittest", "-v", "-o-", "/tmp/tmpqg610b0h.d",
    "-I/tmp"]\n'''
  stdout: b''
  timestamp: 1659792379
- exit_code: 1
  program: "import std.math;\n/*\nReturn median of elements in the list l.\n    >>>\
    \ median([3L, 1L, 2L, 4L, 5L])\n    3L\n    >>> median([-10L, 4L, 6L, 1000L, 10L,\
    \ 20L])\n    15.0\n    \n*/\nfloat median(long[] l) \n{\n    long[] sorted = l.dup;\n\
    \    sorted.sort;\n    int n = sorted.length;\n    if (n % 2 == 1)\n        return\
    \ sorted[n / 2];\n    else\n        return (sorted[n / 2 - 1] + sorted[n / 2])\
    \ / 2.0;\n}\nunittest\n{\n    alias candidate = median;\n\n    assert(candidate([3L,\
    \ 1L, 2L, 4L, 5L]) == 3L);\n    assert(candidate([-10L, 4L, 6L, 1000L, 10L, 20L])\
    \ == 8.0);\n    assert(candidate([5L]) == 5L);\n    assert(candidate([6L, 5L])\
    \ == 5.5);\n    assert(candidate([8L, 1L, 3L, 9L, 9L, 2L, 7L]) == 7L);\n}\nvoid\
    \ main(){}"
  status: SyntaxError
  stderr: 'b''Error: cannot find source code for runtime library file \''object.d\''\n       dmd
    might not be correctly installed. Run \''dmd -man\'' for installation instructions.\nimport
    path[0] = /tmp\nFailed: ["dmd", "-unittest", "-v", "-o-", "/tmp/tmpigo4kpie.d",
    "-I/tmp"]\n'''
  stdout: b''
  timestamp: 1659792379
- exit_code: 1
  program: "import std.math;\n/*\nReturn median of elements in the list l.\n    >>>\
    \ median([3L, 1L, 2L, 4L, 5L])\n    3L\n    >>> median([-10L, 4L, 6L, 1000L, 10L,\
    \ 20L])\n    15.0\n    \n*/\nfloat median(long[] l) \n{\n    long[] sorted = l.dup;\n\
    \    sorted.sort;\n    if (sorted.length % 2 == 1)\n    {\n        return sorted[sorted.length\
    \ / 2];\n    }\n    else\n    {\n        return (sorted[sorted.length / 2 - 1]\
    \ + sorted[sorted.length / 2]) / 2.0;\n    }\n}\nunittest\n{\n    alias candidate\
    \ = median;\n\n    assert(candidate([3L, 1L, 2L, 4L, 5L]) == 3L);\n    assert(candidate([-10L,\
    \ 4L, 6L, 1000L, 10L, 20L]) == 8.0);\n    assert(candidate([5L]) == 5L);\n   \
    \ assert(candidate([6L, 5L]) == 5.5);\n    assert(candidate([8L, 1L, 3L, 9L, 9L,\
    \ 2L, 7L]) == 7L);\n}\nvoid main(){}"
  status: SyntaxError
  stderr: 'b''Error: cannot find source code for runtime library file \''object.d\''\n       dmd
    might not be correctly installed. Run \''dmd -man\'' for installation instructions.\nimport
    path[0] = /tmp\nFailed: ["dmd", "-unittest", "-v", "-o-", "/tmp/tmpo96ljf_e.d",
    "-I/tmp"]\n'''
  stdout: b''
  timestamp: 1659792379
- exit_code: 1
  program: "import std.math;\n/*\nReturn median of elements in the list l.\n    >>>\
    \ median([3L, 1L, 2L, 4L, 5L])\n    3L\n    >>> median([-10L, 4L, 6L, 1000L, 10L,\
    \ 20L])\n    15.0\n    \n*/\nfloat median(long[] l) \n{\n    long[] sorted = l.dup;\n\
    \    sorted.sort;\n    if (sorted.length % 2 == 1)\n        return sorted[sorted.length\
    \ / 2];\n    else\n        return (sorted[sorted.length / 2 - 1] + sorted[sorted.length\
    \ / 2]) / 2.0;\n}\nunittest\n{\n    alias candidate = median;\n\n    assert(candidate([3L,\
    \ 1L, 2L, 4L, 5L]) == 3L);\n    assert(candidate([-10L, 4L, 6L, 1000L, 10L, 20L])\
    \ == 8.0);\n    assert(candidate([5L]) == 5L);\n    assert(candidate([6L, 5L])\
    \ == 5.5);\n    assert(candidate([8L, 1L, 3L, 9L, 9L, 2L, 7L]) == 7L);\n}\nvoid\
    \ main(){}"
  status: SyntaxError
  stderr: 'b''Error: cannot find source code for runtime library file \''object.d\''\n       dmd
    might not be correctly installed. Run \''dmd -man\'' for installation instructions.\nimport
    path[0] = /tmp\nFailed: ["dmd", "-unittest", "-v", "-o-", "/tmp/tmprjc273gp.d",
    "-I/tmp"]\n'''
  stdout: b''
  timestamp: 1659792379
- exit_code: 1
  program: "import std.math;\n/*\nReturn median of elements in the list l.\n    >>>\
    \ median([3L, 1L, 2L, 4L, 5L])\n    3L\n    >>> median([-10L, 4L, 6L, 1000L, 10L,\
    \ 20L])\n    15.0\n    \n*/\nfloat median(long[] l) \n{\n    long[] sorted = sort(l);\n\
    \    int len = l.length;\n    if (len % 2 == 1)\n    {\n        return sorted[len\
    \ / 2];\n    }\n    else\n    {\n        return (sorted[len / 2 - 1] + sorted[len\
    \ / 2]) / 2.0;\n    }\n}\nunittest\n{\n    alias candidate = median;\n\n    assert(candidate([3L,\
    \ 1L, 2L, 4L, 5L]) == 3L);\n    assert(candidate([-10L, 4L, 6L, 1000L, 10L, 20L])\
    \ == 8.0);\n    assert(candidate([5L]) == 5L);\n    assert(candidate([6L, 5L])\
    \ == 5.5);\n    assert(candidate([8L, 1L, 3L, 9L, 9L, 2L, 7L]) == 7L);\n}\nvoid\
    \ main(){}"
  status: SyntaxError
  stderr: 'b''Error: cannot find source code for runtime library file \''object.d\''\n       dmd
    might not be correctly installed. Run \''dmd -man\'' for installation instructions.\nimport
    path[0] = /tmp\nFailed: ["dmd", "-unittest", "-v", "-o-", "/tmp/tmpbt3e3nmx.d",
    "-I/tmp"]\n'''
  stdout: b''
  timestamp: 1659792379
- exit_code: 1
  program: "import std.math;\n/*\nReturn median of elements in the list l.\n    >>>\
    \ median([3L, 1L, 2L, 4L, 5L])\n    3L\n    >>> median([-10L, 4L, 6L, 1000L, 10L,\
    \ 20L])\n    15.0\n    \n*/\nfloat median(long[] l) \n{\n    long[] sorted = l.dup;\n\
    \    sorted.sort;\n    if (sorted.length % 2 == 1)\n        return sorted[sorted.length\
    \ / 2];\n    else\n        return (sorted[sorted.length / 2 - 1] + sorted[sorted.length\
    \ / 2]) / 2.0;\n}\nunittest\n{\n    alias candidate = median;\n\n    assert(candidate([3L,\
    \ 1L, 2L, 4L, 5L]) == 3L);\n    assert(candidate([-10L, 4L, 6L, 1000L, 10L, 20L])\
    \ == 8.0);\n    assert(candidate([5L]) == 5L);\n    assert(candidate([6L, 5L])\
    \ == 5.5);\n    assert(candidate([8L, 1L, 3L, 9L, 9L, 2L, 7L]) == 7L);\n}\nvoid\
    \ main(){}"
  status: SyntaxError
  stderr: 'b''Error: cannot find source code for runtime library file \''object.d\''\n       dmd
    might not be correctly installed. Run \''dmd -man\'' for installation instructions.\nimport
    path[0] = /tmp\nFailed: ["dmd", "-unittest", "-v", "-o-", "/tmp/tmprjc273gp.d",
    "-I/tmp"]\n'''
  stdout: b''
  timestamp: 1659792379
- exit_code: 1
  program: "import std.math;\n/*\nReturn median of elements in the list l.\n    >>>\
    \ median([3L, 1L, 2L, 4L, 5L])\n    3L\n    >>> median([-10L, 4L, 6L, 1000L, 10L,\
    \ 20L])\n    15.0\n    \n*/\nfloat median(long[] l) \n{\n    long[] temp = l.dup;\n\
    \    temp.sort;\n    int n = temp.length;\n    if (n % 2 == 0)\n    {\n      \
    \  return (temp[n/2] + temp[n/2-1])/2.0;\n    }\n    else\n    {\n        return\
    \ temp[n/2];\n    }\n}\nunittest\n{\n    alias candidate = median;\n\n    assert(candidate([3L,\
    \ 1L, 2L, 4L, 5L]) == 3L);\n    assert(candidate([-10L, 4L, 6L, 1000L, 10L, 20L])\
    \ == 8.0);\n    assert(candidate([5L]) == 5L);\n    assert(candidate([6L, 5L])\
    \ == 5.5);\n    assert(candidate([8L, 1L, 3L, 9L, 9L, 2L, 7L]) == 7L);\n}\nvoid\
    \ main(){}"
  status: SyntaxError
  stderr: 'b''Error: cannot find source code for runtime library file \''object.d\''\n       dmd
    might not be correctly installed. Run \''dmd -man\'' for installation instructions.\nimport
    path[0] = /tmp\nFailed: ["dmd", "-unittest", "-v", "-o-", "/tmp/tmpro_n749o.d",
    "-I/tmp"]\n'''
  stdout: b''
  timestamp: 1659792379
- exit_code: 1
  program: "import std.math;\n/*\nReturn median of elements in the list l.\n    >>>\
    \ median([3L, 1L, 2L, 4L, 5L])\n    3L\n    >>> median([-10L, 4L, 6L, 1000L, 10L,\
    \ 20L])\n    15.0\n    \n*/\nfloat median(long[] l) \n{\n    long[] l2 = l.dup;\n\
    \    l2.sort;\n    int len = l2.length;\n    if (len % 2 == 0) \n    {\n     \
    \   return (l2[len / 2 - 1] + l2[len / 2]) / 2.0;\n    } \n    else \n    {\n\
    \        return l2[len / 2];\n    }\n}\nunittest\n{\n    alias candidate = median;\n\
    \n    assert(candidate([3L, 1L, 2L, 4L, 5L]) == 3L);\n    assert(candidate([-10L,\
    \ 4L, 6L, 1000L, 10L, 20L]) == 8.0);\n    assert(candidate([5L]) == 5L);\n   \
    \ assert(candidate([6L, 5L]) == 5.5);\n    assert(candidate([8L, 1L, 3L, 9L, 9L,\
    \ 2L, 7L]) == 7L);\n}\nvoid main(){}"
  status: SyntaxError
  stderr: 'b''Error: cannot find source code for runtime library file \''object.d\''\n       dmd
    might not be correctly installed. Run \''dmd -man\'' for installation instructions.\nimport
    path[0] = /tmp\nFailed: ["dmd", "-unittest", "-v", "-o-", "/tmp/tmpoyzbk6cv.d",
    "-I/tmp"]\n'''
  stdout: b''
  timestamp: 1659792379
- exit_code: 1
  program: "import std.math;\n/*\nReturn median of elements in the list l.\n    >>>\
    \ median([3L, 1L, 2L, 4L, 5L])\n    3L\n    >>> median([-10L, 4L, 6L, 1000L, 10L,\
    \ 20L])\n    15.0\n    \n*/\nfloat median(long[] l) \n{\n    long[] sorted = l.dup;\n\
    \    sorted.sort;\n    int n = sorted.length;\n    if (n % 2 == 1)\n        return\
    \ sorted[n / 2];\n    else\n        return (sorted[n / 2 - 1] + sorted[n / 2])\
    \ / 2.0;\n}\nunittest\n{\n    alias candidate = median;\n\n    assert(candidate([3L,\
    \ 1L, 2L, 4L, 5L]) == 3L);\n    assert(candidate([-10L, 4L, 6L, 1000L, 10L, 20L])\
    \ == 8.0);\n    assert(candidate([5L]) == 5L);\n    assert(candidate([6L, 5L])\
    \ == 5.5);\n    assert(candidate([8L, 1L, 3L, 9L, 9L, 2L, 7L]) == 7L);\n}\nvoid\
    \ main(){}"
  status: SyntaxError
  stderr: 'b''Error: cannot find source code for runtime library file \''object.d\''\n       dmd
    might not be correctly installed. Run \''dmd -man\'' for installation instructions.\nimport
    path[0] = /tmp\nFailed: ["dmd", "-unittest", "-v", "-o-", "/tmp/tmpigo4kpie.d",
    "-I/tmp"]\n'''
  stdout: b''
  timestamp: 1659792379
- exit_code: 1
  program: "import std.math;\n/*\nReturn median of elements in the list l.\n    >>>\
    \ median([3L, 1L, 2L, 4L, 5L])\n    3L\n    >>> median([-10L, 4L, 6L, 1000L, 10L,\
    \ 20L])\n    15.0\n    \n*/\nfloat median(long[] l) \n{\n    long[] sorted = l.dup;\n\
    \    sorted.sort;\n    if (sorted.length % 2 == 1) \n    {\n        return sorted[sorted.length\
    \ / 2];\n    } \n    else \n    {\n        return (sorted[sorted.length / 2 -\
    \ 1] + sorted[sorted.length / 2]) / 2.0;\n    }\n}\nunittest\n{\n    alias candidate\
    \ = median;\n\n    assert(candidate([3L, 1L, 2L, 4L, 5L]) == 3L);\n    assert(candidate([-10L,\
    \ 4L, 6L, 1000L, 10L, 20L]) == 8.0);\n    assert(candidate([5L]) == 5L);\n   \
    \ assert(candidate([6L, 5L]) == 5.5);\n    assert(candidate([8L, 1L, 3L, 9L, 9L,\
    \ 2L, 7L]) == 7L);\n}\nvoid main(){}"
  status: SyntaxError
  stderr: 'b''Error: cannot find source code for runtime library file \''object.d\''\n       dmd
    might not be correctly installed. Run \''dmd -man\'' for installation instructions.\nimport
    path[0] = /tmp\nFailed: ["dmd", "-unittest", "-v", "-o-", "/tmp/tmpm0etr6b5.d",
    "-I/tmp"]\n'''
  stdout: b''
  timestamp: 1659792379
- exit_code: 1
  program: "import std.math;\n/*\nReturn median of elements in the list l.\n    >>>\
    \ median([3L, 1L, 2L, 4L, 5L])\n    3L\n    >>> median([-10L, 4L, 6L, 1000L, 10L,\
    \ 20L])\n    15.0\n    \n*/\nfloat median(long[] l) \n{\n    long[] sorted = l.dup;\n\
    \    sorted.sort;\n    int n = sorted.length;\n    if (n % 2 == 1) \n    {\n \
    \       return sorted[n / 2];\n    } \n    else \n    {\n        return (sorted[n\
    \ / 2 - 1] + sorted[n / 2]) / 2.0;\n    }\n}\nunittest\n{\n    alias candidate\
    \ = median;\n\n    assert(candidate([3L, 1L, 2L, 4L, 5L]) == 3L);\n    assert(candidate([-10L,\
    \ 4L, 6L, 1000L, 10L, 20L]) == 8.0);\n    assert(candidate([5L]) == 5L);\n   \
    \ assert(candidate([6L, 5L]) == 5.5);\n    assert(candidate([8L, 1L, 3L, 9L, 9L,\
    \ 2L, 7L]) == 7L);\n}\nvoid main(){}"
  status: SyntaxError
  stderr: 'b''Error: cannot find source code for runtime library file \''object.d\''\n       dmd
    might not be correctly installed. Run \''dmd -man\'' for installation instructions.\nimport
    path[0] = /tmp\nFailed: ["dmd", "-unittest", "-v", "-o-", "/tmp/tmphz52njnm.d",
    "-I/tmp"]\n'''
  stdout: b''
  timestamp: 1659792379
- exit_code: 1
  program: "import std.math;\n/*\nReturn median of elements in the list l.\n    >>>\
    \ median([3L, 1L, 2L, 4L, 5L])\n    3L\n    >>> median([-10L, 4L, 6L, 1000L, 10L,\
    \ 20L])\n    15.0\n    \n*/\nfloat median(long[] l) \n{\n    long[] sorted = l.dup.sort;\n\
    \    int mid = l.length / 2;\n    if (l.length % 2 == 0) {\n        return (sorted[mid]\
    \ + sorted[mid - 1]) / 2.0;\n    } else {\n        return sorted[mid];\n    }\n\
    }\nunittest\n{\n    alias candidate = median;\n\n    assert(candidate([3L, 1L,\
    \ 2L, 4L, 5L]) == 3L);\n    assert(candidate([-10L, 4L, 6L, 1000L, 10L, 20L])\
    \ == 8.0);\n    assert(candidate([5L]) == 5L);\n    assert(candidate([6L, 5L])\
    \ == 5.5);\n    assert(candidate([8L, 1L, 3L, 9L, 9L, 2L, 7L]) == 7L);\n}\nvoid\
    \ main(){}"
  status: SyntaxError
  stderr: 'b''Error: cannot find source code for runtime library file \''object.d\''\n       dmd
    might not be correctly installed. Run \''dmd -man\'' for installation instructions.\nimport
    path[0] = /tmp\nFailed: ["dmd", "-unittest", "-v", "-o-", "/tmp/tmpl34j7mhw.d",
    "-I/tmp"]\n'''
  stdout: b''
  timestamp: 1659792379
- exit_code: 1
  program: "import std.math;\n/*\nReturn median of elements in the list l.\n    >>>\
    \ median([3L, 1L, 2L, 4L, 5L])\n    3L\n    >>> median([-10L, 4L, 6L, 1000L, 10L,\
    \ 20L])\n    15.0\n    \n*/\nfloat median(long[] l) \n{\n    long[] sorted = l.dup;\n\
    \    sorted.sort;\n    if (sorted.length % 2 == 1)\n    {\n        return sorted[sorted.length\
    \ / 2];\n    }\n    else\n    {\n        return (sorted[sorted.length / 2 - 1]\
    \ + sorted[sorted.length / 2]) / 2.0;\n    }\n}\nunittest\n{\n    alias candidate\
    \ = median;\n\n    assert(candidate([3L, 1L, 2L, 4L, 5L]) == 3L);\n    assert(candidate([-10L,\
    \ 4L, 6L, 1000L, 10L, 20L]) == 8.0);\n    assert(candidate([5L]) == 5L);\n   \
    \ assert(candidate([6L, 5L]) == 5.5);\n    assert(candidate([8L, 1L, 3L, 9L, 9L,\
    \ 2L, 7L]) == 7L);\n}\nvoid main(){}"
  status: SyntaxError
  stderr: 'b''Error: cannot find source code for runtime library file \''object.d\''\n       dmd
    might not be correctly installed. Run \''dmd -man\'' for installation instructions.\nimport
    path[0] = /tmp\nFailed: ["dmd", "-unittest", "-v", "-o-", "/tmp/tmpo96ljf_e.d",
    "-I/tmp"]\n'''
  stdout: b''
  timestamp: 1659792379
- exit_code: 1
  program: "import std.math;\n/*\nReturn median of elements in the list l.\n    >>>\
    \ median([3L, 1L, 2L, 4L, 5L])\n    3L\n    >>> median([-10L, 4L, 6L, 1000L, 10L,\
    \ 20L])\n    15.0\n    \n*/\nfloat median(long[] l) \n{\n    long[] sorted = l.dup;\n\
    \    sorted.sort;\n    if (sorted.length % 2 == 1)\n        return sorted[sorted.length\
    \ / 2];\n    else\n        return (sorted[sorted.length / 2 - 1] + sorted[sorted.length\
    \ / 2]) / 2.0;\n}\nunittest\n{\n    alias candidate = median;\n\n    assert(candidate([3L,\
    \ 1L, 2L, 4L, 5L]) == 3L);\n    assert(candidate([-10L, 4L, 6L, 1000L, 10L, 20L])\
    \ == 8.0);\n    assert(candidate([5L]) == 5L);\n    assert(candidate([6L, 5L])\
    \ == 5.5);\n    assert(candidate([8L, 1L, 3L, 9L, 9L, 2L, 7L]) == 7L);\n}\nvoid\
    \ main(){}"
  status: SyntaxError
  stderr: 'b''Error: cannot find source code for runtime library file \''object.d\''\n       dmd
    might not be correctly installed. Run \''dmd -man\'' for installation instructions.\nimport
    path[0] = /tmp\nFailed: ["dmd", "-unittest", "-v", "-o-", "/tmp/tmprjc273gp.d",
    "-I/tmp"]\n'''
  stdout: b''
  timestamp: 1659792379
- exit_code: 1
  program: "import std.math;\n/*\nReturn median of elements in the list l.\n    >>>\
    \ median([3L, 1L, 2L, 4L, 5L])\n    3L\n    >>> median([-10L, 4L, 6L, 1000L, 10L,\
    \ 20L])\n    15.0\n    \n*/\nfloat median(long[] l) \n{\n    long[] sorted = l.dup;\n\
    \    sorted.sort;\n    int n = sorted.length;\n    if (n % 2 == 1)\n    {\n  \
    \      return sorted[n / 2];\n    }\n    else\n    {\n        return (sorted[n\
    \ / 2 - 1] + sorted[n / 2]) / 2.0;\n    }\n}\nunittest\n{\n    alias candidate\
    \ = median;\n\n    assert(candidate([3L, 1L, 2L, 4L, 5L]) == 3L);\n    assert(candidate([-10L,\
    \ 4L, 6L, 1000L, 10L, 20L]) == 8.0);\n    assert(candidate([5L]) == 5L);\n   \
    \ assert(candidate([6L, 5L]) == 5.5);\n    assert(candidate([8L, 1L, 3L, 9L, 9L,\
    \ 2L, 7L]) == 7L);\n}\nvoid main(){}"
  status: SyntaxError
  stderr: 'b''Error: cannot find source code for runtime library file \''object.d\''\n       dmd
    might not be correctly installed. Run \''dmd -man\'' for installation instructions.\nimport
    path[0] = /tmp\nFailed: ["dmd", "-unittest", "-v", "-o-", "/tmp/tmp4dbqgk02.d",
    "-I/tmp"]\n'''
  stdout: b''
  timestamp: 1659792379
- exit_code: 1
  program: "import std.math;\n/*\nReturn median of elements in the list l.\n    >>>\
    \ median([3L, 1L, 2L, 4L, 5L])\n    3L\n    >>> median([-10L, 4L, 6L, 1000L, 10L,\
    \ 20L])\n    15.0\n    \n*/\nfloat median(long[] l) \n{\n    long[] sorted = l.dup.sort;\n\
    \    int n = sorted.length;\n    if (n % 2 == 1) {\n        return sorted[n /\
    \ 2];\n    } else {\n        return (sorted[n / 2 - 1] + sorted[n / 2]) / 2.0;\n\
    \    }\n}\nunittest\n{\n    alias candidate = median;\n\n    assert(candidate([3L,\
    \ 1L, 2L, 4L, 5L]) == 3L);\n    assert(candidate([-10L, 4L, 6L, 1000L, 10L, 20L])\
    \ == 8.0);\n    assert(candidate([5L]) == 5L);\n    assert(candidate([6L, 5L])\
    \ == 5.5);\n    assert(candidate([8L, 1L, 3L, 9L, 9L, 2L, 7L]) == 7L);\n}\nvoid\
    \ main(){}"
  status: SyntaxError
  stderr: 'b''Error: cannot find source code for runtime library file \''object.d\''\n       dmd
    might not be correctly installed. Run \''dmd -man\'' for installation instructions.\nimport
    path[0] = /tmp\nFailed: ["dmd", "-unittest", "-v", "-o-", "/tmp/tmp2b1clbcp.d",
    "-I/tmp"]\n'''
  stdout: b''
  timestamp: 1659792379
- exit_code: 1
  program: "import std.math;\n/*\nReturn median of elements in the list l.\n    >>>\
    \ median([3L, 1L, 2L, 4L, 5L])\n    3L\n    >>> median([-10L, 4L, 6L, 1000L, 10L,\
    \ 20L])\n    15.0\n    \n*/\nfloat median(long[] l) \n{\n    long[] sorted = l.dup;\n\
    \    sorted.sort;\n    if (sorted.length % 2 == 1)\n    {\n        return sorted[sorted.length\
    \ / 2];\n    }\n    else\n    {\n        return (sorted[sorted.length / 2 - 1]\
    \ + sorted[sorted.length / 2]) / 2.0;\n    }\n}\nunittest\n{\n    alias candidate\
    \ = median;\n\n    assert(candidate([3L, 1L, 2L, 4L, 5L]) == 3L);\n    assert(candidate([-10L,\
    \ 4L, 6L, 1000L, 10L, 20L]) == 8.0);\n    assert(candidate([5L]) == 5L);\n   \
    \ assert(candidate([6L, 5L]) == 5.5);\n    assert(candidate([8L, 1L, 3L, 9L, 9L,\
    \ 2L, 7L]) == 7L);\n}\nvoid main(){}"
  status: SyntaxError
  stderr: 'b''Error: cannot find source code for runtime library file \''object.d\''\n       dmd
    might not be correctly installed. Run \''dmd -man\'' for installation instructions.\nimport
    path[0] = /tmp\nFailed: ["dmd", "-unittest", "-v", "-o-", "/tmp/tmpo96ljf_e.d",
    "-I/tmp"]\n'''
  stdout: b''
  timestamp: 1659792379
- exit_code: 1
  program: "import std.math;\n/*\nReturn median of elements in the list l.\n    >>>\
    \ median([3L, 1L, 2L, 4L, 5L])\n    3L\n    >>> median([-10L, 4L, 6L, 1000L, 10L,\
    \ 20L])\n    15.0\n    \n*/\nfloat median(long[] l) \n{\n    long[] sorted = l.dup;\n\
    \    sorted.sort;\n    size_t n = sorted.length;\n    if (n % 2 == 1) \n    {\n\
    \        return sorted[n / 2];\n    } \n    else \n    {\n        return (sorted[n\
    \ / 2 - 1] + sorted[n / 2]) / 2.0;\n    }\n}\nunittest\n{\n    alias candidate\
    \ = median;\n\n    assert(candidate([3L, 1L, 2L, 4L, 5L]) == 3L);\n    assert(candidate([-10L,\
    \ 4L, 6L, 1000L, 10L, 20L]) == 8.0);\n    assert(candidate([5L]) == 5L);\n   \
    \ assert(candidate([6L, 5L]) == 5.5);\n    assert(candidate([8L, 1L, 3L, 9L, 9L,\
    \ 2L, 7L]) == 7L);\n}\nvoid main(){}"
  status: SyntaxError
  stderr: 'b''Error: cannot find source code for runtime library file \''object.d\''\n       dmd
    might not be correctly installed. Run \''dmd -man\'' for installation instructions.\nimport
    path[0] = /tmp\nFailed: ["dmd", "-unittest", "-v", "-o-", "/tmp/tmpp7d7pduw.d",
    "-I/tmp"]\n'''
  stdout: b''
  timestamp: 1659792379
- exit_code: 1
  program: "import std.math;\n/*\nReturn median of elements in the list l.\n    >>>\
    \ median([3L, 1L, 2L, 4L, 5L])\n    3L\n    >>> median([-10L, 4L, 6L, 1000L, 10L,\
    \ 20L])\n    15.0\n    \n*/\nfloat median(long[] l) \n{\n    long[] sorted = l.dup;\n\
    \    sorted.sort;\n    if (sorted.length % 2 == 1)\n    {\n        return sorted[sorted.length\
    \ / 2];\n    }\n    else\n    {\n        return (sorted[sorted.length / 2 - 1]\
    \ + sorted[sorted.length / 2]) / 2.0;\n    }\n}\nunittest\n{\n    alias candidate\
    \ = median;\n\n    assert(candidate([3L, 1L, 2L, 4L, 5L]) == 3L);\n    assert(candidate([-10L,\
    \ 4L, 6L, 1000L, 10L, 20L]) == 8.0);\n    assert(candidate([5L]) == 5L);\n   \
    \ assert(candidate([6L, 5L]) == 5.5);\n    assert(candidate([8L, 1L, 3L, 9L, 9L,\
    \ 2L, 7L]) == 7L);\n}\nvoid main(){}"
  status: SyntaxError
  stderr: 'b''Error: cannot find source code for runtime library file \''object.d\''\n       dmd
    might not be correctly installed. Run \''dmd -man\'' for installation instructions.\nimport
    path[0] = /tmp\nFailed: ["dmd", "-unittest", "-v", "-o-", "/tmp/tmpo96ljf_e.d",
    "-I/tmp"]\n'''
  stdout: b''
  timestamp: 1659792379
- exit_code: 1
  program: "import std.math;\n/*\nReturn median of elements in the list l.\n    >>>\
    \ median([3L, 1L, 2L, 4L, 5L])\n    3L\n    >>> median([-10L, 4L, 6L, 1000L, 10L,\
    \ 20L])\n    15.0\n    \n*/\nfloat median(long[] l) \n{\n    long[] sorted = sort(l);\n\
    \    int len = l.length;\n    if (len % 2 == 1) \n    {\n        return sorted[len\
    \ / 2];\n    } \n    else \n    {\n        return (sorted[len / 2 - 1] + sorted[len\
    \ / 2]) / 2.0;\n    }\n}\nunittest\n{\n    alias candidate = median;\n\n    assert(candidate([3L,\
    \ 1L, 2L, 4L, 5L]) == 3L);\n    assert(candidate([-10L, 4L, 6L, 1000L, 10L, 20L])\
    \ == 8.0);\n    assert(candidate([5L]) == 5L);\n    assert(candidate([6L, 5L])\
    \ == 5.5);\n    assert(candidate([8L, 1L, 3L, 9L, 9L, 2L, 7L]) == 7L);\n}\nvoid\
    \ main(){}"
  status: SyntaxError
  stderr: 'b''Error: cannot find source code for runtime library file \''object.d\''\n       dmd
    might not be correctly installed. Run \''dmd -man\'' for installation instructions.\nimport
    path[0] = /tmp\nFailed: ["dmd", "-unittest", "-v", "-o-", "/tmp/tmpv2nlgc33.d",
    "-I/tmp"]\n'''
  stdout: b''
  timestamp: 1659792379
- exit_code: 1
  program: "import std.math;\n/*\nReturn median of elements in the list l.\n    >>>\
    \ median([3L, 1L, 2L, 4L, 5L])\n    3L\n    >>> median([-10L, 4L, 6L, 1000L, 10L,\
    \ 20L])\n    15.0\n    \n*/\nfloat median(long[] l) \n{\n    int len = l.length;\n\
    \    if (len == 0) \n    {\n        return 0.0;\n    }\n    else if (len == 1)\
    \ \n    {\n        return l[0];\n    }\n    else \n    {\n        long[] sorted\
    \ = sort(l);\n        int mid = len / 2;\n        if (len % 2 == 0) \n       \
    \ {\n            return (sorted[mid - 1] + sorted[mid]) / 2.0;\n        }\n  \
    \      else \n        {\n            return sorted[mid];\n        }\n    }\n}\n\
    unittest\n{\n    alias candidate = median;\n\n    assert(candidate([3L, 1L, 2L,\
    \ 4L, 5L]) == 3L);\n    assert(candidate([-10L, 4L, 6L, 1000L, 10L, 20L]) == 8.0);\n\
    \    assert(candidate([5L]) == 5L);\n    assert(candidate([6L, 5L]) == 5.5);\n\
    \    assert(candidate([8L, 1L, 3L, 9L, 9L, 2L, 7L]) == 7L);\n}\nvoid main(){}"
  status: SyntaxError
  stderr: 'b''Error: cannot find source code for runtime library file \''object.d\''\n       dmd
    might not be correctly installed. Run \''dmd -man\'' for installation instructions.\nimport
    path[0] = /tmp\nFailed: ["dmd", "-unittest", "-v", "-o-", "/tmp/tmp66dbt7rp.d",
    "-I/tmp"]\n'''
  stdout: b''
  timestamp: 1659792379
- exit_code: 1
  program: "import std.math;\n/*\nReturn median of elements in the list l.\n    >>>\
    \ median([3L, 1L, 2L, 4L, 5L])\n    3L\n    >>> median([-10L, 4L, 6L, 1000L, 10L,\
    \ 20L])\n    15.0\n    \n*/\nfloat median(long[] l) \n{\n    long[] sorted = l.dup;\n\
    \    sorted.sort;\n    if (sorted.length % 2 == 1)\n        return sorted[sorted.length\
    \ / 2];\n    else\n        return (sorted[sorted.length / 2 - 1] + sorted[sorted.length\
    \ / 2]) / 2.0;\n}\nunittest\n{\n    alias candidate = median;\n\n    assert(candidate([3L,\
    \ 1L, 2L, 4L, 5L]) == 3L);\n    assert(candidate([-10L, 4L, 6L, 1000L, 10L, 20L])\
    \ == 8.0);\n    assert(candidate([5L]) == 5L);\n    assert(candidate([6L, 5L])\
    \ == 5.5);\n    assert(candidate([8L, 1L, 3L, 9L, 9L, 2L, 7L]) == 7L);\n}\nvoid\
    \ main(){}"
  status: SyntaxError
  stderr: 'b''Error: cannot find source code for runtime library file \''object.d\''\n       dmd
    might not be correctly installed. Run \''dmd -man\'' for installation instructions.\nimport
    path[0] = /tmp\nFailed: ["dmd", "-unittest", "-v", "-o-", "/tmp/tmprjc273gp.d",
    "-I/tmp"]\n'''
  stdout: b''
  timestamp: 1659792379
- exit_code: 1
  program: "import std.math;\n/*\nReturn median of elements in the list l.\n    >>>\
    \ median([3L, 1L, 2L, 4L, 5L])\n    3L\n    >>> median([-10L, 4L, 6L, 1000L, 10L,\
    \ 20L])\n    15.0\n    \n*/\nfloat median(long[] l) \n{\n    long[] sorted = l.dup;\n\
    \    sorted.sort;\n    int n = sorted.length;\n    if (n % 2 == 1)\n        return\
    \ sorted[n / 2];\n    else\n        return (sorted[n / 2 - 1] + sorted[n / 2])\
    \ / 2.0;\n}\nunittest\n{\n    alias candidate = median;\n\n    assert(candidate([3L,\
    \ 1L, 2L, 4L, 5L]) == 3L);\n    assert(candidate([-10L, 4L, 6L, 1000L, 10L, 20L])\
    \ == 8.0);\n    assert(candidate([5L]) == 5L);\n    assert(candidate([6L, 5L])\
    \ == 5.5);\n    assert(candidate([8L, 1L, 3L, 9L, 9L, 2L, 7L]) == 7L);\n}\nvoid\
    \ main(){}"
  status: SyntaxError
  stderr: 'b''Error: cannot find source code for runtime library file \''object.d\''\n       dmd
    might not be correctly installed. Run \''dmd -man\'' for installation instructions.\nimport
    path[0] = /tmp\nFailed: ["dmd", "-unittest", "-v", "-o-", "/tmp/tmpigo4kpie.d",
    "-I/tmp"]\n'''
  stdout: b''
  timestamp: 1659792379
- exit_code: 1
  program: "import std.math;\n/*\nReturn median of elements in the list l.\n    >>>\
    \ median([3L, 1L, 2L, 4L, 5L])\n    3L\n    >>> median([-10L, 4L, 6L, 1000L, 10L,\
    \ 20L])\n    15.0\n    \n*/\nfloat median(long[] l) \n{\n    if (l.length == 0)\
    \ \n    {\n        return 0.0;\n    }\n    else \n    {\n        long[] sorted\
    \ = l.dup;\n        sorted.sort;\n        if (sorted.length % 2 == 0) \n     \
    \   {\n            return (sorted[sorted.length / 2 - 1] + sorted[sorted.length\
    \ / 2]) / 2.0;\n        }\n        else \n        {\n            return sorted[sorted.length\
    \ / 2];\n        }\n    }\n}\nunittest\n{\n    alias candidate = median;\n\n \
    \   assert(candidate([3L, 1L, 2L, 4L, 5L]) == 3L);\n    assert(candidate([-10L,\
    \ 4L, 6L, 1000L, 10L, 20L]) == 8.0);\n    assert(candidate([5L]) == 5L);\n   \
    \ assert(candidate([6L, 5L]) == 5.5);\n    assert(candidate([8L, 1L, 3L, 9L, 9L,\
    \ 2L, 7L]) == 7L);\n}\nvoid main(){}"
  status: SyntaxError
  stderr: 'b''Error: cannot find source code for runtime library file \''object.d\''\n       dmd
    might not be correctly installed. Run \''dmd -man\'' for installation instructions.\nimport
    path[0] = /tmp\nFailed: ["dmd", "-unittest", "-v", "-o-", "/tmp/tmp93xpe4_l.d",
    "-I/tmp"]\n'''
  stdout: b''
  timestamp: 1659792379
- exit_code: 1
  program: "import std.math;\n/*\nReturn median of elements in the list l.\n    >>>\
    \ median([3L, 1L, 2L, 4L, 5L])\n    3L\n    >>> median([-10L, 4L, 6L, 1000L, 10L,\
    \ 20L])\n    15.0\n    \n*/\nfloat median(long[] l) \n{\n    long[] sorted = l.dup;\n\
    \    sorted.sort;\n    int n = sorted.length;\n    if (n % 2 == 1)\n        return\
    \ sorted[n / 2];\n    else\n        return (sorted[n / 2 - 1] + sorted[n / 2])\
    \ / 2.0;\n}\nunittest\n{\n    alias candidate = median;\n\n    assert(candidate([3L,\
    \ 1L, 2L, 4L, 5L]) == 3L);\n    assert(candidate([-10L, 4L, 6L, 1000L, 10L, 20L])\
    \ == 8.0);\n    assert(candidate([5L]) == 5L);\n    assert(candidate([6L, 5L])\
    \ == 5.5);\n    assert(candidate([8L, 1L, 3L, 9L, 9L, 2L, 7L]) == 7L);\n}\nvoid\
    \ main(){}"
  status: SyntaxError
  stderr: 'b''Error: cannot find source code for runtime library file \''object.d\''\n       dmd
    might not be correctly installed. Run \''dmd -man\'' for installation instructions.\nimport
    path[0] = /tmp\nFailed: ["dmd", "-unittest", "-v", "-o-", "/tmp/tmpigo4kpie.d",
    "-I/tmp"]\n'''
  stdout: b''
  timestamp: 1659792379
- exit_code: 1
  program: "import std.math;\n/*\nReturn median of elements in the list l.\n    >>>\
    \ median([3L, 1L, 2L, 4L, 5L])\n    3L\n    >>> median([-10L, 4L, 6L, 1000L, 10L,\
    \ 20L])\n    15.0\n    \n*/\nfloat median(long[] l) \n{\n    long[] sorted = l.dup;\n\
    \    sorted.sort;\n    int n = sorted.length;\n    if (n % 2 == 1)\n        return\
    \ sorted[n / 2];\n    else\n        return (sorted[n / 2 - 1] + sorted[n / 2])\
    \ / 2.0;\n}\nunittest\n{\n    alias candidate = median;\n\n    assert(candidate([3L,\
    \ 1L, 2L, 4L, 5L]) == 3L);\n    assert(candidate([-10L, 4L, 6L, 1000L, 10L, 20L])\
    \ == 8.0);\n    assert(candidate([5L]) == 5L);\n    assert(candidate([6L, 5L])\
    \ == 5.5);\n    assert(candidate([8L, 1L, 3L, 9L, 9L, 2L, 7L]) == 7L);\n}\nvoid\
    \ main(){}"
  status: SyntaxError
  stderr: 'b''Error: cannot find source code for runtime library file \''object.d\''\n       dmd
    might not be correctly installed. Run \''dmd -man\'' for installation instructions.\nimport
    path[0] = /tmp\nFailed: ["dmd", "-unittest", "-v", "-o-", "/tmp/tmpigo4kpie.d",
    "-I/tmp"]\n'''
  stdout: b''
  timestamp: 1659792379
- exit_code: 1
  program: "import std.math;\n/*\nReturn median of elements in the list l.\n    >>>\
    \ median([3L, 1L, 2L, 4L, 5L])\n    3L\n    >>> median([-10L, 4L, 6L, 1000L, 10L,\
    \ 20L])\n    15.0\n    \n*/\nfloat median(long[] l) \n{\n    long[] sorted = l.sort();\n\
    \    int n = sorted.length;\n    if (n % 2 == 1)\n        return sorted[n / 2];\n\
    \    else\n        return (sorted[n / 2 - 1] + sorted[n / 2]) / 2.0;\n}\nunittest\n\
    {\n    alias candidate = median;\n\n    assert(candidate([3L, 1L, 2L, 4L, 5L])\
    \ == 3L);\n    assert(candidate([-10L, 4L, 6L, 1000L, 10L, 20L]) == 8.0);\n  \
    \  assert(candidate([5L]) == 5L);\n    assert(candidate([6L, 5L]) == 5.5);\n \
    \   assert(candidate([8L, 1L, 3L, 9L, 9L, 2L, 7L]) == 7L);\n}\nvoid main(){}"
  status: SyntaxError
  stderr: 'b''Error: cannot find source code for runtime library file \''object.d\''\n       dmd
    might not be correctly installed. Run \''dmd -man\'' for installation instructions.\nimport
    path[0] = /tmp\nFailed: ["dmd", "-unittest", "-v", "-o-", "/tmp/tmplpwpf2vs.d",
    "-I/tmp"]\n'''
  stdout: b''
  timestamp: 1659792379
- exit_code: 1
  program: "import std.math;\n/*\nReturn median of elements in the list l.\n    >>>\
    \ median([3L, 1L, 2L, 4L, 5L])\n    3L\n    >>> median([-10L, 4L, 6L, 1000L, 10L,\
    \ 20L])\n    15.0\n    \n*/\nfloat median(long[] l) \n{\n    long[] sorted = l.dup;\n\
    \    sorted.sort;\n    long len = sorted.length;\n    if (len % 2 == 1)\n    {\n\
    \        return sorted[len / 2];\n    }\n    else\n    {\n        return (sorted[len\
    \ / 2 - 1] + sorted[len / 2]) / 2.0;\n    }\n}\nunittest\n{\n    alias candidate\
    \ = median;\n\n    assert(candidate([3L, 1L, 2L, 4L, 5L]) == 3L);\n    assert(candidate([-10L,\
    \ 4L, 6L, 1000L, 10L, 20L]) == 8.0);\n    assert(candidate([5L]) == 5L);\n   \
    \ assert(candidate([6L, 5L]) == 5.5);\n    assert(candidate([8L, 1L, 3L, 9L, 9L,\
    \ 2L, 7L]) == 7L);\n}\nvoid main(){}"
  status: SyntaxError
  stderr: 'b''Error: cannot find source code for runtime library file \''object.d\''\n       dmd
    might not be correctly installed. Run \''dmd -man\'' for installation instructions.\nimport
    path[0] = /tmp\nFailed: ["dmd", "-unittest", "-v", "-o-", "/tmp/tmpbq7eholx.d",
    "-I/tmp"]\n'''
  stdout: b''
  timestamp: 1659792379
- exit_code: 1
  program: "import std.math;\n/*\nReturn median of elements in the list l.\n    >>>\
    \ median([3L, 1L, 2L, 4L, 5L])\n    3L\n    >>> median([-10L, 4L, 6L, 1000L, 10L,\
    \ 20L])\n    15.0\n    \n*/\nfloat median(long[] l) \n{\n    int n = l.length;\n\
    \    if (n == 0) \n    {\n        return 0.0;\n    }\n    else if (n == 1) \n\
    \    {\n        return l[0];\n    }\n    else if (n == 2) \n    {\n        return\
    \ (l[0] + l[1]) / 2.0;\n    }\n    else \n    {\n        long[] l2 = l[0..n];\n\
    \        sort(l2);\n        if (n % 2 == 1) \n        {\n            return l2[n\
    \ / 2];\n        }\n        else \n        {\n            return (l2[n / 2 - 1]\
    \ + l2[n / 2]) / 2.0;\n        }\n    }\n}\nunittest\n{\n    alias candidate =\
    \ median;\n\n    assert(candidate([3L, 1L, 2L, 4L, 5L]) == 3L);\n    assert(candidate([-10L,\
    \ 4L, 6L, 1000L, 10L, 20L]) == 8.0);\n    assert(candidate([5L]) == 5L);\n   \
    \ assert(candidate([6L, 5L]) == 5.5);\n    assert(candidate([8L, 1L, 3L, 9L, 9L,\
    \ 2L, 7L]) == 7L);\n}\nvoid main(){}"
  status: SyntaxError
  stderr: 'b''Error: cannot find source code for runtime library file \''object.d\''\n       dmd
    might not be correctly installed. Run \''dmd -man\'' for installation instructions.\nimport
    path[0] = /tmp\nFailed: ["dmd", "-unittest", "-v", "-o-", "/tmp/tmp2m0rwtu7.d",
    "-I/tmp"]\n'''
  stdout: b''
  timestamp: 1659792379
- exit_code: 1
  program: "import std.math;\n/*\nReturn median of elements in the list l.\n    >>>\
    \ median([3L, 1L, 2L, 4L, 5L])\n    3L\n    >>> median([-10L, 4L, 6L, 1000L, 10L,\
    \ 20L])\n    15.0\n    \n*/\nfloat median(long[] l) \n{\n    long[] sorted = l.dup.sort;\n\
    \    int mid = sorted.length / 2;\n    if (sorted.length % 2 == 0) {\n       \
    \ return (sorted[mid - 1] + sorted[mid]) / 2.0;\n    }\n    else {\n        return\
    \ sorted[mid];\n    }\n}\nunittest\n{\n    alias candidate = median;\n\n    assert(candidate([3L,\
    \ 1L, 2L, 4L, 5L]) == 3L);\n    assert(candidate([-10L, 4L, 6L, 1000L, 10L, 20L])\
    \ == 8.0);\n    assert(candidate([5L]) == 5L);\n    assert(candidate([6L, 5L])\
    \ == 5.5);\n    assert(candidate([8L, 1L, 3L, 9L, 9L, 2L, 7L]) == 7L);\n}\nvoid\
    \ main(){}"
  status: SyntaxError
  stderr: 'b''Error: cannot find source code for runtime library file \''object.d\''\n       dmd
    might not be correctly installed. Run \''dmd -man\'' for installation instructions.\nimport
    path[0] = /tmp\nFailed: ["dmd", "-unittest", "-v", "-o-", "/tmp/tmplfw85o5y.d",
    "-I/tmp"]\n'''
  stdout: b''
  timestamp: 1659792379
- exit_code: 1
  program: "import std.math;\n/*\nReturn median of elements in the list l.\n    >>>\
    \ median([3L, 1L, 2L, 4L, 5L])\n    3L\n    >>> median([-10L, 4L, 6L, 1000L, 10L,\
    \ 20L])\n    15.0\n    \n*/\nfloat median(long[] l) \n{\n    long[] sorted = l.dup;\n\
    \    sorted.sort;\n    int mid = sorted.length / 2;\n    if (sorted.length % 2\
    \ == 0) \n    {\n        return (sorted[mid - 1] + sorted[mid]) / 2.0;\n    }\n\
    \    else \n    {\n        return sorted[mid];\n    }\n}\nunittest\n{\n    alias\
    \ candidate = median;\n\n    assert(candidate([3L, 1L, 2L, 4L, 5L]) == 3L);\n\
    \    assert(candidate([-10L, 4L, 6L, 1000L, 10L, 20L]) == 8.0);\n    assert(candidate([5L])\
    \ == 5L);\n    assert(candidate([6L, 5L]) == 5.5);\n    assert(candidate([8L,\
    \ 1L, 3L, 9L, 9L, 2L, 7L]) == 7L);\n}\nvoid main(){}"
  status: SyntaxError
  stderr: 'b''Error: cannot find source code for runtime library file \''object.d\''\n       dmd
    might not be correctly installed. Run \''dmd -man\'' for installation instructions.\nimport
    path[0] = /tmp\nFailed: ["dmd", "-unittest", "-v", "-o-", "/tmp/tmpty40p6ul.d",
    "-I/tmp"]\n'''
  stdout: b''
  timestamp: 1659792379
- exit_code: 1
  program: "import std.math;\n/*\nReturn median of elements in the list l.\n    >>>\
    \ median([3L, 1L, 2L, 4L, 5L])\n    3L\n    >>> median([-10L, 4L, 6L, 1000L, 10L,\
    \ 20L])\n    15.0\n    \n*/\nfloat median(long[] l) \n{\n    long[] sorted = l.dup.sort;\n\
    \    int n = l.length;\n    if (n % 2 == 1) \n    {\n        return sorted[n /\
    \ 2];\n    } \n    else \n    {\n        return (sorted[n / 2 - 1] + sorted[n\
    \ / 2]) / 2.0;\n    }\n}\nunittest\n{\n    alias candidate = median;\n\n    assert(candidate([3L,\
    \ 1L, 2L, 4L, 5L]) == 3L);\n    assert(candidate([-10L, 4L, 6L, 1000L, 10L, 20L])\
    \ == 8.0);\n    assert(candidate([5L]) == 5L);\n    assert(candidate([6L, 5L])\
    \ == 5.5);\n    assert(candidate([8L, 1L, 3L, 9L, 9L, 2L, 7L]) == 7L);\n}\nvoid\
    \ main(){}"
  status: SyntaxError
  stderr: 'b''Error: cannot find source code for runtime library file \''object.d\''\n       dmd
    might not be correctly installed. Run \''dmd -man\'' for installation instructions.\nimport
    path[0] = /tmp\nFailed: ["dmd", "-unittest", "-v", "-o-", "/tmp/tmpqt3l97vt.d",
    "-I/tmp"]\n'''
  stdout: b''
  timestamp: 1659792379
- exit_code: 1
  program: "import std.math;\n/*\nReturn median of elements in the list l.\n    >>>\
    \ median([3L, 1L, 2L, 4L, 5L])\n    3L\n    >>> median([-10L, 4L, 6L, 1000L, 10L,\
    \ 20L])\n    15.0\n    \n*/\nfloat median(long[] l) \n{\n    long[] sorted = l.dup;\n\
    \    sorted.sort;\n    int len = sorted.length;\n    if (len % 2 == 0)\n    {\n\
    \        return (sorted[len / 2 - 1] + sorted[len / 2]) / 2.0;\n    }\n    else\n\
    \    {\n        return sorted[len / 2];\n    }\n}\nunittest\n{\n    alias candidate\
    \ = median;\n\n    assert(candidate([3L, 1L, 2L, 4L, 5L]) == 3L);\n    assert(candidate([-10L,\
    \ 4L, 6L, 1000L, 10L, 20L]) == 8.0);\n    assert(candidate([5L]) == 5L);\n   \
    \ assert(candidate([6L, 5L]) == 5.5);\n    assert(candidate([8L, 1L, 3L, 9L, 9L,\
    \ 2L, 7L]) == 7L);\n}\nvoid main(){}"
  status: SyntaxError
  stderr: 'b''Error: cannot find source code for runtime library file \''object.d\''\n       dmd
    might not be correctly installed. Run \''dmd -man\'' for installation instructions.\nimport
    path[0] = /tmp\nFailed: ["dmd", "-unittest", "-v", "-o-", "/tmp/tmp1laajukv.d",
    "-I/tmp"]\n'''
  stdout: b''
  timestamp: 1659792379
- exit_code: 1
  program: "import std.math;\n/*\nReturn median of elements in the list l.\n    >>>\
    \ median([3L, 1L, 2L, 4L, 5L])\n    3L\n    >>> median([-10L, 4L, 6L, 1000L, 10L,\
    \ 20L])\n    15.0\n    \n*/\nfloat median(long[] l) \n{\n    long[] sorted = l.dup;\n\
    \    sorted.sort;\n    if (sorted.length % 2 == 1) \n    {\n        return sorted[sorted.length\
    \ / 2];\n    } \n    else \n    {\n        return (sorted[sorted.length / 2 -\
    \ 1] + sorted[sorted.length / 2]) / 2.0;\n    }\n}\nunittest\n{\n    alias candidate\
    \ = median;\n\n    assert(candidate([3L, 1L, 2L, 4L, 5L]) == 3L);\n    assert(candidate([-10L,\
    \ 4L, 6L, 1000L, 10L, 20L]) == 8.0);\n    assert(candidate([5L]) == 5L);\n   \
    \ assert(candidate([6L, 5L]) == 5.5);\n    assert(candidate([8L, 1L, 3L, 9L, 9L,\
    \ 2L, 7L]) == 7L);\n}\nvoid main(){}"
  status: SyntaxError
  stderr: 'b''Error: cannot find source code for runtime library file \''object.d\''\n       dmd
    might not be correctly installed. Run \''dmd -man\'' for installation instructions.\nimport
    path[0] = /tmp\nFailed: ["dmd", "-unittest", "-v", "-o-", "/tmp/tmpm0etr6b5.d",
    "-I/tmp"]\n'''
  stdout: b''
  timestamp: 1659792379
- exit_code: 1
  program: "import std.math;\n/*\nReturn median of elements in the list l.\n    >>>\
    \ median([3L, 1L, 2L, 4L, 5L])\n    3L\n    >>> median([-10L, 4L, 6L, 1000L, 10L,\
    \ 20L])\n    15.0\n    \n*/\nfloat median(long[] l) \n{\n    long[] sorted = l.dup;\n\
    \    sorted.sort;\n    int len = sorted.length;\n    if (len % 2 == 0) \n    {\n\
    \        return (sorted[len / 2 - 1] + sorted[len / 2]) / 2.0;\n    } \n    else\
    \ \n    {\n        return sorted[len / 2];\n    }\n}\nunittest\n{\n    alias candidate\
    \ = median;\n\n    assert(candidate([3L, 1L, 2L, 4L, 5L]) == 3L);\n    assert(candidate([-10L,\
    \ 4L, 6L, 1000L, 10L, 20L]) == 8.0);\n    assert(candidate([5L]) == 5L);\n   \
    \ assert(candidate([6L, 5L]) == 5.5);\n    assert(candidate([8L, 1L, 3L, 9L, 9L,\
    \ 2L, 7L]) == 7L);\n}\nvoid main(){}"
  status: SyntaxError
  stderr: 'b''Error: cannot find source code for runtime library file \''object.d\''\n       dmd
    might not be correctly installed. Run \''dmd -man\'' for installation instructions.\nimport
    path[0] = /tmp\nFailed: ["dmd", "-unittest", "-v", "-o-", "/tmp/tmpjdent3bl.d",
    "-I/tmp"]\n'''
  stdout: b''
  timestamp: 1659792379
- exit_code: 1
  program: "import std.math;\n/*\nReturn median of elements in the list l.\n    >>>\
    \ median([3L, 1L, 2L, 4L, 5L])\n    3L\n    >>> median([-10L, 4L, 6L, 1000L, 10L,\
    \ 20L])\n    15.0\n    \n*/\nfloat median(long[] l) \n{\n    long[] sorted = l.dup;\n\
    \    sorted.sort;\n    long n = sorted.length;\n    if (n % 2 == 1) \n    {\n\
    \        return sorted[n / 2];\n    } \n    else \n    {\n        return (sorted[n\
    \ / 2 - 1] + sorted[n / 2]) / 2.0;\n    }\n}\nunittest\n{\n    alias candidate\
    \ = median;\n\n    assert(candidate([3L, 1L, 2L, 4L, 5L]) == 3L);\n    assert(candidate([-10L,\
    \ 4L, 6L, 1000L, 10L, 20L]) == 8.0);\n    assert(candidate([5L]) == 5L);\n   \
    \ assert(candidate([6L, 5L]) == 5.5);\n    assert(candidate([8L, 1L, 3L, 9L, 9L,\
    \ 2L, 7L]) == 7L);\n}\nvoid main(){}"
  status: SyntaxError
  stderr: 'b''Error: cannot find source code for runtime library file \''object.d\''\n       dmd
    might not be correctly installed. Run \''dmd -man\'' for installation instructions.\nimport
    path[0] = /tmp\nFailed: ["dmd", "-unittest", "-v", "-o-", "/tmp/tmpg43whpxe.d",
    "-I/tmp"]\n'''
  stdout: b''
  timestamp: 1659792379
- exit_code: 1
  program: "import std.math;\n/*\nReturn median of elements in the list l.\n    >>>\
    \ median([3L, 1L, 2L, 4L, 5L])\n    3L\n    >>> median([-10L, 4L, 6L, 1000L, 10L,\
    \ 20L])\n    15.0\n    \n*/\nfloat median(long[] l) \n{\n    long[] sorted = l.sort();\n\
    \    int n = sorted.length;\n    if (n % 2 == 1) \n    {\n        return sorted[n\
    \ / 2];\n    } \n    else \n    {\n        return (sorted[n / 2 - 1] + sorted[n\
    \ / 2]) / 2.0;\n    }\n}\nunittest\n{\n    alias candidate = median;\n\n    assert(candidate([3L,\
    \ 1L, 2L, 4L, 5L]) == 3L);\n    assert(candidate([-10L, 4L, 6L, 1000L, 10L, 20L])\
    \ == 8.0);\n    assert(candidate([5L]) == 5L);\n    assert(candidate([6L, 5L])\
    \ == 5.5);\n    assert(candidate([8L, 1L, 3L, 9L, 9L, 2L, 7L]) == 7L);\n}\nvoid\
    \ main(){}"
  status: SyntaxError
  stderr: 'b''Error: cannot find source code for runtime library file \''object.d\''\n       dmd
    might not be correctly installed. Run \''dmd -man\'' for installation instructions.\nimport
    path[0] = /tmp\nFailed: ["dmd", "-unittest", "-v", "-o-", "/tmp/tmpfkmgn5n1.d",
    "-I/tmp"]\n'''
  stdout: b''
  timestamp: 1659792379
- exit_code: 1
  program: "import std.math;\n/*\nReturn median of elements in the list l.\n    >>>\
    \ median([3L, 1L, 2L, 4L, 5L])\n    3L\n    >>> median([-10L, 4L, 6L, 1000L, 10L,\
    \ 20L])\n    15.0\n    \n*/\nfloat median(long[] l) \n{\n    long[] sorted = l.dup;\n\
    \    sorted.sort;\n    int n = sorted.length;\n    if (n % 2 == 1) {\n       \
    \ return sorted[n / 2];\n    } else {\n        return (sorted[n / 2 - 1] + sorted[n\
    \ / 2]) / 2.0;\n    }\n}\nunittest\n{\n    alias candidate = median;\n\n    assert(candidate([3L,\
    \ 1L, 2L, 4L, 5L]) == 3L);\n    assert(candidate([-10L, 4L, 6L, 1000L, 10L, 20L])\
    \ == 8.0);\n    assert(candidate([5L]) == 5L);\n    assert(candidate([6L, 5L])\
    \ == 5.5);\n    assert(candidate([8L, 1L, 3L, 9L, 9L, 2L, 7L]) == 7L);\n}\nvoid\
    \ main(){}"
  status: SyntaxError
  stderr: 'b''Error: cannot find source code for runtime library file \''object.d\''\n       dmd
    might not be correctly installed. Run \''dmd -man\'' for installation instructions.\nimport
    path[0] = /tmp\nFailed: ["dmd", "-unittest", "-v", "-o-", "/tmp/tmpkf7i4qle.d",
    "-I/tmp"]\n'''
  stdout: b''
  timestamp: 1659792379
- exit_code: 1
  program: "import std.math;\n/*\nReturn median of elements in the list l.\n    >>>\
    \ median([3L, 1L, 2L, 4L, 5L])\n    3L\n    >>> median([-10L, 4L, 6L, 1000L, 10L,\
    \ 20L])\n    15.0\n    \n*/\nfloat median(long[] l) \n{\n    long[] l2 = l.dup;\n\
    \    l2.sort;\n    int n = l2.length;\n    if (n % 2 == 1) \n    {\n        return\
    \ l2[n / 2];\n    } \n    else \n    {\n        return (l2[n / 2 - 1] + l2[n /\
    \ 2]) / 2.0;\n    }\n}\nunittest\n{\n    alias candidate = median;\n\n    assert(candidate([3L,\
    \ 1L, 2L, 4L, 5L]) == 3L);\n    assert(candidate([-10L, 4L, 6L, 1000L, 10L, 20L])\
    \ == 8.0);\n    assert(candidate([5L]) == 5L);\n    assert(candidate([6L, 5L])\
    \ == 5.5);\n    assert(candidate([8L, 1L, 3L, 9L, 9L, 2L, 7L]) == 7L);\n}\nvoid\
    \ main(){}"
  status: SyntaxError
  stderr: 'b''Error: cannot find source code for runtime library file \''object.d\''\n       dmd
    might not be correctly installed. Run \''dmd -man\'' for installation instructions.\nimport
    path[0] = /tmp\nFailed: ["dmd", "-unittest", "-v", "-o-", "/tmp/tmp4b181sot.d",
    "-I/tmp"]\n'''
  stdout: b''
  timestamp: 1659792379
- exit_code: 1
  program: "import std.math;\n/*\nReturn median of elements in the list l.\n    >>>\
    \ median([3L, 1L, 2L, 4L, 5L])\n    3L\n    >>> median([-10L, 4L, 6L, 1000L, 10L,\
    \ 20L])\n    15.0\n    \n*/\nfloat median(long[] l) \n{\n    long[] sorted = l.dup;\n\
    \    sorted.sort;\n    int n = sorted.length;\n    if (n % 2 == 1)\n        return\
    \ sorted[n / 2];\n    else\n        return (sorted[n / 2 - 1] + sorted[n / 2])\
    \ / 2.0;\n}\nunittest\n{\n    alias candidate = median;\n\n    assert(candidate([3L,\
    \ 1L, 2L, 4L, 5L]) == 3L);\n    assert(candidate([-10L, 4L, 6L, 1000L, 10L, 20L])\
    \ == 8.0);\n    assert(candidate([5L]) == 5L);\n    assert(candidate([6L, 5L])\
    \ == 5.5);\n    assert(candidate([8L, 1L, 3L, 9L, 9L, 2L, 7L]) == 7L);\n}\nvoid\
    \ main(){}"
  status: SyntaxError
  stderr: 'b''Error: cannot find source code for runtime library file \''object.d\''\n       dmd
    might not be correctly installed. Run \''dmd -man\'' for installation instructions.\nimport
    path[0] = /tmp\nFailed: ["dmd", "-unittest", "-v", "-o-", "/tmp/tmpigo4kpie.d",
    "-I/tmp"]\n'''
  stdout: b''
  timestamp: 1659792379
- exit_code: 1
  program: "import std.math;\n/*\nReturn median of elements in the list l.\n    >>>\
    \ median([3L, 1L, 2L, 4L, 5L])\n    3L\n    >>> median([-10L, 4L, 6L, 1000L, 10L,\
    \ 20L])\n    15.0\n    \n*/\nfloat median(long[] l) \n{\n    long[] sorted = l.dup;\n\
    \    sorted.sort;\n    int len = sorted.length;\n    if (len % 2 == 1)\n     \
    \   return sorted[len / 2];\n    else\n        return (sorted[len / 2 - 1] + sorted[len\
    \ / 2]) / 2.0;\n}\nunittest\n{\n    alias candidate = median;\n\n    assert(candidate([3L,\
    \ 1L, 2L, 4L, 5L]) == 3L);\n    assert(candidate([-10L, 4L, 6L, 1000L, 10L, 20L])\
    \ == 8.0);\n    assert(candidate([5L]) == 5L);\n    assert(candidate([6L, 5L])\
    \ == 5.5);\n    assert(candidate([8L, 1L, 3L, 9L, 9L, 2L, 7L]) == 7L);\n}\nvoid\
    \ main(){}"
  status: SyntaxError
  stderr: 'b''Error: cannot find source code for runtime library file \''object.d\''\n       dmd
    might not be correctly installed. Run \''dmd -man\'' for installation instructions.\nimport
    path[0] = /tmp\nFailed: ["dmd", "-unittest", "-v", "-o-", "/tmp/tmpqu6o2g51.d",
    "-I/tmp"]\n'''
  stdout: b''
  timestamp: 1659792380
- exit_code: 1
  program: "import std.math;\n/*\nReturn median of elements in the list l.\n    >>>\
    \ median([3L, 1L, 2L, 4L, 5L])\n    3L\n    >>> median([-10L, 4L, 6L, 1000L, 10L,\
    \ 20L])\n    15.0\n    \n*/\nfloat median(long[] l) \n{\n    long[] sorted = l.dup;\n\
    \    sorted.sort;\n    if (sorted.length % 2 == 1)\n        return sorted[sorted.length\
    \ / 2];\n    else\n        return (sorted[sorted.length / 2 - 1] + sorted[sorted.length\
    \ / 2]) / 2.0;\n}\nunittest\n{\n    alias candidate = median;\n\n    assert(candidate([3L,\
    \ 1L, 2L, 4L, 5L]) == 3L);\n    assert(candidate([-10L, 4L, 6L, 1000L, 10L, 20L])\
    \ == 8.0);\n    assert(candidate([5L]) == 5L);\n    assert(candidate([6L, 5L])\
    \ == 5.5);\n    assert(candidate([8L, 1L, 3L, 9L, 9L, 2L, 7L]) == 7L);\n}\nvoid\
    \ main(){}"
  status: SyntaxError
  stderr: 'b''Error: cannot find source code for runtime library file \''object.d\''\n       dmd
    might not be correctly installed. Run \''dmd -man\'' for installation instructions.\nimport
    path[0] = /tmp\nFailed: ["dmd", "-unittest", "-v", "-o-", "/tmp/tmprjc273gp.d",
    "-I/tmp"]\n'''
  stdout: b''
  timestamp: 1659792379
- exit_code: 1
  program: "import std.math;\n/*\nReturn median of elements in the list l.\n    >>>\
    \ median([3L, 1L, 2L, 4L, 5L])\n    3L\n    >>> median([-10L, 4L, 6L, 1000L, 10L,\
    \ 20L])\n    15.0\n    \n*/\nfloat median(long[] l) \n{\n    long[] sorted = l.dup;\n\
    \    sorted.sort;\n    int n = sorted.length;\n    if (n % 2 == 1) \n    {\n \
    \       return sorted[n / 2];\n    } \n    else \n    {\n        return (sorted[n\
    \ / 2 - 1] + sorted[n / 2]) / 2.0;\n    }\n}\nunittest\n{\n    alias candidate\
    \ = median;\n\n    assert(candidate([3L, 1L, 2L, 4L, 5L]) == 3L);\n    assert(candidate([-10L,\
    \ 4L, 6L, 1000L, 10L, 20L]) == 8.0);\n    assert(candidate([5L]) == 5L);\n   \
    \ assert(candidate([6L, 5L]) == 5.5);\n    assert(candidate([8L, 1L, 3L, 9L, 9L,\
    \ 2L, 7L]) == 7L);\n}\nvoid main(){}"
  status: SyntaxError
  stderr: 'b''Error: cannot find source code for runtime library file \''object.d\''\n       dmd
    might not be correctly installed. Run \''dmd -man\'' for installation instructions.\nimport
    path[0] = /tmp\nFailed: ["dmd", "-unittest", "-v", "-o-", "/tmp/tmphz52njnm.d",
    "-I/tmp"]\n'''
  stdout: b''
  timestamp: 1659792379
- exit_code: 1
  program: "import std.math;\n/*\nReturn median of elements in the list l.\n    >>>\
    \ median([3L, 1L, 2L, 4L, 5L])\n    3L\n    >>> median([-10L, 4L, 6L, 1000L, 10L,\
    \ 20L])\n    15.0\n    \n*/\nfloat median(long[] l) \n{\n    long[] sorted = l.dup;\n\
    \    sorted.sort;\n    if (sorted.length % 2 == 1)\n    {\n        return sorted[sorted.length\
    \ / 2];\n    }\n    else\n    {\n        return (sorted[sorted.length / 2 - 1]\
    \ + sorted[sorted.length / 2]) / 2.0;\n    }\n}\nunittest\n{\n    alias candidate\
    \ = median;\n\n    assert(candidate([3L, 1L, 2L, 4L, 5L]) == 3L);\n    assert(candidate([-10L,\
    \ 4L, 6L, 1000L, 10L, 20L]) == 8.0);\n    assert(candidate([5L]) == 5L);\n   \
    \ assert(candidate([6L, 5L]) == 5.5);\n    assert(candidate([8L, 1L, 3L, 9L, 9L,\
    \ 2L, 7L]) == 7L);\n}\nvoid main(){}"
  status: SyntaxError
  stderr: 'b''Error: cannot find source code for runtime library file \''object.d\''\n       dmd
    might not be correctly installed. Run \''dmd -man\'' for installation instructions.\nimport
    path[0] = /tmp\nFailed: ["dmd", "-unittest", "-v", "-o-", "/tmp/tmpo96ljf_e.d",
    "-I/tmp"]\n'''
  stdout: b''
  timestamp: 1659792379
- exit_code: 1
  program: "import std.math;\n/*\nReturn median of elements in the list l.\n    >>>\
    \ median([3L, 1L, 2L, 4L, 5L])\n    3L\n    >>> median([-10L, 4L, 6L, 1000L, 10L,\
    \ 20L])\n    15.0\n    \n*/\nfloat median(long[] l) \n{\n    long[] sorted = l.dup;\n\
    \    sorted.sort;\n    if (sorted.length % 2 == 1) {\n        return sorted[sorted.length\
    \ / 2];\n    } else {\n        return (sorted[sorted.length / 2 - 1] + sorted[sorted.length\
    \ / 2]) / 2.0;\n    }\n}\nunittest\n{\n    alias candidate = median;\n\n    assert(candidate([3L,\
    \ 1L, 2L, 4L, 5L]) == 3L);\n    assert(candidate([-10L, 4L, 6L, 1000L, 10L, 20L])\
    \ == 8.0);\n    assert(candidate([5L]) == 5L);\n    assert(candidate([6L, 5L])\
    \ == 5.5);\n    assert(candidate([8L, 1L, 3L, 9L, 9L, 2L, 7L]) == 7L);\n}\nvoid\
    \ main(){}"
  status: SyntaxError
  stderr: 'b''Error: cannot find source code for runtime library file \''object.d\''\n       dmd
    might not be correctly installed. Run \''dmd -man\'' for installation instructions.\nimport
    path[0] = /tmp\nFailed: ["dmd", "-unittest", "-v", "-o-", "/tmp/tmpnsw65xel.d",
    "-I/tmp"]\n'''
  stdout: b''
  timestamp: 1659792379
- exit_code: 1
  program: "import std.math;\n/*\nReturn median of elements in the list l.\n    >>>\
    \ median([3L, 1L, 2L, 4L, 5L])\n    3L\n    >>> median([-10L, 4L, 6L, 1000L, 10L,\
    \ 20L])\n    15.0\n    \n*/\nfloat median(long[] l) \n{\n    long[] sorted = l.dup;\n\
    \    sorted.sort;\n    if (sorted.length % 2 == 1)\n        return sorted[sorted.length\
    \ / 2];\n    else\n        return (sorted[sorted.length / 2 - 1] + sorted[sorted.length\
    \ / 2]) / 2.0;\n}\nunittest\n{\n    alias candidate = median;\n\n    assert(candidate([3L,\
    \ 1L, 2L, 4L, 5L]) == 3L);\n    assert(candidate([-10L, 4L, 6L, 1000L, 10L, 20L])\
    \ == 8.0);\n    assert(candidate([5L]) == 5L);\n    assert(candidate([6L, 5L])\
    \ == 5.5);\n    assert(candidate([8L, 1L, 3L, 9L, 9L, 2L, 7L]) == 7L);\n}\nvoid\
    \ main(){}"
  status: SyntaxError
  stderr: 'b''Error: cannot find source code for runtime library file \''object.d\''\n       dmd
    might not be correctly installed. Run \''dmd -man\'' for installation instructions.\nimport
    path[0] = /tmp\nFailed: ["dmd", "-unittest", "-v", "-o-", "/tmp/tmprjc273gp.d",
    "-I/tmp"]\n'''
  stdout: b''
  timestamp: 1659792379
- exit_code: 1
  program: "import std.math;\n/*\nReturn median of elements in the list l.\n    >>>\
    \ median([3L, 1L, 2L, 4L, 5L])\n    3L\n    >>> median([-10L, 4L, 6L, 1000L, 10L,\
    \ 20L])\n    15.0\n    \n*/\nfloat median(long[] l) \n{\n    long[] sorted = l.sort();\n\
    \    int mid = sorted.length / 2;\n    if (sorted.length % 2 == 0) {\n       \
    \ return (sorted[mid] + sorted[mid - 1]) / 2.0;\n    } else {\n        return\
    \ sorted[mid];\n    }\n}\nunittest\n{\n    alias candidate = median;\n\n    assert(candidate([3L,\
    \ 1L, 2L, 4L, 5L]) == 3L);\n    assert(candidate([-10L, 4L, 6L, 1000L, 10L, 20L])\
    \ == 8.0);\n    assert(candidate([5L]) == 5L);\n    assert(candidate([6L, 5L])\
    \ == 5.5);\n    assert(candidate([8L, 1L, 3L, 9L, 9L, 2L, 7L]) == 7L);\n}\nvoid\
    \ main(){}"
  status: SyntaxError
  stderr: 'b''Error: cannot find source code for runtime library file \''object.d\''\n       dmd
    might not be correctly installed. Run \''dmd -man\'' for installation instructions.\nimport
    path[0] = /tmp\nFailed: ["dmd", "-unittest", "-v", "-o-", "/tmp/tmpgxss73ie.d",
    "-I/tmp"]\n'''
  stdout: b''
  timestamp: 1659792379
- exit_code: 1
  program: "import std.math;\n/*\nReturn median of elements in the list l.\n    >>>\
    \ median([3L, 1L, 2L, 4L, 5L])\n    3L\n    >>> median([-10L, 4L, 6L, 1000L, 10L,\
    \ 20L])\n    15.0\n    \n*/\nfloat median(long[] l) \n{\n    long[] sorted = l.dup;\n\
    \    sorted.sort;\n    int n = sorted.length;\n    if (n % 2 == 1) \n    {\n \
    \       return sorted[n / 2];\n    } \n    else \n    {\n        return (sorted[n\
    \ / 2 - 1] + sorted[n / 2]) / 2.0;\n    }\n}\nunittest\n{\n    alias candidate\
    \ = median;\n\n    assert(candidate([3L, 1L, 2L, 4L, 5L]) == 3L);\n    assert(candidate([-10L,\
    \ 4L, 6L, 1000L, 10L, 20L]) == 8.0);\n    assert(candidate([5L]) == 5L);\n   \
    \ assert(candidate([6L, 5L]) == 5.5);\n    assert(candidate([8L, 1L, 3L, 9L, 9L,\
    \ 2L, 7L]) == 7L);\n}\nvoid main(){}"
  status: SyntaxError
  stderr: 'b''Error: cannot find source code for runtime library file \''object.d\''\n       dmd
    might not be correctly installed. Run \''dmd -man\'' for installation instructions.\nimport
    path[0] = /tmp\nFailed: ["dmd", "-unittest", "-v", "-o-", "/tmp/tmphz52njnm.d",
    "-I/tmp"]\n'''
  stdout: b''
  timestamp: 1659792379
- exit_code: 1
  program: "import std.math;\n/*\nReturn median of elements in the list l.\n    >>>\
    \ median([3L, 1L, 2L, 4L, 5L])\n    3L\n    >>> median([-10L, 4L, 6L, 1000L, 10L,\
    \ 20L])\n    15.0\n    \n*/\nfloat median(long[] l) \n{\n    long[] l2 = l.dup;\n\
    \    l2.sort;\n    int n = l2.length;\n    if (n % 2 == 1)\n        return l2[n\
    \ / 2];\n    else\n        return (l2[n / 2 - 1] + l2[n / 2]) / 2.0;\n}\nunittest\n\
    {\n    alias candidate = median;\n\n    assert(candidate([3L, 1L, 2L, 4L, 5L])\
    \ == 3L);\n    assert(candidate([-10L, 4L, 6L, 1000L, 10L, 20L]) == 8.0);\n  \
    \  assert(candidate([5L]) == 5L);\n    assert(candidate([6L, 5L]) == 5.5);\n \
    \   assert(candidate([8L, 1L, 3L, 9L, 9L, 2L, 7L]) == 7L);\n}\nvoid main(){}"
  status: SyntaxError
  stderr: 'b''Error: cannot find source code for runtime library file \''object.d\''\n       dmd
    might not be correctly installed. Run \''dmd -man\'' for installation instructions.\nimport
    path[0] = /tmp\nFailed: ["dmd", "-unittest", "-v", "-o-", "/tmp/tmpz9kir4r6.d",
    "-I/tmp"]\n'''
  stdout: b''
  timestamp: 1659792380
- exit_code: 1
  program: "import std.math;\n/*\nReturn median of elements in the list l.\n    >>>\
    \ median([3L, 1L, 2L, 4L, 5L])\n    3L\n    >>> median([-10L, 4L, 6L, 1000L, 10L,\
    \ 20L])\n    15.0\n    \n*/\nfloat median(long[] l) \n{\n    int n = l.length;\n\
    \    if (n == 0) \n    {\n        return 0.0;\n    }\n    else if (n == 1) \n\
    \    {\n        return l[0];\n    }\n    else if (n % 2 == 0) \n    {\n      \
    \  return (l[n / 2 - 1] + l[n / 2]) / 2.0;\n    }\n    else \n    {\n        return\
    \ l[n / 2];\n    }\n}\nunittest\n{\n    alias candidate = median;\n\n    assert(candidate([3L,\
    \ 1L, 2L, 4L, 5L]) == 3L);\n    assert(candidate([-10L, 4L, 6L, 1000L, 10L, 20L])\
    \ == 8.0);\n    assert(candidate([5L]) == 5L);\n    assert(candidate([6L, 5L])\
    \ == 5.5);\n    assert(candidate([8L, 1L, 3L, 9L, 9L, 2L, 7L]) == 7L);\n}\nvoid\
    \ main(){}"
  status: SyntaxError
  stderr: 'b''Error: cannot find source code for runtime library file \''object.d\''\n       dmd
    might not be correctly installed. Run \''dmd -man\'' for installation instructions.\nimport
    path[0] = /tmp\nFailed: ["dmd", "-unittest", "-v", "-o-", "/tmp/tmpvlqh5du2.d",
    "-I/tmp"]\n'''
  stdout: b''
  timestamp: 1659792380
- exit_code: 1
  program: "import std.math;\n/*\nReturn median of elements in the list l.\n    >>>\
    \ median([3L, 1L, 2L, 4L, 5L])\n    3L\n    >>> median([-10L, 4L, 6L, 1000L, 10L,\
    \ 20L])\n    15.0\n    \n*/\nfloat median(long[] l) \n{\n    long[] l2 = l.dup;\n\
    \    l2.sort;\n    int len = l2.length;\n    if (len % 2 == 0) \n    {\n     \
    \   return (l2[len / 2 - 1] + l2[len / 2]) / 2.0;\n    } \n    else \n    {\n\
    \        return l2[len / 2];\n    }\n}\nunittest\n{\n    alias candidate = median;\n\
    \n    assert(candidate([3L, 1L, 2L, 4L, 5L]) == 3L);\n    assert(candidate([-10L,\
    \ 4L, 6L, 1000L, 10L, 20L]) == 8.0);\n    assert(candidate([5L]) == 5L);\n   \
    \ assert(candidate([6L, 5L]) == 5.5);\n    assert(candidate([8L, 1L, 3L, 9L, 9L,\
    \ 2L, 7L]) == 7L);\n}\nvoid main(){}"
  status: SyntaxError
  stderr: 'b''Error: cannot find source code for runtime library file \''object.d\''\n       dmd
    might not be correctly installed. Run \''dmd -man\'' for installation instructions.\nimport
    path[0] = /tmp\nFailed: ["dmd", "-unittest", "-v", "-o-", "/tmp/tmpoyzbk6cv.d",
    "-I/tmp"]\n'''
  stdout: b''
  timestamp: 1659792379
- exit_code: 1
  program: "import std.math;\n/*\nReturn median of elements in the list l.\n    >>>\
    \ median([3L, 1L, 2L, 4L, 5L])\n    3L\n    >>> median([-10L, 4L, 6L, 1000L, 10L,\
    \ 20L])\n    15.0\n    \n*/\nfloat median(long[] l) \n{\n    long[] sorted = l.dup;\n\
    \    sorted.sort;\n    if (sorted.length % 2 == 1)\n        return sorted[sorted.length\
    \ / 2];\n    else\n        return (sorted[sorted.length / 2 - 1] + sorted[sorted.length\
    \ / 2]) / 2.0;\n}\nunittest\n{\n    alias candidate = median;\n\n    assert(candidate([3L,\
    \ 1L, 2L, 4L, 5L]) == 3L);\n    assert(candidate([-10L, 4L, 6L, 1000L, 10L, 20L])\
    \ == 8.0);\n    assert(candidate([5L]) == 5L);\n    assert(candidate([6L, 5L])\
    \ == 5.5);\n    assert(candidate([8L, 1L, 3L, 9L, 9L, 2L, 7L]) == 7L);\n}\nvoid\
    \ main(){}"
  status: SyntaxError
  stderr: 'b''Error: cannot find source code for runtime library file \''object.d\''\n       dmd
    might not be correctly installed. Run \''dmd -man\'' for installation instructions.\nimport
    path[0] = /tmp\nFailed: ["dmd", "-unittest", "-v", "-o-", "/tmp/tmprjc273gp.d",
    "-I/tmp"]\n'''
  stdout: b''
  timestamp: 1659792379
- exit_code: 1
  program: "import std.math;\n/*\nReturn median of elements in the list l.\n    >>>\
    \ median([3L, 1L, 2L, 4L, 5L])\n    3L\n    >>> median([-10L, 4L, 6L, 1000L, 10L,\
    \ 20L])\n    15.0\n    \n*/\nfloat median(long[] l) \n{\n    long[] sorted = l.dup;\n\
    \    sorted.sort;\n    if (sorted.length % 2 == 1)\n    {\n        return sorted[sorted.length\
    \ / 2];\n    }\n    else\n    {\n        return (sorted[sorted.length / 2 - 1]\
    \ + sorted[sorted.length / 2]) / 2.0;\n    }\n}\nunittest\n{\n    alias candidate\
    \ = median;\n\n    assert(candidate([3L, 1L, 2L, 4L, 5L]) == 3L);\n    assert(candidate([-10L,\
    \ 4L, 6L, 1000L, 10L, 20L]) == 8.0);\n    assert(candidate([5L]) == 5L);\n   \
    \ assert(candidate([6L, 5L]) == 5.5);\n    assert(candidate([8L, 1L, 3L, 9L, 9L,\
    \ 2L, 7L]) == 7L);\n}\nvoid main(){}"
  status: SyntaxError
  stderr: 'b''Error: cannot find source code for runtime library file \''object.d\''\n       dmd
    might not be correctly installed. Run \''dmd -man\'' for installation instructions.\nimport
    path[0] = /tmp\nFailed: ["dmd", "-unittest", "-v", "-o-", "/tmp/tmpo96ljf_e.d",
    "-I/tmp"]\n'''
  stdout: b''
  timestamp: 1659792379
- exit_code: 1
  program: "import std.math;\n/*\nReturn median of elements in the list l.\n    >>>\
    \ median([3L, 1L, 2L, 4L, 5L])\n    3L\n    >>> median([-10L, 4L, 6L, 1000L, 10L,\
    \ 20L])\n    15.0\n    \n*/\nfloat median(long[] l) \n{\n    int n = l.length;\n\
    \    if (n == 0)\n    {\n        return 0.0;\n    }\n    else if (n == 1)\n  \
    \  {\n        return l[0];\n    }\n    else if (n == 2)\n    {\n        return\
    \ (l[0] + l[1]) / 2.0;\n    }\n    else\n    {\n        long[] l2 = l[0..n];\n\
    \        l2.sort();\n        if (n % 2 == 0)\n        {\n            return (l2[n\
    \ / 2 - 1] + l2[n / 2]) / 2.0;\n        }\n        else\n        {\n         \
    \   return l2[n / 2];\n        }\n    }\n}\nunittest\n{\n    alias candidate =\
    \ median;\n\n    assert(candidate([3L, 1L, 2L, 4L, 5L]) == 3L);\n    assert(candidate([-10L,\
    \ 4L, 6L, 1000L, 10L, 20L]) == 8.0);\n    assert(candidate([5L]) == 5L);\n   \
    \ assert(candidate([6L, 5L]) == 5.5);\n    assert(candidate([8L, 1L, 3L, 9L, 9L,\
    \ 2L, 7L]) == 7L);\n}\nvoid main(){}"
  status: SyntaxError
  stderr: 'b''Error: cannot find source code for runtime library file \''object.d\''\n       dmd
    might not be correctly installed. Run \''dmd -man\'' for installation instructions.\nimport
    path[0] = /tmp\nFailed: ["dmd", "-unittest", "-v", "-o-", "/tmp/tmp2u311o_z.d",
    "-I/tmp"]\n'''
  stdout: b''
  timestamp: 1659792380
- exit_code: 1
  program: "import std.math;\n/*\nReturn median of elements in the list l.\n    >>>\
    \ median([3L, 1L, 2L, 4L, 5L])\n    3L\n    >>> median([-10L, 4L, 6L, 1000L, 10L,\
    \ 20L])\n    15.0\n    \n*/\nfloat median(long[] l) \n{\n    int n = l.length;\n\
    \    if (n == 0) \n    {\n        return 0;\n    }\n    else if (n == 1) \n  \
    \  {\n        return l[0];\n    }\n    else if (n == 2) \n    {\n        return\
    \ (l[0] + l[1]) / 2.0;\n    }\n    else \n    {\n        long[] l2 = l[0..n];\n\
    \        sort(l2);\n        if (n % 2 == 0) \n        {\n            return (l2[n\
    \ / 2 - 1] + l2[n / 2]) / 2.0;\n        }\n        else \n        {\n        \
    \    return l2[n / 2];\n        }\n    }\n}\nunittest\n{\n    alias candidate\
    \ = median;\n\n    assert(candidate([3L, 1L, 2L, 4L, 5L]) == 3L);\n    assert(candidate([-10L,\
    \ 4L, 6L, 1000L, 10L, 20L]) == 8.0);\n    assert(candidate([5L]) == 5L);\n   \
    \ assert(candidate([6L, 5L]) == 5.5);\n    assert(candidate([8L, 1L, 3L, 9L, 9L,\
    \ 2L, 7L]) == 7L);\n}\nvoid main(){}"
  status: SyntaxError
  stderr: 'b''Error: cannot find source code for runtime library file \''object.d\''\n       dmd
    might not be correctly installed. Run \''dmd -man\'' for installation instructions.\nimport
    path[0] = /tmp\nFailed: ["dmd", "-unittest", "-v", "-o-", "/tmp/tmp2d4exuku.d",
    "-I/tmp"]\n'''
  stdout: b''
  timestamp: 1659792379
- exit_code: 1
  program: "import std.math;\n/*\nReturn median of elements in the list l.\n    >>>\
    \ median([3L, 1L, 2L, 4L, 5L])\n    3L\n    >>> median([-10L, 4L, 6L, 1000L, 10L,\
    \ 20L])\n    15.0\n    \n*/\nfloat median(long[] l) \n{\n    long[] sorted = l.dup;\n\
    \    sorted.sort;\n    int n = sorted.length;\n    if (n % 2 == 1) {\n       \
    \ return sorted[n / 2];\n    } else {\n        return (sorted[n / 2 - 1] + sorted[n\
    \ / 2]) / 2.0;\n    }\n}\nunittest\n{\n    alias candidate = median;\n\n    assert(candidate([3L,\
    \ 1L, 2L, 4L, 5L]) == 3L);\n    assert(candidate([-10L, 4L, 6L, 1000L, 10L, 20L])\
    \ == 8.0);\n    assert(candidate([5L]) == 5L);\n    assert(candidate([6L, 5L])\
    \ == 5.5);\n    assert(candidate([8L, 1L, 3L, 9L, 9L, 2L, 7L]) == 7L);\n}\nvoid\
    \ main(){}"
  status: SyntaxError
  stderr: 'b''Error: cannot find source code for runtime library file \''object.d\''\n       dmd
    might not be correctly installed. Run \''dmd -man\'' for installation instructions.\nimport
    path[0] = /tmp\nFailed: ["dmd", "-unittest", "-v", "-o-", "/tmp/tmpkf7i4qle.d",
    "-I/tmp"]\n'''
  stdout: b''
  timestamp: 1659792379
- exit_code: 1
  program: "import std.math;\n/*\nReturn median of elements in the list l.\n    >>>\
    \ median([3L, 1L, 2L, 4L, 5L])\n    3L\n    >>> median([-10L, 4L, 6L, 1000L, 10L,\
    \ 20L])\n    15.0\n    \n*/\nfloat median(long[] l) \n{\n    long[] l2 = l.dup;\n\
    \    l2.sort;\n    int n = l2.length;\n    if (n % 2 == 1) \n    {\n        return\
    \ l2[n / 2];\n    } \n    else \n    {\n        return (l2[n / 2 - 1] + l2[n /\
    \ 2]) / 2.0;\n    }\n}\nunittest\n{\n    alias candidate = median;\n\n    assert(candidate([3L,\
    \ 1L, 2L, 4L, 5L]) == 3L);\n    assert(candidate([-10L, 4L, 6L, 1000L, 10L, 20L])\
    \ == 8.0);\n    assert(candidate([5L]) == 5L);\n    assert(candidate([6L, 5L])\
    \ == 5.5);\n    assert(candidate([8L, 1L, 3L, 9L, 9L, 2L, 7L]) == 7L);\n}\nvoid\
    \ main(){}"
  status: SyntaxError
  stderr: 'b''Error: cannot find source code for runtime library file \''object.d\''\n       dmd
    might not be correctly installed. Run \''dmd -man\'' for installation instructions.\nimport
    path[0] = /tmp\nFailed: ["dmd", "-unittest", "-v", "-o-", "/tmp/tmp4b181sot.d",
    "-I/tmp"]\n'''
  stdout: b''
  timestamp: 1659792379
- exit_code: 1
  program: "import std.math;\n/*\nReturn median of elements in the list l.\n    >>>\
    \ median([3L, 1L, 2L, 4L, 5L])\n    3L\n    >>> median([-10L, 4L, 6L, 1000L, 10L,\
    \ 20L])\n    15.0\n    \n*/\nfloat median(long[] l) \n{\n    int n = l.length;\n\
    \    if (n == 0) \n    {\n        return 0;\n    }\n    else if (n == 1) \n  \
    \  {\n        return l[0];\n    }\n    else if (n == 2) \n    {\n        return\
    \ (l[0] + l[1]) / 2.0;\n    }\n    else if (n % 2 == 1) \n    {\n        return\
    \ sort(l)[n / 2];\n    }\n    else \n    {\n        return (sort(l)[n / 2 - 1]\
    \ + sort(l)[n / 2]) / 2.0;\n    }\n}\nunittest\n{\n    alias candidate = median;\n\
    \n    assert(candidate([3L, 1L, 2L, 4L, 5L]) == 3L);\n    assert(candidate([-10L,\
    \ 4L, 6L, 1000L, 10L, 20L]) == 8.0);\n    assert(candidate([5L]) == 5L);\n   \
    \ assert(candidate([6L, 5L]) == 5.5);\n    assert(candidate([8L, 1L, 3L, 9L, 9L,\
    \ 2L, 7L]) == 7L);\n}\nvoid main(){}"
  status: SyntaxError
  stderr: 'b''Error: cannot find source code for runtime library file \''object.d\''\n       dmd
    might not be correctly installed. Run \''dmd -man\'' for installation instructions.\nimport
    path[0] = /tmp\nFailed: ["dmd", "-unittest", "-v", "-o-", "/tmp/tmp5cfqbgdx.d",
    "-I/tmp"]\n'''
  stdout: b''
  timestamp: 1659792380
- exit_code: 1
  program: "import std.math;\n/*\nReturn median of elements in the list l.\n    >>>\
    \ median([3L, 1L, 2L, 4L, 5L])\n    3L\n    >>> median([-10L, 4L, 6L, 1000L, 10L,\
    \ 20L])\n    15.0\n    \n*/\nfloat median(long[] l) \n{\n    long[] sorted = l.dup;\n\
    \    sorted.sort;\n    if (sorted.length % 2 == 1) \n    {\n        return sorted[sorted.length\
    \ / 2];\n    } \n    else \n    {\n        return (sorted[sorted.length / 2 -\
    \ 1] + sorted[sorted.length / 2]) / 2.0;\n    }\n}\nunittest\n{\n    alias candidate\
    \ = median;\n\n    assert(candidate([3L, 1L, 2L, 4L, 5L]) == 3L);\n    assert(candidate([-10L,\
    \ 4L, 6L, 1000L, 10L, 20L]) == 8.0);\n    assert(candidate([5L]) == 5L);\n   \
    \ assert(candidate([6L, 5L]) == 5.5);\n    assert(candidate([8L, 1L, 3L, 9L, 9L,\
    \ 2L, 7L]) == 7L);\n}\nvoid main(){}"
  status: SyntaxError
  stderr: 'b''Error: cannot find source code for runtime library file \''object.d\''\n       dmd
    might not be correctly installed. Run \''dmd -man\'' for installation instructions.\nimport
    path[0] = /tmp\nFailed: ["dmd", "-unittest", "-v", "-o-", "/tmp/tmpm0etr6b5.d",
    "-I/tmp"]\n'''
  stdout: b''
  timestamp: 1659792379
- exit_code: 1
  program: "import std.math;\n/*\nReturn median of elements in the list l.\n    >>>\
    \ median([3L, 1L, 2L, 4L, 5L])\n    3L\n    >>> median([-10L, 4L, 6L, 1000L, 10L,\
    \ 20L])\n    15.0\n    \n*/\nfloat median(long[] l) \n{\n    long[] sorted = l.dup.sort;\n\
    \    int mid = l.length / 2;\n    if (l.length % 2 == 0) {\n        return (sorted[mid]\
    \ + sorted[mid-1]) / 2.0;\n    } else {\n        return sorted[mid];\n    }\n\
    }\nunittest\n{\n    alias candidate = median;\n\n    assert(candidate([3L, 1L,\
    \ 2L, 4L, 5L]) == 3L);\n    assert(candidate([-10L, 4L, 6L, 1000L, 10L, 20L])\
    \ == 8.0);\n    assert(candidate([5L]) == 5L);\n    assert(candidate([6L, 5L])\
    \ == 5.5);\n    assert(candidate([8L, 1L, 3L, 9L, 9L, 2L, 7L]) == 7L);\n}\nvoid\
    \ main(){}"
  status: SyntaxError
  stderr: 'b''Error: cannot find source code for runtime library file \''object.d\''\n       dmd
    might not be correctly installed. Run \''dmd -man\'' for installation instructions.\nimport
    path[0] = /tmp\nFailed: ["dmd", "-unittest", "-v", "-o-", "/tmp/tmpj1dmtaho.d",
    "-I/tmp"]\n'''
  stdout: b''
  timestamp: 1659792379
- exit_code: 1
  program: "import std.math;\n/*\nReturn median of elements in the list l.\n    >>>\
    \ median([3L, 1L, 2L, 4L, 5L])\n    3L\n    >>> median([-10L, 4L, 6L, 1000L, 10L,\
    \ 20L])\n    15.0\n    \n*/\nfloat median(long[] l) \n{\n    long[] sorted = l.dup;\n\
    \    sorted.sort;\n    long len = sorted.length;\n    if (len % 2 == 1)\n    \
    \    return sorted[len / 2];\n    else\n        return (sorted[len / 2 - 1] +\
    \ sorted[len / 2]) / 2.0;\n}\nunittest\n{\n    alias candidate = median;\n\n \
    \   assert(candidate([3L, 1L, 2L, 4L, 5L]) == 3L);\n    assert(candidate([-10L,\
    \ 4L, 6L, 1000L, 10L, 20L]) == 8.0);\n    assert(candidate([5L]) == 5L);\n   \
    \ assert(candidate([6L, 5L]) == 5.5);\n    assert(candidate([8L, 1L, 3L, 9L, 9L,\
    \ 2L, 7L]) == 7L);\n}\nvoid main(){}"
  status: SyntaxError
  stderr: 'b''Error: cannot find source code for runtime library file \''object.d\''\n       dmd
    might not be correctly installed. Run \''dmd -man\'' for installation instructions.\nimport
    path[0] = /tmp\nFailed: ["dmd", "-unittest", "-v", "-o-", "/tmp/tmpo6gz39tp.d",
    "-I/tmp"]\n'''
  stdout: b''
  timestamp: 1659792380
- exit_code: 1
  program: "import std.math;\n/*\nReturn median of elements in the list l.\n    >>>\
    \ median([3L, 1L, 2L, 4L, 5L])\n    3L\n    >>> median([-10L, 4L, 6L, 1000L, 10L,\
    \ 20L])\n    15.0\n    \n*/\nfloat median(long[] l) \n{\n    long[] t = l.dup;\n\
    \    t.sort;\n    int n = t.length;\n    if (n % 2 == 1)\n        return t[n /\
    \ 2];\n    else\n        return (t[n / 2 - 1] + t[n / 2]) / 2.0;\n}\nunittest\n\
    {\n    alias candidate = median;\n\n    assert(candidate([3L, 1L, 2L, 4L, 5L])\
    \ == 3L);\n    assert(candidate([-10L, 4L, 6L, 1000L, 10L, 20L]) == 8.0);\n  \
    \  assert(candidate([5L]) == 5L);\n    assert(candidate([6L, 5L]) == 5.5);\n \
    \   assert(candidate([8L, 1L, 3L, 9L, 9L, 2L, 7L]) == 7L);\n}\nvoid main(){}"
  status: SyntaxError
  stderr: 'b''Error: cannot find source code for runtime library file \''object.d\''\n       dmd
    might not be correctly installed. Run \''dmd -man\'' for installation instructions.\nimport
    path[0] = /tmp\nFailed: ["dmd", "-unittest", "-v", "-o-", "/tmp/tmpp0g5w3z5.d",
    "-I/tmp"]\n'''
  stdout: b''
  timestamp: 1659792379
- exit_code: 1
  program: "import std.math;\n/*\nReturn median of elements in the list l.\n    >>>\
    \ median([3L, 1L, 2L, 4L, 5L])\n    3L\n    >>> median([-10L, 4L, 6L, 1000L, 10L,\
    \ 20L])\n    15.0\n    \n*/\nfloat median(long[] l) \n{\n    long[] sorted = l.dup;\n\
    \    sorted.sort;\n    if (sorted.length % 2 == 1)\n    {\n        return sorted[sorted.length\
    \ / 2];\n    }\n    else\n    {\n        return (sorted[sorted.length / 2 - 1]\
    \ + sorted[sorted.length / 2]) / 2.0;\n    }\n}\nunittest\n{\n    alias candidate\
    \ = median;\n\n    assert(candidate([3L, 1L, 2L, 4L, 5L]) == 3L);\n    assert(candidate([-10L,\
    \ 4L, 6L, 1000L, 10L, 20L]) == 8.0);\n    assert(candidate([5L]) == 5L);\n   \
    \ assert(candidate([6L, 5L]) == 5.5);\n    assert(candidate([8L, 1L, 3L, 9L, 9L,\
    \ 2L, 7L]) == 7L);\n}\nvoid main(){}"
  status: SyntaxError
  stderr: 'b''Error: cannot find source code for runtime library file \''object.d\''\n       dmd
    might not be correctly installed. Run \''dmd -man\'' for installation instructions.\nimport
    path[0] = /tmp\nFailed: ["dmd", "-unittest", "-v", "-o-", "/tmp/tmpo96ljf_e.d",
    "-I/tmp"]\n'''
  stdout: b''
  timestamp: 1659792379
- exit_code: 1
  program: "import std.math;\n/*\nReturn median of elements in the list l.\n    >>>\
    \ median([3L, 1L, 2L, 4L, 5L])\n    3L\n    >>> median([-10L, 4L, 6L, 1000L, 10L,\
    \ 20L])\n    15.0\n    \n*/\nfloat median(long[] l) \n{\n    long[] sorted = l.dup;\n\
    \    sorted.sort;\n    if (sorted.length % 2 == 1)\n    {\n        return sorted[sorted.length\
    \ / 2];\n    }\n    else\n    {\n        return (sorted[sorted.length / 2 - 1]\
    \ + sorted[sorted.length / 2]) / 2.0;\n    }\n}\nunittest\n{\n    alias candidate\
    \ = median;\n\n    assert(candidate([3L, 1L, 2L, 4L, 5L]) == 3L);\n    assert(candidate([-10L,\
    \ 4L, 6L, 1000L, 10L, 20L]) == 8.0);\n    assert(candidate([5L]) == 5L);\n   \
    \ assert(candidate([6L, 5L]) == 5.5);\n    assert(candidate([8L, 1L, 3L, 9L, 9L,\
    \ 2L, 7L]) == 7L);\n}\nvoid main(){}"
  status: SyntaxError
  stderr: 'b''Error: cannot find source code for runtime library file \''object.d\''\n       dmd
    might not be correctly installed. Run \''dmd -man\'' for installation instructions.\nimport
    path[0] = /tmp\nFailed: ["dmd", "-unittest", "-v", "-o-", "/tmp/tmpo96ljf_e.d",
    "-I/tmp"]\n'''
  stdout: b''
  timestamp: 1659792379
- exit_code: 1
  program: "import std.math;\n/*\nReturn median of elements in the list l.\n    >>>\
    \ median([3L, 1L, 2L, 4L, 5L])\n    3L\n    >>> median([-10L, 4L, 6L, 1000L, 10L,\
    \ 20L])\n    15.0\n    \n*/\nfloat median(long[] l) \n{\n    long[] sorted = l.sort();\n\
    \    int n = l.length;\n    if (n % 2 == 1)\n        return sorted[n / 2];\n \
    \   else\n        return (sorted[n / 2 - 1] + sorted[n / 2]) / 2.0;\n}\nunittest\n\
    {\n    alias candidate = median;\n\n    assert(candidate([3L, 1L, 2L, 4L, 5L])\
    \ == 3L);\n    assert(candidate([-10L, 4L, 6L, 1000L, 10L, 20L]) == 8.0);\n  \
    \  assert(candidate([5L]) == 5L);\n    assert(candidate([6L, 5L]) == 5.5);\n \
    \   assert(candidate([8L, 1L, 3L, 9L, 9L, 2L, 7L]) == 7L);\n}\nvoid main(){}"
  status: SyntaxError
  stderr: 'b''Error: cannot find source code for runtime library file \''object.d\''\n       dmd
    might not be correctly installed. Run \''dmd -man\'' for installation instructions.\nimport
    path[0] = /tmp\nFailed: ["dmd", "-unittest", "-v", "-o-", "/tmp/tmpdl3sfvk3.d",
    "-I/tmp"]\n'''
  stdout: b''
  timestamp: 1659792380
- exit_code: 1
  program: "import std.math;\n/*\nReturn median of elements in the list l.\n    >>>\
    \ median([3L, 1L, 2L, 4L, 5L])\n    3L\n    >>> median([-10L, 4L, 6L, 1000L, 10L,\
    \ 20L])\n    15.0\n    \n*/\nfloat median(long[] l) \n{\n    long[] sorted = l.dup;\n\
    \    sorted.sort;\n    int n = sorted.length;\n    if (n % 2 == 1) \n    {\n \
    \       return sorted[n / 2];\n    } \n    else \n    {\n        return (sorted[n\
    \ / 2 - 1] + sorted[n / 2]) / 2.0;\n    }\n}\nunittest\n{\n    alias candidate\
    \ = median;\n\n    assert(candidate([3L, 1L, 2L, 4L, 5L]) == 3L);\n    assert(candidate([-10L,\
    \ 4L, 6L, 1000L, 10L, 20L]) == 8.0);\n    assert(candidate([5L]) == 5L);\n   \
    \ assert(candidate([6L, 5L]) == 5.5);\n    assert(candidate([8L, 1L, 3L, 9L, 9L,\
    \ 2L, 7L]) == 7L);\n}\nvoid main(){}"
  status: SyntaxError
  stderr: 'b''Error: cannot find source code for runtime library file \''object.d\''\n       dmd
    might not be correctly installed. Run \''dmd -man\'' for installation instructions.\nimport
    path[0] = /tmp\nFailed: ["dmd", "-unittest", "-v", "-o-", "/tmp/tmphz52njnm.d",
    "-I/tmp"]\n'''
  stdout: b''
  timestamp: 1659792379
- exit_code: 1
  program: "import std.math;\n/*\nReturn median of elements in the list l.\n    >>>\
    \ median([3L, 1L, 2L, 4L, 5L])\n    3L\n    >>> median([-10L, 4L, 6L, 1000L, 10L,\
    \ 20L])\n    15.0\n    \n*/\nfloat median(long[] l) \n{\n    int n = l.length;\n\
    \    if (n == 0) \n    {\n        return 0.0;\n    }\n    else \n    {\n     \
    \   long[] l2 = l.dup;\n        l2.sort;\n        if (n % 2 == 0) \n        {\n\
    \            return (l2[n / 2 - 1] + l2[n / 2]) / 2.0;\n        }\n        else\
    \ \n        {\n            return l2[n / 2];\n        }\n    }\n}\nunittest\n\
    {\n    alias candidate = median;\n\n    assert(candidate([3L, 1L, 2L, 4L, 5L])\
    \ == 3L);\n    assert(candidate([-10L, 4L, 6L, 1000L, 10L, 20L]) == 8.0);\n  \
    \  assert(candidate([5L]) == 5L);\n    assert(candidate([6L, 5L]) == 5.5);\n \
    \   assert(candidate([8L, 1L, 3L, 9L, 9L, 2L, 7L]) == 7L);\n}\nvoid main(){}"
  status: SyntaxError
  stderr: 'b''Error: cannot find source code for runtime library file \''object.d\''\n       dmd
    might not be correctly installed. Run \''dmd -man\'' for installation instructions.\nimport
    path[0] = /tmp\nFailed: ["dmd", "-unittest", "-v", "-o-", "/tmp/tmp2j2xdxxj.d",
    "-I/tmp"]\n'''
  stdout: b''
  timestamp: 1659792379
- exit_code: 1
  program: "import std.math;\n/*\nReturn median of elements in the list l.\n    >>>\
    \ median([3L, 1L, 2L, 4L, 5L])\n    3L\n    >>> median([-10L, 4L, 6L, 1000L, 10L,\
    \ 20L])\n    15.0\n    \n*/\nfloat median(long[] l) \n{\n    int n = l.length;\n\
    \    if (n == 0) \n    {\n        return 0.0;\n    }\n    else if (n == 1) \n\
    \    {\n        return l[0];\n    }\n    else \n    {\n        sort(l);\n    \
    \    if (n % 2 == 0) \n        {\n            return (l[n / 2 - 1] + l[n / 2])\
    \ / 2.0;\n        }\n        else \n        {\n            return l[n / 2];\n\
    \        }\n    }\n}\nunittest\n{\n    alias candidate = median;\n\n    assert(candidate([3L,\
    \ 1L, 2L, 4L, 5L]) == 3L);\n    assert(candidate([-10L, 4L, 6L, 1000L, 10L, 20L])\
    \ == 8.0);\n    assert(candidate([5L]) == 5L);\n    assert(candidate([6L, 5L])\
    \ == 5.5);\n    assert(candidate([8L, 1L, 3L, 9L, 9L, 2L, 7L]) == 7L);\n}\nvoid\
    \ main(){}"
  status: SyntaxError
  stderr: 'b''Error: cannot find source code for runtime library file \''object.d\''\n       dmd
    might not be correctly installed. Run \''dmd -man\'' for installation instructions.\nimport
    path[0] = /tmp\nFailed: ["dmd", "-unittest", "-v", "-o-", "/tmp/tmp38ox8w1u.d",
    "-I/tmp"]\n'''
  stdout: b''
  timestamp: 1659792380
- exit_code: 1
  program: "import std.math;\n/*\nReturn median of elements in the list l.\n    >>>\
    \ median([3L, 1L, 2L, 4L, 5L])\n    3L\n    >>> median([-10L, 4L, 6L, 1000L, 10L,\
    \ 20L])\n    15.0\n    \n*/\nfloat median(long[] l) \n{\n    long[] sorted = l.dup;\n\
    \    sorted.sort;\n    int n = sorted.length;\n    if (n % 2 == 1)\n        return\
    \ sorted[n / 2];\n    else\n        return (sorted[n / 2 - 1] + sorted[n / 2])\
    \ / 2.0;\n}\nunittest\n{\n    alias candidate = median;\n\n    assert(candidate([3L,\
    \ 1L, 2L, 4L, 5L]) == 3L);\n    assert(candidate([-10L, 4L, 6L, 1000L, 10L, 20L])\
    \ == 8.0);\n    assert(candidate([5L]) == 5L);\n    assert(candidate([6L, 5L])\
    \ == 5.5);\n    assert(candidate([8L, 1L, 3L, 9L, 9L, 2L, 7L]) == 7L);\n}\nvoid\
    \ main(){}"
  status: SyntaxError
  stderr: 'b''Error: cannot find source code for runtime library file \''object.d\''\n       dmd
    might not be correctly installed. Run \''dmd -man\'' for installation instructions.\nimport
    path[0] = /tmp\nFailed: ["dmd", "-unittest", "-v", "-o-", "/tmp/tmpigo4kpie.d",
    "-I/tmp"]\n'''
  stdout: b''
  timestamp: 1659792379
- exit_code: 1
  program: "import std.math;\n/*\nReturn median of elements in the list l.\n    >>>\
    \ median([3L, 1L, 2L, 4L, 5L])\n    3L\n    >>> median([-10L, 4L, 6L, 1000L, 10L,\
    \ 20L])\n    15.0\n    \n*/\nfloat median(long[] l) \n{\n    long[] sorted = l.dup.sort;\n\
    \    int n = l.length;\n    if (n % 2 == 1)\n        return sorted[n / 2];\n \
    \   else\n        return (sorted[n / 2 - 1] + sorted[n / 2]) / 2.0;\n}\nunittest\n\
    {\n    alias candidate = median;\n\n    assert(candidate([3L, 1L, 2L, 4L, 5L])\
    \ == 3L);\n    assert(candidate([-10L, 4L, 6L, 1000L, 10L, 20L]) == 8.0);\n  \
    \  assert(candidate([5L]) == 5L);\n    assert(candidate([6L, 5L]) == 5.5);\n \
    \   assert(candidate([8L, 1L, 3L, 9L, 9L, 2L, 7L]) == 7L);\n}\nvoid main(){}"
  status: SyntaxError
  stderr: 'b''Error: cannot find source code for runtime library file \''object.d\''\n       dmd
    might not be correctly installed. Run \''dmd -man\'' for installation instructions.\nimport
    path[0] = /tmp\nFailed: ["dmd", "-unittest", "-v", "-o-", "/tmp/tmpi0z6caxs.d",
    "-I/tmp"]\n'''
  stdout: b''
  timestamp: 1659792380
- exit_code: 1
  program: "import std.math;\n/*\nReturn median of elements in the list l.\n    >>>\
    \ median([3L, 1L, 2L, 4L, 5L])\n    3L\n    >>> median([-10L, 4L, 6L, 1000L, 10L,\
    \ 20L])\n    15.0\n    \n*/\nfloat median(long[] l) \n{\n    long[] sorted = l.dup;\n\
    \    sorted.sort;\n    int n = sorted.length;\n    if (n % 2 == 1)\n        return\
    \ sorted[n / 2];\n    else\n        return (sorted[n / 2 - 1] + sorted[n / 2])\
    \ / 2.0;\n}\nunittest\n{\n    alias candidate = median;\n\n    assert(candidate([3L,\
    \ 1L, 2L, 4L, 5L]) == 3L);\n    assert(candidate([-10L, 4L, 6L, 1000L, 10L, 20L])\
    \ == 8.0);\n    assert(candidate([5L]) == 5L);\n    assert(candidate([6L, 5L])\
    \ == 5.5);\n    assert(candidate([8L, 1L, 3L, 9L, 9L, 2L, 7L]) == 7L);\n}\nvoid\
    \ main(){}"
  status: SyntaxError
  stderr: 'b''Error: cannot find source code for runtime library file \''object.d\''\n       dmd
    might not be correctly installed. Run \''dmd -man\'' for installation instructions.\nimport
    path[0] = /tmp\nFailed: ["dmd", "-unittest", "-v", "-o-", "/tmp/tmpigo4kpie.d",
    "-I/tmp"]\n'''
  stdout: b''
  timestamp: 1659792379
- exit_code: 1
  program: "import std.math;\n/*\nReturn median of elements in the list l.\n    >>>\
    \ median([3L, 1L, 2L, 4L, 5L])\n    3L\n    >>> median([-10L, 4L, 6L, 1000L, 10L,\
    \ 20L])\n    15.0\n    \n*/\nfloat median(long[] l) \n{\n    long[] sorted = l.dup;\n\
    \    sorted.sort;\n    if (sorted.length % 2 == 1) \n    {\n        return sorted[sorted.length\
    \ / 2];\n    } \n    else \n    {\n        return (sorted[sorted.length / 2 -\
    \ 1] + sorted[sorted.length / 2]) / 2.0;\n    }\n}\nunittest\n{\n    alias candidate\
    \ = median;\n\n    assert(candidate([3L, 1L, 2L, 4L, 5L]) == 3L);\n    assert(candidate([-10L,\
    \ 4L, 6L, 1000L, 10L, 20L]) == 8.0);\n    assert(candidate([5L]) == 5L);\n   \
    \ assert(candidate([6L, 5L]) == 5.5);\n    assert(candidate([8L, 1L, 3L, 9L, 9L,\
    \ 2L, 7L]) == 7L);\n}\nvoid main(){}"
  status: SyntaxError
  stderr: 'b''Error: cannot find source code for runtime library file \''object.d\''\n       dmd
    might not be correctly installed. Run \''dmd -man\'' for installation instructions.\nimport
    path[0] = /tmp\nFailed: ["dmd", "-unittest", "-v", "-o-", "/tmp/tmpm0etr6b5.d",
    "-I/tmp"]\n'''
  stdout: b''
  timestamp: 1659792379
- exit_code: 1
  program: "import std.math;\n/*\nReturn median of elements in the list l.\n    >>>\
    \ median([3L, 1L, 2L, 4L, 5L])\n    3L\n    >>> median([-10L, 4L, 6L, 1000L, 10L,\
    \ 20L])\n    15.0\n    \n*/\nfloat median(long[] l) \n{\n    long[] sorted = l.dup;\n\
    \    sorted.sort;\n    int len = sorted.length;\n    if (len % 2 == 0) \n    {\n\
    \        return (sorted[len / 2 - 1] + sorted[len / 2]) / 2.0;\n    } \n    else\
    \ \n    {\n        return sorted[len / 2];\n    }\n}\nunittest\n{\n    alias candidate\
    \ = median;\n\n    assert(candidate([3L, 1L, 2L, 4L, 5L]) == 3L);\n    assert(candidate([-10L,\
    \ 4L, 6L, 1000L, 10L, 20L]) == 8.0);\n    assert(candidate([5L]) == 5L);\n   \
    \ assert(candidate([6L, 5L]) == 5.5);\n    assert(candidate([8L, 1L, 3L, 9L, 9L,\
    \ 2L, 7L]) == 7L);\n}\nvoid main(){}"
  status: SyntaxError
  stderr: 'b''Error: cannot find source code for runtime library file \''object.d\''\n       dmd
    might not be correctly installed. Run \''dmd -man\'' for installation instructions.\nimport
    path[0] = /tmp\nFailed: ["dmd", "-unittest", "-v", "-o-", "/tmp/tmpjdent3bl.d",
    "-I/tmp"]\n'''
  stdout: b''
  timestamp: 1659792379
- exit_code: 1
  program: "import std.math;\n/*\nReturn median of elements in the list l.\n    >>>\
    \ median([3L, 1L, 2L, 4L, 5L])\n    3L\n    >>> median([-10L, 4L, 6L, 1000L, 10L,\
    \ 20L])\n    15.0\n    \n*/\nfloat median(long[] l) \n{\n    long[] sorted = l[];\n\
    \    sort(sorted);\n    int n = l.length;\n    if (n % 2 == 1)\n        return\
    \ sorted[n / 2];\n    else\n        return (sorted[n / 2 - 1] + sorted[n / 2])\
    \ / 2.0;\n}\nunittest\n{\n    alias candidate = median;\n\n    assert(candidate([3L,\
    \ 1L, 2L, 4L, 5L]) == 3L);\n    assert(candidate([-10L, 4L, 6L, 1000L, 10L, 20L])\
    \ == 8.0);\n    assert(candidate([5L]) == 5L);\n    assert(candidate([6L, 5L])\
    \ == 5.5);\n    assert(candidate([8L, 1L, 3L, 9L, 9L, 2L, 7L]) == 7L);\n}\nvoid\
    \ main(){}"
  status: SyntaxError
  stderr: 'b''Error: cannot find source code for runtime library file \''object.d\''\n       dmd
    might not be correctly installed. Run \''dmd -man\'' for installation instructions.\nimport
    path[0] = /tmp\nFailed: ["dmd", "-unittest", "-v", "-o-", "/tmp/tmp6_u9k6xd.d",
    "-I/tmp"]\n'''
  stdout: b''
  timestamp: 1659792379
- exit_code: 1
  program: "import std.math;\n/*\nReturn median of elements in the list l.\n    >>>\
    \ median([3L, 1L, 2L, 4L, 5L])\n    3L\n    >>> median([-10L, 4L, 6L, 1000L, 10L,\
    \ 20L])\n    15.0\n    \n*/\nfloat median(long[] l) \n{\n    if (l.length == 0)\
    \ \n    {\n        return 0.0;\n    }\n    else \n    {\n        long[] sorted\
    \ = l.dup;\n        sorted.sort;\n        if (sorted.length % 2 == 0) \n     \
    \   {\n            return (sorted[sorted.length / 2 - 1] + sorted[sorted.length\
    \ / 2]) / 2.0;\n        }\n        else \n        {\n            return sorted[sorted.length\
    \ / 2];\n        }\n    }\n}\nunittest\n{\n    alias candidate = median;\n\n \
    \   assert(candidate([3L, 1L, 2L, 4L, 5L]) == 3L);\n    assert(candidate([-10L,\
    \ 4L, 6L, 1000L, 10L, 20L]) == 8.0);\n    assert(candidate([5L]) == 5L);\n   \
    \ assert(candidate([6L, 5L]) == 5.5);\n    assert(candidate([8L, 1L, 3L, 9L, 9L,\
    \ 2L, 7L]) == 7L);\n}\nvoid main(){}"
  status: SyntaxError
  stderr: 'b''Error: cannot find source code for runtime library file \''object.d\''\n       dmd
    might not be correctly installed. Run \''dmd -man\'' for installation instructions.\nimport
    path[0] = /tmp\nFailed: ["dmd", "-unittest", "-v", "-o-", "/tmp/tmp93xpe4_l.d",
    "-I/tmp"]\n'''
  stdout: b''
  timestamp: 1659792379
- exit_code: 1
  program: "import std.math;\n/*\nReturn median of elements in the list l.\n    >>>\
    \ median([3L, 1L, 2L, 4L, 5L])\n    3L\n    >>> median([-10L, 4L, 6L, 1000L, 10L,\
    \ 20L])\n    15.0\n    \n*/\nfloat median(long[] l) \n{\n    long[] sorted = l.dup;\n\
    \    sorted.sort;\n    int n = sorted.length;\n    if (n % 2 == 1)\n        return\
    \ sorted[n / 2];\n    else\n        return (sorted[n / 2 - 1] + sorted[n / 2])\
    \ / 2.0;\n}\nunittest\n{\n    alias candidate = median;\n\n    assert(candidate([3L,\
    \ 1L, 2L, 4L, 5L]) == 3L);\n    assert(candidate([-10L, 4L, 6L, 1000L, 10L, 20L])\
    \ == 8.0);\n    assert(candidate([5L]) == 5L);\n    assert(candidate([6L, 5L])\
    \ == 5.5);\n    assert(candidate([8L, 1L, 3L, 9L, 9L, 2L, 7L]) == 7L);\n}\nvoid\
    \ main(){}"
  status: SyntaxError
  stderr: 'b''Error: cannot find source code for runtime library file \''object.d\''\n       dmd
    might not be correctly installed. Run \''dmd -man\'' for installation instructions.\nimport
    path[0] = /tmp\nFailed: ["dmd", "-unittest", "-v", "-o-", "/tmp/tmpigo4kpie.d",
    "-I/tmp"]\n'''
  stdout: b''
  timestamp: 1659792379
- exit_code: 1
  program: "import std.math;\n/*\nReturn median of elements in the list l.\n    >>>\
    \ median([3L, 1L, 2L, 4L, 5L])\n    3L\n    >>> median([-10L, 4L, 6L, 1000L, 10L,\
    \ 20L])\n    15.0\n    \n*/\nfloat median(long[] l) \n{\n    long[] sorted = l.dup;\n\
    \    sorted.sort;\n    if (sorted.length % 2 == 1)\n    {\n        return sorted[sorted.length\
    \ / 2];\n    }\n    else\n    {\n        return (sorted[sorted.length / 2 - 1]\
    \ + sorted[sorted.length / 2]) / 2.0;\n    }\n}\nunittest\n{\n    alias candidate\
    \ = median;\n\n    assert(candidate([3L, 1L, 2L, 4L, 5L]) == 3L);\n    assert(candidate([-10L,\
    \ 4L, 6L, 1000L, 10L, 20L]) == 8.0);\n    assert(candidate([5L]) == 5L);\n   \
    \ assert(candidate([6L, 5L]) == 5.5);\n    assert(candidate([8L, 1L, 3L, 9L, 9L,\
    \ 2L, 7L]) == 7L);\n}\nvoid main(){}"
  status: SyntaxError
  stderr: 'b''Error: cannot find source code for runtime library file \''object.d\''\n       dmd
    might not be correctly installed. Run \''dmd -man\'' for installation instructions.\nimport
    path[0] = /tmp\nFailed: ["dmd", "-unittest", "-v", "-o-", "/tmp/tmpo96ljf_e.d",
    "-I/tmp"]\n'''
  stdout: b''
  timestamp: 1659792379
- exit_code: 1
  program: "import std.math;\n/*\nReturn median of elements in the list l.\n    >>>\
    \ median([3L, 1L, 2L, 4L, 5L])\n    3L\n    >>> median([-10L, 4L, 6L, 1000L, 10L,\
    \ 20L])\n    15.0\n    \n*/\nfloat median(long[] l) \n{\n    long[] sorted = l.dup;\n\
    \    sorted.sort;\n    long len = sorted.length;\n    if (len % 2 == 1)\n    \
    \    return sorted[len / 2];\n    else\n        return (sorted[len / 2 - 1] +\
    \ sorted[len / 2]) / 2.0;\n}\nunittest\n{\n    alias candidate = median;\n\n \
    \   assert(candidate([3L, 1L, 2L, 4L, 5L]) == 3L);\n    assert(candidate([-10L,\
    \ 4L, 6L, 1000L, 10L, 20L]) == 8.0);\n    assert(candidate([5L]) == 5L);\n   \
    \ assert(candidate([6L, 5L]) == 5.5);\n    assert(candidate([8L, 1L, 3L, 9L, 9L,\
    \ 2L, 7L]) == 7L);\n}\nvoid main(){}"
  status: SyntaxError
  stderr: 'b''Error: cannot find source code for runtime library file \''object.d\''\n       dmd
    might not be correctly installed. Run \''dmd -man\'' for installation instructions.\nimport
    path[0] = /tmp\nFailed: ["dmd", "-unittest", "-v", "-o-", "/tmp/tmpo6gz39tp.d",
    "-I/tmp"]\n'''
  stdout: b''
  timestamp: 1659792380
- exit_code: 1
  program: "import std.math;\n/*\nReturn median of elements in the list l.\n    >>>\
    \ median([3L, 1L, 2L, 4L, 5L])\n    3L\n    >>> median([-10L, 4L, 6L, 1000L, 10L,\
    \ 20L])\n    15.0\n    \n*/\nfloat median(long[] l) \n{\n    long[] sorted = l.sort();\n\
    \    int n = l.length;\n    if (n % 2 == 1) \n    {\n        return sorted[n /\
    \ 2];\n    } \n    else \n    {\n        return (sorted[n / 2 - 1] + sorted[n\
    \ / 2]) / 2.0;\n    }\n}\nunittest\n{\n    alias candidate = median;\n\n    assert(candidate([3L,\
    \ 1L, 2L, 4L, 5L]) == 3L);\n    assert(candidate([-10L, 4L, 6L, 1000L, 10L, 20L])\
    \ == 8.0);\n    assert(candidate([5L]) == 5L);\n    assert(candidate([6L, 5L])\
    \ == 5.5);\n    assert(candidate([8L, 1L, 3L, 9L, 9L, 2L, 7L]) == 7L);\n}\nvoid\
    \ main(){}"
  status: SyntaxError
  stderr: 'b''Error: cannot find source code for runtime library file \''object.d\''\n       dmd
    might not be correctly installed. Run \''dmd -man\'' for installation instructions.\nimport
    path[0] = /tmp\nFailed: ["dmd", "-unittest", "-v", "-o-", "/tmp/tmpbs7mdsbw.d",
    "-I/tmp"]\n'''
  stdout: b''
  timestamp: 1659792380
- exit_code: 1
  program: "import std.math;\n/*\nReturn median of elements in the list l.\n    >>>\
    \ median([3L, 1L, 2L, 4L, 5L])\n    3L\n    >>> median([-10L, 4L, 6L, 1000L, 10L,\
    \ 20L])\n    15.0\n    \n*/\nfloat median(long[] l) \n{\n    long[] sorted = l.dup;\n\
    \    sorted.sort;\n    if (sorted.length % 2 == 1)\n        return sorted[sorted.length\
    \ / 2];\n    else\n        return (sorted[sorted.length / 2 - 1] + sorted[sorted.length\
    \ / 2]) / 2.0;\n}\nunittest\n{\n    alias candidate = median;\n\n    assert(candidate([3L,\
    \ 1L, 2L, 4L, 5L]) == 3L);\n    assert(candidate([-10L, 4L, 6L, 1000L, 10L, 20L])\
    \ == 8.0);\n    assert(candidate([5L]) == 5L);\n    assert(candidate([6L, 5L])\
    \ == 5.5);\n    assert(candidate([8L, 1L, 3L, 9L, 9L, 2L, 7L]) == 7L);\n}\nvoid\
    \ main(){}"
  status: SyntaxError
  stderr: 'b''Error: cannot find source code for runtime library file \''object.d\''\n       dmd
    might not be correctly installed. Run \''dmd -man\'' for installation instructions.\nimport
    path[0] = /tmp\nFailed: ["dmd", "-unittest", "-v", "-o-", "/tmp/tmprjc273gp.d",
    "-I/tmp"]\n'''
  stdout: b''
  timestamp: 1659792379
- exit_code: 1
  program: "import std.math;\n/*\nReturn median of elements in the list l.\n    >>>\
    \ median([3L, 1L, 2L, 4L, 5L])\n    3L\n    >>> median([-10L, 4L, 6L, 1000L, 10L,\
    \ 20L])\n    15.0\n    \n*/\nfloat median(long[] l) \n{\n    long[] sorted = l.dup;\n\
    \    sorted.sort;\n    if (sorted.length % 2 == 1)\n        return sorted[sorted.length\
    \ / 2];\n    else\n        return (sorted[sorted.length / 2 - 1] + sorted[sorted.length\
    \ / 2]) / 2.0;\n}\nunittest\n{\n    alias candidate = median;\n\n    assert(candidate([3L,\
    \ 1L, 2L, 4L, 5L]) == 3L);\n    assert(candidate([-10L, 4L, 6L, 1000L, 10L, 20L])\
    \ == 8.0);\n    assert(candidate([5L]) == 5L);\n    assert(candidate([6L, 5L])\
    \ == 5.5);\n    assert(candidate([8L, 1L, 3L, 9L, 9L, 2L, 7L]) == 7L);\n}\nvoid\
    \ main(){}"
  status: SyntaxError
  stderr: 'b''Error: cannot find source code for runtime library file \''object.d\''\n       dmd
    might not be correctly installed. Run \''dmd -man\'' for installation instructions.\nimport
    path[0] = /tmp\nFailed: ["dmd", "-unittest", "-v", "-o-", "/tmp/tmprjc273gp.d",
    "-I/tmp"]\n'''
  stdout: b''
  timestamp: 1659792379
- exit_code: 1
  program: "import std.math;\n/*\nReturn median of elements in the list l.\n    >>>\
    \ median([3L, 1L, 2L, 4L, 5L])\n    3L\n    >>> median([-10L, 4L, 6L, 1000L, 10L,\
    \ 20L])\n    15.0\n    \n*/\nfloat median(long[] l) \n{\n    long[] sorted = l.dup;\n\
    \    sorted.sort;\n    if (sorted.length % 2 == 1) \n    {\n        return sorted[sorted.length\
    \ / 2];\n    } \n    else \n    {\n        return (sorted[sorted.length / 2 -\
    \ 1] + sorted[sorted.length / 2]) / 2.0;\n    }\n}\nunittest\n{\n    alias candidate\
    \ = median;\n\n    assert(candidate([3L, 1L, 2L, 4L, 5L]) == 3L);\n    assert(candidate([-10L,\
    \ 4L, 6L, 1000L, 10L, 20L]) == 8.0);\n    assert(candidate([5L]) == 5L);\n   \
    \ assert(candidate([6L, 5L]) == 5.5);\n    assert(candidate([8L, 1L, 3L, 9L, 9L,\
    \ 2L, 7L]) == 7L);\n}\nvoid main(){}"
  status: SyntaxError
  stderr: 'b''Error: cannot find source code for runtime library file \''object.d\''\n       dmd
    might not be correctly installed. Run \''dmd -man\'' for installation instructions.\nimport
    path[0] = /tmp\nFailed: ["dmd", "-unittest", "-v", "-o-", "/tmp/tmpm0etr6b5.d",
    "-I/tmp"]\n'''
  stdout: b''
  timestamp: 1659792379
- exit_code: 1
  program: "import std.math;\n/*\nReturn median of elements in the list l.\n    >>>\
    \ median([3L, 1L, 2L, 4L, 5L])\n    3L\n    >>> median([-10L, 4L, 6L, 1000L, 10L,\
    \ 20L])\n    15.0\n    \n*/\nfloat median(long[] l) \n{\n    long[] sorted = l.dup;\n\
    \    sorted.sort;\n    long len = sorted.length;\n    if (len % 2 == 1) \n   \
    \ {\n        return sorted[len / 2];\n    }\n    else \n    {\n        return\
    \ (sorted[len / 2 - 1] + sorted[len / 2]) / 2.0;\n    }\n}\nunittest\n{\n    alias\
    \ candidate = median;\n\n    assert(candidate([3L, 1L, 2L, 4L, 5L]) == 3L);\n\
    \    assert(candidate([-10L, 4L, 6L, 1000L, 10L, 20L]) == 8.0);\n    assert(candidate([5L])\
    \ == 5L);\n    assert(candidate([6L, 5L]) == 5.5);\n    assert(candidate([8L,\
    \ 1L, 3L, 9L, 9L, 2L, 7L]) == 7L);\n}\nvoid main(){}"
  status: SyntaxError
  stderr: 'b''Error: cannot find source code for runtime library file \''object.d\''\n       dmd
    might not be correctly installed. Run \''dmd -man\'' for installation instructions.\nimport
    path[0] = /tmp\nFailed: ["dmd", "-unittest", "-v", "-o-", "/tmp/tmpsggv5yw1.d",
    "-I/tmp"]\n'''
  stdout: b''
  timestamp: 1659792380
- exit_code: 1
  program: "import std.math;\n/*\nReturn median of elements in the list l.\n    >>>\
    \ median([3L, 1L, 2L, 4L, 5L])\n    3L\n    >>> median([-10L, 4L, 6L, 1000L, 10L,\
    \ 20L])\n    15.0\n    \n*/\nfloat median(long[] l) \n{\n    long[] sorted = l.dup;\n\
    \    sorted.sort;\n    if (sorted.length % 2 == 1) {\n        return sorted[sorted.length\
    \ / 2];\n    } else {\n        return (sorted[sorted.length / 2 - 1] + sorted[sorted.length\
    \ / 2]) / 2.0;\n    }\n}\nunittest\n{\n    alias candidate = median;\n\n    assert(candidate([3L,\
    \ 1L, 2L, 4L, 5L]) == 3L);\n    assert(candidate([-10L, 4L, 6L, 1000L, 10L, 20L])\
    \ == 8.0);\n    assert(candidate([5L]) == 5L);\n    assert(candidate([6L, 5L])\
    \ == 5.5);\n    assert(candidate([8L, 1L, 3L, 9L, 9L, 2L, 7L]) == 7L);\n}\nvoid\
    \ main(){}"
  status: SyntaxError
  stderr: 'b''Error: cannot find source code for runtime library file \''object.d\''\n       dmd
    might not be correctly installed. Run \''dmd -man\'' for installation instructions.\nimport
    path[0] = /tmp\nFailed: ["dmd", "-unittest", "-v", "-o-", "/tmp/tmpnsw65xel.d",
    "-I/tmp"]\n'''
  stdout: b''
  timestamp: 1659792379
- exit_code: 1
  program: "import std.math;\n/*\nReturn median of elements in the list l.\n    >>>\
    \ median([3L, 1L, 2L, 4L, 5L])\n    3L\n    >>> median([-10L, 4L, 6L, 1000L, 10L,\
    \ 20L])\n    15.0\n    \n*/\nfloat median(long[] l) \n{\n    long[] temp = l.dup;\n\
    \    temp.sort;\n    int len = temp.length;\n    if (len % 2 == 0)\n    {\n  \
    \      return (temp[len / 2] + temp[len / 2 - 1]) / 2.0;\n    }\n    else\n  \
    \  {\n        return temp[len / 2];\n    }\n}\nunittest\n{\n    alias candidate\
    \ = median;\n\n    assert(candidate([3L, 1L, 2L, 4L, 5L]) == 3L);\n    assert(candidate([-10L,\
    \ 4L, 6L, 1000L, 10L, 20L]) == 8.0);\n    assert(candidate([5L]) == 5L);\n   \
    \ assert(candidate([6L, 5L]) == 5.5);\n    assert(candidate([8L, 1L, 3L, 9L, 9L,\
    \ 2L, 7L]) == 7L);\n}\nvoid main(){}"
  status: SyntaxError
  stderr: 'b''Error: cannot find source code for runtime library file \''object.d\''\n       dmd
    might not be correctly installed. Run \''dmd -man\'' for installation instructions.\nimport
    path[0] = /tmp\nFailed: ["dmd", "-unittest", "-v", "-o-", "/tmp/tmp6x3d3o2b.d",
    "-I/tmp"]\n'''
  stdout: b''
  timestamp: 1659792379
- exit_code: 1
  program: "import std.math;\n/*\nReturn median of elements in the list l.\n    >>>\
    \ median([3L, 1L, 2L, 4L, 5L])\n    3L\n    >>> median([-10L, 4L, 6L, 1000L, 10L,\
    \ 20L])\n    15.0\n    \n*/\nfloat median(long[] l) \n{\n    long[] sorted = l.dup;\n\
    \    sorted.sort;\n    int n = sorted.length;\n    if (n % 2 == 1) {\n       \
    \ return sorted[n / 2];\n    } else {\n        return (sorted[n / 2 - 1] + sorted[n\
    \ / 2]) / 2.0;\n    }\n}\nunittest\n{\n    alias candidate = median;\n\n    assert(candidate([3L,\
    \ 1L, 2L, 4L, 5L]) == 3L);\n    assert(candidate([-10L, 4L, 6L, 1000L, 10L, 20L])\
    \ == 8.0);\n    assert(candidate([5L]) == 5L);\n    assert(candidate([6L, 5L])\
    \ == 5.5);\n    assert(candidate([8L, 1L, 3L, 9L, 9L, 2L, 7L]) == 7L);\n}\nvoid\
    \ main(){}"
  status: SyntaxError
  stderr: 'b''Error: cannot find source code for runtime library file \''object.d\''\n       dmd
    might not be correctly installed. Run \''dmd -man\'' for installation instructions.\nimport
    path[0] = /tmp\nFailed: ["dmd", "-unittest", "-v", "-o-", "/tmp/tmpkf7i4qle.d",
    "-I/tmp"]\n'''
  stdout: b''
  timestamp: 1659792379
- exit_code: 1
  program: "import std.math;\n/*\nReturn median of elements in the list l.\n    >>>\
    \ median([3L, 1L, 2L, 4L, 5L])\n    3L\n    >>> median([-10L, 4L, 6L, 1000L, 10L,\
    \ 20L])\n    15.0\n    \n*/\nfloat median(long[] l) \n{ \n    long[] l2 = l.dup;\n\
    \    l2.sort;\n    int len = l2.length;\n    if (len % 2 == 0) \n    {\n     \
    \   return (l2[len / 2 - 1] + l2[len / 2]) / 2.0;\n    } \n    else \n    {\n\
    \        return l2[len / 2];\n    }\n}\nunittest\n{\n    alias candidate = median;\n\
    \n    assert(candidate([3L, 1L, 2L, 4L, 5L]) == 3L);\n    assert(candidate([-10L,\
    \ 4L, 6L, 1000L, 10L, 20L]) == 8.0);\n    assert(candidate([5L]) == 5L);\n   \
    \ assert(candidate([6L, 5L]) == 5.5);\n    assert(candidate([8L, 1L, 3L, 9L, 9L,\
    \ 2L, 7L]) == 7L);\n}\nvoid main(){}"
  status: SyntaxError
  stderr: 'b''Error: cannot find source code for runtime library file \''object.d\''\n       dmd
    might not be correctly installed. Run \''dmd -man\'' for installation instructions.\nimport
    path[0] = /tmp\nFailed: ["dmd", "-unittest", "-v", "-o-", "/tmp/tmp4hhxqvcl.d",
    "-I/tmp"]\n'''
  stdout: b''
  timestamp: 1659792380
- exit_code: 1
  program: "import std.math;\n/*\nReturn median of elements in the list l.\n    >>>\
    \ median([3L, 1L, 2L, 4L, 5L])\n    3L\n    >>> median([-10L, 4L, 6L, 1000L, 10L,\
    \ 20L])\n    15.0\n    \n*/\nfloat median(long[] l) \n{\n    long[] sorted = l.dup;\n\
    \    sorted.sort;\n    int n = sorted.length;\n    if (n % 2 == 1)\n        return\
    \ sorted[n / 2];\n    else\n        return (sorted[n / 2 - 1] + sorted[n / 2])\
    \ / 2.0;\n}\nunittest\n{\n    alias candidate = median;\n\n    assert(candidate([3L,\
    \ 1L, 2L, 4L, 5L]) == 3L);\n    assert(candidate([-10L, 4L, 6L, 1000L, 10L, 20L])\
    \ == 8.0);\n    assert(candidate([5L]) == 5L);\n    assert(candidate([6L, 5L])\
    \ == 5.5);\n    assert(candidate([8L, 1L, 3L, 9L, 9L, 2L, 7L]) == 7L);\n}\nvoid\
    \ main(){}"
  status: SyntaxError
  stderr: 'b''Error: cannot find source code for runtime library file \''object.d\''\n       dmd
    might not be correctly installed. Run \''dmd -man\'' for installation instructions.\nimport
    path[0] = /tmp\nFailed: ["dmd", "-unittest", "-v", "-o-", "/tmp/tmpigo4kpie.d",
    "-I/tmp"]\n'''
  stdout: b''
  timestamp: 1659792379
- exit_code: 1
  program: "import std.math;\n/*\nReturn median of elements in the list l.\n    >>>\
    \ median([3L, 1L, 2L, 4L, 5L])\n    3L\n    >>> median([-10L, 4L, 6L, 1000L, 10L,\
    \ 20L])\n    15.0\n    \n*/\nfloat median(long[] l) \n{\n    long[] sorted = l.dup;\n\
    \    sorted.sort;\n    int n = sorted.length;\n    if (n % 2 == 1) \n    {\n \
    \       return sorted[n / 2];\n    } \n    else \n    {\n        return (sorted[n\
    \ / 2 - 1] + sorted[n / 2]) / 2.0;\n    }\n}\nunittest\n{\n    alias candidate\
    \ = median;\n\n    assert(candidate([3L, 1L, 2L, 4L, 5L]) == 3L);\n    assert(candidate([-10L,\
    \ 4L, 6L, 1000L, 10L, 20L]) == 8.0);\n    assert(candidate([5L]) == 5L);\n   \
    \ assert(candidate([6L, 5L]) == 5.5);\n    assert(candidate([8L, 1L, 3L, 9L, 9L,\
    \ 2L, 7L]) == 7L);\n}\nvoid main(){}"
  status: SyntaxError
  stderr: 'b''Error: cannot find source code for runtime library file \''object.d\''\n       dmd
    might not be correctly installed. Run \''dmd -man\'' for installation instructions.\nimport
    path[0] = /tmp\nFailed: ["dmd", "-unittest", "-v", "-o-", "/tmp/tmphz52njnm.d",
    "-I/tmp"]\n'''
  stdout: b''
  timestamp: 1659792379
- exit_code: 1
  program: "import std.math;\n/*\nReturn median of elements in the list l.\n    >>>\
    \ median([3L, 1L, 2L, 4L, 5L])\n    3L\n    >>> median([-10L, 4L, 6L, 1000L, 10L,\
    \ 20L])\n    15.0\n    \n*/\nfloat median(long[] l) \n{\n    long[] sorted = l.dup;\n\
    \    sorted.sort;\n    int n = sorted.length;\n    if (n % 2 == 1)\n        return\
    \ sorted[n / 2];\n    else\n        return (sorted[n / 2 - 1] + sorted[n / 2])\
    \ / 2.0;\n}\nunittest\n{\n    alias candidate = median;\n\n    assert(candidate([3L,\
    \ 1L, 2L, 4L, 5L]) == 3L);\n    assert(candidate([-10L, 4L, 6L, 1000L, 10L, 20L])\
    \ == 8.0);\n    assert(candidate([5L]) == 5L);\n    assert(candidate([6L, 5L])\
    \ == 5.5);\n    assert(candidate([8L, 1L, 3L, 9L, 9L, 2L, 7L]) == 7L);\n}\nvoid\
    \ main(){}"
  status: SyntaxError
  stderr: 'b''Error: cannot find source code for runtime library file \''object.d\''\n       dmd
    might not be correctly installed. Run \''dmd -man\'' for installation instructions.\nimport
    path[0] = /tmp\nFailed: ["dmd", "-unittest", "-v", "-o-", "/tmp/tmpigo4kpie.d",
    "-I/tmp"]\n'''
  stdout: b''
  timestamp: 1659792379
- exit_code: 1
  program: "import std.math;\n/*\nReturn median of elements in the list l.\n    >>>\
    \ median([3L, 1L, 2L, 4L, 5L])\n    3L\n    >>> median([-10L, 4L, 6L, 1000L, 10L,\
    \ 20L])\n    15.0\n    \n*/\nfloat median(long[] l) \n{\n    long[] sorted = l.dup.sort;\n\
    \    int mid = l.length / 2;\n    if (l.length % 2 == 0) {\n        return (sorted[mid]\
    \ + sorted[mid - 1]) / 2.0;\n    }\n    else {\n        return sorted[mid];\n\
    \    }\n}\nunittest\n{\n    alias candidate = median;\n\n    assert(candidate([3L,\
    \ 1L, 2L, 4L, 5L]) == 3L);\n    assert(candidate([-10L, 4L, 6L, 1000L, 10L, 20L])\
    \ == 8.0);\n    assert(candidate([5L]) == 5L);\n    assert(candidate([6L, 5L])\
    \ == 5.5);\n    assert(candidate([8L, 1L, 3L, 9L, 9L, 2L, 7L]) == 7L);\n}\nvoid\
    \ main(){}"
  status: SyntaxError
  stderr: 'b''Error: cannot find source code for runtime library file \''object.d\''\n       dmd
    might not be correctly installed. Run \''dmd -man\'' for installation instructions.\nimport
    path[0] = /tmp\nFailed: ["dmd", "-unittest", "-v", "-o-", "/tmp/tmp7df4mfr_.d",
    "-I/tmp"]\n'''
  stdout: b''
  timestamp: 1659792380
- exit_code: 1
  program: "import std.math;\n/*\nReturn median of elements in the list l.\n    >>>\
    \ median([3L, 1L, 2L, 4L, 5L])\n    3L\n    >>> median([-10L, 4L, 6L, 1000L, 10L,\
    \ 20L])\n    15.0\n    \n*/\nfloat median(long[] l) \n{\n    long[] s = l.dup;\n\
    \    s.sort;\n    if (s.length % 2 == 0) \n    {\n        return (s[s.length /\
    \ 2 - 1] + s[s.length / 2]) / 2.0;\n    }\n    else \n    {\n        return s[s.length\
    \ / 2];\n    }\n}\nunittest\n{\n    alias candidate = median;\n\n    assert(candidate([3L,\
    \ 1L, 2L, 4L, 5L]) == 3L);\n    assert(candidate([-10L, 4L, 6L, 1000L, 10L, 20L])\
    \ == 8.0);\n    assert(candidate([5L]) == 5L);\n    assert(candidate([6L, 5L])\
    \ == 5.5);\n    assert(candidate([8L, 1L, 3L, 9L, 9L, 2L, 7L]) == 7L);\n}\nvoid\
    \ main(){}"
  status: SyntaxError
  stderr: 'b''Error: cannot find source code for runtime library file \''object.d\''\n       dmd
    might not be correctly installed. Run \''dmd -man\'' for installation instructions.\nimport
    path[0] = /tmp\nFailed: ["dmd", "-unittest", "-v", "-o-", "/tmp/tmp9u0vxaux.d",
    "-I/tmp"]\n'''
  stdout: b''
  timestamp: 1659792380
- exit_code: 1
  program: "import std.math;\n/*\nReturn median of elements in the list l.\n    >>>\
    \ median([3L, 1L, 2L, 4L, 5L])\n    3L\n    >>> median([-10L, 4L, 6L, 1000L, 10L,\
    \ 20L])\n    15.0\n    \n*/\nfloat median(long[] l) \n{\n    long[] sorted = l.dup.sort;\n\
    \    int n = sorted.length;\n    if (n % 2 == 1)\n    {\n        return sorted[n\
    \ / 2];\n    }\n    else\n    {\n        return (sorted[n / 2 - 1] + sorted[n\
    \ / 2]) / 2.0;\n    }\n}\nunittest\n{\n    alias candidate = median;\n\n    assert(candidate([3L,\
    \ 1L, 2L, 4L, 5L]) == 3L);\n    assert(candidate([-10L, 4L, 6L, 1000L, 10L, 20L])\
    \ == 8.0);\n    assert(candidate([5L]) == 5L);\n    assert(candidate([6L, 5L])\
    \ == 5.5);\n    assert(candidate([8L, 1L, 3L, 9L, 9L, 2L, 7L]) == 7L);\n}\nvoid\
    \ main(){}"
  status: SyntaxError
  stderr: 'b''Error: cannot find source code for runtime library file \''object.d\''\n       dmd
    might not be correctly installed. Run \''dmd -man\'' for installation instructions.\nimport
    path[0] = /tmp\nFailed: ["dmd", "-unittest", "-v", "-o-", "/tmp/tmpda2f9bdn.d",
    "-I/tmp"]\n'''
  stdout: b''
  timestamp: 1659792380
- exit_code: 1
  program: "import std.math;\n/*\nReturn median of elements in the list l.\n    >>>\
    \ median([3L, 1L, 2L, 4L, 5L])\n    3L\n    >>> median([-10L, 4L, 6L, 1000L, 10L,\
    \ 20L])\n    15.0\n    \n*/\nfloat median(long[] l) \n{\n    long[] sorted = l.dup.sort;\n\
    \    int n = l.length;\n    if (n % 2 == 1)\n        return sorted[n / 2];\n \
    \   else\n        return (sorted[n / 2 - 1] + sorted[n / 2]) / 2.0;\n}\nunittest\n\
    {\n    alias candidate = median;\n\n    assert(candidate([3L, 1L, 2L, 4L, 5L])\
    \ == 3L);\n    assert(candidate([-10L, 4L, 6L, 1000L, 10L, 20L]) == 8.0);\n  \
    \  assert(candidate([5L]) == 5L);\n    assert(candidate([6L, 5L]) == 5.5);\n \
    \   assert(candidate([8L, 1L, 3L, 9L, 9L, 2L, 7L]) == 7L);\n}\nvoid main(){}"
  status: SyntaxError
  stderr: 'b''Error: cannot find source code for runtime library file \''object.d\''\n       dmd
    might not be correctly installed. Run \''dmd -man\'' for installation instructions.\nimport
    path[0] = /tmp\nFailed: ["dmd", "-unittest", "-v", "-o-", "/tmp/tmpi0z6caxs.d",
    "-I/tmp"]\n'''
  stdout: b''
  timestamp: 1659792380
- exit_code: 1
  program: "import std.math;\n/*\nReturn median of elements in the list l.\n    >>>\
    \ median([3L, 1L, 2L, 4L, 5L])\n    3L\n    >>> median([-10L, 4L, 6L, 1000L, 10L,\
    \ 20L])\n    15.0\n    \n*/\nfloat median(long[] l) \n{\n    long[] sorted = l.dup.sort;\n\
    \    int mid = sorted.length / 2;\n    if (sorted.length % 2 == 0) \n    {\n \
    \       return (sorted[mid] + sorted[mid - 1]) / 2.0;\n    } \n    else \n   \
    \ {\n        return sorted[mid];\n    }\n}\nunittest\n{\n    alias candidate =\
    \ median;\n\n    assert(candidate([3L, 1L, 2L, 4L, 5L]) == 3L);\n    assert(candidate([-10L,\
    \ 4L, 6L, 1000L, 10L, 20L]) == 8.0);\n    assert(candidate([5L]) == 5L);\n   \
    \ assert(candidate([6L, 5L]) == 5.5);\n    assert(candidate([8L, 1L, 3L, 9L, 9L,\
    \ 2L, 7L]) == 7L);\n}\nvoid main(){}"
  status: SyntaxError
  stderr: 'b''Error: cannot find source code for runtime library file \''object.d\''\n       dmd
    might not be correctly installed. Run \''dmd -man\'' for installation instructions.\nimport
    path[0] = /tmp\nFailed: ["dmd", "-unittest", "-v", "-o-", "/tmp/tmp4yodzbf7.d",
    "-I/tmp"]\n'''
  stdout: b''
  timestamp: 1659792380
- exit_code: 1
  program: "import std.math;\n/*\nReturn median of elements in the list l.\n    >>>\
    \ median([3L, 1L, 2L, 4L, 5L])\n    3L\n    >>> median([-10L, 4L, 6L, 1000L, 10L,\
    \ 20L])\n    15.0\n    \n*/\nfloat median(long[] l) \n{\n    long[] sorted = sort(l);\n\
    \    int n = sorted.length;\n    if (n % 2 == 1) \n    {\n        return sorted[n\
    \ / 2];\n    } \n    else \n    {\n        return (sorted[n / 2 - 1] + sorted[n\
    \ / 2]) / 2.0;\n    }\n}\nunittest\n{\n    alias candidate = median;\n\n    assert(candidate([3L,\
    \ 1L, 2L, 4L, 5L]) == 3L);\n    assert(candidate([-10L, 4L, 6L, 1000L, 10L, 20L])\
    \ == 8.0);\n    assert(candidate([5L]) == 5L);\n    assert(candidate([6L, 5L])\
    \ == 5.5);\n    assert(candidate([8L, 1L, 3L, 9L, 9L, 2L, 7L]) == 7L);\n}\nvoid\
    \ main(){}"
  status: SyntaxError
  stderr: 'b''Error: cannot find source code for runtime library file \''object.d\''\n       dmd
    might not be correctly installed. Run \''dmd -man\'' for installation instructions.\nimport
    path[0] = /tmp\nFailed: ["dmd", "-unittest", "-v", "-o-", "/tmp/tmp7r53_ml9.d",
    "-I/tmp"]\n'''
  stdout: b''
  timestamp: 1659792380
- exit_code: 1
  program: "import std.math;\n/*\nReturn median of elements in the list l.\n    >>>\
    \ median([3L, 1L, 2L, 4L, 5L])\n    3L\n    >>> median([-10L, 4L, 6L, 1000L, 10L,\
    \ 20L])\n    15.0\n    \n*/\nfloat median(long[] l) \n{\n    long[] sorted = l.dup;\n\
    \    sorted.sort;\n    if (sorted.length % 2 == 1) {\n        return sorted[sorted.length\
    \ / 2];\n    } else {\n        return (sorted[sorted.length / 2 - 1] + sorted[sorted.length\
    \ / 2]) / 2.0;\n    }\n}\nunittest\n{\n    alias candidate = median;\n\n    assert(candidate([3L,\
    \ 1L, 2L, 4L, 5L]) == 3L);\n    assert(candidate([-10L, 4L, 6L, 1000L, 10L, 20L])\
    \ == 8.0);\n    assert(candidate([5L]) == 5L);\n    assert(candidate([6L, 5L])\
    \ == 5.5);\n    assert(candidate([8L, 1L, 3L, 9L, 9L, 2L, 7L]) == 7L);\n}\nvoid\
    \ main(){}"
  status: SyntaxError
  stderr: 'b''Error: cannot find source code for runtime library file \''object.d\''\n       dmd
    might not be correctly installed. Run \''dmd -man\'' for installation instructions.\nimport
    path[0] = /tmp\nFailed: ["dmd", "-unittest", "-v", "-o-", "/tmp/tmpnsw65xel.d",
    "-I/tmp"]\n'''
  stdout: b''
  timestamp: 1659792379
- exit_code: 1
  program: "import std.math;\n/*\nReturn median of elements in the list l.\n    >>>\
    \ median([3L, 1L, 2L, 4L, 5L])\n    3L\n    >>> median([-10L, 4L, 6L, 1000L, 10L,\
    \ 20L])\n    15.0\n    \n*/\nfloat median(long[] l) \n{\n    long[] sorted = l.sort();\n\
    \    int mid = l.length / 2;\n    if (l.length % 2 == 0) \n    {\n        return\
    \ (sorted[mid] + sorted[mid - 1]) / 2.0;\n    } \n    else \n    {\n        return\
    \ sorted[mid];\n    }\n}\nunittest\n{\n    alias candidate = median;\n\n    assert(candidate([3L,\
    \ 1L, 2L, 4L, 5L]) == 3L);\n    assert(candidate([-10L, 4L, 6L, 1000L, 10L, 20L])\
    \ == 8.0);\n    assert(candidate([5L]) == 5L);\n    assert(candidate([6L, 5L])\
    \ == 5.5);\n    assert(candidate([8L, 1L, 3L, 9L, 9L, 2L, 7L]) == 7L);\n}\nvoid\
    \ main(){}"
  status: SyntaxError
  stderr: 'b''Error: cannot find source code for runtime library file \''object.d\''\n       dmd
    might not be correctly installed. Run \''dmd -man\'' for installation instructions.\nimport
    path[0] = /tmp\nFailed: ["dmd", "-unittest", "-v", "-o-", "/tmp/tmph8_33itb.d",
    "-I/tmp"]\n'''
  stdout: b''
  timestamp: 1659792380
- exit_code: 1
  program: "import std.math;\n/*\nReturn median of elements in the list l.\n    >>>\
    \ median([3L, 1L, 2L, 4L, 5L])\n    3L\n    >>> median([-10L, 4L, 6L, 1000L, 10L,\
    \ 20L])\n    15.0\n    \n*/\nfloat median(long[] l) \n{\n    long[] sorted = l.dup;\n\
    \    sorted.sort;\n    int n = sorted.length;\n    if (n % 2 == 1) \n    {\n \
    \       return sorted[n / 2];\n    } \n    else \n    {\n        return (sorted[n\
    \ / 2 - 1] + sorted[n / 2]) / 2.0;\n    }\n}\nunittest\n{\n    alias candidate\
    \ = median;\n\n    assert(candidate([3L, 1L, 2L, 4L, 5L]) == 3L);\n    assert(candidate([-10L,\
    \ 4L, 6L, 1000L, 10L, 20L]) == 8.0);\n    assert(candidate([5L]) == 5L);\n   \
    \ assert(candidate([6L, 5L]) == 5.5);\n    assert(candidate([8L, 1L, 3L, 9L, 9L,\
    \ 2L, 7L]) == 7L);\n}\nvoid main(){}"
  status: SyntaxError
  stderr: 'b''Error: cannot find source code for runtime library file \''object.d\''\n       dmd
    might not be correctly installed. Run \''dmd -man\'' for installation instructions.\nimport
    path[0] = /tmp\nFailed: ["dmd", "-unittest", "-v", "-o-", "/tmp/tmphz52njnm.d",
    "-I/tmp"]\n'''
  stdout: b''
  timestamp: 1659792379
- exit_code: 1
  program: "import std.math;\n/*\nReturn median of elements in the list l.\n    >>>\
    \ median([3L, 1L, 2L, 4L, 5L])\n    3L\n    >>> median([-10L, 4L, 6L, 1000L, 10L,\
    \ 20L])\n    15.0\n    \n*/\nfloat median(long[] l) \n{\n    long[] sorted = l.dup;\n\
    \    sorted.sort;\n    int n = sorted.length;\n    if (n % 2 == 1)\n        return\
    \ sorted[n / 2];\n    else\n        return (sorted[n / 2 - 1] + sorted[n / 2])\
    \ / 2.0;\n}\nunittest\n{\n    alias candidate = median;\n\n    assert(candidate([3L,\
    \ 1L, 2L, 4L, 5L]) == 3L);\n    assert(candidate([-10L, 4L, 6L, 1000L, 10L, 20L])\
    \ == 8.0);\n    assert(candidate([5L]) == 5L);\n    assert(candidate([6L, 5L])\
    \ == 5.5);\n    assert(candidate([8L, 1L, 3L, 9L, 9L, 2L, 7L]) == 7L);\n}\nvoid\
    \ main(){}"
  status: SyntaxError
  stderr: 'b''Error: cannot find source code for runtime library file \''object.d\''\n       dmd
    might not be correctly installed. Run \''dmd -man\'' for installation instructions.\nimport
    path[0] = /tmp\nFailed: ["dmd", "-unittest", "-v", "-o-", "/tmp/tmpigo4kpie.d",
    "-I/tmp"]\n'''
  stdout: b''
  timestamp: 1659792379
- exit_code: 1
  program: "import std.math;\n/*\nReturn median of elements in the list l.\n    >>>\
    \ median([3L, 1L, 2L, 4L, 5L])\n    3L\n    >>> median([-10L, 4L, 6L, 1000L, 10L,\
    \ 20L])\n    15.0\n    \n*/\nfloat median(long[] l) \n{\n    long[] sorted = l.sort();\n\
    \    int n = sorted.length;\n    if (n % 2 == 1) {\n        return sorted[n /\
    \ 2];\n    } else {\n        return (sorted[n / 2 - 1] + sorted[n / 2]) / 2.0;\n\
    \    }\n}\nunittest\n{\n    alias candidate = median;\n\n    assert(candidate([3L,\
    \ 1L, 2L, 4L, 5L]) == 3L);\n    assert(candidate([-10L, 4L, 6L, 1000L, 10L, 20L])\
    \ == 8.0);\n    assert(candidate([5L]) == 5L);\n    assert(candidate([6L, 5L])\
    \ == 5.5);\n    assert(candidate([8L, 1L, 3L, 9L, 9L, 2L, 7L]) == 7L);\n}\nvoid\
    \ main(){}"
  status: SyntaxError
  stderr: 'b''Error: cannot find source code for runtime library file \''object.d\''\n       dmd
    might not be correctly installed. Run \''dmd -man\'' for installation instructions.\nimport
    path[0] = /tmp\nFailed: ["dmd", "-unittest", "-v", "-o-", "/tmp/tmpjz9o7re8.d",
    "-I/tmp"]\n'''
  stdout: b''
  timestamp: 1659792380
- exit_code: 1
  program: "import std.math;\n/*\nReturn median of elements in the list l.\n    >>>\
    \ median([3L, 1L, 2L, 4L, 5L])\n    3L\n    >>> median([-10L, 4L, 6L, 1000L, 10L,\
    \ 20L])\n    15.0\n    \n*/\nfloat median(long[] l) \n{\n    int n = l.length;\n\
    \    if (n == 0) \n    {\n        return 0.0;\n    }\n    else \n    {\n     \
    \   long[] sorted = sort(l);\n        if (n % 2 == 0) \n        {\n          \
    \  return (sorted[n / 2 - 1] + sorted[n / 2]) / 2.0;\n        }\n        else\
    \ \n        {\n            return sorted[n / 2];\n        }\n    }\n}\nunittest\n\
    {\n    alias candidate = median;\n\n    assert(candidate([3L, 1L, 2L, 4L, 5L])\
    \ == 3L);\n    assert(candidate([-10L, 4L, 6L, 1000L, 10L, 20L]) == 8.0);\n  \
    \  assert(candidate([5L]) == 5L);\n    assert(candidate([6L, 5L]) == 5.5);\n \
    \   assert(candidate([8L, 1L, 3L, 9L, 9L, 2L, 7L]) == 7L);\n}\nvoid main(){}"
  status: SyntaxError
  stderr: 'b''Error: cannot find source code for runtime library file \''object.d\''\n       dmd
    might not be correctly installed. Run \''dmd -man\'' for installation instructions.\nimport
    path[0] = /tmp\nFailed: ["dmd", "-unittest", "-v", "-o-", "/tmp/tmp8wpe0lmh.d",
    "-I/tmp"]\n'''
  stdout: b''
  timestamp: 1659792380
- exit_code: 1
  program: "import std.math;\n/*\nReturn median of elements in the list l.\n    >>>\
    \ median([3L, 1L, 2L, 4L, 5L])\n    3L\n    >>> median([-10L, 4L, 6L, 1000L, 10L,\
    \ 20L])\n    15.0\n    \n*/\nfloat median(long[] l) \n{\n    long[] sorted = l.sort();\n\
    \    int len = sorted.length;\n    if (len % 2 == 1)\n    {\n        return sorted[len\
    \ / 2];\n    }\n    else\n    {\n        return (sorted[len / 2 - 1] + sorted[len\
    \ / 2]) / 2.0;\n    }\n}\nunittest\n{\n    alias candidate = median;\n\n    assert(candidate([3L,\
    \ 1L, 2L, 4L, 5L]) == 3L);\n    assert(candidate([-10L, 4L, 6L, 1000L, 10L, 20L])\
    \ == 8.0);\n    assert(candidate([5L]) == 5L);\n    assert(candidate([6L, 5L])\
    \ == 5.5);\n    assert(candidate([8L, 1L, 3L, 9L, 9L, 2L, 7L]) == 7L);\n}\nvoid\
    \ main(){}"
  status: SyntaxError
  stderr: 'b''Error: cannot find source code for runtime library file \''object.d\''\n       dmd
    might not be correctly installed. Run \''dmd -man\'' for installation instructions.\nimport
    path[0] = /tmp\nFailed: ["dmd", "-unittest", "-v", "-o-", "/tmp/tmp4tbgl_sp.d",
    "-I/tmp"]\n'''
  stdout: b''
  timestamp: 1659792380
- exit_code: 1
  program: "import std.math;\n/*\nReturn median of elements in the list l.\n    >>>\
    \ median([3L, 1L, 2L, 4L, 5L])\n    3L\n    >>> median([-10L, 4L, 6L, 1000L, 10L,\
    \ 20L])\n    15.0\n    \n*/\nfloat median(long[] l) \n{\n    long[] sorted = l.sort();\n\
    \    long len = sorted.length;\n    if (len % 2 == 1)\n        return sorted[len\
    \ / 2];\n    else\n        return (sorted[len / 2 - 1] + sorted[len / 2]) / 2.0;\n\
    }\nunittest\n{\n    alias candidate = median;\n\n    assert(candidate([3L, 1L,\
    \ 2L, 4L, 5L]) == 3L);\n    assert(candidate([-10L, 4L, 6L, 1000L, 10L, 20L])\
    \ == 8.0);\n    assert(candidate([5L]) == 5L);\n    assert(candidate([6L, 5L])\
    \ == 5.5);\n    assert(candidate([8L, 1L, 3L, 9L, 9L, 2L, 7L]) == 7L);\n}\nvoid\
    \ main(){}"
  status: SyntaxError
  stderr: 'b''Error: cannot find source code for runtime library file \''object.d\''\n       dmd
    might not be correctly installed. Run \''dmd -man\'' for installation instructions.\nimport
    path[0] = /tmp\nFailed: ["dmd", "-unittest", "-v", "-o-", "/tmp/tmp6zbmuf2c.d",
    "-I/tmp"]\n'''
  stdout: b''
  timestamp: 1659792380
- exit_code: 1
  program: "import std.math;\n/*\nReturn median of elements in the list l.\n    >>>\
    \ median([3L, 1L, 2L, 4L, 5L])\n    3L\n    >>> median([-10L, 4L, 6L, 1000L, 10L,\
    \ 20L])\n    15.0\n    \n*/\nfloat median(long[] l) \n{\n    long[] sorted = l.dup;\n\
    \    sorted.sort;\n    int n = sorted.length;\n    if (n % 2 == 1)\n        return\
    \ sorted[n / 2];\n    else\n        return (sorted[n / 2 - 1] + sorted[n / 2])\
    \ / 2.0;\n}\nunittest\n{\n    alias candidate = median;\n\n    assert(candidate([3L,\
    \ 1L, 2L, 4L, 5L]) == 3L);\n    assert(candidate([-10L, 4L, 6L, 1000L, 10L, 20L])\
    \ == 8.0);\n    assert(candidate([5L]) == 5L);\n    assert(candidate([6L, 5L])\
    \ == 5.5);\n    assert(candidate([8L, 1L, 3L, 9L, 9L, 2L, 7L]) == 7L);\n}\nvoid\
    \ main(){}"
  status: SyntaxError
  stderr: 'b''Error: cannot find source code for runtime library file \''object.d\''\n       dmd
    might not be correctly installed. Run \''dmd -man\'' for installation instructions.\nimport
    path[0] = /tmp\nFailed: ["dmd", "-unittest", "-v", "-o-", "/tmp/tmpigo4kpie.d",
    "-I/tmp"]\n'''
  stdout: b''
  timestamp: 1659792379
- exit_code: 1
  program: "import std.math;\n/*\nReturn median of elements in the list l.\n    >>>\
    \ median([3L, 1L, 2L, 4L, 5L])\n    3L\n    >>> median([-10L, 4L, 6L, 1000L, 10L,\
    \ 20L])\n    15.0\n    \n*/\nfloat median(long[] l) \n{\n    long[] temp = l.dup;\n\
    \    temp.sort;\n    int n = temp.length;\n    if (n % 2 == 0)\n    {\n      \
    \  return (temp[n/2] + temp[n/2 - 1]) / 2.0;\n    }\n    else\n    {\n       \
    \ return temp[n/2];\n    }\n}\nunittest\n{\n    alias candidate = median;\n\n\
    \    assert(candidate([3L, 1L, 2L, 4L, 5L]) == 3L);\n    assert(candidate([-10L,\
    \ 4L, 6L, 1000L, 10L, 20L]) == 8.0);\n    assert(candidate([5L]) == 5L);\n   \
    \ assert(candidate([6L, 5L]) == 5.5);\n    assert(candidate([8L, 1L, 3L, 9L, 9L,\
    \ 2L, 7L]) == 7L);\n}\nvoid main(){}"
  status: SyntaxError
  stderr: 'b''Error: cannot find source code for runtime library file \''object.d\''\n       dmd
    might not be correctly installed. Run \''dmd -man\'' for installation instructions.\nimport
    path[0] = /tmp\nFailed: ["dmd", "-unittest", "-v", "-o-", "/tmp/tmpiyz97y6u.d",
    "-I/tmp"]\n'''
  stdout: b''
  timestamp: 1659792380
- exit_code: 1
  program: "import std.math;\n/*\nReturn median of elements in the list l.\n    >>>\
    \ median([3L, 1L, 2L, 4L, 5L])\n    3L\n    >>> median([-10L, 4L, 6L, 1000L, 10L,\
    \ 20L])\n    15.0\n    \n*/\nfloat median(long[] l) \n{\n    long[] sorted = l.dup;\n\
    \    sorted.sort;\n    if (sorted.length % 2 == 1)\n        return sorted[sorted.length\
    \ / 2];\n    else\n        return (sorted[sorted.length / 2 - 1] + sorted[sorted.length\
    \ / 2]) / 2.0;\n}\nunittest\n{\n    alias candidate = median;\n\n    assert(candidate([3L,\
    \ 1L, 2L, 4L, 5L]) == 3L);\n    assert(candidate([-10L, 4L, 6L, 1000L, 10L, 20L])\
    \ == 8.0);\n    assert(candidate([5L]) == 5L);\n    assert(candidate([6L, 5L])\
    \ == 5.5);\n    assert(candidate([8L, 1L, 3L, 9L, 9L, 2L, 7L]) == 7L);\n}\nvoid\
    \ main(){}"
  status: SyntaxError
  stderr: 'b''Error: cannot find source code for runtime library file \''object.d\''\n       dmd
    might not be correctly installed. Run \''dmd -man\'' for installation instructions.\nimport
    path[0] = /tmp\nFailed: ["dmd", "-unittest", "-v", "-o-", "/tmp/tmprjc273gp.d",
    "-I/tmp"]\n'''
  stdout: b''
  timestamp: 1659792379
- exit_code: 1
  program: "import std.math;\n/*\nReturn median of elements in the list l.\n    >>>\
    \ median([3L, 1L, 2L, 4L, 5L])\n    3L\n    >>> median([-10L, 4L, 6L, 1000L, 10L,\
    \ 20L])\n    15.0\n    \n*/\nfloat median(long[] l) \n{\n    long[] sorted = l.sort();\n\
    \    int mid = sorted.length / 2;\n    if (sorted.length % 2 == 0)\n    {\n  \
    \      return (sorted[mid] + sorted[mid - 1]) / 2.0;\n    }\n    else\n    {\n\
    \        return sorted[mid];\n    }\n}\nunittest\n{\n    alias candidate = median;\n\
    \n    assert(candidate([3L, 1L, 2L, 4L, 5L]) == 3L);\n    assert(candidate([-10L,\
    \ 4L, 6L, 1000L, 10L, 20L]) == 8.0);\n    assert(candidate([5L]) == 5L);\n   \
    \ assert(candidate([6L, 5L]) == 5.5);\n    assert(candidate([8L, 1L, 3L, 9L, 9L,\
    \ 2L, 7L]) == 7L);\n}\nvoid main(){}"
  status: SyntaxError
  stderr: 'b''Error: cannot find source code for runtime library file \''object.d\''\n       dmd
    might not be correctly installed. Run \''dmd -man\'' for installation instructions.\nimport
    path[0] = /tmp\nFailed: ["dmd", "-unittest", "-v", "-o-", "/tmp/tmp6a4hyf12.d",
    "-I/tmp"]\n'''
  stdout: b''
  timestamp: 1659792379
- exit_code: 1
  program: "import std.math;\n/*\nReturn median of elements in the list l.\n    >>>\
    \ median([3L, 1L, 2L, 4L, 5L])\n    3L\n    >>> median([-10L, 4L, 6L, 1000L, 10L,\
    \ 20L])\n    15.0\n    \n*/\nfloat median(long[] l) \n{\n    long[] sorted = l.dup;\n\
    \    sorted.sort;\n    if (sorted.length % 2 == 1) {\n        return sorted[sorted.length\
    \ / 2];\n    } else {\n        return (sorted[sorted.length / 2 - 1] + sorted[sorted.length\
    \ / 2]) / 2.0;\n    }\n}\nunittest\n{\n    alias candidate = median;\n\n    assert(candidate([3L,\
    \ 1L, 2L, 4L, 5L]) == 3L);\n    assert(candidate([-10L, 4L, 6L, 1000L, 10L, 20L])\
    \ == 8.0);\n    assert(candidate([5L]) == 5L);\n    assert(candidate([6L, 5L])\
    \ == 5.5);\n    assert(candidate([8L, 1L, 3L, 9L, 9L, 2L, 7L]) == 7L);\n}\nvoid\
    \ main(){}"
  status: SyntaxError
  stderr: 'b''Error: cannot find source code for runtime library file \''object.d\''\n       dmd
    might not be correctly installed. Run \''dmd -man\'' for installation instructions.\nimport
    path[0] = /tmp\nFailed: ["dmd", "-unittest", "-v", "-o-", "/tmp/tmpnsw65xel.d",
    "-I/tmp"]\n'''
  stdout: b''
  timestamp: 1659792379
- exit_code: 1
  program: "import std.math;\n/*\nReturn median of elements in the list l.\n    >>>\
    \ median([3L, 1L, 2L, 4L, 5L])\n    3L\n    >>> median([-10L, 4L, 6L, 1000L, 10L,\
    \ 20L])\n    15.0\n    \n*/\nfloat median(long[] l) \n{\n    long[] m = l.dup;\n\
    \    m.sort;\n    if (m.length % 2 == 0)\n        return (m[m.length / 2 - 1]\
    \ + m[m.length / 2]) / 2.0;\n    else\n        return m[m.length / 2];\n}\nunittest\n\
    {\n    alias candidate = median;\n\n    assert(candidate([3L, 1L, 2L, 4L, 5L])\
    \ == 3L);\n    assert(candidate([-10L, 4L, 6L, 1000L, 10L, 20L]) == 8.0);\n  \
    \  assert(candidate([5L]) == 5L);\n    assert(candidate([6L, 5L]) == 5.5);\n \
    \   assert(candidate([8L, 1L, 3L, 9L, 9L, 2L, 7L]) == 7L);\n}\nvoid main(){}"
  status: SyntaxError
  stderr: 'b''Error: cannot find source code for runtime library file \''object.d\''\n       dmd
    might not be correctly installed. Run \''dmd -man\'' for installation instructions.\nimport
    path[0] = /tmp\nFailed: ["dmd", "-unittest", "-v", "-o-", "/tmp/tmpowphhm0u.d",
    "-I/tmp"]\n'''
  stdout: b''
  timestamp: 1659792380
- exit_code: 1
  program: "import std.math;\n/*\nReturn median of elements in the list l.\n    >>>\
    \ median([3L, 1L, 2L, 4L, 5L])\n    3L\n    >>> median([-10L, 4L, 6L, 1000L, 10L,\
    \ 20L])\n    15.0\n    \n*/\nfloat median(long[] l) \n{\n    long[] l2 = l.dup;\n\
    \    l2.sort;\n    int n = l2.length;\n    if (n % 2 == 1) \n    {\n        return\
    \ l2[n / 2];\n    } \n    else \n    {\n        return (l2[n / 2 - 1] + l2[n /\
    \ 2]) / 2.0;\n    }\n}\nunittest\n{\n    alias candidate = median;\n\n    assert(candidate([3L,\
    \ 1L, 2L, 4L, 5L]) == 3L);\n    assert(candidate([-10L, 4L, 6L, 1000L, 10L, 20L])\
    \ == 8.0);\n    assert(candidate([5L]) == 5L);\n    assert(candidate([6L, 5L])\
    \ == 5.5);\n    assert(candidate([8L, 1L, 3L, 9L, 9L, 2L, 7L]) == 7L);\n}\nvoid\
    \ main(){}"
  status: SyntaxError
  stderr: 'b''Error: cannot find source code for runtime library file \''object.d\''\n       dmd
    might not be correctly installed. Run \''dmd -man\'' for installation instructions.\nimport
    path[0] = /tmp\nFailed: ["dmd", "-unittest", "-v", "-o-", "/tmp/tmp4b181sot.d",
    "-I/tmp"]\n'''
  stdout: b''
  timestamp: 1659792379
- exit_code: 1
  program: "import std.math;\n/*\nReturn median of elements in the list l.\n    >>>\
    \ median([3L, 1L, 2L, 4L, 5L])\n    3L\n    >>> median([-10L, 4L, 6L, 1000L, 10L,\
    \ 20L])\n    15.0\n    \n*/\nfloat median(long[] l) \n{\n    long[] sorted = sort(l);\n\
    \    int n = l.length;\n    if (n % 2 == 1) \n    {\n        return sorted[n /\
    \ 2];\n    } \n    else \n    {\n        return (sorted[n / 2 - 1] + sorted[n\
    \ / 2]) / 2.0;\n    }\n}\nunittest\n{\n    alias candidate = median;\n\n    assert(candidate([3L,\
    \ 1L, 2L, 4L, 5L]) == 3L);\n    assert(candidate([-10L, 4L, 6L, 1000L, 10L, 20L])\
    \ == 8.0);\n    assert(candidate([5L]) == 5L);\n    assert(candidate([6L, 5L])\
    \ == 5.5);\n    assert(candidate([8L, 1L, 3L, 9L, 9L, 2L, 7L]) == 7L);\n}\nvoid\
    \ main(){}"
  status: SyntaxError
  stderr: 'b''Error: cannot find source code for runtime library file \''object.d\''\n       dmd
    might not be correctly installed. Run \''dmd -man\'' for installation instructions.\nimport
    path[0] = /tmp\nFailed: ["dmd", "-unittest", "-v", "-o-", "/tmp/tmpew9us496.d",
    "-I/tmp"]\n'''
  stdout: b''
  timestamp: 1659792380
- exit_code: 1
  program: "import std.math;\n/*\nReturn median of elements in the list l.\n    >>>\
    \ median([3L, 1L, 2L, 4L, 5L])\n    3L\n    >>> median([-10L, 4L, 6L, 1000L, 10L,\
    \ 20L])\n    15.0\n    \n*/\nfloat median(long[] l) \n{\n    long[] sorted = l.dup.sort;\n\
    \    long len = sorted.length;\n    if (len % 2 == 1) \n    {\n        return\
    \ sorted[len / 2];\n    } \n    else \n    {\n        return (sorted[len / 2 -\
    \ 1] + sorted[len / 2]) / 2.0;\n    }\n}\nunittest\n{\n    alias candidate = median;\n\
    \n    assert(candidate([3L, 1L, 2L, 4L, 5L]) == 3L);\n    assert(candidate([-10L,\
    \ 4L, 6L, 1000L, 10L, 20L]) == 8.0);\n    assert(candidate([5L]) == 5L);\n   \
    \ assert(candidate([6L, 5L]) == 5.5);\n    assert(candidate([8L, 1L, 3L, 9L, 9L,\
    \ 2L, 7L]) == 7L);\n}\nvoid main(){}"
  status: SyntaxError
  stderr: 'b''Error: cannot find source code for runtime library file \''object.d\''\n       dmd
    might not be correctly installed. Run \''dmd -man\'' for installation instructions.\nimport
    path[0] = /tmp\nFailed: ["dmd", "-unittest", "-v", "-o-", "/tmp/tmpl0bj9mnv.d",
    "-I/tmp"]\n'''
  stdout: b''
  timestamp: 1659792380
- exit_code: 1
  program: "import std.math;\n/*\nReturn median of elements in the list l.\n    >>>\
    \ median([3L, 1L, 2L, 4L, 5L])\n    3L\n    >>> median([-10L, 4L, 6L, 1000L, 10L,\
    \ 20L])\n    15.0\n    \n*/\nfloat median(long[] l) \n{\n    long[] sorted = l.dup;\n\
    \    sorted.sort;\n    if (sorted.length % 2 == 1)\n    {\n        return sorted[sorted.length\
    \ / 2];\n    }\n    else\n    {\n        return (sorted[sorted.length / 2 - 1]\
    \ + sorted[sorted.length / 2]) / 2.0;\n    }\n}\nunittest\n{\n    alias candidate\
    \ = median;\n\n    assert(candidate([3L, 1L, 2L, 4L, 5L]) == 3L);\n    assert(candidate([-10L,\
    \ 4L, 6L, 1000L, 10L, 20L]) == 8.0);\n    assert(candidate([5L]) == 5L);\n   \
    \ assert(candidate([6L, 5L]) == 5.5);\n    assert(candidate([8L, 1L, 3L, 9L, 9L,\
    \ 2L, 7L]) == 7L);\n}\nvoid main(){}"
  status: SyntaxError
  stderr: 'b''Error: cannot find source code for runtime library file \''object.d\''\n       dmd
    might not be correctly installed. Run \''dmd -man\'' for installation instructions.\nimport
    path[0] = /tmp\nFailed: ["dmd", "-unittest", "-v", "-o-", "/tmp/tmpo96ljf_e.d",
    "-I/tmp"]\n'''
  stdout: b''
  timestamp: 1659792379
- exit_code: 1
  program: "import std.math;\n/*\nReturn median of elements in the list l.\n    >>>\
    \ median([3L, 1L, 2L, 4L, 5L])\n    3L\n    >>> median([-10L, 4L, 6L, 1000L, 10L,\
    \ 20L])\n    15.0\n    \n*/\nfloat median(long[] l) \n{\n    long[] sorted = l.dup;\n\
    \    sorted.sort;\n    int len = sorted.length;\n    if (len % 2 == 0) \n    {\n\
    \        return (sorted[len / 2 - 1] + sorted[len / 2]) / 2.0;\n    }\n    else\
    \ \n    {\n        return sorted[len / 2];\n    }\n}\nunittest\n{\n    alias candidate\
    \ = median;\n\n    assert(candidate([3L, 1L, 2L, 4L, 5L]) == 3L);\n    assert(candidate([-10L,\
    \ 4L, 6L, 1000L, 10L, 20L]) == 8.0);\n    assert(candidate([5L]) == 5L);\n   \
    \ assert(candidate([6L, 5L]) == 5.5);\n    assert(candidate([8L, 1L, 3L, 9L, 9L,\
    \ 2L, 7L]) == 7L);\n}\nvoid main(){}"
  status: SyntaxError
  stderr: 'b''Error: cannot find source code for runtime library file \''object.d\''\n       dmd
    might not be correctly installed. Run \''dmd -man\'' for installation instructions.\nimport
    path[0] = /tmp\nFailed: ["dmd", "-unittest", "-v", "-o-", "/tmp/tmp4aokkq3o.d",
    "-I/tmp"]\n'''
  stdout: b''
  timestamp: 1659792379
- exit_code: 1
  program: "import std.math;\n/*\nReturn median of elements in the list l.\n    >>>\
    \ median([3L, 1L, 2L, 4L, 5L])\n    3L\n    >>> median([-10L, 4L, 6L, 1000L, 10L,\
    \ 20L])\n    15.0\n    \n*/\nfloat median(long[] l) \n{\n    long[] ll = l.dup;\n\
    \    ll.sort;\n    return ll[ll.length / 2];\n}\nunittest\n{\n    alias candidate\
    \ = median;\n\n    assert(candidate([3L, 1L, 2L, 4L, 5L]) == 3L);\n    assert(candidate([-10L,\
    \ 4L, 6L, 1000L, 10L, 20L]) == 8.0);\n    assert(candidate([5L]) == 5L);\n   \
    \ assert(candidate([6L, 5L]) == 5.5);\n    assert(candidate([8L, 1L, 3L, 9L, 9L,\
    \ 2L, 7L]) == 7L);\n}\nvoid main(){}"
  status: SyntaxError
  stderr: 'b''Error: cannot find source code for runtime library file \''object.d\''\n       dmd
    might not be correctly installed. Run \''dmd -man\'' for installation instructions.\nimport
    path[0] = /tmp\nFailed: ["dmd", "-unittest", "-v", "-o-", "/tmp/tmp7ucnadw7.d",
    "-I/tmp"]\n'''
  stdout: b''
  timestamp: 1659792380
- exit_code: 1
  program: "import std.math;\n/*\nReturn median of elements in the list l.\n    >>>\
    \ median([3L, 1L, 2L, 4L, 5L])\n    3L\n    >>> median([-10L, 4L, 6L, 1000L, 10L,\
    \ 20L])\n    15.0\n    \n*/\nfloat median(long[] l) \n{\n    long[] sorted = l.dup;\n\
    \    sorted.sort;\n    int n = sorted.length;\n    if (n % 2 == 1) {\n       \
    \ return sorted[n / 2];\n    } else {\n        return (sorted[n / 2 - 1] + sorted[n\
    \ / 2]) / 2.0;\n    }\n}\nunittest\n{\n    alias candidate = median;\n\n    assert(candidate([3L,\
    \ 1L, 2L, 4L, 5L]) == 3L);\n    assert(candidate([-10L, 4L, 6L, 1000L, 10L, 20L])\
    \ == 8.0);\n    assert(candidate([5L]) == 5L);\n    assert(candidate([6L, 5L])\
    \ == 5.5);\n    assert(candidate([8L, 1L, 3L, 9L, 9L, 2L, 7L]) == 7L);\n}\nvoid\
    \ main(){}"
  status: SyntaxError
  stderr: 'b''Error: cannot find source code for runtime library file \''object.d\''\n       dmd
    might not be correctly installed. Run \''dmd -man\'' for installation instructions.\nimport
    path[0] = /tmp\nFailed: ["dmd", "-unittest", "-v", "-o-", "/tmp/tmpkf7i4qle.d",
    "-I/tmp"]\n'''
  stdout: b''
  timestamp: 1659792379
- exit_code: 1
  program: "import std.math;\n/*\nReturn median of elements in the list l.\n    >>>\
    \ median([3L, 1L, 2L, 4L, 5L])\n    3L\n    >>> median([-10L, 4L, 6L, 1000L, 10L,\
    \ 20L])\n    15.0\n    \n*/\nfloat median(long[] l) \n{\n    long[] sorted = l.dup;\n\
    \    sorted.sort;\n    int n = sorted.length;\n    if (n % 2 == 1)\n        return\
    \ sorted[n / 2];\n    else\n        return (sorted[n / 2 - 1] + sorted[n / 2])\
    \ / 2.0;\n}\nunittest\n{\n    alias candidate = median;\n\n    assert(candidate([3L,\
    \ 1L, 2L, 4L, 5L]) == 3L);\n    assert(candidate([-10L, 4L, 6L, 1000L, 10L, 20L])\
    \ == 8.0);\n    assert(candidate([5L]) == 5L);\n    assert(candidate([6L, 5L])\
    \ == 5.5);\n    assert(candidate([8L, 1L, 3L, 9L, 9L, 2L, 7L]) == 7L);\n}\nvoid\
    \ main(){}"
  status: SyntaxError
  stderr: 'b''Error: cannot find source code for runtime library file \''object.d\''\n       dmd
    might not be correctly installed. Run \''dmd -man\'' for installation instructions.\nimport
    path[0] = /tmp\nFailed: ["dmd", "-unittest", "-v", "-o-", "/tmp/tmpigo4kpie.d",
    "-I/tmp"]\n'''
  stdout: b''
  timestamp: 1659792379
- exit_code: 1
  program: "import std.math;\n/*\nReturn median of elements in the list l.\n    >>>\
    \ median([3L, 1L, 2L, 4L, 5L])\n    3L\n    >>> median([-10L, 4L, 6L, 1000L, 10L,\
    \ 20L])\n    15.0\n    \n*/\nfloat median(long[] l) \n{\n    long[] sorted = l.dup.sort;\n\
    \    int mid = l.length / 2;\n    if (l.length % 2 == 0)\n        return (sorted[mid]\
    \ + sorted[mid - 1]) / 2.0;\n    else\n        return sorted[mid];\n}\nunittest\n\
    {\n    alias candidate = median;\n\n    assert(candidate([3L, 1L, 2L, 4L, 5L])\
    \ == 3L);\n    assert(candidate([-10L, 4L, 6L, 1000L, 10L, 20L]) == 8.0);\n  \
    \  assert(candidate([5L]) == 5L);\n    assert(candidate([6L, 5L]) == 5.5);\n \
    \   assert(candidate([8L, 1L, 3L, 9L, 9L, 2L, 7L]) == 7L);\n}\nvoid main(){}"
  status: SyntaxError
  stderr: 'b''Error: cannot find source code for runtime library file \''object.d\''\n       dmd
    might not be correctly installed. Run \''dmd -man\'' for installation instructions.\nimport
    path[0] = /tmp\nFailed: ["dmd", "-unittest", "-v", "-o-", "/tmp/tmp12axy3a6.d",
    "-I/tmp"]\n'''
  stdout: b''
  timestamp: 1659792380
- exit_code: 1
  program: "import std.math;\n/*\nReturn median of elements in the list l.\n    >>>\
    \ median([3L, 1L, 2L, 4L, 5L])\n    3L\n    >>> median([-10L, 4L, 6L, 1000L, 10L,\
    \ 20L])\n    15.0\n    \n*/\nfloat median(long[] l) \n{\n    long[] sorted = l.dup;\n\
    \    sorted.sort;\n    int n = sorted.length;\n    if (n % 2 == 1) \n    {\n \
    \       return sorted[n / 2];\n    }\n    else \n    {\n        return (sorted[n\
    \ / 2 - 1] + sorted[n / 2]) / 2.0;\n    }\n}\nunittest\n{\n    alias candidate\
    \ = median;\n\n    assert(candidate([3L, 1L, 2L, 4L, 5L]) == 3L);\n    assert(candidate([-10L,\
    \ 4L, 6L, 1000L, 10L, 20L]) == 8.0);\n    assert(candidate([5L]) == 5L);\n   \
    \ assert(candidate([6L, 5L]) == 5.5);\n    assert(candidate([8L, 1L, 3L, 9L, 9L,\
    \ 2L, 7L]) == 7L);\n}\nvoid main(){}"
  status: SyntaxError
  stderr: 'b''Error: cannot find source code for runtime library file \''object.d\''\n       dmd
    might not be correctly installed. Run \''dmd -man\'' for installation instructions.\nimport
    path[0] = /tmp\nFailed: ["dmd", "-unittest", "-v", "-o-", "/tmp/tmp3zg3isx2.d",
    "-I/tmp"]\n'''
  stdout: b''
  timestamp: 1659792380
- exit_code: 1
  program: "import std.math;\n/*\nReturn median of elements in the list l.\n    >>>\
    \ median([3L, 1L, 2L, 4L, 5L])\n    3L\n    >>> median([-10L, 4L, 6L, 1000L, 10L,\
    \ 20L])\n    15.0\n    \n*/\nfloat median(long[] l) \n{\n    long[] sorted = l.dup;\n\
    \    sorted.sort;\n    if (sorted.length % 2 == 1)\n        return sorted[sorted.length\
    \ / 2];\n    else\n        return (sorted[sorted.length / 2 - 1] + sorted[sorted.length\
    \ / 2]) / 2.0;\n}\nunittest\n{\n    alias candidate = median;\n\n    assert(candidate([3L,\
    \ 1L, 2L, 4L, 5L]) == 3L);\n    assert(candidate([-10L, 4L, 6L, 1000L, 10L, 20L])\
    \ == 8.0);\n    assert(candidate([5L]) == 5L);\n    assert(candidate([6L, 5L])\
    \ == 5.5);\n    assert(candidate([8L, 1L, 3L, 9L, 9L, 2L, 7L]) == 7L);\n}\nvoid\
    \ main(){}"
  status: SyntaxError
  stderr: 'b''Error: cannot find source code for runtime library file \''object.d\''\n       dmd
    might not be correctly installed. Run \''dmd -man\'' for installation instructions.\nimport
    path[0] = /tmp\nFailed: ["dmd", "-unittest", "-v", "-o-", "/tmp/tmprjc273gp.d",
    "-I/tmp"]\n'''
  stdout: b''
  timestamp: 1659792379
- exit_code: 1
  program: "import std.math;\n/*\nReturn median of elements in the list l.\n    >>>\
    \ median([3L, 1L, 2L, 4L, 5L])\n    3L\n    >>> median([-10L, 4L, 6L, 1000L, 10L,\
    \ 20L])\n    15.0\n    \n*/\nfloat median(long[] l) \n{\n    long[] l2 = l[0..$];\n\
    \    sort(l2);\n    int n = l2.length;\n    if (n % 2 == 1)\n        return l2[n\
    \ / 2];\n    else\n        return (l2[n / 2 - 1] + l2[n / 2]) / 2.0;\n}\nunittest\n\
    {\n    alias candidate = median;\n\n    assert(candidate([3L, 1L, 2L, 4L, 5L])\
    \ == 3L);\n    assert(candidate([-10L, 4L, 6L, 1000L, 10L, 20L]) == 8.0);\n  \
    \  assert(candidate([5L]) == 5L);\n    assert(candidate([6L, 5L]) == 5.5);\n \
    \   assert(candidate([8L, 1L, 3L, 9L, 9L, 2L, 7L]) == 7L);\n}\nvoid main(){}"
  status: SyntaxError
  stderr: 'b''Error: cannot find source code for runtime library file \''object.d\''\n       dmd
    might not be correctly installed. Run \''dmd -man\'' for installation instructions.\nimport
    path[0] = /tmp\nFailed: ["dmd", "-unittest", "-v", "-o-", "/tmp/tmpi6kzxz3e.d",
    "-I/tmp"]\n'''
  stdout: b''
  timestamp: 1659792380
- exit_code: 1
  program: "import std.math;\n/*\nReturn median of elements in the list l.\n    >>>\
    \ median([3L, 1L, 2L, 4L, 5L])\n    3L\n    >>> median([-10L, 4L, 6L, 1000L, 10L,\
    \ 20L])\n    15.0\n    \n*/\nfloat median(long[] l) \n{\n    long[] sorted = l.dup;\n\
    \    sorted.sort;\n    if (sorted.length % 2 == 1)\n        return sorted[sorted.length\
    \ / 2];\n    else\n        return (sorted[sorted.length / 2 - 1] + sorted[sorted.length\
    \ / 2]) / 2.0;\n}\n/*\nReturn the mean of elements in the list l.\n    >>> mean([3L,\
    \ 1L, 2L, 4L, 5L])\n    3.0\n    >>> mean([-10L, 4L, 6L, 1000L, 10L, 20L])\n \
    \   145.0\n*/\nfloat mean(long[] l) \n{\n    long sum = 0;\n    foreach (long\
    \ i; l)\n        sum += i;\n    return sum / l.length;\n}\n/*\nReturn the standard\
    \ deviation of elements in the list l.\n    >>> stddev([3L, 1L, 2L, 4L, 5L])\n\
    \    1.5811388300841898\n    >>> stddev([-10L, 4L, 6L, 1000L, 10L, 20L])\n   \
    \ 538.8166538263927\n*/\nfloat stddev(long[] l) \n{\n    float m = mean(l);\n\
    \    float sum = 0;\n    foreach (long i; l)\n        sum += (i - m) * (i - m);\n\
    \    return sqrt(sum / l.length);\n}\n/*\nReturn the variance of elements in the\
    \ list l.\n    >>> variance([3L, 1L, 2L, 4L, 5L])\n    2.5\n    >>> variance([-10L,\
    \ 4L, 6L, 1000L, 10L, 20L])\n    290555.55555555557\n*/\nfloat variance(long[]\
    \ l) \n{\n    float m = mean(l);\n    float sum = 0;\n    foreach (long i; l)\n\
    \        sum += (i - m) * (i - m);\n    return sum / l.length;\n}\n/*\nReturn\
    \ the standard error of elements in the list l.\n    >>> stderr([3L,\nunittest\n\
    {\n    alias candidate = median;\n\n    assert(candidate([3L, 1L, 2L, 4L, 5L])\
    \ == 3L);\n    assert(candidate([-10L, 4L, 6L, 1000L, 10L, 20L]) == 8.0);\n  \
    \  assert(candidate([5L]) == 5L);\n    assert(candidate([6L, 5L]) == 5.5);\n \
    \   assert(candidate([8L, 1L, 3L, 9L, 9L, 2L, 7L]) == 7L);\n}\nvoid main(){}"
  status: SyntaxError
  stderr: 'b''/tmp/tmp8vkmkotb.d(63): Error: unterminated /* */ comment\nFailed: ["dmd",
    "-unittest", "-v", "-o-", "/tmp/tmp8vkmkotb.d", "-I/tmp"]\n'''
  stdout: b''
  timestamp: 1659792380
- exit_code: 1
  program: "import std.math;\n/*\nReturn median of elements in the list l.\n    >>>\
    \ median([3L, 1L, 2L, 4L, 5L])\n    3L\n    >>> median([-10L, 4L, 6L, 1000L, 10L,\
    \ 20L])\n    15.0\n    \n*/\nfloat median(long[] l) \n{\n    long[] sorted = l.dup;\n\
    \    sorted.sort;\n    int n = sorted.length;\n    if (n % 2 == 1) {\n       \
    \ return sorted[n / 2];\n    } else {\n        return (sorted[n / 2 - 1] + sorted[n\
    \ / 2]) / 2.0;\n    }\n}\nunittest\n{\n    alias candidate = median;\n\n    assert(candidate([3L,\
    \ 1L, 2L, 4L, 5L]) == 3L);\n    assert(candidate([-10L, 4L, 6L, 1000L, 10L, 20L])\
    \ == 8.0);\n    assert(candidate([5L]) == 5L);\n    assert(candidate([6L, 5L])\
    \ == 5.5);\n    assert(candidate([8L, 1L, 3L, 9L, 9L, 2L, 7L]) == 7L);\n}\nvoid\
    \ main(){}"
  status: SyntaxError
  stderr: 'b''Error: cannot find source code for runtime library file \''object.d\''\n       dmd
    might not be correctly installed. Run \''dmd -man\'' for installation instructions.\nimport
    path[0] = /tmp\nFailed: ["dmd", "-unittest", "-v", "-o-", "/tmp/tmpkf7i4qle.d",
    "-I/tmp"]\n'''
  stdout: b''
  timestamp: 1659792379
- exit_code: 1
  program: "import std.math;\n/*\nReturn median of elements in the list l.\n    >>>\
    \ median([3L, 1L, 2L, 4L, 5L])\n    3L\n    >>> median([-10L, 4L, 6L, 1000L, 10L,\
    \ 20L])\n    15.0\n    \n*/\nfloat median(long[] l) \n{\n    long[] sorted = l.dup;\n\
    \    sorted.sort;\n    int len = sorted.length;\n    if (len % 2 == 0)\n    {\n\
    \        return (sorted[len / 2 - 1] + sorted[len / 2]) / 2.0;\n    }\n    else\n\
    \    {\n        return sorted[len / 2];\n    }\n}\nunittest\n{\n    alias candidate\
    \ = median;\n\n    assert(candidate([3L, 1L, 2L, 4L, 5L]) == 3L);\n    assert(candidate([-10L,\
    \ 4L, 6L, 1000L, 10L, 20L]) == 8.0);\n    assert(candidate([5L]) == 5L);\n   \
    \ assert(candidate([6L, 5L]) == 5.5);\n    assert(candidate([8L, 1L, 3L, 9L, 9L,\
    \ 2L, 7L]) == 7L);\n}\nvoid main(){}"
  status: SyntaxError
  stderr: 'b''Error: cannot find source code for runtime library file \''object.d\''\n       dmd
    might not be correctly installed. Run \''dmd -man\'' for installation instructions.\nimport
    path[0] = /tmp\nFailed: ["dmd", "-unittest", "-v", "-o-", "/tmp/tmp1laajukv.d",
    "-I/tmp"]\n'''
  stdout: b''
  timestamp: 1659792379
- exit_code: 1
  program: "import std.math;\n/*\nReturn median of elements in the list l.\n    >>>\
    \ median([3L, 1L, 2L, 4L, 5L])\n    3L\n    >>> median([-10L, 4L, 6L, 1000L, 10L,\
    \ 20L])\n    15.0\n    \n*/\nfloat median(long[] l) \n{\n    long[] sorted = l.dup.sort;\n\
    \    int len = sorted.length;\n    if (len % 2 == 1)\n        return sorted[len\
    \ / 2];\n    else\n        return (sorted[len / 2 - 1] + sorted[len / 2]) / 2.0;\n\
    }\nunittest\n{\n    alias candidate = median;\n\n    assert(candidate([3L, 1L,\
    \ 2L, 4L, 5L]) == 3L);\n    assert(candidate([-10L, 4L, 6L, 1000L, 10L, 20L])\
    \ == 8.0);\n    assert(candidate([5L]) == 5L);\n    assert(candidate([6L, 5L])\
    \ == 5.5);\n    assert(candidate([8L, 1L, 3L, 9L, 9L, 2L, 7L]) == 7L);\n}\nvoid\
    \ main(){}"
  status: SyntaxError
  stderr: 'b''Error: cannot find source code for runtime library file \''object.d\''\n       dmd
    might not be correctly installed. Run \''dmd -man\'' for installation instructions.\nimport
    path[0] = /tmp\nFailed: ["dmd", "-unittest", "-v", "-o-", "/tmp/tmpvztcjoe4.d",
    "-I/tmp"]\n'''
  stdout: b''
  timestamp: 1659792380
- exit_code: 1
  program: "import std.math;\n/*\nReturn median of elements in the list l.\n    >>>\
    \ median([3L, 1L, 2L, 4L, 5L])\n    3L\n    >>> median([-10L, 4L, 6L, 1000L, 10L,\
    \ 20L])\n    15.0\n    \n*/\nfloat median(long[] l) \n{\n    long[] sorted = l.dup.sort;\n\
    \    int mid = l.length / 2;\n    if (l.length % 2 == 0) {\n        return (sorted[mid]\
    \ + sorted[mid-1]) / 2.0;\n    }\n    else {\n        return sorted[mid];\n  \
    \  }\n}\nunittest\n{\n    alias candidate = median;\n\n    assert(candidate([3L,\
    \ 1L, 2L, 4L, 5L]) == 3L);\n    assert(candidate([-10L, 4L, 6L, 1000L, 10L, 20L])\
    \ == 8.0);\n    assert(candidate([5L]) == 5L);\n    assert(candidate([6L, 5L])\
    \ == 5.5);\n    assert(candidate([8L, 1L, 3L, 9L, 9L, 2L, 7L]) == 7L);\n}\nvoid\
    \ main(){}"
  status: SyntaxError
  stderr: 'b''Error: cannot find source code for runtime library file \''object.d\''\n       dmd
    might not be correctly installed. Run \''dmd -man\'' for installation instructions.\nimport
    path[0] = /tmp\nFailed: ["dmd", "-unittest", "-v", "-o-", "/tmp/tmp92sjmefa.d",
    "-I/tmp"]\n'''
  stdout: b''
  timestamp: 1659792380
- exit_code: 1
  program: "import std.math;\n/*\nReturn median of elements in the list l.\n    >>>\
    \ median([3L, 1L, 2L, 4L, 5L])\n    3L\n    >>> median([-10L, 4L, 6L, 1000L, 10L,\
    \ 20L])\n    15.0\n    \n*/\nfloat median(long[] l) \n{\n    long[] sorted = l.dup;\n\
    \    sorted.sort;\n    if (sorted.length % 2 == 1)\n        return sorted[sorted.length\
    \ / 2];\n    else\n        return (sorted[sorted.length / 2 - 1] + sorted[sorted.length\
    \ / 2]) / 2.0;\n}\nunittest\n{\n    alias candidate = median;\n\n    assert(candidate([3L,\
    \ 1L, 2L, 4L, 5L]) == 3L);\n    assert(candidate([-10L, 4L, 6L, 1000L, 10L, 20L])\
    \ == 8.0);\n    assert(candidate([5L]) == 5L);\n    assert(candidate([6L, 5L])\
    \ == 5.5);\n    assert(candidate([8L, 1L, 3L, 9L, 9L, 2L, 7L]) == 7L);\n}\nvoid\
    \ main(){}"
  status: SyntaxError
  stderr: 'b''Error: cannot find source code for runtime library file \''object.d\''\n       dmd
    might not be correctly installed. Run \''dmd -man\'' for installation instructions.\nimport
    path[0] = /tmp\nFailed: ["dmd", "-unittest", "-v", "-o-", "/tmp/tmprjc273gp.d",
    "-I/tmp"]\n'''
  stdout: b''
  timestamp: 1659792379
- exit_code: 1
  program: "import std.math;\n/*\nReturn median of elements in the list l.\n    >>>\
    \ median([3L, 1L, 2L, 4L, 5L])\n    3L\n    >>> median([-10L, 4L, 6L, 1000L, 10L,\
    \ 20L])\n    15.0\n    \n*/\nfloat median(long[] l) \n{\n    long[] sorted = l.dup;\n\
    \    sorted.sort;\n    if(sorted.length % 2 == 0)\n    {\n        return (sorted[sorted.length\
    \ / 2] + sorted[sorted.length / 2 - 1]) / 2.0;\n    }\n    else\n    {\n     \
    \   return sorted[sorted.length / 2];\n    }\n}\nunittest\n{\n    alias candidate\
    \ = median;\n\n    assert(candidate([3L, 1L, 2L, 4L, 5L]) == 3L);\n    assert(candidate([-10L,\
    \ 4L, 6L, 1000L, 10L, 20L]) == 8.0);\n    assert(candidate([5L]) == 5L);\n   \
    \ assert(candidate([6L, 5L]) == 5.5);\n    assert(candidate([8L, 1L, 3L, 9L, 9L,\
    \ 2L, 7L]) == 7L);\n}\nvoid main(){}"
  status: SyntaxError
  stderr: 'b''Error: cannot find source code for runtime library file \''object.d\''\n       dmd
    might not be correctly installed. Run \''dmd -man\'' for installation instructions.\nimport
    path[0] = /tmp\nFailed: ["dmd", "-unittest", "-v", "-o-", "/tmp/tmpd1rpgf3a.d",
    "-I/tmp"]\n'''
  stdout: b''
  timestamp: 1659792380
- exit_code: 1
  program: "import std.math;\n/*\nReturn median of elements in the list l.\n    >>>\
    \ median([3L, 1L, 2L, 4L, 5L])\n    3L\n    >>> median([-10L, 4L, 6L, 1000L, 10L,\
    \ 20L])\n    15.0\n    \n*/\nfloat median(long[] l) \n{\n    long[] sorted = l.dup;\n\
    \    sorted.sort;\n    if (sorted.length % 2 == 1)\n        return sorted[sorted.length\
    \ / 2];\n    else\n        return (sorted[sorted.length / 2 - 1] + sorted[sorted.length\
    \ / 2]) / 2.0;\n}\nunittest\n{\n    alias candidate = median;\n\n    assert(candidate([3L,\
    \ 1L, 2L, 4L, 5L]) == 3L);\n    assert(candidate([-10L, 4L, 6L, 1000L, 10L, 20L])\
    \ == 8.0);\n    assert(candidate([5L]) == 5L);\n    assert(candidate([6L, 5L])\
    \ == 5.5);\n    assert(candidate([8L, 1L, 3L, 9L, 9L, 2L, 7L]) == 7L);\n}\nvoid\
    \ main(){}"
  status: SyntaxError
  stderr: 'b''Error: cannot find source code for runtime library file \''object.d\''\n       dmd
    might not be correctly installed. Run \''dmd -man\'' for installation instructions.\nimport
    path[0] = /tmp\nFailed: ["dmd", "-unittest", "-v", "-o-", "/tmp/tmprjc273gp.d",
    "-I/tmp"]\n'''
  stdout: b''
  timestamp: 1659792379
- exit_code: 1
  program: "import std.math;\n/*\nReturn median of elements in the list l.\n    >>>\
    \ median([3L, 1L, 2L, 4L, 5L])\n    3L\n    >>> median([-10L, 4L, 6L, 1000L, 10L,\
    \ 20L])\n    15.0\n    \n*/\nfloat median(long[] l) \n{\n    long[] sorted = l.dup.sort;\n\
    \    long n = l.length;\n    if (n % 2 == 1)\n    {\n        return sorted[n /\
    \ 2];\n    }\n    else\n    {\n        return (sorted[n / 2 - 1] + sorted[n /\
    \ 2]) / 2.0;\n    }\n}\nunittest\n{\n    alias candidate = median;\n\n    assert(candidate([3L,\
    \ 1L, 2L, 4L, 5L]) == 3L);\n    assert(candidate([-10L, 4L, 6L, 1000L, 10L, 20L])\
    \ == 8.0);\n    assert(candidate([5L]) == 5L);\n    assert(candidate([6L, 5L])\
    \ == 5.5);\n    assert(candidate([8L, 1L, 3L, 9L, 9L, 2L, 7L]) == 7L);\n}\nvoid\
    \ main(){}"
  status: SyntaxError
  stderr: 'b''Error: cannot find source code for runtime library file \''object.d\''\n       dmd
    might not be correctly installed. Run \''dmd -man\'' for installation instructions.\nimport
    path[0] = /tmp\nFailed: ["dmd", "-unittest", "-v", "-o-", "/tmp/tmpk_p_wxol.d",
    "-I/tmp"]\n'''
  stdout: b''
  timestamp: 1659792380
- exit_code: 1
  program: "import std.math;\n/*\nReturn median of elements in the list l.\n    >>>\
    \ median([3L, 1L, 2L, 4L, 5L])\n    3L\n    >>> median([-10L, 4L, 6L, 1000L, 10L,\
    \ 20L])\n    15.0\n    \n*/\nfloat median(long[] l) \n{\n    long[] sorted = l.dup;\n\
    \    sorted.sort;\n    if (sorted.length % 2 == 1) \n    {\n        return sorted[sorted.length\
    \ / 2];\n    } \n    else \n    {\n        return (sorted[sorted.length / 2 -\
    \ 1] + sorted[sorted.length / 2]) / 2.0;\n    }\n}\nunittest\n{\n    alias candidate\
    \ = median;\n\n    assert(candidate([3L, 1L, 2L, 4L, 5L]) == 3L);\n    assert(candidate([-10L,\
    \ 4L, 6L, 1000L, 10L, 20L]) == 8.0);\n    assert(candidate([5L]) == 5L);\n   \
    \ assert(candidate([6L, 5L]) == 5.5);\n    assert(candidate([8L, 1L, 3L, 9L, 9L,\
    \ 2L, 7L]) == 7L);\n}\nvoid main(){}"
  status: SyntaxError
  stderr: 'b''Error: cannot find source code for runtime library file \''object.d\''\n       dmd
    might not be correctly installed. Run \''dmd -man\'' for installation instructions.\nimport
    path[0] = /tmp\nFailed: ["dmd", "-unittest", "-v", "-o-", "/tmp/tmpm0etr6b5.d",
    "-I/tmp"]\n'''
  stdout: b''
  timestamp: 1659792379
- exit_code: 1
  program: "import std.math;\n/*\nReturn median of elements in the list l.\n    >>>\
    \ median([3L, 1L, 2L, 4L, 5L])\n    3L\n    >>> median([-10L, 4L, 6L, 1000L, 10L,\
    \ 20L])\n    15.0\n    \n*/\nfloat median(long[] l) \n{\n    long[] sorted = l.dup;\n\
    \    sorted.sort;\n    int n = sorted.length;\n    if (n % 2 == 1) \n    {\n \
    \       return sorted[n / 2];\n    }\n    else \n    {\n        return (sorted[n\
    \ / 2 - 1] + sorted[n / 2]) / 2.0;\n    }\n}\nunittest\n{\n    alias candidate\
    \ = median;\n\n    assert(candidate([3L, 1L, 2L, 4L, 5L]) == 3L);\n    assert(candidate([-10L,\
    \ 4L, 6L, 1000L, 10L, 20L]) == 8.0);\n    assert(candidate([5L]) == 5L);\n   \
    \ assert(candidate([6L, 5L]) == 5.5);\n    assert(candidate([8L, 1L, 3L, 9L, 9L,\
    \ 2L, 7L]) == 7L);\n}\nvoid main(){}"
  status: SyntaxError
  stderr: 'b''Error: cannot find source code for runtime library file \''object.d\''\n       dmd
    might not be correctly installed. Run \''dmd -man\'' for installation instructions.\nimport
    path[0] = /tmp\nFailed: ["dmd", "-unittest", "-v", "-o-", "/tmp/tmp3zg3isx2.d",
    "-I/tmp"]\n'''
  stdout: b''
  timestamp: 1659792380
- exit_code: 1
  program: "import std.math;\n/*\nReturn median of elements in the list l.\n    >>>\
    \ median([3L, 1L, 2L, 4L, 5L])\n    3L\n    >>> median([-10L, 4L, 6L, 1000L, 10L,\
    \ 20L])\n    15.0\n    \n*/\nfloat median(long[] l) \n{\n    long[] sorted = l[];\n\
    \    sort(sorted);\n    int mid = l.length / 2;\n    if (l.length % 2 == 0) \n\
    \    {\n        return (sorted[mid] + sorted[mid - 1]) / 2.0;\n    } \n    else\
    \ \n    {\n        return sorted[mid];\n    }\n}\nunittest\n{\n    alias candidate\
    \ = median;\n\n    assert(candidate([3L, 1L, 2L, 4L, 5L]) == 3L);\n    assert(candidate([-10L,\
    \ 4L, 6L, 1000L, 10L, 20L]) == 8.0);\n    assert(candidate([5L]) == 5L);\n   \
    \ assert(candidate([6L, 5L]) == 5.5);\n    assert(candidate([8L, 1L, 3L, 9L, 9L,\
    \ 2L, 7L]) == 7L);\n}\nvoid main(){}"
  status: SyntaxError
  stderr: 'b''Error: cannot find source code for runtime library file \''object.d\''\n       dmd
    might not be correctly installed. Run \''dmd -man\'' for installation instructions.\nimport
    path[0] = /tmp\nFailed: ["dmd", "-unittest", "-v", "-o-", "/tmp/tmpt4lp32hb.d",
    "-I/tmp"]\n'''
  stdout: b''
  timestamp: 1659792380
- exit_code: 1
  program: "import std.math;\n/*\nReturn median of elements in the list l.\n    >>>\
    \ median([3L, 1L, 2L, 4L, 5L])\n    3L\n    >>> median([-10L, 4L, 6L, 1000L, 10L,\
    \ 20L])\n    15.0\n    \n*/\nfloat median(long[] l) \n{\n    long[] sorted = l.dup;\n\
    \    sorted.sort;\n    int n = sorted.length;\n    if (n % 2 == 1)\n        return\
    \ sorted[n / 2];\n    else\n        return (sorted[n / 2 - 1] + sorted[n / 2])\
    \ / 2.0;\n}\nunittest\n{\n    alias candidate = median;\n\n    assert(candidate([3L,\
    \ 1L, 2L, 4L, 5L]) == 3L);\n    assert(candidate([-10L, 4L, 6L, 1000L, 10L, 20L])\
    \ == 8.0);\n    assert(candidate([5L]) == 5L);\n    assert(candidate([6L, 5L])\
    \ == 5.5);\n    assert(candidate([8L, 1L, 3L, 9L, 9L, 2L, 7L]) == 7L);\n}\nvoid\
    \ main(){}"
  status: SyntaxError
  stderr: 'b''Error: cannot find source code for runtime library file \''object.d\''\n       dmd
    might not be correctly installed. Run \''dmd -man\'' for installation instructions.\nimport
    path[0] = /tmp\nFailed: ["dmd", "-unittest", "-v", "-o-", "/tmp/tmpigo4kpie.d",
    "-I/tmp"]\n'''
  stdout: b''
  timestamp: 1659792379
- exit_code: 1
  program: "import std.math;\n/*\nReturn median of elements in the list l.\n    >>>\
    \ median([3L, 1L, 2L, 4L, 5L])\n    3L\n    >>> median([-10L, 4L, 6L, 1000L, 10L,\
    \ 20L])\n    15.0\n    \n*/\nfloat median(long[] l) \n{\n    long[] sorted = sort(l);\n\
    \    int n = l.length;\n    if (n % 2 == 1) \n    {\n        return sorted[n /\
    \ 2];\n    }\n    else \n    {\n        return (sorted[n / 2 - 1] + sorted[n /\
    \ 2]) / 2.0;\n    }\n}\n/*\nReturn mean of elements in the list l.\n    >>> mean([3L,\
    \ 1L, 2L, 4L, 5L])\n    3.0\n    >>> mean([-10L, 4L, 6L, 1000L, 10L, 20L])\n \
    \   156.66666666666666\n*/\nfloat mean(long[] l) \n{\n    long sum = 0;\n    foreach\
    \ (long x; l) \n    {\n        sum += x;\n    }\n    return sum / (float)l.length;\n\
    }\n/*\nReturn mode of elements in the list l.\n    >>> mode([3L, 1L, 2L, 4L, 5L])\n\
    \    [1L, 2L, 3L, 4L, 5L]\n    >>> mode([-10L, 4L, 6L, 1000L, 10L, 20L, -10L,\
    \ 4L, 6L, 1000L, 10L, 20L])\n    [-10L, 4L, 6L, 10L, 20L, 1000L]\n*/\nlong[] mode(long[]\
    \ l) \n{\n    long[] count = new long[l.length];\n    long[] mode = new long[l.length];\n\
    \    int modeCount = 0;\n    foreach (long x; l) \n    {\n        int i = 0;\n\
    \        foreach (long y; l) \n        {\n            if (x == y) \n         \
    \   {\n                count[i]++;\n            }\n            i++;\n        }\n\
    \    }\n    int max = 0;\n    foreach (long x; count) \n    {\n        if (x >\
    \ max) \n        {\n            max = x;\n        }\n    }\n    int i = 0;\n \
    \   foreach (long x; l) \n    {\n        if (count[i]\nunittest\n{\n    alias\
    \ candidate = median;\n\n    assert(candidate([3L, 1L, 2L, 4L, 5L]) == 3L);\n\
    \    assert(candidate([-10L, 4L, 6L, 1000L, 10L, 20L]) == 8.0);\n    assert(candidate([5L])\
    \ == 5L);\n    assert(candidate([6L, 5L]) == 5.5);\n    assert(candidate([8L,\
    \ 1L, 3L, 9L, 9L, 2L, 7L]) == 7L);\n}\nvoid main(){}"
  status: SyntaxError
  stderr: 'b''/tmp/tmpvequ8jaw.d(37): Error: C style cast illegal, use cast(float)l.length\n/tmp/tmpvequ8jaw.d(75):
    Error: found \''unittest\'' when expecting \'')\''\n/tmp/tmpvequ8jaw.d(85): Error:
    found \''EOF\'' when expecting \''}\'' following compound statement\n/tmp/tmpvequ8jaw.d(85):
    Error: found \''EOF\'' when expecting \''}\'' following compound statement\nFailed:
    ["dmd", "-unittest", "-v", "-o-", "/tmp/tmpvequ8jaw.d", "-I/tmp"]\n'''
  stdout: b''
  timestamp: 1659792380
- exit_code: 1
  program: "import std.math;\n/*\nReturn median of elements in the list l.\n    >>>\
    \ median([3L, 1L, 2L, 4L, 5L])\n    3L\n    >>> median([-10L, 4L, 6L, 1000L, 10L,\
    \ 20L])\n    15.0\n    \n*/\nfloat median(long[] l) \n{\n    long[] temp = l.dup;\n\
    \    temp.sort;\n    int len = temp.length;\n    if (len % 2 == 0) \n    {\n \
    \       return (temp[len / 2 - 1] + temp[len / 2]) / 2.0;\n    } \n    else \n\
    \    {\n        return temp[len / 2];\n    }\n}\nunittest\n{\n    alias candidate\
    \ = median;\n\n    assert(candidate([3L, 1L, 2L, 4L, 5L]) == 3L);\n    assert(candidate([-10L,\
    \ 4L, 6L, 1000L, 10L, 20L]) == 8.0);\n    assert(candidate([5L]) == 5L);\n   \
    \ assert(candidate([6L, 5L]) == 5.5);\n    assert(candidate([8L, 1L, 3L, 9L, 9L,\
    \ 2L, 7L]) == 7L);\n}\nvoid main(){}"
  status: SyntaxError
  stderr: 'b''Error: cannot find source code for runtime library file \''object.d\''\n       dmd
    might not be correctly installed. Run \''dmd -man\'' for installation instructions.\nimport
    path[0] = /tmp\nFailed: ["dmd", "-unittest", "-v", "-o-", "/tmp/tmpi08a_8pr.d",
    "-I/tmp"]\n'''
  stdout: b''
  timestamp: 1659792379
- exit_code: 1
  program: "import std.math;\n/*\nReturn median of elements in the list l.\n    >>>\
    \ median([3L, 1L, 2L, 4L, 5L])\n    3L\n    >>> median([-10L, 4L, 6L, 1000L, 10L,\
    \ 20L])\n    15.0\n    \n*/\nfloat median(long[] l) \n{\n    long[] sorted = l.dup;\n\
    \    sorted.sort;\n    int n = sorted.length;\n    if (n % 2 == 1) \n    {\n \
    \       return sorted[n / 2];\n    } \n    else \n    {\n        return (sorted[n\
    \ / 2 - 1] + sorted[n / 2]) / 2.0;\n    }\n}\nunittest\n{\n    alias candidate\
    \ = median;\n\n    assert(candidate([3L, 1L, 2L, 4L, 5L]) == 3L);\n    assert(candidate([-10L,\
    \ 4L, 6L, 1000L, 10L, 20L]) == 8.0);\n    assert(candidate([5L]) == 5L);\n   \
    \ assert(candidate([6L, 5L]) == 5.5);\n    assert(candidate([8L, 1L, 3L, 9L, 9L,\
    \ 2L, 7L]) == 7L);\n}\nvoid main(){}"
  status: SyntaxError
  stderr: 'b''Error: cannot find source code for runtime library file \''object.d\''\n       dmd
    might not be correctly installed. Run \''dmd -man\'' for installation instructions.\nimport
    path[0] = /tmp\nFailed: ["dmd", "-unittest", "-v", "-o-", "/tmp/tmphz52njnm.d",
    "-I/tmp"]\n'''
  stdout: b''
  timestamp: 1659792379
- exit_code: 1
  program: "import std.math;\n/*\nReturn median of elements in the list l.\n    >>>\
    \ median([3L, 1L, 2L, 4L, 5L])\n    3L\n    >>> median([-10L, 4L, 6L, 1000L, 10L,\
    \ 20L])\n    15.0\n    \n*/\nfloat median(long[] l) \n{\n    int n = l.length;\n\
    \    if (n == 0) \n    {\n        return 0.0;\n    }\n    else \n    {\n     \
    \   long[] sorted = l.dup;\n        sorted.sort;\n        if (n % 2 == 1) \n \
    \       {\n            return sorted[n / 2];\n        }\n        else \n     \
    \   {\n            return (sorted[n / 2 - 1] + sorted[n / 2]) / 2.0;\n       \
    \ }\n    }\n}\nunittest\n{\n    alias candidate = median;\n\n    assert(candidate([3L,\
    \ 1L, 2L, 4L, 5L]) == 3L);\n    assert(candidate([-10L, 4L, 6L, 1000L, 10L, 20L])\
    \ == 8.0);\n    assert(candidate([5L]) == 5L);\n    assert(candidate([6L, 5L])\
    \ == 5.5);\n    assert(candidate([8L, 1L, 3L, 9L, 9L, 2L, 7L]) == 7L);\n}\nvoid\
    \ main(){}"
  status: SyntaxError
  stderr: 'b''Error: cannot find source code for runtime library file \''object.d\''\n       dmd
    might not be correctly installed. Run \''dmd -man\'' for installation instructions.\nimport
    path[0] = /tmp\nFailed: ["dmd", "-unittest", "-v", "-o-", "/tmp/tmprb809q6z.d",
    "-I/tmp"]\n'''
  stdout: b''
  timestamp: 1659792380
- exit_code: 1
  program: "import std.math;\n/*\nReturn median of elements in the list l.\n    >>>\
    \ median([3L, 1L, 2L, 4L, 5L])\n    3L\n    >>> median([-10L, 4L, 6L, 1000L, 10L,\
    \ 20L])\n    15.0\n    \n*/\nfloat median(long[] l) \n{\n    long[] sorted = l.dup;\n\
    \    sorted.sort;\n    if (sorted.length % 2 == 1)\n        return sorted[sorted.length\
    \ / 2];\n    else\n        return (sorted[sorted.length / 2 - 1] + sorted[sorted.length\
    \ / 2]) / 2.0;\n}\nunittest\n{\n    alias candidate = median;\n\n    assert(candidate([3L,\
    \ 1L, 2L, 4L, 5L]) == 3L);\n    assert(candidate([-10L, 4L, 6L, 1000L, 10L, 20L])\
    \ == 8.0);\n    assert(candidate([5L]) == 5L);\n    assert(candidate([6L, 5L])\
    \ == 5.5);\n    assert(candidate([8L, 1L, 3L, 9L, 9L, 2L, 7L]) == 7L);\n}\nvoid\
    \ main(){}"
  status: SyntaxError
  stderr: 'b''Error: cannot find source code for runtime library file \''object.d\''\n       dmd
    might not be correctly installed. Run \''dmd -man\'' for installation instructions.\nimport
    path[0] = /tmp\nFailed: ["dmd", "-unittest", "-v", "-o-", "/tmp/tmprjc273gp.d",
    "-I/tmp"]\n'''
  stdout: b''
  timestamp: 1659792379
- exit_code: 1
  program: "import std.math;\n/*\nReturn median of elements in the list l.\n    >>>\
    \ median([3L, 1L, 2L, 4L, 5L])\n    3L\n    >>> median([-10L, 4L, 6L, 1000L, 10L,\
    \ 20L])\n    15.0\n    \n*/\nfloat median(long[] l) \n{\n    long[] sorted = l.dup;\n\
    \    sorted.sort;\n    int len = sorted.length;\n    if (len % 2 == 1)\n     \
    \   return sorted[len / 2];\n    else\n        return (sorted[len / 2 - 1] + sorted[len\
    \ / 2]) / 2.0;\n}\nunittest\n{\n    alias candidate = median;\n\n    assert(candidate([3L,\
    \ 1L, 2L, 4L, 5L]) == 3L);\n    assert(candidate([-10L, 4L, 6L, 1000L, 10L, 20L])\
    \ == 8.0);\n    assert(candidate([5L]) == 5L);\n    assert(candidate([6L, 5L])\
    \ == 5.5);\n    assert(candidate([8L, 1L, 3L, 9L, 9L, 2L, 7L]) == 7L);\n}\nvoid\
    \ main(){}"
  status: SyntaxError
  stderr: 'b''Error: cannot find source code for runtime library file \''object.d\''\n       dmd
    might not be correctly installed. Run \''dmd -man\'' for installation instructions.\nimport
    path[0] = /tmp\nFailed: ["dmd", "-unittest", "-v", "-o-", "/tmp/tmpqu6o2g51.d",
    "-I/tmp"]\n'''
  stdout: b''
  timestamp: 1659792380
- exit_code: 1
  program: "import std.math;\n/*\nReturn median of elements in the list l.\n    >>>\
    \ median([3L, 1L, 2L, 4L, 5L])\n    3L\n    >>> median([-10L, 4L, 6L, 1000L, 10L,\
    \ 20L])\n    15.0\n    \n*/\nfloat median(long[] l) \n{\n    long[] sorted = l.dup;\n\
    \    sorted.sort;\n    if (sorted.length % 2 == 1)\n    {\n        return sorted[sorted.length\
    \ / 2];\n    }\n    else\n    {\n        return (sorted[sorted.length / 2 - 1]\
    \ + sorted[sorted.length / 2]) / 2.0;\n    }\n}\nunittest\n{\n    alias candidate\
    \ = median;\n\n    assert(candidate([3L, 1L, 2L, 4L, 5L]) == 3L);\n    assert(candidate([-10L,\
    \ 4L, 6L, 1000L, 10L, 20L]) == 8.0);\n    assert(candidate([5L]) == 5L);\n   \
    \ assert(candidate([6L, 5L]) == 5.5);\n    assert(candidate([8L, 1L, 3L, 9L, 9L,\
    \ 2L, 7L]) == 7L);\n}\nvoid main(){}"
  status: SyntaxError
  stderr: 'b''Error: cannot find source code for runtime library file \''object.d\''\n       dmd
    might not be correctly installed. Run \''dmd -man\'' for installation instructions.\nimport
    path[0] = /tmp\nFailed: ["dmd", "-unittest", "-v", "-o-", "/tmp/tmpo96ljf_e.d",
    "-I/tmp"]\n'''
  stdout: b''
  timestamp: 1659792379
- exit_code: 1
  program: "import std.math;\n/*\nReturn median of elements in the list l.\n    >>>\
    \ median([3L, 1L, 2L, 4L, 5L])\n    3L\n    >>> median([-10L, 4L, 6L, 1000L, 10L,\
    \ 20L])\n    15.0\n    \n*/\nfloat median(long[] l) \n{\n    long[] sorted = l.dup;\n\
    \    sorted.sort;\n    if (sorted.length % 2 == 1)\n    {\n        return sorted[sorted.length\
    \ / 2];\n    }\n    else\n    {\n        return (sorted[sorted.length / 2 - 1]\
    \ + sorted[sorted.length / 2]) / 2.0;\n    }\n}\nunittest\n{\n    alias candidate\
    \ = median;\n\n    assert(candidate([3L, 1L, 2L, 4L, 5L]) == 3L);\n    assert(candidate([-10L,\
    \ 4L, 6L, 1000L, 10L, 20L]) == 8.0);\n    assert(candidate([5L]) == 5L);\n   \
    \ assert(candidate([6L, 5L]) == 5.5);\n    assert(candidate([8L, 1L, 3L, 9L, 9L,\
    \ 2L, 7L]) == 7L);\n}\nvoid main(){}"
  status: SyntaxError
  stderr: 'b''Error: cannot find source code for runtime library file \''object.d\''\n       dmd
    might not be correctly installed. Run \''dmd -man\'' for installation instructions.\nimport
    path[0] = /tmp\nFailed: ["dmd", "-unittest", "-v", "-o-", "/tmp/tmpo96ljf_e.d",
    "-I/tmp"]\n'''
  stdout: b''
  timestamp: 1659792379
- exit_code: 1
  program: "import std.math;\n/*\nReturn median of elements in the list l.\n    >>>\
    \ median([3L, 1L, 2L, 4L, 5L])\n    3L\n    >>> median([-10L, 4L, 6L, 1000L, 10L,\
    \ 20L])\n    15.0\n    \n*/\nfloat median(long[] l) \n{\n    long[] sorted = l.dup;\n\
    \    sorted.sort;\n    return (sorted[l.length / 2] + sorted[(l.length - 1) /\
    \ 2]) / 2.0;\n}\nunittest\n{\n    alias candidate = median;\n\n    assert(candidate([3L,\
    \ 1L, 2L, 4L, 5L]) == 3L);\n    assert(candidate([-10L, 4L, 6L, 1000L, 10L, 20L])\
    \ == 8.0);\n    assert(candidate([5L]) == 5L);\n    assert(candidate([6L, 5L])\
    \ == 5.5);\n    assert(candidate([8L, 1L, 3L, 9L, 9L, 2L, 7L]) == 7L);\n}\nvoid\
    \ main(){}"
  status: SyntaxError
  stderr: 'b''Error: cannot find source code for runtime library file \''object.d\''\n       dmd
    might not be correctly installed. Run \''dmd -man\'' for installation instructions.\nimport
    path[0] = /tmp\nFailed: ["dmd", "-unittest", "-v", "-o-", "/tmp/tmpj82ne3i5.d",
    "-I/tmp"]\n'''
  stdout: b''
  timestamp: 1659792380
- exit_code: 1
  program: "import std.math;\n/*\nReturn median of elements in the list l.\n    >>>\
    \ median([3L, 1L, 2L, 4L, 5L])\n    3L\n    >>> median([-10L, 4L, 6L, 1000L, 10L,\
    \ 20L])\n    15.0\n    \n*/\nfloat median(long[] l) \n{\n    long[] sorted = l.dup;\n\
    \    sorted.sort;\n    if (sorted.length % 2 == 1) {\n        return sorted[sorted.length\
    \ / 2];\n    } else {\n        return (sorted[sorted.length / 2 - 1] + sorted[sorted.length\
    \ / 2]) / 2.0;\n    }\n}\nunittest\n{\n    alias candidate = median;\n\n    assert(candidate([3L,\
    \ 1L, 2L, 4L, 5L]) == 3L);\n    assert(candidate([-10L, 4L, 6L, 1000L, 10L, 20L])\
    \ == 8.0);\n    assert(candidate([5L]) == 5L);\n    assert(candidate([6L, 5L])\
    \ == 5.5);\n    assert(candidate([8L, 1L, 3L, 9L, 9L, 2L, 7L]) == 7L);\n}\nvoid\
    \ main(){}"
  status: SyntaxError
  stderr: 'b''Error: cannot find source code for runtime library file \''object.d\''\n       dmd
    might not be correctly installed. Run \''dmd -man\'' for installation instructions.\nimport
    path[0] = /tmp\nFailed: ["dmd", "-unittest", "-v", "-o-", "/tmp/tmpnsw65xel.d",
    "-I/tmp"]\n'''
  stdout: b''
  timestamp: 1659792379
- exit_code: 1
  program: "import std.math;\n/*\nReturn median of elements in the list l.\n    >>>\
    \ median([3L, 1L, 2L, 4L, 5L])\n    3L\n    >>> median([-10L, 4L, 6L, 1000L, 10L,\
    \ 20L])\n    15.0\n    \n*/\nfloat median(long[] l) \n{\n    long[] sorted = l.dup;\n\
    \    sorted.sort;\n    if (sorted.length % 2 == 1) {\n        return sorted[sorted.length\
    \ / 2];\n    } else {\n        return (sorted[sorted.length / 2 - 1] + sorted[sorted.length\
    \ / 2]) / 2.0;\n    }\n}\nunittest\n{\n    alias candidate = median;\n\n    assert(candidate([3L,\
    \ 1L, 2L, 4L, 5L]) == 3L);\n    assert(candidate([-10L, 4L, 6L, 1000L, 10L, 20L])\
    \ == 8.0);\n    assert(candidate([5L]) == 5L);\n    assert(candidate([6L, 5L])\
    \ == 5.5);\n    assert(candidate([8L, 1L, 3L, 9L, 9L, 2L, 7L]) == 7L);\n}\nvoid\
    \ main(){}"
  status: SyntaxError
  stderr: 'b''Error: cannot find source code for runtime library file \''object.d\''\n       dmd
    might not be correctly installed. Run \''dmd -man\'' for installation instructions.\nimport
    path[0] = /tmp\nFailed: ["dmd", "-unittest", "-v", "-o-", "/tmp/tmpnsw65xel.d",
    "-I/tmp"]\n'''
  stdout: b''
  timestamp: 1659792379
- exit_code: 1
  program: "import std.math;\n/*\nReturn median of elements in the list l.\n    >>>\
    \ median([3L, 1L, 2L, 4L, 5L])\n    3L\n    >>> median([-10L, 4L, 6L, 1000L, 10L,\
    \ 20L])\n    15.0\n    \n*/\nfloat median(long[] l) \n{\n    long[] sorted = l.dup.sort;\n\
    \    int mid = l.length / 2;\n    if (l.length % 2 == 0)\n        return (sorted[mid]\
    \ + sorted[mid-1]) / 2.0;\n    else\n        return sorted[mid];\n}\nunittest\n\
    {\n    alias candidate = median;\n\n    assert(candidate([3L, 1L, 2L, 4L, 5L])\
    \ == 3L);\n    assert(candidate([-10L, 4L, 6L, 1000L, 10L, 20L]) == 8.0);\n  \
    \  assert(candidate([5L]) == 5L);\n    assert(candidate([6L, 5L]) == 5.5);\n \
    \   assert(candidate([8L, 1L, 3L, 9L, 9L, 2L, 7L]) == 7L);\n}\nvoid main(){}"
  status: SyntaxError
  stderr: 'b''Error: cannot find source code for runtime library file \''object.d\''\n       dmd
    might not be correctly installed. Run \''dmd -man\'' for installation instructions.\nimport
    path[0] = /tmp\nFailed: ["dmd", "-unittest", "-v", "-o-", "/tmp/tmp9mof6nwf.d",
    "-I/tmp"]\n'''
  stdout: b''
  timestamp: 1659792380
- exit_code: 1
  program: "import std.math;\n/*\nReturn median of elements in the list l.\n    >>>\
    \ median([3L, 1L, 2L, 4L, 5L])\n    3L\n    >>> median([-10L, 4L, 6L, 1000L, 10L,\
    \ 20L])\n    15.0\n    \n*/\nfloat median(long[] l) \n{\n    long[] sorted = l.dup;\n\
    \    sorted.sort;\n    if (sorted.length % 2 == 1)\n    {\n        return sorted[sorted.length\
    \ / 2];\n    }\n    else\n    {\n        return (sorted[sorted.length / 2 - 1]\
    \ + sorted[sorted.length / 2]) / 2.0;\n    }\n}\nunittest\n{\n    alias candidate\
    \ = median;\n\n    assert(candidate([3L, 1L, 2L, 4L, 5L]) == 3L);\n    assert(candidate([-10L,\
    \ 4L, 6L, 1000L, 10L, 20L]) == 8.0);\n    assert(candidate([5L]) == 5L);\n   \
    \ assert(candidate([6L, 5L]) == 5.5);\n    assert(candidate([8L, 1L, 3L, 9L, 9L,\
    \ 2L, 7L]) == 7L);\n}\nvoid main(){}"
  status: SyntaxError
  stderr: 'b''Error: cannot find source code for runtime library file \''object.d\''\n       dmd
    might not be correctly installed. Run \''dmd -man\'' for installation instructions.\nimport
    path[0] = /tmp\nFailed: ["dmd", "-unittest", "-v", "-o-", "/tmp/tmpo96ljf_e.d",
    "-I/tmp"]\n'''
  stdout: b''
  timestamp: 1659792379
- exit_code: 1
  program: "import std.math;\n/*\nReturn median of elements in the list l.\n    >>>\
    \ median([3L, 1L, 2L, 4L, 5L])\n    3L\n    >>> median([-10L, 4L, 6L, 1000L, 10L,\
    \ 20L])\n    15.0\n    \n*/\nfloat median(long[] l) \n{\n    long[] sorted = l.sort();\n\
    \    int len = sorted.length;\n    if (len % 2 == 1)\n        return sorted[len\
    \ / 2];\n    else\n        return (sorted[len / 2 - 1] + sorted[len / 2]) / 2.0;\n\
    }\nunittest\n{\n    alias candidate = median;\n\n    assert(candidate([3L, 1L,\
    \ 2L, 4L, 5L]) == 3L);\n    assert(candidate([-10L, 4L, 6L, 1000L, 10L, 20L])\
    \ == 8.0);\n    assert(candidate([5L]) == 5L);\n    assert(candidate([6L, 5L])\
    \ == 5.5);\n    assert(candidate([8L, 1L, 3L, 9L, 9L, 2L, 7L]) == 7L);\n}\nvoid\
    \ main(){}"
  status: SyntaxError
  stderr: 'b''Error: cannot find source code for runtime library file \''object.d\''\n       dmd
    might not be correctly installed. Run \''dmd -man\'' for installation instructions.\nimport
    path[0] = /tmp\nFailed: ["dmd", "-unittest", "-v", "-o-", "/tmp/tmpls890kpx.d",
    "-I/tmp"]\n'''
  stdout: b''
  timestamp: 1659792380
- exit_code: 1
  program: "import std.math;\n/*\nReturn median of elements in the list l.\n    >>>\
    \ median([3L, 1L, 2L, 4L, 5L])\n    3L\n    >>> median([-10L, 4L, 6L, 1000L, 10L,\
    \ 20L])\n    15.0\n    \n*/\nfloat median(long[] l) \n{\n    l.sort();\n    int\
    \ n = l.length;\n    if (n % 2 == 1)\n        return l[n / 2];\n    else\n   \
    \     return (l[n / 2 - 1] + l[n / 2]) / 2.0;\n}\nunittest\n{\n    alias candidate\
    \ = median;\n\n    assert(candidate([3L, 1L, 2L, 4L, 5L]) == 3L);\n    assert(candidate([-10L,\
    \ 4L, 6L, 1000L, 10L, 20L]) == 8.0);\n    assert(candidate([5L]) == 5L);\n   \
    \ assert(candidate([6L, 5L]) == 5.5);\n    assert(candidate([8L, 1L, 3L, 9L, 9L,\
    \ 2L, 7L]) == 7L);\n}\nvoid main(){}"
  status: SyntaxError
  stderr: 'b''Error: cannot find source code for runtime library file \''object.d\''\n       dmd
    might not be correctly installed. Run \''dmd -man\'' for installation instructions.\nimport
    path[0] = /tmp\nFailed: ["dmd", "-unittest", "-v", "-o-", "/tmp/tmp6h_6lqs2.d",
    "-I/tmp"]\n'''
  stdout: b''
  timestamp: 1659792379
- exit_code: 1
  program: "import std.math;\n/*\nReturn median of elements in the list l.\n    >>>\
    \ median([3L, 1L, 2L, 4L, 5L])\n    3L\n    >>> median([-10L, 4L, 6L, 1000L, 10L,\
    \ 20L])\n    15.0\n    \n*/\nfloat median(long[] l) \n{\n    long[] sorted = sort(l);\n\
    \    int n = l.length;\n    if (n % 2 == 1)\n        return sorted[n / 2];\n \
    \   else\n        return (sorted[n / 2 - 1] + sorted[n / 2]) / 2.0;\n}\nunittest\n\
    {\n    alias candidate = median;\n\n    assert(candidate([3L, 1L, 2L, 4L, 5L])\
    \ == 3L);\n    assert(candidate([-10L, 4L, 6L, 1000L, 10L, 20L]) == 8.0);\n  \
    \  assert(candidate([5L]) == 5L);\n    assert(candidate([6L, 5L]) == 5.5);\n \
    \   assert(candidate([8L, 1L, 3L, 9L, 9L, 2L, 7L]) == 7L);\n}\nvoid main(){}"
  status: SyntaxError
  stderr: 'b''Error: cannot find source code for runtime library file \''object.d\''\n       dmd
    might not be correctly installed. Run \''dmd -man\'' for installation instructions.\nimport
    path[0] = /tmp\nFailed: ["dmd", "-unittest", "-v", "-o-", "/tmp/tmpriv0c8_6.d",
    "-I/tmp"]\n'''
  stdout: b''
  timestamp: 1659792380
- exit_code: 1
  program: "import std.math;\n/*\nReturn median of elements in the list l.\n    >>>\
    \ median([3L, 1L, 2L, 4L, 5L])\n    3L\n    >>> median([-10L, 4L, 6L, 1000L, 10L,\
    \ 20L])\n    15.0\n    \n*/\nfloat median(long[] l) \n{\n    long[] sorted = l.dup;\n\
    \    sorted.sort;\n    int mid = sorted.length / 2;\n    if (sorted.length % 2\
    \ == 0) \n    {\n        return (sorted[mid - 1] + sorted[mid]) / 2.0;\n    }\n\
    \    else \n    {\n        return sorted[mid];\n    }\n}\nunittest\n{\n    alias\
    \ candidate = median;\n\n    assert(candidate([3L, 1L, 2L, 4L, 5L]) == 3L);\n\
    \    assert(candidate([-10L, 4L, 6L, 1000L, 10L, 20L]) == 8.0);\n    assert(candidate([5L])\
    \ == 5L);\n    assert(candidate([6L, 5L]) == 5.5);\n    assert(candidate([8L,\
    \ 1L, 3L, 9L, 9L, 2L, 7L]) == 7L);\n}\nvoid main(){}"
  status: SyntaxError
  stderr: 'b''Error: cannot find source code for runtime library file \''object.d\''\n       dmd
    might not be correctly installed. Run \''dmd -man\'' for installation instructions.\nimport
    path[0] = /tmp\nFailed: ["dmd", "-unittest", "-v", "-o-", "/tmp/tmpty40p6ul.d",
    "-I/tmp"]\n'''
  stdout: b''
  timestamp: 1659792379
- exit_code: 1
  program: "import std.math;\n/*\nReturn median of elements in the list l.\n    >>>\
    \ median([3L, 1L, 2L, 4L, 5L])\n    3L\n    >>> median([-10L, 4L, 6L, 1000L, 10L,\
    \ 20L])\n    15.0\n    \n*/\nfloat median(long[] l) \n{\n    long[] s = l.dup;\n\
    \    s.sort;\n    int n = s.length;\n    if (n % 2 == 1)\n        return s[n /\
    \ 2];\n    else\n        return (s[n / 2 - 1] + s[n / 2]) / 2.0;\n}\nunittest\n\
    {\n    alias candidate = median;\n\n    assert(candidate([3L, 1L, 2L, 4L, 5L])\
    \ == 3L);\n    assert(candidate([-10L, 4L, 6L, 1000L, 10L, 20L]) == 8.0);\n  \
    \  assert(candidate([5L]) == 5L);\n    assert(candidate([6L, 5L]) == 5.5);\n \
    \   assert(candidate([8L, 1L, 3L, 9L, 9L, 2L, 7L]) == 7L);\n}\nvoid main(){}"
  status: SyntaxError
  stderr: 'b''Error: cannot find source code for runtime library file \''object.d\''\n       dmd
    might not be correctly installed. Run \''dmd -man\'' for installation instructions.\nimport
    path[0] = /tmp\nFailed: ["dmd", "-unittest", "-v", "-o-", "/tmp/tmp4yo3wmts.d",
    "-I/tmp"]\n'''
  stdout: b''
  timestamp: 1659792380
- exit_code: 1
  program: "import std.math;\n/*\nReturn median of elements in the list l.\n    >>>\
    \ median([3L, 1L, 2L, 4L, 5L])\n    3L\n    >>> median([-10L, 4L, 6L, 1000L, 10L,\
    \ 20L])\n    15.0\n    \n*/\nfloat median(long[] l) \n{\n    long[] sorted = l.dup;\n\
    \    sorted.sort;\n    int n = sorted.length;\n    if (n % 2 == 1) \n    {\n \
    \       return sorted[n / 2];\n    } \n    else \n    {\n        return (sorted[n\
    \ / 2 - 1] + sorted[n / 2]) / 2.0;\n    }\n}\nunittest\n{\n    alias candidate\
    \ = median;\n\n    assert(candidate([3L, 1L, 2L, 4L, 5L]) == 3L);\n    assert(candidate([-10L,\
    \ 4L, 6L, 1000L, 10L, 20L]) == 8.0);\n    assert(candidate([5L]) == 5L);\n   \
    \ assert(candidate([6L, 5L]) == 5.5);\n    assert(candidate([8L, 1L, 3L, 9L, 9L,\
    \ 2L, 7L]) == 7L);\n}\nvoid main(){}"
  status: SyntaxError
  stderr: 'b''Error: cannot find source code for runtime library file \''object.d\''\n       dmd
    might not be correctly installed. Run \''dmd -man\'' for installation instructions.\nimport
    path[0] = /tmp\nFailed: ["dmd", "-unittest", "-v", "-o-", "/tmp/tmphz52njnm.d",
    "-I/tmp"]\n'''
  stdout: b''
  timestamp: 1659792379
- exit_code: 1
  program: "import std.math;\n/*\nReturn median of elements in the list l.\n    >>>\
    \ median([3L, 1L, 2L, 4L, 5L])\n    3L\n    >>> median([-10L, 4L, 6L, 1000L, 10L,\
    \ 20L])\n    15.0\n    \n*/\nfloat median(long[] l) \n{\n    long[] sorted = l.dup.sort;\n\
    \    int mid = sorted.length / 2;\n    if (sorted.length % 2 == 0) \n    {\n \
    \       return (sorted[mid] + sorted[mid-1]) / 2.0;\n    }\n    else \n    {\n\
    \        return sorted[mid];\n    }\n}\n/*\nReturn the mode of elements in the\
    \ list l.\n    >>> mode([3L, 1L, 2L, 4L, 5L])\n    [1L, 2L, 3L, 4L, 5L]\n    >>>\
    \ mode([-10L, 4L, 6L, 1000L, 10L, 20L, -10L, 4L, 6L, 1000L, 10L, 20L])\n    [-10L,\
    \ 4L, 6L, 10L, 20L, 1000L]\n*/\nlong[] mode(long[] l) \n{\n    long[] sorted =\
    \ l.dup.sort;\n    long[] result = [];\n    long[] current = [];\n    long maxCount\
    \ = 0L;\n    long currentCount = 0L;\n    foreach (long i; sorted) \n    {\n \
    \       if (current.length == 0 || current[0] == i) \n        {\n            current\
    \ ~= i;\n            currentCount++;\n        }\n        else \n        {\n  \
    \          if (currentCount > maxCount) \n            {\n                result\
    \ = current;\n                maxCount = currentCount;\n            }\n      \
    \      current = [i];\n            currentCount = 1L;\n        }\n    }\n    if\
    \ (currentCount > maxCount) \n    {\n        result = current;\n    }\n    return\
    \ result;\n}\n/*\nReturn the standard deviation of elements in the list l.\n \
    \   >>> stddev([3L, 1L, 2L, 4L, 5L])\n    1.5811388300841898\n    >>> stddev([-10L,\
    \ 4L, 6L, 1000L, 10L, 20L])\n    531.9586776859504\n*/\nfloat stddev(long[] l)\
    \ \n{\n    long sum = 0L;\n    long sumS\nunittest\n{\n    alias candidate = median;\n\
    \n    assert(candidate([3L, 1L, 2L, 4L, 5L]) == 3L);\n    assert(candidate([-10L,\
    \ 4L, 6L, 1000L, 10L, 20L]) == 8.0);\n    assert(candidate([5L]) == 5L);\n   \
    \ assert(candidate([6L, 5L]) == 5.5);\n    assert(candidate([8L, 1L, 3L, 9L, 9L,\
    \ 2L, 7L]) == 7L);\n}\nvoid main(){}"
  status: SyntaxError
  stderr: 'b''/tmp/tmpqnmqyic0.d(72): Error: semicolon expected, not \''unittest\''\n/tmp/tmpqnmqyic0.d(72):
    Error: found \''unittest\'' instead of statement\nFailed: ["dmd", "-unittest",
    "-v", "-o-", "/tmp/tmpqnmqyic0.d", "-I/tmp"]\n'''
  stdout: b''
  timestamp: 1659792380
- exit_code: 1
  program: "import std.math;\n/*\nReturn median of elements in the list l.\n    >>>\
    \ median([3L, 1L, 2L, 4L, 5L])\n    3L\n    >>> median([-10L, 4L, 6L, 1000L, 10L,\
    \ 20L])\n    15.0\n    \n*/\nfloat median(long[] l) \n{\n    long[] sorted = l.dup;\n\
    \    sorted.sort;\n    if (sorted.length % 2 == 1) {\n        return sorted[sorted.length\
    \ / 2];\n    } else {\n        return (sorted[sorted.length / 2 - 1] + sorted[sorted.length\
    \ / 2]) / 2.0;\n    }\n}\nunittest\n{\n    alias candidate = median;\n\n    assert(candidate([3L,\
    \ 1L, 2L, 4L, 5L]) == 3L);\n    assert(candidate([-10L, 4L, 6L, 1000L, 10L, 20L])\
    \ == 8.0);\n    assert(candidate([5L]) == 5L);\n    assert(candidate([6L, 5L])\
    \ == 5.5);\n    assert(candidate([8L, 1L, 3L, 9L, 9L, 2L, 7L]) == 7L);\n}\nvoid\
    \ main(){}"
  status: SyntaxError
  stderr: 'b''Error: cannot find source code for runtime library file \''object.d\''\n       dmd
    might not be correctly installed. Run \''dmd -man\'' for installation instructions.\nimport
    path[0] = /tmp\nFailed: ["dmd", "-unittest", "-v", "-o-", "/tmp/tmpnsw65xel.d",
    "-I/tmp"]\n'''
  stdout: b''
  timestamp: 1659792379
- exit_code: 1
  program: "import std.math;\n/*\nReturn median of elements in the list l.\n    >>>\
    \ median([3L, 1L, 2L, 4L, 5L])\n    3L\n    >>> median([-10L, 4L, 6L, 1000L, 10L,\
    \ 20L])\n    15.0\n    \n*/\nfloat median(long[] l) \n{\n    int n = l.length;\n\
    \    if (n == 0) \n    {\n        return 0.0;\n    }\n    else if (n % 2 == 1)\
    \ \n    {\n        return l[n / 2];\n    }\n    else \n    {\n        return (l[n\
    \ / 2 - 1] + l[n / 2]) / 2.0;\n    }\n}\nunittest\n{\n    alias candidate = median;\n\
    \n    assert(candidate([3L, 1L, 2L, 4L, 5L]) == 3L);\n    assert(candidate([-10L,\
    \ 4L, 6L, 1000L, 10L, 20L]) == 8.0);\n    assert(candidate([5L]) == 5L);\n   \
    \ assert(candidate([6L, 5L]) == 5.5);\n    assert(candidate([8L, 1L, 3L, 9L, 9L,\
    \ 2L, 7L]) == 7L);\n}\nvoid main(){}"
  status: SyntaxError
  stderr: 'b''Error: cannot find source code for runtime library file \''object.d\''\n       dmd
    might not be correctly installed. Run \''dmd -man\'' for installation instructions.\nimport
    path[0] = /tmp\nFailed: ["dmd", "-unittest", "-v", "-o-", "/tmp/tmpop8imjet.d",
    "-I/tmp"]\n'''
  stdout: b''
  timestamp: 1659792380
- exit_code: 1
  program: "import std.math;\n/*\nReturn median of elements in the list l.\n    >>>\
    \ median([3L, 1L, 2L, 4L, 5L])\n    3L\n    >>> median([-10L, 4L, 6L, 1000L, 10L,\
    \ 20L])\n    15.0\n    \n*/\nfloat median(long[] l) \n{\n    long[] sorted = l.dup;\n\
    \    sorted.sort;\n    int len = sorted.length;\n    if (len % 2 == 0)\n    {\n\
    \        return (sorted[len / 2 - 1] + sorted[len / 2]) / 2.0;\n    }\n    else\n\
    \    {\n        return sorted[len / 2];\n    }\n}\nunittest\n{\n    alias candidate\
    \ = median;\n\n    assert(candidate([3L, 1L, 2L, 4L, 5L]) == 3L);\n    assert(candidate([-10L,\
    \ 4L, 6L, 1000L, 10L, 20L]) == 8.0);\n    assert(candidate([5L]) == 5L);\n   \
    \ assert(candidate([6L, 5L]) == 5.5);\n    assert(candidate([8L, 1L, 3L, 9L, 9L,\
    \ 2L, 7L]) == 7L);\n}\nvoid main(){}"
  status: SyntaxError
  stderr: 'b''Error: cannot find source code for runtime library file \''object.d\''\n       dmd
    might not be correctly installed. Run \''dmd -man\'' for installation instructions.\nimport
    path[0] = /tmp\nFailed: ["dmd", "-unittest", "-v", "-o-", "/tmp/tmp1laajukv.d",
    "-I/tmp"]\n'''
  stdout: b''
  timestamp: 1659792379
- exit_code: 1
  program: "import std.math;\n/*\nReturn median of elements in the list l.\n    >>>\
    \ median([3L, 1L, 2L, 4L, 5L])\n    3L\n    >>> median([-10L, 4L, 6L, 1000L, 10L,\
    \ 20L])\n    15.0\n    \n*/\nfloat median(long[] l) \n{\n    long[] sorted = l.dup;\n\
    \    sorted.sort;\n    int len = sorted.length;\n    if (len % 2 == 0) \n    {\n\
    \        return (sorted[len / 2 - 1] + sorted[len / 2]) / 2.0;\n    }\n    else\
    \ \n    {\n        return sorted[len / 2];\n    }\n}\nunittest\n{\n    alias candidate\
    \ = median;\n\n    assert(candidate([3L, 1L, 2L, 4L, 5L]) == 3L);\n    assert(candidate([-10L,\
    \ 4L, 6L, 1000L, 10L, 20L]) == 8.0);\n    assert(candidate([5L]) == 5L);\n   \
    \ assert(candidate([6L, 5L]) == 5.5);\n    assert(candidate([8L, 1L, 3L, 9L, 9L,\
    \ 2L, 7L]) == 7L);\n}\nvoid main(){}"
  status: SyntaxError
  stderr: 'b''Error: cannot find source code for runtime library file \''object.d\''\n       dmd
    might not be correctly installed. Run \''dmd -man\'' for installation instructions.\nimport
    path[0] = /tmp\nFailed: ["dmd", "-unittest", "-v", "-o-", "/tmp/tmp4aokkq3o.d",
    "-I/tmp"]\n'''
  stdout: b''
  timestamp: 1659792379
- exit_code: 1
  program: "import std.math;\n/*\nReturn median of elements in the list l.\n    >>>\
    \ median([3L, 1L, 2L, 4L, 5L])\n    3L\n    >>> median([-10L, 4L, 6L, 1000L, 10L,\
    \ 20L])\n    15.0\n    \n*/\nfloat median(long[] l) \n{\n    long[] sorted = l.dup;\n\
    \    sorted.sort;\n    int len = sorted.length;\n    if (len % 2 == 0) \n    {\n\
    \        return (sorted[len / 2 - 1] + sorted[len / 2]) / 2.0;\n    }\n    else\
    \ \n    {\n        return sorted[len / 2];\n    }\n}\nunittest\n{\n    alias candidate\
    \ = median;\n\n    assert(candidate([3L, 1L, 2L, 4L, 5L]) == 3L);\n    assert(candidate([-10L,\
    \ 4L, 6L, 1000L, 10L, 20L]) == 8.0);\n    assert(candidate([5L]) == 5L);\n   \
    \ assert(candidate([6L, 5L]) == 5.5);\n    assert(candidate([8L, 1L, 3L, 9L, 9L,\
    \ 2L, 7L]) == 7L);\n}\nvoid main(){}"
  status: SyntaxError
  stderr: 'b''Error: cannot find source code for runtime library file \''object.d\''\n       dmd
    might not be correctly installed. Run \''dmd -man\'' for installation instructions.\nimport
    path[0] = /tmp\nFailed: ["dmd", "-unittest", "-v", "-o-", "/tmp/tmp4aokkq3o.d",
    "-I/tmp"]\n'''
  stdout: b''
  timestamp: 1659792379
- exit_code: 1
  program: "import std.math;\n/*\nReturn median of elements in the list l.\n    >>>\
    \ median([3L, 1L, 2L, 4L, 5L])\n    3L\n    >>> median([-10L, 4L, 6L, 1000L, 10L,\
    \ 20L])\n    15.0\n    \n*/\nfloat median(long[] l) \n{\n    long[] l2 = l.dup;\n\
    \    l2.sort;\n    return l2[l2.length / 2];\n}\nunittest\n{\n    alias candidate\
    \ = median;\n\n    assert(candidate([3L, 1L, 2L, 4L, 5L]) == 3L);\n    assert(candidate([-10L,\
    \ 4L, 6L, 1000L, 10L, 20L]) == 8.0);\n    assert(candidate([5L]) == 5L);\n   \
    \ assert(candidate([6L, 5L]) == 5.5);\n    assert(candidate([8L, 1L, 3L, 9L, 9L,\
    \ 2L, 7L]) == 7L);\n}\nvoid main(){}"
  status: SyntaxError
  stderr: 'b''Error: cannot find source code for runtime library file \''object.d\''\n       dmd
    might not be correctly installed. Run \''dmd -man\'' for installation instructions.\nimport
    path[0] = /tmp\nFailed: ["dmd", "-unittest", "-v", "-o-", "/tmp/tmpuavgh5mu.d",
    "-I/tmp"]\n'''
  stdout: b''
  timestamp: 1659792380
- exit_code: 1
  program: "import std.math;\n/*\nReturn median of elements in the list l.\n    >>>\
    \ median([3L, 1L, 2L, 4L, 5L])\n    3L\n    >>> median([-10L, 4L, 6L, 1000L, 10L,\
    \ 20L])\n    15.0\n    \n*/\nfloat median(long[] l) \n{\n    if (l.length == 0)\
    \ \n    {\n        return 0.0;\n    }\n    else \n    {\n        long[] sorted\
    \ = l.sort();\n        int mid = sorted.length / 2;\n        if (sorted.length\
    \ % 2 == 0) \n        {\n            return (sorted[mid] + sorted[mid - 1]) /\
    \ 2.0;\n        }\n        else \n        {\n            return sorted[mid];\n\
    \        }\n    }\n}\nunittest\n{\n    alias candidate = median;\n\n    assert(candidate([3L,\
    \ 1L, 2L, 4L, 5L]) == 3L);\n    assert(candidate([-10L, 4L, 6L, 1000L, 10L, 20L])\
    \ == 8.0);\n    assert(candidate([5L]) == 5L);\n    assert(candidate([6L, 5L])\
    \ == 5.5);\n    assert(candidate([8L, 1L, 3L, 9L, 9L, 2L, 7L]) == 7L);\n}\nvoid\
    \ main(){}"
  status: SyntaxError
  stderr: 'b''Error: cannot find source code for runtime library file \''object.d\''\n       dmd
    might not be correctly installed. Run \''dmd -man\'' for installation instructions.\nimport
    path[0] = /tmp\nFailed: ["dmd", "-unittest", "-v", "-o-", "/tmp/tmpp8m1g6ug.d",
    "-I/tmp"]\n'''
  stdout: b''
  timestamp: 1659792380
- exit_code: 1
  program: "import std.math;\n/*\nReturn median of elements in the list l.\n    >>>\
    \ median([3L, 1L, 2L, 4L, 5L])\n    3L\n    >>> median([-10L, 4L, 6L, 1000L, 10L,\
    \ 20L])\n    15.0\n    \n*/\nfloat median(long[] l) \n{\n    long[] sorted = l.dup;\n\
    \    sorted.sort;\n    if (sorted.length % 2 == 1) \n    {\n        return sorted[sorted.length\
    \ / 2];\n    } \n    else \n    {\n        return (sorted[sorted.length / 2 -\
    \ 1] + sorted[sorted.length / 2]) / 2.0;\n    }\n}\nunittest\n{\n    alias candidate\
    \ = median;\n\n    assert(candidate([3L, 1L, 2L, 4L, 5L]) == 3L);\n    assert(candidate([-10L,\
    \ 4L, 6L, 1000L, 10L, 20L]) == 8.0);\n    assert(candidate([5L]) == 5L);\n   \
    \ assert(candidate([6L, 5L]) == 5.5);\n    assert(candidate([8L, 1L, 3L, 9L, 9L,\
    \ 2L, 7L]) == 7L);\n}\nvoid main(){}"
  status: SyntaxError
  stderr: 'b''Error: cannot find source code for runtime library file \''object.d\''\n       dmd
    might not be correctly installed. Run \''dmd -man\'' for installation instructions.\nimport
    path[0] = /tmp\nFailed: ["dmd", "-unittest", "-v", "-o-", "/tmp/tmpm0etr6b5.d",
    "-I/tmp"]\n'''
  stdout: b''
  timestamp: 1659792379
- exit_code: 1
  program: "import std.math;\n/*\nReturn median of elements in the list l.\n    >>>\
    \ median([3L, 1L, 2L, 4L, 5L])\n    3L\n    >>> median([-10L, 4L, 6L, 1000L, 10L,\
    \ 20L])\n    15.0\n    \n*/\nfloat median(long[] l) \n{\n    long[] sorted = l.dup;\n\
    \    sorted.sort;\n    if (sorted.length % 2 == 1) \n    {\n        return sorted[sorted.length\
    \ / 2];\n    } \n    else \n    {\n        return (sorted[sorted.length / 2 -\
    \ 1] + sorted[sorted.length / 2]) / 2.0;\n    }\n}\nunittest\n{\n    alias candidate\
    \ = median;\n\n    assert(candidate([3L, 1L, 2L, 4L, 5L]) == 3L);\n    assert(candidate([-10L,\
    \ 4L, 6L, 1000L, 10L, 20L]) == 8.0);\n    assert(candidate([5L]) == 5L);\n   \
    \ assert(candidate([6L, 5L]) == 5.5);\n    assert(candidate([8L, 1L, 3L, 9L, 9L,\
    \ 2L, 7L]) == 7L);\n}\nvoid main(){}"
  status: SyntaxError
  stderr: 'b''Error: cannot find source code for runtime library file \''object.d\''\n       dmd
    might not be correctly installed. Run \''dmd -man\'' for installation instructions.\nimport
    path[0] = /tmp\nFailed: ["dmd", "-unittest", "-v", "-o-", "/tmp/tmpm0etr6b5.d",
    "-I/tmp"]\n'''
  stdout: b''
  timestamp: 1659792379
- exit_code: 1
  program: "import std.math;\n/*\nReturn median of elements in the list l.\n    >>>\
    \ median([3L, 1L, 2L, 4L, 5L])\n    3L\n    >>> median([-10L, 4L, 6L, 1000L, 10L,\
    \ 20L])\n    15.0\n    \n*/\nfloat median(long[] l) \n{\n    long[] sorted = l.sort();\n\
    \    int len = sorted.length;\n    if (len % 2 == 1)\n    {\n        return sorted[len\
    \ / 2];\n    }\n    else\n    {\n        return (sorted[len / 2 - 1] + sorted[len\
    \ / 2]) / 2.0;\n    }\n}\nunittest\n{\n    alias candidate = median;\n\n    assert(candidate([3L,\
    \ 1L, 2L, 4L, 5L]) == 3L);\n    assert(candidate([-10L, 4L, 6L, 1000L, 10L, 20L])\
    \ == 8.0);\n    assert(candidate([5L]) == 5L);\n    assert(candidate([6L, 5L])\
    \ == 5.5);\n    assert(candidate([8L, 1L, 3L, 9L, 9L, 2L, 7L]) == 7L);\n}\nvoid\
    \ main(){}"
  status: SyntaxError
  stderr: 'b''Error: cannot find source code for runtime library file \''object.d\''\n       dmd
    might not be correctly installed. Run \''dmd -man\'' for installation instructions.\nimport
    path[0] = /tmp\nFailed: ["dmd", "-unittest", "-v", "-o-", "/tmp/tmp4tbgl_sp.d",
    "-I/tmp"]\n'''
  stdout: b''
  timestamp: 1659792380
- exit_code: 1
  program: "import std.math;\n/*\nReturn median of elements in the list l.\n    >>>\
    \ median([3L, 1L, 2L, 4L, 5L])\n    3L\n    >>> median([-10L, 4L, 6L, 1000L, 10L,\
    \ 20L])\n    15.0\n    \n*/\nfloat median(long[] l) \n{\n    long[] l2 = l.dup;\n\
    \    l2.sort;\n    int len = l2.length;\n    if (len % 2 == 0)\n    {\n      \
    \  return (l2[len / 2 - 1] + l2[len / 2]) / 2.0;\n    }\n    else\n    {\n   \
    \     return l2[len / 2];\n    }\n}\nunittest\n{\n    alias candidate = median;\n\
    \n    assert(candidate([3L, 1L, 2L, 4L, 5L]) == 3L);\n    assert(candidate([-10L,\
    \ 4L, 6L, 1000L, 10L, 20L]) == 8.0);\n    assert(candidate([5L]) == 5L);\n   \
    \ assert(candidate([6L, 5L]) == 5.5);\n    assert(candidate([8L, 1L, 3L, 9L, 9L,\
    \ 2L, 7L]) == 7L);\n}\nvoid main(){}"
  status: SyntaxError
  stderr: 'b''Error: cannot find source code for runtime library file \''object.d\''\n       dmd
    might not be correctly installed. Run \''dmd -man\'' for installation instructions.\nimport
    path[0] = /tmp\nFailed: ["dmd", "-unittest", "-v", "-o-", "/tmp/tmpgvqgipzi.d",
    "-I/tmp"]\n'''
  stdout: b''
  timestamp: 1659792380
- exit_code: 1
  program: "import std.math;\n/*\nReturn median of elements in the list l.\n    >>>\
    \ median([3L, 1L, 2L, 4L, 5L])\n    3L\n    >>> median([-10L, 4L, 6L, 1000L, 10L,\
    \ 20L])\n    15.0\n    \n*/\nfloat median(long[] l) \n{\n    long[] temp = l.dup;\n\
    \    temp.sort;\n    int len = temp.length;\n    if (len % 2 == 0) \n    {\n \
    \       return (temp[len / 2 - 1] + temp[len / 2]) / 2.0;\n    } \n    else \n\
    \    {\n        return temp[len / 2];\n    }\n}\nunittest\n{\n    alias candidate\
    \ = median;\n\n    assert(candidate([3L, 1L, 2L, 4L, 5L]) == 3L);\n    assert(candidate([-10L,\
    \ 4L, 6L, 1000L, 10L, 20L]) == 8.0);\n    assert(candidate([5L]) == 5L);\n   \
    \ assert(candidate([6L, 5L]) == 5.5);\n    assert(candidate([8L, 1L, 3L, 9L, 9L,\
    \ 2L, 7L]) == 7L);\n}\nvoid main(){}"
  status: SyntaxError
  stderr: 'b''Error: cannot find source code for runtime library file \''object.d\''\n       dmd
    might not be correctly installed. Run \''dmd -man\'' for installation instructions.\nimport
    path[0] = /tmp\nFailed: ["dmd", "-unittest", "-v", "-o-", "/tmp/tmpi08a_8pr.d",
    "-I/tmp"]\n'''
  stdout: b''
  timestamp: 1659792379
- exit_code: 1
  program: "import std.math;\n/*\nReturn median of elements in the list l.\n    >>>\
    \ median([3L, 1L, 2L, 4L, 5L])\n    3L\n    >>> median([-10L, 4L, 6L, 1000L, 10L,\
    \ 20L])\n    15.0\n    \n*/\nfloat median(long[] l) \n{\n    long[] sorted = l.dup;\n\
    \    sorted.sort;\n    if (sorted.length % 2 == 1)\n        return sorted[sorted.length\
    \ / 2];\n    else\n        return (sorted[sorted.length / 2 - 1] + sorted[sorted.length\
    \ / 2]) / 2.0;\n}\nunittest\n{\n    alias candidate = median;\n\n    assert(candidate([3L,\
    \ 1L, 2L, 4L, 5L]) == 3L);\n    assert(candidate([-10L, 4L, 6L, 1000L, 10L, 20L])\
    \ == 8.0);\n    assert(candidate([5L]) == 5L);\n    assert(candidate([6L, 5L])\
    \ == 5.5);\n    assert(candidate([8L, 1L, 3L, 9L, 9L, 2L, 7L]) == 7L);\n}\nvoid\
    \ main(){}"
  status: SyntaxError
  stderr: 'b''Error: cannot find source code for runtime library file \''object.d\''\n       dmd
    might not be correctly installed. Run \''dmd -man\'' for installation instructions.\nimport
    path[0] = /tmp\nFailed: ["dmd", "-unittest", "-v", "-o-", "/tmp/tmprjc273gp.d",
    "-I/tmp"]\n'''
  stdout: b''
  timestamp: 1659792379
- exit_code: 1
  program: "import std.math;\n/*\nReturn median of elements in the list l.\n    >>>\
    \ median([3L, 1L, 2L, 4L, 5L])\n    3L\n    >>> median([-10L, 4L, 6L, 1000L, 10L,\
    \ 20L])\n    15.0\n    \n*/\nfloat median(long[] l) \n{\n    long[] sorted = l.dup;\n\
    \    sorted.sort;\n    if (sorted.length % 2 == 1)\n        return sorted[sorted.length\
    \ / 2];\n    else\n        return (sorted[sorted.length / 2 - 1] + sorted[sorted.length\
    \ / 2]) / 2.0;\n}\nunittest\n{\n    alias candidate = median;\n\n    assert(candidate([3L,\
    \ 1L, 2L, 4L, 5L]) == 3L);\n    assert(candidate([-10L, 4L, 6L, 1000L, 10L, 20L])\
    \ == 8.0);\n    assert(candidate([5L]) == 5L);\n    assert(candidate([6L, 5L])\
    \ == 5.5);\n    assert(candidate([8L, 1L, 3L, 9L, 9L, 2L, 7L]) == 7L);\n}\nvoid\
    \ main(){}"
  status: SyntaxError
  stderr: 'b''Error: cannot find source code for runtime library file \''object.d\''\n       dmd
    might not be correctly installed. Run \''dmd -man\'' for installation instructions.\nimport
    path[0] = /tmp\nFailed: ["dmd", "-unittest", "-v", "-o-", "/tmp/tmprjc273gp.d",
    "-I/tmp"]\n'''
  stdout: b''
  timestamp: 1659792379
- exit_code: 1
  program: "import std.math;\n/*\nReturn median of elements in the list l.\n    >>>\
    \ median([3L, 1L, 2L, 4L, 5L])\n    3L\n    >>> median([-10L, 4L, 6L, 1000L, 10L,\
    \ 20L])\n    15.0\n    \n*/\nfloat median(long[] l) \n{\n    long[] sorted = l.dup;\n\
    \    sorted.sort;\n    int len = sorted.length;\n    if (len % 2 == 0)\n    {\n\
    \        return (sorted[len / 2 - 1] + sorted[len / 2]) / 2.0;\n    }\n    else\n\
    \    {\n        return sorted[len / 2];\n    }\n}\nunittest\n{\n    alias candidate\
    \ = median;\n\n    assert(candidate([3L, 1L, 2L, 4L, 5L]) == 3L);\n    assert(candidate([-10L,\
    \ 4L, 6L, 1000L, 10L, 20L]) == 8.0);\n    assert(candidate([5L]) == 5L);\n   \
    \ assert(candidate([6L, 5L]) == 5.5);\n    assert(candidate([8L, 1L, 3L, 9L, 9L,\
    \ 2L, 7L]) == 7L);\n}\nvoid main(){}"
  status: SyntaxError
  stderr: 'b''Error: cannot find source code for runtime library file \''object.d\''\n       dmd
    might not be correctly installed. Run \''dmd -man\'' for installation instructions.\nimport
    path[0] = /tmp\nFailed: ["dmd", "-unittest", "-v", "-o-", "/tmp/tmp1laajukv.d",
    "-I/tmp"]\n'''
  stdout: b''
  timestamp: 1659792379
- exit_code: 1
  program: "import std.math;\n/*\nReturn median of elements in the list l.\n    >>>\
    \ median([3L, 1L, 2L, 4L, 5L])\n    3L\n    >>> median([-10L, 4L, 6L, 1000L, 10L,\
    \ 20L])\n    15.0\n    \n*/\nfloat median(long[] l) \n{\n    long[] sorted = l.dup;\n\
    \    sorted.sort;\n    long len = sorted.length;\n    if (len % 2 == 1) {\n  \
    \      return sorted[len / 2];\n    } else {\n        return (sorted[len / 2 -\
    \ 1] + sorted[len / 2]) / 2.0;\n    }\n}\nunittest\n{\n    alias candidate = median;\n\
    \n    assert(candidate([3L, 1L, 2L, 4L, 5L]) == 3L);\n    assert(candidate([-10L,\
    \ 4L, 6L, 1000L, 10L, 20L]) == 8.0);\n    assert(candidate([5L]) == 5L);\n   \
    \ assert(candidate([6L, 5L]) == 5.5);\n    assert(candidate([8L, 1L, 3L, 9L, 9L,\
    \ 2L, 7L]) == 7L);\n}\nvoid main(){}"
  status: SyntaxError
  stderr: 'b''Error: cannot find source code for runtime library file \''object.d\''\n       dmd
    might not be correctly installed. Run \''dmd -man\'' for installation instructions.\nimport
    path[0] = /tmp\nFailed: ["dmd", "-unittest", "-v", "-o-", "/tmp/tmpbl_4ywhl.d",
    "-I/tmp"]\n'''
  stdout: b''
  timestamp: 1659792380
- exit_code: 1
  program: "import std.math;\n/*\nReturn median of elements in the list l.\n    >>>\
    \ median([3L, 1L, 2L, 4L, 5L])\n    3L\n    >>> median([-10L, 4L, 6L, 1000L, 10L,\
    \ 20L])\n    15.0\n    \n*/\nfloat median(long[] l) \n{\n    long[] sorted = l.dup;\n\
    \    sorted.sort;\n    int len = sorted.length;\n    if (len % 2 == 0)\n    {\n\
    \        return (sorted[len / 2 - 1] + sorted[len / 2]) / 2.0;\n    }\n    else\n\
    \    {\n        return sorted[len / 2];\n    }\n}\nunittest\n{\n    alias candidate\
    \ = median;\n\n    assert(candidate([3L, 1L, 2L, 4L, 5L]) == 3L);\n    assert(candidate([-10L,\
    \ 4L, 6L, 1000L, 10L, 20L]) == 8.0);\n    assert(candidate([5L]) == 5L);\n   \
    \ assert(candidate([6L, 5L]) == 5.5);\n    assert(candidate([8L, 1L, 3L, 9L, 9L,\
    \ 2L, 7L]) == 7L);\n}\nvoid main(){}"
  status: SyntaxError
  stderr: 'b''Error: cannot find source code for runtime library file \''object.d\''\n       dmd
    might not be correctly installed. Run \''dmd -man\'' for installation instructions.\nimport
    path[0] = /tmp\nFailed: ["dmd", "-unittest", "-v", "-o-", "/tmp/tmp1laajukv.d",
    "-I/tmp"]\n'''
  stdout: b''
  timestamp: 1659792379
- exit_code: 1
  program: "import std.math;\n/*\nReturn median of elements in the list l.\n    >>>\
    \ median([3L, 1L, 2L, 4L, 5L])\n    3L\n    >>> median([-10L, 4L, 6L, 1000L, 10L,\
    \ 20L])\n    15.0\n    \n*/\nfloat median(long[] l) \n{\n    int n = l.length;\n\
    \    if (n == 0) \n    {\n        return 0.0;\n    }\n    else if (n == 1) \n\
    \    {\n        return l[0];\n    }\n    else \n    {\n        long[] sorted =\
    \ l.dup;\n        sorted.sort;\n        if (n % 2 == 0) \n        {\n        \
    \    return (sorted[n / 2 - 1] + sorted[n / 2]) / 2.0;\n        }\n        else\
    \ \n        {\n            return sorted[n / 2];\n        }\n    }\n}\nunittest\n\
    {\n    alias candidate = median;\n\n    assert(candidate([3L, 1L, 2L, 4L, 5L])\
    \ == 3L);\n    assert(candidate([-10L, 4L, 6L, 1000L, 10L, 20L]) == 8.0);\n  \
    \  assert(candidate([5L]) == 5L);\n    assert(candidate([6L, 5L]) == 5.5);\n \
    \   assert(candidate([8L, 1L, 3L, 9L, 9L, 2L, 7L]) == 7L);\n}\nvoid main(){}"
  status: SyntaxError
  stderr: 'b''Error: cannot find source code for runtime library file \''object.d\''\n       dmd
    might not be correctly installed. Run \''dmd -man\'' for installation instructions.\nimport
    path[0] = /tmp\nFailed: ["dmd", "-unittest", "-v", "-o-", "/tmp/tmptu13s55x.d",
    "-I/tmp"]\n'''
  stdout: b''
  timestamp: 1659792380
- exit_code: 1
  program: "import std.math;\n/*\nReturn median of elements in the list l.\n    >>>\
    \ median([3L, 1L, 2L, 4L, 5L])\n    3L\n    >>> median([-10L, 4L, 6L, 1000L, 10L,\
    \ 20L])\n    15.0\n    \n*/\nfloat median(long[] l) \n{\n    long[] sorted = l.dup;\n\
    \    sorted.sort;\n    int n = sorted.length;\n    if (n % 2 == 1)\n        return\
    \ sorted[n / 2];\n    else\n        return (sorted[n / 2 - 1] + sorted[n / 2])\
    \ / 2.0;\n}\nunittest\n{\n    alias candidate = median;\n\n    assert(candidate([3L,\
    \ 1L, 2L, 4L, 5L]) == 3L);\n    assert(candidate([-10L, 4L, 6L, 1000L, 10L, 20L])\
    \ == 8.0);\n    assert(candidate([5L]) == 5L);\n    assert(candidate([6L, 5L])\
    \ == 5.5);\n    assert(candidate([8L, 1L, 3L, 9L, 9L, 2L, 7L]) == 7L);\n}\nvoid\
    \ main(){}"
  status: SyntaxError
  stderr: 'b''Error: cannot find source code for runtime library file \''object.d\''\n       dmd
    might not be correctly installed. Run \''dmd -man\'' for installation instructions.\nimport
    path[0] = /tmp\nFailed: ["dmd", "-unittest", "-v", "-o-", "/tmp/tmpigo4kpie.d",
    "-I/tmp"]\n'''
  stdout: b''
  timestamp: 1659792379
- exit_code: 1
  program: "import std.math;\n/*\nReturn median of elements in the list l.\n    >>>\
    \ median([3L, 1L, 2L, 4L, 5L])\n    3L\n    >>> median([-10L, 4L, 6L, 1000L, 10L,\
    \ 20L])\n    15.0\n    \n*/\nfloat median(long[] l) \n{\n    long[] sorted = l.sort();\n\
    \    int mid = l.length / 2;\n    if (l.length % 2 == 0) \n    {\n        return\
    \ (sorted[mid - 1] + sorted[mid]) / 2.0;\n    }\n    else \n    {\n        return\
    \ sorted[mid];\n    }\n}\nunittest\n{\n    alias candidate = median;\n\n    assert(candidate([3L,\
    \ 1L, 2L, 4L, 5L]) == 3L);\n    assert(candidate([-10L, 4L, 6L, 1000L, 10L, 20L])\
    \ == 8.0);\n    assert(candidate([5L]) == 5L);\n    assert(candidate([6L, 5L])\
    \ == 5.5);\n    assert(candidate([8L, 1L, 3L, 9L, 9L, 2L, 7L]) == 7L);\n}\nvoid\
    \ main(){}"
  status: SyntaxError
  stderr: 'b''Error: cannot find source code for runtime library file \''object.d\''\n       dmd
    might not be correctly installed. Run \''dmd -man\'' for installation instructions.\nimport
    path[0] = /tmp\nFailed: ["dmd", "-unittest", "-v", "-o-", "/tmp/tmpnewxw4nb.d",
    "-I/tmp"]\n'''
  stdout: b''
  timestamp: 1659792380
- exit_code: 1
  program: "import std.math;\n/*\nReturn median of elements in the list l.\n    >>>\
    \ median([3L, 1L, 2L, 4L, 5L])\n    3L\n    >>> median([-10L, 4L, 6L, 1000L, 10L,\
    \ 20L])\n    15.0\n    \n*/\nfloat median(long[] l) \n{\n    long[] sorted = l.sort();\n\
    \    int n = l.length;\n    if (n % 2 == 1)\n        return sorted[n / 2];\n \
    \   else\n        return (sorted[n / 2 - 1] + sorted[n / 2]) / 2.0;\n}\nunittest\n\
    {\n    alias candidate = median;\n\n    assert(candidate([3L, 1L, 2L, 4L, 5L])\
    \ == 3L);\n    assert(candidate([-10L, 4L, 6L, 1000L, 10L, 20L]) == 8.0);\n  \
    \  assert(candidate([5L]) == 5L);\n    assert(candidate([6L, 5L]) == 5.5);\n \
    \   assert(candidate([8L, 1L, 3L, 9L, 9L, 2L, 7L]) == 7L);\n}\nvoid main(){}"
  status: SyntaxError
  stderr: 'b''Error: cannot find source code for runtime library file \''object.d\''\n       dmd
    might not be correctly installed. Run \''dmd -man\'' for installation instructions.\nimport
    path[0] = /tmp\nFailed: ["dmd", "-unittest", "-v", "-o-", "/tmp/tmpdl3sfvk3.d",
    "-I/tmp"]\n'''
  stdout: b''
  timestamp: 1659792380
- exit_code: 1
  program: "import std.math;\n/*\nReturn median of elements in the list l.\n    >>>\
    \ median([3L, 1L, 2L, 4L, 5L])\n    3L\n    >>> median([-10L, 4L, 6L, 1000L, 10L,\
    \ 20L])\n    15.0\n    \n*/\nfloat median(long[] l) \n{\n    long[] sorted = l.dup;\n\
    \    sorted.sort;\n    int n = sorted.length;\n    if (n % 2 == 1) \n    {\n \
    \       return sorted[n / 2];\n    }\n    else \n    {\n        return (sorted[n\
    \ / 2 - 1] + sorted[n / 2]) / 2.0;\n    }\n}\nunittest\n{\n    alias candidate\
    \ = median;\n\n    assert(candidate([3L, 1L, 2L, 4L, 5L]) == 3L);\n    assert(candidate([-10L,\
    \ 4L, 6L, 1000L, 10L, 20L]) == 8.0);\n    assert(candidate([5L]) == 5L);\n   \
    \ assert(candidate([6L, 5L]) == 5.5);\n    assert(candidate([8L, 1L, 3L, 9L, 9L,\
    \ 2L, 7L]) == 7L);\n}\nvoid main(){}"
  status: SyntaxError
  stderr: 'b''Error: cannot find source code for runtime library file \''object.d\''\n       dmd
    might not be correctly installed. Run \''dmd -man\'' for installation instructions.\nimport
    path[0] = /tmp\nFailed: ["dmd", "-unittest", "-v", "-o-", "/tmp/tmp3zg3isx2.d",
    "-I/tmp"]\n'''
  stdout: b''
  timestamp: 1659792380
- exit_code: 1
  program: "import std.math;\n/*\nReturn median of elements in the list l.\n    >>>\
    \ median([3L, 1L, 2L, 4L, 5L])\n    3L\n    >>> median([-10L, 4L, 6L, 1000L, 10L,\
    \ 20L])\n    15.0\n    \n*/\nfloat median(long[] l) \n{\n    long[] s = l.dup;\n\
    \    s.sort;\n    int n = s.length;\n    if (n % 2 == 1)\n        return s[n /\
    \ 2];\n    else\n        return (s[n / 2 - 1] + s[n / 2]) / 2.0;\n}\n/*\nReturn\
    \ the mode of elements in the list l.\n    >>> mode([3L, 1L, 2L, 4L, 5L])\n  \
    \  [1L, 2L, 3L, 4L, 5L]\n    >>> mode([-10L, 4L, 6L, 1000L, 10L, 20L])\n    [4L,\
    \ 6L, 10L, 20L, 1000L]\n*/\nlong[] mode(long[] l) \n{\n    long[] s = l.dup;\n\
    \    s.sort;\n    int n = s.length;\n    long[] m = new long[];\n    long[] c\
    \ = new long[];\n    long last = s[0];\n    int count = 1;\n    foreach (long\
    \ x; s)\n    {\n        if (x == last)\n            count++;\n        else\n \
    \       {\n            m ~= last;\n            c ~= count;\n            last =\
    \ x;\n            count = 1;\n        }\n    }\n    m ~= last;\n    c ~= count;\n\
    \    long max = c[0];\n    foreach (long x; c)\n        if (x > max)\n       \
    \     max = x;\n    long[] r = new long[];\n    foreach (long x; m)\n        if\
    \ (c[x] == max)\n            r ~= x;\n    return r;\n}\n/*\nReturn the range of\
    \ elements in the list l.\n    >>> range([3L, 1L, 2L, 4L, 5L])\n    4L\n    >>>\
    \ range([-10L, 4L, 6L, 1000L, 10L, 20L])\n    1010L\n*/\nlong range(long[] l)\
    \ \n{\n    long[] s = l.dup;\n    s.sort;\n    return s[s.length - 1] - s[0];\n\
    unittest\n{\n    alias candidate = median;\n\n    assert(candidate([3L, 1L, 2L,\
    \ 4L, 5L]) == 3L);\n    assert(candidate([-10L, 4L, 6L, 1000L, 10L, 20L]) == 8.0);\n\
    \    assert(candidate([5L]) == 5L);\n    assert(candidate([6L, 5L]) == 5.5);\n\
    \    assert(candidate([8L, 1L, 3L, 9L, 9L, 2L, 7L]) == 7L);\n}\nvoid main(){}"
  status: SyntaxError
  stderr: 'b''/tmp/tmp18x3y8g0.d(72): Error: found \''unittest\'' instead of statement\nFailed:
    ["dmd", "-unittest", "-v", "-o-", "/tmp/tmp18x3y8g0.d", "-I/tmp"]\n'''
  stdout: b''
  timestamp: 1659792380
- exit_code: 1
  program: "import std.math;\n/*\nReturn median of elements in the list l.\n    >>>\
    \ median([3L, 1L, 2L, 4L, 5L])\n    3L\n    >>> median([-10L, 4L, 6L, 1000L, 10L,\
    \ 20L])\n    15.0\n    \n*/\nfloat median(long[] l) \n{\n    long[] sorted = l.sort();\n\
    \    int n = l.length;\n    if (n % 2 == 1) \n    {\n        return sorted[n /\
    \ 2];\n    } \n    else \n    {\n        return (sorted[n / 2 - 1] + sorted[n\
    \ / 2]) / 2.0;\n    }\n}\nunittest\n{\n    alias candidate = median;\n\n    assert(candidate([3L,\
    \ 1L, 2L, 4L, 5L]) == 3L);\n    assert(candidate([-10L, 4L, 6L, 1000L, 10L, 20L])\
    \ == 8.0);\n    assert(candidate([5L]) == 5L);\n    assert(candidate([6L, 5L])\
    \ == 5.5);\n    assert(candidate([8L, 1L, 3L, 9L, 9L, 2L, 7L]) == 7L);\n}\nvoid\
    \ main(){}"
  status: SyntaxError
  stderr: 'b''Error: cannot find source code for runtime library file \''object.d\''\n       dmd
    might not be correctly installed. Run \''dmd -man\'' for installation instructions.\nimport
    path[0] = /tmp\nFailed: ["dmd", "-unittest", "-v", "-o-", "/tmp/tmpbs7mdsbw.d",
    "-I/tmp"]\n'''
  stdout: b''
  timestamp: 1659792380
- exit_code: 1
  program: "import std.math;\n/*\nReturn median of elements in the list l.\n    >>>\
    \ median([3L, 1L, 2L, 4L, 5L])\n    3L\n    >>> median([-10L, 4L, 6L, 1000L, 10L,\
    \ 20L])\n    15.0\n    \n*/\nfloat median(long[] l) \n{\n    long[] sorted = l.dup;\n\
    \    sorted.sort;\n    int n = sorted.length;\n    if (n % 2 == 1)\n        return\
    \ sorted[n / 2];\n    else\n        return (sorted[n / 2 - 1] + sorted[n / 2])\
    \ / 2.0;\n}\nunittest\n{\n    alias candidate = median;\n\n    assert(candidate([3L,\
    \ 1L, 2L, 4L, 5L]) == 3L);\n    assert(candidate([-10L, 4L, 6L, 1000L, 10L, 20L])\
    \ == 8.0);\n    assert(candidate([5L]) == 5L);\n    assert(candidate([6L, 5L])\
    \ == 5.5);\n    assert(candidate([8L, 1L, 3L, 9L, 9L, 2L, 7L]) == 7L);\n}\nvoid\
    \ main(){}"
  status: SyntaxError
  stderr: 'b''Error: cannot find source code for runtime library file \''object.d\''\n       dmd
    might not be correctly installed. Run \''dmd -man\'' for installation instructions.\nimport
    path[0] = /tmp\nFailed: ["dmd", "-unittest", "-v", "-o-", "/tmp/tmpigo4kpie.d",
    "-I/tmp"]\n'''
  stdout: b''
  timestamp: 1659792379
- exit_code: 1
  program: "import std.math;\n/*\nReturn median of elements in the list l.\n    >>>\
    \ median([3L, 1L, 2L, 4L, 5L])\n    3L\n    >>> median([-10L, 4L, 6L, 1000L, 10L,\
    \ 20L])\n    15.0\n    \n*/\nfloat median(long[] l) \n{\n    long[] l2 = l.dup;\n\
    \    l2.sort;\n    int n = l2.length;\n    if (n % 2 == 1)\n        return l2[n\
    \ / 2];\n    else\n        return (l2[n / 2 - 1] + l2[n / 2]) / 2.0;\n}\nunittest\n\
    {\n    alias candidate = median;\n\n    assert(candidate([3L, 1L, 2L, 4L, 5L])\
    \ == 3L);\n    assert(candidate([-10L, 4L, 6L, 1000L, 10L, 20L]) == 8.0);\n  \
    \  assert(candidate([5L]) == 5L);\n    assert(candidate([6L, 5L]) == 5.5);\n \
    \   assert(candidate([8L, 1L, 3L, 9L, 9L, 2L, 7L]) == 7L);\n}\nvoid main(){}"
  status: SyntaxError
  stderr: 'b''Error: cannot find source code for runtime library file \''object.d\''\n       dmd
    might not be correctly installed. Run \''dmd -man\'' for installation instructions.\nimport
    path[0] = /tmp\nFailed: ["dmd", "-unittest", "-v", "-o-", "/tmp/tmpz9kir4r6.d",
    "-I/tmp"]\n'''
  stdout: b''
  timestamp: 1659792380
- exit_code: 1
  program: "import std.math;\n/*\nReturn median of elements in the list l.\n    >>>\
    \ median([3L, 1L, 2L, 4L, 5L])\n    3L\n    >>> median([-10L, 4L, 6L, 1000L, 10L,\
    \ 20L])\n    15.0\n    \n*/\nfloat median(long[] l) \n{\n    long[] sorted = l.dup;\n\
    \    sorted.sort;\n    int n = sorted.length;\n    if (n % 2 == 1) \n    {\n \
    \       return sorted[n / 2];\n    } \n    else \n    {\n        return (sorted[n\
    \ / 2 - 1] + sorted[n / 2]) / 2.0;\n    }\n}\nunittest\n{\n    alias candidate\
    \ = median;\n\n    assert(candidate([3L, 1L, 2L, 4L, 5L]) == 3L);\n    assert(candidate([-10L,\
    \ 4L, 6L, 1000L, 10L, 20L]) == 8.0);\n    assert(candidate([5L]) == 5L);\n   \
    \ assert(candidate([6L, 5L]) == 5.5);\n    assert(candidate([8L, 1L, 3L, 9L, 9L,\
    \ 2L, 7L]) == 7L);\n}\nvoid main(){}"
  status: SyntaxError
  stderr: 'b''Error: cannot find source code for runtime library file \''object.d\''\n       dmd
    might not be correctly installed. Run \''dmd -man\'' for installation instructions.\nimport
    path[0] = /tmp\nFailed: ["dmd", "-unittest", "-v", "-o-", "/tmp/tmphz52njnm.d",
    "-I/tmp"]\n'''
  stdout: b''
  timestamp: 1659792379
- exit_code: 1
  program: "import std.math;\n/*\nReturn median of elements in the list l.\n    >>>\
    \ median([3L, 1L, 2L, 4L, 5L])\n    3L\n    >>> median([-10L, 4L, 6L, 1000L, 10L,\
    \ 20L])\n    15.0\n    \n*/\nfloat median(long[] l) \n{\n    long[] sorted = l.dup;\n\
    \    sorted.sort;\n    int n = sorted.length;\n    if (n % 2 == 1) {\n       \
    \ return sorted[n / 2];\n    } else {\n        return (sorted[n / 2 - 1] + sorted[n\
    \ / 2]) / 2.0;\n    }\n}\nunittest\n{\n    alias candidate = median;\n\n    assert(candidate([3L,\
    \ 1L, 2L, 4L, 5L]) == 3L);\n    assert(candidate([-10L, 4L, 6L, 1000L, 10L, 20L])\
    \ == 8.0);\n    assert(candidate([5L]) == 5L);\n    assert(candidate([6L, 5L])\
    \ == 5.5);\n    assert(candidate([8L, 1L, 3L, 9L, 9L, 2L, 7L]) == 7L);\n}\nvoid\
    \ main(){}"
  status: SyntaxError
  stderr: 'b''Error: cannot find source code for runtime library file \''object.d\''\n       dmd
    might not be correctly installed. Run \''dmd -man\'' for installation instructions.\nimport
    path[0] = /tmp\nFailed: ["dmd", "-unittest", "-v", "-o-", "/tmp/tmpkf7i4qle.d",
    "-I/tmp"]\n'''
  stdout: b''
  timestamp: 1659792379
- exit_code: 1
  program: "import std.math;\n/*\nReturn median of elements in the list l.\n    >>>\
    \ median([3L, 1L, 2L, 4L, 5L])\n    3L\n    >>> median([-10L, 4L, 6L, 1000L, 10L,\
    \ 20L])\n    15.0\n    \n*/\nfloat median(long[] l) \n{\n    long[] sorted = l.dup;\n\
    \    sorted.sort;\n    int n = sorted.length;\n    if (n % 2 == 1) \n    {\n \
    \       return sorted[n / 2];\n    }\n    else \n    {\n        return (sorted[n\
    \ / 2 - 1] + sorted[n / 2]) / 2.0;\n    }\n}\nunittest\n{\n    alias candidate\
    \ = median;\n\n    assert(candidate([3L, 1L, 2L, 4L, 5L]) == 3L);\n    assert(candidate([-10L,\
    \ 4L, 6L, 1000L, 10L, 20L]) == 8.0);\n    assert(candidate([5L]) == 5L);\n   \
    \ assert(candidate([6L, 5L]) == 5.5);\n    assert(candidate([8L, 1L, 3L, 9L, 9L,\
    \ 2L, 7L]) == 7L);\n}\nvoid main(){}"
  status: SyntaxError
  stderr: 'b''Error: cannot find source code for runtime library file \''object.d\''\n       dmd
    might not be correctly installed. Run \''dmd -man\'' for installation instructions.\nimport
    path[0] = /tmp\nFailed: ["dmd", "-unittest", "-v", "-o-", "/tmp/tmp3zg3isx2.d",
    "-I/tmp"]\n'''
  stdout: b''
  timestamp: 1659792380
- exit_code: 1
  program: "import std.math;\n/*\nReturn median of elements in the list l.\n    >>>\
    \ median([3L, 1L, 2L, 4L, 5L])\n    3L\n    >>> median([-10L, 4L, 6L, 1000L, 10L,\
    \ 20L])\n    15.0\n    \n*/\nfloat median(long[] l) \n{\n    l.sort();\n    int\
    \ n = l.length;\n    if (n % 2 == 1)\n        return l[n / 2];\n    else\n   \
    \     return (l[n / 2 - 1] + l[n / 2]) / 2.0;\n}\nunittest\n{\n    alias candidate\
    \ = median;\n\n    assert(candidate([3L, 1L, 2L, 4L, 5L]) == 3L);\n    assert(candidate([-10L,\
    \ 4L, 6L, 1000L, 10L, 20L]) == 8.0);\n    assert(candidate([5L]) == 5L);\n   \
    \ assert(candidate([6L, 5L]) == 5.5);\n    assert(candidate([8L, 1L, 3L, 9L, 9L,\
    \ 2L, 7L]) == 7L);\n}\nvoid main(){}"
  status: SyntaxError
  stderr: 'b''Error: cannot find source code for runtime library file \''object.d\''\n       dmd
    might not be correctly installed. Run \''dmd -man\'' for installation instructions.\nimport
    path[0] = /tmp\nFailed: ["dmd", "-unittest", "-v", "-o-", "/tmp/tmp6h_6lqs2.d",
    "-I/tmp"]\n'''
  stdout: b''
  timestamp: 1659792379
- exit_code: 1
  program: "import std.math;\n/*\nReturn median of elements in the list l.\n    >>>\
    \ median([3L, 1L, 2L, 4L, 5L])\n    3L\n    >>> median([-10L, 4L, 6L, 1000L, 10L,\
    \ 20L])\n    15.0\n    \n*/\nfloat median(long[] l) \n{\n    long[] sorted = l.dup;\n\
    \    sorted.sort;\n    if (sorted.length % 2 == 1) \n    {\n        return sorted[sorted.length\
    \ / 2];\n    } \n    else \n    {\n        return (sorted[sorted.length / 2 -\
    \ 1] + sorted[sorted.length / 2]) / 2.0;\n    }\n}\nunittest\n{\n    alias candidate\
    \ = median;\n\n    assert(candidate([3L, 1L, 2L, 4L, 5L]) == 3L);\n    assert(candidate([-10L,\
    \ 4L, 6L, 1000L, 10L, 20L]) == 8.0);\n    assert(candidate([5L]) == 5L);\n   \
    \ assert(candidate([6L, 5L]) == 5.5);\n    assert(candidate([8L, 1L, 3L, 9L, 9L,\
    \ 2L, 7L]) == 7L);\n}\nvoid main(){}"
  status: SyntaxError
  stderr: 'b''Error: cannot find source code for runtime library file \''object.d\''\n       dmd
    might not be correctly installed. Run \''dmd -man\'' for installation instructions.\nimport
    path[0] = /tmp\nFailed: ["dmd", "-unittest", "-v", "-o-", "/tmp/tmpm0etr6b5.d",
    "-I/tmp"]\n'''
  stdout: b''
  timestamp: 1659792379
- exit_code: 1
  program: "import std.math;\n/*\nReturn median of elements in the list l.\n    >>>\
    \ median([3L, 1L, 2L, 4L, 5L])\n    3L\n    >>> median([-10L, 4L, 6L, 1000L, 10L,\
    \ 20L])\n    15.0\n    \n*/\nfloat median(long[] l) \n{\n    int n = l.length;\n\
    \    if (n == 0) \n    {\n        return 0.0;\n    }\n    else if (n % 2 == 1)\
    \ \n    {\n        return l[n / 2];\n    }\n    else \n    {\n        return (l[n\
    \ / 2 - 1] + l[n / 2]) / 2.0;\n    }\n}\nunittest\n{\n    alias candidate = median;\n\
    \n    assert(candidate([3L, 1L, 2L, 4L, 5L]) == 3L);\n    assert(candidate([-10L,\
    \ 4L, 6L, 1000L, 10L, 20L]) == 8.0);\n    assert(candidate([5L]) == 5L);\n   \
    \ assert(candidate([6L, 5L]) == 5.5);\n    assert(candidate([8L, 1L, 3L, 9L, 9L,\
    \ 2L, 7L]) == 7L);\n}\nvoid main(){}"
  status: SyntaxError
  stderr: 'b''Error: cannot find source code for runtime library file \''object.d\''\n       dmd
    might not be correctly installed. Run \''dmd -man\'' for installation instructions.\nimport
    path[0] = /tmp\nFailed: ["dmd", "-unittest", "-v", "-o-", "/tmp/tmpop8imjet.d",
    "-I/tmp"]\n'''
  stdout: b''
  timestamp: 1659792380
- exit_code: 1
  program: "import std.math;\n/*\nReturn median of elements in the list l.\n    >>>\
    \ median([3L, 1L, 2L, 4L, 5L])\n    3L\n    >>> median([-10L, 4L, 6L, 1000L, 10L,\
    \ 20L])\n    15.0\n    \n*/\nfloat median(long[] l) \n{\n    long[] sorted = l.dup;\n\
    \    sorted.sort;\n    int n = sorted.length;\n    if (n % 2 == 1)\n    {\n  \
    \      return sorted[n / 2];\n    }\n    else\n    {\n        return (sorted[n\
    \ / 2 - 1] + sorted[n / 2]) / 2.0;\n    }\n}\nunittest\n{\n    alias candidate\
    \ = median;\n\n    assert(candidate([3L, 1L, 2L, 4L, 5L]) == 3L);\n    assert(candidate([-10L,\
    \ 4L, 6L, 1000L, 10L, 20L]) == 8.0);\n    assert(candidate([5L]) == 5L);\n   \
    \ assert(candidate([6L, 5L]) == 5.5);\n    assert(candidate([8L, 1L, 3L, 9L, 9L,\
    \ 2L, 7L]) == 7L);\n}\nvoid main(){}"
  status: SyntaxError
  stderr: 'b''Error: cannot find source code for runtime library file \''object.d\''\n       dmd
    might not be correctly installed. Run \''dmd -man\'' for installation instructions.\nimport
    path[0] = /tmp\nFailed: ["dmd", "-unittest", "-v", "-o-", "/tmp/tmp4dbqgk02.d",
    "-I/tmp"]\n'''
  stdout: b''
  timestamp: 1659792379
- exit_code: 1
  program: "import std.math;\n/*\nReturn median of elements in the list l.\n    >>>\
    \ median([3L, 1L, 2L, 4L, 5L])\n    3L\n    >>> median([-10L, 4L, 6L, 1000L, 10L,\
    \ 20L])\n    15.0\n    \n*/\nfloat median(long[] l) \n{\n    long[] sorted = l.dup.sort;\n\
    \    int n = l.length;\n    if (n % 2 == 1) {\n        return sorted[n / 2];\n\
    \    } else {\n        return (sorted[n / 2 - 1] + sorted[n / 2]) / 2.0;\n   \
    \ }\n}\nunittest\n{\n    alias candidate = median;\n\n    assert(candidate([3L,\
    \ 1L, 2L, 4L, 5L]) == 3L);\n    assert(candidate([-10L, 4L, 6L, 1000L, 10L, 20L])\
    \ == 8.0);\n    assert(candidate([5L]) == 5L);\n    assert(candidate([6L, 5L])\
    \ == 5.5);\n    assert(candidate([8L, 1L, 3L, 9L, 9L, 2L, 7L]) == 7L);\n}\nvoid\
    \ main(){}"
  status: SyntaxError
  stderr: 'b''Error: cannot find source code for runtime library file \''object.d\''\n       dmd
    might not be correctly installed. Run \''dmd -man\'' for installation instructions.\nimport
    path[0] = /tmp\nFailed: ["dmd", "-unittest", "-v", "-o-", "/tmp/tmpch6vai0s.d",
    "-I/tmp"]\n'''
  stdout: b''
  timestamp: 1659792380

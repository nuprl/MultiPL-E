name: HumanEval_94_skjkasdkd
language: d
prompt: "import std.typecons;\nimport std.math;\n/*\nYou are given a list of integers.\n\
  \    You need to find the largest prime value and return the sum of its digits.\n\
  \n    Examples:\n    >>> skjkasdkd([0L, 3L, 2L, 1L, 3L, 5L, 7L, 4L, 5L, 5L, 5L,\
  \ 2L, 181L, 32L, 4L, 32L, 3L, 2L, 32L, 324L, 4L, 3L])\n    10L\n    >>> skjkasdkd([1L,\
  \ 0L, 1L, 8L, 2L, 4597L, 2L, 1L, 3L, 40L, 1L, 2L, 1L, 2L, 4L, 2L, 5L, 1L])\n   \
  \ 25L\n    >>> skjkasdkd([1L, 3L, 1L, 32L, 5107L, 34L, 83278L, 109L, 163L, 23L,\
  \ 2323L, 32L, 30L, 1L, 9L, 3L])\n    13L\n    >>> skjkasdkd([0L, 724L, 32L, 71L,\
  \ 99L, 32L, 6L, 0L, 5L, 91L, 83L, 0L, 5L, 6L])\n    11L\n    >>> skjkasdkd([0L,\
  \ 81L, 12L, 3L, 1L, 21L])\n    3L\n    >>> skjkasdkd([0L, 8L, 1L, 2L, 1L, 7L])\n\
  \    7L\n    \n*/\nlong skjkasdkd(long[] lst) \n"
tests: "unittest\n{\n    alias candidate = skjkasdkd;\n\n    assert(candidate([0L,\
  \ 3L, 2L, 1L, 3L, 5L, 7L, 4L, 5L, 5L, 5L, 2L, 181L, 32L, 4L, 32L, 3L, 2L, 32L, 324L,\
  \ 4L, 3L]) == 10L);\n    assert(candidate([1L, 0L, 1L, 8L, 2L, 4597L, 2L, 1L, 3L,\
  \ 40L, 1L, 2L, 1L, 2L, 4L, 2L, 5L, 1L]) == 25L);\n    assert(candidate([1L, 3L,\
  \ 1L, 32L, 5107L, 34L, 83278L, 109L, 163L, 23L, 2323L, 32L, 30L, 1L, 9L, 3L]) ==\
  \ 13L);\n    assert(candidate([0L, 724L, 32L, 71L, 99L, 32L, 6L, 0L, 5L, 91L, 83L,\
  \ 0L, 5L, 6L]) == 11L);\n    assert(candidate([0L, 81L, 12L, 3L, 1L, 21L]) == 3L);\n\
  \    assert(candidate([0L, 8L, 1L, 2L, 1L, 7L]) == 7L);\n    assert(candidate([8191L])\
  \ == 19L);\n    assert(candidate([8191L, 123456L, 127L, 7L]) == 19L);\n    assert(candidate([127L,\
  \ 97L, 8192L]) == 10L);\n}\nvoid main(){}"
completions: ["{\n    long largestPrime = 0L;\n    foreach(long i; lst)\n    {\n \
    \       if(isPrime(i))\n        {\n            if(i > largestPrime)\n        \
    \    {\n                largestPrime = i;\n            }\n        }\n    }\n \
    \   long sum = 0L;\n    while(largestPrime > 0L)\n    {\n        sum += largestPrime\
    \ % 10L;\n        largestPrime /= 10L;\n    }\n    return sum;\n}", "{\n    long\
    \ largestPrime = 0L;\n    foreach(long i; lst)\n    {\n        if(isPrime(i))\n\
    \        {\n            if(i > largestPrime)\n            {\n                largestPrime\
    \ = i;\n            }\n        }\n    }\n    return sumDigits(largestPrime);\n\
    }", "{\n    long max = 0L;\n    foreach(i; lst)\n    {\n        if(i > max)\n\
    \        {\n            max = i;\n        }\n    }\n    long sum = 0L;\n    foreach(i;\
    \ max.to!string)\n    {\n        sum += i.to!long;\n    }\n    return sum;\n}",
  "{\n    long max = 0L;\n    foreach(i; lst)\n    {\n        if(i > max)\n      \
    \  {\n            max = i;\n        }\n    }\n    long sum = 0L;\n    foreach(i;\
    \ max.to!string)\n    {\n        sum += i.to!long;\n    }\n    return sum;\n}",
  "{\n    long max = 0L;\n    foreach(i; lst)\n    {\n        if(isPrime(i) && i >\
    \ max)\n        {\n            max = i;\n        }\n    }\n    return sumDigits(max);\n\
    }", "{\n    long max = 0L;\n    foreach(i; lst)\n    {\n        if(isPrime(i)\
    \ && i > max)\n        {\n            max = i;\n        }\n    }\n    long sum\
    \ = 0L;\n    while(max > 0L)\n    {\n        sum += max % 10L;\n        max /=\
    \ 10L;\n    }\n    return sum;\n}", "{\n    long max = 0L;\n    foreach(i; lst)\n\
    \    {\n        if(isPrime(i) && i > max)\n        {\n            max = i;\n \
    \       }\n    }\n    return max;\n}", "{\n    long max = 0L;\n    foreach(i;\
    \ lst)\n    {\n        if(i > max)\n        {\n            max = i;\n        }\n\
    \    }\n    long sum = 0L;\n    foreach(i; max.to!string)\n    {\n        sum\
    \ += i.to!long;\n    }\n    return sum;\n}", "{\n    long max = 0L;\n    foreach(elem;\
    \ lst)\n    {\n        if(isPrime(elem) && elem > max)\n        {\n          \
    \  max = elem;\n        }\n    }\n    long sum = 0L;\n    while(max > 0L)\n  \
    \  {\n        sum += max % 10L;\n        max /= 10L;\n    }\n    return sum;\n\
    }", "{\n    long max = 0L;\n    foreach(i; lst)\n    {\n        if(isPrime(i)\
    \ && i > max)\n        {\n            max = i;\n        }\n    }\n    long sum\
    \ = 0L;\n    while(max != 0L)\n    {\n        sum += max % 10L;\n        max /=\
    \ 10L;\n    }\n    return sum;\n}", "{\n    long max = 0L;\n    foreach(i; lst)\n\
    \    {\n        if(isPrime(i) && i > max)\n        {\n            max = i;\n \
    \       }\n    }\n    return sumDigits(max);\n}", "{\n    long max = 0L;\n   \
    \ foreach(elem; lst)\n    {\n        if(isPrime(elem) && elem > max)\n       \
    \ {\n            max = elem;\n        }\n    }\n    return sumDigits(max);\n}",
  "{\n    long largestPrime = 0L;\n    foreach(i; lst)\n    {\n        if(isPrime(i))\n\
    \        {\n            if(i > largestPrime)\n            {\n                largestPrime\
    \ = i;\n            }\n        }\n    }\n    long sum = 0L;\n    while(largestPrime\
    \ > 0L)\n    {\n        sum += largestPrime % 10L;\n        largestPrime /= 10L;\n\
    \    }\n    return sum;\n}", "{\n    long max = 0L;\n    foreach(i; lst)\n   \
    \ {\n        if(isPrime(i) && i > max)\n        {\n            max = i;\n    \
    \    }\n    }\n    return sumDigits(max);\n}", "{\n    long max = 0L;\n    foreach(i;\
    \ lst)\n    {\n        if(isPrime(i) && i > max)\n        {\n            max =\
    \ i;\n        }\n    }\n    long sum = 0L;\n    while(max > 0L)\n    {\n     \
    \   sum += max % 10L;\n        max /= 10L;\n    }\n    return sum;\n}", "{\n \
    \   long max = 0L;\n    foreach(i; lst)\n    {\n        if(isPrime(i) && i > max)\n\
    \        {\n            max = i;\n        }\n    }\n    long sum = 0L;\n    while(max\
    \ > 0L)\n    {\n        sum += max % 10L;\n        max /= 10L;\n    }\n    return\
    \ sum;\n}", "{\n    long max = 0L;\n    foreach(i; lst)\n    {\n        if(isPrime(i)\
    \ && i > max)\n        {\n            max = i;\n        }\n    }\n    long sum\
    \ = 0L;\n    while(max > 0L)\n    {\n        sum += max % 10L;\n        max /=\
    \ 10L;\n    }\n    return sum;\n}", "{\n    long max = 0L;\n    foreach(i; lst)\n\
    \    {\n        if(isPrime(i) && i > max)\n        {\n            max = i;\n \
    \       }\n    }\n    long sum = 0L;\n    while(max > 0L)\n    {\n        sum\
    \ += max % 10L;\n        max /= 10L;\n    }\n    return sum;\n}", "{\n    long\
    \ max = 0L;\n    foreach(i; lst)\n    {\n        if(isPrime(i) && i > max)\n \
    \       {\n            max = i;\n        }\n    }\n    long sum = 0L;\n    foreach(i;\
    \ max.to!string)\n    {\n        sum += i.to!long - '0'.to!long;\n    }\n    return\
    \ sum;\n}", "{\n    long max = 0L;\n    foreach(i; lst)\n    {\n        if(isPrime(i)\
    \ && i > max)\n        {\n            max = i;\n        }\n    }\n    return sumDigits(max);\n\
    }", "{\n    long largest = 0L;\n    foreach(i; lst)\n    {\n        if(i > largest)\n\
    \        {\n            largest = i;\n        }\n    }\n    long sum = 0L;\n \
    \   while(largest > 0L)\n    {\n        sum += largest % 10L;\n        largest\
    \ /= 10L;\n    }\n    return sum;\n}", "{\n    long max = 0L;\n    foreach(i;\
    \ lst)\n    {\n        if(isPrime(i))\n        {\n            if(i > max)\n  \
    \          {\n                max = i;\n            }\n        }\n    }\n    long\
    \ sum = 0L;\n    while(max > 0L)\n    {\n        sum += max % 10L;\n        max\
    \ /= 10L;\n    }\n    return sum;\n}", "{\n    long max = 0L;\n    foreach(elem;\
    \ lst)\n    {\n        if(isPrime(elem) && elem > max)\n        {\n          \
    \  max = elem;\n        }\n    }\n    long sum = 0L;\n    while(max > 0L)\n  \
    \  {\n        sum += max % 10L;\n        max /= 10L;\n    }\n    return sum;\n\
    }", "{\n    long max = 0L;\n    foreach(i; lst)\n    {\n        if(isPrime(i)\
    \ && i > max)\n        {\n            max = i;\n        }\n    }\n    long sum\
    \ = 0L;\n    while(max > 0L)\n    {\n        sum += max % 10L;\n        max /=\
    \ 10L;\n    }\n    return sum;\n}", "{\n    long maxPrime = 0L;\n    foreach(i;\
    \ lst)\n    {\n        if(isPrime(i))\n        {\n            maxPrime = max(maxPrime,\
    \ i);\n        }\n    }\n    long sum = 0L;\n    while(maxPrime > 0L)\n    {\n\
    \        sum += maxPrime % 10L;\n        maxPrime /= 10L;\n    }\n    return sum;\n\
    }", "{\n    long max = 0L;\n    foreach(i; lst)\n    {\n        if(isPrime(i))\n\
    \        {\n            if(i > max)\n            {\n                max = i;\n\
    \            }\n        }\n    }\n    return sumDigits(max);\n}", "{\n    long\
    \ max = 0L;\n    foreach(elem; lst)\n    {\n        if(isPrime(elem) && elem >\
    \ max)\n        {\n            max = elem;\n        }\n    }\n    return max.digits.sum;\n\
    }", "{\n    long largestPrime = 0L;\n    foreach(long i; lst)\n    {\n       \
    \ if(isPrime(i))\n        {\n            if(i > largestPrime)\n            {\n\
    \                largestPrime = i;\n            }\n        }\n    }\n    return\
    \ largestPrime;\n}", "{\n    long max = 0L;\n    foreach(i; lst)\n    {\n    \
    \    if(isPrime(i) && i > max)\n        {\n            max = i;\n        }\n \
    \   }\n    long sum = 0L;\n    while(max > 0L)\n    {\n        sum += max % 10L;\n\
    \        max /= 10L;\n    }\n    return sum;\n}", "{\n    long max = 0L;\n   \
    \ foreach(i; lst)\n    {\n        if(isPrime(i))\n        {\n            if(i\
    \ > max)\n            {\n                max = i;\n            }\n        }\n\
    \    }\n    return sumDigits(max);\n}", "{\n    long max = 0L;\n    foreach(i;\
    \ lst)\n    {\n        if(i > max)\n        {\n            max = i;\n        }\n\
    \    }\n    long sum = 0L;\n    foreach(i; max.to!string)\n    {\n        sum\
    \ += i.to!long;\n    }\n    return sum;\n}", "{\n    long max = 0L;\n    foreach(i;\
    \ lst)\n    {\n        if(isPrime(i))\n        {\n            if(i > max)\n  \
    \          {\n                max = i;\n            }\n        }\n    }\n    return\
    \ max.digits.sum;\n}", "{\n    long largestPrime = 0L;\n    foreach(i; lst)\n\
    \    {\n        if(i > largestPrime && isPrime(i))\n        {\n            largestPrime\
    \ = i;\n        }\n    }\n    return sumDigits(largestPrime);\n}", "{\n    long\
    \ largestPrime = 0L;\n    foreach(i; lst)\n    {\n        if(isPrime(i))\n   \
    \     {\n            if(i > largestPrime)\n            {\n                largestPrime\
    \ = i;\n            }\n        }\n    }\n    return sumDigits(largestPrime);\n\
    }", "{\n    long largestPrime = 0L;\n    foreach(i; lst)\n    {\n        if(isPrime(i))\n\
    \        {\n            if(i > largestPrime)\n            {\n                largestPrime\
    \ = i;\n            }\n        }\n    }\n    long sum = 0L;\n    while(largestPrime\
    \ > 0L)\n    {\n        sum += largestPrime % 10L;\n        largestPrime /= 10L;\n\
    \    }\n    return sum;\n}", "{\n    long maxPrime = 0L;\n    foreach(long i;\
    \ lst)\n    {\n        if(isPrime(i))\n        {\n            if(i > maxPrime)\n\
    \            {\n                maxPrime = i;\n            }\n        }\n    }\n\
    \    return sumDigits(maxPrime);\n}", "{\n    long largestPrime = 0L;\n    foreach(i;\
    \ lst)\n    {\n        if(isPrime(i))\n        {\n            if(i > largestPrime)\n\
    \            {\n                largestPrime = i;\n            }\n        }\n\
    \    }\n    return sumDigits(largestPrime);\n}", "{\n    long max = 0L;\n    foreach(long\
    \ i; lst)\n    {\n        if(i > max)\n        {\n            max = i;\n     \
    \   }\n    }\n    long sum = 0L;\n    foreach(long i; lst)\n    {\n        if(i\
    \ == max)\n        {\n            foreach(long j; i.to!string)\n            {\n\
    \                sum += j.to!long;\n            }\n        }\n    }\n    return\
    \ sum;\n}", "{\n    long max = 0L;\n    foreach(elem; lst)\n    {\n        if(elem\
    \ > max)\n        {\n            max = elem;\n        }\n    }\n    long sum =\
    \ 0L;\n    while(max > 0L)\n    {\n        sum += max % 10L;\n        max /= 10L;\n\
    \    }\n    return sum;\n}", "{\n    long max = 0L;\n    foreach(i; lst)\n   \
    \ {\n        if(i > max)\n        {\n            max = i;\n        }\n    }\n\
    \    long sum = 0L;\n    foreach(i; max.to!string)\n    {\n        sum += i.to!long;\n\
    \    }\n    return sum;\n}", "{\n    long maxPrime = 0L;\n    foreach(i; lst)\n\
    \    {\n        if(isPrime(i))\n        {\n            maxPrime = max(maxPrime,\
    \ i);\n        }\n    }\n    long sum = 0L;\n    while(maxPrime > 0L)\n    {\n\
    \        sum += maxPrime % 10L;\n        maxPrime /= 10L;\n    }\n    return sum;\n\
    }", "{\n    long max = 0L;\n    foreach(i; lst)\n    {\n        if(isPrime(i))\n\
    \        {\n            if(i > max)\n            {\n                max = i;\n\
    \            }\n        }\n    }\n    return sumDigits(max);\n}", "{\n    long\
    \ sum = 0L;\n    long max = 0L;\n    foreach(i; lst)\n    {\n        if(isPrime(i))\n\
    \        {\n            if(i > max)\n            {\n                max = i;\n\
    \            }\n        }\n    }\n    foreach(i; max.to!string())\n    {\n   \
    \     sum += i.to!long;\n    }\n    return sum;\n}", "{\n    long maxPrime = 0L;\n\
    \    foreach(i; lst)\n    {\n        if(isPrime(i))\n        {\n            maxPrime\
    \ = max(maxPrime, i);\n        }\n    }\n    long sum = 0L;\n    foreach(i; maxPrime.to!string)\n\
    \    {\n        sum += i.to!long;\n    }\n    return sum;\n}", "{\n    long max\
    \ = 0L;\n    foreach(i; lst)\n    {\n        if(isPrime(i))\n        {\n     \
    \       if(i > max)\n            {\n                max = i;\n            }\n\
    \        }\n    }\n    return sumDigits(max);\n}", "{\n    long max = 0L;\n  \
    \  foreach(i; lst)\n    {\n        if(isPrime(i))\n        {\n            if(i\
    \ > max)\n            {\n                max = i;\n            }\n        }\n\
    \    }\n    long sum = 0L;\n    while(max > 0L)\n    {\n        sum += max % 10L;\n\
    \        max /= 10L;\n    }\n    return sum;\n}", "{\n    long max = 0L;\n   \
    \ foreach(elem; lst)\n    {\n        if(elem > max)\n        {\n            max\
    \ = elem;\n        }\n    }\n    long sum = 0L;\n    while(max > 0L)\n    {\n\
    \        sum += max % 10L;\n        max /= 10L;\n    }\n    return sum;\n}", "{\n\
    \    long max = 0L;\n    foreach(i; lst)\n    {\n        if(isPrime(i))\n    \
    \    {\n            if(i > max)\n            {\n                max = i;\n   \
    \         }\n        }\n    }\n    return sumDigits(max);\n}", "{\n    long max\
    \ = 0L;\n    foreach(elem; lst)\n    {\n        if(isPrime(elem) && elem > max)\n\
    \        {\n            max = elem;\n        }\n    }\n    long sum = 0L;\n  \
    \  while(max > 0L)\n    {\n        sum += max % 10L;\n        max /= 10L;\n  \
    \  }\n    return sum;\n}", "{\n    long max = 0L;\n    foreach(i; lst)\n    {\n\
    \        if(isPrime(i) && i > max)\n        {\n            max = i;\n        }\n\
    \    }\n    long sum = 0L;\n    while(max > 0L)\n    {\n        sum += max % 10L;\n\
    \        max /= 10L;\n    }\n    return sum;\n}", "{\n    long max = 0L;\n   \
    \ foreach(elem; lst)\n    {\n        if(elem > max)\n        {\n            max\
    \ = elem;\n        }\n    }\n    long sum = 0L;\n    while(max > 0L)\n    {\n\
    \        sum += max % 10L;\n        max /= 10L;\n    }\n    return sum;\n}", "{\n\
    \    long max = 0L;\n    foreach(i; lst)\n    {\n        if(isPrime(i) && i >\
    \ max)\n        {\n            max = i;\n        }\n    }\n    long sum = 0L;\n\
    \    while(max > 0L)\n    {\n        sum += max % 10L;\n        max /= 10L;\n\
    \    }\n    return sum;\n}", "{\n    long max = 0L;\n    foreach(elem; lst)\n\
    \    {\n        if(elem > max)\n        {\n            max = elem;\n        }\n\
    \    }\n    long sum = 0L;\n    while(max > 0L)\n    {\n        sum += max % 10L;\n\
    \        max /= 10L;\n    }\n    return sum;\n}", "{\n    long max = 0L;\n   \
    \ foreach(i; lst)\n    {\n        if(isPrime(i) && i > max)\n        {\n     \
    \       max = i;\n        }\n    }\n    long sum = 0L;\n    while(max > 0L)\n\
    \    {\n        sum += max % 10L;\n        max /= 10L;\n    }\n    return sum;\n\
    }", "{\n    long maxPrime = 0L;\n    foreach(elem; lst)\n    {\n        if(isPrime(elem)\
    \ && elem > maxPrime)\n        {\n            maxPrime = elem;\n        }\n  \
    \  }\n    return sumDigits(maxPrime);\n}", "{\n    long largestPrime = 0L;\n \
    \   foreach(i; lst)\n    {\n        if(isPrime(i))\n        {\n            if(i\
    \ > largestPrime)\n            {\n                largestPrime = i;\n        \
    \    }\n        }\n    }\n    return largestPrime.digits.sum;\n}", "{\n    long\
    \ max = 0L;\n    foreach(i; lst)\n    {\n        if(isPrime(i) && i > max)\n \
    \       {\n            max = i;\n        }\n    }\n    return max;\n}", "{\n \
    \   long max = 0L;\n    foreach(elem; lst)\n    {\n        if(isPrime(elem) &&\
    \ elem > max)\n        {\n            max = elem;\n        }\n    }\n    return\
    \ sumDigits(max);\n}", "{\n    long max = 0L;\n    foreach(i; lst)\n    {\n  \
    \      if(isPrime(i) && i > max)\n        {\n            max = i;\n        }\n\
    \    }\n    long sum = 0L;\n    while(max > 0L)\n    {\n        sum += max % 10L;\n\
    \        max /= 10L;\n    }\n    return sum;\n}", "{\n    long max = 0L;\n   \
    \ foreach(i; lst)\n    {\n        if(isPrime(i) && i > max)\n        {\n     \
    \       max = i;\n        }\n    }\n    long sum = 0L;\n    while(max > 0L)\n\
    \    {\n        sum += max % 10L;\n        max /= 10L;\n    }\n    return sum;\n\
    }", "{\n    long max = 0L;\n    foreach(i; lst)\n    {\n        if(isPrime(i)\
    \ && i > max)\n        {\n            max = i;\n        }\n    }\n    return sumDigits(max);\n\
    }", "{\n    long max = 0L;\n    foreach(i; lst)\n    {\n        if(isPrime(i)\
    \ && i > max)\n        {\n            max = i;\n        }\n    }\n    return sumDigits(max);\n\
    }", "{\n    long largestPrime = 0L;\n    foreach(i; lst)\n    {\n        if(isPrime(i))\n\
    \        {\n            if(i > largestPrime)\n            {\n                largestPrime\
    \ = i;\n            }\n        }\n    }\n    return sumDigits(largestPrime);\n\
    }\nlong sumDigits(long n)\n{\n    long sum = 0L;\n    while(n > 0L)\n    {\n \
    \       sum += n % 10L;\n        n /= 10L;\n    }\n    return sum;\n}", "{\n \
    \   long max = 0L;\n    foreach(i; lst)\n    {\n        if(isPrime(i) && i > max)\n\
    \        {\n            max = i;\n        }\n    }\n    return sumDigits(max);\n\
    }", "{\n    long max = 0L;\n    foreach(elem; lst)\n    {\n        if(isPrime(elem)\
    \ && elem > max)\n        {\n            max = elem;\n        }\n    }\n    long\
    \ sum = 0L;\n    while(max > 0L)\n    {\n        sum += max % 10L;\n        max\
    \ /= 10L;\n    }\n    return sum;\n}", "{\n    long max = 0L;\n    foreach(i;\
    \ lst)\n    {\n        if(isPrime(i) && i > max)\n        {\n            max =\
    \ i;\n        }\n    }\n    return sumDigits(max);\n}", "{\n    long max = 0L;\n\
    \    foreach(long i; lst)\n    {\n        if(isPrime(i))\n        {\n        \
    \    if(i > max)\n            {\n                max = i;\n            }\n   \
    \     }\n    }\n    return sumDigits(max);\n}", "{\n    long max = 0L;\n    foreach(long\
    \ i; lst)\n    {\n        if(i > max)\n        {\n            max = i;\n     \
    \   }\n    }\n    long sum = 0L;\n    while(max > 0)\n    {\n        sum += max\
    \ % 10;\n        max /= 10;\n    }\n    return sum;\n}", "{\n    long max = 0L;\n\
    \    foreach(e; lst)\n    {\n        if(e > max)\n        {\n            max =\
    \ e;\n        }\n    }\n    long prime = 0L;\n    foreach(e; lst)\n    {\n   \
    \     if(e > prime && isPrime(e))\n        {\n            prime = e;\n       \
    \ }\n    }\n    long sum = 0L;\n    foreach(e; prime.to!string)\n    {\n     \
    \   sum += e.to!long;\n    }\n    return sum;\n}", "{\n    long max = 0L;\n  \
    \  foreach(e; lst)\n    {\n        if(isPrime(e))\n        {\n            if(e\
    \ > max)\n            {\n                max = e;\n            }\n        }\n\
    \    }\n    return sumDigits(max);\n}", "{\n    long max = 0L;\n    foreach(e;\
    \ lst)\n    {\n        if(isPrime(e))\n        {\n            if(e > max)\n  \
    \          {\n                max = e;\n            }\n        }\n    }\n    return\
    \ sumDigits(max);\n}", "{\n    long max = 0L;\n    foreach(e; lst)\n    {\n  \
    \      if(isPrime(e))\n        {\n            if(e > max)\n            {\n   \
    \             max = e;\n            }\n        }\n    }\n    return sumDigits(max);\n\
    }", "{\n    long max = 0L;\n    foreach(elem; lst)\n    {\n        if(elem > max)\n\
    \        {\n            max = elem;\n        }\n    }\n    long sum = 0L;\n  \
    \  while(max > 0L)\n    {\n        sum += max % 10L;\n        max /= 10L;\n  \
    \  }\n    return sum;\n}", "{\n    long max = 0L;\n    foreach(elem; lst)\n  \
    \  {\n        if(isPrime(elem) && elem > max)\n        {\n            max = elem;\n\
    \        }\n    }\n    return sumDigits(max);\n}", "{\n    long max = 0L;\n  \
    \  foreach(i; lst)\n    {\n        if(isPrime(i) && i > max)\n        {\n    \
    \        max = i;\n        }\n    }\n    return max.digits.sum;\n}", "{\n    long\
    \ largestPrime = 0L;\n    foreach(i; lst)\n    {\n        if(isPrime(i))\n   \
    \     {\n            if(i > largestPrime)\n            {\n                largestPrime\
    \ = i;\n            }\n        }\n    }\n    long sum = 0L;\n    while(largestPrime\
    \ > 0L)\n    {\n        sum += largestPrime % 10L;\n        largestPrime /= 10L;\n\
    \    }\n    return sum;\n}", "{\n    long max = 0L;\n    foreach(i; lst)\n   \
    \ {\n        if(isPrime(i) && i > max)\n        {\n            max = i;\n    \
    \    }\n    }\n    long sum = 0L;\n    while(max > 0L)\n    {\n        sum +=\
    \ max % 10L;\n        max /= 10L;\n    }\n    return sum;\n}", "{\n    long max\
    \ = 0L;\n    foreach(i; lst)\n    {\n        if(isPrime(i) && i > max)\n     \
    \   {\n            max = i;\n        }\n    }\n    long sum = 0L;\n    while(max\
    \ > 0L)\n    {\n        sum += max % 10L;\n        max /= 10L;\n    }\n    return\
    \ sum;\n}", "{\n    long max = 0L;\n    foreach(i; lst)\n    {\n        if(isPrime(i)\
    \ && i > max)\n        {\n            max = i;\n        }\n    }\n    long sum\
    \ = 0L;\n    while(max > 0L)\n    {\n        sum += max % 10L;\n        max /=\
    \ 10L;\n    }\n    return sum;\n}", "{\n    long max = 0L;\n    foreach(i; lst)\n\
    \    {\n        if(i > max)\n        {\n            max = i;\n        }\n    }\n\
    \    long sum = 0L;\n    foreach(i; max.to!string)\n    {\n        sum += i.to!long;\n\
    \    }\n    return sum;\n}", "{\n    long max = 0L;\n    foreach(i; lst)\n   \
    \ {\n        if(isPrime(i) && i > max)\n        {\n            max = i;\n    \
    \    }\n    }\n    long sum = 0L;\n    while(max > 0L)\n    {\n        sum +=\
    \ max % 10L;\n        max /= 10L;\n    }\n    return sum;\n}", "{\n    long max\
    \ = 0L;\n    foreach(i; lst)\n    {\n        if(isPrime(i) && i > max)\n     \
    \   {\n            max = i;\n        }\n    }\n    long sum = 0L;\n    while(max\
    \ > 0L)\n    {\n        sum += max % 10L;\n        max /= 10L;\n    }\n    return\
    \ sum;\n}", "{\n    long max = 0L;\n    foreach(i; lst)\n    {\n        if(isPrime(i)\
    \ && i > max)\n        {\n            max = i;\n        }\n    }\n    long sum\
    \ = 0L;\n    while(max > 0L)\n    {\n        sum += max % 10L;\n        max /=\
    \ 10L;\n    }\n    return sum;\n}", "{\n    long sum = 0L;\n    long max = 0L;\n\
    \    foreach(i; lst)\n    {\n        if(isPrime(i))\n        {\n            if(i\
    \ > max)\n            {\n                max = i;\n            }\n        }\n\
    \    }\n    foreach(i; max.to!string)\n    {\n        sum += i.to!long;\n    }\n\
    \    return sum;\n}", "{\n    long largestPrime = 0L;\n    foreach(i; lst)\n \
    \   {\n        if(isPrime(i) && i > largestPrime)\n        {\n            largestPrime\
    \ = i;\n        }\n    }\n    return sumDigits(largestPrime);\n}", "{\n    long\
    \ largestPrime = 0L;\n    foreach(i; lst)\n    {\n        if(isPrime(i) && i >\
    \ largestPrime)\n        {\n            largestPrime = i;\n        }\n    }\n\
    \    return sumDigits(largestPrime);\n}", "{\n    long max = 0L;\n    foreach(e;\
    \ lst)\n    {\n        if(isPrime(e))\n        {\n            if(e > max)\n  \
    \          {\n                max = e;\n            }\n        }\n    }\n    string\
    \ str = max.to!string;\n    long sum = 0L;\n    foreach(e; str)\n    {\n     \
    \   sum += e.to!long;\n    }\n    return sum;\n}", "{\n    long max = 0L;\n  \
    \  foreach(i; lst)\n    {\n        if(isPrime(i) && i > max)\n        {\n    \
    \        max = i;\n        }\n    }\n    long sum = 0L;\n    while(max != 0L)\n\
    \    {\n        sum += max % 10L;\n        max /= 10L;\n    }\n    return sum;\n\
    }", "{\n    long max = 0L;\n    foreach(i; lst)\n    {\n        if(isPrime(i)\
    \ && i > max)\n        {\n            max = i;\n        }\n    }\n    long sum\
    \ = 0L;\n    while(max != 0L)\n    {\n        sum += max % 10L;\n        max /=\
    \ 10L;\n    }\n    return sum;\n}", "{\n    long max = 0L;\n    foreach(i; lst)\n\
    \    {\n        if(i > max)\n        {\n            max = i;\n        }\n    }\n\
    \    long sum = 0L;\n    foreach(i; lst)\n    {\n        if(i == max)\n      \
    \  {\n            foreach(j; i.to!string)\n            {\n                sum\
    \ += j.to!long;\n            }\n        }\n    }\n    return sum;\n}", "{\n  \
    \  long max = 0L;\n    foreach(i; lst)\n    {\n        if(i > max)\n        {\n\
    \            max = i;\n        }\n    }\n    long sum = 0L;\n    foreach(i; max.to!string)\n\
    \    {\n        sum += i.to!long;\n    }\n    return sum;\n}", "{\n    long max\
    \ = 0L;\n    foreach(i; lst)\n    {\n        if(isPrime(i) && i > max)\n     \
    \   {\n            max = i;\n        }\n    }\n    return max.digits.sum;\n}",
  "{\n    long max = 0L;\n    foreach(e; lst)\n    {\n        if(e > max)\n      \
    \  {\n            max = e;\n        }\n    }\n    long sum = 0L;\n    foreach(e;\
    \ max.to!string())\n    {\n        sum += e.to!long;\n    }\n    return sum;\n\
    }", "{\n    long maxPrime = 0L;\n    foreach(i; lst)\n    {\n        if(isPrime(i))\n\
    \        {\n            maxPrime = max(maxPrime, i);\n        }\n    }\n    long\
    \ sum = 0L;\n    foreach(i; maxPrime.to!string)\n    {\n        sum += i.to!long;\n\
    \    }\n    return sum;\n}", "{\n    long largestPrime = 0L;\n    foreach(i; lst)\n\
    \    {\n        if(isPrime(i) && i > largestPrime)\n        {\n            largestPrime\
    \ = i;\n        }\n    }\n    return sumDigits(largestPrime);\n}", "{\n    long\
    \ maxPrime = 0L;\n    foreach(i; lst) \n    {\n        if(isPrime(i)) \n     \
    \   {\n            maxPrime = max(maxPrime, i);\n        }\n    }\n    return\
    \ sumDigits(maxPrime);\n}", "{\n    long max = 0L;\n    foreach(i; lst)\n    {\n\
    \        if(isPrime(i) && i > max)\n        {\n            max = i;\n        }\n\
    \    }\n    long sum = 0L;\n    while(max > 0L)\n    {\n        sum += max % 10L;\n\
    \        max /= 10L;\n    }\n    return sum;\n}", "{\n    long max = 0L;\n   \
    \ foreach(i; lst)\n    {\n        if(isPrime(i) && i > max)\n        {\n     \
    \       max = i;\n        }\n    }\n    long sum = 0L;\n    while(max > 0L)\n\
    \    {\n        sum += max % 10L;\n        max /= 10L;\n    }\n    return sum;\n\
    }", "{\n    long max = 0L;\n    foreach(e; lst)\n    {\n        if(isPrime(e))\n\
    \        {\n            if(e > max)\n            {\n                max = e;\n\
    \            }\n        }\n    }\n    long sum = 0L;\n    while(max > 0L)\n  \
    \  {\n        sum += max % 10L;\n        max /= 10L;\n    }\n    return sum;\n\
    }", "{\n    long max = 0L;\n    foreach(i; lst)\n    {\n        if(isPrime(i)\
    \ && i > max)\n        {\n            max = i;\n        }\n    }\n    return sumDigits(max);\n\
    }", "{\n    long[] primes = new long[lst.length];\n    long[] primes_digits =\
    \ new long[lst.length];\n    long[] primes_digits_sum = new long[lst.length];\n\
    \    long[] primes_digits_sum_max = new long[lst.length];\n    long[] primes_digits_sum_max_index\
    \ = new long[lst.length];\n    long[] primes_digits_sum_max_index_max = new long[lst.length];\n\
    \    long[] primes_digits_sum_max_index_max_max = new long[lst.length];\n    long[]\
    \ primes_digits_sum_max_index_max_max_max = new long[lst.length];\n    long[]\
    \ primes_digits_sum_max_index_max_max_max_max = new long[lst.length];\n    long[]\
    \ primes_digits_sum_max_index_max_max_max_max_max = new long[lst.length];\n  \
    \  long[] primes_digits_sum_max_index_max_max_max_max_max_max = new long[lst.length];\n\
    \    long[] primes_digits_sum_max_index_max_max_max_max_max_max_max = new long[lst.length];\n\
    \    long[] primes_digits_sum_max_index_max_max_max_max_max_max_max_max = new\
    \ long[lst.length];\n    long[] primes_digits_sum_max_index_max_max_max_max_max_max_max_max_max\
    \ = new long[lst.length];\n    long[] primes_digits_sum_max_index_max_max_max_max_max_max_max_max_max_max\
    \ = new long[lst.length];\n    long[] primes_digits_sum_max_index_max_max_max_max_max_max_max_max_max_max_max\
    \ = new long[lst.length];\n    long[] primes_digits_sum_max_index", "{\n    long\
    \ max = 0L;\n    foreach(i; lst)\n    {\n        if(i > max)\n        {\n    \
    \        max = i;\n        }\n    }\n    long sum = 0L;\n    foreach(i; max.to!string)\n\
    \    {\n        sum += i.to!long;\n    }\n    return sum;\n}", "{\n    long max\
    \ = 0L;\n    foreach(long i; lst)\n    {\n        if(i > max)\n        {\n   \
    \         max = i;\n        }\n    }\n    long maxPrime = 0L;\n    foreach(long\
    \ i; lst)\n    {\n        if(i > maxPrime && isPrime(i))\n        {\n        \
    \    maxPrime = i;\n        }\n    }\n    long sum = 0L;\n    while(maxPrime >\
    \ 0L)\n    {\n        sum += maxPrime % 10L;\n        maxPrime /= 10L;\n    }\n\
    \    return sum;\n}", "{\n    long max = 0L;\n    foreach(i; lst)\n    {\n   \
    \     if(isPrime(i) && i > max)\n        {\n            max = i;\n        }\n\
    \    }\n    long sum = 0L;\n    while(max > 0L)\n    {\n        sum += max % 10L;\n\
    \        max /= 10L;\n    }\n    return sum;\n}", "{\n    long largestPrime =\
    \ 0L;\n    foreach(i; lst)\n    {\n        if(isPrime(i) && i > largestPrime)\n\
    \        {\n            largestPrime = i;\n        }\n    }\n    long sum = 0L;\n\
    \    foreach(i; largestPrime.toString())\n    {\n        sum += i.to!long;\n \
    \   }\n    return sum;\n}", "{\n    long max = 0L;\n    foreach(i; lst)\n    {\n\
    \        if(isPrime(i) && i > max)\n        {\n            max = i;\n        }\n\
    \    }\n    long sum = 0L;\n    while(max > 0L)\n    {\n        sum += max % 10L;\n\
    \        max /= 10L;\n    }\n    return sum;\n}", "{\n    long max = 0L;\n   \
    \ foreach(i; lst)\n    {\n        if(isPrime(i) && i > max)\n        {\n     \
    \       max = i;\n        }\n    }\n    long sum = 0L;\n    while(max > 0L)\n\
    \    {\n        sum += max % 10L;\n        max /= 10L;\n    }\n    return sum;\n\
    }", "{\n    long largestPrime = 0L;\n    foreach(l; lst)\n    {\n        if(isPrime(l))\n\
    \        {\n            if(l > largestPrime)\n            {\n                largestPrime\
    \ = l;\n            }\n        }\n    }\n    return sumDigits(largestPrime);\n\
    }", "{\n    long max = 0L;\n    foreach(i; lst)\n    {\n        if(isPrime(i)\
    \ && i > max)\n        {\n            max = i;\n        }\n    }\n    long sum\
    \ = 0L;\n    while(max > 0L)\n    {\n        sum += max % 10L;\n        max /=\
    \ 10L;\n    }\n    return sum;\n}", "{\n    long largestPrime = 0L;\n    foreach(long\
    \ i; lst)\n    {\n        if(isPrime(i))\n        {\n            if(i > largestPrime)\n\
    \            {\n                largestPrime = i;\n            }\n        }\n\
    \    }\n    return sumDigits(largestPrime);\n}", "{\n    long max = 0L;\n    foreach(elem;\
    \ lst)\n    {\n        if(elem > max)\n        {\n            max = elem;\n  \
    \      }\n    }\n    long sum = 0L;\n    while(max > 0L)\n    {\n        sum +=\
    \ max % 10L;\n        max /= 10L;\n    }\n    return sum;\n}", "{\n    long largestPrime\
    \ = 0L;\n    foreach(num; lst)\n    {\n        if(isPrime(num))\n        {\n \
    \           if(num > largestPrime)\n            {\n                largestPrime\
    \ = num;\n            }\n        }\n    }\n    return largestPrime.digits.sum;\n\
    }", "{\n    long max = 0L;\n    foreach(i; lst)\n    {\n        if(i > max)\n\
    \        {\n            max = i;\n        }\n    }\n    long sum = 0L;\n    foreach(i;\
    \ lst)\n    {\n        if(i == max)\n        {\n            foreach(j; i.to!string)\n\
    \            {\n                sum += j.to!long;\n            }\n        }\n\
    \    }\n    return sum;\n}", "{\n    long max = 0L;\n    foreach(i; lst)\n   \
    \ {\n        if(isPrime(i) && i > max)\n        {\n            max = i;\n    \
    \    }\n    }\n    long sum = 0L;\n    while(max > 0L)\n    {\n        sum +=\
    \ max % 10L;\n        max /= 10L;\n    }\n    return sum;\n}", "{\n    long max\
    \ = 0L;\n    foreach(i; lst)\n    {\n        if(isPrime(i) && i > max)\n     \
    \   {\n            max = i;\n        }\n    }\n    long sum = 0L;\n    while(max\
    \ > 0L)\n    {\n        sum += max % 10L;\n        max /= 10L;\n    }\n    return\
    \ sum;\n}", "{\n    long max = 0L;\n    foreach(i; lst)\n    {\n        if(isPrime(i)\
    \ && i > max)\n        {\n            max = i;\n        }\n    }\n    long sum\
    \ = 0L;\n    while(max > 0L)\n    {\n        sum += max % 10L;\n        max /=\
    \ 10L;\n    }\n    return sum;\n}", "{\n    long maxPrime = 0L;\n    foreach(num;\
    \ lst)\n    {\n        if(isPrime(num))\n        {\n            maxPrime = max(maxPrime,\
    \ num);\n        }\n    }\n    long sum = 0L;\n    while(maxPrime > 0L)\n    {\n\
    \        sum += maxPrime % 10L;\n        maxPrime /= 10L;\n    }\n    return sum;\n\
    }", "{\n    long max = 0L;\n    foreach(i; lst)\n    {\n        if(i > max)\n\
    \        {\n            max = i;\n        }\n    }\n    long sum = 0L;\n    foreach(i;\
    \ lst)\n    {\n        if(i == max)\n        {\n            foreach(j; i.to!string)\n\
    \            {\n                sum += j.to!long;\n            }\n        }\n\
    \    }\n    return sum;\n}", "{\n    long max = 0L;\n    foreach(elem; lst)\n\
    \    {\n        if(isPrime(elem) && elem > max)\n        {\n            max =\
    \ elem;\n        }\n    }\n    long sum = 0L;\n    foreach(elem; max.to!string)\n\
    \    {\n        sum += elem.to!long;\n    }\n    return sum;\n}", "{\n    long\
    \ max = 0L;\n    foreach(i; lst)\n    {\n        if(i > max)\n        {\n    \
    \        max = i;\n        }\n    }\n    long sum = 0L;\n    foreach(i; max.to!string)\n\
    \    {\n        sum += i.to!long;\n    }\n    return sum;\n}", "{\n    long largestPrime\
    \ = 0L;\n    foreach(i; lst)\n    {\n        if(isPrime(i) && i > largestPrime)\n\
    \        {\n            largestPrime = i;\n        }\n    }\n    return sumDigits(largestPrime);\n\
    }", "{\n    long max = 0L;\n    foreach(e; lst)\n    {\n        if(e > max)\n\
    \        {\n            max = e;\n        }\n    }\n    long sum = 0L;\n    foreach(e;\
    \ max.to!string)\n    {\n        sum += e.to!long;\n    }\n    return sum;\n}",
  "{\n    long max = 0L;\n    foreach(i; lst)\n    {\n        if(i > max)\n      \
    \  {\n            max = i;\n        }\n    }\n    long sum = 0L;\n    foreach(i;\
    \ lst)\n    {\n        if(i == max)\n        {\n            foreach(j; i.to!string)\n\
    \            {\n                sum += j.to!long;\n            }\n        }\n\
    \    }\n    return sum;\n}", "{\n    long maxPrime = 0L;\n    foreach(i; lst)\n\
    \    {\n        if(isPrime(i))\n        {\n            maxPrime = max(maxPrime,\
    \ i);\n        }\n    }\n    return sum(to!string(maxPrime).map!(a => to!long(a)));\n\
    }", "{\n    long max = 0L;\n    foreach(i; lst)\n    {\n        if(isPrime(i)\
    \ && i > max)\n        {\n            max = i;\n        }\n    }\n    long sum\
    \ = 0L;\n    foreach(i; max.to!string)\n    {\n        sum += i.to!long - 48L;\n\
    \    }\n    return sum;\n}", "{\n    long max = 0L;\n    foreach(i; lst)\n   \
    \ {\n        if(isPrime(i) && i > max)\n        {\n            max = i;\n    \
    \    }\n    }\n    long sum = 0L;\n    while(max > 0L)\n    {\n        sum +=\
    \ max % 10L;\n        max /= 10L;\n    }\n    return sum;\n}", "{\n    long max\
    \ = 0L;\n    foreach(i; lst)\n    {\n        if(isPrime(i) && i > max)\n     \
    \   {\n            max = i;\n        }\n    }\n    long sum = 0L;\n    while(max\
    \ > 0L)\n    {\n        sum += max % 10L;\n        max /= 10L;\n    }\n    return\
    \ sum;\n}", "{\n    long maxPrime = 0L;\n    foreach(num; lst)\n    {\n      \
    \  if(isPrime(num))\n        {\n            maxPrime = max(maxPrime, num);\n \
    \       }\n    }\n    long sum = 0L;\n    while(maxPrime > 0L)\n    {\n      \
    \  sum += maxPrime % 10L;\n        maxPrime /= 10L;\n    }\n    return sum;\n}",
  "{\n    long max = 0L;\n    foreach(i; lst)\n    {\n        if(isPrime(i) && i >\
    \ max)\n        {\n            max = i;\n        }\n    }\n    return sumDigits(max);\n\
    }", "{\n    long largestPrime = 0L;\n    foreach(i; lst)\n    {\n        if(isPrime(i)\
    \ && i > largestPrime)\n        {\n            largestPrime = i;\n        }\n\
    \    }\n    return sumDigits(largestPrime);\n}", "{\n    long max = 0L;\n    foreach(i;\
    \ lst)\n    {\n        if(i > max)\n        {\n            max = i;\n        }\n\
    \    }\n    long sum = 0L;\n    foreach(i; lst)\n    {\n        if(i == max)\n\
    \        {\n            foreach(j; i.to!string)\n            {\n             \
    \   sum += j.to!long;\n            }\n        }\n    }\n    return sum;\n}", "{\n\
    \    long max = 0L;\n    foreach(i; lst)\n    {\n        if(isPrime(i) && i >\
    \ max)\n        {\n            max = i;\n        }\n    }\n    return sumDigits(max);\n\
    }", "{\n    long max = 0L;\n    foreach(i; lst)\n    {\n        if(i > max)\n\
    \        {\n            max = i;\n        }\n    }\n    long sum = 0L;\n    foreach(i;\
    \ lst)\n    {\n        if(i == max)\n        {\n            while(i > 0)\n   \
    \         {\n                sum += i % 10;\n                i /= 10;\n      \
    \      }\n        }\n    }\n    return sum;\n}", "{\n    long max = 0L;\n    foreach(i;\
    \ lst)\n    {\n        if(i > max)\n        {\n            max = i;\n        }\n\
    \    }\n    long sum = 0L;\n    foreach(i; lst)\n    {\n        if(i == max)\n\
    \        {\n            foreach(j; i.to!string)\n            {\n             \
    \   sum += j.to!long;\n            }\n        }\n    }\n    return sum;\n}", "{\n\
    \    long max = 0L;\n    foreach(i; lst)\n    {\n        if(i > max)\n       \
    \ {\n            max = i;\n        }\n    }\n    long sum = 0L;\n    foreach(i;\
    \ lst)\n    {\n        if(i == max)\n        {\n            if(i == 0L)\n    \
    \        {\n                sum = 0L;\n            }\n            else\n     \
    \       {\n                sum = 0L;\n                while(i > 0L)\n        \
    \        {\n                    sum += i % 10L;\n                    i /= 10L;\n\
    \                }\n            }\n        }\n    }\n    return sum;\n}", "{\n\
    \    long largestPrime = 0L;\n    foreach(i; lst)\n    {\n        if(i > largestPrime\
    \ && isPrime(i))\n        {\n            largestPrime = i;\n        }\n    }\n\
    \    long sum = 0L;\n    while(largestPrime > 0L)\n    {\n        sum += largestPrime\
    \ % 10L;\n        largestPrime /= 10L;\n    }\n    return sum;\n}", "{\n    long\
    \ largestPrime = 0L;\n    foreach(i; lst)\n    {\n        if(isPrime(i))\n   \
    \     {\n            if(i > largestPrime)\n            {\n                largestPrime\
    \ = i;\n            }\n        }\n    }\n    return sumDigits(largestPrime);\n\
    }", "{\n    long max = 0L;\n    foreach(i; lst)\n    {\n        if(isPrime(i))\n\
    \        {\n            if(i > max)\n            {\n                max = i;\n\
    \            }\n        }\n    }\n    return sumDigits(max);\n}", "{\n    long\
    \ max = 0L;\n    foreach(elem; lst)\n    {\n        if(elem > max)\n        {\n\
    \            max = elem;\n        }\n    }\n    long sum = 0L;\n    while(max\
    \ > 0L)\n    {\n        sum += max % 10L;\n        max /= 10L;\n    }\n    return\
    \ sum;\n}", "{\n    long max = 0L;\n    foreach(i; lst)\n    {\n        if(isPrime(i))\n\
    \        {\n            if(i > max)\n            {\n                max = i;\n\
    \            }\n        }\n    }\n    return sumDigits(max);\n}", "{\n    long\
    \ maxPrime = 0L;\n    foreach(i; lst)\n    {\n        if(isPrime(i))\n       \
    \ {\n            maxPrime = max(maxPrime, i);\n        }\n    }\n    long sum\
    \ = 0L;\n    while(maxPrime > 0L)\n    {\n        sum += maxPrime % 10L;\n   \
    \     maxPrime /= 10L;\n    }\n    return sum;\n}", "{\n    long max = 0L;\n \
    \   foreach(i; lst)\n    {\n        if(isPrime(i))\n        {\n            if(i\
    \ > max)\n            {\n                max = i;\n            }\n        }\n\
    \    }\n    long sum = 0L;\n    while(max > 0L)\n    {\n        sum += max % 10L;\n\
    \        max /= 10L;\n    }\n    return sum;\n}", "{\n    long maxPrime = 0L;\n\
    \    foreach(i; lst)\n    {\n        if(isPrime(i))\n        {\n            maxPrime\
    \ = max(maxPrime, i);\n        }\n    }\n    long sum = 0L;\n    while(maxPrime\
    \ > 0L)\n    {\n        sum += maxPrime % 10L;\n        maxPrime /= 10L;\n   \
    \ }\n    return sum;\n}", "{\n    long largestPrime = 0L;\n    foreach(num; lst)\n\
    \    {\n        if(isPrime(num))\n        {\n            if(num > largestPrime)\n\
    \            {\n                largestPrime = num;\n            }\n        }\n\
    \    }\n    long sum = 0L;\n    while(largestPrime > 0L)\n    {\n        sum +=\
    \ largestPrime % 10L;\n        largestPrime /= 10L;\n    }\n    return sum;\n}",
  "{\n    long max = 0L;\n    foreach(i; lst)\n    {\n        if(isPrime(i))\n   \
    \     {\n            if(i > max)\n            {\n                max = i;\n  \
    \          }\n        }\n    }\n    return sumDigits(max);\n}", "{\n    long max\
    \ = 0L;\n    foreach(i; lst)\n    {\n        if(isPrime(i))\n        {\n     \
    \       if(i > max)\n            {\n                max = i;\n            }\n\
    \        }\n    }\n    long sum = 0L;\n    while(max > 0L)\n    {\n        sum\
    \ += max % 10L;\n        max /= 10L;\n    }\n    return sum;\n}", "{\n    long\
    \ max = 0L;\n    foreach(i; lst)\n    {\n        if(isPrime(i))\n        {\n \
    \           if(i > max)\n            {\n                max = i;\n           \
    \ }\n        }\n    }\n    return sumDigits(max);\n}", "{\n    long max = 0L;\n\
    \    foreach(i; lst)\n    {\n        if(isPrime(i))\n        {\n            if(i\
    \ > max)\n            {\n                max = i;\n            }\n        }\n\
    \    }\n    long sum = 0L;\n    while(max > 0L)\n    {\n        sum += max % 10L;\n\
    \        max /= 10L;\n    }\n    return sum;\n}", "{\n    long max = 0L;\n   \
    \ foreach(elem; lst)\n    {\n        if(elem > max)\n        {\n            max\
    \ = elem;\n        }\n    }\n    long sum = 0L;\n    foreach(elem; max.toString())\n\
    \    {\n        sum += elem.to!long;\n    }\n    return sum;\n}", "{\n    long\
    \ max = 0L;\n    foreach(i; lst)\n    {\n        if(isPrime(i))\n        {\n \
    \           if(i > max)\n            {\n                max = i;\n           \
    \ }\n        }\n    }\n    long sum = 0L;\n    while(max > 0L)\n    {\n      \
    \  sum += max % 10L;\n        max /= 10L;\n    }\n    return sum;\n}", "{\n  \
    \  long largestPrime = 0L;\n    foreach(elem; lst)\n    {\n        if(elem > largestPrime\
    \ && isPrime(elem))\n        {\n            largestPrime = elem;\n        }\n\
    \    }\n    return sumDigits(largestPrime);\n}", "{\n    long max = 0L;\n    foreach(i;\
    \ lst)\n    {\n        if(isPrime(i))\n        {\n            if(i > max)\n  \
    \          {\n                max = i;\n            }\n        }\n    }\n    return\
    \ sumDigits(max);\n}", "{\n    long max = 0L;\n    foreach(i; lst)\n    {\n  \
    \      if(isPrime(i))\n        {\n            if(i > max)\n            {\n   \
    \             max = i;\n            }\n        }\n    }\n    long sum = 0L;\n\
    \    while(max > 0L)\n    {\n        sum += max % 10L;\n        max /= 10L;\n\
    \    }\n    return sum;\n}", "{\n    long largestPrime = 0L;\n    foreach(num;\
    \ lst)\n    {\n        if(num > largestPrime && isPrime(num))\n        {\n   \
    \         largestPrime = num;\n        }\n    }\n    return sumDigits(largestPrime);\n\
    }", "{\n    long maxPrime = 0L;\n    foreach(i; lst)\n    {\n        if(isPrime(i))\n\
    \        {\n            maxPrime = max(maxPrime, i);\n        }\n    }\n    return\
    \ sumDigits(maxPrime);\n}", "{\n    long largestPrime = 0L;\n    foreach(long\
    \ i; lst)\n    {\n        if(isPrime(i))\n        {\n            if(i > largestPrime)\n\
    \            {\n                largestPrime = i;\n            }\n        }\n\
    \    }\n    long sum = 0L;\n    foreach(char c; to!string(largestPrime))\n   \
    \ {\n        sum += to!long(c);\n    }\n    return sum;\n}", "{\n    long largestPrime\
    \ = 0L;\n    foreach(num; lst)\n    {\n        if(isPrime(num))\n        {\n \
    \           if(num > largestPrime)\n            {\n                largestPrime\
    \ = num;\n            }\n        }\n    }\n    return largestPrime.digits.sum;\n\
    }", "{\n    long max = 0L;\n    foreach(i; lst)\n    {\n        if(isPrime(i))\n\
    \        {\n            if(i > max)\n            {\n                max = i;\n\
    \            }\n        }\n    }\n    return sumDigits(max);\n}", "{\n    long\
    \ maxPrime = 0L;\n    foreach(i; lst)\n    {\n        if(i > maxPrime && isPrime(i))\n\
    \        {\n            maxPrime = i;\n        }\n    }\n    long sum = 0L;\n\
    \    foreach(c; to!string(maxPrime))\n    {\n        sum += c.to!long;\n    }\n\
    \    return sum;\n}", "{\n    long max = 0L;\n    foreach(i; lst)\n    {\n   \
    \     if(i > max)\n        {\n            max = i;\n        }\n    }\n    long\
    \ sum = 0L;\n    foreach(i; lst)\n    {\n        if(i == max)\n        {\n   \
    \         foreach(j; i.to!string)\n            {\n                sum += j.to!long;\n\
    \            }\n        }\n    }\n    return sum;\n}", "{\n    long max = 0L;\n\
    \    foreach(i; lst)\n    {\n        if(isPrime(i) && i > max)\n        {\n  \
    \          max = i;\n        }\n    }\n    long sum = 0L;\n    while(max > 0L)\n\
    \    {\n        sum += max % 10L;\n        max /= 10L;\n    }\n    return sum;\n\
    }", "{\n    long max = 0L;\n    foreach(i; lst)\n    {\n        if(i > max)\n\
    \        {\n            max = i;\n        }\n    }\n    long sum = 0L;\n    while(max\
    \ > 0)\n    {\n        sum += max % 10;\n        max /= 10;\n    }\n    return\
    \ sum;\n}", "{\n    long max = 0L;\n    foreach(i; lst)\n    {\n        if(isPrime(i)\
    \ && i > max)\n        {\n            max = i;\n        }\n    }\n    long sum\
    \ = 0L;\n    while(max > 0L)\n    {\n        sum += max % 10L;\n        max /=\
    \ 10L;\n    }\n    return sum;\n}", "{\n    long max = 0L;\n    foreach(i; lst)\n\
    \    {\n        if(i > max)\n        {\n            max = i;\n        }\n    }\n\
    \    long prime = 0L;\n    foreach(i; lst)\n    {\n        if(i > prime && isPrime(i))\n\
    \        {\n            prime = i;\n        }\n    }\n    long sum = 0L;\n   \
    \ foreach(i; prime.to!string)\n    {\n        sum += i.to!long;\n    }\n    return\
    \ sum;\n}", "{\n    long max = 0L;\n    foreach(elem; lst)\n    {\n        if(elem\
    \ > max)\n        {\n            max = elem;\n        }\n    }\n    long sum =\
    \ 0L;\n    while(max > 0L)\n    {\n        sum += max % 10L;\n        max /= 10L;\n\
    \    }\n    return sum;\n}", "{\n    long max = 0L;\n    foreach(el; lst)\n  \
    \  {\n        if(el > max)\n        {\n            max = el;\n        }\n    }\n\
    \    long sum = 0L;\n    foreach(el; max.to!string)\n    {\n        sum += el.to!long;\n\
    \    }\n    return sum;\n}", "{\n    long max = 0L;\n    foreach(long i; lst)\n\
    \    {\n        if(i > max)\n        {\n            max = i;\n        }\n    }\n\
    \    long sum = 0L;\n    while(max > 0)\n    {\n        sum += max % 10;\n   \
    \     max /= 10;\n    }\n    return sum;\n}", "{\n    long max = 0L;\n    foreach(i;\
    \ lst)\n    {\n        if(isPrime(i) && i > max)\n        {\n            max =\
    \ i;\n        }\n    }\n    long sum = 0L;\n    while(max > 0L)\n    {\n     \
    \   sum += max % 10L;\n        max /= 10L;\n    }\n    return sum;\n}", "{\n \
    \   long max = 0L;\n    foreach(i; lst)\n    {\n        if(isPrime(i) && i > max)\n\
    \        {\n            max = i;\n        }\n    }\n    return sumDigits(max);\n\
    }", "{\n    long maxPrime = 0L;\n    foreach(i; lst)\n    {\n        if(isPrime(i))\n\
    \        {\n            maxPrime = max(maxPrime, i);\n        }\n    }\n    long\
    \ sum = 0L;\n    while(maxPrime > 0L)\n    {\n        sum += maxPrime % 10L;\n\
    \        maxPrime /= 10L;\n    }\n    return sum;\n}", "{\n    long max = 0L;\n\
    \    foreach(elem; lst)\n    {\n        if(isPrime(elem) && elem > max)\n    \
    \    {\n            max = elem;\n        }\n    }\n    return sumDigits(max);\n\
    }", "{\n    long largestPrime = 0L;\n    foreach(i; lst)\n    {\n        if(isPrime(i))\n\
    \        {\n            if(i > largestPrime)\n            {\n                largestPrime\
    \ = i;\n            }\n        }\n    }\n    return largestPrime.digits.sum;\n\
    }", "{\n    long max = 0L;\n    foreach(i; lst)\n    {\n        if(isPrime(i)\
    \ && i > max)\n        {\n            max = i;\n        }\n    }\n    long sum\
    \ = 0L;\n    while(max > 0L)\n    {\n        sum += max % 10L;\n        max /=\
    \ 10L;\n    }\n    return sum;\n}", "{\n    long max = 0L;\n    foreach(i; lst)\n\
    \    {\n        if(isPrime(i) && i > max)\n        {\n            max = i;\n \
    \       }\n    }\n    long result = 0L;\n    foreach(i; max.to!string)\n    {\n\
    \        result += i.to!long;\n    }\n    return result;\n}", "{\n    long max\
    \ = 0L;\n    foreach(i; lst)\n    {\n        if(i > max)\n        {\n        \
    \    max = i;\n        }\n    }\n    long sum = 0L;\n    foreach(i; lst)\n   \
    \ {\n        if(i == max)\n        {\n            foreach(j; i.to!string)\n  \
    \          {\n                sum += j.to!long;\n            }\n        }\n  \
    \  }\n    return sum;\n}", "{\n    long max = 0L;\n    foreach(elem; lst)\n  \
    \  {\n        if(isPrime(elem) && elem > max)\n        {\n            max = elem;\n\
    \        }\n    }\n    long sum = 0L;\n    while(max > 0L)\n    {\n        sum\
    \ += max % 10L;\n        max /= 10L;\n    }\n    return sum;\n}", "{\n    long\
    \ max = 0L;\n    foreach(i; lst)\n    {\n        if(isPrime(i) && i > max)\n \
    \       {\n            max = i;\n        }\n    }\n    long sum = 0L;\n    while(max\
    \ > 0L)\n    {\n        sum += max % 10L;\n        max /= 10L;\n    }\n    return\
    \ sum;\n}", "{\n    long max = 0L;\n    foreach(i; lst)\n    {\n        if(isPrime(i)\
    \ && i > max)\n        {\n            max = i;\n        }\n    }\n    return sumDigits(max);\n\
    }", "{\n    long max = 0L;\n    foreach(i; lst)\n    {\n        if(isPrime(i)\
    \ && i > max)\n        {\n            max = i;\n        }\n    }\n    long sum\
    \ = 0L;\n    while(max > 0L)\n    {\n        sum += max % 10L;\n        max /=\
    \ 10L;\n    }\n    return sum;\n}", "{\n    long largestPrime = 0L;\n    foreach(long\
    \ i; lst)\n    {\n        if(isPrime(i))\n        {\n            if(i > largestPrime)\n\
    \            {\n                largestPrime = i;\n            }\n        }\n\
    \    }\n    return largestPrime;\n}", "{\n    long max = 0L;\n    foreach(i; lst)\n\
    \    {\n        if(isPrime(i) && i > max)\n        {\n            max = i;\n \
    \       }\n    }\n    return sumDigits(max);\n}", "{\n    long max = 0L;\n   \
    \ foreach(i; lst)\n    {\n        if(i > max)\n        {\n            max = i;\n\
    \        }\n    }\n    long sum = 0L;\n    foreach(i; max.to!string)\n    {\n\
    \        sum += i.to!long;\n    }\n    return sum;\n}", "{\n    long maxPrime\
    \ = 0L;\n    foreach(long i; lst)\n    {\n        if(isPrime(i))\n        {\n\
    \            if(i > maxPrime)\n            {\n                maxPrime = i;\n\
    \            }\n        }\n    }\n    return maxPrime;\n}", "{\n    long largestPrime\
    \ = 0L;\n    foreach(num; lst)\n    {\n        if(num > largestPrime && isPrime(num))\n\
    \        {\n            largestPrime = num;\n        }\n    }\n    long sum =\
    \ 0L;\n    foreach(digit; to!string(largestPrime))\n    {\n        sum += to!long(digit);\n\
    \    }\n    return sum;\n}", "{\n    long max = 0L;\n    foreach(elem; lst) \n\
    \    {\n        if (elem > max) \n        {\n            max = elem;\n       \
    \ }\n    }\n    long sum = 0L;\n    foreach(elem; max.to!string) \n    {\n   \
    \     sum += elem.to!long;\n    }\n    return sum;\n}", "{\n    long max = 0L;\n\
    \    foreach(i; lst)\n    {\n        if(isPrime(i) && i > max)\n        {\n  \
    \          max = i;\n        }\n    }\n    long sum = 0L;\n    while(max > 0L)\n\
    \    {\n        sum += max % 10L;\n        max /= 10L;\n    }\n    return sum;\n\
    }", "{\n    long max = 0L;\n    foreach(elem; lst)\n    {\n        if(elem > max)\n\
    \        {\n            max = elem;\n        }\n    }\n    long sum = 0L;\n  \
    \  foreach(elem; max.to!string)\n    {\n        sum += elem.to!long;\n    }\n\
    \    return sum;\n}", "{\n    long max = 0L;\n    foreach(i; lst)\n    {\n   \
    \     if(isPrime(i) && i > max)\n        {\n            max = i;\n        }\n\
    \    }\n    return sumDigits(max);\n}", "{\n    long maxPrime = 0L;\n    foreach(l;\
    \ lst)\n    {\n        if(isPrime(l))\n        {\n            maxPrime = max(maxPrime,\
    \ l);\n        }\n    }\n    long sum = 0L;\n    while(maxPrime > 0L)\n    {\n\
    \        sum += maxPrime % 10L;\n        maxPrime /= 10L;\n    }\n    return sum;\n\
    }", "{\n    long max = 0L;\n    foreach(i; lst)\n    {\n        if(i > max)\n\
    \        {\n            max = i;\n        }\n    }\n    long sum = 0L;\n    foreach(i;\
    \ max.to!string)\n    {\n        sum += i.to!long;\n    }\n    return sum;\n}",
  "{\n    long max = 0L;\n    foreach(i; lst) \n    {\n        if(isPrime(i) && i\
    \ > max) \n        {\n            max = i;\n        }\n    }\n    return sumDigits(max);\n\
    }", "{\n    long largestPrime = 0L;\n    foreach(i; lst)\n    {\n        if(i\
    \ > largestPrime && isPrime(i))\n        {\n            largestPrime = i;\n  \
    \      }\n    }\n    return sumDigits(largestPrime);\n}", "{\n    long maxPrime\
    \ = 0L;\n    foreach(l; lst)\n    {\n        if(isPrime(l))\n        {\n     \
    \       maxPrime = max(maxPrime, l);\n        }\n    }\n    long sum = 0L;\n \
    \   while(maxPrime != 0L)\n    {\n        sum += maxPrime % 10L;\n        maxPrime\
    \ /= 10L;\n    }\n    return sum;\n}", "{\n    long largestPrime = 0L;\n    foreach(i;\
    \ lst)\n    {\n        if(isPrime(i))\n        {\n            if(i > largestPrime)\n\
    \            {\n                largestPrime = i;\n            }\n        }\n\
    \    }\n    return sumDigits(largestPrime);\n}", "{\n    long largest = 0L;\n\
    \    foreach(i; lst)\n    {\n        if(isPrime(i) && i > largest)\n        {\n\
    \            largest = i;\n        }\n    }\n    long sum = 0L;\n    while(largest\
    \ > 0L)\n    {\n        sum += largest % 10L;\n        largest /= 10L;\n    }\n\
    \    return sum;\n}", "{\n    long maxPrime = 0L;\n    foreach(i; lst)\n    {\n\
    \        if(isPrime(i))\n        {\n            maxPrime = max(maxPrime, i);\n\
    \        }\n    }\n    long sum = 0L;\n    while(maxPrime > 0L)\n    {\n     \
    \   sum += maxPrime % 10L;\n        maxPrime /= 10L;\n    }\n    return sum;\n\
    }", "{\n    long max = 0L;\n    foreach(i; lst)\n    {\n        if(isPrime(i))\n\
    \        {\n            max = max(max, i);\n        }\n    }\n    long sum = 0L;\n\
    \    while(max > 0L)\n    {\n        sum += max % 10L;\n        max /= 10L;\n\
    \    }\n    return sum;\n}", "{\n    long max = 0L;\n    foreach(long i; lst)\n\
    \    {\n        if(isPrime(i))\n        {\n            if(i > max)\n         \
    \   {\n                max = i;\n            }\n        }\n    }\n    return sumDigits(max);\n\
    }", "{\n    long max = 0L;\n    foreach(i; lst)\n    {\n        if(i > max)\n\
    \        {\n            max = i;\n        }\n    }\n    long sum = 0L;\n    foreach(i;\
    \ max.to!string)\n    {\n        sum += i.to!long;\n    }\n    return sum;\n}",
  "{\n    long largestPrime = 0L;\n    foreach(i; lst)\n    {\n        if(isPrime(i))\n\
    \        {\n            if(i > largestPrime)\n            {\n                largestPrime\
    \ = i;\n            }\n        }\n    }\n    long sum = 0L;\n    while(largestPrime\
    \ != 0L)\n    {\n        sum += largestPrime % 10L;\n        largestPrime /= 10L;\n\
    \    }\n    return sum;\n}"]
stop_tokens:
- "\n\n"
- "\nvoid"
- "\nbool"
- "\nint"

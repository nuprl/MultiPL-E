name: HumanEval_127_intersection
language: d
prompt: "import std.typecons;\nimport std.math;\n/*\nYou are given two intervals,\n\
  \    where each interval is a pair of integers. For example, interval = (start,\
  \ end) = (1, 2).\n    The given intervals are closed which means that the interval\
  \ (start, end)\n    includes both start and end.\n    For each given interval, it\
  \ is assumed that its start is less or equal its end.\n    Your task is to determine\
  \ whether the length of intersection of these two \n    intervals is a prime number.\n\
  \    Example, the intersection of the intervals (1, 3), (2, 4) is (2, 3)\n    which\
  \ its length is 1, which not a prime number.\n    If the length of the intersection\
  \ is a prime number, return \"YES\",\n    otherwise, return \"NO\".\n    If the\
  \ two intervals don't intersect, return \"NO\".\n\n\n    [input/output] samples:\n\
  \    >>> intersection(tuple(1L, 2L), tuple(2L, 3L))\n    \"NO\"\n    >>> intersection(tuple(-1L,\
  \ 1L), tuple(0L, 4L))\n    \"NO\"\n    >>> intersection(tuple(-3L, -1L), tuple(-5L,\
  \ 5L))\n    \"YES\"\n    \n*/\nstring intersection(Tuple!(long, long) interval1,\
  \ Tuple!(long, long) interval2) \n"
tests: "unittest\n{\n    alias candidate = intersection;\n\n    assert(candidate(tuple(1L,\
  \ 2L), tuple(2L, 3L)) == \"NO\");\n    assert(candidate(tuple(-1L, 1L), tuple(0L,\
  \ 4L)) == \"NO\");\n    assert(candidate(tuple(-3L, -1L), tuple(-5L, 5L)) == \"\
  YES\");\n    assert(candidate(tuple(-2L, 2L), tuple(-4L, 0L)) == \"YES\");\n   \
  \ assert(candidate(tuple(-11L, 2L), tuple(-1L, -1L)) == \"NO\");\n    assert(candidate(tuple(1L,\
  \ 2L), tuple(3L, 5L)) == \"NO\");\n    assert(candidate(tuple(1L, 2L), tuple(1L,\
  \ 2L)) == \"NO\");\n    assert(candidate(tuple(-2L, -2L), tuple(-3L, -2L)) == \"\
  NO\");\n}\nvoid main(){}"
completions: ["{\n    long start = max(interval1[0], interval2[0]);\n    long end\
    \ = min(interval1[1], interval2[1]);\n    long length = end - start;\n    if (length\
    \ < 0)\n        return \"NO\";\n    if (length == 0)\n        return \"YES\";\n\
    \    return isPrime(length) ? \"YES\" : \"NO\";\n}", "{\n    long start = max(interval1[0],\
    \ interval2[0]);\n    long end = min(interval1[1], interval2[1]);\n    long len\
    \ = end - start;\n    if (len < 0) return \"NO\";\n    if (len == 0) return \"\
    YES\";\n    if (len == 1) return \"NO\";\n    if (len == 2) return \"YES\";\n\
    \    if (len % 2 == 0) return \"NO\";\n    for (long i = 3; i <= sqrt(len); i\
    \ += 2)\n    {\n        if (len % i == 0) return \"NO\";\n    }\n    return \"\
    YES\";\n}", "{\n    long start = max(interval1[0], interval2[0]);\n    long end\
    \ = min(interval1[1], interval2[1]);\n    long length = end - start;\n    if (length\
    \ < 0)\n        return \"NO\";\n    return isPrime(length) ? \"YES\" : \"NO\"\
    ;\n}", "{\n    long start = max(interval1[0], interval2[0]);\n    long end = min(interval1[1],\
    \ interval2[1]);\n    long length = end - start;\n    if (length < 0)\n      \
    \  return \"NO\";\n    return isPrime(length) ? \"YES\" : \"NO\";\n}", "{\n  \
    \  long start = max(interval1[0], interval2[0]);\n    long end = min(interval1[1],\
    \ interval2[1]);\n    long len = end - start;\n    if (len < 0)\n        return\
    \ \"NO\";\n    if (len == 0)\n        return \"YES\";\n    if (len == 1)\n   \
    \     return \"NO\";\n    if (len == 2)\n        return \"YES\";\n    if (len\
    \ % 2 == 0)\n        return \"NO\";\n    for (long i = 3; i <= sqrt(len); i +=\
    \ 2)\n    {\n        if (len % i == 0)\n            return \"NO\";\n    }\n  \
    \  return \"YES\";\n}", "{\n    long start1 = interval1[0];\n    long end1 = interval1[1];\n\
    \    long start2 = interval2[0];\n    long end2 = interval2[1];\n    long start\
    \ = max(start1, start2);\n    long end = min(end1, end2);\n    if (start > end)\n\
    \        return \"NO\";\n    return isPrime(end - start + 1) ? \"YES\" : \"NO\"\
    ;\n}", "{\n    long start = max(interval1[0], interval2[0]);\n    long end = min(interval1[1],\
    \ interval2[1]);\n    long length = end - start;\n    if (length <= 0)\n     \
    \   return \"NO\";\n    if (length == 1)\n        return \"NO\";\n    if (length\
    \ == 2)\n        return \"YES\";\n    for (long i = 2; i < length; i++)\n    {\n\
    \        if (length % i == 0)\n            return \"NO\";\n    }\n    return \"\
    YES\";\n}", "{\n    long start = max(interval1[0], interval2[0]);\n    long end\
    \ = min(interval1[1], interval2[1]);\n    long length = end - start;\n    if (length\
    \ < 0) return \"NO\";\n    if (length == 0) return \"YES\";\n    for (long i =\
    \ 2; i <= sqrt(length); i++)\n    {\n        if (length % i == 0) return \"NO\"\
    ;\n    }\n    return \"YES\";\n}", "{\n    long start = max(interval1[0], interval2[0]);\n\
    \    long end = min(interval1[1], interval2[1]);\n    long length = end - start;\n\
    \    if (length < 0)\n        return \"NO\";\n    if (length == 0)\n        return\
    \ \"YES\";\n    if (length == 1)\n        return \"NO\";\n    if (length == 2)\n\
    \        return \"YES\";\n    if (length % 2 == 0)\n        return \"NO\";\n \
    \   for (long i = 3; i <= sqrt(length); i += 2)\n    {\n        if (length % i\
    \ == 0)\n            return \"NO\";\n    }\n    return \"YES\";\n}", "{\n    long\
    \ start = max(interval1[0], interval2[0]);\n    long end = min(interval1[1], interval2[1]);\n\
    \    long length = end - start;\n    if (length < 0)\n        return \"NO\";\n\
    \    if (length == 0)\n        return \"YES\";\n    return isPrime(length) ? \"\
    YES\" : \"NO\";\n}", "{\n    long start = max(interval1[0], interval2[0]);\n \
    \   long end = min(interval1[1], interval2[1]);\n    long length = end - start;\n\
    \    return isPrime(length) ? \"YES\" : \"NO\";\n}", "{\n    long start = max(interval1[0],\
    \ interval2[0]);\n    long end = min(interval1[1], interval2[1]);\n    long length\
    \ = end - start;\n    if (length < 0)\n        return \"NO\";\n    return isPrime(length)\
    \ ? \"YES\" : \"NO\";\n}", "{\n    long start1 = interval1[0];\n    long end1\
    \ = interval1[1];\n    long start2 = interval2[0];\n    long end2 = interval2[1];\n\
    \    long start = max(start1, start2);\n    long end = min(end1, end2);\n    if\
    \ (start > end)\n        return \"NO\";\n    return isPrime(end - start + 1) ?\
    \ \"YES\" : \"NO\";\n}", "{\n    long start = max(interval1[0], interval2[0]);\n\
    \    long end = min(interval1[1], interval2[1]);\n    long length = end - start;\n\
    \    if (length < 0) return \"NO\";\n    if (length == 0) return \"YES\";\n  \
    \  if (length == 1) return \"NO\";\n    if (length == 2) return \"YES\";\n   \
    \ if (length % 2 == 0) return \"NO\";\n    for (long i = 3; i < length; i += 2)\
    \ {\n        if (length % i == 0) return \"NO\";\n    }\n    return \"YES\";\n\
    }", "{\n    long start = max(interval1[0], interval2[0]);\n    long end = min(interval1[1],\
    \ interval2[1]);\n    long length = end - start;\n    if (length < 0) return \"\
    NO\";\n    if (length == 0) return \"YES\";\n    if (length == 1) return \"NO\"\
    ;\n    if (length == 2) return \"YES\";\n    if (length % 2 == 0) return \"NO\"\
    ;\n    for (long i = 3; i <= sqrt(length); i += 2)\n    {\n        if (length\
    \ % i == 0) return \"NO\";\n    }\n    return \"YES\";\n}", "{\n    long start\
    \ = max(interval1[0], interval2[0]);\n    long end = min(interval1[1], interval2[1]);\n\
    \    long length = end - start;\n    if (length < 0)\n        return \"NO\";\n\
    \    return isPrime(length) ? \"YES\" : \"NO\";\n}", "{\n    long start1 = interval1[0];\n\
    \    long end1 = interval1[1];\n    long start2 = interval2[0];\n    long end2\
    \ = interval2[1];\n    long start = max(start1, start2);\n    long end = min(end1,\
    \ end2);\n    if (start > end)\n        return \"NO\";\n    long length = end\
    \ - start + 1;\n    if (length == 1)\n        return \"NO\";\n    if (length ==\
    \ 2)\n        return \"YES\";\n    for (long i = 2; i < length; i++)\n    {\n\
    \        if (length % i == 0)\n            return \"NO\";\n    }\n    return \"\
    YES\";\n}", "{\n    long start1 = interval1[0];\n    long end1 = interval1[1];\n\
    \    long start2 = interval2[0];\n    long end2 = interval2[1];\n    long start\
    \ = max(start1, start2);\n    long end = min(end1, end2);\n    if (start > end)\n\
    \        return \"NO\";\n    return isPrime(end - start + 1) ? \"YES\" : \"NO\"\
    ;\n}", "{\n    long start = max(interval1[0], interval2[0]);\n    long end = min(interval1[1],\
    \ interval2[1]);\n    if (start > end) return \"NO\";\n    return isPrime(end\
    \ - start + 1) ? \"YES\" : \"NO\";\n}", "{\n    long start = max(interval1[0],\
    \ interval2[0]);\n    long end = min(interval1[1], interval2[1]);\n    long length\
    \ = end - start;\n    if (length <= 0)\n        return \"NO\";\n    if (length\
    \ == 1)\n        return \"NO\";\n    if (length == 2)\n        return \"YES\"\
    ;\n    for (long i = 2; i < length; i++)\n    {\n        if (length % i == 0)\n\
    \            return \"NO\";\n    }\n    return \"YES\";\n}", "{\n    long start\
    \ = max(interval1[0], interval2[0]);\n    long end = min(interval1[1], interval2[1]);\n\
    \    long length = end - start;\n    if (length < 0)\n        return \"NO\";\n\
    \    if (length == 0)\n        return \"YES\";\n    if (length == 1)\n       \
    \ return \"NO\";\n    if (length == 2)\n        return \"YES\";\n    if (length\
    \ % 2 == 0)\n        return \"NO\";\n    for (long i = 3; i <= sqrt(length); i\
    \ += 2)\n        if (length % i == 0)\n            return \"NO\";\n    return\
    \ \"YES\";\n}", "{\n    long start = max(interval1[0], interval2[0]);\n    long\
    \ end = min(interval1[1], interval2[1]);\n    long length = end - start;\n   \
    \ if (length < 0)\n        return \"NO\";\n    if (length == 0)\n        return\
    \ \"YES\";\n    if (length == 1)\n        return \"NO\";\n    if (length == 2)\n\
    \        return \"YES\";\n    if (length % 2 == 0)\n        return \"NO\";\n \
    \   for (long i = 3; i <= sqrt(length); i += 2)\n        if (length % i == 0)\n\
    \            return \"NO\";\n    return \"YES\";\n}", "{\n    long start = max(interval1[0],\
    \ interval2[0]);\n    long end = min(interval1[1], interval2[1]);\n    if (start\
    \ > end) return \"NO\";\n    return isPrime(end - start + 1) ? \"YES\" : \"NO\"\
    ;\n}", "{\n    long start = max(interval1[0], interval2[0]);\n    long end = min(interval1[1],\
    \ interval2[1]);\n    long length = end - start;\n    if (length < 0)\n      \
    \  return \"NO\";\n    if (length == 0)\n        return \"YES\";\n    return isPrime(length)\
    \ ? \"YES\" : \"NO\";\n}", "{\n    long start = max(interval1[0], interval2[0]);\n\
    \    long end = min(interval1[1], interval2[1]);\n    if (start > end)\n     \
    \   return \"NO\";\n    long length = end - start + 1;\n    if (length == 1)\n\
    \        return \"NO\";\n    if (length == 2)\n        return \"YES\";\n    for\
    \ (long i = 2; i <= sqrt(length); i++)\n    {\n        if (length % i == 0)\n\
    \            return \"NO\";\n    }\n    return \"YES\";\n}", "{\n    long start\
    \ = max(interval1[0], interval2[0]);\n    long end = min(interval1[1], interval2[1]);\n\
    \    long length = end - start;\n    if (length <= 0)\n        return \"NO\";\n\
    \    if (length == 1)\n        return \"NO\";\n    if (length == 2)\n        return\
    \ \"YES\";\n    if (length % 2 == 0)\n        return \"NO\";\n    for (long i\
    \ = 3; i <= sqrt(length); i += 2)\n    {\n        if (length % i == 0)\n     \
    \       return \"NO\";\n    }\n    return \"YES\";\n}", "{\n    long start = max(interval1[0],\
    \ interval2[0]);\n    long end = min(interval1[1], interval2[1]);\n    long length\
    \ = end - start;\n    if (length < 0) return \"NO\";\n    if (length == 0) return\
    \ \"YES\";\n    if (length == 1) return \"NO\";\n    if (length == 2) return \"\
    YES\";\n    if (length % 2 == 0) return \"NO\";\n    for (long i = 3; i <= sqrt(length);\
    \ i += 2) {\n        if (length % i == 0) return \"NO\";\n    }\n    return \"\
    YES\";\n}", "{\n    long start = max(interval1[0], interval2[0]);\n    long end\
    \ = min(interval1[1], interval2[1]);\n    long length = end - start;\n    if (length\
    \ < 0) return \"NO\";\n    if (length == 0) return \"YES\";\n    if (length ==\
    \ 1) return \"NO\";\n    if (length == 2) return \"YES\";\n    if (length % 2\
    \ == 0) return \"NO\";\n    for (long i = 3; i <= sqrt(length); i += 2)\n    {\n\
    \        if (length % i == 0) return \"NO\";\n    }\n    return \"YES\";\n}",
  "{\n    long start = max(interval1[0], interval2[0]);\n    long end = min(interval1[1],\
    \ interval2[1]);\n    long length = end - start;\n    if (length <= 0) return\
    \ \"NO\";\n    if (length == 1) return \"NO\";\n    if (length == 2) return \"\
    YES\";\n    if (length % 2 == 0) return \"NO\";\n    for (long i = 3; i <= sqrt(length);\
    \ i += 2)\n    {\n        if (length % i == 0) return \"NO\";\n    }\n    return\
    \ \"YES\";\n}", "{\n    long start = max(interval1[0], interval2[0]);\n    long\
    \ end = min(interval1[1], interval2[1]);\n    long length = end - start;\n   \
    \ if (length < 0)\n        return \"NO\";\n    return isPrime(length) ? \"YES\"\
    \ : \"NO\";\n}", "{\n    long start = max(interval1[0], interval2[0]);\n    long\
    \ end = min(interval1[1], interval2[1]);\n    long length = end - start;\n   \
    \ if (length < 0)\n        return \"NO\";\n    if (length == 0)\n        return\
    \ \"YES\";\n    if (length == 1)\n        return \"NO\";\n    if (length == 2)\n\
    \        return \"YES\";\n    if (length % 2 == 0)\n        return \"NO\";\n \
    \   for (long i = 3; i <= sqrt(length); i += 2)\n    {\n        if (length % i\
    \ == 0)\n            return \"NO\";\n    }\n    return \"YES\";\n}", "{\n    long\
    \ start = max(interval1[0], interval2[0]);\n    long end = min(interval1[1], interval2[1]);\n\
    \    long len = end - start;\n    if (len < 0)\n        return \"NO\";\n    if\
    \ (len == 0)\n        return \"YES\";\n    return isPrime(len) ? \"YES\" : \"\
    NO\";\n}", "{\n    long start = max(interval1[0], interval2[0]);\n    long end\
    \ = min(interval1[1], interval2[1]);\n    if (start > end) return \"NO\";\n  \
    \  return (end - start + 1).isPrime ? \"YES\" : \"NO\";\n}", "{\n    long start\
    \ = max(interval1[0], interval2[0]);\n    long end = min(interval1[1], interval2[1]);\n\
    \    long length = end - start;\n    if (length < 0)\n        return \"NO\";\n\
    \    else\n        return isPrime(length) ? \"YES\" : \"NO\";\n}", "{\n    long\
    \ start = max(interval1[0], interval2[0]);\n    long end = min(interval1[1], interval2[1]);\n\
    \    long length = end - start;\n    if (length < 0)\n        return \"NO\";\n\
    \    return isPrime(length) ? \"YES\" : \"NO\";\n}", "{\n    long start = max(interval1[0],\
    \ interval2[0]);\n    long end = min(interval1[1], interval2[1]);\n    long length\
    \ = end - start;\n    if (length < 0)\n        return \"NO\";\n    return isPrime(length)\
    \ ? \"YES\" : \"NO\";\n}", "{\n    auto start = max(interval1[0], interval2[0]);\n\
    \    auto end = min(interval1[1], interval2[1]);\n    if (start > end) return\
    \ \"NO\";\n    auto length = end - start + 1;\n    return isPrime(length) ? \"\
    YES\" : \"NO\";\n}", "{\n    long start = max(interval1[0], interval2[0]);\n \
    \   long end = min(interval1[1], interval2[1]);\n    long length = end - start;\n\
    \    if (length < 0)\n        return \"NO\";\n    if (length == 0)\n        return\
    \ \"YES\";\n    if (length == 1)\n        return \"NO\";\n    if (length == 2)\n\
    \        return \"YES\";\n    if (length % 2 == 0)\n        return \"NO\";\n \
    \   for (long i = 3; i <= sqrt(length); i += 2)\n    {\n        if (length % i\
    \ == 0)\n            return \"NO\";\n    }\n    return \"YES\";\n}", "{\n    long\
    \ start = max(interval1[0], interval2[0]);\n    long end = min(interval1[1], interval2[1]);\n\
    \    long len = end - start;\n    if (len < 0)\n        return \"NO\";\n    if\
    \ (len == 0)\n        return \"YES\";\n    if (len == 1)\n        return \"NO\"\
    ;\n    if (len == 2)\n        return \"YES\";\n    if (len % 2 == 0)\n       \
    \ return \"NO\";\n    for (long i = 3; i <= sqrt(len); i += 2)\n    {\n      \
    \  if (len % i == 0)\n            return \"NO\";\n    }\n    return \"YES\";\n\
    }", "{\n    long start = max(interval1[0], interval2[0]);\n    long end = min(interval1[1],\
    \ interval2[1]);\n    long length = end - start;\n    if (length < 0)\n      \
    \  return \"NO\";\n    if (length == 0)\n        return \"YES\";\n    if (length\
    \ == 1)\n        return \"NO\";\n    if (length == 2)\n        return \"YES\"\
    ;\n    if (length % 2 == 0)\n        return \"NO\";\n    return \"YES\";\n}",
  "{\n    long start = max(interval1[0], interval2[0]);\n    long end = min(interval1[1],\
    \ interval2[1]);\n    long length = end - start;\n    if (length < 0) return \"\
    NO\";\n    return isPrime(length) ? \"YES\" : \"NO\";\n}", "{\n    long start1\
    \ = interval1[0];\n    long end1 = interval1[1];\n    long start2 = interval2[0];\n\
    \    long end2 = interval2[1];\n    long start = max(start1, start2);\n    long\
    \ end = min(end1, end2);\n    if (start > end)\n        return \"NO\";\n    long\
    \ length = end - start + 1;\n    return isPrime(length) ? \"YES\" : \"NO\";\n}",
  "{\n    long start = max(interval1[0], interval2[0]);\n    long end = min(interval1[1],\
    \ interval2[1]);\n    long len = end - start;\n    if (len < 0) return \"NO\"\
    ;\n    if (len == 0) return \"YES\";\n    if (len == 1) return \"NO\";\n    if\
    \ (len == 2) return \"YES\";\n    if (len % 2 == 0) return \"NO\";\n    if (len\
    \ % 3 == 0) return \"NO\";\n    if (len % 5 == 0) return \"NO\";\n    if (len\
    \ % 7 == 0) return \"NO\";\n    return \"YES\";\n}", "{\n    long start = max(interval1[0],\
    \ interval2[0]);\n    long end = min(interval1[1], interval2[1]);\n    if (start\
    \ > end)\n        return \"NO\";\n    long len = end - start + 1;\n    if (len\
    \ == 1)\n        return \"NO\";\n    if (len == 2)\n        return \"YES\";\n\
    \    for (long i = 2; i < len; i++)\n        if (len % i == 0)\n            return\
    \ \"NO\";\n    return \"YES\";\n}", "{\n    long start = max(interval1[0], interval2[0]);\n\
    \    long end = min(interval1[1], interval2[1]);\n    if (start > end) return\
    \ \"NO\";\n    return isPrime(end - start + 1) ? \"YES\" : \"NO\";\n}", "{\n \
    \   long start = max(interval1[0], interval2[0]);\n    long end = min(interval1[1],\
    \ interval2[1]);\n    long length = end - start;\n    if (length < 0)\n      \
    \  return \"NO\";\n    if (length == 0)\n        return \"YES\";\n    if (length\
    \ == 1)\n        return \"NO\";\n    if (length == 2)\n        return \"YES\"\
    ;\n    if (length % 2 == 0)\n        return \"NO\";\n    for (long i = 3; i <=\
    \ sqrt(length); i += 2)\n    {\n        if (length % i == 0)\n            return\
    \ \"NO\";\n    }\n    return \"YES\";\n}", "{\n    long start = max(interval1[0],\
    \ interval2[0]);\n    long end = min(interval1[1], interval2[1]);\n    long length\
    \ = end - start;\n    if (length < 0)\n        return \"NO\";\n    if (length\
    \ == 0)\n        return \"YES\";\n    if (length == 1)\n        return \"NO\"\
    ;\n    if (length == 2)\n        return \"YES\";\n    if (length % 2 == 0)\n \
    \       return \"NO\";\n    for (long i = 3; i <= sqrt(length); i += 2)\n    {\n\
    \        if (length % i == 0)\n            return \"NO\";\n    }\n    return \"\
    YES\";\n}", "{\n    long start = max(interval1[0], interval2[0]);\n    long end\
    \ = min(interval1[1], interval2[1]);\n    long length = end - start;\n    if (length\
    \ < 0)\n        return \"NO\";\n    return isPrime(length) ? \"YES\" : \"NO\"\
    ;\n}", "{\n    long start = max(interval1[0], interval2[0]);\n    long end = min(interval1[1],\
    \ interval2[1]);\n    return (start <= end && isPrime(end - start + 1)) ? \"YES\"\
    \ : \"NO\";\n}", "{\n    auto start = max(interval1[0], interval2[0]);\n    auto\
    \ end = min(interval1[1], interval2[1]);\n    if (start > end) return \"NO\";\n\
    \    auto diff = end - start;\n    if (diff == 0) return \"NO\";\n    if (diff\
    \ == 1) return \"YES\";\n    for (auto i = 2; i < diff; i++)\n    {\n        if\
    \ (diff % i == 0) return \"NO\";\n    }\n    return \"YES\";\n}", "{\n    long\
    \ start = max(interval1[0], interval2[0]);\n    long end = min(interval1[1], interval2[1]);\n\
    \    long len = end - start;\n    if (len < 0)\n        return \"NO\";\n    if\
    \ (len == 0)\n        return \"YES\";\n    if (len == 1)\n        return \"NO\"\
    ;\n    if (len == 2)\n        return \"YES\";\n    if (len % 2 == 0)\n       \
    \ return \"NO\";\n    for (long i = 3; i <= sqrt(len); i += 2)\n    {\n      \
    \  if (len % i == 0)\n            return \"NO\";\n    }\n    return \"YES\";\n\
    }", "{\n    long start = max(interval1[0], interval2[0]);\n    long end = min(interval1[1],\
    \ interval2[1]);\n    if (start > end)\n        return \"NO\";\n    long len =\
    \ end - start + 1;\n    return isPrime(len) ? \"YES\" : \"NO\";\n}", "{\n    long\
    \ start = max(interval1[0], interval2[0]);\n    long end = min(interval1[1], interval2[1]);\n\
    \    long length = end - start;\n    if (length < 0)\n        return \"NO\";\n\
    \    if (length == 0)\n        return \"YES\";\n    if (length == 1)\n       \
    \ return \"NO\";\n    if (length == 2)\n        return \"YES\";\n    if (length\
    \ % 2 == 0)\n        return \"NO\";\n    for (long i = 3; i <= sqrt(length); i\
    \ += 2)\n    {\n        if (length % i == 0)\n            return \"NO\";\n   \
    \ }\n    return \"YES\";\n}", "{\n    long start = max(interval1[0], interval2[0]);\n\
    \    long end = min(interval1[1], interval2[1]);\n    if (start > end) return\
    \ \"NO\";\n    return isPrime(end - start + 1) ? \"YES\" : \"NO\";\n}", "{\n \
    \   long start = max(interval1[0], interval2[0]);\n    long end = min(interval1[1],\
    \ interval2[1]);\n    long length = end - start;\n    if (length <= 0)\n     \
    \   return \"NO\";\n    return isPrime(length) ? \"YES\" : \"NO\";\n}", "{\n \
    \   long start = max(interval1[0], interval2[0]);\n    long end = min(interval1[1],\
    \ interval2[1]);\n    long length = end - start;\n    if (length < 0)\n      \
    \  return \"NO\";\n    return isPrime(length) ? \"YES\" : \"NO\";\n}", "{\n  \
    \  auto start = max(interval1[0], interval2[0]);\n    auto end = min(interval1[1],\
    \ interval2[1]);\n    if (start > end)\n        return \"NO\";\n    auto len =\
    \ end - start + 1;\n    return isPrime(len) ? \"YES\" : \"NO\";\n}", "{\n    long\
    \ start = max(interval1[0], interval2[0]);\n    long end = min(interval1[1], interval2[1]);\n\
    \    long length = end - start;\n    if (length < 0)\n        return \"NO\";\n\
    \    if (length == 0)\n        return \"YES\";\n    if (length == 1)\n       \
    \ return \"NO\";\n    for (long i = 2; i < length; i++)\n        if (length %\
    \ i == 0)\n            return \"NO\";\n    return \"YES\";\n}", "{\n    long start\
    \ = max(interval1[0], interval2[0]);\n    long end = min(interval1[1], interval2[1]);\n\
    \    long length = end - start;\n    if (length < 0)\n        return \"NO\";\n\
    \    return isPrime(length) ? \"YES\" : \"NO\";\n}", "{\n    long start = max(interval1[0],\
    \ interval2[0]);\n    long end = min(interval1[1], interval2[1]);\n    long length\
    \ = end - start;\n    if (length < 0)\n        return \"NO\";\n    if (length\
    \ == 0)\n        return \"YES\";\n    if (length == 1)\n        return \"NO\"\
    ;\n    if (length == 2)\n        return \"YES\";\n    if (length % 2 == 0)\n \
    \       return \"NO\";\n    for (long i = 3; i <= sqrt(length); i += 2)\n    {\n\
    \        if (length % i == 0)\n            return \"NO\";\n    }\n    return \"\
    YES\";\n}", "{\n    long start = max(interval1[0], interval2[0]);\n    long end\
    \ = min(interval1[1], interval2[1]);\n    long length = end - start;\n    if (length\
    \ < 0)\n        return \"NO\";\n    if (length == 0)\n        return \"YES\";\n\
    \    if (length == 1)\n        return \"NO\";\n    if (length == 2)\n        return\
    \ \"YES\";\n    if (length % 2 == 0)\n        return \"NO\";\n    for (long i\
    \ = 3; i <= sqrt(length); i += 2)\n    {\n        if (length % i == 0)\n     \
    \       return \"NO\";\n    }\n    return \"YES\";\n}", "{\n    auto start = max(interval1[0],\
    \ interval2[0]);\n    auto end = min(interval1[1], interval2[1]);\n    if (start\
    \ > end) return \"NO\";\n    auto len = end - start + 1;\n    return isPrime(len)\
    \ ? \"YES\" : \"NO\";\n}", "{\n    long start = max(interval1[0], interval2[0]);\n\
    \    long end = min(interval1[1], interval2[1]);\n    long length = end - start;\n\
    \    if (length <= 0) return \"NO\";\n    return isPrime(length) ? \"YES\" : \"\
    NO\";\n}", "{\n    long start = max(interval1[0], interval2[0]);\n    long end\
    \ = min(interval1[1], interval2[1]);\n    if (start > end)\n        return \"\
    NO\";\n    return isPrime(end - start + 1) ? \"YES\" : \"NO\";\n}", "{\n    long\
    \ start = max(interval1[0], interval2[0]);\n    long end = min(interval1[1], interval2[1]);\n\
    \    long length = end - start;\n    if (length < 0) return \"NO\";\n    if (length\
    \ == 0) return \"YES\";\n    return isPrime(length) ? \"YES\" : \"NO\";\n}", "{\n\
    \    long start = max(interval1[0], interval2[0]);\n    long end = min(interval1[1],\
    \ interval2[1]);\n    long len = end - start;\n    if (len < 0)\n        return\
    \ \"NO\";\n    return isPrime(len) ? \"YES\" : \"NO\";\n}", "{\n    long start1\
    \ = interval1[0];\n    long end1 = interval1[1];\n    long start2 = interval2[0];\n\
    \    long end2 = interval2[1];\n    long start = max(start1, start2);\n    long\
    \ end = min(end1, end2);\n    if (start > end)\n        return \"NO\";\n    long\
    \ length = end - start + 1;\n    if (length == 1)\n        return \"NO\";\n  \
    \  if (length == 2)\n        return \"YES\";\n    for (long i = 2; i < length;\
    \ i++)\n        if (length % i == 0)\n            return \"NO\";\n    return \"\
    YES\";\n}", "{\n    long start = max(interval1[0], interval2[0]);\n    long end\
    \ = min(interval1[1], interval2[1]);\n    long length = end - start;\n    if (length\
    \ < 0)\n        return \"NO\";\n    if (length == 0)\n        return \"YES\";\n\
    \    if (length == 1)\n        return \"NO\";\n    if (length == 2)\n        return\
    \ \"YES\";\n    if (length % 2 == 0)\n        return \"NO\";\n    for (long i\
    \ = 3; i <= sqrt(length); i += 2)\n    {\n        if (length % i == 0)\n     \
    \       return \"NO\";\n    }\n    return \"YES\";\n}", "{\n    long start = max(interval1[0],\
    \ interval2[0]);\n    long end = min(interval1[1], interval2[1]);\n    if (start\
    \ > end)\n        return \"NO\";\n    return isPrime(end - start + 1) ? \"YES\"\
    \ : \"NO\";\n}", "{\n    long start = max(interval1[0], interval2[0]);\n    long\
    \ end = min(interval1[1], interval2[1]);\n    if (start > end)\n        return\
    \ \"NO\";\n    return isPrime(end - start + 1) ? \"YES\" : \"NO\";\n}", "{\n \
    \   long start = max(interval1[0], interval2[0]);\n    long end = min(interval1[1],\
    \ interval2[1]);\n    long length = end - start;\n    if (length < 0)\n      \
    \  return \"NO\";\n    if (length == 0)\n        return \"YES\";\n    if (length\
    \ == 1)\n        return \"NO\";\n    if (length == 2)\n        return \"YES\"\
    ;\n    if (length % 2 == 0)\n        return \"NO\";\n    for (long i = 3; i <=\
    \ sqrt(length); i += 2)\n    {\n        if (length % i == 0)\n            return\
    \ \"NO\";\n    }\n    return \"YES\";\n}", "{\n    long start = max(interval1[0],\
    \ interval2[0]);\n    long end = min(interval1[1], interval2[1]);\n    long length\
    \ = end - start;\n    return isPrime(length) ? \"YES\" : \"NO\";\n}", "{\n   \
    \ long start = max(interval1[0], interval2[0]);\n    long end = min(interval1[1],\
    \ interval2[1]);\n    if (start > end)\n        return \"NO\";\n    long len =\
    \ end - start + 1;\n    if (len == 1)\n        return \"NO\";\n    if (len ==\
    \ 2)\n        return \"YES\";\n    for (long i = 2; i < len; i++)\n        if\
    \ (len % i == 0)\n            return \"NO\";\n    return \"YES\";\n}", "{\n  \
    \  long start = max(interval1[0], interval2[0]);\n    long end = min(interval1[1],\
    \ interval2[1]);\n    long length = end - start;\n    if (length < 0)\n      \
    \  return \"NO\";\n    if (length == 0)\n        return \"YES\";\n    if (length\
    \ == 1)\n        return \"NO\";\n    if (length == 2)\n        return \"YES\"\
    ;\n    if (length % 2 == 0)\n        return \"NO\";\n    for (long i = 3; i <=\
    \ sqrt(length); i += 2)\n    {\n        if (length % i == 0)\n            return\
    \ \"NO\";\n    }\n    return \"YES\";\n}", "{\n    long start = max(interval1[0],\
    \ interval2[0]);\n    long end = min(interval1[1], interval2[1]);\n    if (start\
    \ > end)\n        return \"NO\";\n    return isPrime(end - start + 1) ? \"YES\"\
    \ : \"NO\";\n}", "{\n    long start = max(interval1[0], interval2[0]);\n    long\
    \ end = min(interval1[1], interval2[1]);\n    long diff = end - start;\n    if\
    \ (diff < 0) return \"NO\";\n    if (diff == 0) return \"YES\";\n    return isPrime(diff)\
    \ ? \"YES\" : \"NO\";\n}", "{\n    long start = max(interval1[0], interval2[0]);\n\
    \    long end = min(interval1[1], interval2[1]);\n    long length = end - start;\n\
    \    if (length < 0)\n        return \"NO\";\n    return isPrime(length) ? \"\
    YES\" : \"NO\";\n}", "{\n    auto start = max(interval1[0], interval2[0]);\n \
    \   auto end = min(interval1[1], interval2[1]);\n    if (start > end) return \"\
    NO\";\n    return isPrime(end - start + 1) ? \"YES\" : \"NO\";\n}", "{\n    long\
    \ start = max(interval1[0], interval2[0]);\n    long end = min(interval1[1], interval2[1]);\n\
    \    long length = end - start;\n    if (length < 0)\n        return \"NO\";\n\
    \    return isPrime(length) ? \"YES\" : \"NO\";\n}", "{\n    long start = max(interval1[0],\
    \ interval2[0]);\n    long end = min(interval1[1], interval2[1]);\n    long length\
    \ = end - start;\n    if (length < 0)\n        return \"NO\";\n    if (length\
    \ == 0)\n        return \"YES\";\n    if (length == 1)\n        return \"NO\"\
    ;\n    if (length == 2)\n        return \"YES\";\n    if (length % 2 == 0)\n \
    \       return \"NO\";\n    for (long i = 3; i * i <= length; i += 2)\n      \
    \  if (length % i == 0)\n            return \"NO\";\n    return \"YES\";\n}",
  "{\n    long start = max(interval1[0], interval2[0]);\n    long end = min(interval1[1],\
    \ interval2[1]);\n    if (start > end) return \"NO\";\n    return isPrime(end\
    \ - start + 1) ? \"YES\" : \"NO\";\n}", "{\n    long start = max(interval1[0],\
    \ interval2[0]);\n    long end = min(interval1[1], interval2[1]);\n    if (start\
    \ > end) return \"NO\";\n    return isPrime(end - start + 1) ? \"YES\" : \"NO\"\
    ;\n}", "{\n    long start = max(interval1[0], interval2[0]);\n    long end = min(interval1[1],\
    \ interval2[1]);\n    long length = end - start;\n    if (length < 0)\n      \
    \  return \"NO\";\n    else if (length == 0)\n        return \"YES\";\n    else\n\
    \        return isPrime(length) ? \"YES\" : \"NO\";\n}", "{\n    long start =\
    \ max(interval1[0], interval2[0]);\n    long end = min(interval1[1], interval2[1]);\n\
    \    long length = end - start;\n    if (length < 0)\n        return \"NO\";\n\
    \    return isPrime(length) ? \"YES\" : \"NO\";\n}", "{\n    long start = max(interval1[0],\
    \ interval2[0]);\n    long end = min(interval1[1], interval2[1]);\n    long len\
    \ = end - start;\n    if (len <= 0)\n        return \"NO\";\n    return isPrime(len)\
    \ ? \"YES\" : \"NO\";\n}", "{\n    long start = max(interval1[0], interval2[0]);\n\
    \    long end = min(interval1[1], interval2[1]);\n    long length = end - start;\n\
    \    if (length <= 0)\n        return \"NO\";\n    return isPrime(length) ? \"\
    YES\" : \"NO\";\n}", "{\n    long start1 = interval1[0];\n    long end1 = interval1[1];\n\
    \    long start2 = interval2[0];\n    long end2 = interval2[1];\n    long start\
    \ = max(start1, start2);\n    long end = min(end1, end2);\n    if (start > end)\n\
    \        return \"NO\";\n    long len = end - start + 1;\n    if (len == 1)\n\
    \        return \"NO\";\n    for (long i = 2; i <= sqrt(len); i++)\n    {\n  \
    \      if (len % i == 0)\n            return \"NO\";\n    }\n    return \"YES\"\
    ;\n}", "{\n    long start = max(interval1[0], interval2[0]);\n    long end = min(interval1[1],\
    \ interval2[1]);\n    if (start > end)\n        return \"NO\";\n    long length\
    \ = end - start + 1;\n    if (length == 1)\n        return \"NO\";\n    if (length\
    \ == 2)\n        return \"YES\";\n    for (long i = 2; i < length; i++)\n    \
    \    if (length % i == 0)\n            return \"NO\";\n    return \"YES\";\n}",
  "{\n    long start = max(interval1[0], interval2[0]);\n    long end = min(interval1[1],\
    \ interval2[1]);\n    long length = end - start;\n    if (length < 0) return \"\
    NO\";\n    if (length == 0) return \"YES\";\n    if (length == 1) return \"NO\"\
    ;\n    if (length == 2) return \"YES\";\n    if (length % 2 == 0) return \"NO\"\
    ;\n    for (long i = 3; i * i <= length; i += 2)\n    {\n        if (length %\
    \ i == 0) return \"NO\";\n    }\n    return \"YES\";\n}", "{\n    auto start =\
    \ max(interval1[0], interval2[0]);\n    auto end = min(interval1[1], interval2[1]);\n\
    \    auto length = end - start;\n    if (length < 0)\n        return \"NO\";\n\
    \    return isPrime(length) ? \"YES\" : \"NO\";\n}", "{\n    long start1 = interval1[0];\n\
    \    long end1 = interval1[1];\n    long start2 = interval2[0];\n    long end2\
    \ = interval2[1];\n    long start = max(start1, start2);\n    long end = min(end1,\
    \ end2);\n    if (start > end)\n        return \"NO\";\n    return isPrime(end\
    \ - start + 1) ? \"YES\" : \"NO\";\n}", "{\n    long start = max(interval1[0],\
    \ interval2[0]);\n    long end = min(interval1[1], interval2[1]);\n    long length\
    \ = end - start;\n    if (length <= 0) return \"NO\";\n    if (length == 1) return\
    \ \"NO\";\n    if (length == 2) return \"YES\";\n    if (length % 2 == 0) return\
    \ \"NO\";\n    for (long i = 3; i <= sqrt(length); i += 2)\n    {\n        if\
    \ (length % i == 0) return \"NO\";\n    }\n    return \"YES\";\n}", "{\n    long\
    \ start = max(interval1[0], interval2[0]);\n    long end = min(interval1[1], interval2[1]);\n\
    \    long length = end - start;\n    if (length < 0)\n        return \"NO\";\n\
    \    if (length == 0)\n        return \"YES\";\n    if (length == 1)\n       \
    \ return \"NO\";\n    if (length == 2)\n        return \"YES\";\n    if (length\
    \ % 2 == 0)\n        return \"NO\";\n    for (long i = 3; i * i <= length; i +=\
    \ 2)\n        if (length % i == 0)\n            return \"NO\";\n    return \"\
    YES\";\n}", "{\n    long start = max(interval1[0], interval2[0]);\n    long end\
    \ = min(interval1[1], interval2[1]);\n    long length = end - start;\n    if (length\
    \ < 0)\n        return \"NO\";\n    return isPrime(length) ? \"YES\" : \"NO\"\
    ;\n}", "{\n    auto start = max(interval1[0], interval2[0]);\n    auto end = min(interval1[1],\
    \ interval2[1]);\n    if (start > end) return \"NO\";\n    return isPrime(end\
    \ - start + 1) ? \"YES\" : \"NO\";\n}", "{\n    long start = max(interval1[0],\
    \ interval2[0]);\n    long end = min(interval1[1], interval2[1]);\n    long length\
    \ = end - start;\n    if (length < 0)\n        return \"NO\";\n    if (length\
    \ == 0)\n        return \"YES\";\n    for (long i = 2; i <= length / 2; i++)\n\
    \        if (length % i == 0)\n            return \"NO\";\n    return \"YES\"\
    ;\n}", "{\n    long start = max(interval1[0], interval2[0]);\n    long end = min(interval1[1],\
    \ interval2[1]);\n    long length = end - start;\n    if (length < 0)\n      \
    \  return \"NO\";\n    if (length == 0)\n        return \"YES\";\n    if (length\
    \ == 1)\n        return \"NO\";\n    if (length == 2)\n        return \"YES\"\
    ;\n    if (length % 2 == 0)\n        return \"NO\";\n    for (long i = 3; i <=\
    \ sqrt(length); i += 2)\n    {\n        if (length % i == 0)\n            return\
    \ \"NO\";\n    }\n    return \"YES\";\n}", "{\n    long start = max(interval1[0],\
    \ interval2[0]);\n    long end = min(interval1[1], interval2[1]);\n    long length\
    \ = end - start;\n    if (length < 0)\n        return \"NO\";\n    if (length\
    \ == 0)\n        return \"YES\";\n    if (length == 1)\n        return \"NO\"\
    ;\n    if (length == 2)\n        return \"YES\";\n    if (length % 2 == 0)\n \
    \       return \"NO\";\n    for (long i = 3; i <= sqrt(length); i += 2)\n    {\n\
    \        if (length % i == 0)\n            return \"NO\";\n    }\n    return \"\
    YES\";\n}", "{\n    long start = max(interval1[0], interval2[0]);\n    long end\
    \ = min(interval1[1], interval2[1]);\n    long length = end - start;\n    if (length\
    \ < 0) return \"NO\";\n    if (length == 0) return \"YES\";\n    if (length ==\
    \ 1) return \"NO\";\n    if (length == 2) return \"YES\";\n    if (length % 2\
    \ == 0) return \"NO\";\n    for (long i = 3; i <= sqrt(length); i += 2) {\n  \
    \      if (length % i == 0) return \"NO\";\n    }\n    return \"YES\";\n}", "{\n\
    \    long start = max(interval1[0], interval2[0]);\n    long end = min(interval1[1],\
    \ interval2[1]);\n    long length = end - start;\n    if (length <= 0)\n     \
    \   return \"NO\";\n    if (length == 1)\n        return \"NO\";\n    if (length\
    \ == 2)\n        return \"YES\";\n    if (length % 2 == 0)\n        return \"\
    NO\";\n    for (long i = 3; i * i <= length; i += 2)\n        if (length % i ==\
    \ 0)\n            return \"NO\";\n    return \"YES\";\n}", "{\n    long start\
    \ = max(interval1[0], interval2[0]);\n    long end = min(interval1[1], interval2[1]);\n\
    \    long length = end - start;\n    if (length < 0)\n        return \"NO\";\n\
    \    if (length == 0)\n        return \"YES\";\n    if (length == 1)\n       \
    \ return \"NO\";\n    if (length == 2)\n        return \"YES\";\n    if (length\
    \ % 2 == 0)\n        return \"NO\";\n    for (long i = 3; i <= sqrt(length); i\
    \ += 2)\n    {\n        if (length % i == 0)\n            return \"NO\";\n   \
    \ }\n    return \"YES\";\n}", "{\n    long start = max(interval1[0], interval2[0]);\n\
    \    long end = min(interval1[1], interval2[1]);\n    long length = end - start;\n\
    \    if (length < 0) return \"NO\";\n    if (length == 0) return \"YES\";\n  \
    \  if (length == 1) return \"NO\";\n    if (length == 2) return \"YES\";\n   \
    \ if (length % 2 == 0) return \"NO\";\n    for (long i = 3; i <= sqrt(length);\
    \ i += 2)\n    {\n        if (length % i == 0) return \"NO\";\n    }\n    return\
    \ \"YES\";\n}", "{\n    long start = max(interval1[0], interval2[0]);\n    long\
    \ end = min(interval1[1], interval2[1]);\n    long length = end - start;\n   \
    \ if (length < 0) return \"NO\";\n    return isPrime(length) ? \"YES\" : \"NO\"\
    ;\n}", "{\n    long start = max(interval1[0], interval2[0]);\n    long end = min(interval1[1],\
    \ interval2[1]);\n    long diff = end - start;\n    if (diff < 0)\n        return\
    \ \"NO\";\n    return isPrime(diff) ? \"YES\" : \"NO\";\n}", "{\n    long start\
    \ = max(interval1[0], interval2[0]);\n    long end = min(interval1[1], interval2[1]);\n\
    \    long length = end - start;\n    if (length <= 0)\n        return \"NO\";\n\
    \    return isPrime(length) ? \"YES\" : \"NO\";\n}", "{\n    long start = max(interval1[0],\
    \ interval2[0]);\n    long end = min(interval1[1], interval2[1]);\n    if (start\
    \ > end) return \"NO\";\n    return isPrime(end - start + 1) ? \"YES\" : \"NO\"\
    ;\n}", "{\n    long start = max(interval1[0], interval2[0]);\n    long end = min(interval1[1],\
    \ interval2[1]);\n    if (start > end) return \"NO\";\n    return isPrime(end\
    \ - start + 1) ? \"YES\" : \"NO\";\n}", "{\n    long start = max(interval1[0],\
    \ interval2[0]);\n    long end = min(interval1[1], interval2[1]);\n    if (start\
    \ > end) return \"NO\";\n    return isPrime(end - start + 1) ? \"YES\" : \"NO\"\
    ;\n}", "{\n    long start = max(interval1[0], interval2[0]);\n    long end = min(interval1[1],\
    \ interval2[1]);\n    long length = end - start;\n    if (length < 0)\n      \
    \  return \"NO\";\n    return isPrime(length) ? \"YES\" : \"NO\";\n}", "{\n  \
    \  long start = max(interval1[0], interval2[0]);\n    long end = min(interval1[1],\
    \ interval2[1]);\n    long length = end - start;\n    if (length < 0)\n      \
    \  return \"NO\";\n    if (length == 0)\n        return \"YES\";\n    if (length\
    \ == 1)\n        return \"NO\";\n    if (length == 2)\n        return \"YES\"\
    ;\n    if (length % 2 == 0)\n        return \"NO\";\n    for (long i = 3; i <=\
    \ sqrt(length); i += 2)\n    {\n        if (length % i == 0)\n            return\
    \ \"NO\";\n    }\n    return \"YES\";\n}", "{\n    long start = max(interval1[0],\
    \ interval2[0]);\n    long end = min(interval1[1], interval2[1]);\n    long length\
    \ = end - start;\n    if (length < 0)\n        return \"NO\";\n    if (length\
    \ == 0)\n        return \"YES\";\n    if (length == 1)\n        return \"NO\"\
    ;\n    if (length == 2)\n        return \"YES\";\n    if (length % 2 == 0)\n \
    \       return \"NO\";\n    for (long i = 3; i * i <= length; i += 2)\n      \
    \  if (length % i == 0)\n            return \"NO\";\n    return \"YES\";\n}",
  "{\n    long start = max(interval1[0], interval2[0]);\n    long end = min(interval1[1],\
    \ interval2[1]);\n    long length = end - start;\n    if (length < 0)\n      \
    \  return \"NO\";\n    if (length == 0)\n        return \"YES\";\n    if (length\
    \ == 1)\n        return \"NO\";\n    if (length == 2)\n        return \"YES\"\
    ;\n    if (length % 2 == 0)\n        return \"NO\";\n    for (long i = 3; i <=\
    \ sqrt(length); i += 2)\n    {\n        if (length % i == 0)\n            return\
    \ \"NO\";\n    }\n    return \"YES\";\n}", "{\n    long start = max(interval1[0],\
    \ interval2[0]);\n    long end = min(interval1[1], interval2[1]);\n    long length\
    \ = end - start;\n    if (length < 0)\n        return \"NO\";\n    return isPrime(length)\
    \ ? \"YES\" : \"NO\";\n}", "{\n    long start = max(interval1[0], interval2[0]);\n\
    \    long end = min(interval1[1], interval2[1]);\n    return (start <= end &&\
    \ isPrime(end - start + 1)) ? \"YES\" : \"NO\";\n}", "{\n    long start = max(interval1[0],\
    \ interval2[0]);\n    long end = min(interval1[1], interval2[1]);\n    long length\
    \ = end - start;\n    if (length < 0)\n        return \"NO\";\n    if (length\
    \ == 0)\n        return \"YES\";\n    if (length == 1)\n        return \"NO\"\
    ;\n    if (length == 2)\n        return \"YES\";\n    if (length % 2 == 0)\n \
    \       return \"NO\";\n    for (long i = 3; i <= sqrt(length); i += 2)\n    {\n\
    \        if (length % i == 0)\n            return \"NO\";\n    }\n    return \"\
    YES\";\n}", "{\n    long start1 = interval1[0];\n    long end1 = interval1[1];\n\
    \    long start2 = interval2[0];\n    long end2 = interval2[1];\n    long start\
    \ = max(start1, start2);\n    long end = min(end1, end2);\n    if (start > end)\n\
    \        return \"NO\";\n    return isPrime(end - start + 1) ? \"YES\" : \"NO\"\
    ;\n}", "{\n    long start = max(interval1[0], interval2[0]);\n    long end = min(interval1[1],\
    \ interval2[1]);\n    if (start > end) return \"NO\";\n    long len = end - start\
    \ + 1;\n    return isPrime(len) ? \"YES\" : \"NO\";\n}", "{\n    long start =\
    \ max(interval1[0], interval2[0]);\n    long end = min(interval1[1], interval2[1]);\n\
    \    long len = end - start;\n    if (len < 0) return \"NO\";\n    if (len ==\
    \ 0) return \"YES\";\n    if (len == 1) return \"NO\";\n    if (len == 2) return\
    \ \"YES\";\n    if (len % 2 == 0) return \"NO\";\n    for (long i = 3; i <= sqrt(len);\
    \ i += 2)\n    {\n        if (len % i == 0) return \"NO\";\n    }\n    return\
    \ \"YES\";\n}", "{\n    long start = max(interval1[0], interval2[0]);\n    long\
    \ end = min(interval1[1], interval2[1]);\n    long length = end - start;\n   \
    \ if (length < 0)\n        return \"NO\";\n    if (length == 0)\n        return\
    \ \"YES\";\n    if (length == 1)\n        return \"NO\";\n    if (length == 2)\n\
    \        return \"YES\";\n    if (length % 2 == 0)\n        return \"NO\";\n \
    \   for (long i = 3; i <= sqrt(length); i += 2)\n    {\n        if (length % i\
    \ == 0)\n            return \"NO\";\n    }\n    return \"YES\";\n}", "{\n    long\
    \ start = max(interval1[0], interval2[0]);\n    long end = min(interval1[1], interval2[1]);\n\
    \    if (start > end)\n        return \"NO\";\n    long length = end - start +\
    \ 1;\n    return isPrime(length) ? \"YES\" : \"NO\";\n}", "{\n    long start1\
    \ = interval1[0];\n    long end1 = interval1[1];\n    long start2 = interval2[0];\n\
    \    long end2 = interval2[1];\n    long start = max(start1, start2);\n    long\
    \ end = min(end1, end2);\n    if (start > end)\n        return \"NO\";\n    long\
    \ len = end - start + 1;\n    return isPrime(len) ? \"YES\" : \"NO\";\n}", "{\n\
    \    long start = max(interval1[0], interval2[0]);\n    long end = min(interval1[1],\
    \ interval2[1]);\n    if (start > end) return \"NO\";\n    return isPrime(end\
    \ - start + 1) ? \"YES\" : \"NO\";\n}", "{\n    long start = max(interval1[0],\
    \ interval2[0]);\n    long end = min(interval1[1], interval2[1]);\n    long length\
    \ = end - start;\n    if (length < 0)\n        return \"NO\";\n    if (length\
    \ == 0)\n        return \"YES\";\n    for (long i = 2; i <= length / 2; i++)\n\
    \        if (length % i == 0)\n            return \"NO\";\n    return \"YES\"\
    ;\n}", "{\n    long start = max(interval1[0], interval2[0]);\n    long end = min(interval1[1],\
    \ interval2[1]);\n    long length = end - start;\n    if (length <= 0)\n     \
    \   return \"NO\";\n    return isPrime(length) ? \"YES\" : \"NO\";\n}", "{\n \
    \   long start = max(interval1[0], interval2[0]);\n    long end = min(interval1[1],\
    \ interval2[1]);\n    long length = end - start;\n    if (length < 0) return \"\
    NO\";\n    if (length == 0) return \"YES\";\n    if (length == 1) return \"NO\"\
    ;\n    if (length == 2) return \"YES\";\n    if (length % 2 == 0) return \"NO\"\
    ;\n    for (long i = 3; i <= sqrt(length); i += 2) {\n        if (length % i ==\
    \ 0) return \"NO\";\n    }\n    return \"YES\";\n}", "{\n    long start = max(interval1[0],\
    \ interval2[0]);\n    long end = min(interval1[1], interval2[1]);\n    long length\
    \ = end - start;\n    if (length < 0)\n        return \"NO\";\n    if (length\
    \ == 0)\n        return \"YES\";\n    foreach (i; 2..length)\n        if (length\
    \ % i == 0)\n            return \"NO\";\n    return \"YES\";\n}", "{\n    long\
    \ start = max(interval1[0], interval2[0]);\n    long end = min(interval1[1], interval2[1]);\n\
    \    long length = end - start;\n    if (length < 0) return \"NO\";\n    if (length\
    \ == 0) return \"YES\";\n    if (length == 1) return \"NO\";\n    if (length ==\
    \ 2) return \"YES\";\n    if (length % 2 == 0) return \"NO\";\n    for (long i\
    \ = 3; i <= sqrt(length); i += 2)\n    {\n        if (length % i == 0) return\
    \ \"NO\";\n    }\n    return \"YES\";\n}", "{\n    long start1 = interval1[0];\n\
    \    long end1 = interval1[1];\n    long start2 = interval2[0];\n    long end2\
    \ = interval2[1];\n    long start = max(start1, start2);\n    long end = min(end1,\
    \ end2);\n    if (start > end) return \"NO\";\n    return isPrime(end - start\
    \ + 1) ? \"YES\" : \"NO\";\n}", "{\n    long start = max(interval1[0], interval2[0]);\n\
    \    long end = min(interval1[1], interval2[1]);\n    if (start > end) return\
    \ \"NO\";\n    return isPrime(end - start + 1) ? \"YES\" : \"NO\";\n}", "{\n \
    \   long start = max(interval1[0], interval2[0]);\n    long end = min(interval1[1],\
    \ interval2[1]);\n    long diff = end - start;\n    if (diff < 0)\n        return\
    \ \"NO\";\n    return isPrime(diff) ? \"YES\" : \"NO\";\n}", "{\n    long start\
    \ = max(interval1[0], interval2[0]);\n    long end = min(interval1[1], interval2[1]);\n\
    \    if (start > end)\n        return \"NO\";\n    long length = end - start +\
    \ 1;\n    return isPrime(length) ? \"YES\" : \"NO\";\n}", "{\n    long start =\
    \ max(interval1[0], interval2[0]);\n    long end = min(interval1[1], interval2[1]);\n\
    \    long length = end - start;\n    if (length <= 0) return \"NO\";\n    if (length\
    \ == 1) return \"NO\";\n    if (length == 2) return \"YES\";\n    if (length %\
    \ 2 == 0) return \"NO\";\n    for (long i = 3; i <= sqrt(length); i += 2) {\n\
    \        if (length % i == 0) return \"NO\";\n    }\n    return \"YES\";\n}",
  "{\n    long start = max(interval1[0], interval2[0]);\n    long end = min(interval1[1],\
    \ interval2[1]);\n    long length = end - start;\n    if (length < 0)\n      \
    \  return \"NO\";\n    return isPrime(length) ? \"YES\" : \"NO\";\n}", "{\n  \
    \  long start = max(interval1[0], interval2[0]);\n    long end = min(interval1[1],\
    \ interval2[1]);\n    long length = end - start;\n    if (length < 0) return \"\
    NO\";\n    if (length == 0) return \"YES\";\n    return isPrime(length) ? \"YES\"\
    \ : \"NO\";\n}", "{\n    long start = max(interval1[0], interval2[0]);\n    long\
    \ end = min(interval1[1], interval2[1]);\n    long length = end - start;\n   \
    \ if (length < 0)\n        return \"NO\";\n    if (length == 0)\n        return\
    \ \"YES\";\n    if (length == 1)\n        return \"NO\";\n    if (length == 2)\n\
    \        return \"YES\";\n    if (length % 2 == 0)\n        return \"NO\";\n \
    \   for (long i = 3; i <= sqrt(length); i += 2)\n    {\n        if (length % i\
    \ == 0)\n            return \"NO\";\n    }\n    return \"YES\";\n}", "{\n    if\
    \ (interval1[0] > interval2[1] || interval2[0] > interval1[1])\n        return\
    \ \"NO\";\n    long start = max(interval1[0], interval2[0]);\n    long end = min(interval1[1],\
    \ interval2[1]);\n    return isPrime(end - start + 1) ? \"YES\" : \"NO\";\n}",
  "{\n    long start = max(interval1[0], interval2[0]);\n    long end = min(interval1[1],\
    \ interval2[1]);\n    if (start > end)\n        return \"NO\";\n    if (start\
    \ == end)\n        return \"YES\";\n    return isPrime(end - start) ? \"YES\"\
    \ : \"NO\";\n}", "{\n    long start = max(interval1[0], interval2[0]);\n    long\
    \ end = min(interval1[1], interval2[1]);\n    long length = end - start;\n   \
    \ if (length < 0)\n        return \"NO\";\n    if (length == 0)\n        return\
    \ \"YES\";\n    return isPrime(length) ? \"YES\" : \"NO\";\n}", "{\n    long start\
    \ = max(interval1[0], interval2[0]);\n    long end = min(interval1[1], interval2[1]);\n\
    \    long length = end - start;\n    if (length < 0)\n        return \"NO\";\n\
    \    if (length == 0)\n        return \"YES\";\n    if (length == 1)\n       \
    \ return \"NO\";\n    if (length == 2)\n        return \"YES\";\n    if (length\
    \ % 2 == 0)\n        return \"NO\";\n    for (long i = 3; i * i <= length; i +=\
    \ 2)\n        if (length % i == 0)\n            return \"NO\";\n    return \"\
    YES\";\n}", "{\n    long start = max(interval1[0], interval2[0]);\n    long end\
    \ = min(interval1[1], interval2[1]);\n    long len = end - start;\n    if (len\
    \ < 0)\n        return \"NO\";\n    if (len == 0)\n        return \"YES\";\n \
    \   return isPrime(len) ? \"YES\" : \"NO\";\n}", "{\n    long start = max(interval1[0],\
    \ interval2[0]);\n    long end = min(interval1[1], interval2[1]);\n    long length\
    \ = end - start;\n    if (length < 0)\n        return \"NO\";\n    if (length\
    \ == 0)\n        return \"YES\";\n    if (length == 1)\n        return \"NO\"\
    ;\n    if (length == 2)\n        return \"YES\";\n    if (length % 2 == 0)\n \
    \       return \"NO\";\n    for (long i = 3; i < sqrt(length); i += 2)\n    {\n\
    \        if (length % i == 0)\n            return \"NO\";\n    }\n    return \"\
    YES\";\n}", "{\n    long start = max(interval1[0], interval2[0]);\n    long end\
    \ = min(interval1[1], interval2[1]);\n    long length = end - start;\n    return\
    \ isPrime(length) ? \"YES\" : \"NO\";\n}", "{\n    long start = max(interval1[0],\
    \ interval2[0]);\n    long end = min(interval1[1], interval2[1]);\n    long len\
    \ = end - start;\n    if (len < 0)\n        return \"NO\";\n    return isPrime(len)\
    \ ? \"YES\" : \"NO\";\n}", "{\n    long start = max(interval1[0], interval2[0]);\n\
    \    long end = min(interval1[1], interval2[1]);\n    long length = end - start;\n\
    \    if (length < 0) return \"NO\";\n    if (length == 0) return \"YES\";\n  \
    \  if (length == 1) return \"NO\";\n    if (length == 2) return \"YES\";\n   \
    \ if (length % 2 == 0) return \"NO\";\n    for (long i = 3; i <= sqrt(length);\
    \ i += 2)\n    {\n        if (length % i == 0) return \"NO\";\n    }\n    return\
    \ \"YES\";\n}", "{\n    long start = max(interval1[0], interval2[0]);\n    long\
    \ end = min(interval1[1], interval2[1]);\n    long length = end - start;\n   \
    \ if (length < 0)\n        return \"NO\";\n    if (length == 0)\n        return\
    \ \"YES\";\n    return isPrime(length) ? \"YES\" : \"NO\";\n}", "{\n    long start\
    \ = max(interval1[0], interval2[0]);\n    long end = min(interval1[1], interval2[1]);\n\
    \    if (start > end) return \"NO\";\n    return isPrime(end - start + 1) ? \"\
    YES\" : \"NO\";\n}", "{\n    long start = max(interval1[0], interval2[0]);\n \
    \   long end = min(interval1[1], interval2[1]);\n    if (start > end) \n    {\n\
    \        return \"NO\";\n    }\n    return isPrime(end - start + 1) ? \"YES\"\
    \ : \"NO\";\n}", "{\n    long start = max(interval1[0], interval2[0]);\n    long\
    \ end = min(interval1[1], interval2[1]);\n    long length = end - start;\n   \
    \ if (length < 0) return \"NO\";\n    if (length == 0) return \"YES\";\n    return\
    \ isPrime(length) ? \"YES\" : \"NO\";\n}", "{\n    long start = max(interval1[0],\
    \ interval2[0]);\n    long end = min(interval1[1], interval2[1]);\n    long length\
    \ = end - start;\n    if (length < 0)\n        return \"NO\";\n    return isPrime(length)\
    \ ? \"YES\" : \"NO\";\n}", "{\n    long start = max(interval1[0], interval2[0]);\n\
    \    long end = min(interval1[1], interval2[1]);\n    if (start > end) return\
    \ \"NO\";\n    return isPrime(end - start + 1) ? \"YES\" : \"NO\";\n}", "{\n \
    \   long start1 = interval1[0];\n    long end1 = interval1[1];\n    long start2\
    \ = interval2[0];\n    long end2 = interval2[1];\n    long start = max(start1,\
    \ start2);\n    long end = min(end1, end2);\n    if (start > end) return \"NO\"\
    ;\n    long len = end - start + 1;\n    if (len == 1) return \"NO\";\n    return\
    \ isPrime(len) ? \"YES\" : \"NO\";\n}", "{\n    long start = max(interval1[0],\
    \ interval2[0]);\n    long end = min(interval1[1], interval2[1]);\n    long length\
    \ = end - start;\n    if (length < 0)\n        return \"NO\";\n    if (length\
    \ == 0)\n        return \"YES\";\n    if (length == 1)\n        return \"NO\"\
    ;\n    if (length == 2)\n        return \"YES\";\n    if (length % 2 == 0)\n \
    \       return \"NO\";\n    for (long i = 3; i <= sqrt(length); i += 2)\n    {\n\
    \        if (length % i == 0)\n            return \"NO\";\n    }\n    return \"\
    YES\";\n}", "{\n    long start = max(interval1[0], interval2[0]);\n    long end\
    \ = min(interval1[1], interval2[1]);\n    long length = end - start;\n    if (length\
    \ < 0)\n        return \"NO\";\n    return isPrime(length) ? \"YES\" : \"NO\"\
    ;\n}", "{\n    long start = max(interval1[0], interval2[0]);\n    long end = min(interval1[1],\
    \ interval2[1]);\n    long length = end - start;\n    if (length < 0)\n      \
    \  return \"NO\";\n    if (length == 0)\n        return \"YES\";\n    if (length\
    \ == 1)\n        return \"NO\";\n    if (length == 2)\n        return \"YES\"\
    ;\n    if (length % 2 == 0)\n        return \"NO\";\n    for (long i = 3; i <\
    \ length; i += 2)\n        if (length % i == 0)\n            return \"NO\";\n\
    \    return \"YES\";\n}", "{\n    long start = max(interval1[0], interval2[0]);\n\
    \    long end = min(interval1[1], interval2[1]);\n    long length = end - start;\n\
    \    if (length < 0) return \"NO\";\n    if (length == 0) return \"YES\";\n  \
    \  return isPrime(length) ? \"YES\" : \"NO\";\n}", "{\n    long start = max(interval1[0],\
    \ interval2[0]);\n    long end = min(interval1[1], interval2[1]);\n    long len\
    \ = end - start;\n    if (len < 0)\n        return \"NO\";\n    if (len == 0)\n\
    \        return \"YES\";\n    if (len == 1)\n        return \"NO\";\n    if (len\
    \ == 2)\n        return \"YES\";\n    if (len % 2 == 0)\n        return \"NO\"\
    ;\n    for (long i = 3; i * i <= len; i += 2)\n        if (len % i == 0)\n   \
    \         return \"NO\";\n    return \"YES\";\n}", "{\n    long start = max(interval1[0],\
    \ interval2[0]);\n    long end = min(interval1[1], interval2[1]);\n    long length\
    \ = end - start;\n    if (length < 0) return \"NO\";\n    if (length == 0) return\
    \ \"YES\";\n    if (length == 1) return \"NO\";\n    if (length == 2) return \"\
    YES\";\n    if (length % 2 == 0) return \"NO\";\n    for (long i = 3; i <= sqrt(length);\
    \ i += 2)\n    {\n        if (length % i == 0) return \"NO\";\n    }\n    return\
    \ \"YES\";\n}", "{\n    long start = max(interval1[0], interval2[0]);\n    long\
    \ end = min(interval1[1], interval2[1]);\n    long length = end - start;\n   \
    \ if (length < 0)\n        return \"NO\";\n    if (length == 0)\n        return\
    \ \"YES\";\n    return isPrime(length) ? \"YES\" : \"NO\";\n}", "{\n    long start\
    \ = max(interval1[0], interval2[0]);\n    long end = min(interval1[1], interval2[1]);\n\
    \    long length = end - start;\n    if (length <= 0) return \"NO\";\n    if (length\
    \ == 1) return \"NO\";\n    if (length == 2) return \"YES\";\n    if (length %\
    \ 2 == 0) return \"NO\";\n    for (long i = 3; i <= sqrt(length); i += 2)\n  \
    \  {\n        if (length % i == 0) return \"NO\";\n    }\n    return \"YES\";\n\
    }", "{\n    auto start = max(interval1[0], interval2[0]);\n    auto end = min(interval1[1],\
    \ interval2[1]);\n    auto len = end - start;\n    if (len < 0)\n        return\
    \ \"NO\";\n    return isPrime(len) ? \"YES\" : \"NO\";\n}", "{\n    long start\
    \ = max(interval1[0], interval2[0]);\n    long end = min(interval1[1], interval2[1]);\n\
    \    long length = end - start;\n    if (length < 0)\n        return \"NO\";\n\
    \    if (length == 0)\n        return \"YES\";\n    foreach (i; 2..length)\n \
    \       if (length % i == 0)\n            return \"NO\";\n    return \"YES\";\n\
    }", "{\n    long start = max(interval1[0], interval2[0]);\n    long end = min(interval1[1],\
    \ interval2[1]);\n    long length = end - start;\n    if (length <= 0) return\
    \ \"NO\";\n    if (length == 1) return \"NO\";\n    if (length == 2) return \"\
    YES\";\n    if (length % 2 == 0) return \"NO\";\n    for (long i = 3; i <= sqrt(length);\
    \ i += 2)\n    {\n        if (length % i == 0) return \"NO\";\n    }\n    return\
    \ \"YES\";\n}", "{\n    long start = max(interval1[0], interval2[0]);\n    long\
    \ end = min(interval1[1], interval2[1]);\n    if (start > end)\n        return\
    \ \"NO\";\n    return isPrime(end - start + 1) ? \"YES\" : \"NO\";\n}", "{\n \
    \   long start1 = interval1[0];\n    long end1 = interval1[1];\n    long start2\
    \ = interval2[0];\n    long end2 = interval2[1];\n    long start = max(start1,\
    \ start2);\n    long end = min(end1, end2);\n    if (start > end)\n        return\
    \ \"NO\";\n    long length = end - start + 1;\n    return isPrime(length) ? \"\
    YES\" : \"NO\";\n}", "{\n    long start = max(interval1[0], interval2[0]);\n \
    \   long end = min(interval1[1], interval2[1]);\n    if (start > end) return \"\
    NO\";\n    return isPrime(end - start + 1) ? \"YES\" : \"NO\";\n}", "{\n    long\
    \ start1 = interval1[0];\n    long end1 = interval1[1];\n    long start2 = interval2[0];\n\
    \    long end2 = interval2[1];\n    long start = max(start1, start2);\n    long\
    \ end = min(end1, end2);\n    if (start > end)\n        return \"NO\";\n    if\
    \ (isPrime(end - start + 1))\n        return \"YES\";\n    return \"NO\";\n}",
  "{\n    long start = max(interval1[0], interval2[0]);\n    long end = min(interval1[1],\
    \ interval2[1]);\n    long length = end - start;\n    if (length < 0) return \"\
    NO\";\n    if (length == 0) return \"YES\";\n    if (length == 1) return \"NO\"\
    ;\n    if (length == 2) return \"YES\";\n    if (length % 2 == 0) return \"NO\"\
    ;\n    for (long i = 3; i <= sqrt(length); i += 2)\n    {\n        if (length\
    \ % i == 0) return \"NO\";\n    }\n    return \"YES\";\n}", "{\n    long start\
    \ = max(interval1[0], interval2[0]);\n    long end = min(interval1[1], interval2[1]);\n\
    \    long len = end - start;\n    if (len < 0)\n        return \"NO\";\n    if\
    \ (len == 0)\n        return \"YES\";\n    if (len == 1)\n        return \"NO\"\
    ;\n    if (len == 2)\n        return \"YES\";\n    if (len % 2 == 0)\n       \
    \ return \"NO\";\n    for (long i = 3; i <= len / 2; i += 2)\n        if (len\
    \ % i == 0)\n            return \"NO\";\n    return \"YES\";\n}", "{\n    long\
    \ start = max(interval1[0], interval2[0]);\n    long end = min(interval1[1], interval2[1]);\n\
    \    if (start > end) return \"NO\";\n    return isPrime(end - start + 1) ? \"\
    YES\" : \"NO\";\n}", "{\n    auto start = max(interval1[0], interval2[0]);\n \
    \   auto end = min(interval1[1], interval2[1]);\n    if (start > end)\n      \
    \  return \"NO\";\n    return isPrime(end - start + 1) ? \"YES\" : \"NO\";\n}",
  "{\n    long start = max(interval1[0], interval2[0]);\n    long end = min(interval1[1],\
    \ interval2[1]);\n    long length = end - start;\n    if (length < 0)\n      \
    \  return \"NO\";\n    return isPrime(length) ? \"YES\" : \"NO\";\n}", "{\n  \
    \  long start = max(interval1[0], interval2[0]);\n    long end = min(interval1[1],\
    \ interval2[1]);\n    long length = end - start;\n    if (length < 2)\n      \
    \  return \"NO\";\n    if (length == 2)\n        return \"YES\";\n    for (long\
    \ i = 2; i < length; i++)\n        if (length % i == 0)\n            return \"\
    NO\";\n    return \"YES\";\n}", "{\n    auto start = max(interval1[0], interval2[0]);\n\
    \    auto end = min(interval1[1], interval2[1]);\n    if (start > end) return\
    \ \"NO\";\n    auto len = end - start + 1;\n    return isPrime(len) ? \"YES\"\
    \ : \"NO\";\n}", "{\n    long start = max(interval1[0], interval2[0]);\n    long\
    \ end = min(interval1[1], interval2[1]);\n    if (start > end) return \"NO\";\n\
    \    return isPrime(end - start + 1) ? \"YES\" : \"NO\";\n}", "{\n    long start\
    \ = max(interval1[0], interval2[0]);\n    long end = min(interval1[1], interval2[1]);\n\
    \    long length = end - start;\n    if (length < 0)\n        return \"NO\";\n\
    \    return isPrime(length) ? \"YES\" : \"NO\";\n}", "{\n    long start = max(interval1[0],\
    \ interval2[0]);\n    long end = min(interval1[1], interval2[1]);\n    if (start\
    \ > end) return \"NO\";\n    return isPrime(end - start + 1) ? \"YES\" : \"NO\"\
    ;\n}", "{\n    long start = max(interval1[0], interval2[0]);\n    long end = min(interval1[1],\
    \ interval2[1]);\n    long length = end - start;\n    if (length <= 0) return\
    \ \"NO\";\n    if (length == 1) return \"NO\";\n    if (length == 2) return \"\
    YES\";\n    if (length % 2 == 0) return \"NO\";\n    for (long i = 3; i <= sqrt(length);\
    \ i += 2)\n    {\n        if (length % i == 0) return \"NO\";\n    }\n    return\
    \ \"YES\";\n}", "{\n    long start = max(interval1[0], interval2[0]);\n    long\
    \ end = min(interval1[1], interval2[1]);\n    long len = end - start;\n    if\
    \ (len < 0) return \"NO\";\n    if (len == 0) return \"YES\";\n    if (len ==\
    \ 1) return \"NO\";\n    if (len == 2) return \"YES\";\n    if (len % 2 == 0)\
    \ return \"NO\";\n    for (long i = 3; i <= sqrt(len); i += 2)\n    {\n      \
    \  if (len % i == 0) return \"NO\";\n    }\n    return \"YES\";\n}", "{\n    long\
    \ start = max(interval1[0], interval2[0]);\n    long end = min(interval1[1], interval2[1]);\n\
    \    long length = end - start;\n    if (length <= 0)\n        return \"NO\";\n\
    \    return isPrime(length) ? \"YES\" : \"NO\";\n}", "{\n    long start = max(interval1[0],\
    \ interval2[0]);\n    long end = min(interval1[1], interval2[1]);\n    long diff\
    \ = end - start;\n    if (diff < 0)\n        return \"NO\";\n    if (diff == 0)\n\
    \        return \"YES\";\n    return isPrime(diff) ? \"YES\" : \"NO\";\n}", "{\n\
    \    long start = max(interval1[0], interval2[0]);\n    long end = min(interval1[1],\
    \ interval2[1]);\n    long length = end - start;\n    if (length <= 0)\n     \
    \   return \"NO\";\n    return isPrime(length) ? \"YES\" : \"NO\";\n}", "{\n \
    \   long start = max(interval1[0], interval2[0]);\n    long end = min(interval1[1],\
    \ interval2[1]);\n    if (start > end) return \"NO\";\n    if (start == end) return\
    \ \"YES\";\n    return isPrime(end - start + 1) ? \"YES\" : \"NO\";\n}", "{\n\
    \    long start = max(interval1[0], interval2[0]);\n    long end = min(interval1[1],\
    \ interval2[1]);\n    long length = end - start;\n    if (length < 0)\n      \
    \  return \"NO\";\n    return isPrime(length) ? \"YES\" : \"NO\";\n}", "{\n  \
    \  long start = max(interval1[0], interval2[0]);\n    long end = min(interval1[1],\
    \ interval2[1]);\n    long length = end - start;\n    if (length < 0)\n      \
    \  return \"NO\";\n    if (length == 0)\n        return \"YES\";\n    if (length\
    \ == 1)\n        return \"NO\";\n    if (length == 2)\n        return \"YES\"\
    ;\n    if (length % 2 == 0)\n        return \"NO\";\n    for (long i = 3; i <=\
    \ sqrt(length); i += 2)\n    {\n        if (length % i == 0)\n            return\
    \ \"NO\";\n    }\n    return \"YES\";\n}", "{\n    long start = max(interval1[0],\
    \ interval2[0]);\n    long end = min(interval1[1], interval2[1]);\n    if (start\
    \ > end)\n        return \"NO\";\n    if (start == end)\n        return \"YES\"\
    ;\n    return isPrime(end - start) ? \"YES\" : \"NO\";\n}", "{\n    long start\
    \ = max(interval1[0], interval2[0]);\n    long end = min(interval1[1], interval2[1]);\n\
    \    long length = end - start;\n    if (length < 0)\n        return \"NO\";\n\
    \    if (length == 0)\n        return \"YES\";\n    if (length == 1)\n       \
    \ return \"NO\";\n    if (length == 2)\n        return \"YES\";\n    if (length\
    \ % 2 == 0)\n        return \"NO\";\n    for (long i = 3; i <= sqrt(length); i\
    \ += 2)\n    {\n        if (length % i == 0)\n            return \"NO\";\n   \
    \ }\n    return \"YES\";\n}", "{\n    long start = max(interval1[0], interval2[0]);\n\
    \    long end = min(interval1[1], interval2[1]);\n    long length = end - start;\n\
    \    if (length <= 0)\n        return \"NO\";\n    return isPrime(length) ? \"\
    YES\" : \"NO\";\n}", "{\n    long start = max(interval1[0], interval2[0]);\n \
    \   long end = min(interval1[1], interval2[1]);\n    long length = end - start;\n\
    \    if (length < 0) return \"NO\";\n    if (length == 0) return \"YES\";\n  \
    \  if (length == 1) return \"NO\";\n    if (length == 2) return \"YES\";\n   \
    \ if (length % 2 == 0) return \"NO\";\n    for (long i = 3; i <= sqrt(length);\
    \ i += 2) {\n        if (length % i == 0) return \"NO\";\n    }\n    return \"\
    YES\";\n}", "{\n    long start = max(interval1[0], interval2[0]);\n    long end\
    \ = min(interval1[1], interval2[1]);\n    long length = end - start;\n    if (length\
    \ <= 0)\n        return \"NO\";\n    return isPrime(length) ? \"YES\" : \"NO\"\
    ;\n}", "{\n    long start1 = interval1[0];\n    long end1 = interval1[1];\n  \
    \  long start2 = interval2[0];\n    long end2 = interval2[1];\n    long start\
    \ = max(start1, start2);\n    long end = min(end1, end2);\n    if (start > end)\n\
    \        return \"NO\";\n    long length = end - start + 1;\n    return isPrime(length)\
    \ ? \"YES\" : \"NO\";\n}", "{\n    long start = max(interval1[0], interval2[0]);\n\
    \    long end = min(interval1[1], interval2[1]);\n    long len = end - start;\n\
    \    if (len < 0) return \"NO\";\n    if (len == 0) return \"YES\";\n    if (len\
    \ == 1) return \"NO\";\n    if (len == 2) return \"YES\";\n    if (len % 2 ==\
    \ 0) return \"NO\";\n    for (long i = 3; i <= sqrt(len); i += 2)\n    {\n   \
    \     if (len % i == 0) return \"NO\";\n    }\n    return \"YES\";\n}", "{\n \
    \   long start1 = interval1[0];\n    long end1 = interval1[1];\n    long start2\
    \ = interval2[0];\n    long end2 = interval2[1];\n    long start = max(start1,\
    \ start2);\n    long end = min(end1, end2);\n    if (start > end)\n        return\
    \ \"NO\";\n    long length = end - start + 1;\n    return isPrime(length) ? \"\
    YES\" : \"NO\";\n}", "{\n    long start = max(interval1[0], interval2[0]);\n \
    \   long end = min(interval1[1], interval2[1]);\n    long length = end - start;\n\
    \    if (length <= 0)\n        return \"NO\";\n    return isPrime(length) ? \"\
    YES\" : \"NO\";\n}", "{\n    auto start = max(interval1[0], interval2[0]);\n \
    \   auto end = min(interval1[1], interval2[1]);\n    if (start > end)\n      \
    \  return \"NO\";\n    return isPrime(end - start + 1) ? \"YES\" : \"NO\";\n}",
  "{\n    long start = max(interval1[0], interval2[0]);\n    long end = min(interval1[1],\
    \ interval2[1]);\n    if (start > end)\n        return \"NO\";\n    long len =\
    \ end - start + 1;\n    return isPrime(len) ? \"YES\" : \"NO\";\n}", "{\n    long\
    \ start = max(interval1[0], interval2[0]);\n    long end = min(interval1[1], interval2[1]);\n\
    \    if (start > end)\n        return \"NO\";\n    long len = end - start + 1;\n\
    \    if (len == 1)\n        return \"NO\";\n    if (len == 2)\n        return\
    \ \"YES\";\n    for (long i = 2; i <= sqrt(len); i++)\n    {\n        if (len\
    \ % i == 0)\n            return \"NO\";\n    }\n    return \"YES\";\n}", "{\n\
    \    long start = max(interval1[0], interval2[0]);\n    long end = min(interval1[1],\
    \ interval2[1]);\n    long length = end - start;\n    if (length < 0)\n      \
    \  return \"NO\";\n    if (length == 0)\n        return \"YES\";\n    if (length\
    \ == 1)\n        return \"NO\";\n    if (length == 2)\n        return \"YES\"\
    ;\n    if (length % 2 == 0)\n        return \"NO\";\n    for (long i = 3; i <=\
    \ sqrt(length); i += 2)\n    {\n        if (length % i == 0)\n            return\
    \ \"NO\";\n    }\n    return \"YES\";\n}", "{\n    long start = max(interval1[0],\
    \ interval2[0]);\n    long end = min(interval1[1], interval2[1]);\n    long length\
    \ = end - start;\n    if (length <= 0)\n        return \"NO\";\n    if (length\
    \ == 1)\n        return \"NO\";\n    if (length == 2)\n        return \"YES\"\
    ;\n    for (long i = 2; i < length; i++)\n    {\n        if (length % i == 0)\n\
    \            return \"NO\";\n    }\n    return \"YES\";\n}", "{\n    long start\
    \ = max(interval1[0], interval2[0]);\n    long end = min(interval1[1], interval2[1]);\n\
    \    if (start > end)\n        return \"NO\";\n    long len = end - start + 1;\n\
    \    if (len == 1)\n        return \"NO\";\n    if (len == 2)\n        return\
    \ \"YES\";\n    for (long i = 2; i <= sqrt(len); i++)\n    {\n        if (len\
    \ % i == 0)\n            return \"NO\";\n    }\n    return \"YES\";\n}", "{\n\
    \    long start = max(interval1[0], interval2[0]);\n    long end = min(interval1[1],\
    \ interval2[1]);\n    long length = end - start;\n    if (length < 0)\n      \
    \  return \"NO\";\n    return isPrime(length) ? \"YES\" : \"NO\";\n}"]
stop_tokens:
- "\n\n"
- "\nvoid"
- "\nbool"
- "\nint"

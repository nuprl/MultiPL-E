name: HumanEval_98_count_upper
language: d
prompt: "import std.math;\n/*\n\n    Given a string s, count the number of uppercase\
  \ vowels in even indices.\n    \n    For example:\n    >>> count_upper(\"aBCdEf\"\
  )\n    1L\n    >>> count_upper(\"abcdefg\")\n    0L\n    >>> count_upper(\"dBBE\"\
  )\n    0L\n    \n*/\nlong count_upper(string s) \n"
tests: "unittest\n{\n    alias candidate = count_upper;\n\n    assert(candidate(\"\
  aBCdEf\") == 1L);\n    assert(candidate(\"abcdefg\") == 0L);\n    assert(candidate(\"\
  dBBE\") == 0L);\n    assert(candidate(\"B\") == 0L);\n    assert(candidate(\"U\"\
  ) == 1L);\n    assert(candidate(\"\") == 0L);\n    assert(candidate(\"EEEE\") ==\
  \ 2L);\n}\nvoid main(){}"
completions: ["{\n    long count = 0;\n    foreach(immutable i, immutable c; s)\n\
    \    {\n        if(i % 2 == 0 && c >= 'A' && c <= 'Z')\n            count++;\n\
    \    }\n    return count;\n}", "{\n    long count = 0;\n    foreach(immutable\
    \ i, immutable c; s)\n    {\n        if(i % 2 == 0 && c >= 'A' && c <= 'Z')\n\
    \            count++;\n    }\n    return count;\n}", "{\n    long count = 0;\n\
    \    foreach(i, c; s)\n    {\n        if(i % 2 == 0 && c >= 'A' && c <= 'Z')\n\
    \            count++;\n    }\n    return count;\n}", "{\n    long count = 0;\n\
    \    foreach(i, c; s)\n    {\n        if(i % 2 == 0 && c == 'A' || c == 'E' ||\
    \ c == 'I' || c == 'O' || c == 'U')\n        {\n            count++;\n       \
    \ }\n    }\n    return count;\n}", "{\n    long count = 0;\n    foreach(i, c;\
    \ s)\n    {\n        if(i % 2 == 0 && isupper(c))\n            count++;\n    }\n\
    \    return count;\n}", "{\n    long count = 0;\n    foreach(i, c; s)\n    {\n\
    \        if(i % 2 == 0 && c >= 'A' && c <= 'Z')\n            count++;\n    }\n\
    \    return count;\n}", "{\n    long count = 0;\n    foreach(i, c; s) \n    {\n\
    \        if(i % 2 == 0 && c >= 'A' && c <= 'Z') \n        {\n            count++;\n\
    \        }\n    }\n    return count;\n}", "{\n    long count = 0;\n    foreach(i,\
    \ c; s)\n    {\n        if(i % 2 == 0 && c >= 'A' && c <= 'Z')\n            count++;\n\
    \    }\n    return count;\n}", "{\n    long count = 0;\n    foreach(i, c; s)\n\
    \    {\n        if(i % 2 == 0 && isupper(c))\n            count++;\n    }\n  \
    \  return count;\n}", "{\n    long count = 0;\n    foreach(i, c; s)\n    {\n \
    \       if(i % 2 == 0 && isupper(c))\n            count++;\n    }\n    return\
    \ count;\n}", "{\n    long count = 0;\n    foreach(immutable i, immutable c; s)\n\
    \    {\n        if(i % 2 == 0 && c >= 'A' && c <= 'Z')\n            count++;\n\
    \    }\n    return count;\n}", "{\n    long count = 0;\n    foreach(i, c; s)\n\
    \    {\n        if(i % 2 == 0 && c == 'A' || c == 'E' || c == 'I' || c == 'O'\
    \ || c == 'U')\n        {\n            count++;\n        }\n    }\n    return\
    \ count;\n}", "{\n    long count = 0;\n    foreach(i, c; s)\n    {\n        if(i\
    \ % 2 == 0 && isupper(c))\n            count++;\n    }\n    return count;\n}",
  "{\n    long count = 0;\n    foreach(i, c; s)\n    {\n        if(i % 2 == 0 && isUpper(c))\n\
    \            count++;\n    }\n    return count;\n}", "{\n    long count = 0;\n\
    \    foreach(i, c; s)\n    {\n        if(i % 2 == 0 && isupper(c))\n         \
    \   count++;\n    }\n    return count;\n}", "{\n    long count = 0;\n    foreach(immutable\
    \ i, immutable c; s)\n    {\n        if(i % 2 == 0 && c in \"AEIOU\")\n      \
    \      count++;\n    }\n    return count;\n}", "{\n    long count = 0;\n    foreach(immutable\
    \ i, immutable c; s)\n    {\n        if(i % 2 == 0 && isUpper(c))\n          \
    \  count++;\n    }\n    return count;\n}", "{\n    long count = 0;\n    for (size_t\
    \ i = 0; i < s.length; i++)\n    {\n        if (i % 2 == 0 && s[i] == toupper(s[i]))\n\
    \        {\n            count++;\n        }\n    }\n    return count;\n}", "{\n\
    \    long count = 0;\n    foreach(i, c; s)\n    {\n        if(i % 2 == 0 && c\
    \ in ['A', 'E', 'I', 'O', 'U'])\n            count++;\n    }\n    return count;\n\
    }", "{\n    long count = 0;\n    foreach(i, c; s)\n    {\n        if(i % 2 ==\
    \ 0 && isUpper(c))\n            count++;\n    }\n    return count;\n}"]
stop_tokens:
- "\n\n"
- "\nvoid"
- "\nbool"
- "\nint"

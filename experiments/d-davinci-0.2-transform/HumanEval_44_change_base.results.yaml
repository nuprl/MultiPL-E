language: d
name: HumanEval_44_change_base
results:
- exit_code: 1
  program: "import std.typecons;\nimport std.math;\n/*\nChange numerical base of input\
    \ number x to base.\n    return string representation after the conversion.\n\
    \    base numbers are less than 10.\n    >>> change_base(8L, 3L)\n    \"22\"\n\
    \    >>> change_base(8L, 2L)\n    \"1000\"\n    >>> change_base(7L, 2L)\n    \"\
    111\"\n    \n*/\nstring change_base(long x, long base) \n{\n    string result\
    \ = \"\";\n    while (x > 0) \n    {\n        result = to!string(x % base) ~ result;\n\
    \        x /= base;\n    }\n    return result;\n}\nunittest\n{\n    alias candidate\
    \ = change_base;\n\n    assert(candidate(8L, 3L) == \"22\");\n    assert(candidate(9L,\
    \ 3L) == \"100\");\n    assert(candidate(234L, 2L) == \"11101010\");\n    assert(candidate(16L,\
    \ 2L) == \"10000\");\n    assert(candidate(8L, 2L) == \"1000\");\n    assert(candidate(7L,\
    \ 2L) == \"111\");\n    assert(candidate(2L, 3L) == \"2\");\n    assert(candidate(3L,\
    \ 4L) == \"3\");\n    assert(candidate(4L, 5L) == \"4\");\n    assert(candidate(5L,\
    \ 6L) == \"5\");\n    assert(candidate(6L, 7L) == \"6\");\n    assert(candidate(7L,\
    \ 8L) == \"7\");\n}\nvoid main(){}"
  status: SyntaxError
  stderr: 'b''/tmp/tmp0v33zq1i.d(20): Error: template instance `to!string` template
    `to` is not defined, did you mean No?\nFailed: ["dmd", "-unittest", "-v", "-o-",
    "/tmp/tmp0v33zq1i.d", "-I/tmp"]\n'''
  stdout: b''
- exit_code: 1
  program: "import std.typecons;\nimport std.math;\n/*\nChange numerical base of input\
    \ number x to base.\n    return string representation after the conversion.\n\
    \    base numbers are less than 10.\n    >>> change_base(8L, 3L)\n    \"22\"\n\
    \    >>> change_base(8L, 2L)\n    \"1000\"\n    >>> change_base(7L, 2L)\n    \"\
    111\"\n    \n*/\nstring change_base(long x, long base) \n{\n    string result\
    \ = \"\";\n    while (x != 0) \n    {\n        result = to!string(x % base) ~\
    \ result;\n        x /= base;\n    }\n    return result;\n}\nunittest\n{\n   \
    \ alias candidate = change_base;\n\n    assert(candidate(8L, 3L) == \"22\");\n\
    \    assert(candidate(9L, 3L) == \"100\");\n    assert(candidate(234L, 2L) ==\
    \ \"11101010\");\n    assert(candidate(16L, 2L) == \"10000\");\n    assert(candidate(8L,\
    \ 2L) == \"1000\");\n    assert(candidate(7L, 2L) == \"111\");\n    assert(candidate(2L,\
    \ 3L) == \"2\");\n    assert(candidate(3L, 4L) == \"3\");\n    assert(candidate(4L,\
    \ 5L) == \"4\");\n    assert(candidate(5L, 6L) == \"5\");\n    assert(candidate(6L,\
    \ 7L) == \"6\");\n    assert(candidate(7L, 8L) == \"7\");\n}\nvoid main(){}"
  status: SyntaxError
  stderr: 'b''/tmp/tmpcfc837eb.d(20): Error: template instance `to!string` template
    `to` is not defined, did you mean No?\nFailed: ["dmd", "-unittest", "-v", "-o-",
    "/tmp/tmpcfc837eb.d", "-I/tmp"]\n'''
  stdout: b''
- exit_code: 1
  program: "import std.typecons;\nimport std.math;\n/*\nChange numerical base of input\
    \ number x to base.\n    return string representation after the conversion.\n\
    \    base numbers are less than 10.\n    >>> change_base(8L, 3L)\n    \"22\"\n\
    \    >>> change_base(8L, 2L)\n    \"1000\"\n    >>> change_base(7L, 2L)\n    \"\
    111\"\n    \n*/\nstring change_base(long x, long base) \n{\n    string result\
    \ = \"\";\n    if (x == 0) \n    {\n        return \"0\";\n    }\n    while (x\
    \ != 0) \n    {\n        result = to!string(x % base) ~ result;\n        x /=\
    \ base;\n    }\n    return result;\n}\nunittest\n{\n    alias candidate = change_base;\n\
    \n    assert(candidate(8L, 3L) == \"22\");\n    assert(candidate(9L, 3L) == \"\
    100\");\n    assert(candidate(234L, 2L) == \"11101010\");\n    assert(candidate(16L,\
    \ 2L) == \"10000\");\n    assert(candidate(8L, 2L) == \"1000\");\n    assert(candidate(7L,\
    \ 2L) == \"111\");\n    assert(candidate(2L, 3L) == \"2\");\n    assert(candidate(3L,\
    \ 4L) == \"3\");\n    assert(candidate(4L, 5L) == \"4\");\n    assert(candidate(5L,\
    \ 6L) == \"5\");\n    assert(candidate(6L, 7L) == \"6\");\n    assert(candidate(7L,\
    \ 8L) == \"7\");\n}\nvoid main(){}"
  status: SyntaxError
  stderr: 'b''/tmp/tmpwhydf2c8.d(24): Error: template instance `to!string` template
    `to` is not defined, did you mean No?\nFailed: ["dmd", "-unittest", "-v", "-o-",
    "/tmp/tmpwhydf2c8.d", "-I/tmp"]\n'''
  stdout: b''
- exit_code: 1
  program: "import std.typecons;\nimport std.math;\n/*\nChange numerical base of input\
    \ number x to base.\n    return string representation after the conversion.\n\
    \    base numbers are less than 10.\n    >>> change_base(8L, 3L)\n    \"22\"\n\
    \    >>> change_base(8L, 2L)\n    \"1000\"\n    >>> change_base(7L, 2L)\n    \"\
    111\"\n    \n*/\nstring change_base(long x, long base) \n{\n    string result\
    \ = \"\";\n    while (x > 0) {\n        result = to!string(x % base) ~ result;\n\
    \        x /= base;\n    }\n    return result;\n}\n/*\n    return the number of\
    \ digits of x in base.\n    >>> num_digits(8L, 3L)\n    2\n    >>> num_digits(8L,\
    \ 2L)\n    4\n    >>> num_digits(7L, 2L)\n    3\n*/\nlong num_digits(long x, long\
    \ base) \n{\n    long result = 0;\n    while (x > 0) {\n        result++;\n  \
    \      x /= base;\n    }\n    return result;\n}\n/*\n    return the number of\
    \ digits of x in base.\n    >>> num_digits(8L, 3L)\n    2\n    >>> num_digits(8L,\
    \ 2L)\n    4\n    >>> num_digits(7L, 2L)\n    3\n*/\nlong num_digits(long x, long\
    \ base) \n{\n    long result = 0;\n    while (x > 0) {\n        result++;\n  \
    \      x /= base;\n    }\n    return result;\n}\n/*\n    return the number of\
    \ digits of x in base.\n    >>> num_digits(8L, 3L)\n    2\n    >>> num_digits(8L,\
    \ 2L)\n    4\n    >>> num_digits(7L, 2L)\n    3\n*/\nlong num_digits(long x, long\
    \ base) \n{\n    long result = 0;\n    while (x > 0) {\n        result++;\n  \
    \      x /= base;\n    }\n    return result;\n}\n/*\n    return the number of\
    \ digits of x in base.\n    >>> num_digits(8L, 3L)\n    2\n    >>> num_digits(8L,\
    \ 2L)\n    4\n    >>> num_digits(7L, 2L)\n    3\n*/\nlong num_digits(long x, long\
    \ base) \n{\n    long result = 0;\n    while (x > 0) {\n        result\nunittest\n\
    {\n    alias candidate = change_base;\n\n    assert(candidate(8L, 3L) == \"22\"\
    );\n    assert(candidate(9L, 3L) == \"100\");\n    assert(candidate(234L, 2L)\
    \ == \"11101010\");\n    assert(candidate(16L, 2L) == \"10000\");\n    assert(candidate(8L,\
    \ 2L) == \"1000\");\n    assert(candidate(7L, 2L) == \"111\");\n    assert(candidate(2L,\
    \ 3L) == \"2\");\n    assert(candidate(3L, 4L) == \"3\");\n    assert(candidate(4L,\
    \ 5L) == \"4\");\n    assert(candidate(5L, 6L) == \"5\");\n    assert(candidate(6L,\
    \ 7L) == \"6\");\n    assert(candidate(7L, 8L) == \"7\");\n}\nvoid main(){}"
  status: SyntaxError
  stderr: 'b''/tmp/tmpox025295.d(92): Error: found `unittest` when expecting `;` following
    statement\n/tmp/tmpox025295.d(109): Error: found `End of File` when expecting
    `}` following compound statement\n/tmp/tmpox025295.d(109): Error: found `End of
    File` when expecting `}` following compound statement\nFailed: ["dmd", "-unittest",
    "-v", "-o-", "/tmp/tmpox025295.d", "-I/tmp"]\n'''
  stdout: b''
- exit_code: 1
  program: "import std.typecons;\nimport std.math;\n/*\nChange numerical base of input\
    \ number x to base.\n    return string representation after the conversion.\n\
    \    base numbers are less than 10.\n    >>> change_base(8L, 3L)\n    \"22\"\n\
    \    >>> change_base(8L, 2L)\n    \"1000\"\n    >>> change_base(7L, 2L)\n    \"\
    111\"\n    \n*/\nstring change_base(long x, long base) \n{\n    string result;\n\
    \    while (x != 0) \n    {\n        result ~= to!string(x % base);\n        x\
    \ /= base;\n    }\n    return result.reverse;\n}\n/*\n    return true if the number\
    \ is palindrome.\n    >>> is_palindrome(8L)\n    true\n    >>> is_palindrome(7L)\n\
    \    true\n    >>> is_palindrome(11L)\n    true\n    >>> is_palindrome(12L)\n\
    \    false\n*/\nunittest\n{\n    alias candidate = change_base;\n\n    assert(candidate(8L,\
    \ 3L) == \"22\");\n    assert(candidate(9L, 3L) == \"100\");\n    assert(candidate(234L,\
    \ 2L) == \"11101010\");\n    assert(candidate(16L, 2L) == \"10000\");\n    assert(candidate(8L,\
    \ 2L) == \"1000\");\n    assert(candidate(7L, 2L) == \"111\");\n    assert(candidate(2L,\
    \ 3L) == \"2\");\n    assert(candidate(3L, 4L) == \"3\");\n    assert(candidate(4L,\
    \ 5L) == \"4\");\n    assert(candidate(5L, 6L) == \"5\");\n    assert(candidate(6L,\
    \ 7L) == \"6\");\n    assert(candidate(7L, 8L) == \"7\");\n}\nvoid main(){}"
  status: SyntaxError
  stderr: 'b''/tmp/tmphcz6vk7r.d(20): Error: template instance `to!string` template
    `to` is not defined, did you mean No?\n/tmp/tmphcz6vk7r.d(23): Error: template
    `std.typecons.reverse` cannot deduce function from argument types `!()(string)`,
    candidates are:\n/home/zi.ya/spack/opt/spack/linux-centos7-haswell/gcc-4.8.5/dmd-2.081.1-uf6xyx53fosvucuy7fkpiod2bnffx7of/linux/bin64/../../src/phobos/std/typecons.d(1486):        `std.typecons.reverse(T)(T
    t) if (isTuple!T)`\nFailed: ["dmd", "-unittest", "-v", "-o-", "/tmp/tmphcz6vk7r.d",
    "-I/tmp"]\n'''
  stdout: b''
- exit_code: 1
  program: "import std.typecons;\nimport std.math;\n/*\nChange numerical base of input\
    \ number x to base.\n    return string representation after the conversion.\n\
    \    base numbers are less than 10.\n    >>> change_base(8L, 3L)\n    \"22\"\n\
    \    >>> change_base(8L, 2L)\n    \"1000\"\n    >>> change_base(7L, 2L)\n    \"\
    111\"\n    \n*/\nstring change_base(long x, long base) \n{\n    string res = \"\
    \";\n    while (x != 0) \n    {\n        res = to!string(x % base) ~ res;\n  \
    \      x /= base;\n    }\n    return res;\n}\n/*\n    return the number of 1s\
    \ in the binary representation of x.\n    >>> count_ones(8L)\n    1\n    >>> count_ones(7L)\n\
    \    3\n    >>> count_ones(0L)\n    0\n*/\nlong count_ones(long x) \n{\n    long\
    \ res = 0;\n    while (x != 0) \n    {\n        res += x % 2;\n        x /= 2;\n\
    \    }\n    return res;\n}\n/*\n    return the number of 1s in the binary representation\
    \ of x.\n    >>> count_ones(8L)\n    1\n    >>> count_ones(7L)\n    3\n    >>>\
    \ count_ones(0L)\n    0\n*/\nlong count_ones_2(long x) \n{\n    long res = 0;\n\
    \    while (x != 0) \n    {\n        res += x & 1;\n        x >>= 1;\n    }\n\
    \    return res;\n}\n/*\n    return the number of 1s in the binary representation\
    \ of x.\n    >>> count_ones(8L)\n    1\n    >>> count_ones(7L)\n    3\n    >>>\
    \ count_ones(0L)\n    0\n*/\nlong count_ones_3(long x) \n{\n    long res = 0;\n\
    \    while (x != 0) \n    {\n        x &= x - 1;\n        res++;\n    }\n    return\
    \ res;\n}\n/*\n    return the number of 1s in the binary representation of x.\n\
    \    >>> count_ones(8L)\n    1\n    >>> count_ones(7L)\n    3\n    >>> count_ones(0L)\n\
    \    0\n*/\nlong count_ones_4(long x) \n{\n    long res = 0;\n    while (x !=\
    \ 0) \n    {\n        res += x % 2;\n        x /= 2;\n    }\n    return res;\n\
    \nunittest\n{\n    alias candidate = change_base;\n\n    assert(candidate(8L,\
    \ 3L) == \"22\");\n    assert(candidate(9L, 3L) == \"100\");\n    assert(candidate(234L,\
    \ 2L) == \"11101010\");\n    assert(candidate(16L, 2L) == \"10000\");\n    assert(candidate(8L,\
    \ 2L) == \"1000\");\n    assert(candidate(7L, 2L) == \"111\");\n    assert(candidate(2L,\
    \ 3L) == \"2\");\n    assert(candidate(3L, 4L) == \"3\");\n    assert(candidate(4L,\
    \ 5L) == \"4\");\n    assert(candidate(5L, 6L) == \"5\");\n    assert(candidate(6L,\
    \ 7L) == \"6\");\n    assert(candidate(7L, 8L) == \"7\");\n}\nvoid main(){}"
  status: SyntaxError
  stderr: 'b''/tmp/tmpbj_wwne3.d(101): Error: found `unittest` instead of statement\nFailed:
    ["dmd", "-unittest", "-v", "-o-", "/tmp/tmpbj_wwne3.d", "-I/tmp"]\n'''
  stdout: b''
- exit_code: 1
  program: "import std.typecons;\nimport std.math;\n/*\nChange numerical base of input\
    \ number x to base.\n    return string representation after the conversion.\n\
    \    base numbers are less than 10.\n    >>> change_base(8L, 3L)\n    \"22\"\n\
    \    >>> change_base(8L, 2L)\n    \"1000\"\n    >>> change_base(7L, 2L)\n    \"\
    111\"\n    \n*/\nstring change_base(long x, long base) \n{\n    string result\
    \ = \"\";\n    while (x > 0) {\n        result = to!string(x % base) ~ result;\n\
    \        x /= base;\n    }\n    return result;\n}\nunittest\n{\n    alias candidate\
    \ = change_base;\n\n    assert(candidate(8L, 3L) == \"22\");\n    assert(candidate(9L,\
    \ 3L) == \"100\");\n    assert(candidate(234L, 2L) == \"11101010\");\n    assert(candidate(16L,\
    \ 2L) == \"10000\");\n    assert(candidate(8L, 2L) == \"1000\");\n    assert(candidate(7L,\
    \ 2L) == \"111\");\n    assert(candidate(2L, 3L) == \"2\");\n    assert(candidate(3L,\
    \ 4L) == \"3\");\n    assert(candidate(4L, 5L) == \"4\");\n    assert(candidate(5L,\
    \ 6L) == \"5\");\n    assert(candidate(6L, 7L) == \"6\");\n    assert(candidate(7L,\
    \ 8L) == \"7\");\n}\nvoid main(){}"
  status: SyntaxError
  stderr: 'b''/tmp/tmp5qcj7sl2.d(19): Error: template instance `to!string` template
    `to` is not defined, did you mean No?\nFailed: ["dmd", "-unittest", "-v", "-o-",
    "/tmp/tmp5qcj7sl2.d", "-I/tmp"]\n'''
  stdout: b''
- exit_code: 1
  program: "import std.typecons;\nimport std.math;\n/*\nChange numerical base of input\
    \ number x to base.\n    return string representation after the conversion.\n\
    \    base numbers are less than 10.\n    >>> change_base(8L, 3L)\n    \"22\"\n\
    \    >>> change_base(8L, 2L)\n    \"1000\"\n    >>> change_base(7L, 2L)\n    \"\
    111\"\n    \n*/\nstring change_base(long x, long base) \n{\n    string result\
    \ = \"\";\n    while (x > 0) \n    {\n        result = to!string(x % base) ~ result;\n\
    \        x /= base;\n    }\n    return result;\n}\nunittest\n{\n    alias candidate\
    \ = change_base;\n\n    assert(candidate(8L, 3L) == \"22\");\n    assert(candidate(9L,\
    \ 3L) == \"100\");\n    assert(candidate(234L, 2L) == \"11101010\");\n    assert(candidate(16L,\
    \ 2L) == \"10000\");\n    assert(candidate(8L, 2L) == \"1000\");\n    assert(candidate(7L,\
    \ 2L) == \"111\");\n    assert(candidate(2L, 3L) == \"2\");\n    assert(candidate(3L,\
    \ 4L) == \"3\");\n    assert(candidate(4L, 5L) == \"4\");\n    assert(candidate(5L,\
    \ 6L) == \"5\");\n    assert(candidate(6L, 7L) == \"6\");\n    assert(candidate(7L,\
    \ 8L) == \"7\");\n}\nvoid main(){}"
  status: SyntaxError
  stderr: 'b''/tmp/tmp0v33zq1i.d(20): Error: template instance `to!string` template
    `to` is not defined, did you mean No?\nFailed: ["dmd", "-unittest", "-v", "-o-",
    "/tmp/tmp0v33zq1i.d", "-I/tmp"]\n'''
  stdout: b''
- exit_code: 1
  program: "import std.typecons;\nimport std.math;\n/*\nChange numerical base of input\
    \ number x to base.\n    return string representation after the conversion.\n\
    \    base numbers are less than 10.\n    >>> change_base(8L, 3L)\n    \"22\"\n\
    \    >>> change_base(8L, 2L)\n    \"1000\"\n    >>> change_base(7L, 2L)\n    \"\
    111\"\n    \n*/\nstring change_base(long x, long base) \n{\n    string result\
    \ = \"\";\n    while (x != 0) \n    {\n        result = to!string(x % base) ~\
    \ result;\n        x /= base;\n    }\n    return result;\n}\nunittest\n{\n   \
    \ alias candidate = change_base;\n\n    assert(candidate(8L, 3L) == \"22\");\n\
    \    assert(candidate(9L, 3L) == \"100\");\n    assert(candidate(234L, 2L) ==\
    \ \"11101010\");\n    assert(candidate(16L, 2L) == \"10000\");\n    assert(candidate(8L,\
    \ 2L) == \"1000\");\n    assert(candidate(7L, 2L) == \"111\");\n    assert(candidate(2L,\
    \ 3L) == \"2\");\n    assert(candidate(3L, 4L) == \"3\");\n    assert(candidate(4L,\
    \ 5L) == \"4\");\n    assert(candidate(5L, 6L) == \"5\");\n    assert(candidate(6L,\
    \ 7L) == \"6\");\n    assert(candidate(7L, 8L) == \"7\");\n}\nvoid main(){}"
  status: SyntaxError
  stderr: 'b''/tmp/tmpcfc837eb.d(20): Error: template instance `to!string` template
    `to` is not defined, did you mean No?\nFailed: ["dmd", "-unittest", "-v", "-o-",
    "/tmp/tmpcfc837eb.d", "-I/tmp"]\n'''
  stdout: b''
- exit_code: 1
  program: "import std.typecons;\nimport std.math;\n/*\nChange numerical base of input\
    \ number x to base.\n    return string representation after the conversion.\n\
    \    base numbers are less than 10.\n    >>> change_base(8L, 3L)\n    \"22\"\n\
    \    >>> change_base(8L, 2L)\n    \"1000\"\n    >>> change_base(7L, 2L)\n    \"\
    111\"\n    \n*/\nstring change_base(long x, long base) \n{\n    string result\
    \ = \"\";\n    while (x != 0) \n    {\n        result = to!string(x % base) ~\
    \ result;\n        x /= base;\n    }\n    return result;\n}\nunittest\n{\n   \
    \ alias candidate = change_base;\n\n    assert(candidate(8L, 3L) == \"22\");\n\
    \    assert(candidate(9L, 3L) == \"100\");\n    assert(candidate(234L, 2L) ==\
    \ \"11101010\");\n    assert(candidate(16L, 2L) == \"10000\");\n    assert(candidate(8L,\
    \ 2L) == \"1000\");\n    assert(candidate(7L, 2L) == \"111\");\n    assert(candidate(2L,\
    \ 3L) == \"2\");\n    assert(candidate(3L, 4L) == \"3\");\n    assert(candidate(4L,\
    \ 5L) == \"4\");\n    assert(candidate(5L, 6L) == \"5\");\n    assert(candidate(6L,\
    \ 7L) == \"6\");\n    assert(candidate(7L, 8L) == \"7\");\n}\nvoid main(){}"
  status: SyntaxError
  stderr: 'b''/tmp/tmpcfc837eb.d(20): Error: template instance `to!string` template
    `to` is not defined, did you mean No?\nFailed: ["dmd", "-unittest", "-v", "-o-",
    "/tmp/tmpcfc837eb.d", "-I/tmp"]\n'''
  stdout: b''
- exit_code: 1
  program: "import std.typecons;\nimport std.math;\n/*\nChange numerical base of input\
    \ number x to base.\n    return string representation after the conversion.\n\
    \    base numbers are less than 10.\n    >>> change_base(8L, 3L)\n    \"22\"\n\
    \    >>> change_base(8L, 2L)\n    \"1000\"\n    >>> change_base(7L, 2L)\n    \"\
    111\"\n    \n*/\nstring change_base(long x, long base) \n{\n    string result\
    \ = \"\";\n    while (x != 0) \n    {\n        result = (x % base).to!string +\
    \ result;\n        x /= base;\n    }\n    return result;\n}\n/*\n    return true\
    \ if x is a palindrome number.\n    >>> is_palindrome(8L)\n    true\n    >>> is_palindrome(7L)\n\
    \    true\n    >>> is_palindrome(11L)\n    true\n    >>> is_palindrome(12L)\n\
    \    false\n*/\nunittest\n{\n    alias candidate = change_base;\n\n    assert(candidate(8L,\
    \ 3L) == \"22\");\n    assert(candidate(9L, 3L) == \"100\");\n    assert(candidate(234L,\
    \ 2L) == \"11101010\");\n    assert(candidate(16L, 2L) == \"10000\");\n    assert(candidate(8L,\
    \ 2L) == \"1000\");\n    assert(candidate(7L, 2L) == \"111\");\n    assert(candidate(2L,\
    \ 3L) == \"2\");\n    assert(candidate(3L, 4L) == \"3\");\n    assert(candidate(4L,\
    \ 5L) == \"4\");\n    assert(candidate(5L, 6L) == \"5\");\n    assert(candidate(6L,\
    \ 7L) == \"6\");\n    assert(candidate(7L, 8L) == \"7\");\n}\nvoid main(){}"
  status: SyntaxError
  stderr: 'b''/tmp/tmp_6d7hfh6.d(20): Error: no property `to` for type `long`\nFailed:
    ["dmd", "-unittest", "-v", "-o-", "/tmp/tmp_6d7hfh6.d", "-I/tmp"]\n'''
  stdout: b''
- exit_code: 1
  program: "import std.typecons;\nimport std.math;\n/*\nChange numerical base of input\
    \ number x to base.\n    return string representation after the conversion.\n\
    \    base numbers are less than 10.\n    >>> change_base(8L, 3L)\n    \"22\"\n\
    \    >>> change_base(8L, 2L)\n    \"1000\"\n    >>> change_base(7L, 2L)\n    \"\
    111\"\n    \n*/\nstring change_base(long x, long base) \n{\n    string result\
    \ = \"\";\n    while (x > 0) \n    {\n        result = to!string(x % base) ~ result;\n\
    \        x /= base;\n    }\n    return result;\n}\nunittest\n{\n    alias candidate\
    \ = change_base;\n\n    assert(candidate(8L, 3L) == \"22\");\n    assert(candidate(9L,\
    \ 3L) == \"100\");\n    assert(candidate(234L, 2L) == \"11101010\");\n    assert(candidate(16L,\
    \ 2L) == \"10000\");\n    assert(candidate(8L, 2L) == \"1000\");\n    assert(candidate(7L,\
    \ 2L) == \"111\");\n    assert(candidate(2L, 3L) == \"2\");\n    assert(candidate(3L,\
    \ 4L) == \"3\");\n    assert(candidate(4L, 5L) == \"4\");\n    assert(candidate(5L,\
    \ 6L) == \"5\");\n    assert(candidate(6L, 7L) == \"6\");\n    assert(candidate(7L,\
    \ 8L) == \"7\");\n}\nvoid main(){}"
  status: SyntaxError
  stderr: 'b''/tmp/tmp0v33zq1i.d(20): Error: template instance `to!string` template
    `to` is not defined, did you mean No?\nFailed: ["dmd", "-unittest", "-v", "-o-",
    "/tmp/tmp0v33zq1i.d", "-I/tmp"]\n'''
  stdout: b''
- exit_code: 1
  program: "import std.typecons;\nimport std.math;\n/*\nChange numerical base of input\
    \ number x to base.\n    return string representation after the conversion.\n\
    \    base numbers are less than 10.\n    >>> change_base(8L, 3L)\n    \"22\"\n\
    \    >>> change_base(8L, 2L)\n    \"1000\"\n    >>> change_base(7L, 2L)\n    \"\
    111\"\n    \n*/\nstring change_base(long x, long base) \n{\n    string result\
    \ = \"\";\n    while (x != 0) {\n        result = to!string(x % base) ~ result;\n\
    \        x /= base;\n    }\n    return result;\n}\nunittest\n{\n    alias candidate\
    \ = change_base;\n\n    assert(candidate(8L, 3L) == \"22\");\n    assert(candidate(9L,\
    \ 3L) == \"100\");\n    assert(candidate(234L, 2L) == \"11101010\");\n    assert(candidate(16L,\
    \ 2L) == \"10000\");\n    assert(candidate(8L, 2L) == \"1000\");\n    assert(candidate(7L,\
    \ 2L) == \"111\");\n    assert(candidate(2L, 3L) == \"2\");\n    assert(candidate(3L,\
    \ 4L) == \"3\");\n    assert(candidate(4L, 5L) == \"4\");\n    assert(candidate(5L,\
    \ 6L) == \"5\");\n    assert(candidate(6L, 7L) == \"6\");\n    assert(candidate(7L,\
    \ 8L) == \"7\");\n}\nvoid main(){}"
  status: SyntaxError
  stderr: 'b''/tmp/tmphfflvuqp.d(19): Error: template instance `to!string` template
    `to` is not defined, did you mean No?\nFailed: ["dmd", "-unittest", "-v", "-o-",
    "/tmp/tmphfflvuqp.d", "-I/tmp"]\n'''
  stdout: b''
- exit_code: 1
  program: "import std.typecons;\nimport std.math;\n/*\nChange numerical base of input\
    \ number x to base.\n    return string representation after the conversion.\n\
    \    base numbers are less than 10.\n    >>> change_base(8L, 3L)\n    \"22\"\n\
    \    >>> change_base(8L, 2L)\n    \"1000\"\n    >>> change_base(7L, 2L)\n    \"\
    111\"\n    \n*/\nstring change_base(long x, long base) \n{\n    string result\
    \ = \"\";\n    while (x > 0) \n    {\n        result = to!string(x % base) ~ result;\n\
    \        x /= base;\n    }\n    return result;\n}\nunittest\n{\n    alias candidate\
    \ = change_base;\n\n    assert(candidate(8L, 3L) == \"22\");\n    assert(candidate(9L,\
    \ 3L) == \"100\");\n    assert(candidate(234L, 2L) == \"11101010\");\n    assert(candidate(16L,\
    \ 2L) == \"10000\");\n    assert(candidate(8L, 2L) == \"1000\");\n    assert(candidate(7L,\
    \ 2L) == \"111\");\n    assert(candidate(2L, 3L) == \"2\");\n    assert(candidate(3L,\
    \ 4L) == \"3\");\n    assert(candidate(4L, 5L) == \"4\");\n    assert(candidate(5L,\
    \ 6L) == \"5\");\n    assert(candidate(6L, 7L) == \"6\");\n    assert(candidate(7L,\
    \ 8L) == \"7\");\n}\nvoid main(){}"
  status: SyntaxError
  stderr: 'b''/tmp/tmp0v33zq1i.d(20): Error: template instance `to!string` template
    `to` is not defined, did you mean No?\nFailed: ["dmd", "-unittest", "-v", "-o-",
    "/tmp/tmp0v33zq1i.d", "-I/tmp"]\n'''
  stdout: b''
- exit_code: 1
  program: "import std.typecons;\nimport std.math;\n/*\nChange numerical base of input\
    \ number x to base.\n    return string representation after the conversion.\n\
    \    base numbers are less than 10.\n    >>> change_base(8L, 3L)\n    \"22\"\n\
    \    >>> change_base(8L, 2L)\n    \"1000\"\n    >>> change_base(7L, 2L)\n    \"\
    111\"\n    \n*/\nstring change_base(long x, long base) \n{\n    string result\
    \ = \"\";\n    while (x != 0) \n    {\n        result = (x % base).to!string +\
    \ result;\n        x /= base;\n    }\n    return result;\n}\nunittest\n{\n   \
    \ alias candidate = change_base;\n\n    assert(candidate(8L, 3L) == \"22\");\n\
    \    assert(candidate(9L, 3L) == \"100\");\n    assert(candidate(234L, 2L) ==\
    \ \"11101010\");\n    assert(candidate(16L, 2L) == \"10000\");\n    assert(candidate(8L,\
    \ 2L) == \"1000\");\n    assert(candidate(7L, 2L) == \"111\");\n    assert(candidate(2L,\
    \ 3L) == \"2\");\n    assert(candidate(3L, 4L) == \"3\");\n    assert(candidate(4L,\
    \ 5L) == \"4\");\n    assert(candidate(5L, 6L) == \"5\");\n    assert(candidate(6L,\
    \ 7L) == \"6\");\n    assert(candidate(7L, 8L) == \"7\");\n}\nvoid main(){}"
  status: SyntaxError
  stderr: 'b''/tmp/tmp2shy7kyh.d(20): Error: no property `to` for type `long`\nFailed:
    ["dmd", "-unittest", "-v", "-o-", "/tmp/tmp2shy7kyh.d", "-I/tmp"]\n'''
  stdout: b''
- exit_code: 1
  program: "import std.typecons;\nimport std.math;\n/*\nChange numerical base of input\
    \ number x to base.\n    return string representation after the conversion.\n\
    \    base numbers are less than 10.\n    >>> change_base(8L, 3L)\n    \"22\"\n\
    \    >>> change_base(8L, 2L)\n    \"1000\"\n    >>> change_base(7L, 2L)\n    \"\
    111\"\n    \n*/\nstring change_base(long x, long base) \n{\n    string result\
    \ = \"\";\n    while (x > 0) {\n        result = to!string(x % base) ~ result;\n\
    \        x /= base;\n    }\n    return result;\n}\nunittest\n{\n    alias candidate\
    \ = change_base;\n\n    assert(candidate(8L, 3L) == \"22\");\n    assert(candidate(9L,\
    \ 3L) == \"100\");\n    assert(candidate(234L, 2L) == \"11101010\");\n    assert(candidate(16L,\
    \ 2L) == \"10000\");\n    assert(candidate(8L, 2L) == \"1000\");\n    assert(candidate(7L,\
    \ 2L) == \"111\");\n    assert(candidate(2L, 3L) == \"2\");\n    assert(candidate(3L,\
    \ 4L) == \"3\");\n    assert(candidate(4L, 5L) == \"4\");\n    assert(candidate(5L,\
    \ 6L) == \"5\");\n    assert(candidate(6L, 7L) == \"6\");\n    assert(candidate(7L,\
    \ 8L) == \"7\");\n}\nvoid main(){}"
  status: SyntaxError
  stderr: 'b''/tmp/tmp5qcj7sl2.d(19): Error: template instance `to!string` template
    `to` is not defined, did you mean No?\nFailed: ["dmd", "-unittest", "-v", "-o-",
    "/tmp/tmp5qcj7sl2.d", "-I/tmp"]\n'''
  stdout: b''
- exit_code: 1
  program: "import std.typecons;\nimport std.math;\n/*\nChange numerical base of input\
    \ number x to base.\n    return string representation after the conversion.\n\
    \    base numbers are less than 10.\n    >>> change_base(8L, 3L)\n    \"22\"\n\
    \    >>> change_base(8L, 2L)\n    \"1000\"\n    >>> change_base(7L, 2L)\n    \"\
    111\"\n    \n*/\nstring change_base(long x, long base) \n{\n    string result\
    \ = \"\";\n    while (x > 0) \n    {\n        result = to!string(x % base) ~ result;\n\
    \        x /= base;\n    }\n    return result;\n}\nunittest\n{\n    alias candidate\
    \ = change_base;\n\n    assert(candidate(8L, 3L) == \"22\");\n    assert(candidate(9L,\
    \ 3L) == \"100\");\n    assert(candidate(234L, 2L) == \"11101010\");\n    assert(candidate(16L,\
    \ 2L) == \"10000\");\n    assert(candidate(8L, 2L) == \"1000\");\n    assert(candidate(7L,\
    \ 2L) == \"111\");\n    assert(candidate(2L, 3L) == \"2\");\n    assert(candidate(3L,\
    \ 4L) == \"3\");\n    assert(candidate(4L, 5L) == \"4\");\n    assert(candidate(5L,\
    \ 6L) == \"5\");\n    assert(candidate(6L, 7L) == \"6\");\n    assert(candidate(7L,\
    \ 8L) == \"7\");\n}\nvoid main(){}"
  status: SyntaxError
  stderr: 'b''/tmp/tmp0v33zq1i.d(20): Error: template instance `to!string` template
    `to` is not defined, did you mean No?\nFailed: ["dmd", "-unittest", "-v", "-o-",
    "/tmp/tmp0v33zq1i.d", "-I/tmp"]\n'''
  stdout: b''
- exit_code: 1
  program: "import std.typecons;\nimport std.math;\n/*\nChange numerical base of input\
    \ number x to base.\n    return string representation after the conversion.\n\
    \    base numbers are less than 10.\n    >>> change_base(8L, 3L)\n    \"22\"\n\
    \    >>> change_base(8L, 2L)\n    \"1000\"\n    >>> change_base(7L, 2L)\n    \"\
    111\"\n    \n*/\nstring change_base(long x, long base) \n{\n    string result\
    \ = \"\";\n    while (x > 0) {\n        result = to!string(x % base) ~ result;\n\
    \        x /= base;\n    }\n    return result;\n}\nunittest\n{\n    alias candidate\
    \ = change_base;\n\n    assert(candidate(8L, 3L) == \"22\");\n    assert(candidate(9L,\
    \ 3L) == \"100\");\n    assert(candidate(234L, 2L) == \"11101010\");\n    assert(candidate(16L,\
    \ 2L) == \"10000\");\n    assert(candidate(8L, 2L) == \"1000\");\n    assert(candidate(7L,\
    \ 2L) == \"111\");\n    assert(candidate(2L, 3L) == \"2\");\n    assert(candidate(3L,\
    \ 4L) == \"3\");\n    assert(candidate(4L, 5L) == \"4\");\n    assert(candidate(5L,\
    \ 6L) == \"5\");\n    assert(candidate(6L, 7L) == \"6\");\n    assert(candidate(7L,\
    \ 8L) == \"7\");\n}\nvoid main(){}"
  status: SyntaxError
  stderr: 'b''/tmp/tmp5qcj7sl2.d(19): Error: template instance `to!string` template
    `to` is not defined, did you mean No?\nFailed: ["dmd", "-unittest", "-v", "-o-",
    "/tmp/tmp5qcj7sl2.d", "-I/tmp"]\n'''
  stdout: b''
- exit_code: 1
  program: "import std.typecons;\nimport std.math;\n/*\nChange numerical base of input\
    \ number x to base.\n    return string representation after the conversion.\n\
    \    base numbers are less than 10.\n    >>> change_base(8L, 3L)\n    \"22\"\n\
    \    >>> change_base(8L, 2L)\n    \"1000\"\n    >>> change_base(7L, 2L)\n    \"\
    111\"\n    \n*/\nstring change_base(long x, long base) \n{\n    string result\
    \ = \"\";\n    while (x > 0) {\n        result = to!string(x % base) ~ result;\n\
    \        x /= base;\n    }\n    return result;\n}\n/*\nCheck if a number is palindrome.\n\
    \    return true if it is palindrome, otherwise false.\n    >>> is_palindrome(7L)\n\
    \    true\n    >>> is_palindrome(8L)\n    false\n    >>> is_palindrome(11L)\n\
    \    true\n    >>> is_palindrome(121L)\n    true\n    >>> is_palindrome(123L)\n\
    \    false\n    >>> is_palindrome(1221L)\n    true\n    >>> is_palindrome(1231L)\n\
    \    false\n*/\nunittest\n{\n    alias candidate = change_base;\n\n    assert(candidate(8L,\
    \ 3L) == \"22\");\n    assert(candidate(9L, 3L) == \"100\");\n    assert(candidate(234L,\
    \ 2L) == \"11101010\");\n    assert(candidate(16L, 2L) == \"10000\");\n    assert(candidate(8L,\
    \ 2L) == \"1000\");\n    assert(candidate(7L, 2L) == \"111\");\n    assert(candidate(2L,\
    \ 3L) == \"2\");\n    assert(candidate(3L, 4L) == \"3\");\n    assert(candidate(4L,\
    \ 5L) == \"4\");\n    assert(candidate(5L, 6L) == \"5\");\n    assert(candidate(6L,\
    \ 7L) == \"6\");\n    assert(candidate(7L, 8L) == \"7\");\n}\nvoid main(){}"
  status: SyntaxError
  stderr: 'b''/tmp/tmp88v_e0cn.d(19): Error: template instance `to!string` template
    `to` is not defined, did you mean No?\nFailed: ["dmd", "-unittest", "-v", "-o-",
    "/tmp/tmp88v_e0cn.d", "-I/tmp"]\n'''
  stdout: b''
- exit_code: 1
  program: "import std.typecons;\nimport std.math;\n/*\nChange numerical base of input\
    \ number x to base.\n    return string representation after the conversion.\n\
    \    base numbers are less than 10.\n    >>> change_base(8L, 3L)\n    \"22\"\n\
    \    >>> change_base(8L, 2L)\n    \"1000\"\n    >>> change_base(7L, 2L)\n    \"\
    111\"\n    \n*/\nstring change_base(long x, long base) \n{\n    string result;\n\
    \    while (x > 0) \n    {\n        result ~= (x % base).to!string;\n        x\
    \ /= base;\n    }\n    return result.reverse;\n}\nunittest\n{\n    alias candidate\
    \ = change_base;\n\n    assert(candidate(8L, 3L) == \"22\");\n    assert(candidate(9L,\
    \ 3L) == \"100\");\n    assert(candidate(234L, 2L) == \"11101010\");\n    assert(candidate(16L,\
    \ 2L) == \"10000\");\n    assert(candidate(8L, 2L) == \"1000\");\n    assert(candidate(7L,\
    \ 2L) == \"111\");\n    assert(candidate(2L, 3L) == \"2\");\n    assert(candidate(3L,\
    \ 4L) == \"3\");\n    assert(candidate(4L, 5L) == \"4\");\n    assert(candidate(5L,\
    \ 6L) == \"5\");\n    assert(candidate(6L, 7L) == \"6\");\n    assert(candidate(7L,\
    \ 8L) == \"7\");\n}\nvoid main(){}"
  status: SyntaxError
  stderr: 'b''/tmp/tmpyoco0yeh.d(20): Error: no property `to` for type `long`\n/tmp/tmpyoco0yeh.d(23):
    Error: template `std.typecons.reverse` cannot deduce function from argument types
    `!()(string)`, candidates are:\n/home/zi.ya/spack/opt/spack/linux-centos7-haswell/gcc-4.8.5/dmd-2.081.1-uf6xyx53fosvucuy7fkpiod2bnffx7of/linux/bin64/../../src/phobos/std/typecons.d(1486):        `std.typecons.reverse(T)(T
    t) if (isTuple!T)`\nFailed: ["dmd", "-unittest", "-v", "-o-", "/tmp/tmpyoco0yeh.d",
    "-I/tmp"]\n'''
  stdout: b''

name: HumanEval_83_starts_one_ends
language: d
prompt: "import std.typecons;\nimport std.math;\n/*\n\n    Given a positive integer\
  \ n, return the count of the numbers of n-digit\n    positive integers that start\
  \ or end with 1.\n    \n*/\nlong starts_one_ends(long n) \n"
tests: "unittest\n{\n    alias candidate = starts_one_ends;\n\n    assert(candidate(1L)\
  \ == 1L);\n    assert(candidate(2L) == 18L);\n    assert(candidate(3L) == 180L);\n\
  \    assert(candidate(4L) == 1800L);\n    assert(candidate(5L) == 18000L);\n}\n\
  void main(){}"
completions: ["{\n    long count = 0;\n    long start = 1;\n    long end = 1;\n  \
    \  long i = 0;\n    long j = 0;\n    long k = 0;\n    long l = 0;\n    long m\
    \ = 0;\n    long p = 0;\n    long q = 0;\n    long r = 0;\n    long s = 0;\n \
    \   long t = 0;\n    long u = 0;\n    long v = 0;\n    long w = 0;\n    long x\
    \ = 0;\n    long y = 0;\n    long z = 0;\n    long a = 0;\n    long b = 0;\n \
    \   long c = 0;\n    long d = 0;\n    long e = 0;\n    long f = 0;\n    long g\
    \ = 0;\n    long h = 0;\n    long ii = 0;\n    long jj = 0;\n    long kk = 0;\n\
    \    long ll = 0;\n    long mm = 0;\n    long pp = 0;\n    long qq = 0;\n    long\
    \ rr = 0;\n    long ss = 0;\n    long tt = 0;\n    long uu = 0;\n    long vv =\
    \ 0;\n    long ww = 0;\n    long xx = 0;\n    long yy = 0;\n    long zz = 0;\n\
    \    long aa = 0;\n    long bb = 0;\n    long cc = 0;\n    long dd = 0;\n    long\
    \ ee = 0;\n    long ff = 0;\n    long gg = 0;\n    long hh = 0;\n    long iii\
    \ = 0;\n    long jjj = 0;\n    long kkk = 0;\n    long lll = 0;\n    long mmm\
    \ = 0;\n    long ppp = 0;\n    long qqq = 0;\n    long rrr = 0;\n    long sss\
    \ = 0;\n    long ttt = 0;\n    long uuu = 0;\n    long vvv = 0;\n    long www\
    \ = 0;\n    long xxx = 0;\n    long yyy = 0;\n    long zzz = 0;\n    long aaaa\
    \ = 0;\n    long b", "{\n    long result = 0;\n    long start = 1;\n    long end\
    \ = 1;\n    for (long i = 0; i < n; i++) {\n        start *= 10;\n        end\
    \ *= 10;\n    }\n    end -= 1;\n    for (long i = start; i <= end; i++) {\n  \
    \      if (i % 10 == 1 || i / 10 == 1) {\n            result++;\n        }\n \
    \   }\n    return result;\n}", "{\n    long res = 0;\n    for (long i = 1; i <=\
    \ n; i++) \n    {\n        res += pow(10, i - 1);\n    }\n    return res;\n}",
  "{\n    long result = 0;\n    long start = 1;\n    long end = 1;\n    for (long\
    \ i = 1; i < n; i++) {\n        start *= 10;\n        end *= 10;\n    }\n    end\
    \ += 1;\n    result = end - start;\n    return result;\n}", "{\n    long count\
    \ = 0;\n    long start = 1;\n    long end = 1;\n    long i = 0;\n    long j =\
    \ 0;\n    long k = 0;\n    long l = 0;\n    long m = 0;\n    long o = 0;\n   \
    \ long p = 0;\n    long q = 0;\n    long r = 0;\n    long s = 0;\n    long t =\
    \ 0;\n    long u = 0;\n    long v = 0;\n    long w = 0;\n    long x = 0;\n   \
    \ long y = 0;\n    long z = 0;\n    long aa = 0;\n    long ab = 0;\n    long ac\
    \ = 0;\n    long ad = 0;\n    long ae = 0;\n    long af = 0;\n    long ag = 0;\n\
    \    long ah = 0;\n    long ai = 0;\n    long aj = 0;\n    long ak = 0;\n    long\
    \ al = 0;\n    long am = 0;\n    long an = 0;\n    long ao = 0;\n    long ap =\
    \ 0;\n    long aq = 0;\n    long ar = 0;\n    long as = 0;\n    long at = 0;\n\
    \    long au = 0;\n    long av = 0;\n    long aw = 0;\n    long ax = 0;\n    long\
    \ ay = 0;\n    long az = 0;\n    long ba = 0;\n    long bb = 0;\n    long bc =\
    \ 0;\n    long bd = 0;\n    long be = 0;\n    long bf = 0;\n    long bg = 0;\n\
    \    long bh = 0;\n    long bi = 0;\n    long bj = 0;\n    long bk = 0;\n    long\
    \ bl = 0;\n    long bm = 0;\n    long bn = 0;\n    long bo = 0;\n    long bp =\
    \ 0;\n    long bq = 0;\n    long br = 0;\n    long bs = 0;\n    long bt = 0;\n\
    \    long bu = 0;\n    long bv = 0;\n    long bw = 0;\n    long bx =", "{\n  \
    \  long count = 0;\n    long start = 1;\n    long end = 1;\n    for (long i =\
    \ 0; i < n; i++) {\n        start *= 10;\n        end *= 10;\n    }\n    start\
    \ /= 10;\n    end -= 1;\n    count = end - start + 1;\n    return count;\n}",
  "{\n    if (n == 1)\n        return 2;\n    else\n        return pow(10, n - 1)\
    \ + pow(10, n - 2);\n}", "{\n    long result = 0;\n    if (n == 1)\n        return\
    \ 1;\n    else if (n == 2)\n        return 10;\n    else\n    {\n        result\
    \ = starts_one_ends(n - 1) + starts_one_ends(n - 2);\n        return result;\n\
    \    }\n}", "{\n    long count = 0;\n    long start = 1;\n    long end = 1;\n\
    \    for (long i = 0; i < n; i++) {\n        start *= 10;\n        end *= 10;\n\
    \    }\n    for (long i = start; i < end; i++) {\n        if (i % 10 == 1 || i\
    \ / 10 == 1) {\n            count++;\n        }\n    }\n    return count;\n}",
  "{\n    long result = 0;\n    if (n == 1)\n        return 1;\n    if (n == 2)\n\
    \        return 10;\n    if (n == 3)\n        return 100;\n    if (n == 4)\n \
    \       return 1000;\n    if (n == 5)\n        return 10000;\n    if (n == 6)\n\
    \        return 100000;\n    if (n == 7)\n        return 1000000;\n    if (n ==\
    \ 8)\n        return 10000000;\n    if (n == 9)\n        return 100000000;\n \
    \   if (n == 10)\n        return 1000000000;\n    if (n == 11)\n        return\
    \ 10000000000;\n    if (n == 12)\n        return 100000000000;\n    if (n == 13)\n\
    \        return 1000000000000;\n    if (n == 14)\n        return 10000000000000;\n\
    \    if (n == 15)\n        return 100000000000000;\n    if (n == 16)\n       \
    \ return 1000000000000000;\n    if (n == 17)\n        return 10000000000000000;\n\
    \    if (n == 18)\n        return 100000000000000000;\n    if (n == 19)\n    \
    \    return 1000000000000000000;\n    if (n == 20)\n        return 10000000000000000000;\n\
    \    if (n == 21)\n        return 100000000000000000000;\n    if (n == 22)\n \
    \       return 1000000000000000000000;\n    if (n == 23)\n        return 10000000000000000000000;\n\
    \    if (n == 24)\n        return 100000000000000000000000;\n    if (n == 25)\n\
    \        return 1000000000000000000000000;\n    if (n == 26)\n        return 10000000000000000000000000;\n\
    \    if (n == 27)\n        return 100000000000000000000000000;\n    if (n == 28)\n\
    \        return 1000000000000000000000000000;\n    if (n == 29)\n        return\
    \ 10000000000000000000000000000;\n    if (n == 30)\n        return 100000000000000000000000000000;\n\
    \    if (n == 31)\n        return 1000000000000000000000000000000;\n    if (n\
    \ == 32)\n        return 10000000000000000000000000000000;\n    if (n == 33)\n\
    \        return 100000000000000000000000000000000;\n    if (n == 34)\n       \
    \ return 1000000000000000000000000000000000;\n   ", "{\n    long count = 0;\n\
    \    long start = 1;\n    long end = 1;\n    for (long i = 1; i < n; i++) {\n\
    \        start *= 10;\n        end *= 10;\n    }\n    end += 1;\n    for (long\
    \ i = start; i < end; i++) {\n        if (i % 10 == 1) {\n            count++;\n\
    \        }\n    }\n    return count;\n}", "{\n    long count = 0;\n    long start\
    \ = 1;\n    long end = 1;\n    for (long i = 0; i < n; i++) {\n        start *=\
    \ 10;\n        end *= 10;\n    }\n    for (long i = start; i < end; i++) {\n \
    \       if (i % 10 == 1 || i / start == 1) {\n            count++;\n        }\n\
    \    }\n    return count;\n}", "{\n    long result = 0;\n    if (n == 1)\n   \
    \     return 1;\n    else if (n == 2)\n        return 10;\n    else\n    {\n \
    \       result = starts_one_ends(n - 1) + starts_one_ends(n - 2);\n        return\
    \ result;\n    }\n}", "{\n    long result = 0;\n    long max = pow(10, n);\n \
    \   for (long i = 1; i < max; i++) \n    {\n        if (i % 10 == 1) \n      \
    \  {\n            result++;\n        }\n        if (i / 10 == 1) \n        {\n\
    \            result++;\n        }\n    }\n    return result;\n}", "{\n    long\
    \ result = 0;\n    if (n == 1) \n    {\n        result = 1;\n    } \n    else\
    \ \n    {\n        long m = n / 2;\n        if (n % 2 == 0) \n        {\n    \
    \        result = pow(10, m - 1) * 9;\n        } \n        else \n        {\n\
    \            result = pow(10, m - 1) * 9 * 2;\n        }\n    }\n    return result;\n\
    }", "{\n    long count = 0;\n    long start = 1;\n    long end = 1;\n    long\
    \ i = 0;\n    long j = 0;\n    long k = 0;\n    long l = 0;\n    long m = 0;\n\
    \    long p = 0;\n    long q = 0;\n    long r = 0;\n    long s = 0;\n    long\
    \ t = 0;\n    long u = 0;\n    long v = 0;\n    long w = 0;\n    long x = 0;\n\
    \    long y = 0;\n    long z = 0;\n    long a = 0;\n    long b = 0;\n    long\
    \ c = 0;\n    long d = 0;\n    long e = 0;\n    long f = 0;\n    long g = 0;\n\
    \    long h = 0;\n    long ii = 0;\n    long jj = 0;\n    long kk = 0;\n    long\
    \ ll = 0;\n    long mm = 0;\n    long pp = 0;\n    long qq = 0;\n    long rr =\
    \ 0;\n    long ss = 0;\n    long tt = 0;\n    long uu = 0;\n    long vv = 0;\n\
    \    long ww = 0;\n    long xx = 0;\n    long yy = 0;\n    long zz = 0;\n    long\
    \ aa = 0;\n    long bb = 0;\n    long cc = 0;\n    long dd = 0;\n    long ee =\
    \ 0;\n    long ff = 0;\n    long gg = 0;\n    long hh = 0;\n    long iii = 0;\n\
    \    long jjj = 0;\n    long kkk = 0;\n    long lll = 0;\n    long mmm = 0;\n\
    \    long ppp = 0;\n    long qqq = 0;\n    long rrr = 0;\n    long sss = 0;\n\
    \    long ttt = 0;\n    long uuu = 0;\n    long vvv = 0;\n    long www = 0;\n\
    \    long xxx = 0;\n    long yyy = 0;\n    long zzz = 0;\n    long aaaa = 0;\n\
    \    long b", "{\n    long result = 0;\n    for (long i = 1; i <= n; i++) \n \
    \   {\n        result += pow(10, i - 1);\n    }\n    return result;\n}", "{\n\
    \    long result = 0;\n    long start = 1;\n    long end = 1;\n    for (long i\
    \ = 0; i < n; i++) {\n        start *= 10;\n        end *= 10;\n    }\n    start\
    \ /= 10;\n    end -= 1;\n    result = end - start + 1;\n    return result;\n}",
  "{\n    long count = 0;\n    long start = 1;\n    long end = 1;\n    for (long i\
    \ = 0; i < n; i++) {\n        start *= 10;\n        end *= 10;\n    }\n    for\
    \ (long i = start; i < end; i++) {\n        if (i % 10 == 1 || i / start == 1)\
    \ {\n            count++;\n        }\n    }\n    return count;\n}", "{\n    long\
    \ result = 0;\n    long start = 1;\n    long end = 1;\n    for (long i = 0; i\
    \ < n; i++) {\n        start *= 10;\n        end *= 10;\n    }\n    start /= 10;\n\
    \    end -= 1;\n    result = end - start + 1;\n    return result;\n}"]
stop_tokens:
- "\n\n"
- "\nvoid"
- "\nbool"
- "\nint"

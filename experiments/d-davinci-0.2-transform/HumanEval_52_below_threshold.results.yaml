language: d
name: HumanEval_52_below_threshold
results:
- exit_code: 1
  program: "import std.typecons;\nimport std.math;\n/*\nReturn True if all numbers\
    \ in the list l are below threshold t.\n    >>> below_threshold([1L, 2L, 4L, 10L],\
    \ 100L)\n    true\n    >>> below_threshold([1L, 20L, 4L, 10L], 5L)\n    false\n\
    \    \n*/\nbool below_threshold(long[] l, long t) \n{\n    foreach(long x; l)\n\
    \    {\n        if(x > t)\n            return false;\n    }\n    return true;\n\
    }\n/*\nReturn the number of elements in the list l that are below threshold t.\n\
    \    >>> count_below_threshold([1L, 2L, 4L, 10L], 100L)\n    4\n    >>> count_below_threshold([1L,\
    \ 20L, 4L, 10L], 5L)\n    2\n*/\nlong count_below_threshold(long[] l, long t)\
    \ \n{\n    long count = 0;\n    foreach(long x; l)\n    {\n        if(x < t)\n\
    \            count++;\n    }\n    return count;\n}\n/*\nReturn the number of elements\
    \ in the list l that are below threshold t.\n    >>> count_below_threshold([1L,\
    \ 2L, 4L, 10L], 100L)\n    4\n    >>> count_below_threshold([1L, 20L, 4L, 10L],\
    \ 5L)\n    2\n*/\nlong count_below_threshold_2(long[] l, long t) \n{\n    long\
    \ count = 0;\n    foreach(long x; l)\n    {\n        if(x < t)\n            count++;\n\
    \    }\n    return count;\n}\n/*\nReturn the number of elements in the list l\
    \ that are below threshold t.\n    >>> count_below_threshold([1L, 2L, 4L, 10L],\
    \ 100L)\n    4\n    >>> count_below_threshold([1L, 20L, 4L, 10L], 5L)\n    2\n\
    */\nlong count_below_threshold_3(long[] l, long t) \n{\n    long count = 0;\n\
    \    foreach(long x; l)\n    {\n        if(x < t)\n            count++;\n    }\n\
    \    return count;\n}\n/*\nReturn the number of elements in the list l that are\
    \ below threshold t.\n    >>> count_below_threshold([1L, 2L, 4L, 10L], 100L)\n\
    \    4\n    >>> count_below_threshold([1L,\nunittest\n{\n    alias candidate =\
    \ below_threshold;\n\n    assert(candidate([1L, 2L, 4L, 10L], 100L) == true);\n\
    \    assert(candidate([1L, 20L, 4L, 10L], 5L) == false);\n    assert(candidate([1L,\
    \ 20L, 4L, 10L], 21L) == true);\n    assert(candidate([1L, 20L, 4L, 10L], 22L)\
    \ == true);\n    assert(candidate([1L, 8L, 4L, 10L], 11L) == true);\n    assert(candidate([1L,\
    \ 8L, 4L, 10L], 10L) == false);\n}\nvoid main(){}"
  status: SyntaxError
  stderr: '/tmp/tmpzpa2_dq0.d(71): Error: unterminated /* */ comment

    Failed: ["dmd", "-unittest", "-v", "-o-", "/tmp/tmpzpa2_dq0.d", "-I/tmp"]

    '
  stdout: ''
  timestamp: 1660163089
- exit_code: 1
  program: "import std.typecons;\nimport std.math;\n/*\nReturn True if all numbers\
    \ in the list l are below threshold t.\n    >>> below_threshold([1L, 2L, 4L, 10L],\
    \ 100L)\n    true\n    >>> below_threshold([1L, 20L, 4L, 10L], 5L)\n    false\n\
    \    \n*/\nbool below_threshold(long[] l, long t) \n{\n    foreach(i; l) \n  \
    \  {\n        if(i > t) \n        {\n            return false;\n        }\n  \
    \  }\n    return true;\n}\nunittest\n{\n    alias candidate = below_threshold;\n\
    \n    assert(candidate([1L, 2L, 4L, 10L], 100L) == true);\n    assert(candidate([1L,\
    \ 20L, 4L, 10L], 5L) == false);\n    assert(candidate([1L, 20L, 4L, 10L], 21L)\
    \ == true);\n    assert(candidate([1L, 20L, 4L, 10L], 22L) == true);\n    assert(candidate([1L,\
    \ 8L, 4L, 10L], 11L) == true);\n    assert(candidate([1L, 8L, 4L, 10L], 10L) ==\
    \ false);\n}\nvoid main(){}"
  status: Exception
  stderr: 'core.exception.AssertError@/tmp/tmp8esff1s5.d(31): unittest failure

    ----------------

    ??:? _d_unittestp [0x4281dd]

    ??:? void tmp8esff1s5.__unittest_L22_C1() [0x427f4b]

    ??:? void tmp8esff1s5.__modtest() [0x427f60]

    ??:? int core.runtime.runModuleUnitTests().__foreachbody2(object.ModuleInfo*)
    [0x42c1c7]

    ??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)).__lambda2(immutable(object.ModuleInfo*))
    [0x42b05a]

    ??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))).__foreachbody2(ref
    rt.sections_elf_shared.DSO) [0x4301ed]

    ??:? int rt.sections_elf_shared.DSO.opApply(scope int delegate(ref rt.sections_elf_shared.DSO))
    [0x43069c]

    ??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*)))
    [0x430179]

    ??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)) [0x42b031]

    ??:? runModuleUnitTests [0x42bf9d]

    ??:? void rt.dmain2._d_run_main(int, char**, extern (C) int function(char[][])*).runAll()
    [0x42862c]

    ??:? void rt.dmain2._d_r'
  stdout: ''
  timestamp: 1660163090
- exit_code: 1
  program: "import std.typecons;\nimport std.math;\n/*\nReturn True if all numbers\
    \ in the list l are below threshold t.\n    >>> below_threshold([1L, 2L, 4L, 10L],\
    \ 100L)\n    true\n    >>> below_threshold([1L, 20L, 4L, 10L], 5L)\n    false\n\
    \    \n*/\nbool below_threshold(long[] l, long t) \n{\n    foreach(long i; l)\n\
    \    {\n        if(i > t)\n            return false;\n    }\n    return true;\n\
    }\nunittest\n{\n    alias candidate = below_threshold;\n\n    assert(candidate([1L,\
    \ 2L, 4L, 10L], 100L) == true);\n    assert(candidate([1L, 20L, 4L, 10L], 5L)\
    \ == false);\n    assert(candidate([1L, 20L, 4L, 10L], 21L) == true);\n    assert(candidate([1L,\
    \ 20L, 4L, 10L], 22L) == true);\n    assert(candidate([1L, 8L, 4L, 10L], 11L)\
    \ == true);\n    assert(candidate([1L, 8L, 4L, 10L], 10L) == false);\n}\nvoid\
    \ main(){}"
  status: Exception
  stderr: 'core.exception.AssertError@/tmp/tmpev0f60w0.d(29): unittest failure

    ----------------

    ??:? _d_unittestp [0x4281dd]

    ??:? void tmpev0f60w0.__unittest_L20_C1() [0x427f4b]

    ??:? void tmpev0f60w0.__modtest() [0x427f60]

    ??:? int core.runtime.runModuleUnitTests().__foreachbody2(object.ModuleInfo*)
    [0x42c1c7]

    ??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)).__lambda2(immutable(object.ModuleInfo*))
    [0x42b05a]

    ??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))).__foreachbody2(ref
    rt.sections_elf_shared.DSO) [0x4301ed]

    ??:? int rt.sections_elf_shared.DSO.opApply(scope int delegate(ref rt.sections_elf_shared.DSO))
    [0x43069c]

    ??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*)))
    [0x430179]

    ??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)) [0x42b031]

    ??:? runModuleUnitTests [0x42bf9d]

    ??:? void rt.dmain2._d_run_main(int, char**, extern (C) int function(char[][])*).runAll()
    [0x42862c]

    ??:? void rt.dmain2._d_r'
  stdout: ''
  timestamp: 1660163090
- exit_code: 1
  program: "import std.typecons;\nimport std.math;\n/*\nReturn True if all numbers\
    \ in the list l are below threshold t.\n    >>> below_threshold([1L, 2L, 4L, 10L],\
    \ 100L)\n    true\n    >>> below_threshold([1L, 20L, 4L, 10L], 5L)\n    false\n\
    \    \n*/\nbool below_threshold(long[] l, long t) \n{\n    foreach(i; l)\n   \
    \ {\n        if(i > t)\n            return false;\n    }\n    return true;\n}\n\
    unittest\n{\n    alias candidate = below_threshold;\n\n    assert(candidate([1L,\
    \ 2L, 4L, 10L], 100L) == true);\n    assert(candidate([1L, 20L, 4L, 10L], 5L)\
    \ == false);\n    assert(candidate([1L, 20L, 4L, 10L], 21L) == true);\n    assert(candidate([1L,\
    \ 20L, 4L, 10L], 22L) == true);\n    assert(candidate([1L, 8L, 4L, 10L], 11L)\
    \ == true);\n    assert(candidate([1L, 8L, 4L, 10L], 10L) == false);\n}\nvoid\
    \ main(){}"
  status: Exception
  stderr: 'core.exception.AssertError@/tmp/tmpplk4ck84.d(29): unittest failure

    ----------------

    ??:? _d_unittestp [0x4281dd]

    ??:? void tmpplk4ck84.__unittest_L20_C1() [0x427f4b]

    ??:? void tmpplk4ck84.__modtest() [0x427f60]

    ??:? int core.runtime.runModuleUnitTests().__foreachbody2(object.ModuleInfo*)
    [0x42c1c7]

    ??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)).__lambda2(immutable(object.ModuleInfo*))
    [0x42b05a]

    ??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))).__foreachbody2(ref
    rt.sections_elf_shared.DSO) [0x4301ed]

    ??:? int rt.sections_elf_shared.DSO.opApply(scope int delegate(ref rt.sections_elf_shared.DSO))
    [0x43069c]

    ??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*)))
    [0x430179]

    ??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)) [0x42b031]

    ??:? runModuleUnitTests [0x42bf9d]

    ??:? void rt.dmain2._d_run_main(int, char**, extern (C) int function(char[][])*).runAll()
    [0x42862c]

    ??:? void rt.dmain2._d_r'
  stdout: ''
  timestamp: 1660163090
- exit_code: 1
  program: "import std.typecons;\nimport std.math;\n/*\nReturn True if all numbers\
    \ in the list l are below threshold t.\n    >>> below_threshold([1L, 2L, 4L, 10L],\
    \ 100L)\n    true\n    >>> below_threshold([1L, 20L, 4L, 10L], 5L)\n    false\n\
    \    \n*/\nbool below_threshold(long[] l, long t) \n{\n    foreach(long i; l)\n\
    \    {\n        if(i > t)\n            return false;\n    }\n    return true;\n\
    }\nunittest\n{\n    alias candidate = below_threshold;\n\n    assert(candidate([1L,\
    \ 2L, 4L, 10L], 100L) == true);\n    assert(candidate([1L, 20L, 4L, 10L], 5L)\
    \ == false);\n    assert(candidate([1L, 20L, 4L, 10L], 21L) == true);\n    assert(candidate([1L,\
    \ 20L, 4L, 10L], 22L) == true);\n    assert(candidate([1L, 8L, 4L, 10L], 11L)\
    \ == true);\n    assert(candidate([1L, 8L, 4L, 10L], 10L) == false);\n}\nvoid\
    \ main(){}"
  status: Exception
  stderr: 'core.exception.AssertError@/tmp/tmpev0f60w0.d(29): unittest failure

    ----------------

    ??:? _d_unittestp [0x4281dd]

    ??:? void tmpev0f60w0.__unittest_L20_C1() [0x427f4b]

    ??:? void tmpev0f60w0.__modtest() [0x427f60]

    ??:? int core.runtime.runModuleUnitTests().__foreachbody2(object.ModuleInfo*)
    [0x42c1c7]

    ??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)).__lambda2(immutable(object.ModuleInfo*))
    [0x42b05a]

    ??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))).__foreachbody2(ref
    rt.sections_elf_shared.DSO) [0x4301ed]

    ??:? int rt.sections_elf_shared.DSO.opApply(scope int delegate(ref rt.sections_elf_shared.DSO))
    [0x43069c]

    ??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*)))
    [0x430179]

    ??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)) [0x42b031]

    ??:? runModuleUnitTests [0x42bf9d]

    ??:? void rt.dmain2._d_run_main(int, char**, extern (C) int function(char[][])*).runAll()
    [0x42862c]

    ??:? void rt.dmain2._d_r'
  stdout: ''
  timestamp: 1660163090
- exit_code: 1
  program: "import std.typecons;\nimport std.math;\n/*\nReturn True if all numbers\
    \ in the list l are below threshold t.\n    >>> below_threshold([1L, 2L, 4L, 10L],\
    \ 100L)\n    true\n    >>> below_threshold([1L, 20L, 4L, 10L], 5L)\n    false\n\
    \    \n*/\nbool below_threshold(long[] l, long t) \n{\n    foreach(long i; l)\n\
    \    {\n        if(i > t)\n            return false;\n    }\n    return true;\n\
    }\nunittest\n{\n    alias candidate = below_threshold;\n\n    assert(candidate([1L,\
    \ 2L, 4L, 10L], 100L) == true);\n    assert(candidate([1L, 20L, 4L, 10L], 5L)\
    \ == false);\n    assert(candidate([1L, 20L, 4L, 10L], 21L) == true);\n    assert(candidate([1L,\
    \ 20L, 4L, 10L], 22L) == true);\n    assert(candidate([1L, 8L, 4L, 10L], 11L)\
    \ == true);\n    assert(candidate([1L, 8L, 4L, 10L], 10L) == false);\n}\nvoid\
    \ main(){}"
  status: Exception
  stderr: 'core.exception.AssertError@/tmp/tmpev0f60w0.d(29): unittest failure

    ----------------

    ??:? _d_unittestp [0x4281dd]

    ??:? void tmpev0f60w0.__unittest_L20_C1() [0x427f4b]

    ??:? void tmpev0f60w0.__modtest() [0x427f60]

    ??:? int core.runtime.runModuleUnitTests().__foreachbody2(object.ModuleInfo*)
    [0x42c1c7]

    ??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)).__lambda2(immutable(object.ModuleInfo*))
    [0x42b05a]

    ??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))).__foreachbody2(ref
    rt.sections_elf_shared.DSO) [0x4301ed]

    ??:? int rt.sections_elf_shared.DSO.opApply(scope int delegate(ref rt.sections_elf_shared.DSO))
    [0x43069c]

    ??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*)))
    [0x430179]

    ??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)) [0x42b031]

    ??:? runModuleUnitTests [0x42bf9d]

    ??:? void rt.dmain2._d_run_main(int, char**, extern (C) int function(char[][])*).runAll()
    [0x42862c]

    ??:? void rt.dmain2._d_r'
  stdout: ''
  timestamp: 1660163090
- exit_code: 1
  program: "import std.typecons;\nimport std.math;\n/*\nReturn True if all numbers\
    \ in the list l are below threshold t.\n    >>> below_threshold([1L, 2L, 4L, 10L],\
    \ 100L)\n    true\n    >>> below_threshold([1L, 20L, 4L, 10L], 5L)\n    false\n\
    \    \n*/\nbool below_threshold(long[] l, long t) \n{\n    foreach(i; l)\n   \
    \ {\n        if(i > t)\n            return false;\n    }\n    return true;\n}\n\
    unittest\n{\n    alias candidate = below_threshold;\n\n    assert(candidate([1L,\
    \ 2L, 4L, 10L], 100L) == true);\n    assert(candidate([1L, 20L, 4L, 10L], 5L)\
    \ == false);\n    assert(candidate([1L, 20L, 4L, 10L], 21L) == true);\n    assert(candidate([1L,\
    \ 20L, 4L, 10L], 22L) == true);\n    assert(candidate([1L, 8L, 4L, 10L], 11L)\
    \ == true);\n    assert(candidate([1L, 8L, 4L, 10L], 10L) == false);\n}\nvoid\
    \ main(){}"
  status: Exception
  stderr: 'core.exception.AssertError@/tmp/tmpplk4ck84.d(29): unittest failure

    ----------------

    ??:? _d_unittestp [0x4281dd]

    ??:? void tmpplk4ck84.__unittest_L20_C1() [0x427f4b]

    ??:? void tmpplk4ck84.__modtest() [0x427f60]

    ??:? int core.runtime.runModuleUnitTests().__foreachbody2(object.ModuleInfo*)
    [0x42c1c7]

    ??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)).__lambda2(immutable(object.ModuleInfo*))
    [0x42b05a]

    ??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))).__foreachbody2(ref
    rt.sections_elf_shared.DSO) [0x4301ed]

    ??:? int rt.sections_elf_shared.DSO.opApply(scope int delegate(ref rt.sections_elf_shared.DSO))
    [0x43069c]

    ??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*)))
    [0x430179]

    ??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)) [0x42b031]

    ??:? runModuleUnitTests [0x42bf9d]

    ??:? void rt.dmain2._d_run_main(int, char**, extern (C) int function(char[][])*).runAll()
    [0x42862c]

    ??:? void rt.dmain2._d_r'
  stdout: ''
  timestamp: 1660163090
- exit_code: 1
  program: "import std.typecons;\nimport std.math;\n/*\nReturn True if all numbers\
    \ in the list l are below threshold t.\n    >>> below_threshold([1L, 2L, 4L, 10L],\
    \ 100L)\n    true\n    >>> below_threshold([1L, 20L, 4L, 10L], 5L)\n    false\n\
    \    \n*/\nbool below_threshold(long[] l, long t) \n{\n    foreach(long i; l)\n\
    \    {\n        if(i > t)\n            return false;\n    }\n    return true;\n\
    }\n/*\nReturn True if all numbers in the list l are below threshold t.\n    >>>\
    \ below_threshold([1L, 2L, 4L, 10L], 100L)\n    true\n    >>> below_threshold([1L,\
    \ 20L, 4L, 10L], 5L)\n    false\n    \n*/\nunittest\n{\n    alias candidate =\
    \ below_threshold;\n\n    assert(candidate([1L, 2L, 4L, 10L], 100L) == true);\n\
    \    assert(candidate([1L, 20L, 4L, 10L], 5L) == false);\n    assert(candidate([1L,\
    \ 20L, 4L, 10L], 21L) == true);\n    assert(candidate([1L, 20L, 4L, 10L], 22L)\
    \ == true);\n    assert(candidate([1L, 8L, 4L, 10L], 11L) == true);\n    assert(candidate([1L,\
    \ 8L, 4L, 10L], 10L) == false);\n}\nvoid main(){}"
  status: Exception
  stderr: 'core.exception.AssertError@/tmp/tmp_kfz1oq0.d(37): unittest failure

    ----------------

    ??:? _d_unittestp [0x4281dd]

    ??:? void tmp_kfz1oq0.__unittest_L28_C1() [0x427f4b]

    ??:? void tmp_kfz1oq0.__modtest() [0x427f60]

    ??:? int core.runtime.runModuleUnitTests().__foreachbody2(object.ModuleInfo*)
    [0x42c1c7]

    ??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)).__lambda2(immutable(object.ModuleInfo*))
    [0x42b05a]

    ??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))).__foreachbody2(ref
    rt.sections_elf_shared.DSO) [0x4301ed]

    ??:? int rt.sections_elf_shared.DSO.opApply(scope int delegate(ref rt.sections_elf_shared.DSO))
    [0x43069c]

    ??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*)))
    [0x430179]

    ??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)) [0x42b031]

    ??:? runModuleUnitTests [0x42bf9d]

    ??:? void rt.dmain2._d_run_main(int, char**, extern (C) int function(char[][])*).runAll()
    [0x42862c]

    ??:? void rt.dmain2._d_r'
  stdout: ''
  timestamp: 1660163090
- exit_code: 1
  program: "import std.typecons;\nimport std.math;\n/*\nReturn True if all numbers\
    \ in the list l are below threshold t.\n    >>> below_threshold([1L, 2L, 4L, 10L],\
    \ 100L)\n    true\n    >>> below_threshold([1L, 20L, 4L, 10L], 5L)\n    false\n\
    \    \n*/\nbool below_threshold(long[] l, long t) \n{\n    foreach(i; l)\n   \
    \ {\n        if(i > t)\n            return false;\n    }\n    return true;\n}\n\
    unittest\n{\n    alias candidate = below_threshold;\n\n    assert(candidate([1L,\
    \ 2L, 4L, 10L], 100L) == true);\n    assert(candidate([1L, 20L, 4L, 10L], 5L)\
    \ == false);\n    assert(candidate([1L, 20L, 4L, 10L], 21L) == true);\n    assert(candidate([1L,\
    \ 20L, 4L, 10L], 22L) == true);\n    assert(candidate([1L, 8L, 4L, 10L], 11L)\
    \ == true);\n    assert(candidate([1L, 8L, 4L, 10L], 10L) == false);\n}\nvoid\
    \ main(){}"
  status: Exception
  stderr: 'core.exception.AssertError@/tmp/tmpplk4ck84.d(29): unittest failure

    ----------------

    ??:? _d_unittestp [0x4281dd]

    ??:? void tmpplk4ck84.__unittest_L20_C1() [0x427f4b]

    ??:? void tmpplk4ck84.__modtest() [0x427f60]

    ??:? int core.runtime.runModuleUnitTests().__foreachbody2(object.ModuleInfo*)
    [0x42c1c7]

    ??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)).__lambda2(immutable(object.ModuleInfo*))
    [0x42b05a]

    ??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))).__foreachbody2(ref
    rt.sections_elf_shared.DSO) [0x4301ed]

    ??:? int rt.sections_elf_shared.DSO.opApply(scope int delegate(ref rt.sections_elf_shared.DSO))
    [0x43069c]

    ??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*)))
    [0x430179]

    ??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)) [0x42b031]

    ??:? runModuleUnitTests [0x42bf9d]

    ??:? void rt.dmain2._d_run_main(int, char**, extern (C) int function(char[][])*).runAll()
    [0x42862c]

    ??:? void rt.dmain2._d_r'
  stdout: ''
  timestamp: 1660163090
- exit_code: 1
  program: "import std.typecons;\nimport std.math;\n/*\nReturn True if all numbers\
    \ in the list l are below threshold t.\n    >>> below_threshold([1L, 2L, 4L, 10L],\
    \ 100L)\n    true\n    >>> below_threshold([1L, 20L, 4L, 10L], 5L)\n    false\n\
    \    \n*/\nbool below_threshold(long[] l, long t) \n{\n    foreach(i; l)\n   \
    \ {\n        if(i > t)\n            return false;\n    }\n    return true;\n}\n\
    unittest\n{\n    alias candidate = below_threshold;\n\n    assert(candidate([1L,\
    \ 2L, 4L, 10L], 100L) == true);\n    assert(candidate([1L, 20L, 4L, 10L], 5L)\
    \ == false);\n    assert(candidate([1L, 20L, 4L, 10L], 21L) == true);\n    assert(candidate([1L,\
    \ 20L, 4L, 10L], 22L) == true);\n    assert(candidate([1L, 8L, 4L, 10L], 11L)\
    \ == true);\n    assert(candidate([1L, 8L, 4L, 10L], 10L) == false);\n}\nvoid\
    \ main(){}"
  status: Exception
  stderr: 'core.exception.AssertError@/tmp/tmpplk4ck84.d(29): unittest failure

    ----------------

    ??:? _d_unittestp [0x4281dd]

    ??:? void tmpplk4ck84.__unittest_L20_C1() [0x427f4b]

    ??:? void tmpplk4ck84.__modtest() [0x427f60]

    ??:? int core.runtime.runModuleUnitTests().__foreachbody2(object.ModuleInfo*)
    [0x42c1c7]

    ??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)).__lambda2(immutable(object.ModuleInfo*))
    [0x42b05a]

    ??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))).__foreachbody2(ref
    rt.sections_elf_shared.DSO) [0x4301ed]

    ??:? int rt.sections_elf_shared.DSO.opApply(scope int delegate(ref rt.sections_elf_shared.DSO))
    [0x43069c]

    ??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*)))
    [0x430179]

    ??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)) [0x42b031]

    ??:? runModuleUnitTests [0x42bf9d]

    ??:? void rt.dmain2._d_run_main(int, char**, extern (C) int function(char[][])*).runAll()
    [0x42862c]

    ??:? void rt.dmain2._d_r'
  stdout: ''
  timestamp: 1660163090
- exit_code: 1
  program: "import std.typecons;\nimport std.math;\n/*\nReturn True if all numbers\
    \ in the list l are below threshold t.\n    >>> below_threshold([1L, 2L, 4L, 10L],\
    \ 100L)\n    true\n    >>> below_threshold([1L, 20L, 4L, 10L], 5L)\n    false\n\
    \    \n*/\nbool below_threshold(long[] l, long t) \n{\n    foreach(i; l)\n   \
    \ {\n        if(i > t)\n            return false;\n    }\n    return true;\n}\n\
    unittest\n{\n    alias candidate = below_threshold;\n\n    assert(candidate([1L,\
    \ 2L, 4L, 10L], 100L) == true);\n    assert(candidate([1L, 20L, 4L, 10L], 5L)\
    \ == false);\n    assert(candidate([1L, 20L, 4L, 10L], 21L) == true);\n    assert(candidate([1L,\
    \ 20L, 4L, 10L], 22L) == true);\n    assert(candidate([1L, 8L, 4L, 10L], 11L)\
    \ == true);\n    assert(candidate([1L, 8L, 4L, 10L], 10L) == false);\n}\nvoid\
    \ main(){}"
  status: Exception
  stderr: 'core.exception.AssertError@/tmp/tmpplk4ck84.d(29): unittest failure

    ----------------

    ??:? _d_unittestp [0x4281dd]

    ??:? void tmpplk4ck84.__unittest_L20_C1() [0x427f4b]

    ??:? void tmpplk4ck84.__modtest() [0x427f60]

    ??:? int core.runtime.runModuleUnitTests().__foreachbody2(object.ModuleInfo*)
    [0x42c1c7]

    ??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)).__lambda2(immutable(object.ModuleInfo*))
    [0x42b05a]

    ??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))).__foreachbody2(ref
    rt.sections_elf_shared.DSO) [0x4301ed]

    ??:? int rt.sections_elf_shared.DSO.opApply(scope int delegate(ref rt.sections_elf_shared.DSO))
    [0x43069c]

    ??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*)))
    [0x430179]

    ??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)) [0x42b031]

    ??:? runModuleUnitTests [0x42bf9d]

    ??:? void rt.dmain2._d_run_main(int, char**, extern (C) int function(char[][])*).runAll()
    [0x42862c]

    ??:? void rt.dmain2._d_r'
  stdout: ''
  timestamp: 1660163090
- exit_code: 0
  program: "import std.typecons;\nimport std.math;\n/*\nReturn True if all numbers\
    \ in the list l are below threshold t.\n    >>> below_threshold([1L, 2L, 4L, 10L],\
    \ 100L)\n    true\n    >>> below_threshold([1L, 20L, 4L, 10L], 5L)\n    false\n\
    \    \n*/\nbool below_threshold(long[] l, long t) \n{\n    foreach(long i; l)\n\
    \    {\n        if(i >= t)\n            return false;\n    }\n    return true;\n\
    }\nunittest\n{\n    alias candidate = below_threshold;\n\n    assert(candidate([1L,\
    \ 2L, 4L, 10L], 100L) == true);\n    assert(candidate([1L, 20L, 4L, 10L], 5L)\
    \ == false);\n    assert(candidate([1L, 20L, 4L, 10L], 21L) == true);\n    assert(candidate([1L,\
    \ 20L, 4L, 10L], 22L) == true);\n    assert(candidate([1L, 8L, 4L, 10L], 11L)\
    \ == true);\n    assert(candidate([1L, 8L, 4L, 10L], 10L) == false);\n}\nvoid\
    \ main(){}"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660163090
- exit_code: 0
  program: "import std.typecons;\nimport std.math;\n/*\nReturn True if all numbers\
    \ in the list l are below threshold t.\n    >>> below_threshold([1L, 2L, 4L, 10L],\
    \ 100L)\n    true\n    >>> below_threshold([1L, 20L, 4L, 10L], 5L)\n    false\n\
    \    \n*/\nbool below_threshold(long[] l, long t) \n{\n    foreach(long n; l)\n\
    \    {\n        if(n >= t)\n            return false;\n    }\n    return true;\n\
    }\nunittest\n{\n    alias candidate = below_threshold;\n\n    assert(candidate([1L,\
    \ 2L, 4L, 10L], 100L) == true);\n    assert(candidate([1L, 20L, 4L, 10L], 5L)\
    \ == false);\n    assert(candidate([1L, 20L, 4L, 10L], 21L) == true);\n    assert(candidate([1L,\
    \ 20L, 4L, 10L], 22L) == true);\n    assert(candidate([1L, 8L, 4L, 10L], 11L)\
    \ == true);\n    assert(candidate([1L, 8L, 4L, 10L], 10L) == false);\n}\nvoid\
    \ main(){}"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660163090
- exit_code: 1
  program: "import std.typecons;\nimport std.math;\n/*\nReturn True if all numbers\
    \ in the list l are below threshold t.\n    >>> below_threshold([1L, 2L, 4L, 10L],\
    \ 100L)\n    true\n    >>> below_threshold([1L, 20L, 4L, 10L], 5L)\n    false\n\
    \    \n*/\nbool below_threshold(long[] l, long t) \n{\n    foreach(x; l)\n   \
    \ {\n        if(x > t)\n            return false;\n    }\n    return true;\n}\n\
    unittest\n{\n    alias candidate = below_threshold;\n\n    assert(candidate([1L,\
    \ 2L, 4L, 10L], 100L) == true);\n    assert(candidate([1L, 20L, 4L, 10L], 5L)\
    \ == false);\n    assert(candidate([1L, 20L, 4L, 10L], 21L) == true);\n    assert(candidate([1L,\
    \ 20L, 4L, 10L], 22L) == true);\n    assert(candidate([1L, 8L, 4L, 10L], 11L)\
    \ == true);\n    assert(candidate([1L, 8L, 4L, 10L], 10L) == false);\n}\nvoid\
    \ main(){}"
  status: Exception
  stderr: 'core.exception.AssertError@/tmp/tmpdjy3v7wo.d(29): unittest failure

    ----------------

    ??:? _d_unittestp [0x4281dd]

    ??:? void tmpdjy3v7wo.__unittest_L20_C1() [0x427f4b]

    ??:? void tmpdjy3v7wo.__modtest() [0x427f60]

    ??:? int core.runtime.runModuleUnitTests().__foreachbody2(object.ModuleInfo*)
    [0x42c1c7]

    ??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)).__lambda2(immutable(object.ModuleInfo*))
    [0x42b05a]

    ??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))).__foreachbody2(ref
    rt.sections_elf_shared.DSO) [0x4301ed]

    ??:? int rt.sections_elf_shared.DSO.opApply(scope int delegate(ref rt.sections_elf_shared.DSO))
    [0x43069c]

    ??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*)))
    [0x430179]

    ??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)) [0x42b031]

    ??:? runModuleUnitTests [0x42bf9d]

    ??:? void rt.dmain2._d_run_main(int, char**, extern (C) int function(char[][])*).runAll()
    [0x42862c]

    ??:? void rt.dmain2._d_r'
  stdout: ''
  timestamp: 1660163090
- exit_code: 1
  program: "import std.typecons;\nimport std.math;\n/*\nReturn True if all numbers\
    \ in the list l are below threshold t.\n    >>> below_threshold([1L, 2L, 4L, 10L],\
    \ 100L)\n    true\n    >>> below_threshold([1L, 20L, 4L, 10L], 5L)\n    false\n\
    \    \n*/\nbool below_threshold(long[] l, long t) \n{\n    foreach(x; l)\n   \
    \ {\n        if(x > t)\n            return false;\n    }\n    return true;\n}\n\
    unittest\n{\n    alias candidate = below_threshold;\n\n    assert(candidate([1L,\
    \ 2L, 4L, 10L], 100L) == true);\n    assert(candidate([1L, 20L, 4L, 10L], 5L)\
    \ == false);\n    assert(candidate([1L, 20L, 4L, 10L], 21L) == true);\n    assert(candidate([1L,\
    \ 20L, 4L, 10L], 22L) == true);\n    assert(candidate([1L, 8L, 4L, 10L], 11L)\
    \ == true);\n    assert(candidate([1L, 8L, 4L, 10L], 10L) == false);\n}\nvoid\
    \ main(){}"
  status: Exception
  stderr: 'core.exception.AssertError@/tmp/tmpdjy3v7wo.d(29): unittest failure

    ----------------

    ??:? _d_unittestp [0x4281dd]

    ??:? void tmpdjy3v7wo.__unittest_L20_C1() [0x427f4b]

    ??:? void tmpdjy3v7wo.__modtest() [0x427f60]

    ??:? int core.runtime.runModuleUnitTests().__foreachbody2(object.ModuleInfo*)
    [0x42c1c7]

    ??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)).__lambda2(immutable(object.ModuleInfo*))
    [0x42b05a]

    ??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))).__foreachbody2(ref
    rt.sections_elf_shared.DSO) [0x4301ed]

    ??:? int rt.sections_elf_shared.DSO.opApply(scope int delegate(ref rt.sections_elf_shared.DSO))
    [0x43069c]

    ??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*)))
    [0x430179]

    ??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)) [0x42b031]

    ??:? runModuleUnitTests [0x42bf9d]

    ??:? void rt.dmain2._d_run_main(int, char**, extern (C) int function(char[][])*).runAll()
    [0x42862c]

    ??:? void rt.dmain2._d_r'
  stdout: ''
  timestamp: 1660163090
- exit_code: 1
  program: "import std.typecons;\nimport std.math;\n/*\nReturn True if all numbers\
    \ in the list l are below threshold t.\n    >>> below_threshold([1L, 2L, 4L, 10L],\
    \ 100L)\n    true\n    >>> below_threshold([1L, 20L, 4L, 10L], 5L)\n    false\n\
    \    \n*/\nbool below_threshold(long[] l, long t) \n{\n    foreach(long i; l)\n\
    \    {\n        if(i > t)\n            return false;\n    }\n    return true;\n\
    }\nunittest\n{\n    alias candidate = below_threshold;\n\n    assert(candidate([1L,\
    \ 2L, 4L, 10L], 100L) == true);\n    assert(candidate([1L, 20L, 4L, 10L], 5L)\
    \ == false);\n    assert(candidate([1L, 20L, 4L, 10L], 21L) == true);\n    assert(candidate([1L,\
    \ 20L, 4L, 10L], 22L) == true);\n    assert(candidate([1L, 8L, 4L, 10L], 11L)\
    \ == true);\n    assert(candidate([1L, 8L, 4L, 10L], 10L) == false);\n}\nvoid\
    \ main(){}"
  status: Exception
  stderr: 'core.exception.AssertError@/tmp/tmpev0f60w0.d(29): unittest failure

    ----------------

    ??:? _d_unittestp [0x4281dd]

    ??:? void tmpev0f60w0.__unittest_L20_C1() [0x427f4b]

    ??:? void tmpev0f60w0.__modtest() [0x427f60]

    ??:? int core.runtime.runModuleUnitTests().__foreachbody2(object.ModuleInfo*)
    [0x42c1c7]

    ??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)).__lambda2(immutable(object.ModuleInfo*))
    [0x42b05a]

    ??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))).__foreachbody2(ref
    rt.sections_elf_shared.DSO) [0x4301ed]

    ??:? int rt.sections_elf_shared.DSO.opApply(scope int delegate(ref rt.sections_elf_shared.DSO))
    [0x43069c]

    ??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*)))
    [0x430179]

    ??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)) [0x42b031]

    ??:? runModuleUnitTests [0x42bf9d]

    ??:? void rt.dmain2._d_run_main(int, char**, extern (C) int function(char[][])*).runAll()
    [0x42862c]

    ??:? void rt.dmain2._d_r'
  stdout: ''
  timestamp: 1660163090
- exit_code: 1
  program: "import std.typecons;\nimport std.math;\n/*\nReturn True if all numbers\
    \ in the list l are below threshold t.\n    >>> below_threshold([1L, 2L, 4L, 10L],\
    \ 100L)\n    true\n    >>> below_threshold([1L, 20L, 4L, 10L], 5L)\n    false\n\
    \    \n*/\nbool below_threshold(long[] l, long t) \n{\n    foreach(i; l)\n   \
    \ {\n        if(i > t)\n            return false;\n    }\n    return true;\n}\n\
    unittest\n{\n    alias candidate = below_threshold;\n\n    assert(candidate([1L,\
    \ 2L, 4L, 10L], 100L) == true);\n    assert(candidate([1L, 20L, 4L, 10L], 5L)\
    \ == false);\n    assert(candidate([1L, 20L, 4L, 10L], 21L) == true);\n    assert(candidate([1L,\
    \ 20L, 4L, 10L], 22L) == true);\n    assert(candidate([1L, 8L, 4L, 10L], 11L)\
    \ == true);\n    assert(candidate([1L, 8L, 4L, 10L], 10L) == false);\n}\nvoid\
    \ main(){}"
  status: Exception
  stderr: 'core.exception.AssertError@/tmp/tmpplk4ck84.d(29): unittest failure

    ----------------

    ??:? _d_unittestp [0x4281dd]

    ??:? void tmpplk4ck84.__unittest_L20_C1() [0x427f4b]

    ??:? void tmpplk4ck84.__modtest() [0x427f60]

    ??:? int core.runtime.runModuleUnitTests().__foreachbody2(object.ModuleInfo*)
    [0x42c1c7]

    ??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)).__lambda2(immutable(object.ModuleInfo*))
    [0x42b05a]

    ??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))).__foreachbody2(ref
    rt.sections_elf_shared.DSO) [0x4301ed]

    ??:? int rt.sections_elf_shared.DSO.opApply(scope int delegate(ref rt.sections_elf_shared.DSO))
    [0x43069c]

    ??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*)))
    [0x430179]

    ??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)) [0x42b031]

    ??:? runModuleUnitTests [0x42bf9d]

    ??:? void rt.dmain2._d_run_main(int, char**, extern (C) int function(char[][])*).runAll()
    [0x42862c]

    ??:? void rt.dmain2._d_r'
  stdout: ''
  timestamp: 1660163090
- exit_code: 1
  program: "import std.typecons;\nimport std.math;\n/*\nReturn True if all numbers\
    \ in the list l are below threshold t.\n    >>> below_threshold([1L, 2L, 4L, 10L],\
    \ 100L)\n    true\n    >>> below_threshold([1L, 20L, 4L, 10L], 5L)\n    false\n\
    \    \n*/\nbool below_threshold(long[] l, long t) \n{\n    foreach(long i; l)\n\
    \    {\n        if(i > t)\n            return false;\n    }\n    return true;\n\
    }\nunittest\n{\n    alias candidate = below_threshold;\n\n    assert(candidate([1L,\
    \ 2L, 4L, 10L], 100L) == true);\n    assert(candidate([1L, 20L, 4L, 10L], 5L)\
    \ == false);\n    assert(candidate([1L, 20L, 4L, 10L], 21L) == true);\n    assert(candidate([1L,\
    \ 20L, 4L, 10L], 22L) == true);\n    assert(candidate([1L, 8L, 4L, 10L], 11L)\
    \ == true);\n    assert(candidate([1L, 8L, 4L, 10L], 10L) == false);\n}\nvoid\
    \ main(){}"
  status: Exception
  stderr: 'core.exception.AssertError@/tmp/tmpev0f60w0.d(29): unittest failure

    ----------------

    ??:? _d_unittestp [0x4281dd]

    ??:? void tmpev0f60w0.__unittest_L20_C1() [0x427f4b]

    ??:? void tmpev0f60w0.__modtest() [0x427f60]

    ??:? int core.runtime.runModuleUnitTests().__foreachbody2(object.ModuleInfo*)
    [0x42c1c7]

    ??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)).__lambda2(immutable(object.ModuleInfo*))
    [0x42b05a]

    ??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))).__foreachbody2(ref
    rt.sections_elf_shared.DSO) [0x4301ed]

    ??:? int rt.sections_elf_shared.DSO.opApply(scope int delegate(ref rt.sections_elf_shared.DSO))
    [0x43069c]

    ??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*)))
    [0x430179]

    ??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)) [0x42b031]

    ??:? runModuleUnitTests [0x42bf9d]

    ??:? void rt.dmain2._d_run_main(int, char**, extern (C) int function(char[][])*).runAll()
    [0x42862c]

    ??:? void rt.dmain2._d_r'
  stdout: ''
  timestamp: 1660163090
- exit_code: 0
  program: "import std.typecons;\nimport std.math;\n/*\nReturn True if all numbers\
    \ in the list l are below threshold t.\n    >>> below_threshold([1L, 2L, 4L, 10L],\
    \ 100L)\n    true\n    >>> below_threshold([1L, 20L, 4L, 10L], 5L)\n    false\n\
    \    \n*/\nbool below_threshold(long[] l, long t) \n{\n    foreach(long x; l)\n\
    \    {\n        if(x >= t)\n            return false;\n    }\n    return true;\n\
    }\nunittest\n{\n    alias candidate = below_threshold;\n\n    assert(candidate([1L,\
    \ 2L, 4L, 10L], 100L) == true);\n    assert(candidate([1L, 20L, 4L, 10L], 5L)\
    \ == false);\n    assert(candidate([1L, 20L, 4L, 10L], 21L) == true);\n    assert(candidate([1L,\
    \ 20L, 4L, 10L], 22L) == true);\n    assert(candidate([1L, 8L, 4L, 10L], 11L)\
    \ == true);\n    assert(candidate([1L, 8L, 4L, 10L], 10L) == false);\n}\nvoid\
    \ main(){}"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660163090
- exit_code: 1
  program: "import std.typecons;\nimport std.math;\n/*\nReturn True if all numbers\
    \ in the list l are below threshold t.\n    >>> below_threshold([1L, 2L, 4L, 10L],\
    \ 100L)\n    true\n    >>> below_threshold([1L, 20L, 4L, 10L], 5L)\n    false\n\
    \    \n*/\nbool below_threshold(long[] l, long t) \n{\n    foreach(long i; l)\n\
    \    {\n        if(i > t)\n            return false;\n    }\n    return true;\n\
    }\n/*\nReturn True if all numbers in the list l are below threshold t.\n    >>>\
    \ below_threshold([1L, 2L, 4L, 10L], 100L)\n    true\n    >>> below_threshold([1L,\
    \ 20L, 4L, 10L], 5L)\n    false\n    \n*/\nunittest\n{\n    alias candidate =\
    \ below_threshold;\n\n    assert(candidate([1L, 2L, 4L, 10L], 100L) == true);\n\
    \    assert(candidate([1L, 20L, 4L, 10L], 5L) == false);\n    assert(candidate([1L,\
    \ 20L, 4L, 10L], 21L) == true);\n    assert(candidate([1L, 20L, 4L, 10L], 22L)\
    \ == true);\n    assert(candidate([1L, 8L, 4L, 10L], 11L) == true);\n    assert(candidate([1L,\
    \ 8L, 4L, 10L], 10L) == false);\n}\nvoid main(){}"
  status: Exception
  stderr: 'core.exception.AssertError@/tmp/tmp_kfz1oq0.d(37): unittest failure

    ----------------

    ??:? _d_unittestp [0x4281dd]

    ??:? void tmp_kfz1oq0.__unittest_L28_C1() [0x427f4b]

    ??:? void tmp_kfz1oq0.__modtest() [0x427f60]

    ??:? int core.runtime.runModuleUnitTests().__foreachbody2(object.ModuleInfo*)
    [0x42c1c7]

    ??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)).__lambda2(immutable(object.ModuleInfo*))
    [0x42b05a]

    ??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))).__foreachbody2(ref
    rt.sections_elf_shared.DSO) [0x4301ed]

    ??:? int rt.sections_elf_shared.DSO.opApply(scope int delegate(ref rt.sections_elf_shared.DSO))
    [0x43069c]

    ??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*)))
    [0x430179]

    ??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)) [0x42b031]

    ??:? runModuleUnitTests [0x42bf9d]

    ??:? void rt.dmain2._d_run_main(int, char**, extern (C) int function(char[][])*).runAll()
    [0x42862c]

    ??:? void rt.dmain2._d_r'
  stdout: ''
  timestamp: 1660163090
- exit_code: 1
  program: "import std.typecons;\nimport std.math;\n/*\nReturn True if all numbers\
    \ in the list l are below threshold t.\n    >>> below_threshold([1L, 2L, 4L, 10L],\
    \ 100L)\n    true\n    >>> below_threshold([1L, 20L, 4L, 10L], 5L)\n    false\n\
    \    \n*/\nbool below_threshold(long[] l, long t) \n{\n    foreach(i; l)\n   \
    \ {\n        if(i > t)\n            return false;\n    }\n    return true;\n}\n\
    unittest\n{\n    alias candidate = below_threshold;\n\n    assert(candidate([1L,\
    \ 2L, 4L, 10L], 100L) == true);\n    assert(candidate([1L, 20L, 4L, 10L], 5L)\
    \ == false);\n    assert(candidate([1L, 20L, 4L, 10L], 21L) == true);\n    assert(candidate([1L,\
    \ 20L, 4L, 10L], 22L) == true);\n    assert(candidate([1L, 8L, 4L, 10L], 11L)\
    \ == true);\n    assert(candidate([1L, 8L, 4L, 10L], 10L) == false);\n}\nvoid\
    \ main(){}"
  status: Exception
  stderr: 'core.exception.AssertError@/tmp/tmpplk4ck84.d(29): unittest failure

    ----------------

    ??:? _d_unittestp [0x4281dd]

    ??:? void tmpplk4ck84.__unittest_L20_C1() [0x427f4b]

    ??:? void tmpplk4ck84.__modtest() [0x427f60]

    ??:? int core.runtime.runModuleUnitTests().__foreachbody2(object.ModuleInfo*)
    [0x42c1c7]

    ??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)).__lambda2(immutable(object.ModuleInfo*))
    [0x42b05a]

    ??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))).__foreachbody2(ref
    rt.sections_elf_shared.DSO) [0x4301ed]

    ??:? int rt.sections_elf_shared.DSO.opApply(scope int delegate(ref rt.sections_elf_shared.DSO))
    [0x43069c]

    ??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*)))
    [0x430179]

    ??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)) [0x42b031]

    ??:? runModuleUnitTests [0x42bf9d]

    ??:? void rt.dmain2._d_run_main(int, char**, extern (C) int function(char[][])*).runAll()
    [0x42862c]

    ??:? void rt.dmain2._d_r'
  stdout: ''
  timestamp: 1660163090
- exit_code: 1
  program: "import std.typecons;\nimport std.math;\n/*\nReturn True if all numbers\
    \ in the list l are below threshold t.\n    >>> below_threshold([1L, 2L, 4L, 10L],\
    \ 100L)\n    true\n    >>> below_threshold([1L, 20L, 4L, 10L], 5L)\n    false\n\
    \    \n*/\nbool below_threshold(long[] l, long t) \n{\n    foreach(i; l)\n   \
    \ {\n        if(i > t)\n            return false;\n    }\n    return true;\n}\n\
    unittest\n{\n    alias candidate = below_threshold;\n\n    assert(candidate([1L,\
    \ 2L, 4L, 10L], 100L) == true);\n    assert(candidate([1L, 20L, 4L, 10L], 5L)\
    \ == false);\n    assert(candidate([1L, 20L, 4L, 10L], 21L) == true);\n    assert(candidate([1L,\
    \ 20L, 4L, 10L], 22L) == true);\n    assert(candidate([1L, 8L, 4L, 10L], 11L)\
    \ == true);\n    assert(candidate([1L, 8L, 4L, 10L], 10L) == false);\n}\nvoid\
    \ main(){}"
  status: Exception
  stderr: 'core.exception.AssertError@/tmp/tmpplk4ck84.d(29): unittest failure

    ----------------

    ??:? _d_unittestp [0x4281dd]

    ??:? void tmpplk4ck84.__unittest_L20_C1() [0x427f4b]

    ??:? void tmpplk4ck84.__modtest() [0x427f60]

    ??:? int core.runtime.runModuleUnitTests().__foreachbody2(object.ModuleInfo*)
    [0x42c1c7]

    ??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)).__lambda2(immutable(object.ModuleInfo*))
    [0x42b05a]

    ??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))).__foreachbody2(ref
    rt.sections_elf_shared.DSO) [0x4301ed]

    ??:? int rt.sections_elf_shared.DSO.opApply(scope int delegate(ref rt.sections_elf_shared.DSO))
    [0x43069c]

    ??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*)))
    [0x430179]

    ??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)) [0x42b031]

    ??:? runModuleUnitTests [0x42bf9d]

    ??:? void rt.dmain2._d_run_main(int, char**, extern (C) int function(char[][])*).runAll()
    [0x42862c]

    ??:? void rt.dmain2._d_r'
  stdout: ''
  timestamp: 1660163090
- exit_code: 0
  program: "import std.typecons;\nimport std.math;\n/*\nReturn True if all numbers\
    \ in the list l are below threshold t.\n    >>> below_threshold([1L, 2L, 4L, 10L],\
    \ 100L)\n    true\n    >>> below_threshold([1L, 20L, 4L, 10L], 5L)\n    false\n\
    \    \n*/\nbool below_threshold(long[] l, long t) \n{\n    foreach(long i; l)\n\
    \    {\n        if(i >= t)\n            return false;\n    }\n    return true;\n\
    }\n/*\nReturn True if all numbers in the list l are below threshold t.\n    >>>\
    \ below_threshold([1L, 2L, 4L, 10L], 100L)\n    true\n    >>> below_threshold([1L,\
    \ 20L, 4L, 10L], 5L)\n    false\n    \n*/\nunittest\n{\n    alias candidate =\
    \ below_threshold;\n\n    assert(candidate([1L, 2L, 4L, 10L], 100L) == true);\n\
    \    assert(candidate([1L, 20L, 4L, 10L], 5L) == false);\n    assert(candidate([1L,\
    \ 20L, 4L, 10L], 21L) == true);\n    assert(candidate([1L, 20L, 4L, 10L], 22L)\
    \ == true);\n    assert(candidate([1L, 8L, 4L, 10L], 11L) == true);\n    assert(candidate([1L,\
    \ 8L, 4L, 10L], 10L) == false);\n}\nvoid main(){}"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660163090
- exit_code: 0
  program: "import std.typecons;\nimport std.math;\n/*\nReturn True if all numbers\
    \ in the list l are below threshold t.\n    >>> below_threshold([1L, 2L, 4L, 10L],\
    \ 100L)\n    true\n    >>> below_threshold([1L, 20L, 4L, 10L], 5L)\n    false\n\
    \    \n*/\nbool below_threshold(long[] l, long t) \n{\n    foreach(i; l)\n   \
    \ {\n        if(i >= t)\n            return false;\n    }\n    return true;\n\
    }\nunittest\n{\n    alias candidate = below_threshold;\n\n    assert(candidate([1L,\
    \ 2L, 4L, 10L], 100L) == true);\n    assert(candidate([1L, 20L, 4L, 10L], 5L)\
    \ == false);\n    assert(candidate([1L, 20L, 4L, 10L], 21L) == true);\n    assert(candidate([1L,\
    \ 20L, 4L, 10L], 22L) == true);\n    assert(candidate([1L, 8L, 4L, 10L], 11L)\
    \ == true);\n    assert(candidate([1L, 8L, 4L, 10L], 10L) == false);\n}\nvoid\
    \ main(){}"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660163090
- exit_code: 0
  program: "import std.typecons;\nimport std.math;\n/*\nReturn True if all numbers\
    \ in the list l are below threshold t.\n    >>> below_threshold([1L, 2L, 4L, 10L],\
    \ 100L)\n    true\n    >>> below_threshold([1L, 20L, 4L, 10L], 5L)\n    false\n\
    \    \n*/\nbool below_threshold(long[] l, long t) \n{\n    foreach(long x; l)\n\
    \    {\n        if(x >= t)\n            return false;\n    }\n    return true;\n\
    }\nunittest\n{\n    alias candidate = below_threshold;\n\n    assert(candidate([1L,\
    \ 2L, 4L, 10L], 100L) == true);\n    assert(candidate([1L, 20L, 4L, 10L], 5L)\
    \ == false);\n    assert(candidate([1L, 20L, 4L, 10L], 21L) == true);\n    assert(candidate([1L,\
    \ 20L, 4L, 10L], 22L) == true);\n    assert(candidate([1L, 8L, 4L, 10L], 11L)\
    \ == true);\n    assert(candidate([1L, 8L, 4L, 10L], 10L) == false);\n}\nvoid\
    \ main(){}"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660163090
- exit_code: 0
  program: "import std.typecons;\nimport std.math;\n/*\nReturn True if all numbers\
    \ in the list l are below threshold t.\n    >>> below_threshold([1L, 2L, 4L, 10L],\
    \ 100L)\n    true\n    >>> below_threshold([1L, 20L, 4L, 10L], 5L)\n    false\n\
    \    \n*/\nbool below_threshold(long[] l, long t) \n{\n    foreach(long i; l)\n\
    \    {\n        if(i >= t)\n            return false;\n    }\n    return true;\n\
    }\nunittest\n{\n    alias candidate = below_threshold;\n\n    assert(candidate([1L,\
    \ 2L, 4L, 10L], 100L) == true);\n    assert(candidate([1L, 20L, 4L, 10L], 5L)\
    \ == false);\n    assert(candidate([1L, 20L, 4L, 10L], 21L) == true);\n    assert(candidate([1L,\
    \ 20L, 4L, 10L], 22L) == true);\n    assert(candidate([1L, 8L, 4L, 10L], 11L)\
    \ == true);\n    assert(candidate([1L, 8L, 4L, 10L], 10L) == false);\n}\nvoid\
    \ main(){}"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660163090
- exit_code: 1
  program: "import std.typecons;\nimport std.math;\n/*\nReturn True if all numbers\
    \ in the list l are below threshold t.\n    >>> below_threshold([1L, 2L, 4L, 10L],\
    \ 100L)\n    true\n    >>> below_threshold([1L, 20L, 4L, 10L], 5L)\n    false\n\
    \    \n*/\nbool below_threshold(long[] l, long t) \n{\n    foreach(long i; l)\n\
    \    {\n        if(i > t)\n            return false;\n    }\n    return true;\n\
    }\nunittest\n{\n    alias candidate = below_threshold;\n\n    assert(candidate([1L,\
    \ 2L, 4L, 10L], 100L) == true);\n    assert(candidate([1L, 20L, 4L, 10L], 5L)\
    \ == false);\n    assert(candidate([1L, 20L, 4L, 10L], 21L) == true);\n    assert(candidate([1L,\
    \ 20L, 4L, 10L], 22L) == true);\n    assert(candidate([1L, 8L, 4L, 10L], 11L)\
    \ == true);\n    assert(candidate([1L, 8L, 4L, 10L], 10L) == false);\n}\nvoid\
    \ main(){}"
  status: Exception
  stderr: 'core.exception.AssertError@/tmp/tmpev0f60w0.d(29): unittest failure

    ----------------

    ??:? _d_unittestp [0x4281dd]

    ??:? void tmpev0f60w0.__unittest_L20_C1() [0x427f4b]

    ??:? void tmpev0f60w0.__modtest() [0x427f60]

    ??:? int core.runtime.runModuleUnitTests().__foreachbody2(object.ModuleInfo*)
    [0x42c1c7]

    ??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)).__lambda2(immutable(object.ModuleInfo*))
    [0x42b05a]

    ??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))).__foreachbody2(ref
    rt.sections_elf_shared.DSO) [0x4301ed]

    ??:? int rt.sections_elf_shared.DSO.opApply(scope int delegate(ref rt.sections_elf_shared.DSO))
    [0x43069c]

    ??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*)))
    [0x430179]

    ??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)) [0x42b031]

    ??:? runModuleUnitTests [0x42bf9d]

    ??:? void rt.dmain2._d_run_main(int, char**, extern (C) int function(char[][])*).runAll()
    [0x42862c]

    ??:? void rt.dmain2._d_r'
  stdout: ''
  timestamp: 1660163090
- exit_code: 1
  program: "import std.typecons;\nimport std.math;\n/*\nReturn True if all numbers\
    \ in the list l are below threshold t.\n    >>> below_threshold([1L, 2L, 4L, 10L],\
    \ 100L)\n    true\n    >>> below_threshold([1L, 20L, 4L, 10L], 5L)\n    false\n\
    \    \n*/\nbool below_threshold(long[] l, long t) \n{\n    foreach(long i; l)\n\
    \    {\n        if(i > t)\n            return false;\n    }\n    return true;\n\
    }\nunittest\n{\n    alias candidate = below_threshold;\n\n    assert(candidate([1L,\
    \ 2L, 4L, 10L], 100L) == true);\n    assert(candidate([1L, 20L, 4L, 10L], 5L)\
    \ == false);\n    assert(candidate([1L, 20L, 4L, 10L], 21L) == true);\n    assert(candidate([1L,\
    \ 20L, 4L, 10L], 22L) == true);\n    assert(candidate([1L, 8L, 4L, 10L], 11L)\
    \ == true);\n    assert(candidate([1L, 8L, 4L, 10L], 10L) == false);\n}\nvoid\
    \ main(){}"
  status: Exception
  stderr: 'core.exception.AssertError@/tmp/tmpev0f60w0.d(29): unittest failure

    ----------------

    ??:? _d_unittestp [0x4281dd]

    ??:? void tmpev0f60w0.__unittest_L20_C1() [0x427f4b]

    ??:? void tmpev0f60w0.__modtest() [0x427f60]

    ??:? int core.runtime.runModuleUnitTests().__foreachbody2(object.ModuleInfo*)
    [0x42c1c7]

    ??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)).__lambda2(immutable(object.ModuleInfo*))
    [0x42b05a]

    ??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))).__foreachbody2(ref
    rt.sections_elf_shared.DSO) [0x4301ed]

    ??:? int rt.sections_elf_shared.DSO.opApply(scope int delegate(ref rt.sections_elf_shared.DSO))
    [0x43069c]

    ??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*)))
    [0x430179]

    ??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)) [0x42b031]

    ??:? runModuleUnitTests [0x42bf9d]

    ??:? void rt.dmain2._d_run_main(int, char**, extern (C) int function(char[][])*).runAll()
    [0x42862c]

    ??:? void rt.dmain2._d_r'
  stdout: ''
  timestamp: 1660163090
- exit_code: 1
  program: "import std.typecons;\nimport std.math;\n/*\nReturn True if all numbers\
    \ in the list l are below threshold t.\n    >>> below_threshold([1L, 2L, 4L, 10L],\
    \ 100L)\n    true\n    >>> below_threshold([1L, 20L, 4L, 10L], 5L)\n    false\n\
    \    \n*/\nbool below_threshold(long[] l, long t) \n{\n    foreach(i; l)\n   \
    \ {\n        if(i > t)\n            return false;\n    }\n    return true;\n}\n\
    unittest\n{\n    alias candidate = below_threshold;\n\n    assert(candidate([1L,\
    \ 2L, 4L, 10L], 100L) == true);\n    assert(candidate([1L, 20L, 4L, 10L], 5L)\
    \ == false);\n    assert(candidate([1L, 20L, 4L, 10L], 21L) == true);\n    assert(candidate([1L,\
    \ 20L, 4L, 10L], 22L) == true);\n    assert(candidate([1L, 8L, 4L, 10L], 11L)\
    \ == true);\n    assert(candidate([1L, 8L, 4L, 10L], 10L) == false);\n}\nvoid\
    \ main(){}"
  status: Exception
  stderr: 'core.exception.AssertError@/tmp/tmpplk4ck84.d(29): unittest failure

    ----------------

    ??:? _d_unittestp [0x4281dd]

    ??:? void tmpplk4ck84.__unittest_L20_C1() [0x427f4b]

    ??:? void tmpplk4ck84.__modtest() [0x427f60]

    ??:? int core.runtime.runModuleUnitTests().__foreachbody2(object.ModuleInfo*)
    [0x42c1c7]

    ??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)).__lambda2(immutable(object.ModuleInfo*))
    [0x42b05a]

    ??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))).__foreachbody2(ref
    rt.sections_elf_shared.DSO) [0x4301ed]

    ??:? int rt.sections_elf_shared.DSO.opApply(scope int delegate(ref rt.sections_elf_shared.DSO))
    [0x43069c]

    ??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*)))
    [0x430179]

    ??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)) [0x42b031]

    ??:? runModuleUnitTests [0x42bf9d]

    ??:? void rt.dmain2._d_run_main(int, char**, extern (C) int function(char[][])*).runAll()
    [0x42862c]

    ??:? void rt.dmain2._d_r'
  stdout: ''
  timestamp: 1660163090
- exit_code: 0
  program: "import std.typecons;\nimport std.math;\n/*\nReturn True if all numbers\
    \ in the list l are below threshold t.\n    >>> below_threshold([1L, 2L, 4L, 10L],\
    \ 100L)\n    true\n    >>> below_threshold([1L, 20L, 4L, 10L], 5L)\n    false\n\
    \    \n*/\nbool below_threshold(long[] l, long t) \n{\n    foreach(x; l)\n   \
    \ {\n        if(x >= t)\n            return false;\n    }\n    return true;\n\
    }\nunittest\n{\n    alias candidate = below_threshold;\n\n    assert(candidate([1L,\
    \ 2L, 4L, 10L], 100L) == true);\n    assert(candidate([1L, 20L, 4L, 10L], 5L)\
    \ == false);\n    assert(candidate([1L, 20L, 4L, 10L], 21L) == true);\n    assert(candidate([1L,\
    \ 20L, 4L, 10L], 22L) == true);\n    assert(candidate([1L, 8L, 4L, 10L], 11L)\
    \ == true);\n    assert(candidate([1L, 8L, 4L, 10L], 10L) == false);\n}\nvoid\
    \ main(){}"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660163090
- exit_code: 1
  program: "import std.typecons;\nimport std.math;\n/*\nReturn True if all numbers\
    \ in the list l are below threshold t.\n    >>> below_threshold([1L, 2L, 4L, 10L],\
    \ 100L)\n    true\n    >>> below_threshold([1L, 20L, 4L, 10L], 5L)\n    false\n\
    \    \n*/\nbool below_threshold(long[] l, long t) \n{\n    foreach(i; l)\n   \
    \ {\n        if(i > t)\n            return false;\n    }\n    return true;\n}\n\
    unittest\n{\n    alias candidate = below_threshold;\n\n    assert(candidate([1L,\
    \ 2L, 4L, 10L], 100L) == true);\n    assert(candidate([1L, 20L, 4L, 10L], 5L)\
    \ == false);\n    assert(candidate([1L, 20L, 4L, 10L], 21L) == true);\n    assert(candidate([1L,\
    \ 20L, 4L, 10L], 22L) == true);\n    assert(candidate([1L, 8L, 4L, 10L], 11L)\
    \ == true);\n    assert(candidate([1L, 8L, 4L, 10L], 10L) == false);\n}\nvoid\
    \ main(){}"
  status: Exception
  stderr: 'core.exception.AssertError@/tmp/tmpplk4ck84.d(29): unittest failure

    ----------------

    ??:? _d_unittestp [0x4281dd]

    ??:? void tmpplk4ck84.__unittest_L20_C1() [0x427f4b]

    ??:? void tmpplk4ck84.__modtest() [0x427f60]

    ??:? int core.runtime.runModuleUnitTests().__foreachbody2(object.ModuleInfo*)
    [0x42c1c7]

    ??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)).__lambda2(immutable(object.ModuleInfo*))
    [0x42b05a]

    ??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))).__foreachbody2(ref
    rt.sections_elf_shared.DSO) [0x4301ed]

    ??:? int rt.sections_elf_shared.DSO.opApply(scope int delegate(ref rt.sections_elf_shared.DSO))
    [0x43069c]

    ??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*)))
    [0x430179]

    ??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)) [0x42b031]

    ??:? runModuleUnitTests [0x42bf9d]

    ??:? void rt.dmain2._d_run_main(int, char**, extern (C) int function(char[][])*).runAll()
    [0x42862c]

    ??:? void rt.dmain2._d_r'
  stdout: ''
  timestamp: 1660163090
- exit_code: 0
  program: "import std.typecons;\nimport std.math;\n/*\nReturn True if all numbers\
    \ in the list l are below threshold t.\n    >>> below_threshold([1L, 2L, 4L, 10L],\
    \ 100L)\n    true\n    >>> below_threshold([1L, 20L, 4L, 10L], 5L)\n    false\n\
    \    \n*/\nbool below_threshold(long[] l, long t) \n{\n    foreach(long i; l)\n\
    \    {\n        if(i >= t)\n            return false;\n    }\n    return true;\n\
    }\n/*\nReturn True if all numbers in the list l are below threshold t.\n    >>>\
    \ below_threshold([1L, 2L, 4L, 10L], 100L)\n    true\n    >>> below_threshold([1L,\
    \ 20L, 4L, 10L], 5L)\n    false\n    \n*/\nunittest\n{\n    alias candidate =\
    \ below_threshold;\n\n    assert(candidate([1L, 2L, 4L, 10L], 100L) == true);\n\
    \    assert(candidate([1L, 20L, 4L, 10L], 5L) == false);\n    assert(candidate([1L,\
    \ 20L, 4L, 10L], 21L) == true);\n    assert(candidate([1L, 20L, 4L, 10L], 22L)\
    \ == true);\n    assert(candidate([1L, 8L, 4L, 10L], 11L) == true);\n    assert(candidate([1L,\
    \ 8L, 4L, 10L], 10L) == false);\n}\nvoid main(){}"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660163090
- exit_code: 1
  program: "import std.typecons;\nimport std.math;\n/*\nReturn True if all numbers\
    \ in the list l are below threshold t.\n    >>> below_threshold([1L, 2L, 4L, 10L],\
    \ 100L)\n    true\n    >>> below_threshold([1L, 20L, 4L, 10L], 5L)\n    false\n\
    \    \n*/\nbool below_threshold(long[] l, long t) \n{\n    foreach(i; l)\n   \
    \ {\n        if(i > t)\n            return false;\n    }\n    return true;\n}\n\
    unittest\n{\n    alias candidate = below_threshold;\n\n    assert(candidate([1L,\
    \ 2L, 4L, 10L], 100L) == true);\n    assert(candidate([1L, 20L, 4L, 10L], 5L)\
    \ == false);\n    assert(candidate([1L, 20L, 4L, 10L], 21L) == true);\n    assert(candidate([1L,\
    \ 20L, 4L, 10L], 22L) == true);\n    assert(candidate([1L, 8L, 4L, 10L], 11L)\
    \ == true);\n    assert(candidate([1L, 8L, 4L, 10L], 10L) == false);\n}\nvoid\
    \ main(){}"
  status: Exception
  stderr: 'core.exception.AssertError@/tmp/tmpplk4ck84.d(29): unittest failure

    ----------------

    ??:? _d_unittestp [0x4281dd]

    ??:? void tmpplk4ck84.__unittest_L20_C1() [0x427f4b]

    ??:? void tmpplk4ck84.__modtest() [0x427f60]

    ??:? int core.runtime.runModuleUnitTests().__foreachbody2(object.ModuleInfo*)
    [0x42c1c7]

    ??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)).__lambda2(immutable(object.ModuleInfo*))
    [0x42b05a]

    ??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))).__foreachbody2(ref
    rt.sections_elf_shared.DSO) [0x4301ed]

    ??:? int rt.sections_elf_shared.DSO.opApply(scope int delegate(ref rt.sections_elf_shared.DSO))
    [0x43069c]

    ??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*)))
    [0x430179]

    ??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)) [0x42b031]

    ??:? runModuleUnitTests [0x42bf9d]

    ??:? void rt.dmain2._d_run_main(int, char**, extern (C) int function(char[][])*).runAll()
    [0x42862c]

    ??:? void rt.dmain2._d_r'
  stdout: ''
  timestamp: 1660163090
- exit_code: 0
  program: "import std.typecons;\nimport std.math;\n/*\nReturn True if all numbers\
    \ in the list l are below threshold t.\n    >>> below_threshold([1L, 2L, 4L, 10L],\
    \ 100L)\n    true\n    >>> below_threshold([1L, 20L, 4L, 10L], 5L)\n    false\n\
    \    \n*/\nbool below_threshold(long[] l, long t) \n{\n    foreach(long x; l)\n\
    \    {\n        if(x >= t)\n            return false;\n    }\n    return true;\n\
    }\nunittest\n{\n    alias candidate = below_threshold;\n\n    assert(candidate([1L,\
    \ 2L, 4L, 10L], 100L) == true);\n    assert(candidate([1L, 20L, 4L, 10L], 5L)\
    \ == false);\n    assert(candidate([1L, 20L, 4L, 10L], 21L) == true);\n    assert(candidate([1L,\
    \ 20L, 4L, 10L], 22L) == true);\n    assert(candidate([1L, 8L, 4L, 10L], 11L)\
    \ == true);\n    assert(candidate([1L, 8L, 4L, 10L], 10L) == false);\n}\nvoid\
    \ main(){}"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660163090
- exit_code: 1
  program: "import std.typecons;\nimport std.math;\n/*\nReturn True if all numbers\
    \ in the list l are below threshold t.\n    >>> below_threshold([1L, 2L, 4L, 10L],\
    \ 100L)\n    true\n    >>> below_threshold([1L, 20L, 4L, 10L], 5L)\n    false\n\
    \    \n*/\nbool below_threshold(long[] l, long t) \n{\n    foreach(i; l)\n   \
    \ {\n        if(i > t)\n            return false;\n    }\n    return true;\n}\n\
    unittest\n{\n    alias candidate = below_threshold;\n\n    assert(candidate([1L,\
    \ 2L, 4L, 10L], 100L) == true);\n    assert(candidate([1L, 20L, 4L, 10L], 5L)\
    \ == false);\n    assert(candidate([1L, 20L, 4L, 10L], 21L) == true);\n    assert(candidate([1L,\
    \ 20L, 4L, 10L], 22L) == true);\n    assert(candidate([1L, 8L, 4L, 10L], 11L)\
    \ == true);\n    assert(candidate([1L, 8L, 4L, 10L], 10L) == false);\n}\nvoid\
    \ main(){}"
  status: Exception
  stderr: 'core.exception.AssertError@/tmp/tmpplk4ck84.d(29): unittest failure

    ----------------

    ??:? _d_unittestp [0x4281dd]

    ??:? void tmpplk4ck84.__unittest_L20_C1() [0x427f4b]

    ??:? void tmpplk4ck84.__modtest() [0x427f60]

    ??:? int core.runtime.runModuleUnitTests().__foreachbody2(object.ModuleInfo*)
    [0x42c1c7]

    ??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)).__lambda2(immutable(object.ModuleInfo*))
    [0x42b05a]

    ??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))).__foreachbody2(ref
    rt.sections_elf_shared.DSO) [0x4301ed]

    ??:? int rt.sections_elf_shared.DSO.opApply(scope int delegate(ref rt.sections_elf_shared.DSO))
    [0x43069c]

    ??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*)))
    [0x430179]

    ??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)) [0x42b031]

    ??:? runModuleUnitTests [0x42bf9d]

    ??:? void rt.dmain2._d_run_main(int, char**, extern (C) int function(char[][])*).runAll()
    [0x42862c]

    ??:? void rt.dmain2._d_r'
  stdout: ''
  timestamp: 1660163090
- exit_code: 1
  program: "import std.typecons;\nimport std.math;\n/*\nReturn True if all numbers\
    \ in the list l are below threshold t.\n    >>> below_threshold([1L, 2L, 4L, 10L],\
    \ 100L)\n    true\n    >>> below_threshold([1L, 20L, 4L, 10L], 5L)\n    false\n\
    \    \n*/\nbool below_threshold(long[] l, long t) \n{\n    foreach(long i; l)\n\
    \    {\n        if(i > t)\n            return false;\n    }\n    return true;\n\
    }\nunittest\n{\n    alias candidate = below_threshold;\n\n    assert(candidate([1L,\
    \ 2L, 4L, 10L], 100L) == true);\n    assert(candidate([1L, 20L, 4L, 10L], 5L)\
    \ == false);\n    assert(candidate([1L, 20L, 4L, 10L], 21L) == true);\n    assert(candidate([1L,\
    \ 20L, 4L, 10L], 22L) == true);\n    assert(candidate([1L, 8L, 4L, 10L], 11L)\
    \ == true);\n    assert(candidate([1L, 8L, 4L, 10L], 10L) == false);\n}\nvoid\
    \ main(){}"
  status: Exception
  stderr: 'core.exception.AssertError@/tmp/tmpev0f60w0.d(29): unittest failure

    ----------------

    ??:? _d_unittestp [0x4281dd]

    ??:? void tmpev0f60w0.__unittest_L20_C1() [0x427f4b]

    ??:? void tmpev0f60w0.__modtest() [0x427f60]

    ??:? int core.runtime.runModuleUnitTests().__foreachbody2(object.ModuleInfo*)
    [0x42c1c7]

    ??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)).__lambda2(immutable(object.ModuleInfo*))
    [0x42b05a]

    ??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))).__foreachbody2(ref
    rt.sections_elf_shared.DSO) [0x4301ed]

    ??:? int rt.sections_elf_shared.DSO.opApply(scope int delegate(ref rt.sections_elf_shared.DSO))
    [0x43069c]

    ??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*)))
    [0x430179]

    ??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)) [0x42b031]

    ??:? runModuleUnitTests [0x42bf9d]

    ??:? void rt.dmain2._d_run_main(int, char**, extern (C) int function(char[][])*).runAll()
    [0x42862c]

    ??:? void rt.dmain2._d_r'
  stdout: ''
  timestamp: 1660163090
- exit_code: 1
  program: "import std.typecons;\nimport std.math;\n/*\nReturn True if all numbers\
    \ in the list l are below threshold t.\n    >>> below_threshold([1L, 2L, 4L, 10L],\
    \ 100L)\n    true\n    >>> below_threshold([1L, 20L, 4L, 10L], 5L)\n    false\n\
    \    \n*/\nbool below_threshold(long[] l, long t) \n{\n    foreach(i; l)\n   \
    \ {\n        if(i > t)\n            return false;\n    }\n    return true;\n}\n\
    unittest\n{\n    alias candidate = below_threshold;\n\n    assert(candidate([1L,\
    \ 2L, 4L, 10L], 100L) == true);\n    assert(candidate([1L, 20L, 4L, 10L], 5L)\
    \ == false);\n    assert(candidate([1L, 20L, 4L, 10L], 21L) == true);\n    assert(candidate([1L,\
    \ 20L, 4L, 10L], 22L) == true);\n    assert(candidate([1L, 8L, 4L, 10L], 11L)\
    \ == true);\n    assert(candidate([1L, 8L, 4L, 10L], 10L) == false);\n}\nvoid\
    \ main(){}"
  status: Exception
  stderr: 'core.exception.AssertError@/tmp/tmpplk4ck84.d(29): unittest failure

    ----------------

    ??:? _d_unittestp [0x4281dd]

    ??:? void tmpplk4ck84.__unittest_L20_C1() [0x427f4b]

    ??:? void tmpplk4ck84.__modtest() [0x427f60]

    ??:? int core.runtime.runModuleUnitTests().__foreachbody2(object.ModuleInfo*)
    [0x42c1c7]

    ??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)).__lambda2(immutable(object.ModuleInfo*))
    [0x42b05a]

    ??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))).__foreachbody2(ref
    rt.sections_elf_shared.DSO) [0x4301ed]

    ??:? int rt.sections_elf_shared.DSO.opApply(scope int delegate(ref rt.sections_elf_shared.DSO))
    [0x43069c]

    ??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*)))
    [0x430179]

    ??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)) [0x42b031]

    ??:? runModuleUnitTests [0x42bf9d]

    ??:? void rt.dmain2._d_run_main(int, char**, extern (C) int function(char[][])*).runAll()
    [0x42862c]

    ??:? void rt.dmain2._d_r'
  stdout: ''
  timestamp: 1660163090
- exit_code: 1
  program: "import std.typecons;\nimport std.math;\n/*\nReturn True if all numbers\
    \ in the list l are below threshold t.\n    >>> below_threshold([1L, 2L, 4L, 10L],\
    \ 100L)\n    true\n    >>> below_threshold([1L, 20L, 4L, 10L], 5L)\n    false\n\
    \    \n*/\nbool below_threshold(long[] l, long t) \n{\n    foreach(long i; l)\n\
    \    {\n        if(i > t)\n            return false;\n    }\n    return true;\n\
    }\nunittest\n{\n    alias candidate = below_threshold;\n\n    assert(candidate([1L,\
    \ 2L, 4L, 10L], 100L) == true);\n    assert(candidate([1L, 20L, 4L, 10L], 5L)\
    \ == false);\n    assert(candidate([1L, 20L, 4L, 10L], 21L) == true);\n    assert(candidate([1L,\
    \ 20L, 4L, 10L], 22L) == true);\n    assert(candidate([1L, 8L, 4L, 10L], 11L)\
    \ == true);\n    assert(candidate([1L, 8L, 4L, 10L], 10L) == false);\n}\nvoid\
    \ main(){}"
  status: Exception
  stderr: 'core.exception.AssertError@/tmp/tmpev0f60w0.d(29): unittest failure

    ----------------

    ??:? _d_unittestp [0x4281dd]

    ??:? void tmpev0f60w0.__unittest_L20_C1() [0x427f4b]

    ??:? void tmpev0f60w0.__modtest() [0x427f60]

    ??:? int core.runtime.runModuleUnitTests().__foreachbody2(object.ModuleInfo*)
    [0x42c1c7]

    ??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)).__lambda2(immutable(object.ModuleInfo*))
    [0x42b05a]

    ??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))).__foreachbody2(ref
    rt.sections_elf_shared.DSO) [0x4301ed]

    ??:? int rt.sections_elf_shared.DSO.opApply(scope int delegate(ref rt.sections_elf_shared.DSO))
    [0x43069c]

    ??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*)))
    [0x430179]

    ??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)) [0x42b031]

    ??:? runModuleUnitTests [0x42bf9d]

    ??:? void rt.dmain2._d_run_main(int, char**, extern (C) int function(char[][])*).runAll()
    [0x42862c]

    ??:? void rt.dmain2._d_r'
  stdout: ''
  timestamp: 1660163090
- exit_code: 1
  program: "import std.typecons;\nimport std.math;\n/*\nReturn True if all numbers\
    \ in the list l are below threshold t.\n    >>> below_threshold([1L, 2L, 4L, 10L],\
    \ 100L)\n    true\n    >>> below_threshold([1L, 20L, 4L, 10L], 5L)\n    false\n\
    \    \n*/\nbool below_threshold(long[] l, long t) \n{\n    foreach(i; l)\n   \
    \ {\n        if(i > t)\n            return false;\n    }\n    return true;\n}\n\
    unittest\n{\n    alias candidate = below_threshold;\n\n    assert(candidate([1L,\
    \ 2L, 4L, 10L], 100L) == true);\n    assert(candidate([1L, 20L, 4L, 10L], 5L)\
    \ == false);\n    assert(candidate([1L, 20L, 4L, 10L], 21L) == true);\n    assert(candidate([1L,\
    \ 20L, 4L, 10L], 22L) == true);\n    assert(candidate([1L, 8L, 4L, 10L], 11L)\
    \ == true);\n    assert(candidate([1L, 8L, 4L, 10L], 10L) == false);\n}\nvoid\
    \ main(){}"
  status: Exception
  stderr: 'core.exception.AssertError@/tmp/tmpplk4ck84.d(29): unittest failure

    ----------------

    ??:? _d_unittestp [0x4281dd]

    ??:? void tmpplk4ck84.__unittest_L20_C1() [0x427f4b]

    ??:? void tmpplk4ck84.__modtest() [0x427f60]

    ??:? int core.runtime.runModuleUnitTests().__foreachbody2(object.ModuleInfo*)
    [0x42c1c7]

    ??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)).__lambda2(immutable(object.ModuleInfo*))
    [0x42b05a]

    ??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))).__foreachbody2(ref
    rt.sections_elf_shared.DSO) [0x4301ed]

    ??:? int rt.sections_elf_shared.DSO.opApply(scope int delegate(ref rt.sections_elf_shared.DSO))
    [0x43069c]

    ??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*)))
    [0x430179]

    ??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)) [0x42b031]

    ??:? runModuleUnitTests [0x42bf9d]

    ??:? void rt.dmain2._d_run_main(int, char**, extern (C) int function(char[][])*).runAll()
    [0x42862c]

    ??:? void rt.dmain2._d_r'
  stdout: ''
  timestamp: 1660163090
- exit_code: 1
  program: "import std.typecons;\nimport std.math;\n/*\nReturn True if all numbers\
    \ in the list l are below threshold t.\n    >>> below_threshold([1L, 2L, 4L, 10L],\
    \ 100L)\n    true\n    >>> below_threshold([1L, 20L, 4L, 10L], 5L)\n    false\n\
    \    \n*/\nbool below_threshold(long[] l, long t) \n{\n    foreach(i; l)\n   \
    \ {\n        if(i > t)\n            return false;\n    }\n    return true;\n}\n\
    unittest\n{\n    alias candidate = below_threshold;\n\n    assert(candidate([1L,\
    \ 2L, 4L, 10L], 100L) == true);\n    assert(candidate([1L, 20L, 4L, 10L], 5L)\
    \ == false);\n    assert(candidate([1L, 20L, 4L, 10L], 21L) == true);\n    assert(candidate([1L,\
    \ 20L, 4L, 10L], 22L) == true);\n    assert(candidate([1L, 8L, 4L, 10L], 11L)\
    \ == true);\n    assert(candidate([1L, 8L, 4L, 10L], 10L) == false);\n}\nvoid\
    \ main(){}"
  status: Exception
  stderr: 'core.exception.AssertError@/tmp/tmpplk4ck84.d(29): unittest failure

    ----------------

    ??:? _d_unittestp [0x4281dd]

    ??:? void tmpplk4ck84.__unittest_L20_C1() [0x427f4b]

    ??:? void tmpplk4ck84.__modtest() [0x427f60]

    ??:? int core.runtime.runModuleUnitTests().__foreachbody2(object.ModuleInfo*)
    [0x42c1c7]

    ??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)).__lambda2(immutable(object.ModuleInfo*))
    [0x42b05a]

    ??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))).__foreachbody2(ref
    rt.sections_elf_shared.DSO) [0x4301ed]

    ??:? int rt.sections_elf_shared.DSO.opApply(scope int delegate(ref rt.sections_elf_shared.DSO))
    [0x43069c]

    ??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*)))
    [0x430179]

    ??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)) [0x42b031]

    ??:? runModuleUnitTests [0x42bf9d]

    ??:? void rt.dmain2._d_run_main(int, char**, extern (C) int function(char[][])*).runAll()
    [0x42862c]

    ??:? void rt.dmain2._d_r'
  stdout: ''
  timestamp: 1660163090
- exit_code: 1
  program: "import std.typecons;\nimport std.math;\n/*\nReturn True if all numbers\
    \ in the list l are below threshold t.\n    >>> below_threshold([1L, 2L, 4L, 10L],\
    \ 100L)\n    true\n    >>> below_threshold([1L, 20L, 4L, 10L], 5L)\n    false\n\
    \    \n*/\nbool below_threshold(long[] l, long t) \n{\n    foreach(i; l)\n   \
    \ {\n        if(i > t)\n            return false;\n    }\n    return true;\n}\n\
    unittest\n{\n    alias candidate = below_threshold;\n\n    assert(candidate([1L,\
    \ 2L, 4L, 10L], 100L) == true);\n    assert(candidate([1L, 20L, 4L, 10L], 5L)\
    \ == false);\n    assert(candidate([1L, 20L, 4L, 10L], 21L) == true);\n    assert(candidate([1L,\
    \ 20L, 4L, 10L], 22L) == true);\n    assert(candidate([1L, 8L, 4L, 10L], 11L)\
    \ == true);\n    assert(candidate([1L, 8L, 4L, 10L], 10L) == false);\n}\nvoid\
    \ main(){}"
  status: Exception
  stderr: 'core.exception.AssertError@/tmp/tmpplk4ck84.d(29): unittest failure

    ----------------

    ??:? _d_unittestp [0x4281dd]

    ??:? void tmpplk4ck84.__unittest_L20_C1() [0x427f4b]

    ??:? void tmpplk4ck84.__modtest() [0x427f60]

    ??:? int core.runtime.runModuleUnitTests().__foreachbody2(object.ModuleInfo*)
    [0x42c1c7]

    ??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)).__lambda2(immutable(object.ModuleInfo*))
    [0x42b05a]

    ??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))).__foreachbody2(ref
    rt.sections_elf_shared.DSO) [0x4301ed]

    ??:? int rt.sections_elf_shared.DSO.opApply(scope int delegate(ref rt.sections_elf_shared.DSO))
    [0x43069c]

    ??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*)))
    [0x430179]

    ??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)) [0x42b031]

    ??:? runModuleUnitTests [0x42bf9d]

    ??:? void rt.dmain2._d_run_main(int, char**, extern (C) int function(char[][])*).runAll()
    [0x42862c]

    ??:? void rt.dmain2._d_r'
  stdout: ''
  timestamp: 1660163090
- exit_code: 1
  program: "import std.typecons;\nimport std.math;\n/*\nReturn True if all numbers\
    \ in the list l are below threshold t.\n    >>> below_threshold([1L, 2L, 4L, 10L],\
    \ 100L)\n    true\n    >>> below_threshold([1L, 20L, 4L, 10L], 5L)\n    false\n\
    \    \n*/\nbool below_threshold(long[] l, long t) \n{\n    foreach(i; l)\n   \
    \ {\n        if(i > t)\n            return false;\n    }\n    return true;\n}\n\
    unittest\n{\n    alias candidate = below_threshold;\n\n    assert(candidate([1L,\
    \ 2L, 4L, 10L], 100L) == true);\n    assert(candidate([1L, 20L, 4L, 10L], 5L)\
    \ == false);\n    assert(candidate([1L, 20L, 4L, 10L], 21L) == true);\n    assert(candidate([1L,\
    \ 20L, 4L, 10L], 22L) == true);\n    assert(candidate([1L, 8L, 4L, 10L], 11L)\
    \ == true);\n    assert(candidate([1L, 8L, 4L, 10L], 10L) == false);\n}\nvoid\
    \ main(){}"
  status: Exception
  stderr: 'core.exception.AssertError@/tmp/tmpplk4ck84.d(29): unittest failure

    ----------------

    ??:? _d_unittestp [0x4281dd]

    ??:? void tmpplk4ck84.__unittest_L20_C1() [0x427f4b]

    ??:? void tmpplk4ck84.__modtest() [0x427f60]

    ??:? int core.runtime.runModuleUnitTests().__foreachbody2(object.ModuleInfo*)
    [0x42c1c7]

    ??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)).__lambda2(immutable(object.ModuleInfo*))
    [0x42b05a]

    ??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))).__foreachbody2(ref
    rt.sections_elf_shared.DSO) [0x4301ed]

    ??:? int rt.sections_elf_shared.DSO.opApply(scope int delegate(ref rt.sections_elf_shared.DSO))
    [0x43069c]

    ??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*)))
    [0x430179]

    ??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)) [0x42b031]

    ??:? runModuleUnitTests [0x42bf9d]

    ??:? void rt.dmain2._d_run_main(int, char**, extern (C) int function(char[][])*).runAll()
    [0x42862c]

    ??:? void rt.dmain2._d_r'
  stdout: ''
  timestamp: 1660163090
- exit_code: 0
  program: "import std.typecons;\nimport std.math;\n/*\nReturn True if all numbers\
    \ in the list l are below threshold t.\n    >>> below_threshold([1L, 2L, 4L, 10L],\
    \ 100L)\n    true\n    >>> below_threshold([1L, 20L, 4L, 10L], 5L)\n    false\n\
    \    \n*/\nbool below_threshold(long[] l, long t) \n{\n    foreach(long i; l)\n\
    \    {\n        if(i >= t)\n            return false;\n    }\n    return true;\n\
    }\nunittest\n{\n    alias candidate = below_threshold;\n\n    assert(candidate([1L,\
    \ 2L, 4L, 10L], 100L) == true);\n    assert(candidate([1L, 20L, 4L, 10L], 5L)\
    \ == false);\n    assert(candidate([1L, 20L, 4L, 10L], 21L) == true);\n    assert(candidate([1L,\
    \ 20L, 4L, 10L], 22L) == true);\n    assert(candidate([1L, 8L, 4L, 10L], 11L)\
    \ == true);\n    assert(candidate([1L, 8L, 4L, 10L], 10L) == false);\n}\nvoid\
    \ main(){}"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660163090
- exit_code: 1
  program: "import std.typecons;\nimport std.math;\n/*\nReturn True if all numbers\
    \ in the list l are below threshold t.\n    >>> below_threshold([1L, 2L, 4L, 10L],\
    \ 100L)\n    true\n    >>> below_threshold([1L, 20L, 4L, 10L], 5L)\n    false\n\
    \    \n*/\nbool below_threshold(long[] l, long t) \n{\n    foreach(long i; l)\n\
    \    {\n        if(i > t)\n            return false;\n    }\n    return true;\n\
    }\nunittest\n{\n    alias candidate = below_threshold;\n\n    assert(candidate([1L,\
    \ 2L, 4L, 10L], 100L) == true);\n    assert(candidate([1L, 20L, 4L, 10L], 5L)\
    \ == false);\n    assert(candidate([1L, 20L, 4L, 10L], 21L) == true);\n    assert(candidate([1L,\
    \ 20L, 4L, 10L], 22L) == true);\n    assert(candidate([1L, 8L, 4L, 10L], 11L)\
    \ == true);\n    assert(candidate([1L, 8L, 4L, 10L], 10L) == false);\n}\nvoid\
    \ main(){}"
  status: Exception
  stderr: 'core.exception.AssertError@/tmp/tmpev0f60w0.d(29): unittest failure

    ----------------

    ??:? _d_unittestp [0x4281dd]

    ??:? void tmpev0f60w0.__unittest_L20_C1() [0x427f4b]

    ??:? void tmpev0f60w0.__modtest() [0x427f60]

    ??:? int core.runtime.runModuleUnitTests().__foreachbody2(object.ModuleInfo*)
    [0x42c1c7]

    ??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)).__lambda2(immutable(object.ModuleInfo*))
    [0x42b05a]

    ??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))).__foreachbody2(ref
    rt.sections_elf_shared.DSO) [0x4301ed]

    ??:? int rt.sections_elf_shared.DSO.opApply(scope int delegate(ref rt.sections_elf_shared.DSO))
    [0x43069c]

    ??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*)))
    [0x430179]

    ??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)) [0x42b031]

    ??:? runModuleUnitTests [0x42bf9d]

    ??:? void rt.dmain2._d_run_main(int, char**, extern (C) int function(char[][])*).runAll()
    [0x42862c]

    ??:? void rt.dmain2._d_r'
  stdout: ''
  timestamp: 1660163090
- exit_code: 1
  program: "import std.typecons;\nimport std.math;\n/*\nReturn True if all numbers\
    \ in the list l are below threshold t.\n    >>> below_threshold([1L, 2L, 4L, 10L],\
    \ 100L)\n    true\n    >>> below_threshold([1L, 20L, 4L, 10L], 5L)\n    false\n\
    \    \n*/\nbool below_threshold(long[] l, long t) \n{\n    foreach(i; l)\n   \
    \ {\n        if(i > t)\n            return false;\n    }\n    return true;\n}\n\
    unittest\n{\n    alias candidate = below_threshold;\n\n    assert(candidate([1L,\
    \ 2L, 4L, 10L], 100L) == true);\n    assert(candidate([1L, 20L, 4L, 10L], 5L)\
    \ == false);\n    assert(candidate([1L, 20L, 4L, 10L], 21L) == true);\n    assert(candidate([1L,\
    \ 20L, 4L, 10L], 22L) == true);\n    assert(candidate([1L, 8L, 4L, 10L], 11L)\
    \ == true);\n    assert(candidate([1L, 8L, 4L, 10L], 10L) == false);\n}\nvoid\
    \ main(){}"
  status: Exception
  stderr: 'core.exception.AssertError@/tmp/tmpplk4ck84.d(29): unittest failure

    ----------------

    ??:? _d_unittestp [0x4281dd]

    ??:? void tmpplk4ck84.__unittest_L20_C1() [0x427f4b]

    ??:? void tmpplk4ck84.__modtest() [0x427f60]

    ??:? int core.runtime.runModuleUnitTests().__foreachbody2(object.ModuleInfo*)
    [0x42c1c7]

    ??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)).__lambda2(immutable(object.ModuleInfo*))
    [0x42b05a]

    ??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))).__foreachbody2(ref
    rt.sections_elf_shared.DSO) [0x4301ed]

    ??:? int rt.sections_elf_shared.DSO.opApply(scope int delegate(ref rt.sections_elf_shared.DSO))
    [0x43069c]

    ??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*)))
    [0x430179]

    ??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)) [0x42b031]

    ??:? runModuleUnitTests [0x42bf9d]

    ??:? void rt.dmain2._d_run_main(int, char**, extern (C) int function(char[][])*).runAll()
    [0x42862c]

    ??:? void rt.dmain2._d_r'
  stdout: ''
  timestamp: 1660163090
- exit_code: 0
  program: "import std.typecons;\nimport std.math;\n/*\nReturn True if all numbers\
    \ in the list l are below threshold t.\n    >>> below_threshold([1L, 2L, 4L, 10L],\
    \ 100L)\n    true\n    >>> below_threshold([1L, 20L, 4L, 10L], 5L)\n    false\n\
    \    \n*/\nbool below_threshold(long[] l, long t) \n{\n    foreach(i; l)\n   \
    \ {\n        if(i >= t)\n            return false;\n    }\n    return true;\n\
    }\nunittest\n{\n    alias candidate = below_threshold;\n\n    assert(candidate([1L,\
    \ 2L, 4L, 10L], 100L) == true);\n    assert(candidate([1L, 20L, 4L, 10L], 5L)\
    \ == false);\n    assert(candidate([1L, 20L, 4L, 10L], 21L) == true);\n    assert(candidate([1L,\
    \ 20L, 4L, 10L], 22L) == true);\n    assert(candidate([1L, 8L, 4L, 10L], 11L)\
    \ == true);\n    assert(candidate([1L, 8L, 4L, 10L], 10L) == false);\n}\nvoid\
    \ main(){}"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660163090
- exit_code: 1
  program: "import std.typecons;\nimport std.math;\n/*\nReturn True if all numbers\
    \ in the list l are below threshold t.\n    >>> below_threshold([1L, 2L, 4L, 10L],\
    \ 100L)\n    true\n    >>> below_threshold([1L, 20L, 4L, 10L], 5L)\n    false\n\
    \    \n*/\nbool below_threshold(long[] l, long t) \n{\n    foreach(i; l)\n   \
    \ {\n        if(i > t)\n            return false;\n    }\n    return true;\n}\n\
    unittest\n{\n    alias candidate = below_threshold;\n\n    assert(candidate([1L,\
    \ 2L, 4L, 10L], 100L) == true);\n    assert(candidate([1L, 20L, 4L, 10L], 5L)\
    \ == false);\n    assert(candidate([1L, 20L, 4L, 10L], 21L) == true);\n    assert(candidate([1L,\
    \ 20L, 4L, 10L], 22L) == true);\n    assert(candidate([1L, 8L, 4L, 10L], 11L)\
    \ == true);\n    assert(candidate([1L, 8L, 4L, 10L], 10L) == false);\n}\nvoid\
    \ main(){}"
  status: Exception
  stderr: 'core.exception.AssertError@/tmp/tmpplk4ck84.d(29): unittest failure

    ----------------

    ??:? _d_unittestp [0x4281dd]

    ??:? void tmpplk4ck84.__unittest_L20_C1() [0x427f4b]

    ??:? void tmpplk4ck84.__modtest() [0x427f60]

    ??:? int core.runtime.runModuleUnitTests().__foreachbody2(object.ModuleInfo*)
    [0x42c1c7]

    ??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)).__lambda2(immutable(object.ModuleInfo*))
    [0x42b05a]

    ??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))).__foreachbody2(ref
    rt.sections_elf_shared.DSO) [0x4301ed]

    ??:? int rt.sections_elf_shared.DSO.opApply(scope int delegate(ref rt.sections_elf_shared.DSO))
    [0x43069c]

    ??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*)))
    [0x430179]

    ??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)) [0x42b031]

    ??:? runModuleUnitTests [0x42bf9d]

    ??:? void rt.dmain2._d_run_main(int, char**, extern (C) int function(char[][])*).runAll()
    [0x42862c]

    ??:? void rt.dmain2._d_r'
  stdout: ''
  timestamp: 1660163090
- exit_code: 1
  program: "import std.typecons;\nimport std.math;\n/*\nReturn True if all numbers\
    \ in the list l are below threshold t.\n    >>> below_threshold([1L, 2L, 4L, 10L],\
    \ 100L)\n    true\n    >>> below_threshold([1L, 20L, 4L, 10L], 5L)\n    false\n\
    \    \n*/\nbool below_threshold(long[] l, long t) \n{\n    foreach(i; l)\n   \
    \ {\n        if(i > t)\n            return false;\n    }\n    return true;\n}\n\
    unittest\n{\n    alias candidate = below_threshold;\n\n    assert(candidate([1L,\
    \ 2L, 4L, 10L], 100L) == true);\n    assert(candidate([1L, 20L, 4L, 10L], 5L)\
    \ == false);\n    assert(candidate([1L, 20L, 4L, 10L], 21L) == true);\n    assert(candidate([1L,\
    \ 20L, 4L, 10L], 22L) == true);\n    assert(candidate([1L, 8L, 4L, 10L], 11L)\
    \ == true);\n    assert(candidate([1L, 8L, 4L, 10L], 10L) == false);\n}\nvoid\
    \ main(){}"
  status: Exception
  stderr: 'core.exception.AssertError@/tmp/tmpplk4ck84.d(29): unittest failure

    ----------------

    ??:? _d_unittestp [0x4281dd]

    ??:? void tmpplk4ck84.__unittest_L20_C1() [0x427f4b]

    ??:? void tmpplk4ck84.__modtest() [0x427f60]

    ??:? int core.runtime.runModuleUnitTests().__foreachbody2(object.ModuleInfo*)
    [0x42c1c7]

    ??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)).__lambda2(immutable(object.ModuleInfo*))
    [0x42b05a]

    ??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))).__foreachbody2(ref
    rt.sections_elf_shared.DSO) [0x4301ed]

    ??:? int rt.sections_elf_shared.DSO.opApply(scope int delegate(ref rt.sections_elf_shared.DSO))
    [0x43069c]

    ??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*)))
    [0x430179]

    ??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)) [0x42b031]

    ??:? runModuleUnitTests [0x42bf9d]

    ??:? void rt.dmain2._d_run_main(int, char**, extern (C) int function(char[][])*).runAll()
    [0x42862c]

    ??:? void rt.dmain2._d_r'
  stdout: ''
  timestamp: 1660163090
- exit_code: 0
  program: "import std.typecons;\nimport std.math;\n/*\nReturn True if all numbers\
    \ in the list l are below threshold t.\n    >>> below_threshold([1L, 2L, 4L, 10L],\
    \ 100L)\n    true\n    >>> below_threshold([1L, 20L, 4L, 10L], 5L)\n    false\n\
    \    \n*/\nbool below_threshold(long[] l, long t) \n{\n    foreach(long x; l)\n\
    \    {\n        if(x >= t)\n            return false;\n    }\n    return true;\n\
    }\nunittest\n{\n    alias candidate = below_threshold;\n\n    assert(candidate([1L,\
    \ 2L, 4L, 10L], 100L) == true);\n    assert(candidate([1L, 20L, 4L, 10L], 5L)\
    \ == false);\n    assert(candidate([1L, 20L, 4L, 10L], 21L) == true);\n    assert(candidate([1L,\
    \ 20L, 4L, 10L], 22L) == true);\n    assert(candidate([1L, 8L, 4L, 10L], 11L)\
    \ == true);\n    assert(candidate([1L, 8L, 4L, 10L], 10L) == false);\n}\nvoid\
    \ main(){}"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660163090
- exit_code: 0
  program: "import std.typecons;\nimport std.math;\n/*\nReturn True if all numbers\
    \ in the list l are below threshold t.\n    >>> below_threshold([1L, 2L, 4L, 10L],\
    \ 100L)\n    true\n    >>> below_threshold([1L, 20L, 4L, 10L], 5L)\n    false\n\
    \    \n*/\nbool below_threshold(long[] l, long t) \n{\n    foreach(long x; l)\n\
    \    {\n        if(x >= t)\n            return false;\n    }\n    return true;\n\
    }\nunittest\n{\n    alias candidate = below_threshold;\n\n    assert(candidate([1L,\
    \ 2L, 4L, 10L], 100L) == true);\n    assert(candidate([1L, 20L, 4L, 10L], 5L)\
    \ == false);\n    assert(candidate([1L, 20L, 4L, 10L], 21L) == true);\n    assert(candidate([1L,\
    \ 20L, 4L, 10L], 22L) == true);\n    assert(candidate([1L, 8L, 4L, 10L], 11L)\
    \ == true);\n    assert(candidate([1L, 8L, 4L, 10L], 10L) == false);\n}\nvoid\
    \ main(){}"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660163090
- exit_code: 1
  program: "import std.typecons;\nimport std.math;\n/*\nReturn True if all numbers\
    \ in the list l are below threshold t.\n    >>> below_threshold([1L, 2L, 4L, 10L],\
    \ 100L)\n    true\n    >>> below_threshold([1L, 20L, 4L, 10L], 5L)\n    false\n\
    \    \n*/\nbool below_threshold(long[] l, long t) \n{\n    foreach(long i; l)\n\
    \    {\n        if(i > t)\n            return false;\n    }\n    return true;\n\
    }\nunittest\n{\n    alias candidate = below_threshold;\n\n    assert(candidate([1L,\
    \ 2L, 4L, 10L], 100L) == true);\n    assert(candidate([1L, 20L, 4L, 10L], 5L)\
    \ == false);\n    assert(candidate([1L, 20L, 4L, 10L], 21L) == true);\n    assert(candidate([1L,\
    \ 20L, 4L, 10L], 22L) == true);\n    assert(candidate([1L, 8L, 4L, 10L], 11L)\
    \ == true);\n    assert(candidate([1L, 8L, 4L, 10L], 10L) == false);\n}\nvoid\
    \ main(){}"
  status: Exception
  stderr: 'core.exception.AssertError@/tmp/tmpev0f60w0.d(29): unittest failure

    ----------------

    ??:? _d_unittestp [0x4281dd]

    ??:? void tmpev0f60w0.__unittest_L20_C1() [0x427f4b]

    ??:? void tmpev0f60w0.__modtest() [0x427f60]

    ??:? int core.runtime.runModuleUnitTests().__foreachbody2(object.ModuleInfo*)
    [0x42c1c7]

    ??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)).__lambda2(immutable(object.ModuleInfo*))
    [0x42b05a]

    ??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))).__foreachbody2(ref
    rt.sections_elf_shared.DSO) [0x4301ed]

    ??:? int rt.sections_elf_shared.DSO.opApply(scope int delegate(ref rt.sections_elf_shared.DSO))
    [0x43069c]

    ??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*)))
    [0x430179]

    ??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)) [0x42b031]

    ??:? runModuleUnitTests [0x42bf9d]

    ??:? void rt.dmain2._d_run_main(int, char**, extern (C) int function(char[][])*).runAll()
    [0x42862c]

    ??:? void rt.dmain2._d_r'
  stdout: ''
  timestamp: 1660163090
- exit_code: 1
  program: "import std.typecons;\nimport std.math;\n/*\nReturn True if all numbers\
    \ in the list l are below threshold t.\n    >>> below_threshold([1L, 2L, 4L, 10L],\
    \ 100L)\n    true\n    >>> below_threshold([1L, 20L, 4L, 10L], 5L)\n    false\n\
    \    \n*/\nbool below_threshold(long[] l, long t) \n{\n    foreach(i; l)\n   \
    \ {\n        if(i > t)\n            return false;\n    }\n    return true;\n}\n\
    unittest\n{\n    alias candidate = below_threshold;\n\n    assert(candidate([1L,\
    \ 2L, 4L, 10L], 100L) == true);\n    assert(candidate([1L, 20L, 4L, 10L], 5L)\
    \ == false);\n    assert(candidate([1L, 20L, 4L, 10L], 21L) == true);\n    assert(candidate([1L,\
    \ 20L, 4L, 10L], 22L) == true);\n    assert(candidate([1L, 8L, 4L, 10L], 11L)\
    \ == true);\n    assert(candidate([1L, 8L, 4L, 10L], 10L) == false);\n}\nvoid\
    \ main(){}"
  status: Exception
  stderr: 'core.exception.AssertError@/tmp/tmpplk4ck84.d(29): unittest failure

    ----------------

    ??:? _d_unittestp [0x4281dd]

    ??:? void tmpplk4ck84.__unittest_L20_C1() [0x427f4b]

    ??:? void tmpplk4ck84.__modtest() [0x427f60]

    ??:? int core.runtime.runModuleUnitTests().__foreachbody2(object.ModuleInfo*)
    [0x42c1c7]

    ??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)).__lambda2(immutable(object.ModuleInfo*))
    [0x42b05a]

    ??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))).__foreachbody2(ref
    rt.sections_elf_shared.DSO) [0x4301ed]

    ??:? int rt.sections_elf_shared.DSO.opApply(scope int delegate(ref rt.sections_elf_shared.DSO))
    [0x43069c]

    ??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*)))
    [0x430179]

    ??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)) [0x42b031]

    ??:? runModuleUnitTests [0x42bf9d]

    ??:? void rt.dmain2._d_run_main(int, char**, extern (C) int function(char[][])*).runAll()
    [0x42862c]

    ??:? void rt.dmain2._d_r'
  stdout: ''
  timestamp: 1660163090
- exit_code: 1
  program: "import std.typecons;\nimport std.math;\n/*\nReturn True if all numbers\
    \ in the list l are below threshold t.\n    >>> below_threshold([1L, 2L, 4L, 10L],\
    \ 100L)\n    true\n    >>> below_threshold([1L, 20L, 4L, 10L], 5L)\n    false\n\
    \    \n*/\nbool below_threshold(long[] l, long t) \n{\n    foreach(long x; l)\n\
    \    {\n        if(x > t)\n            return false;\n    }\n    return true;\n\
    }\nunittest\n{\n    alias candidate = below_threshold;\n\n    assert(candidate([1L,\
    \ 2L, 4L, 10L], 100L) == true);\n    assert(candidate([1L, 20L, 4L, 10L], 5L)\
    \ == false);\n    assert(candidate([1L, 20L, 4L, 10L], 21L) == true);\n    assert(candidate([1L,\
    \ 20L, 4L, 10L], 22L) == true);\n    assert(candidate([1L, 8L, 4L, 10L], 11L)\
    \ == true);\n    assert(candidate([1L, 8L, 4L, 10L], 10L) == false);\n}\nvoid\
    \ main(){}"
  status: Exception
  stderr: 'core.exception.AssertError@/tmp/tmpx_fvps4k.d(29): unittest failure

    ----------------

    ??:? _d_unittestp [0x4281dd]

    ??:? void tmpx_fvps4k.__unittest_L20_C1() [0x427f4b]

    ??:? void tmpx_fvps4k.__modtest() [0x427f60]

    ??:? int core.runtime.runModuleUnitTests().__foreachbody2(object.ModuleInfo*)
    [0x42c1c7]

    ??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)).__lambda2(immutable(object.ModuleInfo*))
    [0x42b05a]

    ??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))).__foreachbody2(ref
    rt.sections_elf_shared.DSO) [0x4301ed]

    ??:? int rt.sections_elf_shared.DSO.opApply(scope int delegate(ref rt.sections_elf_shared.DSO))
    [0x43069c]

    ??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*)))
    [0x430179]

    ??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)) [0x42b031]

    ??:? runModuleUnitTests [0x42bf9d]

    ??:? void rt.dmain2._d_run_main(int, char**, extern (C) int function(char[][])*).runAll()
    [0x42862c]

    ??:? void rt.dmain2._d_r'
  stdout: ''
  timestamp: 1660163090
- exit_code: 1
  program: "import std.typecons;\nimport std.math;\n/*\nReturn True if all numbers\
    \ in the list l are below threshold t.\n    >>> below_threshold([1L, 2L, 4L, 10L],\
    \ 100L)\n    true\n    >>> below_threshold([1L, 20L, 4L, 10L], 5L)\n    false\n\
    \    \n*/\nbool below_threshold(long[] l, long t) \n{\n    foreach(i; l)\n   \
    \ {\n        if(i > t)\n            return false;\n    }\n    return true;\n}\n\
    /*\nReturn True if all numbers in the list l are below threshold t.\n    >>> below_threshold([1L,\
    \ 2L, 4L, 10L], 100L)\n    true\n    >>> below_threshold([1L, 20L, 4L, 10L], 5L)\n\
    \    false\n    \n*/\nunittest\n{\n    alias candidate = below_threshold;\n\n\
    \    assert(candidate([1L, 2L, 4L, 10L], 100L) == true);\n    assert(candidate([1L,\
    \ 20L, 4L, 10L], 5L) == false);\n    assert(candidate([1L, 20L, 4L, 10L], 21L)\
    \ == true);\n    assert(candidate([1L, 20L, 4L, 10L], 22L) == true);\n    assert(candidate([1L,\
    \ 8L, 4L, 10L], 11L) == true);\n    assert(candidate([1L, 8L, 4L, 10L], 10L) ==\
    \ false);\n}\nvoid main(){}"
  status: Exception
  stderr: 'core.exception.AssertError@/tmp/tmp_wlgu24n.d(37): unittest failure

    ----------------

    ??:? _d_unittestp [0x4281dd]

    ??:? void tmp_wlgu24n.__unittest_L28_C1() [0x427f4b]

    ??:? void tmp_wlgu24n.__modtest() [0x427f60]

    ??:? int core.runtime.runModuleUnitTests().__foreachbody2(object.ModuleInfo*)
    [0x42c1c7]

    ??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)).__lambda2(immutable(object.ModuleInfo*))
    [0x42b05a]

    ??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))).__foreachbody2(ref
    rt.sections_elf_shared.DSO) [0x4301ed]

    ??:? int rt.sections_elf_shared.DSO.opApply(scope int delegate(ref rt.sections_elf_shared.DSO))
    [0x43069c]

    ??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*)))
    [0x430179]

    ??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)) [0x42b031]

    ??:? runModuleUnitTests [0x42bf9d]

    ??:? void rt.dmain2._d_run_main(int, char**, extern (C) int function(char[][])*).runAll()
    [0x42862c]

    ??:? void rt.dmain2._d_r'
  stdout: ''
  timestamp: 1660163090
- exit_code: 1
  program: "import std.typecons;\nimport std.math;\n/*\nReturn True if all numbers\
    \ in the list l are below threshold t.\n    >>> below_threshold([1L, 2L, 4L, 10L],\
    \ 100L)\n    true\n    >>> below_threshold([1L, 20L, 4L, 10L], 5L)\n    false\n\
    \    \n*/\nbool below_threshold(long[] l, long t) \n{\n    foreach(long x; l)\n\
    \    {\n        if(x >= t)\n            return false;\n    }\n    return true;\n\
    }\n/*\nReturn the number of elements in the list l that are below threshold t.\n\
    \    >>> count_below_threshold([1L, 2L, 4L, 10L], 100L)\n    4\n    >>> count_below_threshold([1L,\
    \ 20L, 4L, 10L], 5L)\n    2\n*/\nlong count_below_threshold(long[] l, long t)\
    \ \n{\n    long count = 0;\n    foreach(long x; l)\n    {\n        if(x < t)\n\
    \            count++;\n    }\n    return count;\n}\n/*\nReturn the number of elements\
    \ in the list l that are below threshold t.\n    >>> count_below_threshold([1L,\
    \ 2L, 4L, 10L], 100L)\n    4\n    >>> count_below_threshold([1L, 20L, 4L, 10L],\
    \ 5L)\n    2\n*/\nlong count_below_threshold_2(long[] l, long t) \n{\n    long\
    \ count = 0;\n    foreach(long x; l)\n    {\n        if(x < t)\n            count++;\n\
    \    }\n    return count;\n}\n/*\nReturn the number of elements in the list l\
    \ that are below threshold t.\n    >>> count_below_threshold([1L, 2L, 4L, 10L],\
    \ 100L)\n    4\n    >>> count_below_threshold([1L, 20L, 4L, 10L], 5L)\n    2\n\
    */\nlong count_below_threshold_3(long[] l, long t) \n{\n    long count = 0;\n\
    \    foreach(long x; l)\n    {\n        if(x < t)\n            count++;\n    }\n\
    \    return count;\n}\n/*\nReturn the number of elements in the list l that are\
    \ below threshold t.\n    >>> count_below_threshold([1L, 2L, 4L, 10L], 100L)\n\
    \    4\n    >>> count_below_threshold([1L,\nunittest\n{\n    alias candidate =\
    \ below_threshold;\n\n    assert(candidate([1L, 2L, 4L, 10L], 100L) == true);\n\
    \    assert(candidate([1L, 20L, 4L, 10L], 5L) == false);\n    assert(candidate([1L,\
    \ 20L, 4L, 10L], 21L) == true);\n    assert(candidate([1L, 20L, 4L, 10L], 22L)\
    \ == true);\n    assert(candidate([1L, 8L, 4L, 10L], 11L) == true);\n    assert(candidate([1L,\
    \ 8L, 4L, 10L], 10L) == false);\n}\nvoid main(){}"
  status: SyntaxError
  stderr: '/tmp/tmp3za7ok8a.d(71): Error: unterminated /* */ comment

    Failed: ["dmd", "-unittest", "-v", "-o-", "/tmp/tmp3za7ok8a.d", "-I/tmp"]

    '
  stdout: ''
  timestamp: 1660163090
- exit_code: 0
  program: "import std.typecons;\nimport std.math;\n/*\nReturn True if all numbers\
    \ in the list l are below threshold t.\n    >>> below_threshold([1L, 2L, 4L, 10L],\
    \ 100L)\n    true\n    >>> below_threshold([1L, 20L, 4L, 10L], 5L)\n    false\n\
    \    \n*/\nbool below_threshold(long[] l, long t) \n{\n    foreach(long x; l)\n\
    \    {\n        if(x >= t)\n            return false;\n    }\n    return true;\n\
    }\nunittest\n{\n    alias candidate = below_threshold;\n\n    assert(candidate([1L,\
    \ 2L, 4L, 10L], 100L) == true);\n    assert(candidate([1L, 20L, 4L, 10L], 5L)\
    \ == false);\n    assert(candidate([1L, 20L, 4L, 10L], 21L) == true);\n    assert(candidate([1L,\
    \ 20L, 4L, 10L], 22L) == true);\n    assert(candidate([1L, 8L, 4L, 10L], 11L)\
    \ == true);\n    assert(candidate([1L, 8L, 4L, 10L], 10L) == false);\n}\nvoid\
    \ main(){}"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660163090
- exit_code: 1
  program: "import std.typecons;\nimport std.math;\n/*\nReturn True if all numbers\
    \ in the list l are below threshold t.\n    >>> below_threshold([1L, 2L, 4L, 10L],\
    \ 100L)\n    true\n    >>> below_threshold([1L, 20L, 4L, 10L], 5L)\n    false\n\
    \    \n*/\nbool below_threshold(long[] l, long t) \n{\n    foreach(long i; l)\n\
    \    {\n        if(i > t)\n            return false;\n    }\n    return true;\n\
    }\n/*\nReturn the number of elements in the list l that are below threshold t.\n\
    \    >>> count_below_threshold([1L, 2L, 4L, 10L], 100L)\n    4\n    >>> count_below_threshold([1L,\
    \ 20L, 4L, 10L], 5L)\n    2\n*/\nlong count_below_threshold(long[] l, long t)\
    \ \n{\n    long count = 0;\n    foreach(long i; l)\n    {\n        if(i < t)\n\
    \            count++;\n    }\n    return count;\n}\n/*\nReturn the number of elements\
    \ in the list l that are below threshold t.\n    >>> count_below_threshold([1L,\
    \ 2L, 4L, 10L], 100L)\n    4\n    >>> count_below_threshold([1L, 20L, 4L, 10L],\
    \ 5L)\n    2\n*/\nlong count_below_threshold2(long[] l, long t) \n{\n    long\
    \ count = 0;\n    foreach(long i; l)\n    {\n        if(i < t)\n            count++;\n\
    \    }\n    return count;\n}\n/*\nReturn the number of elements in the list l\
    \ that are below threshold t.\n    >>> count_below_threshold([1L, 2L, 4L, 10L],\
    \ 100L)\n    4\n    >>> count_below_threshold([1L, 20L, 4L, 10L], 5L)\n    2\n\
    */\nlong count_below_threshold3(long[] l, long t) \n{\n    long count = 0;\n \
    \   foreach(long i; l)\n    {\n        if(i < t)\n            count++;\n    }\n\
    \    return count;\n}\n/*\nReturn the number of elements in the list l that are\
    \ below threshold t.\n    >>> count_below_threshold([1L, 2L, 4L, 10L], 100L)\n\
    \    4\n    >>> count_below_threshold([1L, 20L\nunittest\n{\n    alias candidate\
    \ = below_threshold;\n\n    assert(candidate([1L, 2L, 4L, 10L], 100L) == true);\n\
    \    assert(candidate([1L, 20L, 4L, 10L], 5L) == false);\n    assert(candidate([1L,\
    \ 20L, 4L, 10L], 21L) == true);\n    assert(candidate([1L, 20L, 4L, 10L], 22L)\
    \ == true);\n    assert(candidate([1L, 8L, 4L, 10L], 11L) == true);\n    assert(candidate([1L,\
    \ 8L, 4L, 10L], 10L) == false);\n}\nvoid main(){}"
  status: SyntaxError
  stderr: '/tmp/tmpd6932krj.d(71): Error: unterminated /* */ comment

    Failed: ["dmd", "-unittest", "-v", "-o-", "/tmp/tmpd6932krj.d", "-I/tmp"]

    '
  stdout: ''
  timestamp: 1660163090
- exit_code: 0
  program: "import std.typecons;\nimport std.math;\n/*\nReturn True if all numbers\
    \ in the list l are below threshold t.\n    >>> below_threshold([1L, 2L, 4L, 10L],\
    \ 100L)\n    true\n    >>> below_threshold([1L, 20L, 4L, 10L], 5L)\n    false\n\
    \    \n*/\nbool below_threshold(long[] l, long t) \n{\n    foreach(long x; l)\n\
    \    {\n        if(x >= t)\n            return false;\n    }\n    return true;\n\
    }\nunittest\n{\n    alias candidate = below_threshold;\n\n    assert(candidate([1L,\
    \ 2L, 4L, 10L], 100L) == true);\n    assert(candidate([1L, 20L, 4L, 10L], 5L)\
    \ == false);\n    assert(candidate([1L, 20L, 4L, 10L], 21L) == true);\n    assert(candidate([1L,\
    \ 20L, 4L, 10L], 22L) == true);\n    assert(candidate([1L, 8L, 4L, 10L], 11L)\
    \ == true);\n    assert(candidate([1L, 8L, 4L, 10L], 10L) == false);\n}\nvoid\
    \ main(){}"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660163090
- exit_code: 1
  program: "import std.typecons;\nimport std.math;\n/*\nReturn True if all numbers\
    \ in the list l are below threshold t.\n    >>> below_threshold([1L, 2L, 4L, 10L],\
    \ 100L)\n    true\n    >>> below_threshold([1L, 20L, 4L, 10L], 5L)\n    false\n\
    \    \n*/\nbool below_threshold(long[] l, long t) \n{\n    foreach(long x; l)\n\
    \    {\n        if(x > t)\n            return false;\n    }\n    return true;\n\
    }\nunittest\n{\n    alias candidate = below_threshold;\n\n    assert(candidate([1L,\
    \ 2L, 4L, 10L], 100L) == true);\n    assert(candidate([1L, 20L, 4L, 10L], 5L)\
    \ == false);\n    assert(candidate([1L, 20L, 4L, 10L], 21L) == true);\n    assert(candidate([1L,\
    \ 20L, 4L, 10L], 22L) == true);\n    assert(candidate([1L, 8L, 4L, 10L], 11L)\
    \ == true);\n    assert(candidate([1L, 8L, 4L, 10L], 10L) == false);\n}\nvoid\
    \ main(){}"
  status: Exception
  stderr: 'core.exception.AssertError@/tmp/tmpx_fvps4k.d(29): unittest failure

    ----------------

    ??:? _d_unittestp [0x4281dd]

    ??:? void tmpx_fvps4k.__unittest_L20_C1() [0x427f4b]

    ??:? void tmpx_fvps4k.__modtest() [0x427f60]

    ??:? int core.runtime.runModuleUnitTests().__foreachbody2(object.ModuleInfo*)
    [0x42c1c7]

    ??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)).__lambda2(immutable(object.ModuleInfo*))
    [0x42b05a]

    ??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))).__foreachbody2(ref
    rt.sections_elf_shared.DSO) [0x4301ed]

    ??:? int rt.sections_elf_shared.DSO.opApply(scope int delegate(ref rt.sections_elf_shared.DSO))
    [0x43069c]

    ??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*)))
    [0x430179]

    ??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)) [0x42b031]

    ??:? runModuleUnitTests [0x42bf9d]

    ??:? void rt.dmain2._d_run_main(int, char**, extern (C) int function(char[][])*).runAll()
    [0x42862c]

    ??:? void rt.dmain2._d_r'
  stdout: ''
  timestamp: 1660163090
- exit_code: 1
  program: "import std.typecons;\nimport std.math;\n/*\nReturn True if all numbers\
    \ in the list l are below threshold t.\n    >>> below_threshold([1L, 2L, 4L, 10L],\
    \ 100L)\n    true\n    >>> below_threshold([1L, 20L, 4L, 10L], 5L)\n    false\n\
    \    \n*/\nbool below_threshold(long[] l, long t) \n{\n    foreach(long i; l)\n\
    \    {\n        if(i > t)\n            return false;\n    }\n    return true;\n\
    }\nunittest\n{\n    alias candidate = below_threshold;\n\n    assert(candidate([1L,\
    \ 2L, 4L, 10L], 100L) == true);\n    assert(candidate([1L, 20L, 4L, 10L], 5L)\
    \ == false);\n    assert(candidate([1L, 20L, 4L, 10L], 21L) == true);\n    assert(candidate([1L,\
    \ 20L, 4L, 10L], 22L) == true);\n    assert(candidate([1L, 8L, 4L, 10L], 11L)\
    \ == true);\n    assert(candidate([1L, 8L, 4L, 10L], 10L) == false);\n}\nvoid\
    \ main(){}"
  status: Exception
  stderr: 'core.exception.AssertError@/tmp/tmpev0f60w0.d(29): unittest failure

    ----------------

    ??:? _d_unittestp [0x4281dd]

    ??:? void tmpev0f60w0.__unittest_L20_C1() [0x427f4b]

    ??:? void tmpev0f60w0.__modtest() [0x427f60]

    ??:? int core.runtime.runModuleUnitTests().__foreachbody2(object.ModuleInfo*)
    [0x42c1c7]

    ??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)).__lambda2(immutable(object.ModuleInfo*))
    [0x42b05a]

    ??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))).__foreachbody2(ref
    rt.sections_elf_shared.DSO) [0x4301ed]

    ??:? int rt.sections_elf_shared.DSO.opApply(scope int delegate(ref rt.sections_elf_shared.DSO))
    [0x43069c]

    ??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*)))
    [0x430179]

    ??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)) [0x42b031]

    ??:? runModuleUnitTests [0x42bf9d]

    ??:? void rt.dmain2._d_run_main(int, char**, extern (C) int function(char[][])*).runAll()
    [0x42862c]

    ??:? void rt.dmain2._d_r'
  stdout: ''
  timestamp: 1660163090
- exit_code: 0
  program: "import std.typecons;\nimport std.math;\n/*\nReturn True if all numbers\
    \ in the list l are below threshold t.\n    >>> below_threshold([1L, 2L, 4L, 10L],\
    \ 100L)\n    true\n    >>> below_threshold([1L, 20L, 4L, 10L], 5L)\n    false\n\
    \    \n*/\nbool below_threshold(long[] l, long t) \n{\n    foreach(long i; l)\
    \ \n    {\n        if(i >= t) \n        {\n            return false;\n       \
    \ }\n    }\n    return true;\n}\nunittest\n{\n    alias candidate = below_threshold;\n\
    \n    assert(candidate([1L, 2L, 4L, 10L], 100L) == true);\n    assert(candidate([1L,\
    \ 20L, 4L, 10L], 5L) == false);\n    assert(candidate([1L, 20L, 4L, 10L], 21L)\
    \ == true);\n    assert(candidate([1L, 20L, 4L, 10L], 22L) == true);\n    assert(candidate([1L,\
    \ 8L, 4L, 10L], 11L) == true);\n    assert(candidate([1L, 8L, 4L, 10L], 10L) ==\
    \ false);\n}\nvoid main(){}"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660163090
- exit_code: 1
  program: "import std.typecons;\nimport std.math;\n/*\nReturn True if all numbers\
    \ in the list l are below threshold t.\n    >>> below_threshold([1L, 2L, 4L, 10L],\
    \ 100L)\n    true\n    >>> below_threshold([1L, 20L, 4L, 10L], 5L)\n    false\n\
    \    \n*/\nbool below_threshold(long[] l, long t) \n{\n    foreach(i; l) \n  \
    \  {\n        if(i > t) \n        {\n            return false;\n        }\n  \
    \  }\n    return true;\n}\nunittest\n{\n    alias candidate = below_threshold;\n\
    \n    assert(candidate([1L, 2L, 4L, 10L], 100L) == true);\n    assert(candidate([1L,\
    \ 20L, 4L, 10L], 5L) == false);\n    assert(candidate([1L, 20L, 4L, 10L], 21L)\
    \ == true);\n    assert(candidate([1L, 20L, 4L, 10L], 22L) == true);\n    assert(candidate([1L,\
    \ 8L, 4L, 10L], 11L) == true);\n    assert(candidate([1L, 8L, 4L, 10L], 10L) ==\
    \ false);\n}\nvoid main(){}"
  status: Exception
  stderr: 'core.exception.AssertError@/tmp/tmp8esff1s5.d(31): unittest failure

    ----------------

    ??:? _d_unittestp [0x4281dd]

    ??:? void tmp8esff1s5.__unittest_L22_C1() [0x427f4b]

    ??:? void tmp8esff1s5.__modtest() [0x427f60]

    ??:? int core.runtime.runModuleUnitTests().__foreachbody2(object.ModuleInfo*)
    [0x42c1c7]

    ??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)).__lambda2(immutable(object.ModuleInfo*))
    [0x42b05a]

    ??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))).__foreachbody2(ref
    rt.sections_elf_shared.DSO) [0x4301ed]

    ??:? int rt.sections_elf_shared.DSO.opApply(scope int delegate(ref rt.sections_elf_shared.DSO))
    [0x43069c]

    ??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*)))
    [0x430179]

    ??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)) [0x42b031]

    ??:? runModuleUnitTests [0x42bf9d]

    ??:? void rt.dmain2._d_run_main(int, char**, extern (C) int function(char[][])*).runAll()
    [0x42862c]

    ??:? void rt.dmain2._d_r'
  stdout: ''
  timestamp: 1660163090
- exit_code: 1
  program: "import std.typecons;\nimport std.math;\n/*\nReturn True if all numbers\
    \ in the list l are below threshold t.\n    >>> below_threshold([1L, 2L, 4L, 10L],\
    \ 100L)\n    true\n    >>> below_threshold([1L, 20L, 4L, 10L], 5L)\n    false\n\
    \    \n*/\nbool below_threshold(long[] l, long t) \n{\n    foreach(long i; l)\n\
    \    {\n        if(i > t)\n            return false;\n    }\n    return true;\n\
    }\nunittest\n{\n    alias candidate = below_threshold;\n\n    assert(candidate([1L,\
    \ 2L, 4L, 10L], 100L) == true);\n    assert(candidate([1L, 20L, 4L, 10L], 5L)\
    \ == false);\n    assert(candidate([1L, 20L, 4L, 10L], 21L) == true);\n    assert(candidate([1L,\
    \ 20L, 4L, 10L], 22L) == true);\n    assert(candidate([1L, 8L, 4L, 10L], 11L)\
    \ == true);\n    assert(candidate([1L, 8L, 4L, 10L], 10L) == false);\n}\nvoid\
    \ main(){}"
  status: Exception
  stderr: 'core.exception.AssertError@/tmp/tmpev0f60w0.d(29): unittest failure

    ----------------

    ??:? _d_unittestp [0x4281dd]

    ??:? void tmpev0f60w0.__unittest_L20_C1() [0x427f4b]

    ??:? void tmpev0f60w0.__modtest() [0x427f60]

    ??:? int core.runtime.runModuleUnitTests().__foreachbody2(object.ModuleInfo*)
    [0x42c1c7]

    ??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)).__lambda2(immutable(object.ModuleInfo*))
    [0x42b05a]

    ??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))).__foreachbody2(ref
    rt.sections_elf_shared.DSO) [0x4301ed]

    ??:? int rt.sections_elf_shared.DSO.opApply(scope int delegate(ref rt.sections_elf_shared.DSO))
    [0x43069c]

    ??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*)))
    [0x430179]

    ??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)) [0x42b031]

    ??:? runModuleUnitTests [0x42bf9d]

    ??:? void rt.dmain2._d_run_main(int, char**, extern (C) int function(char[][])*).runAll()
    [0x42862c]

    ??:? void rt.dmain2._d_r'
  stdout: ''
  timestamp: 1660163090
- exit_code: 0
  program: "import std.typecons;\nimport std.math;\n/*\nReturn True if all numbers\
    \ in the list l are below threshold t.\n    >>> below_threshold([1L, 2L, 4L, 10L],\
    \ 100L)\n    true\n    >>> below_threshold([1L, 20L, 4L, 10L], 5L)\n    false\n\
    \    \n*/\nbool below_threshold(long[] l, long t) \n{\n    foreach(i; l)\n   \
    \ {\n        if(i >= t)\n            return false;\n    }\n    return true;\n\
    }\nunittest\n{\n    alias candidate = below_threshold;\n\n    assert(candidate([1L,\
    \ 2L, 4L, 10L], 100L) == true);\n    assert(candidate([1L, 20L, 4L, 10L], 5L)\
    \ == false);\n    assert(candidate([1L, 20L, 4L, 10L], 21L) == true);\n    assert(candidate([1L,\
    \ 20L, 4L, 10L], 22L) == true);\n    assert(candidate([1L, 8L, 4L, 10L], 11L)\
    \ == true);\n    assert(candidate([1L, 8L, 4L, 10L], 10L) == false);\n}\nvoid\
    \ main(){}"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660163090
- exit_code: 1
  program: "import std.typecons;\nimport std.math;\n/*\nReturn True if all numbers\
    \ in the list l are below threshold t.\n    >>> below_threshold([1L, 2L, 4L, 10L],\
    \ 100L)\n    true\n    >>> below_threshold([1L, 20L, 4L, 10L], 5L)\n    false\n\
    \    \n*/\nbool below_threshold(long[] l, long t) \n{\n    foreach(i; l)\n   \
    \ {\n        if(i > t)\n            return false;\n    }\n    return true;\n}\n\
    unittest\n{\n    alias candidate = below_threshold;\n\n    assert(candidate([1L,\
    \ 2L, 4L, 10L], 100L) == true);\n    assert(candidate([1L, 20L, 4L, 10L], 5L)\
    \ == false);\n    assert(candidate([1L, 20L, 4L, 10L], 21L) == true);\n    assert(candidate([1L,\
    \ 20L, 4L, 10L], 22L) == true);\n    assert(candidate([1L, 8L, 4L, 10L], 11L)\
    \ == true);\n    assert(candidate([1L, 8L, 4L, 10L], 10L) == false);\n}\nvoid\
    \ main(){}"
  status: Exception
  stderr: 'core.exception.AssertError@/tmp/tmpplk4ck84.d(29): unittest failure

    ----------------

    ??:? _d_unittestp [0x4281dd]

    ??:? void tmpplk4ck84.__unittest_L20_C1() [0x427f4b]

    ??:? void tmpplk4ck84.__modtest() [0x427f60]

    ??:? int core.runtime.runModuleUnitTests().__foreachbody2(object.ModuleInfo*)
    [0x42c1c7]

    ??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)).__lambda2(immutable(object.ModuleInfo*))
    [0x42b05a]

    ??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))).__foreachbody2(ref
    rt.sections_elf_shared.DSO) [0x4301ed]

    ??:? int rt.sections_elf_shared.DSO.opApply(scope int delegate(ref rt.sections_elf_shared.DSO))
    [0x43069c]

    ??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*)))
    [0x430179]

    ??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)) [0x42b031]

    ??:? runModuleUnitTests [0x42bf9d]

    ??:? void rt.dmain2._d_run_main(int, char**, extern (C) int function(char[][])*).runAll()
    [0x42862c]

    ??:? void rt.dmain2._d_r'
  stdout: ''
  timestamp: 1660163090
- exit_code: 1
  program: "import std.typecons;\nimport std.math;\n/*\nReturn True if all numbers\
    \ in the list l are below threshold t.\n    >>> below_threshold([1L, 2L, 4L, 10L],\
    \ 100L)\n    true\n    >>> below_threshold([1L, 20L, 4L, 10L], 5L)\n    false\n\
    \    \n*/\nbool below_threshold(long[] l, long t) \n{\n    foreach(long i; l)\n\
    \    {\n        if(i > t)\n            return false;\n    }\n    return true;\n\
    }\nunittest\n{\n    alias candidate = below_threshold;\n\n    assert(candidate([1L,\
    \ 2L, 4L, 10L], 100L) == true);\n    assert(candidate([1L, 20L, 4L, 10L], 5L)\
    \ == false);\n    assert(candidate([1L, 20L, 4L, 10L], 21L) == true);\n    assert(candidate([1L,\
    \ 20L, 4L, 10L], 22L) == true);\n    assert(candidate([1L, 8L, 4L, 10L], 11L)\
    \ == true);\n    assert(candidate([1L, 8L, 4L, 10L], 10L) == false);\n}\nvoid\
    \ main(){}"
  status: Exception
  stderr: 'core.exception.AssertError@/tmp/tmpev0f60w0.d(29): unittest failure

    ----------------

    ??:? _d_unittestp [0x4281dd]

    ??:? void tmpev0f60w0.__unittest_L20_C1() [0x427f4b]

    ??:? void tmpev0f60w0.__modtest() [0x427f60]

    ??:? int core.runtime.runModuleUnitTests().__foreachbody2(object.ModuleInfo*)
    [0x42c1c7]

    ??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)).__lambda2(immutable(object.ModuleInfo*))
    [0x42b05a]

    ??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))).__foreachbody2(ref
    rt.sections_elf_shared.DSO) [0x4301ed]

    ??:? int rt.sections_elf_shared.DSO.opApply(scope int delegate(ref rt.sections_elf_shared.DSO))
    [0x43069c]

    ??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*)))
    [0x430179]

    ??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)) [0x42b031]

    ??:? runModuleUnitTests [0x42bf9d]

    ??:? void rt.dmain2._d_run_main(int, char**, extern (C) int function(char[][])*).runAll()
    [0x42862c]

    ??:? void rt.dmain2._d_r'
  stdout: ''
  timestamp: 1660163090
- exit_code: 1
  program: "import std.typecons;\nimport std.math;\n/*\nReturn True if all numbers\
    \ in the list l are below threshold t.\n    >>> below_threshold([1L, 2L, 4L, 10L],\
    \ 100L)\n    true\n    >>> below_threshold([1L, 20L, 4L, 10L], 5L)\n    false\n\
    \    \n*/\nbool below_threshold(long[] l, long t) \n{\n    foreach(i; l)\n   \
    \ {\n        if(i > t)\n            return false;\n    }\n    return true;\n}\n\
    unittest\n{\n    alias candidate = below_threshold;\n\n    assert(candidate([1L,\
    \ 2L, 4L, 10L], 100L) == true);\n    assert(candidate([1L, 20L, 4L, 10L], 5L)\
    \ == false);\n    assert(candidate([1L, 20L, 4L, 10L], 21L) == true);\n    assert(candidate([1L,\
    \ 20L, 4L, 10L], 22L) == true);\n    assert(candidate([1L, 8L, 4L, 10L], 11L)\
    \ == true);\n    assert(candidate([1L, 8L, 4L, 10L], 10L) == false);\n}\nvoid\
    \ main(){}"
  status: Exception
  stderr: 'core.exception.AssertError@/tmp/tmpplk4ck84.d(29): unittest failure

    ----------------

    ??:? _d_unittestp [0x4281dd]

    ??:? void tmpplk4ck84.__unittest_L20_C1() [0x427f4b]

    ??:? void tmpplk4ck84.__modtest() [0x427f60]

    ??:? int core.runtime.runModuleUnitTests().__foreachbody2(object.ModuleInfo*)
    [0x42c1c7]

    ??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)).__lambda2(immutable(object.ModuleInfo*))
    [0x42b05a]

    ??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))).__foreachbody2(ref
    rt.sections_elf_shared.DSO) [0x4301ed]

    ??:? int rt.sections_elf_shared.DSO.opApply(scope int delegate(ref rt.sections_elf_shared.DSO))
    [0x43069c]

    ??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*)))
    [0x430179]

    ??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)) [0x42b031]

    ??:? runModuleUnitTests [0x42bf9d]

    ??:? void rt.dmain2._d_run_main(int, char**, extern (C) int function(char[][])*).runAll()
    [0x42862c]

    ??:? void rt.dmain2._d_r'
  stdout: ''
  timestamp: 1660163090
- exit_code: 0
  program: "import std.typecons;\nimport std.math;\n/*\nReturn True if all numbers\
    \ in the list l are below threshold t.\n    >>> below_threshold([1L, 2L, 4L, 10L],\
    \ 100L)\n    true\n    >>> below_threshold([1L, 20L, 4L, 10L], 5L)\n    false\n\
    \    \n*/\nbool below_threshold(long[] l, long t) \n{\n    foreach(x; l)\n   \
    \ {\n        if(x >= t)\n            return false;\n    }\n    return true;\n\
    }\n/*\nReturn True if all numbers in the list l are below threshold t.\n    >>>\
    \ below_threshold([1L, 2L, 4L, 10L], 100L)\n    true\n    >>> below_threshold([1L,\
    \ 20L, 4L, 10L], 5L)\n    false\n    \n*/\nunittest\n{\n    alias candidate =\
    \ below_threshold;\n\n    assert(candidate([1L, 2L, 4L, 10L], 100L) == true);\n\
    \    assert(candidate([1L, 20L, 4L, 10L], 5L) == false);\n    assert(candidate([1L,\
    \ 20L, 4L, 10L], 21L) == true);\n    assert(candidate([1L, 20L, 4L, 10L], 22L)\
    \ == true);\n    assert(candidate([1L, 8L, 4L, 10L], 11L) == true);\n    assert(candidate([1L,\
    \ 8L, 4L, 10L], 10L) == false);\n}\nvoid main(){}"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660163090
- exit_code: 1
  program: "import std.typecons;\nimport std.math;\n/*\nReturn True if all numbers\
    \ in the list l are below threshold t.\n    >>> below_threshold([1L, 2L, 4L, 10L],\
    \ 100L)\n    true\n    >>> below_threshold([1L, 20L, 4L, 10L], 5L)\n    false\n\
    \    \n*/\nbool below_threshold(long[] l, long t) \n{\n    foreach(i; l)\n   \
    \ {\n        if(i > t)\n            return false;\n    }\n    return true;\n}\n\
    unittest\n{\n    alias candidate = below_threshold;\n\n    assert(candidate([1L,\
    \ 2L, 4L, 10L], 100L) == true);\n    assert(candidate([1L, 20L, 4L, 10L], 5L)\
    \ == false);\n    assert(candidate([1L, 20L, 4L, 10L], 21L) == true);\n    assert(candidate([1L,\
    \ 20L, 4L, 10L], 22L) == true);\n    assert(candidate([1L, 8L, 4L, 10L], 11L)\
    \ == true);\n    assert(candidate([1L, 8L, 4L, 10L], 10L) == false);\n}\nvoid\
    \ main(){}"
  status: Exception
  stderr: 'core.exception.AssertError@/tmp/tmpplk4ck84.d(29): unittest failure

    ----------------

    ??:? _d_unittestp [0x4281dd]

    ??:? void tmpplk4ck84.__unittest_L20_C1() [0x427f4b]

    ??:? void tmpplk4ck84.__modtest() [0x427f60]

    ??:? int core.runtime.runModuleUnitTests().__foreachbody2(object.ModuleInfo*)
    [0x42c1c7]

    ??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)).__lambda2(immutable(object.ModuleInfo*))
    [0x42b05a]

    ??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))).__foreachbody2(ref
    rt.sections_elf_shared.DSO) [0x4301ed]

    ??:? int rt.sections_elf_shared.DSO.opApply(scope int delegate(ref rt.sections_elf_shared.DSO))
    [0x43069c]

    ??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*)))
    [0x430179]

    ??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)) [0x42b031]

    ??:? runModuleUnitTests [0x42bf9d]

    ??:? void rt.dmain2._d_run_main(int, char**, extern (C) int function(char[][])*).runAll()
    [0x42862c]

    ??:? void rt.dmain2._d_r'
  stdout: ''
  timestamp: 1660163090
- exit_code: 1
  program: "import std.typecons;\nimport std.math;\n/*\nReturn True if all numbers\
    \ in the list l are below threshold t.\n    >>> below_threshold([1L, 2L, 4L, 10L],\
    \ 100L)\n    true\n    >>> below_threshold([1L, 20L, 4L, 10L], 5L)\n    false\n\
    \    \n*/\nbool below_threshold(long[] l, long t) \n{\n    foreach(i; l)\n   \
    \ {\n        if(i > t)\n            return false;\n    }\n    return true;\n}\n\
    unittest\n{\n    alias candidate = below_threshold;\n\n    assert(candidate([1L,\
    \ 2L, 4L, 10L], 100L) == true);\n    assert(candidate([1L, 20L, 4L, 10L], 5L)\
    \ == false);\n    assert(candidate([1L, 20L, 4L, 10L], 21L) == true);\n    assert(candidate([1L,\
    \ 20L, 4L, 10L], 22L) == true);\n    assert(candidate([1L, 8L, 4L, 10L], 11L)\
    \ == true);\n    assert(candidate([1L, 8L, 4L, 10L], 10L) == false);\n}\nvoid\
    \ main(){}"
  status: Exception
  stderr: 'core.exception.AssertError@/tmp/tmpplk4ck84.d(29): unittest failure

    ----------------

    ??:? _d_unittestp [0x4281dd]

    ??:? void tmpplk4ck84.__unittest_L20_C1() [0x427f4b]

    ??:? void tmpplk4ck84.__modtest() [0x427f60]

    ??:? int core.runtime.runModuleUnitTests().__foreachbody2(object.ModuleInfo*)
    [0x42c1c7]

    ??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)).__lambda2(immutable(object.ModuleInfo*))
    [0x42b05a]

    ??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))).__foreachbody2(ref
    rt.sections_elf_shared.DSO) [0x4301ed]

    ??:? int rt.sections_elf_shared.DSO.opApply(scope int delegate(ref rt.sections_elf_shared.DSO))
    [0x43069c]

    ??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*)))
    [0x430179]

    ??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)) [0x42b031]

    ??:? runModuleUnitTests [0x42bf9d]

    ??:? void rt.dmain2._d_run_main(int, char**, extern (C) int function(char[][])*).runAll()
    [0x42862c]

    ??:? void rt.dmain2._d_r'
  stdout: ''
  timestamp: 1660163090
- exit_code: 0
  program: "import std.typecons;\nimport std.math;\n/*\nReturn True if all numbers\
    \ in the list l are below threshold t.\n    >>> below_threshold([1L, 2L, 4L, 10L],\
    \ 100L)\n    true\n    >>> below_threshold([1L, 20L, 4L, 10L], 5L)\n    false\n\
    \    \n*/\nbool below_threshold(long[] l, long t) \n{\n    foreach(long x; l)\n\
    \    {\n        if(x >= t)\n            return false;\n    }\n    return true;\n\
    }\nunittest\n{\n    alias candidate = below_threshold;\n\n    assert(candidate([1L,\
    \ 2L, 4L, 10L], 100L) == true);\n    assert(candidate([1L, 20L, 4L, 10L], 5L)\
    \ == false);\n    assert(candidate([1L, 20L, 4L, 10L], 21L) == true);\n    assert(candidate([1L,\
    \ 20L, 4L, 10L], 22L) == true);\n    assert(candidate([1L, 8L, 4L, 10L], 11L)\
    \ == true);\n    assert(candidate([1L, 8L, 4L, 10L], 10L) == false);\n}\nvoid\
    \ main(){}"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660163090
- exit_code: 1
  program: "import std.typecons;\nimport std.math;\n/*\nReturn True if all numbers\
    \ in the list l are below threshold t.\n    >>> below_threshold([1L, 2L, 4L, 10L],\
    \ 100L)\n    true\n    >>> below_threshold([1L, 20L, 4L, 10L], 5L)\n    false\n\
    \    \n*/\nbool below_threshold(long[] l, long t) \n{\n    foreach(long i; l)\n\
    \    {\n        if(i > t)\n            return false;\n    }\n    return true;\n\
    }\nunittest\n{\n    alias candidate = below_threshold;\n\n    assert(candidate([1L,\
    \ 2L, 4L, 10L], 100L) == true);\n    assert(candidate([1L, 20L, 4L, 10L], 5L)\
    \ == false);\n    assert(candidate([1L, 20L, 4L, 10L], 21L) == true);\n    assert(candidate([1L,\
    \ 20L, 4L, 10L], 22L) == true);\n    assert(candidate([1L, 8L, 4L, 10L], 11L)\
    \ == true);\n    assert(candidate([1L, 8L, 4L, 10L], 10L) == false);\n}\nvoid\
    \ main(){}"
  status: Exception
  stderr: 'core.exception.AssertError@/tmp/tmpev0f60w0.d(29): unittest failure

    ----------------

    ??:? _d_unittestp [0x4281dd]

    ??:? void tmpev0f60w0.__unittest_L20_C1() [0x427f4b]

    ??:? void tmpev0f60w0.__modtest() [0x427f60]

    ??:? int core.runtime.runModuleUnitTests().__foreachbody2(object.ModuleInfo*)
    [0x42c1c7]

    ??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)).__lambda2(immutable(object.ModuleInfo*))
    [0x42b05a]

    ??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))).__foreachbody2(ref
    rt.sections_elf_shared.DSO) [0x4301ed]

    ??:? int rt.sections_elf_shared.DSO.opApply(scope int delegate(ref rt.sections_elf_shared.DSO))
    [0x43069c]

    ??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*)))
    [0x430179]

    ??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)) [0x42b031]

    ??:? runModuleUnitTests [0x42bf9d]

    ??:? void rt.dmain2._d_run_main(int, char**, extern (C) int function(char[][])*).runAll()
    [0x42862c]

    ??:? void rt.dmain2._d_r'
  stdout: ''
  timestamp: 1660163090
- exit_code: 1
  program: "import std.typecons;\nimport std.math;\n/*\nReturn True if all numbers\
    \ in the list l are below threshold t.\n    >>> below_threshold([1L, 2L, 4L, 10L],\
    \ 100L)\n    true\n    >>> below_threshold([1L, 20L, 4L, 10L], 5L)\n    false\n\
    \    \n*/\nbool below_threshold(long[] l, long t) \n{\n    foreach(long i; l)\n\
    \    {\n        if(i > t)\n            return false;\n    }\n    return true;\n\
    }\nunittest\n{\n    alias candidate = below_threshold;\n\n    assert(candidate([1L,\
    \ 2L, 4L, 10L], 100L) == true);\n    assert(candidate([1L, 20L, 4L, 10L], 5L)\
    \ == false);\n    assert(candidate([1L, 20L, 4L, 10L], 21L) == true);\n    assert(candidate([1L,\
    \ 20L, 4L, 10L], 22L) == true);\n    assert(candidate([1L, 8L, 4L, 10L], 11L)\
    \ == true);\n    assert(candidate([1L, 8L, 4L, 10L], 10L) == false);\n}\nvoid\
    \ main(){}"
  status: Exception
  stderr: 'core.exception.AssertError@/tmp/tmpev0f60w0.d(29): unittest failure

    ----------------

    ??:? _d_unittestp [0x4281dd]

    ??:? void tmpev0f60w0.__unittest_L20_C1() [0x427f4b]

    ??:? void tmpev0f60w0.__modtest() [0x427f60]

    ??:? int core.runtime.runModuleUnitTests().__foreachbody2(object.ModuleInfo*)
    [0x42c1c7]

    ??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)).__lambda2(immutable(object.ModuleInfo*))
    [0x42b05a]

    ??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))).__foreachbody2(ref
    rt.sections_elf_shared.DSO) [0x4301ed]

    ??:? int rt.sections_elf_shared.DSO.opApply(scope int delegate(ref rt.sections_elf_shared.DSO))
    [0x43069c]

    ??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*)))
    [0x430179]

    ??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)) [0x42b031]

    ??:? runModuleUnitTests [0x42bf9d]

    ??:? void rt.dmain2._d_run_main(int, char**, extern (C) int function(char[][])*).runAll()
    [0x42862c]

    ??:? void rt.dmain2._d_r'
  stdout: ''
  timestamp: 1660163090
- exit_code: 1
  program: "import std.typecons;\nimport std.math;\n/*\nReturn True if all numbers\
    \ in the list l are below threshold t.\n    >>> below_threshold([1L, 2L, 4L, 10L],\
    \ 100L)\n    true\n    >>> below_threshold([1L, 20L, 4L, 10L], 5L)\n    false\n\
    \    \n*/\nbool below_threshold(long[] l, long t) \n{\n    foreach(long i; l)\n\
    \    {\n        if(i >= t)\n            return false;\n    }\n    return true;\n\
    }\n/*\nReturn the number of elements in the list l that are below threshold t.\n\
    \    >>> count_below_threshold([1L, 2L, 4L, 10L], 100L)\n    4\n    >>> count_below_threshold([1L,\
    \ 20L, 4L, 10L], 5L)\n    2\n*/\nlong count_below_threshold(long[] l, long t)\
    \ \n{\n    long count = 0;\n    foreach(long i; l)\n    {\n        if(i < t)\n\
    \            count++;\n    }\n    return count;\n}\n/*\nReturn the number of elements\
    \ in the list l that are below threshold t.\n    >>> count_below_threshold([1L,\
    \ 2L, 4L, 10L], 100L)\n    4\n    >>> count_below_threshold([1L, 20L, 4L, 10L],\
    \ 5L)\n    2\n*/\nlong count_below_threshold_2(long[] l, long t) \n{\n    long\
    \ count = 0;\n    foreach(long i; l)\n    {\n        if(i < t)\n            count++;\n\
    \    }\n    return count;\n}\n/*\nReturn the number of elements in the list l\
    \ that are below threshold t.\n    >>> count_below_threshold([1L, 2L, 4L, 10L],\
    \ 100L)\n    4\n    >>> count_below_threshold([1L, 20L, 4L, 10L], 5L)\n    2\n\
    */\nlong count_below_threshold_3(long[] l, long t) \n{\n    long count = 0;\n\
    \    foreach(long i; l)\n    {\n        if(i < t)\n            count++;\n    }\n\
    \    return count;\n}\n/*\nReturn the number of elements in the list l that are\
    \ below threshold t.\n    >>> count_below_threshold([1L, 2L, 4L, 10L], 100L)\n\
    \    4\n    >>> count_below_threshold([1L,\nunittest\n{\n    alias candidate =\
    \ below_threshold;\n\n    assert(candidate([1L, 2L, 4L, 10L], 100L) == true);\n\
    \    assert(candidate([1L, 20L, 4L, 10L], 5L) == false);\n    assert(candidate([1L,\
    \ 20L, 4L, 10L], 21L) == true);\n    assert(candidate([1L, 20L, 4L, 10L], 22L)\
    \ == true);\n    assert(candidate([1L, 8L, 4L, 10L], 11L) == true);\n    assert(candidate([1L,\
    \ 8L, 4L, 10L], 10L) == false);\n}\nvoid main(){}"
  status: SyntaxError
  stderr: '/tmp/tmp51vnjfou.d(71): Error: unterminated /* */ comment

    Failed: ["dmd", "-unittest", "-v", "-o-", "/tmp/tmp51vnjfou.d", "-I/tmp"]

    '
  stdout: ''
  timestamp: 1660163090
- exit_code: 0
  program: "import std.typecons;\nimport std.math;\n/*\nReturn True if all numbers\
    \ in the list l are below threshold t.\n    >>> below_threshold([1L, 2L, 4L, 10L],\
    \ 100L)\n    true\n    >>> below_threshold([1L, 20L, 4L, 10L], 5L)\n    false\n\
    \    \n*/\nbool below_threshold(long[] l, long t) \n{\n    foreach(long x; l)\n\
    \    {\n        if(x >= t)\n            return false;\n    }\n    return true;\n\
    }\n/*\nReturn True if all numbers in the list l are below threshold t.\n    >>>\
    \ below_threshold([1L, 2L, 4L, 10L], 100L)\n    true\n    >>> below_threshold([1L,\
    \ 20L, 4L, 10L], 5L)\n    false\n    \n*/\nunittest\n{\n    alias candidate =\
    \ below_threshold;\n\n    assert(candidate([1L, 2L, 4L, 10L], 100L) == true);\n\
    \    assert(candidate([1L, 20L, 4L, 10L], 5L) == false);\n    assert(candidate([1L,\
    \ 20L, 4L, 10L], 21L) == true);\n    assert(candidate([1L, 20L, 4L, 10L], 22L)\
    \ == true);\n    assert(candidate([1L, 8L, 4L, 10L], 11L) == true);\n    assert(candidate([1L,\
    \ 8L, 4L, 10L], 10L) == false);\n}\nvoid main(){}"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660163090
- exit_code: 1
  program: "import std.typecons;\nimport std.math;\n/*\nReturn True if all numbers\
    \ in the list l are below threshold t.\n    >>> below_threshold([1L, 2L, 4L, 10L],\
    \ 100L)\n    true\n    >>> below_threshold([1L, 20L, 4L, 10L], 5L)\n    false\n\
    \    \n*/\nbool below_threshold(long[] l, long t) \n{\n    foreach(i; l)\n   \
    \ {\n        if(i > t)\n            return false;\n    }\n    return true;\n}\n\
    unittest\n{\n    alias candidate = below_threshold;\n\n    assert(candidate([1L,\
    \ 2L, 4L, 10L], 100L) == true);\n    assert(candidate([1L, 20L, 4L, 10L], 5L)\
    \ == false);\n    assert(candidate([1L, 20L, 4L, 10L], 21L) == true);\n    assert(candidate([1L,\
    \ 20L, 4L, 10L], 22L) == true);\n    assert(candidate([1L, 8L, 4L, 10L], 11L)\
    \ == true);\n    assert(candidate([1L, 8L, 4L, 10L], 10L) == false);\n}\nvoid\
    \ main(){}"
  status: Exception
  stderr: 'core.exception.AssertError@/tmp/tmpplk4ck84.d(29): unittest failure

    ----------------

    ??:? _d_unittestp [0x4281dd]

    ??:? void tmpplk4ck84.__unittest_L20_C1() [0x427f4b]

    ??:? void tmpplk4ck84.__modtest() [0x427f60]

    ??:? int core.runtime.runModuleUnitTests().__foreachbody2(object.ModuleInfo*)
    [0x42c1c7]

    ??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)).__lambda2(immutable(object.ModuleInfo*))
    [0x42b05a]

    ??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))).__foreachbody2(ref
    rt.sections_elf_shared.DSO) [0x4301ed]

    ??:? int rt.sections_elf_shared.DSO.opApply(scope int delegate(ref rt.sections_elf_shared.DSO))
    [0x43069c]

    ??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*)))
    [0x430179]

    ??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)) [0x42b031]

    ??:? runModuleUnitTests [0x42bf9d]

    ??:? void rt.dmain2._d_run_main(int, char**, extern (C) int function(char[][])*).runAll()
    [0x42862c]

    ??:? void rt.dmain2._d_r'
  stdout: ''
  timestamp: 1660163090
- exit_code: 1
  program: "import std.typecons;\nimport std.math;\n/*\nReturn True if all numbers\
    \ in the list l are below threshold t.\n    >>> below_threshold([1L, 2L, 4L, 10L],\
    \ 100L)\n    true\n    >>> below_threshold([1L, 20L, 4L, 10L], 5L)\n    false\n\
    \    \n*/\nbool below_threshold(long[] l, long t) \n{\n    foreach(long i; l)\n\
    \    {\n        if(i > t)\n            return false;\n    }\n    return true;\n\
    }\nunittest\n{\n    alias candidate = below_threshold;\n\n    assert(candidate([1L,\
    \ 2L, 4L, 10L], 100L) == true);\n    assert(candidate([1L, 20L, 4L, 10L], 5L)\
    \ == false);\n    assert(candidate([1L, 20L, 4L, 10L], 21L) == true);\n    assert(candidate([1L,\
    \ 20L, 4L, 10L], 22L) == true);\n    assert(candidate([1L, 8L, 4L, 10L], 11L)\
    \ == true);\n    assert(candidate([1L, 8L, 4L, 10L], 10L) == false);\n}\nvoid\
    \ main(){}"
  status: Exception
  stderr: 'core.exception.AssertError@/tmp/tmpev0f60w0.d(29): unittest failure

    ----------------

    ??:? _d_unittestp [0x4281dd]

    ??:? void tmpev0f60w0.__unittest_L20_C1() [0x427f4b]

    ??:? void tmpev0f60w0.__modtest() [0x427f60]

    ??:? int core.runtime.runModuleUnitTests().__foreachbody2(object.ModuleInfo*)
    [0x42c1c7]

    ??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)).__lambda2(immutable(object.ModuleInfo*))
    [0x42b05a]

    ??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))).__foreachbody2(ref
    rt.sections_elf_shared.DSO) [0x4301ed]

    ??:? int rt.sections_elf_shared.DSO.opApply(scope int delegate(ref rt.sections_elf_shared.DSO))
    [0x43069c]

    ??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*)))
    [0x430179]

    ??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)) [0x42b031]

    ??:? runModuleUnitTests [0x42bf9d]

    ??:? void rt.dmain2._d_run_main(int, char**, extern (C) int function(char[][])*).runAll()
    [0x42862c]

    ??:? void rt.dmain2._d_r'
  stdout: ''
  timestamp: 1660163090
- exit_code: 1
  program: "import std.typecons;\nimport std.math;\n/*\nReturn True if all numbers\
    \ in the list l are below threshold t.\n    >>> below_threshold([1L, 2L, 4L, 10L],\
    \ 100L)\n    true\n    >>> below_threshold([1L, 20L, 4L, 10L], 5L)\n    false\n\
    \    \n*/\nbool below_threshold(long[] l, long t) \n{\n    foreach(i; l)\n   \
    \ {\n        if(i > t)\n            return false;\n    }\n    return true;\n}\n\
    unittest\n{\n    alias candidate = below_threshold;\n\n    assert(candidate([1L,\
    \ 2L, 4L, 10L], 100L) == true);\n    assert(candidate([1L, 20L, 4L, 10L], 5L)\
    \ == false);\n    assert(candidate([1L, 20L, 4L, 10L], 21L) == true);\n    assert(candidate([1L,\
    \ 20L, 4L, 10L], 22L) == true);\n    assert(candidate([1L, 8L, 4L, 10L], 11L)\
    \ == true);\n    assert(candidate([1L, 8L, 4L, 10L], 10L) == false);\n}\nvoid\
    \ main(){}"
  status: Exception
  stderr: 'core.exception.AssertError@/tmp/tmpplk4ck84.d(29): unittest failure

    ----------------

    ??:? _d_unittestp [0x4281dd]

    ??:? void tmpplk4ck84.__unittest_L20_C1() [0x427f4b]

    ??:? void tmpplk4ck84.__modtest() [0x427f60]

    ??:? int core.runtime.runModuleUnitTests().__foreachbody2(object.ModuleInfo*)
    [0x42c1c7]

    ??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)).__lambda2(immutable(object.ModuleInfo*))
    [0x42b05a]

    ??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))).__foreachbody2(ref
    rt.sections_elf_shared.DSO) [0x4301ed]

    ??:? int rt.sections_elf_shared.DSO.opApply(scope int delegate(ref rt.sections_elf_shared.DSO))
    [0x43069c]

    ??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*)))
    [0x430179]

    ??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)) [0x42b031]

    ??:? runModuleUnitTests [0x42bf9d]

    ??:? void rt.dmain2._d_run_main(int, char**, extern (C) int function(char[][])*).runAll()
    [0x42862c]

    ??:? void rt.dmain2._d_r'
  stdout: ''
  timestamp: 1660163090
- exit_code: 1
  program: "import std.typecons;\nimport std.math;\n/*\nReturn True if all numbers\
    \ in the list l are below threshold t.\n    >>> below_threshold([1L, 2L, 4L, 10L],\
    \ 100L)\n    true\n    >>> below_threshold([1L, 20L, 4L, 10L], 5L)\n    false\n\
    \    \n*/\nbool below_threshold(long[] l, long t) \n{\n    foreach(i; l)\n   \
    \ {\n        if(i > t)\n            return false;\n    }\n    return true;\n}\n\
    unittest\n{\n    alias candidate = below_threshold;\n\n    assert(candidate([1L,\
    \ 2L, 4L, 10L], 100L) == true);\n    assert(candidate([1L, 20L, 4L, 10L], 5L)\
    \ == false);\n    assert(candidate([1L, 20L, 4L, 10L], 21L) == true);\n    assert(candidate([1L,\
    \ 20L, 4L, 10L], 22L) == true);\n    assert(candidate([1L, 8L, 4L, 10L], 11L)\
    \ == true);\n    assert(candidate([1L, 8L, 4L, 10L], 10L) == false);\n}\nvoid\
    \ main(){}"
  status: Exception
  stderr: 'core.exception.AssertError@/tmp/tmpplk4ck84.d(29): unittest failure

    ----------------

    ??:? _d_unittestp [0x4281dd]

    ??:? void tmpplk4ck84.__unittest_L20_C1() [0x427f4b]

    ??:? void tmpplk4ck84.__modtest() [0x427f60]

    ??:? int core.runtime.runModuleUnitTests().__foreachbody2(object.ModuleInfo*)
    [0x42c1c7]

    ??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)).__lambda2(immutable(object.ModuleInfo*))
    [0x42b05a]

    ??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))).__foreachbody2(ref
    rt.sections_elf_shared.DSO) [0x4301ed]

    ??:? int rt.sections_elf_shared.DSO.opApply(scope int delegate(ref rt.sections_elf_shared.DSO))
    [0x43069c]

    ??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*)))
    [0x430179]

    ??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)) [0x42b031]

    ??:? runModuleUnitTests [0x42bf9d]

    ??:? void rt.dmain2._d_run_main(int, char**, extern (C) int function(char[][])*).runAll()
    [0x42862c]

    ??:? void rt.dmain2._d_r'
  stdout: ''
  timestamp: 1660163090
- exit_code: 1
  program: "import std.typecons;\nimport std.math;\n/*\nReturn True if all numbers\
    \ in the list l are below threshold t.\n    >>> below_threshold([1L, 2L, 4L, 10L],\
    \ 100L)\n    true\n    >>> below_threshold([1L, 20L, 4L, 10L], 5L)\n    false\n\
    \    \n*/\nbool below_threshold(long[] l, long t) \n{\n    foreach(long i; l)\n\
    \    {\n        if(i > t)\n            return false;\n    }\n    return true;\n\
    }\nunittest\n{\n    alias candidate = below_threshold;\n\n    assert(candidate([1L,\
    \ 2L, 4L, 10L], 100L) == true);\n    assert(candidate([1L, 20L, 4L, 10L], 5L)\
    \ == false);\n    assert(candidate([1L, 20L, 4L, 10L], 21L) == true);\n    assert(candidate([1L,\
    \ 20L, 4L, 10L], 22L) == true);\n    assert(candidate([1L, 8L, 4L, 10L], 11L)\
    \ == true);\n    assert(candidate([1L, 8L, 4L, 10L], 10L) == false);\n}\nvoid\
    \ main(){}"
  status: Exception
  stderr: 'core.exception.AssertError@/tmp/tmpev0f60w0.d(29): unittest failure

    ----------------

    ??:? _d_unittestp [0x4281dd]

    ??:? void tmpev0f60w0.__unittest_L20_C1() [0x427f4b]

    ??:? void tmpev0f60w0.__modtest() [0x427f60]

    ??:? int core.runtime.runModuleUnitTests().__foreachbody2(object.ModuleInfo*)
    [0x42c1c7]

    ??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)).__lambda2(immutable(object.ModuleInfo*))
    [0x42b05a]

    ??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))).__foreachbody2(ref
    rt.sections_elf_shared.DSO) [0x4301ed]

    ??:? int rt.sections_elf_shared.DSO.opApply(scope int delegate(ref rt.sections_elf_shared.DSO))
    [0x43069c]

    ??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*)))
    [0x430179]

    ??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)) [0x42b031]

    ??:? runModuleUnitTests [0x42bf9d]

    ??:? void rt.dmain2._d_run_main(int, char**, extern (C) int function(char[][])*).runAll()
    [0x42862c]

    ??:? void rt.dmain2._d_r'
  stdout: ''
  timestamp: 1660163090
- exit_code: 1
  program: "import std.typecons;\nimport std.math;\n/*\nReturn True if all numbers\
    \ in the list l are below threshold t.\n    >>> below_threshold([1L, 2L, 4L, 10L],\
    \ 100L)\n    true\n    >>> below_threshold([1L, 20L, 4L, 10L], 5L)\n    false\n\
    \    \n*/\nbool below_threshold(long[] l, long t) \n{\n    foreach(long i; l)\n\
    \    {\n        if(i > t)\n            return false;\n    }\n    return true;\n\
    }\nunittest\n{\n    alias candidate = below_threshold;\n\n    assert(candidate([1L,\
    \ 2L, 4L, 10L], 100L) == true);\n    assert(candidate([1L, 20L, 4L, 10L], 5L)\
    \ == false);\n    assert(candidate([1L, 20L, 4L, 10L], 21L) == true);\n    assert(candidate([1L,\
    \ 20L, 4L, 10L], 22L) == true);\n    assert(candidate([1L, 8L, 4L, 10L], 11L)\
    \ == true);\n    assert(candidate([1L, 8L, 4L, 10L], 10L) == false);\n}\nvoid\
    \ main(){}"
  status: Exception
  stderr: 'core.exception.AssertError@/tmp/tmpev0f60w0.d(29): unittest failure

    ----------------

    ??:? _d_unittestp [0x4281dd]

    ??:? void tmpev0f60w0.__unittest_L20_C1() [0x427f4b]

    ??:? void tmpev0f60w0.__modtest() [0x427f60]

    ??:? int core.runtime.runModuleUnitTests().__foreachbody2(object.ModuleInfo*)
    [0x42c1c7]

    ??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)).__lambda2(immutable(object.ModuleInfo*))
    [0x42b05a]

    ??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))).__foreachbody2(ref
    rt.sections_elf_shared.DSO) [0x4301ed]

    ??:? int rt.sections_elf_shared.DSO.opApply(scope int delegate(ref rt.sections_elf_shared.DSO))
    [0x43069c]

    ??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*)))
    [0x430179]

    ??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)) [0x42b031]

    ??:? runModuleUnitTests [0x42bf9d]

    ??:? void rt.dmain2._d_run_main(int, char**, extern (C) int function(char[][])*).runAll()
    [0x42862c]

    ??:? void rt.dmain2._d_r'
  stdout: ''
  timestamp: 1660163090
- exit_code: 0
  program: "import std.typecons;\nimport std.math;\n/*\nReturn True if all numbers\
    \ in the list l are below threshold t.\n    >>> below_threshold([1L, 2L, 4L, 10L],\
    \ 100L)\n    true\n    >>> below_threshold([1L, 20L, 4L, 10L], 5L)\n    false\n\
    \    \n*/\nbool below_threshold(long[] l, long t) \n{\n    foreach(long i; l)\n\
    \    {\n        if(i >= t)\n            return false;\n    }\n    return true;\n\
    }\nunittest\n{\n    alias candidate = below_threshold;\n\n    assert(candidate([1L,\
    \ 2L, 4L, 10L], 100L) == true);\n    assert(candidate([1L, 20L, 4L, 10L], 5L)\
    \ == false);\n    assert(candidate([1L, 20L, 4L, 10L], 21L) == true);\n    assert(candidate([1L,\
    \ 20L, 4L, 10L], 22L) == true);\n    assert(candidate([1L, 8L, 4L, 10L], 11L)\
    \ == true);\n    assert(candidate([1L, 8L, 4L, 10L], 10L) == false);\n}\nvoid\
    \ main(){}"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660163090
- exit_code: 0
  program: "import std.typecons;\nimport std.math;\n/*\nReturn True if all numbers\
    \ in the list l are below threshold t.\n    >>> below_threshold([1L, 2L, 4L, 10L],\
    \ 100L)\n    true\n    >>> below_threshold([1L, 20L, 4L, 10L], 5L)\n    false\n\
    \    \n*/\nbool below_threshold(long[] l, long t) \n{\n    foreach(long x; l)\n\
    \    {\n        if(x >= t)\n            return false;\n    }\n    return true;\n\
    }\nunittest\n{\n    alias candidate = below_threshold;\n\n    assert(candidate([1L,\
    \ 2L, 4L, 10L], 100L) == true);\n    assert(candidate([1L, 20L, 4L, 10L], 5L)\
    \ == false);\n    assert(candidate([1L, 20L, 4L, 10L], 21L) == true);\n    assert(candidate([1L,\
    \ 20L, 4L, 10L], 22L) == true);\n    assert(candidate([1L, 8L, 4L, 10L], 11L)\
    \ == true);\n    assert(candidate([1L, 8L, 4L, 10L], 10L) == false);\n}\nvoid\
    \ main(){}"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660163090
- exit_code: 0
  program: "import std.typecons;\nimport std.math;\n/*\nReturn True if all numbers\
    \ in the list l are below threshold t.\n    >>> below_threshold([1L, 2L, 4L, 10L],\
    \ 100L)\n    true\n    >>> below_threshold([1L, 20L, 4L, 10L], 5L)\n    false\n\
    \    \n*/\nbool below_threshold(long[] l, long t) \n{\n    foreach(long i; l)\
    \ \n    {\n        if(i >= t) \n        {\n            return false;\n       \
    \ }\n    }\n    return true;\n}\nunittest\n{\n    alias candidate = below_threshold;\n\
    \n    assert(candidate([1L, 2L, 4L, 10L], 100L) == true);\n    assert(candidate([1L,\
    \ 20L, 4L, 10L], 5L) == false);\n    assert(candidate([1L, 20L, 4L, 10L], 21L)\
    \ == true);\n    assert(candidate([1L, 20L, 4L, 10L], 22L) == true);\n    assert(candidate([1L,\
    \ 8L, 4L, 10L], 11L) == true);\n    assert(candidate([1L, 8L, 4L, 10L], 10L) ==\
    \ false);\n}\nvoid main(){}"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660163090
- exit_code: 1
  program: "import std.typecons;\nimport std.math;\n/*\nReturn True if all numbers\
    \ in the list l are below threshold t.\n    >>> below_threshold([1L, 2L, 4L, 10L],\
    \ 100L)\n    true\n    >>> below_threshold([1L, 20L, 4L, 10L], 5L)\n    false\n\
    \    \n*/\nbool below_threshold(long[] l, long t) \n{\n    foreach(long i; l)\n\
    \    {\n        if(i > t)\n            return false;\n    }\n    return true;\n\
    }\nunittest\n{\n    alias candidate = below_threshold;\n\n    assert(candidate([1L,\
    \ 2L, 4L, 10L], 100L) == true);\n    assert(candidate([1L, 20L, 4L, 10L], 5L)\
    \ == false);\n    assert(candidate([1L, 20L, 4L, 10L], 21L) == true);\n    assert(candidate([1L,\
    \ 20L, 4L, 10L], 22L) == true);\n    assert(candidate([1L, 8L, 4L, 10L], 11L)\
    \ == true);\n    assert(candidate([1L, 8L, 4L, 10L], 10L) == false);\n}\nvoid\
    \ main(){}"
  status: Exception
  stderr: 'core.exception.AssertError@/tmp/tmpev0f60w0.d(29): unittest failure

    ----------------

    ??:? _d_unittestp [0x4281dd]

    ??:? void tmpev0f60w0.__unittest_L20_C1() [0x427f4b]

    ??:? void tmpev0f60w0.__modtest() [0x427f60]

    ??:? int core.runtime.runModuleUnitTests().__foreachbody2(object.ModuleInfo*)
    [0x42c1c7]

    ??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)).__lambda2(immutable(object.ModuleInfo*))
    [0x42b05a]

    ??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))).__foreachbody2(ref
    rt.sections_elf_shared.DSO) [0x4301ed]

    ??:? int rt.sections_elf_shared.DSO.opApply(scope int delegate(ref rt.sections_elf_shared.DSO))
    [0x43069c]

    ??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*)))
    [0x430179]

    ??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)) [0x42b031]

    ??:? runModuleUnitTests [0x42bf9d]

    ??:? void rt.dmain2._d_run_main(int, char**, extern (C) int function(char[][])*).runAll()
    [0x42862c]

    ??:? void rt.dmain2._d_r'
  stdout: ''
  timestamp: 1660163090
- exit_code: 1
  program: "import std.typecons;\nimport std.math;\n/*\nReturn True if all numbers\
    \ in the list l are below threshold t.\n    >>> below_threshold([1L, 2L, 4L, 10L],\
    \ 100L)\n    true\n    >>> below_threshold([1L, 20L, 4L, 10L], 5L)\n    false\n\
    \    \n*/\nbool below_threshold(long[] l, long t) \n{\n    foreach(i; l)\n   \
    \ {\n        if(i > t)\n            return false;\n    }\n    return true;\n}\n\
    /*\nReturn True if all numbers in the list l are below threshold t.\n    >>> below_threshold([1L,\
    \ 2L, 4L, 10L], 100L)\n    true\n    >>> below_threshold([1L, 20L, 4L, 10L], 5L)\n\
    \    false\n    \n*/\nunittest\n{\n    alias candidate = below_threshold;\n\n\
    \    assert(candidate([1L, 2L, 4L, 10L], 100L) == true);\n    assert(candidate([1L,\
    \ 20L, 4L, 10L], 5L) == false);\n    assert(candidate([1L, 20L, 4L, 10L], 21L)\
    \ == true);\n    assert(candidate([1L, 20L, 4L, 10L], 22L) == true);\n    assert(candidate([1L,\
    \ 8L, 4L, 10L], 11L) == true);\n    assert(candidate([1L, 8L, 4L, 10L], 10L) ==\
    \ false);\n}\nvoid main(){}"
  status: Exception
  stderr: 'core.exception.AssertError@/tmp/tmp_wlgu24n.d(37): unittest failure

    ----------------

    ??:? _d_unittestp [0x4281dd]

    ??:? void tmp_wlgu24n.__unittest_L28_C1() [0x427f4b]

    ??:? void tmp_wlgu24n.__modtest() [0x427f60]

    ??:? int core.runtime.runModuleUnitTests().__foreachbody2(object.ModuleInfo*)
    [0x42c1c7]

    ??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)).__lambda2(immutable(object.ModuleInfo*))
    [0x42b05a]

    ??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))).__foreachbody2(ref
    rt.sections_elf_shared.DSO) [0x4301ed]

    ??:? int rt.sections_elf_shared.DSO.opApply(scope int delegate(ref rt.sections_elf_shared.DSO))
    [0x43069c]

    ??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*)))
    [0x430179]

    ??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)) [0x42b031]

    ??:? runModuleUnitTests [0x42bf9d]

    ??:? void rt.dmain2._d_run_main(int, char**, extern (C) int function(char[][])*).runAll()
    [0x42862c]

    ??:? void rt.dmain2._d_r'
  stdout: ''
  timestamp: 1660163090
- exit_code: 1
  program: "import std.typecons;\nimport std.math;\n/*\nReturn True if all numbers\
    \ in the list l are below threshold t.\n    >>> below_threshold([1L, 2L, 4L, 10L],\
    \ 100L)\n    true\n    >>> below_threshold([1L, 20L, 4L, 10L], 5L)\n    false\n\
    \    \n*/\nbool below_threshold(long[] l, long t) \n{\n    foreach(long i; l)\n\
    \    {\n        if(i > t)\n            return false;\n    }\n    return true;\n\
    }\n/*\nReturn True if all numbers in the list l are below threshold t.\n    >>>\
    \ below_threshold([1L, 2L, 4L, 10L], 100L)\n    true\n    >>> below_threshold([1L,\
    \ 20L, 4L, 10L], 5L)\n    false\n    \n*/\nunittest\n{\n    alias candidate =\
    \ below_threshold;\n\n    assert(candidate([1L, 2L, 4L, 10L], 100L) == true);\n\
    \    assert(candidate([1L, 20L, 4L, 10L], 5L) == false);\n    assert(candidate([1L,\
    \ 20L, 4L, 10L], 21L) == true);\n    assert(candidate([1L, 20L, 4L, 10L], 22L)\
    \ == true);\n    assert(candidate([1L, 8L, 4L, 10L], 11L) == true);\n    assert(candidate([1L,\
    \ 8L, 4L, 10L], 10L) == false);\n}\nvoid main(){}"
  status: Exception
  stderr: 'core.exception.AssertError@/tmp/tmp_kfz1oq0.d(37): unittest failure

    ----------------

    ??:? _d_unittestp [0x4281dd]

    ??:? void tmp_kfz1oq0.__unittest_L28_C1() [0x427f4b]

    ??:? void tmp_kfz1oq0.__modtest() [0x427f60]

    ??:? int core.runtime.runModuleUnitTests().__foreachbody2(object.ModuleInfo*)
    [0x42c1c7]

    ??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)).__lambda2(immutable(object.ModuleInfo*))
    [0x42b05a]

    ??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))).__foreachbody2(ref
    rt.sections_elf_shared.DSO) [0x4301ed]

    ??:? int rt.sections_elf_shared.DSO.opApply(scope int delegate(ref rt.sections_elf_shared.DSO))
    [0x43069c]

    ??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*)))
    [0x430179]

    ??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)) [0x42b031]

    ??:? runModuleUnitTests [0x42bf9d]

    ??:? void rt.dmain2._d_run_main(int, char**, extern (C) int function(char[][])*).runAll()
    [0x42862c]

    ??:? void rt.dmain2._d_r'
  stdout: ''
  timestamp: 1660163090
- exit_code: 1
  program: "import std.typecons;\nimport std.math;\n/*\nReturn True if all numbers\
    \ in the list l are below threshold t.\n    >>> below_threshold([1L, 2L, 4L, 10L],\
    \ 100L)\n    true\n    >>> below_threshold([1L, 20L, 4L, 10L], 5L)\n    false\n\
    \    \n*/\nbool below_threshold(long[] l, long t) \n{\n    foreach(i; l)\n   \
    \ {\n        if(i > t)\n            return false;\n    }\n    return true;\n}\n\
    /*\nReturn True if all numbers in the list l are below threshold t.\n    >>> below_threshold([1L,\
    \ 2L, 4L, 10L], 100L)\n    true\n    >>> below_threshold([1L, 20L, 4L, 10L], 5L)\n\
    \    false\n    \n*/\nunittest\n{\n    alias candidate = below_threshold;\n\n\
    \    assert(candidate([1L, 2L, 4L, 10L], 100L) == true);\n    assert(candidate([1L,\
    \ 20L, 4L, 10L], 5L) == false);\n    assert(candidate([1L, 20L, 4L, 10L], 21L)\
    \ == true);\n    assert(candidate([1L, 20L, 4L, 10L], 22L) == true);\n    assert(candidate([1L,\
    \ 8L, 4L, 10L], 11L) == true);\n    assert(candidate([1L, 8L, 4L, 10L], 10L) ==\
    \ false);\n}\nvoid main(){}"
  status: Exception
  stderr: 'core.exception.AssertError@/tmp/tmp_wlgu24n.d(37): unittest failure

    ----------------

    ??:? _d_unittestp [0x4281dd]

    ??:? void tmp_wlgu24n.__unittest_L28_C1() [0x427f4b]

    ??:? void tmp_wlgu24n.__modtest() [0x427f60]

    ??:? int core.runtime.runModuleUnitTests().__foreachbody2(object.ModuleInfo*)
    [0x42c1c7]

    ??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)).__lambda2(immutable(object.ModuleInfo*))
    [0x42b05a]

    ??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))).__foreachbody2(ref
    rt.sections_elf_shared.DSO) [0x4301ed]

    ??:? int rt.sections_elf_shared.DSO.opApply(scope int delegate(ref rt.sections_elf_shared.DSO))
    [0x43069c]

    ??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*)))
    [0x430179]

    ??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)) [0x42b031]

    ??:? runModuleUnitTests [0x42bf9d]

    ??:? void rt.dmain2._d_run_main(int, char**, extern (C) int function(char[][])*).runAll()
    [0x42862c]

    ??:? void rt.dmain2._d_r'
  stdout: ''
  timestamp: 1660163090
- exit_code: 0
  program: "import std.typecons;\nimport std.math;\n/*\nReturn True if all numbers\
    \ in the list l are below threshold t.\n    >>> below_threshold([1L, 2L, 4L, 10L],\
    \ 100L)\n    true\n    >>> below_threshold([1L, 20L, 4L, 10L], 5L)\n    false\n\
    \    \n*/\nbool below_threshold(long[] l, long t) \n{\n    bool result = true;\n\
    \    foreach(long i; l)\n    {\n        if(i >= t)\n        {\n            result\
    \ = false;\n            break;\n        }\n    }\n    return result;\n}\n/*\n\
    Return True if all numbers in the list l are below threshold t.\n    >>> below_threshold([1L,\
    \ 2L, 4L, 10L], 100L)\n    true\n    >>> below_threshold([1L, 20L, 4L, 10L], 5L)\n\
    \    false\n    \n*/\nunittest\n{\n    alias candidate = below_threshold;\n\n\
    \    assert(candidate([1L, 2L, 4L, 10L], 100L) == true);\n    assert(candidate([1L,\
    \ 20L, 4L, 10L], 5L) == false);\n    assert(candidate([1L, 20L, 4L, 10L], 21L)\
    \ == true);\n    assert(candidate([1L, 20L, 4L, 10L], 22L) == true);\n    assert(candidate([1L,\
    \ 8L, 4L, 10L], 11L) == true);\n    assert(candidate([1L, 8L, 4L, 10L], 10L) ==\
    \ false);\n}\nvoid main(){}"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660163090
- exit_code: 1
  program: "import std.typecons;\nimport std.math;\n/*\nReturn True if all numbers\
    \ in the list l are below threshold t.\n    >>> below_threshold([1L, 2L, 4L, 10L],\
    \ 100L)\n    true\n    >>> below_threshold([1L, 20L, 4L, 10L], 5L)\n    false\n\
    \    \n*/\nbool below_threshold(long[] l, long t) \n{\n    foreach(long i; l)\n\
    \    {\n        if(i > t)\n            return false;\n    }\n    return true;\n\
    }\nunittest\n{\n    alias candidate = below_threshold;\n\n    assert(candidate([1L,\
    \ 2L, 4L, 10L], 100L) == true);\n    assert(candidate([1L, 20L, 4L, 10L], 5L)\
    \ == false);\n    assert(candidate([1L, 20L, 4L, 10L], 21L) == true);\n    assert(candidate([1L,\
    \ 20L, 4L, 10L], 22L) == true);\n    assert(candidate([1L, 8L, 4L, 10L], 11L)\
    \ == true);\n    assert(candidate([1L, 8L, 4L, 10L], 10L) == false);\n}\nvoid\
    \ main(){}"
  status: Exception
  stderr: 'core.exception.AssertError@/tmp/tmpev0f60w0.d(29): unittest failure

    ----------------

    ??:? _d_unittestp [0x4281dd]

    ??:? void tmpev0f60w0.__unittest_L20_C1() [0x427f4b]

    ??:? void tmpev0f60w0.__modtest() [0x427f60]

    ??:? int core.runtime.runModuleUnitTests().__foreachbody2(object.ModuleInfo*)
    [0x42c1c7]

    ??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)).__lambda2(immutable(object.ModuleInfo*))
    [0x42b05a]

    ??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))).__foreachbody2(ref
    rt.sections_elf_shared.DSO) [0x4301ed]

    ??:? int rt.sections_elf_shared.DSO.opApply(scope int delegate(ref rt.sections_elf_shared.DSO))
    [0x43069c]

    ??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*)))
    [0x430179]

    ??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)) [0x42b031]

    ??:? runModuleUnitTests [0x42bf9d]

    ??:? void rt.dmain2._d_run_main(int, char**, extern (C) int function(char[][])*).runAll()
    [0x42862c]

    ??:? void rt.dmain2._d_r'
  stdout: ''
  timestamp: 1660163090
- exit_code: 1
  program: "import std.typecons;\nimport std.math;\n/*\nReturn True if all numbers\
    \ in the list l are below threshold t.\n    >>> below_threshold([1L, 2L, 4L, 10L],\
    \ 100L)\n    true\n    >>> below_threshold([1L, 20L, 4L, 10L], 5L)\n    false\n\
    \    \n*/\nbool below_threshold(long[] l, long t) \n{\n    foreach(i; l)\n   \
    \ {\n        if(i > t)\n            return false;\n    }\n    return true;\n}\n\
    unittest\n{\n    alias candidate = below_threshold;\n\n    assert(candidate([1L,\
    \ 2L, 4L, 10L], 100L) == true);\n    assert(candidate([1L, 20L, 4L, 10L], 5L)\
    \ == false);\n    assert(candidate([1L, 20L, 4L, 10L], 21L) == true);\n    assert(candidate([1L,\
    \ 20L, 4L, 10L], 22L) == true);\n    assert(candidate([1L, 8L, 4L, 10L], 11L)\
    \ == true);\n    assert(candidate([1L, 8L, 4L, 10L], 10L) == false);\n}\nvoid\
    \ main(){}"
  status: Exception
  stderr: 'core.exception.AssertError@/tmp/tmpplk4ck84.d(29): unittest failure

    ----------------

    ??:? _d_unittestp [0x4281dd]

    ??:? void tmpplk4ck84.__unittest_L20_C1() [0x427f4b]

    ??:? void tmpplk4ck84.__modtest() [0x427f60]

    ??:? int core.runtime.runModuleUnitTests().__foreachbody2(object.ModuleInfo*)
    [0x42c1c7]

    ??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)).__lambda2(immutable(object.ModuleInfo*))
    [0x42b05a]

    ??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))).__foreachbody2(ref
    rt.sections_elf_shared.DSO) [0x4301ed]

    ??:? int rt.sections_elf_shared.DSO.opApply(scope int delegate(ref rt.sections_elf_shared.DSO))
    [0x43069c]

    ??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*)))
    [0x430179]

    ??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)) [0x42b031]

    ??:? runModuleUnitTests [0x42bf9d]

    ??:? void rt.dmain2._d_run_main(int, char**, extern (C) int function(char[][])*).runAll()
    [0x42862c]

    ??:? void rt.dmain2._d_r'
  stdout: ''
  timestamp: 1660163090
- exit_code: 1
  program: "import std.typecons;\nimport std.math;\n/*\nReturn True if all numbers\
    \ in the list l are below threshold t.\n    >>> below_threshold([1L, 2L, 4L, 10L],\
    \ 100L)\n    true\n    >>> below_threshold([1L, 20L, 4L, 10L], 5L)\n    false\n\
    \    \n*/\nbool below_threshold(long[] l, long t) \n{\n    foreach(long x; l)\n\
    \    {\n        if(x > t)\n            return false;\n    }\n    return true;\n\
    }\nunittest\n{\n    alias candidate = below_threshold;\n\n    assert(candidate([1L,\
    \ 2L, 4L, 10L], 100L) == true);\n    assert(candidate([1L, 20L, 4L, 10L], 5L)\
    \ == false);\n    assert(candidate([1L, 20L, 4L, 10L], 21L) == true);\n    assert(candidate([1L,\
    \ 20L, 4L, 10L], 22L) == true);\n    assert(candidate([1L, 8L, 4L, 10L], 11L)\
    \ == true);\n    assert(candidate([1L, 8L, 4L, 10L], 10L) == false);\n}\nvoid\
    \ main(){}"
  status: Exception
  stderr: 'core.exception.AssertError@/tmp/tmpx_fvps4k.d(29): unittest failure

    ----------------

    ??:? _d_unittestp [0x4281dd]

    ??:? void tmpx_fvps4k.__unittest_L20_C1() [0x427f4b]

    ??:? void tmpx_fvps4k.__modtest() [0x427f60]

    ??:? int core.runtime.runModuleUnitTests().__foreachbody2(object.ModuleInfo*)
    [0x42c1c7]

    ??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)).__lambda2(immutable(object.ModuleInfo*))
    [0x42b05a]

    ??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))).__foreachbody2(ref
    rt.sections_elf_shared.DSO) [0x4301ed]

    ??:? int rt.sections_elf_shared.DSO.opApply(scope int delegate(ref rt.sections_elf_shared.DSO))
    [0x43069c]

    ??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*)))
    [0x430179]

    ??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)) [0x42b031]

    ??:? runModuleUnitTests [0x42bf9d]

    ??:? void rt.dmain2._d_run_main(int, char**, extern (C) int function(char[][])*).runAll()
    [0x42862c]

    ??:? void rt.dmain2._d_r'
  stdout: ''
  timestamp: 1660163090
- exit_code: 1
  program: "import std.typecons;\nimport std.math;\n/*\nReturn True if all numbers\
    \ in the list l are below threshold t.\n    >>> below_threshold([1L, 2L, 4L, 10L],\
    \ 100L)\n    true\n    >>> below_threshold([1L, 20L, 4L, 10L], 5L)\n    false\n\
    \    \n*/\nbool below_threshold(long[] l, long t) \n{\n    foreach(long i; l)\n\
    \    {\n        if(i > t)\n            return false;\n    }\n    return true;\n\
    }\nunittest\n{\n    alias candidate = below_threshold;\n\n    assert(candidate([1L,\
    \ 2L, 4L, 10L], 100L) == true);\n    assert(candidate([1L, 20L, 4L, 10L], 5L)\
    \ == false);\n    assert(candidate([1L, 20L, 4L, 10L], 21L) == true);\n    assert(candidate([1L,\
    \ 20L, 4L, 10L], 22L) == true);\n    assert(candidate([1L, 8L, 4L, 10L], 11L)\
    \ == true);\n    assert(candidate([1L, 8L, 4L, 10L], 10L) == false);\n}\nvoid\
    \ main(){}"
  status: Exception
  stderr: 'core.exception.AssertError@/tmp/tmpev0f60w0.d(29): unittest failure

    ----------------

    ??:? _d_unittestp [0x4281dd]

    ??:? void tmpev0f60w0.__unittest_L20_C1() [0x427f4b]

    ??:? void tmpev0f60w0.__modtest() [0x427f60]

    ??:? int core.runtime.runModuleUnitTests().__foreachbody2(object.ModuleInfo*)
    [0x42c1c7]

    ??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)).__lambda2(immutable(object.ModuleInfo*))
    [0x42b05a]

    ??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))).__foreachbody2(ref
    rt.sections_elf_shared.DSO) [0x4301ed]

    ??:? int rt.sections_elf_shared.DSO.opApply(scope int delegate(ref rt.sections_elf_shared.DSO))
    [0x43069c]

    ??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*)))
    [0x430179]

    ??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)) [0x42b031]

    ??:? runModuleUnitTests [0x42bf9d]

    ??:? void rt.dmain2._d_run_main(int, char**, extern (C) int function(char[][])*).runAll()
    [0x42862c]

    ??:? void rt.dmain2._d_r'
  stdout: ''
  timestamp: 1660163090
- exit_code: 1
  program: "import std.typecons;\nimport std.math;\n/*\nReturn True if all numbers\
    \ in the list l are below threshold t.\n    >>> below_threshold([1L, 2L, 4L, 10L],\
    \ 100L)\n    true\n    >>> below_threshold([1L, 20L, 4L, 10L], 5L)\n    false\n\
    \    \n*/\nbool below_threshold(long[] l, long t) \n{\n    foreach(long i; l)\n\
    \    {\n        if(i > t)\n            return false;\n    }\n    return true;\n\
    }\nunittest\n{\n    alias candidate = below_threshold;\n\n    assert(candidate([1L,\
    \ 2L, 4L, 10L], 100L) == true);\n    assert(candidate([1L, 20L, 4L, 10L], 5L)\
    \ == false);\n    assert(candidate([1L, 20L, 4L, 10L], 21L) == true);\n    assert(candidate([1L,\
    \ 20L, 4L, 10L], 22L) == true);\n    assert(candidate([1L, 8L, 4L, 10L], 11L)\
    \ == true);\n    assert(candidate([1L, 8L, 4L, 10L], 10L) == false);\n}\nvoid\
    \ main(){}"
  status: Exception
  stderr: 'core.exception.AssertError@/tmp/tmpev0f60w0.d(29): unittest failure

    ----------------

    ??:? _d_unittestp [0x4281dd]

    ??:? void tmpev0f60w0.__unittest_L20_C1() [0x427f4b]

    ??:? void tmpev0f60w0.__modtest() [0x427f60]

    ??:? int core.runtime.runModuleUnitTests().__foreachbody2(object.ModuleInfo*)
    [0x42c1c7]

    ??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)).__lambda2(immutable(object.ModuleInfo*))
    [0x42b05a]

    ??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))).__foreachbody2(ref
    rt.sections_elf_shared.DSO) [0x4301ed]

    ??:? int rt.sections_elf_shared.DSO.opApply(scope int delegate(ref rt.sections_elf_shared.DSO))
    [0x43069c]

    ??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*)))
    [0x430179]

    ??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)) [0x42b031]

    ??:? runModuleUnitTests [0x42bf9d]

    ??:? void rt.dmain2._d_run_main(int, char**, extern (C) int function(char[][])*).runAll()
    [0x42862c]

    ??:? void rt.dmain2._d_r'
  stdout: ''
  timestamp: 1660163090
- exit_code: 1
  program: "import std.typecons;\nimport std.math;\n/*\nReturn True if all numbers\
    \ in the list l are below threshold t.\n    >>> below_threshold([1L, 2L, 4L, 10L],\
    \ 100L)\n    true\n    >>> below_threshold([1L, 20L, 4L, 10L], 5L)\n    false\n\
    \    \n*/\nbool below_threshold(long[] l, long t) \n{\n    foreach(long i; l)\n\
    \    {\n        if(i > t)\n            return false;\n    }\n    return true;\n\
    }\nunittest\n{\n    alias candidate = below_threshold;\n\n    assert(candidate([1L,\
    \ 2L, 4L, 10L], 100L) == true);\n    assert(candidate([1L, 20L, 4L, 10L], 5L)\
    \ == false);\n    assert(candidate([1L, 20L, 4L, 10L], 21L) == true);\n    assert(candidate([1L,\
    \ 20L, 4L, 10L], 22L) == true);\n    assert(candidate([1L, 8L, 4L, 10L], 11L)\
    \ == true);\n    assert(candidate([1L, 8L, 4L, 10L], 10L) == false);\n}\nvoid\
    \ main(){}"
  status: Exception
  stderr: 'core.exception.AssertError@/tmp/tmpev0f60w0.d(29): unittest failure

    ----------------

    ??:? _d_unittestp [0x4281dd]

    ??:? void tmpev0f60w0.__unittest_L20_C1() [0x427f4b]

    ??:? void tmpev0f60w0.__modtest() [0x427f60]

    ??:? int core.runtime.runModuleUnitTests().__foreachbody2(object.ModuleInfo*)
    [0x42c1c7]

    ??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)).__lambda2(immutable(object.ModuleInfo*))
    [0x42b05a]

    ??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))).__foreachbody2(ref
    rt.sections_elf_shared.DSO) [0x4301ed]

    ??:? int rt.sections_elf_shared.DSO.opApply(scope int delegate(ref rt.sections_elf_shared.DSO))
    [0x43069c]

    ??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*)))
    [0x430179]

    ??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)) [0x42b031]

    ??:? runModuleUnitTests [0x42bf9d]

    ??:? void rt.dmain2._d_run_main(int, char**, extern (C) int function(char[][])*).runAll()
    [0x42862c]

    ??:? void rt.dmain2._d_r'
  stdout: ''
  timestamp: 1660163090
- exit_code: 0
  program: "import std.typecons;\nimport std.math;\n/*\nReturn True if all numbers\
    \ in the list l are below threshold t.\n    >>> below_threshold([1L, 2L, 4L, 10L],\
    \ 100L)\n    true\n    >>> below_threshold([1L, 20L, 4L, 10L], 5L)\n    false\n\
    \    \n*/\nbool below_threshold(long[] l, long t) \n{\n    bool result = true;\n\
    \    foreach(long x; l)\n    {\n        if(x >= t)\n        {\n            result\
    \ = false;\n            break;\n        }\n    }\n    return result;\n}\nunittest\n\
    {\n    alias candidate = below_threshold;\n\n    assert(candidate([1L, 2L, 4L,\
    \ 10L], 100L) == true);\n    assert(candidate([1L, 20L, 4L, 10L], 5L) == false);\n\
    \    assert(candidate([1L, 20L, 4L, 10L], 21L) == true);\n    assert(candidate([1L,\
    \ 20L, 4L, 10L], 22L) == true);\n    assert(candidate([1L, 8L, 4L, 10L], 11L)\
    \ == true);\n    assert(candidate([1L, 8L, 4L, 10L], 10L) == false);\n}\nvoid\
    \ main(){}"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660163090
- exit_code: 1
  program: "import std.typecons;\nimport std.math;\n/*\nReturn True if all numbers\
    \ in the list l are below threshold t.\n    >>> below_threshold([1L, 2L, 4L, 10L],\
    \ 100L)\n    true\n    >>> below_threshold([1L, 20L, 4L, 10L], 5L)\n    false\n\
    \    \n*/\nbool below_threshold(long[] l, long t) \n{\n    foreach(long i; l)\n\
    \    {\n        if(i > t)\n            return false;\n    }\n    return true;\n\
    }\nunittest\n{\n    alias candidate = below_threshold;\n\n    assert(candidate([1L,\
    \ 2L, 4L, 10L], 100L) == true);\n    assert(candidate([1L, 20L, 4L, 10L], 5L)\
    \ == false);\n    assert(candidate([1L, 20L, 4L, 10L], 21L) == true);\n    assert(candidate([1L,\
    \ 20L, 4L, 10L], 22L) == true);\n    assert(candidate([1L, 8L, 4L, 10L], 11L)\
    \ == true);\n    assert(candidate([1L, 8L, 4L, 10L], 10L) == false);\n}\nvoid\
    \ main(){}"
  status: Exception
  stderr: 'core.exception.AssertError@/tmp/tmpev0f60w0.d(29): unittest failure

    ----------------

    ??:? _d_unittestp [0x4281dd]

    ??:? void tmpev0f60w0.__unittest_L20_C1() [0x427f4b]

    ??:? void tmpev0f60w0.__modtest() [0x427f60]

    ??:? int core.runtime.runModuleUnitTests().__foreachbody2(object.ModuleInfo*)
    [0x42c1c7]

    ??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)).__lambda2(immutable(object.ModuleInfo*))
    [0x42b05a]

    ??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))).__foreachbody2(ref
    rt.sections_elf_shared.DSO) [0x4301ed]

    ??:? int rt.sections_elf_shared.DSO.opApply(scope int delegate(ref rt.sections_elf_shared.DSO))
    [0x43069c]

    ??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*)))
    [0x430179]

    ??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)) [0x42b031]

    ??:? runModuleUnitTests [0x42bf9d]

    ??:? void rt.dmain2._d_run_main(int, char**, extern (C) int function(char[][])*).runAll()
    [0x42862c]

    ??:? void rt.dmain2._d_r'
  stdout: ''
  timestamp: 1660163090
- exit_code: 1
  program: "import std.typecons;\nimport std.math;\n/*\nReturn True if all numbers\
    \ in the list l are below threshold t.\n    >>> below_threshold([1L, 2L, 4L, 10L],\
    \ 100L)\n    true\n    >>> below_threshold([1L, 20L, 4L, 10L], 5L)\n    false\n\
    \    \n*/\nbool below_threshold(long[] l, long t) \n{\n    foreach(long i; l)\n\
    \    {\n        if(i > t)\n            return false;\n    }\n    return true;\n\
    }\nunittest\n{\n    alias candidate = below_threshold;\n\n    assert(candidate([1L,\
    \ 2L, 4L, 10L], 100L) == true);\n    assert(candidate([1L, 20L, 4L, 10L], 5L)\
    \ == false);\n    assert(candidate([1L, 20L, 4L, 10L], 21L) == true);\n    assert(candidate([1L,\
    \ 20L, 4L, 10L], 22L) == true);\n    assert(candidate([1L, 8L, 4L, 10L], 11L)\
    \ == true);\n    assert(candidate([1L, 8L, 4L, 10L], 10L) == false);\n}\nvoid\
    \ main(){}"
  status: Exception
  stderr: 'core.exception.AssertError@/tmp/tmpev0f60w0.d(29): unittest failure

    ----------------

    ??:? _d_unittestp [0x4281dd]

    ??:? void tmpev0f60w0.__unittest_L20_C1() [0x427f4b]

    ??:? void tmpev0f60w0.__modtest() [0x427f60]

    ??:? int core.runtime.runModuleUnitTests().__foreachbody2(object.ModuleInfo*)
    [0x42c1c7]

    ??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)).__lambda2(immutable(object.ModuleInfo*))
    [0x42b05a]

    ??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))).__foreachbody2(ref
    rt.sections_elf_shared.DSO) [0x4301ed]

    ??:? int rt.sections_elf_shared.DSO.opApply(scope int delegate(ref rt.sections_elf_shared.DSO))
    [0x43069c]

    ??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*)))
    [0x430179]

    ??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)) [0x42b031]

    ??:? runModuleUnitTests [0x42bf9d]

    ??:? void rt.dmain2._d_run_main(int, char**, extern (C) int function(char[][])*).runAll()
    [0x42862c]

    ??:? void rt.dmain2._d_r'
  stdout: ''
  timestamp: 1660163090
- exit_code: 1
  program: "import std.typecons;\nimport std.math;\n/*\nReturn True if all numbers\
    \ in the list l are below threshold t.\n    >>> below_threshold([1L, 2L, 4L, 10L],\
    \ 100L)\n    true\n    >>> below_threshold([1L, 20L, 4L, 10L], 5L)\n    false\n\
    \    \n*/\nbool below_threshold(long[] l, long t) \n{\n    foreach(long x; l)\n\
    \    {\n        if(x > t)\n            return false;\n    }\n    return true;\n\
    }\nunittest\n{\n    alias candidate = below_threshold;\n\n    assert(candidate([1L,\
    \ 2L, 4L, 10L], 100L) == true);\n    assert(candidate([1L, 20L, 4L, 10L], 5L)\
    \ == false);\n    assert(candidate([1L, 20L, 4L, 10L], 21L) == true);\n    assert(candidate([1L,\
    \ 20L, 4L, 10L], 22L) == true);\n    assert(candidate([1L, 8L, 4L, 10L], 11L)\
    \ == true);\n    assert(candidate([1L, 8L, 4L, 10L], 10L) == false);\n}\nvoid\
    \ main(){}"
  status: Exception
  stderr: 'core.exception.AssertError@/tmp/tmpx_fvps4k.d(29): unittest failure

    ----------------

    ??:? _d_unittestp [0x4281dd]

    ??:? void tmpx_fvps4k.__unittest_L20_C1() [0x427f4b]

    ??:? void tmpx_fvps4k.__modtest() [0x427f60]

    ??:? int core.runtime.runModuleUnitTests().__foreachbody2(object.ModuleInfo*)
    [0x42c1c7]

    ??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)).__lambda2(immutable(object.ModuleInfo*))
    [0x42b05a]

    ??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))).__foreachbody2(ref
    rt.sections_elf_shared.DSO) [0x4301ed]

    ??:? int rt.sections_elf_shared.DSO.opApply(scope int delegate(ref rt.sections_elf_shared.DSO))
    [0x43069c]

    ??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*)))
    [0x430179]

    ??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)) [0x42b031]

    ??:? runModuleUnitTests [0x42bf9d]

    ??:? void rt.dmain2._d_run_main(int, char**, extern (C) int function(char[][])*).runAll()
    [0x42862c]

    ??:? void rt.dmain2._d_r'
  stdout: ''
  timestamp: 1660163090
- exit_code: 1
  program: "import std.typecons;\nimport std.math;\n/*\nReturn True if all numbers\
    \ in the list l are below threshold t.\n    >>> below_threshold([1L, 2L, 4L, 10L],\
    \ 100L)\n    true\n    >>> below_threshold([1L, 20L, 4L, 10L], 5L)\n    false\n\
    \    \n*/\nbool below_threshold(long[] l, long t) \n{\n    foreach(i; l)\n   \
    \ {\n        if(i > t)\n            return false;\n    }\n    return true;\n}\n\
    unittest\n{\n    alias candidate = below_threshold;\n\n    assert(candidate([1L,\
    \ 2L, 4L, 10L], 100L) == true);\n    assert(candidate([1L, 20L, 4L, 10L], 5L)\
    \ == false);\n    assert(candidate([1L, 20L, 4L, 10L], 21L) == true);\n    assert(candidate([1L,\
    \ 20L, 4L, 10L], 22L) == true);\n    assert(candidate([1L, 8L, 4L, 10L], 11L)\
    \ == true);\n    assert(candidate([1L, 8L, 4L, 10L], 10L) == false);\n}\nvoid\
    \ main(){}"
  status: Exception
  stderr: 'core.exception.AssertError@/tmp/tmpplk4ck84.d(29): unittest failure

    ----------------

    ??:? _d_unittestp [0x4281dd]

    ??:? void tmpplk4ck84.__unittest_L20_C1() [0x427f4b]

    ??:? void tmpplk4ck84.__modtest() [0x427f60]

    ??:? int core.runtime.runModuleUnitTests().__foreachbody2(object.ModuleInfo*)
    [0x42c1c7]

    ??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)).__lambda2(immutable(object.ModuleInfo*))
    [0x42b05a]

    ??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))).__foreachbody2(ref
    rt.sections_elf_shared.DSO) [0x4301ed]

    ??:? int rt.sections_elf_shared.DSO.opApply(scope int delegate(ref rt.sections_elf_shared.DSO))
    [0x43069c]

    ??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*)))
    [0x430179]

    ??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)) [0x42b031]

    ??:? runModuleUnitTests [0x42bf9d]

    ??:? void rt.dmain2._d_run_main(int, char**, extern (C) int function(char[][])*).runAll()
    [0x42862c]

    ??:? void rt.dmain2._d_r'
  stdout: ''
  timestamp: 1660163090
- exit_code: 1
  program: "import std.typecons;\nimport std.math;\n/*\nReturn True if all numbers\
    \ in the list l are below threshold t.\n    >>> below_threshold([1L, 2L, 4L, 10L],\
    \ 100L)\n    true\n    >>> below_threshold([1L, 20L, 4L, 10L], 5L)\n    false\n\
    \    \n*/\nbool below_threshold(long[] l, long t) \n{\n    foreach(long x; l)\n\
    \    {\n        if(x > t)\n            return false;\n    }\n    return true;\n\
    }\n/*\nReturn the number of elements in the list l that are below threshold t.\n\
    \    >>> count_below_threshold([1L, 2L, 4L, 10L], 100L)\n    4\n    >>> count_below_threshold([1L,\
    \ 20L, 4L, 10L], 5L)\n    2\n*/\nlong count_below_threshold(long[] l, long t)\
    \ \n{\n    long count = 0;\n    foreach(long x; l)\n    {\n        if(x < t)\n\
    \            count++;\n    }\n    return count;\n}\n/*\nReturn the number of elements\
    \ in the list l that are below threshold t.\n    >>> count_below_threshold([1L,\
    \ 2L, 4L, 10L], 100L)\n    4\n    >>> count_below_threshold([1L, 20L, 4L, 10L],\
    \ 5L)\n    2\n*/\nlong count_below_threshold_2(long[] l, long t) \n{\n    long\
    \ count = 0;\n    foreach(long x; l)\n    {\n        if(x < t)\n            count++;\n\
    \    }\n    return count;\n}\n/*\nReturn the number of elements in the list l\
    \ that are below threshold t.\n    >>> count_below_threshold([1L, 2L, 4L, 10L],\
    \ 100L)\n    4\n    >>> count_below_threshold([1L, 20L, 4L, 10L], 5L)\n    2\n\
    */\nlong count_below_threshold_3(long[] l, long t) \n{\n    long count = 0;\n\
    \    foreach(long x; l)\n    {\n        if(x < t)\n            count++;\n    }\n\
    \    return count;\n}\n/*\nReturn the number of elements in the list l that are\
    \ below threshold t.\n    >>> count_below_threshold([1L, 2L, 4L, 10L], 100L)\n\
    \    4\n    >>> count_below_threshold([1L,\nunittest\n{\n    alias candidate =\
    \ below_threshold;\n\n    assert(candidate([1L, 2L, 4L, 10L], 100L) == true);\n\
    \    assert(candidate([1L, 20L, 4L, 10L], 5L) == false);\n    assert(candidate([1L,\
    \ 20L, 4L, 10L], 21L) == true);\n    assert(candidate([1L, 20L, 4L, 10L], 22L)\
    \ == true);\n    assert(candidate([1L, 8L, 4L, 10L], 11L) == true);\n    assert(candidate([1L,\
    \ 8L, 4L, 10L], 10L) == false);\n}\nvoid main(){}"
  status: SyntaxError
  stderr: '/tmp/tmpzpa2_dq0.d(71): Error: unterminated /* */ comment

    Failed: ["dmd", "-unittest", "-v", "-o-", "/tmp/tmpzpa2_dq0.d", "-I/tmp"]

    '
  stdout: ''
  timestamp: 1660163089
- exit_code: 1
  program: "import std.typecons;\nimport std.math;\n/*\nReturn True if all numbers\
    \ in the list l are below threshold t.\n    >>> below_threshold([1L, 2L, 4L, 10L],\
    \ 100L)\n    true\n    >>> below_threshold([1L, 20L, 4L, 10L], 5L)\n    false\n\
    \    \n*/\nbool below_threshold(long[] l, long t) \n{\n    foreach(i; l)\n   \
    \ {\n        if(i > t)\n            return false;\n    }\n    return true;\n}\n\
    unittest\n{\n    alias candidate = below_threshold;\n\n    assert(candidate([1L,\
    \ 2L, 4L, 10L], 100L) == true);\n    assert(candidate([1L, 20L, 4L, 10L], 5L)\
    \ == false);\n    assert(candidate([1L, 20L, 4L, 10L], 21L) == true);\n    assert(candidate([1L,\
    \ 20L, 4L, 10L], 22L) == true);\n    assert(candidate([1L, 8L, 4L, 10L], 11L)\
    \ == true);\n    assert(candidate([1L, 8L, 4L, 10L], 10L) == false);\n}\nvoid\
    \ main(){}"
  status: Exception
  stderr: 'core.exception.AssertError@/tmp/tmpplk4ck84.d(29): unittest failure

    ----------------

    ??:? _d_unittestp [0x4281dd]

    ??:? void tmpplk4ck84.__unittest_L20_C1() [0x427f4b]

    ??:? void tmpplk4ck84.__modtest() [0x427f60]

    ??:? int core.runtime.runModuleUnitTests().__foreachbody2(object.ModuleInfo*)
    [0x42c1c7]

    ??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)).__lambda2(immutable(object.ModuleInfo*))
    [0x42b05a]

    ??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))).__foreachbody2(ref
    rt.sections_elf_shared.DSO) [0x4301ed]

    ??:? int rt.sections_elf_shared.DSO.opApply(scope int delegate(ref rt.sections_elf_shared.DSO))
    [0x43069c]

    ??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*)))
    [0x430179]

    ??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)) [0x42b031]

    ??:? runModuleUnitTests [0x42bf9d]

    ??:? void rt.dmain2._d_run_main(int, char**, extern (C) int function(char[][])*).runAll()
    [0x42862c]

    ??:? void rt.dmain2._d_r'
  stdout: ''
  timestamp: 1660163090
- exit_code: 0
  program: "import std.typecons;\nimport std.math;\n/*\nReturn True if all numbers\
    \ in the list l are below threshold t.\n    >>> below_threshold([1L, 2L, 4L, 10L],\
    \ 100L)\n    true\n    >>> below_threshold([1L, 20L, 4L, 10L], 5L)\n    false\n\
    \    \n*/\nbool below_threshold(long[] l, long t) \n{\n    foreach(long x; l)\n\
    \    {\n        if(x >= t)\n            return false;\n    }\n    return true;\n\
    }\nunittest\n{\n    alias candidate = below_threshold;\n\n    assert(candidate([1L,\
    \ 2L, 4L, 10L], 100L) == true);\n    assert(candidate([1L, 20L, 4L, 10L], 5L)\
    \ == false);\n    assert(candidate([1L, 20L, 4L, 10L], 21L) == true);\n    assert(candidate([1L,\
    \ 20L, 4L, 10L], 22L) == true);\n    assert(candidate([1L, 8L, 4L, 10L], 11L)\
    \ == true);\n    assert(candidate([1L, 8L, 4L, 10L], 10L) == false);\n}\nvoid\
    \ main(){}"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660163090
- exit_code: 1
  program: "import std.typecons;\nimport std.math;\n/*\nReturn True if all numbers\
    \ in the list l are below threshold t.\n    >>> below_threshold([1L, 2L, 4L, 10L],\
    \ 100L)\n    true\n    >>> below_threshold([1L, 20L, 4L, 10L], 5L)\n    false\n\
    \    \n*/\nbool below_threshold(long[] l, long t) \n{\n    foreach(i; l)\n   \
    \ {\n        if(i > t)\n            return false;\n    }\n    return true;\n}\n\
    /*\nReturn True if all numbers in the list l are below threshold t.\n    >>> below_threshold([1L,\
    \ 2L, 4L, 10L], 100L)\n    true\n    >>> below_threshold([1L, 20L, 4L, 10L], 5L)\n\
    \    false\n    \n*/\nunittest\n{\n    alias candidate = below_threshold;\n\n\
    \    assert(candidate([1L, 2L, 4L, 10L], 100L) == true);\n    assert(candidate([1L,\
    \ 20L, 4L, 10L], 5L) == false);\n    assert(candidate([1L, 20L, 4L, 10L], 21L)\
    \ == true);\n    assert(candidate([1L, 20L, 4L, 10L], 22L) == true);\n    assert(candidate([1L,\
    \ 8L, 4L, 10L], 11L) == true);\n    assert(candidate([1L, 8L, 4L, 10L], 10L) ==\
    \ false);\n}\nvoid main(){}"
  status: Exception
  stderr: 'core.exception.AssertError@/tmp/tmp_wlgu24n.d(37): unittest failure

    ----------------

    ??:? _d_unittestp [0x4281dd]

    ??:? void tmp_wlgu24n.__unittest_L28_C1() [0x427f4b]

    ??:? void tmp_wlgu24n.__modtest() [0x427f60]

    ??:? int core.runtime.runModuleUnitTests().__foreachbody2(object.ModuleInfo*)
    [0x42c1c7]

    ??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)).__lambda2(immutable(object.ModuleInfo*))
    [0x42b05a]

    ??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))).__foreachbody2(ref
    rt.sections_elf_shared.DSO) [0x4301ed]

    ??:? int rt.sections_elf_shared.DSO.opApply(scope int delegate(ref rt.sections_elf_shared.DSO))
    [0x43069c]

    ??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*)))
    [0x430179]

    ??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)) [0x42b031]

    ??:? runModuleUnitTests [0x42bf9d]

    ??:? void rt.dmain2._d_run_main(int, char**, extern (C) int function(char[][])*).runAll()
    [0x42862c]

    ??:? void rt.dmain2._d_r'
  stdout: ''
  timestamp: 1660163090
- exit_code: 0
  program: "import std.typecons;\nimport std.math;\n/*\nReturn True if all numbers\
    \ in the list l are below threshold t.\n    >>> below_threshold([1L, 2L, 4L, 10L],\
    \ 100L)\n    true\n    >>> below_threshold([1L, 20L, 4L, 10L], 5L)\n    false\n\
    \    \n*/\nbool below_threshold(long[] l, long t) \n{\n    foreach(long i; l)\n\
    \    {\n        if(i >= t)\n            return false;\n    }\n    return true;\n\
    }\nunittest\n{\n    alias candidate = below_threshold;\n\n    assert(candidate([1L,\
    \ 2L, 4L, 10L], 100L) == true);\n    assert(candidate([1L, 20L, 4L, 10L], 5L)\
    \ == false);\n    assert(candidate([1L, 20L, 4L, 10L], 21L) == true);\n    assert(candidate([1L,\
    \ 20L, 4L, 10L], 22L) == true);\n    assert(candidate([1L, 8L, 4L, 10L], 11L)\
    \ == true);\n    assert(candidate([1L, 8L, 4L, 10L], 10L) == false);\n}\nvoid\
    \ main(){}"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660163090
- exit_code: 0
  program: "import std.typecons;\nimport std.math;\n/*\nReturn True if all numbers\
    \ in the list l are below threshold t.\n    >>> below_threshold([1L, 2L, 4L, 10L],\
    \ 100L)\n    true\n    >>> below_threshold([1L, 20L, 4L, 10L], 5L)\n    false\n\
    \    \n*/\nbool below_threshold(long[] l, long t) \n{\n    foreach(long x; l)\n\
    \    {\n        if(x >= t)\n            return false;\n    }\n    return true;\n\
    }\nunittest\n{\n    alias candidate = below_threshold;\n\n    assert(candidate([1L,\
    \ 2L, 4L, 10L], 100L) == true);\n    assert(candidate([1L, 20L, 4L, 10L], 5L)\
    \ == false);\n    assert(candidate([1L, 20L, 4L, 10L], 21L) == true);\n    assert(candidate([1L,\
    \ 20L, 4L, 10L], 22L) == true);\n    assert(candidate([1L, 8L, 4L, 10L], 11L)\
    \ == true);\n    assert(candidate([1L, 8L, 4L, 10L], 10L) == false);\n}\nvoid\
    \ main(){}"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660163090
- exit_code: 0
  program: "import std.typecons;\nimport std.math;\n/*\nReturn True if all numbers\
    \ in the list l are below threshold t.\n    >>> below_threshold([1L, 2L, 4L, 10L],\
    \ 100L)\n    true\n    >>> below_threshold([1L, 20L, 4L, 10L], 5L)\n    false\n\
    \    \n*/\nbool below_threshold(long[] l, long t) \n{\n    foreach(long i; l)\n\
    \    {\n        if(i >= t)\n            return false;\n    }\n    return true;\n\
    }\n/*\nReturn True if all numbers in the list l are below threshold t.\n    >>>\
    \ below_threshold([1L, 2L, 4L, 10L], 100L)\n    true\n    >>> below_threshold([1L,\
    \ 20L, 4L, 10L], 5L)\n    false\n    \n*/\nunittest\n{\n    alias candidate =\
    \ below_threshold;\n\n    assert(candidate([1L, 2L, 4L, 10L], 100L) == true);\n\
    \    assert(candidate([1L, 20L, 4L, 10L], 5L) == false);\n    assert(candidate([1L,\
    \ 20L, 4L, 10L], 21L) == true);\n    assert(candidate([1L, 20L, 4L, 10L], 22L)\
    \ == true);\n    assert(candidate([1L, 8L, 4L, 10L], 11L) == true);\n    assert(candidate([1L,\
    \ 8L, 4L, 10L], 10L) == false);\n}\nvoid main(){}"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660163090
- exit_code: 1
  program: "import std.typecons;\nimport std.math;\n/*\nReturn True if all numbers\
    \ in the list l are below threshold t.\n    >>> below_threshold([1L, 2L, 4L, 10L],\
    \ 100L)\n    true\n    >>> below_threshold([1L, 20L, 4L, 10L], 5L)\n    false\n\
    \    \n*/\nbool below_threshold(long[] l, long t) \n{\n    foreach(long x; l)\n\
    \    {\n        if(x > t)\n            return false;\n    }\n    return true;\n\
    }\nunittest\n{\n    alias candidate = below_threshold;\n\n    assert(candidate([1L,\
    \ 2L, 4L, 10L], 100L) == true);\n    assert(candidate([1L, 20L, 4L, 10L], 5L)\
    \ == false);\n    assert(candidate([1L, 20L, 4L, 10L], 21L) == true);\n    assert(candidate([1L,\
    \ 20L, 4L, 10L], 22L) == true);\n    assert(candidate([1L, 8L, 4L, 10L], 11L)\
    \ == true);\n    assert(candidate([1L, 8L, 4L, 10L], 10L) == false);\n}\nvoid\
    \ main(){}"
  status: Exception
  stderr: 'core.exception.AssertError@/tmp/tmpx_fvps4k.d(29): unittest failure

    ----------------

    ??:? _d_unittestp [0x4281dd]

    ??:? void tmpx_fvps4k.__unittest_L20_C1() [0x427f4b]

    ??:? void tmpx_fvps4k.__modtest() [0x427f60]

    ??:? int core.runtime.runModuleUnitTests().__foreachbody2(object.ModuleInfo*)
    [0x42c1c7]

    ??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)).__lambda2(immutable(object.ModuleInfo*))
    [0x42b05a]

    ??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))).__foreachbody2(ref
    rt.sections_elf_shared.DSO) [0x4301ed]

    ??:? int rt.sections_elf_shared.DSO.opApply(scope int delegate(ref rt.sections_elf_shared.DSO))
    [0x43069c]

    ??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*)))
    [0x430179]

    ??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)) [0x42b031]

    ??:? runModuleUnitTests [0x42bf9d]

    ??:? void rt.dmain2._d_run_main(int, char**, extern (C) int function(char[][])*).runAll()
    [0x42862c]

    ??:? void rt.dmain2._d_r'
  stdout: ''
  timestamp: 1660163090
- exit_code: 1
  program: "import std.typecons;\nimport std.math;\n/*\nReturn True if all numbers\
    \ in the list l are below threshold t.\n    >>> below_threshold([1L, 2L, 4L, 10L],\
    \ 100L)\n    true\n    >>> below_threshold([1L, 20L, 4L, 10L], 5L)\n    false\n\
    \    \n*/\nbool below_threshold(long[] l, long t) \n{\n    foreach(long x; l)\n\
    \    {\n        if(x > t)\n            return false;\n    }\n    return true;\n\
    }\nunittest\n{\n    alias candidate = below_threshold;\n\n    assert(candidate([1L,\
    \ 2L, 4L, 10L], 100L) == true);\n    assert(candidate([1L, 20L, 4L, 10L], 5L)\
    \ == false);\n    assert(candidate([1L, 20L, 4L, 10L], 21L) == true);\n    assert(candidate([1L,\
    \ 20L, 4L, 10L], 22L) == true);\n    assert(candidate([1L, 8L, 4L, 10L], 11L)\
    \ == true);\n    assert(candidate([1L, 8L, 4L, 10L], 10L) == false);\n}\nvoid\
    \ main(){}"
  status: Exception
  stderr: 'core.exception.AssertError@/tmp/tmpx_fvps4k.d(29): unittest failure

    ----------------

    ??:? _d_unittestp [0x4281dd]

    ??:? void tmpx_fvps4k.__unittest_L20_C1() [0x427f4b]

    ??:? void tmpx_fvps4k.__modtest() [0x427f60]

    ??:? int core.runtime.runModuleUnitTests().__foreachbody2(object.ModuleInfo*)
    [0x42c1c7]

    ??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)).__lambda2(immutable(object.ModuleInfo*))
    [0x42b05a]

    ??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))).__foreachbody2(ref
    rt.sections_elf_shared.DSO) [0x4301ed]

    ??:? int rt.sections_elf_shared.DSO.opApply(scope int delegate(ref rt.sections_elf_shared.DSO))
    [0x43069c]

    ??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*)))
    [0x430179]

    ??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)) [0x42b031]

    ??:? runModuleUnitTests [0x42bf9d]

    ??:? void rt.dmain2._d_run_main(int, char**, extern (C) int function(char[][])*).runAll()
    [0x42862c]

    ??:? void rt.dmain2._d_r'
  stdout: ''
  timestamp: 1660163090
- exit_code: 1
  program: "import std.typecons;\nimport std.math;\n/*\nReturn True if all numbers\
    \ in the list l are below threshold t.\n    >>> below_threshold([1L, 2L, 4L, 10L],\
    \ 100L)\n    true\n    >>> below_threshold([1L, 20L, 4L, 10L], 5L)\n    false\n\
    \    \n*/\nbool below_threshold(long[] l, long t) \n{\n    foreach(i; l)\n   \
    \ {\n        if(i > t)\n            return false;\n    }\n    return true;\n}\n\
    unittest\n{\n    alias candidate = below_threshold;\n\n    assert(candidate([1L,\
    \ 2L, 4L, 10L], 100L) == true);\n    assert(candidate([1L, 20L, 4L, 10L], 5L)\
    \ == false);\n    assert(candidate([1L, 20L, 4L, 10L], 21L) == true);\n    assert(candidate([1L,\
    \ 20L, 4L, 10L], 22L) == true);\n    assert(candidate([1L, 8L, 4L, 10L], 11L)\
    \ == true);\n    assert(candidate([1L, 8L, 4L, 10L], 10L) == false);\n}\nvoid\
    \ main(){}"
  status: Exception
  stderr: 'core.exception.AssertError@/tmp/tmpplk4ck84.d(29): unittest failure

    ----------------

    ??:? _d_unittestp [0x4281dd]

    ??:? void tmpplk4ck84.__unittest_L20_C1() [0x427f4b]

    ??:? void tmpplk4ck84.__modtest() [0x427f60]

    ??:? int core.runtime.runModuleUnitTests().__foreachbody2(object.ModuleInfo*)
    [0x42c1c7]

    ??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)).__lambda2(immutable(object.ModuleInfo*))
    [0x42b05a]

    ??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))).__foreachbody2(ref
    rt.sections_elf_shared.DSO) [0x4301ed]

    ??:? int rt.sections_elf_shared.DSO.opApply(scope int delegate(ref rt.sections_elf_shared.DSO))
    [0x43069c]

    ??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*)))
    [0x430179]

    ??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)) [0x42b031]

    ??:? runModuleUnitTests [0x42bf9d]

    ??:? void rt.dmain2._d_run_main(int, char**, extern (C) int function(char[][])*).runAll()
    [0x42862c]

    ??:? void rt.dmain2._d_r'
  stdout: ''
  timestamp: 1660163090
- exit_code: 1
  program: "import std.typecons;\nimport std.math;\n/*\nReturn True if all numbers\
    \ in the list l are below threshold t.\n    >>> below_threshold([1L, 2L, 4L, 10L],\
    \ 100L)\n    true\n    >>> below_threshold([1L, 20L, 4L, 10L], 5L)\n    false\n\
    \    \n*/\nbool below_threshold(long[] l, long t) \n{\n    foreach(i; l)\n   \
    \ {\n        if(i > t)\n            return false;\n    }\n    return true;\n}\n\
    unittest\n{\n    alias candidate = below_threshold;\n\n    assert(candidate([1L,\
    \ 2L, 4L, 10L], 100L) == true);\n    assert(candidate([1L, 20L, 4L, 10L], 5L)\
    \ == false);\n    assert(candidate([1L, 20L, 4L, 10L], 21L) == true);\n    assert(candidate([1L,\
    \ 20L, 4L, 10L], 22L) == true);\n    assert(candidate([1L, 8L, 4L, 10L], 11L)\
    \ == true);\n    assert(candidate([1L, 8L, 4L, 10L], 10L) == false);\n}\nvoid\
    \ main(){}"
  status: Exception
  stderr: 'core.exception.AssertError@/tmp/tmpplk4ck84.d(29): unittest failure

    ----------------

    ??:? _d_unittestp [0x4281dd]

    ??:? void tmpplk4ck84.__unittest_L20_C1() [0x427f4b]

    ??:? void tmpplk4ck84.__modtest() [0x427f60]

    ??:? int core.runtime.runModuleUnitTests().__foreachbody2(object.ModuleInfo*)
    [0x42c1c7]

    ??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)).__lambda2(immutable(object.ModuleInfo*))
    [0x42b05a]

    ??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))).__foreachbody2(ref
    rt.sections_elf_shared.DSO) [0x4301ed]

    ??:? int rt.sections_elf_shared.DSO.opApply(scope int delegate(ref rt.sections_elf_shared.DSO))
    [0x43069c]

    ??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*)))
    [0x430179]

    ??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)) [0x42b031]

    ??:? runModuleUnitTests [0x42bf9d]

    ??:? void rt.dmain2._d_run_main(int, char**, extern (C) int function(char[][])*).runAll()
    [0x42862c]

    ??:? void rt.dmain2._d_r'
  stdout: ''
  timestamp: 1660163090
- exit_code: 1
  program: "import std.typecons;\nimport std.math;\n/*\nReturn True if all numbers\
    \ in the list l are below threshold t.\n    >>> below_threshold([1L, 2L, 4L, 10L],\
    \ 100L)\n    true\n    >>> below_threshold([1L, 20L, 4L, 10L], 5L)\n    false\n\
    \    \n*/\nbool below_threshold(long[] l, long t) \n{\n    foreach(i; l)\n   \
    \ {\n        if(i > t)\n            return false;\n    }\n    return true;\n}\n\
    /*\nReturn True if all numbers in the list l are below threshold t.\n    >>> below_threshold([1L,\
    \ 2L, 4L, 10L], 100L)\n    true\n    >>> below_threshold([1L, 20L, 4L, 10L], 5L)\n\
    \    false\n    \n*/\nunittest\n{\n    alias candidate = below_threshold;\n\n\
    \    assert(candidate([1L, 2L, 4L, 10L], 100L) == true);\n    assert(candidate([1L,\
    \ 20L, 4L, 10L], 5L) == false);\n    assert(candidate([1L, 20L, 4L, 10L], 21L)\
    \ == true);\n    assert(candidate([1L, 20L, 4L, 10L], 22L) == true);\n    assert(candidate([1L,\
    \ 8L, 4L, 10L], 11L) == true);\n    assert(candidate([1L, 8L, 4L, 10L], 10L) ==\
    \ false);\n}\nvoid main(){}"
  status: Exception
  stderr: 'core.exception.AssertError@/tmp/tmp_wlgu24n.d(37): unittest failure

    ----------------

    ??:? _d_unittestp [0x4281dd]

    ??:? void tmp_wlgu24n.__unittest_L28_C1() [0x427f4b]

    ??:? void tmp_wlgu24n.__modtest() [0x427f60]

    ??:? int core.runtime.runModuleUnitTests().__foreachbody2(object.ModuleInfo*)
    [0x42c1c7]

    ??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)).__lambda2(immutable(object.ModuleInfo*))
    [0x42b05a]

    ??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))).__foreachbody2(ref
    rt.sections_elf_shared.DSO) [0x4301ed]

    ??:? int rt.sections_elf_shared.DSO.opApply(scope int delegate(ref rt.sections_elf_shared.DSO))
    [0x43069c]

    ??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*)))
    [0x430179]

    ??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)) [0x42b031]

    ??:? runModuleUnitTests [0x42bf9d]

    ??:? void rt.dmain2._d_run_main(int, char**, extern (C) int function(char[][])*).runAll()
    [0x42862c]

    ??:? void rt.dmain2._d_r'
  stdout: ''
  timestamp: 1660163090
- exit_code: 1
  program: "import std.typecons;\nimport std.math;\n/*\nReturn True if all numbers\
    \ in the list l are below threshold t.\n    >>> below_threshold([1L, 2L, 4L, 10L],\
    \ 100L)\n    true\n    >>> below_threshold([1L, 20L, 4L, 10L], 5L)\n    false\n\
    \    \n*/\nbool below_threshold(long[] l, long t) \n{\n    foreach(long i; l)\n\
    \    {\n        if(i > t)\n            return false;\n    }\n    return true;\n\
    }\nunittest\n{\n    alias candidate = below_threshold;\n\n    assert(candidate([1L,\
    \ 2L, 4L, 10L], 100L) == true);\n    assert(candidate([1L, 20L, 4L, 10L], 5L)\
    \ == false);\n    assert(candidate([1L, 20L, 4L, 10L], 21L) == true);\n    assert(candidate([1L,\
    \ 20L, 4L, 10L], 22L) == true);\n    assert(candidate([1L, 8L, 4L, 10L], 11L)\
    \ == true);\n    assert(candidate([1L, 8L, 4L, 10L], 10L) == false);\n}\nvoid\
    \ main(){}"
  status: Exception
  stderr: 'core.exception.AssertError@/tmp/tmpev0f60w0.d(29): unittest failure

    ----------------

    ??:? _d_unittestp [0x4281dd]

    ??:? void tmpev0f60w0.__unittest_L20_C1() [0x427f4b]

    ??:? void tmpev0f60w0.__modtest() [0x427f60]

    ??:? int core.runtime.runModuleUnitTests().__foreachbody2(object.ModuleInfo*)
    [0x42c1c7]

    ??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)).__lambda2(immutable(object.ModuleInfo*))
    [0x42b05a]

    ??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))).__foreachbody2(ref
    rt.sections_elf_shared.DSO) [0x4301ed]

    ??:? int rt.sections_elf_shared.DSO.opApply(scope int delegate(ref rt.sections_elf_shared.DSO))
    [0x43069c]

    ??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*)))
    [0x430179]

    ??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)) [0x42b031]

    ??:? runModuleUnitTests [0x42bf9d]

    ??:? void rt.dmain2._d_run_main(int, char**, extern (C) int function(char[][])*).runAll()
    [0x42862c]

    ??:? void rt.dmain2._d_r'
  stdout: ''
  timestamp: 1660163090
- exit_code: 1
  program: "import std.typecons;\nimport std.math;\n/*\nReturn True if all numbers\
    \ in the list l are below threshold t.\n    >>> below_threshold([1L, 2L, 4L, 10L],\
    \ 100L)\n    true\n    >>> below_threshold([1L, 20L, 4L, 10L], 5L)\n    false\n\
    \    \n*/\nbool below_threshold(long[] l, long t) \n{\n    foreach(i; l)\n   \
    \ {\n        if(i > t)\n            return false;\n    }\n    return true;\n}\n\
    unittest\n{\n    alias candidate = below_threshold;\n\n    assert(candidate([1L,\
    \ 2L, 4L, 10L], 100L) == true);\n    assert(candidate([1L, 20L, 4L, 10L], 5L)\
    \ == false);\n    assert(candidate([1L, 20L, 4L, 10L], 21L) == true);\n    assert(candidate([1L,\
    \ 20L, 4L, 10L], 22L) == true);\n    assert(candidate([1L, 8L, 4L, 10L], 11L)\
    \ == true);\n    assert(candidate([1L, 8L, 4L, 10L], 10L) == false);\n}\nvoid\
    \ main(){}"
  status: Exception
  stderr: 'core.exception.AssertError@/tmp/tmpplk4ck84.d(29): unittest failure

    ----------------

    ??:? _d_unittestp [0x4281dd]

    ??:? void tmpplk4ck84.__unittest_L20_C1() [0x427f4b]

    ??:? void tmpplk4ck84.__modtest() [0x427f60]

    ??:? int core.runtime.runModuleUnitTests().__foreachbody2(object.ModuleInfo*)
    [0x42c1c7]

    ??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)).__lambda2(immutable(object.ModuleInfo*))
    [0x42b05a]

    ??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))).__foreachbody2(ref
    rt.sections_elf_shared.DSO) [0x4301ed]

    ??:? int rt.sections_elf_shared.DSO.opApply(scope int delegate(ref rt.sections_elf_shared.DSO))
    [0x43069c]

    ??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*)))
    [0x430179]

    ??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)) [0x42b031]

    ??:? runModuleUnitTests [0x42bf9d]

    ??:? void rt.dmain2._d_run_main(int, char**, extern (C) int function(char[][])*).runAll()
    [0x42862c]

    ??:? void rt.dmain2._d_r'
  stdout: ''
  timestamp: 1660163090
- exit_code: 1
  program: "import std.typecons;\nimport std.math;\n/*\nReturn True if all numbers\
    \ in the list l are below threshold t.\n    >>> below_threshold([1L, 2L, 4L, 10L],\
    \ 100L)\n    true\n    >>> below_threshold([1L, 20L, 4L, 10L], 5L)\n    false\n\
    \    \n*/\nbool below_threshold(long[] l, long t) \n{\n    foreach(long x; l)\n\
    \    {\n        if(x > t)\n            return false;\n    }\n    return true;\n\
    }\nunittest\n{\n    alias candidate = below_threshold;\n\n    assert(candidate([1L,\
    \ 2L, 4L, 10L], 100L) == true);\n    assert(candidate([1L, 20L, 4L, 10L], 5L)\
    \ == false);\n    assert(candidate([1L, 20L, 4L, 10L], 21L) == true);\n    assert(candidate([1L,\
    \ 20L, 4L, 10L], 22L) == true);\n    assert(candidate([1L, 8L, 4L, 10L], 11L)\
    \ == true);\n    assert(candidate([1L, 8L, 4L, 10L], 10L) == false);\n}\nvoid\
    \ main(){}"
  status: Exception
  stderr: 'core.exception.AssertError@/tmp/tmpx_fvps4k.d(29): unittest failure

    ----------------

    ??:? _d_unittestp [0x4281dd]

    ??:? void tmpx_fvps4k.__unittest_L20_C1() [0x427f4b]

    ??:? void tmpx_fvps4k.__modtest() [0x427f60]

    ??:? int core.runtime.runModuleUnitTests().__foreachbody2(object.ModuleInfo*)
    [0x42c1c7]

    ??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)).__lambda2(immutable(object.ModuleInfo*))
    [0x42b05a]

    ??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))).__foreachbody2(ref
    rt.sections_elf_shared.DSO) [0x4301ed]

    ??:? int rt.sections_elf_shared.DSO.opApply(scope int delegate(ref rt.sections_elf_shared.DSO))
    [0x43069c]

    ??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*)))
    [0x430179]

    ??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)) [0x42b031]

    ??:? runModuleUnitTests [0x42bf9d]

    ??:? void rt.dmain2._d_run_main(int, char**, extern (C) int function(char[][])*).runAll()
    [0x42862c]

    ??:? void rt.dmain2._d_r'
  stdout: ''
  timestamp: 1660163090
- exit_code: 1
  program: "import std.typecons;\nimport std.math;\n/*\nReturn True if all numbers\
    \ in the list l are below threshold t.\n    >>> below_threshold([1L, 2L, 4L, 10L],\
    \ 100L)\n    true\n    >>> below_threshold([1L, 20L, 4L, 10L], 5L)\n    false\n\
    \    \n*/\nbool below_threshold(long[] l, long t) \n{\n    foreach(long x; l)\n\
    \    {\n        if(x > t)\n            return false;\n    }\n    return true;\n\
    }\nunittest\n{\n    alias candidate = below_threshold;\n\n    assert(candidate([1L,\
    \ 2L, 4L, 10L], 100L) == true);\n    assert(candidate([1L, 20L, 4L, 10L], 5L)\
    \ == false);\n    assert(candidate([1L, 20L, 4L, 10L], 21L) == true);\n    assert(candidate([1L,\
    \ 20L, 4L, 10L], 22L) == true);\n    assert(candidate([1L, 8L, 4L, 10L], 11L)\
    \ == true);\n    assert(candidate([1L, 8L, 4L, 10L], 10L) == false);\n}\nvoid\
    \ main(){}"
  status: Exception
  stderr: 'core.exception.AssertError@/tmp/tmpx_fvps4k.d(29): unittest failure

    ----------------

    ??:? _d_unittestp [0x4281dd]

    ??:? void tmpx_fvps4k.__unittest_L20_C1() [0x427f4b]

    ??:? void tmpx_fvps4k.__modtest() [0x427f60]

    ??:? int core.runtime.runModuleUnitTests().__foreachbody2(object.ModuleInfo*)
    [0x42c1c7]

    ??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)).__lambda2(immutable(object.ModuleInfo*))
    [0x42b05a]

    ??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))).__foreachbody2(ref
    rt.sections_elf_shared.DSO) [0x4301ed]

    ??:? int rt.sections_elf_shared.DSO.opApply(scope int delegate(ref rt.sections_elf_shared.DSO))
    [0x43069c]

    ??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*)))
    [0x430179]

    ??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)) [0x42b031]

    ??:? runModuleUnitTests [0x42bf9d]

    ??:? void rt.dmain2._d_run_main(int, char**, extern (C) int function(char[][])*).runAll()
    [0x42862c]

    ??:? void rt.dmain2._d_r'
  stdout: ''
  timestamp: 1660163090
- exit_code: 0
  program: "import std.typecons;\nimport std.math;\n/*\nReturn True if all numbers\
    \ in the list l are below threshold t.\n    >>> below_threshold([1L, 2L, 4L, 10L],\
    \ 100L)\n    true\n    >>> below_threshold([1L, 20L, 4L, 10L], 5L)\n    false\n\
    \    \n*/\nbool below_threshold(long[] l, long t) \n{\n    foreach(i; l) \n  \
    \  {\n        if(i >= t) \n        {\n            return false;\n        }\n \
    \   }\n    return true;\n}\nunittest\n{\n    alias candidate = below_threshold;\n\
    \n    assert(candidate([1L, 2L, 4L, 10L], 100L) == true);\n    assert(candidate([1L,\
    \ 20L, 4L, 10L], 5L) == false);\n    assert(candidate([1L, 20L, 4L, 10L], 21L)\
    \ == true);\n    assert(candidate([1L, 20L, 4L, 10L], 22L) == true);\n    assert(candidate([1L,\
    \ 8L, 4L, 10L], 11L) == true);\n    assert(candidate([1L, 8L, 4L, 10L], 10L) ==\
    \ false);\n}\nvoid main(){}"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660163090
- exit_code: 1
  program: "import std.typecons;\nimport std.math;\n/*\nReturn True if all numbers\
    \ in the list l are below threshold t.\n    >>> below_threshold([1L, 2L, 4L, 10L],\
    \ 100L)\n    true\n    >>> below_threshold([1L, 20L, 4L, 10L], 5L)\n    false\n\
    \    \n*/\nbool below_threshold(long[] l, long t) \n{\n    foreach(long i; l)\n\
    \    {\n        if(i > t)\n            return false;\n    }\n    return true;\n\
    }\nunittest\n{\n    alias candidate = below_threshold;\n\n    assert(candidate([1L,\
    \ 2L, 4L, 10L], 100L) == true);\n    assert(candidate([1L, 20L, 4L, 10L], 5L)\
    \ == false);\n    assert(candidate([1L, 20L, 4L, 10L], 21L) == true);\n    assert(candidate([1L,\
    \ 20L, 4L, 10L], 22L) == true);\n    assert(candidate([1L, 8L, 4L, 10L], 11L)\
    \ == true);\n    assert(candidate([1L, 8L, 4L, 10L], 10L) == false);\n}\nvoid\
    \ main(){}"
  status: Exception
  stderr: 'core.exception.AssertError@/tmp/tmpev0f60w0.d(29): unittest failure

    ----------------

    ??:? _d_unittestp [0x4281dd]

    ??:? void tmpev0f60w0.__unittest_L20_C1() [0x427f4b]

    ??:? void tmpev0f60w0.__modtest() [0x427f60]

    ??:? int core.runtime.runModuleUnitTests().__foreachbody2(object.ModuleInfo*)
    [0x42c1c7]

    ??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)).__lambda2(immutable(object.ModuleInfo*))
    [0x42b05a]

    ??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))).__foreachbody2(ref
    rt.sections_elf_shared.DSO) [0x4301ed]

    ??:? int rt.sections_elf_shared.DSO.opApply(scope int delegate(ref rt.sections_elf_shared.DSO))
    [0x43069c]

    ??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*)))
    [0x430179]

    ??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)) [0x42b031]

    ??:? runModuleUnitTests [0x42bf9d]

    ??:? void rt.dmain2._d_run_main(int, char**, extern (C) int function(char[][])*).runAll()
    [0x42862c]

    ??:? void rt.dmain2._d_r'
  stdout: ''
  timestamp: 1660163090
- exit_code: 0
  program: "import std.typecons;\nimport std.math;\n/*\nReturn True if all numbers\
    \ in the list l are below threshold t.\n    >>> below_threshold([1L, 2L, 4L, 10L],\
    \ 100L)\n    true\n    >>> below_threshold([1L, 20L, 4L, 10L], 5L)\n    false\n\
    \    \n*/\nbool below_threshold(long[] l, long t) \n{\n    foreach(long x; l)\n\
    \    {\n        if(x >= t)\n            return false;\n    }\n    return true;\n\
    }\nunittest\n{\n    alias candidate = below_threshold;\n\n    assert(candidate([1L,\
    \ 2L, 4L, 10L], 100L) == true);\n    assert(candidate([1L, 20L, 4L, 10L], 5L)\
    \ == false);\n    assert(candidate([1L, 20L, 4L, 10L], 21L) == true);\n    assert(candidate([1L,\
    \ 20L, 4L, 10L], 22L) == true);\n    assert(candidate([1L, 8L, 4L, 10L], 11L)\
    \ == true);\n    assert(candidate([1L, 8L, 4L, 10L], 10L) == false);\n}\nvoid\
    \ main(){}"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660163090
- exit_code: 1
  program: "import std.typecons;\nimport std.math;\n/*\nReturn True if all numbers\
    \ in the list l are below threshold t.\n    >>> below_threshold([1L, 2L, 4L, 10L],\
    \ 100L)\n    true\n    >>> below_threshold([1L, 20L, 4L, 10L], 5L)\n    false\n\
    \    \n*/\nbool below_threshold(long[] l, long t) \n{\n    foreach(x; l)\n   \
    \ {\n        if(x > t)\n            return false;\n    }\n    return true;\n}\n\
    unittest\n{\n    alias candidate = below_threshold;\n\n    assert(candidate([1L,\
    \ 2L, 4L, 10L], 100L) == true);\n    assert(candidate([1L, 20L, 4L, 10L], 5L)\
    \ == false);\n    assert(candidate([1L, 20L, 4L, 10L], 21L) == true);\n    assert(candidate([1L,\
    \ 20L, 4L, 10L], 22L) == true);\n    assert(candidate([1L, 8L, 4L, 10L], 11L)\
    \ == true);\n    assert(candidate([1L, 8L, 4L, 10L], 10L) == false);\n}\nvoid\
    \ main(){}"
  status: Exception
  stderr: 'core.exception.AssertError@/tmp/tmpdjy3v7wo.d(29): unittest failure

    ----------------

    ??:? _d_unittestp [0x4281dd]

    ??:? void tmpdjy3v7wo.__unittest_L20_C1() [0x427f4b]

    ??:? void tmpdjy3v7wo.__modtest() [0x427f60]

    ??:? int core.runtime.runModuleUnitTests().__foreachbody2(object.ModuleInfo*)
    [0x42c1c7]

    ??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)).__lambda2(immutable(object.ModuleInfo*))
    [0x42b05a]

    ??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))).__foreachbody2(ref
    rt.sections_elf_shared.DSO) [0x4301ed]

    ??:? int rt.sections_elf_shared.DSO.opApply(scope int delegate(ref rt.sections_elf_shared.DSO))
    [0x43069c]

    ??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*)))
    [0x430179]

    ??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)) [0x42b031]

    ??:? runModuleUnitTests [0x42bf9d]

    ??:? void rt.dmain2._d_run_main(int, char**, extern (C) int function(char[][])*).runAll()
    [0x42862c]

    ??:? void rt.dmain2._d_r'
  stdout: ''
  timestamp: 1660163090
- exit_code: 1
  program: "import std.typecons;\nimport std.math;\n/*\nReturn True if all numbers\
    \ in the list l are below threshold t.\n    >>> below_threshold([1L, 2L, 4L, 10L],\
    \ 100L)\n    true\n    >>> below_threshold([1L, 20L, 4L, 10L], 5L)\n    false\n\
    \    \n*/\nbool below_threshold(long[] l, long t) \n{\n    foreach(i; l)\n   \
    \ {\n        if(i > t)\n            return false;\n    }\n    return true;\n}\n\
    unittest\n{\n    alias candidate = below_threshold;\n\n    assert(candidate([1L,\
    \ 2L, 4L, 10L], 100L) == true);\n    assert(candidate([1L, 20L, 4L, 10L], 5L)\
    \ == false);\n    assert(candidate([1L, 20L, 4L, 10L], 21L) == true);\n    assert(candidate([1L,\
    \ 20L, 4L, 10L], 22L) == true);\n    assert(candidate([1L, 8L, 4L, 10L], 11L)\
    \ == true);\n    assert(candidate([1L, 8L, 4L, 10L], 10L) == false);\n}\nvoid\
    \ main(){}"
  status: Exception
  stderr: 'core.exception.AssertError@/tmp/tmpplk4ck84.d(29): unittest failure

    ----------------

    ??:? _d_unittestp [0x4281dd]

    ??:? void tmpplk4ck84.__unittest_L20_C1() [0x427f4b]

    ??:? void tmpplk4ck84.__modtest() [0x427f60]

    ??:? int core.runtime.runModuleUnitTests().__foreachbody2(object.ModuleInfo*)
    [0x42c1c7]

    ??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)).__lambda2(immutable(object.ModuleInfo*))
    [0x42b05a]

    ??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))).__foreachbody2(ref
    rt.sections_elf_shared.DSO) [0x4301ed]

    ??:? int rt.sections_elf_shared.DSO.opApply(scope int delegate(ref rt.sections_elf_shared.DSO))
    [0x43069c]

    ??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*)))
    [0x430179]

    ??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)) [0x42b031]

    ??:? runModuleUnitTests [0x42bf9d]

    ??:? void rt.dmain2._d_run_main(int, char**, extern (C) int function(char[][])*).runAll()
    [0x42862c]

    ??:? void rt.dmain2._d_r'
  stdout: ''
  timestamp: 1660163090
- exit_code: 1
  program: "import std.typecons;\nimport std.math;\n/*\nReturn True if all numbers\
    \ in the list l are below threshold t.\n    >>> below_threshold([1L, 2L, 4L, 10L],\
    \ 100L)\n    true\n    >>> below_threshold([1L, 20L, 4L, 10L], 5L)\n    false\n\
    \    \n*/\nbool below_threshold(long[] l, long t) \n{\n    foreach(i; l)\n   \
    \ {\n        if(i > t)\n            return false;\n    }\n    return true;\n}\n\
    unittest\n{\n    alias candidate = below_threshold;\n\n    assert(candidate([1L,\
    \ 2L, 4L, 10L], 100L) == true);\n    assert(candidate([1L, 20L, 4L, 10L], 5L)\
    \ == false);\n    assert(candidate([1L, 20L, 4L, 10L], 21L) == true);\n    assert(candidate([1L,\
    \ 20L, 4L, 10L], 22L) == true);\n    assert(candidate([1L, 8L, 4L, 10L], 11L)\
    \ == true);\n    assert(candidate([1L, 8L, 4L, 10L], 10L) == false);\n}\nvoid\
    \ main(){}"
  status: Exception
  stderr: 'core.exception.AssertError@/tmp/tmpplk4ck84.d(29): unittest failure

    ----------------

    ??:? _d_unittestp [0x4281dd]

    ??:? void tmpplk4ck84.__unittest_L20_C1() [0x427f4b]

    ??:? void tmpplk4ck84.__modtest() [0x427f60]

    ??:? int core.runtime.runModuleUnitTests().__foreachbody2(object.ModuleInfo*)
    [0x42c1c7]

    ??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)).__lambda2(immutable(object.ModuleInfo*))
    [0x42b05a]

    ??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))).__foreachbody2(ref
    rt.sections_elf_shared.DSO) [0x4301ed]

    ??:? int rt.sections_elf_shared.DSO.opApply(scope int delegate(ref rt.sections_elf_shared.DSO))
    [0x43069c]

    ??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*)))
    [0x430179]

    ??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)) [0x42b031]

    ??:? runModuleUnitTests [0x42bf9d]

    ??:? void rt.dmain2._d_run_main(int, char**, extern (C) int function(char[][])*).runAll()
    [0x42862c]

    ??:? void rt.dmain2._d_r'
  stdout: ''
  timestamp: 1660163090
- exit_code: 1
  program: "import std.typecons;\nimport std.math;\n/*\nReturn True if all numbers\
    \ in the list l are below threshold t.\n    >>> below_threshold([1L, 2L, 4L, 10L],\
    \ 100L)\n    true\n    >>> below_threshold([1L, 20L, 4L, 10L], 5L)\n    false\n\
    \    \n*/\nbool below_threshold(long[] l, long t) \n{\n    foreach(long i; l)\n\
    \    {\n        if(i > t)\n            return false;\n    }\n    return true;\n\
    }\nunittest\n{\n    alias candidate = below_threshold;\n\n    assert(candidate([1L,\
    \ 2L, 4L, 10L], 100L) == true);\n    assert(candidate([1L, 20L, 4L, 10L], 5L)\
    \ == false);\n    assert(candidate([1L, 20L, 4L, 10L], 21L) == true);\n    assert(candidate([1L,\
    \ 20L, 4L, 10L], 22L) == true);\n    assert(candidate([1L, 8L, 4L, 10L], 11L)\
    \ == true);\n    assert(candidate([1L, 8L, 4L, 10L], 10L) == false);\n}\nvoid\
    \ main(){}"
  status: Exception
  stderr: 'core.exception.AssertError@/tmp/tmpev0f60w0.d(29): unittest failure

    ----------------

    ??:? _d_unittestp [0x4281dd]

    ??:? void tmpev0f60w0.__unittest_L20_C1() [0x427f4b]

    ??:? void tmpev0f60w0.__modtest() [0x427f60]

    ??:? int core.runtime.runModuleUnitTests().__foreachbody2(object.ModuleInfo*)
    [0x42c1c7]

    ??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)).__lambda2(immutable(object.ModuleInfo*))
    [0x42b05a]

    ??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))).__foreachbody2(ref
    rt.sections_elf_shared.DSO) [0x4301ed]

    ??:? int rt.sections_elf_shared.DSO.opApply(scope int delegate(ref rt.sections_elf_shared.DSO))
    [0x43069c]

    ??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*)))
    [0x430179]

    ??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)) [0x42b031]

    ??:? runModuleUnitTests [0x42bf9d]

    ??:? void rt.dmain2._d_run_main(int, char**, extern (C) int function(char[][])*).runAll()
    [0x42862c]

    ??:? void rt.dmain2._d_r'
  stdout: ''
  timestamp: 1660163090
- exit_code: 1
  program: "import std.typecons;\nimport std.math;\n/*\nReturn True if all numbers\
    \ in the list l are below threshold t.\n    >>> below_threshold([1L, 2L, 4L, 10L],\
    \ 100L)\n    true\n    >>> below_threshold([1L, 20L, 4L, 10L], 5L)\n    false\n\
    \    \n*/\nbool below_threshold(long[] l, long t) \n{\n    foreach(e; l) \n  \
    \  {\n        if(e > t)\n            return false;\n    }\n    return true;\n\
    }\nunittest\n{\n    alias candidate = below_threshold;\n\n    assert(candidate([1L,\
    \ 2L, 4L, 10L], 100L) == true);\n    assert(candidate([1L, 20L, 4L, 10L], 5L)\
    \ == false);\n    assert(candidate([1L, 20L, 4L, 10L], 21L) == true);\n    assert(candidate([1L,\
    \ 20L, 4L, 10L], 22L) == true);\n    assert(candidate([1L, 8L, 4L, 10L], 11L)\
    \ == true);\n    assert(candidate([1L, 8L, 4L, 10L], 10L) == false);\n}\nvoid\
    \ main(){}"
  status: Exception
  stderr: 'core.exception.AssertError@/tmp/tmpknw11grf.d(29): unittest failure

    ----------------

    ??:? _d_unittestp [0x4281dd]

    ??:? void tmpknw11grf.__unittest_L20_C1() [0x427f4b]

    ??:? void tmpknw11grf.__modtest() [0x427f60]

    ??:? int core.runtime.runModuleUnitTests().__foreachbody2(object.ModuleInfo*)
    [0x42c1c7]

    ??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)).__lambda2(immutable(object.ModuleInfo*))
    [0x42b05a]

    ??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))).__foreachbody2(ref
    rt.sections_elf_shared.DSO) [0x4301ed]

    ??:? int rt.sections_elf_shared.DSO.opApply(scope int delegate(ref rt.sections_elf_shared.DSO))
    [0x43069c]

    ??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*)))
    [0x430179]

    ??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)) [0x42b031]

    ??:? runModuleUnitTests [0x42bf9d]

    ??:? void rt.dmain2._d_run_main(int, char**, extern (C) int function(char[][])*).runAll()
    [0x42862c]

    ??:? void rt.dmain2._d_r'
  stdout: ''
  timestamp: 1660163090
- exit_code: 1
  program: "import std.typecons;\nimport std.math;\n/*\nReturn True if all numbers\
    \ in the list l are below threshold t.\n    >>> below_threshold([1L, 2L, 4L, 10L],\
    \ 100L)\n    true\n    >>> below_threshold([1L, 20L, 4L, 10L], 5L)\n    false\n\
    \    \n*/\nbool below_threshold(long[] l, long t) \n{\n    foreach(i; l)\n   \
    \ {\n        if(i > t)\n            return false;\n    }\n    return true;\n}\n\
    unittest\n{\n    alias candidate = below_threshold;\n\n    assert(candidate([1L,\
    \ 2L, 4L, 10L], 100L) == true);\n    assert(candidate([1L, 20L, 4L, 10L], 5L)\
    \ == false);\n    assert(candidate([1L, 20L, 4L, 10L], 21L) == true);\n    assert(candidate([1L,\
    \ 20L, 4L, 10L], 22L) == true);\n    assert(candidate([1L, 8L, 4L, 10L], 11L)\
    \ == true);\n    assert(candidate([1L, 8L, 4L, 10L], 10L) == false);\n}\nvoid\
    \ main(){}"
  status: Exception
  stderr: 'core.exception.AssertError@/tmp/tmpplk4ck84.d(29): unittest failure

    ----------------

    ??:? _d_unittestp [0x4281dd]

    ??:? void tmpplk4ck84.__unittest_L20_C1() [0x427f4b]

    ??:? void tmpplk4ck84.__modtest() [0x427f60]

    ??:? int core.runtime.runModuleUnitTests().__foreachbody2(object.ModuleInfo*)
    [0x42c1c7]

    ??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)).__lambda2(immutable(object.ModuleInfo*))
    [0x42b05a]

    ??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))).__foreachbody2(ref
    rt.sections_elf_shared.DSO) [0x4301ed]

    ??:? int rt.sections_elf_shared.DSO.opApply(scope int delegate(ref rt.sections_elf_shared.DSO))
    [0x43069c]

    ??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*)))
    [0x430179]

    ??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)) [0x42b031]

    ??:? runModuleUnitTests [0x42bf9d]

    ??:? void rt.dmain2._d_run_main(int, char**, extern (C) int function(char[][])*).runAll()
    [0x42862c]

    ??:? void rt.dmain2._d_r'
  stdout: ''
  timestamp: 1660163090
- exit_code: 1
  program: "import std.typecons;\nimport std.math;\n/*\nReturn True if all numbers\
    \ in the list l are below threshold t.\n    >>> below_threshold([1L, 2L, 4L, 10L],\
    \ 100L)\n    true\n    >>> below_threshold([1L, 20L, 4L, 10L], 5L)\n    false\n\
    \    \n*/\nbool below_threshold(long[] l, long t) \n{\n    foreach(item; l)\n\
    \    {\n        if(item > t)\n            return false;\n    }\n    return true;\n\
    }\n/*\nReturn True if all numbers in the list l are below threshold t.\n    >>>\
    \ below_threshold([1L, 2L, 4L, 10L], 100L)\n    true\n    >>> below_threshold([1L,\
    \ 20L, 4L, 10L], 5L)\n    false\n    \n*/\nunittest\n{\n    alias candidate =\
    \ below_threshold;\n\n    assert(candidate([1L, 2L, 4L, 10L], 100L) == true);\n\
    \    assert(candidate([1L, 20L, 4L, 10L], 5L) == false);\n    assert(candidate([1L,\
    \ 20L, 4L, 10L], 21L) == true);\n    assert(candidate([1L, 20L, 4L, 10L], 22L)\
    \ == true);\n    assert(candidate([1L, 8L, 4L, 10L], 11L) == true);\n    assert(candidate([1L,\
    \ 8L, 4L, 10L], 10L) == false);\n}\nvoid main(){}"
  status: Exception
  stderr: 'core.exception.AssertError@/tmp/tmpvaqtfi7e.d(37): unittest failure

    ----------------

    ??:? _d_unittestp [0x4281dd]

    ??:? void tmpvaqtfi7e.__unittest_L28_C1() [0x427f4b]

    ??:? void tmpvaqtfi7e.__modtest() [0x427f60]

    ??:? int core.runtime.runModuleUnitTests().__foreachbody2(object.ModuleInfo*)
    [0x42c1c7]

    ??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)).__lambda2(immutable(object.ModuleInfo*))
    [0x42b05a]

    ??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))).__foreachbody2(ref
    rt.sections_elf_shared.DSO) [0x4301ed]

    ??:? int rt.sections_elf_shared.DSO.opApply(scope int delegate(ref rt.sections_elf_shared.DSO))
    [0x43069c]

    ??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*)))
    [0x430179]

    ??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)) [0x42b031]

    ??:? runModuleUnitTests [0x42bf9d]

    ??:? void rt.dmain2._d_run_main(int, char**, extern (C) int function(char[][])*).runAll()
    [0x42862c]

    ??:? void rt.dmain2._d_r'
  stdout: ''
  timestamp: 1660163090
- exit_code: 1
  program: "import std.typecons;\nimport std.math;\n/*\nReturn True if all numbers\
    \ in the list l are below threshold t.\n    >>> below_threshold([1L, 2L, 4L, 10L],\
    \ 100L)\n    true\n    >>> below_threshold([1L, 20L, 4L, 10L], 5L)\n    false\n\
    \    \n*/\nbool below_threshold(long[] l, long t) \n{\n    foreach(i; l)\n   \
    \ {\n        if(i > t)\n            return false;\n    }\n    return true;\n}\n\
    unittest\n{\n    alias candidate = below_threshold;\n\n    assert(candidate([1L,\
    \ 2L, 4L, 10L], 100L) == true);\n    assert(candidate([1L, 20L, 4L, 10L], 5L)\
    \ == false);\n    assert(candidate([1L, 20L, 4L, 10L], 21L) == true);\n    assert(candidate([1L,\
    \ 20L, 4L, 10L], 22L) == true);\n    assert(candidate([1L, 8L, 4L, 10L], 11L)\
    \ == true);\n    assert(candidate([1L, 8L, 4L, 10L], 10L) == false);\n}\nvoid\
    \ main(){}"
  status: Exception
  stderr: 'core.exception.AssertError@/tmp/tmpplk4ck84.d(29): unittest failure

    ----------------

    ??:? _d_unittestp [0x4281dd]

    ??:? void tmpplk4ck84.__unittest_L20_C1() [0x427f4b]

    ??:? void tmpplk4ck84.__modtest() [0x427f60]

    ??:? int core.runtime.runModuleUnitTests().__foreachbody2(object.ModuleInfo*)
    [0x42c1c7]

    ??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)).__lambda2(immutable(object.ModuleInfo*))
    [0x42b05a]

    ??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))).__foreachbody2(ref
    rt.sections_elf_shared.DSO) [0x4301ed]

    ??:? int rt.sections_elf_shared.DSO.opApply(scope int delegate(ref rt.sections_elf_shared.DSO))
    [0x43069c]

    ??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*)))
    [0x430179]

    ??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)) [0x42b031]

    ??:? runModuleUnitTests [0x42bf9d]

    ??:? void rt.dmain2._d_run_main(int, char**, extern (C) int function(char[][])*).runAll()
    [0x42862c]

    ??:? void rt.dmain2._d_r'
  stdout: ''
  timestamp: 1660163090
- exit_code: 0
  program: "import std.typecons;\nimport std.math;\n/*\nReturn True if all numbers\
    \ in the list l are below threshold t.\n    >>> below_threshold([1L, 2L, 4L, 10L],\
    \ 100L)\n    true\n    >>> below_threshold([1L, 20L, 4L, 10L], 5L)\n    false\n\
    \    \n*/\nbool below_threshold(long[] l, long t) \n{\n    foreach(long i; l)\n\
    \    {\n        if(i >= t)\n            return false;\n    }\n    return true;\n\
    }\nunittest\n{\n    alias candidate = below_threshold;\n\n    assert(candidate([1L,\
    \ 2L, 4L, 10L], 100L) == true);\n    assert(candidate([1L, 20L, 4L, 10L], 5L)\
    \ == false);\n    assert(candidate([1L, 20L, 4L, 10L], 21L) == true);\n    assert(candidate([1L,\
    \ 20L, 4L, 10L], 22L) == true);\n    assert(candidate([1L, 8L, 4L, 10L], 11L)\
    \ == true);\n    assert(candidate([1L, 8L, 4L, 10L], 10L) == false);\n}\nvoid\
    \ main(){}"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660163090
- exit_code: 1
  program: "import std.typecons;\nimport std.math;\n/*\nReturn True if all numbers\
    \ in the list l are below threshold t.\n    >>> below_threshold([1L, 2L, 4L, 10L],\
    \ 100L)\n    true\n    >>> below_threshold([1L, 20L, 4L, 10L], 5L)\n    false\n\
    \    \n*/\nbool below_threshold(long[] l, long t) \n{\n    foreach(i; l)\n   \
    \ {\n        if(i > t)\n            return false;\n    }\n    return true;\n}\n\
    unittest\n{\n    alias candidate = below_threshold;\n\n    assert(candidate([1L,\
    \ 2L, 4L, 10L], 100L) == true);\n    assert(candidate([1L, 20L, 4L, 10L], 5L)\
    \ == false);\n    assert(candidate([1L, 20L, 4L, 10L], 21L) == true);\n    assert(candidate([1L,\
    \ 20L, 4L, 10L], 22L) == true);\n    assert(candidate([1L, 8L, 4L, 10L], 11L)\
    \ == true);\n    assert(candidate([1L, 8L, 4L, 10L], 10L) == false);\n}\nvoid\
    \ main(){}"
  status: Exception
  stderr: 'core.exception.AssertError@/tmp/tmpplk4ck84.d(29): unittest failure

    ----------------

    ??:? _d_unittestp [0x4281dd]

    ??:? void tmpplk4ck84.__unittest_L20_C1() [0x427f4b]

    ??:? void tmpplk4ck84.__modtest() [0x427f60]

    ??:? int core.runtime.runModuleUnitTests().__foreachbody2(object.ModuleInfo*)
    [0x42c1c7]

    ??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)).__lambda2(immutable(object.ModuleInfo*))
    [0x42b05a]

    ??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))).__foreachbody2(ref
    rt.sections_elf_shared.DSO) [0x4301ed]

    ??:? int rt.sections_elf_shared.DSO.opApply(scope int delegate(ref rt.sections_elf_shared.DSO))
    [0x43069c]

    ??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*)))
    [0x430179]

    ??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)) [0x42b031]

    ??:? runModuleUnitTests [0x42bf9d]

    ??:? void rt.dmain2._d_run_main(int, char**, extern (C) int function(char[][])*).runAll()
    [0x42862c]

    ??:? void rt.dmain2._d_r'
  stdout: ''
  timestamp: 1660163090
- exit_code: 1
  program: "import std.typecons;\nimport std.math;\n/*\nReturn True if all numbers\
    \ in the list l are below threshold t.\n    >>> below_threshold([1L, 2L, 4L, 10L],\
    \ 100L)\n    true\n    >>> below_threshold([1L, 20L, 4L, 10L], 5L)\n    false\n\
    \    \n*/\nbool below_threshold(long[] l, long t) \n{\n    foreach(long i; l)\n\
    \    {\n        if(i > t)\n            return false;\n    }\n    return true;\n\
    }\nunittest\n{\n    alias candidate = below_threshold;\n\n    assert(candidate([1L,\
    \ 2L, 4L, 10L], 100L) == true);\n    assert(candidate([1L, 20L, 4L, 10L], 5L)\
    \ == false);\n    assert(candidate([1L, 20L, 4L, 10L], 21L) == true);\n    assert(candidate([1L,\
    \ 20L, 4L, 10L], 22L) == true);\n    assert(candidate([1L, 8L, 4L, 10L], 11L)\
    \ == true);\n    assert(candidate([1L, 8L, 4L, 10L], 10L) == false);\n}\nvoid\
    \ main(){}"
  status: Exception
  stderr: 'core.exception.AssertError@/tmp/tmpev0f60w0.d(29): unittest failure

    ----------------

    ??:? _d_unittestp [0x4281dd]

    ??:? void tmpev0f60w0.__unittest_L20_C1() [0x427f4b]

    ??:? void tmpev0f60w0.__modtest() [0x427f60]

    ??:? int core.runtime.runModuleUnitTests().__foreachbody2(object.ModuleInfo*)
    [0x42c1c7]

    ??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)).__lambda2(immutable(object.ModuleInfo*))
    [0x42b05a]

    ??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))).__foreachbody2(ref
    rt.sections_elf_shared.DSO) [0x4301ed]

    ??:? int rt.sections_elf_shared.DSO.opApply(scope int delegate(ref rt.sections_elf_shared.DSO))
    [0x43069c]

    ??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*)))
    [0x430179]

    ??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)) [0x42b031]

    ??:? runModuleUnitTests [0x42bf9d]

    ??:? void rt.dmain2._d_run_main(int, char**, extern (C) int function(char[][])*).runAll()
    [0x42862c]

    ??:? void rt.dmain2._d_r'
  stdout: ''
  timestamp: 1660163090
- exit_code: 1
  program: "import std.typecons;\nimport std.math;\n/*\nReturn True if all numbers\
    \ in the list l are below threshold t.\n    >>> below_threshold([1L, 2L, 4L, 10L],\
    \ 100L)\n    true\n    >>> below_threshold([1L, 20L, 4L, 10L], 5L)\n    false\n\
    \    \n*/\nbool below_threshold(long[] l, long t) \n{\n    foreach(i; l)\n   \
    \ {\n        if(i > t)\n            return false;\n    }\n    return true;\n}\n\
    unittest\n{\n    alias candidate = below_threshold;\n\n    assert(candidate([1L,\
    \ 2L, 4L, 10L], 100L) == true);\n    assert(candidate([1L, 20L, 4L, 10L], 5L)\
    \ == false);\n    assert(candidate([1L, 20L, 4L, 10L], 21L) == true);\n    assert(candidate([1L,\
    \ 20L, 4L, 10L], 22L) == true);\n    assert(candidate([1L, 8L, 4L, 10L], 11L)\
    \ == true);\n    assert(candidate([1L, 8L, 4L, 10L], 10L) == false);\n}\nvoid\
    \ main(){}"
  status: Exception
  stderr: 'core.exception.AssertError@/tmp/tmpplk4ck84.d(29): unittest failure

    ----------------

    ??:? _d_unittestp [0x4281dd]

    ??:? void tmpplk4ck84.__unittest_L20_C1() [0x427f4b]

    ??:? void tmpplk4ck84.__modtest() [0x427f60]

    ??:? int core.runtime.runModuleUnitTests().__foreachbody2(object.ModuleInfo*)
    [0x42c1c7]

    ??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)).__lambda2(immutable(object.ModuleInfo*))
    [0x42b05a]

    ??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))).__foreachbody2(ref
    rt.sections_elf_shared.DSO) [0x4301ed]

    ??:? int rt.sections_elf_shared.DSO.opApply(scope int delegate(ref rt.sections_elf_shared.DSO))
    [0x43069c]

    ??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*)))
    [0x430179]

    ??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)) [0x42b031]

    ??:? runModuleUnitTests [0x42bf9d]

    ??:? void rt.dmain2._d_run_main(int, char**, extern (C) int function(char[][])*).runAll()
    [0x42862c]

    ??:? void rt.dmain2._d_r'
  stdout: ''
  timestamp: 1660163090
- exit_code: 0
  program: "import std.typecons;\nimport std.math;\n/*\nReturn True if all numbers\
    \ in the list l are below threshold t.\n    >>> below_threshold([1L, 2L, 4L, 10L],\
    \ 100L)\n    true\n    >>> below_threshold([1L, 20L, 4L, 10L], 5L)\n    false\n\
    \    \n*/\nbool below_threshold(long[] l, long t) \n{\n    foreach(x; l)\n   \
    \ {\n        if(x >= t)\n            return false;\n    }\n    return true;\n\
    }\n/*\nReturn True if all numbers in the list l are below threshold t.\n    >>>\
    \ below_threshold([1L, 2L, 4L, 10L], 100L)\n    true\n    >>> below_threshold([1L,\
    \ 20L, 4L, 10L], 5L)\n    false\n    \n*/\nunittest\n{\n    alias candidate =\
    \ below_threshold;\n\n    assert(candidate([1L, 2L, 4L, 10L], 100L) == true);\n\
    \    assert(candidate([1L, 20L, 4L, 10L], 5L) == false);\n    assert(candidate([1L,\
    \ 20L, 4L, 10L], 21L) == true);\n    assert(candidate([1L, 20L, 4L, 10L], 22L)\
    \ == true);\n    assert(candidate([1L, 8L, 4L, 10L], 11L) == true);\n    assert(candidate([1L,\
    \ 8L, 4L, 10L], 10L) == false);\n}\nvoid main(){}"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660163090
- exit_code: 1
  program: "import std.typecons;\nimport std.math;\n/*\nReturn True if all numbers\
    \ in the list l are below threshold t.\n    >>> below_threshold([1L, 2L, 4L, 10L],\
    \ 100L)\n    true\n    >>> below_threshold([1L, 20L, 4L, 10L], 5L)\n    false\n\
    \    \n*/\nbool below_threshold(long[] l, long t) \n{\n    foreach(long i; l)\n\
    \    {\n        if(i > t)\n            return false;\n    }\n    return true;\n\
    }\nunittest\n{\n    alias candidate = below_threshold;\n\n    assert(candidate([1L,\
    \ 2L, 4L, 10L], 100L) == true);\n    assert(candidate([1L, 20L, 4L, 10L], 5L)\
    \ == false);\n    assert(candidate([1L, 20L, 4L, 10L], 21L) == true);\n    assert(candidate([1L,\
    \ 20L, 4L, 10L], 22L) == true);\n    assert(candidate([1L, 8L, 4L, 10L], 11L)\
    \ == true);\n    assert(candidate([1L, 8L, 4L, 10L], 10L) == false);\n}\nvoid\
    \ main(){}"
  status: Exception
  stderr: 'core.exception.AssertError@/tmp/tmpev0f60w0.d(29): unittest failure

    ----------------

    ??:? _d_unittestp [0x4281dd]

    ??:? void tmpev0f60w0.__unittest_L20_C1() [0x427f4b]

    ??:? void tmpev0f60w0.__modtest() [0x427f60]

    ??:? int core.runtime.runModuleUnitTests().__foreachbody2(object.ModuleInfo*)
    [0x42c1c7]

    ??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)).__lambda2(immutable(object.ModuleInfo*))
    [0x42b05a]

    ??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))).__foreachbody2(ref
    rt.sections_elf_shared.DSO) [0x4301ed]

    ??:? int rt.sections_elf_shared.DSO.opApply(scope int delegate(ref rt.sections_elf_shared.DSO))
    [0x43069c]

    ??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*)))
    [0x430179]

    ??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)) [0x42b031]

    ??:? runModuleUnitTests [0x42bf9d]

    ??:? void rt.dmain2._d_run_main(int, char**, extern (C) int function(char[][])*).runAll()
    [0x42862c]

    ??:? void rt.dmain2._d_r'
  stdout: ''
  timestamp: 1660163090
- exit_code: 0
  program: "import std.typecons;\nimport std.math;\n/*\nReturn True if all numbers\
    \ in the list l are below threshold t.\n    >>> below_threshold([1L, 2L, 4L, 10L],\
    \ 100L)\n    true\n    >>> below_threshold([1L, 20L, 4L, 10L], 5L)\n    false\n\
    \    \n*/\nbool below_threshold(long[] l, long t) \n{\n    foreach(i; l)\n   \
    \ {\n        if(i >= t)\n            return false;\n    }\n    return true;\n\
    }\nunittest\n{\n    alias candidate = below_threshold;\n\n    assert(candidate([1L,\
    \ 2L, 4L, 10L], 100L) == true);\n    assert(candidate([1L, 20L, 4L, 10L], 5L)\
    \ == false);\n    assert(candidate([1L, 20L, 4L, 10L], 21L) == true);\n    assert(candidate([1L,\
    \ 20L, 4L, 10L], 22L) == true);\n    assert(candidate([1L, 8L, 4L, 10L], 11L)\
    \ == true);\n    assert(candidate([1L, 8L, 4L, 10L], 10L) == false);\n}\nvoid\
    \ main(){}"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660163090
- exit_code: 0
  program: "import std.typecons;\nimport std.math;\n/*\nReturn True if all numbers\
    \ in the list l are below threshold t.\n    >>> below_threshold([1L, 2L, 4L, 10L],\
    \ 100L)\n    true\n    >>> below_threshold([1L, 20L, 4L, 10L], 5L)\n    false\n\
    \    \n*/\nbool below_threshold(long[] l, long t) \n{\n    foreach(i; l)\n   \
    \ {\n        if(i >= t)\n            return false;\n    }\n    return true;\n\
    }\nunittest\n{\n    alias candidate = below_threshold;\n\n    assert(candidate([1L,\
    \ 2L, 4L, 10L], 100L) == true);\n    assert(candidate([1L, 20L, 4L, 10L], 5L)\
    \ == false);\n    assert(candidate([1L, 20L, 4L, 10L], 21L) == true);\n    assert(candidate([1L,\
    \ 20L, 4L, 10L], 22L) == true);\n    assert(candidate([1L, 8L, 4L, 10L], 11L)\
    \ == true);\n    assert(candidate([1L, 8L, 4L, 10L], 10L) == false);\n}\nvoid\
    \ main(){}"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660163090
- exit_code: 1
  program: "import std.typecons;\nimport std.math;\n/*\nReturn True if all numbers\
    \ in the list l are below threshold t.\n    >>> below_threshold([1L, 2L, 4L, 10L],\
    \ 100L)\n    true\n    >>> below_threshold([1L, 20L, 4L, 10L], 5L)\n    false\n\
    \    \n*/\nbool below_threshold(long[] l, long t) \n{\n    foreach(long i; l)\n\
    \    {\n        if(i > t)\n            return false;\n    }\n    return true;\n\
    }\nunittest\n{\n    alias candidate = below_threshold;\n\n    assert(candidate([1L,\
    \ 2L, 4L, 10L], 100L) == true);\n    assert(candidate([1L, 20L, 4L, 10L], 5L)\
    \ == false);\n    assert(candidate([1L, 20L, 4L, 10L], 21L) == true);\n    assert(candidate([1L,\
    \ 20L, 4L, 10L], 22L) == true);\n    assert(candidate([1L, 8L, 4L, 10L], 11L)\
    \ == true);\n    assert(candidate([1L, 8L, 4L, 10L], 10L) == false);\n}\nvoid\
    \ main(){}"
  status: Exception
  stderr: 'core.exception.AssertError@/tmp/tmpev0f60w0.d(29): unittest failure

    ----------------

    ??:? _d_unittestp [0x4281dd]

    ??:? void tmpev0f60w0.__unittest_L20_C1() [0x427f4b]

    ??:? void tmpev0f60w0.__modtest() [0x427f60]

    ??:? int core.runtime.runModuleUnitTests().__foreachbody2(object.ModuleInfo*)
    [0x42c1c7]

    ??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)).__lambda2(immutable(object.ModuleInfo*))
    [0x42b05a]

    ??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))).__foreachbody2(ref
    rt.sections_elf_shared.DSO) [0x4301ed]

    ??:? int rt.sections_elf_shared.DSO.opApply(scope int delegate(ref rt.sections_elf_shared.DSO))
    [0x43069c]

    ??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*)))
    [0x430179]

    ??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)) [0x42b031]

    ??:? runModuleUnitTests [0x42bf9d]

    ??:? void rt.dmain2._d_run_main(int, char**, extern (C) int function(char[][])*).runAll()
    [0x42862c]

    ??:? void rt.dmain2._d_r'
  stdout: ''
  timestamp: 1660163090
- exit_code: 0
  program: "import std.typecons;\nimport std.math;\n/*\nReturn True if all numbers\
    \ in the list l are below threshold t.\n    >>> below_threshold([1L, 2L, 4L, 10L],\
    \ 100L)\n    true\n    >>> below_threshold([1L, 20L, 4L, 10L], 5L)\n    false\n\
    \    \n*/\nbool below_threshold(long[] l, long t) \n{\n    foreach(i; l)\n   \
    \ {\n        if(i >= t)\n            return false;\n    }\n    return true;\n\
    }\nunittest\n{\n    alias candidate = below_threshold;\n\n    assert(candidate([1L,\
    \ 2L, 4L, 10L], 100L) == true);\n    assert(candidate([1L, 20L, 4L, 10L], 5L)\
    \ == false);\n    assert(candidate([1L, 20L, 4L, 10L], 21L) == true);\n    assert(candidate([1L,\
    \ 20L, 4L, 10L], 22L) == true);\n    assert(candidate([1L, 8L, 4L, 10L], 11L)\
    \ == true);\n    assert(candidate([1L, 8L, 4L, 10L], 10L) == false);\n}\nvoid\
    \ main(){}"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660163090
- exit_code: 1
  program: "import std.typecons;\nimport std.math;\n/*\nReturn True if all numbers\
    \ in the list l are below threshold t.\n    >>> below_threshold([1L, 2L, 4L, 10L],\
    \ 100L)\n    true\n    >>> below_threshold([1L, 20L, 4L, 10L], 5L)\n    false\n\
    \    \n*/\nbool below_threshold(long[] l, long t) \n{\n    foreach(i; l)\n   \
    \ {\n        if(i > t)\n            return false;\n    }\n    return true;\n}\n\
    unittest\n{\n    alias candidate = below_threshold;\n\n    assert(candidate([1L,\
    \ 2L, 4L, 10L], 100L) == true);\n    assert(candidate([1L, 20L, 4L, 10L], 5L)\
    \ == false);\n    assert(candidate([1L, 20L, 4L, 10L], 21L) == true);\n    assert(candidate([1L,\
    \ 20L, 4L, 10L], 22L) == true);\n    assert(candidate([1L, 8L, 4L, 10L], 11L)\
    \ == true);\n    assert(candidate([1L, 8L, 4L, 10L], 10L) == false);\n}\nvoid\
    \ main(){}"
  status: Exception
  stderr: 'core.exception.AssertError@/tmp/tmpplk4ck84.d(29): unittest failure

    ----------------

    ??:? _d_unittestp [0x4281dd]

    ??:? void tmpplk4ck84.__unittest_L20_C1() [0x427f4b]

    ??:? void tmpplk4ck84.__modtest() [0x427f60]

    ??:? int core.runtime.runModuleUnitTests().__foreachbody2(object.ModuleInfo*)
    [0x42c1c7]

    ??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)).__lambda2(immutable(object.ModuleInfo*))
    [0x42b05a]

    ??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))).__foreachbody2(ref
    rt.sections_elf_shared.DSO) [0x4301ed]

    ??:? int rt.sections_elf_shared.DSO.opApply(scope int delegate(ref rt.sections_elf_shared.DSO))
    [0x43069c]

    ??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*)))
    [0x430179]

    ??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)) [0x42b031]

    ??:? runModuleUnitTests [0x42bf9d]

    ??:? void rt.dmain2._d_run_main(int, char**, extern (C) int function(char[][])*).runAll()
    [0x42862c]

    ??:? void rt.dmain2._d_r'
  stdout: ''
  timestamp: 1660163090
- exit_code: 1
  program: "import std.typecons;\nimport std.math;\n/*\nReturn True if all numbers\
    \ in the list l are below threshold t.\n    >>> below_threshold([1L, 2L, 4L, 10L],\
    \ 100L)\n    true\n    >>> below_threshold([1L, 20L, 4L, 10L], 5L)\n    false\n\
    \    \n*/\nbool below_threshold(long[] l, long t) \n{\n    foreach(long i; l)\n\
    \    {\n        if(i > t)\n            return false;\n    }\n    return true;\n\
    }\nunittest\n{\n    alias candidate = below_threshold;\n\n    assert(candidate([1L,\
    \ 2L, 4L, 10L], 100L) == true);\n    assert(candidate([1L, 20L, 4L, 10L], 5L)\
    \ == false);\n    assert(candidate([1L, 20L, 4L, 10L], 21L) == true);\n    assert(candidate([1L,\
    \ 20L, 4L, 10L], 22L) == true);\n    assert(candidate([1L, 8L, 4L, 10L], 11L)\
    \ == true);\n    assert(candidate([1L, 8L, 4L, 10L], 10L) == false);\n}\nvoid\
    \ main(){}"
  status: Exception
  stderr: 'core.exception.AssertError@/tmp/tmpev0f60w0.d(29): unittest failure

    ----------------

    ??:? _d_unittestp [0x4281dd]

    ??:? void tmpev0f60w0.__unittest_L20_C1() [0x427f4b]

    ??:? void tmpev0f60w0.__modtest() [0x427f60]

    ??:? int core.runtime.runModuleUnitTests().__foreachbody2(object.ModuleInfo*)
    [0x42c1c7]

    ??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)).__lambda2(immutable(object.ModuleInfo*))
    [0x42b05a]

    ??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))).__foreachbody2(ref
    rt.sections_elf_shared.DSO) [0x4301ed]

    ??:? int rt.sections_elf_shared.DSO.opApply(scope int delegate(ref rt.sections_elf_shared.DSO))
    [0x43069c]

    ??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*)))
    [0x430179]

    ??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)) [0x42b031]

    ??:? runModuleUnitTests [0x42bf9d]

    ??:? void rt.dmain2._d_run_main(int, char**, extern (C) int function(char[][])*).runAll()
    [0x42862c]

    ??:? void rt.dmain2._d_r'
  stdout: ''
  timestamp: 1660163090
- exit_code: 1
  program: "import std.typecons;\nimport std.math;\n/*\nReturn True if all numbers\
    \ in the list l are below threshold t.\n    >>> below_threshold([1L, 2L, 4L, 10L],\
    \ 100L)\n    true\n    >>> below_threshold([1L, 20L, 4L, 10L], 5L)\n    false\n\
    \    \n*/\nbool below_threshold(long[] l, long t) \n{\n    foreach(i; l)\n   \
    \ {\n        if(i > t)\n            return false;\n    }\n    return true;\n}\n\
    unittest\n{\n    alias candidate = below_threshold;\n\n    assert(candidate([1L,\
    \ 2L, 4L, 10L], 100L) == true);\n    assert(candidate([1L, 20L, 4L, 10L], 5L)\
    \ == false);\n    assert(candidate([1L, 20L, 4L, 10L], 21L) == true);\n    assert(candidate([1L,\
    \ 20L, 4L, 10L], 22L) == true);\n    assert(candidate([1L, 8L, 4L, 10L], 11L)\
    \ == true);\n    assert(candidate([1L, 8L, 4L, 10L], 10L) == false);\n}\nvoid\
    \ main(){}"
  status: Exception
  stderr: 'core.exception.AssertError@/tmp/tmpplk4ck84.d(29): unittest failure

    ----------------

    ??:? _d_unittestp [0x4281dd]

    ??:? void tmpplk4ck84.__unittest_L20_C1() [0x427f4b]

    ??:? void tmpplk4ck84.__modtest() [0x427f60]

    ??:? int core.runtime.runModuleUnitTests().__foreachbody2(object.ModuleInfo*)
    [0x42c1c7]

    ??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)).__lambda2(immutable(object.ModuleInfo*))
    [0x42b05a]

    ??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))).__foreachbody2(ref
    rt.sections_elf_shared.DSO) [0x4301ed]

    ??:? int rt.sections_elf_shared.DSO.opApply(scope int delegate(ref rt.sections_elf_shared.DSO))
    [0x43069c]

    ??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*)))
    [0x430179]

    ??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)) [0x42b031]

    ??:? runModuleUnitTests [0x42bf9d]

    ??:? void rt.dmain2._d_run_main(int, char**, extern (C) int function(char[][])*).runAll()
    [0x42862c]

    ??:? void rt.dmain2._d_r'
  stdout: ''
  timestamp: 1660163090
- exit_code: 1
  program: "import std.typecons;\nimport std.math;\n/*\nReturn True if all numbers\
    \ in the list l are below threshold t.\n    >>> below_threshold([1L, 2L, 4L, 10L],\
    \ 100L)\n    true\n    >>> below_threshold([1L, 20L, 4L, 10L], 5L)\n    false\n\
    \    \n*/\nbool below_threshold(long[] l, long t) \n{\n    foreach(i; l)\n   \
    \ {\n        if(i > t)\n            return false;\n    }\n    return true;\n}\n\
    unittest\n{\n    alias candidate = below_threshold;\n\n    assert(candidate([1L,\
    \ 2L, 4L, 10L], 100L) == true);\n    assert(candidate([1L, 20L, 4L, 10L], 5L)\
    \ == false);\n    assert(candidate([1L, 20L, 4L, 10L], 21L) == true);\n    assert(candidate([1L,\
    \ 20L, 4L, 10L], 22L) == true);\n    assert(candidate([1L, 8L, 4L, 10L], 11L)\
    \ == true);\n    assert(candidate([1L, 8L, 4L, 10L], 10L) == false);\n}\nvoid\
    \ main(){}"
  status: Exception
  stderr: 'core.exception.AssertError@/tmp/tmpplk4ck84.d(29): unittest failure

    ----------------

    ??:? _d_unittestp [0x4281dd]

    ??:? void tmpplk4ck84.__unittest_L20_C1() [0x427f4b]

    ??:? void tmpplk4ck84.__modtest() [0x427f60]

    ??:? int core.runtime.runModuleUnitTests().__foreachbody2(object.ModuleInfo*)
    [0x42c1c7]

    ??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)).__lambda2(immutable(object.ModuleInfo*))
    [0x42b05a]

    ??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))).__foreachbody2(ref
    rt.sections_elf_shared.DSO) [0x4301ed]

    ??:? int rt.sections_elf_shared.DSO.opApply(scope int delegate(ref rt.sections_elf_shared.DSO))
    [0x43069c]

    ??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*)))
    [0x430179]

    ??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)) [0x42b031]

    ??:? runModuleUnitTests [0x42bf9d]

    ??:? void rt.dmain2._d_run_main(int, char**, extern (C) int function(char[][])*).runAll()
    [0x42862c]

    ??:? void rt.dmain2._d_r'
  stdout: ''
  timestamp: 1660163090
- exit_code: 1
  program: "import std.typecons;\nimport std.math;\n/*\nReturn True if all numbers\
    \ in the list l are below threshold t.\n    >>> below_threshold([1L, 2L, 4L, 10L],\
    \ 100L)\n    true\n    >>> below_threshold([1L, 20L, 4L, 10L], 5L)\n    false\n\
    \    \n*/\nbool below_threshold(long[] l, long t) \n{\n    foreach(long i; l)\n\
    \    {\n        if(i > t)\n            return false;\n    }\n    return true;\n\
    }\nunittest\n{\n    alias candidate = below_threshold;\n\n    assert(candidate([1L,\
    \ 2L, 4L, 10L], 100L) == true);\n    assert(candidate([1L, 20L, 4L, 10L], 5L)\
    \ == false);\n    assert(candidate([1L, 20L, 4L, 10L], 21L) == true);\n    assert(candidate([1L,\
    \ 20L, 4L, 10L], 22L) == true);\n    assert(candidate([1L, 8L, 4L, 10L], 11L)\
    \ == true);\n    assert(candidate([1L, 8L, 4L, 10L], 10L) == false);\n}\nvoid\
    \ main(){}"
  status: Exception
  stderr: 'core.exception.AssertError@/tmp/tmpev0f60w0.d(29): unittest failure

    ----------------

    ??:? _d_unittestp [0x4281dd]

    ??:? void tmpev0f60w0.__unittest_L20_C1() [0x427f4b]

    ??:? void tmpev0f60w0.__modtest() [0x427f60]

    ??:? int core.runtime.runModuleUnitTests().__foreachbody2(object.ModuleInfo*)
    [0x42c1c7]

    ??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)).__lambda2(immutable(object.ModuleInfo*))
    [0x42b05a]

    ??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))).__foreachbody2(ref
    rt.sections_elf_shared.DSO) [0x4301ed]

    ??:? int rt.sections_elf_shared.DSO.opApply(scope int delegate(ref rt.sections_elf_shared.DSO))
    [0x43069c]

    ??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*)))
    [0x430179]

    ??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)) [0x42b031]

    ??:? runModuleUnitTests [0x42bf9d]

    ??:? void rt.dmain2._d_run_main(int, char**, extern (C) int function(char[][])*).runAll()
    [0x42862c]

    ??:? void rt.dmain2._d_r'
  stdout: ''
  timestamp: 1660163090
- exit_code: 1
  program: "import std.typecons;\nimport std.math;\n/*\nReturn True if all numbers\
    \ in the list l are below threshold t.\n    >>> below_threshold([1L, 2L, 4L, 10L],\
    \ 100L)\n    true\n    >>> below_threshold([1L, 20L, 4L, 10L], 5L)\n    false\n\
    \    \n*/\nbool below_threshold(long[] l, long t) \n{\n    foreach(e; l)\n   \
    \ {\n        if(e > t)\n            return false;\n    }\n    return true;\n}\n\
    unittest\n{\n    alias candidate = below_threshold;\n\n    assert(candidate([1L,\
    \ 2L, 4L, 10L], 100L) == true);\n    assert(candidate([1L, 20L, 4L, 10L], 5L)\
    \ == false);\n    assert(candidate([1L, 20L, 4L, 10L], 21L) == true);\n    assert(candidate([1L,\
    \ 20L, 4L, 10L], 22L) == true);\n    assert(candidate([1L, 8L, 4L, 10L], 11L)\
    \ == true);\n    assert(candidate([1L, 8L, 4L, 10L], 10L) == false);\n}\nvoid\
    \ main(){}"
  status: Exception
  stderr: 'core.exception.AssertError@/tmp/tmpuc3d88p9.d(29): unittest failure

    ----------------

    ??:? _d_unittestp [0x4281dd]

    ??:? void tmpuc3d88p9.__unittest_L20_C1() [0x427f4b]

    ??:? void tmpuc3d88p9.__modtest() [0x427f60]

    ??:? int core.runtime.runModuleUnitTests().__foreachbody2(object.ModuleInfo*)
    [0x42c1c7]

    ??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)).__lambda2(immutable(object.ModuleInfo*))
    [0x42b05a]

    ??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))).__foreachbody2(ref
    rt.sections_elf_shared.DSO) [0x4301ed]

    ??:? int rt.sections_elf_shared.DSO.opApply(scope int delegate(ref rt.sections_elf_shared.DSO))
    [0x43069c]

    ??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*)))
    [0x430179]

    ??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)) [0x42b031]

    ??:? runModuleUnitTests [0x42bf9d]

    ??:? void rt.dmain2._d_run_main(int, char**, extern (C) int function(char[][])*).runAll()
    [0x42862c]

    ??:? void rt.dmain2._d_r'
  stdout: ''
  timestamp: 1660163090
- exit_code: 1
  program: "import std.typecons;\nimport std.math;\n/*\nReturn True if all numbers\
    \ in the list l are below threshold t.\n    >>> below_threshold([1L, 2L, 4L, 10L],\
    \ 100L)\n    true\n    >>> below_threshold([1L, 20L, 4L, 10L], 5L)\n    false\n\
    \    \n*/\nbool below_threshold(long[] l, long t) \n{\n    foreach(i; l)\n   \
    \ {\n        if(i > t)\n            return false;\n    }\n    return true;\n}\n\
    unittest\n{\n    alias candidate = below_threshold;\n\n    assert(candidate([1L,\
    \ 2L, 4L, 10L], 100L) == true);\n    assert(candidate([1L, 20L, 4L, 10L], 5L)\
    \ == false);\n    assert(candidate([1L, 20L, 4L, 10L], 21L) == true);\n    assert(candidate([1L,\
    \ 20L, 4L, 10L], 22L) == true);\n    assert(candidate([1L, 8L, 4L, 10L], 11L)\
    \ == true);\n    assert(candidate([1L, 8L, 4L, 10L], 10L) == false);\n}\nvoid\
    \ main(){}"
  status: Exception
  stderr: 'core.exception.AssertError@/tmp/tmpplk4ck84.d(29): unittest failure

    ----------------

    ??:? _d_unittestp [0x4281dd]

    ??:? void tmpplk4ck84.__unittest_L20_C1() [0x427f4b]

    ??:? void tmpplk4ck84.__modtest() [0x427f60]

    ??:? int core.runtime.runModuleUnitTests().__foreachbody2(object.ModuleInfo*)
    [0x42c1c7]

    ??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)).__lambda2(immutable(object.ModuleInfo*))
    [0x42b05a]

    ??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))).__foreachbody2(ref
    rt.sections_elf_shared.DSO) [0x4301ed]

    ??:? int rt.sections_elf_shared.DSO.opApply(scope int delegate(ref rt.sections_elf_shared.DSO))
    [0x43069c]

    ??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*)))
    [0x430179]

    ??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)) [0x42b031]

    ??:? runModuleUnitTests [0x42bf9d]

    ??:? void rt.dmain2._d_run_main(int, char**, extern (C) int function(char[][])*).runAll()
    [0x42862c]

    ??:? void rt.dmain2._d_r'
  stdout: ''
  timestamp: 1660163090
- exit_code: 1
  program: "import std.typecons;\nimport std.math;\n/*\nReturn True if all numbers\
    \ in the list l are below threshold t.\n    >>> below_threshold([1L, 2L, 4L, 10L],\
    \ 100L)\n    true\n    >>> below_threshold([1L, 20L, 4L, 10L], 5L)\n    false\n\
    \    \n*/\nbool below_threshold(long[] l, long t) \n{\n    foreach(long i; l)\n\
    \    {\n        if(i > t)\n            return false;\n    }\n    return true;\n\
    }\nunittest\n{\n    alias candidate = below_threshold;\n\n    assert(candidate([1L,\
    \ 2L, 4L, 10L], 100L) == true);\n    assert(candidate([1L, 20L, 4L, 10L], 5L)\
    \ == false);\n    assert(candidate([1L, 20L, 4L, 10L], 21L) == true);\n    assert(candidate([1L,\
    \ 20L, 4L, 10L], 22L) == true);\n    assert(candidate([1L, 8L, 4L, 10L], 11L)\
    \ == true);\n    assert(candidate([1L, 8L, 4L, 10L], 10L) == false);\n}\nvoid\
    \ main(){}"
  status: Exception
  stderr: 'core.exception.AssertError@/tmp/tmpev0f60w0.d(29): unittest failure

    ----------------

    ??:? _d_unittestp [0x4281dd]

    ??:? void tmpev0f60w0.__unittest_L20_C1() [0x427f4b]

    ??:? void tmpev0f60w0.__modtest() [0x427f60]

    ??:? int core.runtime.runModuleUnitTests().__foreachbody2(object.ModuleInfo*)
    [0x42c1c7]

    ??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)).__lambda2(immutable(object.ModuleInfo*))
    [0x42b05a]

    ??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))).__foreachbody2(ref
    rt.sections_elf_shared.DSO) [0x4301ed]

    ??:? int rt.sections_elf_shared.DSO.opApply(scope int delegate(ref rt.sections_elf_shared.DSO))
    [0x43069c]

    ??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*)))
    [0x430179]

    ??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)) [0x42b031]

    ??:? runModuleUnitTests [0x42bf9d]

    ??:? void rt.dmain2._d_run_main(int, char**, extern (C) int function(char[][])*).runAll()
    [0x42862c]

    ??:? void rt.dmain2._d_r'
  stdout: ''
  timestamp: 1660163090
- exit_code: 1
  program: "import std.typecons;\nimport std.math;\n/*\nReturn True if all numbers\
    \ in the list l are below threshold t.\n    >>> below_threshold([1L, 2L, 4L, 10L],\
    \ 100L)\n    true\n    >>> below_threshold([1L, 20L, 4L, 10L], 5L)\n    false\n\
    \    \n*/\nbool below_threshold(long[] l, long t) \n{\n    foreach(i; l)\n   \
    \ {\n        if(i > t)\n            return false;\n    }\n    return true;\n}\n\
    unittest\n{\n    alias candidate = below_threshold;\n\n    assert(candidate([1L,\
    \ 2L, 4L, 10L], 100L) == true);\n    assert(candidate([1L, 20L, 4L, 10L], 5L)\
    \ == false);\n    assert(candidate([1L, 20L, 4L, 10L], 21L) == true);\n    assert(candidate([1L,\
    \ 20L, 4L, 10L], 22L) == true);\n    assert(candidate([1L, 8L, 4L, 10L], 11L)\
    \ == true);\n    assert(candidate([1L, 8L, 4L, 10L], 10L) == false);\n}\nvoid\
    \ main(){}"
  status: Exception
  stderr: 'core.exception.AssertError@/tmp/tmpplk4ck84.d(29): unittest failure

    ----------------

    ??:? _d_unittestp [0x4281dd]

    ??:? void tmpplk4ck84.__unittest_L20_C1() [0x427f4b]

    ??:? void tmpplk4ck84.__modtest() [0x427f60]

    ??:? int core.runtime.runModuleUnitTests().__foreachbody2(object.ModuleInfo*)
    [0x42c1c7]

    ??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)).__lambda2(immutable(object.ModuleInfo*))
    [0x42b05a]

    ??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))).__foreachbody2(ref
    rt.sections_elf_shared.DSO) [0x4301ed]

    ??:? int rt.sections_elf_shared.DSO.opApply(scope int delegate(ref rt.sections_elf_shared.DSO))
    [0x43069c]

    ??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*)))
    [0x430179]

    ??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)) [0x42b031]

    ??:? runModuleUnitTests [0x42bf9d]

    ??:? void rt.dmain2._d_run_main(int, char**, extern (C) int function(char[][])*).runAll()
    [0x42862c]

    ??:? void rt.dmain2._d_r'
  stdout: ''
  timestamp: 1660163090
- exit_code: 1
  program: "import std.typecons;\nimport std.math;\n/*\nReturn True if all numbers\
    \ in the list l are below threshold t.\n    >>> below_threshold([1L, 2L, 4L, 10L],\
    \ 100L)\n    true\n    >>> below_threshold([1L, 20L, 4L, 10L], 5L)\n    false\n\
    \    \n*/\nbool below_threshold(long[] l, long t) \n{\n    foreach(i; l)\n   \
    \ {\n        if(i > t)\n            return false;\n    }\n    return true;\n}\n\
    unittest\n{\n    alias candidate = below_threshold;\n\n    assert(candidate([1L,\
    \ 2L, 4L, 10L], 100L) == true);\n    assert(candidate([1L, 20L, 4L, 10L], 5L)\
    \ == false);\n    assert(candidate([1L, 20L, 4L, 10L], 21L) == true);\n    assert(candidate([1L,\
    \ 20L, 4L, 10L], 22L) == true);\n    assert(candidate([1L, 8L, 4L, 10L], 11L)\
    \ == true);\n    assert(candidate([1L, 8L, 4L, 10L], 10L) == false);\n}\nvoid\
    \ main(){}"
  status: Exception
  stderr: 'core.exception.AssertError@/tmp/tmpplk4ck84.d(29): unittest failure

    ----------------

    ??:? _d_unittestp [0x4281dd]

    ??:? void tmpplk4ck84.__unittest_L20_C1() [0x427f4b]

    ??:? void tmpplk4ck84.__modtest() [0x427f60]

    ??:? int core.runtime.runModuleUnitTests().__foreachbody2(object.ModuleInfo*)
    [0x42c1c7]

    ??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)).__lambda2(immutable(object.ModuleInfo*))
    [0x42b05a]

    ??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))).__foreachbody2(ref
    rt.sections_elf_shared.DSO) [0x4301ed]

    ??:? int rt.sections_elf_shared.DSO.opApply(scope int delegate(ref rt.sections_elf_shared.DSO))
    [0x43069c]

    ??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*)))
    [0x430179]

    ??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)) [0x42b031]

    ??:? runModuleUnitTests [0x42bf9d]

    ??:? void rt.dmain2._d_run_main(int, char**, extern (C) int function(char[][])*).runAll()
    [0x42862c]

    ??:? void rt.dmain2._d_r'
  stdout: ''
  timestamp: 1660163090
- exit_code: 0
  program: "import std.typecons;\nimport std.math;\n/*\nReturn True if all numbers\
    \ in the list l are below threshold t.\n    >>> below_threshold([1L, 2L, 4L, 10L],\
    \ 100L)\n    true\n    >>> below_threshold([1L, 20L, 4L, 10L], 5L)\n    false\n\
    \    \n*/\nbool below_threshold(long[] l, long t) \n{\n    foreach(long i; l)\n\
    \    {\n        if(i >= t)\n            return false;\n    }\n    return true;\n\
    }\nunittest\n{\n    alias candidate = below_threshold;\n\n    assert(candidate([1L,\
    \ 2L, 4L, 10L], 100L) == true);\n    assert(candidate([1L, 20L, 4L, 10L], 5L)\
    \ == false);\n    assert(candidate([1L, 20L, 4L, 10L], 21L) == true);\n    assert(candidate([1L,\
    \ 20L, 4L, 10L], 22L) == true);\n    assert(candidate([1L, 8L, 4L, 10L], 11L)\
    \ == true);\n    assert(candidate([1L, 8L, 4L, 10L], 10L) == false);\n}\nvoid\
    \ main(){}"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660163090
- exit_code: 1
  program: "import std.typecons;\nimport std.math;\n/*\nReturn True if all numbers\
    \ in the list l are below threshold t.\n    >>> below_threshold([1L, 2L, 4L, 10L],\
    \ 100L)\n    true\n    >>> below_threshold([1L, 20L, 4L, 10L], 5L)\n    false\n\
    \    \n*/\nbool below_threshold(long[] l, long t) \n{\n    foreach(i; l)\n   \
    \ {\n        if(i > t)\n            return false;\n    }\n    return true;\n}\n\
    unittest\n{\n    alias candidate = below_threshold;\n\n    assert(candidate([1L,\
    \ 2L, 4L, 10L], 100L) == true);\n    assert(candidate([1L, 20L, 4L, 10L], 5L)\
    \ == false);\n    assert(candidate([1L, 20L, 4L, 10L], 21L) == true);\n    assert(candidate([1L,\
    \ 20L, 4L, 10L], 22L) == true);\n    assert(candidate([1L, 8L, 4L, 10L], 11L)\
    \ == true);\n    assert(candidate([1L, 8L, 4L, 10L], 10L) == false);\n}\nvoid\
    \ main(){}"
  status: Exception
  stderr: 'core.exception.AssertError@/tmp/tmpplk4ck84.d(29): unittest failure

    ----------------

    ??:? _d_unittestp [0x4281dd]

    ??:? void tmpplk4ck84.__unittest_L20_C1() [0x427f4b]

    ??:? void tmpplk4ck84.__modtest() [0x427f60]

    ??:? int core.runtime.runModuleUnitTests().__foreachbody2(object.ModuleInfo*)
    [0x42c1c7]

    ??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)).__lambda2(immutable(object.ModuleInfo*))
    [0x42b05a]

    ??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))).__foreachbody2(ref
    rt.sections_elf_shared.DSO) [0x4301ed]

    ??:? int rt.sections_elf_shared.DSO.opApply(scope int delegate(ref rt.sections_elf_shared.DSO))
    [0x43069c]

    ??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*)))
    [0x430179]

    ??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)) [0x42b031]

    ??:? runModuleUnitTests [0x42bf9d]

    ??:? void rt.dmain2._d_run_main(int, char**, extern (C) int function(char[][])*).runAll()
    [0x42862c]

    ??:? void rt.dmain2._d_r'
  stdout: ''
  timestamp: 1660163090
- exit_code: 1
  program: "import std.typecons;\nimport std.math;\n/*\nReturn True if all numbers\
    \ in the list l are below threshold t.\n    >>> below_threshold([1L, 2L, 4L, 10L],\
    \ 100L)\n    true\n    >>> below_threshold([1L, 20L, 4L, 10L], 5L)\n    false\n\
    \    \n*/\nbool below_threshold(long[] l, long t) \n{\n    foreach(long x; l)\n\
    \    {\n        if(x>t)\n            return false;\n    }\n    return true;\n\
    }\n/*\nReturn True if all numbers in the list l are below threshold t.\n    >>>\
    \ below_threshold([1L, 2L, 4L, 10L], 100L)\n    true\n    >>> below_threshold([1L,\
    \ 20L, 4L, 10L], 5L)\n    false\n    \n*/\nunittest\n{\n    alias candidate =\
    \ below_threshold;\n\n    assert(candidate([1L, 2L, 4L, 10L], 100L) == true);\n\
    \    assert(candidate([1L, 20L, 4L, 10L], 5L) == false);\n    assert(candidate([1L,\
    \ 20L, 4L, 10L], 21L) == true);\n    assert(candidate([1L, 20L, 4L, 10L], 22L)\
    \ == true);\n    assert(candidate([1L, 8L, 4L, 10L], 11L) == true);\n    assert(candidate([1L,\
    \ 8L, 4L, 10L], 10L) == false);\n}\nvoid main(){}"
  status: Exception
  stderr: 'core.exception.AssertError@/tmp/tmp4dlz1_k2.d(37): unittest failure

    ----------------

    ??:? _d_unittestp [0x4281dd]

    ??:? void tmp4dlz1_k2.__unittest_L28_C1() [0x427f4b]

    ??:? void tmp4dlz1_k2.__modtest() [0x427f60]

    ??:? int core.runtime.runModuleUnitTests().__foreachbody2(object.ModuleInfo*)
    [0x42c1c7]

    ??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)).__lambda2(immutable(object.ModuleInfo*))
    [0x42b05a]

    ??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))).__foreachbody2(ref
    rt.sections_elf_shared.DSO) [0x4301ed]

    ??:? int rt.sections_elf_shared.DSO.opApply(scope int delegate(ref rt.sections_elf_shared.DSO))
    [0x43069c]

    ??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*)))
    [0x430179]

    ??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)) [0x42b031]

    ??:? runModuleUnitTests [0x42bf9d]

    ??:? void rt.dmain2._d_run_main(int, char**, extern (C) int function(char[][])*).runAll()
    [0x42862c]

    ??:? void rt.dmain2._d_r'
  stdout: ''
  timestamp: 1660163090
- exit_code: 1
  program: "import std.typecons;\nimport std.math;\n/*\nReturn True if all numbers\
    \ in the list l are below threshold t.\n    >>> below_threshold([1L, 2L, 4L, 10L],\
    \ 100L)\n    true\n    >>> below_threshold([1L, 20L, 4L, 10L], 5L)\n    false\n\
    \    \n*/\nbool below_threshold(long[] l, long t) \n{\n    foreach(i; l)\n   \
    \ {\n        if(i > t)\n            return false;\n    }\n    return true;\n}\n\
    unittest\n{\n    alias candidate = below_threshold;\n\n    assert(candidate([1L,\
    \ 2L, 4L, 10L], 100L) == true);\n    assert(candidate([1L, 20L, 4L, 10L], 5L)\
    \ == false);\n    assert(candidate([1L, 20L, 4L, 10L], 21L) == true);\n    assert(candidate([1L,\
    \ 20L, 4L, 10L], 22L) == true);\n    assert(candidate([1L, 8L, 4L, 10L], 11L)\
    \ == true);\n    assert(candidate([1L, 8L, 4L, 10L], 10L) == false);\n}\nvoid\
    \ main(){}"
  status: Exception
  stderr: 'core.exception.AssertError@/tmp/tmpplk4ck84.d(29): unittest failure

    ----------------

    ??:? _d_unittestp [0x4281dd]

    ??:? void tmpplk4ck84.__unittest_L20_C1() [0x427f4b]

    ??:? void tmpplk4ck84.__modtest() [0x427f60]

    ??:? int core.runtime.runModuleUnitTests().__foreachbody2(object.ModuleInfo*)
    [0x42c1c7]

    ??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)).__lambda2(immutable(object.ModuleInfo*))
    [0x42b05a]

    ??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))).__foreachbody2(ref
    rt.sections_elf_shared.DSO) [0x4301ed]

    ??:? int rt.sections_elf_shared.DSO.opApply(scope int delegate(ref rt.sections_elf_shared.DSO))
    [0x43069c]

    ??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*)))
    [0x430179]

    ??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)) [0x42b031]

    ??:? runModuleUnitTests [0x42bf9d]

    ??:? void rt.dmain2._d_run_main(int, char**, extern (C) int function(char[][])*).runAll()
    [0x42862c]

    ??:? void rt.dmain2._d_r'
  stdout: ''
  timestamp: 1660163090
- exit_code: 1
  program: "import std.typecons;\nimport std.math;\n/*\nReturn True if all numbers\
    \ in the list l are below threshold t.\n    >>> below_threshold([1L, 2L, 4L, 10L],\
    \ 100L)\n    true\n    >>> below_threshold([1L, 20L, 4L, 10L], 5L)\n    false\n\
    \    \n*/\nbool below_threshold(long[] l, long t) \n{\n    return all!(a => a\
    \ < t)(l);\n}\nunittest\n{\n    alias candidate = below_threshold;\n\n    assert(candidate([1L,\
    \ 2L, 4L, 10L], 100L) == true);\n    assert(candidate([1L, 20L, 4L, 10L], 5L)\
    \ == false);\n    assert(candidate([1L, 20L, 4L, 10L], 21L) == true);\n    assert(candidate([1L,\
    \ 20L, 4L, 10L], 22L) == true);\n    assert(candidate([1L, 8L, 4L, 10L], 11L)\
    \ == true);\n    assert(candidate([1L, 8L, 4L, 10L], 10L) == false);\n}\nvoid\
    \ main(){}"
  status: SyntaxError
  stderr: '/tmp/tmptnstknbe.d(13): Error: template instance `all!((a) => a < t)` template
    `all` is not defined

    Failed: ["dmd", "-unittest", "-v", "-o-", "/tmp/tmptnstknbe.d", "-I/tmp"]

    '
  stdout: ''
  timestamp: 1660163090
- exit_code: 0
  program: "import std.typecons;\nimport std.math;\n/*\nReturn True if all numbers\
    \ in the list l are below threshold t.\n    >>> below_threshold([1L, 2L, 4L, 10L],\
    \ 100L)\n    true\n    >>> below_threshold([1L, 20L, 4L, 10L], 5L)\n    false\n\
    \    \n*/\nbool below_threshold(long[] l, long t) \n{\n    foreach(long x; l)\n\
    \    {\n        if(x >= t)\n            return false;\n    }\n    return true;\n\
    }\nunittest\n{\n    alias candidate = below_threshold;\n\n    assert(candidate([1L,\
    \ 2L, 4L, 10L], 100L) == true);\n    assert(candidate([1L, 20L, 4L, 10L], 5L)\
    \ == false);\n    assert(candidate([1L, 20L, 4L, 10L], 21L) == true);\n    assert(candidate([1L,\
    \ 20L, 4L, 10L], 22L) == true);\n    assert(candidate([1L, 8L, 4L, 10L], 11L)\
    \ == true);\n    assert(candidate([1L, 8L, 4L, 10L], 10L) == false);\n}\nvoid\
    \ main(){}"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660163090
- exit_code: 1
  program: "import std.typecons;\nimport std.math;\n/*\nReturn True if all numbers\
    \ in the list l are below threshold t.\n    >>> below_threshold([1L, 2L, 4L, 10L],\
    \ 100L)\n    true\n    >>> below_threshold([1L, 20L, 4L, 10L], 5L)\n    false\n\
    \    \n*/\nbool below_threshold(long[] l, long t) \n{\n    foreach(i; l)\n   \
    \ {\n        if(i > t)\n            return false;\n    }\n    return true;\n}\n\
    unittest\n{\n    alias candidate = below_threshold;\n\n    assert(candidate([1L,\
    \ 2L, 4L, 10L], 100L) == true);\n    assert(candidate([1L, 20L, 4L, 10L], 5L)\
    \ == false);\n    assert(candidate([1L, 20L, 4L, 10L], 21L) == true);\n    assert(candidate([1L,\
    \ 20L, 4L, 10L], 22L) == true);\n    assert(candidate([1L, 8L, 4L, 10L], 11L)\
    \ == true);\n    assert(candidate([1L, 8L, 4L, 10L], 10L) == false);\n}\nvoid\
    \ main(){}"
  status: Exception
  stderr: 'core.exception.AssertError@/tmp/tmpplk4ck84.d(29): unittest failure

    ----------------

    ??:? _d_unittestp [0x4281dd]

    ??:? void tmpplk4ck84.__unittest_L20_C1() [0x427f4b]

    ??:? void tmpplk4ck84.__modtest() [0x427f60]

    ??:? int core.runtime.runModuleUnitTests().__foreachbody2(object.ModuleInfo*)
    [0x42c1c7]

    ??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)).__lambda2(immutable(object.ModuleInfo*))
    [0x42b05a]

    ??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))).__foreachbody2(ref
    rt.sections_elf_shared.DSO) [0x4301ed]

    ??:? int rt.sections_elf_shared.DSO.opApply(scope int delegate(ref rt.sections_elf_shared.DSO))
    [0x43069c]

    ??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*)))
    [0x430179]

    ??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)) [0x42b031]

    ??:? runModuleUnitTests [0x42bf9d]

    ??:? void rt.dmain2._d_run_main(int, char**, extern (C) int function(char[][])*).runAll()
    [0x42862c]

    ??:? void rt.dmain2._d_r'
  stdout: ''
  timestamp: 1660163090
- exit_code: 0
  program: "import std.typecons;\nimport std.math;\n/*\nReturn True if all numbers\
    \ in the list l are below threshold t.\n    >>> below_threshold([1L, 2L, 4L, 10L],\
    \ 100L)\n    true\n    >>> below_threshold([1L, 20L, 4L, 10L], 5L)\n    false\n\
    \    \n*/\nbool below_threshold(long[] l, long t) \n{\n    foreach(long i; l)\n\
    \    {\n        if(i >= t)\n            return false;\n    }\n    return true;\n\
    }\nunittest\n{\n    alias candidate = below_threshold;\n\n    assert(candidate([1L,\
    \ 2L, 4L, 10L], 100L) == true);\n    assert(candidate([1L, 20L, 4L, 10L], 5L)\
    \ == false);\n    assert(candidate([1L, 20L, 4L, 10L], 21L) == true);\n    assert(candidate([1L,\
    \ 20L, 4L, 10L], 22L) == true);\n    assert(candidate([1L, 8L, 4L, 10L], 11L)\
    \ == true);\n    assert(candidate([1L, 8L, 4L, 10L], 10L) == false);\n}\nvoid\
    \ main(){}"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660163090
- exit_code: 1
  program: "import std.typecons;\nimport std.math;\n/*\nReturn True if all numbers\
    \ in the list l are below threshold t.\n    >>> below_threshold([1L, 2L, 4L, 10L],\
    \ 100L)\n    true\n    >>> below_threshold([1L, 20L, 4L, 10L], 5L)\n    false\n\
    \    \n*/\nbool below_threshold(long[] l, long t) \n{\n    foreach(i; l)\n   \
    \ {\n        if(i > t)\n            return false;\n    }\n    return true;\n}\n\
    unittest\n{\n    alias candidate = below_threshold;\n\n    assert(candidate([1L,\
    \ 2L, 4L, 10L], 100L) == true);\n    assert(candidate([1L, 20L, 4L, 10L], 5L)\
    \ == false);\n    assert(candidate([1L, 20L, 4L, 10L], 21L) == true);\n    assert(candidate([1L,\
    \ 20L, 4L, 10L], 22L) == true);\n    assert(candidate([1L, 8L, 4L, 10L], 11L)\
    \ == true);\n    assert(candidate([1L, 8L, 4L, 10L], 10L) == false);\n}\nvoid\
    \ main(){}"
  status: Exception
  stderr: 'core.exception.AssertError@/tmp/tmpplk4ck84.d(29): unittest failure

    ----------------

    ??:? _d_unittestp [0x4281dd]

    ??:? void tmpplk4ck84.__unittest_L20_C1() [0x427f4b]

    ??:? void tmpplk4ck84.__modtest() [0x427f60]

    ??:? int core.runtime.runModuleUnitTests().__foreachbody2(object.ModuleInfo*)
    [0x42c1c7]

    ??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)).__lambda2(immutable(object.ModuleInfo*))
    [0x42b05a]

    ??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))).__foreachbody2(ref
    rt.sections_elf_shared.DSO) [0x4301ed]

    ??:? int rt.sections_elf_shared.DSO.opApply(scope int delegate(ref rt.sections_elf_shared.DSO))
    [0x43069c]

    ??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*)))
    [0x430179]

    ??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)) [0x42b031]

    ??:? runModuleUnitTests [0x42bf9d]

    ??:? void rt.dmain2._d_run_main(int, char**, extern (C) int function(char[][])*).runAll()
    [0x42862c]

    ??:? void rt.dmain2._d_r'
  stdout: ''
  timestamp: 1660163090
- exit_code: 1
  program: "import std.typecons;\nimport std.math;\n/*\nReturn True if all numbers\
    \ in the list l are below threshold t.\n    >>> below_threshold([1L, 2L, 4L, 10L],\
    \ 100L)\n    true\n    >>> below_threshold([1L, 20L, 4L, 10L], 5L)\n    false\n\
    \    \n*/\nbool below_threshold(long[] l, long t) \n{\n    foreach(i; l)\n   \
    \ {\n        if(i > t)\n            return false;\n    }\n    return true;\n}\n\
    unittest\n{\n    alias candidate = below_threshold;\n\n    assert(candidate([1L,\
    \ 2L, 4L, 10L], 100L) == true);\n    assert(candidate([1L, 20L, 4L, 10L], 5L)\
    \ == false);\n    assert(candidate([1L, 20L, 4L, 10L], 21L) == true);\n    assert(candidate([1L,\
    \ 20L, 4L, 10L], 22L) == true);\n    assert(candidate([1L, 8L, 4L, 10L], 11L)\
    \ == true);\n    assert(candidate([1L, 8L, 4L, 10L], 10L) == false);\n}\nvoid\
    \ main(){}"
  status: Exception
  stderr: 'core.exception.AssertError@/tmp/tmpplk4ck84.d(29): unittest failure

    ----------------

    ??:? _d_unittestp [0x4281dd]

    ??:? void tmpplk4ck84.__unittest_L20_C1() [0x427f4b]

    ??:? void tmpplk4ck84.__modtest() [0x427f60]

    ??:? int core.runtime.runModuleUnitTests().__foreachbody2(object.ModuleInfo*)
    [0x42c1c7]

    ??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)).__lambda2(immutable(object.ModuleInfo*))
    [0x42b05a]

    ??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))).__foreachbody2(ref
    rt.sections_elf_shared.DSO) [0x4301ed]

    ??:? int rt.sections_elf_shared.DSO.opApply(scope int delegate(ref rt.sections_elf_shared.DSO))
    [0x43069c]

    ??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*)))
    [0x430179]

    ??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)) [0x42b031]

    ??:? runModuleUnitTests [0x42bf9d]

    ??:? void rt.dmain2._d_run_main(int, char**, extern (C) int function(char[][])*).runAll()
    [0x42862c]

    ??:? void rt.dmain2._d_r'
  stdout: ''
  timestamp: 1660163090
- exit_code: 1
  program: "import std.typecons;\nimport std.math;\n/*\nReturn True if all numbers\
    \ in the list l are below threshold t.\n    >>> below_threshold([1L, 2L, 4L, 10L],\
    \ 100L)\n    true\n    >>> below_threshold([1L, 20L, 4L, 10L], 5L)\n    false\n\
    \    \n*/\nbool below_threshold(long[] l, long t) \n{\n    foreach(long i; l)\n\
    \    {\n        if(i > t)\n            return false;\n    }\n    return true;\n\
    }\n/*\nReturn True if all numbers in the list l are below threshold t.\n    >>>\
    \ below_threshold([1L, 2L, 4L, 10L], 100L)\n    true\n    >>> below_threshold([1L,\
    \ 20L, 4L, 10L], 5L)\n    false\n    \n*/\nunittest\n{\n    alias candidate =\
    \ below_threshold;\n\n    assert(candidate([1L, 2L, 4L, 10L], 100L) == true);\n\
    \    assert(candidate([1L, 20L, 4L, 10L], 5L) == false);\n    assert(candidate([1L,\
    \ 20L, 4L, 10L], 21L) == true);\n    assert(candidate([1L, 20L, 4L, 10L], 22L)\
    \ == true);\n    assert(candidate([1L, 8L, 4L, 10L], 11L) == true);\n    assert(candidate([1L,\
    \ 8L, 4L, 10L], 10L) == false);\n}\nvoid main(){}"
  status: Exception
  stderr: 'core.exception.AssertError@/tmp/tmp_kfz1oq0.d(37): unittest failure

    ----------------

    ??:? _d_unittestp [0x4281dd]

    ??:? void tmp_kfz1oq0.__unittest_L28_C1() [0x427f4b]

    ??:? void tmp_kfz1oq0.__modtest() [0x427f60]

    ??:? int core.runtime.runModuleUnitTests().__foreachbody2(object.ModuleInfo*)
    [0x42c1c7]

    ??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)).__lambda2(immutable(object.ModuleInfo*))
    [0x42b05a]

    ??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))).__foreachbody2(ref
    rt.sections_elf_shared.DSO) [0x4301ed]

    ??:? int rt.sections_elf_shared.DSO.opApply(scope int delegate(ref rt.sections_elf_shared.DSO))
    [0x43069c]

    ??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*)))
    [0x430179]

    ??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)) [0x42b031]

    ??:? runModuleUnitTests [0x42bf9d]

    ??:? void rt.dmain2._d_run_main(int, char**, extern (C) int function(char[][])*).runAll()
    [0x42862c]

    ??:? void rt.dmain2._d_r'
  stdout: ''
  timestamp: 1660163090
- exit_code: 1
  program: "import std.typecons;\nimport std.math;\n/*\nReturn True if all numbers\
    \ in the list l are below threshold t.\n    >>> below_threshold([1L, 2L, 4L, 10L],\
    \ 100L)\n    true\n    >>> below_threshold([1L, 20L, 4L, 10L], 5L)\n    false\n\
    \    \n*/\nbool below_threshold(long[] l, long t) \n{\n    foreach(i; l)\n   \
    \ {\n        if(i > t)\n            return false;\n    }\n    return true;\n}\n\
    unittest\n{\n    alias candidate = below_threshold;\n\n    assert(candidate([1L,\
    \ 2L, 4L, 10L], 100L) == true);\n    assert(candidate([1L, 20L, 4L, 10L], 5L)\
    \ == false);\n    assert(candidate([1L, 20L, 4L, 10L], 21L) == true);\n    assert(candidate([1L,\
    \ 20L, 4L, 10L], 22L) == true);\n    assert(candidate([1L, 8L, 4L, 10L], 11L)\
    \ == true);\n    assert(candidate([1L, 8L, 4L, 10L], 10L) == false);\n}\nvoid\
    \ main(){}"
  status: Exception
  stderr: 'core.exception.AssertError@/tmp/tmpplk4ck84.d(29): unittest failure

    ----------------

    ??:? _d_unittestp [0x4281dd]

    ??:? void tmpplk4ck84.__unittest_L20_C1() [0x427f4b]

    ??:? void tmpplk4ck84.__modtest() [0x427f60]

    ??:? int core.runtime.runModuleUnitTests().__foreachbody2(object.ModuleInfo*)
    [0x42c1c7]

    ??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)).__lambda2(immutable(object.ModuleInfo*))
    [0x42b05a]

    ??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))).__foreachbody2(ref
    rt.sections_elf_shared.DSO) [0x4301ed]

    ??:? int rt.sections_elf_shared.DSO.opApply(scope int delegate(ref rt.sections_elf_shared.DSO))
    [0x43069c]

    ??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*)))
    [0x430179]

    ??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)) [0x42b031]

    ??:? runModuleUnitTests [0x42bf9d]

    ??:? void rt.dmain2._d_run_main(int, char**, extern (C) int function(char[][])*).runAll()
    [0x42862c]

    ??:? void rt.dmain2._d_r'
  stdout: ''
  timestamp: 1660163090
- exit_code: 1
  program: "import std.typecons;\nimport std.math;\n/*\nReturn True if all numbers\
    \ in the list l are below threshold t.\n    >>> below_threshold([1L, 2L, 4L, 10L],\
    \ 100L)\n    true\n    >>> below_threshold([1L, 20L, 4L, 10L], 5L)\n    false\n\
    \    \n*/\nbool below_threshold(long[] l, long t) \n{\n    foreach(i; l)\n   \
    \ {\n        if(i > t)\n            return false;\n    }\n    return true;\n}\n\
    unittest\n{\n    alias candidate = below_threshold;\n\n    assert(candidate([1L,\
    \ 2L, 4L, 10L], 100L) == true);\n    assert(candidate([1L, 20L, 4L, 10L], 5L)\
    \ == false);\n    assert(candidate([1L, 20L, 4L, 10L], 21L) == true);\n    assert(candidate([1L,\
    \ 20L, 4L, 10L], 22L) == true);\n    assert(candidate([1L, 8L, 4L, 10L], 11L)\
    \ == true);\n    assert(candidate([1L, 8L, 4L, 10L], 10L) == false);\n}\nvoid\
    \ main(){}"
  status: Exception
  stderr: 'core.exception.AssertError@/tmp/tmpplk4ck84.d(29): unittest failure

    ----------------

    ??:? _d_unittestp [0x4281dd]

    ??:? void tmpplk4ck84.__unittest_L20_C1() [0x427f4b]

    ??:? void tmpplk4ck84.__modtest() [0x427f60]

    ??:? int core.runtime.runModuleUnitTests().__foreachbody2(object.ModuleInfo*)
    [0x42c1c7]

    ??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)).__lambda2(immutable(object.ModuleInfo*))
    [0x42b05a]

    ??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))).__foreachbody2(ref
    rt.sections_elf_shared.DSO) [0x4301ed]

    ??:? int rt.sections_elf_shared.DSO.opApply(scope int delegate(ref rt.sections_elf_shared.DSO))
    [0x43069c]

    ??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*)))
    [0x430179]

    ??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)) [0x42b031]

    ??:? runModuleUnitTests [0x42bf9d]

    ??:? void rt.dmain2._d_run_main(int, char**, extern (C) int function(char[][])*).runAll()
    [0x42862c]

    ??:? void rt.dmain2._d_r'
  stdout: ''
  timestamp: 1660163090
- exit_code: 1
  program: "import std.typecons;\nimport std.math;\n/*\nReturn True if all numbers\
    \ in the list l are below threshold t.\n    >>> below_threshold([1L, 2L, 4L, 10L],\
    \ 100L)\n    true\n    >>> below_threshold([1L, 20L, 4L, 10L], 5L)\n    false\n\
    \    \n*/\nbool below_threshold(long[] l, long t) \n{\n    foreach(long i; l)\n\
    \    {\n        if(i > t)\n            return false;\n    }\n    return true;\n\
    }\n/*\nReturn True if all numbers in the list l are below threshold t.\n    >>>\
    \ below_threshold([1L, 2L, 4L, 10L], 100L)\n    true\n    >>> below_threshold([1L,\
    \ 20L, 4L, 10L], 5L)\n    false\n    \n*/\nunittest\n{\n    alias candidate =\
    \ below_threshold;\n\n    assert(candidate([1L, 2L, 4L, 10L], 100L) == true);\n\
    \    assert(candidate([1L, 20L, 4L, 10L], 5L) == false);\n    assert(candidate([1L,\
    \ 20L, 4L, 10L], 21L) == true);\n    assert(candidate([1L, 20L, 4L, 10L], 22L)\
    \ == true);\n    assert(candidate([1L, 8L, 4L, 10L], 11L) == true);\n    assert(candidate([1L,\
    \ 8L, 4L, 10L], 10L) == false);\n}\nvoid main(){}"
  status: Exception
  stderr: 'core.exception.AssertError@/tmp/tmp_kfz1oq0.d(37): unittest failure

    ----------------

    ??:? _d_unittestp [0x4281dd]

    ??:? void tmp_kfz1oq0.__unittest_L28_C1() [0x427f4b]

    ??:? void tmp_kfz1oq0.__modtest() [0x427f60]

    ??:? int core.runtime.runModuleUnitTests().__foreachbody2(object.ModuleInfo*)
    [0x42c1c7]

    ??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)).__lambda2(immutable(object.ModuleInfo*))
    [0x42b05a]

    ??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))).__foreachbody2(ref
    rt.sections_elf_shared.DSO) [0x4301ed]

    ??:? int rt.sections_elf_shared.DSO.opApply(scope int delegate(ref rt.sections_elf_shared.DSO))
    [0x43069c]

    ??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*)))
    [0x430179]

    ??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)) [0x42b031]

    ??:? runModuleUnitTests [0x42bf9d]

    ??:? void rt.dmain2._d_run_main(int, char**, extern (C) int function(char[][])*).runAll()
    [0x42862c]

    ??:? void rt.dmain2._d_r'
  stdout: ''
  timestamp: 1660163090
- exit_code: 0
  program: "import std.typecons;\nimport std.math;\n/*\nReturn True if all numbers\
    \ in the list l are below threshold t.\n    >>> below_threshold([1L, 2L, 4L, 10L],\
    \ 100L)\n    true\n    >>> below_threshold([1L, 20L, 4L, 10L], 5L)\n    false\n\
    \    \n*/\nbool below_threshold(long[] l, long t) \n{\n    foreach(x; l)\n   \
    \ {\n        if(x >= t)\n            return false;\n    }\n    return true;\n\
    }\nunittest\n{\n    alias candidate = below_threshold;\n\n    assert(candidate([1L,\
    \ 2L, 4L, 10L], 100L) == true);\n    assert(candidate([1L, 20L, 4L, 10L], 5L)\
    \ == false);\n    assert(candidate([1L, 20L, 4L, 10L], 21L) == true);\n    assert(candidate([1L,\
    \ 20L, 4L, 10L], 22L) == true);\n    assert(candidate([1L, 8L, 4L, 10L], 11L)\
    \ == true);\n    assert(candidate([1L, 8L, 4L, 10L], 10L) == false);\n}\nvoid\
    \ main(){}"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660163090
- exit_code: 1
  program: "import std.typecons;\nimport std.math;\n/*\nReturn True if all numbers\
    \ in the list l are below threshold t.\n    >>> below_threshold([1L, 2L, 4L, 10L],\
    \ 100L)\n    true\n    >>> below_threshold([1L, 20L, 4L, 10L], 5L)\n    false\n\
    \    \n*/\nbool below_threshold(long[] l, long t) \n{\n    foreach(i; l)\n   \
    \ {\n        if(i > t)\n            return false;\n    }\n    return true;\n}\n\
    /*\nReturn the number of elements in the list l that are below threshold t.\n\
    \    >>> count_below_threshold([1L, 2L, 4L, 10L], 100L)\n    4\n    >>> count_below_threshold([1L,\
    \ 20L, 4L, 10L], 5L)\n    2\n*/\nlong count_below_threshold(long[] l, long t)\
    \ \n{\n    long count = 0;\n    foreach(i; l)\n    {\n        if(i < t)\n    \
    \        count++;\n    }\n    return count;\n}\n/*\nReturn the number of elements\
    \ in the list l that are below threshold t.\n    >>> count_below_threshold([1L,\
    \ 2L, 4L, 10L], 100L)\n    4\n    >>> count_below_threshold([1L, 20L, 4L, 10L],\
    \ 5L)\n    2\n*/\nlong count_below_threshold2(long[] l, long t) \n{\n    long\
    \ count = 0;\n    foreach(i; l)\n    {\n        if(i < t)\n            count++;\n\
    \    }\n    return count;\n}\n/*\nReturn the number of elements in the list l\
    \ that are below threshold t.\n    >>> count_below_threshold([1L, 2L, 4L, 10L],\
    \ 100L)\n    4\n    >>> count_below_threshold([1L, 20L, 4L, 10L], 5L)\n    2\n\
    */\nlong count_below_threshold3(long[] l, long t) \n{\n    long count = 0;\n \
    \   foreach(i; l)\n    {\n        if(i < t)\n            count++;\n    }\n   \
    \ return count;\n}\n/*\nReturn the number of elements in the list l that are below\
    \ threshold t.\n    >>> count_below_threshold([1L, 2L, 4L, 10L], 100L)\n    4\n\
    \    >>> count_below_threshold([1L, 20L, 4L,\nunittest\n{\n    alias candidate\
    \ = below_threshold;\n\n    assert(candidate([1L, 2L, 4L, 10L], 100L) == true);\n\
    \    assert(candidate([1L, 20L, 4L, 10L], 5L) == false);\n    assert(candidate([1L,\
    \ 20L, 4L, 10L], 21L) == true);\n    assert(candidate([1L, 20L, 4L, 10L], 22L)\
    \ == true);\n    assert(candidate([1L, 8L, 4L, 10L], 11L) == true);\n    assert(candidate([1L,\
    \ 8L, 4L, 10L], 10L) == false);\n}\nvoid main(){}"
  status: SyntaxError
  stderr: '/tmp/tmp5hu96zhc.d(71): Error: unterminated /* */ comment

    Failed: ["dmd", "-unittest", "-v", "-o-", "/tmp/tmp5hu96zhc.d", "-I/tmp"]

    '
  stdout: ''
  timestamp: 1660163090
- exit_code: 1
  program: "import std.typecons;\nimport std.math;\n/*\nReturn True if all numbers\
    \ in the list l are below threshold t.\n    >>> below_threshold([1L, 2L, 4L, 10L],\
    \ 100L)\n    true\n    >>> below_threshold([1L, 20L, 4L, 10L], 5L)\n    false\n\
    \    \n*/\nbool below_threshold(long[] l, long t) \n{\n    foreach(long i; l)\n\
    \    {\n        if(i > t)\n            return false;\n    }\n    return true;\n\
    }\nunittest\n{\n    alias candidate = below_threshold;\n\n    assert(candidate([1L,\
    \ 2L, 4L, 10L], 100L) == true);\n    assert(candidate([1L, 20L, 4L, 10L], 5L)\
    \ == false);\n    assert(candidate([1L, 20L, 4L, 10L], 21L) == true);\n    assert(candidate([1L,\
    \ 20L, 4L, 10L], 22L) == true);\n    assert(candidate([1L, 8L, 4L, 10L], 11L)\
    \ == true);\n    assert(candidate([1L, 8L, 4L, 10L], 10L) == false);\n}\nvoid\
    \ main(){}"
  status: Exception
  stderr: 'core.exception.AssertError@/tmp/tmpev0f60w0.d(29): unittest failure

    ----------------

    ??:? _d_unittestp [0x4281dd]

    ??:? void tmpev0f60w0.__unittest_L20_C1() [0x427f4b]

    ??:? void tmpev0f60w0.__modtest() [0x427f60]

    ??:? int core.runtime.runModuleUnitTests().__foreachbody2(object.ModuleInfo*)
    [0x42c1c7]

    ??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)).__lambda2(immutable(object.ModuleInfo*))
    [0x42b05a]

    ??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))).__foreachbody2(ref
    rt.sections_elf_shared.DSO) [0x4301ed]

    ??:? int rt.sections_elf_shared.DSO.opApply(scope int delegate(ref rt.sections_elf_shared.DSO))
    [0x43069c]

    ??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*)))
    [0x430179]

    ??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)) [0x42b031]

    ??:? runModuleUnitTests [0x42bf9d]

    ??:? void rt.dmain2._d_run_main(int, char**, extern (C) int function(char[][])*).runAll()
    [0x42862c]

    ??:? void rt.dmain2._d_r'
  stdout: ''
  timestamp: 1660163090
- exit_code: 1
  program: "import std.typecons;\nimport std.math;\n/*\nReturn True if all numbers\
    \ in the list l are below threshold t.\n    >>> below_threshold([1L, 2L, 4L, 10L],\
    \ 100L)\n    true\n    >>> below_threshold([1L, 20L, 4L, 10L], 5L)\n    false\n\
    \    \n*/\nbool below_threshold(long[] l, long t) \n{\n    foreach(x; l)\n   \
    \ {\n        if(x > t)\n            return false;\n    }\n    return true;\n}\n\
    unittest\n{\n    alias candidate = below_threshold;\n\n    assert(candidate([1L,\
    \ 2L, 4L, 10L], 100L) == true);\n    assert(candidate([1L, 20L, 4L, 10L], 5L)\
    \ == false);\n    assert(candidate([1L, 20L, 4L, 10L], 21L) == true);\n    assert(candidate([1L,\
    \ 20L, 4L, 10L], 22L) == true);\n    assert(candidate([1L, 8L, 4L, 10L], 11L)\
    \ == true);\n    assert(candidate([1L, 8L, 4L, 10L], 10L) == false);\n}\nvoid\
    \ main(){}"
  status: Exception
  stderr: 'core.exception.AssertError@/tmp/tmpdjy3v7wo.d(29): unittest failure

    ----------------

    ??:? _d_unittestp [0x4281dd]

    ??:? void tmpdjy3v7wo.__unittest_L20_C1() [0x427f4b]

    ??:? void tmpdjy3v7wo.__modtest() [0x427f60]

    ??:? int core.runtime.runModuleUnitTests().__foreachbody2(object.ModuleInfo*)
    [0x42c1c7]

    ??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)).__lambda2(immutable(object.ModuleInfo*))
    [0x42b05a]

    ??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))).__foreachbody2(ref
    rt.sections_elf_shared.DSO) [0x4301ed]

    ??:? int rt.sections_elf_shared.DSO.opApply(scope int delegate(ref rt.sections_elf_shared.DSO))
    [0x43069c]

    ??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*)))
    [0x430179]

    ??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)) [0x42b031]

    ??:? runModuleUnitTests [0x42bf9d]

    ??:? void rt.dmain2._d_run_main(int, char**, extern (C) int function(char[][])*).runAll()
    [0x42862c]

    ??:? void rt.dmain2._d_r'
  stdout: ''
  timestamp: 1660163090
- exit_code: 0
  program: "import std.typecons;\nimport std.math;\n/*\nReturn True if all numbers\
    \ in the list l are below threshold t.\n    >>> below_threshold([1L, 2L, 4L, 10L],\
    \ 100L)\n    true\n    >>> below_threshold([1L, 20L, 4L, 10L], 5L)\n    false\n\
    \    \n*/\nbool below_threshold(long[] l, long t) \n{\n    foreach(i; l)\n   \
    \ {\n        if(i >= t)\n            return false;\n    }\n    return true;\n\
    }\nunittest\n{\n    alias candidate = below_threshold;\n\n    assert(candidate([1L,\
    \ 2L, 4L, 10L], 100L) == true);\n    assert(candidate([1L, 20L, 4L, 10L], 5L)\
    \ == false);\n    assert(candidate([1L, 20L, 4L, 10L], 21L) == true);\n    assert(candidate([1L,\
    \ 20L, 4L, 10L], 22L) == true);\n    assert(candidate([1L, 8L, 4L, 10L], 11L)\
    \ == true);\n    assert(candidate([1L, 8L, 4L, 10L], 10L) == false);\n}\nvoid\
    \ main(){}"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660163090
- exit_code: 1
  program: "import std.typecons;\nimport std.math;\n/*\nReturn True if all numbers\
    \ in the list l are below threshold t.\n    >>> below_threshold([1L, 2L, 4L, 10L],\
    \ 100L)\n    true\n    >>> below_threshold([1L, 20L, 4L, 10L], 5L)\n    false\n\
    \    \n*/\nbool below_threshold(long[] l, long t) \n{\n    foreach(long i; l)\n\
    \    {\n        if(i > t)\n            return false;\n    }\n    return true;\n\
    }\nunittest\n{\n    alias candidate = below_threshold;\n\n    assert(candidate([1L,\
    \ 2L, 4L, 10L], 100L) == true);\n    assert(candidate([1L, 20L, 4L, 10L], 5L)\
    \ == false);\n    assert(candidate([1L, 20L, 4L, 10L], 21L) == true);\n    assert(candidate([1L,\
    \ 20L, 4L, 10L], 22L) == true);\n    assert(candidate([1L, 8L, 4L, 10L], 11L)\
    \ == true);\n    assert(candidate([1L, 8L, 4L, 10L], 10L) == false);\n}\nvoid\
    \ main(){}"
  status: Exception
  stderr: 'core.exception.AssertError@/tmp/tmpev0f60w0.d(29): unittest failure

    ----------------

    ??:? _d_unittestp [0x4281dd]

    ??:? void tmpev0f60w0.__unittest_L20_C1() [0x427f4b]

    ??:? void tmpev0f60w0.__modtest() [0x427f60]

    ??:? int core.runtime.runModuleUnitTests().__foreachbody2(object.ModuleInfo*)
    [0x42c1c7]

    ??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)).__lambda2(immutable(object.ModuleInfo*))
    [0x42b05a]

    ??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))).__foreachbody2(ref
    rt.sections_elf_shared.DSO) [0x4301ed]

    ??:? int rt.sections_elf_shared.DSO.opApply(scope int delegate(ref rt.sections_elf_shared.DSO))
    [0x43069c]

    ??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*)))
    [0x430179]

    ??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)) [0x42b031]

    ??:? runModuleUnitTests [0x42bf9d]

    ??:? void rt.dmain2._d_run_main(int, char**, extern (C) int function(char[][])*).runAll()
    [0x42862c]

    ??:? void rt.dmain2._d_r'
  stdout: ''
  timestamp: 1660163090
- exit_code: 1
  program: "import std.typecons;\nimport std.math;\n/*\nReturn True if all numbers\
    \ in the list l are below threshold t.\n    >>> below_threshold([1L, 2L, 4L, 10L],\
    \ 100L)\n    true\n    >>> below_threshold([1L, 20L, 4L, 10L], 5L)\n    false\n\
    \    \n*/\nbool below_threshold(long[] l, long t) \n{\n    foreach(long i; l)\n\
    \    {\n        if(i > t)\n            return false;\n    }\n    return true;\n\
    }\nunittest\n{\n    alias candidate = below_threshold;\n\n    assert(candidate([1L,\
    \ 2L, 4L, 10L], 100L) == true);\n    assert(candidate([1L, 20L, 4L, 10L], 5L)\
    \ == false);\n    assert(candidate([1L, 20L, 4L, 10L], 21L) == true);\n    assert(candidate([1L,\
    \ 20L, 4L, 10L], 22L) == true);\n    assert(candidate([1L, 8L, 4L, 10L], 11L)\
    \ == true);\n    assert(candidate([1L, 8L, 4L, 10L], 10L) == false);\n}\nvoid\
    \ main(){}"
  status: Exception
  stderr: 'core.exception.AssertError@/tmp/tmpev0f60w0.d(29): unittest failure

    ----------------

    ??:? _d_unittestp [0x4281dd]

    ??:? void tmpev0f60w0.__unittest_L20_C1() [0x427f4b]

    ??:? void tmpev0f60w0.__modtest() [0x427f60]

    ??:? int core.runtime.runModuleUnitTests().__foreachbody2(object.ModuleInfo*)
    [0x42c1c7]

    ??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)).__lambda2(immutable(object.ModuleInfo*))
    [0x42b05a]

    ??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))).__foreachbody2(ref
    rt.sections_elf_shared.DSO) [0x4301ed]

    ??:? int rt.sections_elf_shared.DSO.opApply(scope int delegate(ref rt.sections_elf_shared.DSO))
    [0x43069c]

    ??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*)))
    [0x430179]

    ??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)) [0x42b031]

    ??:? runModuleUnitTests [0x42bf9d]

    ??:? void rt.dmain2._d_run_main(int, char**, extern (C) int function(char[][])*).runAll()
    [0x42862c]

    ??:? void rt.dmain2._d_r'
  stdout: ''
  timestamp: 1660163090
- exit_code: 1
  program: "import std.typecons;\nimport std.math;\n/*\nReturn True if all numbers\
    \ in the list l are below threshold t.\n    >>> below_threshold([1L, 2L, 4L, 10L],\
    \ 100L)\n    true\n    >>> below_threshold([1L, 20L, 4L, 10L], 5L)\n    false\n\
    \    \n*/\nbool below_threshold(long[] l, long t) \n{\n    foreach(i; l)\n   \
    \ {\n        if(i > t)\n            return false;\n    }\n    return true;\n}\n\
    unittest\n{\n    alias candidate = below_threshold;\n\n    assert(candidate([1L,\
    \ 2L, 4L, 10L], 100L) == true);\n    assert(candidate([1L, 20L, 4L, 10L], 5L)\
    \ == false);\n    assert(candidate([1L, 20L, 4L, 10L], 21L) == true);\n    assert(candidate([1L,\
    \ 20L, 4L, 10L], 22L) == true);\n    assert(candidate([1L, 8L, 4L, 10L], 11L)\
    \ == true);\n    assert(candidate([1L, 8L, 4L, 10L], 10L) == false);\n}\nvoid\
    \ main(){}"
  status: Exception
  stderr: 'core.exception.AssertError@/tmp/tmpplk4ck84.d(29): unittest failure

    ----------------

    ??:? _d_unittestp [0x4281dd]

    ??:? void tmpplk4ck84.__unittest_L20_C1() [0x427f4b]

    ??:? void tmpplk4ck84.__modtest() [0x427f60]

    ??:? int core.runtime.runModuleUnitTests().__foreachbody2(object.ModuleInfo*)
    [0x42c1c7]

    ??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)).__lambda2(immutable(object.ModuleInfo*))
    [0x42b05a]

    ??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))).__foreachbody2(ref
    rt.sections_elf_shared.DSO) [0x4301ed]

    ??:? int rt.sections_elf_shared.DSO.opApply(scope int delegate(ref rt.sections_elf_shared.DSO))
    [0x43069c]

    ??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*)))
    [0x430179]

    ??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)) [0x42b031]

    ??:? runModuleUnitTests [0x42bf9d]

    ??:? void rt.dmain2._d_run_main(int, char**, extern (C) int function(char[][])*).runAll()
    [0x42862c]

    ??:? void rt.dmain2._d_r'
  stdout: ''
  timestamp: 1660163090
- exit_code: 0
  program: "import std.typecons;\nimport std.math;\n/*\nReturn True if all numbers\
    \ in the list l are below threshold t.\n    >>> below_threshold([1L, 2L, 4L, 10L],\
    \ 100L)\n    true\n    >>> below_threshold([1L, 20L, 4L, 10L], 5L)\n    false\n\
    \    \n*/\nbool below_threshold(long[] l, long t) \n{\n    foreach(i; l)\n   \
    \ {\n        if(i >= t)\n            return false;\n    }\n    return true;\n\
    }\nunittest\n{\n    alias candidate = below_threshold;\n\n    assert(candidate([1L,\
    \ 2L, 4L, 10L], 100L) == true);\n    assert(candidate([1L, 20L, 4L, 10L], 5L)\
    \ == false);\n    assert(candidate([1L, 20L, 4L, 10L], 21L) == true);\n    assert(candidate([1L,\
    \ 20L, 4L, 10L], 22L) == true);\n    assert(candidate([1L, 8L, 4L, 10L], 11L)\
    \ == true);\n    assert(candidate([1L, 8L, 4L, 10L], 10L) == false);\n}\nvoid\
    \ main(){}"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660163090
- exit_code: 0
  program: "import std.typecons;\nimport std.math;\n/*\nReturn True if all numbers\
    \ in the list l are below threshold t.\n    >>> below_threshold([1L, 2L, 4L, 10L],\
    \ 100L)\n    true\n    >>> below_threshold([1L, 20L, 4L, 10L], 5L)\n    false\n\
    \    \n*/\nbool below_threshold(long[] l, long t) \n{\n    foreach(long x; l)\
    \ \n    {\n        if(x >= t) \n        {\n            return false;\n       \
    \ }\n    }\n    return true;\n}\nunittest\n{\n    alias candidate = below_threshold;\n\
    \n    assert(candidate([1L, 2L, 4L, 10L], 100L) == true);\n    assert(candidate([1L,\
    \ 20L, 4L, 10L], 5L) == false);\n    assert(candidate([1L, 20L, 4L, 10L], 21L)\
    \ == true);\n    assert(candidate([1L, 20L, 4L, 10L], 22L) == true);\n    assert(candidate([1L,\
    \ 8L, 4L, 10L], 11L) == true);\n    assert(candidate([1L, 8L, 4L, 10L], 10L) ==\
    \ false);\n}\nvoid main(){}"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660163091
- exit_code: 1
  program: "import std.typecons;\nimport std.math;\n/*\nReturn True if all numbers\
    \ in the list l are below threshold t.\n    >>> below_threshold([1L, 2L, 4L, 10L],\
    \ 100L)\n    true\n    >>> below_threshold([1L, 20L, 4L, 10L], 5L)\n    false\n\
    \    \n*/\nbool below_threshold(long[] l, long t) \n{\n    foreach(long i; l)\n\
    \    {\n        if(i > t)\n            return false;\n    }\n    return true;\n\
    }\n/*\nReturn the sum of all numbers in the list l.\n    >>> sum_numbers([1L,\
    \ 2L, 4L, 10L])\n    17L\n    >>> sum_numbers([1L, 20L, 4L, 10L])\n    35L\n*/\n\
    long sum_numbers(long[] l) \n{\n    long sum = 0;\n    foreach(long i; l)\n  \
    \  {\n        sum += i;\n    }\n    return sum;\n}\n/*\nReturn the sum of all\
    \ numbers in the list l that are below threshold t.\n    >>> sum_below_threshold([1L,\
    \ 2L, 4L, 10L], 100L)\n    17L\n    >>> sum_below_threshold([1L, 20L, 4L, 10L],\
    \ 5L)\n    5L\n*/\nlong sum_below_threshold(long[] l, long t) \n{\n    long sum\
    \ = 0;\n    foreach(long i; l)\n    {\n        if(i < t)\n            sum += i;\n\
    \    }\n    return sum;\n}\n/*\nReturn the sum of all numbers in the list l that\
    \ are below threshold t.\n    >>> sum_below_threshold([1L, 2L, 4L, 10L], 100L)\n\
    \    17L\n    >>> sum_below_threshold([1L, 20L, 4L, 10L], 5L)\n    5L\n*/\nlong\
    \ sum_below_threshold2(long[] l, long t) \n{\n    long sum = 0;\n    foreach(long\
    \ i; l)\n    {\n        if(i < t)\n            sum += i;\n    }\n    return sum;\n\
    }\n/*\nReturn the sum of all numbers in the list l that are below threshold t.\n\
    \    >>> sum_below_threshold([1L, 2L, 4L, 10L], 100L)\n    17L\n    >>> sum_below_threshold([1L,\
    \ 20L, 4L, 10L], 5L)\n   \nunittest\n{\n    alias candidate = below_threshold;\n\
    \n    assert(candidate([1L, 2L, 4L, 10L], 100L) == true);\n    assert(candidate([1L,\
    \ 20L, 4L, 10L], 5L) == false);\n    assert(candidate([1L, 20L, 4L, 10L], 21L)\
    \ == true);\n    assert(candidate([1L, 20L, 4L, 10L], 22L) == true);\n    assert(candidate([1L,\
    \ 8L, 4L, 10L], 11L) == true);\n    assert(candidate([1L, 8L, 4L, 10L], 10L) ==\
    \ false);\n}\nvoid main(){}"
  status: SyntaxError
  stderr: '/tmp/tmpz7gw1xb5.d(70): Error: unterminated /* */ comment

    Failed: ["dmd", "-unittest", "-v", "-o-", "/tmp/tmpz7gw1xb5.d", "-I/tmp"]

    '
  stdout: ''
  timestamp: 1660163090
- exit_code: 1
  program: "import std.typecons;\nimport std.math;\n/*\nReturn True if all numbers\
    \ in the list l are below threshold t.\n    >>> below_threshold([1L, 2L, 4L, 10L],\
    \ 100L)\n    true\n    >>> below_threshold([1L, 20L, 4L, 10L], 5L)\n    false\n\
    \    \n*/\nbool below_threshold(long[] l, long t) \n{\n    foreach(long i; l)\
    \ \n    {\n        if(i > t) \n        {\n            return false;\n        }\n\
    \    }\n    return true;\n}\nunittest\n{\n    alias candidate = below_threshold;\n\
    \n    assert(candidate([1L, 2L, 4L, 10L], 100L) == true);\n    assert(candidate([1L,\
    \ 20L, 4L, 10L], 5L) == false);\n    assert(candidate([1L, 20L, 4L, 10L], 21L)\
    \ == true);\n    assert(candidate([1L, 20L, 4L, 10L], 22L) == true);\n    assert(candidate([1L,\
    \ 8L, 4L, 10L], 11L) == true);\n    assert(candidate([1L, 8L, 4L, 10L], 10L) ==\
    \ false);\n}\nvoid main(){}"
  status: Exception
  stderr: 'core.exception.AssertError@/tmp/tmpo7w6ym5w.d(31): unittest failure

    ----------------

    ??:? _d_unittestp [0x4281dd]

    ??:? void tmpo7w6ym5w.__unittest_L22_C1() [0x427f4b]

    ??:? void tmpo7w6ym5w.__modtest() [0x427f60]

    ??:? int core.runtime.runModuleUnitTests().__foreachbody2(object.ModuleInfo*)
    [0x42c1c7]

    ??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)).__lambda2(immutable(object.ModuleInfo*))
    [0x42b05a]

    ??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))).__foreachbody2(ref
    rt.sections_elf_shared.DSO) [0x4301ed]

    ??:? int rt.sections_elf_shared.DSO.opApply(scope int delegate(ref rt.sections_elf_shared.DSO))
    [0x43069c]

    ??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*)))
    [0x430179]

    ??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)) [0x42b031]

    ??:? runModuleUnitTests [0x42bf9d]

    ??:? void rt.dmain2._d_run_main(int, char**, extern (C) int function(char[][])*).runAll()
    [0x42862c]

    ??:? void rt.dmain2._d_r'
  stdout: ''
  timestamp: 1660163091
- exit_code: 1
  program: "import std.typecons;\nimport std.math;\n/*\nReturn True if all numbers\
    \ in the list l are below threshold t.\n    >>> below_threshold([1L, 2L, 4L, 10L],\
    \ 100L)\n    true\n    >>> below_threshold([1L, 20L, 4L, 10L], 5L)\n    false\n\
    \    \n*/\nbool below_threshold(long[] l, long t) \n{\n    foreach(long x; l)\n\
    \    {\n        if(x > t)\n            return false;\n    }\n    return true;\n\
    }\nunittest\n{\n    alias candidate = below_threshold;\n\n    assert(candidate([1L,\
    \ 2L, 4L, 10L], 100L) == true);\n    assert(candidate([1L, 20L, 4L, 10L], 5L)\
    \ == false);\n    assert(candidate([1L, 20L, 4L, 10L], 21L) == true);\n    assert(candidate([1L,\
    \ 20L, 4L, 10L], 22L) == true);\n    assert(candidate([1L, 8L, 4L, 10L], 11L)\
    \ == true);\n    assert(candidate([1L, 8L, 4L, 10L], 10L) == false);\n}\nvoid\
    \ main(){}"
  status: Exception
  stderr: 'core.exception.AssertError@/tmp/tmpx_fvps4k.d(29): unittest failure

    ----------------

    ??:? _d_unittestp [0x4281dd]

    ??:? void tmpx_fvps4k.__unittest_L20_C1() [0x427f4b]

    ??:? void tmpx_fvps4k.__modtest() [0x427f60]

    ??:? int core.runtime.runModuleUnitTests().__foreachbody2(object.ModuleInfo*)
    [0x42c1c7]

    ??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)).__lambda2(immutable(object.ModuleInfo*))
    [0x42b05a]

    ??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))).__foreachbody2(ref
    rt.sections_elf_shared.DSO) [0x4301ed]

    ??:? int rt.sections_elf_shared.DSO.opApply(scope int delegate(ref rt.sections_elf_shared.DSO))
    [0x43069c]

    ??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*)))
    [0x430179]

    ??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)) [0x42b031]

    ??:? runModuleUnitTests [0x42bf9d]

    ??:? void rt.dmain2._d_run_main(int, char**, extern (C) int function(char[][])*).runAll()
    [0x42862c]

    ??:? void rt.dmain2._d_r'
  stdout: ''
  timestamp: 1660163090
- exit_code: 0
  program: "import std.typecons;\nimport std.math;\n/*\nReturn True if all numbers\
    \ in the list l are below threshold t.\n    >>> below_threshold([1L, 2L, 4L, 10L],\
    \ 100L)\n    true\n    >>> below_threshold([1L, 20L, 4L, 10L], 5L)\n    false\n\
    \    \n*/\nbool below_threshold(long[] l, long t) \n{\n    foreach(long x; l)\n\
    \    {\n        if(x >= t)\n            return false;\n    }\n    return true;\n\
    }\nunittest\n{\n    alias candidate = below_threshold;\n\n    assert(candidate([1L,\
    \ 2L, 4L, 10L], 100L) == true);\n    assert(candidate([1L, 20L, 4L, 10L], 5L)\
    \ == false);\n    assert(candidate([1L, 20L, 4L, 10L], 21L) == true);\n    assert(candidate([1L,\
    \ 20L, 4L, 10L], 22L) == true);\n    assert(candidate([1L, 8L, 4L, 10L], 11L)\
    \ == true);\n    assert(candidate([1L, 8L, 4L, 10L], 10L) == false);\n}\nvoid\
    \ main(){}"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660163090
- exit_code: 0
  program: "import std.typecons;\nimport std.math;\n/*\nReturn True if all numbers\
    \ in the list l are below threshold t.\n    >>> below_threshold([1L, 2L, 4L, 10L],\
    \ 100L)\n    true\n    >>> below_threshold([1L, 20L, 4L, 10L], 5L)\n    false\n\
    \    \n*/\nbool below_threshold(long[] l, long t) \n{\n    foreach(long x; l)\n\
    \    {\n        if(x >= t)\n            return false;\n    }\n    return true;\n\
    }\nunittest\n{\n    alias candidate = below_threshold;\n\n    assert(candidate([1L,\
    \ 2L, 4L, 10L], 100L) == true);\n    assert(candidate([1L, 20L, 4L, 10L], 5L)\
    \ == false);\n    assert(candidate([1L, 20L, 4L, 10L], 21L) == true);\n    assert(candidate([1L,\
    \ 20L, 4L, 10L], 22L) == true);\n    assert(candidate([1L, 8L, 4L, 10L], 11L)\
    \ == true);\n    assert(candidate([1L, 8L, 4L, 10L], 10L) == false);\n}\nvoid\
    \ main(){}"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660163090
- exit_code: 0
  program: "import std.typecons;\nimport std.math;\n/*\nReturn True if all numbers\
    \ in the list l are below threshold t.\n    >>> below_threshold([1L, 2L, 4L, 10L],\
    \ 100L)\n    true\n    >>> below_threshold([1L, 20L, 4L, 10L], 5L)\n    false\n\
    \    \n*/\nbool below_threshold(long[] l, long t) \n{\n    foreach(long x; l)\n\
    \    {\n        if(x >= t)\n            return false;\n    }\n    return true;\n\
    }\nunittest\n{\n    alias candidate = below_threshold;\n\n    assert(candidate([1L,\
    \ 2L, 4L, 10L], 100L) == true);\n    assert(candidate([1L, 20L, 4L, 10L], 5L)\
    \ == false);\n    assert(candidate([1L, 20L, 4L, 10L], 21L) == true);\n    assert(candidate([1L,\
    \ 20L, 4L, 10L], 22L) == true);\n    assert(candidate([1L, 8L, 4L, 10L], 11L)\
    \ == true);\n    assert(candidate([1L, 8L, 4L, 10L], 10L) == false);\n}\nvoid\
    \ main(){}"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660163090
- exit_code: 1
  program: "import std.typecons;\nimport std.math;\n/*\nReturn True if all numbers\
    \ in the list l are below threshold t.\n    >>> below_threshold([1L, 2L, 4L, 10L],\
    \ 100L)\n    true\n    >>> below_threshold([1L, 20L, 4L, 10L], 5L)\n    false\n\
    \    \n*/\nbool below_threshold(long[] l, long t) \n{\n    foreach(long i; l)\n\
    \    {\n        if(i > t)\n            return false;\n    }\n    return true;\n\
    }\nunittest\n{\n    alias candidate = below_threshold;\n\n    assert(candidate([1L,\
    \ 2L, 4L, 10L], 100L) == true);\n    assert(candidate([1L, 20L, 4L, 10L], 5L)\
    \ == false);\n    assert(candidate([1L, 20L, 4L, 10L], 21L) == true);\n    assert(candidate([1L,\
    \ 20L, 4L, 10L], 22L) == true);\n    assert(candidate([1L, 8L, 4L, 10L], 11L)\
    \ == true);\n    assert(candidate([1L, 8L, 4L, 10L], 10L) == false);\n}\nvoid\
    \ main(){}"
  status: Exception
  stderr: 'core.exception.AssertError@/tmp/tmpev0f60w0.d(29): unittest failure

    ----------------

    ??:? _d_unittestp [0x4281dd]

    ??:? void tmpev0f60w0.__unittest_L20_C1() [0x427f4b]

    ??:? void tmpev0f60w0.__modtest() [0x427f60]

    ??:? int core.runtime.runModuleUnitTests().__foreachbody2(object.ModuleInfo*)
    [0x42c1c7]

    ??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)).__lambda2(immutable(object.ModuleInfo*))
    [0x42b05a]

    ??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))).__foreachbody2(ref
    rt.sections_elf_shared.DSO) [0x4301ed]

    ??:? int rt.sections_elf_shared.DSO.opApply(scope int delegate(ref rt.sections_elf_shared.DSO))
    [0x43069c]

    ??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*)))
    [0x430179]

    ??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)) [0x42b031]

    ??:? runModuleUnitTests [0x42bf9d]

    ??:? void rt.dmain2._d_run_main(int, char**, extern (C) int function(char[][])*).runAll()
    [0x42862c]

    ??:? void rt.dmain2._d_r'
  stdout: ''
  timestamp: 1660163090
- exit_code: 1
  program: "import std.typecons;\nimport std.math;\n/*\nReturn True if all numbers\
    \ in the list l are below threshold t.\n    >>> below_threshold([1L, 2L, 4L, 10L],\
    \ 100L)\n    true\n    >>> below_threshold([1L, 20L, 4L, 10L], 5L)\n    false\n\
    \    \n*/\nbool below_threshold(long[] l, long t) \n{\n    foreach(long i; l)\n\
    \    {\n        if(i > t)\n            return false;\n    }\n    return true;\n\
    }\n/*\nReturn True if all numbers in the list l are below threshold t.\n    >>>\
    \ below_threshold([1L, 2L, 4L, 10L], 100L)\n    true\n    >>> below_threshold([1L,\
    \ 20L, 4L, 10L], 5L)\n    false\n    \n*/\nunittest\n{\n    alias candidate =\
    \ below_threshold;\n\n    assert(candidate([1L, 2L, 4L, 10L], 100L) == true);\n\
    \    assert(candidate([1L, 20L, 4L, 10L], 5L) == false);\n    assert(candidate([1L,\
    \ 20L, 4L, 10L], 21L) == true);\n    assert(candidate([1L, 20L, 4L, 10L], 22L)\
    \ == true);\n    assert(candidate([1L, 8L, 4L, 10L], 11L) == true);\n    assert(candidate([1L,\
    \ 8L, 4L, 10L], 10L) == false);\n}\nvoid main(){}"
  status: Exception
  stderr: 'core.exception.AssertError@/tmp/tmp_kfz1oq0.d(37): unittest failure

    ----------------

    ??:? _d_unittestp [0x4281dd]

    ??:? void tmp_kfz1oq0.__unittest_L28_C1() [0x427f4b]

    ??:? void tmp_kfz1oq0.__modtest() [0x427f60]

    ??:? int core.runtime.runModuleUnitTests().__foreachbody2(object.ModuleInfo*)
    [0x42c1c7]

    ??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)).__lambda2(immutable(object.ModuleInfo*))
    [0x42b05a]

    ??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))).__foreachbody2(ref
    rt.sections_elf_shared.DSO) [0x4301ed]

    ??:? int rt.sections_elf_shared.DSO.opApply(scope int delegate(ref rt.sections_elf_shared.DSO))
    [0x43069c]

    ??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*)))
    [0x430179]

    ??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)) [0x42b031]

    ??:? runModuleUnitTests [0x42bf9d]

    ??:? void rt.dmain2._d_run_main(int, char**, extern (C) int function(char[][])*).runAll()
    [0x42862c]

    ??:? void rt.dmain2._d_r'
  stdout: ''
  timestamp: 1660163090
- exit_code: 1
  program: "import std.typecons;\nimport std.math;\n/*\nReturn True if all numbers\
    \ in the list l are below threshold t.\n    >>> below_threshold([1L, 2L, 4L, 10L],\
    \ 100L)\n    true\n    >>> below_threshold([1L, 20L, 4L, 10L], 5L)\n    false\n\
    \    \n*/\nbool below_threshold(long[] l, long t) \n{\n    foreach(long i; l)\n\
    \    {\n        if(i > t)\n            return false;\n    }\n    return true;\n\
    }\nunittest\n{\n    alias candidate = below_threshold;\n\n    assert(candidate([1L,\
    \ 2L, 4L, 10L], 100L) == true);\n    assert(candidate([1L, 20L, 4L, 10L], 5L)\
    \ == false);\n    assert(candidate([1L, 20L, 4L, 10L], 21L) == true);\n    assert(candidate([1L,\
    \ 20L, 4L, 10L], 22L) == true);\n    assert(candidate([1L, 8L, 4L, 10L], 11L)\
    \ == true);\n    assert(candidate([1L, 8L, 4L, 10L], 10L) == false);\n}\nvoid\
    \ main(){}"
  status: Exception
  stderr: 'core.exception.AssertError@/tmp/tmpev0f60w0.d(29): unittest failure

    ----------------

    ??:? _d_unittestp [0x4281dd]

    ??:? void tmpev0f60w0.__unittest_L20_C1() [0x427f4b]

    ??:? void tmpev0f60w0.__modtest() [0x427f60]

    ??:? int core.runtime.runModuleUnitTests().__foreachbody2(object.ModuleInfo*)
    [0x42c1c7]

    ??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)).__lambda2(immutable(object.ModuleInfo*))
    [0x42b05a]

    ??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))).__foreachbody2(ref
    rt.sections_elf_shared.DSO) [0x4301ed]

    ??:? int rt.sections_elf_shared.DSO.opApply(scope int delegate(ref rt.sections_elf_shared.DSO))
    [0x43069c]

    ??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*)))
    [0x430179]

    ??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)) [0x42b031]

    ??:? runModuleUnitTests [0x42bf9d]

    ??:? void rt.dmain2._d_run_main(int, char**, extern (C) int function(char[][])*).runAll()
    [0x42862c]

    ??:? void rt.dmain2._d_r'
  stdout: ''
  timestamp: 1660163090
- exit_code: 1
  program: "import std.typecons;\nimport std.math;\n/*\nReturn True if all numbers\
    \ in the list l are below threshold t.\n    >>> below_threshold([1L, 2L, 4L, 10L],\
    \ 100L)\n    true\n    >>> below_threshold([1L, 20L, 4L, 10L], 5L)\n    false\n\
    \    \n*/\nbool below_threshold(long[] l, long t) \n{\n    foreach(long i; l)\n\
    \    {\n        if(i>t)\n            return false;\n    }\n    return true;\n\
    }\nunittest\n{\n    alias candidate = below_threshold;\n\n    assert(candidate([1L,\
    \ 2L, 4L, 10L], 100L) == true);\n    assert(candidate([1L, 20L, 4L, 10L], 5L)\
    \ == false);\n    assert(candidate([1L, 20L, 4L, 10L], 21L) == true);\n    assert(candidate([1L,\
    \ 20L, 4L, 10L], 22L) == true);\n    assert(candidate([1L, 8L, 4L, 10L], 11L)\
    \ == true);\n    assert(candidate([1L, 8L, 4L, 10L], 10L) == false);\n}\nvoid\
    \ main(){}"
  status: Exception
  stderr: 'core.exception.AssertError@/tmp/tmptynr4qan.d(29): unittest failure

    ----------------

    ??:? _d_unittestp [0x4281dd]

    ??:? void tmptynr4qan.__unittest_L20_C1() [0x427f4b]

    ??:? void tmptynr4qan.__modtest() [0x427f60]

    ??:? int core.runtime.runModuleUnitTests().__foreachbody2(object.ModuleInfo*)
    [0x42c1c7]

    ??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)).__lambda2(immutable(object.ModuleInfo*))
    [0x42b05a]

    ??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))).__foreachbody2(ref
    rt.sections_elf_shared.DSO) [0x4301ed]

    ??:? int rt.sections_elf_shared.DSO.opApply(scope int delegate(ref rt.sections_elf_shared.DSO))
    [0x43069c]

    ??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*)))
    [0x430179]

    ??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)) [0x42b031]

    ??:? runModuleUnitTests [0x42bf9d]

    ??:? void rt.dmain2._d_run_main(int, char**, extern (C) int function(char[][])*).runAll()
    [0x42862c]

    ??:? void rt.dmain2._d_r'
  stdout: ''
  timestamp: 1660163091
- exit_code: 1
  program: "import std.typecons;\nimport std.math;\n/*\nReturn True if all numbers\
    \ in the list l are below threshold t.\n    >>> below_threshold([1L, 2L, 4L, 10L],\
    \ 100L)\n    true\n    >>> below_threshold([1L, 20L, 4L, 10L], 5L)\n    false\n\
    \    \n*/\nbool below_threshold(long[] l, long t) \n{\n    foreach(long i; l)\n\
    \    {\n        if(i > t)\n            return false;\n    }\n    return true;\n\
    }\n/*\nReturn True if all numbers in the list l are below threshold t.\n    >>>\
    \ below_threshold([1L, 2L, 4L, 10L], 100L)\n    true\n    >>> below_threshold([1L,\
    \ 20L, 4L, 10L], 5L)\n    false\n    \n*/\nunittest\n{\n    alias candidate =\
    \ below_threshold;\n\n    assert(candidate([1L, 2L, 4L, 10L], 100L) == true);\n\
    \    assert(candidate([1L, 20L, 4L, 10L], 5L) == false);\n    assert(candidate([1L,\
    \ 20L, 4L, 10L], 21L) == true);\n    assert(candidate([1L, 20L, 4L, 10L], 22L)\
    \ == true);\n    assert(candidate([1L, 8L, 4L, 10L], 11L) == true);\n    assert(candidate([1L,\
    \ 8L, 4L, 10L], 10L) == false);\n}\nvoid main(){}"
  status: Exception
  stderr: 'core.exception.AssertError@/tmp/tmp_kfz1oq0.d(37): unittest failure

    ----------------

    ??:? _d_unittestp [0x4281dd]

    ??:? void tmp_kfz1oq0.__unittest_L28_C1() [0x427f4b]

    ??:? void tmp_kfz1oq0.__modtest() [0x427f60]

    ??:? int core.runtime.runModuleUnitTests().__foreachbody2(object.ModuleInfo*)
    [0x42c1c7]

    ??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)).__lambda2(immutable(object.ModuleInfo*))
    [0x42b05a]

    ??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))).__foreachbody2(ref
    rt.sections_elf_shared.DSO) [0x4301ed]

    ??:? int rt.sections_elf_shared.DSO.opApply(scope int delegate(ref rt.sections_elf_shared.DSO))
    [0x43069c]

    ??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*)))
    [0x430179]

    ??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)) [0x42b031]

    ??:? runModuleUnitTests [0x42bf9d]

    ??:? void rt.dmain2._d_run_main(int, char**, extern (C) int function(char[][])*).runAll()
    [0x42862c]

    ??:? void rt.dmain2._d_r'
  stdout: ''
  timestamp: 1660163090
- exit_code: 1
  program: "import std.typecons;\nimport std.math;\n/*\nReturn True if all numbers\
    \ in the list l are below threshold t.\n    >>> below_threshold([1L, 2L, 4L, 10L],\
    \ 100L)\n    true\n    >>> below_threshold([1L, 20L, 4L, 10L], 5L)\n    false\n\
    \    \n*/\nbool below_threshold(long[] l, long t) \n{\n    foreach(long i; l)\n\
    \    {\n        if(i > t)\n            return false;\n    }\n    return true;\n\
    }\nunittest\n{\n    alias candidate = below_threshold;\n\n    assert(candidate([1L,\
    \ 2L, 4L, 10L], 100L) == true);\n    assert(candidate([1L, 20L, 4L, 10L], 5L)\
    \ == false);\n    assert(candidate([1L, 20L, 4L, 10L], 21L) == true);\n    assert(candidate([1L,\
    \ 20L, 4L, 10L], 22L) == true);\n    assert(candidate([1L, 8L, 4L, 10L], 11L)\
    \ == true);\n    assert(candidate([1L, 8L, 4L, 10L], 10L) == false);\n}\nvoid\
    \ main(){}"
  status: Exception
  stderr: 'core.exception.AssertError@/tmp/tmpev0f60w0.d(29): unittest failure

    ----------------

    ??:? _d_unittestp [0x4281dd]

    ??:? void tmpev0f60w0.__unittest_L20_C1() [0x427f4b]

    ??:? void tmpev0f60w0.__modtest() [0x427f60]

    ??:? int core.runtime.runModuleUnitTests().__foreachbody2(object.ModuleInfo*)
    [0x42c1c7]

    ??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)).__lambda2(immutable(object.ModuleInfo*))
    [0x42b05a]

    ??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))).__foreachbody2(ref
    rt.sections_elf_shared.DSO) [0x4301ed]

    ??:? int rt.sections_elf_shared.DSO.opApply(scope int delegate(ref rt.sections_elf_shared.DSO))
    [0x43069c]

    ??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*)))
    [0x430179]

    ??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)) [0x42b031]

    ??:? runModuleUnitTests [0x42bf9d]

    ??:? void rt.dmain2._d_run_main(int, char**, extern (C) int function(char[][])*).runAll()
    [0x42862c]

    ??:? void rt.dmain2._d_r'
  stdout: ''
  timestamp: 1660163090
- exit_code: 1
  program: "import std.typecons;\nimport std.math;\n/*\nReturn True if all numbers\
    \ in the list l are below threshold t.\n    >>> below_threshold([1L, 2L, 4L, 10L],\
    \ 100L)\n    true\n    >>> below_threshold([1L, 20L, 4L, 10L], 5L)\n    false\n\
    \    \n*/\nbool below_threshold(long[] l, long t) \n{\n    foreach(long i; l)\n\
    \    {\n        if(i > t)\n            return false;\n    }\n    return true;\n\
    }\nunittest\n{\n    alias candidate = below_threshold;\n\n    assert(candidate([1L,\
    \ 2L, 4L, 10L], 100L) == true);\n    assert(candidate([1L, 20L, 4L, 10L], 5L)\
    \ == false);\n    assert(candidate([1L, 20L, 4L, 10L], 21L) == true);\n    assert(candidate([1L,\
    \ 20L, 4L, 10L], 22L) == true);\n    assert(candidate([1L, 8L, 4L, 10L], 11L)\
    \ == true);\n    assert(candidate([1L, 8L, 4L, 10L], 10L) == false);\n}\nvoid\
    \ main(){}"
  status: Exception
  stderr: 'core.exception.AssertError@/tmp/tmpev0f60w0.d(29): unittest failure

    ----------------

    ??:? _d_unittestp [0x4281dd]

    ??:? void tmpev0f60w0.__unittest_L20_C1() [0x427f4b]

    ??:? void tmpev0f60w0.__modtest() [0x427f60]

    ??:? int core.runtime.runModuleUnitTests().__foreachbody2(object.ModuleInfo*)
    [0x42c1c7]

    ??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)).__lambda2(immutable(object.ModuleInfo*))
    [0x42b05a]

    ??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))).__foreachbody2(ref
    rt.sections_elf_shared.DSO) [0x4301ed]

    ??:? int rt.sections_elf_shared.DSO.opApply(scope int delegate(ref rt.sections_elf_shared.DSO))
    [0x43069c]

    ??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*)))
    [0x430179]

    ??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)) [0x42b031]

    ??:? runModuleUnitTests [0x42bf9d]

    ??:? void rt.dmain2._d_run_main(int, char**, extern (C) int function(char[][])*).runAll()
    [0x42862c]

    ??:? void rt.dmain2._d_r'
  stdout: ''
  timestamp: 1660163090
- exit_code: 0
  program: "import std.typecons;\nimport std.math;\n/*\nReturn True if all numbers\
    \ in the list l are below threshold t.\n    >>> below_threshold([1L, 2L, 4L, 10L],\
    \ 100L)\n    true\n    >>> below_threshold([1L, 20L, 4L, 10L], 5L)\n    false\n\
    \    \n*/\nbool below_threshold(long[] l, long t) \n{\n    foreach(long x; l)\n\
    \    {\n        if(x >= t)\n            return false;\n    }\n    return true;\n\
    }\nunittest\n{\n    alias candidate = below_threshold;\n\n    assert(candidate([1L,\
    \ 2L, 4L, 10L], 100L) == true);\n    assert(candidate([1L, 20L, 4L, 10L], 5L)\
    \ == false);\n    assert(candidate([1L, 20L, 4L, 10L], 21L) == true);\n    assert(candidate([1L,\
    \ 20L, 4L, 10L], 22L) == true);\n    assert(candidate([1L, 8L, 4L, 10L], 11L)\
    \ == true);\n    assert(candidate([1L, 8L, 4L, 10L], 10L) == false);\n}\nvoid\
    \ main(){}"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660163090
- exit_code: 1
  program: "import std.typecons;\nimport std.math;\n/*\nReturn True if all numbers\
    \ in the list l are below threshold t.\n    >>> below_threshold([1L, 2L, 4L, 10L],\
    \ 100L)\n    true\n    >>> below_threshold([1L, 20L, 4L, 10L], 5L)\n    false\n\
    \    \n*/\nbool below_threshold(long[] l, long t) \n{\n    foreach(i; l)\n   \
    \ {\n        if(i > t)\n            return false;\n    }\n    return true;\n}\n\
    /*\nReturn True if all numbers in the list l are below threshold t.\n    >>> below_threshold([1L,\
    \ 2L, 4L, 10L], 100L)\n    true\n    >>> below_threshold([1L, 20L, 4L, 10L], 5L)\n\
    \    false\n    \n*/\nunittest\n{\n    alias candidate = below_threshold;\n\n\
    \    assert(candidate([1L, 2L, 4L, 10L], 100L) == true);\n    assert(candidate([1L,\
    \ 20L, 4L, 10L], 5L) == false);\n    assert(candidate([1L, 20L, 4L, 10L], 21L)\
    \ == true);\n    assert(candidate([1L, 20L, 4L, 10L], 22L) == true);\n    assert(candidate([1L,\
    \ 8L, 4L, 10L], 11L) == true);\n    assert(candidate([1L, 8L, 4L, 10L], 10L) ==\
    \ false);\n}\nvoid main(){}"
  status: Exception
  stderr: 'core.exception.AssertError@/tmp/tmp_wlgu24n.d(37): unittest failure

    ----------------

    ??:? _d_unittestp [0x4281dd]

    ??:? void tmp_wlgu24n.__unittest_L28_C1() [0x427f4b]

    ??:? void tmp_wlgu24n.__modtest() [0x427f60]

    ??:? int core.runtime.runModuleUnitTests().__foreachbody2(object.ModuleInfo*)
    [0x42c1c7]

    ??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)).__lambda2(immutable(object.ModuleInfo*))
    [0x42b05a]

    ??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))).__foreachbody2(ref
    rt.sections_elf_shared.DSO) [0x4301ed]

    ??:? int rt.sections_elf_shared.DSO.opApply(scope int delegate(ref rt.sections_elf_shared.DSO))
    [0x43069c]

    ??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*)))
    [0x430179]

    ??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)) [0x42b031]

    ??:? runModuleUnitTests [0x42bf9d]

    ??:? void rt.dmain2._d_run_main(int, char**, extern (C) int function(char[][])*).runAll()
    [0x42862c]

    ??:? void rt.dmain2._d_r'
  stdout: ''
  timestamp: 1660163090
- exit_code: 0
  program: "import std.typecons;\nimport std.math;\n/*\nReturn True if all numbers\
    \ in the list l are below threshold t.\n    >>> below_threshold([1L, 2L, 4L, 10L],\
    \ 100L)\n    true\n    >>> below_threshold([1L, 20L, 4L, 10L], 5L)\n    false\n\
    \    \n*/\nbool below_threshold(long[] l, long t) \n{\n    foreach(long x; l)\n\
    \    {\n        if(x >= t)\n            return false;\n    }\n    return true;\n\
    }\n/*\nReturn True if all numbers in the list l are below threshold t.\n    >>>\
    \ below_threshold([1L, 2L, 4L, 10L], 100L)\n    true\n    >>> below_threshold([1L,\
    \ 20L, 4L, 10L], 5L)\n    false\n    \n*/\nunittest\n{\n    alias candidate =\
    \ below_threshold;\n\n    assert(candidate([1L, 2L, 4L, 10L], 100L) == true);\n\
    \    assert(candidate([1L, 20L, 4L, 10L], 5L) == false);\n    assert(candidate([1L,\
    \ 20L, 4L, 10L], 21L) == true);\n    assert(candidate([1L, 20L, 4L, 10L], 22L)\
    \ == true);\n    assert(candidate([1L, 8L, 4L, 10L], 11L) == true);\n    assert(candidate([1L,\
    \ 8L, 4L, 10L], 10L) == false);\n}\nvoid main(){}"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660163090
- exit_code: 0
  program: "import std.typecons;\nimport std.math;\n/*\nReturn True if all numbers\
    \ in the list l are below threshold t.\n    >>> below_threshold([1L, 2L, 4L, 10L],\
    \ 100L)\n    true\n    >>> below_threshold([1L, 20L, 4L, 10L], 5L)\n    false\n\
    \    \n*/\nbool below_threshold(long[] l, long t) \n{\n    foreach(long x; l)\n\
    \    {\n        if(x >= t)\n            return false;\n    }\n    return true;\n\
    }\nunittest\n{\n    alias candidate = below_threshold;\n\n    assert(candidate([1L,\
    \ 2L, 4L, 10L], 100L) == true);\n    assert(candidate([1L, 20L, 4L, 10L], 5L)\
    \ == false);\n    assert(candidate([1L, 20L, 4L, 10L], 21L) == true);\n    assert(candidate([1L,\
    \ 20L, 4L, 10L], 22L) == true);\n    assert(candidate([1L, 8L, 4L, 10L], 11L)\
    \ == true);\n    assert(candidate([1L, 8L, 4L, 10L], 10L) == false);\n}\nvoid\
    \ main(){}"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660163090
- exit_code: 1
  program: "import std.typecons;\nimport std.math;\n/*\nReturn True if all numbers\
    \ in the list l are below threshold t.\n    >>> below_threshold([1L, 2L, 4L, 10L],\
    \ 100L)\n    true\n    >>> below_threshold([1L, 20L, 4L, 10L], 5L)\n    false\n\
    \    \n*/\nbool below_threshold(long[] l, long t) \n{\n    foreach(i; l)\n   \
    \ {\n        if(i > t)\n            return false;\n    }\n    return true;\n}\n\
    /*\nReturn the number of elements in the list l that are below threshold t.\n\
    \    >>> count_below_threshold([1L, 2L, 4L, 10L], 100L)\n    4\n    >>> count_below_threshold([1L,\
    \ 20L, 4L, 10L], 5L)\n    2\n*/\nlong count_below_threshold(long[] l, long t)\
    \ \n{\n    long count = 0;\n    foreach(i; l)\n    {\n        if(i < t)\n    \
    \        count++;\n    }\n    return count;\n}\n/*\nReturn the number of elements\
    \ in the list l that are below threshold t.\n    >>> count_below_threshold([1L,\
    \ 2L, 4L, 10L], 100L)\n    4\n    >>> count_below_threshold([1L, 20L, 4L, 10L],\
    \ 5L)\n    2\n*/\nlong count_below_threshold_2(long[] l, long t) \n{\n    long\
    \ count = 0;\n    foreach(i; l)\n    {\n        if(i < t)\n            count++;\n\
    \    }\n    return count;\n}\n/*\nReturn the number of elements in the list l\
    \ that are below threshold t.\n    >>> count_below_threshold([1L, 2L, 4L, 10L],\
    \ 100L)\n    4\n    >>> count_below_threshold([1L, 20L, 4L, 10L], 5L)\n    2\n\
    */\nlong count_below_threshold_3(long[] l, long t) \n{\n    long count = 0;\n\
    \    foreach(i; l)\n    {\n        if(i < t)\n            count++;\n    }\n  \
    \  return count;\n}\n/*\nReturn the number of elements in the list l that are\
    \ below threshold t.\n    >>> count_below_threshold([1L, 2L, 4L, 10L], 100L)\n\
    \    4\n    >>> count_below_threshold([1L, 20L, 4\nunittest\n{\n    alias candidate\
    \ = below_threshold;\n\n    assert(candidate([1L, 2L, 4L, 10L], 100L) == true);\n\
    \    assert(candidate([1L, 20L, 4L, 10L], 5L) == false);\n    assert(candidate([1L,\
    \ 20L, 4L, 10L], 21L) == true);\n    assert(candidate([1L, 20L, 4L, 10L], 22L)\
    \ == true);\n    assert(candidate([1L, 8L, 4L, 10L], 11L) == true);\n    assert(candidate([1L,\
    \ 8L, 4L, 10L], 10L) == false);\n}\nvoid main(){}"
  status: SyntaxError
  stderr: '/tmp/tmp1f4cqsk_.d(71): Error: unterminated /* */ comment

    Failed: ["dmd", "-unittest", "-v", "-o-", "/tmp/tmp1f4cqsk_.d", "-I/tmp"]

    '
  stdout: ''
  timestamp: 1660163090
- exit_code: 1
  program: "import std.typecons;\nimport std.math;\n/*\nReturn True if all numbers\
    \ in the list l are below threshold t.\n    >>> below_threshold([1L, 2L, 4L, 10L],\
    \ 100L)\n    true\n    >>> below_threshold([1L, 20L, 4L, 10L], 5L)\n    false\n\
    \    \n*/\nbool below_threshold(long[] l, long t) \n{\n    foreach(long i; l)\n\
    \    {\n        if(i > t)\n            return false;\n    }\n    return true;\n\
    }\n/*\nReturn True if all numbers in the list l are below threshold t.\n    >>>\
    \ below_threshold([1L, 2L, 4L, 10L], 100L)\n    true\n    >>> below_threshold([1L,\
    \ 20L, 4L, 10L], 5L)\n    false\n    \n*/\nunittest\n{\n    alias candidate =\
    \ below_threshold;\n\n    assert(candidate([1L, 2L, 4L, 10L], 100L) == true);\n\
    \    assert(candidate([1L, 20L, 4L, 10L], 5L) == false);\n    assert(candidate([1L,\
    \ 20L, 4L, 10L], 21L) == true);\n    assert(candidate([1L, 20L, 4L, 10L], 22L)\
    \ == true);\n    assert(candidate([1L, 8L, 4L, 10L], 11L) == true);\n    assert(candidate([1L,\
    \ 8L, 4L, 10L], 10L) == false);\n}\nvoid main(){}"
  status: Exception
  stderr: 'core.exception.AssertError@/tmp/tmp_kfz1oq0.d(37): unittest failure

    ----------------

    ??:? _d_unittestp [0x4281dd]

    ??:? void tmp_kfz1oq0.__unittest_L28_C1() [0x427f4b]

    ??:? void tmp_kfz1oq0.__modtest() [0x427f60]

    ??:? int core.runtime.runModuleUnitTests().__foreachbody2(object.ModuleInfo*)
    [0x42c1c7]

    ??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)).__lambda2(immutable(object.ModuleInfo*))
    [0x42b05a]

    ??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))).__foreachbody2(ref
    rt.sections_elf_shared.DSO) [0x4301ed]

    ??:? int rt.sections_elf_shared.DSO.opApply(scope int delegate(ref rt.sections_elf_shared.DSO))
    [0x43069c]

    ??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*)))
    [0x430179]

    ??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)) [0x42b031]

    ??:? runModuleUnitTests [0x42bf9d]

    ??:? void rt.dmain2._d_run_main(int, char**, extern (C) int function(char[][])*).runAll()
    [0x42862c]

    ??:? void rt.dmain2._d_r'
  stdout: ''
  timestamp: 1660163090
- exit_code: 1
  program: "import std.typecons;\nimport std.math;\n/*\nReturn True if all numbers\
    \ in the list l are below threshold t.\n    >>> below_threshold([1L, 2L, 4L, 10L],\
    \ 100L)\n    true\n    >>> below_threshold([1L, 20L, 4L, 10L], 5L)\n    false\n\
    \    \n*/\nbool below_threshold(long[] l, long t) \n{\n    foreach(long i; l)\n\
    \    {\n        if(i > t)\n            return false;\n    }\n    return true;\n\
    }\nunittest\n{\n    alias candidate = below_threshold;\n\n    assert(candidate([1L,\
    \ 2L, 4L, 10L], 100L) == true);\n    assert(candidate([1L, 20L, 4L, 10L], 5L)\
    \ == false);\n    assert(candidate([1L, 20L, 4L, 10L], 21L) == true);\n    assert(candidate([1L,\
    \ 20L, 4L, 10L], 22L) == true);\n    assert(candidate([1L, 8L, 4L, 10L], 11L)\
    \ == true);\n    assert(candidate([1L, 8L, 4L, 10L], 10L) == false);\n}\nvoid\
    \ main(){}"
  status: Exception
  stderr: 'core.exception.AssertError@/tmp/tmpev0f60w0.d(29): unittest failure

    ----------------

    ??:? _d_unittestp [0x4281dd]

    ??:? void tmpev0f60w0.__unittest_L20_C1() [0x427f4b]

    ??:? void tmpev0f60w0.__modtest() [0x427f60]

    ??:? int core.runtime.runModuleUnitTests().__foreachbody2(object.ModuleInfo*)
    [0x42c1c7]

    ??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)).__lambda2(immutable(object.ModuleInfo*))
    [0x42b05a]

    ??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))).__foreachbody2(ref
    rt.sections_elf_shared.DSO) [0x4301ed]

    ??:? int rt.sections_elf_shared.DSO.opApply(scope int delegate(ref rt.sections_elf_shared.DSO))
    [0x43069c]

    ??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*)))
    [0x430179]

    ??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)) [0x42b031]

    ??:? runModuleUnitTests [0x42bf9d]

    ??:? void rt.dmain2._d_run_main(int, char**, extern (C) int function(char[][])*).runAll()
    [0x42862c]

    ??:? void rt.dmain2._d_r'
  stdout: ''
  timestamp: 1660163090
- exit_code: 1
  program: "import std.typecons;\nimport std.math;\n/*\nReturn True if all numbers\
    \ in the list l are below threshold t.\n    >>> below_threshold([1L, 2L, 4L, 10L],\
    \ 100L)\n    true\n    >>> below_threshold([1L, 20L, 4L, 10L], 5L)\n    false\n\
    \    \n*/\nbool below_threshold(long[] l, long t) \n{\n    foreach(i; l)\n   \
    \ {\n        if(i > t)\n            return false;\n    }\n    return true;\n}\n\
    unittest\n{\n    alias candidate = below_threshold;\n\n    assert(candidate([1L,\
    \ 2L, 4L, 10L], 100L) == true);\n    assert(candidate([1L, 20L, 4L, 10L], 5L)\
    \ == false);\n    assert(candidate([1L, 20L, 4L, 10L], 21L) == true);\n    assert(candidate([1L,\
    \ 20L, 4L, 10L], 22L) == true);\n    assert(candidate([1L, 8L, 4L, 10L], 11L)\
    \ == true);\n    assert(candidate([1L, 8L, 4L, 10L], 10L) == false);\n}\nvoid\
    \ main(){}"
  status: Exception
  stderr: 'core.exception.AssertError@/tmp/tmpplk4ck84.d(29): unittest failure

    ----------------

    ??:? _d_unittestp [0x4281dd]

    ??:? void tmpplk4ck84.__unittest_L20_C1() [0x427f4b]

    ??:? void tmpplk4ck84.__modtest() [0x427f60]

    ??:? int core.runtime.runModuleUnitTests().__foreachbody2(object.ModuleInfo*)
    [0x42c1c7]

    ??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)).__lambda2(immutable(object.ModuleInfo*))
    [0x42b05a]

    ??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))).__foreachbody2(ref
    rt.sections_elf_shared.DSO) [0x4301ed]

    ??:? int rt.sections_elf_shared.DSO.opApply(scope int delegate(ref rt.sections_elf_shared.DSO))
    [0x43069c]

    ??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*)))
    [0x430179]

    ??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)) [0x42b031]

    ??:? runModuleUnitTests [0x42bf9d]

    ??:? void rt.dmain2._d_run_main(int, char**, extern (C) int function(char[][])*).runAll()
    [0x42862c]

    ??:? void rt.dmain2._d_r'
  stdout: ''
  timestamp: 1660163090
- exit_code: 1
  program: "import std.typecons;\nimport std.math;\n/*\nReturn True if all numbers\
    \ in the list l are below threshold t.\n    >>> below_threshold([1L, 2L, 4L, 10L],\
    \ 100L)\n    true\n    >>> below_threshold([1L, 20L, 4L, 10L], 5L)\n    false\n\
    \    \n*/\nbool below_threshold(long[] l, long t) \n{\n    foreach(long i; l)\n\
    \    {\n        if(i > t)\n            return false;\n    }\n    return true;\n\
    }\nunittest\n{\n    alias candidate = below_threshold;\n\n    assert(candidate([1L,\
    \ 2L, 4L, 10L], 100L) == true);\n    assert(candidate([1L, 20L, 4L, 10L], 5L)\
    \ == false);\n    assert(candidate([1L, 20L, 4L, 10L], 21L) == true);\n    assert(candidate([1L,\
    \ 20L, 4L, 10L], 22L) == true);\n    assert(candidate([1L, 8L, 4L, 10L], 11L)\
    \ == true);\n    assert(candidate([1L, 8L, 4L, 10L], 10L) == false);\n}\nvoid\
    \ main(){}"
  status: Exception
  stderr: 'core.exception.AssertError@/tmp/tmpev0f60w0.d(29): unittest failure

    ----------------

    ??:? _d_unittestp [0x4281dd]

    ??:? void tmpev0f60w0.__unittest_L20_C1() [0x427f4b]

    ??:? void tmpev0f60w0.__modtest() [0x427f60]

    ??:? int core.runtime.runModuleUnitTests().__foreachbody2(object.ModuleInfo*)
    [0x42c1c7]

    ??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)).__lambda2(immutable(object.ModuleInfo*))
    [0x42b05a]

    ??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))).__foreachbody2(ref
    rt.sections_elf_shared.DSO) [0x4301ed]

    ??:? int rt.sections_elf_shared.DSO.opApply(scope int delegate(ref rt.sections_elf_shared.DSO))
    [0x43069c]

    ??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*)))
    [0x430179]

    ??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)) [0x42b031]

    ??:? runModuleUnitTests [0x42bf9d]

    ??:? void rt.dmain2._d_run_main(int, char**, extern (C) int function(char[][])*).runAll()
    [0x42862c]

    ??:? void rt.dmain2._d_r'
  stdout: ''
  timestamp: 1660163090
- exit_code: 1
  program: "import std.typecons;\nimport std.math;\n/*\nReturn True if all numbers\
    \ in the list l are below threshold t.\n    >>> below_threshold([1L, 2L, 4L, 10L],\
    \ 100L)\n    true\n    >>> below_threshold([1L, 20L, 4L, 10L], 5L)\n    false\n\
    \    \n*/\nbool below_threshold(long[] l, long t) \n{\n    foreach(i; l)\n   \
    \ {\n        if(i > t)\n            return false;\n    }\n    return true;\n}\n\
    unittest\n{\n    alias candidate = below_threshold;\n\n    assert(candidate([1L,\
    \ 2L, 4L, 10L], 100L) == true);\n    assert(candidate([1L, 20L, 4L, 10L], 5L)\
    \ == false);\n    assert(candidate([1L, 20L, 4L, 10L], 21L) == true);\n    assert(candidate([1L,\
    \ 20L, 4L, 10L], 22L) == true);\n    assert(candidate([1L, 8L, 4L, 10L], 11L)\
    \ == true);\n    assert(candidate([1L, 8L, 4L, 10L], 10L) == false);\n}\nvoid\
    \ main(){}"
  status: Exception
  stderr: 'core.exception.AssertError@/tmp/tmpplk4ck84.d(29): unittest failure

    ----------------

    ??:? _d_unittestp [0x4281dd]

    ??:? void tmpplk4ck84.__unittest_L20_C1() [0x427f4b]

    ??:? void tmpplk4ck84.__modtest() [0x427f60]

    ??:? int core.runtime.runModuleUnitTests().__foreachbody2(object.ModuleInfo*)
    [0x42c1c7]

    ??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)).__lambda2(immutable(object.ModuleInfo*))
    [0x42b05a]

    ??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))).__foreachbody2(ref
    rt.sections_elf_shared.DSO) [0x4301ed]

    ??:? int rt.sections_elf_shared.DSO.opApply(scope int delegate(ref rt.sections_elf_shared.DSO))
    [0x43069c]

    ??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*)))
    [0x430179]

    ??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)) [0x42b031]

    ??:? runModuleUnitTests [0x42bf9d]

    ??:? void rt.dmain2._d_run_main(int, char**, extern (C) int function(char[][])*).runAll()
    [0x42862c]

    ??:? void rt.dmain2._d_r'
  stdout: ''
  timestamp: 1660163090
- exit_code: 1
  program: "import std.typecons;\nimport std.math;\n/*\nReturn True if all numbers\
    \ in the list l are below threshold t.\n    >>> below_threshold([1L, 2L, 4L, 10L],\
    \ 100L)\n    true\n    >>> below_threshold([1L, 20L, 4L, 10L], 5L)\n    false\n\
    \    \n*/\nbool below_threshold(long[] l, long t) \n{\n    foreach(long i; l)\n\
    \    {\n        if(i > t)\n            return false;\n    }\n    return true;\n\
    }\nunittest\n{\n    alias candidate = below_threshold;\n\n    assert(candidate([1L,\
    \ 2L, 4L, 10L], 100L) == true);\n    assert(candidate([1L, 20L, 4L, 10L], 5L)\
    \ == false);\n    assert(candidate([1L, 20L, 4L, 10L], 21L) == true);\n    assert(candidate([1L,\
    \ 20L, 4L, 10L], 22L) == true);\n    assert(candidate([1L, 8L, 4L, 10L], 11L)\
    \ == true);\n    assert(candidate([1L, 8L, 4L, 10L], 10L) == false);\n}\nvoid\
    \ main(){}"
  status: Exception
  stderr: 'core.exception.AssertError@/tmp/tmpev0f60w0.d(29): unittest failure

    ----------------

    ??:? _d_unittestp [0x4281dd]

    ??:? void tmpev0f60w0.__unittest_L20_C1() [0x427f4b]

    ??:? void tmpev0f60w0.__modtest() [0x427f60]

    ??:? int core.runtime.runModuleUnitTests().__foreachbody2(object.ModuleInfo*)
    [0x42c1c7]

    ??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)).__lambda2(immutable(object.ModuleInfo*))
    [0x42b05a]

    ??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))).__foreachbody2(ref
    rt.sections_elf_shared.DSO) [0x4301ed]

    ??:? int rt.sections_elf_shared.DSO.opApply(scope int delegate(ref rt.sections_elf_shared.DSO))
    [0x43069c]

    ??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*)))
    [0x430179]

    ??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)) [0x42b031]

    ??:? runModuleUnitTests [0x42bf9d]

    ??:? void rt.dmain2._d_run_main(int, char**, extern (C) int function(char[][])*).runAll()
    [0x42862c]

    ??:? void rt.dmain2._d_r'
  stdout: ''
  timestamp: 1660163090
- exit_code: 1
  program: "import std.typecons;\nimport std.math;\n/*\nReturn True if all numbers\
    \ in the list l are below threshold t.\n    >>> below_threshold([1L, 2L, 4L, 10L],\
    \ 100L)\n    true\n    >>> below_threshold([1L, 20L, 4L, 10L], 5L)\n    false\n\
    \    \n*/\nbool below_threshold(long[] l, long t) \n{\n    foreach(i; l)\n   \
    \ {\n        if(i > t)\n            return false;\n    }\n    return true;\n}\n\
    unittest\n{\n    alias candidate = below_threshold;\n\n    assert(candidate([1L,\
    \ 2L, 4L, 10L], 100L) == true);\n    assert(candidate([1L, 20L, 4L, 10L], 5L)\
    \ == false);\n    assert(candidate([1L, 20L, 4L, 10L], 21L) == true);\n    assert(candidate([1L,\
    \ 20L, 4L, 10L], 22L) == true);\n    assert(candidate([1L, 8L, 4L, 10L], 11L)\
    \ == true);\n    assert(candidate([1L, 8L, 4L, 10L], 10L) == false);\n}\nvoid\
    \ main(){}"
  status: Exception
  stderr: 'core.exception.AssertError@/tmp/tmpplk4ck84.d(29): unittest failure

    ----------------

    ??:? _d_unittestp [0x4281dd]

    ??:? void tmpplk4ck84.__unittest_L20_C1() [0x427f4b]

    ??:? void tmpplk4ck84.__modtest() [0x427f60]

    ??:? int core.runtime.runModuleUnitTests().__foreachbody2(object.ModuleInfo*)
    [0x42c1c7]

    ??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)).__lambda2(immutable(object.ModuleInfo*))
    [0x42b05a]

    ??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))).__foreachbody2(ref
    rt.sections_elf_shared.DSO) [0x4301ed]

    ??:? int rt.sections_elf_shared.DSO.opApply(scope int delegate(ref rt.sections_elf_shared.DSO))
    [0x43069c]

    ??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*)))
    [0x430179]

    ??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)) [0x42b031]

    ??:? runModuleUnitTests [0x42bf9d]

    ??:? void rt.dmain2._d_run_main(int, char**, extern (C) int function(char[][])*).runAll()
    [0x42862c]

    ??:? void rt.dmain2._d_r'
  stdout: ''
  timestamp: 1660163090
- exit_code: 1
  program: "import std.typecons;\nimport std.math;\n/*\nReturn True if all numbers\
    \ in the list l are below threshold t.\n    >>> below_threshold([1L, 2L, 4L, 10L],\
    \ 100L)\n    true\n    >>> below_threshold([1L, 20L, 4L, 10L], 5L)\n    false\n\
    \    \n*/\nbool below_threshold(long[] l, long t) \n{\n    foreach(long i; l)\n\
    \    {\n        if(i > t)\n            return false;\n    }\n    return true;\n\
    }\nunittest\n{\n    alias candidate = below_threshold;\n\n    assert(candidate([1L,\
    \ 2L, 4L, 10L], 100L) == true);\n    assert(candidate([1L, 20L, 4L, 10L], 5L)\
    \ == false);\n    assert(candidate([1L, 20L, 4L, 10L], 21L) == true);\n    assert(candidate([1L,\
    \ 20L, 4L, 10L], 22L) == true);\n    assert(candidate([1L, 8L, 4L, 10L], 11L)\
    \ == true);\n    assert(candidate([1L, 8L, 4L, 10L], 10L) == false);\n}\nvoid\
    \ main(){}"
  status: Exception
  stderr: 'core.exception.AssertError@/tmp/tmpev0f60w0.d(29): unittest failure

    ----------------

    ??:? _d_unittestp [0x4281dd]

    ??:? void tmpev0f60w0.__unittest_L20_C1() [0x427f4b]

    ??:? void tmpev0f60w0.__modtest() [0x427f60]

    ??:? int core.runtime.runModuleUnitTests().__foreachbody2(object.ModuleInfo*)
    [0x42c1c7]

    ??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)).__lambda2(immutable(object.ModuleInfo*))
    [0x42b05a]

    ??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))).__foreachbody2(ref
    rt.sections_elf_shared.DSO) [0x4301ed]

    ??:? int rt.sections_elf_shared.DSO.opApply(scope int delegate(ref rt.sections_elf_shared.DSO))
    [0x43069c]

    ??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*)))
    [0x430179]

    ??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)) [0x42b031]

    ??:? runModuleUnitTests [0x42bf9d]

    ??:? void rt.dmain2._d_run_main(int, char**, extern (C) int function(char[][])*).runAll()
    [0x42862c]

    ??:? void rt.dmain2._d_r'
  stdout: ''
  timestamp: 1660163090
- exit_code: 0
  program: "import std.typecons;\nimport std.math;\n/*\nReturn True if all numbers\
    \ in the list l are below threshold t.\n    >>> below_threshold([1L, 2L, 4L, 10L],\
    \ 100L)\n    true\n    >>> below_threshold([1L, 20L, 4L, 10L], 5L)\n    false\n\
    \    \n*/\nbool below_threshold(long[] l, long t) \n{\n    foreach(long x; l)\n\
    \        if(x >= t)\n            return false;\n    return true;\n}\nunittest\n\
    {\n    alias candidate = below_threshold;\n\n    assert(candidate([1L, 2L, 4L,\
    \ 10L], 100L) == true);\n    assert(candidate([1L, 20L, 4L, 10L], 5L) == false);\n\
    \    assert(candidate([1L, 20L, 4L, 10L], 21L) == true);\n    assert(candidate([1L,\
    \ 20L, 4L, 10L], 22L) == true);\n    assert(candidate([1L, 8L, 4L, 10L], 11L)\
    \ == true);\n    assert(candidate([1L, 8L, 4L, 10L], 10L) == false);\n}\nvoid\
    \ main(){}"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660163091
- exit_code: 1
  program: "import std.typecons;\nimport std.math;\n/*\nReturn True if all numbers\
    \ in the list l are below threshold t.\n    >>> below_threshold([1L, 2L, 4L, 10L],\
    \ 100L)\n    true\n    >>> below_threshold([1L, 20L, 4L, 10L], 5L)\n    false\n\
    \    \n*/\nbool below_threshold(long[] l, long t) \n{\n    foreach(long x; l)\n\
    \    {\n        if(x > t)\n            return false;\n    }\n    return true;\n\
    }\nunittest\n{\n    alias candidate = below_threshold;\n\n    assert(candidate([1L,\
    \ 2L, 4L, 10L], 100L) == true);\n    assert(candidate([1L, 20L, 4L, 10L], 5L)\
    \ == false);\n    assert(candidate([1L, 20L, 4L, 10L], 21L) == true);\n    assert(candidate([1L,\
    \ 20L, 4L, 10L], 22L) == true);\n    assert(candidate([1L, 8L, 4L, 10L], 11L)\
    \ == true);\n    assert(candidate([1L, 8L, 4L, 10L], 10L) == false);\n}\nvoid\
    \ main(){}"
  status: Exception
  stderr: 'core.exception.AssertError@/tmp/tmpx_fvps4k.d(29): unittest failure

    ----------------

    ??:? _d_unittestp [0x4281dd]

    ??:? void tmpx_fvps4k.__unittest_L20_C1() [0x427f4b]

    ??:? void tmpx_fvps4k.__modtest() [0x427f60]

    ??:? int core.runtime.runModuleUnitTests().__foreachbody2(object.ModuleInfo*)
    [0x42c1c7]

    ??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)).__lambda2(immutable(object.ModuleInfo*))
    [0x42b05a]

    ??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))).__foreachbody2(ref
    rt.sections_elf_shared.DSO) [0x4301ed]

    ??:? int rt.sections_elf_shared.DSO.opApply(scope int delegate(ref rt.sections_elf_shared.DSO))
    [0x43069c]

    ??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*)))
    [0x430179]

    ??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)) [0x42b031]

    ??:? runModuleUnitTests [0x42bf9d]

    ??:? void rt.dmain2._d_run_main(int, char**, extern (C) int function(char[][])*).runAll()
    [0x42862c]

    ??:? void rt.dmain2._d_r'
  stdout: ''
  timestamp: 1660163090
- exit_code: 1
  program: "import std.typecons;\nimport std.math;\n/*\nReturn True if all numbers\
    \ in the list l are below threshold t.\n    >>> below_threshold([1L, 2L, 4L, 10L],\
    \ 100L)\n    true\n    >>> below_threshold([1L, 20L, 4L, 10L], 5L)\n    false\n\
    \    \n*/\nbool below_threshold(long[] l, long t) \n{\n    foreach(long i; l)\n\
    \    {\n        if(i > t)\n            return false;\n    }\n    return true;\n\
    }\nunittest\n{\n    alias candidate = below_threshold;\n\n    assert(candidate([1L,\
    \ 2L, 4L, 10L], 100L) == true);\n    assert(candidate([1L, 20L, 4L, 10L], 5L)\
    \ == false);\n    assert(candidate([1L, 20L, 4L, 10L], 21L) == true);\n    assert(candidate([1L,\
    \ 20L, 4L, 10L], 22L) == true);\n    assert(candidate([1L, 8L, 4L, 10L], 11L)\
    \ == true);\n    assert(candidate([1L, 8L, 4L, 10L], 10L) == false);\n}\nvoid\
    \ main(){}"
  status: Exception
  stderr: 'core.exception.AssertError@/tmp/tmpev0f60w0.d(29): unittest failure

    ----------------

    ??:? _d_unittestp [0x4281dd]

    ??:? void tmpev0f60w0.__unittest_L20_C1() [0x427f4b]

    ??:? void tmpev0f60w0.__modtest() [0x427f60]

    ??:? int core.runtime.runModuleUnitTests().__foreachbody2(object.ModuleInfo*)
    [0x42c1c7]

    ??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)).__lambda2(immutable(object.ModuleInfo*))
    [0x42b05a]

    ??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))).__foreachbody2(ref
    rt.sections_elf_shared.DSO) [0x4301ed]

    ??:? int rt.sections_elf_shared.DSO.opApply(scope int delegate(ref rt.sections_elf_shared.DSO))
    [0x43069c]

    ??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*)))
    [0x430179]

    ??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)) [0x42b031]

    ??:? runModuleUnitTests [0x42bf9d]

    ??:? void rt.dmain2._d_run_main(int, char**, extern (C) int function(char[][])*).runAll()
    [0x42862c]

    ??:? void rt.dmain2._d_r'
  stdout: ''
  timestamp: 1660163090

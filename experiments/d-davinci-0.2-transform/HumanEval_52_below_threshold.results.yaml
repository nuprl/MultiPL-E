language: d
name: HumanEval_52_below_threshold
results:
- exit_code: 1
  program: "import std.typecons;\nimport std.math;\n/*\nReturn True if all numbers\
    \ in the list l are below threshold t.\n    >>> below_threshold([1L, 2L, 4L, 10L],\
    \ 100L)\n    true\n    >>> below_threshold([1L, 20L, 4L, 10L], 5L)\n    false\n\
    \    \n*/\nbool below_threshold(long[] l, long t) \n{\n    foreach(long x; l)\n\
    \    {\n        if(x > t)\n            return false;\n    }\n    return true;\n\
    }\n/*\nReturn the number of elements in the list l that are below threshold t.\n\
    \    >>> count_below_threshold([1L, 2L, 4L, 10L], 100L)\n    4\n    >>> count_below_threshold([1L,\
    \ 20L, 4L, 10L], 5L)\n    2\n*/\nlong count_below_threshold(long[] l, long t)\
    \ \n{\n    long count = 0;\n    foreach(long x; l)\n    {\n        if(x < t)\n\
    \            count++;\n    }\n    return count;\n}\n/*\nReturn the number of elements\
    \ in the list l that are below threshold t.\n    >>> count_below_threshold([1L,\
    \ 2L, 4L, 10L], 100L)\n    4\n    >>> count_below_threshold([1L, 20L, 4L, 10L],\
    \ 5L)\n    2\n*/\nlong count_below_threshold_2(long[] l, long t) \n{\n    long\
    \ count = 0;\n    foreach(long x; l)\n    {\n        if(x < t)\n            count++;\n\
    \    }\n    return count;\n}\n/*\nReturn the number of elements in the list l\
    \ that are below threshold t.\n    >>> count_below_threshold([1L, 2L, 4L, 10L],\
    \ 100L)\n    4\n    >>> count_below_threshold([1L, 20L, 4L, 10L], 5L)\n    2\n\
    */\nlong count_below_threshold_3(long[] l, long t) \n{\n    long count = 0;\n\
    \    foreach(long x; l)\n    {\n        if(x < t)\n            count++;\n    }\n\
    \    return count;\n}\n/*\nReturn the number of elements in the list l that are\
    \ below threshold t.\n    >>> count_below_threshold([1L, 2L, 4L, 10L], 100L)\n\
    \    4\n    >>> count_below_threshold([1L,\nunittest\n{\n    alias candidate =\
    \ below_threshold;\n\n    assert(candidate([1L, 2L, 4L, 10L], 100L) == true);\n\
    \    assert(candidate([1L, 20L, 4L, 10L], 5L) == false);\n    assert(candidate([1L,\
    \ 20L, 4L, 10L], 21L) == true);\n    assert(candidate([1L, 20L, 4L, 10L], 22L)\
    \ == true);\n    assert(candidate([1L, 8L, 4L, 10L], 11L) == true);\n    assert(candidate([1L,\
    \ 8L, 4L, 10L], 10L) == false);\n}\nvoid main(){}"
  status: SyntaxError
  stderr: 'b''/tmp/tmpqozd8bwj.d(71): Error: unterminated /* */ comment\nFailed: ["dmd",
    "-unittest", "-v", "-o-", "/tmp/tmpqozd8bwj.d", "-I/tmp"]\n'''
  stdout: b''
- exit_code: 1
  program: "import std.typecons;\nimport std.math;\n/*\nReturn True if all numbers\
    \ in the list l are below threshold t.\n    >>> below_threshold([1L, 2L, 4L, 10L],\
    \ 100L)\n    true\n    >>> below_threshold([1L, 20L, 4L, 10L], 5L)\n    false\n\
    \    \n*/\nbool below_threshold(long[] l, long t) \n{\n    foreach(i; l) \n  \
    \  {\n        if(i > t) \n        {\n            return false;\n        }\n  \
    \  }\n    return true;\n}\nunittest\n{\n    alias candidate = below_threshold;\n\
    \n    assert(candidate([1L, 2L, 4L, 10L], 100L) == true);\n    assert(candidate([1L,\
    \ 20L, 4L, 10L], 5L) == false);\n    assert(candidate([1L, 20L, 4L, 10L], 21L)\
    \ == true);\n    assert(candidate([1L, 20L, 4L, 10L], 22L) == true);\n    assert(candidate([1L,\
    \ 8L, 4L, 10L], 11L) == true);\n    assert(candidate([1L, 8L, 4L, 10L], 10L) ==\
    \ false);\n}\nvoid main(){}"
  status: Exception
  stderr: 'b''core.exception.AssertError@/tmp/tmpubws1iu7.d(31): unittest failure\n----------------\n??:?
    _d_unittestp [0x4281dd]\n??:? void tmpubws1iu7.__unittest_L22_C1() [0x427f4b]\n??:?
    void tmpubws1iu7.__modtest() [0x427f60]\n??:? int core.runtime.runModuleUnitTests().__foreachbody2(object.ModuleInfo*)
    [0x42c1c7]\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)).__lambda2(immutable(object.ModuleInfo*))
    [0x42b05a]\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))).__foreachbody2(ref
    rt.sections_elf_shared.DSO) [0x4301ed]\n??:? int rt.sections_elf_shared.DSO.opApply(scope
    int delegate(ref rt.sections_elf_shared.DSO)) [0x43069c]\n??:? int rt.minfo.moduleinfos_apply(scope
    int delegate(immutable(object.ModuleInfo*))) [0x430179]\n??:? int object.ModuleInfo.opApply(scope
    int delegate(object.ModuleInfo*)) [0x42b031]\n??:? runModuleUnitTests [0x42bf9d]\n??:?
    void rt.dmain2._d_run_main(int, char**, extern (C) int function(char[][])*).runAll()
    [0x42862c]\n??:? void rt.dmain2._d_run_main(int, char**, extern (C) int function(char[][])*).tryExec(scope
    void delegate()) [0x4285b3]\n??:? _d_run_main [0x42851e]\n??:? main [0x427f73]\n??:?
    __libc_start_main [0xe0f51554]\n1/1 unittests FAILED\n'''
  stdout: b''
- exit_code: 1
  program: "import std.typecons;\nimport std.math;\n/*\nReturn True if all numbers\
    \ in the list l are below threshold t.\n    >>> below_threshold([1L, 2L, 4L, 10L],\
    \ 100L)\n    true\n    >>> below_threshold([1L, 20L, 4L, 10L], 5L)\n    false\n\
    \    \n*/\nbool below_threshold(long[] l, long t) \n{\n    foreach(long i; l)\n\
    \    {\n        if(i > t)\n            return false;\n    }\n    return true;\n\
    }\nunittest\n{\n    alias candidate = below_threshold;\n\n    assert(candidate([1L,\
    \ 2L, 4L, 10L], 100L) == true);\n    assert(candidate([1L, 20L, 4L, 10L], 5L)\
    \ == false);\n    assert(candidate([1L, 20L, 4L, 10L], 21L) == true);\n    assert(candidate([1L,\
    \ 20L, 4L, 10L], 22L) == true);\n    assert(candidate([1L, 8L, 4L, 10L], 11L)\
    \ == true);\n    assert(candidate([1L, 8L, 4L, 10L], 10L) == false);\n}\nvoid\
    \ main(){}"
  status: Exception
  stderr: 'b''core.exception.AssertError@/tmp/tmpnp3ngt9z.d(29): unittest failure\n----------------\n??:?
    _d_unittestp [0x4281dd]\n??:? void tmpnp3ngt9z.__unittest_L20_C1() [0x427f4b]\n??:?
    void tmpnp3ngt9z.__modtest() [0x427f60]\n??:? int core.runtime.runModuleUnitTests().__foreachbody2(object.ModuleInfo*)
    [0x42c1c7]\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)).__lambda2(immutable(object.ModuleInfo*))
    [0x42b05a]\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))).__foreachbody2(ref
    rt.sections_elf_shared.DSO) [0x4301ed]\n??:? int rt.sections_elf_shared.DSO.opApply(scope
    int delegate(ref rt.sections_elf_shared.DSO)) [0x43069c]\n??:? int rt.minfo.moduleinfos_apply(scope
    int delegate(immutable(object.ModuleInfo*))) [0x430179]\n??:? int object.ModuleInfo.opApply(scope
    int delegate(object.ModuleInfo*)) [0x42b031]\n??:? runModuleUnitTests [0x42bf9d]\n??:?
    void rt.dmain2._d_run_main(int, char**, extern (C) int function(char[][])*).runAll()
    [0x42862c]\n??:? void rt.dmain2._d_run_main(int, char**, extern (C) int function(char[][])*).tryExec(scope
    void delegate()) [0x4285b3]\n??:? _d_run_main [0x42851e]\n??:? main [0x427f73]\n??:?
    __libc_start_main [0x76bf1554]\n1/1 unittests FAILED\n'''
  stdout: b''
- exit_code: 1
  program: "import std.typecons;\nimport std.math;\n/*\nReturn True if all numbers\
    \ in the list l are below threshold t.\n    >>> below_threshold([1L, 2L, 4L, 10L],\
    \ 100L)\n    true\n    >>> below_threshold([1L, 20L, 4L, 10L], 5L)\n    false\n\
    \    \n*/\nbool below_threshold(long[] l, long t) \n{\n    foreach(i; l)\n   \
    \ {\n        if(i > t)\n            return false;\n    }\n    return true;\n}\n\
    unittest\n{\n    alias candidate = below_threshold;\n\n    assert(candidate([1L,\
    \ 2L, 4L, 10L], 100L) == true);\n    assert(candidate([1L, 20L, 4L, 10L], 5L)\
    \ == false);\n    assert(candidate([1L, 20L, 4L, 10L], 21L) == true);\n    assert(candidate([1L,\
    \ 20L, 4L, 10L], 22L) == true);\n    assert(candidate([1L, 8L, 4L, 10L], 11L)\
    \ == true);\n    assert(candidate([1L, 8L, 4L, 10L], 10L) == false);\n}\nvoid\
    \ main(){}"
  status: Exception
  stderr: 'b''core.exception.AssertError@/tmp/tmp70o9mbir.d(29): unittest failure\n----------------\n??:?
    _d_unittestp [0x4281dd]\n??:? void tmp70o9mbir.__unittest_L20_C1() [0x427f4b]\n??:?
    void tmp70o9mbir.__modtest() [0x427f60]\n??:? int core.runtime.runModuleUnitTests().__foreachbody2(object.ModuleInfo*)
    [0x42c1c7]\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)).__lambda2(immutable(object.ModuleInfo*))
    [0x42b05a]\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))).__foreachbody2(ref
    rt.sections_elf_shared.DSO) [0x4301ed]\n??:? int rt.sections_elf_shared.DSO.opApply(scope
    int delegate(ref rt.sections_elf_shared.DSO)) [0x43069c]\n??:? int rt.minfo.moduleinfos_apply(scope
    int delegate(immutable(object.ModuleInfo*))) [0x430179]\n??:? int object.ModuleInfo.opApply(scope
    int delegate(object.ModuleInfo*)) [0x42b031]\n??:? runModuleUnitTests [0x42bf9d]\n??:?
    void rt.dmain2._d_run_main(int, char**, extern (C) int function(char[][])*).runAll()
    [0x42862c]\n??:? void rt.dmain2._d_run_main(int, char**, extern (C) int function(char[][])*).tryExec(scope
    void delegate()) [0x4285b3]\n??:? _d_run_main [0x42851e]\n??:? main [0x427f73]\n??:?
    __libc_start_main [0x4442b554]\n1/1 unittests FAILED\n'''
  stdout: b''
- exit_code: 1
  program: "import std.typecons;\nimport std.math;\n/*\nReturn True if all numbers\
    \ in the list l are below threshold t.\n    >>> below_threshold([1L, 2L, 4L, 10L],\
    \ 100L)\n    true\n    >>> below_threshold([1L, 20L, 4L, 10L], 5L)\n    false\n\
    \    \n*/\nbool below_threshold(long[] l, long t) \n{\n    foreach(long i; l)\n\
    \    {\n        if(i > t)\n            return false;\n    }\n    return true;\n\
    }\nunittest\n{\n    alias candidate = below_threshold;\n\n    assert(candidate([1L,\
    \ 2L, 4L, 10L], 100L) == true);\n    assert(candidate([1L, 20L, 4L, 10L], 5L)\
    \ == false);\n    assert(candidate([1L, 20L, 4L, 10L], 21L) == true);\n    assert(candidate([1L,\
    \ 20L, 4L, 10L], 22L) == true);\n    assert(candidate([1L, 8L, 4L, 10L], 11L)\
    \ == true);\n    assert(candidate([1L, 8L, 4L, 10L], 10L) == false);\n}\nvoid\
    \ main(){}"
  status: Exception
  stderr: 'b''core.exception.AssertError@/tmp/tmpnp3ngt9z.d(29): unittest failure\n----------------\n??:?
    _d_unittestp [0x4281dd]\n??:? void tmpnp3ngt9z.__unittest_L20_C1() [0x427f4b]\n??:?
    void tmpnp3ngt9z.__modtest() [0x427f60]\n??:? int core.runtime.runModuleUnitTests().__foreachbody2(object.ModuleInfo*)
    [0x42c1c7]\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)).__lambda2(immutable(object.ModuleInfo*))
    [0x42b05a]\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))).__foreachbody2(ref
    rt.sections_elf_shared.DSO) [0x4301ed]\n??:? int rt.sections_elf_shared.DSO.opApply(scope
    int delegate(ref rt.sections_elf_shared.DSO)) [0x43069c]\n??:? int rt.minfo.moduleinfos_apply(scope
    int delegate(immutable(object.ModuleInfo*))) [0x430179]\n??:? int object.ModuleInfo.opApply(scope
    int delegate(object.ModuleInfo*)) [0x42b031]\n??:? runModuleUnitTests [0x42bf9d]\n??:?
    void rt.dmain2._d_run_main(int, char**, extern (C) int function(char[][])*).runAll()
    [0x42862c]\n??:? void rt.dmain2._d_run_main(int, char**, extern (C) int function(char[][])*).tryExec(scope
    void delegate()) [0x4285b3]\n??:? _d_run_main [0x42851e]\n??:? main [0x427f73]\n??:?
    __libc_start_main [0x76bf1554]\n1/1 unittests FAILED\n'''
  stdout: b''
- exit_code: 1
  program: "import std.typecons;\nimport std.math;\n/*\nReturn True if all numbers\
    \ in the list l are below threshold t.\n    >>> below_threshold([1L, 2L, 4L, 10L],\
    \ 100L)\n    true\n    >>> below_threshold([1L, 20L, 4L, 10L], 5L)\n    false\n\
    \    \n*/\nbool below_threshold(long[] l, long t) \n{\n    foreach(long i; l)\n\
    \    {\n        if(i > t)\n            return false;\n    }\n    return true;\n\
    }\nunittest\n{\n    alias candidate = below_threshold;\n\n    assert(candidate([1L,\
    \ 2L, 4L, 10L], 100L) == true);\n    assert(candidate([1L, 20L, 4L, 10L], 5L)\
    \ == false);\n    assert(candidate([1L, 20L, 4L, 10L], 21L) == true);\n    assert(candidate([1L,\
    \ 20L, 4L, 10L], 22L) == true);\n    assert(candidate([1L, 8L, 4L, 10L], 11L)\
    \ == true);\n    assert(candidate([1L, 8L, 4L, 10L], 10L) == false);\n}\nvoid\
    \ main(){}"
  status: Exception
  stderr: 'b''core.exception.AssertError@/tmp/tmpnp3ngt9z.d(29): unittest failure\n----------------\n??:?
    _d_unittestp [0x4281dd]\n??:? void tmpnp3ngt9z.__unittest_L20_C1() [0x427f4b]\n??:?
    void tmpnp3ngt9z.__modtest() [0x427f60]\n??:? int core.runtime.runModuleUnitTests().__foreachbody2(object.ModuleInfo*)
    [0x42c1c7]\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)).__lambda2(immutable(object.ModuleInfo*))
    [0x42b05a]\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))).__foreachbody2(ref
    rt.sections_elf_shared.DSO) [0x4301ed]\n??:? int rt.sections_elf_shared.DSO.opApply(scope
    int delegate(ref rt.sections_elf_shared.DSO)) [0x43069c]\n??:? int rt.minfo.moduleinfos_apply(scope
    int delegate(immutable(object.ModuleInfo*))) [0x430179]\n??:? int object.ModuleInfo.opApply(scope
    int delegate(object.ModuleInfo*)) [0x42b031]\n??:? runModuleUnitTests [0x42bf9d]\n??:?
    void rt.dmain2._d_run_main(int, char**, extern (C) int function(char[][])*).runAll()
    [0x42862c]\n??:? void rt.dmain2._d_run_main(int, char**, extern (C) int function(char[][])*).tryExec(scope
    void delegate()) [0x4285b3]\n??:? _d_run_main [0x42851e]\n??:? main [0x427f73]\n??:?
    __libc_start_main [0x76bf1554]\n1/1 unittests FAILED\n'''
  stdout: b''
- exit_code: 1
  program: "import std.typecons;\nimport std.math;\n/*\nReturn True if all numbers\
    \ in the list l are below threshold t.\n    >>> below_threshold([1L, 2L, 4L, 10L],\
    \ 100L)\n    true\n    >>> below_threshold([1L, 20L, 4L, 10L], 5L)\n    false\n\
    \    \n*/\nbool below_threshold(long[] l, long t) \n{\n    foreach(i; l)\n   \
    \ {\n        if(i > t)\n            return false;\n    }\n    return true;\n}\n\
    unittest\n{\n    alias candidate = below_threshold;\n\n    assert(candidate([1L,\
    \ 2L, 4L, 10L], 100L) == true);\n    assert(candidate([1L, 20L, 4L, 10L], 5L)\
    \ == false);\n    assert(candidate([1L, 20L, 4L, 10L], 21L) == true);\n    assert(candidate([1L,\
    \ 20L, 4L, 10L], 22L) == true);\n    assert(candidate([1L, 8L, 4L, 10L], 11L)\
    \ == true);\n    assert(candidate([1L, 8L, 4L, 10L], 10L) == false);\n}\nvoid\
    \ main(){}"
  status: Exception
  stderr: 'b''core.exception.AssertError@/tmp/tmp70o9mbir.d(29): unittest failure\n----------------\n??:?
    _d_unittestp [0x4281dd]\n??:? void tmp70o9mbir.__unittest_L20_C1() [0x427f4b]\n??:?
    void tmp70o9mbir.__modtest() [0x427f60]\n??:? int core.runtime.runModuleUnitTests().__foreachbody2(object.ModuleInfo*)
    [0x42c1c7]\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)).__lambda2(immutable(object.ModuleInfo*))
    [0x42b05a]\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))).__foreachbody2(ref
    rt.sections_elf_shared.DSO) [0x4301ed]\n??:? int rt.sections_elf_shared.DSO.opApply(scope
    int delegate(ref rt.sections_elf_shared.DSO)) [0x43069c]\n??:? int rt.minfo.moduleinfos_apply(scope
    int delegate(immutable(object.ModuleInfo*))) [0x430179]\n??:? int object.ModuleInfo.opApply(scope
    int delegate(object.ModuleInfo*)) [0x42b031]\n??:? runModuleUnitTests [0x42bf9d]\n??:?
    void rt.dmain2._d_run_main(int, char**, extern (C) int function(char[][])*).runAll()
    [0x42862c]\n??:? void rt.dmain2._d_run_main(int, char**, extern (C) int function(char[][])*).tryExec(scope
    void delegate()) [0x4285b3]\n??:? _d_run_main [0x42851e]\n??:? main [0x427f73]\n??:?
    __libc_start_main [0x4442b554]\n1/1 unittests FAILED\n'''
  stdout: b''
- exit_code: 1
  program: "import std.typecons;\nimport std.math;\n/*\nReturn True if all numbers\
    \ in the list l are below threshold t.\n    >>> below_threshold([1L, 2L, 4L, 10L],\
    \ 100L)\n    true\n    >>> below_threshold([1L, 20L, 4L, 10L], 5L)\n    false\n\
    \    \n*/\nbool below_threshold(long[] l, long t) \n{\n    foreach(long i; l)\n\
    \    {\n        if(i > t)\n            return false;\n    }\n    return true;\n\
    }\n/*\nReturn True if all numbers in the list l are below threshold t.\n    >>>\
    \ below_threshold([1L, 2L, 4L, 10L], 100L)\n    true\n    >>> below_threshold([1L,\
    \ 20L, 4L, 10L], 5L)\n    false\n    \n*/\nunittest\n{\n    alias candidate =\
    \ below_threshold;\n\n    assert(candidate([1L, 2L, 4L, 10L], 100L) == true);\n\
    \    assert(candidate([1L, 20L, 4L, 10L], 5L) == false);\n    assert(candidate([1L,\
    \ 20L, 4L, 10L], 21L) == true);\n    assert(candidate([1L, 20L, 4L, 10L], 22L)\
    \ == true);\n    assert(candidate([1L, 8L, 4L, 10L], 11L) == true);\n    assert(candidate([1L,\
    \ 8L, 4L, 10L], 10L) == false);\n}\nvoid main(){}"
  status: Exception
  stderr: 'b''core.exception.AssertError@/tmp/tmp8wym03d7.d(37): unittest failure\n----------------\n??:?
    _d_unittestp [0x4281dd]\n??:? void tmp8wym03d7.__unittest_L28_C1() [0x427f4b]\n??:?
    void tmp8wym03d7.__modtest() [0x427f60]\n??:? int core.runtime.runModuleUnitTests().__foreachbody2(object.ModuleInfo*)
    [0x42c1c7]\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)).__lambda2(immutable(object.ModuleInfo*))
    [0x42b05a]\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))).__foreachbody2(ref
    rt.sections_elf_shared.DSO) [0x4301ed]\n??:? int rt.sections_elf_shared.DSO.opApply(scope
    int delegate(ref rt.sections_elf_shared.DSO)) [0x43069c]\n??:? int rt.minfo.moduleinfos_apply(scope
    int delegate(immutable(object.ModuleInfo*))) [0x430179]\n??:? int object.ModuleInfo.opApply(scope
    int delegate(object.ModuleInfo*)) [0x42b031]\n??:? runModuleUnitTests [0x42bf9d]\n??:?
    void rt.dmain2._d_run_main(int, char**, extern (C) int function(char[][])*).runAll()
    [0x42862c]\n??:? void rt.dmain2._d_run_main(int, char**, extern (C) int function(char[][])*).tryExec(scope
    void delegate()) [0x4285b3]\n??:? _d_run_main [0x42851e]\n??:? main [0x427f73]\n??:?
    __libc_start_main [0xae708554]\n1/1 unittests FAILED\n'''
  stdout: b''
- exit_code: 1
  program: "import std.typecons;\nimport std.math;\n/*\nReturn True if all numbers\
    \ in the list l are below threshold t.\n    >>> below_threshold([1L, 2L, 4L, 10L],\
    \ 100L)\n    true\n    >>> below_threshold([1L, 20L, 4L, 10L], 5L)\n    false\n\
    \    \n*/\nbool below_threshold(long[] l, long t) \n{\n    foreach(i; l)\n   \
    \ {\n        if(i > t)\n            return false;\n    }\n    return true;\n}\n\
    unittest\n{\n    alias candidate = below_threshold;\n\n    assert(candidate([1L,\
    \ 2L, 4L, 10L], 100L) == true);\n    assert(candidate([1L, 20L, 4L, 10L], 5L)\
    \ == false);\n    assert(candidate([1L, 20L, 4L, 10L], 21L) == true);\n    assert(candidate([1L,\
    \ 20L, 4L, 10L], 22L) == true);\n    assert(candidate([1L, 8L, 4L, 10L], 11L)\
    \ == true);\n    assert(candidate([1L, 8L, 4L, 10L], 10L) == false);\n}\nvoid\
    \ main(){}"
  status: Exception
  stderr: 'b''core.exception.AssertError@/tmp/tmp70o9mbir.d(29): unittest failure\n----------------\n??:?
    _d_unittestp [0x4281dd]\n??:? void tmp70o9mbir.__unittest_L20_C1() [0x427f4b]\n??:?
    void tmp70o9mbir.__modtest() [0x427f60]\n??:? int core.runtime.runModuleUnitTests().__foreachbody2(object.ModuleInfo*)
    [0x42c1c7]\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)).__lambda2(immutable(object.ModuleInfo*))
    [0x42b05a]\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))).__foreachbody2(ref
    rt.sections_elf_shared.DSO) [0x4301ed]\n??:? int rt.sections_elf_shared.DSO.opApply(scope
    int delegate(ref rt.sections_elf_shared.DSO)) [0x43069c]\n??:? int rt.minfo.moduleinfos_apply(scope
    int delegate(immutable(object.ModuleInfo*))) [0x430179]\n??:? int object.ModuleInfo.opApply(scope
    int delegate(object.ModuleInfo*)) [0x42b031]\n??:? runModuleUnitTests [0x42bf9d]\n??:?
    void rt.dmain2._d_run_main(int, char**, extern (C) int function(char[][])*).runAll()
    [0x42862c]\n??:? void rt.dmain2._d_run_main(int, char**, extern (C) int function(char[][])*).tryExec(scope
    void delegate()) [0x4285b3]\n??:? _d_run_main [0x42851e]\n??:? main [0x427f73]\n??:?
    __libc_start_main [0x4442b554]\n1/1 unittests FAILED\n'''
  stdout: b''
- exit_code: 1
  program: "import std.typecons;\nimport std.math;\n/*\nReturn True if all numbers\
    \ in the list l are below threshold t.\n    >>> below_threshold([1L, 2L, 4L, 10L],\
    \ 100L)\n    true\n    >>> below_threshold([1L, 20L, 4L, 10L], 5L)\n    false\n\
    \    \n*/\nbool below_threshold(long[] l, long t) \n{\n    foreach(i; l)\n   \
    \ {\n        if(i > t)\n            return false;\n    }\n    return true;\n}\n\
    unittest\n{\n    alias candidate = below_threshold;\n\n    assert(candidate([1L,\
    \ 2L, 4L, 10L], 100L) == true);\n    assert(candidate([1L, 20L, 4L, 10L], 5L)\
    \ == false);\n    assert(candidate([1L, 20L, 4L, 10L], 21L) == true);\n    assert(candidate([1L,\
    \ 20L, 4L, 10L], 22L) == true);\n    assert(candidate([1L, 8L, 4L, 10L], 11L)\
    \ == true);\n    assert(candidate([1L, 8L, 4L, 10L], 10L) == false);\n}\nvoid\
    \ main(){}"
  status: Exception
  stderr: 'b''core.exception.AssertError@/tmp/tmp70o9mbir.d(29): unittest failure\n----------------\n??:?
    _d_unittestp [0x4281dd]\n??:? void tmp70o9mbir.__unittest_L20_C1() [0x427f4b]\n??:?
    void tmp70o9mbir.__modtest() [0x427f60]\n??:? int core.runtime.runModuleUnitTests().__foreachbody2(object.ModuleInfo*)
    [0x42c1c7]\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)).__lambda2(immutable(object.ModuleInfo*))
    [0x42b05a]\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))).__foreachbody2(ref
    rt.sections_elf_shared.DSO) [0x4301ed]\n??:? int rt.sections_elf_shared.DSO.opApply(scope
    int delegate(ref rt.sections_elf_shared.DSO)) [0x43069c]\n??:? int rt.minfo.moduleinfos_apply(scope
    int delegate(immutable(object.ModuleInfo*))) [0x430179]\n??:? int object.ModuleInfo.opApply(scope
    int delegate(object.ModuleInfo*)) [0x42b031]\n??:? runModuleUnitTests [0x42bf9d]\n??:?
    void rt.dmain2._d_run_main(int, char**, extern (C) int function(char[][])*).runAll()
    [0x42862c]\n??:? void rt.dmain2._d_run_main(int, char**, extern (C) int function(char[][])*).tryExec(scope
    void delegate()) [0x4285b3]\n??:? _d_run_main [0x42851e]\n??:? main [0x427f73]\n??:?
    __libc_start_main [0x4442b554]\n1/1 unittests FAILED\n'''
  stdout: b''
- exit_code: 1
  program: "import std.typecons;\nimport std.math;\n/*\nReturn True if all numbers\
    \ in the list l are below threshold t.\n    >>> below_threshold([1L, 2L, 4L, 10L],\
    \ 100L)\n    true\n    >>> below_threshold([1L, 20L, 4L, 10L], 5L)\n    false\n\
    \    \n*/\nbool below_threshold(long[] l, long t) \n{\n    foreach(i; l)\n   \
    \ {\n        if(i > t)\n            return false;\n    }\n    return true;\n}\n\
    unittest\n{\n    alias candidate = below_threshold;\n\n    assert(candidate([1L,\
    \ 2L, 4L, 10L], 100L) == true);\n    assert(candidate([1L, 20L, 4L, 10L], 5L)\
    \ == false);\n    assert(candidate([1L, 20L, 4L, 10L], 21L) == true);\n    assert(candidate([1L,\
    \ 20L, 4L, 10L], 22L) == true);\n    assert(candidate([1L, 8L, 4L, 10L], 11L)\
    \ == true);\n    assert(candidate([1L, 8L, 4L, 10L], 10L) == false);\n}\nvoid\
    \ main(){}"
  status: Exception
  stderr: 'b''core.exception.AssertError@/tmp/tmp70o9mbir.d(29): unittest failure\n----------------\n??:?
    _d_unittestp [0x4281dd]\n??:? void tmp70o9mbir.__unittest_L20_C1() [0x427f4b]\n??:?
    void tmp70o9mbir.__modtest() [0x427f60]\n??:? int core.runtime.runModuleUnitTests().__foreachbody2(object.ModuleInfo*)
    [0x42c1c7]\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)).__lambda2(immutable(object.ModuleInfo*))
    [0x42b05a]\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))).__foreachbody2(ref
    rt.sections_elf_shared.DSO) [0x4301ed]\n??:? int rt.sections_elf_shared.DSO.opApply(scope
    int delegate(ref rt.sections_elf_shared.DSO)) [0x43069c]\n??:? int rt.minfo.moduleinfos_apply(scope
    int delegate(immutable(object.ModuleInfo*))) [0x430179]\n??:? int object.ModuleInfo.opApply(scope
    int delegate(object.ModuleInfo*)) [0x42b031]\n??:? runModuleUnitTests [0x42bf9d]\n??:?
    void rt.dmain2._d_run_main(int, char**, extern (C) int function(char[][])*).runAll()
    [0x42862c]\n??:? void rt.dmain2._d_run_main(int, char**, extern (C) int function(char[][])*).tryExec(scope
    void delegate()) [0x4285b3]\n??:? _d_run_main [0x42851e]\n??:? main [0x427f73]\n??:?
    __libc_start_main [0x4442b554]\n1/1 unittests FAILED\n'''
  stdout: b''
- exit_code: 0
  program: "import std.typecons;\nimport std.math;\n/*\nReturn True if all numbers\
    \ in the list l are below threshold t.\n    >>> below_threshold([1L, 2L, 4L, 10L],\
    \ 100L)\n    true\n    >>> below_threshold([1L, 20L, 4L, 10L], 5L)\n    false\n\
    \    \n*/\nbool below_threshold(long[] l, long t) \n{\n    foreach(long i; l)\n\
    \    {\n        if(i >= t)\n            return false;\n    }\n    return true;\n\
    }\nunittest\n{\n    alias candidate = below_threshold;\n\n    assert(candidate([1L,\
    \ 2L, 4L, 10L], 100L) == true);\n    assert(candidate([1L, 20L, 4L, 10L], 5L)\
    \ == false);\n    assert(candidate([1L, 20L, 4L, 10L], 21L) == true);\n    assert(candidate([1L,\
    \ 20L, 4L, 10L], 22L) == true);\n    assert(candidate([1L, 8L, 4L, 10L], 11L)\
    \ == true);\n    assert(candidate([1L, 8L, 4L, 10L], 10L) == false);\n}\nvoid\
    \ main(){}"
  status: OK
  stderr: b''
  stdout: b''
- exit_code: 0
  program: "import std.typecons;\nimport std.math;\n/*\nReturn True if all numbers\
    \ in the list l are below threshold t.\n    >>> below_threshold([1L, 2L, 4L, 10L],\
    \ 100L)\n    true\n    >>> below_threshold([1L, 20L, 4L, 10L], 5L)\n    false\n\
    \    \n*/\nbool below_threshold(long[] l, long t) \n{\n    foreach(long n; l)\n\
    \    {\n        if(n >= t)\n            return false;\n    }\n    return true;\n\
    }\nunittest\n{\n    alias candidate = below_threshold;\n\n    assert(candidate([1L,\
    \ 2L, 4L, 10L], 100L) == true);\n    assert(candidate([1L, 20L, 4L, 10L], 5L)\
    \ == false);\n    assert(candidate([1L, 20L, 4L, 10L], 21L) == true);\n    assert(candidate([1L,\
    \ 20L, 4L, 10L], 22L) == true);\n    assert(candidate([1L, 8L, 4L, 10L], 11L)\
    \ == true);\n    assert(candidate([1L, 8L, 4L, 10L], 10L) == false);\n}\nvoid\
    \ main(){}"
  status: OK
  stderr: b''
  stdout: b''
- exit_code: 1
  program: "import std.typecons;\nimport std.math;\n/*\nReturn True if all numbers\
    \ in the list l are below threshold t.\n    >>> below_threshold([1L, 2L, 4L, 10L],\
    \ 100L)\n    true\n    >>> below_threshold([1L, 20L, 4L, 10L], 5L)\n    false\n\
    \    \n*/\nbool below_threshold(long[] l, long t) \n{\n    foreach(x; l)\n   \
    \ {\n        if(x > t)\n            return false;\n    }\n    return true;\n}\n\
    unittest\n{\n    alias candidate = below_threshold;\n\n    assert(candidate([1L,\
    \ 2L, 4L, 10L], 100L) == true);\n    assert(candidate([1L, 20L, 4L, 10L], 5L)\
    \ == false);\n    assert(candidate([1L, 20L, 4L, 10L], 21L) == true);\n    assert(candidate([1L,\
    \ 20L, 4L, 10L], 22L) == true);\n    assert(candidate([1L, 8L, 4L, 10L], 11L)\
    \ == true);\n    assert(candidate([1L, 8L, 4L, 10L], 10L) == false);\n}\nvoid\
    \ main(){}"
  status: Exception
  stderr: 'b''core.exception.AssertError@/tmp/tmp762c1vwx.d(29): unittest failure\n----------------\n??:?
    _d_unittestp [0x4281dd]\n??:? void tmp762c1vwx.__unittest_L20_C1() [0x427f4b]\n??:?
    void tmp762c1vwx.__modtest() [0x427f60]\n??:? int core.runtime.runModuleUnitTests().__foreachbody2(object.ModuleInfo*)
    [0x42c1c7]\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)).__lambda2(immutable(object.ModuleInfo*))
    [0x42b05a]\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))).__foreachbody2(ref
    rt.sections_elf_shared.DSO) [0x4301ed]\n??:? int rt.sections_elf_shared.DSO.opApply(scope
    int delegate(ref rt.sections_elf_shared.DSO)) [0x43069c]\n??:? int rt.minfo.moduleinfos_apply(scope
    int delegate(immutable(object.ModuleInfo*))) [0x430179]\n??:? int object.ModuleInfo.opApply(scope
    int delegate(object.ModuleInfo*)) [0x42b031]\n??:? runModuleUnitTests [0x42bf9d]\n??:?
    void rt.dmain2._d_run_main(int, char**, extern (C) int function(char[][])*).runAll()
    [0x42862c]\n??:? void rt.dmain2._d_run_main(int, char**, extern (C) int function(char[][])*).tryExec(scope
    void delegate()) [0x4285b3]\n??:? _d_run_main [0x42851e]\n??:? main [0x427f73]\n??:?
    __libc_start_main [0x1b6ed554]\n1/1 unittests FAILED\n'''
  stdout: b''
- exit_code: 1
  program: "import std.typecons;\nimport std.math;\n/*\nReturn True if all numbers\
    \ in the list l are below threshold t.\n    >>> below_threshold([1L, 2L, 4L, 10L],\
    \ 100L)\n    true\n    >>> below_threshold([1L, 20L, 4L, 10L], 5L)\n    false\n\
    \    \n*/\nbool below_threshold(long[] l, long t) \n{\n    foreach(x; l)\n   \
    \ {\n        if(x > t)\n            return false;\n    }\n    return true;\n}\n\
    unittest\n{\n    alias candidate = below_threshold;\n\n    assert(candidate([1L,\
    \ 2L, 4L, 10L], 100L) == true);\n    assert(candidate([1L, 20L, 4L, 10L], 5L)\
    \ == false);\n    assert(candidate([1L, 20L, 4L, 10L], 21L) == true);\n    assert(candidate([1L,\
    \ 20L, 4L, 10L], 22L) == true);\n    assert(candidate([1L, 8L, 4L, 10L], 11L)\
    \ == true);\n    assert(candidate([1L, 8L, 4L, 10L], 10L) == false);\n}\nvoid\
    \ main(){}"
  status: Exception
  stderr: 'b''core.exception.AssertError@/tmp/tmp762c1vwx.d(29): unittest failure\n----------------\n??:?
    _d_unittestp [0x4281dd]\n??:? void tmp762c1vwx.__unittest_L20_C1() [0x427f4b]\n??:?
    void tmp762c1vwx.__modtest() [0x427f60]\n??:? int core.runtime.runModuleUnitTests().__foreachbody2(object.ModuleInfo*)
    [0x42c1c7]\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)).__lambda2(immutable(object.ModuleInfo*))
    [0x42b05a]\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))).__foreachbody2(ref
    rt.sections_elf_shared.DSO) [0x4301ed]\n??:? int rt.sections_elf_shared.DSO.opApply(scope
    int delegate(ref rt.sections_elf_shared.DSO)) [0x43069c]\n??:? int rt.minfo.moduleinfos_apply(scope
    int delegate(immutable(object.ModuleInfo*))) [0x430179]\n??:? int object.ModuleInfo.opApply(scope
    int delegate(object.ModuleInfo*)) [0x42b031]\n??:? runModuleUnitTests [0x42bf9d]\n??:?
    void rt.dmain2._d_run_main(int, char**, extern (C) int function(char[][])*).runAll()
    [0x42862c]\n??:? void rt.dmain2._d_run_main(int, char**, extern (C) int function(char[][])*).tryExec(scope
    void delegate()) [0x4285b3]\n??:? _d_run_main [0x42851e]\n??:? main [0x427f73]\n??:?
    __libc_start_main [0x1b6ed554]\n1/1 unittests FAILED\n'''
  stdout: b''
- exit_code: 1
  program: "import std.typecons;\nimport std.math;\n/*\nReturn True if all numbers\
    \ in the list l are below threshold t.\n    >>> below_threshold([1L, 2L, 4L, 10L],\
    \ 100L)\n    true\n    >>> below_threshold([1L, 20L, 4L, 10L], 5L)\n    false\n\
    \    \n*/\nbool below_threshold(long[] l, long t) \n{\n    foreach(long i; l)\n\
    \    {\n        if(i > t)\n            return false;\n    }\n    return true;\n\
    }\nunittest\n{\n    alias candidate = below_threshold;\n\n    assert(candidate([1L,\
    \ 2L, 4L, 10L], 100L) == true);\n    assert(candidate([1L, 20L, 4L, 10L], 5L)\
    \ == false);\n    assert(candidate([1L, 20L, 4L, 10L], 21L) == true);\n    assert(candidate([1L,\
    \ 20L, 4L, 10L], 22L) == true);\n    assert(candidate([1L, 8L, 4L, 10L], 11L)\
    \ == true);\n    assert(candidate([1L, 8L, 4L, 10L], 10L) == false);\n}\nvoid\
    \ main(){}"
  status: Exception
  stderr: 'b''core.exception.AssertError@/tmp/tmpnp3ngt9z.d(29): unittest failure\n----------------\n??:?
    _d_unittestp [0x4281dd]\n??:? void tmpnp3ngt9z.__unittest_L20_C1() [0x427f4b]\n??:?
    void tmpnp3ngt9z.__modtest() [0x427f60]\n??:? int core.runtime.runModuleUnitTests().__foreachbody2(object.ModuleInfo*)
    [0x42c1c7]\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)).__lambda2(immutable(object.ModuleInfo*))
    [0x42b05a]\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))).__foreachbody2(ref
    rt.sections_elf_shared.DSO) [0x4301ed]\n??:? int rt.sections_elf_shared.DSO.opApply(scope
    int delegate(ref rt.sections_elf_shared.DSO)) [0x43069c]\n??:? int rt.minfo.moduleinfos_apply(scope
    int delegate(immutable(object.ModuleInfo*))) [0x430179]\n??:? int object.ModuleInfo.opApply(scope
    int delegate(object.ModuleInfo*)) [0x42b031]\n??:? runModuleUnitTests [0x42bf9d]\n??:?
    void rt.dmain2._d_run_main(int, char**, extern (C) int function(char[][])*).runAll()
    [0x42862c]\n??:? void rt.dmain2._d_run_main(int, char**, extern (C) int function(char[][])*).tryExec(scope
    void delegate()) [0x4285b3]\n??:? _d_run_main [0x42851e]\n??:? main [0x427f73]\n??:?
    __libc_start_main [0x76bf1554]\n1/1 unittests FAILED\n'''
  stdout: b''
- exit_code: 1
  program: "import std.typecons;\nimport std.math;\n/*\nReturn True if all numbers\
    \ in the list l are below threshold t.\n    >>> below_threshold([1L, 2L, 4L, 10L],\
    \ 100L)\n    true\n    >>> below_threshold([1L, 20L, 4L, 10L], 5L)\n    false\n\
    \    \n*/\nbool below_threshold(long[] l, long t) \n{\n    foreach(i; l)\n   \
    \ {\n        if(i > t)\n            return false;\n    }\n    return true;\n}\n\
    unittest\n{\n    alias candidate = below_threshold;\n\n    assert(candidate([1L,\
    \ 2L, 4L, 10L], 100L) == true);\n    assert(candidate([1L, 20L, 4L, 10L], 5L)\
    \ == false);\n    assert(candidate([1L, 20L, 4L, 10L], 21L) == true);\n    assert(candidate([1L,\
    \ 20L, 4L, 10L], 22L) == true);\n    assert(candidate([1L, 8L, 4L, 10L], 11L)\
    \ == true);\n    assert(candidate([1L, 8L, 4L, 10L], 10L) == false);\n}\nvoid\
    \ main(){}"
  status: Exception
  stderr: 'b''core.exception.AssertError@/tmp/tmp70o9mbir.d(29): unittest failure\n----------------\n??:?
    _d_unittestp [0x4281dd]\n??:? void tmp70o9mbir.__unittest_L20_C1() [0x427f4b]\n??:?
    void tmp70o9mbir.__modtest() [0x427f60]\n??:? int core.runtime.runModuleUnitTests().__foreachbody2(object.ModuleInfo*)
    [0x42c1c7]\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)).__lambda2(immutable(object.ModuleInfo*))
    [0x42b05a]\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))).__foreachbody2(ref
    rt.sections_elf_shared.DSO) [0x4301ed]\n??:? int rt.sections_elf_shared.DSO.opApply(scope
    int delegate(ref rt.sections_elf_shared.DSO)) [0x43069c]\n??:? int rt.minfo.moduleinfos_apply(scope
    int delegate(immutable(object.ModuleInfo*))) [0x430179]\n??:? int object.ModuleInfo.opApply(scope
    int delegate(object.ModuleInfo*)) [0x42b031]\n??:? runModuleUnitTests [0x42bf9d]\n??:?
    void rt.dmain2._d_run_main(int, char**, extern (C) int function(char[][])*).runAll()
    [0x42862c]\n??:? void rt.dmain2._d_run_main(int, char**, extern (C) int function(char[][])*).tryExec(scope
    void delegate()) [0x4285b3]\n??:? _d_run_main [0x42851e]\n??:? main [0x427f73]\n??:?
    __libc_start_main [0x4442b554]\n1/1 unittests FAILED\n'''
  stdout: b''
- exit_code: 1
  program: "import std.typecons;\nimport std.math;\n/*\nReturn True if all numbers\
    \ in the list l are below threshold t.\n    >>> below_threshold([1L, 2L, 4L, 10L],\
    \ 100L)\n    true\n    >>> below_threshold([1L, 20L, 4L, 10L], 5L)\n    false\n\
    \    \n*/\nbool below_threshold(long[] l, long t) \n{\n    foreach(long i; l)\n\
    \    {\n        if(i > t)\n            return false;\n    }\n    return true;\n\
    }\nunittest\n{\n    alias candidate = below_threshold;\n\n    assert(candidate([1L,\
    \ 2L, 4L, 10L], 100L) == true);\n    assert(candidate([1L, 20L, 4L, 10L], 5L)\
    \ == false);\n    assert(candidate([1L, 20L, 4L, 10L], 21L) == true);\n    assert(candidate([1L,\
    \ 20L, 4L, 10L], 22L) == true);\n    assert(candidate([1L, 8L, 4L, 10L], 11L)\
    \ == true);\n    assert(candidate([1L, 8L, 4L, 10L], 10L) == false);\n}\nvoid\
    \ main(){}"
  status: Exception
  stderr: 'b''core.exception.AssertError@/tmp/tmpnp3ngt9z.d(29): unittest failure\n----------------\n??:?
    _d_unittestp [0x4281dd]\n??:? void tmpnp3ngt9z.__unittest_L20_C1() [0x427f4b]\n??:?
    void tmpnp3ngt9z.__modtest() [0x427f60]\n??:? int core.runtime.runModuleUnitTests().__foreachbody2(object.ModuleInfo*)
    [0x42c1c7]\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)).__lambda2(immutable(object.ModuleInfo*))
    [0x42b05a]\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))).__foreachbody2(ref
    rt.sections_elf_shared.DSO) [0x4301ed]\n??:? int rt.sections_elf_shared.DSO.opApply(scope
    int delegate(ref rt.sections_elf_shared.DSO)) [0x43069c]\n??:? int rt.minfo.moduleinfos_apply(scope
    int delegate(immutable(object.ModuleInfo*))) [0x430179]\n??:? int object.ModuleInfo.opApply(scope
    int delegate(object.ModuleInfo*)) [0x42b031]\n??:? runModuleUnitTests [0x42bf9d]\n??:?
    void rt.dmain2._d_run_main(int, char**, extern (C) int function(char[][])*).runAll()
    [0x42862c]\n??:? void rt.dmain2._d_run_main(int, char**, extern (C) int function(char[][])*).tryExec(scope
    void delegate()) [0x4285b3]\n??:? _d_run_main [0x42851e]\n??:? main [0x427f73]\n??:?
    __libc_start_main [0x76bf1554]\n1/1 unittests FAILED\n'''
  stdout: b''
- exit_code: 0
  program: "import std.typecons;\nimport std.math;\n/*\nReturn True if all numbers\
    \ in the list l are below threshold t.\n    >>> below_threshold([1L, 2L, 4L, 10L],\
    \ 100L)\n    true\n    >>> below_threshold([1L, 20L, 4L, 10L], 5L)\n    false\n\
    \    \n*/\nbool below_threshold(long[] l, long t) \n{\n    foreach(long x; l)\n\
    \    {\n        if(x >= t)\n            return false;\n    }\n    return true;\n\
    }\nunittest\n{\n    alias candidate = below_threshold;\n\n    assert(candidate([1L,\
    \ 2L, 4L, 10L], 100L) == true);\n    assert(candidate([1L, 20L, 4L, 10L], 5L)\
    \ == false);\n    assert(candidate([1L, 20L, 4L, 10L], 21L) == true);\n    assert(candidate([1L,\
    \ 20L, 4L, 10L], 22L) == true);\n    assert(candidate([1L, 8L, 4L, 10L], 11L)\
    \ == true);\n    assert(candidate([1L, 8L, 4L, 10L], 10L) == false);\n}\nvoid\
    \ main(){}"
  status: OK
  stderr: b''
  stdout: b''
- exit_code: 1
  program: "import std.typecons;\nimport std.math;\n/*\nReturn True if all numbers\
    \ in the list l are below threshold t.\n    >>> below_threshold([1L, 2L, 4L, 10L],\
    \ 100L)\n    true\n    >>> below_threshold([1L, 20L, 4L, 10L], 5L)\n    false\n\
    \    \n*/\nbool below_threshold(long[] l, long t) \n{\n    foreach(long i; l)\n\
    \    {\n        if(i > t)\n            return false;\n    }\n    return true;\n\
    }\n/*\nReturn True if all numbers in the list l are below threshold t.\n    >>>\
    \ below_threshold([1L, 2L, 4L, 10L], 100L)\n    true\n    >>> below_threshold([1L,\
    \ 20L, 4L, 10L], 5L)\n    false\n    \n*/\nunittest\n{\n    alias candidate =\
    \ below_threshold;\n\n    assert(candidate([1L, 2L, 4L, 10L], 100L) == true);\n\
    \    assert(candidate([1L, 20L, 4L, 10L], 5L) == false);\n    assert(candidate([1L,\
    \ 20L, 4L, 10L], 21L) == true);\n    assert(candidate([1L, 20L, 4L, 10L], 22L)\
    \ == true);\n    assert(candidate([1L, 8L, 4L, 10L], 11L) == true);\n    assert(candidate([1L,\
    \ 8L, 4L, 10L], 10L) == false);\n}\nvoid main(){}"
  status: Exception
  stderr: 'b''core.exception.AssertError@/tmp/tmp8wym03d7.d(37): unittest failure\n----------------\n??:?
    _d_unittestp [0x4281dd]\n??:? void tmp8wym03d7.__unittest_L28_C1() [0x427f4b]\n??:?
    void tmp8wym03d7.__modtest() [0x427f60]\n??:? int core.runtime.runModuleUnitTests().__foreachbody2(object.ModuleInfo*)
    [0x42c1c7]\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)).__lambda2(immutable(object.ModuleInfo*))
    [0x42b05a]\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))).__foreachbody2(ref
    rt.sections_elf_shared.DSO) [0x4301ed]\n??:? int rt.sections_elf_shared.DSO.opApply(scope
    int delegate(ref rt.sections_elf_shared.DSO)) [0x43069c]\n??:? int rt.minfo.moduleinfos_apply(scope
    int delegate(immutable(object.ModuleInfo*))) [0x430179]\n??:? int object.ModuleInfo.opApply(scope
    int delegate(object.ModuleInfo*)) [0x42b031]\n??:? runModuleUnitTests [0x42bf9d]\n??:?
    void rt.dmain2._d_run_main(int, char**, extern (C) int function(char[][])*).runAll()
    [0x42862c]\n??:? void rt.dmain2._d_run_main(int, char**, extern (C) int function(char[][])*).tryExec(scope
    void delegate()) [0x4285b3]\n??:? _d_run_main [0x42851e]\n??:? main [0x427f73]\n??:?
    __libc_start_main [0xae708554]\n1/1 unittests FAILED\n'''
  stdout: b''
- exit_code: 1
  program: "import std.typecons;\nimport std.math;\n/*\nReturn True if all numbers\
    \ in the list l are below threshold t.\n    >>> below_threshold([1L, 2L, 4L, 10L],\
    \ 100L)\n    true\n    >>> below_threshold([1L, 20L, 4L, 10L], 5L)\n    false\n\
    \    \n*/\nbool below_threshold(long[] l, long t) \n{\n    foreach(i; l)\n   \
    \ {\n        if(i > t)\n            return false;\n    }\n    return true;\n}\n\
    unittest\n{\n    alias candidate = below_threshold;\n\n    assert(candidate([1L,\
    \ 2L, 4L, 10L], 100L) == true);\n    assert(candidate([1L, 20L, 4L, 10L], 5L)\
    \ == false);\n    assert(candidate([1L, 20L, 4L, 10L], 21L) == true);\n    assert(candidate([1L,\
    \ 20L, 4L, 10L], 22L) == true);\n    assert(candidate([1L, 8L, 4L, 10L], 11L)\
    \ == true);\n    assert(candidate([1L, 8L, 4L, 10L], 10L) == false);\n}\nvoid\
    \ main(){}"
  status: Exception
  stderr: 'b''core.exception.AssertError@/tmp/tmp70o9mbir.d(29): unittest failure\n----------------\n??:?
    _d_unittestp [0x4281dd]\n??:? void tmp70o9mbir.__unittest_L20_C1() [0x427f4b]\n??:?
    void tmp70o9mbir.__modtest() [0x427f60]\n??:? int core.runtime.runModuleUnitTests().__foreachbody2(object.ModuleInfo*)
    [0x42c1c7]\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)).__lambda2(immutable(object.ModuleInfo*))
    [0x42b05a]\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))).__foreachbody2(ref
    rt.sections_elf_shared.DSO) [0x4301ed]\n??:? int rt.sections_elf_shared.DSO.opApply(scope
    int delegate(ref rt.sections_elf_shared.DSO)) [0x43069c]\n??:? int rt.minfo.moduleinfos_apply(scope
    int delegate(immutable(object.ModuleInfo*))) [0x430179]\n??:? int object.ModuleInfo.opApply(scope
    int delegate(object.ModuleInfo*)) [0x42b031]\n??:? runModuleUnitTests [0x42bf9d]\n??:?
    void rt.dmain2._d_run_main(int, char**, extern (C) int function(char[][])*).runAll()
    [0x42862c]\n??:? void rt.dmain2._d_run_main(int, char**, extern (C) int function(char[][])*).tryExec(scope
    void delegate()) [0x4285b3]\n??:? _d_run_main [0x42851e]\n??:? main [0x427f73]\n??:?
    __libc_start_main [0x4442b554]\n1/1 unittests FAILED\n'''
  stdout: b''
- exit_code: 1
  program: "import std.typecons;\nimport std.math;\n/*\nReturn True if all numbers\
    \ in the list l are below threshold t.\n    >>> below_threshold([1L, 2L, 4L, 10L],\
    \ 100L)\n    true\n    >>> below_threshold([1L, 20L, 4L, 10L], 5L)\n    false\n\
    \    \n*/\nbool below_threshold(long[] l, long t) \n{\n    foreach(i; l)\n   \
    \ {\n        if(i > t)\n            return false;\n    }\n    return true;\n}\n\
    unittest\n{\n    alias candidate = below_threshold;\n\n    assert(candidate([1L,\
    \ 2L, 4L, 10L], 100L) == true);\n    assert(candidate([1L, 20L, 4L, 10L], 5L)\
    \ == false);\n    assert(candidate([1L, 20L, 4L, 10L], 21L) == true);\n    assert(candidate([1L,\
    \ 20L, 4L, 10L], 22L) == true);\n    assert(candidate([1L, 8L, 4L, 10L], 11L)\
    \ == true);\n    assert(candidate([1L, 8L, 4L, 10L], 10L) == false);\n}\nvoid\
    \ main(){}"
  status: Exception
  stderr: 'b''core.exception.AssertError@/tmp/tmp70o9mbir.d(29): unittest failure\n----------------\n??:?
    _d_unittestp [0x4281dd]\n??:? void tmp70o9mbir.__unittest_L20_C1() [0x427f4b]\n??:?
    void tmp70o9mbir.__modtest() [0x427f60]\n??:? int core.runtime.runModuleUnitTests().__foreachbody2(object.ModuleInfo*)
    [0x42c1c7]\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)).__lambda2(immutable(object.ModuleInfo*))
    [0x42b05a]\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))).__foreachbody2(ref
    rt.sections_elf_shared.DSO) [0x4301ed]\n??:? int rt.sections_elf_shared.DSO.opApply(scope
    int delegate(ref rt.sections_elf_shared.DSO)) [0x43069c]\n??:? int rt.minfo.moduleinfos_apply(scope
    int delegate(immutable(object.ModuleInfo*))) [0x430179]\n??:? int object.ModuleInfo.opApply(scope
    int delegate(object.ModuleInfo*)) [0x42b031]\n??:? runModuleUnitTests [0x42bf9d]\n??:?
    void rt.dmain2._d_run_main(int, char**, extern (C) int function(char[][])*).runAll()
    [0x42862c]\n??:? void rt.dmain2._d_run_main(int, char**, extern (C) int function(char[][])*).tryExec(scope
    void delegate()) [0x4285b3]\n??:? _d_run_main [0x42851e]\n??:? main [0x427f73]\n??:?
    __libc_start_main [0x4442b554]\n1/1 unittests FAILED\n'''
  stdout: b''
- exit_code: 1
  program: "import std.typecons;\nimport std.math;\n/*\nReturn True if all numbers\
    \ in the list l are below threshold t.\n    >>> below_threshold([1L, 2L, 4L, 10L],\
    \ 100L)\n    true\n    >>> below_threshold([1L, 20L, 4L, 10L], 5L)\n    false\n\
    \    \n*/\nbool below_threshold(long[] l, long t) \n{\n    foreach(long i; l)\n\
    \    {\n        if(i >= t)\n            return false;\n    }\n    return true;\n\
    }\n/*\nReturn True if all numbers in the list l are below threshold t.\n    >>>\
    \ below_threshold([1L, 2L, 4L, 10L], 100L)\n    true\n    >>> below_threshold([1L,\
    \ 20L, 4L, 10L], 5L)\n    false\n    \n*/\nunittest\n{\n    alias candidate =\
    \ below_threshold;\n\n    assert(candidate([1L, 2L, 4L, 10L], 100L) == true);\n\
    \    assert(candidate([1L, 20L, 4L, 10L], 5L) == false);\n    assert(candidate([1L,\
    \ 20L, 4L, 10L], 21L) == true);\n    assert(candidate([1L, 20L, 4L, 10L], 22L)\
    \ == true);\n    assert(candidate([1L, 8L, 4L, 10L], 11L) == true);\n    assert(candidate([1L,\
    \ 8L, 4L, 10L], 10L) == false);\n}\nvoid main(){}"
  status: SyntaxError
  stderr: 'b''Error: cannot find source code for runtime library file \''object.d\''\n       dmd
    might not be correctly installed. Run \''dmd -man\'' for installation instructions.\nimport
    path[0] = /tmp\nFailed: ["dmd", "-unittest", "-v", "-o-", "/tmp/tmp579kmroy.d",
    "-I/tmp"]\n'''
  stdout: b''
  timestamp: 1659797732
- exit_code: 1
  program: "import std.typecons;\nimport std.math;\n/*\nReturn True if all numbers\
    \ in the list l are below threshold t.\n    >>> below_threshold([1L, 2L, 4L, 10L],\
    \ 100L)\n    true\n    >>> below_threshold([1L, 20L, 4L, 10L], 5L)\n    false\n\
    \    \n*/\nbool below_threshold(long[] l, long t) \n{\n    foreach(i; l)\n   \
    \ {\n        if(i >= t)\n            return false;\n    }\n    return true;\n\
    }\nunittest\n{\n    alias candidate = below_threshold;\n\n    assert(candidate([1L,\
    \ 2L, 4L, 10L], 100L) == true);\n    assert(candidate([1L, 20L, 4L, 10L], 5L)\
    \ == false);\n    assert(candidate([1L, 20L, 4L, 10L], 21L) == true);\n    assert(candidate([1L,\
    \ 20L, 4L, 10L], 22L) == true);\n    assert(candidate([1L, 8L, 4L, 10L], 11L)\
    \ == true);\n    assert(candidate([1L, 8L, 4L, 10L], 10L) == false);\n}\nvoid\
    \ main(){}"
  status: SyntaxError
  stderr: 'b''Error: cannot find source code for runtime library file \''object.d\''\n       dmd
    might not be correctly installed. Run \''dmd -man\'' for installation instructions.\nimport
    path[0] = /tmp\nFailed: ["dmd", "-unittest", "-v", "-o-", "/tmp/tmpiw1qgsmo.d",
    "-I/tmp"]\n'''
  stdout: b''
  timestamp: 1659797732
- exit_code: 0
  program: "import std.typecons;\nimport std.math;\n/*\nReturn True if all numbers\
    \ in the list l are below threshold t.\n    >>> below_threshold([1L, 2L, 4L, 10L],\
    \ 100L)\n    true\n    >>> below_threshold([1L, 20L, 4L, 10L], 5L)\n    false\n\
    \    \n*/\nbool below_threshold(long[] l, long t) \n{\n    foreach(long x; l)\n\
    \    {\n        if(x >= t)\n            return false;\n    }\n    return true;\n\
    }\nunittest\n{\n    alias candidate = below_threshold;\n\n    assert(candidate([1L,\
    \ 2L, 4L, 10L], 100L) == true);\n    assert(candidate([1L, 20L, 4L, 10L], 5L)\
    \ == false);\n    assert(candidate([1L, 20L, 4L, 10L], 21L) == true);\n    assert(candidate([1L,\
    \ 20L, 4L, 10L], 22L) == true);\n    assert(candidate([1L, 8L, 4L, 10L], 11L)\
    \ == true);\n    assert(candidate([1L, 8L, 4L, 10L], 10L) == false);\n}\nvoid\
    \ main(){}"
  status: OK
  stderr: b''
  stdout: b''
- exit_code: 0
  program: "import std.typecons;\nimport std.math;\n/*\nReturn True if all numbers\
    \ in the list l are below threshold t.\n    >>> below_threshold([1L, 2L, 4L, 10L],\
    \ 100L)\n    true\n    >>> below_threshold([1L, 20L, 4L, 10L], 5L)\n    false\n\
    \    \n*/\nbool below_threshold(long[] l, long t) \n{\n    foreach(long i; l)\n\
    \    {\n        if(i >= t)\n            return false;\n    }\n    return true;\n\
    }\nunittest\n{\n    alias candidate = below_threshold;\n\n    assert(candidate([1L,\
    \ 2L, 4L, 10L], 100L) == true);\n    assert(candidate([1L, 20L, 4L, 10L], 5L)\
    \ == false);\n    assert(candidate([1L, 20L, 4L, 10L], 21L) == true);\n    assert(candidate([1L,\
    \ 20L, 4L, 10L], 22L) == true);\n    assert(candidate([1L, 8L, 4L, 10L], 11L)\
    \ == true);\n    assert(candidate([1L, 8L, 4L, 10L], 10L) == false);\n}\nvoid\
    \ main(){}"
  status: OK
  stderr: b''
  stdout: b''
- exit_code: 1
  program: "import std.typecons;\nimport std.math;\n/*\nReturn True if all numbers\
    \ in the list l are below threshold t.\n    >>> below_threshold([1L, 2L, 4L, 10L],\
    \ 100L)\n    true\n    >>> below_threshold([1L, 20L, 4L, 10L], 5L)\n    false\n\
    \    \n*/\nbool below_threshold(long[] l, long t) \n{\n    foreach(long i; l)\n\
    \    {\n        if(i > t)\n            return false;\n    }\n    return true;\n\
    }\nunittest\n{\n    alias candidate = below_threshold;\n\n    assert(candidate([1L,\
    \ 2L, 4L, 10L], 100L) == true);\n    assert(candidate([1L, 20L, 4L, 10L], 5L)\
    \ == false);\n    assert(candidate([1L, 20L, 4L, 10L], 21L) == true);\n    assert(candidate([1L,\
    \ 20L, 4L, 10L], 22L) == true);\n    assert(candidate([1L, 8L, 4L, 10L], 11L)\
    \ == true);\n    assert(candidate([1L, 8L, 4L, 10L], 10L) == false);\n}\nvoid\
    \ main(){}"
  status: Exception
  stderr: 'b''core.exception.AssertError@/tmp/tmpnp3ngt9z.d(29): unittest failure\n----------------\n??:?
    _d_unittestp [0x4281dd]\n??:? void tmpnp3ngt9z.__unittest_L20_C1() [0x427f4b]\n??:?
    void tmpnp3ngt9z.__modtest() [0x427f60]\n??:? int core.runtime.runModuleUnitTests().__foreachbody2(object.ModuleInfo*)
    [0x42c1c7]\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)).__lambda2(immutable(object.ModuleInfo*))
    [0x42b05a]\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))).__foreachbody2(ref
    rt.sections_elf_shared.DSO) [0x4301ed]\n??:? int rt.sections_elf_shared.DSO.opApply(scope
    int delegate(ref rt.sections_elf_shared.DSO)) [0x43069c]\n??:? int rt.minfo.moduleinfos_apply(scope
    int delegate(immutable(object.ModuleInfo*))) [0x430179]\n??:? int object.ModuleInfo.opApply(scope
    int delegate(object.ModuleInfo*)) [0x42b031]\n??:? runModuleUnitTests [0x42bf9d]\n??:?
    void rt.dmain2._d_run_main(int, char**, extern (C) int function(char[][])*).runAll()
    [0x42862c]\n??:? void rt.dmain2._d_run_main(int, char**, extern (C) int function(char[][])*).tryExec(scope
    void delegate()) [0x4285b3]\n??:? _d_run_main [0x42851e]\n??:? main [0x427f73]\n??:?
    __libc_start_main [0x76bf1554]\n1/1 unittests FAILED\n'''
  stdout: b''
- exit_code: 1
  program: "import std.typecons;\nimport std.math;\n/*\nReturn True if all numbers\
    \ in the list l are below threshold t.\n    >>> below_threshold([1L, 2L, 4L, 10L],\
    \ 100L)\n    true\n    >>> below_threshold([1L, 20L, 4L, 10L], 5L)\n    false\n\
    \    \n*/\nbool below_threshold(long[] l, long t) \n{\n    foreach(long i; l)\n\
    \    {\n        if(i > t)\n            return false;\n    }\n    return true;\n\
    }\nunittest\n{\n    alias candidate = below_threshold;\n\n    assert(candidate([1L,\
    \ 2L, 4L, 10L], 100L) == true);\n    assert(candidate([1L, 20L, 4L, 10L], 5L)\
    \ == false);\n    assert(candidate([1L, 20L, 4L, 10L], 21L) == true);\n    assert(candidate([1L,\
    \ 20L, 4L, 10L], 22L) == true);\n    assert(candidate([1L, 8L, 4L, 10L], 11L)\
    \ == true);\n    assert(candidate([1L, 8L, 4L, 10L], 10L) == false);\n}\nvoid\
    \ main(){}"
  status: Exception
  stderr: 'b''core.exception.AssertError@/tmp/tmpnp3ngt9z.d(29): unittest failure\n----------------\n??:?
    _d_unittestp [0x4281dd]\n??:? void tmpnp3ngt9z.__unittest_L20_C1() [0x427f4b]\n??:?
    void tmpnp3ngt9z.__modtest() [0x427f60]\n??:? int core.runtime.runModuleUnitTests().__foreachbody2(object.ModuleInfo*)
    [0x42c1c7]\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)).__lambda2(immutable(object.ModuleInfo*))
    [0x42b05a]\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))).__foreachbody2(ref
    rt.sections_elf_shared.DSO) [0x4301ed]\n??:? int rt.sections_elf_shared.DSO.opApply(scope
    int delegate(ref rt.sections_elf_shared.DSO)) [0x43069c]\n??:? int rt.minfo.moduleinfos_apply(scope
    int delegate(immutable(object.ModuleInfo*))) [0x430179]\n??:? int object.ModuleInfo.opApply(scope
    int delegate(object.ModuleInfo*)) [0x42b031]\n??:? runModuleUnitTests [0x42bf9d]\n??:?
    void rt.dmain2._d_run_main(int, char**, extern (C) int function(char[][])*).runAll()
    [0x42862c]\n??:? void rt.dmain2._d_run_main(int, char**, extern (C) int function(char[][])*).tryExec(scope
    void delegate()) [0x4285b3]\n??:? _d_run_main [0x42851e]\n??:? main [0x427f73]\n??:?
    __libc_start_main [0x76bf1554]\n1/1 unittests FAILED\n'''
  stdout: b''
- exit_code: 1
  program: "import std.typecons;\nimport std.math;\n/*\nReturn True if all numbers\
    \ in the list l are below threshold t.\n    >>> below_threshold([1L, 2L, 4L, 10L],\
    \ 100L)\n    true\n    >>> below_threshold([1L, 20L, 4L, 10L], 5L)\n    false\n\
    \    \n*/\nbool below_threshold(long[] l, long t) \n{\n    foreach(i; l)\n   \
    \ {\n        if(i > t)\n            return false;\n    }\n    return true;\n}\n\
    unittest\n{\n    alias candidate = below_threshold;\n\n    assert(candidate([1L,\
    \ 2L, 4L, 10L], 100L) == true);\n    assert(candidate([1L, 20L, 4L, 10L], 5L)\
    \ == false);\n    assert(candidate([1L, 20L, 4L, 10L], 21L) == true);\n    assert(candidate([1L,\
    \ 20L, 4L, 10L], 22L) == true);\n    assert(candidate([1L, 8L, 4L, 10L], 11L)\
    \ == true);\n    assert(candidate([1L, 8L, 4L, 10L], 10L) == false);\n}\nvoid\
    \ main(){}"
  status: Exception
  stderr: 'b''core.exception.AssertError@/tmp/tmp70o9mbir.d(29): unittest failure\n----------------\n??:?
    _d_unittestp [0x4281dd]\n??:? void tmp70o9mbir.__unittest_L20_C1() [0x427f4b]\n??:?
    void tmp70o9mbir.__modtest() [0x427f60]\n??:? int core.runtime.runModuleUnitTests().__foreachbody2(object.ModuleInfo*)
    [0x42c1c7]\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)).__lambda2(immutable(object.ModuleInfo*))
    [0x42b05a]\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))).__foreachbody2(ref
    rt.sections_elf_shared.DSO) [0x4301ed]\n??:? int rt.sections_elf_shared.DSO.opApply(scope
    int delegate(ref rt.sections_elf_shared.DSO)) [0x43069c]\n??:? int rt.minfo.moduleinfos_apply(scope
    int delegate(immutable(object.ModuleInfo*))) [0x430179]\n??:? int object.ModuleInfo.opApply(scope
    int delegate(object.ModuleInfo*)) [0x42b031]\n??:? runModuleUnitTests [0x42bf9d]\n??:?
    void rt.dmain2._d_run_main(int, char**, extern (C) int function(char[][])*).runAll()
    [0x42862c]\n??:? void rt.dmain2._d_run_main(int, char**, extern (C) int function(char[][])*).tryExec(scope
    void delegate()) [0x4285b3]\n??:? _d_run_main [0x42851e]\n??:? main [0x427f73]\n??:?
    __libc_start_main [0x4442b554]\n1/1 unittests FAILED\n'''
  stdout: b''
- exit_code: 1
  program: "import std.typecons;\nimport std.math;\n/*\nReturn True if all numbers\
    \ in the list l are below threshold t.\n    >>> below_threshold([1L, 2L, 4L, 10L],\
    \ 100L)\n    true\n    >>> below_threshold([1L, 20L, 4L, 10L], 5L)\n    false\n\
    \    \n*/\nbool below_threshold(long[] l, long t) \n{\n    foreach(x; l)\n   \
    \ {\n        if(x >= t)\n            return false;\n    }\n    return true;\n\
    }\nunittest\n{\n    alias candidate = below_threshold;\n\n    assert(candidate([1L,\
    \ 2L, 4L, 10L], 100L) == true);\n    assert(candidate([1L, 20L, 4L, 10L], 5L)\
    \ == false);\n    assert(candidate([1L, 20L, 4L, 10L], 21L) == true);\n    assert(candidate([1L,\
    \ 20L, 4L, 10L], 22L) == true);\n    assert(candidate([1L, 8L, 4L, 10L], 11L)\
    \ == true);\n    assert(candidate([1L, 8L, 4L, 10L], 10L) == false);\n}\nvoid\
    \ main(){}"
  status: SyntaxError
  stderr: 'b''Error: cannot find source code for runtime library file \''object.d\''\n       dmd
    might not be correctly installed. Run \''dmd -man\'' for installation instructions.\nimport
    path[0] = /tmp\nFailed: ["dmd", "-unittest", "-v", "-o-", "/tmp/tmpqfi72ztt.d",
    "-I/tmp"]\n'''
  stdout: b''
  timestamp: 1659797732
- exit_code: 1
  program: "import std.typecons;\nimport std.math;\n/*\nReturn True if all numbers\
    \ in the list l are below threshold t.\n    >>> below_threshold([1L, 2L, 4L, 10L],\
    \ 100L)\n    true\n    >>> below_threshold([1L, 20L, 4L, 10L], 5L)\n    false\n\
    \    \n*/\nbool below_threshold(long[] l, long t) \n{\n    foreach(i; l)\n   \
    \ {\n        if(i > t)\n            return false;\n    }\n    return true;\n}\n\
    unittest\n{\n    alias candidate = below_threshold;\n\n    assert(candidate([1L,\
    \ 2L, 4L, 10L], 100L) == true);\n    assert(candidate([1L, 20L, 4L, 10L], 5L)\
    \ == false);\n    assert(candidate([1L, 20L, 4L, 10L], 21L) == true);\n    assert(candidate([1L,\
    \ 20L, 4L, 10L], 22L) == true);\n    assert(candidate([1L, 8L, 4L, 10L], 11L)\
    \ == true);\n    assert(candidate([1L, 8L, 4L, 10L], 10L) == false);\n}\nvoid\
    \ main(){}"
  status: Exception
  stderr: 'b''core.exception.AssertError@/tmp/tmp70o9mbir.d(29): unittest failure\n----------------\n??:?
    _d_unittestp [0x4281dd]\n??:? void tmp70o9mbir.__unittest_L20_C1() [0x427f4b]\n??:?
    void tmp70o9mbir.__modtest() [0x427f60]\n??:? int core.runtime.runModuleUnitTests().__foreachbody2(object.ModuleInfo*)
    [0x42c1c7]\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)).__lambda2(immutable(object.ModuleInfo*))
    [0x42b05a]\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))).__foreachbody2(ref
    rt.sections_elf_shared.DSO) [0x4301ed]\n??:? int rt.sections_elf_shared.DSO.opApply(scope
    int delegate(ref rt.sections_elf_shared.DSO)) [0x43069c]\n??:? int rt.minfo.moduleinfos_apply(scope
    int delegate(immutable(object.ModuleInfo*))) [0x430179]\n??:? int object.ModuleInfo.opApply(scope
    int delegate(object.ModuleInfo*)) [0x42b031]\n??:? runModuleUnitTests [0x42bf9d]\n??:?
    void rt.dmain2._d_run_main(int, char**, extern (C) int function(char[][])*).runAll()
    [0x42862c]\n??:? void rt.dmain2._d_run_main(int, char**, extern (C) int function(char[][])*).tryExec(scope
    void delegate()) [0x4285b3]\n??:? _d_run_main [0x42851e]\n??:? main [0x427f73]\n??:?
    __libc_start_main [0x4442b554]\n1/1 unittests FAILED\n'''
  stdout: b''
- exit_code: 1
  program: "import std.typecons;\nimport std.math;\n/*\nReturn True if all numbers\
    \ in the list l are below threshold t.\n    >>> below_threshold([1L, 2L, 4L, 10L],\
    \ 100L)\n    true\n    >>> below_threshold([1L, 20L, 4L, 10L], 5L)\n    false\n\
    \    \n*/\nbool below_threshold(long[] l, long t) \n{\n    foreach(long i; l)\n\
    \    {\n        if(i >= t)\n            return false;\n    }\n    return true;\n\
    }\n/*\nReturn True if all numbers in the list l are below threshold t.\n    >>>\
    \ below_threshold([1L, 2L, 4L, 10L], 100L)\n    true\n    >>> below_threshold([1L,\
    \ 20L, 4L, 10L], 5L)\n    false\n    \n*/\nunittest\n{\n    alias candidate =\
    \ below_threshold;\n\n    assert(candidate([1L, 2L, 4L, 10L], 100L) == true);\n\
    \    assert(candidate([1L, 20L, 4L, 10L], 5L) == false);\n    assert(candidate([1L,\
    \ 20L, 4L, 10L], 21L) == true);\n    assert(candidate([1L, 20L, 4L, 10L], 22L)\
    \ == true);\n    assert(candidate([1L, 8L, 4L, 10L], 11L) == true);\n    assert(candidate([1L,\
    \ 8L, 4L, 10L], 10L) == false);\n}\nvoid main(){}"
  status: SyntaxError
  stderr: 'b''Error: cannot find source code for runtime library file \''object.d\''\n       dmd
    might not be correctly installed. Run \''dmd -man\'' for installation instructions.\nimport
    path[0] = /tmp\nFailed: ["dmd", "-unittest", "-v", "-o-", "/tmp/tmp579kmroy.d",
    "-I/tmp"]\n'''
  stdout: b''
  timestamp: 1659797732
- exit_code: 1
  program: "import std.typecons;\nimport std.math;\n/*\nReturn True if all numbers\
    \ in the list l are below threshold t.\n    >>> below_threshold([1L, 2L, 4L, 10L],\
    \ 100L)\n    true\n    >>> below_threshold([1L, 20L, 4L, 10L], 5L)\n    false\n\
    \    \n*/\nbool below_threshold(long[] l, long t) \n{\n    foreach(i; l)\n   \
    \ {\n        if(i > t)\n            return false;\n    }\n    return true;\n}\n\
    unittest\n{\n    alias candidate = below_threshold;\n\n    assert(candidate([1L,\
    \ 2L, 4L, 10L], 100L) == true);\n    assert(candidate([1L, 20L, 4L, 10L], 5L)\
    \ == false);\n    assert(candidate([1L, 20L, 4L, 10L], 21L) == true);\n    assert(candidate([1L,\
    \ 20L, 4L, 10L], 22L) == true);\n    assert(candidate([1L, 8L, 4L, 10L], 11L)\
    \ == true);\n    assert(candidate([1L, 8L, 4L, 10L], 10L) == false);\n}\nvoid\
    \ main(){}"
  status: Exception
  stderr: 'b''core.exception.AssertError@/tmp/tmp70o9mbir.d(29): unittest failure\n----------------\n??:?
    _d_unittestp [0x4281dd]\n??:? void tmp70o9mbir.__unittest_L20_C1() [0x427f4b]\n??:?
    void tmp70o9mbir.__modtest() [0x427f60]\n??:? int core.runtime.runModuleUnitTests().__foreachbody2(object.ModuleInfo*)
    [0x42c1c7]\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)).__lambda2(immutable(object.ModuleInfo*))
    [0x42b05a]\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))).__foreachbody2(ref
    rt.sections_elf_shared.DSO) [0x4301ed]\n??:? int rt.sections_elf_shared.DSO.opApply(scope
    int delegate(ref rt.sections_elf_shared.DSO)) [0x43069c]\n??:? int rt.minfo.moduleinfos_apply(scope
    int delegate(immutable(object.ModuleInfo*))) [0x430179]\n??:? int object.ModuleInfo.opApply(scope
    int delegate(object.ModuleInfo*)) [0x42b031]\n??:? runModuleUnitTests [0x42bf9d]\n??:?
    void rt.dmain2._d_run_main(int, char**, extern (C) int function(char[][])*).runAll()
    [0x42862c]\n??:? void rt.dmain2._d_run_main(int, char**, extern (C) int function(char[][])*).tryExec(scope
    void delegate()) [0x4285b3]\n??:? _d_run_main [0x42851e]\n??:? main [0x427f73]\n??:?
    __libc_start_main [0x4442b554]\n1/1 unittests FAILED\n'''
  stdout: b''
- exit_code: 0
  program: "import std.typecons;\nimport std.math;\n/*\nReturn True if all numbers\
    \ in the list l are below threshold t.\n    >>> below_threshold([1L, 2L, 4L, 10L],\
    \ 100L)\n    true\n    >>> below_threshold([1L, 20L, 4L, 10L], 5L)\n    false\n\
    \    \n*/\nbool below_threshold(long[] l, long t) \n{\n    foreach(long x; l)\n\
    \    {\n        if(x >= t)\n            return false;\n    }\n    return true;\n\
    }\nunittest\n{\n    alias candidate = below_threshold;\n\n    assert(candidate([1L,\
    \ 2L, 4L, 10L], 100L) == true);\n    assert(candidate([1L, 20L, 4L, 10L], 5L)\
    \ == false);\n    assert(candidate([1L, 20L, 4L, 10L], 21L) == true);\n    assert(candidate([1L,\
    \ 20L, 4L, 10L], 22L) == true);\n    assert(candidate([1L, 8L, 4L, 10L], 11L)\
    \ == true);\n    assert(candidate([1L, 8L, 4L, 10L], 10L) == false);\n}\nvoid\
    \ main(){}"
  status: OK
  stderr: b''
  stdout: b''
- exit_code: 1
  program: "import std.typecons;\nimport std.math;\n/*\nReturn True if all numbers\
    \ in the list l are below threshold t.\n    >>> below_threshold([1L, 2L, 4L, 10L],\
    \ 100L)\n    true\n    >>> below_threshold([1L, 20L, 4L, 10L], 5L)\n    false\n\
    \    \n*/\nbool below_threshold(long[] l, long t) \n{\n    foreach(i; l)\n   \
    \ {\n        if(i > t)\n            return false;\n    }\n    return true;\n}\n\
    unittest\n{\n    alias candidate = below_threshold;\n\n    assert(candidate([1L,\
    \ 2L, 4L, 10L], 100L) == true);\n    assert(candidate([1L, 20L, 4L, 10L], 5L)\
    \ == false);\n    assert(candidate([1L, 20L, 4L, 10L], 21L) == true);\n    assert(candidate([1L,\
    \ 20L, 4L, 10L], 22L) == true);\n    assert(candidate([1L, 8L, 4L, 10L], 11L)\
    \ == true);\n    assert(candidate([1L, 8L, 4L, 10L], 10L) == false);\n}\nvoid\
    \ main(){}"
  status: Exception
  stderr: 'b''core.exception.AssertError@/tmp/tmp70o9mbir.d(29): unittest failure\n----------------\n??:?
    _d_unittestp [0x4281dd]\n??:? void tmp70o9mbir.__unittest_L20_C1() [0x427f4b]\n??:?
    void tmp70o9mbir.__modtest() [0x427f60]\n??:? int core.runtime.runModuleUnitTests().__foreachbody2(object.ModuleInfo*)
    [0x42c1c7]\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)).__lambda2(immutable(object.ModuleInfo*))
    [0x42b05a]\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))).__foreachbody2(ref
    rt.sections_elf_shared.DSO) [0x4301ed]\n??:? int rt.sections_elf_shared.DSO.opApply(scope
    int delegate(ref rt.sections_elf_shared.DSO)) [0x43069c]\n??:? int rt.minfo.moduleinfos_apply(scope
    int delegate(immutable(object.ModuleInfo*))) [0x430179]\n??:? int object.ModuleInfo.opApply(scope
    int delegate(object.ModuleInfo*)) [0x42b031]\n??:? runModuleUnitTests [0x42bf9d]\n??:?
    void rt.dmain2._d_run_main(int, char**, extern (C) int function(char[][])*).runAll()
    [0x42862c]\n??:? void rt.dmain2._d_run_main(int, char**, extern (C) int function(char[][])*).tryExec(scope
    void delegate()) [0x4285b3]\n??:? _d_run_main [0x42851e]\n??:? main [0x427f73]\n??:?
    __libc_start_main [0x4442b554]\n1/1 unittests FAILED\n'''
  stdout: b''
- exit_code: 1
  program: "import std.typecons;\nimport std.math;\n/*\nReturn True if all numbers\
    \ in the list l are below threshold t.\n    >>> below_threshold([1L, 2L, 4L, 10L],\
    \ 100L)\n    true\n    >>> below_threshold([1L, 20L, 4L, 10L], 5L)\n    false\n\
    \    \n*/\nbool below_threshold(long[] l, long t) \n{\n    foreach(long i; l)\n\
    \    {\n        if(i > t)\n            return false;\n    }\n    return true;\n\
    }\nunittest\n{\n    alias candidate = below_threshold;\n\n    assert(candidate([1L,\
    \ 2L, 4L, 10L], 100L) == true);\n    assert(candidate([1L, 20L, 4L, 10L], 5L)\
    \ == false);\n    assert(candidate([1L, 20L, 4L, 10L], 21L) == true);\n    assert(candidate([1L,\
    \ 20L, 4L, 10L], 22L) == true);\n    assert(candidate([1L, 8L, 4L, 10L], 11L)\
    \ == true);\n    assert(candidate([1L, 8L, 4L, 10L], 10L) == false);\n}\nvoid\
    \ main(){}"
  status: Exception
  stderr: 'b''core.exception.AssertError@/tmp/tmpnp3ngt9z.d(29): unittest failure\n----------------\n??:?
    _d_unittestp [0x4281dd]\n??:? void tmpnp3ngt9z.__unittest_L20_C1() [0x427f4b]\n??:?
    void tmpnp3ngt9z.__modtest() [0x427f60]\n??:? int core.runtime.runModuleUnitTests().__foreachbody2(object.ModuleInfo*)
    [0x42c1c7]\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)).__lambda2(immutable(object.ModuleInfo*))
    [0x42b05a]\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))).__foreachbody2(ref
    rt.sections_elf_shared.DSO) [0x4301ed]\n??:? int rt.sections_elf_shared.DSO.opApply(scope
    int delegate(ref rt.sections_elf_shared.DSO)) [0x43069c]\n??:? int rt.minfo.moduleinfos_apply(scope
    int delegate(immutable(object.ModuleInfo*))) [0x430179]\n??:? int object.ModuleInfo.opApply(scope
    int delegate(object.ModuleInfo*)) [0x42b031]\n??:? runModuleUnitTests [0x42bf9d]\n??:?
    void rt.dmain2._d_run_main(int, char**, extern (C) int function(char[][])*).runAll()
    [0x42862c]\n??:? void rt.dmain2._d_run_main(int, char**, extern (C) int function(char[][])*).tryExec(scope
    void delegate()) [0x4285b3]\n??:? _d_run_main [0x42851e]\n??:? main [0x427f73]\n??:?
    __libc_start_main [0x76bf1554]\n1/1 unittests FAILED\n'''
  stdout: b''
- exit_code: 1
  program: "import std.typecons;\nimport std.math;\n/*\nReturn True if all numbers\
    \ in the list l are below threshold t.\n    >>> below_threshold([1L, 2L, 4L, 10L],\
    \ 100L)\n    true\n    >>> below_threshold([1L, 20L, 4L, 10L], 5L)\n    false\n\
    \    \n*/\nbool below_threshold(long[] l, long t) \n{\n    foreach(i; l)\n   \
    \ {\n        if(i > t)\n            return false;\n    }\n    return true;\n}\n\
    unittest\n{\n    alias candidate = below_threshold;\n\n    assert(candidate([1L,\
    \ 2L, 4L, 10L], 100L) == true);\n    assert(candidate([1L, 20L, 4L, 10L], 5L)\
    \ == false);\n    assert(candidate([1L, 20L, 4L, 10L], 21L) == true);\n    assert(candidate([1L,\
    \ 20L, 4L, 10L], 22L) == true);\n    assert(candidate([1L, 8L, 4L, 10L], 11L)\
    \ == true);\n    assert(candidate([1L, 8L, 4L, 10L], 10L) == false);\n}\nvoid\
    \ main(){}"
  status: Exception
  stderr: 'b''core.exception.AssertError@/tmp/tmp70o9mbir.d(29): unittest failure\n----------------\n??:?
    _d_unittestp [0x4281dd]\n??:? void tmp70o9mbir.__unittest_L20_C1() [0x427f4b]\n??:?
    void tmp70o9mbir.__modtest() [0x427f60]\n??:? int core.runtime.runModuleUnitTests().__foreachbody2(object.ModuleInfo*)
    [0x42c1c7]\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)).__lambda2(immutable(object.ModuleInfo*))
    [0x42b05a]\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))).__foreachbody2(ref
    rt.sections_elf_shared.DSO) [0x4301ed]\n??:? int rt.sections_elf_shared.DSO.opApply(scope
    int delegate(ref rt.sections_elf_shared.DSO)) [0x43069c]\n??:? int rt.minfo.moduleinfos_apply(scope
    int delegate(immutable(object.ModuleInfo*))) [0x430179]\n??:? int object.ModuleInfo.opApply(scope
    int delegate(object.ModuleInfo*)) [0x42b031]\n??:? runModuleUnitTests [0x42bf9d]\n??:?
    void rt.dmain2._d_run_main(int, char**, extern (C) int function(char[][])*).runAll()
    [0x42862c]\n??:? void rt.dmain2._d_run_main(int, char**, extern (C) int function(char[][])*).tryExec(scope
    void delegate()) [0x4285b3]\n??:? _d_run_main [0x42851e]\n??:? main [0x427f73]\n??:?
    __libc_start_main [0x4442b554]\n1/1 unittests FAILED\n'''
  stdout: b''
- exit_code: 1
  program: "import std.typecons;\nimport std.math;\n/*\nReturn True if all numbers\
    \ in the list l are below threshold t.\n    >>> below_threshold([1L, 2L, 4L, 10L],\
    \ 100L)\n    true\n    >>> below_threshold([1L, 20L, 4L, 10L], 5L)\n    false\n\
    \    \n*/\nbool below_threshold(long[] l, long t) \n{\n    foreach(long i; l)\n\
    \    {\n        if(i > t)\n            return false;\n    }\n    return true;\n\
    }\nunittest\n{\n    alias candidate = below_threshold;\n\n    assert(candidate([1L,\
    \ 2L, 4L, 10L], 100L) == true);\n    assert(candidate([1L, 20L, 4L, 10L], 5L)\
    \ == false);\n    assert(candidate([1L, 20L, 4L, 10L], 21L) == true);\n    assert(candidate([1L,\
    \ 20L, 4L, 10L], 22L) == true);\n    assert(candidate([1L, 8L, 4L, 10L], 11L)\
    \ == true);\n    assert(candidate([1L, 8L, 4L, 10L], 10L) == false);\n}\nvoid\
    \ main(){}"
  status: Exception
  stderr: 'b''core.exception.AssertError@/tmp/tmpnp3ngt9z.d(29): unittest failure\n----------------\n??:?
    _d_unittestp [0x4281dd]\n??:? void tmpnp3ngt9z.__unittest_L20_C1() [0x427f4b]\n??:?
    void tmpnp3ngt9z.__modtest() [0x427f60]\n??:? int core.runtime.runModuleUnitTests().__foreachbody2(object.ModuleInfo*)
    [0x42c1c7]\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)).__lambda2(immutable(object.ModuleInfo*))
    [0x42b05a]\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))).__foreachbody2(ref
    rt.sections_elf_shared.DSO) [0x4301ed]\n??:? int rt.sections_elf_shared.DSO.opApply(scope
    int delegate(ref rt.sections_elf_shared.DSO)) [0x43069c]\n??:? int rt.minfo.moduleinfos_apply(scope
    int delegate(immutable(object.ModuleInfo*))) [0x430179]\n??:? int object.ModuleInfo.opApply(scope
    int delegate(object.ModuleInfo*)) [0x42b031]\n??:? runModuleUnitTests [0x42bf9d]\n??:?
    void rt.dmain2._d_run_main(int, char**, extern (C) int function(char[][])*).runAll()
    [0x42862c]\n??:? void rt.dmain2._d_run_main(int, char**, extern (C) int function(char[][])*).tryExec(scope
    void delegate()) [0x4285b3]\n??:? _d_run_main [0x42851e]\n??:? main [0x427f73]\n??:?
    __libc_start_main [0x76bf1554]\n1/1 unittests FAILED\n'''
  stdout: b''
- exit_code: 1
  program: "import std.typecons;\nimport std.math;\n/*\nReturn True if all numbers\
    \ in the list l are below threshold t.\n    >>> below_threshold([1L, 2L, 4L, 10L],\
    \ 100L)\n    true\n    >>> below_threshold([1L, 20L, 4L, 10L], 5L)\n    false\n\
    \    \n*/\nbool below_threshold(long[] l, long t) \n{\n    foreach(i; l)\n   \
    \ {\n        if(i > t)\n            return false;\n    }\n    return true;\n}\n\
    unittest\n{\n    alias candidate = below_threshold;\n\n    assert(candidate([1L,\
    \ 2L, 4L, 10L], 100L) == true);\n    assert(candidate([1L, 20L, 4L, 10L], 5L)\
    \ == false);\n    assert(candidate([1L, 20L, 4L, 10L], 21L) == true);\n    assert(candidate([1L,\
    \ 20L, 4L, 10L], 22L) == true);\n    assert(candidate([1L, 8L, 4L, 10L], 11L)\
    \ == true);\n    assert(candidate([1L, 8L, 4L, 10L], 10L) == false);\n}\nvoid\
    \ main(){}"
  status: Exception
  stderr: 'b''core.exception.AssertError@/tmp/tmp70o9mbir.d(29): unittest failure\n----------------\n??:?
    _d_unittestp [0x4281dd]\n??:? void tmp70o9mbir.__unittest_L20_C1() [0x427f4b]\n??:?
    void tmp70o9mbir.__modtest() [0x427f60]\n??:? int core.runtime.runModuleUnitTests().__foreachbody2(object.ModuleInfo*)
    [0x42c1c7]\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)).__lambda2(immutable(object.ModuleInfo*))
    [0x42b05a]\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))).__foreachbody2(ref
    rt.sections_elf_shared.DSO) [0x4301ed]\n??:? int rt.sections_elf_shared.DSO.opApply(scope
    int delegate(ref rt.sections_elf_shared.DSO)) [0x43069c]\n??:? int rt.minfo.moduleinfos_apply(scope
    int delegate(immutable(object.ModuleInfo*))) [0x430179]\n??:? int object.ModuleInfo.opApply(scope
    int delegate(object.ModuleInfo*)) [0x42b031]\n??:? runModuleUnitTests [0x42bf9d]\n??:?
    void rt.dmain2._d_run_main(int, char**, extern (C) int function(char[][])*).runAll()
    [0x42862c]\n??:? void rt.dmain2._d_run_main(int, char**, extern (C) int function(char[][])*).tryExec(scope
    void delegate()) [0x4285b3]\n??:? _d_run_main [0x42851e]\n??:? main [0x427f73]\n??:?
    __libc_start_main [0x4442b554]\n1/1 unittests FAILED\n'''
  stdout: b''
- exit_code: 1
  program: "import std.typecons;\nimport std.math;\n/*\nReturn True if all numbers\
    \ in the list l are below threshold t.\n    >>> below_threshold([1L, 2L, 4L, 10L],\
    \ 100L)\n    true\n    >>> below_threshold([1L, 20L, 4L, 10L], 5L)\n    false\n\
    \    \n*/\nbool below_threshold(long[] l, long t) \n{\n    foreach(i; l)\n   \
    \ {\n        if(i > t)\n            return false;\n    }\n    return true;\n}\n\
    unittest\n{\n    alias candidate = below_threshold;\n\n    assert(candidate([1L,\
    \ 2L, 4L, 10L], 100L) == true);\n    assert(candidate([1L, 20L, 4L, 10L], 5L)\
    \ == false);\n    assert(candidate([1L, 20L, 4L, 10L], 21L) == true);\n    assert(candidate([1L,\
    \ 20L, 4L, 10L], 22L) == true);\n    assert(candidate([1L, 8L, 4L, 10L], 11L)\
    \ == true);\n    assert(candidate([1L, 8L, 4L, 10L], 10L) == false);\n}\nvoid\
    \ main(){}"
  status: Exception
  stderr: 'b''core.exception.AssertError@/tmp/tmp70o9mbir.d(29): unittest failure\n----------------\n??:?
    _d_unittestp [0x4281dd]\n??:? void tmp70o9mbir.__unittest_L20_C1() [0x427f4b]\n??:?
    void tmp70o9mbir.__modtest() [0x427f60]\n??:? int core.runtime.runModuleUnitTests().__foreachbody2(object.ModuleInfo*)
    [0x42c1c7]\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)).__lambda2(immutable(object.ModuleInfo*))
    [0x42b05a]\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))).__foreachbody2(ref
    rt.sections_elf_shared.DSO) [0x4301ed]\n??:? int rt.sections_elf_shared.DSO.opApply(scope
    int delegate(ref rt.sections_elf_shared.DSO)) [0x43069c]\n??:? int rt.minfo.moduleinfos_apply(scope
    int delegate(immutable(object.ModuleInfo*))) [0x430179]\n??:? int object.ModuleInfo.opApply(scope
    int delegate(object.ModuleInfo*)) [0x42b031]\n??:? runModuleUnitTests [0x42bf9d]\n??:?
    void rt.dmain2._d_run_main(int, char**, extern (C) int function(char[][])*).runAll()
    [0x42862c]\n??:? void rt.dmain2._d_run_main(int, char**, extern (C) int function(char[][])*).tryExec(scope
    void delegate()) [0x4285b3]\n??:? _d_run_main [0x42851e]\n??:? main [0x427f73]\n??:?
    __libc_start_main [0x4442b554]\n1/1 unittests FAILED\n'''
  stdout: b''
- exit_code: 1
  program: "import std.typecons;\nimport std.math;\n/*\nReturn True if all numbers\
    \ in the list l are below threshold t.\n    >>> below_threshold([1L, 2L, 4L, 10L],\
    \ 100L)\n    true\n    >>> below_threshold([1L, 20L, 4L, 10L], 5L)\n    false\n\
    \    \n*/\nbool below_threshold(long[] l, long t) \n{\n    foreach(i; l)\n   \
    \ {\n        if(i > t)\n            return false;\n    }\n    return true;\n}\n\
    unittest\n{\n    alias candidate = below_threshold;\n\n    assert(candidate([1L,\
    \ 2L, 4L, 10L], 100L) == true);\n    assert(candidate([1L, 20L, 4L, 10L], 5L)\
    \ == false);\n    assert(candidate([1L, 20L, 4L, 10L], 21L) == true);\n    assert(candidate([1L,\
    \ 20L, 4L, 10L], 22L) == true);\n    assert(candidate([1L, 8L, 4L, 10L], 11L)\
    \ == true);\n    assert(candidate([1L, 8L, 4L, 10L], 10L) == false);\n}\nvoid\
    \ main(){}"
  status: Exception
  stderr: 'b''core.exception.AssertError@/tmp/tmp70o9mbir.d(29): unittest failure\n----------------\n??:?
    _d_unittestp [0x4281dd]\n??:? void tmp70o9mbir.__unittest_L20_C1() [0x427f4b]\n??:?
    void tmp70o9mbir.__modtest() [0x427f60]\n??:? int core.runtime.runModuleUnitTests().__foreachbody2(object.ModuleInfo*)
    [0x42c1c7]\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)).__lambda2(immutable(object.ModuleInfo*))
    [0x42b05a]\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))).__foreachbody2(ref
    rt.sections_elf_shared.DSO) [0x4301ed]\n??:? int rt.sections_elf_shared.DSO.opApply(scope
    int delegate(ref rt.sections_elf_shared.DSO)) [0x43069c]\n??:? int rt.minfo.moduleinfos_apply(scope
    int delegate(immutable(object.ModuleInfo*))) [0x430179]\n??:? int object.ModuleInfo.opApply(scope
    int delegate(object.ModuleInfo*)) [0x42b031]\n??:? runModuleUnitTests [0x42bf9d]\n??:?
    void rt.dmain2._d_run_main(int, char**, extern (C) int function(char[][])*).runAll()
    [0x42862c]\n??:? void rt.dmain2._d_run_main(int, char**, extern (C) int function(char[][])*).tryExec(scope
    void delegate()) [0x4285b3]\n??:? _d_run_main [0x42851e]\n??:? main [0x427f73]\n??:?
    __libc_start_main [0x4442b554]\n1/1 unittests FAILED\n'''
  stdout: b''
- exit_code: 1
  program: "import std.typecons;\nimport std.math;\n/*\nReturn True if all numbers\
    \ in the list l are below threshold t.\n    >>> below_threshold([1L, 2L, 4L, 10L],\
    \ 100L)\n    true\n    >>> below_threshold([1L, 20L, 4L, 10L], 5L)\n    false\n\
    \    \n*/\nbool below_threshold(long[] l, long t) \n{\n    foreach(i; l)\n   \
    \ {\n        if(i > t)\n            return false;\n    }\n    return true;\n}\n\
    unittest\n{\n    alias candidate = below_threshold;\n\n    assert(candidate([1L,\
    \ 2L, 4L, 10L], 100L) == true);\n    assert(candidate([1L, 20L, 4L, 10L], 5L)\
    \ == false);\n    assert(candidate([1L, 20L, 4L, 10L], 21L) == true);\n    assert(candidate([1L,\
    \ 20L, 4L, 10L], 22L) == true);\n    assert(candidate([1L, 8L, 4L, 10L], 11L)\
    \ == true);\n    assert(candidate([1L, 8L, 4L, 10L], 10L) == false);\n}\nvoid\
    \ main(){}"
  status: Exception
  stderr: 'b''core.exception.AssertError@/tmp/tmp70o9mbir.d(29): unittest failure\n----------------\n??:?
    _d_unittestp [0x4281dd]\n??:? void tmp70o9mbir.__unittest_L20_C1() [0x427f4b]\n??:?
    void tmp70o9mbir.__modtest() [0x427f60]\n??:? int core.runtime.runModuleUnitTests().__foreachbody2(object.ModuleInfo*)
    [0x42c1c7]\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)).__lambda2(immutable(object.ModuleInfo*))
    [0x42b05a]\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))).__foreachbody2(ref
    rt.sections_elf_shared.DSO) [0x4301ed]\n??:? int rt.sections_elf_shared.DSO.opApply(scope
    int delegate(ref rt.sections_elf_shared.DSO)) [0x43069c]\n??:? int rt.minfo.moduleinfos_apply(scope
    int delegate(immutable(object.ModuleInfo*))) [0x430179]\n??:? int object.ModuleInfo.opApply(scope
    int delegate(object.ModuleInfo*)) [0x42b031]\n??:? runModuleUnitTests [0x42bf9d]\n??:?
    void rt.dmain2._d_run_main(int, char**, extern (C) int function(char[][])*).runAll()
    [0x42862c]\n??:? void rt.dmain2._d_run_main(int, char**, extern (C) int function(char[][])*).tryExec(scope
    void delegate()) [0x4285b3]\n??:? _d_run_main [0x42851e]\n??:? main [0x427f73]\n??:?
    __libc_start_main [0x4442b554]\n1/1 unittests FAILED\n'''
  stdout: b''
- exit_code: 0
  program: "import std.typecons;\nimport std.math;\n/*\nReturn True if all numbers\
    \ in the list l are below threshold t.\n    >>> below_threshold([1L, 2L, 4L, 10L],\
    \ 100L)\n    true\n    >>> below_threshold([1L, 20L, 4L, 10L], 5L)\n    false\n\
    \    \n*/\nbool below_threshold(long[] l, long t) \n{\n    foreach(long i; l)\n\
    \    {\n        if(i >= t)\n            return false;\n    }\n    return true;\n\
    }\nunittest\n{\n    alias candidate = below_threshold;\n\n    assert(candidate([1L,\
    \ 2L, 4L, 10L], 100L) == true);\n    assert(candidate([1L, 20L, 4L, 10L], 5L)\
    \ == false);\n    assert(candidate([1L, 20L, 4L, 10L], 21L) == true);\n    assert(candidate([1L,\
    \ 20L, 4L, 10L], 22L) == true);\n    assert(candidate([1L, 8L, 4L, 10L], 11L)\
    \ == true);\n    assert(candidate([1L, 8L, 4L, 10L], 10L) == false);\n}\nvoid\
    \ main(){}"
  status: OK
  stderr: b''
  stdout: b''
- exit_code: 1
  program: "import std.typecons;\nimport std.math;\n/*\nReturn True if all numbers\
    \ in the list l are below threshold t.\n    >>> below_threshold([1L, 2L, 4L, 10L],\
    \ 100L)\n    true\n    >>> below_threshold([1L, 20L, 4L, 10L], 5L)\n    false\n\
    \    \n*/\nbool below_threshold(long[] l, long t) \n{\n    foreach(long i; l)\n\
    \    {\n        if(i > t)\n            return false;\n    }\n    return true;\n\
    }\nunittest\n{\n    alias candidate = below_threshold;\n\n    assert(candidate([1L,\
    \ 2L, 4L, 10L], 100L) == true);\n    assert(candidate([1L, 20L, 4L, 10L], 5L)\
    \ == false);\n    assert(candidate([1L, 20L, 4L, 10L], 21L) == true);\n    assert(candidate([1L,\
    \ 20L, 4L, 10L], 22L) == true);\n    assert(candidate([1L, 8L, 4L, 10L], 11L)\
    \ == true);\n    assert(candidate([1L, 8L, 4L, 10L], 10L) == false);\n}\nvoid\
    \ main(){}"
  status: Exception
  stderr: 'b''core.exception.AssertError@/tmp/tmpnp3ngt9z.d(29): unittest failure\n----------------\n??:?
    _d_unittestp [0x4281dd]\n??:? void tmpnp3ngt9z.__unittest_L20_C1() [0x427f4b]\n??:?
    void tmpnp3ngt9z.__modtest() [0x427f60]\n??:? int core.runtime.runModuleUnitTests().__foreachbody2(object.ModuleInfo*)
    [0x42c1c7]\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)).__lambda2(immutable(object.ModuleInfo*))
    [0x42b05a]\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))).__foreachbody2(ref
    rt.sections_elf_shared.DSO) [0x4301ed]\n??:? int rt.sections_elf_shared.DSO.opApply(scope
    int delegate(ref rt.sections_elf_shared.DSO)) [0x43069c]\n??:? int rt.minfo.moduleinfos_apply(scope
    int delegate(immutable(object.ModuleInfo*))) [0x430179]\n??:? int object.ModuleInfo.opApply(scope
    int delegate(object.ModuleInfo*)) [0x42b031]\n??:? runModuleUnitTests [0x42bf9d]\n??:?
    void rt.dmain2._d_run_main(int, char**, extern (C) int function(char[][])*).runAll()
    [0x42862c]\n??:? void rt.dmain2._d_run_main(int, char**, extern (C) int function(char[][])*).tryExec(scope
    void delegate()) [0x4285b3]\n??:? _d_run_main [0x42851e]\n??:? main [0x427f73]\n??:?
    __libc_start_main [0x76bf1554]\n1/1 unittests FAILED\n'''
  stdout: b''
- exit_code: 1
  program: "import std.typecons;\nimport std.math;\n/*\nReturn True if all numbers\
    \ in the list l are below threshold t.\n    >>> below_threshold([1L, 2L, 4L, 10L],\
    \ 100L)\n    true\n    >>> below_threshold([1L, 20L, 4L, 10L], 5L)\n    false\n\
    \    \n*/\nbool below_threshold(long[] l, long t) \n{\n    foreach(i; l)\n   \
    \ {\n        if(i > t)\n            return false;\n    }\n    return true;\n}\n\
    unittest\n{\n    alias candidate = below_threshold;\n\n    assert(candidate([1L,\
    \ 2L, 4L, 10L], 100L) == true);\n    assert(candidate([1L, 20L, 4L, 10L], 5L)\
    \ == false);\n    assert(candidate([1L, 20L, 4L, 10L], 21L) == true);\n    assert(candidate([1L,\
    \ 20L, 4L, 10L], 22L) == true);\n    assert(candidate([1L, 8L, 4L, 10L], 11L)\
    \ == true);\n    assert(candidate([1L, 8L, 4L, 10L], 10L) == false);\n}\nvoid\
    \ main(){}"
  status: Exception
  stderr: 'b''core.exception.AssertError@/tmp/tmp70o9mbir.d(29): unittest failure\n----------------\n??:?
    _d_unittestp [0x4281dd]\n??:? void tmp70o9mbir.__unittest_L20_C1() [0x427f4b]\n??:?
    void tmp70o9mbir.__modtest() [0x427f60]\n??:? int core.runtime.runModuleUnitTests().__foreachbody2(object.ModuleInfo*)
    [0x42c1c7]\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)).__lambda2(immutable(object.ModuleInfo*))
    [0x42b05a]\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))).__foreachbody2(ref
    rt.sections_elf_shared.DSO) [0x4301ed]\n??:? int rt.sections_elf_shared.DSO.opApply(scope
    int delegate(ref rt.sections_elf_shared.DSO)) [0x43069c]\n??:? int rt.minfo.moduleinfos_apply(scope
    int delegate(immutable(object.ModuleInfo*))) [0x430179]\n??:? int object.ModuleInfo.opApply(scope
    int delegate(object.ModuleInfo*)) [0x42b031]\n??:? runModuleUnitTests [0x42bf9d]\n??:?
    void rt.dmain2._d_run_main(int, char**, extern (C) int function(char[][])*).runAll()
    [0x42862c]\n??:? void rt.dmain2._d_run_main(int, char**, extern (C) int function(char[][])*).tryExec(scope
    void delegate()) [0x4285b3]\n??:? _d_run_main [0x42851e]\n??:? main [0x427f73]\n??:?
    __libc_start_main [0x4442b554]\n1/1 unittests FAILED\n'''
  stdout: b''
- exit_code: 1
  program: "import std.typecons;\nimport std.math;\n/*\nReturn True if all numbers\
    \ in the list l are below threshold t.\n    >>> below_threshold([1L, 2L, 4L, 10L],\
    \ 100L)\n    true\n    >>> below_threshold([1L, 20L, 4L, 10L], 5L)\n    false\n\
    \    \n*/\nbool below_threshold(long[] l, long t) \n{\n    foreach(i; l)\n   \
    \ {\n        if(i >= t)\n            return false;\n    }\n    return true;\n\
    }\nunittest\n{\n    alias candidate = below_threshold;\n\n    assert(candidate([1L,\
    \ 2L, 4L, 10L], 100L) == true);\n    assert(candidate([1L, 20L, 4L, 10L], 5L)\
    \ == false);\n    assert(candidate([1L, 20L, 4L, 10L], 21L) == true);\n    assert(candidate([1L,\
    \ 20L, 4L, 10L], 22L) == true);\n    assert(candidate([1L, 8L, 4L, 10L], 11L)\
    \ == true);\n    assert(candidate([1L, 8L, 4L, 10L], 10L) == false);\n}\nvoid\
    \ main(){}"
  status: SyntaxError
  stderr: 'b''Error: cannot find source code for runtime library file \''object.d\''\n       dmd
    might not be correctly installed. Run \''dmd -man\'' for installation instructions.\nimport
    path[0] = /tmp\nFailed: ["dmd", "-unittest", "-v", "-o-", "/tmp/tmpiw1qgsmo.d",
    "-I/tmp"]\n'''
  stdout: b''
  timestamp: 1659797732
- exit_code: 1
  program: "import std.typecons;\nimport std.math;\n/*\nReturn True if all numbers\
    \ in the list l are below threshold t.\n    >>> below_threshold([1L, 2L, 4L, 10L],\
    \ 100L)\n    true\n    >>> below_threshold([1L, 20L, 4L, 10L], 5L)\n    false\n\
    \    \n*/\nbool below_threshold(long[] l, long t) \n{\n    foreach(i; l)\n   \
    \ {\n        if(i > t)\n            return false;\n    }\n    return true;\n}\n\
    unittest\n{\n    alias candidate = below_threshold;\n\n    assert(candidate([1L,\
    \ 2L, 4L, 10L], 100L) == true);\n    assert(candidate([1L, 20L, 4L, 10L], 5L)\
    \ == false);\n    assert(candidate([1L, 20L, 4L, 10L], 21L) == true);\n    assert(candidate([1L,\
    \ 20L, 4L, 10L], 22L) == true);\n    assert(candidate([1L, 8L, 4L, 10L], 11L)\
    \ == true);\n    assert(candidate([1L, 8L, 4L, 10L], 10L) == false);\n}\nvoid\
    \ main(){}"
  status: Exception
  stderr: 'b''core.exception.AssertError@/tmp/tmp70o9mbir.d(29): unittest failure\n----------------\n??:?
    _d_unittestp [0x4281dd]\n??:? void tmp70o9mbir.__unittest_L20_C1() [0x427f4b]\n??:?
    void tmp70o9mbir.__modtest() [0x427f60]\n??:? int core.runtime.runModuleUnitTests().__foreachbody2(object.ModuleInfo*)
    [0x42c1c7]\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)).__lambda2(immutable(object.ModuleInfo*))
    [0x42b05a]\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))).__foreachbody2(ref
    rt.sections_elf_shared.DSO) [0x4301ed]\n??:? int rt.sections_elf_shared.DSO.opApply(scope
    int delegate(ref rt.sections_elf_shared.DSO)) [0x43069c]\n??:? int rt.minfo.moduleinfos_apply(scope
    int delegate(immutable(object.ModuleInfo*))) [0x430179]\n??:? int object.ModuleInfo.opApply(scope
    int delegate(object.ModuleInfo*)) [0x42b031]\n??:? runModuleUnitTests [0x42bf9d]\n??:?
    void rt.dmain2._d_run_main(int, char**, extern (C) int function(char[][])*).runAll()
    [0x42862c]\n??:? void rt.dmain2._d_run_main(int, char**, extern (C) int function(char[][])*).tryExec(scope
    void delegate()) [0x4285b3]\n??:? _d_run_main [0x42851e]\n??:? main [0x427f73]\n??:?
    __libc_start_main [0x4442b554]\n1/1 unittests FAILED\n'''
  stdout: b''
- exit_code: 1
  program: "import std.typecons;\nimport std.math;\n/*\nReturn True if all numbers\
    \ in the list l are below threshold t.\n    >>> below_threshold([1L, 2L, 4L, 10L],\
    \ 100L)\n    true\n    >>> below_threshold([1L, 20L, 4L, 10L], 5L)\n    false\n\
    \    \n*/\nbool below_threshold(long[] l, long t) \n{\n    foreach(i; l)\n   \
    \ {\n        if(i > t)\n            return false;\n    }\n    return true;\n}\n\
    unittest\n{\n    alias candidate = below_threshold;\n\n    assert(candidate([1L,\
    \ 2L, 4L, 10L], 100L) == true);\n    assert(candidate([1L, 20L, 4L, 10L], 5L)\
    \ == false);\n    assert(candidate([1L, 20L, 4L, 10L], 21L) == true);\n    assert(candidate([1L,\
    \ 20L, 4L, 10L], 22L) == true);\n    assert(candidate([1L, 8L, 4L, 10L], 11L)\
    \ == true);\n    assert(candidate([1L, 8L, 4L, 10L], 10L) == false);\n}\nvoid\
    \ main(){}"
  status: Exception
  stderr: 'b''core.exception.AssertError@/tmp/tmp70o9mbir.d(29): unittest failure\n----------------\n??:?
    _d_unittestp [0x4281dd]\n??:? void tmp70o9mbir.__unittest_L20_C1() [0x427f4b]\n??:?
    void tmp70o9mbir.__modtest() [0x427f60]\n??:? int core.runtime.runModuleUnitTests().__foreachbody2(object.ModuleInfo*)
    [0x42c1c7]\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)).__lambda2(immutable(object.ModuleInfo*))
    [0x42b05a]\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))).__foreachbody2(ref
    rt.sections_elf_shared.DSO) [0x4301ed]\n??:? int rt.sections_elf_shared.DSO.opApply(scope
    int delegate(ref rt.sections_elf_shared.DSO)) [0x43069c]\n??:? int rt.minfo.moduleinfos_apply(scope
    int delegate(immutable(object.ModuleInfo*))) [0x430179]\n??:? int object.ModuleInfo.opApply(scope
    int delegate(object.ModuleInfo*)) [0x42b031]\n??:? runModuleUnitTests [0x42bf9d]\n??:?
    void rt.dmain2._d_run_main(int, char**, extern (C) int function(char[][])*).runAll()
    [0x42862c]\n??:? void rt.dmain2._d_run_main(int, char**, extern (C) int function(char[][])*).tryExec(scope
    void delegate()) [0x4285b3]\n??:? _d_run_main [0x42851e]\n??:? main [0x427f73]\n??:?
    __libc_start_main [0x4442b554]\n1/1 unittests FAILED\n'''
  stdout: b''
- exit_code: 0
  program: "import std.typecons;\nimport std.math;\n/*\nReturn True if all numbers\
    \ in the list l are below threshold t.\n    >>> below_threshold([1L, 2L, 4L, 10L],\
    \ 100L)\n    true\n    >>> below_threshold([1L, 20L, 4L, 10L], 5L)\n    false\n\
    \    \n*/\nbool below_threshold(long[] l, long t) \n{\n    foreach(long x; l)\n\
    \    {\n        if(x >= t)\n            return false;\n    }\n    return true;\n\
    }\nunittest\n{\n    alias candidate = below_threshold;\n\n    assert(candidate([1L,\
    \ 2L, 4L, 10L], 100L) == true);\n    assert(candidate([1L, 20L, 4L, 10L], 5L)\
    \ == false);\n    assert(candidate([1L, 20L, 4L, 10L], 21L) == true);\n    assert(candidate([1L,\
    \ 20L, 4L, 10L], 22L) == true);\n    assert(candidate([1L, 8L, 4L, 10L], 11L)\
    \ == true);\n    assert(candidate([1L, 8L, 4L, 10L], 10L) == false);\n}\nvoid\
    \ main(){}"
  status: OK
  stderr: b''
  stdout: b''
- exit_code: 0
  program: "import std.typecons;\nimport std.math;\n/*\nReturn True if all numbers\
    \ in the list l are below threshold t.\n    >>> below_threshold([1L, 2L, 4L, 10L],\
    \ 100L)\n    true\n    >>> below_threshold([1L, 20L, 4L, 10L], 5L)\n    false\n\
    \    \n*/\nbool below_threshold(long[] l, long t) \n{\n    foreach(long x; l)\n\
    \    {\n        if(x >= t)\n            return false;\n    }\n    return true;\n\
    }\nunittest\n{\n    alias candidate = below_threshold;\n\n    assert(candidate([1L,\
    \ 2L, 4L, 10L], 100L) == true);\n    assert(candidate([1L, 20L, 4L, 10L], 5L)\
    \ == false);\n    assert(candidate([1L, 20L, 4L, 10L], 21L) == true);\n    assert(candidate([1L,\
    \ 20L, 4L, 10L], 22L) == true);\n    assert(candidate([1L, 8L, 4L, 10L], 11L)\
    \ == true);\n    assert(candidate([1L, 8L, 4L, 10L], 10L) == false);\n}\nvoid\
    \ main(){}"
  status: OK
  stderr: b''
  stdout: b''
- exit_code: 1
  program: "import std.typecons;\nimport std.math;\n/*\nReturn True if all numbers\
    \ in the list l are below threshold t.\n    >>> below_threshold([1L, 2L, 4L, 10L],\
    \ 100L)\n    true\n    >>> below_threshold([1L, 20L, 4L, 10L], 5L)\n    false\n\
    \    \n*/\nbool below_threshold(long[] l, long t) \n{\n    foreach(long i; l)\n\
    \    {\n        if(i > t)\n            return false;\n    }\n    return true;\n\
    }\nunittest\n{\n    alias candidate = below_threshold;\n\n    assert(candidate([1L,\
    \ 2L, 4L, 10L], 100L) == true);\n    assert(candidate([1L, 20L, 4L, 10L], 5L)\
    \ == false);\n    assert(candidate([1L, 20L, 4L, 10L], 21L) == true);\n    assert(candidate([1L,\
    \ 20L, 4L, 10L], 22L) == true);\n    assert(candidate([1L, 8L, 4L, 10L], 11L)\
    \ == true);\n    assert(candidate([1L, 8L, 4L, 10L], 10L) == false);\n}\nvoid\
    \ main(){}"
  status: Exception
  stderr: 'b''core.exception.AssertError@/tmp/tmpnp3ngt9z.d(29): unittest failure\n----------------\n??:?
    _d_unittestp [0x4281dd]\n??:? void tmpnp3ngt9z.__unittest_L20_C1() [0x427f4b]\n??:?
    void tmpnp3ngt9z.__modtest() [0x427f60]\n??:? int core.runtime.runModuleUnitTests().__foreachbody2(object.ModuleInfo*)
    [0x42c1c7]\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)).__lambda2(immutable(object.ModuleInfo*))
    [0x42b05a]\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))).__foreachbody2(ref
    rt.sections_elf_shared.DSO) [0x4301ed]\n??:? int rt.sections_elf_shared.DSO.opApply(scope
    int delegate(ref rt.sections_elf_shared.DSO)) [0x43069c]\n??:? int rt.minfo.moduleinfos_apply(scope
    int delegate(immutable(object.ModuleInfo*))) [0x430179]\n??:? int object.ModuleInfo.opApply(scope
    int delegate(object.ModuleInfo*)) [0x42b031]\n??:? runModuleUnitTests [0x42bf9d]\n??:?
    void rt.dmain2._d_run_main(int, char**, extern (C) int function(char[][])*).runAll()
    [0x42862c]\n??:? void rt.dmain2._d_run_main(int, char**, extern (C) int function(char[][])*).tryExec(scope
    void delegate()) [0x4285b3]\n??:? _d_run_main [0x42851e]\n??:? main [0x427f73]\n??:?
    __libc_start_main [0x76bf1554]\n1/1 unittests FAILED\n'''
  stdout: b''
- exit_code: 1
  program: "import std.typecons;\nimport std.math;\n/*\nReturn True if all numbers\
    \ in the list l are below threshold t.\n    >>> below_threshold([1L, 2L, 4L, 10L],\
    \ 100L)\n    true\n    >>> below_threshold([1L, 20L, 4L, 10L], 5L)\n    false\n\
    \    \n*/\nbool below_threshold(long[] l, long t) \n{\n    foreach(i; l)\n   \
    \ {\n        if(i > t)\n            return false;\n    }\n    return true;\n}\n\
    unittest\n{\n    alias candidate = below_threshold;\n\n    assert(candidate([1L,\
    \ 2L, 4L, 10L], 100L) == true);\n    assert(candidate([1L, 20L, 4L, 10L], 5L)\
    \ == false);\n    assert(candidate([1L, 20L, 4L, 10L], 21L) == true);\n    assert(candidate([1L,\
    \ 20L, 4L, 10L], 22L) == true);\n    assert(candidate([1L, 8L, 4L, 10L], 11L)\
    \ == true);\n    assert(candidate([1L, 8L, 4L, 10L], 10L) == false);\n}\nvoid\
    \ main(){}"
  status: Exception
  stderr: 'b''core.exception.AssertError@/tmp/tmp70o9mbir.d(29): unittest failure\n----------------\n??:?
    _d_unittestp [0x4281dd]\n??:? void tmp70o9mbir.__unittest_L20_C1() [0x427f4b]\n??:?
    void tmp70o9mbir.__modtest() [0x427f60]\n??:? int core.runtime.runModuleUnitTests().__foreachbody2(object.ModuleInfo*)
    [0x42c1c7]\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)).__lambda2(immutable(object.ModuleInfo*))
    [0x42b05a]\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))).__foreachbody2(ref
    rt.sections_elf_shared.DSO) [0x4301ed]\n??:? int rt.sections_elf_shared.DSO.opApply(scope
    int delegate(ref rt.sections_elf_shared.DSO)) [0x43069c]\n??:? int rt.minfo.moduleinfos_apply(scope
    int delegate(immutable(object.ModuleInfo*))) [0x430179]\n??:? int object.ModuleInfo.opApply(scope
    int delegate(object.ModuleInfo*)) [0x42b031]\n??:? runModuleUnitTests [0x42bf9d]\n??:?
    void rt.dmain2._d_run_main(int, char**, extern (C) int function(char[][])*).runAll()
    [0x42862c]\n??:? void rt.dmain2._d_run_main(int, char**, extern (C) int function(char[][])*).tryExec(scope
    void delegate()) [0x4285b3]\n??:? _d_run_main [0x42851e]\n??:? main [0x427f73]\n??:?
    __libc_start_main [0x4442b554]\n1/1 unittests FAILED\n'''
  stdout: b''
- exit_code: 1
  program: "import std.typecons;\nimport std.math;\n/*\nReturn True if all numbers\
    \ in the list l are below threshold t.\n    >>> below_threshold([1L, 2L, 4L, 10L],\
    \ 100L)\n    true\n    >>> below_threshold([1L, 20L, 4L, 10L], 5L)\n    false\n\
    \    \n*/\nbool below_threshold(long[] l, long t) \n{\n    foreach(long x; l)\n\
    \    {\n        if(x > t)\n            return false;\n    }\n    return true;\n\
    }\nunittest\n{\n    alias candidate = below_threshold;\n\n    assert(candidate([1L,\
    \ 2L, 4L, 10L], 100L) == true);\n    assert(candidate([1L, 20L, 4L, 10L], 5L)\
    \ == false);\n    assert(candidate([1L, 20L, 4L, 10L], 21L) == true);\n    assert(candidate([1L,\
    \ 20L, 4L, 10L], 22L) == true);\n    assert(candidate([1L, 8L, 4L, 10L], 11L)\
    \ == true);\n    assert(candidate([1L, 8L, 4L, 10L], 10L) == false);\n}\nvoid\
    \ main(){}"
  status: SyntaxError
  stderr: 'b''Error: cannot find source code for runtime library file \''object.d\''\n       dmd
    might not be correctly installed. Run \''dmd -man\'' for installation instructions.\nimport
    path[0] = /tmp\nFailed: ["dmd", "-unittest", "-v", "-o-", "/tmp/tmps_bp72k5.d",
    "-I/tmp"]\n'''
  stdout: b''
  timestamp: 1659797732
- exit_code: 1
  program: "import std.typecons;\nimport std.math;\n/*\nReturn True if all numbers\
    \ in the list l are below threshold t.\n    >>> below_threshold([1L, 2L, 4L, 10L],\
    \ 100L)\n    true\n    >>> below_threshold([1L, 20L, 4L, 10L], 5L)\n    false\n\
    \    \n*/\nbool below_threshold(long[] l, long t) \n{\n    foreach(i; l)\n   \
    \ {\n        if(i > t)\n            return false;\n    }\n    return true;\n}\n\
    /*\nReturn True if all numbers in the list l are below threshold t.\n    >>> below_threshold([1L,\
    \ 2L, 4L, 10L], 100L)\n    true\n    >>> below_threshold([1L, 20L, 4L, 10L], 5L)\n\
    \    false\n    \n*/\nunittest\n{\n    alias candidate = below_threshold;\n\n\
    \    assert(candidate([1L, 2L, 4L, 10L], 100L) == true);\n    assert(candidate([1L,\
    \ 20L, 4L, 10L], 5L) == false);\n    assert(candidate([1L, 20L, 4L, 10L], 21L)\
    \ == true);\n    assert(candidate([1L, 20L, 4L, 10L], 22L) == true);\n    assert(candidate([1L,\
    \ 8L, 4L, 10L], 11L) == true);\n    assert(candidate([1L, 8L, 4L, 10L], 10L) ==\
    \ false);\n}\nvoid main(){}"
  status: SyntaxError
  stderr: 'b''Error: cannot find source code for runtime library file \''object.d\''\n       dmd
    might not be correctly installed. Run \''dmd -man\'' for installation instructions.\nimport
    path[0] = /tmp\nFailed: ["dmd", "-unittest", "-v", "-o-", "/tmp/tmp6pbrysvg.d",
    "-I/tmp"]\n'''
  stdout: b''
  timestamp: 1659797732
- exit_code: 1
  program: "import std.typecons;\nimport std.math;\n/*\nReturn True if all numbers\
    \ in the list l are below threshold t.\n    >>> below_threshold([1L, 2L, 4L, 10L],\
    \ 100L)\n    true\n    >>> below_threshold([1L, 20L, 4L, 10L], 5L)\n    false\n\
    \    \n*/\nbool below_threshold(long[] l, long t) \n{\n    foreach(long x; l)\n\
    \    {\n        if(x >= t)\n            return false;\n    }\n    return true;\n\
    }\n/*\nReturn the number of elements in the list l that are below threshold t.\n\
    \    >>> count_below_threshold([1L, 2L, 4L, 10L], 100L)\n    4\n    >>> count_below_threshold([1L,\
    \ 20L, 4L, 10L], 5L)\n    2\n*/\nlong count_below_threshold(long[] l, long t)\
    \ \n{\n    long count = 0;\n    foreach(long x; l)\n    {\n        if(x < t)\n\
    \            count++;\n    }\n    return count;\n}\n/*\nReturn the number of elements\
    \ in the list l that are below threshold t.\n    >>> count_below_threshold([1L,\
    \ 2L, 4L, 10L], 100L)\n    4\n    >>> count_below_threshold([1L, 20L, 4L, 10L],\
    \ 5L)\n    2\n*/\nlong count_below_threshold_2(long[] l, long t) \n{\n    long\
    \ count = 0;\n    foreach(long x; l)\n    {\n        if(x < t)\n            count++;\n\
    \    }\n    return count;\n}\n/*\nReturn the number of elements in the list l\
    \ that are below threshold t.\n    >>> count_below_threshold([1L, 2L, 4L, 10L],\
    \ 100L)\n    4\n    >>> count_below_threshold([1L, 20L, 4L, 10L], 5L)\n    2\n\
    */\nlong count_below_threshold_3(long[] l, long t) \n{\n    long count = 0;\n\
    \    foreach(long x; l)\n    {\n        if(x < t)\n            count++;\n    }\n\
    \    return count;\n}\n/*\nReturn the number of elements in the list l that are\
    \ below threshold t.\n    >>> count_below_threshold([1L, 2L, 4L, 10L], 100L)\n\
    \    4\n    >>> count_below_threshold([1L,\nunittest\n{\n    alias candidate =\
    \ below_threshold;\n\n    assert(candidate([1L, 2L, 4L, 10L], 100L) == true);\n\
    \    assert(candidate([1L, 20L, 4L, 10L], 5L) == false);\n    assert(candidate([1L,\
    \ 20L, 4L, 10L], 21L) == true);\n    assert(candidate([1L, 20L, 4L, 10L], 22L)\
    \ == true);\n    assert(candidate([1L, 8L, 4L, 10L], 11L) == true);\n    assert(candidate([1L,\
    \ 8L, 4L, 10L], 10L) == false);\n}\nvoid main(){}"
  status: SyntaxError
  stderr: 'b''/tmp/tmpr04gul4n.d(71): Error: unterminated /* */ comment\nFailed: ["dmd",
    "-unittest", "-v", "-o-", "/tmp/tmpr04gul4n.d", "-I/tmp"]\n'''
  stdout: b''
  timestamp: 1659797731
- exit_code: 0
  program: "import std.typecons;\nimport std.math;\n/*\nReturn True if all numbers\
    \ in the list l are below threshold t.\n    >>> below_threshold([1L, 2L, 4L, 10L],\
    \ 100L)\n    true\n    >>> below_threshold([1L, 20L, 4L, 10L], 5L)\n    false\n\
    \    \n*/\nbool below_threshold(long[] l, long t) \n{\n    foreach(long x; l)\n\
    \    {\n        if(x >= t)\n            return false;\n    }\n    return true;\n\
    }\nunittest\n{\n    alias candidate = below_threshold;\n\n    assert(candidate([1L,\
    \ 2L, 4L, 10L], 100L) == true);\n    assert(candidate([1L, 20L, 4L, 10L], 5L)\
    \ == false);\n    assert(candidate([1L, 20L, 4L, 10L], 21L) == true);\n    assert(candidate([1L,\
    \ 20L, 4L, 10L], 22L) == true);\n    assert(candidate([1L, 8L, 4L, 10L], 11L)\
    \ == true);\n    assert(candidate([1L, 8L, 4L, 10L], 10L) == false);\n}\nvoid\
    \ main(){}"
  status: OK
  stderr: b''
  stdout: b''
- exit_code: 1
  program: "import std.typecons;\nimport std.math;\n/*\nReturn True if all numbers\
    \ in the list l are below threshold t.\n    >>> below_threshold([1L, 2L, 4L, 10L],\
    \ 100L)\n    true\n    >>> below_threshold([1L, 20L, 4L, 10L], 5L)\n    false\n\
    \    \n*/\nbool below_threshold(long[] l, long t) \n{\n    foreach(long i; l)\n\
    \    {\n        if(i > t)\n            return false;\n    }\n    return true;\n\
    }\n/*\nReturn the number of elements in the list l that are below threshold t.\n\
    \    >>> count_below_threshold([1L, 2L, 4L, 10L], 100L)\n    4\n    >>> count_below_threshold([1L,\
    \ 20L, 4L, 10L], 5L)\n    2\n*/\nlong count_below_threshold(long[] l, long t)\
    \ \n{\n    long count = 0;\n    foreach(long i; l)\n    {\n        if(i < t)\n\
    \            count++;\n    }\n    return count;\n}\n/*\nReturn the number of elements\
    \ in the list l that are below threshold t.\n    >>> count_below_threshold([1L,\
    \ 2L, 4L, 10L], 100L)\n    4\n    >>> count_below_threshold([1L, 20L, 4L, 10L],\
    \ 5L)\n    2\n*/\nlong count_below_threshold2(long[] l, long t) \n{\n    long\
    \ count = 0;\n    foreach(long i; l)\n    {\n        if(i < t)\n            count++;\n\
    \    }\n    return count;\n}\n/*\nReturn the number of elements in the list l\
    \ that are below threshold t.\n    >>> count_below_threshold([1L, 2L, 4L, 10L],\
    \ 100L)\n    4\n    >>> count_below_threshold([1L, 20L, 4L, 10L], 5L)\n    2\n\
    */\nlong count_below_threshold3(long[] l, long t) \n{\n    long count = 0;\n \
    \   foreach(long i; l)\n    {\n        if(i < t)\n            count++;\n    }\n\
    \    return count;\n}\n/*\nReturn the number of elements in the list l that are\
    \ below threshold t.\n    >>> count_below_threshold([1L, 2L, 4L, 10L], 100L)\n\
    \    4\n    >>> count_below_threshold([1L, 20L\nunittest\n{\n    alias candidate\
    \ = below_threshold;\n\n    assert(candidate([1L, 2L, 4L, 10L], 100L) == true);\n\
    \    assert(candidate([1L, 20L, 4L, 10L], 5L) == false);\n    assert(candidate([1L,\
    \ 20L, 4L, 10L], 21L) == true);\n    assert(candidate([1L, 20L, 4L, 10L], 22L)\
    \ == true);\n    assert(candidate([1L, 8L, 4L, 10L], 11L) == true);\n    assert(candidate([1L,\
    \ 8L, 4L, 10L], 10L) == false);\n}\nvoid main(){}"
  status: SyntaxError
  stderr: 'b''/tmp/tmpxwnvpf5u.d(71): Error: unterminated /* */ comment\nFailed: ["dmd",
    "-unittest", "-v", "-o-", "/tmp/tmpxwnvpf5u.d", "-I/tmp"]\n'''
  stdout: b''
  timestamp: 1659797731
- exit_code: 0
  program: "import std.typecons;\nimport std.math;\n/*\nReturn True if all numbers\
    \ in the list l are below threshold t.\n    >>> below_threshold([1L, 2L, 4L, 10L],\
    \ 100L)\n    true\n    >>> below_threshold([1L, 20L, 4L, 10L], 5L)\n    false\n\
    \    \n*/\nbool below_threshold(long[] l, long t) \n{\n    foreach(long x; l)\n\
    \    {\n        if(x >= t)\n            return false;\n    }\n    return true;\n\
    }\nunittest\n{\n    alias candidate = below_threshold;\n\n    assert(candidate([1L,\
    \ 2L, 4L, 10L], 100L) == true);\n    assert(candidate([1L, 20L, 4L, 10L], 5L)\
    \ == false);\n    assert(candidate([1L, 20L, 4L, 10L], 21L) == true);\n    assert(candidate([1L,\
    \ 20L, 4L, 10L], 22L) == true);\n    assert(candidate([1L, 8L, 4L, 10L], 11L)\
    \ == true);\n    assert(candidate([1L, 8L, 4L, 10L], 10L) == false);\n}\nvoid\
    \ main(){}"
  status: OK
  stderr: b''
  stdout: b''
- exit_code: 1
  program: "import std.typecons;\nimport std.math;\n/*\nReturn True if all numbers\
    \ in the list l are below threshold t.\n    >>> below_threshold([1L, 2L, 4L, 10L],\
    \ 100L)\n    true\n    >>> below_threshold([1L, 20L, 4L, 10L], 5L)\n    false\n\
    \    \n*/\nbool below_threshold(long[] l, long t) \n{\n    foreach(long x; l)\n\
    \    {\n        if(x > t)\n            return false;\n    }\n    return true;\n\
    }\nunittest\n{\n    alias candidate = below_threshold;\n\n    assert(candidate([1L,\
    \ 2L, 4L, 10L], 100L) == true);\n    assert(candidate([1L, 20L, 4L, 10L], 5L)\
    \ == false);\n    assert(candidate([1L, 20L, 4L, 10L], 21L) == true);\n    assert(candidate([1L,\
    \ 20L, 4L, 10L], 22L) == true);\n    assert(candidate([1L, 8L, 4L, 10L], 11L)\
    \ == true);\n    assert(candidate([1L, 8L, 4L, 10L], 10L) == false);\n}\nvoid\
    \ main(){}"
  status: SyntaxError
  stderr: 'b''Error: cannot find source code for runtime library file \''object.d\''\n       dmd
    might not be correctly installed. Run \''dmd -man\'' for installation instructions.\nimport
    path[0] = /tmp\nFailed: ["dmd", "-unittest", "-v", "-o-", "/tmp/tmps_bp72k5.d",
    "-I/tmp"]\n'''
  stdout: b''
  timestamp: 1659797732
- exit_code: 1
  program: "import std.typecons;\nimport std.math;\n/*\nReturn True if all numbers\
    \ in the list l are below threshold t.\n    >>> below_threshold([1L, 2L, 4L, 10L],\
    \ 100L)\n    true\n    >>> below_threshold([1L, 20L, 4L, 10L], 5L)\n    false\n\
    \    \n*/\nbool below_threshold(long[] l, long t) \n{\n    foreach(long i; l)\n\
    \    {\n        if(i > t)\n            return false;\n    }\n    return true;\n\
    }\nunittest\n{\n    alias candidate = below_threshold;\n\n    assert(candidate([1L,\
    \ 2L, 4L, 10L], 100L) == true);\n    assert(candidate([1L, 20L, 4L, 10L], 5L)\
    \ == false);\n    assert(candidate([1L, 20L, 4L, 10L], 21L) == true);\n    assert(candidate([1L,\
    \ 20L, 4L, 10L], 22L) == true);\n    assert(candidate([1L, 8L, 4L, 10L], 11L)\
    \ == true);\n    assert(candidate([1L, 8L, 4L, 10L], 10L) == false);\n}\nvoid\
    \ main(){}"
  status: Exception
  stderr: 'b''core.exception.AssertError@/tmp/tmpnp3ngt9z.d(29): unittest failure\n----------------\n??:?
    _d_unittestp [0x4281dd]\n??:? void tmpnp3ngt9z.__unittest_L20_C1() [0x427f4b]\n??:?
    void tmpnp3ngt9z.__modtest() [0x427f60]\n??:? int core.runtime.runModuleUnitTests().__foreachbody2(object.ModuleInfo*)
    [0x42c1c7]\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)).__lambda2(immutable(object.ModuleInfo*))
    [0x42b05a]\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))).__foreachbody2(ref
    rt.sections_elf_shared.DSO) [0x4301ed]\n??:? int rt.sections_elf_shared.DSO.opApply(scope
    int delegate(ref rt.sections_elf_shared.DSO)) [0x43069c]\n??:? int rt.minfo.moduleinfos_apply(scope
    int delegate(immutable(object.ModuleInfo*))) [0x430179]\n??:? int object.ModuleInfo.opApply(scope
    int delegate(object.ModuleInfo*)) [0x42b031]\n??:? runModuleUnitTests [0x42bf9d]\n??:?
    void rt.dmain2._d_run_main(int, char**, extern (C) int function(char[][])*).runAll()
    [0x42862c]\n??:? void rt.dmain2._d_run_main(int, char**, extern (C) int function(char[][])*).tryExec(scope
    void delegate()) [0x4285b3]\n??:? _d_run_main [0x42851e]\n??:? main [0x427f73]\n??:?
    __libc_start_main [0x76bf1554]\n1/1 unittests FAILED\n'''
  stdout: b''
- exit_code: 1
  program: "import std.typecons;\nimport std.math;\n/*\nReturn True if all numbers\
    \ in the list l are below threshold t.\n    >>> below_threshold([1L, 2L, 4L, 10L],\
    \ 100L)\n    true\n    >>> below_threshold([1L, 20L, 4L, 10L], 5L)\n    false\n\
    \    \n*/\nbool below_threshold(long[] l, long t) \n{\n    foreach(long i; l)\
    \ \n    {\n        if(i >= t) \n        {\n            return false;\n       \
    \ }\n    }\n    return true;\n}\nunittest\n{\n    alias candidate = below_threshold;\n\
    \n    assert(candidate([1L, 2L, 4L, 10L], 100L) == true);\n    assert(candidate([1L,\
    \ 20L, 4L, 10L], 5L) == false);\n    assert(candidate([1L, 20L, 4L, 10L], 21L)\
    \ == true);\n    assert(candidate([1L, 20L, 4L, 10L], 22L) == true);\n    assert(candidate([1L,\
    \ 8L, 4L, 10L], 11L) == true);\n    assert(candidate([1L, 8L, 4L, 10L], 10L) ==\
    \ false);\n}\nvoid main(){}"
  status: SyntaxError
  stderr: 'b''Error: cannot find source code for runtime library file \''object.d\''\n       dmd
    might not be correctly installed. Run \''dmd -man\'' for installation instructions.\nimport
    path[0] = /tmp\nFailed: ["dmd", "-unittest", "-v", "-o-", "/tmp/tmpd8yip75o.d",
    "-I/tmp"]\n'''
  stdout: b''
  timestamp: 1659797732
- exit_code: 1
  program: "import std.typecons;\nimport std.math;\n/*\nReturn True if all numbers\
    \ in the list l are below threshold t.\n    >>> below_threshold([1L, 2L, 4L, 10L],\
    \ 100L)\n    true\n    >>> below_threshold([1L, 20L, 4L, 10L], 5L)\n    false\n\
    \    \n*/\nbool below_threshold(long[] l, long t) \n{\n    foreach(i; l) \n  \
    \  {\n        if(i > t) \n        {\n            return false;\n        }\n  \
    \  }\n    return true;\n}\nunittest\n{\n    alias candidate = below_threshold;\n\
    \n    assert(candidate([1L, 2L, 4L, 10L], 100L) == true);\n    assert(candidate([1L,\
    \ 20L, 4L, 10L], 5L) == false);\n    assert(candidate([1L, 20L, 4L, 10L], 21L)\
    \ == true);\n    assert(candidate([1L, 20L, 4L, 10L], 22L) == true);\n    assert(candidate([1L,\
    \ 8L, 4L, 10L], 11L) == true);\n    assert(candidate([1L, 8L, 4L, 10L], 10L) ==\
    \ false);\n}\nvoid main(){}"
  status: Exception
  stderr: 'b''core.exception.AssertError@/tmp/tmpubws1iu7.d(31): unittest failure\n----------------\n??:?
    _d_unittestp [0x4281dd]\n??:? void tmpubws1iu7.__unittest_L22_C1() [0x427f4b]\n??:?
    void tmpubws1iu7.__modtest() [0x427f60]\n??:? int core.runtime.runModuleUnitTests().__foreachbody2(object.ModuleInfo*)
    [0x42c1c7]\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)).__lambda2(immutable(object.ModuleInfo*))
    [0x42b05a]\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))).__foreachbody2(ref
    rt.sections_elf_shared.DSO) [0x4301ed]\n??:? int rt.sections_elf_shared.DSO.opApply(scope
    int delegate(ref rt.sections_elf_shared.DSO)) [0x43069c]\n??:? int rt.minfo.moduleinfos_apply(scope
    int delegate(immutable(object.ModuleInfo*))) [0x430179]\n??:? int object.ModuleInfo.opApply(scope
    int delegate(object.ModuleInfo*)) [0x42b031]\n??:? runModuleUnitTests [0x42bf9d]\n??:?
    void rt.dmain2._d_run_main(int, char**, extern (C) int function(char[][])*).runAll()
    [0x42862c]\n??:? void rt.dmain2._d_run_main(int, char**, extern (C) int function(char[][])*).tryExec(scope
    void delegate()) [0x4285b3]\n??:? _d_run_main [0x42851e]\n??:? main [0x427f73]\n??:?
    __libc_start_main [0xe0f51554]\n1/1 unittests FAILED\n'''
  stdout: b''
- exit_code: 1
  program: "import std.typecons;\nimport std.math;\n/*\nReturn True if all numbers\
    \ in the list l are below threshold t.\n    >>> below_threshold([1L, 2L, 4L, 10L],\
    \ 100L)\n    true\n    >>> below_threshold([1L, 20L, 4L, 10L], 5L)\n    false\n\
    \    \n*/\nbool below_threshold(long[] l, long t) \n{\n    foreach(long i; l)\n\
    \    {\n        if(i > t)\n            return false;\n    }\n    return true;\n\
    }\nunittest\n{\n    alias candidate = below_threshold;\n\n    assert(candidate([1L,\
    \ 2L, 4L, 10L], 100L) == true);\n    assert(candidate([1L, 20L, 4L, 10L], 5L)\
    \ == false);\n    assert(candidate([1L, 20L, 4L, 10L], 21L) == true);\n    assert(candidate([1L,\
    \ 20L, 4L, 10L], 22L) == true);\n    assert(candidate([1L, 8L, 4L, 10L], 11L)\
    \ == true);\n    assert(candidate([1L, 8L, 4L, 10L], 10L) == false);\n}\nvoid\
    \ main(){}"
  status: Exception
  stderr: 'b''core.exception.AssertError@/tmp/tmpnp3ngt9z.d(29): unittest failure\n----------------\n??:?
    _d_unittestp [0x4281dd]\n??:? void tmpnp3ngt9z.__unittest_L20_C1() [0x427f4b]\n??:?
    void tmpnp3ngt9z.__modtest() [0x427f60]\n??:? int core.runtime.runModuleUnitTests().__foreachbody2(object.ModuleInfo*)
    [0x42c1c7]\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)).__lambda2(immutable(object.ModuleInfo*))
    [0x42b05a]\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))).__foreachbody2(ref
    rt.sections_elf_shared.DSO) [0x4301ed]\n??:? int rt.sections_elf_shared.DSO.opApply(scope
    int delegate(ref rt.sections_elf_shared.DSO)) [0x43069c]\n??:? int rt.minfo.moduleinfos_apply(scope
    int delegate(immutable(object.ModuleInfo*))) [0x430179]\n??:? int object.ModuleInfo.opApply(scope
    int delegate(object.ModuleInfo*)) [0x42b031]\n??:? runModuleUnitTests [0x42bf9d]\n??:?
    void rt.dmain2._d_run_main(int, char**, extern (C) int function(char[][])*).runAll()
    [0x42862c]\n??:? void rt.dmain2._d_run_main(int, char**, extern (C) int function(char[][])*).tryExec(scope
    void delegate()) [0x4285b3]\n??:? _d_run_main [0x42851e]\n??:? main [0x427f73]\n??:?
    __libc_start_main [0x76bf1554]\n1/1 unittests FAILED\n'''
  stdout: b''
- exit_code: 1
  program: "import std.typecons;\nimport std.math;\n/*\nReturn True if all numbers\
    \ in the list l are below threshold t.\n    >>> below_threshold([1L, 2L, 4L, 10L],\
    \ 100L)\n    true\n    >>> below_threshold([1L, 20L, 4L, 10L], 5L)\n    false\n\
    \    \n*/\nbool below_threshold(long[] l, long t) \n{\n    foreach(i; l)\n   \
    \ {\n        if(i >= t)\n            return false;\n    }\n    return true;\n\
    }\nunittest\n{\n    alias candidate = below_threshold;\n\n    assert(candidate([1L,\
    \ 2L, 4L, 10L], 100L) == true);\n    assert(candidate([1L, 20L, 4L, 10L], 5L)\
    \ == false);\n    assert(candidate([1L, 20L, 4L, 10L], 21L) == true);\n    assert(candidate([1L,\
    \ 20L, 4L, 10L], 22L) == true);\n    assert(candidate([1L, 8L, 4L, 10L], 11L)\
    \ == true);\n    assert(candidate([1L, 8L, 4L, 10L], 10L) == false);\n}\nvoid\
    \ main(){}"
  status: SyntaxError
  stderr: 'b''Error: cannot find source code for runtime library file \''object.d\''\n       dmd
    might not be correctly installed. Run \''dmd -man\'' for installation instructions.\nimport
    path[0] = /tmp\nFailed: ["dmd", "-unittest", "-v", "-o-", "/tmp/tmpiw1qgsmo.d",
    "-I/tmp"]\n'''
  stdout: b''
  timestamp: 1659797732
- exit_code: 1
  program: "import std.typecons;\nimport std.math;\n/*\nReturn True if all numbers\
    \ in the list l are below threshold t.\n    >>> below_threshold([1L, 2L, 4L, 10L],\
    \ 100L)\n    true\n    >>> below_threshold([1L, 20L, 4L, 10L], 5L)\n    false\n\
    \    \n*/\nbool below_threshold(long[] l, long t) \n{\n    foreach(i; l)\n   \
    \ {\n        if(i > t)\n            return false;\n    }\n    return true;\n}\n\
    unittest\n{\n    alias candidate = below_threshold;\n\n    assert(candidate([1L,\
    \ 2L, 4L, 10L], 100L) == true);\n    assert(candidate([1L, 20L, 4L, 10L], 5L)\
    \ == false);\n    assert(candidate([1L, 20L, 4L, 10L], 21L) == true);\n    assert(candidate([1L,\
    \ 20L, 4L, 10L], 22L) == true);\n    assert(candidate([1L, 8L, 4L, 10L], 11L)\
    \ == true);\n    assert(candidate([1L, 8L, 4L, 10L], 10L) == false);\n}\nvoid\
    \ main(){}"
  status: Exception
  stderr: 'b''core.exception.AssertError@/tmp/tmp70o9mbir.d(29): unittest failure\n----------------\n??:?
    _d_unittestp [0x4281dd]\n??:? void tmp70o9mbir.__unittest_L20_C1() [0x427f4b]\n??:?
    void tmp70o9mbir.__modtest() [0x427f60]\n??:? int core.runtime.runModuleUnitTests().__foreachbody2(object.ModuleInfo*)
    [0x42c1c7]\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)).__lambda2(immutable(object.ModuleInfo*))
    [0x42b05a]\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))).__foreachbody2(ref
    rt.sections_elf_shared.DSO) [0x4301ed]\n??:? int rt.sections_elf_shared.DSO.opApply(scope
    int delegate(ref rt.sections_elf_shared.DSO)) [0x43069c]\n??:? int rt.minfo.moduleinfos_apply(scope
    int delegate(immutable(object.ModuleInfo*))) [0x430179]\n??:? int object.ModuleInfo.opApply(scope
    int delegate(object.ModuleInfo*)) [0x42b031]\n??:? runModuleUnitTests [0x42bf9d]\n??:?
    void rt.dmain2._d_run_main(int, char**, extern (C) int function(char[][])*).runAll()
    [0x42862c]\n??:? void rt.dmain2._d_run_main(int, char**, extern (C) int function(char[][])*).tryExec(scope
    void delegate()) [0x4285b3]\n??:? _d_run_main [0x42851e]\n??:? main [0x427f73]\n??:?
    __libc_start_main [0x4442b554]\n1/1 unittests FAILED\n'''
  stdout: b''
- exit_code: 1
  program: "import std.typecons;\nimport std.math;\n/*\nReturn True if all numbers\
    \ in the list l are below threshold t.\n    >>> below_threshold([1L, 2L, 4L, 10L],\
    \ 100L)\n    true\n    >>> below_threshold([1L, 20L, 4L, 10L], 5L)\n    false\n\
    \    \n*/\nbool below_threshold(long[] l, long t) \n{\n    foreach(long i; l)\n\
    \    {\n        if(i > t)\n            return false;\n    }\n    return true;\n\
    }\nunittest\n{\n    alias candidate = below_threshold;\n\n    assert(candidate([1L,\
    \ 2L, 4L, 10L], 100L) == true);\n    assert(candidate([1L, 20L, 4L, 10L], 5L)\
    \ == false);\n    assert(candidate([1L, 20L, 4L, 10L], 21L) == true);\n    assert(candidate([1L,\
    \ 20L, 4L, 10L], 22L) == true);\n    assert(candidate([1L, 8L, 4L, 10L], 11L)\
    \ == true);\n    assert(candidate([1L, 8L, 4L, 10L], 10L) == false);\n}\nvoid\
    \ main(){}"
  status: Exception
  stderr: 'b''core.exception.AssertError@/tmp/tmpnp3ngt9z.d(29): unittest failure\n----------------\n??:?
    _d_unittestp [0x4281dd]\n??:? void tmpnp3ngt9z.__unittest_L20_C1() [0x427f4b]\n??:?
    void tmpnp3ngt9z.__modtest() [0x427f60]\n??:? int core.runtime.runModuleUnitTests().__foreachbody2(object.ModuleInfo*)
    [0x42c1c7]\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)).__lambda2(immutable(object.ModuleInfo*))
    [0x42b05a]\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))).__foreachbody2(ref
    rt.sections_elf_shared.DSO) [0x4301ed]\n??:? int rt.sections_elf_shared.DSO.opApply(scope
    int delegate(ref rt.sections_elf_shared.DSO)) [0x43069c]\n??:? int rt.minfo.moduleinfos_apply(scope
    int delegate(immutable(object.ModuleInfo*))) [0x430179]\n??:? int object.ModuleInfo.opApply(scope
    int delegate(object.ModuleInfo*)) [0x42b031]\n??:? runModuleUnitTests [0x42bf9d]\n??:?
    void rt.dmain2._d_run_main(int, char**, extern (C) int function(char[][])*).runAll()
    [0x42862c]\n??:? void rt.dmain2._d_run_main(int, char**, extern (C) int function(char[][])*).tryExec(scope
    void delegate()) [0x4285b3]\n??:? _d_run_main [0x42851e]\n??:? main [0x427f73]\n??:?
    __libc_start_main [0x76bf1554]\n1/1 unittests FAILED\n'''
  stdout: b''
- exit_code: 1
  program: "import std.typecons;\nimport std.math;\n/*\nReturn True if all numbers\
    \ in the list l are below threshold t.\n    >>> below_threshold([1L, 2L, 4L, 10L],\
    \ 100L)\n    true\n    >>> below_threshold([1L, 20L, 4L, 10L], 5L)\n    false\n\
    \    \n*/\nbool below_threshold(long[] l, long t) \n{\n    foreach(i; l)\n   \
    \ {\n        if(i > t)\n            return false;\n    }\n    return true;\n}\n\
    unittest\n{\n    alias candidate = below_threshold;\n\n    assert(candidate([1L,\
    \ 2L, 4L, 10L], 100L) == true);\n    assert(candidate([1L, 20L, 4L, 10L], 5L)\
    \ == false);\n    assert(candidate([1L, 20L, 4L, 10L], 21L) == true);\n    assert(candidate([1L,\
    \ 20L, 4L, 10L], 22L) == true);\n    assert(candidate([1L, 8L, 4L, 10L], 11L)\
    \ == true);\n    assert(candidate([1L, 8L, 4L, 10L], 10L) == false);\n}\nvoid\
    \ main(){}"
  status: Exception
  stderr: 'b''core.exception.AssertError@/tmp/tmp70o9mbir.d(29): unittest failure\n----------------\n??:?
    _d_unittestp [0x4281dd]\n??:? void tmp70o9mbir.__unittest_L20_C1() [0x427f4b]\n??:?
    void tmp70o9mbir.__modtest() [0x427f60]\n??:? int core.runtime.runModuleUnitTests().__foreachbody2(object.ModuleInfo*)
    [0x42c1c7]\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)).__lambda2(immutable(object.ModuleInfo*))
    [0x42b05a]\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))).__foreachbody2(ref
    rt.sections_elf_shared.DSO) [0x4301ed]\n??:? int rt.sections_elf_shared.DSO.opApply(scope
    int delegate(ref rt.sections_elf_shared.DSO)) [0x43069c]\n??:? int rt.minfo.moduleinfos_apply(scope
    int delegate(immutable(object.ModuleInfo*))) [0x430179]\n??:? int object.ModuleInfo.opApply(scope
    int delegate(object.ModuleInfo*)) [0x42b031]\n??:? runModuleUnitTests [0x42bf9d]\n??:?
    void rt.dmain2._d_run_main(int, char**, extern (C) int function(char[][])*).runAll()
    [0x42862c]\n??:? void rt.dmain2._d_run_main(int, char**, extern (C) int function(char[][])*).tryExec(scope
    void delegate()) [0x4285b3]\n??:? _d_run_main [0x42851e]\n??:? main [0x427f73]\n??:?
    __libc_start_main [0x4442b554]\n1/1 unittests FAILED\n'''
  stdout: b''
- exit_code: 1
  program: "import std.typecons;\nimport std.math;\n/*\nReturn True if all numbers\
    \ in the list l are below threshold t.\n    >>> below_threshold([1L, 2L, 4L, 10L],\
    \ 100L)\n    true\n    >>> below_threshold([1L, 20L, 4L, 10L], 5L)\n    false\n\
    \    \n*/\nbool below_threshold(long[] l, long t) \n{\n    foreach(x; l)\n   \
    \ {\n        if(x >= t)\n            return false;\n    }\n    return true;\n\
    }\n/*\nReturn True if all numbers in the list l are below threshold t.\n    >>>\
    \ below_threshold([1L, 2L, 4L, 10L], 100L)\n    true\n    >>> below_threshold([1L,\
    \ 20L, 4L, 10L], 5L)\n    false\n    \n*/\nunittest\n{\n    alias candidate =\
    \ below_threshold;\n\n    assert(candidate([1L, 2L, 4L, 10L], 100L) == true);\n\
    \    assert(candidate([1L, 20L, 4L, 10L], 5L) == false);\n    assert(candidate([1L,\
    \ 20L, 4L, 10L], 21L) == true);\n    assert(candidate([1L, 20L, 4L, 10L], 22L)\
    \ == true);\n    assert(candidate([1L, 8L, 4L, 10L], 11L) == true);\n    assert(candidate([1L,\
    \ 8L, 4L, 10L], 10L) == false);\n}\nvoid main(){}"
  status: SyntaxError
  stderr: 'b''Error: cannot find source code for runtime library file \''object.d\''\n       dmd
    might not be correctly installed. Run \''dmd -man\'' for installation instructions.\nimport
    path[0] = /tmp\nFailed: ["dmd", "-unittest", "-v", "-o-", "/tmp/tmpjkr4wows.d",
    "-I/tmp"]\n'''
  stdout: b''
  timestamp: 1659797732
- exit_code: 1
  program: "import std.typecons;\nimport std.math;\n/*\nReturn True if all numbers\
    \ in the list l are below threshold t.\n    >>> below_threshold([1L, 2L, 4L, 10L],\
    \ 100L)\n    true\n    >>> below_threshold([1L, 20L, 4L, 10L], 5L)\n    false\n\
    \    \n*/\nbool below_threshold(long[] l, long t) \n{\n    foreach(i; l)\n   \
    \ {\n        if(i > t)\n            return false;\n    }\n    return true;\n}\n\
    unittest\n{\n    alias candidate = below_threshold;\n\n    assert(candidate([1L,\
    \ 2L, 4L, 10L], 100L) == true);\n    assert(candidate([1L, 20L, 4L, 10L], 5L)\
    \ == false);\n    assert(candidate([1L, 20L, 4L, 10L], 21L) == true);\n    assert(candidate([1L,\
    \ 20L, 4L, 10L], 22L) == true);\n    assert(candidate([1L, 8L, 4L, 10L], 11L)\
    \ == true);\n    assert(candidate([1L, 8L, 4L, 10L], 10L) == false);\n}\nvoid\
    \ main(){}"
  status: Exception
  stderr: 'b''core.exception.AssertError@/tmp/tmp70o9mbir.d(29): unittest failure\n----------------\n??:?
    _d_unittestp [0x4281dd]\n??:? void tmp70o9mbir.__unittest_L20_C1() [0x427f4b]\n??:?
    void tmp70o9mbir.__modtest() [0x427f60]\n??:? int core.runtime.runModuleUnitTests().__foreachbody2(object.ModuleInfo*)
    [0x42c1c7]\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)).__lambda2(immutable(object.ModuleInfo*))
    [0x42b05a]\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))).__foreachbody2(ref
    rt.sections_elf_shared.DSO) [0x4301ed]\n??:? int rt.sections_elf_shared.DSO.opApply(scope
    int delegate(ref rt.sections_elf_shared.DSO)) [0x43069c]\n??:? int rt.minfo.moduleinfos_apply(scope
    int delegate(immutable(object.ModuleInfo*))) [0x430179]\n??:? int object.ModuleInfo.opApply(scope
    int delegate(object.ModuleInfo*)) [0x42b031]\n??:? runModuleUnitTests [0x42bf9d]\n??:?
    void rt.dmain2._d_run_main(int, char**, extern (C) int function(char[][])*).runAll()
    [0x42862c]\n??:? void rt.dmain2._d_run_main(int, char**, extern (C) int function(char[][])*).tryExec(scope
    void delegate()) [0x4285b3]\n??:? _d_run_main [0x42851e]\n??:? main [0x427f73]\n??:?
    __libc_start_main [0x4442b554]\n1/1 unittests FAILED\n'''
  stdout: b''
- exit_code: 1
  program: "import std.typecons;\nimport std.math;\n/*\nReturn True if all numbers\
    \ in the list l are below threshold t.\n    >>> below_threshold([1L, 2L, 4L, 10L],\
    \ 100L)\n    true\n    >>> below_threshold([1L, 20L, 4L, 10L], 5L)\n    false\n\
    \    \n*/\nbool below_threshold(long[] l, long t) \n{\n    foreach(i; l)\n   \
    \ {\n        if(i > t)\n            return false;\n    }\n    return true;\n}\n\
    unittest\n{\n    alias candidate = below_threshold;\n\n    assert(candidate([1L,\
    \ 2L, 4L, 10L], 100L) == true);\n    assert(candidate([1L, 20L, 4L, 10L], 5L)\
    \ == false);\n    assert(candidate([1L, 20L, 4L, 10L], 21L) == true);\n    assert(candidate([1L,\
    \ 20L, 4L, 10L], 22L) == true);\n    assert(candidate([1L, 8L, 4L, 10L], 11L)\
    \ == true);\n    assert(candidate([1L, 8L, 4L, 10L], 10L) == false);\n}\nvoid\
    \ main(){}"
  status: Exception
  stderr: 'b''core.exception.AssertError@/tmp/tmp70o9mbir.d(29): unittest failure\n----------------\n??:?
    _d_unittestp [0x4281dd]\n??:? void tmp70o9mbir.__unittest_L20_C1() [0x427f4b]\n??:?
    void tmp70o9mbir.__modtest() [0x427f60]\n??:? int core.runtime.runModuleUnitTests().__foreachbody2(object.ModuleInfo*)
    [0x42c1c7]\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)).__lambda2(immutable(object.ModuleInfo*))
    [0x42b05a]\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))).__foreachbody2(ref
    rt.sections_elf_shared.DSO) [0x4301ed]\n??:? int rt.sections_elf_shared.DSO.opApply(scope
    int delegate(ref rt.sections_elf_shared.DSO)) [0x43069c]\n??:? int rt.minfo.moduleinfos_apply(scope
    int delegate(immutable(object.ModuleInfo*))) [0x430179]\n??:? int object.ModuleInfo.opApply(scope
    int delegate(object.ModuleInfo*)) [0x42b031]\n??:? runModuleUnitTests [0x42bf9d]\n??:?
    void rt.dmain2._d_run_main(int, char**, extern (C) int function(char[][])*).runAll()
    [0x42862c]\n??:? void rt.dmain2._d_run_main(int, char**, extern (C) int function(char[][])*).tryExec(scope
    void delegate()) [0x4285b3]\n??:? _d_run_main [0x42851e]\n??:? main [0x427f73]\n??:?
    __libc_start_main [0x4442b554]\n1/1 unittests FAILED\n'''
  stdout: b''
- exit_code: 0
  program: "import std.typecons;\nimport std.math;\n/*\nReturn True if all numbers\
    \ in the list l are below threshold t.\n    >>> below_threshold([1L, 2L, 4L, 10L],\
    \ 100L)\n    true\n    >>> below_threshold([1L, 20L, 4L, 10L], 5L)\n    false\n\
    \    \n*/\nbool below_threshold(long[] l, long t) \n{\n    foreach(long x; l)\n\
    \    {\n        if(x >= t)\n            return false;\n    }\n    return true;\n\
    }\nunittest\n{\n    alias candidate = below_threshold;\n\n    assert(candidate([1L,\
    \ 2L, 4L, 10L], 100L) == true);\n    assert(candidate([1L, 20L, 4L, 10L], 5L)\
    \ == false);\n    assert(candidate([1L, 20L, 4L, 10L], 21L) == true);\n    assert(candidate([1L,\
    \ 20L, 4L, 10L], 22L) == true);\n    assert(candidate([1L, 8L, 4L, 10L], 11L)\
    \ == true);\n    assert(candidate([1L, 8L, 4L, 10L], 10L) == false);\n}\nvoid\
    \ main(){}"
  status: OK
  stderr: b''
  stdout: b''
- exit_code: 1
  program: "import std.typecons;\nimport std.math;\n/*\nReturn True if all numbers\
    \ in the list l are below threshold t.\n    >>> below_threshold([1L, 2L, 4L, 10L],\
    \ 100L)\n    true\n    >>> below_threshold([1L, 20L, 4L, 10L], 5L)\n    false\n\
    \    \n*/\nbool below_threshold(long[] l, long t) \n{\n    foreach(long i; l)\n\
    \    {\n        if(i > t)\n            return false;\n    }\n    return true;\n\
    }\nunittest\n{\n    alias candidate = below_threshold;\n\n    assert(candidate([1L,\
    \ 2L, 4L, 10L], 100L) == true);\n    assert(candidate([1L, 20L, 4L, 10L], 5L)\
    \ == false);\n    assert(candidate([1L, 20L, 4L, 10L], 21L) == true);\n    assert(candidate([1L,\
    \ 20L, 4L, 10L], 22L) == true);\n    assert(candidate([1L, 8L, 4L, 10L], 11L)\
    \ == true);\n    assert(candidate([1L, 8L, 4L, 10L], 10L) == false);\n}\nvoid\
    \ main(){}"
  status: Exception
  stderr: 'b''core.exception.AssertError@/tmp/tmpnp3ngt9z.d(29): unittest failure\n----------------\n??:?
    _d_unittestp [0x4281dd]\n??:? void tmpnp3ngt9z.__unittest_L20_C1() [0x427f4b]\n??:?
    void tmpnp3ngt9z.__modtest() [0x427f60]\n??:? int core.runtime.runModuleUnitTests().__foreachbody2(object.ModuleInfo*)
    [0x42c1c7]\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)).__lambda2(immutable(object.ModuleInfo*))
    [0x42b05a]\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))).__foreachbody2(ref
    rt.sections_elf_shared.DSO) [0x4301ed]\n??:? int rt.sections_elf_shared.DSO.opApply(scope
    int delegate(ref rt.sections_elf_shared.DSO)) [0x43069c]\n??:? int rt.minfo.moduleinfos_apply(scope
    int delegate(immutable(object.ModuleInfo*))) [0x430179]\n??:? int object.ModuleInfo.opApply(scope
    int delegate(object.ModuleInfo*)) [0x42b031]\n??:? runModuleUnitTests [0x42bf9d]\n??:?
    void rt.dmain2._d_run_main(int, char**, extern (C) int function(char[][])*).runAll()
    [0x42862c]\n??:? void rt.dmain2._d_run_main(int, char**, extern (C) int function(char[][])*).tryExec(scope
    void delegate()) [0x4285b3]\n??:? _d_run_main [0x42851e]\n??:? main [0x427f73]\n??:?
    __libc_start_main [0x76bf1554]\n1/1 unittests FAILED\n'''
  stdout: b''
- exit_code: 1
  program: "import std.typecons;\nimport std.math;\n/*\nReturn True if all numbers\
    \ in the list l are below threshold t.\n    >>> below_threshold([1L, 2L, 4L, 10L],\
    \ 100L)\n    true\n    >>> below_threshold([1L, 20L, 4L, 10L], 5L)\n    false\n\
    \    \n*/\nbool below_threshold(long[] l, long t) \n{\n    foreach(long i; l)\n\
    \    {\n        if(i > t)\n            return false;\n    }\n    return true;\n\
    }\nunittest\n{\n    alias candidate = below_threshold;\n\n    assert(candidate([1L,\
    \ 2L, 4L, 10L], 100L) == true);\n    assert(candidate([1L, 20L, 4L, 10L], 5L)\
    \ == false);\n    assert(candidate([1L, 20L, 4L, 10L], 21L) == true);\n    assert(candidate([1L,\
    \ 20L, 4L, 10L], 22L) == true);\n    assert(candidate([1L, 8L, 4L, 10L], 11L)\
    \ == true);\n    assert(candidate([1L, 8L, 4L, 10L], 10L) == false);\n}\nvoid\
    \ main(){}"
  status: Exception
  stderr: 'b''core.exception.AssertError@/tmp/tmpnp3ngt9z.d(29): unittest failure\n----------------\n??:?
    _d_unittestp [0x4281dd]\n??:? void tmpnp3ngt9z.__unittest_L20_C1() [0x427f4b]\n??:?
    void tmpnp3ngt9z.__modtest() [0x427f60]\n??:? int core.runtime.runModuleUnitTests().__foreachbody2(object.ModuleInfo*)
    [0x42c1c7]\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)).__lambda2(immutable(object.ModuleInfo*))
    [0x42b05a]\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))).__foreachbody2(ref
    rt.sections_elf_shared.DSO) [0x4301ed]\n??:? int rt.sections_elf_shared.DSO.opApply(scope
    int delegate(ref rt.sections_elf_shared.DSO)) [0x43069c]\n??:? int rt.minfo.moduleinfos_apply(scope
    int delegate(immutable(object.ModuleInfo*))) [0x430179]\n??:? int object.ModuleInfo.opApply(scope
    int delegate(object.ModuleInfo*)) [0x42b031]\n??:? runModuleUnitTests [0x42bf9d]\n??:?
    void rt.dmain2._d_run_main(int, char**, extern (C) int function(char[][])*).runAll()
    [0x42862c]\n??:? void rt.dmain2._d_run_main(int, char**, extern (C) int function(char[][])*).tryExec(scope
    void delegate()) [0x4285b3]\n??:? _d_run_main [0x42851e]\n??:? main [0x427f73]\n??:?
    __libc_start_main [0x76bf1554]\n1/1 unittests FAILED\n'''
  stdout: b''
- exit_code: 1
  program: "import std.typecons;\nimport std.math;\n/*\nReturn True if all numbers\
    \ in the list l are below threshold t.\n    >>> below_threshold([1L, 2L, 4L, 10L],\
    \ 100L)\n    true\n    >>> below_threshold([1L, 20L, 4L, 10L], 5L)\n    false\n\
    \    \n*/\nbool below_threshold(long[] l, long t) \n{\n    foreach(long i; l)\n\
    \    {\n        if(i >= t)\n            return false;\n    }\n    return true;\n\
    }\n/*\nReturn the number of elements in the list l that are below threshold t.\n\
    \    >>> count_below_threshold([1L, 2L, 4L, 10L], 100L)\n    4\n    >>> count_below_threshold([1L,\
    \ 20L, 4L, 10L], 5L)\n    2\n*/\nlong count_below_threshold(long[] l, long t)\
    \ \n{\n    long count = 0;\n    foreach(long i; l)\n    {\n        if(i < t)\n\
    \            count++;\n    }\n    return count;\n}\n/*\nReturn the number of elements\
    \ in the list l that are below threshold t.\n    >>> count_below_threshold([1L,\
    \ 2L, 4L, 10L], 100L)\n    4\n    >>> count_below_threshold([1L, 20L, 4L, 10L],\
    \ 5L)\n    2\n*/\nlong count_below_threshold_2(long[] l, long t) \n{\n    long\
    \ count = 0;\n    foreach(long i; l)\n    {\n        if(i < t)\n            count++;\n\
    \    }\n    return count;\n}\n/*\nReturn the number of elements in the list l\
    \ that are below threshold t.\n    >>> count_below_threshold([1L, 2L, 4L, 10L],\
    \ 100L)\n    4\n    >>> count_below_threshold([1L, 20L, 4L, 10L], 5L)\n    2\n\
    */\nlong count_below_threshold_3(long[] l, long t) \n{\n    long count = 0;\n\
    \    foreach(long i; l)\n    {\n        if(i < t)\n            count++;\n    }\n\
    \    return count;\n}\n/*\nReturn the number of elements in the list l that are\
    \ below threshold t.\n    >>> count_below_threshold([1L, 2L, 4L, 10L], 100L)\n\
    \    4\n    >>> count_below_threshold([1L,\nunittest\n{\n    alias candidate =\
    \ below_threshold;\n\n    assert(candidate([1L, 2L, 4L, 10L], 100L) == true);\n\
    \    assert(candidate([1L, 20L, 4L, 10L], 5L) == false);\n    assert(candidate([1L,\
    \ 20L, 4L, 10L], 21L) == true);\n    assert(candidate([1L, 20L, 4L, 10L], 22L)\
    \ == true);\n    assert(candidate([1L, 8L, 4L, 10L], 11L) == true);\n    assert(candidate([1L,\
    \ 8L, 4L, 10L], 10L) == false);\n}\nvoid main(){}"
  status: SyntaxError
  stderr: 'b''/tmp/tmpe8rh1ei4.d(71): Error: unterminated /* */ comment\nFailed: ["dmd",
    "-unittest", "-v", "-o-", "/tmp/tmpe8rh1ei4.d", "-I/tmp"]\n'''
  stdout: b''
  timestamp: 1659797732
- exit_code: 1
  program: "import std.typecons;\nimport std.math;\n/*\nReturn True if all numbers\
    \ in the list l are below threshold t.\n    >>> below_threshold([1L, 2L, 4L, 10L],\
    \ 100L)\n    true\n    >>> below_threshold([1L, 20L, 4L, 10L], 5L)\n    false\n\
    \    \n*/\nbool below_threshold(long[] l, long t) \n{\n    foreach(long x; l)\n\
    \    {\n        if(x >= t)\n            return false;\n    }\n    return true;\n\
    }\n/*\nReturn True if all numbers in the list l are below threshold t.\n    >>>\
    \ below_threshold([1L, 2L, 4L, 10L], 100L)\n    true\n    >>> below_threshold([1L,\
    \ 20L, 4L, 10L], 5L)\n    false\n    \n*/\nunittest\n{\n    alias candidate =\
    \ below_threshold;\n\n    assert(candidate([1L, 2L, 4L, 10L], 100L) == true);\n\
    \    assert(candidate([1L, 20L, 4L, 10L], 5L) == false);\n    assert(candidate([1L,\
    \ 20L, 4L, 10L], 21L) == true);\n    assert(candidate([1L, 20L, 4L, 10L], 22L)\
    \ == true);\n    assert(candidate([1L, 8L, 4L, 10L], 11L) == true);\n    assert(candidate([1L,\
    \ 8L, 4L, 10L], 10L) == false);\n}\nvoid main(){}"
  status: SyntaxError
  stderr: 'b''Error: cannot find source code for runtime library file \''object.d\''\n       dmd
    might not be correctly installed. Run \''dmd -man\'' for installation instructions.\nimport
    path[0] = /tmp\nFailed: ["dmd", "-unittest", "-v", "-o-", "/tmp/tmpup252j_7.d",
    "-I/tmp"]\n'''
  stdout: b''
  timestamp: 1659797732
- exit_code: 1
  program: "import std.typecons;\nimport std.math;\n/*\nReturn True if all numbers\
    \ in the list l are below threshold t.\n    >>> below_threshold([1L, 2L, 4L, 10L],\
    \ 100L)\n    true\n    >>> below_threshold([1L, 20L, 4L, 10L], 5L)\n    false\n\
    \    \n*/\nbool below_threshold(long[] l, long t) \n{\n    foreach(i; l)\n   \
    \ {\n        if(i > t)\n            return false;\n    }\n    return true;\n}\n\
    unittest\n{\n    alias candidate = below_threshold;\n\n    assert(candidate([1L,\
    \ 2L, 4L, 10L], 100L) == true);\n    assert(candidate([1L, 20L, 4L, 10L], 5L)\
    \ == false);\n    assert(candidate([1L, 20L, 4L, 10L], 21L) == true);\n    assert(candidate([1L,\
    \ 20L, 4L, 10L], 22L) == true);\n    assert(candidate([1L, 8L, 4L, 10L], 11L)\
    \ == true);\n    assert(candidate([1L, 8L, 4L, 10L], 10L) == false);\n}\nvoid\
    \ main(){}"
  status: Exception
  stderr: 'b''core.exception.AssertError@/tmp/tmp70o9mbir.d(29): unittest failure\n----------------\n??:?
    _d_unittestp [0x4281dd]\n??:? void tmp70o9mbir.__unittest_L20_C1() [0x427f4b]\n??:?
    void tmp70o9mbir.__modtest() [0x427f60]\n??:? int core.runtime.runModuleUnitTests().__foreachbody2(object.ModuleInfo*)
    [0x42c1c7]\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)).__lambda2(immutable(object.ModuleInfo*))
    [0x42b05a]\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))).__foreachbody2(ref
    rt.sections_elf_shared.DSO) [0x4301ed]\n??:? int rt.sections_elf_shared.DSO.opApply(scope
    int delegate(ref rt.sections_elf_shared.DSO)) [0x43069c]\n??:? int rt.minfo.moduleinfos_apply(scope
    int delegate(immutable(object.ModuleInfo*))) [0x430179]\n??:? int object.ModuleInfo.opApply(scope
    int delegate(object.ModuleInfo*)) [0x42b031]\n??:? runModuleUnitTests [0x42bf9d]\n??:?
    void rt.dmain2._d_run_main(int, char**, extern (C) int function(char[][])*).runAll()
    [0x42862c]\n??:? void rt.dmain2._d_run_main(int, char**, extern (C) int function(char[][])*).tryExec(scope
    void delegate()) [0x4285b3]\n??:? _d_run_main [0x42851e]\n??:? main [0x427f73]\n??:?
    __libc_start_main [0x4442b554]\n1/1 unittests FAILED\n'''
  stdout: b''
- exit_code: 1
  program: "import std.typecons;\nimport std.math;\n/*\nReturn True if all numbers\
    \ in the list l are below threshold t.\n    >>> below_threshold([1L, 2L, 4L, 10L],\
    \ 100L)\n    true\n    >>> below_threshold([1L, 20L, 4L, 10L], 5L)\n    false\n\
    \    \n*/\nbool below_threshold(long[] l, long t) \n{\n    foreach(long i; l)\n\
    \    {\n        if(i > t)\n            return false;\n    }\n    return true;\n\
    }\nunittest\n{\n    alias candidate = below_threshold;\n\n    assert(candidate([1L,\
    \ 2L, 4L, 10L], 100L) == true);\n    assert(candidate([1L, 20L, 4L, 10L], 5L)\
    \ == false);\n    assert(candidate([1L, 20L, 4L, 10L], 21L) == true);\n    assert(candidate([1L,\
    \ 20L, 4L, 10L], 22L) == true);\n    assert(candidate([1L, 8L, 4L, 10L], 11L)\
    \ == true);\n    assert(candidate([1L, 8L, 4L, 10L], 10L) == false);\n}\nvoid\
    \ main(){}"
  status: Exception
  stderr: 'b''core.exception.AssertError@/tmp/tmpnp3ngt9z.d(29): unittest failure\n----------------\n??:?
    _d_unittestp [0x4281dd]\n??:? void tmpnp3ngt9z.__unittest_L20_C1() [0x427f4b]\n??:?
    void tmpnp3ngt9z.__modtest() [0x427f60]\n??:? int core.runtime.runModuleUnitTests().__foreachbody2(object.ModuleInfo*)
    [0x42c1c7]\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)).__lambda2(immutable(object.ModuleInfo*))
    [0x42b05a]\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))).__foreachbody2(ref
    rt.sections_elf_shared.DSO) [0x4301ed]\n??:? int rt.sections_elf_shared.DSO.opApply(scope
    int delegate(ref rt.sections_elf_shared.DSO)) [0x43069c]\n??:? int rt.minfo.moduleinfos_apply(scope
    int delegate(immutable(object.ModuleInfo*))) [0x430179]\n??:? int object.ModuleInfo.opApply(scope
    int delegate(object.ModuleInfo*)) [0x42b031]\n??:? runModuleUnitTests [0x42bf9d]\n??:?
    void rt.dmain2._d_run_main(int, char**, extern (C) int function(char[][])*).runAll()
    [0x42862c]\n??:? void rt.dmain2._d_run_main(int, char**, extern (C) int function(char[][])*).tryExec(scope
    void delegate()) [0x4285b3]\n??:? _d_run_main [0x42851e]\n??:? main [0x427f73]\n??:?
    __libc_start_main [0x76bf1554]\n1/1 unittests FAILED\n'''
  stdout: b''
- exit_code: 1
  program: "import std.typecons;\nimport std.math;\n/*\nReturn True if all numbers\
    \ in the list l are below threshold t.\n    >>> below_threshold([1L, 2L, 4L, 10L],\
    \ 100L)\n    true\n    >>> below_threshold([1L, 20L, 4L, 10L], 5L)\n    false\n\
    \    \n*/\nbool below_threshold(long[] l, long t) \n{\n    foreach(i; l)\n   \
    \ {\n        if(i > t)\n            return false;\n    }\n    return true;\n}\n\
    unittest\n{\n    alias candidate = below_threshold;\n\n    assert(candidate([1L,\
    \ 2L, 4L, 10L], 100L) == true);\n    assert(candidate([1L, 20L, 4L, 10L], 5L)\
    \ == false);\n    assert(candidate([1L, 20L, 4L, 10L], 21L) == true);\n    assert(candidate([1L,\
    \ 20L, 4L, 10L], 22L) == true);\n    assert(candidate([1L, 8L, 4L, 10L], 11L)\
    \ == true);\n    assert(candidate([1L, 8L, 4L, 10L], 10L) == false);\n}\nvoid\
    \ main(){}"
  status: Exception
  stderr: 'b''core.exception.AssertError@/tmp/tmp70o9mbir.d(29): unittest failure\n----------------\n??:?
    _d_unittestp [0x4281dd]\n??:? void tmp70o9mbir.__unittest_L20_C1() [0x427f4b]\n??:?
    void tmp70o9mbir.__modtest() [0x427f60]\n??:? int core.runtime.runModuleUnitTests().__foreachbody2(object.ModuleInfo*)
    [0x42c1c7]\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)).__lambda2(immutable(object.ModuleInfo*))
    [0x42b05a]\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))).__foreachbody2(ref
    rt.sections_elf_shared.DSO) [0x4301ed]\n??:? int rt.sections_elf_shared.DSO.opApply(scope
    int delegate(ref rt.sections_elf_shared.DSO)) [0x43069c]\n??:? int rt.minfo.moduleinfos_apply(scope
    int delegate(immutable(object.ModuleInfo*))) [0x430179]\n??:? int object.ModuleInfo.opApply(scope
    int delegate(object.ModuleInfo*)) [0x42b031]\n??:? runModuleUnitTests [0x42bf9d]\n??:?
    void rt.dmain2._d_run_main(int, char**, extern (C) int function(char[][])*).runAll()
    [0x42862c]\n??:? void rt.dmain2._d_run_main(int, char**, extern (C) int function(char[][])*).tryExec(scope
    void delegate()) [0x4285b3]\n??:? _d_run_main [0x42851e]\n??:? main [0x427f73]\n??:?
    __libc_start_main [0x4442b554]\n1/1 unittests FAILED\n'''
  stdout: b''
- exit_code: 1
  program: "import std.typecons;\nimport std.math;\n/*\nReturn True if all numbers\
    \ in the list l are below threshold t.\n    >>> below_threshold([1L, 2L, 4L, 10L],\
    \ 100L)\n    true\n    >>> below_threshold([1L, 20L, 4L, 10L], 5L)\n    false\n\
    \    \n*/\nbool below_threshold(long[] l, long t) \n{\n    foreach(i; l)\n   \
    \ {\n        if(i > t)\n            return false;\n    }\n    return true;\n}\n\
    unittest\n{\n    alias candidate = below_threshold;\n\n    assert(candidate([1L,\
    \ 2L, 4L, 10L], 100L) == true);\n    assert(candidate([1L, 20L, 4L, 10L], 5L)\
    \ == false);\n    assert(candidate([1L, 20L, 4L, 10L], 21L) == true);\n    assert(candidate([1L,\
    \ 20L, 4L, 10L], 22L) == true);\n    assert(candidate([1L, 8L, 4L, 10L], 11L)\
    \ == true);\n    assert(candidate([1L, 8L, 4L, 10L], 10L) == false);\n}\nvoid\
    \ main(){}"
  status: Exception
  stderr: 'b''core.exception.AssertError@/tmp/tmp70o9mbir.d(29): unittest failure\n----------------\n??:?
    _d_unittestp [0x4281dd]\n??:? void tmp70o9mbir.__unittest_L20_C1() [0x427f4b]\n??:?
    void tmp70o9mbir.__modtest() [0x427f60]\n??:? int core.runtime.runModuleUnitTests().__foreachbody2(object.ModuleInfo*)
    [0x42c1c7]\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)).__lambda2(immutable(object.ModuleInfo*))
    [0x42b05a]\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))).__foreachbody2(ref
    rt.sections_elf_shared.DSO) [0x4301ed]\n??:? int rt.sections_elf_shared.DSO.opApply(scope
    int delegate(ref rt.sections_elf_shared.DSO)) [0x43069c]\n??:? int rt.minfo.moduleinfos_apply(scope
    int delegate(immutable(object.ModuleInfo*))) [0x430179]\n??:? int object.ModuleInfo.opApply(scope
    int delegate(object.ModuleInfo*)) [0x42b031]\n??:? runModuleUnitTests [0x42bf9d]\n??:?
    void rt.dmain2._d_run_main(int, char**, extern (C) int function(char[][])*).runAll()
    [0x42862c]\n??:? void rt.dmain2._d_run_main(int, char**, extern (C) int function(char[][])*).tryExec(scope
    void delegate()) [0x4285b3]\n??:? _d_run_main [0x42851e]\n??:? main [0x427f73]\n??:?
    __libc_start_main [0x4442b554]\n1/1 unittests FAILED\n'''
  stdout: b''
- exit_code: 1
  program: "import std.typecons;\nimport std.math;\n/*\nReturn True if all numbers\
    \ in the list l are below threshold t.\n    >>> below_threshold([1L, 2L, 4L, 10L],\
    \ 100L)\n    true\n    >>> below_threshold([1L, 20L, 4L, 10L], 5L)\n    false\n\
    \    \n*/\nbool below_threshold(long[] l, long t) \n{\n    foreach(long i; l)\n\
    \    {\n        if(i > t)\n            return false;\n    }\n    return true;\n\
    }\nunittest\n{\n    alias candidate = below_threshold;\n\n    assert(candidate([1L,\
    \ 2L, 4L, 10L], 100L) == true);\n    assert(candidate([1L, 20L, 4L, 10L], 5L)\
    \ == false);\n    assert(candidate([1L, 20L, 4L, 10L], 21L) == true);\n    assert(candidate([1L,\
    \ 20L, 4L, 10L], 22L) == true);\n    assert(candidate([1L, 8L, 4L, 10L], 11L)\
    \ == true);\n    assert(candidate([1L, 8L, 4L, 10L], 10L) == false);\n}\nvoid\
    \ main(){}"
  status: Exception
  stderr: 'b''core.exception.AssertError@/tmp/tmpnp3ngt9z.d(29): unittest failure\n----------------\n??:?
    _d_unittestp [0x4281dd]\n??:? void tmpnp3ngt9z.__unittest_L20_C1() [0x427f4b]\n??:?
    void tmpnp3ngt9z.__modtest() [0x427f60]\n??:? int core.runtime.runModuleUnitTests().__foreachbody2(object.ModuleInfo*)
    [0x42c1c7]\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)).__lambda2(immutable(object.ModuleInfo*))
    [0x42b05a]\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))).__foreachbody2(ref
    rt.sections_elf_shared.DSO) [0x4301ed]\n??:? int rt.sections_elf_shared.DSO.opApply(scope
    int delegate(ref rt.sections_elf_shared.DSO)) [0x43069c]\n??:? int rt.minfo.moduleinfos_apply(scope
    int delegate(immutable(object.ModuleInfo*))) [0x430179]\n??:? int object.ModuleInfo.opApply(scope
    int delegate(object.ModuleInfo*)) [0x42b031]\n??:? runModuleUnitTests [0x42bf9d]\n??:?
    void rt.dmain2._d_run_main(int, char**, extern (C) int function(char[][])*).runAll()
    [0x42862c]\n??:? void rt.dmain2._d_run_main(int, char**, extern (C) int function(char[][])*).tryExec(scope
    void delegate()) [0x4285b3]\n??:? _d_run_main [0x42851e]\n??:? main [0x427f73]\n??:?
    __libc_start_main [0x76bf1554]\n1/1 unittests FAILED\n'''
  stdout: b''
- exit_code: 1
  program: "import std.typecons;\nimport std.math;\n/*\nReturn True if all numbers\
    \ in the list l are below threshold t.\n    >>> below_threshold([1L, 2L, 4L, 10L],\
    \ 100L)\n    true\n    >>> below_threshold([1L, 20L, 4L, 10L], 5L)\n    false\n\
    \    \n*/\nbool below_threshold(long[] l, long t) \n{\n    foreach(long i; l)\n\
    \    {\n        if(i > t)\n            return false;\n    }\n    return true;\n\
    }\nunittest\n{\n    alias candidate = below_threshold;\n\n    assert(candidate([1L,\
    \ 2L, 4L, 10L], 100L) == true);\n    assert(candidate([1L, 20L, 4L, 10L], 5L)\
    \ == false);\n    assert(candidate([1L, 20L, 4L, 10L], 21L) == true);\n    assert(candidate([1L,\
    \ 20L, 4L, 10L], 22L) == true);\n    assert(candidate([1L, 8L, 4L, 10L], 11L)\
    \ == true);\n    assert(candidate([1L, 8L, 4L, 10L], 10L) == false);\n}\nvoid\
    \ main(){}"
  status: Exception
  stderr: 'b''core.exception.AssertError@/tmp/tmpnp3ngt9z.d(29): unittest failure\n----------------\n??:?
    _d_unittestp [0x4281dd]\n??:? void tmpnp3ngt9z.__unittest_L20_C1() [0x427f4b]\n??:?
    void tmpnp3ngt9z.__modtest() [0x427f60]\n??:? int core.runtime.runModuleUnitTests().__foreachbody2(object.ModuleInfo*)
    [0x42c1c7]\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)).__lambda2(immutable(object.ModuleInfo*))
    [0x42b05a]\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))).__foreachbody2(ref
    rt.sections_elf_shared.DSO) [0x4301ed]\n??:? int rt.sections_elf_shared.DSO.opApply(scope
    int delegate(ref rt.sections_elf_shared.DSO)) [0x43069c]\n??:? int rt.minfo.moduleinfos_apply(scope
    int delegate(immutable(object.ModuleInfo*))) [0x430179]\n??:? int object.ModuleInfo.opApply(scope
    int delegate(object.ModuleInfo*)) [0x42b031]\n??:? runModuleUnitTests [0x42bf9d]\n??:?
    void rt.dmain2._d_run_main(int, char**, extern (C) int function(char[][])*).runAll()
    [0x42862c]\n??:? void rt.dmain2._d_run_main(int, char**, extern (C) int function(char[][])*).tryExec(scope
    void delegate()) [0x4285b3]\n??:? _d_run_main [0x42851e]\n??:? main [0x427f73]\n??:?
    __libc_start_main [0x76bf1554]\n1/1 unittests FAILED\n'''
  stdout: b''
- exit_code: 0
  program: "import std.typecons;\nimport std.math;\n/*\nReturn True if all numbers\
    \ in the list l are below threshold t.\n    >>> below_threshold([1L, 2L, 4L, 10L],\
    \ 100L)\n    true\n    >>> below_threshold([1L, 20L, 4L, 10L], 5L)\n    false\n\
    \    \n*/\nbool below_threshold(long[] l, long t) \n{\n    foreach(long i; l)\n\
    \    {\n        if(i >= t)\n            return false;\n    }\n    return true;\n\
    }\nunittest\n{\n    alias candidate = below_threshold;\n\n    assert(candidate([1L,\
    \ 2L, 4L, 10L], 100L) == true);\n    assert(candidate([1L, 20L, 4L, 10L], 5L)\
    \ == false);\n    assert(candidate([1L, 20L, 4L, 10L], 21L) == true);\n    assert(candidate([1L,\
    \ 20L, 4L, 10L], 22L) == true);\n    assert(candidate([1L, 8L, 4L, 10L], 11L)\
    \ == true);\n    assert(candidate([1L, 8L, 4L, 10L], 10L) == false);\n}\nvoid\
    \ main(){}"
  status: OK
  stderr: b''
  stdout: b''
- exit_code: 0
  program: "import std.typecons;\nimport std.math;\n/*\nReturn True if all numbers\
    \ in the list l are below threshold t.\n    >>> below_threshold([1L, 2L, 4L, 10L],\
    \ 100L)\n    true\n    >>> below_threshold([1L, 20L, 4L, 10L], 5L)\n    false\n\
    \    \n*/\nbool below_threshold(long[] l, long t) \n{\n    foreach(long x; l)\n\
    \    {\n        if(x >= t)\n            return false;\n    }\n    return true;\n\
    }\nunittest\n{\n    alias candidate = below_threshold;\n\n    assert(candidate([1L,\
    \ 2L, 4L, 10L], 100L) == true);\n    assert(candidate([1L, 20L, 4L, 10L], 5L)\
    \ == false);\n    assert(candidate([1L, 20L, 4L, 10L], 21L) == true);\n    assert(candidate([1L,\
    \ 20L, 4L, 10L], 22L) == true);\n    assert(candidate([1L, 8L, 4L, 10L], 11L)\
    \ == true);\n    assert(candidate([1L, 8L, 4L, 10L], 10L) == false);\n}\nvoid\
    \ main(){}"
  status: OK
  stderr: b''
  stdout: b''
- exit_code: 1
  program: "import std.typecons;\nimport std.math;\n/*\nReturn True if all numbers\
    \ in the list l are below threshold t.\n    >>> below_threshold([1L, 2L, 4L, 10L],\
    \ 100L)\n    true\n    >>> below_threshold([1L, 20L, 4L, 10L], 5L)\n    false\n\
    \    \n*/\nbool below_threshold(long[] l, long t) \n{\n    foreach(long i; l)\
    \ \n    {\n        if(i >= t) \n        {\n            return false;\n       \
    \ }\n    }\n    return true;\n}\nunittest\n{\n    alias candidate = below_threshold;\n\
    \n    assert(candidate([1L, 2L, 4L, 10L], 100L) == true);\n    assert(candidate([1L,\
    \ 20L, 4L, 10L], 5L) == false);\n    assert(candidate([1L, 20L, 4L, 10L], 21L)\
    \ == true);\n    assert(candidate([1L, 20L, 4L, 10L], 22L) == true);\n    assert(candidate([1L,\
    \ 8L, 4L, 10L], 11L) == true);\n    assert(candidate([1L, 8L, 4L, 10L], 10L) ==\
    \ false);\n}\nvoid main(){}"
  status: SyntaxError
  stderr: 'b''Error: cannot find source code for runtime library file \''object.d\''\n       dmd
    might not be correctly installed. Run \''dmd -man\'' for installation instructions.\nimport
    path[0] = /tmp\nFailed: ["dmd", "-unittest", "-v", "-o-", "/tmp/tmpd8yip75o.d",
    "-I/tmp"]\n'''
  stdout: b''
  timestamp: 1659797732
- exit_code: 1
  program: "import std.typecons;\nimport std.math;\n/*\nReturn True if all numbers\
    \ in the list l are below threshold t.\n    >>> below_threshold([1L, 2L, 4L, 10L],\
    \ 100L)\n    true\n    >>> below_threshold([1L, 20L, 4L, 10L], 5L)\n    false\n\
    \    \n*/\nbool below_threshold(long[] l, long t) \n{\n    foreach(long i; l)\n\
    \    {\n        if(i > t)\n            return false;\n    }\n    return true;\n\
    }\nunittest\n{\n    alias candidate = below_threshold;\n\n    assert(candidate([1L,\
    \ 2L, 4L, 10L], 100L) == true);\n    assert(candidate([1L, 20L, 4L, 10L], 5L)\
    \ == false);\n    assert(candidate([1L, 20L, 4L, 10L], 21L) == true);\n    assert(candidate([1L,\
    \ 20L, 4L, 10L], 22L) == true);\n    assert(candidate([1L, 8L, 4L, 10L], 11L)\
    \ == true);\n    assert(candidate([1L, 8L, 4L, 10L], 10L) == false);\n}\nvoid\
    \ main(){}"
  status: Exception
  stderr: 'b''core.exception.AssertError@/tmp/tmpnp3ngt9z.d(29): unittest failure\n----------------\n??:?
    _d_unittestp [0x4281dd]\n??:? void tmpnp3ngt9z.__unittest_L20_C1() [0x427f4b]\n??:?
    void tmpnp3ngt9z.__modtest() [0x427f60]\n??:? int core.runtime.runModuleUnitTests().__foreachbody2(object.ModuleInfo*)
    [0x42c1c7]\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)).__lambda2(immutable(object.ModuleInfo*))
    [0x42b05a]\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))).__foreachbody2(ref
    rt.sections_elf_shared.DSO) [0x4301ed]\n??:? int rt.sections_elf_shared.DSO.opApply(scope
    int delegate(ref rt.sections_elf_shared.DSO)) [0x43069c]\n??:? int rt.minfo.moduleinfos_apply(scope
    int delegate(immutable(object.ModuleInfo*))) [0x430179]\n??:? int object.ModuleInfo.opApply(scope
    int delegate(object.ModuleInfo*)) [0x42b031]\n??:? runModuleUnitTests [0x42bf9d]\n??:?
    void rt.dmain2._d_run_main(int, char**, extern (C) int function(char[][])*).runAll()
    [0x42862c]\n??:? void rt.dmain2._d_run_main(int, char**, extern (C) int function(char[][])*).tryExec(scope
    void delegate()) [0x4285b3]\n??:? _d_run_main [0x42851e]\n??:? main [0x427f73]\n??:?
    __libc_start_main [0x76bf1554]\n1/1 unittests FAILED\n'''
  stdout: b''
- exit_code: 1
  program: "import std.typecons;\nimport std.math;\n/*\nReturn True if all numbers\
    \ in the list l are below threshold t.\n    >>> below_threshold([1L, 2L, 4L, 10L],\
    \ 100L)\n    true\n    >>> below_threshold([1L, 20L, 4L, 10L], 5L)\n    false\n\
    \    \n*/\nbool below_threshold(long[] l, long t) \n{\n    foreach(i; l)\n   \
    \ {\n        if(i > t)\n            return false;\n    }\n    return true;\n}\n\
    /*\nReturn True if all numbers in the list l are below threshold t.\n    >>> below_threshold([1L,\
    \ 2L, 4L, 10L], 100L)\n    true\n    >>> below_threshold([1L, 20L, 4L, 10L], 5L)\n\
    \    false\n    \n*/\nunittest\n{\n    alias candidate = below_threshold;\n\n\
    \    assert(candidate([1L, 2L, 4L, 10L], 100L) == true);\n    assert(candidate([1L,\
    \ 20L, 4L, 10L], 5L) == false);\n    assert(candidate([1L, 20L, 4L, 10L], 21L)\
    \ == true);\n    assert(candidate([1L, 20L, 4L, 10L], 22L) == true);\n    assert(candidate([1L,\
    \ 8L, 4L, 10L], 11L) == true);\n    assert(candidate([1L, 8L, 4L, 10L], 10L) ==\
    \ false);\n}\nvoid main(){}"
  status: SyntaxError
  stderr: 'b''Error: cannot find source code for runtime library file \''object.d\''\n       dmd
    might not be correctly installed. Run \''dmd -man\'' for installation instructions.\nimport
    path[0] = /tmp\nFailed: ["dmd", "-unittest", "-v", "-o-", "/tmp/tmp6pbrysvg.d",
    "-I/tmp"]\n'''
  stdout: b''
  timestamp: 1659797732
- exit_code: 1
  program: "import std.typecons;\nimport std.math;\n/*\nReturn True if all numbers\
    \ in the list l are below threshold t.\n    >>> below_threshold([1L, 2L, 4L, 10L],\
    \ 100L)\n    true\n    >>> below_threshold([1L, 20L, 4L, 10L], 5L)\n    false\n\
    \    \n*/\nbool below_threshold(long[] l, long t) \n{\n    foreach(long i; l)\n\
    \    {\n        if(i > t)\n            return false;\n    }\n    return true;\n\
    }\n/*\nReturn True if all numbers in the list l are below threshold t.\n    >>>\
    \ below_threshold([1L, 2L, 4L, 10L], 100L)\n    true\n    >>> below_threshold([1L,\
    \ 20L, 4L, 10L], 5L)\n    false\n    \n*/\nunittest\n{\n    alias candidate =\
    \ below_threshold;\n\n    assert(candidate([1L, 2L, 4L, 10L], 100L) == true);\n\
    \    assert(candidate([1L, 20L, 4L, 10L], 5L) == false);\n    assert(candidate([1L,\
    \ 20L, 4L, 10L], 21L) == true);\n    assert(candidate([1L, 20L, 4L, 10L], 22L)\
    \ == true);\n    assert(candidate([1L, 8L, 4L, 10L], 11L) == true);\n    assert(candidate([1L,\
    \ 8L, 4L, 10L], 10L) == false);\n}\nvoid main(){}"
  status: Exception
  stderr: 'b''core.exception.AssertError@/tmp/tmp8wym03d7.d(37): unittest failure\n----------------\n??:?
    _d_unittestp [0x4281dd]\n??:? void tmp8wym03d7.__unittest_L28_C1() [0x427f4b]\n??:?
    void tmp8wym03d7.__modtest() [0x427f60]\n??:? int core.runtime.runModuleUnitTests().__foreachbody2(object.ModuleInfo*)
    [0x42c1c7]\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)).__lambda2(immutable(object.ModuleInfo*))
    [0x42b05a]\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))).__foreachbody2(ref
    rt.sections_elf_shared.DSO) [0x4301ed]\n??:? int rt.sections_elf_shared.DSO.opApply(scope
    int delegate(ref rt.sections_elf_shared.DSO)) [0x43069c]\n??:? int rt.minfo.moduleinfos_apply(scope
    int delegate(immutable(object.ModuleInfo*))) [0x430179]\n??:? int object.ModuleInfo.opApply(scope
    int delegate(object.ModuleInfo*)) [0x42b031]\n??:? runModuleUnitTests [0x42bf9d]\n??:?
    void rt.dmain2._d_run_main(int, char**, extern (C) int function(char[][])*).runAll()
    [0x42862c]\n??:? void rt.dmain2._d_run_main(int, char**, extern (C) int function(char[][])*).tryExec(scope
    void delegate()) [0x4285b3]\n??:? _d_run_main [0x42851e]\n??:? main [0x427f73]\n??:?
    __libc_start_main [0xae708554]\n1/1 unittests FAILED\n'''
  stdout: b''
- exit_code: 1
  program: "import std.typecons;\nimport std.math;\n/*\nReturn True if all numbers\
    \ in the list l are below threshold t.\n    >>> below_threshold([1L, 2L, 4L, 10L],\
    \ 100L)\n    true\n    >>> below_threshold([1L, 20L, 4L, 10L], 5L)\n    false\n\
    \    \n*/\nbool below_threshold(long[] l, long t) \n{\n    foreach(i; l)\n   \
    \ {\n        if(i > t)\n            return false;\n    }\n    return true;\n}\n\
    /*\nReturn True if all numbers in the list l are below threshold t.\n    >>> below_threshold([1L,\
    \ 2L, 4L, 10L], 100L)\n    true\n    >>> below_threshold([1L, 20L, 4L, 10L], 5L)\n\
    \    false\n    \n*/\nunittest\n{\n    alias candidate = below_threshold;\n\n\
    \    assert(candidate([1L, 2L, 4L, 10L], 100L) == true);\n    assert(candidate([1L,\
    \ 20L, 4L, 10L], 5L) == false);\n    assert(candidate([1L, 20L, 4L, 10L], 21L)\
    \ == true);\n    assert(candidate([1L, 20L, 4L, 10L], 22L) == true);\n    assert(candidate([1L,\
    \ 8L, 4L, 10L], 11L) == true);\n    assert(candidate([1L, 8L, 4L, 10L], 10L) ==\
    \ false);\n}\nvoid main(){}"
  status: SyntaxError
  stderr: 'b''Error: cannot find source code for runtime library file \''object.d\''\n       dmd
    might not be correctly installed. Run \''dmd -man\'' for installation instructions.\nimport
    path[0] = /tmp\nFailed: ["dmd", "-unittest", "-v", "-o-", "/tmp/tmp6pbrysvg.d",
    "-I/tmp"]\n'''
  stdout: b''
  timestamp: 1659797732
- exit_code: 1
  program: "import std.typecons;\nimport std.math;\n/*\nReturn True if all numbers\
    \ in the list l are below threshold t.\n    >>> below_threshold([1L, 2L, 4L, 10L],\
    \ 100L)\n    true\n    >>> below_threshold([1L, 20L, 4L, 10L], 5L)\n    false\n\
    \    \n*/\nbool below_threshold(long[] l, long t) \n{\n    bool result = true;\n\
    \    foreach(long i; l)\n    {\n        if(i >= t)\n        {\n            result\
    \ = false;\n            break;\n        }\n    }\n    return result;\n}\n/*\n\
    Return True if all numbers in the list l are below threshold t.\n    >>> below_threshold([1L,\
    \ 2L, 4L, 10L], 100L)\n    true\n    >>> below_threshold([1L, 20L, 4L, 10L], 5L)\n\
    \    false\n    \n*/\nunittest\n{\n    alias candidate = below_threshold;\n\n\
    \    assert(candidate([1L, 2L, 4L, 10L], 100L) == true);\n    assert(candidate([1L,\
    \ 20L, 4L, 10L], 5L) == false);\n    assert(candidate([1L, 20L, 4L, 10L], 21L)\
    \ == true);\n    assert(candidate([1L, 20L, 4L, 10L], 22L) == true);\n    assert(candidate([1L,\
    \ 8L, 4L, 10L], 11L) == true);\n    assert(candidate([1L, 8L, 4L, 10L], 10L) ==\
    \ false);\n}\nvoid main(){}"
  status: SyntaxError
  stderr: 'b''Error: cannot find source code for runtime library file \''object.d\''\n       dmd
    might not be correctly installed. Run \''dmd -man\'' for installation instructions.\nimport
    path[0] = /tmp\nFailed: ["dmd", "-unittest", "-v", "-o-", "/tmp/tmprhuzdpiu.d",
    "-I/tmp"]\n'''
  stdout: b''
  timestamp: 1659797732
- exit_code: 1
  program: "import std.typecons;\nimport std.math;\n/*\nReturn True if all numbers\
    \ in the list l are below threshold t.\n    >>> below_threshold([1L, 2L, 4L, 10L],\
    \ 100L)\n    true\n    >>> below_threshold([1L, 20L, 4L, 10L], 5L)\n    false\n\
    \    \n*/\nbool below_threshold(long[] l, long t) \n{\n    foreach(long i; l)\n\
    \    {\n        if(i > t)\n            return false;\n    }\n    return true;\n\
    }\nunittest\n{\n    alias candidate = below_threshold;\n\n    assert(candidate([1L,\
    \ 2L, 4L, 10L], 100L) == true);\n    assert(candidate([1L, 20L, 4L, 10L], 5L)\
    \ == false);\n    assert(candidate([1L, 20L, 4L, 10L], 21L) == true);\n    assert(candidate([1L,\
    \ 20L, 4L, 10L], 22L) == true);\n    assert(candidate([1L, 8L, 4L, 10L], 11L)\
    \ == true);\n    assert(candidate([1L, 8L, 4L, 10L], 10L) == false);\n}\nvoid\
    \ main(){}"
  status: Exception
  stderr: 'b''core.exception.AssertError@/tmp/tmpnp3ngt9z.d(29): unittest failure\n----------------\n??:?
    _d_unittestp [0x4281dd]\n??:? void tmpnp3ngt9z.__unittest_L20_C1() [0x427f4b]\n??:?
    void tmpnp3ngt9z.__modtest() [0x427f60]\n??:? int core.runtime.runModuleUnitTests().__foreachbody2(object.ModuleInfo*)
    [0x42c1c7]\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)).__lambda2(immutable(object.ModuleInfo*))
    [0x42b05a]\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))).__foreachbody2(ref
    rt.sections_elf_shared.DSO) [0x4301ed]\n??:? int rt.sections_elf_shared.DSO.opApply(scope
    int delegate(ref rt.sections_elf_shared.DSO)) [0x43069c]\n??:? int rt.minfo.moduleinfos_apply(scope
    int delegate(immutable(object.ModuleInfo*))) [0x430179]\n??:? int object.ModuleInfo.opApply(scope
    int delegate(object.ModuleInfo*)) [0x42b031]\n??:? runModuleUnitTests [0x42bf9d]\n??:?
    void rt.dmain2._d_run_main(int, char**, extern (C) int function(char[][])*).runAll()
    [0x42862c]\n??:? void rt.dmain2._d_run_main(int, char**, extern (C) int function(char[][])*).tryExec(scope
    void delegate()) [0x4285b3]\n??:? _d_run_main [0x42851e]\n??:? main [0x427f73]\n??:?
    __libc_start_main [0x76bf1554]\n1/1 unittests FAILED\n'''
  stdout: b''
- exit_code: 1
  program: "import std.typecons;\nimport std.math;\n/*\nReturn True if all numbers\
    \ in the list l are below threshold t.\n    >>> below_threshold([1L, 2L, 4L, 10L],\
    \ 100L)\n    true\n    >>> below_threshold([1L, 20L, 4L, 10L], 5L)\n    false\n\
    \    \n*/\nbool below_threshold(long[] l, long t) \n{\n    foreach(i; l)\n   \
    \ {\n        if(i > t)\n            return false;\n    }\n    return true;\n}\n\
    unittest\n{\n    alias candidate = below_threshold;\n\n    assert(candidate([1L,\
    \ 2L, 4L, 10L], 100L) == true);\n    assert(candidate([1L, 20L, 4L, 10L], 5L)\
    \ == false);\n    assert(candidate([1L, 20L, 4L, 10L], 21L) == true);\n    assert(candidate([1L,\
    \ 20L, 4L, 10L], 22L) == true);\n    assert(candidate([1L, 8L, 4L, 10L], 11L)\
    \ == true);\n    assert(candidate([1L, 8L, 4L, 10L], 10L) == false);\n}\nvoid\
    \ main(){}"
  status: Exception
  stderr: 'b''core.exception.AssertError@/tmp/tmp70o9mbir.d(29): unittest failure\n----------------\n??:?
    _d_unittestp [0x4281dd]\n??:? void tmp70o9mbir.__unittest_L20_C1() [0x427f4b]\n??:?
    void tmp70o9mbir.__modtest() [0x427f60]\n??:? int core.runtime.runModuleUnitTests().__foreachbody2(object.ModuleInfo*)
    [0x42c1c7]\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)).__lambda2(immutable(object.ModuleInfo*))
    [0x42b05a]\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))).__foreachbody2(ref
    rt.sections_elf_shared.DSO) [0x4301ed]\n??:? int rt.sections_elf_shared.DSO.opApply(scope
    int delegate(ref rt.sections_elf_shared.DSO)) [0x43069c]\n??:? int rt.minfo.moduleinfos_apply(scope
    int delegate(immutable(object.ModuleInfo*))) [0x430179]\n??:? int object.ModuleInfo.opApply(scope
    int delegate(object.ModuleInfo*)) [0x42b031]\n??:? runModuleUnitTests [0x42bf9d]\n??:?
    void rt.dmain2._d_run_main(int, char**, extern (C) int function(char[][])*).runAll()
    [0x42862c]\n??:? void rt.dmain2._d_run_main(int, char**, extern (C) int function(char[][])*).tryExec(scope
    void delegate()) [0x4285b3]\n??:? _d_run_main [0x42851e]\n??:? main [0x427f73]\n??:?
    __libc_start_main [0x4442b554]\n1/1 unittests FAILED\n'''
  stdout: b''
- exit_code: 1
  program: "import std.typecons;\nimport std.math;\n/*\nReturn True if all numbers\
    \ in the list l are below threshold t.\n    >>> below_threshold([1L, 2L, 4L, 10L],\
    \ 100L)\n    true\n    >>> below_threshold([1L, 20L, 4L, 10L], 5L)\n    false\n\
    \    \n*/\nbool below_threshold(long[] l, long t) \n{\n    foreach(long x; l)\n\
    \    {\n        if(x > t)\n            return false;\n    }\n    return true;\n\
    }\nunittest\n{\n    alias candidate = below_threshold;\n\n    assert(candidate([1L,\
    \ 2L, 4L, 10L], 100L) == true);\n    assert(candidate([1L, 20L, 4L, 10L], 5L)\
    \ == false);\n    assert(candidate([1L, 20L, 4L, 10L], 21L) == true);\n    assert(candidate([1L,\
    \ 20L, 4L, 10L], 22L) == true);\n    assert(candidate([1L, 8L, 4L, 10L], 11L)\
    \ == true);\n    assert(candidate([1L, 8L, 4L, 10L], 10L) == false);\n}\nvoid\
    \ main(){}"
  status: SyntaxError
  stderr: 'b''Error: cannot find source code for runtime library file \''object.d\''\n       dmd
    might not be correctly installed. Run \''dmd -man\'' for installation instructions.\nimport
    path[0] = /tmp\nFailed: ["dmd", "-unittest", "-v", "-o-", "/tmp/tmps_bp72k5.d",
    "-I/tmp"]\n'''
  stdout: b''
  timestamp: 1659797732
- exit_code: 1
  program: "import std.typecons;\nimport std.math;\n/*\nReturn True if all numbers\
    \ in the list l are below threshold t.\n    >>> below_threshold([1L, 2L, 4L, 10L],\
    \ 100L)\n    true\n    >>> below_threshold([1L, 20L, 4L, 10L], 5L)\n    false\n\
    \    \n*/\nbool below_threshold(long[] l, long t) \n{\n    foreach(long i; l)\n\
    \    {\n        if(i > t)\n            return false;\n    }\n    return true;\n\
    }\nunittest\n{\n    alias candidate = below_threshold;\n\n    assert(candidate([1L,\
    \ 2L, 4L, 10L], 100L) == true);\n    assert(candidate([1L, 20L, 4L, 10L], 5L)\
    \ == false);\n    assert(candidate([1L, 20L, 4L, 10L], 21L) == true);\n    assert(candidate([1L,\
    \ 20L, 4L, 10L], 22L) == true);\n    assert(candidate([1L, 8L, 4L, 10L], 11L)\
    \ == true);\n    assert(candidate([1L, 8L, 4L, 10L], 10L) == false);\n}\nvoid\
    \ main(){}"
  status: Exception
  stderr: 'b''core.exception.AssertError@/tmp/tmpnp3ngt9z.d(29): unittest failure\n----------------\n??:?
    _d_unittestp [0x4281dd]\n??:? void tmpnp3ngt9z.__unittest_L20_C1() [0x427f4b]\n??:?
    void tmpnp3ngt9z.__modtest() [0x427f60]\n??:? int core.runtime.runModuleUnitTests().__foreachbody2(object.ModuleInfo*)
    [0x42c1c7]\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)).__lambda2(immutable(object.ModuleInfo*))
    [0x42b05a]\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))).__foreachbody2(ref
    rt.sections_elf_shared.DSO) [0x4301ed]\n??:? int rt.sections_elf_shared.DSO.opApply(scope
    int delegate(ref rt.sections_elf_shared.DSO)) [0x43069c]\n??:? int rt.minfo.moduleinfos_apply(scope
    int delegate(immutable(object.ModuleInfo*))) [0x430179]\n??:? int object.ModuleInfo.opApply(scope
    int delegate(object.ModuleInfo*)) [0x42b031]\n??:? runModuleUnitTests [0x42bf9d]\n??:?
    void rt.dmain2._d_run_main(int, char**, extern (C) int function(char[][])*).runAll()
    [0x42862c]\n??:? void rt.dmain2._d_run_main(int, char**, extern (C) int function(char[][])*).tryExec(scope
    void delegate()) [0x4285b3]\n??:? _d_run_main [0x42851e]\n??:? main [0x427f73]\n??:?
    __libc_start_main [0x76bf1554]\n1/1 unittests FAILED\n'''
  stdout: b''
- exit_code: 1
  program: "import std.typecons;\nimport std.math;\n/*\nReturn True if all numbers\
    \ in the list l are below threshold t.\n    >>> below_threshold([1L, 2L, 4L, 10L],\
    \ 100L)\n    true\n    >>> below_threshold([1L, 20L, 4L, 10L], 5L)\n    false\n\
    \    \n*/\nbool below_threshold(long[] l, long t) \n{\n    foreach(long i; l)\n\
    \    {\n        if(i > t)\n            return false;\n    }\n    return true;\n\
    }\nunittest\n{\n    alias candidate = below_threshold;\n\n    assert(candidate([1L,\
    \ 2L, 4L, 10L], 100L) == true);\n    assert(candidate([1L, 20L, 4L, 10L], 5L)\
    \ == false);\n    assert(candidate([1L, 20L, 4L, 10L], 21L) == true);\n    assert(candidate([1L,\
    \ 20L, 4L, 10L], 22L) == true);\n    assert(candidate([1L, 8L, 4L, 10L], 11L)\
    \ == true);\n    assert(candidate([1L, 8L, 4L, 10L], 10L) == false);\n}\nvoid\
    \ main(){}"
  status: Exception
  stderr: 'b''core.exception.AssertError@/tmp/tmpnp3ngt9z.d(29): unittest failure\n----------------\n??:?
    _d_unittestp [0x4281dd]\n??:? void tmpnp3ngt9z.__unittest_L20_C1() [0x427f4b]\n??:?
    void tmpnp3ngt9z.__modtest() [0x427f60]\n??:? int core.runtime.runModuleUnitTests().__foreachbody2(object.ModuleInfo*)
    [0x42c1c7]\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)).__lambda2(immutable(object.ModuleInfo*))
    [0x42b05a]\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))).__foreachbody2(ref
    rt.sections_elf_shared.DSO) [0x4301ed]\n??:? int rt.sections_elf_shared.DSO.opApply(scope
    int delegate(ref rt.sections_elf_shared.DSO)) [0x43069c]\n??:? int rt.minfo.moduleinfos_apply(scope
    int delegate(immutable(object.ModuleInfo*))) [0x430179]\n??:? int object.ModuleInfo.opApply(scope
    int delegate(object.ModuleInfo*)) [0x42b031]\n??:? runModuleUnitTests [0x42bf9d]\n??:?
    void rt.dmain2._d_run_main(int, char**, extern (C) int function(char[][])*).runAll()
    [0x42862c]\n??:? void rt.dmain2._d_run_main(int, char**, extern (C) int function(char[][])*).tryExec(scope
    void delegate()) [0x4285b3]\n??:? _d_run_main [0x42851e]\n??:? main [0x427f73]\n??:?
    __libc_start_main [0x76bf1554]\n1/1 unittests FAILED\n'''
  stdout: b''
- exit_code: 1
  program: "import std.typecons;\nimport std.math;\n/*\nReturn True if all numbers\
    \ in the list l are below threshold t.\n    >>> below_threshold([1L, 2L, 4L, 10L],\
    \ 100L)\n    true\n    >>> below_threshold([1L, 20L, 4L, 10L], 5L)\n    false\n\
    \    \n*/\nbool below_threshold(long[] l, long t) \n{\n    foreach(long i; l)\n\
    \    {\n        if(i > t)\n            return false;\n    }\n    return true;\n\
    }\nunittest\n{\n    alias candidate = below_threshold;\n\n    assert(candidate([1L,\
    \ 2L, 4L, 10L], 100L) == true);\n    assert(candidate([1L, 20L, 4L, 10L], 5L)\
    \ == false);\n    assert(candidate([1L, 20L, 4L, 10L], 21L) == true);\n    assert(candidate([1L,\
    \ 20L, 4L, 10L], 22L) == true);\n    assert(candidate([1L, 8L, 4L, 10L], 11L)\
    \ == true);\n    assert(candidate([1L, 8L, 4L, 10L], 10L) == false);\n}\nvoid\
    \ main(){}"
  status: Exception
  stderr: 'b''core.exception.AssertError@/tmp/tmpnp3ngt9z.d(29): unittest failure\n----------------\n??:?
    _d_unittestp [0x4281dd]\n??:? void tmpnp3ngt9z.__unittest_L20_C1() [0x427f4b]\n??:?
    void tmpnp3ngt9z.__modtest() [0x427f60]\n??:? int core.runtime.runModuleUnitTests().__foreachbody2(object.ModuleInfo*)
    [0x42c1c7]\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)).__lambda2(immutable(object.ModuleInfo*))
    [0x42b05a]\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))).__foreachbody2(ref
    rt.sections_elf_shared.DSO) [0x4301ed]\n??:? int rt.sections_elf_shared.DSO.opApply(scope
    int delegate(ref rt.sections_elf_shared.DSO)) [0x43069c]\n??:? int rt.minfo.moduleinfos_apply(scope
    int delegate(immutable(object.ModuleInfo*))) [0x430179]\n??:? int object.ModuleInfo.opApply(scope
    int delegate(object.ModuleInfo*)) [0x42b031]\n??:? runModuleUnitTests [0x42bf9d]\n??:?
    void rt.dmain2._d_run_main(int, char**, extern (C) int function(char[][])*).runAll()
    [0x42862c]\n??:? void rt.dmain2._d_run_main(int, char**, extern (C) int function(char[][])*).tryExec(scope
    void delegate()) [0x4285b3]\n??:? _d_run_main [0x42851e]\n??:? main [0x427f73]\n??:?
    __libc_start_main [0x76bf1554]\n1/1 unittests FAILED\n'''
  stdout: b''
- exit_code: 1
  program: "import std.typecons;\nimport std.math;\n/*\nReturn True if all numbers\
    \ in the list l are below threshold t.\n    >>> below_threshold([1L, 2L, 4L, 10L],\
    \ 100L)\n    true\n    >>> below_threshold([1L, 20L, 4L, 10L], 5L)\n    false\n\
    \    \n*/\nbool below_threshold(long[] l, long t) \n{\n    bool result = true;\n\
    \    foreach(long x; l)\n    {\n        if(x >= t)\n        {\n            result\
    \ = false;\n            break;\n        }\n    }\n    return result;\n}\nunittest\n\
    {\n    alias candidate = below_threshold;\n\n    assert(candidate([1L, 2L, 4L,\
    \ 10L], 100L) == true);\n    assert(candidate([1L, 20L, 4L, 10L], 5L) == false);\n\
    \    assert(candidate([1L, 20L, 4L, 10L], 21L) == true);\n    assert(candidate([1L,\
    \ 20L, 4L, 10L], 22L) == true);\n    assert(candidate([1L, 8L, 4L, 10L], 11L)\
    \ == true);\n    assert(candidate([1L, 8L, 4L, 10L], 10L) == false);\n}\nvoid\
    \ main(){}"
  status: SyntaxError
  stderr: 'b''Error: cannot find source code for runtime library file \''object.d\''\n       dmd
    might not be correctly installed. Run \''dmd -man\'' for installation instructions.\nimport
    path[0] = /tmp\nFailed: ["dmd", "-unittest", "-v", "-o-", "/tmp/tmpeklqce1i.d",
    "-I/tmp"]\n'''
  stdout: b''
  timestamp: 1659797732
- exit_code: 1
  program: "import std.typecons;\nimport std.math;\n/*\nReturn True if all numbers\
    \ in the list l are below threshold t.\n    >>> below_threshold([1L, 2L, 4L, 10L],\
    \ 100L)\n    true\n    >>> below_threshold([1L, 20L, 4L, 10L], 5L)\n    false\n\
    \    \n*/\nbool below_threshold(long[] l, long t) \n{\n    foreach(long i; l)\n\
    \    {\n        if(i > t)\n            return false;\n    }\n    return true;\n\
    }\nunittest\n{\n    alias candidate = below_threshold;\n\n    assert(candidate([1L,\
    \ 2L, 4L, 10L], 100L) == true);\n    assert(candidate([1L, 20L, 4L, 10L], 5L)\
    \ == false);\n    assert(candidate([1L, 20L, 4L, 10L], 21L) == true);\n    assert(candidate([1L,\
    \ 20L, 4L, 10L], 22L) == true);\n    assert(candidate([1L, 8L, 4L, 10L], 11L)\
    \ == true);\n    assert(candidate([1L, 8L, 4L, 10L], 10L) == false);\n}\nvoid\
    \ main(){}"
  status: Exception
  stderr: 'b''core.exception.AssertError@/tmp/tmpnp3ngt9z.d(29): unittest failure\n----------------\n??:?
    _d_unittestp [0x4281dd]\n??:? void tmpnp3ngt9z.__unittest_L20_C1() [0x427f4b]\n??:?
    void tmpnp3ngt9z.__modtest() [0x427f60]\n??:? int core.runtime.runModuleUnitTests().__foreachbody2(object.ModuleInfo*)
    [0x42c1c7]\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)).__lambda2(immutable(object.ModuleInfo*))
    [0x42b05a]\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))).__foreachbody2(ref
    rt.sections_elf_shared.DSO) [0x4301ed]\n??:? int rt.sections_elf_shared.DSO.opApply(scope
    int delegate(ref rt.sections_elf_shared.DSO)) [0x43069c]\n??:? int rt.minfo.moduleinfos_apply(scope
    int delegate(immutable(object.ModuleInfo*))) [0x430179]\n??:? int object.ModuleInfo.opApply(scope
    int delegate(object.ModuleInfo*)) [0x42b031]\n??:? runModuleUnitTests [0x42bf9d]\n??:?
    void rt.dmain2._d_run_main(int, char**, extern (C) int function(char[][])*).runAll()
    [0x42862c]\n??:? void rt.dmain2._d_run_main(int, char**, extern (C) int function(char[][])*).tryExec(scope
    void delegate()) [0x4285b3]\n??:? _d_run_main [0x42851e]\n??:? main [0x427f73]\n??:?
    __libc_start_main [0x76bf1554]\n1/1 unittests FAILED\n'''
  stdout: b''
- exit_code: 1
  program: "import std.typecons;\nimport std.math;\n/*\nReturn True if all numbers\
    \ in the list l are below threshold t.\n    >>> below_threshold([1L, 2L, 4L, 10L],\
    \ 100L)\n    true\n    >>> below_threshold([1L, 20L, 4L, 10L], 5L)\n    false\n\
    \    \n*/\nbool below_threshold(long[] l, long t) \n{\n    foreach(long i; l)\n\
    \    {\n        if(i > t)\n            return false;\n    }\n    return true;\n\
    }\nunittest\n{\n    alias candidate = below_threshold;\n\n    assert(candidate([1L,\
    \ 2L, 4L, 10L], 100L) == true);\n    assert(candidate([1L, 20L, 4L, 10L], 5L)\
    \ == false);\n    assert(candidate([1L, 20L, 4L, 10L], 21L) == true);\n    assert(candidate([1L,\
    \ 20L, 4L, 10L], 22L) == true);\n    assert(candidate([1L, 8L, 4L, 10L], 11L)\
    \ == true);\n    assert(candidate([1L, 8L, 4L, 10L], 10L) == false);\n}\nvoid\
    \ main(){}"
  status: Exception
  stderr: 'b''core.exception.AssertError@/tmp/tmpnp3ngt9z.d(29): unittest failure\n----------------\n??:?
    _d_unittestp [0x4281dd]\n??:? void tmpnp3ngt9z.__unittest_L20_C1() [0x427f4b]\n??:?
    void tmpnp3ngt9z.__modtest() [0x427f60]\n??:? int core.runtime.runModuleUnitTests().__foreachbody2(object.ModuleInfo*)
    [0x42c1c7]\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)).__lambda2(immutable(object.ModuleInfo*))
    [0x42b05a]\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))).__foreachbody2(ref
    rt.sections_elf_shared.DSO) [0x4301ed]\n??:? int rt.sections_elf_shared.DSO.opApply(scope
    int delegate(ref rt.sections_elf_shared.DSO)) [0x43069c]\n??:? int rt.minfo.moduleinfos_apply(scope
    int delegate(immutable(object.ModuleInfo*))) [0x430179]\n??:? int object.ModuleInfo.opApply(scope
    int delegate(object.ModuleInfo*)) [0x42b031]\n??:? runModuleUnitTests [0x42bf9d]\n??:?
    void rt.dmain2._d_run_main(int, char**, extern (C) int function(char[][])*).runAll()
    [0x42862c]\n??:? void rt.dmain2._d_run_main(int, char**, extern (C) int function(char[][])*).tryExec(scope
    void delegate()) [0x4285b3]\n??:? _d_run_main [0x42851e]\n??:? main [0x427f73]\n??:?
    __libc_start_main [0x76bf1554]\n1/1 unittests FAILED\n'''
  stdout: b''
- exit_code: 1
  program: "import std.typecons;\nimport std.math;\n/*\nReturn True if all numbers\
    \ in the list l are below threshold t.\n    >>> below_threshold([1L, 2L, 4L, 10L],\
    \ 100L)\n    true\n    >>> below_threshold([1L, 20L, 4L, 10L], 5L)\n    false\n\
    \    \n*/\nbool below_threshold(long[] l, long t) \n{\n    foreach(long x; l)\n\
    \    {\n        if(x > t)\n            return false;\n    }\n    return true;\n\
    }\nunittest\n{\n    alias candidate = below_threshold;\n\n    assert(candidate([1L,\
    \ 2L, 4L, 10L], 100L) == true);\n    assert(candidate([1L, 20L, 4L, 10L], 5L)\
    \ == false);\n    assert(candidate([1L, 20L, 4L, 10L], 21L) == true);\n    assert(candidate([1L,\
    \ 20L, 4L, 10L], 22L) == true);\n    assert(candidate([1L, 8L, 4L, 10L], 11L)\
    \ == true);\n    assert(candidate([1L, 8L, 4L, 10L], 10L) == false);\n}\nvoid\
    \ main(){}"
  status: SyntaxError
  stderr: 'b''Error: cannot find source code for runtime library file \''object.d\''\n       dmd
    might not be correctly installed. Run \''dmd -man\'' for installation instructions.\nimport
    path[0] = /tmp\nFailed: ["dmd", "-unittest", "-v", "-o-", "/tmp/tmps_bp72k5.d",
    "-I/tmp"]\n'''
  stdout: b''
  timestamp: 1659797732
- exit_code: 1
  program: "import std.typecons;\nimport std.math;\n/*\nReturn True if all numbers\
    \ in the list l are below threshold t.\n    >>> below_threshold([1L, 2L, 4L, 10L],\
    \ 100L)\n    true\n    >>> below_threshold([1L, 20L, 4L, 10L], 5L)\n    false\n\
    \    \n*/\nbool below_threshold(long[] l, long t) \n{\n    foreach(i; l)\n   \
    \ {\n        if(i > t)\n            return false;\n    }\n    return true;\n}\n\
    unittest\n{\n    alias candidate = below_threshold;\n\n    assert(candidate([1L,\
    \ 2L, 4L, 10L], 100L) == true);\n    assert(candidate([1L, 20L, 4L, 10L], 5L)\
    \ == false);\n    assert(candidate([1L, 20L, 4L, 10L], 21L) == true);\n    assert(candidate([1L,\
    \ 20L, 4L, 10L], 22L) == true);\n    assert(candidate([1L, 8L, 4L, 10L], 11L)\
    \ == true);\n    assert(candidate([1L, 8L, 4L, 10L], 10L) == false);\n}\nvoid\
    \ main(){}"
  status: Exception
  stderr: 'b''core.exception.AssertError@/tmp/tmp70o9mbir.d(29): unittest failure\n----------------\n??:?
    _d_unittestp [0x4281dd]\n??:? void tmp70o9mbir.__unittest_L20_C1() [0x427f4b]\n??:?
    void tmp70o9mbir.__modtest() [0x427f60]\n??:? int core.runtime.runModuleUnitTests().__foreachbody2(object.ModuleInfo*)
    [0x42c1c7]\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)).__lambda2(immutable(object.ModuleInfo*))
    [0x42b05a]\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))).__foreachbody2(ref
    rt.sections_elf_shared.DSO) [0x4301ed]\n??:? int rt.sections_elf_shared.DSO.opApply(scope
    int delegate(ref rt.sections_elf_shared.DSO)) [0x43069c]\n??:? int rt.minfo.moduleinfos_apply(scope
    int delegate(immutable(object.ModuleInfo*))) [0x430179]\n??:? int object.ModuleInfo.opApply(scope
    int delegate(object.ModuleInfo*)) [0x42b031]\n??:? runModuleUnitTests [0x42bf9d]\n??:?
    void rt.dmain2._d_run_main(int, char**, extern (C) int function(char[][])*).runAll()
    [0x42862c]\n??:? void rt.dmain2._d_run_main(int, char**, extern (C) int function(char[][])*).tryExec(scope
    void delegate()) [0x4285b3]\n??:? _d_run_main [0x42851e]\n??:? main [0x427f73]\n??:?
    __libc_start_main [0x4442b554]\n1/1 unittests FAILED\n'''
  stdout: b''
- exit_code: 1
  program: "import std.typecons;\nimport std.math;\n/*\nReturn True if all numbers\
    \ in the list l are below threshold t.\n    >>> below_threshold([1L, 2L, 4L, 10L],\
    \ 100L)\n    true\n    >>> below_threshold([1L, 20L, 4L, 10L], 5L)\n    false\n\
    \    \n*/\nbool below_threshold(long[] l, long t) \n{\n    foreach(long x; l)\n\
    \    {\n        if(x > t)\n            return false;\n    }\n    return true;\n\
    }\n/*\nReturn the number of elements in the list l that are below threshold t.\n\
    \    >>> count_below_threshold([1L, 2L, 4L, 10L], 100L)\n    4\n    >>> count_below_threshold([1L,\
    \ 20L, 4L, 10L], 5L)\n    2\n*/\nlong count_below_threshold(long[] l, long t)\
    \ \n{\n    long count = 0;\n    foreach(long x; l)\n    {\n        if(x < t)\n\
    \            count++;\n    }\n    return count;\n}\n/*\nReturn the number of elements\
    \ in the list l that are below threshold t.\n    >>> count_below_threshold([1L,\
    \ 2L, 4L, 10L], 100L)\n    4\n    >>> count_below_threshold([1L, 20L, 4L, 10L],\
    \ 5L)\n    2\n*/\nlong count_below_threshold_2(long[] l, long t) \n{\n    long\
    \ count = 0;\n    foreach(long x; l)\n    {\n        if(x < t)\n            count++;\n\
    \    }\n    return count;\n}\n/*\nReturn the number of elements in the list l\
    \ that are below threshold t.\n    >>> count_below_threshold([1L, 2L, 4L, 10L],\
    \ 100L)\n    4\n    >>> count_below_threshold([1L, 20L, 4L, 10L], 5L)\n    2\n\
    */\nlong count_below_threshold_3(long[] l, long t) \n{\n    long count = 0;\n\
    \    foreach(long x; l)\n    {\n        if(x < t)\n            count++;\n    }\n\
    \    return count;\n}\n/*\nReturn the number of elements in the list l that are\
    \ below threshold t.\n    >>> count_below_threshold([1L, 2L, 4L, 10L], 100L)\n\
    \    4\n    >>> count_below_threshold([1L,\nunittest\n{\n    alias candidate =\
    \ below_threshold;\n\n    assert(candidate([1L, 2L, 4L, 10L], 100L) == true);\n\
    \    assert(candidate([1L, 20L, 4L, 10L], 5L) == false);\n    assert(candidate([1L,\
    \ 20L, 4L, 10L], 21L) == true);\n    assert(candidate([1L, 20L, 4L, 10L], 22L)\
    \ == true);\n    assert(candidate([1L, 8L, 4L, 10L], 11L) == true);\n    assert(candidate([1L,\
    \ 8L, 4L, 10L], 10L) == false);\n}\nvoid main(){}"
  status: SyntaxError
  stderr: 'b''/tmp/tmpqozd8bwj.d(71): Error: unterminated /* */ comment\nFailed: ["dmd",
    "-unittest", "-v", "-o-", "/tmp/tmpqozd8bwj.d", "-I/tmp"]\n'''
  stdout: b''
- exit_code: 1
  program: "import std.typecons;\nimport std.math;\n/*\nReturn True if all numbers\
    \ in the list l are below threshold t.\n    >>> below_threshold([1L, 2L, 4L, 10L],\
    \ 100L)\n    true\n    >>> below_threshold([1L, 20L, 4L, 10L], 5L)\n    false\n\
    \    \n*/\nbool below_threshold(long[] l, long t) \n{\n    foreach(i; l)\n   \
    \ {\n        if(i > t)\n            return false;\n    }\n    return true;\n}\n\
    unittest\n{\n    alias candidate = below_threshold;\n\n    assert(candidate([1L,\
    \ 2L, 4L, 10L], 100L) == true);\n    assert(candidate([1L, 20L, 4L, 10L], 5L)\
    \ == false);\n    assert(candidate([1L, 20L, 4L, 10L], 21L) == true);\n    assert(candidate([1L,\
    \ 20L, 4L, 10L], 22L) == true);\n    assert(candidate([1L, 8L, 4L, 10L], 11L)\
    \ == true);\n    assert(candidate([1L, 8L, 4L, 10L], 10L) == false);\n}\nvoid\
    \ main(){}"
  status: Exception
  stderr: 'b''core.exception.AssertError@/tmp/tmp70o9mbir.d(29): unittest failure\n----------------\n??:?
    _d_unittestp [0x4281dd]\n??:? void tmp70o9mbir.__unittest_L20_C1() [0x427f4b]\n??:?
    void tmp70o9mbir.__modtest() [0x427f60]\n??:? int core.runtime.runModuleUnitTests().__foreachbody2(object.ModuleInfo*)
    [0x42c1c7]\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)).__lambda2(immutable(object.ModuleInfo*))
    [0x42b05a]\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))).__foreachbody2(ref
    rt.sections_elf_shared.DSO) [0x4301ed]\n??:? int rt.sections_elf_shared.DSO.opApply(scope
    int delegate(ref rt.sections_elf_shared.DSO)) [0x43069c]\n??:? int rt.minfo.moduleinfos_apply(scope
    int delegate(immutable(object.ModuleInfo*))) [0x430179]\n??:? int object.ModuleInfo.opApply(scope
    int delegate(object.ModuleInfo*)) [0x42b031]\n??:? runModuleUnitTests [0x42bf9d]\n??:?
    void rt.dmain2._d_run_main(int, char**, extern (C) int function(char[][])*).runAll()
    [0x42862c]\n??:? void rt.dmain2._d_run_main(int, char**, extern (C) int function(char[][])*).tryExec(scope
    void delegate()) [0x4285b3]\n??:? _d_run_main [0x42851e]\n??:? main [0x427f73]\n??:?
    __libc_start_main [0x4442b554]\n1/1 unittests FAILED\n'''
  stdout: b''
- exit_code: 0
  program: "import std.typecons;\nimport std.math;\n/*\nReturn True if all numbers\
    \ in the list l are below threshold t.\n    >>> below_threshold([1L, 2L, 4L, 10L],\
    \ 100L)\n    true\n    >>> below_threshold([1L, 20L, 4L, 10L], 5L)\n    false\n\
    \    \n*/\nbool below_threshold(long[] l, long t) \n{\n    foreach(long x; l)\n\
    \    {\n        if(x >= t)\n            return false;\n    }\n    return true;\n\
    }\nunittest\n{\n    alias candidate = below_threshold;\n\n    assert(candidate([1L,\
    \ 2L, 4L, 10L], 100L) == true);\n    assert(candidate([1L, 20L, 4L, 10L], 5L)\
    \ == false);\n    assert(candidate([1L, 20L, 4L, 10L], 21L) == true);\n    assert(candidate([1L,\
    \ 20L, 4L, 10L], 22L) == true);\n    assert(candidate([1L, 8L, 4L, 10L], 11L)\
    \ == true);\n    assert(candidate([1L, 8L, 4L, 10L], 10L) == false);\n}\nvoid\
    \ main(){}"
  status: OK
  stderr: b''
  stdout: b''
- exit_code: 1
  program: "import std.typecons;\nimport std.math;\n/*\nReturn True if all numbers\
    \ in the list l are below threshold t.\n    >>> below_threshold([1L, 2L, 4L, 10L],\
    \ 100L)\n    true\n    >>> below_threshold([1L, 20L, 4L, 10L], 5L)\n    false\n\
    \    \n*/\nbool below_threshold(long[] l, long t) \n{\n    foreach(i; l)\n   \
    \ {\n        if(i > t)\n            return false;\n    }\n    return true;\n}\n\
    /*\nReturn True if all numbers in the list l are below threshold t.\n    >>> below_threshold([1L,\
    \ 2L, 4L, 10L], 100L)\n    true\n    >>> below_threshold([1L, 20L, 4L, 10L], 5L)\n\
    \    false\n    \n*/\nunittest\n{\n    alias candidate = below_threshold;\n\n\
    \    assert(candidate([1L, 2L, 4L, 10L], 100L) == true);\n    assert(candidate([1L,\
    \ 20L, 4L, 10L], 5L) == false);\n    assert(candidate([1L, 20L, 4L, 10L], 21L)\
    \ == true);\n    assert(candidate([1L, 20L, 4L, 10L], 22L) == true);\n    assert(candidate([1L,\
    \ 8L, 4L, 10L], 11L) == true);\n    assert(candidate([1L, 8L, 4L, 10L], 10L) ==\
    \ false);\n}\nvoid main(){}"
  status: SyntaxError
  stderr: 'b''Error: cannot find source code for runtime library file \''object.d\''\n       dmd
    might not be correctly installed. Run \''dmd -man\'' for installation instructions.\nimport
    path[0] = /tmp\nFailed: ["dmd", "-unittest", "-v", "-o-", "/tmp/tmp6pbrysvg.d",
    "-I/tmp"]\n'''
  stdout: b''
  timestamp: 1659797732
- exit_code: 0
  program: "import std.typecons;\nimport std.math;\n/*\nReturn True if all numbers\
    \ in the list l are below threshold t.\n    >>> below_threshold([1L, 2L, 4L, 10L],\
    \ 100L)\n    true\n    >>> below_threshold([1L, 20L, 4L, 10L], 5L)\n    false\n\
    \    \n*/\nbool below_threshold(long[] l, long t) \n{\n    foreach(long i; l)\n\
    \    {\n        if(i >= t)\n            return false;\n    }\n    return true;\n\
    }\nunittest\n{\n    alias candidate = below_threshold;\n\n    assert(candidate([1L,\
    \ 2L, 4L, 10L], 100L) == true);\n    assert(candidate([1L, 20L, 4L, 10L], 5L)\
    \ == false);\n    assert(candidate([1L, 20L, 4L, 10L], 21L) == true);\n    assert(candidate([1L,\
    \ 20L, 4L, 10L], 22L) == true);\n    assert(candidate([1L, 8L, 4L, 10L], 11L)\
    \ == true);\n    assert(candidate([1L, 8L, 4L, 10L], 10L) == false);\n}\nvoid\
    \ main(){}"
  status: OK
  stderr: b''
  stdout: b''
- exit_code: 0
  program: "import std.typecons;\nimport std.math;\n/*\nReturn True if all numbers\
    \ in the list l are below threshold t.\n    >>> below_threshold([1L, 2L, 4L, 10L],\
    \ 100L)\n    true\n    >>> below_threshold([1L, 20L, 4L, 10L], 5L)\n    false\n\
    \    \n*/\nbool below_threshold(long[] l, long t) \n{\n    foreach(long x; l)\n\
    \    {\n        if(x >= t)\n            return false;\n    }\n    return true;\n\
    }\nunittest\n{\n    alias candidate = below_threshold;\n\n    assert(candidate([1L,\
    \ 2L, 4L, 10L], 100L) == true);\n    assert(candidate([1L, 20L, 4L, 10L], 5L)\
    \ == false);\n    assert(candidate([1L, 20L, 4L, 10L], 21L) == true);\n    assert(candidate([1L,\
    \ 20L, 4L, 10L], 22L) == true);\n    assert(candidate([1L, 8L, 4L, 10L], 11L)\
    \ == true);\n    assert(candidate([1L, 8L, 4L, 10L], 10L) == false);\n}\nvoid\
    \ main(){}"
  status: OK
  stderr: b''
  stdout: b''
- exit_code: 1
  program: "import std.typecons;\nimport std.math;\n/*\nReturn True if all numbers\
    \ in the list l are below threshold t.\n    >>> below_threshold([1L, 2L, 4L, 10L],\
    \ 100L)\n    true\n    >>> below_threshold([1L, 20L, 4L, 10L], 5L)\n    false\n\
    \    \n*/\nbool below_threshold(long[] l, long t) \n{\n    foreach(long i; l)\n\
    \    {\n        if(i >= t)\n            return false;\n    }\n    return true;\n\
    }\n/*\nReturn True if all numbers in the list l are below threshold t.\n    >>>\
    \ below_threshold([1L, 2L, 4L, 10L], 100L)\n    true\n    >>> below_threshold([1L,\
    \ 20L, 4L, 10L], 5L)\n    false\n    \n*/\nunittest\n{\n    alias candidate =\
    \ below_threshold;\n\n    assert(candidate([1L, 2L, 4L, 10L], 100L) == true);\n\
    \    assert(candidate([1L, 20L, 4L, 10L], 5L) == false);\n    assert(candidate([1L,\
    \ 20L, 4L, 10L], 21L) == true);\n    assert(candidate([1L, 20L, 4L, 10L], 22L)\
    \ == true);\n    assert(candidate([1L, 8L, 4L, 10L], 11L) == true);\n    assert(candidate([1L,\
    \ 8L, 4L, 10L], 10L) == false);\n}\nvoid main(){}"
  status: SyntaxError
  stderr: 'b''Error: cannot find source code for runtime library file \''object.d\''\n       dmd
    might not be correctly installed. Run \''dmd -man\'' for installation instructions.\nimport
    path[0] = /tmp\nFailed: ["dmd", "-unittest", "-v", "-o-", "/tmp/tmp579kmroy.d",
    "-I/tmp"]\n'''
  stdout: b''
  timestamp: 1659797732
- exit_code: 1
  program: "import std.typecons;\nimport std.math;\n/*\nReturn True if all numbers\
    \ in the list l are below threshold t.\n    >>> below_threshold([1L, 2L, 4L, 10L],\
    \ 100L)\n    true\n    >>> below_threshold([1L, 20L, 4L, 10L], 5L)\n    false\n\
    \    \n*/\nbool below_threshold(long[] l, long t) \n{\n    foreach(long x; l)\n\
    \    {\n        if(x > t)\n            return false;\n    }\n    return true;\n\
    }\nunittest\n{\n    alias candidate = below_threshold;\n\n    assert(candidate([1L,\
    \ 2L, 4L, 10L], 100L) == true);\n    assert(candidate([1L, 20L, 4L, 10L], 5L)\
    \ == false);\n    assert(candidate([1L, 20L, 4L, 10L], 21L) == true);\n    assert(candidate([1L,\
    \ 20L, 4L, 10L], 22L) == true);\n    assert(candidate([1L, 8L, 4L, 10L], 11L)\
    \ == true);\n    assert(candidate([1L, 8L, 4L, 10L], 10L) == false);\n}\nvoid\
    \ main(){}"
  status: SyntaxError
  stderr: 'b''Error: cannot find source code for runtime library file \''object.d\''\n       dmd
    might not be correctly installed. Run \''dmd -man\'' for installation instructions.\nimport
    path[0] = /tmp\nFailed: ["dmd", "-unittest", "-v", "-o-", "/tmp/tmps_bp72k5.d",
    "-I/tmp"]\n'''
  stdout: b''
  timestamp: 1659797732
- exit_code: 1
  program: "import std.typecons;\nimport std.math;\n/*\nReturn True if all numbers\
    \ in the list l are below threshold t.\n    >>> below_threshold([1L, 2L, 4L, 10L],\
    \ 100L)\n    true\n    >>> below_threshold([1L, 20L, 4L, 10L], 5L)\n    false\n\
    \    \n*/\nbool below_threshold(long[] l, long t) \n{\n    foreach(long x; l)\n\
    \    {\n        if(x > t)\n            return false;\n    }\n    return true;\n\
    }\nunittest\n{\n    alias candidate = below_threshold;\n\n    assert(candidate([1L,\
    \ 2L, 4L, 10L], 100L) == true);\n    assert(candidate([1L, 20L, 4L, 10L], 5L)\
    \ == false);\n    assert(candidate([1L, 20L, 4L, 10L], 21L) == true);\n    assert(candidate([1L,\
    \ 20L, 4L, 10L], 22L) == true);\n    assert(candidate([1L, 8L, 4L, 10L], 11L)\
    \ == true);\n    assert(candidate([1L, 8L, 4L, 10L], 10L) == false);\n}\nvoid\
    \ main(){}"
  status: SyntaxError
  stderr: 'b''Error: cannot find source code for runtime library file \''object.d\''\n       dmd
    might not be correctly installed. Run \''dmd -man\'' for installation instructions.\nimport
    path[0] = /tmp\nFailed: ["dmd", "-unittest", "-v", "-o-", "/tmp/tmps_bp72k5.d",
    "-I/tmp"]\n'''
  stdout: b''
  timestamp: 1659797732
- exit_code: 1
  program: "import std.typecons;\nimport std.math;\n/*\nReturn True if all numbers\
    \ in the list l are below threshold t.\n    >>> below_threshold([1L, 2L, 4L, 10L],\
    \ 100L)\n    true\n    >>> below_threshold([1L, 20L, 4L, 10L], 5L)\n    false\n\
    \    \n*/\nbool below_threshold(long[] l, long t) \n{\n    foreach(i; l)\n   \
    \ {\n        if(i > t)\n            return false;\n    }\n    return true;\n}\n\
    unittest\n{\n    alias candidate = below_threshold;\n\n    assert(candidate([1L,\
    \ 2L, 4L, 10L], 100L) == true);\n    assert(candidate([1L, 20L, 4L, 10L], 5L)\
    \ == false);\n    assert(candidate([1L, 20L, 4L, 10L], 21L) == true);\n    assert(candidate([1L,\
    \ 20L, 4L, 10L], 22L) == true);\n    assert(candidate([1L, 8L, 4L, 10L], 11L)\
    \ == true);\n    assert(candidate([1L, 8L, 4L, 10L], 10L) == false);\n}\nvoid\
    \ main(){}"
  status: Exception
  stderr: 'b''core.exception.AssertError@/tmp/tmp70o9mbir.d(29): unittest failure\n----------------\n??:?
    _d_unittestp [0x4281dd]\n??:? void tmp70o9mbir.__unittest_L20_C1() [0x427f4b]\n??:?
    void tmp70o9mbir.__modtest() [0x427f60]\n??:? int core.runtime.runModuleUnitTests().__foreachbody2(object.ModuleInfo*)
    [0x42c1c7]\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)).__lambda2(immutable(object.ModuleInfo*))
    [0x42b05a]\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))).__foreachbody2(ref
    rt.sections_elf_shared.DSO) [0x4301ed]\n??:? int rt.sections_elf_shared.DSO.opApply(scope
    int delegate(ref rt.sections_elf_shared.DSO)) [0x43069c]\n??:? int rt.minfo.moduleinfos_apply(scope
    int delegate(immutable(object.ModuleInfo*))) [0x430179]\n??:? int object.ModuleInfo.opApply(scope
    int delegate(object.ModuleInfo*)) [0x42b031]\n??:? runModuleUnitTests [0x42bf9d]\n??:?
    void rt.dmain2._d_run_main(int, char**, extern (C) int function(char[][])*).runAll()
    [0x42862c]\n??:? void rt.dmain2._d_run_main(int, char**, extern (C) int function(char[][])*).tryExec(scope
    void delegate()) [0x4285b3]\n??:? _d_run_main [0x42851e]\n??:? main [0x427f73]\n??:?
    __libc_start_main [0x4442b554]\n1/1 unittests FAILED\n'''
  stdout: b''
- exit_code: 1
  program: "import std.typecons;\nimport std.math;\n/*\nReturn True if all numbers\
    \ in the list l are below threshold t.\n    >>> below_threshold([1L, 2L, 4L, 10L],\
    \ 100L)\n    true\n    >>> below_threshold([1L, 20L, 4L, 10L], 5L)\n    false\n\
    \    \n*/\nbool below_threshold(long[] l, long t) \n{\n    foreach(i; l)\n   \
    \ {\n        if(i > t)\n            return false;\n    }\n    return true;\n}\n\
    unittest\n{\n    alias candidate = below_threshold;\n\n    assert(candidate([1L,\
    \ 2L, 4L, 10L], 100L) == true);\n    assert(candidate([1L, 20L, 4L, 10L], 5L)\
    \ == false);\n    assert(candidate([1L, 20L, 4L, 10L], 21L) == true);\n    assert(candidate([1L,\
    \ 20L, 4L, 10L], 22L) == true);\n    assert(candidate([1L, 8L, 4L, 10L], 11L)\
    \ == true);\n    assert(candidate([1L, 8L, 4L, 10L], 10L) == false);\n}\nvoid\
    \ main(){}"
  status: Exception
  stderr: 'b''core.exception.AssertError@/tmp/tmp70o9mbir.d(29): unittest failure\n----------------\n??:?
    _d_unittestp [0x4281dd]\n??:? void tmp70o9mbir.__unittest_L20_C1() [0x427f4b]\n??:?
    void tmp70o9mbir.__modtest() [0x427f60]\n??:? int core.runtime.runModuleUnitTests().__foreachbody2(object.ModuleInfo*)
    [0x42c1c7]\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)).__lambda2(immutable(object.ModuleInfo*))
    [0x42b05a]\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))).__foreachbody2(ref
    rt.sections_elf_shared.DSO) [0x4301ed]\n??:? int rt.sections_elf_shared.DSO.opApply(scope
    int delegate(ref rt.sections_elf_shared.DSO)) [0x43069c]\n??:? int rt.minfo.moduleinfos_apply(scope
    int delegate(immutable(object.ModuleInfo*))) [0x430179]\n??:? int object.ModuleInfo.opApply(scope
    int delegate(object.ModuleInfo*)) [0x42b031]\n??:? runModuleUnitTests [0x42bf9d]\n??:?
    void rt.dmain2._d_run_main(int, char**, extern (C) int function(char[][])*).runAll()
    [0x42862c]\n??:? void rt.dmain2._d_run_main(int, char**, extern (C) int function(char[][])*).tryExec(scope
    void delegate()) [0x4285b3]\n??:? _d_run_main [0x42851e]\n??:? main [0x427f73]\n??:?
    __libc_start_main [0x4442b554]\n1/1 unittests FAILED\n'''
  stdout: b''
- exit_code: 1
  program: "import std.typecons;\nimport std.math;\n/*\nReturn True if all numbers\
    \ in the list l are below threshold t.\n    >>> below_threshold([1L, 2L, 4L, 10L],\
    \ 100L)\n    true\n    >>> below_threshold([1L, 20L, 4L, 10L], 5L)\n    false\n\
    \    \n*/\nbool below_threshold(long[] l, long t) \n{\n    foreach(i; l)\n   \
    \ {\n        if(i > t)\n            return false;\n    }\n    return true;\n}\n\
    /*\nReturn True if all numbers in the list l are below threshold t.\n    >>> below_threshold([1L,\
    \ 2L, 4L, 10L], 100L)\n    true\n    >>> below_threshold([1L, 20L, 4L, 10L], 5L)\n\
    \    false\n    \n*/\nunittest\n{\n    alias candidate = below_threshold;\n\n\
    \    assert(candidate([1L, 2L, 4L, 10L], 100L) == true);\n    assert(candidate([1L,\
    \ 20L, 4L, 10L], 5L) == false);\n    assert(candidate([1L, 20L, 4L, 10L], 21L)\
    \ == true);\n    assert(candidate([1L, 20L, 4L, 10L], 22L) == true);\n    assert(candidate([1L,\
    \ 8L, 4L, 10L], 11L) == true);\n    assert(candidate([1L, 8L, 4L, 10L], 10L) ==\
    \ false);\n}\nvoid main(){}"
  status: SyntaxError
  stderr: 'b''Error: cannot find source code for runtime library file \''object.d\''\n       dmd
    might not be correctly installed. Run \''dmd -man\'' for installation instructions.\nimport
    path[0] = /tmp\nFailed: ["dmd", "-unittest", "-v", "-o-", "/tmp/tmp6pbrysvg.d",
    "-I/tmp"]\n'''
  stdout: b''
  timestamp: 1659797732
- exit_code: 1
  program: "import std.typecons;\nimport std.math;\n/*\nReturn True if all numbers\
    \ in the list l are below threshold t.\n    >>> below_threshold([1L, 2L, 4L, 10L],\
    \ 100L)\n    true\n    >>> below_threshold([1L, 20L, 4L, 10L], 5L)\n    false\n\
    \    \n*/\nbool below_threshold(long[] l, long t) \n{\n    foreach(long i; l)\n\
    \    {\n        if(i > t)\n            return false;\n    }\n    return true;\n\
    }\nunittest\n{\n    alias candidate = below_threshold;\n\n    assert(candidate([1L,\
    \ 2L, 4L, 10L], 100L) == true);\n    assert(candidate([1L, 20L, 4L, 10L], 5L)\
    \ == false);\n    assert(candidate([1L, 20L, 4L, 10L], 21L) == true);\n    assert(candidate([1L,\
    \ 20L, 4L, 10L], 22L) == true);\n    assert(candidate([1L, 8L, 4L, 10L], 11L)\
    \ == true);\n    assert(candidate([1L, 8L, 4L, 10L], 10L) == false);\n}\nvoid\
    \ main(){}"
  status: Exception
  stderr: 'b''core.exception.AssertError@/tmp/tmpnp3ngt9z.d(29): unittest failure\n----------------\n??:?
    _d_unittestp [0x4281dd]\n??:? void tmpnp3ngt9z.__unittest_L20_C1() [0x427f4b]\n??:?
    void tmpnp3ngt9z.__modtest() [0x427f60]\n??:? int core.runtime.runModuleUnitTests().__foreachbody2(object.ModuleInfo*)
    [0x42c1c7]\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)).__lambda2(immutable(object.ModuleInfo*))
    [0x42b05a]\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))).__foreachbody2(ref
    rt.sections_elf_shared.DSO) [0x4301ed]\n??:? int rt.sections_elf_shared.DSO.opApply(scope
    int delegate(ref rt.sections_elf_shared.DSO)) [0x43069c]\n??:? int rt.minfo.moduleinfos_apply(scope
    int delegate(immutable(object.ModuleInfo*))) [0x430179]\n??:? int object.ModuleInfo.opApply(scope
    int delegate(object.ModuleInfo*)) [0x42b031]\n??:? runModuleUnitTests [0x42bf9d]\n??:?
    void rt.dmain2._d_run_main(int, char**, extern (C) int function(char[][])*).runAll()
    [0x42862c]\n??:? void rt.dmain2._d_run_main(int, char**, extern (C) int function(char[][])*).tryExec(scope
    void delegate()) [0x4285b3]\n??:? _d_run_main [0x42851e]\n??:? main [0x427f73]\n??:?
    __libc_start_main [0x76bf1554]\n1/1 unittests FAILED\n'''
  stdout: b''
- exit_code: 1
  program: "import std.typecons;\nimport std.math;\n/*\nReturn True if all numbers\
    \ in the list l are below threshold t.\n    >>> below_threshold([1L, 2L, 4L, 10L],\
    \ 100L)\n    true\n    >>> below_threshold([1L, 20L, 4L, 10L], 5L)\n    false\n\
    \    \n*/\nbool below_threshold(long[] l, long t) \n{\n    foreach(i; l)\n   \
    \ {\n        if(i > t)\n            return false;\n    }\n    return true;\n}\n\
    unittest\n{\n    alias candidate = below_threshold;\n\n    assert(candidate([1L,\
    \ 2L, 4L, 10L], 100L) == true);\n    assert(candidate([1L, 20L, 4L, 10L], 5L)\
    \ == false);\n    assert(candidate([1L, 20L, 4L, 10L], 21L) == true);\n    assert(candidate([1L,\
    \ 20L, 4L, 10L], 22L) == true);\n    assert(candidate([1L, 8L, 4L, 10L], 11L)\
    \ == true);\n    assert(candidate([1L, 8L, 4L, 10L], 10L) == false);\n}\nvoid\
    \ main(){}"
  status: Exception
  stderr: 'b''core.exception.AssertError@/tmp/tmp70o9mbir.d(29): unittest failure\n----------------\n??:?
    _d_unittestp [0x4281dd]\n??:? void tmp70o9mbir.__unittest_L20_C1() [0x427f4b]\n??:?
    void tmp70o9mbir.__modtest() [0x427f60]\n??:? int core.runtime.runModuleUnitTests().__foreachbody2(object.ModuleInfo*)
    [0x42c1c7]\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)).__lambda2(immutable(object.ModuleInfo*))
    [0x42b05a]\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))).__foreachbody2(ref
    rt.sections_elf_shared.DSO) [0x4301ed]\n??:? int rt.sections_elf_shared.DSO.opApply(scope
    int delegate(ref rt.sections_elf_shared.DSO)) [0x43069c]\n??:? int rt.minfo.moduleinfos_apply(scope
    int delegate(immutable(object.ModuleInfo*))) [0x430179]\n??:? int object.ModuleInfo.opApply(scope
    int delegate(object.ModuleInfo*)) [0x42b031]\n??:? runModuleUnitTests [0x42bf9d]\n??:?
    void rt.dmain2._d_run_main(int, char**, extern (C) int function(char[][])*).runAll()
    [0x42862c]\n??:? void rt.dmain2._d_run_main(int, char**, extern (C) int function(char[][])*).tryExec(scope
    void delegate()) [0x4285b3]\n??:? _d_run_main [0x42851e]\n??:? main [0x427f73]\n??:?
    __libc_start_main [0x4442b554]\n1/1 unittests FAILED\n'''
  stdout: b''
- exit_code: 1
  program: "import std.typecons;\nimport std.math;\n/*\nReturn True if all numbers\
    \ in the list l are below threshold t.\n    >>> below_threshold([1L, 2L, 4L, 10L],\
    \ 100L)\n    true\n    >>> below_threshold([1L, 20L, 4L, 10L], 5L)\n    false\n\
    \    \n*/\nbool below_threshold(long[] l, long t) \n{\n    foreach(long x; l)\n\
    \    {\n        if(x > t)\n            return false;\n    }\n    return true;\n\
    }\nunittest\n{\n    alias candidate = below_threshold;\n\n    assert(candidate([1L,\
    \ 2L, 4L, 10L], 100L) == true);\n    assert(candidate([1L, 20L, 4L, 10L], 5L)\
    \ == false);\n    assert(candidate([1L, 20L, 4L, 10L], 21L) == true);\n    assert(candidate([1L,\
    \ 20L, 4L, 10L], 22L) == true);\n    assert(candidate([1L, 8L, 4L, 10L], 11L)\
    \ == true);\n    assert(candidate([1L, 8L, 4L, 10L], 10L) == false);\n}\nvoid\
    \ main(){}"
  status: SyntaxError
  stderr: 'b''Error: cannot find source code for runtime library file \''object.d\''\n       dmd
    might not be correctly installed. Run \''dmd -man\'' for installation instructions.\nimport
    path[0] = /tmp\nFailed: ["dmd", "-unittest", "-v", "-o-", "/tmp/tmps_bp72k5.d",
    "-I/tmp"]\n'''
  stdout: b''
  timestamp: 1659797732
- exit_code: 1
  program: "import std.typecons;\nimport std.math;\n/*\nReturn True if all numbers\
    \ in the list l are below threshold t.\n    >>> below_threshold([1L, 2L, 4L, 10L],\
    \ 100L)\n    true\n    >>> below_threshold([1L, 20L, 4L, 10L], 5L)\n    false\n\
    \    \n*/\nbool below_threshold(long[] l, long t) \n{\n    foreach(long x; l)\n\
    \    {\n        if(x > t)\n            return false;\n    }\n    return true;\n\
    }\nunittest\n{\n    alias candidate = below_threshold;\n\n    assert(candidate([1L,\
    \ 2L, 4L, 10L], 100L) == true);\n    assert(candidate([1L, 20L, 4L, 10L], 5L)\
    \ == false);\n    assert(candidate([1L, 20L, 4L, 10L], 21L) == true);\n    assert(candidate([1L,\
    \ 20L, 4L, 10L], 22L) == true);\n    assert(candidate([1L, 8L, 4L, 10L], 11L)\
    \ == true);\n    assert(candidate([1L, 8L, 4L, 10L], 10L) == false);\n}\nvoid\
    \ main(){}"
  status: SyntaxError
  stderr: 'b''Error: cannot find source code for runtime library file \''object.d\''\n       dmd
    might not be correctly installed. Run \''dmd -man\'' for installation instructions.\nimport
    path[0] = /tmp\nFailed: ["dmd", "-unittest", "-v", "-o-", "/tmp/tmps_bp72k5.d",
    "-I/tmp"]\n'''
  stdout: b''
  timestamp: 1659797732
- exit_code: 1
  program: "import std.typecons;\nimport std.math;\n/*\nReturn True if all numbers\
    \ in the list l are below threshold t.\n    >>> below_threshold([1L, 2L, 4L, 10L],\
    \ 100L)\n    true\n    >>> below_threshold([1L, 20L, 4L, 10L], 5L)\n    false\n\
    \    \n*/\nbool below_threshold(long[] l, long t) \n{\n    foreach(i; l) \n  \
    \  {\n        if(i >= t) \n        {\n            return false;\n        }\n \
    \   }\n    return true;\n}\nunittest\n{\n    alias candidate = below_threshold;\n\
    \n    assert(candidate([1L, 2L, 4L, 10L], 100L) == true);\n    assert(candidate([1L,\
    \ 20L, 4L, 10L], 5L) == false);\n    assert(candidate([1L, 20L, 4L, 10L], 21L)\
    \ == true);\n    assert(candidate([1L, 20L, 4L, 10L], 22L) == true);\n    assert(candidate([1L,\
    \ 8L, 4L, 10L], 11L) == true);\n    assert(candidate([1L, 8L, 4L, 10L], 10L) ==\
    \ false);\n}\nvoid main(){}"
  status: SyntaxError
  stderr: 'b''Error: cannot find source code for runtime library file \''object.d\''\n       dmd
    might not be correctly installed. Run \''dmd -man\'' for installation instructions.\nimport
    path[0] = /tmp\nFailed: ["dmd", "-unittest", "-v", "-o-", "/tmp/tmp8u_sguss.d",
    "-I/tmp"]\n'''
  stdout: b''
  timestamp: 1659797732
- exit_code: 1
  program: "import std.typecons;\nimport std.math;\n/*\nReturn True if all numbers\
    \ in the list l are below threshold t.\n    >>> below_threshold([1L, 2L, 4L, 10L],\
    \ 100L)\n    true\n    >>> below_threshold([1L, 20L, 4L, 10L], 5L)\n    false\n\
    \    \n*/\nbool below_threshold(long[] l, long t) \n{\n    foreach(long i; l)\n\
    \    {\n        if(i > t)\n            return false;\n    }\n    return true;\n\
    }\nunittest\n{\n    alias candidate = below_threshold;\n\n    assert(candidate([1L,\
    \ 2L, 4L, 10L], 100L) == true);\n    assert(candidate([1L, 20L, 4L, 10L], 5L)\
    \ == false);\n    assert(candidate([1L, 20L, 4L, 10L], 21L) == true);\n    assert(candidate([1L,\
    \ 20L, 4L, 10L], 22L) == true);\n    assert(candidate([1L, 8L, 4L, 10L], 11L)\
    \ == true);\n    assert(candidate([1L, 8L, 4L, 10L], 10L) == false);\n}\nvoid\
    \ main(){}"
  status: Exception
  stderr: 'b''core.exception.AssertError@/tmp/tmpnp3ngt9z.d(29): unittest failure\n----------------\n??:?
    _d_unittestp [0x4281dd]\n??:? void tmpnp3ngt9z.__unittest_L20_C1() [0x427f4b]\n??:?
    void tmpnp3ngt9z.__modtest() [0x427f60]\n??:? int core.runtime.runModuleUnitTests().__foreachbody2(object.ModuleInfo*)
    [0x42c1c7]\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)).__lambda2(immutable(object.ModuleInfo*))
    [0x42b05a]\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))).__foreachbody2(ref
    rt.sections_elf_shared.DSO) [0x4301ed]\n??:? int rt.sections_elf_shared.DSO.opApply(scope
    int delegate(ref rt.sections_elf_shared.DSO)) [0x43069c]\n??:? int rt.minfo.moduleinfos_apply(scope
    int delegate(immutable(object.ModuleInfo*))) [0x430179]\n??:? int object.ModuleInfo.opApply(scope
    int delegate(object.ModuleInfo*)) [0x42b031]\n??:? runModuleUnitTests [0x42bf9d]\n??:?
    void rt.dmain2._d_run_main(int, char**, extern (C) int function(char[][])*).runAll()
    [0x42862c]\n??:? void rt.dmain2._d_run_main(int, char**, extern (C) int function(char[][])*).tryExec(scope
    void delegate()) [0x4285b3]\n??:? _d_run_main [0x42851e]\n??:? main [0x427f73]\n??:?
    __libc_start_main [0x76bf1554]\n1/1 unittests FAILED\n'''
  stdout: b''
- exit_code: 0
  program: "import std.typecons;\nimport std.math;\n/*\nReturn True if all numbers\
    \ in the list l are below threshold t.\n    >>> below_threshold([1L, 2L, 4L, 10L],\
    \ 100L)\n    true\n    >>> below_threshold([1L, 20L, 4L, 10L], 5L)\n    false\n\
    \    \n*/\nbool below_threshold(long[] l, long t) \n{\n    foreach(long x; l)\n\
    \    {\n        if(x >= t)\n            return false;\n    }\n    return true;\n\
    }\nunittest\n{\n    alias candidate = below_threshold;\n\n    assert(candidate([1L,\
    \ 2L, 4L, 10L], 100L) == true);\n    assert(candidate([1L, 20L, 4L, 10L], 5L)\
    \ == false);\n    assert(candidate([1L, 20L, 4L, 10L], 21L) == true);\n    assert(candidate([1L,\
    \ 20L, 4L, 10L], 22L) == true);\n    assert(candidate([1L, 8L, 4L, 10L], 11L)\
    \ == true);\n    assert(candidate([1L, 8L, 4L, 10L], 10L) == false);\n}\nvoid\
    \ main(){}"
  status: OK
  stderr: b''
  stdout: b''
- exit_code: 1
  program: "import std.typecons;\nimport std.math;\n/*\nReturn True if all numbers\
    \ in the list l are below threshold t.\n    >>> below_threshold([1L, 2L, 4L, 10L],\
    \ 100L)\n    true\n    >>> below_threshold([1L, 20L, 4L, 10L], 5L)\n    false\n\
    \    \n*/\nbool below_threshold(long[] l, long t) \n{\n    foreach(x; l)\n   \
    \ {\n        if(x > t)\n            return false;\n    }\n    return true;\n}\n\
    unittest\n{\n    alias candidate = below_threshold;\n\n    assert(candidate([1L,\
    \ 2L, 4L, 10L], 100L) == true);\n    assert(candidate([1L, 20L, 4L, 10L], 5L)\
    \ == false);\n    assert(candidate([1L, 20L, 4L, 10L], 21L) == true);\n    assert(candidate([1L,\
    \ 20L, 4L, 10L], 22L) == true);\n    assert(candidate([1L, 8L, 4L, 10L], 11L)\
    \ == true);\n    assert(candidate([1L, 8L, 4L, 10L], 10L) == false);\n}\nvoid\
    \ main(){}"
  status: Exception
  stderr: 'b''core.exception.AssertError@/tmp/tmp762c1vwx.d(29): unittest failure\n----------------\n??:?
    _d_unittestp [0x4281dd]\n??:? void tmp762c1vwx.__unittest_L20_C1() [0x427f4b]\n??:?
    void tmp762c1vwx.__modtest() [0x427f60]\n??:? int core.runtime.runModuleUnitTests().__foreachbody2(object.ModuleInfo*)
    [0x42c1c7]\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)).__lambda2(immutable(object.ModuleInfo*))
    [0x42b05a]\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))).__foreachbody2(ref
    rt.sections_elf_shared.DSO) [0x4301ed]\n??:? int rt.sections_elf_shared.DSO.opApply(scope
    int delegate(ref rt.sections_elf_shared.DSO)) [0x43069c]\n??:? int rt.minfo.moduleinfos_apply(scope
    int delegate(immutable(object.ModuleInfo*))) [0x430179]\n??:? int object.ModuleInfo.opApply(scope
    int delegate(object.ModuleInfo*)) [0x42b031]\n??:? runModuleUnitTests [0x42bf9d]\n??:?
    void rt.dmain2._d_run_main(int, char**, extern (C) int function(char[][])*).runAll()
    [0x42862c]\n??:? void rt.dmain2._d_run_main(int, char**, extern (C) int function(char[][])*).tryExec(scope
    void delegate()) [0x4285b3]\n??:? _d_run_main [0x42851e]\n??:? main [0x427f73]\n??:?
    __libc_start_main [0x1b6ed554]\n1/1 unittests FAILED\n'''
  stdout: b''
- exit_code: 1
  program: "import std.typecons;\nimport std.math;\n/*\nReturn True if all numbers\
    \ in the list l are below threshold t.\n    >>> below_threshold([1L, 2L, 4L, 10L],\
    \ 100L)\n    true\n    >>> below_threshold([1L, 20L, 4L, 10L], 5L)\n    false\n\
    \    \n*/\nbool below_threshold(long[] l, long t) \n{\n    foreach(i; l)\n   \
    \ {\n        if(i > t)\n            return false;\n    }\n    return true;\n}\n\
    unittest\n{\n    alias candidate = below_threshold;\n\n    assert(candidate([1L,\
    \ 2L, 4L, 10L], 100L) == true);\n    assert(candidate([1L, 20L, 4L, 10L], 5L)\
    \ == false);\n    assert(candidate([1L, 20L, 4L, 10L], 21L) == true);\n    assert(candidate([1L,\
    \ 20L, 4L, 10L], 22L) == true);\n    assert(candidate([1L, 8L, 4L, 10L], 11L)\
    \ == true);\n    assert(candidate([1L, 8L, 4L, 10L], 10L) == false);\n}\nvoid\
    \ main(){}"
  status: Exception
  stderr: 'b''core.exception.AssertError@/tmp/tmp70o9mbir.d(29): unittest failure\n----------------\n??:?
    _d_unittestp [0x4281dd]\n??:? void tmp70o9mbir.__unittest_L20_C1() [0x427f4b]\n??:?
    void tmp70o9mbir.__modtest() [0x427f60]\n??:? int core.runtime.runModuleUnitTests().__foreachbody2(object.ModuleInfo*)
    [0x42c1c7]\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)).__lambda2(immutable(object.ModuleInfo*))
    [0x42b05a]\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))).__foreachbody2(ref
    rt.sections_elf_shared.DSO) [0x4301ed]\n??:? int rt.sections_elf_shared.DSO.opApply(scope
    int delegate(ref rt.sections_elf_shared.DSO)) [0x43069c]\n??:? int rt.minfo.moduleinfos_apply(scope
    int delegate(immutable(object.ModuleInfo*))) [0x430179]\n??:? int object.ModuleInfo.opApply(scope
    int delegate(object.ModuleInfo*)) [0x42b031]\n??:? runModuleUnitTests [0x42bf9d]\n??:?
    void rt.dmain2._d_run_main(int, char**, extern (C) int function(char[][])*).runAll()
    [0x42862c]\n??:? void rt.dmain2._d_run_main(int, char**, extern (C) int function(char[][])*).tryExec(scope
    void delegate()) [0x4285b3]\n??:? _d_run_main [0x42851e]\n??:? main [0x427f73]\n??:?
    __libc_start_main [0x4442b554]\n1/1 unittests FAILED\n'''
  stdout: b''
- exit_code: 1
  program: "import std.typecons;\nimport std.math;\n/*\nReturn True if all numbers\
    \ in the list l are below threshold t.\n    >>> below_threshold([1L, 2L, 4L, 10L],\
    \ 100L)\n    true\n    >>> below_threshold([1L, 20L, 4L, 10L], 5L)\n    false\n\
    \    \n*/\nbool below_threshold(long[] l, long t) \n{\n    foreach(i; l)\n   \
    \ {\n        if(i > t)\n            return false;\n    }\n    return true;\n}\n\
    unittest\n{\n    alias candidate = below_threshold;\n\n    assert(candidate([1L,\
    \ 2L, 4L, 10L], 100L) == true);\n    assert(candidate([1L, 20L, 4L, 10L], 5L)\
    \ == false);\n    assert(candidate([1L, 20L, 4L, 10L], 21L) == true);\n    assert(candidate([1L,\
    \ 20L, 4L, 10L], 22L) == true);\n    assert(candidate([1L, 8L, 4L, 10L], 11L)\
    \ == true);\n    assert(candidate([1L, 8L, 4L, 10L], 10L) == false);\n}\nvoid\
    \ main(){}"
  status: Exception
  stderr: 'b''core.exception.AssertError@/tmp/tmp70o9mbir.d(29): unittest failure\n----------------\n??:?
    _d_unittestp [0x4281dd]\n??:? void tmp70o9mbir.__unittest_L20_C1() [0x427f4b]\n??:?
    void tmp70o9mbir.__modtest() [0x427f60]\n??:? int core.runtime.runModuleUnitTests().__foreachbody2(object.ModuleInfo*)
    [0x42c1c7]\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)).__lambda2(immutable(object.ModuleInfo*))
    [0x42b05a]\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))).__foreachbody2(ref
    rt.sections_elf_shared.DSO) [0x4301ed]\n??:? int rt.sections_elf_shared.DSO.opApply(scope
    int delegate(ref rt.sections_elf_shared.DSO)) [0x43069c]\n??:? int rt.minfo.moduleinfos_apply(scope
    int delegate(immutable(object.ModuleInfo*))) [0x430179]\n??:? int object.ModuleInfo.opApply(scope
    int delegate(object.ModuleInfo*)) [0x42b031]\n??:? runModuleUnitTests [0x42bf9d]\n??:?
    void rt.dmain2._d_run_main(int, char**, extern (C) int function(char[][])*).runAll()
    [0x42862c]\n??:? void rt.dmain2._d_run_main(int, char**, extern (C) int function(char[][])*).tryExec(scope
    void delegate()) [0x4285b3]\n??:? _d_run_main [0x42851e]\n??:? main [0x427f73]\n??:?
    __libc_start_main [0x4442b554]\n1/1 unittests FAILED\n'''
  stdout: b''
- exit_code: 1
  program: "import std.typecons;\nimport std.math;\n/*\nReturn True if all numbers\
    \ in the list l are below threshold t.\n    >>> below_threshold([1L, 2L, 4L, 10L],\
    \ 100L)\n    true\n    >>> below_threshold([1L, 20L, 4L, 10L], 5L)\n    false\n\
    \    \n*/\nbool below_threshold(long[] l, long t) \n{\n    foreach(long i; l)\n\
    \    {\n        if(i > t)\n            return false;\n    }\n    return true;\n\
    }\nunittest\n{\n    alias candidate = below_threshold;\n\n    assert(candidate([1L,\
    \ 2L, 4L, 10L], 100L) == true);\n    assert(candidate([1L, 20L, 4L, 10L], 5L)\
    \ == false);\n    assert(candidate([1L, 20L, 4L, 10L], 21L) == true);\n    assert(candidate([1L,\
    \ 20L, 4L, 10L], 22L) == true);\n    assert(candidate([1L, 8L, 4L, 10L], 11L)\
    \ == true);\n    assert(candidate([1L, 8L, 4L, 10L], 10L) == false);\n}\nvoid\
    \ main(){}"
  status: Exception
  stderr: 'b''core.exception.AssertError@/tmp/tmpnp3ngt9z.d(29): unittest failure\n----------------\n??:?
    _d_unittestp [0x4281dd]\n??:? void tmpnp3ngt9z.__unittest_L20_C1() [0x427f4b]\n??:?
    void tmpnp3ngt9z.__modtest() [0x427f60]\n??:? int core.runtime.runModuleUnitTests().__foreachbody2(object.ModuleInfo*)
    [0x42c1c7]\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)).__lambda2(immutable(object.ModuleInfo*))
    [0x42b05a]\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))).__foreachbody2(ref
    rt.sections_elf_shared.DSO) [0x4301ed]\n??:? int rt.sections_elf_shared.DSO.opApply(scope
    int delegate(ref rt.sections_elf_shared.DSO)) [0x43069c]\n??:? int rt.minfo.moduleinfos_apply(scope
    int delegate(immutable(object.ModuleInfo*))) [0x430179]\n??:? int object.ModuleInfo.opApply(scope
    int delegate(object.ModuleInfo*)) [0x42b031]\n??:? runModuleUnitTests [0x42bf9d]\n??:?
    void rt.dmain2._d_run_main(int, char**, extern (C) int function(char[][])*).runAll()
    [0x42862c]\n??:? void rt.dmain2._d_run_main(int, char**, extern (C) int function(char[][])*).tryExec(scope
    void delegate()) [0x4285b3]\n??:? _d_run_main [0x42851e]\n??:? main [0x427f73]\n??:?
    __libc_start_main [0x76bf1554]\n1/1 unittests FAILED\n'''
  stdout: b''
- exit_code: 1
  program: "import std.typecons;\nimport std.math;\n/*\nReturn True if all numbers\
    \ in the list l are below threshold t.\n    >>> below_threshold([1L, 2L, 4L, 10L],\
    \ 100L)\n    true\n    >>> below_threshold([1L, 20L, 4L, 10L], 5L)\n    false\n\
    \    \n*/\nbool below_threshold(long[] l, long t) \n{\n    foreach(e; l) \n  \
    \  {\n        if(e > t)\n            return false;\n    }\n    return true;\n\
    }\nunittest\n{\n    alias candidate = below_threshold;\n\n    assert(candidate([1L,\
    \ 2L, 4L, 10L], 100L) == true);\n    assert(candidate([1L, 20L, 4L, 10L], 5L)\
    \ == false);\n    assert(candidate([1L, 20L, 4L, 10L], 21L) == true);\n    assert(candidate([1L,\
    \ 20L, 4L, 10L], 22L) == true);\n    assert(candidate([1L, 8L, 4L, 10L], 11L)\
    \ == true);\n    assert(candidate([1L, 8L, 4L, 10L], 10L) == false);\n}\nvoid\
    \ main(){}"
  status: SyntaxError
  stderr: 'b''Error: cannot find source code for runtime library file \''object.d\''\n       dmd
    might not be correctly installed. Run \''dmd -man\'' for installation instructions.\nimport
    path[0] = /tmp\nFailed: ["dmd", "-unittest", "-v", "-o-", "/tmp/tmp6vhh4toe.d",
    "-I/tmp"]\n'''
  stdout: b''
  timestamp: 1659797732
- exit_code: 1
  program: "import std.typecons;\nimport std.math;\n/*\nReturn True if all numbers\
    \ in the list l are below threshold t.\n    >>> below_threshold([1L, 2L, 4L, 10L],\
    \ 100L)\n    true\n    >>> below_threshold([1L, 20L, 4L, 10L], 5L)\n    false\n\
    \    \n*/\nbool below_threshold(long[] l, long t) \n{\n    foreach(i; l)\n   \
    \ {\n        if(i > t)\n            return false;\n    }\n    return true;\n}\n\
    unittest\n{\n    alias candidate = below_threshold;\n\n    assert(candidate([1L,\
    \ 2L, 4L, 10L], 100L) == true);\n    assert(candidate([1L, 20L, 4L, 10L], 5L)\
    \ == false);\n    assert(candidate([1L, 20L, 4L, 10L], 21L) == true);\n    assert(candidate([1L,\
    \ 20L, 4L, 10L], 22L) == true);\n    assert(candidate([1L, 8L, 4L, 10L], 11L)\
    \ == true);\n    assert(candidate([1L, 8L, 4L, 10L], 10L) == false);\n}\nvoid\
    \ main(){}"
  status: Exception
  stderr: 'b''core.exception.AssertError@/tmp/tmp70o9mbir.d(29): unittest failure\n----------------\n??:?
    _d_unittestp [0x4281dd]\n??:? void tmp70o9mbir.__unittest_L20_C1() [0x427f4b]\n??:?
    void tmp70o9mbir.__modtest() [0x427f60]\n??:? int core.runtime.runModuleUnitTests().__foreachbody2(object.ModuleInfo*)
    [0x42c1c7]\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)).__lambda2(immutable(object.ModuleInfo*))
    [0x42b05a]\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))).__foreachbody2(ref
    rt.sections_elf_shared.DSO) [0x4301ed]\n??:? int rt.sections_elf_shared.DSO.opApply(scope
    int delegate(ref rt.sections_elf_shared.DSO)) [0x43069c]\n??:? int rt.minfo.moduleinfos_apply(scope
    int delegate(immutable(object.ModuleInfo*))) [0x430179]\n??:? int object.ModuleInfo.opApply(scope
    int delegate(object.ModuleInfo*)) [0x42b031]\n??:? runModuleUnitTests [0x42bf9d]\n??:?
    void rt.dmain2._d_run_main(int, char**, extern (C) int function(char[][])*).runAll()
    [0x42862c]\n??:? void rt.dmain2._d_run_main(int, char**, extern (C) int function(char[][])*).tryExec(scope
    void delegate()) [0x4285b3]\n??:? _d_run_main [0x42851e]\n??:? main [0x427f73]\n??:?
    __libc_start_main [0x4442b554]\n1/1 unittests FAILED\n'''
  stdout: b''
- exit_code: 1
  program: "import std.typecons;\nimport std.math;\n/*\nReturn True if all numbers\
    \ in the list l are below threshold t.\n    >>> below_threshold([1L, 2L, 4L, 10L],\
    \ 100L)\n    true\n    >>> below_threshold([1L, 20L, 4L, 10L], 5L)\n    false\n\
    \    \n*/\nbool below_threshold(long[] l, long t) \n{\n    foreach(item; l)\n\
    \    {\n        if(item > t)\n            return false;\n    }\n    return true;\n\
    }\n/*\nReturn True if all numbers in the list l are below threshold t.\n    >>>\
    \ below_threshold([1L, 2L, 4L, 10L], 100L)\n    true\n    >>> below_threshold([1L,\
    \ 20L, 4L, 10L], 5L)\n    false\n    \n*/\nunittest\n{\n    alias candidate =\
    \ below_threshold;\n\n    assert(candidate([1L, 2L, 4L, 10L], 100L) == true);\n\
    \    assert(candidate([1L, 20L, 4L, 10L], 5L) == false);\n    assert(candidate([1L,\
    \ 20L, 4L, 10L], 21L) == true);\n    assert(candidate([1L, 20L, 4L, 10L], 22L)\
    \ == true);\n    assert(candidate([1L, 8L, 4L, 10L], 11L) == true);\n    assert(candidate([1L,\
    \ 8L, 4L, 10L], 10L) == false);\n}\nvoid main(){}"
  status: SyntaxError
  stderr: 'b''Error: cannot find source code for runtime library file \''object.d\''\n       dmd
    might not be correctly installed. Run \''dmd -man\'' for installation instructions.\nimport
    path[0] = /tmp\nFailed: ["dmd", "-unittest", "-v", "-o-", "/tmp/tmpggapjdlw.d",
    "-I/tmp"]\n'''
  stdout: b''
  timestamp: 1659797732
- exit_code: 1
  program: "import std.typecons;\nimport std.math;\n/*\nReturn True if all numbers\
    \ in the list l are below threshold t.\n    >>> below_threshold([1L, 2L, 4L, 10L],\
    \ 100L)\n    true\n    >>> below_threshold([1L, 20L, 4L, 10L], 5L)\n    false\n\
    \    \n*/\nbool below_threshold(long[] l, long t) \n{\n    foreach(i; l)\n   \
    \ {\n        if(i > t)\n            return false;\n    }\n    return true;\n}\n\
    unittest\n{\n    alias candidate = below_threshold;\n\n    assert(candidate([1L,\
    \ 2L, 4L, 10L], 100L) == true);\n    assert(candidate([1L, 20L, 4L, 10L], 5L)\
    \ == false);\n    assert(candidate([1L, 20L, 4L, 10L], 21L) == true);\n    assert(candidate([1L,\
    \ 20L, 4L, 10L], 22L) == true);\n    assert(candidate([1L, 8L, 4L, 10L], 11L)\
    \ == true);\n    assert(candidate([1L, 8L, 4L, 10L], 10L) == false);\n}\nvoid\
    \ main(){}"
  status: Exception
  stderr: 'b''core.exception.AssertError@/tmp/tmp70o9mbir.d(29): unittest failure\n----------------\n??:?
    _d_unittestp [0x4281dd]\n??:? void tmp70o9mbir.__unittest_L20_C1() [0x427f4b]\n??:?
    void tmp70o9mbir.__modtest() [0x427f60]\n??:? int core.runtime.runModuleUnitTests().__foreachbody2(object.ModuleInfo*)
    [0x42c1c7]\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)).__lambda2(immutable(object.ModuleInfo*))
    [0x42b05a]\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))).__foreachbody2(ref
    rt.sections_elf_shared.DSO) [0x4301ed]\n??:? int rt.sections_elf_shared.DSO.opApply(scope
    int delegate(ref rt.sections_elf_shared.DSO)) [0x43069c]\n??:? int rt.minfo.moduleinfos_apply(scope
    int delegate(immutable(object.ModuleInfo*))) [0x430179]\n??:? int object.ModuleInfo.opApply(scope
    int delegate(object.ModuleInfo*)) [0x42b031]\n??:? runModuleUnitTests [0x42bf9d]\n??:?
    void rt.dmain2._d_run_main(int, char**, extern (C) int function(char[][])*).runAll()
    [0x42862c]\n??:? void rt.dmain2._d_run_main(int, char**, extern (C) int function(char[][])*).tryExec(scope
    void delegate()) [0x4285b3]\n??:? _d_run_main [0x42851e]\n??:? main [0x427f73]\n??:?
    __libc_start_main [0x4442b554]\n1/1 unittests FAILED\n'''
  stdout: b''
- exit_code: 0
  program: "import std.typecons;\nimport std.math;\n/*\nReturn True if all numbers\
    \ in the list l are below threshold t.\n    >>> below_threshold([1L, 2L, 4L, 10L],\
    \ 100L)\n    true\n    >>> below_threshold([1L, 20L, 4L, 10L], 5L)\n    false\n\
    \    \n*/\nbool below_threshold(long[] l, long t) \n{\n    foreach(long i; l)\n\
    \    {\n        if(i >= t)\n            return false;\n    }\n    return true;\n\
    }\nunittest\n{\n    alias candidate = below_threshold;\n\n    assert(candidate([1L,\
    \ 2L, 4L, 10L], 100L) == true);\n    assert(candidate([1L, 20L, 4L, 10L], 5L)\
    \ == false);\n    assert(candidate([1L, 20L, 4L, 10L], 21L) == true);\n    assert(candidate([1L,\
    \ 20L, 4L, 10L], 22L) == true);\n    assert(candidate([1L, 8L, 4L, 10L], 11L)\
    \ == true);\n    assert(candidate([1L, 8L, 4L, 10L], 10L) == false);\n}\nvoid\
    \ main(){}"
  status: OK
  stderr: b''
  stdout: b''
- exit_code: 1
  program: "import std.typecons;\nimport std.math;\n/*\nReturn True if all numbers\
    \ in the list l are below threshold t.\n    >>> below_threshold([1L, 2L, 4L, 10L],\
    \ 100L)\n    true\n    >>> below_threshold([1L, 20L, 4L, 10L], 5L)\n    false\n\
    \    \n*/\nbool below_threshold(long[] l, long t) \n{\n    foreach(i; l)\n   \
    \ {\n        if(i > t)\n            return false;\n    }\n    return true;\n}\n\
    unittest\n{\n    alias candidate = below_threshold;\n\n    assert(candidate([1L,\
    \ 2L, 4L, 10L], 100L) == true);\n    assert(candidate([1L, 20L, 4L, 10L], 5L)\
    \ == false);\n    assert(candidate([1L, 20L, 4L, 10L], 21L) == true);\n    assert(candidate([1L,\
    \ 20L, 4L, 10L], 22L) == true);\n    assert(candidate([1L, 8L, 4L, 10L], 11L)\
    \ == true);\n    assert(candidate([1L, 8L, 4L, 10L], 10L) == false);\n}\nvoid\
    \ main(){}"
  status: Exception
  stderr: 'b''core.exception.AssertError@/tmp/tmp70o9mbir.d(29): unittest failure\n----------------\n??:?
    _d_unittestp [0x4281dd]\n??:? void tmp70o9mbir.__unittest_L20_C1() [0x427f4b]\n??:?
    void tmp70o9mbir.__modtest() [0x427f60]\n??:? int core.runtime.runModuleUnitTests().__foreachbody2(object.ModuleInfo*)
    [0x42c1c7]\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)).__lambda2(immutable(object.ModuleInfo*))
    [0x42b05a]\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))).__foreachbody2(ref
    rt.sections_elf_shared.DSO) [0x4301ed]\n??:? int rt.sections_elf_shared.DSO.opApply(scope
    int delegate(ref rt.sections_elf_shared.DSO)) [0x43069c]\n??:? int rt.minfo.moduleinfos_apply(scope
    int delegate(immutable(object.ModuleInfo*))) [0x430179]\n??:? int object.ModuleInfo.opApply(scope
    int delegate(object.ModuleInfo*)) [0x42b031]\n??:? runModuleUnitTests [0x42bf9d]\n??:?
    void rt.dmain2._d_run_main(int, char**, extern (C) int function(char[][])*).runAll()
    [0x42862c]\n??:? void rt.dmain2._d_run_main(int, char**, extern (C) int function(char[][])*).tryExec(scope
    void delegate()) [0x4285b3]\n??:? _d_run_main [0x42851e]\n??:? main [0x427f73]\n??:?
    __libc_start_main [0x4442b554]\n1/1 unittests FAILED\n'''
  stdout: b''
- exit_code: 1
  program: "import std.typecons;\nimport std.math;\n/*\nReturn True if all numbers\
    \ in the list l are below threshold t.\n    >>> below_threshold([1L, 2L, 4L, 10L],\
    \ 100L)\n    true\n    >>> below_threshold([1L, 20L, 4L, 10L], 5L)\n    false\n\
    \    \n*/\nbool below_threshold(long[] l, long t) \n{\n    foreach(long i; l)\n\
    \    {\n        if(i > t)\n            return false;\n    }\n    return true;\n\
    }\nunittest\n{\n    alias candidate = below_threshold;\n\n    assert(candidate([1L,\
    \ 2L, 4L, 10L], 100L) == true);\n    assert(candidate([1L, 20L, 4L, 10L], 5L)\
    \ == false);\n    assert(candidate([1L, 20L, 4L, 10L], 21L) == true);\n    assert(candidate([1L,\
    \ 20L, 4L, 10L], 22L) == true);\n    assert(candidate([1L, 8L, 4L, 10L], 11L)\
    \ == true);\n    assert(candidate([1L, 8L, 4L, 10L], 10L) == false);\n}\nvoid\
    \ main(){}"
  status: Exception
  stderr: 'b''core.exception.AssertError@/tmp/tmpnp3ngt9z.d(29): unittest failure\n----------------\n??:?
    _d_unittestp [0x4281dd]\n??:? void tmpnp3ngt9z.__unittest_L20_C1() [0x427f4b]\n??:?
    void tmpnp3ngt9z.__modtest() [0x427f60]\n??:? int core.runtime.runModuleUnitTests().__foreachbody2(object.ModuleInfo*)
    [0x42c1c7]\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)).__lambda2(immutable(object.ModuleInfo*))
    [0x42b05a]\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))).__foreachbody2(ref
    rt.sections_elf_shared.DSO) [0x4301ed]\n??:? int rt.sections_elf_shared.DSO.opApply(scope
    int delegate(ref rt.sections_elf_shared.DSO)) [0x43069c]\n??:? int rt.minfo.moduleinfos_apply(scope
    int delegate(immutable(object.ModuleInfo*))) [0x430179]\n??:? int object.ModuleInfo.opApply(scope
    int delegate(object.ModuleInfo*)) [0x42b031]\n??:? runModuleUnitTests [0x42bf9d]\n??:?
    void rt.dmain2._d_run_main(int, char**, extern (C) int function(char[][])*).runAll()
    [0x42862c]\n??:? void rt.dmain2._d_run_main(int, char**, extern (C) int function(char[][])*).tryExec(scope
    void delegate()) [0x4285b3]\n??:? _d_run_main [0x42851e]\n??:? main [0x427f73]\n??:?
    __libc_start_main [0x76bf1554]\n1/1 unittests FAILED\n'''
  stdout: b''
- exit_code: 1
  program: "import std.typecons;\nimport std.math;\n/*\nReturn True if all numbers\
    \ in the list l are below threshold t.\n    >>> below_threshold([1L, 2L, 4L, 10L],\
    \ 100L)\n    true\n    >>> below_threshold([1L, 20L, 4L, 10L], 5L)\n    false\n\
    \    \n*/\nbool below_threshold(long[] l, long t) \n{\n    foreach(i; l)\n   \
    \ {\n        if(i > t)\n            return false;\n    }\n    return true;\n}\n\
    unittest\n{\n    alias candidate = below_threshold;\n\n    assert(candidate([1L,\
    \ 2L, 4L, 10L], 100L) == true);\n    assert(candidate([1L, 20L, 4L, 10L], 5L)\
    \ == false);\n    assert(candidate([1L, 20L, 4L, 10L], 21L) == true);\n    assert(candidate([1L,\
    \ 20L, 4L, 10L], 22L) == true);\n    assert(candidate([1L, 8L, 4L, 10L], 11L)\
    \ == true);\n    assert(candidate([1L, 8L, 4L, 10L], 10L) == false);\n}\nvoid\
    \ main(){}"
  status: Exception
  stderr: 'b''core.exception.AssertError@/tmp/tmp70o9mbir.d(29): unittest failure\n----------------\n??:?
    _d_unittestp [0x4281dd]\n??:? void tmp70o9mbir.__unittest_L20_C1() [0x427f4b]\n??:?
    void tmp70o9mbir.__modtest() [0x427f60]\n??:? int core.runtime.runModuleUnitTests().__foreachbody2(object.ModuleInfo*)
    [0x42c1c7]\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)).__lambda2(immutable(object.ModuleInfo*))
    [0x42b05a]\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))).__foreachbody2(ref
    rt.sections_elf_shared.DSO) [0x4301ed]\n??:? int rt.sections_elf_shared.DSO.opApply(scope
    int delegate(ref rt.sections_elf_shared.DSO)) [0x43069c]\n??:? int rt.minfo.moduleinfos_apply(scope
    int delegate(immutable(object.ModuleInfo*))) [0x430179]\n??:? int object.ModuleInfo.opApply(scope
    int delegate(object.ModuleInfo*)) [0x42b031]\n??:? runModuleUnitTests [0x42bf9d]\n??:?
    void rt.dmain2._d_run_main(int, char**, extern (C) int function(char[][])*).runAll()
    [0x42862c]\n??:? void rt.dmain2._d_run_main(int, char**, extern (C) int function(char[][])*).tryExec(scope
    void delegate()) [0x4285b3]\n??:? _d_run_main [0x42851e]\n??:? main [0x427f73]\n??:?
    __libc_start_main [0x4442b554]\n1/1 unittests FAILED\n'''
  stdout: b''
- exit_code: 1
  program: "import std.typecons;\nimport std.math;\n/*\nReturn True if all numbers\
    \ in the list l are below threshold t.\n    >>> below_threshold([1L, 2L, 4L, 10L],\
    \ 100L)\n    true\n    >>> below_threshold([1L, 20L, 4L, 10L], 5L)\n    false\n\
    \    \n*/\nbool below_threshold(long[] l, long t) \n{\n    foreach(x; l)\n   \
    \ {\n        if(x >= t)\n            return false;\n    }\n    return true;\n\
    }\n/*\nReturn True if all numbers in the list l are below threshold t.\n    >>>\
    \ below_threshold([1L, 2L, 4L, 10L], 100L)\n    true\n    >>> below_threshold([1L,\
    \ 20L, 4L, 10L], 5L)\n    false\n    \n*/\nunittest\n{\n    alias candidate =\
    \ below_threshold;\n\n    assert(candidate([1L, 2L, 4L, 10L], 100L) == true);\n\
    \    assert(candidate([1L, 20L, 4L, 10L], 5L) == false);\n    assert(candidate([1L,\
    \ 20L, 4L, 10L], 21L) == true);\n    assert(candidate([1L, 20L, 4L, 10L], 22L)\
    \ == true);\n    assert(candidate([1L, 8L, 4L, 10L], 11L) == true);\n    assert(candidate([1L,\
    \ 8L, 4L, 10L], 10L) == false);\n}\nvoid main(){}"
  status: SyntaxError
  stderr: 'b''Error: cannot find source code for runtime library file \''object.d\''\n       dmd
    might not be correctly installed. Run \''dmd -man\'' for installation instructions.\nimport
    path[0] = /tmp\nFailed: ["dmd", "-unittest", "-v", "-o-", "/tmp/tmpjkr4wows.d",
    "-I/tmp"]\n'''
  stdout: b''
  timestamp: 1659797732
- exit_code: 1
  program: "import std.typecons;\nimport std.math;\n/*\nReturn True if all numbers\
    \ in the list l are below threshold t.\n    >>> below_threshold([1L, 2L, 4L, 10L],\
    \ 100L)\n    true\n    >>> below_threshold([1L, 20L, 4L, 10L], 5L)\n    false\n\
    \    \n*/\nbool below_threshold(long[] l, long t) \n{\n    foreach(long i; l)\n\
    \    {\n        if(i > t)\n            return false;\n    }\n    return true;\n\
    }\nunittest\n{\n    alias candidate = below_threshold;\n\n    assert(candidate([1L,\
    \ 2L, 4L, 10L], 100L) == true);\n    assert(candidate([1L, 20L, 4L, 10L], 5L)\
    \ == false);\n    assert(candidate([1L, 20L, 4L, 10L], 21L) == true);\n    assert(candidate([1L,\
    \ 20L, 4L, 10L], 22L) == true);\n    assert(candidate([1L, 8L, 4L, 10L], 11L)\
    \ == true);\n    assert(candidate([1L, 8L, 4L, 10L], 10L) == false);\n}\nvoid\
    \ main(){}"
  status: Exception
  stderr: 'b''core.exception.AssertError@/tmp/tmpnp3ngt9z.d(29): unittest failure\n----------------\n??:?
    _d_unittestp [0x4281dd]\n??:? void tmpnp3ngt9z.__unittest_L20_C1() [0x427f4b]\n??:?
    void tmpnp3ngt9z.__modtest() [0x427f60]\n??:? int core.runtime.runModuleUnitTests().__foreachbody2(object.ModuleInfo*)
    [0x42c1c7]\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)).__lambda2(immutable(object.ModuleInfo*))
    [0x42b05a]\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))).__foreachbody2(ref
    rt.sections_elf_shared.DSO) [0x4301ed]\n??:? int rt.sections_elf_shared.DSO.opApply(scope
    int delegate(ref rt.sections_elf_shared.DSO)) [0x43069c]\n??:? int rt.minfo.moduleinfos_apply(scope
    int delegate(immutable(object.ModuleInfo*))) [0x430179]\n??:? int object.ModuleInfo.opApply(scope
    int delegate(object.ModuleInfo*)) [0x42b031]\n??:? runModuleUnitTests [0x42bf9d]\n??:?
    void rt.dmain2._d_run_main(int, char**, extern (C) int function(char[][])*).runAll()
    [0x42862c]\n??:? void rt.dmain2._d_run_main(int, char**, extern (C) int function(char[][])*).tryExec(scope
    void delegate()) [0x4285b3]\n??:? _d_run_main [0x42851e]\n??:? main [0x427f73]\n??:?
    __libc_start_main [0x76bf1554]\n1/1 unittests FAILED\n'''
  stdout: b''
- exit_code: 1
  program: "import std.typecons;\nimport std.math;\n/*\nReturn True if all numbers\
    \ in the list l are below threshold t.\n    >>> below_threshold([1L, 2L, 4L, 10L],\
    \ 100L)\n    true\n    >>> below_threshold([1L, 20L, 4L, 10L], 5L)\n    false\n\
    \    \n*/\nbool below_threshold(long[] l, long t) \n{\n    foreach(i; l)\n   \
    \ {\n        if(i >= t)\n            return false;\n    }\n    return true;\n\
    }\nunittest\n{\n    alias candidate = below_threshold;\n\n    assert(candidate([1L,\
    \ 2L, 4L, 10L], 100L) == true);\n    assert(candidate([1L, 20L, 4L, 10L], 5L)\
    \ == false);\n    assert(candidate([1L, 20L, 4L, 10L], 21L) == true);\n    assert(candidate([1L,\
    \ 20L, 4L, 10L], 22L) == true);\n    assert(candidate([1L, 8L, 4L, 10L], 11L)\
    \ == true);\n    assert(candidate([1L, 8L, 4L, 10L], 10L) == false);\n}\nvoid\
    \ main(){}"
  status: SyntaxError
  stderr: 'b''Error: cannot find source code for runtime library file \''object.d\''\n       dmd
    might not be correctly installed. Run \''dmd -man\'' for installation instructions.\nimport
    path[0] = /tmp\nFailed: ["dmd", "-unittest", "-v", "-o-", "/tmp/tmpiw1qgsmo.d",
    "-I/tmp"]\n'''
  stdout: b''
  timestamp: 1659797732
- exit_code: 1
  program: "import std.typecons;\nimport std.math;\n/*\nReturn True if all numbers\
    \ in the list l are below threshold t.\n    >>> below_threshold([1L, 2L, 4L, 10L],\
    \ 100L)\n    true\n    >>> below_threshold([1L, 20L, 4L, 10L], 5L)\n    false\n\
    \    \n*/\nbool below_threshold(long[] l, long t) \n{\n    foreach(i; l)\n   \
    \ {\n        if(i >= t)\n            return false;\n    }\n    return true;\n\
    }\nunittest\n{\n    alias candidate = below_threshold;\n\n    assert(candidate([1L,\
    \ 2L, 4L, 10L], 100L) == true);\n    assert(candidate([1L, 20L, 4L, 10L], 5L)\
    \ == false);\n    assert(candidate([1L, 20L, 4L, 10L], 21L) == true);\n    assert(candidate([1L,\
    \ 20L, 4L, 10L], 22L) == true);\n    assert(candidate([1L, 8L, 4L, 10L], 11L)\
    \ == true);\n    assert(candidate([1L, 8L, 4L, 10L], 10L) == false);\n}\nvoid\
    \ main(){}"
  status: SyntaxError
  stderr: 'b''Error: cannot find source code for runtime library file \''object.d\''\n       dmd
    might not be correctly installed. Run \''dmd -man\'' for installation instructions.\nimport
    path[0] = /tmp\nFailed: ["dmd", "-unittest", "-v", "-o-", "/tmp/tmpiw1qgsmo.d",
    "-I/tmp"]\n'''
  stdout: b''
  timestamp: 1659797732
- exit_code: 1
  program: "import std.typecons;\nimport std.math;\n/*\nReturn True if all numbers\
    \ in the list l are below threshold t.\n    >>> below_threshold([1L, 2L, 4L, 10L],\
    \ 100L)\n    true\n    >>> below_threshold([1L, 20L, 4L, 10L], 5L)\n    false\n\
    \    \n*/\nbool below_threshold(long[] l, long t) \n{\n    foreach(long i; l)\n\
    \    {\n        if(i > t)\n            return false;\n    }\n    return true;\n\
    }\nunittest\n{\n    alias candidate = below_threshold;\n\n    assert(candidate([1L,\
    \ 2L, 4L, 10L], 100L) == true);\n    assert(candidate([1L, 20L, 4L, 10L], 5L)\
    \ == false);\n    assert(candidate([1L, 20L, 4L, 10L], 21L) == true);\n    assert(candidate([1L,\
    \ 20L, 4L, 10L], 22L) == true);\n    assert(candidate([1L, 8L, 4L, 10L], 11L)\
    \ == true);\n    assert(candidate([1L, 8L, 4L, 10L], 10L) == false);\n}\nvoid\
    \ main(){}"
  status: Exception
  stderr: 'b''core.exception.AssertError@/tmp/tmpnp3ngt9z.d(29): unittest failure\n----------------\n??:?
    _d_unittestp [0x4281dd]\n??:? void tmpnp3ngt9z.__unittest_L20_C1() [0x427f4b]\n??:?
    void tmpnp3ngt9z.__modtest() [0x427f60]\n??:? int core.runtime.runModuleUnitTests().__foreachbody2(object.ModuleInfo*)
    [0x42c1c7]\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)).__lambda2(immutable(object.ModuleInfo*))
    [0x42b05a]\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))).__foreachbody2(ref
    rt.sections_elf_shared.DSO) [0x4301ed]\n??:? int rt.sections_elf_shared.DSO.opApply(scope
    int delegate(ref rt.sections_elf_shared.DSO)) [0x43069c]\n??:? int rt.minfo.moduleinfos_apply(scope
    int delegate(immutable(object.ModuleInfo*))) [0x430179]\n??:? int object.ModuleInfo.opApply(scope
    int delegate(object.ModuleInfo*)) [0x42b031]\n??:? runModuleUnitTests [0x42bf9d]\n??:?
    void rt.dmain2._d_run_main(int, char**, extern (C) int function(char[][])*).runAll()
    [0x42862c]\n??:? void rt.dmain2._d_run_main(int, char**, extern (C) int function(char[][])*).tryExec(scope
    void delegate()) [0x4285b3]\n??:? _d_run_main [0x42851e]\n??:? main [0x427f73]\n??:?
    __libc_start_main [0x76bf1554]\n1/1 unittests FAILED\n'''
  stdout: b''
- exit_code: 1
  program: "import std.typecons;\nimport std.math;\n/*\nReturn True if all numbers\
    \ in the list l are below threshold t.\n    >>> below_threshold([1L, 2L, 4L, 10L],\
    \ 100L)\n    true\n    >>> below_threshold([1L, 20L, 4L, 10L], 5L)\n    false\n\
    \    \n*/\nbool below_threshold(long[] l, long t) \n{\n    foreach(i; l)\n   \
    \ {\n        if(i >= t)\n            return false;\n    }\n    return true;\n\
    }\nunittest\n{\n    alias candidate = below_threshold;\n\n    assert(candidate([1L,\
    \ 2L, 4L, 10L], 100L) == true);\n    assert(candidate([1L, 20L, 4L, 10L], 5L)\
    \ == false);\n    assert(candidate([1L, 20L, 4L, 10L], 21L) == true);\n    assert(candidate([1L,\
    \ 20L, 4L, 10L], 22L) == true);\n    assert(candidate([1L, 8L, 4L, 10L], 11L)\
    \ == true);\n    assert(candidate([1L, 8L, 4L, 10L], 10L) == false);\n}\nvoid\
    \ main(){}"
  status: SyntaxError
  stderr: 'b''Error: cannot find source code for runtime library file \''object.d\''\n       dmd
    might not be correctly installed. Run \''dmd -man\'' for installation instructions.\nimport
    path[0] = /tmp\nFailed: ["dmd", "-unittest", "-v", "-o-", "/tmp/tmpiw1qgsmo.d",
    "-I/tmp"]\n'''
  stdout: b''
  timestamp: 1659797732
- exit_code: 1
  program: "import std.typecons;\nimport std.math;\n/*\nReturn True if all numbers\
    \ in the list l are below threshold t.\n    >>> below_threshold([1L, 2L, 4L, 10L],\
    \ 100L)\n    true\n    >>> below_threshold([1L, 20L, 4L, 10L], 5L)\n    false\n\
    \    \n*/\nbool below_threshold(long[] l, long t) \n{\n    foreach(i; l)\n   \
    \ {\n        if(i > t)\n            return false;\n    }\n    return true;\n}\n\
    unittest\n{\n    alias candidate = below_threshold;\n\n    assert(candidate([1L,\
    \ 2L, 4L, 10L], 100L) == true);\n    assert(candidate([1L, 20L, 4L, 10L], 5L)\
    \ == false);\n    assert(candidate([1L, 20L, 4L, 10L], 21L) == true);\n    assert(candidate([1L,\
    \ 20L, 4L, 10L], 22L) == true);\n    assert(candidate([1L, 8L, 4L, 10L], 11L)\
    \ == true);\n    assert(candidate([1L, 8L, 4L, 10L], 10L) == false);\n}\nvoid\
    \ main(){}"
  status: Exception
  stderr: 'b''core.exception.AssertError@/tmp/tmp70o9mbir.d(29): unittest failure\n----------------\n??:?
    _d_unittestp [0x4281dd]\n??:? void tmp70o9mbir.__unittest_L20_C1() [0x427f4b]\n??:?
    void tmp70o9mbir.__modtest() [0x427f60]\n??:? int core.runtime.runModuleUnitTests().__foreachbody2(object.ModuleInfo*)
    [0x42c1c7]\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)).__lambda2(immutable(object.ModuleInfo*))
    [0x42b05a]\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))).__foreachbody2(ref
    rt.sections_elf_shared.DSO) [0x4301ed]\n??:? int rt.sections_elf_shared.DSO.opApply(scope
    int delegate(ref rt.sections_elf_shared.DSO)) [0x43069c]\n??:? int rt.minfo.moduleinfos_apply(scope
    int delegate(immutable(object.ModuleInfo*))) [0x430179]\n??:? int object.ModuleInfo.opApply(scope
    int delegate(object.ModuleInfo*)) [0x42b031]\n??:? runModuleUnitTests [0x42bf9d]\n??:?
    void rt.dmain2._d_run_main(int, char**, extern (C) int function(char[][])*).runAll()
    [0x42862c]\n??:? void rt.dmain2._d_run_main(int, char**, extern (C) int function(char[][])*).tryExec(scope
    void delegate()) [0x4285b3]\n??:? _d_run_main [0x42851e]\n??:? main [0x427f73]\n??:?
    __libc_start_main [0x4442b554]\n1/1 unittests FAILED\n'''
  stdout: b''
- exit_code: 1
  program: "import std.typecons;\nimport std.math;\n/*\nReturn True if all numbers\
    \ in the list l are below threshold t.\n    >>> below_threshold([1L, 2L, 4L, 10L],\
    \ 100L)\n    true\n    >>> below_threshold([1L, 20L, 4L, 10L], 5L)\n    false\n\
    \    \n*/\nbool below_threshold(long[] l, long t) \n{\n    foreach(long i; l)\n\
    \    {\n        if(i > t)\n            return false;\n    }\n    return true;\n\
    }\nunittest\n{\n    alias candidate = below_threshold;\n\n    assert(candidate([1L,\
    \ 2L, 4L, 10L], 100L) == true);\n    assert(candidate([1L, 20L, 4L, 10L], 5L)\
    \ == false);\n    assert(candidate([1L, 20L, 4L, 10L], 21L) == true);\n    assert(candidate([1L,\
    \ 20L, 4L, 10L], 22L) == true);\n    assert(candidate([1L, 8L, 4L, 10L], 11L)\
    \ == true);\n    assert(candidate([1L, 8L, 4L, 10L], 10L) == false);\n}\nvoid\
    \ main(){}"
  status: Exception
  stderr: 'b''core.exception.AssertError@/tmp/tmpnp3ngt9z.d(29): unittest failure\n----------------\n??:?
    _d_unittestp [0x4281dd]\n??:? void tmpnp3ngt9z.__unittest_L20_C1() [0x427f4b]\n??:?
    void tmpnp3ngt9z.__modtest() [0x427f60]\n??:? int core.runtime.runModuleUnitTests().__foreachbody2(object.ModuleInfo*)
    [0x42c1c7]\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)).__lambda2(immutable(object.ModuleInfo*))
    [0x42b05a]\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))).__foreachbody2(ref
    rt.sections_elf_shared.DSO) [0x4301ed]\n??:? int rt.sections_elf_shared.DSO.opApply(scope
    int delegate(ref rt.sections_elf_shared.DSO)) [0x43069c]\n??:? int rt.minfo.moduleinfos_apply(scope
    int delegate(immutable(object.ModuleInfo*))) [0x430179]\n??:? int object.ModuleInfo.opApply(scope
    int delegate(object.ModuleInfo*)) [0x42b031]\n??:? runModuleUnitTests [0x42bf9d]\n??:?
    void rt.dmain2._d_run_main(int, char**, extern (C) int function(char[][])*).runAll()
    [0x42862c]\n??:? void rt.dmain2._d_run_main(int, char**, extern (C) int function(char[][])*).tryExec(scope
    void delegate()) [0x4285b3]\n??:? _d_run_main [0x42851e]\n??:? main [0x427f73]\n??:?
    __libc_start_main [0x76bf1554]\n1/1 unittests FAILED\n'''
  stdout: b''
- exit_code: 1
  program: "import std.typecons;\nimport std.math;\n/*\nReturn True if all numbers\
    \ in the list l are below threshold t.\n    >>> below_threshold([1L, 2L, 4L, 10L],\
    \ 100L)\n    true\n    >>> below_threshold([1L, 20L, 4L, 10L], 5L)\n    false\n\
    \    \n*/\nbool below_threshold(long[] l, long t) \n{\n    foreach(i; l)\n   \
    \ {\n        if(i > t)\n            return false;\n    }\n    return true;\n}\n\
    unittest\n{\n    alias candidate = below_threshold;\n\n    assert(candidate([1L,\
    \ 2L, 4L, 10L], 100L) == true);\n    assert(candidate([1L, 20L, 4L, 10L], 5L)\
    \ == false);\n    assert(candidate([1L, 20L, 4L, 10L], 21L) == true);\n    assert(candidate([1L,\
    \ 20L, 4L, 10L], 22L) == true);\n    assert(candidate([1L, 8L, 4L, 10L], 11L)\
    \ == true);\n    assert(candidate([1L, 8L, 4L, 10L], 10L) == false);\n}\nvoid\
    \ main(){}"
  status: Exception
  stderr: 'b''core.exception.AssertError@/tmp/tmp70o9mbir.d(29): unittest failure\n----------------\n??:?
    _d_unittestp [0x4281dd]\n??:? void tmp70o9mbir.__unittest_L20_C1() [0x427f4b]\n??:?
    void tmp70o9mbir.__modtest() [0x427f60]\n??:? int core.runtime.runModuleUnitTests().__foreachbody2(object.ModuleInfo*)
    [0x42c1c7]\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)).__lambda2(immutable(object.ModuleInfo*))
    [0x42b05a]\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))).__foreachbody2(ref
    rt.sections_elf_shared.DSO) [0x4301ed]\n??:? int rt.sections_elf_shared.DSO.opApply(scope
    int delegate(ref rt.sections_elf_shared.DSO)) [0x43069c]\n??:? int rt.minfo.moduleinfos_apply(scope
    int delegate(immutable(object.ModuleInfo*))) [0x430179]\n??:? int object.ModuleInfo.opApply(scope
    int delegate(object.ModuleInfo*)) [0x42b031]\n??:? runModuleUnitTests [0x42bf9d]\n??:?
    void rt.dmain2._d_run_main(int, char**, extern (C) int function(char[][])*).runAll()
    [0x42862c]\n??:? void rt.dmain2._d_run_main(int, char**, extern (C) int function(char[][])*).tryExec(scope
    void delegate()) [0x4285b3]\n??:? _d_run_main [0x42851e]\n??:? main [0x427f73]\n??:?
    __libc_start_main [0x4442b554]\n1/1 unittests FAILED\n'''
  stdout: b''
- exit_code: 1
  program: "import std.typecons;\nimport std.math;\n/*\nReturn True if all numbers\
    \ in the list l are below threshold t.\n    >>> below_threshold([1L, 2L, 4L, 10L],\
    \ 100L)\n    true\n    >>> below_threshold([1L, 20L, 4L, 10L], 5L)\n    false\n\
    \    \n*/\nbool below_threshold(long[] l, long t) \n{\n    foreach(i; l)\n   \
    \ {\n        if(i > t)\n            return false;\n    }\n    return true;\n}\n\
    unittest\n{\n    alias candidate = below_threshold;\n\n    assert(candidate([1L,\
    \ 2L, 4L, 10L], 100L) == true);\n    assert(candidate([1L, 20L, 4L, 10L], 5L)\
    \ == false);\n    assert(candidate([1L, 20L, 4L, 10L], 21L) == true);\n    assert(candidate([1L,\
    \ 20L, 4L, 10L], 22L) == true);\n    assert(candidate([1L, 8L, 4L, 10L], 11L)\
    \ == true);\n    assert(candidate([1L, 8L, 4L, 10L], 10L) == false);\n}\nvoid\
    \ main(){}"
  status: Exception
  stderr: 'b''core.exception.AssertError@/tmp/tmp70o9mbir.d(29): unittest failure\n----------------\n??:?
    _d_unittestp [0x4281dd]\n??:? void tmp70o9mbir.__unittest_L20_C1() [0x427f4b]\n??:?
    void tmp70o9mbir.__modtest() [0x427f60]\n??:? int core.runtime.runModuleUnitTests().__foreachbody2(object.ModuleInfo*)
    [0x42c1c7]\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)).__lambda2(immutable(object.ModuleInfo*))
    [0x42b05a]\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))).__foreachbody2(ref
    rt.sections_elf_shared.DSO) [0x4301ed]\n??:? int rt.sections_elf_shared.DSO.opApply(scope
    int delegate(ref rt.sections_elf_shared.DSO)) [0x43069c]\n??:? int rt.minfo.moduleinfos_apply(scope
    int delegate(immutable(object.ModuleInfo*))) [0x430179]\n??:? int object.ModuleInfo.opApply(scope
    int delegate(object.ModuleInfo*)) [0x42b031]\n??:? runModuleUnitTests [0x42bf9d]\n??:?
    void rt.dmain2._d_run_main(int, char**, extern (C) int function(char[][])*).runAll()
    [0x42862c]\n??:? void rt.dmain2._d_run_main(int, char**, extern (C) int function(char[][])*).tryExec(scope
    void delegate()) [0x4285b3]\n??:? _d_run_main [0x42851e]\n??:? main [0x427f73]\n??:?
    __libc_start_main [0x4442b554]\n1/1 unittests FAILED\n'''
  stdout: b''
- exit_code: 1
  program: "import std.typecons;\nimport std.math;\n/*\nReturn True if all numbers\
    \ in the list l are below threshold t.\n    >>> below_threshold([1L, 2L, 4L, 10L],\
    \ 100L)\n    true\n    >>> below_threshold([1L, 20L, 4L, 10L], 5L)\n    false\n\
    \    \n*/\nbool below_threshold(long[] l, long t) \n{\n    foreach(long i; l)\n\
    \    {\n        if(i > t)\n            return false;\n    }\n    return true;\n\
    }\nunittest\n{\n    alias candidate = below_threshold;\n\n    assert(candidate([1L,\
    \ 2L, 4L, 10L], 100L) == true);\n    assert(candidate([1L, 20L, 4L, 10L], 5L)\
    \ == false);\n    assert(candidate([1L, 20L, 4L, 10L], 21L) == true);\n    assert(candidate([1L,\
    \ 20L, 4L, 10L], 22L) == true);\n    assert(candidate([1L, 8L, 4L, 10L], 11L)\
    \ == true);\n    assert(candidate([1L, 8L, 4L, 10L], 10L) == false);\n}\nvoid\
    \ main(){}"
  status: Exception
  stderr: 'b''core.exception.AssertError@/tmp/tmpnp3ngt9z.d(29): unittest failure\n----------------\n??:?
    _d_unittestp [0x4281dd]\n??:? void tmpnp3ngt9z.__unittest_L20_C1() [0x427f4b]\n??:?
    void tmpnp3ngt9z.__modtest() [0x427f60]\n??:? int core.runtime.runModuleUnitTests().__foreachbody2(object.ModuleInfo*)
    [0x42c1c7]\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)).__lambda2(immutable(object.ModuleInfo*))
    [0x42b05a]\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))).__foreachbody2(ref
    rt.sections_elf_shared.DSO) [0x4301ed]\n??:? int rt.sections_elf_shared.DSO.opApply(scope
    int delegate(ref rt.sections_elf_shared.DSO)) [0x43069c]\n??:? int rt.minfo.moduleinfos_apply(scope
    int delegate(immutable(object.ModuleInfo*))) [0x430179]\n??:? int object.ModuleInfo.opApply(scope
    int delegate(object.ModuleInfo*)) [0x42b031]\n??:? runModuleUnitTests [0x42bf9d]\n??:?
    void rt.dmain2._d_run_main(int, char**, extern (C) int function(char[][])*).runAll()
    [0x42862c]\n??:? void rt.dmain2._d_run_main(int, char**, extern (C) int function(char[][])*).tryExec(scope
    void delegate()) [0x4285b3]\n??:? _d_run_main [0x42851e]\n??:? main [0x427f73]\n??:?
    __libc_start_main [0x76bf1554]\n1/1 unittests FAILED\n'''
  stdout: b''
- exit_code: 1
  program: "import std.typecons;\nimport std.math;\n/*\nReturn True if all numbers\
    \ in the list l are below threshold t.\n    >>> below_threshold([1L, 2L, 4L, 10L],\
    \ 100L)\n    true\n    >>> below_threshold([1L, 20L, 4L, 10L], 5L)\n    false\n\
    \    \n*/\nbool below_threshold(long[] l, long t) \n{\n    foreach(e; l)\n   \
    \ {\n        if(e > t)\n            return false;\n    }\n    return true;\n}\n\
    unittest\n{\n    alias candidate = below_threshold;\n\n    assert(candidate([1L,\
    \ 2L, 4L, 10L], 100L) == true);\n    assert(candidate([1L, 20L, 4L, 10L], 5L)\
    \ == false);\n    assert(candidate([1L, 20L, 4L, 10L], 21L) == true);\n    assert(candidate([1L,\
    \ 20L, 4L, 10L], 22L) == true);\n    assert(candidate([1L, 8L, 4L, 10L], 11L)\
    \ == true);\n    assert(candidate([1L, 8L, 4L, 10L], 10L) == false);\n}\nvoid\
    \ main(){}"
  status: SyntaxError
  stderr: 'b''Error: cannot find source code for runtime library file \''object.d\''\n       dmd
    might not be correctly installed. Run \''dmd -man\'' for installation instructions.\nimport
    path[0] = /tmp\nFailed: ["dmd", "-unittest", "-v", "-o-", "/tmp/tmp315otfpq.d",
    "-I/tmp"]\n'''
  stdout: b''
  timestamp: 1659797732
- exit_code: 1
  program: "import std.typecons;\nimport std.math;\n/*\nReturn True if all numbers\
    \ in the list l are below threshold t.\n    >>> below_threshold([1L, 2L, 4L, 10L],\
    \ 100L)\n    true\n    >>> below_threshold([1L, 20L, 4L, 10L], 5L)\n    false\n\
    \    \n*/\nbool below_threshold(long[] l, long t) \n{\n    foreach(i; l)\n   \
    \ {\n        if(i > t)\n            return false;\n    }\n    return true;\n}\n\
    unittest\n{\n    alias candidate = below_threshold;\n\n    assert(candidate([1L,\
    \ 2L, 4L, 10L], 100L) == true);\n    assert(candidate([1L, 20L, 4L, 10L], 5L)\
    \ == false);\n    assert(candidate([1L, 20L, 4L, 10L], 21L) == true);\n    assert(candidate([1L,\
    \ 20L, 4L, 10L], 22L) == true);\n    assert(candidate([1L, 8L, 4L, 10L], 11L)\
    \ == true);\n    assert(candidate([1L, 8L, 4L, 10L], 10L) == false);\n}\nvoid\
    \ main(){}"
  status: Exception
  stderr: 'b''core.exception.AssertError@/tmp/tmp70o9mbir.d(29): unittest failure\n----------------\n??:?
    _d_unittestp [0x4281dd]\n??:? void tmp70o9mbir.__unittest_L20_C1() [0x427f4b]\n??:?
    void tmp70o9mbir.__modtest() [0x427f60]\n??:? int core.runtime.runModuleUnitTests().__foreachbody2(object.ModuleInfo*)
    [0x42c1c7]\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)).__lambda2(immutable(object.ModuleInfo*))
    [0x42b05a]\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))).__foreachbody2(ref
    rt.sections_elf_shared.DSO) [0x4301ed]\n??:? int rt.sections_elf_shared.DSO.opApply(scope
    int delegate(ref rt.sections_elf_shared.DSO)) [0x43069c]\n??:? int rt.minfo.moduleinfos_apply(scope
    int delegate(immutable(object.ModuleInfo*))) [0x430179]\n??:? int object.ModuleInfo.opApply(scope
    int delegate(object.ModuleInfo*)) [0x42b031]\n??:? runModuleUnitTests [0x42bf9d]\n??:?
    void rt.dmain2._d_run_main(int, char**, extern (C) int function(char[][])*).runAll()
    [0x42862c]\n??:? void rt.dmain2._d_run_main(int, char**, extern (C) int function(char[][])*).tryExec(scope
    void delegate()) [0x4285b3]\n??:? _d_run_main [0x42851e]\n??:? main [0x427f73]\n??:?
    __libc_start_main [0x4442b554]\n1/1 unittests FAILED\n'''
  stdout: b''
- exit_code: 1
  program: "import std.typecons;\nimport std.math;\n/*\nReturn True if all numbers\
    \ in the list l are below threshold t.\n    >>> below_threshold([1L, 2L, 4L, 10L],\
    \ 100L)\n    true\n    >>> below_threshold([1L, 20L, 4L, 10L], 5L)\n    false\n\
    \    \n*/\nbool below_threshold(long[] l, long t) \n{\n    foreach(long i; l)\n\
    \    {\n        if(i > t)\n            return false;\n    }\n    return true;\n\
    }\nunittest\n{\n    alias candidate = below_threshold;\n\n    assert(candidate([1L,\
    \ 2L, 4L, 10L], 100L) == true);\n    assert(candidate([1L, 20L, 4L, 10L], 5L)\
    \ == false);\n    assert(candidate([1L, 20L, 4L, 10L], 21L) == true);\n    assert(candidate([1L,\
    \ 20L, 4L, 10L], 22L) == true);\n    assert(candidate([1L, 8L, 4L, 10L], 11L)\
    \ == true);\n    assert(candidate([1L, 8L, 4L, 10L], 10L) == false);\n}\nvoid\
    \ main(){}"
  status: Exception
  stderr: 'b''core.exception.AssertError@/tmp/tmpnp3ngt9z.d(29): unittest failure\n----------------\n??:?
    _d_unittestp [0x4281dd]\n??:? void tmpnp3ngt9z.__unittest_L20_C1() [0x427f4b]\n??:?
    void tmpnp3ngt9z.__modtest() [0x427f60]\n??:? int core.runtime.runModuleUnitTests().__foreachbody2(object.ModuleInfo*)
    [0x42c1c7]\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)).__lambda2(immutable(object.ModuleInfo*))
    [0x42b05a]\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))).__foreachbody2(ref
    rt.sections_elf_shared.DSO) [0x4301ed]\n??:? int rt.sections_elf_shared.DSO.opApply(scope
    int delegate(ref rt.sections_elf_shared.DSO)) [0x43069c]\n??:? int rt.minfo.moduleinfos_apply(scope
    int delegate(immutable(object.ModuleInfo*))) [0x430179]\n??:? int object.ModuleInfo.opApply(scope
    int delegate(object.ModuleInfo*)) [0x42b031]\n??:? runModuleUnitTests [0x42bf9d]\n??:?
    void rt.dmain2._d_run_main(int, char**, extern (C) int function(char[][])*).runAll()
    [0x42862c]\n??:? void rt.dmain2._d_run_main(int, char**, extern (C) int function(char[][])*).tryExec(scope
    void delegate()) [0x4285b3]\n??:? _d_run_main [0x42851e]\n??:? main [0x427f73]\n??:?
    __libc_start_main [0x76bf1554]\n1/1 unittests FAILED\n'''
  stdout: b''
- exit_code: 1
  program: "import std.typecons;\nimport std.math;\n/*\nReturn True if all numbers\
    \ in the list l are below threshold t.\n    >>> below_threshold([1L, 2L, 4L, 10L],\
    \ 100L)\n    true\n    >>> below_threshold([1L, 20L, 4L, 10L], 5L)\n    false\n\
    \    \n*/\nbool below_threshold(long[] l, long t) \n{\n    foreach(i; l)\n   \
    \ {\n        if(i > t)\n            return false;\n    }\n    return true;\n}\n\
    unittest\n{\n    alias candidate = below_threshold;\n\n    assert(candidate([1L,\
    \ 2L, 4L, 10L], 100L) == true);\n    assert(candidate([1L, 20L, 4L, 10L], 5L)\
    \ == false);\n    assert(candidate([1L, 20L, 4L, 10L], 21L) == true);\n    assert(candidate([1L,\
    \ 20L, 4L, 10L], 22L) == true);\n    assert(candidate([1L, 8L, 4L, 10L], 11L)\
    \ == true);\n    assert(candidate([1L, 8L, 4L, 10L], 10L) == false);\n}\nvoid\
    \ main(){}"
  status: Exception
  stderr: 'b''core.exception.AssertError@/tmp/tmp70o9mbir.d(29): unittest failure\n----------------\n??:?
    _d_unittestp [0x4281dd]\n??:? void tmp70o9mbir.__unittest_L20_C1() [0x427f4b]\n??:?
    void tmp70o9mbir.__modtest() [0x427f60]\n??:? int core.runtime.runModuleUnitTests().__foreachbody2(object.ModuleInfo*)
    [0x42c1c7]\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)).__lambda2(immutable(object.ModuleInfo*))
    [0x42b05a]\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))).__foreachbody2(ref
    rt.sections_elf_shared.DSO) [0x4301ed]\n??:? int rt.sections_elf_shared.DSO.opApply(scope
    int delegate(ref rt.sections_elf_shared.DSO)) [0x43069c]\n??:? int rt.minfo.moduleinfos_apply(scope
    int delegate(immutable(object.ModuleInfo*))) [0x430179]\n??:? int object.ModuleInfo.opApply(scope
    int delegate(object.ModuleInfo*)) [0x42b031]\n??:? runModuleUnitTests [0x42bf9d]\n??:?
    void rt.dmain2._d_run_main(int, char**, extern (C) int function(char[][])*).runAll()
    [0x42862c]\n??:? void rt.dmain2._d_run_main(int, char**, extern (C) int function(char[][])*).tryExec(scope
    void delegate()) [0x4285b3]\n??:? _d_run_main [0x42851e]\n??:? main [0x427f73]\n??:?
    __libc_start_main [0x4442b554]\n1/1 unittests FAILED\n'''
  stdout: b''
- exit_code: 1
  program: "import std.typecons;\nimport std.math;\n/*\nReturn True if all numbers\
    \ in the list l are below threshold t.\n    >>> below_threshold([1L, 2L, 4L, 10L],\
    \ 100L)\n    true\n    >>> below_threshold([1L, 20L, 4L, 10L], 5L)\n    false\n\
    \    \n*/\nbool below_threshold(long[] l, long t) \n{\n    foreach(i; l)\n   \
    \ {\n        if(i > t)\n            return false;\n    }\n    return true;\n}\n\
    unittest\n{\n    alias candidate = below_threshold;\n\n    assert(candidate([1L,\
    \ 2L, 4L, 10L], 100L) == true);\n    assert(candidate([1L, 20L, 4L, 10L], 5L)\
    \ == false);\n    assert(candidate([1L, 20L, 4L, 10L], 21L) == true);\n    assert(candidate([1L,\
    \ 20L, 4L, 10L], 22L) == true);\n    assert(candidate([1L, 8L, 4L, 10L], 11L)\
    \ == true);\n    assert(candidate([1L, 8L, 4L, 10L], 10L) == false);\n}\nvoid\
    \ main(){}"
  status: Exception
  stderr: 'b''core.exception.AssertError@/tmp/tmp70o9mbir.d(29): unittest failure\n----------------\n??:?
    _d_unittestp [0x4281dd]\n??:? void tmp70o9mbir.__unittest_L20_C1() [0x427f4b]\n??:?
    void tmp70o9mbir.__modtest() [0x427f60]\n??:? int core.runtime.runModuleUnitTests().__foreachbody2(object.ModuleInfo*)
    [0x42c1c7]\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)).__lambda2(immutable(object.ModuleInfo*))
    [0x42b05a]\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))).__foreachbody2(ref
    rt.sections_elf_shared.DSO) [0x4301ed]\n??:? int rt.sections_elf_shared.DSO.opApply(scope
    int delegate(ref rt.sections_elf_shared.DSO)) [0x43069c]\n??:? int rt.minfo.moduleinfos_apply(scope
    int delegate(immutable(object.ModuleInfo*))) [0x430179]\n??:? int object.ModuleInfo.opApply(scope
    int delegate(object.ModuleInfo*)) [0x42b031]\n??:? runModuleUnitTests [0x42bf9d]\n??:?
    void rt.dmain2._d_run_main(int, char**, extern (C) int function(char[][])*).runAll()
    [0x42862c]\n??:? void rt.dmain2._d_run_main(int, char**, extern (C) int function(char[][])*).tryExec(scope
    void delegate()) [0x4285b3]\n??:? _d_run_main [0x42851e]\n??:? main [0x427f73]\n??:?
    __libc_start_main [0x4442b554]\n1/1 unittests FAILED\n'''
  stdout: b''
- exit_code: 0
  program: "import std.typecons;\nimport std.math;\n/*\nReturn True if all numbers\
    \ in the list l are below threshold t.\n    >>> below_threshold([1L, 2L, 4L, 10L],\
    \ 100L)\n    true\n    >>> below_threshold([1L, 20L, 4L, 10L], 5L)\n    false\n\
    \    \n*/\nbool below_threshold(long[] l, long t) \n{\n    foreach(long i; l)\n\
    \    {\n        if(i >= t)\n            return false;\n    }\n    return true;\n\
    }\nunittest\n{\n    alias candidate = below_threshold;\n\n    assert(candidate([1L,\
    \ 2L, 4L, 10L], 100L) == true);\n    assert(candidate([1L, 20L, 4L, 10L], 5L)\
    \ == false);\n    assert(candidate([1L, 20L, 4L, 10L], 21L) == true);\n    assert(candidate([1L,\
    \ 20L, 4L, 10L], 22L) == true);\n    assert(candidate([1L, 8L, 4L, 10L], 11L)\
    \ == true);\n    assert(candidate([1L, 8L, 4L, 10L], 10L) == false);\n}\nvoid\
    \ main(){}"
  status: OK
  stderr: b''
  stdout: b''
- exit_code: 1
  program: "import std.typecons;\nimport std.math;\n/*\nReturn True if all numbers\
    \ in the list l are below threshold t.\n    >>> below_threshold([1L, 2L, 4L, 10L],\
    \ 100L)\n    true\n    >>> below_threshold([1L, 20L, 4L, 10L], 5L)\n    false\n\
    \    \n*/\nbool below_threshold(long[] l, long t) \n{\n    foreach(i; l)\n   \
    \ {\n        if(i > t)\n            return false;\n    }\n    return true;\n}\n\
    unittest\n{\n    alias candidate = below_threshold;\n\n    assert(candidate([1L,\
    \ 2L, 4L, 10L], 100L) == true);\n    assert(candidate([1L, 20L, 4L, 10L], 5L)\
    \ == false);\n    assert(candidate([1L, 20L, 4L, 10L], 21L) == true);\n    assert(candidate([1L,\
    \ 20L, 4L, 10L], 22L) == true);\n    assert(candidate([1L, 8L, 4L, 10L], 11L)\
    \ == true);\n    assert(candidate([1L, 8L, 4L, 10L], 10L) == false);\n}\nvoid\
    \ main(){}"
  status: Exception
  stderr: 'b''core.exception.AssertError@/tmp/tmp70o9mbir.d(29): unittest failure\n----------------\n??:?
    _d_unittestp [0x4281dd]\n??:? void tmp70o9mbir.__unittest_L20_C1() [0x427f4b]\n??:?
    void tmp70o9mbir.__modtest() [0x427f60]\n??:? int core.runtime.runModuleUnitTests().__foreachbody2(object.ModuleInfo*)
    [0x42c1c7]\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)).__lambda2(immutable(object.ModuleInfo*))
    [0x42b05a]\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))).__foreachbody2(ref
    rt.sections_elf_shared.DSO) [0x4301ed]\n??:? int rt.sections_elf_shared.DSO.opApply(scope
    int delegate(ref rt.sections_elf_shared.DSO)) [0x43069c]\n??:? int rt.minfo.moduleinfos_apply(scope
    int delegate(immutable(object.ModuleInfo*))) [0x430179]\n??:? int object.ModuleInfo.opApply(scope
    int delegate(object.ModuleInfo*)) [0x42b031]\n??:? runModuleUnitTests [0x42bf9d]\n??:?
    void rt.dmain2._d_run_main(int, char**, extern (C) int function(char[][])*).runAll()
    [0x42862c]\n??:? void rt.dmain2._d_run_main(int, char**, extern (C) int function(char[][])*).tryExec(scope
    void delegate()) [0x4285b3]\n??:? _d_run_main [0x42851e]\n??:? main [0x427f73]\n??:?
    __libc_start_main [0x4442b554]\n1/1 unittests FAILED\n'''
  stdout: b''
- exit_code: 1
  program: "import std.typecons;\nimport std.math;\n/*\nReturn True if all numbers\
    \ in the list l are below threshold t.\n    >>> below_threshold([1L, 2L, 4L, 10L],\
    \ 100L)\n    true\n    >>> below_threshold([1L, 20L, 4L, 10L], 5L)\n    false\n\
    \    \n*/\nbool below_threshold(long[] l, long t) \n{\n    foreach(long x; l)\n\
    \    {\n        if(x>t)\n            return false;\n    }\n    return true;\n\
    }\n/*\nReturn True if all numbers in the list l are below threshold t.\n    >>>\
    \ below_threshold([1L, 2L, 4L, 10L], 100L)\n    true\n    >>> below_threshold([1L,\
    \ 20L, 4L, 10L], 5L)\n    false\n    \n*/\nunittest\n{\n    alias candidate =\
    \ below_threshold;\n\n    assert(candidate([1L, 2L, 4L, 10L], 100L) == true);\n\
    \    assert(candidate([1L, 20L, 4L, 10L], 5L) == false);\n    assert(candidate([1L,\
    \ 20L, 4L, 10L], 21L) == true);\n    assert(candidate([1L, 20L, 4L, 10L], 22L)\
    \ == true);\n    assert(candidate([1L, 8L, 4L, 10L], 11L) == true);\n    assert(candidate([1L,\
    \ 8L, 4L, 10L], 10L) == false);\n}\nvoid main(){}"
  status: SyntaxError
  stderr: 'b''Error: cannot find source code for runtime library file \''object.d\''\n       dmd
    might not be correctly installed. Run \''dmd -man\'' for installation instructions.\nimport
    path[0] = /tmp\nFailed: ["dmd", "-unittest", "-v", "-o-", "/tmp/tmp2smcj1o3.d",
    "-I/tmp"]\n'''
  stdout: b''
  timestamp: 1659797732
- exit_code: 1
  program: "import std.typecons;\nimport std.math;\n/*\nReturn True if all numbers\
    \ in the list l are below threshold t.\n    >>> below_threshold([1L, 2L, 4L, 10L],\
    \ 100L)\n    true\n    >>> below_threshold([1L, 20L, 4L, 10L], 5L)\n    false\n\
    \    \n*/\nbool below_threshold(long[] l, long t) \n{\n    foreach(i; l)\n   \
    \ {\n        if(i > t)\n            return false;\n    }\n    return true;\n}\n\
    unittest\n{\n    alias candidate = below_threshold;\n\n    assert(candidate([1L,\
    \ 2L, 4L, 10L], 100L) == true);\n    assert(candidate([1L, 20L, 4L, 10L], 5L)\
    \ == false);\n    assert(candidate([1L, 20L, 4L, 10L], 21L) == true);\n    assert(candidate([1L,\
    \ 20L, 4L, 10L], 22L) == true);\n    assert(candidate([1L, 8L, 4L, 10L], 11L)\
    \ == true);\n    assert(candidate([1L, 8L, 4L, 10L], 10L) == false);\n}\nvoid\
    \ main(){}"
  status: Exception
  stderr: 'b''core.exception.AssertError@/tmp/tmp70o9mbir.d(29): unittest failure\n----------------\n??:?
    _d_unittestp [0x4281dd]\n??:? void tmp70o9mbir.__unittest_L20_C1() [0x427f4b]\n??:?
    void tmp70o9mbir.__modtest() [0x427f60]\n??:? int core.runtime.runModuleUnitTests().__foreachbody2(object.ModuleInfo*)
    [0x42c1c7]\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)).__lambda2(immutable(object.ModuleInfo*))
    [0x42b05a]\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))).__foreachbody2(ref
    rt.sections_elf_shared.DSO) [0x4301ed]\n??:? int rt.sections_elf_shared.DSO.opApply(scope
    int delegate(ref rt.sections_elf_shared.DSO)) [0x43069c]\n??:? int rt.minfo.moduleinfos_apply(scope
    int delegate(immutable(object.ModuleInfo*))) [0x430179]\n??:? int object.ModuleInfo.opApply(scope
    int delegate(object.ModuleInfo*)) [0x42b031]\n??:? runModuleUnitTests [0x42bf9d]\n??:?
    void rt.dmain2._d_run_main(int, char**, extern (C) int function(char[][])*).runAll()
    [0x42862c]\n??:? void rt.dmain2._d_run_main(int, char**, extern (C) int function(char[][])*).tryExec(scope
    void delegate()) [0x4285b3]\n??:? _d_run_main [0x42851e]\n??:? main [0x427f73]\n??:?
    __libc_start_main [0x4442b554]\n1/1 unittests FAILED\n'''
  stdout: b''
- exit_code: 1
  program: "import std.typecons;\nimport std.math;\n/*\nReturn True if all numbers\
    \ in the list l are below threshold t.\n    >>> below_threshold([1L, 2L, 4L, 10L],\
    \ 100L)\n    true\n    >>> below_threshold([1L, 20L, 4L, 10L], 5L)\n    false\n\
    \    \n*/\nbool below_threshold(long[] l, long t) \n{\n    return all!(a => a\
    \ < t)(l);\n}\nunittest\n{\n    alias candidate = below_threshold;\n\n    assert(candidate([1L,\
    \ 2L, 4L, 10L], 100L) == true);\n    assert(candidate([1L, 20L, 4L, 10L], 5L)\
    \ == false);\n    assert(candidate([1L, 20L, 4L, 10L], 21L) == true);\n    assert(candidate([1L,\
    \ 20L, 4L, 10L], 22L) == true);\n    assert(candidate([1L, 8L, 4L, 10L], 11L)\
    \ == true);\n    assert(candidate([1L, 8L, 4L, 10L], 10L) == false);\n}\nvoid\
    \ main(){}"
  status: SyntaxError
  stderr: 'b''Error: cannot find source code for runtime library file \''object.d\''\n       dmd
    might not be correctly installed. Run \''dmd -man\'' for installation instructions.\nimport
    path[0] = /tmp\nFailed: ["dmd", "-unittest", "-v", "-o-", "/tmp/tmpkerrvz1u.d",
    "-I/tmp"]\n'''
  stdout: b''
  timestamp: 1659797732
- exit_code: 0
  program: "import std.typecons;\nimport std.math;\n/*\nReturn True if all numbers\
    \ in the list l are below threshold t.\n    >>> below_threshold([1L, 2L, 4L, 10L],\
    \ 100L)\n    true\n    >>> below_threshold([1L, 20L, 4L, 10L], 5L)\n    false\n\
    \    \n*/\nbool below_threshold(long[] l, long t) \n{\n    foreach(long x; l)\n\
    \    {\n        if(x >= t)\n            return false;\n    }\n    return true;\n\
    }\nunittest\n{\n    alias candidate = below_threshold;\n\n    assert(candidate([1L,\
    \ 2L, 4L, 10L], 100L) == true);\n    assert(candidate([1L, 20L, 4L, 10L], 5L)\
    \ == false);\n    assert(candidate([1L, 20L, 4L, 10L], 21L) == true);\n    assert(candidate([1L,\
    \ 20L, 4L, 10L], 22L) == true);\n    assert(candidate([1L, 8L, 4L, 10L], 11L)\
    \ == true);\n    assert(candidate([1L, 8L, 4L, 10L], 10L) == false);\n}\nvoid\
    \ main(){}"
  status: OK
  stderr: b''
  stdout: b''
- exit_code: 1
  program: "import std.typecons;\nimport std.math;\n/*\nReturn True if all numbers\
    \ in the list l are below threshold t.\n    >>> below_threshold([1L, 2L, 4L, 10L],\
    \ 100L)\n    true\n    >>> below_threshold([1L, 20L, 4L, 10L], 5L)\n    false\n\
    \    \n*/\nbool below_threshold(long[] l, long t) \n{\n    foreach(i; l)\n   \
    \ {\n        if(i > t)\n            return false;\n    }\n    return true;\n}\n\
    unittest\n{\n    alias candidate = below_threshold;\n\n    assert(candidate([1L,\
    \ 2L, 4L, 10L], 100L) == true);\n    assert(candidate([1L, 20L, 4L, 10L], 5L)\
    \ == false);\n    assert(candidate([1L, 20L, 4L, 10L], 21L) == true);\n    assert(candidate([1L,\
    \ 20L, 4L, 10L], 22L) == true);\n    assert(candidate([1L, 8L, 4L, 10L], 11L)\
    \ == true);\n    assert(candidate([1L, 8L, 4L, 10L], 10L) == false);\n}\nvoid\
    \ main(){}"
  status: Exception
  stderr: 'b''core.exception.AssertError@/tmp/tmp70o9mbir.d(29): unittest failure\n----------------\n??:?
    _d_unittestp [0x4281dd]\n??:? void tmp70o9mbir.__unittest_L20_C1() [0x427f4b]\n??:?
    void tmp70o9mbir.__modtest() [0x427f60]\n??:? int core.runtime.runModuleUnitTests().__foreachbody2(object.ModuleInfo*)
    [0x42c1c7]\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)).__lambda2(immutable(object.ModuleInfo*))
    [0x42b05a]\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))).__foreachbody2(ref
    rt.sections_elf_shared.DSO) [0x4301ed]\n??:? int rt.sections_elf_shared.DSO.opApply(scope
    int delegate(ref rt.sections_elf_shared.DSO)) [0x43069c]\n??:? int rt.minfo.moduleinfos_apply(scope
    int delegate(immutable(object.ModuleInfo*))) [0x430179]\n??:? int object.ModuleInfo.opApply(scope
    int delegate(object.ModuleInfo*)) [0x42b031]\n??:? runModuleUnitTests [0x42bf9d]\n??:?
    void rt.dmain2._d_run_main(int, char**, extern (C) int function(char[][])*).runAll()
    [0x42862c]\n??:? void rt.dmain2._d_run_main(int, char**, extern (C) int function(char[][])*).tryExec(scope
    void delegate()) [0x4285b3]\n??:? _d_run_main [0x42851e]\n??:? main [0x427f73]\n??:?
    __libc_start_main [0x4442b554]\n1/1 unittests FAILED\n'''
  stdout: b''
- exit_code: 0
  program: "import std.typecons;\nimport std.math;\n/*\nReturn True if all numbers\
    \ in the list l are below threshold t.\n    >>> below_threshold([1L, 2L, 4L, 10L],\
    \ 100L)\n    true\n    >>> below_threshold([1L, 20L, 4L, 10L], 5L)\n    false\n\
    \    \n*/\nbool below_threshold(long[] l, long t) \n{\n    foreach(long i; l)\n\
    \    {\n        if(i >= t)\n            return false;\n    }\n    return true;\n\
    }\nunittest\n{\n    alias candidate = below_threshold;\n\n    assert(candidate([1L,\
    \ 2L, 4L, 10L], 100L) == true);\n    assert(candidate([1L, 20L, 4L, 10L], 5L)\
    \ == false);\n    assert(candidate([1L, 20L, 4L, 10L], 21L) == true);\n    assert(candidate([1L,\
    \ 20L, 4L, 10L], 22L) == true);\n    assert(candidate([1L, 8L, 4L, 10L], 11L)\
    \ == true);\n    assert(candidate([1L, 8L, 4L, 10L], 10L) == false);\n}\nvoid\
    \ main(){}"
  status: OK
  stderr: b''
  stdout: b''
- exit_code: 1
  program: "import std.typecons;\nimport std.math;\n/*\nReturn True if all numbers\
    \ in the list l are below threshold t.\n    >>> below_threshold([1L, 2L, 4L, 10L],\
    \ 100L)\n    true\n    >>> below_threshold([1L, 20L, 4L, 10L], 5L)\n    false\n\
    \    \n*/\nbool below_threshold(long[] l, long t) \n{\n    foreach(i; l)\n   \
    \ {\n        if(i > t)\n            return false;\n    }\n    return true;\n}\n\
    unittest\n{\n    alias candidate = below_threshold;\n\n    assert(candidate([1L,\
    \ 2L, 4L, 10L], 100L) == true);\n    assert(candidate([1L, 20L, 4L, 10L], 5L)\
    \ == false);\n    assert(candidate([1L, 20L, 4L, 10L], 21L) == true);\n    assert(candidate([1L,\
    \ 20L, 4L, 10L], 22L) == true);\n    assert(candidate([1L, 8L, 4L, 10L], 11L)\
    \ == true);\n    assert(candidate([1L, 8L, 4L, 10L], 10L) == false);\n}\nvoid\
    \ main(){}"
  status: Exception
  stderr: 'b''core.exception.AssertError@/tmp/tmp70o9mbir.d(29): unittest failure\n----------------\n??:?
    _d_unittestp [0x4281dd]\n??:? void tmp70o9mbir.__unittest_L20_C1() [0x427f4b]\n??:?
    void tmp70o9mbir.__modtest() [0x427f60]\n??:? int core.runtime.runModuleUnitTests().__foreachbody2(object.ModuleInfo*)
    [0x42c1c7]\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)).__lambda2(immutable(object.ModuleInfo*))
    [0x42b05a]\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))).__foreachbody2(ref
    rt.sections_elf_shared.DSO) [0x4301ed]\n??:? int rt.sections_elf_shared.DSO.opApply(scope
    int delegate(ref rt.sections_elf_shared.DSO)) [0x43069c]\n??:? int rt.minfo.moduleinfos_apply(scope
    int delegate(immutable(object.ModuleInfo*))) [0x430179]\n??:? int object.ModuleInfo.opApply(scope
    int delegate(object.ModuleInfo*)) [0x42b031]\n??:? runModuleUnitTests [0x42bf9d]\n??:?
    void rt.dmain2._d_run_main(int, char**, extern (C) int function(char[][])*).runAll()
    [0x42862c]\n??:? void rt.dmain2._d_run_main(int, char**, extern (C) int function(char[][])*).tryExec(scope
    void delegate()) [0x4285b3]\n??:? _d_run_main [0x42851e]\n??:? main [0x427f73]\n??:?
    __libc_start_main [0x4442b554]\n1/1 unittests FAILED\n'''
  stdout: b''
- exit_code: 1
  program: "import std.typecons;\nimport std.math;\n/*\nReturn True if all numbers\
    \ in the list l are below threshold t.\n    >>> below_threshold([1L, 2L, 4L, 10L],\
    \ 100L)\n    true\n    >>> below_threshold([1L, 20L, 4L, 10L], 5L)\n    false\n\
    \    \n*/\nbool below_threshold(long[] l, long t) \n{\n    foreach(i; l)\n   \
    \ {\n        if(i > t)\n            return false;\n    }\n    return true;\n}\n\
    unittest\n{\n    alias candidate = below_threshold;\n\n    assert(candidate([1L,\
    \ 2L, 4L, 10L], 100L) == true);\n    assert(candidate([1L, 20L, 4L, 10L], 5L)\
    \ == false);\n    assert(candidate([1L, 20L, 4L, 10L], 21L) == true);\n    assert(candidate([1L,\
    \ 20L, 4L, 10L], 22L) == true);\n    assert(candidate([1L, 8L, 4L, 10L], 11L)\
    \ == true);\n    assert(candidate([1L, 8L, 4L, 10L], 10L) == false);\n}\nvoid\
    \ main(){}"
  status: Exception
  stderr: 'b''core.exception.AssertError@/tmp/tmp70o9mbir.d(29): unittest failure\n----------------\n??:?
    _d_unittestp [0x4281dd]\n??:? void tmp70o9mbir.__unittest_L20_C1() [0x427f4b]\n??:?
    void tmp70o9mbir.__modtest() [0x427f60]\n??:? int core.runtime.runModuleUnitTests().__foreachbody2(object.ModuleInfo*)
    [0x42c1c7]\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)).__lambda2(immutable(object.ModuleInfo*))
    [0x42b05a]\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))).__foreachbody2(ref
    rt.sections_elf_shared.DSO) [0x4301ed]\n??:? int rt.sections_elf_shared.DSO.opApply(scope
    int delegate(ref rt.sections_elf_shared.DSO)) [0x43069c]\n??:? int rt.minfo.moduleinfos_apply(scope
    int delegate(immutable(object.ModuleInfo*))) [0x430179]\n??:? int object.ModuleInfo.opApply(scope
    int delegate(object.ModuleInfo*)) [0x42b031]\n??:? runModuleUnitTests [0x42bf9d]\n??:?
    void rt.dmain2._d_run_main(int, char**, extern (C) int function(char[][])*).runAll()
    [0x42862c]\n??:? void rt.dmain2._d_run_main(int, char**, extern (C) int function(char[][])*).tryExec(scope
    void delegate()) [0x4285b3]\n??:? _d_run_main [0x42851e]\n??:? main [0x427f73]\n??:?
    __libc_start_main [0x4442b554]\n1/1 unittests FAILED\n'''
  stdout: b''
- exit_code: 1
  program: "import std.typecons;\nimport std.math;\n/*\nReturn True if all numbers\
    \ in the list l are below threshold t.\n    >>> below_threshold([1L, 2L, 4L, 10L],\
    \ 100L)\n    true\n    >>> below_threshold([1L, 20L, 4L, 10L], 5L)\n    false\n\
    \    \n*/\nbool below_threshold(long[] l, long t) \n{\n    foreach(long i; l)\n\
    \    {\n        if(i > t)\n            return false;\n    }\n    return true;\n\
    }\n/*\nReturn True if all numbers in the list l are below threshold t.\n    >>>\
    \ below_threshold([1L, 2L, 4L, 10L], 100L)\n    true\n    >>> below_threshold([1L,\
    \ 20L, 4L, 10L], 5L)\n    false\n    \n*/\nunittest\n{\n    alias candidate =\
    \ below_threshold;\n\n    assert(candidate([1L, 2L, 4L, 10L], 100L) == true);\n\
    \    assert(candidate([1L, 20L, 4L, 10L], 5L) == false);\n    assert(candidate([1L,\
    \ 20L, 4L, 10L], 21L) == true);\n    assert(candidate([1L, 20L, 4L, 10L], 22L)\
    \ == true);\n    assert(candidate([1L, 8L, 4L, 10L], 11L) == true);\n    assert(candidate([1L,\
    \ 8L, 4L, 10L], 10L) == false);\n}\nvoid main(){}"
  status: Exception
  stderr: 'b''core.exception.AssertError@/tmp/tmp8wym03d7.d(37): unittest failure\n----------------\n??:?
    _d_unittestp [0x4281dd]\n??:? void tmp8wym03d7.__unittest_L28_C1() [0x427f4b]\n??:?
    void tmp8wym03d7.__modtest() [0x427f60]\n??:? int core.runtime.runModuleUnitTests().__foreachbody2(object.ModuleInfo*)
    [0x42c1c7]\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)).__lambda2(immutable(object.ModuleInfo*))
    [0x42b05a]\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))).__foreachbody2(ref
    rt.sections_elf_shared.DSO) [0x4301ed]\n??:? int rt.sections_elf_shared.DSO.opApply(scope
    int delegate(ref rt.sections_elf_shared.DSO)) [0x43069c]\n??:? int rt.minfo.moduleinfos_apply(scope
    int delegate(immutable(object.ModuleInfo*))) [0x430179]\n??:? int object.ModuleInfo.opApply(scope
    int delegate(object.ModuleInfo*)) [0x42b031]\n??:? runModuleUnitTests [0x42bf9d]\n??:?
    void rt.dmain2._d_run_main(int, char**, extern (C) int function(char[][])*).runAll()
    [0x42862c]\n??:? void rt.dmain2._d_run_main(int, char**, extern (C) int function(char[][])*).tryExec(scope
    void delegate()) [0x4285b3]\n??:? _d_run_main [0x42851e]\n??:? main [0x427f73]\n??:?
    __libc_start_main [0xae708554]\n1/1 unittests FAILED\n'''
  stdout: b''
- exit_code: 1
  program: "import std.typecons;\nimport std.math;\n/*\nReturn True if all numbers\
    \ in the list l are below threshold t.\n    >>> below_threshold([1L, 2L, 4L, 10L],\
    \ 100L)\n    true\n    >>> below_threshold([1L, 20L, 4L, 10L], 5L)\n    false\n\
    \    \n*/\nbool below_threshold(long[] l, long t) \n{\n    foreach(i; l)\n   \
    \ {\n        if(i > t)\n            return false;\n    }\n    return true;\n}\n\
    unittest\n{\n    alias candidate = below_threshold;\n\n    assert(candidate([1L,\
    \ 2L, 4L, 10L], 100L) == true);\n    assert(candidate([1L, 20L, 4L, 10L], 5L)\
    \ == false);\n    assert(candidate([1L, 20L, 4L, 10L], 21L) == true);\n    assert(candidate([1L,\
    \ 20L, 4L, 10L], 22L) == true);\n    assert(candidate([1L, 8L, 4L, 10L], 11L)\
    \ == true);\n    assert(candidate([1L, 8L, 4L, 10L], 10L) == false);\n}\nvoid\
    \ main(){}"
  status: Exception
  stderr: 'b''core.exception.AssertError@/tmp/tmp70o9mbir.d(29): unittest failure\n----------------\n??:?
    _d_unittestp [0x4281dd]\n??:? void tmp70o9mbir.__unittest_L20_C1() [0x427f4b]\n??:?
    void tmp70o9mbir.__modtest() [0x427f60]\n??:? int core.runtime.runModuleUnitTests().__foreachbody2(object.ModuleInfo*)
    [0x42c1c7]\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)).__lambda2(immutable(object.ModuleInfo*))
    [0x42b05a]\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))).__foreachbody2(ref
    rt.sections_elf_shared.DSO) [0x4301ed]\n??:? int rt.sections_elf_shared.DSO.opApply(scope
    int delegate(ref rt.sections_elf_shared.DSO)) [0x43069c]\n??:? int rt.minfo.moduleinfos_apply(scope
    int delegate(immutable(object.ModuleInfo*))) [0x430179]\n??:? int object.ModuleInfo.opApply(scope
    int delegate(object.ModuleInfo*)) [0x42b031]\n??:? runModuleUnitTests [0x42bf9d]\n??:?
    void rt.dmain2._d_run_main(int, char**, extern (C) int function(char[][])*).runAll()
    [0x42862c]\n??:? void rt.dmain2._d_run_main(int, char**, extern (C) int function(char[][])*).tryExec(scope
    void delegate()) [0x4285b3]\n??:? _d_run_main [0x42851e]\n??:? main [0x427f73]\n??:?
    __libc_start_main [0x4442b554]\n1/1 unittests FAILED\n'''
  stdout: b''
- exit_code: 1
  program: "import std.typecons;\nimport std.math;\n/*\nReturn True if all numbers\
    \ in the list l are below threshold t.\n    >>> below_threshold([1L, 2L, 4L, 10L],\
    \ 100L)\n    true\n    >>> below_threshold([1L, 20L, 4L, 10L], 5L)\n    false\n\
    \    \n*/\nbool below_threshold(long[] l, long t) \n{\n    foreach(i; l)\n   \
    \ {\n        if(i > t)\n            return false;\n    }\n    return true;\n}\n\
    unittest\n{\n    alias candidate = below_threshold;\n\n    assert(candidate([1L,\
    \ 2L, 4L, 10L], 100L) == true);\n    assert(candidate([1L, 20L, 4L, 10L], 5L)\
    \ == false);\n    assert(candidate([1L, 20L, 4L, 10L], 21L) == true);\n    assert(candidate([1L,\
    \ 20L, 4L, 10L], 22L) == true);\n    assert(candidate([1L, 8L, 4L, 10L], 11L)\
    \ == true);\n    assert(candidate([1L, 8L, 4L, 10L], 10L) == false);\n}\nvoid\
    \ main(){}"
  status: Exception
  stderr: 'b''core.exception.AssertError@/tmp/tmp70o9mbir.d(29): unittest failure\n----------------\n??:?
    _d_unittestp [0x4281dd]\n??:? void tmp70o9mbir.__unittest_L20_C1() [0x427f4b]\n??:?
    void tmp70o9mbir.__modtest() [0x427f60]\n??:? int core.runtime.runModuleUnitTests().__foreachbody2(object.ModuleInfo*)
    [0x42c1c7]\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)).__lambda2(immutable(object.ModuleInfo*))
    [0x42b05a]\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))).__foreachbody2(ref
    rt.sections_elf_shared.DSO) [0x4301ed]\n??:? int rt.sections_elf_shared.DSO.opApply(scope
    int delegate(ref rt.sections_elf_shared.DSO)) [0x43069c]\n??:? int rt.minfo.moduleinfos_apply(scope
    int delegate(immutable(object.ModuleInfo*))) [0x430179]\n??:? int object.ModuleInfo.opApply(scope
    int delegate(object.ModuleInfo*)) [0x42b031]\n??:? runModuleUnitTests [0x42bf9d]\n??:?
    void rt.dmain2._d_run_main(int, char**, extern (C) int function(char[][])*).runAll()
    [0x42862c]\n??:? void rt.dmain2._d_run_main(int, char**, extern (C) int function(char[][])*).tryExec(scope
    void delegate()) [0x4285b3]\n??:? _d_run_main [0x42851e]\n??:? main [0x427f73]\n??:?
    __libc_start_main [0x4442b554]\n1/1 unittests FAILED\n'''
  stdout: b''
- exit_code: 1
  program: "import std.typecons;\nimport std.math;\n/*\nReturn True if all numbers\
    \ in the list l are below threshold t.\n    >>> below_threshold([1L, 2L, 4L, 10L],\
    \ 100L)\n    true\n    >>> below_threshold([1L, 20L, 4L, 10L], 5L)\n    false\n\
    \    \n*/\nbool below_threshold(long[] l, long t) \n{\n    foreach(long i; l)\n\
    \    {\n        if(i > t)\n            return false;\n    }\n    return true;\n\
    }\n/*\nReturn True if all numbers in the list l are below threshold t.\n    >>>\
    \ below_threshold([1L, 2L, 4L, 10L], 100L)\n    true\n    >>> below_threshold([1L,\
    \ 20L, 4L, 10L], 5L)\n    false\n    \n*/\nunittest\n{\n    alias candidate =\
    \ below_threshold;\n\n    assert(candidate([1L, 2L, 4L, 10L], 100L) == true);\n\
    \    assert(candidate([1L, 20L, 4L, 10L], 5L) == false);\n    assert(candidate([1L,\
    \ 20L, 4L, 10L], 21L) == true);\n    assert(candidate([1L, 20L, 4L, 10L], 22L)\
    \ == true);\n    assert(candidate([1L, 8L, 4L, 10L], 11L) == true);\n    assert(candidate([1L,\
    \ 8L, 4L, 10L], 10L) == false);\n}\nvoid main(){}"
  status: Exception
  stderr: 'b''core.exception.AssertError@/tmp/tmp8wym03d7.d(37): unittest failure\n----------------\n??:?
    _d_unittestp [0x4281dd]\n??:? void tmp8wym03d7.__unittest_L28_C1() [0x427f4b]\n??:?
    void tmp8wym03d7.__modtest() [0x427f60]\n??:? int core.runtime.runModuleUnitTests().__foreachbody2(object.ModuleInfo*)
    [0x42c1c7]\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)).__lambda2(immutable(object.ModuleInfo*))
    [0x42b05a]\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))).__foreachbody2(ref
    rt.sections_elf_shared.DSO) [0x4301ed]\n??:? int rt.sections_elf_shared.DSO.opApply(scope
    int delegate(ref rt.sections_elf_shared.DSO)) [0x43069c]\n??:? int rt.minfo.moduleinfos_apply(scope
    int delegate(immutable(object.ModuleInfo*))) [0x430179]\n??:? int object.ModuleInfo.opApply(scope
    int delegate(object.ModuleInfo*)) [0x42b031]\n??:? runModuleUnitTests [0x42bf9d]\n??:?
    void rt.dmain2._d_run_main(int, char**, extern (C) int function(char[][])*).runAll()
    [0x42862c]\n??:? void rt.dmain2._d_run_main(int, char**, extern (C) int function(char[][])*).tryExec(scope
    void delegate()) [0x4285b3]\n??:? _d_run_main [0x42851e]\n??:? main [0x427f73]\n??:?
    __libc_start_main [0xae708554]\n1/1 unittests FAILED\n'''
  stdout: b''
- exit_code: 1
  program: "import std.typecons;\nimport std.math;\n/*\nReturn True if all numbers\
    \ in the list l are below threshold t.\n    >>> below_threshold([1L, 2L, 4L, 10L],\
    \ 100L)\n    true\n    >>> below_threshold([1L, 20L, 4L, 10L], 5L)\n    false\n\
    \    \n*/\nbool below_threshold(long[] l, long t) \n{\n    foreach(x; l)\n   \
    \ {\n        if(x >= t)\n            return false;\n    }\n    return true;\n\
    }\nunittest\n{\n    alias candidate = below_threshold;\n\n    assert(candidate([1L,\
    \ 2L, 4L, 10L], 100L) == true);\n    assert(candidate([1L, 20L, 4L, 10L], 5L)\
    \ == false);\n    assert(candidate([1L, 20L, 4L, 10L], 21L) == true);\n    assert(candidate([1L,\
    \ 20L, 4L, 10L], 22L) == true);\n    assert(candidate([1L, 8L, 4L, 10L], 11L)\
    \ == true);\n    assert(candidate([1L, 8L, 4L, 10L], 10L) == false);\n}\nvoid\
    \ main(){}"
  status: SyntaxError
  stderr: 'b''Error: cannot find source code for runtime library file \''object.d\''\n       dmd
    might not be correctly installed. Run \''dmd -man\'' for installation instructions.\nimport
    path[0] = /tmp\nFailed: ["dmd", "-unittest", "-v", "-o-", "/tmp/tmpqfi72ztt.d",
    "-I/tmp"]\n'''
  stdout: b''
  timestamp: 1659797732
- exit_code: 1
  program: "import std.typecons;\nimport std.math;\n/*\nReturn True if all numbers\
    \ in the list l are below threshold t.\n    >>> below_threshold([1L, 2L, 4L, 10L],\
    \ 100L)\n    true\n    >>> below_threshold([1L, 20L, 4L, 10L], 5L)\n    false\n\
    \    \n*/\nbool below_threshold(long[] l, long t) \n{\n    foreach(i; l)\n   \
    \ {\n        if(i > t)\n            return false;\n    }\n    return true;\n}\n\
    /*\nReturn the number of elements in the list l that are below threshold t.\n\
    \    >>> count_below_threshold([1L, 2L, 4L, 10L], 100L)\n    4\n    >>> count_below_threshold([1L,\
    \ 20L, 4L, 10L], 5L)\n    2\n*/\nlong count_below_threshold(long[] l, long t)\
    \ \n{\n    long count = 0;\n    foreach(i; l)\n    {\n        if(i < t)\n    \
    \        count++;\n    }\n    return count;\n}\n/*\nReturn the number of elements\
    \ in the list l that are below threshold t.\n    >>> count_below_threshold([1L,\
    \ 2L, 4L, 10L], 100L)\n    4\n    >>> count_below_threshold([1L, 20L, 4L, 10L],\
    \ 5L)\n    2\n*/\nlong count_below_threshold2(long[] l, long t) \n{\n    long\
    \ count = 0;\n    foreach(i; l)\n    {\n        if(i < t)\n            count++;\n\
    \    }\n    return count;\n}\n/*\nReturn the number of elements in the list l\
    \ that are below threshold t.\n    >>> count_below_threshold([1L, 2L, 4L, 10L],\
    \ 100L)\n    4\n    >>> count_below_threshold([1L, 20L, 4L, 10L], 5L)\n    2\n\
    */\nlong count_below_threshold3(long[] l, long t) \n{\n    long count = 0;\n \
    \   foreach(i; l)\n    {\n        if(i < t)\n            count++;\n    }\n   \
    \ return count;\n}\n/*\nReturn the number of elements in the list l that are below\
    \ threshold t.\n    >>> count_below_threshold([1L, 2L, 4L, 10L], 100L)\n    4\n\
    \    >>> count_below_threshold([1L, 20L, 4L,\nunittest\n{\n    alias candidate\
    \ = below_threshold;\n\n    assert(candidate([1L, 2L, 4L, 10L], 100L) == true);\n\
    \    assert(candidate([1L, 20L, 4L, 10L], 5L) == false);\n    assert(candidate([1L,\
    \ 20L, 4L, 10L], 21L) == true);\n    assert(candidate([1L, 20L, 4L, 10L], 22L)\
    \ == true);\n    assert(candidate([1L, 8L, 4L, 10L], 11L) == true);\n    assert(candidate([1L,\
    \ 8L, 4L, 10L], 10L) == false);\n}\nvoid main(){}"
  status: SyntaxError
  stderr: 'b''/tmp/tmpl7ujdpuo.d(71): Error: unterminated /* */ comment\nFailed: ["dmd",
    "-unittest", "-v", "-o-", "/tmp/tmpl7ujdpuo.d", "-I/tmp"]\n'''
  stdout: b''
  timestamp: 1659797732
- exit_code: 1
  program: "import std.typecons;\nimport std.math;\n/*\nReturn True if all numbers\
    \ in the list l are below threshold t.\n    >>> below_threshold([1L, 2L, 4L, 10L],\
    \ 100L)\n    true\n    >>> below_threshold([1L, 20L, 4L, 10L], 5L)\n    false\n\
    \    \n*/\nbool below_threshold(long[] l, long t) \n{\n    foreach(long i; l)\n\
    \    {\n        if(i > t)\n            return false;\n    }\n    return true;\n\
    }\nunittest\n{\n    alias candidate = below_threshold;\n\n    assert(candidate([1L,\
    \ 2L, 4L, 10L], 100L) == true);\n    assert(candidate([1L, 20L, 4L, 10L], 5L)\
    \ == false);\n    assert(candidate([1L, 20L, 4L, 10L], 21L) == true);\n    assert(candidate([1L,\
    \ 20L, 4L, 10L], 22L) == true);\n    assert(candidate([1L, 8L, 4L, 10L], 11L)\
    \ == true);\n    assert(candidate([1L, 8L, 4L, 10L], 10L) == false);\n}\nvoid\
    \ main(){}"
  status: Exception
  stderr: 'b''core.exception.AssertError@/tmp/tmpnp3ngt9z.d(29): unittest failure\n----------------\n??:?
    _d_unittestp [0x4281dd]\n??:? void tmpnp3ngt9z.__unittest_L20_C1() [0x427f4b]\n??:?
    void tmpnp3ngt9z.__modtest() [0x427f60]\n??:? int core.runtime.runModuleUnitTests().__foreachbody2(object.ModuleInfo*)
    [0x42c1c7]\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)).__lambda2(immutable(object.ModuleInfo*))
    [0x42b05a]\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))).__foreachbody2(ref
    rt.sections_elf_shared.DSO) [0x4301ed]\n??:? int rt.sections_elf_shared.DSO.opApply(scope
    int delegate(ref rt.sections_elf_shared.DSO)) [0x43069c]\n??:? int rt.minfo.moduleinfos_apply(scope
    int delegate(immutable(object.ModuleInfo*))) [0x430179]\n??:? int object.ModuleInfo.opApply(scope
    int delegate(object.ModuleInfo*)) [0x42b031]\n??:? runModuleUnitTests [0x42bf9d]\n??:?
    void rt.dmain2._d_run_main(int, char**, extern (C) int function(char[][])*).runAll()
    [0x42862c]\n??:? void rt.dmain2._d_run_main(int, char**, extern (C) int function(char[][])*).tryExec(scope
    void delegate()) [0x4285b3]\n??:? _d_run_main [0x42851e]\n??:? main [0x427f73]\n??:?
    __libc_start_main [0x76bf1554]\n1/1 unittests FAILED\n'''
  stdout: b''
- exit_code: 1
  program: "import std.typecons;\nimport std.math;\n/*\nReturn True if all numbers\
    \ in the list l are below threshold t.\n    >>> below_threshold([1L, 2L, 4L, 10L],\
    \ 100L)\n    true\n    >>> below_threshold([1L, 20L, 4L, 10L], 5L)\n    false\n\
    \    \n*/\nbool below_threshold(long[] l, long t) \n{\n    foreach(x; l)\n   \
    \ {\n        if(x > t)\n            return false;\n    }\n    return true;\n}\n\
    unittest\n{\n    alias candidate = below_threshold;\n\n    assert(candidate([1L,\
    \ 2L, 4L, 10L], 100L) == true);\n    assert(candidate([1L, 20L, 4L, 10L], 5L)\
    \ == false);\n    assert(candidate([1L, 20L, 4L, 10L], 21L) == true);\n    assert(candidate([1L,\
    \ 20L, 4L, 10L], 22L) == true);\n    assert(candidate([1L, 8L, 4L, 10L], 11L)\
    \ == true);\n    assert(candidate([1L, 8L, 4L, 10L], 10L) == false);\n}\nvoid\
    \ main(){}"
  status: Exception
  stderr: 'b''core.exception.AssertError@/tmp/tmp762c1vwx.d(29): unittest failure\n----------------\n??:?
    _d_unittestp [0x4281dd]\n??:? void tmp762c1vwx.__unittest_L20_C1() [0x427f4b]\n??:?
    void tmp762c1vwx.__modtest() [0x427f60]\n??:? int core.runtime.runModuleUnitTests().__foreachbody2(object.ModuleInfo*)
    [0x42c1c7]\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)).__lambda2(immutable(object.ModuleInfo*))
    [0x42b05a]\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))).__foreachbody2(ref
    rt.sections_elf_shared.DSO) [0x4301ed]\n??:? int rt.sections_elf_shared.DSO.opApply(scope
    int delegate(ref rt.sections_elf_shared.DSO)) [0x43069c]\n??:? int rt.minfo.moduleinfos_apply(scope
    int delegate(immutable(object.ModuleInfo*))) [0x430179]\n??:? int object.ModuleInfo.opApply(scope
    int delegate(object.ModuleInfo*)) [0x42b031]\n??:? runModuleUnitTests [0x42bf9d]\n??:?
    void rt.dmain2._d_run_main(int, char**, extern (C) int function(char[][])*).runAll()
    [0x42862c]\n??:? void rt.dmain2._d_run_main(int, char**, extern (C) int function(char[][])*).tryExec(scope
    void delegate()) [0x4285b3]\n??:? _d_run_main [0x42851e]\n??:? main [0x427f73]\n??:?
    __libc_start_main [0x1b6ed554]\n1/1 unittests FAILED\n'''
  stdout: b''
- exit_code: 1
  program: "import std.typecons;\nimport std.math;\n/*\nReturn True if all numbers\
    \ in the list l are below threshold t.\n    >>> below_threshold([1L, 2L, 4L, 10L],\
    \ 100L)\n    true\n    >>> below_threshold([1L, 20L, 4L, 10L], 5L)\n    false\n\
    \    \n*/\nbool below_threshold(long[] l, long t) \n{\n    foreach(i; l)\n   \
    \ {\n        if(i >= t)\n            return false;\n    }\n    return true;\n\
    }\nunittest\n{\n    alias candidate = below_threshold;\n\n    assert(candidate([1L,\
    \ 2L, 4L, 10L], 100L) == true);\n    assert(candidate([1L, 20L, 4L, 10L], 5L)\
    \ == false);\n    assert(candidate([1L, 20L, 4L, 10L], 21L) == true);\n    assert(candidate([1L,\
    \ 20L, 4L, 10L], 22L) == true);\n    assert(candidate([1L, 8L, 4L, 10L], 11L)\
    \ == true);\n    assert(candidate([1L, 8L, 4L, 10L], 10L) == false);\n}\nvoid\
    \ main(){}"
  status: SyntaxError
  stderr: 'b''Error: cannot find source code for runtime library file \''object.d\''\n       dmd
    might not be correctly installed. Run \''dmd -man\'' for installation instructions.\nimport
    path[0] = /tmp\nFailed: ["dmd", "-unittest", "-v", "-o-", "/tmp/tmpiw1qgsmo.d",
    "-I/tmp"]\n'''
  stdout: b''
  timestamp: 1659797732
- exit_code: 1
  program: "import std.typecons;\nimport std.math;\n/*\nReturn True if all numbers\
    \ in the list l are below threshold t.\n    >>> below_threshold([1L, 2L, 4L, 10L],\
    \ 100L)\n    true\n    >>> below_threshold([1L, 20L, 4L, 10L], 5L)\n    false\n\
    \    \n*/\nbool below_threshold(long[] l, long t) \n{\n    foreach(long i; l)\n\
    \    {\n        if(i > t)\n            return false;\n    }\n    return true;\n\
    }\nunittest\n{\n    alias candidate = below_threshold;\n\n    assert(candidate([1L,\
    \ 2L, 4L, 10L], 100L) == true);\n    assert(candidate([1L, 20L, 4L, 10L], 5L)\
    \ == false);\n    assert(candidate([1L, 20L, 4L, 10L], 21L) == true);\n    assert(candidate([1L,\
    \ 20L, 4L, 10L], 22L) == true);\n    assert(candidate([1L, 8L, 4L, 10L], 11L)\
    \ == true);\n    assert(candidate([1L, 8L, 4L, 10L], 10L) == false);\n}\nvoid\
    \ main(){}"
  status: Exception
  stderr: 'b''core.exception.AssertError@/tmp/tmpnp3ngt9z.d(29): unittest failure\n----------------\n??:?
    _d_unittestp [0x4281dd]\n??:? void tmpnp3ngt9z.__unittest_L20_C1() [0x427f4b]\n??:?
    void tmpnp3ngt9z.__modtest() [0x427f60]\n??:? int core.runtime.runModuleUnitTests().__foreachbody2(object.ModuleInfo*)
    [0x42c1c7]\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)).__lambda2(immutable(object.ModuleInfo*))
    [0x42b05a]\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))).__foreachbody2(ref
    rt.sections_elf_shared.DSO) [0x4301ed]\n??:? int rt.sections_elf_shared.DSO.opApply(scope
    int delegate(ref rt.sections_elf_shared.DSO)) [0x43069c]\n??:? int rt.minfo.moduleinfos_apply(scope
    int delegate(immutable(object.ModuleInfo*))) [0x430179]\n??:? int object.ModuleInfo.opApply(scope
    int delegate(object.ModuleInfo*)) [0x42b031]\n??:? runModuleUnitTests [0x42bf9d]\n??:?
    void rt.dmain2._d_run_main(int, char**, extern (C) int function(char[][])*).runAll()
    [0x42862c]\n??:? void rt.dmain2._d_run_main(int, char**, extern (C) int function(char[][])*).tryExec(scope
    void delegate()) [0x4285b3]\n??:? _d_run_main [0x42851e]\n??:? main [0x427f73]\n??:?
    __libc_start_main [0x76bf1554]\n1/1 unittests FAILED\n'''
  stdout: b''
- exit_code: 1
  program: "import std.typecons;\nimport std.math;\n/*\nReturn True if all numbers\
    \ in the list l are below threshold t.\n    >>> below_threshold([1L, 2L, 4L, 10L],\
    \ 100L)\n    true\n    >>> below_threshold([1L, 20L, 4L, 10L], 5L)\n    false\n\
    \    \n*/\nbool below_threshold(long[] l, long t) \n{\n    foreach(long i; l)\n\
    \    {\n        if(i > t)\n            return false;\n    }\n    return true;\n\
    }\nunittest\n{\n    alias candidate = below_threshold;\n\n    assert(candidate([1L,\
    \ 2L, 4L, 10L], 100L) == true);\n    assert(candidate([1L, 20L, 4L, 10L], 5L)\
    \ == false);\n    assert(candidate([1L, 20L, 4L, 10L], 21L) == true);\n    assert(candidate([1L,\
    \ 20L, 4L, 10L], 22L) == true);\n    assert(candidate([1L, 8L, 4L, 10L], 11L)\
    \ == true);\n    assert(candidate([1L, 8L, 4L, 10L], 10L) == false);\n}\nvoid\
    \ main(){}"
  status: Exception
  stderr: 'b''core.exception.AssertError@/tmp/tmpnp3ngt9z.d(29): unittest failure\n----------------\n??:?
    _d_unittestp [0x4281dd]\n??:? void tmpnp3ngt9z.__unittest_L20_C1() [0x427f4b]\n??:?
    void tmpnp3ngt9z.__modtest() [0x427f60]\n??:? int core.runtime.runModuleUnitTests().__foreachbody2(object.ModuleInfo*)
    [0x42c1c7]\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)).__lambda2(immutable(object.ModuleInfo*))
    [0x42b05a]\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))).__foreachbody2(ref
    rt.sections_elf_shared.DSO) [0x4301ed]\n??:? int rt.sections_elf_shared.DSO.opApply(scope
    int delegate(ref rt.sections_elf_shared.DSO)) [0x43069c]\n??:? int rt.minfo.moduleinfos_apply(scope
    int delegate(immutable(object.ModuleInfo*))) [0x430179]\n??:? int object.ModuleInfo.opApply(scope
    int delegate(object.ModuleInfo*)) [0x42b031]\n??:? runModuleUnitTests [0x42bf9d]\n??:?
    void rt.dmain2._d_run_main(int, char**, extern (C) int function(char[][])*).runAll()
    [0x42862c]\n??:? void rt.dmain2._d_run_main(int, char**, extern (C) int function(char[][])*).tryExec(scope
    void delegate()) [0x4285b3]\n??:? _d_run_main [0x42851e]\n??:? main [0x427f73]\n??:?
    __libc_start_main [0x76bf1554]\n1/1 unittests FAILED\n'''
  stdout: b''
- exit_code: 1
  program: "import std.typecons;\nimport std.math;\n/*\nReturn True if all numbers\
    \ in the list l are below threshold t.\n    >>> below_threshold([1L, 2L, 4L, 10L],\
    \ 100L)\n    true\n    >>> below_threshold([1L, 20L, 4L, 10L], 5L)\n    false\n\
    \    \n*/\nbool below_threshold(long[] l, long t) \n{\n    foreach(i; l)\n   \
    \ {\n        if(i > t)\n            return false;\n    }\n    return true;\n}\n\
    unittest\n{\n    alias candidate = below_threshold;\n\n    assert(candidate([1L,\
    \ 2L, 4L, 10L], 100L) == true);\n    assert(candidate([1L, 20L, 4L, 10L], 5L)\
    \ == false);\n    assert(candidate([1L, 20L, 4L, 10L], 21L) == true);\n    assert(candidate([1L,\
    \ 20L, 4L, 10L], 22L) == true);\n    assert(candidate([1L, 8L, 4L, 10L], 11L)\
    \ == true);\n    assert(candidate([1L, 8L, 4L, 10L], 10L) == false);\n}\nvoid\
    \ main(){}"
  status: Exception
  stderr: 'b''core.exception.AssertError@/tmp/tmp70o9mbir.d(29): unittest failure\n----------------\n??:?
    _d_unittestp [0x4281dd]\n??:? void tmp70o9mbir.__unittest_L20_C1() [0x427f4b]\n??:?
    void tmp70o9mbir.__modtest() [0x427f60]\n??:? int core.runtime.runModuleUnitTests().__foreachbody2(object.ModuleInfo*)
    [0x42c1c7]\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)).__lambda2(immutable(object.ModuleInfo*))
    [0x42b05a]\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))).__foreachbody2(ref
    rt.sections_elf_shared.DSO) [0x4301ed]\n??:? int rt.sections_elf_shared.DSO.opApply(scope
    int delegate(ref rt.sections_elf_shared.DSO)) [0x43069c]\n??:? int rt.minfo.moduleinfos_apply(scope
    int delegate(immutable(object.ModuleInfo*))) [0x430179]\n??:? int object.ModuleInfo.opApply(scope
    int delegate(object.ModuleInfo*)) [0x42b031]\n??:? runModuleUnitTests [0x42bf9d]\n??:?
    void rt.dmain2._d_run_main(int, char**, extern (C) int function(char[][])*).runAll()
    [0x42862c]\n??:? void rt.dmain2._d_run_main(int, char**, extern (C) int function(char[][])*).tryExec(scope
    void delegate()) [0x4285b3]\n??:? _d_run_main [0x42851e]\n??:? main [0x427f73]\n??:?
    __libc_start_main [0x4442b554]\n1/1 unittests FAILED\n'''
  stdout: b''
- exit_code: 1
  program: "import std.typecons;\nimport std.math;\n/*\nReturn True if all numbers\
    \ in the list l are below threshold t.\n    >>> below_threshold([1L, 2L, 4L, 10L],\
    \ 100L)\n    true\n    >>> below_threshold([1L, 20L, 4L, 10L], 5L)\n    false\n\
    \    \n*/\nbool below_threshold(long[] l, long t) \n{\n    foreach(i; l)\n   \
    \ {\n        if(i >= t)\n            return false;\n    }\n    return true;\n\
    }\nunittest\n{\n    alias candidate = below_threshold;\n\n    assert(candidate([1L,\
    \ 2L, 4L, 10L], 100L) == true);\n    assert(candidate([1L, 20L, 4L, 10L], 5L)\
    \ == false);\n    assert(candidate([1L, 20L, 4L, 10L], 21L) == true);\n    assert(candidate([1L,\
    \ 20L, 4L, 10L], 22L) == true);\n    assert(candidate([1L, 8L, 4L, 10L], 11L)\
    \ == true);\n    assert(candidate([1L, 8L, 4L, 10L], 10L) == false);\n}\nvoid\
    \ main(){}"
  status: SyntaxError
  stderr: 'b''Error: cannot find source code for runtime library file \''object.d\''\n       dmd
    might not be correctly installed. Run \''dmd -man\'' for installation instructions.\nimport
    path[0] = /tmp\nFailed: ["dmd", "-unittest", "-v", "-o-", "/tmp/tmpiw1qgsmo.d",
    "-I/tmp"]\n'''
  stdout: b''
  timestamp: 1659797732
- exit_code: 1
  program: "import std.typecons;\nimport std.math;\n/*\nReturn True if all numbers\
    \ in the list l are below threshold t.\n    >>> below_threshold([1L, 2L, 4L, 10L],\
    \ 100L)\n    true\n    >>> below_threshold([1L, 20L, 4L, 10L], 5L)\n    false\n\
    \    \n*/\nbool below_threshold(long[] l, long t) \n{\n    foreach(long x; l)\
    \ \n    {\n        if(x >= t) \n        {\n            return false;\n       \
    \ }\n    }\n    return true;\n}\nunittest\n{\n    alias candidate = below_threshold;\n\
    \n    assert(candidate([1L, 2L, 4L, 10L], 100L) == true);\n    assert(candidate([1L,\
    \ 20L, 4L, 10L], 5L) == false);\n    assert(candidate([1L, 20L, 4L, 10L], 21L)\
    \ == true);\n    assert(candidate([1L, 20L, 4L, 10L], 22L) == true);\n    assert(candidate([1L,\
    \ 8L, 4L, 10L], 11L) == true);\n    assert(candidate([1L, 8L, 4L, 10L], 10L) ==\
    \ false);\n}\nvoid main(){}"
  status: SyntaxError
  stderr: 'b''Error: cannot find source code for runtime library file \''object.d\''\n       dmd
    might not be correctly installed. Run \''dmd -man\'' for installation instructions.\nimport
    path[0] = /tmp\nFailed: ["dmd", "-unittest", "-v", "-o-", "/tmp/tmps4lq8jiv.d",
    "-I/tmp"]\n'''
  stdout: b''
  timestamp: 1659797732
- exit_code: 1
  program: "import std.typecons;\nimport std.math;\n/*\nReturn True if all numbers\
    \ in the list l are below threshold t.\n    >>> below_threshold([1L, 2L, 4L, 10L],\
    \ 100L)\n    true\n    >>> below_threshold([1L, 20L, 4L, 10L], 5L)\n    false\n\
    \    \n*/\nbool below_threshold(long[] l, long t) \n{\n    foreach(long i; l)\n\
    \    {\n        if(i > t)\n            return false;\n    }\n    return true;\n\
    }\n/*\nReturn the sum of all numbers in the list l.\n    >>> sum_numbers([1L,\
    \ 2L, 4L, 10L])\n    17L\n    >>> sum_numbers([1L, 20L, 4L, 10L])\n    35L\n*/\n\
    long sum_numbers(long[] l) \n{\n    long sum = 0;\n    foreach(long i; l)\n  \
    \  {\n        sum += i;\n    }\n    return sum;\n}\n/*\nReturn the sum of all\
    \ numbers in the list l that are below threshold t.\n    >>> sum_below_threshold([1L,\
    \ 2L, 4L, 10L], 100L)\n    17L\n    >>> sum_below_threshold([1L, 20L, 4L, 10L],\
    \ 5L)\n    5L\n*/\nlong sum_below_threshold(long[] l, long t) \n{\n    long sum\
    \ = 0;\n    foreach(long i; l)\n    {\n        if(i < t)\n            sum += i;\n\
    \    }\n    return sum;\n}\n/*\nReturn the sum of all numbers in the list l that\
    \ are below threshold t.\n    >>> sum_below_threshold([1L, 2L, 4L, 10L], 100L)\n\
    \    17L\n    >>> sum_below_threshold([1L, 20L, 4L, 10L], 5L)\n    5L\n*/\nlong\
    \ sum_below_threshold2(long[] l, long t) \n{\n    long sum = 0;\n    foreach(long\
    \ i; l)\n    {\n        if(i < t)\n            sum += i;\n    }\n    return sum;\n\
    }\n/*\nReturn the sum of all numbers in the list l that are below threshold t.\n\
    \    >>> sum_below_threshold([1L, 2L, 4L, 10L], 100L)\n    17L\n    >>> sum_below_threshold([1L,\
    \ 20L, 4L, 10L], 5L)\n   \nunittest\n{\n    alias candidate = below_threshold;\n\
    \n    assert(candidate([1L, 2L, 4L, 10L], 100L) == true);\n    assert(candidate([1L,\
    \ 20L, 4L, 10L], 5L) == false);\n    assert(candidate([1L, 20L, 4L, 10L], 21L)\
    \ == true);\n    assert(candidate([1L, 20L, 4L, 10L], 22L) == true);\n    assert(candidate([1L,\
    \ 8L, 4L, 10L], 11L) == true);\n    assert(candidate([1L, 8L, 4L, 10L], 10L) ==\
    \ false);\n}\nvoid main(){}"
  status: SyntaxError
  stderr: 'b''/tmp/tmpwhankkdm.d(70): Error: unterminated /* */ comment\nFailed: ["dmd",
    "-unittest", "-v", "-o-", "/tmp/tmpwhankkdm.d", "-I/tmp"]\n'''
  stdout: b''
  timestamp: 1659797732
- exit_code: 1
  program: "import std.typecons;\nimport std.math;\n/*\nReturn True if all numbers\
    \ in the list l are below threshold t.\n    >>> below_threshold([1L, 2L, 4L, 10L],\
    \ 100L)\n    true\n    >>> below_threshold([1L, 20L, 4L, 10L], 5L)\n    false\n\
    \    \n*/\nbool below_threshold(long[] l, long t) \n{\n    foreach(long i; l)\
    \ \n    {\n        if(i > t) \n        {\n            return false;\n        }\n\
    \    }\n    return true;\n}\nunittest\n{\n    alias candidate = below_threshold;\n\
    \n    assert(candidate([1L, 2L, 4L, 10L], 100L) == true);\n    assert(candidate([1L,\
    \ 20L, 4L, 10L], 5L) == false);\n    assert(candidate([1L, 20L, 4L, 10L], 21L)\
    \ == true);\n    assert(candidate([1L, 20L, 4L, 10L], 22L) == true);\n    assert(candidate([1L,\
    \ 8L, 4L, 10L], 11L) == true);\n    assert(candidate([1L, 8L, 4L, 10L], 10L) ==\
    \ false);\n}\nvoid main(){}"
  status: SyntaxError
  stderr: 'b''Error: cannot find source code for runtime library file \''object.d\''\n       dmd
    might not be correctly installed. Run \''dmd -man\'' for installation instructions.\nimport
    path[0] = /tmp\nFailed: ["dmd", "-unittest", "-v", "-o-", "/tmp/tmpaani8oud.d",
    "-I/tmp"]\n'''
  stdout: b''
  timestamp: 1659797732
- exit_code: 1
  program: "import std.typecons;\nimport std.math;\n/*\nReturn True if all numbers\
    \ in the list l are below threshold t.\n    >>> below_threshold([1L, 2L, 4L, 10L],\
    \ 100L)\n    true\n    >>> below_threshold([1L, 20L, 4L, 10L], 5L)\n    false\n\
    \    \n*/\nbool below_threshold(long[] l, long t) \n{\n    foreach(long x; l)\n\
    \    {\n        if(x > t)\n            return false;\n    }\n    return true;\n\
    }\nunittest\n{\n    alias candidate = below_threshold;\n\n    assert(candidate([1L,\
    \ 2L, 4L, 10L], 100L) == true);\n    assert(candidate([1L, 20L, 4L, 10L], 5L)\
    \ == false);\n    assert(candidate([1L, 20L, 4L, 10L], 21L) == true);\n    assert(candidate([1L,\
    \ 20L, 4L, 10L], 22L) == true);\n    assert(candidate([1L, 8L, 4L, 10L], 11L)\
    \ == true);\n    assert(candidate([1L, 8L, 4L, 10L], 10L) == false);\n}\nvoid\
    \ main(){}"
  status: SyntaxError
  stderr: 'b''Error: cannot find source code for runtime library file \''object.d\''\n       dmd
    might not be correctly installed. Run \''dmd -man\'' for installation instructions.\nimport
    path[0] = /tmp\nFailed: ["dmd", "-unittest", "-v", "-o-", "/tmp/tmps_bp72k5.d",
    "-I/tmp"]\n'''
  stdout: b''
  timestamp: 1659797732
- exit_code: 0
  program: "import std.typecons;\nimport std.math;\n/*\nReturn True if all numbers\
    \ in the list l are below threshold t.\n    >>> below_threshold([1L, 2L, 4L, 10L],\
    \ 100L)\n    true\n    >>> below_threshold([1L, 20L, 4L, 10L], 5L)\n    false\n\
    \    \n*/\nbool below_threshold(long[] l, long t) \n{\n    foreach(long x; l)\n\
    \    {\n        if(x >= t)\n            return false;\n    }\n    return true;\n\
    }\nunittest\n{\n    alias candidate = below_threshold;\n\n    assert(candidate([1L,\
    \ 2L, 4L, 10L], 100L) == true);\n    assert(candidate([1L, 20L, 4L, 10L], 5L)\
    \ == false);\n    assert(candidate([1L, 20L, 4L, 10L], 21L) == true);\n    assert(candidate([1L,\
    \ 20L, 4L, 10L], 22L) == true);\n    assert(candidate([1L, 8L, 4L, 10L], 11L)\
    \ == true);\n    assert(candidate([1L, 8L, 4L, 10L], 10L) == false);\n}\nvoid\
    \ main(){}"
  status: OK
  stderr: b''
  stdout: b''
- exit_code: 0
  program: "import std.typecons;\nimport std.math;\n/*\nReturn True if all numbers\
    \ in the list l are below threshold t.\n    >>> below_threshold([1L, 2L, 4L, 10L],\
    \ 100L)\n    true\n    >>> below_threshold([1L, 20L, 4L, 10L], 5L)\n    false\n\
    \    \n*/\nbool below_threshold(long[] l, long t) \n{\n    foreach(long x; l)\n\
    \    {\n        if(x >= t)\n            return false;\n    }\n    return true;\n\
    }\nunittest\n{\n    alias candidate = below_threshold;\n\n    assert(candidate([1L,\
    \ 2L, 4L, 10L], 100L) == true);\n    assert(candidate([1L, 20L, 4L, 10L], 5L)\
    \ == false);\n    assert(candidate([1L, 20L, 4L, 10L], 21L) == true);\n    assert(candidate([1L,\
    \ 20L, 4L, 10L], 22L) == true);\n    assert(candidate([1L, 8L, 4L, 10L], 11L)\
    \ == true);\n    assert(candidate([1L, 8L, 4L, 10L], 10L) == false);\n}\nvoid\
    \ main(){}"
  status: OK
  stderr: b''
  stdout: b''
- exit_code: 0
  program: "import std.typecons;\nimport std.math;\n/*\nReturn True if all numbers\
    \ in the list l are below threshold t.\n    >>> below_threshold([1L, 2L, 4L, 10L],\
    \ 100L)\n    true\n    >>> below_threshold([1L, 20L, 4L, 10L], 5L)\n    false\n\
    \    \n*/\nbool below_threshold(long[] l, long t) \n{\n    foreach(long x; l)\n\
    \    {\n        if(x >= t)\n            return false;\n    }\n    return true;\n\
    }\nunittest\n{\n    alias candidate = below_threshold;\n\n    assert(candidate([1L,\
    \ 2L, 4L, 10L], 100L) == true);\n    assert(candidate([1L, 20L, 4L, 10L], 5L)\
    \ == false);\n    assert(candidate([1L, 20L, 4L, 10L], 21L) == true);\n    assert(candidate([1L,\
    \ 20L, 4L, 10L], 22L) == true);\n    assert(candidate([1L, 8L, 4L, 10L], 11L)\
    \ == true);\n    assert(candidate([1L, 8L, 4L, 10L], 10L) == false);\n}\nvoid\
    \ main(){}"
  status: OK
  stderr: b''
  stdout: b''
- exit_code: 1
  program: "import std.typecons;\nimport std.math;\n/*\nReturn True if all numbers\
    \ in the list l are below threshold t.\n    >>> below_threshold([1L, 2L, 4L, 10L],\
    \ 100L)\n    true\n    >>> below_threshold([1L, 20L, 4L, 10L], 5L)\n    false\n\
    \    \n*/\nbool below_threshold(long[] l, long t) \n{\n    foreach(long i; l)\n\
    \    {\n        if(i > t)\n            return false;\n    }\n    return true;\n\
    }\nunittest\n{\n    alias candidate = below_threshold;\n\n    assert(candidate([1L,\
    \ 2L, 4L, 10L], 100L) == true);\n    assert(candidate([1L, 20L, 4L, 10L], 5L)\
    \ == false);\n    assert(candidate([1L, 20L, 4L, 10L], 21L) == true);\n    assert(candidate([1L,\
    \ 20L, 4L, 10L], 22L) == true);\n    assert(candidate([1L, 8L, 4L, 10L], 11L)\
    \ == true);\n    assert(candidate([1L, 8L, 4L, 10L], 10L) == false);\n}\nvoid\
    \ main(){}"
  status: Exception
  stderr: 'b''core.exception.AssertError@/tmp/tmpnp3ngt9z.d(29): unittest failure\n----------------\n??:?
    _d_unittestp [0x4281dd]\n??:? void tmpnp3ngt9z.__unittest_L20_C1() [0x427f4b]\n??:?
    void tmpnp3ngt9z.__modtest() [0x427f60]\n??:? int core.runtime.runModuleUnitTests().__foreachbody2(object.ModuleInfo*)
    [0x42c1c7]\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)).__lambda2(immutable(object.ModuleInfo*))
    [0x42b05a]\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))).__foreachbody2(ref
    rt.sections_elf_shared.DSO) [0x4301ed]\n??:? int rt.sections_elf_shared.DSO.opApply(scope
    int delegate(ref rt.sections_elf_shared.DSO)) [0x43069c]\n??:? int rt.minfo.moduleinfos_apply(scope
    int delegate(immutable(object.ModuleInfo*))) [0x430179]\n??:? int object.ModuleInfo.opApply(scope
    int delegate(object.ModuleInfo*)) [0x42b031]\n??:? runModuleUnitTests [0x42bf9d]\n??:?
    void rt.dmain2._d_run_main(int, char**, extern (C) int function(char[][])*).runAll()
    [0x42862c]\n??:? void rt.dmain2._d_run_main(int, char**, extern (C) int function(char[][])*).tryExec(scope
    void delegate()) [0x4285b3]\n??:? _d_run_main [0x42851e]\n??:? main [0x427f73]\n??:?
    __libc_start_main [0x76bf1554]\n1/1 unittests FAILED\n'''
  stdout: b''
- exit_code: 1
  program: "import std.typecons;\nimport std.math;\n/*\nReturn True if all numbers\
    \ in the list l are below threshold t.\n    >>> below_threshold([1L, 2L, 4L, 10L],\
    \ 100L)\n    true\n    >>> below_threshold([1L, 20L, 4L, 10L], 5L)\n    false\n\
    \    \n*/\nbool below_threshold(long[] l, long t) \n{\n    foreach(long i; l)\n\
    \    {\n        if(i > t)\n            return false;\n    }\n    return true;\n\
    }\n/*\nReturn True if all numbers in the list l are below threshold t.\n    >>>\
    \ below_threshold([1L, 2L, 4L, 10L], 100L)\n    true\n    >>> below_threshold([1L,\
    \ 20L, 4L, 10L], 5L)\n    false\n    \n*/\nunittest\n{\n    alias candidate =\
    \ below_threshold;\n\n    assert(candidate([1L, 2L, 4L, 10L], 100L) == true);\n\
    \    assert(candidate([1L, 20L, 4L, 10L], 5L) == false);\n    assert(candidate([1L,\
    \ 20L, 4L, 10L], 21L) == true);\n    assert(candidate([1L, 20L, 4L, 10L], 22L)\
    \ == true);\n    assert(candidate([1L, 8L, 4L, 10L], 11L) == true);\n    assert(candidate([1L,\
    \ 8L, 4L, 10L], 10L) == false);\n}\nvoid main(){}"
  status: Exception
  stderr: 'b''core.exception.AssertError@/tmp/tmp8wym03d7.d(37): unittest failure\n----------------\n??:?
    _d_unittestp [0x4281dd]\n??:? void tmp8wym03d7.__unittest_L28_C1() [0x427f4b]\n??:?
    void tmp8wym03d7.__modtest() [0x427f60]\n??:? int core.runtime.runModuleUnitTests().__foreachbody2(object.ModuleInfo*)
    [0x42c1c7]\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)).__lambda2(immutable(object.ModuleInfo*))
    [0x42b05a]\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))).__foreachbody2(ref
    rt.sections_elf_shared.DSO) [0x4301ed]\n??:? int rt.sections_elf_shared.DSO.opApply(scope
    int delegate(ref rt.sections_elf_shared.DSO)) [0x43069c]\n??:? int rt.minfo.moduleinfos_apply(scope
    int delegate(immutable(object.ModuleInfo*))) [0x430179]\n??:? int object.ModuleInfo.opApply(scope
    int delegate(object.ModuleInfo*)) [0x42b031]\n??:? runModuleUnitTests [0x42bf9d]\n??:?
    void rt.dmain2._d_run_main(int, char**, extern (C) int function(char[][])*).runAll()
    [0x42862c]\n??:? void rt.dmain2._d_run_main(int, char**, extern (C) int function(char[][])*).tryExec(scope
    void delegate()) [0x4285b3]\n??:? _d_run_main [0x42851e]\n??:? main [0x427f73]\n??:?
    __libc_start_main [0xae708554]\n1/1 unittests FAILED\n'''
  stdout: b''
- exit_code: 1
  program: "import std.typecons;\nimport std.math;\n/*\nReturn True if all numbers\
    \ in the list l are below threshold t.\n    >>> below_threshold([1L, 2L, 4L, 10L],\
    \ 100L)\n    true\n    >>> below_threshold([1L, 20L, 4L, 10L], 5L)\n    false\n\
    \    \n*/\nbool below_threshold(long[] l, long t) \n{\n    foreach(long i; l)\n\
    \    {\n        if(i > t)\n            return false;\n    }\n    return true;\n\
    }\nunittest\n{\n    alias candidate = below_threshold;\n\n    assert(candidate([1L,\
    \ 2L, 4L, 10L], 100L) == true);\n    assert(candidate([1L, 20L, 4L, 10L], 5L)\
    \ == false);\n    assert(candidate([1L, 20L, 4L, 10L], 21L) == true);\n    assert(candidate([1L,\
    \ 20L, 4L, 10L], 22L) == true);\n    assert(candidate([1L, 8L, 4L, 10L], 11L)\
    \ == true);\n    assert(candidate([1L, 8L, 4L, 10L], 10L) == false);\n}\nvoid\
    \ main(){}"
  status: Exception
  stderr: 'b''core.exception.AssertError@/tmp/tmpnp3ngt9z.d(29): unittest failure\n----------------\n??:?
    _d_unittestp [0x4281dd]\n??:? void tmpnp3ngt9z.__unittest_L20_C1() [0x427f4b]\n??:?
    void tmpnp3ngt9z.__modtest() [0x427f60]\n??:? int core.runtime.runModuleUnitTests().__foreachbody2(object.ModuleInfo*)
    [0x42c1c7]\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)).__lambda2(immutable(object.ModuleInfo*))
    [0x42b05a]\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))).__foreachbody2(ref
    rt.sections_elf_shared.DSO) [0x4301ed]\n??:? int rt.sections_elf_shared.DSO.opApply(scope
    int delegate(ref rt.sections_elf_shared.DSO)) [0x43069c]\n??:? int rt.minfo.moduleinfos_apply(scope
    int delegate(immutable(object.ModuleInfo*))) [0x430179]\n??:? int object.ModuleInfo.opApply(scope
    int delegate(object.ModuleInfo*)) [0x42b031]\n??:? runModuleUnitTests [0x42bf9d]\n??:?
    void rt.dmain2._d_run_main(int, char**, extern (C) int function(char[][])*).runAll()
    [0x42862c]\n??:? void rt.dmain2._d_run_main(int, char**, extern (C) int function(char[][])*).tryExec(scope
    void delegate()) [0x4285b3]\n??:? _d_run_main [0x42851e]\n??:? main [0x427f73]\n??:?
    __libc_start_main [0x76bf1554]\n1/1 unittests FAILED\n'''
  stdout: b''
- exit_code: 1
  program: "import std.typecons;\nimport std.math;\n/*\nReturn True if all numbers\
    \ in the list l are below threshold t.\n    >>> below_threshold([1L, 2L, 4L, 10L],\
    \ 100L)\n    true\n    >>> below_threshold([1L, 20L, 4L, 10L], 5L)\n    false\n\
    \    \n*/\nbool below_threshold(long[] l, long t) \n{\n    foreach(long i; l)\n\
    \    {\n        if(i>t)\n            return false;\n    }\n    return true;\n\
    }\nunittest\n{\n    alias candidate = below_threshold;\n\n    assert(candidate([1L,\
    \ 2L, 4L, 10L], 100L) == true);\n    assert(candidate([1L, 20L, 4L, 10L], 5L)\
    \ == false);\n    assert(candidate([1L, 20L, 4L, 10L], 21L) == true);\n    assert(candidate([1L,\
    \ 20L, 4L, 10L], 22L) == true);\n    assert(candidate([1L, 8L, 4L, 10L], 11L)\
    \ == true);\n    assert(candidate([1L, 8L, 4L, 10L], 10L) == false);\n}\nvoid\
    \ main(){}"
  status: SyntaxError
  stderr: 'b''Error: cannot find source code for runtime library file \''object.d\''\n       dmd
    might not be correctly installed. Run \''dmd -man\'' for installation instructions.\nimport
    path[0] = /tmp\nFailed: ["dmd", "-unittest", "-v", "-o-", "/tmp/tmpjb24edhx.d",
    "-I/tmp"]\n'''
  stdout: b''
  timestamp: 1659797732
- exit_code: 1
  program: "import std.typecons;\nimport std.math;\n/*\nReturn True if all numbers\
    \ in the list l are below threshold t.\n    >>> below_threshold([1L, 2L, 4L, 10L],\
    \ 100L)\n    true\n    >>> below_threshold([1L, 20L, 4L, 10L], 5L)\n    false\n\
    \    \n*/\nbool below_threshold(long[] l, long t) \n{\n    foreach(long i; l)\n\
    \    {\n        if(i > t)\n            return false;\n    }\n    return true;\n\
    }\n/*\nReturn True if all numbers in the list l are below threshold t.\n    >>>\
    \ below_threshold([1L, 2L, 4L, 10L], 100L)\n    true\n    >>> below_threshold([1L,\
    \ 20L, 4L, 10L], 5L)\n    false\n    \n*/\nunittest\n{\n    alias candidate =\
    \ below_threshold;\n\n    assert(candidate([1L, 2L, 4L, 10L], 100L) == true);\n\
    \    assert(candidate([1L, 20L, 4L, 10L], 5L) == false);\n    assert(candidate([1L,\
    \ 20L, 4L, 10L], 21L) == true);\n    assert(candidate([1L, 20L, 4L, 10L], 22L)\
    \ == true);\n    assert(candidate([1L, 8L, 4L, 10L], 11L) == true);\n    assert(candidate([1L,\
    \ 8L, 4L, 10L], 10L) == false);\n}\nvoid main(){}"
  status: Exception
  stderr: 'b''core.exception.AssertError@/tmp/tmp8wym03d7.d(37): unittest failure\n----------------\n??:?
    _d_unittestp [0x4281dd]\n??:? void tmp8wym03d7.__unittest_L28_C1() [0x427f4b]\n??:?
    void tmp8wym03d7.__modtest() [0x427f60]\n??:? int core.runtime.runModuleUnitTests().__foreachbody2(object.ModuleInfo*)
    [0x42c1c7]\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)).__lambda2(immutable(object.ModuleInfo*))
    [0x42b05a]\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))).__foreachbody2(ref
    rt.sections_elf_shared.DSO) [0x4301ed]\n??:? int rt.sections_elf_shared.DSO.opApply(scope
    int delegate(ref rt.sections_elf_shared.DSO)) [0x43069c]\n??:? int rt.minfo.moduleinfos_apply(scope
    int delegate(immutable(object.ModuleInfo*))) [0x430179]\n??:? int object.ModuleInfo.opApply(scope
    int delegate(object.ModuleInfo*)) [0x42b031]\n??:? runModuleUnitTests [0x42bf9d]\n??:?
    void rt.dmain2._d_run_main(int, char**, extern (C) int function(char[][])*).runAll()
    [0x42862c]\n??:? void rt.dmain2._d_run_main(int, char**, extern (C) int function(char[][])*).tryExec(scope
    void delegate()) [0x4285b3]\n??:? _d_run_main [0x42851e]\n??:? main [0x427f73]\n??:?
    __libc_start_main [0xae708554]\n1/1 unittests FAILED\n'''
  stdout: b''
- exit_code: 1
  program: "import std.typecons;\nimport std.math;\n/*\nReturn True if all numbers\
    \ in the list l are below threshold t.\n    >>> below_threshold([1L, 2L, 4L, 10L],\
    \ 100L)\n    true\n    >>> below_threshold([1L, 20L, 4L, 10L], 5L)\n    false\n\
    \    \n*/\nbool below_threshold(long[] l, long t) \n{\n    foreach(long i; l)\n\
    \    {\n        if(i > t)\n            return false;\n    }\n    return true;\n\
    }\nunittest\n{\n    alias candidate = below_threshold;\n\n    assert(candidate([1L,\
    \ 2L, 4L, 10L], 100L) == true);\n    assert(candidate([1L, 20L, 4L, 10L], 5L)\
    \ == false);\n    assert(candidate([1L, 20L, 4L, 10L], 21L) == true);\n    assert(candidate([1L,\
    \ 20L, 4L, 10L], 22L) == true);\n    assert(candidate([1L, 8L, 4L, 10L], 11L)\
    \ == true);\n    assert(candidate([1L, 8L, 4L, 10L], 10L) == false);\n}\nvoid\
    \ main(){}"
  status: Exception
  stderr: 'b''core.exception.AssertError@/tmp/tmpnp3ngt9z.d(29): unittest failure\n----------------\n??:?
    _d_unittestp [0x4281dd]\n??:? void tmpnp3ngt9z.__unittest_L20_C1() [0x427f4b]\n??:?
    void tmpnp3ngt9z.__modtest() [0x427f60]\n??:? int core.runtime.runModuleUnitTests().__foreachbody2(object.ModuleInfo*)
    [0x42c1c7]\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)).__lambda2(immutable(object.ModuleInfo*))
    [0x42b05a]\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))).__foreachbody2(ref
    rt.sections_elf_shared.DSO) [0x4301ed]\n??:? int rt.sections_elf_shared.DSO.opApply(scope
    int delegate(ref rt.sections_elf_shared.DSO)) [0x43069c]\n??:? int rt.minfo.moduleinfos_apply(scope
    int delegate(immutable(object.ModuleInfo*))) [0x430179]\n??:? int object.ModuleInfo.opApply(scope
    int delegate(object.ModuleInfo*)) [0x42b031]\n??:? runModuleUnitTests [0x42bf9d]\n??:?
    void rt.dmain2._d_run_main(int, char**, extern (C) int function(char[][])*).runAll()
    [0x42862c]\n??:? void rt.dmain2._d_run_main(int, char**, extern (C) int function(char[][])*).tryExec(scope
    void delegate()) [0x4285b3]\n??:? _d_run_main [0x42851e]\n??:? main [0x427f73]\n??:?
    __libc_start_main [0x76bf1554]\n1/1 unittests FAILED\n'''
  stdout: b''
- exit_code: 1
  program: "import std.typecons;\nimport std.math;\n/*\nReturn True if all numbers\
    \ in the list l are below threshold t.\n    >>> below_threshold([1L, 2L, 4L, 10L],\
    \ 100L)\n    true\n    >>> below_threshold([1L, 20L, 4L, 10L], 5L)\n    false\n\
    \    \n*/\nbool below_threshold(long[] l, long t) \n{\n    foreach(long i; l)\n\
    \    {\n        if(i > t)\n            return false;\n    }\n    return true;\n\
    }\nunittest\n{\n    alias candidate = below_threshold;\n\n    assert(candidate([1L,\
    \ 2L, 4L, 10L], 100L) == true);\n    assert(candidate([1L, 20L, 4L, 10L], 5L)\
    \ == false);\n    assert(candidate([1L, 20L, 4L, 10L], 21L) == true);\n    assert(candidate([1L,\
    \ 20L, 4L, 10L], 22L) == true);\n    assert(candidate([1L, 8L, 4L, 10L], 11L)\
    \ == true);\n    assert(candidate([1L, 8L, 4L, 10L], 10L) == false);\n}\nvoid\
    \ main(){}"
  status: Exception
  stderr: 'b''core.exception.AssertError@/tmp/tmpnp3ngt9z.d(29): unittest failure\n----------------\n??:?
    _d_unittestp [0x4281dd]\n??:? void tmpnp3ngt9z.__unittest_L20_C1() [0x427f4b]\n??:?
    void tmpnp3ngt9z.__modtest() [0x427f60]\n??:? int core.runtime.runModuleUnitTests().__foreachbody2(object.ModuleInfo*)
    [0x42c1c7]\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)).__lambda2(immutable(object.ModuleInfo*))
    [0x42b05a]\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))).__foreachbody2(ref
    rt.sections_elf_shared.DSO) [0x4301ed]\n??:? int rt.sections_elf_shared.DSO.opApply(scope
    int delegate(ref rt.sections_elf_shared.DSO)) [0x43069c]\n??:? int rt.minfo.moduleinfos_apply(scope
    int delegate(immutable(object.ModuleInfo*))) [0x430179]\n??:? int object.ModuleInfo.opApply(scope
    int delegate(object.ModuleInfo*)) [0x42b031]\n??:? runModuleUnitTests [0x42bf9d]\n??:?
    void rt.dmain2._d_run_main(int, char**, extern (C) int function(char[][])*).runAll()
    [0x42862c]\n??:? void rt.dmain2._d_run_main(int, char**, extern (C) int function(char[][])*).tryExec(scope
    void delegate()) [0x4285b3]\n??:? _d_run_main [0x42851e]\n??:? main [0x427f73]\n??:?
    __libc_start_main [0x76bf1554]\n1/1 unittests FAILED\n'''
  stdout: b''
- exit_code: 0
  program: "import std.typecons;\nimport std.math;\n/*\nReturn True if all numbers\
    \ in the list l are below threshold t.\n    >>> below_threshold([1L, 2L, 4L, 10L],\
    \ 100L)\n    true\n    >>> below_threshold([1L, 20L, 4L, 10L], 5L)\n    false\n\
    \    \n*/\nbool below_threshold(long[] l, long t) \n{\n    foreach(long x; l)\n\
    \    {\n        if(x >= t)\n            return false;\n    }\n    return true;\n\
    }\nunittest\n{\n    alias candidate = below_threshold;\n\n    assert(candidate([1L,\
    \ 2L, 4L, 10L], 100L) == true);\n    assert(candidate([1L, 20L, 4L, 10L], 5L)\
    \ == false);\n    assert(candidate([1L, 20L, 4L, 10L], 21L) == true);\n    assert(candidate([1L,\
    \ 20L, 4L, 10L], 22L) == true);\n    assert(candidate([1L, 8L, 4L, 10L], 11L)\
    \ == true);\n    assert(candidate([1L, 8L, 4L, 10L], 10L) == false);\n}\nvoid\
    \ main(){}"
  status: OK
  stderr: b''
  stdout: b''
- exit_code: 1
  program: "import std.typecons;\nimport std.math;\n/*\nReturn True if all numbers\
    \ in the list l are below threshold t.\n    >>> below_threshold([1L, 2L, 4L, 10L],\
    \ 100L)\n    true\n    >>> below_threshold([1L, 20L, 4L, 10L], 5L)\n    false\n\
    \    \n*/\nbool below_threshold(long[] l, long t) \n{\n    foreach(i; l)\n   \
    \ {\n        if(i > t)\n            return false;\n    }\n    return true;\n}\n\
    /*\nReturn True if all numbers in the list l are below threshold t.\n    >>> below_threshold([1L,\
    \ 2L, 4L, 10L], 100L)\n    true\n    >>> below_threshold([1L, 20L, 4L, 10L], 5L)\n\
    \    false\n    \n*/\nunittest\n{\n    alias candidate = below_threshold;\n\n\
    \    assert(candidate([1L, 2L, 4L, 10L], 100L) == true);\n    assert(candidate([1L,\
    \ 20L, 4L, 10L], 5L) == false);\n    assert(candidate([1L, 20L, 4L, 10L], 21L)\
    \ == true);\n    assert(candidate([1L, 20L, 4L, 10L], 22L) == true);\n    assert(candidate([1L,\
    \ 8L, 4L, 10L], 11L) == true);\n    assert(candidate([1L, 8L, 4L, 10L], 10L) ==\
    \ false);\n}\nvoid main(){}"
  status: SyntaxError
  stderr: 'b''Error: cannot find source code for runtime library file \''object.d\''\n       dmd
    might not be correctly installed. Run \''dmd -man\'' for installation instructions.\nimport
    path[0] = /tmp\nFailed: ["dmd", "-unittest", "-v", "-o-", "/tmp/tmp6pbrysvg.d",
    "-I/tmp"]\n'''
  stdout: b''
  timestamp: 1659797732
- exit_code: 1
  program: "import std.typecons;\nimport std.math;\n/*\nReturn True if all numbers\
    \ in the list l are below threshold t.\n    >>> below_threshold([1L, 2L, 4L, 10L],\
    \ 100L)\n    true\n    >>> below_threshold([1L, 20L, 4L, 10L], 5L)\n    false\n\
    \    \n*/\nbool below_threshold(long[] l, long t) \n{\n    foreach(long x; l)\n\
    \    {\n        if(x >= t)\n            return false;\n    }\n    return true;\n\
    }\n/*\nReturn True if all numbers in the list l are below threshold t.\n    >>>\
    \ below_threshold([1L, 2L, 4L, 10L], 100L)\n    true\n    >>> below_threshold([1L,\
    \ 20L, 4L, 10L], 5L)\n    false\n    \n*/\nunittest\n{\n    alias candidate =\
    \ below_threshold;\n\n    assert(candidate([1L, 2L, 4L, 10L], 100L) == true);\n\
    \    assert(candidate([1L, 20L, 4L, 10L], 5L) == false);\n    assert(candidate([1L,\
    \ 20L, 4L, 10L], 21L) == true);\n    assert(candidate([1L, 20L, 4L, 10L], 22L)\
    \ == true);\n    assert(candidate([1L, 8L, 4L, 10L], 11L) == true);\n    assert(candidate([1L,\
    \ 8L, 4L, 10L], 10L) == false);\n}\nvoid main(){}"
  status: SyntaxError
  stderr: 'b''Error: cannot find source code for runtime library file \''object.d\''\n       dmd
    might not be correctly installed. Run \''dmd -man\'' for installation instructions.\nimport
    path[0] = /tmp\nFailed: ["dmd", "-unittest", "-v", "-o-", "/tmp/tmpup252j_7.d",
    "-I/tmp"]\n'''
  stdout: b''
  timestamp: 1659797732
- exit_code: 0
  program: "import std.typecons;\nimport std.math;\n/*\nReturn True if all numbers\
    \ in the list l are below threshold t.\n    >>> below_threshold([1L, 2L, 4L, 10L],\
    \ 100L)\n    true\n    >>> below_threshold([1L, 20L, 4L, 10L], 5L)\n    false\n\
    \    \n*/\nbool below_threshold(long[] l, long t) \n{\n    foreach(long x; l)\n\
    \    {\n        if(x >= t)\n            return false;\n    }\n    return true;\n\
    }\nunittest\n{\n    alias candidate = below_threshold;\n\n    assert(candidate([1L,\
    \ 2L, 4L, 10L], 100L) == true);\n    assert(candidate([1L, 20L, 4L, 10L], 5L)\
    \ == false);\n    assert(candidate([1L, 20L, 4L, 10L], 21L) == true);\n    assert(candidate([1L,\
    \ 20L, 4L, 10L], 22L) == true);\n    assert(candidate([1L, 8L, 4L, 10L], 11L)\
    \ == true);\n    assert(candidate([1L, 8L, 4L, 10L], 10L) == false);\n}\nvoid\
    \ main(){}"
  status: OK
  stderr: b''
  stdout: b''
- exit_code: 1
  program: "import std.typecons;\nimport std.math;\n/*\nReturn True if all numbers\
    \ in the list l are below threshold t.\n    >>> below_threshold([1L, 2L, 4L, 10L],\
    \ 100L)\n    true\n    >>> below_threshold([1L, 20L, 4L, 10L], 5L)\n    false\n\
    \    \n*/\nbool below_threshold(long[] l, long t) \n{\n    foreach(i; l)\n   \
    \ {\n        if(i > t)\n            return false;\n    }\n    return true;\n}\n\
    /*\nReturn the number of elements in the list l that are below threshold t.\n\
    \    >>> count_below_threshold([1L, 2L, 4L, 10L], 100L)\n    4\n    >>> count_below_threshold([1L,\
    \ 20L, 4L, 10L], 5L)\n    2\n*/\nlong count_below_threshold(long[] l, long t)\
    \ \n{\n    long count = 0;\n    foreach(i; l)\n    {\n        if(i < t)\n    \
    \        count++;\n    }\n    return count;\n}\n/*\nReturn the number of elements\
    \ in the list l that are below threshold t.\n    >>> count_below_threshold([1L,\
    \ 2L, 4L, 10L], 100L)\n    4\n    >>> count_below_threshold([1L, 20L, 4L, 10L],\
    \ 5L)\n    2\n*/\nlong count_below_threshold_2(long[] l, long t) \n{\n    long\
    \ count = 0;\n    foreach(i; l)\n    {\n        if(i < t)\n            count++;\n\
    \    }\n    return count;\n}\n/*\nReturn the number of elements in the list l\
    \ that are below threshold t.\n    >>> count_below_threshold([1L, 2L, 4L, 10L],\
    \ 100L)\n    4\n    >>> count_below_threshold([1L, 20L, 4L, 10L], 5L)\n    2\n\
    */\nlong count_below_threshold_3(long[] l, long t) \n{\n    long count = 0;\n\
    \    foreach(i; l)\n    {\n        if(i < t)\n            count++;\n    }\n  \
    \  return count;\n}\n/*\nReturn the number of elements in the list l that are\
    \ below threshold t.\n    >>> count_below_threshold([1L, 2L, 4L, 10L], 100L)\n\
    \    4\n    >>> count_below_threshold([1L, 20L, 4\nunittest\n{\n    alias candidate\
    \ = below_threshold;\n\n    assert(candidate([1L, 2L, 4L, 10L], 100L) == true);\n\
    \    assert(candidate([1L, 20L, 4L, 10L], 5L) == false);\n    assert(candidate([1L,\
    \ 20L, 4L, 10L], 21L) == true);\n    assert(candidate([1L, 20L, 4L, 10L], 22L)\
    \ == true);\n    assert(candidate([1L, 8L, 4L, 10L], 11L) == true);\n    assert(candidate([1L,\
    \ 8L, 4L, 10L], 10L) == false);\n}\nvoid main(){}"
  status: SyntaxError
  stderr: 'b''/tmp/tmpk17_fkv1.d(71): Error: unterminated /* */ comment\nFailed: ["dmd",
    "-unittest", "-v", "-o-", "/tmp/tmpk17_fkv1.d", "-I/tmp"]\n'''
  stdout: b''
  timestamp: 1659797732
- exit_code: 1
  program: "import std.typecons;\nimport std.math;\n/*\nReturn True if all numbers\
    \ in the list l are below threshold t.\n    >>> below_threshold([1L, 2L, 4L, 10L],\
    \ 100L)\n    true\n    >>> below_threshold([1L, 20L, 4L, 10L], 5L)\n    false\n\
    \    \n*/\nbool below_threshold(long[] l, long t) \n{\n    foreach(long i; l)\n\
    \    {\n        if(i > t)\n            return false;\n    }\n    return true;\n\
    }\n/*\nReturn True if all numbers in the list l are below threshold t.\n    >>>\
    \ below_threshold([1L, 2L, 4L, 10L], 100L)\n    true\n    >>> below_threshold([1L,\
    \ 20L, 4L, 10L], 5L)\n    false\n    \n*/\nunittest\n{\n    alias candidate =\
    \ below_threshold;\n\n    assert(candidate([1L, 2L, 4L, 10L], 100L) == true);\n\
    \    assert(candidate([1L, 20L, 4L, 10L], 5L) == false);\n    assert(candidate([1L,\
    \ 20L, 4L, 10L], 21L) == true);\n    assert(candidate([1L, 20L, 4L, 10L], 22L)\
    \ == true);\n    assert(candidate([1L, 8L, 4L, 10L], 11L) == true);\n    assert(candidate([1L,\
    \ 8L, 4L, 10L], 10L) == false);\n}\nvoid main(){}"
  status: Exception
  stderr: 'b''core.exception.AssertError@/tmp/tmp8wym03d7.d(37): unittest failure\n----------------\n??:?
    _d_unittestp [0x4281dd]\n??:? void tmp8wym03d7.__unittest_L28_C1() [0x427f4b]\n??:?
    void tmp8wym03d7.__modtest() [0x427f60]\n??:? int core.runtime.runModuleUnitTests().__foreachbody2(object.ModuleInfo*)
    [0x42c1c7]\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)).__lambda2(immutable(object.ModuleInfo*))
    [0x42b05a]\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))).__foreachbody2(ref
    rt.sections_elf_shared.DSO) [0x4301ed]\n??:? int rt.sections_elf_shared.DSO.opApply(scope
    int delegate(ref rt.sections_elf_shared.DSO)) [0x43069c]\n??:? int rt.minfo.moduleinfos_apply(scope
    int delegate(immutable(object.ModuleInfo*))) [0x430179]\n??:? int object.ModuleInfo.opApply(scope
    int delegate(object.ModuleInfo*)) [0x42b031]\n??:? runModuleUnitTests [0x42bf9d]\n??:?
    void rt.dmain2._d_run_main(int, char**, extern (C) int function(char[][])*).runAll()
    [0x42862c]\n??:? void rt.dmain2._d_run_main(int, char**, extern (C) int function(char[][])*).tryExec(scope
    void delegate()) [0x4285b3]\n??:? _d_run_main [0x42851e]\n??:? main [0x427f73]\n??:?
    __libc_start_main [0xae708554]\n1/1 unittests FAILED\n'''
  stdout: b''
- exit_code: 1
  program: "import std.typecons;\nimport std.math;\n/*\nReturn True if all numbers\
    \ in the list l are below threshold t.\n    >>> below_threshold([1L, 2L, 4L, 10L],\
    \ 100L)\n    true\n    >>> below_threshold([1L, 20L, 4L, 10L], 5L)\n    false\n\
    \    \n*/\nbool below_threshold(long[] l, long t) \n{\n    foreach(long i; l)\n\
    \    {\n        if(i > t)\n            return false;\n    }\n    return true;\n\
    }\nunittest\n{\n    alias candidate = below_threshold;\n\n    assert(candidate([1L,\
    \ 2L, 4L, 10L], 100L) == true);\n    assert(candidate([1L, 20L, 4L, 10L], 5L)\
    \ == false);\n    assert(candidate([1L, 20L, 4L, 10L], 21L) == true);\n    assert(candidate([1L,\
    \ 20L, 4L, 10L], 22L) == true);\n    assert(candidate([1L, 8L, 4L, 10L], 11L)\
    \ == true);\n    assert(candidate([1L, 8L, 4L, 10L], 10L) == false);\n}\nvoid\
    \ main(){}"
  status: Exception
  stderr: 'b''core.exception.AssertError@/tmp/tmpnp3ngt9z.d(29): unittest failure\n----------------\n??:?
    _d_unittestp [0x4281dd]\n??:? void tmpnp3ngt9z.__unittest_L20_C1() [0x427f4b]\n??:?
    void tmpnp3ngt9z.__modtest() [0x427f60]\n??:? int core.runtime.runModuleUnitTests().__foreachbody2(object.ModuleInfo*)
    [0x42c1c7]\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)).__lambda2(immutable(object.ModuleInfo*))
    [0x42b05a]\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))).__foreachbody2(ref
    rt.sections_elf_shared.DSO) [0x4301ed]\n??:? int rt.sections_elf_shared.DSO.opApply(scope
    int delegate(ref rt.sections_elf_shared.DSO)) [0x43069c]\n??:? int rt.minfo.moduleinfos_apply(scope
    int delegate(immutable(object.ModuleInfo*))) [0x430179]\n??:? int object.ModuleInfo.opApply(scope
    int delegate(object.ModuleInfo*)) [0x42b031]\n??:? runModuleUnitTests [0x42bf9d]\n??:?
    void rt.dmain2._d_run_main(int, char**, extern (C) int function(char[][])*).runAll()
    [0x42862c]\n??:? void rt.dmain2._d_run_main(int, char**, extern (C) int function(char[][])*).tryExec(scope
    void delegate()) [0x4285b3]\n??:? _d_run_main [0x42851e]\n??:? main [0x427f73]\n??:?
    __libc_start_main [0x76bf1554]\n1/1 unittests FAILED\n'''
  stdout: b''
- exit_code: 1
  program: "import std.typecons;\nimport std.math;\n/*\nReturn True if all numbers\
    \ in the list l are below threshold t.\n    >>> below_threshold([1L, 2L, 4L, 10L],\
    \ 100L)\n    true\n    >>> below_threshold([1L, 20L, 4L, 10L], 5L)\n    false\n\
    \    \n*/\nbool below_threshold(long[] l, long t) \n{\n    foreach(i; l)\n   \
    \ {\n        if(i > t)\n            return false;\n    }\n    return true;\n}\n\
    unittest\n{\n    alias candidate = below_threshold;\n\n    assert(candidate([1L,\
    \ 2L, 4L, 10L], 100L) == true);\n    assert(candidate([1L, 20L, 4L, 10L], 5L)\
    \ == false);\n    assert(candidate([1L, 20L, 4L, 10L], 21L) == true);\n    assert(candidate([1L,\
    \ 20L, 4L, 10L], 22L) == true);\n    assert(candidate([1L, 8L, 4L, 10L], 11L)\
    \ == true);\n    assert(candidate([1L, 8L, 4L, 10L], 10L) == false);\n}\nvoid\
    \ main(){}"
  status: Exception
  stderr: 'b''core.exception.AssertError@/tmp/tmp70o9mbir.d(29): unittest failure\n----------------\n??:?
    _d_unittestp [0x4281dd]\n??:? void tmp70o9mbir.__unittest_L20_C1() [0x427f4b]\n??:?
    void tmp70o9mbir.__modtest() [0x427f60]\n??:? int core.runtime.runModuleUnitTests().__foreachbody2(object.ModuleInfo*)
    [0x42c1c7]\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)).__lambda2(immutable(object.ModuleInfo*))
    [0x42b05a]\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))).__foreachbody2(ref
    rt.sections_elf_shared.DSO) [0x4301ed]\n??:? int rt.sections_elf_shared.DSO.opApply(scope
    int delegate(ref rt.sections_elf_shared.DSO)) [0x43069c]\n??:? int rt.minfo.moduleinfos_apply(scope
    int delegate(immutable(object.ModuleInfo*))) [0x430179]\n??:? int object.ModuleInfo.opApply(scope
    int delegate(object.ModuleInfo*)) [0x42b031]\n??:? runModuleUnitTests [0x42bf9d]\n??:?
    void rt.dmain2._d_run_main(int, char**, extern (C) int function(char[][])*).runAll()
    [0x42862c]\n??:? void rt.dmain2._d_run_main(int, char**, extern (C) int function(char[][])*).tryExec(scope
    void delegate()) [0x4285b3]\n??:? _d_run_main [0x42851e]\n??:? main [0x427f73]\n??:?
    __libc_start_main [0x4442b554]\n1/1 unittests FAILED\n'''
  stdout: b''
- exit_code: 1
  program: "import std.typecons;\nimport std.math;\n/*\nReturn True if all numbers\
    \ in the list l are below threshold t.\n    >>> below_threshold([1L, 2L, 4L, 10L],\
    \ 100L)\n    true\n    >>> below_threshold([1L, 20L, 4L, 10L], 5L)\n    false\n\
    \    \n*/\nbool below_threshold(long[] l, long t) \n{\n    foreach(long i; l)\n\
    \    {\n        if(i > t)\n            return false;\n    }\n    return true;\n\
    }\nunittest\n{\n    alias candidate = below_threshold;\n\n    assert(candidate([1L,\
    \ 2L, 4L, 10L], 100L) == true);\n    assert(candidate([1L, 20L, 4L, 10L], 5L)\
    \ == false);\n    assert(candidate([1L, 20L, 4L, 10L], 21L) == true);\n    assert(candidate([1L,\
    \ 20L, 4L, 10L], 22L) == true);\n    assert(candidate([1L, 8L, 4L, 10L], 11L)\
    \ == true);\n    assert(candidate([1L, 8L, 4L, 10L], 10L) == false);\n}\nvoid\
    \ main(){}"
  status: Exception
  stderr: 'b''core.exception.AssertError@/tmp/tmpnp3ngt9z.d(29): unittest failure\n----------------\n??:?
    _d_unittestp [0x4281dd]\n??:? void tmpnp3ngt9z.__unittest_L20_C1() [0x427f4b]\n??:?
    void tmpnp3ngt9z.__modtest() [0x427f60]\n??:? int core.runtime.runModuleUnitTests().__foreachbody2(object.ModuleInfo*)
    [0x42c1c7]\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)).__lambda2(immutable(object.ModuleInfo*))
    [0x42b05a]\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))).__foreachbody2(ref
    rt.sections_elf_shared.DSO) [0x4301ed]\n??:? int rt.sections_elf_shared.DSO.opApply(scope
    int delegate(ref rt.sections_elf_shared.DSO)) [0x43069c]\n??:? int rt.minfo.moduleinfos_apply(scope
    int delegate(immutable(object.ModuleInfo*))) [0x430179]\n??:? int object.ModuleInfo.opApply(scope
    int delegate(object.ModuleInfo*)) [0x42b031]\n??:? runModuleUnitTests [0x42bf9d]\n??:?
    void rt.dmain2._d_run_main(int, char**, extern (C) int function(char[][])*).runAll()
    [0x42862c]\n??:? void rt.dmain2._d_run_main(int, char**, extern (C) int function(char[][])*).tryExec(scope
    void delegate()) [0x4285b3]\n??:? _d_run_main [0x42851e]\n??:? main [0x427f73]\n??:?
    __libc_start_main [0x76bf1554]\n1/1 unittests FAILED\n'''
  stdout: b''
- exit_code: 1
  program: "import std.typecons;\nimport std.math;\n/*\nReturn True if all numbers\
    \ in the list l are below threshold t.\n    >>> below_threshold([1L, 2L, 4L, 10L],\
    \ 100L)\n    true\n    >>> below_threshold([1L, 20L, 4L, 10L], 5L)\n    false\n\
    \    \n*/\nbool below_threshold(long[] l, long t) \n{\n    foreach(i; l)\n   \
    \ {\n        if(i > t)\n            return false;\n    }\n    return true;\n}\n\
    unittest\n{\n    alias candidate = below_threshold;\n\n    assert(candidate([1L,\
    \ 2L, 4L, 10L], 100L) == true);\n    assert(candidate([1L, 20L, 4L, 10L], 5L)\
    \ == false);\n    assert(candidate([1L, 20L, 4L, 10L], 21L) == true);\n    assert(candidate([1L,\
    \ 20L, 4L, 10L], 22L) == true);\n    assert(candidate([1L, 8L, 4L, 10L], 11L)\
    \ == true);\n    assert(candidate([1L, 8L, 4L, 10L], 10L) == false);\n}\nvoid\
    \ main(){}"
  status: Exception
  stderr: 'b''core.exception.AssertError@/tmp/tmp70o9mbir.d(29): unittest failure\n----------------\n??:?
    _d_unittestp [0x4281dd]\n??:? void tmp70o9mbir.__unittest_L20_C1() [0x427f4b]\n??:?
    void tmp70o9mbir.__modtest() [0x427f60]\n??:? int core.runtime.runModuleUnitTests().__foreachbody2(object.ModuleInfo*)
    [0x42c1c7]\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)).__lambda2(immutable(object.ModuleInfo*))
    [0x42b05a]\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))).__foreachbody2(ref
    rt.sections_elf_shared.DSO) [0x4301ed]\n??:? int rt.sections_elf_shared.DSO.opApply(scope
    int delegate(ref rt.sections_elf_shared.DSO)) [0x43069c]\n??:? int rt.minfo.moduleinfos_apply(scope
    int delegate(immutable(object.ModuleInfo*))) [0x430179]\n??:? int object.ModuleInfo.opApply(scope
    int delegate(object.ModuleInfo*)) [0x42b031]\n??:? runModuleUnitTests [0x42bf9d]\n??:?
    void rt.dmain2._d_run_main(int, char**, extern (C) int function(char[][])*).runAll()
    [0x42862c]\n??:? void rt.dmain2._d_run_main(int, char**, extern (C) int function(char[][])*).tryExec(scope
    void delegate()) [0x4285b3]\n??:? _d_run_main [0x42851e]\n??:? main [0x427f73]\n??:?
    __libc_start_main [0x4442b554]\n1/1 unittests FAILED\n'''
  stdout: b''
- exit_code: 1
  program: "import std.typecons;\nimport std.math;\n/*\nReturn True if all numbers\
    \ in the list l are below threshold t.\n    >>> below_threshold([1L, 2L, 4L, 10L],\
    \ 100L)\n    true\n    >>> below_threshold([1L, 20L, 4L, 10L], 5L)\n    false\n\
    \    \n*/\nbool below_threshold(long[] l, long t) \n{\n    foreach(long i; l)\n\
    \    {\n        if(i > t)\n            return false;\n    }\n    return true;\n\
    }\nunittest\n{\n    alias candidate = below_threshold;\n\n    assert(candidate([1L,\
    \ 2L, 4L, 10L], 100L) == true);\n    assert(candidate([1L, 20L, 4L, 10L], 5L)\
    \ == false);\n    assert(candidate([1L, 20L, 4L, 10L], 21L) == true);\n    assert(candidate([1L,\
    \ 20L, 4L, 10L], 22L) == true);\n    assert(candidate([1L, 8L, 4L, 10L], 11L)\
    \ == true);\n    assert(candidate([1L, 8L, 4L, 10L], 10L) == false);\n}\nvoid\
    \ main(){}"
  status: Exception
  stderr: 'b''core.exception.AssertError@/tmp/tmpnp3ngt9z.d(29): unittest failure\n----------------\n??:?
    _d_unittestp [0x4281dd]\n??:? void tmpnp3ngt9z.__unittest_L20_C1() [0x427f4b]\n??:?
    void tmpnp3ngt9z.__modtest() [0x427f60]\n??:? int core.runtime.runModuleUnitTests().__foreachbody2(object.ModuleInfo*)
    [0x42c1c7]\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)).__lambda2(immutable(object.ModuleInfo*))
    [0x42b05a]\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))).__foreachbody2(ref
    rt.sections_elf_shared.DSO) [0x4301ed]\n??:? int rt.sections_elf_shared.DSO.opApply(scope
    int delegate(ref rt.sections_elf_shared.DSO)) [0x43069c]\n??:? int rt.minfo.moduleinfos_apply(scope
    int delegate(immutable(object.ModuleInfo*))) [0x430179]\n??:? int object.ModuleInfo.opApply(scope
    int delegate(object.ModuleInfo*)) [0x42b031]\n??:? runModuleUnitTests [0x42bf9d]\n??:?
    void rt.dmain2._d_run_main(int, char**, extern (C) int function(char[][])*).runAll()
    [0x42862c]\n??:? void rt.dmain2._d_run_main(int, char**, extern (C) int function(char[][])*).tryExec(scope
    void delegate()) [0x4285b3]\n??:? _d_run_main [0x42851e]\n??:? main [0x427f73]\n??:?
    __libc_start_main [0x76bf1554]\n1/1 unittests FAILED\n'''
  stdout: b''
- exit_code: 1
  program: "import std.typecons;\nimport std.math;\n/*\nReturn True if all numbers\
    \ in the list l are below threshold t.\n    >>> below_threshold([1L, 2L, 4L, 10L],\
    \ 100L)\n    true\n    >>> below_threshold([1L, 20L, 4L, 10L], 5L)\n    false\n\
    \    \n*/\nbool below_threshold(long[] l, long t) \n{\n    foreach(i; l)\n   \
    \ {\n        if(i > t)\n            return false;\n    }\n    return true;\n}\n\
    unittest\n{\n    alias candidate = below_threshold;\n\n    assert(candidate([1L,\
    \ 2L, 4L, 10L], 100L) == true);\n    assert(candidate([1L, 20L, 4L, 10L], 5L)\
    \ == false);\n    assert(candidate([1L, 20L, 4L, 10L], 21L) == true);\n    assert(candidate([1L,\
    \ 20L, 4L, 10L], 22L) == true);\n    assert(candidate([1L, 8L, 4L, 10L], 11L)\
    \ == true);\n    assert(candidate([1L, 8L, 4L, 10L], 10L) == false);\n}\nvoid\
    \ main(){}"
  status: Exception
  stderr: 'b''core.exception.AssertError@/tmp/tmp70o9mbir.d(29): unittest failure\n----------------\n??:?
    _d_unittestp [0x4281dd]\n??:? void tmp70o9mbir.__unittest_L20_C1() [0x427f4b]\n??:?
    void tmp70o9mbir.__modtest() [0x427f60]\n??:? int core.runtime.runModuleUnitTests().__foreachbody2(object.ModuleInfo*)
    [0x42c1c7]\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)).__lambda2(immutable(object.ModuleInfo*))
    [0x42b05a]\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))).__foreachbody2(ref
    rt.sections_elf_shared.DSO) [0x4301ed]\n??:? int rt.sections_elf_shared.DSO.opApply(scope
    int delegate(ref rt.sections_elf_shared.DSO)) [0x43069c]\n??:? int rt.minfo.moduleinfos_apply(scope
    int delegate(immutable(object.ModuleInfo*))) [0x430179]\n??:? int object.ModuleInfo.opApply(scope
    int delegate(object.ModuleInfo*)) [0x42b031]\n??:? runModuleUnitTests [0x42bf9d]\n??:?
    void rt.dmain2._d_run_main(int, char**, extern (C) int function(char[][])*).runAll()
    [0x42862c]\n??:? void rt.dmain2._d_run_main(int, char**, extern (C) int function(char[][])*).tryExec(scope
    void delegate()) [0x4285b3]\n??:? _d_run_main [0x42851e]\n??:? main [0x427f73]\n??:?
    __libc_start_main [0x4442b554]\n1/1 unittests FAILED\n'''
  stdout: b''
- exit_code: 1
  program: "import std.typecons;\nimport std.math;\n/*\nReturn True if all numbers\
    \ in the list l are below threshold t.\n    >>> below_threshold([1L, 2L, 4L, 10L],\
    \ 100L)\n    true\n    >>> below_threshold([1L, 20L, 4L, 10L], 5L)\n    false\n\
    \    \n*/\nbool below_threshold(long[] l, long t) \n{\n    foreach(long i; l)\n\
    \    {\n        if(i > t)\n            return false;\n    }\n    return true;\n\
    }\nunittest\n{\n    alias candidate = below_threshold;\n\n    assert(candidate([1L,\
    \ 2L, 4L, 10L], 100L) == true);\n    assert(candidate([1L, 20L, 4L, 10L], 5L)\
    \ == false);\n    assert(candidate([1L, 20L, 4L, 10L], 21L) == true);\n    assert(candidate([1L,\
    \ 20L, 4L, 10L], 22L) == true);\n    assert(candidate([1L, 8L, 4L, 10L], 11L)\
    \ == true);\n    assert(candidate([1L, 8L, 4L, 10L], 10L) == false);\n}\nvoid\
    \ main(){}"
  status: Exception
  stderr: 'b''core.exception.AssertError@/tmp/tmpnp3ngt9z.d(29): unittest failure\n----------------\n??:?
    _d_unittestp [0x4281dd]\n??:? void tmpnp3ngt9z.__unittest_L20_C1() [0x427f4b]\n??:?
    void tmpnp3ngt9z.__modtest() [0x427f60]\n??:? int core.runtime.runModuleUnitTests().__foreachbody2(object.ModuleInfo*)
    [0x42c1c7]\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)).__lambda2(immutable(object.ModuleInfo*))
    [0x42b05a]\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))).__foreachbody2(ref
    rt.sections_elf_shared.DSO) [0x4301ed]\n??:? int rt.sections_elf_shared.DSO.opApply(scope
    int delegate(ref rt.sections_elf_shared.DSO)) [0x43069c]\n??:? int rt.minfo.moduleinfos_apply(scope
    int delegate(immutable(object.ModuleInfo*))) [0x430179]\n??:? int object.ModuleInfo.opApply(scope
    int delegate(object.ModuleInfo*)) [0x42b031]\n??:? runModuleUnitTests [0x42bf9d]\n??:?
    void rt.dmain2._d_run_main(int, char**, extern (C) int function(char[][])*).runAll()
    [0x42862c]\n??:? void rt.dmain2._d_run_main(int, char**, extern (C) int function(char[][])*).tryExec(scope
    void delegate()) [0x4285b3]\n??:? _d_run_main [0x42851e]\n??:? main [0x427f73]\n??:?
    __libc_start_main [0x76bf1554]\n1/1 unittests FAILED\n'''
  stdout: b''
- exit_code: 1
  program: "import std.typecons;\nimport std.math;\n/*\nReturn True if all numbers\
    \ in the list l are below threshold t.\n    >>> below_threshold([1L, 2L, 4L, 10L],\
    \ 100L)\n    true\n    >>> below_threshold([1L, 20L, 4L, 10L], 5L)\n    false\n\
    \    \n*/\nbool below_threshold(long[] l, long t) \n{\n    foreach(long x; l)\n\
    \        if(x >= t)\n            return false;\n    return true;\n}\nunittest\n\
    {\n    alias candidate = below_threshold;\n\n    assert(candidate([1L, 2L, 4L,\
    \ 10L], 100L) == true);\n    assert(candidate([1L, 20L, 4L, 10L], 5L) == false);\n\
    \    assert(candidate([1L, 20L, 4L, 10L], 21L) == true);\n    assert(candidate([1L,\
    \ 20L, 4L, 10L], 22L) == true);\n    assert(candidate([1L, 8L, 4L, 10L], 11L)\
    \ == true);\n    assert(candidate([1L, 8L, 4L, 10L], 10L) == false);\n}\nvoid\
    \ main(){}"
  status: SyntaxError
  stderr: 'b''Error: cannot find source code for runtime library file \''object.d\''\n       dmd
    might not be correctly installed. Run \''dmd -man\'' for installation instructions.\nimport
    path[0] = /tmp\nFailed: ["dmd", "-unittest", "-v", "-o-", "/tmp/tmpteg6ne_y.d",
    "-I/tmp"]\n'''
  stdout: b''
  timestamp: 1659797732
- exit_code: 1
  program: "import std.typecons;\nimport std.math;\n/*\nReturn True if all numbers\
    \ in the list l are below threshold t.\n    >>> below_threshold([1L, 2L, 4L, 10L],\
    \ 100L)\n    true\n    >>> below_threshold([1L, 20L, 4L, 10L], 5L)\n    false\n\
    \    \n*/\nbool below_threshold(long[] l, long t) \n{\n    foreach(long x; l)\n\
    \    {\n        if(x > t)\n            return false;\n    }\n    return true;\n\
    }\nunittest\n{\n    alias candidate = below_threshold;\n\n    assert(candidate([1L,\
    \ 2L, 4L, 10L], 100L) == true);\n    assert(candidate([1L, 20L, 4L, 10L], 5L)\
    \ == false);\n    assert(candidate([1L, 20L, 4L, 10L], 21L) == true);\n    assert(candidate([1L,\
    \ 20L, 4L, 10L], 22L) == true);\n    assert(candidate([1L, 8L, 4L, 10L], 11L)\
    \ == true);\n    assert(candidate([1L, 8L, 4L, 10L], 10L) == false);\n}\nvoid\
    \ main(){}"
  status: SyntaxError
  stderr: 'b''Error: cannot find source code for runtime library file \''object.d\''\n       dmd
    might not be correctly installed. Run \''dmd -man\'' for installation instructions.\nimport
    path[0] = /tmp\nFailed: ["dmd", "-unittest", "-v", "-o-", "/tmp/tmps_bp72k5.d",
    "-I/tmp"]\n'''
  stdout: b''
  timestamp: 1659797732
- exit_code: 1
  program: "import std.typecons;\nimport std.math;\n/*\nReturn True if all numbers\
    \ in the list l are below threshold t.\n    >>> below_threshold([1L, 2L, 4L, 10L],\
    \ 100L)\n    true\n    >>> below_threshold([1L, 20L, 4L, 10L], 5L)\n    false\n\
    \    \n*/\nbool below_threshold(long[] l, long t) \n{\n    foreach(long i; l)\n\
    \    {\n        if(i > t)\n            return false;\n    }\n    return true;\n\
    }\nunittest\n{\n    alias candidate = below_threshold;\n\n    assert(candidate([1L,\
    \ 2L, 4L, 10L], 100L) == true);\n    assert(candidate([1L, 20L, 4L, 10L], 5L)\
    \ == false);\n    assert(candidate([1L, 20L, 4L, 10L], 21L) == true);\n    assert(candidate([1L,\
    \ 20L, 4L, 10L], 22L) == true);\n    assert(candidate([1L, 8L, 4L, 10L], 11L)\
    \ == true);\n    assert(candidate([1L, 8L, 4L, 10L], 10L) == false);\n}\nvoid\
    \ main(){}"
  status: Exception
  stderr: 'b''core.exception.AssertError@/tmp/tmpnp3ngt9z.d(29): unittest failure\n----------------\n??:?
    _d_unittestp [0x4281dd]\n??:? void tmpnp3ngt9z.__unittest_L20_C1() [0x427f4b]\n??:?
    void tmpnp3ngt9z.__modtest() [0x427f60]\n??:? int core.runtime.runModuleUnitTests().__foreachbody2(object.ModuleInfo*)
    [0x42c1c7]\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)).__lambda2(immutable(object.ModuleInfo*))
    [0x42b05a]\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))).__foreachbody2(ref
    rt.sections_elf_shared.DSO) [0x4301ed]\n??:? int rt.sections_elf_shared.DSO.opApply(scope
    int delegate(ref rt.sections_elf_shared.DSO)) [0x43069c]\n??:? int rt.minfo.moduleinfos_apply(scope
    int delegate(immutable(object.ModuleInfo*))) [0x430179]\n??:? int object.ModuleInfo.opApply(scope
    int delegate(object.ModuleInfo*)) [0x42b031]\n??:? runModuleUnitTests [0x42bf9d]\n??:?
    void rt.dmain2._d_run_main(int, char**, extern (C) int function(char[][])*).runAll()
    [0x42862c]\n??:? void rt.dmain2._d_run_main(int, char**, extern (C) int function(char[][])*).tryExec(scope
    void delegate()) [0x4285b3]\n??:? _d_run_main [0x42851e]\n??:? main [0x427f73]\n??:?
    __libc_start_main [0x76bf1554]\n1/1 unittests FAILED\n'''
  stdout: b''

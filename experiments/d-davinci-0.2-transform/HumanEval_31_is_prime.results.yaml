language: d
name: HumanEval_31_is_prime
results:
- exit_code: 1
  program: "import std.math;\n/*\nReturn true if a given number is prime, and false\
    \ otherwise.\n    >>> is_prime(6L)\n    false\n    >>> is_prime(101L)\n    true\n\
    \    >>> is_prime(11L)\n    true\n    >>> is_prime(13441L)\n    true\n    >>>\
    \ is_prime(61L)\n    true\n    >>> is_prime(4L)\n    false\n    >>> is_prime(1L)\n\
    \    false\n    \n*/\nbool is_prime(long n) \n{\n    if (n <= 1) \n        return\
    \ false;\n    if (n == 2) \n        return true;\n    if (n % 2 == 0) \n     \
    \   return false;\n    for (long i = 3; i <= sqrt(n); i += 2) \n    {\n      \
    \  if (n % i == 0) \n            return false;\n    }\n    return true;\n}\nunittest\n\
    {\n    alias candidate = is_prime;\n\n    assert(candidate(6L) == false);\n  \
    \  assert(candidate(101L) == true);\n    assert(candidate(11L) == true);\n   \
    \ assert(candidate(13441L) == true);\n    assert(candidate(61L) == true);\n  \
    \  assert(candidate(4L) == false);\n    assert(candidate(1L) == false);\n    assert(candidate(5L)\
    \ == true);\n    assert(candidate(11L) == true);\n    assert(candidate(17L) ==\
    \ true);\n    assert(candidate(85L) == false);\n    assert(candidate(77L) == false);\n\
    \    assert(candidate(255379L) == false);\n}\nvoid main(){}"
  status: SyntaxError
  stderr: 'b''/tmp/tmp2o42itkw.d(28): Error: `std.math.sqrt` called with argument
    types `(long)` matches both:\n/home/zi.ya/spack/opt/spack/linux-centos7-haswell/gcc-4.8.5/dmd-2.081.1-uf6xyx53fosvucuy7fkpiod2bnffx7of/linux/bin64/../../src/phobos/std/math.d(1848):     `std.math.sqrt(float
    x)`\nand:\n/home/zi.ya/spack/opt/spack/linux-centos7-haswell/gcc-4.8.5/dmd-2.081.1-uf6xyx53fosvucuy7fkpiod2bnffx7of/linux/bin64/../../src/phobos/std/math.d(1854):     `std.math.sqrt(real
    x)`\nFailed: ["dmd", "-unittest", "-v", "-o-", "/tmp/tmp2o42itkw.d", "-I/tmp"]\n'''
  stdout: b''
- exit_code: 0
  program: "import std.math;\n/*\nReturn true if a given number is prime, and false\
    \ otherwise.\n    >>> is_prime(6L)\n    false\n    >>> is_prime(101L)\n    true\n\
    \    >>> is_prime(11L)\n    true\n    >>> is_prime(13441L)\n    true\n    >>>\
    \ is_prime(61L)\n    true\n    >>> is_prime(4L)\n    false\n    >>> is_prime(1L)\n\
    \    false\n    \n*/\nbool is_prime(long n) \n{\n    if (n <= 1) \n    {\n   \
    \     return false;\n    }\n    else if (n <= 3) \n    {\n        return true;\n\
    \    }\n    else if (n % 2 == 0 || n % 3 == 0) \n    {\n        return false;\n\
    \    }\n    long i = 5;\n    while (i * i <= n) \n    {\n        if (n % i ==\
    \ 0 || n % (i + 2) == 0) \n        {\n            return false;\n        }\n \
    \       i = i + 6;\n    }\n    return true;\n}\nunittest\n{\n    alias candidate\
    \ = is_prime;\n\n    assert(candidate(6L) == false);\n    assert(candidate(101L)\
    \ == true);\n    assert(candidate(11L) == true);\n    assert(candidate(13441L)\
    \ == true);\n    assert(candidate(61L) == true);\n    assert(candidate(4L) ==\
    \ false);\n    assert(candidate(1L) == false);\n    assert(candidate(5L) == true);\n\
    \    assert(candidate(11L) == true);\n    assert(candidate(17L) == true);\n  \
    \  assert(candidate(85L) == false);\n    assert(candidate(77L) == false);\n  \
    \  assert(candidate(255379L) == false);\n}\nvoid main(){}"
  status: OK
  stderr: b''
  stdout: b''
- exit_code: 0
  program: "import std.math;\n/*\nReturn true if a given number is prime, and false\
    \ otherwise.\n    >>> is_prime(6L)\n    false\n    >>> is_prime(101L)\n    true\n\
    \    >>> is_prime(11L)\n    true\n    >>> is_prime(13441L)\n    true\n    >>>\
    \ is_prime(61L)\n    true\n    >>> is_prime(4L)\n    false\n    >>> is_prime(1L)\n\
    \    false\n    \n*/\nbool is_prime(long n) \n{\n    if (n <= 1)\n        return\
    \ false;\n    else if (n <= 3)\n        return true;\n    else if (n % 2 == 0\
    \ || n % 3 == 0)\n        return false;\n    long i = 5;\n    while (i * i <=\
    \ n) \n    {\n        if (n % i == 0 || n % (i + 2) == 0)\n            return\
    \ false;\n        i = i + 6;\n    }\n    return true;\n}\nunittest\n{\n    alias\
    \ candidate = is_prime;\n\n    assert(candidate(6L) == false);\n    assert(candidate(101L)\
    \ == true);\n    assert(candidate(11L) == true);\n    assert(candidate(13441L)\
    \ == true);\n    assert(candidate(61L) == true);\n    assert(candidate(4L) ==\
    \ false);\n    assert(candidate(1L) == false);\n    assert(candidate(5L) == true);\n\
    \    assert(candidate(11L) == true);\n    assert(candidate(17L) == true);\n  \
    \  assert(candidate(85L) == false);\n    assert(candidate(77L) == false);\n  \
    \  assert(candidate(255379L) == false);\n}\nvoid main(){}"
  status: OK
  stderr: b''
  stdout: b''
- exit_code: 0
  program: "import std.math;\n/*\nReturn true if a given number is prime, and false\
    \ otherwise.\n    >>> is_prime(6L)\n    false\n    >>> is_prime(101L)\n    true\n\
    \    >>> is_prime(11L)\n    true\n    >>> is_prime(13441L)\n    true\n    >>>\
    \ is_prime(61L)\n    true\n    >>> is_prime(4L)\n    false\n    >>> is_prime(1L)\n\
    \    false\n    \n*/\nbool is_prime(long n) \n{\n    if (n <= 1) \n        return\
    \ false;\n    if (n <= 3) \n        return true;\n    if (n % 2 == 0 || n % 3\
    \ == 0) \n        return false;\n    for (long i = 5; i * i <= n; i = i + 6) \n\
    \        if (n % i == 0 || n % (i + 2) == 0) \n            return false;\n   \
    \ return true;\n}\nunittest\n{\n    alias candidate = is_prime;\n\n    assert(candidate(6L)\
    \ == false);\n    assert(candidate(101L) == true);\n    assert(candidate(11L)\
    \ == true);\n    assert(candidate(13441L) == true);\n    assert(candidate(61L)\
    \ == true);\n    assert(candidate(4L) == false);\n    assert(candidate(1L) ==\
    \ false);\n    assert(candidate(5L) == true);\n    assert(candidate(11L) == true);\n\
    \    assert(candidate(17L) == true);\n    assert(candidate(85L) == false);\n \
    \   assert(candidate(77L) == false);\n    assert(candidate(255379L) == false);\n\
    }\nvoid main(){}"
  status: OK
  stderr: b''
  stdout: b''
- exit_code: 1
  program: "import std.math;\n/*\nReturn true if a given number is prime, and false\
    \ otherwise.\n    >>> is_prime(6L)\n    false\n    >>> is_prime(101L)\n    true\n\
    \    >>> is_prime(11L)\n    true\n    >>> is_prime(13441L)\n    true\n    >>>\
    \ is_prime(61L)\n    true\n    >>> is_prime(4L)\n    false\n    >>> is_prime(1L)\n\
    \    false\n    \n*/\nbool is_prime(long n) \n{\n    if (n < 2)\n        return\
    \ false;\n    if (n == 2)\n        return true;\n    if (n % 2 == 0)\n       \
    \ return false;\n    for (long i = 3; i <= sqrt(n); i += 2)\n    {\n        if\
    \ (n % i == 0)\n            return false;\n    }\n    return true;\n}\nunittest\n\
    {\n    alias candidate = is_prime;\n\n    assert(candidate(6L) == false);\n  \
    \  assert(candidate(101L) == true);\n    assert(candidate(11L) == true);\n   \
    \ assert(candidate(13441L) == true);\n    assert(candidate(61L) == true);\n  \
    \  assert(candidate(4L) == false);\n    assert(candidate(1L) == false);\n    assert(candidate(5L)\
    \ == true);\n    assert(candidate(11L) == true);\n    assert(candidate(17L) ==\
    \ true);\n    assert(candidate(85L) == false);\n    assert(candidate(77L) == false);\n\
    \    assert(candidate(255379L) == false);\n}\nvoid main(){}"
  status: SyntaxError
  stderr: 'b''/tmp/tmpv41ywrff.d(28): Error: `std.math.sqrt` called with argument
    types `(long)` matches both:\n/home/zi.ya/spack/opt/spack/linux-centos7-haswell/gcc-4.8.5/dmd-2.081.1-uf6xyx53fosvucuy7fkpiod2bnffx7of/linux/bin64/../../src/phobos/std/math.d(1848):     `std.math.sqrt(float
    x)`\nand:\n/home/zi.ya/spack/opt/spack/linux-centos7-haswell/gcc-4.8.5/dmd-2.081.1-uf6xyx53fosvucuy7fkpiod2bnffx7of/linux/bin64/../../src/phobos/std/math.d(1854):     `std.math.sqrt(real
    x)`\nFailed: ["dmd", "-unittest", "-v", "-o-", "/tmp/tmpv41ywrff.d", "-I/tmp"]\n'''
  stdout: b''
- exit_code: 0
  program: "import std.math;\n/*\nReturn true if a given number is prime, and false\
    \ otherwise.\n    >>> is_prime(6L)\n    false\n    >>> is_prime(101L)\n    true\n\
    \    >>> is_prime(11L)\n    true\n    >>> is_prime(13441L)\n    true\n    >>>\
    \ is_prime(61L)\n    true\n    >>> is_prime(4L)\n    false\n    >>> is_prime(1L)\n\
    \    false\n    \n*/\nbool is_prime(long n) \n{\n    if (n <= 1)\n        return\
    \ false;\n    if (n <= 3)\n        return true;\n    if (n % 2 == 0 || n % 3 ==\
    \ 0)\n        return false;\n    for (long i = 5; i * i <= n; i = i + 6)\n   \
    \     if (n % i == 0 || n % (i + 2) == 0)\n            return false;\n    return\
    \ true;\n}\nunittest\n{\n    alias candidate = is_prime;\n\n    assert(candidate(6L)\
    \ == false);\n    assert(candidate(101L) == true);\n    assert(candidate(11L)\
    \ == true);\n    assert(candidate(13441L) == true);\n    assert(candidate(61L)\
    \ == true);\n    assert(candidate(4L) == false);\n    assert(candidate(1L) ==\
    \ false);\n    assert(candidate(5L) == true);\n    assert(candidate(11L) == true);\n\
    \    assert(candidate(17L) == true);\n    assert(candidate(85L) == false);\n \
    \   assert(candidate(77L) == false);\n    assert(candidate(255379L) == false);\n\
    }\nvoid main(){}"
  status: OK
  stderr: b''
  stdout: b''
- exit_code: 1
  program: "import std.math;\n/*\nReturn true if a given number is prime, and false\
    \ otherwise.\n    >>> is_prime(6L)\n    false\n    >>> is_prime(101L)\n    true\n\
    \    >>> is_prime(11L)\n    true\n    >>> is_prime(13441L)\n    true\n    >>>\
    \ is_prime(61L)\n    true\n    >>> is_prime(4L)\n    false\n    >>> is_prime(1L)\n\
    \    false\n    \n*/\nbool is_prime(long n) \n{\n    if (n < 2)\n        return\
    \ false;\n    if (n == 2)\n        return true;\n    if (n % 2 == 0)\n       \
    \ return false;\n    for (long i = 3; i <= sqrt(n); i += 2)\n    {\n        if\
    \ (n % i == 0)\n            return false;\n    }\n    return true;\n}\nunittest\n\
    {\n    alias candidate = is_prime;\n\n    assert(candidate(6L) == false);\n  \
    \  assert(candidate(101L) == true);\n    assert(candidate(11L) == true);\n   \
    \ assert(candidate(13441L) == true);\n    assert(candidate(61L) == true);\n  \
    \  assert(candidate(4L) == false);\n    assert(candidate(1L) == false);\n    assert(candidate(5L)\
    \ == true);\n    assert(candidate(11L) == true);\n    assert(candidate(17L) ==\
    \ true);\n    assert(candidate(85L) == false);\n    assert(candidate(77L) == false);\n\
    \    assert(candidate(255379L) == false);\n}\nvoid main(){}"
  status: SyntaxError
  stderr: 'b''/tmp/tmpv41ywrff.d(28): Error: `std.math.sqrt` called with argument
    types `(long)` matches both:\n/home/zi.ya/spack/opt/spack/linux-centos7-haswell/gcc-4.8.5/dmd-2.081.1-uf6xyx53fosvucuy7fkpiod2bnffx7of/linux/bin64/../../src/phobos/std/math.d(1848):     `std.math.sqrt(float
    x)`\nand:\n/home/zi.ya/spack/opt/spack/linux-centos7-haswell/gcc-4.8.5/dmd-2.081.1-uf6xyx53fosvucuy7fkpiod2bnffx7of/linux/bin64/../../src/phobos/std/math.d(1854):     `std.math.sqrt(real
    x)`\nFailed: ["dmd", "-unittest", "-v", "-o-", "/tmp/tmpv41ywrff.d", "-I/tmp"]\n'''
  stdout: b''
- exit_code: 1
  program: "import std.math;\n/*\nReturn true if a given number is prime, and false\
    \ otherwise.\n    >>> is_prime(6L)\n    false\n    >>> is_prime(101L)\n    true\n\
    \    >>> is_prime(11L)\n    true\n    >>> is_prime(13441L)\n    true\n    >>>\
    \ is_prime(61L)\n    true\n    >>> is_prime(4L)\n    false\n    >>> is_prime(1L)\n\
    \    false\n    \n*/\nbool is_prime(long n) \n{\n    if (n < 2) return false;\n\
    \    if (n == 2) return true;\n    if (n % 2 == 0) return false;\n    for (long\
    \ i = 3; i <= sqrt(n); i += 2)\n    {\n        if (n % i == 0) return false;\n\
    \    }\n    return true;\n}\nunittest\n{\n    alias candidate = is_prime;\n\n\
    \    assert(candidate(6L) == false);\n    assert(candidate(101L) == true);\n \
    \   assert(candidate(11L) == true);\n    assert(candidate(13441L) == true);\n\
    \    assert(candidate(61L) == true);\n    assert(candidate(4L) == false);\n  \
    \  assert(candidate(1L) == false);\n    assert(candidate(5L) == true);\n    assert(candidate(11L)\
    \ == true);\n    assert(candidate(17L) == true);\n    assert(candidate(85L) ==\
    \ false);\n    assert(candidate(77L) == false);\n    assert(candidate(255379L)\
    \ == false);\n}\nvoid main(){}"
  status: SyntaxError
  stderr: 'b''/tmp/tmpzgr134mq.d(25): Error: `std.math.sqrt` called with argument
    types `(long)` matches both:\n/home/zi.ya/spack/opt/spack/linux-centos7-haswell/gcc-4.8.5/dmd-2.081.1-uf6xyx53fosvucuy7fkpiod2bnffx7of/linux/bin64/../../src/phobos/std/math.d(1848):     `std.math.sqrt(float
    x)`\nand:\n/home/zi.ya/spack/opt/spack/linux-centos7-haswell/gcc-4.8.5/dmd-2.081.1-uf6xyx53fosvucuy7fkpiod2bnffx7of/linux/bin64/../../src/phobos/std/math.d(1854):     `std.math.sqrt(real
    x)`\nFailed: ["dmd", "-unittest", "-v", "-o-", "/tmp/tmpzgr134mq.d", "-I/tmp"]\n'''
  stdout: b''
- exit_code: 0
  program: "import std.math;\n/*\nReturn true if a given number is prime, and false\
    \ otherwise.\n    >>> is_prime(6L)\n    false\n    >>> is_prime(101L)\n    true\n\
    \    >>> is_prime(11L)\n    true\n    >>> is_prime(13441L)\n    true\n    >>>\
    \ is_prime(61L)\n    true\n    >>> is_prime(4L)\n    false\n    >>> is_prime(1L)\n\
    \    false\n    \n*/\nbool is_prime(long n) \n{\n    if (n <= 1) \n    {\n   \
    \     return false;\n    }\n    else if (n <= 3) \n    {\n        return true;\n\
    \    }\n    else if (n % 2 == 0 || n % 3 == 0) \n    {\n        return false;\n\
    \    }\n    else \n    {\n        long i = 5;\n        while (i * i <= n) \n \
    \       {\n            if (n % i == 0 || n % (i + 2) == 0) \n            {\n \
    \               return false;\n            }\n            i += 6;\n        }\n\
    \        return true;\n    }\n}\nunittest\n{\n    alias candidate = is_prime;\n\
    \n    assert(candidate(6L) == false);\n    assert(candidate(101L) == true);\n\
    \    assert(candidate(11L) == true);\n    assert(candidate(13441L) == true);\n\
    \    assert(candidate(61L) == true);\n    assert(candidate(4L) == false);\n  \
    \  assert(candidate(1L) == false);\n    assert(candidate(5L) == true);\n    assert(candidate(11L)\
    \ == true);\n    assert(candidate(17L) == true);\n    assert(candidate(85L) ==\
    \ false);\n    assert(candidate(77L) == false);\n    assert(candidate(255379L)\
    \ == false);\n}\nvoid main(){}"
  status: OK
  stderr: b''
  stdout: b''
- exit_code: 1
  program: "import std.math;\n/*\nReturn true if a given number is prime, and false\
    \ otherwise.\n    >>> is_prime(6L)\n    false\n    >>> is_prime(101L)\n    true\n\
    \    >>> is_prime(11L)\n    true\n    >>> is_prime(13441L)\n    true\n    >>>\
    \ is_prime(61L)\n    true\n    >>> is_prime(4L)\n    false\n    >>> is_prime(1L)\n\
    \    false\n    \n*/\nbool is_prime(long n) \n{\n    if (n < 2)\n        return\
    \ false;\n    if (n == 2)\n        return true;\n    if (n % 2 == 0)\n       \
    \ return false;\n    for (long i = 3; i <= sqrt(n); i += 2)\n    {\n        if\
    \ (n % i == 0)\n            return false;\n    }\n    return true;\n}\nunittest\n\
    {\n    alias candidate = is_prime;\n\n    assert(candidate(6L) == false);\n  \
    \  assert(candidate(101L) == true);\n    assert(candidate(11L) == true);\n   \
    \ assert(candidate(13441L) == true);\n    assert(candidate(61L) == true);\n  \
    \  assert(candidate(4L) == false);\n    assert(candidate(1L) == false);\n    assert(candidate(5L)\
    \ == true);\n    assert(candidate(11L) == true);\n    assert(candidate(17L) ==\
    \ true);\n    assert(candidate(85L) == false);\n    assert(candidate(77L) == false);\n\
    \    assert(candidate(255379L) == false);\n}\nvoid main(){}"
  status: SyntaxError
  stderr: 'b''/tmp/tmpv41ywrff.d(28): Error: `std.math.sqrt` called with argument
    types `(long)` matches both:\n/home/zi.ya/spack/opt/spack/linux-centos7-haswell/gcc-4.8.5/dmd-2.081.1-uf6xyx53fosvucuy7fkpiod2bnffx7of/linux/bin64/../../src/phobos/std/math.d(1848):     `std.math.sqrt(float
    x)`\nand:\n/home/zi.ya/spack/opt/spack/linux-centos7-haswell/gcc-4.8.5/dmd-2.081.1-uf6xyx53fosvucuy7fkpiod2bnffx7of/linux/bin64/../../src/phobos/std/math.d(1854):     `std.math.sqrt(real
    x)`\nFailed: ["dmd", "-unittest", "-v", "-o-", "/tmp/tmpv41ywrff.d", "-I/tmp"]\n'''
  stdout: b''
- exit_code: 0
  program: "import std.math;\n/*\nReturn true if a given number is prime, and false\
    \ otherwise.\n    >>> is_prime(6L)\n    false\n    >>> is_prime(101L)\n    true\n\
    \    >>> is_prime(11L)\n    true\n    >>> is_prime(13441L)\n    true\n    >>>\
    \ is_prime(61L)\n    true\n    >>> is_prime(4L)\n    false\n    >>> is_prime(1L)\n\
    \    false\n    \n*/\nbool is_prime(long n) \n{\n    if (n <= 1) return false;\n\
    \    if (n <= 3) return true;\n    if (n % 2 == 0 || n % 3 == 0) return false;\n\
    \    for (int i = 5; i * i <= n; i += 6)\n        if (n % i == 0 || n % (i + 2)\
    \ == 0)\n            return false;\n    return true;\n}\nunittest\n{\n    alias\
    \ candidate = is_prime;\n\n    assert(candidate(6L) == false);\n    assert(candidate(101L)\
    \ == true);\n    assert(candidate(11L) == true);\n    assert(candidate(13441L)\
    \ == true);\n    assert(candidate(61L) == true);\n    assert(candidate(4L) ==\
    \ false);\n    assert(candidate(1L) == false);\n    assert(candidate(5L) == true);\n\
    \    assert(candidate(11L) == true);\n    assert(candidate(17L) == true);\n  \
    \  assert(candidate(85L) == false);\n    assert(candidate(77L) == false);\n  \
    \  assert(candidate(255379L) == false);\n}\nvoid main(){}"
  status: OK
  stderr: b''
  stdout: b''
- exit_code: 1
  program: "import std.math;\n/*\nReturn true if a given number is prime, and false\
    \ otherwise.\n    >>> is_prime(6L)\n    false\n    >>> is_prime(101L)\n    true\n\
    \    >>> is_prime(11L)\n    true\n    >>> is_prime(13441L)\n    true\n    >>>\
    \ is_prime(61L)\n    true\n    >>> is_prime(4L)\n    false\n    >>> is_prime(1L)\n\
    \    false\n    \n*/\nbool is_prime(long n) \n{\n    if (n <= 1)\n        return\
    \ false;\n    if (n == 2)\n        return true;\n    if (n % 2 == 0)\n       \
    \ return false;\n    for (long i = 3; i <= sqrt(n); i += 2)\n    {\n        if\
    \ (n % i == 0)\n            return false;\n    }\n    return true;\n}\nunittest\n\
    {\n    alias candidate = is_prime;\n\n    assert(candidate(6L) == false);\n  \
    \  assert(candidate(101L) == true);\n    assert(candidate(11L) == true);\n   \
    \ assert(candidate(13441L) == true);\n    assert(candidate(61L) == true);\n  \
    \  assert(candidate(4L) == false);\n    assert(candidate(1L) == false);\n    assert(candidate(5L)\
    \ == true);\n    assert(candidate(11L) == true);\n    assert(candidate(17L) ==\
    \ true);\n    assert(candidate(85L) == false);\n    assert(candidate(77L) == false);\n\
    \    assert(candidate(255379L) == false);\n}\nvoid main(){}"
  status: SyntaxError
  stderr: 'b''/tmp/tmpyosprhwf.d(28): Error: `std.math.sqrt` called with argument
    types `(long)` matches both:\n/home/zi.ya/spack/opt/spack/linux-centos7-haswell/gcc-4.8.5/dmd-2.081.1-uf6xyx53fosvucuy7fkpiod2bnffx7of/linux/bin64/../../src/phobos/std/math.d(1848):     `std.math.sqrt(float
    x)`\nand:\n/home/zi.ya/spack/opt/spack/linux-centos7-haswell/gcc-4.8.5/dmd-2.081.1-uf6xyx53fosvucuy7fkpiod2bnffx7of/linux/bin64/../../src/phobos/std/math.d(1854):     `std.math.sqrt(real
    x)`\nFailed: ["dmd", "-unittest", "-v", "-o-", "/tmp/tmpyosprhwf.d", "-I/tmp"]\n'''
  stdout: b''
- exit_code: 1
  program: "import std.math;\n/*\nReturn true if a given number is prime, and false\
    \ otherwise.\n    >>> is_prime(6L)\n    false\n    >>> is_prime(101L)\n    true\n\
    \    >>> is_prime(11L)\n    true\n    >>> is_prime(13441L)\n    true\n    >>>\
    \ is_prime(61L)\n    true\n    >>> is_prime(4L)\n    false\n    >>> is_prime(1L)\n\
    \    false\n    \n*/\nbool is_prime(long n) \n{\n    if (n < 2)\n        return\
    \ false;\n    if (n == 2)\n        return true;\n    if (n % 2 == 0)\n       \
    \ return false;\n    for (long i = 3; i <= sqrt(n); i += 2)\n    {\n        if\
    \ (n % i == 0)\n            return false;\n    }\n    return true;\n}\nunittest\n\
    {\n    alias candidate = is_prime;\n\n    assert(candidate(6L) == false);\n  \
    \  assert(candidate(101L) == true);\n    assert(candidate(11L) == true);\n   \
    \ assert(candidate(13441L) == true);\n    assert(candidate(61L) == true);\n  \
    \  assert(candidate(4L) == false);\n    assert(candidate(1L) == false);\n    assert(candidate(5L)\
    \ == true);\n    assert(candidate(11L) == true);\n    assert(candidate(17L) ==\
    \ true);\n    assert(candidate(85L) == false);\n    assert(candidate(77L) == false);\n\
    \    assert(candidate(255379L) == false);\n}\nvoid main(){}"
  status: SyntaxError
  stderr: 'b''/tmp/tmpv41ywrff.d(28): Error: `std.math.sqrt` called with argument
    types `(long)` matches both:\n/home/zi.ya/spack/opt/spack/linux-centos7-haswell/gcc-4.8.5/dmd-2.081.1-uf6xyx53fosvucuy7fkpiod2bnffx7of/linux/bin64/../../src/phobos/std/math.d(1848):     `std.math.sqrt(float
    x)`\nand:\n/home/zi.ya/spack/opt/spack/linux-centos7-haswell/gcc-4.8.5/dmd-2.081.1-uf6xyx53fosvucuy7fkpiod2bnffx7of/linux/bin64/../../src/phobos/std/math.d(1854):     `std.math.sqrt(real
    x)`\nFailed: ["dmd", "-unittest", "-v", "-o-", "/tmp/tmpv41ywrff.d", "-I/tmp"]\n'''
  stdout: b''
- exit_code: 0
  program: "import std.math;\n/*\nReturn true if a given number is prime, and false\
    \ otherwise.\n    >>> is_prime(6L)\n    false\n    >>> is_prime(101L)\n    true\n\
    \    >>> is_prime(11L)\n    true\n    >>> is_prime(13441L)\n    true\n    >>>\
    \ is_prime(61L)\n    true\n    >>> is_prime(4L)\n    false\n    >>> is_prime(1L)\n\
    \    false\n    \n*/\nbool is_prime(long n) \n{\n    if (n <= 1)\n        return\
    \ false;\n    if (n <= 3)\n        return true;\n    if (n % 2 == 0 || n % 3 ==\
    \ 0)\n        return false;\n    for (long i = 5; i * i <= n; i = i + 6)\n   \
    \     if (n % i == 0 || n % (i + 2) == 0)\n            return false;\n    return\
    \ true;\n}\nunittest\n{\n    alias candidate = is_prime;\n\n    assert(candidate(6L)\
    \ == false);\n    assert(candidate(101L) == true);\n    assert(candidate(11L)\
    \ == true);\n    assert(candidate(13441L) == true);\n    assert(candidate(61L)\
    \ == true);\n    assert(candidate(4L) == false);\n    assert(candidate(1L) ==\
    \ false);\n    assert(candidate(5L) == true);\n    assert(candidate(11L) == true);\n\
    \    assert(candidate(17L) == true);\n    assert(candidate(85L) == false);\n \
    \   assert(candidate(77L) == false);\n    assert(candidate(255379L) == false);\n\
    }\nvoid main(){}"
  status: OK
  stderr: b''
  stdout: b''
- exit_code: 0
  program: "import std.math;\n/*\nReturn true if a given number is prime, and false\
    \ otherwise.\n    >>> is_prime(6L)\n    false\n    >>> is_prime(101L)\n    true\n\
    \    >>> is_prime(11L)\n    true\n    >>> is_prime(13441L)\n    true\n    >>>\
    \ is_prime(61L)\n    true\n    >>> is_prime(4L)\n    false\n    >>> is_prime(1L)\n\
    \    false\n    \n*/\nbool is_prime(long n) \n{\n    if (n <= 1)\n        return\
    \ false;\n    else if (n <= 3)\n        return true;\n    else if (n % 2 == 0\
    \ || n % 3 == 0)\n        return false;\n    else {\n        for (long i = 5;\
    \ i * i <= n; i += 6) {\n            if (n % i == 0 || n % (i + 2) == 0)\n   \
    \             return false;\n        }\n        return true;\n    }\n}\nunittest\n\
    {\n    alias candidate = is_prime;\n\n    assert(candidate(6L) == false);\n  \
    \  assert(candidate(101L) == true);\n    assert(candidate(11L) == true);\n   \
    \ assert(candidate(13441L) == true);\n    assert(candidate(61L) == true);\n  \
    \  assert(candidate(4L) == false);\n    assert(candidate(1L) == false);\n    assert(candidate(5L)\
    \ == true);\n    assert(candidate(11L) == true);\n    assert(candidate(17L) ==\
    \ true);\n    assert(candidate(85L) == false);\n    assert(candidate(77L) == false);\n\
    \    assert(candidate(255379L) == false);\n}\nvoid main(){}"
  status: OK
  stderr: b''
  stdout: b''
- exit_code: 1
  program: "import std.math;\n/*\nReturn true if a given number is prime, and false\
    \ otherwise.\n    >>> is_prime(6L)\n    false\n    >>> is_prime(101L)\n    true\n\
    \    >>> is_prime(11L)\n    true\n    >>> is_prime(13441L)\n    true\n    >>>\
    \ is_prime(61L)\n    true\n    >>> is_prime(4L)\n    false\n    >>> is_prime(1L)\n\
    \    false\n    \n*/\nbool is_prime(long n) \n{\n    if (n <= 1)\n        return\
    \ false;\n    if (n == 2)\n        return true;\n    if (n % 2 == 0)\n       \
    \ return false;\n    for (long i = 3; i <= sqrt(n); i += 2)\n    {\n        if\
    \ (n % i == 0)\n            return false;\n    }\n    return true;\n}\nunittest\n\
    {\n    alias candidate = is_prime;\n\n    assert(candidate(6L) == false);\n  \
    \  assert(candidate(101L) == true);\n    assert(candidate(11L) == true);\n   \
    \ assert(candidate(13441L) == true);\n    assert(candidate(61L) == true);\n  \
    \  assert(candidate(4L) == false);\n    assert(candidate(1L) == false);\n    assert(candidate(5L)\
    \ == true);\n    assert(candidate(11L) == true);\n    assert(candidate(17L) ==\
    \ true);\n    assert(candidate(85L) == false);\n    assert(candidate(77L) == false);\n\
    \    assert(candidate(255379L) == false);\n}\nvoid main(){}"
  status: SyntaxError
  stderr: 'b''/tmp/tmpyosprhwf.d(28): Error: `std.math.sqrt` called with argument
    types `(long)` matches both:\n/home/zi.ya/spack/opt/spack/linux-centos7-haswell/gcc-4.8.5/dmd-2.081.1-uf6xyx53fosvucuy7fkpiod2bnffx7of/linux/bin64/../../src/phobos/std/math.d(1848):     `std.math.sqrt(float
    x)`\nand:\n/home/zi.ya/spack/opt/spack/linux-centos7-haswell/gcc-4.8.5/dmd-2.081.1-uf6xyx53fosvucuy7fkpiod2bnffx7of/linux/bin64/../../src/phobos/std/math.d(1854):     `std.math.sqrt(real
    x)`\nFailed: ["dmd", "-unittest", "-v", "-o-", "/tmp/tmpyosprhwf.d", "-I/tmp"]\n'''
  stdout: b''
- exit_code: 0
  program: "import std.math;\n/*\nReturn true if a given number is prime, and false\
    \ otherwise.\n    >>> is_prime(6L)\n    false\n    >>> is_prime(101L)\n    true\n\
    \    >>> is_prime(11L)\n    true\n    >>> is_prime(13441L)\n    true\n    >>>\
    \ is_prime(61L)\n    true\n    >>> is_prime(4L)\n    false\n    >>> is_prime(1L)\n\
    \    false\n    \n*/\nbool is_prime(long n) \n{\n    if (n <= 1)\n        return\
    \ false;\n    else if (n <= 3)\n        return true;\n    else if (n % 2 == 0\
    \ || n % 3 == 0)\n        return false;\n    long i = 5;\n    while (i * i <=\
    \ n) {\n        if (n % i == 0 || n % (i + 2) == 0)\n            return false;\n\
    \        i += 6;\n    }\n    return true;\n}\nunittest\n{\n    alias candidate\
    \ = is_prime;\n\n    assert(candidate(6L) == false);\n    assert(candidate(101L)\
    \ == true);\n    assert(candidate(11L) == true);\n    assert(candidate(13441L)\
    \ == true);\n    assert(candidate(61L) == true);\n    assert(candidate(4L) ==\
    \ false);\n    assert(candidate(1L) == false);\n    assert(candidate(5L) == true);\n\
    \    assert(candidate(11L) == true);\n    assert(candidate(17L) == true);\n  \
    \  assert(candidate(85L) == false);\n    assert(candidate(77L) == false);\n  \
    \  assert(candidate(255379L) == false);\n}\nvoid main(){}"
  status: OK
  stderr: b''
  stdout: b''
- exit_code: 1
  program: "import std.math;\n/*\nReturn true if a given number is prime, and false\
    \ otherwise.\n    >>> is_prime(6L)\n    false\n    >>> is_prime(101L)\n    true\n\
    \    >>> is_prime(11L)\n    true\n    >>> is_prime(13441L)\n    true\n    >>>\
    \ is_prime(61L)\n    true\n    >>> is_prime(4L)\n    false\n    >>> is_prime(1L)\n\
    \    false\n    \n*/\nbool is_prime(long n) \n{\n    if (n < 2)\n        return\
    \ false;\n    if (n == 2)\n        return true;\n    if (n % 2 == 0)\n       \
    \ return false;\n    for (long i = 3; i <= sqrt(n); i += 2)\n    {\n        if\
    \ (n % i == 0)\n            return false;\n    }\n    return true;\n}\nunittest\n\
    {\n    alias candidate = is_prime;\n\n    assert(candidate(6L) == false);\n  \
    \  assert(candidate(101L) == true);\n    assert(candidate(11L) == true);\n   \
    \ assert(candidate(13441L) == true);\n    assert(candidate(61L) == true);\n  \
    \  assert(candidate(4L) == false);\n    assert(candidate(1L) == false);\n    assert(candidate(5L)\
    \ == true);\n    assert(candidate(11L) == true);\n    assert(candidate(17L) ==\
    \ true);\n    assert(candidate(85L) == false);\n    assert(candidate(77L) == false);\n\
    \    assert(candidate(255379L) == false);\n}\nvoid main(){}"
  status: SyntaxError
  stderr: 'b''/tmp/tmpv41ywrff.d(28): Error: `std.math.sqrt` called with argument
    types `(long)` matches both:\n/home/zi.ya/spack/opt/spack/linux-centos7-haswell/gcc-4.8.5/dmd-2.081.1-uf6xyx53fosvucuy7fkpiod2bnffx7of/linux/bin64/../../src/phobos/std/math.d(1848):     `std.math.sqrt(float
    x)`\nand:\n/home/zi.ya/spack/opt/spack/linux-centos7-haswell/gcc-4.8.5/dmd-2.081.1-uf6xyx53fosvucuy7fkpiod2bnffx7of/linux/bin64/../../src/phobos/std/math.d(1854):     `std.math.sqrt(real
    x)`\nFailed: ["dmd", "-unittest", "-v", "-o-", "/tmp/tmpv41ywrff.d", "-I/tmp"]\n'''
  stdout: b''
- exit_code: 0
  program: "import std.math;\n/*\nReturn true if a given number is prime, and false\
    \ otherwise.\n    >>> is_prime(6L)\n    false\n    >>> is_prime(101L)\n    true\n\
    \    >>> is_prime(11L)\n    true\n    >>> is_prime(13441L)\n    true\n    >>>\
    \ is_prime(61L)\n    true\n    >>> is_prime(4L)\n    false\n    >>> is_prime(1L)\n\
    \    false\n    \n*/\nbool is_prime(long n) \n{\n    if (n <= 1)\n        return\
    \ false;\n    if (n <= 3)\n        return true;\n    if (n % 2 == 0 || n % 3 ==\
    \ 0)\n        return false;\n    for (long i = 5; i * i <= n; i = i + 6)\n   \
    \     if (n % i == 0 || n % (i + 2) == 0)\n            return false;\n    return\
    \ true;\n}\nunittest\n{\n    alias candidate = is_prime;\n\n    assert(candidate(6L)\
    \ == false);\n    assert(candidate(101L) == true);\n    assert(candidate(11L)\
    \ == true);\n    assert(candidate(13441L) == true);\n    assert(candidate(61L)\
    \ == true);\n    assert(candidate(4L) == false);\n    assert(candidate(1L) ==\
    \ false);\n    assert(candidate(5L) == true);\n    assert(candidate(11L) == true);\n\
    \    assert(candidate(17L) == true);\n    assert(candidate(85L) == false);\n \
    \   assert(candidate(77L) == false);\n    assert(candidate(255379L) == false);\n\
    }\nvoid main(){}"
  status: OK
  stderr: b''
  stdout: b''
- exit_code: 1
  program: "import std.math;\n/*\nReturn true if a given number is prime, and false\
    \ otherwise.\n    >>> is_prime(6L)\n    false\n    >>> is_prime(101L)\n    true\n\
    \    >>> is_prime(11L)\n    true\n    >>> is_prime(13441L)\n    true\n    >>>\
    \ is_prime(61L)\n    true\n    >>> is_prime(4L)\n    false\n    >>> is_prime(1L)\n\
    \    false\n    \n*/\nbool is_prime(long n) \n{\n    if (n <= 1)\n        return\
    \ false;\n    if (n == 2)\n        return true;\n    if (n % 2 == 0)\n       \
    \ return false;\n    for (long i = 3; i <= sqrt(n); i += 2)\n    {\n        if\
    \ (n % i == 0)\n            return false;\n    }\n    return true;\n}\nunittest\n\
    {\n    alias candidate = is_prime;\n\n    assert(candidate(6L) == false);\n  \
    \  assert(candidate(101L) == true);\n    assert(candidate(11L) == true);\n   \
    \ assert(candidate(13441L) == true);\n    assert(candidate(61L) == true);\n  \
    \  assert(candidate(4L) == false);\n    assert(candidate(1L) == false);\n    assert(candidate(5L)\
    \ == true);\n    assert(candidate(11L) == true);\n    assert(candidate(17L) ==\
    \ true);\n    assert(candidate(85L) == false);\n    assert(candidate(77L) == false);\n\
    \    assert(candidate(255379L) == false);\n}\nvoid main(){}"
  status: SyntaxError
  stderr: 'b''/tmp/tmpyosprhwf.d(28): Error: `std.math.sqrt` called with argument
    types `(long)` matches both:\n/home/zi.ya/spack/opt/spack/linux-centos7-haswell/gcc-4.8.5/dmd-2.081.1-uf6xyx53fosvucuy7fkpiod2bnffx7of/linux/bin64/../../src/phobos/std/math.d(1848):     `std.math.sqrt(float
    x)`\nand:\n/home/zi.ya/spack/opt/spack/linux-centos7-haswell/gcc-4.8.5/dmd-2.081.1-uf6xyx53fosvucuy7fkpiod2bnffx7of/linux/bin64/../../src/phobos/std/math.d(1854):     `std.math.sqrt(real
    x)`\nFailed: ["dmd", "-unittest", "-v", "-o-", "/tmp/tmpyosprhwf.d", "-I/tmp"]\n'''
  stdout: b''

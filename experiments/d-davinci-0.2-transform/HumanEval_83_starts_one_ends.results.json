{
  "language": "d",
  "name": "HumanEval_83_starts_one_ends",
  "results": [
    {
      "exit_code": 1,
      "program": "import std.typecons;\nimport std.math;\n/*\n\n    Given a positive integer n, return the count of the numbers of n-digit\n    positive integers that start or end with 1.\n    \n*/\nlong starts_one_ends(long n) \n{\n    long count = 0;\n    long start = 1;\n    long end = 1;\n    long i = 0;\n    long j = 0;\n    long k = 0;\n    long l = 0;\n    long m = 0;\n    long p = 0;\n    long q = 0;\n    long r = 0;\n    long s = 0;\n    long t = 0;\n    long u = 0;\n    long v = 0;\n    long w = 0;\n    long x = 0;\n    long y = 0;\n    long z = 0;\n    long a = 0;\n    long b = 0;\n    long c = 0;\n    long d = 0;\n    long e = 0;\n    long f = 0;\n    long g = 0;\n    long h = 0;\n    long ii = 0;\n    long jj = 0;\n    long kk = 0;\n    long ll = 0;\n    long mm = 0;\n    long pp = 0;\n    long qq = 0;\n    long rr = 0;\n    long ss = 0;\n    long tt = 0;\n    long uu = 0;\n    long vv = 0;\n    long ww = 0;\n    long xx = 0;\n    long yy = 0;\n    long zz = 0;\n    long aa = 0;\n    long bb = 0;\n    long cc = 0;\n    long dd = 0;\n    long ee = 0;\n    long ff = 0;\n    long gg = 0;\n    long hh = 0;\n    long iii = 0;\n    long jjj = 0;\n    long kkk = 0;\n    long lll = 0;\n    long mmm = 0;\n    long ppp = 0;\n    long qqq = 0;\n    long rrr = 0;\n    long sss = 0;\n    long ttt = 0;\n    long uuu = 0;\n    long vvv = 0;\n    long www = 0;\n    long xxx = 0;\n    long yyy = 0;\n    long zzz = 0;\n    long aaaa = 0;\n    long b\nunittest\n{\n    alias candidate = starts_one_ends;\n\n    assert(candidate(1L) == 1L);\n    assert(candidate(2L) == 18L);\n    assert(candidate(3L) == 180L);\n    assert(candidate(4L) == 1800L);\n    assert(candidate(5L) == 18000L);\n}\nvoid main(){}",
      "status": "SyntaxError",
      "stderr": "/tmp/tmpxi15lo96.d(80): Error: semicolon expected, not `unittest`\n/tmp/tmpxi15lo96.d(80): Error: found `unittest` instead of statement\nFailed: [\"dmd\", \"-unittest\", \"-v\", \"-o-\", \"/tmp/tmpxi15lo96.d\", \"-I/tmp\"]\n",
      "stdout": "",
      "timestamp": 1660164103
    },
    {
      "exit_code": 1,
      "program": "import std.typecons;\nimport std.math;\n/*\n\n    Given a positive integer n, return the count of the numbers of n-digit\n    positive integers that start or end with 1.\n    \n*/\nlong starts_one_ends(long n) \n{\n    long result = 0;\n    long start = 1;\n    long end = 1;\n    for (long i = 0; i < n; i++) {\n        start *= 10;\n        end *= 10;\n    }\n    end -= 1;\n    for (long i = start; i <= end; i++) {\n        if (i % 10 == 1 || i / 10 == 1) {\n            result++;\n        }\n    }\n    return result;\n}\nunittest\n{\n    alias candidate = starts_one_ends;\n\n    assert(candidate(1L) == 1L);\n    assert(candidate(2L) == 18L);\n    assert(candidate(3L) == 180L);\n    assert(candidate(4L) == 1800L);\n    assert(candidate(5L) == 18000L);\n}\nvoid main(){}",
      "status": "Exception",
      "stderr": "core.exception.AssertError@/tmp/tmpaeqg2ntj.d(30): unittest failure\n----------------\n??:? _d_unittestp [0x427de5]\n??:? void tmpaeqg2ntj.__unittest_L26_C1() [0x427ac4]\n??:? void tmpaeqg2ntj.__modtest() [0x427b64]\n??:? int core.runtime.runModuleUnitTests().__foreachbody2(object.ModuleInfo*) [0x42bb0b]\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)).__lambda2(immutable(object.ModuleInfo*)) [0x42a99e]\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))).__foreachbody2(ref rt.sections_elf_shared.DSO) [0x42fb31]\n??:? int rt.sections_elf_shared.DSO.opApply(scope int delegate(ref rt.sections_elf_shared.DSO)) [0x42ffe0]\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))) [0x42fabd]\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)) [0x42a975]\n??:? runModuleUnitTests [0x42b8e1]\n??:? void rt.dmain2._d_run_main(int, char**, extern (C) int function(char[][])*).runAll() [0x428234]\n??:? void rt.dmain2._d_r",
      "stdout": "",
      "timestamp": 1660164103
    },
    {
      "exit_code": 1,
      "program": "import std.typecons;\nimport std.math;\n/*\n\n    Given a positive integer n, return the count of the numbers of n-digit\n    positive integers that start or end with 1.\n    \n*/\nlong starts_one_ends(long n) \n{\n    long res = 0;\n    for (long i = 1; i <= n; i++) \n    {\n        res += pow(10, i - 1);\n    }\n    return res;\n}\nunittest\n{\n    alias candidate = starts_one_ends;\n\n    assert(candidate(1L) == 1L);\n    assert(candidate(2L) == 18L);\n    assert(candidate(3L) == 180L);\n    assert(candidate(4L) == 1800L);\n    assert(candidate(5L) == 18000L);\n}\nvoid main(){}",
      "status": "Exception",
      "stderr": "core.exception.AssertError@/tmp/tmpcl6luqra.d(23): unittest failure\n----------------\n??:? _d_unittestp [0x427e85]\n??:? void tmpcl6luqra.__unittest_L18_C1() [0x427ad1]\n??:? void tmpcl6luqra.__modtest() [0x427c08]\n??:? int core.runtime.runModuleUnitTests().__foreachbody2(object.ModuleInfo*) [0x42bbab]\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)).__lambda2(immutable(object.ModuleInfo*)) [0x42aa3e]\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))).__foreachbody2(ref rt.sections_elf_shared.DSO) [0x42fbd1]\n??:? int rt.sections_elf_shared.DSO.opApply(scope int delegate(ref rt.sections_elf_shared.DSO)) [0x430080]\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))) [0x42fb5d]\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)) [0x42aa15]\n??:? runModuleUnitTests [0x42b981]\n??:? void rt.dmain2._d_run_main(int, char**, extern (C) int function(char[][])*).runAll() [0x4282d4]\n??:? void rt.dmain2._d_r",
      "stdout": "",
      "timestamp": 1660164103
    },
    {
      "exit_code": 1,
      "program": "import std.typecons;\nimport std.math;\n/*\n\n    Given a positive integer n, return the count of the numbers of n-digit\n    positive integers that start or end with 1.\n    \n*/\nlong starts_one_ends(long n) \n{\n    long result = 0;\n    long start = 1;\n    long end = 1;\n    for (long i = 1; i < n; i++) {\n        start *= 10;\n        end *= 10;\n    }\n    end += 1;\n    result = end - start;\n    return result;\n}\nunittest\n{\n    alias candidate = starts_one_ends;\n\n    assert(candidate(1L) == 1L);\n    assert(candidate(2L) == 18L);\n    assert(candidate(3L) == 180L);\n    assert(candidate(4L) == 1800L);\n    assert(candidate(5L) == 18000L);\n}\nvoid main(){}",
      "status": "Exception",
      "stderr": "core.exception.AssertError@/tmp/tmpfce4bb54.d(27): unittest failure\n----------------\n??:? _d_unittestp [0x427d9d]\n??:? void tmpfce4bb54.__unittest_L22_C1() [0x427aa1]\n??:? void tmpfce4bb54.__modtest() [0x427b20]\n??:? int core.runtime.runModuleUnitTests().__foreachbody2(object.ModuleInfo*) [0x42bac3]\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)).__lambda2(immutable(object.ModuleInfo*)) [0x42a956]\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))).__foreachbody2(ref rt.sections_elf_shared.DSO) [0x42fae9]\n??:? int rt.sections_elf_shared.DSO.opApply(scope int delegate(ref rt.sections_elf_shared.DSO)) [0x42ff98]\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))) [0x42fa75]\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)) [0x42a92d]\n??:? runModuleUnitTests [0x42b899]\n??:? void rt.dmain2._d_run_main(int, char**, extern (C) int function(char[][])*).runAll() [0x4281ec]\n??:? void rt.dmain2._d_r",
      "stdout": "",
      "timestamp": 1660164103
    },
    {
      "exit_code": 1,
      "program": "import std.typecons;\nimport std.math;\n/*\n\n    Given a positive integer n, return the count of the numbers of n-digit\n    positive integers that start or end with 1.\n    \n*/\nlong starts_one_ends(long n) \n{\n    long count = 0;\n    long start = 1;\n    long end = 1;\n    long i = 0;\n    long j = 0;\n    long k = 0;\n    long l = 0;\n    long m = 0;\n    long o = 0;\n    long p = 0;\n    long q = 0;\n    long r = 0;\n    long s = 0;\n    long t = 0;\n    long u = 0;\n    long v = 0;\n    long w = 0;\n    long x = 0;\n    long y = 0;\n    long z = 0;\n    long aa = 0;\n    long ab = 0;\n    long ac = 0;\n    long ad = 0;\n    long ae = 0;\n    long af = 0;\n    long ag = 0;\n    long ah = 0;\n    long ai = 0;\n    long aj = 0;\n    long ak = 0;\n    long al = 0;\n    long am = 0;\n    long an = 0;\n    long ao = 0;\n    long ap = 0;\n    long aq = 0;\n    long ar = 0;\n    long as = 0;\n    long at = 0;\n    long au = 0;\n    long av = 0;\n    long aw = 0;\n    long ax = 0;\n    long ay = 0;\n    long az = 0;\n    long ba = 0;\n    long bb = 0;\n    long bc = 0;\n    long bd = 0;\n    long be = 0;\n    long bf = 0;\n    long bg = 0;\n    long bh = 0;\n    long bi = 0;\n    long bj = 0;\n    long bk = 0;\n    long bl = 0;\n    long bm = 0;\n    long bn = 0;\n    long bo = 0;\n    long bp = 0;\n    long bq = 0;\n    long br = 0;\n    long bs = 0;\n    long bt = 0;\n    long bu = 0;\n    long bv = 0;\n    long bw = 0;\n    long bx =\nunittest\n{\n    alias candidate = starts_one_ends;\n\n    assert(candidate(1L) == 1L);\n    assert(candidate(2L) == 18L);\n    assert(candidate(3L) == 180L);\n    assert(candidate(4L) == 1800L);\n    assert(candidate(5L) == 18000L);\n}\nvoid main(){}",
      "status": "SyntaxError",
      "stderr": "/tmp/tmp3_c2qah_.d(81): Error: expression expected, not `unittest`\n/tmp/tmp3_c2qah_.d(82): Error: semicolon expected, not `{`\n/tmp/tmp3_c2qah_.d(91): Error: found `End of File` when expecting `}` following compound statement\nFailed: [\"dmd\", \"-unittest\", \"-v\", \"-o-\", \"/tmp/tmp3_c2qah_.d\", \"-I/tmp\"]\n",
      "stdout": "",
      "timestamp": 1660164102
    },
    {
      "exit_code": 1,
      "program": "import std.typecons;\nimport std.math;\n/*\n\n    Given a positive integer n, return the count of the numbers of n-digit\n    positive integers that start or end with 1.\n    \n*/\nlong starts_one_ends(long n) \n{\n    long count = 0;\n    long start = 1;\n    long end = 1;\n    for (long i = 0; i < n; i++) {\n        start *= 10;\n        end *= 10;\n    }\n    start /= 10;\n    end -= 1;\n    count = end - start + 1;\n    return count;\n}\nunittest\n{\n    alias candidate = starts_one_ends;\n\n    assert(candidate(1L) == 1L);\n    assert(candidate(2L) == 18L);\n    assert(candidate(3L) == 180L);\n    assert(candidate(4L) == 1800L);\n    assert(candidate(5L) == 18000L);\n}\nvoid main(){}",
      "status": "Exception",
      "stderr": "core.exception.AssertError@/tmp/tmpb8pq1bx5.d(27): unittest failure\n----------------\n??:? _d_unittestp [0x427dad]\n??:? void tmpb8pq1bx5.__unittest_L23_C1() [0x427a90]\n??:? void tmpb8pq1bx5.__modtest() [0x427b30]\n??:? int core.runtime.runModuleUnitTests().__foreachbody2(object.ModuleInfo*) [0x42bad3]\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)).__lambda2(immutable(object.ModuleInfo*)) [0x42a966]\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))).__foreachbody2(ref rt.sections_elf_shared.DSO) [0x42faf9]\n??:? int rt.sections_elf_shared.DSO.opApply(scope int delegate(ref rt.sections_elf_shared.DSO)) [0x42ffa8]\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))) [0x42fa85]\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)) [0x42a93d]\n??:? runModuleUnitTests [0x42b8a9]\n??:? void rt.dmain2._d_run_main(int, char**, extern (C) int function(char[][])*).runAll() [0x4281fc]\n??:? void rt.dmain2._d_r",
      "stdout": "",
      "timestamp": 1660164103
    },
    {
      "exit_code": 1,
      "program": "import std.typecons;\nimport std.math;\n/*\n\n    Given a positive integer n, return the count of the numbers of n-digit\n    positive integers that start or end with 1.\n    \n*/\nlong starts_one_ends(long n) \n{\n    if (n == 1)\n        return 2;\n    else\n        return pow(10, n - 1) + pow(10, n - 2);\n}\nunittest\n{\n    alias candidate = starts_one_ends;\n\n    assert(candidate(1L) == 1L);\n    assert(candidate(2L) == 18L);\n    assert(candidate(3L) == 180L);\n    assert(candidate(4L) == 1800L);\n    assert(candidate(5L) == 18000L);\n}\nvoid main(){}",
      "status": "Exception",
      "stderr": "core.exception.AssertError@/tmp/tmpg497lo4k.d(20): unittest failure\n----------------\n??:? _d_unittestp [0x427e8d]\n??:? void tmpg497lo4k.__unittest_L16_C1() [0x427ab8]\n??:? void tmpg497lo4k.__modtest() [0x427c10]\n??:? int core.runtime.runModuleUnitTests().__foreachbody2(object.ModuleInfo*) [0x42bbb3]\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)).__lambda2(immutable(object.ModuleInfo*)) [0x42aa46]\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))).__foreachbody2(ref rt.sections_elf_shared.DSO) [0x42fbd9]\n??:? int rt.sections_elf_shared.DSO.opApply(scope int delegate(ref rt.sections_elf_shared.DSO)) [0x430088]\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))) [0x42fb65]\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)) [0x42aa1d]\n??:? runModuleUnitTests [0x42b989]\n??:? void rt.dmain2._d_run_main(int, char**, extern (C) int function(char[][])*).runAll() [0x4282dc]\n??:? void rt.dmain2._d_r",
      "stdout": "",
      "timestamp": 1660164103
    },
    {
      "exit_code": 1,
      "program": "import std.typecons;\nimport std.math;\n/*\n\n    Given a positive integer n, return the count of the numbers of n-digit\n    positive integers that start or end with 1.\n    \n*/\nlong starts_one_ends(long n) \n{\n    long result = 0;\n    if (n == 1)\n        return 1;\n    else if (n == 2)\n        return 10;\n    else\n    {\n        result = starts_one_ends(n - 1) + starts_one_ends(n - 2);\n        return result;\n    }\n}\nunittest\n{\n    alias candidate = starts_one_ends;\n\n    assert(candidate(1L) == 1L);\n    assert(candidate(2L) == 18L);\n    assert(candidate(3L) == 180L);\n    assert(candidate(4L) == 1800L);\n    assert(candidate(5L) == 18000L);\n}\nvoid main(){}",
      "status": "Exception",
      "stderr": "core.exception.AssertError@/tmp/tmporr6vw0j.d(27): unittest failure\n----------------\n??:? _d_unittestp [0x427d9d]\n??:? void tmporr6vw0j.__unittest_L22_C1() [0x427a9d]\n??:? void tmporr6vw0j.__modtest() [0x427b1c]\n??:? int core.runtime.runModuleUnitTests().__foreachbody2(object.ModuleInfo*) [0x42bac3]\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)).__lambda2(immutable(object.ModuleInfo*)) [0x42a956]\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))).__foreachbody2(ref rt.sections_elf_shared.DSO) [0x42fae9]\n??:? int rt.sections_elf_shared.DSO.opApply(scope int delegate(ref rt.sections_elf_shared.DSO)) [0x42ff98]\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))) [0x42fa75]\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)) [0x42a92d]\n??:? runModuleUnitTests [0x42b899]\n??:? void rt.dmain2._d_run_main(int, char**, extern (C) int function(char[][])*).runAll() [0x4281ec]\n??:? void rt.dmain2._d_r",
      "stdout": "",
      "timestamp": 1660164103
    },
    {
      "exit_code": 1,
      "program": "import std.typecons;\nimport std.math;\n/*\n\n    Given a positive integer n, return the count of the numbers of n-digit\n    positive integers that start or end with 1.\n    \n*/\nlong starts_one_ends(long n) \n{\n    long count = 0;\n    long start = 1;\n    long end = 1;\n    for (long i = 0; i < n; i++) {\n        start *= 10;\n        end *= 10;\n    }\n    for (long i = start; i < end; i++) {\n        if (i % 10 == 1 || i / 10 == 1) {\n            count++;\n        }\n    }\n    return count;\n}\nunittest\n{\n    alias candidate = starts_one_ends;\n\n    assert(candidate(1L) == 1L);\n    assert(candidate(2L) == 18L);\n    assert(candidate(3L) == 180L);\n    assert(candidate(4L) == 1800L);\n    assert(candidate(5L) == 18000L);\n}\nvoid main(){}",
      "status": "Exception",
      "stderr": "core.exception.AssertError@/tmp/tmpoh3b4xbv.d(29): unittest failure\n----------------\n??:? _d_unittestp [0x427ddd]\n??:? void tmpoh3b4xbv.__unittest_L25_C1() [0x427ac0]\n??:? void tmpoh3b4xbv.__modtest() [0x427b60]\n??:? int core.runtime.runModuleUnitTests().__foreachbody2(object.ModuleInfo*) [0x42bb03]\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)).__lambda2(immutable(object.ModuleInfo*)) [0x42a996]\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))).__foreachbody2(ref rt.sections_elf_shared.DSO) [0x42fb29]\n??:? int rt.sections_elf_shared.DSO.opApply(scope int delegate(ref rt.sections_elf_shared.DSO)) [0x42ffd8]\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))) [0x42fab5]\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)) [0x42a96d]\n??:? runModuleUnitTests [0x42b8d9]\n??:? void rt.dmain2._d_run_main(int, char**, extern (C) int function(char[][])*).runAll() [0x42822c]\n??:? void rt.dmain2._d_r",
      "stdout": "",
      "timestamp": 1660164103
    },
    {
      "exit_code": 1,
      "program": "import std.typecons;\nimport std.math;\n/*\n\n    Given a positive integer n, return the count of the numbers of n-digit\n    positive integers that start or end with 1.\n    \n*/\nlong starts_one_ends(long n) \n{\n    long result = 0;\n    if (n == 1)\n        return 1;\n    if (n == 2)\n        return 10;\n    if (n == 3)\n        return 100;\n    if (n == 4)\n        return 1000;\n    if (n == 5)\n        return 10000;\n    if (n == 6)\n        return 100000;\n    if (n == 7)\n        return 1000000;\n    if (n == 8)\n        return 10000000;\n    if (n == 9)\n        return 100000000;\n    if (n == 10)\n        return 1000000000;\n    if (n == 11)\n        return 10000000000;\n    if (n == 12)\n        return 100000000000;\n    if (n == 13)\n        return 1000000000000;\n    if (n == 14)\n        return 10000000000000;\n    if (n == 15)\n        return 100000000000000;\n    if (n == 16)\n        return 1000000000000000;\n    if (n == 17)\n        return 10000000000000000;\n    if (n == 18)\n        return 100000000000000000;\n    if (n == 19)\n        return 1000000000000000000;\n    if (n == 20)\n        return 10000000000000000000;\n    if (n == 21)\n        return 100000000000000000000;\n    if (n == 22)\n        return 1000000000000000000000;\n    if (n == 23)\n        return 10000000000000000000000;\n    if (n == 24)\n        return 100000000000000000000000;\n    if (n == 25)\n        return 1000000000000000000000000;\n    if (n == 26)\n        return 10000000000000000000000000;\n    if (n == 27)\n        return 100000000000000000000000000;\n    if (n == 28)\n        return 1000000000000000000000000000;\n    if (n == 29)\n        return 10000000000000000000000000000;\n    if (n == 30)\n        return 100000000000000000000000000000;\n    if (n == 31)\n        return 1000000000000000000000000000000;\n    if (n == 32)\n        return 10000000000000000000000000000000;\n    if (n == 33)\n        return 100000000000000000000000000000000;\n    if (n == 34)\n        return 1000000000000000000000000000000000;\n   \nunittest\n{\n    alias candidate = starts_one_ends;\n\n    assert(candidate(1L) == 1L);\n    assert(candidate(2L) == 18L);\n    assert(candidate(3L) == 180L);\n    assert(candidate(4L) == 1800L);\n    assert(candidate(5L) == 18000L);\n}\nvoid main(){}",
      "status": "SyntaxError",
      "stderr": "/tmp/tmpe_0_nl4p.d(51): Error: signed integer overflow\n/tmp/tmpe_0_nl4p.d(53): Error: integer overflow\n/tmp/tmpe_0_nl4p.d(55): Error: integer overflow\n/tmp/tmpe_0_nl4p.d(57): Error: integer overflow\n/tmp/tmpe_0_nl4p.d(59): Error: integer overflow\n/tmp/tmpe_0_nl4p.d(61): Error: integer overflow\n/tmp/tmpe_0_nl4p.d(63): Error: integer overflow\n/tmp/tmpe_0_nl4p.d(65): Error: integer overflow\n/tmp/tmpe_0_nl4p.d(67): Error: integer overflow\n/tmp/tmpe_0_nl4p.d(69): Error: integer overflow\n/tmp/tmpe_0_nl4p.d(71): Error: integer overflow\n/tmp/tmpe_0_nl4p.d(73): Error: integer overflow\n/tmp/tmpe_0_nl4p.d(75): Error: integer overflow\n/tmp/tmpe_0_nl4p.d(77): Error: integer overflow\n/tmp/tmpe_0_nl4p.d(79): Error: integer overflow\n/tmp/tmpe_0_nl4p.d(81): Error: found `unittest` instead of statement\nFailed: [\"dmd\", \"-unittest\", \"-v\", \"-o-\", \"/tmp/tmpe_0_nl4p.d\", \"-I/tmp\"]\n",
      "stdout": "",
      "timestamp": 1660164103
    },
    {
      "exit_code": 1,
      "program": "import std.typecons;\nimport std.math;\n/*\n\n    Given a positive integer n, return the count of the numbers of n-digit\n    positive integers that start or end with 1.\n    \n*/\nlong starts_one_ends(long n) \n{\n    long count = 0;\n    long start = 1;\n    long end = 1;\n    for (long i = 1; i < n; i++) {\n        start *= 10;\n        end *= 10;\n    }\n    end += 1;\n    for (long i = start; i < end; i++) {\n        if (i % 10 == 1) {\n            count++;\n        }\n    }\n    return count;\n}\nunittest\n{\n    alias candidate = starts_one_ends;\n\n    assert(candidate(1L) == 1L);\n    assert(candidate(2L) == 18L);\n    assert(candidate(3L) == 180L);\n    assert(candidate(4L) == 1800L);\n    assert(candidate(5L) == 18000L);\n}\nvoid main(){}",
      "status": "Exception",
      "stderr": "core.exception.AssertError@/tmp/tmpkdy6jw0_.d(31): unittest failure\n----------------\n??:? _d_unittestp [0x427dd5]\n??:? void tmpkdy6jw0_.__unittest_L26_C1() [0x427ad5]\n??:? void tmpkdy6jw0_.__modtest() [0x427b54]\n??:? int core.runtime.runModuleUnitTests().__foreachbody2(object.ModuleInfo*) [0x42bafb]\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)).__lambda2(immutable(object.ModuleInfo*)) [0x42a98e]\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))).__foreachbody2(ref rt.sections_elf_shared.DSO) [0x42fb21]\n??:? int rt.sections_elf_shared.DSO.opApply(scope int delegate(ref rt.sections_elf_shared.DSO)) [0x42ffd0]\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))) [0x42faad]\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)) [0x42a965]\n??:? runModuleUnitTests [0x42b8d1]\n??:? void rt.dmain2._d_run_main(int, char**, extern (C) int function(char[][])*).runAll() [0x428224]\n??:? void rt.dmain2._d_r",
      "stdout": "",
      "timestamp": 1660164103
    },
    {
      "exit_code": 1,
      "program": "import std.typecons;\nimport std.math;\n/*\n\n    Given a positive integer n, return the count of the numbers of n-digit\n    positive integers that start or end with 1.\n    \n*/\nlong starts_one_ends(long n) \n{\n    long count = 0;\n    long start = 1;\n    long end = 1;\n    for (long i = 0; i < n; i++) {\n        start *= 10;\n        end *= 10;\n    }\n    for (long i = start; i < end; i++) {\n        if (i % 10 == 1 || i / start == 1) {\n            count++;\n        }\n    }\n    return count;\n}\nunittest\n{\n    alias candidate = starts_one_ends;\n\n    assert(candidate(1L) == 1L);\n    assert(candidate(2L) == 18L);\n    assert(candidate(3L) == 180L);\n    assert(candidate(4L) == 1800L);\n    assert(candidate(5L) == 18000L);\n}\nvoid main(){}",
      "status": "Exception",
      "stderr": "core.exception.AssertError@/tmp/tmp6yi8ek96.d(29): unittest failure\n----------------\n??:? _d_unittestp [0x427ddd]\n??:? void tmp6yi8ek96.__unittest_L25_C1() [0x427ac0]\n??:? void tmp6yi8ek96.__modtest() [0x427b60]\n??:? int core.runtime.runModuleUnitTests().__foreachbody2(object.ModuleInfo*) [0x42bb03]\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)).__lambda2(immutable(object.ModuleInfo*)) [0x42a996]\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))).__foreachbody2(ref rt.sections_elf_shared.DSO) [0x42fb29]\n??:? int rt.sections_elf_shared.DSO.opApply(scope int delegate(ref rt.sections_elf_shared.DSO)) [0x42ffd8]\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))) [0x42fab5]\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)) [0x42a96d]\n??:? runModuleUnitTests [0x42b8d9]\n??:? void rt.dmain2._d_run_main(int, char**, extern (C) int function(char[][])*).runAll() [0x42822c]\n??:? void rt.dmain2._d_r",
      "stdout": "",
      "timestamp": 1660164103
    },
    {
      "exit_code": 1,
      "program": "import std.typecons;\nimport std.math;\n/*\n\n    Given a positive integer n, return the count of the numbers of n-digit\n    positive integers that start or end with 1.\n    \n*/\nlong starts_one_ends(long n) \n{\n    long result = 0;\n    if (n == 1)\n        return 1;\n    else if (n == 2)\n        return 10;\n    else\n    {\n        result = starts_one_ends(n - 1) + starts_one_ends(n - 2);\n        return result;\n    }\n}\nunittest\n{\n    alias candidate = starts_one_ends;\n\n    assert(candidate(1L) == 1L);\n    assert(candidate(2L) == 18L);\n    assert(candidate(3L) == 180L);\n    assert(candidate(4L) == 1800L);\n    assert(candidate(5L) == 18000L);\n}\nvoid main(){}",
      "status": "Exception",
      "stderr": "core.exception.AssertError@/tmp/tmporr6vw0j.d(27): unittest failure\n----------------\n??:? _d_unittestp [0x427d9d]\n??:? void tmporr6vw0j.__unittest_L22_C1() [0x427a9d]\n??:? void tmporr6vw0j.__modtest() [0x427b1c]\n??:? int core.runtime.runModuleUnitTests().__foreachbody2(object.ModuleInfo*) [0x42bac3]\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)).__lambda2(immutable(object.ModuleInfo*)) [0x42a956]\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))).__foreachbody2(ref rt.sections_elf_shared.DSO) [0x42fae9]\n??:? int rt.sections_elf_shared.DSO.opApply(scope int delegate(ref rt.sections_elf_shared.DSO)) [0x42ff98]\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))) [0x42fa75]\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)) [0x42a92d]\n??:? runModuleUnitTests [0x42b899]\n??:? void rt.dmain2._d_run_main(int, char**, extern (C) int function(char[][])*).runAll() [0x4281ec]\n??:? void rt.dmain2._d_r",
      "stdout": "",
      "timestamp": 1660164103
    },
    {
      "exit_code": 1,
      "program": "import std.typecons;\nimport std.math;\n/*\n\n    Given a positive integer n, return the count of the numbers of n-digit\n    positive integers that start or end with 1.\n    \n*/\nlong starts_one_ends(long n) \n{\n    long result = 0;\n    long max = pow(10, n);\n    for (long i = 1; i < max; i++) \n    {\n        if (i % 10 == 1) \n        {\n            result++;\n        }\n        if (i / 10 == 1) \n        {\n            result++;\n        }\n    }\n    return result;\n}\nunittest\n{\n    alias candidate = starts_one_ends;\n\n    assert(candidate(1L) == 1L);\n    assert(candidate(2L) == 18L);\n    assert(candidate(3L) == 180L);\n    assert(candidate(4L) == 1800L);\n    assert(candidate(5L) == 18000L);\n}\nvoid main(){}",
      "status": "Exception",
      "stderr": "core.exception.AssertError@/tmp/tmpmnu_2zwx.d(31): unittest failure\n----------------\n??:? _d_unittestp [0x427ea5]\n??:? void tmpmnu_2zwx.__unittest_L26_C1() [0x427af1]\n??:? void tmpmnu_2zwx.__modtest() [0x427c28]\n??:? int core.runtime.runModuleUnitTests().__foreachbody2(object.ModuleInfo*) [0x42bbcb]\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)).__lambda2(immutable(object.ModuleInfo*)) [0x42aa5e]\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))).__foreachbody2(ref rt.sections_elf_shared.DSO) [0x42fbf1]\n??:? int rt.sections_elf_shared.DSO.opApply(scope int delegate(ref rt.sections_elf_shared.DSO)) [0x4300a0]\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))) [0x42fb7d]\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)) [0x42aa35]\n??:? runModuleUnitTests [0x42b9a1]\n??:? void rt.dmain2._d_run_main(int, char**, extern (C) int function(char[][])*).runAll() [0x4282f4]\n??:? void rt.dmain2._d_r",
      "stdout": "",
      "timestamp": 1660164103
    },
    {
      "exit_code": 1,
      "program": "import std.typecons;\nimport std.math;\n/*\n\n    Given a positive integer n, return the count of the numbers of n-digit\n    positive integers that start or end with 1.\n    \n*/\nlong starts_one_ends(long n) \n{\n    long result = 0;\n    if (n == 1) \n    {\n        result = 1;\n    } \n    else \n    {\n        long m = n / 2;\n        if (n % 2 == 0) \n        {\n            result = pow(10, m - 1) * 9;\n        } \n        else \n        {\n            result = pow(10, m - 1) * 9 * 2;\n        }\n    }\n    return result;\n}\nunittest\n{\n    alias candidate = starts_one_ends;\n\n    assert(candidate(1L) == 1L);\n    assert(candidate(2L) == 18L);\n    assert(candidate(3L) == 180L);\n    assert(candidate(4L) == 1800L);\n    assert(candidate(5L) == 18000L);\n}\nvoid main(){}",
      "status": "Exception",
      "stderr": "core.exception.AssertError@/tmp/tmph9c74iai.d(35): unittest failure\n----------------\n??:? _d_unittestp [0x427ec5]\n??:? void tmph9c74iai.__unittest_L30_C1() [0x427b11]\n??:? void tmph9c74iai.__modtest() [0x427c48]\n??:? int core.runtime.runModuleUnitTests().__foreachbody2(object.ModuleInfo*) [0x42bbeb]\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)).__lambda2(immutable(object.ModuleInfo*)) [0x42aa7e]\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))).__foreachbody2(ref rt.sections_elf_shared.DSO) [0x42fc11]\n??:? int rt.sections_elf_shared.DSO.opApply(scope int delegate(ref rt.sections_elf_shared.DSO)) [0x4300c0]\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))) [0x42fb9d]\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)) [0x42aa55]\n??:? runModuleUnitTests [0x42b9c1]\n??:? void rt.dmain2._d_run_main(int, char**, extern (C) int function(char[][])*).runAll() [0x428314]\n??:? void rt.dmain2._d_r",
      "stdout": "",
      "timestamp": 1660164103
    },
    {
      "exit_code": 1,
      "program": "import std.typecons;\nimport std.math;\n/*\n\n    Given a positive integer n, return the count of the numbers of n-digit\n    positive integers that start or end with 1.\n    \n*/\nlong starts_one_ends(long n) \n{\n    long count = 0;\n    long start = 1;\n    long end = 1;\n    long i = 0;\n    long j = 0;\n    long k = 0;\n    long l = 0;\n    long m = 0;\n    long p = 0;\n    long q = 0;\n    long r = 0;\n    long s = 0;\n    long t = 0;\n    long u = 0;\n    long v = 0;\n    long w = 0;\n    long x = 0;\n    long y = 0;\n    long z = 0;\n    long a = 0;\n    long b = 0;\n    long c = 0;\n    long d = 0;\n    long e = 0;\n    long f = 0;\n    long g = 0;\n    long h = 0;\n    long ii = 0;\n    long jj = 0;\n    long kk = 0;\n    long ll = 0;\n    long mm = 0;\n    long pp = 0;\n    long qq = 0;\n    long rr = 0;\n    long ss = 0;\n    long tt = 0;\n    long uu = 0;\n    long vv = 0;\n    long ww = 0;\n    long xx = 0;\n    long yy = 0;\n    long zz = 0;\n    long aa = 0;\n    long bb = 0;\n    long cc = 0;\n    long dd = 0;\n    long ee = 0;\n    long ff = 0;\n    long gg = 0;\n    long hh = 0;\n    long iii = 0;\n    long jjj = 0;\n    long kkk = 0;\n    long lll = 0;\n    long mmm = 0;\n    long ppp = 0;\n    long qqq = 0;\n    long rrr = 0;\n    long sss = 0;\n    long ttt = 0;\n    long uuu = 0;\n    long vvv = 0;\n    long www = 0;\n    long xxx = 0;\n    long yyy = 0;\n    long zzz = 0;\n    long aaaa = 0;\n    long b\nunittest\n{\n    alias candidate = starts_one_ends;\n\n    assert(candidate(1L) == 1L);\n    assert(candidate(2L) == 18L);\n    assert(candidate(3L) == 180L);\n    assert(candidate(4L) == 1800L);\n    assert(candidate(5L) == 18000L);\n}\nvoid main(){}",
      "status": "SyntaxError",
      "stderr": "/tmp/tmpxi15lo96.d(80): Error: semicolon expected, not `unittest`\n/tmp/tmpxi15lo96.d(80): Error: found `unittest` instead of statement\nFailed: [\"dmd\", \"-unittest\", \"-v\", \"-o-\", \"/tmp/tmpxi15lo96.d\", \"-I/tmp\"]\n",
      "stdout": "",
      "timestamp": 1660164103
    },
    {
      "exit_code": 1,
      "program": "import std.typecons;\nimport std.math;\n/*\n\n    Given a positive integer n, return the count of the numbers of n-digit\n    positive integers that start or end with 1.\n    \n*/\nlong starts_one_ends(long n) \n{\n    long result = 0;\n    for (long i = 1; i <= n; i++) \n    {\n        result += pow(10, i - 1);\n    }\n    return result;\n}\nunittest\n{\n    alias candidate = starts_one_ends;\n\n    assert(candidate(1L) == 1L);\n    assert(candidate(2L) == 18L);\n    assert(candidate(3L) == 180L);\n    assert(candidate(4L) == 1800L);\n    assert(candidate(5L) == 18000L);\n}\nvoid main(){}",
      "status": "Exception",
      "stderr": "core.exception.AssertError@/tmp/tmpqv25vvzb.d(23): unittest failure\n----------------\n??:? _d_unittestp [0x427e85]\n??:? void tmpqv25vvzb.__unittest_L18_C1() [0x427ad1]\n??:? void tmpqv25vvzb.__modtest() [0x427c08]\n??:? int core.runtime.runModuleUnitTests().__foreachbody2(object.ModuleInfo*) [0x42bbab]\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)).__lambda2(immutable(object.ModuleInfo*)) [0x42aa3e]\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))).__foreachbody2(ref rt.sections_elf_shared.DSO) [0x42fbd1]\n??:? int rt.sections_elf_shared.DSO.opApply(scope int delegate(ref rt.sections_elf_shared.DSO)) [0x430080]\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))) [0x42fb5d]\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)) [0x42aa15]\n??:? runModuleUnitTests [0x42b981]\n??:? void rt.dmain2._d_run_main(int, char**, extern (C) int function(char[][])*).runAll() [0x4282d4]\n??:? void rt.dmain2._d_r",
      "stdout": "",
      "timestamp": 1660164103
    },
    {
      "exit_code": 1,
      "program": "import std.typecons;\nimport std.math;\n/*\n\n    Given a positive integer n, return the count of the numbers of n-digit\n    positive integers that start or end with 1.\n    \n*/\nlong starts_one_ends(long n) \n{\n    long result = 0;\n    long start = 1;\n    long end = 1;\n    for (long i = 0; i < n; i++) {\n        start *= 10;\n        end *= 10;\n    }\n    start /= 10;\n    end -= 1;\n    result = end - start + 1;\n    return result;\n}\nunittest\n{\n    alias candidate = starts_one_ends;\n\n    assert(candidate(1L) == 1L);\n    assert(candidate(2L) == 18L);\n    assert(candidate(3L) == 180L);\n    assert(candidate(4L) == 1800L);\n    assert(candidate(5L) == 18000L);\n}\nvoid main(){}",
      "status": "Exception",
      "stderr": "core.exception.AssertError@/tmp/tmpnlgkerhj.d(27): unittest failure\n----------------\n??:? _d_unittestp [0x427dad]\n??:? void tmpnlgkerhj.__unittest_L23_C1() [0x427a90]\n??:? void tmpnlgkerhj.__modtest() [0x427b30]\n??:? int core.runtime.runModuleUnitTests().__foreachbody2(object.ModuleInfo*) [0x42bad3]\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)).__lambda2(immutable(object.ModuleInfo*)) [0x42a966]\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))).__foreachbody2(ref rt.sections_elf_shared.DSO) [0x42faf9]\n??:? int rt.sections_elf_shared.DSO.opApply(scope int delegate(ref rt.sections_elf_shared.DSO)) [0x42ffa8]\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))) [0x42fa85]\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)) [0x42a93d]\n??:? runModuleUnitTests [0x42b8a9]\n??:? void rt.dmain2._d_run_main(int, char**, extern (C) int function(char[][])*).runAll() [0x4281fc]\n??:? void rt.dmain2._d_r",
      "stdout": "",
      "timestamp": 1660164103
    },
    {
      "exit_code": 1,
      "program": "import std.typecons;\nimport std.math;\n/*\n\n    Given a positive integer n, return the count of the numbers of n-digit\n    positive integers that start or end with 1.\n    \n*/\nlong starts_one_ends(long n) \n{\n    long count = 0;\n    long start = 1;\n    long end = 1;\n    for (long i = 0; i < n; i++) {\n        start *= 10;\n        end *= 10;\n    }\n    for (long i = start; i < end; i++) {\n        if (i % 10 == 1 || i / start == 1) {\n            count++;\n        }\n    }\n    return count;\n}\nunittest\n{\n    alias candidate = starts_one_ends;\n\n    assert(candidate(1L) == 1L);\n    assert(candidate(2L) == 18L);\n    assert(candidate(3L) == 180L);\n    assert(candidate(4L) == 1800L);\n    assert(candidate(5L) == 18000L);\n}\nvoid main(){}",
      "status": "Exception",
      "stderr": "core.exception.AssertError@/tmp/tmp6yi8ek96.d(29): unittest failure\n----------------\n??:? _d_unittestp [0x427ddd]\n??:? void tmp6yi8ek96.__unittest_L25_C1() [0x427ac0]\n??:? void tmp6yi8ek96.__modtest() [0x427b60]\n??:? int core.runtime.runModuleUnitTests().__foreachbody2(object.ModuleInfo*) [0x42bb03]\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)).__lambda2(immutable(object.ModuleInfo*)) [0x42a996]\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))).__foreachbody2(ref rt.sections_elf_shared.DSO) [0x42fb29]\n??:? int rt.sections_elf_shared.DSO.opApply(scope int delegate(ref rt.sections_elf_shared.DSO)) [0x42ffd8]\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))) [0x42fab5]\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)) [0x42a96d]\n??:? runModuleUnitTests [0x42b8d9]\n??:? void rt.dmain2._d_run_main(int, char**, extern (C) int function(char[][])*).runAll() [0x42822c]\n??:? void rt.dmain2._d_r",
      "stdout": "",
      "timestamp": 1660164103
    },
    {
      "exit_code": 1,
      "program": "import std.typecons;\nimport std.math;\n/*\n\n    Given a positive integer n, return the count of the numbers of n-digit\n    positive integers that start or end with 1.\n    \n*/\nlong starts_one_ends(long n) \n{\n    long result = 0;\n    long start = 1;\n    long end = 1;\n    for (long i = 0; i < n; i++) {\n        start *= 10;\n        end *= 10;\n    }\n    start /= 10;\n    end -= 1;\n    result = end - start + 1;\n    return result;\n}\nunittest\n{\n    alias candidate = starts_one_ends;\n\n    assert(candidate(1L) == 1L);\n    assert(candidate(2L) == 18L);\n    assert(candidate(3L) == 180L);\n    assert(candidate(4L) == 1800L);\n    assert(candidate(5L) == 18000L);\n}\nvoid main(){}",
      "status": "Exception",
      "stderr": "core.exception.AssertError@/tmp/tmpnlgkerhj.d(27): unittest failure\n----------------\n??:? _d_unittestp [0x427dad]\n??:? void tmpnlgkerhj.__unittest_L23_C1() [0x427a90]\n??:? void tmpnlgkerhj.__modtest() [0x427b30]\n??:? int core.runtime.runModuleUnitTests().__foreachbody2(object.ModuleInfo*) [0x42bad3]\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)).__lambda2(immutable(object.ModuleInfo*)) [0x42a966]\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))).__foreachbody2(ref rt.sections_elf_shared.DSO) [0x42faf9]\n??:? int rt.sections_elf_shared.DSO.opApply(scope int delegate(ref rt.sections_elf_shared.DSO)) [0x42ffa8]\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))) [0x42fa85]\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)) [0x42a93d]\n??:? runModuleUnitTests [0x42b8a9]\n??:? void rt.dmain2._d_run_main(int, char**, extern (C) int function(char[][])*).runAll() [0x4281fc]\n??:? void rt.dmain2._d_r",
      "stdout": "",
      "timestamp": 1660164103
    },
    {
      "exit_code": 1,
      "program": "import std.typecons;\nimport std.math;\n/*\n\n    Given a positive integer n, return the count of the numbers of n-digit\n    positive integers that start or end with 1.\n    \n*/\nlong starts_one_ends(long n) \n{\n    if (n == 1)\n        return 1;\n    else\n        return starts_one_ends(n - 1) + pow(10, n - 1);\n}\nunittest\n{\n    alias candidate = starts_one_ends;\n\n    assert(candidate(1L) == 1L);\n    assert(candidate(2L) == 18L);\n    assert(candidate(3L) == 180L);\n    assert(candidate(4L) == 1800L);\n    assert(candidate(5L) == 18000L);\n}\nvoid main(){}",
      "status": "Exception",
      "stderr": "core.exception.AssertError@/tmp/tmpk5mawak3.d(21): unittest failure\n----------------\n??:? _d_unittestp [0x427e7d]\n??:? void tmpk5mawak3.__unittest_L16_C1() [0x427ac9]\n??:? void tmpk5mawak3.__modtest() [0x427c00]\n??:? int core.runtime.runModuleUnitTests().__foreachbody2(object.ModuleInfo*) [0x42bba3]\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)).__lambda2(immutable(object.ModuleInfo*)) [0x42aa36]\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))).__foreachbody2(ref rt.sections_elf_shared.DSO) [0x42fbc9]\n??:? int rt.sections_elf_shared.DSO.opApply(scope int delegate(ref rt.sections_elf_shared.DSO)) [0x430078]\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))) [0x42fb55]\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)) [0x42aa0d]\n??:? runModuleUnitTests [0x42b979]\n??:? void rt.dmain2._d_run_main(int, char**, extern (C) int function(char[][])*).runAll() [0x4282cc]\n??:? void rt.dmain2._d_r",
      "stdout": "",
      "timestamp": 1660164103
    },
    {
      "exit_code": 1,
      "program": "import std.typecons;\nimport std.math;\n/*\n\n    Given a positive integer n, return the count of the numbers of n-digit\n    positive integers that start or end with 1.\n    \n*/\nlong starts_one_ends(long n) \n{\n    long count = 0;\n    long start = 1;\n    long end = 1;\n    long i = 0;\n    while (i < n) \n    {\n        count += start + end;\n        start *= 10;\n        end *= 10;\n        ++i;\n    }\n    return count;\n}\nunittest\n{\n    alias candidate = starts_one_ends;\n\n    assert(candidate(1L) == 1L);\n    assert(candidate(2L) == 18L);\n    assert(candidate(3L) == 180L);\n    assert(candidate(4L) == 1800L);\n    assert(candidate(5L) == 18000L);\n}\nvoid main(){}",
      "status": "Exception",
      "stderr": "core.exception.AssertError@/tmp/tmpwaqxgxqd.d(28): unittest failure\n----------------\n??:? _d_unittestp [0x427da5]\n??:? void tmpwaqxgxqd.__unittest_L24_C1() [0x427a88]\n??:? void tmpwaqxgxqd.__modtest() [0x427b28]\n??:? int core.runtime.runModuleUnitTests().__foreachbody2(object.ModuleInfo*) [0x42bacb]\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)).__lambda2(immutable(object.ModuleInfo*)) [0x42a95e]\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))).__foreachbody2(ref rt.sections_elf_shared.DSO) [0x42faf1]\n??:? int rt.sections_elf_shared.DSO.opApply(scope int delegate(ref rt.sections_elf_shared.DSO)) [0x42ffa0]\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))) [0x42fa7d]\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)) [0x42a935]\n??:? runModuleUnitTests [0x42b8a1]\n??:? void rt.dmain2._d_run_main(int, char**, extern (C) int function(char[][])*).runAll() [0x4281f4]\n??:? void rt.dmain2._d_r",
      "stdout": "",
      "timestamp": 1660164103
    },
    {
      "exit_code": 1,
      "program": "import std.typecons;\nimport std.math;\n/*\n\n    Given a positive integer n, return the count of the numbers of n-digit\n    positive integers that start or end with 1.\n    \n*/\nlong starts_one_ends(long n) \n{\n    long count = 0;\n    long start = 1;\n    long end = 1;\n    for (long i = 0; i < n; i++) {\n        start *= 10;\n        end *= 10;\n    }\n    start /= 10;\n    end -= 1;\n    count = end - start + 1;\n    return count;\n}\nunittest\n{\n    alias candidate = starts_one_ends;\n\n    assert(candidate(1L) == 1L);\n    assert(candidate(2L) == 18L);\n    assert(candidate(3L) == 180L);\n    assert(candidate(4L) == 1800L);\n    assert(candidate(5L) == 18000L);\n}\nvoid main(){}",
      "status": "Exception",
      "stderr": "core.exception.AssertError@/tmp/tmpb8pq1bx5.d(27): unittest failure\n----------------\n??:? _d_unittestp [0x427dad]\n??:? void tmpb8pq1bx5.__unittest_L23_C1() [0x427a90]\n??:? void tmpb8pq1bx5.__modtest() [0x427b30]\n??:? int core.runtime.runModuleUnitTests().__foreachbody2(object.ModuleInfo*) [0x42bad3]\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)).__lambda2(immutable(object.ModuleInfo*)) [0x42a966]\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))).__foreachbody2(ref rt.sections_elf_shared.DSO) [0x42faf9]\n??:? int rt.sections_elf_shared.DSO.opApply(scope int delegate(ref rt.sections_elf_shared.DSO)) [0x42ffa8]\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))) [0x42fa85]\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)) [0x42a93d]\n??:? runModuleUnitTests [0x42b8a9]\n??:? void rt.dmain2._d_run_main(int, char**, extern (C) int function(char[][])*).runAll() [0x4281fc]\n??:? void rt.dmain2._d_r",
      "stdout": "",
      "timestamp": 1660164103
    },
    {
      "exit_code": 1,
      "program": "import std.typecons;\nimport std.math;\n/*\n\n    Given a positive integer n, return the count of the numbers of n-digit\n    positive integers that start or end with 1.\n    \n*/\nlong starts_one_ends(long n) \n{\n    if (n == 1)\n        return 2;\n    else\n        return (pow(10, n - 1) + pow(10, n - 2));\n}\nunittest\n{\n    alias candidate = starts_one_ends;\n\n    assert(candidate(1L) == 1L);\n    assert(candidate(2L) == 18L);\n    assert(candidate(3L) == 180L);\n    assert(candidate(4L) == 1800L);\n    assert(candidate(5L) == 18000L);\n}\nvoid main(){}",
      "status": "Exception",
      "stderr": "core.exception.AssertError@/tmp/tmp91lg2ffn.d(20): unittest failure\n----------------\n??:? _d_unittestp [0x427e8d]\n??:? void tmp91lg2ffn.__unittest_L16_C1() [0x427ab8]\n??:? void tmp91lg2ffn.__modtest() [0x427c10]\n??:? int core.runtime.runModuleUnitTests().__foreachbody2(object.ModuleInfo*) [0x42bbb3]\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)).__lambda2(immutable(object.ModuleInfo*)) [0x42aa46]\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))).__foreachbody2(ref rt.sections_elf_shared.DSO) [0x42fbd9]\n??:? int rt.sections_elf_shared.DSO.opApply(scope int delegate(ref rt.sections_elf_shared.DSO)) [0x430088]\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))) [0x42fb65]\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)) [0x42aa1d]\n??:? runModuleUnitTests [0x42b989]\n??:? void rt.dmain2._d_run_main(int, char**, extern (C) int function(char[][])*).runAll() [0x4282dc]\n??:? void rt.dmain2._d_r",
      "stdout": "",
      "timestamp": 1660164103
    },
    {
      "exit_code": 1,
      "program": "import std.typecons;\nimport std.math;\n/*\n\n    Given a positive integer n, return the count of the numbers of n-digit\n    positive integers that start or end with 1.\n    \n*/\nlong starts_one_ends(long n) \n{\n    long count = 0;\n    long start = 1;\n    long end = 1;\n    for (long i = 0; i < n; i++) \n    {\n        start *= 10;\n        end *= 10;\n    }\n    start /= 10;\n    end -= 1;\n    for (long i = start; i <= end; i++) \n    {\n        if (i % 10 == 1 || i / 10 == 1) \n        {\n            count++;\n        }\n    }\n    return count;\n}\nunittest\n{\n    alias candidate = starts_one_ends;\n\n    assert(candidate(1L) == 1L);\n    assert(candidate(2L) == 18L);\n    assert(candidate(3L) == 180L);\n    assert(candidate(4L) == 1800L);\n    assert(candidate(5L) == 18000L);\n}\nvoid main(){}",
      "status": "Exception",
      "stderr": "core.exception.AssertError@/tmp/tmppt25yv24.d(36): unittest failure\n----------------\n??:? _d_unittestp [0x427ded]\n??:? void tmppt25yv24.__unittest_L30_C1() [0x427b14]\n??:? void tmppt25yv24.__modtest() [0x427b70]\n??:? int core.runtime.runModuleUnitTests().__foreachbody2(object.ModuleInfo*) [0x42bb13]\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)).__lambda2(immutable(object.ModuleInfo*)) [0x42a9a6]\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))).__foreachbody2(ref rt.sections_elf_shared.DSO) [0x42fb39]\n??:? int rt.sections_elf_shared.DSO.opApply(scope int delegate(ref rt.sections_elf_shared.DSO)) [0x42ffe8]\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))) [0x42fac5]\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)) [0x42a97d]\n??:? runModuleUnitTests [0x42b8e9]\n??:? void rt.dmain2._d_run_main(int, char**, extern (C) int function(char[][])*).runAll() [0x42823c]\n??:? void rt.dmain2._d_r",
      "stdout": "",
      "timestamp": 1660164103
    },
    {
      "exit_code": 1,
      "program": "import std.typecons;\nimport std.math;\n/*\n\n    Given a positive integer n, return the count of the numbers of n-digit\n    positive integers that start or end with 1.\n    \n*/\nlong starts_one_ends(long n) \n{\n    long result = 0;\n    long start = 1;\n    long end = 1;\n    for (long i = 1; i < n; i++) {\n        start *= 10;\n        end *= 10;\n    }\n    end += 1;\n    result = end - start;\n    return result;\n}\nunittest\n{\n    alias candidate = starts_one_ends;\n\n    assert(candidate(1L) == 1L);\n    assert(candidate(2L) == 18L);\n    assert(candidate(3L) == 180L);\n    assert(candidate(4L) == 1800L);\n    assert(candidate(5L) == 18000L);\n}\nvoid main(){}",
      "status": "Exception",
      "stderr": "core.exception.AssertError@/tmp/tmpfce4bb54.d(27): unittest failure\n----------------\n??:? _d_unittestp [0x427d9d]\n??:? void tmpfce4bb54.__unittest_L22_C1() [0x427aa1]\n??:? void tmpfce4bb54.__modtest() [0x427b20]\n??:? int core.runtime.runModuleUnitTests().__foreachbody2(object.ModuleInfo*) [0x42bac3]\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)).__lambda2(immutable(object.ModuleInfo*)) [0x42a956]\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))).__foreachbody2(ref rt.sections_elf_shared.DSO) [0x42fae9]\n??:? int rt.sections_elf_shared.DSO.opApply(scope int delegate(ref rt.sections_elf_shared.DSO)) [0x42ff98]\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))) [0x42fa75]\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)) [0x42a92d]\n??:? runModuleUnitTests [0x42b899]\n??:? void rt.dmain2._d_run_main(int, char**, extern (C) int function(char[][])*).runAll() [0x4281ec]\n??:? void rt.dmain2._d_r",
      "stdout": "",
      "timestamp": 1660164103
    },
    {
      "exit_code": 1,
      "program": "import std.typecons;\nimport std.math;\n/*\n\n    Given a positive integer n, return the count of the numbers of n-digit\n    positive integers that start or end with 1.\n    \n*/\nlong starts_one_ends(long n) \n{\n    if (n == 1) \n        return 2;\n    else if (n == 2) \n        return 4;\n    else \n        return starts_one_ends(n - 1) + starts_one_ends(n - 2);\n}\nunittest\n{\n    alias candidate = starts_one_ends;\n\n    assert(candidate(1L) == 1L);\n    assert(candidate(2L) == 18L);\n    assert(candidate(3L) == 180L);\n    assert(candidate(4L) == 1800L);\n    assert(candidate(5L) == 18000L);\n}\nvoid main(){}",
      "status": "Exception",
      "stderr": "core.exception.AssertError@/tmp/tmpy8br6dd3.d(22): unittest failure\n----------------\n??:? _d_unittestp [0x427d9d]\n??:? void tmpy8br6dd3.__unittest_L18_C1() [0x427a7c]\n??:? void tmpy8br6dd3.__modtest() [0x427b1c]\n??:? int core.runtime.runModuleUnitTests().__foreachbody2(object.ModuleInfo*) [0x42bac3]\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)).__lambda2(immutable(object.ModuleInfo*)) [0x42a956]\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))).__foreachbody2(ref rt.sections_elf_shared.DSO) [0x42fae9]\n??:? int rt.sections_elf_shared.DSO.opApply(scope int delegate(ref rt.sections_elf_shared.DSO)) [0x42ff98]\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))) [0x42fa75]\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)) [0x42a92d]\n??:? runModuleUnitTests [0x42b899]\n??:? void rt.dmain2._d_run_main(int, char**, extern (C) int function(char[][])*).runAll() [0x4281ec]\n??:? void rt.dmain2._d_r",
      "stdout": "",
      "timestamp": 1660164103
    },
    {
      "exit_code": 1,
      "program": "import std.typecons;\nimport std.math;\n/*\n\n    Given a positive integer n, return the count of the numbers of n-digit\n    positive integers that start or end with 1.\n    \n*/\nlong starts_one_ends(long n) \n{\n    long result = 0;\n    long max = pow(10, n);\n    for (long i = 1; i < max; i++) \n    {\n        auto s = to!string(i);\n        if (s[0] == '1' || s[$-1] == '1') \n        {\n            result++;\n        }\n    }\n    return result;\n}\nunittest\n{\n    alias candidate = starts_one_ends;\n\n    assert(candidate(1L) == 1L);\n    assert(candidate(2L) == 18L);\n    assert(candidate(3L) == 180L);\n    assert(candidate(4L) == 1800L);\n    assert(candidate(5L) == 18000L);\n}\nvoid main(){}",
      "status": "SyntaxError",
      "stderr": "/tmp/tmpebtlnonc.d(15): Error: template instance `to!string` template `to` is not defined, did you mean No?\nFailed: [\"dmd\", \"-unittest\", \"-v\", \"-o-\", \"/tmp/tmpebtlnonc.d\", \"-I/tmp\"]\n",
      "stdout": "",
      "timestamp": 1660164103
    },
    {
      "exit_code": 1,
      "program": "import std.typecons;\nimport std.math;\n/*\n\n    Given a positive integer n, return the count of the numbers of n-digit\n    positive integers that start or end with 1.\n    \n*/\nlong starts_one_ends(long n) \n{\n    long result = 0;\n    long start = 1;\n    long end = 1;\n    for (long i = 0; i < n; i++) {\n        start *= 10;\n        end *= 10;\n    }\n    start /= 10;\n    end -= 1;\n    result = end - start + 1;\n    return result;\n}\nunittest\n{\n    alias candidate = starts_one_ends;\n\n    assert(candidate(1L) == 1L);\n    assert(candidate(2L) == 18L);\n    assert(candidate(3L) == 180L);\n    assert(candidate(4L) == 1800L);\n    assert(candidate(5L) == 18000L);\n}\nvoid main(){}",
      "status": "Exception",
      "stderr": "core.exception.AssertError@/tmp/tmpnlgkerhj.d(27): unittest failure\n----------------\n??:? _d_unittestp [0x427dad]\n??:? void tmpnlgkerhj.__unittest_L23_C1() [0x427a90]\n??:? void tmpnlgkerhj.__modtest() [0x427b30]\n??:? int core.runtime.runModuleUnitTests().__foreachbody2(object.ModuleInfo*) [0x42bad3]\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)).__lambda2(immutable(object.ModuleInfo*)) [0x42a966]\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))).__foreachbody2(ref rt.sections_elf_shared.DSO) [0x42faf9]\n??:? int rt.sections_elf_shared.DSO.opApply(scope int delegate(ref rt.sections_elf_shared.DSO)) [0x42ffa8]\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))) [0x42fa85]\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)) [0x42a93d]\n??:? runModuleUnitTests [0x42b8a9]\n??:? void rt.dmain2._d_run_main(int, char**, extern (C) int function(char[][])*).runAll() [0x4281fc]\n??:? void rt.dmain2._d_r",
      "stdout": "",
      "timestamp": 1660164103
    },
    {
      "exit_code": 1,
      "program": "import std.typecons;\nimport std.math;\n/*\n\n    Given a positive integer n, return the count of the numbers of n-digit\n    positive integers that start or end with 1.\n    \n*/\nlong starts_one_ends(long n) \n{\n    long result = 0;\n    long start = pow(10, n - 1);\n    long end = pow(10, n);\n    foreach (i; start .. end) {\n        if (i % 10 == 1 || i / 10 == 1) {\n            result++;\n        }\n    }\n    return result;\n}\nunittest\n{\n    alias candidate = starts_one_ends;\n\n    assert(candidate(1L) == 1L);\n    assert(candidate(2L) == 18L);\n    assert(candidate(3L) == 180L);\n    assert(candidate(4L) == 1800L);\n    assert(candidate(5L) == 18000L);\n}\nvoid main(){}",
      "status": "Exception",
      "stderr": "core.exception.AssertError@/tmp/tmprfh2x059.d(27): unittest failure\n----------------\n??:? _d_unittestp [0x427ed5]\n??:? void tmprfh2x059.__unittest_L21_C1() [0x427b40]\n??:? void tmprfh2x059.__modtest() [0x427c54]\n??:? int core.runtime.runModuleUnitTests().__foreachbody2(object.ModuleInfo*) [0x42bbfb]\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)).__lambda2(immutable(object.ModuleInfo*)) [0x42aa8e]\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))).__foreachbody2(ref rt.sections_elf_shared.DSO) [0x42fc21]\n??:? int rt.sections_elf_shared.DSO.opApply(scope int delegate(ref rt.sections_elf_shared.DSO)) [0x4300d0]\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))) [0x42fbad]\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)) [0x42aa65]\n??:? runModuleUnitTests [0x42b9d1]\n??:? void rt.dmain2._d_run_main(int, char**, extern (C) int function(char[][])*).runAll() [0x428324]\n??:? void rt.dmain2._d_r",
      "stdout": "",
      "timestamp": 1660164103
    },
    {
      "exit_code": 1,
      "program": "import std.typecons;\nimport std.math;\n/*\n\n    Given a positive integer n, return the count of the numbers of n-digit\n    positive integers that start or end with 1.\n    \n*/\nlong starts_one_ends(long n) \n{\n    if (n == 1)\n        return 2;\n    else if (n == 2)\n        return 4;\n    else\n        return starts_one_ends(n - 1) + starts_one_ends(n - 2);\n}\nunittest\n{\n    alias candidate = starts_one_ends;\n\n    assert(candidate(1L) == 1L);\n    assert(candidate(2L) == 18L);\n    assert(candidate(3L) == 180L);\n    assert(candidate(4L) == 1800L);\n    assert(candidate(5L) == 18000L);\n}\nvoid main(){}",
      "status": "Exception",
      "stderr": "core.exception.AssertError@/tmp/tmpw0x29x4y.d(22): unittest failure\n----------------\n??:? _d_unittestp [0x427d9d]\n??:? void tmpw0x29x4y.__unittest_L18_C1() [0x427a7c]\n??:? void tmpw0x29x4y.__modtest() [0x427b1c]\n??:? int core.runtime.runModuleUnitTests().__foreachbody2(object.ModuleInfo*) [0x42bac3]\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)).__lambda2(immutable(object.ModuleInfo*)) [0x42a956]\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))).__foreachbody2(ref rt.sections_elf_shared.DSO) [0x42fae9]\n??:? int rt.sections_elf_shared.DSO.opApply(scope int delegate(ref rt.sections_elf_shared.DSO)) [0x42ff98]\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))) [0x42fa75]\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)) [0x42a92d]\n??:? runModuleUnitTests [0x42b899]\n??:? void rt.dmain2._d_run_main(int, char**, extern (C) int function(char[][])*).runAll() [0x4281ec]\n??:? void rt.dmain2._d_r",
      "stdout": "",
      "timestamp": 1660164103
    },
    {
      "exit_code": 1,
      "program": "import std.typecons;\nimport std.math;\n/*\n\n    Given a positive integer n, return the count of the numbers of n-digit\n    positive integers that start or end with 1.\n    \n*/\nlong starts_one_ends(long n) \n{\n    long result = 0;\n    long max = pow(10, n);\n    long min = pow(10, n - 1);\n    foreach(i; min .. max) {\n        string s = to!string(i);\n        if (s[0] == '1' || s[$ - 1] == '1') {\n            result++;\n        }\n    }\n    return result;\n}\nunittest\n{\n    alias candidate = starts_one_ends;\n\n    assert(candidate(1L) == 1L);\n    assert(candidate(2L) == 18L);\n    assert(candidate(3L) == 180L);\n    assert(candidate(4L) == 1800L);\n    assert(candidate(5L) == 18000L);\n}\nvoid main(){}",
      "status": "SyntaxError",
      "stderr": "/tmp/tmplu9wnpuh.d(15): Error: template instance `to!string` template `to` is not defined, did you mean No?\nFailed: [\"dmd\", \"-unittest\", \"-v\", \"-o-\", \"/tmp/tmplu9wnpuh.d\", \"-I/tmp\"]\n",
      "stdout": "",
      "timestamp": 1660164103
    },
    {
      "exit_code": 1,
      "program": "import std.typecons;\nimport std.math;\n/*\n\n    Given a positive integer n, return the count of the numbers of n-digit\n    positive integers that start or end with 1.\n    \n*/\nlong starts_one_ends(long n) \n{\n    long result = 0;\n    long start = 1;\n    long end = 1;\n    for (long i = 0; i < n; i++) {\n        start *= 10;\n        end *= 10;\n    }\n    start /= 10;\n    end /= 10;\n    for (long i = start; i < end; i++) {\n        if (i % 10 == 1 || i / 10 == 1) {\n            result++;\n        }\n    }\n    return result;\n}\nunittest\n{\n    alias candidate = starts_one_ends;\n\n    assert(candidate(1L) == 1L);\n    assert(candidate(2L) == 18L);\n    assert(candidate(3L) == 180L);\n    assert(candidate(4L) == 1800L);\n    assert(candidate(5L) == 18000L);\n}\nvoid main(){}",
      "status": "Exception",
      "stderr": "core.exception.AssertError@/tmp/tmptj4a4tt_.d(31): unittest failure\n----------------\n??:? _d_unittestp [0x427dfd]\n??:? void tmptj4a4tt_.__unittest_L27_C1() [0x427ae0]\n??:? void tmptj4a4tt_.__modtest() [0x427b80]\n??:? int core.runtime.runModuleUnitTests().__foreachbody2(object.ModuleInfo*) [0x42bb23]\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)).__lambda2(immutable(object.ModuleInfo*)) [0x42a9b6]\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))).__foreachbody2(ref rt.sections_elf_shared.DSO) [0x42fb49]\n??:? int rt.sections_elf_shared.DSO.opApply(scope int delegate(ref rt.sections_elf_shared.DSO)) [0x42fff8]\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))) [0x42fad5]\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)) [0x42a98d]\n??:? runModuleUnitTests [0x42b8f9]\n??:? void rt.dmain2._d_run_main(int, char**, extern (C) int function(char[][])*).runAll() [0x42824c]\n??:? void rt.dmain2._d_r",
      "stdout": "",
      "timestamp": 1660164103
    },
    {
      "exit_code": 1,
      "program": "import std.typecons;\nimport std.math;\n/*\n\n    Given a positive integer n, return the count of the numbers of n-digit\n    positive integers that start or end with 1.\n    \n*/\nlong starts_one_ends(long n) \n{\n    if (n == 1)\n        return 2;\n    if (n == 2)\n        return 3;\n    return starts_one_ends(n - 1) + starts_one_ends(n - 2);\n}\nunittest\n{\n    alias candidate = starts_one_ends;\n\n    assert(candidate(1L) == 1L);\n    assert(candidate(2L) == 18L);\n    assert(candidate(3L) == 180L);\n    assert(candidate(4L) == 1800L);\n    assert(candidate(5L) == 18000L);\n}\nvoid main(){}",
      "status": "Exception",
      "stderr": "core.exception.AssertError@/tmp/tmp7dx1_nm2.d(21): unittest failure\n----------------\n??:? _d_unittestp [0x427d9d]\n??:? void tmp7dx1_nm2.__unittest_L17_C1() [0x427a7c]\n??:? void tmp7dx1_nm2.__modtest() [0x427b1c]\n??:? int core.runtime.runModuleUnitTests().__foreachbody2(object.ModuleInfo*) [0x42bac3]\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)).__lambda2(immutable(object.ModuleInfo*)) [0x42a956]\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))).__foreachbody2(ref rt.sections_elf_shared.DSO) [0x42fae9]\n??:? int rt.sections_elf_shared.DSO.opApply(scope int delegate(ref rt.sections_elf_shared.DSO)) [0x42ff98]\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))) [0x42fa75]\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)) [0x42a92d]\n??:? runModuleUnitTests [0x42b899]\n??:? void rt.dmain2._d_run_main(int, char**, extern (C) int function(char[][])*).runAll() [0x4281ec]\n??:? void rt.dmain2._d_r",
      "stdout": "",
      "timestamp": 1660164103
    },
    {
      "exit_code": 1,
      "program": "import std.typecons;\nimport std.math;\n/*\n\n    Given a positive integer n, return the count of the numbers of n-digit\n    positive integers that start or end with 1.\n    \n*/\nlong starts_one_ends(long n) \n{\n    long count = 0;\n    long i = 0;\n    long j = 0;\n    long k = 0;\n    long l = 0;\n    long m = 0;\n    long o = 0;\n    long p = 0;\n    long q = 0;\n    long r = 0;\n    long s = 0;\n    long t = 0;\n    long u = 0;\n    long v = 0;\n    long w = 0;\n    long x = 0;\n    long y = 0;\n    long z = 0;\n    long aa = 0;\n    long ab = 0;\n    long ac = 0;\n    long ad = 0;\n    long ae = 0;\n    long af = 0;\n    long ag = 0;\n    long ah = 0;\n    long ai = 0;\n    long aj = 0;\n    long ak = 0;\n    long al = 0;\n    long am = 0;\n    long an = 0;\n    long ao = 0;\n    long ap = 0;\n    long aq = 0;\n    long ar = 0;\n    long as = 0;\n    long at = 0;\n    long au = 0;\n    long av = 0;\n    long aw = 0;\n    long ax = 0;\n    long ay = 0;\n    long az = 0;\n    long ba = 0;\n    long bb = 0;\n    long bc = 0;\n    long bd = 0;\n    long be = 0;\n    long bf = 0;\n    long bg = 0;\n    long bh = 0;\n    long bi = 0;\n    long bj = 0;\n    long bk = 0;\n    long bl = 0;\n    long bm = 0;\n    long bn = 0;\n    long bo = 0;\n    long bp = 0;\n    long bq = 0;\n    long br = 0;\n    long bs = 0;\n    long bt = 0;\n    long bu = 0;\n    long bv = 0;\n    long bw = 0;\n    long bx = 0;\n    long by = 0;\n    long bz\nunittest\n{\n    alias candidate = starts_one_ends;\n\n    assert(candidate(1L) == 1L);\n    assert(candidate(2L) == 18L);\n    assert(candidate(3L) == 180L);\n    assert(candidate(4L) == 1800L);\n    assert(candidate(5L) == 18000L);\n}\nvoid main(){}",
      "status": "SyntaxError",
      "stderr": "/tmp/tmpv35kujjb.d(81): Error: semicolon expected, not `unittest`\n/tmp/tmpv35kujjb.d(81): Error: found `unittest` instead of statement\nFailed: [\"dmd\", \"-unittest\", \"-v\", \"-o-\", \"/tmp/tmpv35kujjb.d\", \"-I/tmp\"]\n",
      "stdout": "",
      "timestamp": 1660164103
    },
    {
      "exit_code": 1,
      "program": "import std.typecons;\nimport std.math;\n/*\n\n    Given a positive integer n, return the count of the numbers of n-digit\n    positive integers that start or end with 1.\n    \n*/\nlong starts_one_ends(long n) \n{\n    long result = 0;\n    if (n == 1)\n        return 1;\n    else if (n == 2)\n        return 10;\n    else\n    {\n        result = starts_one_ends(n - 1) + starts_one_ends(n - 2);\n        return result;\n    }\n}\nunittest\n{\n    alias candidate = starts_one_ends;\n\n    assert(candidate(1L) == 1L);\n    assert(candidate(2L) == 18L);\n    assert(candidate(3L) == 180L);\n    assert(candidate(4L) == 1800L);\n    assert(candidate(5L) == 18000L);\n}\nvoid main(){}",
      "status": "Exception",
      "stderr": "core.exception.AssertError@/tmp/tmporr6vw0j.d(27): unittest failure\n----------------\n??:? _d_unittestp [0x427d9d]\n??:? void tmporr6vw0j.__unittest_L22_C1() [0x427a9d]\n??:? void tmporr6vw0j.__modtest() [0x427b1c]\n??:? int core.runtime.runModuleUnitTests().__foreachbody2(object.ModuleInfo*) [0x42bac3]\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)).__lambda2(immutable(object.ModuleInfo*)) [0x42a956]\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))).__foreachbody2(ref rt.sections_elf_shared.DSO) [0x42fae9]\n??:? int rt.sections_elf_shared.DSO.opApply(scope int delegate(ref rt.sections_elf_shared.DSO)) [0x42ff98]\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))) [0x42fa75]\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)) [0x42a92d]\n??:? runModuleUnitTests [0x42b899]\n??:? void rt.dmain2._d_run_main(int, char**, extern (C) int function(char[][])*).runAll() [0x4281ec]\n??:? void rt.dmain2._d_r",
      "stdout": "",
      "timestamp": 1660164103
    },
    {
      "exit_code": 1,
      "program": "import std.typecons;\nimport std.math;\n/*\n\n    Given a positive integer n, return the count of the numbers of n-digit\n    positive integers that start or end with 1.\n    \n*/\nlong starts_one_ends(long n) \n{\n    long count = 0;\n    long start = pow(10, n - 1);\n    long end = pow(10, n) - 1;\n    for (long i = start; i <= end; i++) {\n        auto s = to!string(i);\n        if (s[0] == '1' || s[$ - 1] == '1') {\n            count++;\n        }\n    }\n    return count;\n}\nunittest\n{\n    alias candidate = starts_one_ends;\n\n    assert(candidate(1L) == 1L);\n    assert(candidate(2L) == 18L);\n    assert(candidate(3L) == 180L);\n    assert(candidate(4L) == 1800L);\n    assert(candidate(5L) == 18000L);\n}\nvoid main(){}",
      "status": "SyntaxError",
      "stderr": "/tmp/tmp8rq7xruu.d(15): Error: template instance `to!string` template `to` is not defined, did you mean No?\nFailed: [\"dmd\", \"-unittest\", \"-v\", \"-o-\", \"/tmp/tmp8rq7xruu.d\", \"-I/tmp\"]\n",
      "stdout": "",
      "timestamp": 1660164103
    },
    {
      "exit_code": 1,
      "program": "import std.typecons;\nimport std.math;\n/*\n\n    Given a positive integer n, return the count of the numbers of n-digit\n    positive integers that start or end with 1.\n    \n*/\nlong starts_one_ends(long n) \n{\n    long result = 0;\n    long start = 1;\n    long end = 1;\n    for (long i = 1; i < n; i++) {\n        start *= 10;\n        end *= 10;\n    }\n    end += 1;\n    result = end - start;\n    return result;\n}\nunittest\n{\n    alias candidate = starts_one_ends;\n\n    assert(candidate(1L) == 1L);\n    assert(candidate(2L) == 18L);\n    assert(candidate(3L) == 180L);\n    assert(candidate(4L) == 1800L);\n    assert(candidate(5L) == 18000L);\n}\nvoid main(){}",
      "status": "Exception",
      "stderr": "core.exception.AssertError@/tmp/tmpfce4bb54.d(27): unittest failure\n----------------\n??:? _d_unittestp [0x427d9d]\n??:? void tmpfce4bb54.__unittest_L22_C1() [0x427aa1]\n??:? void tmpfce4bb54.__modtest() [0x427b20]\n??:? int core.runtime.runModuleUnitTests().__foreachbody2(object.ModuleInfo*) [0x42bac3]\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)).__lambda2(immutable(object.ModuleInfo*)) [0x42a956]\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))).__foreachbody2(ref rt.sections_elf_shared.DSO) [0x42fae9]\n??:? int rt.sections_elf_shared.DSO.opApply(scope int delegate(ref rt.sections_elf_shared.DSO)) [0x42ff98]\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))) [0x42fa75]\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)) [0x42a92d]\n??:? runModuleUnitTests [0x42b899]\n??:? void rt.dmain2._d_run_main(int, char**, extern (C) int function(char[][])*).runAll() [0x4281ec]\n??:? void rt.dmain2._d_r",
      "stdout": "",
      "timestamp": 1660164103
    },
    {
      "exit_code": 1,
      "program": "import std.typecons;\nimport std.math;\n/*\n\n    Given a positive integer n, return the count of the numbers of n-digit\n    positive integers that start or end with 1.\n    \n*/\nlong starts_one_ends(long n) \n{\n    long result = 0;\n    if (n == 1)\n        return 1;\n    else if (n == 2)\n        return 10;\n    else if (n == 3)\n        return 100;\n    else if (n == 4)\n        return 1000;\n    else if (n == 5)\n        return 10000;\n    else if (n == 6)\n        return 100000;\n    else if (n == 7)\n        return 1000000;\n    else if (n == 8)\n        return 10000000;\n    else if (n == 9)\n        return 100000000;\n    else if (n == 10)\n        return 1000000000;\n    else if (n == 11)\n        return 10000000000;\n    else if (n == 12)\n        return 100000000000;\n    else if (n == 13)\n        return 1000000000000;\n    else if (n == 14)\n        return 10000000000000;\n    else if (n == 15)\n        return 100000000000000;\n    else if (n == 16)\n        return 1000000000000000;\n    else if (n == 17)\n        return 10000000000000000;\n    else if (n == 18)\n        return 100000000000000000;\n    else if (n == 19)\n        return 1000000000000000000;\n    else if (n == 20)\n        return 10000000000000000000;\n    else if (n == 21)\n        return 100000000000000000000;\n    else if (n == 22)\n        return 1000000000000000000000;\n    else if (n == 23)\n        return 10000000000000000000000;\n    else if (n == 24)\n        return 100000000000000000000000;\n    else if (n == 25)\n        return 1000000000000000000000000;\n    else if (n == 26)\n        return 10000000000000000000000000;\n    else if (n == 27)\n        return 100000000000000000000000000;\n    else if (n == 28)\n        return 1000000000000000000000000000;\n    else if (n == 29)\n        return 10000000000000000000000000000;\n    else if (n == 30)\n        return 100000000000000000000000000000;\n    else if (n == 31)\n        return 1000000000000000000000000000000;\n    else if (n == 32)\n        return 10000000000000000000000000000000;\n    else\nunittest\n{\n    alias candidate = starts_one_ends;\n\n    assert(candidate(1L) == 1L);\n    assert(candidate(2L) == 18L);\n    assert(candidate(3L) == 180L);\n    assert(candidate(4L) == 1800L);\n    assert(candidate(5L) == 18000L);\n}\nvoid main(){}",
      "status": "SyntaxError",
      "stderr": "/tmp/tmpf9jggamg.d(51): Error: signed integer overflow\n/tmp/tmpf9jggamg.d(53): Error: integer overflow\n/tmp/tmpf9jggamg.d(55): Error: integer overflow\n/tmp/tmpf9jggamg.d(57): Error: integer overflow\n/tmp/tmpf9jggamg.d(59): Error: integer overflow\n/tmp/tmpf9jggamg.d(61): Error: integer overflow\n/tmp/tmpf9jggamg.d(63): Error: integer overflow\n/tmp/tmpf9jggamg.d(65): Error: integer overflow\n/tmp/tmpf9jggamg.d(67): Error: integer overflow\n/tmp/tmpf9jggamg.d(69): Error: integer overflow\n/tmp/tmpf9jggamg.d(71): Error: integer overflow\n/tmp/tmpf9jggamg.d(73): Error: integer overflow\n/tmp/tmpf9jggamg.d(75): Error: integer overflow\n/tmp/tmpf9jggamg.d(77): Error: found `unittest` instead of statement\nFailed: [\"dmd\", \"-unittest\", \"-v\", \"-o-\", \"/tmp/tmpf9jggamg.d\", \"-I/tmp\"]\n",
      "stdout": "",
      "timestamp": 1660164103
    },
    {
      "exit_code": 1,
      "program": "import std.typecons;\nimport std.math;\n/*\n\n    Given a positive integer n, return the count of the numbers of n-digit\n    positive integers that start or end with 1.\n    \n*/\nlong starts_one_ends(long n) \n{\n    if (n == 1)\n        return 1;\n    else\n        return starts_one_ends(n - 1) + pow(10, n - 1);\n}\nunittest\n{\n    alias candidate = starts_one_ends;\n\n    assert(candidate(1L) == 1L);\n    assert(candidate(2L) == 18L);\n    assert(candidate(3L) == 180L);\n    assert(candidate(4L) == 1800L);\n    assert(candidate(5L) == 18000L);\n}\nvoid main(){}",
      "status": "Exception",
      "stderr": "core.exception.AssertError@/tmp/tmpk5mawak3.d(21): unittest failure\n----------------\n??:? _d_unittestp [0x427e7d]\n??:? void tmpk5mawak3.__unittest_L16_C1() [0x427ac9]\n??:? void tmpk5mawak3.__modtest() [0x427c00]\n??:? int core.runtime.runModuleUnitTests().__foreachbody2(object.ModuleInfo*) [0x42bba3]\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)).__lambda2(immutable(object.ModuleInfo*)) [0x42aa36]\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))).__foreachbody2(ref rt.sections_elf_shared.DSO) [0x42fbc9]\n??:? int rt.sections_elf_shared.DSO.opApply(scope int delegate(ref rt.sections_elf_shared.DSO)) [0x430078]\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))) [0x42fb55]\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)) [0x42aa0d]\n??:? runModuleUnitTests [0x42b979]\n??:? void rt.dmain2._d_run_main(int, char**, extern (C) int function(char[][])*).runAll() [0x4282cc]\n??:? void rt.dmain2._d_r",
      "stdout": "",
      "timestamp": 1660164103
    },
    {
      "exit_code": 1,
      "program": "import std.typecons;\nimport std.math;\n/*\n\n    Given a positive integer n, return the count of the numbers of n-digit\n    positive integers that start or end with 1.\n    \n*/\nlong starts_one_ends(long n) \n{\n    long result = 0;\n    long max_number = pow(10, n);\n    foreach(i; 1 .. max_number)\n    {\n        if(i % 10 == 1)\n        {\n            result++;\n        }\n        if(i / 10 == 1)\n        {\n            result++;\n        }\n    }\n    return result;\n}\nunittest\n{\n    alias candidate = starts_one_ends;\n\n    assert(candidate(1L) == 1L);\n    assert(candidate(2L) == 18L);\n    assert(candidate(3L) == 180L);\n    assert(candidate(4L) == 1800L);\n    assert(candidate(5L) == 18000L);\n}\nvoid main(){}",
      "status": "Exception",
      "stderr": "core.exception.AssertError@/tmp/tmp924fe5jo.d(31): unittest failure\n----------------\n??:? _d_unittestp [0x427eb5]\n??:? void tmp924fe5jo.__unittest_L26_C1() [0x427b01]\n??:? void tmp924fe5jo.__modtest() [0x427c38]\n??:? int core.runtime.runModuleUnitTests().__foreachbody2(object.ModuleInfo*) [0x42bbdb]\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)).__lambda2(immutable(object.ModuleInfo*)) [0x42aa6e]\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))).__foreachbody2(ref rt.sections_elf_shared.DSO) [0x42fc01]\n??:? int rt.sections_elf_shared.DSO.opApply(scope int delegate(ref rt.sections_elf_shared.DSO)) [0x4300b0]\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))) [0x42fb8d]\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)) [0x42aa45]\n??:? runModuleUnitTests [0x42b9b1]\n??:? void rt.dmain2._d_run_main(int, char**, extern (C) int function(char[][])*).runAll() [0x428304]\n??:? void rt.dmain2._d_r",
      "stdout": "",
      "timestamp": 1660164103
    },
    {
      "exit_code": 1,
      "program": "import std.typecons;\nimport std.math;\n/*\n\n    Given a positive integer n, return the count of the numbers of n-digit\n    positive integers that start or end with 1.\n    \n*/\nlong starts_one_ends(long n) \n{\n    long count = 0;\n    long start = 1;\n    long end = 1;\n    for (long i = 1; i <= n; i++) {\n        start *= 10;\n        end = end * 10 + 1;\n    }\n    count = end - start;\n    return count;\n}\nunittest\n{\n    alias candidate = starts_one_ends;\n\n    assert(candidate(1L) == 1L);\n    assert(candidate(2L) == 18L);\n    assert(candidate(3L) == 180L);\n    assert(candidate(4L) == 1800L);\n    assert(candidate(5L) == 18000L);\n}\nvoid main(){}",
      "status": "Exception",
      "stderr": "core.exception.AssertError@/tmp/tmpxj06fcro.d(26): unittest failure\n----------------\n??:? _d_unittestp [0x427da5]\n??:? void tmpxj06fcro.__unittest_L21_C1() [0x427aa9]\n??:? void tmpxj06fcro.__modtest() [0x427b28]\n??:? int core.runtime.runModuleUnitTests().__foreachbody2(object.ModuleInfo*) [0x42bacb]\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)).__lambda2(immutable(object.ModuleInfo*)) [0x42a95e]\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))).__foreachbody2(ref rt.sections_elf_shared.DSO) [0x42faf1]\n??:? int rt.sections_elf_shared.DSO.opApply(scope int delegate(ref rt.sections_elf_shared.DSO)) [0x42ffa0]\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))) [0x42fa7d]\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)) [0x42a935]\n??:? runModuleUnitTests [0x42b8a1]\n??:? void rt.dmain2._d_run_main(int, char**, extern (C) int function(char[][])*).runAll() [0x4281f4]\n??:? void rt.dmain2._d_r",
      "stdout": "",
      "timestamp": 1660164103
    },
    {
      "exit_code": 1,
      "program": "import std.typecons;\nimport std.math;\n/*\n\n    Given a positive integer n, return the count of the numbers of n-digit\n    positive integers that start or end with 1.\n    \n*/\nlong starts_one_ends(long n) \n{\n    if (n == 1)\n        return 1;\n    else if (n == 2)\n        return 10;\n    else\n    {\n        long result = 0;\n        foreach (i; 1 .. n)\n        {\n            result += pow(10, i - 1);\n        }\n        return result;\n    }\n}\nunittest\n{\n    alias candidate = starts_one_ends;\n\n    assert(candidate(1L) == 1L);\n    assert(candidate(2L) == 18L);\n    assert(candidate(3L) == 180L);\n    assert(candidate(4L) == 1800L);\n    assert(candidate(5L) == 18000L);\n}\nvoid main(){}",
      "status": "Exception",
      "stderr": "core.exception.AssertError@/tmp/tmpmqnhhypu.d(30): unittest failure\n----------------\n??:? _d_unittestp [0x427ea5]\n??:? void tmpmqnhhypu.__unittest_L25_C1() [0x427af1]\n??:? void tmpmqnhhypu.__modtest() [0x427c28]\n??:? int core.runtime.runModuleUnitTests().__foreachbody2(object.ModuleInfo*) [0x42bbcb]\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)).__lambda2(immutable(object.ModuleInfo*)) [0x42aa5e]\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))).__foreachbody2(ref rt.sections_elf_shared.DSO) [0x42fbf1]\n??:? int rt.sections_elf_shared.DSO.opApply(scope int delegate(ref rt.sections_elf_shared.DSO)) [0x4300a0]\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))) [0x42fb7d]\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)) [0x42aa35]\n??:? runModuleUnitTests [0x42b9a1]\n??:? void rt.dmain2._d_run_main(int, char**, extern (C) int function(char[][])*).runAll() [0x4282f4]\n??:? void rt.dmain2._d_r",
      "stdout": "",
      "timestamp": 1660164104
    },
    {
      "exit_code": 1,
      "program": "import std.typecons;\nimport std.math;\n/*\n\n    Given a positive integer n, return the count of the numbers of n-digit\n    positive integers that start or end with 1.\n    \n*/\nlong starts_one_ends(long n) \n{\n    long count = 0;\n    long start = 1;\n    long end = 1;\n    for (long i = 1; i < n; i++) {\n        start *= 10;\n        end *= 10;\n    }\n    count += start;\n    count += end;\n    count += (start - 1) * (n - 2) * 9;\n    return count;\n}\nunittest\n{\n    alias candidate = starts_one_ends;\n\n    assert(candidate(1L) == 1L);\n    assert(candidate(2L) == 18L);\n    assert(candidate(3L) == 180L);\n    assert(candidate(4L) == 1800L);\n    assert(candidate(5L) == 18000L);\n}\nvoid main(){}",
      "status": "Exception",
      "stderr": "core.exception.AssertError@/tmp/tmpfx3w39q_.d(27): unittest failure\n----------------\n??:? _d_unittestp [0x427dc5]\n??:? void tmpfx3w39q_.__unittest_L23_C1() [0x427aa8]\n??:? void tmpfx3w39q_.__modtest() [0x427b48]\n??:? int core.runtime.runModuleUnitTests().__foreachbody2(object.ModuleInfo*) [0x42baeb]\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)).__lambda2(immutable(object.ModuleInfo*)) [0x42a97e]\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))).__foreachbody2(ref rt.sections_elf_shared.DSO) [0x42fb11]\n??:? int rt.sections_elf_shared.DSO.opApply(scope int delegate(ref rt.sections_elf_shared.DSO)) [0x42ffc0]\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))) [0x42fa9d]\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)) [0x42a955]\n??:? runModuleUnitTests [0x42b8c1]\n??:? void rt.dmain2._d_run_main(int, char**, extern (C) int function(char[][])*).runAll() [0x428214]\n??:? void rt.dmain2._d_r",
      "stdout": "",
      "timestamp": 1660164104
    },
    {
      "exit_code": 1,
      "program": "import std.typecons;\nimport std.math;\n/*\n\n    Given a positive integer n, return the count of the numbers of n-digit\n    positive integers that start or end with 1.\n    \n*/\nlong starts_one_ends(long n) \n{\n    if (n == 1)\n        return 1;\n    else\n        return (long)pow(10, n - 1) + starts_one_ends(n - 1);\n}\nunittest\n{\n    alias candidate = starts_one_ends;\n\n    assert(candidate(1L) == 1L);\n    assert(candidate(2L) == 18L);\n    assert(candidate(3L) == 180L);\n    assert(candidate(4L) == 1800L);\n    assert(candidate(5L) == 18000L);\n}\nvoid main(){}",
      "status": "SyntaxError",
      "stderr": "/tmp/tmp_ajy4ziz.d(14): Error: C style cast illegal, use `cast(long)pow(10, n - 1)`\nFailed: [\"dmd\", \"-unittest\", \"-v\", \"-o-\", \"/tmp/tmp_ajy4ziz.d\", \"-I/tmp\"]\n",
      "stdout": "",
      "timestamp": 1660164103
    },
    {
      "exit_code": 1,
      "program": "import std.typecons;\nimport std.math;\n/*\n\n    Given a positive integer n, return the count of the numbers of n-digit\n    positive integers that start or end with 1.\n    \n*/\nlong starts_one_ends(long n) \n{\n    long result = 0;\n    if (n == 1)\n        return 1;\n    else if (n == 2)\n        return 10;\n    else\n    {\n        long start = pow(10, n - 1);\n        long end = pow(10, n - 2);\n        result = start + end;\n        return result;\n    }\n}\nunittest\n{\n    alias candidate = starts_one_ends;\n\n    assert(candidate(1L) == 1L);\n    assert(candidate(2L) == 18L);\n    assert(candidate(3L) == 180L);\n    assert(candidate(4L) == 1800L);\n    assert(candidate(5L) == 18000L);\n}\nvoid main(){}",
      "status": "Exception",
      "stderr": "core.exception.AssertError@/tmp/tmptza7_9h9.d(29): unittest failure\n----------------\n??:? _d_unittestp [0x427e9d]\n??:? void tmptza7_9h9.__unittest_L24_C1() [0x427ae5]\n??:? void tmptza7_9h9.__modtest() [0x427c1c]\n??:? int core.runtime.runModuleUnitTests().__foreachbody2(object.ModuleInfo*) [0x42bbc3]\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)).__lambda2(immutable(object.ModuleInfo*)) [0x42aa56]\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))).__foreachbody2(ref rt.sections_elf_shared.DSO) [0x42fbe9]\n??:? int rt.sections_elf_shared.DSO.opApply(scope int delegate(ref rt.sections_elf_shared.DSO)) [0x430098]\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))) [0x42fb75]\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)) [0x42aa2d]\n??:? runModuleUnitTests [0x42b999]\n??:? void rt.dmain2._d_run_main(int, char**, extern (C) int function(char[][])*).runAll() [0x4282ec]\n??:? void rt.dmain2._d_r",
      "stdout": "",
      "timestamp": 1660164104
    },
    {
      "exit_code": 1,
      "program": "import std.typecons;\nimport std.math;\n/*\n\n    Given a positive integer n, return the count of the numbers of n-digit\n    positive integers that start or end with 1.\n    \n*/\nlong starts_one_ends(long n) \n{\n    long count = 0;\n    long start = pow(10, n - 1);\n    long end = pow(10, n);\n    foreach(i; start .. end) {\n        if (i % 10 == 1 || i / 10 == 1) {\n            count++;\n        }\n    }\n    return count;\n}\nunittest\n{\n    alias candidate = starts_one_ends;\n\n    assert(candidate(1L) == 1L);\n    assert(candidate(2L) == 18L);\n    assert(candidate(3L) == 180L);\n    assert(candidate(4L) == 1800L);\n    assert(candidate(5L) == 18000L);\n}\nvoid main(){}",
      "status": "Exception",
      "stderr": "core.exception.AssertError@/tmp/tmp1oynsxmd.d(27): unittest failure\n----------------\n??:? _d_unittestp [0x427ed5]\n??:? void tmp1oynsxmd.__unittest_L21_C1() [0x427b40]\n??:? void tmp1oynsxmd.__modtest() [0x427c54]\n??:? int core.runtime.runModuleUnitTests().__foreachbody2(object.ModuleInfo*) [0x42bbfb]\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)).__lambda2(immutable(object.ModuleInfo*)) [0x42aa8e]\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))).__foreachbody2(ref rt.sections_elf_shared.DSO) [0x42fc21]\n??:? int rt.sections_elf_shared.DSO.opApply(scope int delegate(ref rt.sections_elf_shared.DSO)) [0x4300d0]\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))) [0x42fbad]\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)) [0x42aa65]\n??:? runModuleUnitTests [0x42b9d1]\n??:? void rt.dmain2._d_run_main(int, char**, extern (C) int function(char[][])*).runAll() [0x428324]\n??:? void rt.dmain2._d_r",
      "stdout": "",
      "timestamp": 1660164103
    },
    {
      "exit_code": 1,
      "program": "import std.typecons;\nimport std.math;\n/*\n\n    Given a positive integer n, return the count of the numbers of n-digit\n    positive integers that start or end with 1.\n    \n*/\nlong starts_one_ends(long n) \n{\n    if (n == 1) return 1;\n    if (n == 2) return 2;\n    if (n == 3) return 4;\n    if (n == 4) return 8;\n    if (n == 5) return 16;\n    if (n == 6) return 32;\n    if (n == 7) return 64;\n    if (n == 8) return 128;\n    if (n == 9) return 256;\n    if (n == 10) return 512;\n    if (n == 11) return 1024;\n    if (n == 12) return 2048;\n    if (n == 13) return 4096;\n    if (n == 14) return 8192;\n    if (n == 15) return 16384;\n    if (n == 16) return 32768;\n    if (n == 17) return 65536;\n    if (n == 18) return 131072;\n    if (n == 19) return 262144;\n    if (n == 20) return 524288;\n    if (n == 21) return 1048576;\n    if (n == 22) return 2097152;\n    if (n == 23) return 4194304;\n    if (n == 24) return 8388608;\n    if (n == 25) return 16777216;\n    if (n == 26) return 33554432;\n    if (n == 27) return 67108864;\n    if (n == 28) return 134217728;\n    if (n == 29) return 268435456;\n    if (n == 30) return 536870912;\n    if (n == 31) return 1073741824;\n    if (n == 32) return 2147483648;\n    if (n == 33) return 4294967296;\n    if (n == 34) return 8589934592;\n    if (n == 35) return 17179869184;\n    if (n == 36) return 34359738368;\n    if (n == 37) return 68719476736;\n    if (n == 38) return 137438953472;\n    if (n == 39) return 274877906944;\n    if (n == 40) return\nunittest\n{\n    alias candidate = starts_one_ends;\n\n    assert(candidate(1L) == 1L);\n    assert(candidate(2L) == 18L);\n    assert(candidate(3L) == 180L);\n    assert(candidate(4L) == 1800L);\n    assert(candidate(5L) == 18000L);\n}\nvoid main(){}",
      "status": "SyntaxError",
      "stderr": "/tmp/tmp8fsznxts.d(51): Error: expression expected, not `unittest`\n/tmp/tmp8fsznxts.d(52): Error: found `{` when expecting `;` following `return` statement\nFailed: [\"dmd\", \"-unittest\", \"-v\", \"-o-\", \"/tmp/tmp8fsznxts.d\", \"-I/tmp\"]\n",
      "stdout": "",
      "timestamp": 1660164103
    },
    {
      "exit_code": 1,
      "program": "import std.typecons;\nimport std.math;\n/*\n\n    Given a positive integer n, return the count of the numbers of n-digit\n    positive integers that start or end with 1.\n    \n*/\nlong starts_one_ends(long n) \n{\n    long count = 0;\n    if (n == 1)\n        return 1;\n    else if (n == 2)\n        return 10;\n    else\n    {\n        count = starts_one_ends(n - 1) + starts_one_ends(n - 2);\n        return count;\n    }\n}\nunittest\n{\n    alias candidate = starts_one_ends;\n\n    assert(candidate(1L) == 1L);\n    assert(candidate(2L) == 18L);\n    assert(candidate(3L) == 180L);\n    assert(candidate(4L) == 1800L);\n    assert(candidate(5L) == 18000L);\n}\nvoid main(){}",
      "status": "Exception",
      "stderr": "core.exception.AssertError@/tmp/tmpoh7my0pf.d(27): unittest failure\n----------------\n??:? _d_unittestp [0x427d9d]\n??:? void tmpoh7my0pf.__unittest_L22_C1() [0x427a9d]\n??:? void tmpoh7my0pf.__modtest() [0x427b1c]\n??:? int core.runtime.runModuleUnitTests().__foreachbody2(object.ModuleInfo*) [0x42bac3]\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)).__lambda2(immutable(object.ModuleInfo*)) [0x42a956]\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))).__foreachbody2(ref rt.sections_elf_shared.DSO) [0x42fae9]\n??:? int rt.sections_elf_shared.DSO.opApply(scope int delegate(ref rt.sections_elf_shared.DSO)) [0x42ff98]\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))) [0x42fa75]\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)) [0x42a92d]\n??:? runModuleUnitTests [0x42b899]\n??:? void rt.dmain2._d_run_main(int, char**, extern (C) int function(char[][])*).runAll() [0x4281ec]\n??:? void rt.dmain2._d_r",
      "stdout": "",
      "timestamp": 1660164103
    },
    {
      "exit_code": 1,
      "program": "import std.typecons;\nimport std.math;\n/*\n\n    Given a positive integer n, return the count of the numbers of n-digit\n    positive integers that start or end with 1.\n    \n*/\nlong starts_one_ends(long n) \n{\n    long count = 0;\n    long max = pow(10, n);\n    long min = pow(10, n - 1);\n    for (long i = min; i < max; i++) {\n        if (i % 10 == 1 || i / 10 == 1) {\n            count++;\n        }\n    }\n    return count;\n}\nunittest\n{\n    alias candidate = starts_one_ends;\n\n    assert(candidate(1L) == 1L);\n    assert(candidate(2L) == 18L);\n    assert(candidate(3L) == 180L);\n    assert(candidate(4L) == 1800L);\n    assert(candidate(5L) == 18000L);\n}\nvoid main(){}",
      "status": "Exception",
      "stderr": "core.exception.AssertError@/tmp/tmpxf8j7x1e.d(27): unittest failure\n----------------\n??:? _d_unittestp [0x427ec5]\n??:? void tmpxf8j7x1e.__unittest_L21_C1() [0x427b30]\n??:? void tmpxf8j7x1e.__modtest() [0x427c44]\n??:? int core.runtime.runModuleUnitTests().__foreachbody2(object.ModuleInfo*) [0x42bbeb]\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)).__lambda2(immutable(object.ModuleInfo*)) [0x42aa7e]\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))).__foreachbody2(ref rt.sections_elf_shared.DSO) [0x42fc11]\n??:? int rt.sections_elf_shared.DSO.opApply(scope int delegate(ref rt.sections_elf_shared.DSO)) [0x4300c0]\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))) [0x42fb9d]\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)) [0x42aa55]\n??:? runModuleUnitTests [0x42b9c1]\n??:? void rt.dmain2._d_run_main(int, char**, extern (C) int function(char[][])*).runAll() [0x428314]\n??:? void rt.dmain2._d_r",
      "stdout": "",
      "timestamp": 1660164104
    },
    {
      "exit_code": 1,
      "program": "import std.typecons;\nimport std.math;\n/*\n\n    Given a positive integer n, return the count of the numbers of n-digit\n    positive integers that start or end with 1.\n    \n*/\nlong starts_one_ends(long n) \n{\n    if (n == 1)\n        return 2;\n    else\n        return starts_one_ends(n - 1) + pow(10, n - 1);\n}\nunittest\n{\n    alias candidate = starts_one_ends;\n\n    assert(candidate(1L) == 1L);\n    assert(candidate(2L) == 18L);\n    assert(candidate(3L) == 180L);\n    assert(candidate(4L) == 1800L);\n    assert(candidate(5L) == 18000L);\n}\nvoid main(){}",
      "status": "Exception",
      "stderr": "core.exception.AssertError@/tmp/tmpa1v2qfgb.d(20): unittest failure\n----------------\n??:? _d_unittestp [0x427e7d]\n??:? void tmpa1v2qfgb.__unittest_L16_C1() [0x427aa8]\n??:? void tmpa1v2qfgb.__modtest() [0x427c00]\n??:? int core.runtime.runModuleUnitTests().__foreachbody2(object.ModuleInfo*) [0x42bba3]\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)).__lambda2(immutable(object.ModuleInfo*)) [0x42aa36]\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))).__foreachbody2(ref rt.sections_elf_shared.DSO) [0x42fbc9]\n??:? int rt.sections_elf_shared.DSO.opApply(scope int delegate(ref rt.sections_elf_shared.DSO)) [0x430078]\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))) [0x42fb55]\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)) [0x42aa0d]\n??:? runModuleUnitTests [0x42b979]\n??:? void rt.dmain2._d_run_main(int, char**, extern (C) int function(char[][])*).runAll() [0x4282cc]\n??:? void rt.dmain2._d_r",
      "stdout": "",
      "timestamp": 1660164104
    },
    {
      "exit_code": 1,
      "program": "import std.typecons;\nimport std.math;\n/*\n\n    Given a positive integer n, return the count of the numbers of n-digit\n    positive integers that start or end with 1.\n    \n*/\nlong starts_one_ends(long n) \n{\n    if (n == 1)\n        return 2;\n    else \n    {\n        long r = starts_one_ends(n - 1);\n        return r + (long)pow(10, n - 1);\n    }\n}\nunittest\n{\n    alias candidate = starts_one_ends;\n\n    assert(candidate(1L) == 1L);\n    assert(candidate(2L) == 18L);\n    assert(candidate(3L) == 180L);\n    assert(candidate(4L) == 1800L);\n    assert(candidate(5L) == 18000L);\n}\nvoid main(){}",
      "status": "SyntaxError",
      "stderr": "/tmp/tmpwovrtb2k.d(16): Error: C style cast illegal, use `cast(long)pow(10, n - 1)`\nFailed: [\"dmd\", \"-unittest\", \"-v\", \"-o-\", \"/tmp/tmpwovrtb2k.d\", \"-I/tmp\"]\n",
      "stdout": "",
      "timestamp": 1660164103
    },
    {
      "exit_code": 1,
      "program": "import std.typecons;\nimport std.math;\n/*\n\n    Given a positive integer n, return the count of the numbers of n-digit\n    positive integers that start or end with 1.\n    \n*/\nlong starts_one_ends(long n) \n{\n    long count = 0;\n    long start = 1;\n    long end = 1;\n    for (long i = 0; i < n; i++) {\n        start *= 10;\n        end *= 10;\n    }\n    start /= 10;\n    end -= 1;\n    count = end - start + 1;\n    return count;\n}\nunittest\n{\n    alias candidate = starts_one_ends;\n\n    assert(candidate(1L) == 1L);\n    assert(candidate(2L) == 18L);\n    assert(candidate(3L) == 180L);\n    assert(candidate(4L) == 1800L);\n    assert(candidate(5L) == 18000L);\n}\nvoid main(){}",
      "status": "Exception",
      "stderr": "core.exception.AssertError@/tmp/tmpb8pq1bx5.d(27): unittest failure\n----------------\n??:? _d_unittestp [0x427dad]\n??:? void tmpb8pq1bx5.__unittest_L23_C1() [0x427a90]\n??:? void tmpb8pq1bx5.__modtest() [0x427b30]\n??:? int core.runtime.runModuleUnitTests().__foreachbody2(object.ModuleInfo*) [0x42bad3]\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)).__lambda2(immutable(object.ModuleInfo*)) [0x42a966]\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))).__foreachbody2(ref rt.sections_elf_shared.DSO) [0x42faf9]\n??:? int rt.sections_elf_shared.DSO.opApply(scope int delegate(ref rt.sections_elf_shared.DSO)) [0x42ffa8]\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))) [0x42fa85]\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)) [0x42a93d]\n??:? runModuleUnitTests [0x42b8a9]\n??:? void rt.dmain2._d_run_main(int, char**, extern (C) int function(char[][])*).runAll() [0x4281fc]\n??:? void rt.dmain2._d_r",
      "stdout": "",
      "timestamp": 1660164103
    },
    {
      "exit_code": 1,
      "program": "import std.typecons;\nimport std.math;\n/*\n\n    Given a positive integer n, return the count of the numbers of n-digit\n    positive integers that start or end with 1.\n    \n*/\nlong starts_one_ends(long n) \n{\n    long result = 0;\n    for (long i = 1; i <= n; i++) \n    {\n        result += pow(10, i - 1);\n    }\n    return result;\n}\nunittest\n{\n    alias candidate = starts_one_ends;\n\n    assert(candidate(1L) == 1L);\n    assert(candidate(2L) == 18L);\n    assert(candidate(3L) == 180L);\n    assert(candidate(4L) == 1800L);\n    assert(candidate(5L) == 18000L);\n}\nvoid main(){}",
      "status": "Exception",
      "stderr": "core.exception.AssertError@/tmp/tmpqv25vvzb.d(23): unittest failure\n----------------\n??:? _d_unittestp [0x427e85]\n??:? void tmpqv25vvzb.__unittest_L18_C1() [0x427ad1]\n??:? void tmpqv25vvzb.__modtest() [0x427c08]\n??:? int core.runtime.runModuleUnitTests().__foreachbody2(object.ModuleInfo*) [0x42bbab]\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)).__lambda2(immutable(object.ModuleInfo*)) [0x42aa3e]\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))).__foreachbody2(ref rt.sections_elf_shared.DSO) [0x42fbd1]\n??:? int rt.sections_elf_shared.DSO.opApply(scope int delegate(ref rt.sections_elf_shared.DSO)) [0x430080]\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))) [0x42fb5d]\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)) [0x42aa15]\n??:? runModuleUnitTests [0x42b981]\n??:? void rt.dmain2._d_run_main(int, char**, extern (C) int function(char[][])*).runAll() [0x4282d4]\n??:? void rt.dmain2._d_r",
      "stdout": "",
      "timestamp": 1660164103
    },
    {
      "exit_code": 1,
      "program": "import std.typecons;\nimport std.math;\n/*\n\n    Given a positive integer n, return the count of the numbers of n-digit\n    positive integers that start or end with 1.\n    \n*/\nlong starts_one_ends(long n) \n{\n    long count = 0;\n    long max = pow(10, n);\n    long min = pow(10, n - 1);\n    for (long i = min; i < max; i++) {\n        string s = to!string(i);\n        if (s[0] == '1' || s[$ - 1] == '1') {\n            count++;\n        }\n    }\n    return count;\n}\nunittest\n{\n    alias candidate = starts_one_ends;\n\n    assert(candidate(1L) == 1L);\n    assert(candidate(2L) == 18L);\n    assert(candidate(3L) == 180L);\n    assert(candidate(4L) == 1800L);\n    assert(candidate(5L) == 18000L);\n}\nvoid main(){}",
      "status": "SyntaxError",
      "stderr": "/tmp/tmpcoz9gels.d(15): Error: template instance `to!string` template `to` is not defined, did you mean No?\nFailed: [\"dmd\", \"-unittest\", \"-v\", \"-o-\", \"/tmp/tmpcoz9gels.d\", \"-I/tmp\"]\n",
      "stdout": "",
      "timestamp": 1660164103
    },
    {
      "exit_code": 1,
      "program": "import std.typecons;\nimport std.math;\n/*\n\n    Given a positive integer n, return the count of the numbers of n-digit\n    positive integers that start or end with 1.\n    \n*/\nlong starts_one_ends(long n) \n{\n    long result = 0;\n    long i = 1;\n    while (i <= n) {\n        result += (long)pow(10, i - 1);\n        i++;\n    }\n    return result;\n}\nunittest\n{\n    alias candidate = starts_one_ends;\n\n    assert(candidate(1L) == 1L);\n    assert(candidate(2L) == 18L);\n    assert(candidate(3L) == 180L);\n    assert(candidate(4L) == 1800L);\n    assert(candidate(5L) == 18000L);\n}\nvoid main(){}",
      "status": "SyntaxError",
      "stderr": "/tmp/tmpn7agxfee.d(14): Error: C style cast illegal, use `cast(long)pow(10, i - 1)`\nFailed: [\"dmd\", \"-unittest\", \"-v\", \"-o-\", \"/tmp/tmpn7agxfee.d\", \"-I/tmp\"]\n",
      "stdout": "",
      "timestamp": 1660164103
    },
    {
      "exit_code": 1,
      "program": "import std.typecons;\nimport std.math;\n/*\n\n    Given a positive integer n, return the count of the numbers of n-digit\n    positive integers that start or end with 1.\n    \n*/\nlong starts_one_ends(long n) \n{\n    long result = 0;\n    long start = 1;\n    long end = 1;\n    for (long i = 1; i < n; i++) {\n        start *= 10;\n        end *= 10;\n    }\n    result += start;\n    result += end;\n    result += (start - 1) * (n - 1);\n    return result;\n}\nunittest\n{\n    alias candidate = starts_one_ends;\n\n    assert(candidate(1L) == 1L);\n    assert(candidate(2L) == 18L);\n    assert(candidate(3L) == 180L);\n    assert(candidate(4L) == 1800L);\n    assert(candidate(5L) == 18000L);\n}\nvoid main(){}",
      "status": "Exception",
      "stderr": "core.exception.AssertError@/tmp/tmpmqihdxwy.d(27): unittest failure\n----------------\n??:? _d_unittestp [0x427dc5]\n??:? void tmpmqihdxwy.__unittest_L23_C1() [0x427aa4]\n??:? void tmpmqihdxwy.__modtest() [0x427b44]\n??:? int core.runtime.runModuleUnitTests().__foreachbody2(object.ModuleInfo*) [0x42baeb]\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)).__lambda2(immutable(object.ModuleInfo*)) [0x42a97e]\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))).__foreachbody2(ref rt.sections_elf_shared.DSO) [0x42fb11]\n??:? int rt.sections_elf_shared.DSO.opApply(scope int delegate(ref rt.sections_elf_shared.DSO)) [0x42ffc0]\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))) [0x42fa9d]\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)) [0x42a955]\n??:? runModuleUnitTests [0x42b8c1]\n??:? void rt.dmain2._d_run_main(int, char**, extern (C) int function(char[][])*).runAll() [0x428214]\n??:? void rt.dmain2._d_r",
      "stdout": "",
      "timestamp": 1660164104
    },
    {
      "exit_code": 1,
      "program": "import std.typecons;\nimport std.math;\n/*\n\n    Given a positive integer n, return the count of the numbers of n-digit\n    positive integers that start or end with 1.\n    \n*/\nlong starts_one_ends(long n) \n{\n    long ret = 0;\n    long i = 0;\n    long j = 0;\n    long k = 0;\n    long l = 0;\n    long m = 0;\n    long nn = 0;\n    long o = 0;\n    long p = 0;\n    long q = 0;\n    long r = 0;\n    long s = 0;\n    long t = 0;\n    long u = 0;\n    long v = 0;\n    long w = 0;\n    long x = 0;\n    long y = 0;\n    long z = 0;\n    long aa = 0;\n    long bb = 0;\n    long cc = 0;\n    long dd = 0;\n    long ee = 0;\n    long ff = 0;\n    long gg = 0;\n    long hh = 0;\n    long ii = 0;\n    long jj = 0;\n    long kk = 0;\n    long ll = 0;\n    long mm = 0;\n    long nnn = 0;\n    long oo = 0;\n    long pp = 0;\n    long qq = 0;\n    long rr = 0;\n    long ss = 0;\n    long tt = 0;\n    long uu = 0;\n    long vv = 0;\n    long ww = 0;\n    long xx = 0;\n    long yy = 0;\n    long zz = 0;\n    long aaa = 0;\n    long bbb = 0;\n    long ccc = 0;\n    long ddd = 0;\n    long eee = 0;\n    long fff = 0;\n    long ggg = 0;\n    long hhh = 0;\n    long iii = 0;\n    long jjj = 0;\n    long kkk = 0;\n    long lll = 0;\n    long mmm = 0;\n    long nnnn = 0;\n    long ooo = 0;\n    long ppp = 0;\n    long qqq = 0;\n    long rrr = 0;\n    long sss = 0;\n    long ttt = 0;\n    long uuu = 0;\n    long vvv = 0;\n\nunittest\n{\n    alias candidate = starts_one_ends;\n\n    assert(candidate(1L) == 1L);\n    assert(candidate(2L) == 18L);\n    assert(candidate(3L) == 180L);\n    assert(candidate(4L) == 1800L);\n    assert(candidate(5L) == 18000L);\n}\nvoid main(){}",
      "status": "SyntaxError",
      "stderr": "/tmp/tmp2m8v5q_g.d(79): Error: found `unittest` instead of statement\nFailed: [\"dmd\", \"-unittest\", \"-v\", \"-o-\", \"/tmp/tmp2m8v5q_g.d\", \"-I/tmp\"]\n",
      "stdout": "",
      "timestamp": 1660164103
    },
    {
      "exit_code": 1,
      "program": "import std.typecons;\nimport std.math;\n/*\n\n    Given a positive integer n, return the count of the numbers of n-digit\n    positive integers that start or end with 1.\n    \n*/\nlong starts_one_ends(long n) \n{\n    long result = 0;\n    if (n == 1)\n        return 1;\n    else if (n == 2)\n        return 10;\n    else\n    {\n        result = starts_one_ends(n - 1) + starts_one_ends(n - 2);\n        return result;\n    }\n}\nunittest\n{\n    alias candidate = starts_one_ends;\n\n    assert(candidate(1L) == 1L);\n    assert(candidate(2L) == 18L);\n    assert(candidate(3L) == 180L);\n    assert(candidate(4L) == 1800L);\n    assert(candidate(5L) == 18000L);\n}\nvoid main(){}",
      "status": "Exception",
      "stderr": "core.exception.AssertError@/tmp/tmporr6vw0j.d(27): unittest failure\n----------------\n??:? _d_unittestp [0x427d9d]\n??:? void tmporr6vw0j.__unittest_L22_C1() [0x427a9d]\n??:? void tmporr6vw0j.__modtest() [0x427b1c]\n??:? int core.runtime.runModuleUnitTests().__foreachbody2(object.ModuleInfo*) [0x42bac3]\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)).__lambda2(immutable(object.ModuleInfo*)) [0x42a956]\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))).__foreachbody2(ref rt.sections_elf_shared.DSO) [0x42fae9]\n??:? int rt.sections_elf_shared.DSO.opApply(scope int delegate(ref rt.sections_elf_shared.DSO)) [0x42ff98]\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))) [0x42fa75]\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)) [0x42a92d]\n??:? runModuleUnitTests [0x42b899]\n??:? void rt.dmain2._d_run_main(int, char**, extern (C) int function(char[][])*).runAll() [0x4281ec]\n??:? void rt.dmain2._d_r",
      "stdout": "",
      "timestamp": 1660164103
    },
    {
      "exit_code": 1,
      "program": "import std.typecons;\nimport std.math;\n/*\n\n    Given a positive integer n, return the count of the numbers of n-digit\n    positive integers that start or end with 1.\n    \n*/\nlong starts_one_ends(long n) \n{\n    long result = 0;\n    long start = 1;\n    long end = 1;\n    for (long i = 1; i < n; i++) {\n        start *= 10;\n        end *= 10;\n    }\n    result += start;\n    result += end;\n    result += (start - 1) * (end - 1);\n    return result;\n}\nunittest\n{\n    alias candidate = starts_one_ends;\n\n    assert(candidate(1L) == 1L);\n    assert(candidate(2L) == 18L);\n    assert(candidate(3L) == 180L);\n    assert(candidate(4L) == 1800L);\n    assert(candidate(5L) == 18000L);\n}\nvoid main(){}",
      "status": "Exception",
      "stderr": "core.exception.AssertError@/tmp/tmpux1w_a70.d(27): unittest failure\n----------------\n??:? _d_unittestp [0x427dc5]\n??:? void tmpux1w_a70.__unittest_L23_C1() [0x427aa8]\n??:? void tmpux1w_a70.__modtest() [0x427b48]\n??:? int core.runtime.runModuleUnitTests().__foreachbody2(object.ModuleInfo*) [0x42baeb]\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)).__lambda2(immutable(object.ModuleInfo*)) [0x42a97e]\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))).__foreachbody2(ref rt.sections_elf_shared.DSO) [0x42fb11]\n??:? int rt.sections_elf_shared.DSO.opApply(scope int delegate(ref rt.sections_elf_shared.DSO)) [0x42ffc0]\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))) [0x42fa9d]\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)) [0x42a955]\n??:? runModuleUnitTests [0x42b8c1]\n??:? void rt.dmain2._d_run_main(int, char**, extern (C) int function(char[][])*).runAll() [0x428214]\n??:? void rt.dmain2._d_r",
      "stdout": "",
      "timestamp": 1660164104
    },
    {
      "exit_code": 1,
      "program": "import std.typecons;\nimport std.math;\n/*\n\n    Given a positive integer n, return the count of the numbers of n-digit\n    positive integers that start or end with 1.\n    \n*/\nlong starts_one_ends(long n) \n{\n    long count = 0;\n    long start = 1;\n    long end = 1;\n    for (long i = 0; i < n; i++) {\n        start *= 10;\n        end *= 10;\n    }\n    end += 1;\n    for (long i = start; i < end; i++) {\n        if (i % 10 == 1 || i / 10 == 1) {\n            count++;\n        }\n    }\n    return count;\n}\nunittest\n{\n    alias candidate = starts_one_ends;\n\n    assert(candidate(1L) == 1L);\n    assert(candidate(2L) == 18L);\n    assert(candidate(3L) == 180L);\n    assert(candidate(4L) == 1800L);\n    assert(candidate(5L) == 18000L);\n}\nvoid main(){}",
      "status": "Exception",
      "stderr": "core.exception.AssertError@/tmp/tmpbp6ss6i1.d(31): unittest failure\n----------------\n??:? _d_unittestp [0x427de5]\n??:? void tmpbp6ss6i1.__unittest_L26_C1() [0x427ae5]\n??:? void tmpbp6ss6i1.__modtest() [0x427b64]\n??:? int core.runtime.runModuleUnitTests().__foreachbody2(object.ModuleInfo*) [0x42bb0b]\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)).__lambda2(immutable(object.ModuleInfo*)) [0x42a99e]\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))).__foreachbody2(ref rt.sections_elf_shared.DSO) [0x42fb31]\n??:? int rt.sections_elf_shared.DSO.opApply(scope int delegate(ref rt.sections_elf_shared.DSO)) [0x42ffe0]\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))) [0x42fabd]\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)) [0x42a975]\n??:? runModuleUnitTests [0x42b8e1]\n??:? void rt.dmain2._d_run_main(int, char**, extern (C) int function(char[][])*).runAll() [0x428234]\n??:? void rt.dmain2._d_r",
      "stdout": "",
      "timestamp": 1660164104
    },
    {
      "exit_code": 1,
      "program": "import std.typecons;\nimport std.math;\n/*\n\n    Given a positive integer n, return the count of the numbers of n-digit\n    positive integers that start or end with 1.\n    \n*/\nlong starts_one_ends(long n) \n{\n    long count = 0;\n    if (n == 1)\n        return 1;\n    else if (n == 2)\n        return 10;\n    else if (n == 3)\n        return 100;\n    else\n    {\n        count = starts_one_ends(n - 1) + starts_one_ends(n - 2);\n        return count;\n    }\n}\nunittest\n{\n    alias candidate = starts_one_ends;\n\n    assert(candidate(1L) == 1L);\n    assert(candidate(2L) == 18L);\n    assert(candidate(3L) == 180L);\n    assert(candidate(4L) == 1800L);\n    assert(candidate(5L) == 18000L);\n}\nvoid main(){}",
      "status": "Exception",
      "stderr": "core.exception.AssertError@/tmp/tmp5msz440w.d(29): unittest failure\n----------------\n??:? _d_unittestp [0x427da5]\n??:? void tmp5msz440w.__unittest_L24_C1() [0x427aa9]\n??:? void tmp5msz440w.__modtest() [0x427b28]\n??:? int core.runtime.runModuleUnitTests().__foreachbody2(object.ModuleInfo*) [0x42bacb]\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)).__lambda2(immutable(object.ModuleInfo*)) [0x42a95e]\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))).__foreachbody2(ref rt.sections_elf_shared.DSO) [0x42faf1]\n??:? int rt.sections_elf_shared.DSO.opApply(scope int delegate(ref rt.sections_elf_shared.DSO)) [0x42ffa0]\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))) [0x42fa7d]\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)) [0x42a935]\n??:? runModuleUnitTests [0x42b8a1]\n??:? void rt.dmain2._d_run_main(int, char**, extern (C) int function(char[][])*).runAll() [0x4281f4]\n??:? void rt.dmain2._d_r",
      "stdout": "",
      "timestamp": 1660164104
    },
    {
      "exit_code": 1,
      "program": "import std.typecons;\nimport std.math;\n/*\n\n    Given a positive integer n, return the count of the numbers of n-digit\n    positive integers that start or end with 1.\n    \n*/\nlong starts_one_ends(long n) \n{\n    long result = 0;\n    long start = 1;\n    long end = 1;\n    for (long i = 0; i < n; i++) {\n        start *= 10;\n        end *= 10;\n    }\n    start /= 10;\n    end--;\n    result = end - start + 1;\n    return result;\n}\nunittest\n{\n    alias candidate = starts_one_ends;\n\n    assert(candidate(1L) == 1L);\n    assert(candidate(2L) == 18L);\n    assert(candidate(3L) == 180L);\n    assert(candidate(4L) == 1800L);\n    assert(candidate(5L) == 18000L);\n}\nvoid main(){}",
      "status": "Exception",
      "stderr": "core.exception.AssertError@/tmp/tmptlegq6pd.d(27): unittest failure\n----------------\n??:? _d_unittestp [0x427dad]\n??:? void tmptlegq6pd.__unittest_L23_C1() [0x427a90]\n??:? void tmptlegq6pd.__modtest() [0x427b30]\n??:? int core.runtime.runModuleUnitTests().__foreachbody2(object.ModuleInfo*) [0x42bad3]\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)).__lambda2(immutable(object.ModuleInfo*)) [0x42a966]\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))).__foreachbody2(ref rt.sections_elf_shared.DSO) [0x42faf9]\n??:? int rt.sections_elf_shared.DSO.opApply(scope int delegate(ref rt.sections_elf_shared.DSO)) [0x42ffa8]\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))) [0x42fa85]\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)) [0x42a93d]\n??:? runModuleUnitTests [0x42b8a9]\n??:? void rt.dmain2._d_run_main(int, char**, extern (C) int function(char[][])*).runAll() [0x4281fc]\n??:? void rt.dmain2._d_r",
      "stdout": "",
      "timestamp": 1660164104
    },
    {
      "exit_code": 1,
      "program": "import std.typecons;\nimport std.math;\n/*\n\n    Given a positive integer n, return the count of the numbers of n-digit\n    positive integers that start or end with 1.\n    \n*/\nlong starts_one_ends(long n) \n{\n    long result = 0;\n    long start = 1;\n    long end = 1;\n    for (int i = 1; i < n; i++) {\n        start *= 10;\n        end *= 10;\n    }\n    result += start;\n    result += end;\n    result += (n - 2) * 9 * start;\n    return result;\n}\nunittest\n{\n    alias candidate = starts_one_ends;\n\n    assert(candidate(1L) == 1L);\n    assert(candidate(2L) == 18L);\n    assert(candidate(3L) == 180L);\n    assert(candidate(4L) == 1800L);\n    assert(candidate(5L) == 18000L);\n}\nvoid main(){}",
      "status": "Exception",
      "stderr": "core.exception.AssertError@/tmp/tmp6qameofy.d(27): unittest failure\n----------------\n??:? _d_unittestp [0x427dbd]\n??:? void tmp6qameofy.__unittest_L23_C1() [0x427aa0]\n??:? void tmp6qameofy.__modtest() [0x427b40]\n??:? int core.runtime.runModuleUnitTests().__foreachbody2(object.ModuleInfo*) [0x42bae3]\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)).__lambda2(immutable(object.ModuleInfo*)) [0x42a976]\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))).__foreachbody2(ref rt.sections_elf_shared.DSO) [0x42fb09]\n??:? int rt.sections_elf_shared.DSO.opApply(scope int delegate(ref rt.sections_elf_shared.DSO)) [0x42ffb8]\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))) [0x42fa95]\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)) [0x42a94d]\n??:? runModuleUnitTests [0x42b8b9]\n??:? void rt.dmain2._d_run_main(int, char**, extern (C) int function(char[][])*).runAll() [0x42820c]\n??:? void rt.dmain2._d_r",
      "stdout": "",
      "timestamp": 1660164104
    },
    {
      "exit_code": 1,
      "program": "import std.typecons;\nimport std.math;\n/*\n\n    Given a positive integer n, return the count of the numbers of n-digit\n    positive integers that start or end with 1.\n    \n*/\nlong starts_one_ends(long n) \n{\n    long result = 0;\n    long max = pow(10, n);\n    long min = pow(10, n - 1);\n    foreach(i; min .. max)\n    {\n        string s = to!string(i);\n        if(s[0] == '1' || s[$ - 1] == '1')\n            result++;\n    }\n    return result;\n}\nunittest\n{\n    alias candidate = starts_one_ends;\n\n    assert(candidate(1L) == 1L);\n    assert(candidate(2L) == 18L);\n    assert(candidate(3L) == 180L);\n    assert(candidate(4L) == 1800L);\n    assert(candidate(5L) == 18000L);\n}\nvoid main(){}",
      "status": "SyntaxError",
      "stderr": "/tmp/tmpn_bb3zz3.d(16): Error: template instance `to!string` template `to` is not defined, did you mean No?\nFailed: [\"dmd\", \"-unittest\", \"-v\", \"-o-\", \"/tmp/tmpn_bb3zz3.d\", \"-I/tmp\"]\n",
      "stdout": "",
      "timestamp": 1660164103
    },
    {
      "exit_code": 1,
      "program": "import std.typecons;\nimport std.math;\n/*\n\n    Given a positive integer n, return the count of the numbers of n-digit\n    positive integers that start or end with 1.\n    \n*/\nlong starts_one_ends(long n) \n{\n    long result = 0;\n    long max = pow(10, n);\n    for (long i = 1; i < max; i++) {\n        if (i % 10 == 1) {\n            result++;\n        }\n    }\n    return result;\n}\nunittest\n{\n    alias candidate = starts_one_ends;\n\n    assert(candidate(1L) == 1L);\n    assert(candidate(2L) == 18L);\n    assert(candidate(3L) == 180L);\n    assert(candidate(4L) == 1800L);\n    assert(candidate(5L) == 18000L);\n}\nvoid main(){}",
      "status": "Exception",
      "stderr": "core.exception.AssertError@/tmp/tmpk91wrofd.d(25): unittest failure\n----------------\n??:? _d_unittestp [0x427e95]\n??:? void tmpk91wrofd.__unittest_L20_C1() [0x427add]\n??:? void tmpk91wrofd.__modtest() [0x427c14]\n??:? int core.runtime.runModuleUnitTests().__foreachbody2(object.ModuleInfo*) [0x42bbbb]\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)).__lambda2(immutable(object.ModuleInfo*)) [0x42aa4e]\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))).__foreachbody2(ref rt.sections_elf_shared.DSO) [0x42fbe1]\n??:? int rt.sections_elf_shared.DSO.opApply(scope int delegate(ref rt.sections_elf_shared.DSO)) [0x430090]\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))) [0x42fb6d]\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)) [0x42aa25]\n??:? runModuleUnitTests [0x42b991]\n??:? void rt.dmain2._d_run_main(int, char**, extern (C) int function(char[][])*).runAll() [0x4282e4]\n??:? void rt.dmain2._d_r",
      "stdout": "",
      "timestamp": 1660164104
    },
    {
      "exit_code": 0,
      "program": "import std.typecons;\nimport std.math;\n/*\n\n    Given a positive integer n, return the count of the numbers of n-digit\n    positive integers that start or end with 1.\n    \n*/\nlong starts_one_ends(long n) \n{\n    long count = 0;\n    long start = 1;\n    long end = 1;\n    for (long i = 1; i < n; i++) {\n        start *= 10;\n        end *= 10;\n    }\n    for (long i = start; i < end * 10; i++) {\n        if (i % 10 == 1 || i / start == 1) {\n            count++;\n        }\n    }\n    return count;\n}\nunittest\n{\n    alias candidate = starts_one_ends;\n\n    assert(candidate(1L) == 1L);\n    assert(candidate(2L) == 18L);\n    assert(candidate(3L) == 180L);\n    assert(candidate(4L) == 1800L);\n    assert(candidate(5L) == 18000L);\n}\nvoid main(){}",
      "status": "OK",
      "stderr": "",
      "stdout": "",
      "timestamp": 1660164104
    },
    {
      "exit_code": 1,
      "program": "import std.typecons;\nimport std.math;\n/*\n\n    Given a positive integer n, return the count of the numbers of n-digit\n    positive integers that start or end with 1.\n    \n*/\nlong starts_one_ends(long n) \n{\n    if (n == 1)\n        return 1;\n    else\n        return (long)pow(10, n - 1) + starts_one_ends(n - 1);\n}\nunittest\n{\n    alias candidate = starts_one_ends;\n\n    assert(candidate(1L) == 1L);\n    assert(candidate(2L) == 18L);\n    assert(candidate(3L) == 180L);\n    assert(candidate(4L) == 1800L);\n    assert(candidate(5L) == 18000L);\n}\nvoid main(){}",
      "status": "SyntaxError",
      "stderr": "/tmp/tmp_ajy4ziz.d(14): Error: C style cast illegal, use `cast(long)pow(10, n - 1)`\nFailed: [\"dmd\", \"-unittest\", \"-v\", \"-o-\", \"/tmp/tmp_ajy4ziz.d\", \"-I/tmp\"]\n",
      "stdout": "",
      "timestamp": 1660164103
    },
    {
      "exit_code": 1,
      "program": "import std.typecons;\nimport std.math;\n/*\n\n    Given a positive integer n, return the count of the numbers of n-digit\n    positive integers that start or end with 1.\n    \n*/\nlong starts_one_ends(long n) \n{\n    /*\n        The number of n-digit positive integers that start or end with 1 is\n        the sum of the number of n-digit positive integers that start with 1\n        and the number of n-digit positive integers that end with 1.\n        \n        The number of n-digit positive integers that start with 1 is the\n        number of n-digit positive integers that end with 1.\n        \n        The number of n-digit positive integers that end with 1 is the number\n        of (n-1)-digit positive integers.\n        \n        The number of (n-1)-digit positive integers is 10^(n-1).\n        \n        Therefore, the number of n-digit positive integers that start or end\n        with 1 is 2 * 10^(n-1).\n    */\n    return 2 * pow(10, n - 1);\n}\nunittest\n{\n    alias candidate = starts_one_ends;\n\n    assert(candidate(1L) == 1L);\n    assert(candidate(2L) == 18L);\n    assert(candidate(3L) == 180L);\n    assert(candidate(4L) == 1800L);\n    assert(candidate(5L) == 18000L);\n}\nvoid main(){}",
      "status": "Exception",
      "stderr": "",
      "stdout": "",
      "timestamp": 1660164104
    },
    {
      "exit_code": 1,
      "program": "import std.typecons;\nimport std.math;\n/*\n\n    Given a positive integer n, return the count of the numbers of n-digit\n    positive integers that start or end with 1.\n    \n*/\nlong starts_one_ends(long n) \n{\n    long result = 0;\n    long max = pow(10, n);\n    foreach(i; 1 .. max) {\n        if (i % 10 == 1 || i / pow(10, n - 1) == 1) {\n            result++;\n        }\n    }\n    return result;\n}\nunittest\n{\n    alias candidate = starts_one_ends;\n\n    assert(candidate(1L) == 1L);\n    assert(candidate(2L) == 18L);\n    assert(candidate(3L) == 180L);\n    assert(candidate(4L) == 1800L);\n    assert(candidate(5L) == 18000L);\n}\nvoid main(){}",
      "status": "Exception",
      "stderr": "core.exception.AssertError@/tmp/tmptn86ba24.d(25): unittest failure\n----------------\n??:? _d_unittestp [0x427ed5]\n??:? void tmptn86ba24.__unittest_L20_C1() [0x427b1d]\n??:? void tmptn86ba24.__modtest() [0x427c54]\n??:? int core.runtime.runModuleUnitTests().__foreachbody2(object.ModuleInfo*) [0x42bbfb]\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)).__lambda2(immutable(object.ModuleInfo*)) [0x42aa8e]\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))).__foreachbody2(ref rt.sections_elf_shared.DSO) [0x42fc21]\n??:? int rt.sections_elf_shared.DSO.opApply(scope int delegate(ref rt.sections_elf_shared.DSO)) [0x4300d0]\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))) [0x42fbad]\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)) [0x42aa65]\n??:? runModuleUnitTests [0x42b9d1]\n??:? void rt.dmain2._d_run_main(int, char**, extern (C) int function(char[][])*).runAll() [0x428324]\n??:? void rt.dmain2._d_r",
      "stdout": "",
      "timestamp": 1660164104
    },
    {
      "exit_code": 1,
      "program": "import std.typecons;\nimport std.math;\n/*\n\n    Given a positive integer n, return the count of the numbers of n-digit\n    positive integers that start or end with 1.\n    \n*/\nlong starts_one_ends(long n) \n{\n    long result = 0;\n    long start = 1;\n    long end = 1;\n    for (long i = 0; i < n; i++) {\n        start *= 10;\n        end *= 10;\n    }\n    start /= 10;\n    end -= 1;\n    result = end - start + 1;\n    return result;\n}\nunittest\n{\n    alias candidate = starts_one_ends;\n\n    assert(candidate(1L) == 1L);\n    assert(candidate(2L) == 18L);\n    assert(candidate(3L) == 180L);\n    assert(candidate(4L) == 1800L);\n    assert(candidate(5L) == 18000L);\n}\nvoid main(){}",
      "status": "Exception",
      "stderr": "core.exception.AssertError@/tmp/tmpnlgkerhj.d(27): unittest failure\n----------------\n??:? _d_unittestp [0x427dad]\n??:? void tmpnlgkerhj.__unittest_L23_C1() [0x427a90]\n??:? void tmpnlgkerhj.__modtest() [0x427b30]\n??:? int core.runtime.runModuleUnitTests().__foreachbody2(object.ModuleInfo*) [0x42bad3]\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)).__lambda2(immutable(object.ModuleInfo*)) [0x42a966]\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))).__foreachbody2(ref rt.sections_elf_shared.DSO) [0x42faf9]\n??:? int rt.sections_elf_shared.DSO.opApply(scope int delegate(ref rt.sections_elf_shared.DSO)) [0x42ffa8]\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))) [0x42fa85]\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)) [0x42a93d]\n??:? runModuleUnitTests [0x42b8a9]\n??:? void rt.dmain2._d_run_main(int, char**, extern (C) int function(char[][])*).runAll() [0x4281fc]\n??:? void rt.dmain2._d_r",
      "stdout": "",
      "timestamp": 1660164103
    },
    {
      "exit_code": 1,
      "program": "import std.typecons;\nimport std.math;\n/*\n\n    Given a positive integer n, return the count of the numbers of n-digit\n    positive integers that start or end with 1.\n    \n*/\nlong starts_one_ends(long n) \n{\n    long count = 0;\n    long start = 1;\n    long end = 1;\n    for (long i = 0; i < n; i++) {\n        start *= 10;\n        end *= 10;\n    }\n    start /= 10;\n    end -= 1;\n    count = end - start + 1;\n    return count;\n}\nunittest\n{\n    alias candidate = starts_one_ends;\n\n    assert(candidate(1L) == 1L);\n    assert(candidate(2L) == 18L);\n    assert(candidate(3L) == 180L);\n    assert(candidate(4L) == 1800L);\n    assert(candidate(5L) == 18000L);\n}\nvoid main(){}",
      "status": "Exception",
      "stderr": "core.exception.AssertError@/tmp/tmpb8pq1bx5.d(27): unittest failure\n----------------\n??:? _d_unittestp [0x427dad]\n??:? void tmpb8pq1bx5.__unittest_L23_C1() [0x427a90]\n??:? void tmpb8pq1bx5.__modtest() [0x427b30]\n??:? int core.runtime.runModuleUnitTests().__foreachbody2(object.ModuleInfo*) [0x42bad3]\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)).__lambda2(immutable(object.ModuleInfo*)) [0x42a966]\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))).__foreachbody2(ref rt.sections_elf_shared.DSO) [0x42faf9]\n??:? int rt.sections_elf_shared.DSO.opApply(scope int delegate(ref rt.sections_elf_shared.DSO)) [0x42ffa8]\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))) [0x42fa85]\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)) [0x42a93d]\n??:? runModuleUnitTests [0x42b8a9]\n??:? void rt.dmain2._d_run_main(int, char**, extern (C) int function(char[][])*).runAll() [0x4281fc]\n??:? void rt.dmain2._d_r",
      "stdout": "",
      "timestamp": 1660164103
    },
    {
      "exit_code": 1,
      "program": "import std.typecons;\nimport std.math;\n/*\n\n    Given a positive integer n, return the count of the numbers of n-digit\n    positive integers that start or end with 1.\n    \n*/\nlong starts_one_ends(long n) \n{\n    if (n == 1)\n        return 2;\n    else if (n == 2)\n        return 3;\n    else\n        return starts_one_ends(n - 1) + starts_one_ends(n - 2);\n}\nunittest\n{\n    alias candidate = starts_one_ends;\n\n    assert(candidate(1L) == 1L);\n    assert(candidate(2L) == 18L);\n    assert(candidate(3L) == 180L);\n    assert(candidate(4L) == 1800L);\n    assert(candidate(5L) == 18000L);\n}\nvoid main(){}",
      "status": "Exception",
      "stderr": "core.exception.AssertError@/tmp/tmpiscpwzr8.d(22): unittest failure\n----------------\n??:? _d_unittestp [0x427d9d]\n??:? void tmpiscpwzr8.__unittest_L18_C1() [0x427a7c]\n??:? void tmpiscpwzr8.__modtest() [0x427b1c]\n??:? int core.runtime.runModuleUnitTests().__foreachbody2(object.ModuleInfo*) [0x42bac3]\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)).__lambda2(immutable(object.ModuleInfo*)) [0x42a956]\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))).__foreachbody2(ref rt.sections_elf_shared.DSO) [0x42fae9]\n??:? int rt.sections_elf_shared.DSO.opApply(scope int delegate(ref rt.sections_elf_shared.DSO)) [0x42ff98]\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))) [0x42fa75]\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)) [0x42a92d]\n??:? runModuleUnitTests [0x42b899]\n??:? void rt.dmain2._d_run_main(int, char**, extern (C) int function(char[][])*).runAll() [0x4281ec]\n??:? void rt.dmain2._d_r",
      "stdout": "",
      "timestamp": 1660164104
    },
    {
      "exit_code": 1,
      "program": "import std.typecons;\nimport std.math;\n/*\n\n    Given a positive integer n, return the count of the numbers of n-digit\n    positive integers that start or end with 1.\n    \n*/\nlong starts_one_ends(long n) \n{\n    long result = 0;\n    long pow = pow(10, n - 1);\n    for (long i = 1; i < 10; i++) \n    {\n        result += pow;\n    }\n    return result;\n}\nunittest\n{\n    alias candidate = starts_one_ends;\n\n    assert(candidate(1L) == 1L);\n    assert(candidate(2L) == 18L);\n    assert(candidate(3L) == 180L);\n    assert(candidate(4L) == 1800L);\n    assert(candidate(5L) == 18000L);\n}\nvoid main(){}",
      "status": "Exception",
      "stderr": "core.exception.AssertError@/tmp/tmp2jg863cu.d(23): unittest failure\n----------------\n??:? _d_unittestp [0x427e85]\n??:? void tmp2jg863cu.__unittest_L19_C1() [0x427aac]\n??:? void tmp2jg863cu.__modtest() [0x427c04]\n??:? int core.runtime.runModuleUnitTests().__foreachbody2(object.ModuleInfo*) [0x42bbab]\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)).__lambda2(immutable(object.ModuleInfo*)) [0x42aa3e]\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))).__foreachbody2(ref rt.sections_elf_shared.DSO) [0x42fbd1]\n??:? int rt.sections_elf_shared.DSO.opApply(scope int delegate(ref rt.sections_elf_shared.DSO)) [0x430080]\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))) [0x42fb5d]\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)) [0x42aa15]\n??:? runModuleUnitTests [0x42b981]\n??:? void rt.dmain2._d_run_main(int, char**, extern (C) int function(char[][])*).runAll() [0x4282d4]\n??:? void rt.dmain2._d_r",
      "stdout": "",
      "timestamp": 1660164104
    },
    {
      "exit_code": 1,
      "program": "import std.typecons;\nimport std.math;\n/*\n\n    Given a positive integer n, return the count of the numbers of n-digit\n    positive integers that start or end with 1.\n    \n*/\nlong starts_one_ends(long n) \n{\n    long result = 0;\n    long start = 1;\n    long end = 1;\n    for (long i = 0; i < n; i++) {\n        start *= 10;\n        end *= 10;\n    }\n    start /= 10;\n    end -= 1;\n    result = end - start + 1;\n    return result;\n}\nunittest\n{\n    alias candidate = starts_one_ends;\n\n    assert(candidate(1L) == 1L);\n    assert(candidate(2L) == 18L);\n    assert(candidate(3L) == 180L);\n    assert(candidate(4L) == 1800L);\n    assert(candidate(5L) == 18000L);\n}\nvoid main(){}",
      "status": "Exception",
      "stderr": "core.exception.AssertError@/tmp/tmpnlgkerhj.d(27): unittest failure\n----------------\n??:? _d_unittestp [0x427dad]\n??:? void tmpnlgkerhj.__unittest_L23_C1() [0x427a90]\n??:? void tmpnlgkerhj.__modtest() [0x427b30]\n??:? int core.runtime.runModuleUnitTests().__foreachbody2(object.ModuleInfo*) [0x42bad3]\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)).__lambda2(immutable(object.ModuleInfo*)) [0x42a966]\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))).__foreachbody2(ref rt.sections_elf_shared.DSO) [0x42faf9]\n??:? int rt.sections_elf_shared.DSO.opApply(scope int delegate(ref rt.sections_elf_shared.DSO)) [0x42ffa8]\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))) [0x42fa85]\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)) [0x42a93d]\n??:? runModuleUnitTests [0x42b8a9]\n??:? void rt.dmain2._d_run_main(int, char**, extern (C) int function(char[][])*).runAll() [0x4281fc]\n??:? void rt.dmain2._d_r",
      "stdout": "",
      "timestamp": 1660164103
    },
    {
      "exit_code": 1,
      "program": "import std.typecons;\nimport std.math;\n/*\n\n    Given a positive integer n, return the count of the numbers of n-digit\n    positive integers that start or end with 1.\n    \n*/\nlong starts_one_ends(long n) \n{\n    long result = 0;\n    long start = 1;\n    long end = 1;\n    for (long i = 0; i < n; i++) {\n        start *= 10;\n        end *= 10;\n    }\n    start /= 10;\n    end -= 1;\n    result = end - start + 1;\n    return result;\n}\nunittest\n{\n    alias candidate = starts_one_ends;\n\n    assert(candidate(1L) == 1L);\n    assert(candidate(2L) == 18L);\n    assert(candidate(3L) == 180L);\n    assert(candidate(4L) == 1800L);\n    assert(candidate(5L) == 18000L);\n}\nvoid main(){}",
      "status": "Exception",
      "stderr": "core.exception.AssertError@/tmp/tmpnlgkerhj.d(27): unittest failure\n----------------\n??:? _d_unittestp [0x427dad]\n??:? void tmpnlgkerhj.__unittest_L23_C1() [0x427a90]\n??:? void tmpnlgkerhj.__modtest() [0x427b30]\n??:? int core.runtime.runModuleUnitTests().__foreachbody2(object.ModuleInfo*) [0x42bad3]\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)).__lambda2(immutable(object.ModuleInfo*)) [0x42a966]\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))).__foreachbody2(ref rt.sections_elf_shared.DSO) [0x42faf9]\n??:? int rt.sections_elf_shared.DSO.opApply(scope int delegate(ref rt.sections_elf_shared.DSO)) [0x42ffa8]\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))) [0x42fa85]\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)) [0x42a93d]\n??:? runModuleUnitTests [0x42b8a9]\n??:? void rt.dmain2._d_run_main(int, char**, extern (C) int function(char[][])*).runAll() [0x4281fc]\n??:? void rt.dmain2._d_r",
      "stdout": "",
      "timestamp": 1660164103
    },
    {
      "exit_code": 1,
      "program": "import std.typecons;\nimport std.math;\n/*\n\n    Given a positive integer n, return the count of the numbers of n-digit\n    positive integers that start or end with 1.\n    \n*/\nlong starts_one_ends(long n) \n{\n    if (n == 1)\n        return 2;\n    else\n        return starts_one_ends(n - 1) + (pow(10, n - 1) - pow(10, n - 2));\n}\nunittest\n{\n    alias candidate = starts_one_ends;\n\n    assert(candidate(1L) == 1L);\n    assert(candidate(2L) == 18L);\n    assert(candidate(3L) == 180L);\n    assert(candidate(4L) == 1800L);\n    assert(candidate(5L) == 18000L);\n}\nvoid main(){}",
      "status": "Exception",
      "stderr": "core.exception.AssertError@/tmp/tmp67_fzwos.d(20): unittest failure\n----------------\n??:? _d_unittestp [0x427ea5]\n??:? void tmp67_fzwos.__unittest_L16_C1() [0x427ad0]\n??:? void tmp67_fzwos.__modtest() [0x427c28]\n??:? int core.runtime.runModuleUnitTests().__foreachbody2(object.ModuleInfo*) [0x42bbcb]\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)).__lambda2(immutable(object.ModuleInfo*)) [0x42aa5e]\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))).__foreachbody2(ref rt.sections_elf_shared.DSO) [0x42fbf1]\n??:? int rt.sections_elf_shared.DSO.opApply(scope int delegate(ref rt.sections_elf_shared.DSO)) [0x4300a0]\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))) [0x42fb7d]\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)) [0x42aa35]\n??:? runModuleUnitTests [0x42b9a1]\n??:? void rt.dmain2._d_run_main(int, char**, extern (C) int function(char[][])*).runAll() [0x4282f4]\n??:? void rt.dmain2._d_r",
      "stdout": "",
      "timestamp": 1660164104
    },
    {
      "exit_code": 1,
      "program": "import std.typecons;\nimport std.math;\n/*\n\n    Given a positive integer n, return the count of the numbers of n-digit\n    positive integers that start or end with 1.\n    \n*/\nlong starts_one_ends(long n) \n{\n    long result = 0;\n    long start = 1;\n    long end = 1;\n    for (long i = 1; i < n; i++) {\n        start *= 10;\n        end *= 10;\n    }\n    end += 1;\n    result = (end - start) * n;\n    return result;\n}\nunittest\n{\n    alias candidate = starts_one_ends;\n\n    assert(candidate(1L) == 1L);\n    assert(candidate(2L) == 18L);\n    assert(candidate(3L) == 180L);\n    assert(candidate(4L) == 1800L);\n    assert(candidate(5L) == 18000L);\n}\nvoid main(){}",
      "status": "Exception",
      "stderr": "core.exception.AssertError@/tmp/tmp6beyxa5p.d(27): unittest failure\n----------------\n??:? _d_unittestp [0x427da5]\n??:? void tmp6beyxa5p.__unittest_L22_C1() [0x427aa9]\n??:? void tmp6beyxa5p.__modtest() [0x427b28]\n??:? int core.runtime.runModuleUnitTests().__foreachbody2(object.ModuleInfo*) [0x42bacb]\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)).__lambda2(immutable(object.ModuleInfo*)) [0x42a95e]\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))).__foreachbody2(ref rt.sections_elf_shared.DSO) [0x42faf1]\n??:? int rt.sections_elf_shared.DSO.opApply(scope int delegate(ref rt.sections_elf_shared.DSO)) [0x42ffa0]\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))) [0x42fa7d]\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)) [0x42a935]\n??:? runModuleUnitTests [0x42b8a1]\n??:? void rt.dmain2._d_run_main(int, char**, extern (C) int function(char[][])*).runAll() [0x4281f4]\n??:? void rt.dmain2._d_r",
      "stdout": "",
      "timestamp": 1660164104
    },
    {
      "exit_code": 1,
      "program": "import std.typecons;\nimport std.math;\n/*\n\n    Given a positive integer n, return the count of the numbers of n-digit\n    positive integers that start or end with 1.\n    \n*/\nlong starts_one_ends(long n) \n{\n    long count = 0;\n    long max = pow(10, n);\n    long min = pow(10, n - 1);\n    foreach(i; min .. max) {\n        if (i % 10 == 1 || i / 10 == 1) {\n            count++;\n        }\n    }\n    return count;\n}\nunittest\n{\n    alias candidate = starts_one_ends;\n\n    assert(candidate(1L) == 1L);\n    assert(candidate(2L) == 18L);\n    assert(candidate(3L) == 180L);\n    assert(candidate(4L) == 1800L);\n    assert(candidate(5L) == 18000L);\n}\nvoid main(){}",
      "status": "Exception",
      "stderr": "core.exception.AssertError@/tmp/tmpqixfpz4q.d(27): unittest failure\n----------------\n??:? _d_unittestp [0x427ecd]\n??:? void tmpqixfpz4q.__unittest_L21_C1() [0x427b3c]\n??:? void tmpqixfpz4q.__modtest() [0x427c50]\n??:? int core.runtime.runModuleUnitTests().__foreachbody2(object.ModuleInfo*) [0x42bbf3]\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)).__lambda2(immutable(object.ModuleInfo*)) [0x42aa86]\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))).__foreachbody2(ref rt.sections_elf_shared.DSO) [0x42fc19]\n??:? int rt.sections_elf_shared.DSO.opApply(scope int delegate(ref rt.sections_elf_shared.DSO)) [0x4300c8]\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))) [0x42fba5]\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)) [0x42aa5d]\n??:? runModuleUnitTests [0x42b9c9]\n??:? void rt.dmain2._d_run_main(int, char**, extern (C) int function(char[][])*).runAll() [0x42831c]\n??:? void rt.dmain2._d_r",
      "stdout": "",
      "timestamp": 1660164104
    },
    {
      "exit_code": 1,
      "program": "import std.typecons;\nimport std.math;\n/*\n\n    Given a positive integer n, return the count of the numbers of n-digit\n    positive integers that start or end with 1.\n    \n*/\nlong starts_one_ends(long n) \n{\n    long result = 0;\n    long start = 1;\n    long end = 1;\n    for (long i = 1; i < n; i++) {\n        start *= 10;\n        end *= 10;\n    }\n    result += start;\n    result += end;\n    result += (start - 1) * (n - 1);\n    return result;\n}\nunittest\n{\n    alias candidate = starts_one_ends;\n\n    assert(candidate(1L) == 1L);\n    assert(candidate(2L) == 18L);\n    assert(candidate(3L) == 180L);\n    assert(candidate(4L) == 1800L);\n    assert(candidate(5L) == 18000L);\n}\nvoid main(){}",
      "status": "Exception",
      "stderr": "core.exception.AssertError@/tmp/tmpmqihdxwy.d(27): unittest failure\n----------------\n??:? _d_unittestp [0x427dc5]\n??:? void tmpmqihdxwy.__unittest_L23_C1() [0x427aa4]\n??:? void tmpmqihdxwy.__modtest() [0x427b44]\n??:? int core.runtime.runModuleUnitTests().__foreachbody2(object.ModuleInfo*) [0x42baeb]\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)).__lambda2(immutable(object.ModuleInfo*)) [0x42a97e]\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))).__foreachbody2(ref rt.sections_elf_shared.DSO) [0x42fb11]\n??:? int rt.sections_elf_shared.DSO.opApply(scope int delegate(ref rt.sections_elf_shared.DSO)) [0x42ffc0]\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))) [0x42fa9d]\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)) [0x42a955]\n??:? runModuleUnitTests [0x42b8c1]\n??:? void rt.dmain2._d_run_main(int, char**, extern (C) int function(char[][])*).runAll() [0x428214]\n??:? void rt.dmain2._d_r",
      "stdout": "",
      "timestamp": 1660164104
    },
    {
      "exit_code": 1,
      "program": "import std.typecons;\nimport std.math;\n/*\n\n    Given a positive integer n, return the count of the numbers of n-digit\n    positive integers that start or end with 1.\n    \n*/\nlong starts_one_ends(long n) \n{\n    if (n == 1) \n        return 2;\n    else \n        return (pow(10, n) - pow(9, n) - pow(10, n - 1) + pow(8, n - 1)) / 9;\n}\nunittest\n{\n    alias candidate = starts_one_ends;\n\n    assert(candidate(1L) == 1L);\n    assert(candidate(2L) == 18L);\n    assert(candidate(3L) == 180L);\n    assert(candidate(4L) == 1800L);\n    assert(candidate(5L) == 18000L);\n}\nvoid main(){}",
      "status": "Exception",
      "stderr": "core.exception.AssertError@/tmp/tmpqbtlfzo4.d(20): unittest failure\n----------------\n??:? _d_unittestp [0x427edd]\n??:? void tmpqbtlfzo4.__unittest_L16_C1() [0x427b04]\n??:? void tmpqbtlfzo4.__modtest() [0x427c5c]\n??:? int core.runtime.runModuleUnitTests().__foreachbody2(object.ModuleInfo*) [0x42bc03]\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)).__lambda2(immutable(object.ModuleInfo*)) [0x42aa96]\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))).__foreachbody2(ref rt.sections_elf_shared.DSO) [0x42fc29]\n??:? int rt.sections_elf_shared.DSO.opApply(scope int delegate(ref rt.sections_elf_shared.DSO)) [0x4300d8]\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))) [0x42fbb5]\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)) [0x42aa6d]\n??:? runModuleUnitTests [0x42b9d9]\n??:? void rt.dmain2._d_run_main(int, char**, extern (C) int function(char[][])*).runAll() [0x42832c]\n??:? void rt.dmain2._d_r",
      "stdout": "",
      "timestamp": 1660164104
    },
    {
      "exit_code": 1,
      "program": "import std.typecons;\nimport std.math;\n/*\n\n    Given a positive integer n, return the count of the numbers of n-digit\n    positive integers that start or end with 1.\n    \n*/\nlong starts_one_ends(long n) \n{\n    if (n == 1)\n        return 2;\n    else\n        return (pow(10, n - 1) - pow(10, n - 2)) * 2;\n}\nunittest\n{\n    alias candidate = starts_one_ends;\n\n    assert(candidate(1L) == 1L);\n    assert(candidate(2L) == 18L);\n    assert(candidate(3L) == 180L);\n    assert(candidate(4L) == 1800L);\n    assert(candidate(5L) == 18000L);\n}\nvoid main(){}",
      "status": "Exception",
      "stderr": "core.exception.AssertError@/tmp/tmpkzm_1uz_.d(20): unittest failure\n----------------\n??:? _d_unittestp [0x427e95]\n??:? void tmpkzm_1uz_.__unittest_L16_C1() [0x427abc]\n??:? void tmpkzm_1uz_.__modtest() [0x427c14]\n??:? int core.runtime.runModuleUnitTests().__foreachbody2(object.ModuleInfo*) [0x42bbbb]\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)).__lambda2(immutable(object.ModuleInfo*)) [0x42aa4e]\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))).__foreachbody2(ref rt.sections_elf_shared.DSO) [0x42fbe1]\n??:? int rt.sections_elf_shared.DSO.opApply(scope int delegate(ref rt.sections_elf_shared.DSO)) [0x430090]\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))) [0x42fb6d]\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)) [0x42aa25]\n??:? runModuleUnitTests [0x42b991]\n??:? void rt.dmain2._d_run_main(int, char**, extern (C) int function(char[][])*).runAll() [0x4282e4]\n??:? void rt.dmain2._d_r",
      "stdout": "",
      "timestamp": 1660164104
    },
    {
      "exit_code": 1,
      "program": "import std.typecons;\nimport std.math;\n/*\n\n    Given a positive integer n, return the count of the numbers of n-digit\n    positive integers that start or end with 1.\n    \n*/\nlong starts_one_ends(long n) \n{\n    long result = 0;\n    long start = 1;\n    long end = 1;\n    foreach(i; 0 .. n)\n    {\n        result += start * end;\n        start *= 10;\n        end = end * 10 + 1;\n    }\n    return result;\n}\nunittest\n{\n    alias candidate = starts_one_ends;\n\n    assert(candidate(1L) == 1L);\n    assert(candidate(2L) == 18L);\n    assert(candidate(3L) == 180L);\n    assert(candidate(4L) == 1800L);\n    assert(candidate(5L) == 18000L);\n}\nvoid main(){}",
      "status": "Exception",
      "stderr": "core.exception.AssertError@/tmp/tmpezdj8jtf.d(27): unittest failure\n----------------\n??:? _d_unittestp [0x427db5]\n??:? void tmpezdj8jtf.__unittest_L22_C1() [0x427ab9]\n??:? void tmpezdj8jtf.__modtest() [0x427b38]\n??:? int core.runtime.runModuleUnitTests().__foreachbody2(object.ModuleInfo*) [0x42badb]\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)).__lambda2(immutable(object.ModuleInfo*)) [0x42a96e]\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))).__foreachbody2(ref rt.sections_elf_shared.DSO) [0x42fb01]\n??:? int rt.sections_elf_shared.DSO.opApply(scope int delegate(ref rt.sections_elf_shared.DSO)) [0x42ffb0]\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))) [0x42fa8d]\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)) [0x42a945]\n??:? runModuleUnitTests [0x42b8b1]\n??:? void rt.dmain2._d_run_main(int, char**, extern (C) int function(char[][])*).runAll() [0x428204]\n??:? void rt.dmain2._d_r",
      "stdout": "",
      "timestamp": 1660164104
    },
    {
      "exit_code": 1,
      "program": "import std.typecons;\nimport std.math;\n/*\n\n    Given a positive integer n, return the count of the numbers of n-digit\n    positive integers that start or end with 1.\n    \n*/\nlong starts_one_ends(long n) \n{\n    long result = 0;\n    if (n == 1)\n        return 1;\n    else if (n == 2)\n        return 10;\n    else\n    {\n        result = starts_one_ends(n - 1) + starts_one_ends(n - 2);\n        return result;\n    }\n}\nunittest\n{\n    alias candidate = starts_one_ends;\n\n    assert(candidate(1L) == 1L);\n    assert(candidate(2L) == 18L);\n    assert(candidate(3L) == 180L);\n    assert(candidate(4L) == 1800L);\n    assert(candidate(5L) == 18000L);\n}\nvoid main(){}",
      "status": "Exception",
      "stderr": "core.exception.AssertError@/tmp/tmporr6vw0j.d(27): unittest failure\n----------------\n??:? _d_unittestp [0x427d9d]\n??:? void tmporr6vw0j.__unittest_L22_C1() [0x427a9d]\n??:? void tmporr6vw0j.__modtest() [0x427b1c]\n??:? int core.runtime.runModuleUnitTests().__foreachbody2(object.ModuleInfo*) [0x42bac3]\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)).__lambda2(immutable(object.ModuleInfo*)) [0x42a956]\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))).__foreachbody2(ref rt.sections_elf_shared.DSO) [0x42fae9]\n??:? int rt.sections_elf_shared.DSO.opApply(scope int delegate(ref rt.sections_elf_shared.DSO)) [0x42ff98]\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))) [0x42fa75]\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)) [0x42a92d]\n??:? runModuleUnitTests [0x42b899]\n??:? void rt.dmain2._d_run_main(int, char**, extern (C) int function(char[][])*).runAll() [0x4281ec]\n??:? void rt.dmain2._d_r",
      "stdout": "",
      "timestamp": 1660164103
    },
    {
      "exit_code": 1,
      "program": "import std.typecons;\nimport std.math;\n/*\n\n    Given a positive integer n, return the count of the numbers of n-digit\n    positive integers that start or end with 1.\n    \n*/\nlong starts_one_ends(long n) \n{\n    long result = 0;\n    long max = pow(10, n);\n    long min = pow(10, n - 1);\n    foreach(i; min .. max)\n    {\n        string s = to!string(i);\n        if(s[0] == '1' || s[$ - 1] == '1')\n            result++;\n    }\n    return result;\n}\nunittest\n{\n    alias candidate = starts_one_ends;\n\n    assert(candidate(1L) == 1L);\n    assert(candidate(2L) == 18L);\n    assert(candidate(3L) == 180L);\n    assert(candidate(4L) == 1800L);\n    assert(candidate(5L) == 18000L);\n}\nvoid main(){}",
      "status": "SyntaxError",
      "stderr": "/tmp/tmpn_bb3zz3.d(16): Error: template instance `to!string` template `to` is not defined, did you mean No?\nFailed: [\"dmd\", \"-unittest\", \"-v\", \"-o-\", \"/tmp/tmpn_bb3zz3.d\", \"-I/tmp\"]\n",
      "stdout": "",
      "timestamp": 1660164103
    },
    {
      "exit_code": 1,
      "program": "import std.typecons;\nimport std.math;\n/*\n\n    Given a positive integer n, return the count of the numbers of n-digit\n    positive integers that start or end with 1.\n    \n*/\nlong starts_one_ends(long n) \n{\n    long result = 0;\n    long start = 1;\n    long end = 1;\n    long i = 0;\n    while (i < n) {\n        start *= 10;\n        end *= 10;\n        i++;\n    }\n    start /= 10;\n    end -= 1;\n    result = end - start + 1;\n    return result;\n}\nunittest\n{\n    alias candidate = starts_one_ends;\n\n    assert(candidate(1L) == 1L);\n    assert(candidate(2L) == 18L);\n    assert(candidate(3L) == 180L);\n    assert(candidate(4L) == 1800L);\n    assert(candidate(5L) == 18000L);\n}\nvoid main(){}",
      "status": "Exception",
      "stderr": "core.exception.AssertError@/tmp/tmp33f5lx76.d(29): unittest failure\n----------------\n??:? _d_unittestp [0x427dad]\n??:? void tmp33f5lx76.__unittest_L25_C1() [0x427a90]\n??:? void tmp33f5lx76.__modtest() [0x427b30]\n??:? int core.runtime.runModuleUnitTests().__foreachbody2(object.ModuleInfo*) [0x42bad3]\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)).__lambda2(immutable(object.ModuleInfo*)) [0x42a966]\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))).__foreachbody2(ref rt.sections_elf_shared.DSO) [0x42faf9]\n??:? int rt.sections_elf_shared.DSO.opApply(scope int delegate(ref rt.sections_elf_shared.DSO)) [0x42ffa8]\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))) [0x42fa85]\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)) [0x42a93d]\n??:? runModuleUnitTests [0x42b8a9]\n??:? void rt.dmain2._d_run_main(int, char**, extern (C) int function(char[][])*).runAll() [0x4281fc]\n??:? void rt.dmain2._d_r",
      "stdout": "",
      "timestamp": 1660164104
    },
    {
      "exit_code": 1,
      "program": "import std.typecons;\nimport std.math;\n/*\n\n    Given a positive integer n, return the count of the numbers of n-digit\n    positive integers that start or end with 1.\n    \n*/\nlong starts_one_ends(long n) \n{\n    long count = 0;\n    long max = pow(10, n);\n    for (long i = 1; i < max; i++) \n    {\n        if (i % 10 == 1) \n        {\n            count++;\n        }\n        if (i / 10 == 1) \n        {\n            count++;\n        }\n    }\n    return count;\n}\nunittest\n{\n    alias candidate = starts_one_ends;\n\n    assert(candidate(1L) == 1L);\n    assert(candidate(2L) == 18L);\n    assert(candidate(3L) == 180L);\n    assert(candidate(4L) == 1800L);\n    assert(candidate(5L) == 18000L);\n}\nvoid main(){}",
      "status": "Exception",
      "stderr": "core.exception.AssertError@/tmp/tmp78fmzgna.d(31): unittest failure\n----------------\n??:? _d_unittestp [0x427ea5]\n??:? void tmp78fmzgna.__unittest_L26_C1() [0x427af1]\n??:? void tmp78fmzgna.__modtest() [0x427c28]\n??:? int core.runtime.runModuleUnitTests().__foreachbody2(object.ModuleInfo*) [0x42bbcb]\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)).__lambda2(immutable(object.ModuleInfo*)) [0x42aa5e]\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))).__foreachbody2(ref rt.sections_elf_shared.DSO) [0x42fbf1]\n??:? int rt.sections_elf_shared.DSO.opApply(scope int delegate(ref rt.sections_elf_shared.DSO)) [0x4300a0]\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))) [0x42fb7d]\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)) [0x42aa35]\n??:? runModuleUnitTests [0x42b9a1]\n??:? void rt.dmain2._d_run_main(int, char**, extern (C) int function(char[][])*).runAll() [0x4282f4]\n??:? void rt.dmain2._d_r",
      "stdout": "",
      "timestamp": 1660164104
    },
    {
      "exit_code": 1,
      "program": "import std.typecons;\nimport std.math;\n/*\n\n    Given a positive integer n, return the count of the numbers of n-digit\n    positive integers that start or end with 1.\n    \n*/\nlong starts_one_ends(long n) \n{\n    if (n == 1)\n        return 1;\n    else\n        return (n - 1) * pow(10, n - 2) + starts_one_ends(n - 1);\n}\nunittest\n{\n    alias candidate = starts_one_ends;\n\n    assert(candidate(1L) == 1L);\n    assert(candidate(2L) == 18L);\n    assert(candidate(3L) == 180L);\n    assert(candidate(4L) == 1800L);\n    assert(candidate(5L) == 18000L);\n}\nvoid main(){}",
      "status": "Exception",
      "stderr": "core.exception.AssertError@/tmp/tmppsizuxl5.d(21): unittest failure\n----------------\n??:? _d_unittestp [0x427e95]\n??:? void tmppsizuxl5.__unittest_L16_C1() [0x427ae1]\n??:? void tmppsizuxl5.__modtest() [0x427c18]\n??:? int core.runtime.runModuleUnitTests().__foreachbody2(object.ModuleInfo*) [0x42bbbb]\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)).__lambda2(immutable(object.ModuleInfo*)) [0x42aa4e]\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))).__foreachbody2(ref rt.sections_elf_shared.DSO) [0x42fbe1]\n??:? int rt.sections_elf_shared.DSO.opApply(scope int delegate(ref rt.sections_elf_shared.DSO)) [0x430090]\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))) [0x42fb6d]\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)) [0x42aa25]\n??:? runModuleUnitTests [0x42b991]\n??:? void rt.dmain2._d_run_main(int, char**, extern (C) int function(char[][])*).runAll() [0x4282e4]\n??:? void rt.dmain2._d_r",
      "stdout": "",
      "timestamp": 1660164104
    },
    {
      "exit_code": 1,
      "program": "import std.typecons;\nimport std.math;\n/*\n\n    Given a positive integer n, return the count of the numbers of n-digit\n    positive integers that start or end with 1.\n    \n*/\nlong starts_one_ends(long n) \n{\n    long count = 0;\n    long max = pow(10, n);\n    for (long i = 1; i < max; i++) {\n        if (i % 10 == 1) {\n            count++;\n        }\n    }\n    return count;\n}\nunittest\n{\n    alias candidate = starts_one_ends;\n\n    assert(candidate(1L) == 1L);\n    assert(candidate(2L) == 18L);\n    assert(candidate(3L) == 180L);\n    assert(candidate(4L) == 1800L);\n    assert(candidate(5L) == 18000L);\n}\nvoid main(){}",
      "status": "Exception",
      "stderr": "core.exception.AssertError@/tmp/tmpcznnf5qq.d(25): unittest failure\n----------------\n??:? _d_unittestp [0x427e95]\n??:? void tmpcznnf5qq.__unittest_L20_C1() [0x427add]\n??:? void tmpcznnf5qq.__modtest() [0x427c14]\n??:? int core.runtime.runModuleUnitTests().__foreachbody2(object.ModuleInfo*) [0x42bbbb]\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)).__lambda2(immutable(object.ModuleInfo*)) [0x42aa4e]\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))).__foreachbody2(ref rt.sections_elf_shared.DSO) [0x42fbe1]\n??:? int rt.sections_elf_shared.DSO.opApply(scope int delegate(ref rt.sections_elf_shared.DSO)) [0x430090]\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))) [0x42fb6d]\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)) [0x42aa25]\n??:? runModuleUnitTests [0x42b991]\n??:? void rt.dmain2._d_run_main(int, char**, extern (C) int function(char[][])*).runAll() [0x4282e4]\n??:? void rt.dmain2._d_r",
      "stdout": "",
      "timestamp": 1660164104
    },
    {
      "exit_code": 1,
      "program": "import std.typecons;\nimport std.math;\n/*\n\n    Given a positive integer n, return the count of the numbers of n-digit\n    positive integers that start or end with 1.\n    \n*/\nlong starts_one_ends(long n) \n{\n    if (n == 1)\n        return 2;\n    else if (n == 2)\n        return 3;\n    else\n        return starts_one_ends(n - 1) + starts_one_ends(n - 2);\n}\nunittest\n{\n    alias candidate = starts_one_ends;\n\n    assert(candidate(1L) == 1L);\n    assert(candidate(2L) == 18L);\n    assert(candidate(3L) == 180L);\n    assert(candidate(4L) == 1800L);\n    assert(candidate(5L) == 18000L);\n}\nvoid main(){}",
      "status": "Exception",
      "stderr": "core.exception.AssertError@/tmp/tmpiscpwzr8.d(22): unittest failure\n----------------\n??:? _d_unittestp [0x427d9d]\n??:? void tmpiscpwzr8.__unittest_L18_C1() [0x427a7c]\n??:? void tmpiscpwzr8.__modtest() [0x427b1c]\n??:? int core.runtime.runModuleUnitTests().__foreachbody2(object.ModuleInfo*) [0x42bac3]\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)).__lambda2(immutable(object.ModuleInfo*)) [0x42a956]\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))).__foreachbody2(ref rt.sections_elf_shared.DSO) [0x42fae9]\n??:? int rt.sections_elf_shared.DSO.opApply(scope int delegate(ref rt.sections_elf_shared.DSO)) [0x42ff98]\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))) [0x42fa75]\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)) [0x42a92d]\n??:? runModuleUnitTests [0x42b899]\n??:? void rt.dmain2._d_run_main(int, char**, extern (C) int function(char[][])*).runAll() [0x4281ec]\n??:? void rt.dmain2._d_r",
      "stdout": "",
      "timestamp": 1660164104
    },
    {
      "exit_code": 1,
      "program": "import std.typecons;\nimport std.math;\n/*\n\n    Given a positive integer n, return the count of the numbers of n-digit\n    positive integers that start or end with 1.\n    \n*/\nlong starts_one_ends(long n) \n{\n    long res = 0;\n    long max = pow(10, n);\n    for (long i = 1; i < max; i++) {\n        if (i % 10 == 1) {\n            res++;\n        }\n    }\n    return res;\n}\nunittest\n{\n    alias candidate = starts_one_ends;\n\n    assert(candidate(1L) == 1L);\n    assert(candidate(2L) == 18L);\n    assert(candidate(3L) == 180L);\n    assert(candidate(4L) == 1800L);\n    assert(candidate(5L) == 18000L);\n}\nvoid main(){}",
      "status": "Exception",
      "stderr": "core.exception.AssertError@/tmp/tmpb4khc_mu.d(25): unittest failure\n----------------\n??:? _d_unittestp [0x427e95]\n??:? void tmpb4khc_mu.__unittest_L20_C1() [0x427add]\n??:? void tmpb4khc_mu.__modtest() [0x427c14]\n??:? int core.runtime.runModuleUnitTests().__foreachbody2(object.ModuleInfo*) [0x42bbbb]\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)).__lambda2(immutable(object.ModuleInfo*)) [0x42aa4e]\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))).__foreachbody2(ref rt.sections_elf_shared.DSO) [0x42fbe1]\n??:? int rt.sections_elf_shared.DSO.opApply(scope int delegate(ref rt.sections_elf_shared.DSO)) [0x430090]\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))) [0x42fb6d]\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)) [0x42aa25]\n??:? runModuleUnitTests [0x42b991]\n??:? void rt.dmain2._d_run_main(int, char**, extern (C) int function(char[][])*).runAll() [0x4282e4]\n??:? void rt.dmain2._d_r",
      "stdout": "",
      "timestamp": 1660164104
    },
    {
      "exit_code": 1,
      "program": "import std.typecons;\nimport std.math;\n/*\n\n    Given a positive integer n, return the count of the numbers of n-digit\n    positive integers that start or end with 1.\n    \n*/\nlong starts_one_ends(long n) \n{\n    long result = 0;\n    if (n == 1)\n        return 1;\n    else if (n == 2)\n        return 10;\n    else\n    {\n        result = starts_one_ends(n - 1) + starts_one_ends(n - 2);\n        return result;\n    }\n}\nunittest\n{\n    alias candidate = starts_one_ends;\n\n    assert(candidate(1L) == 1L);\n    assert(candidate(2L) == 18L);\n    assert(candidate(3L) == 180L);\n    assert(candidate(4L) == 1800L);\n    assert(candidate(5L) == 18000L);\n}\nvoid main(){}",
      "status": "Exception",
      "stderr": "core.exception.AssertError@/tmp/tmporr6vw0j.d(27): unittest failure\n----------------\n??:? _d_unittestp [0x427d9d]\n??:? void tmporr6vw0j.__unittest_L22_C1() [0x427a9d]\n??:? void tmporr6vw0j.__modtest() [0x427b1c]\n??:? int core.runtime.runModuleUnitTests().__foreachbody2(object.ModuleInfo*) [0x42bac3]\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)).__lambda2(immutable(object.ModuleInfo*)) [0x42a956]\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))).__foreachbody2(ref rt.sections_elf_shared.DSO) [0x42fae9]\n??:? int rt.sections_elf_shared.DSO.opApply(scope int delegate(ref rt.sections_elf_shared.DSO)) [0x42ff98]\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))) [0x42fa75]\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)) [0x42a92d]\n??:? runModuleUnitTests [0x42b899]\n??:? void rt.dmain2._d_run_main(int, char**, extern (C) int function(char[][])*).runAll() [0x4281ec]\n??:? void rt.dmain2._d_r",
      "stdout": "",
      "timestamp": 1660164103
    },
    {
      "exit_code": 1,
      "program": "import std.typecons;\nimport std.math;\n/*\n\n    Given a positive integer n, return the count of the numbers of n-digit\n    positive integers that start or end with 1.\n    \n*/\nlong starts_one_ends(long n) \n{\n    if (n == 1)\n        return 2;\n    else if (n == 2)\n        return 3;\n    else\n        return starts_one_ends(n - 1) + starts_one_ends(n - 2);\n}\nunittest\n{\n    alias candidate = starts_one_ends;\n\n    assert(candidate(1L) == 1L);\n    assert(candidate(2L) == 18L);\n    assert(candidate(3L) == 180L);\n    assert(candidate(4L) == 1800L);\n    assert(candidate(5L) == 18000L);\n}\nvoid main(){}",
      "status": "Exception",
      "stderr": "core.exception.AssertError@/tmp/tmpiscpwzr8.d(22): unittest failure\n----------------\n??:? _d_unittestp [0x427d9d]\n??:? void tmpiscpwzr8.__unittest_L18_C1() [0x427a7c]\n??:? void tmpiscpwzr8.__modtest() [0x427b1c]\n??:? int core.runtime.runModuleUnitTests().__foreachbody2(object.ModuleInfo*) [0x42bac3]\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)).__lambda2(immutable(object.ModuleInfo*)) [0x42a956]\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))).__foreachbody2(ref rt.sections_elf_shared.DSO) [0x42fae9]\n??:? int rt.sections_elf_shared.DSO.opApply(scope int delegate(ref rt.sections_elf_shared.DSO)) [0x42ff98]\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))) [0x42fa75]\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)) [0x42a92d]\n??:? runModuleUnitTests [0x42b899]\n??:? void rt.dmain2._d_run_main(int, char**, extern (C) int function(char[][])*).runAll() [0x4281ec]\n??:? void rt.dmain2._d_r",
      "stdout": "",
      "timestamp": 1660164104
    },
    {
      "exit_code": 1,
      "program": "import std.typecons;\nimport std.math;\n/*\n\n    Given a positive integer n, return the count of the numbers of n-digit\n    positive integers that start or end with 1.\n    \n*/\nlong starts_one_ends(long n) \n{\n    long result = 0;\n    long start = 1;\n    long end = 1;\n    for (long i = 0; i < n; i++) {\n        start *= 10;\n        end *= 10;\n    }\n    end -= 1;\n    result = end - start + 1;\n    return result;\n}\nunittest\n{\n    alias candidate = starts_one_ends;\n\n    assert(candidate(1L) == 1L);\n    assert(candidate(2L) == 18L);\n    assert(candidate(3L) == 180L);\n    assert(candidate(4L) == 1800L);\n    assert(candidate(5L) == 18000L);\n}\nvoid main(){}",
      "status": "Exception",
      "stderr": "core.exception.AssertError@/tmp/tmp5dgtn8yy.d(26): unittest failure\n----------------\n??:? _d_unittestp [0x427d9d]\n??:? void tmp5dgtn8yy.__unittest_L22_C1() [0x427a7c]\n??:? void tmp5dgtn8yy.__modtest() [0x427b1c]\n??:? int core.runtime.runModuleUnitTests().__foreachbody2(object.ModuleInfo*) [0x42bac3]\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)).__lambda2(immutable(object.ModuleInfo*)) [0x42a956]\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))).__foreachbody2(ref rt.sections_elf_shared.DSO) [0x42fae9]\n??:? int rt.sections_elf_shared.DSO.opApply(scope int delegate(ref rt.sections_elf_shared.DSO)) [0x42ff98]\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))) [0x42fa75]\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)) [0x42a92d]\n??:? runModuleUnitTests [0x42b899]\n??:? void rt.dmain2._d_run_main(int, char**, extern (C) int function(char[][])*).runAll() [0x4281ec]\n??:? void rt.dmain2._d_r",
      "stdout": "",
      "timestamp": 1660164104
    },
    {
      "exit_code": 1,
      "program": "import std.typecons;\nimport std.math;\n/*\n\n    Given a positive integer n, return the count of the numbers of n-digit\n    positive integers that start or end with 1.\n    \n*/\nlong starts_one_ends(long n) \n{\n    long count = 0;\n    long start = 1;\n    long end = 1;\n    long i = 0;\n    long j = 0;\n    long k = 0;\n    long m = 0;\n    long x = 0;\n    long y = 0;\n    long z = 0;\n    long w = 0;\n    long v = 0;\n    long u = 0;\n    long t = 0;\n    long s = 0;\n    long r = 0;\n    long q = 0;\n    long p = 0;\n    long o = 0;\n    long l = 0;\n    long h = 0;\n    long g = 0;\n    long f = 0;\n    long e = 0;\n    long d = 0;\n    long c = 0;\n    long b = 0;\n    long a = 0;\n    long N = 0;\n    long M = 0;\n    long L = 0;\n    long K = 0;\n    long J = 0;\n    long I = 0;\n    long H = 0;\n    long G = 0;\n    long F = 0;\n    long E = 0;\n    long D = 0;\n    long C = 0;\n    long B = 0;\n    long A = 0;\n    long Z = 0;\n    long Y = 0;\n    long X = 0;\n    long W = 0;\n    long V = 0;\n    long U = 0;\n    long T = 0;\n    long S = 0;\n    long R = 0;\n    long Q = 0;\n    long P = 0;\n    long O = 0;\n    long[] arr = new long[n];\n    long[] arr2 = new long[n];\n    long[] arr3 = new long[n];\n    long[] arr4 = new long[n];\n    long[] arr5 = new long[n];\n    long[] arr6 = new long[n];\n    long[] arr7 = new long[n];\n    long[] arr8 = new long[n];\n    long[] arr9 = new long[n];\n    long[] arr10 = new long[n];\n    long[] arr11 = new long[n];\n\nunittest\n{\n    alias candidate = starts_one_ends;\n\n    assert(candidate(1L) == 1L);\n    assert(candidate(2L) == 18L);\n    assert(candidate(3L) == 180L);\n    assert(candidate(4L) == 1800L);\n    assert(candidate(5L) == 18000L);\n}\nvoid main(){}",
      "status": "SyntaxError",
      "stderr": "/tmp/tmpxw0zy6hi.d(77): Error: found `unittest` instead of statement\nFailed: [\"dmd\", \"-unittest\", \"-v\", \"-o-\", \"/tmp/tmpxw0zy6hi.d\", \"-I/tmp\"]\n",
      "stdout": "",
      "timestamp": 1660164104
    },
    {
      "exit_code": 1,
      "program": "import std.typecons;\nimport std.math;\n/*\n\n    Given a positive integer n, return the count of the numbers of n-digit\n    positive integers that start or end with 1.\n    \n*/\nlong starts_one_ends(long n) \n{\n    long result = 0;\n    long start = 1;\n    long end = 1;\n    long i = 0;\n    long j = 0;\n    long k = 0;\n    long l = 0;\n    long m = 0;\n    long n = 0;\n    long o = 0;\n    long p = 0;\n    long q = 0;\n    long r = 0;\n    long s = 0;\n    long t = 0;\n    long u = 0;\n    long v = 0;\n    long w = 0;\n    long x = 0;\n    long y = 0;\n    long z = 0;\n    long aa = 0;\n    long ab = 0;\n    long ac = 0;\n    long ad = 0;\n    long ae = 0;\n    long af = 0;\n    long ag = 0;\n    long ah = 0;\n    long ai = 0;\n    long aj = 0;\n    long ak = 0;\n    long al = 0;\n    long am = 0;\n    long an = 0;\n    long ao = 0;\n    long ap = 0;\n    long aq = 0;\n    long ar = 0;\n    long as = 0;\n    long at = 0;\n    long au = 0;\n    long av = 0;\n    long aw = 0;\n    long ax = 0;\n    long ay = 0;\n    long az = 0;\n    long ba = 0;\n    long bb = 0;\n    long bc = 0;\n    long bd = 0;\n    long be = 0;\n    long bf = 0;\n    long bg = 0;\n    long bh = 0;\n    long bi = 0;\n    long bj = 0;\n    long bk = 0;\n    long bl = 0;\n    long bm = 0;\n    long bn = 0;\n    long bo = 0;\n    long bp = 0;\n    long bq = 0;\n    long br = 0;\n    long bs = 0;\n    long bt = 0;\n    long bu = 0;\n    long bv = 0;\n    long bw = 0\nunittest\n{\n    alias candidate = starts_one_ends;\n\n    assert(candidate(1L) == 1L);\n    assert(candidate(2L) == 18L);\n    assert(candidate(3L) == 180L);\n    assert(candidate(4L) == 1800L);\n    assert(candidate(5L) == 18000L);\n}\nvoid main(){}",
      "status": "SyntaxError",
      "stderr": "/tmp/tmp16kpu47v.d(81): Error: semicolon expected, not `unittest`\n/tmp/tmp16kpu47v.d(81): Error: found `unittest` instead of statement\nFailed: [\"dmd\", \"-unittest\", \"-v\", \"-o-\", \"/tmp/tmp16kpu47v.d\", \"-I/tmp\"]\n",
      "stdout": "",
      "timestamp": 1660164104
    },
    {
      "exit_code": 1,
      "program": "import std.typecons;\nimport std.math;\n/*\n\n    Given a positive integer n, return the count of the numbers of n-digit\n    positive integers that start or end with 1.\n    \n*/\nlong starts_one_ends(long n) \n{\n    long result = 0;\n    long start = 1;\n    long end = 1;\n    long i = 0;\n    long j = 0;\n    long k = 0;\n    long l = 0;\n    long m = 0;\n    long n_digits = 0;\n    long n_digits_end = 0;\n    long n_digits_start = 0;\n    long n_digits_start_end = 0;\n    long n_digits_start_end_start = 0;\n    long n_digits_start_end_end = 0;\n    long n_digits_start_end_start_end = 0;\n    long n_digits_start_end_start_end_start = 0;\n    long n_digits_start_end_start_end_end = 0;\n    long n_digits_start_end_start_end_start_end = 0;\n    long n_digits_start_end_start_end_start_end_start = 0;\n    long n_digits_start_end_start_end_start_end_end = 0;\n    long n_digits_start_end_start_end_start_end_start_end = 0;\n    long n_digits_start_end_start_end_start_end_start_end_start = 0;\n    long n_digits_start_end_start_end_start_end_start_end_end = 0;\n    long n_digits_start_end_start_end_start_end_start_end_start_end = 0;\n    long n_digits_start_end_start_end_start_end_start_end_start_end_start = 0;\n    long n_digits_start_end_start_end_start_end_start_end_start_end_end = 0;\n    long n_digits_start_end_start_end_start_end_start_end_start_end_start_end = 0;\n    long n_digits_start_end_start_end_start_end_start_end_start_end_start_end_start = 0;\nunittest\n{\n    alias candidate = starts_one_ends;\n\n    assert(candidate(1L) == 1L);\n    assert(candidate(2L) == 18L);\n    assert(candidate(3L) == 180L);\n    assert(candidate(4L) == 1800L);\n    assert(candidate(5L) == 18000L);\n}\nvoid main(){}",
      "status": "SyntaxError",
      "stderr": "/tmp/tmpipmcudui.d(39): Error: found `unittest` instead of statement\nFailed: [\"dmd\", \"-unittest\", \"-v\", \"-o-\", \"/tmp/tmpipmcudui.d\", \"-I/tmp\"]\n",
      "stdout": "",
      "timestamp": 1660164104
    },
    {
      "exit_code": 1,
      "program": "import std.typecons;\nimport std.math;\n/*\n\n    Given a positive integer n, return the count of the numbers of n-digit\n    positive integers that start or end with 1.\n    \n*/\nlong starts_one_ends(long n) \n{\n    if (n == 1)\n        return 1;\n    else\n        return starts_one_ends(n - 1) + pow(10, n - 1);\n}\nunittest\n{\n    alias candidate = starts_one_ends;\n\n    assert(candidate(1L) == 1L);\n    assert(candidate(2L) == 18L);\n    assert(candidate(3L) == 180L);\n    assert(candidate(4L) == 1800L);\n    assert(candidate(5L) == 18000L);\n}\nvoid main(){}",
      "status": "Exception",
      "stderr": "core.exception.AssertError@/tmp/tmpk5mawak3.d(21): unittest failure\n----------------\n??:? _d_unittestp [0x427e7d]\n??:? void tmpk5mawak3.__unittest_L16_C1() [0x427ac9]\n??:? void tmpk5mawak3.__modtest() [0x427c00]\n??:? int core.runtime.runModuleUnitTests().__foreachbody2(object.ModuleInfo*) [0x42bba3]\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)).__lambda2(immutable(object.ModuleInfo*)) [0x42aa36]\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))).__foreachbody2(ref rt.sections_elf_shared.DSO) [0x42fbc9]\n??:? int rt.sections_elf_shared.DSO.opApply(scope int delegate(ref rt.sections_elf_shared.DSO)) [0x430078]\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))) [0x42fb55]\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)) [0x42aa0d]\n??:? runModuleUnitTests [0x42b979]\n??:? void rt.dmain2._d_run_main(int, char**, extern (C) int function(char[][])*).runAll() [0x4282cc]\n??:? void rt.dmain2._d_r",
      "stdout": "",
      "timestamp": 1660164103
    },
    {
      "exit_code": 1,
      "program": "import std.typecons;\nimport std.math;\n/*\n\n    Given a positive integer n, return the count of the numbers of n-digit\n    positive integers that start or end with 1.\n    \n*/\nlong starts_one_ends(long n) \n{\n    long count = 0;\n    long max = pow(10, n);\n    foreach(i; 1 .. max) {\n        if (i % 10 == 1 || i / pow(10, n - 1) == 1) {\n            count++;\n        }\n    }\n    return count;\n}\nunittest\n{\n    alias candidate = starts_one_ends;\n\n    assert(candidate(1L) == 1L);\n    assert(candidate(2L) == 18L);\n    assert(candidate(3L) == 180L);\n    assert(candidate(4L) == 1800L);\n    assert(candidate(5L) == 18000L);\n}\nvoid main(){}",
      "status": "Exception",
      "stderr": "core.exception.AssertError@/tmp/tmpqm3_gizp.d(25): unittest failure\n----------------\n??:? _d_unittestp [0x427ed5]\n??:? void tmpqm3_gizp.__unittest_L20_C1() [0x427b1d]\n??:? void tmpqm3_gizp.__modtest() [0x427c54]\n??:? int core.runtime.runModuleUnitTests().__foreachbody2(object.ModuleInfo*) [0x42bbfb]\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)).__lambda2(immutable(object.ModuleInfo*)) [0x42aa8e]\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))).__foreachbody2(ref rt.sections_elf_shared.DSO) [0x42fc21]\n??:? int rt.sections_elf_shared.DSO.opApply(scope int delegate(ref rt.sections_elf_shared.DSO)) [0x4300d0]\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))) [0x42fbad]\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)) [0x42aa65]\n??:? runModuleUnitTests [0x42b9d1]\n??:? void rt.dmain2._d_run_main(int, char**, extern (C) int function(char[][])*).runAll() [0x428324]\n??:? void rt.dmain2._d_r",
      "stdout": "",
      "timestamp": 1660164104
    },
    {
      "exit_code": 1,
      "program": "import std.typecons;\nimport std.math;\n/*\n\n    Given a positive integer n, return the count of the numbers of n-digit\n    positive integers that start or end with 1.\n    \n*/\nlong starts_one_ends(long n) \n{\n    long res = 0;\n    long start = 1;\n    long end = 1;\n    for (long i = 1; i < n; i++) {\n        start *= 10;\n        end *= 10;\n    }\n    res += start;\n    res += end;\n    res += (start - 1) * 9;\n    return res;\n}\nunittest\n{\n    alias candidate = starts_one_ends;\n\n    assert(candidate(1L) == 1L);\n    assert(candidate(2L) == 18L);\n    assert(candidate(3L) == 180L);\n    assert(candidate(4L) == 1800L);\n    assert(candidate(5L) == 18000L);\n}\nvoid main(){}",
      "status": "Exception",
      "stderr": "core.exception.AssertError@/tmp/tmpct030dog.d(27): unittest failure\n----------------\n??:? _d_unittestp [0x427dbd]\n??:? void tmpct030dog.__unittest_L23_C1() [0x427a9c]\n??:? void tmpct030dog.__modtest() [0x427b3c]\n??:? int core.runtime.runModuleUnitTests().__foreachbody2(object.ModuleInfo*) [0x42bae3]\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)).__lambda2(immutable(object.ModuleInfo*)) [0x42a976]\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))).__foreachbody2(ref rt.sections_elf_shared.DSO) [0x42fb09]\n??:? int rt.sections_elf_shared.DSO.opApply(scope int delegate(ref rt.sections_elf_shared.DSO)) [0x42ffb8]\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))) [0x42fa95]\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)) [0x42a94d]\n??:? runModuleUnitTests [0x42b8b9]\n??:? void rt.dmain2._d_run_main(int, char**, extern (C) int function(char[][])*).runAll() [0x42820c]\n??:? void rt.dmain2._d_r",
      "stdout": "",
      "timestamp": 1660164104
    },
    {
      "exit_code": 1,
      "program": "import std.typecons;\nimport std.math;\n/*\n\n    Given a positive integer n, return the count of the numbers of n-digit\n    positive integers that start or end with 1.\n    \n*/\nlong starts_one_ends(long n) \n{\n    if (n == 1)\n        return 2;\n    else\n        return pow(10, n-1) + pow(10, n-2);\n}\nunittest\n{\n    alias candidate = starts_one_ends;\n\n    assert(candidate(1L) == 1L);\n    assert(candidate(2L) == 18L);\n    assert(candidate(3L) == 180L);\n    assert(candidate(4L) == 1800L);\n    assert(candidate(5L) == 18000L);\n}\nvoid main(){}",
      "status": "Exception",
      "stderr": "core.exception.AssertError@/tmp/tmpxry72skp.d(20): unittest failure\n----------------\n??:? _d_unittestp [0x427e8d]\n??:? void tmpxry72skp.__unittest_L16_C1() [0x427ab8]\n??:? void tmpxry72skp.__modtest() [0x427c10]\n??:? int core.runtime.runModuleUnitTests().__foreachbody2(object.ModuleInfo*) [0x42bbb3]\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)).__lambda2(immutable(object.ModuleInfo*)) [0x42aa46]\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))).__foreachbody2(ref rt.sections_elf_shared.DSO) [0x42fbd9]\n??:? int rt.sections_elf_shared.DSO.opApply(scope int delegate(ref rt.sections_elf_shared.DSO)) [0x430088]\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))) [0x42fb65]\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)) [0x42aa1d]\n??:? runModuleUnitTests [0x42b989]\n??:? void rt.dmain2._d_run_main(int, char**, extern (C) int function(char[][])*).runAll() [0x4282dc]\n??:? void rt.dmain2._d_r",
      "stdout": "",
      "timestamp": 1660164104
    },
    {
      "exit_code": 1,
      "program": "import std.typecons;\nimport std.math;\n/*\n\n    Given a positive integer n, return the count of the numbers of n-digit\n    positive integers that start or end with 1.\n    \n*/\nlong starts_one_ends(long n) \n{\n    if (n == 1)\n        return 1;\n    else\n        return starts_one_ends(n - 1) + (long)pow(10, n - 1);\n}\nunittest\n{\n    alias candidate = starts_one_ends;\n\n    assert(candidate(1L) == 1L);\n    assert(candidate(2L) == 18L);\n    assert(candidate(3L) == 180L);\n    assert(candidate(4L) == 1800L);\n    assert(candidate(5L) == 18000L);\n}\nvoid main(){}",
      "status": "SyntaxError",
      "stderr": "/tmp/tmpwshar8_0.d(14): Error: C style cast illegal, use `cast(long)pow(10, n - 1)`\nFailed: [\"dmd\", \"-unittest\", \"-v\", \"-o-\", \"/tmp/tmpwshar8_0.d\", \"-I/tmp\"]\n",
      "stdout": "",
      "timestamp": 1660164104
    },
    {
      "exit_code": 1,
      "program": "import std.typecons;\nimport std.math;\n/*\n\n    Given a positive integer n, return the count of the numbers of n-digit\n    positive integers that start or end with 1.\n    \n*/\nlong starts_one_ends(long n) \n{\n    long result = 0;\n    long i = 0;\n    long j = 0;\n    long k = 0;\n    long l = 0;\n    long m = 0;\n    long o = 0;\n    long p = 0;\n    long q = 0;\n    long r = 0;\n    long s = 0;\n    long t = 0;\n    long u = 0;\n    long v = 0;\n    long w = 0;\n    long x = 0;\n    long y = 0;\n    long z = 0;\n    long aa = 0;\n    long ab = 0;\n    long ac = 0;\n    long ad = 0;\n    long ae = 0;\n    long af = 0;\n    long ag = 0;\n    long ah = 0;\n    long ai = 0;\n    long aj = 0;\n    long ak = 0;\n    long al = 0;\n    long am = 0;\n    long an = 0;\n    long ao = 0;\n    long ap = 0;\n    long aq = 0;\n    long ar = 0;\n    long as = 0;\n    long at = 0;\n    long au = 0;\n    long av = 0;\n    long aw = 0;\n    long ax = 0;\n    long ay = 0;\n    long az = 0;\n    long ba = 0;\n    long bb = 0;\n    long bc = 0;\n    long bd = 0;\n    long be = 0;\n    long bf = 0;\n    long bg = 0;\n    long bh = 0;\n    long bi = 0;\n    long bj = 0;\n    long bk = 0;\n    long bl = 0;\n    long bm = 0;\n    long bn = 0;\n    long bo = 0;\n    long bp = 0;\n    long bq = 0;\n    long br = 0;\n    long bs = 0;\n    long bt = 0;\n    long bu = 0;\n    long bv = 0;\n    long bw = 0;\n    long bx = 0;\n    long by = 0;\n    long bz\nunittest\n{\n    alias candidate = starts_one_ends;\n\n    assert(candidate(1L) == 1L);\n    assert(candidate(2L) == 18L);\n    assert(candidate(3L) == 180L);\n    assert(candidate(4L) == 1800L);\n    assert(candidate(5L) == 18000L);\n}\nvoid main(){}",
      "status": "SyntaxError",
      "stderr": "/tmp/tmp1ei0thaq.d(81): Error: semicolon expected, not `unittest`\n/tmp/tmp1ei0thaq.d(81): Error: found `unittest` instead of statement\nFailed: [\"dmd\", \"-unittest\", \"-v\", \"-o-\", \"/tmp/tmp1ei0thaq.d\", \"-I/tmp\"]\n",
      "stdout": "",
      "timestamp": 1660164104
    },
    {
      "exit_code": 1,
      "program": "import std.typecons;\nimport std.math;\n/*\n\n    Given a positive integer n, return the count of the numbers of n-digit\n    positive integers that start or end with 1.\n    \n*/\nlong starts_one_ends(long n) \n{\n    if (n == 1)\n        return 2;\n    else\n        return (starts_one_ends(n - 1) + pow(10, n - 1));\n}\nunittest\n{\n    alias candidate = starts_one_ends;\n\n    assert(candidate(1L) == 1L);\n    assert(candidate(2L) == 18L);\n    assert(candidate(3L) == 180L);\n    assert(candidate(4L) == 1800L);\n    assert(candidate(5L) == 18000L);\n}\nvoid main(){}",
      "status": "Exception",
      "stderr": "core.exception.AssertError@/tmp/tmph8x8oy59.d(20): unittest failure\n----------------\n??:? _d_unittestp [0x427e7d]\n??:? void tmph8x8oy59.__unittest_L16_C1() [0x427aa8]\n??:? void tmph8x8oy59.__modtest() [0x427c00]\n??:? int core.runtime.runModuleUnitTests().__foreachbody2(object.ModuleInfo*) [0x42bba3]\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)).__lambda2(immutable(object.ModuleInfo*)) [0x42aa36]\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))).__foreachbody2(ref rt.sections_elf_shared.DSO) [0x42fbc9]\n??:? int rt.sections_elf_shared.DSO.opApply(scope int delegate(ref rt.sections_elf_shared.DSO)) [0x430078]\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))) [0x42fb55]\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)) [0x42aa0d]\n??:? runModuleUnitTests [0x42b979]\n??:? void rt.dmain2._d_run_main(int, char**, extern (C) int function(char[][])*).runAll() [0x4282cc]\n??:? void rt.dmain2._d_r",
      "stdout": "",
      "timestamp": 1660164104
    },
    {
      "exit_code": 1,
      "program": "import std.typecons;\nimport std.math;\n/*\n\n    Given a positive integer n, return the count of the numbers of n-digit\n    positive integers that start or end with 1.\n    \n*/\nlong starts_one_ends(long n) \n{\n    if (n == 1)\n        return 2;\n    else\n        return (long)pow(10, n - 1) + 9 * (n - 1) * (long)pow(10, n - 2);\n}\nunittest\n{\n    alias candidate = starts_one_ends;\n\n    assert(candidate(1L) == 1L);\n    assert(candidate(2L) == 18L);\n    assert(candidate(3L) == 180L);\n    assert(candidate(4L) == 1800L);\n    assert(candidate(5L) == 18000L);\n}\nvoid main(){}",
      "status": "SyntaxError",
      "stderr": "/tmp/tmpgvax9x39.d(14): Error: C style cast illegal, use `cast(long)pow(10, n - 1)`\n/tmp/tmpgvax9x39.d(14): Error: C style cast illegal, use `cast(long)pow(10, n - 2)`\nFailed: [\"dmd\", \"-unittest\", \"-v\", \"-o-\", \"/tmp/tmpgvax9x39.d\", \"-I/tmp\"]\n",
      "stdout": "",
      "timestamp": 1660164104
    },
    {
      "exit_code": 1,
      "program": "import std.typecons;\nimport std.math;\n/*\n\n    Given a positive integer n, return the count of the numbers of n-digit\n    positive integers that start or end with 1.\n    \n*/\nlong starts_one_ends(long n) \n{\n    long result = 0;\n    long start = 1;\n    long end = 1;\n    for (long i = 1; i < n; i++) {\n        start *= 10;\n        end *= 10;\n    }\n    for (long i = start; i < end; i++) {\n        if (i % 10 == 1 || i / start == 1) {\n            result++;\n        }\n    }\n    return result;\n}\nunittest\n{\n    alias candidate = starts_one_ends;\n\n    assert(candidate(1L) == 1L);\n    assert(candidate(2L) == 18L);\n    assert(candidate(3L) == 180L);\n    assert(candidate(4L) == 1800L);\n    assert(candidate(5L) == 18000L);\n}\nvoid main(){}",
      "status": "Exception",
      "stderr": "core.exception.AssertError@/tmp/tmpimx45wtb.d(29): unittest failure\n----------------\n??:? _d_unittestp [0x427ddd]\n??:? void tmpimx45wtb.__unittest_L25_C1() [0x427ac0]\n??:? void tmpimx45wtb.__modtest() [0x427b60]\n??:? int core.runtime.runModuleUnitTests().__foreachbody2(object.ModuleInfo*) [0x42bb03]\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)).__lambda2(immutable(object.ModuleInfo*)) [0x42a996]\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))).__foreachbody2(ref rt.sections_elf_shared.DSO) [0x42fb29]\n??:? int rt.sections_elf_shared.DSO.opApply(scope int delegate(ref rt.sections_elf_shared.DSO)) [0x42ffd8]\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))) [0x42fab5]\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)) [0x42a96d]\n??:? runModuleUnitTests [0x42b8d9]\n??:? void rt.dmain2._d_run_main(int, char**, extern (C) int function(char[][])*).runAll() [0x42822c]\n??:? void rt.dmain2._d_r",
      "stdout": "",
      "timestamp": 1660164104
    },
    {
      "exit_code": 1,
      "program": "import std.typecons;\nimport std.math;\n/*\n\n    Given a positive integer n, return the count of the numbers of n-digit\n    positive integers that start or end with 1.\n    \n*/\nlong starts_one_ends(long n) \n{\n    long result = 0;\n    long max = pow(10, n);\n    long min = pow(10, n - 1);\n    foreach(i; min .. max)\n    {\n        string s = to!string(i);\n        if(s[0] == '1' || s[$ - 1] == '1')\n            result++;\n    }\n    return result;\n}\nunittest\n{\n    alias candidate = starts_one_ends;\n\n    assert(candidate(1L) == 1L);\n    assert(candidate(2L) == 18L);\n    assert(candidate(3L) == 180L);\n    assert(candidate(4L) == 1800L);\n    assert(candidate(5L) == 18000L);\n}\nvoid main(){}",
      "status": "SyntaxError",
      "stderr": "/tmp/tmpn_bb3zz3.d(16): Error: template instance `to!string` template `to` is not defined, did you mean No?\nFailed: [\"dmd\", \"-unittest\", \"-v\", \"-o-\", \"/tmp/tmpn_bb3zz3.d\", \"-I/tmp\"]\n",
      "stdout": "",
      "timestamp": 1660164103
    },
    {
      "exit_code": 1,
      "program": "import std.typecons;\nimport std.math;\n/*\n\n    Given a positive integer n, return the count of the numbers of n-digit\n    positive integers that start or end with 1.\n    \n*/\nlong starts_one_ends(long n) \n{\n    long count = 0;\n    long start = 1;\n    long end = 1;\n    for (long i = 0; i < n; i++) {\n        start *= 10;\n        end *= 10;\n    }\n    for (long i = start; i < end; i++) {\n        if (i % 10 == 1 || i / 10 == 1) {\n            count++;\n        }\n    }\n    return count;\n}\nunittest\n{\n    alias candidate = starts_one_ends;\n\n    assert(candidate(1L) == 1L);\n    assert(candidate(2L) == 18L);\n    assert(candidate(3L) == 180L);\n    assert(candidate(4L) == 1800L);\n    assert(candidate(5L) == 18000L);\n}\nvoid main(){}",
      "status": "Exception",
      "stderr": "core.exception.AssertError@/tmp/tmpoh3b4xbv.d(29): unittest failure\n----------------\n??:? _d_unittestp [0x427ddd]\n??:? void tmpoh3b4xbv.__unittest_L25_C1() [0x427ac0]\n??:? void tmpoh3b4xbv.__modtest() [0x427b60]\n??:? int core.runtime.runModuleUnitTests().__foreachbody2(object.ModuleInfo*) [0x42bb03]\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)).__lambda2(immutable(object.ModuleInfo*)) [0x42a996]\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))).__foreachbody2(ref rt.sections_elf_shared.DSO) [0x42fb29]\n??:? int rt.sections_elf_shared.DSO.opApply(scope int delegate(ref rt.sections_elf_shared.DSO)) [0x42ffd8]\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))) [0x42fab5]\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)) [0x42a96d]\n??:? runModuleUnitTests [0x42b8d9]\n??:? void rt.dmain2._d_run_main(int, char**, extern (C) int function(char[][])*).runAll() [0x42822c]\n??:? void rt.dmain2._d_r",
      "stdout": "",
      "timestamp": 1660164103
    },
    {
      "exit_code": 1,
      "program": "import std.typecons;\nimport std.math;\n/*\n\n    Given a positive integer n, return the count of the numbers of n-digit\n    positive integers that start or end with 1.\n    \n*/\nlong starts_one_ends(long n) \n{\n    long count = 0;\n    long start = 1;\n    long end = 1;\n    for (long i = 1; i < n; i++) {\n        start *= 10;\n        end *= 10;\n    }\n    end += 1;\n    for (long i = start; i < end; i++) {\n        if (i % 10 == 1) {\n            count++;\n        }\n    }\n    return count;\n}\nunittest\n{\n    alias candidate = starts_one_ends;\n\n    assert(candidate(1L) == 1L);\n    assert(candidate(2L) == 18L);\n    assert(candidate(3L) == 180L);\n    assert(candidate(4L) == 1800L);\n    assert(candidate(5L) == 18000L);\n}\nvoid main(){}",
      "status": "Exception",
      "stderr": "core.exception.AssertError@/tmp/tmpkdy6jw0_.d(31): unittest failure\n----------------\n??:? _d_unittestp [0x427dd5]\n??:? void tmpkdy6jw0_.__unittest_L26_C1() [0x427ad5]\n??:? void tmpkdy6jw0_.__modtest() [0x427b54]\n??:? int core.runtime.runModuleUnitTests().__foreachbody2(object.ModuleInfo*) [0x42bafb]\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)).__lambda2(immutable(object.ModuleInfo*)) [0x42a98e]\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))).__foreachbody2(ref rt.sections_elf_shared.DSO) [0x42fb21]\n??:? int rt.sections_elf_shared.DSO.opApply(scope int delegate(ref rt.sections_elf_shared.DSO)) [0x42ffd0]\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))) [0x42faad]\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)) [0x42a965]\n??:? runModuleUnitTests [0x42b8d1]\n??:? void rt.dmain2._d_run_main(int, char**, extern (C) int function(char[][])*).runAll() [0x428224]\n??:? void rt.dmain2._d_r",
      "stdout": "",
      "timestamp": 1660164103
    },
    {
      "exit_code": 1,
      "program": "import std.typecons;\nimport std.math;\n/*\n\n    Given a positive integer n, return the count of the numbers of n-digit\n    positive integers that start or end with 1.\n    \n*/\nlong starts_one_ends(long n) \n{\n    long result = 0;\n    long i = 0;\n    long j = 0;\n    long k = 0;\n    long l = 0;\n    long m = 0;\n    long n_digits = 0;\n    long start = 0;\n    long end = 0;\n    long start_end = 0;\n    long start_start = 0;\n    long end_end = 0;\n    long end_start = 0;\n    long start_end_start = 0;\n    long start_start_end = 0;\n    long end_end_start = 0;\n    long end_start_end = 0;\n    long start_end_start_end = 0;\n    long start_start_end_end = 0;\n    long end_end_start_end = 0;\n    long end_start_end_end = 0;\n    long start_end_start_end_end = 0;\n    long start_start_end_end_end = 0;\n    long end_end_start_end_end = 0;\n    long end_start_end_end_end = 0;\n    long start_end_start_end_end_end = 0;\n    long start_start_end_end_end_end = 0;\n    long end_end_start_end_end_end = 0;\n    long end_start_end_end_end_end = 0;\n    long start_end_start_end_end_end_end = 0;\n    long start_start_end_end_end_end_end = 0;\n    long end_end_start_end_end_end_end = 0;\n    long end_start_end_end_end_end_end = 0;\n    long start_end_start_end_end_end_end_end = 0;\n    long start_start_end_end_end_end_end_end = 0;\n    long end_end_start_end_end_end_end_end = 0;\n    long end_start_end_end_end_end_end_end = 0;\n    long start_end_start_end_end_end_end_end_end = 0;\n\nunittest\n{\n    alias candidate = starts_one_ends;\n\n    assert(candidate(1L) == 1L);\n    assert(candidate(2L) == 18L);\n    assert(candidate(3L) == 180L);\n    assert(candidate(4L) == 1800L);\n    assert(candidate(5L) == 18000L);\n}\nvoid main(){}",
      "status": "SyntaxError",
      "stderr": "/tmp/tmp33ob3d7c.d(50): Error: found `unittest` instead of statement\nFailed: [\"dmd\", \"-unittest\", \"-v\", \"-o-\", \"/tmp/tmp33ob3d7c.d\", \"-I/tmp\"]\n",
      "stdout": "",
      "timestamp": 1660164104
    },
    {
      "exit_code": 1,
      "program": "import std.typecons;\nimport std.math;\n/*\n\n    Given a positive integer n, return the count of the numbers of n-digit\n    positive integers that start or end with 1.\n    \n*/\nlong starts_one_ends(long n) \n{\n    long count = 0;\n    long start = 1;\n    long end = 1;\n    for (long i = 0; i < n; i++) {\n        start *= 10;\n        end *= 10;\n    }\n    end += 1;\n    for (long i = start; i < end; i++) {\n        if (i % 10 == 1 || i / 10 == 1) {\n            count++;\n        }\n    }\n    return count;\n}\nunittest\n{\n    alias candidate = starts_one_ends;\n\n    assert(candidate(1L) == 1L);\n    assert(candidate(2L) == 18L);\n    assert(candidate(3L) == 180L);\n    assert(candidate(4L) == 1800L);\n    assert(candidate(5L) == 18000L);\n}\nvoid main(){}",
      "status": "Exception",
      "stderr": "core.exception.AssertError@/tmp/tmpbp6ss6i1.d(31): unittest failure\n----------------\n??:? _d_unittestp [0x427de5]\n??:? void tmpbp6ss6i1.__unittest_L26_C1() [0x427ae5]\n??:? void tmpbp6ss6i1.__modtest() [0x427b64]\n??:? int core.runtime.runModuleUnitTests().__foreachbody2(object.ModuleInfo*) [0x42bb0b]\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)).__lambda2(immutable(object.ModuleInfo*)) [0x42a99e]\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))).__foreachbody2(ref rt.sections_elf_shared.DSO) [0x42fb31]\n??:? int rt.sections_elf_shared.DSO.opApply(scope int delegate(ref rt.sections_elf_shared.DSO)) [0x42ffe0]\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))) [0x42fabd]\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)) [0x42a975]\n??:? runModuleUnitTests [0x42b8e1]\n??:? void rt.dmain2._d_run_main(int, char**, extern (C) int function(char[][])*).runAll() [0x428234]\n??:? void rt.dmain2._d_r",
      "stdout": "",
      "timestamp": 1660164104
    },
    {
      "exit_code": 1,
      "program": "import std.typecons;\nimport std.math;\n/*\n\n    Given a positive integer n, return the count of the numbers of n-digit\n    positive integers that start or end with 1.\n    \n*/\nlong starts_one_ends(long n) \n{\n    long result = 0;\n    long start = 1;\n    long end = 1;\n    for (long i = 1; i <= n; i++) {\n        start *= 10;\n        end *= 10;\n    }\n    start /= 10;\n    end -= 1;\n    result = end - start + 1;\n    return result;\n}\nunittest\n{\n    alias candidate = starts_one_ends;\n\n    assert(candidate(1L) == 1L);\n    assert(candidate(2L) == 18L);\n    assert(candidate(3L) == 180L);\n    assert(candidate(4L) == 1800L);\n    assert(candidate(5L) == 18000L);\n}\nvoid main(){}",
      "status": "Exception",
      "stderr": "core.exception.AssertError@/tmp/tmpdwdyw_uw.d(27): unittest failure\n----------------\n??:? _d_unittestp [0x427db5]\n??:? void tmpdwdyw_uw.__unittest_L23_C1() [0x427a94]\n??:? void tmpdwdyw_uw.__modtest() [0x427b34]\n??:? int core.runtime.runModuleUnitTests().__foreachbody2(object.ModuleInfo*) [0x42badb]\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)).__lambda2(immutable(object.ModuleInfo*)) [0x42a96e]\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))).__foreachbody2(ref rt.sections_elf_shared.DSO) [0x42fb01]\n??:? int rt.sections_elf_shared.DSO.opApply(scope int delegate(ref rt.sections_elf_shared.DSO)) [0x42ffb0]\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))) [0x42fa8d]\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)) [0x42a945]\n??:? runModuleUnitTests [0x42b8b1]\n??:? void rt.dmain2._d_run_main(int, char**, extern (C) int function(char[][])*).runAll() [0x428204]\n??:? void rt.dmain2._d_r",
      "stdout": "",
      "timestamp": 1660164104
    },
    {
      "exit_code": 1,
      "program": "import std.typecons;\nimport std.math;\n/*\n\n    Given a positive integer n, return the count of the numbers of n-digit\n    positive integers that start or end with 1.\n    \n*/\nlong starts_one_ends(long n) \n{\n    long result = 0;\n    long start = 1;\n    long end = 1;\n    foreach(i; 1..n) {\n        start *= 10;\n        end *= 10;\n    }\n    start /= 10;\n    end -= 1;\n    result = end - start + 1;\n    return result;\n}\nunittest\n{\n    alias candidate = starts_one_ends;\n\n    assert(candidate(1L) == 1L);\n    assert(candidate(2L) == 18L);\n    assert(candidate(3L) == 180L);\n    assert(candidate(4L) == 1800L);\n    assert(candidate(5L) == 18000L);\n}\nvoid main(){}",
      "status": "Exception",
      "stderr": "core.exception.AssertError@/tmp/tmpxj4e0pnk.d(28): unittest failure\n----------------\n??:? _d_unittestp [0x427db5]\n??:? void tmpxj4e0pnk.__unittest_L23_C1() [0x427ab5]\n??:? void tmpxj4e0pnk.__modtest() [0x427b34]\n??:? int core.runtime.runModuleUnitTests().__foreachbody2(object.ModuleInfo*) [0x42badb]\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)).__lambda2(immutable(object.ModuleInfo*)) [0x42a96e]\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))).__foreachbody2(ref rt.sections_elf_shared.DSO) [0x42fb01]\n??:? int rt.sections_elf_shared.DSO.opApply(scope int delegate(ref rt.sections_elf_shared.DSO)) [0x42ffb0]\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))) [0x42fa8d]\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)) [0x42a945]\n??:? runModuleUnitTests [0x42b8b1]\n??:? void rt.dmain2._d_run_main(int, char**, extern (C) int function(char[][])*).runAll() [0x428204]\n??:? void rt.dmain2._d_r",
      "stdout": "",
      "timestamp": 1660164104
    },
    {
      "exit_code": 1,
      "program": "import std.typecons;\nimport std.math;\n/*\n\n    Given a positive integer n, return the count of the numbers of n-digit\n    positive integers that start or end with 1.\n    \n*/\nlong starts_one_ends(long n) \n{\n    long result = 0;\n    long max = pow(10, n);\n    long min = pow(10, n - 1);\n    foreach(i; min .. max)\n    {\n        if(i % 10 == 1 || i / 10 == 1)\n        {\n            result++;\n        }\n    }\n    return result;\n}\nunittest\n{\n    alias candidate = starts_one_ends;\n\n    assert(candidate(1L) == 1L);\n    assert(candidate(2L) == 18L);\n    assert(candidate(3L) == 180L);\n    assert(candidate(4L) == 1800L);\n    assert(candidate(5L) == 18000L);\n}\nvoid main(){}",
      "status": "Exception",
      "stderr": "core.exception.AssertError@/tmp/tmpinza2utb.d(29): unittest failure\n----------------\n??:? _d_unittestp [0x427ecd]\n??:? void tmpinza2utb.__unittest_L23_C1() [0x427b3c]\n??:? void tmpinza2utb.__modtest() [0x427c50]\n??:? int core.runtime.runModuleUnitTests().__foreachbody2(object.ModuleInfo*) [0x42bbf3]\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)).__lambda2(immutable(object.ModuleInfo*)) [0x42aa86]\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))).__foreachbody2(ref rt.sections_elf_shared.DSO) [0x42fc19]\n??:? int rt.sections_elf_shared.DSO.opApply(scope int delegate(ref rt.sections_elf_shared.DSO)) [0x4300c8]\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))) [0x42fba5]\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)) [0x42aa5d]\n??:? runModuleUnitTests [0x42b9c9]\n??:? void rt.dmain2._d_run_main(int, char**, extern (C) int function(char[][])*).runAll() [0x42831c]\n??:? void rt.dmain2._d_r",
      "stdout": "",
      "timestamp": 1660164104
    },
    {
      "exit_code": 1,
      "program": "import std.typecons;\nimport std.math;\n/*\n\n    Given a positive integer n, return the count of the numbers of n-digit\n    positive integers that start or end with 1.\n    \n*/\nlong starts_one_ends(long n) \n{\n    long result = 0;\n    long start = 1;\n    long end = 1;\n    long i = 0;\n    while (i < n) {\n        start *= 10;\n        end *= 10;\n        result += start;\n        ++i;\n    }\n    return result + end;\n}\nunittest\n{\n    alias candidate = starts_one_ends;\n\n    assert(candidate(1L) == 1L);\n    assert(candidate(2L) == 18L);\n    assert(candidate(3L) == 180L);\n    assert(candidate(4L) == 1800L);\n    assert(candidate(5L) == 18000L);\n}\nvoid main(){}",
      "status": "Exception",
      "stderr": "core.exception.AssertError@/tmp/tmpk7s8mh4b.d(27): unittest failure\n----------------\n??:? _d_unittestp [0x427d9d]\n??:? void tmpk7s8mh4b.__unittest_L23_C1() [0x427a7c]\n??:? void tmpk7s8mh4b.__modtest() [0x427b1c]\n??:? int core.runtime.runModuleUnitTests().__foreachbody2(object.ModuleInfo*) [0x42bac3]\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)).__lambda2(immutable(object.ModuleInfo*)) [0x42a956]\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))).__foreachbody2(ref rt.sections_elf_shared.DSO) [0x42fae9]\n??:? int rt.sections_elf_shared.DSO.opApply(scope int delegate(ref rt.sections_elf_shared.DSO)) [0x42ff98]\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))) [0x42fa75]\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)) [0x42a92d]\n??:? runModuleUnitTests [0x42b899]\n??:? void rt.dmain2._d_run_main(int, char**, extern (C) int function(char[][])*).runAll() [0x4281ec]\n??:? void rt.dmain2._d_r",
      "stdout": "",
      "timestamp": 1660164104
    },
    {
      "exit_code": 1,
      "program": "import std.typecons;\nimport std.math;\n/*\n\n    Given a positive integer n, return the count of the numbers of n-digit\n    positive integers that start or end with 1.\n    \n*/\nlong starts_one_ends(long n) \n{\n    if (n == 1)\n        return 1;\n    else\n        return starts_one_ends(n - 1) + (long)pow(10, n - 1);\n}\nunittest\n{\n    alias candidate = starts_one_ends;\n\n    assert(candidate(1L) == 1L);\n    assert(candidate(2L) == 18L);\n    assert(candidate(3L) == 180L);\n    assert(candidate(4L) == 1800L);\n    assert(candidate(5L) == 18000L);\n}\nvoid main(){}",
      "status": "SyntaxError",
      "stderr": "/tmp/tmpwshar8_0.d(14): Error: C style cast illegal, use `cast(long)pow(10, n - 1)`\nFailed: [\"dmd\", \"-unittest\", \"-v\", \"-o-\", \"/tmp/tmpwshar8_0.d\", \"-I/tmp\"]\n",
      "stdout": "",
      "timestamp": 1660164104
    },
    {
      "exit_code": 1,
      "program": "import std.typecons;\nimport std.math;\n/*\n\n    Given a positive integer n, return the count of the numbers of n-digit\n    positive integers that start or end with 1.\n    \n*/\nlong starts_one_ends(long n) \n{\n    long count = 0;\n    long start = 1;\n    long end = 1;\n    long i = 0;\n    long j = 0;\n    long k = 0;\n    long l = 0;\n    long m = 0;\n    long o = 0;\n    long p = 0;\n    long q = 0;\n    long r = 0;\n    long s = 0;\n    long t = 0;\n    long u = 0;\n    long v = 0;\n    long w = 0;\n    long x = 0;\n    long y = 0;\n    long z = 0;\n    long aa = 0;\n    long ab = 0;\n    long ac = 0;\n    long ad = 0;\n    long ae = 0;\n    long af = 0;\n    long ag = 0;\n    long ah = 0;\n    long ai = 0;\n    long aj = 0;\n    long ak = 0;\n    long al = 0;\n    long am = 0;\n    long an = 0;\n    long ao = 0;\n    long ap = 0;\n    long aq = 0;\n    long ar = 0;\n    long as = 0;\n    long at = 0;\n    long au = 0;\n    long av = 0;\n    long aw = 0;\n    long ax = 0;\n    long ay = 0;\n    long az = 0;\n    long ba = 0;\n    long bb = 0;\n    long bc = 0;\n    long bd = 0;\n    long be = 0;\n    long bf = 0;\n    long bg = 0;\n    long bh = 0;\n    long bi = 0;\n    long bj = 0;\n    long bk = 0;\n    long bl = 0;\n    long bm = 0;\n    long bn = 0;\n    long bo = 0;\n    long bp = 0;\n    long bq = 0;\n    long br = 0;\n    long bs = 0;\n    long bt = 0;\n    long bu = 0;\n    long bv = 0;\n    long bw = 0;\n    long bx =\nunittest\n{\n    alias candidate = starts_one_ends;\n\n    assert(candidate(1L) == 1L);\n    assert(candidate(2L) == 18L);\n    assert(candidate(3L) == 180L);\n    assert(candidate(4L) == 1800L);\n    assert(candidate(5L) == 18000L);\n}\nvoid main(){}",
      "status": "SyntaxError",
      "stderr": "/tmp/tmp3_c2qah_.d(81): Error: expression expected, not `unittest`\n/tmp/tmp3_c2qah_.d(82): Error: semicolon expected, not `{`\n/tmp/tmp3_c2qah_.d(91): Error: found `End of File` when expecting `}` following compound statement\nFailed: [\"dmd\", \"-unittest\", \"-v\", \"-o-\", \"/tmp/tmp3_c2qah_.d\", \"-I/tmp\"]\n",
      "stdout": "",
      "timestamp": 1660164102
    },
    {
      "exit_code": 1,
      "program": "import std.typecons;\nimport std.math;\n/*\n\n    Given a positive integer n, return the count of the numbers of n-digit\n    positive integers that start or end with 1.\n    \n*/\nlong starts_one_ends(long n) \n{\n    long result = 0;\n    long max = pow(10, n);\n    foreach(i; 1 .. max)\n    {\n        if(i % 10 == 1)\n            result++;\n        if(i / 10 == 1)\n            result++;\n    }\n    return result;\n}\nunittest\n{\n    alias candidate = starts_one_ends;\n\n    assert(candidate(1L) == 1L);\n    assert(candidate(2L) == 18L);\n    assert(candidate(3L) == 180L);\n    assert(candidate(4L) == 1800L);\n    assert(candidate(5L) == 18000L);\n}\nvoid main(){}",
      "status": "Exception",
      "stderr": "core.exception.AssertError@/tmp/tmpqy53k46g.d(27): unittest failure\n----------------\n??:? _d_unittestp [0x427eb5]\n??:? void tmpqy53k46g.__unittest_L22_C1() [0x427b01]\n??:? void tmpqy53k46g.__modtest() [0x427c38]\n??:? int core.runtime.runModuleUnitTests().__foreachbody2(object.ModuleInfo*) [0x42bbdb]\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)).__lambda2(immutable(object.ModuleInfo*)) [0x42aa6e]\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))).__foreachbody2(ref rt.sections_elf_shared.DSO) [0x42fc01]\n??:? int rt.sections_elf_shared.DSO.opApply(scope int delegate(ref rt.sections_elf_shared.DSO)) [0x4300b0]\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))) [0x42fb8d]\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)) [0x42aa45]\n??:? runModuleUnitTests [0x42b9b1]\n??:? void rt.dmain2._d_run_main(int, char**, extern (C) int function(char[][])*).runAll() [0x428304]\n??:? void rt.dmain2._d_r",
      "stdout": "",
      "timestamp": 1660164104
    },
    {
      "exit_code": 1,
      "program": "import std.typecons;\nimport std.math;\n/*\n\n    Given a positive integer n, return the count of the numbers of n-digit\n    positive integers that start or end with 1.\n    \n*/\nlong starts_one_ends(long n) \n{\n    long count = 0;\n    long max = pow(10, n);\n    long min = pow(10, n - 1);\n    foreach(i; min .. max) {\n        if (i % 10 == 1 || i / 10 == 1) {\n            count++;\n        }\n    }\n    return count;\n}\nunittest\n{\n    alias candidate = starts_one_ends;\n\n    assert(candidate(1L) == 1L);\n    assert(candidate(2L) == 18L);\n    assert(candidate(3L) == 180L);\n    assert(candidate(4L) == 1800L);\n    assert(candidate(5L) == 18000L);\n}\nvoid main(){}",
      "status": "Exception",
      "stderr": "core.exception.AssertError@/tmp/tmpqixfpz4q.d(27): unittest failure\n----------------\n??:? _d_unittestp [0x427ecd]\n??:? void tmpqixfpz4q.__unittest_L21_C1() [0x427b3c]\n??:? void tmpqixfpz4q.__modtest() [0x427c50]\n??:? int core.runtime.runModuleUnitTests().__foreachbody2(object.ModuleInfo*) [0x42bbf3]\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)).__lambda2(immutable(object.ModuleInfo*)) [0x42aa86]\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))).__foreachbody2(ref rt.sections_elf_shared.DSO) [0x42fc19]\n??:? int rt.sections_elf_shared.DSO.opApply(scope int delegate(ref rt.sections_elf_shared.DSO)) [0x4300c8]\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))) [0x42fba5]\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)) [0x42aa5d]\n??:? runModuleUnitTests [0x42b9c9]\n??:? void rt.dmain2._d_run_main(int, char**, extern (C) int function(char[][])*).runAll() [0x42831c]\n??:? void rt.dmain2._d_r",
      "stdout": "",
      "timestamp": 1660164104
    },
    {
      "exit_code": 1,
      "program": "import std.typecons;\nimport std.math;\n/*\n\n    Given a positive integer n, return the count of the numbers of n-digit\n    positive integers that start or end with 1.\n    \n*/\nlong starts_one_ends(long n) \n{\n    long count = 0;\n    long start = 1;\n    long end = 10;\n    long i = 0;\n    long j = 0;\n    long k = 0;\n    long l = 0;\n    long m = 0;\n    long p = 0;\n    long q = 0;\n    long r = 0;\n    long s = 0;\n    long t = 0;\n    long u = 0;\n    long v = 0;\n    long w = 0;\n    long x = 0;\n    long y = 0;\n    long z = 0;\n    long a = 0;\n    long b = 0;\n    long c = 0;\n    long d = 0;\n    long e = 0;\n    long f = 0;\n    long g = 0;\n    long h = 0;\n    long ii = 0;\n    long jj = 0;\n    long kk = 0;\n    long ll = 0;\n    long mm = 0;\n    long pp = 0;\n    long qq = 0;\n    long rr = 0;\n    long ss = 0;\n    long tt = 0;\n    long uu = 0;\n    long vv = 0;\n    long ww = 0;\n    long xx = 0;\n    long yy = 0;\n    long zz = 0;\n    long aa = 0;\n    long bb = 0;\n    long cc = 0;\n    long dd = 0;\n    long ee = 0;\n    long ff = 0;\n    long gg = 0;\n    long hh = 0;\n    long iii = 0;\n    long jjj = 0;\n    long kkk = 0;\n    long lll = 0;\n    long mmm = 0;\n    long ppp = 0;\n    long qqq = 0;\n    long rrr = 0;\n    long sss = 0;\n    long ttt = 0;\n    long uuu = 0;\n    long vvv = 0;\n    long www = 0;\n    long xxx = 0;\n    long yyy = 0;\n    long zzz = 0;\n    long aaa = 0;\n    long b\nunittest\n{\n    alias candidate = starts_one_ends;\n\n    assert(candidate(1L) == 1L);\n    assert(candidate(2L) == 18L);\n    assert(candidate(3L) == 180L);\n    assert(candidate(4L) == 1800L);\n    assert(candidate(5L) == 18000L);\n}\nvoid main(){}",
      "status": "SyntaxError",
      "stderr": "/tmp/tmpk93k64bq.d(80): Error: semicolon expected, not `unittest`\n/tmp/tmpk93k64bq.d(80): Error: found `unittest` instead of statement\nFailed: [\"dmd\", \"-unittest\", \"-v\", \"-o-\", \"/tmp/tmpk93k64bq.d\", \"-I/tmp\"]\n",
      "stdout": "",
      "timestamp": 1660164104
    },
    {
      "exit_code": 1,
      "program": "import std.typecons;\nimport std.math;\n/*\n\n    Given a positive integer n, return the count of the numbers of n-digit\n    positive integers that start or end with 1.\n    \n*/\nlong starts_one_ends(long n) \n{\n    long result = 0;\n    long i = 0;\n    long j = 0;\n    long k = 0;\n    long l = 0;\n    long m = 0;\n    long n = 0;\n    long o = 0;\n    long p = 0;\n    long q = 0;\n    long r = 0;\n    long s = 0;\n    long t = 0;\n    long u = 0;\n    long v = 0;\n    long w = 0;\n    long x = 0;\n    long y = 0;\n    long z = 0;\n    long aa = 0;\n    long ab = 0;\n    long ac = 0;\n    long ad = 0;\n    long ae = 0;\n    long af = 0;\n    long ag = 0;\n    long ah = 0;\n    long ai = 0;\n    long aj = 0;\n    long ak = 0;\n    long al = 0;\n    long am = 0;\n    long an = 0;\n    long ao = 0;\n    long ap = 0;\n    long aq = 0;\n    long ar = 0;\n    long as = 0;\n    long at = 0;\n    long au = 0;\n    long av = 0;\n    long aw = 0;\n    long ax = 0;\n    long ay = 0;\n    long az = 0;\n    long ba = 0;\n    long bb = 0;\n    long bc = 0;\n    long bd = 0;\n    long be = 0;\n    long bf = 0;\n    long bg = 0;\n    long bh = 0;\n    long bi = 0;\n    long bj = 0;\n    long bk = 0;\n    long bl = 0;\n    long bm = 0;\n    long bn = 0;\n    long bo = 0;\n    long bp = 0;\n    long bq = 0;\n    long br = 0;\n    long bs = 0;\n    long bt = 0;\n    long bu = 0;\n    long bv = 0;\n    long bw = 0;\n    long bx = 0;\n    long by =\nunittest\n{\n    alias candidate = starts_one_ends;\n\n    assert(candidate(1L) == 1L);\n    assert(candidate(2L) == 18L);\n    assert(candidate(3L) == 180L);\n    assert(candidate(4L) == 1800L);\n    assert(candidate(5L) == 18000L);\n}\nvoid main(){}",
      "status": "SyntaxError",
      "stderr": "/tmp/tmpiauvommf.d(81): Error: expression expected, not `unittest`\n/tmp/tmpiauvommf.d(82): Error: semicolon expected, not `{`\n/tmp/tmpiauvommf.d(91): Error: found `End of File` when expecting `}` following compound statement\nFailed: [\"dmd\", \"-unittest\", \"-v\", \"-o-\", \"/tmp/tmpiauvommf.d\", \"-I/tmp\"]\n",
      "stdout": "",
      "timestamp": 1660164104
    },
    {
      "exit_code": 1,
      "program": "import std.typecons;\nimport std.math;\n/*\n\n    Given a positive integer n, return the count of the numbers of n-digit\n    positive integers that start or end with 1.\n    \n*/\nlong starts_one_ends(long n) \n{\n    long result = 0;\n    long max = pow(10, n);\n    for (long i = 1; i < max; i++) \n    {\n        if (i % 10 == 1) \n        {\n            result++;\n        }\n        if (i / 10 == 1) \n        {\n            result++;\n        }\n    }\n    return result;\n}\nunittest\n{\n    alias candidate = starts_one_ends;\n\n    assert(candidate(1L) == 1L);\n    assert(candidate(2L) == 18L);\n    assert(candidate(3L) == 180L);\n    assert(candidate(4L) == 1800L);\n    assert(candidate(5L) == 18000L);\n}\nvoid main(){}",
      "status": "Exception",
      "stderr": "core.exception.AssertError@/tmp/tmpmnu_2zwx.d(31): unittest failure\n----------------\n??:? _d_unittestp [0x427ea5]\n??:? void tmpmnu_2zwx.__unittest_L26_C1() [0x427af1]\n??:? void tmpmnu_2zwx.__modtest() [0x427c28]\n??:? int core.runtime.runModuleUnitTests().__foreachbody2(object.ModuleInfo*) [0x42bbcb]\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)).__lambda2(immutable(object.ModuleInfo*)) [0x42aa5e]\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))).__foreachbody2(ref rt.sections_elf_shared.DSO) [0x42fbf1]\n??:? int rt.sections_elf_shared.DSO.opApply(scope int delegate(ref rt.sections_elf_shared.DSO)) [0x4300a0]\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))) [0x42fb7d]\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)) [0x42aa35]\n??:? runModuleUnitTests [0x42b9a1]\n??:? void rt.dmain2._d_run_main(int, char**, extern (C) int function(char[][])*).runAll() [0x4282f4]\n??:? void rt.dmain2._d_r",
      "stdout": "",
      "timestamp": 1660164103
    },
    {
      "exit_code": 1,
      "program": "import std.typecons;\nimport std.math;\n/*\n\n    Given a positive integer n, return the count of the numbers of n-digit\n    positive integers that start or end with 1.\n    \n*/\nlong starts_one_ends(long n) \n{\n    long result = 0;\n    long max_num = pow(10, n);\n    foreach(i; 1 .. max_num)\n    {\n        if(i % 10 == 1 || i / 10 == 1)\n            result++;\n    }\n    return result;\n}\nunittest\n{\n    alias candidate = starts_one_ends;\n\n    assert(candidate(1L) == 1L);\n    assert(candidate(2L) == 18L);\n    assert(candidate(3L) == 180L);\n    assert(candidate(4L) == 1800L);\n    assert(candidate(5L) == 18000L);\n}\nvoid main(){}",
      "status": "Exception",
      "stderr": "core.exception.AssertError@/tmp/tmp2g5ia76q.d(25): unittest failure\n----------------\n??:? _d_unittestp [0x427ead]\n??:? void tmp2g5ia76q.__unittest_L20_C1() [0x427af9]\n??:? void tmp2g5ia76q.__modtest() [0x427c30]\n??:? int core.runtime.runModuleUnitTests().__foreachbody2(object.ModuleInfo*) [0x42bbd3]\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)).__lambda2(immutable(object.ModuleInfo*)) [0x42aa66]\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))).__foreachbody2(ref rt.sections_elf_shared.DSO) [0x42fbf9]\n??:? int rt.sections_elf_shared.DSO.opApply(scope int delegate(ref rt.sections_elf_shared.DSO)) [0x4300a8]\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))) [0x42fb85]\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)) [0x42aa3d]\n??:? runModuleUnitTests [0x42b9a9]\n??:? void rt.dmain2._d_run_main(int, char**, extern (C) int function(char[][])*).runAll() [0x4282fc]\n??:? void rt.dmain2._d_r",
      "stdout": "",
      "timestamp": 1660164104
    },
    {
      "exit_code": 1,
      "program": "import std.typecons;\nimport std.math;\n/*\n\n    Given a positive integer n, return the count of the numbers of n-digit\n    positive integers that start or end with 1.\n    \n*/\nlong starts_one_ends(long n) \n{\n    long result = 0;\n    long i = 0;\n    long j = 0;\n    long k = 0;\n    long l = 0;\n    long m = 0;\n    long n = 0;\n    long o = 0;\n    long p = 0;\n    long q = 0;\n    long r = 0;\n    long s = 0;\n    long t = 0;\n    long u = 0;\n    long v = 0;\n    long w = 0;\n    long x = 0;\n    long y = 0;\n    long z = 0;\n    long aa = 0;\n    long ab = 0;\n    long ac = 0;\n    long ad = 0;\n    long ae = 0;\n    long af = 0;\n    long ag = 0;\n    long ah = 0;\n    long ai = 0;\n    long aj = 0;\n    long ak = 0;\n    long al = 0;\n    long am = 0;\n    long an = 0;\n    long ao = 0;\n    long ap = 0;\n    long aq = 0;\n    long ar = 0;\n    long as = 0;\n    long at = 0;\n    long au = 0;\n    long av = 0;\n    long aw = 0;\n    long ax = 0;\n    long ay = 0;\n    long az = 0;\n    long ba = 0;\n    long bb = 0;\n    long bc = 0;\n    long bd = 0;\n    long be = 0;\n    long bf = 0;\n    long bg = 0;\n    long bh = 0;\n    long bi = 0;\n    long bj = 0;\n    long bk = 0;\n    long bl = 0;\n    long bm = 0;\n    long bn = 0;\n    long bo = 0;\n    long bp = 0;\n    long bq = 0;\n    long br = 0;\n    long bs = 0;\n    long bt = 0;\n    long bu = 0;\n    long bv = 0;\n    long bw = 0;\n    long bx = 0;\n    long by =\nunittest\n{\n    alias candidate = starts_one_ends;\n\n    assert(candidate(1L) == 1L);\n    assert(candidate(2L) == 18L);\n    assert(candidate(3L) == 180L);\n    assert(candidate(4L) == 1800L);\n    assert(candidate(5L) == 18000L);\n}\nvoid main(){}",
      "status": "SyntaxError",
      "stderr": "/tmp/tmpiauvommf.d(81): Error: expression expected, not `unittest`\n/tmp/tmpiauvommf.d(82): Error: semicolon expected, not `{`\n/tmp/tmpiauvommf.d(91): Error: found `End of File` when expecting `}` following compound statement\nFailed: [\"dmd\", \"-unittest\", \"-v\", \"-o-\", \"/tmp/tmpiauvommf.d\", \"-I/tmp\"]\n",
      "stdout": "",
      "timestamp": 1660164104
    },
    {
      "exit_code": 1,
      "program": "import std.typecons;\nimport std.math;\n/*\n\n    Given a positive integer n, return the count of the numbers of n-digit\n    positive integers that start or end with 1.\n    \n*/\nlong starts_one_ends(long n) \n{\n    if (n == 1)\n        return 2;\n    else if (n == 2)\n        return 3;\n    else\n        return starts_one_ends(n - 1) + starts_one_ends(n - 2);\n}\nunittest\n{\n    alias candidate = starts_one_ends;\n\n    assert(candidate(1L) == 1L);\n    assert(candidate(2L) == 18L);\n    assert(candidate(3L) == 180L);\n    assert(candidate(4L) == 1800L);\n    assert(candidate(5L) == 18000L);\n}\nvoid main(){}",
      "status": "Exception",
      "stderr": "core.exception.AssertError@/tmp/tmpiscpwzr8.d(22): unittest failure\n----------------\n??:? _d_unittestp [0x427d9d]\n??:? void tmpiscpwzr8.__unittest_L18_C1() [0x427a7c]\n??:? void tmpiscpwzr8.__modtest() [0x427b1c]\n??:? int core.runtime.runModuleUnitTests().__foreachbody2(object.ModuleInfo*) [0x42bac3]\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)).__lambda2(immutable(object.ModuleInfo*)) [0x42a956]\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))).__foreachbody2(ref rt.sections_elf_shared.DSO) [0x42fae9]\n??:? int rt.sections_elf_shared.DSO.opApply(scope int delegate(ref rt.sections_elf_shared.DSO)) [0x42ff98]\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))) [0x42fa75]\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)) [0x42a92d]\n??:? runModuleUnitTests [0x42b899]\n??:? void rt.dmain2._d_run_main(int, char**, extern (C) int function(char[][])*).runAll() [0x4281ec]\n??:? void rt.dmain2._d_r",
      "stdout": "",
      "timestamp": 1660164104
    },
    {
      "exit_code": 1,
      "program": "import std.typecons;\nimport std.math;\n/*\n\n    Given a positive integer n, return the count of the numbers of n-digit\n    positive integers that start or end with 1.\n    \n*/\nlong starts_one_ends(long n) \n{\n    long result = 0;\n    long i = 0;\n    long j = 0;\n    long k = 0;\n    long l = 0;\n    long m = 0;\n    long o = 0;\n    long p = 0;\n    long q = 0;\n    long r = 0;\n    long s = 0;\n    long t = 0;\n    long u = 0;\n    long v = 0;\n    long w = 0;\n    long x = 0;\n    long y = 0;\n    long z = 0;\n    long aa = 0;\n    long ab = 0;\n    long ac = 0;\n    long ad = 0;\n    long ae = 0;\n    long af = 0;\n    long ag = 0;\n    long ah = 0;\n    long ai = 0;\n    long aj = 0;\n    long ak = 0;\n    long al = 0;\n    long am = 0;\n    long an = 0;\n    long ao = 0;\n    long ap = 0;\n    long aq = 0;\n    long ar = 0;\n    long as = 0;\n    long at = 0;\n    long au = 0;\n    long av = 0;\n    long aw = 0;\n    long ax = 0;\n    long ay = 0;\n    long az = 0;\n    long ba = 0;\n    long bb = 0;\n    long bc = 0;\n    long bd = 0;\n    long be = 0;\n    long bf = 0;\n    long bg = 0;\n    long bh = 0;\n    long bi = 0;\n    long bj = 0;\n    long bk = 0;\n    long bl = 0;\n    long bm = 0;\n    long bn = 0;\n    long bo = 0;\n    long bp = 0;\n    long bq = 0;\n    long br = 0;\n    long bs = 0;\n    long bt = 0;\n    long bu = 0;\n    long bv = 0;\n    long bw = 0;\n    long bx = 0;\n    long by = 0;\n    long bz\nunittest\n{\n    alias candidate = starts_one_ends;\n\n    assert(candidate(1L) == 1L);\n    assert(candidate(2L) == 18L);\n    assert(candidate(3L) == 180L);\n    assert(candidate(4L) == 1800L);\n    assert(candidate(5L) == 18000L);\n}\nvoid main(){}",
      "status": "SyntaxError",
      "stderr": "/tmp/tmp1ei0thaq.d(81): Error: semicolon expected, not `unittest`\n/tmp/tmp1ei0thaq.d(81): Error: found `unittest` instead of statement\nFailed: [\"dmd\", \"-unittest\", \"-v\", \"-o-\", \"/tmp/tmp1ei0thaq.d\", \"-I/tmp\"]\n",
      "stdout": "",
      "timestamp": 1660164104
    },
    {
      "exit_code": 1,
      "program": "import std.typecons;\nimport std.math;\n/*\n\n    Given a positive integer n, return the count of the numbers of n-digit\n    positive integers that start or end with 1.\n    \n*/\nlong starts_one_ends(long n) \n{\n    if (n == 1)\n        return 2;\n    else\n        return (pow(10, n - 1) + pow(10, n - 2));\n}\nunittest\n{\n    alias candidate = starts_one_ends;\n\n    assert(candidate(1L) == 1L);\n    assert(candidate(2L) == 18L);\n    assert(candidate(3L) == 180L);\n    assert(candidate(4L) == 1800L);\n    assert(candidate(5L) == 18000L);\n}\nvoid main(){}",
      "status": "Exception",
      "stderr": "core.exception.AssertError@/tmp/tmp91lg2ffn.d(20): unittest failure\n----------------\n??:? _d_unittestp [0x427e8d]\n??:? void tmp91lg2ffn.__unittest_L16_C1() [0x427ab8]\n??:? void tmp91lg2ffn.__modtest() [0x427c10]\n??:? int core.runtime.runModuleUnitTests().__foreachbody2(object.ModuleInfo*) [0x42bbb3]\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)).__lambda2(immutable(object.ModuleInfo*)) [0x42aa46]\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))).__foreachbody2(ref rt.sections_elf_shared.DSO) [0x42fbd9]\n??:? int rt.sections_elf_shared.DSO.opApply(scope int delegate(ref rt.sections_elf_shared.DSO)) [0x430088]\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))) [0x42fb65]\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)) [0x42aa1d]\n??:? runModuleUnitTests [0x42b989]\n??:? void rt.dmain2._d_run_main(int, char**, extern (C) int function(char[][])*).runAll() [0x4282dc]\n??:? void rt.dmain2._d_r",
      "stdout": "",
      "timestamp": 1660164103
    },
    {
      "exit_code": 1,
      "program": "import std.typecons;\nimport std.math;\n/*\n\n    Given a positive integer n, return the count of the numbers of n-digit\n    positive integers that start or end with 1.\n    \n*/\nlong starts_one_ends(long n) \n{\n    long result = 0;\n    long i = 1;\n    long j = 1;\n    long k = 1;\n    long l = 1;\n    long m = 1;\n    long n = 1;\n    long o = 1;\n    long p = 1;\n    long q = 1;\n    long r = 1;\n    long s = 1;\n    long t = 1;\n    long u = 1;\n    long v = 1;\n    long w = 1;\n    long x = 1;\n    long y = 1;\n    long z = 1;\n    long aa = 1;\n    long ab = 1;\n    long ac = 1;\n    long ad = 1;\n    long ae = 1;\n    long af = 1;\n    long ag = 1;\n    long ah = 1;\n    long ai = 1;\n    long aj = 1;\n    long ak = 1;\n    long al = 1;\n    long am = 1;\n    long an = 1;\n    long ao = 1;\n    long ap = 1;\n    long aq = 1;\n    long ar = 1;\n    long as = 1;\n    long at = 1;\n    long au = 1;\n    long av = 1;\n    long aw = 1;\n    long ax = 1;\n    long ay = 1;\n    long az = 1;\n    long ba = 1;\n    long bb = 1;\n    long bc = 1;\n    long bd = 1;\n    long be = 1;\n    long bf = 1;\n    long bg = 1;\n    long bh = 1;\n    long bi = 1;\n    long bj = 1;\n    long bk = 1;\n    long bl = 1;\n    long bm = 1;\n    long bn = 1;\n    long bo = 1;\n    long bp = 1;\n    long bq = 1;\n    long br = 1;\n    long bs = 1;\n    long bt = 1;\n    long bu = 1;\n    long bv = 1;\n    long bw = 1;\n    long bx = 1;\n    long by =\nunittest\n{\n    alias candidate = starts_one_ends;\n\n    assert(candidate(1L) == 1L);\n    assert(candidate(2L) == 18L);\n    assert(candidate(3L) == 180L);\n    assert(candidate(4L) == 1800L);\n    assert(candidate(5L) == 18000L);\n}\nvoid main(){}",
      "status": "SyntaxError",
      "stderr": "/tmp/tmpw9xfthg7.d(81): Error: expression expected, not `unittest`\n/tmp/tmpw9xfthg7.d(82): Error: semicolon expected, not `{`\n/tmp/tmpw9xfthg7.d(91): Error: found `End of File` when expecting `}` following compound statement\nFailed: [\"dmd\", \"-unittest\", \"-v\", \"-o-\", \"/tmp/tmpw9xfthg7.d\", \"-I/tmp\"]\n",
      "stdout": "",
      "timestamp": 1660164104
    },
    {
      "exit_code": 1,
      "program": "import std.typecons;\nimport std.math;\n/*\n\n    Given a positive integer n, return the count of the numbers of n-digit\n    positive integers that start or end with 1.\n    \n*/\nlong starts_one_ends(long n) \n{\n    long result = 0;\n    long max = pow(10, n);\n    foreach(i; 1 .. max)\n    {\n        if (i % 10 == 1)\n            result++;\n        if (i / 10 == 1)\n            result++;\n    }\n    return result;\n}\nunittest\n{\n    alias candidate = starts_one_ends;\n\n    assert(candidate(1L) == 1L);\n    assert(candidate(2L) == 18L);\n    assert(candidate(3L) == 180L);\n    assert(candidate(4L) == 1800L);\n    assert(candidate(5L) == 18000L);\n}\nvoid main(){}",
      "status": "Exception",
      "stderr": "core.exception.AssertError@/tmp/tmp63hiu6eb.d(27): unittest failure\n----------------\n??:? _d_unittestp [0x427eb5]\n??:? void tmp63hiu6eb.__unittest_L22_C1() [0x427b01]\n??:? void tmp63hiu6eb.__modtest() [0x427c38]\n??:? int core.runtime.runModuleUnitTests().__foreachbody2(object.ModuleInfo*) [0x42bbdb]\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)).__lambda2(immutable(object.ModuleInfo*)) [0x42aa6e]\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))).__foreachbody2(ref rt.sections_elf_shared.DSO) [0x42fc01]\n??:? int rt.sections_elf_shared.DSO.opApply(scope int delegate(ref rt.sections_elf_shared.DSO)) [0x4300b0]\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))) [0x42fb8d]\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)) [0x42aa45]\n??:? runModuleUnitTests [0x42b9b1]\n??:? void rt.dmain2._d_run_main(int, char**, extern (C) int function(char[][])*).runAll() [0x428304]\n??:? void rt.dmain2._d_r",
      "stdout": "",
      "timestamp": 1660164104
    },
    {
      "exit_code": 1,
      "program": "import std.typecons;\nimport std.math;\n/*\n\n    Given a positive integer n, return the count of the numbers of n-digit\n    positive integers that start or end with 1.\n    \n*/\nlong starts_one_ends(long n) \n{\n    long count = 0;\n    long start = 1;\n    long end = 1;\n    for (long i = 0; i < n; i++) {\n        start *= 10;\n        end *= 10;\n    }\n    end += 1;\n    for (long i = start; i < end; i++) {\n        if (i % 10 == 1 || i / 10 == 1) {\n            count++;\n        }\n    }\n    return count;\n}\nunittest\n{\n    alias candidate = starts_one_ends;\n\n    assert(candidate(1L) == 1L);\n    assert(candidate(2L) == 18L);\n    assert(candidate(3L) == 180L);\n    assert(candidate(4L) == 1800L);\n    assert(candidate(5L) == 18000L);\n}\nvoid main(){}",
      "status": "Exception",
      "stderr": "core.exception.AssertError@/tmp/tmpbp6ss6i1.d(31): unittest failure\n----------------\n??:? _d_unittestp [0x427de5]\n??:? void tmpbp6ss6i1.__unittest_L26_C1() [0x427ae5]\n??:? void tmpbp6ss6i1.__modtest() [0x427b64]\n??:? int core.runtime.runModuleUnitTests().__foreachbody2(object.ModuleInfo*) [0x42bb0b]\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)).__lambda2(immutable(object.ModuleInfo*)) [0x42a99e]\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))).__foreachbody2(ref rt.sections_elf_shared.DSO) [0x42fb31]\n??:? int rt.sections_elf_shared.DSO.opApply(scope int delegate(ref rt.sections_elf_shared.DSO)) [0x42ffe0]\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))) [0x42fabd]\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)) [0x42a975]\n??:? runModuleUnitTests [0x42b8e1]\n??:? void rt.dmain2._d_run_main(int, char**, extern (C) int function(char[][])*).runAll() [0x428234]\n??:? void rt.dmain2._d_r",
      "stdout": "",
      "timestamp": 1660164104
    },
    {
      "exit_code": 1,
      "program": "import std.typecons;\nimport std.math;\n/*\n\n    Given a positive integer n, return the count of the numbers of n-digit\n    positive integers that start or end with 1.\n    \n*/\nlong starts_one_ends(long n) \n{\n    long count = 0;\n    long start = 1;\n    long end = 1;\n    long i = 0;\n    long j = 0;\n    long k = 0;\n    long l = 0;\n    long m = 0;\n    long p = 0;\n    long q = 0;\n    long r = 0;\n    long s = 0;\n    long t = 0;\n    long u = 0;\n    long v = 0;\n    long w = 0;\n    long x = 0;\n    long y = 0;\n    long z = 0;\n    long a = 0;\n    long b = 0;\n    long c = 0;\n    long d = 0;\n    long e = 0;\n    long f = 0;\n    long g = 0;\n    long h = 0;\n    long ii = 0;\n    long jj = 0;\n    long kk = 0;\n    long ll = 0;\n    long mm = 0;\n    long pp = 0;\n    long qq = 0;\n    long rr = 0;\n    long ss = 0;\n    long tt = 0;\n    long uu = 0;\n    long vv = 0;\n    long ww = 0;\n    long xx = 0;\n    long yy = 0;\n    long zz = 0;\n    long aa = 0;\n    long bb = 0;\n    long cc = 0;\n    long dd = 0;\n    long ee = 0;\n    long ff = 0;\n    long gg = 0;\n    long hh = 0;\n    long iii = 0;\n    long jjj = 0;\n    long kkk = 0;\n    long lll = 0;\n    long mmm = 0;\n    long ppp = 0;\n    long qqq = 0;\n    long rrr = 0;\n    long sss = 0;\n    long ttt = 0;\n    long uuu = 0;\n    long vvv = 0;\n    long www = 0;\n    long xxx = 0;\n    long yyy = 0;\n    long zzz = 0;\n    long aaaa = 0;\n    long b\nunittest\n{\n    alias candidate = starts_one_ends;\n\n    assert(candidate(1L) == 1L);\n    assert(candidate(2L) == 18L);\n    assert(candidate(3L) == 180L);\n    assert(candidate(4L) == 1800L);\n    assert(candidate(5L) == 18000L);\n}\nvoid main(){}",
      "status": "SyntaxError",
      "stderr": "/tmp/tmpxi15lo96.d(80): Error: semicolon expected, not `unittest`\n/tmp/tmpxi15lo96.d(80): Error: found `unittest` instead of statement\nFailed: [\"dmd\", \"-unittest\", \"-v\", \"-o-\", \"/tmp/tmpxi15lo96.d\", \"-I/tmp\"]\n",
      "stdout": "",
      "timestamp": 1660164103
    },
    {
      "exit_code": 1,
      "program": "import std.typecons;\nimport std.math;\n/*\n\n    Given a positive integer n, return the count of the numbers of n-digit\n    positive integers that start or end with 1.\n    \n*/\nlong starts_one_ends(long n) \n{\n    if (n == 1)\n        return 1;\n    else\n        return starts_one_ends(n - 1) + pow(10, n - 1);\n}\nunittest\n{\n    alias candidate = starts_one_ends;\n\n    assert(candidate(1L) == 1L);\n    assert(candidate(2L) == 18L);\n    assert(candidate(3L) == 180L);\n    assert(candidate(4L) == 1800L);\n    assert(candidate(5L) == 18000L);\n}\nvoid main(){}",
      "status": "Exception",
      "stderr": "core.exception.AssertError@/tmp/tmpk5mawak3.d(21): unittest failure\n----------------\n??:? _d_unittestp [0x427e7d]\n??:? void tmpk5mawak3.__unittest_L16_C1() [0x427ac9]\n??:? void tmpk5mawak3.__modtest() [0x427c00]\n??:? int core.runtime.runModuleUnitTests().__foreachbody2(object.ModuleInfo*) [0x42bba3]\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)).__lambda2(immutable(object.ModuleInfo*)) [0x42aa36]\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))).__foreachbody2(ref rt.sections_elf_shared.DSO) [0x42fbc9]\n??:? int rt.sections_elf_shared.DSO.opApply(scope int delegate(ref rt.sections_elf_shared.DSO)) [0x430078]\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))) [0x42fb55]\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)) [0x42aa0d]\n??:? runModuleUnitTests [0x42b979]\n??:? void rt.dmain2._d_run_main(int, char**, extern (C) int function(char[][])*).runAll() [0x4282cc]\n??:? void rt.dmain2._d_r",
      "stdout": "",
      "timestamp": 1660164103
    },
    {
      "exit_code": 1,
      "program": "import std.typecons;\nimport std.math;\n/*\n\n    Given a positive integer n, return the count of the numbers of n-digit\n    positive integers that start or end with 1.\n    \n*/\nlong starts_one_ends(long n) \n{\n    long count = 0;\n    long start = 1;\n    long end = 1;\n    for (long i = 0; i < n; i++) {\n        start *= 10;\n        end *= 10;\n    }\n    start /= 10;\n    end -= 1;\n    count = end - start + 1;\n    return count;\n}\nunittest\n{\n    alias candidate = starts_one_ends;\n\n    assert(candidate(1L) == 1L);\n    assert(candidate(2L) == 18L);\n    assert(candidate(3L) == 180L);\n    assert(candidate(4L) == 1800L);\n    assert(candidate(5L) == 18000L);\n}\nvoid main(){}",
      "status": "Exception",
      "stderr": "core.exception.AssertError@/tmp/tmpb8pq1bx5.d(27): unittest failure\n----------------\n??:? _d_unittestp [0x427dad]\n??:? void tmpb8pq1bx5.__unittest_L23_C1() [0x427a90]\n??:? void tmpb8pq1bx5.__modtest() [0x427b30]\n??:? int core.runtime.runModuleUnitTests().__foreachbody2(object.ModuleInfo*) [0x42bad3]\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)).__lambda2(immutable(object.ModuleInfo*)) [0x42a966]\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))).__foreachbody2(ref rt.sections_elf_shared.DSO) [0x42faf9]\n??:? int rt.sections_elf_shared.DSO.opApply(scope int delegate(ref rt.sections_elf_shared.DSO)) [0x42ffa8]\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))) [0x42fa85]\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)) [0x42a93d]\n??:? runModuleUnitTests [0x42b8a9]\n??:? void rt.dmain2._d_run_main(int, char**, extern (C) int function(char[][])*).runAll() [0x4281fc]\n??:? void rt.dmain2._d_r",
      "stdout": "",
      "timestamp": 1660164103
    },
    {
      "exit_code": 1,
      "program": "import std.typecons;\nimport std.math;\n/*\n\n    Given a positive integer n, return the count of the numbers of n-digit\n    positive integers that start or end with 1.\n    \n*/\nlong starts_one_ends(long n) \n{\n    long result = 0;\n    long start = pow(10, n - 1);\n    long end = pow(10, n);\n    foreach (i; start .. end) {\n        if (i % 10 == 1 || i / 10 == 1) {\n            result++;\n        }\n    }\n    return result;\n}\nunittest\n{\n    alias candidate = starts_one_ends;\n\n    assert(candidate(1L) == 1L);\n    assert(candidate(2L) == 18L);\n    assert(candidate(3L) == 180L);\n    assert(candidate(4L) == 1800L);\n    assert(candidate(5L) == 18000L);\n}\nvoid main(){}",
      "status": "Exception",
      "stderr": "core.exception.AssertError@/tmp/tmprfh2x059.d(27): unittest failure\n----------------\n??:? _d_unittestp [0x427ed5]\n??:? void tmprfh2x059.__unittest_L21_C1() [0x427b40]\n??:? void tmprfh2x059.__modtest() [0x427c54]\n??:? int core.runtime.runModuleUnitTests().__foreachbody2(object.ModuleInfo*) [0x42bbfb]\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)).__lambda2(immutable(object.ModuleInfo*)) [0x42aa8e]\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))).__foreachbody2(ref rt.sections_elf_shared.DSO) [0x42fc21]\n??:? int rt.sections_elf_shared.DSO.opApply(scope int delegate(ref rt.sections_elf_shared.DSO)) [0x4300d0]\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))) [0x42fbad]\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)) [0x42aa65]\n??:? runModuleUnitTests [0x42b9d1]\n??:? void rt.dmain2._d_run_main(int, char**, extern (C) int function(char[][])*).runAll() [0x428324]\n??:? void rt.dmain2._d_r",
      "stdout": "",
      "timestamp": 1660164103
    },
    {
      "exit_code": 1,
      "program": "import std.typecons;\nimport std.math;\n/*\n\n    Given a positive integer n, return the count of the numbers of n-digit\n    positive integers that start or end with 1.\n    \n*/\nlong starts_one_ends(long n) \n{\n    long result = 0;\n    long i = 0;\n    long j = 0;\n    long k = 0;\n    long l = 0;\n    long m = 0;\n    long n_digits = 0;\n    long n_digits_1 = 0;\n    long n_digits_2 = 0;\n    long n_digits_3 = 0;\n    long n_digits_4 = 0;\n    long n_digits_5 = 0;\n    long n_digits_6 = 0;\n    long n_digits_7 = 0;\n    long n_digits_8 = 0;\n    long n_digits_9 = 0;\n    long n_digits_10 = 0;\n    long n_digits_11 = 0;\n    long n_digits_12 = 0;\n    long n_digits_13 = 0;\n    long n_digits_14 = 0;\n    long n_digits_15 = 0;\n    long n_digits_16 = 0;\n    long n_digits_17 = 0;\n    long n_digits_18 = 0;\n    long n_digits_19 = 0;\n    long n_digits_20 = 0;\n    long n_digits_21 = 0;\n    long n_digits_22 = 0;\n    long n_digits_23 = 0;\n    long n_digits_24 = 0;\n    long n_digits_25 = 0;\n    long n_digits_26 = 0;\n    long n_digits_27 = 0;\n    long n_digits_28 = 0;\n    long n_digits_29 = 0;\n    long n_digits_30 = 0;\n    long n_digits_31 = 0;\n    long n_digits_32 = 0;\n    long n_digits_33 = 0;\n    long n_digits_34 = 0;\n    long n_digits_35 = 0;\n    long n_digits_36 = 0;\n    long n_digits_37 = 0;\n    long n_digits_38 = 0;\n   \nunittest\n{\n    alias candidate = starts_one_ends;\n\n    assert(candidate(1L) == 1L);\n    assert(candidate(2L) == 18L);\n    assert(candidate(3L) == 180L);\n    assert(candidate(4L) == 1800L);\n    assert(candidate(5L) == 18000L);\n}\nvoid main(){}",
      "status": "SyntaxError",
      "stderr": "/tmp/tmp86a5ze6y.d(57): Error: found `unittest` instead of statement\nFailed: [\"dmd\", \"-unittest\", \"-v\", \"-o-\", \"/tmp/tmp86a5ze6y.d\", \"-I/tmp\"]\n",
      "stdout": "",
      "timestamp": 1660164104
    },
    {
      "exit_code": 1,
      "program": "import std.typecons;\nimport std.math;\n/*\n\n    Given a positive integer n, return the count of the numbers of n-digit\n    positive integers that start or end with 1.\n    \n*/\nlong starts_one_ends(long n) \n{\n    long result = 0;\n    long i = 1;\n    long j = 1;\n    long k = 1;\n    long l = 1;\n    long m = 1;\n    long o = 1;\n    long p = 1;\n    long q = 1;\n    long r = 1;\n    long s = 1;\n    long t = 1;\n    long u = 1;\n    long v = 1;\n    long w = 1;\n    long x = 1;\n    long y = 1;\n    long z = 1;\n    long aa = 1;\n    long ab = 1;\n    long ac = 1;\n    long ad = 1;\n    long ae = 1;\n    long af = 1;\n    long ag = 1;\n    long ah = 1;\n    long ai = 1;\n    long aj = 1;\n    long ak = 1;\n    long al = 1;\n    long am = 1;\n    long an = 1;\n    long ao = 1;\n    long ap = 1;\n    long aq = 1;\n    long ar = 1;\n    long as = 1;\n    long at = 1;\n    long au = 1;\n    long av = 1;\n    long aw = 1;\n    long ax = 1;\n    long ay = 1;\n    long az = 1;\n    long ba = 1;\n    long bb = 1;\n    long bc = 1;\n    long bd = 1;\n    long be = 1;\n    long bf = 1;\n    long bg = 1;\n    long bh = 1;\n    long bi = 1;\n    long bj = 1;\n    long bk = 1;\n    long bl = 1;\n    long bm = 1;\n    long bn = 1;\n    long bo = 1;\n    long bp = 1;\n    long bq = 1;\n    long br = 1;\n    long bs = 1;\n    long bt = 1;\n    long bu = 1;\n    long bv = 1;\n    long bw = 1;\n    long bx = 1;\n    long by = 1;\n    long bz\nunittest\n{\n    alias candidate = starts_one_ends;\n\n    assert(candidate(1L) == 1L);\n    assert(candidate(2L) == 18L);\n    assert(candidate(3L) == 180L);\n    assert(candidate(4L) == 1800L);\n    assert(candidate(5L) == 18000L);\n}\nvoid main(){}",
      "status": "SyntaxError",
      "stderr": "/tmp/tmpjuyjgcnj.d(81): Error: semicolon expected, not `unittest`\n/tmp/tmpjuyjgcnj.d(81): Error: found `unittest` instead of statement\nFailed: [\"dmd\", \"-unittest\", \"-v\", \"-o-\", \"/tmp/tmpjuyjgcnj.d\", \"-I/tmp\"]\n",
      "stdout": "",
      "timestamp": 1660164104
    },
    {
      "exit_code": 1,
      "program": "import std.typecons;\nimport std.math;\n/*\n\n    Given a positive integer n, return the count of the numbers of n-digit\n    positive integers that start or end with 1.\n    \n*/\nlong starts_one_ends(long n) \n{\n    long count = 0;\n    long start = pow(10, n - 1);\n    long end = pow(10, n);\n    foreach(i; start .. end)\n    {\n        if(i % 10 == 1)\n        {\n            count++;\n        }\n    }\n    return count;\n}\nunittest\n{\n    alias candidate = starts_one_ends;\n\n    assert(candidate(1L) == 1L);\n    assert(candidate(2L) == 18L);\n    assert(candidate(3L) == 180L);\n    assert(candidate(4L) == 1800L);\n    assert(candidate(5L) == 18000L);\n}\nvoid main(){}",
      "status": "Exception",
      "stderr": "core.exception.AssertError@/tmp/tmp1i0rqymi.d(28): unittest failure\n----------------\n??:? _d_unittestp [0x427ebd]\n??:? void tmp1i0rqymi.__unittest_L23_C1() [0x427b05]\n??:? void tmp1i0rqymi.__modtest() [0x427c3c]\n??:? int core.runtime.runModuleUnitTests().__foreachbody2(object.ModuleInfo*) [0x42bbe3]\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)).__lambda2(immutable(object.ModuleInfo*)) [0x42aa76]\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))).__foreachbody2(ref rt.sections_elf_shared.DSO) [0x42fc09]\n??:? int rt.sections_elf_shared.DSO.opApply(scope int delegate(ref rt.sections_elf_shared.DSO)) [0x4300b8]\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))) [0x42fb95]\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)) [0x42aa4d]\n??:? runModuleUnitTests [0x42b9b9]\n??:? void rt.dmain2._d_run_main(int, char**, extern (C) int function(char[][])*).runAll() [0x42830c]\n??:? void rt.dmain2._d_r",
      "stdout": "",
      "timestamp": 1660164105
    },
    {
      "exit_code": 1,
      "program": "import std.typecons;\nimport std.math;\n/*\n\n    Given a positive integer n, return the count of the numbers of n-digit\n    positive integers that start or end with 1.\n    \n*/\nlong starts_one_ends(long n) \n{\n    long result = 0;\n    if (n == 1)\n        return 1;\n    else if (n == 2)\n        return 10;\n    else\n    {\n        result = starts_one_ends(n - 1) + starts_one_ends(n - 2);\n        return result;\n    }\n}\nunittest\n{\n    alias candidate = starts_one_ends;\n\n    assert(candidate(1L) == 1L);\n    assert(candidate(2L) == 18L);\n    assert(candidate(3L) == 180L);\n    assert(candidate(4L) == 1800L);\n    assert(candidate(5L) == 18000L);\n}\nvoid main(){}",
      "status": "Exception",
      "stderr": "core.exception.AssertError@/tmp/tmporr6vw0j.d(27): unittest failure\n----------------\n??:? _d_unittestp [0x427d9d]\n??:? void tmporr6vw0j.__unittest_L22_C1() [0x427a9d]\n??:? void tmporr6vw0j.__modtest() [0x427b1c]\n??:? int core.runtime.runModuleUnitTests().__foreachbody2(object.ModuleInfo*) [0x42bac3]\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)).__lambda2(immutable(object.ModuleInfo*)) [0x42a956]\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))).__foreachbody2(ref rt.sections_elf_shared.DSO) [0x42fae9]\n??:? int rt.sections_elf_shared.DSO.opApply(scope int delegate(ref rt.sections_elf_shared.DSO)) [0x42ff98]\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))) [0x42fa75]\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)) [0x42a92d]\n??:? runModuleUnitTests [0x42b899]\n??:? void rt.dmain2._d_run_main(int, char**, extern (C) int function(char[][])*).runAll() [0x4281ec]\n??:? void rt.dmain2._d_r",
      "stdout": "",
      "timestamp": 1660164103
    },
    {
      "exit_code": 1,
      "program": "import std.typecons;\nimport std.math;\n/*\n\n    Given a positive integer n, return the count of the numbers of n-digit\n    positive integers that start or end with 1.\n    \n*/\nlong starts_one_ends(long n) \n{\n    long result = 0;\n    long start = 1;\n    long end = 1;\n    for (long i = 0; i < n; i++) {\n        start *= 10;\n        end *= 10;\n    }\n    result += start - 1;\n    end /= 10;\n    result += end - 1;\n    return result;\n}\nunittest\n{\n    alias candidate = starts_one_ends;\n\n    assert(candidate(1L) == 1L);\n    assert(candidate(2L) == 18L);\n    assert(candidate(3L) == 180L);\n    assert(candidate(4L) == 1800L);\n    assert(candidate(5L) == 18000L);\n}\nvoid main(){}",
      "status": "Exception",
      "stderr": "core.exception.AssertError@/tmp/tmpcq7kxokh.d(27): unittest failure\n----------------\n??:? _d_unittestp [0x427dbd]\n??:? void tmpcq7kxokh.__unittest_L23_C1() [0x427a9c]\n??:? void tmpcq7kxokh.__modtest() [0x427b3c]\n??:? int core.runtime.runModuleUnitTests().__foreachbody2(object.ModuleInfo*) [0x42bae3]\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)).__lambda2(immutable(object.ModuleInfo*)) [0x42a976]\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))).__foreachbody2(ref rt.sections_elf_shared.DSO) [0x42fb09]\n??:? int rt.sections_elf_shared.DSO.opApply(scope int delegate(ref rt.sections_elf_shared.DSO)) [0x42ffb8]\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))) [0x42fa95]\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)) [0x42a94d]\n??:? runModuleUnitTests [0x42b8b9]\n??:? void rt.dmain2._d_run_main(int, char**, extern (C) int function(char[][])*).runAll() [0x42820c]\n??:? void rt.dmain2._d_r",
      "stdout": "",
      "timestamp": 1660164105
    },
    {
      "exit_code": 1,
      "program": "import std.typecons;\nimport std.math;\n/*\n\n    Given a positive integer n, return the count of the numbers of n-digit\n    positive integers that start or end with 1.\n    \n*/\nlong starts_one_ends(long n) \n{\n    long result = 0;\n    if (n == 1)\n        return 1;\n    else if (n == 2)\n        return 11;\n    else\n    {\n        result = 11;\n        for (long i = 3; i <= n; i++)\n        {\n            result += 9 * pow(10, i - 2);\n        }\n    }\n    return result;\n}\nunittest\n{\n    alias candidate = starts_one_ends;\n\n    assert(candidate(1L) == 1L);\n    assert(candidate(2L) == 18L);\n    assert(candidate(3L) == 180L);\n    assert(candidate(4L) == 1800L);\n    assert(candidate(5L) == 18000L);\n}\nvoid main(){}",
      "status": "Exception",
      "stderr": "core.exception.AssertError@/tmp/tmpqn61jfsk.d(31): unittest failure\n----------------\n??:? _d_unittestp [0x427ead]\n??:? void tmpqn61jfsk.__unittest_L26_C1() [0x427af9]\n??:? void tmpqn61jfsk.__modtest() [0x427c30]\n??:? int core.runtime.runModuleUnitTests().__foreachbody2(object.ModuleInfo*) [0x42bbd3]\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)).__lambda2(immutable(object.ModuleInfo*)) [0x42aa66]\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))).__foreachbody2(ref rt.sections_elf_shared.DSO) [0x42fbf9]\n??:? int rt.sections_elf_shared.DSO.opApply(scope int delegate(ref rt.sections_elf_shared.DSO)) [0x4300a8]\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))) [0x42fb85]\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)) [0x42aa3d]\n??:? runModuleUnitTests [0x42b9a9]\n??:? void rt.dmain2._d_run_main(int, char**, extern (C) int function(char[][])*).runAll() [0x4282fc]\n??:? void rt.dmain2._d_r",
      "stdout": "",
      "timestamp": 1660164105
    },
    {
      "exit_code": 1,
      "program": "import std.typecons;\nimport std.math;\n/*\n\n    Given a positive integer n, return the count of the numbers of n-digit\n    positive integers that start or end with 1.\n    \n*/\nlong starts_one_ends(long n) \n{\n    long result = 0;\n    if (n == 1) \n    {\n        result = 2;\n    }\n    else if (n == 2) \n    {\n        result = 3;\n    }\n    else \n    {\n        result = starts_one_ends(n - 1) + starts_one_ends(n - 2);\n    }\n    return result;\n}\nunittest\n{\n    alias candidate = starts_one_ends;\n\n    assert(candidate(1L) == 1L);\n    assert(candidate(2L) == 18L);\n    assert(candidate(3L) == 180L);\n    assert(candidate(4L) == 1800L);\n    assert(candidate(5L) == 18000L);\n}\nvoid main(){}",
      "status": "Exception",
      "stderr": "core.exception.AssertError@/tmp/tmp2354djia.d(30): unittest failure\n----------------\n??:? _d_unittestp [0x427dad]\n??:? void tmp2354djia.__unittest_L26_C1() [0x427a90]\n??:? void tmp2354djia.__modtest() [0x427b30]\n??:? int core.runtime.runModuleUnitTests().__foreachbody2(object.ModuleInfo*) [0x42bad3]\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)).__lambda2(immutable(object.ModuleInfo*)) [0x42a966]\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))).__foreachbody2(ref rt.sections_elf_shared.DSO) [0x42faf9]\n??:? int rt.sections_elf_shared.DSO.opApply(scope int delegate(ref rt.sections_elf_shared.DSO)) [0x42ffa8]\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))) [0x42fa85]\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)) [0x42a93d]\n??:? runModuleUnitTests [0x42b8a9]\n??:? void rt.dmain2._d_run_main(int, char**, extern (C) int function(char[][])*).runAll() [0x4281fc]\n??:? void rt.dmain2._d_r",
      "stdout": "",
      "timestamp": 1660164105
    },
    {
      "exit_code": 1,
      "program": "import std.typecons;\nimport std.math;\n/*\n\n    Given a positive integer n, return the count of the numbers of n-digit\n    positive integers that start or end with 1.\n    \n*/\nlong starts_one_ends(long n) \n{\n    if (n == 1) \n        return 2;\n    else \n        return (n - 1) * pow(10, n - 2) + starts_one_ends(n - 1);\n}\nunittest\n{\n    alias candidate = starts_one_ends;\n\n    assert(candidate(1L) == 1L);\n    assert(candidate(2L) == 18L);\n    assert(candidate(3L) == 180L);\n    assert(candidate(4L) == 1800L);\n    assert(candidate(5L) == 18000L);\n}\nvoid main(){}",
      "status": "Exception",
      "stderr": "core.exception.AssertError@/tmp/tmpdw1aqy7y.d(20): unittest failure\n----------------\n??:? _d_unittestp [0x427e95]\n??:? void tmpdw1aqy7y.__unittest_L16_C1() [0x427ac0]\n??:? void tmpdw1aqy7y.__modtest() [0x427c18]\n??:? int core.runtime.runModuleUnitTests().__foreachbody2(object.ModuleInfo*) [0x42bbbb]\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)).__lambda2(immutable(object.ModuleInfo*)) [0x42aa4e]\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))).__foreachbody2(ref rt.sections_elf_shared.DSO) [0x42fbe1]\n??:? int rt.sections_elf_shared.DSO.opApply(scope int delegate(ref rt.sections_elf_shared.DSO)) [0x430090]\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))) [0x42fb6d]\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)) [0x42aa25]\n??:? runModuleUnitTests [0x42b991]\n??:? void rt.dmain2._d_run_main(int, char**, extern (C) int function(char[][])*).runAll() [0x4282e4]\n??:? void rt.dmain2._d_r",
      "stdout": "",
      "timestamp": 1660164105
    },
    {
      "exit_code": 1,
      "program": "import std.typecons;\nimport std.math;\n/*\n\n    Given a positive integer n, return the count of the numbers of n-digit\n    positive integers that start or end with 1.\n    \n*/\nlong starts_one_ends(long n) \n{\n    long result = 0;\n    long start = 1;\n    long end = 1;\n    for (long i = 0; i < n; i++) {\n        start *= 10;\n        end *= 10;\n    }\n    start /= 10;\n    end -= 1;\n    result = end - start + 1;\n    return result;\n}\nunittest\n{\n    alias candidate = starts_one_ends;\n\n    assert(candidate(1L) == 1L);\n    assert(candidate(2L) == 18L);\n    assert(candidate(3L) == 180L);\n    assert(candidate(4L) == 1800L);\n    assert(candidate(5L) == 18000L);\n}\nvoid main(){}",
      "status": "Exception",
      "stderr": "core.exception.AssertError@/tmp/tmpnlgkerhj.d(27): unittest failure\n----------------\n??:? _d_unittestp [0x427dad]\n??:? void tmpnlgkerhj.__unittest_L23_C1() [0x427a90]\n??:? void tmpnlgkerhj.__modtest() [0x427b30]\n??:? int core.runtime.runModuleUnitTests().__foreachbody2(object.ModuleInfo*) [0x42bad3]\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)).__lambda2(immutable(object.ModuleInfo*)) [0x42a966]\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))).__foreachbody2(ref rt.sections_elf_shared.DSO) [0x42faf9]\n??:? int rt.sections_elf_shared.DSO.opApply(scope int delegate(ref rt.sections_elf_shared.DSO)) [0x42ffa8]\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))) [0x42fa85]\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)) [0x42a93d]\n??:? runModuleUnitTests [0x42b8a9]\n??:? void rt.dmain2._d_run_main(int, char**, extern (C) int function(char[][])*).runAll() [0x4281fc]\n??:? void rt.dmain2._d_r",
      "stdout": "",
      "timestamp": 1660164103
    },
    {
      "exit_code": 1,
      "program": "import std.typecons;\nimport std.math;\n/*\n\n    Given a positive integer n, return the count of the numbers of n-digit\n    positive integers that start or end with 1.\n    \n*/\nlong starts_one_ends(long n) \n{\n    long result = 0;\n    long min = 1;\n    long max = 1;\n    long i = 0;\n    while (i < n) {\n        min *= 10;\n        max *= 10;\n        ++i;\n    }\n    min += 1;\n    max += 9;\n    result = max - min + 1;\n    return result;\n}\nunittest\n{\n    alias candidate = starts_one_ends;\n\n    assert(candidate(1L) == 1L);\n    assert(candidate(2L) == 18L);\n    assert(candidate(3L) == 180L);\n    assert(candidate(4L) == 1800L);\n    assert(candidate(5L) == 18000L);\n}\nvoid main(){}",
      "status": "Exception",
      "stderr": "core.exception.AssertError@/tmp/tmp85rg6m7a.d(29): unittest failure\n----------------\n??:? _d_unittestp [0x427d9d]\n??:? void tmp85rg6m7a.__unittest_L25_C1() [0x427a80]\n??:? void tmp85rg6m7a.__modtest() [0x427b20]\n??:? int core.runtime.runModuleUnitTests().__foreachbody2(object.ModuleInfo*) [0x42bac3]\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)).__lambda2(immutable(object.ModuleInfo*)) [0x42a956]\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))).__foreachbody2(ref rt.sections_elf_shared.DSO) [0x42fae9]\n??:? int rt.sections_elf_shared.DSO.opApply(scope int delegate(ref rt.sections_elf_shared.DSO)) [0x42ff98]\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))) [0x42fa75]\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)) [0x42a92d]\n??:? runModuleUnitTests [0x42b899]\n??:? void rt.dmain2._d_run_main(int, char**, extern (C) int function(char[][])*).runAll() [0x4281ec]\n??:? void rt.dmain2._d_r",
      "stdout": "",
      "timestamp": 1660164105
    },
    {
      "exit_code": 1,
      "program": "import std.typecons;\nimport std.math;\n/*\n\n    Given a positive integer n, return the count of the numbers of n-digit\n    positive integers that start or end with 1.\n    \n*/\nlong starts_one_ends(long n) \n{\n    long count = 0;\n    long start = 1;\n    long end = 1;\n    long i = 0;\n    long j = 0;\n    long k = 0;\n    long l = 0;\n    long m = 0;\n    long o = 0;\n    long p = 0;\n    long q = 0;\n    long r = 0;\n    long s = 0;\n    long t = 0;\n    long u = 0;\n    long v = 0;\n    long w = 0;\n    long x = 0;\n    long y = 0;\n    long z = 0;\n    long aa = 0;\n    long ab = 0;\n    long ac = 0;\n    long ad = 0;\n    long ae = 0;\n    long af = 0;\n    long ag = 0;\n    long ah = 0;\n    long ai = 0;\n    long aj = 0;\n    long ak = 0;\n    long al = 0;\n    long am = 0;\n    long an = 0;\n    long ao = 0;\n    long ap = 0;\n    long aq = 0;\n    long ar = 0;\n    long as = 0;\n    long at = 0;\n    long au = 0;\n    long av = 0;\n    long aw = 0;\n    long ax = 0;\n    long ay = 0;\n    long az = 0;\n    long ba = 0;\n    long bb = 0;\n    long bc = 0;\n    long bd = 0;\n    long be = 0;\n    long bf = 0;\n    long bg = 0;\n    long bh = 0;\n    long bi = 0;\n    long bj = 0;\n    long bk = 0;\n    long bl = 0;\n    long bm = 0;\n    long bn = 0;\n    long bo = 0;\n    long bp = 0;\n    long bq = 0;\n    long br = 0;\n    long bs = 0;\n    long bt = 0;\n    long bu = 0;\n    long bv = 0;\n    long bw = 0;\n    long bx =\nunittest\n{\n    alias candidate = starts_one_ends;\n\n    assert(candidate(1L) == 1L);\n    assert(candidate(2L) == 18L);\n    assert(candidate(3L) == 180L);\n    assert(candidate(4L) == 1800L);\n    assert(candidate(5L) == 18000L);\n}\nvoid main(){}",
      "status": "SyntaxError",
      "stderr": "/tmp/tmp3_c2qah_.d(81): Error: expression expected, not `unittest`\n/tmp/tmp3_c2qah_.d(82): Error: semicolon expected, not `{`\n/tmp/tmp3_c2qah_.d(91): Error: found `End of File` when expecting `}` following compound statement\nFailed: [\"dmd\", \"-unittest\", \"-v\", \"-o-\", \"/tmp/tmp3_c2qah_.d\", \"-I/tmp\"]\n",
      "stdout": "",
      "timestamp": 1660164102
    },
    {
      "exit_code": 1,
      "program": "import std.typecons;\nimport std.math;\n/*\n\n    Given a positive integer n, return the count of the numbers of n-digit\n    positive integers that start or end with 1.\n    \n*/\nlong starts_one_ends(long n) \n{\n    long count = 0;\n    long max = pow(10, n);\n    for (long i = 1; i < max; i++) \n    {\n        if (i % 10 == 1) \n        {\n            count++;\n        }\n        if (i / 10 == 1) \n        {\n            count++;\n        }\n    }\n    return count;\n}\nunittest\n{\n    alias candidate = starts_one_ends;\n\n    assert(candidate(1L) == 1L);\n    assert(candidate(2L) == 18L);\n    assert(candidate(3L) == 180L);\n    assert(candidate(4L) == 1800L);\n    assert(candidate(5L) == 18000L);\n}\nvoid main(){}",
      "status": "Exception",
      "stderr": "core.exception.AssertError@/tmp/tmp78fmzgna.d(31): unittest failure\n----------------\n??:? _d_unittestp [0x427ea5]\n??:? void tmp78fmzgna.__unittest_L26_C1() [0x427af1]\n??:? void tmp78fmzgna.__modtest() [0x427c28]\n??:? int core.runtime.runModuleUnitTests().__foreachbody2(object.ModuleInfo*) [0x42bbcb]\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)).__lambda2(immutable(object.ModuleInfo*)) [0x42aa5e]\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))).__foreachbody2(ref rt.sections_elf_shared.DSO) [0x42fbf1]\n??:? int rt.sections_elf_shared.DSO.opApply(scope int delegate(ref rt.sections_elf_shared.DSO)) [0x4300a0]\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))) [0x42fb7d]\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)) [0x42aa35]\n??:? runModuleUnitTests [0x42b9a1]\n??:? void rt.dmain2._d_run_main(int, char**, extern (C) int function(char[][])*).runAll() [0x4282f4]\n??:? void rt.dmain2._d_r",
      "stdout": "",
      "timestamp": 1660164104
    },
    {
      "exit_code": 1,
      "program": "import std.typecons;\nimport std.math;\n/*\n\n    Given a positive integer n, return the count of the numbers of n-digit\n    positive integers that start or end with 1.\n    \n*/\nlong starts_one_ends(long n) \n{\n    long result = 0;\n    long start = 1;\n    long end = 1;\n    for (long i = 0; i < n; i++) {\n        start *= 10;\n        end *= 10;\n    }\n    start /= 10;\n    end -= 1;\n    result = end - start + 1;\n    return result;\n}\nunittest\n{\n    alias candidate = starts_one_ends;\n\n    assert(candidate(1L) == 1L);\n    assert(candidate(2L) == 18L);\n    assert(candidate(3L) == 180L);\n    assert(candidate(4L) == 1800L);\n    assert(candidate(5L) == 18000L);\n}\nvoid main(){}",
      "status": "Exception",
      "stderr": "core.exception.AssertError@/tmp/tmpnlgkerhj.d(27): unittest failure\n----------------\n??:? _d_unittestp [0x427dad]\n??:? void tmpnlgkerhj.__unittest_L23_C1() [0x427a90]\n??:? void tmpnlgkerhj.__modtest() [0x427b30]\n??:? int core.runtime.runModuleUnitTests().__foreachbody2(object.ModuleInfo*) [0x42bad3]\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)).__lambda2(immutable(object.ModuleInfo*)) [0x42a966]\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))).__foreachbody2(ref rt.sections_elf_shared.DSO) [0x42faf9]\n??:? int rt.sections_elf_shared.DSO.opApply(scope int delegate(ref rt.sections_elf_shared.DSO)) [0x42ffa8]\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))) [0x42fa85]\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)) [0x42a93d]\n??:? runModuleUnitTests [0x42b8a9]\n??:? void rt.dmain2._d_run_main(int, char**, extern (C) int function(char[][])*).runAll() [0x4281fc]\n??:? void rt.dmain2._d_r",
      "stdout": "",
      "timestamp": 1660164103
    },
    {
      "exit_code": 1,
      "program": "import std.typecons;\nimport std.math;\n/*\n\n    Given a positive integer n, return the count of the numbers of n-digit\n    positive integers that start or end with 1.\n    \n*/\nlong starts_one_ends(long n) \n{\n    long result = 0;\n    long start = 1;\n    long end = 1;\n    for (long i = 1; i < n; i++) {\n        start *= 10;\n        end *= 10;\n    }\n    result += start;\n    result += end;\n    result += (start - 1) * 9;\n    return result;\n}\nunittest\n{\n    alias candidate = starts_one_ends;\n\n    assert(candidate(1L) == 1L);\n    assert(candidate(2L) == 18L);\n    assert(candidate(3L) == 180L);\n    assert(candidate(4L) == 1800L);\n    assert(candidate(5L) == 18000L);\n}\nvoid main(){}",
      "status": "Exception",
      "stderr": "core.exception.AssertError@/tmp/tmpip5nivgf.d(27): unittest failure\n----------------\n??:? _d_unittestp [0x427dbd]\n??:? void tmpip5nivgf.__unittest_L23_C1() [0x427a9c]\n??:? void tmpip5nivgf.__modtest() [0x427b3c]\n??:? int core.runtime.runModuleUnitTests().__foreachbody2(object.ModuleInfo*) [0x42bae3]\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)).__lambda2(immutable(object.ModuleInfo*)) [0x42a976]\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))).__foreachbody2(ref rt.sections_elf_shared.DSO) [0x42fb09]\n??:? int rt.sections_elf_shared.DSO.opApply(scope int delegate(ref rt.sections_elf_shared.DSO)) [0x42ffb8]\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))) [0x42fa95]\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)) [0x42a94d]\n??:? runModuleUnitTests [0x42b8b9]\n??:? void rt.dmain2._d_run_main(int, char**, extern (C) int function(char[][])*).runAll() [0x42820c]\n??:? void rt.dmain2._d_r",
      "stdout": "",
      "timestamp": 1660164105
    },
    {
      "exit_code": 1,
      "program": "import std.typecons;\nimport std.math;\n/*\n\n    Given a positive integer n, return the count of the numbers of n-digit\n    positive integers that start or end with 1.\n    \n*/\nlong starts_one_ends(long n) \n{\n    long count = 0;\n    long min = pow(10, n - 1);\n    long max = pow(10, n);\n    for (long i = min; i < max; i++) {\n        string s = to!string(i);\n        if (s[0] == '1' || s[$ - 1] == '1') {\n            count++;\n        }\n    }\n    return count;\n}\nunittest\n{\n    alias candidate = starts_one_ends;\n\n    assert(candidate(1L) == 1L);\n    assert(candidate(2L) == 18L);\n    assert(candidate(3L) == 180L);\n    assert(candidate(4L) == 1800L);\n    assert(candidate(5L) == 18000L);\n}\nvoid main(){}",
      "status": "SyntaxError",
      "stderr": "/tmp/tmp_blkrtox.d(15): Error: template instance `to!string` template `to` is not defined, did you mean No?\nFailed: [\"dmd\", \"-unittest\", \"-v\", \"-o-\", \"/tmp/tmp_blkrtox.d\", \"-I/tmp\"]\n",
      "stdout": "",
      "timestamp": 1660164104
    },
    {
      "exit_code": 1,
      "program": "import std.typecons;\nimport std.math;\n/*\n\n    Given a positive integer n, return the count of the numbers of n-digit\n    positive integers that start or end with 1.\n    \n*/\nlong starts_one_ends(long n) \n{\n    long result = 0;\n    if (n == 1)\n        return 1;\n    else if (n == 2)\n        return 10;\n    else if (n == 3)\n        return 55;\n    else if (n == 4)\n        return 220;\n    else if (n == 5)\n        return 715;\n    else if (n == 6)\n        return 2002;\n    else if (n == 7)\n        return 5005;\n    else if (n == 8)\n        return 11440;\n    else if (n == 9)\n        return 24310;\n    else if (n == 10)\n        return 48620;\n    else if (n == 11)\n        return 92378;\n    else if (n == 12)\n        return 167960;\n    else if (n == 13)\n        return 293930;\n    else if (n == 14)\n        return 497420;\n    else if (n == 15)\n        return 817190;\n    else if (n == 16)\n        return 1307504;\n    else if (n == 17)\n        return 2042975;\n    else if (n == 18)\n        return 3124550;\n    else if (n == 19)\n        return 4686825;\n    else if (n == 20)\n        return 6863040;\n    else if (n == 21)\n        return 10015005;\n    else if (n == 22)\n        return 14307150;\n    else if (n == 23)\n        return 20058300;\n    else if (n == 24)\n        return 28171025;\n    else if (n == 25)\n        return 39679650;\n    else if (n == 26)\n        return 55679075;\n    else if (n == 27)\n        return 77261600;\n    else if (n == 28)\n        return 106700525;\n    else if (n == 29)\n        return 148104150;\n    else if (n == 30)\n        return 206253075;\n    else if (n == 31)\n        return 287330736;\n    else if (n == 32)\n        return\nunittest\n{\n    alias candidate = starts_one_ends;\n\n    assert(candidate(1L) == 1L);\n    assert(candidate(2L) == 18L);\n    assert(candidate(3L) == 180L);\n    assert(candidate(4L) == 1800L);\n    assert(candidate(5L) == 18000L);\n}\nvoid main(){}",
      "status": "SyntaxError",
      "stderr": "/tmp/tmpu7i9p7d4.d(76): Error: expression expected, not `unittest`\n/tmp/tmpu7i9p7d4.d(77): Error: found `{` when expecting `;` following `return` statement\nFailed: [\"dmd\", \"-unittest\", \"-v\", \"-o-\", \"/tmp/tmpu7i9p7d4.d\", \"-I/tmp\"]\n",
      "stdout": "",
      "timestamp": 1660164104
    },
    {
      "exit_code": 1,
      "program": "import std.typecons;\nimport std.math;\n/*\n\n    Given a positive integer n, return the count of the numbers of n-digit\n    positive integers that start or end with 1.\n    \n*/\nlong starts_one_ends(long n) \n{\n    long count = 0;\n    long start = 1;\n    long end = 1;\n    for (long i = 0; i < n; i++) {\n        start *= 10;\n        end = end * 10 + 1;\n    }\n    count = end - start;\n    return count;\n}\nunittest\n{\n    alias candidate = starts_one_ends;\n\n    assert(candidate(1L) == 1L);\n    assert(candidate(2L) == 18L);\n    assert(candidate(3L) == 180L);\n    assert(candidate(4L) == 1800L);\n    assert(candidate(5L) == 18000L);\n}\nvoid main(){}",
      "status": "Exception",
      "stderr": "core.exception.AssertError@/tmp/tmpdd5160w9.d(26): unittest failure\n----------------\n??:? _d_unittestp [0x427da5]\n??:? void tmpdd5160w9.__unittest_L21_C1() [0x427aa9]\n??:? void tmpdd5160w9.__modtest() [0x427b28]\n??:? int core.runtime.runModuleUnitTests().__foreachbody2(object.ModuleInfo*) [0x42bacb]\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)).__lambda2(immutable(object.ModuleInfo*)) [0x42a95e]\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))).__foreachbody2(ref rt.sections_elf_shared.DSO) [0x42faf1]\n??:? int rt.sections_elf_shared.DSO.opApply(scope int delegate(ref rt.sections_elf_shared.DSO)) [0x42ffa0]\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))) [0x42fa7d]\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)) [0x42a935]\n??:? runModuleUnitTests [0x42b8a1]\n??:? void rt.dmain2._d_run_main(int, char**, extern (C) int function(char[][])*).runAll() [0x4281f4]\n??:? void rt.dmain2._d_r",
      "stdout": "",
      "timestamp": 1660164105
    },
    {
      "exit_code": 1,
      "program": "import std.typecons;\nimport std.math;\n/*\n\n    Given a positive integer n, return the count of the numbers of n-digit\n    positive integers that start or end with 1.\n    \n*/\nlong starts_one_ends(long n) \n{\n    long result = 0;\n    long start = 1;\n    long end = 1;\n    for (long i = 1; i < n; i++) {\n        start *= 10;\n        end *= 10;\n    }\n    end += 1;\n    result = end - start;\n    return result;\n}\nunittest\n{\n    alias candidate = starts_one_ends;\n\n    assert(candidate(1L) == 1L);\n    assert(candidate(2L) == 18L);\n    assert(candidate(3L) == 180L);\n    assert(candidate(4L) == 1800L);\n    assert(candidate(5L) == 18000L);\n}\nvoid main(){}",
      "status": "Exception",
      "stderr": "core.exception.AssertError@/tmp/tmpfce4bb54.d(27): unittest failure\n----------------\n??:? _d_unittestp [0x427d9d]\n??:? void tmpfce4bb54.__unittest_L22_C1() [0x427aa1]\n??:? void tmpfce4bb54.__modtest() [0x427b20]\n??:? int core.runtime.runModuleUnitTests().__foreachbody2(object.ModuleInfo*) [0x42bac3]\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)).__lambda2(immutable(object.ModuleInfo*)) [0x42a956]\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))).__foreachbody2(ref rt.sections_elf_shared.DSO) [0x42fae9]\n??:? int rt.sections_elf_shared.DSO.opApply(scope int delegate(ref rt.sections_elf_shared.DSO)) [0x42ff98]\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))) [0x42fa75]\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)) [0x42a92d]\n??:? runModuleUnitTests [0x42b899]\n??:? void rt.dmain2._d_run_main(int, char**, extern (C) int function(char[][])*).runAll() [0x4281ec]\n??:? void rt.dmain2._d_r",
      "stdout": "",
      "timestamp": 1660164103
    },
    {
      "exit_code": 1,
      "program": "import std.typecons;\nimport std.math;\n/*\n\n    Given a positive integer n, return the count of the numbers of n-digit\n    positive integers that start or end with 1.\n    \n*/\nlong starts_one_ends(long n) \n{\n    long count = 0;\n    long start = 1;\n    long end = 1;\n    long i = 0;\n    long j = 0;\n    long k = 0;\n    long l = 0;\n    long m = 0;\n    long o = 0;\n    long p = 0;\n    long q = 0;\n    long r = 0;\n    long s = 0;\n    long t = 0;\n    long u = 0;\n    long v = 0;\n    long w = 0;\n    long x = 0;\n    long y = 0;\n    long z = 0;\n    long aa = 0;\n    long ab = 0;\n    long ac = 0;\n    long ad = 0;\n    long ae = 0;\n    long af = 0;\n    long ag = 0;\n    long ah = 0;\n    long ai = 0;\n    long aj = 0;\n    long ak = 0;\n    long al = 0;\n    long am = 0;\n    long an = 0;\n    long ao = 0;\n    long ap = 0;\n    long aq = 0;\n    long ar = 0;\n    long as = 0;\n    long at = 0;\n    long au = 0;\n    long av = 0;\n    long aw = 0;\n    long ax = 0;\n    long ay = 0;\n    long az = 0;\n    long ba = 0;\n    long bb = 0;\n    long bc = 0;\n    long bd = 0;\n    long be = 0;\n    long bf = 0;\n    long bg = 0;\n    long bh = 0;\n    long bi = 0;\n    long bj = 0;\n    long bk = 0;\n    long bl = 0;\n    long bm = 0;\n    long bn = 0;\n    long bo = 0;\n    long bp = 0;\n    long bq = 0;\n    long br = 0;\n    long bs = 0;\n    long bt = 0;\n    long bu = 0;\n    long bv = 0;\n    long bw = 0;\n    long bx =\nunittest\n{\n    alias candidate = starts_one_ends;\n\n    assert(candidate(1L) == 1L);\n    assert(candidate(2L) == 18L);\n    assert(candidate(3L) == 180L);\n    assert(candidate(4L) == 1800L);\n    assert(candidate(5L) == 18000L);\n}\nvoid main(){}",
      "status": "SyntaxError",
      "stderr": "/tmp/tmp3_c2qah_.d(81): Error: expression expected, not `unittest`\n/tmp/tmp3_c2qah_.d(82): Error: semicolon expected, not `{`\n/tmp/tmp3_c2qah_.d(91): Error: found `End of File` when expecting `}` following compound statement\nFailed: [\"dmd\", \"-unittest\", \"-v\", \"-o-\", \"/tmp/tmp3_c2qah_.d\", \"-I/tmp\"]\n",
      "stdout": "",
      "timestamp": 1660164102
    },
    {
      "exit_code": 1,
      "program": "import std.typecons;\nimport std.math;\n/*\n\n    Given a positive integer n, return the count of the numbers of n-digit\n    positive integers that start or end with 1.\n    \n*/\nlong starts_one_ends(long n) \n{\n    long res = 0;\n    if (n == 1) \n    {\n        res = 1;\n    }\n    else \n    {\n        res = (long)pow(10, n - 1) + 9 * (n - 1) * (long)pow(10, n - 2);\n    }\n    return res;\n}\nunittest\n{\n    alias candidate = starts_one_ends;\n\n    assert(candidate(1L) == 1L);\n    assert(candidate(2L) == 18L);\n    assert(candidate(3L) == 180L);\n    assert(candidate(4L) == 1800L);\n    assert(candidate(5L) == 18000L);\n}\nvoid main(){}",
      "status": "SyntaxError",
      "stderr": "/tmp/tmp406icvsd.d(18): Error: C style cast illegal, use `cast(long)pow(10, n - 1)`\n/tmp/tmp406icvsd.d(18): Error: C style cast illegal, use `cast(long)pow(10, n - 2)`\nFailed: [\"dmd\", \"-unittest\", \"-v\", \"-o-\", \"/tmp/tmp406icvsd.d\", \"-I/tmp\"]\n",
      "stdout": "",
      "timestamp": 1660164104
    },
    {
      "exit_code": 1,
      "program": "import std.typecons;\nimport std.math;\n/*\n\n    Given a positive integer n, return the count of the numbers of n-digit\n    positive integers that start or end with 1.\n    \n*/\nlong starts_one_ends(long n) \n{\n    if (n <= 1)\n        return 0;\n    else if (n == 2)\n        return 1;\n    else\n        return (long)pow(10, n - 1) + starts_one_ends(n - 1);\n}\nunittest\n{\n    alias candidate = starts_one_ends;\n\n    assert(candidate(1L) == 1L);\n    assert(candidate(2L) == 18L);\n    assert(candidate(3L) == 180L);\n    assert(candidate(4L) == 1800L);\n    assert(candidate(5L) == 18000L);\n}\nvoid main(){}",
      "status": "SyntaxError",
      "stderr": "/tmp/tmp9k6azl2o.d(16): Error: C style cast illegal, use `cast(long)pow(10, n - 1)`\nFailed: [\"dmd\", \"-unittest\", \"-v\", \"-o-\", \"/tmp/tmp9k6azl2o.d\", \"-I/tmp\"]\n",
      "stdout": "",
      "timestamp": 1660164104
    },
    {
      "exit_code": 1,
      "program": "import std.typecons;\nimport std.math;\n/*\n\n    Given a positive integer n, return the count of the numbers of n-digit\n    positive integers that start or end with 1.\n    \n*/\nlong starts_one_ends(long n) \n{\n    long result = 0;\n    long max = pow(10, n);\n    for (long i = 1; i < max; i++) {\n        if (i % 10 == 1) {\n            result++;\n        }\n    }\n    return result;\n}\nunittest\n{\n    alias candidate = starts_one_ends;\n\n    assert(candidate(1L) == 1L);\n    assert(candidate(2L) == 18L);\n    assert(candidate(3L) == 180L);\n    assert(candidate(4L) == 1800L);\n    assert(candidate(5L) == 18000L);\n}\nvoid main(){}",
      "status": "Exception",
      "stderr": "core.exception.AssertError@/tmp/tmpk91wrofd.d(25): unittest failure\n----------------\n??:? _d_unittestp [0x427e95]\n??:? void tmpk91wrofd.__unittest_L20_C1() [0x427add]\n??:? void tmpk91wrofd.__modtest() [0x427c14]\n??:? int core.runtime.runModuleUnitTests().__foreachbody2(object.ModuleInfo*) [0x42bbbb]\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)).__lambda2(immutable(object.ModuleInfo*)) [0x42aa4e]\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))).__foreachbody2(ref rt.sections_elf_shared.DSO) [0x42fbe1]\n??:? int rt.sections_elf_shared.DSO.opApply(scope int delegate(ref rt.sections_elf_shared.DSO)) [0x430090]\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))) [0x42fb6d]\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)) [0x42aa25]\n??:? runModuleUnitTests [0x42b991]\n??:? void rt.dmain2._d_run_main(int, char**, extern (C) int function(char[][])*).runAll() [0x4282e4]\n??:? void rt.dmain2._d_r",
      "stdout": "",
      "timestamp": 1660164104
    },
    {
      "exit_code": 1,
      "program": "import std.typecons;\nimport std.math;\n/*\n\n    Given a positive integer n, return the count of the numbers of n-digit\n    positive integers that start or end with 1.\n    \n*/\nlong starts_one_ends(long n) \n{\n    long result = 0;\n    long max = pow(10, n);\n    long min = pow(10, n - 1);\n    foreach(i; min .. max) {\n        if(i % 10 == 1 || i / 10 == 1) {\n            result++;\n        }\n    }\n    return result;\n}\nunittest\n{\n    alias candidate = starts_one_ends;\n\n    assert(candidate(1L) == 1L);\n    assert(candidate(2L) == 18L);\n    assert(candidate(3L) == 180L);\n    assert(candidate(4L) == 1800L);\n    assert(candidate(5L) == 18000L);\n}\nvoid main(){}",
      "status": "Exception",
      "stderr": "core.exception.AssertError@/tmp/tmps3f_dvyx.d(27): unittest failure\n----------------\n??:? _d_unittestp [0x427ecd]\n??:? void tmps3f_dvyx.__unittest_L21_C1() [0x427b3c]\n??:? void tmps3f_dvyx.__modtest() [0x427c50]\n??:? int core.runtime.runModuleUnitTests().__foreachbody2(object.ModuleInfo*) [0x42bbf3]\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)).__lambda2(immutable(object.ModuleInfo*)) [0x42aa86]\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))).__foreachbody2(ref rt.sections_elf_shared.DSO) [0x42fc19]\n??:? int rt.sections_elf_shared.DSO.opApply(scope int delegate(ref rt.sections_elf_shared.DSO)) [0x4300c8]\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))) [0x42fba5]\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)) [0x42aa5d]\n??:? runModuleUnitTests [0x42b9c9]\n??:? void rt.dmain2._d_run_main(int, char**, extern (C) int function(char[][])*).runAll() [0x42831c]\n??:? void rt.dmain2._d_run_main(int, char**, extern (C) int function(char[][])*).tryExec(scope void delegate",
      "stdout": "",
      "timestamp": 1660164105
    },
    {
      "exit_code": 1,
      "program": "import std.typecons;\nimport std.math;\n/*\n\n    Given a positive integer n, return the count of the numbers of n-digit\n    positive integers that start or end with 1.\n    \n*/\nlong starts_one_ends(long n) \n{\n    long count = 0;\n    long start = 1;\n    long end = 1;\n    long i = 0;\n    long j = 0;\n    long k = 0;\n    long l = 0;\n    long m = 0;\n    long o = 0;\n    long p = 0;\n    long q = 0;\n    long r = 0;\n    long s = 0;\n    long t = 0;\n    long u = 0;\n    long v = 0;\n    long w = 0;\n    long x = 0;\n    long y = 0;\n    long z = 0;\n    long aa = 0;\n    long ab = 0;\n    long ac = 0;\n    long ad = 0;\n    long ae = 0;\n    long af = 0;\n    long ag = 0;\n    long ah = 0;\n    long ai = 0;\n    long aj = 0;\n    long ak = 0;\n    long al = 0;\n    long am = 0;\n    long an = 0;\n    long ao = 0;\n    long ap = 0;\n    long aq = 0;\n    long ar = 0;\n    long as = 0;\n    long at = 0;\n    long au = 0;\n    long av = 0;\n    long aw = 0;\n    long ax = 0;\n    long ay = 0;\n    long az = 0;\n    long ba = 0;\n    long bb = 0;\n    long bc = 0;\n    long bd = 0;\n    long be = 0;\n    long bf = 0;\n    long bg = 0;\n    long bh = 0;\n    long bi = 0;\n    long bj = 0;\n    long bk = 0;\n    long bl = 0;\n    long bm = 0;\n    long bn = 0;\n    long bo = 0;\n    long bp = 0;\n    long bq = 0;\n    long br = 0;\n    long bs = 0;\n    long bt = 0;\n    long bu = 0;\n    long bv = 0;\n    long bw = 0;\n    long bx =\nunittest\n{\n    alias candidate = starts_one_ends;\n\n    assert(candidate(1L) == 1L);\n    assert(candidate(2L) == 18L);\n    assert(candidate(3L) == 180L);\n    assert(candidate(4L) == 1800L);\n    assert(candidate(5L) == 18000L);\n}\nvoid main(){}",
      "status": "SyntaxError",
      "stderr": "/tmp/tmp3_c2qah_.d(81): Error: expression expected, not `unittest`\n/tmp/tmp3_c2qah_.d(82): Error: semicolon expected, not `{`\n/tmp/tmp3_c2qah_.d(91): Error: found `End of File` when expecting `}` following compound statement\nFailed: [\"dmd\", \"-unittest\", \"-v\", \"-o-\", \"/tmp/tmp3_c2qah_.d\", \"-I/tmp\"]\n",
      "stdout": "",
      "timestamp": 1660164102
    },
    {
      "exit_code": 1,
      "program": "import std.typecons;\nimport std.math;\n/*\n\n    Given a positive integer n, return the count of the numbers of n-digit\n    positive integers that start or end with 1.\n    \n*/\nlong starts_one_ends(long n) \n{\n    long count = 0;\n    long start = 1;\n    long end = 1;\n    for (long i = 0; i < n; i++) {\n        start *= 10;\n        end *= 10;\n    }\n    end += 1;\n    for (long i = start; i < end; i++) {\n        if (i % 10 == 1 || i / 10 == 1) {\n            count++;\n        }\n    }\n    return count;\n}\nunittest\n{\n    alias candidate = starts_one_ends;\n\n    assert(candidate(1L) == 1L);\n    assert(candidate(2L) == 18L);\n    assert(candidate(3L) == 180L);\n    assert(candidate(4L) == 1800L);\n    assert(candidate(5L) == 18000L);\n}\nvoid main(){}",
      "status": "Exception",
      "stderr": "core.exception.AssertError@/tmp/tmpbp6ss6i1.d(31): unittest failure\n----------------\n??:? _d_unittestp [0x427de5]\n??:? void tmpbp6ss6i1.__unittest_L26_C1() [0x427ae5]\n??:? void tmpbp6ss6i1.__modtest() [0x427b64]\n??:? int core.runtime.runModuleUnitTests().__foreachbody2(object.ModuleInfo*) [0x42bb0b]\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)).__lambda2(immutable(object.ModuleInfo*)) [0x42a99e]\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))).__foreachbody2(ref rt.sections_elf_shared.DSO) [0x42fb31]\n??:? int rt.sections_elf_shared.DSO.opApply(scope int delegate(ref rt.sections_elf_shared.DSO)) [0x42ffe0]\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))) [0x42fabd]\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)) [0x42a975]\n??:? runModuleUnitTests [0x42b8e1]\n??:? void rt.dmain2._d_run_main(int, char**, extern (C) int function(char[][])*).runAll() [0x428234]\n??:? void rt.dmain2._d_r",
      "stdout": "",
      "timestamp": 1660164104
    },
    {
      "exit_code": 1,
      "program": "import std.typecons;\nimport std.math;\n/*\n\n    Given a positive integer n, return the count of the numbers of n-digit\n    positive integers that start or end with 1.\n    \n*/\nlong starts_one_ends(long n) \n{\n    if (n == 1) \n        return 2;\n    if (n == 2) \n        return 4;\n    return starts_one_ends(n - 1) + starts_one_ends(n - 2);\n}\nunittest\n{\n    alias candidate = starts_one_ends;\n\n    assert(candidate(1L) == 1L);\n    assert(candidate(2L) == 18L);\n    assert(candidate(3L) == 180L);\n    assert(candidate(4L) == 1800L);\n    assert(candidate(5L) == 18000L);\n}\nvoid main(){}",
      "status": "Exception",
      "stderr": "core.exception.AssertError@/tmp/tmpb5q74ioq.d(21): unittest failure\n----------------\n??:? _d_unittestp [0x427d9d]\n??:? void tmpb5q74ioq.__unittest_L17_C1() [0x427a7c]\n??:? void tmpb5q74ioq.__modtest() [0x427b1c]\n??:? int core.runtime.runModuleUnitTests().__foreachbody2(object.ModuleInfo*) [0x42bac3]\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)).__lambda2(immutable(object.ModuleInfo*)) [0x42a956]\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))).__foreachbody2(ref rt.sections_elf_shared.DSO) [0x42fae9]\n??:? int rt.sections_elf_shared.DSO.opApply(scope int delegate(ref rt.sections_elf_shared.DSO)) [0x42ff98]\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))) [0x42fa75]\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)) [0x42a92d]\n??:? runModuleUnitTests [0x42b899]\n??:? void rt.dmain2._d_run_main(int, char**, extern (C) int function(char[][])*).runAll() [0x4281ec]\n??:? void rt.dmain2._d_r",
      "stdout": "",
      "timestamp": 1660164105
    },
    {
      "exit_code": 1,
      "program": "import std.typecons;\nimport std.math;\n/*\n\n    Given a positive integer n, return the count of the numbers of n-digit\n    positive integers that start or end with 1.\n    \n*/\nlong starts_one_ends(long n) \n{\n    long count = 0;\n    long start = 1;\n    long end = 1;\n    for (long i = 1; i < n; i++) \n    {\n        start *= 10;\n        end *= 10;\n    }\n    count += start;\n    count += end;\n    count += (start - 1) * 9;\n    return count;\n}\nunittest\n{\n    alias candidate = starts_one_ends;\n\n    assert(candidate(1L) == 1L);\n    assert(candidate(2L) == 18L);\n    assert(candidate(3L) == 180L);\n    assert(candidate(4L) == 1800L);\n    assert(candidate(5L) == 18000L);\n}\nvoid main(){}",
      "status": "Exception",
      "stderr": "core.exception.AssertError@/tmp/tmpr5dbfcpv.d(28): unittest failure\n----------------\n??:? _d_unittestp [0x427dbd]\n??:? void tmpr5dbfcpv.__unittest_L24_C1() [0x427a9c]\n??:? void tmpr5dbfcpv.__modtest() [0x427b3c]\n??:? int core.runtime.runModuleUnitTests().__foreachbody2(object.ModuleInfo*) [0x42bae3]\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)).__lambda2(immutable(object.ModuleInfo*)) [0x42a976]\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))).__foreachbody2(ref rt.sections_elf_shared.DSO) [0x42fb09]\n??:? int rt.sections_elf_shared.DSO.opApply(scope int delegate(ref rt.sections_elf_shared.DSO)) [0x42ffb8]\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))) [0x42fa95]\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)) [0x42a94d]\n??:? runModuleUnitTests [0x42b8b9]\n??:? void rt.dmain2._d_run_main(int, char**, extern (C) int function(char[][])*).runAll() [0x42820c]\n??:? void rt.dmain2._d_r",
      "stdout": "",
      "timestamp": 1660164105
    },
    {
      "exit_code": 1,
      "program": "import std.typecons;\nimport std.math;\n/*\n\n    Given a positive integer n, return the count of the numbers of n-digit\n    positive integers that start or end with 1.\n    \n*/\nlong starts_one_ends(long n) \n{\n    long result = 0;\n    if (n == 1)\n        return 1;\n    else if (n == 2)\n        return 10;\n    else if (n == 3)\n        return 100;\n    else if (n == 4)\n        return 1000;\n    else if (n == 5)\n        return 10000;\n    else if (n == 6)\n        return 100000;\n    else if (n == 7)\n        return 1000000;\n    else if (n == 8)\n        return 10000000;\n    else if (n == 9)\n        return 100000000;\n    else if (n == 10)\n        return 1000000000;\n    else if (n == 11)\n        return 10000000000;\n    else if (n == 12)\n        return 100000000000;\n    else if (n == 13)\n        return 1000000000000;\n    else if (n == 14)\n        return 10000000000000;\n    else if (n == 15)\n        return 100000000000000;\n    else if (n == 16)\n        return 1000000000000000;\n    else if (n == 17)\n        return 10000000000000000;\n    else if (n == 18)\n        return 100000000000000000;\n    else if (n == 19)\n        return 1000000000000000000;\n    else if (n == 20)\n        return 10000000000000000000;\n    else if (n == 21)\n        return 100000000000000000000;\n    else if (n == 22)\n        return 1000000000000000000000;\n    else if (n == 23)\n        return 10000000000000000000000;\n    else if (n == 24)\n        return 100000000000000000000000;\n    else if (n == 25)\n        return 1000000000000000000000000;\n    else if (n == 26)\n        return 10000000000000000000000000;\n    else if (n == 27)\n        return 100000000000000000000000000;\n    else if (n == 28)\n        return 1000000000000000000000000000;\n    else if (n == 29)\n        return 10000000000000000000000000000;\n    else if (n == 30)\n        return 100000000000000000000000000000;\n    else if (n == 31)\n        return 1000000000000000000000000000000;\n    else if (n == 32)\n        return 10000000000000000000000000000000;\n    else\nunittest\n{\n    alias candidate = starts_one_ends;\n\n    assert(candidate(1L) == 1L);\n    assert(candidate(2L) == 18L);\n    assert(candidate(3L) == 180L);\n    assert(candidate(4L) == 1800L);\n    assert(candidate(5L) == 18000L);\n}\nvoid main(){}",
      "status": "SyntaxError",
      "stderr": "/tmp/tmpf9jggamg.d(51): Error: signed integer overflow\n/tmp/tmpf9jggamg.d(53): Error: integer overflow\n/tmp/tmpf9jggamg.d(55): Error: integer overflow\n/tmp/tmpf9jggamg.d(57): Error: integer overflow\n/tmp/tmpf9jggamg.d(59): Error: integer overflow\n/tmp/tmpf9jggamg.d(61): Error: integer overflow\n/tmp/tmpf9jggamg.d(63): Error: integer overflow\n/tmp/tmpf9jggamg.d(65): Error: integer overflow\n/tmp/tmpf9jggamg.d(67): Error: integer overflow\n/tmp/tmpf9jggamg.d(69): Error: integer overflow\n/tmp/tmpf9jggamg.d(71): Error: integer overflow\n/tmp/tmpf9jggamg.d(73): Error: integer overflow\n/tmp/tmpf9jggamg.d(75): Error: integer overflow\n/tmp/tmpf9jggamg.d(77): Error: found `unittest` instead of statement\nFailed: [\"dmd\", \"-unittest\", \"-v\", \"-o-\", \"/tmp/tmpf9jggamg.d\", \"-I/tmp\"]\n",
      "stdout": "",
      "timestamp": 1660164103
    },
    {
      "exit_code": 1,
      "program": "import std.typecons;\nimport std.math;\n/*\n\n    Given a positive integer n, return the count of the numbers of n-digit\n    positive integers that start or end with 1.\n    \n*/\nlong starts_one_ends(long n) \n{\n    long count = 0;\n    long i = 1;\n    long j = 1;\n    long k = 1;\n    long l = 1;\n    long m = 1;\n    long o = 1;\n    long p = 1;\n    long q = 1;\n    long r = 1;\n    long s = 1;\n    long t = 1;\n    long u = 1;\n    long v = 1;\n    long w = 1;\n    long x = 1;\n    long y = 1;\n    long z = 1;\n    long aa = 1;\n    long ab = 1;\n    long ac = 1;\n    long ad = 1;\n    long ae = 1;\n    long af = 1;\n    long ag = 1;\n    long ah = 1;\n    long ai = 1;\n    long aj = 1;\n    long ak = 1;\n    long al = 1;\n    long am = 1;\n    long an = 1;\n    long ao = 1;\n    long ap = 1;\n    long aq = 1;\n    long ar = 1;\n    long as = 1;\n    long at = 1;\n    long au = 1;\n    long av = 1;\n    long aw = 1;\n    long ax = 1;\n    long ay = 1;\n    long az = 1;\n    long ba = 1;\n    long bb = 1;\n    long bc = 1;\n    long bd = 1;\n    long be = 1;\n    long bf = 1;\n    long bg = 1;\n    long bh = 1;\n    long bi = 1;\n    long bj = 1;\n    long bk = 1;\n    long bl = 1;\n    long bm = 1;\n    long bn = 1;\n    long bo = 1;\n    long bp = 1;\n    long bq = 1;\n    long br = 1;\n    long bs = 1;\n    long bt = 1;\n    long bu = 1;\n    long bv = 1;\n    long bw = 1;\n    long bx = 1;\n    long by = 1;\n    long bz\nunittest\n{\n    alias candidate = starts_one_ends;\n\n    assert(candidate(1L) == 1L);\n    assert(candidate(2L) == 18L);\n    assert(candidate(3L) == 180L);\n    assert(candidate(4L) == 1800L);\n    assert(candidate(5L) == 18000L);\n}\nvoid main(){}",
      "status": "SyntaxError",
      "stderr": "/tmp/tmp34yj1fu9.d(81): Error: semicolon expected, not `unittest`\n/tmp/tmp34yj1fu9.d(81): Error: found `unittest` instead of statement\nFailed: [\"dmd\", \"-unittest\", \"-v\", \"-o-\", \"/tmp/tmp34yj1fu9.d\", \"-I/tmp\"]\n",
      "stdout": "",
      "timestamp": 1660164104
    },
    {
      "exit_code": 1,
      "program": "import std.typecons;\nimport std.math;\n/*\n\n    Given a positive integer n, return the count of the numbers of n-digit\n    positive integers that start or end with 1.\n    \n*/\nlong starts_one_ends(long n) \n{\n    long result = 0;\n    long i = 1;\n    while (i <= n) \n    {\n        result += pow(10, i - 1);\n        i++;\n    }\n    return result;\n}\nunittest\n{\n    alias candidate = starts_one_ends;\n\n    assert(candidate(1L) == 1L);\n    assert(candidate(2L) == 18L);\n    assert(candidate(3L) == 180L);\n    assert(candidate(4L) == 1800L);\n    assert(candidate(5L) == 18000L);\n}\nvoid main(){}",
      "status": "Exception",
      "stderr": "core.exception.AssertError@/tmp/tmpq3sieyro.d(25): unittest failure\n----------------\n??:? _d_unittestp [0x427e85]\n??:? void tmpq3sieyro.__unittest_L20_C1() [0x427ad1]\n??:? void tmpq3sieyro.__modtest() [0x427c08]\n??:? int core.runtime.runModuleUnitTests().__foreachbody2(object.ModuleInfo*) [0x42bbab]\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)).__lambda2(immutable(object.ModuleInfo*)) [0x42aa3e]\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))).__foreachbody2(ref rt.sections_elf_shared.DSO) [0x42fbd1]\n??:? int rt.sections_elf_shared.DSO.opApply(scope int delegate(ref rt.sections_elf_shared.DSO)) [0x430080]\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))) [0x42fb5d]\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)) [0x42aa15]\n??:? runModuleUnitTests [0x42b981]\n??:? void rt.dmain2._d_run_main(int, char**, extern (C) int function(char[][])*).runAll() [0x4282d4]\n??:? void rt.dmain2._d_r",
      "stdout": "",
      "timestamp": 1660164105
    },
    {
      "exit_code": 1,
      "program": "import std.typecons;\nimport std.math;\n/*\n\n    Given a positive integer n, return the count of the numbers of n-digit\n    positive integers that start or end with 1.\n    \n*/\nlong starts_one_ends(long n) \n{\n    long result = 0;\n    long start = 1;\n    long end = 1;\n    for (long i = 1; i < n; i++) {\n        start *= 10;\n        end *= 10;\n    }\n    result += start;\n    result += end;\n    result += (start - 1) * (n - 1);\n    return result;\n}\nunittest\n{\n    alias candidate = starts_one_ends;\n\n    assert(candidate(1L) == 1L);\n    assert(candidate(2L) == 18L);\n    assert(candidate(3L) == 180L);\n    assert(candidate(4L) == 1800L);\n    assert(candidate(5L) == 18000L);\n}\nvoid main(){}",
      "status": "Exception",
      "stderr": "core.exception.AssertError@/tmp/tmpmqihdxwy.d(27): unittest failure\n----------------\n??:? _d_unittestp [0x427dc5]\n??:? void tmpmqihdxwy.__unittest_L23_C1() [0x427aa4]\n??:? void tmpmqihdxwy.__modtest() [0x427b44]\n??:? int core.runtime.runModuleUnitTests().__foreachbody2(object.ModuleInfo*) [0x42baeb]\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)).__lambda2(immutable(object.ModuleInfo*)) [0x42a97e]\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))).__foreachbody2(ref rt.sections_elf_shared.DSO) [0x42fb11]\n??:? int rt.sections_elf_shared.DSO.opApply(scope int delegate(ref rt.sections_elf_shared.DSO)) [0x42ffc0]\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))) [0x42fa9d]\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)) [0x42a955]\n??:? runModuleUnitTests [0x42b8c1]\n??:? void rt.dmain2._d_run_main(int, char**, extern (C) int function(char[][])*).runAll() [0x428214]\n??:? void rt.dmain2._d_r",
      "stdout": "",
      "timestamp": 1660164104
    },
    {
      "exit_code": 1,
      "program": "import std.typecons;\nimport std.math;\n/*\n\n    Given a positive integer n, return the count of the numbers of n-digit\n    positive integers that start or end with 1.\n    \n*/\nlong starts_one_ends(long n) \n{\n    long count = 0;\n    long start = 1;\n    long end = 1;\n    long i = 0;\n    long j = 0;\n    long k = 0;\n    long l = 0;\n    long m = 0;\n    long o = 0;\n    long p = 0;\n    long q = 0;\n    long r = 0;\n    long s = 0;\n    long t = 0;\n    long u = 0;\n    long v = 0;\n    long w = 0;\n    long x = 0;\n    long y = 0;\n    long z = 0;\n    long aa = 0;\n    long ab = 0;\n    long ac = 0;\n    long ad = 0;\n    long ae = 0;\n    long af = 0;\n    long ag = 0;\n    long ah = 0;\n    long ai = 0;\n    long aj = 0;\n    long ak = 0;\n    long al = 0;\n    long am = 0;\n    long an = 0;\n    long ao = 0;\n    long ap = 0;\n    long aq = 0;\n    long ar = 0;\n    long as = 0;\n    long at = 0;\n    long au = 0;\n    long av = 0;\n    long aw = 0;\n    long ax = 0;\n    long ay = 0;\n    long az = 0;\n    long ba = 0;\n    long bb = 0;\n    long bc = 0;\n    long bd = 0;\n    long be = 0;\n    long bf = 0;\n    long bg = 0;\n    long bh = 0;\n    long bi = 0;\n    long bj = 0;\n    long bk = 0;\n    long bl = 0;\n    long bm = 0;\n    long bn = 0;\n    long bo = 0;\n    long bp = 0;\n    long bq = 0;\n    long br = 0;\n    long bs = 0;\n    long bt = 0;\n    long bu = 0;\n    long bv = 0;\n    long bw = 0;\n    long bx =\nunittest\n{\n    alias candidate = starts_one_ends;\n\n    assert(candidate(1L) == 1L);\n    assert(candidate(2L) == 18L);\n    assert(candidate(3L) == 180L);\n    assert(candidate(4L) == 1800L);\n    assert(candidate(5L) == 18000L);\n}\nvoid main(){}",
      "status": "SyntaxError",
      "stderr": "/tmp/tmp3_c2qah_.d(81): Error: expression expected, not `unittest`\n/tmp/tmp3_c2qah_.d(82): Error: semicolon expected, not `{`\n/tmp/tmp3_c2qah_.d(91): Error: found `End of File` when expecting `}` following compound statement\nFailed: [\"dmd\", \"-unittest\", \"-v\", \"-o-\", \"/tmp/tmp3_c2qah_.d\", \"-I/tmp\"]\n",
      "stdout": "",
      "timestamp": 1660164102
    },
    {
      "exit_code": 1,
      "program": "import std.typecons;\nimport std.math;\n/*\n\n    Given a positive integer n, return the count of the numbers of n-digit\n    positive integers that start or end with 1.\n    \n*/\nlong starts_one_ends(long n) \n{\n    long count = 0;\n    for (long i = 1; i <= n; i++) {\n        count += pow(10, i - 1);\n    }\n    return count;\n}\nunittest\n{\n    alias candidate = starts_one_ends;\n\n    assert(candidate(1L) == 1L);\n    assert(candidate(2L) == 18L);\n    assert(candidate(3L) == 180L);\n    assert(candidate(4L) == 1800L);\n    assert(candidate(5L) == 18000L);\n}\nvoid main(){}",
      "status": "Exception",
      "stderr": "core.exception.AssertError@/tmp/tmpw6xbrbyu.d(22): unittest failure\n----------------\n??:? _d_unittestp [0x427e85]\n??:? void tmpw6xbrbyu.__unittest_L17_C1() [0x427ad1]\n??:? void tmpw6xbrbyu.__modtest() [0x427c08]\n??:? int core.runtime.runModuleUnitTests().__foreachbody2(object.ModuleInfo*) [0x42bbab]\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)).__lambda2(immutable(object.ModuleInfo*)) [0x42aa3e]\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))).__foreachbody2(ref rt.sections_elf_shared.DSO) [0x42fbd1]\n??:? int rt.sections_elf_shared.DSO.opApply(scope int delegate(ref rt.sections_elf_shared.DSO)) [0x430080]\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))) [0x42fb5d]\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)) [0x42aa15]\n??:? runModuleUnitTests [0x42b981]\n??:? void rt.dmain2._d_run_main(int, char**, extern (C) int function(char[][])*).runAll() [0x4282d4]\n??:? void rt.dmain2._d_r",
      "stdout": "",
      "timestamp": 1660164105
    },
    {
      "exit_code": 1,
      "program": "import std.typecons;\nimport std.math;\n/*\n\n    Given a positive integer n, return the count of the numbers of n-digit\n    positive integers that start or end with 1.\n    \n*/\nlong starts_one_ends(long n) \n{\n    long result = 0;\n    long limit = pow(10, n);\n    foreach(i; 1 .. limit)\n    {\n        if(i % 10 == 1)\n            result++;\n        if(i / 10 == 1)\n            result++;\n    }\n    return result;\n}\nunittest\n{\n    alias candidate = starts_one_ends;\n\n    assert(candidate(1L) == 1L);\n    assert(candidate(2L) == 18L);\n    assert(candidate(3L) == 180L);\n    assert(candidate(4L) == 1800L);\n    assert(candidate(5L) == 18000L);\n}\nvoid main(){}",
      "status": "Exception",
      "stderr": "core.exception.AssertError@/tmp/tmpf1mi78et.d(27): unittest failure\n----------------\n??:? _d_unittestp [0x427eb5]\n??:? void tmpf1mi78et.__unittest_L22_C1() [0x427b01]\n??:? void tmpf1mi78et.__modtest() [0x427c38]\n??:? int core.runtime.runModuleUnitTests().__foreachbody2(object.ModuleInfo*) [0x42bbdb]\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)).__lambda2(immutable(object.ModuleInfo*)) [0x42aa6e]\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))).__foreachbody2(ref rt.sections_elf_shared.DSO) [0x42fc01]\n??:? int rt.sections_elf_shared.DSO.opApply(scope int delegate(ref rt.sections_elf_shared.DSO)) [0x4300b0]\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))) [0x42fb8d]\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)) [0x42aa45]\n??:? runModuleUnitTests [0x42b9b1]\n??:? void rt.dmain2._d_run_main(int, char**, extern (C) int function(char[][])*).runAll() [0x428304]\n??:? void rt.dmain2._d_r",
      "stdout": "",
      "timestamp": 1660164105
    },
    {
      "exit_code": 1,
      "program": "import std.typecons;\nimport std.math;\n/*\n\n    Given a positive integer n, return the count of the numbers of n-digit\n    positive integers that start or end with 1.\n    \n*/\nlong starts_one_ends(long n) \n{\n    long result = 0;\n    long start = 1;\n    long end = 1;\n    for (long i = 1; i < n; i++) {\n        start *= 10;\n        end *= 10;\n    }\n    result += start;\n    result += end;\n    result += (start - 1) * (n - 1);\n    return result;\n}\nunittest\n{\n    alias candidate = starts_one_ends;\n\n    assert(candidate(1L) == 1L);\n    assert(candidate(2L) == 18L);\n    assert(candidate(3L) == 180L);\n    assert(candidate(4L) == 1800L);\n    assert(candidate(5L) == 18000L);\n}\nvoid main(){}",
      "status": "Exception",
      "stderr": "core.exception.AssertError@/tmp/tmpmqihdxwy.d(27): unittest failure\n----------------\n??:? _d_unittestp [0x427dc5]\n??:? void tmpmqihdxwy.__unittest_L23_C1() [0x427aa4]\n??:? void tmpmqihdxwy.__modtest() [0x427b44]\n??:? int core.runtime.runModuleUnitTests().__foreachbody2(object.ModuleInfo*) [0x42baeb]\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)).__lambda2(immutable(object.ModuleInfo*)) [0x42a97e]\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))).__foreachbody2(ref rt.sections_elf_shared.DSO) [0x42fb11]\n??:? int rt.sections_elf_shared.DSO.opApply(scope int delegate(ref rt.sections_elf_shared.DSO)) [0x42ffc0]\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))) [0x42fa9d]\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)) [0x42a955]\n??:? runModuleUnitTests [0x42b8c1]\n??:? void rt.dmain2._d_run_main(int, char**, extern (C) int function(char[][])*).runAll() [0x428214]\n??:? void rt.dmain2._d_r",
      "stdout": "",
      "timestamp": 1660164104
    },
    {
      "exit_code": 1,
      "program": "import std.typecons;\nimport std.math;\n/*\n\n    Given a positive integer n, return the count of the numbers of n-digit\n    positive integers that start or end with 1.\n    \n*/\nlong starts_one_ends(long n) \n{\n    if (n == 1) return 1;\n    if (n == 2) return 2;\n    if (n == 3) return 4;\n    if (n == 4) return 8;\n    if (n == 5) return 16;\n    if (n == 6) return 32;\n    if (n == 7) return 64;\n    if (n == 8) return 128;\n    if (n == 9) return 256;\n    if (n == 10) return 512;\n    if (n == 11) return 1024;\n    if (n == 12) return 2048;\n    if (n == 13) return 4096;\n    if (n == 14) return 8192;\n    if (n == 15) return 16384;\n    if (n == 16) return 32768;\n    if (n == 17) return 65536;\n    if (n == 18) return 131072;\n    if (n == 19) return 262144;\n    if (n == 20) return 524288;\n    if (n == 21) return 1048576;\n    if (n == 22) return 2097152;\n    if (n == 23) return 4194304;\n    if (n == 24) return 8388608;\n    if (n == 25) return 16777216;\n    if (n == 26) return 33554432;\n    if (n == 27) return 67108864;\n    if (n == 28) return 134217728;\n    if (n == 29) return 268435456;\n    if (n == 30) return 536870912;\n    if (n == 31) return 1073741824;\n    if (n == 32) return 2147483648;\n    if (n == 33) return 4294967296;\n    if (n == 34) return 8589934592;\n    if (n == 35) return 17179869184;\n    if (n == 36) return 34359738368;\n    if (n == 37) return 68719476736;\n    if (n == 38) return 137438953472;\n    if (n == 39) return 274877906944;\n    if (n == 40) return\nunittest\n{\n    alias candidate = starts_one_ends;\n\n    assert(candidate(1L) == 1L);\n    assert(candidate(2L) == 18L);\n    assert(candidate(3L) == 180L);\n    assert(candidate(4L) == 1800L);\n    assert(candidate(5L) == 18000L);\n}\nvoid main(){}",
      "status": "SyntaxError",
      "stderr": "/tmp/tmp8fsznxts.d(51): Error: expression expected, not `unittest`\n/tmp/tmp8fsznxts.d(52): Error: found `{` when expecting `;` following `return` statement\nFailed: [\"dmd\", \"-unittest\", \"-v\", \"-o-\", \"/tmp/tmp8fsznxts.d\", \"-I/tmp\"]\n",
      "stdout": "",
      "timestamp": 1660164103
    },
    {
      "exit_code": 1,
      "program": "import std.typecons;\nimport std.math;\n/*\n\n    Given a positive integer n, return the count of the numbers of n-digit\n    positive integers that start or end with 1.\n    \n*/\nlong starts_one_ends(long n) \n{\n    long result = 0;\n    if (n == 1)\n        return 1;\n    else if (n == 2)\n        return 10;\n    else\n    {\n        result = starts_one_ends(n - 1) + starts_one_ends(n - 2);\n        return result;\n    }\n}\nunittest\n{\n    alias candidate = starts_one_ends;\n\n    assert(candidate(1L) == 1L);\n    assert(candidate(2L) == 18L);\n    assert(candidate(3L) == 180L);\n    assert(candidate(4L) == 1800L);\n    assert(candidate(5L) == 18000L);\n}\nvoid main(){}",
      "status": "Exception",
      "stderr": "core.exception.AssertError@/tmp/tmporr6vw0j.d(27): unittest failure\n----------------\n??:? _d_unittestp [0x427d9d]\n??:? void tmporr6vw0j.__unittest_L22_C1() [0x427a9d]\n??:? void tmporr6vw0j.__modtest() [0x427b1c]\n??:? int core.runtime.runModuleUnitTests().__foreachbody2(object.ModuleInfo*) [0x42bac3]\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)).__lambda2(immutable(object.ModuleInfo*)) [0x42a956]\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))).__foreachbody2(ref rt.sections_elf_shared.DSO) [0x42fae9]\n??:? int rt.sections_elf_shared.DSO.opApply(scope int delegate(ref rt.sections_elf_shared.DSO)) [0x42ff98]\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))) [0x42fa75]\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)) [0x42a92d]\n??:? runModuleUnitTests [0x42b899]\n??:? void rt.dmain2._d_run_main(int, char**, extern (C) int function(char[][])*).runAll() [0x4281ec]\n??:? void rt.dmain2._d_r",
      "stdout": "",
      "timestamp": 1660164103
    },
    {
      "exit_code": 1,
      "program": "import std.typecons;\nimport std.math;\n/*\n\n    Given a positive integer n, return the count of the numbers of n-digit\n    positive integers that start or end with 1.\n    \n*/\nlong starts_one_ends(long n) \n{\n    long result = 0;\n    if (n == 1)\n        return 1;\n    else if (n == 2)\n        return 10;\n    else\n    {\n        result = starts_one_ends(n - 1) + starts_one_ends(n - 2);\n        return result;\n    }\n}\nunittest\n{\n    alias candidate = starts_one_ends;\n\n    assert(candidate(1L) == 1L);\n    assert(candidate(2L) == 18L);\n    assert(candidate(3L) == 180L);\n    assert(candidate(4L) == 1800L);\n    assert(candidate(5L) == 18000L);\n}\nvoid main(){}",
      "status": "Exception",
      "stderr": "core.exception.AssertError@/tmp/tmporr6vw0j.d(27): unittest failure\n----------------\n??:? _d_unittestp [0x427d9d]\n??:? void tmporr6vw0j.__unittest_L22_C1() [0x427a9d]\n??:? void tmporr6vw0j.__modtest() [0x427b1c]\n??:? int core.runtime.runModuleUnitTests().__foreachbody2(object.ModuleInfo*) [0x42bac3]\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)).__lambda2(immutable(object.ModuleInfo*)) [0x42a956]\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))).__foreachbody2(ref rt.sections_elf_shared.DSO) [0x42fae9]\n??:? int rt.sections_elf_shared.DSO.opApply(scope int delegate(ref rt.sections_elf_shared.DSO)) [0x42ff98]\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))) [0x42fa75]\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)) [0x42a92d]\n??:? runModuleUnitTests [0x42b899]\n??:? void rt.dmain2._d_run_main(int, char**, extern (C) int function(char[][])*).runAll() [0x4281ec]\n??:? void rt.dmain2._d_r",
      "stdout": "",
      "timestamp": 1660164103
    },
    {
      "exit_code": 1,
      "program": "import std.typecons;\nimport std.math;\n/*\n\n    Given a positive integer n, return the count of the numbers of n-digit\n    positive integers that start or end with 1.\n    \n*/\nlong starts_one_ends(long n) \n{\n    if (n == 1)\n        return 1;\n    else if (n == 2)\n        return 10;\n    else\n    {\n        long result = 0;\n        for (long i = 1; i < n; i++)\n        {\n            result += starts_one_ends(i) * pow(10, n - i);\n        }\n        result += pow(10, n - 1);\n        return result;\n    }\n}\nunittest\n{\n    alias candidate = starts_one_ends;\n\n    assert(candidate(1L) == 1L);\n    assert(candidate(2L) == 18L);\n    assert(candidate(3L) == 180L);\n    assert(candidate(4L) == 1800L);\n    assert(candidate(5L) == 18000L);\n}\nvoid main(){}",
      "status": "Exception",
      "stderr": "core.exception.AssertError@/tmp/tmpsafgf2yc.d(31): unittest failure\n----------------\n??:? _d_unittestp [0x427ecd]\n??:? void tmpsafgf2yc.__unittest_L26_C1() [0x427b19]\n??:? void tmpsafgf2yc.__modtest() [0x427c50]\n??:? int core.runtime.runModuleUnitTests().__foreachbody2(object.ModuleInfo*) [0x42bbf3]\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)).__lambda2(immutable(object.ModuleInfo*)) [0x42aa86]\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))).__foreachbody2(ref rt.sections_elf_shared.DSO) [0x42fc19]\n??:? int rt.sections_elf_shared.DSO.opApply(scope int delegate(ref rt.sections_elf_shared.DSO)) [0x4300c8]\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))) [0x42fba5]\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)) [0x42aa5d]\n??:? runModuleUnitTests [0x42b9c9]\n??:? void rt.dmain2._d_run_main(int, char**, extern (C) int function(char[][])*).runAll() [0x42831c]\n??:? void rt.dmain2._d_r",
      "stdout": "",
      "timestamp": 1660164105
    },
    {
      "exit_code": 1,
      "program": "import std.typecons;\nimport std.math;\n/*\n\n    Given a positive integer n, return the count of the numbers of n-digit\n    positive integers that start or end with 1.\n    \n*/\nlong starts_one_ends(long n) \n{\n    long result = 0;\n    long max = pow(10, n);\n    for (long i = 1; i < max; i++) {\n        string s = to!string(i);\n        if (s[0] == '1' || s[$-1] == '1') {\n            result++;\n        }\n    }\n    return result;\n}\nunittest\n{\n    alias candidate = starts_one_ends;\n\n    assert(candidate(1L) == 1L);\n    assert(candidate(2L) == 18L);\n    assert(candidate(3L) == 180L);\n    assert(candidate(4L) == 1800L);\n    assert(candidate(5L) == 18000L);\n}\nvoid main(){}",
      "status": "SyntaxError",
      "stderr": "/tmp/tmp6qv769ld.d(14): Error: template instance `to!string` template `to` is not defined, did you mean No?\nFailed: [\"dmd\", \"-unittest\", \"-v\", \"-o-\", \"/tmp/tmp6qv769ld.d\", \"-I/tmp\"]\n",
      "stdout": "",
      "timestamp": 1660164105
    },
    {
      "exit_code": 1,
      "program": "import std.typecons;\nimport std.math;\n/*\n\n    Given a positive integer n, return the count of the numbers of n-digit\n    positive integers that start or end with 1.\n    \n*/\nlong starts_one_ends(long n) \n{\n    long count = 0;\n    long start = 1;\n    long end = 1;\n    for (long i = 1; i < n; i++) {\n        start *= 10;\n        end *= 10;\n    }\n    count += start;\n    count += end;\n    count += (start - 1) * (n - 2) * 9;\n    return count;\n}\nunittest\n{\n    alias candidate = starts_one_ends;\n\n    assert(candidate(1L) == 1L);\n    assert(candidate(2L) == 18L);\n    assert(candidate(3L) == 180L);\n    assert(candidate(4L) == 1800L);\n    assert(candidate(5L) == 18000L);\n}\nvoid main(){}",
      "status": "Exception",
      "stderr": "core.exception.AssertError@/tmp/tmpfx3w39q_.d(27): unittest failure\n----------------\n??:? _d_unittestp [0x427dc5]\n??:? void tmpfx3w39q_.__unittest_L23_C1() [0x427aa8]\n??:? void tmpfx3w39q_.__modtest() [0x427b48]\n??:? int core.runtime.runModuleUnitTests().__foreachbody2(object.ModuleInfo*) [0x42baeb]\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)).__lambda2(immutable(object.ModuleInfo*)) [0x42a97e]\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))).__foreachbody2(ref rt.sections_elf_shared.DSO) [0x42fb11]\n??:? int rt.sections_elf_shared.DSO.opApply(scope int delegate(ref rt.sections_elf_shared.DSO)) [0x42ffc0]\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))) [0x42fa9d]\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)) [0x42a955]\n??:? runModuleUnitTests [0x42b8c1]\n??:? void rt.dmain2._d_run_main(int, char**, extern (C) int function(char[][])*).runAll() [0x428214]\n??:? void rt.dmain2._d_r",
      "stdout": "",
      "timestamp": 1660164104
    },
    {
      "exit_code": 1,
      "program": "import std.typecons;\nimport std.math;\n/*\n\n    Given a positive integer n, return the count of the numbers of n-digit\n    positive integers that start or end with 1.\n    \n*/\nlong starts_one_ends(long n) \n{\n    long result = 0;\n    long start = 1;\n    long end = 1;\n    for (long i = 0; i < n; i++) {\n        start *= 10;\n        end *= 10;\n    }\n    start /= 10;\n    end -= 1;\n    result = end - start + 1;\n    return result;\n}\nunittest\n{\n    alias candidate = starts_one_ends;\n\n    assert(candidate(1L) == 1L);\n    assert(candidate(2L) == 18L);\n    assert(candidate(3L) == 180L);\n    assert(candidate(4L) == 1800L);\n    assert(candidate(5L) == 18000L);\n}\nvoid main(){}",
      "status": "Exception",
      "stderr": "core.exception.AssertError@/tmp/tmpnlgkerhj.d(27): unittest failure\n----------------\n??:? _d_unittestp [0x427dad]\n??:? void tmpnlgkerhj.__unittest_L23_C1() [0x427a90]\n??:? void tmpnlgkerhj.__modtest() [0x427b30]\n??:? int core.runtime.runModuleUnitTests().__foreachbody2(object.ModuleInfo*) [0x42bad3]\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)).__lambda2(immutable(object.ModuleInfo*)) [0x42a966]\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))).__foreachbody2(ref rt.sections_elf_shared.DSO) [0x42faf9]\n??:? int rt.sections_elf_shared.DSO.opApply(scope int delegate(ref rt.sections_elf_shared.DSO)) [0x42ffa8]\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))) [0x42fa85]\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)) [0x42a93d]\n??:? runModuleUnitTests [0x42b8a9]\n??:? void rt.dmain2._d_run_main(int, char**, extern (C) int function(char[][])*).runAll() [0x4281fc]\n??:? void rt.dmain2._d_r",
      "stdout": "",
      "timestamp": 1660164103
    },
    {
      "exit_code": 1,
      "program": "import std.typecons;\nimport std.math;\n/*\n\n    Given a positive integer n, return the count of the numbers of n-digit\n    positive integers that start or end with 1.\n    \n*/\nlong starts_one_ends(long n) \n{\n    long result = 0;\n    long start = 1;\n    long end = 1;\n    for (long i = 0; i < n; i++) {\n        start *= 10;\n        end *= 10;\n    }\n    start /= 10;\n    end -= 1;\n    result = end - start + 1;\n    return result;\n}\nunittest\n{\n    alias candidate = starts_one_ends;\n\n    assert(candidate(1L) == 1L);\n    assert(candidate(2L) == 18L);\n    assert(candidate(3L) == 180L);\n    assert(candidate(4L) == 1800L);\n    assert(candidate(5L) == 18000L);\n}\nvoid main(){}",
      "status": "Exception",
      "stderr": "core.exception.AssertError@/tmp/tmpnlgkerhj.d(27): unittest failure\n----------------\n??:? _d_unittestp [0x427dad]\n??:? void tmpnlgkerhj.__unittest_L23_C1() [0x427a90]\n??:? void tmpnlgkerhj.__modtest() [0x427b30]\n??:? int core.runtime.runModuleUnitTests().__foreachbody2(object.ModuleInfo*) [0x42bad3]\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)).__lambda2(immutable(object.ModuleInfo*)) [0x42a966]\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))).__foreachbody2(ref rt.sections_elf_shared.DSO) [0x42faf9]\n??:? int rt.sections_elf_shared.DSO.opApply(scope int delegate(ref rt.sections_elf_shared.DSO)) [0x42ffa8]\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))) [0x42fa85]\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)) [0x42a93d]\n??:? runModuleUnitTests [0x42b8a9]\n??:? void rt.dmain2._d_run_main(int, char**, extern (C) int function(char[][])*).runAll() [0x4281fc]\n??:? void rt.dmain2._d_r",
      "stdout": "",
      "timestamp": 1660164103
    },
    {
      "exit_code": 1,
      "program": "import std.typecons;\nimport std.math;\n/*\n\n    Given a positive integer n, return the count of the numbers of n-digit\n    positive integers that start or end with 1.\n    \n*/\nlong starts_one_ends(long n) \n{\n    long result = 0;\n    long start = 1;\n    long end = 1;\n    for (long i = 0; i < n; i++) {\n        start *= 10;\n        end *= 10;\n    }\n    start /= 10;\n    end -= 1;\n    result = end - start + 1;\n    return result;\n}\nunittest\n{\n    alias candidate = starts_one_ends;\n\n    assert(candidate(1L) == 1L);\n    assert(candidate(2L) == 18L);\n    assert(candidate(3L) == 180L);\n    assert(candidate(4L) == 1800L);\n    assert(candidate(5L) == 18000L);\n}\nvoid main(){}",
      "status": "Exception",
      "stderr": "core.exception.AssertError@/tmp/tmpnlgkerhj.d(27): unittest failure\n----------------\n??:? _d_unittestp [0x427dad]\n??:? void tmpnlgkerhj.__unittest_L23_C1() [0x427a90]\n??:? void tmpnlgkerhj.__modtest() [0x427b30]\n??:? int core.runtime.runModuleUnitTests().__foreachbody2(object.ModuleInfo*) [0x42bad3]\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)).__lambda2(immutable(object.ModuleInfo*)) [0x42a966]\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))).__foreachbody2(ref rt.sections_elf_shared.DSO) [0x42faf9]\n??:? int rt.sections_elf_shared.DSO.opApply(scope int delegate(ref rt.sections_elf_shared.DSO)) [0x42ffa8]\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))) [0x42fa85]\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)) [0x42a93d]\n??:? runModuleUnitTests [0x42b8a9]\n??:? void rt.dmain2._d_run_main(int, char**, extern (C) int function(char[][])*).runAll() [0x4281fc]\n??:? void rt.dmain2._d_r",
      "stdout": "",
      "timestamp": 1660164103
    },
    {
      "exit_code": 1,
      "program": "import std.typecons;\nimport std.math;\n/*\n\n    Given a positive integer n, return the count of the numbers of n-digit\n    positive integers that start or end with 1.\n    \n*/\nlong starts_one_ends(long n) \n{\n    long result = 0;\n    if (n == 1)\n        return 1;\n    else if (n == 2)\n        return 10;\n    else if (n == 3)\n        return 100;\n    else if (n == 4)\n        return 1000;\n    else if (n == 5)\n        return 10000;\n    else if (n == 6)\n        return 100000;\n    else if (n == 7)\n        return 1000000;\n    else if (n == 8)\n        return 10000000;\n    else if (n == 9)\n        return 100000000;\n    else if (n == 10)\n        return 1000000000;\n    else if (n == 11)\n        return 10000000000;\n    else if (n == 12)\n        return 100000000000;\n    else if (n == 13)\n        return 1000000000000;\n    else if (n == 14)\n        return 10000000000000;\n    else if (n == 15)\n        return 100000000000000;\n    else if (n == 16)\n        return 1000000000000000;\n    else if (n == 17)\n        return 10000000000000000;\n    else if (n == 18)\n        return 100000000000000000;\n    else if (n == 19)\n        return 1000000000000000000;\n    else if (n == 20)\n        return 10000000000000000000;\n    else if (n == 21)\n        return 100000000000000000000;\n    else if (n == 22)\n        return 1000000000000000000000;\n    else if (n == 23)\n        return 10000000000000000000000;\n    else if (n == 24)\n        return 100000000000000000000000;\n    else if (n == 25)\n        return 1000000000000000000000000;\n    else if (n == 26)\n        return 10000000000000000000000000;\n    else if (n == 27)\n        return 100000000000000000000000000;\n    else if (n == 28)\n        return 1000000000000000000000000000;\n    else if (n == 29)\n        return 10000000000000000000000000000;\n    else if (n == 30)\n        return 100000000000000000000000000000;\n    else if (n == 31)\n        return 1000000000000000000000000000000;\n    else if (n == 32)\n        return 10000000000000000000000000000000;\n    else\nunittest\n{\n    alias candidate = starts_one_ends;\n\n    assert(candidate(1L) == 1L);\n    assert(candidate(2L) == 18L);\n    assert(candidate(3L) == 180L);\n    assert(candidate(4L) == 1800L);\n    assert(candidate(5L) == 18000L);\n}\nvoid main(){}",
      "status": "SyntaxError",
      "stderr": "/tmp/tmpf9jggamg.d(51): Error: signed integer overflow\n/tmp/tmpf9jggamg.d(53): Error: integer overflow\n/tmp/tmpf9jggamg.d(55): Error: integer overflow\n/tmp/tmpf9jggamg.d(57): Error: integer overflow\n/tmp/tmpf9jggamg.d(59): Error: integer overflow\n/tmp/tmpf9jggamg.d(61): Error: integer overflow\n/tmp/tmpf9jggamg.d(63): Error: integer overflow\n/tmp/tmpf9jggamg.d(65): Error: integer overflow\n/tmp/tmpf9jggamg.d(67): Error: integer overflow\n/tmp/tmpf9jggamg.d(69): Error: integer overflow\n/tmp/tmpf9jggamg.d(71): Error: integer overflow\n/tmp/tmpf9jggamg.d(73): Error: integer overflow\n/tmp/tmpf9jggamg.d(75): Error: integer overflow\n/tmp/tmpf9jggamg.d(77): Error: found `unittest` instead of statement\nFailed: [\"dmd\", \"-unittest\", \"-v\", \"-o-\", \"/tmp/tmpf9jggamg.d\", \"-I/tmp\"]\n",
      "stdout": "",
      "timestamp": 1660164103
    },
    {
      "exit_code": 1,
      "program": "import std.typecons;\nimport std.math;\n/*\n\n    Given a positive integer n, return the count of the numbers of n-digit\n    positive integers that start or end with 1.\n    \n*/\nlong starts_one_ends(long n) \n{\n    long count = 0;\n    long start = 1;\n    long end = 1;\n    for (long i = 0; i < n; i++) {\n        start *= 10;\n        end *= 10;\n    }\n    start /= 10;\n    end -= 1;\n    count = end - start + 1;\n    return count;\n}\nunittest\n{\n    alias candidate = starts_one_ends;\n\n    assert(candidate(1L) == 1L);\n    assert(candidate(2L) == 18L);\n    assert(candidate(3L) == 180L);\n    assert(candidate(4L) == 1800L);\n    assert(candidate(5L) == 18000L);\n}\nvoid main(){}",
      "status": "Exception",
      "stderr": "core.exception.AssertError@/tmp/tmpb8pq1bx5.d(27): unittest failure\n----------------\n??:? _d_unittestp [0x427dad]\n??:? void tmpb8pq1bx5.__unittest_L23_C1() [0x427a90]\n??:? void tmpb8pq1bx5.__modtest() [0x427b30]\n??:? int core.runtime.runModuleUnitTests().__foreachbody2(object.ModuleInfo*) [0x42bad3]\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)).__lambda2(immutable(object.ModuleInfo*)) [0x42a966]\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))).__foreachbody2(ref rt.sections_elf_shared.DSO) [0x42faf9]\n??:? int rt.sections_elf_shared.DSO.opApply(scope int delegate(ref rt.sections_elf_shared.DSO)) [0x42ffa8]\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))) [0x42fa85]\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)) [0x42a93d]\n??:? runModuleUnitTests [0x42b8a9]\n??:? void rt.dmain2._d_run_main(int, char**, extern (C) int function(char[][])*).runAll() [0x4281fc]\n??:? void rt.dmain2._d_r",
      "stdout": "",
      "timestamp": 1660164103
    },
    {
      "exit_code": 1,
      "program": "import std.typecons;\nimport std.math;\n/*\n\n    Given a positive integer n, return the count of the numbers of n-digit\n    positive integers that start or end with 1.\n    \n*/\nlong starts_one_ends(long n) \n{\n    long count = 0;\n    long start = 1;\n    long end = 1;\n    for (long i = 1; i < n; i++) {\n        start *= 10;\n        end *= 10;\n    }\n    count += start;\n    count += end;\n    count += (start - 1) * (n - 2) * 9;\n    return count;\n}\nunittest\n{\n    alias candidate = starts_one_ends;\n\n    assert(candidate(1L) == 1L);\n    assert(candidate(2L) == 18L);\n    assert(candidate(3L) == 180L);\n    assert(candidate(4L) == 1800L);\n    assert(candidate(5L) == 18000L);\n}\nvoid main(){}",
      "status": "Exception",
      "stderr": "core.exception.AssertError@/tmp/tmpfx3w39q_.d(27): unittest failure\n----------------\n??:? _d_unittestp [0x427dc5]\n??:? void tmpfx3w39q_.__unittest_L23_C1() [0x427aa8]\n??:? void tmpfx3w39q_.__modtest() [0x427b48]\n??:? int core.runtime.runModuleUnitTests().__foreachbody2(object.ModuleInfo*) [0x42baeb]\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)).__lambda2(immutable(object.ModuleInfo*)) [0x42a97e]\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))).__foreachbody2(ref rt.sections_elf_shared.DSO) [0x42fb11]\n??:? int rt.sections_elf_shared.DSO.opApply(scope int delegate(ref rt.sections_elf_shared.DSO)) [0x42ffc0]\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))) [0x42fa9d]\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)) [0x42a955]\n??:? runModuleUnitTests [0x42b8c1]\n??:? void rt.dmain2._d_run_main(int, char**, extern (C) int function(char[][])*).runAll() [0x428214]\n??:? void rt.dmain2._d_r",
      "stdout": "",
      "timestamp": 1660164104
    },
    {
      "exit_code": 1,
      "program": "import std.typecons;\nimport std.math;\n/*\n\n    Given a positive integer n, return the count of the numbers of n-digit\n    positive integers that start or end with 1.\n    \n*/\nlong starts_one_ends(long n) \n{\n    long count = 0;\n    long start = 1;\n    long end = 1;\n    for (long i = 1; i < n; i++) {\n        start *= 10;\n        end *= 10;\n    }\n    end += 1;\n    for (long i = start; i < end; i++) {\n        if (i % 10 == 1) {\n            count++;\n        }\n    }\n    return count;\n}\nunittest\n{\n    alias candidate = starts_one_ends;\n\n    assert(candidate(1L) == 1L);\n    assert(candidate(2L) == 18L);\n    assert(candidate(3L) == 180L);\n    assert(candidate(4L) == 1800L);\n    assert(candidate(5L) == 18000L);\n}\nvoid main(){}",
      "status": "Exception",
      "stderr": "core.exception.AssertError@/tmp/tmpkdy6jw0_.d(31): unittest failure\n----------------\n??:? _d_unittestp [0x427dd5]\n??:? void tmpkdy6jw0_.__unittest_L26_C1() [0x427ad5]\n??:? void tmpkdy6jw0_.__modtest() [0x427b54]\n??:? int core.runtime.runModuleUnitTests().__foreachbody2(object.ModuleInfo*) [0x42bafb]\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)).__lambda2(immutable(object.ModuleInfo*)) [0x42a98e]\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))).__foreachbody2(ref rt.sections_elf_shared.DSO) [0x42fb21]\n??:? int rt.sections_elf_shared.DSO.opApply(scope int delegate(ref rt.sections_elf_shared.DSO)) [0x42ffd0]\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))) [0x42faad]\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)) [0x42a965]\n??:? runModuleUnitTests [0x42b8d1]\n??:? void rt.dmain2._d_run_main(int, char**, extern (C) int function(char[][])*).runAll() [0x428224]\n??:? void rt.dmain2._d_r",
      "stdout": "",
      "timestamp": 1660164103
    },
    {
      "exit_code": 1,
      "program": "import std.typecons;\nimport std.math;\n/*\n\n    Given a positive integer n, return the count of the numbers of n-digit\n    positive integers that start or end with 1.\n    \n*/\nlong starts_one_ends(long n) \n{\n    long result = 0;\n    if (n == 1)\n        return 1;\n    else if (n == 2)\n        return 10;\n    else if (n == 3)\n        return 100;\n    else if (n == 4)\n        return 1000;\n    else if (n == 5)\n        return 10000;\n    else if (n == 6)\n        return 100000;\n    else if (n == 7)\n        return 1000000;\n    else if (n == 8)\n        return 10000000;\n    else if (n == 9)\n        return 100000000;\n    else if (n == 10)\n        return 1000000000;\n    else if (n == 11)\n        return 10000000000;\n    else if (n == 12)\n        return 100000000000;\n    else if (n == 13)\n        return 1000000000000;\n    else if (n == 14)\n        return 10000000000000;\n    else if (n == 15)\n        return 100000000000000;\n    else if (n == 16)\n        return 1000000000000000;\n    else if (n == 17)\n        return 10000000000000000;\n    else if (n == 18)\n        return 100000000000000000;\n    else if (n == 19)\n        return 1000000000000000000;\n    else if (n == 20)\n        return 10000000000000000000;\n    else if (n == 21)\n        return 100000000000000000000;\n    else if (n == 22)\n        return 1000000000000000000000;\n    else if (n == 23)\n        return 10000000000000000000000;\n    else if (n == 24)\n        return 100000000000000000000000;\n    else if (n == 25)\n        return 1000000000000000000000000;\n    else if (n == 26)\n        return 10000000000000000000000000;\n    else if (n == 27)\n        return 100000000000000000000000000;\n    else if (n == 28)\n        return 1000000000000000000000000000;\n    else if (n == 29)\n        return 10000000000000000000000000000;\n    else if (n == 30)\n        return 100000000000000000000000000000;\n    else if (n == 31)\n        return 1000000000000000000000000000000;\n    else if (n == 32)\n        return 10000000000000000000000000000000;\n    else\nunittest\n{\n    alias candidate = starts_one_ends;\n\n    assert(candidate(1L) == 1L);\n    assert(candidate(2L) == 18L);\n    assert(candidate(3L) == 180L);\n    assert(candidate(4L) == 1800L);\n    assert(candidate(5L) == 18000L);\n}\nvoid main(){}",
      "status": "SyntaxError",
      "stderr": "/tmp/tmpf9jggamg.d(51): Error: signed integer overflow\n/tmp/tmpf9jggamg.d(53): Error: integer overflow\n/tmp/tmpf9jggamg.d(55): Error: integer overflow\n/tmp/tmpf9jggamg.d(57): Error: integer overflow\n/tmp/tmpf9jggamg.d(59): Error: integer overflow\n/tmp/tmpf9jggamg.d(61): Error: integer overflow\n/tmp/tmpf9jggamg.d(63): Error: integer overflow\n/tmp/tmpf9jggamg.d(65): Error: integer overflow\n/tmp/tmpf9jggamg.d(67): Error: integer overflow\n/tmp/tmpf9jggamg.d(69): Error: integer overflow\n/tmp/tmpf9jggamg.d(71): Error: integer overflow\n/tmp/tmpf9jggamg.d(73): Error: integer overflow\n/tmp/tmpf9jggamg.d(75): Error: integer overflow\n/tmp/tmpf9jggamg.d(77): Error: found `unittest` instead of statement\nFailed: [\"dmd\", \"-unittest\", \"-v\", \"-o-\", \"/tmp/tmpf9jggamg.d\", \"-I/tmp\"]\n",
      "stdout": "",
      "timestamp": 1660164103
    },
    {
      "exit_code": 1,
      "program": "import std.typecons;\nimport std.math;\n/*\n\n    Given a positive integer n, return the count of the numbers of n-digit\n    positive integers that start or end with 1.\n    \n*/\nlong starts_one_ends(long n) \n{\n    long count = 0;\n    for (long i = 1; i <= n; i++) \n    {\n        count += pow(10, i - 1);\n    }\n    return count;\n}\nunittest\n{\n    alias candidate = starts_one_ends;\n\n    assert(candidate(1L) == 1L);\n    assert(candidate(2L) == 18L);\n    assert(candidate(3L) == 180L);\n    assert(candidate(4L) == 1800L);\n    assert(candidate(5L) == 18000L);\n}\nvoid main(){}",
      "status": "Exception",
      "stderr": "core.exception.AssertError@/tmp/tmp5cfujjz8.d(23): unittest failure\n----------------\n??:? _d_unittestp [0x427e85]\n??:? void tmp5cfujjz8.__unittest_L18_C1() [0x427ad1]\n??:? void tmp5cfujjz8.__modtest() [0x427c08]\n??:? int core.runtime.runModuleUnitTests().__foreachbody2(object.ModuleInfo*) [0x42bbab]\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)).__lambda2(immutable(object.ModuleInfo*)) [0x42aa3e]\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))).__foreachbody2(ref rt.sections_elf_shared.DSO) [0x42fbd1]\n??:? int rt.sections_elf_shared.DSO.opApply(scope int delegate(ref rt.sections_elf_shared.DSO)) [0x430080]\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))) [0x42fb5d]\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)) [0x42aa15]\n??:? runModuleUnitTests [0x42b981]\n??:? void rt.dmain2._d_run_main(int, char**, extern (C) int function(char[][])*).runAll() [0x4282d4]\n??:? void rt.dmain2._d_r",
      "stdout": "",
      "timestamp": 1660164105
    },
    {
      "exit_code": 1,
      "program": "import std.typecons;\nimport std.math;\n/*\n\n    Given a positive integer n, return the count of the numbers of n-digit\n    positive integers that start or end with 1.\n    \n*/\nlong starts_one_ends(long n) \n{\n    if (n == 1) \n        return 2;\n    if (n == 2) \n        return 3;\n    return starts_one_ends(n - 1) + starts_one_ends(n - 2);\n}\nunittest\n{\n    alias candidate = starts_one_ends;\n\n    assert(candidate(1L) == 1L);\n    assert(candidate(2L) == 18L);\n    assert(candidate(3L) == 180L);\n    assert(candidate(4L) == 1800L);\n    assert(candidate(5L) == 18000L);\n}\nvoid main(){}",
      "status": "Exception",
      "stderr": "core.exception.AssertError@/tmp/tmpx1d7gnim.d(21): unittest failure\n----------------\n??:? _d_unittestp [0x427d9d]\n??:? void tmpx1d7gnim.__unittest_L17_C1() [0x427a7c]\n??:? void tmpx1d7gnim.__modtest() [0x427b1c]\n??:? int core.runtime.runModuleUnitTests().__foreachbody2(object.ModuleInfo*) [0x42bac3]\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)).__lambda2(immutable(object.ModuleInfo*)) [0x42a956]\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))).__foreachbody2(ref rt.sections_elf_shared.DSO) [0x42fae9]\n??:? int rt.sections_elf_shared.DSO.opApply(scope int delegate(ref rt.sections_elf_shared.DSO)) [0x42ff98]\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))) [0x42fa75]\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)) [0x42a92d]\n??:? runModuleUnitTests [0x42b899]\n??:? void rt.dmain2._d_run_main(int, char**, extern (C) int function(char[][])*).runAll() [0x4281ec]\n??:? void rt.dmain2._d_r",
      "stdout": "",
      "timestamp": 1660164105
    },
    {
      "exit_code": 1,
      "program": "import std.typecons;\nimport std.math;\n/*\n\n    Given a positive integer n, return the count of the numbers of n-digit\n    positive integers that start or end with 1.\n    \n*/\nlong starts_one_ends(long n) \n{\n    if (n == 1) return 2;\n    if (n == 2) return 4;\n    if (n == 3) return 6;\n    if (n == 4) return 10;\n    if (n == 5) return 16;\n    if (n == 6) return 26;\n    if (n == 7) return 42;\n    if (n == 8) return 68;\n    if (n == 9) return 110;\n    if (n == 10) return 178;\n    if (n == 11) return 288;\n    if (n == 12) return 466;\n    if (n == 13) return 754;\n    if (n == 14) return 1220;\n    if (n == 15) return 1974;\n    if (n == 16) return 3194;\n    if (n == 17) return 5168;\n    if (n == 18) return 8362;\n    if (n == 19) return 13530;\n    if (n == 20) return 21892;\n    if (n == 21) return 35422;\n    if (n == 22) return 57314;\n    if (n == 23) return 92736;\n    if (n == 24) return 150050;\n    if (n == 25) return 242786;\n    if (n == 26) return 392836;\n    if (n == 27) return 635622;\n    if (n == 28) return 1028458;\n    if (n == 29) return 1664080;\n    if (n == 30) return 2692538;\n    if (n == 31) return 4356618;\n    if (n == 32) return 7049156;\n    if (n == 33) return 11405774;\n    if (n == 34) return 18454930;\n    if (n == 35) return 29860704;\n    if (n == 36) return 48315634;\n    if (n == 37) return 78176338;\n    if (n == 38) return 126491971;\n    if (n == 39) return 204668309;\n    if (n == 40) return 331160280;\n    if (n == 41) return 535828591;\n    if (n == 42\nunittest\n{\n    alias candidate = starts_one_ends;\n\n    assert(candidate(1L) == 1L);\n    assert(candidate(2L) == 18L);\n    assert(candidate(3L) == 180L);\n    assert(candidate(4L) == 1800L);\n    assert(candidate(5L) == 18000L);\n}\nvoid main(){}",
      "status": "SyntaxError",
      "stderr": "/tmp/tmp1nbzq_a4.d(53): Error: found `unittest` when expecting `)`\n/tmp/tmp1nbzq_a4.d(63): Error: found `End of File` when expecting `}` following compound statement\nFailed: [\"dmd\", \"-unittest\", \"-v\", \"-o-\", \"/tmp/tmp1nbzq_a4.d\", \"-I/tmp\"]\n",
      "stdout": "",
      "timestamp": 1660164104
    },
    {
      "exit_code": 1,
      "program": "import std.typecons;\nimport std.math;\n/*\n\n    Given a positive integer n, return the count of the numbers of n-digit\n    positive integers that start or end with 1.\n    \n*/\nlong starts_one_ends(long n) \n{\n    long count = 0;\n    long max = pow(10, n);\n    long min = pow(10, n - 1);\n    foreach(i; min .. max) {\n        if(i % 10 == 1 || i / 10 == 1) {\n            count++;\n        }\n    }\n    return count;\n}\nunittest\n{\n    alias candidate = starts_one_ends;\n\n    assert(candidate(1L) == 1L);\n    assert(candidate(2L) == 18L);\n    assert(candidate(3L) == 180L);\n    assert(candidate(4L) == 1800L);\n    assert(candidate(5L) == 18000L);\n}\nvoid main(){}",
      "status": "Exception",
      "stderr": "core.exception.AssertError@/tmp/tmprbjx3dlf.d(27): unittest failure\n----------------\n??:? _d_unittestp [0x427ecd]\n??:? void tmprbjx3dlf.__unittest_L21_C1() [0x427b3c]\n??:? void tmprbjx3dlf.__modtest() [0x427c50]\n??:? int core.runtime.runModuleUnitTests().__foreachbody2(object.ModuleInfo*) [0x42bbf3]\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)).__lambda2(immutable(object.ModuleInfo*)) [0x42aa86]\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))).__foreachbody2(ref rt.sections_elf_shared.DSO) [0x42fc19]\n??:? int rt.sections_elf_shared.DSO.opApply(scope int delegate(ref rt.sections_elf_shared.DSO)) [0x4300c8]\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))) [0x42fba5]\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)) [0x42aa5d]\n??:? runModuleUnitTests [0x42b9c9]\n??:? void rt.dmain2._d_run_main(int, char**, extern (C) int function(char[][])*).runAll() [0x42831c]\n??:? void rt.dmain2._d_r",
      "stdout": "",
      "timestamp": 1660164105
    },
    {
      "exit_code": 1,
      "program": "import std.typecons;\nimport std.math;\n/*\n\n    Given a positive integer n, return the count of the numbers of n-digit\n    positive integers that start or end with 1.\n    \n*/\nlong starts_one_ends(long n) \n{\n    long count = 0;\n    long start = 1;\n    long end = 1;\n    for (long i = 0; i < n; i++) {\n        start *= 10;\n        end *= 10;\n    }\n    start /= 10;\n    end -= 1;\n    count = end - start + 1;\n    return count;\n}\nunittest\n{\n    alias candidate = starts_one_ends;\n\n    assert(candidate(1L) == 1L);\n    assert(candidate(2L) == 18L);\n    assert(candidate(3L) == 180L);\n    assert(candidate(4L) == 1800L);\n    assert(candidate(5L) == 18000L);\n}\nvoid main(){}",
      "status": "Exception",
      "stderr": "core.exception.AssertError@/tmp/tmpb8pq1bx5.d(27): unittest failure\n----------------\n??:? _d_unittestp [0x427dad]\n??:? void tmpb8pq1bx5.__unittest_L23_C1() [0x427a90]\n??:? void tmpb8pq1bx5.__modtest() [0x427b30]\n??:? int core.runtime.runModuleUnitTests().__foreachbody2(object.ModuleInfo*) [0x42bad3]\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)).__lambda2(immutable(object.ModuleInfo*)) [0x42a966]\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))).__foreachbody2(ref rt.sections_elf_shared.DSO) [0x42faf9]\n??:? int rt.sections_elf_shared.DSO.opApply(scope int delegate(ref rt.sections_elf_shared.DSO)) [0x42ffa8]\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))) [0x42fa85]\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)) [0x42a93d]\n??:? runModuleUnitTests [0x42b8a9]\n??:? void rt.dmain2._d_run_main(int, char**, extern (C) int function(char[][])*).runAll() [0x4281fc]\n??:? void rt.dmain2._d_r",
      "stdout": "",
      "timestamp": 1660164103
    },
    {
      "exit_code": 1,
      "program": "import std.typecons;\nimport std.math;\n/*\n\n    Given a positive integer n, return the count of the numbers of n-digit\n    positive integers that start or end with 1.\n    \n*/\nlong starts_one_ends(long n) \n{\n    if (n == 1)\n        return 2;\n    else if (n == 2)\n        return 3;\n    else\n        return starts_one_ends(n - 1) + starts_one_ends(n - 2);\n}\nunittest\n{\n    alias candidate = starts_one_ends;\n\n    assert(candidate(1L) == 1L);\n    assert(candidate(2L) == 18L);\n    assert(candidate(3L) == 180L);\n    assert(candidate(4L) == 1800L);\n    assert(candidate(5L) == 18000L);\n}\nvoid main(){}",
      "status": "Exception",
      "stderr": "core.exception.AssertError@/tmp/tmpiscpwzr8.d(22): unittest failure\n----------------\n??:? _d_unittestp [0x427d9d]\n??:? void tmpiscpwzr8.__unittest_L18_C1() [0x427a7c]\n??:? void tmpiscpwzr8.__modtest() [0x427b1c]\n??:? int core.runtime.runModuleUnitTests().__foreachbody2(object.ModuleInfo*) [0x42bac3]\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)).__lambda2(immutable(object.ModuleInfo*)) [0x42a956]\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))).__foreachbody2(ref rt.sections_elf_shared.DSO) [0x42fae9]\n??:? int rt.sections_elf_shared.DSO.opApply(scope int delegate(ref rt.sections_elf_shared.DSO)) [0x42ff98]\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))) [0x42fa75]\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)) [0x42a92d]\n??:? runModuleUnitTests [0x42b899]\n??:? void rt.dmain2._d_run_main(int, char**, extern (C) int function(char[][])*).runAll() [0x4281ec]\n??:? void rt.dmain2._d_r",
      "stdout": "",
      "timestamp": 1660164104
    },
    {
      "exit_code": 1,
      "program": "import std.typecons;\nimport std.math;\n/*\n\n    Given a positive integer n, return the count of the numbers of n-digit\n    positive integers that start or end with 1.\n    \n*/\nlong starts_one_ends(long n) \n{\n    long count = 0;\n    long start = 1;\n    long end = 1;\n    for (long i = 1; i < n; i++) {\n        start *= 10;\n        end *= 10;\n    }\n    for (long i = start; i < end; i++) {\n        if (i % 10 == 1 || i / start == 1) {\n            count++;\n        }\n    }\n    return count;\n}\nunittest\n{\n    alias candidate = starts_one_ends;\n\n    assert(candidate(1L) == 1L);\n    assert(candidate(2L) == 18L);\n    assert(candidate(3L) == 180L);\n    assert(candidate(4L) == 1800L);\n    assert(candidate(5L) == 18000L);\n}\nvoid main(){}",
      "status": "Exception",
      "stderr": "core.exception.AssertError@/tmp/tmp6pump9e0.d(29): unittest failure\n----------------\n??:? _d_unittestp [0x427ddd]\n??:? void tmp6pump9e0.__unittest_L25_C1() [0x427ac0]\n??:? void tmp6pump9e0.__modtest() [0x427b60]\n??:? int core.runtime.runModuleUnitTests().__foreachbody2(object.ModuleInfo*) [0x42bb03]\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)).__lambda2(immutable(object.ModuleInfo*)) [0x42a996]\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))).__foreachbody2(ref rt.sections_elf_shared.DSO) [0x42fb29]\n??:? int rt.sections_elf_shared.DSO.opApply(scope int delegate(ref rt.sections_elf_shared.DSO)) [0x42ffd8]\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))) [0x42fab5]\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)) [0x42a96d]\n??:? runModuleUnitTests [0x42b8d9]\n??:? void rt.dmain2._d_run_main(int, char**, extern (C) int function(char[][])*).runAll() [0x42822c]\n??:? void rt.dmain2._d_r",
      "stdout": "",
      "timestamp": 1660164105
    },
    {
      "exit_code": 1,
      "program": "import std.typecons;\nimport std.math;\n/*\n\n    Given a positive integer n, return the count of the numbers of n-digit\n    positive integers that start or end with 1.\n    \n*/\nlong starts_one_ends(long n) \n{\n    long count = 0;\n    long start = 1;\n    long end = 1;\n    for (long i = 0; i < n; i++) {\n        start *= 10;\n        end *= 10;\n    }\n    start /= 10;\n    end -= 1;\n    count = end - start + 1;\n    return count;\n}\nunittest\n{\n    alias candidate = starts_one_ends;\n\n    assert(candidate(1L) == 1L);\n    assert(candidate(2L) == 18L);\n    assert(candidate(3L) == 180L);\n    assert(candidate(4L) == 1800L);\n    assert(candidate(5L) == 18000L);\n}\nvoid main(){}",
      "status": "Exception",
      "stderr": "core.exception.AssertError@/tmp/tmpb8pq1bx5.d(27): unittest failure\n----------------\n??:? _d_unittestp [0x427dad]\n??:? void tmpb8pq1bx5.__unittest_L23_C1() [0x427a90]\n??:? void tmpb8pq1bx5.__modtest() [0x427b30]\n??:? int core.runtime.runModuleUnitTests().__foreachbody2(object.ModuleInfo*) [0x42bad3]\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)).__lambda2(immutable(object.ModuleInfo*)) [0x42a966]\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))).__foreachbody2(ref rt.sections_elf_shared.DSO) [0x42faf9]\n??:? int rt.sections_elf_shared.DSO.opApply(scope int delegate(ref rt.sections_elf_shared.DSO)) [0x42ffa8]\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))) [0x42fa85]\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)) [0x42a93d]\n??:? runModuleUnitTests [0x42b8a9]\n??:? void rt.dmain2._d_run_main(int, char**, extern (C) int function(char[][])*).runAll() [0x4281fc]\n??:? void rt.dmain2._d_r",
      "stdout": "",
      "timestamp": 1660164103
    },
    {
      "exit_code": 1,
      "program": "import std.typecons;\nimport std.math;\n/*\n\n    Given a positive integer n, return the count of the numbers of n-digit\n    positive integers that start or end with 1.\n    \n*/\nlong starts_one_ends(long n) \n{\n    if (n == 1) return 2;\n    long count = 0;\n    long start = 1;\n    long end = 1;\n    for (long i = 1; i < n; i++) {\n        start *= 10;\n        end *= 10;\n    }\n    count += start;\n    count += end;\n    count += (start - 1) * (n - 1);\n    return count;\n}\nunittest\n{\n    alias candidate = starts_one_ends;\n\n    assert(candidate(1L) == 1L);\n    assert(candidate(2L) == 18L);\n    assert(candidate(3L) == 180L);\n    assert(candidate(4L) == 1800L);\n    assert(candidate(5L) == 18000L);\n}\nvoid main(){}",
      "status": "Exception",
      "stderr": "core.exception.AssertError@/tmp/tmpr07tutan.d(28): unittest failure\n----------------\n??:? _d_unittestp [0x427dd5]\n??:? void tmpr07tutan.__unittest_L24_C1() [0x427ab4]\n??:? void tmpr07tutan.__modtest() [0x427b54]\n??:? int core.runtime.runModuleUnitTests().__foreachbody2(object.ModuleInfo*) [0x42bafb]\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)).__lambda2(immutable(object.ModuleInfo*)) [0x42a98e]\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))).__foreachbody2(ref rt.sections_elf_shared.DSO) [0x42fb21]\n??:? int rt.sections_elf_shared.DSO.opApply(scope int delegate(ref rt.sections_elf_shared.DSO)) [0x42ffd0]\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))) [0x42faad]\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)) [0x42a965]\n??:? runModuleUnitTests [0x42b8d1]\n??:? void rt.dmain2._d_run_main(int, char**, extern (C) int function(char[][])*).runAll() [0x428224]\n??:? void rt.dmain2._d_r",
      "stdout": "",
      "timestamp": 1660164105
    },
    {
      "exit_code": 1,
      "program": "import std.typecons;\nimport std.math;\n/*\n\n    Given a positive integer n, return the count of the numbers of n-digit\n    positive integers that start or end with 1.\n    \n*/\nlong starts_one_ends(long n) \n{\n    long count = 0;\n    long start = 1;\n    long end = 1;\n    for (long i = 1; i < n; i++) {\n        start *= 10;\n        end *= 10;\n    }\n    count += start;\n    count += end;\n    count += (start - 1) * (n - 2) * 9;\n    return count;\n}\nunittest\n{\n    alias candidate = starts_one_ends;\n\n    assert(candidate(1L) == 1L);\n    assert(candidate(2L) == 18L);\n    assert(candidate(3L) == 180L);\n    assert(candidate(4L) == 1800L);\n    assert(candidate(5L) == 18000L);\n}\nvoid main(){}",
      "status": "Exception",
      "stderr": "core.exception.AssertError@/tmp/tmpfx3w39q_.d(27): unittest failure\n----------------\n??:? _d_unittestp [0x427dc5]\n??:? void tmpfx3w39q_.__unittest_L23_C1() [0x427aa8]\n??:? void tmpfx3w39q_.__modtest() [0x427b48]\n??:? int core.runtime.runModuleUnitTests().__foreachbody2(object.ModuleInfo*) [0x42baeb]\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)).__lambda2(immutable(object.ModuleInfo*)) [0x42a97e]\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))).__foreachbody2(ref rt.sections_elf_shared.DSO) [0x42fb11]\n??:? int rt.sections_elf_shared.DSO.opApply(scope int delegate(ref rt.sections_elf_shared.DSO)) [0x42ffc0]\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))) [0x42fa9d]\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)) [0x42a955]\n??:? runModuleUnitTests [0x42b8c1]\n??:? void rt.dmain2._d_run_main(int, char**, extern (C) int function(char[][])*).runAll() [0x428214]\n??:? void rt.dmain2._d_r",
      "stdout": "",
      "timestamp": 1660164104
    },
    {
      "exit_code": 1,
      "program": "import std.typecons;\nimport std.math;\n/*\n\n    Given a positive integer n, return the count of the numbers of n-digit\n    positive integers that start or end with 1.\n    \n*/\nlong starts_one_ends(long n) \n{\n    if (n == 1)\n        return 1;\n    else if (n == 2)\n        return 10;\n    else\n    {\n        long result = 0;\n        for (long i = 1; i < n; i++)\n        {\n            result += starts_one_ends(i);\n        }\n        result *= 9;\n        result += pow(10, n - 1);\n        return result;\n    }\n}\nunittest\n{\n    alias candidate = starts_one_ends;\n\n    assert(candidate(1L) == 1L);\n    assert(candidate(2L) == 18L);\n    assert(candidate(3L) == 180L);\n    assert(candidate(4L) == 1800L);\n    assert(candidate(5L) == 18000L);\n}\nvoid main(){}",
      "status": "Exception",
      "stderr": "core.exception.AssertError@/tmp/tmpt7qz426o.d(32): unittest failure\n----------------\n??:? _d_unittestp [0x427eb5]\n??:? void tmpt7qz426o.__unittest_L27_C1() [0x427b01]\n??:? void tmpt7qz426o.__modtest() [0x427c38]\n??:? int core.runtime.runModuleUnitTests().__foreachbody2(object.ModuleInfo*) [0x42bbdb]\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)).__lambda2(immutable(object.ModuleInfo*)) [0x42aa6e]\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))).__foreachbody2(ref rt.sections_elf_shared.DSO) [0x42fc01]\n??:? int rt.sections_elf_shared.DSO.opApply(scope int delegate(ref rt.sections_elf_shared.DSO)) [0x4300b0]\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))) [0x42fb8d]\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)) [0x42aa45]\n??:? runModuleUnitTests [0x42b9b1]\n??:? void rt.dmain2._d_run_main(int, char**, extern (C) int function(char[][])*).runAll() [0x428304]\n??:? void rt.dmain2._d_r",
      "stdout": "",
      "timestamp": 1660164105
    },
    {
      "exit_code": 1,
      "program": "import std.typecons;\nimport std.math;\n/*\n\n    Given a positive integer n, return the count of the numbers of n-digit\n    positive integers that start or end with 1.\n    \n*/\nlong starts_one_ends(long n) \n{\n    long result = 0;\n    long i = 0;\n    long j = 0;\n    long k = 0;\n    long l = 0;\n    long m = 0;\n    long n_copy = n;\n    long n_copy_copy = n;\n    long n_copy_copy_copy = n;\n    long n_copy_copy_copy_copy = n;\n    long n_copy_copy_copy_copy_copy = n;\n    long n_copy_copy_copy_copy_copy_copy = n;\n    long n_copy_copy_copy_copy_copy_copy_copy = n;\n    long n_copy_copy_copy_copy_copy_copy_copy_copy = n;\n    long n_copy_copy_copy_copy_copy_copy_copy_copy_copy = n;\n    long n_copy_copy_copy_copy_copy_copy_copy_copy_copy_copy = n;\n    long n_copy_copy_copy_copy_copy_copy_copy_copy_copy_copy_copy = n;\n    long n_copy_copy_copy_copy_copy_copy_copy_copy_copy_copy_copy_copy = n;\n    long n_copy_copy_copy_copy_copy_copy_copy_copy_copy_copy_copy_copy_copy = n;\n    long n_copy_copy_copy_copy_copy_copy_copy_copy_copy_copy_copy_copy_copy_copy = n;\n    long n_copy_copy_copy_copy_copy_copy_copy_copy_copy_copy_copy_copy_copy_copy_copy = n;\n    long n_copy_copy_copy_copy_copy_copy_copy_copy_copy_copy_copy_copy_copy_copy_copy_copy = n;\n    long n_copy_copy_copy_copy_copy_copy_copy_copy_copy_copy_copy_copy_copy_copy_copy_copy_copy = n;\n    long n_copy_copy_copy_copy_copy_copy_copy_copy_copy_copy_copy_copy_copy_copy_copy_copy_copy_copy = n;\nunittest\n{\n    alias candidate = starts_one_ends;\n\n    assert(candidate(1L) == 1L);\n    assert(candidate(2L) == 18L);\n    assert(candidate(3L) == 180L);\n    assert(candidate(4L) == 1800L);\n    assert(candidate(5L) == 18000L);\n}\nvoid main(){}",
      "status": "Exception",
      "stderr": "",
      "stdout": "",
      "timestamp": 1660164105
    },
    {
      "exit_code": 1,
      "program": "import std.typecons;\nimport std.math;\n/*\n\n    Given a positive integer n, return the count of the numbers of n-digit\n    positive integers that start or end with 1.\n    \n*/\nlong starts_one_ends(long n) \n{\n    if (n == 1) return 1;\n    if (n == 2) return 2;\n    if (n == 3) return 3;\n    if (n == 4) return 4;\n    if (n == 5) return 5;\n    if (n == 6) return 6;\n    if (n == 7) return 7;\n    if (n == 8) return 8;\n    if (n == 9) return 9;\n    if (n == 10) return 10;\n    if (n == 11) return 11;\n    if (n == 12) return 12;\n    if (n == 13) return 13;\n    if (n == 14) return 14;\n    if (n == 15) return 15;\n    if (n == 16) return 16;\n    if (n == 17) return 17;\n    if (n == 18) return 18;\n    if (n == 19) return 19;\n    if (n == 20) return 20;\n    if (n == 21) return 21;\n    if (n == 22) return 22;\n    if (n == 23) return 23;\n    if (n == 24) return 24;\n    if (n == 25) return 25;\n    if (n == 26) return 26;\n    if (n == 27) return 27;\n    if (n == 28) return 28;\n    if (n == 29) return 29;\n    if (n == 30) return 30;\n    if (n == 31) return 31;\n    if (n == 32) return 32;\n    if (n == 33) return 33;\n    if (n == 34) return 34;\n    if (n == 35) return 35;\n    if (n == 36) return 36;\n    if (n == 37) return 37;\n    if (n == 38) return 38;\n    if (n == 39) return 39;\n    if (n == 40) return 40;\n    if (n == 41) return 41;\n    if (n == 42) return 42;\n    if (n == 43) return 43;\n    if (n == 44) return 44;\n    if (n == 45) return 45;\n    if (n == 46) return 46;\n    if (\nunittest\n{\n    alias candidate = starts_one_ends;\n\n    assert(candidate(1L) == 1L);\n    assert(candidate(2L) == 18L);\n    assert(candidate(3L) == 180L);\n    assert(candidate(4L) == 1800L);\n    assert(candidate(5L) == 18000L);\n}\nvoid main(){}",
      "status": "SyntaxError",
      "stderr": "/tmp/tmpesj_oa4j.d(58): Error: expression expected, not `unittest`\n/tmp/tmpesj_oa4j.d(59): Error: found `{` when expecting `)`\nFailed: [\"dmd\", \"-unittest\", \"-v\", \"-o-\", \"/tmp/tmpesj_oa4j.d\", \"-I/tmp\"]\n",
      "stdout": "",
      "timestamp": 1660164105
    },
    {
      "exit_code": 1,
      "program": "import std.typecons;\nimport std.math;\n/*\n\n    Given a positive integer n, return the count of the numbers of n-digit\n    positive integers that start or end with 1.\n    \n*/\nlong starts_one_ends(long n) \n{\n    long result = 0;\n    long start = 1;\n    long end = 1;\n    for (long i = 0; i < n; i++) {\n        start *= 10;\n        end *= 10;\n    }\n    start /= 10;\n    end -= 1;\n    result = end - start + 1;\n    return result;\n}\nunittest\n{\n    alias candidate = starts_one_ends;\n\n    assert(candidate(1L) == 1L);\n    assert(candidate(2L) == 18L);\n    assert(candidate(3L) == 180L);\n    assert(candidate(4L) == 1800L);\n    assert(candidate(5L) == 18000L);\n}\nvoid main(){}",
      "status": "Exception",
      "stderr": "core.exception.AssertError@/tmp/tmpnlgkerhj.d(27): unittest failure\n----------------\n??:? _d_unittestp [0x427dad]\n??:? void tmpnlgkerhj.__unittest_L23_C1() [0x427a90]\n??:? void tmpnlgkerhj.__modtest() [0x427b30]\n??:? int core.runtime.runModuleUnitTests().__foreachbody2(object.ModuleInfo*) [0x42bad3]\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)).__lambda2(immutable(object.ModuleInfo*)) [0x42a966]\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))).__foreachbody2(ref rt.sections_elf_shared.DSO) [0x42faf9]\n??:? int rt.sections_elf_shared.DSO.opApply(scope int delegate(ref rt.sections_elf_shared.DSO)) [0x42ffa8]\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))) [0x42fa85]\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)) [0x42a93d]\n??:? runModuleUnitTests [0x42b8a9]\n??:? void rt.dmain2._d_run_main(int, char**, extern (C) int function(char[][])*).runAll() [0x4281fc]\n??:? void rt.dmain2._d_r",
      "stdout": "",
      "timestamp": 1660164103
    },
    {
      "exit_code": 1,
      "program": "import std.typecons;\nimport std.math;\n/*\n\n    Given a positive integer n, return the count of the numbers of n-digit\n    positive integers that start or end with 1.\n    \n*/\nlong starts_one_ends(long n) \n{\n    if (n == 1)\n        return 2;\n    else\n        return (long)pow(10, n - 1) + 9 * (long)pow(10, n - 2);\n}\nunittest\n{\n    alias candidate = starts_one_ends;\n\n    assert(candidate(1L) == 1L);\n    assert(candidate(2L) == 18L);\n    assert(candidate(3L) == 180L);\n    assert(candidate(4L) == 1800L);\n    assert(candidate(5L) == 18000L);\n}\nvoid main(){}",
      "status": "SyntaxError",
      "stderr": "/tmp/tmpuqjk6z7d.d(14): Error: C style cast illegal, use `cast(long)pow(10, n - 1)`\n/tmp/tmpuqjk6z7d.d(14): Error: C style cast illegal, use `cast(long)pow(10, n - 2)`\nFailed: [\"dmd\", \"-unittest\", \"-v\", \"-o-\", \"/tmp/tmpuqjk6z7d.d\", \"-I/tmp\"]\n",
      "stdout": "",
      "timestamp": 1660164105
    },
    {
      "exit_code": 1,
      "program": "import std.typecons;\nimport std.math;\n/*\n\n    Given a positive integer n, return the count of the numbers of n-digit\n    positive integers that start or end with 1.\n    \n*/\nlong starts_one_ends(long n) \n{\n    long result = 0;\n    long start = 1;\n    long end = 1;\n    for (long i = 1; i <= n; i++) {\n        start *= 10;\n        end *= 10;\n    }\n    start /= 10;\n    end -= 1;\n    result = end - start + 1;\n    return result;\n}\nunittest\n{\n    alias candidate = starts_one_ends;\n\n    assert(candidate(1L) == 1L);\n    assert(candidate(2L) == 18L);\n    assert(candidate(3L) == 180L);\n    assert(candidate(4L) == 1800L);\n    assert(candidate(5L) == 18000L);\n}\nvoid main(){}",
      "status": "Exception",
      "stderr": "core.exception.AssertError@/tmp/tmpdwdyw_uw.d(27): unittest failure\n----------------\n??:? _d_unittestp [0x427db5]\n??:? void tmpdwdyw_uw.__unittest_L23_C1() [0x427a94]\n??:? void tmpdwdyw_uw.__modtest() [0x427b34]\n??:? int core.runtime.runModuleUnitTests().__foreachbody2(object.ModuleInfo*) [0x42badb]\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)).__lambda2(immutable(object.ModuleInfo*)) [0x42a96e]\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))).__foreachbody2(ref rt.sections_elf_shared.DSO) [0x42fb01]\n??:? int rt.sections_elf_shared.DSO.opApply(scope int delegate(ref rt.sections_elf_shared.DSO)) [0x42ffb0]\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))) [0x42fa8d]\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)) [0x42a945]\n??:? runModuleUnitTests [0x42b8b1]\n??:? void rt.dmain2._d_run_main(int, char**, extern (C) int function(char[][])*).runAll() [0x428204]\n??:? void rt.dmain2._d_r",
      "stdout": "",
      "timestamp": 1660164104
    },
    {
      "exit_code": 1,
      "program": "import std.typecons;\nimport std.math;\n/*\n\n    Given a positive integer n, return the count of the numbers of n-digit\n    positive integers that start or end with 1.\n    \n*/\nlong starts_one_ends(long n) \n{\n    long count = 0;\n    long max = pow(10, n);\n    long min = pow(10, n - 1);\n    foreach(i; min .. max)\n    {\n        if(i % 10 == 1 || i / 10 == 1)\n            count++;\n    }\n    return count;\n}\nunittest\n{\n    alias candidate = starts_one_ends;\n\n    assert(candidate(1L) == 1L);\n    assert(candidate(2L) == 18L);\n    assert(candidate(3L) == 180L);\n    assert(candidate(4L) == 1800L);\n    assert(candidate(5L) == 18000L);\n}\nvoid main(){}",
      "status": "Exception",
      "stderr": "core.exception.AssertError@/tmp/tmp12hpnoio.d(27): unittest failure\n----------------\n??:? _d_unittestp [0x427ecd]\n??:? void tmp12hpnoio.__unittest_L21_C1() [0x427b3c]\n??:? void tmp12hpnoio.__modtest() [0x427c50]\n??:? int core.runtime.runModuleUnitTests().__foreachbody2(object.ModuleInfo*) [0x42bbf3]\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)).__lambda2(immutable(object.ModuleInfo*)) [0x42aa86]\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))).__foreachbody2(ref rt.sections_elf_shared.DSO) [0x42fc19]\n??:? int rt.sections_elf_shared.DSO.opApply(scope int delegate(ref rt.sections_elf_shared.DSO)) [0x4300c8]\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))) [0x42fba5]\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)) [0x42aa5d]\n??:? runModuleUnitTests [0x42b9c9]\n??:? void rt.dmain2._d_run_main(int, char**, extern (C) int function(char[][])*).runAll() [0x42831c]\n??:? void rt.dmain2._d_r",
      "stdout": "",
      "timestamp": 1660164105
    }
  ]
}
name: HumanEval_36_fizz_buzz
language: d
prompt: "import std.typecons;\nimport std.math;\n/*\nReturn the number of times the\
  \ digit 7 appears in integers less than n which are divisible by 11 or 13.\n   \
  \ >>> fizz_buzz(50L)\n    0L\n    >>> fizz_buzz(78L)\n    2L\n    >>> fizz_buzz(79L)\n\
  \    3L\n    \n*/\nlong fizz_buzz(long n) \n"
tests: "unittest\n{\n    alias candidate = fizz_buzz;\n\n    assert(candidate(50L)\
  \ == 0L);\n    assert(candidate(78L) == 2L);\n    assert(candidate(79L) == 3L);\n\
  \    assert(candidate(100L) == 3L);\n    assert(candidate(200L) == 6L);\n    assert(candidate(4000L)\
  \ == 192L);\n    assert(candidate(10000L) == 639L);\n    assert(candidate(100000L)\
  \ == 8026L);\n}\nvoid main(){}"
completions: ["{\n    long count = 0;\n    foreach(i; 0 .. n)\n    {\n        if(i\
    \ % 11 == 0 || i % 13 == 0)\n        {\n            string s = to!string(i);\n\
    \            foreach(c; s)\n            {\n                if(c == '7')\n    \
    \            {\n                    count++;\n                }\n            }\n\
    \        }\n    }\n    return count;\n}", "{\n    long count = 0;\n    for (long\
    \ i = 0; i < n; i++)\n    {\n        if (i % 11 == 0 || i % 13 == 0)\n       \
    \ {\n            string s = to!string(i);\n            foreach (c; s)\n      \
    \      {\n                if (c == '7')\n                {\n                 \
    \   count++;\n                }\n            }\n        }\n    }\n    return count;\n\
    }", "{\n    long count = 0;\n    foreach(i; 0 .. n)\n    {\n        if(i % 11\
    \ == 0 || i % 13 == 0)\n        {\n            string s = to!string(i);\n    \
    \        foreach(c; s)\n            {\n                if(c == '7')\n        \
    \        {\n                    count++;\n                }\n            }\n \
    \       }\n    }\n    return count;\n}", "{\n    long count = 0;\n    foreach(i;\
    \ 0 .. n)\n    {\n        if(i % 11 == 0 || i % 13 == 0)\n        {\n        \
    \    string s = to!string(i);\n            foreach(c; s)\n            {\n    \
    \            if(c == '7')\n                {\n                    count++;\n \
    \               }\n            }\n        }\n    }\n    return count;\n}", "{\n\
    \    long result = 0;\n    foreach(i; 0 .. n)\n    {\n        if(i % 11 == 0 ||\
    \ i % 13 == 0)\n        {\n            string s = to!string(i);\n            foreach(c;\
    \ s)\n            {\n                if(c == '7')\n                {\n       \
    \             result++;\n                }\n            }\n        }\n    }\n\
    \    return result;\n}", "{\n    long count = 0;\n    foreach(i; 0 .. n)\n   \
    \ {\n        if((i % 11 == 0 || i % 13 == 0) && i.to!string.count(\"7\") > 0)\n\
    \        {\n            count++;\n        }\n    }\n    return count;\n}", "{\n\
    \    long count = 0;\n    foreach(i; 0 .. n)\n    {\n        if(i % 11 == 0 ||\
    \ i % 13 == 0)\n        {\n            string s = to!string(i);\n            foreach(c;\
    \ s)\n            {\n                if(c == '7')\n                {\n       \
    \             count++;\n                }\n            }\n        }\n    }\n \
    \   return count;\n}", "{\n    long count = 0;\n    foreach(i; 0 .. n)\n    {\n\
    \        if(i % 11 == 0 || i % 13 == 0)\n        {\n            string s = to!string(i);\n\
    \            foreach(c; s)\n            {\n                if(c == '7')\n    \
    \            {\n                    count++;\n                }\n            }\n\
    \        }\n    }\n    return count;\n}\n/*\nReturn the number of times the digit\
    \ 7 appears in integers less than n which are divisible by 11 or 13.\n    >>>\
    \ fizz_buzz(50L)\n    0L\n    >>> fizz_buzz(78L)\n    2L\n    >>> fizz_buzz(79L)\n\
    \    3L\n    \n*/\nlong fizz_buzz2(long n) \n{\n    long count = 0;\n    foreach(i;\
    \ 0 .. n)\n    {\n        if(i % 11 == 0 || i % 13 == 0)\n        {\n        \
    \    string s = to!string(i);\n            foreach(c; s)\n            {\n    \
    \            if(c == '7')\n                {\n                    count++;\n \
    \               }\n            }\n        }\n    }\n    return count;\n}\n/*\n\
    Return the number of times the digit 7 appears in integers less than n which are\
    \ divisible by 11 or 13.\n    >>> fizz_buzz(50L)\n    0L\n    >>> fizz_buzz(78L)\n\
    \    2L\n    >>> fizz_buzz(79L)\n    3L\n    \n*/\nlong fizz_buzz3(long n) \n\
    {\n    long count = 0;\n    foreach(i; 0 .. n)\n    {\n        if(i % 11 == 0\
    \ || i % 13 == 0)\n        {\n            string s = to!string(i);\n         \
    \   foreach(c; s)\n            {\n                if(c == '7')\n             \
    \   {\n                    count++;\n                }\n            }\n      \
    \  }\n    }\n    return count;\n}\n/*\nReturn the number of times the digit 7\
    \ appears in integers less than n which are divisible by 11 or 13.\n    >>> f",
  "{\n    long count = 0;\n    foreach(i; 0 .. n)\n    {\n        if(i % 11 == 0 ||\
    \ i % 13 == 0)\n        {\n            if(i.to!string.count(\"7\") > 0)\n    \
    \        {\n                count++;\n            }\n        }\n    }\n    return\
    \ count;\n}", "{\n    long result = 0;\n    foreach(i; 0 .. n)\n    {\n      \
    \  if(i % 11 == 0 || i % 13 == 0)\n        {\n            string s = to!string(i);\n\
    \            foreach(c; s)\n            {\n                if(c == '7')\n    \
    \            {\n                    result++;\n                }\n           \
    \ }\n        }\n    }\n    return result;\n}", "{\n    long count = 0;\n    foreach(i;\
    \ 0 .. n)\n    {\n        if(i % 11 == 0 || i % 13 == 0)\n        {\n        \
    \    count += countDigits(i, 7);\n        }\n    }\n    return count;\n}", "{\n\
    \    long count = 0;\n    foreach(i; 1..n)\n    {\n        if(i % 11 == 0 || i\
    \ % 13 == 0)\n        {\n            string s = to!string(i);\n            foreach(c;\
    \ s)\n            {\n                if(c == '7')\n                {\n       \
    \             count++;\n                }\n            }\n        }\n    }\n \
    \   return count;\n}", "{\n    long count = 0;\n    foreach(i; 0 .. n)\n    {\n\
    \        if(i % 11 == 0 || i % 13 == 0)\n        {\n            auto str = to!string(i);\n\
    \            foreach(c; str)\n            {\n                if(c == '7')\n  \
    \              {\n                    count++;\n                }\n          \
    \  }\n        }\n    }\n    return count;\n}", "{\n    long count = 0;\n    foreach(i;\
    \ 0 .. n)\n    {\n        if(i % 11 == 0 || i % 13 == 0)\n        {\n        \
    \    string s = to!string(i);\n            foreach(c; s)\n            {\n    \
    \            if(c == '7')\n                {\n                    count++;\n \
    \               }\n            }\n        }\n    }\n    return count;\n}", "{\n\
    \    long result = 0;\n    foreach(i; 0 .. n)\n    {\n        if(i % 11 == 0 ||\
    \ i % 13 == 0)\n        {\n            auto str = to!string(i);\n            foreach(c;\
    \ str)\n            {\n                if(c == '7')\n                {\n     \
    \               result++;\n                }\n            }\n        }\n    }\n\
    \    return result;\n}", "{\n    long count = 0;\n    foreach(i; 0 .. n)\n   \
    \ {\n        if(i % 11 == 0 || i % 13 == 0)\n        {\n            if(i % 10\
    \ == 7)\n            {\n                count++;\n            }\n            else\
    \ if(i / 10 % 10 == 7)\n            {\n                count++;\n            }\n\
    \            else if(i / 100 % 10 == 7)\n            {\n                count++;\n\
    \            }\n        }\n    }\n    return count;\n}", "{\n    long count =\
    \ 0;\n    foreach(i; 0 .. n)\n    {\n        if(i % 11 == 0 || i % 13 == 0)\n\
    \        {\n            string s = to!string(i);\n            foreach(c; s)\n\
    \            {\n                if(c == '7')\n                {\n            \
    \        count++;\n                }\n            }\n        }\n    }\n    return\
    \ count;\n}", "{\n    long count = 0;\n    for (long i = 0; i < n; i++) \n   \
    \ {\n        if (i % 11 == 0 || i % 13 == 0) \n        {\n            string s\
    \ = to!string(i);\n            foreach (c; s) \n            {\n              \
    \  if (c == '7') \n                {\n                    count++;\n         \
    \       }\n            }\n        }\n    }\n    return count;\n}", "{\n    long\
    \ count = 0;\n    for (long i = 0; i < n; i++) \n    {\n        if (i % 11 ==\
    \ 0 || i % 13 == 0) \n        {\n            count += i.to!string.count(\"7\"\
    );\n        }\n    }\n    return count;\n}", "{\n    long result = 0;\n    foreach(i;\
    \ 0 .. n) \n    {\n        if(i % 11 == 0 || i % 13 == 0) \n        {\n      \
    \      string s = to!string(i);\n            foreach(c; s) \n            {\n \
    \               if(c == '7') \n                {\n                    result++;\n\
    \                }\n            }\n        }\n    }\n    return result;\n}"]
stop_tokens:
- "\n\n"
- "\nvoid"
- "\nbool"
- "\nint"
